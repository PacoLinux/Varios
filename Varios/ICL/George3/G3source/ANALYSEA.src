  15 22FL    #LIS  K0ANALYSEA>K0ALLGEO>K0GREATGEO>K0COMMAND  
  15 22_=    #SEG  ANALYSEA3                    [ BILL IZATT 
  10 23DW                   8HANALYSEA   
   8 23YG    [ THE ENTRY POINTS  
  19 24D6    [     THESE ENTRY POINTS MUST BE KEPT FIXED WITHIN THE SEGMENT  
  12 24XQ          SEGENTRY K1ANALYSEA,QENTRY1   
  12 25CB          SEGENTRY K2ANALYSEA,QENTRY2   
  12 25X2          SEGENTRY K3ANALYSEA,QENTRY3   
   4 26BL    [   
   4 26W=    [   
   8 27*W    SPACE          #20  
   8 27TG    XTEN           #12  
   8 28*6    XALPH          #41  
   8 28SQ    OCT73          #73  
   8 29#B    XLP            #30  
   8 29S2    XRP            #31  
   8 2=?L    QT             #22  
   8 2=R=    MINUS          #35  
   9 2?=W    MINUS1         #77777777
   4 2?QG    #   
  21 2#=6    #           THIS SEGMENT IS ENTERED FROM SEGMENT ANALYSE TO COMPLETE THE
  21 2#PQ    #           IMPLEMENTATION OF THE PARALYSE AND PARANEXT MACROS. THE PARE
  21 2*9B    #           PARAMETER IS SPLIT AT EACH OCCURRENCE OF THE SEPARATOR,OR IF
  21 2*P2    #           NONE SPECIFIED AT EACH END OF PAIRS OF BRACKETS,PARENTHESES 
  21 2B8L    #           QUOTES AND THE COMPONENTS STORED IN THE BLOCK SET UP IN ANAL
  21 2BN=    #           PARALYSE THEN GOES UP; PARANEXT GOES ACROSS TO K5PARAM . K3A
  21 2C7W    #           IS USED BY THE COMMAND PROCESSOR TO DETERMINE PARAMETER TYPE
   5 2CMG    QENTRY1 
  18 2D76          TESTMOVE 7,OK                [BRN IF NO BLOCKS MOVED  
  10 2DLQ          HUNT     3,CPB,CMULTI 
  18 2F6B          LDX   2  FPTR(3)             [ADDRESS OF PARENT BLOCK 
   8 2FL2          BRN      OK1  
   7 2G5L    OK    LDX   2  5
   7 2GK=    OK1   LDX   1  6
   8 2H4W          SMO      FX2  
   8 2HJG          LDX   5  EXT+7
   8 2J46          SMO      FX2  
  16 2JHQ          LDX   7  EXT+4               [LOAD SEPARATOR  
  20 2K3B          BPZ   7  SEP                 [BRANCH IF SEPARATOR SPECIFIED   
   4 2KH2    #   
  13 2L2L    #              NO SEPARATOR SPECIFIED   
   4 2LG=    #   
   7 2L_W          SBN   4  2
  20 2MFG          BZE   4  SCOMP               [BRANCH IF PARAMETER COMPOSITE   
   7 2M_6          SBN   4  1
  20 2NDQ          BNZ   4  XADR                [BRN IF SIMPLE OR PSEUDO-SIMPLE  
   4 2NYB    #   
  18 2PD2    #              QUALIFIED PARAMETER (NO SEPARATOR SPECIFIED) 
   4 2PXL    #   
   7 2QC=    QUAL  SMO      2
  17 2QWW          LDCH  4  0(1)                [TAKE FIRST CHARACTER
  16 2RBG    WHAT  CALL  0  TESTBRAC            [TEST FOR BRACKET
  16 2RW6          BRN      /                   [BRANCH IF NOT   
   7 2S*Q    TFCH  SMO      2
  17 2STB          LDCH  4  0(1)                [TAKE FIRST CHARACTER
   8 2T*2          SMO      FX2  
  16 2TSL          LDX   5  EXT+7               [CHARACTER COUNT 
  20 2W#=          BCT   5  STOCT               [BRANCH IF NOT END OF PARAMETER  
  17 2WRW          CALL  7  STORECH             [STORE LAST CHARACTER
  19 2X?G          BRN      ZEND                [BRANCH TO TERMINATE BLOCK   
   8 2XR6    STOCT SMO      FX2  
  16 2Y=Q          STO   5  EXT+7               [CHARACTER COUNT 
   7 2YQB          BCHX  1  /
  16 2_=2    STOCH CALL  7  STORECH             [STORE CHARACTER 
   7 2_PL          SMO      2
  16 329=          LDCH  4  0(1)                [TAKE A CHARACTER
  19 32NW          STO   1  6                   [POINTER TO THIS CHARACTER   
  16 338G          BCHX  1  /                   [UPDATE POINTER  
  15 33N6          STO   1  APTNECHA(2)         [  AND STORE 
   8 347Q          SMO      FX2  
  21 34MB          LDX   5  EXT+7               [COUNT OF NUMBER OF CHARACTERS IN OLD
  17 3572          BCT   5  NEND                [BRANCH IF NOT END   
  21 35LL          CALL  7  STORECH             [END OF PARAMETER, STORE LAST CHARACT
  19 366=          BRN      ZEND                [BRANCH TO TERMINATE BLOCK   
   8 36KW    NEND  SMO      FX2  
  18 375G          STO   5  EXT+7               [STORE CHARACTER COUNT   
  16 37K6          LDX   0  CPBFSD(3)           [BRACKET COUNT   
   8 384Q          BNZ   0  TBTY 
   8 38JB          SMO      FX1  
   8 3942          TXU   4  SPACE
  19 39HL          BCS      CTB1                [NOT SPACE,CARRY ON AS BEFORE
   7 3=3=          LDN   7  0
  15 3=GW    TNC2  ADN   7  1                   [SPACE COUNT 
   7 3?2G          SMO      2
  16 3?G6          LDCH  4  0(1)                [TAKE NEXT CHAR  
   8 3?_Q          SMO      FX1  
   8 3#FB          TXU   4  SPACE
   8 3#_2          BCS      NMSP 
   7 3*DL          BCHX  1  /
   8 3*Y=          BRN      TNC2 
   9 3BCW    NMSP  CALL  0  TESTBRAC 
  20 3BXG          BRN      XLD                 [NOT BRACKET,SPACES SIGNIFICANT  
   7 3CC6          SBN   7  1
  19 3CWQ          SMO      FX2                 [IS BRACKET,SPACES REDUNDANT 
  20 3DBB          SBS   7  EXT+7               [REDUCE CHAR COUNT BY SPACE COUNT
  17 3DW2          STOZ     4                   [SPACES ARE TRAILINC,
  10 3F*L          STO   1  APTNECHA(2)  
  17 3FT=          CALL  7  TER                 [TERMINATE PARAMETER 
  10 3G#W          LDX   1  APTNECHA(2)  
   8 3GSG          BRN      TFCH 
   4 3H#6    #   
   8 3HRQ    XLD   SMO      FX2  
  21 3J?B          SBS   7  EXT+7               [REDUCE CHARACTER COUNT BY SPACE COUN
   8 3JR2          SMO      FX1  
   8 3K=L          LDX   4  SPACE
   8 3KQ=    XLDA  SMO      FX2  
   8 3L9W          STO   7  EXT+3
  18 3LPG          CALL  7  STORECH             [STO SIGNIFICANT SPACE   
   8 3M96          SMO      FX2  
   8 3MNQ          LDX   7  EXT+3
  20 3N8B          BCT   7  XLDA                [BRN IF SPACE COUNT NOT EXHAUSTED
   7 3NN2          SMO      2
  19 3P7L          LDCH  4  0(1)                [GET NEXT CHAR AFTER SPACE   
   7 3PM=          BCHX  1  /
   8 3Q6W          SMO      FX2  
  16 3QLG          LDX   5  EXT+7               [CHARACTER COUNT 
  20 3R66          BNZ   5  STOCH               [CONTINUE IF COUNT NOT EXHAUSTED 
  17 3RKQ          CALL  7  STORECH             [STO LAST CHARACTER  
   8 3S5B          BRN      ZEND 
   4 3SK2    #   
   9 3T4L    CTB1  CALL  0  TESTBRAC 
  18 3TJ=          BRN      STOCH               [BRANCH IF NOT BRACKET   
  21 3W3W          STO   6  APTNECHA(2)         [IS BRACKET,END OF PARAMETER,SET PTR.
   7 3WHG          LDN   0  1
   8 3X36          SMO      FX2  
  18 3XGQ          ADS   0  EXT+7               [SET CHARACTER COUNT BACK
   7 3Y2B          STOZ     4
  17 3YG2          CALL  7  TER                 [TERMINATE PARAMETER 
  21 3Y_L          LDX   1  APTNECHA(2)         [POINTER TO FIRST CHARACTER OF NEW PA
   8 3_F=          BRN      TFCH 
  21 3_YW    TBTY  CALL  7  TINBRAC             [BRACKET COUNT NON ZERO, TEST FOR BRA
  21 42DG          BRN      STOCH               [BRANCH IF BRACKET COUNT STILL NON ZE
  21 42Y6          CALL  7  STORECH             [END OF PARAMETER, STORE CHARACTER   
   7 43CQ          STOZ     4
  17 43XB          CALL  7  TER                 [TERMINATE PARAMETER 
  21 44C2          LDX   1 APTNECHA(2)          [POINTER TO FIRST CHARACTER OF NEW PA
   8 44WL          SMO      FX2  
  16 45B=          LDX   5  EXT+7               [CHARACTER COUNT 
  19 45TW          CALL  0  XLSPTEST            [ANNIHILATE LEADING SPACES   
   8 46*G          SMO      FX2  
  16 46T6          STO   5  EXT+7               [CHARACTER COUNT 
   8 47#Q          BRN      WHAT 
   4 47SB    #   
  18 48#2    #              COMPOSITE PARAMETER (NO SEPARATOR SPECIFIED) 
   4 48RL    #   
   9 49?=    SCOMP CALL  7  SCOMPOST 
  18 49QW          CALL  0  XLSPTEST            [IGNORE LEADING SPACES   
   8 4==G    NEND1 SMO      FX2  
  16 4=Q6          STO   5  EXT+7               [CHARACTER COUNT 
  17 4?9Q    NENDA CALL  7  STORECH             [STORECH IF NOT SPACE
   8 4?PB          SMO      FX2  
  16 4#92          LDX   5  EXT+7               [CHARACTER COUNT 
  16 4#NL          BCT   5  NEND2               [BRN IF NOT END  
  16 4*8=          BRN      ZEND                [END OF PARAMETER
   7 4*MW    NEND2 BCHX  1  /
   7 4B7G          SMO      2
  16 4BM6          LDCH  4  0(1)                [TAKE A CHARACTER
   8 4C6Q          SMO      FX1  
   8 4CLB          TXU   4  SPACE
  17 4D62          BCS      NEND1               [STORECH IF NOT SPACE
  19 4DKL          STO   1  APTNECHA(2)         [HOLD ADDRESS OF FIRST SPACE 
   7 4F5=          LDN   0  0
  17 4FJW    STWO  ADN   0  1                   [ADD 1 TO SPACE COUNT
   8 4G4G          BCT   5  PLUS2
  19 4GJ6          BRN      ZEND                [BRN IF NO MORE CHARACTERS   
   7 4H3Q    PLUS2 BCHX  1  /
   7 4HHB          SMO      2
  17 4J32          LDCH  4  0(1)                [TAKE NEXT CHARACTER 
   8 4JGL          SMO      FX1  
   8 4K2=          TXU   4  SPACE
  17 4KFW          BCC      STWO                [BRN IF ANOTHER SPACE
  18 4K_G          LDX   1  APTNECHA(2)         [ADDRESS OF FIRST SPACE  
   8 4LF6          SMO      FX2  
  16 4LYQ          STO   5  EXT+7               [CHARACTER COUNT 
   7 4MDB    STSP  SMO      2
   8 4MY2          LDCH  4  0(1) 
   8 4NCL          SMO      FX2  
  15 4NX=          STO   0  EXT+3               [SPACE COUNT 
  18 4PBW          CALL  7  STORECH             [STO SIGNIFICANT SPACE   
   8 4PWG          SMO      FX2  
  15 4QB6          LDX   0  EXT+3               [SPACE COUNT 
  19 4QTQ          BCHX  1  /                   [ADDRESS OF NEXT SPACE IN 1  
  20 4R*B          BCT   0  STSP                [BRN IF SPACE COUNT NOT EXHAUSTED
   4 4RT2    #   
  21 4S#L    XADR  SMO      2                   [ENTRY FOR SIMPLE + PSEUDO-SIMPLE PAR
  20 4SS=          LDCH  4  0(1)                [TAKE NEXT CHARACTER (NON-SPACE) 
  19 4T?W          BRN      NENDA               [BRN TO STORE THIS CHARACTER 
   4 4TRG    #   
  17 4W?6    #              SEPARATOR SPECIFIED (ALL PARAMETER TYPES)
   4 4WQQ    #   
   7 4X=B    SEP   SBN   4  2
  21 4XQ2          BNZ   4  TACH                [BRANCH IF PARAMETER NOT COMPOSITE   
   9 4Y9L          CALL  7  SCOMPOST 
  18 4YP=          CALL  0  XLSPTEST            [IGNORE LEADING SPACES   
   8 4_8W          BRN      TACH 
  18 4_NG    UDMOD BCHX  1  /                   [UPDATE CHARACTER POINTER
   8 5286    TACH  SMO      FX2  
  17 52MQ          STO   5  EXT+7               [STO CHARACTER COUNT 
   7 537B          SMO      2
  16 53M2          LDCH  4  0(1)                [TAKE A CHARACTER
  16 546L          LDX   0  CPBFSD(3)           [BRACKET COUNT   
  16 54L=          BZE   0  TSP                 [BRANCH IF ZERO  
  21 555W          CALL  7  TINBRAC             [BRACKET COUNT NON ZERO, TEST FOR BRA
  16 55KG          BRN      UDCHC               [COUNT NON ZERO  
  15 5656          BRN      UDCHC               [COUNT ZERO  
   4 56JQ    #   
   8 574B    TSP   SMO      FX2  
  17 57J2          TXU   4  EXT+4               [TEST FOR SEPARATOR  
  16 583L          BCS      TLP                 [BRANCH IF NOT   
   7 58H=    SEPR  STOZ     4
  10 592W          STO   1  APTNECHA(2)  
  17 59GG          CALL  7  TER                 [TERMINATE PARAMETER 
  10 5=26          LDX   1  APTNECHA(2)  
   8 5=FQ          SMO      FX2  
  21 5=_B          LDX   5  EXT+7               [LOAD CHARACTER COUNT OF OLD PARAMETE
   7 5?F2          SBN   5  1
  19 5?YL          BZE   5  ZENDA               [END IF NO MORE CHARACTERS   
  18 5#D=          BCHX  1  /                   [UPDATE CHARACTER POINTER
  18 5#XW          CALL  0  XLSPTEST            [IGNORE LEADING SPACES   
   8 5*CG          BRN      TACH 
   4 5*X6    #   
   8 5BBQ    TSPT  SMO      FX1  
   8 5BWB          TXU   4  SPACE
  15 5CB2          BCC      PLUS3               [BRN IF SPACE
   8 5CTL          BRN      UDCHC
   4 5D*=    #   
   7 5DSW    PLUS3 LDN   0  0
   8 5F#G          SMO      FX2  
  16 5FS6          LDX   5  EXT+7               [CHARACTER COUNT 
  15 5G?Q    PLUS4 ADN   0  1                   [SPACE COUNT 
  18 5GRB          SBN   5  1                   [REDUCE CHARACTER COUNT  
  17 5H?2          BZE   5  ZENDA               [COMPOSITE TRAILERS  
   7 5HQL          BCHX  1  /
   7 5J==          SMO      2
  17 5JPW          LDCH  4  0(1)                [TAKE NEXT CHARACTER 
   8 5K9G          SMO      FX1  
   8 5KP6          TXU   4  SPACE
  17 5L8Q          BCC      PLUS4               [BRN IF ANOTHER SPACE
   8 5LNB          SMO      FX2  
  16 5M82          STO   5  EXT+7               [CHARACTER COUNT 
   8 5MML          SMO      FX2  
   8 5N7=          TXU   4  EXT+4
  20 5NLW          BCC      SEPR                [BRN IF SEPARATOR FOLLOWS SPACES 
   8 5P6G          SMO      FX1  
   8 5PL6          LDX   4  SPACE
   8 5Q5Q    XSMO  SMO      FX2  
  15 5QKB          STO   0  EXT+3               [SPACE COUNT 
  15 5R52          CALL  7  STORECH             [STORE SPACE 
   8 5RJL          SMO      FX2  
   8 5S4=          LDX   0  EXT+3
  20 5SHW          BCT   0  XSMO                [BRN IF SPACE COUNT NOT EXHAUSTED
   7 5T3G          SMO      2
  20 5TH6          LDCH  4  0(1)                [TAKE 1ST CHARACTER AFTER SPACES 
  15 5W2Q          STO   4  5                   [PRESERVE X4 
   9 5WGB          CALL  0  TESTBRAC 
   8 5X22          BRN      UDCHC
   7 5XFL          LDX   4  5
   8 5X_=          BRN      UDCHC
   4 5YDW    #   
  16 5YYG    TLP   STO   4  5                   [HOLD CHARACTER  
  16 5_D6          CALL  0  TESTBRAC            [TEST FOR BRACKET
  16 5_XQ          BRN      TSPT                [NOT A BRACKET   
   7 62CB          LDX   4  5
   4 62X2    #   
  16 63BL    UDCHC CALL  7  STORECH             [STORE CHARACTER 
   8 63W=    TEP   SMO      FX2  
  21 64*W          LDX   5  EXT+7               [LOAD CHARACTER COUNT OF OLD PARAMETE
  21 64TG          BCT   5  UDMOD               [BRANCH IF END OF PARAMETER NOT REACH
   4 65*6    #   
  17 65SQ    #              END OF PARAMETER IF SEPARATOR SPECIFIED  
  21 66#B    #              THE CHARACTER IS TESTED FOR BEING A BRACKET BEFORE END   
  20 66S2    #              OF PARAMETER IS TESTED FOR:SHOULD NOT BE TESTED TWICE
   4 67?L    #   
   9 67R=    ZENDA LDX   0  CPBFSD(3)
   8 68=W          BZE   0  ZEND1
   8 68QG          BRN      SUSP 
   4 69=6    #   
  11 69PQ    #              END OF PARAMETER 
   4 6=9B    #   
   4 6=P2    ZEND
  16 6?8L          LDX   0  CPBFSD(3)           [BRACKET COUNT   
   8 6?N=          BZE   0  TESTO
  17 6#7W          CALL  7  TINBRAC             [MATCHING BRACKET ?  
  16 6#MG          BRN      SUSP                [LOOKS SUSPICOUS 
  13 6*76          BRN      ZEND1               [YES 
  16 6*LQ    TESTO CALL  0  TESTBRAC            [OPENING BRACKET?
  13 6B6B          BRN      ZEND1               [NO  
   8 6BL2    SUSP  SMO      FX2  
   8 6C5L          LDX   4  EXT+2
  19 6CK=          BNZ   4  UNPAIR              [ONLY ERROR IF NOT COMPOSITE 
   7 6D4W    ZEND1 NGN   4  1
  21 6DJG          CALL  7  TER                 [TERMINATE LAST PARAMETER & SET END O
   4 6F46    NULP
   9 6FHQ          LDN   7  APARAFIR 
   8 6G3B          SLL   7  12   
   7 6GH2          ADN   7  1
  16 6H2L          STO   7  APTBEPAR(3)         [SET FOR 1ST PASS
  17 6HG=          STO   7  ADNOPARAL(3)        [SET FOR 1ST ANALYSE 
  10 6H_W          STOZ     APTNECHA(2)  
  14 6JFG    #              TEST FOR PARALYSE OR PARANEXT
   8 6J_6    TWCH  SMO      FX2  
   8 6KDQ          LDX   7  EXT+5
   7 6KYB          SETREP OK 
  17 6LD2          BNZ   7  NEXT                [BRANCH IF PARANEXT  
  17 6LXL          UP                           [RETURN IF PARALYSE  
   4 6MC=    NEXT
   8 6MWW          SMO      FX2  
  19 6NBG          STO   7  EXT+7               [SET EXT+7=-1 FOR SPARAPAS   
   7 6NW6    UDAL  NGN   7  1
   8 6P*Q          SMO      FX2  
  20 6PTB          STO   7  EXT+2               [SET ^LOWEST^ ANALEV FOR PARAPASS
  19 6Q*2          ACROSS   PARAM,25            [BRN TO PASS FIRST PARAMETER 
   4 6QSL    #   
  16 6R#=    #              SUBROUTINE TO TERMINATE A PARAMETER  
   4 6RRW    #   
  10 6S?G    TER   LDX   1  APTNECHA(3)  
   7 6SR6          SLC   1  2
   7 6T=Q          ADN   1  3
  19 6TQB          SRL   1  2                   [ROUND TO WHOLE NO. OF WORDS 
  21 6W=2          STO   1  APTNECHA(3)         [STO POINTER TO FIRST WORD OF NEW PAR
  18 6WPL          SBN   1  A1-1                [LOGICAL LENGTH NEEDED   
  21 6X9=          TXL   1  ALOGLEN(3)          [COMPARE WITH ACTUAL LOGICAL LENGTH  
  19 6XNW          BCS      ON                  [BRANCH IF SUFFICIENT CORE   
  10 6Y8G          LDX   6  ALOGLEN(3)   
  21 6YN6          ADN   6  AVELINE             [EXTEND CORE BY AVERAGE LINE LENGTH  
   8 6_7Q          SBX   7  FX1  
   7 6_MB          PHOTO    5
  17 7272          ALTLEN   3,6,CPB,CMULTI      [ INCREASE BLOCK SIZE
  19 72LL          TESTMOVE 5,RES               [BRANCH IF NO BLOCKS MOVED   
  10 736=          HUNT     3,CPB,CMULTI 
  20 73KW    RES   ADX   7  1                   [ RESTORE RETURN ADDRESS (X1=FX1)
   8 745G          BRN      NJOIN
   8 74K6    ON    LDX   1  FX1  
  19 754Q          LDX   2  FX2                 [ X2 WILL BE RESTORED ON EXIT
  19 75JB    NJOIN SMO      APTNECHA(3)         [ POINTER TO NEXT PARAMETER  
  21 7642          STO   4  0(3)                [ZEROISE 1ST WORD OR SET END OF BLOCK
  21 76HL          LDN   6  1                   [ X6=1 => TER S/R.  RESTORE X2 AT END
  20 773=          ADS   6  APARANUM(3)         [ADD 1 TO NUMBER OF PARAMETERS   
  10 776B ...      LDX   6  APARANUM(3)  
   8 779G ...      SBN   6  25   
   9 77#L ...      BPZ   6  TOOMANY  
  17 77CQ ...      LDN   6  1                   [INDICATES TER SUBR  
   4 77GW    #   
  21 782G    #              SUBROUTINE ENTERED HERE BY COMMAND PROCESSOR VIA K3ANALYS
   4 78G6    #   
   5 78_Q    SCENT   
  10 79FB          STO   3  ACOMMUNE3(2) 
  10 79_2          ADX   3  APTBEPAR(3)  
   9 7=DL          STO   7  AWORK1(2)
  16 7=Y=          LDX   7  0(3)                [CHARACTER COUNT 
  20 7?CW          BNG   7  UP                  [BRN IF NO MORE PARAMETERS (CP)  
  21 7?XG          ADN   3  1                   [EVALUATE ADDRESS OF 1ST CHARACTER   
   8 7#C6          BRN   PTYPE1  
   4 7#WQ    [   
   5 7*BB    QENTRY2 
  10 7*W2          LDX   0  ACOMMUNE1(2) 
   8 7B*L          TESTMOVE 0,NMV
  10 7BT=          LDX   3  ACOMMUNE2(2) 
   8 7C#W          SLL   3  12   
   8 7CSG          MHUNTX   3,3  
  17 7D#6          STO   3  ACOMMUNE3(2)        [NEW START ADDRESS   
   8 7DRQ          BRN      XFND 
  10 7F?B    NMV   LDX   3  ACOMMUNE3(2) 
  20 7FR2    XFND  ADX   3  ACOMMUNE4(2)        [ABSOLUTE PTR. TO 1ST CHARACTER  
  17 7G=L          LDX   7  ACOMMUNE5(2)        [COUNT OF CHARACTERS 
  17 7GQ=          NGN   6  1                   [INDICATE PTYPE MACRO
   5 7H9W    PTYPE1  
  15 7HPG          STOZ     5                   [SET 'SIMPLE'
  18 7J96          BZE   7  UUU                 [BRN IF NULL PARAMETER   
  17 7JNQ          LDCH  4  0(3)                [GET 1ST CHARACTER   
   9 7K8B          TXU   4  XLP(1)   
  18 7KN2          BCC      XLPA                [BRN IF LEFT PARENTHESIS 
   8 7L7L          TXU   4  QT(1)
  15 7LM=          BCC      QTA                 [BRN IF QUOTE
   9 7M6W          TXU   4  XRP(1)   
   8 7MLG          BCC      WQUAL
   8 7N66          BRN      STINT
   5 7NKQ    NEXTZ   
  17 7P5B          LDCH  4  0(3)                [GET NEXT CHARACTER  
   9 7PK2          TXU   4  XRP(1)   
  16 7Q4L          BCC      WQUAL               [BRN IF QUALIFIED
   9 7QJ=          TXU   4  XLP(1)   
  16 7R3W          BCC      WQUAL               [BRN IF QUALIFIED
   8 7RHG          TXU   4  QT(1)
  16 7S36          BCC      WQUAL               [BRN0IF QUALIFIED
  17 7SGQ          BNZ   5  NPSEV               [BRN IF NOT 'SIMPLE' 
   5 7T2B    STINT   
   9 7TG2          TXL   4  OCT73(1) 
  19 7T_L          BCC      PSEV                [BRN IF NOT 'SIMPLE' ANY MORE
   9 7WF=          TXL   4  XALPH(1) 
  16 7WYW          BCC      NPSEV               [BRN IF LETTER   
   9 7XDG          TXL   4  XTEN(1)  
  15 7XY6          BCS      NPSEV               [BRN IF DIGIT
   9 7YCQ          TXU   4  SPACE(1) 
  15 7YXB          BCC      NPSEV               [BRN IF SPACE
   9 7_C2          TXU   4  MINUS(1) 
   8 7_WL          BCC      NPSEV
  17 82B=    PSEV  LDN   5  1                   [SET 'PSENDO-SIMPLE' 
   7 82TW    NPSEV BCHX  3  /
   8 83*G          BCT   7  NEXTZ
   4 83T6    #   
  20 84#Q    #     END   OF PARAMETER: INSERT TYPE AND LENGTH IN SPECIFIED WORD  
   4 84SB    UUU 
   8 85#2          SLL   5  12   
  17 85RL          BPZ   6  STORETYPE2          [BRN IF ANALYSE/CP   
  10 86?=          ADX   5  ACOMMUNE5(2) 
  10 86QW          LDX   3  ACOMMUNE3(2) 
  10 87=G          ADX   3  ACOMMUNE6(2) 
   8 87Q6          STO   5  0(3) 
   5 889Q          UP
   6 88PB    STORETYPE2  
  10 8992          LDX   3  ACOMMUNE3(2) 
   9 89NL          SMO   APTBEPAR(3) 
  18 8=8=          ORS   5  0(3)                [INSERT PARAMETER TYPE   
   9 8=MW          LDX   7  AWORK1(2)
   8 8?7G          BZE   6  XIT70
  21 8?M6          LDX   2  FPTR(3)             [ RESTORE X2 FOR EXIT FROM TER S/R   
  10 8#6Q          LDX   0  APTNECHA(3)  
  10 8#LB          STO   0  APTBEPAR(3)  
   7 8*62          ADN   0  1
  10 8*KL          STO   0  APTNECHA(3)  
   5 8B5=    XIT70   
   7 8BJW          EXIT  7  0
   4 8C4G    XLPA
  21 8CJ6          SBN   7  2                   [WE WANT TO TEST ALL BUT LAST CHAR.  
   8 8D3Q          BNG   7  WQUAL
   8 8DHB          BZE   7  XLPE 
   7 8F32    XLPB  BCHX  3  /
   8 8FGL          LDCH  4  0(3) 
   9 8G2=          TXU   4  XLP(1)   
   8 8GFW          BCC      XLPC 
   9 8G_G          TXU   4  XRP(1)   
   8 8HF6          BCS      XLPB1
   8 8HYQ          BNZ   7  WQUAL
   8 8JDB          BRN      WCOMP
   5 8JY2    XLPB1   
   8 8KCL          BCT   7  XLPB 
   4 8KX=    XLPE
   7 8LBW          BCHX  3  /
   8 8LWG          LDCH  4  0(3) 
   9 8MB6          TXU   4  XRP(1)   
   8 8MTQ          BCC      WCOMP
   8 8N*B          BRN      WQUAL
   8 8NT2    XLPC  BCT   7  XLPC1
   8 8P#L          BRN      XLPE 
  16 8PS=    XLPC1 LDN   0  1            [SORT OF DELIMITER COUNT
   7 8Q?W    XLPD  BCHX  3  /
   8 8QRG          LDCH  4  0(3) 
   9 8R?6          TXU   4  XRP(1)   
   8 8RQQ          BCS      NOTRP
   7 8S=B          SBN   0  1
   8 8SQ2          BNG   0  WQUAL
   5 8T9L    NOTRP   
   9 8TP=          TXU   4  XLP(1)   
   8 8W8W          BCS      NOTLP
   7 8WNG          ADN   0  1
   8 8X86    NOTLP BCT   7  XLPD 
   8 8XMQ          BZE   0  XLPE 
   8 8Y7B          BRN      WQUAL
   4 8YM2    QTA 
   7 8_6L          SBN   7  1
  17 8_L=          BZE   7  WQUAL               [ONLY ONE CHARACTER  
  21 925W          SLC   3  2                   [ABSOLUTE POINTER TO LAST CHARACTER  
   7 92KG          ADX   3  7
   7 9356          SRC   3  2
  20 93JQ          LDCH  7  0(3)                [X7HOLDS LAST CHAR OF PARAMETER  
   8 944B          TXU   7  QT(1)
  21 94J2          BCC      WCOMP               [IF TERMINAL CHARS BOTH QUOTES,COMPOS
   5 953L    WQUAL   
  16 95H=          LDN   5  3                   [SET QUALIFIED   
   8 962W          BRN      UUU  
   5 96GG    WCOMP   
  16 9726          LDN   5  2                   [SET COMPOSITE   
   8 97FQ          BRN      UUU  
   4 97_B    #   
  21 98F2    #              SUBROUTINE TO TEST FOR BRACKET WHEN BRACKET COUNT ZERO   
   4 98YL    #   
   5 99D=    TESTBRAC
   8 99XW          SMO      FX1  
  15 9=CG          TXU   4  XLP                 [TEST FOR (  
  16 9=X6          BCS      STLB                [BRANCH IF NOT   
   8 9?BQ          SLL   4  12   
   8 9?WB          SMO      FX1  
  16 9#B2          ORX   4  XRP                 [SET ( AS BRACKET
   8 9#TL          BRN      STOB 
   8 9**=    STLB  SMO      FX1  
  15 9*SW          TXU   4  QT                  [TEST FOR ^  
  15 9B#G          BCC      SAP                 [BRANCH IF IS
  17 9BS6          EXIT  0  0                   [NOT'BRACKET',EXIT   
   8 9C?Q    SAP   SLL   4  12   
   8 9CRB          SMO      FX1  
  16 9D?2          ORX   4  QT                  [SET ^ AS BRACKET
   8 9DQL    STOB  SMO      FX2  
  17 9F==          STO   4  EXT+6               [STORE BRACKET TYPE  
   7 9FPW          LDN   4  1
  18 9G9G          ADS   4  CPBFSD(3)           [ADD 1 TO BRACKET COUNT  
  14 9GP6          EXIT  0  1                   [RETURN  
   4 9H8Q    #   
  21 9HNB    #              SUBROUTINE TO TEST FOR BRACKET WHEN BRACKET COUNT IS NON 
   4 9J82    #   
   5 9JML    TINBRAC 
   8 9K7=          SMO      FX2  
   8 9KLW          LDX   5  EXT+6
  17 9L6G          SRL   56 12                  [ISOLATE LEFT BRACKET
  18 9LL6          SRL   6  12                  [ISOLATE RIGHT BRACKET   
  16 9M5Q          TXU   4  6                   [TEST FOR 'CLOSE'
  16 9MKB          BCS      TOP                 [BRANCH IF NOT   
  20 9N52          SBN   0  1                   [SUBTRACT 1 FROM BRACKET COUNT   
   9 9NJL          STO   0  CPBFSD(3)
  20 9P4=          BNZ   0  ZRET                [BRANCH IF BRACKET COUNT NON-ZERO
  19 9PHW          EXIT  7  1                   [RETURN, BRACKET COUNT ZERO  
  16 9Q3G    TOP   TXU   4  5                   [TEST FOR 'OPEN' 
  16 9QH6          BCS      ZRET                [BRANCH IF NOT   
  18 9R2Q          ADN   0  1                   [ADD 1 TO BRACKET COUNT  
   9 9RGB          STO   0  CPBFSD(3)
  20 9S22    ZRET  EXIT  7  0                   [RETURN, BRACKET COUNT NON ZERO  
   4 9SFL    #   
  16 9S_=    #              SUBROUTINE TO IGNORE LEADING SPACES  
   4 9TDW    #   
   5 9TYG    XLSPTEST
   7 9WD6          SMO      2
  15 9WXQ          LDCH  4  0(1)                [TAKE A CHAR 
   8 9XCB          SMO      FX1  
   8 9XX2          TXU   4  SPACE
  15 9YBL          BCC      TNC                 [BRN IF SPACE
  16 9YW=          EXIT  0  0                   [EXIT NO SPACES  
  20 9_*W    TNC   SBN   5  1                   [REDUCE CHAR COUNT FOR EACH SPACE
  17 9_TG          BZE   5  ZEND                [END IF NO MORE CHARS
  15 =2*6          BCHX  1  /                   [1 IS UPDATED
   7 =2SQ          SMO      2
  16 =3#B          LDCH  4  0(1)                [TAKE NEXT CHAR  
   8 =3S2          SMO      FX1  
   8 =4?L          TXU   4  SPACE
  17 =4R=          BCC      TNC                 [BRN IF ANOTHER SPACE
   7 =5=W          EXIT  0  0
   4 =5QG    #   
  15 =6=6    #              SUBROUTINE TO STORE A CHARACTER  
   4 =6PQ    #   
   5 =79B    STORECH 
  10 =7P2          STO   1  APTNECHA(2)  
   7 =88L          LDN   0  1
  21 =8N=          LDX   5  APTBEPAR(3)         [POINTER TO BEGINNING OF PARAMETER   
   7 =97W          SMO      5
  21 =9MG          ADS   0  0(3)                [ADD 1 TO PARAMETER CHARACTER COUNT  
  19 ==76          LDX   5  APTNECHA(3)         [POINTER TO NEXT CHARACTER   
   7 ==LQ          SLL   5  2
  18 =?6B          SRL   5  2                   [NUMBER OF WORDS IN BLOCK
  19 =?L2          SBN   5  A1-1                [ADD 1 AND SUBTRACT RED TAPE 
  10 =#5L          TXL   5  ALOGLEN(3)   
  19 =#K=          BCS      NCOR                [BRANCH IF SUFFICIENT CORE   
  10 =*4W          LDX   5  ALOGLEN(3)   
  21 =*JG          ADN   5  AVELINE             [EXTEND CORE BY AVERAGE LINE LENGTH  
   8 =B46          SBX   7  FX1  
   8 =BHQ          SMO      FX2  
  17 =C3B          STO   7  EXT+1               [STORE RETURN ADDRESS
  19 =CH2          STO   2  7                   [STORE ADDRESS OF OLD BLOCK  
   7 =D2L          PHOTO    6
  17 =DG=          ALTLEN   3,5                 [INCREASE BLOCK SIZE 
   7 =D_W          LDX   2  7
  19 =FFG          TESTMOVE 6,NSER              [BRANCH IF NO BLOCKS MOVED   
  10 =F_6          HUNT     3,CPB,CMULTI 
   9 =GDQ          LDX   2  FPTR(3)  
   8 =GYB    NSER  SMO      FX2  
   8 =HD2          LDX   7  EXT+1
  16 =HXL          ADX   7  FX1                 [RETURN ADDRESS  
  19 =JC=    NCOR  LDX   1  APTNECHA(3)         [POINTER TO NEXT CHARACTER   
   7 =JWW          SMO      3
  16 =KBG          DCH   4  0(1)                [STORE CHARACTER 
  16 =KW6          BCHX  1  /                   [UPDATE POINTER  
  15 =L*Q          STO   1  APTNECHA(3)         [  AND STORE 
  10 =LTB          LDX   1  APTNECHA(2)  
  14 =M*2          EXIT  7  0                   [RETURN  
   4 =MSL    #   
  21 =N#=    #     SUBROUTINE TO CHECK THAT A 'COMPOSITE' PARAMETER IS IN FACT INCLUD
   9 =NRW    #     IN A BRACKET PAIR 
   4 =P?G    #   
   5 =PR6    SCOMPOST
   8 =Q=Q          SMO      FX2  
  17 =QQB          STOZ     EXT+2               ['COMPOSITE MARKER   
   7 =R=2          SMO      2
   8 =RPL          LDCH  4  0(1) 
  18 =S9=          STOZ     CPBFSD(3)           [ZEROISE BRACKET COUNT   
  19 =SNW          SBN   5  2                   [REDUCE CHARACTER COUNT BY 2 
  19 =T8G          BNZ   5  UNUL                [BRN IF NOT NULL PARAMETER   
  13 =TN6          STOZ     APARAFIR(3)         [SET 
  13 =W7Q          LDN   4  1                   [RED 
  13 =WMB          STO   4  APARANUM(3)         [TAPE
  14 =X72          NGS   4  APARAFIR+1(3)       [WORDS   
   8 =XLL          BRN      NULP 
   4 =Y6=    UNUL
   7 =YKW          BCHX  1  /
   7 =_5G          EXIT  7  0
   4 =_K6    #   
  17 ?24Q    #     ROUTINE ENTERED IF AN UNPAIRED BRACKET ENCOUNTERED
  18 ?27* ...#     OR TOO MANY PARAMETERS FOUND ON SPLITTING A PARAMETER 
   4 ?29Y ...#   
   5 ?2#H ...TOOMANY 
   9 ?2C6 ...      SETREP   TOOMANY  
   8 ?2FP ...      BRN      XFREE
   5 ?2JB    UNPAIR  
   9 ?2PJ ...      SETREP   UNPAIR   
   5 ?2WQ ...XFREE   
  10 ?342          MFREE    CPB,CMULTI   
   5 ?43=          UP
   4 ?4GW    [   
  12 ?52G    [     ENTRY FROM COMMAND PROCESSOR  
   5 ?5G6    QENTRY3 
  10 ?5_Q          MHUNTW   3,CPB,CALAS  
   9 ?6FB          LDN   4  APARAFIR 
  10 ?6_2          STO   4  APTBEPAR(3)  
  15 ?7DL          LDN   6  0                   [INDICATE C/P
   6 ?7Y=    SCENTCALL   
  17 ?8CW          CALL  7  SCENT               [SET PARAMETER TYPE  
  10 ?8XG          SMO      APTBEPAR(3)  
   8 ?9C6          LDX   7  0(3) 
   8 ?9WQ          ANDN  7  #7777
   7 ?=BB          ADN   7  7
   7 ?=W2          SRL   7  2
  10 ??*L          ADS   7  APTBEPAR(3)  
   9 ??T=          BRN      SCENTCALL
   4 ?##W    UP  
   5 ?#SG          UP
  11 ?*#6          MENDAREA 30,K99ANALYSEA   
   4 ?*RQ    #END
   8 ____ ...57322164000300000000
