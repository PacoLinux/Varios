  15 22FL ...#SEG  IDFPER                       [LEN WAGSTAFF
  13 22PD ...# COPYRIGHT INTERNATIONAL COMPUTERS 1982
   7 22_=    #OPT  K0IDFPER=0
  11 23DW    #LIS  K0IDFPER>K0PERI>K0ALLGEO  
   9 23YG                   8HIDFPER 
   4 24D6    #   
  21 24XQ    #     THIS SEGMENT PERFORMS THE REQUIREMENTS OF ISPER AND GETPER IN THE 
  19 25CB    #     IDF. OOR GETPER ON ASLOW OUTPUT OUTPHERAL A GPERI,GPROPNOS
  20 25X2    #     BLOCK IS SET MP CONTAINIOG A COPY OF THE ATTRIBUTION CELL FOR 
  10 26BL    #     THE DEVICE ALLOCATED  
   4 26W=    #   
   4 27*W    #   
  10 27TG    #              ENTRY POINT  
   4 28*6    #   
  11 28SQ          SEGENTRY K1IDFPER,X1IDFPER
   4 29#B    #   
   4 29LL ...#   
   9 29T9 ...XMASK1         #36650200
   9 2=3S ...XMASK2         #30000000
   6 2=6C ...#UNS FL7502 
   9 2=92 ...XMASK3         #34000000
   4 2=?L    #   
   4 2=QF ...#   
   5 2=R=    SMHUNTW 
  15 2?=W    # SUBROUTINE HUNTS THE APERI/APERIDF BLOCK ON X2
   7 2?QG    #     LINK IN X1
  11 2#=6          MHUNTW   2,APERI,APERIDF  
   8 2#PQ          BRN      (1)  
   4 2*9B    #   
   5 2*P2    TCLOSE  
  21 2B8L    # SUBROUTINE CLOSES THE IDF AND FREES THE FILE/FRRB BLOCKS. IF GETPER   
  21 2BN=    # AND A DEVICE WAS ALLOCATED TO THE CURRENT ACTIVITY, THE APERIDF BLOCK 
  20 2C7W    # IS CONVERTED INTO GOUT/GPROPNOS BLOCK AND THE FLAG G IS SET IN THE
  13 2CMG    # ACTLF; OTHERWISE THE APERIDF IS FREED.
   7 2D76    #     LINK IN X7
   8 2DLQ          SBX   7  FX1  
   8 2F6B          LDX   2  FX2  
  17 2FL2          HUNTW    3,APERI,APERIDF     [LOCATE APERIDF BLOCK
   9 2G5L          LDCH  0  ATYPE(2) 
   9 2GK=          SBN   0  ACTLF/64 
  16 2H4W          BNZ   0  NOTACTLF            [BR IF NOT ACTLF 
  10 2HJG          LDN   1  JOBRING(2)   
  16 2J46          POINTACT OUT,2               [ACTLF SCHEDULER 
   9 2JHQ          ADN   2  JOBRING  
  19 2K3B          RERING   1,2                 [AND GET BACK ON I_'S JOBRING
   5 2KH2    NOTACTLF
  16 2L2L          BNG   3  NOAPERIDF           [BR IF NOT FOUND 
   9 2LG=          LDXC  0  AWORK3(2)
  16 2L_W          BCS      RISPER              [BR IF ISPER.... 
  10 2MFG          LDX   0  JSOURCE1(2)  
  19 2M_6          BZE   0  RISPER              [...OR IF NO DEVICE ALLOCATED
  17 2NDQ          RINGPURG 3                   [REMOVE RING ELEMENT 
  17 2NYB          LDN   1  GPROPNUM(3)         [CONVERT APERIDF INTO
  16 2PD2          LDN   0  APERATTRIB(3)       [A GOUT/GPROPNOS 
   9 2PXL          MOVE  0  ATTMAX   
   9 2QC=          LDN   4  ATTMAX   
  16 2QWW          ALTLENG  3,4,SMHUNTW         [SHORTEN BLOCK   
  15 2RBG          CALL  1  SMHUNTW             [RELOCATE IT 
  16 2RW6          NAME     2,GOUT,GPROPNOS     [AND RENAME IT   
  15 2S*Q          LFBITSET G,FX2               [SET FLAG G  
   9 2STB          BRN      NOAPERIDF
   5 2T*2    RISPER  
  17 2TSL          FREECORE 3                   [FREE APERIDF BLOCK  
   6 2W#=    NOAPERIDF   
  10 2WRW          VFREEW   ADATA,CSTORE 
   9 2X?G          MFREEALL FILE,FRRB
   6 2XR6          CLOSE 
   8 2Y=Q          ADX   7  FX1  
   7 2YQB          EXIT  7  0
  15 2_=2    TYPE  4,5,1,2                      [TR,TP,LP,CR 
  17 2_PL    YREC  BPZ   3  SAME                [SEARCH FOR A RECORD 
  21 329=    YREC1 SBX   7  FX1                 [THIS ENTRY USED WHEN X2 NOT SET UP  
   7 32NW          LDX   0  3
   7 338G          SRL   0  9
   8 33N6          ANDN  0  #7777
   8 347Q          LDX   2  FX2  
  10 34MB          STO   0  ACOMMUNE3(2) 
  21 3572          MXB      2,NOFX12        [MXB WITHOUT X1 SET TO FX1 UNLESS CO-ORD.
   8 35LL          ADX   7  FX1  
   8 366=    SAME  ANDN  3  #777 
  18 36KW          ADX   3  2                   [SO X3 IS ABSOLUTE PTR   
   7 375G          EXIT  7  0
  20 37K6    #     ON ENTRY AWORK4 CONTAINS DEVICE TYPE:AWORK3 IS NEG.FOR ISPER  
  14 384Q    #     ENTRY AND POS.OR ZERO FOR GETPER ENTRY
   4 38JB    #   
   5 3942    X1IDFPER
   9 39HL          LDX   0  AWORK4(2)
   7 3=3=          SBN   0  4
   8 3=GW          BPZ   0  Q602 
  15 3?2G          IDFOPEN  XBRK                [OPEN THE IDF
   4 3?5L ...[   
   5 3?8Q ...X7IDFPER
  18 3??W ...[              RE-ENTRY POINT FOR SCAN OF MACHINE B DEVICES 
   7 3?G6          LDX   3  2
   8 3?_Q          LDX   2  FX2  
   9 3#FB          LDCH  0  ATYPE(2) 
   9 3#_2          SBN   0  ACTLF/64 
  16 3*DL          BNZ  0   XISNTACTLF          [BR IF NOT ACTLF 
  18 3*Y=          DERINGD  JOBRING(2)          [ESSE CLEAR OUT JOBRING  
  10 3BCW          EMPTY    JOBRING(2)   
   6 3BXG    XISNTACTLF  
   7 3CC6          LDX   2  3
  11 3CWQ          MHUNTW   3,APERI,APROPNOS 
  19 3DBB          SMO      CPROPNO(3)          [CONSOLE PROPERTY NUMBER &-  
  17 3DW2          LDN   4  0                   [CLEAR OUT TOP 2 BITS
  20 3F*L          LDX   3  BEXOT(2)            [BASE OF CONSOLE PROPERTY CHAIN  
  21 3FT=          BZE   3  T13                 [NOTHING TO DO:CLUSTER CANCELLED NOW 
   8 3G#W    T1    SMO      FX2  
  21 3GSG          STO   3  AWORK1              [KEEP PTR IN CASE RIGHT CONSOLE PROP.
   8 3H#6          CALL  7  YREC 
  21 3HRQ          SMO      BNO(3)              [PICK OUT NUMBER OF CONSOLE PROP.&-  
  17 3J?B          LDN   0  0                   [CLEAR OUT TOP 2 BITS
   7 3JR2          TXU   0  4
  15 3K=L          BCC      T2                  [J.IF SAME   
   8 3KQ=          LDX   3  0(3) 
  18 3L9W          BNZ   3  T1                  [J.FOR NEXT CONSOLE PROP.
  21 3LPG          BRN      T13                 [NOTHING TO DO:CLUSTER CANCELLED NOW 
   8 3M96    T2    LDX   5  3(3) 
  21 3MNQ          BNZ   5  T9                  [J.IF THERE ARE SOME ATTRIBUTIONS &- 
  19 3N8B                                       [START READING IDF INTO CORE 
  17 3NN2    T13   CALL  7  TCLOSE              [OTHERWISE CLOSE IDF-
  16 3P7L          BRN      Q602                [AND JUMP OUT.   
   4 3PM=    #   
   4 3Q6W    #   
  21 3QLG    # THE FOLLOWING CODE READS ALL ALL THE RELEVANT PARTS OF THE IDF INTO   
  19 3R66    # CORE AND DOES A MINI-FIRST-PASS LOOKING FOR PERIPHERALS OF THE
  21 3RKQ    # REQUIRED TYPE.IF SOME ARE FOUND THE SECOND PASS,WITHOUT CO-ORDINATING,
  17 3S5B    # IS CARRIED OUT.(T9 IS ENTRANCE TO FIRST PASS LOOP.)   
   4 3SK2    #   
   4 3T4L    #   
   5 3TJ=    # PASS 1
   4 3W3W    #   
   4 3WHG    #   
  18 3X36    TGEO  GEOERR   1,CLUSTERC          [FOR MAJOR ERRORS IN IDF 
  21 3XGQ    T12   BCT   5  T14                 [SEE IF WE MUST UPDATE X6:YES? JUMP! 
   7 3Y2B    T15   LDX   3  6
  17 3YG2    T16   ADN   5  1                   [RESTORE COUNT IN X5 
  21 3Y_L          LDX   4  3                   [KEEP COPY IN CASE THIS DEVICE OKAY  
  21 3_F=          ADN   6  1                   [UPDATE X6(BUT WONT USE IF THIS IS-  
  15 3_YW          CALL  7  YREC1               [LAST DEVICE 
  21 42DG          LDX   0  BITS22LS            [CLEAR OUT TOP TWO BITS IN POINTER-  
  19 42Y6          ANDS  0  0(3)                [WILL SET B0=1 IF DEVICE OKAY
   8 43CQ          LDX   3  0(3) 
  16 43XB          BNZ   3  T440                [J.TO FIND DEVICE
  19 44C2          BRN      TGEO                [OR IF NOT A POINTER,ERROR   
  21 44WL    T14   LDX   0  6                   [UPDATE X6 TO BE NEW PTR TO ATTRIB-  
  15 45B=          ADN   0  1                   [UTION PTR   
   7 45TW          ANDN  0  7
  21 46*G          BNZ   0  T15                 [J.IF DON'T NEED TO FIND NEW SUBSID- 
  19 46T6          SMO      FX2                 [VARY CONSOLE PROPERTY CELL  
  20 47#Q          LDX   3  AWORK2              [PICK UP PTR TO NEW SUBSID. CELL 
  18 47SB          BZE   3  TGEO                [IT SHOULD NOT BE ZERO!  
   8 48#2          CALL  7  YREC1
   8 48RL          LDX   2  FX2  
  18 49?=          LDX   0  0(3)                [PTR TO NEXT SUBSID CELL 
   7 49QW          LDX   3  6
   9 4==G          LDX   6  AWORK2(2)
   9 4=Q6          STO   0  AWORK2(2)
  19 4?9Q          BRN      T16                 [J.BACK TO GET PTR TO DEVICE 
   4 4?PB    #   
  17 4#92    T9    LDX   7  BLINE(3)            [PTR TO SUBSID CELL  
   8 4#NL          SMO      FX2  
  15 4*8=          STO   7  AWORK2              [PRESERVE PTR
   8 4*MW          SMO      FX2  
  20 4B7G          LDX   6  AWORK1              [RESCUE PTR TO CONSOLE PROP.CELL 
   7 4BM6          SMO      6
  20 4C6Q          LDN   4  5                   [X4 IS PTR TO CURRENT ATTRIB.PTR 
  21 4CLB          ADN   6  6                   [X6 IS PTR TO NEXT ATTRIBUTION PTR   
  21 4D62          LDX   0  BITS22LS            [CLEAR OUT TOP TWO BITS IN POINTER-  
  19 4DKL          ANDS  0  5(3)                [WILL SET B0=1 IF DEVICE OKAY
   8 4F5=          LDX   3  5(3) 
  17 4FJW          BZE   3  TGEO                [ERROR ZERO POINTER  
  16 4G4G    T440  CALL  7  YREC1               [FIND DEVICE CELL
   8 4GJ6          LDCT  7  #700 
   9 4H3Q          ANDX  7  BNUMB(3) 
   7 4HHB          SLL   7  1
  20 4J32          BZE   7  T11                 [J.IF NOT ON 7020 OR 7900.NO GOOD
  20 4JGL          SLC   7  1                   [OTHERWISE WORK OUT DEVICE TYPE- 
  21 4K2=          SLL   7  1                   [NUMBER EQUIVALENT TO NO.IN AWORK4.  
  20 4KFW          SMO      FX2                 [THERE IS A DIFFERENCE OF TWO FOR
  20 4K_G          LDX   2  AWORK4              [DEVICE TYPE NOS FOR 7020 & 7900.
  15 4LF6          BZE   7  TXA                 [J IF 7007   
   9 4LYQ          LDX   0  BTYPE(3) 
   7 4MDB          SLL   0  6
  17 4MY2          BNG   0  T11                 [J IF UNKNOWN DEVICE 
   4 4NCL    TXA 
   8 4NX=          SMO      FX1  
  21 4PBW          ADX   7  TYPE(2)             [NOW X7 CONTAINS REQUIRED DEVICE TYPE
   9 4PWG          LDCH  0  BTYPE(3) 
  18 4Q6# ...      ANDN  0  #37        [MASK OUT WRONGED AND PSEUDO BITS 
   7 4QB6          TXU   0  7
  20 4QTQ          BCS      T11                 [J.IF THIS DEVICE NOT RIGHT TYPE 
  21 4R*B          ORX   5  GSIGN               [MARK IN X5 THAT THERE IS A DEVICE   
  21 4RT2                                       [OF THE REQUIRED TYPE IN THE CLUSTER 
   9 4S#L          LDX   3  BATT(3)  
   8 4SS=          BZE   3  TGEO 
   8 4T?W          CALL  7  YREC1
  20 4TRG          LDX   3  4                   [PTR IN CONSOLE CELL TO DEVICE   
  14 4W?6          CALL  7  YREC1               [FIND IT 
  19 4WQQ ...      LDCT  0  #200                [AND MAKE B1 AS A MARKER THAT
  19 4X=B          ORS   0  0(3)                [THIS DEVICE IS A POSSIBILITY
  19 4XQ2    T11   BCT   5  T12                 [J.FOR NEXT DEVICE IN CLUSTER
  20 4Y9L          BPZ   5  T13                 [J.TO EXIT NO RIGHT DEVICES FOUND
   4 4YP=    #   
   4 4_8W    #   
  21 4_NG    # PASS 2(X5 NEG MEANS THERE WAS AT LAST ONE DEVICE THAT LOOKED HOPEFULL)
   4 5286    #   
   4 52MQ    #   
  21 537B          LDX   2  FX2                 [IT SHOULD ALREADY BE ZERO,BUT THIS  
  20 53M2          STOZ     AWORK2(2)           [COULD GET CHANGED-SO BE SAFE!   
   9 546L          LDXC  0  AWORK3(2)
  15 54L=          BCS      T11A                [BR IF ISPER 
  12 555W          SETNCORE ATTMAX,1,ADATA,CSTORE
   4 55KG    T11A
  19 5656          LDX   3  AWORK1(2)           [PTR TO PROPERTY CONSOLE CELL
   7 56JQ          LDN   6  3
  17 574B          SETNCORE APERIDFLEN>ADCBULKLEN,1,APERI,APERIDF,,1 
  20 57J2          STOZ     IDEVIC2+1(1)        [INITIALIZE APERI/APERIDF BLOCK  
   8 583L          CALL  7  YREC1
   9 58H=          LDX   7  BLINE(3) 
  10 592W          STO   7  IDFWK+2(1)   
   8 59GG          LDX   5  3(3) 
   8 5=26          LDX   0  5(3) 
   7 5=FQ          ADN   3  5
  21 5=_B          BRN      T18                 [J.TO SEE IF THIS PTR IS TO A DEVICE 
  17 5?F2                                       [OF THE RIGHT TYPE   
  18 5?YL    T3    BCT   6  T19                 [J.IN NO NEW CELL NEEDED 
   7 5#D=          LDN   6  7
  10 5#XW          LDX   3  IDFWK+2(1)   
  19 5*CG          BZE   3  TGEO                [POINTER SHOULD NOT BE ZERO  
  16 5*X6          CALL  7  YREC1               [FIND SUBSID.CELL
  18 5BBQ          LDX   0  0(3)                [AND NOW UPDATE POINTERS 
  10 5BWB          STO   0  IDFWK+2(1)   
   7 5CB2    T19   ADN   3  1
  18 5CTL          LDX   0  0(3)                 [PICK UP DECICE POINTER 
   7 5D83 ...T18   SLC   0  1
  19 5DGD ...      BNG   0  T7                  [J.IF THIS IS A POSS.DEVICE  
  19 5DSW          BCT   5  T3                  [J.IF MORE DEVICES TO LOOK AT
  17 5F#G          LDX   2  FX2                 [NO MORE DEVICES LEFT
  21 5FS6          BRN      Q610                [BE CODE:USE DEVICE WITH WRONG TEMP- 
  16 5G?Q                                       [PROPS PERHAPS?? 
   7 5GL7 ...T7    SRC   0  1
  19 5GYJ ...      STO   3  IDFWK+3(1)          [KEEP PTR IN APERIDF BLOCK   
  18 5H?2          STO   5  IDFWK(1)            [KEEP ATTRIBUTIONS COUNT 
  16 5HQL          STO   6  IDFWK+1(1)          [KEEP CELL COUNT 
   7 5J==          LDX   3  0
   4 5J=P ...[   
  16 5JPW          CALL  7  YREC1               [FIND DEVICE CELL
   8 5K9G          SMO      FX2  
  20 5KP6          LDX   7  AWORK4              [NORMAL DEVICE TYPE NO INTO X7   
  20 5L8Q          LDX   6  BTYPE(3)            [GEOG NO ETC.OR INTERFACE NO ETC.
  21 5LNB          LDX   5  BNO(3)              [IDENT NO.OR TERMINAL IDENTIFIER ETC.
  19 5M82          LDX   0  BLINE(3)            [IN CASE 7900 KEEP MODE WORD 
  18 5MML          LDX   4  2                   [KEEP X2 FOR LATER USE   
   8 5N7=          LDCT  2  #200 
  16 5NLW          ANDX  2  BNUMB(3)            [GET B1 OF BNUMB 
  19 5P6G          BZE   2  T5                  [J.IF B1 IS ZERO MEANING 7020
  16 5PL6          ORX   7  GSIGN               [SET B0 FOR 7900 
  17 5PNP ...      LDX   2  BNUMB(3)            [COPY 'SPOOLING' ,   
  17 5PR# ...      SLL   2  3                   ['UNATTENDED' BITS   
   8 5PTX ...      SMO      FX1  
   9 5PYG ...      ANDX  2  XMASK2   
   7 5Q35 ...      ORX   7  2
   6 5Q3C ...#UNS FL7502 
   4 5Q3P ...(   
  10 5Q43 ...      BSXD     2,IDF7502LP  
  10 5Q4* ...      ANDX  2  BNUMB+1(3)   
  11 5Q4M ...      SRL   2  3-(IDF7502LP&#37)
   7 5Q4_ ...      ORX   7  2
   4 5Q5? ...)   
  15 5Q5Q          STO   0  IDEVMN(1)           [STORE MODE  
  16 5QKB          ANDN  6  #777                [MASK OUT GEOG.NO
  16 5R52          SLL   6  12                  [MOVE TO B0-11   
  21 5RJL          ORX   5  6                   [AND PUT GEOG.NO INTO X5(IDEVIC1+1)  
  21 5S4=    T6    STO   7  IDEVIC1(1)          [STORE UNIQUE WORDS IN APERIDF BLOCK 
  10 5SHW          STO   5  IDEVIC1+1(1) 
  15 5T3G          LDX   2  4                   [RESCUE X2   
   9 5TH6          LDX   3  BATT(3)  
  18 5W2Q          CALL  7  YREC                [FIND ATTRIBUTION CELL   
  20 5WGB          LDN   4  BTYPE(3)            [GET READY TO MOVE ATTRIBUTIONS- 
  17 5X22          LDN   5  APERATTRIB(1)       [INTO APERIDF BLOCK  
  19 5XFL          MOVE  4  ATTMAX              [ATTMAX MUST BE LESS THAN 6!!
   8 5X_=          LDX   2  FX2  
  20 5YDW          BRN      Q500                [J.TO TEST PROPERTIES ATTRIBUTED 
   8 5YYG    T5    LDCT  2  #400 
  20 5_D6          DCH   6  7(2)                [PUT INTERFACE NO IN CHAR2 OF X7 
  10 5_XQ          LDX   0  BTYPE+2(3)   
  18 62CB          ANDX  5  HALFTOP             [KEEP 2 CHAR.IDENTIFIER  
  16 62X2          DCH   0  5                   [DEPOSIT LINE NO.
  17 63BL          SRL   0  6                   [GET RID OF LINE NO  
  16 63W=          ANDN  0  #777                [MASK OUT GEOG.NO
  16 64*W          SLL   0  12                  [MOVE TO B3-11   
  19 64TG          ORX   7  0                   [AND PUT IN X7 FOR IDEVIC1   
  20 65*6          BRN      T6                  [J.TO STORE ^UNIQUE^ WDS NOW MADE
   4 65B7 ...T601
   9 66?3 ...      LDX   5  IDFWK(1) 
   8 66#B          BCT   5  T20  
  18 66S2          BRN      Q610                [ALL DONE:X2=FX2 ALREADY 
  17 67?L    T20   LDX   6  IDFWK+1(1)          [RESTORE X6 AND X3   
  10 67R=          LDX   3  IDFWK+3(1)   
   4 67S* ...[   
  21 68=W          BRN      T3                  [AND JUMP TO LOOK FOR ANOTHER DEVICE 
   4 68QG    #   
   4 69=6    #   
   4 69PQ    #   
  13 6=9B    V7900                              [ JWK
  20 6=P2    #              THIS S/R GETS A 7900 IDENTIFIER FOR GETPER IF IT IS  
  19 6?8L    #              FREE TO BE USED. IT INDICATES FREENESS FOR ISPER 
   4 6?N=    #   
  18 6#7W          LDN   4  0                   [INDICATE NORMAL ENTRY   
   5 6#MG    VENT1   
  18 6*76          LDX   3  1                   [X1 PTS TO APERI/APERIDF 
  10 6*LQ          LDX   7  IDEVIC1+1(3) 
  10 6B6B          LDX   6  IDEVIC1+1(3) 
  18 6BL2          ANDN  6  #7777               [KEEP IDENTIFIER NUMBER  
   8 6C5L          SRL   7  12   
  16 6CY_ ...      FMOPG    1,7,IPB             [FIND AMOP/IPBIN 
  16 6D4W          BPZ   1  VFND1               [J.IF AMOP FOUND 
   4 6DJG    XBA 
   7 6F46          LDX   1  3
  16 6FHQ          BRN      T601                [IPBIN NOT FOUND 
  18 6G3B    XBAA                               [MOPPED OFF OR INOPERABLE
   8 6GH2          BNZ   4  XBA  
  16 6H2L          BRN      VAB                 [NOT AVAILABLE   
   4 6HG=    #   
   5 6H_W    VFND1   
  17 6JFG          STO   1  AWORK1(2)           [RECORD ADDS OF IPBIN
   5 6J_6    VFND2   
  17 6KDQ          LDX   1  FPTR(1)             [NOW SEEK ADEVS BLOCK
   9 6KYB          LDX   0  ATYPE(1) 
  16 6LD2          BXGE  0  CACT,XBAA           [NO ADEVS BLOCK  
   8 6LXL          SRL   0  12   
  10 6MC=          SBN   0  AMXOR+ADEVS  
   8 6MWW          BNZ   0  VFND2
  10 6NBG    #              ADEVS FOUND  
   8 6NW6          LDCT  0  #420 
   9 6P*Q          SMO      AWORK1(2)
  17 6PTB          ANDX  0  IPBSW               [J IF INOPERABLE OR  
  15 6Q*2          BNZ   0  XBAA                [MOPPED OFF  
  16 6QSL          LDX   7  IDEVIC1(3)          [GET DEVICE TYPE 
  20 6R#=          SLL   7  18                  [PREPARE INFORMATION FOR JSOURCE1
  17 6RRW          ADX   7  6                   [BEFORE X6 DESTROYED 
   4 6S?G    #   
  18 6SR6          SBX   6  A1+FOURTHWD(1)      [SUB LOWEST IDENTIFIER NO
   7 6T=Q          SLL   6  2
  21 6TQB          ADX   1  6                   [ADEVS ENTRY FOR IDE NOW POINTED TO  
  16 6W=2          BNZ   4  VROUND              [BR IF V900 ENTRY
   4 6WPL    #   
   8 6X9=          SMO      FX1  
  16 6XNW ...      LDX   0  XMASK1              [LOADS #36650000 
  11 6Y8G          ANDX  0  A1+FOURTHWD(1)   
  17 6YN6          BZE   0  VA                  [BR IF NOT WRONGED   
  17 6_7Q          ORN   5  #10                 [B20 SHOWS WRONGED   
  10 6_MB    VA    LDX   0  A1+BPTR(1)   
  17 7272          BZE   0  VB                  [BRANCH IF IDE FREE  
   4 72LL    VAB 
  17 736=          ORN   5  #20                 [B19 SHOWS NOT FREE  
  17 738F ... SEGENTRY K20IDFPER        [RESTORE TIME MACRO RMTLFUNAV
  17 73=N ...VB    BRN      VB1         [OVERWRITES THIS WITH NULL   
   9 73#X ...      LDX   0  AWORK3(2)
  15 73C6 ...      BNG   0  VB1         [JUMP IF DOING ISPER 
  12 73F* ...      LDCT  0  #400        [BIT 0   
  17 73HJ ...      ANDX  0  A1+FOURTHWD(1)    [LOOK IF UNAVAILABLE   
  14 73KR ...      BZE   0  VB1               [JUMP IF OK
  18 73N2 ...      ORN   5  #20               [SET B19 FOR NOTAV REPLY   
  17 73Q9 ...      LDCT  0  #20               [SET BIT 4 IN APERIDF  
  19 73SD ...      ORS   0  IDEVIC1(3)        [CHECKED BEFORE LEAVING IDFPER 
   8 73WM ... SEGENTRY K21IDFPER 
   4 73YW ...VB1 
   8 7435 ...      BZE   5  VC   
  19 745G          LDX   1  3                   [X1 TO POINT TO APERI/APERIDF
  19 74K6          BRN      Q565                [LABEL IF IDE CAN'T BE USED  
   4 754Q    #   
   9 75JB    VC    LDX   0  AWORK3(2)
  21 7642          BNG   0  VISPER              [BRANCH IF ISPER,RATHER THAN GETPER  
   4 76HL    #   
   5 773=    VROUND  
  10 77GW          STO   7  JSOURCE1(2)  
  10 782G          LDX   0  IDEVIC1+1(3) 
   9 78G6          ANDX  0  HALFTOP  
  17 78_Q          ORN   0  #6000               [B0=REMOTE, B1=7900  
   8 79FB          SLC   0  12   
  19 79_2          STO   0  JSOURCE2(2)         [JSOURCE2 HOLDS 7900 GEOG NO 
  11 7=DL          MHUNTW   2,ADATA,CSTORE   
   8 7=Y=          LDN   4  A1(2)
  19 7?CW          ADN   3  APERATTRIB          [SET UP GOUT,GPROPNOS BLOCK  
  18 7?XG          MOVE  3  ATTMAX              [COPY IN ATTRIBUTION CELL
  10 7#C6          SBN   3  APERATTRIB   
  11 7#WQ          NAME     2,GOUT,GPROPNOS  
  19 7*BB          LDX   2  FX2                 [SET FLAG TO SAY ^I HAVE A   
  16 7*W2          LFBITSET G,2                 [GPROPNOS BLOCK^ 
  19 7B*L          NAME     3,AMXOR,ADCB        [RENAME APERI/APERIDF BLOCK  
  13 7BT= ...      RING2CHK  A1+FPTR(1),A1+FPTR(3)   
  15 7C#W    #              RINGS ADCB BLOCK TO ADEVS ENTRY  
  16 7DDJ ...      LDX   0  IDEVIC1(3)          [COPY 'SPOOLING',
  17 7DK2 ...      SMO      FX1                 ['UNATTENDED' BITS   
   6 7DK* ...#UNS FL7502 
   4 7DKN ...(   
   9 7DL3 ...      ANDX  0  XMASK3   
   8 7DLB ...      SRL   0  20   
   9 7DLP ...      STO   0  IBULK(3) 
   7 7DM4 ...      ANDN  0  6
   9 7DMC ...      STO   0  IWAIT(3) 
   4 7DMQ ...)   
   6 7DN5 ...#UNS FL7502 
   4 7DND ...#SKI
   4 7DNR ...(   
   9 7DPD ...      ANDX  0  XMASK2   
   8 7DTW ...      SRL   0  20   
   9 7F2# ...      STO   0  IWAIT(3) 
   9 7F6Q ...      STO   0  IBULK(3) 
   4 7F94 ...)   
   8 7F?B          LDCT  0  #400 
  11 7FR2          ANDX  0  A1+FOURTHWD(1)   
  18 7G=L          STO   0  ISTATUS(3)          [COPY AVAILIBILITY BIT   
   9 7GQ=          LDX   0  AWORK1(2)
  15 7H9W          STO   0  IADIN(3)            [ADDS IPBIN  
   8 7HPG          ANDN  7  #7777
  10 7J96          STO   7  IDENTNO(3)   
  19 7JB# ...      DOWN     IPBSCAN,8           [COPY MODE/NPU SIZE TO ADCB  
  21 7JHG ...                                   [(NOW KEPT IN IPBSCAN INSTEAD OF IDF)
   5 7JNQ    VLAST   
   4 7K5C ...#   
   5 7K6= ...X4IDFPER
   4 7K75 ...#   
   9 7K8B          CALL  7  TCLOSE   
   8 7KN2          BRN      Q800 
   4 7L7L    #   
   5 7LM=    VISPER  
  16 7M6W          FREECORE 3                   [FREES APERIDF   
   8 7MLG          BRN      VLAST
  17 7N66    V900                               [LATER ENTRY TO V7900
   7 7NKQ          LDN   4  1
   8 7P5B          BRN      VENT1
   4 7PK2    #   
   4 7Q4L    #   
   4 7QJ=    #   
   9 7R3W    PCTMSK1        #00770000
   5 7RHG    PCTFIND 
  15 7S36          STO   0  AWORK1(2)           [SAVE LINK   
  10 7SGQ          LDX   4  IDEVIC1(1)   
  20 7T2B          SRL   4  12                  [GET GEOG.NO IN BITS 15-23 OF X4 
   8 7TG2          ANDN  4  #777 
  15 7T_L          FMOPG    3,4,MOP             [FIND AMOP   
  15 7WF=          BPZ   3  PCT2                [J IF FOUND  
  16 7WYW          BRN      T601                [AMOP NOT FOUND  
  17 7XDG    PCT1A LDX   0  AWORK1(2)           [ELSE MARK 'NOT FREE'
   8 7XY6    PCT1B ORN   5  #20  
  18 7YCQ          EXIT  0  1                   [AND RETURN AT FAIL EXIT 
   4 7YXB    #   
  16 7_C2    PCT2                               [REQD AMOP FOUND 
  18 7_WL          HUNT2OPT 3,AMXOR,ALINES      [FIND THE ALINES BLOCK   
  18 82B=          BNG   3  PCT1A               [FAIL EXIT IF NOT FOUND  
  10 82TW          LDX   4  IDEVIC1+1(1) 
  15 83*G          ANDN  4  #77                 [LINE NO.REQD
  20 83T6          ADX   4  4                   [4XLINO = RELATIVISED POINTER TO 
  17 84#Q          ADX   4  4                   [RECORD FOR REQD LINE
  18 84SB          ADX   3  4                   [POINTER TO LINE ENTRY   
   8 85#2          LDCT  0  #720 
  11 85RL          ANDX  0  A1+FOURTHWD(3)   
  17 86?=          BNZ   0  PCT1A               [J IF NOT SYSTEM USE 
  21 86QW          LDX   3  A1+BPTR(3)          [POINT TO LCB RING ELT FOR THIS LINE.
  17 87=G          BZE   3  PCT1A               [J IF LCB NOT SET UP 
  18 87Q6          SBN   3  A1+FPTR             [POINT TO START OF LCB   
  19 889Q          HUNT2B  3,A7020,INFORM       [HUNT BACK FOR INFORM BLOCK  
  10 88PB          LDX   7  IDEVIC1+1(1) 
  16 8992          ANDX  7  HALFTOP             [TERMINAL IDENT  
  18 89NL          LDX   6  APCTNUM(3)          [NO OF PCT'S ON THIS LINE
  17 8=8=          LDN   4  0                   [PCT RECORD POINTER  
   7 8=MW    PCT3  SMO      4
  18 8?7G          LDX   0  IDUNIQUE(3)         [GET THIS PCT IDENT...   
  16 8?M6          ANDX  0  HALFTOP             [FROM UNIQUE WORD
   7 8#6Q          TXU   0  7
  20 8#LB          BCC      PCT4                [J IF THIS IS RECORD FOR REQD PCT
  17 8*62          ADN   4  APCTRLEN            [STEP TO NEXT RECORD 
  20 8*KL          BCT   6  PCT3                [J UNLESS NO MORE PCT'S ON LINE  
  17 8B5=          BRN      PCT1A               [J IF PCT NOT FOUND  
   7 8BJW    PCT4  SMO      4
  10 8C4G          LDXC  6  APCTSTAT(3)  
  16 8CJ6          BCS      PCT1A               [J IF PCT IS INOP
  21 8D3Q          LDX   0  AWORK1(2)      [RESET X0 - NO MORE MACROS BEFORE EXITING.
  19 8DHB          STO   3  AWORK1(2)           [SAVE POINTER TO INFORM BLOCK
  20 8F32          ADX   3  4                   [X3 = POINTER TO REQD PCT RECORD 
  10 8FGL          LDX   6  IDEVIC1(1)   
  17 8G2=          ANDN  6  #7700               [REQD INTERFACE NO   
   7 8GFW          SLL   6  6
  18 8G_G          LDN   7  12                  [NOW FIND REQD INTERFACE 
   7 8HF6    PCT5  SMO      7
  10 8HYQ          LDX   4  APCTDEV-1(3) 
   8 8JDB          SMO      FX1  
   9 8JY2          ANDX  4  PCTMSK1  
   7 8KCL          TXU   4  6
  15 8KX=          BCC      PCT6                [J IF FOUND  
   7 8LBW          SBN   7  2
  18 8LWG          BNZ   7  PCT5                [ELSE TRY NEXT INTERFACE 
  18 8MB6          BRN      PCT1B               [IF NOT FOUND,FAIL EXIT  
   4 8MTQ    #   
  17 8N*B    PCT6                               [REQD INTERFACE FOUND
   7 8NT2          SMO      7
  10 8P#L          LDX   4  APCTDEV-2(3) 
   7 8PS=          SMO      7
  10 8Q?W          LDX   7  APCTDEV-1(3) 
  16 8QRG          ANDN  7  #77                 [7020 DEVICE CODE
   8 8R?6          SMO      FX1  
  17 8RQQ          ANDX  4  PCTMSK1             [INTERFACE BIT POSN  
  15 8S=B          EXIT  0  0                   [RETURN OK   
   4 8SQ2    #   
   4 8T9L    #   
  18 8TP=    P7007              [ENTERED TO CHECK AVAILABILITY OF DEVICE 
  21 8W8W          CALL  0  PCTFIND             [LOCATE PCT RECORD IN X3,POINTER TO  
  21 8WNG                                       [INFORM BLOCK IN AWORK1,X7=7020 TYPE 
  20 8X86                                       [CODE & X4=INTERFACE BIT POSITION
  14 8XMQ          BRN      PCT10               [J IF OK 
  20 8Y7B          BRN      Q565                [ELSE J TO 'NOT AVAILABLE' PATH  
  20 8YM2    PCT10                              [NOW FIND AVAILABILITY DETAILS   
  10 8_6L          LDX   6  IDEVIC1(1)   
  15 8_L=          ANDN  6  #77                 [BASIC TYPE  
  21 925W          ADX   6  FX1                 [USE BASIC TYPE TO ACCESS 7020 TYPE- 
  21 92KG          SMO      6                   [CODE TABLE & TEST THAT THE TYPE NOW 
  21 9356          TXU   7  TYPE                [RECORDED FOR THIS INTERFACE IN IDF  
  21 93JQ          BCS      T601                [MATCHES THAT SET IN CORE AT MOP-ON  
  20 944B                   [J IF THEY ARE DIFFERENT (IE USER HAS ALTERED IDF BY 
  18 94J2                   [HARDWARE COMMAND WHILST PCT WAS MOPPED ON!) 
   7 953L          STO   4  6
   7 95H=          SLL   4  6
  18 962W          ANDX  4  APCTD(3)            [ISOLATE RIGHT/WRONG BIT.
   8 96GG          BNZ   4  PCT11
  21 9726          ORN   5  #10                 [MARK'DEVICE IS WRONGED' IN REPLY WD 
   7 97FQ    PCT11 STO   6  4
   7 97_B          SRL   6  6
  18 98F2          ANDX  6  APCTD(3)            [ISOLATE FREE/USED BIT   
  15 98YL          BNZ   6  PCT12               [J.IF FREE   
  21 99D=          ORN   5  #20                 [ELSE MARK'DEVICE NOT FREE' IN REPLY 
  17 99XW    PCT12 BNZ   5  Q565                [J IF NOT AVAILABLE  
  21 9=CG          LDX   0  AWORK3(2)           [IF ENTRY WAS FROM GETPER NOT ISPER..
  21 9=X6          BPZ   0  PCT20               [...J TO ALLOCATE DEVICE TO THIS ACT.
   5 9?BM ...PCT13   
  19 9?R_ ...      CALL  7  TCLOSE              [FREE FILE/FRRB & CLOSE IDF  
  17 9?WB          BRN      Q800                [RETURN TO MAIN BODY 
   4 9#B2    #   
   4 9#TL    #   
  20 9**=    PSTX           #76227620,#76227635 [STX:NULL FOR TP. STX:C/R FOR LP.
  21 9*SW    PETX           #76007623           [SPACE FOR INSERTING ETX OR DC3 :ETX.
   4 9B#G    #   
  21 9BS6    P900                   [ENTERED TO ALOCATE DEVICE & SET UP BLKS & CHAINS
   9 9C?Q          CALL  0  PCTFIND  
  14 9CRB          BRN      PCT20               [J IF OK 
   9 9D?2          GEOERR  1,PCTLOST?
   7 9DQL    PCT20 LDX   5  3
   9 9F==          SBX   5  AWORK1(2)
  21 9FPW          ORX   5  4                   [APCTID NOW SET UP READY FOR BUFFER  
   7 9G9G          SRL   4  6
  17 9GP6          ERS   4  APCTD(3)    [CLEAR FREE/USED BIT = USED  
  10 9H8Q          LDX   4  IDEVIC1(1)   
  10 9HNB          LDX   6  IDEVIC1+1(1) 
   7 9J82          STO   6  7
   7 9JML          DSA   4  6
   7 9K7=          SRC   6  6
  10 9KLW          STO   6  JSOURCE1(2)  
  17 9L6G          SRL   4  12                  [GEOG NO IN B12-23   
  16 9LL6          ANDN  7  #77                 [MASK OUT LINE NO
  16 9M5Q          SLL   7  9                   [MOVE TO B9-15   
  16 9MKB          DEX   4  7                   [DEPOSIT GEOG.NO 
  16 9N52          LDCT  4  #500                [SET REMOTE+7020 
   7 9NJL          ORX   4  7
  10 9P4=          STO   4  JSOURCE2(2)  
  10 9PHW          LDX   4  APCTSTAT(3)  
  16 9PKN ...      LDX   0  5                   [INTERFACE MASK  
   8 9PMG ...      SMO      FX1  
   9 9PP# ...      ANDX  0  PCTMSK1  
   7 9PR6 ...      ANDX  0  4
   7 9PSY ...      STOZ     6
  17 9PWQ ...      BZE   0  PCT71               [J IF NOT SPOOLING   
  16 9PYJ ...      LDN   6  4                   [SET SPOOLING BIT
   7 9Q2B ...PCT71 LDX   0  5
   8 9Q48 ...      SMO      FX1  
   9 9Q62 ...      ANDX  0  PCTMSK1  
   7 9Q7S ...      SRL   0  6
   7 9Q9L ...      ANDX  0  4
  16 9Q?D ...      BZE   0  PCT72               [J IF ATTENDED   
  17 9Q*= ...      ORN   6  2                   [SET UNATTENDED BIT  
  16 9QC4 ...PCT72 ANDN  4  1                   [1901A RJE BIT   
  17 9QDW ...      ORX   4  6                   [SET UP X4 FOR EWAIT 
  17 9QH6          LDX   3  AWORK1(2)           [ADDR OF INFORM BLOCK
  18 9R2Q          HUNT2B  3,AMOP,APCT          [FIND THE PCT ACTIVITY   
  20 9RGB          ENRING   JOBRING(2),JOBRING+1(3) [RING THIS ACT TO AMOP APCT  
  19 9S22          SETNCORE ALFBLOKLEN,3,A7020,ALIST,1,1,2  [GET BUFFER BLOCK
  19 9SFL          EMPTY    FPTPCT(3)           [CLEAR ITS PCT RING ELEMENTS 
  17 9S_=          STO   5  APCTID(3)           [INSERT SPECIAL WORD 
   9 9TDW          STO   4  EWAIT(3) 
  10 9TYG          STOZ     EWAIT+1(3)   
  10 9WD6          LDN   0  EWAIT+1(3)   
  10 9WXQ          LDN   1  EWAIT+2(3)   
  21 9XCB          MOVE  0  ACTBUFF-EWAIT-1     [CLEAR STATUS REPLY & INTERLOCK AREAS
  15 9XX2    PCT21 LDX   2  JOBRING+1(2)        [NOW SEARCH  
  13 9YBL          SBN   2  JOBRING             [RING
  13 9YW=          LDCH  0  ATYPE(2)            [FOR 
  16 9_*W          SBN   0  AMOP/64             [THE AMOP/APCT   
   8 9_TG          BNZ   0  PCT21
  18 =2*6          HUNT2   2,A7020,INFORM       [FIND THE INFORM BLOCK   
  20 =2SQ          ENRING   FPTPCT(3),BPTPCT(2) [RING BUFFER TO END OF PCT RING  
  10 =3#B          LDN   1  JOBRING(2)   
  17 =3S2          DERING   1                   [FROM PCT'S FILERING 
  19 =4?L          EMPTY    JOBRING(2)          [CLEAR ITS JOB RING ELEMENTS 
  17 =4R=          LDCH  0  JSOURCE1(2)         [GET THE DEVICE TYPE.
   7 =5=W          SMO      0
  19 =5QG          LDX   4  PSTX-1(1)           [LOAD STX:NULL OR STX:C/R.   
   9 =6=6          LDX   5  PETX(1)  
  10 =6PQ          LDN   6  ALFBUFFNUM-1 
  11 =79B          LDN   0  ALFBUFFNUM-1*32  
  21 =7P2          STO   4  ETXBUFF(3)          [SET UP THE BUFFER FOR SENDING ETX.  
  10 =88L          STO   5  ETXBUFF+1(3) 
  20 =8N=    PCT22 SMO      6                   [INITIALISE THE INTERLOCK WORDS. 
   9 =97W          STO   0  INTLK(3) 
   8 =9MG          SBN   0  32   
   8 ==76          BCT   6  PCT22
   8 ==LQ          BRN      PCT13
   4 =?6B    #   
   4 =?L2    #   
   4 =#5L    #   
   4 =#K=    #   
   4 =*4W    #   
   4 =*JG    #   
   4 =B46    #   
  21 =BHQ    #     THIS ROUTINE IS ENTERED TO COMPARE THE PROPERTIES ATTRIBUTED TO   
  21 =C3B    #     THE DEVICE WITH THE PROPERTIES REQUIRED BY THE ACTIVITY SEEKING A 
  20 =CH2    #     DEVICE. THE ROUTINE IS VERY SIMILAR TO ONE IN SEGMENT GETFREE 
  13 =D2L    #     WHICH DEALS WITH PLIST DEVICES.   
   4 =DG=    #   
   6 =D_W    SCHECKATT   
  19 =FFG          MHUNTW   3,APERI,APROPNOS    [LOCATE PROPERTIES REQUIRED  
  20 =F_6          LDN   5  0                   [PRESET MARKER FOR THIS DEVICE   
   7 =GDQ          LDN   4  0
   7 =GYB    Q506  SMO      4
  21 =HD2          LDX   0  APERATTRIB(1)       [GET NEXT PROPERTY ATTRIBUTED TO DEV 
  15 =HXL          BZE   0  Q530                [J IF NO MORE
   8 =JC=          SMO      FX1  
  18 =JWW          ANDX  0  QBITS23LS           [REMOVE 'CLUSIVENESS' BIT
  20 =KBG          LDX   6  BPROPCNT(3)         [GET COUNT OF PROPERTIES REQUIRED
   7 =KW6    Q503  SMO      6
  10 =L*Q          TXU   0  BPROPS-1(3)  
  19 =LTB          BCC      Q502                [J IF PROPERTY IS REQUIRED   
   8 =M*2          BCT   6  Q503 
   7 =MSL          SMO      4
  21 =N#=          LDX   0  APERATTRIB(1)       [IS PROPERTY NOT REQUIRED INCLUSIVE? 
  13 =NRW          BPZ   0  Q504                [YES 
  17 =P?G          SLL   0  1                   [NO, IS IT TEMPORARY?
  13 =PR6          BPZ   0  Q505                [YES 
  20 =Q=Q          ORN   5  4                   [NO:SET P/E NOT REQUIRED MARKER  
   8 =QQB          BRN      Q504 
  19 =R=2    Q505  ORN   5  32                  [SET T/E NOT REQUIRED MARKER 
   8 =RPL          BRN      Q504 
   8 =S9=    Q502  LDCT  0  256  
  21 =SNW          SMO      6                   [MARK PROPERTY AS BEING ATTRIBUTED TO
  15 =T8G          ORS   0  BPROPS-1(3)         [THE DEVICE  
  20 =TN6    Q504  ADN   4  1                   [STEP POINTER TO NEXT ATTRIBUTION
  20 =W7Q          LDN   0  ATTMAX              [TEST IF CHECKED MAXIMUM POSSIBLE
  18 =WMB          TXL   4  0                   [NUMBER OF ATTRIBUTIONS  
  13 =X72          BCS      Q506                [NO  
  20 =XLL    Q530  LDX   4  BPROPCNT(3)         [GET COUNT OF PROPERTIES REQUIRED
   7 =Y6=    Q534  SMO      4
  21 =YKW          LDX   0  BPROPS-1(3)         [IS PROPERTY ATTRIBUTED TO DEVICE?   
  13 =_5G          BNG   0  Q531                [YES 
  17 =_K6          SLL   0  1                   [NO, IS IT TEMPORARY 
  13 ?24Q          BPZ   0  Q532                [YES 
  19 ?2JB          ORN   5  2                   [NO:SET PERM NOT GOT MARKER  
  20 ?2N? ...      SRL   0  1                   [STORE MISSING PERMANENT PROPERTY
  15 ?2S8 ...      ANDX  0  BITS22LS            [IN ACOMMUNE8
  10 ?2Y5 ...      STO   0  ACOMMUNE8(2) 
   8 ?342          BRN      Q533 
  18 ?3HL    Q532  ORN   5  32                  [SET TEMP NOT GOT MARKER 
   8 ?43=          BRN      Q533 
   8 ?4GW    Q531  SMO      FX1  
   9 ?52G          LDX   0  QBITS23LS
  21 ?5G6          SMO      4                   [CLEAR 'PROPERTY ATTRIBUTED' MARKER  
  10 ?5_Q          ANDS  0  BPROPS-1(3)  
  21 ?6FB    Q533  BCT   4  Q534                [CHECK ALL NAMES IN APROPNOS BLOCK   
   7 ?6_2          EXIT  7  0
  21 ?7DL    Q500                               [X1 POINTS TO APERI/APERIDF:X2=FX2   
  19 ?7Y=          CALL  7  SCHECKATT           [CHECK PROPERTY ATTRIBUTIONS 
   7 ?8CW          LDN   0  6
  21 ?8XG          ANDX  0  5                   [TEST IF PERMANENT PROPERTIE ARE OK  
  13 ?9C6          BNZ   0  Q563                [NO  
   4 ?9CJ ...#   
  10 ?9WQ          LDX   0  IDEVIC1(1)   
  21 ?=BB          BNG   0  V7900               [ELSE BRANCH TO APPROPRIATE ROUTINE  
  19 ?=W2          BRN      P7007               [TO CHECK IF RIGHTED AND FREE
  21 ??*L                                       [RE-ENTERED HERE FROM V7900/P7007 IF 
  21 ??T=                                       [DEVICE WRONGED OR ALREADY ALLOCATED 
  21 ?##W                                       [OR IF TEMP PROPS NO GOOD (I.E. VALUE
  17 ?#SG                                       [IN X5 IS NON-ZERO)  
  21 ?*#6    Q565                               [X1 POINTS TO APERI/APERIDF:X2=FX2   
   7 ?*RQ    Q563  NGN   0  1
  15 ?B?B    Q564  ADN   0  1                   [SHIFT COUNT 
   7 ?BR2          SRC   5  1
  21 ?C=L          BPZ   5  Q564                [FIND L.S. BIT SET IN STATE MARKER   
  16 ?CQ=          LDN   5  1                   [FOR THIS DEVICE 
   7 ?D9W          SMO      0
  20 ?DPG          SLL   5  0                   [AND SET BIT FOUND IN THE MASTER 
  14 ?F96          ORS   5  AWORK2(2)           [MARKER  
  20 ?FNQ          SBN   5  32                  [TEST IF DEV OK EXCEPT FOR TEMP  
  18 ?G8B          BNZ   5  T601                [NO, GO FOR NEXT DEVICE  
  20 ?GN2          NGX   0  AWORK3(2)           [J UNLESS GETPER WITHOUT MESSAGE 
  15 ?H7L          BPZ   0  T601                [SUPPRESSION 
  10 ?JLG          LDN   4  IDEVIC1(1)   
  17 ?K66          LDN   5  IDEVIC2(1)          [REMEMBER THIS ONE   
   9 ?KKQ ...      MOVE  4  2+ATTMAX 
  17 ?L5B          BRN      T601                [GO FOR NEXT DEVICE  
  21 ?LK2                                       [ENTERED HERE WHEN NO MORE DEVICES   
  21 ?M4L    Q610                               [X1 POINTS TO APERI/APERIDF:X2=FX2   
  21 ?MJ=          LDX   0  IDEVIC2+1(1)        [J IF NO DEVICE WITH WRONG TEMP PROPS
  17 ?N3W          BZE   0  Q570                [HAS BEEN REMEMBERED 
  10 ?NHG          LDN   4  IDEVIC2(1)   
  19 ?P36          LDN   5  IDEVIC1(1)          [PUSH UP REMEMBERED DEVICE   
   9 ?PGQ ...      MOVE  4  2+ATTMAX 
   7 ?Q2B          LDX   4  1
   7 ?QG2          LDX   1  4
  20 ?Q_L          LDCT  0  #400                [REMEMBER 'ALLOCATED' DEVICE HAS 
  18 ?RF=          ORS   0  AWORK2(2)           [UNSUITABLE TEMP PROPS   
  10 ?RYW          LDX   0  IDEVIC1(1)   
  21 ?SDG          BNG   0  V900                [J TO APPROPRIATE ROUTINE TO ALLOCATE
  15 ?SY6          BRN      P900                [THE DEVICE  
   9 ?TCQ    QBITS23LS      #37777777
  20 ?TXB                                       [RE-ENTERED HERE AFTER DEVICE HAS
  16 ?WC2                                       [BEEN ALLOCATED  
  16 ?WWL    Q800                               [X1=FX1:X2=FX2   
   9 ?XB=          LDX   0  AWORK3(2)
  15 ?XTW          BNG   0  Q572                [J IF ISPER  
  11 ?Y*G          MHUNTW   3,APERI,APROPNOS 
  10 ?YT6          LDX   0  CPROPNO(3)   
   9 ?_#Q          ANDX  0  BITS22LS 
  20 ?_SB          STO   0  JSOURCE3(2)         [STORE CONSOLE PROPERTY NUMBER   
  21 #2#2          LDX   4  AWORK2(2)           [J IF ALLOCATED DEVICE DOES NOT HAVE 
  17 #2RL          BNG   4  Q571                [CORRECT TEMP PROPS  
   4 #3?=    Q572
   7 #3QW          UPPLUS   1
   4 #4=G    Q570
   8 #4?C ...      LDCT  0  #20  
  18 #4## ...      ANDX  0  IDEVIC1(1)       [IS B4 SET FOR UNAVAILABLE? 
  14 #4*9 ...      BZE   0  Q570A            [JUMP IF NOT
  10 #4B6 ...      LDX   7  IDEVIC1+1(1) 
   7 #4C3 ...      LDX   6  7
  14 #4CY ...      ANDN  6  #7777            [GET IDE NO 
  14 #4DT ...      SRL   7  12               [AND UNIT NO
  11 #4FQ ...      MHUNTW   3,APERI,APROPNOS 
  10 #4GM ...      LDX   0  CPROPNO(3)   
  16 #4HJ ...      ANDX  0  BITS22LS         [CONSOLE PROPERTY NO
  18 #4JF ...      STO   0  JSOURCE3(2)      [NEEDED FOR INFORM OUTPUT   
  13 #4KB ...      OUTNUM   7,0              [UNIT NO
  13 #4L? ...      OUTNUM   6,0              [IDE NO 
  20 #4M8 ...      INFORM   2,IDISENG,1      [WARN CLUSTER OP DEVICE DISENGAGED  
  10 #4N5 ...      STOZ     JSOURCE3(2)  
   5 #4P2 ...Q570A   
  15 #4Q6          CALL  7  TCLOSE              [CLOSE IDF   
  21 #59Q                                       [ENTERED HERE IF THERE WAS NO DEVICES
  16 #5PB    Q602                               [X1=FX1:X2=FX2   
   4 #5Q? ...Q571
   5 #6LB ...Q571A   
  21 #6M? ...      LDEX  4  AWORK2(2)           [COPY MASTER MARKER SO THAT GETFREE  
  18 #6NL          STO   4  ACOMMUNE9(2)        [SEGMENT CAN PICK IT UP  
  21 #78=          UPPLUS   2                   [EXIT TO GETFREE - DEVICE NOT FOUND  
   4 #7MW    XBRK
  20 #87G          UP                           [BREAK IN WHILE OPENING THE IDF  
   5 #8M6    #PAGE   
  10 #96Q          MENDAREA 50,K100IDFPER
   4 #9LB    #END
   8 ____ ...75776453000200000000
