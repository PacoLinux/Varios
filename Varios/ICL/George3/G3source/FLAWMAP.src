  12 22FL    #SEG  FLAWMAP70         [NEIL BOULT 
   7 22_=    #LIS  K0FLAWMAP 
   7 23DW          8HFLAWMAP 
  20 23YG    #  BACKMAP COMES DOWN TO THIS SEGMENT AFTER  IT HAS CREATED A BITMAP
  20 24D6    #  OF UNALLOCATED BS BLOCKS. FLAWMAP GOES THROUGH THE FLAW INDEX FOR
  20 24XQ    #  EACH STORAGE UNIT HOLDING FILESTORE, AND UNSETS THE BIT IN THE   
  17 25CB    #  BITMAP IF IT FINDS A FLAW ENTRY FOR A FILESTORE BLOCK
   4 25X2    #   
  12 26BL          SEGENTRY K1FLAWMAP,QK1FLAWMAP 
   6 26DT ...#SKI  JSKI34
   4 26H4 ...(   
  13 26K? ...      SEGENTRY   K2FLAWMAP,QK2FLAWMAP   
   8 26MG ...#DEF  FLBSUN=FBLCNT 
   8 26PP ...#DEF  FLBCSN=FLCORE 
   4 26RY ...)   
   4 26W=    #   
  12 27*W    #   DATA AREA     IN ACTIVITY BLOCK 
   4 27TG    #   
   7 28*6    #DEF  PA=AWORK1 
   7 28SQ    #DEF  SER=AWORK2
  10 29#B    # DATA AREA IN /GEXD BLOCK  
   4 29S2    #   
   7 2=?L    #DEF SCYL=EFDC  
   7 2=R=    #DEF TCYL=ENEWRP
   7 2?=W    #DEF  SB=ENEWG  
   7 2?QG    #DEF  TB=FNAMER 
   7 2#=6    #DEF  SEEK=EHOME
   8 2#PQ    #DEF  MAP=FNAMER+1  
   7 2*9B    #DEF  REP=MAP+1 
   4 2*P2    #   
   4 2B8L    #   
   6 2BN=    XCON   10000
   7 2C7W    SIX7  #777777   
   4 2CMG    Q3  
   8 2D76    #HAL  +BSTB+FBSIB,0 
   9 2DLQ    NCAN  GEOERR 1,FLAWCANT 
   9 2F6B    WERR  GEOERR 1,XFLAWMAP 
   8 2FL2    WREAD SBX   6  FX1  
   9 2G5L          READST 2,NOTCOR   
   9 2GK=          TESTREPNOT OK,WR1 
   9 2H4W          LDX   1  ECOR(3)  
   5 2HJG    NOTCOR  
   8 2J46          ADX   6  FX1  
   7 2JHQ          EXIT  6  1
  10 2K3B    WR1   TESTREPNOT EXFAIL,WERR
   8 2KH2          ADX   6  FX1  
   7 2L2L          EXIT  6  0
  14 2LG=    XCON10 LDN   5  0   [CONVERT TO DECIMAL S/R 
   7 2L_W          SMO   FX1 
  11 2MFG          DVD   4  XCON    [10000   
  11 2M_6          ADN   5  1     [ROUND UP  
  16 2NDQ          LDN   6  3      [COUNT FOR ZERO SUPPRESSION   
   7 2NYB          LDX   4  5
   7 2PD2          LDN   5  0
   9 2PXL          ADN   2  ACOMMUNE1
   7 2QC=          MODE   1  
   8 2QWW    YCON1  CBD   4  0(2)
   8 2RBG          BCHX   2  /   
   8 2RW6          BCT   6  YCON1
  16 2S*Q          MODE  0      [DONT SUPPRESS ZERO IF LAST DIGIT
   8 2STB          CBD   4  0(2) 
   8 2T*2          BCHX   2  /   
   8 2TSL          EXIT   0  0   
  17 2W#=    XCON8 LDN   7  6                   [CONVERT TO OCTAL S/R
   7 2WRW    ZCON1  STOZ 4   
   8 2X?G          SLL   45  3   
   8 2XR6          DCH   4  0(2) 
   8 2Y=Q          BCHX   2  /   
   8 2YQB          BCT   7  ZCON1
   8 2_=2          EXIT   0  0   
   6 2_PL    QK1FLAWMAP  
   9 329=    #SKI  K6FLAWMAP>99-99   
   9 32NW          TRACE FX2,FLAWMAP1
  12 338G          SETNCORE GEXDLEN,3,EWDAS,GEXD 
   8 33N6          STOZ  REP(3)  
   8 347Q          STOZ  PA(2)   
   8 34MB          STOZ  SER(2)  
   8 3572          LDX   0  Q3(1)
  19 35LL          STO   0  MAP(3)      [STORE /FBSIB BLOCK TYPE AND SUBTYPE 
  17 366=    QA    LDX   1  ALFTP       [POINTER TO ALFTABLE BLOCK   
  17 36KW          LDX   4  PA(2)       [POINTER TO ENTRY IN BLOCK   
  10 375G          TXL   4  ALOGLEN(1)   
  17 37K6          BCS      QB          [J. UNLESS END OF ALFTABLE   
  14 384Q          LDX   4  REP(3)      [SAVE FLAW COUNT 
   9 38JB          LDX   0  SER(2)   
  15 3942          BZE   0  QNOC                [ANY OPEN SUS
   8 39HL          CLOSEST NCOR1 
   9 3=3=          TESTREPNOT OK,WERR
   7 3=GW    NCOR1 UNLOCKSU 5
   7 3?2G          RELST 5   
  10 3?G6          MHUNTW   3,EWDAS,GEXD 
   7 3?_Q    QNOC  FREECORE 3
  19 3#FB          STO   4  EXEC3(2)   [)TO BE PASSED ...........(FLAWCOUNT) 
  11 3#_2          STOZ  AWORK4(2)     [)UP  
   5 3*DL          UP
   4 3*Y=    #   
   4 3BCW    #   
   4 3BXG    #   
  18 3CC6    QB    ADX   1  4          [A1(1) NOW POINTS TO CORRECT ENTRY
   8 3CWQ          LDCT  0  #600 
   8 3DBB          ANDX  0  A1(1)
  14 3DW2          BNZ   0  QD         [J. IF B0,B1 SET  
  15 3F*L          LDX   0  A1(1)      [ELSE......START WORK 
   7 3FT=          BRN   QC  
   4 3G#W    #   
  17 3GSG    QD    LDN   0  2          [UPDATE POINTER TO NEXT ENTRY 
   8 3H#6          ADS   0  PA(2)
  11 3HRQ          BRN   QA            [J.   
   7 3J?B    QC    SRL   4  1
  14 3JR2          DSA   4  MAP(3)     [LOGICAL FILE NR  
   9 3K=L    #SKI  K6FLAWMAP>99-99   
  10 3KQ=          TRACE MAP(3),LOGICALF 
   8 3L9W          ANDN  0  #7777
  16 3LPG          ADX   0  AFDTP      [AFDTP: POINTER TO FDTABLE
  20 3M96          LDX   1  0          [X1 POINTS TO APPROPRIATE FDTABLE ENTRY   
   8 3MNQ          LDX   5  A1(1)
   8 3N8B          SRL   5  18   
   7 3NN2          SBN   5  6
  16 3P7L          BZE   5  QCA       [J. TO  QCA UNLESS NEITHER 
  11 3PM=          SBN   5  7         [FDS OR
   8 3Q6W          BZE   5  QCA  
  15 3QLG          SBN   5  13                  [OR EDS 30   
  15 3R66          BZE   5  QCA                 [J IF EDS 30 
  19 3RKQ          LDX   5  AWORK2(2)           [SAVE SERIAL NO. IN CASE LAST
  19 3S5B                                       [FILE DESCRIPION IS FOR DRUM 
  17 3SK2          BRN      QD                  [GO FOR NEXT (IF ANY)
   9 3T4L    QCA   LDX   0  A1+4(1)  
  18 3TJ=          STO   0  SEEK(3)   [STORE BLOCK DEPTH OF LOGICAL FILE 
   9 3W3W          LDX   0  A1+3(1)  
  18 3WHG          SBN   0  1         [NO.OF CYLINDERS IN FILE MINUS 1   
   9 3X36          STO   0  TCYL(3)  
   9 3XGQ          LDX   0  A1+1(1)  
  19 3Y2B          STO   0  SCYL(3)   [START CYL. OF FILE PLUS CYL. ADDRESS  
  13 3YG2                             [OF START OF SU
  15 3Y_L          ADS   0  TCYL(3)   [END CYL ..............
  20 3_F=    [SCYL,TCYL REFER TO CYLINDER NOS RELATIVE TO START OF HARDWARE UNIT 
   9 3_YW          LDX   0  A1+4(1)  
  15 42DG          SBN   0  1           [BLOCK DEPTH MINUS 1 
   8 42Y6          STO   0  TB(3)
   9 43CQ          LDX   0  A1+2(1)  
  17 43XB          STO   0  SB(3)       [START BLOCK OF LOGICAL FILE 
  17 44C2          ADS   0  TB(3)       [END BLOCK OF LOGICAL FILE   
   4 44WL    [   
   7 45B=    RB    LDN   0  1
  16 45TW          ADS   0  TCYL(3)    [)ADD 1 TO END CYL/BLK FOR
  16 46*G          ADS   0  TB(3)      [)EASIER COMPARISON LATER 
  15 46T6          LDX   5  A1+5(1)     [X1 POINTS TO FDTABLE
   7 47#Q          SMO  FX1  
  16 47SB          ANDX   5  SIX7       [#777777,X7 =SERIAL NO   
   9 48#2          FINDSU   1,5,QD   
  14 48RL          LDX   0  ASUBASE(1)  [DATUM OF S.U.   
  16 49?=          SBS   0  SCYL(3)     [START AND END CYLINDER  
  14 49QW          SBS   0  TCYL(3)     [RELATIVE TO S.U.
   4 4==G    #   
   9 4=Q6    #SKI K6FLAWMAP>199-199  
   4 4?9Q    (   
   9 4?PB          TRACE 5,FLAWSERL  
   9 4#92          TRACE SCYL(3),SCYL
   9 4#NL          TRACE TCYL(3),TCYL
   8 4*8=          TRACE SB(3),SB
   8 4*MW          TRACE TB(3),TB
   4 4B7G    )   
  14 4BM6          LDX   4  HBLOCK(1)   [SAVE BLOCKS/CYL 
  19 4C6Q          LDX   7  HFLAW(1)    [SAVE WORD ADDRESS OF FIRST FLAW CELL
  18 4CLB          BZE   7  QD          [J. IF NO FLAW CELLS ON THIS SU  
   9 4D62          LDX   0  SER(2)   
  15 4DKL          BZE   0  ZX          [J. IF NO PREVIOUS SU
  16 4F5=          STO   5  6           [SAVE CURRENT SERIAL NR. 
  21 4FJW          TXU   0  5                   [X0:PREVIOUS SU SERIAL NR,X5 CURRENT 
  21 4G4G          BCC      Z                   [J IF CURRENT UNIT SAME AS PREVIOUS  
   7 4GJ6          LDX   5  0
   8 4H3Q          CLOSEST NCOOR 
   9 4HHB          TESTREPNOT OK,WERR
  10 4J32          MHUNTW 3,EWDAS,GEXD   
   7 4JGL    NCOOR UNLOCKSU 5
  14 4K2=          RELST 5              [RELEASE OLD UNIT
  20 4KFW          LDX   5  6       [RESTORE SERIAL NR OF SU CURRENTLY REQUIRED  
   8 4K_G    #SKI  ENTWINE<1$1   
   8 4LF6    ZX    USEST 5,NOT   
   7 4LYQ    #SKI  ENTWINE   
  11 4MDB    ZX    USEST    5,NOT,,WERR,WERR 
  10 4MY2    XB    MHUNTW 3,EWDAS,GEXD   
   7 4NCL          OPENST 5  
   7 4NX=    Z     LDX   2  7
   9 4PBW    #SKI K6FLAWMAP>199-199  
   9 4PWG          TRACE  7,FLAWADDR 
  20 4QB6    XC    CALL  6  WREAD    [WORD ADDRESS IN X2.GET CORE POINTER IN X1  
  13 4QTQ          BRN   XTRAN       [TRANSFER FAIL  
  17 4R*B          LDX   2  0(1)     [TRANSFER OK,SAVE WD ADDRESS OF 
  16 4RT2                            [NEXT FLAW CELL IN X2,IF ANY
  19 4S#L          STO   2  FNAMER+3(3)     [SAVE NEXT FLAW INDEX CELL ADDR  
   7 4SS=          ADN   1  1
   7 4T?W    YLOOP ADN   1  1
  19 4TRG          LDX   7  0(1)     [NEXT FLAW BLK ADDRESS IN THIS FLAW CELL
  15 4W?6          BNG   7  NEWFI    [BRN TO NEXT FLAW CELL  
  17 4WQQ          BZE   7  YLOOP    [ENTRY NOT USED;UPDATE POINTER  
  14 4X=B          DVS   6  4        [X7=CYL NO;X6=BLK NO
   9 4XQ2    #SKI K6FLAWMAP>199-199  
   4 4Y9L    (   
   8 4YP=          TRACE  7,CYLNO
   8 4_8W          TRACE  6,BLKNO
   4 4_NG    )   
   7 5286          LDX   0  6
   7 52MQ          LDX   6  7
  13 537B          LDX   7  0        [SWITCH X6,X7   
   9 53M2          TXL   6  TCYL(3)  
  14 546L          BCC      YLOOP    [J. IF CYL TOO BIG  
  18 54L=          TXL   7  TB(3)    [TO NEXT ENTRY.ALSO IF BLK TOO BIG  
   8 555W          BCC      YLOOP
   9 55KG          SBX   6  SCYL(3)  
   8 5656          SBX   7  SB(3)
  16 56JQ          BNG   6  YLOOP   [J. IF BLK OR CYL TOO SMALL  
  13 574B          BNG   7  YLOOP   [TO NEXT ENTRY   
  19 57J2          MPA   6  SEEK(3) [X6= NO OF HARDWARE BLKS IN LOGICAL FILE 
  16 583L          SRL   67 2       [NO OF FILESTORE BLKS IN LF  
   8 58H=          LDN   0  24   
   7 592W          DVD   6  0
  18 59GG    [ EVERY BIT IS A MARKER FOR A FILESTORE BLK. X7 IS WORD ADDR
  17 5=26    [ AND X6 IS BIT ADDR OF BIT TO BE UNSET IN /FBSIB BLOCK 
   9 5=FQ    #SKI  K6FLAWMAP>99-99   
   4 5=_B    (   
   9 5?F2          TRACE 7,WORDBIT   
   9 5?YL          TRACE 6, BITBIT   
   4 5#D=    )   
   8 5#XW          MFIND 2,MAP(3)
  10 5*CG          TXL   7  ALOGLEN(2)   
   8 5*X6          BCS      QJA  
   9 5BBQ          GEOERR 1,FMAPLLEN 
  18 5BWB    QJA   NGNC  0  1          [UNSET B0 OF X0. B1-23=#37777777  
   7 5CB2          SMO      6
  18 5CTL          SRC   0  0          [SHIFT UNSET BIT TO RIGHT PLACE   
   9 5D*=    #SKI K6FLAWMAP>199-199  
   9 5DSW          TRACE 0,BITWORD   
  17 5F#G          ADX   2  7          [ADJUST POINTER TO RIGHT WORD 
  20 5FS6          ANDS  0  A1(2)      [UNSET CORRECT BIT FOR FLAWED F/STORE BLK 
   7 5G?Q          LDN   0  1
  14 5GRB          ADS   0  REP(3)     [UPDATE FLAW COUNT
  15 5H?2          BRN      YLOOP      [GO TO NEXT FLAW ENTRY
  19 5HQL    NEWFI LDX   2  FNAMER+3(3)    [J IF MORE FLAW INDEX CAELLS ON SU
   8 5J==          BNZ   2  XC   
  13 5JPW          LDX   2  FX2         [ELSE......  
  19 5K9G          STO   5  SER(2)      [STORE SERIAL NR OF SU JUST SEARCHED 
   9 5KP6    #SKI  K6FLAWMAP>99-99   
  10 5L8Q          TRACE  SER(2),SERIALNR
  20 5LNB          BRN QD               [J TO NEXT LOGICAL FILE ENTRY IN ALFTABLE
   8 5M82    #SKI  ENTWINE<1$1   
   9 5MML    NOT   MUSEST 5,NCAN,NCAN
   7 5N7=    #SKI  ENTWINE   
  11 5NLW    NOT   MUSEST   5,NCAN,NCAN,,WERR
   7 5P6G          BRN   XB  
   9 5PL6    XTRAN LDX   0  MAP(3)   
  11 5Q5Q          DSA   0  4     [LFN IN X4 
   8 5QKB          LDX   2  FX2  
  14 5R52          STO   5  ACOMMUNE2(2)     [SERIAL NO  
   9 5RJL          STO   5  SER(2)   
  19 5S4=          CALL 0  XCON10    [CONVERT LFN TO DECIMAL RESULT IN ACOM1 
  11 5SHW          LDX   5  0(2)       [ACOM2
   7 5T3G          SLL   5  6
  10 5TH6    [   B0 TO B17 = SERIAL NO   
  17 5W2Q          CALL   0  XCON8     [CONVERT SERISL NO TO OCTAL   
  16 5WGB          LDX   2  FX2     [RESULT IN ACOM2 TO ACOM3.1  
  15 5X22          LDN   7  5     [FOR OUTBLOCK.  NO OF WORDS
   7 5XFL          OUTBLOCK 7
  15 5X_=          LDN   7  4     [FOR OUTPARAM5CH. COUNT)   
  10 5YDW          OUTPARAM 7,ACOMMUNE1  
   7 5YYG          LDN   7  6
  10 5_D6          OUTPARAM 7,ACOMMUNE2  
  20 5_XQ          INFORM 1,FLAWNOT,1    [OUTPUT MESSAGE 'FLAWMAPPING OF LFN %A  
  10 62CB    [ ON SU #%B NOT COMPLETED ' 
   9 62X2          LDX   5  SER(2)   
  12 63BL          BRN   QD      [J. FOR NEXT LF 
   4 63BQ ...#   
   4 63BW ...#   
   6 63C2 ...#SKI  JSKI34
   4 63C6 ...(   
   6 63C= ...QK2FLAWMAP  
  18 63CB ...      LTYPE    ACOMMUNE6(2),0      [ DEVICE TYPE IN B18-23  
   7 63CG ...      SBN   0  6
  15 63CL ...      BZE   0  UDAS                [ J IF EDS 8 
   7 63CQ ...      SBN   0  7
  15 63CW ...      BZE   0  UDAS                [ J IF FDS   
   8 63D2 ...      SBN   0  #15  
  17 63D6 ...      BNZ   0  XUPL                [ J IF NOT EDS30/60  
  17 63D= ...UDAS  LADDP    ACOMMUNE6(2),3      [ PTR TO APIA IN X3  
  10 63D? ...      LDX   0  BSUNIT5(3)   
   8 63D# ...      BZE   0  XUPL 
  11 63D* ...      FINDSU   1,BSUNIT5(3),XUPL
   8 63DB ...      LDCT  0  #100 
  17 63DC ...      ANDX  0  ASMARK(1)           [IN USE BY S-TRUSTED 
  14 63DD ...      BNZ   0  XUPL                [J IF SO 
   6 63DF ...#UNS  IPBD  
  20 63DG ...      SUSESTX  BSUNIT5(3),XUPL     [ CHECK FOR AND KEEP SU ONLINE   
   6 63DH ...#UNS  IPBD  
   4 63DJ ...#SKI
  20 63DK ...      TSUSESTX BSUNIT5(3),XUPL     [ CHECK FOR AND KEEP SU ONLINE   
   8 63DL ...      LDX   2  FX2  
  18 63DM ...      LDX   7  HBLOCK(1)           [ BLOCKS/CYL FROM ASTUC  
  21 63DQ ...      MPY   7  ACOMMUNE7(2)        [ ABS. BLKNUM OF START OF CYLINDER   
  21 63DW ...      ADX   0  ACOMMUNE8(2)        [ ABS. BLKNUM OF START OF TRANSFER   
  19 63F2 ...      LDX   6  ACOMMUNE9(2)        [ LENGTH OF TRANSFER IN WORDS
  21 63F6 ...      SRL   67 7                   [ X6 HOLDS NO. OF BLKS IN TRANSFER   
  20 63F= ...      BNZ   7  NDBLK               [ X7 HOLDS NO. OF REMAINING WORDS
   7 63FB ...      SBN   6  1
  19 63FG ...NDBLK ADX   6  0                   [ BLKNUM OF END OF TRANSFER  
  19 63FL ...      LDX   7  0                   [ BLKNUM OF START OF TRANSFER
  19 63FQ ...      LDN   4  FLADDR              [ LENGTH OF EWDAS/FLAWB BLOCK
   9 63FW ...      LDX   5  HSTUN(1) 
  16 63G2 ...      ANDX  5  BSB18               [ PRESERVE CSN   
  20 63G6 ...      CALL  0  SETFLAWB            [ GET A EWDAS/FLAWB AND LOCK IT  
   9 63G= ...      LDX   0  ABSUN(1) 
  19 63GB ...      STO   0  FLBSUN(3)           [ PRESERVE BSUN FOR BACKTRAN 
  16 63GG ...      STO   5  FLBCSN(3)           [ PRESERVE CSN   
   7 63GL ...      LDN   0  0
  17 63GQ ...      STO   0  FLBS1(3)            [ MODE FOR BACKTRAN  
  19 63GW ...XNDX  LDX   5  FLSTART(3)          [ WORD ADDRESS OF FLAW INDEX 
  18 63H2 ...      DVS   4  FLBS2(3)            [ CALCULATE BLOCK ADDRESS
  19 63H6 ...      TXU   5  7                   [ COMPARE FLAW INDEX ADDRESS 
  21 63H= ...      BCC      XRET                [ J IF SAME AS PERIPHERAL INCIDENT   
  18 63HB ...      LDX   1  5                   [ ADDRESS TO BE CONVERTED
  16 63HG ...      CONVERT  FLBS4(3),FLTYPE(3),FLBASE(3),FLDEP(3)
   9 63HL ...#DEF  P=BSET+BONL+FLAW  
  19 63HQ ...      BACKTRAN FLBS1(3),P,FLBS2(3),,FLBSUN(3),FLBS4(3),FLBS3(3) 
  17 63HW ...      CHTRAN   FLTYPE(3),XRET,XRET [ CHECK THE TRANSFER 
  17 63J2 ...      TXU   5  FLBUFF(3)           [ CHECK CORRECT BLOCK
  15 63J6 ...      BCS      XRET                [ J IF NOT   
  10 63J= ...      LDX   1  FLBUFF+1(3)  
  17 63JB ...      BZE   1  SUMOK               [ J IF NO CHECKSUM   
   9 63JG ...      LDN   1  FLBUFF(3)
  17 63JL ...      SUM   0  128                 [ CHECKSUM THE BLOCK 
  18 63JQ ...      BNZ   0  XRET                [ J IF CHECKSUM INCORRECT
   7 63JW ...SUMOK NGN   0  1
  20 63K2 ...      ADX   0  4                   [ MODIFIER TO START OF FLAW INDEX
  18 63K6 ...SCH   ADN   0  1                   [ START OF SEARCH LOOP   
   7 63K= ...      SMO      0
  19 63KB ...      LDX   1  FLBUFF+2(3)         [ NEXT ENTRY IN FLAW INDEX   
  19 63KG ...      BZE   1  SCH                 [ BLOCK IN FLAW AREA UNUSED  
  19 63KL ...      BNG   1  XNEXT               [ END OF INDEX -GO FOR NEXT  
  19 63KQ ...      TXL   1  7                   [ TEST BLKNUM < LOWER BOUND  
   8 63KW ...      BCS      XNO  
  19 63L2 ...      TXL   6  1                   [ TEST BLKNUM > UPPER BOUND  
  17 63L6 ...      BCC      XFND                [ J IF WITHIN RANGE  
  18 63L= ...XNO   TXL   0  FLBS2(3)            [ TEST FOR END OF INDEX  
  18 63LB ...      BCS      SCH                 [ CONTINUE SEARCH IF NOT 
   7 63LG ...XNEXT SMO      4
  20 63LL ...      LDX   0  FLBUFF(3)           [ WORD ADDRESS OF NEXT FLAW INDEX
  20 63LQ ...      STO   0  FLSTART(3)          [ WORD ADDRESS OF NEXT FLAW INDEX
  18 63LW ...      BNZ   0  XNDX                [ GO FOR NEXT FLAW INDEX 
   8 63M2 ...XRET  CALL  7  TIDY 
   7 63M6 ...XUPL  UPPLUS   1
   8 63M= ...XFND  CALL  7  TIDY 
   5 63MB ...      UP
   4 63MG ...#   
  21 63ML ...#     SUBROUTINE TO TIDY UP BY FREECOREING THE FLAWB AND RELEASING THE  
  17 63MQ ...#   STORAGE UNIT. (FREECORE IMPLICITLY UNLOCKS A BLOCK) 
   4 63MW ...#   
   8 63N2 ...TIDY  SBX   7  FX1  
   9 63N6 ...      LDX   5  FLBCSN(3)
   7 63N= ...      FREECORE 3
   6 63N? ...#UNS  IPBD  
   9 63N# ...      RELSTX   5,TID1   
   6 63N* ...#UNS  IPBD  
   4 63NB ...#SKI
   9 63NC ...      TRELSTX  5,TID1   
   8 63NG ...TID1  ADX   7  FX1  
   7 63NL ...      EXIT  7  0
   4 63NQ ...#   
  20 63NW ...#     SUBROUTINE TO GET A EWDAS/FLAWB, LOCK IT, AND FILL IN VARIOUS 
  12 63P2 ...#   DETAILS OBTAINED FROM THE ASTUC.
  16 63P6 ...#     ON ENTRY   X4= REQUIRED LENGTH OF THE FLAWB   
  13 63P= ...#                X5= CSN OF FAILING DISC
   4 63PB ...#   
  13 63PG ...#     ON EXIT    X3  POINTS TO THE FLAWB
  13 63PL ...#                X1  POINTS TO THE ASTUC
   9 63PQ ...#                X2=FX2 
   4 63PW ...#   
   5 63Q2 ...SETFLAWB
   8 63Q6 ...      SBX   0  FX1  
  16 63Q= ...      STO   0  AWORK1(2)           [ PRESERVE LINK  
  16 63QB ...      SETUPCORE 4,3,EWDAS,FLAWB,1  [ GET THE FLAWB  
  15 63QG ...      LOCKC    3,PTFLB             [ LONGLOCK IT
  10 63QJ ...      MHUNTW   3,EWDAS,FLAWB
  16 63QL ...      MFINDSU  1,5                 [ FIND THE ASTUC 
   9 63QQ ...      LDX   0  HTYPE(1) 
  18 63QW ...      STO   0  FLTYPE(3)           [ TYPE/SUBTYPE TO   FLAWB
  10 63R2 ...      LDX   0  ASUBASE(1)   
  17 63R6 ...      STO   0  FLBASE(3)           [ START CYL. OF SU.  
   9 63R= ...      LDX   0  HBLOCK(1)
  17 63RB ...      STO   0  FLDEP(3)            [ BLOCK/CYL. ON SU.  
   9 63RG ...      LDX   0  HFLAW(1) 
  19 63RL ...      STO   0  FLSTART(3)          [ POINTER TO FIRST FLAW INDEX
   8 63RQ ...      LDN   0  128  
  17 63RW ...      STO   0  FLBS2(3)            [ LENGTH FOR BACKTRAN
   9 63S2 ...      LDN   0  FLBUFF(3)
  19 63S6 ...      STO   0  FLBS3(3)            [ BUFFER ADDRESS FOR BACKTRAN
   9 63S= ...      LDX   0  AWORK1(2)
   8 63SB ...      ADX   0  FX1  
   7 63SG ...      EXIT  0  0
   4 63SL ...#   
   4 63SQ ...#   
   5 63SW ...PTFLB   
  10 63T2 ...      MHUNTW   2,EWDAS,FLAWB
   7 63T6 ...      EXIT  1  0
   4 63T= ...#   
   4 63TB ...#   
   4 63TG ...)   
  10 63W=          MENDAREA 50,K99FLAWMAP
   4 64*W    #END
   8 ____ ...77515514000100000000
