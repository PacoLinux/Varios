  16 22FL    #SEG  IDFPROP8                     [G CONSTANTINIDES
  13 22PD ...# COPYRIGHT INTERNATIONAL COMPUTERS 1982
   8 22_=    #OPT  K0IDFPROP=0   
  16 23DW    #LIS  K0IDFPROP>K0ALLGEO>K0GREATGEO>K0COMMAND>K0IDF 
   4 23YG    #   
  21 24D6    # THIS SEGMENT COMPARES SYSTEM.PROPERTY AND THE IDF TO MAKE SURE THAT   
  20 24XQ    # THEY ARE COMPATIBLE:THE IDF IS CHANGED TO MATCH SYSTEM.PROPERTY   
   4 25CB    #   
   4 25X2    #   
  10 26BL                   8HIDFPROP8   
   7 26W=    # ENTRY POINTS  
  12 27*W          SEGENTRY K1IDFPROP,Z1IDFPROP  
  12 27TG          SEGENTRY K20IDFPROP,Z20IDFPROP
  12 28*6          SEGENTRY K30IDFPROP,Z30IDFPROP
   4 28SQ    #   
  11 29S2          MENDAREA 50,K100IDFPROP   
   7 2=?L    #SKI  EMSJNL<1$1
   4 2=R=    (   
  16 2?=W    MSGE           32HUNIT     HAS BEEN RECONSTRUCTED   
  15 2?QG                   32HPLEASE REISSUE IDF COMMANDS   
   4 2#=6    )   
  10 2#PQ    XPAIR PAIR     IDFPROP,20   
   8 2*9B    MPROP          +10  
   9 2*P2                   12HSYSTEM
  10 2B8L                   12HPROPERTY  
   8 2BN=                   +0   
   8 2C7W                   +1   
   8 2CMG                   4HB1 
   9 2D76    XMAJ           +10000   
   4 2DLQ    #   
   4 2F6B    #   
  21 2FL2    YREC                               [A NON-COORD.ROUTINE(ALL IDF IN CORE)
  20 2G5L          BPZ   3  SAME                [TO FIND CELL X3 POINTS TO:X2-   
  20 2GK=    YREC1 LDX   6  3                   [IS POINTER TO CURRENT FILE/FRRB 
   7 2H4W          SRL   6  9
  17 2HJG          ANDN  6  #7777               [RECORD NO INTO X6   
  14 2J46          LDX   2  FX2                 [X1=FX2  
  10 2JHQ    YR    HUNT2    2,FILE,FRRB  
  10 2K3B          TXU   6  A1+BRECNO(2) 
   8 2KH2          BCS      YR   
   8 2L2L          ADN   2  A1   
  18 2LG=    SAME  ANDN  3  #777                [MAKE X3 RELATIVE POINTER
   7 2L_W          ADX   3  2
   7 2MFG          EXIT  7  0
   4 2M_6    #   
   4 2NDQ    #   
  16 2NYB    REC1  LDN   6  0                   [FIND RECORD ZERO
   8 2PD2          LDX   2  FX2  
  10 2PXL    REC   HUNT2    2,FILE,FRRB  
  10 2QC=          TXU   6  A1+BRECNO(2) 
   8 2QWW          BCS      REC  
   8 2RBG          ADN   2  A1   
   7 2RW6          EXIT  7  0
   4 2S*Q    #   
   4 2STB    #   
  17 2T*2    SELL  SBX   7  FX1                 [ROUTINE TO FREE CELL
   8 2TSL          MFREECEL 2,3  
   8 2W#=          ADX   7  FX1  
   7 2WRW          EXIT  7  0
   4 2X?G    #   
   4 2XR6    #   
  19 2Y=Q    ZASAT          [ROUTINE TO CLEAR OUT ASSOCS & ATTS IF NECESSARY 
  20 2YQB                                       [X2&X3(ABS.) POINT TO PARENT CELL
  20 2_=2                                       [X1 POINTS TO IDF/APROPNOS BLOCK 
  21 2_PL          SBX   5  FX1                 [ADJUST LINK-FREECELL CO-ORDINATES   
   9 329=          LDX   4  BATT(3)  
   9 32NW          LDX   3  BASS(3)  
  19 338G          BNZ   3  ZA1                 [J.IF THERE ARE ASSOCIATIONS 
  19 33N6          BNZ   4  ZA2                 [J.IF THERE ARE ATTRIBUTIONS 
   8 347Q    ZAXIT ADX   5  FX1  
   7 34MB          EXIT  5  0
   4 3572    #   
  14 35LL    # NOW DEAL WITH GETTING RID OF ASSOCIATIONS 
   4 366=    #   
   8 36KW    ZA1   CALL  7  YREC 
  17 375G          LDX   7  BNO(3)              [LOAD NO OF ASSOCS   
   8 37*# ...      BZE   7  XA2F 
  21 37K6          SLL   7  1                   [& MULT.BY 2,FOR USE AS PREMODIFIER  
   7 39HL    ZA7   SMO      7
  16 3=3=          LDX   6  BNO(3)              [PICK UP PROP.NO 
  20 3=GW          LDX   0  6                   [AND MAKE SURE IT IS IN CURRENT  
  19 3?2G          ANDX  0  BITS22LS            [LIMITS OF IDF/APROPNOS BLOCK
   8 3?G6          SBX   0  A1(1)
  14 3?_Q          BNG   0  ZA4                 [J.IF NOT
   8 3#FB          SBN   0  1000 
   8 3#_2          BNG   0  XA1  
  10 3*DL          LDX   0  A1+1001(1)   
   8 3*Y=          BNG   0  XA2  
   8 3BCW          BRN      ZA4  
   4 3BXG    XA1 
   8 3CC6          ADN   0  1001 
  20 3CWQ          SMO      0                   [OTHERWISE CHECK NO.IS IN BLOCK  
   8 3DBB          ERX   6  A1(1)
   9 3DW2          ANDX  6  BITS22LS 
  16 3F*L          BZE   6  ZA4                 [J.IF ALL OKAY   
   4 3L9W    XA2 
  20 3LPG          ON       G4SUDBIT                  [TO INDICATE^SEND MESSAGE^ 
   9 3M96          LDX   0  BNO(3)   
  19 3MNQ          SBN   0  1                   [SUBTRACT 1 FROM NO.OF ASSOCS
  20 3N8B          BNZ   0  ZA5                 [J.IF NOT ZERO AS WILL KEEP CELL 
   4 3ND8 ...XA2F
   8 3NN2          SMO      FX2  
   9 3P7L          LDX   3  AWORK4   
   8 3PM=          CALL  7  YREC1
   7 3Q6W          SBX   3  2
   8 3QLG          ADN   3  BASS 
  15 3R66          CALL  7  SELL                [CLEAR CELL  
  19 3RKQ          MHUNTW   1,IDF,APROPNOS      [REHUNT IDF/APROPNOS BLOCK   
  17 3S5B          BNZ   4  ZA3                 [J.FOR ATTRIBUTIONS  
  16 3SK2          BRN      ZAXIT               [OTHERWISE EXIT  
  17 3T4L    ZA5   STO   0  BNO(3)              [ADJUST ASSOCS COUNT 
   7 3TJ=          SMO      7
  15 3W3W          STOZ     BNO-1(3)            [CLEAR ASSOCS
   7 3WHG          SMO      7
   9 3X36          STOZ     BNO(3)   
   7 3XGQ    ZA4   SBN   7  2
  17 3Y2B          BNZ   7  ZA7                 [J.FOR NEXT ASSOCS   
   4 3YG2    #   
  14 3Y_L    # NOW DEAL WITH GETTING RID OF ATTRIBUTIONS 
   4 3_F=    #   
   8 3_YW          BZE   4  ZAXIT
   4 42DG    ZA2 
   7 42Y6    ZA3   LDX   3  4
   8 43CQ          CALL  7  YREC1
  16 43XB          LDX   7  BNO(3)              [NO.OF ATTRIBS   
   9 4478 ...      BZE   7   ZA15F   
   7 45TW    ZA9   SMO      7
  18 46*G          LDX   6  BTYPE(3)            [PICK UP POSSIBLE ATTRIB 
  15 46T6          BZE   6  ZA8                 [J.IF NULL   
  21 47#Q          LDX   0  6                   [OTHERWISE SEE IF NO.IN BLOCK LIMITS 
   9 47SB          ANDX  0  BITS22LS 
   8 48#2          SBX   0  A1(1)
  14 48RL          BNG   0  ZA8                 [J.IF NOT
   8 49?=          SBN   0  1000 
   8 49QW          BNG   0  XA3  
  10 4==G          LDX   0  A1+1001(1)   
   8 4=Q6          BNG   0  ZA15 
   8 4?9Q          BRN      ZA8  
   4 4?PB    XA3 
   8 4#92          ADN   0  1001 
   7 4#NL          SMO      0
  20 4*8=          LDX   0  A1(1)               [PICK UP APROPRIATE BLOCK ENTRY  
  21 4*MW          BZE   0  ZA15                [J.IF NON-EXISTENT:THAT IS NO PROP.  
  21 4B7G          SMO      7                   [OTHERWISE RE-STORE PROP.NO IN CASE  
  20 4BM6          STO   0  BTYPE(3)            [PERM/TEMP/EXCL/INCL DISCREPANCY 
  20 4C6Q          BRN      ZA8                 [J.TO LOOK AT NEXT ATTRIB IF NEC.
   9 4CLB    ZA15  ON       G4SUDBIT 
   9 4D62          LDX   0  BNO(3)   
  17 4DKL          SBN   0  1                   [INVESTIGATE COUNT   
  19 4F5=          BNZ   0  ZA10                [J.IF NO NEED TO FREE CELL   
   5 4F*4 ...ZA15F   
  17 4FJW          SMO      FX2                 [OTHERWISE FREE CELL 
   9 4G4G          LDX   3  AWORK4   
   8 4GJ6          CALL  7  YREC1
   7 4H3Q          SBX   3  2
   8 4HHB          ADN   3  BATT 
   8 4J32          CALL  7  SELL 
  17 4JGL          MHUNTW   1,IDF,APROPNOS      [REHUNT BLOCK & EXIT 
   8 4K2=          BRN      ZAXIT
  17 4_NG    ZA10  STO   0  BNO(3)              [STORE ADJUSTED COUNT
   7 5286          SMO      7
  17 52MQ          STOZ     BTYPE(3)            [CLEAR ATTRIBUTION   
   7 537B    ZA8   SBN   7  1
  18 53M2          BPZ   7  ZA9                 [J.FOR NEXT ATTRIBUTION  
  20 546L          LDX   0  BTYPE(3)            [OTHERWISE BEGIN ^MOVE UP^------ 
   9 54L=          LDX   7  BNO(3)   
  17 555W          BZE   0  ZA11                [J.IF NO CONSOLE PROP
  18 55KG          SBN   7  1                   [OTHERWISE ADJUST COUNT  
   8 5656          BZE   7  ZAXIT
   7 56JQ    ZA11  LDX   6  3
  10 574B    ZA14  LDX   0  BTYPE+1(3)   
  20 57J2          BNZ   0  ZA12                [J.IF FOUND A ^MOVING^CANDIDATE  
   7 583L          ADN   3  1
  21 58H=          BRN      ZA14                [& IF NOT J.TO LOOK AGAIN IN NXT WORD
  17 5=FQ    ZA12  STOZ     BTYPE+1(3)          [CLEAR OLD POSITION  
   7 5=_B          SMO      6
  19 5?F2          STO   0  BTYPE+1             [AND STORE IN NEW POSITION   
   7 5?YL          SBN   7  1
  18 5#D=          BZE   7  ZAXIT               [J.TO EXIT IF ALL DONE   
   7 5#XW          ADN   6  1
   7 5*CG          ADN   3  1
  19 5*X6          BRN      ZA14                [OTHERWISE CONTINUE MOVING   
   4 5BBQ    #   
   4 5BWB    #   
   6 5W2Q    Z1IDFPROP   
  20 5WGB          OFF      G4SUDBIT                  [MAKE SURE SWITCH  CLEAR   
  18 5X22          SETNCORE 10,3,FILE,FABSNB    [TO OPEN SYSTEM.PROPERTY 
   8 5XFL          LDN   4  A1(3)
   9 5X_=          LDN   3  MPROP(1) 
   8 5YDW          MOVE  3  10   
  18 5YYG          SETMODE  4,GENERAL,QUERY,CAREFUL     [TO OPEN SYSPROP 
   9 5_D6          OPEND    PCERR,4  
   9 5_XQ          TESTREP  OK,PC1   
  10 62CB    PCERR GEOERR   1,PROPFILE   
  20 62X2    PC1   MHUNT    3,FILE,FABSNB       [FREE FABSNB-NO GOOD FOR IDFOPEN 
   7 63BL          FREECORE 3
  14 63W=          IDFOPEN                      [OPEN IDF
  19 64*W          LDN   4  2                   [NOW READ WHOLE IDF INTO CORE
   8 64TG    PC2   READED   4,4  
   7 65*6          ADN   4  1
  21 65SQ          TESTREP  OK,PC2              [J.TO READ NEXT BLOCK IF NECESSARY   
   7 66#B          STEP     1
  18 66S2          BZE   3  PCERR               [J.TO ERROR NO CENTRAL   
   7 67?L    PC4   STEP     1
   8 67R=          BZE   3  PC3  
  10 68=W          LDX   5  APROPGROUP(3)
  21 68QG          BPZ   5  PC4                 [J.IF NOT CONSOLE PROP TO STEP AGAIN 
  19 69=6          LDX   5  APROPNO(3)          [LOAD ACTUAL PROPERTY NUMBER 
  16 69PQ          CALL  7  REC1                [FIND RECORD ZERO
  19 6=9B          LDN   4  BEXOT               [IN CASE NEED TO GET NEW CELL
  16 6=P2          LDX   3  BEXOT(2)            [CONTENTS INTO X3
  19 6?8L          BZE   3  PC5                 [J.IF NO CONSOLE PROPS IN IDF
  21 6?N=    PC6   LDX   4  3                   [OTHERWISE SEARCH CHAIN FOR NO.IN X5 
  17 6#7W          CALL  7  YREC                [FIND CONSOLE CELL   
   9 6#MG          LDX   0  BNO(3)   
   7 6*76          ERX   0  5
  21 6*LQ          ANDX  0  BITS22LS            [COMPARE ACTUAL NOS-BOTTOM 22 BITS   
  15 6B6B          BZE   0  PC15                [J.IF SAME   
  20 6BL2          LDX   3  0(3)                [IF FOUND:OTHERWISE ADD ENTRY TO-
  20 6C5L          BNZ   3  PC6                 [CONSOLE CHAIN WITH U0 AS CONSOLE
   7 6CK=    PC5   LDX   3  4
   8 6D4W          ANDN  3  #777 
  15 6DJG          MGETCELL 2,3                 [GET NEW CELL
  18 6F46          ON       G4SUDBIT                  [ON^MESSAGE^SWITCH 
   7 6FHQ          ADX   3  2
  21 6G3B    PC15  STO   5  BNO(3)              [STORE IN PROP NO(& MAKE SURE TEMP/  
  21 6GH2          BRN      PC4                 [PERM/INCL/EXCL)& J.FOR NXT CONS PROP
   4 6H2L    #   
  20 6HG=    # NOW START INVERSE CHECKING:THAT IS REMOVE EXTRA PROPS FROM IDF.   
  15 6H_W    # REMEMBER THAT PROPERTIES DO NOT HAVE TO BE IN 
  14 6JFG    # ASCENDING NUMBER ORDER IN :SYSTEM.PROPERTY
   4 6J_6    #   
  18 6KDQ    PC3   REWIND   1                   [PUT SYPROP BACK TO START
  12 6KYB          SETNCORE 1003,1,IDF,APROPNOS  
   7 6LD2          LDN   0  1
   8 6LXL          STO   0  A1(1)
  19 6MC=    PC22  STOZ     A1+1(1)             [ZEROIZE IDF/APROPNOS BLOCK  
   9 6MWW          LDN   4  A1+1(1)  
   9 6NBG          LDN   5  A1+2(1)  
  21 6NW6          MOVE  4  500                 [TO ZEROIZE 1000 WORDS TWO ^MOVES^-  
  15 6P*Q          ADN   4  500                 [ARE NEEDED!!
   8 6PTB          ADN   5  500  
   8 6Q*2          MOVE  4  501  
  15 6S?G    PC11  STEP     1                   [STEP SYSPROP
  21 6SR6          MHUNTW   1,IDF,APROPNOS      [OTHERWISE PUT ENTRY IN BLOCK IF NEC.
  16 6T=Q          BZE   3  PCX10               [J.IF ALL DONE   
  10 6TQB          LDX   6  APROPNO(3)   
  20 6W=2          ANDX  6  BITS22LS            [DON'T WANT TEMP/PERM BITS ETC.  
   8 6WPL          SBX   6  A1(1)
   8 6X9=          BNG   6  PC11 
   8 6XNW          SBN   6  1000 
  15 6Y8G          BPZ   6  PCX12               [J.IF TOO BIG
   8 6YN6          ADN   6  1000 
  10 6_7Q          LDX   0  APROPNO(3)   
   7 6_MB          SMO      6
  19 7272          STO   0  A1+1(1)             [OTHERWISE STORE AWAY NUMBER 
   8 72LL          SBN   6  999  
  20 736=          BNZ   6  PC11                [J.IF STILL MORE ROOM IN BLOCK   
  10 73KW          LDX   0  A1+1002(1)   
   8 745G          BNG   0  PC12 
   8 74K6          BRN      PC14 
  10 7*W2    PCX10 LDX   0  A1+1002(1)   
   8 7B*L          BNG   0  PC12 
  21 7BT=    PC10  NGS   1  A1+1001(1)          [MARK NEG TO SHOW LAST TIME THROUGH  
   8 7C#W          BRN      PC14 
  10 7CSG    PCX12 NGS   1  A1+1002(1)   
   8 7D#6          BRN      PC11 
  21 7DRQ    PC12  REWIND   1                   [SO THAT WE'LL GET THIS PROP NEXT GO 
  11 7F?B          MHUNTW   1,IDF,APROPNOS   
   4 7FR2    #   
  21 7G=L    # NOW CHECK CONSOLE PROP.CHAIN FOR SUPPOSEDLY UNKNOWN CONSOLE PROPERTIES
   4 7GQ=    #   
  17 7H9W    PC14  CALL  7  REC1                [TO FIND RECORD ZERO 
   9 7HPG          LDX   3  BEXOT(2) 
  18 7J96          BZE   3  MPX1                [J.IF NO CONSOLE PROPS   
  21 7JNQ          LDN   4  BEXOT               [KEEP PTR TO POSITION OF PTR TO CONS.
  20 7LM=    PR4   LDX   5  3                   [KEEP PTR TO CURRENT CONSOLE CELL
   8 7M6W          CALL  7  YREC 
  21 7MLG    PR8   LDX   0  BNO(3)              [NOW CHECK NUMBER IS IN BLOCKS LIMITS
   9 7N66          ANDX  0  BITS22LS 
   8 7NKQ          SBX   0  A1(1)
  14 7P5B          BNG   0  PR1                 [J.IF NOT
   8 7PK2          SBN   0  1000 
   8 7Q4L          BNG   0  XA4  
  10 7QJ=          LDX   0  A1+1001(1)   
   8 7R3W          BNG   0  XA5  
   8 7RHG          BRN      PR1  
   4 7S36    XA4 
   9 7SGQ          LDX   6  BNO(3)   
   8 7T2B          ADN   0  1000 
   7 7TG2          SMO      0
   9 7T_L          ERX   6  A1+1(1)  
  18 7WF=          BZE   6  PR1                 [J.ALL OKAY-PROP EXISTS  
   4 84SB    XA5 
  18 85#2          LDX   5  BTYPE(3)            [PICK UP CONSOLE POINTER 
  21 85RL          LDX   0  4(3)                [OTHERWISE INVESTIGATE SUBSID.CELLS  
  15 86?=          BZE   0  PR2                 [J.IF NONE   
  18 86QW          SBX   3  2                   [OTHERWISE FREE THEM ALL 
   8 87=G          LDN   3  4(3) 
   8 87Q6    PR3   CALL  7  SELL 
   7 889Q          SMO      2
   8 88PB          LDX   0  0(3) 
  18 8992          BNZ   0  PR3                 [J.FOR NEXT SUBSID CELL  
  19 89NL    PR2                                [NOW FREE CONSOLE CELL ITSELF
   9 8=8=          ON       G4SUDBIT 
  14 8=MW          LDX   3  4                   [X4 IS   
  21 8?7G          CALL  7  YREC1               [COPY OF A PTR KEPT FOR THIS PURPOSE 
   7 8?M6          SBX   3  2
   8 8#6Q          CALL  7  SELL 
  11 8#LB          MHUNTW   1,IDF,APROPNOS   
   7 8*62          ADX   3  2
  18 8*KL          BZE   5  PR5                 [J.IF U0:NOTHING TO DO   
  21 8B5=          LDX   0  0(3)                [OTHERWISE KEEP PTR TO NEXT CONSOLE- 
  18 8BJW          SMO      FX2                 [PROPERTY CELL IN AWORK4 
   9 8C4G          STO   0  AWORK4   
  21 8CJ6          CALL  7  REC1                [FIND RECORD ZERO & SEARCH CONS.CHAIN
  21 8D3Q          LDX   3  BEXOT(2)            [TO CHECK UNSETTING OF^THIS IS CLUST 
   8 8DHB          BZE   3  PR9  
  15 8F32    PR7   CALL  7  YREC                [CONSOLE^ BIT
   9 8FGL          LDX   0  BTYPE(3) 
  21 8G2=          ERX   0  5                   [TO COMPARE CONSOLES WITH ONE IN X5  
   9 8GFW          ANDX  0  BITS22LS 
  19 8G_G          BZE   0  PR6                 [J.AS THIS CONSOLE STILL USED
   8 8HF6          LDX   3  0(3) 
  18 8HYQ          BNZ   3  PR7                 [J.FOR NEXT CONSOLE PROP 
  21 8JDB    PR9   LDX   3  5                   [OTHERWISE CLEAN OUT^THIS IS CLUSTER 
  15 8JY2          CALL  7  YREC1               [CONSOLE^BIT 
   8 8KCL          LDCT  0  #40  
   9 8KX=          ERS   0  BNUMB(3) 
   8 8MTQ    PR6   SMO      FX2  
  19 8N*B          LDX   3  AWORK4              [GO BACK TO CONSOLE CELLS NOW
  18 8NT2          BZE   3  MPX6                [J.NO MORE CONSOLE CELLS 
   7 8P#L          LDX   5  3
  17 8PS=          CALL  7  YREC1               [& CONTINUE SEARCH   
   8 8Q?W          BRN      PR8  
  21 8_6L    PR1   LDX   4  5                   [FOR FREEING A POSIBLE CONSOLE CELL  
   8 8_L=    PR5   LDX   3  0(3) 
  21 925W          BNZ   3  PR4                 [J.FOR NEXT CONSOLE PROP COMPARISON  
   4 92KG    #   
  18 9356    # NOW CHECK 7007 CHAIN FOR ATT.& ASS.OF UNKNOWN PROPERTIES  
   4 93JQ    #   
  17 944B    MPX6  CALL  7  REC1                [TO FIND RECORD ZERO 
   9 94J2    MPX1  LDX   3  BUNIT(2) 
  20 953L          BZE   3  TP1                 [J.TO SEARCH IPB CHAIN IF NO MPX 
  19 95H=          CALL  7  YREC                [OTHERWISE FIND MPX/UPX CELL 
   8 962W    MPX5  LDX   0  0(3) 
   8 96GG          SMO      FX2  
  20 9726          STO   0  AWORK1              [KEEP POINTER TO NEXT UNIT CELL  
   9 97FQ          LDX   0  BLINE(3) 
   8 97_B          SMO      FX2  
  19 98F2          STO   0  AWORK2              [KEEP POINTER TO LINE CELL   
  19 98YL          CALL  5  ZASAT               [CALL^CANCEL^ROUTINE FOR UNIT
   8 99D=    MPX3  SMO      FX2  
  19 99XW          LDX   3  AWORK2              [PICK UP LINE CELL POINTER   
  20 9=CG          BZE   3  MPX2                [J.FOR NEXT UNIT IF NO MORE LINES
   8 9=X6          SMO      FX2  
   9 9?BQ          STO   3  AWORK4   
  18 9?WB          CALL  7  YREC1               [OTHERWISE FIND LINE CELL
   8 9#B2          LDX   0  0(3) 
   8 9#TL          SMO      FX2  
  19 9**=          STO   0  AWORK2              [KEEP POINTER TO NEXT LINE   
   9 9*SW          LDX   0  BLINE(3) 
   8 9B#G    MPX4  SMO      FX2  
  21 9BS6          STO   0  AWORK3              [& KEEP POINTER TO POSSIBLE 7020 CELL
  15 9C?Q          CALL  5  ZASAT               [& ^CANCEL^  
   8 9CRB          SMO      FX2  
   9 9D?2          LDX   3  AWORK3   
  19 9DQL          BZE   3  MPX3                [J.IF NO 7020'S FOR NEXT LINE
   8 9F==          SMO      FX2  
   9 9FPW          STO   3  AWORK4   
  18 9G9G          CALL  7  YREC1               [OTHERWISE FIND 7020 CELL
   8 9GP6          LDX   0  0(3) 
  19 9H8Q          BRN      MPX4                [AND J.FOR^CANCEL^FOR 7020   
   8 9HNB    MPX2  SMO      FX2  
  17 9J82          LDX   3  AWORK1              [PICK UP UNIT POINTER
  18 9JML          BZE   3  TP5                 [J.AS NO MORE 7007 UNITS 
   8 9K7=          CALL  7  YREC1
  16 9KLW          BRN      MPX5                [J.FOR NEXT 7007 
   4 9L6G    #   
  18 9LL6    # NOW CHECK IPB CHAIN FOR ATT.& ASS.OF UNKNOWN PROPERTIES   
   4 9M5Q    #   
  17 9MKB    TP5   CALL  7  REC1                [TO FIND RECORD ZERO 
   9 9N52    TP1   LDX   3  BIPB(2)  
  21 9NJL          BZE   3  PC20                [J.TO POSSIBLE REFILL ETC.OF BLOCK   
  16 9P4=          CALL  7  YREC                [FIND IPB CELL   
   8 9R2Q    TP4   LDX   0  0(3) 
   8 9RGB          SMO      FX2  
  20 9S22          STO   0  AWORK1              [STORE POINTER TO NEXT IPB UNIT  
   9 9SFL          LDX   0  BLINE(3) 
   8 =6=6    TP3   SMO      FX2  
  19 =6PQ          STO   0  AWORK2              [STORE POINTER TO IDENTIFIER 
  15 =79B          CALL  5  ZASAT               [&^CANCEL^   
   8 =7P2          SMO      FX2  
   9 =88L          LDX   3  AWORK2   
  21 =8N=          BZE   3  TP2                 [J.FOR NEXT IPB UNIT IF NO MORE IDENT
   8 =97W          SMO      FX2  
   9 =9MG          STO   3  AWORK4   
  20 ==76          CALL  7  YREC1               [OTHERWISE FIND IDENTIFIER CELL  
   8 ==LQ          LDX   0  0(3) 
  20 =?6B          BRN      TP3                 [J.TO^CANCEL^ FOR THIS IDENTIFIER
   8 =?L2    TP2   SMO      FX2  
  20 =#5L          LDX   3  AWORK1              [PICK UP NEXT IPB UNIT CELL PTR  
  17 =#K=          BZE   3  PC20                [J.AS NO MORE IPB'S  
   8 =*4W          CALL  7  YREC1
  16 =*JG          BRN      TP4                 [J.FOR NEXT IPB  
  17 =B46          BNZ   3  TP4                 [& J.FOR NEXT UNIT   
  19 =BHQ    PC20  LDX   0  A1+1001(1)          [NOW HAVE WE FINISHED YET?   
  14 =C3B          BNG   0  PC21                [J.IF YES
   8 =CH2          LDN   0  1000 
  20 =D2L          ADS   0  A1(1)               [UPDATE A1 OF IDF/APROPNOS BLOCK 
  17 =DG=          BRN      PC22                [J.TO REFILL BLOCK   
   4 =D_W    #   
  18 =FFG    # SCAN OF IDF COMPLETED NOW:JUST SEE IF MESSAGE IS NEEDED   
   4 =F_6    #   
  18 =GDQ    PC21  FREECORE 1                   [FREE IDF/APRONOS BLOCK  
  21 =GYB          BSOFF    G4SUDBIT,PC23             [J.IF SWITCH IS OFF:NO MESSAGE 
  19 =HD2          GETACT   GENERAL,APROPNOS    [OTHERWISE CREATE ACTIVITY   
   9 =HXL          LDX   2  BPTR(2)  
  10 =JC=          LINKSET  2,XPAIR(1)   
   8 =JWW          FWAIT    #54  
  18 =KBG          OFF      G4SUDBIT                  [LEAVE SWITCH CLEAR
   4 =KW6    PC23
   7 =L*Q          CLOSE    1
  10 =LTB          ACROSS   IDFCLEAN,10  
   4 =M*2    #   
   4 =MSL    #   
   4 =N#=    #   
   7 =NRW    #SKI  EMSJNL<1$1
   4 =P?G    (   
  21 =PR6    MESS           52HSYSTEM.IDF HAS BEEN ADJUSTED TO MAKE IT COMPATIBLE W  
  19 =Q=Q                   44HITH SYSTEM.PROPERTY(AN IDFLIST IS ADVISED).   
   4 =QQB    )   
   4 =R=2    #   
  19 =RPL    Z20IDFPROP                         [ENTRY POINT TO SEND MESSAGE 
   7 =S9=    #SKI  EMSJNL<1$1
   4 =SNW    (   
  19 =T8G          SETNCORE 26,3,CONBUFF,COUT   [THAT IDF HAS BEEN CHANGED   
   8 =TN6          LDN   0  25   
   8 =W7Q          STO   0  A1(3)
   9 =WMB          LDN   6  MESS(1)  
   9 =X72          LDN   7  A1+1(3)  
   8 =XLL          MOVE  6  24   
   7 =Y6=          CONSOUT   
   4 =YKW    )   
   6 =_5G    #SKI  EMSJNL
  10 =_K6          INFORM   1,EMSIDF,1   
   9 ?24Q    XSUI  ACROSS   SUICIDE,1
   6 ?2JB    Z30IDFPROP  
   9 ?342          STOZ     AWORK1(2)
   5 ?3HL    XLOPP   
  16 ?43=          MHUNTW   3,AMXOR,AMESS       [HUNT MESS BLOCK.
   9 ?4GW          LDX   6  AWORK1(2)
  10 ?52G          BXE   6  A1(3),XEND   
   4 ?5G6    XCO 
   6 ?5_Q    #SKI  EMSJNL
   4 ?6FB    (   
   7 ?6_2          SMO      6
   9 ?7DL          LDX   6  A1+1(3)  
   8 ?7Y=          GEOPACK  5,6,1
   4 ?8CW    OUTP
  11 ?8XG          OUTPACK  5,1,GEOPER,OUTP  
  10 ?9C6 ...      INFORM   1,IDFPROP,1  
   4 ?9WQ    )   
   7 ?=BB    #SKI  EMSJNL<1$1
   4 ?=W2    (   
   7 ??*L          SMO      6
   9 ??T=          LDX   5  A1+1(3)  
   7 ?##W          LDN   6  0
   7 ?#SG          LDN   4  4
  20 ?*#6          DVD   5  XMAJ(1)             [CONVERT GEO.NO. TO PRINT FORM.  
   7 ?*RQ          LDX   5  6
   7 ?B?B          ADN   5  1
   7 ?BR2          LDN   6  0
   7 ?C=L          MODE     1
   4 ?CQ=    XUSA
  16 ?D9W          CBD   5  MSGE+1(1)           [CONVERT GEO.NO. 
   7 ?DPG          BCHX  1  /
   8 ?F96          BCT   4  XUSA 
  21 ?FNQ          SETNCORE 17,3,CONBUFF,COUT   [MOVE INFO. INTO BLK. TO BE OUTPUT   
   8 ?G8B          LDN   0  17   
   8 ?GN2          STO   0  A1(3)
   9 ?H7L          LDN   6  MSGE(1)  
   9 ?HM=          LDN   7  A1+1(3)  
   8 ?J6W          MOVE  6  16   
  16 ?JLG          CONSOUT                      [OUTPUT MESSAGE  
   4 ?K66    )   
   7 ?KKQ          LDN   0  1
   9 ?L5B          ADS   0  AWORK1(2)
  20 ?LK2          BRN      XLOPP               [J.BACK DEAL WITH NEXT GEO.NO.   
   4 ?M4L    XEND
   7 ?MJ=          FREECORE 3
   8 ?N3W          BRN      XSUI 
   4 ?NHG    #END
   2 ?P36
   6 ____ ...631707640001
