  16 22FL    #SEG  MOPOUT8                      [G CONSTANTINIDES
  15 22_=    #LIS  K0MOPOUT>K0MULTIPLX>K0ALLGEO>K0GREATGEO   
   9 23DW                   8HMOPOUT8
   7 23YG    # ENTRY POINTS  
  11 24D6          SEGENTRY K1MOPOUT,Z1MOPOUT
  11 24XQ          SEGENTRY K2MOPOUT,Z2MOPOUT
  11 25CB          SEGENTRY K3MOPOUT,Z3MOPOUT
  10 25X2          MENDAREA 50,K100MOPOUT
   4 26BL    [   
  20 26W=    [THIS SEGMENT OUTPUTS DATA FROM A GMON/AOUT BLOCK TO A MULTIPLEXOR  
  19 27*W    [TERMINAL. IT USES MODE #11 FOR NORMAL OUTPUT, AND MODE #13 FOR 
   7 27TG    [^READY^ OUTPUT.
   4 28*6    [   
  16 28SQ    TABLE BRN      XE3                 [NORMAL TRANSFER.
  17 29#B          BRN      XE4                 [BREAK-IN OCCURRED   
  18 29S2          BRN      ZB4                 [MESSAGE ENDED 'CANCEL'  
  17 2=?L          BRN      ZB5                 [MESSAGE TIMED OUT   
   9 2=R=    #SKI  K6MULTIPLX>99-99  
   4 2?=W    (   
   9 2?QG    #DEF  ZMAX=0?-TABLE+1   
  18 2#=6    TNUM           +ZMAX               [NUMBER OF TABLE ENTRIES 
   6 2#PQ    #FRE  ZMAX  
   4 2*9B    )   
   5 2*P2    MONAOUT 
   8 2B8L    #HAL  GMON+AOUT,0   
   4 2BN=    [   
   5 2C7W    MXORBBC 
   8 2CMG    #HAL  AMXOR+BBC,0   
   4 2D76    [   
  10 2DBY ...ZMIN           60+3/FONINTP 
   8 2DLQ    XMASK          +1.1 
   8 2F6B    XSHIFT         #74  
   9 2FL2    NLMSK          #20000   
   9 2G5L    XCANCEL        6HCANCEL 
   9 2G9H ...ZJMOPWT        +JMOPWTLI
   9 2G*D ...               +JMOPWTJO
   9 2GF* ...               +JMOPWTIN
  16 2GK=    ZJTIMEOUT      +JTIMEOUT           [TIMED OUT 'TIME'
  17 2H4W    ZJTOREST       +JTOREST            [RESTARTED AT 'TIME' 
  18 2HJG    ZJTOCLOSE      +JTOCLOSE           [CLOSED DOWN AT 'TIME'   
  16 2J46    TIME           +ATIME              [READY MESSAGE   
  20 2JHQ    #DEF  ZZS=AMOPOUT-A1+6             [LENGTH OF THE 3 NEWLINES BLOCK  
   4 2K3B    [   
  20 2KH2    [THIS SUBROUTINE CONVERTS THE CARD IMAGE FORMAT MESSAGE HELD IN A   
  21 2L2L    [SPECIFIED BLOCK INTO DATA SUITABLE FOR TRANSMISSION TO A MOP CONSOLE.  
   4 2LG=    [   
  21 2L_W    [THE OUTPUT IS PUT INTO AN AMXOR/AOUT BLOCK (OR BLOCKS). LINES OF OUTPUT
  21 2MFG    [ARE TRUNCATED TO THE LAST NON-SPACE CHARACTER. IF THE LAST CHARACTER   
  21 2M_6    [IN THE LINE IS NOT A SPACE, AND THE NEXT INPUT CHAR. IS A SPACE, THE   
  21 2NDQ    [LINE IS OUTPUT WITHOUT EDITING, OTHERWISE A SEARCH IS MADE BACKWARDS,  
  21 2NYB    [THROUGH UP TO 8 CHARACTERS, FOR A SPACE: IF ONE IS FOUND THE LINE IS   
  20 2PD2    [TRUNCATED TO THE LAST NON-SPACE CHARACTER BEFORE THIS, AND THE REST
  20 2PXL    [OF THE LINE (UP TO 7 CHARS.) IS PREFIXED TO THE NEXT LINE. IF THE  
  21 2QC=    [MESSAGE IS TOO LONG FOR 1 MULTIPLEXOR TRANSFER IT IS TRUNCATED TO THE  
  20 2QWW    [LAST NEWLINE, IF POSSIBLE, AND THE REST OF THE MESSAGE IS PUT INTO 
  20 2RBG    [ANOTHER BLOCK (OR BLOCKS). THIS IS SO THAT START-UP CHARACTERS (KER
  21 2RW6    [-CHUNGS ETC.) COME AT THE START OF A LINE,RATHER THAN HALF WAY THROUGH.
   4 2S*Q    [   
   6 2STB    [ON ENTRY   
  16 2T*2    [X3 POINTS TO THE LINE CONTROL BLOCK (AMXOR/ALCB)   
  13 2TSL    [X4 CONTAINS THE SUBROUTINE LINK ADDRESS
  20 2W#=    [AWORK1 CONTAINS THE TYPE OF THE BLOCK CONTAINING THE INPUT MESSAGE.
  20 2WRW    [AWORK2 CONTAINS A COUNT OF THE NO. OF CHARS. IN THE INPUT MESSAGE. 
  20 2X?G    [ACOMMUNE1 CONTAINS A COUNT OF THE NO. OF CHARS. IN THE TERMINATOR. 
  21 2XR6    [ACOMMUNE2 CONTAINS THE START ADDRESS OF THE TERMINATOR, RELATIVE TO THE
  20 2Y=Q    [     START OF THE LINE CONTROL BLOCK (CAN BE A CHARACTER ADDRESS). 
  21 2YQB    [ACOMMUNE3 CONTAINS AN INDICATION OF THE TYPE OF MESSAGE WHICH IS BEING 
  21 2_=2    [     CONVERTED: B12=1 - NEWLINE SUPPRESSION REQUIRED AT END OF MESSAGE.
  14 2_PL    [                B18=1-^CUT OFF DC1 MARKER^ 
  15 329=    [               B19=1 - OBJECT PROGRAM OUTPUT   
  18 32NW    [                B20=1 - ^FORCED TYPING^ CATEGORY MESSAGE.  
  15 338G    [                B21=1 - ^BROADCAST^ MESSAGE.   
  15 33N6    [                B22=1 - ^BROKEN IN^ MESSAGE.   
  16 347Q    [                B23=1 - ^READY^ CATEGORY MESSAGE.  
  14 34MB    [              ALL OTHER BITS MUST BE ZERO. 
  16 3572    [ACOMMUNE5 CONTAINS THE ADDRESS OF THE INPUT BLOCK  
   4 35LL    [   
  21 366=    [ACOMMUNE7 IS NOT USED BY THE SUBROUTINE, BUT ALL OTHER ACOMMUNE WORDS, 
  20 36KW    [ALL ACCUMULATORS AND ALL THE AWORK WORDS ARE USED WITH MONOTONOUS  
   6 375G    [REGULARITY.
  21 37K6    [ON EXIT X1=FX1 AND X2=FX2, AND THEY ARE ASSUMED TO HAVE THESE VALUES   
   8 384Q    [ON ENTRY AS WELL.  
   4 38JB    [   
   7 38PJ ...ZLNOF LONGOFF   
   7 38WQ ...      EXIT  3  0
   7 3942    XCONV SBX   4  1
  21 39HL          STOZ     AWORK3(2)           [ZERO IF NO NL YET IN THIS TRANSFER. 
  16 3=3=          STO   4  AWORK4(2)           [SUBROUTINE LINK.
  20 3=GW          LDEX  6  CHARS(3)            [NO. OF PRINT POSNS. ON CONSOLE. 
  19 3?2G          LDX   4  ACOMMUNE1(2)        [NO. OF CHARS. IN TERMINATOR.
  21 3?G6          BXL   6  AWORK2(2),XLR1      [J. IF < NO. OF CHS. TO BE CONVERTED.
  20 3?_Q          LDX   6  AWORK2(2)           [OTHERWISE GET CONVERSION COUNT. 
  21 3#FB          NGS   4  AWORK2(2)           [SET -VE TO SHOW LAST LINE OF OUTPUT.
  21 3#_2    XLR1  STOZ     ACOMMUNE8(2)        [RELATIVE POINTER TO NEXT INPUT CHAR.
  16 3*DL          SMO      IDENTM(3)           [AMOP ADDRESS.   
  21 3*Y=          LDX   7  AWORK1              [MAX. TRANSFER LENGTH FOR THIS DEVICE
  21 3BCW          BXGE  4  GNOCHS(3),TERM1     [J. IF TERM. LONGER THAN NL/DC3/EOM. 
  21 3BXG          LDX   4  GNOCHS(3)           [OTHERWISE GET LENGTH OF DEFAULT TERM
   7 3CC6    TERM1 LDX   5  7
  21 3CWQ          DCH   4  ACOMMUNE3(2)        [SAVE LENGTH OF LONGER TERMINATOR.   
  21 3DBB          ADN   5  AMOPOUT-A1*4+3      [ADD ON ENOUGH FOR RED TAPE & ROUND. 
  21 3DW2          SBX   7  4                   [TRANSFER LENGTH LESS MAX. TERMINATOR
   9 3F*L          LDX   4  GDELE(3) 
  17 3FT=          SBX   7  4                   [AT START OF MESSAGE 
   5 3G#W    XNAU1   
  16 3GSG          SRL   5  2                   [ROUND TO WORDS. 
   7 3H#6          PHOTO    4
  17 3HRQ          SETUPCOR 5,1,AMXOR,AOUT      [GET OUTPUT BLOCK.   
   9 3J?B          TESTMOVE 4,NMV1   
  18 3JR2          MHUNTX   3,AWORK1(2)         [FIND THE INPUT BLOCK.   
  17 3K=L          STO   3  ACOMMUNE5(2)        [SAVE ITS ADDRESS.   
  10 3KQ=          MHUNTW   3,AMXOR,ALCB 
  20 3L9W    NMV1  STO   1  ACOMMUNE6(2)        [SAVE ADDRESS OF OUTPUT BLOCK.   
  17 3LPG          LDX   4  ACOMMUNE3(2)        [GET CONVERSION TYPE.
  21 3M96          STO   7  AMOPCHS(1)          [SAVE TRANSFER LENGTH LESS TERMINATOR
  17 3MNQ          STO   3  ACOMMUNE4(2)        [SAVE ADDRESS OF LCB.
  16 3N8B          ADN   1  AMOPOUT             [SET UP PLACER.  
  21 3NN2          ANDN  4  #14                 [MASK OUT ^BROADCAST^ & ^FORCED TYPE^
  15 3P7L          STO   1  ACOMMUNE9(2)        [SAVE PLACER.
  21 3PM=          BZE   4  NBBC                [J. IF NOT BROADCAST OR FORCED TYPE, 
  21 3Q6W          LDCH  5  CHARS(3)            [OTHERWISE OUTPUT PRELIMINARY NEWLINE
  10 3QLG          LDN   0  GNLBUFF(3)   
   7 3R66          SMO      5
   7 3RKQ          MVCH  0  0
   7 3S5B          SBX   7  5
  19 3SK2          STO   1  ACOMMUNE9(2)        [SAVE POINTER & CT. AFTER NL.
   9 3T4L          STO   7  AWORK3(2)
  19 3TJ=    NBBC  BZE   6  NDINP               [J. IF NO INPUT TO CONVERT.  
  19 3W3W          LDX   3  ACOMMUNE5(2)        [GET ADDRESS OF INPUT BLOCK. 
  16 3WHG    NEXT1 ADX   3  ACOMMUNE8(2)        [SET UP GETTER.  
  16 3X36    NEXT2 LDCH  0  A1+2(3)             [GET NEXT CHAR.  
   8 3XGQ          SMO      FX1  
  18 3Y2B          TXL   0  XSHIFT              [J. IF NOT SHIFT CHAR.   
   8 3YG2          BCS      NSHIF
  20 3Y_L          SBN   7  2                   [UPDATE TRANSFER REMAINDER COUNT.
  21 3_F=          BNG   7  NDTR1               [J. IF TOO MUCH FOR THIS TRANSFER.   
  17 3_YW          LDN   5  #76                 [INSERT DELTA SHIFT. 
  16 42DG          SBN   0  #10                 [RESET DATA CHAR.
   8 42Y6          DCH   5  0(1) 
  16 43CQ          BCHX  1  XNORM               [STEP PLACER & J.
  20 43XB    NSHIF SBN   7  1                   [UPDATE TRANSFER REMAINDER COUNT.
  21 44C2          BNG   7  NDTR2               [J. IF TOO MUCH FOR THIS TRANSFER.   
  15 44WL    XNORM DCH   0  0(1)                [INSERT CHAR.
  15 45B=          BCHX  3  /                   [STEP GETTER.
  15 45TW          BCHX  1  /                   [STEP PLACER.
  21 46*G          BCT   6  NEXT2               [J. IF MORE WILL FIT ONTO THIS LINE. 
  15 46T6          STO   3  ACOMMUNE8(2)        [SAVE GETTER.
   4 47#Q    #   
  19 47SB          LDEX  0  ACOMMUNE3(2)        [GET TYPE OF THE MESSAGE WORD
  19 48#2          ANDN  0  #20                 [J IF OBJ.PROG OUTPUT BIT SET
  21 48RL          LDN  4   8                   [COUNT OF NON-SPACE CHS TO BACKCHECK 
   8 49?=          LDX   2  FX1  
   8 49QW          BNZ   0  TSPAC
   8 4==G          SMO      FX2  
   9 4=Q6          LDXC  5  AWORK2   
  18 4?9Q          BCS      TSPAC               [J IF CONVERSION FINISHED
   4 4?PB    #   
  16 4#92          LDCH  0  A1+2(3)             [GET NEXT CHAR.  
   8 4#NL          SBN   0  #20  
  17 4*8=          BZE   0  TSPAC               [J. IF SPACE FOUND.  
  21 4*MW    PLOOP SBX   3  XMASK(2)            [STEP BACK GETTER 1 CHARACTER POSN.  
   8 4B7G          TXL   3  CACT 
   7 4BM6          ADN   3  0
  16 4C6Q          LDCH  0  A1+2(3)             [GET THIS CHAR.  
   8 4CLB          SBN   0  #20  
  15 4D62          BZE   0  QLOOP               [J. IF SPACE.
  17 4DKL          SBN   0  #74-#20             [WAS IT A SHIFT CHAR.
   8 4F5=          TXL   0  GSIGN
  21 4FJW          ADN   6  1                   [COUNT OF OUTPUT CHARS. TO BE REMOVED
  21 4G4G          BCT   4  PLOOP               [J. IF STILL NO SPACE FOUND & CT. OK.
   8 4GJ6          LDX   2  FX2  
  15 4H3Q          LDX   3  ACOMMUNE8(2)        [LOAD GETTER 
  21 4HHB          BRN      SETNL               [GIVE UP TRYING & INSERT NL IN MID-WD
  19 4J32    QLOOP ADN   6  1                   [STEP OUTPUT REDUCTION COUNT.
  20 4JGL    TSPAC SBX   3  XMASK(2)            [STEP GETTER 1 CHAR. POSN. BACK. 
   8 4K2=          TXL   3  CACT 
   7 4KFW          ADN   3  0
  16 4K_G          LDCH  0  A1+2(3)             [GET THIS CHAR.  
   8 4LF6          SBN   0  #20  
  17 4LYQ          BZE   0  QLOOP               [TRY AGAIN IF SPACE. 
   8 4MDB          LDX   2  FX2  
  15 4MY2          LDX   3  ACOMMUNE8(2)        [LOAD GETTER 
   4 4NCL    #   
  21 4NX=          SBN   4  8                   [MINUS NO OF NON-SPACE CHARS.FOUND   
  19 4PBW          SLC   3  2                   [CONVERT TO CHARACTER COUNT  
   7 4PWG          ADX   3  4
  17 4QB6          LDX   0  ACOMMUNE9(2)        [RELATIVISE PLACER   
  14 4QTQ          SLC   0  2                   [CHARS   
  14 4R*B          SLC   1  2                   [CHS PTR 
   7 4RT2          SBX   1  0
  20 4S#L          SBX   1  6                   [MINUS CONTENT OF REDUCTION COUNT
  17 4SS=          BNZ   1  XAR                 [J IF SOMETHING HERE 
  17 4T?W          LDN   1  4                   [ALL SPACES OUTPUT,  
  16 4TRG          SBN   6  4                   [4 AT THE MOST   
   8 4W?6          BPZ   6  XAQ  
   7 4WQQ          ADN   6  4
   7 4X=B          LDX   1  6
   7 4XQ2          STOZ     6
   9 4Y9L    XAQ   LDXC  5  AWORK2(2)
   8 4YP=          BCC      XAR  
  10 4_8W          LDX   0  ACOMMUNE9(2) 
   7 4_NG          SLC   0  2
   7 5286          ADX   1  0
   7 52MQ          SRC   1  2
  16 537B          BRN      NDINP               [END OF MESSAGE  
  21 53M2    XAR   ADX   7  6                   [COUNT OF CHARS LEFT TO FILL TRANSFER
   4 546L    #   
   8 54L=          BPZ   1  SPALL
  17 555W          LDX   7  AWORK3(2)           [RESET REMAINDER CT. 
  16 55KG          LDN   1  0                   [RESET PLACER.   
   8 5656          BNZ   7  SPALL
  21 56JQ          SMO      ACOMMUNE6(2)        [REMEMBRANCE NOT VALID IF NO NL YET. 
   9 574B          LDX   7  AMOPCHS  
  10 57J2    SPALL LDX   0  ACOMMUNE9(2) 
   7 583L          SLC   0  2
   7 58H=          ADX   1  0
  17 592W          SRC   1  2                   [RECONSTITUTE PLACER.
   7 59GG          SRC   3  2
   9 5=26          LDXC  0  AWORK2(2)
   8 5=FQ          BCS      NDINP
  18 5=_B    SETNL SBX   3  ACOMMUNE5(2)        [RESET GETTER REMEMBRANCE
  10 5?F2          STO   3  ACOMMUNE8(2) 
  15 5?YL          LDX   3  ACOMMUNE4(2)        [LCB ADDRESS.
  17 5#D=          LDEX  6  CHARS(3)            [NO. OF PRINT POSNS. 
  20 5#XW          LDN   0  GNLBUFF(3)          [POINTER TO START OF NL SEQUENCE.
  21 5*CG          ADX   4  6                   [PRINT POSNS. LESS NON-SP. CHS. OVER.
  18 5*X6          LDCH  5  CHARS(3)            [LENGTH OF NL SEQUENCE.  
  21 5BBQ          SBS   4  AWORK2(2)           [REDUCE CT. OF CHARS. LEFT TO CONVERT
   7 5BWB          SMO      5
  15 5CB2          MVCH  0  0                   [INSERT NL.  
  20 5CTL          SBX   7  5                   [UPDATE TRANSFER REMAINDER COUNT.
  21 5D*=          BXL   6  AWORK2(2),XLR2      [RESET PRINT POSN. CT. FOR NEXT LINE.
   9 5DSW          LDX   6  AWORK2(2)
  19 5F#G          NGS   5  AWORK2(2)           [SET -VE. TO SHOW FINISHED.  
  19 5FS6    XLR2  BNG   7  NDTWO               [J. IF NL FILLS UP TRANSFER. 
  19 5G?Q          STO   1  ACOMMUNE9(2)        [SAVE POINTER & CT. AFTER NL.
   9 5GRB          STO   7  AWORK3(2)
  17 5H?2          LDX   3  ACOMMUNE5(2)        [INPUT BLOCK ADDRESS.
  18 5HQL          BRN      NEXT1               [J. BACK FOR NEXT LINE.  
  19 5J==    NDTR1 ADN   7  1                   [RECONSTITUTE REMAINDER CT.  
   9 5JPW    NDTR2 LDX   4  AWORK3(2)
  17 5K9G          SBX   3  ACOMMUNE5(2)        [RELATIVISE GETTER.  
  21 5KP6          ADN   7  1                   [RECONSTITUTE REMAINDER CT. (AGAIN). 
  20 5L8Q          BZE   4  NONL                [J. IF NO NL YET, THIS TRANSFER. 
  21 5LNB          SBX   4  7                   [COUNT OF CHS. OUTPUT SINCE LAST NL. 
  15 5M82          BZE   4  NDONE               [J. IF NONE. 
  18 5MML          LDX   1  ACOMMUNE6(2)        [OUTPUT BLOCK ADDRESS.   
  21 5N7=          LDX   5  ALOGLEN(1)          [SAVE LENGTH, TO SAVE WORKING OUT.   
  21 5NLW          ADN   1  AMOPOUT             [POINTER TO START OF OUTPUT BUFFER.  
  15 5P6G          STO   3  ACOMMUNE8(2)        [SAVE GETTER.
  20 5PL6          SBS   1  ACOMMUNE9(2)        [RELATIVISE PLACER REMEMBRANCE.  
   7 5RJL          PHOTO    7
  19 5T3G          SETUPCOR 5,1,AMXOR,AOUT      [GET ANOTHER OUTPUT BLOCK.   
  21 5TH6          LDX   3  ACOMMUNE6(2)        [ERSTWHILE ADDRESS OF OLD OUTPUT BLK.
  17 5W2Q          TESTMOVE 7,NMV2              [J. IF STILL VALID.  
  21 5WGB          MHUNTW   3,AMXOR,ALCB        [OTHERWISE RESET ALL THE POINTERS.   
  10 5X22          STO   3  ACOMMUNE4(2) 
  10 5XFL          MHUNTX   3,AWORK1(2)  
  10 5X_=          STO   3  ACOMMUNE5(2) 
  11 5YDW          HUNT2    3,AMXOR,AOUT,1   
  21 5YYG    NMV2  LDX   7  AMOPCHS(3)          [MAX. TRANSFER LENGTH LESS TERMINATOR
  21 5_D6          LDX   5  ACOMMUNE9(2)        [RELATIVE PLACER IN OLD OUTPUT BLOCK.
  17 5_XQ          STO   7  AMOPCHS(1)          [SAVE FOR NEXT TIME. 
  19 62CB          LDX   0  5                   [OLD REL. PLACER AT LAST NL. 
  19 62X2          STO   1  ACOMMUNE6(2)        [NEW OUTPUT BLOCK ADDRESS.   
   9 63BL          ADN   0  AMOPOUT  
  19 63W=          SLC   5  2                   [TURN INTO CHARACTER COUNT.  
  21 64*W          STOZ     AWORK3(2)           [CLEAR TO INDICATE NO NL YET, THIS TR
  19 64TG          ADN   5  3                   [ADD ON 3 FOR EOM SEQUENCE.  
  21 65*6          SBX   7  4                   [REDUCE CT. BY CHS. ALREADY CONVERTED
  21 65SQ          STO   5  AMOPCHS(3)          [SET CT. OF CHS. TO OUTPUT IN OLD BLK
  19 66#B          ADN   1  AMOPOUT             [SET UP NEW BLOCK'S PLACER.  
  18 66S2          ADX   0  3                   [MAKE PLACER ABSOLUTE.   
  20 67?L          STO   1  ACOMMUNE9(2)        [RESET NL ADDRESS REMEMBRANCE.   
  20 67R=          LDX   5  0                   [KEEP PTR. TO CH. AFTER LAST NL. 
  21 68=W          SMO      4                   [OLD PLACER BECOMES GETTER, TO MOVE  
  21 68QG          MVCH  0  0                   [PARTLY CONVERTED LINE INTO NEW BLOCK
  21 68RK ...[                                   NOW SHORTEN OLD BLOCK TO SIZEREQD   
  14 68SN ...      STO   1  ACOMMUNE4(2)         [SAVE X1
  10 68TR ...      LDX   4  AMOPCHS(3)   
  11 68WW ...      ADN   4  AMOPOUT-A1*4+3   
  16 68X_ ...      SRL   4  2                   [CALCULATE SIZE  
   8 68_4 ...      ALTLENG  3,4  
  20 6927 ...      MHUNTW   2,AMXOR,ALCB         [NOW RESET AC4 WITH ALCB ADDR.  
   8 693= ...      SMO      FX2  
   9 694* ...      LDX   1  ACOMMUNE4
  13 695D ...[                        AND RESET X1   
   7 696H ...      SMO   FX2 
   9 697L ...      STO   2  ACOMMUNE4
   8 698P ...      LDX   2  FX2  
  21 69=6          SMO      ACOMMUNE4(2)        [PUT EOM CHARS. DIRECTLY AFTER LAST  
  21 69PQ          LDN   4  GEOM                [NL IN OLD BLOCK (OVERWRITING OLD CHS
  19 6=9B          LDEX  0  ACOMMUNE3(2)        [GET CONVERSION TYPE BITS.   
   7 6=P2          MVCH  4  3
  17 6?8L          SRC   0  1                   [REFORMAT TYPE WD.   
  19 6?N=          STO   0  AMOPTY(3)           [SET TYPE WD. IN OLD BLOCK.  
  18 6#7W          LDX   3  ACOMMUNE5(2)        [ADDRESS OF INPUT BLOCK. 
  17 6#MG          BRN      NEXT1               [BACK INTO THE FRAY! 
  18 6*76    NDONE STO   3  ACOMMUNE8(2)        [SAVE RELATIVISED GETTER.
  21 6*LQ    NDTWO STOZ     AWORK3(2)           [CLEAR NL INDICATOR FOR NEXT TRANSFER
  19 6B6B          LDEX  5  ACOMMUNE3(2)        [GET CONVERSION TYPE BITS.   
   8 6BL2          BRN      PTEOM
  19 6C5L    NONL  LDEX  5  ACOMMUNE3(2)        [GET CONVERSION TYPE BITS.   
  18 6CK=          STO   3  ACOMMUNE8(2)        [SAVE RELATIVISED GETTER.
  21 6D4W          ORX   5  GSIGN               [SET THE ^NEW LINE SUPPRESSED^ BIT.  
  20 6DJG    PTEOM SMO      ACOMMUNE4(2)        [SET UP GETTER FOR EOM SEQUENCE. 
   8 6F46          LDN   0  GEOM 
  20 6FHQ          SRC   5  1                   [REFORMAT CONVERSION TYPE WORD.  
  21 6G3B          LDX   2  ACOMMUNE6(2)        [GET ADDRESS OF START OF OUTPUT BLOCK
  18 6GH2          MVCH  0  3                   [MOVE IN THE EOM CHARS.  
  21 6H2L          SBN   1  AMOPOUT(2)          [POSN. OF LAST CH. WRT. BUFFER START.
  10 6HG=          LDX   7  AMOPCHS(2)   
  20 6H_W          SLC   1  2                   [TURN INTO CT. OF CHS. TO OUTPUT.
  18 6JFG          STO   5  AMOPTY(2)           [STORE CONVERSION TYPE.  
  17 6J_6          STO   1  AMOPCHS(2)          [STORE OUTPUT COUNT. 
  20 6KDQ          LDX   4  ALOGLEN(2)          [GET LENGTH, TO SAVE WORKING OUT.
   7 6KYB          PHOTO    5
  19 6LD2          SETUPCOR 4,1,AMXOR,AOUT      [GET ANOTHER OUTPUT BLOCK.   
  21 6LXL          STO   1  ACOMMUNE6(2)        [SAVE ADDRESS OF NEW OUTPUT BLOCK.   
  17 6MC=          STO   7  AMOPCHS(1)          [SAVE FOR NEXT TIME. 
  19 6MWW          LDX   3  ACOMMUNE5(2)        [WAS ADDRESS OF INPUT BLOCK. 
   9 6NBG          ADN   1  AMOPOUT  
  21 6NW6          STO   1  ACOMMUNE9(2)        [SAVE LAST NL ADDRESS REMEMBRANCE.   
  21 6P*Q          TESTMOVE 5,NEXT1             [J. BACK TO CONVERSION IF NO MOVEMENT
  20 6PTB          MHUNTW   3,AMXOR,ALCB        [OTHERWISE RESET THE POINTERS.   
  10 6Q*2          STO   3  ACOMMUNE4(2) 
  10 6QSL          MHUNTX   3,AWORK1(2)  
  10 6R#=          STO   3  ACOMMUNE5(2) 
   8 6RRW          BRN      NEXT1
  21 6S?G    NDINP LDX   0  ACOMMUNE2(2)        [REL. ADDRESS OF START OF TERMINATOR.
  17 6SR6          LDX   3  ACOMMUNE6(2)        [OUTPUT BLOCK ADDRESS
  21 6T=Q          ADX   0  ACOMMUNE4(2)        [MAKE TERMINATOR ADDRESS ABSOLUTE.   
  17 6TQB          LDX   4  ACOMMUNE3(2)        [GET CONVERSION TYPE.
  18 6W=2          SMO      ACOMMUNE1(2)        [LENGTH OF TERMINATOR.   
  17 6WPL          MVCH  0  0                   [MOVE IN TERMINATOR. 
  21 6X9=          LDEX  5  4                   [MASK OUT STABLE CONVERSION TYPE BITS
  20 6XNW          SBN   1  AMOPOUT(3)          [PLACER REL. TO START OF BUFFER. 
  19 6Y8G          ANDN  4  #4000               [CHECK NL SUPPRESSION BIT.   
  19 6YN6          SLC   1  2                   [COUNT OF CHARS. IN BUFFER.  
  16 6_7Q          LDN   0  #40                 [COMMAND ERROR?  
   7 6_MB          ANDX  0  5
  13 7272          BZE   0  XNAUTO              [NO  
  17 72LL          LDX   0  BIT11               [CANCEL DC1 MARKER   
  15 736=          SMO      ACOMMUNE4(2)        [PTR TO LCB  
   8 73KW          ORS   0  GWAIT
   5 745G    XNAUTO  
  18 74K6          BZE   4  NLNS                [J. IF NO NL SUPPRESSION.
  18 754Q          ORX   5  GSIGN               [OTHERWISE INSERT MARKER.
  21 75JB    NLNS  STO   1  AMOPCHS(3)          [STORE NO. OF CHARS. IN THIS TRANSFER
  20 7642          SRC   5  1                   [REFORMAT CONVERSION TYPE WORD.  
  21 76HL          SBX   1  ACOMMUNE1(2)        [COUNT, LESS LENGTH OF ACTUAL TERM.  
  19 773=          LDCH  4  ACOMMUNE3(2)        [LENGTH OF MAX. TERMINATOR.  
  16 77GW          STO   5  AMOPTY(3)           [SAVE OUPUT TYPE.
  20 782G          ADN   4  AMOPOUT-A1*4+3(1)   [ADD RED TAPE + 3 FOR ROUNDING.  
  16 78G6          SRL   4  2                   [ROUND TO WORDS. 
  21 78_Q          ALTLEN   3,4                 [LEAVES ROOM FOR NEW TERM. IF NECC.  
  20 79FB          SMO      AWORK4(2)           [WELL, WOULD YOU BELEIVE IT?!!   
   7 79_2          EXIT  1  0
   4 7=DL    [   
  20 7=Y=    [THIS SUBROUTINE COPIES RECORD FROM THE OUTPUT BLOCK (AMXOR/AOUT)   
  17 7?CW    [TO THE BUFFER IN THE LINE CONTROL BLOCK (AMXOR/ALCB)   
  17 7?XG    [THE LINE CONTROL BLOCK (AMXOR/ALCB) IS THEN LOCKED DOWN
   6 7#C6    [ON ENTRY   
  16 7#WQ    [X3 POINTS TO THE LINE CONTROL BLOCK (AMXOR/ALCB)   
  13 7*BB    [X7 CONTAINS THE SUBROUTINE LINK ADDRESS
   5 7*W2    [ON EXIT
  14 7B*L    [X2 POINTS TO THE MPX ACTIVITY BLOCK (AMOP) 
  19 7BT=    [X3 POINTS TO THE LOCKED DOWN LINE CONTROL BLOCK (AMXOR/ALCB)   
  13 7C#W    [X4 CONTAINS THE ADDRESS OF THE BUFFER  
   4 7CSG    [   
   9 7D#6    XCOP  LDX   0  GWAIT(3) 
   8 7DRQ          ANDN  0  #4000
  19 7F?B          BZE   0  XCOPC               [J. IF NOT DOUBLE BREAK IN   
   7 7FR2    XCOP3 LDX   2  3
   9 7G=L    XCOPA LDX   2  BPTR(2)  
   9 7GQ=          LDX   0  ATYPE(2) 
  19 7H9W          BXGE  0  CACT,XCOP2A         [J IF NEXT ACTIVITY REACHED  
   8 7HPG          SRL   0  12   
  10 7J96          SBN   0  AMXOR+AOUT   
  17 7JNQ          BNZ   0  XCOPA               [J. IF NOT AOUT BLOCK
   9 7K8B          LDX   0  AMOPTY(2)
   7 7KN2          ANDN  0  7
  18 7L7L          BNZ   0  XCOPE               [J TO OUTPUT THIS BLOCK  
   7 7LM=    XCOPB FREECORE 2
  18 7M6W          BRN      XCOP3               [BACK FOR MORE TO FREE   
   7 7MLG    XCOPC LDX   2  3
   9 7N66    X1H   LDX   2  BPTR(2)  
   9 7NKQ          LDX   0  ATYPE(2) 
  16 7P5B          BXGE  0  CACT,XCOP2A         [J IF NO OUTPUT  
   8 7PK2          SRL   0  12   
  10 7Q4L          SBN   0  AMXOR+AOUT   
   8 7QJ=          BNZ   0  X1H  
  10 7R3W    XCOPE LDN   4  AMOPOUT(2)   
   4 7RHG    #   
  18 7S36          LDX   5  AMOPCHS(2)          [NO OF CHS IN TRANSFER   
   7 7SGQ          STO   2  1
  17 7T2B          BRN      XNRE1               [DC3 FOR EVERY OUTPUT
   9 7TG2    XNRED LDN   5  BUFFER(3)
   8 7T_L          BRN      XNRE2
  15 7WF=    XNRE1 LDX   0  GDELE(3)            [NOT READY   
  15 7WYW          LDX   2  5                   [CHAR COUNT  
  15 7XDG          BZE   0  XNRED               [NO AUTMOP   
  19 7XY6          LDX   0  GDELE+1(3)          [MOVE INTO BUFFER DC3 AND DEL
   9 7YCQ          STO   0  BUFFER(3)
  10 7YXB          LDX   0  GDELE+2(3)   
  10 7_C2          STO   0  BUFFER+1(3)  
  10 7_WL          LDN   5  BUFFER+2(3)  
   8 82B=    XNRE2 MVCH  4  0(2) 
  16 82TW          ADX   2  GDELE(3)            [DC3 CHAR COUNT  
   7 83*G          LDX   4  2
   9 83T6          LDN   5  BUFFER(3)
   9 84#Q          LDXC  0  AMOPTY(1)
  16 84SB          BCC      XNRE4               [J IF NOT READY  
   9 85#2          LDX   0  GWAIT(3) 
  18 85RL          ANDX  0  BIT11               [CANCEL DC1 MARKER SET?  
  13 86?=          BZE   0  XNRE4               [NO  
   7 86QW          SBN   4  2
   7 87=G          LDX   2  4
  17 87Q6          SBN   2  1                   [PTR TO LAST CH -2   
   7 889Q          SRC   2  2
   7 88PB          ADX   2  5
  15 8992          LDN   0  #77                 [CANCEL DC1  
   8 89NL          DCH   0  0(2) 
   9 8=8=    XNRE4 LDX   0  AMOPTY(1)
   7 8=MW          ANDN  0  2
  17 8?7G          BZE   0  XCOP1               [J IF NO BROADCAST   
   7 8?M6          LDX   2  4
   7 8#6Q          SBN   2  2
  15 8#LB          SRC   2  2                   [PUT CANCEL  
   7 8*62          ADX   2  5
   8 8*KL          LDN   0  #10  
   8 8B5=          DCH   0  0(2) 
   4 8BJW    #   
  16 8C4G    XCOP1 SBX   7  FX1                 [RELATIVISE LINK 
  14 8CJ6          LOCKC    3,REFIND            [LOCK LCB
   8 8D3Q          ADX   7  FX1  
   9 8DHB          CALL  1  REFIND   
   7 8F32          LDX   3  2
  18 8FGL          LDX   2  IDENTM(3)           [OBTAIN THE AMOP ADDRESS.
  10 8G2=          LDX   5  GUNITNO(3)   
   8 8GFW          FINDLCA  ,5   
   8 8G_G          SLL   5  15   
  10 8HF6          DCA      ,STO,5,MODE  
  10 8HYQ          DLCA     1,DLA,4,COUNT
   9 8JDB          LDN   4  GREP1(3) 
  10 8JY2          DLCA     1,STO,4,CREP 
   9 8KCL          LDN   4  BUFFER(3)
  10 8KX=          DLCA     1,STO,4,CTSA 
  15 8LBW    XCOP2 EXIT  7  1                   [SOME OUTPUT 
   5 8LWG    XCOP2A  
  20 8MB6          EXIT  7  0                   [NO OUTPUT DUE TO DOUBLE BREAKIN 
  14 8MTQ    REFIND                             [LOCKC   
  10 8N*B          MHUNTW   2,AMXOR,ALCB 
   7 8NT2          EXIT  1  0
   4 8P#L    [   
   8 8PS=    XP0   LDN   0  #11  
   9 8Q?W          STO   0  GLASTM(3)
  10 8QRG    XPX   DLCA     1,DLA,0,MODE 
   6 8R?6          GLPERI
   8 8RQQ          LDX   0  JTIME
   9 8S=B          STO   0  GTIM(3)  
   7 8SQ2          EXIT  5  0
  17 8T9L    REJ   GEOERR   1,REJECTED          [TRANSFER REJECTED   
   4 8TP=    [   
  15 8W8W    [THIS SUBROUTINE PERFORMS THE 'MOPWAIT' MACRO   
   6 8WNG    [ON ENTRY   
  13 8X86    [X7 CONTAINS THE SUBROUTINE LINK ADDRESS
   5 8XMQ    [ON EXIT
   6 8Y7B    [X1 = FX1   
   6 8YM2    [X2 = FX2   
  16 8_6L    [X3 POINTS TO THE LINE CONTROL BLOCK (AMXOR/ALCB)   
   4 8_L=    [   
  19 925W    XM0   SBX   7  FX1                 [RELATIVISE THE LINK ADDRESS 
  17 92KG          MOPWAIT  ,XE66               [GO UP IF INOPERABLE 
  19 9356    XMMX  MHUNTW   3,AMXOR,ALCB        [FIND THE AMXOR/ALCB BLOCK.  
  19 93JQ          ADX   7  1                   [DATUMISE THE LINK ADDRESS.  
  19 944B          EXIT  7  1                   [EXIT TO THE CALLING ROUTINE 
  16 94J2    XE66  SBN   7  1                   [EXIT 0 IF INOP  
   8 953L          BRN      XMMX 
   4 95H=    [   
   4 962W    [   
  21 96GG    [THIS SUBROUTINE IS COMPLICATED BECAUSE XCONV DOESN'T LEAVE US ANYWHERE 
  21 9726    [TO KEEP OUR LINK. IT IS THEREFORE DIVIDED INTO TWO PARTS, WITH A CALL  
   9 97FQ    [ON XCONV IN THE MIDDLE.
  21 97_B    [THE FIRST PART (SBBC1) LOOKS FOR A BROADCAST MESSAGE BLOCK. IF THERE   
  17 98F2    [IS NONE IT EXITS BEYOND THE CALL ON THE SECOND PART.   
  20 98YL    [IF A BLOCK IS FOUND IT SETS IT UP FOR CONVERSION, THEN EXITS TO THE
  11 99D=    [CALL ON THE CONVERSION ROUTINE.
  21 99XW    [THE SECOND PART (SBBC2) SENDS THE BROADCAST MESSAGE TO THE MONITORING  
  18 9=CG    [FILE, THEN FREES THE BLOCK AND RE-ENTERS THE FIRST PART.   
   4 9=X6    [   
  20 9?BQ    SBBC2 SBN   4  2(1)                [STEP BACK AND RELATIVISE LINK.  
  21 9?WB          MHUNTW   3,AMXOR,BBC         [SEND MESSAGE TO THE MONITORING FILE 
  21 9#B2          LDX   5  ACOMMUNE7(2)        [SAVE CHAR. COUNT FROM MOPOUT MACRO. 
  16 9#TL          LDN   6  #2000               [BBC CATEGORY BIT
  13 9**=          OUTMON   A1(3),A1+2,6,AMXOR,BBC   
  19 9*SW          STO   5  ACOMMUNE7(2)        [RESET MOPOUT MACRO'S COUNT. 
  21 9B#G          MFREEW   AMXOR,BBC           [FREE THE BROADCAST MESSAGE BLOCK.   
  21 9BS6          ADX   4  1                   [RESET LINK AND RE-ENTER FIRST PART. 
  19 9C?Q    SBBC1 HUNTW    1,AMXOR,BBC         [LOOK FOR A BROADCAST BLOCK. 
  16 9CRB          BNG   1  SBBC3               [J. OUT IF NONE. 
  19 9D?2          MHUNTW   3,AMXOR,ALCB        [FIND THE LINE CONTROL BLOCK.
  21 9DQL          LDX   6  GNOCHS(3)           [USE NORMAL NL SEQUENCE AS TERMINATOR
  20 9F==          LDX   0  A1(1)               [CT. OF CHARACTERS IN MESSAGE.   
   9 9FPW          LDN   5  GNLBUFF  
  19 9G9G          STO   1  ACOMMUNE5(2)        [SAVE ADDRESS OF INPUT BLOCK.
  18 9GP6          STO   6  ACOMMUNE1(2)        [SET TERMINATOR LENGTH.  
   8 9H8Q          LDX   1  FX1  
  21 9HNB          LDN   6  6                   [^BROADCAST^   ^DON'T DISCARD^ BITS. 
  16 9J82          LDX   7  MXORBBC(1)          [SET BLOCK TYPE. 
  20 9JML          STO   5  ACOMMUNE2(2)        [SET TERMINATOR START ADDRESS.   
  10 9K7=          STO   6  ACOMMUNE3(2) 
   9 9KLW          STO   7  AWORK1(2)
   9 9L6G          STO   0  AWORK2(2)
  19 9LL6          EXIT  4  0                   [EXIT TO DO THE CONVERSION.  
  16 9M5Q    SBBC3 LDCT  0  #10                 [UNSET BBC MARKER
   9 9MKB          ANDX  0  CLONG1(2)
   9 9N52          ERS   0  CLONG1(2)
  21 9NJL          EXIT  4  2                   [EXIT BEYOND 3RD. CALL WHEN FINISHED.
   4 9P4=    [   
   4 9PHW    [   
   4 9Q3G    [   
   4 9QH6    [   
   4 9R2Q    [   
   4 9RGB    [   
  21 9S22    [THIS ENTRY POINT EXPECTS ACOMMUNE7 OF THE ACTIVITY BLOCK TO HOLD THE   
  21 9SFL    [NUMBER OF CHS. IN THE OUTPUT MESSAGE, WHICH IS IN A GMON/AOUT BLOCK.   
  20 9S_=    [INITIALLY A SEARCH IS MADE FOR BROADCAST MESSAGES, AND THESE ARE   
  19 9TDW    [CONVERTED TO LINE FORMAT BEFORE NORMAL OUTPUT IS DEALT WITH.   
   4 9TYG    [   
  17 9WD6    Z1MOPOUT                           [MOPOUT MACRO ENTRY  
  19 9WXQ          LDN   6  0                   [SET MARKER - NO BROADCAST.  
  21 9XCB          CALL  4  SBBC1               [FIND AND CONVERT ANY BROADCAST BLOCK
   8 9XX2          CALL  4  XCONV
   8 9YBL          CALL  4  SBBC2
  20 9YW=          HUNTW    1,GMON,AOUT         [FIND THE NORMAL MESSAGE BLOCK.  
  21 9_*W          BNG   1  XE3B                [J. IF ENTERED FOR BROADCAST ONLY.   
  19 9_TG          MHUNTW   3,AMXOR,ALCB        [FIND THE LINE CONTROL BLOCK.
  17 =2*6          STO   1  ACOMMUNE5(2)        [SAVE ITS ADDRESS.   
  18 =2SQ          LDX   4  A1+1(1)             [GET THE CATEGORY WORD.  
  21 =3#B          LDX   5  ACOMMUNE7(2)        [GET THE NO. OF CHARS. TO CONVERT.   
  17 =3S2          BNG   5  XE3B                [J IF BROADCAST ONLY 
   8 =4?L          LDX   1  FX1  
   7 =4R=          SLL   4  1
  16 =5=W          LDX   0  MONAOUT(1)          [SET BLOCK TYPE. 
   9 =5QG          STO   5  AWORK2(2)
   9 =6=6          STO   0  AWORK1(2)
   4 =6PQ    #   
   7 =79B          LDX   6  4
  20 =7P2          ANDN  6  #40                 [MARKER IN GWAIT B11 IF COMERROR 
  19 =88L          BZE   6  RRA                 [CATEGORY MESSAGE,OTHERWISE J
   7 =8N=          LDCT  0  1
   7 =97W          SRL   0  3
   9 =9MG          ORS   0  GWAIT(3) 
   7 ==76    RRA   LDX   6  4
  18 ==LQ          ANDN  6  4                   [MARK OBJ PROG CATEGORY  
   7 =?6B          SLL   6  2
  19 =?L2    RCU   BPZ   4  XE7                 [BRANCH IF NOT READY CATEGORY
   9 =#5L          LDX   0  AREADY(3)
   9 =#K=          LDN   5  AREADY+1 
  17 =*4W          ORN   6  1                   [^READY CATEGORY BIT^
  20 =*JG          STO   0  ACOMMUNE1(2)        [AND ^READY^ SEQUENCE TERMINATOR 
  10 =B46          STO   5  ACOMMUNE2(2) 
  10 =BHQ          STO   6  ACOMMUNE3(2) 
  17 =C3B          CALL  4  XCONV               [DO THE CONVERSION.  
  19 =CH2          MHUNTW   3,AMXOR,ALCB        [FIND THE LINE CONTROL BLOCK.
  18 =D2L          READYOFF                     [CLEAR BREAK-IN MARKER   
  16 =DG=    XE1   MOPWAIT  1,XE6               [J IF INOPERABLE 
  18 =D_W    Z2MOPOUT                           [ENTRY TO REPEAT READY   
  20 =FFG          SMOPWAIT                     [ENSURE THAT THE BUFFER IN FREE  
  19 =F_6          MHUNTW   3,AMXOR,ALCB        [FIND THE LINE CONTROL BLOCK.
   4 =GDQ    #   
   4 =GYB    #   
  19 =HD2          BBREAKIN 3,XE4               [IF BREAKIN FREE READY BLOCK 
  20 =HXL          CALL  7  XCOP                [COPY OUTPUT INTO THE LCB BUFFER 
  15 =JC=          BRN      XE5A                [NO OUTPUT   
  10 =JWW    XE2   DLCA     1,STO,4,CTSA2
   9 =KBG          LDN   0  GREP2(3) 
  10 =KW6          DLCA     1,STO,0,CREP2
   9 =L*Q          LDX   6  AWORK1(2)
  11 =LTB          DLCA     1,DLA,6,COUNT2   
  20 =M*2          LDN   0  2                   [SPLIT MODE #13 INTO 2 AND #11   
  10 =MSL          DLCA     1,DLA,0,MODE2
   8 =N#=          LDN   0  #11  
   8 =NRW          LDN   5  #13  
   9 =P?G          STO   5  GLASTM(3)
   8 =PR6          CALL  5  XPX  
  19 =Q=Q          PHOTO    7                   [PHOTOGRAPH THE CORE IMASE   
  16 =QQB          MOPWAIT  1,XE6               [WAIT FOR INPUT  
  20 =R=2          TESTMOVE 7,XE2A              [BRANCH IF NO MOVEMENT IN CORE   
  19 =RPL          MHUNTW   3,AMXOR,ALCB        [FIND THE LINE CONTROL BLOCK.
  20 =S9=    XE2A  LDEX  7  GWAIT(3)            [GET INPUT TRANSFER TYPE BITS.   
   9 =SNW    #SKI  K6MULTIPLX>99-99  
   4 =T8G    (   
  20 =TN6          BXL   7  TNUM(1),XE2B        [J. IF INPUT TYPE WITHIN RANGE.  
   9 =W7Q          GEOERR   1,MOPBITS
   4 =WMB    XE2B
   4 =X72    )   
  19 =XLL          ERS   7  GWAIT(3)            [OTHERWISE CLEAR INPUT TYPE  
  19 =Y6=          BBREAKIN 3,XE4               [J. IF BROKEN IN DURING WAIT.
   7 =YKW          SMO      7
  19 =_5G          BRN      TABLE               [J. ACCORDING TO INPUT TYPE. 
   4 =_K6    [   
  14 ?24Q    [THIS SECTION DEALS WITH THE 'READY' INPUT  
   4 ?2JB    [   
  19 ?342    XE3   LDEX  5  GREP2(3)            [OBTAIN THE REMAINDER COUNT. 
  18 ?3HL          SBX   6  5                   [NUMBER OF CHARS. INPUT. 
   7 ?43=          LDX   5  6
  20 ?4GW          ADN   5  11                  [ADD ON 2WDS. RED TAPE & ROUND UP
   7 ?52G          PHOTO    4
  17 ?5G6          SRL   5  2                   [CONVERT TO WORDS.   
   8 ?5_Q          LDX   0  BIT11
  19 ?6FB          ANDX  0  GWAIT(3)            [UNSET IF CUT DC1 MARKER SET 
   9 ?6_2          ERS   0  GWAIT(3) 
  19 ?7DL          MFREEW   AMXOR,AOUT          [FREE THE OLD OUTPUT BLOCK.  
  10 ?7Y=          SETUPCOR 5,1,FILE,FRB 
   9 ?8CW          TESTMOVE 4,XE3A   
  10 ?8XG          MHUNTW   3,AMXOR,ALCB 
  21 ?9C6    XE3A  BBREAKIN 3,XE5               [J. IF BROKEN IN WHILE GETTING CORE. 
  20 ?9WQ          STO   6  A1(1)               [SET COUNT OF CHARACTERS INPUT.  
  17 ?=BB          LDN   0  BUFFER(3)           [MOVE IN THE INPUT.  
   8 ?=W2          ADN   1  A1+2 
   7 ??*L          SMO      5
   8 ??T=          MOVE  0  -2   
  20 ?##W          CHANG                        [GET INPUT INTO A READLINE BLOCK.
  19 ?#SG          LDN   6  0                   [SET MARKER - NO BROADCAST.  
   8 ?*#6          CALL  4  SBBC1
   8 ?*RQ          CALL  4  XCONV
   8 ?B?B          CALL  4  SBBC2
  21 ?BR2    XE3B  BNZ   6  XE10                [J. TO OUTPUT IF BROADCAST SWITCH SET
  14 ?C=L          UP                           [FINISH  
   4 ?CQ=    [   
  12 ?D9W    [THIS SECTION DEALS WITH 'BREAK-IN' 
   4 ?DPG    [   
  19 ?F96    XE4   HUNTW    1,AMXOR,AOUT        [FREE THE OLD OUTXUT BLOCK   
  13 ?FNQ          BNG   1  XE5A                [NONE
  20 ?G8B    XE5   FREECORE 1                   [OR IT COULD BE A SPARE FILE/FRB.
  21 ?GN2    XE5A  READYON                      [SET THE 'READY' MACRO BREAK-IN BIT  
  14 ?H7L    XE6   UP                           [FINISH  
   4 ?HM=    [   
  15 ?J6W    [THIS SECTION DEALS WITH MESSAGES TO BE OUTPUT  
   4 ?JLG    [   
   7 ?K66    XE7   SLC   4  6
  21 ?KKQ          BPZ   4  XE7A                [J. IF NOT ^FORCED TYPE^ CATEGORY.   
   4 ?L5B    #   
  17 ?LK2          ORN   6  #10                 [OTHERWISE SET BIT   
   4 ?M4L    #   
  20 ?MJ=    XE7A  ANDN  4  2                   [J. IF NOT ^BROKEN IN^ MESSAGE.  
   8 ?N3W          BZE   4  XE8  
  19 ?NHG          ORN   6  2                   [SET ^BROKEN IN^ REMEMBRANCE.
   9 ?P36    XE8   LDX   0  NLMSK(1) 
   9 ?PGQ          LDN   5  GNLBUFF  
   9 ?Q2B          ANDX  0  GWAIT(3) 
   9 ?QG2          LDX   4  GNOCHS(3)
  21 ?Q_L          BZE   0  XE9                 [J. IF NO NEW LINE SUPPRESSION NEEDED
  20 ?RF=          ORN   6  #4000               [SET ^NEW LINE SUPPRESSION^ BIT. 
  20 ?RYW          ERS   0  GWAIT(3)            [UNSET NEW LINE SUPPRESSION BIT. 
  21 ?SDG          LDCH  0  CHARS(3)            [NO 0F CHARS IN TERMINATOR WITH NEW  
  19 ?SY6          SBX   4  0                   [LINE CHARACTERS SUPPRESSED  
   7 ?TCQ          SRC   0  2
  20 ?TXB          ADX   5  0                   [STEP POINTER TO AFTER NL CHARS. 
  20 ?WC2    XE9   STO   4  ACOMMUNE1(2)        [SET THE REMAINING PARAMETERS FOR
  18 ?WWL          STO   5  ACOMMUNE2(2)        [THE CONVERSION ROUTINE. 
  10 ?XB=          STO   6  ACOMMUNE3(2) 
  17 ?XTW          CALL  4  XCONV               [DO THE CONVERSION.  
  20 ?Y*G    XE10  MOPWAIT  1,XE6               [WAIT FOR THE BUFFER TO BE FREED 
  20 ?YT6    Z3MOPOUT                           [ENTRY TO REPEAT NORMAL OUTPUT   
  19 ?_#Q          SMOPWAIT                     [ENSURE THE BUFFER IS FREE   
  19 ?_SB          MHUNTW   3,AMXOR,ALCB        [FIND THE LNE CONTROL BLOCK. 
  20 #2#2          CALL  7  XCOP                [COPY OUTPUT INTO THE LCB BUFFER 
  15 #2RL          BRN      XE6                 [NO OUTPUT   
  18 #3?=          CALL  5  XP0                 [INITIATE THE TRANSFER.  
  14 #3QW          UP                           [FINISH  
   4 #4=G    [   
  12 #4Q6    [THIS SECTION DEALS WITH 'CANCEL'   
   4 #59Q    [   
  20 #5PB    ZB4   BBREAKIN 3,XE4               [J. IF BROKEN IN AFTER CANCELLED.
  19 #692          CALL  7  XM0                 [WAIT FOR BUFFER TO BE FREE. 
  15 #6NL          BRN      XE6                 [J IF INOP   
  21 #78=          BBREAKIN 3,XE4               [J. IF BREAK IN DURING COORDINATION. 
  19 #7MW          LDN   5  XCANCEL(1)          [INSERT 'CANCEL' IN BUFFER.  
   9 #87G          LDN   6  BUFFER(3)
   7 #8M6          MVCH  5  6
  10 #96Q          LDN   5  AREADY+1(3)  
   4 #9LB    #   
  21 #=62          LDX   7  AREADY(3)           [CANCEL HAS READY SEQUENCE WITHOUT   
  13 #=KL          SBN   7  2                   [DC1 
   7 #?5=          SMO      7
   4 #?JW    #   
  19 ##4G          MVCH  5  0                   [INSERT 'READY' TERMINATOR   
  19 ##J6          LDN   0  #77                 [OVERWRITE 76 WITH 77(DC1)   
   7 #*3Q          LDX   2  6
   7 #*HB          SLC   2  2
   7 #B32          SBN   2  1
   7 #BGL          SRC   2  2
   8 #C2=          DCH   0  0(2) 
  20 #CFW          LDN   4  4                   [LEAVE OUT LAST 2 CHARS OF READY 
  18 #C_G          ADX   4  AREADY(3)           [X4 CONTAINS NO. OF CHS. 
  19 #DF6          CALL  7  XCOP1               [SET THE LCB FOR THE OUTPUT  
  17 #DYQ          NULL                         [XCOP1 ONLY ONE EXIT 
  21 #FDB          BRN      XE2                 [BRANCH TO OUTPUT MESSAGE + 'READY'  
   4 #FY2    [   
  12 #GCL    [THIS SECTION DEALS WITH 'TIME UP'  
   4 #GX=    [   
  19 #HBW    ZB5   MFREEW   AMXOR,AOUT          [FREE THE OLD OUTPUT BLOCK.  
  20 #HWG          LDCT  0  #24                 [J. IF MARKED ^TO BE ABANDONED^. 
   6 #J3N ...#UNS  CRAMP 
  19 #J8W ...      ORN   0  #40                 [ALSO TEST FOR MOP OFF LIMBO 
  19 #J?G ...      ORN   0  2                   [TEST ABANDON FOR FINISH B22 
  10 #JB6          ANDX  0  JOBEVENTS(2) 
   8 #JTQ          BNZ   0  XE5A 
  10 #K*B          LDX   0  CONTEXT(2)   
   8 #KT2          ANDN  0  #2   
  20 #L#L          BNZ   0  ZB7                 [BRANCH IF IN 'NO USER' CONTEXT  
   4 #LS=    [   
  16 #M?W    [THIS SECTION DEALS WITH 'TIME UP' IN 'USER' CONTEXT
   4 #MRG    [   
   8 #N?6    ZB6   LDCT  6  #40  
   9 #NQQ          ANDX  6  GWAIT(3) 
  18 #P=B          BZE   6  RESTART             [J. IF ALREADY RESTARTED.
  10 #PQ2          LDX   5  ZJTIMEOUT(1) 
  18 #Q9L          CALL  7  OUTM                [OUTPUT TIMED OUT MESSAGE
  10 #QP=    TREST LDCH  0  JSOURCE1(2)  
   7 #R8W          SBN   0  7
   8 #RNG          BZE   0  XE5A 
  10 #S86          MHUNTW   3,AMXOR,ALCB 
   9 #SMQ          ANDX  6  GWAIT(3) 
  19 #T7B          BNZ   6  XCOOR               [J IF NOT ALREADY RESTARTED  
   7 #TM2          LDN   0  1
   9 #W6L          ANDX  0  GWAIT(3) 
   9 #WL=          ERS   0  GWAIT(3) 
  20 #X5W          BNZ   0  XE5A                [J IF B.I. BIT SET (FOR ABANDON) 
   5 #XKG    RESTART 
  10 #Y56          LDX   5  ZJTOREST(1)  
  18 #YJQ          CALL  7  OUTM                [OUTPUT RESTARTED MESSAGE
   7 #_4B          OUTNULL   
  19 #_J2          MONOUTX  TIME(1)             [OUTPUT '_ BELL' TO CONSOLE. 
  14 *23L          UP                           [FINISH  
  10 *2=P ...XCOOR LONGSET AWAITMOP,XCOOR
   9 *2B= ...      LDX   0  ZMIN(1)  
   9 *2FR ...      MPY   0  IPMOPWAIT
  11 *2K* ...YLNST LONGSTOP  TOBRK,TOTIM,,,1 
   8 *2NX ...      BRN      TREST
   9 *2QX ...TOTIM LDX   1  CLONG3(2)
   7 *2SX ...      SBN   1  2
   8 *2WX ...      BNG   1  YSUP 
   8 *2YX ...      BDX   1  YLNST
   8 *32X ...YSUP  LDX   1  FX1  
   8 *34X ...      CALL  3  ZLNOF
  10 *375 ...      MHUNTW   3,AMXOR,ALCB 
  10 *3B8 ...      LDX   5  CONTEXT(2)   
   7 *3K? ...      ANDN  5  2
   8 *3SB ...      BZE   5  TOOUT
   8 *43F ...      ISITJOB  TOOUT
   8 *488 ...      BCT   5  TOOUT
   8 *4#Y ...TOBRK CALL  3  ZLNOF
   8 *4C# ...      BRN      TREST
   4 *4FQ    [   
  17 *4_B    [THIS SECTION DEALS WITH 'TIME UP' IN 'NO USER' CONTEXT 
   4 *5F2    [   
   8 *5YL    ZB7   LDCT  0  #20  
   9 *6D=          ANDX  0  GWAIT(3) 
  20 *6XW          BNZ   0  ZB6                 [BRANCH IF IN 'JOB' OR 'INPUT'   
   8 *7=? ...      LDCT  5  #400 
  21 *7JN ...TOOUT LDCT  0  #40                 [UNSET ^TIMED OUT^ BIT, IF IT IS SET.
   9 *7X6          ANDX  0  GWAIT(3) 
   9 *8BQ          ERS   0  GWAIT(3) 
   9 *8DF ...      STO   5  AWORK1(2)
   7 *8G8 ...      PHOTO    6
   8 *8HX ...      BNG   5  ZCLSE
   7 *8KL ...      SMO      5
  10 *8M* ...      LDX   5  ZJMOPWT(1)   
   8 *8P4 ...      LDN   7  ZCLSE
   8 *8QR ...      BRN      OUTSB
   5 *8SG ...ZCLSE   
  10 *8WB          LDX   5  ZJTOCLOSE(1) 
  19 *9TL          CALL  7  OUTM                [OUTPUT CLOSED DOWN MESSAGE  
  10 *9_H ...      LDCH  0  JSOURCE1(2)  
   7 *=5D ...      SBN   0  7
   8 *=9* ...      BZE   0  XE5A 
  20 *=*=          SETNCORE ZZS,2,AMXOR,AOUT    [CORE BLOCK FOR 3 NEWLINES OUTPUT
  18 *=SW          TESTMOVE 6,ZB8               [J. IF NO CORE MOVEMENT. 
  20 *?#G          MHUNTW   3,AMXOR,ALCB        [RELOCATE THE LINE CONTROL BLOCK.
  20 *?S6    ZB8   LDN   4  GNLBUFF(3)          [INSERT THREE NEW LINE SEQUENCES,
  17 *#?Q          LDN   5  AMOPOUT(2)          [DC3, END OF MESSAGE.
   9 *#RB          LDCH  1  CHARS(3) 
   8 **?2          MVCH  4  0(1) 
  10 **QL          LDN   4  GNLBUFF(3)   
   8 *B==          MVCH  4  0(1) 
   7 *BPW          LDX   0  1
   9 *C9G          LDX   1  GNOCHS(3)
  10 *CP6          LDN   4  GNLBUFF(3)   
   7 *D8Q          ADX   0  0
   8 *DNB          MVCH  4  0(1) 
   7 *F82          ADX   0  1
  21 *FML          STO   0  AMOPCHS(2)          [INSERT THE NUMBER OF OUTPUT CHARS   
  19 *G7=          STOZ     AMOPTY(2)           [CLEAR THE OUTPUT TYPE MASK. 
  19 *GLW          CALL  7  XM0                 [WAIT FOR BUFFER TO BE FREE  
   8 *H6G          BRN      XRI  
  20 *HL6          CALL  7  XCOP                [COPY OUTPUT INTO THE LCB BUFFER 
  15 *J5Q          BRN      XRIN                [NO OUTPUT   
  18 *JKB          CALL  5  XP0                 [INITIATE THE TRANSFER.  
  19 *K52          CALL  7  XM0                 [WAIT FOR BUFFER TO BE FREE  
   8 *KJL          BRN      XRI  
   4 *L4=    XRIN
  20 *LHW          SMO      A1+FPTR(3)          [NULLIFY ALINES RING POINTERS.   
   8 *M3G          STOZ     BPTR 
  10 *MH6          STOZ     A1+BPTR(3)   
   8 *MPB ...XRI   LDX   2  FX2  
   9 *MXL ...      LDX   5  AWORK1(2)
   8 *N5W ...      BPZ   5  TOLIM
  19 *N#6 ...      FREECORE 3                   [FREE THE LINE CONTROL BLOCK.
  15 *NGB          ACROSS   LOGOUT,7            [CPA SUICIDE 
   7 *NL? ...TOLIM LDN   0  7
  10 *NQ8 ...      DCH   0  JSOURCE1(2)  
  10 *NW5 ...      ACROSS   MULTIPLX,4   
   4 *P22    [   
  20 *PFL    [THIS SUBROUTINE OUTPUTS THE MESSAGE WHOSE ADDRESS IS IN X5 TO THE  
  18 *P_=    [MONITORING FILE AND CONSOLE WITH THE TIME AS A PARAMETER   
   6 *QDW    [ON ENTRY   
  14 *QYG    [X5 CONTAINS ADDRESS OF MESSAGE TO BE OUTPUT
  13 *RD6    [X7 CONTAINS THE SUBROUTINE LINK ADDRESS
   4 *RXQ    [   
  17 *SCB    OUTM  SBX   7  FX1                 [RELATIVISE THE LINK 
  20 *SX2          OUTBLOCN 2                   [CREATE 2 WORD PARAMETER BLOCK TO
  21 *TBL                                       [PREVENT CONFUSION WITH EARLIER PMTRS
  21 *TW=                                       [PREVIOUSLY CREATED GMON/ASET BLOCK. 
   9 *W*W          OUTPARC  TIMENOW  
  16 *WTG ...OUTSB MONOUTX  5                   [OUTPUT MESSAGE  
  17 *X*6          ADX   7  1                   [DATUMISE THE LINK.  
  19 *XSQ          EXIT  7  0                   [EXIT TO THE CALLING ROUTINE 
   4 *Y#B    #END
   8 ____ ...13702602000200000000
