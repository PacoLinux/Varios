  17 22FL    #SEG  SETUP                        [GENERAL EMS - COMM  
  15 22PD ...[   (C)   INTERNATIONAL COMPUTERS LIMITED 1982  
  10 22_=    #LIS  K0SETUP>K0EMS>K0ALLGEO
   9 23DW                   8HSETUP8 
   7 23YG    # E.M.S. SEGMENT
   7 24D6    # ENTRY POINTS  
   6 24K# ...#UNS G400   
  16 24QG ...#      THIS MODIFIED CHAPTER IS FOR G3PLUS-IH MK2   
  11 24XQ          SEGENTRY K1SETUP,Z1SETUP  
  11 25CB          SEGENTRY K2SETUP,Z2SETUP  
  11 25X2          SEGENTRY K3SETUP,Z3SETUP  
  11 26BL          SEGENTRY K4SETUP,Z4SETUP  
   8 26W=    #SKI  CAMK7>5-5_G4  
   4 27*W    (   
  11 27TG          SEGENTRY K5SETUP,Z5SETUP  
   4 28*6    )   
  11 28SQ          SEGENTRY K7SETUP,Z7SETUP  
   6 28YM    #UNS AV7900S
  20 294J          SEGENTRY K8SETUP,Z8SETUP     [SETS UP A VIRTUAL 7900 IN CORE  
   7 295H    #UNS  AV7900S   
   4 296G    #SKI
  21 297F          SEGENTRY K8SETUP,(GEOERR)    [KEEPS ENTRY POINTS IN RIGHT PLACE!!!
   4 298F    #   
   4 298Y    #   
  21 299C    #     THIS IS A SPECIAL ENTRY POINT FOR THE SHARED FILESTORE ENHANCEMENT
  20 299W    #     WHEN RUNNING EARLY MORNING START IN MACHINE B TO COMPARE THE  
  16 29=*    #     FILESTORE RESIDENCES BEING USED IN THE STORE  
   4 29=S    #   
  13 29??          FSHENTRY K9SETUP,,Z9SETUP,Z9SETUP 
   4 29?Q    #   
  10 29#B          MENDAREA 40,K100SETUP 
   7 29*R    #UNS ADUALDME   
   4 29C8    (   
   4 29DK    XTAB
   9 29G2          SEGENTRY K80SETUP 
   9 29HC ...#REP (AENDCHAPS-KTAB)/24
   8 29JS                   -1   
   8 29L9                   +0   
  18 29ML ...#FID 0,((AENDCHAPS-KTAB)-(((AENDCHAPS-KTAB)/24)*24)-1),-1   
   5 29P3    XTABEND 
   4 29QD    )   
   5 29S2    SLINK1  
   9 2=?L          PAIR     SETUPA,1 
   7 2=BQ    #UNS  FSHTEST   
   4 2=FW    #SKI
   5 2=R=    SLINK2  
   9 2?=W          PAIR     CONSET,1 
   5 2?QG    SLINK3  
  10 2#=6          PAIR     EMSENTER,1   
   5 2#PQ    SLINK5  
  10 2*9B          PAIR     CHARGESC,1   
   5 2*P2    SLINK6  
  10 2B8L          PAIR     PERFCHAP,1   
   8 2BN=    #SKI  CAMK7>5-5_G4  
   4 2C7W    (   
   5 2CMG    SLINK7  
   9 2D76          PAIR     SETUP,5  
   4 2DLQ    )   
   5 2F6B    SLINK9  
  10 2FL2          PAIR     COREALLF,4   
   5 2G5L    SCANTYPE
   9 2GK=    #HAL  AMSCAN+AMXTYPE,0  
   9 2H4W    POS            #37777777
   7 2H6?    #UNS  FSHTEST   
   4 2H7N    #SKI
   4 2HH6    [   
   4 2HH#    [   
   4 2HHG    [   
   5 2H_J    Z1SETUP 
  11 2J46    # CURRENT ACTIVITY IS BLANKET   
   4 2JHQ    #   
  18 2JJ8    #UNS ADUALDME                      [ ****  DUALS ONLY  **** 
   4 2JJL    (   
  20 2JK4    #  FIRST WE MARK THE CHAPTER TABLE ENTRIES OF THOSE CHAPTERS WHICH  
  17 2JKG    #  ARE NOT ALLOWED TO RUN CONCURRENTLY WITH EXECUTIVE.  
  19 2JKY    #  TABLE 'XTAB' CONTAINS ONE BIT PER CHAPTER. IF THE BIT IS SET 
  19 2JLB    #  THE CHAPTER IS NOT ALLOWED TO RUN WITH EXEC, SO WE SET BIT 9 
  19 2JLS    #  OF ITS 'KTAB' ENTRY TO INDICATE THIS TO THE CHAPTER CHANGER. 
   4 2JM=    #   
  18 2JMN          LDN   4  0                   [ INITIALISE CHAPTER NO. 
  16 2JN6          LDN   5  XTABEND(1)          [ => END OF TABLE
  16 2JNJ          LDX   6  BIT9                [ 'FORBIDDEN' BIT
  17 2JP2          LDN   2  XTAB(1)             [ => START OF TABLE  
   5 2JPD    XNEXTWD 
  17 2JPW          LDX   7  0(2)                [ GET NEXT BIT WORD  
  19 2JQ#          LDN   3  24                  [ NO. OF BITS TO BE CHECKED  
   5 2JQQ    XNEXTBIT
  19 2JR8          BPZ   7  XNOACT              [ JIF CHAPTER NOT 'FORBIDDEN'
   7 2JRL          SMO      4
  16 2JRS          LDX   0  KTAB                [ GET KATB ENTRY 
   9 2JS2          TXU   0  GMINUS1  
  18 2JS8          BCC      XENDKTAB            [ JIF END OF VALID KTAB  
  16 2JSB          LDXC  0  0                   [ SEE IF IN CORE 
  17 2JSJ          BCC      XSETKTAB            [ JIF IT ISNT ELSE   
  18 2JSQ          BZE   0  XNOACT              [ JIF FIXED CORE ENTRY   
  21 2JSY          SMO      0                   [ CORE (EG CHAPTER 'SETUP'IS IN CORE)
  18 2JTB          ORS   6  BACK2               [ SET BIT 9 IN 'BACK2'.  
  15 2JTS          BRN      XNOACT              [ ALL DONE.  
   5 2JW=    XSETKTAB
   7 2JWN          SMO      4
  20 2JX6          ORS   6  KTAB                [ ELSE SET BIT IN 'KTAB' ENTRY   
   5 2JXJ    XNOACT  
  17 2JY2          ADN   4  1                   [ UPDATE CHAPTER NO. 
  19 2JYD          SLL   7  1                   [ MOVE UP NEXT CHAPTER'S BIT 
  21 2JYW          BCT   3  XNEXTBIT            [ JIF NOT CHECKED ALL BITS IN THIS WD
  21 2J_#          ADN   2  1                   [ ELSE UPDATE POINTER TO NEXT WORD   
  19 2J_Q          BXL   2  5,XNEXTWD           [ JIF NOT AT END OF TABLE YET
  18 2K28    XENDKTAB                           [ ELSE WE'VE FINISHED !  
   4 2K2L    )   
  18 2K3B          GETACT   BSA,CHAPTER         [SET UP E.M.S. ACTIVITY  
   9 2KH2          LDX   2  BPTR(2)  
  16 2L2L          LINKSET  2,SLINK1(1)         [LINK TO K1SETUPA
  20 2LG=          LDCT  6  #200                [MAKE BACKING STORE PRIVILEGED   
   9 2L_W          STO   6  CLONG1(2)
  16 2MFG          FPUT                         [PUT ON THE LIST 
  16 2M_6          LINKSET  2,SLINK5(1)         [LINK TO CHARGESC
   8 2NDQ          LDCT  0  #400 
   8 2NYB          ORS   0  K5   
  19 2P5J          LDX   0  JTIME               [INITIALISE CLEANCT TO ALLOW 
  19 2P=Q          STO   0  CLEANCT             [TIME OUTPUT IN EMS (8.61)   
  18 2PD2          COOR1X                       [LET BLANKET RUN IN EMS  
   4 2PXL    #   
  19 2QC=    #              CURRENT ACTIVITY IS BSA/CHAPTER(E.M.S. ACTIVITY) 
  17 2QM4    #   NEVER OBEYED ON MACHINE 'B' IN A TESTING ENVIRONMENT
   4 2QWW    #   
  15 2RBG    Z7SETUP                            [FROM SETUPA 
  18 2XX3    # WITH THE 'VOPA ING4' ENHANCEMENT, THE NEED FOR DIFFERENT  
   5 2Y=Q    #SKI  G4
   4 2YQB    (   
  17 2_=2                                       [SETUP OBJ PROG AREA 
   9 2_PL          BRN      O41SETUP 
   5 329=    R41SETUP
   4 32NW    )   
  21 338G          STOZ     APROCTIME           [INITIALISE PROCESS CONTROLLER CLOCK 
  20 33N6          ACROSS   SETUPARA,1          [SETUP INSTALLATION PARAMETERS.  
   5 347Q    Z2SETUP 
  21 34MB          LDX   0  IPBADDR             [J. IF NO 7900'S ON THIS INSTALLATION
   8 3572          BZE   0  NOIPB
  20 35LL          DOWN     SETIDF,2            [OTHERWISE SET UP IDF FOR IPB'S. 
   5 366=    NOIPB   
   9 36KW          DOWN     IDFPROP,1
   9 375G          LDX   0  GINCTSN  
   9 37K6          BNZ   0  Z4SETUP  
   9 384Q          ACROSS   HLSEMS,1 
   5 389Y    XFSHNBZ2
   4 38JB    #   
   5 3942    Z4SETUP 
   6 3998 ...#UNS G400   
  15 39BB ...      DOWN DOIHEMS,1     [INITIALISE HOOK BLK   
   4 39HL    #   
  11 3=3=    # LINK TO PERFORMANCE CHAPTER   
  11 3=GW          GETACT   GENERAL,CPERFACT 
   9 3?2G          LDX   2  BPTR(2)  
  10 3?G6          LINKSET  2,SLINK6(1)  
   8 3?_Q          FWAIT    #54  
   6 3#3#    NOPERFACT   
  17 3#FB    #              SET UP INCREMENT DUMP/HLS ETC. ACTIVITY. 
  16 3#_2          GETACT   CPAT                [GET ACTIVITY.   
  17 3*DL          LDX   2  BPTR(2)             [ADDRESS OF ACTIVITY 
  10 3*Y=          LINKSET  2,SLINK3(1)  
  17 3BCW          LDCT  5  128                 [B. S. PRIVILEGED.   
   9 3BXG          ORS   5  CLONG1(2)
   8 3CC6          FWAIT    #54  
   6 3CJ#    XFSHNBDUMP  
   5 3CWQ    NBLOK   
  21 3DBB          LDX   2  FPTR(2)             [HUNT FOR MOP SCANNING ACTIVITIES.   
  17 3DW2          BXE   2  FX2,NOSCAN          [J. OUT IF NOT FOUND 
   9 3F*L          LDX   0  ATYPE(2) 
   9 3FT=          ANDX  0  HALFTOP  
  11 3G#W          BXU   0  SCANTYPE(1),NBLOK
  19 3GSG          FON      #102,1              [OTHERWISE WAKE ONE UP AND   
  20 3H#6          COOR3Y   #102                [SLEEP UNTIL ALL HAVE FINISHED.  
   5 3HRQ    NOSCAN  
   8 3J?B    #SKI  K6SETUP>99-99 
  10 3JR2          TRACE    K7,*READY*   
  15 3K=L    #              OUTPUT 'GEORGE READY' ON CONSOLE.
  21 3KQ=          FON      #50                 [WAIT UNTIL ALL EMS OUTPUT FINISHED  
   8 3L9W          COOR3    #53  
  19 3LPG          HUNT2    2,CONSA,CNTRAL      [HUNT FOR CONSOLE ACTIVITY   
  16 3M96          LINKSET  2,SLINK2(1)         [LINK TO K1CONSIN
   6 3MB#    XFSHNBCONSA 
  17 3MNQ    #              WAKE UP ACTIVITIES WAITING FOR END OF EMS
  15 3N8B    #              AND INITIALISE GEORGE'S TIMERS.  
  21 3NN2          STOZ     CHCHCOUNT           [INITIALISE COUNT OF CHAPTER CHANGES.
  18 3P7L          STOZ     K7                  [CLEAR GEORGE'S TIMER.   
   4 3PM=    #   
  19 3Q6W          OFF      EMSBIT                  [CLEAR  EMS SWITCH BIT.  
  17 3Q#4          OUTNUM   GMTNOW,0            [OUTPUT 'GEORGE MEAN 
  16 3QF=          MONOUT   GMTIME              [TIME' MESSAGE   
  17 3QLG          DOWN     MORNING,7           [OUTPUT GEORGE READY 
   8 3R66          FON      #54  
   9 3RKQ          DOWN     TWINSET,2
   9 3S5B          ACROSS   SUICIDE,1
   4 3SK2    #   
   4 3T4L    #   
   8 3TJ=    #SKI  CAMK7>5-5_G4  
   4 3W3W    (   
  16 3WHG    REWFIND                            [FOR USE BY LOCKC
   8 3X36          SMO      FX2  
   8 3XGQ          LDX   2  BPTR 
   7 3Y2B          EXIT  1  0
   4 3YG2    #   
  21 3Y_L    Z3SETUP                            [OBEYED FROM EMS MT REWIND ACTIVITY  
  21 3_F=    #     IN GEORGE 4 THE REWIND PERI IS NOT ISSUED UNTIL AFTER THE LONGLOCK
  20 3_YW    #     AREA HAS BEEN ESTABLISHED SO THAT THE ACTIVITY WAITING FOR THE
  20 42DG    #     END OF THE REWIND CAN  BE PUT INTO THIS AREA & WILL NOT BLOCK 
  18 42Y6    #     THE SETTING UP OF THE OBJ PROGRAM AREA AFTER BACKMAP  
   4 43CQ    #   
  21 43XB    #     IN GEORGE 3 THE REWIND PERI IS SIMILARLY DELAYED IN CASE BACKMAP  
  20 44C2    #     FINISHES BEFORE THE PERI AND THE REWIND ACTIVITY OBSTRUCTS AN 
  10 44WL    #     OBJECT PROGRAM SWAP IN
   4 45B=    #   
  21 45TW          GETACT   AREWIND,,1          [SET UP ACT TO WAIT FOR END OF REWIND
   9 46*G          LDX   3  BPTR(2)  
  16 46T6          LINKSET  3,SLINK7(1)         [LINK TO K5SETUP 
   9 47#Q          LDX   0  CPPTR(2) 
   9 47SB          STO   0  CPPTR(3) 
   7 48#2          LDN   0  7
  10 48RL          DCA       ,STO,0,MODE 
   9 49?=          LOCKC    3,REWFIND
   9 49QW          CALL  1  REWFIND  
   7 4==G          LDX   3  2
   8 4=Q6          LDX   1  FX1  
   8 4?9Q          LDX   2  FX2  
   8 4?PB          GPERI     ,3  
  14 4#92          SUICIDE                      [FINISH  
   4 4#NL    #   
   5 4*8=    Z5SETUP 
   4 4*MW    #   
   4 4B7G    )   
   8 4BM6    #SKI  CAMK7<6-6*G3  
  21 4C6Q    Z3SETUP                            [OBEYED FROM EMS *MT REWIND ACTIVITY 
   7 4CLB          CLALLOC   
  15 4D62          SUICIDE                      [FINISHED!   
   4 4DKL    #   
  19 4F5=    #     THIS SECTION OBTAINS & INITIALISES THE OBJECT PROG AREA   
  12 4FJW    #     GEORGE 4 ONLY - MARK 6 ONWARDS
   4 4FM5    #   
  18 4FP#    #      AND WHAT'S MORE, THIS CODE BECOMES REDUNDANT WITH THE
  14 4FRH    #     'VOPA IN G4' ENHANCEMENT (MK 8.40?)   
   4 4FTQ    #   
   5 4G4G    #SKIP G4
   4 4GJ6    (   
   7 4GP#    #SKI  G4VOPA<1$1
   4 4GWG    (   
  19 4H3Q    MINGEOAREA     #10000              [4K ) VALUE ARBITARY AS YET  
  13 4HHB    MINPROGAREA    #20000              [8K )
  10 4J32    OFFSET         +FPTR-ACTRING
   5 4JGL    O41SETUP
  19 4K2=          LDX   7  APROGAREA           [ IF APROGAREA IS ZERO, THE  
  19 4KFW                                       [ REQD. AMOUNT IS CALCULATED 
   8 4K_G          BNZ   7  R1   
  21 4LF6          LDX   7  AFREE               [CALC SIZE OF OBJ PROG AREA AS 1/2   
  16 4LYQ          SRL   7  1                   [OF FREE SPACE   
  17 4MDB          ANDX  7  B2T13               [ROUND TO 1K & STORE 
   9 4MY2          STO   7  APROGAREA
   4 4NCL    R1  
  19 4NX=          TXL   7  MINPROGAREA(1)      [ERROR IF PROG AREA TOO SMALL
   8 4PBW          BCC      Z03  
   4 4PWG    R2  
  10 4QB6          GEOERR   0,PROGAREA   
   4 4QTQ    Z03 
   8 4R*B          LDX   0  AFREE
   7 4RT2          SBX   0  7
  20 4S#L          BXL   0  MINGEOAREA(1),R2    [ ERROR IF GEORGE AREA TOO SMALL.
  10 4SS=          LDX   0  APTURNPAGS   
   8 4T?W          BZE   0  R2   
   8 4TRG          BXGE  0  7,R2 
   9 4W?6          LDX   0  APTABPAGS
   8 4WQQ          BZE   0  R2   
   8 4X=B          BXGE  0  7,R2 
  21 4XQ2    Z07   LDN   6  20                  [WAIT UNTIL ALL AUTOCLOSES FINISHED  
   6 4Y9L    Z08   COOR2 
   8 4YP=          BCT   6  Z08  
  10 4_8W          LDN   2  BACT+ACTRING 
   9 4_NG    Z09   LDX   2  FPTR(2)  
   9 5286          BXE   2  BACTR,Z10
   9 52MQ          SMO      OFFSET(1)
   9 537B          LDX   0  ATYPE(2) 
   8 53M2          SRL   0  12   
  10 546L          SBN   0  BSA+AUTCLOSE 
   8 54L=          BNZ   0  Z09  
   8 555W          BRN      Z07  
   4 55KG    Z10 
  18 5656          COREFLUSH FCORES,7           [FLUSH OUT OBJ PROG AREA 
   9 56JQ          DERING   FCORES   
  20 574B          ADS   7  FCORES              [REMOVE AREA FROM GEORGE SPACE   
   8 57J2          SBS   7  AFREE
  19 583L    Z04   SBX   7  BIT11               [SET MAX QUOTA ONLY DONE HERE
  21 58H=          STO   7  AMAXQUOTA           [TEMORARILY UNTIL SETUPARA DOES IT   
   4 592W    #   
  19 59GG    #     SETUP CORE FOR PAGE TABLES WE PUT ONE PAGE ON THE CHAIN TO
   7 5=26    #     START WITH
   4 5=FQ    #   
   7 5=_B          LDN   0  1
   9 5?F2          STO   0  CPAGTAB  
   9 5?YL          LDX   3  AOBJSTART
  15 5#D=          STOZ     0(3)                [CLEAR PAGE  
   8 5#XW          STOZ     1(3) 
   8 5*CG          LDN   4  2(3) 
   8 5*X6          MOVE  3  512  
   8 5BBQ          ADN   4  512  
   8 5BWB          MOVE  3  510  
  19 5CB2          STO   3  BPAGTAB             [& INSERT IT ON CHAIN OF PAGE
  15 5CTL          STO   3  BPAGTAB+1           [TABLE PAGES 
   9 5D*=          LDN   0  BPAGTAB  
   9 5DSW          STO   0  FPTR(3)  
   9 5F#G          STO   0  BPTR(3)  
  19 5FS6          LDN   0  960                 [INITIALISE NO OF WORDS FREE 
   9 5G?Q          STO   0  APAGSP(3)
   4 5GRB    #   
  21 5H?2    #     PUT THE REST OF THE PAGES IN THE OBJ PROG AREA ON FREE PAGE CHAIN 
   4 5HQL    #   
   9 5J==          LDX   7  APROGAREA
   8 5JPW          SRL   7  10   
  15 5K9G          SBN   7  1                   [NO OF PAGES 
   9 5KP6          STO   7  AOBJFREE 
   9 5L8Q          STO   7  COBJFREE 
  19 5LNB          LDN   2  BOBJFREE            [PUT PAGES ON FREE PAGE CHAIN
   8 5M82          BRN      Z06  
   7 5MML    Z05   LDX   2  3
   8 5N7=    Z06   ADN   3  1024 
   9 5NLW          STO   3  FPTR(2)  
   9 5P6G          STO   2  BPTR(3)  
   8 5PL6          BCT   7  Z05  
  16 5Q5Q          STO   3  BOBJFREE+1          [COMPLETE CHAIN  
   9 5QKB          LDN   0  BOBJFREE 
   9 5R52          STO   0  FPTR(3)  
   9 5RJL          BRN      R41SETUP 
   4 5S4=    )   
   6 5S5*    #UNS  G4VOPA
   4 5S6D    (   
   5 5S6_    O41SETUP
   8 5S7H          STOZ  AOBJFREE
   8 5S8L          STOZ  COBJFREE
   8 5S9P          BRN   R41SETUP
   4 5S=S    )   
   4 5S#4    )   
   6 5S#6    #UNS AV7900S
   4 5S#8    (   
  10 5S#=    [     SUBROUTINE SV7900CORE 
   4 5S##    #   
  20 5S#B    #     SUBROUTINE TO SET UP A DEVICE LIST AND AMOP/IPBIN ACTIVITY FOR
  16 5S#D    #     A VIRTUAL 7900 . THIS SUBROUTINE COORDINATES .
  21 5S#G    #     ON ENTRY X6 = THE OPS UNIT NUMBER OF THE VIRTUAL 7900 IN B15-23 ; 
  14 5S#J    #     B0=1 IF UNIT IS MOPPED ON IN THE IDF .
  19 5S#L    #     ON EXIT X3 -> THE V7900 DEVICE LIST ; X1= FX1 ; X2 = FX2  
   8 5S#N    #     LINK IN X7 .  
   4 5S#Q    [   
  13 5S#S    [     SUBROUTINE SV7900CORE'S PRESETS   
   4 5S#W    [   
  18 5S#Y    PJK52BTOF      #00040000           [JK52B : B9 ALWAYS SET   
  19 5S*2                   #03000000           [JK52C : PERIPHERAL TYPE 24  
  15 5S*4                   0,0                 [JK52D,JK52E 
  20 5S*6                   #40000200           [JK52F : STAN. INTERF.,WRONGABLE 
  10 5S*8    #DEF  P1LEN = 0? - PJK52BTOF
   6 5S*=    PIPBINLINK  
  10 5S*# ...      LINK     IPBSTARB,10  
  21 5S*B    PIPBINSW       #10040004           [ACTIVITY IS A VIRTUAL 7900(B9) AND  
  17 5S*D    [                             AND GLOBAL TERM WORKS(B21)
  16 5S*G                                       [IS ASLEEP(B2)   
   4 5S*J    [   
  14 5S*L    [     SUBROUTINE SV7900CORE'S SUBROUTINES   
   4 5S*N    [   
  20 5S*Q    #              S/R'S USED BY LOCKC TO REFIND THE BLOCK TO BE LOCKED 
   6 5S*S    SLOCKCHUNT  
  11 5S*W          MHUNTW   2,APERI,AV7900   
   7 5S*Y          EXIT  1  0
   6 5SB2    SLOCKCHUNTA 
   8 5SB4          SMO      FX2  
   8 5SB6          LDX   2  BPTR 
   7 5SB8          EXIT  1  0
   4 5SB=    [   
  13 5SB#    [     SUBROUTINE SV7900CORE'S MAIN PATH 
   4 5SBB    [   
   6 5SBD    SV7900CORE  
  16 5SBG          SBX   7  FX1                 [RELATIVISE LINK 
  21 5SBJ    #              SET UP A VIRTUAL 7900 DEVICE LIST BLOCK (APERI/AV7900)   
  18 5SBL          LDN   4  K54-A1              [LOGICAL LENGTH OF BLOCK 
  19 5SBN          SETUPCORE 4,3,APERI,AV7900,1,1 [RING ELEMENT IS SET NULL  
  18 5SBQ    #              INITIALISE THE VIRTUAL 7900 DEVICE LIST BLOCK
  21 5SBS          EMPTY    AVOLPARING(3)       [SET RING ELEMENT TO AN EMPTY STATE  
  20 5SBW          STOZ     AVCREADS(3)         [ZEROISE BLOCK AFTER RING ELEMENT
  10 5SBY          LDN   4  AVCREADS(3)  
  10 5SC2          LDN   5  AVCWRITES(3) 
  10 5SC4          MOVE  4  K54-A1-2-1   
  17 5SC6          LDN   4  PJK52BTOF(1)        [MOVE IN PRESET INFO 
   9 5SC8          LDN   5  JK52B(3) 
   8 5SC=          MOVE  4  P1LEN
  20 5SC#          DEX   6  JK52C(3)            [INSERT VIRTUAL 7900 UNIT NUMBER 
  20 5SCB    #              SET UP AN AMOP/IPBIN ACTIVITY FOR THE VIRTUAL 7900   
  10 5SCD          LDN   4  AMOP+IPBIN   
   8 5SCG          SLL   4  12   
  11 5SCJ          LDN   5  BMOPLEN+IPBINLEN 
   8 5SCL          GETACTX  4,5,1
  20 5SCN    #              INTIALISE REST OF DEVICE LIST AND INITIALISE ACTIVITY
  15 5SCQ          MHUNTW   3,APERI,AV7900      [DEVICE LIST 
  14 5SCS          LOCKC    3,SLOCKCHUNT        [LOCK DL 
  21 5SCW          LDX   2  BPTR(2)             [GET ADDRESS OF AMOP/IPBIN ACTIVITY  
  14 5SCY          LOCKC    2,SLOCKCHUNTA       [LOCK ACT
  19 5SD2          MHUNTW   3,APERI,AV7900      [MANDATORY HUNT AFTER LOCKC  
  21 5SD4          LDX   2  BPTR(2)             [GET ADDRESS OF AMOP/IPBIN ACTIVITY  
  21 5SD6          STO   2  AVAPIAENTRY+1(3)    [STORE AMOP/IPBIN ADDRESS IN PSEUDO  
  20 5SD8                                       [APIA ENTRY IN THE DEVICE LIST   
  21 5SD=          LDN   0  AVAPIAENTRY(3)      [STORE POINTER TO PSEUDO APIA ENTRY  
  17 5SD#          STO   0  JADDP(3)            [IN THE DEVICE LIST  
  21 5SDB          STO   3  CPPTR(2)            [STORE DEVICE LIST POINTER IN ACT BLK
  21 5SDD          LDX   0  PIPBINSW(1)         [SET AMOP/IPBIN.IPBSW TO INDICATE A  
  20 5SDG          STO   0  IPBSW(2)            [VIRTUAL 7900 ACT WHICH IS ASLEEP
  21 5SDJ          BPZ   6  SIPBLIST            [VIRTUAL 7900 NOT MARKED MOPPED ON   
  21 5SDL          STO   6  CHAINADD(2)         [SET AMOP/IPBIN'S CHAINADD NEGATIVE  
  21 5SDN                                       [TO SIMULATE A MOPPED ON,INOPERABLE  
  16 5SDQ                                       [7900 TO MOPCOM  
  20 5SDS          LINKSET  2,PIPBINLINK(1)     [SET LINK IN AMOP/IPBIN ACT BLK  
  21 5SDW          SETALLOC CPPTR(2)            [SET THE ALLOCATED (MOPPED ON) FLAG  
  17 5SDY                                       [IN THE DEVICE LIST  
  21 5SF2    #              NOTE NO FURTHER MOP ON ACTION IS TAKEN HERE . MOP ON OF A
  21 5SF4    #              VIRTUAL 7900 IS NOT COMPLETED UNTIL THE PROGRAM ISSUES   
  20 5SF6    #              ITS FIRST WMC READ FOR THE INITIALISE SEGMENT FROM G3
  20 5SF8    #              (IE THE V7900 BECOMES OPERABLE) . BEFORE THE READ IS 
  21 5SF=    #              ISSUED THE RESOURCES USED ARE THE SAME WHETHER MOPPED ON 
   9 5SF#    #              OR OFF . 
   5 5SFB    SIPBLIST
  20 5SFD    #              INSERT AMOP/IPBIN IN LIST OF AMOP/IPBINS (IPB LIST)  
  21 5SFG          LDX   4  IPBADDR             [INSERT AT FRONT OF LIST AS SETUPA   
  13 5SFJ          STO   2  IPBADDR             [DOES
   9 5SFL          STO   4  IPBL(2)  
  20 5SFN    #              CHAIN THE VIRTUAL 7900 DEVICE LIST ON THE BACK OF THE
  12 5SFQ    #              MISCELLANEOUS CHAIN .
  10 5SFS          CHAIN    3,BMISC+BPTR 
  17 5SFW    #              SET X2 = FX2 AND EXIT (X1 ALREADY = FX1) 
   8 5SFY          LDX   2  FX2  
   8 5SG2          ADX   7  FX1  
   7 5SG4          EXIT  7  0
   4 5SG6    #   
   4 5SG8    #   
   5 5SG=    Z8SETUP 
   4 5SG#    #   
  20 5SGB    #     THIS ENTRY POINT SETS UP A VIRTUAL 7900 IN CORE, IE IT SETS UP
  19 5SGD    #     A DEVICE LIST AND AMOP/IPBIN ACTIVITY FOR A VIRTUAL 7900 .
  21 5SGG    #     IT IS A SUBROUTINE FOR SETIDF AND IS ENTERED BY SETIDF DURING EMS,
  20 5SGJ    #     IF THERE ARE VIRTUAL 7900'S DEFINED IN THE IDF, AND AFTER EMS,
  14 5SGL    #     WHEN IMPLEMENTING A MAKEVCC COMMAND . 
  21 5SGN    #     ON ENTRY ACOMMUNE1 = THE OPS UNIT NUMBER OF THE VIRTUAL 7900 IN   
  17 5SGQ    #     B15-23 ; B0=1 IF UNIT IS MOPPED ON IN THE IDF .   
  15 5SGS    #     ON EXIT ACOMMUNE1 -> THE V7900 DEVICE LIST
   4 5SGW    #   
  10 5SGY          LDX   6  ACOMMUNE1(2) 
  10 5SH2          CALL  7  SV7900CORE   
  10 5SH4          STO   3  ACOMMUNE1(2) 
   5 5SH6          UP
   4 5SH8    #   
   4 5SH=    )   
   4 5T2W    #   
   4 5TGG    #   
   4 8TNL    #END
   8 ____ ...50271152000400000000
