  16 22CR ...#SEG  RMTLF8                       [G CONSTANTINIDES
   7 22TJ ...#OPT  K0RMTLF=0 
  13 23?* ...#LIS  K0RMTLF>K0PCT>K0ALLGEO>K0GREATGEO 
   9 23P6 ...               8HRMTLF  
   7 246X ...# ENTRY POINTS  
  11 24JN ...      SEGENTRY K1RMTLF,Z1RMTLF  
  11 252F ...      SEGENTRY K2RMTLF,Z2RMTLF  
  11 2574 ...      SEGENTRY K3RMTLF,Z3RMTLF  
  11 25?M ...      SEGENTRY K4RMTLF,Z4RMTLF  
   4 25D= ...#   
   4 25W3 ...[   
  20 26?S ...[THIS SEGMENT  OUTPUTS FILES TO A REMOTE LP OR TP WHERE THE 7020 IS 
  19 26PK ...[ATTACHED VIA A MULTIPLEXOR/UNIPLEXOR/SCANNER -I.E NOT A 7900.  
  14 277B ...[IT IS EQUIVALENT TO LISTLOOP OR IPBLISTB.  
  20 27K7 ...[IT IS ENTERED FROM'PCTLISTA' AFTER THE DOCUMENT HEADINGS HAVE BEEN 
  14 282Y ...[OUTPUT. THE CURRENT ACTIVITY IS AN ACTLF.  
   6 28DP ...[ON ENTRY   
  15 28WG ...[AWORK1 =+VE FOR LP OUTPUT.  -VE FOR TP OUTPUT  
  10 29#? ...[NUM(2) =START LINE NUMBER  
  10 29Q4 ...[REST(2)=RESTART LINE NUMBER
  13 2=7T ...[NLI(2) =NO. OF LINES TO OUTPUT ELSE -VE
  14 2=KL ...[TBITS  =CATEGORY MASK FOR MONITORING FILES 
  17 2?3C ...[QUAL   IS EQUIVALENT TO GQUAL IN SHORT GOUT INFO BLOCK 
   4 2?F8 ...#   
   4 2?W_ ...#   
   7 2##Q ...#DEF  NUM=IWORK1
   8 2#QH ...#DEF  REST=IWORK2   
   7 2*8# ...#DEF  NLI=IWORK3
   8 2*L5 ...#DEF  TBITS=IWORK4  
   8 2B3W ...#DEF  QUAL=IWORK5   
   8 2BFM ...#DEF   ZFE5=#7635   
   9 2BXD ...ZDLEFE1     #76007631   
   4 2C*9 ...#   
   4 2CR2 ...#   
   9 2CXK ...TNUPA ADX   3  AWORK3(2)
   7 2D48 ...      LDX   2  3
   6 2D8R ...SPLNUPAGE   
   8 2DLJ ...      SMO      FX1  
   9 2F4* ...      LDN   1  ZDLEFE1  
   7 2FG6 ...      MVCH  1  4
   8 2FXX ...      LDCT  1  #200 
   8 2G*N ...      SMO      FX2  
   9 2GRF ...      LDX   0  IWORK11  
   8 2H9= ...      SLL   0  12   
   8 2HM3 ...      ADN   0  ZFE5 
   7 2J4S ...      MVCH  1  3
   8 2JGK ...      LDX   1  FX2  
   7 2KB7 ...      SBN   6  7
   7 2KRY ...      SBN   7  3
   7 2L9P ...      EXIT  4  0
   5 2LMG ...YTSPL   
   7 2M5? ...      LDN   0  4
   9 2MH4 ...      SMO   AWORK2(1)   
   8 2MYT ...      ANDX  0  EWAIT
   7 2NBL ...      EXIT  4  0
   4 2NSC ...#   
   8 2P=8 ...SALPH          #74  
   8 2PM_ ...SDELT          #76  
   8 2Q5Q ...SPACE          #20  
   4 2QHH ...#   
   9 2Q_# ...SPACS          #763143  
   9 2RC5 ...SHTAB          #76317100
   9 2RSW ...SHYPH          #35760000
   9 2S=M ...SCAPE          #76130075
   4 2SND ...#   
   9 2T69 ...NMULT          7036875  
   4 2TJ2 ...#   
   9 2T_R ...STX            #76227632
   9 2WCJ ...SNULL          #76207620
   9 2WT* ...XETX           #34762300
   4 2X?6 ...#   
  10 2XNX ...PF0            2,#76350000  
  10 2Y6N ...PF1            2,#76327620  
  10 2YJF ...PF2            4,#76327632  
   9 2_2= ...PF12           #763301  
   4 2_D3 ...#   
   4 2_TS ...#   
  20 32?K ...#     SUBROUTINE TO RELOCATE FILE RECORD EITHER IN FILE ITSELF OR IN
  10 32PB ...#     THE ADATA,ACONV BLOCK 
   4 3377 ...#   
   5 33JY ...RECLOC  
   9 342P ...      LDXC  0  QUAL(2)  
  18 34DG ...      BCC      STEPAGAIN           [BR IF NO TRANSFORMING   
  18 34W? ...RCONV MHUNTW   3,ADATA,ACONV       [LOCATE TRANSFORM BLOCK. 
   8 35#4 ...      ADN   3  A1   
   8 35PT ...      BRN      (4)  
   6 367L ...STEPAGAIN   
   8 36KC ...      SBX   4  FX1  
  16 3738 ...      STEPAGAIN                    [RELOCATE RECORD 
   8 37D_ ...      ADX   4  FX1  
   8 37WQ ...      BRN      (4)  
  14 38#H ...#     SUBROUTINE FOR USE BY ALTLENG MACRO   
   4 38Q# ...#   
   4 3985 ...#   
   5 39KW ...SMHUNTW 
  10 3=3M ...      MHUNTW   2,ADATA,ACONV
   8 3=FD ...      BRN      (1)  
   4 3=X9 ...#   
   4 3?*2 ...#   
  16 3?QR ...# SUBROUTINE TO WAKE UP THE PCT POLLING ACTIVITY.   
   4 3#8J ...#   
   8 3#L* ...WAKUP WAKEUP   LF   
   7 3*46 ...      EXIT  6  0
   4 3*FX ...#   
  16 3*XN ...# SUBROUTINE TO GET THE LAST CHARACTER DEPOSITED.   
   4 3B*F ...#   
  15 3BR= ...SBACK STO   0  GEN0                [SAVE LINK.  
  20 3C93 ...      SLC   2  2                   [STEP BACK THE OUTPUT POINTER.   
   7 3CLS ...      SBN   2  1
   7 3D4K ...      SRC   2  2
  17 3DGB ...      LDCH  0  0(2)                [GET THE CHARACTER.  
  14 3DY7 ...      BRN      (GEN0)              [EXIT.   
   4 3F*Y ...#   
  15 3FRP ...# SUBROUTINE TO SET UP THE ^CLEAN FINISH^ COUNT.
   4 3G9G ...#   
  20 3GM? ...SETCL LDN   0  CLEANUM             [CLEANUM = 8 WHEN I LAST LOOKED. 
  15 3H54 ...      ADXC  0  AWORK1(2)           [J. IF TP.   
   8 3HGT ...      BCS      SETTP
  21 3HYL ...      SLL   0  2                   [* 4 FOR *LP (APPROX. 1/2 PAGE FULL).
  17 3JBC ...SETTP SBN   0  1                   [FAIRLY ARBITRARY :  
  18 3JS8 ...      STO   0  IWORK15(2)          [TEST WHEN IT GOES -VE.  
   7 3K9_ ...      EXIT  4  0
   4 3KMQ ...#   
  21 3L5H ...# SUBROUTINE TO UPDATE REMEMBRANCES FOR PAGE RESTARTS WHEN INSERTING F-F
   4 3LH# ...#   
  21 3L_5 ...NPAGE LDXC  0  REST(1)             [EXIT UNLESS PAGE RESTART SPECIFIED. 
   8 3MBW ...      BCC      (4)  
  15 3MSM ...      STO   4  ACOMMUNE1(1)        [SAVE LINK.  
  19 3N=D ...      MHUNTW   3,ADATA,IPTEMP      [FIND THE PAGE RESTART BLOCK.
  19 3NN9 ...      LDX   4  ALOGLEN(3)          [FIND POSITION DOWN BLOCK.   
  17 3P62 ...      LDX   1  A1(3)               [UPDATE PAGE NUMBER. 
   7 3PHR ...      SBN   4  1
   7 3P_J ...      ADN   1  1
   8 3QC* ...      STO   1  A1(3)
   7 3QT6 ...      DVS   0  4
  20 3R=X ...      LDX   1  FX2                 [SET RESTART LINE FOR THIS PAGE:-
   9 3RNN ...      LDX   4  NUM(1)   
  17 3S6F ...      SMO      0                   [IN THE RESTART BLOCK
   9 3SJ= ...      STO   4  A1+1(3)  
  10 3T23 ...      STO   4  IWORK14(1)   
   8 3TCS ...      CALL  4  YTSPL
  10 3TTK ...      LDX   4  ACOMMUNE1(1) 
   8 3W?B ...      BZE   0  (4)  
   8 3WP7 ...      LDX   0  A1(3)
   8 3X6Y ...      ANDN  0  #37  
  10 3XJP ...      STO   0  IWORK11(1)   
   9 3Y2G ...      LDXC  0  AWORK1(1)
   9 3YD? ...      BCS      SPLNUPAGE
   8 3YW4 ...      ORX   4  GSIGN
   9 3_?T ...      LDX   3  AWORK2(1)
   8 3_PL ...      BUX   4  SPLTJ
   4 427C ...#   
  21 42K8 ...# SUBROUTINE TO DO SLEEP MACRO, EXITING ONLY IF NO ERROR CONDITION OCCUR
   4 432_ ...#   
   4 43DQ ...#   
  16 43WH ...WAIT  SBX   7  FX1                 [RELATIVISE LINK.
  20 44## ...      SLEEP2   RLINE,REST1         [WAIT FOR BUFFER TO BECOME FREE. 
  19 44Q5 ...      MHUNTW   3,A7020,ALIST       [RELOCATE THE BUFFER BLOCK.  
  15 457W ...      ADX   7  1                   [RESET LINK. 
  18 45KM ...      STO   3  AWORK2(2)           [REMEMBER BLOCK ADDRESS. 
   7 463D ...      EXIT  7  0
   4 46F9 ...#   
  13 46X2 ...# SECTION TO DEAL WITH LINE RESTARTS.   
  21 47#R ...# IN THE CASE OF RESTARTS RENGAGE RESETS THE ACTLF BEFORE COMING BACK UP
   4 47QJ ...#   
   5 488* ...RLINE   
  20 48L6 ...      CALL  4  RECLOC              [GET POINTER TO RESTART RECORD   
  19 493X ...      LDN   6  1                   [SET MARKER TO FORCE FLIP.   
   8 49FN ...      BRN      REST2
   4 49XF ...#   
   4 4=*= ...#   
  21 4=R3 ...# SUBROUTINE TO FLIP, IF X6 IS NON-ZERO, AND THEN GET THE NEXT BUFFER.  
   4 4?8S ...#   
   8 4?*C ...VRSET BNG   6  SFLIP
   7 4?G2 ...      ADN   4  4
  20 4?LK ...SFLIP MHUNTW   3,A7020,ALIST       [FIND THE OUTPUT BUFFER BLOCK.   
  18 4#4B ...      STO   3  AWORK2(2)           [REMEMBER ITS ADDRESS.   
  18 4#G7 ...      BZE   6  SLEEP               [J. IF FLIP SWITCH UNSET.
  21 4#XY ...      FLIP                         [TELL PCT ACTIVITY WE'RE READY TO GO.
  21 4**P ...      BRN      SLEEP               [J. TO SET UP THE NEXT OUTPUT BUFFER.
   4 4*RG ...#   
  19 4B9? ...# SUBROUTINE TO STEP ON TO THE NEXT BUFFER WHEN IT IS AVAILABLE.
   4 4BM4 ...#   
  16 4C4T ...SLP1  SBX   4  FX1                 [RELATIVISE LINK.
  21 4CGL ...      CALL  7  WAIT                [WAIT FOR A BUFFER TO BECOME FREE.   
   7 4CYC ...      ADX   4  1
  21 4DB8 ...      ORX   4  GSIGN               [SET LINK -VE TO SHOW COORDINATION.  
   4 4DR_ ...#   
  21 4F9Q ...SLEEP LDCT  0  #103                [J. IF ERROR, MOP OFF OR INOP. TERMIN
   9 4FMH ...      ANDX  0  EWAIT(3) 
   8 4G5# ...      BNZ   0  SLP1 
  19 4GH5 ...      LDX   1  INTLK3(3)           [POINTER TO CURRENT BUFFER.  
   8 4GYW ...      LDX   2  FX2  
   8 4HBM ...      CALL  6  SPL19
  15 4HSD ...      BRN      U              [J IF NOT 1901A   
   8 4J=9 ...      BRN      XCLN 
  21 4JN2 ...U     LDXC  6  5                   [J. UNLESS END OF TRANSFER COINCIDES 
  20 4K5R ...      BNZ   6  XCLN                [WITH END OF RECORD (OR LINE).   
  20 4KHJ ...      STO   4  GEN4                [SAVE LINK, THEN RESET THE COUNT 
  21 4K_* ...      LDX   6  GSIGN               [OF LINES TO THE NEXT FORCED CLEAN   
  20 4LC6 ...      CALL  4  SETCL               [FINISH, AND MARK THIS BUFFER AS 
  21 4LSX ...      SMO      1                   [MESSAGE-CAN-END-WITH-THIS-TRANSFER. 
   9 4M=N ...      ORS   6  INTLK2(3)
   8 4MNF ...      LDX   4  GEN4 
  19 4N6= ...XCLN  SBN   1  ALFBUFFNUM-1        [STEP ON TO THE NEXT BUFFER. 
   8 4NJ3 ...      BZE   1  NEXZ0
  10 4N_S ...      ADN   1  ALFBUFFNUM   
   7 4PCK ...      SMO      1
  18 4PTB ...NEXZ0 LDXC  6  INTLK(3)            [HAS IT BEEN EMPTIED YET?
  15 4Q?7 ...      BCS      SLP1                [J. IF NOT.  
  20 4QNY ...      ANDN  6  -1                  [GET POINTER TO START OF BUFFER. 
  19 4R6P ...      ORX   6  GSIGN               [ALLOW TWO CHARS. FOR STX.   
   9 4RJG ...      ADN   6  ACTBUFF  
  19 4S2? ...      STO   6  AWORK3(2)           [REMEMBER CURRENT POINTER.   
  17 4SD4 ...      SMO      FX1                 [PUT STX INTO BUFFER.
   8 4STT ...      LDX   0  STX  
   7 4T?L ...      SMO      6
   8 4TPC ...      STO   0  0(3) 
  20 4W78 ...      LDX   0  IWORK14(2)          [SET THE RESTART LINE NO. FOR THE
  15 4WJ_ ...      SMO      1                   [LAST BUFFER.
   9 4X2Q ...      STO   0  INTLK2(3)
  19 4XDH ...      STO   1  INTLK3(3)           [SET POINTER TO NEW BUFFER.  
   8 4XH_ ...#SKI  ALTEBCC<1$1   
   4 4XMC ...(   
  20 4XQT ...      LDN   7  78                  [RESET 7-BIT BLOCK CHAR. COUNT   
  20 4XW? ...      LDN   6  118                 [AND 6-BIT TRANSFER CHAR. COUNT  
   4 4X_P ...)   
   7 4Y57 ...#SKI  ALTEBCC   
   4 4Y8K ...(   
  21 4Y#3 ...      STO   6  IWORK10(2)          [REMEMBER POINTER FOR START OF OUTPUT
  20 4YCF ...      LDN   7  72                  [RESET CHAR COUNTS ALLOWING FOR  
  18 4YGX ...      LDN   6  112                 [SIX EXTRA BCC CHARACTERS
   4 4YL* ...)   
   9 4YLK ...      LDXC  0  AWORK1(2)
  14 4YLT ...      BCC      NOUT                [J IF LP 
   8 4YM5 ...      LDN   0  #75  
  19 4YM* ...      BXU   0  IWORK16(2),NOUT     [OR IF CURRENT SHIFT IS ALPHA
   7 4YMK ...      LDX   1  3
   9 4YMT ...      ADX   1  AWORK3(2)
  20 4YN5 ...      DCH   0  0(1)                [INSERT BETA AT START OF BUFFER  
  17 4YN* ...      SBN   6  1                   [AND STEP DOWN COUNT 
   7 4YNK ...      BCHX  1  /
   7 4YNT ...      SBX   1  3
   9 4YP5 ...      STO   1  AWORK3(2)
   4 4YP* ...NOUT
  21 4YPW ...      EXIT  4  0                   [WILL SET V IF COORDINATED, AS B0 SET
   4 4_7M ...#   
  21 4_KD ...# SUBROUTINE TO INSERT SPACES, OR HORIZONTAL TAB IF THE CT. IN X0 > 2.  
   4 5239 ...#   
  20 52F2 ...PUTS1 SBX   6  0                   [STEP DOWN COUNTS AS REQUIRED.   
   7 52WR ...      SBX   7  0
   7 53#J ...      SBN   0  3
  20 53Q* ...      BNG   0  PUTS2               [J. TO INSERT SPACES IF CT. < 3. 
  18 5486 ...      ADX   6  0                   [HORIZ. TAB = 3*6-BIT,   
  17 54KX ...      ADX   7  0                   [I. E. 2*7-BIT CHARS.
   8 553N ...      SMO      FX1  
  17 55FF ...      ADX   0  SPACS               [SET UP CORRECT TAB. 
  17 55X= ...      LDN   1  0                   [POINTER FOR MVCH.   
   7 56*3 ...      ADN   7  1
   8 56QS ...      BCHX  1  PUTS3
  17 578K ...PUTS2 LDN   1  ACES                [POINTER FOR MVCH.   
  16 57LB ...      SMO      0                   [X0 = -1 OR -2.  
  18 5847 ...PUTS3 MVCH  1  3                   [MOVE IN REQUIRED CHARS. 
  18 58FY ...      LDX   1  FX2                 [SAVES A LOT OF ^SMO^S.  
   8 58XP ...      BNG   6  TREND
  19 59*G ...      BPZ   7  (4)                 [EXIT UNLESS COUNTED DOWN.   
   9 59JB ...      BRN       TREND   
   4 59R? ...#   
   7 59RK ...#SKI  ALTEBCC   
   4 59RX ...(   
  16 59S9 ...# SUBROUTINE TO ACCUMULATE BCC VALUE FOR LAST BUFFER
  20 59SH ...#        AND TO EXPAND BCC VALUE TO 6 CHARACTERS AND PUT IN BUFFER  
   4 59ST ...#   
   8 59T7 ...SBC   SMO      FX2  
   9 59TF ...      LDXC  0  AWORK1   
  14 59TR ...      BCS      (4)                 [J IF TP 
  19 59W5 ...      LDX   0  2                   [SAVE OUTPUT POINTER IN X0   
   8 59WC ...      LDX   2  FX2  
  15 59WP ...      STO   4  ACOMMUNE4(2)        [SAVE LINK   
  10 59X3 ...      STO   0  ACOMMUNE5(2) 
  20 59X* ...      LDX   4  IWORK10(2)          [GET RELATIVE POINTER FOR START  
  18 59XM ...      LDX   1  0                   [POINTER TO END OF DATA  
  18 59X_ ...      SBX   1  AWORK2(2)           [RELATIVISE END POINTER  
  20 59Y? ...      SLC   1  2                   [CONVERT END POINTER TO CHARS.   
  20 59YK ...      SLC   4  2                   [CONVERT START POINTER TO CHARS. 
  20 59YX ...      SBX   1  4                   [NUMBER OF CHARS IN OUTPUT BUFFER
   7 59_9 ...      LDX   0  1
  19 59_H ...      LDX   1  AWORK2(2)           [ADD START ADDRESS OF BLOCK  
  17 59_T ...      ADX   1  IWORK10(2)          [ADD RELATIVE POINTER
   7 5=27 ...      LDX   2  0
  19 5=2F ...      LDN   0  0                   [INITIALISE SBC VALUE IN X0  
  19 5=2R ...SBC1  LDCH  4  0(1)                [GET NEXT CHAR FROM BUFFER   
   7 5=35 ...      ERX   0  4
  15 5=3C ...      SLC   0  1                   [ADD TO SBC  
  17 5=3P ...      BCHX  1  /                   [J IF COUNT NOT ZERO 
   8 5=43 ...      BCT   2  SBC1 
   8 5=4* ...      SMO      FX2  
   9 5=4M ...      LDX   2  ACOMMUNE5
   7 5=4_ ...      LDN   4  6
  16 5=5? ...      LDX   1  0                   [MOVE SBC TO X1  
   7 5=5K ...SBC2  LDN   0  0
  18 5=5X ...      SLL   01 4                   [EXPAND 4 BITS TO A CHAR.
  19 5=69 ...      DCH   0  0(2)                [PUT CHAR IN OUTPUT BUFFER   
   7 5=6H ...      BCHX  2  /
  18 5=6T ...      BCT   4  SBC2                [EXPAND TO 6 CHARACTERS  
   8 5=77 ...      SMO      FX2  
  15 5=7F ...      LDX   4  ACOMMUNE4           [RESTORE LINK
   7 5=7R ...      EXIT  4  0
   4 5=85 ...)   
   4 5=8C ...#   
  21 5=94 ...# SUBROUTINE TO CLEAR UP LAST BUFFER, STEP ONTO THE NEXT, AND RESET PTRS
   4 5=LT ...#   
  15 5?4L ...XNRJE LDX   6  GEN0                [CHAR COUNT  
  16 5?GC ...      EXIT  4  0                   [NOT 1901A RJE   
  20 5?Y8 ...TRENDRJE                           [COME HERE TO SEND DC3ETX AT THE 
  21 5#*_ ...      LDX   1  FX2                 [END OF PAGE PROVIDED 1901A RJE LP   
  15 5#RQ ...      LDX   3  AWORK2(1)           [ALIST PTR   
  19 5*9H ...      STO   6  GEN0                [SAVE CHAR COUNT IN CASE NOT 
  14 5*M# ...      CALL  6  SPL19              [1901A RJE
  16 5B55 ...      BRN      XNRJE               [J IF NOT 1901A  
  18 5BGW ...      STOZ     IWORK11(1)          [PTR DOWN INPUT RECORD   
   8 5BYM ...SPLTJ SBX   4  FX1  
  13 5CBD ...      STO   4  IWORK13(1)          [LINK
  16 5CS9 ...      LDX   6  INTLK3(3)           [CURRENT BUFFER  
   7 5D=2 ...      LDN   0  1
  16 5DMR ...      ADS   0  ALFTRANS(1)         [TRANSFER COUNT  
   8 5F5J ...      CALL  0  SBACK
   8 5FH* ...      SBN   0  #74  
  18 5F_6 ...      BPZ   0  TXRJE               [J IF LAST CHAR WAS SHIFT
   7 5GBX ...      BCHX  2  /
   5 5GJC ...TXRJE   
   8 5GPX ...#SKI  ALTEBCC<1$1   
   4 5GXC ...(   
  17 5H4X ...      LDN   0  #7603               [DC3 AT END OF PAGE  
   8 5H=F ...      SLL   0  12   
  13 5HN= ...      ADN   0  #7623               [ETX 
   7 5J63 ...      LDN   1  0
  16 5JHS ...      MVCH  1  4                   [STORE IN BUFFER 
   4 5JJY ...)   
   7 5JL4 ...#SKI  ALTEBCC   
   4 5JM8 ...(   
  17 5JN# ...      LDN   0  #7603               [DC3 AT END OF PAGE  
   8 5JPD ...      LDX   1  GSIGN
  16 5JQJ ...      MVCH  1  2                   [PUT IN BUFFER   
  20 5JRN ...      CALL  4  SBC                 [CALCULATE BCC FOR THIS BUFFER   
  13 5JSS ...      LDN   0  #7623               [ETX 
   8 5JTY ...      LDX   1  GSIGN
  15 5JX4 ...      MVCH  1  2                   [IN BUFFER   
   4 5JY8 ...)   
   8 5J_K ...      LDX   1  GSIGN
   7 5KCB ...      SMO      6
  18 5KT7 ...      ORS   1  INTLK(3)            [BUFFER MAY NOW BE OUTPUT
   7 5L=Y ...      SMO      6
  15 5LNP ...      ORS   1  INTLK2(3)           [CLEAN FINISH
  18 5M6G ...      BRN      XRJE                [JOIN THE MAIN ROUTINE   
  21 5MJ? ...TREND SBX   3  ACOMMUNE3(1)        [RELATIVISE POINTER DOWN INPUT RECORD
  20 5N24 ...      SBX   4  FX1                 [RELATIVISE AND PRESERVE LINK.   
  10 5NCT ...      STO   3  IWORK11(1)   
  10 5NTL ...      STO   4  IWORK13(1)   
  18 5P?C ...      LDX   3  AWORK2(1)           [POINTER TO ALIST BLOCK. 
  20 5PP8 ...      LDX   6  INTLK3(3)           [MARK BUFFER AS READY FOR OUTPUT.
   7 5Q6_ ...      LDN   0  1
  18 5QJQ ...      ADS   0  ALFTRANS(1)         [UPDATE TRANSFER COUNT   
  18 5R2H ...      CALL  0  SBACK               [MOVE IN ETB TO END BLOCK
  20 5RD# ...      SBN   0  #74                 [(OVERWRITE LAST CHAR. DEPOSITED 
  17 5RW5 ...      BPZ   0  TRED1               [ IF IT WAS A SHIFT).
   7 5S?W ...      BCHX  2  /
   5 5SFB ...TRED1   
   7 5SLW ...#SKI  ALTEBCC   
  21 5SSB ...      CALL  4  SBC                 [CALC. BCC FOR THIS BUFFER & STORE   
   8 5S_W ...      LDX   1  GSIGN
   8 5T7D ...      LDN   0  #7607
   7 5TK9 ...      SMO      6
   9 5W32 ...      ORS   1  INTLK(3) 
   7 5WDR ...      MVCH  1  2
  21 5WWJ ...XRJE  CALL  6  WAKUP               [KICK THE OUTPUT ACTIVITY IF ASLEEP. 
  18 5X#* ...      CALL  4  SLEEP               [STEP ON TO NEXT BUFFER. 
  21 5XQ6 ...      BVCR     NCOOR               [J. UNLESS WE NEED TO RESET POINTERS.
  21 5Y7X ...      LDX   3  ACOMMUNE3(2)        [J. IF END OF FILE HAS BEEN REACHED. 
   8 5YKN ...      BZE   3  NCOOR
  18 5_3F ...      CALL  4  RECLOC              [FIND INPUT RECORD AGAIN 
  18 5_F= ...      STO   3  ACOMMUNE3(2)        [SAVE POINTER TO RECORD. 
  21 5_X3 ...NOREC MHUNTW   3,A7020,ALIST       [AND THE BUFFER BLOCK IF STEP COOR-ED
   9 62#S ...      STO   3  AWORK2(2)
   8 62QK ...NCOOR LDX   1  FX2  
  18 638B ...      LDX   2  AWORK2(1)           [SET NEW OUTPUT POINTER. 
   9 63L7 ...      LDX   4  REST(1)  
   9 643Y ...      ADX   2  AWORK3(1)
  18 64FP ...      BNZ   4  XLINE               [IF LINE RESTARTS GET THE
  21 64XG ...      LDX   0  IWORK19(1)          [RECORD NUMBER AT START OF LAST BUFFE
  21 65*? ...      STO   0  IWORK14(1)          [REMEMBER FOR INSERTION IN NEXT INTLK
  21 65R4 ...      LDX   0  NUM(1)              [RECORD NUMBER AT START OF THIS BUFFE
  21 668T ...      STO   0  IWORK19(1)          [SAVE FOR INSERTION IN NEXT IWORK14. 
  10 66LL ...XLINE LDX   3  ACOMMUNE3(1) 
  10 674C ...      LDXC   4  IWORK13(1)  
   8 67G8 ...      BCC      NSPLD
   9 67X_ ...      CALL  4  SPLNUPAGE
  10 68*Q ...      LDXC  4  IWORK13(1)   
   8 68RH ...      BRN      SPLE 
   5 699# ...NSPLD   
  18 69M5 ...      ADX   3  IWORK11(1)          [RESET THE INPUT POINTER.
  18 6=4W ...SPLE  ADX   4  FX1                 [RECONSTITUTE THE LINK.  
   7 6=JG ...      EXIT  4  0
   4 6*H6 ...#   
   9 6*YX ...SPL19 LDX   0  EWAIT(3) 
   7 6BBN ...      SRC   0  3
   8 6BSF ...      BNG   0  SPLYY
   7 6C== ...      SLC   0  2
   8 6CN3 ...      BPZ   0  (6)  
   5 6D5S ...YSSTP   
   8 6DHK ...      SMO      FX2  
   9 6D_B ...      LDXC  0  AWORK1   
  14 6FC7 ...      BCS      (6)               [J IF TP   
   7 6FSY ...SPLYY EXIT  6  1
   4 6GNG ...#   
   4 6H6? ...#   
   4 6HJ4 ...#   
   4 6H_T ...#   
  18 6JFF ...Z1RMTLF                            [ENTRY TO LIST SETUP FILE
   5 6SKF ...ONCEMORE
  20 6T3= ...      STOZ     IWORK17(2)          [CLEAR CONTINUATION LINE MARKER  
   8 6TB= ...      BRN      TZZZ 
   5 6THQ ...Z3RMTLF 
   5 6TP= ...REST1   
   6 6TSX ...#UNS  JSKI33
   7 6W4= ...TP1   LDN   6  1
   9 6WC= ...TZZZ  LDX   4  NUM(2)   
  21 6WQB ...      STO   4  IWORK14(2)          [SAVE FOR SETTING RESTART SECTIONS.  
  21 6X87 ...      STO   4  IWORK19(2)          [THIS WORD IS ONLY USED FOR LINE REST
  20 6XKY ...      MHUNTW   3,A7020,ALIST       [ALSO STORE IN ALIST BLOCK SO WE 
  20 6Y3P ...      STO   4  INTLK4(3)           [DON'T STEP BACK TOO FAR IN DOING
  19 6YFG ...                                   [A RESTART AFTER AN ERROR IN 
  19 6YX? ...                                   [OUTPUTTING THE FIRST BUFFER.
   4 6_*4 ...#   
  21 6_QT ...NEXT1 LDN   5  1                   [SET X5 NON ZERO TO SHOW LAST BUFFER 
  21 728L ...#                                                             [WAS CLEAN
  17 72LC ...STEP  STEP                         [GET THE NEXT RECORD.
   6 72MD ...#UNS  JSKI33
   4 72NF ...(   
   9 72PG ...      LFBBUS   M,2,REOK 
  10 72QH ...      MHUNTW   2,A7020,ALIST
   8 72RJ ...      LDX   0  BIT11
   9 72SK ...      ORS   0  EWAIT(2) 
  10 72TL ...      RENGAGE 4,RLINE,REST1 
   8 72WM ...      BZE   3  YEND 
  18 72X2 ...Z2RMTLF                            [ENTRY TO LIST MAINFILE  
  21 72X* ...[                                  [ALREADY POSITIONED AT CORRECT LINE  
   7 72XN ...      STEPAGAIN 
   4 72YP ...REOK
   8 72_9 ...      BZE   3  YEND 
   4 72_Q ...)   
   7 732R ...#SKI  JSKI33<1$1
  18 7348 ...      BZE   3  YEND                [J. IF FILE TOO SHORT.   
  18 73F_ ...      BCT   4  STEP                [N. B. X4 > 0 INITIALLY. 
   9 73XQ ...      LDXC  0  QUAL(2)  
  17 74*H ...      BCC      NOTBASIC            [BR IF FILE NOT BASIC
  18 74R# ...      LDEX  4  FRH(3)              [ELSE WE MUST TRANSFORM  
  18 7595 ...      ADN   4  3                   [REQUIRED BLOCK LENGTH   
   9 75LW ...      CALL  1  SMHUNTW  
  10 764M ...      LDX   0  ALOGLEN(2)   
   7 76GD ...      TXL   0  4
  18 76Y9 ...      BCC      XBIGNUFF            [BR IF BLOCK BIG ENOUGH  
   7 77B2 ...      PHOTO    7
  17 77RR ...      ALTLENG  2,4,SMHUNTW         [EXTEND ACONV BLOCK  
   9 789J ...      TESTMOVE 7,STILL  
  16 78M* ...      STEPAGAIN                    [RELOCATE RECORD 
   5 7956 ...STILL   
  15 79GX ...      CALL  1  SMHUNTW             [...AND ACONV
   5 79YN ...XBIGNUFF
   9 7=BF ...      LDEX  1  FRH(3)   
   8 7=S= ...      ADN   3  FRH  
   8 7?=3 ...      LDN   4  A1(2)
  21 7?MS ...      MOVE  3  0(1)                [COPY RECORD INTO ADATA/ACONV BLOCK. 
  14 7#5K ...      LDN   1  6                   ['NORMAL'
   8 7#HB ...      SMO      FX2  
   8 7#_7 ...      LDXC  0  QUAL 
   7 7*BY ...      ADXC  0  0
  17 7*SP ...      BCS      NORMAL              [BR IF FILE NORMAL   
  15 7B=G ...      ADN   1  #20                 ['ALLCHARS'  
   5 7BN? ...NORMAL  
   8 7C64 ...      LDN   2  #10  
  16 7CHT ...      TRANSFOR 1,2                 [TRANSFORM RECORD
  21 7C_L ...      CALL  4  RCONV               [GET POINTER TO TRANSFORMED RECORD.  
   5 7DCC ...NOTBASIC
   5 7DL? ...Z4RMTLF 
  18 7DT8 ...REST2 STO   3  ACOMMUNE3(2)        [SAVE POINTER TO RECORD. 
  21 7F=_ ...      CALL  4  SETCL               [SET CT. OF LINES TO NEXT CLEAN FINIS
   4 7FNQ ...#   
  21 7FXL ...      CALL  4  VRSET               [FLIP, OR NOT, THEN GET NEXT BUFFER. 
   8 7G6G ...      CALL  4  TNUPA
   9 7G8R ...      SBX   2  AWORK2(1)
   9 7G?4 ...      STO   2  AWORK3(1)
   8 7G*B ...      LDX   2  FX2  
  20 7H25 ...      BVCR     NEXT2               [J. IF SLEEP DIDN'T CO-ORDINATE. 
   4 7HCW ...#   
  20 7HTM ...      CALL  4  RECLOC              [OTHERWISE RELOCATE INPUT RECORD 
  10 7J?D ...      STO   3  ACOMMUNE3(2) 
  19 7JP9 ...      MHUNTW   1,A7020,ALIST       [RELOCATE THE BUFFER BLOCK.  
   9 7K72 ...      STO   1  AWORK2(2)
   4 7KJR ...#   
   4 7L2J ...#   
   8 7LD* ...NEXT2 LDX   1  FX2  
   9 7LW6 ...      LDX   2  AWORK2(1)
   9 7M?X ...      ADX   2  AWORK3(1)
   8 7MPN ...      CALL  4  YTSPL
   8 7N7F ...      BZE   0  N2FR1
   9 7NK= ...      LDXC  0  AWORK1(1)
   8 7P33 ...      BCC      N2FR1
   8 7PDS ...      LDCT  0  #600 
  10 7PWK ...      ANDX  0  IWORK17(1)   
   8 7Q#B ...      BNZ   0  N2FR1
   8 7QQ7 ...      LDCT  0  #200 
  10 7R7Y ...      ORS   0  IWORK17(1)   
   8 7RKP ...      CALL  4  NPAGE
   5 7S3G ...N2FR1   
  10 7S=B ...      LDX   3  ACOMMUNE3(1) 
   9 7SF? ...      LDX   4  QUAL(1)  
   7 7SX4 ...      ANDN  4  4
  19 7TG2          BZE   4  NMONF               [J. UNLESS MONFILE LISTING.  
  18 7T_L          LDX   0  TBITS(1)            [CHECK CATEGORY & J. IF  
  20 7WF=          ANDX  0  FRH+1(3)            [THIS RECORD NOT TO BE LISTED.   
   8 7WYW          BZE   0  XLP2 
   4 7XDG    #   
  17 7XY6    NMONF LDXC  4  AWORK1(1)           [J. IF TAPE PUNCH.   
   8 7YCQ          BCS      TP2  
  20 7YXB          LDCT  4  #100                [J. IF FILE RECORDS NOT SUPPLIED 
  16 7_C2          ANDX  4  QUAL(1)             [WITH OWN PFCCS. 
   8 7_WL          BZE   4  XLP1 
  18 82B=          SMO      3                   [OTHERWISE SORT OUT PFCC.
   8 82TW          LDCH  4  FRH+1
  17 83*G          SBN   4  #40                 [J. IF NON PRINTING. 
   8 83T6          BNG   4  XPRNT
  15 84#Q          ORX   5  GSIGN               [SET MARKER. 
  21 84SB          SBN   4  #40                 [BRING INTO LINE WITH NON-PRINTING CC
  19 85#2    XPRNT ADN   4  #20                 [J. IF NOT RECOGNISED CHAR.  
   8 85RL          BPZ   4  XLP1 
  18 86?=          ADN   4  7                   [J. IF NOT VERTICAL TAB. 
   8 86QW          BNG   4  XFF1 
  21 87=G          ADN   4  1                   [X4 CORRESPONDS TO PRINT LOOP CHANNEL
   4 87Q6    #   
  20 889Q    YFF   LDXC  0  5                   [FORCE CLEAN FINISH UNLESS LAST  
  17 88PB          BNZ   0  YINIT               [RECORD ALREADY DID. 
   7 8992          LDN   6  0
   9 89NL          SEGENTRY K56RMTLF 
  21 8=8=    YINIT LDN   0  A7021PAGE-1         [RESET NO. OF LINES TO NEXT FORM-FEED
  10 8=MW          STO   0  IWORK16(1)   
  20 8?7G          BCT   4  YPFCL               [J. UNLESS CHANNEL 1 (FORM FEED).
   4 8?M6    #   
  21 8#6Q          CALL  4  NPAGE               [SET RESTART NOS. FOR PAGE RESTARTS. 
  18 8#LB          CALL  4  TRENDRJE            [SEND DC3 IF 1901A RJE LP
  18 8*62          LDX   1  GSIGN               [SET POINTER FOR MVCH.   
  15 8*KL          LDN   0  #7634               [FORM FEED.  
  16 8B5=          LDN   3  2                   [CHARACTER COUNT.
   8 8BJW          BRN      SET  
   4 8C4G    #   
   4 8CJ6    ZFF 
  18 8D3Q          STO   4  ACOMMUNE2(1)        [PRESERVE X4 FOR LATER   
  14 8DHB          LDN   4  1                   [FF PFFCC
  18 8F32          LDCT  0  #100                [J. IF PFCC NOT SUPPLIED.
   9 8FGL          ANDX  0  QUAL(1)  
   8 8G2=          BZE   0  YFF  
   9 8GFW          SEGENTRY K57RMTLF 
  10 8G_G          LDN   0  A7021PAGE-1  
  21 8HF6          STO   0  IWORK16(1)          [RESET NO OF LINES TO NEXT FORM-FEED 
  21 8HYQ          CALL  4  NPAGE               [SET RESTART NOS FOR GAGE RESTARTS   
  17 8JDB          CALL  4  TRENDRJE            [SEND DC3 IF 1901A   
  15 8JY2          LDX   4  ACOMMUNE2(1)        [RESTORE X4  
   8 8KCL          BRN      YLF2 
   4 8KX=    #   
  19 8LBW    YPFCL LDN   1  4                   [SET UP CORRECT VERTICAL TAB.
   8 8LWG          SMO      FX1  
   8 8MB6          ADX   4  PF12 
  18 8MTQ          LDN   3  3                   [NO. OF CHARS. TO SEND.  
  17 8N*B          BCHX  1  SET                 [POINTER FOR MVCH.   
   4 8NT2    #   
  19 8P#L    XFF1  ADN   4  6                   [J. UNLESS UNRECOGNISED PFCC.
   8 8PS=          BNG   4  YLF  
   4 8Q?W    #   
  18 8QRG    XLP1  NGN   4  2                   [DEFAULT VALUE OF 1 NL.  
  19 8R?6          ORX   5  GSIGN               [SET MARKER TO SHOW PRINTING.
  21 8RQQ    YLF   ADN   4  1                   [0, 1 OR 2 LINE FEEDS AS REQUIRED.   
  10 8S=B          ADS   4  IWORK15(1)   
   7 8SQ2          ADN   4  2
  20 8T9L          SBSC  4  IWORK16(1)          [J. IF BOTTOM OF PAGE HAS BEEN   
  14 8TP=          BCS      ZFF                 [REACHED.
   4 8W8W    YLF2
  21 8WNG          ADX   4  4                   [ACCESS CORRECT CONTROL CHARACTERS.  
   8 8X86          LDX   1  FX1  
  19 8XMQ          SMO      4                   [SET COUNT OF CHARS. TO MOVE 
   9 8Y7B          LDX   3  PF0(1)   
  19 8YM2          SMO      4                   [AND POINTER FOR THE MVCH.   
   9 8_6L          LDN   1  PF0+1(1) 
   4 8_L=    #   
  21 925W    SET   MVCH  1  0(3)                [MOVE IN PAPER MOVEMENT CONTROL CHARS
  20 92KG          SBX   6  3                   [STEP DOWN THE TRANSFER COUNTS.  
   7 9356          SRA   3  1
   7 93JQ          SBX   7  3
  19 944B          LDX   1  FX2                 [RESET ACTIVITY BLOCK POINTER
  17 94J2          LDX   3  ACOMMUNE3(1)        [AND RECORD POINTER. 
  21 953L          BNG   6  TR1                 [J. IF MAXIMUM TRANSFER COUNT REACHED
  18 95H=          BPZ   7  XTR1                [J. UNLESS BLOCK FULL.   
  20 962W    TR1   ANDX  5  GSIGN               [ENSURE CLEAN FINISH MARKER SET. 
  18 96GG          CALL  4  TREND               [STEP ON TO NEXT BUFFER. 
   7 9726          ADN   5  1
  18 97FQ    XTR1  LDXC  5  5                   [J. TO GET NEXT RECORD IF
  17 97_B          BCC      XCONT               [NON-PRINTING PFCC.  
   4 98F2    #   
   8 98YL    TP2   LDCT  4  #600 
  19 99D=          LDEX  5  FRH(3)              [GET COUNT OF WORDS IN RECORD
  17 99XW          ANDX  4  FRH+1(3)            [AND CHARACTER BITS. 
   9 9=CG          LDXC  0  AWORK1(1)
  21 9=X6          BCS      TP3                 [J. IF TP. AS NO SPECIAL OR NUMBER.  
  20 9?BQ          LDX   0  QUAL(1)             [GET ^NUMBER^ AND ^SPECIAL^ BITS.
   7 9?WB          ANDN  0  3
  21 9#B2          ADX   5  0                   [ADD 1 WD. FOR SPECIAL & 2 FOR NUMBER
  21 9#TL          ANDN  0  1                   [STEP ON INPUT POINTER (1 WD. ONLY   
  17 9**=          SBX   3  0                   [IF SPECIAL LISTING).
   7 9*SW          ADN   3  2
   4 9B#G    #   
  21 9BS6    TP3   LDX   0  QUAL(1)             [J. IF LAST TWO WORDS SPACEFILLED.   
  20 9C?Q          SBN   5  2                   [ALLOW FOR 2 WORDS OF RED TAPE.  
  21 9CRB          ADS   5  ALFWORDS(1)         [UPDATE NUMBER OF WORDS TRANSFNRRED  
   8 9D?2          ANDN  0  #1000
   8 9DQL          BNZ   0  NOCH 
  19 9F==          BZE   4  NOCH                [OR IF NO SPARE CHARACTERS.  
  21 9FPW          SBN   5  1                   [MAKE ALLOWANCE FOR THE ODD CHARACTER
   7 9G9G          ADX   5  4
  19 9GP6    NOCH  SLC   5  2                   [TURN INTO A CHARACTER COUNT.
  15 9H8Q          LDXC  0  AWORK1(1)           [J. IF TP.   
   8 9HNB          BCS      TP4  
  21 9J82          BXL   5  IWORK12(1),TNUMB    [J. UNLESS RECORD TOO LONG FOR 1 LINE
  18 9JML          STO   5  IWORK17(1)          [REMEMBER RECORD COUNT.  
  18 9K7=          LDX   5  IWORK12(1)          [SET COUNT FOR THIS LINE 
  21 9KLW          SBN   5  5                   [(= ACTUAL LINE WIDTH - 4 FOR HYPHEN)
  21 9L6G          SBS   5  IWORK17(1)          [TAKE OFF CHARS. TO BE SENT THIS TIME
   4 9LL6    #   
  20 9M5Q    TNUMB LDX   0  QUAL(1)             [J. UNLESS NUMBERING REQUIRED.   
   7 9MKB          ANDN  0  2
   8 9N52          BZE   0  YLP1 
  17 9NJL          SBN   5  8                   [7 FIGURES + 1 SPACE.
  21 9P4=          LDXC  0  NUM(1)              [J. IF LINE NO. IS -VE. (I.E. TOO BIG
   8 9PHW          BCS      XNUMB
  21 9Q3G          SBNC  6  7                   [WILL WE GET THE NUMBER IN THIS BUFFE
   8 9QH6          BCS      TR2  
   7 9R2Q          SBNC  7  7
  15 9RGB          BCC      XTR2                [J. IF O. K. 
   8 9S22    TR2   CALL  4  TREND
  18 9SFL          SBN   6  7                   [ALLOW FOR NUMBER AGAIN. 
   7 9S_=          SBN   7  7
  21 9TDW    XTR2  LDX   0  NUM(1)              [MULTIPLY LINE NUMBER BY MAGIC NUMBER
  21 9TYG          SBN   0  1                   [(LINE NUMBER = RECORD NUMBER - 1).  
   8 9WD6          SMO      FX1  
   8 9WXQ          MPY   0  NMULT
  19 9XCB          LDN   4  6                   [INSERT AT MOST SIX SPACES.  
  21 9XX2          MODE     1                   [MODE TO INSERT SPACE INSTEAD OF ZERO
  18 9YBL    NCONV CBD   0  0(2)                [CONVERT FIRST 6 DIGITS. 
   7 9YW=          BCHX  2  /
   8 9_*W          BCT   4  NCONV
  20 9_TG          MODE     0                   [INSERT LAST NUMBER REGARDLESS.  
   8 =2*6          CBD   0  0(2) 
   8 =2SQ          LDX   1  FX2  
   7 =3#B          LDN   0  1
   8 =3S2          BCHX  2  YLP1 
   4 =4?L    #   
  21 =4R=    TP4   BZE   0  UAP                 [J. UNLESS NON-PERIPHERAL TYPE FILE, 
  19 =5=W          STOZ     IWORK16(1)          [OTHERWISE OUTPUT IN GRAPHIC 
  18 =5QG          BUX   3  NEXT3               [FROM WORD 1 OF RECORD.  
   7 =6=6    UAP   LDX   0  5
  10 =6PQ ...      LDEX   4  IWORK17(1)  
   8 =79B          SBN   0  2000 
   8 =88L          BNZ   0  UBP  
   8 =8N=          ORX   4  GSIGN
  10 =97W    UBP   STO   4  IWORK17(1)   
   4 =9MG    #   
  18 ==76    PRIPH ORX   3  GSIGN               [GET THE MODE CHARACTER. 
   9 ==LQ          LDCH  4  FRH+1(3) 
   7 =?6B          LDX   0  4
  20 =?L2          ADNC  3  2                   [STEP TO WORD 2 OF THE RECORD.   
   8 =#5L          ANDN  0  #40  
  20 =#K=          BNZ   0  YMK6                [J. IF MODE > #40 : MARK 6+ FILE.
   4 =*4W    #   
  21 =*JG          LDX   0  4                   [B21 SET : MAINTAIN PREVIOUS SHIFT.  
   7 =B46          ANDN  0  4
   8 =BHQ          BNZ   0  PREV 
  18 =C3B          LDX   0  4                   [B10 SET : GRAPHIC FILE. 
   8 =CH2          ANDN  0  #10  
   8 =D2L          BNZ   0  SETGR
   4 =DG=    #   
  20 =D_W ...      LDEX  0  IWORK17(1)          [J. UNLESS TAPE PUNCH TYPE FILE. 
   8 =FFG          BZE   0  SETA1
  19 =F_6          ANDN  4  #20                 [J. UNLESS PUNCH RUNOUT MODE.
   8 =GDQ          BZE   4  SETA2
   4 =GYB    #   
  19 =HD2          BZE   5  XLP2                [J. IF ZERO CHARACTER COUNT. 
  21 =HXL          STOZ     ACOMMUNE3(1)        [SET MARKER SO WE DON'T BOTHER TO STE
   4 =JC=    #   
  18 =JWW    RNOUT LDN   0  #7620               [INSERT 1 NULL CHARACTER.
   8 =KBG          LDX   1  GSIGN
   7 =KW6          MVCH  1  2
  17 =L*Q          SBNC  6  2                   [J. IF END OF BUFFER.
   8 =LTB          BCS      TR2A 
  18 =M*2          SBNC  7  1                   [J. UNLESS END OF BUFFER.
   8 =MSL          BCC      XTR2A
  19 =N#=    TR2A  LDX   1  FX2                 [STEP ON TO THE NEXT BUFFER. 
   8 =NRW          CALL  4  TREND
  18 =P?G    XTR2A BCT   5  RNOUT               [J. FOR NEXT CHARACTER.  
   8 =PR6          LDX   1  FX2  
  16 =Q=Q          BRN      XLP2                [END OF RECORD.  
   4 =QQB    #   
  19 =R=2    SETA1 BNZ   4  SETA2               [NON-ZERO : START IN ALPHA.  
   4 =RPL    #   
  20 =S9=    SETGR LDX   0  IWORK16(1)          [SET MODE INDICATOR = GRAPHIC.   
  17 =SNW          BZE   0  NEXT3               [J. IF ALREADY SET.  
  10 =T8G          STOZ     IWORK16(1)   
  20 =TN6          SBNC  0  #75                 [J. UNLESS PREVIOUSLY IN BETA.   
   8 =W7Q          BCS      NEXT3
  20 =WMB          LDN   4  #74                 [J. TO SET ALPHA SHIFT IN BUFFER.
   8 =X72          BRN      SETA3
   4 =XLL    #   
  18 =Y6=    SETA2 LDN   4  #74                 [J. IF ALREADY IN ALPHA. 
  10 =YKW          LDX   0  IWORK16(1)   
   9 =_5G          BXE   4  0,NEXT3  
  19 =_K6          STO   4  IWORK16(1)          [SET MODE INDICATOR TO ALPHA.
  21 ?24Q          BZE   0  NEXT3               [J. IF PREVIOUSLY PUNCHING GRAPHICAL 
  20 ?2JB    SETA3 CALL  0  SBACK               [SET THE CURRENT SHIFT TO ALPHA. 
   7 ?342          ADN   6  1
   8 ?3HL          SBNC  0  #75  
   8 ?43=          BCC      NEXT3
   7 ?4GW          BCHX  2  /
   7 ?52G          SBN   6  2
   8 ?5G6          DCH   4  0(2) 
   8 ?5_Q          BCHX  2  NEXT3
   4 ?6FB    #   
  18 ?6_2    PREV  LDX   0  IWORK16(1)          [PRESERVE CURRENT SHIFT. 
  20 ?7DL          BNZ   0  NEXT3               [J. UNLESS PREVIOUSLY GRAPHIC.   
  20 ?7Y=          LDN   4  #74                 [SET MODE INDICATOR TO SAY ALPHA.
  10 ?8CW          STO   4  IWORK16(1)   
   8 ?8XG          BRN      NEXT3
   4 ?9C6    #   
  21 ?9WQ    YMK6  BXE   4  IWORK16(1),NEXT3    [J. IF MODE ALREADY SET (USUAL CASE).
  18 ?=BB          STO   4  IWORK16(1)          [SET THE MODE INDICATOR. 
  20 ?=W2          SBNC  4  #75                 [J. UNLESS INITIAL SHIFT IS BETA.
   4 ??*L    #   
   8 ??T=          BCS      NEXT3
  21 ?##W          LDN   0  #75                 [IF SO INSERT BETA, AS CODE CONVERTER
  16 ?#SG          SBN   6  1                   [ASSUMES ALPHA.  
   8 ?*#6          DCH   0  0(2) 
  17 ?*RQ          BCHX  2  NEXT3               [STEP OUTPUT POINTER.
   4 ?B?B    #   
   4 ?BR2    #   
  17 ?C=L    NEXT3 BZE   5  TP6                 [J. IF END OF RECORD.
   4 ?CQ=    #   
  17 ?D9W    TP5   LDCH  4  0(3)                [GET NEXT CHARACTER. 
  21 ?DPG          LDX   0  IWORK16(1)          [GET SHIFT - GRAPHIC CONVERSION IF ZE
   8 ?F96          BZE   0  YGRAP
  21 ?FNQ          SMO      FX1                 [J. TO INSERT CHARACTER IF NOT SHIFT.
   8 ?G8B          TXL   4  SALPH
   8 ?GN2          BCS      YDEP 
   4 ?H7L    #   
  21 ?HM=          SMO      FX1                 [J. TO RESET CURRENT SHIFT IF NOT DEL
   8 ?J6W          TXL   4  SDELT
   8 ?JLG          BCS      SHIFT
   4 ?K66    #   
  21 ?KKQ          SBN   5  1                   [IGNORE THIS CHAR. IF LAST IN RECORD.
   8 ?L5B          BZE   5  TP6  
  21 ?LK2          BCHX  3  /                   [OTHERWISE GET 2ND. CHAR. OF DELTA PA
   8 ?M4L          LDCH  0  0(3) 
  21 ?MJ=          SBNC  0  #14                 [ESCAPE CHAR. IF IN THE RANGE 0-#13. 
   8 ?N3W          BCS      YESC 
  20 ?NHG          SBNC  0  5                   [NORMAL IF IN THE RANGE #14-#20. 
   8 ?P36          BCS      YNORM
  21 ?PGQ          SBNC  0  6                   [ESCAPE CHAR. IF IN THE RANGE #21-#27
   8 ?Q2B          BCS      YESC 
   4 ?QG2    #   
  21 ?Q_L    YNORM DCH   4  0(2)                [OTHERWISE NORMAL :- INSERT DELTA.   
  19 ?RF=          SBN   6  1                   [STEP DOWN TRANSFER COUNT.   
  20 ?RYW          LDCH  4  0(3)                [GET 2ND. CHAR. OF PAIR AGAIN.   
  21 ?SDG          BCHX  2  YDEP                [J. TO INSERT IT, STEP OUTPUT POINTER
   4 ?SY6    #   
  20 ?TCQ    YESC  LDCH  4  0(3)                [GET 2ND. CHAR. OF PAIR AGAIN.   
  16 ?TXB          LDX   0  IWORK16(1)          [CURRENT SHIFT   
  20 ?WC2          ERN   4  #60                 [CONVERSION FOR ESCAPE CHARACTER.
   8 ?WWL          SBN   0  #74  
   7 ?XB=          SLL   4  6
  17 ?XTW          LDN   1  4                   [POINTER FOR MVCH.   
  18 ?Y*G          SMO      FX1                 [ADD IN #7613 FOR ESCAPE.
   8 ?YT6          ADX   4  SCAPE
  19 ?_#Q          BZE   0  YALPH               [J. IF ALREADY ALPHA SHIFT.  
  20 ?_SB          CALL  0  SBACK               [ESCAPE SEQUENCE MUST BE IN ALPHA
  21 #2#2                                       [SHIFT, SO INSERT #747613XX75, UNLESS
  21 #2RL                                       [LAST CHAR. WAS #75, IN WHICH CASE   
  20 #3?=                                       [OVERWRITE IT WITH #7613XX75 TO  
  16 #3QW          SBN   0  #75                 [PRESERVE SHIFT. 
  19 #4=G          BZE   0  YBETA               [J. IF LAST CHAR. WAS BETA.  
   4 #4Q6    #   
  18 #59Q          BCHX  2  /                   [RESET OUTPUT POINTER.   
  16 #5PB          LDN   0  #74                 [INSERT ALPHA.   
  17 #692          SBN   6  2                   [STEP TRANSFER COUNT 
   8 #6NL          DCH   0  0(2) 
  17 #78=          BCHX  2  /                   [STEP OUTPUT POINTER.
  18 #7MW          BPZ   6  YBETA               [BR IF NOT COUNTED OUT   
   8 #87G          LDX   1  FX2  
  19 #8M6          CALL  4  TREND               [END OF BUFFER -> NEXT BLOCK 
  20 #96Q          BRN      YESC                [BR TO REANALYBE ESCAPE SEQUENCE 
   5 #9LB    YBETA   
  17 #=62          SBN   6  3                   [STEP TRANSFER COUNT 
  18 #=KL          MVCH  1  4                   [MOVE IN ESCAPE SEQUENCE.
  17 #?5=          BCHX  3  XTRA1               [STEP INPUT POINTER. 
   4 #?JW    #   
  21 ##4G    SHIFT BXE   4  IWORK16(1),YMISS    [IGNORE THIS CHAR. IF SAME AS CURRENT
  21 ##J6          LDN   0  78                                                 [SHIFT
  17 #*3Q          STO   4  IWORK16(1)          [RESET CURRENT SHIFT.
  19 #*HB          BXE   7  0,Y1ST              [J. IF AT BEGINNING OF BLOCK.
  21 #B32          CALL  0  SBACK               [GET THE LAST CHARACTER DEPOSITED.   
  19 #BGL          SBN   0  #74                 [J. IF IT WAS A SHIFT CHAR.  
   8 #C2=          BPZ   0  RDEP 
  20 #CFW          BCHX  2  TDEP                [ELSE RESET OUTPUT POINTER & J.  
   4 #C_G    #   
  21 #DF6    Y1ST  SBN   4  #75                 [J. TO INSERT SHIFT CHAR. IF BETA.   
   8 #DYQ          BZE   4  SDEP 
  21 #FDB          LDCT  0  #200                [OTHERWISE JUST STEP OUTPUT POINTER  
  21 #FY2          ERX   2  0                   [BACK TO THE BEGINNING OF THE BUFFER.
   4 #GCL    #   
  21 #GX=    RDEP  ADN   6  1                   [ADD 1 BACK INTO THE TRANSFER COUNT. 
  21 #HBW    YMISS BCHX  3  NEXT4               [STEP INPUT POINTER & J. FOR NEXT CH.
   4 #HWG    #   
  16 #JB6    SDEP  LDN   4  #75                 [SET BETA SHIFT. 
  19 #JTQ    TDEP  SBN   6  1                   [STEP DOWN TRANSFER COUNT.   
  17 #K*B          DCH   4  0(2)                [INSERT SHIFT CHAR.  
  18 #KT2          BCHX  3  ZDEP                [STEP INPUT POINTER & J. 
   4 #L#L    #   
   4 #LS=    #   
  16 #M?W    XNUMB LDN   0  8                   [EIGHT SPACES.   
   4 #MRG    #   
  18 #N?6    YLP1  BZE   5  YLINE               [J. IF NO DATA IN RECORD.
  17 #NQQ    YLP2  LDCH  4  0(3)                [GET NEXT CHARACTER. 
  16 #P=B          SMO      FX1                 [J. UNLESS SPACE.
   8 #PQ2          TXU   4  SPACE
   8 #Q9L          BCS      XSP1 
  21 #QP=          SBN   0  24                  [HAVE WE HAD 25 CONSECUTIVE SPACES YE
  20 #R8W          BZE   0  TAB                 [J. TO INSERT TAB IF 25TH. SPACE.
  21 #RNG          ADN   0  25                  [OTHERWISE JUST ADD 1 TO SPACE COUNT.
  21 #S86          BCHX  3  YLP3                [STEP INPUT POINTER & J. FOR NEXT CH.
   4 #SMQ    #   
  20 #T7B    XSP1  BZE   0  XSP2                [J. IF THE SPACE COUNT IS ZERO.  
  20 #TM2          CALL  4  PUTS1               [INSERT HORIZONTAL TAB OR SPACES.
  19 #W6L          LDN   0  0                   [RESET SPACE COUNT TO ZERO.  
  20 #WL=          LDCH  4  0(3)                [GET THE INPUT CHARACTER AGAIN.  
   4 #X5W    #   
   4 #XKG    XSP2
  20 #Y56    YGRAP SMO      FX1                 [J. UNLESS HAVE TO INSERT DELTA. 
   8 #YJQ          TXL   4  SALPH
   8 #_4B          BCS      YDEP 
  20 #_J2          LDN   1  #76                 [INSERT DELTA CHAR. INTO BUFFER. 
  21 *23L          SBN   4  #10                 [PERFORM DELTA CONVERSION ON INPUT CH
   8 *2H=          DCH   1  0(2) 
  19 *32W          SBN   6  2                   [STEP DOWN TRANSFER COUNT.   
  21 *3GG          BCHX  2  /                   [STEP OUTPUT POINTER & INSERT CHAR.  
   8 *426          DCH   4  0(2) 
  17 *4FQ          BCHX  3  /                   [STEP INPUT POINTER. 
  18 *4_B          BCHX  2  XTRA1               [STEP OUTPUT POINTER & J.
   4 *5F2    #   
  15 *5YL    YDEP  DCH   4  0(2)                [INSERT CHAR.
  17 *6D=          BCHX  3  /                   [STEP INPUT POINTER. 
  18 *6XW          SBN   6  1                   [STEP DOWN TRANSFER COUNT
  16 *7CG          SBN   7  1                   [AND BLOCK COUNT.
  18 *7X6    ZDEP  BCHX  2  XTRA2               [STEP OUTPUT POINTER & J.
   4 *8BQ    #   
  20 *8WB    TAB   SMO      FX1                 [SET POINTER FOR MVCH TO INSERT  
  20 *9B2          LDN   1  SHTAB               [HORIZONTAL TAB FOR 25 SPACES.   
   4 *9TL    #   
  17 *=*=    YALPH BCHX  3  /                   [STEP INPUT POINTER. 
  19 *=SW          MVCH  1  3                   [MOVE IN REQUIRED SEQUENCE.  
  17 *?#G          SBN   6  3                   [STEP DOWN TRANSFER  
   4 *?S6    #   
  17 *#?Q    XTRA1 SBN   7  2                   [AND BLOCK COUNTS.   
  20 *#RB          LDX   1  FX2                 [RESET POINTER TO ACTIVITY BLOCK.
   8 **?2    XTRA2 BNG   6  TR3  
  19 **QL          BPZ   7  XTR3                [J. UNLESS NEW BUFFER NEEDED.
   4 *B==    #   
  17 *BPW    TR3   CALL  4  TREND               [STEP TO NEXT BUFFER.
  19 *C9G    XTR3  LDXC  0  AWORK1(1)           [J. FOR NEXT CH. IF NOT LP.  
   8 *CP6          BCS      NEXT4
   4 *D8Q    #   
  20 *DNB    YLP3  BCT   5  YLP2                [J. UNLESS END OF RECORD REACHED.
   4 *F82    #   
   4 *FML    #   
  21 *G7=    YLINE LDX   4  IWORK17(1)          [J. IF NO CONTINUATION TO DEAL WITH. 
   8 *GLW          BZE   4  ZCONT
   4 *H6G    #   
  21 *HL6          LDN   5  2                   [SET MARKER NON-ZERO AS LINE NOT YET 
  21 *J5Q          ADN   0  3                   [INSERT THREE EXTRA SPACES. [FINISHED
  18 *JKB          CALL  4  PUTS1               [PUT IN HORIZONTAL TAB.  
  20 *K52          LDN   0  1                   [STEP DOWN COUNT OF LINES TO NEXT
  16 *KJL          SBSC  0  IWORK15(1)          [CLEAN FINISH.   
  16 *L4=          BCC      XCF1                [J. IF STILL +VE.
  20 *LHW          LDN   5  0                   [INDICATE CLEAN FINISH REQUIRED. 
   4 *M3G    #   
  16 *MH6    XCF1  LDN   4  #3200               [#7632 = NEWLINE.
  21 *N2Q          SBSC  0  IWORK16(1)          [STEP DOWN COUNT OF LINES TO NEXT FF.
  16 *NGB          BCC      XFF2                [J. IF STILL +VE.
   7 *P22          LDX   5  3
  17 *PFL          SBX   5  ACOMMUNE3(1)        [RELATIVISE INPUT PTR
  21 *P_=          CALL  4  NPAGE               [SET RESTART NOS. FOR PAGE RESTARTS. 
  18 *QDW          CALL  4  TRENDRJE            [SEND DC3 IF 1901A RJE LP
   7 *QYG          LDX   3  5
  15 *RD6          ADX   3  ACOMMUNE3(1)        [INPUT PTR   
   9 *RXQ          SEGENTRY K58RMTLF 
  21 *SCB          LDN   0  A7021PAGE-1         [RESET CT. OF LINES TO NEXT FORM-FEED
  20 *SX2          LDN   4  #3400               [#7634 = THROW TO TOP OF PAGE.   
  10 *TBL          STO   0  IWORK16(1)   
  20 *TW=          LDN   5  0                   [INDICATE CLEAN FINISH REQUIRED. 
   4 *W*W    #   
  21 *WTG    XFF2  SMO      FX1                 [INSERT HYPHEN, TO INDICATE NEXT LINE
  20 *X*6          ADX   4  SHYPH               [IS CONTINUATION, AND REQUISITE  
  17 *XSQ          LDN   1  4                   [VERTICAL TABULATION.
   7 *Y#B          MVCH  1  3
  19 *YS2          SBN   6  3                   [STEP DOWN TRANSFER COUNT.   
   8 *_?L          LDX   1  FX2  
  18 *_R=          BNG   6  TR5                 [J. IF TRANSFER FILLED.  
  18 B2=W          SBNC  7  2                   [J. IF BLOCK FILLED UP.  
   8 B2QG          BCS      TR5  
  20 B3=6          BNZ   5  XTR5                [J. UNLESS CLEAN FINISH REQUIRED.
   4 B3PQ    #   
  16 B49B    TR5   CALL  4  TREND               [GET NEXT BUFFER.
  17 B4P2    XTR5  LDX   0  QUAL(1)             [ARE WE NUMBERING?   
  18 B58L          LDX   5  IWORK12(1)          [LINE PRINTER WIDTH + 1. 
   7 B5N=          ANDN  0  2
   7 B67W          SLL   0  2
  20 B6MG          ADN   0  5                   [INSET NEXT LINE 4 CHARS., OR 12 
  19 B776          SBX   5  0                   [CHARS. IF WE ARE NUMBERING. 
  21 B7LQ          BXL   5  IWORK17(1),YCONT    [J. IF WE CAN'T GET THE REST ON 1 LIN
  21 B86B          LDX   5  IWORK17(1)          [GET THE CONTINUATION REMAINDER COUNT
  20 B8L2          STOZ     IWORK17(1)          [CLEAR THE CONTINUATION MARKER.  
  21 B95L          BCT   0  YLP2                [X0 := 4(OR 12) : CT. OF SPACES INSET
   4 B9K=    #   
  21 B=4W    YCONT SBN   5  4                   [ALLOW ANOTHER FOUR CHARACTERS FOR   
  21 B=JG          SBS   5  IWORK17(1)          [CONTINUATION HYPHEN. SET NEW CONTINU
  21 B?46          BCT   0  YLP2                [X0 := CT. OF SPACES FOR INSET.[COUNT
   4 B?HQ    #   
   4 B#3B    #   
  20 B#H2    NEXT4 BCT   5  TP5                 [J. UNLESS END OF RECORD REACHED.
   4 B*2L    #   
   4 B*G=    #   
  10 B*SM ...TP6   LDXC  0  IWORK17(1)   
  10 BB74 ...      ADXC  0  IWORK17(1)   
   8 BBFG          BNZ   0  XLP2 
  21 BB_6          SMO      FX1                 [OTHERWISE INSERT NEWLINE AND RUNOUT 
  16 BCDQ          LDN   1  PF1+1               [BETWEEN RECORDS.
   7 BCYB          MVCH  1  4
  18 BDD2          SBNC  6  4                   [STEP DOWN TRANSFER COUNT
   8 BDXL          BCS      TR4  
  16 BFC=          SBNC  7  2                   [AND BLOCK COUNT.
   8 BFWW          BCC      XTR4 
  21 BGBG    TR4   LDX   1  FX2                 [STEP ON TO NEXT BUFFER IF NECCESSARY
   8 BGW6          CALL  4  TREND
   4 BH*Q    #   
  18 BHTB    XTR4  SMO      FX1                 [INSERT TWO MORE RUNOUTS.
   8 BJ*2          LDN   1  SNULL
   7 BJSL          MVCH  1  4
   7 BK#=          SBN   6  4
   8 BKRW          LDX   1  FX2  
   8 BKW5 ...      CALL  4  YTSPL
   8 BKY# ...      BZE  0  NSPL1 
   9 BL2H ...      LDX  0  BITS22LS  
  10 BL4Q ...      ANDS  0  IWORK17(1)   
   8 BL6_ ...      BRN      TR4A 
   5 BL98 ...NSPL1   
   8 BL?G          BNG   6  TR4A 
  20 BLR6          SBNC  7  2                   [J. UNLESS REACHED END OF BUFFER.
   8 BM=Q          BCC      XLP2 
  20 BMQB    TR4A  STOZ     IWORK15(1)          [FORCE CLEAN FINISH IF HAVE TO   
  18 BN=2          BRN      XLP2                [STEP ON TO NEXT BUFFER. 
   4 BNPL    #   
   4 BP9=    #   
   4 BPNW    #   
  18 BQ8G    ZCONT BZE   0  XCONT               [J. IF SPACE COUNT ZERO  
   7 BQN6          LDX   4  7
   7 BQS3 ...#SKI  ALTEBCC   
   8 BQXY ...      SBNC  4  72   
   8 BR3T ...#SKI  ALTEBCC<1$1   
   8 BR7Q          SBNC  4  78   
  21 BRMB          BCS      XCONT               [J. IF NOT JUST STARTING NEW BLOCK   
  15 BS72          LDX   3  AWORK2(1)          [PTR TO ALIST 
  17 BSLL          STO   6  GEN0               [SAVE 6BIT CHAR COUNT 
   8 BT6= ...      CALL  6  SPL19
  17 BTKW          BRN      VV                 [J IF NOT 1901A RJE LP
  15 BW5G          BRN      XCONTV             [1901A RJE LP 
  17 BWK6    VV    STO   2  GEN2                [SAVE OUTPUT POINTER.
   7 BX4Q          LDX   2  1
  20 BXJB          CALL  4  SETCL               [RESET THE CLEAN FINISH COUNT.   
  17 BY42          LDX   4  INTLK3(3)           [CURRENT BUFFER NO.  
  17 BYHL          LDX   2  GEN2                [& OUTPUT POINTER.   
   7 B_3=          SBNC  4  1
   8 B_GW          BCC      NEXZ2
  10 C22G          LDN   4  ALFBUFFNUM-1 
  20 C2G6    NEXZ2 LDX   0  GSIGN               [SET THE 'CLEAN FINISHED' MARKER 
  17 C2_Q          SMO      4                   [IN THE LAST BUFFER  
   9 C3FB          ORS   0  INTLK2(3)
  16 C3_2    XCONTV                          [DC3 EVERY PAGE ONLY
   8 C4DL          LDX   6  GEN0 
  20 C4Y=    XCONT LDX   4  IWORK16(1)          [IF NEXT LINE WILL BE ON NEW PAGE
  21 C5CW          BNZ   4  XLP2                [FORCE CLEAN FINISH BY SETTING CLEAN 
  19 C5XG          STOZ     IWORK15(1)          [FINISH COUNT DOWN TO ZERO.  
   4 C6C6    #   
   4 C6WQ    #   
   7 C7BB    XLP2  LDN   0  1
  17 C7W2          LDXC  4  NLI(1)              [J. IF ^ALL^ LISTING.
   8 C8*L          BCS      YALL 
  21 C8T=          SBN   4  1                   [STEP DOWN THE NUMBER OF RECORDS LEFT
   9 C9#W          STO   4  NLI(1)   
  18 C9SG    YALL  LDX   3  AWORK2(1)           [POINTER TO ALIST BLOCK. 
   9 C=#6          STO   2  AWORK3(1)
  21 C=RQ          ADS   0  NUM(1)              [ADD 1 TO THE CURRENT RECORD NUMBER. 
  21 C??B          SBS   3  AWORK3(1)           [RELATIVE POINTER TO POSITION IN BUFF
  17 C?R2          BZE   4  YCF4                [J IF END OF LISTING.
  19 C#=L          SBSC  0  IWORK15(1)          [J. IF TIME FOR CLEAN FINISH.
   8 C#Q=          BCS      YCF3 
   4 C*9W    #   
   9 C*PG          LDXC  0  IWORK5(1)
   9 CB96          BCC      QSTEPC   
   8 CBNQ          BRN      YCF3 
   5 CC8B    QSTEPC  
   4 CCN2    #   
  21 CD7L          QSTEPC   ,YCOOR              [STEP, OR J. IF STEP IS GOING TO COOR
  20 CDM=          STO   3  ACOMMUNE3(2)        [SAVE RECORD POINTER, OR ZERO.   
  18 CF6W          BNZ   3  NEXT2               [J. IF NOT END OF FILE.  
   4 CFLG    #   
  21 CG66          LDX   3  AWORK2(2)           [RESET THE BLOCK AND BUFFER WORDS.   
   9 CGKQ ...RSTVN LDX   2  AWORK3(2)
  20 CH5B          LDN   4  0                   [MARKER TO SHOW END OF LISTING.  
   7 CHK2          ADX   2  3
   8 CJ4L          BRN      YCF4 
   4 CJJ=    #   
   4 CK3W    #   
  21 DHS=    YCOOR LDX   3  AWORK2(2)           [RESET POINTERS TO ALIST BLOCK AND   
  18 DJ?W          LDX   2  AWORK3(2)           [POSITION WITHIN BUFFER. 
   7 DJRG          ADX   2  3
   8 DK82 ...#SKI  ALTEBCC<1$1   
  20 DKJG ...YCF3  SBN   7  78                  [J UNLESS NO DATA YET IN BUFFER  
   7 DK_2 ...#SKI  ALTEBCC   
  20 DL*G ...YCF3  SBN   7  72                  [J UNLESS NO DATA YET IN BUFFER  
  21 DLQ2          LDX   6  INTLK3(3)           [ GET POINTER TO BUFFER'S RED TAPE WO
  21 DM9L          BNZ   7  SUMMT               [= 0 IF START OF BUFFER (ALSO MONFILE
  21 DMP=          SBNC  6  1                   [WHERE ALL RECORDS ARE WRONG CATEGORY
  20 DN8W          BCC      NEXZ1               [OR PERHAPS FOR TAPE PUNCH FILE. 
  21 DNNG          LDN   6  ALFBUFFNUM-1        [STEP BACK BUFFER POINTER TO REWRITE 
  15 DP86    NEXZ1 STO   6  INTLK3(3)           [THIS BUFFER.
   8 DPMQ          BRN      NOWT 
   8 DQ7B    SUMMT LDX   1  GSIGN
  18 DQM2          SMO      6                   [MARK BUFFER AS FILLED   
   9 DR6L          ORS   1  INTLK(3) 
  15 DRL=          SMO      6                   [AND ^CLEAN^.
   9 DS5W          ORS   1  INTLK2(3)
  19 DSKG          CALL  0  SBACK               [MOVE IN ETB TO END BLOCK.   
  20 DT56          SBN   0  #74                 [(OVERWRITE LAST CHAR. DEPOSITED 
  17 DTJQ          BPZ   0  TRED2               [ IF IT WAS A SHIFT).
   7 DW4B          BCHX  2  /
  19 DWJ2    TRED2 ADN   1  ETXBUFF(3)          [MOVE IN #7635 (#7620 IF TP) 
   8 DX3L ...      CALL  6  SPL19
  18 DXH=          BRN      XCTP                [J IF NOT 1901A RJE LP   
   8 DY4? ...      BPZ   0  NMSPL
   8 DY5N ...      SMO       FX2 
   9 DY75 ...      LDXC  0  AWORK1   
   8 DY8G ...      BCC      XCLPT
   8 DY9X ...      LDCT  0  #600 
   8 DY?# ...      SMO      FX2  
   9 DY#P ...      ANDX  0  IWORK17  
   8 DYB6 ...      BNZ   0  XCTPQ
   8 DYCH ...      BRN      XCLPT
   5 DYDY ...NMSPL   
   8 DYGG          SMO      FX2  
   9 D_26          LDX   0  IWORK16  
  17 D_FQ          BNZ   0  XCTPQ               [J IF NOT END OF PAGE
  16 D__B    XCLPT LDN   0  3                   [WILL BECOME DC3 
   8 F26J ...#SKI  ALTEBCC<1$1   
   4 F2?Q ...(   
   7 F2F2          MVCH  1  6
   7 F2YL          SLC   2  2
   7 F3D=          SBN   2  3
   7 F3XW          SRC   2  2
   8 F4CG          DCH   0  0(2) 
   4 F4DF ...)   
   7 F4FD ...#SKI  ALTEBCC   
   4 F4GC ...(   
  17 F4HB ...      MVCH  1  4                   [CR DC3 INTO BUFFER  
   7 F4J* ...      SLC   2  2
   7 F4K# ...      SBN   2  1
   7 F4L? ...      SRC   2  2
   8 F4M= ...      DCH   0  0(2) 
   7 F4MP ...      BCHX  2  /
   8 F4N9 ...      SMO      FX2  
  17 F4P8 ...      STO   1  ACOMMUNE1           [SAVE ETXBUFF POINTER
  20 F4Q7 ...      CALL  4  SBC                 [WORK OUT BCC AND STORE IN BUFFER
   8 F4R6 ...      SMO      FX2  
  16 F4S5 ...      LDX   1  ACOMMUNE1           [RESTORE POINTER 
  16 F4T4 ...      MVCH  1  2                   [ETX IN BUFFER   
   4 F4W3 ...)   
   8 F4X6          BRN      NOWT 
  18 F5BQ    XCTPQ LDX   0  GSIGN          [UNSSET CLEAN FINISH MARKER   
   9 F5WB          SMO      INTLK3(3)
   9 F6B2          ERS   0  INTLK2(3)
   7 F6TL    XCTP  MVCH  1  2
  21 F7*=          ORX   1  GSIGN               [MOVE IN #7623 ETX (PLAIN ETB SEEMS  
   7 F7B_ ...#SKI  ALTEBCC   
   4 F7DN ...(   
   8 F7GC ...      SMO      FX2  
   9 F7J6 ...      STO   1  ACOMMUNE1
  19 F7KT ...      CALL  4  SBC                 [GET BCC AND PUT IN BUFFER   
   8 F7MJ ...      SMO      FX2  
   9 F7P? ...      LDX   1  ACOMMUNE1
   4 F7R2 ...)   
  21 F7SW          MVCH  1  2                   [TO UPSET THE LINE PRINTER SOMETIMES)
  21 F8#G    NOWT  CALL  6  WAKUP               [KICK THE PCT ACTIVITY IF DORMANT.   
  20 F8S6          LDN   6  0                   [SET MARKER SO WE DON'T REFLIP   
   7 F9?Q ...      LDN   4  1
   8 F9RB ...      BRN      NEXT1
   4 F=?2 ...#   
  21 F=QL ...YEND  ACROSS   RMTLFEND,1          [TO CLEAR UP END OF FILE WITH ERROR  
   4 F?== ...#   
  16 F?PW ...YCF4  ACROSS   RMTLFEND,2          [END OF LISTING  
   4 FSSQ    #   
   4 FT#B    #END
   8 ____ ...23760367000400000000
