   4 22_=    #   
   7 23DW    #OPT  K0PMFILE=0
  11 23YG    #LIS  K0PMFILE>K0POST>K0ALLGEO  
   4 24XQ    #   
  16 25CB ...#SEG  PMFILE84                     [KAREL KOSKUBA   
   4 25X2    #   
  20 26BL    #     THIS SEGMENT GIVES LISTINGS OF THE CONTENTS OF THE FILE CHAIN 
   4 26W=    #   
   9 27*W                   8HPMFILE 
   2 27TG
   9 28*6    #     ENTRY POINT TABLE 
   4 28SQ    #   
  10 29#B ... SEGENTRY K1PMFILE,XK1PMFILE
  10 29S2 ... SEGENTRY K2PMFILE,XK2PMFILE
   4 2?=W    #   
  16 2?QG    #     JJFILE AND JREDTAPE ARE ONLY TEMPERARY NAMES  
   9 2#=6          FIXTRA   JJFILE   
  19 2#PQ                   +JFILE              [OPTIONALLY SET BLOCK LENGTH 
  17 2BN=    NAMEA          37HERROR IN MONITORING FILE BLOCK FORMAT 
  19 2C7W    NAMEB          45HBLOCKS ON FILE CHAIN OPEN TO CURRENT ACTIVITY 
  11 2CMG    NAMEC          15HBREAK IN CHAIN
   9 2D76    NAMED          6H: NONE 
  12 2DLQ    NAMEE          16HBACKWARD RINGING  
  13 2F6B    NAMEF          22HPOINTER TO FCB ILLEGAL
  13 2FL2    NAMEG          19HBREAK IN FILE CHAIN   
  10 2G5L    NAMEH          9HFCB BLOCK  
  11 2GK=    NAMEI          12HFSTACK BLOCK  
  13 2H4W    NAMEJ          22HFSTACK BLOCK CORRUPTED
  13 2HJG    NAMEK          22HADDRESS OF CPAT BLOCK:
   9 2J46    NAMEL          6HJOBNO: 
   9 2JHQ    NAMEM          7HACTNUM:
  11 2K3B    NAMEN          13HWORKFILE RING 
  15 2KH2    NAMEO          30HWORKFILES ASSOCIATED WITH JOBS
  12 2L2L    NAMEP          18HBREAK IN ACTRING -
  14 2LG=    NAMEQ          24HBREAK IN WORKFILE RING -  
   9 2L_W    NAMER          7H: EMPTY
  12 2MFG    NAMES          18HFILERING CORRUPTED
  21 2M_6    XBLCOUNT       +0                  [COUNT OF BLOCKS IN ROW TO BE PRINTED
  21 2NDQ                                       [IN ROUTINE PRINT (ALSO ROUT. PRBLOCK
  18 2NYB    XBACKPR        +0                  [USED BY SEARCH ROUTINES 
  21 2PD2                                       [ALSO IN K2-ADDR OF ACTRING BACKWARD 
  14 2PXL                                       [POINTER 
  18 2QC=    RBACKPR        +0                  [USED BY RSEARCH ROUTINES
  21 2QWW    MCOUNT         +0                  [USED BY PRMON ROUT. AS COUNT WORD   
   8 2RBG    TWENTY         +20  
   8 2RW6    TWENTY5        +25  
  21 2S*Q    SAFR           +0                  [K1-TO HOLD START ADDR. OF FILERING  
  21 2STB                                       [K2-TO HOLD START ADDR. OF WORKFILE  
  14 2T*2                                       [   RING 
  20 2TSL    MONIND         +0                  [IND. SET IF MONITORING/JD FILE  
  21 2W#=    RELE           +0                  [TO HOLD ADDR OF CURRENT RING ELEMENT
  19 2WRW    RBACK          +0                  [SET WHEN BACKWARD RINGING   
   9 2X?G    MASK           #17777777
   8 2XR6    THREE          +3   
  14 2Y=Q    PMFILEND       +ZPMFILE+1      [END OF SEG+1
  18 2YQB    STACTRING      +BACT+ACTRING       [START ADDRESS OF ACTRING
  20 2_PL    XFSPNTR        +0                  [TO HOLD ADDR. OF FSTACK BLOCK   
  18 329=    XIND           +0                  [USED IN K2-WORKFILE RING
  19 32NW                                       [SET=0 WHEN FORWARD RINGING  
  19 338G                                       [   =1 WHEN BACKWARD RINGING 
  20 33N6                                       [   =2 WHEN 'BACKWARD RINGING'   
  19 347Q                                       [      HEADING TO BE PRINTED 
  18 34MB                                       [   =- WHEN END OF RING  
   8 3572    X128           +128 
   8 35LL    X45            +45  
   8 366=    XA1            +A1  
   9 36KW    XFCB           +FILE+FCB
  10 36TN ...XFINDEXF       +FI+FINDEXF  
   9 375G    XBFILE         +BFILE   
   4 37K6    #   
  20 384Q    #     TABLE OF TYPE/SUBTYPES OF BLOCKS TO BE PRINTED IN FILESTORE PM
   6 38JB    #     FORMAT
   4 3942    #   
   5 39HL    XTABLE  
  10 3=3=    XFURB          +FILE+FURB   
  10 3=GW    XFUWB          +FILE+FUWB   
   7 3?2G    #SKI  INSA&INSB 
   4 3?G6    (   
  10 3?_Q                   +FI+INSERT1  
  10 3#FB                   +FI+INSERT2  
  10 3#_2                   +FI+INSERT3  
  10 3*DL                   +FI+INSERT4  
  10 3*Y=                   +FI+INSERT5  
   4 3BCW    )   
   9 3BXG    XTABLEND       +XTABLEND
   4 3CC6    #   
  10 3CWQ    XSTACK         +FILE+FSTACK 
  10 3DBB    XCPAT          +CPAT/#100   
   8 3DW2    XACT           #60  
   8 3F*L    X512           +512 
   8 3FT=    X513           +513 
  20 3G#W    PRINTING       +0                  [USE BY PRINT ROUTINE TO INDICATE
  18 3GSG                                       [STILL PRINTING BLOCKS   
   9 3H#6    UPARROW        4H____   
   9 3HRQ    MONFILE        4HB1B0   
   9 3J?B    XJDFILE        4HB5B1   
  12 3JR2    NOTLISTED      16H0NOT LISTED 0000  
   8 3K=L ...ZLPMT          +0   
  20 3MNQ    ZLINKA         +0                  [TO HOLD LINK ADDRS. OF ROUTINES 
  12 3N8B    ZLINKC         +0                  [
  15 3NN2 ...UNE            +0                  [ TO HOLD X1 
  15 3P7L ...XFOUR          +0                  [ TO HOLD X4 
   9 3PM=    MNEMON         4HWORK   
   8 3Q6W    ROWCNT         +0   
   4 3R66    #   
  14 3RKQ    #     TABLE OF JUMPS TO CONVERSION ROUTINES 
   4 3S5B    #   
   8 3SK2    RTNS  BRN      ROCT 
   8 3T4L          BRN      RCHA 
   8 3TJ=          BRN      RDECS
   8 3W3W          BRN      RDECP
   9 3WHG          BRN      RDECDEC  
   4 3X36    #   
  13 3XGQ    #     TABLE OF START ADDRESSES OF BLOCKS
   4 3Y2B    #   
   4 3YG2    TAB 
   5 3Y_L    #REP  6 
   5 3_F=          +0
   4 3_YW    #   
  18 42DG    #     TABLE GIVING LENGTHS TO BE PRINTED FROM BLOCKS IN TAB 
   4 42Y6    #   
   4 43CQ    TABL
   5 43XB    #REP  6 
   5 44C2          +0
   4 44WL    #   
  20 45B=    #     TABLE GIVING POSITION OF NEXT WORD TO PRINT FROM BLOCKS IN TAB
   4 45TW    #   
   4 46*G    TABC
   5 46T6    #REP  6 
   5 47#Q          +0
   4 47SB    #   
  21 48#2    #     TABLE CONTAINING IDENTITY BLOCK TABLE POINTERS FOR EACH BLK IN TAB
   4 48RL    #   
   4 49?=    TABI
   5 49QW    #REP  6 
   5 4==G          +0
   4 4=Q6    #   
  16 4?9Q    #DEF  ZTABL=TABL                   [DEFINED SO TABLE
  17 4?PB    #DEF  ZTABC=ZTABL+7                [AREAS CAN BE USED   
  17 4#92    #DEF  ZTABI=ZTABC+7                [BY PRBLOCK ROUTINE  
  17 4#NL    #DEF  ZCOUNT=ZTABI+1               [AND PRMON ROUTINE   
   4 4*8=    #   
  19 4*MW    #     ROUTINE TO GET ADDRESS OF NEXT BLOCK IN CHAIN WHEN FORWARD
   7 4B7G    #     CHAINING  
  13 4BM6    #     ENTRY  X2=ADDRESS OF CURRENT BLOCK
  17 4C6Q    #     EXIT 0 &  IF FORWARD AND BACKWARD POINTERS CORRECT
  13 4CLB    #         X2,X3=ADDRESS OF NEXT BLOCK   
   8 4D62    #            X0=LINK
  14 4DKL    #     EXIT 0 0  IF BREAK IN CHAIN DETECTED  
  13 4F5=    #            X3=ADDRESS OF NEXT BLOCK   
  16 4FJW    #     (SEARCHA:ENTRY POINT FOR FIRST BLOCK ON CHAIN 
   4 4G4G    #   
   5 4GJ6    SEARCH  
  17 4H3Q          LDX   3  BPTR(2)             [J IF BPTR IN CURRENT
  16 4HHB ...      TXU   3  XBACKPR(1)          [BLOCK INCORRECT 
   8 4J32          BCS      S1   
   5 4JGL    SEARCHA 
  19 4K2= ...      STO   2  XBACKPR(1)          [STORE ADD. OF CURRENT BLOCK 
  18 4KFW          LDX   3  FPTR(2)             [GET ADD. OF NEXT BLOCK  
   8 4K_G    S3    TXL   3  CORES
  15 4LF6          BCC      S1                  [J IF INVALID
  17 4LYQ ...      TXL   3  ENDFIX                [J IF ADDR. INVALID
   8 4MDB          BCC      S2   
   9 4MY2 ...      TXU   3   SAFR(1) 
   8 4NCL          BCS      S1X  
   7 4NX=    S2    LDX   2  3
   7 4PBW          EXIT  0  1
  10 4PWG ...S1X   TXU   3  STACTRING(1) 
   8 4QB6          BCC      S2   
   9 4QH# ...      TXU   3  XBFILE(1)
   8 4QNG ...      BCC      S2   
  16 4QTQ    S1    EXIT  0  0                   [BREAK IN CHAIN  
   4 4R*B    #   
  20 4RT2    #     ROUTINE TO GET ADDRESS OF NEXT BLOCK IN CHAIN, WHEN BACKWARD  
   7 4S#L    #     CHAINING  
  10 4SS=    #     ENTRY & EXIT AS SEARCH
  16 4T?W    #     (SEARCHC:ENTRY POINT FOR FIRST BLOCK ON CHAIN 
   4 4TRG    #   
   5 4W?6    SEARCHB 
  17 4WQQ          LDX   3  FPTR(2)             [J IF FPTR IN CURRENT
  16 4X=B ...      TXU   3  XBACKPR(1)          [BLOCK INCORRECT 
   8 4XQ2          BCS      S1   
   5 4Y9L    SEARCHC 
  19 4YP= ...      STO   2  XBACKPR(1)          [STORE ADD. OF CURRENT BLOCK 
  18 4_8W          LDX   3  BPTR(2)             [GET ADD. OF NEXT BLOCK  
   8 4_NG          BRN      S3   
   4 5286    #   
  21 52MQ    #     ROUTINE TO GET ADDR. OF NEXT RING ELEMENT WHEN FORWARD CHAINING   
  14 537B    #     ENTRY    X2=ADDR. OF CURRENT ELEMENT  
  16 53M2    #     EXIT 0 1 IF FORWARD & BACKWARD PNTRS CORRECT  
  13 546L    #           X2,X3=ADDR. OF NEXT BLOCK   
  14 54L=    #     EXIT 0 0 IF BREAK IN CHAIN DETECTED   
  13 555W    #              X3=ADDR. OF NEXT BLOCK   
  17 55KG    #     (RSEARCHA:ENTRY POINT FOR INITIAL ELEMENT ADDR.   
   4 5656    #   
   5 56JQ    RSEARCH 
   8 574B          LDX   3  1(2) 
  18 57J2 ...      TXU   3  RBACKPR(1)          [J IF BACKWARD PNTR. OF  
   8 583L          BCS      S1   
   5 58H=    RSEARCHA
  20 592W ...      STO   2  RBACKPR(1)          [STORE ADDR. OF CURRENT ELEMENT  
  17 59GG          LDX   3  0(2)                [GET ADDR. OF NEXT   
   8 5=26          BRN      S3   
   4 5=FQ    #   
  21 5=_B    #     ROUTINE TO GET ADDR. OF NEXT RING ELEMENT WHEN BACKWARD CHAINING  
  12 5?F2    #     ENTRY & EXIT AS FOR RSEARCH   
  17 5?YL    #     (RSEARCHC:ENTRY POINT FOR INITIAL ELEMENT ADDR.   
   4 5#D=    #   
   5 5#XW    RSEARCHB
  18 5*CG          LDX   3  0(2)                [J IF BACKWARD POINT OF  
  19 5*X6 ...      TXU   3  RBACKPR(1)          [CURRENT ELEMENT INCORRECT   
   8 5BBQ          BCS      S1   
   5 5BWB    RSEARCHC
  19 5CB2 ...      STO   2  RBACKPR(1)          [CURRENT RING ELEMENT ADDR.  
  18 5CTL          LDX   3  1(2)                [NEXT RING ELEMENT ADDR. 
   8 5D*=          BRN      S3   
   4 5DC8 ...#   
  16 5DF6 ...#              EXITS FOR ROUTINES PRMON AND PRBLOCK 
   4 5DH4 ...#   
   5 5DK2 ...ROUTEXIT
   9 5DLY ...      LDX   7  ZLINKA(1)
   7 5DNW ...      EXIT  7  0
   4 5DQS ...#   
   4 5DSW    #   
   4 5F#G    #   
  20 5FS6    #     ROUTINE TO PRINT CONTENTS OF A BLOCK IN MONITORING FILE PRINT 
   6 5G?Q    #     FORMAT
  13 5GRB    #     ENTRY    TAB=START ADDR. OF BLOCK 
   9 5H?2    #               X7=LINK 
  12 5HQL    #     EXIT X0,X1,X4,TAB=UNCHANGED   
  12 5J==    #          ALL OTHER ACCS UNDEFINED 
   4 5JPW    #   
   5 5K9G    PRMON   
  15 5KP6 ...      STO   7  ZLINKA(1)           [STORE LINK  
   9 5L8Q ...      LDX   2  TAB(1)   
  19 5LNB          ADN   2  A1                  [1ST WORD OF MONITORING FILE 
  18 5M82 ...      STOZ     MCOUNT(1)           [COUNT OF WORDS PRINTED  
   8 5MML    PRM   LDX   5  0(2) 
   9 5N7= ...      BZE  5  ROUTEXIT  
   8 5NLW ...      CALL  7  (JUP)
   8 5P6G                   +4   
   9 5PL6 ...      TXL   5  X513(1)  
  16 5Q5Q          BCC      PRM1                [J IF ILLEGAL NO.
  17 5QKB ...      CALL  7  (JDECN)               [CONVERT NO. TO DEC
   9 5R52 ...      LDX   5  MCOUNT(1)
   9 5RJL ...      TXL   5  X512(1)  
  20 5S4=          BCC      PRM1                [J IF MORE THAN 512 WORDS PRINTED
   8 5SHW          LDX   3  JOZ  
   8 5T3G          STO   3  JPMOD
  20 5TH6 ...      CALL  7  (JDECN)               [CONVERT NO. OF WORDS PRINTED  
   8 5W2Q ...      CALL  7  (JUP)
   8 5WGB                   +5   
  21 5X22          LDN   5  1(2)                [MOVE CONTENTS OF 2ND WORD OF RECORD 
  17 5XFL          MVCH  5  4                   [INTO PRINT BUFFER   
  16 5X_=          ADN   6  1                   [PR. BUF. MOD.   
  18 5YDW          LDX   3  0(2)                [NO. OF WORDS IN RECORD  
  18 5YYG          ADS   3  2                   [UPDATE MON. FILE PNTR   
  20 5_D6 ...      ADS   3  MCOUNT(1)           [UPDATE COUNT OF WORDS PRINTED   
  20 5_XQ          SBN   3  2                   [WORDS ALREADY SET UP IN PR. BUF.
   8 62CB          BPZ  3  PRM5  
   9 62X2 ...PRM6  CALL   7 (JPRINT1)
   8 63BL          BRN       PRM 
   8 63W=    PRM5   BZE  3   PRM6
  10 64*W ...PRM4  TXL   3  TWENTY5(1)   
  20 64TG          BCS      PRM2                [J IF LESS THAN 80 CHARS TO PRINT
  10 65*6 ...      SBX   3  TWENTY5(1)   
  19 65SQ ...      STO   3  ZTABL(1)            [NO. OF WORDS  STILL TO PRINT
  20 66#B ...      LDX   3  TWENTY5(1)          [SET TO PRINT 25 WORDS IN LINE   
  15 66S2    PRM2  SLL   3  2                   [CHAR. COUNT 
  21 67?L          MVCH  5  0(3)                [MOVE REST OF RECORD INTO PR. BUFFER 
  20 67R= ...      STO   5  ZTABL+1(1)          [POINTER TO NEXT CHAR. TO OUTPUT 
  16 68=W ...      CALL  7  (JPRINT1)             [PRINT A LINE  
  18 68QG ...      LDX   3  ZTABL(1)            [CHARS. STILL TO OUTPUT  
  19 69=6          BZE   3  PRM3                [J IF WHOLE RECORD NOW OUTPUT
   8 69PQ ...      CALL  7  (JUP)
   8 6=9B                   +20  
  15 6=P2 ...      LDX   5  ZTABL+1(1)          [NEXT CHAR.  
   9 6?8L ...      STOZ     ZTABL(1) 
   8 6?N=          BRN      PRM4 
  10 6#7W ...PRM3  STOZ     ZTABL+1(1)   
   8 6#MG          BRN      PRM  
  20 6*76 ...PRM1  LDN   5  NAMEA(1)            [MOVE ERROR MESSAGE INTO PR. BUF.
   8 6*LQ          LDX   6  JOZ  
   7 6B6B          ADN   6  1
   8 6BL2          MVCH  5  40   
  16 6C5L ...      CALL  7  (JPRINT2)             [PRINT A LINE  
   9 6CK= ...      LDX   7  MCOUNT(1)
   9 6D4W ...      TXL   7  X512(1)  
  21 6DJG ...      BCC      ROUTEXIT            [EXIT IF OVER 512 WORDS ALREADY OUTP.
  18 6F46          BRN      PRBLOCKA            [PRINT AS NORMAL BLOCK   
   4 6FHQ    #   
   4 6G3B    #   
  21 6GH2    #     ROUTINE TO PRINT CONTENTS OF BLOCK IN FILESTORE POSTMORTEM FORMAT 
  13 6H2L    #     ENTRY    TAB=START ADDR. OF BLOCK 
   9 6HG=    #               X7=LINK 
  12 6H_W    #     EXIT X0,X1,X4,TAB=UNCHANGED   
  12 6JFG    #          ALL OTHER ACCS UNDEFINED 
  17 6J_6    #         ZTABL(*7)=SET TO HOLD COLUMN ADDR. POINTERS   
  16 6KDQ    #         ZTABC(*7)=SET TO HOLD LENGTH OF EACH COL. 
  19 6KYB    #             ZTABI=SET TO HOLD LENGTH OF BLOCK STILL TO PRINT  
   4 6LD2    #   
  14 6LXL    #     CALCULATE NO. OF WORDS TO BE PRINTED  
   4 6MC=    #   
   4 6MWW    #   
   5 6NBG    PRBLOCK 
  15 6NW6 ...      STO   7  ZLINKA(1)           [STORE LINK  
   5 6P*Q    PRBLOCKA
  17 6PTB ...      LDX   2  TAB(1)              [START ADDR. OF BLOCK
  10 6Q*2          LDX   5  ALOGLEN(2)   
   9 6QSL ...      ANDX  5  MASK(1)  
   9 6R#= ...      TXL   5  X512(1)  
  18 6RRW          BCS      PRB7                [SET LENGTH TO PRINT =   
  18 6S?G ...PRB   LDX   5  X512(1)             [LENGTH OF BLOCK < 512   
  17 6SR6          ADN   2  A1                  [START ADDR. OF BLOCK
   4 6T=Q    #   
  12 6TQB    #     SET UP COLUMNS FOR PRINTING   
   4 6W=2    #   
  18 6WPL    PRB7  BZE   5  PRB9                [J IF NO MORE TO PRINT   
   8 6X9=          LDN   6  20   
   9 6XNW ...      STO   6  ZTABC(1) 
   9 6Y8G ...      LDN   6  ZTABC(1) 
  21 6YN6 ...      LDN   7  ZTABC+1(1)          [SET UP TO PRINT 6 COLS*20 WORDS AND 
  20 6_7Q          MOVE  6  5                   [                1 COL *8  WORDS 
   7 6_MB          LDN   7  8
  10 7272 ...      STO   7  ZTABC+6(1)   
   9 72LL ...      STO   5  ZTABI(1) 
   7 736=          STO   5  6
   9 73KW ...      TXL   5  X128(1)  
  20 745G          BCS      PRB1                [SET AMOUNT TO PRINT FROM BLOCK  
   8 74K6          LDN   5  128  
  17 754Q ...      SBS   5  ZTABI(1)            [AMOUNT LEFT TO PRINT
  17 75JB          LDN   6  7                   [NO. OF COLS TO PRINT
   8 7642          BRN      PRB2 
  21 76HL ...PRB1  DVS   5  TWENTY(1)           [CALCULATE NO. OF COLUMNS TO PRINT   
  18 773= ...      STOZ     ZTABI(1)            [NO WORDS LEFT TO PRINT  
   7 77GW          SMO      6
  21 782G ...      STO   5  ZTABC(1)            [STORE LENGTH TO PRINT IN LAST COL   
   7 78G6          ADN   6  1
  17 78_Q ...PRB2  STO   6  ZCOUNT(1)           [NO. OF COLS TO PRINT
  15 79FB    PRB3  STOZ     3                   [COL. COUNT  
   8 79P8 ...PRB4  SMO      FXPM1
   9 79_2 ...      STO   2  ZTABL(3) 
   8 7=8S ...      SMO      FXPM1
  18 7=DL          ADX   2  ZTABC(3)            [STORE ADDR. OF START OF 
  15 7=Y=          ADN   3  1                   [EACH COLUMN 
   9 7?CW ...      TXU   3  ZCOUNT(1)
   8 7?XG          BCS      PRB4 
   4 7#C6    #   
   8 7#WQ    #     PRINT COLUMNS 
   4 7*BB    #   
  15 7*W2    PRB6  STOZ     2                   [BLOCK COUNT 
   8 7B*L ...PRB8  CALL  7  (JUP)
   8 7BT=                   +1   
   8 7C54 ...      SMO      FXPM1
  20 7C#W          LDX   3  ZTABL(2)            [GET ADDR. OF NEXT WORD TO PRINT 
   8 7CJN ...      SMO      FXPM1
  20 7CSG          LDX   5  ZTABC(2)            [GET NO. OF WORDS IN COL TO PRINT
  17 7D#6          BZE   5  PRB5                [J IF COL FINISHED   
   7 7DRQ          LDN   5  1
   8 7F3J ...      SMO      FXPM1
  16 7F?B          ADS   5  ZTABL(2)            [UPDATE POINTERS 
   8 7FH8 ...      SMO      FXPM1
  18 7FR2          SBS   5  ZTABC(2)            [AND NO. OF WORDS LEFT   
  18 7G=L          LDX   5  0(3)                [GET CONTENTS OF WORD AND
  17 7GQ= ...      CALL  7  (JOCT)                [CONVERT TO OCTAL  
   8 7H9W ...      CALL  7  (JUP)
   8 7HPG                   +1   
  18 7J96 ...      CALL  7  (JCHA)                [CONVERT TO CHARACTER  
   8 7JNQ ...      CALL  7  (JUP)
   8 7K8B                   +2   
   7 7KN2          ADN   2  1
  20 7L7L ...      TXU   2  ZCOUNT(1)           [TEST AND J IF STILL COLS IN ROW 
  16 7LM=          BCS      PRB8                [TO BE PRINTED   
  16 7M6W ...PRB5  CALL  7  (JPRINT1)             [PRINT A LINE  
   9 7MLG ...      LDX   7  ZTABC(1) 
  20 7N66          BNZ   7  PRB6                [J HF COLS. NOT PRHNTED HN FULL  
   9 7NKQ ...      CALL  7  (JPRINT1)
   9 7P5B ...      SMO      ZCOUNT(1)
  19 7PK2 ...      LDX   2  ZTABL-1(1)          [GET NEXT WORD TO BE PRINTED 
  19 7Q4L ...      LDX   5  ZTABI(1)            [NO. OF WORDS STILL TO PRINT 
   8 7QJ=          BRN      PRB7 
   4 7R3W    #   
  11 7RHG    #     IF BLOCK PRINT FINISHED   
   4 7S36    #   
   9 7SGQ ...PRB9  STOZ     TABL(1)  
  15 7T2B ...      LDN   5  TABL(1)             [SPACEFILL   
  15 7TG2 ...      LDN   6  TABL+1(1)           [TABLE AREA  
   8 7T_L          MOVE  5  17   
   9 7WF= ...      BRN      ROUTEXIT 
   4 7WYW    #   
   4 7XDG    #   
  13 7XY6    #     ROUTINE TO PRINT A ROW OF BLOCKS  
  14 7YCQ    #     ENTRY    XBLCOUNT=NO. OF BLOCKS IN ROW
  16 7YXB    #             TAB TABLE=HOLDS START ADDR  OF BLOCKS 
  10 7_C2    #                    X7=LINK
  11 7_WL    #     EXIT    ALL ACCS UNDEFINED
   4 82B=    #   
   5 82TW    PRINT   
   4 83*G    #   
  17 83T6    #     SET UP NO. OF WORDS IN EACH BLOCK TO BE PRINTED   
   4 84#Q    #   
   8 84SB ...      LDX   2  FXPM1
  18 85#2 ...PR1   LDX   3  TAB(2)              [GET ADDR. OF NEXT BLOCK 
  15 85RL          LDX   6  ALOGLEN(3)          [GET LENGTH  
   9 86?= ...      ANDX  6  MASK(1)  
   8 86QW          ADN   6  A1   
   9 87=G ...      TXL   6  JJFILE(1)
  19 87Q6          BCS      PR3                 [J IF LEN< MAX  TO BE PRINTED
   9 889Q          LDX   4  ATYPE(3) 
   8 88PB          SRL   4  12   
   9 893R ...      TXU   4  XFCB(1)  
   8 898_ ...      BCC      PR4  
  10 89B8 ...      TXU   4  XFINDEXF(1)  
  17 89NL          BCS      PR2                 [J IF BLOCK NOT FCB  
   9 8=8= ...PR4   TXL   6  X512(1)  
  16 8=MW          BCS      PR3                 [J IF LENGTH<512 
  19 8?7G ...      LDX   6  X512(1)             [OTHERWISE LOAD MAX. LENGTH  
   8 8?M6          BRN      PR3  
  17 8#2? ...PR2   LDX   6  JJFILE(1)           [LOAD MAXIMUM LENGTH 
  19 8#*D ...PR3   STO   6  TABL(2)             [STORE NO. OF WORDS TO PRINT 
   7 8#NK ...      ADN   2  1
   7 8*3Q ...      LDX   5  2
   8 8*BX ...      SBX   5  FXPM1
  16 8*Q4 ...      TXU   5  XBLCOUNT(1)         [J IF STILL MORE 
  16 8B5=          BCS      PR1                 [BLOCKS TO PRINT 
   4 8BJW    #   
  10 8C4G    #     CODING TO PRINT BLOCKS
   4 8CJ6    #   
   5 8D3Q    PRINTA  
  15 8DHB ...      STO   7  ZLINKC(1)           [STORE LINK  
  16 8F32 ...      CALL  7  (JPRINT1)             [THROW A LINE  
  16 8FGL ...PP3   LDX   1  FXPM1           [BLOCKCOUNT+MODIFIER 
  15 8G2=    PP2   LDX   5  TABC(1)             [WORD POINTER
  18 8GFW          TXL   5  TABL(1)             [NO. OF WORDS TO PRINT   
  17 8G_G          BCS      PP                  [J IF STILL PRINTING 
  19 8HF6 ...      CALL  7  (JUP)                 [UPDATE PRINT BUFFER MOD.  
   8 8HYQ                   +20  
   8 8JDB          BRN      PP11 
  19 8JY2 ...PP    CALL  7  (JUP)                 [UPDATE PRINT BUFFER MOD.  
   8 8KCL                   +2   
   7 8KX=          LDN   7  1
   8 8L74 ...      SMO      FXPM1
  18 8LBW          STO   7  PRINTING            ['STILL PRINTING' IND.   
  16 8LWG          BNZ   5  PP4                 [J IF NOT FPTR   
   4 8MB6    #   
  17 8MTQ    #     CODING TO PRINT ACTUAL ADDR. OF FORWARD POINTER   
   4 8N*B    #   
  17 8NT2          LDX   2  TAB(1)              [GET ADDR. OF BLOCK  
   9 8P#L          LDX   5  TAB(1)   
  17 8PS= ...      CALL  7  (JDECN)               [CONVERT TO DECIMAL
  18 8Q?W          LDN   3  3                   [CONVERSION ROUT. IND.   
   4 8QRG    #   
  17 8R?6    #     TO CONVERT CONTENTS OF A WORD IN SPECIFIED FORMAT 
   4 8RQQ    #   
  18 8S=B    PP1   LDX   5  0(2)                [GET CONTENTS OF ADDR.   
   7 8SQ2          SMO      3
  21 8T9L          CALL  7  RTNS                [J TO APPROPRIATE CONVERSION ROUTINE 
   4 8TP=    #   
  13 8W8W    #     TO UPDATE COUNTS,PRINT A LINE ETC.
   4 8WNG    #   
   7 8X86    PP11  LDN   7  1
  17 8XMQ          ADS   7  TABC(1)             [UPDATE WORD COUNT   
  17 8Y7B    PP17  ADN   1  1                   [UPDATE BLOCK COUNT  
   7 8Y*L ...      LDX   5  1
   8 8YHW ...      SBX   5  FXPM1
   8 8YQ6 ...      SMO      FXPM1
   9 8YYB ...      TXU   5  XBLCOUNT 
  18 8_6L          BCS      PP2                 [J IF STILL BLOCKS IN ROW
   8 8_L= ...      SMO      FXPM1
   9 92KG          LDX   7  PRINTING 
   9 9356          BZE   7  PRINTFIN 
  16 93JQ ...      CALL  7  (JPRINT1)             [PRINT A LINE  
   8 944B          BRN      PP12 
   5 94J2    PRINTFIN
  15 953L          LDX   7  JOZ                 [ RESET JPMOD
   8 95H=          STO   7  JPMOD
   8 962W ...      SMO      FXPM1
   8 99XW          STOZ     TABL 
   8 9=7N ...      SMO      FXPM1
   8 9=CG          LDN   6  TABL 
   8 9=M# ...      SMO      FXPM1
   9 9=X6          LDN   7  TABL+1   
  16 9?BQ          MOVE  6  17                  [ZEROISE TABLES  
   8 9?LJ ...      LDX   1  FXPM1
   9 9?WB ...      LDX   7  ZLINKC(1)
   7 9#68 ...      EXIT  7  0
   8 9#B2 ...PP12  SMO      FXPM1
   9 9#KS ...      STOZ     PRINTING 
   9 9#TL          LDN   7  ATYPE+1  
   9 9**=          TXU   7  TABC-1(1)
  19 9*SW          BCS      PP3                 [J IF LAST WORD NOT = ATYPE  
   7 9B#G          BRN      T
   4 9BS6    #   
   9 9C?Q    #     IF NOT PRINT FPTR 
   4 9CRB    #   
   8 9D5R ...PP4   SMO      FXPM1
   8 9DD8 ...      TXL   5  XA1  
  18 9DQL          BCC      PP13                [J IF NOT RED TAPE WORD  
   4 9F==    #   
  15 9FPW    #     TO SET UP TO PRINT IN REDTAPE WORD FORMAT 
   4 9G9G    #   
   9 9GP6          ADX   5  TABC(1)  
  19 9H4T ...      ADN   5  REDTAPE             [X5=POINTER TO REDTAPE TABLE 
   8 9HDJ ...      ADX   5  FXPM1
   4 9HNB    #   
  14 9J82    #     TO ANALYSE NEXT WORD IN IDENT. TABLE  
   4 9JML    #   
   7 9K7=    PP7   SMO      5
  18 9KLW          LDX   7  0                   [GET MNEMONIC FROM TABLE 
  16 9L6G          BZE   7  PP15                [J IF NO MNEMONIC
   8 9LB# ...      SMO      FXPM1
   9 9LL6          TXU   7  UPARROW  
  19 9M5Q          BCC      PP8                 [J IF END OF TABLE REACHED   
   7 9MKB          LDCH  6  7
   8 9N52          SRL   7  18   
   8 9NJL          SBN   7  #72  
  18 9P4=          BNZ   7  PP14                [J IF NOT RECURSIVE TABLE
   4 9PHW    #   
  20 9Q3G    #     TO BACKSPACE IDENT. TABLE POINTER WHEN END OF RECURSIVE TABLE 
   4 9QH6    #   
   7 9R2Q    PP10  SBN   5  2
   7 9RGB          SMO      5
  17 9S22          STOZ     0                   [CLEAR MNEMONIC ENTRY
   7 9SFL          SBN   6  2
  20 9S_=          BNZ   6  PP10                [J IF NOT AT START OF RECURSION  
   7 9TDW          ADN   5  2
  19 9TYG          STO   5  TABI(1)             [RESET IDENT. TABLE POINTER  
   4 9WD6    #   
  21 9WXQ    #     TO PRINT REOATIVE ADR. BEFORE PRINT CONTENTS IN SPECIFIED FORMAT  
   4 9XCB    #   
   9 9XX2    PP15  LDX   5  TABC(1)  
  21 9YBL ...      CALL  7  (JDECN)               [CONVERT RELATIVE ADR. TO DECIMAL  
   9 9YW=          LDX   5  TABI(1)  
  19 9_*W          SBN   5  1                   [GET POINTER TO PRINT FORMAT 
   8 9_TG          BRN      PP16 
   4 =2*6    #   
  21 =2SQ    #     TO PRINT ADDR. AND CONTENTS TO FORMAT SPECIFIED IN AN IDENT /OR   
   8 =3#B    #     REDTAPE) TABLE
   4 =3S2    #   
   8 =4?L ...PP14  CALL  7  (JUP)
   8 =4R=                   +2   
  20 =5=W          MVCH  5  5                   [MOVE IDENT MNEMONICS INTO BUFFER
   8 =5QG          STO   6  JPMOD
   7 =6=6    PP16  SMO      5
   7 =6PQ          LDCH  3  0
   9 =79B    PP9   LDX   2  TAB(1)   
  20 =7P2          ADX   2  TABC(1)             [X2=ADDR. OF WORD TO BE CONVERTED
   8 =88L          BRN      PP1  
   4 =8N=    #   
  10 =97W    #     IF NOT A RED TAPE WORD
   4 =9MG    #   
   9 ==76    PP13  LDX   5  TABI(1)  
  17 ==LQ          BZE   5  PP8                 [J IF NO IDENT. LIST 
   7 =?6B          LDN   7  2
  19 =?L2          ADS   7  TABI(1)             [UPDATE IDENT. TABLE POINTER 
   8 =#5L          BRN      PP7  
   4 =#K=    #   
  14 =*4W    #     IF NO SPECIFIED PRINT FORMAT FOR WORD 
   4 =*JG    #   
  18 =B46    PP8   STOZ     TABI(1)             [STOZ WHEN BRN FROM PP7  
  21 =BHQ    PP6   LDX   5  TABC(1)             [GET ADDR. RELATIVE TO START OF BLOCK
  19 =C3B ...      CALL  7  (JDECN)               [CONVERT ADDR. TO DEC(N)   
  19 =CH2          STOZ     3                   [CONVERT CONTENTS TO OCTAL   
   8 =D2L          BRN      PP9  
   4 =DG=    #   
  18 =D_W    #     CODING TO CONVERT CONTENTS OF ADDR. IN VARIOUS FORMATS
   4 =FFG    #   
   6 =F_6    #     OCTAL 
   4 =GDQ    #   
   8 =GYB ...ROCT  LDX   3  JOCT 
   8 =HD2 ...RN    CALL  7  (JUP)
   8 =HXL                   +2   
   8 =JC=          CALL  7  (3)  
   8 =JWW          BRN      PP11 
   4 =KBG    #   
   7 =KW6    #     CHARACTERS
   4 =L*Q    #   
   8 =LTB ...RCHA  CALL  7  (JUP)
   8 =M*2                   +7   
   9 =MSL ...      CALL  7  (JCHA)   
   8 =N#=          BRN      PP11 
   4 =NRW    #   
   8 =P?G    #     DECIMAL(+N)   
   4 =PR6    #   
   8 =Q=Q ...RDECS CALL  7  (JUP)
   8 =QQB                   +3   
   9 =R=2 ...      CALL  7  (JDECS)  
   8 =RPL          BRN      PP11 
   4 =S9=    #   
   8 =SNW    #     DECIMAL(N.N)  
   4 =T8G    #   
   8 =TN6 ...RDECP LDX   3  JDECP
   8 =W7Q          BRN      RN   
   4 =WMB    #   
   8 =X72    #     DECIMAL(N/N)  
   4 =XLL    #   
   5 =Y6=    RDECDEC 
   8 =YKW ...      CALL  7  (JUP)
   8 =_5G                   +4   
   9 =_K6 ...      CALL  7  (JDECDEC)
   8 ?24Q          BRN      PP11 
   4 ?2JB    #   
  21 ?342    #     CODING TO GET AND INSERT TYPE AND SUBTYPE MNEMONICS IN LISTING AND
  13 ?3HL    #     SET UP TABLES OF BLOCK IDENTIFIERS
   4 ?43=    #   
   4 ?4GW    T   
   4 ?52G    #   
  13 ?5G6    #     READ DOWN TYPE AND SUBTYPE TABLES 
   4 ?5_Q    #   
   8 ?6*F ...      LDX   1  FXPM1
  12 ?6P8 ...      PMOVE    PMTYPES,PMFILEND(1)  
   8 ?74X ...      LDX   1  FXPM1
   4 ?7DL    #   
  21 ?7Y=    #     MOVE TYPE MNEMONICS INTO PRINT BUFFER & SET UP POINTER TO SUBTYPE 
   4 ?8CW    #   
   8 ?8XG ...T1    CALL  7  (JUP)
   8 ?9C6                   +6   
   9 ?9WQ          LDX   3  TAB(1)   
  16 ?=BB          LDCH  2  ATYPE(3)            [GET BLOCK TYPE  
   8 ?=L8 ...      SMO      FXPM1
   8 ?=W2          MPY   2  THREE
   8 ??5S ...      SMO      FXPM1
  18 ??*L          ADX   3  PMFILEND            [ADDR. OF TYPE MNEMONIC  
   8 ??T=          LDX   4  JPMOD
  21 ?##W          MVCH  3  8                   [MOVE TYPE MNEMONIC INTO PR. BUFFER  
   8 ?#SG          LDX   7  0(3) 
  18 ?*#6          STO   7  TABI(1)             [STORE SUBTYPE REFERENCE 
   8 ?*RQ ...      CALL  7  (JUP)
   8 ?B?B                   +14  
   7 ?BR2          ADN   1  1
   7 ?B_= ...      LDX   7  1
   8 ?C7G ...      SBX   7  FXPM1
   8 ?C*Q ...      SMO      FXPM1
  18 ?CJ2 ...      TXU   7  XBLCOUNT            [J IF MORE BLOCKS IN ROW 
   8 ?CQ=          BCS      T1   
  16 ?D9W ...      CALL  7  (JPRINT1)             [PRINT A LINE  
   4 ?DPG    #   
  18 ?F96    #     TO GET SUBTYPE MNEMONIC & B/S ADDR. OF IDENT TABLES   
   4 ?FNQ    #   
   8 ?G5= ...      LDX   1  FXPM1
  11 ?GFQ ...      PMSUBSREAD  PMFILEND(1)   
   8 ?GW= ...      LDX   1  FXPM1
   8 ?H=Q ...      CALL  7  (JUP)
   8 ?HM=                   +2   
   9 ?J6W    T6    LDXC  4  TABI(1)  
  20 ?JLG          BCS      T3                  [J IF NO SUBTYPE BUT IDENT. TABLE
  15 ?K66          BZE   4  T3                  [J IF NEITHER
   7 ?KKQ          STOZ     3
  18 ?L5B          SRC   34 12                  [X4=LENGTH OF S/F ENTRIES
  19 ?LK2          SRL   3  12                  [X3=ADDR. RELATIVE TO PMTYPES
   8 ?LSS ...      SMO      FXPM1
  20 ?M5X ...      ADX   3  PMFILEND            [X3=START OF THE SUBTYPE TABLES  
   8 ?MC3 ...      SMO      FXPM1
   8 ?MPD ...      SBX   3  ZLPMT
   9 ?N3W          LDX   2  TAB(1)   
   7 ?NHG          BCHX  2  /
  17 ?P36          LDCH  7  ATYPE(2)            [GET SUBTYPE OF BLOCK
  19 ?PGQ    T5    LDCH  6  0(3)                [GET SUBTYPE FROM TABLE ENTRY
   7 ?Q2B          TXU   6  7
  17 ?QG2          BCC      T4                  [J IF REQUIRED ENTRY 
   7 ?Q_L ...      ADN   3  3
  17 ?RF= ...      SBN   4  3                   [SEARCH DOWN TABLE   
   8 ?RYW          BNZ   4  T5   
   4 ?S2S ...#   
  14 ?S4Q ...#      TO MOVE 'NOT LISTED' INTO THE BUFFER 
   4 ?S6N ...#   
   8 ?S8N ...      SMO      FXPM1
  17 ?SDG          LDN   3  NOTLISTED           [IF ENTRY NOT FOUND  
  21 ?SY6 ...      BCHX  3  /                    [X3 POINTS TO THE 1ST CHAR OF 'NOT L
   8 ?TCQ ...      CALL  7  (JUP)
  20 ?TXB ...               +4                   [4 SPACES BEFORE TYPE OR SUBTYPE
   8 ?WC2          LDX   4  JPMOD
  19 ?WWL ...      MVCH  3  11                   [MOVE NOT LISTED INTO BUFFER
   8 ?XB=          LDX   4  0(3) 
   8 ?XTW ...      CALL  7  (JUP)
  20 ?Y*G ...               +16                 [NO OF CHAR POS. TO UPDATE BUFFER
   8 ?YT6          BRN      T2   
   4 ?YW# ...#   
  15 ?YXG ...#      TO MOVE SUBTYPE MNEMONIC INTO THE BUFFER 
   4 ?YYN ...#   
  21 ?Y_W ...T4    BCHX  3  /                    [X3 POINTS TO THE 1ST CHAR OF SUBTYP
   8 ?_34 ...      CALL  7  (JUP)
   8 ?_4= ...               +4   
   8 ?_5D ...      LDX   4  JPMOD
  21 ?_6L ...      MVCH  3  7                    [MOVE SUBTYPE MNEMONIC INTO BUFFER  
   8 ?_7S ...      LDX   4  0(3) 
   8 ?_92 ...      CALL  7  (JUP)
   8 ?_=8 ...               +16  
   8 ?_?B ...      BRN      T2   
  20 ?_#Q ...T3    CALL  7  (JUP)                 [UPDATE PRINT BUFFER MOD. IF NO
  14 ?_SB                   +20                 [SUBTYPE 
  19 #2#2    T2    STO   4  TABI(1)             [STORE IDENT. TABLE REFERENCE
   7 #2RL          ADN   1  1
   7 #2_W ...      LDX   7  1
   8 #386 ...      SBX   7  FXPM1
   8 #3BB ...      SMO      FXPM1
   9 #3JL ...      TXU   7  XBLCOUNT 
  18 #3QW          BCS      T6                  [J IF STILL BLOCKS IN ROW
  16 #4=G ...      CALL  7  (JPRINT1)             [PRINT A LINE  
   4 #4Q6    #   
  13 #59Q    #     CODING TO READ DOWN IDENT. TABLES 
   4 #5PB    #   
   8 #692 ...      LDX   1  FXPM1
  17 #6NL ...      LDX   4  PMFILEND(1)         [START ADDR IN CORE  
  17 #78=    T11   LDX   6  TABI(1)             [B/S ADDR. OF TABLE  
  16 #7MW          BZE   6  T10                 [J IF NO TABLE   
  14 #87G          LDN   0  JREP2+1             [LENGTH  
   8 #8=L ...      SMO      FXPM1
   8 #8*Q ...      STO   4  XFOUR
   8 #8DW ...      SMO      FXPM1
   8 #8J2 ...      STO   1  UNE  
  16 #8M6 ...      PMBSADD  GEO,0,0,4,6         [ READ DOWN TABLE
   8 #8Q= ...      SMO      FXPM1
   8 #8TB ...      LDX   4  XFOUR
   8 #8YG ...      SMO      FXPM1
   8 #93L ...      LDX   1  UNE  
  19 #9H= ...      STO   4  TABI(1)             [IDENT. TABLE ADDRESS IN CORE
  19 #=2W ...      ADN   4  JREP2+1           [CORE ADDRESS OF NEXT TRANSFER 
   7 #=KL    T10   ADN   1  1
   7 #=RW ...      LDX   7  1
   8 #?26 ...      SBX   7  FXPM1
   8 #?8B ...      SMO      FXPM1
   9 #?BL ...      TXU   7  XBLCOUNT 
  18 #?JW          BCS      T11                 [J IF STILL BLOCKS IN ROW
   8 ##4G          BRN      PP3  
   4 ##J6    #   
  21 #*3Q    #     ENTRY POINT TO PRINT BLOCKS IN FILE CHAIN OPEN TO CURRENT ACTIVITY
   4 #*HB    #   
   6 #*NJ ...XK1PMFILE   
   8 #*TQ ...      LDX   1  FXPM1
  10 #B2Y ...      ADS   1  PMFILEND(1)  
  10 #B5H ...      ADS   1  XTABLEND(1)  
  10 #B86 ...      PMDLGET  PMTYPES,,2   
   9 #B*# ...      STO   2  ZLPMT(1) 
   4 #BGL    #   
  13 #C2=    #     CODING TO ANALYSE CONTENTS OF FX2 
   4 #CFW    #   
  16 #C_G          LDX   2  FX2                 [CURRENT ACTIVITY
   9 #DF6 ...      ANDX  2  MASK(1)  
   8 #DYQ          TXL   2  CORES
  16 #FDB ...      BCC      (JPMSEG)              [J IF ILLEGAL  
   9 #FY2 ...      TXL   2  X45(1)   
  16 #GCL ...      BCS      (JPMSEG)              [J IF INVALID  
   9 #GX=          LDCH  7  ATYPE(2) 
   9 #HBW ...      TXL   7  XACT(1)  
  18 #HWG ...      BCS      (JPMSEG)              [J IF NOT AN ACTIVITY  
   9 #JB6          SBN   7  BAT/#100 
  19 #JTQ ...      BZE   7  (JPMSEG)              [J IF CURRENT ACT = BLANKET
   9 #K*B ...      LDN   6  NAMEB(1) 
   8 #KT2 ...      LDX   7  JOZ  
  20 #L#L          BCHX  7  /                   [MOVE HEADING INTO PRINT BUFFER  
   8 #LS=          MVCH  6  45   
   4 #M?W    #   
  14 #MRG    #     TEST IF ANY RING ELEMENTS ON FILERING 
   4 #N?6    #   
  10 #NQQ          LDN   2  FILERING(2)  
  17 #P=B ...      STO   2  SAFR(1)             [ADDR. OF FILERING   
   8 #PQ2          LDX   6  0(2) 
  20 #Q9L          TXU   6  2                   [DOES FILERING POINT TO ITSELF   
  14 #QP=          BCS      RE1                 [J IF NOT
   9 #R8W ...      LDN   6  NAMED(1) 
  20 #RNG          MVCH  6  6                   [INSERT ': NONE' IN PRINT BUFFER 
  16 #S86 ...      CALL  7  (JPRINT2)             [PRINT A LINE  
   9 #SMQ ...      BRN      (JPMSEG) 
   4 #T7B    #   
  13 #TM2    #     GET ADDRESS OF NEXT RING ELEMENT  
   4 #W6L    #   
  16 #WL= ...RE1   CALL  7  (JPRINT2)             [PRINT HEADING 
  19 #X5W ...      LDN   3  RSEARCHA(1)         [TO GET FIRST ELEMENT ON RING
   8 #XKG          BRN      RE2  
  18 #Y56 ...RE4   LDX   0  RBACK(1)            [BACKWARD RINGING IND.   
  10 #YJQ ...      LDN   3  RSEARCH(1)   
  17 #_4B          BZE   0  RE2                 [J IF FORWARD RINGING
  10 #_J2 ...      LDN   3  RSEARCHB(1)  
  20 *23L    RE2   CALL  0  (3)                 [GET ADDR. OF NEXT RING ELEMENT  
  17 *2H=          BRN      RE3                 [J IF BREAK IN RING  
  16 *32W ...      TXU   2  SAFR(1)             [J IF POINTS AT  
  16 *3GG ...      BCC      (JPMSEG)              [START OF RING 
   4 *426    #   
  12 *4FQ    #     TO PRINT FCB AND FSTACK BLOCKS
   4 *4_B    #   
  20 *5F2 ...RE5   STO   2  RELE(1)             [RECORD OF CURRENT RING ELEMENT  
  10 *5YL          ADX   2  FBACKPOINT(2)
   8 *6D=          TXL   2  CORES
  17 *6XW          BCC      RE6                 [J IF ILLEGAL ADDRESS
   9 *7CG ...      TXL   2  X45(1)   
  17 *7X6          BCS      RE6                 [J IF INVALID ADDRESS
  18 *8BQ ...      STO   2  TAB+1(1)            [ADDR. OF FSTACK BLOCK   
  10 *8WB ...      STO   2  XFSPNTR(1)   
   9 *9B2          LDX   6  ATYPE(2) 
   8 *9TL          SRL   6  12   
  14 *=*= ...      SBX   6  XSTACK(1)           [TEST AND
  15 *=SW ...      BNZ   6  RE8            [ J IF NOT FSTACK 
   7 *?#G ...      LDN   4  1
  19 *#RB          LDX   2  BPTR(2)             [GET ADDR. OF PREVIOUS BLOCK 
   8 **?2          TXL   2  CORES
  17 **QL          BCS      RC1                 [J IF VALID ADDRESS  
   9 *B== ...RC7   LDN   6  NAMEF(1) 
   8 *BPW          LDX   7  JOZ  
   7 *C9G          ADN   7  1
   8 *CP6          MVCH  6  22   
  20 *D8Q ...      CALL  7  (JPRINT2)             [PRINT 'POINTER TO FCB ILLEGAL'
   9 *DNB ...      LDX   2  TAB+1(1) 
   9 *F82 ...      STO   2  TAB(1)   
   7 *FML ...      STOZ     4
   8 *G7=          BRN      RC8  
   9 *GLW ...RC1   TXL   2  X45(1)   
   8 *H6G          BCS      RC7  
  20 *HL6 ...      STO   2  TAB(1)              [STORE ADDR. 1ST BLOCK TO PRINT  
   9 *J5Q ...      STOZ     MONIND(1)
   9 *JKB          LDX   2  FLAN(2)  
  17 *K52 ...      TXU   2  MONFILE(1)          [J IF MONITORING FILE
   8 *KJL          BCC      RC9  
  10 *L4= ...      TXU   2  XJDFILE(1)   
  20 *LHW          BCS      RC11                [J IF NOT JOB DESCRIPTION FILE   
  20 *M3G ...RC9   STO   2  MONIND(1)           [SET IND. TO PRINT FURB/FUWB IN  
  18 *MH6                                       [MONITORING FILE FORMAT  
   8 *N2Q ...RC11  CALL  7  (JUP)
   8 *NGB                   +7   
   9 *P22 ...      LDN   5  NAMEH(1) 
  19 *PFL          MVCH  5  9                   ['FCB BLOCK' TO PRINT BUFFER 
   8 *P_= ...      CALL  7  (JUP)
   8 *QDW                   +13  
   8 *QYG ...RC8   CALL  7  (JUP)
   8 *RD6                   +7   
   9 *RXQ ...      LDN   5  NAMEI(1) 
  20 *SCB          MVCH  5  12                  ['FSTACK BLOCK' TO PRINT BUFFER  
  17 *SX2 ...      CALL  7  (JPRINT2)             [PRINT SUB-HEADING 
   7 *TBL ...      ADN   4  1
  18 *TW= ...      STO   4  XBLCOUNT(1)         [COUNT OF BLOCKS TO PRINT
  19 *W*W          CALL  7  PRINT               [PRINT FCB AND FSTACK BLOCKS 
  16 *WTG ...      LDX   6  XFSPNTR(1)          [TEST AND J IF   
  18 *X*6          BZE   6  RE8                 [BLOCK TYPE NOT FSTACK   
   4 *XSQ    #   
  12 *Y#B    #     TO PRINT FURB AND FUWB BLOCKS 
   4 *YS2    #   
  10 *_?L ...      LDN   3  SEARCHA(1)   
   8 *_R=          BRN      RC6  
   9 B27Q ...RC5   LDN   3  SEARCH(1)
  10 B2J= ...RC6   LDX   2  XBLCOUNT(1)  
   8 B2YQ ...      SMO      FXPM1
  19 B3*= ...      LDX   2  TAB-1(2)            [ADDR. OF LAST BLOCK PRINTED 
  18 B3PQ          CALL  0  (3)                 [GET ADDR. OF NEXT BLOCK 
  17 B49B          BRN      RC2                 [J IF BREAK IN CHAIN 
  17 B4P2 ...      TXU   2  XFSPNTR(1)          [J IF LOOPED BACK TO 
  15 B58L          BCC      RC2                 [FSTACK BLOCK
   9 B5N= ...      TXU   2  XBFILE(1)
  17 B67W          BCC      RC3                 [J IF END OF CHAIN   
   9 B6MG          LDX   7  ATYPE(2) 
  15 B776          SRL   7  12                  [TYPE/SUBTYPE
   9 B7LQ ...      TXU   7  XFCB(1)  
  16 B86B          BCC      RC3                 [J IF FCB BLOCK  
   9 B8L2 ...      LDN   3  XTABLE(1)
   8 B95L    RC13  TXU   7  0(3) 
  19 B9K=          BCC      RC10                [J IF BLOCK TO BE PRINTED IN 
  17 B=4W          ADN   3  1                   [FILESTORE PM FORMAT 
  10 B=JG ...      TXU   3  XTABLEND(1)  
   8 B?46          BCS      RC13 
   9 B?HQ ...      STO   2  TAB(1)   
   7 B#3B ...      LDN   4  1
  18 B#H2 ...      STO   4  XBLCOUNT(1)         [PRINT AS NORMAL BLOCK   
  17 B*2L          CALL  7  PRINT               [IF NOT FUWB OR FURB 
   8 B*G=          BRN      RC5  
  16 B*_W ...RC10  STO   2  TAB(1)              [ADDR. OF BLOCK  
   7 BBFG ...      LDN   4  1
  18 BB_6 ...      STO   4  XBLCOUNT(1)         [NO. OF BLOCKS TO PRINT  
   8 BCDQ          LDN   7  A1   
   9 BCYB ...      STO   7  TABL(1)  
  17 BDD2          CALL  7  PRINTA              [PRINT RED TAPE WORDS
  16 BDXL ...      CALL  7  (JPRINT1)             [THROW A LINE  
  10 BFC= ...      LDN   3  PRBLOCK(1)   
   9 BFWW ...      LDX   7  MONIND(1)
  18 BGBG          BZE   7  RC4                 [J IF NOT MONITORING FILE
   9 BGW6 ...      LDN   3  PRMON(1) 
  15 BH*Q    RC4   CALL  7  (3)                 [PRINT BLOCK 
   8 BHTB          BRN      RC5  
   4 BJ*2    #   
  13 BJSL    #     IF BREAK IN FILERING ENCOUNTERED  
   4 BK#=    #   
   9 BKRW ...RE3   LDX   0  RBACK(1) 
  20 BL?G ...      BNZ   0  (JPMSEG)              [J IF ALREADY BACKWARD RINGING 
   7 BLR6          LDN   0  1
  14 BM=Q ...      STO   0  RBACK(1)            [SET IND.
   9 BMQB ...      LDN   6  NAMEE(1) 
   8 BN=2          LDX   7  JOZ  
   7 BNPL          ADN   7  1
   8 BP9=          MVCH  6  16   
  19 BPNW ...      CALL  7  (JPRINT2)             [PRINT 'BACKWARD RINGING   
   9 BQ8G ...      CALL  7  (JPRINT1)
  20 BQN6 ...      LDX   2  SAFR(1)             [START READING BACKWARD DOWN RING
  10 BR7Q ...      LDN   3  RSEARCHC(1)  
   8 BRMB          BRN      RE2  
   4 BS72    #   
  16 BSLL    #     IF FILERING CORRUPTED,I.E. NOT FSTACK BLOCK   
   4 BT6= ...#   
   9 BTKW ...RE8   LDN   5  NAMES(1) 
   8 BW5G          LDX   6  JOZ  
   7 BWK6          ADN   6  1
  18 BX4Q          MVCH  5  18                  [PRINT FILERING CORRUPTED
   9 BXJB ...      CALL  7  (JPRINT2)
   7 BY42          BRN   RE3 
   4 BYHL    #   
  16 B_3=    #     IF RELATIVE POINTER IN RING ELEMENT CORRUPTED 
   4 B_GW ...#   
   9 C22G ...RE6   LDN   5  NAMEJ(1) 
   8 C2G6          LDX   6  JOZ  
   7 C2_Q          ADN   6  1
  20 C3FB          MVCH  5  22                  [PRINT 'FSTACK BLOCK CORRUPTED'  
   8 C3_2          BRN      RC12 
   4 C4DL    #   
  13 C4Y=    #     IF BREAK IN FILECHAIN ENCOUNTERED 
   4 C5CW ...#   
   9 C5XG ...RC2   LDN   6  NAMEG(1) 
   8 C6C6          LDX   7  JOZ  
   7 C6WQ          ADN   7  1
   8 C7BB          MVCH  6  19   
  20 C7W2 ...RC12  CALL  7  (JPRINT2)             [PRINT 'BREAK IN FILE CHAIN'   
   9 C8*L ...      CALL  7  (JPRINT1)
  20 C8T= ...RC3   LDX   2  RELE(1)             [GET ADDR. CURRENT RING ELEMENT  
   8 C9#W          BRN      RE4  
   4 C9SG    #   
  18 C=#6    #     ENTRY POINT TO PRINT WORKFILES ASSOCIATED WITH JOBS   
   4 C=GS ...#   
   6 C=PG ...XK2PMFILE   
   8 C=Y8 ...      LDX   1  FXPM1
  10 C?6W ...      ADS   1  PMFILEND(1)  
  10 C?=9 ...      ADS   1  XTABLEND(1)  
  10 C?*J ...      PMDLGET  PMTYPES,,2   
   9 C?J= ...      STO   2  ZLPMT(1) 
   4 C?R2    #   
   8 C#=L    #     PRINT HEADING 
   4 C#Q=    #   
   9 C*9W ...      CALL  7  (JPRINT2)
   9 C*PG ...      LDN   5  NAMEO(1) 
   8 CB96          LDX   6  JOZ  
   7 CBNQ          BCHX  6  /
  15 CC8B          MVCH  5  30                  [SET UP AND  
  16 CCN2 ...      CALL  7  (JPRINT2)             [PRINT HEADING 
   4 CD7L    #   
  12 CDM=    #     GET ADDR OF NEXT ACTRING ENTRY
   4 CF6W    #   
  10 CFLG ...      LDX   2  STACTRING(1) 
  19 CG66 ...      LDN   3  RSEARCHA(1)         [TO GET FIRST ENTRY ON RING  
   8 CGKQ          BRN      WFA1 
  19 CH5B ...WFA   LDN   3  RSEARCH(1)          [NEXT ENTRY FORWARD RINGING  
   9 CHK2 ...      LDX   7  RBACK(1) 
  17 CJ4L          BZE   7  WFA1                [J IF FORWARD RINGING
  19 CJJ= ...      LDN   3  RSEARCHB(1)         [NEXT ENTRY BACKWARD RINGING 
  16 CK3W    WFA1  CALL  0  (3)                 [GET NEXT ENTRY  
  17 CKHG          BRN      WFA10               [J IF BREAK IN RING  
  10 CL36 ...      TXU   2  STACTRING(1) 
  17 CLGQ ...      BCC      (JPMSEG)              [J IF END OF RING  
   4 CM2B    #   
  13 CMG2    #     CHECK IF BLOCK ON RING=CPAT BLOCK 
   4 CM_L    #   
   9 CNF=          SBN   3  ACTRING  
   9 CNYW          LDCH  7  ATYPE(3) 
   9 CPDG ...      TXU   7  XCPAT(1) 
  18 CPY6          BCS      WFA                 [J IF NOT A CPAT BLOCK   
   4 CQCQ    #   
  13 CQXB    #     PRINT INFORMATION ON CPAT BLOCK   
   4 CRC2    #   
  19 CRWL ...      STO   2  RELE(1)             [KEEP CURRENT ACTRING ADDR.  
   7 CSB=          LDX   2  3
  18 CSTW ...      LDX   7  RBACKPR(1)          [AND RECORD OF PREVIOUS  
  16 CT*G ...      STO   7  XBACKPR(1)          [ENTRY ON RING   
   9 CTT6 ...      LDN   5  NAMEK(1) 
   8 CW#Q          LDX   6  JOZ  
   7 CWSB          BCHX  6  /
  21 CX#2          MVCH  5  22                  [MOVE 'ADDRESS OF CPAT BLOCK:' SUB-  
  19 CXRL          STO   6  JPMOD               [HEADING INTO PRINT BUFFER   
  21 CY?=          LDX   5  2                   [CONVERT ADDRESS OF CPAT BLOCK TO DEC
   9 CYQW ...      CALL  7  (JDECN)  
  16 C_=G ...      CALL  7  (JPRINT2)             [PRINT A LINE  
   8 C_Q6 ...      CALL  7  (JUP)
   8 D29Q                   +17  
   9 D2PB ...      LDN   5  NAMEL(1) 
  20 D392          MVCH  5  6                   [MOVE 'JOBNO' INTO PRINT BUFFER  
   8 D3NL          STO   6  JPMOD
   9 D48=          LDX   5  JOBNO(2) 
  18 D4MW ...      CALL  7  (JDECN)               [CONVERT JOBNUM TO DEC.
  16 D57G ...      CALL  7  (JPRINT1)             [PRINT A LINE  
   8 D5M6 ...      CALL  7  (JUP)
   8 D66Q                   +16  
  20 D6LB ...      LDN   5  NAMEM(1)            [MOVE 'ACTNUM:' INTO PRINT BUFFER
   7 D762          MVCH  5  7
   8 D7KL          STO   6  JPMOD
   9 D85=          LDX   5  ACTNUM(2)
  18 D8JW ...      CALL  7  (JDECN)               [CONVERT ACTNUM TO DEC.
  16 D94G ...      CALL  7  (JPRINT1)             [PRINT A LINE  
   8 D9J6 ...      CALL  7  (JUP)
   8 D=3Q                   +4   
   9 D=HB ...      LDN   5  NAMEN(1) 
  21 D?32          MVCH  5  13                  [MOVE 'WORKFILE RING' INTO PRINT BUF.
   4 D?GL    #   
  20 D#2=    #     GET ADDR. OF NEXT BLOCK ON WORKFILE RING AND STORE READY FOR  
   7 D#FW    #     PRINTING  
   4 D#_G    #   
  15 D*F6 ...      STOZ     XBLCOUNT(1)         [BLOCK COUNT 
  18 D*YQ ...      STOZ     XIND(1)             [FORWARD CHAINING IND.   
  10 DBDB          LDN   2  BWORKRING(2) 
  17 DBY2 ...      STO   2  SAFR(1)             [START ADDR. OF RING 
   8 DCCL          LDX   7  0(2) 
  14 DCX=          TXU   7  2                   [TEST AND
  18 DDBW          BCS      WF6                 [J IF ENTRY IN WORKRING  
  21 DDWG ...      LDN   5  NAMER(1)            [OTHERWISE ADD 'NONE' TO SUB-HEADING 
   7 DFB6          MVCH  5  7
  21 DFTQ ...WF6   CALL  7  (JPRINT2)             [PRINT 'WORKFILE RING' SUB HEADING 
  19 DG*B ...      LDN   3  RSEARCHA(1)         [TO GET FIRST ENTRY ON RING  
   8 DGT2          BRN      WF1  
  21 DH#L ...WF    LDN   3  RSEARCH(1)          [TO GET NEXT ENTRY, FORWARD RINGING  
   8 DHS=          LDX   7  XIND 
  18 DJ?W          BZE   7  WF1                 [J IF FORWARD CHAINING   
  21 DJRG ...      LDN   7  RSEARCHB(1)         [TO GET NEXT ENTRY, BACKWARD RINGING 
  16 DK?6    WF1   CALL  0  (3)                 [GET NEXT ENTRY  
  17 DKQQ          BRN      WF10                [J IF BREAK IN RING  
   9 DL=B ...      TXU   2  SAFR(1)  
  16 DLQ2          BCC      WF11                [J IF END OF RING
  10 DL_S ...      SMO      XBLCOUNT(1)  
  19 DM9L          STO   3  TAB(1)              [STORE START ADDR. OF BLOCK  
   7 DMH2 ...      LDN   4  6
   7 DMSB ...      LDN   5  1
  10 DN5Q ...      ADS   5  XBLCOUNT(1)  
  10 DNC6 ...      TXU   4  XBLCOUNT(1)  
  18 DNNG          BCS      WF                  [THROUGH IF 6 BLOCKS READ
   4 DP86    #   
   8 DPMQ    #     PRINT BLOCKS  
   4 DQ7B    #   
  10 DQM2 ...WF5   LDX   4  XBLCOUNT(1)  
  18 DR6L ...      BZE   4  WF2                 [ J IF NO BLOCKS TO PRINT
   8 DRL= ...      CALL  7  (JUP)
   8 DT56                    +3  
  10 DTJQ ...      LDX   5   ROWCNT(1)   
   8 DW4B          ADN   5   1   
  10 DWJ2 ...      STO   5   ROWCNT(1)   
   9 DX3L ...      CALL  7  (JDECN)  
   8 DXH= ...      CALL  7  (JUP)
   8 DY2W                    -8  
  10 DYGG ...      LDN   6   MNEMON(1)   
   9 D_26          LDX   7   JPMOD   
   8 D_FQ          MVCH  6   4   
   9 D__B ...      CALL  7  (JPRINT2)
  15 F2YL          CALL  7  PRINT               [PRINT BLOCKS
   4 F3D=    #   
  11 F3XW    #     PREPARE TO PRINT NEXT ROW 
   4 F4CG    #   
   9 F4X6 ...WF2   LDXC  7  XIND(1)  
  15 F5BQ          BCS      WF13                [END OF RING 
  17 F6B2 ...      BNZ   7  WF3                 [IF BACKWARD RINGING 
  10 F6TL ...WF4   SMO      XBLCOUNT(1)  
  16 F7*= ...      LDX   2  TAB-1(1)            [GET ADDR OF LAST
  10 F7K4 ...      STOZ     XBLCOUNT(1)  
   8 F7SW          BRN      WF   
   4 F8#G    #   
  10 F8S6    #     IF BACKWARD RINGING   
   4 F9?Q    #   
  20 F9RB    WF3   SBN   7  1                   [J IF 'BACKWARD  RINGING' ALREADY
  14 F=?2          BZE   7  WF4                 [PRINTED 
   9 F=QL ...      STO   7  XIND(1)  
   9 F?== ...      LDN   5  NAMEQ(1) 
   8 F?PW          LDX   6  JPMOD
   7 F#9G          BCHX  6  /
  16 F#P6          MVCH  5  24                  [MOVE 'BACKWARD  
  16 F*8Q ...      LDN   5  NAMEE(1)            [RINGING' HEADING
  17 F*NB          MVCH  5  16                  [INTO PRINT BUFFER   
   9 FB82 ...      CALL  7  (JPRINT2)
  16 FBML ...      LDX   2  SAFR(1)             [SET TO SEARCH BY
  16 FC7= ...      LDN   3  RSEARCHC(1)         [BACKWARD RINGING
  10 FCC4 ...      STOZ     XBLCOUNT(1)  
   8 FCLW          BRN      WF1  
   4 FD6G    #   
  14 FDL6    #     IF ALL BLOCKS ON WORKFILE RING PRINTED
   4 FF5Q    #   
  15 FFKB ...WF13  LDX   2  RELE(1)             [SET TO GET  
  18 FG52 ...      LDX   7  XBACKPR(1)          [NEXT ADDR. ON ACTRING   
  10 FGJL ...      STO   7  RBACKPR(1)   
   9 FH4= ...      CALL  7  (JPRINT2)
   9 FHHW ...      CALL  7  (JPRINT2)
   8 FJ3G          BRN      WFA  
   4 FJH6    #   
  17 FK2Q    #     BREAK IN WORKFILE RING AND END OF RING ENCOUNTERED
   4 FKGB    #   
   9 FL22 ...WF10  LDX   7  XIND(1)  
   7 FLFL          LDN   6  2
  21 FL_=          BZE   7  WF12                [J IF THIS IS FIRST BREAK ENCOUNTERED
  18 FMDW    WF11  LDCT  6  256                 [END OF CHAIN INDICATOR  
   9 FMYG ...WF12  STO   6  XIND(1)  
   8 FND6          BRN      WF5  
   4 FNXQ    #   
  12 FPCB    #     BREAK IN ACTRING ENCOUNTERED  
   4 FPX2    #   
  16 FQBL ...WFA10 LDX   7  RBACK(1)            [J IF THIS IS NOT
  19 FQW= ...      BNZ   7  (JPMSEG)              [THE 1ST BREAK ENCOUNTERED 
   7 FR*W          LDN   7  1
  18 FRTG ...      STO   7  RBACK(1)            [BACKWARD RINGING IND.   
   9 FS*6 ...      LDN   5  NAMEP(1) 
   8 FSSQ          LDX   6  JPMOD
   7 FT#B          BCHX  6  /
  16 FTS2          MVCH  5  18                  [SET UP 'BACKWARD
  16 FW?L ...      LDN   5  NAMEE(1)            [RINGING' HEADER 
   8 FWR=          MVCH  5  16   
   9 FX=W ...      CALL  7  (JPRINT2)
  18 FXQG ...      LDX   2  STACTRING(1)        [SET TO CONTINUE SEARCH  
  17 FY=6 ...      LDN   3  RSEARCHC(1)         [BY BACKWARD RINGING 
   8 FYPQ          BRN      WFA1 
   4 F_9B    #   
   5 F_?Q ...REDTAPE 
  10 F_B6 ...               8H00000000   
  10 F_DG ...               8HBPTR   3   
  10 F_GW ...               8HASIZE  3   
  10 F_K= ...               8HAFLAG  0   
  10 F_ML ...               8HATYPE  0   
  10 F_Q2 ...               8HBACK1  3   
  10 F_SB ...               8HBACK2  0   
  10 F_WQ ...               8HALOGL  3   
  10 F__6 ...               8HARGNO  0   
   9 G23G ...               4H____   
   4 G25W ...#   
   4 G28L    #   
   5 G2N=    ZPMFILE 
   4 G37W    #   
   4 G3MG    #END
   8 ____ ...76446261001200000000
