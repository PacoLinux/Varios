   8 22FL    #OPT  K0DATECON=0   
  15 22_=    #LIS  K0DATECON>K0ALLGEO>K0GREATGEO>K0UTILITY   
  15 23DW    #SEG  DATECON37                    [R H TERRY   
   9 23YG                   8HDATECON
   4 24D6    #   
  20 24XQ    #     THIS SEGMENT CONTAINS CODE FOR THE DATECON,DATESET,CHADCON,   
   9 25CB    #     AND TIMECON MACROS
  14 25X2    #     THERE ARE THE FOLLOWING ENTRY POINTS:-
  17 26BL          SEGENTRY K1DATECON,ZEP1      [FROM DATECON MACRO  
  17 26W=          SEGENTRY K2DATECON,ZEP2      [FROM CHADCON MACRO  
  17 27*W          SEGENTRY K3DATECON,ZEP3      [FROM TIMESET MACRO  
  21 27TG          SEGENTRY K4DATECON,ZEP4      [FROM TIMECON MACRO - NO ZERO SUPRESN
  21 28*6          SEGENTRY K41DATECON,ZEP41    [FROM TIMECON MACRO - +  ZERO SUPRESN
  20 28JY ...      SEGENTRY K52DATECON,XCS4968A   [FROM ALLOWMIDN SPECIAL COMM   
  18 28NT ...      SEGENTRY K60DATECON,XZT      [FROM ZT SPECIAL COMMAND 
   4 28SQ    #   
  14 29#B    [LIST OF THE NUMBER OF DAYS IN EACH MONTH   
   4 29S2    [   
   8 2=?L    PDAYS          +0   
  14 2=R=    NDAYS          +31                 [JANUARY 
  19 2?=W                   -1                  [FEBRUARY-SPECIAL (28 OR 29) 
  14 2?QG                   +31                 [MARCH   
  14 2#=6                   +30                 [APRIL   
  13 2#PQ                   +31                 [MAY 
  13 2*9B                   +30                 [JUNE
  13 2*P2                   +31                 [JULY
  14 2B8L                   +31                 [AUGUST  
  15 2BN=                   +30                 [SEPTEMBER   
  14 2C7W                   +31                 [OCTOBER 
  14 2CMG                   +30                 [NOVEMBER
  14 2D76                   +31                 [DECEMBER
   4 2DLQ    [   
  15 2F6B    [LIST OF THREE CHARACTER NAMES FOR EACH MONTH   
   4 2FL2    [   
   9 2G5L    NAME           4HN JA   
   9 2GK=                   4HB FE   
   9 2H4W                   4HR MA   
   9 2HJG                   4HR AP   
   9 2J46                   4HY MA   
   9 2JHQ                   4HN JU   
   9 2K3B                   4HL JU   
   9 2KH2                   4HG AU   
   9 2L2L                   4HP SE   
   9 2LG=                   4HT OC   
   9 2L_W                   4HV NO   
   9 2MFG                   4HC DE   
   4 2M_6    [   
   9 2N8Y ...WRONGD         4H!!!!   
  19 2NDQ    TSFTF          +365*4+1            [DIVISION CONSTANT FOR YEARS 
  18 2NYB    YEARS          +73050              [DATES <2100 ALLOWED ONLY
  17 2PD2    TEN            +10                 [CONVERSION CONSTANT 
   8 2PXL    P66            +66  
   8 2QC=    TLM            +13  
   9 2QWW    XK9PERSEC      +1000/K9 
  11 2RBG    ONEDAY         +1000/K9*60*60*24
   4 2RW6    #   
   8 2S*Q    #DEF  SDAY=AWORK2   
   8 2STB    #DEF  SMTH=AWORK3   
   7 2T*2    #DEF  SYR=AWORK4
   4 2TSL    #   
  20 2W#=    #     MACRO DATECON ROUTINE. CONVERTS BINARY NUMBER OF DAYS SINCE   
  20 2WRW    #     31/12/1899, STORED IN ACOMMUNE7, TO A CHARACTER DATE IN FORMAT
  21 2X?G    #     'DDMMMYY'  AND STORES IT IN ACOMMUNE1 & 2 OF THE CURRENT ACTIVITY 
  21 2XR6    #     SPACES ARE STORED IF BINARY DATE IS ZERO, AND WE GEOERR IF IT IS  
  18 2Y=Q    #     > YEAR 2099. SEE GIM FOR EXPLANATION OF CALCULATION   
   4 2YQB    #   
  16 2_=2    ZEP1                               [DATECON ENTRY   
  18 2_PL          LDX   7  ACOMMUNE7(2)        [GET DATE TO BE CONVERTED
  20 329=          CALL  0  ZDATE               [CONVERT IT - RESULT IN ACOM1,2  
  15 32NW          UP                           [ AND RETURN 
   4 338G    #   
  21 33N6    #     MACRO CHADCON ROUTINE. CONVERTS CHARACTER DATE STORED IN 1ST CPB/C
  21 347Q    #     IN 'DD/MM/YY' FORMAT TO BINARY NUMBER OF DAYS SINCE 1/1/1900. ONLY
  21 34MB    #     BETWEEN 1/1/66 AND 31/12/2065 ARE CONVERTED. RESULT IS STORED IN E
  14 3572    #     THE FORMAT 'DDMMMYY' IS ALSO CONVERTED
  16 35LL    #     IF ERROR EXITS WITH UP, ELSE EXITS UPPLUS 1.  
   4 366=    #   
  16 36KW    ZEP2                               [CHADCON ENTRY   
  10 375G          MHUNT    3,CPB,CUNI   
   9 37K6          NGX   6  ANUM(3)  
  21 384Q          BPZ   6  PERR                [ERROR IF CUNI NULL OR NON-EXISTENT  
   9 38JB          LDEX  6  ANUM(3)  
  18 3942          ADN   3  APARA               [X3-> ACTUAL PARAMETER   
  16 39HL          CALL  7  NUMBER              [CONVERT DD PART 
   9 3=3=          STO   5  SDAY(2)  
   8 3=GW          CALL  7  SLASH
  18 3?2G          BRN      ZMMM                [J IF NEXT CHAR NOT '/'  
  16 3?G6          CALL  7  NUMBER              [CONVERT MM PART 
   9 3?_Q          STO   5  SMTH(2)  
   8 3#FB          CALL  7  SLASH
  19 3#_2          BRN      PERR                [ERROR IF NEXT CHAR NOT '/'  
   8 3*DL          BRN      ZYR  
  21 3*Y=    ZMMM  CALL  7  ZMNTH               [IF NOT 'DD/MM/YY' SHOULD BE 'DDMMMYY
  16 3BCW          STO   5  SMTH(2)             [CONVERT MMM PART
  16 3BXG    ZYR   CALL  7  NUMBER              [CONVERT YY PART 
   9 3CC6          STO   5  SYR(2)   
  17 3CWQ          BNZ   6  PERR                [ERROR IF MORE CHARS 
   8 3DBB          LDX   1  FX1  
   9 3DW2          LDX   3  SMTH(2)  
  17 3F*L          BXGE  3  TLM(1),PERR         [ERROR IF MONTH > 13 
  14 3FT=          BZE   3  PERR                [ OR = 0 
  14 3G#W          LDX   0  SYR(2)              [GET YEAR
   7 3GSG          ANDN  0  3
  16 3H#6          LDN   4  28                  [NORMAL FEBRUARY 
  17 3HRQ          BNZ   0  NLP                 [J IF NOT LEAP YEAR  
   8 3J?B          LDN   4  29   
  18 3JR2    NLP   SMO      3                   [GET NO OF DAYS IN MONTH 
  10 3K=L          LDX   0  NDAYS-1(1)   
  17 3KQ=          BPZ   0  ZNFB                [J IF NOT FEBRUARY   
   7 3L9W          LDX   0  4
  21 3LPG    ZNFB  BXL   0  SDAY(2),PERR        [ERROR IF NOT ENOUGH DAYS IN MONTH   
  16 3M96          LDX   5  SYR(2)              [TEST YEAR < 2000
   9 3MNQ          TXL   5  P66(1)   
  13 3N8B          BCC      NOT2000             [YES 
  16 3NN2          ADN   5  100                 [ADD 100 YEARS   
   5 3P7L    NOT2000 
  17 3PM=          MPY   5  TSFTF(1)            [MPY YRS BY 365*4+1  
  15 3Q6W          SRL   6  2                   [DIVIDE  BY 4
  18 3QLG          ADX   6  SDAY(2)             [ADD IN DAYS THIS MONTH  
   9 3R66          LDN   0  PDAYS(1) 
  20 3RKQ          SUM   7  0(3)                [TOTAL DAYS IN PREVIOUS MONTHS   
  17 3S5B                                       [ - EXCEPT FEBRUARY !
   7 3SK2          SBN   3  3
  20 3T4L          BNG   3  NFEBI               [J IF FEBRUARY ENTRY NOT INCLUDED
  20 3TJ=          ADX   7  4                   [ELSE COMPENSATE FOR THE -1 THERE
   7 3W3W          ADN   7  1
  21 3WHG    NFEBI SBN   4  28                  [IF LEAP YEAR,ALLOW FOR 1900 NOT BEIN
  18 3X36          SBX   7  4                   [ ONE-I.E.SUBTRACT 1 DAY 
  17 3XGQ          ADX   6  7                   [FORM REQUIRED TOTAL 
  15 3Y2B          STO   6  EXEC1(2)            [STORE RESULT
  10 3YG2    #SKI  K6DATECON>9999-9999   
  10 3Y_L          TRACE    6,CHADCONR   
  13 3_F=          UPPLUS   1                   [OK  
  15 3_YW    PERR  UP                           [ERROR EXIT  
   4 42DG    #   
  20 42Y6    #     THIS PART IS ENTERED BY THE TIMECON MACRO TO CONVERT THE TIME 
  21 43CQ    #     SPECIFIED (IN K9'S SINCE MIDNIGHT ) TO CHARACTERS, IN THE FORMAT  
   7 43XB    #     'HH.MM.SS'
   4 44C2    #   
  19 44WL    ZEP4           [TIMECON ENTRY IF ZERO SUPPRESSION NOT REQUIRED  
  18 45B=          LDX   5  ACOMMUNE7(2)        [GET TIME TO BE CONVERTED
  20 45TW          CALL  0  ZTIME               [CONVERT IT - RESULT TO ACOM1,2  
  15 46*G          UP                           [ AND RETURN 
   4 46T6    #   
  18 47#Q    ZEP41          [TIMECON ENTRY IF ZERO SUPPRESSION REQUIRED  
  18 47SB          LDX   5  ACOMMUNE7(2)        [GET TIME TO BE CONVERTED
  20 48#2          CALL  0  ZTIMEZS             [CONVERT IT - RESULT TO ACOM1,2  
  15 48RL          UP                           [ AND RETURN 
   4 49?=    #   
  21 49QW    # THIS PART IS ENTERED FROM THE TIMESET MACRO TO UPDATE THE FIXED CORE  
  19 4==G    # CHARACTER FORM 'TIME NOW' AND 'DATE NOW' (IF NECESSARY) WORDS 
   4 4=Q6    #   
  16 4?9Q    ZEP3                               [TIMESET ENTRY   
   7 4?PB          LDN   6  0
   9 4#92          LDX   5  CLEANCT  
  18 4#NL          BXL   5  ONEDAY(1),NOTMN     [J IF NOT YET MIDNIGHT   
  10 4#PM ...      SEGENTRY K50DATECON   
  19 4#QN ...      BRN      NOTSPEC             [SWITCH OFF CS4968 SPECIAL   
  10 4#RD ...      LDX   0  XCS4968(1)   
  18 4#S8 ...      BZE   0  SPEC               [J IF EVERYDAY IS SPECIAL 
  10 4#SY ...      BXU   0  FDATE,NOTSPEC
   8 4#TR ...      LDCT  0  #770 
   9 4#WS ...      ANDX  0  FDATE+1  
  18 4#XT ...      BXU   0  XCS4968+1(1),NOTSPEC [J IF NOT SPECIAL DAY   
   4 4#Y* ...SPEC
  21 4#YW ...      JBSC     NOTSPEC,,CS4968BIT   [J IF ALLOWMIDN ISSUED & CLEAR BIT  
  18 4#_X ...      STOZ     GEN4                 [ENSURE DATE NOT CHANGED
   9 4*2Y ...      BRN      NOTMIN   
  10 4*3_ ...      SEGENTRY K51DATECON   
   7 4*52 ...XCS4968     +0  
  21 4*63 ...            +0                      [FOR STORING THE DAY IN CHARACTERS  
   5 4*74 ...NOTSPEC 
   7 4*8=          LDN   6  1
   8 4*MW          ADS   6  EDATE
   9 4B7G          LDX   0  ONEDAY(1)
   9 4BM6          SBS   0  CLEANCT  
   8 4C6Q          SBS   0  JTIME
  20 4CLB    NOTMN STO   6  GEN4                [GEN4:= IF MIDNIGHT THEN 1 ELSE 0
   5 4CW8 ...NOTMIN  
   9 4D62          LDX   5  CLEANCT  
  15 4DKL          CALL  0  ZTIME               [CONVERT TIME
  10 4F5=          MPY   5  XK9PERSEC(1) 
  21 4FJW          STO   6  CLEANCTL            [DUMP VALUE OF CLEANCT AT HH.MM.00   
  10 4G4G          LDN   4  ACOMMUNE1(2) 
   8 4GJ6          LDN   5  FTIME
  18 4H3Q          MOVE  4  2                   [SET HH.MM.SS IN FTIME   
   9 4HHB          LDX   0  HALFTOP  
  18 4J32          ANDS  0  FTIME+1             [CHANGE IT TO HH.MM.00   
   8 4JGL          LDX   7  EDATE
   8 4K2=          LDX   0  FDATE
  20 4KFW          BZE   0  ZNODA               [J IF FDATE HASNT BEEN SET YET   
   8 4K_G          LDX   0  GEN4 
  20 4LF6          BZE   0  ZDATEOK             [J IF FDATE SET AND STILL VALID  
  21 4LYQ    ZNODA CALL  0  ZDATE               [ - UPDATE FIXED CORE CHARACTER DATE 
  10 4MDB          LDN   4  ACOMMUNE1(2) 
   8 4MY2          LDN   5  FDATE
   7 4NCL          MOVE  4  2
   5 4NX=    ZDATEOK 
  20 4PBW          LDX   7  GEN4                [X7 = IF MIDNIGHT THEN 1 ELSE 0  
  20 4PWG          ACROSS   CHARGESC,7          [RETURN TO UNIQUE CALL OF TIMESET
   4 4QB6    #   
   4 4QTQ    #   
   8 4R*B    #     SUBROUTINES   
   4 4RT2    #   
  21 4S#L    # ENTER X6=COUNT,X3->STRING .EXIT X5=NUMBER,X6,X3 UPDATED,X0,X4 DESTROYE
  14 4SS=    # J TO PERR IF COUNT ZERO OR NUMBER > 2CHARS
   5 4T?W    NUMBER  
   8 4TRG          BZE   6  PERR 
   7 4W?6          LDN   5  0
   7 4WQQ          LDN   0  2
   7 4X=B    ZNUM  SBN   0  1
   8 4XQ2          BNG   0  ZNUM1
   8 4Y9L          CDB   4  0(3) 
   8 4YP=          BCS      ZNUM1
   7 4_8W          BCHX  3  /
   8 4_NG          BCT   6  ZNUM 
   7 5286    ZNUM1 EXIT  7  0
   4 52MQ    #   
  20 537B    # ENTER X6=COUNT,X3->STRING (ASSUMED 3 CHARS). EXIT X5=MONTH NUMBER 
  21 53M2    # X6,X3 UPDATED ,X0,X1,X4 DESTROYED .IF COUNT < 3 OR MONTH UNRECOGNISED,
   6 546L    # J TO PERR 
   5 54L=    ZMNTH   
   7 555W          SBN   6  3
   8 55KG          BNG   6  PERR 
   7 5656          LDN   1  0
   7 56JQ          LDN   5  3
   8 574B          LDX   4  ACES 
  20 57J2    ZMN1  LDCH  0  0(3)                [GET MONTH IN CHAR POSN 1-3 OF X4
   8 583L          DCH   0  4(1) 
   7 58H=          BCHX  1  /
   7 592W          BCHX  3  /
   8 59GG          BCT   5  ZMN1 
  18 5=26          SRC   4  12                  [CONFORM TO TABLE ENTRIES
   8 5=FQ          LDN   5  12   
   8 5=_B          LDX   1  FX1  
   7 5?F2    ZMN2  SMO      5
  10 5?YL          BXE   4  NAME-1(1),(7)
   8 5#D=          BCT   5  ZMN2 
   8 5#XW          BRN      PERR 
   4 5*CG    #   
  21 5*X6    # ENTER X6=COUNT,X3-> STRING.IF COUNT=0, J TO PERR .IF NEXT CHAR IS '/' 
  21 5BBQ    # EXIT TO CALL+1 WITH X6,X3 UPDATED. OTHERWISE EXIT TO CALL WITH X6,X3  
   6 5BWB    # UNCHANGED 
   5 5CB2    SLASH   
   8 5CTL          BZE   6  PERR 
   8 5D*=          LDCH  0  0(3) 
   8 5DSW          SBN   0  #37  
   8 5F#G          BNZ   0  (7)  
   7 5FS6          BCHX  3  /
   7 5G?Q          SBN   6  1
   7 5GRB          EXIT  7  1
   4 5H?2    #   
  16 5HQL    # ENTER WITH X5=TIME TO BE CONVERTED,X1=FX1 & X2=FX2
  21 5J==    # EXIT WITH TIME (CHARACTERS) IN ACOMMUNE1,2 X1=FX1 X2=FX2,X5=NO OF SECS
  18 5JPW    # TO HH.MM.00 . OTHER ACCS AND GEN0-2 DESTROYED . LINK X0.  
   4 5K9G    #   
  19 5KP6    ZTIMEZS                            [ENTRY FOR ZERO SUPPRESSION  
   7 5L8Q          NGNC  7  1
  20 5LNB    ZTIME                              [ENTRY FOR NO ZERO SUPPRESSION   
   7 5M82          NGN   7  0
  15 5MML          STO   0  GEN0                [DUMP LINK   
  18 5N7=          STO   7  GEN1                [ZERO SUPPRESSION FLAG   
  10 5NLW          DVS   4  XK9PERSEC(1) 
  16 5P6G          STO   5  GEN2                [REMEMBER SECONDS
  16 5PL6          CALL  3  RAGEN               [CONVERT HOURS   
   8 5Q5Q                   +3600
  17 5QKB          LDN   4  #36                 [SET STOP CHARACTER  
  16 5R52          DCH   4  ACOMMUNE1(2)        [STORE FULL-STOP 
   7 5RJL          BCHX  2  /
  16 5S4=          CALL  3  RAGEN               [CONVERT MINUTES 
   8 5SHW                   +60  
  16 5T3G          DCH   4  ACOMMUNE1(2)        [STORE FULL-STOP 
   7 5TH6          BCHX  2  /
  15 5W2Q          LDX   7  5                   [COPY SECONDS
  16 5WGB          CALL  3  SEND                [STORE SECONDS   
   8 5X22                   +0   
   8 5XFL          LDX   2  FX2  
   7 5X_=          NGX   5  5
  21 5YDW          ADX   5  GEN2                [X5=NO OF SECONDS FROM MIDNIGHT TO   
  15 5YYG                                       [ HH.MM.00   
   8 5_D6          LDX   0  GEN1 
  18 5_XQ          BPZ   0  ZTIM1               [J IF NO ZERO SUPPRESSION
  21 62CB          LDN   6  4                   [ELSE SUPPRESS EG 00.00.01 TO 0.01   
   8 62X2          LDN   7  #20  
  10 63BL    NXT   LDCH  0  ACOMMUNE1(2) 
   8 63W=          BZE   0  ZERO 
   8 64*W          SBN   0  #36  
  21 64TG          BNZ   0  ZTIM1               [FINISH AT FIRST CHAR NOT '0' OR '.' 
  10 65*6    ZERO  DCH   7  ACOMMUNE1(2) 
   7 65SQ          BCHX  2  /
   8 66#B          BCT   6  NXT  
   8 66S2    ZTIM1 LDX   2  FX2  
   9 67?L          BRN      (GEN0)   
   4 67R=    #   
  21 68=W    # HOURS/MINS CONVERSION.DUMPS CHARACTER FORM OF QUOTIENT OBTAINED WHEN  
  19 68QG    # DIVIDING X5 BY WORD FOLLOWING CALL INTO ACOM1(2) & UPDATES X2 
  17 69=6    # ENTER WITH X5=NO OF SECS,X1=FX1,X2-> NEXT CHAR SPACE  
  15 69PQ    # EXIT X6,X7 DESTROYED; X5,X2 UPDATED . LINK X3 
   4 6=9B    #   
  15 6=P2    RAGEN STO   5  6                   [COPY AMOUNT 
  18 6?8L          DVS   5  0(3)                [DIVIDE TO GET NEXT UNIT 
   7 6?N=          STO   6  7
  18 6#7W    SEND  DVS   6  TEN(1)              [CONVERT TO CHARACTERS   
   4 6#MG    SNOT
  10 6*76          DCH   7  ACOMMUNE1(2) 
   7 6*LQ          BCHX  2  /
  10 6B6B          DCH   6  ACOMMUNE1(2) 
   7 6BL2          BCHX  2  /
   7 6C5L          EXIT  3  1
   4 6CK=    #   
   4 6D4W    #   
  20 6DJG    # CONVERTS A BINARY NO OF DAYS SINCE 31DEC 1899 TO CHARS 'DDMMMYY'  
  13 6F46    # ON ENTRY X7=NO OF DAYS,X1=FX1, X2=FX2 
  20 6FHQ    # ON EXIT X1=FX1,X2=FX2, ALL OTHER ACCS AND GEN0 DESTROYED . LINK X0
   4 6G3B    #   
  15 6GH2    ZDATE STO   0  GEN0                [DUMP LINK   
  19 6H2L          BZE   7  ZEROD               [J IF ZERO SPECIFIED AS DATE 
  19 6HG=          BXGE  7  YEARS(1),UPERR      [ERROR IF 0 OR > YEAR 2100   
  21 6H_W          SLA   7  2                   [DIVIDE BY 365*4+1 TO GET NUMBER OF  
  20 6JFG          DVS   6  TSFTF(1)            [ YEARS ALLOWING FOR LEAP YEARS  
   7 6J_6          SRL   6  2
  20 6KDQ          LDX   4  7                   [TEST AND J IF THIS YEAR IS NOT A
  15 6KYB          ANDN  4  3                   [LEAP YEAR   
  21 6LD2          LDN   5  28                  [SET APPROPRIATE NO OF DAYS FOR FEB  
   8 6LXL          BNZ   4  NLEAP
   8 6MC=          LDN   5  29   
  18 6MWW    NLEAP LDX   0  NDAYS(1)            [NO OF DAYS THIS MONTH   
  19 6NBG          BPZ   0  NFEB                [IF FEBRUARY,TAKE 28 OR 29   
   7 6NW6          LDX   0  5
   7 6P*Q    NFEB  SBX   6  0
   7 6PTB          ADN   1  1
  18 6Q*2          BPZ   6  NLEAP               [J BACK IF NOT THIS MONTH
  21 6QSL          ADX   6  0                   [ OTHERWISE GET BACK DAY OF THIS MNTH
  17 6R#=          LDX   4  NAME-1(1)           [GET NAME OF MONTH   
   8 6RRW          LDX   1  FX1  
   7 6S?G          ADN   6  1
   9 6SR6          DVS   5  TEN(1)   
  16 6T=Q          BNZ   6  STORE               [J MORE THAN 9   
  15 6TQB          LDN   6  #20                 [SET SPACE   
   5 6W=2    STORE   
  16 6WPL          DCH   6  ACOMMUNE1(2)        [STORE 1ST CHAR  
   7 6X9=          BCHX  2  /
  16 6XNW          DCH   5  ACOMMUNE1(2)        [STORE 2ND CHAR  
  19 6Y8G          DSA   4  ACOMMUNE1(2)        [STORE 1ST TWO CHARS OF MONTH
  18 6YN6          STO   4  ACOMMUNE2(2)        [STORE LAST CHAR OF MONTH
   9 6_7Q          DVS   6  TEN(1)   
   9 6_MB          TXL   7  TEN(1)   
  18 7272          BCS      X10                 [J LESS THAN YEAR 2000   
  16 72LL          SBN   7  10                  [MINUS 100 YEARS 
  16 736=    X10   DCH   7  ACOMMUNE2(2)        [STORE 1ST CHAR  
   7 73KW          BCHX  2  /
  16 745G          DCH   6  ACOMMUNE2(2)        [STORE 2ND CHAR  
   7 74K6          BCHX  2  /
  19 754Q          LDN   6  #20                 [SPACE FILL LAST CHARACTER   
  10 75JB          DCH   6  ACOMMUNE2(2) 
   8 7642          LDX   2  FX2  
  10 76HL    #SKI  K6DATECON>9999-9999   
   4 773=    (   
  12 77GW          TRACE    ACOMMUNE1(2),DATECON 
  12 782G          TRACE    ACOMMUNE2(2),RESULT  
   4 78G6    )   
  13 78_Q          BRN      (GEN0)              [EXIT
  21 79FB    ZEROD LDX   0  ACES                [IF ZERO DATE SPECIFIED, SET SPACES  
  14 79_2 ...XFILL STO   0  ACOMMUNE1(2)        [ REPLY  
  10 7=DL          STO   0  ACOMMUNE2(2) 
   9 7=Y=          BRN      (GEN0)   
   9 7?CW ...UPERR LDX   0  WRONGD(1)
   8 7?XG ...      BRN      XFILL
  12 7#5Q ...[ CODE FOR ALLOWMIDN SPECIAL COMMAND
   5 7##2 ...XCS4968A
  10 7#G= ...      BS       ,CS4968BIT   
   6 7#NG ...      ENDCOM
  19 7#NN ...#     ENTERED HERE FOR SPECIAL COMMAND ZT TO ADJUST CLOCK TIME  
   4 7#NW ...XZT 
   7 7#P4 ...      PARAPASS  
  10 7#P= ...      MHUNT    3,CPB,CUNI   
   9 7#PD ...      LDX   7  ANUM(3)  
  17 7#PL ...      BNG   7  ZTER1               [ERROR NO PARAMETER  
   8 7#PS ...      BZE   7  ZTER1
   8 7#Q2 ...      CHNUMCOD ,3   
  19 7#Q8 ...      TESTREPN2 OK,ZT2             [CHNUMCOD OUTPUTS ERROR MESS 
  10 7#QB ...      LDX   6  ACOMMUNE1(2) 
  21 7#QJ ...      MPY   6  XK9PERSEC(1)        [CONVERT TO SPRING CLEAN INTERVALS   
   8 7#QQ ...      BNG   6  ZT1  
  17 7#QY ...      ADS   7  JTIME               [TURN CLOCK FORWARD  
   9 7#R6 ...      ADS   7  CLEANCT  
   8 7#R# ...      BRN      ZT2  
  16 7#RG ...ZT1                                [TURN CLOCK BACK 
   7 7#RN ...      NGXC  7  7
   9 7#RW ...      TXL   7  CLEANCTL 
  18 7#S4 ...      BCC      ZTER2               [RESULT WOULD BE NEGATIVE
   8 7#S= ...      SBS   7  JTIME
   9 7#SD ...      SBS   7  CLEANCT  
  21 7#SL ...      SBS   7  CLEANCTL            [ENSURES FTIME WILL BE OUTPUT WHEN   
  18 7#SS ...                                   [TURNING CLOCK BACKWARDS 
   4 7#T2 ...ZT2 
   6 7#T8 ...      ENDCOM
   5 7#TB ...ZTER1   
  18 7#TJ ...      LDN   7  JPARMIS            [ERROR PARAMETER MISSING  
   9 7#TQ ...      BRN      ZTER99   
   5 7#TY ...ZTER2   
  20 7#W6 ...      LDN   7  ERB3                [ERROR RESULT WOULD BE NEGATIVE  
   5 7#W# ...ZTER99  
   7 7#WG ...      COMERRX  7
   4 7#WQ    #END
   8 ____ ...41440757001100000000
