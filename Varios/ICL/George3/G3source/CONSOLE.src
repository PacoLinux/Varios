  14 22FL    #SEG  CONSOLE8                     [A DAVID 
  16 22PD    # (C) COPYRIGHT INTERNATIONAL COMPUTERS LTD 1982.   
   8 22_=    #OPT  K0CONSOLE=0   
  12 23DW    #LIS  K0CONSOLE>K0GREATGEO>K0ALLGEO 
   8 23YG    #OPT  K6CONSOLE=0   
   4 24D6    #   
   9 24XQ                   8HCONSOLE
   4 25CB    #   
  10 25X2    #              ENTRY POINTS 
   4 26BL    #   
  12 26W=          SEGENTRY K1CONSOLE,X1CONSOLE  
  12 27*W          SEGENTRY K2CONSOLE,X2CONSOLE  
  12 27TG          SEGENTRY K3CONSOLE,X3CONSOLE  
  15 285#          FSHENTRY K4CONSOLE,X4CONSOLE,,X4CONSOLE   
   4 28*6    #   
  20 28SQ    # THIS SEGMENT HANDLES INPUT AND OUTPUT FOR THE OPERATOR'S CONSOLE. 
  21 29#B    # OUTPUT IS ALLOWED TO OVERRIDE INPUT AFTER WAITING FOR 6*FONINTP SECS  
  21 29S2    # (ABOUT 25 SECS), THE OUTPUT BEING PRECEDED BY ^CANCEL NL^. A NEWLINE  
  21 2=?L    # IS OUTPUT FOLLOWING A SUCCESSFUL INPUT. WHEN FINISHED, THE ACTIVITY   
  10 2=R=    # GOES TO SLEEP IN STYLE #50
   4 2?=W    #   
  19 2?QG    # THE SWITCH CONSW IS SET BY CHARGESC TO INDICATE INPUT REQUIRED
   4 2#=6    #   
  16 2#PQ    #     AWORK1 : MAX NO OF CHARS THAT MAY BE OUTPUT   
  13 2*9B    #                  BEFORE NEXT NEWLINE  
  17 2*P2    #     AWORK2 : NO OF CHARS OF MESSAGE STILL TO BE OUTPUT
  15 2B8L    #         (B0 SET - NO OUTPUT BLOCK TO BE FREED)
  18 2BN=    #     AWORK3 : BOTTOM 9 BITS - INPUT CHARACTER COUNT. B0 SET
  19 2C7W    #         - UNPROCESSED DATA IN INPUT BUFFER (INPUT SUPPRESSED) 
  18 2CMG    #     AWORK4 : CHAR 1 IS MARKER FOR OUTPUT MESSAGE PREFIX   
  15 2D76    #         B0 SET - NO CPAT FOR INPUT SET UP YET 
   4 2DLQ    #   
  19 2F6B    WAITCOUNT      +60000/K9           [INPUT WAIT TIME ( = 1 MIN)  
  17 2F7R    PREFIXC        #20203535           [CONTINUATION PREFIX 
   9 2F98       SEGENTRY K50CONSOLE  
  20 2F=K    WIDTH          +72                 [CONSOLE WIDTH ALTERED BY MACRO  
  10 2F?4          SEGENTRY K91CONSOLE   
  18 2F?H    TIMECHAIN      +1                  [TIME CHAINED (SEE K2)   
   6 2F#2    X1CONSOLE   
   2 2F*C
   9 2FBS          LDX   0  WIDTH(1) 
   9 2FD9          STO   0  AWORK1(2)
   8 2FFL          BRN      START
  21 2FH3                                       [CONSWIDTH . DEFAULT = 72 . ELSE 40..
  19 2FJD    TABLE        [COMPARISON TABLE USED FOR SPLITTING LONG MESSAGES 
  10 2FKT          BRN      XCOLNFOUND   
  14 2FM=          #12                           [#12 = :
   8 2FMP          BRN      XGOT 
   6 2FN8          #31   
   8 2FNM          BRN      XEDIT
  14 2FQ4          #30                          [#30 = ( 
   8 2FRF          BRN      XGOT 
  14 2FSW          #34                          [#34 =,  
   8 2FW?          BRN      XEDIT
  15 2FXN          #20                          [#20 = SPACE 
   4 2F_5    TEND
   8 2G2G    X26            +26  
   8 2G3X    X122           +122 
   8 2G5L    X125           +125 
   8 2GK=    X127           +127 
   8 2H4W    X128           +128 
  17 2HJG    XDELTA         #74                 [DELTA SHIFT LIMIT   
  17 2HS#    XFINISH        #04000000             [MASK FOR FINISH   
   5 2J46    PLINK   
   9 2JHQ          PAIR     CONSOLE,3
   5 2K3B    THING   
   8 2K*R          SMO     FX1   
   8 2KN8          LDX   0  WIDTH
   9 2L2L          STO   0  AWORK1(2)
   5 2LG=    SLEEP   
  18 2L_W          COOR3    #50                 [WAIT FOR SOMETHING TO DO
   5 2MFG    TWITTER 
  20 2M_6          JBUSY    ,SLEEP              [IGNORE WAKE-UP IF CONSOLE JUSY  
  21 2NDQ    #                      AS BACKING STORE ROUTINES MAY GET THEIR OAR IN   
  12 2NYB    #                      AT ANY TIME  
   5 2PD2    START   
  18 2PXL          BSON     CONSW,O2            [BR IF INPUT REQUESTED   
   4 2QC=    O1  
   9 2QWW          LDN   4  BCONSOUT 
   9 2RBG          TXU   4  BCONSOUT 
  17 2RW6          BCS      ZOOM                [BR IF OUTPUT TO DO  
  10 2S23          LDX   0  XFINISH(1)   
  20 2S5Y          ANDX  0  FINISH                 [TEST IF ^FINISHED^ BIT SET   
   8 2S9T          BNZ   0  XFN  
  17 2S*Q          BSOFF    EMSBIT,SLEEP            [BR IF NOT EMS   
  20 2STB    XFN   FON      #53                 [ELSE WAKE UP ACTIVITIES AWAITING
  16 2T*2          BRN      SLEEP               [END OF OUTPUT   
   4 2TSL    ZOOM
   7 2W#=          LDN   7  0
  16 2WRW          BRN      ZZ                  [BR TO DO OUTPUT 
   4 2X?G    O2  
   9 2XR6          LDX   0  AWORK3(2)
  18 2Y=Q          BNG   0  XOUTP               [BR IF INPUT SUPPRESSED  
  21 2YQB          OVER     CONSW               [SWITCH OFF 'INPUT REQUEST' MARKER   
  18 2_=2          LDX   3  CPPTR(2)            [LOAD CONSOLE D/L PO9NTER
  18 2_PL          LDN   7  0                   [MODE 0 FOR INPUT PERI   
  15 329=          DCA      3,DLA,7,MODE        [INSERT MODE 
  18 32NW          LDN   6  128                 [CHARACTER COUNT = 128   
  15 338G          DCA      3,DLA,6,COUNT       [INSERT COUNT
  19 33N6          LDN   5  FCINBUF             [CORE ADDRESS OF INPUT BUFFER
  19 347Q          DCA      3,STO,5,CTSA        [STORE TRANSFER START ADDRESS
  19 34MB          GPERI    3,2,NC              [ISSUE READ PERI, NO CHAINING
   7 34P_    #UNS  ENHOPER   
   4 34SJ    (   
  19 34X7          BSON     EMSBIT,OUT          [CANCEL READ AT ONCE IF EMS -
  20 34_Q                                       [ONLY DO THIS TO UNLOCK KEYBOARD 
   4 354*    )   
   4 3572    WAIT
  17 35LL          COOR3    #41                 [WAIT K9 MILLISECONDS
   9 366=          LDXC  0  CPRW1(2) 
  18 36KW          BCC      XOVER               [BR IF TRANSFER FINISHED 
   7 375G          ADN   7  1
  10 37K6          TXL   7  WAITCOUNT(1) 
  18 384Q          BCS      WAIT                [BR IF TIME NOT UP YET   
   9 38JB          LDN   4  BCONSOUT 
   9 3942          TXU   4  BCONSOUT 
  16 39HL          BCC      WAIT                [BR IF NO OUTPUT 
  19 3=3=          LDX   1  BCONSOUT            [LOAD POINTER TO 1ST BLOCK   
  20 3=GW          TXU   1  BCONSOUT+1          [BRANCH IF MORE THAN ONE BLOCK IN
  18 3?2G          BCS      OUT                 [THE CONSOLE OUTPUT CHAIN
  21 3?G6          LDX   0  ATYPE(1)            [IF ONLY ONE MESSAGE WAITING TO GF   
  20 3?_Q          SRL   0  12                  [OUT, WE DO NOT CANCEL INPUT JUST
  17 3#FB          SBN   0  IREMTW+CONBUFF      [TO OUTPUT THE TIME  
  18 3#_2          BNZ   0  OUT                 [BR IF NOT TIME MESSAGE  
   8 3*DL          LDCT  0  #200 
   7 3*Y=          ORX   1  0
   8 3BCW          LDCH  0  A1(1)
  17 3BXG          BZE   0  WAIT                [BR IF TIME MESSAGE  
  17 3CC6    # ELSE OVERRIDE INPUT, PREFIXING MESSAGE WITH CANCEL NL 
   4 3CWQ    OUT 
  16 3DBB          DISENGPER                    [ TO CANCEL INPUT
   5 3DW2    OUTND   
  19 3F*L          LDN   7  3                   [3 EXTRA WORDS FOR CANCEL NL 
   8 3FN3          SMO     FX1   
  20 3G2D          LDX   5  WIDTH                  [IN CASE NO OUTPUT MESSAGES   
   4 3G#W    ZZ  
  20 3GSG          JBUSY    ,THING              [CONSOLE MAY BE USED ANY TIME BY 
  19 3H#6    #                                   BACKING STORE FAIL ROUTINES 
   8 3HRQ          LDCT  1  #200 
   8 3J?B          SMO      FX2  
  20 3JR2          DCH   7  AWORK4(1)           [MARKER FOR ANY MESSAGE PREFIXES 
  20 3K=L          LDX   7  GSIGN               [SET X7 -VE IN CASE WE GO TO P1  
  21 3KQ=          LDN   4  0                   [INITIALISE CURRENT CHARACTER COUNT  
   9 3L9W          LDN   3  BCONSOUT 
   9 3LPG          TXU   3  BCONSOUT 
  19 3M96          BCC      P1                  [BR IF NO MESSAGES TO OUTPUT 
  21 3MNQ          LDX   3  BCONSOUT            [LOAD POINTER TO FIRST OUTPUT BLOCK  
  19 3N8B          LDEX  5  AREC(3)             [LOAD MESSAGE LENGTH (+1?)   
  20 3NN2          LDN   6  ATEXT               [X6 = INTERNAL MESSAGE POINTER   
   9 3P7L          LDX   0  ATYPE(3) 
   8 3PM=          SRL   0  12   
  10 3Q6W          SBN   0  CONBUFF+COUT 
  17 3QLG          BZE   0  XCOUT               [BR IF CONBUFF/COUT  
  20 3R66          ADN   5  1                   [RECONCILE IREMTW AND COUT BLOCK 
  10 3RKQ    #SKI  ICBUFF-ATEXT+10>10$10 
  14 3S5B          ADN   6  ICBUFF-ATEXT        [FORMATS 
  10 3SK2    #SKI  ATEXT-ICBUFF+10>10$10 
  14 3T4L          SBN   6  ATEXT-ICBUFF        [FORMATS 
   5 3TJ=    XCOUT   
  19 3W3W          SBN   5  1                   [X5 = NO OF WORDS IN MESSAGE 
  17 3WHG    # X6 = POINTER TO START OF MESSAGE, RELATIVE TO BLOCK   
  21 3X36          LDX   3  6                   [ROUTINE TO ^REMOVE^ TRAILING SPACES 
   9 3XGQ          ADX   3  BCONSOUT 
   7 3Y2B          ADX   3  5
  18 3YG2          BNZ   5  V1                  [J IF MESSAGE NOT NULL   
  19 3Y_L          LDN   7  0                   [NO MORE CHARS TO DEAL WITH  
   8 3_F=          LDCT  1  #200 
   8 3_YW          SMO      FX2  
   9 42DG          LDCH  0  AWORK4(1)
  18 42Y6          BZE   0  V2                  [J IF NO MESSAGE PREFIX  
  19 43CQ          NGN   5  1                   [ELSE NEWLINE REQD NEXT TIME 
   8 43XB          BRN      P2   
   4 44C2    V2  
   7 44WL          LDN   0  1
   8 45B=          SMO      FX2  
  17 45TW          DCH   0  AWORK4(1)           [SET MESSAGE PREFIX  
  15 46*G          BRN      ZZZA1               [J FOR OUTPUT
   4 46T6    V1  
  21 47#Q          SBN   3  1                   [X3 POINTS TO LAST WORD IN MESSAGE   
  18 47SB          SLL   5  2                   [CONVERT WORDS TO CHARS  
  19 48#2          ORX   3  CACT                [X3 -> CHAR 3 OF LAST WORD   
   4 48RL    T1  
  17 49?=          LDCH  0  0(3)                [LOAD NEXT CHARACTER 
   8 49QW          SBN   0  #20  
  16 4==G          BNZ   0  T2                  [BR IF NOT SPACE 
   7 4=Q6          SLC   3  2
  17 4?9Q          SBN   3  1                   [REVERSE BCHX ON X3  
   7 4?PB          SRC   3  2
  18 4#92          BCT   5  T1                  [BACK FOR NEXT CHARACTER 
   7 4#NL          LDN   5  1
   4 4*8=    T2  
   9 4*MW          STO   5  AWORK2(2)
   4 4B7G    YY  
  21 4BM6          JBUSY    ,THING              [BR IF CONSOLE IN USE BY EG TRANFAIL 
  18 4C6Q          LDN   1  FCOUTBUF            [START ADDRESS OF BUFFER 
   7 4CLB          LDX   3  6
  19 4D62          ADX   3  BCONSOUT            [SET X3 AS MESSAGE POINTER   
  18 4DKL          LDN   4  0                   [INITIALISE CURRENT COUNT
   5 4F5=    PLOOP   
  16 4F*4          STO   1  ACOMMUNE1(2)        [SAVE CONTS OF X1
  17 4FJW          LDX   5  AWORK2(2)           [LOAD CHARACTER COUNT
  14 4G4G          LDXC  0  GSIGN               [ SET C  
  20 4GJ6          TXL   5  AWORK1(2)           [BR IF LENGTH OF MESSAGE < NO OF 
  20 4H3Q          BCS      SHORT               [CHARS POSSIBLE WITHOUT NEWLINE  
   7 4H4K          LDN   0  3
  20 4H5D          SBS   0  AWORK1(2)           [LEAVE ROOM FOR CONTINUATION SEQ 
  17 4H6*          SMO      FX1                  [ELSE SPLIT MESSAGE 
  20 4H8Y          LDN   1  TABLE               [X1 -> BRN INSTRUCTIONS IN TABLE 
  19 4H?H          LDN   6  TEND-TABLE/2        [X6= NO OF CHARS UNDER TABLE 
   5 4HB6    SETCT   
   8 4HDP          LDX   2  FX2  
  20 4HHB          LDX   0  AWORK1(2)           [NO OF CHARACTERS LEFT ON LINE   
   7 4HRH          LDX   2  3
   7 4J3N          SLC   2  2
   7 4J?T          ADX   2  0
   7 4JJ2          SBN   2  1
   7 4JS7          SRC   2  2
   8 4K4#          LDN   0  26   
   4 4K#F    Y1  
  16 4KJL          LDCH  7  0(2)                [LOAD NEXT CHAR  
   8 4KSR          TXU   7  1(1) 
  18 4L4Y          BCC      (1)                 [J IF SUITABLE CHAR FOUND
   5 4L*5    RECOVER 
  19 4LK=          SLC   2  2                   [STEP BACK POINTER ONE CHAR  
   7 4LTC          SBN   2  1
   7 4M5J          SRC   2  2
   8 4M*P          BCT   0  Y1   
   7 4MKW          ADN   1  2
  18 4MW3          BCT   6  SETCT               [DECREMENT TABLE COUNT   
  19 4N68          SMO      FX2                 [NO SUITABLE CHARACTER FOUND 
   9 4NB*          LDX   5  AWORK1   
   8 4NLG          BRN      XPT  
   6 4NWM    XCOLNFOUND  
  18 4P6S          BCHX  2  /                   [X2-> CHAR FOLLOWING :   
  18 4PB_          LDCH  7  0(2)                [LOAD CHAR FOLLOWING :   
   7 4PM6          SLC   2  2
   7 4PX?          SBN   2  1
  14 4Q7D          SRC   2  2                   [X2-> :  
  20 4QCK          SBN   7  #20                 [ IF CHAR FOLLOWING : IS SPACE   
  21 4QMQ          BZE   7  RECOVER             [J BACK TO SEARCH FOR SUITABLE CHAR  
  21 4QXX    XEDIT                              [SP OR ) FOUND, REMOVE ANY PRECEEDING
  19 4R84          LDX   5  2                   [X2-.>-S ASUITABLE SPLIT CHAR
   7 4RD9          SLC   5  2
   7 4RNB          SLC   3  2
  20 4RYH          SBX   5  3                   [X5 = NO OF CHARS PRECEEDING S   
   7 4S8N          SRC   3  2
   2 4SDT
   2 4SP2
   5 4S_7    ZELOOP  
   7 4T9#          SLC   2  2
   7 4TFF          SBN   2  1
   7 4TPL          SRC   2  2
  16 4T_R          LDCH  7  0(2)                [LOAD NEXT CHAR  
   8 4W9Y          SBN   7  #20  
  18 4WG5          BNZ   7  XPT                 [J IF NOT A SPACE CHAR   
   9 4WQ=          BCT   5  ZELOOP   
  18 4X2C          LDN   5  1                   [ONLY SPACES IN MESSAGE  
   8 4X=J          BRN      XPT  
  17 4XGP    XGOT                               [X2-> SPLITTING CHAR 
   7 4XQW          SLC   2  2
   7 4Y33          SLC   3  2
  20 4Y?8          SBX   2  3                   [X2 = NO OF CHAR B4 NL REQUIRED  
  20 4YH*          SRC   3  2                   [RESET CURRENT MESSAGE POINTER   
   7 4YRG          LDX   5  2
   7 4_3M          ADN   5  1
   4 4_?S    XPT 
   8 4_H_          LDX   2  FX2  
   5 4_S6    SHORT   
  10 524?          LDX   1  ACOMMUNE1(2) 
   5 52#D    PSHORT  
  20 52JK          STO   5  AWORK1(2)           [STORE NO OF CHAR B4 NL REQUIRED 
  18 52SQ          LDX   7  AWORK2(2)           [MESSAGE REMAINDED COUNT 
   8 534X          LDN   6  #76  
   8 53*4          LDX   2  FX1  
   5 53M2    ZLOOP   
   8 546L    # EDITING ROUTINE   
   9 54L=          TXL   4  X128(2)  
  19 555W          BCC      XPERI               [BR IF END OF BUFFER REACHED 
  17 55KG          LDCH  0  0(3)                [LOAD NEXT CHARACTER 
   9 5656          TXL   0  XDELTA(2)
  20 56JQ          BCS      NOTDELTA            [BR IF CHARACTER NOT DELTA SHIFT 
   9 574B          TXL   4  X127(2)  
  18 57J2          BCC      XPERI               [BR IF NO ROOM IN BUFFER 
  19 583L          DCH   6  0(1)                [STORE #76 FOR NEXT CHARACTER
   7 58H=          BCHX  1  /
  20 592W          SBN   0  #10                 [CONVERT CHARACTER TO ALPHA SHIFT
  20 59GG          ADN   4  1                   [UPDATE CURRENT CHARACTER COUNT  
   5 5=26    NOTDELTA
  19 5=FQ          SBN   7  1                   [DECREMENT REMAINDER COUNT   
  18 5=_B          DCH   0  0(1)                [INSERT NEXT CHARACTER   
   7 5?F2          BCHX  1  /
  16 5?YL          BCHX  3  /                   [UPDATE POINTERS 
  17 5#D=          ADN   4  1                   [AND CHARACTER COUNT 
   8 5#XW          BCT   5  ZLOOP
  19 5*CG          TXL   4  X125(2)             [END OF (PRINT) LINE REACHED 
  20 5*KF          BCC      NLSIGN              [J TO INDICATE NL PREFIX REQUED  
  18 5*RD          BNZ   7  NOTEOM              [J IF MESSAGE CONTINUES  
  17 5*_C    #                                  [ELSE INSERT NL CHARS
   8 5B7B          LDX   2  FX2  
  17 5B**          LDN   0  FCANCEL+2           [ADDRESS OF NL BUFFER
  15 5BH#          MVCH  0  4                   [MOVE IN NL  
  18 5BP?          ADN   4  4                   [INCREMENT CURRENT COUNT 
   8 5BX=          SMO      FX1  
   8 5C59          LDX   0  WIDTH
  19 5C?8          STO   0  AWORK1(2)           [NO OF CHARS BEFORE NEXT NL  
   8 5CF7          BRN      ZZZA2
  20 5CM6    NOTEOM         [NOT EOM INSERT NL & CONTINUATION PREFIX- IF SPACE   
   8 5CT5          LDX   2  FX2  
   8 5D34          SMO      FX1  
  16 5D93          TXL   4  X122                [TEST FOR SPACE  
  21 5DC2          BCC      NLSIGN              [J-AS NL & CONTINUATION PREFIX REQD  
  20 5DJ_    #                                  [INSERT NL & CONTINUATION CHARS  
   5 5F#T    RETURN  
   8 5FGS          SMO      FX1  
  20 5FNR          LDN   0  PREFIXC             [ADDRESS OF CONTINUATION PREFIX  
  17 5FWQ          MVCH  0  3                   [MOVE IN  CONT PREFIX
  17 5F_P          LDN   0  FCANCEL+2           [ADDRESS OF NL BUFFER
  15 5G4N          MVCH  0  4                   [MOVE IN NL  
  18 5G7M          ADN   4  7                 [INCREMENT CURRENT COUNT   
   8 5G=N          SMO      FX1  
   8 5GDM          LDX   0  WIDTH
   9 5GSK          STO   0  AWORK1(2)
  20 5H2J          BRN      YA                  [J TO REMOVE PRECEEDING SPACES   
   5 5H8H    NLSIGN  
  19 5HBG          NGN   5  1                   [NL PREFIX REQUIRED FOR NEXT 
  18 5HJF          BRN      XPERI               [PRINT LINE. J TO OUTPUT 
   4 5HQL    YA  
  20 5J==          STO   7  AWORK2(2)           [STORE CURRENT REMAINDER COUNT   
  18 5JPW          LDCH  0  0(3)                [ELSE LOAD NEXT CHARACTER
   8 5K9G          SBN   0  #20  
  16 5KP6          BNZ   0  PLOOP               [BR IF NOT SPACH 
  19 5L8Q          BCT   7  YA1                 [COUNT DOWN REMAINDER COUNT  
  16 5LNB          BRN      ZZZA2               [BR IF EXHAUSTED 
   4 5M82    YA1 
   8 5MML          BCHX  3  YA   
   5 5N7=    XPERI   
   8 5NLW    # TO OUTPUT A LINE  
   4 5P6G    P1  
   8 5PL6          LDX   2  FX2  
   4 5Q5Q    P2  
  19 5QKB          STO   5  AWORK1(2)           [STORE LINE REMAINDER COUNT  
   5 5R52    ZZZA1   
  18 5RJL          LDX   6  3                   [PRESERVE MESSAGE POINTER
  17 5S4=          SBX   6  BCONSOUT            [AND RELATIVISE IT   
   5 5SHW    ZZZA2   
  18 5T3G          STO   7  AWORK2(2)           [STORE REMAINDER COUNT   
   8 5TH6          LDCT  1  #200 
   8 5W2Q          SMO      FX2  
  18 5WGB          LDCH  0  AWORK4(1)           [LOAD CANCEL/NL MARKER   
   9 5X22          LDN   1  FCOUTBUF 
  17 5XFL          SBX   1  0                   [FIX START ADDRESS   
   9 5X_=          LDX   3  CPPTR(2) 
  19 5YDW          DCA      3,STO,1,CTSA        [STORE TRANSFER START ADDRESS
  21 5YYG          SLL   0  2                   [CONVERT NO OF EXTRA WORDS TO NO CHAR
  18 5_D6          ADX   4  0                   [AND ADD TO CURRENT COUNT
  19 5_XQ          BZE   4  X1CONSOLE           [BR IF NO ACTUAL OUTPUT TO DO
  18 62CB          DCA      3,DLA,4,COUNT       [STORE CHARACTER COUNT   
   7 62X2          LDN   7  1
  15 63BL          DCA      3,DLA,7,MODE        [INSERT MODE 
   4 63W=    TF  
  16 64?8          GPERI    3,2                 [AND ISSUE PERI  
  18 64N6          COOR1                        [WAIT FOR END OF TRANSFER
  18 6554          CALL  5  XGETCORE            [CHECK IF CORE REQUIRED  
   8 65G2          SMO      FX1  
  20 65WY          LDX   5  WIDTH               [SET X5 IN CASE J TO THING OR ZZ 
  16 66?W          LDCH  0  CPRW1(2)            [TEST REPLY WORD 
   7 66NS          ANDN  0  5
  18 675Q          BZE   0  OK                  [BRANCH IF TRANSFER OK   
   4 67GN    NM  
  19 67XL          LDN   7  1                   [TRAN FAIL - SET NL INDICATOR
  21 68#J          STO   5  AWORK1(2)           [AND FULL CONSOL WIDTH FOR NEXT MESS 
   8 68PG          BRN      ZZ   
  14 696D    OK                                 [TRAN OK 
   9 69HB          LDX   0  AWORK2(2)
  18 69Y#          BNG   0  NOBLOCK              [J IF NO MESSAGE BLOCK  
   2 6=*=
  19 6=Q8          BNZ   0  NFIN                [J IF MESSAGE NOT FINISHED   
  18 6?76          FREECORE BCONSOUT            [ELSE FREE MESSAGE BLOCK 
   5 6?J4    NOBLOCK 
   9 6?_2          LDX   0  AWORK1(2)
  21 6#*Y          BNG   0  NM                  [J IF NL PREFIX REQUIRED FOR START   
  18 6#QW    #                                  [OF NEXT MESSAGE , ELSE  
  17 6*7S          BRN      TWITTER             [J TO TEST FOR INPUT 
   4 6*JQ    NFIN
  21 6*_N          JBUSY      ,THING            [J CONSOLE USED AT ANY TIME BY BSTS  
  18 6BBL          LDN   4  0                   [INITIALISE CURRENT COUNT
   7 6BRJ          LDX   3  6
  19 6C8G          ADX   3  BCONSOUT            [SET X3 AS MESSAGE POINTER   
   9 6CKD          LDX   0  AWORK1(2)
  15 6D2B          BNG   0  NF                  [J IF NL REQ 
  19 6DC#          LDX   5  AWORK1(2)           [STORE LINE REMENDER COUNT   
  21 6DS=          LDN   7  0                   [NO MESSAGE PREFIX FOR NEXT MESSAGE  
   8 6F98          LDCT  1  #200 
   8 6FL6          SMO      FX2  
   9 6G34          DCH   7  AWORK4(1)
   9 6GD2          LDN   1  FCOUTBUF 
   9 6GSY          BRN      PSHORT   
  20 6H9W    NF                      [MESS CONTINUES SO CLEAR NL MARKER IN AW4   
   9 6HLS          LDX   7  AWORK2(2)
   7 6J3Q          LDN   0  0
   8 6JDN          LDCT  1  #200 
   8 6JTL          SMO      FX2  
  21 6K=J          DCH   0  AWORK4(1)           [NO NL MARKER FOR START OF NEXT MESSA
   9 6KMG          LDN   1  FCOUTBUF 
  19 6L4D          BRN      RETURN              [J TO PREFIX NEXT LINE WITH  
  18 6LFB    #                                  [CONTINUATION SEQUENCE   
   5 6LXL    XOVER   
  18 6MC=    # INPUT TERMINATED BY EITHER ACCEPT, CANCEL, OR COUNTED OUT 
   4 6MWW    #   
   9 6NBG          LDCH  0  CPRW1(2) 
  16 6NW6          ANDN  0  2                   [MASK ERROR BIT  
  18 6P*Q          BNZ   0  OUTND               [BR TO OUTPUT CANCEL NL  
  17 6PTB          LDEX  4  CPRW1(2)            [LOAD REMAINDER COUNT
   7 6Q*2          SBX   6  4
  17 6QSL          BZE   6  OUTND               [CANCEL IF NO INPUT  
  21 6R#=          LDX   0  GSIGN               [SET AWORK3 -VE TO INDICATE NO CORE  
  18 6RRW          ORS   0  AWORK3(2)           [FOR ADATA/CREADL GOT YET
  16 6S?G          ORS   0  AWORK4(2)           [NO CPAT GOT YET 
  18 6SR6          DSA   6  AWORK3(2)           [REMEMBER MESS CHAR COUNT
  17 6T=Q          CALL  5  XGETCORE            [TRY FOR SOME CORE   
   8 6TK7          SMO     FX1   
   8 6TXJ          LDX   5  WIDTH
  17 6W=2          LDN   7  1                   [SET NEWLINE MARKER  
  16 6WPL          BRN      ZZ                  [BR TO DO OUTPUT 
   5 6X9=    XOUTP   
  17 6XNW          CALL  5  XGETCORE            [TRY FOR SOME CORE   
   8 6Y8G          BRN      O1   
   4 6YN6    XOUT
  16 6_7Q          LDN   7  0                   [NO NL TO OUTPUT 
  16 6_MB          BRN      OUT                 [BR TO DO OUTPUT 
   5 7272    XGETCORE
   4 72LL    #   
  21 736=    # THIS SUBROUTINE OPTIONALLY GETS CORE TO HANDLE ANY OUTSTANDING INPUT+ 
  21 73KW    # IF CORE RS AVAILABLE A CPA IS SET UP WITH ALINK TO K3CONSOLE & FPUT.  
  19 745G    # EXIT WITH AWORK4 +VE MEANS THE CPA WAS SUCCESSFULLY SET UP.   
   4 74K6    #   
  19 754Q          LDXC  0  AWORK4(2)           [EXIT IF CPAT NOT REQUIRED   
   8 75JB          BCC      (5)  
   8 7642          SBX   5  FX1  
  15 76HL          GETACTOP XEXIT,CPAT          [GETA CPAT   
   9 773=          LDX   0  BITS22LS 
  19 77GW          ANDS  0  AWORK4(2)           [CLEAR CPA REQUIRED MARKER   
  19 782G          LDEX  0  AWORK3(2)           [CHARACTER COUNT FOR MESSAGE 
  17 78G6          LDX   2  BPTR(2)             [POINTER TO NEO CPA  
  18 78_Q          STO   0  AWORK1(2)           [STORE MESS CHAR COUNT   
   8 79FB          LDX   0  FX2  
  20 79_2          STO   0  AWORK2(2)           [STORE ADDRESS OF CONSA/CNTRAL   
  19 7=DL          LINKSET  2,PLINK(1)          [SET LINKS FOR NEW ACTRVITY  
  17 7=Y=          FPUT                         [START THE ACTIVITY  
   5 7?CW    XEXIT   
   8 7?XG          ADX   5  FX1  
   7 7#C6          EXIT  5  0
   6 7#WQ    X2CONSOLE   
  21 7*BB    # THIS ENTRY POINT IS USED BY THE MACRO CONSTIME TO CONTROL THE OUTPUT  
  21 7*W2    # OF THE TIME ON THE OPERATOR'S CONSOLE. ANY TIME MESSAGE WAITING IN THE
  21 7B*L    # CHAIN WHEN THE MACRO IS ISSUED IS FREED. THE TIME MESSAGE IS FOUND IN 
  21 7BT=    # A GMON/AOUT BLOCK CHAINED TO THE CURRENT ACTIVITY. IT IS THEN RENAMED 
  21 7C#W    # A CONBUFF/IREMTW AND CHAINED INTO THE CONSOLE OUTPUT CHAIN, AND THE   
  11 7CSG    # CONSOLE ACTIVITY IS WOKEN UP  
   4 7D#6    #   
  10 7DF#          LDX   0  TIMECHAIN(1) 
  17 7DLG          BZE   0  X2UP                [J IF TIME SUPPRESSED
  20 7DRQ          LDN   4  BCONSOUT            [START ADDRESS OF CONSOLE OUTPUT 
  14 7F?B          TXU   4  BCONSOUT            [CHAIN   
  15 7FR2          BCC      REMPTY              [BR IF EMPTY 
  19 7G=L          LDX   3  BCONSOUT            [LOAD POINTER TO FIRST BLOCK 
   9 7GGD          LDX   3  FPTR(3)  
   7 7GK3          TXU   3  4
  19 7GML          BCC      REMPTY              [J IF NO MORE BLOCKS ON CHAIN
   4 7GQ=    R101
   9 7H9W          LDX   0  ATYPE(3) 
   8 7HPG          SRL   0  12   
  11 7J96          SBN   0  CONBUFF+IREMTW   
  17 7JNQ          SEGENTRY K8CONSOLE           [FOR ALLTIME MACRO   
  17 7K8B          BZE   0  RFND                [BR IF IREMTW FOUND  
   4 7KN2    R102
   9 7L7L          LDX   3  FPTR(3)  
   7 7LM=          TXU   3  4
  19 7M6W          BCC      REMPTY              [BR IF END OF CHAIN REACHED  
   8 7MLG          BRN      R101 
   4 7N66    RFND
   8 7NKQ          LDCT  1  #200 
   7 7P5B          SMO      3
  18 7PK2          LDCH  0  A1(1)               [LOAD SOURCE CHARACTER   
  18 7Q4L          BNZ   0  R102                [BR IF NOT TIME MESSAGE  
  19 7QJ=          FREECORE 3                   [ELSE FREE THE MESSAGE BLOCK 
   5 7R3W    REMPTY  
  18 7RHG          MHUNTW    1,GMON,AOUT        [FIND THE MESSAGE BLOCK  
  17 7S36          LDEX  6  A1(1)               [LOAD MESSAGE COUNT  
  17 7SGQ          ADN   6  ICBUFF-A1-2         [IREMTW BLOCK LENGTH 
  17 7T2B          SETUPCOR 6,3,CONBUFF,IREMTW  [SET UP IREMTW BLOCK 
  10 7TG2          MHUNTW   2,GMON,AOUT  
  17 7T_L          LDEX  6  A1(2)               [LOAD RECORD H5ADER  
  19 7WF=          SBN   6  2                   [CONVERT TO MESSAGE LENGTH   
  19 7WYW          STO   6  A1(3)               [AND STORE IN CONBUFF IREMTW 
  19 7XDG          ADN   2  A1+2                [MESSAGE START - GMON AOUT   
  18 7XY6          ADN   3  ICBUFF              [MESSAGE START - IREMTW  
   7 7YCQ          SMO      6
  16 7YXB          MOVE  2  0                   [MOVE MESSAGE IN 
  18 7_C2          SBN   3  ICBUFF              [POINT TO START OF BLOCK 
  19 7_WL          CONSOUT  3                   [OUTPUT TO CENTRAL CONSOLE   
   4 826D    X2UP
  14 82B=          UP                           [RETURN  
   6 82TW    X3CONSOLE   
   4 83*G    #   
  19 83T6    # THIS ENTRY IS USED BY THE MAIN ROUTINE TO HANDLE INPUT. IT IS 
  20 84#Q    # DRIVEN FROM THE NEW CPA, AND SETS UP AN ADATA/CREADL BLOCK TO HOLD
  21 84SB    # THE INPUT IN THE CONSOLE INPUT BUFFER. WHEN THE DATA IS THUS STORED   
  21 85#2    # AWAY, B0 OF AWORK3 OF THE CONSA ACTIVITY IS UNSET TO ALLOW MORE INPUT.
  21 85RL    # THE MESSAGE IS THEN EDITED TO REMOVE DELTA SHIFTS. THE CPA THEN GOES  
   9 86?=    # ACROSS TO COMPRO,1.   
   4 86QW    #   
   8 87=G          LDCT  0  #770 
  19 87Q6          STO   0  JSOURCE1(2)         [JSOURCE1 FOR CENTRAL CONSOLE
  18 889Q          LDEX  6  AWORK1(2)           [MESSAGE CHARACTER COUNT 
   7 88PB          ADN   6  3
  18 8992          SRL   6  2                   [MESSAGE LENGTH IN WORDS 
  18 89NL          ADN   6  CPDATA-A1+1         [LOGICAL LENGTH REQUIRED 
  15 8=8=          SETUPCOR 6,1,FILE,FRB        [SET UP FRB  
  16 8=MW          LDEX  6  AWORK1(2)           [CHARACTER COUNT 
  17 8?7G          STO   6  A1(1)               [STORE MESSAGE LENGTH
   9 8?M6          LDN   0  FCINBUF  
   9 8#6Q          ADN   1  CPDATA   
   7 8#LB          SMO      6
  16 8*62          MVCH  0  0                   [MOVE MESSAGE IN 
  12 8*KL    #     FIND THE CONSA/CNTRAL ACTIVITY
  18 8B5=          SMO      AWORK2(2)           [ADDRESS OF CONSA/CNTRAL 
  19 8BJW          STOZ     AWORK3              [CLEAR SUPPRESS INPUT MARKER 
  15 8C4G          CHANG                        [EDIT MESSAGE
   9 8CJ6          STOZ     AWORK2(2)
   9 8D3Q          STOZ     AWORK1(2)
   9 8DQL          ACROSS   COMPROA,1
   5 8F32    #PAGE   
  11 8FGL          MENDAREA 20,K100CONSOLE   
   4 8G2=    #END
   8 ____ ...42576073000200000000
