   7 23YG    #OPT  K0PMACT=0 
  11 24D6    #LIS  K0PMACT>K0POST>K0ALLGEO   
   4 24XQ    #   
  17 25CB ...#SEG  PMACT84                      [KAREL KOSKUBA-DIAG  
  16 25M8 ...#     (C) COPYRIGHT INTERNATIONAL COMPUTERS LTD 1982
   4 25X2    #   
  21 26BL    #     THIS SEGMENT GIVES LISTINGS OF THE CONTENTS OF THE ACTIVITY CHAIN 
   4 26W=    #   
   9 27*W                   8HPMACT  
   4 27TG    #   
   9 28*6    #     ENTRY POINT TABLE 
   4 28SQ    #   
  10 29#B ... SEGENTRY K1PMACT,XK1PMACT  
  10 29S2 ... SEGENTRY K2PMACT,XK2PMACT  
   4 2?=W    #   
  17 2?QG          FIXTRA   JPMABLOX            [USED BY PMBLOX MACRO
  20 2#2# ...#ALT  JPMADENT=0                   [INITIALISE POINTER FOR PMBLOX   
   5 2#=6    ZPMABLOX
  17 2*9B    #GAP JPMNOFTYPES+2                 [ FOR #MEN VIA PMBLOX
   4 2*P2    #   
   7 2B8L    #OPT  JACT=150  
   8 2CMG          FIXTRA   JMACT
  19 2D76    ZJACT          +JACT               [OPTIONAL LENGTH OF BLOCKS   
  12 2HJG    NAMEA          16HCURRENT ACTIVITY  
  13 2J46    NAMEB          22H AND ASSOCIATED BLOCKS
  12 2JHQ    NAMEC          15H BREAK IN CHAIN   
  14 2L2L    NAMEE          25HACTIVITY CHAIN (FROM FX2) 
  14 2LG=    NAMEF          26HACTIVITY CHAIN (FROM BACT)
  12 2L_W    NAMEG          17HBACKWARD CHAINING 
  11 2MFG    NAMEH          11HFX2 INVALID   
  12 2M_6    NAMEI          16H MINI POSTMORTEM  
   8 2PD2    NAMEL       4HACTC  
   7 2PXL    ROWCNT      +0  
  10 2T*2    QUERIES        8H????????   
  20 2TSL    XBASEPR        +0                  [SET NEG. IF CHAINING FROM BACT  
  21 2W#=                                       [SET POS. IF CHAINING FROM FX2 AND   
  18 2WRW                                       [         BACT PRINTED   
   8 2X?G    XBACT          +BACT
  19 2Y=Q    XIND           +0                  [SET=0 WHEN FORWARD CHAINING 
  19 2YQB                                       [   =1 WHEN BACKWARD CHAINING
  20 2_=2                                       [   =2 WHEN'BACKWARD CHAINING'   
  19 2_PL                                       [      HEADING TO BE PRINTED 
  18 329=                                       [   =-1 WHEN END OF CHAIN
   8 32NW    XACT           #60  
  10 338G    XBLINK         +BLINK/#100  
  21 34MB    XBLCOUNT       +0                  [COUNT OF BLOCKS IN ROW TO BE PRINTED
  16 3572                                       [IN ROUTINE PRINT
  20 35LL    XBACKPR        +0                  [TO HOLD START ADDR. OF PREVIOUS 
  21 366=                                       [BLOCK IN CHAIN.USED BY SEARCH ROUT. 
   8 3942    XA1            +A1  
   8 39HL    X512           +512 
   8 3=3=    X45            +45  
  19 3=GW    START          +0                  [SET=START ADDR. OF CHAINING 
  17 3?_Q    UNE   +0                           [ BLOCK COUNT STORAGE
   5 3#FB    STYPE +0
   8 3*DL    SIX            +6   
  18 3*Y=    MASK           #17777777           [TO MASK OUT CHAR. BITS  
   8 3BCW    THREE          +3   
  18 3BXG    SKIP           +0                  [HEADING OR NO HEADING   
  20 3CC6    PRINTING       +0                  [USE BY PRINT ROUTINE TO INDICATE
  18 3CWQ                                       [STILL PRINTING BLOCKS   
   9 3DBB    UPARROW        4H____   
  12 3DW2    NOTLISTED      16H0NOT LISTED 0000  
  15 3F*L ...PMACTEND       +ZPMACT+1           [END OF SEG+1
  19 3FT=    PMACTENDA      +0                  [SET=END OF SEG+IDENT TABLES 
   8 3G#W ...ZLPMT          +0   
  18 3GSG ...JMAXCHAP                           [#MEND BY NEWFIXED ETC   
  11 3H#6 ...ZLCHAPTAB      +AENDCHAPS-KTAB  
   9 3JR2    ZBSLEN         #02260000
  18 3K=L    PMOD           +0                  [LP MODIFIER STORAGE WORD
  20 3KQ=    ZLINKA         +0                  [TO HOLD LINK ADDRS. OF ROUTINES 
  12 3L9W    ZLINKC         +0                  [
  17 3LC4 ...SAVE1           +0                     [ ACC 1 STORAGE  
  18 3LJ= ...SAVE4           +0                        [ ACC 4 STORAGE   
   6 3LL2 ...#UNS  JPSCF 
  19 3LMQ ...SCFCT       +0                 [TEMPORARY COUNT OVER PMSCFREAD  
   4 3LPG    #   
  14 3M96    #     TABLE OF JUMPS TO CONVERSION ROUTINES 
   4 3MNQ    #   
   8 3N8B    RTNS  BRN      ROCT 
   8 3NN2          BRN      RCHA 
   8 3P7L          BRN      RDECS
   8 3PM=          BRN      RDECP
   9 3Q6W          BRN      RDECDEC  
   4 3QLG    #   
  18 3R66    #     TABLE OF REDTAPE MNEMONICS AND PRINT FORMAT INDICATORS
   4 3RKQ    #   
  17 3S5B    #     NOW AT END OF SEGMENT BECAUSE OF PMLIST EXPANSION 
   4 3SK2    #   
   4 3T4L    #   
   4 3TJ=    #   
  13 3W3W    #     TABLE OF START ADDRESSES OF BLOCKS
   4 3WHG    #   
   4 3X36    TAB 
   5 3XGQ    #REP  6 
   5 3Y2B          +0
   4 3YG2    #   
  18 3Y_L    #     TABLE GIVING LENGTHS TO BE PRINTED FROM BLOCKS IN TAB 
   4 3_F=    #   
   4 3_YW    TABL
   5 42DG    #REP  6 
   5 42Y6          +0
   4 43CQ    #   
  20 43XB    #     TABLE GIVING POSITION OF NEXT WORD TO PRINT FROM BLOCKS IN TAB
   4 44C2    #   
   4 44WL    TABC
   5 45B=    #REP  6 
   5 45TW          +0
   4 46*G    #   
  21 46T6    #     TABLE CONTAINING IDENTITY BLOCK TABLE POINTERS FOR EACH BLK IN TAB
   4 47#Q    #   
   4 47SB    TABI
   5 48#2    #REP  6 
   5 48RL          +0
   4 49?=    #   
  21 49QW    #     TABLE CONTAINING LINK ELEMENT COUNT FOR WHEN PRINTING BLINK BLOCKS
  21 4==G    #           ALSO TO HOLD IND. OF WHEN TO PRINT CHAP.NAME IN ACT. BLOCK  
   4 4=Q6    #   
   5 4?9Q    TABBL   
   5 4?PB    #REP  6 
   5 4#92          +8
   4 4#NL    #   
  19 4*8=    #     ROUTINE TO GET ADDRESS OF NEXT BLOCK IN CHAIN WHEN FORWARD
   7 4*MW    #     CHAINING  
  13 4B7G    #     ENTRY  X2=ADDRESS OF CURRENT BLOCK
  17 4BM6    #     EXIT 0 &  IF FORWARD AND BACKWARD POINTERS CORRECT
  13 4C6Q    #         X2,X3=ADDRESS OF NEXT BLOCK   
   8 4CLB    #            X0=LINK
  14 4D62    #     EXIT 0 0  IF BREAK IN CHAIN DETECTED  
  13 4DKL    #            X3=ADDRESS OF NEXT BLOCK   
  16 4F5=    #     (SEARCHA:ENTRY POINT FOR FIRST BLOCK ON CHAIN 
   4 4FJW    #   
   5 4G4G    SEARCH  
  17 4GJ6          LDX   3  BPTR(2)             [J IF BPTR IN CURRENT
  16 4H3Q ...      TXU   3  XBACKPR(1)          [BLOCK INCORRECT 
   8 4HHB          BCS      S1   
   5 4J32    SEARCHA 
  18 4JGL          LDX   3  FPTR(2)             [GET ADD. OF NEXT BLOCK  
  19 4K2= ...S2    STO   2  XBACKPR(1)          [STORE ADDR. OF CURRENT BLOCK
   7 4KFW     PMCORES 3,S1   
  18 4K_G ...      TXL   3  ENDFIX                 [J IF ADDR. INVALID   
   8 4LF6          BCC      S12  
   9 4LYQ ...     TXU   3  XBACT(1)  
  16 4MDB          BCS      S1                  [BECAUSE TO SMALL
   7 4MY2    S12   LDX   2  3
   7 4NCL          EXIT  0  1
  16 4NX=    S1    EXIT  0  0                   [BREAK IN CHAIN  
   4 4PBW    #   
  20 4PWG    #     ROUTINE TO GET ADDRESS OF NEXT BLOCK IN CHAIN, WHEN BACKWARD  
   7 4QB6    #     CHAINING  
  10 4QTQ    #     ENTRY & EXIT AS SEARCH
  16 4R*B    #     (SEARCHC:ENTRY POINT FOR FIRST BLOCK ON CHAIN 
   4 4RT2    #   
   5 4S#L    SEARCHB 
  17 4SS=          LDX   3  FPTR(2)             [J IF FPTR IN CURRENT
  16 4T?W ...      TXU   3  XBACKPR(1)          [BLOCK INCORRECT 
   8 4TRG          BCS      S1   
   5 4W?6    SEARCHC 
  18 4WQQ          LDX   3  BPTR(2)             [GET ADD. OF NEXT BLOCK  
   8 4X=B          BRN      S2   
   4 4XQ2    #   
  13 4Y9L    #     ROUTINE TO PRINT A ROW OF BLOCKS  
  14 4YP=    #     ENTRY    XBLCOUNT=NO. OF BLOCKS IN ROW
  16 4_8W    #             TAB TABLE=HOLDS START ADDR  OF BLOCKS 
  10 4_NG    #                    X7=LINK
  11 5286    #     EXIT    ALL ACCS UNDEFINED
   4 52MQ    #   
  15 537B ...PRINT STO   7  ZLINKC(1)           [STORE LINK  
  16 53M2 ...      CALL  7  (JPRINT1)             [THROW A LINE  
   4 546L    #   
   4 54L=    #   
  17 555W    #     SET UP NO. OF WORDS IN EACH BLOCK TO BE PRINTED   
   4 55KG    #   
  16 5656 ...      LDX   1  FXPM1          [ MODIFIER+BLOCK COUNT
  18 56JQ    PR1   LDX   3  TAB(1)              [GET ADDR. OF NEXT BLOCK 
  19 574B          LDCH  6   ATYPE(3)           [ PICK UP TOP CH = BLOCK TYPE
   8 57J2 ...      SMO      FXPM1
  18 58H=          STO   1  UNE                 [ PRESERVE BLOCK COUNT   
  20 592W ...      LDX   1  FXPM1               [ NEED A ZERO MODIFIER FOR LDCH  
  16 59GG    RP2                                [ LOOP RE ENTRY  
  20 5=26          LDX   7  ZPMABLOX(1)         [ PICK UP COMPLETE WORD FROM LIST
  21 5=FQ          BZE   7   RP5                [ IF ZERO, NO (MORE)0TYPES TO CHECK  
  19 5=_B          LDCH  7  ZPMABLOX(1)         [ PICK UP A TYPE FROM LIST   
  18 5?F2          SBX   7  6                   [LISTED TYPE=BLOCK TYPE  
  17 5?YL          BZE   7  RP3                 [ JUMP IF TYPES MATCH
  18 5#D=          BUX   1  RP2                 [ ELSE LOOK FOR ANOTHER  
  21 5#XW    RP3                                [ FIND OUT IF A SUB TYPE HAS BEEN SPD
   8 5*7N ...      SMO      FXPM1
  20 5*CG          LDX   7  ZPMABLOX+1+JPMNOFTYPES [ LOAD LAST WORD OF GAP AREA  
   8 5*M# ...      SBX   1  FXPM1
  19 5*X6          SLL   7  0(1)               [ MOVE APT BIT INTO TEST SPOT 
   8 5B6Y ...      ADX   1  FXPM1
  21 5BBQ          BNG   7  RP4                 [ JUMP IF NO NEED TO CHECK SUBTYPE   
  17 5BWB          LDCT  2  #200                [ = STOZ 2, BCHX 2 / 
   7 5CB2          SMO      3
  21 5CTL          LDCH  7  ATYPE(2)            [ PICK UP 2ND CHARACTER, = SUBTYPE   
   8 5D5D ...      SMO      FXPM1
   8 5D*=          STO   7  STYPE
   7 5DSW          SMO      1
  10 5F#G          LDCH  7  ZPMABLOX(2)  
   8 5FJ# ...      SMO      FXPM1
  17 5FS6          SBX   7  STYPE               [ COMPARE SUBTYPES   
  17 5G?Q          BZE   7  RP4                 [ JUMP IF THEY MATCH 
  20 5GRB          BUX   1  RP2                 [ ELSE LOOK FOR NEXT MAIN TYPE   
   4 5H?2    RP4 
  10 5HQL          LDX   7  ZPMABLOX(1)  
   8 5J==          ANDN  7  #7777
   8 5JPW          ADN   7  A1   
   8 5J_N ...      SMO      FXPM1
  17 5K9G          LDX   1  UNE                 [ RESTORE BLOCK COUNT
   8 5KP6          BRN      PR2  
   4 5L8Q    RP5 
   8 5LDJ ...      SMO      FXPM1
  17 5LNB          LDX   1  UNE                 [ RESTORE BLOCK COUNT
   9 5MML          LDN   7  512+A1   
   8 5MXD ...      SMO      FXPM1
   9 5N7=          SBX   6   XBLINK  
  20 5NLW          BZE   6   PR2                 [ IF BLINK BLOCK LEAVE LEN = 512
   8 5NWN ...      SMO      FXPM1
  17 5P6G          LDX   7  ZJACT               [ ELSE SET LEN = MAX 
   4 5PL6    PR2 
  15 5Q5Q          LDX   6  ASIZE(3)            [ GET LENGTH 
   8 5Q*J ...      SMO      FXPM1
  15 5QKB          ANDX  6  MASK                [ KO CH PTR  
  18 5R52          TXL   7   6                  [ COMPARE WITH REQUEST   
  16 5RJL          BCS      PR3                 [ CHOOSE THE LESS
   7 5S4=          LDX   7  6
   4 5SHW    PR3 
   8 5SRN ...      SMO      FXPM1
  18 5T3G          TXL   7   XA1                [ COMPARE WITH RED TAPE  
  17 5TH6          BCC      PR4                 [ CHOOSE THE GREATER 
   8 5W2Q          LDN   7  A1   
   4 5WGB    PR4 
  19 5X22          STO   7   TABL(1)            [ STO NO OF WORES TO PRINT   
   9 5XFL          ADX   7  TAB(1)   
   7 5X_=     PMCORES 7,,PR5 
  20 5YDW          LDX   7  CORES               [LENGTH TO MAXIMUM NO. OF WORDS  
  14 5YYG          SBX   7  TAB(1)              [POSSIBLE
   9 5_D6          STO   7  TABL(1)  
   7 5_XQ    PR5   ADN   1  1
   7 6262 ...      LDX   5  1
   8 62#= ...      SBX   5  FXPM1
   8 62GG ...      SMO      FXPM1
  16 62NQ ...      TXU   5  XBLCOUNT            [J IF STILL MORE 
  16 62X2          BCS      PR1                 [BLOCKS TO PRINT 
   4 63BL    #   
  10 63W=    #     CODING TO PRINT BLOCKS
   4 64*W    #   
  16 64TG ...PP3   LDX   1  FXPM1       [ MODIFIER+BLOCK COUNT   
  15 65*6    PP2   LDX   5  TABC(1)             [WORD POINTER
  18 65SQ          TXL   5  TABL(1)             [NO. OF WORDS TO PRINT   
  21 66#B          BCS      PP                  [J IF BLOCK PRINT STILL CONTINUING   
   9 66S2          LDX   3  TAB(1)   
   9 67?L          LDCH  7  ATYPE(3) 
   8 67R= ...PP18  CALL  7  (JUP)
   8 6=P2                   +20  
   8 6?8L          BRN      PP11 
  19 6?N= ...PP    CALL  7  (JUP)                 [UPDATE PRINT BUFFER MOD.  
   8 6#7W                   +2   
   7 6#MG          LDN   7  1
   8 6#X# ...      SMO      FXPM1
  18 6*76          STO   7  PRINTING            ['STILL PRINTING' IND.   
  16 6*LQ          BNZ   5  PP4                 [J IF NOT FPTR   
   4 6B6B    #   
  17 6BL2    #     CODING TO PRINT ACTUAL ADDR. OF FORWARD POINTER   
   4 6C5L    #   
  17 6CK=          LDX   2  TAB(1)              [GET ADDR. OF BLOCK  
   9 6D4W          LDX   5  TAB(1)   
  17 6DJG ...      CALL  7  (JDECN)               [CONVERT TO DECIMAL
  18 6F46          LDN   3  3                   [CONVERSION ROUT. IND.   
   4 6FHQ    #   
  17 6G3B    #     TO CONVERT CONTENTS OF A WORD IN SPECIFIED FORMAT 
   4 6GH2    #   
  18 6H2L    PP1   LDX   5  0(2)                [GET CONTENTS OF ADDR.   
   7 6HG=          SMO      3
  21 6H_W          CALL  7  RTNS                [J TO APPROPRIATE CONVERSION ROUTINE 
   4 6JFG    #   
  13 6J_6    #     TO UPDATE COUNTS,PRINT A LINE ETC.
   4 6KDQ    #   
   7 6KYB    PP11  LDN   7  1
  17 6LD2          ADS   7  TABC(1)             [UPDATE WORD COUNT   
  17 6LXL    PP17  ADN   1  1                   [UPDATE BLOCK COUNT  
   7 6M5W ...      LDX   7  1
   8 6M#6 ...      SBX   7  FXPM1
   8 6MGB ...      SMO      FXPM1
   9 6MNL ...      TXU   7  XBLCOUNT 
  18 6MWW          BCS      PP2                 [J IF STILL BLOCKS IN ROW
   8 6NBG ...      SMO      FXPM1
   9 6P*Q          LDX   7  PRINTING 
   9 6PTB          BZE   7  PRINTFIN 
  16 6Q*2 ...      CALL  7  (JPRINT1)             [PRINT A LINE  
   8 6QSL          BRN      PP12 
   5 6R#=    PRINTFIN
   8 6RJ4 ...      LDX   1  FXPM1
  16 6RRW          LDX   7  JOZ                 [  RESET JPMOD   
   8 6S?G          STO   7  JPMOD
   9 6SR6 ...      STOZ     TABL(1)  
   9 6T=Q ...      LDN   6  TABL(1)  
   9 6TQB ...      LDN   7  TABL+1(1)
  16 7272          MOVE  6  17                  [ZEROISE TABLES  
   7 72LL          LDN   6  8
   9 736= ...      STO   6  TABBL(1) 
   9 73KW ...      LDN   6  TABBL(1) 
  19 745G ...      LDN   7  TABBL+1(1)          [RESET TABLE FOR BLINK BLOCKS
   7 74K6          MOVE  6  5
  14 74WG ...      LDX   0  ZLINKC(1)              [ EXIT
   7 757W ...      EXIT  0  0
   8 75F= ...PP12  SMO      FXPM1
   9 75QL ...      STOZ     PRINTING 
   9 7642          LDN   7  ATYPE+1  
   9 76HL          TXU   7  TABC-1(1)
  19 773=          BCS      PP3                 [J IF LAST WORD NOT = ATYPE  
   7 77GW          BRN      T
   4 782G    #   
   9 78G6    #     IF NOT PRINT FPTR 
   4 78_Q    #   
   8 79#7 ...PP4   SMO      FXPM1
   8 79LJ ...      TXL   5  XA1  
  18 79_2          BCC      PP5                 [J IF NOT RED TAPE WORD  
   4 7=DL    #   
  15 7=Y=    #     TO SET UP TO PRINT IN REDTAPE WORD FORMAT 
   4 7?CW    #   
   9 7?XG          ADX   5  TABC(1)  
  19 7#C6          ADN   5  REDTAPE             [X5=POINTER TO REDTAPE TABLE 
   8 7#LY ...      ADX   5  FXPM1
   4 7#WQ    #   
  14 7*BB    #     TO ANALYSE NEXT WORD IN IDENT. TABLE  
   4 7*W2    #   
   7 7B*L    PP7   SMO      5
  18 7BT=          LDX   7  0                   [GET MNEMONIC FROM TABLE 
  16 7C#W          BZE   7  PP15                [J IF NO MNEMONIC
   8 7CJN ...      SMO      FXPM1
   9 7CSG          TXU   7  UPARROW  
  19 7D#6          BCC      PP8                 [J IF END OF TABLE REACHED   
   7 7DRQ          LDCH  6  7
   8 7F?B          SRL   7  18   
   8 7FR2          SBN   7  #72  
  18 7G=L          BNZ   7  PP14                [J IF NOT RECURSIVE TABLE
   4 7GQ=    #   
  20 7H9W    #     TO BACKSPACE IDENT. TABLE POINTER WHEN END OF RECURSIVE TABLE 
   4 7HPG    #   
   7 7J96    PP10  SBN   5  2
   7 7JNQ          SMO      5
  17 7K8B          STOZ     0                   [CLEAR MNEMONIC ENTRY
   7 7KN2          SBN   6  2
  20 7L7L          BNZ   6  PP10                [J IF NOT AT START OF RECURSION  
   7 7LM=          ADN   5  2
  19 7M6W          STO   5  TABI(1)             [RESET IDENT. TABLE POINTER  
   4 7MLG    #   
  21 7N66    #     TO PRINT REOATIVE ADR. BEFORE PRINT CONTENTS IN SPECIFIED FORMAT  
   4 7NKQ    #   
   9 7P5B    PP15  LDX   5  TABC(1)  
  21 7PK2 ...      CALL  7  (JDECN)               [CONVERT RELATIVE ADR. TO DECIMAL  
   9 7Q4L          LDX   5  TABI(1)  
  19 7QJ=          SBN   5  1                   [GET POINTER TO PRINT FORMAT 
   8 7R3W          BRN      PP16 
   4 7RHG    #   
  21 7S36    #     TO PRINT ADDR. AND CONTENTS TO FORMAT SPECIFIED IN AN IDENT /OR   
   8 7SGQ    #     REDTAPE) TABLE
   4 7T2B    #   
   8 7TG2 ...PP14  CALL  7  (JUP)
   8 7T_L                   +2   
  20 7WF=          MVCH  5  5                   [MOVE IDENT MNEMONICS INTO BUFFER
   8 7WYW          STO   6  JPMOD
   7 7XDG    PP16  SMO      5
   7 7XY6          LDCH  3  0
   9 7YCQ    PP9   LDX   2  TAB(1)   
  20 7YXB          ADX   2  TABC(1)             [X2=ADDR. OF WORD TO BE CONVERTED
   8 7_C2          BRN      PP1  
   4 7_WL    #   
  10 82B=    #     IF NOT A RED TAPE WORD
   4 82TW    #   
  17 83*G    PP5   LDX   3  TAB(1)              [START ADDR. OF BLOCK
  14 83T6          LDCH  7  ATYPE(3)            [GET TYPE
   8 844Y ...      SMO      FXPM1
   9 84#Q          TXU   7  XBLINK   
  16 84SB          BCC      PBL                 [J IF BLINK BLOCK
   8 85#2 ...      SMO      FXPM1
   8 87Q6          TXL   7  XACT 
  17 889Q          BCC      PAC                 [J IF ACTIVITY BLOCK 
   8 88?N ...      FSHCODE  AORB 
   4 88*L ...(   
   9 88CJ ...      LDX   7  ATYPE(3) 
   8 88FG ...      SRL   7  12   
  10 88HD ...      SBN   7  FSH+FSHREQ   
  18 88KB ...      BZE   7  PFRQ                [J IF FSH/FSHREQ BLOCK   
   4 88M# ...)   
   9 88PB    PP13  LDX   5  TABI(1)  
  17 8992          BZE   5  PP8                 [J IF NO IDENT. LIST 
   7 89NL          LDN   7  2
  19 8=8=          ADS   7  TABI(1)             [UPDATE IDENT. TABLE POINTER 
   8 8=MW          BRN      PP7  
   4 8?7G    #   
  14 8?M6    #     IF NO SPECIFIED PRINT FORMAT FOR WORD 
   4 8#6Q    #   
  18 8#LB    PP8   STOZ     TABI(1)             [STOZ WHEN BRN FROM PP7  
  21 8*62    PP6   LDX   5  TABC(1)             [GET ADDR. RELATIVE TO START OF BLOCK
  19 8*KL ...      CALL  7  (JDECN)               [CONVERT ADDR. TO DEC(N)   
  19 8B5=          STOZ     3                   [CONVERT CONTENTS TO OCTAL   
   8 8BJW          BRN      PP9  
   4 8C4G    #   
  18 8CJ6    #     CODING TO CONVERT CONTENTS OF ADDR. IN VARIOUS FORMATS
   4 8D3Q    #   
   6 8DHB    #     OCTAL 
   4 8F32    #   
   8 8FGL ...ROCT  LDX   3  JOCT 
   8 8G2= ...RN    CALL  7  (JUP)
   8 8GFW                   +2   
   8 8G_G          CALL  7  (3)  
   8 8HF6          BRN      PP11 
   4 8HYQ    #   
   7 8JDB    #     CHARACTERS
   4 8JY2    #   
   8 8KCL ...RCHA  CALL  7  (JUP)
   8 8KX=                   +7   
   9 8LBW ...      CALL  7  (JCHA)   
   8 8LWG          BRN      PP11 
   4 8MB6    #   
   8 8MTQ    #     DECIMAL(+N)   
   4 8N*B    #   
   8 8NT2 ...RDECS CALL  7  (JUP)
   8 8P#L                   +3   
   9 8PS= ...      CALL  7  (JDECS)  
   8 8Q?W          BRN      PP11 
   4 8QRG    #   
   8 8R?6    #     DECIMAL(N.N)  
   4 8RQQ    #   
   8 8S=B ...RDECP LDX   3  JDECP
   8 8SQ2          BRN      RN   
   4 8T9L    #   
   8 8TP=    #     DECIMAL(N/N)  
   4 8W8W    #   
   5 8WNG    RDECDEC 
   8 8X86 ...      CALL  7  (JUP)
   8 8XMQ                   +4   
   9 8Y7B ...      CALL  7  (JDECDEC)
   8 8YM2          BRN      PP11 
   4 8_6L    #   
  11 8_L=    #     IF PRINTING BLINK BLOCK   
   4 925W    #   
   9 99D=    PBL   LDX   7  TABBL(1) 
   8 99XW          BZE   7  PBL1 
   7 9=CG          SBN   7  1
  20 9?BQ          STO   7  TABBL(1)            [SUBTRACT FROM LINK ELEMENT COUNT
   8 9?WB          BRN      PP13 
   8 9#B2    PBL1  LDN   7  ALINK
  19 9#TL          STO   7  TABBL(1)            [RE-SET LINK ELEMENT COUNT   
   9 9**=    PBL2  ADX   5  TAB(1)   
   7 9*SW          SBN   5  1
  20 9B#G          SMO      5                   [GET CONTENTS OF LAST WORD,I.E.  
  18 9BS6          LDX   3  0                   [ALINK1 OF LINK ELEMENT  
   8 9CRB          SRL   3  12   
   8 9D?2          BZE   3  PP13 
  16 9DQL          CALL  7  NAMECHAP            [GET CHAPTER NAME
   8 9F==          BRN      PP17 
   8 9F?M ...      FSHCODE  AORB 
   4 9F*4 ...(   
   9 9FBF ...PFRQ  LDX   7  TABBL(1) 
   8 9FCW ...      BZE   7  PP13 
  10 9FF? ...      LDN   7  FSHOFFSET+1  
   9 9FGN ...      TXU   7  TABC(1)  
   8 9FJ5 ...      BCS      PP13 
  21 9FKG ...      STOZ     TABBL(1)             [SET UP CHAP NAME PRINTED INDICATOR 
  19 9FLX ...      BRN      PBL2                 [ & GO TO PRINT CHAPTER NAME
   4 9FN# ...)   
   4 9FPW    #   
  11 9G9G    #     IF PRINTING ACTIVITY BLOCK
   4 9GP6    #   
   9 =3S2    PAC   LDX   7  TABBL(1) 
  19 =4?L          BZE   7  PP13                [J IF CHAPTER NAME PRINTED   
   9 =4R=          LDN   7  ALINK1+1 
   9 =5=W          TXU   7  TABC(1)  
  19 =5QG          BCS      PP13                [J IF LAST WORD NOT =ALINK1  
  21 =6=6          STOZ     TABBL(1)            [SET CHAPTER NAME PRINTED INDICATOR  
   8 =6PQ          BRN      PBL2 
   4 ?WC2    #   
   4 ?WWL    #   
  21 ?XB=    #     CODING TO GET AND INSERT TYPE AND SUBTYPE MNEMONICS IN LISTING AND
  13 ?XTW    #     SET UP TABLES OF BLOCK IDENTIFIERS
   4 ?Y*G    #   
   4 ?YT6    T   
   4 ?_#Q    #   
  13 ?_SB    #     READ DOWN TYPE AND SUBTYPE TABLES 
   4 #2#2    #   
   8 #2MP ...      LDX   1  FXPM1
  12 #33D ...      PMOVE    PMTYPES,PMACTEND(1)  
   8 #3C7 ...      LDX   1  FXPM1
   4 #3QW    #   
  21 #4=G    #     MOVE TYPE MNEMONICS INTO PRINT BUFFER & SET UP POINTER TO SUBTYPE 
   4 #4Q6    #   
   8 #59Q ...T1    CALL  7  (JUP)
   8 #5PB                   +6   
   9 #692          LDX   3  TAB(1)   
  16 #6NL          LDCH  2  ATYPE(3)            [GET BLOCK TYPE  
   8 #6YD ...      SMO      FXPM1
   8 #78=          MPY   2  THREE
   8 #7D4 ...      SMO      FXPM1
  18 #7MW          ADX   3  PMACTEND            [ADDR. OF TYPE MNEMONIC  
   8 #87G          LDX   4  JPMOD
  21 #8M6          MVCH  3  8                   [MOVE TYPE MNEMONIC INTO PR. BUFFER  
   8 #96Q          LDX   7  0(3) 
  18 #9LB          STO   7  TABI(1)             [STORE SUBTYPE REFERENCE 
   8 #=62 ...      CALL  7  (JUP)
   8 #=KL                   +14  
   7 #?5=          ADN   1  1
   7 #??G ...      LDX   7  1
   8 #?FQ ...      SBX   7  FXPM1
   8 #?N2 ...      SMO      FXPM1
  18 #?W= ...      TXU   7  XBLCOUNT            [J IF MORE BLOCKS IN ROW 
   8 ##4G          BCS      T1   
  16 ##J6 ...      CALL  7  (JPRINT1)             [PRINT A LINE  
   4 #*3Q    #   
  18 #*HB    #     TO GET SUBTYPE MNEMONIC & B/S ADDR. OF IDENT TABLES   
   4 #B32    #   
   8 #BCG ...      LDX   1  FXPM1
  11 #BS2 ...      PMSUBSREAD  PMACTEND(1)   
   8 #C8G ...      LDX   1  FXPM1
   8 #CK2 ...      CALL  7  (JUP)
   8 #C_G                   +2   
   9 #DF6    T6    LDX   2  TAB(1)   
   7 #DYQ          BCHX  2  /
  17 #FDB          LDCH  7  ATYPE(2)            [GET SUBTYPE OF BLOCK
   9 #FY2          LDXC  4  TABI(1)  
  20 #GCL          BCS      T3                  [J IF NO SUBTYPE BUT IDENT. TABLE
  15 #GX=          BZE   4  T3                  [J IF NEITHER
   7 #HBW          STOZ     3
  18 #HWG          SRC   34 12                  [X4=LENGTH OF S/F ENTRIES
  19 #JB6          SRL   3  12                  [X3=ADDR. RELATIVE TO PMTYPES
   8 #JKY ...      SMO      FXPM1
  21 #JX3 ...      ADX   3  PMACTEND             [X3 POINTS TO START OF SUBTYPE TABLE
   8 #K87 ...      SMO      FXPM1
   8 #KGJ ...      SBX   3  ZLPMT
  19 #KT2    T5    LDCH  6  0(3)                [GET SUBTYPE FROM TABLE ENTRY
   7 #L#L          TXU   6  7
  17 #LS=          BCC      T4                  [J IF REQUIRED ENTRY 
   7 #M?W ...      ADN   3  3
  17 #MRG ...      SBN   4  3                   [SEARCH DOWN TABLE   
   8 #N?6          BNZ   4  T5   
   4 #N*P ...#   
  14 #ND# ...#      TO MOVE 'NOT LISTED ' INTO THE BUFFER
   4 #NGX ...#   
   8 #NKH ...T7    SMO      FXPM1
  17 #NXY ...      LDN   3  NOTLISTED           [IF ENTRY NOT FOUND  
  21 #P#_ ...      BCHX  3  /                    [X3 POINTS TO THE 1ST CHAR OF 'NOT L
   8 #PQ2 ...      CALL  7  (JUP)
  20 #Q9L ...               +4                   [4 SPACES BEFORE TYPE OR SUBTYPE
   8 #QP=          LDX   4  JPMOD
  19 #R8W ...      MVCH  3  11                   [MOVE NOT LISTED INTO BUFFER
   8 #RNG          LDX   4  0(3) 
   8 #S86 ...      CALL  7  (JUP)
   8 #SMQ ...               +16  
   8 #T7B          BRN      T2   
   4 #T8J ...#   
  15 #T9Q ...#      TO MOVE SUBTYPE MNEMONIC INTO THE BUFFER 
   4 #T=Y ...#   
  21 #T#6 ...T4    BCHX  3  /                    [X3 POINTS TO THE 1ST CHAR OF SUBTYP
   8 #T*# ...      CALL  7  (JUP)
   8 #TBG ...               +4   
   8 #TCN ...      LDX   4  JPMOD
  21 #TDW ...      MVCH  3  7                    [MOVE SUBTYPE MNEMONIC INTO BUFFER  
   8 #TG4 ...      LDX   4  0(3) 
   8 #TH= ...      CALL  7  (JUP)
   8 #TJD ...               +16  
   8 #TKL ...      BRN      T2   
  19 #TM2    T3    BNZ   7  T7                  [J IF SUBTYPE VALUE NOT #00  
  20 #W6L ...      CALL  7  (JUP)                 [UPDATE PRINT BUFFER MOD. IF NO
  14 #WL=                   +20                 [SUBTYPE 
  19 #X5W    T2    STO   4  TABI(1)             [STORE IDENT. TABLE REFERENCE
   7 #XKG          ADN   1  1
   7 #XRQ ...      LDX   7  1
   8 #Y22 ...      SBX   7  FXPM1
   8 #Y8= ...      SMO      FXPM1
   9 #YBG ...      TXU   7  XBLCOUNT 
  18 #YJQ          BCS      T6                  [J IF STILL BLOCKS IN ROW
  16 #_4B ...      CALL  7  (JPRINT1)             [PRINT A LINE  
   4 #_J2    #   
  13 *23L    #     CODING TO READ DOWN IDENT. TABLES 
   4 *2H=    #   
  16 *32W ...      LDX   1  FXPM1          [ BLOCK COUNT+MODIFIER
  17 *3GG ...      LDX   4  PMACTEND(1)         [START ADDR. IN CORE 
  17 *426    T11   LDX   6  TABI(1)             [B/S ADDR. OF TABLE  
  16 *4FQ          BZE   6  T10                 [J IF NO TABLE   
  14 *4_B          LDN   0  JREP2+1             [LENGTH  
   8 *54T ...      SMO      FXPM1
   8 *58# ...      STO   1  SAVE1
   8 *5?R ...      LDX   1  FXPM1
   9 *5C= ...      STO   4  SAVE4(1) 
  10 *5GP ...      PMBSADD  GEO,0,0,4,6  
   8 *5L8 ...      LDX   1  FXPM1
   9 *5PM ...      LDX   4  SAVE4(1) 
   9 *5T6 ...      LDX   1  SAVE1(1) 
  20 *6#Q ...      STO   4  TABI(1)             [IDENT. TABLE ADDRESS  IN CORE   
  19 *6SB ...      ADN   4  JREP2+1           [CORE ADDRESS OF NEXT TRANSFER 
   7 *7CG    T10   ADN   1  1
   7 *7KQ ...      LDX   6  1
   8 *7S2 ...      SBX   6  FXPM1
   8 *82= ...      SMO      FXPM1
   9 *88G ...      TXU   6  XBLCOUNT 
  18 *8BQ          BCS      T11                 [J IF STILL BLOCKS IN ROW
   8 *8P7 ...      SMO      FXPM1
  21 *93J ...      STO   4  PMACTENDA           [CORE ADDR. FOLLOWING IDENT. TABLES  
   8 *9B2          BRN      PP3  
   4 *9TL    #   
  19 *=*=    #     ROUTINE TO GET AND INSERT CHAPTER NAME AFTER ALINK1 WORD  
   9 *=SW    #     ENTRY    X7=LINK  
  14 *?#G    #              X3=CONTENTS OF ALINK1 WORD   
  11 *?S6    #           JPMOD=OUTPUT MOD.   
  13 *#?Q    #     EXIT  JPMOD=UPDATED OUTPUT MOD.   
  10 *#RB    #      X3X5,X6,X7=UNDEFINED 
   4 **?2    #   
   5 **QL    NAMECHAP
   8 *B2D ...      SMO      FXPM1
   8 *B== ...      STO   1  SAVE1
   8 *BG4 ...      LDX   1  FXPM1
  15 *BPW ...      STO   7  ZLINKA(1)           [STORE LINK  
  10 *B_N ...      TXL   3  ZLCHAPTAB(1) 
  18 *C9G          BCC      NC3                 [J IF CHAPTER NO. ILLEGAL
  21 *CP6          LDXC  3  KTAB(3)             [GET CHAPTER ENTRY FROM F.STORE TABLE
  17 *D8Q          BCS      NC1                 [J IF CHAP. IN CORE  
   6 *DDJ ...#UNS  JPSCF 
   4 *DNB ...(   
   8 *DY8 ...      SLL   3  10   
   7 *F82 ...      LDX   5  3
   7 *FCS ...      SLL   3  1
   7 *FML ...      SRL   3  4
   4 *FXD ...)   
   6 *G7= ...#UNS   JPSCF
   4 *GC4 ...#SKI
   4 *GLW ...(   
  16 *GWN ...      SLL   3  11                  [ CLEAR BITS 0-8 
  17 *H6G ...      SRL   3  4                   [ H MULTIPLY BY 128  
   4 *HB# ...)   
   9 *HL6 ...      TXL   3  ZBSLEN(1)
  18 *JKB          BCC      NC3                 [J IF B/S ADDR. ILLEGAL  
  17 *K52          LDN   6  2                   [LENGTH OF TRANSFER  
   6 *K6B ...#UNS  JPSCF 
   4 *K7Q ...(   
   8 *K96 ...      BPZ   5  NOTSF
   9 *K=G ...      STO   6  SCFCT(1) 
  13 *K?W ...      PMSCFREAD SCFCT(1),PMACTENDA(1),3 
   8 *K*= ...      BRN      NICF 
   5 *KBL ...NOTSF   
   4 *KD2 ...)   
  13 *KFG ...      PMBSADD  GEO,0,6,PMACTENDA(1),3   
   8 *KW2 ...NICF  LDX   1  FXPM1
  18 *L=G ...      LDX   5  PMACTENDA(1)        [CORE ADDR. OF TRANSFER  
   8 *LM2 ...NC2   CALL  7  (JUP)
   8 *M3G                   +6   
  21 *MH6          MVCH  5  8                   [MOVE CHAP. NAME INTO PRINT BUFFER   
   8 *N2Q ...      CALL  7  (JUP)
   8 *NGB                   +12  
   9 *NRQ ...      LDX   7  ZLINKA(1)
   9 *P56 ...      LDX   1  SAVE1(1) 
   7 *PBG ...      EXIT  7  0
   9 *PMW ...NC1   ANDX  3  MASK(1)  
   7 *P_=     PMCORES 3,NC3  
   8 *QDW          LDN   5  A1(3)
   8 *QYG          BRN      NC2  
  18 *RD6 ...NC3   LDN   5  QUERIES(1)          [SET TO PRINT '????????' 
   8 *RXQ          BRN      NC2  
   4 *SCB    #   
  16 *SX2    # ENTRY POINT TO PRINT OUT THE CURRENT ACTIVITY AND 
  12 *TBL    # ITS ASSOCIATED BLOCKS IN MINI-PM  
   4 *TW=    #   
   5 *W*W    XK1PMACT
   4 *WTG    #   
  21 *X*6    #     CODING TO DECIDE IF CURRENT ACTIVITY IS TO BE PRINTED,AND IF SO TO
  11 *XSQ    #     STORE START ADDR. OF BLOCK
   4 *Y#B    #   
   8 *YB_ ...      LDX   1  FXPM1
  10 *YFJ ...      ADS   1  PMACTEND(1)  
  10 *YJ7 ...      ADS   1  PMACTENDA(1) 
   9 *YLQ ...      PMDLGET PMTYPES,,2
  16 *YP* ...      STO   2  ZLPMT(1)                [STO LPMTYPES
  20 *YS2          LDX   2  FX2                 [GET ADDR. OF CURRENT ACTIVITY   
   9 *_?L ...      ANDX  2  MASK(1)  
   8 *_R= ... PMCORES 2,(JPMSEG) 
   9 B2=W ...      TXL   2  X45(1)   
   9 B2QG ...      BCS      (JPMSEG) 
  18 B3=6          LDCH  5  ATYPE(2)            [GET TYPE OF CURRENT ACT.
   9 B3PQ ...      TXL   5  XACT(1)  
  21 B49B ...      BCS      (JPMSEG)              [J IF FX2 DOESN'T POINT AT ACTIVITY
   9 B4P2          SBN   5  BAT/#100 
  19 B58L ...      BZE   5  (JPMSEG)              [J IF FX2 POINTS AT BLANKET
  21 B5N= ...      STO   2  TAB(1)              [STORE ADDR. OF 1ST BLOCK TO PRINT   
   4 B67W    #   
  16 B6MG    # SET UP HEADING AND PREPARE TO SEARCH FOR BLOCKS   
  13 B776    # ASSOCIATED WITH THE CURRENT ACTIVITY  
   4 B7LQ    #   
   8 B86B ...      CALL  7  (JUP)
   8 B95L                   +4   
  18 B9K= ...      LDN   5  NAMEA(1)            [MOVE 'CURRENT ACTIVITY' 
  16 B=4W          MVCH  5  16                  [INTO LP BUFFER  
   8 B=JG          STO   6  JPMOD
   9 B?46          LDX   4  BPTR(2)  
  10 B?BH ...      STO   4  XBACKPR(1)   
   7 B?NY ...      LDN   6  1
   4 B#3B    #   
  19 B#H2    # SEARCH FOR BLOCKS ASSOCIATED WITH CURRENT ACTIVITY. BRANCH TO 
  16 B*2L    # PRINT OUT BLOCKS WHEN NEXT ACTIVITY BLOCK IS FOUND
   4 B*G=    #   
  10 B*SM ...MP4   STO   6  XBLCOUNT(1)  
   9 BB74 ...      CALL  0  SEARCH   
  18 BBFG          BRN      MP1                 [BRANCH IF BREAK IN CHAIN
   9 BB_6          LDCH  4  ATYPE(2) 
  19 BCDQ ...      TXL   4  XACT(1)             [BRANCH OUT TO PRINT BLOCKS  
  19 BCYB          BCC      MP2                 [IF NEXT IS AN ACTIVITY BLOCK
   7 BD88 ...      SMO      6
  18 BDD2          STO   2  TAB(1)              [STORE ADDRESS OF BLOCK  
   7 BDXL ...      ADN   6  1
   9 BFC= ...      LDX   7  SKIP(1)  
   8 BFWW          BNZ   7  MP3  
   7 BGBG          LDN   4  2
  16 BGW6 ...      TXU   6  4                   [TEST IF HEADING 
  16 BH*Q          BCS      MP3                 [NEEDS SETTING UP
   9 BHTB ...      LDN   4  NAMEB(1) 
  16 BJ*2 ...      LDX   5  JPMOD               [SET UP HEADING  
  18 BJSL ...      MVCH  4  22                  ['AND ASSOCIATED BLOCKS' 
  15 BK#= ...      STO   5  JPMOD               [IN LP BUFFER
   8 BKRW          BRN      MP5  
   7 BL?G    MP3   LDN   4  4
   8 BLR6          BZE   7  MP6  
   7 BM=Q          SBN   4  2
   7 BMQB ...MP6   TXL   6  4
   8 BN=2          BCS      MP5  
  18 BNPL          LDN   4  5                   [UPDATE LP MODIFIER FOR  
  18 BP9=          ADS   4  JPMOD               ['BREAK IN CHAIN' MESSAGE
  17 BPNW ...MP5   TXU   6  SIX(1)              [IF ROW NOT  FINISHED
  20 BQ8G          BCS      MP4                 [BRANCH BACK TO GET NEXT BLOCK   
   4 BQN6    #   
  14 BR7Q    # ROW OF BLOCKS FINISHED SO PRINT OUT BLOCKS
   4 BRMB    #   
  17 BS72 ...      STO   6  XBLCOUNT(1)         [STORE BLOCK COUNT   
  16 BSLL ...      STO   6  SKIP(1)             [SKIP NOW NONZERO
  18 BT6= ...      CALL  7  (JPRINT2)             [PRINT HEADING IF ANY  
   8 BTKW          CALL  7  PRINT
  10 BW5G ...      SMO      XBLCOUNT(1)  
  16 BWK6 ...      LDX   2  TAB-1(1)            [GET ADDRESS OF  
  17 BX4Q ...      LDN   6  0                   [LAST BLOCK PRINTED  
   8 BXJB          BRN      MP4  
   4 BY42    #   
  14 BYHL    # PRINT OUT BLOCKS AS NEXT ACTIVITY BLOCK OR
  10 B_3=    # BREAK IN CHAIN ENCOUNTERED
   4 B_GW    #   
   8 C22G ...MP1   CALL  7  (JUP)
   8 C2G6                   +2   
  17 C2_Q ...      LDN   5  NAMEC(1)            [SET UP IN LP BUFFER 
  18 C3FB          MVCH  5  15                  ['BREAK IN CHAIN' MESSAGE
   9 C3_2 ...MP2   CALL  7  (JPRINT2)
  10 C4DL ...      LDX   3  XBLCOUNT(1)  
  19 C4Y= ...      BZE   3  (JPMSEG)                [ J IF NO BLOCKS TO PRINT
  16 C5CW          CALL  7  PRINT               [PRINT OUT BLOCKS
   9 C5XG ...      BRN      (JPMSEG) 
   4 C6C6    #   
  21 C6WQ    #     ENTRY POINT TO PRINT WHOLE OF ACTIVITY CHAIN IN FULL PM LISTING   
   4 C7BB    #   
   5 C7W2    XK2PMACT
   4 C8*L    #   
   8 C8T=    #     PRINT HEADING 
   4 C9#W    #   
   8 C9HJ ...      LDX   1  FXPM1
  10 C9Q= ...      ADS   1  PMACTEND(1)  
  10 C9YY ...      ADS   1  PMACTENDA(1) 
   9 C=7L ...      PMDLGET PMTYPES,,2
  15 C=B# ...      STO   2  ZLPMT(1)            [STO LPMTYPES
   9 C=K2 ...      LDN   6  NAMEE(1) 
   9 C=RQ          LDX   7  JLPMOD   
  15 CB96          MVCH  6  25                  [SET UP AND  
  16 CBNQ ...      CALL  7  (JPRINT2)             [PRINT HEADING 
   4 CC8B    #   
  16 CCN2    #     GET START ADDR. OF FIRST BLOCK TO BE PRINTED  
   4 CD7L    #   
   8 CDM=          LDX   2  FX2  
  15 CF6W ...      STO   2  START(1)            [END OF CHAIN
   7 CG66     PMCORES 2,RB2  
   9 CGKQ ...      TXL   2  X45(1)   
   8 CH5B          BCS      RB2  
  19 CHK2          LDX   3  BPTR(2)             [STORE BACKWARD POINTER FOR  
  19 CJ4L ...      STO   3  XBACKPR(1)          [WHEN SEARCH ROUTINES ENTERED
   8 CJJ=          BRN      R2   
   4 CK3W    #   
  20 CKHG    #     GET START ADDRS OF BLOCKS TO BE PRINTED AND STORE IN TAB TABLE
   4 CL36    #   
   9 CLGQ ...R     LDN   3  SEARCH(1)
   9 CM2B ...      LDX   7  XIND(1)  
  18 CMG2          BZE   7  R1                  [J IF FORWARD CHAINING   
  10 CM_L ...      LDN   3  SEARCHB(1)   
  18 CNF=    R1    CALL  0  (3)                 [GET ADDR. OF NEXT BLOCK 
  17 CNYW          BRN      RB                  [J IF BREAK IN CHAIN 
   9 CPDG ...      TXU   2  START(1) 
  19 CPY6          BCC      REND                [J IF END OF CHAIN REACHED   
   4 CQCQ    R2  
  18 CQXB ...      TXU   2  XBACT(1)            [TEST AND FAIL THROUGH   
  16 CRC2          BCS      R3                  [IF ADDR.=BACT   
  18 CRNQ ...      STO   2  XBASEPR(1)          [SET BACT PRINTED IND.   
  10 CS2G ...R3    SMO      XBLCOUNT(1)  
  19 CS#= ...      STO   2  TAB(1)              [STORE START ADDR. OF BLOCK  
  18 CSL2 ...      LDX   3  XBLCOUNT(1)            [UPDATE BLOCK COUNT   
   7 CSXQ ...      ADN   3  1
  10 CT9G ...      STO   3  XBLCOUNT(1)  
  21 CTH= ...      TXU   3  SIX(1)              [TEST AND FULL THROUGH IF SIX BLOCKS 
  17 CTT6          BCS      R                   [SET UP FOR PRINTING 
   4 CW#Q    #   
   8 CWSB    #     PRINT BLOCKS  
   4 CX#2    #   
  18 CXRL ...R9    LDX   3  XBLCOUNT(1)         [J IF NOTHING TO PRINT   
   8 CY?= ...      BZE   3  R4   
  12 C_Q6    #     CODE TO SET UP ROW HEADINGS   
   4 D29Q    #   
   4 D2PB    #   
   8 D392 ...      CALL   7 (JUP)
   8 D3NL                     +3 
  10 D48= ...     LDX   5    ROWCNT(1)   
   8 D4MW           ADN   5   1  
  10 D57G ...      STO   5   ROWCNT(1)   
   9 D5M6 ...      CALL  7  (JDECN)  
   8 D66Q ...      CALL   7 (JUP)
   8 D6LB                     -8 
   9 D762 ...      LDN    6  NAMEL(1)
   9 D7KL          LDX    7  JPMOD   
   8 D85=          MVCH   6  4   
   9 D8JW ...      CALL  7  (JPRINT2)
  15 D9J6          CALL  7  PRINT               [PRINT BLOCKS
   9 D=3Q ...R4    LDXC  7  XIND(1)  
  17 D=HB          BCS      R5                  [J IF END OF CHAIN   
   4 D?32    #   
  11 D?GL    #     PREPARE TO PRINT NEXT ROW 
   4 D#2=    #   
  18 D#FW          BZE   7  R7                  [J IF FORWARD CHAINING   
   7 D#_G          SBN   7  1
  20 D*F6          BZE   7  R7                  [J IF 'BACKWARD CHAINING' HEADING
  14 D*YQ                                       [PRINTED 
   9 DBDB ...      STO   7  XIND(1)  
   9 DBY2 ...      LDN   6  NAMEG(1) 
   8 DCCL          LDX   7  JOZ  
   7 DCX=          ADN   7  1
  15 DDBW          MVCH  6  17                  [SET UP AND  
  19 DDWG ...      CALL  7  (JPRINT2)             [PRINT 'BACKWARD CHAINING' 
  10 DFB6 ...      STOZ     XBLCOUNT(1)  
  10 DFTQ ...      LDN   3  SEARCHC(1)   
   8 DG*B          LDX   2  FX2  
  10 DGT2 ...      LDXC  7  XBASEPR(1)   
  19 DH#L          BCC      R1                  [J IF BACK CHAINING FROM FX2 
   8 DHS=          LDN   2  BACT 
  19 DJ?W          BRN      R1                  [J IF BACK CHAINING FROM BACT
  10 DJRG ...R7    SMO      XBLCOUNT(1)  
  19 DK?6 ...      LDX   2  TAB-1(1)            [ADDR. OF LAST BLOCK PRINTED 
  15 DKQQ ...      STOZ     XBLCOUNT(1)         [BLOCK COUNT 
   7 DL=B          BRN      R
   4 DLQ2    #   
  10 DM9L    #     END OF CHAIN REACHED  
   4 DMP=    #   
  10 DN8W ...R5    LDX   7  XBASEPR(1)   
  18 DNNG ...      BNZ   7  (JPMSEG)              [EXIT IF BACT PRINTED  
   4 DP86    #   
  12 DPMQ    #     SET TO PRINT CHAIN FROM BACT  
   4 DQ7B    #   
  15 DQM2 ...      CALL  7  (JPRINT2)             [THROW A   
  15 DR6L ...      CALL  7  (JPRINT2)             [FEW LINES 
   9 DRL= ...      LDN   6  NAMEF(1) 
   8 DS5W          LDX   7  JOZ  
   7 DSKG          ADN   7  1
  15 DT56          MVCH  6  26                  [SET UP AND  
  16 DTJQ ...      CALL  7  (JPRINT2)             [PRINT HEADING 
   8 DW4B          LDN   2  BACT 
  15 DWJ2 ...      STO   2  START(1)            [END OF CHAIN
   8 DX3L          LDCT  7  256  
  19 DXH= ...      STO   7  XBASEPR(1)          [INDICATE PRINTING FROM BASE 
   9 DY2W ...      STOZ     XIND(1)  
  10 DYGG ...      STOZ     XBLCOUNT(1)  
  10 D_26 ...      LDN   3  SEARCHA(1)   
   8 D_FQ          BRN      R1   
   4 D__B    #   
   9 F2F2    #     IF BREAK IN CHAIN 
   4 F2YL    #   
   9 F3D= ...RB    LDX   7  XIND(1)  
  20 F3XW          BNZ   7  REND                [J IF A BREAK HAS ALREADY OCCURED
  19 F4CG          LDN   7  2                   [SET TO BACKWARD CHAIN AND   
  21 F4X6 ...RB1   STO   7  XIND(1)             [ALSO PRINT 'BACKWARD CHAINING' HEAD.
   8 F5BQ          BRN      R9   
   4 F5WB    #   
   8 F6B2    #     IF FX2 ILLEGAL
   4 F6TL    #   
   8 F7*=    RB2   LDX   7  JOZ  
   7 F7SW          ADN   7  1
   9 F8#G ...      LDN   6  NAMEH(1) 
   8 F8S6          MVCH  6  11   
  18 F9?Q ...      CALL  7  (JPRINT2)             [PRINT 'FX2 INVALID'   
   4 F9RB    #   
  11 F=?2    #     TO SET END OF CHAIN IND.  
   4 F=QL    #   
   8 F?==    REND  LDCT  7  256  
   8 F?PW          BRN      RB1  
   4 F#9G    #   
   5 F#P6    REDTAPE 
  10 F#_L ...               8H00000000   
  10 F*=6 ...               8HBPTR   3   
  10 F*GL ...               8HASIZE  3   
  10 F*R6 ...               8HAFLAG  0   
  10 FB3L ...               8HATYPE  0   
  10 FB#6 ...               8HBACK1  3   
  10 FBJL ...               8HBACK2  0   
  10 FBT6 ...               8HALOGL  3   
  10 FC5L ...               8HARGNO  0   
   9 FCB6 ...               4H____   
   4 FCLW    #   
   4 FDL6    #   
   5 FF5Q ...ZPMACT  
   4 FFKB    #   
   4 FG52    #END
   8 ____ ...14623273000100000000
