VERSION E05

PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:1    
        1        1        /*M* DAB$GATE - Format a two word gate into English. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=2
                 7        ,IAD=0,PRB */
        8        8        /*P* NAME:        DAB$GATE
        9        9             PURPOSE:     To convert a two word gate into English.
       10       10             DESCRIPTION: The gate description is placed into a static buffer
       11       11                          that may be printed by DAF$WRITE with %T%S codes. */
       12       12
       13       13        DAB$GATE: PROC (GATE);
       14       14
       15       15        %INCLUDE B$OBJECT_C;
       16     3445        %INCLUDE DA_ANLZ_R;
       17     3458        %INCLUDE DA_SYMBOLS_R;
       18     3471        %INCLUDE DA_TEXTC_C;
       19     3502
       20     3503    1   DCL 1 GATE ALIGNED,
       21     3504    1         2 LOCKFLG UBIN WORD,
       22     3505    1         2 U REDEF LOCKFLG,
       23     3506    1           3 * UBIN HALF UNAL,
       24     3507    1           3 ER UBIN HALF UNAL,
       25     3508    1         2 CUN UBIN BYTE UNAL,
       26     3509    1         2 PNO UBIN BYTE UNAL,
       27     3510    1         2 L,
       28     3511    1           3 ER UBIN HALF UNAL;
       29     3512
       30     3513    1   DCL POS UBIN;
       31     3514    1   DCL N UBIN;
       32     3515    1   DCL OFS UBIN;
       33     3516    1   DCL P$ PTR;
       34     3517
       35     3518        %B$EDEF;
       36     3588        %TEXTC (NAME=TEXT$C,STCLASS=BASED);
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:2    
       37     3612
       38     3613        %TEXTC (NAME=COMMA,TEXT="','");
       39     3637        %TEXTC (NAME=UEQ,TEXT="'U='");
       40     3661        %TEXTC (NAME=LEQ,TEXT="'L='");
       41     3685        %TEXTC (NAME=PLUS,TEXT="'+'");
       42     3709        %TEXTC (NAME=DOT,TEXT="'.'");
       43     3733
       44     3734    1   DCL DAS$IC2PED ENTRY(2) ALTRET;
       45     3735
       46     3736        %EJECT;
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:3    
       47     3737        /*F* NAME:        DAB$GATE
       48     3738             PURPOSE:     This routine formats a two word gate into English.
       49     3739             DESCRIPTION: The gate description is placed into a static buffer
       50     3740                          that may be printed by DAF$WRITE with %T%S codes. */
       51     3741        /*D* NAME:        DAB$GATE
       52     3742             ENTRY:       DAB$GATE
       53     3743             CALL:        CALL DAB$GATE (GATE);
       54     3744             INPUT:       GATE - Two word gate to be formatted.
       55     3745             OUTPUT:      DA_GATETXT - Textc of formatted gate in English.
       56     3746             DESCRIPTION: The output format is S_CUN in decimal, S_PNO in
       57     3747                          decimal, last unlocker as ENTDEF+.offset, and last
       58     3748                          locker as ENTDEF+.offset . S_CUN will not appear if
       59     3749                          it is zero, unlocker will appear only if the gate is
       60     3750                          unlocked. The formatted gate will appear as:
       61     3751                          ".cun,cpu,U=entdef+.oct,L=entdef+.oct" */
       62     3752
       63     3753    1         POS = 0;
       64     3754    1         IF GATE.CUN ~= 0 THEN
       65     3755    2           DO;
       66     3756    2           N = GATE.CUN;
       67     3757    2           CALL MOVE (DOT);
       68     3758    2           CALL CNVRT (N,8);
       69     3759    2           CALL MOVE (COMMA);
       70     3760    2           END;
       71     3761    1         N = GATE.PNO;
       72     3762    1         CALL CNVRT (N,10);
       73     3763    1         CALL MOVE (COMMA);
       74     3764    1         IF GATE.LOCKFLG ~= 0 THEN
       75     3765    2           DO;
       76     3766    2           N = GATE.U.ER;
       77     3767    2           OFS = N;
       78     3768    2           CALL MOVE (UEQ);
       79     3769    2           CALL DAS$IC2PED (N,P$) ALTRET (NPED0);
       80     3770    2           OFS = N - P$->B$EDEF.ISADDR;
       81     3771    2           P$ = PINCRC (PINCRW (DA_DNAME$,P$->B$EDEF.NPOINTER),1);
       82     3772    2           CALL MOVE (P$->TEXT$C);
       83     3773    2           IF OFS ~= 0 THEN
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:4    
       84     3774    3             DO;
       85     3775    3             CALL MOVE (PLUS);
       86     3776    3   NPED0:
       87     3777    3             CALL MOVE (DOT);
       88     3778    3             CALL CNVRT (OFS,8);
       89     3779    3             END;
       90     3780    2           CALL MOVE (COMMA);
       91     3781    2           END;
       92     3782    1         N = GATE.L.ER;
       93     3783    1         OFS = N;
       94     3784    1         CALL MOVE (LEQ);
       95     3785    1         CALL DAS$IC2PED (N,P$) ALTRET (NPED1);
       96     3786    1         OFS = N - P$->B$EDEF.ISADDR;
       97     3787    1         P$ = PINCRC (PINCRW (DA_DNAME$,P$->B$EDEF.NPOINTER),1);
       98     3788    1         CALL MOVE (P$->TEXT$C);
       99     3789    1         IF OFS ~= 0 THEN
      100     3790    2           DO;
      101     3791    2           CALL MOVE (PLUS);
      102     3792    2   NPED1:
      103     3793    2           CALL MOVE (DOT);
      104     3794    2           CALL CNVRT (OFS,8);
      105     3795    2           END;
      106     3796
      107     3797    1         DA_GATETXT.L = POS;
      108     3798
      109     3799    1         RETURN;
      110     3800
      111     3801        %EJECT;
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:5    
      112     3802
      113     3803    1   CNVRT: PROC (N,R);
      114     3804
      115     3805    2   DCL N UBIN;
      116     3806    2   DCL R SBIN;
      117     3807    2   DCL I UBIN;
      118     3808    2   DCL W SBIN;
      119     3809    2   DCL P UBIN;
      120     3810    2   DCL TABL CHAR(0) CONSTANT INIT ('0123456789ABCDEF');
      121     3811
      122     3812    2         P = 0;
      123     3813    2         W = N;
      124     3814    3           DO UNTIL (W = 0);
      125     3815    3           W = W / R;
      126     3816    3           P = P + 1;
      127     3817    3           END;
      128     3818    2         W = N;
      129     3819    2         POS = POS + P;
      130     3820    3           DO I = 1 TO P;
      131     3821    3           CALL INSERT (DA_GATETXT.C,POS - I,1,SUBSTR (TABL,MOD (W,R),1));
      132     3822    3           W = W / R;
      133     3823    3           END;
      134     3824
      135     3825    2         RETURN;
      136     3826
      137     3827    2   END CNVRT;
      138     3828
      139     3829        %EJECT;
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:6    
      140     3830
      141     3831    1   MOVE: PROC (TEXTC);
      142     3832
      143     3833    2   DCL 1 TEXTC CALIGNED,
      144     3834    2         2 L UBIN BYTE UNAL,
      145     3835    2         2 C CHAR (TEXTC.L);
      146     3836
      147     3837    2         CALL INSERT (DA_GATETXT.C,POS,TEXTC.L,TEXTC.C);
      148     3838    2         POS = POS + TEXTC.L;
      149     3839
      150     3840    2         RETURN;
      151     3841
      152     3842    2   END MOVE;
      153     3843
      154     3844    1   END DAB$GATE;

PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:7    
--  Include file information  --

   DA_TEXTC_C.:E05TOU  is referenced.
   DA_SYMBOLS_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_ANLZ_R.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure DAB$GATE.

   Procedure DAB$GATE requires 210 words for executable code.
   Procedure DAB$GATE requires 16 words of local(AUTO) storage.

    No errors detected in file DAB$GATE.:E05TSI    .

PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:8    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:9    
          MINI XREF LISTING

B$EDEF.ISADDR
      3542**DCL      3770>>ASSIGN   3786>>ASSIGN
B$EDEF.NPOINTER
      3544**DCL      3771>>ASSIGN   3787>>ASSIGN
B$EDEF.OU
      3536**DCL      3542--REDEF
CNVRT
      3803**PROC     3758--CALL     3762--CALL     3778--CALL     3794--CALL
COMMA
      3633**DCL      3759<>CALL     3763<>CALL     3780<>CALL
DAS$IC2PED
      3734**DCL-ENT  3769--CALL     3785--CALL
DA_DNAME$
      3467**DCL      3771>>ASSIGN   3787>>ASSIGN
DA_GATETXT.C
      3455**DCL      3821<<CALLBLT  3837<<CALLBLT
DA_GATETXT.L
      3455**DCL      3797<<ASSIGN
DA_SYMSEG.P
      3466**DCL      3467--REDEF
DOT
      3729**DCL      3757<>CALL     3777<>CALL     3793<>CALL
GATE
      3503**DCL        13--PROC
GATE.CUN
      3508**DCL      3754>>IF       3756>>ASSIGN
GATE.L.ER
      3511**DCL      3782>>ASSIGN
GATE.LOCKFLG
      3504**DCL      3505--REDEF    3764>>IF
GATE.PNO
      3509**DCL      3761>>ASSIGN
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:10   
GATE.U.ER
      3507**DCL      3766>>ASSIGN
I IN PROCEDURE CNVRT
      3807**DCL      3820<<DOINDEX  3821>>CALLBLT
LEQ
      3681**DCL      3784<>CALL
MOVE
      3831**PROC     3757--CALL     3759--CALL     3763--CALL     3768--CALL     3772--CALL     3775--CALL
      3777--CALL     3780--CALL     3784--CALL     3788--CALL     3791--CALL     3793--CALL
N
      3514**DCL      3756<<ASSIGN   3758<>CALL     3761<<ASSIGN   3762<>CALL     3766<<ASSIGN   3767>>ASSIGN
      3769<>CALL     3770>>ASSIGN   3782<<ASSIGN   3783>>ASSIGN   3785<>CALL     3786>>ASSIGN
N IN PROCEDURE CNVRT
      3805**DCL      3803--PROC     3813>>ASSIGN   3818>>ASSIGN
NPED0
      3777**LABEL    3769--CALLALT
NPED1
      3793**LABEL    3785--CALLALT
OFS
      3515**DCL      3767<<ASSIGN   3770<<ASSIGN   3773>>IF       3778<>CALL     3783<<ASSIGN   3786<<ASSIGN
      3789>>IF       3794<>CALL
P IN PROCEDURE CNVRT
      3809**DCL      3812<<ASSIGN   3816<<ASSIGN   3816>>ASSIGN   3819>>ASSIGN   3820>>DOINDEX
P$
      3516**DCL      3769<>CALL     3770>>ASSIGN   3771<<ASSIGN   3771>>ASSIGN   3772>>CALL     3772>>CALL
      3785<>CALL     3786>>ASSIGN   3787<<ASSIGN   3787>>ASSIGN   3788>>CALL     3788>>CALL
PLUS
      3705**DCL      3775<>CALL     3791<>CALL
POS
      3513**DCL      3753<<ASSIGN   3797>>ASSIGN   3819<<ASSIGN   3819>>ASSIGN   3821>>CALLBLT  3837>>CALLBLT
      3838<<ASSIGN   3838>>ASSIGN
R IN PROCEDURE CNVRT
      3806**DCL      3803--PROC     3815>>ASSIGN   3821>>CALLBLT  3822>>ASSIGN
TABL IN PROCEDURE CNVRT
      3810**DCL      3821>>CALLBLT
TEXT$C
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:11   
      3608**DCL      3772<>CALL     3788<>CALL
TEXT$C.L
      3609**DCL      3610--IMP-SIZ  3772>>CALL     3788>>CALL
TEXTC IN PROCEDURE MOVE
      3833**DCL      3831--PROC
TEXTC.C IN PROCEDURE MOVE
      3835**DCL      3837>>CALLBLT
TEXTC.L IN PROCEDURE MOVE
      3834**DCL      3835--IMP-SIZ  3837>>CALLBLT  3837>>CALLBLT  3838>>ASSIGN
UEQ
      3657**DCL      3768<>CALL
W IN PROCEDURE CNVRT
      3808**DCL      3813<<ASSIGN   3814>>DOUNTIL  3815<<ASSIGN   3815>>ASSIGN   3818<<ASSIGN   3821>>CALLBLT
      3822<<ASSIGN   3822>>ASSIGN
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:12   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DAB$GATE File=DAB$GATE.:E05TSI                                TUE 07/29/97 12:38 Page:13   
              MINI UREF LISTING

BLANK_LINE    3456**DCL
DAB$GATE      13**PROC
DA_ALTSHI    3470**DCL
DA_ALTSYM    3470**DCL
DA_ANLZERR    3453**DCL
DA_CUN    3453**DCL
DA_DELTA_FLG    3454**DCL
DA_DFLTACCT    3468**DCL
DA_DFLT_RADIX    3456**DCL
DA_DOMAIN    3453**DCL
DA_EDCTL    3470**DCL
DA_ENTDEF$    3467**DCL
DA_MAXCHANS    3456**DCL
DA_MONPTR$    3469**DCL
DA_SDCTL    3469**DCL
DA_SYMBOL    3468**DCL
DA_SYMDEF$    3467**DCL
DA_SYMERR    3467**DCL
DA_TRAPPED    3455**DCL
DA_XUR$    3455**DCL
DBD$FEPMAP$    3457**DCL
DBD_ERR    3454**DCL
DB_BOBCAT$    3456**DCL
DB_HANDQ$    3457**DCL
DB_ROS$    3457**DCL
