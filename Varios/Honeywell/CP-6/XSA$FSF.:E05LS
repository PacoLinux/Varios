VERSION E05

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:1    
        1        1        /*M* XSA$FSF - contains subroutines and entry points for fast
        2        2         file access routines */
        3        3        /*T***********************************************************/
        4        4        /*T*                                                         */
        5        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        6        6        /*T*                                                         */
        7        7        /*T***********************************************************/
        8        8        /*X* PLM=3,DMC=YES */
        9        9        XSA$FSF: PROC( FPT_OPERATION, XSA_PARAM ) ALTRET;
       10       10        /*F*  NAME: XSA$FSF
       11       11              PURPOSE: Contains subroutines and entry points for fast file
       12       12                 access routines.
       13       13              DESCRIPTION: In general, all entry points require two arguments:
       14       14                 (1) the FPT for the desired operation and (2) the XSA_PARAM
       15       15                 which contains all contextual information.
       16       16         ***/
       17       17
       18       18         /***
       19       19          *** INCLUDE files:
       20       20          ***/
       21       21
       22       22        %INCLUDE CP_6;
       23      103        %INCLUDE CP_6_SUBS;
       24      643        %INCLUDE FM$GRAN;
       25      712        %INCLUDE F$CP6V_C;
       26      938        %INCLUDE F_ERRORS_C;
       27     1178        %INCLUDE XS_MACRO_C;
       28     1222        %MACRO ERRCODE(NAME=' ',STCLASS="CONSTANT SYMDEF",CODE=0,SEV=0);
       29     1223        DCL 1 NAME ALIGNED STCLASS,
       30     1224              2 * BIT(12) UNAL INIT('3023'O), /*'XS'*/
       31     1225              2 * BIT(6) UNAL INIT('01'O),  /*'A'*/
       32     1226              2 * BIT(1) UNAL INIT('0'B),
       33     1227              2 * UBIN(14) UNAL INIT(CODE),
       34     1228              2 * UBIN(3) UNAL INIT(0);
       35     1229        %MEND;
       36     1230        /*
       37     1231            Generate error codes returned by XSA (just one).  The extractable error
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:2    
       38     1232            commentary for this error is at the end of the FMF$PMME proc in that module.
       39     1233        */
       40     1234            %ERRCODE(NAME=E_UNFAST,CODE=%E$UNFAST);
       41     1242
       42     1243         /***
       43     1244          *** SYMREFs:
       44     1245          ***/
       45     1246
       46     1247    1   DCL B$TCB$ PTR SYMREF;
       47     1248
       48     1249         /***
       49     1250          *** Parameters:
       50     1251          ***/
       51     1252
       52     1253    1   DCL FPT_OPERATION UBIN DALIGNED;   /* FPT for current operation     */
       53     1254        %XSA_PARAM( FPTN=XSA_PARAM, STCLASS= ); /* User's contextual information */
       54     1284         /***
       55     1285          *** Locals:
       56     1286          ***/
       57     1287
       58     1288    1   DCL BBUF$ PTR AUTO;                     /* To (de)blocking buffer   */
       59     1289    1   DCL CRECX$ PTR AUTO;                    /* To current control word  */
       60     1290    1   DCL DATA$ PTR AUTO;
       61     1291    1   DCL DCB$ PTR AUTO;
       62     1292    1   DCL FPT$ PTR AUTO;                      /* To user's FPT            */
       63     1293    1   DCL N SBIN AUTO;                        /* "Number of" ...          */
       64     1294    1   DCL NUBX SBIN AUTO;           /* Ix of next free user buffer byte   */
       65     1295    1   DCL PRECORD BIT(1) AUTO;                /* PRECORD not READ         */
       66     1296    1   DCL READ_AT_LEAST_ONE BIT(1) AUTO;
       67     1297    1   DCL RECORD_SIZE SBIN AUTO;
       68     1298    1   DCL SKIPPED SBIN AUTO;                  /* Number skipped           */
       69     1299    1   DCL SMALL_BUFFER CHAR(1) AUTO;
       70     1300    1   DCL TOSKIP SBIN AUTO;              /* Number of records to skip     */
       71     1301    1   DCL UB$ PTR AUTO;                       /* To user's buffer         */
       72     1302    1   DCL UBYTES SBIN AUTO;                   /* Size of user's buffer    */
       73     1303    1   DCL VAREA$ PTR AUTO;                    /* Pointer to V area        */
       74     1304    1   DCL 1 V_ AUTO,
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:3    
       75     1305    1         2 * UBIN WORD,
       76     1306    1         2 VAREA$ PTR;
       77     1307
       78     1308    1   DCL 1 GDA27 ALIGNED AUTO,
       79     1309    1         2 * UBIN(9) UNAL,
       80     1310    1         2 GRAN UBIN HALF UNAL;
       81     1311    1   DCL UBIN27_GDA REDEF GDA27 UBIN(27);
       82     1312    1   DCL 1 GDA36 ALIGNED AUTO,
       83     1313    1         2 * UBIN HALF UNAL,
       84     1314    1         2 GRAN UBIN HALF UNAL;
       85     1315    1   DCL UBIN36_GDA REDEF GDA36 UBIN WORD;
       86     1316    1   DCL G$ PTR;
       87     1317    1   DCL GBYTES UBIN;
       88     1318    1   DCL WRDS SBIN;
       89     1319
       90     1320        %FPT_CLOSE( FPTN=CLOSE_FF, STCLASS=AUTO );
       91     1362        %FPT_OPEN( FPTN=OPEN_FF, STCLASS=AUTO );
       92     1471        %FPT_PRECORD( FPTN=PRECORD_FF, STCLASS=AUTO );
       93     1492        %FPT_READ( FPTN=READ_GRANULES, STCLASS=AUTO );
       94     1531        %FPT_WRITE( FPTN=WRITE_NEXT_GRANULE, STCLASS=AUTO );
       95     1562
       96     1563         /***
       97     1564          *** BASED:
       98     1565          ***/
       99     1566
      100     1567        %B$TCB;
      101     1570        %B$ALT;
      102     1578        %F$DCB;
      103     1635
      104     1636        %FPT_OPEN( FPTN=OPEN_FPT, STCLASS="BASED(FPT$)" );
      105     1745        %FPT$OPEN_V( FPTN=OPEN_FPTV, BASED="BASED(VAREA$)" );
      106     1760
      107     1761        %FPT_READ( FPTN=READ_FPT, STCLASS="BASED(FPT$)" );
      108     1800        %FPT$READ_V( FPTN=READ_FPTV, BASED="BASED(VAREA$)" );
      109     1807
      110     1808        %FPT_WRITE( FPTN=WRITE_FPT, STCLASS="BASED(FPT$)" );
      111     1839        %FPT$WRITE_V( FPTN=WRITE_FPTV, BASED="BASED(VAREA$)" );
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:4    
      112     1845
      113     1846        %FPT_CLOSE( FPTN=CLOSE_FPT, STCLASS="BASED(FPT$)" );
      114     1888        %FPT$CLOSE_V( FPTN=CLOSE_FPTV, BASED="BASED(VAREA$)" );
      115     1897
      116     1898        %FPT_PFIL( FPTN=PFIL_FPT, STCLASS="BASED(FPT$)" );
      117     1913        %FPT$PFIL_V( FPTN=PFIL_FPTV, BASED="BASED(VAREA$)" );
      118     1916
      119     1917        %FPT_PRECORD( FPTN=PRECORD_FPT, STCLASS="BASED(FPT$)" );
      120     1938        %FPT$PRECORD_V( FPTN=PRECORD_FPTV, BASED="BASED(VAREA$)" );
      121     1943
      122     1944        %FM$GRAN(BASED="BASED(BBUF$)");
      123     1948        %FM$CON(BASED="BASED(CRECX$)");
      124     1952        %FM$REL(BASED="BASED(CRECX$)");
      125     1955        %FM$KEYTBL;
      126     1958        %FM$KEYENT;
      127     1961        %FM$IRENT;
      128     1964        %FM$MISEG;
      129     1968    1   DCL BASED_WORD SBIN BASED;
      130     1969    1   DCL 1 GRAN BASED ALIGNED,
      131     1970    1         2 CRECNO UBIN HALF UNAL,
      132     1971    1         2 X UBIN HALF UNAL;
      133     1972    1   DCL NCHARS CHAR(N) BASED CALIGNED;
      134     1973
      135     1974        %EQU GRANULE_SIZE=1024;
      136     1975        %EQU GRANULE_SIZE_BYTES=4096;
      137     1976        %EQU BYTES_PER_WORD=4;
      138     1977    1   DCL 1 FULL_GRAN ALIGNED BASED,
      139     1978    1         2 * UBIN WORD,
      140     1979    1         2 NOT_FIRST_WORD(0:%(GRANULE_SIZE-2)) UBIN WORD;
      141     1980
      142     1981         /***
      143     1982          *** CONSTANT:
      144     1983          ***/
      145     1984
      146     1985        %FPT_CLOSE( FPTN=CLOSESAVEFPT,
      147     1986           STCLASS=CONSTANT,
      148     1987           DISP=SAVE );
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:5    
      149     2029
      150     2030        %FPT_READ( FPTN=READ_GRANULES_CONSTANT,
      151     2031           STCLASS=CONSTANT,
      152     2032           WAIT=YES,
      153     2033           FULL=YES,
      154     2034           KEYS=YES );
      155     2073
      156     2074        %FPT_WRITE( FPTN=WRITE_NEXT_GRANULE_CONSTANT,
      157     2075           STCLASS=CONSTANT,
      158     2076           FULL=YES,
      159     2077           WAIT=YES );
      160     2108
      161     2109        %FPT_CLOSE( FPTN=DEFAULT_CLOSE_FPT,
      162     2110           STCLASS=CONSTANT,
      163     2111           DISP=SAVE );
      164     2153
      165     2154        %FPT_OPEN( FPTN=DEFAULT_OPEN_FPT,
      166     2155           STCLASS=CONSTANT);
      167     2264
      168     2265        %FPT_PRECORD( FPTN=DEFAULT_PRECORD_FPT,
      169     2266           STCLASS=CONSTANT);
      170     2287
      171     2288        %VLP_ERRCODE( FPTN=E_WRITE,
      172     2289           STCLASS=CONSTANT,
      173     2290           FCG='3023'O,
      174     2291           MID='01'O,
      175     2292           MON='1'B,
      176     2293           SEV=0,
      177     2294           ERR#=%E$WRITE);
      178     2339
      179     2340        %VLP_ERRCODE( FPTN=E_READ,
      180     2341           STCLASS=CONSTANT,
      181     2342           FCG='3023'O,
      182     2343           MID='01'O,
      183     2344           MON='1'B,
      184     2345           SEV=0,
      185     2346           ERR#=%E$READ);
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:6    
      186     2391
      187     2392        %VLP_ERRCODE( FPTN=E_EOF,
      188     2393           STCLASS=CONSTANT,
      189     2394           FCG='3023'O,
      190     2395           MID='01'O,
      191     2396           MON='1'B,
      192     2397           SEV=0,
      193     2398           ERR#=%E$EOF);
      194     2443
      195     2444        %VLP_ERRCODE( FPTN=E_LD,
      196     2445           STCLASS=CONSTANT,
      197     2446           FCG='3023'O,
      198     2447           MID='01'O,
      199     2448           MON='1'B,
      200     2449           SEV=0,
      201     2450           ERR#=%E$LD);
      202     2495
      203     2496        %VLP_ERRCODE( FPTN=E_POS,
      204     2497           STCLASS=CONSTANT,
      205     2498           FCG='3023'O,
      206     2499           MID='01'O,
      207     2500           MON='1'B,
      208     2501           SEV=0,
      209     2502           ERR#=%E$POS);
      210     2547
      211     2548        %VLP_ERRCODE( FPTN=E_NOCONT,
      212     2549           STCLASS=CONSTANT,
      213     2550           FCG='3023'O,
      214     2551           MID='01'O,
      215     2552           MON='1'B,
      216     2553           SEV=0,
      217     2554           ERR#=%E$NOCONT);
      218     2599
      219     2600        %VLP_ERRCODE( FPTN=E_DI,
      220     2601           STCLASS=CONSTANT,
      221     2602           FCG='3023'O,
      222     2603           MID='01'O,
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:7    
      223     2604           MON='1'B,
      224     2605           SEV=0,
      225     2606           ERR#=%E$DI);
      226     2651        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:8    
      227     2652        /********************************************************************/
      228     2653    1   XSA$OPEN: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;
      229     2654        /*F*  NAME: XSA$OPEN
      230     2655              PURPOSE: Determines if file is a candidate for fast file access
      231     2656                 and opens file either or fast access or standard.  Initializes
      232     2657                 user's XSA_PARAM.
      233     2658         ***/
      234     2659
      235     2660        /********************/
      236     2661
      237     2662    1      IF XSA_PARAM.SIG1 ~= 'UNFA' AND XSA_PARAM.SIG2 ~= 'ST!?' THEN
      238     2663    1         XSA_PARAM.UNFAST# = '0'B;
      239     2664
      240     2665    1      FPT$ = ADDR(FPT_OPERATION);
      241     2666
      242     2667    1      V_ = OPEN_FPT.V_;
      243     2668    1      VAREA$ = V_.VAREA$;
      244     2669
      245     2670    1      XSA_PARAM.ERR = '0'B;
      246     2671
      247     2672         /***
      248     2673          *** Perform SETDCB open to determine initial suitability for fast
      249     2674          *** file access.
      250     2675          ***/
      251     2676
      252     2677    1      OPEN_FF = OPEN_FPT;
      253     2678    1      OPEN_FF.V_ = VECTOR(OPEN_FF.V);
      254     2679
      255     2680    1      OPEN_FF.V.SETDCB# = %YES#;
      256     2681    1      XSA_PARAM.DCB# = OPEN_FPTV.DCB#;
      257     2682    1      CALL M$OPEN( OPEN_FF ) ALTRET( RTN_OPEN_ERROR );
      258     2683    1      CALL XSA_CHECK_FILE ALTRET( NOT_FAST_FILE );
      259     2684
      260     2685         /***
      261     2686          *** Perform real open and redetermine suitability for fast file access.
      262     2687          ***/
      263     2688
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:9    
      264     2689    1      OPEN_FF.V.SETDCB# = VAREA$->OPEN_FPTV.SETDCB;
      265     2690    1      IF DCB$->F$DCB.FUN# = %CREATE#
      266     2691    1      THEN XSA_PARAM.FMOD = %YES#;
      267     2692    1      ELSE XSA_PARAM.FMOD = %NO#;
      268     2693           /* If any other file organizations are added to FSF, remember to
      269     2694              also add them to the monitor open code checks or open may change
      270     2695              this ublock open to sequential and we'll revert to unfast when
      271     2696              we don't want to.                                            */
      272     2697    1      OPEN_FF.V.ACS# = %UBLOCK#;
      273     2698    1      CALL M$OPEN( OPEN_FF ) ALTRET( RTN_OPEN_ERROR );
      274     2699    1      CALL XSA_CHECK_FILE( %UBLOCK# ) ALTRET( NOT_FAST_FILE_CLS );
      275     2700
      276     2701         /***
      277     2702          *** Initialize for first read or write.
      278     2703          ***/
      279     2704
      280     2705    1      XSA_PARAM.EOP = %EOP_NONE;
      281     2706    1      XSA_PARAM.CRECNO = 0;
      282     2707    1      XSA_PARAM.ARS# = DCB$->F$DCB.ARS#;
      283     2708    1      XSA_PARAM.CONT = '0'B;
      284     2709    1      RETURN;
      285     2710
      286     2711         /***
      287     2712          *** Error handling.
      288     2713          ***/
      289     2714
      290     2715    1   NOT_FAST_FILE_CLS: ; /* File not suitable...close since ACS wrong   */
      291     2716    1      CLOSE_FF = CLOSESAVEFPT;
      292     2717    1      CLOSE_FF.V_ = VECTOR(CLOSE_FF.V);
      293     2718    1      CLOSE_FF.V.DCB# = OPEN_FPTV.DCB#;
      294     2719    1      CALL M$CLOSE( CLOSE_FF ) ALTRET( RTN_OPEN_ERROR );
      295     2720    1      OPEN_FF.V.OPER.THISF# = '1'B;
      296     2721
      297     2722    1   NOT_FAST_FILE: ;    /* File not suitable...open for standard use    */
      298     2723    1      IF DCB$->F$DCB.ACS# = %UBLOCK#
      299     2724    1      THEN OPEN_FF.V.ACS# = %SEQUEN#;
      300     2725    1      XSA_PARAM.ORG = 0;                   /* Indicate not fast file   */
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:10   
      301     2726    1      OPEN_FF.V.SETDCB# = VAREA$->OPEN_FPTV.SETDCB;
      302     2727    1      CALL M$OPEN( OPEN_FF ) ALTRET( RTN_OPEN_ERROR );
      303     2728    1      XSA_PARAM.ARS# = DCB$->F$DCB.ARS#;
      304     2729    1      RETURN;
      305     2730
      306     2731    1   RTN_OPEN_ERROR: ;                       /* Error on open            */
      307     2732    1      XSA_PARAM.ORG = 0;                   /* Don't mislead user       */
      308     2733    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      309     2734    1      ALTRETURN;
      310     2735
      311     2736        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:11   
      312     2737        /****************************************/
      313     2738    1   XSA_CHECK_FILE: PROC( ACS_REQUIRED ) ALTRET;
      314     2739        /*F*  NAME:    XSA_CHECK_FILE
      315     2740              PURPOSE: Determines if file is a candidate for fast file access.
      316     2741                       The alternate return is taken if not.
      317     2742        */
      318     2743
      319     2744         /***
      320     2745          *** Parameters:
      321     2746          ***/
      322     2747
      323     2748    2   DCL ACS_REQUIRED UBIN WORD;
      324     2749            /* Only needs to be passed if F$DCB.ACS# must be other than
      325     2750               %SEQUEN# (e.g., %UBLOCK#) after the open is completed.      */
      326     2751
      327     2752        /********************/
      328     2753
      329     2754    2      DCB$ = DCBADDR( OPEN_FPTV.DCB# );
      330     2755    2      IF DCB$->F$DCB.ASN# ~= %FILE#
      331     2756    2        OR DCB$->F$DCB.SHARE# = %ALL#
      332     2757    2        OR (OPEN_FPTV.ACS ~= %SEQUEN# AND OPEN_FPTV.ACS ~= 0)
      333     2758    2      THEN ALTRETURN;      /* Not file or shared or not sequential    */
      334     2759
      335     2760           /* Check to be sure F$DCB.ACS# is really what is required after
      336     2761              the open.                                                    */
      337     2762
      338     2763    2      IF ADDR(ACS_REQUIRED) = ADDR(NIL)    /* SETDCB open              */
      339     2764    2      THEN IF OPEN_FPTV.ACS = 0 AND DCB$->F$DCB.ACS# ~= %SEQUEN#
      340     2765    2           AND DCB$->F$DCB.ACS# ~= %UBLOCK# AND DCB$->F$DCB.ACS# ~= 0
      341     2766    2         THEN ALTRETURN;
      342     2767    2         ELSE;
      343     2768    2      ELSE IF DCB$->F$DCB.ACS# ~= ACS_REQUIRED /* UBLOCK open         */
      344     2769    2         THEN ALTRETURN;
      345     2770
      346     2771    2      IF DCB$->F$DCB.SEED# THEN       /* Encryption seed was specified. */
      347     2772    2         ALTRETURN;
      348     2773
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:12   
      349     2774    2      N = DCB$->F$DCB.ORG#;
      350     2775    2      IF DCB$->F$DCB.FUN# ~= %IN# AND DCB$->F$DCB.FUN# ~= 0
      351     2776    2      THEN IF DCB$->F$DCB.FUN# ~= %CREATE#
      352     2777    2         THEN ALTRETURN;                  /* Not IN or CREATE         */
      353     2778    2         ELSE IF N ~= %CONSEC# AND N ~= 0
      354     2779    2            THEN ALTRETURN;          /* Not CREATE CONSEC or SETDCB   */
      355     2780    2            ELSE IF DCB$->F$DCB.CTG# OR DCB$->F$DCB.EXIST# = %OLDFILE#
      356     2781    2                 OR DCB$->F$DCB.FEXT
      357     2782    2               THEN ALTRETURN;            /* Can't catalog or extend  */
      358     2783    2               ELSE XSA_PARAM.INPUT = %NO#; /* Write only             */
      359     2784    2      ELSE XSA_PARAM.INPUT = %YES#;       /* Read only                */
      360     2785
      361     2786    2      IF N = 0 THEN RETURN;                /* SETDCB open with no ORG  */
      362     2787    2      IF NOT ( N = %INDEXED# OR N = %RELATIVE# OR N = %IREL#)
      363     2788    3      THEN DO;
      364     2789    3         IF NOT ( N = %KEYED# OR N = %CONSEC# )
      365     2790    3         THEN ALTRETURN; /* Not INDEXED, RELATIVE, IREL, KEYED, or CONSEC */
      366     2791    4         ELSE DO;
      367     2792    4            IF DCB$->F$DCB.COMP#
      368     2793    4            THEN ALTRETURN;
      369     2794    4            END;
      370     2795    3         END;
      371     2796
      372     2797    2      IF DCB$->F$DCB.DESC.BAD# THEN    /* File inconsistency detected. */
      373     2798    2         ALTRETURN;
      374     2799
      375     2800    2      XSA_PARAM.ORG = N; /* Setting XSA_PARAM.ORG indicates file suitable */
      376     2801
      377     2802    2      RETURN;
      378     2803
      379     2804    2   END XSA_CHECK_FILE;
      380     2805        /********************************************************************/
      381     2806        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:13   
      382     2807        /********************************************************************/
      383     2808    1   XSA$CLOSE: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;
      384     2809        /*F*  NAME: XSA$CLOSE
      385     2810              PURPOSE: Close DCB.
      386     2811         ***/
      387     2812
      388     2813        /********************/
      389     2814
      390     2815    1      FPT$ = ADDR(FPT_OPERATION);
      391     2816    1      XSA_PARAM.ERR = '0'B;
      392     2817
      393     2818    1      IF (CLOSE_FPT.V.DISP#~=%RELEASE#) AND
      394     2819    1        (XSA_PARAM.BBUF_.BUF$ ~= ADDR(NIL)) THEN
      395     2820    1         CALL XSA_FLUSH_GRAN ALTRET( CLOSE_ANYWAY );
      396     2821
      397     2822    1   CLOSE_ANYWAY: ;
      398     2823    1      CALL M$CLOSE( CLOSE_FPT ) ALTRET( RTN_OPEN_ERROR );
      399     2824
      400     2825    1      V_ = CLOSE_FPT.V_;
      401     2826    1      VAREA$ = V_.VAREA$;
      402     2827
      403     2828    1      DCB$ = DCBADDR( CLOSE_FPTV.DCB# );
      404     2829    1      IF DCB$->F$DCB.ACS# = %UBLOCK#
      405     2830    2      THEN DO;                            /* Change DCB.ACS to SEQUEN */
      406     2831    2         OPEN_FF = DEFAULT_OPEN_FPT;
      407     2832    2         OPEN_FF.V_ = VECTOR(OPEN_FF.V);
      408     2833    2         OPEN_FF.V.ACS# = %SEQUEN#;
      409     2834    2         OPEN_FF.V.DCB# = CLOSE_FPTV.DCB#;
      410     2835    2         OPEN_FF.V.SETDCB# = %YES#;
      411     2836    2         CALL M$OPEN( OPEN_FF ) ALTRET( JUSTALT );
      412     2837    2         END;
      413     2838
      414     2839    1      RETURN;
      415     2840
      416     2841        /********************************************************************/
      417     2842        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:14   
      418     2843        /********************************************************************/
      419     2844    1   XSA_FLUSH_GRAN: PROC ALTRET;
      420     2845        /*F*  NAME: XSA_FLUSH_GRAN
      421     2846              PURPOSE: Flushes any unwritten granules.
      422     2847         ***/
      423     2848
      424     2849        /********************/
      425     2850
      426     2851    2      IF XSA_PARAM.ORG ~= 0 AND XSA_PARAM.FMOD
      427     2852    3      THEN DO;                            /* Write modified buffers   */
      428     2853    3         IF XSA_PARAM.EOP = %EOP_NONE
      429     2854    3         THEN CALL XSA_READY_FIRST_WRITE; /* No previous writes       */
      430     2855    3         WRITE_NEXT_GRANULE = WRITE_NEXT_GRANULE_CONSTANT;
      431     2856    3         WRITE_NEXT_GRANULE.BUF_ = XSA_PARAM.BBUF_;
      432     2857    3         WRITE_NEXT_GRANULE.BUF_.BOUND = %(GRANULE_SIZE_BYTES-1);
      433     2858    3         WRITE_NEXT_GRANULE.KEY_ = VECTOR(XSA_PARAM.GRANULE);
      434     2859    3         WRITE_NEXT_GRANULE.V_ = VECTOR(WRITE_NEXT_GRANULE.V);
      435     2860    3         WRITE_NEXT_GRANULE.V.DCB# = XSA_PARAM.DCB#;
      436     2861    3         CALL M$WRITE( WRITE_NEXT_GRANULE ) ALTRET( JUSTALT );
      437     2862    3         XSA_PARAM.GRANULE = XSA_PARAM.GRANULE + 1;
      438     2863    3         XSA_PARAM.FMOD = %NO#;
      439     2864    3         END;
      440     2865    2      RETURN;
      441     2866
      442     2867    2   JUSTALT: ;
      443     2868    2      ALTRETURN;
      444     2869
      445     2870    2   END XSA_FLUSH_GRAN;
      446     2871        /********************************************************************/
      447     2872        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:15   
      448     2873        /********************************************************************/
      449     2874    1   XSA$READ: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;
      450     2875        /*F*  NAME: XSA$READ
      451     2876              PURPOSE: If not a fast file, divert course to ordinary service
      452     2877                 call.  Otherwise, initialize and get next record depending
      453     2878                 on ORG.
      454     2879         ***/
      455     2880
      456     2881        /********************/
      457     2882
      458     2883    1      FPT$ = ADDR(FPT_OPERATION);
      459     2884
      460     2885    1      V_ = READ_FPT.V_;
      461     2886    1      VAREA$ = V_.VAREA$;
      462     2887
      463     2888    1      XSA_PARAM.ERR = '0'B;
      464     2889
      465     2890         /***
      466     2891          *** If not a "fast" file or this is an attempt to perform some
      467     2892          *** non-fast operation, use ordinary monitor service.
      468     2893          ***/
      469     2894
      470     2895    1      IF READ_FPTV.KEYS OR XSA_PARAM.BBUF_.BUF$ = ADDR(NIL) OR
      471     2896    1        (XSA_PARAM.KBUF_.BUF$ = ADDR(NIL) AND
      472     2897    1        (XSA_PARAM.ORG = %KEYED# OR XSA_PARAM.ORG = %INDEXED# OR
      473     2898    1        XSA_PARAM.ORG = %IREL#)) OR READ_FPTV.SEED THEN
      474     2899    2         IF XSA_PARAM.UNFAST# THEN DO;
      475     2900    2            XSA_PARAM.ERR = E_UNFAST;
      476     2901    2            ALTRETURN;
      477     2902    2            END;
      478     2903    1         ELSE
      479     2904    1            CALL XSA_UNFAST ALTRET( RTN_ERROR );
      480     2905
      481     2906    1   UNFAST_READ:;
      482     2907    1      IF XSA_PARAM.ORG = 0
      483     2908    2      THEN DO;                            /* Use standard service     */
      484     2909    2         CALL M$READ( READ_FPT ) ALTRET( RTN_ERROR );
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:16   
      485     2910    2         XSA_PARAM.ARS# = DCBADDR(READ_FPTV.DCB#)->F$DCB.ARS#;
      486     2911    2         XSA_PARAM.DVBYTE = DCBADDR(READ_FPTV.DCB#)->F$DCB.DVBYTE;
      487     2912    2         RETURN;
      488     2913    2         END;
      489     2914
      490     2915    1      SKIPPED = 0;
      491     2916    1      TOSKIP = 0;
      492     2917    1      PRECORD = %NO#;
      493     2918    1      GOTO BYPASS_PRECORD;
      494     2919
      495     2920        /**********/
      496     2921
      497     2922    1   XSA$PRECORD: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;
      498     2923        /*F*  NAME: XSA$PRECORD
      499     2924              PURPOSE: If not a fast file, divert course to ordinary service
      500     2925                 call.  Otherwise, skip CONSEC fast file records.
      501     2926         ***/
      502     2927
      503     2928    1      FPT$ = ADDR(FPT_OPERATION);
      504     2929    1      V_ = PRECORD_FPT.V_;
      505     2930    1      VAREA$ = V_.VAREA$;
      506     2931    1      XSA_PARAM.ERR = '0'B;
      507     2932    1      SKIPPED = 0;
      508     2933
      509     2934         /***
      510     2935          *** If not a "fast" file or this is an attempt to perform some
      511     2936          *** non-fast operation, use ordinary monitor service.
      512     2937          ***/
      513     2938
      514     2939    1      IF PRECORD_FPTV.BOF OR PRECORD_FPTV.EOF OR
      515     2940    1        PRECORD_FPTV.KEYS OR XSA_PARAM.BBUF_.BUF$ = ADDR(NIL) OR
      516     2941    1        PRECORD_FPTV.N <= 0 OR (XSA_PARAM.KBUF_.BUF$ = ADDR(NIL) AND
      517     2942    1        (XSA_PARAM.ORG = %KEYED# OR XSA_PARAM.ORG = %INDEXED# OR
      518     2943    1        XSA_PARAM.ORG = %IREL#)) THEN
      519     2944    2         IF XSA_PARAM.UNFAST# THEN DO;
      520     2945    2            XSA_PARAM.ERR = E_UNFAST;
      521     2946    2            ALTRETURN;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:17   
      522     2947    2            END;
      523     2948    1         ELSE
      524     2949    1            CALL XSA_UNFAST ALTRET( RTN_ERROR );
      525     2950
      526     2951
      527     2952    1   UNFAST_PRECORD:;
      528     2953    1      IF XSA_PARAM.ORG = 0
      529     2954    2      THEN DO;
      530     2955    2         CALL M$PRECORD( PRECORD_FPT ) ALTRET( RTN_ERROR );
      531     2956    2         XSA_PARAM.ARS# = DCBADDR(PRECORD_FPTV.DCB#)->F$DCB.ARS#;
      532     2957    2         RETURN;
      533     2958    2         END;
      534     2959
      535     2960    1      TOSKIP = PRECORD_FPTV.N;
      536     2961    1      PRECORD = %YES#;
      537     2962
      538     2963    1      IF TOSKIP <= 0
      539     2964    1        OR NOT (XSA_PARAM.ORG ~= %CONSEC# OR XSA_PARAM.ORG ~= %KEYED#
      540     2965    1        OR XSA_PARAM.ORG ~= %INDEXED# OR XSA_PARAM.ORG ~= %RELATIVE#
      541     2966    1        OR XSA_PARAM.ORG ~= %IREL#)
      542     2967    2      THEN DO;                            /* Can't fast position      */
      543     2968    2         XSA_PARAM.ERR = E_POS;
      544     2969    2         ALTRETURN;
      545     2970    2         END;
      546     2971
      547     2972    1   BYPASS_PRECORD: ;
      548     2973
      549     2974    1      IF XSA_PARAM.EOP = %EOP_NONE
      550     2975    2      THEN DO;                            /* This is first read       */
      551     2976    2         XSA_PARAM.CRECX = 0;              /* Cause first              */
      552     2977    2         XSA_PARAM.LCRECX = 0;             /* granule                  */
      553     2978    2         XSA_PARAM.GRANX = 0;              /* to                       */
      554     2979    2         XSA_PARAM.LGRANX = -1;            /* be read                  */
      555     2980
      556     2981    2         XSA_PARAM.RPOS = %NO#;
      557     2982    2         XSA_PARAM.FMOD = %NO#;
      558     2983    2         XSA_PARAM.EOF = %NO#;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:18   
      559     2984    2         XSA_PARAM.BBUF_.BUF$->FM$GRAN.ENDLVL = '1'B;
      560     2985    2         END;
      561     2986         /***
      562     2987          *** Must be end of file if last operation was write.
      563     2988          ***/
      564     2989
      565     2990    1      IF XSA_PARAM.EOF
      566     2991    2      THEN DO;                            /* Must be end of file      */
      567     2992    2         XSA_PARAM.ERR = E_EOF;
      568     2993    2         ALTRETURN;
      569     2994    2         END;
      570     2995
      571     2996         /***
      572     2997          *** Fast file.  Determine routine depending on ORG.
      573     2998          ***/
      574     2999
      575     3000    1      UBYTES = READ_FPT.BUF_.BOUND + 1;
      576     3001    1      UB$ = READ_FPT.BUF_.BUF$;
      577     3002    1      IF UB$ = ADDR(NIL)
      578     3003    2      THEN DO;                            /* No buffer                */
      579     3004    2         UB$ = ADDR(SMALL_BUFFER);
      580     3005    2         UBYTES = 0;
      581     3006    2         END;
      582     3007
      583     3008    2      DO CASE( XSA_PARAM.ORG );
      584     3009    2       CASE( %CONSEC# );
      585     3010    2         IF XSA_PARAM.EOP = %EOP_NONE
      586     3011    3         THEN DO;                         /* This is first read       */
      587     3012    3            XSA_PARAM.GRANULE = -1;
      588     3013    3            XSA_PARAM.WORDS_REMAINING = 0;
      589     3014    3            END;
      590     3015    2         CALL XSA_CONSEC_READ ALTRET( JUSTALT );
      591     3016    2       CASE( %KEYED#, %INDEXED#, %IREL# );
      592     3017    2         IF XSA_PARAM.EOP = %EOP_NONE
      593     3018    3         THEN DO;                         /* This is first read       */
      594     3019    3            XSA_PARAM.GRANULE = 0;
      595     3020    3            READ_GRANULES = READ_GRANULES_CONSTANT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:19   
      596     3021    3            READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);
      597     3022    3            READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);
      598     3023    3            READ_GRANULES.BUF_ = XSA_PARAM.KBUF_;
      599     3024    3            READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;
      600     3025    3            CALL M$READ( READ_GRANULES ) ALTRET( RTN_ERROR_CLS );
      601     3026    3            READ_GRANULES.BUF_.BUF$->GRAN.X = XSA_PARAM.GRANULE;
      602     3027    3            END;
      603     3028    2         CALL XSA_KEYED_READ ALTRET( JUSTALT );
      604     3029    2       CASE( %RELATIVE# );
      605     3030    2         IF XSA_PARAM.EOP = %EOP_NONE
      606     3031    3         THEN DO;                         /* This is first read       */
      607     3032    3            XSA_PARAM.GRANULE = -1;
      608     3033    3            XSA_PARAM.WORDS_REMAINING = 0;
      609     3034    3            END;
      610     3035    2         CALL XSA_RELATIVE_READ ALTRET( JUSTALT );
      611     3036    2       CASE(ELSE);               /* He didn't open it with XSA first?  */
      612     3037    3         IF XSA_PARAM.UNFAST# THEN DO;
      613     3038    3            XSA_PARAM.ERR = E_UNFAST;
      614     3039    3            ALTRETURN;
      615     3040    3            END;
      616     3041    2         ELSE
      617     3042    2            CALL XSA_UNFAST ALTRET(RTN_ERROR);
      618     3043    2         XSA_PARAM.ERR='0'B;
      619     3044    2         IF PRECORD THEN
      620     3045    2            GOTO UNFAST_PRECORD;
      621     3046    2         ELSE GOTO UNFAST_READ;
      622     3047    2       END;
      623     3048
      624     3049    1      XSA_PARAM.EOP = %EOP_READ;
      625     3050    2      IF XSA_PARAM.ERR THEN DO;
      626     3051    2         IF XSA_PARAM.ERR.CODE ~= %E$LD THEN
      627     3052    2            ALTRETURN;
      628     3053    3         IF XSA_PARAM.UNFAST# THEN DO;
      629     3054    3            XSA_PARAM.ERR = E_UNFAST;
      630     3055    3            ALTRETURN;
      631     3056    3            END;
      632     3057    2         XSA_PARAM.CRECNO = XSA_PARAM.CRECNO - 1;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:20   
      633     3058    2         CALL XSA_UNFAST ALTRET( RTN_ERROR );
      634     3059    2         XSA_PARAM.ERR = '0'B;
      635     3060    2         CALL M$READ( READ_FPT ) ALTRET( RTN_ERROR );
      636     3061    2         XSA_PARAM.ARS# = DCBADDR(READ_FPTV.DCB#)->F$DCB.ARS#;
      637     3062    2         XSA_PARAM.DVBYTE = DCBADDR(READ_FPTV.DCB#)->F$DCB.DVBYTE;
      638     3063    2         END;
      639     3064    1      RETURN;
      640     3065
      641     3066    1   RTN_ERROR: ;                            /* Return monitor error     */
      642     3067    1      DCB$ = DCBADDR(READ_FPTV.DCB#);
      643     3068    1      IF PRECORD
      644     3069    1      THEN XSA_PARAM.ARS# = SKIPPED;
      645     3070    1      ELSE XSA_PARAM.ARS# = DCB$->F$DCB.ARS#;
      646     3071    1      XSA_PARAM.DVBYTE = DCB$->F$DCB.DVBYTE;
      647     3072    1      XSA_PARAM.EOMCHAR# = DCB$->F$DCB.EOMCHAR#;
      648     3073    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      649     3074    1      ALTRETURN;
      650     3075
      651     3076    1   RTN_ERROR_CLS: ;
      652     3077    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      653     3078    1      CLOSE_FF = CLOSESAVEFPT;
      654     3079    1      CLOSE_FF.V_ = VECTOR(CLOSE_FF.V);
      655     3080    1      CLOSE_FF.V.DCB# = XSA_PARAM.DCB#;
      656     3081    1      CALL M$CLOSE( CLOSE_FF ) ALTRET( JUSTALT );
      657     3082    1      ALTRETURN;
      658     3083
      659     3084    1   JUSTALT: ;
      660     3085    1      ALTRETURN;
      661     3086
      662     3087        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:21   
      663     3088        /********************************************************************/
      664     3089    1   XSA_UNFAST: PROC ALTRET;
      665     3090        /*F*  NAME: XSA_UNFAST
      666     3091              PURPOSE: Terminates fast access and readies file for standard
      667     3092                 access.
      668     3093         ***/
      669     3094
      670     3095        /********************/
      671     3096
      672     3097    2      IF XSA_PARAM.ORG = 0
      673     3098    2      THEN RETURN;                   /* Access is already standard    */
      674     3099
      675     3100    2      IF XSA_PARAM.BBUF_.BUF$ ~= ADDR(NIL)
      676     3101    2      THEN CALL XSA_FLUSH_GRAN ALTRET( JUSTALT ); /* Write any modified granules */
      677     3102
      678     3103    2      CLOSE_FF = DEFAULT_CLOSE_FPT;
      679     3104    2      CLOSE_FF.V_ = VECTOR(CLOSE_FF.V);
      680     3105    2      CLOSE_FF.V.DCB# = XSA_PARAM.DCB#;
      681     3106    2      CALL M$CLOSE( CLOSE_FF ) ALTRET( JUSTALT );
      682     3107    2      XSA_PARAM.ORG = 0;         /* Don't use fast access any more     */
      683     3108
      684     3109    2      OPEN_FF = DEFAULT_OPEN_FPT;
      685     3110    2      OPEN_FF.V_ = VECTOR(OPEN_FF.V);
      686     3111    2      OPEN_FF.V.ACS# = %SEQUEN#;
      687     3112    2      OPEN_FF.V.DCB# = XSA_PARAM.DCB#;
      688     3113    2      IF DCBADDR(XSA_PARAM.DCB#)->F$DCB.NRECS# > 0 AND
      689     3114    2        DCBADDR(XSA_PARAM.DCB#)->F$DCB.FUN# ~= %IN# THEN
      690     3115    2         OPEN_FF.V.EXIST# = %OLDFILE#;
      691     3116    2      CALL M$OPEN( OPEN_FF ) ALTRET( JUSTALT );
      692     3117
      693     3118    2      IF XSA_PARAM.CRECNO <= 0 THEN RETURN;
      694     3119    2      PRECORD_FF = DEFAULT_PRECORD_FPT;
      695     3120    2      PRECORD_FF.V_ = VECTOR(PRECORD_FF.V);
      696     3121    2      PRECORD_FF.V.N# = XSA_PARAM.CRECNO;
      697     3122    2      PRECORD_FF.V.DCB# = XSA_PARAM.DCB#;
      698     3123    2      CALL M$PRECORD( PRECORD_FF ) ALTRET( JUSTRET );
      699     3124    2   JUSTRET: ;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:22   
      700     3125    2      RETURN;
      701     3126
      702     3127    2   JUSTALT: ;
      703     3128    2      ALTRETURN;
      704     3129
      705     3130    2   END XSA_UNFAST;
      706     3131        /********************************************************************/
      707     3132        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:23   
      708     3133        /********************************************************************/
      709     3134    1   XSA_KEYED_READ: PROC ALTRET;
      710     3135        /*F*  NAME: XSA_KEYED_READ
      711     3136              PURPOSE: FF reads the next record from an ORG=KEYED or
      712     3137                 ORG=INDEXED file.
      713     3138         ***/
      714     3139
      715     3140         /***
      716     3141          *** Locals:
      717     3142          ***/
      718     3143
      719     3144    2   DCL NOT_NEXT_KEY BIT(1) AUTO;
      720     3145    2   DCL MISEG$ PTR AUTO;
      721     3146    2   DCL PAST_MISEG$ PTR AUTO;               /* To word past last MISEG  */
      722     3147    2   DCL PAST_MISEGX SBIN AUTO;         /* Index of word past last MISEG */
      723     3148    2   DCL INDEXED_KEY_OFFSET SBIN AUTO; /* 0 if KEYED, 1 if INDEXED, 2 if IREL */
      724     3149
      725     3150        /********************/
      726     3151
      727     3152    2      BBUF$ = XSA_PARAM.KBUF_.BUF$;
      728     3153    2      READ_AT_LEAST_ONE = ~ PRECORD;
      729     3154    2      IF XSA_PARAM.ORG = %INDEXED# THEN
      730     3155    2         INDEXED_KEY_OFFSET = 1;
      731     3156    2      ELSE IF XSA_PARAM.ORG = %IREL# THEN
      732     3157    2            INDEXED_KEY_OFFSET = 2;
      733     3158    2         ELSE
      734     3159    2            INDEXED_KEY_OFFSET = 0;
      735     3160
      736     3161    3      DO WHILE( (TOSKIP > SKIPPED AND PRECORD) OR READ_AT_LEAST_ONE );
      737     3162    3         NOT_NEXT_KEY = %YES#;
      738     3163    3         BBUF$ = XSA_PARAM.KBUF_.BUF$;
      739     3164    4         DO WHILE( NOT_NEXT_KEY );
      740     3165    4            XSA_PARAM.CRECX = XSA_PARAM.CRECX + 1; /* Index next key   */
      741     3166    5            DO WHILE(XSA_PARAM.CRECX > FM$GRAN.KEYCNT);
      742     3167    5               UBIN36_GDA = FM$GRAN.FLINK;
      743     3168    5               XSA_PARAM.GRANULE = GDA36.GRAN;
      744     3169    5               IF XSA_PARAM.GRANULE = 0
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:24   
      745     3170    6               THEN DO;                   /* End of file              */
      746     3171    6                  XSA_PARAM.ERR = E_EOF;
      747     3172    6                  XSA_PARAM.EOF = %YES#;
      748     3173    6                  ALTRETURN;
      749     3174    6                  END;
      750     3175    5               READ_GRANULES = READ_GRANULES_CONSTANT;
      751     3176    5               READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);
      752     3177    5               READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);
      753     3178    5               READ_GRANULES.BUF_ = XSA_PARAM.KBUF_;
      754     3179    5               READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;
      755     3180    5               CALL M$READ( READ_GRANULES ) ALTRET( RPT_ERROR );
      756     3181    5               XSA_PARAM.CRECX = 1;        /* First key of gran        */
      757     3182    5               BBUF$ = READ_GRANULES.BUF_.BUF$;
      758     3183    5               BBUF$->GRAN.X = XSA_PARAM.GRANULE;
      759     3184    5               END;
      760     3185    4            CRECX$ = PINCRW( BBUF$, FM$GRAN.FCEX ); /* To KEYTBL       */
      761     3186            /***
      762     3187             *** Determine where next key begins.
      763     3188             ***/
      764     3189    4            IF XSA_PARAM.CRECX >= FM$GRAN.KEYCNT
      765     3190    4            THEN PAST_MISEGX = FM$GRAN.NAVX;
      766     3191    4            ELSE IF XSA_PARAM.CRECX + 1 >= CRECX$->FM$KEYTBL(0)
      767     3192    4               THEN PAST_MISEGX = CRECX$->FM$KEYTBL(XSA_PARAM.CRECX+1) + 512;
      768     3193    4               ELSE PAST_MISEGX = CRECX$->FM$KEYTBL(XSA_PARAM.CRECX+1);
      769     3194            /***
      770     3195             *** Determine where current key begins.
      771     3196             ***/
      772     3197    4            IF XSA_PARAM.CRECX >= CRECX$->FM$KEYTBL(0)
      773     3198    4            THEN CRECX$ = PINCRW( BBUF$, CRECX$->FM$KEYTBL(XSA_PARAM.CRECX)+512 );
      774     3199    4            ELSE CRECX$ = PINCRW( BBUF$, CRECX$->FM$KEYTBL(XSA_PARAM.CRECX) );
      775     3200    4            NOT_NEXT_KEY = CRECX$->FM$KEYENT.D;
      776     3201    4            END /* WHILE NOT NEXT KEY */;
      777     3202
      778     3203         /***
      779     3204          *** Return key if requested.
      780     3205          ***/
      781     3206
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:25   
      782     3207    3         PAST_MISEG$ = PINCRW( BBUF$, PAST_MISEGX );
      783     3208    3         IF XSA_PARAM.ORG = %IREL# THEN    /* Irel keys have half word */
      784     3209    3            N = CRECX$->FM$IRENT.KLB + 2;  /* count field.             */
      785     3210    3         ELSE                             /* Keyed and Indexed keys   */
      786     3211    3            N = CRECX$->FM$KEYENT.KLB + 1; /* have byte count field.   */
      787     3212    3         MISEG$ = PINCRW( CRECX$, (N+%(BYTES_PER_WORD-1))/%BYTES_PER_WORD );
              3212                  /* Point to first MISEG entry */
      788     3213    3         IF NOT PRECORD
      789     3214    4         THEN DO;
      790     3215    4            IF READ_FPTV.KEYR
      791     3216    5            THEN DO;                      /* Return key               */
      792     3217    5               N = N - INDEXED_KEY_OFFSET;
      793     3218    5               IF READ_FPT.KEY_.KEY$ ~= ADDR(NIL)
      794     3219    5               THEN READ_FPT.KEY_.KEY$->NCHARS = PINCRC( CRECX$, INDEXED_KEY_OFFSET )->
              3219                        NCHARS;
      795     3220    5               END;
      796     3221    4            END;
      797     3222    4         ELSE DO;
      798     3223    4            IF PRECORD_FPTV.KEYR
      799     3224    5            THEN DO;                      /* Return key               */
      800     3225    5               N = N - INDEXED_KEY_OFFSET;
      801     3226    5               IF PRECORD_FPT.KEY_.KEY$ ~= ADDR(NIL)
      802     3227    5               THEN PRECORD_FPT.KEY_.KEY$->NCHARS = PINCRC( CRECX$, INDEXED_KEY_OFFSET
              3227                        )->NCHARS;
      803     3228    5               END;
      804     3229    4            END;
      805     3230
      806     3231    3         XSA_PARAM.DVBYTE = MISEG$->FM$MISEG.CTL;
      807     3232    3         XSA_PARAM.EOMCHAR# = %EOM_EOR#;
      808     3233
      809     3234         /***
      810     3235          *** Return record segment by segment.
      811     3236          ***/
      812     3237
      813     3238    3         NUBX = 0;
      814     3239    3         XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1;
      815     3240    3         NOT_NEXT_KEY = %YES#;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:26   
      816     3241    4         DO WHILE( NOT_NEXT_KEY );
      817     3242    5            DO WHILE( MISEG$ < PAST_MISEG$ );
      818     3243    5               UBIN27_GDA = MISEG$->FM$MISEG.GDA;
      819     3244    5               N = GDA27.GRAN;             /* Data gran address        */
      820     3245    5               CALL XSA_GET_GRAN_N ALTRET( RPT_ERROR );
      821     3246    5               N = MISEG$->FM$MISEG.GACTB; /* Number of bytes in segment */
      822     3247    5               CRECX$ = PINCRW( BBUF$, MISEG$->FM$MISEG.GX ); /* Data pointer */
      823     3248    5               IF NOT PRECORD
      824     3249    6               THEN DO;
      825     3250    6                  IF N > UBYTES
      826     3251    7                  THEN DO;                /* Lost data                */
      827     3252    7                     XSA_PARAM.ERR = E_LD;
      828     3253    7                     N = UBYTES;
      829     3254    7                     END;
      830     3255    6                  PINCRC( UB$, NUBX )->NCHARS = CRECX$->NCHARS;
      831     3256    6                  UBYTES = UBYTES - N;
      832     3257    6                  END;
      833     3258    5               NUBX = NUBX + N;
      834     3259    5               MISEG$ = PINCRW( MISEG$, LENGTHW(FM$MISEG) );
      835     3260    5               END;
      836     3261    4            BBUF$ = XSA_PARAM.KBUF_.BUF$;
      837     3262    4            IF XSA_PARAM.CRECX < FM$GRAN.KEYCNT
      838     3263    4            THEN NOT_NEXT_KEY = %NO#; /* Another segment can't exist  */
      839     3264    5            ELSE DO;
      840     3265    5               UBIN36_GDA = FM$GRAN.FLINK;
      841     3266    5               XSA_PARAM.GRANULE = GDA36.GRAN;
      842     3267    5               IF XSA_PARAM.GRANULE = 0
      843     3268    5               THEN NOT_NEXT_KEY = %NO#; /* Another segment can't exist */
      844     3269    6               ELSE DO;
      845     3270    6                  READ_GRANULES = READ_GRANULES_CONSTANT;
      846     3271    6                  READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);
      847     3272    6                  READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);
      848     3273    6                  READ_GRANULES.BUF_ = XSA_PARAM.KBUF_;
      849     3274    6                  READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;
      850     3275    6                  CALL M$READ( READ_GRANULES ) ALTRET( RPT_ERROR );
      851     3276    6                  XSA_PARAM.CRECX = 0;     /* Before first key of gran */
      852     3277    6                  BBUF$ = READ_GRANULES.BUF_.BUF$;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:27   
      853     3278    6                  BBUF$->GRAN.X = XSA_PARAM.GRANULE;
      854     3279    6                  CRECX$ = PINCRW( BBUF$, FM$GRAN.FCEX ); /* To KEYTBL */
      855     3280    6                  IF CRECX$ = ADDR(NIL) OR
      856     3281    6                    CRECX$->FM$KEYTBL(1) <= FM$GRAN.FCEX+SIZEW(FM$KEYTBL)
      857     3282    6                  THEN NOT_NEXT_KEY = %NO#; /* Another segment doesn't exist */
      858     3283    7                  ELSE DO;                /* Another segment exists   */
      859     3284          /*** Is is possible to have FM$GRAN.KEYCNT < 1 and have
      860     3285               another segment? ***/
      861     3286    7                     IF 0 >= FM$GRAN.KEYCNT
      862     3287    7                     THEN PAST_MISEGX = FM$GRAN.NAVX;
      863     3288    7                     ELSE IF 1 >= CRECX$->FM$KEYTBL(0)
      864     3289    7                        THEN PAST_MISEGX = CRECX$->FM$KEYTBL(1) + 512;
      865     3290    7                        ELSE PAST_MISEGX = CRECX$->FM$KEYTBL(1);
      866     3291    7                     MISEG$ = PINCRW( BBUF$, FM$GRAN.FCEX+SIZEW(FM$KEYTBL) );
      867     3292    7                     PAST_MISEG$ = PINCRW( BBUF$, PAST_MISEGX );
      868     3293    7                     END;
      869     3294    6                  END;
      870     3295    5               END;
      871     3296    4            END;
      872     3297    3         IF NOT PRECORD
      873     3298    4         THEN DO;
      874     3299    4            XSA_PARAM.ARS# = NUBX;         /* Return read ARS          */
      875     3300    4            READ_AT_LEAST_ONE = %NO#;
      876     3301    4            END;
      877     3302    3         ELSE SKIPPED = SKIPPED + 1;
      878     3303    3         END;
      879     3304
      880     3305    2      IF PRECORD
      881     3306    2      THEN XSA_PARAM.ARS# = SKIPPED;
      882     3307    2      RETURN;
      883     3308
      884     3309    2   RPT_ERROR: ;
      885     3310    2      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      886     3311    2      ALTRETURN;
      887     3312        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:28   
      888     3313
      889     3314        /******************************/
      890     3315    2   XSA_GET_GRAN_N: PROC ALTRET;
      891     3316        /*F*  NAME: XSA_GET_GRAN_N
      892     3317              PURPOSE: Get granule N of file.
      893     3318         ***/
      894     3319
      895     3320         /***
      896     3321          *** Locals:
      897     3322          ***/
      898     3323
      899     3324    3   DCL OLDEST_GRAN_CRECNO SBIN;            /* "age" of oldest gran     */
      900     3325    3   DCL GRANX SBIN;                         /* gran index               */
      901     3326
      902     3327        /********************/
      903     3328
      904     3329    3      XSA_PARAM.GRANX = XSA_PARAM.LGRANX;  /* Init gran search         */
      905     3330    4      DO WHILE( XSA_PARAM.GRANX >= 0 );
      906     3331    4         BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.GRANX*%GRANULE_SIZE );
      907     3332    4         IF BBUF$->GRAN.X = N
      908     3333    5         THEN DO;                         /* Found granule            */
      909     3334    5            BBUF$->GRAN.CRECNO = XSA_PARAM.CRECNO;
      910     3335    5            RETURN;
      911     3336    5            END;
      912     3337    4         XSA_PARAM.GRANX = XSA_PARAM.GRANX - 1;
      913     3338    4         END;
      914     3339
      915     3340    3      IF XSA_PARAM.KBUF_.BUF$->GRAN.X = N
      916     3341    4      THEN DO;                            /* Gran is key granule      */
      917     3342    4         BBUF$ = XSA_PARAM.KBUF_.BUF$;
      918     3343    4         BBUF$->GRAN.CRECNO = XSA_PARAM.CRECNO;
      919     3344    4         RETURN;
      920     3345    4         END;
      921     3346
      922     3347    3      IF XSA_PARAM.LGRANX * %GRANULE_SIZE_BYTES + %GRANULE_SIZE_BYTES < XSA_PARAM.BBUF_
              3347               .BOUND
      923     3348    4      THEN DO;                            /* Room for another granule */
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:29   
      924     3349    4         READ_GRANULES = READ_GRANULES_CONSTANT;
      925     3350    4         READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);
      926     3351    4         READ_GRANULES.KEY_ = VECTOR(N);
      927     3352    4         READ_GRANULES.BUF_ = XSA_PARAM.BBUF_;
      928     3353    4         READ_GRANULES.BUF_.BOUND = %(GRANULE_SIZE_BYTES-1);
      929     3354    4         READ_GRANULES.BUF_.BUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.LGRANX * %
              3354                  GRANULE_SIZE + %GRANULE_SIZE );
      930     3355    4         READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;
      931     3356    4         CALL M$READ( READ_GRANULES ) ALTRET( JUSTALT );
      932     3357    4         XSA_PARAM.LGRANX = XSA_PARAM.LGRANX + 1;
      933     3358    4         BBUF$ = READ_GRANULES.BUF_.BUF$;
      934     3359    4         BBUF$->GRAN.CRECNO = XSA_PARAM.CRECNO; /* Buffer's age        */
      935     3360    4         BBUF$->GRAN.X = N;
      936     3361    4         RETURN;
      937     3362    4         END;
      938     3363
      939     3364         /***
      940     3365          *** Must get rid of one of current granules.
      941     3366          ***/
      942     3367
      943     3368    3      GRANX = XSA_PARAM.LGRANX;
      944     3369    3      BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, GRANX*%GRANULE_SIZE );
      945     3370    3      OLDEST_GRAN_CRECNO = BBUF$->GRAN.CRECNO;
      946     3371    3      XSA_PARAM.GRANX = GRANX;
      947     3372    4      DO WHILE( GRANX >= 0 );
      948     3373    4         BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, GRANX*%GRANULE_SIZE );
      949     3374    4         IF BBUF$->GRAN.CRECNO < OLDEST_GRAN_CRECNO
      950     3375    5         THEN DO;                         /* Current gran is older    */
      951     3376    5            XSA_PARAM.GRANX = GRANX;
      952     3377    5            OLDEST_GRAN_CRECNO = BBUF$->GRAN.CRECNO;
      953     3378    5            END;
      954     3379    4         GRANX = GRANX - 1;
      955     3380    4         END;
      956     3381
      957     3382    3      READ_GRANULES = READ_GRANULES_CONSTANT;
      958     3383    3      READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);
      959     3384    3      READ_GRANULES.KEY_ = VECTOR(N);
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:30   
      960     3385    3      READ_GRANULES.BUF_ = XSA_PARAM.BBUF_;
      961     3386    3      READ_GRANULES.BUF_.BOUND = %(GRANULE_SIZE_BYTES-1);
      962     3387    3      READ_GRANULES.BUF_.BUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.GRANX * %
              3387               GRANULE_SIZE );
      963     3388    3      READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;
      964     3389    3      CALL M$READ( READ_GRANULES ) ALTRET( JUSTALT );
      965     3390    3      BBUF$ = READ_GRANULES.BUF_.BUF$;
      966     3391    3      BBUF$->GRAN.CRECNO = XSA_PARAM.CRECNO; /* Buffer's age           */
      967     3392    3      BBUF$->GRAN.X = N;
      968     3393    3      RETURN;
      969     3394
      970     3395    3   JUSTALT: ;
      971     3396    3      ALTRETURN;
      972     3397
      973     3398    3   END XSA_GET_GRAN_N;
      974     3399
      975     3400    2   END XSA_KEYED_READ;
      976     3401
      977     3402        /********************************************************************/
      978     3403        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:31   
      979     3404        /********************************************************************/
      980     3405    1   XSA_RELATIVE_READ: PROC ALTRET;
      981     3406        /*F*  NAME: XSA_RELATIVE_READ
      982     3407              PURPOSE: Reads the next record from an ORG=RELATIVE file or
      983     3408                       positions forward to the requested record.
      984     3409              DESCRIPTION:
      985     3410                       Read the next record or perform a PRECORD with N,
      986     3411                       where N > 0, TOSKIP has been set to N, and SKIPPED
      987     3412                       starts out at 0. If it's a PRECORD, just position and
      988     3413                       set the RPOS (record positioned to) flag so that we'll
      989     3414                       know we're already there if the user does a subsequent
      990     3415                       read.
      991     3416         ***/
      992     3417
      993     3418         /***
      994     3419          *** Locals:
      995     3420          ***/
      996     3421
      997     3422    2   DCL NEXT_RECORD BIT(1) ALIGNED;
      998     3423    2   DCL COUNT_ACTIVE_REC BIT(1) ALIGNED;
      999     3424
     1000     3425        /********************/
     1001     3426
     1002     3427         /***
     1003     3428          *** Position to the beginning of the next record that exists.
     1004     3429          ***/
     1005     3430
     1006     3431    2      BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.GRANX );
     1007     3432    2      COUNT_ACTIVE_REC = %NO#;
     1008     3433    2      NEXT_RECORD = %NO#;
     1009     3434    3      DO WHILE( NOT NEXT_RECORD OR TOSKIP > SKIPPED );
     1010     3435    3         IF XSA_PARAM.RPOS THEN
     1011     3436    3            XSA_PARAM.RPOS = %NO#; /* already positioned from PRECORD */
     1012     3437    3         ELSE XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1; /* next record */
     1013     3438    3         IF XSA_PARAM.CRECNO > DCBADDR(XSA_PARAM.DCB#)->F$DCB.NRECS# THEN
     1014     3439    4         DO;  /* End of file */
     1015     3440    4            XSA_PARAM.ERR = E_EOF;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:32   
     1016     3441    4            XSA_PARAM.EOF = %YES#;
     1017     3442    4            XSA_PARAM.CRECNO = XSA_PARAM.CRECNO - 1; /* Just to be honest */
     1018     3443    4            IF PRECORD THEN
     1019     3444    4               XSA_PARAM.ARS# = SKIPPED;
     1020     3445    4            ELSE XSA_PARAM.ARS# = 0;
     1021     3446    4            ALTRETURN;
     1022     3447    4            END; /* End of file */
     1023     3448
     1024     3449    3         IF XSA_PARAM.WORDS_REMAINING > 0 THEN
     1025     3450    3            CALL XSA_RELATIVE_SEG ALTRET( EOF_EXPECTED ); /* position to record */
     1026     3451    3         ELSE CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX );
     1027     3452    4         DO WHILE(XSA_PARAM.CRECX >= XSA_PARAM.LCRECX); /* Might be next gran */
     1028     3453    4            CALL XSA_GET_NEXT_REL_GRAN ALTRET( EOF_EXPECTED );
     1029     3454    4            END;
     1030     3455    3         XSA_PARAM.CRECX = XSA_PARAM.CRECX + 1; /* Index of data       */
     1031     3456    3         NEXT_RECORD = FM$REL.A; /* '1'B if active, '0'B if not */
     1032     3457    3         IF NEXT_RECORD THEN
     1033     3458    3            IF COUNT_ACTIVE_REC THEN
     1034     3459    3               SKIPPED = SKIPPED + 1;
     1035     3460    3            ELSE COUNT_ACTIVE_REC = %YES#;
     1036     3461    3         XSA_PARAM.WORDS_REMAINING = (DCBADDR(XSA_PARAM.DCB#)->F$DCB.RECL# + %(
              3461                  BYTES_PER_WORD-1)) / %BYTES_PER_WORD;
     1037     3462    3         END; /* Do While */
     1038     3463
     1039     3464         /***
     1040     3465          *** CRECX$ is now positioned to the control word of first segment of
     1041     3466          *** the next record.
     1042     3467          ***/
     1043     3468
     1044     3469    2      XSA_PARAM.DVBYTE = '0'B;    /* Not meaningful */
     1045     3470    2      XSA_PARAM.EOMCHAR# = %EOM_EOR#;
     1046     3471
     1047     3472    2      IF PRECORD THEN
     1048     3473    3      DO;
     1049     3474    3         IF PRECORD_FPTV.KEYR AND PRECORD_FPT.KEY_.KEY$ ~= ADDR(NIL) THEN
     1050     3475    3            PRECORD_FPT.KEY_.KEY$->BASED_WORD = XSA_PARAM.CRECNO;
     1051     3476    3         XSA_PARAM.ARS# = SKIPPED;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:33   
     1052     3477    3         XSA_PARAM.RPOS = %YES#; /* position to this one next time */
     1053     3478    3         XSA_PARAM.WORDS_REMAINING = 0; /* ditto */
     1054     3479    3         XSA_PARAM.CRECX = XSA_PARAM.CRECX - 1; /* back to control word */
     1055     3480    3         RETURN;
     1056     3481    3         END;
     1057     3482
     1058     3483    2      NUBX = 0;  /* Nothing returned yet  */
     1059     3484    2      RECORD_SIZE = FM$REL.GACTB;
     1060     3485    2      IF READ_FPTV.KEYR AND READ_FPT.KEY_.KEY$ ~= ADDR(NIL) THEN
     1061     3486    2         READ_FPT.KEY_.KEY$->BASED_WORD = XSA_PARAM.CRECNO;
     1062     3487
     1063     3488         /***
     1064     3489          *** Keep appending record segments while bytes remain in current.
     1065     3490          ***/
     1066     3491
     1067     3492    2      XSA_PARAM.WORDS_REMAINING = (DCBADDR(XSA_PARAM.DCB#)->F$DCB.RECL# + %(
              3492               BYTES_PER_WORD-1)) / %BYTES_PER_WORD;
     1068     3493    2      CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX ); /* Position to data */
     1069     3494
     1070     3495    3      DO WHILE( XSA_PARAM.WORDS_REMAINING > 0 );
     1071     3496    3         N = XSA_PARAM.LCRECX - XSA_PARAM.CRECX; /* # words left in gran */
     1072     3497    3         IF N > XSA_PARAM.WORDS_REMAINING THEN
     1073     3498    3            N = XSA_PARAM.WORDS_REMAINING; /* Record wholly contained */
     1074     3499    3         DATA$ = CRECX$;
     1075     3500    3         XSA_PARAM.CRECX = XSA_PARAM.CRECX + XSA_PARAM.WORDS_REMAINING;
     1076     3501    3         CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX ); /* Next record     */
     1077     3502    3         XSA_PARAM.WORDS_REMAINING = XSA_PARAM.WORDS_REMAINING - N; /* # left to get */
     1078     3503
     1079     3504    3         N = N * %BYTES_PER_WORD; /* Maximum number of bytes in segment */
     1080     3505    3         IF N > RECORD_SIZE THEN
     1081     3506    3            N = RECORD_SIZE; /* Limit returned bytes to those active */
     1082     3507    3         RECORD_SIZE = RECORD_SIZE - N;
     1083     3508
     1084     3509    3         IF N > 0 THEN
     1085     3510    4         DO;  /* Transfer data to user buffer */
     1086     3511    4            IF N > UBYTES THEN
     1087     3512    5            DO;  /* Lost data */
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:34   
     1088     3513    5               XSA_PARAM.ERR = E_LD;
     1089     3514    5               N = UBYTES;
     1090     3515    5               END; /* Lost data */
     1091     3516    4            PINCRC( UB$, NUBX )->NCHARS = DATA$->NCHARS;
     1092     3517    4            UBYTES = UBYTES - N;
     1093     3518    4            NUBX = NUBX + N;
     1094     3519    4            END; /* Transfer data to user buffer */
     1095     3520
     1096     3521    3         IF XSA_PARAM.WORDS_REMAINING > 0 THEN
     1097     3522    3            CALL XSA_GET_NEXT_REL_GRAN ALTRET( EOF_IN_RECORD );
     1098     3523    3         END; /* Do While */
     1099     3524
     1100     3525    2   EOF_IN_RECORD: ;
     1101     3526    2      XSA_PARAM.ARS# = NUBX;
     1102     3527    2      RETURN;
     1103     3528
     1104     3529    2   EOF_EXPECTED: ;
     1105     3530    2      ALTRETURN;
     1106     3531
     1107     3532    2   END XSA_RELATIVE_READ;
     1108     3533        /********************************************************************/
     1109     3534        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:35   
     1110     3535        /********************************************************************/
     1111     3536    1   XSA_RELATIVE_SEG: PROC ALTRET;
     1112     3537        /*F*  NAME: XSA_RELATIVE_SEG
     1113     3538              PURPOSE: Position to the next segment of a RELATIVE file.
     1114     3539         ***/
     1115     3540
     1116     3541        /********************/
     1117     3542
     1118     3543    3      DO WHILE( XSA_PARAM.WORDS_REMAINING > 0 ); /* While not in final gran */
     1119     3544    3         N = XSA_PARAM.LCRECX - XSA_PARAM.CRECX; /* # words remaining in gran */
     1120     3545    3         IF N <= XSA_PARAM.WORDS_REMAINING THEN
     1121     3546    4         DO;  /* Record continued in next gran */
     1122     3547    4            XSA_PARAM.WORDS_REMAINING = XSA_PARAM.WORDS_REMAINING - N;
     1123     3548    4            CALL XSA_GET_NEXT_REL_GRAN ALTRET( JUSTALT );
     1124     3549    4            END;
     1125     3550    4         ELSE DO;
     1126     3551    4            XSA_PARAM.CRECX = XSA_PARAM.CRECX + XSA_PARAM.WORDS_REMAINING;
     1127     3552    4            CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX );
     1128     3553    4            XSA_PARAM.WORDS_REMAINING = 0;
     1129     3554    4            END;
     1130     3555    3         END;
     1131     3556
     1132     3557    2      RETURN;
     1133     3558
     1134     3559    2   JUSTALT: ;
     1135     3560    2      ALTRETURN;
     1136     3561
     1137     3562    2   END XSA_RELATIVE_SEG;
     1138     3563        /********************************************************************/
     1139     3564        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:36   
     1140     3565        /********************************************************************/
     1141     3566    1   XSA_GET_NEXT_REL_GRAN: PROC ALTRET;
     1142     3567        /*F*  NAME:     XSA_GET_NEXT_REL_GRAN
     1143     3568              PURPOSE:  Get the next granule of an ORG=RELATIVE file.
     1144     3569              DESCRIPTION:
     1145     3570                        Attempt to get the next granule in a relative file. In
     1146     3571                        a relative file, all the UGRANS granules may not have
     1147     3572                        been actually written yet. I.e., when FMJ$REL writes
     1148     3573                        a record, it computes the granule the record will be
     1149     3574                        written to and writes only that one. Therefore, that
     1150     3575                        granule may be the only one properly initialized and
     1151     3576                        written. FMJ will also init and write granules that
     1152     3577                        it has read through. However, we can't know whether
     1153     3578                        this file has been written or read all the way through
     1154     3579                        by FMJ, so it's necessary to anticipate receiving an
     1155     3580                        E$DI error when such a granule is read since the
     1156     3581                        stamp won't match. E$DI is a real error for other file
     1157     3582                        types, but not here. Instead, just fake some of what
     1158     3583                        FMJ does so that things will fall out in the wash.
     1159     3584                        Leave the granule stamp alone to make the faking
     1160     3585                        obvious. The data portion of the granule is zeroed on
     1161     3586                        the far-out chance that the number of active bytes in
     1162     3587                        the record's control word is larger than the bytes
     1163     3588                        written. This shouldn't happen and could be treated as
     1164     3589                        an error. But, FMJ$REL doesn't error it and does
     1165     3590                        init it with zeroes, so XSA must do likewise.
     1166     3591        */
     1167     3592
     1168     3593    2      CALL XSA_GET_NEXT_GRAN
     1169     3594    3      WHENALTRETURN DO;
     1170     3595    3         IF XSA_PARAM.ERR.CODE = %E$DI THEN
     1171     3596    4         DO;  /* Fake it */
     1172     3597    4            XSA_PARAM.ERR = '0'B;
     1173     3598    4            BBUF$->FULL_GRAN.NOT_FIRST_WORD = '0'B; /* just in case */
     1174     3599    4            FM$GRAN.NAVX = %GRANULE_SIZE;
     1175     3600    4            END; /* Fake it */
     1176     3601    3         ELSE ALTRETURN;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:37   
     1177     3602    3         END;
     1178     3603
     1179     3604    2      XSA_PARAM.CRECX = 2;
     1180     3605    2      XSA_PARAM.LCRECX = FM$GRAN.NAVX + FM$GRAN.AVAIL;
     1181     3606    2      CRECX$ = PINCRW( BBUF$, 2 );
     1182     3607    2      RETURN;
     1183     3608
     1184     3609    2   END XSA_GET_NEXT_REL_GRAN;
     1185     3610        /********************************************************************/
     1186     3611        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:38   
     1187     3612        /********************************************************************/
     1188     3613    1   XSA_CONSEC_READ: PROC ALTRET;
     1189     3614        /*F*  NAME: XSA_CONSEC_READ
     1190     3615              PURPOSE: FF reads the next record from an ORG=CONSEC file.
     1191     3616         ***/
     1192     3617
     1193     3618        /********************/
     1194     3619
     1195     3620         /***
     1196     3621          *** Position to the beginning of the next record.
     1197     3622          ***/
     1198     3623
     1199     3624    2      BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.GRANX );
     1200     3625    2      CALL XSA_POS_NEXT_CONSEC_REC ALTRET( EOF_EXPECTED );
     1201     3626    2      XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1;
     1202     3627    2      SKIPPED = SKIPPED + 1;
     1203     3628
     1204     3629         /***
     1205     3630          *** Skips records if specified.
     1206     3631          ***/
     1207     3632
     1208     3633    3      DO WHILE( TOSKIP > SKIPPED );
     1209     3634    3         CALL XSA_POS_NEXT_CONSEC_REC ALTRET( EOF_IN_RECORD );
     1210     3635    3         XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1;
     1211     3636    3         SKIPPED = SKIPPED + 1;
     1212     3637    3         END;
     1213     3638
     1214     3639         /***
     1215     3640          *** We are now positioned to the control word of first segment of
     1216     3641          *** the next record.
     1217     3642          ***/
     1218     3643
     1219     3644    2      NUBX = 0;                            /* Nothing returned yet     */
     1220     3645    2      XSA_PARAM.DVBYTE = FM$CON.CTL;       /* Return DVBYTE            */
     1221     3646    2      XSA_PARAM.EOMCHAR# = %EOM_EOR#;
     1222     3647    2      IF NOT PRECORD
     1223     3648    3      THEN DO;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:39   
     1224     3649    3         IF READ_FPTV.KEYR
     1225     3650    4         THEN DO;                         /* Return "key"             */
     1226     3651    4            IF READ_FPT.KEY_.KEY$ ~= ADDR(NIL)
     1227     3652    4            THEN READ_FPT.KEY_.KEY$->BASED_WORD = XSA_PARAM.CRECNO;
     1228     3653    4            END;
     1229     3654    3         END;
     1230     3655    3      ELSE DO;
     1231     3656    3         IF PRECORD_FPTV.KEYR
     1232     3657    4         THEN DO;
     1233     3658    4            IF PRECORD_FPT.KEY_.KEY$ ~= ADDR(NIL)
     1234     3659    4            THEN PRECORD_FPT.KEY_.KEY$->BASED_WORD = XSA_PARAM.CRECNO;
     1235     3660    4            END;
     1236     3661    3         END;
     1237     3662
     1238     3663         /***
     1239     3664          *** Keep appending record segments while a next segment exists and
     1240     3665          *** the beginning of the next record is not encountered.
     1241     3666          ***/
     1242     3667
     1243     3668    2      IF NOT PRECORD
     1244     3669    3      THEN DO;                            /* Read record              */
     1245     3670    4         DO WHILE( FM$CON.C ~= 0 AND NOT XSA_PARAM.RPOS );
     1246     3671    4            CALL XSA_TRANSFER_CONSEC_SEG;  /* Append next segment      */
     1247     3672    5            CALL XSA_CONSEC_SEG WHENALTRETURN DO;
     1248     3673    5               IF XSA_PARAM.ERR.CODE = %E$EOF THEN
     1249     3674    5                  XSA_PARAM.ERR='0'B; /* Give him what we have so far. */
     1250     3675    5               GOTO EOF_IN_RECORD;
     1251     3676    5               END;
     1252     3677    4            IF FM$CON.FAK ~= 0
     1253     3678    5            THEN DO;                 /* Hit beginning of next record  */
     1254     3679    5               XSA_PARAM.RPOS = %YES#;     /* Remember position        */
     1255     3680    5               END;
     1256     3681    4            END;
     1257     3682    3         END;
     1258     3683
     1259     3684         /***
     1260     3685          *** Append remaining segment.
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:40   
     1261     3686          ***/
     1262     3687
     1263     3688    2      IF NOT XSA_PARAM.RPOS AND NOT PRECORD
     1264     3689    3      THEN DO;
     1265     3690    3         CALL XSA_TRANSFER_CONSEC_SEG;
     1266     3691    3         END;
     1267     3692
     1268     3693    2   EOF_IN_RECORD: ;
     1269     3694    2      IF PRECORD
     1270     3695    2      THEN XSA_PARAM.ARS# = SKIPPED;
     1271     3696    2      ELSE XSA_PARAM.ARS# = NUBX;
     1272     3697    2      RETURN;
     1273     3698
     1274     3699    2   EOF_EXPECTED: ;
     1275     3700    2      ALTRETURN;
     1276     3701
     1277     3702        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:41   
     1278     3703        /******************************/
     1279     3704
     1280     3705    2   XSA_POS_NEXT_CONSEC_REC: PROC ALTRET;
     1281     3706
     1282     3707    3      IF XSA_PARAM.RPOS
     1283     3708    4      THEN DO;        /* Already positioned to record (control word)  */
     1284     3709    4         XSA_PARAM.RPOS = %NO#;
     1285     3710    4         CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX );
     1286     3711    4         END;
     1287     3712    4      ELSE DO;                            /* Position to record       */
     1288     3713    4         CALL XSA_CONSEC_SEG ALTRET( JUSTALT );
     1289     3714    4         END;
     1290     3715
     1291     3716    4      DO WHILE( FM$CON.FAK = 0 );     /* Find beginning of next record */
     1292     3717    4         CALL XSA_CONSEC_SEG ALTRET( JUSTALT );
     1293     3718    4         END;
     1294     3719    3      RETURN;
     1295     3720
     1296     3721    3   JUSTALT: ;
     1297     3722    3      ALTRETURN;
     1298     3723
     1299     3724    3   END XSA_POS_NEXT_CONSEC_REC;
     1300     3725
     1301     3726    2   END XSA_CONSEC_READ;
     1302     3727        /********************************************************************/
     1303     3728        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:42   
     1304     3729        /********************************************************************/
     1305     3730    1   XSA_CONSEC_SEG: PROC ALTRET;
     1306     3731        /*F*  NAME: XSA_CONSEC_SEG
     1307     3732              PURPOSE: Position to the next segment of a CONSEC file.
     1308     3733         ***/
     1309     3734
     1310     3735        /********************/
     1311     3736
     1312     3737    2      XSA_PARAM.CRECX = XSA_PARAM.CRECX - 1; /* Next control word      */
     1313     3738
     1314     3739    3      DO WHILE (XSA_PARAM.CRECX < XSA_PARAM.LCRECX);
     1315     3740    3         CALL XSA_GET_NEXT_GRAN ALTRET( JUSTALT );
     1316     3741    3         XSA_PARAM.CRECX = %(GRANULE_SIZE-1); /* Index of first record control word */
     1317     3742    3         XSA_PARAM.LCRECX = FM$GRAN.NAVX + FM$GRAN.AVAIL;
     1318     3743    3         END;
     1319     3744
     1320     3745    2      CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX );
     1321     3746    2      RETURN;
     1322     3747
     1323     3748    2   JUSTALT: ;
     1324     3749    2      ALTRETURN;
     1325     3750
     1326     3751    2   END XSA_CONSEC_SEG;
     1327     3752        /********************************************************************/
     1328     3753        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:43   
     1329     3754        /********************************************************************/
     1330     3755    1   XSA_TRANSFER_CONSEC_SEG: PROC;
     1331     3756        /*F*  NAME: XSA_TRANSFER_CONSEC_SEG
     1332     3757              PURPOSE: Append the current segment to the user's buffer.
     1333     3758         ***/
     1334     3759
     1335     3760        /********************/
     1336     3761
     1337     3762    2      N = FM$CON.GACTB;                    /* Get # bytes in segment   */
     1338     3763
     1339     3764    2      IF N > UBYTES
     1340     3765    3      THEN DO;                            /* Lost data                */
     1341     3766    3         XSA_PARAM.ERR = E_LD;
     1342     3767    3         N = UBYTES;
     1343     3768    3         END;
     1344     3769
     1345     3770    2      PINCRC( UB$, NUBX )->NCHARS = PINCRW( BBUF$, FM$CON.GX )->NCHARS;
     1346     3771    2      UBYTES = UBYTES - N;
     1347     3772    2      NUBX = NUBX + N;           /* Ix of next free byte (and ARS)     */
     1348     3773    2      RETURN;
     1349     3774
     1350     3775    2   END XSA_TRANSFER_CONSEC_SEG;
     1351     3776        /********************************************************************/
     1352     3777        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:44   
     1353     3778        /********************************************************************/
     1354     3779    1   XSA_GET_NEXT_GRAN: PROC ALTRET;
     1355     3780        /*F*  NAME: XSA_GET_NEXT_GRAN
     1356     3781              PURPOSE: Get next granule of input file.
     1357     3782         ***/
     1358     3783
     1359     3784        /********************/
     1360     3785
     1361     3786         /***
     1362     3787          *** Check if CONSEC file eof.
     1363     3788          ***/
     1364     3789
     1365     3790    2      IF XSA_PARAM.ORG = %CONSEC# AND NOT FM$GRAN.ENDLVL
     1366     3791    3      THEN DO;                       /* That *was* the last granule   */
     1367     3792    3         CALL XSA_READY_WRITE;
     1368     3793    3         ALTRETURN;
     1369     3794    3         END;
     1370     3795
     1371     3796         /***
     1372     3797          *** Get the next granule.
     1373     3798          ***/
     1374     3799
     1375     3800    2      XSA_PARAM.GRANULE = XSA_PARAM.GRANULE + 1; /* On to next granule */
     1376     3801
     1377     3802    2      IF XSA_PARAM.GRANX < XSA_PARAM.LGRANX
     1378     3803    3      THEN DO;                  /* Next gran has already been read    */
     1379     3804    3         XSA_PARAM.GRANX = XSA_PARAM.GRANX + %GRANULE_SIZE;
     1380     3805    3         BBUF$ = PINCRW( BBUF$, %GRANULE_SIZE );
     1381     3806    3         END;
     1382     3807    3      ELSE DO;                       /* Need to read next granule     */
     1383     3808    3         READ_GRANULES = READ_GRANULES_CONSTANT;
     1384     3809    3         READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);
     1385     3810    3         READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);
     1386     3811    3         READ_GRANULES.BUF_ = XSA_PARAM.BBUF_;
     1387     3812    3         READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;
     1388     3813    3         BBUF$ = XSA_PARAM.BBUF_.BUF$;
     1389     3814    3         CALL M$READ( READ_GRANULES ) ALTRET( EOF_EXPECTED );
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:45   
     1390     3815    3         XSA_PARAM.LGRANX = DCBADDR(XSA_PARAM.DCB#)->F$DCB.ARS# / %BYTES_PER_WORD - %
              3815                  GRANULE_SIZE;
     1391     3816    4         DO WHILE('0'B);
     1392     3817    4   EOF_EXPECTED: ;
     1393     3818    4            CALL XSA_CHK_ERROR ALTRET( JUSTALT );
     1394     3819    4            END;
     1395     3820    3         XSA_PARAM.GRANX = 0;         /* Back to first gran of buffer  */
     1396     3821    3         BBUF$ = XSA_PARAM.BBUF_.BUF$;
     1397     3822    3         END;
     1398     3823
     1399     3824    2      IF BBUF$->BASED_WORD ~= -1 THEN
     1400     3825    2         RETURN;
     1401     3826    3      ELSE DO;
     1402     3827    3         XSA_PARAM.ERR = E_DI;
     1403     3828    3   JUSTALT:;
     1404     3829    3         ALTRETURN;
     1405     3830    3         END;
     1406     3831
     1407     3832        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:46   
     1408     3833        /******************************/
     1409     3834    2   XSA_CHK_ERROR: PROC ALTRET;
     1410     3835        /*F*  NAME: XSA_CHK_ERROR
     1411     3836              PURPOSE: Handle error reading granule.
     1412     3837              DESCRIPTION:
     1413     3838
     1414     3839              Check the error code. If it's end-of-file, set the XSA_PARAM
     1415     3840              EOF stuff and get out. Otherwise, the only errors XSA wants to
     1416     3841              consider handling are E$DI and E$RANBADBLK.
     1417     3842
     1418     3843              E$RANBADBLK is the same as EOF here; i.e., we tried to read a
     1419     3844              granule with a granule number for the key which was beyond the
     1420     3845              end of the file. In this case, call XSA_READY_WRITE to set the
     1421     3846              XSA_PARAM EOF stuff and altret.
     1422     3847
     1423     3848              E$DI is a bit different. If the file is a RELATIVE file, all the
     1424     3849              UGRANS granules may not have been actually initialized and
     1425     3850              written by regular file management. So, E$DI errors must be
     1426     3851              anticipated on such granules. In this case, just pretend that
     1427     3852              all grans read into the BBUF area are OK. Otherwise, we may end
     1428     3853              up doing more I/O's than necessary if XSA_PARAM.BBUF_ frames
     1429     3854              more than one gran. If the file is not RELATIVE, E$DI is a real
     1430     3855              error. However, if more than one granule was read into BBUF, one
     1431     3856              or more of them may be good. Search backwards through BBUF for
     1432     3857              the last good one. If a good one isn't found, altret. Otherwise,
     1433     3858              just return and let XSA_GET_NEXT_GRAN decide whether to altret.
     1434     3859
     1435     3860              If the error is anything else, something unexpected and probably
     1436     3861              ugly happened. Just fill in the error received and altret.
     1437     3862         ***/
     1438     3863
     1439     3864         /***
     1440     3865          *** Locals:
     1441     3866          ***/
     1442     3867
     1443     3868    3   DCL ACTUAL_LGRANX SBIN AUTO;
     1444     3869    3   DCL FOUND_GRAN BIT(1) AUTO;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:47   
     1445     3870
     1446     3871        /********************/
     1447     3872
     1448     3873    3      N = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
     1449     3874
     1450     3875    3      IF N = %E$EOF
     1451     3876    3      THEN IF XSA_PARAM.ERR
     1452     3877    3         THEN ;                      /* Already have error to report  */
     1453     3878    4         ELSE DO;                         /* Standard EOF             */
     1454     3879    4            XSA_PARAM.ERR = E_EOF;
     1455     3880    4            XSA_PARAM.EOF = %YES#;
     1456     3881    4            END;
     1457     3882    3      ELSE IF N ~= %E$RANBADBLK AND N ~= %E$DI
     1458     3883    4         THEN DO;               /* Not an error we care to handle     */
     1459     3884    4            XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1460     3885    4            END;
     1461     3886    4         ELSE DO;
     1462     3887    4            ACTUAL_LGRANX = DCBADDR(XSA_PARAM.DCB#)->F$DCB.ARS# / %BYTES_PER_WORD - %
              3887                     GRANULE_SIZE;
     1463     3888    4            FOUND_GRAN = %NO#;
     1464     3889    4            IF N = %E$DI AND XSA_PARAM.ORG = %RELATIVE# THEN
     1465     3890    4               FOUND_GRAN = %YES#;
     1466     3891    5            ELSE DO WHILE( ACTUAL_LGRANX >= 0 AND NOT FOUND_GRAN );
     1467     3892    5               IF PINCRW( BBUF$, ACTUAL_LGRANX )->BASED_WORD = -1
     1468     3893    5               THEN ACTUAL_LGRANX = ACTUAL_LGRANX - %GRANULE_SIZE;
     1469     3894    5               ELSE FOUND_GRAN = %YES#;
     1470     3895    5               END;
     1471     3896    4            IF FOUND_GRAN
     1472     3897    5            THEN DO;                      /* Got something            */
     1473     3898    5               XSA_PARAM.LGRANX = ACTUAL_LGRANX;
     1474     3899    5               RETURN;
     1475     3900    5               END;
     1476     3901    4            IF N = %E$DI THEN
     1477     3902    4               XSA_PARAM.ERR = E_DI;
     1478     3903    4            ELSE CALL XSA_READY_WRITE;
     1479     3904    4            END;
     1480     3905    3      ALTRETURN;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:48   
     1481     3906
     1482     3907    3   END XSA_CHK_ERROR;
     1483     3908
     1484     3909        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:49   
     1485     3910        /******************************/
     1486     3911    2   XSA_READY_WRITE: PROC;
     1487     3912        /*F*  NAME: XSA_READY_WRITE
     1488     3913              PURPOSE: Get ready to write next record after end of file on
     1489     3914                 read.
     1490     3915         ***/
     1491     3916
     1492     3917        /********************/
     1493     3918
     1494     3919    3      XSA_PARAM.ERR = E_EOF;
     1495     3920    3      XSA_PARAM.EOF = %YES#;
     1496     3921    3      RETURN;
     1497     3922
     1498     3923    3   END XSA_READY_WRITE;
     1499     3924        /******************************/
     1500     3925
     1501     3926    2   END XSA_GET_NEXT_GRAN;
     1502     3927        /********************************************************************/
     1503     3928        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:50   
     1504     3929        /********************************************************************/
     1505     3930    1   XSA$WRITE: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;
     1506     3931        /*F*  NAME: XSA$WRITE
     1507     3932              PURPOSE: If not a fast file, divert course to ordinary service
     1508     3933                 call.  Otherwise, initialize and write next (CONSEC) record.
     1509     3934         ***/
     1510     3935
     1511     3936        /********************/
     1512     3937
     1513     3938    1      FPT$ = ADDR(FPT_OPERATION);
     1514     3939    1      V_ = WRITE_FPT.V_;
     1515     3940    1      VAREA$ = V_.VAREA$;
     1516     3941         /***
     1517     3942          *** If not a "fast" file, use ordinary monitor service.
     1518     3943          ***/
     1519     3944
     1520     3945    1      IF XSA_PARAM.BBUF_.BUF$ = ADDR(NIL) OR XSA_PARAM.ORG ~= %CONSEC# THEN
     1521     3946    2         IF XSA_PARAM.UNFAST# THEN DO;
     1522     3947    2            XSA_PARAM.ERR = E_UNFAST;
     1523     3948    2            ALTRETURN;
     1524     3949    2            END;
     1525     3950    1         ELSE
     1526     3951    1            CALL XSA_UNFAST ALTRET( RTN_WRT_ERROR );
     1527     3952
     1528     3953    1      IF XSA_PARAM.ORG = 0
     1529     3954    2      THEN DO;                            /* use standard service     */
     1530     3955    2         CALL M$WRITE( WRITE_FPT ) ALTRET( RTN_WRT_ERROR );
     1531     3956    2         XSA_PARAM.ARS# = DCBADDR(WRITE_FPTV.DCB#)->F$DCB.ARS#;
     1532     3957    2         RETURN;
     1533     3958    2         END;
     1534     3959
     1535     3960    1      XSA_PARAM.ERR = '0'B;
     1536     3961
     1537     3962    1      IF XSA_PARAM.EOP = %EOP_NONE
     1538     3963    2      THEN DO;                            /* This is first write      */
     1539     3964    2         CALL XSA_READY_FIRST_WRITE;
     1540     3965    2         END;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:51   
     1541     3966    2      ELSE DO;
     1542     3967    2         IF NOT XSA_PARAM.EOF
     1543     3968    3         THEN DO;                         /* Write not at file end    */
     1544     3969    3            XSA_PARAM.ERR = E_WRITE;
     1545     3970    3            ALTRETURN;
     1546     3971    3            END;
     1547     3972    2         END;
     1548     3973
     1549     3974         /***
     1550     3975          *** Must be output file.
     1551     3976          ***/
     1552     3977
     1553     3978    1      IF XSA_PARAM.INPUT
     1554     3979    2      THEN DO;
     1555     3980    2         XSA_PARAM.ERR = E_WRITE;
     1556     3981    2         ALTRETURN;
     1557     3982    2         END;
     1558     3983
     1559     3984        /***
     1560     3985         *** If continuation specified, then last operation must have
     1561     3986         *** been a write.
     1562     3987         ***/
     1563     3988
     1564     3989    1      IF XSA_PARAM.CONT AND XSA_PARAM.EOP ~= %EOP_WRITE
     1565     3990    2      THEN DO;                            /* Continued write illegal  */
     1566     3991    2         XSA_PARAM.ERR = E_NOCONT;
     1567     3992    2         ALTRETURN;
     1568     3993    2         END;
     1569     3994
     1570     3995         /***
     1571     3996          *** Fast file.
     1572     3997          ***/
     1573     3998
     1574     3999    1      UBYTES = WRITE_FPT.BUF_.BOUND + 1;
     1575     4000    1      UB$ = WRITE_FPT.BUF_.BUF$;
     1576     4001    1      BBUF$ = XSA_PARAM.BBUF_.BUF$;
     1577     4002    1      IF UB$ = ADDR(NIL)
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:52   
     1578     4003    2      THEN DO;                            /* No buffer                */
     1579     4004    2         UB$ = ADDR(SMALL_BUFFER);
     1580     4005    2         UBYTES = 0;
     1581     4006    2         END;
     1582     4007
     1583     4008    1      XSA_PARAM.EOP = %EOP_WRITE;
     1584     4009    1      CALL XSA_CONSEC_WRITE ALTRET( JUSTALT );
     1585     4010
     1586     4011    1      RETURN;
     1587     4012
     1588     4013    1   RTN_WRT_ERROR: ;
     1589     4014    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1590     4015    1      ALTRETURN;
     1591     4016
     1592     4017        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:53   
     1593     4018        /********************************************************************/
     1594     4019    1   XSA_READY_FIRST_WRITE: PROC;
     1595     4020        /*F*     NAME: XSA_READY_FIRST_WRITE
     1596     4021                 PURPOSE: Initialize XSA_PARAM and buffer.
     1597     4022         ***/
     1598     4023
     1599     4024        /********************/
     1600     4025
     1601     4026    2      BBUF$ = XSA_PARAM.BBUF_.BUF$;
     1602     4027    2      BBUF$->FULL_GRAN = '0'B;
     1603     4028    2      FM$GRAN.NAVX = 3;                    /* # word header            */
     1604     4029    2      XSA_PARAM.CRECX = %(GRANULE_SIZE-1); /* Last word is first control word */
     1605     4030    2      XSA_PARAM.LCRECX = XSA_PARAM.CRECX;  /* Last doesn't exist       */
     1606     4031    2      FM$GRAN.AVAIL = XSA_PARAM.CRECX - FM$GRAN.NAVX + 1;
     1607     4032    2      XSA_PARAM.GRANULE = 0;
     1608     4033    2      XSA_PARAM.FMOD = %YES#;
     1609     4034    2      XSA_PARAM.LGRANX = 0;                /* One gran at a time       */
     1610     4035    2      XSA_PARAM.GRANX = 0;
     1611     4036    2      XSA_PARAM.EOF = %YES#;
     1612     4037    2      XSA_PARAM.CONT = '0'B;
     1613     4038    2      RETURN;
     1614     4039
     1615     4040    2   END XSA_READY_FIRST_WRITE;
     1616     4041        /********************************************************************/
     1617     4042        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:54   
     1618     4043        /********************************************************************/
     1619     4044    1   XSA_CONSEC_WRITE: PROC ALTRET;
     1620     4045        /*F*  NAME: XSA_CONSEC_WRITE
     1621     4046              PURPOSE: FF writes the next record to an ORG=CONSEC file.
     1622     4047         ***/
     1623     4048
     1624     4049         /***
     1625     4050          *** Locals:
     1626     4051          ***/
     1627     4052
     1628     4053    2   DCL FIRST_SEG SBIN AUTO;           /* Indicates if first segment    */
     1629     4054    2   DCL CONTINUING SBIN AUTO; /* Indicates if segment to be continued   */
     1630     4055    2   DCL NEW_GRAN BIT(1) ALIGNED;  /* Indicates starting a new granule   */
     1631     4056
     1632     4057        /********************/
     1633     4058
     1634     4059    2      IF XSA_PARAM.CONT THEN
     1635     4060    2         FIRST_SEG = 0;               /* Continue the current record   */
     1636     4061    2      ELSE FIRST_SEG = 1;            /* Ready to write first segment  */
     1637     4062
     1638     4063    3      DO WHILE( UBYTES > 0 OR (UBYTES = 0 AND FIRST_SEG ~= 0) );
     1639     4064
     1640     4065    3         NEW_GRAN = '0'B;
     1641     4066    3         IF FM$GRAN.AVAIL <= 1
     1642     4067    4         THEN DO;               /* Nothing more fits in this gran     */
     1643     4068    4            FM$GRAN.ENDLVL = %YES#;        /* Not last                 */
     1644     4069    4            WRITE_NEXT_GRANULE = WRITE_NEXT_GRANULE_CONSTANT;
     1645     4070    4            WRITE_NEXT_GRANULE.BUF_ = XSA_PARAM.BBUF_;
     1646     4071    4            WRITE_NEXT_GRANULE.BUF_.BOUND = %(GRANULE_SIZE_BYTES-1);
     1647     4072    4            WRITE_NEXT_GRANULE.KEY_ = VECTOR(XSA_PARAM.GRANULE);
     1648     4073    4            WRITE_NEXT_GRANULE.V_ = VECTOR(WRITE_NEXT_GRANULE.V);
     1649     4074    4            WRITE_NEXT_GRANULE.V.DCB# = XSA_PARAM.DCB#;
     1650     4075    4            CALL M$WRITE( WRITE_NEXT_GRANULE ) ALTRET( RTN_ERROR );
     1651     4076    4            XSA_PARAM.GRANULE = XSA_PARAM.GRANULE + 1;
     1652     4077    4            BBUF$->FULL_GRAN = '0'B;
     1653     4078    4            FM$GRAN.NAVX = 3;
     1654     4079    4            XSA_PARAM.CRECX = %(GRANULE_SIZE-1);
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:55   
     1655     4080    4            FM$GRAN.AVAIL = XSA_PARAM.CRECX - FM$GRAN.NAVX + 1;
     1656     4081    4            NEW_GRAN = '1'B;
     1657     4082    4            END;
     1658     4083
     1659     4084    4         IF NOT NEW_GRAN AND FIRST_SEG = 0 THEN DO;
     1660     4085                 /* In the middle of a continued write on the same granule
     1661     4086                    we were on before. So, add the new data to the old
     1662     4087                    segment.                                              */
     1663     4088    4            CRECX$ = PINCRW(BBUF$,XSA_PARAM.CRECX+1);
     1664     4089                                                /* Previous control word    */
     1665     4090    4            GBYTES = (FM$GRAN.AVAIL + FM$GRAN.NAVX - FM$CON.GX) * %BYTES_PER_WORD;
     1666     4091                                 /* Total space available for this segment  */
     1667     4092    4            GBYTES = GBYTES - FM$CON.GACTB; /* Total bytes available   */
     1668     4093    4            N = UBYTES;
     1669     4094    4            IF N > GBYTES THEN
     1670     4095    4               N = GBYTES;
     1671     4096    4            G$ = PINCRW(BBUF$,FM$CON.GX);
     1672     4097    4            PINCRC(G$,FM$CON.GACTB)->NCHARS = UB$->NCHARS;
     1673     4098    4            FM$CON.GACTB = FM$CON.GACTB + N;
     1674     4099    4            IF UBYTES - N = 0 AND NOT WRITE_FPTV.DVBYTE.CONT THEN
     1675     4100    4               CONTINUING = 0;
     1676     4101    4            ELSE CONTINUING = 1;          /* Must continue            */
     1677     4102    4            WRDS = FM$CON.GX +
     1678     4103    4              ((FM$CON.GACTB + %(BYTES_PER_WORD-1))/%BYTES_PER_WORD) -
     1679     4104    4              FM$GRAN.NAVX;
     1680     4105    4            END;
     1681     4106    4         ELSE DO;                         /* Start a new segment      */
     1682     4107    4            IF SIZEW(FM$CON) + (UBYTES+%(BYTES_PER_WORD-1))/%BYTES_PER_WORD
     1683     4108                                           /* If the number of words needed */
     1684     4109    4              > FM$GRAN.AVAIL /* is greater than # words we have left  */
     1685     4110    5            THEN DO;       /* then the segment must be continued.     */
     1686     4111    5               CONTINUING = 1;
     1687     4112    5               N = (FM$GRAN.AVAIL - SIZEW(FM$CON))*%BYTES_PER_WORD;
     1688     4113                                           /* Number of bytes this segment  */
     1689     4114    5               END;
     1690     4115    5            ELSE DO;                      /* Segment can fit          */
     1691     4116    5               IF WRITE_FPTV.DVBYTE.CONT THEN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:56   
     1692     4117    5                  CONTINUING = 1;
     1693     4118    5               ELSE CONTINUING = 0;
     1694     4119    5               N = UBYTES;
     1695     4120    5               END;
     1696     4121
     1697     4122    4            CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX ); /* Pointer to control word */
     1698     4123    4            XSA_PARAM.CRECX = XSA_PARAM.CRECX - 1; /* Next control word */
     1699     4124    4            XSA_PARAM.LCRECX = XSA_PARAM.CRECX; /* Doesn't exist       */
     1700     4125
     1701     4126    4            FM$CON = '0'B;
     1702     4127    4            FM$CON.GACTB = N;
     1703     4128    4            FM$CON.FAK = FIRST_SEG;
     1704     4129    4            FM$CON.GX = FM$GRAN.NAVX;
     1705     4130
     1706     4131    4            IF FIRST_SEG ~= 0
     1707     4132    5            THEN DO;
     1708     4133    5               FIRST_SEG = 0;
     1709     4134    5               FM$CON.CTL = WRITE_FPT.V.DVBYTE;
     1710     4135    5               XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1;
     1711     4136    5               END;
     1712     4137
     1713     4138    4            PINCRW( BBUF$, FM$GRAN.NAVX )->NCHARS = UB$->NCHARS;
     1714     4139    4            WRDS = (N + %(BYTES_PER_WORD-1))/%BYTES_PER_WORD;
     1715     4140    4            END;
     1716     4141    3         UBYTES = UBYTES - N;
     1717     4142    3         UB$ = PINCRC( UB$, N );
     1718     4143    3         FM$CON.C = CONTINUING;
     1719     4144
     1720     4145    3         FM$GRAN.NAVX = FM$GRAN.NAVX + WRDS; /* Next available         */
     1721     4146    3         FM$GRAN.AVAIL = XSA_PARAM.CRECX - FM$GRAN.NAVX + 1;
     1722     4147    3         END;
     1723     4148
     1724     4149    2      XSA_PARAM.CONT = WRITE_FPTV.DVBYTE.CONT;
     1725     4150    2      XSA_PARAM.FMOD = %YES#;
     1726     4151    2      RETURN;
     1727     4152
     1728     4153    2   RTN_ERROR: ;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:57   
     1729     4154    2      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1730     4155    2      ALTRETURN;
     1731     4156
     1732     4157    2   END XSA_CONSEC_WRITE;
     1733     4158        /********************************************************************/
     1734     4159        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:58   
     1735     4160        /********************************************************************/
     1736     4161    1   XSA$PFIL: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;
     1737     4162        /*F*  NAME: XSA$PFIL
     1738     4163              PURPOSE: If not a fast file, divert course to ordinary service
     1739     4164                 call.  Otherwise, initialize and position file.
     1740     4165         ***/
     1741     4166
     1742     4167        /********************/
     1743     4168
     1744     4169    1      FPT$ = ADDR(FPT_OPERATION);
     1745     4170    1      V_ = CLOSE_FPT.V_;
     1746     4171    1      VAREA$ = V_.VAREA$;
     1747     4172    1      XSA_PARAM.ERR = '0'B;
     1748     4173
     1749     4174         /***
     1750     4175          *** XSA$PFIL is only for CONSEC files...unfast if not.
     1751     4176          ***/
     1752     4177
     1753     4178    1      IF (XSA_PARAM.ORG ~= %CONSEC# AND XSA_PARAM.ORG ~= %INDEXED# AND
     1754     4179    1        XSA_PARAM.ORG ~= %KEYED# AND XSA_PARAM.ORG ~= %RELATIVE# AND
     1755     4180    1        XSA_PARAM.ORG ~= %IREL#) OR ((XSA_PARAM.ORG = %INDEXED# OR
     1756     4181    1        XSA_PARAM.ORG = %IREL#) AND PFIL_FPTV.INDX ~= 0) THEN
     1757     4182    1         IF XSA_PARAM.ORG ~= %CONSEC# THEN
     1758     4183    2            IF XSA_PARAM.UNFAST# THEN DO;
     1759     4184    2               XSA_PARAM.ERR = E_UNFAST;
     1760     4185    2               ALTRETURN;
     1761     4186    2               END;
     1762     4187    1            ELSE
     1763     4188    1               CALL XSA_UNFAST ALTRET( RTN_PFL_ERROR );
     1764     4189
     1765     4190         /***
     1766     4191          *** If not a "fast" file, use ordinary monitor service.
     1767     4192          ***/
     1768     4193
     1769     4194    2      IF XSA_PARAM.ORG = 0 THEN DO;         /* Use standard service              */
     1770     4195    2         CALL M$PFIL( PFIL_FPT ) ALTRET( RTN_PFL_ERROR );
     1771     4196    2         XSA_PARAM.ARS# = DCBADDR(PFIL_FPTV.DCB#)->F$DCB.ARS#;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:59   
     1772     4197    2         RETURN;
     1773     4198    2         END;
     1774     4199
     1775     4200         /***
     1776     4201          *** Handle separate cases BOF and EOF.
     1777     4202          ***/
     1778     4203
     1779     4204    1      XSA_PARAM.ARS# = 0;
     1780     4205    1      IF PFIL_FPTV.BOF THEN
     1781     4206    1         CALL XSA_PFIL_BOF ALTRET(JUSTALT);
     1782     4207    1      ELSE
     1783     4208    1         CALL XSA_PFIL_EOF ALTRET(JUSTALT);
     1784     4209    1      RETURN;
     1785     4210
     1786     4211    1   RTN_PFL_ERROR: ;
     1787     4212    1      XSA_PARAM.ARS# = DCBADDR(PFIL_FPTV.DCB#)->F$DCB.ARS#;
     1788     4213    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1789     4214    1      ALTRETURN;
     1790     4215
     1791     4216        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:60   
     1792     4217
     1793     4218        /********************************************************************/
     1794     4219    1   XSA_PFIL_EOF: PROC ALTRET;
     1795     4220        /*F*  NAME: XSA_PFIL_EOF
     1796     4221              PURPOSE: Position a "fast" file to its end.
     1797     4222         ***/
     1798     4223
     1799     4224        /********************/
     1800     4225
     1801     4226    3      IF XSA_PARAM.EOP = %EOP_NONE THEN DO; /* This is first read       */
     1802     4227    3         XSA_PARAM.CRECX = 0;               /* Cause first              */
     1803     4228    3         XSA_PARAM.LCRECX = 0;              /* granule                  */
     1804     4229    3         XSA_PARAM.GRANX = 0;               /* to                       */
     1805     4230    3         XSA_PARAM.LGRANX = -1;             /* be read                  */
     1806     4231    3         XSA_PARAM.RPOS = %NO#;
     1807     4232    3         XSA_PARAM.FMOD = %NO#;
     1808     4233    3         XSA_PARAM.EOF = %NO#;
     1809     4234    3         XSA_PARAM.BBUF_.BUF$->FM$GRAN.ENDLVL = '1'B;
     1810     4235    4         DO CASE(XSA_PARAM.ORG);
     1811     4236    4          CASE(%KEYED#,%INDEXED#,%IREL#);
     1812     4237    4            XSA_PARAM.GRANULE = 0;
     1813     4238    4            READ_GRANULES = READ_GRANULES_CONSTANT;
     1814     4239    4            READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);
     1815     4240    4            READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);
     1816     4241    4            READ_GRANULES.BUF_ = XSA_PARAM.KBUF_;
     1817     4242    4            READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;
     1818     4243    4            CALL M$READ(READ_GRANULES) ALTRET(RTN_ERROR_CLS);
     1819     4244    4            READ_GRANULES.BUF_.BUF$->GRAN.X = XSA_PARAM.GRANULE;
     1820     4245    4          CASE(%CONSEC#,%RELATIVE#);
     1821     4246    4            XSA_PARAM.GRANULE = -1;
     1822     4247    4            XSA_PARAM.WORDS_REMAINING = 0;
     1823     4248    4          END;
     1824     4249    3         END;
     1825     4250
     1826     4251    2      UBYTES = 0;
     1827     4252    2      UB$ = ADDR(SMALL_BUFFER);
     1828     4253
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:61   
     1829     4254    3      DO WHILE('1'B);
     1830     4255    3         TOSKIP = 99999;
     1831     4256    3         SKIPPED = 0;      /* # of recs Skipped sofar */
     1832     4257    3         PRECORD = %YES#;
     1833     4258    4         DO CASE(XSA_PARAM.ORG);
     1834     4259    4          CASE(%KEYED#,%INDEXED#,%IREL#);
     1835     4260    4            CALL XSA_KEYED_READ ALTRET(CHK_EOF);
     1836     4261    4          CASE(%CONSEC#);
     1837     4262    4            CALL XSA_CONSEC_READ ALTRET(CHK_EOF);
     1838     4263    4          CASE(%RELATIVE#);
     1839     4264    4            CALL XSA_RELATIVE_READ ALTRET(CHK_EOF);
     1840     4265    4          END;
     1841     4266    3         END;
     1842     4267
     1843     4268    2   CHK_EOF: ;
     1844     4269    2      XSA_PARAM.EOP = %EOP_READ;
     1845     4270    2      IF XSA_PARAM.ERR.CODE ~= %E$EOF THEN
     1846     4271    2         ALTRETURN;
     1847     4272    3      ELSE DO;
     1848     4273    3         XSA_PARAM.ERR = '0'B;
     1849     4274    3         XSA_PARAM.ARS# = 0;
     1850     4275    3         RETURN;
     1851     4276    3         END;
     1852     4277
     1853     4278    2   RTN_ERROR_CLS: ;
     1854     4279    2      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1855     4280    2      CLOSE_FF = CLOSESAVEFPT;
     1856     4281    2      CLOSE_FF.V_ = VECTOR(CLOSE_FF.V);
     1857     4282    2      CLOSE_FF.V.DCB# = XSA_PARAM.DCB#;
     1858     4283    2      CALL M$CLOSE(CLOSE_FF) ALTRET(JUSTALT);
     1859     4284    2   JUSTALT: ;
     1860     4285    2      ALTRETURN;
     1861     4286
     1862     4287    2   END XSA_PFIL_EOF;
     1863     4288        /********************************************************************/
     1864     4289        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:62   
     1865     4290        /********************************************************************/
     1866     4291    1   XSA_PFIL_BOF: PROC ALTRET;
     1867     4292        /*F*  NAME: XSA_PFIL_BOF
     1868     4293              PURPOSE: Position a "fast" file to its beginning.
     1869     4294         ***/
     1870     4295
     1871     4296        /********************/
     1872     4297
     1873     4298    2      CALL XSA_FLUSH_GRAN ALTRET( JUSTALT );
     1874     4299
     1875     4300    2      XSA_PARAM.EOP = %EOP_NONE;           /* Anything can follow      */
     1876     4301    2      RETURN;
     1877     4302
     1878     4303    2   JUSTALT: ;
     1879     4304    2      ALTRETURN;
     1880     4305
     1881     4306    2   END XSA_PFIL_BOF;
     1882     4307        /********************************************************************/
     1883     4308    1   END XSA$FSF;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:63   
--  Include file information  --

   XS_MACRO_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure XSA$FSF.

   Procedure XSA$FSF requires 2621 words for executable code.
   Procedure XSA$FSF requires 174 words of local(AUTO) storage.

    No errors detected in file XSA$FSF.:E05TSI    .

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:64   

 Object Unit name= XSA$FSF                                    File name= XSA$FSF.:E05TOU
 UTS= JUL 30 '97 09:09:14.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    165    245  XSA$FSF
    2   Proc  even  none  2621   5075  XSA$FSF
    3  RoData even  none    16     20  XSA$FSF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  XSA$FSF
     2      3          yes     yes      Std        2  XSA$OPEN
     2    370          yes     yes      Std        2  XSA$CLOSE
     2    535          yes     yes      Std        2  XSA$READ
     2    641          yes     yes      Std        2  XSA$PRECORD
     2   3671          yes     yes      Std        2  XSA$WRITE
     2   4522          yes     yes      Std        2  XSA$PFIL

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  E_UNFAST
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:65   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:66   


        1        1        /*M* XSA$FSF - contains subroutines and entry points for fast
        2        2         file access routines */
        3        3        /*T***********************************************************/
        4        4        /*T*                                                         */
        5        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        6        6        /*T*                                                         */
        7        7        /*T***********************************************************/
        8        8        /*X* PLM=3,DMC=YES */
        9        9        XSA$FSF: PROC( FPT_OPERATION, XSA_PARAM ) ALTRET;

      9  2 000000   000000 700200 xent  XSA$FSF      TSX0  ! X66_AUTO_2
         2 000001   000256 000002                    ZERO    174,2
         2 000002   000005 710000 2                  TRA     s:2662

       10       10        /*F*  NAME: XSA$FSF
       11       11              PURPOSE: Contains subroutines and entry points for fast file
       12       12                 access routines.
       13       13              DESCRIPTION: In general, all entry points require two arguments:
       14       14                 (1) the FPT for the desired operation and (2) the XSA_PARAM
       15       15                 which contains all contextual information.
       16       16         ***/
       17       17
       18       18         /***
       19       19          *** INCLUDE files:
       20       20          ***/
       21       21
       22       22        %INCLUDE CP_6;
       23      103        %INCLUDE CP_6_SUBS;
       24      643        %INCLUDE FM$GRAN;
       25      712        %INCLUDE F$CP6V_C;
       26      938        %INCLUDE F_ERRORS_C;
       27     1178        %INCLUDE XS_MACRO_C;
       28     1222        %MACRO ERRCODE(NAME=' ',STCLASS="CONSTANT SYMDEF",CODE=0,SEV=0);
       29     1223        DCL 1 NAME ALIGNED STCLASS,
       30     1224              2 * BIT(12) UNAL INIT('3023'O), /*'XS'*/
       31     1225              2 * BIT(6) UNAL INIT('01'O),  /*'A'*/
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:67   
       32     1226              2 * BIT(1) UNAL INIT('0'B),
       33     1227              2 * UBIN(14) UNAL INIT(CODE),
       34     1228              2 * UBIN(3) UNAL INIT(0);
       35     1229        %MEND;
       36     1230        /*
       37     1231            Generate error codes returned by XSA (just one).  The extractable error
       38     1232            commentary for this error is at the end of the FMF$PMME proc in that module.
       39     1233        */
       40     1234            %ERRCODE(NAME=E_UNFAST,CODE=%E$UNFAST);
       41     1242
       42     1243         /***
       43     1244          *** SYMREFs:
       44     1245          ***/
       45     1246
       46     1247    1   DCL B$TCB$ PTR SYMREF;
       47     1248
       48     1249         /***
       49     1250          *** Parameters:
       50     1251          ***/
       51     1252
       52     1253    1   DCL FPT_OPERATION UBIN DALIGNED;   /* FPT for current operation     */
       53     1254        %XSA_PARAM( FPTN=XSA_PARAM, STCLASS= ); /* User's contextual information */
       54     1284         /***
       55     1285          *** Locals:
       56     1286          ***/
       57     1287
       58     1288    1   DCL BBUF$ PTR AUTO;                     /* To (de)blocking buffer   */
       59     1289    1   DCL CRECX$ PTR AUTO;                    /* To current control word  */
       60     1290    1   DCL DATA$ PTR AUTO;
       61     1291    1   DCL DCB$ PTR AUTO;
       62     1292    1   DCL FPT$ PTR AUTO;                      /* To user's FPT            */
       63     1293    1   DCL N SBIN AUTO;                        /* "Number of" ...          */
       64     1294    1   DCL NUBX SBIN AUTO;           /* Ix of next free user buffer byte   */
       65     1295    1   DCL PRECORD BIT(1) AUTO;                /* PRECORD not READ         */
       66     1296    1   DCL READ_AT_LEAST_ONE BIT(1) AUTO;
       67     1297    1   DCL RECORD_SIZE SBIN AUTO;
       68     1298    1   DCL SKIPPED SBIN AUTO;                  /* Number skipped           */
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:68   
       69     1299    1   DCL SMALL_BUFFER CHAR(1) AUTO;
       70     1300    1   DCL TOSKIP SBIN AUTO;              /* Number of records to skip     */
       71     1301    1   DCL UB$ PTR AUTO;                       /* To user's buffer         */
       72     1302    1   DCL UBYTES SBIN AUTO;                   /* Size of user's buffer    */
       73     1303    1   DCL VAREA$ PTR AUTO;                    /* Pointer to V area        */
       74     1304    1   DCL 1 V_ AUTO,
       75     1305    1         2 * UBIN WORD,
       76     1306    1         2 VAREA$ PTR;
       77     1307
       78     1308    1   DCL 1 GDA27 ALIGNED AUTO,
       79     1309    1         2 * UBIN(9) UNAL,
       80     1310    1         2 GRAN UBIN HALF UNAL;
       81     1311    1   DCL UBIN27_GDA REDEF GDA27 UBIN(27);
       82     1312    1   DCL 1 GDA36 ALIGNED AUTO,
       83     1313    1         2 * UBIN HALF UNAL,
       84     1314    1         2 GRAN UBIN HALF UNAL;
       85     1315    1   DCL UBIN36_GDA REDEF GDA36 UBIN WORD;
       86     1316    1   DCL G$ PTR;
       87     1317    1   DCL GBYTES UBIN;
       88     1318    1   DCL WRDS SBIN;
       89     1319
       90     1320        %FPT_CLOSE( FPTN=CLOSE_FF, STCLASS=AUTO );
       91     1362        %FPT_OPEN( FPTN=OPEN_FF, STCLASS=AUTO );
       92     1471        %FPT_PRECORD( FPTN=PRECORD_FF, STCLASS=AUTO );
       93     1492        %FPT_READ( FPTN=READ_GRANULES, STCLASS=AUTO );
       94     1531        %FPT_WRITE( FPTN=WRITE_NEXT_GRANULE, STCLASS=AUTO );
       95     1562
       96     1563         /***
       97     1564          *** BASED:
       98     1565          ***/
       99     1566
      100     1567        %B$TCB;
      101     1570        %B$ALT;
      102     1578        %F$DCB;
      103     1635
      104     1636        %FPT_OPEN( FPTN=OPEN_FPT, STCLASS="BASED(FPT$)" );
      105     1745        %FPT$OPEN_V( FPTN=OPEN_FPTV, BASED="BASED(VAREA$)" );
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:69   
      106     1760
      107     1761        %FPT_READ( FPTN=READ_FPT, STCLASS="BASED(FPT$)" );
      108     1800        %FPT$READ_V( FPTN=READ_FPTV, BASED="BASED(VAREA$)" );
      109     1807
      110     1808        %FPT_WRITE( FPTN=WRITE_FPT, STCLASS="BASED(FPT$)" );
      111     1839        %FPT$WRITE_V( FPTN=WRITE_FPTV, BASED="BASED(VAREA$)" );
      112     1845
      113     1846        %FPT_CLOSE( FPTN=CLOSE_FPT, STCLASS="BASED(FPT$)" );
      114     1888        %FPT$CLOSE_V( FPTN=CLOSE_FPTV, BASED="BASED(VAREA$)" );
      115     1897
      116     1898        %FPT_PFIL( FPTN=PFIL_FPT, STCLASS="BASED(FPT$)" );
      117     1913        %FPT$PFIL_V( FPTN=PFIL_FPTV, BASED="BASED(VAREA$)" );
      118     1916
      119     1917        %FPT_PRECORD( FPTN=PRECORD_FPT, STCLASS="BASED(FPT$)" );
      120     1938        %FPT$PRECORD_V( FPTN=PRECORD_FPTV, BASED="BASED(VAREA$)" );
      121     1943
      122     1944        %FM$GRAN(BASED="BASED(BBUF$)");
      123     1948        %FM$CON(BASED="BASED(CRECX$)");
      124     1952        %FM$REL(BASED="BASED(CRECX$)");
      125     1955        %FM$KEYTBL;
      126     1958        %FM$KEYENT;
      127     1961        %FM$IRENT;
      128     1964        %FM$MISEG;
      129     1968    1   DCL BASED_WORD SBIN BASED;
      130     1969    1   DCL 1 GRAN BASED ALIGNED,
      131     1970    1         2 CRECNO UBIN HALF UNAL,
      132     1971    1         2 X UBIN HALF UNAL;
      133     1972    1   DCL NCHARS CHAR(N) BASED CALIGNED;
      134     1973
      135     1974        %EQU GRANULE_SIZE=1024;
      136     1975        %EQU GRANULE_SIZE_BYTES=4096;
      137     1976        %EQU BYTES_PER_WORD=4;
      138     1977    1   DCL 1 FULL_GRAN ALIGNED BASED,
      139     1978    1         2 * UBIN WORD,
      140     1979    1         2 NOT_FIRST_WORD(0:%(GRANULE_SIZE-2)) UBIN WORD;
      141     1980
      142     1981         /***
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:70   
      143     1982          *** CONSTANT:
      144     1983          ***/
      145     1984
      146     1985        %FPT_CLOSE( FPTN=CLOSESAVEFPT,
      147     1986           STCLASS=CONSTANT,
      148     1987           DISP=SAVE );
      149     2029
      150     2030        %FPT_READ( FPTN=READ_GRANULES_CONSTANT,
      151     2031           STCLASS=CONSTANT,
      152     2032           WAIT=YES,
      153     2033           FULL=YES,
      154     2034           KEYS=YES );
      155     2073
      156     2074        %FPT_WRITE( FPTN=WRITE_NEXT_GRANULE_CONSTANT,
      157     2075           STCLASS=CONSTANT,
      158     2076           FULL=YES,
      159     2077           WAIT=YES );
      160     2108
      161     2109        %FPT_CLOSE( FPTN=DEFAULT_CLOSE_FPT,
      162     2110           STCLASS=CONSTANT,
      163     2111           DISP=SAVE );
      164     2153
      165     2154        %FPT_OPEN( FPTN=DEFAULT_OPEN_FPT,
      166     2155           STCLASS=CONSTANT);
      167     2264
      168     2265        %FPT_PRECORD( FPTN=DEFAULT_PRECORD_FPT,
      169     2266           STCLASS=CONSTANT);
      170     2287
      171     2288        %VLP_ERRCODE( FPTN=E_WRITE,
      172     2289           STCLASS=CONSTANT,
      173     2290           FCG='3023'O,
      174     2291           MID='01'O,
      175     2292           MON='1'B,
      176     2293           SEV=0,
      177     2294           ERR#=%E$WRITE);
      178     2339
      179     2340        %VLP_ERRCODE( FPTN=E_READ,
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:71   
      180     2341           STCLASS=CONSTANT,
      181     2342           FCG='3023'O,
      182     2343           MID='01'O,
      183     2344           MON='1'B,
      184     2345           SEV=0,
      185     2346           ERR#=%E$READ);
      186     2391
      187     2392        %VLP_ERRCODE( FPTN=E_EOF,
      188     2393           STCLASS=CONSTANT,
      189     2394           FCG='3023'O,
      190     2395           MID='01'O,
      191     2396           MON='1'B,
      192     2397           SEV=0,
      193     2398           ERR#=%E$EOF);
      194     2443
      195     2444        %VLP_ERRCODE( FPTN=E_LD,
      196     2445           STCLASS=CONSTANT,
      197     2446           FCG='3023'O,
      198     2447           MID='01'O,
      199     2448           MON='1'B,
      200     2449           SEV=0,
      201     2450           ERR#=%E$LD);
      202     2495
      203     2496        %VLP_ERRCODE( FPTN=E_POS,
      204     2497           STCLASS=CONSTANT,
      205     2498           FCG='3023'O,
      206     2499           MID='01'O,
      207     2500           MON='1'B,
      208     2501           SEV=0,
      209     2502           ERR#=%E$POS);
      210     2547
      211     2548        %VLP_ERRCODE( FPTN=E_NOCONT,
      212     2549           STCLASS=CONSTANT,
      213     2550           FCG='3023'O,
      214     2551           MID='01'O,
      215     2552           MON='1'B,
      216     2553           SEV=0,
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:72   
      217     2554           ERR#=%E$NOCONT);
      218     2599
      219     2600        %VLP_ERRCODE( FPTN=E_DI,
      220     2601           STCLASS=CONSTANT,
      221     2602           FCG='3023'O,
      222     2603           MID='01'O,
      223     2604           MON='1'B,
      224     2605           SEV=0,
      225     2606           ERR#=%E$DI);
      226     2651        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:73   
      227     2652        /********************************************************************/
      228     2653    1   XSA$OPEN: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;

   2653  2 000003   000000 700200 xent  XSA$OPEN     TSX0  ! X66_AUTO_2
         2 000004   000256 000002                    ZERO    174,2

      229     2654        /*F*  NAME: XSA$OPEN
      230     2655              PURPOSE: Determines if file is a candidate for fast file access
      231     2656                 and opens file either or fast access or standard.  Initializes
      232     2657                 user's XSA_PARAM.
      233     2658         ***/
      234     2659
      235     2660        /********************/
      236     2661
      237     2662    1      IF XSA_PARAM.SIG1 ~= 'UNFA' AND XSA_PARAM.SIG2 ~= 'ST!?' THEN

   2662  2 000005   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 000006   000006 236100                    LDQ     6,,PR0
         2 000007   000243 116000 1                  CMPQ    E_DI+1
         2 000010   000016 600000 2                  TZE     s:2665
         2 000011   000007 236100                    LDQ     7,,PR0
         2 000012   000244 116000 1                  CMPQ    E_DI+2
         2 000013   000016 600000 2                  TZE     s:2665

      238     2663    1         XSA_PARAM.UNFAST# = '0'B;

   2663  2 000014   000000 236000 3                  LDQ     0
         2 000015   000015 356100                    ANSQ    13,,PR0

      239     2664
      240     2665    1      FPT$ = ADDR(FPT_OPERATION);

   2665  2 000016   200003 236100                    LDQ     @FPT_OPERATION,,AUTO
         2 000017   200011 756100                    STQ     FPT$,,AUTO

      241     2666
      242     2667    1      V_ = OPEN_FPT.V_;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:74   

   2667  2 000020   200011 471500                    LDP1    FPT$,,AUTO
         2 000021   100000 237100                    LDAQ    0,,PR1
         2 000022   200025 755100                    STA     V_,,AUTO
         2 000023   200026 756100                    STQ     V_+1,,AUTO

      243     2668    1      VAREA$ = V_.VAREA$;

   2668  2 000024   200026 236100                    LDQ     V_+1,,AUTO
         2 000025   200024 756100                    STQ     VAREA$,,AUTO

      244     2669
      245     2670    1      XSA_PARAM.ERR = '0'B;

   2670  2 000026   000001 450100                    STZ     1,,PR0

      246     2671
      247     2672         /***
      248     2673          *** Perform SETDCB open to determine initial suitability for fast
      249     2674          *** file access.
      250     2675          ***/
      251     2676
      252     2677    1      OPEN_FF = OPEN_FPT;

   2677  2 000027   000100 100500                    MLR     fill='000'O
         2 000030   100000 000350                    ADSC9   0,,PR1                   cn=0,n=232
         2 000031   200072 000350                    ADSC9   OPEN_FF,,AUTO            cn=0,n=232

      253     2678    1      OPEN_FF.V_ = VECTOR(OPEN_FF.V);

   2678  2 000032   000001 235000 3                  LDA     1
         2 000033   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 000034   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 000035   000136 036003                    ADLQ    94,DU
         2 000036   200072 757100                    STAQ    OPEN_FF,,AUTO

      254     2679
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:75   
      255     2680    1      OPEN_FF.V.SETDCB# = %YES#;

   2680  2 000037   100000 236007                    LDQ     32768,DL
         2 000040   200136 256100                    ORSQ    OPEN_FF+36,,AUTO

      256     2681    1      XSA_PARAM.DCB# = OPEN_FPTV.DCB#;

   2681  2 000041   200024 473500                    LDP3    VAREA$,,AUTO
         2 000042   300000 220100                    LDX0    0,,PR3
         2 000043   000014 440100                    SXL0    12,,PR0

      257     2682    1      CALL M$OPEN( OPEN_FF ) ALTRET( RTN_OPEN_ERROR );

   2682  2 000044   200072 630500                    EPPR0   OPEN_FF,,AUTO
         2 000045   450000 713400                    CLIMB   alt,open
         2 000046   410400 401760                    pmme    nvectors=18
         2 000047   000172 702000 2                  TSX2    RTN_OPEN_ERROR

      258     2683    1      CALL XSA_CHECK_FILE ALTRET( NOT_FAST_FILE );

   2683  2 000050   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000051   200231 756100                    STQ     WRITE_NEXT_GRANULE+13,,AUTO
         2 000052   000202 701000 2                  TSX1    XSA_CHECK_FILE
         2 000053   000142 702000 2                  TSX2    NOT_FAST_FILE

      259     2684
      260     2685         /***
      261     2686          *** Perform real open and redetermine suitability for fast file access.
      262     2687          ***/
      263     2688
      264     2689    1      OPEN_FF.V.SETDCB# = VAREA$->OPEN_FPTV.SETDCB;

   2689  2 000054   200024 470500                    LDP0    VAREA$,,AUTO
         2 000055   000000 236100                    LDQ     0,,PR0
         2 000056   200136 676100                    ERQ     OPEN_FF+36,,AUTO
         2 000057   100000 376007                    ANQ     32768,DL
         2 000060   200136 656100                    ERSQ    OPEN_FF+36,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:76   

      265     2690    1      IF DCB$->F$DCB.FUN# = %CREATE#

   2690  2 000061   200010 471500                    LDP1    DCB$,,AUTO
         2 000062   100032 236100                    LDQ     26,,PR1
         2 000063   000777 376003                    ANQ     511,DU
         2 000064   000003 116003                    CMPQ    3,DU
         2 000065   000072 601000 2                  TNZ     s:2692

      266     2691    1      THEN XSA_PARAM.FMOD = %YES#;

   2691  2 000066   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 000067   000001 236003                    LDQ     1,DU
         2 000070   300015 256100                    ORSQ    13,,PR3
         2 000071   000075 710000 2                  TRA     s:2697

      267     2692    1      ELSE XSA_PARAM.FMOD = %NO#;

   2692  2 000072   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 000073   000002 236000 3                  LDQ     2
         2 000074   300015 356100                    ANSQ    13,,PR3

      268     2693           /* If any other file organizations are added to FSF, remember to
      269     2694              also add them to the monitor open code checks or open may change
      270     2695              this ublock open to sequential and we'll revert to unfast when
      271     2696              we don't want to.                                            */
      272     2697    1      OPEN_FF.V.ACS# = %UBLOCK#;

   2697  2 000075   000014 236007                    LDQ     12,DL
         2 000076   200140 552104                    STBQ    OPEN_FF+38,'04'O,AUTO

      273     2698    1      CALL M$OPEN( OPEN_FF ) ALTRET( RTN_OPEN_ERROR );

   2698  2 000077   200072 630500                    EPPR0   OPEN_FF,,AUTO
         2 000100   450000 713400                    CLIMB   alt,open
         2 000101   410400 401760                    pmme    nvectors=18
         2 000102   000172 702000 2                  TSX2    RTN_OPEN_ERROR
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:77   

      274     2699    1      CALL XSA_CHECK_FILE( %UBLOCK# ) ALTRET( NOT_FAST_FILE_CLS );

   2699  2 000103   000004 236000 3                  LDQ     4
         2 000104   200231 756100                    STQ     WRITE_NEXT_GRANULE+13,,AUTO
         2 000105   000202 701000 2                  TSX1    XSA_CHECK_FILE
         2 000106   000121 702000 2                  TSX2    NOT_FAST_FILE_CLS

      275     2700
      276     2701         /***
      277     2702          *** Initialize for first read or write.
      278     2703          ***/
      279     2704
      280     2705    1      XSA_PARAM.EOP = %EOP_NONE;

   2705  2 000107   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 000110   000005 236000 3                  LDQ     5
         2 000111   000015 356100                    ANSQ    13,,PR0

      281     2706    1      XSA_PARAM.CRECNO = 0;

   2706  2 000112   000006 450100                    STZ     6,,PR0

      282     2707    1      XSA_PARAM.ARS# = DCB$->F$DCB.ARS#;

   2707  2 000113   200010 471500                    LDP1    DCB$,,AUTO
         2 000114   100000 235100                    LDA     0,,PR1
         2 000115   000000 755100                    STA     0,,PR0

      283     2708    1      XSA_PARAM.CONT = '0'B;

   2708  2 000116   000006 236000 3                  LDQ     6
         2 000117   000015 356100                    ANSQ    13,,PR0

      284     2709    1      RETURN;

   2709  2 000120   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:78   

   2708  2 000121                       NOT_FAST_FI* null
      285     2710
      286     2711         /***
      287     2712          *** Error handling.
      288     2713          ***/
      289     2714
      290     2715    1   NOT_FAST_FILE_CLS: ; /* File not suitable...close since ACS wrong   */
      291     2716    1      CLOSE_FF = CLOSESAVEFPT;

   2716  2 000121   000100 100400                    MLR     fill='000'O
         2 000122   000002 000170 1                  ADSC9   CLOSESAVEFPT             cn=0,n=120
         2 000123   200034 000170                    ADSC9   CLOSE_FF,,AUTO           cn=0,n=120

      292     2717    1      CLOSE_FF.V_ = VECTOR(CLOSE_FF.V);

   2717  2 000124   000007 235000 3                  LDA     7
         2 000125   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 000126   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 000127   000066 036003                    ADLQ    54,DU
         2 000130   200034 757100                    STAQ    CLOSE_FF,,AUTO

      293     2718    1      CLOSE_FF.V.DCB# = OPEN_FPTV.DCB#;

   2718  2 000131   200024 470500                    LDP0    VAREA$,,AUTO
         2 000132   000000 220100                    LDX0    0,,PR0
         2 000133   200066 740100                    STX0    CLOSE_FF+26,,AUTO

      294     2719    1      CALL M$CLOSE( CLOSE_FF ) ALTRET( RTN_OPEN_ERROR );

   2719  2 000134   200034 630500                    EPPR0   CLOSE_FF,,AUTO
         2 000135   450001 713400                    CLIMB   alt,close
         2 000136   406000 401760                    pmme    nvectors=13
         2 000137   000172 702000 2                  TSX2    RTN_OPEN_ERROR

      295     2720    1      OPEN_FF.V.OPER.THISF# = '1'B;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:79   
   2720  2 000140   002000 236007                    LDQ     1024,DL
         2 000141   200136 256100                    ORSQ    OPEN_FF+36,,AUTO

   2720  2 000142                       NOT_FAST_FI* null
      296     2721
      297     2722    1   NOT_FAST_FILE: ;    /* File not suitable...open for standard use    */
      298     2723    1      IF DCB$->F$DCB.ACS# = %UBLOCK#

   2723  2 000142   200010 470500                    LDP0    DCB$,,AUTO
         2 000143   000036 236100                    LDQ     30,,PR0
         2 000144   000777 376007                    ANQ     511,DL
         2 000145   000014 116007                    CMPQ    12,DL
         2 000146   000151 601000 2                  TNZ     s:2725

      299     2724    1      THEN OPEN_FF.V.ACS# = %SEQUEN#;

   2724  2 000147   000001 236007                    LDQ     1,DL
         2 000150   200140 552104                    STBQ    OPEN_FF+38,'04'O,AUTO

      300     2725    1      XSA_PARAM.ORG = 0;                   /* Indicate not fast file   */

   2725  2 000151   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 000152   000000 236003                    LDQ     0,DU
         2 000153   100014 552120                    STBQ    12,'20'O,PR1

      301     2726    1      OPEN_FF.V.SETDCB# = VAREA$->OPEN_FPTV.SETDCB;

   2726  2 000154   200024 473500                    LDP3    VAREA$,,AUTO
         2 000155   300000 236100                    LDQ     0,,PR3
         2 000156   200136 676100                    ERQ     OPEN_FF+36,,AUTO
         2 000157   100000 376007                    ANQ     32768,DL
         2 000160   200136 656100                    ERSQ    OPEN_FF+36,,AUTO

      302     2727    1      CALL M$OPEN( OPEN_FF ) ALTRET( RTN_OPEN_ERROR );

   2727  2 000161   200072 630500                    EPPR0   OPEN_FF,,AUTO
         2 000162   450000 713400                    CLIMB   alt,open
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:80   
         2 000163   410400 401760                    pmme    nvectors=18
         2 000164   000172 702000 2                  TSX2    RTN_OPEN_ERROR

      303     2728    1      XSA_PARAM.ARS# = DCB$->F$DCB.ARS#;

   2728  2 000165   200010 470500                    LDP0    DCB$,,AUTO
         2 000166   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 000167   000000 235100                    LDA     0,,PR0
         2 000170   100000 755100                    STA     0,,PR1

      304     2729    1      RETURN;

   2729  2 000171   000000 702200 xent               TSX2  ! X66_ARET

   2728  2 000172                       RTN_OPEN_ER* null
      305     2730
      306     2731    1   RTN_OPEN_ERROR: ;                       /* Error on open            */
      307     2732    1      XSA_PARAM.ORG = 0;                   /* Don't mislead user       */

   2732  2 000172   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 000173   000000 236003                    LDQ     0,DU
         2 000174   000014 552120                    STBQ    12,'20'O,PR0

      308     2733    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   2733  2 000175   000000 471400 xsym               LDP1    B$TCB$
         2 000176   100000 473500                    LDP3    0,,PR1
         2 000177   300102 236100                    LDQ     66,,PR3
         2 000200   000001 756100                    STQ     1,,PR0

      309     2734    1      ALTRETURN;

   2734  2 000201   000000 702200 xent               TSX2  ! X66_AALT

      310     2735
      311     2736        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:81   
      312     2737        /****************************************/
      313     2738    1   XSA_CHECK_FILE: PROC( ACS_REQUIRED ) ALTRET;

   2738  2 000202   200230 741300       XSA_CHECK_F* STX1  ! WRITE_NEXT_GRANULE+12,,AUTO

      314     2739        /*F*  NAME:    XSA_CHECK_FILE
      315     2740              PURPOSE: Determines if file is a candidate for fast file access.
      316     2741                       The alternate return is taken if not.
      317     2742        */
      318     2743
      319     2744         /***
      320     2745          *** Parameters:
      321     2746          ***/
      322     2747
      323     2748    2   DCL ACS_REQUIRED UBIN WORD;
      324     2749            /* Only needs to be passed if F$DCB.ACS# must be other than
      325     2750               %SEQUEN# (e.g., %UBLOCK#) after the open is completed.      */
      326     2751
      327     2752        /********************/
      328     2753
      329     2754    2      DCB$ = DCBADDR( OPEN_FPTV.DCB# );

   2754  2 000203   000010 470400 3                  LDP0    8
         2 000204   000000 471500                    LDP1    0,,PR0
         2 000205   200024 473500                    LDP3    VAREA$,,AUTO
         2 000206   300000 220100                    LDX0    0,,PR3
         2 000207   100000 236110                    LDQ     0,X0,PR1
         2 000210   200010 756100                    STQ     DCB$,,AUTO

      330     2755    2      IF DCB$->F$DCB.ASN# ~= %FILE#

   2755  2 000211   200010 474500                    LDP4    DCB$,,AUTO
         2 000212   400032 236100                    LDQ     26,,PR4
         2 000213   777000 376007                    ANQ     -512,DL
         2 000214   001000 116007                    CMPQ    512,DL
         2 000215   000231 601000 2                  TNZ     s:2758
         2 000216   400031 236100                    LDQ     25,,PR4
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:82   
         2 000217   000600 376007                    ANQ     384,DL
         2 000220   000200 116007                    CMPQ    128,DL
         2 000221   000231 600000 2                  TZE     s:2758
         2 000222   300002 236100                    LDQ     2,,PR3
         2 000223   000777 376007                    ANQ     511,DL
         2 000224   000001 116007                    CMPQ    1,DL
         2 000225   000232 600000 2                  TZE     s:2763
         2 000226   300002 236100                    LDQ     2,,PR3
         2 000227   000777 316007                    CANQ    511,DL
         2 000230   000232 600000 2                  TZE     s:2763

      331     2756    2        OR DCB$->F$DCB.SHARE# = %ALL#
      332     2757    2        OR (OPEN_FPTV.ACS ~= %SEQUEN# AND OPEN_FPTV.ACS ~= 0)
      333     2758    2      THEN ALTRETURN;      /* Not file or shared or not sequential    */

   2758  2 000231   000000 702211                    TSX2  ! 0,X1

      334     2759
      335     2760           /* Check to be sure F$DCB.ACS# is really what is required after
      336     2761              the open.                                                    */
      337     2762
      338     2763    2      IF ADDR(ACS_REQUIRED) = ADDR(NIL)    /* SETDCB open              */

   2763  2 000232   200231 236100                    LDQ     @ACS_REQUIRED,,AUTO
         2 000233   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000234   000252 601000 2                  TNZ     s:2768

      339     2764    2      THEN IF OPEN_FPTV.ACS = 0 AND DCB$->F$DCB.ACS# ~= %SEQUEN#

   2764  2 000235   300002 236100                    LDQ     2,,PR3
         2 000236   000777 316007                    CANQ    511,DL
         2 000237   000260 601000 2                  TNZ     s:2771
         2 000240   400036 236100                    LDQ     30,,PR4
         2 000241   000777 376007                    ANQ     511,DL
         2 000242   000001 116007                    CMPQ    1,DL
         2 000243   000260 600000 2                  TZE     s:2771
         2 000244   000014 116007                    CMPQ    12,DL
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:83   
         2 000245   000260 600000 2                  TZE     s:2771
         2 000246   400036 236100                    LDQ     30,,PR4
         2 000247   000777 316007                    CANQ    511,DL
         2 000250   000260 600000 2                  TZE     s:2771

      340     2765    2           AND DCB$->F$DCB.ACS# ~= %UBLOCK# AND DCB$->F$DCB.ACS# ~= 0
      341     2766    2         THEN ALTRETURN;

   2766  2 000251   000000 702211                    TSX2  ! 0,X1

      342     2767    2         ELSE;
      343     2768    2      ELSE IF DCB$->F$DCB.ACS# ~= ACS_REQUIRED /* UBLOCK open         */

   2768  2 000252   200231 475500                    LDP5    @ACS_REQUIRED,,AUTO
         2 000253   400036 236100                    LDQ     30,,PR4
         2 000254   000777 376007                    ANQ     511,DL
         2 000255   500000 116100                    CMPQ    0,,PR5
         2 000256   000260 600000 2                  TZE     s:2771

      344     2769    2         THEN ALTRETURN;

   2769  2 000257   000000 702211                    TSX2  ! 0,X1

      345     2770
      346     2771    2      IF DCB$->F$DCB.SEED# THEN       /* Encryption seed was specified. */

   2771  2 000260   400062 235100                    LDA     50,,PR4
         2 000261   000263 600000 2                  TZE     s:2774

      347     2772    2         ALTRETURN;

   2772  2 000262   000000 702211                    TSX2  ! 0,X1

      348     2773
      349     2774    2      N = DCB$->F$DCB.ORG#;

   2774  2 000263   400032 236100                    LDQ     26,,PR4
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:84   
         2 000264   000033 772000                    QRL     27
         2 000265   200012 756100                    STQ     N,,AUTO

      350     2775    2      IF DCB$->F$DCB.FUN# ~= %IN# AND DCB$->F$DCB.FUN# ~= 0

   2775  2 000266   400032 236100                    LDQ     26,,PR4
         2 000267   000777 376003                    ANQ     511,DU
         2 000270   000002 116003                    CMPQ    2,DU
         2 000271   000326 600000 2                  TZE     s:2784
         2 000272   400032 236100                    LDQ     26,,PR4
         2 000273   000777 316003                    CANQ    511,DU
         2 000274   000326 600000 2                  TZE     s:2784

      351     2776    2      THEN IF DCB$->F$DCB.FUN# ~= %CREATE#

   2776  2 000275   400032 236100                    LDQ     26,,PR4
         2 000276   000777 376003                    ANQ     511,DU
         2 000277   000003 116003                    CMPQ    3,DU
         2 000300   000302 600000 2                  TZE     s:2778

      352     2777    2         THEN ALTRETURN;                  /* Not IN or CREATE         */

   2777  2 000301   000000 702211                    TSX2  ! 0,X1

      353     2778    2         ELSE IF N ~= %CONSEC# AND N ~= 0

   2778  2 000302   200012 235100                    LDA     N,,AUTO
         2 000303   000001 115007                    CMPA    1,DL
         2 000304   000310 600000 2                  TZE     s:2780
         2 000305   000000 115003                    CMPA    0,DU
         2 000306   000310 600000 2                  TZE     s:2780

      354     2779    2            THEN ALTRETURN;          /* Not CREATE CONSEC or SETDCB   */

   2779  2 000307   000000 702211                    TSX2  ! 0,X1

      355     2780    2            ELSE IF DCB$->F$DCB.CTG# OR DCB$->F$DCB.EXIST# = %OLDFILE#
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:85   

   2780  2 000310   400031 236100                    LDQ     25,,PR4
         2 000311   004000 316007                    CANQ    2048,DL
         2 000312   000321 601000 2                  TNZ     s:2782
         2 000313   400031 236100                    LDQ     25,,PR4
         2 000314   003000 376007                    ANQ     1536,DL
         2 000315   002000 116007                    CMPQ    1024,DL
         2 000316   000321 600000 2                  TZE     s:2782
         2 000317   400064 234100                    SZN     52,,PR4
         2 000320   000322 605000 2                  TPL     s:2783

      356     2781    2                 OR DCB$->F$DCB.FEXT
      357     2782    2               THEN ALTRETURN;            /* Can't catalog or extend  */

   2782  2 000321   000000 702211                    TSX2  ! 0,X1

      358     2783    2               ELSE XSA_PARAM.INPUT = %NO#; /* Write only             */

   2783  2 000322   200004 475500                    LDP5    @XSA_PARAM,,AUTO
         2 000323   000011 236000 3                  LDQ     9
         2 000324   500015 356100                    ANSQ    13,,PR5
         2 000325   000331 710000 2                  TRA     s:2786

      359     2784    2      ELSE XSA_PARAM.INPUT = %YES#;       /* Read only                */

   2784  2 000326   200004 475500                    LDP5    @XSA_PARAM,,AUTO
         2 000327   000002 236003                    LDQ     2,DU
         2 000330   500015 256100                    ORSQ    13,,PR5

      360     2785
      361     2786    2      IF N = 0 THEN RETURN;                /* SETDCB open with no ORG  */

   2786  2 000331   200012 235100                    LDA     N,,AUTO
         2 000332   000335 601000 2                  TNZ     s:2787

   2786  2 000333   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 000334   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:86   

      362     2787    2      IF NOT ( N = %INDEXED# OR N = %RELATIVE# OR N = %IREL#)

   2787  2 000335   000006 115007                    CMPA    6,DL
         2 000336   000356 600000 2                  TZE     s:2797
         2 000337   000005 115007                    CMPA    5,DL
         2 000340   000356 600000 2                  TZE     s:2797
         2 000341   000015 115007                    CMPA    13,DL
         2 000342   000356 600000 2                  TZE     s:2797

      363     2788    3      THEN DO;

      364     2789    3         IF NOT ( N = %KEYED# OR N = %CONSEC# )

   2789  2 000343   000002 115007                    CMPA    2,DL
         2 000344   000351 600000 2                  TZE     s:2792
         2 000345   000001 115007                    CMPA    1,DL
         2 000346   000351 600000 2                  TZE     s:2792

      365     2790    3         THEN ALTRETURN; /* Not INDEXED, RELATIVE, IREL, KEYED, or CONSEC */

   2790  2 000347   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 000350   000000 702211                    TSX2  ! 0,X1

      366     2791    4         ELSE DO;

      367     2792    4            IF DCB$->F$DCB.COMP#

   2792  2 000351   400031 236100                    LDQ     25,,PR4
         2 000352   000100 316007                    CANQ    64,DL
         2 000353   000356 600000 2                  TZE     s:2797

      368     2793    4            THEN ALTRETURN;

   2793  2 000354   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 000355   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:87   
      369     2794    4            END;
      370     2795    3         END;
      371     2796
      372     2797    2      IF DCB$->F$DCB.DESC.BAD# THEN    /* File inconsistency detected. */

   2797  2 000356   400005 236100                    LDQ     5,,PR4
         2 000357   020000 316007                    CANQ    8192,DL
         2 000360   000363 600000 2                  TZE     s:2800

      373     2798    2         ALTRETURN;

   2798  2 000361   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 000362   000000 702211                    TSX2  ! 0,X1

      374     2799
      375     2800    2      XSA_PARAM.ORG = N; /* Setting XSA_PARAM.ORG indicates file suitable */

   2800  2 000363   200012 236100                    LDQ     N,,AUTO
         2 000364   000022 736000                    QLS     18
         2 000365   500014 552120                    STBQ    12,'20'O,PR5

      376     2801
      377     2802    2      RETURN;

   2802  2 000366   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 000367   000001 702211                    TSX2  ! 1,X1

      378     2803
      379     2804    2   END XSA_CHECK_FILE;
      380     2805        /********************************************************************/
      381     2806        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:88   
      382     2807        /********************************************************************/
      383     2808    1   XSA$CLOSE: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;

   2808  2 000370   000000 700200 xent  XSA$CLOSE    TSX0  ! X66_AUTO_2
         2 000371   000256 000002                    ZERO    174,2

      384     2809        /*F*  NAME: XSA$CLOSE
      385     2810              PURPOSE: Close DCB.
      386     2811         ***/
      387     2812
      388     2813        /********************/
      389     2814
      390     2815    1      FPT$ = ADDR(FPT_OPERATION);

   2815  2 000372   200003 236100                    LDQ     @FPT_OPERATION,,AUTO
         2 000373   200011 756100                    STQ     FPT$,,AUTO

      391     2816    1      XSA_PARAM.ERR = '0'B;

   2816  2 000374   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 000375   000001 450100                    STZ     1,,PR0

      392     2817
      393     2818    1      IF (CLOSE_FPT.V.DISP#~=%RELEASE#) AND

   2818  2 000376   200011 471500                    LDP1    FPT$,,AUTO
         2 000377   100032 236100                    LDQ     26,,PR1
         2 000400   000777 376007                    ANQ     511,DL
         2 000401   000001 116007                    CMPQ    1,DL
         2 000402   000410 600000 2                  TZE     CLOSE_ANYWAY
         2 000403   000005 236100                    LDQ     5,,PR0
         2 000404   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000405   000410 600000 2                  TZE     CLOSE_ANYWAY

      394     2819    1        (XSA_PARAM.BBUF_.BUF$ ~= ADDR(NIL)) THEN
      395     2820    1         CALL XSA_FLUSH_GRAN ALTRET( CLOSE_ANYWAY );

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:89   
   2820  2 000406   000460 701000 2                  TSX1    XSA_FLUSH_GRAN
         2 000407   000410 702000 2                  TSX2    CLOSE_ANYWAY

   2818  2 000410                       CLOSE_ANYWAY null
      396     2821
      397     2822    1   CLOSE_ANYWAY: ;
      398     2823    1      CALL M$CLOSE( CLOSE_FPT ) ALTRET( RTN_OPEN_ERROR );

   2823  2 000410   200011 470500                    LDP0    FPT$,,AUTO
         2 000411   450001 713400                    CLIMB   alt,close
         2 000412   406000 401760                    pmme    nvectors=13
         2 000413   000172 702000 2                  TSX2    RTN_OPEN_ERROR

      399     2824
      400     2825    1      V_ = CLOSE_FPT.V_;

   2825  2 000414   200011 470500                    LDP0    FPT$,,AUTO
         2 000415   000000 237100                    LDAQ    0,,PR0
         2 000416   200025 755100                    STA     V_,,AUTO
         2 000417   200026 756100                    STQ     V_+1,,AUTO

      401     2826    1      VAREA$ = V_.VAREA$;

   2826  2 000420   200026 236100                    LDQ     V_+1,,AUTO
         2 000421   200024 756100                    STQ     VAREA$,,AUTO

      402     2827
      403     2828    1      DCB$ = DCBADDR( CLOSE_FPTV.DCB# );

   2828  2 000422   000010 471400 3                  LDP1    8
         2 000423   100000 473500                    LDP3    0,,PR1
         2 000424   200024 474500                    LDP4    VAREA$,,AUTO
         2 000425   400000 220100                    LDX0    0,,PR4
         2 000426   300000 236110                    LDQ     0,X0,PR3
         2 000427   200010 756100                    STQ     DCB$,,AUTO

      404     2829    1      IF DCB$->F$DCB.ACS# = %UBLOCK#
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:90   

   2829  2 000430   200010 475500                    LDP5    DCB$,,AUTO
         2 000431   500036 236100                    LDQ     30,,PR5
         2 000432   000777 376007                    ANQ     511,DL
         2 000433   000014 116007                    CMPQ    12,DL
         2 000434   000457 601000 2                  TNZ     s:2839

      405     2830    2      THEN DO;                            /* Change DCB.ACS to SEQUEN */

      406     2831    2         OPEN_FF = DEFAULT_OPEN_FPT;

   2831  2 000435   000100 100400                    MLR     fill='000'O
         2 000436   000130 000350 1                  ADSC9   DEFAULT_OPEN_FPT         cn=0,n=232
         2 000437   200072 000350                    ADSC9   OPEN_FF,,AUTO            cn=0,n=232

      407     2832    2         OPEN_FF.V_ = VECTOR(OPEN_FF.V);

   2832  2 000440   000001 235000 3                  LDA     1
         2 000441   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 000442   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 000443   000136 036003                    ADLQ    94,DU
         2 000444   200072 757100                    STAQ    OPEN_FF,,AUTO

      408     2833    2         OPEN_FF.V.ACS# = %SEQUEN#;

   2833  2 000445   000001 236007                    LDQ     1,DL
         2 000446   200140 552104                    STBQ    OPEN_FF+38,'04'O,AUTO

      409     2834    2         OPEN_FF.V.DCB# = CLOSE_FPTV.DCB#;

   2834  2 000447   400000 220100                    LDX0    0,,PR4
         2 000450   200136 740100                    STX0    OPEN_FF+36,,AUTO

      410     2835    2         OPEN_FF.V.SETDCB# = %YES#;

   2835  2 000451   100000 236007                    LDQ     32768,DL
         2 000452   200136 256100                    ORSQ    OPEN_FF+36,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:91   

      411     2836    2         CALL M$OPEN( OPEN_FF ) ALTRET( JUSTALT );

   2836  2 000453   200072 630500                    EPPR0   OPEN_FF,,AUTO
         2 000454   450000 713400                    CLIMB   alt,open
         2 000455   410400 401760                    pmme    nvectors=18
         2 000456   001312 702000 2                  TSX2    JUSTALT

      412     2837    2         END;

      413     2838
      414     2839    1      RETURN;

   2839  2 000457   000000 702200 xent               TSX2  ! X66_ARET

      415     2840
      416     2841        /********************************************************************/
      417     2842        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:92   
      418     2843        /********************************************************************/
      419     2844    1   XSA_FLUSH_GRAN: PROC ALTRET;

   2844  2 000460   200232 741300       XSA_FLUSH_G* STX1  ! FIRST_SEG+1,,AUTO

      420     2845        /*F*  NAME: XSA_FLUSH_GRAN
      421     2846              PURPOSE: Flushes any unwritten granules.
      422     2847         ***/
      423     2848
      424     2849        /********************/
      425     2850
      426     2851    2      IF XSA_PARAM.ORG ~= 0 AND XSA_PARAM.FMOD

   2851  2 000461   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 000462   000014 236100                    LDQ     12,,PR0
         2 000463   000777 316003                    CANQ    511,DU
         2 000464   000531 600000 2                  TZE     s:2865
         2 000465   000015 236100                    LDQ     13,,PR0
         2 000466   000001 316003                    CANQ    1,DU
         2 000467   000531 600000 2                  TZE     s:2865

      427     2852    3      THEN DO;                            /* Write modified buffers   */

      428     2853    3         IF XSA_PARAM.EOP = %EOP_NONE

   2853  2 000470   000700 316003                    CANQ    448,DU
         2 000471   000474 601000 2                  TNZ     s:2855

      429     2854    3         THEN CALL XSA_READY_FIRST_WRITE; /* No previous writes       */

   2854  2 000472   004034 701000 2                  TSX1    XSA_READY_FIRST_WRITE
         2 000473   000000 011000                    NOP     0

      430     2855    3         WRITE_NEXT_GRANULE = WRITE_NEXT_GRANULE_CONSTANT;

   2855  2 000474   000100 100400                    MLR     fill='000'O
         2 000475   000056 000060 1                  ADSC9   WRITE_NEXT_GRANULE_CONSTANT cn=0,n=48
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:93   
         2 000476   200214 000060                    ADSC9   WRITE_NEXT_GRANULE,,AUTO cn=0,n=48

      431     2856    3         WRITE_NEXT_GRANULE.BUF_ = XSA_PARAM.BBUF_;

   2856  2 000477   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 000500   000004 237100                    LDAQ    4,,PR0
         2 000501   200220 757100                    STAQ    WRITE_NEXT_GRANULE+4,,AUTO

      432     2857    3         WRITE_NEXT_GRANULE.BUF_.BOUND = %(GRANULE_SIZE_BYTES-1);

   2857  2 000502   200220 236100                    LDQ     WRITE_NEXT_GRANULE+4,,AUTO
         2 000503   177777 376007                    ANQ     65535,DL
         2 000504   000012 276000 3                  ORQ     10
         2 000505   200220 756100                    STQ     WRITE_NEXT_GRANULE+4,,AUTO

      433     2858    3         WRITE_NEXT_GRANULE.KEY_ = VECTOR(XSA_PARAM.GRANULE);

   2858  2 000506   777640 235007                    LDA     -96,DL
         2 000507   200004 236100                    LDQ     @XSA_PARAM,,AUTO
         2 000510   000013 036003                    ADLQ    11,DU
         2 000511   200216 757100                    STAQ    WRITE_NEXT_GRANULE+2,,AUTO

      434     2859    3         WRITE_NEXT_GRANULE.V_ = VECTOR(WRITE_NEXT_GRANULE.V);

   2859  2 000512   000007 235000 3                  LDA     7
         2 000513   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 000514   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 000515   000224 036003                    ADLQ    148,DU
         2 000516   200214 757100                    STAQ    WRITE_NEXT_GRANULE,,AUTO

      435     2860    3         WRITE_NEXT_GRANULE.V.DCB# = XSA_PARAM.DCB#;

   2860  2 000517   000014 720100                    LXL0    12,,PR0
         2 000520   200224 740100                    STX0    WRITE_NEXT_GRANULE+8,,AUTO

      436     2861    3         CALL M$WRITE( WRITE_NEXT_GRANULE ) ALTRET( JUSTALT );

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:94   
   2861  2 000521   200214 630500                    EPPR0   WRITE_NEXT_GRANULE,,AUTO
         2 000522   440001 713400                    CLIMB   alt,write
         2 000523   401400 401760                    pmme    nvectors=4
         2 000524   000533 702000 2                  TSX2    JUSTALT

      437     2862    3         XSA_PARAM.GRANULE = XSA_PARAM.GRANULE + 1;

   2862  2 000525   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 000526   000013 054100                    AOS     11,,PR0

      438     2863    3         XSA_PARAM.FMOD = %NO#;

   2863  2 000527   000002 236000 3                  LDQ     2
         2 000530   000015 356100                    ANSQ    13,,PR0

      439     2864    3         END;

      440     2865    2      RETURN;

   2865  2 000531   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 000532   000001 702211                    TSX2  ! 1,X1

   2859  2 000533                       JUSTALT      null
      441     2866
      442     2867    2   JUSTALT: ;
      443     2868    2      ALTRETURN;

   2868  2 000533   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 000534   000000 702211                    TSX2  ! 0,X1

      444     2869
      445     2870    2   END XSA_FLUSH_GRAN;
      446     2871        /********************************************************************/
      447     2872        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:95   
      448     2873        /********************************************************************/
      449     2874    1   XSA$READ: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;

   2874  2 000535   000000 700200 xent  XSA$READ     TSX0  ! X66_AUTO_2
         2 000536   000256 000002                    ZERO    174,2

      450     2875        /*F*  NAME: XSA$READ
      451     2876              PURPOSE: If not a fast file, divert course to ordinary service
      452     2877                 call.  Otherwise, initialize and get next record depending
      453     2878                 on ORG.
      454     2879         ***/
      455     2880
      456     2881        /********************/
      457     2882
      458     2883    1      FPT$ = ADDR(FPT_OPERATION);

   2883  2 000537   200003 236100                    LDQ     @FPT_OPERATION,,AUTO
         2 000540   200011 756100                    STQ     FPT$,,AUTO

      459     2884
      460     2885    1      V_ = READ_FPT.V_;

   2885  2 000541   200011 470500                    LDP0    FPT$,,AUTO
         2 000542   000000 237100                    LDAQ    0,,PR0
         2 000543   200025 755100                    STA     V_,,AUTO
         2 000544   200026 756100                    STQ     V_+1,,AUTO

      461     2886    1      VAREA$ = V_.VAREA$;

   2886  2 000545   200026 236100                    LDQ     V_+1,,AUTO
         2 000546   200024 756100                    STQ     VAREA$,,AUTO

      462     2887
      463     2888    1      XSA_PARAM.ERR = '0'B;

   2888  2 000547   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 000550   100001 450100                    STZ     1,,PR1
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:96   

      464     2889
      465     2890         /***
      466     2891          *** If not a "fast" file or this is an attempt to perform some
      467     2892          *** non-fast operation, use ordinary monitor service.
      468     2893          ***/
      469     2894
      470     2895    1      IF READ_FPTV.KEYS OR XSA_PARAM.BBUF_.BUF$ = ADDR(NIL) OR

   2895  2 000551   200024 473500                    LDP3    VAREA$,,AUTO
         2 000552   300000 236100                    LDQ     0,,PR3
         2 000553   200000 316007                    CANQ    65536,DL
         2 000554   000575 601000 2                  TNZ     s:2899
         2 000555   100005 236100                    LDQ     5,,PR1
         2 000556   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000557   000575 600000 2                  TZE     s:2899
         2 000560   100003 236100                    LDQ     3,,PR1
         2 000561   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000562   000573 601000 2                  TNZ     s:2895+18
         2 000563   100014 236100                    LDQ     12,,PR1
         2 000564   000777 376003                    ANQ     511,DU
         2 000565   000002 116003                    CMPQ    2,DU
         2 000566   000575 600000 2                  TZE     s:2899
         2 000567   000006 116003                    CMPQ    6,DU
         2 000570   000575 600000 2                  TZE     s:2899
         2 000571   000015 116003                    CMPQ    13,DU
         2 000572   000575 600000 2                  TZE     s:2899
         2 000573   300002 235100                    LDA     2,,PR3
         2 000574   000605 600000 2                  TZE     UNFAST_READ

      471     2896    1        (XSA_PARAM.KBUF_.BUF$ = ADDR(NIL) AND
      472     2897    1        (XSA_PARAM.ORG = %KEYED# OR XSA_PARAM.ORG = %INDEXED# OR
      473     2898    1        XSA_PARAM.ORG = %IREL#)) OR READ_FPTV.SEED THEN
      474     2899    2         IF XSA_PARAM.UNFAST# THEN DO;

   2899  2 000575   100015 236100                    LDQ     13,,PR1
         2 000576   000010 316003                    CANQ    8,DU
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:97   
         2 000577   000603 600000 2                  TZE     s:2904

      475     2900    2            XSA_PARAM.ERR = E_UNFAST;

   2900  2 000600   000000 236000 1                  LDQ     E_UNFAST
         2 000601   100001 756100                    STQ     1,,PR1

      476     2901    2            ALTRETURN;

   2901  2 000602   000000 702200 xent               TSX2  ! X66_AALT

      477     2902    2            END;
      478     2903    1         ELSE
      479     2904    1            CALL XSA_UNFAST ALTRET( RTN_ERROR );

   2904  2 000603   001313 701000 2                  TSX1    XSA_UNFAST
         2 000604   001227 702000 2                  TSX2    RTN_ERROR

   2898  2 000605                       UNFAST_READ  null
      480     2905
      481     2906    1   UNFAST_READ:;
      482     2907    1      IF XSA_PARAM.ORG = 0

   2907  2 000605   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 000606   000014 236100                    LDQ     12,,PR0
         2 000607   000777 316003                    CANQ    511,DU
         2 000610   000635 601000 2                  TNZ     s:2915

      483     2908    2      THEN DO;                            /* Use standard service     */

      484     2909    2         CALL M$READ( READ_FPT ) ALTRET( RTN_ERROR );

   2909  2 000611   200011 470500                    LDP0    FPT$,,AUTO
         2 000612   440000 713400                    CLIMB   alt,read
         2 000613   401400 401760                    pmme    nvectors=4
         2 000614   001227 702000 2                  TSX2    RTN_ERROR

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:98   
      485     2910    2         XSA_PARAM.ARS# = DCBADDR(READ_FPTV.DCB#)->F$DCB.ARS#;

   2910  2 000615   000010 470400 3                  LDP0    8
         2 000616   000000 471500                    LDP1    0,,PR0
         2 000617   200024 473500                    LDP3    VAREA$,,AUTO
         2 000620   300000 220100                    LDX0    0,,PR3
         2 000621   100000 474510                    LDP4    0,X0,PR1
         2 000622   200004 475500                    LDP5    @XSA_PARAM,,AUTO
         2 000623   400000 235100                    LDA     0,,PR4
         2 000624   500000 755100                    STA     0,,PR5

      486     2911    2         XSA_PARAM.DVBYTE = DCBADDR(READ_FPTV.DCB#)->F$DCB.DVBYTE;

   2911  2 000625   300000 220100                    LDX0    0,,PR3
         2 000626   100000 474510                    LDP4    0,X0,PR1
         2 000627   400003 236100                    LDQ     3,,PR4
         2 000630   000001 772000                    QRL     1
         2 000631   500014 676100                    ERQ     12,,PR5
         2 000632   377000 376003                    ANQ     130560,DU
         2 000633   500014 656100                    ERSQ    12,,PR5

      487     2912    2         RETURN;

   2912  2 000634   000000 702200 xent               TSX2  ! X66_ARET

      488     2913    2         END;
      489     2914
      490     2915    1      SKIPPED = 0;

   2915  2 000635   200017 450100                    STZ     SKIPPED,,AUTO

      491     2916    1      TOSKIP = 0;

   2916  2 000636   200021 450100                    STZ     TOSKIP,,AUTO

      492     2917    1      PRECORD = %NO#;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:99   
   2917  2 000637   200014 450100                    STZ     PRECORD,,AUTO

      493     2918    1      GOTO BYPASS_PRECORD;

   2918  2 000640   000765 710000 2                  TRA     BYPASS_PRECORD

      494     2919
      495     2920        /**********/
      496     2921
      497     2922    1   XSA$PRECORD: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;

   2922  2 000641   000000 700200 xent  XSA$PRECORD  TSX0  ! X66_AUTO_2
         2 000642   000256 000002                    ZERO    174,2

      498     2923        /*F*  NAME: XSA$PRECORD
      499     2924              PURPOSE: If not a fast file, divert course to ordinary service
      500     2925                 call.  Otherwise, skip CONSEC fast file records.
      501     2926         ***/
      502     2927
      503     2928    1      FPT$ = ADDR(FPT_OPERATION);

   2928  2 000643   200003 236100                    LDQ     @FPT_OPERATION,,AUTO
         2 000644   200011 756100                    STQ     FPT$,,AUTO

      504     2929    1      V_ = PRECORD_FPT.V_;

   2929  2 000645   200011 470500                    LDP0    FPT$,,AUTO
         2 000646   000000 237100                    LDAQ    0,,PR0
         2 000647   200025 755100                    STA     V_,,AUTO
         2 000650   200026 756100                    STQ     V_+1,,AUTO

      505     2930    1      VAREA$ = V_.VAREA$;

   2930  2 000651   200026 236100                    LDQ     V_+1,,AUTO
         2 000652   200024 756100                    STQ     VAREA$,,AUTO

      506     2931    1      XSA_PARAM.ERR = '0'B;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:100  

   2931  2 000653   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 000654   100001 450100                    STZ     1,,PR1

      507     2932    1      SKIPPED = 0;

   2932  2 000655   200017 450100                    STZ     SKIPPED,,AUTO

      508     2933
      509     2934         /***
      510     2935          *** If not a "fast" file or this is an attempt to perform some
      511     2936          *** non-fast operation, use ordinary monitor service.
      512     2937          ***/
      513     2938
      514     2939    1      IF PRECORD_FPTV.BOF OR PRECORD_FPTV.EOF OR

   2939  2 000656   200024 473500                    LDP3    VAREA$,,AUTO
         2 000657   300000 236100                    LDQ     0,,PR3
         2 000660   020000 316007                    CANQ    8192,DL
         2 000661   000706 601000 2                  TNZ     s:2944
         2 000662   010000 316007                    CANQ    4096,DL
         2 000663   000706 601000 2                  TNZ     s:2944
         2 000664   400000 316007                    CANQ    -131072,DL
         2 000665   000706 601000 2                  TNZ     s:2944
         2 000666   100005 236100                    LDQ     5,,PR1
         2 000667   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000670   000706 600000 2                  TZE     s:2944
         2 000671   300001 235100                    LDA     1,,PR3
         2 000672   000706 604400 2                  TMOZ    s:2944
         2 000673   100003 236100                    LDQ     3,,PR1
         2 000674   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000675   000716 601000 2                  TNZ     UNFAST_PRECORD
         2 000676   100014 236100                    LDQ     12,,PR1
         2 000677   000777 376003                    ANQ     511,DU
         2 000700   000002 116003                    CMPQ    2,DU
         2 000701   000706 600000 2                  TZE     s:2944
         2 000702   000006 116003                    CMPQ    6,DU
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:101  
         2 000703   000706 600000 2                  TZE     s:2944
         2 000704   000015 116003                    CMPQ    13,DU
         2 000705   000716 601000 2                  TNZ     UNFAST_PRECORD

      515     2940    1        PRECORD_FPTV.KEYS OR XSA_PARAM.BBUF_.BUF$ = ADDR(NIL) OR
      516     2941    1        PRECORD_FPTV.N <= 0 OR (XSA_PARAM.KBUF_.BUF$ = ADDR(NIL) AND
      517     2942    1        (XSA_PARAM.ORG = %KEYED# OR XSA_PARAM.ORG = %INDEXED# OR
      518     2943    1        XSA_PARAM.ORG = %IREL#)) THEN
      519     2944    2         IF XSA_PARAM.UNFAST# THEN DO;

   2944  2 000706   100015 236100                    LDQ     13,,PR1
         2 000707   000010 316003                    CANQ    8,DU
         2 000710   000714 600000 2                  TZE     s:2949

      520     2945    2            XSA_PARAM.ERR = E_UNFAST;

   2945  2 000711   000000 236000 1                  LDQ     E_UNFAST
         2 000712   100001 756100                    STQ     1,,PR1

      521     2946    2            ALTRETURN;

   2946  2 000713   000000 702200 xent               TSX2  ! X66_AALT

      522     2947    2            END;
      523     2948    1         ELSE
      524     2949    1            CALL XSA_UNFAST ALTRET( RTN_ERROR );

   2949  2 000714   001313 701000 2                  TSX1    XSA_UNFAST
         2 000715   001227 702000 2                  TSX2    RTN_ERROR

   2942  2 000716                       UNFAST_PREC* null
      525     2950
      526     2951
      527     2952    1   UNFAST_PRECORD:;
      528     2953    1      IF XSA_PARAM.ORG = 0

   2953  2 000716   200004 470500                    LDP0    @XSA_PARAM,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:102  
         2 000717   000014 236100                    LDQ     12,,PR0
         2 000720   000777 316003                    CANQ    511,DU
         2 000721   000737 601000 2                  TNZ     s:2960

      529     2954    2      THEN DO;

      530     2955    2         CALL M$PRECORD( PRECORD_FPT ) ALTRET( RTN_ERROR );

   2955  2 000722   200011 470500                    LDP0    FPT$,,AUTO
         2 000723   440003 713400                    CLIMB   alt,+16387
         2 000724   401000 401760                    pmme    nvectors=3
         2 000725   001227 702000 2                  TSX2    RTN_ERROR

      531     2956    2         XSA_PARAM.ARS# = DCBADDR(PRECORD_FPTV.DCB#)->F$DCB.ARS#;

   2956  2 000726   000010 470400 3                  LDP0    8
         2 000727   000000 471500                    LDP1    0,,PR0
         2 000730   200024 473500                    LDP3    VAREA$,,AUTO
         2 000731   300000 220100                    LDX0    0,,PR3
         2 000732   100000 474510                    LDP4    0,X0,PR1
         2 000733   200004 475500                    LDP5    @XSA_PARAM,,AUTO
         2 000734   400000 235100                    LDA     0,,PR4
         2 000735   500000 755100                    STA     0,,PR5

      532     2957    2         RETURN;

   2957  2 000736   000000 702200 xent               TSX2  ! X66_ARET

      533     2958    2         END;
      534     2959
      535     2960    1      TOSKIP = PRECORD_FPTV.N;

   2960  2 000737   200024 471500                    LDP1    VAREA$,,AUTO
         2 000740   100001 235100                    LDA     1,,PR1
         2 000741   200021 755100                    STA     TOSKIP,,AUTO

      536     2961    1      PRECORD = %YES#;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:103  

   2961  2 000742   400000 236003                    LDQ     -131072,DU
         2 000743   200014 756100                    STQ     PRECORD,,AUTO

      537     2962
      538     2963    1      IF TOSKIP <= 0

   2963  2 000744   000000 115003                    CMPA    0,DU
         2 000745   000762 604400 2                  TMOZ    s:2968
         2 000746   000014 236100                    LDQ     12,,PR0
         2 000747   000777 376003                    ANQ     511,DU
         2 000750   000001 116003                    CMPQ    1,DU
         2 000751   000765 601000 2                  TNZ     BYPASS_PRECORD
         2 000752   000002 116003                    CMPQ    2,DU
         2 000753   000765 601000 2                  TNZ     BYPASS_PRECORD
         2 000754   000006 116003                    CMPQ    6,DU
         2 000755   000765 601000 2                  TNZ     BYPASS_PRECORD
         2 000756   000005 116003                    CMPQ    5,DU
         2 000757   000765 601000 2                  TNZ     BYPASS_PRECORD
         2 000760   000015 116003                    CMPQ    13,DU
         2 000761   000765 601000 2                  TNZ     BYPASS_PRECORD

      539     2964    1        OR NOT (XSA_PARAM.ORG ~= %CONSEC# OR XSA_PARAM.ORG ~= %KEYED#
      540     2965    1        OR XSA_PARAM.ORG ~= %INDEXED# OR XSA_PARAM.ORG ~= %RELATIVE#
      541     2966    1        OR XSA_PARAM.ORG ~= %IREL#)
      542     2967    2      THEN DO;                            /* Can't fast position      */

      543     2968    2         XSA_PARAM.ERR = E_POS;

   2968  2 000762   000240 236000 1                  LDQ     E_POS
         2 000763   000001 756100                    STQ     1,,PR0

      544     2969    2         ALTRETURN;

   2969  2 000764   000000 702200 xent               TSX2  ! X66_AALT

      545     2970    2         END;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:104  
      546     2971
      547     2972    1   BYPASS_PRECORD: ;

   2972  2 000765                       BYPASS_PREC* null
      548     2973
      549     2974    1      IF XSA_PARAM.EOP = %EOP_NONE

   2974  2 000765   000015 236100                    LDQ     13,,PR0
         2 000766   000700 316003                    CANQ    448,DU
         2 000767   001006 601000 2                  TNZ     s:2990

      550     2975    2      THEN DO;                            /* This is first read       */

      551     2976    2         XSA_PARAM.CRECX = 0;              /* Cause first              */

   2976  2 000770   000007 450100                    STZ     7,,PR0

      552     2977    2         XSA_PARAM.LCRECX = 0;             /* granule                  */

   2977  2 000771   000010 450100                    STZ     8,,PR0

      553     2978    2         XSA_PARAM.GRANX = 0;              /* to                       */

   2978  2 000772   000011 450100                    STZ     9,,PR0

      554     2979    2         XSA_PARAM.LGRANX = -1;            /* be read                  */

   2979  2 000773   000001 335007                    LCA     1,DL
         2 000774   000012 755100                    STA     10,,PR0

      555     2980
      556     2981    2         XSA_PARAM.RPOS = %NO#;

   2981  2 000775   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 000776   000014 356100                    ANSQ    12,,PR0

      557     2982    2         XSA_PARAM.FMOD = %NO#;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:105  

   2982  2 000777   000002 236000 3                  LDQ     2
         2 001000   000015 356100                    ANSQ    13,,PR0

      558     2983    2         XSA_PARAM.EOF = %NO#;

   2983  2 001001   000013 236000 3                  LDQ     11
         2 001002   000015 356100                    ANSQ    13,,PR0

      559     2984    2         XSA_PARAM.BBUF_.BUF$->FM$GRAN.ENDLVL = '1'B;

   2984  2 001003   000005 471500                    LDP1    5,,PR0
         2 001004   400000 236007                    LDQ     -131072,DL
         2 001005   100002 256100                    ORSQ    2,,PR1

      560     2985    2         END;

      561     2986         /***
      562     2987          *** Must be end of file if last operation was write.
      563     2988          ***/
      564     2989
      565     2990    1      IF XSA_PARAM.EOF

   2990  2 001006   000015 236100                    LDQ     13,,PR0
         2 001007   000040 316003                    CANQ    32,DU
         2 001010   001014 600000 2                  TZE     s:3000

      566     2991    2      THEN DO;                            /* Must be end of file      */

      567     2992    2         XSA_PARAM.ERR = E_EOF;

   2992  2 001011   000236 236000 1                  LDQ     E_EOF
         2 001012   000001 756100                    STQ     1,,PR0

      568     2993    2         ALTRETURN;

   2993  2 001013   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:106  

      569     2994    2         END;
      570     2995
      571     2996         /***
      572     2997          *** Fast file.  Determine routine depending on ORG.
      573     2998          ***/
      574     2999
      575     3000    1      UBYTES = READ_FPT.BUF_.BOUND + 1;

   3000  2 001014   200011 471500                    LDP1    FPT$,,AUTO
         2 001015   100004 236100                    LDQ     4,,PR1
         2 001016   000020 772000                    QRL     16
         2 001017   000001 036007                    ADLQ    1,DL
         2 001020   200023 756100                    STQ     UBYTES,,AUTO

      576     3001    1      UB$ = READ_FPT.BUF_.BUF$;

   3001  2 001021   100005 236100                    LDQ     5,,PR1
         2 001022   200022 756100                    STQ     UB$,,AUTO

      577     3002    1      IF UB$ = ADDR(NIL)

   3002  2 001023   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001024   001030 601000 2                  TNZ     s:3008

      578     3003    2      THEN DO;                            /* No buffer                */

      579     3004    2         UB$ = ADDR(SMALL_BUFFER);

   3004  2 001025   200020 633500                    EPPR3   SMALL_BUFFER,,AUTO
         2 001026   200022 453500                    STP3    UB$,,AUTO

      580     3005    2         UBYTES = 0;

   3005  2 001027   200023 450100                    STZ     UBYTES,,AUTO

      581     3006    2         END;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:107  

      582     3007
      583     3008    2      DO CASE( XSA_PARAM.ORG );

   3008  2 001030   000014 220100                    LDX0    12,,PR0
         2 001031   000777 360003                    ANX0    511,DU
         2 001032   000016 100003                    CMPX0   14,DU
         2 001033   001035 602010 2                  TNC     s:3008+5,X0
         2 001034   001136 710000 2                  TRA     s:3037
         2 001035   001136 710000 2                  TRA     s:3037
         2 001036   001053 710000 2                  TRA     s:3010
         2 001037   001065 710000 2                  TRA     s:3017
         2 001040   001136 710000 2                  TRA     s:3037
         2 001041   001136 710000 2                  TRA     s:3037
         2 001042   001124 710000 2                  TRA     s:3030
         2 001043   001065 710000 2                  TRA     s:3017
         2 001044   001136 710000 2                  TRA     s:3037
         2 001045   001136 710000 2                  TRA     s:3037
         2 001046   001136 710000 2                  TRA     s:3037
         2 001047   001136 710000 2                  TRA     s:3037
         2 001050   001136 710000 2                  TRA     s:3037
         2 001051   001136 710000 2                  TRA     s:3037
         2 001052   001065 710000 2                  TRA     s:3017

      584     3009    2       CASE( %CONSEC# );

      585     3010    2         IF XSA_PARAM.EOP = %EOP_NONE

   3010  2 001053   000015 236100                    LDQ     13,,PR0
         2 001054   000700 316003                    CANQ    448,DU
         2 001055   001062 601000 2                  TNZ     s:3015

      586     3011    3         THEN DO;                         /* This is first read       */

      587     3012    3            XSA_PARAM.GRANULE = -1;

   3012  2 001056   000001 335007                    LCA     1,DL
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:108  
         2 001057   000013 755100                    STA     11,,PR0

      588     3013    3            XSA_PARAM.WORDS_REMAINING = 0;

   3013  2 001060   000000 221003                    LDX1    0,DU
         2 001061   000015 441100                    SXL1    13,,PR0

      589     3014    3            END;

      590     3015    2         CALL XSA_CONSEC_READ ALTRET( JUSTALT );

   3015  2 001062   003131 701000 2                  TSX1    XSA_CONSEC_READ
         2 001063   001312 702000 2                  TSX2    JUSTALT
         2 001064   001153 710000 2                  TRA     s:3049

      591     3016    2       CASE( %KEYED#, %INDEXED#, %IREL# );

      592     3017    2         IF XSA_PARAM.EOP = %EOP_NONE

   3017  2 001065   000015 236100                    LDQ     13,,PR0
         2 001066   000700 316003                    CANQ    448,DU
         2 001067   001121 601000 2                  TNZ     s:3028

      593     3018    3         THEN DO;                         /* This is first read       */

      594     3019    3            XSA_PARAM.GRANULE = 0;

   3019  2 001070   000013 450100                    STZ     11,,PR0

      595     3020    3            READ_GRANULES = READ_GRANULES_CONSTANT;

   3020  2 001071   000100 100400                    MLR     fill='000'O
         2 001072   000040 000070 1                  ADSC9   READ_GRANULES_CONSTANT   cn=0,n=56
         2 001073   200176 000070                    ADSC9   READ_GRANULES,,AUTO      cn=0,n=56

      596     3021    3            READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:109  
   3021  2 001074   000014 235000 3                  LDA     12
         2 001075   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 001076   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 001077   000206 036003                    ADLQ    134,DU
         2 001100   200176 757100                    STAQ    READ_GRANULES,,AUTO

      597     3022    3            READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);

   3022  2 001101   777640 235007                    LDA     -96,DL
         2 001102   200004 236100                    LDQ     @XSA_PARAM,,AUTO
         2 001103   000013 036003                    ADLQ    11,DU
         2 001104   200200 757100                    STAQ    READ_GRANULES+2,,AUTO

      598     3023    3            READ_GRANULES.BUF_ = XSA_PARAM.KBUF_;

   3023  2 001105   000002 237100                    LDAQ    2,,PR0
         2 001106   200202 757100                    STAQ    READ_GRANULES+4,,AUTO

      599     3024    3            READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;

   3024  2 001107   000014 720100                    LXL0    12,,PR0
         2 001110   200206 740100                    STX0    READ_GRANULES+8,,AUTO

      600     3025    3            CALL M$READ( READ_GRANULES ) ALTRET( RTN_ERROR_CLS );

   3025  2 001111   200176 630500                    EPPR0   READ_GRANULES,,AUTO
         2 001112   440000 713400                    CLIMB   alt,read
         2 001113   401400 401760                    pmme    nvectors=4
         2 001114   001266 702000 2                  TSX2    RTN_ERROR_CLS

      601     3026    3            READ_GRANULES.BUF_.BUF$->GRAN.X = XSA_PARAM.GRANULE;

   3026  2 001115   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001116   000013 720100                    LXL0    11,,PR0
         2 001117   200203 471500                    LDP1    READ_GRANULES+5,,AUTO
         2 001120   100000 440100                    SXL0    0,,PR1

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:110  
      602     3027    3            END;

      603     3028    2         CALL XSA_KEYED_READ ALTRET( JUSTALT );

   3028  2 001121   001437 701000 2                  TSX1    XSA_KEYED_READ
         2 001122   001312 702000 2                  TSX2    JUSTALT
         2 001123   001153 710000 2                  TRA     s:3049

      604     3029    2       CASE( %RELATIVE# );

      605     3030    2         IF XSA_PARAM.EOP = %EOP_NONE

   3030  2 001124   000015 236100                    LDQ     13,,PR0
         2 001125   000700 316003                    CANQ    448,DU
         2 001126   001133 601000 2                  TNZ     s:3035

      606     3031    3         THEN DO;                         /* This is first read       */

      607     3032    3            XSA_PARAM.GRANULE = -1;

   3032  2 001127   000001 335007                    LCA     1,DL
         2 001130   000013 755100                    STA     11,,PR0

      608     3033    3            XSA_PARAM.WORDS_REMAINING = 0;

   3033  2 001131   000000 221003                    LDX1    0,DU
         2 001132   000015 441100                    SXL1    13,,PR0

      609     3034    3            END;

      610     3035    2         CALL XSA_RELATIVE_READ ALTRET( JUSTALT );

   3035  2 001133   002500 701000 2                  TSX1    XSA_RELATIVE_READ
         2 001134   001312 702000 2                  TSX2    JUSTALT
         2 001135   001153 710000 2                  TRA     s:3049

      611     3036    2       CASE(ELSE);               /* He didn't open it with XSA first?  */
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:111  

      612     3037    3         IF XSA_PARAM.UNFAST# THEN DO;

   3037  2 001136   000015 236100                    LDQ     13,,PR0
         2 001137   000010 316003                    CANQ    8,DU
         2 001140   001144 600000 2                  TZE     s:3042

      613     3038    3            XSA_PARAM.ERR = E_UNFAST;

   3038  2 001141   000000 236000 1                  LDQ     E_UNFAST
         2 001142   000001 756100                    STQ     1,,PR0

      614     3039    3            ALTRETURN;

   3039  2 001143   000000 702200 xent               TSX2  ! X66_AALT

      615     3040    3            END;
      616     3041    2         ELSE
      617     3042    2            CALL XSA_UNFAST ALTRET(RTN_ERROR);

   3042  2 001144   001313 701000 2                  TSX1    XSA_UNFAST
         2 001145   001227 702000 2                  TSX2    RTN_ERROR

      618     3043    2         XSA_PARAM.ERR='0'B;

   3043  2 001146   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001147   000001 450100                    STZ     1,,PR0

      619     3044    2         IF PRECORD THEN

   3044  2 001150   200014 234100                    SZN     PRECORD,,AUTO
         2 001151   000716 604000 2                  TMI     UNFAST_PRECORD

      620     3045    2            GOTO UNFAST_PRECORD;
      621     3046    2         ELSE GOTO UNFAST_READ;

   3046  2 001152   000605 710000 2                  TRA     UNFAST_READ
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:112  

      622     3047    2       END;

      623     3048
      624     3049    1      XSA_PARAM.EOP = %EOP_READ;

   3049  2 001153   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001154   000015 236100                    LDQ     13,,PR0
         2 001155   000005 376000 3                  ANQ     5
         2 001156   000100 276003                    ORQ     64,DU
         2 001157   000015 756100                    STQ     13,,PR0

      625     3050    2      IF XSA_PARAM.ERR THEN DO;

   3050  2 001160   000001 235100                    LDA     1,,PR0
         2 001161   001226 600000 2                  TZE     s:3064

      626     3051    2         IF XSA_PARAM.ERR.CODE ~= %E$LD THEN

   3051  2 001162   000001 236100                    LDQ     1,,PR0
         2 001163   377770 376007                    ANQ     131064,DL
         2 001164   000070 116007                    CMPQ    56,DL
         2 001165   001167 600000 2                  TZE     s:3053

      627     3052    2            ALTRETURN;

   3052  2 001166   000000 702200 xent               TSX2  ! X66_AALT

      628     3053    3         IF XSA_PARAM.UNFAST# THEN DO;

   3053  2 001167   000015 236100                    LDQ     13,,PR0
         2 001170   000010 316003                    CANQ    8,DU
         2 001171   001175 600000 2                  TZE     s:3057

      629     3054    3            XSA_PARAM.ERR = E_UNFAST;

   3054  2 001172   000000 236000 1                  LDQ     E_UNFAST
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:113  
         2 001173   000001 756100                    STQ     1,,PR0

      630     3055    3            ALTRETURN;

   3055  2 001174   000000 702200 xent               TSX2  ! X66_AALT

      631     3056    3            END;
      632     3057    2         XSA_PARAM.CRECNO = XSA_PARAM.CRECNO - 1;

   3057  2 001175   000001 336007                    LCQ     1,DL
         2 001176   000006 056100                    ASQ     6,,PR0

      633     3058    2         CALL XSA_UNFAST ALTRET( RTN_ERROR );

   3058  2 001177   001313 701000 2                  TSX1    XSA_UNFAST
         2 001200   001227 702000 2                  TSX2    RTN_ERROR

      634     3059    2         XSA_PARAM.ERR = '0'B;

   3059  2 001201   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001202   000001 450100                    STZ     1,,PR0

      635     3060    2         CALL M$READ( READ_FPT ) ALTRET( RTN_ERROR );

   3060  2 001203   200011 470500                    LDP0    FPT$,,AUTO
         2 001204   440000 713400                    CLIMB   alt,read
         2 001205   401400 401760                    pmme    nvectors=4
         2 001206   001227 702000 2                  TSX2    RTN_ERROR

      636     3061    2         XSA_PARAM.ARS# = DCBADDR(READ_FPTV.DCB#)->F$DCB.ARS#;

   3061  2 001207   000010 470400 3                  LDP0    8
         2 001210   000000 471500                    LDP1    0,,PR0
         2 001211   200024 473500                    LDP3    VAREA$,,AUTO
         2 001212   300000 220100                    LDX0    0,,PR3
         2 001213   100000 474510                    LDP4    0,X0,PR1
         2 001214   200004 475500                    LDP5    @XSA_PARAM,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:114  
         2 001215   400000 235100                    LDA     0,,PR4
         2 001216   500000 755100                    STA     0,,PR5

      637     3062    2         XSA_PARAM.DVBYTE = DCBADDR(READ_FPTV.DCB#)->F$DCB.DVBYTE;

   3062  2 001217   300000 220100                    LDX0    0,,PR3
         2 001220   100000 474510                    LDP4    0,X0,PR1
         2 001221   400003 236100                    LDQ     3,,PR4
         2 001222   000001 772000                    QRL     1
         2 001223   500014 676100                    ERQ     12,,PR5
         2 001224   377000 376003                    ANQ     130560,DU
         2 001225   500014 656100                    ERSQ    12,,PR5

      638     3063    2         END;

      639     3064    1      RETURN;

   3064  2 001226   000000 702200 xent               TSX2  ! X66_ARET

      640     3065
      641     3066    1   RTN_ERROR: ;                            /* Return monitor error     */

   3066  2 001227                       RTN_ERROR    null
      642     3067    1      DCB$ = DCBADDR(READ_FPTV.DCB#);

   3067  2 001227   000010 470400 3                  LDP0    8
         2 001230   000000 471500                    LDP1    0,,PR0
         2 001231   200024 473500                    LDP3    VAREA$,,AUTO
         2 001232   300000 220100                    LDX0    0,,PR3
         2 001233   100000 236110                    LDQ     0,X0,PR1
         2 001234   200010 756100                    STQ     DCB$,,AUTO

      643     3068    1      IF PRECORD

   3068  2 001235   200014 234100                    SZN     PRECORD,,AUTO
         2 001236   001243 605000 2                  TPL     s:3070

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:115  
      644     3069    1      THEN XSA_PARAM.ARS# = SKIPPED;

   3069  2 001237   200004 474500                    LDP4    @XSA_PARAM,,AUTO
         2 001240   200017 235100                    LDA     SKIPPED,,AUTO
         2 001241   400000 755100                    STA     0,,PR4
         2 001242   001247 710000 2                  TRA     s:3071

      645     3070    1      ELSE XSA_PARAM.ARS# = DCB$->F$DCB.ARS#;

   3070  2 001243   200010 474500                    LDP4    DCB$,,AUTO
         2 001244   200004 475500                    LDP5    @XSA_PARAM,,AUTO
         2 001245   400000 235100                    LDA     0,,PR4
         2 001246   500000 755100                    STA     0,,PR5

      646     3071    1      XSA_PARAM.DVBYTE = DCB$->F$DCB.DVBYTE;

   3071  2 001247   200004 474500                    LDP4    @XSA_PARAM,,AUTO
         2 001250   200010 475500                    LDP5    DCB$,,AUTO
         2 001251   500003 236100                    LDQ     3,,PR5
         2 001252   000001 772000                    QRL     1
         2 001253   400014 676100                    ERQ     12,,PR4
         2 001254   377000 376003                    ANQ     130560,DU
         2 001255   400014 656100                    ERSQ    12,,PR4

      647     3072    1      XSA_PARAM.EOMCHAR# = DCB$->F$DCB.EOMCHAR#;

   3072  2 001256   500003 236100                    LDQ     3,,PR5
         2 001257   000033 736000                    QLS     27
         2 001260   400015 552140                    STBQ    13,'40'O,PR4

      648     3073    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   3073  2 001261   000000 476400 xsym               LDP6    B$TCB$
         2 001262   600000 477500                    LDP7    0,,PR6
         2 001263   700102 236100                    LDQ     66,,PR7
         2 001264   400001 756100                    STQ     1,,PR4

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:116  
      649     3074    1      ALTRETURN;

   3074  2 001265   000000 702200 xent               TSX2  ! X66_AALT

   3073  2 001266                       RTN_ERROR_C* null
      650     3075
      651     3076    1   RTN_ERROR_CLS: ;
      652     3077    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   3077  2 001266   000000 470400 xsym               LDP0    B$TCB$
         2 001267   000000 471500                    LDP1    0,,PR0
         2 001270   100102 236100                    LDQ     66,,PR1
         2 001271   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 001272   300001 756100                    STQ     1,,PR3

      653     3078    1      CLOSE_FF = CLOSESAVEFPT;

   3078  2 001273   000100 100400                    MLR     fill='000'O
         2 001274   000002 000170 1                  ADSC9   CLOSESAVEFPT             cn=0,n=120
         2 001275   200034 000170                    ADSC9   CLOSE_FF,,AUTO           cn=0,n=120

      654     3079    1      CLOSE_FF.V_ = VECTOR(CLOSE_FF.V);

   3079  2 001276   000007 235000 3                  LDA     7
         2 001277   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 001300   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 001301   000066 036003                    ADLQ    54,DU
         2 001302   200034 757100                    STAQ    CLOSE_FF,,AUTO

      655     3080    1      CLOSE_FF.V.DCB# = XSA_PARAM.DCB#;

   3080  2 001303   300014 720100                    LXL0    12,,PR3
         2 001304   200066 740100                    STX0    CLOSE_FF+26,,AUTO

      656     3081    1      CALL M$CLOSE( CLOSE_FF ) ALTRET( JUSTALT );

   3081  2 001305   200034 630500                    EPPR0   CLOSE_FF,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:117  
         2 001306   450001 713400                    CLIMB   alt,close
         2 001307   406000 401760                    pmme    nvectors=13
         2 001310   001312 702000 2                  TSX2    JUSTALT

      657     3082    1      ALTRETURN;

   3082  2 001311   000000 702200 xent               TSX2  ! X66_AALT

   3080  2 001312                       JUSTALT      null
      658     3083
      659     3084    1   JUSTALT: ;
      660     3085    1      ALTRETURN;

   3085  2 001312   000000 702200 xent               TSX2  ! X66_AALT

      661     3086
      662     3087        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:118  
      663     3088        /********************************************************************/
      664     3089    1   XSA_UNFAST: PROC ALTRET;

   3089  2 001313   200230 741300       XSA_UNFAST   STX1  ! WRITE_NEXT_GRANULE+12,,AUTO

      665     3090        /*F*  NAME: XSA_UNFAST
      666     3091              PURPOSE: Terminates fast access and readies file for standard
      667     3092                 access.
      668     3093         ***/
      669     3094
      670     3095        /********************/
      671     3096
      672     3097    2      IF XSA_PARAM.ORG = 0

   3097  2 001314   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001315   000014 236100                    LDQ     12,,PR0
         2 001316   000777 316003                    CANQ    511,DU
         2 001317   001321 601000 2                  TNZ     s:3100

      673     3098    2      THEN RETURN;                   /* Access is already standard    */

   3098  2 001320   000001 702211                    TSX2  ! 1,X1

      674     3099
      675     3100    2      IF XSA_PARAM.BBUF_.BUF$ ~= ADDR(NIL)

   3100  2 001321   000005 236100                    LDQ     5,,PR0
         2 001322   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001323   001326 600000 2                  TZE     s:3103

      676     3101    2      THEN CALL XSA_FLUSH_GRAN ALTRET( JUSTALT ); /* Write any modified granules */

   3101  2 001324   000460 701000 2                  TSX1    XSA_FLUSH_GRAN
         2 001325   001435 702000 2                  TSX2    JUSTALT

      677     3102
      678     3103    2      CLOSE_FF = DEFAULT_CLOSE_FPT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:119  

   3103  2 001326   000100 100400                    MLR     fill='000'O
         2 001327   000072 000170 1                  ADSC9   DEFAULT_CLOSE_FPT        cn=0,n=120
         2 001330   200034 000170                    ADSC9   CLOSE_FF,,AUTO           cn=0,n=120

      679     3104    2      CLOSE_FF.V_ = VECTOR(CLOSE_FF.V);

   3104  2 001331   000007 235000 3                  LDA     7
         2 001332   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 001333   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 001334   000066 036003                    ADLQ    54,DU
         2 001335   200034 757100                    STAQ    CLOSE_FF,,AUTO

      680     3105    2      CLOSE_FF.V.DCB# = XSA_PARAM.DCB#;

   3105  2 001336   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001337   000014 720100                    LXL0    12,,PR0
         2 001340   200066 740100                    STX0    CLOSE_FF+26,,AUTO

      681     3106    2      CALL M$CLOSE( CLOSE_FF ) ALTRET( JUSTALT );

   3106  2 001341   200034 630500                    EPPR0   CLOSE_FF,,AUTO
         2 001342   450001 713400                    CLIMB   alt,close
         2 001343   406000 401760                    pmme    nvectors=13
         2 001344   001435 702000 2                  TSX2    JUSTALT

      682     3107    2      XSA_PARAM.ORG = 0;         /* Don't use fast access any more     */

   3107  2 001345   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001346   000000 236003                    LDQ     0,DU
         2 001347   000014 552120                    STBQ    12,'20'O,PR0

      683     3108
      684     3109    2      OPEN_FF = DEFAULT_OPEN_FPT;

   3109  2 001350   000100 100400                    MLR     fill='000'O
         2 001351   000130 000350 1                  ADSC9   DEFAULT_OPEN_FPT         cn=0,n=232
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:120  
         2 001352   200072 000350                    ADSC9   OPEN_FF,,AUTO            cn=0,n=232

      685     3110    2      OPEN_FF.V_ = VECTOR(OPEN_FF.V);

   3110  2 001353   000001 235000 3                  LDA     1
         2 001354   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 001355   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 001356   000136 036003                    ADLQ    94,DU
         2 001357   200072 757100                    STAQ    OPEN_FF,,AUTO

      686     3111    2      OPEN_FF.V.ACS# = %SEQUEN#;

   3111  2 001360   000001 236007                    LDQ     1,DL
         2 001361   200140 552104                    STBQ    OPEN_FF+38,'04'O,AUTO

      687     3112    2      OPEN_FF.V.DCB# = XSA_PARAM.DCB#;

   3112  2 001362   000014 720100                    LXL0    12,,PR0
         2 001363   200136 740100                    STX0    OPEN_FF+36,,AUTO

      688     3113    2      IF DCBADDR(XSA_PARAM.DCB#)->F$DCB.NRECS# > 0 AND

   3113  2 001364   000010 471400 3                  LDP1    8
         2 001365   100000 473500                    LDP3    0,,PR1
         2 001366   000014 721100                    LXL1    12,,PR0
         2 001367   300000 474511                    LDP4    0,X1,PR3
         2 001370   400042 235100                    LDA     34,,PR4
         2 001371   001402 604400 2                  TMOZ    s:3116
         2 001372   400032 236100                    LDQ     26,,PR4
         2 001373   000777 376003                    ANQ     511,DU
         2 001374   000002 116003                    CMPQ    2,DU
         2 001375   001402 600000 2                  TZE     s:3116

      689     3114    2        DCBADDR(XSA_PARAM.DCB#)->F$DCB.FUN# ~= %IN# THEN
      690     3115    2         OPEN_FF.V.EXIST# = %OLDFILE#;

   3115  2 001376   200136 236100                    LDQ     OPEN_FF+36,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:121  
         2 001377   000015 376000 3                  ANQ     13
         2 001400   000400 276007                    ORQ     256,DL
         2 001401   200136 756100                    STQ     OPEN_FF+36,,AUTO

      691     3116    2      CALL M$OPEN( OPEN_FF ) ALTRET( JUSTALT );

   3116  2 001402   200072 630500                    EPPR0   OPEN_FF,,AUTO
         2 001403   450000 713400                    CLIMB   alt,open
         2 001404   410400 401760                    pmme    nvectors=18
         2 001405   001435 702000 2                  TSX2    JUSTALT

      692     3117
      693     3118    2      IF XSA_PARAM.CRECNO <= 0 THEN RETURN;

   3118  2 001406   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001407   000006 235100                    LDA     6,,PR0
         2 001410   001413 605400 2                  TPNZ    s:3119

   3118  2 001411   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 001412   000001 702211                    TSX2  ! 1,X1

      694     3119    2      PRECORD_FF = DEFAULT_PRECORD_FPT;

   3119  2 001413   000100 100400                    MLR     fill='000'O
         2 001414   000222 000050 1                  ADSC9   DEFAULT_PRECORD_FPT      cn=0,n=40
         2 001415   200164 000050                    ADSC9   PRECORD_FF,,AUTO         cn=0,n=40

      695     3120    2      PRECORD_FF.V_ = VECTOR(PRECORD_FF.V);

   3120  2 001416   000007 235000 3                  LDA     7
         2 001417   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 001420   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 001421   000172 036003                    ADLQ    122,DU
         2 001422   200164 757100                    STAQ    PRECORD_FF,,AUTO

      696     3121    2      PRECORD_FF.V.N# = XSA_PARAM.CRECNO;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:122  
   3121  2 001423   000006 235100                    LDA     6,,PR0
         2 001424   200173 755100                    STA     PRECORD_FF+7,,AUTO

      697     3122    2      PRECORD_FF.V.DCB# = XSA_PARAM.DCB#;

   3122  2 001425   000014 720100                    LXL0    12,,PR0
         2 001426   200172 740100                    STX0    PRECORD_FF+6,,AUTO

      698     3123    2      CALL M$PRECORD( PRECORD_FF ) ALTRET( JUSTRET );

   3123  2 001427   200164 630500                    EPPR0   PRECORD_FF,,AUTO
         2 001430   440003 713400                    CLIMB   alt,+16387
         2 001431   401000 401760                    pmme    nvectors=3
         2 001432   001433 702000 2                  TSX2    JUSTRET

   3122  2 001433                       JUSTRET      null
      699     3124    2   JUSTRET: ;
      700     3125    2      RETURN;

   3125  2 001433   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 001434   000001 702211                    TSX2  ! 1,X1

   3122  2 001435                       JUSTALT      null
      701     3126
      702     3127    2   JUSTALT: ;
      703     3128    2      ALTRETURN;

   3128  2 001435   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 001436   000000 702211                    TSX2  ! 0,X1

      704     3129
      705     3130    2   END XSA_UNFAST;
      706     3131        /********************************************************************/
      707     3132        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:123  
      708     3133        /********************************************************************/
      709     3134    1   XSA_KEYED_READ: PROC ALTRET;

   3134  2 001437   200232 741300       XSA_KEYED_R* STX1  ! FIRST_SEG+1,,AUTO

      710     3135        /*F*  NAME: XSA_KEYED_READ
      711     3136              PURPOSE: FF reads the next record from an ORG=KEYED or
      712     3137                 ORG=INDEXED file.
      713     3138         ***/
      714     3139
      715     3140         /***
      716     3141          *** Locals:
      717     3142          ***/
      718     3143
      719     3144    2   DCL NOT_NEXT_KEY BIT(1) AUTO;
      720     3145    2   DCL MISEG$ PTR AUTO;
      721     3146    2   DCL PAST_MISEG$ PTR AUTO;               /* To word past last MISEG  */
      722     3147    2   DCL PAST_MISEGX SBIN AUTO;         /* Index of word past last MISEG */
      723     3148    2   DCL INDEXED_KEY_OFFSET SBIN AUTO; /* 0 if KEYED, 1 if INDEXED, 2 if IREL */
      724     3149
      725     3150        /********************/
      726     3151
      727     3152    2      BBUF$ = XSA_PARAM.KBUF_.BUF$;

   3152  2 001440   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001441   000003 236100                    LDQ     3,,PR0
         2 001442   200005 756100                    STQ     BBUF$,,AUTO

      728     3153    2      READ_AT_LEAST_ONE = ~ PRECORD;

   3153  2 001443   200014 236100                    LDQ     PRECORD,,AUTO
         2 001444   400000 376003                    ANQ     -131072,DU
         2 001445   400000 676003                    ERQ     -131072,DU
         2 001446   200015 756100                    STQ     READ_AT_LEAST_ONE,,AUTO

      729     3154    2      IF XSA_PARAM.ORG = %INDEXED# THEN

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:124  
   3154  2 001447   000014 236100                    LDQ     12,,PR0
         2 001450   000777 376003                    ANQ     511,DU
         2 001451   000006 116003                    CMPQ    6,DU
         2 001452   001456 601000 2                  TNZ     s:3156

      730     3155    2         INDEXED_KEY_OFFSET = 1;

   3155  2 001453   000001 235007                    LDA     1,DL
         2 001454   200237 755100                    STA     INDEXED_KEY_OFFSET,,AUTO
         2 001455   001464 710000 2                  TRA     s:3161

      731     3156    2      ELSE IF XSA_PARAM.ORG = %IREL# THEN

   3156  2 001456   000015 116003                    CMPQ    13,DU
         2 001457   001463 601000 2                  TNZ     s:3159

      732     3157    2            INDEXED_KEY_OFFSET = 2;

   3157  2 001460   000002 235007                    LDA     2,DL
         2 001461   200237 755100                    STA     INDEXED_KEY_OFFSET,,AUTO
         2 001462   001464 710000 2                  TRA     s:3161

      733     3158    2         ELSE
      734     3159    2            INDEXED_KEY_OFFSET = 0;

   3159  2 001463   200237 450100                    STZ     INDEXED_KEY_OFFSET,,AUTO

      735     3160
      736     3161    3      DO WHILE( (TOSKIP > SKIPPED AND PRECORD) OR READ_AT_LEAST_ONE );

   3161  2 001464   002221 710000 2                  TRA     s:3303

      737     3162    3         NOT_NEXT_KEY = %YES#;

   3162  2 001465   400000 236003                    LDQ     -131072,DU
         2 001466   200233 756100                    STQ     NOT_NEXT_KEY,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:125  
      738     3163    3         BBUF$ = XSA_PARAM.KBUF_.BUF$;

   3163  2 001467   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001470   000003 236100                    LDQ     3,,PR0
         2 001471   200005 756100                    STQ     BBUF$,,AUTO

      739     3164    4         DO WHILE( NOT_NEXT_KEY );

   3164  2 001472   200233 234100                    SZN     NOT_NEXT_KEY,,AUTO
         2 001473   001655 605000 2                  TPL     s:3207

      740     3165    4            XSA_PARAM.CRECX = XSA_PARAM.CRECX + 1; /* Index next key   */

   3165  2 001474   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001475   000007 054100                    AOS     7,,PR0

      741     3166    5            DO WHILE(XSA_PARAM.CRECX > FM$GRAN.KEYCNT);

   3166  2 001476   200005 471500                    LDP1    BBUF$,,AUTO
         2 001477   100002 236100                    LDQ     2,,PR1
         2 001500   000777 376007                    ANQ     511,DL
         2 001501   000007 116100                    CMPQ    7,,PR0
         2 001502   001561 605000 2                  TPL     s:3185

      742     3167    5               UBIN36_GDA = FM$GRAN.FLINK;

   3167  2 001503   200005 470500                    LDP0    BBUF$,,AUTO
         2 001504   000004 235100                    LDA     4,,PR0
         2 001505   200030 755100                    STA     GDA36,,AUTO

      743     3168    5               XSA_PARAM.GRANULE = GDA36.GRAN;

   3168  2 001506   200030 236100                    LDQ     GDA36,,AUTO
         2 001507   777777 376007                    ANQ     -1,DL
         2 001510   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 001511   100013 756100                    STQ     11,,PR1

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:126  
      744     3169    5               IF XSA_PARAM.GRANULE = 0

   3169  2 001512   001521 601000 2                  TNZ     s:3175

      745     3170    6               THEN DO;                   /* End of file              */

      746     3171    6                  XSA_PARAM.ERR = E_EOF;

   3171  2 001513   000236 236000 1                  LDQ     E_EOF
         2 001514   100001 756100                    STQ     1,,PR1

      747     3172    6                  XSA_PARAM.EOF = %YES#;

   3172  2 001515   000040 236003                    LDQ     32,DU
         2 001516   100015 256100                    ORSQ    13,,PR1

      748     3173    6                  ALTRETURN;

   3173  2 001517   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 001520   000000 702211                    TSX2  ! 0,X1

      749     3174    6                  END;
      750     3175    5               READ_GRANULES = READ_GRANULES_CONSTANT;

   3175  2 001521   000100 100400                    MLR     fill='000'O
         2 001522   000040 000070 1                  ADSC9   READ_GRANULES_CONSTANT   cn=0,n=56
         2 001523   200176 000070                    ADSC9   READ_GRANULES,,AUTO      cn=0,n=56

      751     3176    5               READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);

   3176  2 001524   000014 235000 3                  LDA     12
         2 001525   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 001526   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 001527   000206 036003                    ADLQ    134,DU
         2 001530   200176 757100                    STAQ    READ_GRANULES,,AUTO

      752     3177    5               READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:127  

   3177  2 001531   777640 235007                    LDA     -96,DL
         2 001532   200004 236100                    LDQ     @XSA_PARAM,,AUTO
         2 001533   000013 036003                    ADLQ    11,DU
         2 001534   200200 757100                    STAQ    READ_GRANULES+2,,AUTO

      753     3178    5               READ_GRANULES.BUF_ = XSA_PARAM.KBUF_;

   3178  2 001535   100002 237100                    LDAQ    2,,PR1
         2 001536   200202 757100                    STAQ    READ_GRANULES+4,,AUTO

      754     3179    5               READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;

   3179  2 001537   100014 720100                    LXL0    12,,PR1
         2 001540   200206 740100                    STX0    READ_GRANULES+8,,AUTO

      755     3180    5               CALL M$READ( READ_GRANULES ) ALTRET( RPT_ERROR );

   3180  2 001541   200176 630500                    EPPR0   READ_GRANULES,,AUTO
         2 001542   440000 713400                    CLIMB   alt,read
         2 001543   401400 401760                    pmme    nvectors=4
         2 001544   002236 702000 2                  TSX2    RPT_ERROR

      756     3181    5               XSA_PARAM.CRECX = 1;        /* First key of gran        */

   3181  2 001545   000001 235007                    LDA     1,DL
         2 001546   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 001547   000007 755100                    STA     7,,PR0

      757     3182    5               BBUF$ = READ_GRANULES.BUF_.BUF$;

   3182  2 001550   200203 236100                    LDQ     READ_GRANULES+5,,AUTO
         2 001551   200005 756100                    STQ     BBUF$,,AUTO

      758     3183    5               BBUF$->GRAN.X = XSA_PARAM.GRANULE;

   3183  2 001552   000013 720100                    LXL0    11,,PR0
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:128  
         2 001553   200005 471500                    LDP1    BBUF$,,AUTO
         2 001554   100000 440100                    SXL0    0,,PR1

      759     3184    5               END;

   3184  2 001555   100002 236100                    LDQ     2,,PR1
         2 001556   000777 376007                    ANQ     511,DL
         2 001557   000007 116100                    CMPQ    7,,PR0
         2 001560   001503 604000 2                  TMI     s:3167

      760     3185    4            CRECX$ = PINCRW( BBUF$, FM$GRAN.FCEX ); /* To KEYTBL       */

   3185  2 001561   100002 220100                    LDX0    2,,PR1
         2 001562   000000 636010                    EAQ     0,X0
         2 001563   200005 036100                    ADLQ    BBUF$,,AUTO
         2 001564   200006 756100                    STQ     CRECX$,,AUTO

      761     3186            /***
      762     3187             *** Determine where next key begins.
      763     3188             ***/
      764     3189    4            IF XSA_PARAM.CRECX >= FM$GRAN.KEYCNT

   3189  2 001565   100002 236100                    LDQ     2,,PR1
         2 001566   000777 376007                    ANQ     511,DL
         2 001567   000007 116100                    CMPQ    7,,PR0
         2 001570   001575 605400 2                  TPNZ    s:3191

      765     3190    4            THEN PAST_MISEGX = FM$GRAN.NAVX;

   3190  2 001571   100001 236100                    LDQ     1,,PR1
         2 001572   000022 772000                    QRL     18
         2 001573   200236 756100                    STQ     PAST_MISEGX,,AUTO
         2 001574   001621 710000 2                  TRA     s:3197

      766     3191    4            ELSE IF XSA_PARAM.CRECX + 1 >= CRECX$->FM$KEYTBL(0)

   3191  2 001575   200006 473500                    LDP3    CRECX$,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:129  
         2 001576   300000 236100                    LDQ     0,,PR3
         2 001577   000033 772000                    QRL     27
         2 001600   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 001601   000007 236100                    LDQ     7,,PR0
         2 001602   000001 036007                    ADLQ    1,DL
         2 001603   200252 116100                    CMPQ    FOUND_GRAN+4,,AUTO
         2 001604   001615 604000 2                  TMI     s:3193

      767     3192    4               THEN PAST_MISEGX = CRECX$->FM$KEYTBL(XSA_PARAM.CRECX+1) + 512;

   3192  2 001605   000007 235100                    LDA     7,,PR0
         2 001606   000100 101505                    MRL     fill='000'O
         2 001607   300000 200001                    ADSC9   0,A,PR3                  cn=1,n=1
         2 001610   200252 000004                    ADSC9   FOUND_GRAN+4,,AUTO       cn=0,n=4
         2 001611   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 001612   001000 036007                    ADLQ    512,DL
         2 001613   200236 756100                    STQ     PAST_MISEGX,,AUTO
         2 001614   001621 710000 2                  TRA     s:3197

      768     3193    4               ELSE PAST_MISEGX = CRECX$->FM$KEYTBL(XSA_PARAM.CRECX+1);

   3193  2 001615   000007 235100                    LDA     7,,PR0
         2 001616   000100 101505                    MRL     fill='000'O
         2 001617   300000 200001                    ADSC9   0,A,PR3                  cn=1,n=1
         2 001620   200236 000004                    ADSC9   PAST_MISEGX,,AUTO        cn=0,n=4

      769     3194            /***
      770     3195             *** Determine where current key begins.
      771     3196             ***/
      772     3197    4            IF XSA_PARAM.CRECX >= CRECX$->FM$KEYTBL(0)

   3197  2 001621   200006 473500                    LDP3    CRECX$,,AUTO
         2 001622   300000 236100                    LDQ     0,,PR3
         2 001623   000033 772000                    QRL     27
         2 001624   000007 116100                    CMPQ    7,,PR0
         2 001625   001637 605400 2                  TPNZ    s:3199

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:130  
      773     3198    4            THEN CRECX$ = PINCRW( BBUF$, CRECX$->FM$KEYTBL(XSA_PARAM.CRECX)+512 );

   3198  2 001626   000007 235100                    LDA     7,,PR0
         2 001627   000100 101505                    MRL     fill='000'O
         2 001630   300000 000001                    ADSC9   0,A,PR3                  cn=0,n=1
         2 001631   200252 000002                    ADSC9   FOUND_GRAN+4,,AUTO       cn=0,n=2
         2 001632   200252 220100                    LDX0    FOUND_GRAN+4,,AUTO
         2 001633   001000 636010                    EAQ     512,X0
         2 001634   200005 036100                    ADLQ    BBUF$,,AUTO
         2 001635   200006 756100                    STQ     CRECX$,,AUTO
         2 001636   001647 710000 2                  TRA     s:3200

      774     3199    4            ELSE CRECX$ = PINCRW( BBUF$, CRECX$->FM$KEYTBL(XSA_PARAM.CRECX) );

   3199  2 001637   000007 235100                    LDA     7,,PR0
         2 001640   000100 101505                    MRL     fill='000'O
         2 001641   300000 000001                    ADSC9   0,A,PR3                  cn=0,n=1
         2 001642   200252 000002                    ADSC9   FOUND_GRAN+4,,AUTO       cn=0,n=2
         2 001643   200252 220100                    LDX0    FOUND_GRAN+4,,AUTO
         2 001644   000000 636010                    EAQ     0,X0
         2 001645   200005 036100                    ADLQ    BBUF$,,AUTO
         2 001646   200006 756100                    STQ     CRECX$,,AUTO

      775     3200    4            NOT_NEXT_KEY = CRECX$->FM$KEYENT.D;

   3200  2 001647   200006 473500                    LDP3    CRECX$,,AUTO
         2 001650   300000 236100                    LDQ     0,,PR3
         2 001651   400000 376003                    ANQ     -131072,DU
         2 001652   200233 756100                    STQ     NOT_NEXT_KEY,,AUTO

      776     3201    4            END /* WHILE NOT NEXT KEY */;

   3201  2 001653   200233 234100                    SZN     NOT_NEXT_KEY,,AUTO
         2 001654   001474 604000 2                  TMI     s:3165

      777     3202
      778     3203         /***
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:131  
      779     3204          *** Return key if requested.
      780     3205          ***/
      781     3206
      782     3207    3         PAST_MISEG$ = PINCRW( BBUF$, PAST_MISEGX );

   3207  2 001655   200236 236100                    LDQ     PAST_MISEGX,,AUTO
         2 001656   000022 736000                    QLS     18
         2 001657   200005 036100                    ADLQ    BBUF$,,AUTO
         2 001660   200235 756100                    STQ     PAST_MISEG$,,AUTO

      783     3208    3         IF XSA_PARAM.ORG = %IREL# THEN    /* Irel keys have half word */

   3208  2 001661   000014 236100                    LDQ     12,,PR0
         2 001662   000777 376003                    ANQ     511,DU
         2 001663   000015 116003                    CMPQ    13,DU
         2 001664   001674 601000 2                  TNZ     s:3211

      784     3209    3            N = CRECX$->FM$IRENT.KLB + 2;  /* count field.             */

   3209  2 001665   200006 471500                    LDP1    CRECX$,,AUTO
         2 001666   100000 236100                    LDQ     0,,PR1
         2 001667   000022 772000                    QRL     18
         2 001670   377777 376007                    ANQ     131071,DL
         2 001671   000002 036007                    ADLQ    2,DL
         2 001672   200012 756100                    STQ     N,,AUTO
         2 001673   001702 710000 2                  TRA     s:3212

      785     3210    3         ELSE                             /* Keyed and Indexed keys   */
      786     3211    3            N = CRECX$->FM$KEYENT.KLB + 1; /* have byte count field.   */

   3211  2 001674   200006 471500                    LDP1    CRECX$,,AUTO
         2 001675   100000 236100                    LDQ     0,,PR1
         2 001676   000033 772000                    QRL     27
         2 001677   000377 376007                    ANQ     255,DL
         2 001700   000001 036007                    ADLQ    1,DL
         2 001701   200012 756100                    STQ     N,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:132  
      787     3212    3         MISEG$ = PINCRW( CRECX$, (N+%(BYTES_PER_WORD-1))/%BYTES_PER_WORD );
              3212                  /* Point to first MISEG entry */

   3212  2 001702   000003 036007                    ADLQ    3,DL
         2 001703   000004 506007                    DIV     4,DL
         2 001704   000022 736000                    QLS     18
         2 001705   200006 036100                    ADLQ    CRECX$,,AUTO
         2 001706   200234 756100                    STQ     MISEG$,,AUTO

      788     3213    3         IF NOT PRECORD

   3213  2 001707   200014 234100                    SZN     PRECORD,,AUTO
         2 001710   001733 604000 2                  TMI     s:3223

      789     3214    4         THEN DO;

      790     3215    4            IF READ_FPTV.KEYR

   3215  2 001711   200024 473500                    LDP3    VAREA$,,AUTO
         2 001712   300000 236100                    LDQ     0,,PR3
         2 001713   100000 316007                    CANQ    32768,DL
         2 001714   001754 600000 2                  TZE     s:3231

      791     3216    5            THEN DO;                      /* Return key               */

      792     3217    5               N = N - INDEXED_KEY_OFFSET;

   3217  2 001715   200012 236100                    LDQ     N,,AUTO
         2 001716   200237 136100                    SBLQ    INDEXED_KEY_OFFSET,,AUTO
         2 001717   200012 756100                    STQ     N,,AUTO

      793     3218    5               IF READ_FPT.KEY_.KEY$ ~= ADDR(NIL)

   3218  2 001720   200011 474500                    LDP4    FPT$,,AUTO
         2 001721   400003 236100                    LDQ     3,,PR4
         2 001722   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001723   001754 600000 2                  TZE     s:3231
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:133  

      794     3219    5              THEN READ_FPT.KEY_.KEY$->NCHARS = PINCRC( CRECX$, INDEXED_KEY_OFFSET )->
              3219                        NCHARS;

   3219  2 001724   400003 475500                    LDP5    3,,PR4
         2 001725   200012 720100                    LXL0    N,,AUTO
         2 001726   200237 235100                    LDA     INDEXED_KEY_OFFSET,,AUTO
         2 001727   040140 100545                    MLR     fill='040'O
         2 001730   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         2 001731   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0

      795     3220    5               END;

      796     3221    4            END;

   3221  2 001732   001754 710000 2                  TRA     s:3231

      797     3222    4         ELSE DO;

      798     3223    4            IF PRECORD_FPTV.KEYR

   3223  2 001733   200024 473500                    LDP3    VAREA$,,AUTO
         2 001734   300000 236100                    LDQ     0,,PR3
         2 001735   200000 316007                    CANQ    65536,DL
         2 001736   001754 600000 2                  TZE     s:3231

      799     3224    5            THEN DO;                      /* Return key               */

      800     3225    5               N = N - INDEXED_KEY_OFFSET;

   3225  2 001737   200012 236100                    LDQ     N,,AUTO
         2 001740   200237 136100                    SBLQ    INDEXED_KEY_OFFSET,,AUTO
         2 001741   200012 756100                    STQ     N,,AUTO

      801     3226    5               IF PRECORD_FPT.KEY_.KEY$ ~= ADDR(NIL)

   3226  2 001742   200011 474500                    LDP4    FPT$,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:134  
         2 001743   400003 236100                    LDQ     3,,PR4
         2 001744   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001745   001754 600000 2                  TZE     s:3231

      802     3227    5               THEN PRECORD_FPT.KEY_.KEY$->NCHARS = PINCRC( CRECX$, INDEXED_KEY_OFFSET
              3227                        )->NCHARS;

   3227  2 001746   400003 475500                    LDP5    3,,PR4
         2 001747   200012 720100                    LXL0    N,,AUTO
         2 001750   200237 235100                    LDA     INDEXED_KEY_OFFSET,,AUTO
         2 001751   040140 100545                    MLR     fill='040'O
         2 001752   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         2 001753   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0

      803     3228    5               END;

      804     3229    4            END;

      805     3230
      806     3231    3         XSA_PARAM.DVBYTE = MISEG$->FM$MISEG.CTL;

   3231  2 001754   200234 474500                    LDP4    MISEG$,,AUTO
         2 001755   400001 236100                    LDQ     1,,PR4
         2 001756   000014 676100                    ERQ     12,,PR0
         2 001757   377000 376003                    ANQ     130560,DU
         2 001760   000014 656100                    ERSQ    12,,PR0

      807     3232    3         XSA_PARAM.EOMCHAR# = %EOM_EOR#;

   3232  2 001761   501000 236003                    LDQ     -97792,DU
         2 001762   000015 552140                    STBQ    13,'40'O,PR0

      808     3233
      809     3234         /***
      810     3235          *** Return record segment by segment.
      811     3236          ***/
      812     3237
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:135  
      813     3238    3         NUBX = 0;

   3238  2 001763   200013 450100                    STZ     NUBX,,AUTO

      814     3239    3         XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1;

   3239  2 001764   000006 054100                    AOS     6,,PR0

      815     3240    3         NOT_NEXT_KEY = %YES#;

   3240  2 001765   400000 236003                    LDQ     -131072,DU
         2 001766   200233 756100                    STQ     NOT_NEXT_KEY,,AUTO

      816     3241    4         DO WHILE( NOT_NEXT_KEY );

   3241  2 001767   200233 234100                    SZN     NOT_NEXT_KEY,,AUTO
         2 001770   002212 605000 2                  TPL     s:3297

      817     3242    5            DO WHILE( MISEG$ < PAST_MISEG$ );

   3242  2 001771   200234 236100                    LDQ     MISEG$,,AUTO
         2 001772   200235 116100                    CMPQ    PAST_MISEG$,,AUTO
         2 001773   002054 603000 2                  TRC     s:3261

      818     3243    5               UBIN27_GDA = MISEG$->FM$MISEG.GDA;

   3243  2 001774   200234 470500                    LDP0    MISEG$,,AUTO
         2 001775   000001 236100                    LDQ     1,,PR0
         2 001776   000011 736000                    QLS     9
         2 001777   200027 552170                    STBQ    GDA27,'70'O,AUTO

      819     3244    5               N = GDA27.GRAN;             /* Data gran address        */

   3244  2 002000   200027 236100                    LDQ     GDA27,,AUTO
         2 002001   000011 772000                    QRL     9
         2 002002   777777 376007                    ANQ     -1,DL
         2 002003   200012 756100                    STQ     N,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:136  

      820     3245    5               CALL XSA_GET_GRAN_N ALTRET( RPT_ERROR );

   3245  2 002004   002245 701000 2                  TSX1    XSA_GET_GRAN_N
         2 002005   002236 702000 2                  TSX2    RPT_ERROR

      821     3246    5               N = MISEG$->FM$MISEG.GACTB; /* Number of bytes in segment */

   3246  2 002006   200234 470500                    LDP0    MISEG$,,AUTO
         2 002007   000000 236100                    LDQ     0,,PR0
         2 002010   007777 376007                    ANQ     4095,DL
         2 002011   200012 756100                    STQ     N,,AUTO

      822     3247    5               CRECX$ = PINCRW( BBUF$, MISEG$->FM$MISEG.GX ); /* Data pointer */

   3247  2 002012   000000 236100                    LDQ     0,,PR0
         2 002013   000014 772000                    QRL     12
         2 002014   001777 376007                    ANQ     1023,DL
         2 002015   000022 736000                    QLS     18
         2 002016   200005 036100                    ADLQ    BBUF$,,AUTO
         2 002017   200006 756100                    STQ     CRECX$,,AUTO

      823     3248    5               IF NOT PRECORD

   3248  2 002020   200014 234100                    SZN     PRECORD,,AUTO
         2 002021   002044 604000 2                  TMI     s:3258

      824     3249    6               THEN DO;

      825     3250    6                  IF N > UBYTES

   3250  2 002022   200012 236100                    LDQ     N,,AUTO
         2 002023   200023 116100                    CMPQ    UBYTES,,AUTO
         2 002024   002032 604400 2                  TMOZ    s:3255

      826     3251    7                  THEN DO;                /* Lost data                */

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:137  
      827     3252    7                     XSA_PARAM.ERR = E_LD;

   3252  2 002025   000237 236000 1                  LDQ     E_LD
         2 002026   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 002027   100001 756100                    STQ     1,,PR1

      828     3253    7                     N = UBYTES;

   3253  2 002030   200023 235100                    LDA     UBYTES,,AUTO
         2 002031   200012 755100                    STA     N,,AUTO

      829     3254    7                     END;

      830     3255    6                  PINCRC( UB$, NUBX )->NCHARS = CRECX$->NCHARS;

   3255  2 002032   200006 471500                    LDP1    CRECX$,,AUTO
         2 002033   200012 720100                    LXL0    N,,AUTO
         2 002034   200022 473500                    LDP3    UB$,,AUTO
         2 002035   200013 235100                    LDA     NUBX,,AUTO
         2 002036   040145 100540                    MLR     fill='040'O
         2 002037   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 002040   300000 000010                    ADSC9   0,A,PR3                  cn=0,n=*X0

      831     3256    6                  UBYTES = UBYTES - N;

   3256  2 002041   200023 236100                    LDQ     UBYTES,,AUTO
         2 002042   200012 136100                    SBLQ    N,,AUTO
         2 002043   200023 756100                    STQ     UBYTES,,AUTO

      832     3257    6                  END;

      833     3258    5               NUBX = NUBX + N;

   3258  2 002044   200013 236100                    LDQ     NUBX,,AUTO
         2 002045   200012 036100                    ADLQ    N,,AUTO
         2 002046   200013 756100                    STQ     NUBX,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:138  
      834     3259    5               MISEG$ = PINCRW( MISEG$, LENGTHW(FM$MISEG) );

   3259  2 002047   200234 236100                    LDQ     MISEG$,,AUTO
         2 002050   000002 036003                    ADLQ    2,DU
         2 002051   200234 756100                    STQ     MISEG$,,AUTO

      835     3260    5               END;

   3260  2 002052   200235 116100                    CMPQ    PAST_MISEG$,,AUTO
         2 002053   001774 602000 2                  TNC     s:3243

      836     3261    4            BBUF$ = XSA_PARAM.KBUF_.BUF$;

   3261  2 002054   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002055   000003 236100                    LDQ     3,,PR0
         2 002056   200005 756100                    STQ     BBUF$,,AUTO

      837     3262    4            IF XSA_PARAM.CRECX < FM$GRAN.KEYCNT

   3262  2 002057   200005 471500                    LDP1    BBUF$,,AUTO
         2 002060   100002 236100                    LDQ     2,,PR1
         2 002061   000777 376007                    ANQ     511,DL
         2 002062   000007 116100                    CMPQ    7,,PR0
         2 002063   002066 604400 2                  TMOZ    s:3265

      838     3263    4            THEN NOT_NEXT_KEY = %NO#; /* Another segment can't exist  */

   3263  2 002064   200233 450100                    STZ     NOT_NEXT_KEY,,AUTO
         2 002065   002210 710000 2                  TRA     s:3296

      839     3264    5            ELSE DO;

      840     3265    5               UBIN36_GDA = FM$GRAN.FLINK;

   3265  2 002066   100004 235100                    LDA     4,,PR1
         2 002067   200030 755100                    STA     GDA36,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:139  
      841     3266    5               XSA_PARAM.GRANULE = GDA36.GRAN;

   3266  2 002070   200030 236100                    LDQ     GDA36,,AUTO
         2 002071   777777 376007                    ANQ     -1,DL
         2 002072   000013 756100                    STQ     11,,PR0

      842     3267    5               IF XSA_PARAM.GRANULE = 0

   3267  2 002073   002076 601000 2                  TNZ     s:3270

      843     3268    5               THEN NOT_NEXT_KEY = %NO#; /* Another segment can't exist */

   3268  2 002074   200233 450100                    STZ     NOT_NEXT_KEY,,AUTO
         2 002075   002210 710000 2                  TRA     s:3296

      844     3269    6               ELSE DO;

      845     3270    6                  READ_GRANULES = READ_GRANULES_CONSTANT;

   3270  2 002076   000100 100400                    MLR     fill='000'O
         2 002077   000040 000070 1                  ADSC9   READ_GRANULES_CONSTANT   cn=0,n=56
         2 002100   200176 000070                    ADSC9   READ_GRANULES,,AUTO      cn=0,n=56

      846     3271    6                  READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);

   3271  2 002101   000014 235000 3                  LDA     12
         2 002102   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 002103   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 002104   000206 036003                    ADLQ    134,DU
         2 002105   200176 757100                    STAQ    READ_GRANULES,,AUTO

      847     3272    6                  READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);

   3272  2 002106   777640 235007                    LDA     -96,DL
         2 002107   200004 236100                    LDQ     @XSA_PARAM,,AUTO
         2 002110   000013 036003                    ADLQ    11,DU
         2 002111   200200 757100                    STAQ    READ_GRANULES+2,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:140  

      848     3273    6                  READ_GRANULES.BUF_ = XSA_PARAM.KBUF_;

   3273  2 002112   000002 237100                    LDAQ    2,,PR0
         2 002113   200202 757100                    STAQ    READ_GRANULES+4,,AUTO

      849     3274    6                  READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;

   3274  2 002114   000014 720100                    LXL0    12,,PR0
         2 002115   200206 740100                    STX0    READ_GRANULES+8,,AUTO

      850     3275    6                  CALL M$READ( READ_GRANULES ) ALTRET( RPT_ERROR );

   3275  2 002116   200176 630500                    EPPR0   READ_GRANULES,,AUTO
         2 002117   440000 713400                    CLIMB   alt,read
         2 002120   401400 401760                    pmme    nvectors=4
         2 002121   002236 702000 2                  TSX2    RPT_ERROR

      851     3276    6                  XSA_PARAM.CRECX = 0;     /* Before first key of gran */

   3276  2 002122   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002123   000007 450100                    STZ     7,,PR0

      852     3277    6                  BBUF$ = READ_GRANULES.BUF_.BUF$;

   3277  2 002124   200203 236100                    LDQ     READ_GRANULES+5,,AUTO
         2 002125   200005 756100                    STQ     BBUF$,,AUTO

      853     3278    6                  BBUF$->GRAN.X = XSA_PARAM.GRANULE;

   3278  2 002126   000013 720100                    LXL0    11,,PR0
         2 002127   200005 471500                    LDP1    BBUF$,,AUTO
         2 002130   100000 440100                    SXL0    0,,PR1

      854     3279    6                  CRECX$ = PINCRW( BBUF$, FM$GRAN.FCEX ); /* To KEYTBL */

   3279  2 002131   100002 221100                    LDX1    2,,PR1
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:141  
         2 002132   000000 636011                    EAQ     0,X1
         2 002133   200005 036100                    ADLQ    BBUF$,,AUTO
         2 002134   200006 756100                    STQ     CRECX$,,AUTO

      855     3280    6                  IF CRECX$ = ADDR(NIL) OR

   3280  2 002135   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002136   002151 600000 2                  TZE     s:3282
         2 002137   200006 473500                    LDP3    CRECX$,,AUTO
         2 002140   300000 236100                    LDQ     0,,PR3
         2 002141   000022 772000                    QRL     18
         2 002142   000777 376007                    ANQ     511,DL
         2 002143   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 002144   100002 236100                    LDQ     2,,PR1
         2 002145   000022 772000                    QRL     18
         2 002146   000106 036007                    ADLQ    70,DL
         2 002147   200252 116100                    CMPQ    FOUND_GRAN+4,,AUTO
         2 002150   002153 604000 2                  TMI     s:3286

      856     3281    6                    CRECX$->FM$KEYTBL(1) <= FM$GRAN.FCEX+SIZEW(FM$KEYTBL)
      857     3282    6                  THEN NOT_NEXT_KEY = %NO#; /* Another segment doesn't exist */

   3282  2 002151   200233 450100                    STZ     NOT_NEXT_KEY,,AUTO
         2 002152   002210 710000 2                  TRA     s:3296

      858     3283    7                  ELSE DO;                /* Another segment exists   */

      859     3284          /*** Is is possible to have FM$GRAN.KEYCNT < 1 and have
      860     3285               another segment? ***/
      861     3286    7                     IF 0 >= FM$GRAN.KEYCNT

   3286  2 002153   100002 236100                    LDQ     2,,PR1
         2 002154   000777 316007                    CANQ    511,DL
         2 002155   002162 601000 2                  TNZ     s:3288

      862     3287    7                     THEN PAST_MISEGX = FM$GRAN.NAVX;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:142  
   3287  2 002156   100001 236100                    LDQ     1,,PR1
         2 002157   000022 772000                    QRL     18
         2 002160   200236 756100                    STQ     PAST_MISEGX,,AUTO
         2 002161   002200 710000 2                  TRA     s:3291

      863     3288    7                     ELSE IF 1 >= CRECX$->FM$KEYTBL(0)

   3288  2 002162   300000 236100                    LDQ     0,,PR3
         2 002163   777000 376003                    ANQ     -512,DU
         2 002164   002000 116003                    CMPQ    1024,DU
         2 002165   002174 603000 2                  TRC     s:3290

      864     3289    7                        THEN PAST_MISEGX = CRECX$->FM$KEYTBL(1) + 512;

   3289  2 002166   300000 236100                    LDQ     0,,PR3
         2 002167   000022 772000                    QRL     18
         2 002170   000777 376007                    ANQ     511,DL
         2 002171   001000 036007                    ADLQ    512,DL
         2 002172   200236 756100                    STQ     PAST_MISEGX,,AUTO
         2 002173   002200 710000 2                  TRA     s:3291

      865     3290    7                        ELSE PAST_MISEGX = CRECX$->FM$KEYTBL(1);

   3290  2 002174   300000 236100                    LDQ     0,,PR3
         2 002175   000022 772000                    QRL     18
         2 002176   000777 376007                    ANQ     511,DL
         2 002177   200236 756100                    STQ     PAST_MISEGX,,AUTO

      866     3291    7                     MISEG$ = PINCRW( BBUF$, FM$GRAN.FCEX+SIZEW(FM$KEYTBL) );

   3291  2 002200   100002 220100                    LDX0    2,,PR1
         2 002201   000106 636010                    EAQ     70,X0
         2 002202   200005 036100                    ADLQ    BBUF$,,AUTO
         2 002203   200234 756100                    STQ     MISEG$,,AUTO

      867     3292    7                     PAST_MISEG$ = PINCRW( BBUF$, PAST_MISEGX );

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:143  
   3292  2 002204   200236 236100                    LDQ     PAST_MISEGX,,AUTO
         2 002205   000022 736000                    QLS     18
         2 002206   200005 036100                    ADLQ    BBUF$,,AUTO
         2 002207   200235 756100                    STQ     PAST_MISEG$,,AUTO

      868     3293    7                     END;

      869     3294    6                  END;

      870     3295    5               END;

      871     3296    4            END;

   3296  2 002210   200233 234100                    SZN     NOT_NEXT_KEY,,AUTO
         2 002211   001771 604000 2                  TMI     s:3242

      872     3297    3         IF NOT PRECORD

   3297  2 002212   200014 234100                    SZN     PRECORD,,AUTO
         2 002213   002220 604000 2                  TMI     s:3302

      873     3298    4         THEN DO;

      874     3299    4            XSA_PARAM.ARS# = NUBX;         /* Return read ARS          */

   3299  2 002214   200013 235100                    LDA     NUBX,,AUTO
         2 002215   000000 755100                    STA     0,,PR0

      875     3300    4            READ_AT_LEAST_ONE = %NO#;

   3300  2 002216   200015 450100                    STZ     READ_AT_LEAST_ONE,,AUTO

      876     3301    4            END;

   3301  2 002217   002221 710000 2                  TRA     s:3303

      877     3302    3         ELSE SKIPPED = SKIPPED + 1;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:144  

   3302  2 002220   200017 054100                    AOS     SKIPPED,,AUTO

      878     3303    3         END;

   3303  2 002221   200021 236100                    LDQ     TOSKIP,,AUTO
         2 002222   200017 116100                    CMPQ    SKIPPED,,AUTO
         2 002223   002226 604400 2                  TMOZ    s:3303+5
         2 002224   200014 234100                    SZN     PRECORD,,AUTO
         2 002225   001465 604000 2                  TMI     s:3162
         2 002226   200015 234100                    SZN     READ_AT_LEAST_ONE,,AUTO
         2 002227   001465 604000 2                  TMI     s:3162

      879     3304
      880     3305    2      IF PRECORD

   3305  2 002230   200014 234100                    SZN     PRECORD,,AUTO
         2 002231   002234 605000 2                  TPL     s:3307

      881     3306    2      THEN XSA_PARAM.ARS# = SKIPPED;

   3306  2 002232   200017 235100                    LDA     SKIPPED,,AUTO
         2 002233   000000 755100                    STA     0,,PR0

      882     3307    2      RETURN;

   3307  2 002234   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 002235   000001 702211                    TSX2  ! 1,X1

   3305  2 002236                       RPT_ERROR    null
      883     3308
      884     3309    2   RPT_ERROR: ;
      885     3310    2      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   3310  2 002236   000000 470400 xsym               LDP0    B$TCB$
         2 002237   000000 471500                    LDP1    0,,PR0
         2 002240   100102 236100                    LDQ     66,,PR1
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:145  
         2 002241   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 002242   300001 756100                    STQ     1,,PR3

      886     3311    2      ALTRETURN;

   3311  2 002243   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 002244   000000 702211                    TSX2  ! 0,X1

      887     3312        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:146  
      888     3313
      889     3314        /******************************/
      890     3315    2   XSA_GET_GRAN_N: PROC ALTRET;

   3315  2 002245   200240 741300       XSA_GET_GRA* STX1  ! INDEXED_KEY_OFFSET+1,,AUTO

      891     3316        /*F*  NAME: XSA_GET_GRAN_N
      892     3317              PURPOSE: Get granule N of file.
      893     3318         ***/
      894     3319
      895     3320         /***
      896     3321          *** Locals:
      897     3322          ***/
      898     3323
      899     3324    3   DCL OLDEST_GRAN_CRECNO SBIN;            /* "age" of oldest gran     */
      900     3325    3   DCL GRANX SBIN;                         /* gran index               */
      901     3326
      902     3327        /********************/
      903     3328
      904     3329    3      XSA_PARAM.GRANX = XSA_PARAM.LGRANX;  /* Init gran search         */

   3329  2 002246   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002247   000012 235100                    LDA     10,,PR0
         2 002250   000011 755100                    STA     9,,PR0

      905     3330    4      DO WHILE( XSA_PARAM.GRANX >= 0 );

   3330  2 002251   002273 604000 2                  TMI     s:3340

      906     3331    4         BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.GRANX*%GRANULE_SIZE );

   3331  2 002252   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002253   000011 236100                    LDQ     9,,PR0
         2 002254   000005 471500                    LDP1    5,,PR0
         2 002255   000012 736000                    QLS     10
         2 002256   100000 633506                    EPPR3   0,QL,PR1
         2 002257   200005 453500                    STP3    BBUF$,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:147  

      907     3332    4         IF BBUF$->GRAN.X = N

   3332  2 002260   300000 236100                    LDQ     0,,PR3
         2 002261   777777 376007                    ANQ     -1,DL
         2 002262   200012 116100                    CMPQ    N,,AUTO
         2 002263   002270 601000 2                  TNZ     s:3337

      908     3333    5         THEN DO;                         /* Found granule            */

      909     3334    5            BBUF$->GRAN.CRECNO = XSA_PARAM.CRECNO;

   3334  2 002264   000006 720100                    LXL0    6,,PR0
         2 002265   300000 740100                    STX0    0,,PR3

      910     3335    5            RETURN;

   3335  2 002266   200240 221300                    LDX1  ! INDEXED_KEY_OFFSET+1,,AUTO
         2 002267   000001 702211                    TSX2  ! 1,X1

      911     3336    5            END;
      912     3337    4         XSA_PARAM.GRANX = XSA_PARAM.GRANX - 1;

   3337  2 002270   000001 336007                    LCQ     1,DL
         2 002271   000011 056100                    ASQ     9,,PR0

      913     3338    4         END;

   3338  2 002272   002252 605000 2                  TPL     s:3331

      914     3339
      915     3340    3      IF XSA_PARAM.KBUF_.BUF$->GRAN.X = N

   3340  2 002273   000003 471500                    LDP1    3,,PR0
         2 002274   100000 236100                    LDQ     0,,PR1
         2 002275   777777 376007                    ANQ     -1,DL
         2 002276   200012 116100                    CMPQ    N,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:148  
         2 002277   002307 601000 2                  TNZ     s:3347

      916     3341    4      THEN DO;                            /* Gran is key granule      */

      917     3342    4         BBUF$ = XSA_PARAM.KBUF_.BUF$;

   3342  2 002300   000003 236100                    LDQ     3,,PR0
         2 002301   200005 756100                    STQ     BBUF$,,AUTO

      918     3343    4         BBUF$->GRAN.CRECNO = XSA_PARAM.CRECNO;

   3343  2 002302   000006 720100                    LXL0    6,,PR0
         2 002303   200005 473500                    LDP3    BBUF$,,AUTO
         2 002304   300000 740100                    STX0    0,,PR3

      919     3344    4         RETURN;

   3344  2 002305   200240 221300                    LDX1  ! INDEXED_KEY_OFFSET+1,,AUTO
         2 002306   000001 702211                    TSX2  ! 1,X1

      920     3345    4         END;
      921     3346
      922     3347    3     IF XSA_PARAM.LGRANX * %GRANULE_SIZE_BYTES + %GRANULE_SIZE_BYTES < XSA_PARAM.BBUF_
              3347               .BOUND

   3347  2 002307   000004 236100                    LDQ     4,,PR0
         2 002310   000020 772000                    QRL     16
         2 002311   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 002312   000012 236100                    LDQ     10,,PR0
         2 002313   000014 736000                    QLS     12
         2 002314   010000 036007                    ADLQ    4096,DL
         2 002315   200252 116100                    CMPQ    FOUND_GRAN+4,,AUTO
         2 002316   002370 605000 2                  TPL     s:3368

      923     3348    4      THEN DO;                            /* Room for another granule */

      924     3349    4         READ_GRANULES = READ_GRANULES_CONSTANT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:149  

   3349  2 002317   000100 100400                    MLR     fill='000'O
         2 002320   000040 000070 1                  ADSC9   READ_GRANULES_CONSTANT   cn=0,n=56
         2 002321   200176 000070                    ADSC9   READ_GRANULES,,AUTO      cn=0,n=56

      925     3350    4         READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);

   3350  2 002322   000014 235000 3                  LDA     12
         2 002323   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 002324   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 002325   000206 036003                    ADLQ    134,DU
         2 002326   200176 757100                    STAQ    READ_GRANULES,,AUTO

      926     3351    4         READ_GRANULES.KEY_ = VECTOR(N);

   3351  2 002327   777640 235007                    LDA     -96,DL
         2 002330   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 002331   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 002332   000012 036003                    ADLQ    10,DU
         2 002333   200200 757100                    STAQ    READ_GRANULES+2,,AUTO

      927     3352    4         READ_GRANULES.BUF_ = XSA_PARAM.BBUF_;

   3352  2 002334   000004 237100                    LDAQ    4,,PR0
         2 002335   200202 757100                    STAQ    READ_GRANULES+4,,AUTO

      928     3353    4         READ_GRANULES.BUF_.BOUND = %(GRANULE_SIZE_BYTES-1);

   3353  2 002336   200202 236100                    LDQ     READ_GRANULES+4,,AUTO
         2 002337   177777 376007                    ANQ     65535,DL
         2 002340   000012 276000 3                  ORQ     10
         2 002341   200202 756100                    STQ     READ_GRANULES+4,,AUTO

      929     3354    4         READ_GRANULES.BUF_.BUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.LGRANX * %
              3354                  GRANULE_SIZE + %GRANULE_SIZE );

   3354  2 002342   000012 236100                    LDQ     10,,PR0
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:150  
         2 002343   000005 471500                    LDP1    5,,PR0
         2 002344   000012 736000                    QLS     10
         2 002345   102000 633506                    EPPR3   1024,QL,PR1
         2 002346   200203 453500                    STP3    READ_GRANULES+5,,AUTO

      930     3355    4         READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;

   3355  2 002347   000014 720100                    LXL0    12,,PR0
         2 002350   200206 740100                    STX0    READ_GRANULES+8,,AUTO

      931     3356    4         CALL M$READ( READ_GRANULES ) ALTRET( JUSTALT );

   3356  2 002351   200176 630500                    EPPR0   READ_GRANULES,,AUTO
         2 002352   440000 713400                    CLIMB   alt,read
         2 002353   401400 401760                    pmme    nvectors=4
         2 002354   002476 702000 2                  TSX2    JUSTALT

      932     3357    4         XSA_PARAM.LGRANX = XSA_PARAM.LGRANX + 1;

   3357  2 002355   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002356   000012 054100                    AOS     10,,PR0

      933     3358    4         BBUF$ = READ_GRANULES.BUF_.BUF$;

   3358  2 002357   200203 236100                    LDQ     READ_GRANULES+5,,AUTO
         2 002360   200005 756100                    STQ     BBUF$,,AUTO

      934     3359    4         BBUF$->GRAN.CRECNO = XSA_PARAM.CRECNO; /* Buffer's age        */

   3359  2 002361   000006 720100                    LXL0    6,,PR0
         2 002362   200005 471500                    LDP1    BBUF$,,AUTO
         2 002363   100000 740100                    STX0    0,,PR1

      935     3360    4         BBUF$->GRAN.X = N;

   3360  2 002364   200012 721100                    LXL1    N,,AUTO
         2 002365   100000 441100                    SXL1    0,,PR1
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:151  

      936     3361    4         RETURN;

   3361  2 002366   200240 221300                    LDX1  ! INDEXED_KEY_OFFSET+1,,AUTO
         2 002367   000001 702211                    TSX2  ! 1,X1

      937     3362    4         END;
      938     3363
      939     3364         /***
      940     3365          *** Must get rid of one of current granules.
      941     3366          ***/
      942     3367
      943     3368    3      GRANX = XSA_PARAM.LGRANX;

   3368  2 002370   000012 235100                    LDA     10,,PR0
         2 002371   200242 755100                    STA     GRANX,,AUTO

      944     3369    3      BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, GRANX*%GRANULE_SIZE );

   3369  2 002372   000005 471500                    LDP1    5,,PR0
         2 002373   000012 735000                    ALS     10
         2 002374   100000 633505                    EPPR3   0,AL,PR1
         2 002375   200005 453500                    STP3    BBUF$,,AUTO

      945     3370    3      OLDEST_GRAN_CRECNO = BBUF$->GRAN.CRECNO;

   3370  2 002376   300000 236100                    LDQ     0,,PR3
         2 002377   000022 772000                    QRL     18
         2 002400   200241 756100                    STQ     OLDEST_GRAN_CRECNO,,AUTO

      946     3371    3      XSA_PARAM.GRANX = GRANX;

   3371  2 002401   200242 235100                    LDA     GRANX,,AUTO
         2 002402   000011 755100                    STA     9,,PR0

      947     3372    4      DO WHILE( GRANX >= 0 );

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:152  
   3372  2 002403   002426 604000 2                  TMI     s:3382

      948     3373    4         BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, GRANX*%GRANULE_SIZE );

   3373  2 002404   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002405   000005 471500                    LDP1    5,,PR0
         2 002406   200242 235100                    LDA     GRANX,,AUTO
         2 002407   000012 735000                    ALS     10
         2 002410   100000 633505                    EPPR3   0,AL,PR1
         2 002411   200005 453500                    STP3    BBUF$,,AUTO

      949     3374    4         IF BBUF$->GRAN.CRECNO < OLDEST_GRAN_CRECNO

   3374  2 002412   300000 236100                    LDQ     0,,PR3
         2 002413   000022 772000                    QRL     18
         2 002414   200241 116100                    CMPQ    OLDEST_GRAN_CRECNO,,AUTO
         2 002415   002423 605000 2                  TPL     s:3379

      950     3375    5         THEN DO;                         /* Current gran is older    */

      951     3376    5            XSA_PARAM.GRANX = GRANX;

   3376  2 002416   200242 235100                    LDA     GRANX,,AUTO
         2 002417   000011 755100                    STA     9,,PR0

      952     3377    5            OLDEST_GRAN_CRECNO = BBUF$->GRAN.CRECNO;

   3377  2 002420   300000 236100                    LDQ     0,,PR3
         2 002421   000022 772000                    QRL     18
         2 002422   200241 756100                    STQ     OLDEST_GRAN_CRECNO,,AUTO

      953     3378    5            END;

      954     3379    4         GRANX = GRANX - 1;

   3379  2 002423   000001 336007                    LCQ     1,DL
         2 002424   200242 056100                    ASQ     GRANX,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:153  

      955     3380    4         END;

   3380  2 002425   002404 605000 2                  TPL     s:3373

      956     3381
      957     3382    3      READ_GRANULES = READ_GRANULES_CONSTANT;

   3382  2 002426   000100 100400                    MLR     fill='000'O
         2 002427   000040 000070 1                  ADSC9   READ_GRANULES_CONSTANT   cn=0,n=56
         2 002430   200176 000070                    ADSC9   READ_GRANULES,,AUTO      cn=0,n=56

      958     3383    3      READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);

   3383  2 002431   000014 235000 3                  LDA     12
         2 002432   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 002433   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 002434   000206 036003                    ADLQ    134,DU
         2 002435   200176 757100                    STAQ    READ_GRANULES,,AUTO

      959     3384    3      READ_GRANULES.KEY_ = VECTOR(N);

   3384  2 002436   777640 235007                    LDA     -96,DL
         2 002437   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 002440   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 002441   000012 036003                    ADLQ    10,DU
         2 002442   200200 757100                    STAQ    READ_GRANULES+2,,AUTO

      960     3385    3      READ_GRANULES.BUF_ = XSA_PARAM.BBUF_;

   3385  2 002443   000004 237100                    LDAQ    4,,PR0
         2 002444   200202 757100                    STAQ    READ_GRANULES+4,,AUTO

      961     3386    3      READ_GRANULES.BUF_.BOUND = %(GRANULE_SIZE_BYTES-1);

   3386  2 002445   200202 236100                    LDQ     READ_GRANULES+4,,AUTO
         2 002446   177777 376007                    ANQ     65535,DL
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:154  
         2 002447   000012 276000 3                  ORQ     10
         2 002450   200202 756100                    STQ     READ_GRANULES+4,,AUTO

      962     3387    3      READ_GRANULES.BUF_.BUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.GRANX * %
              3387               GRANULE_SIZE );

   3387  2 002451   000011 236100                    LDQ     9,,PR0
         2 002452   000005 471500                    LDP1    5,,PR0
         2 002453   000012 736000                    QLS     10
         2 002454   100000 634506                    EPPR4   0,QL,PR1
         2 002455   200203 454500                    STP4    READ_GRANULES+5,,AUTO

      963     3388    3      READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;

   3388  2 002456   000014 720100                    LXL0    12,,PR0
         2 002457   200206 740100                    STX0    READ_GRANULES+8,,AUTO

      964     3389    3      CALL M$READ( READ_GRANULES ) ALTRET( JUSTALT );

   3389  2 002460   200176 630500                    EPPR0   READ_GRANULES,,AUTO
         2 002461   440000 713400                    CLIMB   alt,read
         2 002462   401400 401760                    pmme    nvectors=4
         2 002463   002476 702000 2                  TSX2    JUSTALT

      965     3390    3      BBUF$ = READ_GRANULES.BUF_.BUF$;

   3390  2 002464   200203 236100                    LDQ     READ_GRANULES+5,,AUTO
         2 002465   200005 756100                    STQ     BBUF$,,AUTO

      966     3391    3      BBUF$->GRAN.CRECNO = XSA_PARAM.CRECNO; /* Buffer's age           */

   3391  2 002466   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002467   000006 720100                    LXL0    6,,PR0
         2 002470   200005 471500                    LDP1    BBUF$,,AUTO
         2 002471   100000 740100                    STX0    0,,PR1

      967     3392    3      BBUF$->GRAN.X = N;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:155  

   3392  2 002472   200012 721100                    LXL1    N,,AUTO
         2 002473   100000 441100                    SXL1    0,,PR1

      968     3393    3      RETURN;

   3393  2 002474   200240 221300                    LDX1  ! INDEXED_KEY_OFFSET+1,,AUTO
         2 002475   000001 702211                    TSX2  ! 1,X1

   3392  2 002476                       JUSTALT      null
      969     3394
      970     3395    3   JUSTALT: ;
      971     3396    3      ALTRETURN;

   3396  2 002476   200240 221300                    LDX1  ! INDEXED_KEY_OFFSET+1,,AUTO
         2 002477   000000 702211                    TSX2  ! 0,X1

      972     3397
      973     3398    3   END XSA_GET_GRAN_N;
      974     3399
      975     3400    2   END XSA_KEYED_READ;
      976     3401
      977     3402        /********************************************************************/
      978     3403        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:156  
      979     3404        /********************************************************************/
      980     3405    1   XSA_RELATIVE_READ: PROC ALTRET;

   3405  2 002500   200232 741300       XSA_RELATIV* STX1  ! FIRST_SEG+1,,AUTO

      981     3406        /*F*  NAME: XSA_RELATIVE_READ
      982     3407              PURPOSE: Reads the next record from an ORG=RELATIVE file or
      983     3408                       positions forward to the requested record.
      984     3409              DESCRIPTION:
      985     3410                       Read the next record or perform a PRECORD with N,
      986     3411                       where N > 0, TOSKIP has been set to N, and SKIPPED
      987     3412                       starts out at 0. If it's a PRECORD, just position and
      988     3413                       set the RPOS (record positioned to) flag so that we'll
      989     3414                       know we're already there if the user does a subsequent
      990     3415                       read.
      991     3416         ***/
      992     3417
      993     3418         /***
      994     3419          *** Locals:
      995     3420          ***/
      996     3421
      997     3422    2   DCL NEXT_RECORD BIT(1) ALIGNED;
      998     3423    2   DCL COUNT_ACTIVE_REC BIT(1) ALIGNED;
      999     3424
     1000     3425        /********************/
     1001     3426
     1002     3427         /***
     1003     3428          *** Position to the beginning of the next record that exists.
     1004     3429          ***/
     1005     3430
     1006     3431    2      BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.GRANX );

   3431  2 002501   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002502   000011 236100                    LDQ     9,,PR0
         2 002503   000005 471500                    LDP1    5,,PR0
         2 002504   100000 633506                    EPPR3   0,QL,PR1
         2 002505   200005 453500                    STP3    BBUF$,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:157  

     1007     3432    2      COUNT_ACTIVE_REC = %NO#;

   3432  2 002506   200234 450100                    STZ     COUNT_ACTIVE_REC,,AUTO

     1008     3433    2      NEXT_RECORD = %NO#;

   3433  2 002507   200233 450100                    STZ     NEXT_RECORD,,AUTO

     1009     3434    3      DO WHILE( NOT NEXT_RECORD OR TOSKIP > SKIPPED );

   3434  2 002510   002617 710000 2                  TRA     s:3462

     1010     3435    3         IF XSA_PARAM.RPOS THEN

   3435  2 002511   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002512   000014 234100                    SZN     12,,PR0
         2 002513   002517 605000 2                  TPL     s:3437

     1011     3436    3            XSA_PARAM.RPOS = %NO#; /* already positioned from PRECORD */

   3436  2 002514   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 002515   000014 356100                    ANSQ    12,,PR0
         2 002516   002520 710000 2                  TRA     s:3438

     1012     3437    3         ELSE XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1; /* next record */

   3437  2 002517   000006 054100                    AOS     6,,PR0

     1013     3438    3         IF XSA_PARAM.CRECNO > DCBADDR(XSA_PARAM.DCB#)->F$DCB.NRECS# THEN

   3438  2 002520   000010 471400 3                  LDP1    8
         2 002521   100000 473500                    LDP3    0,,PR1
         2 002522   000014 720100                    LXL0    12,,PR0
         2 002523   300000 474510                    LDP4    0,X0,PR3
         2 002524   000006 236100                    LDQ     6,,PR0
         2 002525   400042 116100                    CMPQ    34,,PR4
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:158  
         2 002526   002545 604400 2                  TMOZ    s:3449

     1014     3439    4         DO;  /* End of file */

     1015     3440    4            XSA_PARAM.ERR = E_EOF;

   3440  2 002527   000236 236000 1                  LDQ     E_EOF
         2 002530   000001 756100                    STQ     1,,PR0

     1016     3441    4            XSA_PARAM.EOF = %YES#;

   3441  2 002531   000040 236003                    LDQ     32,DU
         2 002532   000015 256100                    ORSQ    13,,PR0

     1017     3442    4            XSA_PARAM.CRECNO = XSA_PARAM.CRECNO - 1; /* Just to be honest */

   3442  2 002533   000001 336007                    LCQ     1,DL
         2 002534   000006 056100                    ASQ     6,,PR0

     1018     3443    4            IF PRECORD THEN

   3443  2 002535   200014 234100                    SZN     PRECORD,,AUTO
         2 002536   002542 605000 2                  TPL     s:3445

     1019     3444    4               XSA_PARAM.ARS# = SKIPPED;

   3444  2 002537   200017 235100                    LDA     SKIPPED,,AUTO
         2 002540   000000 755100                    STA     0,,PR0
         2 002541   002543 710000 2                  TRA     s:3446

     1020     3445    4            ELSE XSA_PARAM.ARS# = 0;

   3445  2 002542   000000 450100                    STZ     0,,PR0

     1021     3446    4            ALTRETURN;

   3446  2 002543   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:159  
         2 002544   000000 702211                    TSX2  ! 0,X1

     1022     3447    4            END; /* End of file */
     1023     3448
     1024     3449    3         IF XSA_PARAM.WORDS_REMAINING > 0 THEN

   3449  2 002545   000015 721100                    LXL1    13,,PR0
         2 002546   002552 600000 2                  TZE     s:3451

     1025     3450    3            CALL XSA_RELATIVE_SEG ALTRET( EOF_EXPECTED ); /* position to record */

   3450  2 002547   003026 701000 2                  TSX1    XSA_RELATIVE_SEG
         2 002550   003024 702000 2                  TSX2    EOF_EXPECTED
         2 002551   002556 710000 2                  TRA     s:3452

     1026     3451    3         ELSE CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX );

   3451  2 002552   000007 236100                    LDQ     7,,PR0
         2 002553   000022 736000                    QLS     18
         2 002554   200005 036100                    ADLQ    BBUF$,,AUTO
         2 002555   200006 756100                    STQ     CRECX$,,AUTO

     1027     3452    4         DO WHILE(XSA_PARAM.CRECX >= XSA_PARAM.LCRECX); /* Might be next gran */

   3452  2 002556   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002557   000007 236100                    LDQ     7,,PR0
         2 002560   000010 116100                    CMPQ    8,,PR0
         2 002561   002570 604000 2                  TMI     s:3455

     1028     3453    4            CALL XSA_GET_NEXT_REL_GRAN ALTRET( EOF_EXPECTED );

   3453  2 002562   003066 701000 2                  TSX1    XSA_GET_NEXT_REL_GRAN
         2 002563   003024 702000 2                  TSX2    EOF_EXPECTED

     1029     3454    4            END;

   3454  2 002564   200004 470500                    LDP0    @XSA_PARAM,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:160  
         2 002565   000007 236100                    LDQ     7,,PR0
         2 002566   000010 116100                    CMPQ    8,,PR0
         2 002567   002562 605000 2                  TPL     s:3453

     1030     3455    3         XSA_PARAM.CRECX = XSA_PARAM.CRECX + 1; /* Index of data       */

   3455  2 002570   000007 054100                    AOS     7,,PR0

     1031     3456    3         NEXT_RECORD = FM$REL.A; /* '1'B if active, '0'B if not */

   3456  2 002571   200006 471500                    LDP1    CRECX$,,AUTO
         2 002572   100000 236100                    LDQ     0,,PR1
         2 002573   400000 376003                    ANQ     -131072,DU
         2 002574   200233 756100                    STQ     NEXT_RECORD,,AUTO

     1032     3457    3         IF NEXT_RECORD THEN

   3457  2 002575   200233 234100                    SZN     NEXT_RECORD,,AUTO
         2 002576   002605 605000 2                  TPL     s:3461

     1033     3458    3            IF COUNT_ACTIVE_REC THEN

   3458  2 002577   200234 234100                    SZN     COUNT_ACTIVE_REC,,AUTO
         2 002600   002603 605000 2                  TPL     s:3460

     1034     3459    3               SKIPPED = SKIPPED + 1;

   3459  2 002601   200017 054100                    AOS     SKIPPED,,AUTO
         2 002602   002605 710000 2                  TRA     s:3461

     1035     3460    3            ELSE COUNT_ACTIVE_REC = %YES#;

   3460  2 002603   400000 236003                    LDQ     -131072,DU
         2 002604   200234 756100                    STQ     COUNT_ACTIVE_REC,,AUTO

     1036     3461    3         XSA_PARAM.WORDS_REMAINING = (DCBADDR(XSA_PARAM.DCB#)->F$DCB.RECL# + %(
              3461                  BYTES_PER_WORD-1)) / %BYTES_PER_WORD;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:161  

   3461  2 002605   000010 473400 3                  LDP3    8
         2 002606   300000 474500                    LDP4    0,,PR3
         2 002607   000014 720100                    LXL0    12,,PR0
         2 002610   400000 475510                    LDP5    0,X0,PR4
         2 002611   500033 236100                    LDQ     27,,PR5
         2 002612   777777 376007                    ANQ     -1,DL
         2 002613   000003 036007                    ADLQ    3,DL
         2 002614   000002 772000                    QRL     2
         2 002615   000000 621006                    EAX1    0,QL
         2 002616   000015 441100                    SXL1    13,,PR0

     1037     3462    3         END; /* Do While */

   3462  2 002617   200233 234100                    SZN     NEXT_RECORD,,AUTO
         2 002620   002511 605000 2                  TPL     s:3435
         2 002621   200021 236100                    LDQ     TOSKIP,,AUTO
         2 002622   200017 116100                    CMPQ    SKIPPED,,AUTO
         2 002623   002511 605400 2                  TPNZ    s:3435

     1038     3463
     1039     3464         /***
     1040     3465          *** CRECX$ is now positioned to the control word of first segment of
     1041     3466          *** the next record.
     1042     3467          ***/
     1043     3468
     1044     3469    2      XSA_PARAM.DVBYTE = '0'B;    /* Not meaningful */

   3469  2 002624   000016 236000 3                  LDQ     14
         2 002625   000014 356100                    ANSQ    12,,PR0

     1045     3470    2      XSA_PARAM.EOMCHAR# = %EOM_EOR#;

   3470  2 002626   501000 236003                    LDQ     -97792,DU
         2 002627   000015 552140                    STBQ    13,'40'O,PR0

     1046     3471
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:162  
     1047     3472    2      IF PRECORD THEN

   3472  2 002630   200014 234100                    SZN     PRECORD,,AUTO
         2 002631   002657 605000 2                  TPL     s:3483

     1048     3473    3      DO;

     1049     3474    3         IF PRECORD_FPTV.KEYR AND PRECORD_FPT.KEY_.KEY$ ~= ADDR(NIL) THEN

   3474  2 002632   200024 471500                    LDP1    VAREA$,,AUTO
         2 002633   100000 236100                    LDQ     0,,PR1
         2 002634   200000 316007                    CANQ    65536,DL
         2 002635   002645 600000 2                  TZE     s:3476
         2 002636   200011 473500                    LDP3    FPT$,,AUTO
         2 002637   300003 236100                    LDQ     3,,PR3
         2 002640   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002641   002645 600000 2                  TZE     s:3476

     1050     3475    3            PRECORD_FPT.KEY_.KEY$->BASED_WORD = XSA_PARAM.CRECNO;

   3475  2 002642   300003 474500                    LDP4    3,,PR3
         2 002643   000006 235100                    LDA     6,,PR0
         2 002644   400000 755100                    STA     0,,PR4

     1051     3476    3         XSA_PARAM.ARS# = SKIPPED;

   3476  2 002645   200017 235100                    LDA     SKIPPED,,AUTO
         2 002646   000000 755100                    STA     0,,PR0

     1052     3477    3         XSA_PARAM.RPOS = %YES#; /* position to this one next time */

   3477  2 002647   400000 236003                    LDQ     -131072,DU
         2 002650   000014 256100                    ORSQ    12,,PR0

     1053     3478    3         XSA_PARAM.WORDS_REMAINING = 0; /* ditto */

   3478  2 002651   000000 220003                    LDX0    0,DU
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:163  
         2 002652   000015 440100                    SXL0    13,,PR0

     1054     3479    3         XSA_PARAM.CRECX = XSA_PARAM.CRECX - 1; /* back to control word */

   3479  2 002653   000001 336007                    LCQ     1,DL
         2 002654   000007 056100                    ASQ     7,,PR0

     1055     3480    3         RETURN;

   3480  2 002655   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 002656   000001 702211                    TSX2  ! 1,X1

     1056     3481    3         END;
     1057     3482
     1058     3483    2      NUBX = 0;  /* Nothing returned yet  */

   3483  2 002657   200013 450100                    STZ     NUBX,,AUTO

     1059     3484    2      RECORD_SIZE = FM$REL.GACTB;

   3484  2 002660   200006 471500                    LDP1    CRECX$,,AUTO
         2 002661   100000 236100                    LDQ     0,,PR1
         2 002662   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 002663   200016 756100                    STQ     RECORD_SIZE,,AUTO

     1060     3485    2      IF READ_FPTV.KEYR AND READ_FPT.KEY_.KEY$ ~= ADDR(NIL) THEN

   3485  2 002664   200024 473500                    LDP3    VAREA$,,AUTO
         2 002665   300000 236100                    LDQ     0,,PR3
         2 002666   100000 316007                    CANQ    32768,DL
         2 002667   002677 600000 2                  TZE     s:3492
         2 002670   200011 474500                    LDP4    FPT$,,AUTO
         2 002671   400003 236100                    LDQ     3,,PR4
         2 002672   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002673   002677 600000 2                  TZE     s:3492

     1061     3486    2         READ_FPT.KEY_.KEY$->BASED_WORD = XSA_PARAM.CRECNO;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:164  

   3486  2 002674   400003 475500                    LDP5    3,,PR4
         2 002675   000006 235100                    LDA     6,,PR0
         2 002676   500000 755100                    STA     0,,PR5

     1062     3487
     1063     3488         /***
     1064     3489          *** Keep appending record segments while bytes remain in current.
     1065     3490          ***/
     1066     3491
     1067     3492    2      XSA_PARAM.WORDS_REMAINING = (DCBADDR(XSA_PARAM.DCB#)->F$DCB.RECL# + %(
              3492               BYTES_PER_WORD-1)) / %BYTES_PER_WORD;

   3492  2 002677   000010 474400 3                  LDP4    8
         2 002700   400000 475500                    LDP5    0,,PR4
         2 002701   000014 720100                    LXL0    12,,PR0
         2 002702   500000 476510                    LDP6    0,X0,PR5
         2 002703   600033 236100                    LDQ     27,,PR6
         2 002704   777777 376007                    ANQ     -1,DL
         2 002705   000003 036007                    ADLQ    3,DL
         2 002706   000002 772000                    QRL     2
         2 002707   000000 621006                    EAX1    0,QL
         2 002710   000015 441100                    SXL1    13,,PR0

     1068     3493    2      CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX ); /* Position to data */

   3493  2 002711   000007 236100                    LDQ     7,,PR0
         2 002712   000022 736000                    QLS     18
         2 002713   200005 036100                    ADLQ    BBUF$,,AUTO
         2 002714   200006 756100                    STQ     CRECX$,,AUTO

     1069     3494
     1070     3495    3      DO WHILE( XSA_PARAM.WORDS_REMAINING > 0 );

   3495  2 002715   000000 101003                    CMPX1   0,DU
         2 002716   003017 600000 2                  TZE     EOF_IN_RECORD

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:165  
     1071     3496    3         N = XSA_PARAM.LCRECX - XSA_PARAM.CRECX; /* # words left in gran */

   3496  2 002717   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 002720   000010 236100                    LDQ     8,,PR0
         2 002721   000007 136100                    SBLQ    7,,PR0
         2 002722   200012 756100                    STQ     N,,AUTO

     1072     3497    3         IF N > XSA_PARAM.WORDS_REMAINING THEN

   3497  2 002723   000015 236100                    LDQ     13,,PR0
         2 002724   777777 376007                    ANQ     -1,DL
         2 002725   200012 116100                    CMPQ    N,,AUTO
         2 002726   002730 605000 2                  TPL     s:3499

     1073     3498    3            N = XSA_PARAM.WORDS_REMAINING; /* Record wholly contained */

   3498  2 002727   200012 756100                    STQ     N,,AUTO

     1074     3499    3         DATA$ = CRECX$;

   3499  2 002730   200006 236100                    LDQ     CRECX$,,AUTO
         2 002731   200007 756100                    STQ     DATA$,,AUTO

     1075     3500    3         XSA_PARAM.CRECX = XSA_PARAM.CRECX + XSA_PARAM.WORDS_REMAINING;

   3500  2 002732   000015 236100                    LDQ     13,,PR0
         2 002733   777777 376007                    ANQ     -1,DL
         2 002734   000007 036100                    ADLQ    7,,PR0
         2 002735   000007 756100                    STQ     7,,PR0

     1076     3501    3         CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX ); /* Next record     */

   3501  2 002736   000022 736000                    QLS     18
         2 002737   200005 036100                    ADLQ    BBUF$,,AUTO
         2 002740   200006 756100                    STQ     CRECX$,,AUTO

     1077     3502    3        XSA_PARAM.WORDS_REMAINING = XSA_PARAM.WORDS_REMAINING - N; /* # left to get */
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:166  

   3502  2 002741   000015 236100                    LDQ     13,,PR0
         2 002742   777777 376007                    ANQ     -1,DL
         2 002743   200012 136100                    SBLQ    N,,AUTO
         2 002744   000000 620006                    EAX0    0,QL
         2 002745   000015 440100                    SXL0    13,,PR0

     1078     3503
     1079     3504    3         N = N * %BYTES_PER_WORD; /* Maximum number of bytes in segment */

   3504  2 002746   200012 235100                    LDA     N,,AUTO
         2 002747   000002 735000                    ALS     2
         2 002750   200012 755100                    STA     N,,AUTO

     1080     3505    3         IF N > RECORD_SIZE THEN

   3505  2 002751   200012 236100                    LDQ     N,,AUTO
         2 002752   200016 116100                    CMPQ    RECORD_SIZE,,AUTO
         2 002753   002756 604400 2                  TMOZ    s:3507

     1081     3506    3            N = RECORD_SIZE; /* Limit returned bytes to those active */

   3506  2 002754   200016 235100                    LDA     RECORD_SIZE,,AUTO
         2 002755   200012 755100                    STA     N,,AUTO

     1082     3507    3         RECORD_SIZE = RECORD_SIZE - N;

   3507  2 002756   200016 236100                    LDQ     RECORD_SIZE,,AUTO
         2 002757   200012 136100                    SBLQ    N,,AUTO
         2 002760   200016 756100                    STQ     RECORD_SIZE,,AUTO

     1083     3508
     1084     3509    3         IF N > 0 THEN

   3509  2 002761   000000 115003                    CMPA    0,DU
         2 002762   003010 604400 2                  TMOZ    s:3521

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:167  
     1085     3510    4         DO;  /* Transfer data to user buffer */

     1086     3511    4            IF N > UBYTES THEN

   3511  2 002763   200012 236100                    LDQ     N,,AUTO
         2 002764   200023 116100                    CMPQ    UBYTES,,AUTO
         2 002765   002772 604400 2                  TMOZ    s:3516

     1087     3512    5            DO;  /* Lost data */

     1088     3513    5               XSA_PARAM.ERR = E_LD;

   3513  2 002766   000237 236000 1                  LDQ     E_LD
         2 002767   000001 756100                    STQ     1,,PR0

     1089     3514    5               N = UBYTES;

   3514  2 002770   200023 235100                    LDA     UBYTES,,AUTO
         2 002771   200012 755100                    STA     N,,AUTO

     1090     3515    5               END; /* Lost data */

     1091     3516    4            PINCRC( UB$, NUBX )->NCHARS = DATA$->NCHARS;

   3516  2 002772   200007 471500                    LDP1    DATA$,,AUTO
         2 002773   000000 621005                    EAX1    0,AL
         2 002774   200022 473500                    LDP3    UB$,,AUTO
         2 002775   200012 722100                    LXL2    N,,AUTO
         2 002776   200013 235100                    LDA     NUBX,,AUTO
         2 002777   040145 100540                    MLR     fill='040'O
         2 003000   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         2 003001   300000 000012                    ADSC9   0,A,PR3                  cn=0,n=*X2

     1092     3517    4            UBYTES = UBYTES - N;

   3517  2 003002   200023 236100                    LDQ     UBYTES,,AUTO
         2 003003   200012 136100                    SBLQ    N,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:168  
         2 003004   200023 756100                    STQ     UBYTES,,AUTO

     1093     3518    4            NUBX = NUBX + N;

   3518  2 003005   200013 236100                    LDQ     NUBX,,AUTO
         2 003006   200012 036100                    ADLQ    N,,AUTO
         2 003007   200013 756100                    STQ     NUBX,,AUTO

     1094     3519    4            END; /* Transfer data to user buffer */

     1095     3520
     1096     3521    3         IF XSA_PARAM.WORDS_REMAINING > 0 THEN

   3521  2 003010   000015 720100                    LXL0    13,,PR0
         2 003011   003014 600000 2                  TZE     s:3523

     1097     3522    3            CALL XSA_GET_NEXT_REL_GRAN ALTRET( EOF_IN_RECORD );

   3522  2 003012   003066 701000 2                  TSX1    XSA_GET_NEXT_REL_GRAN
         2 003013   003017 702000 2                  TSX2    EOF_IN_RECORD

     1098     3523    3         END; /* Do While */

   3523  2 003014   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003015   000015 720100                    LXL0    13,,PR0
         2 003016   002717 601000 2                  TNZ     s:3496

   3514  2 003017                       EOF_IN_RECO* null
     1099     3524
     1100     3525    2   EOF_IN_RECORD: ;
     1101     3526    2      XSA_PARAM.ARS# = NUBX;

   3526  2 003017   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003020   200013 235100                    LDA     NUBX,,AUTO
         2 003021   000000 755100                    STA     0,,PR0

     1102     3527    2      RETURN;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:169  

   3527  2 003022   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 003023   000001 702211                    TSX2  ! 1,X1

   3526  2 003024                       EOF_EXPECTED null
     1103     3528
     1104     3529    2   EOF_EXPECTED: ;
     1105     3530    2      ALTRETURN;

   3530  2 003024   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 003025   000000 702211                    TSX2  ! 0,X1

     1106     3531
     1107     3532    2   END XSA_RELATIVE_READ;
     1108     3533        /********************************************************************/
     1109     3534        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:170  
     1110     3535        /********************************************************************/
     1111     3536    1   XSA_RELATIVE_SEG: PROC ALTRET;

   3536  2 003026   200236 741300       XSA_RELATIV* STX1  ! PAST_MISEGX,,AUTO

     1112     3537        /*F*  NAME: XSA_RELATIVE_SEG
     1113     3538              PURPOSE: Position to the next segment of a RELATIVE file.
     1114     3539         ***/
     1115     3540
     1116     3541        /********************/
     1117     3542
     1118     3543    3      DO WHILE( XSA_PARAM.WORDS_REMAINING > 0 ); /* While not in final gran */

   3543  2 003027   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003030   000015 720100                    LXL0    13,,PR0
         2 003031   003062 600000 2                  TZE     s:3557

     1119     3544    3         N = XSA_PARAM.LCRECX - XSA_PARAM.CRECX; /* # words remaining in gran */

   3544  2 003032   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003033   000010 236100                    LDQ     8,,PR0
         2 003034   000007 136100                    SBLQ    7,,PR0
         2 003035   200012 756100                    STQ     N,,AUTO

     1120     3545    3         IF N <= XSA_PARAM.WORDS_REMAINING THEN

   3545  2 003036   000015 236100                    LDQ     13,,PR0
         2 003037   777777 376007                    ANQ     -1,DL
         2 003040   200012 116100                    CMPQ    N,,AUTO
         2 003041   003050 604000 2                  TMI     s:3551

     1121     3546    4         DO;  /* Record continued in next gran */

     1122     3547    4            XSA_PARAM.WORDS_REMAINING = XSA_PARAM.WORDS_REMAINING - N;

   3547  2 003042   200012 136100                    SBLQ    N,,AUTO
         2 003043   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:171  
         2 003044   000015 440100                    SXL0    13,,PR0

     1123     3548    4            CALL XSA_GET_NEXT_REL_GRAN ALTRET( JUSTALT );

   3548  2 003045   003066 701000 2                  TSX1    XSA_GET_NEXT_REL_GRAN
         2 003046   003064 702000 2                  TSX2    JUSTALT

     1124     3549    4            END;

   3549  2 003047   003057 710000 2                  TRA     s:3555

     1125     3550    4         ELSE DO;

     1126     3551    4            XSA_PARAM.CRECX = XSA_PARAM.CRECX + XSA_PARAM.WORDS_REMAINING;

   3551  2 003050   000007 036100                    ADLQ    7,,PR0
         2 003051   000007 756100                    STQ     7,,PR0

     1127     3552    4            CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX );

   3552  2 003052   000022 736000                    QLS     18
         2 003053   200005 036100                    ADLQ    BBUF$,,AUTO
         2 003054   200006 756100                    STQ     CRECX$,,AUTO

     1128     3553    4            XSA_PARAM.WORDS_REMAINING = 0;

   3553  2 003055   000000 220003                    LDX0    0,DU
         2 003056   000015 440100                    SXL0    13,,PR0

     1129     3554    4            END;

     1130     3555    3         END;

   3555  2 003057   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003060   000015 720100                    LXL0    13,,PR0
         2 003061   003032 601000 2                  TNZ     s:3544

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:172  
     1131     3556
     1132     3557    2      RETURN;

   3557  2 003062   200236 221300                    LDX1  ! PAST_MISEGX,,AUTO
         2 003063   000001 702211                    TSX2  ! 1,X1

   3551  2 003064                       JUSTALT      null
     1133     3558
     1134     3559    2   JUSTALT: ;
     1135     3560    2      ALTRETURN;

   3560  2 003064   200236 221300                    LDX1  ! PAST_MISEGX,,AUTO
         2 003065   000000 702211                    TSX2  ! 0,X1

     1136     3561
     1137     3562    2   END XSA_RELATIVE_SEG;
     1138     3563        /********************************************************************/
     1139     3564        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:173  
     1140     3565        /********************************************************************/
     1141     3566    1   XSA_GET_NEXT_REL_GRAN: PROC ALTRET;

   3566  2 003066   200240 741300       XSA_GET_NEX* STX1  ! INDEXED_KEY_OFFSET+1,,AUTO

     1142     3567        /*F*  NAME:     XSA_GET_NEXT_REL_GRAN
     1143     3568              PURPOSE:  Get the next granule of an ORG=RELATIVE file.
     1144     3569              DESCRIPTION:
     1145     3570                        Attempt to get the next granule in a relative file. In
     1146     3571                        a relative file, all the UGRANS granules may not have
     1147     3572                        been actually written yet. I.e., when FMJ$REL writes
     1148     3573                        a record, it computes the granule the record will be
     1149     3574                        written to and writes only that one. Therefore, that
     1150     3575                        granule may be the only one properly initialized and
     1151     3576                        written. FMJ will also init and write granules that
     1152     3577                        it has read through. However, we can't know whether
     1153     3578                        this file has been written or read all the way through
     1154     3579                        by FMJ, so it's necessary to anticipate receiving an
     1155     3580                        E$DI error when such a granule is read since the
     1156     3581                        stamp won't match. E$DI is a real error for other file
     1157     3582                        types, but not here. Instead, just fake some of what
     1158     3583                        FMJ does so that things will fall out in the wash.
     1159     3584                        Leave the granule stamp alone to make the faking
     1160     3585                        obvious. The data portion of the granule is zeroed on
     1161     3586                        the far-out chance that the number of active bytes in
     1162     3587                        the record's control word is larger than the bytes
     1163     3588                        written. This shouldn't happen and could be treated as
     1164     3589                        an error. But, FMJ$REL doesn't error it and does
     1165     3590                        init it with zeroes, so XSA must do likewise.
     1166     3591        */
     1167     3592
     1168     3593    2      CALL XSA_GET_NEXT_GRAN

   3593  2 003067   003432 701000 2                  TSX1    XSA_GET_NEXT_GRAN
         2 003070   003072 702000 2                  TSX2    s:3595
         2 003071   003111 710000 2                  TRA     s:3604

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:174  
     1169     3594    3      WHENALTRETURN DO;

     1170     3595    3         IF XSA_PARAM.ERR.CODE = %E$DI THEN

   3595  2 003072   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003073   000001 236100                    LDQ     1,,PR0
         2 003074   377770 376007                    ANQ     131064,DL
         2 003075   000110 116007                    CMPQ    72,DL
         2 003076   003107 601000 2                  TNZ     s:3601

     1171     3596    4         DO;  /* Fake it */

     1172     3597    4            XSA_PARAM.ERR = '0'B;

   3597  2 003077   000001 450100                    STZ     1,,PR0

     1173     3598    4            BBUF$->FULL_GRAN.NOT_FIRST_WORD = '0'B; /* just in case */

   3598  2 003100   200005 471500                    LDP1    BBUF$,,AUTO
         2 003101   000100 100400                    MLR     fill='000'O
         2 003102   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 003103   100001 007774                    ADSC9   1,,PR1                   cn=0,n=4092

     1174     3599    4            FM$GRAN.NAVX = %GRANULE_SIZE;

   3599  2 003104   002000 220003                    LDX0    1024,DU
         2 003105   100001 740100                    STX0    1,,PR1

     1175     3600    4            END; /* Fake it */

   3600  2 003106   003111 710000 2                  TRA     s:3604

     1176     3601    3         ELSE ALTRETURN;

   3601  2 003107   200240 221300                    LDX1  ! INDEXED_KEY_OFFSET+1,,AUTO
         2 003110   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:175  
     1177     3602    3         END;
     1178     3603
     1179     3604    2      XSA_PARAM.CRECX = 2;

   3604  2 003111   000002 235007                    LDA     2,DL
         2 003112   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003113   000007 755100                    STA     7,,PR0

     1180     3605    2      XSA_PARAM.LCRECX = FM$GRAN.NAVX + FM$GRAN.AVAIL;

   3605  2 003114   200005 471500                    LDP1    BBUF$,,AUTO
         2 003115   100001 236100                    LDQ     1,,PR1
         2 003116   001777 376007                    ANQ     1023,DL
         2 003117   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 003120   100001 236100                    LDQ     1,,PR1
         2 003121   000022 772000                    QRL     18
         2 003122   200252 036100                    ADLQ    FOUND_GRAN+4,,AUTO
         2 003123   000010 756100                    STQ     8,,PR0

     1181     3606    2      CRECX$ = PINCRW( BBUF$, 2 );

   3606  2 003124   200005 236100                    LDQ     BBUF$,,AUTO
         2 003125   000002 036003                    ADLQ    2,DU
         2 003126   200006 756100                    STQ     CRECX$,,AUTO

     1182     3607    2      RETURN;

   3607  2 003127   200240 221300                    LDX1  ! INDEXED_KEY_OFFSET+1,,AUTO
         2 003130   000001 702211                    TSX2  ! 1,X1

     1183     3608
     1184     3609    2   END XSA_GET_NEXT_REL_GRAN;
     1185     3610        /********************************************************************/
     1186     3611        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:176  
     1187     3612        /********************************************************************/
     1188     3613    1   XSA_CONSEC_READ: PROC ALTRET;

   3613  2 003131   200232 741300       XSA_CONSEC_* STX1  ! FIRST_SEG+1,,AUTO

     1189     3614        /*F*  NAME: XSA_CONSEC_READ
     1190     3615              PURPOSE: FF reads the next record from an ORG=CONSEC file.
     1191     3616         ***/
     1192     3617
     1193     3618        /********************/
     1194     3619
     1195     3620         /***
     1196     3621          *** Position to the beginning of the next record.
     1197     3622          ***/
     1198     3623
     1199     3624    2      BBUF$ = PINCRW( XSA_PARAM.BBUF_.BUF$, XSA_PARAM.GRANX );

   3624  2 003132   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003133   000011 236100                    LDQ     9,,PR0
         2 003134   000005 471500                    LDP1    5,,PR0
         2 003135   100000 633506                    EPPR3   0,QL,PR1
         2 003136   200005 453500                    STP3    BBUF$,,AUTO

     1200     3625    2      CALL XSA_POS_NEXT_CONSEC_REC ALTRET( EOF_EXPECTED );

   3625  2 003137   003302 701000 2                  TSX1    XSA_POS_NEXT_CONSEC_REC
         2 003140   003300 702000 2                  TSX2    EOF_EXPECTED

     1201     3626    2      XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1;

   3626  2 003141   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003142   000006 054100                    AOS     6,,PR0

     1202     3627    2      SKIPPED = SKIPPED + 1;

   3627  2 003143   200017 054100                    AOS     SKIPPED,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:177  
     1203     3628
     1204     3629         /***
     1205     3630          *** Skips records if specified.
     1206     3631          ***/
     1207     3632
     1208     3633    3      DO WHILE( TOSKIP > SKIPPED );

   3633  2 003144   200021 236100                    LDQ     TOSKIP,,AUTO
         2 003145   200017 116100                    CMPQ    SKIPPED,,AUTO
         2 003146   003157 604400 2                  TMOZ    s:3644

     1209     3634    3         CALL XSA_POS_NEXT_CONSEC_REC ALTRET( EOF_IN_RECORD );

   3634  2 003147   003302 701000 2                  TSX1    XSA_POS_NEXT_CONSEC_REC
         2 003150   003265 702000 2                  TSX2    EOF_IN_RECORD

     1210     3635    3         XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1;

   3635  2 003151   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003152   000006 054100                    AOS     6,,PR0

     1211     3636    3         SKIPPED = SKIPPED + 1;

   3636  2 003153   200017 054100                    AOS     SKIPPED,,AUTO

     1212     3637    3         END;

   3637  2 003154   200021 236100                    LDQ     TOSKIP,,AUTO
         2 003155   200017 116100                    CMPQ    SKIPPED,,AUTO
         2 003156   003147 605400 2                  TPNZ    s:3634

     1213     3638
     1214     3639         /***
     1215     3640          *** We are now positioned to the control word of first segment of
     1216     3641          *** the next record.
     1217     3642          ***/
     1218     3643
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:178  
     1219     3644    2      NUBX = 0;                            /* Nothing returned yet     */

   3644  2 003157   200013 450100                    STZ     NUBX,,AUTO

     1220     3645    2      XSA_PARAM.DVBYTE = FM$CON.CTL;       /* Return DVBYTE            */

   3645  2 003160   200006 471500                    LDP1    CRECX$,,AUTO
         2 003161   100000 236100                    LDQ     0,,PR1
         2 003162   000003 736000                    QLS     3
         2 003163   000014 676100                    ERQ     12,,PR0
         2 003164   377000 376003                    ANQ     130560,DU
         2 003165   000014 656100                    ERSQ    12,,PR0

     1221     3646    2      XSA_PARAM.EOMCHAR# = %EOM_EOR#;

   3646  2 003166   501000 236003                    LDQ     -97792,DU
         2 003167   000015 552140                    STBQ    13,'40'O,PR0

     1222     3647    2      IF NOT PRECORD

   3647  2 003170   200014 234100                    SZN     PRECORD,,AUTO
         2 003171   003206 604000 2                  TMI     s:3656

     1223     3648    3      THEN DO;

     1224     3649    3         IF READ_FPTV.KEYR

   3649  2 003172   200024 473500                    LDP3    VAREA$,,AUTO
         2 003173   300000 236100                    LDQ     0,,PR3
         2 003174   100000 316007                    CANQ    32768,DL
         2 003175   003221 600000 2                  TZE     s:3668

     1225     3650    4         THEN DO;                         /* Return "key"             */

     1226     3651    4            IF READ_FPT.KEY_.KEY$ ~= ADDR(NIL)

   3651  2 003176   200011 474500                    LDP4    FPT$,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:179  
         2 003177   400003 236100                    LDQ     3,,PR4
         2 003200   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 003201   003221 600000 2                  TZE     s:3668

     1227     3652    4            THEN READ_FPT.KEY_.KEY$->BASED_WORD = XSA_PARAM.CRECNO;

   3652  2 003202   400003 475500                    LDP5    3,,PR4
         2 003203   000006 235100                    LDA     6,,PR0
         2 003204   500000 755100                    STA     0,,PR5

     1228     3653    4            END;

     1229     3654    3         END;

   3654  2 003205   003221 710000 2                  TRA     s:3668

     1230     3655    3      ELSE DO;

     1231     3656    3         IF PRECORD_FPTV.KEYR

   3656  2 003206   200024 473500                    LDP3    VAREA$,,AUTO
         2 003207   300000 236100                    LDQ     0,,PR3
         2 003210   200000 316007                    CANQ    65536,DL
         2 003211   003221 600000 2                  TZE     s:3668

     1232     3657    4         THEN DO;

     1233     3658    4            IF PRECORD_FPT.KEY_.KEY$ ~= ADDR(NIL)

   3658  2 003212   200011 474500                    LDP4    FPT$,,AUTO
         2 003213   400003 236100                    LDQ     3,,PR4
         2 003214   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 003215   003221 600000 2                  TZE     s:3668

     1234     3659    4            THEN PRECORD_FPT.KEY_.KEY$->BASED_WORD = XSA_PARAM.CRECNO;

   3659  2 003216   400003 475500                    LDP5    3,,PR4
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:180  
         2 003217   000006 235100                    LDA     6,,PR0
         2 003220   500000 755100                    STA     0,,PR5

     1235     3660    4            END;

     1236     3661    3         END;

     1237     3662
     1238     3663         /***
     1239     3664          *** Keep appending record segments while a next segment exists and
     1240     3665          *** the beginning of the next record is not encountered.
     1241     3666          ***/
     1242     3667
     1243     3668    2      IF NOT PRECORD

   3668  2 003221   200014 234100                    SZN     PRECORD,,AUTO
         2 003222   003256 604000 2                  TMI     s:3688

     1244     3669    3      THEN DO;                            /* Read record              */

     1245     3670    4         DO WHILE( FM$CON.C ~= 0 AND NOT XSA_PARAM.RPOS );

   3670  2 003223   003247 710000 2                  TRA     s:3681

     1246     3671    4            CALL XSA_TRANSFER_CONSEC_SEG;  /* Append next segment      */

   3671  2 003224   003373 701000 2                  TSX1    XSA_TRANSFER_CONSEC_SEG
         2 003225   000000 011000                    NOP     0

     1247     3672    5            CALL XSA_CONSEC_SEG WHENALTRETURN DO;

   3672  2 003226   003335 701000 2                  TSX1    XSA_CONSEC_SEG
         2 003227   003231 702000 2                  TSX2    s:3673
         2 003230   003240 710000 2                  TRA     s:3677

     1248     3673    5               IF XSA_PARAM.ERR.CODE = %E$EOF THEN

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:181  
   3673  2 003231   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003232   000001 236100                    LDQ     1,,PR0
         2 003233   377770 376007                    ANQ     131064,DL
         2 003234   000060 116007                    CMPQ    48,DL
         2 003235   003237 601000 2                  TNZ     s:3675

     1249     3674    5                  XSA_PARAM.ERR='0'B; /* Give him what we have so far. */

   3674  2 003236   000001 450100                    STZ     1,,PR0

     1250     3675    5               GOTO EOF_IN_RECORD;

   3675  2 003237   003265 710000 2                  TRA     EOF_IN_RECORD

     1251     3676    5               END;
     1252     3677    4            IF FM$CON.FAK ~= 0

   3677  2 003240   200006 470500                    LDP0    CRECX$,,AUTO
         2 003241   000000 236100                    LDQ     0,,PR0
         2 003242   400000 316003                    CANQ    -131072,DU
         2 003243   003247 600000 2                  TZE     s:3681

     1253     3678    5            THEN DO;                 /* Hit beginning of next record  */

     1254     3679    5               XSA_PARAM.RPOS = %YES#;     /* Remember position        */

   3679  2 003244   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 003245   400000 236003                    LDQ     -131072,DU
         2 003246   100014 256100                    ORSQ    12,,PR1

     1255     3680    5               END;

     1256     3681    4            END;

   3681  2 003247   200006 470500                    LDP0    CRECX$,,AUTO
         2 003250   000000 236100                    LDQ     0,,PR0
         2 003251   200000 316003                    CANQ    65536,DU
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:182  
         2 003252   003256 600000 2                  TZE     s:3688
         2 003253   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 003254   100014 234100                    SZN     12,,PR1
         2 003255   003224 605000 2                  TPL     s:3671

     1257     3682    3         END;

     1258     3683
     1259     3684         /***
     1260     3685          *** Append remaining segment.
     1261     3686          ***/
     1262     3687
     1263     3688    2      IF NOT XSA_PARAM.RPOS AND NOT PRECORD

   3688  2 003256   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003257   000014 234100                    SZN     12,,PR0
         2 003260   003265 604000 2                  TMI     EOF_IN_RECORD
         2 003261   200014 234100                    SZN     PRECORD,,AUTO
         2 003262   003265 604000 2                  TMI     EOF_IN_RECORD

     1264     3689    3      THEN DO;

     1265     3690    3         CALL XSA_TRANSFER_CONSEC_SEG;

   3690  2 003263   003373 701000 2                  TSX1    XSA_TRANSFER_CONSEC_SEG
         2 003264   000000 011000                    NOP     0

     1266     3691    3         END;

   3688  2 003265                       EOF_IN_RECO* null
     1267     3692
     1268     3693    2   EOF_IN_RECORD: ;
     1269     3694    2      IF PRECORD

   3694  2 003265   200014 234100                    SZN     PRECORD,,AUTO
         2 003266   003273 605000 2                  TPL     s:3696

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:183  
     1270     3695    2      THEN XSA_PARAM.ARS# = SKIPPED;

   3695  2 003267   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003270   200017 235100                    LDA     SKIPPED,,AUTO
         2 003271   000000 755100                    STA     0,,PR0
         2 003272   003276 710000 2                  TRA     s:3697

     1271     3696    2      ELSE XSA_PARAM.ARS# = NUBX;

   3696  2 003273   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003274   200013 235100                    LDA     NUBX,,AUTO
         2 003275   000000 755100                    STA     0,,PR0

     1272     3697    2      RETURN;

   3697  2 003276   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 003277   000001 702211                    TSX2  ! 1,X1

   3694  2 003300                       EOF_EXPECTED null
     1273     3698
     1274     3699    2   EOF_EXPECTED: ;
     1275     3700    2      ALTRETURN;

   3700  2 003300   200232 221300                    LDX1  ! FIRST_SEG+1,,AUTO
         2 003301   000000 702211                    TSX2  ! 0,X1

     1276     3701
     1277     3702        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:184  
     1278     3703        /******************************/
     1279     3704
     1280     3705    2   XSA_POS_NEXT_CONSEC_REC: PROC ALTRET;

   3705  2 003302   200234 741300       XSA_POS_NEX* STX1  ! COUNT_ACTIVE_REC,,AUTO

     1281     3706
     1282     3707    3      IF XSA_PARAM.RPOS

   3707  2 003303   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003304   000014 234100                    SZN     12,,PR0
         2 003305   003315 605000 2                  TPL     s:3713

     1283     3708    4      THEN DO;        /* Already positioned to record (control word)  */

     1284     3709    4         XSA_PARAM.RPOS = %NO#;

   3709  2 003306   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 003307   000014 356100                    ANSQ    12,,PR0

     1285     3710    4         CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX );

   3710  2 003310   000007 236100                    LDQ     7,,PR0
         2 003311   000022 736000                    QLS     18
         2 003312   200005 036100                    ADLQ    BBUF$,,AUTO
         2 003313   200006 756100                    STQ     CRECX$,,AUTO

     1286     3711    4         END;

   3711  2 003314   003317 710000 2                  TRA     s:3716

     1287     3712    4      ELSE DO;                            /* Position to record       */

     1288     3713    4         CALL XSA_CONSEC_SEG ALTRET( JUSTALT );

   3713  2 003315   003335 701000 2                  TSX1    XSA_CONSEC_SEG
         2 003316   003333 702000 2                  TSX2    JUSTALT
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:185  

     1289     3714    4         END;

     1290     3715
     1291     3716    4      DO WHILE( FM$CON.FAK = 0 );     /* Find beginning of next record */

   3716  2 003317   200006 470500                    LDP0    CRECX$,,AUTO
         2 003320   000000 236100                    LDQ     0,,PR0
         2 003321   400000 316003                    CANQ    -131072,DU
         2 003322   003331 601000 2                  TNZ     s:3719

     1292     3717    4         CALL XSA_CONSEC_SEG ALTRET( JUSTALT );

   3717  2 003323   003335 701000 2                  TSX1    XSA_CONSEC_SEG
         2 003324   003333 702000 2                  TSX2    JUSTALT

     1293     3718    4         END;

   3718  2 003325   200006 470500                    LDP0    CRECX$,,AUTO
         2 003326   000000 236100                    LDQ     0,,PR0
         2 003327   400000 316003                    CANQ    -131072,DU
         2 003330   003323 600000 2                  TZE     s:3717

     1294     3719    3      RETURN;

   3719  2 003331   200234 221300                    LDX1  ! COUNT_ACTIVE_REC,,AUTO
         2 003332   000001 702211                    TSX2  ! 1,X1

   3717  2 003333                       JUSTALT      null
     1295     3720
     1296     3721    3   JUSTALT: ;
     1297     3722    3      ALTRETURN;

   3722  2 003333   200234 221300                    LDX1  ! COUNT_ACTIVE_REC,,AUTO
         2 003334   000000 702211                    TSX2  ! 0,X1

     1298     3723
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:186  
     1299     3724    3   END XSA_POS_NEXT_CONSEC_REC;
     1300     3725
     1301     3726    2   END XSA_CONSEC_READ;
     1302     3727        /********************************************************************/
     1303     3728        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:187  
     1304     3729        /********************************************************************/
     1305     3730    1   XSA_CONSEC_SEG: PROC ALTRET;

   3730  2 003335   200236 741300       XSA_CONSEC_* STX1  ! PAST_MISEGX,,AUTO

     1306     3731        /*F*  NAME: XSA_CONSEC_SEG
     1307     3732              PURPOSE: Position to the next segment of a CONSEC file.
     1308     3733         ***/
     1309     3734
     1310     3735        /********************/
     1311     3736
     1312     3737    2      XSA_PARAM.CRECX = XSA_PARAM.CRECX - 1; /* Next control word      */

   3737  2 003336   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003337   000001 336007                    LCQ     1,DL
         2 003340   000007 056100                    ASQ     7,,PR0

     1313     3738
     1314     3739    3      DO WHILE (XSA_PARAM.CRECX < XSA_PARAM.LCRECX);

   3739  2 003341   000007 236100                    LDQ     7,,PR0
         2 003342   000010 116100                    CMPQ    8,,PR0
         2 003343   003363 605000 2                  TPL     s:3745

     1315     3740    3         CALL XSA_GET_NEXT_GRAN ALTRET( JUSTALT );

   3740  2 003344   003432 701000 2                  TSX1    XSA_GET_NEXT_GRAN
         2 003345   003371 702000 2                  TSX2    JUSTALT

     1316     3741    3         XSA_PARAM.CRECX = %(GRANULE_SIZE-1); /* Index of first record control word */

   3741  2 003346   001777 235007                    LDA     1023,DL
         2 003347   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003350   000007 755100                    STA     7,,PR0

     1317     3742    3         XSA_PARAM.LCRECX = FM$GRAN.NAVX + FM$GRAN.AVAIL;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:188  
   3742  2 003351   200005 471500                    LDP1    BBUF$,,AUTO
         2 003352   100001 236100                    LDQ     1,,PR1
         2 003353   001777 376007                    ANQ     1023,DL
         2 003354   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 003355   100001 236100                    LDQ     1,,PR1
         2 003356   000022 772000                    QRL     18
         2 003357   200252 036100                    ADLQ    FOUND_GRAN+4,,AUTO
         2 003360   000010 756100                    STQ     8,,PR0

     1318     3743    3         END;

   3743  2 003361   000007 116100                    CMPQ    7,,PR0
         2 003362   003344 605400 2                  TPNZ    s:3740

     1319     3744
     1320     3745    2      CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX );

   3745  2 003363   000007 236100                    LDQ     7,,PR0
         2 003364   000022 736000                    QLS     18
         2 003365   200005 036100                    ADLQ    BBUF$,,AUTO
         2 003366   200006 756100                    STQ     CRECX$,,AUTO

     1321     3746    2      RETURN;

   3746  2 003367   200236 221300                    LDX1  ! PAST_MISEGX,,AUTO
         2 003370   000001 702211                    TSX2  ! 1,X1

   3745  2 003371                       JUSTALT      null
     1322     3747
     1323     3748    2   JUSTALT: ;
     1324     3749    2      ALTRETURN;

   3749  2 003371   200236 221300                    LDX1  ! PAST_MISEGX,,AUTO
         2 003372   000000 702211                    TSX2  ! 0,X1

     1325     3750
     1326     3751    2   END XSA_CONSEC_SEG;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:189  
     1327     3752        /********************************************************************/
     1328     3753        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:190  
     1329     3754        /********************************************************************/
     1330     3755    1   XSA_TRANSFER_CONSEC_SEG: PROC;

   3755  2 003373   200234 741300       XSA_TRANSFE* STX1  ! COUNT_ACTIVE_REC,,AUTO

     1331     3756        /*F*  NAME: XSA_TRANSFER_CONSEC_SEG
     1332     3757              PURPOSE: Append the current segment to the user's buffer.
     1333     3758         ***/
     1334     3759
     1335     3760        /********************/
     1336     3761
     1337     3762    2      N = FM$CON.GACTB;                    /* Get # bytes in segment   */

   3762  2 003374   200006 470500                    LDP0    CRECX$,,AUTO
         2 003375   000000 236100                    LDQ     0,,PR0
         2 003376   007777 376007                    ANQ     4095,DL
         2 003377   200012 756100                    STQ     N,,AUTO

     1338     3763
     1339     3764    2      IF N > UBYTES

   3764  2 003400   200023 116100                    CMPQ    UBYTES,,AUTO
         2 003401   003407 604400 2                  TMOZ    s:3770

     1340     3765    3      THEN DO;                            /* Lost data                */

     1341     3766    3         XSA_PARAM.ERR = E_LD;

   3766  2 003402   000237 236000 1                  LDQ     E_LD
         2 003403   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 003404   100001 756100                    STQ     1,,PR1

     1342     3767    3         N = UBYTES;

   3767  2 003405   200023 235100                    LDA     UBYTES,,AUTO
         2 003406   200012 755100                    STA     N,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:191  
     1343     3768    3         END;

     1344     3769
     1345     3770    2      PINCRC( UB$, NUBX )->NCHARS = PINCRW( BBUF$, FM$CON.GX )->NCHARS;

   3770  2 003407   000000 236100                    LDQ     0,,PR0
         2 003410   000014 772000                    QRL     12
         2 003411   001777 376007                    ANQ     1023,DL
         2 003412   000002 736000                    QLS     2
         2 003413   200005 471500                    LDP1    BBUF$,,AUTO
         2 003414   200012 720100                    LXL0    N,,AUTO
         2 003415   200022 473500                    LDP3    UB$,,AUTO
         2 003416   200013 235100                    LDA     NUBX,,AUTO
         2 003417   040145 100546                    MLR     fill='040'O
         2 003420   100000 000010                    ADSC9   0,Q,PR1                  cn=0,n=*X0
         2 003421   300000 000010                    ADSC9   0,A,PR3                  cn=0,n=*X0

     1346     3771    2      UBYTES = UBYTES - N;

   3771  2 003422   200023 236100                    LDQ     UBYTES,,AUTO
         2 003423   200012 136100                    SBLQ    N,,AUTO
         2 003424   200023 756100                    STQ     UBYTES,,AUTO

     1347     3772    2      NUBX = NUBX + N;           /* Ix of next free byte (and ARS)     */

   3772  2 003425   200013 236100                    LDQ     NUBX,,AUTO
         2 003426   200012 036100                    ADLQ    N,,AUTO
         2 003427   200013 756100                    STQ     NUBX,,AUTO

     1348     3773    2      RETURN;

   3773  2 003430   200234 221300                    LDX1  ! COUNT_ACTIVE_REC,,AUTO
         2 003431   000001 702211                    TSX2  ! 1,X1

     1349     3774
     1350     3775    2   END XSA_TRANSFER_CONSEC_SEG;
     1351     3776        /********************************************************************/
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:192  
     1352     3777        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:193  
     1353     3778        /********************************************************************/
     1354     3779    1   XSA_GET_NEXT_GRAN: PROC ALTRET;

   3779  2 003432   200242 741300       XSA_GET_NEX* STX1  ! GRANX,,AUTO

     1355     3780        /*F*  NAME: XSA_GET_NEXT_GRAN
     1356     3781              PURPOSE: Get next granule of input file.
     1357     3782         ***/
     1358     3783
     1359     3784        /********************/
     1360     3785
     1361     3786         /***
     1362     3787          *** Check if CONSEC file eof.
     1363     3788          ***/
     1364     3789
     1365     3790    2      IF XSA_PARAM.ORG = %CONSEC# AND NOT FM$GRAN.ENDLVL

   3790  2 003433   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003434   000014 236100                    LDQ     12,,PR0
         2 003435   000777 376003                    ANQ     511,DU
         2 003436   000001 116003                    CMPQ    1,DU
         2 003437   003450 601000 2                  TNZ     s:3800
         2 003440   200005 471500                    LDP1    BBUF$,,AUTO
         2 003441   100002 236100                    LDQ     2,,PR1
         2 003442   400000 316007                    CANQ    -131072,DL
         2 003443   003450 601000 2                  TNZ     s:3800

     1366     3791    3      THEN DO;                       /* That *was* the last granule   */

     1367     3792    3         CALL XSA_READY_WRITE;

   3792  2 003444   003661 701000 2                  TSX1    XSA_READY_WRITE
         2 003445   000000 011000                    NOP     0

     1368     3793    3         ALTRETURN;

   3793  2 003446   200242 221300                    LDX1  ! GRANX,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:194  
         2 003447   000000 702211                    TSX2  ! 0,X1

     1369     3794    3         END;
     1370     3795
     1371     3796         /***
     1372     3797          *** Get the next granule.
     1373     3798          ***/
     1374     3799
     1375     3800    2      XSA_PARAM.GRANULE = XSA_PARAM.GRANULE + 1; /* On to next granule */

   3800  2 003450   000013 054100                    AOS     11,,PR0

     1376     3801
     1377     3802    2      IF XSA_PARAM.GRANX < XSA_PARAM.LGRANX

   3802  2 003451   000011 236100                    LDQ     9,,PR0
         2 003452   000012 116100                    CMPQ    10,,PR0
         2 003453   003462 605000 2                  TPL     s:3808

     1378     3803    3      THEN DO;                  /* Next gran has already been read    */

     1379     3804    3         XSA_PARAM.GRANX = XSA_PARAM.GRANX + %GRANULE_SIZE;

   3804  2 003454   002000 236007                    LDQ     1024,DL
         2 003455   000011 056100                    ASQ     9,,PR0

     1380     3805    3         BBUF$ = PINCRW( BBUF$, %GRANULE_SIZE );

   3805  2 003456   200005 236100                    LDQ     BBUF$,,AUTO
         2 003457   002000 036003                    ADLQ    1024,DU
         2 003460   200005 756100                    STQ     BBUF$,,AUTO

     1381     3806    3         END;

   3806  2 003461   003530 710000 2                  TRA     s:3824

     1382     3807    3      ELSE DO;                       /* Need to read next granule     */
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:195  

     1383     3808    3         READ_GRANULES = READ_GRANULES_CONSTANT;

   3808  2 003462   000100 100400                    MLR     fill='000'O
         2 003463   000040 000070 1                  ADSC9   READ_GRANULES_CONSTANT   cn=0,n=56
         2 003464   200176 000070                    ADSC9   READ_GRANULES,,AUTO      cn=0,n=56

     1384     3809    3         READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);

   3809  2 003465   000014 235000 3                  LDA     12
         2 003466   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 003467   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 003470   000206 036003                    ADLQ    134,DU
         2 003471   200176 757100                    STAQ    READ_GRANULES,,AUTO

     1385     3810    3         READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);

   3810  2 003472   777640 235007                    LDA     -96,DL
         2 003473   200004 236100                    LDQ     @XSA_PARAM,,AUTO
         2 003474   000013 036003                    ADLQ    11,DU
         2 003475   200200 757100                    STAQ    READ_GRANULES+2,,AUTO

     1386     3811    3         READ_GRANULES.BUF_ = XSA_PARAM.BBUF_;

   3811  2 003476   000004 237100                    LDAQ    4,,PR0
         2 003477   200202 757100                    STAQ    READ_GRANULES+4,,AUTO

     1387     3812    3         READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;

   3812  2 003500   000014 720100                    LXL0    12,,PR0
         2 003501   200206 740100                    STX0    READ_GRANULES+8,,AUTO

     1388     3813    3         BBUF$ = XSA_PARAM.BBUF_.BUF$;

   3813  2 003502   000005 236100                    LDQ     5,,PR0
         2 003503   200005 756100                    STQ     BBUF$,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:196  
     1389     3814    3         CALL M$READ( READ_GRANULES ) ALTRET( EOF_EXPECTED );

   3814  2 003504   200176 630500                    EPPR0   READ_GRANULES,,AUTO
         2 003505   440000 713400                    CLIMB   alt,read
         2 003506   401400 401760                    pmme    nvectors=4
         2 003507   003522 702000 2                  TSX2    EOF_EXPECTED

     1390     3815    3         XSA_PARAM.LGRANX = DCBADDR(XSA_PARAM.DCB#)->F$DCB.ARS# / %BYTES_PER_WORD - %
              3815                  GRANULE_SIZE;

   3815  2 003510   000010 470400 3                  LDP0    8
         2 003511   000000 471500                    LDP1    0,,PR0
         2 003512   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 003513   300014 720100                    LXL0    12,,PR3
         2 003514   100000 474510                    LDP4    0,X0,PR1
         2 003515   400000 236100                    LDQ     0,,PR4
         2 003516   000004 506007                    DIV     4,DL
         2 003517   002000 136007                    SBLQ    1024,DL
         2 003520   300012 756100                    STQ     10,,PR3

     1391     3816    4         DO WHILE('0'B);

   3816  2 003521   003524 710000 2                  TRA     s:3820

   3815  2 003522                       EOF_EXPECTED null
     1392     3817    4   EOF_EXPECTED: ;
     1393     3818    4            CALL XSA_CHK_ERROR ALTRET( JUSTALT );

   3818  2 003522   003542 701000 2                  TSX1    XSA_CHK_ERROR
         2 003523   003540 702000 2                  TSX2    JUSTALT

     1394     3819    4            END;

     1395     3820    3         XSA_PARAM.GRANX = 0;         /* Back to first gran of buffer  */

   3820  2 003524   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003525   000011 450100                    STZ     9,,PR0
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:197  

     1396     3821    3         BBUF$ = XSA_PARAM.BBUF_.BUF$;

   3821  2 003526   000005 236100                    LDQ     5,,PR0
         2 003527   200005 756100                    STQ     BBUF$,,AUTO

     1397     3822    3         END;

     1398     3823
     1399     3824    2      IF BBUF$->BASED_WORD ~= -1 THEN

   3824  2 003530   200005 471500                    LDP1    BBUF$,,AUTO
         2 003531   100000 235100                    LDA     0,,PR1
         2 003532   000027 115000 xsym               CMPA    B_VECTNIL+23
         2 003533   003536 600000 2                  TZE     s:3827

     1400     3825    2         RETURN;

   3825  2 003534   200242 221300                    LDX1  ! GRANX,,AUTO
         2 003535   000001 702211                    TSX2  ! 1,X1

     1401     3826    3      ELSE DO;

     1402     3827    3         XSA_PARAM.ERR = E_DI;

   3827  2 003536   000242 236000 1                  LDQ     E_DI
         2 003537   000001 756100                    STQ     1,,PR0

   3827  2 003540                       JUSTALT      null
     1403     3828    3   JUSTALT:;
     1404     3829    3         ALTRETURN;

   3829  2 003540   200242 221300                    LDX1  ! GRANX,,AUTO
         2 003541   000000 702211                    TSX2  ! 0,X1

     1405     3830    3         END;
     1406     3831
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:198  
     1407     3832        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:199  
     1408     3833        /******************************/
     1409     3834    2   XSA_CHK_ERROR: PROC ALTRET;

   3834  2 003542   200244 741300       XSA_CHK_ERR* STX1  ! GRANX+2,,AUTO

     1410     3835        /*F*  NAME: XSA_CHK_ERROR
     1411     3836              PURPOSE: Handle error reading granule.
     1412     3837              DESCRIPTION:
     1413     3838
     1414     3839              Check the error code. If it's end-of-file, set the XSA_PARAM
     1415     3840              EOF stuff and get out. Otherwise, the only errors XSA wants to
     1416     3841              consider handling are E$DI and E$RANBADBLK.
     1417     3842
     1418     3843              E$RANBADBLK is the same as EOF here; i.e., we tried to read a
     1419     3844              granule with a granule number for the key which was beyond the
     1420     3845              end of the file. In this case, call XSA_READY_WRITE to set the
     1421     3846              XSA_PARAM EOF stuff and altret.
     1422     3847
     1423     3848              E$DI is a bit different. If the file is a RELATIVE file, all the
     1424     3849              UGRANS granules may not have been actually initialized and
     1425     3850              written by regular file management. So, E$DI errors must be
     1426     3851              anticipated on such granules. In this case, just pretend that
     1427     3852              all grans read into the BBUF area are OK. Otherwise, we may end
     1428     3853              up doing more I/O's than necessary if XSA_PARAM.BBUF_ frames
     1429     3854              more than one gran. If the file is not RELATIVE, E$DI is a real
     1430     3855              error. However, if more than one granule was read into BBUF, one
     1431     3856              or more of them may be good. Search backwards through BBUF for
     1432     3857              the last good one. If a good one isn't found, altret. Otherwise,
     1433     3858              just return and let XSA_GET_NEXT_GRAN decide whether to altret.
     1434     3859
     1435     3860              If the error is anything else, something unexpected and probably
     1436     3861              ugly happened. Just fill in the error received and altret.
     1437     3862         ***/
     1438     3863
     1439     3864         /***
     1440     3865          *** Locals:
     1441     3866          ***/
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:200  
     1442     3867
     1443     3868    3   DCL ACTUAL_LGRANX SBIN AUTO;
     1444     3869    3   DCL FOUND_GRAN BIT(1) AUTO;
     1445     3870
     1446     3871        /********************/
     1447     3872
     1448     3873    3      N = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;

   3873  2 003543   000000 470400 xsym               LDP0    B$TCB$
         2 003544   000000 471500                    LDP1    0,,PR0
         2 003545   100102 236100                    LDQ     66,,PR1
         2 003546   000003 772000                    QRL     3
         2 003547   037777 376007                    ANQ     16383,DL
         2 003550   200012 756100                    STQ     N,,AUTO

     1449     3874
     1450     3875    3      IF N = %E$EOF

   3875  2 003551   000006 116007                    CMPQ    6,DL
         2 003552   003563 601000 2                  TNZ     s:3882

     1451     3876    3      THEN IF XSA_PARAM.ERR

   3876  2 003553   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 003554   100001 235100                    LDA     1,,PR1
         2 003555   003657 601000 2                  TNZ     s:3905

     1452     3877    3         THEN ;                      /* Already have error to report  */
     1453     3878    4         ELSE DO;                         /* Standard EOF             */

     1454     3879    4            XSA_PARAM.ERR = E_EOF;

   3879  2 003556   000236 236000 1                  LDQ     E_EOF
         2 003557   100001 756100                    STQ     1,,PR1

     1455     3880    4            XSA_PARAM.EOF = %YES#;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:201  
   3880  2 003560   000040 236003                    LDQ     32,DU
         2 003561   100015 256100                    ORSQ    13,,PR1

     1456     3881    4            END;

   3881  2 003562   003657 710000 2                  TRA     s:3905

     1457     3882    3      ELSE IF N ~= %E$RANBADBLK AND N ~= %E$DI

   3882  2 003563   000107 116007                    CMPQ    71,DL
         2 003564   003574 600000 2                  TZE     s:3887
         2 003565   000011 116007                    CMPQ    9,DL
         2 003566   003574 600000 2                  TZE     s:3887

     1458     3883    4         THEN DO;               /* Not an error we care to handle     */

     1459     3884    4            XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   3884  2 003567   000000 471500                    LDP1    0,,PR0
         2 003570   100102 236100                    LDQ     66,,PR1
         2 003571   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 003572   300001 756100                    STQ     1,,PR3

     1460     3885    4            END;

   3885  2 003573   003657 710000 2                  TRA     s:3905

     1461     3886    4         ELSE DO;

     1462     3887    4            ACTUAL_LGRANX = DCBADDR(XSA_PARAM.DCB#)->F$DCB.ARS# / %BYTES_PER_WORD - %
              3887                     GRANULE_SIZE;

   3887  2 003574   000010 471400 3                  LDP1    8
         2 003575   100000 473500                    LDP3    0,,PR1
         2 003576   200004 474500                    LDP4    @XSA_PARAM,,AUTO
         2 003577   400014 720100                    LXL0    12,,PR4
         2 003600   300000 475510                    LDP5    0,X0,PR3
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:202  
         2 003601   500000 236100                    LDQ     0,,PR5
         2 003602   000004 506007                    DIV     4,DL
         2 003603   002000 136007                    SBLQ    1024,DL
         2 003604   200245 756100                    STQ     ACTUAL_LGRANX,,AUTO

     1463     3888    4            FOUND_GRAN = %NO#;

   3888  2 003605   200246 450100                    STZ     FOUND_GRAN,,AUTO

     1464     3889    4            IF N = %E$DI AND XSA_PARAM.ORG = %RELATIVE# THEN

   3889  2 003606   200012 235100                    LDA     N,,AUTO
         2 003607   000011 115007                    CMPA    9,DL
         2 003610   003620 601000 2                  TNZ     s:3891
         2 003611   400014 236100                    LDQ     12,,PR4
         2 003612   000777 376003                    ANQ     511,DU
         2 003613   000005 116003                    CMPQ    5,DU
         2 003614   003620 601000 2                  TNZ     s:3891

     1465     3890    4               FOUND_GRAN = %YES#;

   3890  2 003615   400000 236003                    LDQ     -131072,DU
         2 003616   200246 756100                    STQ     FOUND_GRAN,,AUTO
         2 003617   003637 710000 2                  TRA     s:3896

     1466     3891    5            ELSE DO WHILE( ACTUAL_LGRANX >= 0 AND NOT FOUND_GRAN );

   3891  2 003620   003633 710000 2                  TRA     s:3895

     1467     3892    5               IF PINCRW( BBUF$, ACTUAL_LGRANX )->BASED_WORD = -1

   3892  2 003621   200005 470500                    LDP0    BBUF$,,AUTO
         2 003622   200245 720100                    LXL0    ACTUAL_LGRANX,,AUTO
         2 003623   000000 235110                    LDA     0,X0,PR0
         2 003624   000027 115000 xsym               CMPA    B_VECTNIL+23
         2 003625   003631 601000 2                  TNZ     s:3894

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:203  
     1468     3893    5               THEN ACTUAL_LGRANX = ACTUAL_LGRANX - %GRANULE_SIZE;

   3893  2 003626   002000 336007                    LCQ     1024,DL
         2 003627   200245 056100                    ASQ     ACTUAL_LGRANX,,AUTO
         2 003630   003633 710000 2                  TRA     s:3895

     1469     3894    5               ELSE FOUND_GRAN = %YES#;

   3894  2 003631   400000 236003                    LDQ     -131072,DU
         2 003632   200246 756100                    STQ     FOUND_GRAN,,AUTO

     1470     3895    5               END;

   3895  2 003633   200245 235100                    LDA     ACTUAL_LGRANX,,AUTO
         2 003634   003637 604000 2                  TMI     s:3896
         2 003635   200246 234100                    SZN     FOUND_GRAN,,AUTO
         2 003636   003621 605000 2                  TPL     s:3892

     1471     3896    4            IF FOUND_GRAN

   3896  2 003637   200246 234100                    SZN     FOUND_GRAN,,AUTO
         2 003640   003646 605000 2                  TPL     s:3901

     1472     3897    5            THEN DO;                      /* Got something            */

     1473     3898    5               XSA_PARAM.LGRANX = ACTUAL_LGRANX;

   3898  2 003641   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003642   200245 235100                    LDA     ACTUAL_LGRANX,,AUTO
         2 003643   000012 755100                    STA     10,,PR0

     1474     3899    5               RETURN;

   3899  2 003644   200244 221300                    LDX1  ! GRANX+2,,AUTO
         2 003645   000001 702211                    TSX2  ! 1,X1

     1475     3900    5               END;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:204  
     1476     3901    4            IF N = %E$DI THEN

   3901  2 003646   200012 235100                    LDA     N,,AUTO
         2 003647   000011 115007                    CMPA    9,DL
         2 003650   003655 601000 2                  TNZ     s:3903

     1477     3902    4               XSA_PARAM.ERR = E_DI;

   3902  2 003651   000242 236000 1                  LDQ     E_DI
         2 003652   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003653   000001 756100                    STQ     1,,PR0
         2 003654   003657 710000 2                  TRA     s:3905

     1478     3903    4            ELSE CALL XSA_READY_WRITE;

   3903  2 003655   003661 701000 2                  TSX1    XSA_READY_WRITE
         2 003656   000000 011000                    NOP     0

     1479     3904    4            END;

     1480     3905    3      ALTRETURN;

   3905  2 003657   200244 221300                    LDX1  ! GRANX+2,,AUTO
         2 003660   000000 702211                    TSX2  ! 0,X1

     1481     3906
     1482     3907    3   END XSA_CHK_ERROR;
     1483     3908
     1484     3909        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:205  
     1485     3910        /******************************/
     1486     3911    2   XSA_READY_WRITE: PROC;

   3911  2 003661   200250 741300       XSA_READY_W* STX1  ! FOUND_GRAN+2,,AUTO

     1487     3912        /*F*  NAME: XSA_READY_WRITE
     1488     3913              PURPOSE: Get ready to write next record after end of file on
     1489     3914                 read.
     1490     3915         ***/
     1491     3916
     1492     3917        /********************/
     1493     3918
     1494     3919    3      XSA_PARAM.ERR = E_EOF;

   3919  2 003662   000236 236000 1                  LDQ     E_EOF
         2 003663   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003664   000001 756100                    STQ     1,,PR0

     1495     3920    3      XSA_PARAM.EOF = %YES#;

   3920  2 003665   000040 236003                    LDQ     32,DU
         2 003666   000015 256100                    ORSQ    13,,PR0

     1496     3921    3      RETURN;

   3921  2 003667   200250 221300                    LDX1  ! FOUND_GRAN+2,,AUTO
         2 003670   000001 702211                    TSX2  ! 1,X1

     1497     3922
     1498     3923    3   END XSA_READY_WRITE;
     1499     3924        /******************************/
     1500     3925
     1501     3926    2   END XSA_GET_NEXT_GRAN;
     1502     3927        /********************************************************************/
     1503     3928        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:206  
     1504     3929        /********************************************************************/
     1505     3930    1   XSA$WRITE: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;

   3930  2 003671   000000 700200 xent  XSA$WRITE    TSX0  ! X66_AUTO_2
         2 003672   000256 000002                    ZERO    174,2

     1506     3931        /*F*  NAME: XSA$WRITE
     1507     3932              PURPOSE: If not a fast file, divert course to ordinary service
     1508     3933                 call.  Otherwise, initialize and write next (CONSEC) record.
     1509     3934         ***/
     1510     3935
     1511     3936        /********************/
     1512     3937
     1513     3938    1      FPT$ = ADDR(FPT_OPERATION);

   3938  2 003673   200003 236100                    LDQ     @FPT_OPERATION,,AUTO
         2 003674   200011 756100                    STQ     FPT$,,AUTO

     1514     3939    1      V_ = WRITE_FPT.V_;

   3939  2 003675   200011 470500                    LDP0    FPT$,,AUTO
         2 003676   000000 237100                    LDAQ    0,,PR0
         2 003677   200025 755100                    STA     V_,,AUTO
         2 003700   200026 756100                    STQ     V_+1,,AUTO

     1515     3940    1      VAREA$ = V_.VAREA$;

   3940  2 003701   200026 236100                    LDQ     V_+1,,AUTO
         2 003702   200024 756100                    STQ     VAREA$,,AUTO

     1516     3941         /***
     1517     3942          *** If not a "fast" file, use ordinary monitor service.
     1518     3943          ***/
     1519     3944
     1520     3945    1      IF XSA_PARAM.BBUF_.BUF$ = ADDR(NIL) OR XSA_PARAM.ORG ~= %CONSEC# THEN

   3945  2 003703   200004 471500                    LDP1    @XSA_PARAM,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:207  
         2 003704   100005 236100                    LDQ     5,,PR1
         2 003705   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 003706   003713 600000 2                  TZE     s:3946
         2 003707   100014 236100                    LDQ     12,,PR1
         2 003710   000777 376003                    ANQ     511,DU
         2 003711   000001 116003                    CMPQ    1,DU
         2 003712   003723 600000 2                  TZE     s:3953

     1521     3946    2         IF XSA_PARAM.UNFAST# THEN DO;

   3946  2 003713   100015 236100                    LDQ     13,,PR1
         2 003714   000010 316003                    CANQ    8,DU
         2 003715   003721 600000 2                  TZE     s:3951

     1522     3947    2            XSA_PARAM.ERR = E_UNFAST;

   3947  2 003716   000000 236000 1                  LDQ     E_UNFAST
         2 003717   100001 756100                    STQ     1,,PR1

     1523     3948    2            ALTRETURN;

   3948  2 003720   000000 702200 xent               TSX2  ! X66_AALT

     1524     3949    2            END;
     1525     3950    1         ELSE
     1526     3951    1            CALL XSA_UNFAST ALTRET( RTN_WRT_ERROR );

   3951  2 003721   001313 701000 2                  TSX1    XSA_UNFAST
         2 003722   004026 702000 2                  TSX2    RTN_WRT_ERROR

     1527     3952
     1528     3953    1      IF XSA_PARAM.ORG = 0

   3953  2 003723   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003724   000014 236100                    LDQ     12,,PR0
         2 003725   000777 316003                    CANQ    511,DU
         2 003726   003744 601000 2                  TNZ     s:3960
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:208  

     1529     3954    2      THEN DO;                            /* use standard service     */

     1530     3955    2         CALL M$WRITE( WRITE_FPT ) ALTRET( RTN_WRT_ERROR );

   3955  2 003727   200011 470500                    LDP0    FPT$,,AUTO
         2 003730   440001 713400                    CLIMB   alt,write
         2 003731   401400 401760                    pmme    nvectors=4
         2 003732   004026 702000 2                  TSX2    RTN_WRT_ERROR

     1531     3956    2         XSA_PARAM.ARS# = DCBADDR(WRITE_FPTV.DCB#)->F$DCB.ARS#;

   3956  2 003733   000010 470400 3                  LDP0    8
         2 003734   000000 471500                    LDP1    0,,PR0
         2 003735   200024 473500                    LDP3    VAREA$,,AUTO
         2 003736   300000 220100                    LDX0    0,,PR3
         2 003737   100000 474510                    LDP4    0,X0,PR1
         2 003740   200004 475500                    LDP5    @XSA_PARAM,,AUTO
         2 003741   400000 235100                    LDA     0,,PR4
         2 003742   500000 755100                    STA     0,,PR5

     1532     3957    2         RETURN;

   3957  2 003743   000000 702200 xent               TSX2  ! X66_ARET

     1533     3958    2         END;
     1534     3959
     1535     3960    1      XSA_PARAM.ERR = '0'B;

   3960  2 003744   000001 450100                    STZ     1,,PR0

     1536     3961
     1537     3962    1      IF XSA_PARAM.EOP = %EOP_NONE

   3962  2 003745   000015 236100                    LDQ     13,,PR0
         2 003746   000700 316003                    CANQ    448,DU
         2 003747   003753 601000 2                  TNZ     s:3967
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:209  

     1538     3963    2      THEN DO;                            /* This is first write      */

     1539     3964    2         CALL XSA_READY_FIRST_WRITE;

   3964  2 003750   004034 701000 2                  TSX1    XSA_READY_FIRST_WRITE
         2 003751   000000 011000                    NOP     0

     1540     3965    2         END;

   3965  2 003752   003760 710000 2                  TRA     s:3978

     1541     3966    2      ELSE DO;

     1542     3967    2         IF NOT XSA_PARAM.EOF

   3967  2 003753   000040 316003                    CANQ    32,DU
         2 003754   003760 601000 2                  TNZ     s:3978

     1543     3968    3         THEN DO;                         /* Write not at file end    */

     1544     3969    3            XSA_PARAM.ERR = E_WRITE;

   3969  2 003755   000234 236000 1                  LDQ     E_WRITE
         2 003756   000001 756100                    STQ     1,,PR0

     1545     3970    3            ALTRETURN;

   3970  2 003757   000000 702200 xent               TSX2  ! X66_AALT

     1546     3971    3            END;
     1547     3972    2         END;
     1548     3973
     1549     3974         /***
     1550     3975          *** Must be output file.
     1551     3976          ***/
     1552     3977
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:210  
     1553     3978    1      IF XSA_PARAM.INPUT

   3978  2 003760   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 003761   000015 236100                    LDQ     13,,PR0
         2 003762   000002 316003                    CANQ    2,DU
         2 003763   003767 600000 2                  TZE     s:3989

     1554     3979    2      THEN DO;

     1555     3980    2         XSA_PARAM.ERR = E_WRITE;

   3980  2 003764   000234 236000 1                  LDQ     E_WRITE
         2 003765   000001 756100                    STQ     1,,PR0

     1556     3981    2         ALTRETURN;

   3981  2 003766   000000 702200 xent               TSX2  ! X66_AALT

     1557     3982    2         END;
     1558     3983
     1559     3984        /***
     1560     3985         *** If continuation specified, then last operation must have
     1561     3986         *** been a write.
     1562     3987         ***/
     1563     3988
     1564     3989    1      IF XSA_PARAM.CONT AND XSA_PARAM.EOP ~= %EOP_WRITE

   3989  2 003767   000020 316003                    CANQ    16,DU
         2 003770   004000 600000 2                  TZE     s:3999
         2 003771   000015 236100                    LDQ     13,,PR0
         2 003772   000700 376003                    ANQ     448,DU
         2 003773   000200 116003                    CMPQ    128,DU
         2 003774   004000 600000 2                  TZE     s:3999

     1565     3990    2      THEN DO;                            /* Continued write illegal  */

     1566     3991    2         XSA_PARAM.ERR = E_NOCONT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:211  

   3991  2 003775   000241 236000 1                  LDQ     E_NOCONT
         2 003776   000001 756100                    STQ     1,,PR0

     1567     3992    2         ALTRETURN;

   3992  2 003777   000000 702200 xent               TSX2  ! X66_AALT

     1568     3993    2         END;
     1569     3994
     1570     3995         /***
     1571     3996          *** Fast file.
     1572     3997          ***/
     1573     3998
     1574     3999    1      UBYTES = WRITE_FPT.BUF_.BOUND + 1;

   3999  2 004000   200011 471500                    LDP1    FPT$,,AUTO
         2 004001   100004 236100                    LDQ     4,,PR1
         2 004002   000020 772000                    QRL     16
         2 004003   000001 036007                    ADLQ    1,DL
         2 004004   200023 756100                    STQ     UBYTES,,AUTO

     1575     4000    1      UB$ = WRITE_FPT.BUF_.BUF$;

   4000  2 004005   100005 236100                    LDQ     5,,PR1
         2 004006   200022 756100                    STQ     UB$,,AUTO

     1576     4001    1      BBUF$ = XSA_PARAM.BBUF_.BUF$;

   4001  2 004007   000005 236100                    LDQ     5,,PR0
         2 004010   200005 756100                    STQ     BBUF$,,AUTO

     1577     4002    1      IF UB$ = ADDR(NIL)

   4002  2 004011   200022 236100                    LDQ     UB$,,AUTO
         2 004012   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 004013   004017 601000 2                  TNZ     s:4008
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:212  

     1578     4003    2      THEN DO;                            /* No buffer                */

     1579     4004    2         UB$ = ADDR(SMALL_BUFFER);

   4004  2 004014   200020 633500                    EPPR3   SMALL_BUFFER,,AUTO
         2 004015   200022 453500                    STP3    UB$,,AUTO

     1580     4005    2         UBYTES = 0;

   4005  2 004016   200023 450100                    STZ     UBYTES,,AUTO

     1581     4006    2         END;

     1582     4007
     1583     4008    1      XSA_PARAM.EOP = %EOP_WRITE;

   4008  2 004017   000015 236100                    LDQ     13,,PR0
         2 004020   000005 376000 3                  ANQ     5
         2 004021   000200 276003                    ORQ     128,DU
         2 004022   000015 756100                    STQ     13,,PR0

     1584     4009    1      CALL XSA_CONSEC_WRITE ALTRET( JUSTALT );

   4009  2 004023   004076 701000 2                  TSX1    XSA_CONSEC_WRITE
         2 004024   001312 702000 2                  TSX2    JUSTALT

     1585     4010
     1586     4011    1      RETURN;

   4011  2 004025   000000 702200 xent               TSX2  ! X66_ARET

   4008  2 004026                       RTN_WRT_ERR* null
     1587     4012
     1588     4013    1   RTN_WRT_ERROR: ;
     1589     4014    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:213  
   4014  2 004026   000000 470400 xsym               LDP0    B$TCB$
         2 004027   000000 471500                    LDP1    0,,PR0
         2 004030   100102 236100                    LDQ     66,,PR1
         2 004031   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 004032   300001 756100                    STQ     1,,PR3

     1590     4015    1      ALTRETURN;

   4015  2 004033   000000 702200 xent               TSX2  ! X66_AALT

     1591     4016
     1592     4017        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:214  
     1593     4018        /********************************************************************/
     1594     4019    1   XSA_READY_FIRST_WRITE: PROC;

   4019  2 004034   200234 741300       XSA_READY_F* STX1  ! COUNT_ACTIVE_REC,,AUTO

     1595     4020        /*F*     NAME: XSA_READY_FIRST_WRITE
     1596     4021                 PURPOSE: Initialize XSA_PARAM and buffer.
     1597     4022         ***/
     1598     4023
     1599     4024        /********************/
     1600     4025
     1601     4026    2      BBUF$ = XSA_PARAM.BBUF_.BUF$;

   4026  2 004035   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004036   000005 236100                    LDQ     5,,PR0
         2 004037   200005 756100                    STQ     BBUF$,,AUTO

     1602     4027    2      BBUF$->FULL_GRAN = '0'B;

   4027  2 004040   200005 471500                    LDP1    BBUF$,,AUTO
         2 004041   010000 220003                    LDX0    4096,DU
         2 004042   000140 100400                    MLR     fill='000'O
         2 004043   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 004044   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1603     4028    2      FM$GRAN.NAVX = 3;                    /* # word header            */

   4028  2 004045   000003 221003                    LDX1    3,DU
         2 004046   100001 741100                    STX1    1,,PR1

     1604     4029    2      XSA_PARAM.CRECX = %(GRANULE_SIZE-1); /* Last word is first control word */

   4029  2 004047   001777 235007                    LDA     1023,DL
         2 004050   000007 755100                    STA     7,,PR0

     1605     4030    2      XSA_PARAM.LCRECX = XSA_PARAM.CRECX;  /* Last doesn't exist       */

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:215  
   4030  2 004051   000010 755100                    STA     8,,PR0

     1606     4031    2      FM$GRAN.AVAIL = XSA_PARAM.CRECX - FM$GRAN.NAVX + 1;

   4031  2 004052   100001 236100                    LDQ     1,,PR1
         2 004053   000022 772000                    QRL     18
         2 004054   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 004055   000007 236100                    LDQ     7,,PR0
         2 004056   200252 136100                    SBLQ    FOUND_GRAN+4,,AUTO
         2 004057   000001 036007                    ADLQ    1,DL
         2 004060   100001 676100                    ERQ     1,,PR1
         2 004061   001777 376007                    ANQ     1023,DL
         2 004062   100001 656100                    ERSQ    1,,PR1

     1607     4032    2      XSA_PARAM.GRANULE = 0;

   4032  2 004063   000013 450100                    STZ     11,,PR0

     1608     4033    2      XSA_PARAM.FMOD = %YES#;

   4033  2 004064   000001 236003                    LDQ     1,DU
         2 004065   000015 256100                    ORSQ    13,,PR0

     1609     4034    2      XSA_PARAM.LGRANX = 0;                /* One gran at a time       */

   4034  2 004066   000012 450100                    STZ     10,,PR0

     1610     4035    2      XSA_PARAM.GRANX = 0;

   4035  2 004067   000011 450100                    STZ     9,,PR0

     1611     4036    2      XSA_PARAM.EOF = %YES#;

   4036  2 004070   000040 236003                    LDQ     32,DU
         2 004071   000015 256100                    ORSQ    13,,PR0

     1612     4037    2      XSA_PARAM.CONT = '0'B;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:216  

   4037  2 004072   000006 236000 3                  LDQ     6
         2 004073   000015 356100                    ANSQ    13,,PR0

     1613     4038    2      RETURN;

   4038  2 004074   200234 221300                    LDX1  ! COUNT_ACTIVE_REC,,AUTO
         2 004075   000001 702211                    TSX2  ! 1,X1

     1614     4039
     1615     4040    2   END XSA_READY_FIRST_WRITE;
     1616     4041        /********************************************************************/
     1617     4042        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:217  
     1618     4043        /********************************************************************/
     1619     4044    1   XSA_CONSEC_WRITE: PROC ALTRET;

   4044  2 004076   200230 741300       XSA_CONSEC_* STX1  ! WRITE_NEXT_GRANULE+12,,AUTO

     1620     4045        /*F*  NAME: XSA_CONSEC_WRITE
     1621     4046              PURPOSE: FF writes the next record to an ORG=CONSEC file.
     1622     4047         ***/
     1623     4048
     1624     4049         /***
     1625     4050          *** Locals:
     1626     4051          ***/
     1627     4052
     1628     4053    2   DCL FIRST_SEG SBIN AUTO;           /* Indicates if first segment    */
     1629     4054    2   DCL CONTINUING SBIN AUTO; /* Indicates if segment to be continued   */
     1630     4055    2   DCL NEW_GRAN BIT(1) ALIGNED;  /* Indicates starting a new granule   */
     1631     4056
     1632     4057        /********************/
     1633     4058
     1634     4059    2      IF XSA_PARAM.CONT THEN

   4059  2 004077   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004100   000015 236100                    LDQ     13,,PR0
         2 004101   000020 316003                    CANQ    16,DU
         2 004102   004105 600000 2                  TZE     s:4061

     1635     4060    2         FIRST_SEG = 0;               /* Continue the current record   */

   4060  2 004103   200231 450100                    STZ     FIRST_SEG,,AUTO
         2 004104   004107 710000 2                  TRA     s:4063

     1636     4061    2      ELSE FIRST_SEG = 1;            /* Ready to write first segment  */

   4061  2 004105   000001 235007                    LDA     1,DL
         2 004106   200231 755100                    STA     FIRST_SEG,,AUTO

     1637     4062
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:218  
     1638     4063    3      DO WHILE( UBYTES > 0 OR (UBYTES = 0 AND FIRST_SEG ~= 0) );

   4063  2 004107   004473 710000 2                  TRA     s:4147

     1639     4064
     1640     4065    3         NEW_GRAN = '0'B;

   4065  2 004110   200233 450100                    STZ     NEW_GRAN,,AUTO

     1641     4066    3         IF FM$GRAN.AVAIL <= 1

   4066  2 004111   200005 470500                    LDP0    BBUF$,,AUTO
         2 004112   000001 236100                    LDQ     1,,PR0
         2 004113   001777 376007                    ANQ     1023,DL
         2 004114   000002 116007                    CMPQ    2,DL
         2 004115   004177 603000 2                  TRC     s:4084

     1642     4067    4         THEN DO;               /* Nothing more fits in this gran     */

     1643     4068    4            FM$GRAN.ENDLVL = %YES#;        /* Not last                 */

   4068  2 004116   400000 236007                    LDQ     -131072,DL
         2 004117   000002 256100                    ORSQ    2,,PR0

     1644     4069    4            WRITE_NEXT_GRANULE = WRITE_NEXT_GRANULE_CONSTANT;

   4069  2 004120   000100 100400                    MLR     fill='000'O
         2 004121   000056 000060 1                  ADSC9   WRITE_NEXT_GRANULE_CONSTANT cn=0,n=48
         2 004122   200214 000060                    ADSC9   WRITE_NEXT_GRANULE,,AUTO cn=0,n=48

     1645     4070    4            WRITE_NEXT_GRANULE.BUF_ = XSA_PARAM.BBUF_;

   4070  2 004123   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 004124   100004 237100                    LDAQ    4,,PR1
         2 004125   200220 757100                    STAQ    WRITE_NEXT_GRANULE+4,,AUTO

     1646     4071    4            WRITE_NEXT_GRANULE.BUF_.BOUND = %(GRANULE_SIZE_BYTES-1);
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:219  

   4071  2 004126   200220 236100                    LDQ     WRITE_NEXT_GRANULE+4,,AUTO
         2 004127   177777 376007                    ANQ     65535,DL
         2 004130   000012 276000 3                  ORQ     10
         2 004131   200220 756100                    STQ     WRITE_NEXT_GRANULE+4,,AUTO

     1647     4072    4            WRITE_NEXT_GRANULE.KEY_ = VECTOR(XSA_PARAM.GRANULE);

   4072  2 004132   777640 235007                    LDA     -96,DL
         2 004133   200004 236100                    LDQ     @XSA_PARAM,,AUTO
         2 004134   000013 036003                    ADLQ    11,DU
         2 004135   200216 757100                    STAQ    WRITE_NEXT_GRANULE+2,,AUTO

     1648     4073    4            WRITE_NEXT_GRANULE.V_ = VECTOR(WRITE_NEXT_GRANULE.V);

   4073  2 004136   000007 235000 3                  LDA     7
         2 004137   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 004140   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 004141   000224 036003                    ADLQ    148,DU
         2 004142   200214 757100                    STAQ    WRITE_NEXT_GRANULE,,AUTO

     1649     4074    4            WRITE_NEXT_GRANULE.V.DCB# = XSA_PARAM.DCB#;

   4074  2 004143   100014 720100                    LXL0    12,,PR1
         2 004144   200224 740100                    STX0    WRITE_NEXT_GRANULE+8,,AUTO

     1650     4075    4            CALL M$WRITE( WRITE_NEXT_GRANULE ) ALTRET( RTN_ERROR );

   4075  2 004145   200214 630500                    EPPR0   WRITE_NEXT_GRANULE,,AUTO
         2 004146   440001 713400                    CLIMB   alt,write
         2 004147   401400 401760                    pmme    nvectors=4
         2 004150   004513 702000 2                  TSX2    RTN_ERROR

     1651     4076    4            XSA_PARAM.GRANULE = XSA_PARAM.GRANULE + 1;

   4076  2 004151   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004152   000013 054100                    AOS     11,,PR0
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:220  

     1652     4077    4            BBUF$->FULL_GRAN = '0'B;

   4077  2 004153   200005 471500                    LDP1    BBUF$,,AUTO
         2 004154   010000 220003                    LDX0    4096,DU
         2 004155   000140 100400                    MLR     fill='000'O
         2 004156   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 004157   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1653     4078    4            FM$GRAN.NAVX = 3;

   4078  2 004160   000003 221003                    LDX1    3,DU
         2 004161   100001 741100                    STX1    1,,PR1

     1654     4079    4            XSA_PARAM.CRECX = %(GRANULE_SIZE-1);

   4079  2 004162   001777 235007                    LDA     1023,DL
         2 004163   000007 755100                    STA     7,,PR0

     1655     4080    4            FM$GRAN.AVAIL = XSA_PARAM.CRECX - FM$GRAN.NAVX + 1;

   4080  2 004164   100001 236100                    LDQ     1,,PR1
         2 004165   000022 772000                    QRL     18
         2 004166   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 004167   000007 236100                    LDQ     7,,PR0
         2 004170   200252 136100                    SBLQ    FOUND_GRAN+4,,AUTO
         2 004171   000001 036007                    ADLQ    1,DL
         2 004172   100001 676100                    ERQ     1,,PR1
         2 004173   001777 376007                    ANQ     1023,DL
         2 004174   100001 656100                    ERSQ    1,,PR1

     1656     4081    4            NEW_GRAN = '1'B;

   4081  2 004175   400000 236003                    LDQ     -131072,DU
         2 004176   200233 756100                    STQ     NEW_GRAN,,AUTO

     1657     4082    4            END;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:221  

     1658     4083
     1659     4084    4         IF NOT NEW_GRAN AND FIRST_SEG = 0 THEN DO;

   4084  2 004177   200233 234100                    SZN     NEW_GRAN,,AUTO
         2 004200   004326 604000 2                  TMI     s:4107
         2 004201   200231 235100                    LDA     FIRST_SEG,,AUTO
         2 004202   004326 601000 2                  TNZ     s:4107

     1660     4085                 /* In the middle of a continued write on the same granule
     1661     4086                    we were on before. So, add the new data to the old
     1662     4087                    segment.                                              */
     1663     4088    4            CRECX$ = PINCRW(BBUF$,XSA_PARAM.CRECX+1);

   4088  2 004203   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004204   000007 236100                    LDQ     7,,PR0
         2 004205   000022 736000                    QLS     18
         2 004206   000001 036003                    ADLQ    1,DU
         2 004207   200005 036100                    ADLQ    BBUF$,,AUTO
         2 004210   200006 756100                    STQ     CRECX$,,AUTO

     1664     4089                                                /* Previous control word    */
     1665     4090    4            GBYTES = (FM$GRAN.AVAIL + FM$GRAN.NAVX - FM$CON.GX) * %BYTES_PER_WORD;

   4090  2 004211   200005 471500                    LDP1    BBUF$,,AUTO
         2 004212   100001 236100                    LDQ     1,,PR1
         2 004213   000022 772000                    QRL     18
         2 004214   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 004215   100001 236100                    LDQ     1,,PR1
         2 004216   001777 376007                    ANQ     1023,DL
         2 004217   200252 036100                    ADLQ    FOUND_GRAN+4,,AUTO
         2 004220   200006 473500                    LDP3    CRECX$,,AUTO
         2 004221   200253 756100                    STQ     FOUND_GRAN+5,,AUTO
         2 004222   300000 236100                    LDQ     0,,PR3
         2 004223   000014 772000                    QRL     12
         2 004224   001777 376007                    ANQ     1023,DL
         2 004225   200254 756100                    STQ     FOUND_GRAN+6,,AUTO
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:222  
         2 004226   200253 236100                    LDQ     FOUND_GRAN+5,,AUTO
         2 004227   200254 136100                    SBLQ    FOUND_GRAN+6,,AUTO
         2 004230   000002 736000                    QLS     2
         2 004231   200032 756100                    STQ     GBYTES,,AUTO

     1666     4091                                 /* Total space available for this segment  */
     1667     4092    4            GBYTES = GBYTES - FM$CON.GACTB; /* Total bytes available   */

   4092  2 004232   300000 236100                    LDQ     0,,PR3
         2 004233   007777 376007                    ANQ     4095,DL
         2 004234   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 004235   200032 236100                    LDQ     GBYTES,,AUTO
         2 004236   200252 136100                    SBLQ    FOUND_GRAN+4,,AUTO
         2 004237   200032 756100                    STQ     GBYTES,,AUTO

     1668     4093    4            N = UBYTES;

   4093  2 004240   200023 235100                    LDA     UBYTES,,AUTO
         2 004241   200012 755100                    STA     N,,AUTO

     1669     4094    4            IF N > GBYTES THEN

   4094  2 004242   000000 116003                    CMPQ    0,DU
         2 004243   004247 604000 2                  TMI     s:4096
         2 004244   200012 116100                    CMPQ    N,,AUTO
         2 004245   004247 605000 2                  TPL     s:4096

     1670     4095    4               N = GBYTES;

   4095  2 004246   200012 756100                    STQ     N,,AUTO

     1671     4096    4            G$ = PINCRW(BBUF$,FM$CON.GX);

   4096  2 004247   300000 236100                    LDQ     0,,PR3
         2 004250   000014 772000                    QRL     12
         2 004251   001777 376007                    ANQ     1023,DL
         2 004252   000022 736000                    QLS     18
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:223  
         2 004253   200005 036100                    ADLQ    BBUF$,,AUTO
         2 004254   200031 756100                    STQ     G$,,AUTO

     1672     4097    4            PINCRC(G$,FM$CON.GACTB)->NCHARS = UB$->NCHARS;

   4097  2 004255   300000 236100                    LDQ     0,,PR3
         2 004256   007777 376007                    ANQ     4095,DL
         2 004257   200022 474500                    LDP4    UB$,,AUTO
         2 004260   200012 720100                    LXL0    N,,AUTO
         2 004261   200031 475500                    LDP5    G$,,AUTO
         2 004262   040146 100540                    MLR     fill='040'O
         2 004263   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         2 004264   500000 000010                    ADSC9   0,Q,PR5                  cn=0,n=*X0

     1673     4098    4            FM$CON.GACTB = FM$CON.GACTB + N;

   4098  2 004265   300000 236100                    LDQ     0,,PR3
         2 004266   007777 376007                    ANQ     4095,DL
         2 004267   200012 036100                    ADLQ    N,,AUTO
         2 004270   300000 752103                    STCQ    0,'03'O,PR3

     1674     4099    4            IF UBYTES - N = 0 AND NOT WRITE_FPTV.DVBYTE.CONT THEN

   4099  2 004271   200023 236100                    LDQ     UBYTES,,AUTO
         2 004272   200012 136100                    SBLQ    N,,AUTO
         2 004273   004301 601000 2                  TNZ     s:4101
         2 004274   200024 476500                    LDP6    VAREA$,,AUTO
         2 004275   600003 430100                    FSZN    3,,PR6
         2 004276   004301 604000 2                  TMI     s:4101

     1675     4100    4               CONTINUING = 0;

   4100  2 004277   200232 450100                    STZ     CONTINUING,,AUTO
         2 004300   004303 710000 2                  TRA     s:4102

     1676     4101    4            ELSE CONTINUING = 1;          /* Must continue            */

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:224  
   4101  2 004301   000001 236007                    LDQ     1,DL
         2 004302   200232 756100                    STQ     CONTINUING,,AUTO

     1677     4102    4            WRDS = FM$CON.GX +

   4102  2 004303   300000 236100                    LDQ     0,,PR3
         2 004304   007777 376007                    ANQ     4095,DL
         2 004305   000003 036007                    ADLQ    3,DL
         2 004306   000002 772000                    QRL     2
         2 004307   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 004310   300000 236100                    LDQ     0,,PR3
         2 004311   000014 772000                    QRL     12
         2 004312   001777 376007                    ANQ     1023,DL
         2 004313   200253 756100                    STQ     FOUND_GRAN+5,,AUTO
         2 004314   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 004315   200253 036100                    ADLQ    FOUND_GRAN+5,,AUTO
         2 004316   200254 756100                    STQ     FOUND_GRAN+6,,AUTO
         2 004317   100001 236100                    LDQ     1,,PR1
         2 004320   000022 772000                    QRL     18
         2 004321   200255 756100                    STQ     FOUND_GRAN+7,,AUTO
         2 004322   200254 236100                    LDQ     FOUND_GRAN+6,,AUTO
         2 004323   200255 136100                    SBLQ    FOUND_GRAN+7,,AUTO
         2 004324   200033 756100                    STQ     WRDS,,AUTO

     1678     4103    4              ((FM$CON.GACTB + %(BYTES_PER_WORD-1))/%BYTES_PER_WORD) -
     1679     4104    4              FM$GRAN.NAVX;
     1680     4105    4            END;

   4105  2 004325   004437 710000 2                  TRA     s:4141

     1681     4106    4         ELSE DO;                         /* Start a new segment      */

     1682     4107    4            IF SIZEW(FM$CON) + (UBYTES+%(BYTES_PER_WORD-1))/%BYTES_PER_WORD

   4107  2 004326   200023 236100                    LDQ     UBYTES,,AUTO
         2 004327   000003 036007                    ADLQ    3,DL
         2 004330   000004 506007                    DIV     4,DL
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:225  
         2 004331   200005 470500                    LDP0    BBUF$,,AUTO
         2 004332   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 004333   000001 236100                    LDQ     1,,PR0
         2 004334   001777 376007                    ANQ     1023,DL
         2 004335   200253 756100                    STQ     FOUND_GRAN+5,,AUTO
         2 004336   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 004337   200253 116100                    CMPQ    FOUND_GRAN+5,,AUTO
         2 004340   004351 604000 2                  TMI     s:4116

     1683     4108                                           /* If the number of words needed */
     1684     4109    4              > FM$GRAN.AVAIL /* is greater than # words we have left  */
     1685     4110    5            THEN DO;       /* then the segment must be continued.     */

     1686     4111    5               CONTINUING = 1;

   4111  2 004341   000001 235007                    LDA     1,DL
         2 004342   200232 755100                    STA     CONTINUING,,AUTO

     1687     4112    5               N = (FM$GRAN.AVAIL - SIZEW(FM$CON))*%BYTES_PER_WORD;

   4112  2 004343   000001 236100                    LDQ     1,,PR0
         2 004344   000002 736000                    QLS     2
         2 004345   007774 376007                    ANQ     4092,DL
         2 004346   000004 136007                    SBLQ    4,DL
         2 004347   200012 756100                    STQ     N,,AUTO

     1688     4113                                           /* Number of bytes this segment  */
     1689     4114    5               END;

   4114  2 004350   004362 710000 2                  TRA     s:4122

     1690     4115    5            ELSE DO;                      /* Segment can fit          */

     1691     4116    5               IF WRITE_FPTV.DVBYTE.CONT THEN

   4116  2 004351   200024 471500                    LDP1    VAREA$,,AUTO
         2 004352   100003 430100                    FSZN    3,,PR1
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:226  
         2 004353   004357 605000 2                  TPL     s:4118

     1692     4117    5                  CONTINUING = 1;

   4117  2 004354   000001 235007                    LDA     1,DL
         2 004355   200232 755100                    STA     CONTINUING,,AUTO
         2 004356   004360 710000 2                  TRA     s:4119

     1693     4118    5               ELSE CONTINUING = 0;

   4118  2 004357   200232 450100                    STZ     CONTINUING,,AUTO

     1694     4119    5               N = UBYTES;

   4119  2 004360   200023 235100                    LDA     UBYTES,,AUTO
         2 004361   200012 755100                    STA     N,,AUTO

     1695     4120    5               END;

     1696     4121
     1697     4122    4            CRECX$ = PINCRW( BBUF$, XSA_PARAM.CRECX ); /* Pointer to control word */

   4122  2 004362   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 004363   100007 236100                    LDQ     7,,PR1
         2 004364   000022 736000                    QLS     18
         2 004365   200005 036100                    ADLQ    BBUF$,,AUTO
         2 004366   200006 756100                    STQ     CRECX$,,AUTO

     1698     4123    4            XSA_PARAM.CRECX = XSA_PARAM.CRECX - 1; /* Next control word */

   4123  2 004367   000001 336007                    LCQ     1,DL
         2 004370   100007 056100                    ASQ     7,,PR1

     1699     4124    4            XSA_PARAM.LCRECX = XSA_PARAM.CRECX; /* Doesn't exist       */

   4124  2 004371   100007 235100                    LDA     7,,PR1
         2 004372   100010 755100                    STA     8,,PR1
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:227  

     1700     4125
     1701     4126    4            FM$CON = '0'B;

   4126  2 004373   200006 473500                    LDP3    CRECX$,,AUTO
         2 004374   300000 450100                    STZ     0,,PR3

     1702     4127    4            FM$CON.GACTB = N;

   4127  2 004375   200012 236100                    LDQ     N,,AUTO
         2 004376   300000 752103                    STCQ    0,'03'O,PR3

     1703     4128    4            FM$CON.FAK = FIRST_SEG;

   4128  2 004377   200231 236100                    LDQ     FIRST_SEG,,AUTO
         2 004400   000043 736000                    QLS     35
         2 004401   300000 676100                    ERQ     0,,PR3
         2 004402   400000 376003                    ANQ     -131072,DU
         2 004403   300000 656100                    ERSQ    0,,PR3

     1704     4129    4            FM$CON.GX = FM$GRAN.NAVX;

   4129  2 004404   000001 236100                    LDQ     1,,PR0
         2 004405   000006 772000                    QRL     6
         2 004406   300000 676100                    ERQ     0,,PR3
         2 004407   000017 376000 3                  ANQ     15
         2 004410   300000 656100                    ERSQ    0,,PR3

     1705     4130
     1706     4131    4            IF FIRST_SEG ~= 0

   4131  2 004411   200231 235100                    LDA     FIRST_SEG,,AUTO
         2 004412   004423 600000 2                  TZE     s:4138

     1707     4132    5            THEN DO;

     1708     4133    5               FIRST_SEG = 0;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:228  

   4133  2 004413   200231 450100                    STZ     FIRST_SEG,,AUTO

     1709     4134    5               FM$CON.CTL = WRITE_FPT.V.DVBYTE;

   4134  2 004414   200011 474500                    LDP4    FPT$,,AUTO
         2 004415   400013 236100                    LDQ     11,,PR4
         2 004416   000004 772000                    QRL     4
         2 004417   300000 676100                    ERQ     0,,PR3
         2 004420   037700 376003                    ANQ     16320,DU
         2 004421   300000 656100                    ERSQ    0,,PR3

     1710     4135    5               XSA_PARAM.CRECNO = XSA_PARAM.CRECNO + 1;

   4135  2 004422   100006 054100                    AOS     6,,PR1

     1711     4136    5               END;

     1712     4137
     1713     4138    4            PINCRW( BBUF$, FM$GRAN.NAVX )->NCHARS = UB$->NCHARS;

   4138  2 004423   000001 220100                    LDX0    1,,PR0
         2 004424   000000 635010                    EAA     0,X0
         2 004425   000020 771000                    ARL     16
         2 004426   200022 474500                    LDP4    UB$,,AUTO
         2 004427   200012 721100                    LXL1    N,,AUTO
         2 004430   040145 100540                    MLR     fill='040'O
         2 004431   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         2 004432   000000 000011                    ADSC9   0,A,PR0                  cn=0,n=*X1

     1714     4139    4            WRDS = (N + %(BYTES_PER_WORD-1))/%BYTES_PER_WORD;

   4139  2 004433   200012 236100                    LDQ     N,,AUTO
         2 004434   000003 036007                    ADLQ    3,DL
         2 004435   000004 506007                    DIV     4,DL
         2 004436   200033 756100                    STQ     WRDS,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:229  
     1715     4140    4            END;

     1716     4141    3         UBYTES = UBYTES - N;

   4141  2 004437   200023 236100                    LDQ     UBYTES,,AUTO
         2 004440   200012 136100                    SBLQ    N,,AUTO
         2 004441   200023 756100                    STQ     UBYTES,,AUTO

     1717     4142    3         UB$ = PINCRC( UB$, N );

   4142  2 004442   200012 236100                    LDQ     N,,AUTO
         2 004443   000020 736000                    QLS     16
         2 004444   200022 036100                    ADLQ    UB$,,AUTO
         2 004445   200022 756100                    STQ     UB$,,AUTO

     1718     4143    3         FM$CON.C = CONTINUING;

   4143  2 004446   200232 236100                    LDQ     CONTINUING,,AUTO
         2 004447   000042 736000                    QLS     34
         2 004450   300000 676100                    ERQ     0,,PR3
         2 004451   200000 376003                    ANQ     65536,DU
         2 004452   300000 656100                    ERSQ    0,,PR3

     1719     4144
     1720     4145    3         FM$GRAN.NAVX = FM$GRAN.NAVX + WRDS; /* Next available         */

   4145  2 004453   200005 470500                    LDP0    BBUF$,,AUTO
         2 004454   000001 236100                    LDQ     1,,PR0
         2 004455   000022 772000                    QRL     18
         2 004456   200033 036100                    ADLQ    WRDS,,AUTO
         2 004457   000000 620006                    EAX0    0,QL
         2 004460   000001 740100                    STX0    1,,PR0

     1721     4146    3         FM$GRAN.AVAIL = XSA_PARAM.CRECX - FM$GRAN.NAVX + 1;

   4146  2 004461   000001 236100                    LDQ     1,,PR0
         2 004462   000022 772000                    QRL     18
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:230  
         2 004463   200252 756100                    STQ     FOUND_GRAN+4,,AUTO
         2 004464   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 004465   100007 236100                    LDQ     7,,PR1
         2 004466   200252 136100                    SBLQ    FOUND_GRAN+4,,AUTO
         2 004467   000001 036007                    ADLQ    1,DL
         2 004470   000001 676100                    ERQ     1,,PR0
         2 004471   001777 376007                    ANQ     1023,DL
         2 004472   000001 656100                    ERSQ    1,,PR0

     1722     4147    3         END;

   4147  2 004473   200023 235100                    LDA     UBYTES,,AUTO
         2 004474   004110 605400 2                  TPNZ    s:4065
         2 004475   004500 601000 2                  TNZ     s:4149
         2 004476   200231 236100                    LDQ     FIRST_SEG,,AUTO
         2 004477   004110 601000 2                  TNZ     s:4065

     1723     4148
     1724     4149    2      XSA_PARAM.CONT = WRITE_FPTV.DVBYTE.CONT;

   4149  2 004500   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004501   200024 471500                    LDP1    VAREA$,,AUTO
         2 004502   100003 236100                    LDQ     3,,PR1
         2 004503   000005 772000                    QRL     5
         2 004504   000015 676100                    ERQ     13,,PR0
         2 004505   000020 376003                    ANQ     16,DU
         2 004506   000015 656100                    ERSQ    13,,PR0

     1725     4150    2      XSA_PARAM.FMOD = %YES#;

   4150  2 004507   000001 236003                    LDQ     1,DU
         2 004510   000015 256100                    ORSQ    13,,PR0

     1726     4151    2      RETURN;

   4151  2 004511   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 004512   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:231  

   4150  2 004513                       RTN_ERROR    null
     1727     4152
     1728     4153    2   RTN_ERROR: ;
     1729     4154    2      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   4154  2 004513   000000 470400 xsym               LDP0    B$TCB$
         2 004514   000000 471500                    LDP1    0,,PR0
         2 004515   100102 236100                    LDQ     66,,PR1
         2 004516   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 004517   300001 756100                    STQ     1,,PR3

     1730     4155    2      ALTRETURN;

   4155  2 004520   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 004521   000000 702211                    TSX2  ! 0,X1

     1731     4156
     1732     4157    2   END XSA_CONSEC_WRITE;
     1733     4158        /********************************************************************/
     1734     4159        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:232  
     1735     4160        /********************************************************************/
     1736     4161    1   XSA$PFIL: ENTRY( FPT_OPERATION, XSA_PARAM ) ALTRET;

   4161  2 004522   000000 700200 xent  XSA$PFIL     TSX0  ! X66_AUTO_2
         2 004523   000256 000002                    ZERO    174,2

     1737     4162        /*F*  NAME: XSA$PFIL
     1738     4163              PURPOSE: If not a fast file, divert course to ordinary service
     1739     4164                 call.  Otherwise, initialize and position file.
     1740     4165         ***/
     1741     4166
     1742     4167        /********************/
     1743     4168
     1744     4169    1      FPT$ = ADDR(FPT_OPERATION);

   4169  2 004524   200003 236100                    LDQ     @FPT_OPERATION,,AUTO
         2 004525   200011 756100                    STQ     FPT$,,AUTO

     1745     4170    1      V_ = CLOSE_FPT.V_;

   4170  2 004526   200011 470500                    LDP0    FPT$,,AUTO
         2 004527   000000 237100                    LDAQ    0,,PR0
         2 004530   200025 755100                    STA     V_,,AUTO
         2 004531   200026 756100                    STQ     V_+1,,AUTO

     1746     4171    1      VAREA$ = V_.VAREA$;

   4171  2 004532   200026 236100                    LDQ     V_+1,,AUTO
         2 004533   200024 756100                    STQ     VAREA$,,AUTO

     1747     4172    1      XSA_PARAM.ERR = '0'B;

   4172  2 004534   200004 471500                    LDP1    @XSA_PARAM,,AUTO
         2 004535   100001 450100                    STZ     1,,PR1

     1748     4173
     1749     4174         /***
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:233  
     1750     4175          *** XSA$PFIL is only for CONSEC files...unfast if not.
     1751     4176          ***/
     1752     4177
     1753     4178    1      IF (XSA_PARAM.ORG ~= %CONSEC# AND XSA_PARAM.ORG ~= %INDEXED# AND

   4178  2 004536   100014 236100                    LDQ     12,,PR1
         2 004537   000777 376003                    ANQ     511,DU
         2 004540   000001 116003                    CMPQ    1,DU
         2 004541   004552 600000 2                  TZE     s:4178+12
         2 004542   000006 116003                    CMPQ    6,DU
         2 004543   004552 600000 2                  TZE     s:4178+12
         2 004544   000002 116003                    CMPQ    2,DU
         2 004545   004552 600000 2                  TZE     s:4178+12
         2 004546   000005 116003                    CMPQ    5,DU
         2 004547   004552 600000 2                  TZE     s:4178+12
         2 004550   000015 116003                    CMPQ    13,DU
         2 004551   004562 601000 2                  TNZ     s:4182
         2 004552   000006 116003                    CMPQ    6,DU
         2 004553   004556 600000 2                  TZE     s:4178+16
         2 004554   000015 116003                    CMPQ    13,DU
         2 004555   004576 601000 2                  TNZ     s:4194
         2 004556   200024 473500                    LDP3    VAREA$,,AUTO
         2 004557   300000 236100                    LDQ     0,,PR3
         2 004560   000777 316007                    CANQ    511,DL
         2 004561   004576 600000 2                  TZE     s:4194

     1754     4179    1        XSA_PARAM.ORG ~= %KEYED# AND XSA_PARAM.ORG ~= %RELATIVE# AND
     1755     4180    1        XSA_PARAM.ORG ~= %IREL#) OR ((XSA_PARAM.ORG = %INDEXED# OR
     1756     4181    1        XSA_PARAM.ORG = %IREL#) AND PFIL_FPTV.INDX ~= 0) THEN
     1757     4182    1         IF XSA_PARAM.ORG ~= %CONSEC# THEN

   4182  2 004562   100014 236100                    LDQ     12,,PR1
         2 004563   000777 376003                    ANQ     511,DU
         2 004564   000001 116003                    CMPQ    1,DU
         2 004565   004576 600000 2                  TZE     s:4194

     1758     4183    2            IF XSA_PARAM.UNFAST# THEN DO;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:234  

   4183  2 004566   100015 236100                    LDQ     13,,PR1
         2 004567   000010 316003                    CANQ    8,DU
         2 004570   004574 600000 2                  TZE     s:4188

     1759     4184    2               XSA_PARAM.ERR = E_UNFAST;

   4184  2 004571   000000 236000 1                  LDQ     E_UNFAST
         2 004572   100001 756100                    STQ     1,,PR1

     1760     4185    2               ALTRETURN;

   4185  2 004573   000000 702200 xent               TSX2  ! X66_AALT

     1761     4186    2               END;
     1762     4187    1            ELSE
     1763     4188    1               CALL XSA_UNFAST ALTRET( RTN_PFL_ERROR );

   4188  2 004574   001313 701000 2                  TSX1    XSA_UNFAST
         2 004575   004632 702000 2                  TSX2    RTN_PFL_ERROR

     1764     4189
     1765     4190         /***
     1766     4191          *** If not a "fast" file, use ordinary monitor service.
     1767     4192          ***/
     1768     4193
     1769     4194    2      IF XSA_PARAM.ORG = 0 THEN DO;         /* Use standard service              */

   4194  2 004576   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004577   000014 236100                    LDQ     12,,PR0
         2 004600   000777 316003                    CANQ    511,DU
         2 004601   004617 601000 2                  TNZ     s:4204

     1770     4195    2         CALL M$PFIL( PFIL_FPT ) ALTRET( RTN_PFL_ERROR );

   4195  2 004602   200011 470500                    LDP0    FPT$,,AUTO
         2 004603   440004 713400                    CLIMB   alt,+16388
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:235  
         2 004604   400000 401760                    pmme    nvectors=1
         2 004605   004632 702000 2                  TSX2    RTN_PFL_ERROR

     1771     4196    2         XSA_PARAM.ARS# = DCBADDR(PFIL_FPTV.DCB#)->F$DCB.ARS#;

   4196  2 004606   000010 470400 3                  LDP0    8
         2 004607   000000 471500                    LDP1    0,,PR0
         2 004610   200024 473500                    LDP3    VAREA$,,AUTO
         2 004611   300000 220100                    LDX0    0,,PR3
         2 004612   100000 474510                    LDP4    0,X0,PR1
         2 004613   200004 475500                    LDP5    @XSA_PARAM,,AUTO
         2 004614   400000 235100                    LDA     0,,PR4
         2 004615   500000 755100                    STA     0,,PR5

     1772     4197    2         RETURN;

   4197  2 004616   000000 702200 xent               TSX2  ! X66_ARET

     1773     4198    2         END;
     1774     4199
     1775     4200         /***
     1776     4201          *** Handle separate cases BOF and EOF.
     1777     4202          ***/
     1778     4203
     1779     4204    1      XSA_PARAM.ARS# = 0;

   4204  2 004617   000000 450100                    STZ     0,,PR0

     1780     4205    1      IF PFIL_FPTV.BOF THEN

   4205  2 004620   200024 471500                    LDP1    VAREA$,,AUTO
         2 004621   100000 236100                    LDQ     0,,PR1
         2 004622   400000 316007                    CANQ    -131072,DL
         2 004623   004627 600000 2                  TZE     s:4208

     1781     4206    1         CALL XSA_PFIL_BOF ALTRET(JUSTALT);

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:236  
   4206  2 004624   005063 701000 2                  TSX1    XSA_PFIL_BOF
         2 004625   001312 702000 2                  TSX2    JUSTALT
         2 004626   004631 710000 2                  TRA     s:4209

     1782     4207    1      ELSE
     1783     4208    1         CALL XSA_PFIL_EOF ALTRET(JUSTALT);

   4208  2 004627   004647 701000 2                  TSX1    XSA_PFIL_EOF
         2 004630   001312 702000 2                  TSX2    JUSTALT

     1784     4209    1      RETURN;

   4209  2 004631   000000 702200 xent               TSX2  ! X66_ARET

   4205  2 004632                       RTN_PFL_ERR* null
     1785     4210
     1786     4211    1   RTN_PFL_ERROR: ;
     1787     4212    1      XSA_PARAM.ARS# = DCBADDR(PFIL_FPTV.DCB#)->F$DCB.ARS#;

   4212  2 004632   000010 470400 3                  LDP0    8
         2 004633   000000 471500                    LDP1    0,,PR0
         2 004634   200024 473500                    LDP3    VAREA$,,AUTO
         2 004635   300000 220100                    LDX0    0,,PR3
         2 004636   100000 474510                    LDP4    0,X0,PR1
         2 004637   200004 475500                    LDP5    @XSA_PARAM,,AUTO
         2 004640   400000 235100                    LDA     0,,PR4
         2 004641   500000 755100                    STA     0,,PR5

     1788     4213    1      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   4213  2 004642   000000 474400 xsym               LDP4    B$TCB$
         2 004643   400000 476500                    LDP6    0,,PR4
         2 004644   600102 236100                    LDQ     66,,PR6
         2 004645   500001 756100                    STQ     1,,PR5

     1789     4214    1      ALTRETURN;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:237  
   4214  2 004646   000000 702200 xent               TSX2  ! X66_AALT

     1790     4215
     1791     4216        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:238  
     1792     4217
     1793     4218        /********************************************************************/
     1794     4219    1   XSA_PFIL_EOF: PROC ALTRET;

   4219  2 004647   200230 741300       XSA_PFIL_EOF STX1  ! WRITE_NEXT_GRANULE+12,,AUTO

     1795     4220        /*F*  NAME: XSA_PFIL_EOF
     1796     4221              PURPOSE: Position a "fast" file to its end.
     1797     4222         ***/
     1798     4223
     1799     4224        /********************/
     1800     4225
     1801     4226    3      IF XSA_PARAM.EOP = %EOP_NONE THEN DO; /* This is first read       */

   4226  2 004650   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004651   000015 236100                    LDQ     13,,PR0
         2 004652   000700 316003                    CANQ    448,DU
         2 004653   004752 601000 2                  TNZ     s:4251

     1802     4227    3         XSA_PARAM.CRECX = 0;               /* Cause first              */

   4227  2 004654   000007 450100                    STZ     7,,PR0

     1803     4228    3         XSA_PARAM.LCRECX = 0;              /* granule                  */

   4228  2 004655   000010 450100                    STZ     8,,PR0

     1804     4229    3         XSA_PARAM.GRANX = 0;               /* to                       */

   4229  2 004656   000011 450100                    STZ     9,,PR0

     1805     4230    3         XSA_PARAM.LGRANX = -1;             /* be read                  */

   4230  2 004657   000001 335007                    LCA     1,DL
         2 004660   000012 755100                    STA     10,,PR0

     1806     4231    3         XSA_PARAM.RPOS = %NO#;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:239  

   4231  2 004661   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 004662   000014 356100                    ANSQ    12,,PR0

     1807     4232    3         XSA_PARAM.FMOD = %NO#;

   4232  2 004663   000002 236000 3                  LDQ     2
         2 004664   000015 356100                    ANSQ    13,,PR0

     1808     4233    3         XSA_PARAM.EOF = %NO#;

   4233  2 004665   000013 236000 3                  LDQ     11
         2 004666   000015 356100                    ANSQ    13,,PR0

     1809     4234    3         XSA_PARAM.BBUF_.BUF$->FM$GRAN.ENDLVL = '1'B;

   4234  2 004667   000005 471500                    LDP1    5,,PR0
         2 004670   400000 236007                    LDQ     -131072,DL
         2 004671   100002 256100                    ORSQ    2,,PR1

     1810     4235    4         DO CASE(XSA_PARAM.ORG);

   4235  2 004672   000014 220100                    LDX0    12,,PR0
         2 004673   000777 360003                    ANX0    511,DU
         2 004674   000016 100003                    CMPX0   14,DU
         2 004675   004677 602010 2                  TNC     s:4235+5,X0
         2 004676   004752 710000 2                  TRA     s:4251
         2 004677   004752 710000 2                  TRA     s:4251
         2 004700   004747 710000 2                  TRA     s:4246
         2 004701   004715 710000 2                  TRA     s:4237
         2 004702   004752 710000 2                  TRA     s:4251
         2 004703   004752 710000 2                  TRA     s:4251
         2 004704   004747 710000 2                  TRA     s:4246
         2 004705   004715 710000 2                  TRA     s:4237
         2 004706   004752 710000 2                  TRA     s:4251
         2 004707   004752 710000 2                  TRA     s:4251
         2 004710   004752 710000 2                  TRA     s:4251
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:240  
         2 004711   004752 710000 2                  TRA     s:4251
         2 004712   004752 710000 2                  TRA     s:4251
         2 004713   004752 710000 2                  TRA     s:4251
         2 004714   004715 710000 2                  TRA     s:4237

     1811     4236    4          CASE(%KEYED#,%INDEXED#,%IREL#);

     1812     4237    4            XSA_PARAM.GRANULE = 0;

   4237  2 004715   000013 450100                    STZ     11,,PR0

     1813     4238    4            READ_GRANULES = READ_GRANULES_CONSTANT;

   4238  2 004716   000100 100400                    MLR     fill='000'O
         2 004717   000040 000070 1                  ADSC9   READ_GRANULES_CONSTANT   cn=0,n=56
         2 004720   200176 000070                    ADSC9   READ_GRANULES,,AUTO      cn=0,n=56

     1814     4239    4            READ_GRANULES.V_ = VECTOR(READ_GRANULES.V);

   4239  2 004721   000014 235000 3                  LDA     12
         2 004722   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 004723   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 004724   000206 036003                    ADLQ    134,DU
         2 004725   200176 757100                    STAQ    READ_GRANULES,,AUTO

     1815     4240    4            READ_GRANULES.KEY_ = VECTOR(XSA_PARAM.GRANULE);

   4240  2 004726   777640 235007                    LDA     -96,DL
         2 004727   200004 236100                    LDQ     @XSA_PARAM,,AUTO
         2 004730   000013 036003                    ADLQ    11,DU
         2 004731   200200 757100                    STAQ    READ_GRANULES+2,,AUTO

     1816     4241    4            READ_GRANULES.BUF_ = XSA_PARAM.KBUF_;

   4241  2 004732   000002 237100                    LDAQ    2,,PR0
         2 004733   200202 757100                    STAQ    READ_GRANULES+4,,AUTO

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:241  
     1817     4242    4            READ_GRANULES.V.DCB# = XSA_PARAM.DCB#;

   4242  2 004734   000014 720100                    LXL0    12,,PR0
         2 004735   200206 740100                    STX0    READ_GRANULES+8,,AUTO

     1818     4243    4            CALL M$READ(READ_GRANULES) ALTRET(RTN_ERROR_CLS);

   4243  2 004736   200176 630500                    EPPR0   READ_GRANULES,,AUTO
         2 004737   440000 713400                    CLIMB   alt,read
         2 004740   401400 401760                    pmme    nvectors=4
         2 004741   005036 702000 2                  TSX2    RTN_ERROR_CLS

     1819     4244    4            READ_GRANULES.BUF_.BUF$->GRAN.X = XSA_PARAM.GRANULE;

   4244  2 004742   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004743   000013 720100                    LXL0    11,,PR0
         2 004744   200203 471500                    LDP1    READ_GRANULES+5,,AUTO
         2 004745   100000 440100                    SXL0    0,,PR1
         2 004746   004752 710000 2                  TRA     s:4251

     1820     4245    4          CASE(%CONSEC#,%RELATIVE#);

     1821     4246    4            XSA_PARAM.GRANULE = -1;

   4246  2 004747   000013 755100                    STA     11,,PR0

     1822     4247    4            XSA_PARAM.WORDS_REMAINING = 0;

   4247  2 004750   000000 221003                    LDX1    0,DU
         2 004751   000015 441100                    SXL1    13,,PR0

     1823     4248    4          END;

     1824     4249    3         END;

     1825     4250
     1826     4251    2      UBYTES = 0;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:242  

   4251  2 004752   200023 450100                    STZ     UBYTES,,AUTO

     1827     4252    2      UB$ = ADDR(SMALL_BUFFER);

   4252  2 004753   200020 631500                    EPPR1   SMALL_BUFFER,,AUTO
         2 004754   200022 451500                    STP1    UB$,,AUTO

     1828     4253
     1829     4254    3      DO WHILE('1'B);

     1830     4255    3         TOSKIP = 99999;

   4255  2 004755   303237 235007                    LDA     99999,DL
         2 004756   200021 755100                    STA     TOSKIP,,AUTO

     1831     4256    3         SKIPPED = 0;      /* # of recs Skipped sofar */

   4256  2 004757   200017 450100                    STZ     SKIPPED,,AUTO

     1832     4257    3         PRECORD = %YES#;

   4257  2 004760   400000 236003                    LDQ     -131072,DU
         2 004761   200014 756100                    STQ     PRECORD,,AUTO

     1833     4258    4         DO CASE(XSA_PARAM.ORG);

   4258  2 004762   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 004763   000014 220100                    LDX0    12,,PR0
         2 004764   000777 360003                    ANX0    511,DU
         2 004765   000016 100003                    CMPX0   14,DU
         2 004766   004770 602010 2                  TNC     s:4258+6,X0
         2 004767   004755 710000 2                  TRA     s:4255
         2 004770   005016 710000 2                  TRA     s:4266
         2 004771   005011 710000 2                  TRA     s:4262
         2 004772   005006 710000 2                  TRA     s:4260
         2 004773   005016 710000 2                  TRA     s:4266
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:243  
         2 004774   005016 710000 2                  TRA     s:4266
         2 004775   005014 710000 2                  TRA     s:4264
         2 004776   005006 710000 2                  TRA     s:4260
         2 004777   005016 710000 2                  TRA     s:4266
         2 005000   005016 710000 2                  TRA     s:4266
         2 005001   005016 710000 2                  TRA     s:4266
         2 005002   005016 710000 2                  TRA     s:4266
         2 005003   005016 710000 2                  TRA     s:4266
         2 005004   005016 710000 2                  TRA     s:4266
         2 005005   005006 710000 2                  TRA     s:4260

     1834     4259    4          CASE(%KEYED#,%INDEXED#,%IREL#);

     1835     4260    4            CALL XSA_KEYED_READ ALTRET(CHK_EOF);

   4260  2 005006   001437 701000 2                  TSX1    XSA_KEYED_READ
         2 005007   005017 702000 2                  TSX2    CHK_EOF
         2 005010   004755 710000 2                  TRA     s:4255

     1836     4261    4          CASE(%CONSEC#);

     1837     4262    4            CALL XSA_CONSEC_READ ALTRET(CHK_EOF);

   4262  2 005011   003131 701000 2                  TSX1    XSA_CONSEC_READ
         2 005012   005017 702000 2                  TSX2    CHK_EOF
         2 005013   004755 710000 2                  TRA     s:4255

     1838     4263    4          CASE(%RELATIVE#);

     1839     4264    4            CALL XSA_RELATIVE_READ ALTRET(CHK_EOF);

   4264  2 005014   002500 701000 2                  TSX1    XSA_RELATIVE_READ
         2 005015   005017 702000 2                  TSX2    CHK_EOF

     1840     4265    4          END;

     1841     4266    3         END;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:244  

   4266  2 005016   004755 710000 2                  TRA     s:4255

   4263  2 005017                       CHK_EOF      null
     1842     4267
     1843     4268    2   CHK_EOF: ;
     1844     4269    2      XSA_PARAM.EOP = %EOP_READ;

   4269  2 005017   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 005020   000015 236100                    LDQ     13,,PR0
         2 005021   000005 376000 3                  ANQ     5
         2 005022   000100 276003                    ORQ     64,DU
         2 005023   000015 756100                    STQ     13,,PR0

     1845     4270    2      IF XSA_PARAM.ERR.CODE ~= %E$EOF THEN

   4270  2 005024   000001 236100                    LDQ     1,,PR0
         2 005025   377770 376007                    ANQ     131064,DL
         2 005026   000060 116007                    CMPQ    48,DL
         2 005027   005032 600000 2                  TZE     s:4273

     1846     4271    2         ALTRETURN;

   4271  2 005030   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 005031   000000 702211                    TSX2  ! 0,X1

     1847     4272    3      ELSE DO;

     1848     4273    3         XSA_PARAM.ERR = '0'B;

   4273  2 005032   000001 450100                    STZ     1,,PR0

     1849     4274    3         XSA_PARAM.ARS# = 0;

   4274  2 005033   000000 450100                    STZ     0,,PR0

     1850     4275    3         RETURN;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:245  

   4275  2 005034   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 005035   000001 702211                    TSX2  ! 1,X1

   4270  2 005036                       RTN_ERROR_C* null
     1851     4276    3         END;
     1852     4277
     1853     4278    2   RTN_ERROR_CLS: ;
     1854     4279    2      XSA_PARAM.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   4279  2 005036   000000 470400 xsym               LDP0    B$TCB$
         2 005037   000000 471500                    LDP1    0,,PR0
         2 005040   100102 236100                    LDQ     66,,PR1
         2 005041   200004 473500                    LDP3    @XSA_PARAM,,AUTO
         2 005042   300001 756100                    STQ     1,,PR3

     1855     4280    2      CLOSE_FF = CLOSESAVEFPT;

   4280  2 005043   000100 100400                    MLR     fill='000'O
         2 005044   000002 000170 1                  ADSC9   CLOSESAVEFPT             cn=0,n=120
         2 005045   200034 000170                    ADSC9   CLOSE_FF,,AUTO           cn=0,n=120

     1856     4281    2      CLOSE_FF.V_ = VECTOR(CLOSE_FF.V);

   4281  2 005046   000007 235000 3                  LDA     7
         2 005047   200252 452500                    STP2    FOUND_GRAN+4,,AUTO
         2 005050   200252 236100                    LDQ     FOUND_GRAN+4,,AUTO
         2 005051   000066 036003                    ADLQ    54,DU
         2 005052   200034 757100                    STAQ    CLOSE_FF,,AUTO

     1857     4282    2      CLOSE_FF.V.DCB# = XSA_PARAM.DCB#;

   4282  2 005053   300014 720100                    LXL0    12,,PR3
         2 005054   200066 740100                    STX0    CLOSE_FF+26,,AUTO

     1858     4283    2      CALL M$CLOSE(CLOSE_FF) ALTRET(JUSTALT);

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:246  
   4283  2 005055   200034 630500                    EPPR0   CLOSE_FF,,AUTO
         2 005056   450001 713400                    CLIMB   alt,close
         2 005057   406000 401760                    pmme    nvectors=13
         2 005060   005061 702000 2                  TSX2    JUSTALT

   4282  2 005061                       JUSTALT      null
     1859     4284    2   JUSTALT: ;
     1860     4285    2      ALTRETURN;

   4285  2 005061   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 005062   000000 702211                    TSX2  ! 0,X1

     1861     4286
     1862     4287    2   END XSA_PFIL_EOF;
     1863     4288        /********************************************************************/
     1864     4289        %EJECT;
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:247  
     1865     4290        /********************************************************************/
     1866     4291    1   XSA_PFIL_BOF: PROC ALTRET;

   4291  2 005063   200230 741300       XSA_PFIL_BOF STX1  ! WRITE_NEXT_GRANULE+12,,AUTO

     1867     4292        /*F*  NAME: XSA_PFIL_BOF
     1868     4293              PURPOSE: Position a "fast" file to its beginning.
     1869     4294         ***/
     1870     4295
     1871     4296        /********************/
     1872     4297
     1873     4298    2      CALL XSA_FLUSH_GRAN ALTRET( JUSTALT );

   4298  2 005064   000460 701000 2                  TSX1    XSA_FLUSH_GRAN
         2 005065   005073 702000 2                  TSX2    JUSTALT

     1874     4299
     1875     4300    2      XSA_PARAM.EOP = %EOP_NONE;           /* Anything can follow      */

   4300  2 005066   200004 470500                    LDP0    @XSA_PARAM,,AUTO
         2 005067   000005 236000 3                  LDQ     5
         2 005070   000015 356100                    ANSQ    13,,PR0

     1876     4301    2      RETURN;

   4301  2 005071   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 005072   000001 702211                    TSX2  ! 1,X1

   4300  2 005073                       JUSTALT      null
     1877     4302
     1878     4303    2   JUSTALT: ;
     1879     4304    2      ALTRETURN;

   4304  2 005073   200230 221300                    LDX1  ! WRITE_NEXT_GRANULE+12,,AUTO
         2 005074   000000 702211                    TSX2  ! 0,X1

E_UNFAST
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:248  
 Sect OctLoc
   1     000   302301 001410                                                    ....

CLOSESAVEFPT
 Sect OctLoc
   1     002   000003 777640   000034 006000   000000 177640   000000 006014    ................
   1     006   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     032*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   1     036   000220 000000   000000 000000                                    ........

READ_GRANULES_CONSTANT
 Sect OctLoc
   1     040   000005 777640   000050 006000   000000 177640   000000 006014    .....(..........
   1     044   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     050   000000 610000   000000 000000   000000 000000   000000 000000    ................
   1     054   000000 000000   000000 000000                                    ........

WRITE_NEXT_GRANULE_CONSTANT
 Sect OctLoc
   1     056   000003 777640   000066 006000   000000 177640   000000 006014    .....6..........
   1     062   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     066   000000 410400   000000 000000   000000 000000   000000 000000    ................

DEFAULT_CLOSE_FPT
 Sect OctLoc
   1     072   000003 777640   000124 006000   000000 177640   000000 006014    .....T..........
   1     076   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     122*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   1     126   000220 000000   000000 000000                                    ........

DEFAULT_OPEN_FPT
 Sect OctLoc
   1     130   000025 777640   000174 006000   000000 177640   000000 006014    .....|..........
   1     134   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     174*  000000 000042   000000 000000   252525 000000   000040 252520    ..."......... ..
   1     200   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   1     204   000000 000000   000000 000000   000000 000000   000000 000000    ................
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:249  
   1     210   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   1     214   040040 040040   000000 000000   000000 000000   000000 000000        ............
   1     220   000000 000000   ****** ******                                    ........

DEFAULT_PRECORD_FPT
 Sect OctLoc
   1     222   000003 777640   000230 006000   000000 177640   000000 006014    ................
   1     226   000000 177640   000000 006014   000000 000000   000000 000000    ................
   1     232   000000 000000   0***** ******                                    ........

E_WRITE
 Sect OctLoc
   1     234   302301 400670                                                    ....

(unnamed)
 Sect OctLoc
   1     235   302301 400700                                                    ....

E_EOF
 Sect OctLoc
   1     236   302301 400060                                                    ...0

E_LD
 Sect OctLoc
   1     237   302301 400070                                                    ...8

E_POS
 Sect OctLoc
   1     240   302301 400720                                                    ....

E_NOCONT
 Sect OctLoc
   1     241   302301 401130                                                    ...X

E_DI
 Sect OctLoc
   1     242   302301 400110                                                    ...H
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:250  

(unnamed)
 Sect OctLoc
   1     243   125116 106101   123124 041077                                    UNFAST!?

(unnamed)
 Sect OctLoc
   3     000   777767 777777   000025 777640   777776 777777   000000 000014    ................
   3     004   000003 006000   777077 777777   777757 777777   000003 777640    .....?..........
   3     010   000000 006003   777775 777777   001777 600000   777737 777777    ................
   3     014   000005 777640   777777 777177   400777 777777   000017 770000    ................
     1880     4305
     1881     4306    2   END XSA_PFIL_BOF;
     1882     4307        /********************************************************************/
     1883     4308    1   END XSA$FSF;

PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:251  
--  Include file information  --

   XS_MACRO_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure XSA$FSF.

   Procedure XSA$FSF requires 2621 words for executable code.
   Procedure XSA$FSF requires 174 words of local(AUTO) storage.

    No errors detected in file XSA$FSF.:E05TSI    .
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:252  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:253  
          MINI XREF LISTING

ACS_REQUIRED IN PROCEDURE XSA_CHECK_FILE
      2748**DCL      2738--PROC     2763--IF       2768>>IF
ACTUAL_LGRANX IN PROCEDURE XSA_CHK_ERROR
      3868**DCL      3887<<ASSIGN   3891>>DOWHILE  3892>>IF       3893<<ASSIGN   3893>>ASSIGN   3898>>ASSIGN
B$ALT.CODE
      1572**DCL      1572--REDEF    1573--REDEF    1573--REDEF
B$ALT.ERR
      1573**DCL      2733>>ASSIGN   3073>>ASSIGN   3077>>ASSIGN   3310>>ASSIGN   3884>>ASSIGN   4014>>ASSIGN
      4154>>ASSIGN   4213>>ASSIGN   4279>>ASSIGN
B$ALT.ERR.CODE
      1574**DCL      3873>>ASSIGN
B$ALT.ERR.ERR#
      1574**DCL      1574--REDEF
B$ALT.EVID
      1573**DCL      1573--REDEF    1573--REDEF
B$TCB.ALT$
      1568**DCL      2733>>ASSIGN   3073>>ASSIGN   3077>>ASSIGN   3310>>ASSIGN   3873>>ASSIGN   3884>>ASSIGN
      4014>>ASSIGN   4154>>ASSIGN   4213>>ASSIGN   4279>>ASSIGN
B$TCB$
      1247**DCL      2733>>ASSIGN   3073>>ASSIGN   3077>>ASSIGN   3310>>ASSIGN   3873>>ASSIGN   3884>>ASSIGN
      4014>>ASSIGN   4154>>ASSIGN   4213>>ASSIGN   4279>>ASSIGN
BASED_WORD
      1968**DCL      3475<<ASSIGN   3486<<ASSIGN   3652<<ASSIGN   3659<<ASSIGN   3824>>IF       3892>>IF
BBUF$
      1288**DCL      1945--IMP-PTR  3152<<ASSIGN   3163<<ASSIGN   3166>>DOWHILE  3167>>ASSIGN   3182<<ASSIGN
      3183>>ASSIGN   3185>>ASSIGN   3185>>ASSIGN   3189>>IF       3190>>ASSIGN   3198>>ASSIGN   3199>>ASSIGN
      3207>>ASSIGN   3247>>ASSIGN   3261<<ASSIGN   3262>>IF       3265>>ASSIGN   3277<<ASSIGN   3278>>ASSIGN
      3279>>ASSIGN   3279>>ASSIGN   3280>>IF       3286>>IF       3287>>ASSIGN   3291>>ASSIGN   3291>>ASSIGN
      3292>>ASSIGN   3331<<ASSIGN   3332>>IF       3334>>ASSIGN   3342<<ASSIGN   3343>>ASSIGN   3358<<ASSIGN
      3359>>ASSIGN   3360>>ASSIGN   3369<<ASSIGN   3370>>ASSIGN   3373<<ASSIGN   3374>>IF       3377>>ASSIGN
      3390<<ASSIGN   3391>>ASSIGN   3392>>ASSIGN   3431<<ASSIGN   3451>>ASSIGN   3493>>ASSIGN   3501>>ASSIGN
      3552>>ASSIGN   3598>>ASSIGN   3599>>ASSIGN   3605>>ASSIGN   3605>>ASSIGN   3606>>ASSIGN   3624<<ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:254  
      3710>>ASSIGN   3742>>ASSIGN   3742>>ASSIGN   3745>>ASSIGN   3770>>ASSIGN   3790>>IF       3805<<ASSIGN
      3805>>ASSIGN   3813<<ASSIGN   3821<<ASSIGN   3824>>IF       3892>>IF       4001<<ASSIGN   4026<<ASSIGN
      4027>>ASSIGN   4028>>ASSIGN   4031>>ASSIGN   4031>>ASSIGN   4066>>IF       4068>>ASSIGN   4077>>ASSIGN
      4078>>ASSIGN   4080>>ASSIGN   4080>>ASSIGN   4088>>ASSIGN   4090>>ASSIGN   4090>>ASSIGN   4096>>ASSIGN
      4102>>ASSIGN   4107>>IF       4112>>ASSIGN   4122>>ASSIGN   4129>>ASSIGN   4138>>ASSIGN   4138>>ASSIGN
      4145>>ASSIGN   4145>>ASSIGN   4146>>ASSIGN   4146>>ASSIGN
BYPASS_PRECORD
      2972**LABEL    2918--GOTO
CHK_EOF IN PROCEDURE XSA_PFIL_EOF
      4263**LABEL    4260--CALLALT  4262--CALLALT  4264--CALLALT
CLOSESAVEFPT
      2010**DCL      2716>>ASSIGN   3078>>ASSIGN   4280>>ASSIGN
CLOSESAVEFPT.SN_
      2010**DCL      2010--REDEF
CLOSESAVEFPT.UTL_
      2011**DCL      2011--REDEF
CLOSESAVEFPT.V
      2015**DCL      2010--DCLINIT
CLOSESAVEFPT.V.EXPIRE#
      2025**DCL      2025--REDEF
CLOSESAVEFPT.V.TYPE#
      2023**DCL      2023--REDEF
CLOSESAVEFPT.V.XTNSIZE#
      2020**DCL      2020--REDEF    2022--REDEF
CLOSE_ANYWAY
      2818**LABEL    2820--CALLALT
CLOSE_FF
      1343**DCL      2716<<ASSIGN   2719<>CALL     3078<<ASSIGN   3081<>CALL     3103<<ASSIGN   3106<>CALL
      4280<<ASSIGN   4283<>CALL
CLOSE_FF.SN_
      1343**DCL      1343--REDEF
CLOSE_FF.UTL_
      1344**DCL      1344--REDEF
CLOSE_FF.V
      1348**DCL      2717--ASSIGN   3079--ASSIGN   3104--ASSIGN   4281--ASSIGN
CLOSE_FF.V.DCB#
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:255  
      1349**DCL      2718<<ASSIGN   3080<<ASSIGN   3105<<ASSIGN   4282<<ASSIGN
CLOSE_FF.V.EXPIRE#
      1358**DCL      1358--REDEF
CLOSE_FF.V.TYPE#
      1356**DCL      1356--REDEF
CLOSE_FF.V.XTNSIZE#
      1353**DCL      1353--REDEF    1355--REDEF
CLOSE_FF.V_
      1343**DCL      2717<<ASSIGN   3079<<ASSIGN   3104<<ASSIGN   4281<<ASSIGN
CLOSE_FPT
      1869**DCL      2823<>CALL
CLOSE_FPT.SN_
      1869**DCL      1869--REDEF
CLOSE_FPT.UTL_
      1870**DCL      1870--REDEF
CLOSE_FPT.V.DISP#
      1878**DCL      2818>>IF
CLOSE_FPT.V.EXPIRE#
      1884**DCL      1884--REDEF
CLOSE_FPT.V.TYPE#
      1882**DCL      1882--REDEF
CLOSE_FPT.V.XTNSIZE#
      1879**DCL      1879--REDEF    1881--REDEF
CLOSE_FPT.V_
      1869**DCL      2825>>ASSIGN   4170>>ASSIGN
CLOSE_FPTV.DCB#
      1889**DCL      2828--ASSIGN   2834>>ASSIGN
CLOSE_FPTV.EXPIRE
      1894**DCL      1894--REDEF
CLOSE_FPTV.TYPE
      1893**DCL      1893--REDEF
CLOSE_FPTV.XTNSIZE
      1890**DCL      1890--REDEF    1892--REDEF
CONTINUING IN PROCEDURE XSA_CONSEC_WRITE
      4054**DCL      4100<<ASSIGN   4101<<ASSIGN   4111<<ASSIGN   4117<<ASSIGN   4118<<ASSIGN   4143>>ASSIGN
COUNT_ACTIVE_REC IN PROCEDURE XSA_RELATIVE_READ
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:256  
      3423**DCL      3432<<ASSIGN   3458>>IF       3460<<ASSIGN
CRECX$
      1289**DCL      1949--IMP-PTR  1953--IMP-PTR  3185<<ASSIGN   3191>>IF       3192>>ASSIGN   3193>>ASSIGN
      3197>>IF       3198<<ASSIGN   3198>>ASSIGN   3199<<ASSIGN   3199>>ASSIGN   3200>>ASSIGN   3209>>ASSIGN
      3211>>ASSIGN   3212>>ASSIGN   3219>>ASSIGN   3227>>ASSIGN   3247<<ASSIGN   3255>>ASSIGN   3279<<ASSIGN
      3280>>IF       3280>>IF       3288>>IF       3289>>ASSIGN   3290>>ASSIGN   3451<<ASSIGN   3456>>ASSIGN
      3484>>ASSIGN   3493<<ASSIGN   3499>>ASSIGN   3501<<ASSIGN   3552<<ASSIGN   3606<<ASSIGN   3645>>ASSIGN
      3670>>DOWHILE  3677>>IF       3710<<ASSIGN   3716>>DOWHILE  3745<<ASSIGN   3762>>ASSIGN   3770>>ASSIGN
      4088<<ASSIGN   4090>>ASSIGN   4092>>ASSIGN   4096>>ASSIGN   4097>>ASSIGN   4098>>ASSIGN   4098>>ASSIGN
      4102>>ASSIGN   4102>>ASSIGN   4122<<ASSIGN   4126>>ASSIGN   4127>>ASSIGN   4128>>ASSIGN   4129>>ASSIGN
      4134>>ASSIGN   4143>>ASSIGN
DATA$
      1290**DCL      3499<<ASSIGN   3516>>ASSIGN
DCB$
      1291**DCL      2690>>IF       2707>>ASSIGN   2723>>IF       2728>>ASSIGN   2754<<ASSIGN   2755>>IF
      2755>>IF       2764>>IF       2764>>IF       2764>>IF       2768>>IF       2771>>IF       2774>>ASSIGN
      2775>>IF       2775>>IF       2776>>IF       2780>>IF       2780>>IF       2780>>IF       2792>>IF
      2797>>IF       2828<<ASSIGN   2829>>IF       3067<<ASSIGN   3070>>ASSIGN   3071>>ASSIGN   3072>>ASSIGN
DEFAULT_CLOSE_FPT
      2134**DCL      3103>>ASSIGN
DEFAULT_CLOSE_FPT.SN_
      2134**DCL      2134--REDEF
DEFAULT_CLOSE_FPT.UTL_
      2135**DCL      2135--REDEF
DEFAULT_CLOSE_FPT.V
      2139**DCL      2134--DCLINIT
DEFAULT_CLOSE_FPT.V.EXPIRE#
      2149**DCL      2149--REDEF
DEFAULT_CLOSE_FPT.V.TYPE#
      2147**DCL      2147--REDEF
DEFAULT_CLOSE_FPT.V.XTNSIZE#
      2144**DCL      2144--REDEF    2146--REDEF
DEFAULT_OPEN_FPT
      2220**DCL      2831>>ASSIGN   3109>>ASSIGN
DEFAULT_OPEN_FPT.ACSVEH_
      2222**DCL      2223--REDEF
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:257  
DEFAULT_OPEN_FPT.ALTKEYS_
      2228**DCL      2229--REDEF    2229--REDEF
DEFAULT_OPEN_FPT.HDR_
      2227**DCL      2228--REDEF
DEFAULT_OPEN_FPT.TAB_
      2226**DCL      2227--REDEF
DEFAULT_OPEN_FPT.UHL_
      2220**DCL      2221--REDEF    2221--REDEF
DEFAULT_OPEN_FPT.V
      2229**DCL      2220--DCLINIT
DEFAULT_OPEN_FPT.V.FSN#
      2260**DCL      2260--REDEF    2260--REDEF
DEFAULT_OPEN_FPT.WSN_
      2226**DCL      2226--REDEF
DEFAULT_PRECORD_FPT
      2277**DCL      3119>>ASSIGN
DEFAULT_PRECORD_FPT.V
      2279**DCL      2277--DCLINIT
EOF_EXPECTED IN PROCEDURE XSA_CONSEC_READ
      3694**LABEL    3625--CALLALT
EOF_EXPECTED IN PROCEDURE XSA_GET_NEXT_GRAN
      3815**LABEL    3814--CALLALT
EOF_EXPECTED IN PROCEDURE XSA_RELATIVE_READ
      3526**LABEL    3450--CALLALT  3453--CALLALT
EOF_IN_RECORD IN PROCEDURE XSA_CONSEC_READ
      3688**LABEL    3634--CALLALT  3675--GOTO
EOF_IN_RECORD IN PROCEDURE XSA_RELATIVE_READ
      3514**LABEL    3522--CALLALT
E_DI
      2618**DCL      3827>>ASSIGN   3902>>ASSIGN
E_EOF
      2410**DCL      2992>>ASSIGN   3171>>ASSIGN   3440>>ASSIGN   3879>>ASSIGN   3919>>ASSIGN
E_LD
      2462**DCL      3252>>ASSIGN   3513>>ASSIGN   3766>>ASSIGN
E_NOCONT
      2566**DCL      3991>>ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:258  
E_POS
      2514**DCL      2968>>ASSIGN
E_UNFAST
      1235**DCL      2900>>ASSIGN   2945>>ASSIGN   3038>>ASSIGN   3054>>ASSIGN   3947>>ASSIGN   4184>>ASSIGN
E_WRITE
      2306**DCL      3969>>ASSIGN   3980>>ASSIGN
F$DCB.ACS#
      1603**DCL      2723>>IF       2764>>IF       2764>>IF       2764>>IF       2768>>IF       2829>>IF
F$DCB.ACTPOS
      1611**DCL      1611--REDEF
F$DCB.ARS#
      1585**DCL      1585--REDEF    2707>>ASSIGN   2728>>ASSIGN   2910>>ASSIGN   2956>>ASSIGN   3061>>ASSIGN
      3070>>ASSIGN   3815>>ASSIGN   3887>>ASSIGN   3956>>ASSIGN   4196>>ASSIGN   4212>>ASSIGN
F$DCB.ASN#
      1600**DCL      2755>>IF
F$DCB.ATTR
      1604**DCL      1605--REDEF
F$DCB.BORROW
      1619**DCL      1619--REDEF    1619--REDEF    1619--REDEF
F$DCB.COMP#
      1599**DCL      2792>>IF
F$DCB.CTG#
      1599**DCL      2780>>IF
F$DCB.DCBNAME.L
      1633**DCL      1633--IMP-SIZ
F$DCB.DESC.BAD#
      1593**DCL      2797>>IF
F$DCB.DVBYTE
      1588**DCL      2911>>ASSIGN   3062>>ASSIGN   3071>>ASSIGN
F$DCB.EOMCHAR#
      1589**DCL      1589--REDEF    3072>>ASSIGN
F$DCB.EXIST#
      1599**DCL      2780>>IF
F$DCB.FEXT
      1615**DCL      2780>>IF
F$DCB.FLDID
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:259  
      1614**DCL      1614--REDEF
F$DCB.FORM$
      1608**DCL      1608--REDEF
F$DCB.FSECT
      1624**DCL      1624--REDEF
F$DCB.FSN#
      1601**DCL      1601--REDEF    1601--REDEF    1602--REDEF
F$DCB.FUN#
      1600**DCL      2690>>IF       2775>>IF       2775>>IF       2776>>IF       3113>>IF
F$DCB.HEADER$
      1607**DCL      1607--REDEF
F$DCB.IXTNSIZE#
      1605**DCL      1605--REDEF
F$DCB.LASTSTA$
      1594**DCL      1594--REDEF
F$DCB.LVL
      1620**DCL      1620--REDEF
F$DCB.NAME#.C
      1595**DCL      1595--REDEF
F$DCB.NOEOF
      1617**DCL      1617--REDEF
F$DCB.NRECS#
      1606**DCL      1606--REDEF    3113>>IF       3438>>IF
F$DCB.NRECX
      1625**DCL      1625--REDEF
F$DCB.OHDR
      1617**DCL      1617--REDEF
F$DCB.ORG#
      1600**DCL      1600--REDEF    2774>>ASSIGN
F$DCB.PRECNO
      1623**DCL      1623--REDEF
F$DCB.RCSZ
      1629**DCL      1629--REDEF
F$DCB.RECL#
      1601**DCL      3461>>ASSIGN   3492>>ASSIGN
F$DCB.RES#
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:260  
      1596**DCL      1596--REDEF
F$DCB.SEED#
      1615**DCL      2771>>IF
F$DCB.SETX
      1608**DCL      1608--REDEF
F$DCB.SHARE#
      1599**DCL      2755>>IF
F$DCB.TAB$
      1608**DCL      1608--REDEF
F$DCB.TDA
      1622**DCL      1623--REDEF
F$DCB.WSN#
      1596**DCL      1596--REDEF
FIRST_SEG IN PROCEDURE XSA_CONSEC_WRITE
      4053**DCL      4060<<ASSIGN   4061<<ASSIGN   4063>>DOWHILE  4084>>IF       4128>>ASSIGN   4131>>IF
      4133<<ASSIGN
FM$CON
      1949**DCL      4107--IF       4112--ASSIGN   4126<<ASSIGN
FM$CON.C
      1949**DCL      3670>>DOWHILE  4143<<ASSIGN
FM$CON.CTL
      1949**DCL      3645>>ASSIGN   4134<<ASSIGN
FM$CON.FAK
      1949**DCL      3677>>IF       3716>>DOWHILE  4128<<ASSIGN
FM$CON.GACTB
      1949**DCL      3762>>ASSIGN   4092>>ASSIGN   4097>>ASSIGN   4098<<ASSIGN   4098>>ASSIGN   4102>>ASSIGN
      4127<<ASSIGN
FM$CON.GX
      1949**DCL      3770>>ASSIGN   4090>>ASSIGN   4096>>ASSIGN   4102>>ASSIGN   4129<<ASSIGN
FM$GRAN.AVAIL
      1946**DCL      3605>>ASSIGN   3742>>ASSIGN   4031<<ASSIGN   4066>>IF       4080<<ASSIGN   4090>>ASSIGN
      4107>>IF       4112>>ASSIGN   4146<<ASSIGN
FM$GRAN.ENDLVL
      1946**DCL      2984<<ASSIGN   3790>>IF       4068<<ASSIGN   4234<<ASSIGN
FM$GRAN.FCEX
      1946**DCL      3185>>ASSIGN   3279>>ASSIGN   3280>>IF       3291>>ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:261  
FM$GRAN.FLINK
      1946**DCL      3167>>ASSIGN   3265>>ASSIGN
FM$GRAN.KEYCNT
      1946**DCL      3166>>DOWHILE  3189>>IF       3262>>IF       3286>>IF
FM$GRAN.NAVX
      1945**DCL      3190>>ASSIGN   3287>>ASSIGN   3599<<ASSIGN   3605>>ASSIGN   3742>>ASSIGN   4028<<ASSIGN
      4031>>ASSIGN   4078<<ASSIGN   4080>>ASSIGN   4090>>ASSIGN   4102>>ASSIGN   4129>>ASSIGN   4138>>ASSIGN
      4145<<ASSIGN   4145>>ASSIGN   4146>>ASSIGN
FM$IRENT.KLB
      1962**DCL      1962--IMP-SIZ  3209>>ASSIGN
FM$KEYENT.D
      1959**DCL      3200>>ASSIGN
FM$KEYENT.KLB
      1959**DCL      1959--IMP-SIZ  3211>>ASSIGN
FM$KEYTBL
      1956**DCL      3191>>IF       3192>>ASSIGN   3193>>ASSIGN   3197>>IF       3198>>ASSIGN   3199>>ASSIGN
      3280>>IF       3280--IF       3288>>IF       3289>>ASSIGN   3290>>ASSIGN   3291--ASSIGN
FM$KT
      1956**DCL      1956--REDEF
FM$MISEG
      1965**DCL      3259--ASSIGN
FM$MISEG.CTL
      1966**DCL      3231>>ASSIGN
FM$MISEG.GACTB
      1965**DCL      3246>>ASSIGN
FM$MISEG.GDA
      1966**DCL      3243>>ASSIGN
FM$MISEG.GX
      1965**DCL      3247>>ASSIGN
FM$REL.A
      1953**DCL      3456>>ASSIGN
FM$REL.GACTB
      1953**DCL      3484>>ASSIGN
FOUND_GRAN IN PROCEDURE XSA_CHK_ERROR
      3869**DCL      3888<<ASSIGN   3890<<ASSIGN   3891>>DOWHILE  3894<<ASSIGN   3896>>IF
FPT$
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:262  
      1292**DCL      1701--IMP-PTR  1778--IMP-PTR  1825--IMP-PTR  1869--IMP-PTR  1909--IMP-PTR  1928--IMP-PTR
      2665<<ASSIGN   2667>>ASSIGN   2677>>ASSIGN   2815<<ASSIGN   2818>>IF       2823>>CALL     2825>>ASSIGN
      2883<<ASSIGN   2885>>ASSIGN   2909>>CALL     2928<<ASSIGN   2929>>ASSIGN   2955>>CALL     3000>>ASSIGN
      3001>>ASSIGN   3060>>CALL     3218>>IF       3219>>ASSIGN   3226>>IF       3227>>ASSIGN   3474>>IF
      3475>>ASSIGN   3485>>IF       3486>>ASSIGN   3651>>IF       3652>>ASSIGN   3658>>IF       3659>>ASSIGN
      3938<<ASSIGN   3939>>ASSIGN   3955>>CALL     3999>>ASSIGN   4000>>ASSIGN   4134>>ASSIGN   4169<<ASSIGN
      4170>>ASSIGN   4195>>CALL
FPT_OPERATION
      1253**DCL         9--PROC     2653--ENTRY    2665--ASSIGN   2808--ENTRY    2815--ASSIGN   2874--ENTRY
      2883--ASSIGN   2922--ENTRY    2928--ASSIGN   3930--ENTRY    3938--ASSIGN   4161--ENTRY    4169--ASSIGN
FULL_GRAN
      1977**DCL      4027<<ASSIGN   4077<<ASSIGN
FULL_GRAN.NOT_FIRST_WORD
      1979**DCL      3598<<ASSIGN
G$
      1316**DCL      4096<<ASSIGN   4097>>ASSIGN
GBYTES
      1317**DCL      4090<<ASSIGN   4092<<ASSIGN   4092>>ASSIGN   4094>>IF       4095>>ASSIGN
GDA27
      1308**DCL      1311--REDEF
GDA27.GRAN
      1310**DCL      3244>>ASSIGN
GDA36
      1312**DCL      1315--REDEF
GDA36.GRAN
      1314**DCL      3168>>ASSIGN   3266>>ASSIGN
GRAN.CRECNO
      1970**DCL      3334<<ASSIGN   3343<<ASSIGN   3359<<ASSIGN   3370>>ASSIGN   3374>>IF       3377>>ASSIGN
      3391<<ASSIGN
GRAN.X
      1971**DCL      3026<<ASSIGN   3183<<ASSIGN   3278<<ASSIGN   3332>>IF       3340>>IF       3360<<ASSIGN
      3392<<ASSIGN   4244<<ASSIGN
GRANX IN PROCEDURE XSA_GET_GRAN_N
      3325**DCL      3368<<ASSIGN   3369>>ASSIGN   3371>>ASSIGN   3372>>DOWHILE  3373>>ASSIGN   3376>>ASSIGN
      3379<<ASSIGN   3379>>ASSIGN
INDEXED_KEY_OFFSET IN PROCEDURE XSA_KEYED_READ
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:263  
      3148**DCL      3155<<ASSIGN   3157<<ASSIGN   3159<<ASSIGN   3217>>ASSIGN   3219>>ASSIGN   3225>>ASSIGN
      3227>>ASSIGN
JUSTALT
      3080**LABEL    2836--CALLALT  3015--CALLALT  3028--CALLALT  3035--CALLALT  3081--CALLALT  4009--CALLALT
      4206--CALLALT  4208--CALLALT
JUSTALT IN PROCEDURE XSA_CONSEC_SEG
      3745**LABEL    3740--CALLALT
JUSTALT IN PROCEDURE XSA_FLUSH_GRAN
      2859**LABEL    2861--CALLALT
JUSTALT IN PROCEDURE XSA_GET_GRAN_N
      3392**LABEL    3356--CALLALT  3389--CALLALT
JUSTALT IN PROCEDURE XSA_GET_NEXT_GRAN
      3827**LABEL    3818--CALLALT
JUSTALT IN PROCEDURE XSA_PFIL_BOF
      4300**LABEL    4298--CALLALT
JUSTALT IN PROCEDURE XSA_PFIL_EOF
      4282**LABEL    4283--CALLALT
JUSTALT IN PROCEDURE XSA_POS_NEXT_CONSEC_REC
      3717**LABEL    3713--CALLALT  3717--CALLALT
JUSTALT IN PROCEDURE XSA_RELATIVE_SEG
      3551**LABEL    3548--CALLALT
JUSTALT IN PROCEDURE XSA_UNFAST
      3122**LABEL    3101--CALLALT  3106--CALLALT  3116--CALLALT
JUSTRET IN PROCEDURE XSA_UNFAST
      3122**LABEL    3123--CALLALT
M$CLOSE
        31**DCL-ENT  2719--CALL     2823--CALL     3081--CALL     3106--CALL     4283--CALL
M$OPEN
        31**DCL-ENT  2682--CALL     2698--CALL     2727--CALL     2836--CALL     3116--CALL
M$PFIL
        33**DCL-ENT  4195--CALL
M$PRECORD
        35**DCL-ENT  2955--CALL     3123--CALL
M$READ
        32**DCL-ENT  2909--CALL     3025--CALL     3060--CALL     3180--CALL     3275--CALL     3356--CALL
      3389--CALL     3814--CALL     4243--CALL
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:264  
M$WRITE
        32**DCL-ENT  2861--CALL     3955--CALL     4075--CALL
MISEG$ IN PROCEDURE XSA_KEYED_READ
      3145**DCL      3212<<ASSIGN   3231>>ASSIGN   3242>>DOWHILE  3243>>ASSIGN   3246>>ASSIGN   3247>>ASSIGN
      3259<<ASSIGN   3259>>ASSIGN   3291<<ASSIGN
N
      1293**DCL      1972--IMP-SIZ  2774<<ASSIGN   2778>>IF       2778>>IF       2786>>IF       2787>>IF
      2787>>IF       2787>>IF       2789>>IF       2789>>IF       2800>>ASSIGN   3209<<ASSIGN   3211<<ASSIGN
      3212>>ASSIGN   3217<<ASSIGN   3217>>ASSIGN   3219>>ASSIGN   3219>>ASSIGN   3225<<ASSIGN   3225>>ASSIGN
      3227>>ASSIGN   3227>>ASSIGN   3244<<ASSIGN   3246<<ASSIGN   3250>>IF       3253<<ASSIGN   3255>>ASSIGN
      3255>>ASSIGN   3256>>ASSIGN   3258>>ASSIGN   3332>>IF       3340>>IF       3351--ASSIGN   3360>>ASSIGN
      3384--ASSIGN   3392>>ASSIGN   3496<<ASSIGN   3497>>IF       3498<<ASSIGN   3502>>ASSIGN   3504<<ASSIGN
      3504>>ASSIGN   3505>>IF       3506<<ASSIGN   3507>>ASSIGN   3509>>IF       3511>>IF       3514<<ASSIGN
      3516>>ASSIGN   3516>>ASSIGN   3517>>ASSIGN   3518>>ASSIGN   3544<<ASSIGN   3545>>IF       3547>>ASSIGN
      3762<<ASSIGN   3764>>IF       3767<<ASSIGN   3770>>ASSIGN   3770>>ASSIGN   3771>>ASSIGN   3772>>ASSIGN
      3873<<ASSIGN   3875>>IF       3882>>IF       3882>>IF       3889>>IF       3901>>IF       4093<<ASSIGN
      4094>>IF       4095<<ASSIGN   4097>>ASSIGN   4097>>ASSIGN   4098>>ASSIGN   4099>>IF       4112<<ASSIGN
      4119<<ASSIGN   4127>>ASSIGN   4138>>ASSIGN   4138>>ASSIGN   4139>>ASSIGN   4141>>ASSIGN   4142>>ASSIGN
NCHARS
      1972**DCL      3219<<ASSIGN   3219>>ASSIGN   3227<<ASSIGN   3227>>ASSIGN   3255<<ASSIGN   3255>>ASSIGN
      3516<<ASSIGN   3516>>ASSIGN   3770<<ASSIGN   3770>>ASSIGN   4097<<ASSIGN   4097>>ASSIGN   4138<<ASSIGN
      4138>>ASSIGN
NEW_GRAN IN PROCEDURE XSA_CONSEC_WRITE
      4055**DCL      4065<<ASSIGN   4081<<ASSIGN   4084>>IF
NEXT_RECORD IN PROCEDURE XSA_RELATIVE_READ
      3422**DCL      3433<<ASSIGN   3434>>DOWHILE  3456<<ASSIGN   3457>>IF
NOT_FAST_FILE
      2720**LABEL    2683--CALLALT
NOT_FAST_FILE_CLS
      2708**LABEL    2699--CALLALT
NOT_NEXT_KEY IN PROCEDURE XSA_KEYED_READ
      3144**DCL      3162<<ASSIGN   3164>>DOWHILE  3200<<ASSIGN   3240<<ASSIGN   3241>>DOWHILE  3263<<ASSIGN
      3268<<ASSIGN   3282<<ASSIGN
NUBX
      1294**DCL      3238<<ASSIGN   3255>>ASSIGN   3258<<ASSIGN   3258>>ASSIGN   3299>>ASSIGN   3483<<ASSIGN
      3516>>ASSIGN   3518<<ASSIGN   3518>>ASSIGN   3526>>ASSIGN   3644<<ASSIGN   3696>>ASSIGN   3770>>ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:265  
      3772<<ASSIGN   3772>>ASSIGN
OLDEST_GRAN_CRECNO IN PROCEDURE XSA_GET_GRAN_N
      3324**DCL      3370<<ASSIGN   3374>>IF       3377<<ASSIGN
OPEN_FF
      1427**DCL      2677<<ASSIGN   2682<>CALL     2698<>CALL     2727<>CALL     2831<<ASSIGN   2836<>CALL
      3109<<ASSIGN   3116<>CALL
OPEN_FF.ACSVEH_
      1429**DCL      1430--REDEF
OPEN_FF.ALTKEYS_
      1435**DCL      1436--REDEF    1436--REDEF
OPEN_FF.HDR_
      1434**DCL      1435--REDEF
OPEN_FF.TAB_
      1433**DCL      1434--REDEF
OPEN_FF.UHL_
      1427**DCL      1428--REDEF    1428--REDEF
OPEN_FF.V
      1436**DCL      2678--ASSIGN   2832--ASSIGN   3110--ASSIGN
OPEN_FF.V.ACS#
      1447**DCL      2697<<ASSIGN   2724<<ASSIGN   2833<<ASSIGN   3111<<ASSIGN
OPEN_FF.V.DCB#
      1436**DCL      2834<<ASSIGN   3112<<ASSIGN
OPEN_FF.V.EXIST#
      1440**DCL      3115<<ASSIGN
OPEN_FF.V.FSN#
      1467**DCL      1467--REDEF    1467--REDEF
OPEN_FF.V.OPER.THISF#
      1439**DCL      2720<<ASSIGN
OPEN_FF.V.SETDCB#
      1437**DCL      2680<<ASSIGN   2689<<ASSIGN   2726<<ASSIGN   2835<<ASSIGN
OPEN_FF.V_
      1427**DCL      2678<<ASSIGN   2832<<ASSIGN   3110<<ASSIGN
OPEN_FF.WSN_
      1433**DCL      1433--REDEF
OPEN_FPT
      1701**DCL      2677>>ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:266  
OPEN_FPT.ACSVEH_
      1703**DCL      1704--REDEF
OPEN_FPT.ALTKEYS_
      1709**DCL      1710--REDEF    1710--REDEF
OPEN_FPT.HDR_
      1708**DCL      1709--REDEF
OPEN_FPT.TAB_
      1707**DCL      1708--REDEF
OPEN_FPT.UHL_
      1701**DCL      1702--REDEF    1702--REDEF
OPEN_FPT.V.FSN#
      1741**DCL      1741--REDEF    1741--REDEF
OPEN_FPT.V_
      1701**DCL      2667>>ASSIGN
OPEN_FPT.WSN_
      1707**DCL      1707--REDEF
OPEN_FPTV.ACS
      1749**DCL      2755>>IF       2755>>IF       2764>>IF
OPEN_FPTV.DCB#
      1746**DCL      2681>>ASSIGN   2718>>ASSIGN   2754--ASSIGN
OPEN_FPTV.FSN
      1756**DCL      1756--REDEF    1757--REDEF
OPEN_FPTV.SETDCB
      1746**DCL      2689>>ASSIGN   2726>>ASSIGN
PAST_MISEG$ IN PROCEDURE XSA_KEYED_READ
      3146**DCL      3207<<ASSIGN   3242>>DOWHILE  3292<<ASSIGN
PAST_MISEGX IN PROCEDURE XSA_KEYED_READ
      3147**DCL      3190<<ASSIGN   3192<<ASSIGN   3193<<ASSIGN   3207>>ASSIGN   3287<<ASSIGN   3289<<ASSIGN
      3290<<ASSIGN   3292>>ASSIGN
PFIL_FPT
      1909**DCL      4195<>CALL
PFIL_FPTV.BOF
      1914**DCL      4205>>IF
PFIL_FPTV.DCB#
      1914**DCL      4196--ASSIGN   4212--ASSIGN
PFIL_FPTV.INDX
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:267  
      1914**DCL      4178>>IF
PRECORD
      1295**DCL      2917<<ASSIGN   2961<<ASSIGN   3044>>IF       3068>>IF       3153>>ASSIGN   3161>>DOWHILE
      3213>>IF       3248>>IF       3297>>IF       3305>>IF       3443>>IF       3472>>IF       3647>>IF
      3668>>IF       3688>>IF       3694>>IF       4257<<ASSIGN
PRECORD_FF
      1482**DCL      3119<<ASSIGN   3123<>CALL
PRECORD_FF.V
      1484**DCL      3120--ASSIGN
PRECORD_FF.V.DCB#
      1484**DCL      3122<<ASSIGN
PRECORD_FF.V.N#
      1488**DCL      3121<<ASSIGN
PRECORD_FF.V_
      1482**DCL      3120<<ASSIGN
PRECORD_FPT
      1928**DCL      2955<>CALL
PRECORD_FPT.KEY_.KEY$
      1929**DCL      3226>>IF       3227>>ASSIGN   3474>>IF       3475>>ASSIGN   3658>>IF       3659>>ASSIGN
PRECORD_FPT.V_
      1928**DCL      2929>>ASSIGN
PRECORD_FPTV.BOF
      1939**DCL      2939>>IF
PRECORD_FPTV.DCB#
      1939**DCL      2956--ASSIGN
PRECORD_FPTV.EOF
      1939**DCL      2939>>IF
PRECORD_FPTV.KEYR
      1939**DCL      3223>>IF       3474>>IF       3656>>IF
PRECORD_FPTV.KEYS
      1939**DCL      2939>>IF
PRECORD_FPTV.N
      1940**DCL      2939>>IF       2960>>ASSIGN
READ_AT_LEAST_ONE
      1296**DCL      3153<<ASSIGN   3161>>DOWHILE  3300<<ASSIGN
READ_FPT
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:268  
      1778**DCL      2909<>CALL     3060<>CALL
READ_FPT.BUF_.BOUND
      1780**DCL      3000>>ASSIGN
READ_FPT.BUF_.BUF$
      1781**DCL      3001>>ASSIGN
READ_FPT.KEY_.KEY$
      1779**DCL      3218>>IF       3219>>ASSIGN   3485>>IF       3486>>ASSIGN   3651>>IF       3652>>ASSIGN
READ_FPT.STATION_
      1781**DCL      1782--REDEF
READ_FPT.V.DVBYTE.REREAD#
      1793**DCL      1793--REDEF
READ_FPT.V.INDX#
      1791**DCL      1791--REDEF
READ_FPT.V_
      1778**DCL      2885>>ASSIGN
READ_FPTV.DCB#
      1801**DCL      2910--ASSIGN   2911--ASSIGN   3061--ASSIGN   3062--ASSIGN   3067--ASSIGN
READ_FPTV.DVBYTE.REREAD
      1803**DCL      1804--REDEF
READ_FPTV.INDX
      1803**DCL      1803--REDEF
READ_FPTV.KEYR
      1801**DCL      3215>>IF       3485>>IF       3649>>IF
READ_FPTV.KEYS
      1801**DCL      2895>>IF
READ_FPTV.SEED
      1803**DCL      2895>>IF
READ_GRANULES
      1509**DCL      3020<<ASSIGN   3025<>CALL     3175<<ASSIGN   3180<>CALL     3270<<ASSIGN   3275<>CALL
      3349<<ASSIGN   3356<>CALL     3382<<ASSIGN   3389<>CALL     3808<<ASSIGN   3814<>CALL     4238<<ASSIGN
      4243<>CALL
READ_GRANULES.BUF_
      1511**DCL      3023<<ASSIGN   3178<<ASSIGN   3273<<ASSIGN   3352<<ASSIGN   3385<<ASSIGN   3811<<ASSIGN
      4241<<ASSIGN
READ_GRANULES.BUF_.BOUND
      1511**DCL      3353<<ASSIGN   3386<<ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:269  
READ_GRANULES.BUF_.BUF$
      1512**DCL      3026>>ASSIGN   3182>>ASSIGN   3277>>ASSIGN   3354<<ASSIGN   3358>>ASSIGN   3387<<ASSIGN
      3390>>ASSIGN   4244>>ASSIGN
READ_GRANULES.KEY_
      1509**DCL      3022<<ASSIGN   3177<<ASSIGN   3272<<ASSIGN   3351<<ASSIGN   3384<<ASSIGN   3810<<ASSIGN
      4240<<ASSIGN
READ_GRANULES.STATION_
      1512**DCL      1513--REDEF
READ_GRANULES.V
      1513**DCL      3021--ASSIGN   3176--ASSIGN   3271--ASSIGN   3350--ASSIGN   3383--ASSIGN   3809--ASSIGN
      4239--ASSIGN
READ_GRANULES.V.DCB#
      1513**DCL      3024<<ASSIGN   3179<<ASSIGN   3274<<ASSIGN   3355<<ASSIGN   3388<<ASSIGN   3812<<ASSIGN
      4242<<ASSIGN
READ_GRANULES.V.DVBYTE.REREAD#
      1524**DCL      1524--REDEF
READ_GRANULES.V.INDX#
      1522**DCL      1522--REDEF
READ_GRANULES.V_
      1509**DCL      3021<<ASSIGN   3176<<ASSIGN   3271<<ASSIGN   3350<<ASSIGN   3383<<ASSIGN   3809<<ASSIGN
      4239<<ASSIGN
READ_GRANULES_CONSTANT
      2051**DCL      3020>>ASSIGN   3175>>ASSIGN   3270>>ASSIGN   3349>>ASSIGN   3382>>ASSIGN   3808>>ASSIGN
      4238>>ASSIGN
READ_GRANULES_CONSTANT.STATION_
      2054**DCL      2055--REDEF
READ_GRANULES_CONSTANT.V
      2055**DCL      2051--DCLINIT
READ_GRANULES_CONSTANT.V.DVBYTE.REREAD#
      2066**DCL      2066--REDEF
READ_GRANULES_CONSTANT.V.INDX#
      2064**DCL      2064--REDEF
RECORD_SIZE
      1297**DCL      3484<<ASSIGN   3505>>IF       3506>>ASSIGN   3507<<ASSIGN   3507>>ASSIGN
RPT_ERROR IN PROCEDURE XSA_KEYED_READ
      3305**LABEL    3180--CALLALT  3245--CALLALT  3275--CALLALT
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:270  
RTN_ERROR
      3066**LABEL    2904--CALLALT  2909--CALLALT  2949--CALLALT  2955--CALLALT  3042--CALLALT  3058--CALLALT
      3060--CALLALT
RTN_ERROR IN PROCEDURE XSA_CONSEC_WRITE
      4150**LABEL    4075--CALLALT
RTN_ERROR_CLS
      3073**LABEL    3025--CALLALT
RTN_ERROR_CLS IN PROCEDURE XSA_PFIL_EOF
      4270**LABEL    4243--CALLALT
RTN_OPEN_ERROR
      2728**LABEL    2682--CALLALT  2698--CALLALT  2719--CALLALT  2727--CALLALT  2823--CALLALT
RTN_PFL_ERROR
      4205**LABEL    4188--CALLALT  4195--CALLALT
RTN_WRT_ERROR
      4008**LABEL    3951--CALLALT  3955--CALLALT
SKIPPED
      1298**DCL      2915<<ASSIGN   2932<<ASSIGN   3069>>ASSIGN   3161>>DOWHILE  3302<<ASSIGN   3302>>ASSIGN
      3306>>ASSIGN   3434>>DOWHILE  3444>>ASSIGN   3459<<ASSIGN   3459>>ASSIGN   3476>>ASSIGN   3627<<ASSIGN
      3627>>ASSIGN   3633>>DOWHILE  3636<<ASSIGN   3636>>ASSIGN   3695>>ASSIGN   4256<<ASSIGN
SMALL_BUFFER
      1299**DCL      3004--ASSIGN   4004--ASSIGN   4252--ASSIGN
TOSKIP
      1300**DCL      2916<<ASSIGN   2960<<ASSIGN   2963>>IF       3161>>DOWHILE  3434>>DOWHILE  3633>>DOWHILE
      4255<<ASSIGN
UB$
      1301**DCL      3001<<ASSIGN   3002>>IF       3004<<ASSIGN   3255>>ASSIGN   3516>>ASSIGN   3770>>ASSIGN
      4000<<ASSIGN   4002>>IF       4004<<ASSIGN   4097>>ASSIGN   4138>>ASSIGN   4142<<ASSIGN   4142>>ASSIGN
      4252<<ASSIGN
UBIN27_GDA
      1311**DCL      3243<<ASSIGN
UBIN36_GDA
      1315**DCL      3167<<ASSIGN   3265<<ASSIGN
UBYTES
      1302**DCL      3000<<ASSIGN   3005<<ASSIGN   3250>>IF       3253>>ASSIGN   3256<<ASSIGN   3256>>ASSIGN
      3511>>IF       3514>>ASSIGN   3517<<ASSIGN   3517>>ASSIGN   3764>>IF       3767>>ASSIGN   3771<<ASSIGN
      3771>>ASSIGN   3999<<ASSIGN   4005<<ASSIGN   4063>>DOWHILE  4063>>DOWHILE  4093>>ASSIGN   4099>>IF
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:271  
      4107>>IF       4119>>ASSIGN   4141<<ASSIGN   4141>>ASSIGN   4251<<ASSIGN
UNFAST_PRECORD
      2942**LABEL    3045--GOTO
UNFAST_READ
      2898**LABEL    3046--GOTO
VAREA$
      1303**DCL      1746--IMP-PTR  1801--IMP-PTR  1840--IMP-PTR  1889--IMP-PTR  1914--IMP-PTR  1939--IMP-PTR
      2668<<ASSIGN   2681>>ASSIGN   2689>>ASSIGN   2718>>ASSIGN   2726>>ASSIGN   2754>>ASSIGN   2755>>IF
      2755>>IF       2764>>IF       2826<<ASSIGN   2828>>ASSIGN   2834>>ASSIGN   2886<<ASSIGN   2895>>IF
      2895>>IF       2910>>ASSIGN   2911>>ASSIGN   2930<<ASSIGN   2939>>IF       2939>>IF       2939>>IF
      2939>>IF       2956>>ASSIGN   2960>>ASSIGN   3061>>ASSIGN   3062>>ASSIGN   3067>>ASSIGN   3215>>IF
      3223>>IF       3474>>IF       3485>>IF       3649>>IF       3656>>IF       3940<<ASSIGN   3956>>ASSIGN
      4099>>IF       4116>>IF       4149>>ASSIGN   4171<<ASSIGN   4178>>IF       4196>>ASSIGN   4205>>IF
      4212>>ASSIGN
V_
      1304**DCL      2667<<ASSIGN   2825<<ASSIGN   2885<<ASSIGN   2929<<ASSIGN   3939<<ASSIGN   4170<<ASSIGN
V_.VAREA$
      1306**DCL      2668>>ASSIGN   2826>>ASSIGN   2886>>ASSIGN   2930>>ASSIGN   3940>>ASSIGN   4171>>ASSIGN
WRDS
      1318**DCL      4102<<ASSIGN   4139<<ASSIGN   4145>>ASSIGN
WRITE_FPT
      1825**DCL      3955<>CALL
WRITE_FPT.BUF_.BOUND
      1825**DCL      3999>>ASSIGN
WRITE_FPT.BUF_.BUF$
      1827**DCL      4000>>ASSIGN
WRITE_FPT.STATION_
      1827**DCL      1827--REDEF
WRITE_FPT.V.DVBYTE
      1833**DCL      4134>>ASSIGN
WRITE_FPT.V.DVBYTE.VFC#
      1834**DCL      1834--REDEF
WRITE_FPT.V_
      1825**DCL      3939>>ASSIGN
WRITE_FPTV.DCB#
      1840**DCL      3956--ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:272  
WRITE_FPTV.DVBYTE.CONT
      1842**DCL      4099>>IF       4116>>IF       4149>>ASSIGN
WRITE_FPTV.DVBYTE.VFC
      1842**DCL      1842--REDEF
WRITE_NEXT_GRANULE
      1548**DCL      2855<<ASSIGN   2861<>CALL     4069<<ASSIGN   4075<>CALL
WRITE_NEXT_GRANULE.BUF_
      1548**DCL      2856<<ASSIGN   4070<<ASSIGN
WRITE_NEXT_GRANULE.BUF_.BOUND
      1548**DCL      2857<<ASSIGN   4071<<ASSIGN
WRITE_NEXT_GRANULE.KEY_
      1548**DCL      2858<<ASSIGN   4072<<ASSIGN
WRITE_NEXT_GRANULE.STATION_
      1550**DCL      1550--REDEF
WRITE_NEXT_GRANULE.V
      1551**DCL      2859--ASSIGN   4073--ASSIGN
WRITE_NEXT_GRANULE.V.DCB#
      1551**DCL      2860<<ASSIGN   4074<<ASSIGN
WRITE_NEXT_GRANULE.V.DVBYTE.VFC#
      1557**DCL      1557--REDEF
WRITE_NEXT_GRANULE.V_
      1548**DCL      2859<<ASSIGN   4073<<ASSIGN
WRITE_NEXT_GRANULE_CONSTANT
      2094**DCL      2855>>ASSIGN   4069>>ASSIGN
WRITE_NEXT_GRANULE_CONSTANT.STATION_
      2096**DCL      2096--REDEF
WRITE_NEXT_GRANULE_CONSTANT.V
      2097**DCL      2094--DCLINIT
WRITE_NEXT_GRANULE_CONSTANT.V.DVBYTE.VFC#
      2103**DCL      2103--REDEF
XSA_CHECK_FILE
      2738**PROC     2683--CALL     2699--CALL
XSA_CHK_ERROR IN PROCEDURE XSA_GET_NEXT_GRAN
      3834**PROC     3818--CALL
XSA_CONSEC_READ
      3613**PROC     3015--CALL     4262--CALL
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:273  
XSA_CONSEC_SEG
      3730**PROC     3672--CALL     3713--CALL     3717--CALL
XSA_CONSEC_WRITE
      4044**PROC     4009--CALL
XSA_FLUSH_GRAN
      2844**PROC     2820--CALL     3101--CALL     4298--CALL
XSA_GET_GRAN_N IN PROCEDURE XSA_KEYED_READ
      3315**PROC     3245--CALL
XSA_GET_NEXT_GRAN
      3779**PROC     3593--CALL     3740--CALL
XSA_GET_NEXT_REL_GRAN
      3566**PROC     3453--CALL     3522--CALL     3548--CALL
XSA_KEYED_READ
      3134**PROC     3028--CALL     4260--CALL
XSA_PARAM
      1262**DCL         9--PROC     2653--ENTRY    2808--ENTRY    2874--ENTRY    2922--ENTRY    3930--ENTRY
      4161--ENTRY
XSA_PARAM.ARS#
      1266**DCL      2707<<ASSIGN   2728<<ASSIGN   2910<<ASSIGN   2956<<ASSIGN   3061<<ASSIGN   3069<<ASSIGN
      3070<<ASSIGN   3299<<ASSIGN   3306<<ASSIGN   3444<<ASSIGN   3445<<ASSIGN   3476<<ASSIGN   3526<<ASSIGN
      3695<<ASSIGN   3696<<ASSIGN   3956<<ASSIGN   4196<<ASSIGN   4204<<ASSIGN   4212<<ASSIGN   4274<<ASSIGN
XSA_PARAM.BBUF_
      1270**DCL      2856>>ASSIGN   3352>>ASSIGN   3385>>ASSIGN   3811>>ASSIGN   4070>>ASSIGN
XSA_PARAM.BBUF_.BOUND
      1270**DCL      3347>>IF
XSA_PARAM.BBUF_.BUF$
      1271**DCL      2818>>IF       2895>>IF       2939>>IF       2984>>ASSIGN   3100>>IF       3331>>ASSIGN
      3354>>ASSIGN   3369>>ASSIGN   3373>>ASSIGN   3387>>ASSIGN   3431>>ASSIGN   3624>>ASSIGN   3813>>ASSIGN
      3821>>ASSIGN   3945>>IF       4001>>ASSIGN   4026>>ASSIGN   4234>>ASSIGN
XSA_PARAM.CONT
      1280**DCL      2708<<ASSIGN   3989>>IF       4037<<ASSIGN   4059>>IF       4149<<ASSIGN
XSA_PARAM.CRECNO
      1272**DCL      2706<<ASSIGN   3057<<ASSIGN   3057>>ASSIGN   3118>>IF       3121>>ASSIGN   3239<<ASSIGN
      3239>>ASSIGN   3334>>ASSIGN   3343>>ASSIGN   3359>>ASSIGN   3391>>ASSIGN   3437<<ASSIGN   3437>>ASSIGN
      3438>>IF       3442<<ASSIGN   3442>>ASSIGN   3475>>ASSIGN   3486>>ASSIGN   3626<<ASSIGN   3626>>ASSIGN
      3635<<ASSIGN   3635>>ASSIGN   3652>>ASSIGN   3659>>ASSIGN   4135<<ASSIGN   4135>>ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:274  
XSA_PARAM.CRECX
      1273**DCL      2976<<ASSIGN   3165<<ASSIGN   3165>>ASSIGN   3166>>DOWHILE  3181<<ASSIGN   3189>>IF
      3191>>IF       3192>>ASSIGN   3193>>ASSIGN   3197>>IF       3198>>ASSIGN   3199>>ASSIGN   3262>>IF
      3276<<ASSIGN   3451>>ASSIGN   3452>>DOWHILE  3455<<ASSIGN   3455>>ASSIGN   3479<<ASSIGN   3479>>ASSIGN
      3493>>ASSIGN   3496>>ASSIGN   3500<<ASSIGN   3500>>ASSIGN   3501>>ASSIGN   3544>>ASSIGN   3551<<ASSIGN
      3551>>ASSIGN   3552>>ASSIGN   3604<<ASSIGN   3710>>ASSIGN   3737<<ASSIGN   3737>>ASSIGN   3739>>DOWHILE
      3741<<ASSIGN   3745>>ASSIGN   4029<<ASSIGN   4030>>ASSIGN   4031>>ASSIGN   4079<<ASSIGN   4080>>ASSIGN
      4088>>ASSIGN   4122>>ASSIGN   4123<<ASSIGN   4123>>ASSIGN   4124>>ASSIGN   4146>>ASSIGN   4227<<ASSIGN
XSA_PARAM.DCB#
      1278**DCL      2681<<ASSIGN   2860>>ASSIGN   3024>>ASSIGN   3080>>ASSIGN   3105>>ASSIGN   3112>>ASSIGN
      3113--IF       3113--IF       3122>>ASSIGN   3179>>ASSIGN   3274>>ASSIGN   3355>>ASSIGN   3388>>ASSIGN
      3438--IF       3461--ASSIGN   3492--ASSIGN   3812>>ASSIGN   3815--ASSIGN   3887--ASSIGN   4074>>ASSIGN
      4242>>ASSIGN   4282>>ASSIGN
XSA_PARAM.DVBYTE
      1275**DCL      2911<<ASSIGN   3062<<ASSIGN   3071<<ASSIGN   3231<<ASSIGN   3469<<ASSIGN   3645<<ASSIGN
XSA_PARAM.EOF
      1280**DCL      2983<<ASSIGN   2990>>IF       3172<<ASSIGN   3441<<ASSIGN   3880<<ASSIGN   3920<<ASSIGN
      3967>>IF       4036<<ASSIGN   4233<<ASSIGN
XSA_PARAM.EOMCHAR#
      1278**DCL      1279--REDEF    3072<<ASSIGN   3232<<ASSIGN   3470<<ASSIGN   3646<<ASSIGN
XSA_PARAM.EOP
      1279**DCL      2705<<ASSIGN   2853>>IF       2974>>IF       3010>>IF       3017>>IF       3030>>IF
      3049<<ASSIGN   3962>>IF       3989>>IF       4008<<ASSIGN   4226>>IF       4269<<ASSIGN   4300<<ASSIGN
XSA_PARAM.ERR
      1266**DCL      2670<<ASSIGN   2733<<ASSIGN   2816<<ASSIGN   2888<<ASSIGN   2900<<ASSIGN   2931<<ASSIGN
      2945<<ASSIGN   2968<<ASSIGN   2992<<ASSIGN   3038<<ASSIGN   3043<<ASSIGN   3050>>IF       3054<<ASSIGN
      3059<<ASSIGN   3073<<ASSIGN   3077<<ASSIGN   3171<<ASSIGN   3252<<ASSIGN   3310<<ASSIGN   3440<<ASSIGN
      3513<<ASSIGN   3597<<ASSIGN   3674<<ASSIGN   3766<<ASSIGN   3827<<ASSIGN   3876>>IF       3879<<ASSIGN
      3884<<ASSIGN   3902<<ASSIGN   3919<<ASSIGN   3947<<ASSIGN   3960<<ASSIGN   3969<<ASSIGN   3980<<ASSIGN
      3991<<ASSIGN   4014<<ASSIGN   4154<<ASSIGN   4172<<ASSIGN   4184<<ASSIGN   4213<<ASSIGN   4273<<ASSIGN
      4279<<ASSIGN
XSA_PARAM.ERR.CODE
      1267**DCL      3051>>IF       3595>>IF       3673>>IF       4270>>IF
XSA_PARAM.FMOD
      1282**DCL      2691<<ASSIGN   2692<<ASSIGN   2851>>IF       2863<<ASSIGN   2982<<ASSIGN   4033<<ASSIGN
      4150<<ASSIGN   4232<<ASSIGN
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:275  
XSA_PARAM.GRANULE
      1274**DCL      2858--ASSIGN   2862<<ASSIGN   2862>>ASSIGN   3012<<ASSIGN   3019<<ASSIGN   3022--ASSIGN
      3026>>ASSIGN   3032<<ASSIGN   3168<<ASSIGN   3169>>IF       3177--ASSIGN   3183>>ASSIGN   3266<<ASSIGN
      3267>>IF       3272--ASSIGN   3278>>ASSIGN   3800<<ASSIGN   3800>>ASSIGN   3810--ASSIGN   4032<<ASSIGN
      4072--ASSIGN   4076<<ASSIGN   4076>>ASSIGN   4237<<ASSIGN   4240--ASSIGN   4244>>ASSIGN   4246<<ASSIGN
XSA_PARAM.GRANX
      1273**DCL      2978<<ASSIGN   3329<<ASSIGN   3330>>DOWHILE  3331>>ASSIGN   3337<<ASSIGN   3337>>ASSIGN
      3371<<ASSIGN   3376<<ASSIGN   3387>>ASSIGN   3431>>ASSIGN   3624>>ASSIGN   3802>>IF       3804<<ASSIGN
      3804>>ASSIGN   3820<<ASSIGN   4035<<ASSIGN   4229<<ASSIGN
XSA_PARAM.INPUT
      1281**DCL      2783<<ASSIGN   2784<<ASSIGN   3978>>IF
XSA_PARAM.KBUF_
      1268**DCL      3023>>ASSIGN   3178>>ASSIGN   3273>>ASSIGN   4241>>ASSIGN
XSA_PARAM.KBUF_.BUF$
      1269**DCL      2895>>IF       2939>>IF       3152>>ASSIGN   3163>>ASSIGN   3261>>ASSIGN   3340>>IF
      3342>>ASSIGN
XSA_PARAM.LCRECX
      1273**DCL      2977<<ASSIGN   3452>>DOWHILE  3496>>ASSIGN   3544>>ASSIGN   3605<<ASSIGN   3739>>DOWHILE
      3742<<ASSIGN   4030<<ASSIGN   4124<<ASSIGN   4228<<ASSIGN
XSA_PARAM.LGRANX
      1274**DCL      2979<<ASSIGN   3329>>ASSIGN   3347>>IF       3354>>ASSIGN   3357<<ASSIGN   3357>>ASSIGN
      3368>>ASSIGN   3802>>IF       3815<<ASSIGN   3898<<ASSIGN   4034<<ASSIGN   4230<<ASSIGN
XSA_PARAM.ORG
      1277**DCL      2725<<ASSIGN   2732<<ASSIGN   2800<<ASSIGN   2851>>IF       2895>>IF       2895>>IF
      2895>>IF       2907>>IF       2939>>IF       2939>>IF       2939>>IF       2953>>IF       2963>>IF
      2963>>IF       2963>>IF       2963>>IF       2963>>IF       3008>>DOCASE   3097>>IF       3107<<ASSIGN
      3154>>IF       3156>>IF       3208>>IF       3790>>IF       3889>>IF       3945>>IF       3953>>IF
      4178>>IF       4178>>IF       4178>>IF       4178>>IF       4178>>IF       4178>>IF       4178>>IF
      4182>>IF       4194>>IF       4235>>DOCASE   4258>>DOCASE
XSA_PARAM.RPOS
      1274**DCL      2981<<ASSIGN   3435>>IF       3436<<ASSIGN   3477<<ASSIGN   3670>>DOWHILE  3679<<ASSIGN
      3688>>IF       3707>>IF       3709<<ASSIGN   4231<<ASSIGN
XSA_PARAM.SIG1
      1272**DCL      1272--REDEF    2662>>IF
XSA_PARAM.SIG2
      1272**DCL      1273--REDEF    2662>>IF
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:276  
XSA_PARAM.UNFAST#
      1280**DCL      2663<<ASSIGN   2899>>IF       2944>>IF       3037>>IF       3053>>IF       3946>>IF
      4183>>IF
XSA_PARAM.WORDS_REMAINING
      1282**DCL      3013<<ASSIGN   3033<<ASSIGN   3449>>IF       3461<<ASSIGN   3478<<ASSIGN   3492<<ASSIGN
      3495>>DOWHILE  3497>>IF       3498>>ASSIGN   3500>>ASSIGN   3502<<ASSIGN   3502>>ASSIGN   3521>>IF
      3543>>DOWHILE  3545>>IF       3547<<ASSIGN   3547>>ASSIGN   3551>>ASSIGN   3553<<ASSIGN   4247<<ASSIGN
XSA_PFIL_BOF
      4291**PROC     4206--CALL
XSA_PFIL_EOF
      4219**PROC     4208--CALL
XSA_POS_NEXT_CONSEC_REC IN PROCEDURE XSA_CONSEC_READ
      3705**PROC     3625--CALL     3634--CALL
XSA_READY_FIRST_WRITE
      4019**PROC     2854--CALL     3964--CALL
XSA_READY_WRITE IN PROCEDURE XSA_GET_NEXT_GRAN
      3911**PROC     3792--CALL     3903--CALL
XSA_RELATIVE_READ
      3405**PROC     3035--CALL     4264--CALL
XSA_RELATIVE_SEG
      3536**PROC     3450--CALL
XSA_TRANSFER_CONSEC_SEG
      3755**PROC     3671--CALL     3690--CALL
XSA_UNFAST
      3089**PROC     2904--CALL     2949--CALL     3042--CALL     3058--CALL     3951--CALL     4188--CALL
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:277  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:278  
              MINI UREF LISTING

E_READ    2358**DCL
M$ACCT      48**DCL-ENT
M$ACTIVATE      51**DCL-ENT
M$ALIB      44**DCL-ENT
M$ASUSER      46**DCL-ENT
M$ATTACH      53**DCL-ENT
M$BADPP      71**DCL-ENT
M$CGCTL      52**DCL-ENT
M$CGINFO      52**DCL-ENT
M$CHECK      33**DCL-ENT
M$CHGUNIT      91**DCL-ENT
M$CLRSTK      89**DCL-ENT
M$CMDVAR     100**DCL-ENT
M$CONFIG      61**DCL-ENT
M$CORRES      36**DCL-ENT
M$CPEXIT      45**DCL-ENT
M$CVM      69**DCL-ENT
M$CVOL      34**DCL-ENT
M$DCLFLD      61**DCL-ENT
M$DEACTIVATE      51**DCL-ENT
M$DELREC      33**DCL-ENT
M$DEQ      98**DCL-ENT
M$DETACH      53**DCL-ENT
M$DEVICE      35**DCL-ENT
M$DISPLAY      98**DCL-ENT
M$DISPRES      38**DCL-ENT
M$DLIB      44**DCL-ENT
M$DRIBBLE      61**DCL-ENT
M$DRTN      89**DCL-ENT
M$DSUSER      46**DCL-ENT
M$ENQ      97**DCL-ENT
M$EOM      56**DCL-ENT
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:279  
M$ERASE      62**DCL-ENT
M$ERR      43**DCL-ENT
M$ERRMSG      94**DCL-ENT
M$EVENT      86**DCL-ENT
M$EXHUME      95**DCL-ENT
M$EXIT      43**DCL-ENT
M$EXTEND      35**DCL-ENT
M$FDP      67**DCL-ENT
M$FDS      66**DCL-ENT
M$FEBOOT      59**DCL-ENT
M$FECTL      60**DCL-ENT
M$FEDUMP      59**DCL-ENT
M$FID      94**DCL-ENT
M$FINDPROC      48**DCL-ENT
M$FSUSER      46**DCL-ENT
M$FVP      68**DCL-ENT
M$FWCG      52**DCL-ENT
M$GBPL      72**DCL-ENT
M$GDDL      68**DCL-ENT
M$GDP      67**DCL-ENT
M$GDS      66**DCL-ENT
M$GETDCB      37**DCL-ENT
M$GETMOUSE      77**DCL-ENT
M$GETPM      78**DCL-ENT
M$GJOB      96**DCL-ENT
M$GLINEATTR      56**DCL-ENT
M$GOODPP      71**DCL-ENT
M$GPLATEN      64**DCL-ENT
M$GPROMPT      63**DCL-ENT
M$GTRMATTR      57**DCL-ENT
M$GTRMCTL      55**DCL-ENT
M$GTRMTAB      58**DCL-ENT
M$GVP      67**DCL-ENT
M$HELP      94**DCL-ENT
M$INT      86**DCL-ENT
M$INTRTN      47**DCL-ENT
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:280  
M$IOQ      82**DCL-ENT
M$JOBSTATS      96**DCL-ENT
M$KEYIN      36**DCL-ENT
M$LDEV      31**DCL-ENT
M$LDTRC      44**DCL-ENT
M$LIMIT      37**DCL-ENT
M$LINES      36**DCL-ENT
M$LINK      43**DCL-ENT
M$MADMUCK      39**DCL-ENT
M$MAKUSER      70**DCL-ENT
M$MBS      38**DCL-ENT
M$MDFFLD      62**DCL-ENT
M$MERC      87**DCL-ENT
M$MERCS      88**DCL-ENT
M$MIRROR      82**DCL-ENT
M$MONINFO      99**DCL-ENT
M$MPL      72**DCL-ENT
M$NODEINFO      63**DCL-ENT
M$NXTUSR      97**DCL-ENT
M$OCMSG      95**DCL-ENT
M$OLAY      43**DCL-ENT
M$PAS      72**DCL-ENT
M$PATHCON      95**DCL-ENT
M$PDS      66**DCL-ENT
M$PLATEN      57**DCL-ENT
M$PROCNAME      48**DCL-ENT
M$PROFILE      59**DCL-ENT
M$PROMPT      55**DCL-ENT
M$RACST      39**DCL-ENT
M$RDSYSLOG      80**DCL-ENT
M$RELDCB      37**DCL-ENT
M$RELRES      38**DCL-ENT
M$RELSTARF      40**DCL-ENT
M$REM      40**DCL-ENT
M$RENV      87**DCL-ENT
M$REQUIRE      39**DCL-ENT
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:281  
M$RETRY      88**DCL-ENT
M$RETRYS      88**DCL-ENT
M$REW      34**DCL-ENT
M$RLSFLD      62**DCL-ENT
M$RPRIV      90**DCL-ENT
M$RSPP      69**DCL-ENT
M$RSWITCH      91**DCL-ENT
M$RUE      97**DCL-ENT
M$SAD      70**DCL-ENT
M$SAVE      46**DCL-ENT
M$SCON      47**DCL-ENT
M$SCREECH      45**DCL-ENT
M$SENV      87**DCL-ENT
M$SETFMA      31**DCL-ENT
M$SETFP      60**DCL-ENT
M$SINPUT      58**DCL-ENT
M$SLCFLD      63**DCL-ENT
M$SMOUSE      77**DCL-ENT
M$SMPRT      69**DCL-ENT
M$SPRIV      90**DCL-ENT
M$SSC      70**DCL-ENT
M$SSWITCH      90**DCL-ENT
M$STATE      99**DCL-ENT
M$STD      71**DCL-ENT
M$STIMER      85**DCL-ENT
M$STLPP      68**DCL-ENT
M$STRAP      85**DCL-ENT
M$STRMATTR      57**DCL-ENT
M$STRMCTL      55**DCL-ENT
M$STRMTAB      58**DCL-ENT
M$SYMBIO      96**DCL-ENT
M$SYSCON      82**DCL-ENT
M$SYSID     100**DCL-ENT
M$TDCLOSE      81**DCL-ENT
M$TDIO      81**DCL-ENT
M$TDOPEN      80**DCL-ENT
PL6.E3A0      #001=XSA$FSF File=XSA$FSF.:E05TSI                                  WED 07/30/97 09:09 Page:282  
M$TDREQCPU      81**DCL-ENT
M$TEMPWROC      75**DCL-ENT
M$TIME      98**DCL-ENT
M$TRAP      85**DCL-ENT
M$TRMISC      60**DCL-ENT
M$TRMPRG      56**DCL-ENT
M$TRTN      89**DCL-ENT
M$TRUNC      32**DCL-ENT
M$TTIMER      85**DCL-ENT
M$UC      55**DCL
M$UMPL      72**DCL-ENT
M$UNFID      94**DCL-ENT
M$UNLATCH      51**DCL-ENT
M$UNSHARE      48**DCL-ENT
M$USRFIELD      91**DCL-ENT
M$VIRTUAL      66**DCL-ENT
M$WAIT      89**DCL-ENT
M$WEOF      34**DCL-ENT
M$WRSYSLOG      80**DCL-ENT
M$XCON      86**DCL-ENT
M$XCONRTN      47**DCL-ENT
M$XEQTIME      99**DCL-ENT
M$XFLUSH      40**DCL-ENT
M$XMOUSE      77**DCL-ENT
M$XXX      43**DCL-ENT
M$YC      45**DCL-ENT
XSA$CLOSE    2808**ENTRY
XSA$FSF       9**PROC
XSA$OPEN    2653**ENTRY
XSA$PFIL    4161**ENTRY
XSA$PRECORD    2922**ENTRY
XSA$READ    2874**ENTRY
XSA$WRITE    3930**ENTRY
