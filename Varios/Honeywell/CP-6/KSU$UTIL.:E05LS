VERSION E05

PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:1    
        1        1        /*M* KSU$UTIL - Utility routines for NETCON */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        KSU$CHARBIN: PROC(BIN_NUM,TEXTC$,MAX_NUM) ALTRET;
        9        9        /*D* NAME: KSU$CHARBIN
       10       10             CALL: CALL KSU$CHARBIN(BIN_NUM,TEXTC,MAX_NUM);
       11       11             DESCRIPTION: This procedure takes a textc field, pointed to by TEXTC$,
       12       12                          and performs a CHARBIN on it with a destination
       13       13                          of BIN_NUM (UBIN WORD). If the TEXTC string contains a
       14       14                          number which is either larger than MAX_NUM or
       15       15                          2^36 -1, or contains non-digit characters then this
       16       16                          proceedure ALTRETURNS.
       17       17        */
       18       18        /**/
       19       19        /*  PARAMETERS  */
       20       20        /**/
       21       21    1   DCL BIN_NUM UBIN WORD;
       22       22    1   DCL TEXTC$ PTR;
       23       23    1   DCL 1 TEXTC ALIGNED BASED(TEXTC$),
       24       24    1         2 SIZE UBIN BYTE CALIGNED,
       25       25    1         2 TEXT CHAR(TEXTC.SIZE) CALIGNED;
       26       26    1   DCL MAX_NUM UBIN WORD;
       27       27        /**/
       28       28        /*  CONSTANTS  */
       29       29        /**/
       30       30        %INCLUDE B$TABLES_C;
       31      138        %B$SR_NON_DEC;
       32      142        /**/
       33      143        /*  AUTO DATA  */
       34      144        /**/
       35      145    1   DCL IDX UBIN WORD;
       36      146    1   DCL TABLEVAL UBIN WORD;
       37      147        /**/
PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:2    
       38      148    1           CALL SEARCH(IDX,TABLEVAL,B$SR_NON_DEC,TEXTC.TEXT,0);
               148                    /* Look for non-digits   */
       39      149    1           IF TEXTC.SIZE > 11                  /* IF over 11 characters              */
       40      150    1             OR (TEXTC.SIZE = 11 AND TEXTC.TEXT > '68719476735')
               150                      /* OR over UBIN limit  */
       41      151    1             OR IDX ~= TEXTC.SIZE          /* OR bad characters                  */
       42      152    1           THEN
       43      153    1                ALTRETURN;
       44      154    1           CALL CHARBIN(BIN_NUM,TEXTC.TEXT);
       45      155    1           IF BIN_NUM > MAX_NUM
       46      156    1           THEN
       47      157    1                ALTRETURN;
       48      158    1           RETURN;
       49      159    1   END KSU$CHARBIN;
       50      160        %EOD;

PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:3    
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$CHARBIN.

   Procedure KSU$CHARBIN requires 42 words for executable code.
   Procedure KSU$CHARBIN requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:4    

 Object Unit name= KSU$CHARBIN                                File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:46:33.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  KSU$CHARBIN
    1   Proc  even  none    42     52  KSU$CHARBIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  KSU$CHARBIN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$SR_NON_DEC$
PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:5    


        1        1        /*M* KSU$UTIL - Utility routines for NETCON */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        KSU$CHARBIN: PROC(BIN_NUM,TEXTC$,MAX_NUM) ALTRET;

      8  1 000000   000000 700200 xent  KSU$CHARBIN  TSX0  ! X66_AUTO_3
         1 000001   000012 000003                    ZERO    10,3

        9        9        /*D* NAME: KSU$CHARBIN
       10       10             CALL: CALL KSU$CHARBIN(BIN_NUM,TEXTC,MAX_NUM);
       11       11             DESCRIPTION: This procedure takes a textc field, pointed to by TEXTC$,
       12       12                          and performs a CHARBIN on it with a destination
       13       13                          of BIN_NUM (UBIN WORD). If the TEXTC string contains a
       14       14                          number which is either larger than MAX_NUM or
       15       15                          2^36 -1, or contains non-digit characters then this
       16       16                          proceedure ALTRETURNS.
       17       17        */
       18       18        /**/
       19       19        /*  PARAMETERS  */
       20       20        /**/
       21       21    1   DCL BIN_NUM UBIN WORD;
       22       22    1   DCL TEXTC$ PTR;
       23       23    1   DCL 1 TEXTC ALIGNED BASED(TEXTC$),
       24       24    1         2 SIZE UBIN BYTE CALIGNED,
       25       25    1         2 TEXT CHAR(TEXTC.SIZE) CALIGNED;
       26       26    1   DCL MAX_NUM UBIN WORD;
       27       27        /**/
       28       28        /*  CONSTANTS  */
       29       29        /**/
       30       30        %INCLUDE B$TABLES_C;
       31      138        %B$SR_NON_DEC;
       32      142        /**/
PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:6    
       33      143        /*  AUTO DATA  */
       34      144        /**/
       35      145    1   DCL IDX UBIN WORD;
       36      146    1   DCL TABLEVAL UBIN WORD;
       37      147        /**/
       38      148    1           CALL SEARCH(IDX,TABLEVAL,B$SR_NON_DEC,TEXTC.TEXT,0);
               148                    /* Look for non-digits   */

    148  1 000002   200004 470500                    LDP0    @TEXTC$,,AUTO
         1 000003   000000 471500                    LDP1    0,,PR0
         1 000004   100000 236100                    LDQ     0,,PR1
         1 000005   000033 772000                    QRL     27
         1 000006   000000 473400 xsym               LDP3    B$SR_NON_DEC$
         1 000007   000000 620006                    EAX0    0,QL
         1 000010   000000 164540                    TCT
         1 000011   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000012   300000 000100                    ARG     0,,PR3
         1 000013   200006 000100                    ARG     IDX,,AUTO
         1 000014   200006 235100                    LDA     IDX,,AUTO
         1 000015   000033 771000                    ARL     27
         1 000016   200007 755100                    STA     TABLEVAL,,AUTO
         1 000017   200006 551140                    STBA    IDX,'40'O,AUTO

       39      149    1           IF TEXTC.SIZE > 11                  /* IF over 11 characters             */

    149  1 000020   000033 736000                    QLS     27
         1 000021   014000 116003                    CMPQ    6144,DU
         1 000022   000035 603000 1                  TRC     s:153
         1 000023   013000 116003                    CMPQ    5632,DU
         1 000024   000031 601000 1                  TNZ     s:149+9
         1 000025   040140 106400                    CMPC    fill='040'O
         1 000026   000000 000013 0                  ADSC9   0                        cn=0,n=11
         1 000027   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000030   000035 602000 1                  TNC     s:153
         1 000031   100000 236100                    LDQ     0,,PR1
         1 000032   000033 772000                    QRL     27
         1 000033   200006 116100                    CMPQ    IDX,,AUTO
PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:7    
         1 000034   000036 600000 1                  TZE     s:154

       40      150    1             OR (TEXTC.SIZE = 11 AND TEXTC.TEXT > '68719476735')
               150                      /* OR over UBIN limit  */
       41      151    1             OR IDX ~= TEXTC.SIZE          /* OR bad characters                  */
       42      152    1           THEN
       43      153    1                ALTRETURN;

    153  1 000035   000000 702200 xent               TSX2  ! X66_AALT

       44      154    1           CALL CHARBIN(BIN_NUM,TEXTC.TEXT);

    154  1 000036   000100 305540                    DTB
         1 000037   100000 230010                    NDSC9   0,,PR1                   cn=1,s=nosgn,sf=0,n=*X0
         1 000040   200010 000010                    NDSC9   TABLEVAL+1,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         1 000041   200003 471500                    LDP1    @BIN_NUM,,AUTO
         1 000042   200011 236100                    LDQ     TABLEVAL+2,,AUTO
         1 000043   100000 756100                    STQ     0,,PR1

       45      155    1           IF BIN_NUM > MAX_NUM

    155  1 000044   200005 474500                    LDP4    @MAX_NUM,,AUTO
         1 000045   400000 116100                    CMPQ    0,,PR4
         1 000046   000051 602000 1                  TNC     s:158
         1 000047   000051 600000 1                  TZE     s:158

       46      156    1           THEN
       47      157    1                ALTRETURN;

    157  1 000050   000000 702200 xent               TSX2  ! X66_AALT

       48      158    1           RETURN;

    158  1 000051   000000 702200 xent               TSX2  ! X66_ARET
       49      159    1   END KSU$CHARBIN;
       50      160        %EOD;

PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:8    
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$CHARBIN.
PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:9    

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BIN_NUM                   5-0-0/w PTR         r     1 @MAX_NUM
     4-0-0/w PTR         r     1 @TEXTC$                   *0-0-0/w UBIN        r     1 BIN_NUM
     6-0-0/w UBIN        r     1 IDX                       *0-0-0/w UBIN        r     1 MAX_NUM
     7-0-0/w UBIN        r     1 TABLEVAL                  *0-0-0/w PTR         r     1 TEXTC$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$SR_NON_DEC$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4608)  r     1 B$SR_NON_DEC               0-0-0/w ASTR(9)     r     1 TEXTC


   Procedure KSU$CHARBIN requires 42 words for executable code.
   Procedure KSU$CHARBIN requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KSU$CHARBIN File=KSU$UTIL.:E05TSI                             WED 07/30/97 01:46 Page:11   
          MINI XREF LISTING

B$SR_NON_DEC
       140**DCL       148>>CALLBLT
B$SR_NON_DEC$
       139**DCL       140--IMP-PTR   148>>CALLBLT
BIN_NUM
        21**DCL         8--PROC      154<<CALLBLT   155>>IF
IDX
       145**DCL       148<<CALLBLT   149>>IF
MAX_NUM
        26**DCL         8--PROC      155>>IF
TABLEVAL
       146**DCL       148<<CALLBLT
TEXTC.SIZE
        24**DCL        25--IMP-SIZ   148>>CALLBLT   149>>IF        149>>IF        149>>IF        149>>IF
       154>>CALLBLT
TEXTC.TEXT
        25**DCL       148>>CALLBLT   149>>IF        154>>CALLBLT
TEXTC$
        22**DCL         8--PROC       23--IMP-PTR   148>>CALLBLT   148>>CALLBLT   149>>IF        149>>IF
       149>>IF        149>>IF        149>>IF        154>>CALLBLT   154>>CALLBLT

PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:12   
       51        1        /*M* KSU$BLD_LINCNFG - Routine to fill in a KL$LINCNFG structure from
       52        2             a NETCON parse tree.
       53        3        */
       54        4        /*T***********************************************************/
       55        5        /*T*                                                         */
       56        6        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       57        7        /*T*                                                         */
       58        8        /*T***********************************************************/
       59        9        KSU$BLD_LINCNFG: PROC(TOP$,LINCNFG) ALTRET;
       60       10        /**/
       61       11        %INCLUDE CP_6;
       62       92        %INCLUDE XU_MACRO_C;
       63     3198        %INCLUDE KL_MACRO_C;
       64     6550        %INCLUDE KL_CONFIG_M;
       65     7312        %INCLUDE KS_SUBS_C;
       66     7555        %INCLUDE KS_PERR_C;
       67     7622        /**/
       68     7623    1   DCL TOP$ PTR;
       69     7624        %KL$LINCNFG (NAME=LINCNFG,STCLASS=PARAM);
       70     7782        /**/
       71     7783    1   DCL KSU$INIT_LINCNFG ENTRY(1);
       72     7784    1   DCL KSU$INIT_DEFCNFG ENTRY(1);
       73     7785    1   DCL KSU$CHARBIN ENTRY(3) ALTRET;
       74     7786    1   DCL KSE$ERRMSG ENTRY(4);
       75     7787        /**/
       76     7788    1   DCL HEX_DIGITS CHAR(0) CONSTANT INIT('0123456789ABCDEF');
       77     7789    1   DCL HEX_CHAR CHAR(1);
       78     7790    1   DCL HEX_DIGIT UBIN;
       79     7791    1   DCL I UBIN;
       80     7792    1   DCL J SBIN;
       81     7793    1   DCL BLK$ PTR;
       82     7794    1   DCL TEMP$ PTR;
       83     7795    1   DCL TEMP UBIN;
       84     7796    1   DCL SIZ_TBL(0:16) UBIN WORD STATIC INIT(0,1,2,4,8,16,32,64,128,256,512,1024,
       85     7797    1                                           2048,4096,8192,16384,32768);
       86     7798        /**/
       87     7799        %PARSE$OUT (NAME=OUT$BLK,STCLASS="BASED(TOP$)");
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:13   
       88     7844        %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
       89     7882        /**/
       90     7883        %EJECT;
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:14   
       91     7884    1        IF LINCNFG.NA.CNFG_EXISTS = '0'B THEN
       92     7885    1           CALL KSU$INIT_LINCNFG(LINCNFG);
       93     7886    1        GOTO COMMON;
       94     7887    1   KSU$BLD_LINCNFG_DEF: ENTRY(TOP$,LINCNFG) ALTRET;
       95     7888    1        CALL KSU$INIT_DEFCNFG(LINCNFG);
       96     7889    1   COMMON:
       97     7890    2        DO I = 1 TO OUT$BLK.NSUBLKS - 1;
       98     7891    2           BLK$ = OUT$BLK.SUBLK$(I);
       99     7892    3           DO CASE(BLK$->OUT$BLK.CODE);
      100     7893    3              CASE(%KS_SPEED);
      101     7894    4                 IF BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE = %KS_SPEED_AUTO THEN DO;
      102     7895    4                    LINCNFG.KHA.SPEED_AUTO = %KS_YES_BIT;
      103     7896        /*
      104     7897             set speed to zero if auto speed is selected
      105     7898        */
      106     7899    4   LINCNFG.KHA.SPEED.BYT(0) = -1;
      107     7900    4   LINCNFG.KHA.SPEED.BYT(1) = -1;
      108     7901    4                    END;  /* IF */
      109     7902    4                 ELSE DO;
      110     7903    4                    LINCNFG.KHA.SPEED_AUTO = %KS_NO_BIT;
      111     7904    4                    TEMP = BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE;
      112     7905    4                    LINCNFG.KHA.SPEED.BYT(0) = TEMP/256;
      113     7906    4                    LINCNFG.KHA.SPEED.BYT(1) = MOD(TEMP,256);
      114     7907    4                    END;  /* ELSE */
      115     7908    3              CASE(%KS_LOGON);
      116     7909    4                 IF BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE = %KS_NONE THEN DO;
      117     7910    4                    LINCNFG.NA.AUTLGN = %KS_NO_BIT;
      118     7911    4                    LINCNFG.LGN.LGNSTRING = ' ';
      119     7912    4                    LINCNFG.LGN.LGNSIZE = 0;
      120     7913    4                    END;  /* IF */
      121     7914    4                 ELSE DO;
      122     7915    4                    LINCNFG.LGN.LGNSTRING = ' ';
      123     7916    4                    LINCNFG.NA.AUTLGN = %KS_YES_BIT;
      124     7917    4                    LINCNFG.LGN.LGNSIZE = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.COUNT;
      125     7918    4                    LINCNFG.LGN.LGNSTRING = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;
      126     7919    4                    END;  /* ELSE */
      127     7920    3              CASE(%KS_FLOWCONTROL);
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:15   
      128     7921    3                 LINCNFG.KHA.FLWCNTRL = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2)
              7921                          ;
      129     7922    3              CASE(%KS_INPUT);
      130     7923    3                 LINCNFG.KHA.INP = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      131     7924    3              CASE(%KS_OUTPUT);
      132     7925    3                 LINCNFG.KHA.OTP = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      133     7926    3              CASE(%KS_SALUTATION);
      134     7927    3                 LINCNFG.NA.SNDSLT = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      135     7928    3              CASE(%KS_DELAY);
      136     7929    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      137     7930    3                 LINCNFG.KHA.DELAY.BYT(0) = TEMP/256;
      138     7931    3                 LINCNFG.KHA.DELAY.BYT(1) = MOD(TEMP,256);
      139     7932    3              CASE(%KS_BUFSIZE);
      140     7933        /*N* The following code checks that the BUFSIZE specified is <= 16384.
      141     7934             This 16384 is the max buffer size that may be acquired via the buddy
      142     7935             space manager (in D00).  We may want to make that max buffer size
      143     7936             be a control parameter on a per FEP or per handler basis.  If so,
      144     7937             the following check needs to be replaced with code that will find
      145     7938             out this max value and use that for the compare.
      146     7939        */
      147     7940    3                 CALL KSU$CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXTC$,16384)
      148     7941    4                 WHENRETURN DO;
      149     7942    4                    LINCNFG.KHA.BUFSIZE.BYT(0) = TEMP/256;
      150     7943    4                    LINCNFG.KHA.BUFSIZE.BYT(1) = MOD(TEMP,256);
      151     7944    4                 END;
      152     7945    4                 WHENALTRETURN DO;
      153     7946    4                    CALL KSE$ERRMSG (%E$KS_BUFSIZE_TOO_BIG);
      154     7947                         /*E* ERROR: KSN-E$KS_BUFSIZE_TOO_BIG-0
      155     7948                              MESSAGE: BUFSIZE may not be set greater than 16384. */
      156     7949    4                    ALTRETURN;
      157     7950    4                 END;
      158     7951    3              CASE(%KS_REENABLE);
      159     7952    3                 LINCNFG.KHA.RE_ENB = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      160     7953    3              CASE(%KS_REMOTE);
      161     7954    3                 LINCNFG.KHA.RMTHST = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      162     7955    3              CASE(%KS_ENABLE_OPT);
      163     7956    3                 LINCNFG.KHA.ENB = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:16   
      164     7957    3              CASE(%KS_ECHOLOGON);
      165     7958    3                 LINCNFG.NA.ECHLGN = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      166     7959    3              CASE(%KS_LOGONTIMEOUT);
      167     7960    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      168     7961    3                 LINCNFG.NA.LGNTIMOUT.BYT(0) = TEMP/256;
      169     7962    3                 LINCNFG.NA.LGNTIMOUT.BYT(1) = MOD(TEMP,256);
      170     7963    3              CASE(%KS_READTIMEOUT);
      171     7964    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      172     7965    3                 LINCNFG.KHA.REDTIMEOUT.BYT(0) = TEMP/256;
      173     7966    3                 LINCNFG.KHA.REDTIMEOUT.BYT(1) = MOD(TEMP,256);
      174     7967    3              CASE(%KS_HARDWIRE);
      175     7968    3                 LINCNFG.KHA.HARD = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      176     7969    3              CASE(%KS_CLOCKING);
      177     7970    3                 LINCNFG.KHA.CLK = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      178     7971    3              CASE(%KS_DROPDTR);
      179     7972    3                 LINCNFG.KHA.DRPDTR = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      180     7973    3               CASE (%KS_KLLHSTDWN);
      181     7974    3                 LINCNFG.KHA.KLLHSTDWN = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2
              7974                          );
      182     7975    3               CASE (%KS_DSBHSTDWN);
      183     7976    3                 LINCNFG.KHA.DSBHSTDWN = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2
              7976                          );
      184     7977    3              CASE(%KS_RESOURCE);
      185     7978    3                 LINCNFG.NA.RES = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;
      186     7979    3                 LINCNFG.NA.RESPRES = '1'B;
      187     7980    3              CASE(%KS_ATTR);
      188     7981    3                 TEMP$ = BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0);
      189     7982    3                 TEMP = 0;
      190     7983    4                 DO J = 0 TO TEMP$->OUT$SYM.COUNT - 1;
      191     7984    4                    HEX_CHAR = SUBSTR(TEMP$->OUT$SYM.TEXT,J,1);
      192     7985    4                    CALL INDEX(HEX_DIGIT,HEX_CHAR,HEX_DIGITS);
      193     7986    4                    TEMP = TEMP * 16 + HEX_DIGIT;
      194     7987    4                    END;  /* DO J */
      195     7988    3                 LINCNFG.NA.ATTRPRES = '1'B;
      196     7989    3                 LINCNFG.NA.ATTR.BYT(0) = BINBIT(TEMP,16);
      197     7990    3                 LINCNFG.NA.ATTR.BYT(1) = BINBIT(TEMP,8);
      198     7991    3              CASE(%KS_PROFILE);
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:17   
      199     7992    4                 IF BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE = %KS_NONE THEN DO;
      200     7993    4                    LINCNFG.NA.PROFILE = '00'B;
      201     7994    4                    LINCNFG.PRO.PROTXT = ' ';
      202     7995    4                    LINCNFG.PRO.PROSIZE = 0;
      203     7996    4                    END;  /* IF CODE = NONE */
      204     7997    4                 ELSE DO;
      205     7998    4                    LINCNFG.PRO.PROTXT = ' ';
      206     7999    4                    LINCNFG.NA.PROFILE = '10'B;
      207     8000    4                    LINCNFG.PRO.PROSIZE = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.COUNT;
      208     8001    4                    LINCNFG.PRO.PROTXT = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;
      209     8002    4                    END;  /* ELSE */
      210     8003    3              CASE(%KS_BLOCK);
      211     8004    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      212     8005    3                 LINCNFG.KHA.BLOCK.BYT(0) = TEMP/256;
      213     8006    3                 LINCNFG.KHA.BLOCK.BYT(1) = MOD(TEMP,256);
      214     8007    3              CASE(%KS_UNBLOCK);
      215     8008    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      216     8009    3                 LINCNFG.KHA.UNBLOCK.BYT(0) = TEMP/256;
      217     8010    3                 LINCNFG.KHA.UNBLOCK.BYT(1) = MOD(TEMP,256);
      218     8011    3              CASE(%KS_TPTIMEOUT);
      219     8012    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      220     8013    3                 LINCNFG.KHA.TPTIMOUT.BYT(0) = TEMP/256;
      221     8014    3                 LINCNFG.KHA.TPTIMOUT.BYT(1) = MOD(TEMP,256);
      222     8015    3              CASE(%KS_DEBUG);
      223     8016    3                 LINCNFG.KHA.DBG = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      224     8017    3              CASE(%KS_RMTDBG);
      225     8018    3                 LINCNFG.NA.RMTDBG = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      226     8019    3              CASE(%KS_BRKRQ);
      227     8020    3                 LINCNFG.KHA.BRKRQ = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);
      228     8021    3              END;  /* DO CASE */
      229     8022    2           END;  /* DO I */
      230     8023    1        RETURN;
      231     8024    1   END KSU$BLD_LINCNFG;
      232     8025        %EOD;

PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:18   
--  Include file information  --

   KS_PERR_C.:E05TOU  is referenced.
   KS_SUBS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$BLD_LINCNFG.

   Procedure KSU$BLD_LINCNFG requires 561 words for executable code.
   Procedure KSU$BLD_LINCNFG requires 16 words of local(AUTO) storage.

PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:19   

 Object Unit name= KSU$BLD_LINCNFG                            File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:46:40.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      4      4  KSU$BLD_LINCNFG
    2   Data  even  none    17     21  KSU$BLD_LINCNFG
    3   Proc  even  none   561   1061  KSU$BLD_LINCNFG
    4  RoData even  none     6      6  KSU$BLD_LINCNFG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  KSU$BLD_LINCNFG
     3     13          yes     yes      Std        2  KSU$BLD_LINCNFG_DEF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KSU$INIT_LINCNFG
         yes           Std       1 KSU$INIT_DEFCNFG
 yes     yes           Std       3 KSU$CHARBIN
         yes           Std       4 KSE$ERRMSG
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:20   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:21   


       51        1        /*M* KSU$BLD_LINCNFG - Routine to fill in a KL$LINCNFG structure from
       52        2             a NETCON parse tree.
       53        3        */
       54        4        /*T***********************************************************/
       55        5        /*T*                                                         */
       56        6        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       57        7        /*T*                                                         */
       58        8        /*T***********************************************************/
       59        9        KSU$BLD_LINCNFG: PROC(TOP$,LINCNFG) ALTRET;

      9  3 000000   000000 700200 xent  KSU$BLD_LIN* TSX0  ! X66_AUTO_2
         3 000001   000020 000002                    ZERO    16,2

       60       10        /**/
       61       11        %INCLUDE CP_6;
       62       92        %INCLUDE XU_MACRO_C;
       63     3198        %INCLUDE KL_MACRO_C;
       64     6550        %INCLUDE KL_CONFIG_M;
       65     7312        %INCLUDE KS_SUBS_C;
       66     7555        %INCLUDE KS_PERR_C;
       67     7622        /**/
       68     7623    1   DCL TOP$ PTR;
       69     7624        %KL$LINCNFG (NAME=LINCNFG,STCLASS=PARAM);
       70     7782        /**/
       71     7783    1   DCL KSU$INIT_LINCNFG ENTRY(1);
       72     7784    1   DCL KSU$INIT_DEFCNFG ENTRY(1);
       73     7785    1   DCL KSU$CHARBIN ENTRY(3) ALTRET;
       74     7786    1   DCL KSE$ERRMSG ENTRY(4);
       75     7787        /**/
       76     7788    1   DCL HEX_DIGITS CHAR(0) CONSTANT INIT('0123456789ABCDEF');
       77     7789    1   DCL HEX_CHAR CHAR(1);
       78     7790    1   DCL HEX_DIGIT UBIN;
       79     7791    1   DCL I UBIN;
       80     7792    1   DCL J SBIN;
       81     7793    1   DCL BLK$ PTR;
       82     7794    1   DCL TEMP$ PTR;
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:22   
       83     7795    1   DCL TEMP UBIN;
       84     7796    1   DCL SIZ_TBL(0:16) UBIN WORD STATIC INIT(0,1,2,4,8,16,32,64,128,256,512,1024,
       85     7797    1                                           2048,4096,8192,16384,32768);
       86     7798        /**/
       87     7799        %PARSE$OUT (NAME=OUT$BLK,STCLASS="BASED(TOP$)");
       88     7844        %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
       89     7882        /**/
       90     7883        %EJECT;
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:23   
       91     7884    1        IF LINCNFG.NA.CNFG_EXISTS = '0'B THEN

   7884  3 000002   200004 470500                    LDP0    @LINCNFG,,AUTO
         3 000003   000004 236100                    LDQ     4,,PR0
         3 000004   000002 316007                    CANQ    2,DL
         3 000005   000012 601000 3                  TNZ     s:7886

       92     7885    1           CALL KSU$INIT_LINCNFG(LINCNFG);

   7885  3 000006   200004 630500                    EPPR0   @LINCNFG,,AUTO
         3 000007   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000010   000000 701000 xent               TSX1    KSU$INIT_LINCNFG
         3 000011   000000 011000                    NOP     0

       93     7886    1        GOTO COMMON;

   7886  3 000012   000021 710000 3                  TRA     COMMON

       94     7887    1   KSU$BLD_LINCNFG_DEF: ENTRY(TOP$,LINCNFG) ALTRET;

   7887  3 000013   000000 700200 xent  KSU$BLD_LIN* TSX0  ! X66_AUTO_2
         3 000014   000020 000002                    ZERO    16,2

       95     7888    1        CALL KSU$INIT_DEFCNFG(LINCNFG);

   7888  3 000015   200004 630500                    EPPR0   @LINCNFG,,AUTO
         3 000016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000017   000000 701000 xent               TSX1    KSU$INIT_DEFCNFG
         3 000020   000000 011000                    NOP     0

       96     7889    1   COMMON:
       97     7890    2        DO I = 1 TO OUT$BLK.NSUBLKS - 1;

   7890  3 000021   000001 235007       COMMON       LDA     1,DL
         3 000022   200007 755100                    STA     I,,AUTO
         3 000023   001051 710000 3                  TRA     s:8022+3

PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:24   
       98     7891    2           BLK$ = OUT$BLK.SUBLK$(I);

   7891  3 000024   200003 470500                    LDP0    @TOP$,,AUTO
         3 000025   000000 471500                    LDP1    0,,PR0
         3 000026   200007 720100                    LXL0    I,,AUTO
         3 000027   100003 236110                    LDQ     3,X0,PR1
         3 000030   200011 756100                    STQ     BLK$,,AUTO

       99     7892    3           DO CASE(BLK$->OUT$BLK.CODE);

   7892  3 000031   200011 473500                    LDP3    BLK$,,AUTO
         3 000032   300000 721100                    LXL1    0,,PR3
         3 000033   000035 101003                    CMPX1   29,DU
         3 000034   000036 602011 3                  TNC     s:7892+5,X1
         3 000035   001046 710000 3                  TRA     s:8022
         3 000036   001046 710000 3                  TRA     s:8022
         3 000037   000073 710000 3                  TRA     s:7894
         3 000040   000135 710000 3                  TRA     s:7909
         3 000041   000212 710000 3                  TRA     s:7921
         3 000042   000224 710000 3                  TRA     s:7923
         3 000043   000236 710000 3                  TRA     s:7925
         3 000044   000250 710000 3                  TRA     s:7927
         3 000045   000262 710000 3                  TRA     s:7929
         3 000046   000310 710000 3                  TRA     s:7940
         3 000047   000347 710000 3                  TRA     s:7952
         3 000050   000361 710000 3                  TRA     s:7954
         3 000051   000373 710000 3                  TRA     s:7956
         3 000052   000405 710000 3                  TRA     s:7958
         3 000053   000417 710000 3                  TRA     s:7960
         3 000054   000446 710000 3                  TRA     s:7964
         3 000055   000475 710000 3                  TRA     s:7968
         3 000056   000507 710000 3                  TRA     s:7970
         3 000057   000521 710000 3                  TRA     s:7972
         3 000060   000557 710000 3                  TRA     s:7978
         3 000061   000572 710000 3                  TRA     s:7981
         3 000062   000706 710000 3                  TRA     s:8004
         3 000063   000735 710000 3                  TRA     s:8008
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:25   
         3 000064   000763 710000 3                  TRA     s:8012
         3 000065   001011 710000 3                  TRA     s:8016
         3 000066   001023 710000 3                  TRA     s:8018
         3 000067   000645 710000 3                  TRA     s:7992
         3 000070   000533 710000 3                  TRA     s:7974
         3 000071   000545 710000 3                  TRA     s:7976
         3 000072   001035 710000 3                  TRA     s:8020

      100     7893    3              CASE(%KS_SPEED);

      101     7894    4                 IF BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE = %KS_SPEED_AUTO THEN DO;

   7894  3 000073   300003 474500                    LDP4    3,,PR3
         3 000074   400000 722100                    LXL2    0,,PR4
         3 000075   000001 102003                    CMPX2   1,DU
         3 000076   000111 601000 3                  TNZ     s:7903

      102     7895    4                    LINCNFG.KHA.SPEED_AUTO = %KS_YES_BIT;

   7895  3 000077   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000100   500000 236100                    LDQ     0,,PR5
         3 000101   000000 376000 4                  ANQ     0
         3 000102   010000 276007                    ORQ     4096,DL
         3 000103   500000 756100                    STQ     0,,PR5

      103     7896        /*
      104     7897             set speed to zero if auto speed is selected
      105     7898        */
      106     7899    4   LINCNFG.KHA.SPEED.BYT(0) = -1;

   7899  3 000104   377000 236003                    LDQ     130560,DU
         3 000105   500004 256100                    ORSQ    4,,PR5

      107     7900    4   LINCNFG.KHA.SPEED.BYT(1) = -1;

   7900  3 000106   000377 236003                    LDQ     255,DU
         3 000107   500004 256100                    ORSQ    4,,PR5
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:26   

      108     7901    4                    END;  /* IF */

   7901  3 000110   001046 710000 3                  TRA     s:8022

      109     7902    4                 ELSE DO;

      110     7903    4                    LINCNFG.KHA.SPEED_AUTO = %KS_NO_BIT;

   7903  3 000111   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000112   000000 236000 4                  LDQ     0
         3 000113   500000 356100                    ANSQ    0,,PR5

      111     7904    4                    TEMP = BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE;

   7904  3 000114   300003 471500                    LDP1    3,,PR3
         3 000115   100003 474500                    LDP4    3,,PR1
         3 000116   400000 236100                    LDQ     0,,PR4
         3 000117   777777 376007                    ANQ     -1,DL
         3 000120   200013 756100                    STQ     TEMP,,AUTO

      112     7905    4                    LINCNFG.KHA.SPEED.BYT(0) = TEMP/256;

   7905  3 000121   000010 772000                    QRL     8
         3 000122   000033 736000                    QLS     27
         3 000123   500004 676100                    ERQ     4,,PR5
         3 000124   377000 376003                    ANQ     130560,DU
         3 000125   500004 656100                    ERSQ    4,,PR5

      113     7906    4                    LINCNFG.KHA.SPEED.BYT(1) = MOD(TEMP,256);

   7906  3 000126   200013 236100                    LDQ     TEMP,,AUTO
         3 000127   000377 376007                    ANQ     255,DL
         3 000130   000022 736000                    QLS     18
         3 000131   500004 676100                    ERQ     4,,PR5
         3 000132   000377 376003                    ANQ     255,DU
         3 000133   500004 656100                    ERSQ    4,,PR5
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:27   

      114     7907    4                    END;  /* ELSE */

   7907  3 000134   001046 710000 3                  TRA     s:8022

      115     7908    3              CASE(%KS_LOGON);

      116     7909    4                 IF BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE = %KS_NONE THEN DO;

   7909  3 000135   300003 474500                    LDP4    3,,PR3
         3 000136   400000 722100                    LXL2    0,,PR4
         3 000137   000002 102003                    CMPX2   2,DU
         3 000140   000156 601000 3                  TNZ     s:7915

      117     7910    4                    LINCNFG.NA.AUTLGN = %KS_NO_BIT;

   7910  3 000141   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000142   000000 236000 4                  LDQ     0
         3 000143   500004 356100                    ANSQ    4,,PR5

      118     7911    4                    LINCNFG.LGN.LGNSTRING = ' ';

   7911  3 000144   500012 236100                    LDQ     10,,PR5
         3 000145   000011 772000                    QRL     9
         3 000146   000777 376007                    ANQ     511,DL
         3 000147   000000 621006                    EAX1    0,QL
         3 000150   040140 100400                    MLR     fill='040'O
         3 000151   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000152   500012 600011                    ADSC9   10,,PR5                  cn=3,n=*X1

      119     7912    4                    LINCNFG.LGN.LGNSIZE = 0;

   7912  3 000153   000000 236003                    LDQ     0,DU
         3 000154   500012 552110                    STBQ    10,'10'O,PR5

      120     7913    4                    END;  /* IF */

PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:28   
   7913  3 000155   001046 710000 3                  TRA     s:8022

      121     7914    4                 ELSE DO;

      122     7915    4                    LINCNFG.LGN.LGNSTRING = ' ';

   7915  3 000156   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000157   500012 236100                    LDQ     10,,PR5
         3 000160   000011 772000                    QRL     9
         3 000161   000777 376007                    ANQ     511,DL
         3 000162   000000 623006                    EAX3    0,QL
         3 000163   040140 100400                    MLR     fill='040'O
         3 000164   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000165   500012 600013                    ADSC9   10,,PR5                  cn=3,n=*X3

      123     7916    4                    LINCNFG.NA.AUTLGN = %KS_YES_BIT;

   7916  3 000166   500004 236100                    LDQ     4,,PR5
         3 000167   000000 376000 4                  ANQ     0
         3 000170   010000 276007                    ORQ     4096,DL
         3 000171   500004 756100                    STQ     4,,PR5

      124     7917    4                    LINCNFG.LGN.LGNSIZE = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.COUNT;

   7917  3 000172   300003 471500                    LDP1    3,,PR3
         3 000173   100004 236100                    LDQ     4,,PR1
         3 000174   000022 772000                    QRL     18
         3 000175   500012 552110                    STBQ    10,'10'O,PR5

      125     7918    4                    LINCNFG.LGN.LGNSTRING = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;

   7918  3 000176   500012 236100                    LDQ     10,,PR5
         3 000177   000011 772000                    QRL     9
         3 000200   000777 376007                    ANQ     511,DL
         3 000201   300003 471500                    LDP1    3,,PR3
         3 000202   000000 621006                    EAX1    0,QL
         3 000203   100004 236100                    LDQ     4,,PR1
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:29   
         3 000204   000033 772000                    QRL     27
         3 000205   000000 622006                    EAX2    0,QL
         3 000206   040140 100540                    MLR     fill='040'O
         3 000207   100004 200012                    ADSC9   4,,PR1                   cn=1,n=*X2
         3 000210   500012 600011                    ADSC9   10,,PR5                  cn=3,n=*X1

      126     7919    4                    END;  /* ELSE */

   7919  3 000211   001046 710000 3                  TRA     s:8022

      127     7920    3              CASE(%KS_FLOWCONTROL);

      128     7921    3                LINCNFG.KHA.FLWCNTRL = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2)
              7921                          ;

   7921  3 000212   300003 474500                    LDP4    3,,PR3
         3 000213   400000 236100                    LDQ     0,,PR4
         3 000214   777777 376007                    ANQ     -1,DL
         3 000215   000042 736000                    QLS     34
         3 000216   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000217   000001 772000                    QRL     1
         3 000220   500000 676100                    ERQ     0,,PR5
         3 000221   300000 376003                    ANQ     98304,DU
         3 000222   500000 656100                    ERSQ    0,,PR5
         3 000223   001046 710000 3                  TRA     s:8022

      129     7922    3              CASE(%KS_INPUT);

      130     7923    3                 LINCNFG.KHA.INP = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7923  3 000224   300003 474500                    LDP4    3,,PR3
         3 000225   400000 236100                    LDQ     0,,PR4
         3 000226   777777 376007                    ANQ     -1,DL
         3 000227   000042 736000                    QLS     34
         3 000230   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000231   000003 772000                    QRL     3
         3 000232   500000 676100                    ERQ     0,,PR5
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:30   
         3 000233   060000 376003                    ANQ     24576,DU
         3 000234   500000 656100                    ERSQ    0,,PR5
         3 000235   001046 710000 3                  TRA     s:8022

      131     7924    3              CASE(%KS_OUTPUT);

      132     7925    3                 LINCNFG.KHA.OTP = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7925  3 000236   300003 474500                    LDP4    3,,PR3
         3 000237   400000 236100                    LDQ     0,,PR4
         3 000240   777777 376007                    ANQ     -1,DL
         3 000241   000042 736000                    QLS     34
         3 000242   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000243   000005 772000                    QRL     5
         3 000244   500000 676100                    ERQ     0,,PR5
         3 000245   014000 376003                    ANQ     6144,DU
         3 000246   500000 656100                    ERSQ    0,,PR5
         3 000247   001046 710000 3                  TRA     s:8022

      133     7926    3              CASE(%KS_SALUTATION);

      134     7927    3                 LINCNFG.NA.SNDSLT = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7927  3 000250   300003 474500                    LDP4    3,,PR3
         3 000251   400000 236100                    LDQ     0,,PR4
         3 000252   777777 376007                    ANQ     -1,DL
         3 000253   000042 736000                    QLS     34
         3 000254   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000255   000023 772000                    QRL     19
         3 000256   500004 676100                    ERQ     4,,PR5
         3 000257   300000 376007                    ANQ     98304,DL
         3 000260   500004 656100                    ERSQ    4,,PR5
         3 000261   001046 710000 3                  TRA     s:8022

      135     7928    3              CASE(%KS_DELAY);

      136     7929    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:31   

   7929  3 000262   300003 474500                    LDP4    3,,PR3
         3 000263   400004 236100                    LDQ     4,,PR4
         3 000264   000033 772000                    QRL     27
         3 000265   000000 622006                    EAX2    0,QL
         3 000266   000100 305540                    DTB
         3 000267   400004 230012                    NDSC9   4,,PR4                   cn=1,s=nosgn,sf=0,n=*X2
         3 000270   200014 000010                    NDSC9   TEMP+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000271   200015 235100                    LDA     TEMP+2,,AUTO
         3 000272   200013 755100                    STA     TEMP,,AUTO

      137     7930    3                 LINCNFG.KHA.DELAY.BYT(0) = TEMP/256;

   7930  3 000273   200013 236100                    LDQ     TEMP,,AUTO
         3 000274   000010 772000                    QRL     8
         3 000275   200004 471500                    LDP1    @LINCNFG,,AUTO
         3 000276   000011 736000                    QLS     9
         3 000277   100001 676100                    ERQ     1,,PR1
         3 000300   377000 376007                    ANQ     130560,DL
         3 000301   100001 656100                    ERSQ    1,,PR1

      138     7931    3                 LINCNFG.KHA.DELAY.BYT(1) = MOD(TEMP,256);

   7931  3 000302   200013 236100                    LDQ     TEMP,,AUTO
         3 000303   000377 376007                    ANQ     255,DL
         3 000304   100001 676100                    ERQ     1,,PR1
         3 000305   000377 376007                    ANQ     255,DL
         3 000306   100001 656100                    ERSQ    1,,PR1
         3 000307   001046 710000 3                  TRA     s:8022

      139     7932    3              CASE(%KS_BUFSIZE);

      140     7933        /*N* The following code checks that the BUFSIZE specified is <= 16384.
      141     7934             This 16384 is the max buffer size that may be acquired via the buddy
      142     7935             space manager (in D00).  We may want to make that max buffer size
      143     7936             be a control parameter on a per FEP or per handler basis.  If so,
      144     7937             the following check needs to be replaced with code that will find
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:32   
      145     7938             out this max value and use that for the compare.
      146     7939        */
      147     7940    3                 CALL KSU$CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXTC$,16384)

   7940  3 000310   300003 474500                    LDP4    3,,PR3
         3 000311   000002 236000 4                  LDQ     2
         3 000312   200016 756100                    STQ     TEMP+3,,AUTO
         3 000313   400003 631500                    EPPR1   3,,PR4
         3 000314   200015 451500                    STP1    TEMP+2,,AUTO
         3 000315   200013 634500                    EPPR4   TEMP,,AUTO
         3 000316   200014 454500                    STP4    TEMP+1,,AUTO
         3 000317   200014 630500                    EPPR0   TEMP+1,,AUTO
         3 000320   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000321   000000 701000 xent               TSX1    KSU$CHARBIN
         3 000322   000341 702000 3                  TSX2    s:7946

      148     7941    4                 WHENRETURN DO;

      149     7942    4                    LINCNFG.KHA.BUFSIZE.BYT(0) = TEMP/256;

   7942  3 000323   200013 236100                    LDQ     TEMP,,AUTO
         3 000324   000010 772000                    QRL     8
         3 000325   200004 470500                    LDP0    @LINCNFG,,AUTO
         3 000326   000033 736000                    QLS     27
         3 000327   000001 676100                    ERQ     1,,PR0
         3 000330   377000 376003                    ANQ     130560,DU
         3 000331   000001 656100                    ERSQ    1,,PR0

      150     7943    4                    LINCNFG.KHA.BUFSIZE.BYT(1) = MOD(TEMP,256);

   7943  3 000332   200013 236100                    LDQ     TEMP,,AUTO
         3 000333   000377 376007                    ANQ     255,DL
         3 000334   000022 736000                    QLS     18
         3 000335   000001 676100                    ERQ     1,,PR0
         3 000336   000377 376003                    ANQ     255,DU
         3 000337   000001 656100                    ERSQ    1,,PR0

PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:33   
      151     7944    4                 END;

   7944  3 000340   000346 710000 3                  TRA     s:7949+1

      152     7945    4                 WHENALTRETURN DO;

      153     7946    4                    CALL KSE$ERRMSG (%E$KS_BUFSIZE_TOO_BIG);

   7946  3 000341   000004 630400 4                  EPPR0   4
         3 000342   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000343   000000 701000 xent               TSX1    KSE$ERRMSG
         3 000344   000000 011000                    NOP     0

      154     7947                         /*E* ERROR: KSN-E$KS_BUFSIZE_TOO_BIG-0
      155     7948                              MESSAGE: BUFSIZE may not be set greater than 16384. */
      156     7949    4                    ALTRETURN;

   7949  3 000345   000000 702200 xent               TSX2  ! X66_AALT
         3 000346   001046 710000 3                  TRA     s:8022

      157     7950    4                 END;
      158     7951    3              CASE(%KS_REENABLE);

      159     7952    3                 LINCNFG.KHA.RE_ENB = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7952  3 000347   300003 474500                    LDP4    3,,PR3
         3 000350   400000 236100                    LDQ     0,,PR4
         3 000351   777777 376007                    ANQ     -1,DL
         3 000352   000042 736000                    QLS     34
         3 000353   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000354   000012 772000                    QRL     10
         3 000355   500000 676100                    ERQ     0,,PR5
         3 000356   000300 376003                    ANQ     192,DU
         3 000357   500000 656100                    ERSQ    0,,PR5
         3 000360   001046 710000 3                  TRA     s:8022

      160     7953    3              CASE(%KS_REMOTE);
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:34   

      161     7954    3                 LINCNFG.KHA.RMTHST = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7954  3 000361   300003 474500                    LDP4    3,,PR3
         3 000362   400000 236100                    LDQ     0,,PR4
         3 000363   777777 376007                    ANQ     -1,DL
         3 000364   000042 736000                    QLS     34
         3 000365   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000366   000025 772000                    QRL     21
         3 000367   500000 676100                    ERQ     0,,PR5
         3 000370   060000 376007                    ANQ     24576,DL
         3 000371   500000 656100                    ERSQ    0,,PR5
         3 000372   001046 710000 3                  TRA     s:8022

      162     7955    3              CASE(%KS_ENABLE_OPT);

      163     7956    3                 LINCNFG.KHA.ENB = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7956  3 000373   300003 474500                    LDP4    3,,PR3
         3 000374   400000 236100                    LDQ     0,,PR4
         3 000375   777777 376007                    ANQ     -1,DL
         3 000376   000042 736000                    QLS     34
         3 000377   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000400   000031 772000                    QRL     25
         3 000401   500000 676100                    ERQ     0,,PR5
         3 000402   003000 376007                    ANQ     1536,DL
         3 000403   500000 656100                    ERSQ    0,,PR5
         3 000404   001046 710000 3                  TRA     s:8022

      164     7957    3              CASE(%KS_ECHOLOGON);

      165     7958    3                 LINCNFG.NA.ECHLGN = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7958  3 000405   300003 474500                    LDP4    3,,PR3
         3 000406   400000 236100                    LDQ     0,,PR4
         3 000407   777777 376007                    ANQ     -1,DL
         3 000410   000042 736000                    QLS     34
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:35   
         3 000411   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000412   000025 772000                    QRL     21
         3 000413   500004 676100                    ERQ     4,,PR5
         3 000414   060000 376007                    ANQ     24576,DL
         3 000415   500004 656100                    ERSQ    4,,PR5
         3 000416   001046 710000 3                  TRA     s:8022

      166     7959    3              CASE(%KS_LOGONTIMEOUT);

      167     7960    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);

   7960  3 000417   300003 474500                    LDP4    3,,PR3
         3 000420   400004 236100                    LDQ     4,,PR4
         3 000421   000033 772000                    QRL     27
         3 000422   000000 622006                    EAX2    0,QL
         3 000423   000100 305540                    DTB
         3 000424   400004 230012                    NDSC9   4,,PR4                   cn=1,s=nosgn,sf=0,n=*X2
         3 000425   200014 000010                    NDSC9   TEMP+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000426   200015 235100                    LDA     TEMP+2,,AUTO
         3 000427   200013 755100                    STA     TEMP,,AUTO

      168     7961    3                 LINCNFG.NA.LGNTIMOUT.BYT(0) = TEMP/256;

   7961  3 000430   200013 236100                    LDQ     TEMP,,AUTO
         3 000431   000010 772000                    QRL     8
         3 000432   200004 471500                    LDP1    @LINCNFG,,AUTO
         3 000433   000033 736000                    QLS     27
         3 000434   100005 676100                    ERQ     5,,PR1
         3 000435   377000 376003                    ANQ     130560,DU
         3 000436   100005 656100                    ERSQ    5,,PR1

      169     7962    3                 LINCNFG.NA.LGNTIMOUT.BYT(1) = MOD(TEMP,256);

   7962  3 000437   200013 236100                    LDQ     TEMP,,AUTO
         3 000440   000377 376007                    ANQ     255,DL
         3 000441   000022 736000                    QLS     18
         3 000442   100005 676100                    ERQ     5,,PR1
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:36   
         3 000443   000377 376003                    ANQ     255,DU
         3 000444   100005 656100                    ERSQ    5,,PR1
         3 000445   001046 710000 3                  TRA     s:8022

      170     7963    3              CASE(%KS_READTIMEOUT);

      171     7964    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);

   7964  3 000446   300003 474500                    LDP4    3,,PR3
         3 000447   400004 236100                    LDQ     4,,PR4
         3 000450   000033 772000                    QRL     27
         3 000451   000000 622006                    EAX2    0,QL
         3 000452   000100 305540                    DTB
         3 000453   400004 230012                    NDSC9   4,,PR4                   cn=1,s=nosgn,sf=0,n=*X2
         3 000454   200014 000010                    NDSC9   TEMP+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000455   200015 235100                    LDA     TEMP+2,,AUTO
         3 000456   200013 755100                    STA     TEMP,,AUTO

      172     7965    3                 LINCNFG.KHA.REDTIMEOUT.BYT(0) = TEMP/256;

   7965  3 000457   200013 236100                    LDQ     TEMP,,AUTO
         3 000460   000010 772000                    QRL     8
         3 000461   200004 471500                    LDP1    @LINCNFG,,AUTO
         3 000462   000033 736000                    QLS     27
         3 000463   100002 676100                    ERQ     2,,PR1
         3 000464   377000 376003                    ANQ     130560,DU
         3 000465   100002 656100                    ERSQ    2,,PR1

      173     7966    3                 LINCNFG.KHA.REDTIMEOUT.BYT(1) = MOD(TEMP,256);

   7966  3 000466   200013 236100                    LDQ     TEMP,,AUTO
         3 000467   000377 376007                    ANQ     255,DL
         3 000470   000022 736000                    QLS     18
         3 000471   100002 676100                    ERQ     2,,PR1
         3 000472   000377 376003                    ANQ     255,DU
         3 000473   100002 656100                    ERSQ    2,,PR1
         3 000474   001046 710000 3                  TRA     s:8022
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:37   

      174     7967    3              CASE(%KS_HARDWIRE);

      175     7968    3                 LINCNFG.KHA.HARD = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7968  3 000475   300003 474500                    LDP4    3,,PR3
         3 000476   400000 236100                    LDQ     0,,PR4
         3 000477   777777 376007                    ANQ     -1,DL
         3 000500   000042 736000                    QLS     34
         3 000501   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000502   000014 772000                    QRL     12
         3 000503   500000 676100                    ERQ     0,,PR5
         3 000504   000060 376003                    ANQ     48,DU
         3 000505   500000 656100                    ERSQ    0,,PR5
         3 000506   001046 710000 3                  TRA     s:8022

      176     7969    3              CASE(%KS_CLOCKING);

      177     7970    3                 LINCNFG.KHA.CLK = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7970  3 000507   300003 474500                    LDP4    3,,PR3
         3 000510   400000 236100                    LDQ     0,,PR4
         3 000511   777777 376007                    ANQ     -1,DL
         3 000512   000042 736000                    QLS     34
         3 000513   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000514   000016 772000                    QRL     14
         3 000515   500000 676100                    ERQ     0,,PR5
         3 000516   000014 376003                    ANQ     12,DU
         3 000517   500000 656100                    ERSQ    0,,PR5
         3 000520   001046 710000 3                  TRA     s:8022

      178     7971    3              CASE(%KS_DROPDTR);

      179     7972    3                 LINCNFG.KHA.DRPDTR = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   7972  3 000521   300003 474500                    LDP4    3,,PR3
         3 000522   400000 236100                    LDQ     0,,PR4
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:38   
         3 000523   777777 376007                    ANQ     -1,DL
         3 000524   000042 736000                    QLS     34
         3 000525   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000526   000020 772000                    QRL     16
         3 000527   500000 676100                    ERQ     0,,PR5
         3 000530   000003 376003                    ANQ     3,DU
         3 000531   500000 656100                    ERSQ    0,,PR5
         3 000532   001046 710000 3                  TRA     s:8022

      180     7973    3               CASE (%KS_KLLHSTDWN);

      181     7974    3                LINCNFG.KHA.KLLHSTDWN = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2
              7974                          );

   7974  3 000533   300003 474500                    LDP4    3,,PR3
         3 000534   400000 236100                    LDQ     0,,PR4
         3 000535   777777 376007                    ANQ     -1,DL
         3 000536   000042 736000                    QLS     34
         3 000537   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000540   000036 772000                    QRL     30
         3 000541   500000 676100                    ERQ     0,,PR5
         3 000542   000060 376007                    ANQ     48,DL
         3 000543   500000 656100                    ERSQ    0,,PR5
         3 000544   001046 710000 3                  TRA     s:8022

      182     7975    3               CASE (%KS_DSBHSTDWN);

      183     7976    3                LINCNFG.KHA.DSBHSTDWN = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2
              7976                          );

   7976  3 000545   300003 474500                    LDP4    3,,PR3
         3 000546   400000 236100                    LDQ     0,,PR4
         3 000547   777777 376007                    ANQ     -1,DL
         3 000550   000042 736000                    QLS     34
         3 000551   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000552   000034 772000                    QRL     28
         3 000553   500000 676100                    ERQ     0,,PR5
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:39   
         3 000554   000300 376007                    ANQ     192,DL
         3 000555   500000 656100                    ERSQ    0,,PR5
         3 000556   001046 710000 3                  TRA     s:8022

      184     7977    3              CASE(%KS_RESOURCE);

      185     7978    3                 LINCNFG.NA.RES = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;

   7978  3 000557   300003 474500                    LDP4    3,,PR3
         3 000560   400004 236100                    LDQ     4,,PR4
         3 000561   000033 772000                    QRL     27
         3 000562   000000 622006                    EAX2    0,QL
         3 000563   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000564   040100 100540                    MLR     fill='040'O
         3 000565   400004 200012                    ADSC9   4,,PR4                   cn=1,n=*X2
         3 000566   500006 000002                    ADSC9   6,,PR5                   cn=0,n=2

      186     7979    3                 LINCNFG.NA.RESPRES = '1'B;

   7979  3 000567   000200 236007                    LDQ     128,DL
         3 000570   500004 256100                    ORSQ    4,,PR5
         3 000571   001046 710000 3                  TRA     s:8022

      187     7980    3              CASE(%KS_ATTR);

      188     7981    3                 TEMP$ = BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0);

   7981  3 000572   300003 474500                    LDP4    3,,PR3
         3 000573   400003 236100                    LDQ     3,,PR4
         3 000574   200012 756100                    STQ     TEMP$,,AUTO

      189     7982    3                 TEMP = 0;

   7982  3 000575   200013 450100                    STZ     TEMP,,AUTO

      190     7983    4                 DO J = 0 TO TEMP$->OUT$SYM.COUNT - 1;

PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:40   
   7983  3 000576   200010 450100                    STZ     J,,AUTO
         3 000577   000620 710000 3                  TRA     s:7987+1

      191     7984    4                    HEX_CHAR = SUBSTR(TEMP$->OUT$SYM.TEXT,J,1);

   7984  3 000600   200012 470500                    LDP0    TEMP$,,AUTO
         3 000601   000004 236100                    LDQ     4,,PR0
         3 000602   000033 772000                    QRL     27
         3 000603   200010 235100                    LDA     J,,AUTO
         3 000604   040100 100505                    MLR     fill='040'O
         3 000605   000004 200001                    ADSC9   4,A,PR0                  cn=1,n=1
         3 000606   200005 000001                    ADSC9   HEX_CHAR,,AUTO           cn=0,n=1

      192     7985    4                    CALL INDEX(HEX_DIGIT,HEX_CHAR,HEX_DIGITS);

   7985  3 000607   000100 124400                    SCM     mask='000'O
         3 000610   000000 000020 1                  ADSC9   HEX_DIGITS               cn=0,n=16
         3 000611   200005 000001                    ADSC9   HEX_CHAR,,AUTO           cn=0,n=1
         3 000612   200006 000100                    ARG     HEX_DIGIT,,AUTO

      193     7986    4                    TEMP = TEMP * 16 + HEX_DIGIT;

   7986  3 000613   200013 236100                    LDQ     TEMP,,AUTO
         3 000614   000004 736000                    QLS     4
         3 000615   200006 036100                    ADLQ    HEX_DIGIT,,AUTO
         3 000616   200013 756100                    STQ     TEMP,,AUTO

      194     7987    4                    END;  /* DO J */

   7987  3 000617   200010 054100                    AOS     J,,AUTO
         3 000620   200012 470500                    LDP0    TEMP$,,AUTO
         3 000621   000004 236100                    LDQ     4,,PR0
         3 000622   000033 772000                    QRL     27
         3 000623   200010 116100                    CMPQ    J,,AUTO
         3 000624   000600 605400 3                  TPNZ    s:7984

      195     7988    3                 LINCNFG.NA.ATTRPRES = '1'B;
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:41   

   7988  3 000625   200004 471500                    LDP1    @LINCNFG,,AUTO
         3 000626   000100 236007                    LDQ     64,DL
         3 000627   100004 256100                    ORSQ    4,,PR1

      196     7989    3                 LINCNFG.NA.ATTR.BYT(0) = BINBIT(TEMP,16);

   7989  3 000630   200013 236100                    LDQ     TEMP,,AUTO
         3 000631   000024 736000                    QLS     20
         3 000632   000023 772000                    QRL     19
         3 000633   100005 676100                    ERQ     5,,PR1
         3 000634   377000 376007                    ANQ     130560,DL
         3 000635   100005 656100                    ERSQ    5,,PR1

      197     7990    3                 LINCNFG.NA.ATTR.BYT(1) = BINBIT(TEMP,8);

   7990  3 000636   200013 236100                    LDQ     TEMP,,AUTO
         3 000637   000034 736000                    QLS     28
         3 000640   000034 772000                    QRL     28
         3 000641   100005 676100                    ERQ     5,,PR1
         3 000642   000377 376007                    ANQ     255,DL
         3 000643   100005 656100                    ERSQ    5,,PR1
         3 000644   001046 710000 3                  TRA     s:8022

      198     7991    3              CASE(%KS_PROFILE);

      199     7992    4                 IF BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE = %KS_NONE THEN DO;

   7992  3 000645   300003 474500                    LDP4    3,,PR3
         3 000646   400000 722100                    LXL2    0,,PR4
         3 000647   000002 102003                    CMPX2   2,DU
         3 000650   000662 601000 3                  TNZ     s:7998

      200     7993    4                    LINCNFG.NA.PROFILE = '00'B;

   7993  3 000651   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000652   000005 236000 4                  LDQ     5
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:42   
         3 000653   500004 356100                    ANSQ    4,,PR5

      201     7994    4                    LINCNFG.PRO.PROTXT = ' ';

   7994  3 000654   040100 100400                    MLR     fill='040'O
         3 000655   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000656   500007 600013                    ADSC9   7,,PR5                   cn=3,n=11

      202     7995    4                    LINCNFG.PRO.PROSIZE = 0;

   7995  3 000657   000000 236003                    LDQ     0,DU
         3 000660   500007 552110                    STBQ    7,'10'O,PR5

      203     7996    4                    END;  /* IF CODE = NONE */

   7996  3 000661   001046 710000 3                  TRA     s:8022

      204     7997    4                 ELSE DO;

      205     7998    4                    LINCNFG.PRO.PROTXT = ' ';

   7998  3 000662   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 000663   040100 100400                    MLR     fill='040'O
         3 000664   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000665   500007 600013                    ADSC9   7,,PR5                   cn=3,n=11

      206     7999    4                    LINCNFG.NA.PROFILE = '10'B;

   7999  3 000666   500004 236100                    LDQ     4,,PR5
         3 000667   000005 376000 4                  ANQ     5
         3 000670   000010 276007                    ORQ     8,DL
         3 000671   500004 756100                    STQ     4,,PR5

      207     8000    4                    LINCNFG.PRO.PROSIZE = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.COUNT;

   8000  3 000672   300003 471500                    LDP1    3,,PR3
         3 000673   100004 236100                    LDQ     4,,PR1
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:43   
         3 000674   000022 772000                    QRL     18
         3 000675   500007 552110                    STBQ    7,'10'O,PR5

      208     8001    4                    LINCNFG.PRO.PROTXT = BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;

   8001  3 000676   300003 471500                    LDP1    3,,PR3
         3 000677   100004 236100                    LDQ     4,,PR1
         3 000700   000033 772000                    QRL     27
         3 000701   000000 621006                    EAX1    0,QL
         3 000702   040100 100540                    MLR     fill='040'O
         3 000703   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         3 000704   500007 600013                    ADSC9   7,,PR5                   cn=3,n=11

      209     8002    4                    END;  /* ELSE */

   8002  3 000705   001046 710000 3                  TRA     s:8022

      210     8003    3              CASE(%KS_BLOCK);

      211     8004    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);

   8004  3 000706   300003 474500                    LDP4    3,,PR3
         3 000707   400004 236100                    LDQ     4,,PR4
         3 000710   000033 772000                    QRL     27
         3 000711   000000 622006                    EAX2    0,QL
         3 000712   000100 305540                    DTB
         3 000713   400004 230012                    NDSC9   4,,PR4                   cn=1,s=nosgn,sf=0,n=*X2
         3 000714   200014 000010                    NDSC9   TEMP+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000715   200015 235100                    LDA     TEMP+2,,AUTO
         3 000716   200013 755100                    STA     TEMP,,AUTO

      212     8005    3                 LINCNFG.KHA.BLOCK.BYT(0) = TEMP/256;

   8005  3 000717   200013 236100                    LDQ     TEMP,,AUTO
         3 000720   000010 772000                    QRL     8
         3 000721   200004 471500                    LDP1    @LINCNFG,,AUTO
         3 000722   000033 736000                    QLS     27
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:44   
         3 000723   100003 676100                    ERQ     3,,PR1
         3 000724   377000 376003                    ANQ     130560,DU
         3 000725   100003 656100                    ERSQ    3,,PR1

      213     8006    3                 LINCNFG.KHA.BLOCK.BYT(1) = MOD(TEMP,256);

   8006  3 000726   200013 236100                    LDQ     TEMP,,AUTO
         3 000727   000377 376007                    ANQ     255,DL
         3 000730   000022 736000                    QLS     18
         3 000731   100003 676100                    ERQ     3,,PR1
         3 000732   000377 376003                    ANQ     255,DU
         3 000733   100003 656100                    ERSQ    3,,PR1
         3 000734   001046 710000 3                  TRA     s:8022

      214     8007    3              CASE(%KS_UNBLOCK);

      215     8008    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);

   8008  3 000735   300003 474500                    LDP4    3,,PR3
         3 000736   400004 236100                    LDQ     4,,PR4
         3 000737   000033 772000                    QRL     27
         3 000740   000000 622006                    EAX2    0,QL
         3 000741   000100 305540                    DTB
         3 000742   400004 230012                    NDSC9   4,,PR4                   cn=1,s=nosgn,sf=0,n=*X2
         3 000743   200014 000010                    NDSC9   TEMP+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000744   200015 235100                    LDA     TEMP+2,,AUTO
         3 000745   200013 755100                    STA     TEMP,,AUTO

      216     8009    3                 LINCNFG.KHA.UNBLOCK.BYT(0) = TEMP/256;

   8009  3 000746   200013 236100                    LDQ     TEMP,,AUTO
         3 000747   000010 772000                    QRL     8
         3 000750   200004 471500                    LDP1    @LINCNFG,,AUTO
         3 000751   000011 736000                    QLS     9
         3 000752   100003 676100                    ERQ     3,,PR1
         3 000753   377000 376007                    ANQ     130560,DL
         3 000754   100003 656100                    ERSQ    3,,PR1
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:45   

      217     8010    3                 LINCNFG.KHA.UNBLOCK.BYT(1) = MOD(TEMP,256);

   8010  3 000755   200013 236100                    LDQ     TEMP,,AUTO
         3 000756   000377 376007                    ANQ     255,DL
         3 000757   100003 676100                    ERQ     3,,PR1
         3 000760   000377 376007                    ANQ     255,DL
         3 000761   100003 656100                    ERSQ    3,,PR1
         3 000762   001046 710000 3                  TRA     s:8022

      218     8011    3              CASE(%KS_TPTIMEOUT);

      219     8012    3                 CALL CHARBIN(TEMP,BLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);

   8012  3 000763   300003 474500                    LDP4    3,,PR3
         3 000764   400004 236100                    LDQ     4,,PR4
         3 000765   000033 772000                    QRL     27
         3 000766   000000 622006                    EAX2    0,QL
         3 000767   000100 305540                    DTB
         3 000770   400004 230012                    NDSC9   4,,PR4                   cn=1,s=nosgn,sf=0,n=*X2
         3 000771   200014 000010                    NDSC9   TEMP+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000772   200015 235100                    LDA     TEMP+2,,AUTO
         3 000773   200013 755100                    STA     TEMP,,AUTO

      220     8013    3                 LINCNFG.KHA.TPTIMOUT.BYT(0) = TEMP/256;

   8013  3 000774   200013 236100                    LDQ     TEMP,,AUTO
         3 000775   000010 772000                    QRL     8
         3 000776   200004 471500                    LDP1    @LINCNFG,,AUTO
         3 000777   000011 736000                    QLS     9
         3 001000   100002 676100                    ERQ     2,,PR1
         3 001001   377000 376007                    ANQ     130560,DL
         3 001002   100002 656100                    ERSQ    2,,PR1

      221     8014    3                 LINCNFG.KHA.TPTIMOUT.BYT(1) = MOD(TEMP,256);

   8014  3 001003   200013 236100                    LDQ     TEMP,,AUTO
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:46   
         3 001004   000377 376007                    ANQ     255,DL
         3 001005   100002 676100                    ERQ     2,,PR1
         3 001006   000377 376007                    ANQ     255,DL
         3 001007   100002 656100                    ERSQ    2,,PR1
         3 001010   001046 710000 3                  TRA     s:8022

      222     8015    3              CASE(%KS_DEBUG);

      223     8016    3                 LINCNFG.KHA.DBG = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   8016  3 001011   300003 474500                    LDP4    3,,PR3
         3 001012   400000 236100                    LDQ     0,,PR4
         3 001013   777777 376007                    ANQ     -1,DL
         3 001014   000042 736000                    QLS     34
         3 001015   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 001016   000023 772000                    QRL     19
         3 001017   500000 676100                    ERQ     0,,PR5
         3 001020   300000 376007                    ANQ     98304,DL
         3 001021   500000 656100                    ERSQ    0,,PR5
         3 001022   001046 710000 3                  TRA     s:8022

      224     8017    3              CASE(%KS_RMTDBG);

      225     8018    3                 LINCNFG.NA.RMTDBG = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   8018  3 001023   300003 474500                    LDP4    3,,PR3
         3 001024   400000 236100                    LDQ     0,,PR4
         3 001025   777777 376007                    ANQ     -1,DL
         3 001026   000042 736000                    QLS     34
         3 001027   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 001030   000031 772000                    QRL     25
         3 001031   500004 676100                    ERQ     4,,PR5
         3 001032   003000 376007                    ANQ     1536,DL
         3 001033   500004 656100                    ERSQ    4,,PR5
         3 001034   001046 710000 3                  TRA     s:8022

      226     8019    3              CASE(%KS_BRKRQ);
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:47   

      227     8020    3                 LINCNFG.KHA.BRKRQ = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,2);

   8020  3 001035   300003 474500                    LDP4    3,,PR3
         3 001036   400000 236100                    LDQ     0,,PR4
         3 001037   777777 376007                    ANQ     -1,DL
         3 001040   000042 736000                    QLS     34
         3 001041   200004 475500                    LDP5    @LINCNFG,,AUTO
         3 001042   000007 772000                    QRL     7
         3 001043   500000 676100                    ERQ     0,,PR5
         3 001044   003000 376003                    ANQ     1536,DU
         3 001045   500000 656100                    ERSQ    0,,PR5

      228     8021    3              END;  /* DO CASE */

      229     8022    2           END;  /* DO I */

   8022  3 001046   200007 235100                    LDA     I,,AUTO
         3 001047   000001 035007                    ADLA    1,DL
         3 001050   200007 755100                    STA     I,,AUTO
         3 001051   200003 470500                    LDP0    @TOP$,,AUTO
         3 001052   000000 471500                    LDP1    0,,PR0
         3 001053   100001 236100                    LDQ     1,,PR1
         3 001054   000022 772000                    QRL     18
         3 001055   200007 116100                    CMPQ    I,,AUTO
         3 001056   001060 600000 3                  TZE     s:8023
         3 001057   000024 603000 3                  TRC     s:7891

      230     8023    1        RETURN;

   8023  3 001060   000000 702200 xent               TSX2  ! X66_ARET
      231     8024    1   END KSU$BLD_LINCNFG;
      232     8025        %EOD;

PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:48   
--  Include file information  --

   KS_PERR_C.:E05TOU  is referenced.
   KS_SUBS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$BLD_LINCNFG.
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:49   

 **** Variables and constants ****

  ****  Section 001 RoData KSU$BLD_LINCNFG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(16)    r     1 HEX_DIGITS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @LINCNFG                   3-0-0/w PTR         r     1 @TOP$
    11-0-0/w PTR         r     1 BLK$                       5-0-0/c CHAR        r     1 HEX_CHAR
     6-0-0/w UBIN        r     1 HEX_DIGIT                  7-0-0/w UBIN        r     1 I
    10-0-0/w SBIN        r     1 J                         *0-0-0/w ASTR(387)   r     1 LINCNFG
    13-0-0/w UBIN        r     1 TEMP                      12-0-0/w PTR         r     1 TEMP$
    *0-0-0/w PTR         r     1 TOP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure KSU$BLD_LINCNFG requires 561 words for executable code.
   Procedure KSU$BLD_LINCNFG requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:51   
          MINI XREF LISTING

BLK$
      7793**DCL      7891<<ASSIGN   7892>>DOCASE   7894>>IF       7904>>ASSIGN   7909>>IF       7917>>ASSIGN
      7918>>ASSIGN   7918>>ASSIGN   7921>>ASSIGN   7923>>ASSIGN   7925>>ASSIGN   7927>>ASSIGN   7929>>CALLBLT
      7929>>CALLBLT  7940>>CALL     7952>>ASSIGN   7954>>ASSIGN   7956>>ASSIGN   7958>>ASSIGN   7960>>CALLBLT
      7960>>CALLBLT  7964>>CALLBLT  7964>>CALLBLT  7968>>ASSIGN   7970>>ASSIGN   7972>>ASSIGN   7974>>ASSIGN
      7976>>ASSIGN   7978>>ASSIGN   7978>>ASSIGN   7981>>ASSIGN   7992>>IF       8000>>ASSIGN   8001>>ASSIGN
      8001>>ASSIGN   8004>>CALLBLT  8004>>CALLBLT  8008>>CALLBLT  8008>>CALLBLT  8012>>CALLBLT  8012>>CALLBLT
      8016>>ASSIGN   8018>>ASSIGN   8020>>ASSIGN
COMMON
      7890**LABEL    7886--GOTO
HEX_CHAR
      7789**DCL      7984<<ASSIGN   7985>>CALLBLT
HEX_DIGIT
      7790**DCL      7985<<CALLBLT  7986>>ASSIGN
HEX_DIGITS
      7788**DCL      7985>>CALLBLT
I
      7791**DCL      7890<<DOINDEX  7891>>ASSIGN
J
      7792**DCL      7983<<DOINDEX  7984>>ASSIGN
KSE$ERRMSG
      7786**DCL-ENT  7946--CALL
KSU$CHARBIN
      7785**DCL-ENT  7940--CALL
KSU$INIT_DEFCNFG
      7784**DCL-ENT  7888--CALL
KSU$INIT_LINCNFG
      7783**DCL-ENT  7885--CALL
LINCNFG
      7642**DCL         9--PROC     7885<>CALL     7887--ENTRY    7888<>CALL
LINCNFG.KHA.BLOCK.BYT
      7706**DCL      8005<<ASSIGN   8006<<ASSIGN
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:52   
LINCNFG.KHA.BRKRQ
      7669**DCL      8020<<ASSIGN
LINCNFG.KHA.BUFSIZE.BYT
      7694**DCL      7942<<ASSIGN   7943<<ASSIGN
LINCNFG.KHA.CLK
      7675**DCL      7970<<ASSIGN
LINCNFG.KHA.DBG
      7680**DCL      8016<<ASSIGN
LINCNFG.KHA.DELAY.BYT
      7697**DCL      7930<<ASSIGN   7931<<ASSIGN
LINCNFG.KHA.DRPDTR
      7676**DCL      7972<<ASSIGN
LINCNFG.KHA.DSBHSTDWN
      7687**DCL      7976<<ASSIGN
LINCNFG.KHA.ENB
      7683**DCL      7956<<ASSIGN
LINCNFG.KHA.FLWCNTRL
      7666**DCL      7921<<ASSIGN
LINCNFG.KHA.HARD
      7674**DCL      7968<<ASSIGN
LINCNFG.KHA.INP
      7667**DCL      7923<<ASSIGN
LINCNFG.KHA.KLLHSTDWN
      7688**DCL      7974<<ASSIGN
LINCNFG.KHA.OTP
      7668**DCL      7925<<ASSIGN
LINCNFG.KHA.REDTIMEOUT.BYT
      7700**DCL      7965<<ASSIGN   7966<<ASSIGN
LINCNFG.KHA.RE_ENB
      7673**DCL      7952<<ASSIGN
LINCNFG.KHA.RMTHST
      7681**DCL      7954<<ASSIGN
LINCNFG.KHA.SPEED.BYT
      7712**DCL      7899<<ASSIGN   7900<<ASSIGN   7905<<ASSIGN   7906<<ASSIGN
LINCNFG.KHA.SPEED_AUTO
      7682**DCL      7895<<ASSIGN   7903<<ASSIGN
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:53   
LINCNFG.KHA.TPTIMOUT.BYT
      7703**DCL      8013<<ASSIGN   8014<<ASSIGN
LINCNFG.KHA.UNBLOCK.BYT
      7709**DCL      8009<<ASSIGN   8010<<ASSIGN
LINCNFG.LGN.LGNSIZE
      7779**DCL      7780--IMP-SIZ  7885>>CALL     7888>>CALL     7911>>ASSIGN   7912<<ASSIGN   7915>>ASSIGN
      7917<<ASSIGN   7918>>ASSIGN
LINCNFG.LGN.LGNSTRING
      7780**DCL      7911<<ASSIGN   7915<<ASSIGN   7918<<ASSIGN
LINCNFG.NA.ATTR.BYT
      7765**DCL      7989<<ASSIGN   7990<<ASSIGN
LINCNFG.NA.ATTRPRES
      7754**DCL      7988<<ASSIGN
LINCNFG.NA.AUTLGN
      7748**DCL      7910<<ASSIGN   7916<<ASSIGN
LINCNFG.NA.CNFG_EXISTS
      7757**DCL      7884>>IF
LINCNFG.NA.ECHLGN
      7747**DCL      7958<<ASSIGN
LINCNFG.NA.LGNTIMOUT.BYT
      7762**DCL      7961<<ASSIGN   7962<<ASSIGN
LINCNFG.NA.PROFILE
      7756**DCL      7993<<ASSIGN   7999<<ASSIGN
LINCNFG.NA.RES
      7770**DCL      7978<<ASSIGN
LINCNFG.NA.RESPRES
      7753**DCL      7979<<ASSIGN
LINCNFG.NA.RMTDBG
      7749**DCL      8018<<ASSIGN
LINCNFG.NA.SNDSLT
      7746**DCL      7927<<ASSIGN
LINCNFG.PRO.PROSIZE
      7776**DCL      7995<<ASSIGN   8000<<ASSIGN
LINCNFG.PRO.PROTXT
      7777**DCL      7994<<ASSIGN   7998<<ASSIGN   8001<<ASSIGN
OUT$BLK.CODE
PL6.E3A0      #002=KSU$BLD_LINCNFG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:46 Page:54   
      7813**DCL      7892>>DOCASE   7894>>IF       7904>>ASSIGN   7909>>IF       7921>>ASSIGN   7923>>ASSIGN
      7925>>ASSIGN   7927>>ASSIGN   7952>>ASSIGN   7954>>ASSIGN   7956>>ASSIGN   7958>>ASSIGN   7968>>ASSIGN
      7970>>ASSIGN   7972>>ASSIGN   7974>>ASSIGN   7976>>ASSIGN   7992>>IF       8016>>ASSIGN   8018>>ASSIGN
      8020>>ASSIGN
OUT$BLK.NSUBLKS
      7817**DCL      7890>>DOINDEX
OUT$BLK.SUBLK$
      7838**DCL      7891>>ASSIGN   7894>>IF       7904>>ASSIGN   7904>>ASSIGN   7909>>IF       7917>>ASSIGN
      7918>>ASSIGN   7918>>ASSIGN   7921>>ASSIGN   7923>>ASSIGN   7925>>ASSIGN   7927>>ASSIGN   7929>>CALLBLT
      7929>>CALLBLT  7940>>CALL     7952>>ASSIGN   7954>>ASSIGN   7956>>ASSIGN   7958>>ASSIGN   7960>>CALLBLT
      7960>>CALLBLT  7964>>CALLBLT  7964>>CALLBLT  7968>>ASSIGN   7970>>ASSIGN   7972>>ASSIGN   7974>>ASSIGN
      7976>>ASSIGN   7978>>ASSIGN   7978>>ASSIGN   7981>>ASSIGN   7981>>ASSIGN   7992>>IF       8000>>ASSIGN
      8001>>ASSIGN   8001>>ASSIGN   8004>>CALLBLT  8004>>CALLBLT  8008>>CALLBLT  8008>>CALLBLT  8012>>CALLBLT
      8012>>CALLBLT  8016>>ASSIGN   8018>>ASSIGN   8020>>ASSIGN
OUT$SYM.COUNT
      7874**DCL      7877--IMP-SIZ  7917>>ASSIGN   7918>>ASSIGN   7929>>CALLBLT  7960>>CALLBLT  7964>>CALLBLT
      7978>>ASSIGN   7983>>DOINDEX  7984>>ASSIGN   8000>>ASSIGN   8001>>ASSIGN   8004>>CALLBLT  8008>>CALLBLT
      8012>>CALLBLT
OUT$SYM.TEXT
      7877**DCL      7918>>ASSIGN   7929>>CALLBLT  7960>>CALLBLT  7964>>CALLBLT  7978>>ASSIGN   7984>>ASSIGN
      8001>>ASSIGN   8004>>CALLBLT  8008>>CALLBLT  8012>>CALLBLT
OUT$SYM.TEXTC$
      7869**DCL      7940<>CALL
TEMP
      7795**DCL      7904<<ASSIGN   7905>>ASSIGN   7906>>ASSIGN   7929<<CALLBLT  7930>>ASSIGN   7931>>ASSIGN
      7940<>CALL     7942>>ASSIGN   7943>>ASSIGN   7960<<CALLBLT  7961>>ASSIGN   7962>>ASSIGN   7964<<CALLBLT
      7965>>ASSIGN   7966>>ASSIGN   7982<<ASSIGN   7986<<ASSIGN   7986>>ASSIGN   7989>>ASSIGN   7990>>ASSIGN
      8004<<CALLBLT  8005>>ASSIGN   8006>>ASSIGN   8008<<CALLBLT  8009>>ASSIGN   8010>>ASSIGN   8012<<CALLBLT
      8013>>ASSIGN   8014>>ASSIGN
TEMP$
      7794**DCL      7981<<ASSIGN   7983>>DOINDEX  7984>>ASSIGN   7984>>ASSIGN
TOP$
      7623**DCL         9--PROC     7805--IMP-PTR  7887--ENTRY    7890>>DOINDEX  7891>>ASSIGN

PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:55   
      233        1        /*M* KSU$INIT_LINCNFG - routine to init a KL$LINCNFG structure to default values */
      234        2        /*T***********************************************************/
      235        3        /*T*                                                         */
      236        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      237        5        /*T*                                                         */
      238        6        /*T***********************************************************/
      239        7        KSU$INIT_LINCNFG: PROC(LINCNFG);
      240        8        /**/
      241        9        %INCLUDE KL_MACRO_C;
      242     3361        %INCLUDE KL_CONFIG_M;
      243     4123        %INCLUDE KS_SUBS_C;
      244     4366        /**/
      245     4367        %KL$LINCNFG (NAME=LINCNFG,STCLASS=PARAM);
      246     4525        /**/
      247     4526    1   DCL I UBIN;
      248     4527        /**/
      249     4528        %EJECT;
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:56   
      250     4529    1        LINCNFG.KHA.FLWCNTRL = %KS_IGNORE;
      251     4530    1        LINCNFG.KHA.INP = %KS_IGNORE;
      252     4531    1        LINCNFG.KHA.OTP = %KS_IGNORE;
      253     4532    1        LINCNFG.KHA.BRKRQ = %KS_IGNORE;
      254     4533    1        LINCNFG.KHA.RE_ENB = %KS_IGNORE;
      255     4534    1        LINCNFG.KHA.HARD = %KS_IGNORE;
      256     4535    1        LINCNFG.KHA.CLK = %KS_IGNORE;
      257     4536    1        LINCNFG.KHA.DRPDTR = %KS_IGNORE;
      258     4537    1        LINCNFG.KHA.DBG = %KS_IGNORE;
      259     4538    1        LINCNFG.KHA.RMTHST = %KS_IGNORE;
      260     4539    1        LINCNFG.KHA.SPEED_AUTO = %KS_IGNORE;
      261     4540    1        LINCNFG.KHA.ENB = %KS_IGNORE;
      262     4541    1        LINCNFG.KHA.DSBHSTDWN = %KS_IGNORE;
      263     4542    1        LINCNFG.KHA.KLLHSTDWN = %KS_IGNORE;
      264     4543    2        DO I = 0 TO 1;
      265     4544    2           LINCNFG.KHA.BUFSIZE.BYT(I) = -1;
      266     4545    2           LINCNFG.KHA.DELAY.BYT(I) = -1;
      267     4546    2           LINCNFG.KHA.REDTIMEOUT.BYT(I) = -1;
      268     4547    2           LINCNFG.KHA.TPTIMOUT.BYT(I) = -1;
      269     4548    2           LINCNFG.KHA.BLOCK.BYT(I) = -1;
      270     4549    2           LINCNFG.KHA.UNBLOCK.BYT(I) = -1;
      271     4550    2           LINCNFG.KHA.SPEED.BYT(I) = -1;
      272     4551    2           LINCNFG.NA.ATTR.BYT(I) = '0'B;
      273     4552    2           LINCNFG.NA.LGNTIMOUT.BYT(I) = -1;
      274     4553    2           END;  /* DO I */
      275     4554    1        LINCNFG.NA.RES = ' ';
      276     4555    1        LINCNFG.NA.SNDSLT = %KS_IGNORE;
      277     4556    1        LINCNFG.NA.ECHLGN = %KS_IGNORE;
      278     4557    1        LINCNFG.NA.AUTLGN = %KS_IGNORE;
      279     4558    1        LINCNFG.NA.RMTDBG = %KS_IGNORE;
      280     4559    1        LINCNFG.NA.RESPRES = '0'B;
      281     4560    1        LINCNFG.NA.ATTRPRES = '0'B;
      282     4561    1        LINCNFG.NA.PROFILE = '01'B;
      283     4562    1        LINCNFG.LGN.LGNSTRING = ' ';
      284     4563    1        LINCNFG.LGN.LGNSIZE = 0;
      285     4564    1        LINCNFG.PRO.PROTXT = ' ';
      286     4565    1        LINCNFG.PRO.PROSIZE = 0;
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:57   
      287     4566    1        RETURN;
      288     4567    1   END KSU$INIT_LINCNFG;
      289     4568        %EOD;

PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:58   
--  Include file information  --

   KS_SUBS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$INIT_LINCNFG.

   Procedure KSU$INIT_LINCNFG requires 135 words for executable code.
   Procedure KSU$INIT_LINCNFG requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:59   

 Object Unit name= KSU$INIT_LINCNFG                           File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:47:26.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   135    207  KSU$INIT_LINCNFG
    1  RoData even  none    17     21  KSU$INIT_LINCNFG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KSU$INIT_LINCNFG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:60   


      233        1        /*M* KSU$INIT_LINCNFG - routine to init a KL$LINCNFG structure to default values */
      234        2        /*T***********************************************************/
      235        3        /*T*                                                         */
      236        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      237        5        /*T*                                                         */
      238        6        /*T***********************************************************/
      239        7        KSU$INIT_LINCNFG: PROC(LINCNFG);

      7  0 000000   000000 700200 xent  KSU$INIT_LI* TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      240        8        /**/
      241        9        %INCLUDE KL_MACRO_C;
      242     3361        %INCLUDE KL_CONFIG_M;
      243     4123        %INCLUDE KS_SUBS_C;
      244     4366        /**/
      245     4367        %KL$LINCNFG (NAME=LINCNFG,STCLASS=PARAM);
      246     4525        /**/
      247     4526    1   DCL I UBIN;
      248     4527        /**/
      249     4528        %EJECT;
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:61   
      250     4529    1        LINCNFG.KHA.FLWCNTRL = %KS_IGNORE;

   4529  0 000002   200003 470500                    LDP0    @LINCNFG,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   000000 376000 1                  ANQ     0
         0 000005   100000 276003                    ORQ     32768,DU
         0 000006   000000 756100                    STQ     0,,PR0

      251     4530    1        LINCNFG.KHA.INP = %KS_IGNORE;

   4530  0 000007   000000 236100                    LDQ     0,,PR0
         0 000010   000001 376000 1                  ANQ     1
         0 000011   020000 276003                    ORQ     8192,DU
         0 000012   000000 756100                    STQ     0,,PR0

      252     4531    1        LINCNFG.KHA.OTP = %KS_IGNORE;

   4531  0 000013   000000 236100                    LDQ     0,,PR0
         0 000014   000002 376000 1                  ANQ     2
         0 000015   004000 276003                    ORQ     2048,DU
         0 000016   000000 756100                    STQ     0,,PR0

      253     4532    1        LINCNFG.KHA.BRKRQ = %KS_IGNORE;

   4532  0 000017   000000 236100                    LDQ     0,,PR0
         0 000020   000003 376000 1                  ANQ     3
         0 000021   001000 276003                    ORQ     512,DU
         0 000022   000000 756100                    STQ     0,,PR0

      254     4533    1        LINCNFG.KHA.RE_ENB = %KS_IGNORE;

   4533  0 000023   000000 236100                    LDQ     0,,PR0
         0 000024   000004 376000 1                  ANQ     4
         0 000025   000100 276003                    ORQ     64,DU
         0 000026   000000 756100                    STQ     0,,PR0

      255     4534    1        LINCNFG.KHA.HARD = %KS_IGNORE;
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:62   

   4534  0 000027   000000 236100                    LDQ     0,,PR0
         0 000030   000005 376000 1                  ANQ     5
         0 000031   000020 276003                    ORQ     16,DU
         0 000032   000000 756100                    STQ     0,,PR0

      256     4535    1        LINCNFG.KHA.CLK = %KS_IGNORE;

   4535  0 000033   000000 236100                    LDQ     0,,PR0
         0 000034   000006 376000 1                  ANQ     6
         0 000035   000004 276003                    ORQ     4,DU
         0 000036   000000 756100                    STQ     0,,PR0

      257     4536    1        LINCNFG.KHA.DRPDTR = %KS_IGNORE;

   4536  0 000037   000000 236100                    LDQ     0,,PR0
         0 000040   000007 376000 1                  ANQ     7
         0 000041   000001 276003                    ORQ     1,DU
         0 000042   000000 756100                    STQ     0,,PR0

      258     4537    1        LINCNFG.KHA.DBG = %KS_IGNORE;

   4537  0 000043   000000 236100                    LDQ     0,,PR0
         0 000044   000010 376000 1                  ANQ     8
         0 000045   100000 276007                    ORQ     32768,DL
         0 000046   000000 756100                    STQ     0,,PR0

      259     4538    1        LINCNFG.KHA.RMTHST = %KS_IGNORE;

   4538  0 000047   000000 236100                    LDQ     0,,PR0
         0 000050   000011 376000 1                  ANQ     9
         0 000051   020000 276007                    ORQ     8192,DL
         0 000052   000000 756100                    STQ     0,,PR0

      260     4539    1        LINCNFG.KHA.SPEED_AUTO = %KS_IGNORE;

   4539  0 000053   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:63   
         0 000054   000012 376000 1                  ANQ     10
         0 000055   004000 276007                    ORQ     2048,DL
         0 000056   000000 756100                    STQ     0,,PR0

      261     4540    1        LINCNFG.KHA.ENB = %KS_IGNORE;

   4540  0 000057   000000 236100                    LDQ     0,,PR0
         0 000060   000013 376000 1                  ANQ     11
         0 000061   001000 276007                    ORQ     512,DL
         0 000062   000000 756100                    STQ     0,,PR0

      262     4541    1        LINCNFG.KHA.DSBHSTDWN = %KS_IGNORE;

   4541  0 000063   000000 236100                    LDQ     0,,PR0
         0 000064   000014 376000 1                  ANQ     12
         0 000065   000100 276007                    ORQ     64,DL
         0 000066   000000 756100                    STQ     0,,PR0

      263     4542    1        LINCNFG.KHA.KLLHSTDWN = %KS_IGNORE;

   4542  0 000067   000000 236100                    LDQ     0,,PR0
         0 000070   000015 376000 1                  ANQ     13
         0 000071   000020 276007                    ORQ     16,DL
         0 000072   000000 756100                    STQ     0,,PR0

      264     4543    2        DO I = 0 TO 1;

   4543  0 000073   200004 450100                    STZ     I,,AUTO

      265     4544    2           LINCNFG.KHA.BUFSIZE.BYT(I) = -1;

   4544  0 000074   200004 236100                    LDQ     I,,AUTO
         0 000075   000011 402007                    MPY     9,DL
         0 000076   200003 470500                    LDP0    @LINCNFG,,AUTO
         0 000077   003106 061400                    CSR     bolr='003'O
         0 000100   000027 000044 xsym               BDSC    B_VECTNIL+23             by=0,bit=0,n=36
         0 000101   000001 010010                    BDSC    1,Q,PR0                  by=0,bit=1,n=8
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:64   

      266     4545    2           LINCNFG.KHA.DELAY.BYT(I) = -1;

   4545  0 000102   003106 061400                    CSR     bolr='003'O
         0 000103   000027 000044 xsym               BDSC    B_VECTNIL+23             by=0,bit=0,n=36
         0 000104   000001 410010                    BDSC    1,Q,PR0                  by=2,bit=1,n=8

      267     4546    2           LINCNFG.KHA.REDTIMEOUT.BYT(I) = -1;

   4546  0 000105   003106 061400                    CSR     bolr='003'O
         0 000106   000027 000044 xsym               BDSC    B_VECTNIL+23             by=0,bit=0,n=36
         0 000107   000002 010010                    BDSC    2,Q,PR0                  by=0,bit=1,n=8

      268     4547    2           LINCNFG.KHA.TPTIMOUT.BYT(I) = -1;

   4547  0 000110   003106 061400                    CSR     bolr='003'O
         0 000111   000027 000044 xsym               BDSC    B_VECTNIL+23             by=0,bit=0,n=36
         0 000112   000002 410010                    BDSC    2,Q,PR0                  by=2,bit=1,n=8

      269     4548    2           LINCNFG.KHA.BLOCK.BYT(I) = -1;

   4548  0 000113   003106 061400                    CSR     bolr='003'O
         0 000114   000027 000044 xsym               BDSC    B_VECTNIL+23             by=0,bit=0,n=36
         0 000115   000003 010010                    BDSC    3,Q,PR0                  by=0,bit=1,n=8

      270     4549    2           LINCNFG.KHA.UNBLOCK.BYT(I) = -1;

   4549  0 000116   003106 061400                    CSR     bolr='003'O
         0 000117   000027 000044 xsym               BDSC    B_VECTNIL+23             by=0,bit=0,n=36
         0 000120   000003 410010                    BDSC    3,Q,PR0                  by=2,bit=1,n=8

      271     4550    2           LINCNFG.KHA.SPEED.BYT(I) = -1;

   4550  0 000121   003106 061400                    CSR     bolr='003'O
         0 000122   000027 000044 xsym               BDSC    B_VECTNIL+23             by=0,bit=0,n=36
         0 000123   000004 010010                    BDSC    4,Q,PR0                  by=0,bit=1,n=8

PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:65   
      272     4551    2           LINCNFG.NA.ATTR.BYT(I) = '0'B;

   4551  0 000124   003106 060400                    CSL     bolr='003'O
         0 000125   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         0 000126   000005 410010                    BDSC    5,Q,PR0                  by=2,bit=1,n=8

      273     4552    2           LINCNFG.NA.LGNTIMOUT.BYT(I) = -1;

   4552  0 000127   003106 061400                    CSR     bolr='003'O
         0 000130   000027 000044 xsym               BDSC    B_VECTNIL+23             by=0,bit=0,n=36
         0 000131   000005 010010                    BDSC    5,Q,PR0                  by=0,bit=1,n=8

      274     4553    2           END;  /* DO I */

   4553  0 000132   200004 235100                    LDA     I,,AUTO
         0 000133   000001 035007                    ADLA    1,DL
         0 000134   200004 755100                    STA     I,,AUTO
         0 000135   000002 115007                    CMPA    2,DL
         0 000136   000074 602000 0                  TNC     s:4544

      275     4554    1        LINCNFG.NA.RES = ' ';

   4554  0 000137   040040 220003                    LDX0    16416,DU
         0 000140   000006 740100                    STX0    6,,PR0

      276     4555    1        LINCNFG.NA.SNDSLT = %KS_IGNORE;

   4555  0 000141   000004 236100                    LDQ     4,,PR0
         0 000142   000010 376000 1                  ANQ     8
         0 000143   100000 276007                    ORQ     32768,DL
         0 000144   000004 756100                    STQ     4,,PR0

      277     4556    1        LINCNFG.NA.ECHLGN = %KS_IGNORE;

   4556  0 000145   000004 236100                    LDQ     4,,PR0
         0 000146   000011 376000 1                  ANQ     9
         0 000147   020000 276007                    ORQ     8192,DL
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:66   
         0 000150   000004 756100                    STQ     4,,PR0

      278     4557    1        LINCNFG.NA.AUTLGN = %KS_IGNORE;

   4557  0 000151   000004 236100                    LDQ     4,,PR0
         0 000152   000012 376000 1                  ANQ     10
         0 000153   004000 276007                    ORQ     2048,DL
         0 000154   000004 756100                    STQ     4,,PR0

      279     4558    1        LINCNFG.NA.RMTDBG = %KS_IGNORE;

   4558  0 000155   000004 236100                    LDQ     4,,PR0
         0 000156   000013 376000 1                  ANQ     11
         0 000157   001000 276007                    ORQ     512,DL
         0 000160   000004 756100                    STQ     4,,PR0

      280     4559    1        LINCNFG.NA.RESPRES = '0'B;

   4559  0 000161   000016 236000 1                  LDQ     14
         0 000162   000004 356100                    ANSQ    4,,PR0

      281     4560    1        LINCNFG.NA.ATTRPRES = '0'B;

   4560  0 000163   000017 236000 1                  LDQ     15
         0 000164   000004 356100                    ANSQ    4,,PR0

      282     4561    1        LINCNFG.NA.PROFILE = '01'B;

   4561  0 000165   000004 236100                    LDQ     4,,PR0
         0 000166   000020 376000 1                  ANQ     16
         0 000167   000004 276007                    ORQ     4,DL
         0 000170   000004 756100                    STQ     4,,PR0

      283     4562    1        LINCNFG.LGN.LGNSTRING = ' ';

   4562  0 000171   000012 236100                    LDQ     10,,PR0
         0 000172   000011 772000                    QRL     9
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:67   
         0 000173   000777 376007                    ANQ     511,DL
         0 000174   000000 621006                    EAX1    0,QL
         0 000175   040140 100400                    MLR     fill='040'O
         0 000176   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 000177   000012 600011                    ADSC9   10,,PR0                  cn=3,n=*X1

      284     4563    1        LINCNFG.LGN.LGNSIZE = 0;

   4563  0 000200   000000 236003                    LDQ     0,DU
         0 000201   000012 552110                    STBQ    10,'10'O,PR0

      285     4564    1        LINCNFG.PRO.PROTXT = ' ';

   4564  0 000202   040100 100400                    MLR     fill='040'O
         0 000203   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 000204   000007 600013                    ADSC9   7,,PR0                   cn=3,n=11

      286     4565    1        LINCNFG.PRO.PROSIZE = 0;

   4565  0 000205   000007 552110                    STBQ    7,'10'O,PR0

      287     4566    1        RETURN;

   4566  0 000206   000000 702200 xent               TSX2  ! X66_ARET
      288     4567    1   END KSU$INIT_LINCNFG;
      289     4568        %EOD;

PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:68   
--  Include file information  --

   KS_SUBS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$INIT_LINCNFG.
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:69   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @LINCNFG                   4-0-0/w UBIN        r     1 I
    *0-0-0/w ASTR(387)   r     1 LINCNFG


   Procedure KSU$INIT_LINCNFG requires 135 words for executable code.
   Procedure KSU$INIT_LINCNFG requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:70   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:71   
          MINI XREF LISTING

I
      4526**DCL      4543<<DOINDEX  4544>>ASSIGN   4545>>ASSIGN   4546>>ASSIGN   4547>>ASSIGN   4548>>ASSIGN
      4549>>ASSIGN   4550>>ASSIGN   4551>>ASSIGN   4552>>ASSIGN
LINCNFG
      4385**DCL         7--PROC
LINCNFG.KHA.BLOCK.BYT
      4449**DCL      4548<<ASSIGN
LINCNFG.KHA.BRKRQ
      4412**DCL      4532<<ASSIGN
LINCNFG.KHA.BUFSIZE.BYT
      4437**DCL      4544<<ASSIGN
LINCNFG.KHA.CLK
      4418**DCL      4535<<ASSIGN
LINCNFG.KHA.DBG
      4423**DCL      4537<<ASSIGN
LINCNFG.KHA.DELAY.BYT
      4440**DCL      4545<<ASSIGN
LINCNFG.KHA.DRPDTR
      4419**DCL      4536<<ASSIGN
LINCNFG.KHA.DSBHSTDWN
      4430**DCL      4541<<ASSIGN
LINCNFG.KHA.ENB
      4426**DCL      4540<<ASSIGN
LINCNFG.KHA.FLWCNTRL
      4409**DCL      4529<<ASSIGN
LINCNFG.KHA.HARD
      4417**DCL      4534<<ASSIGN
LINCNFG.KHA.INP
      4410**DCL      4530<<ASSIGN
LINCNFG.KHA.KLLHSTDWN
      4431**DCL      4542<<ASSIGN
LINCNFG.KHA.OTP
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:72   
      4411**DCL      4531<<ASSIGN
LINCNFG.KHA.REDTIMEOUT.BYT
      4443**DCL      4546<<ASSIGN
LINCNFG.KHA.RE_ENB
      4416**DCL      4533<<ASSIGN
LINCNFG.KHA.RMTHST
      4424**DCL      4538<<ASSIGN
LINCNFG.KHA.SPEED.BYT
      4455**DCL      4550<<ASSIGN
LINCNFG.KHA.SPEED_AUTO
      4425**DCL      4539<<ASSIGN
LINCNFG.KHA.TPTIMOUT.BYT
      4446**DCL      4547<<ASSIGN
LINCNFG.KHA.UNBLOCK.BYT
      4452**DCL      4549<<ASSIGN
LINCNFG.LGN.LGNSIZE
      4522**DCL      4523--IMP-SIZ  4562>>ASSIGN   4563<<ASSIGN
LINCNFG.LGN.LGNSTRING
      4523**DCL      4562<<ASSIGN
LINCNFG.NA.ATTR.BYT
      4508**DCL      4551<<ASSIGN
LINCNFG.NA.ATTRPRES
      4497**DCL      4560<<ASSIGN
LINCNFG.NA.AUTLGN
      4491**DCL      4557<<ASSIGN
LINCNFG.NA.ECHLGN
      4490**DCL      4556<<ASSIGN
LINCNFG.NA.LGNTIMOUT.BYT
      4505**DCL      4552<<ASSIGN
LINCNFG.NA.PROFILE
      4499**DCL      4561<<ASSIGN
LINCNFG.NA.RES
      4513**DCL      4554<<ASSIGN
LINCNFG.NA.RESPRES
      4496**DCL      4559<<ASSIGN
LINCNFG.NA.RMTDBG
PL6.E3A0      #003=KSU$INIT_LINCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:73   
      4492**DCL      4558<<ASSIGN
LINCNFG.NA.SNDSLT
      4489**DCL      4555<<ASSIGN
LINCNFG.PRO.PROSIZE
      4519**DCL      4565<<ASSIGN
LINCNFG.PRO.PROTXT
      4520**DCL      4564<<ASSIGN

PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:74   
      290        1        /*M* KSU$INIT_DEFCNFG - routine to init a KL$LINCNFG structure to default values */
      291        2        /*T***********************************************************/
      292        3        /*T*                                                         */
      293        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      294        5        /*T*                                                         */
      295        6        /*T***********************************************************/
      296        7        KSU$INIT_DEFCNFG: PROC(LINCNFG);
      297        8        /**/
      298        9        %INCLUDE KL_MACRO_C;
      299     3361        %INCLUDE KL_CONFIG_M;
      300     4123        %INCLUDE KS_SUBS_C;
      301     4366        /**/
      302     4367        %KL$LINCNFG (NAME=LINCNFG,STCLASS=PARAM);
      303     4525        /**/
      304     4526    1   DCL I UBIN;
      305     4527        /**/
      306     4528        %EJECT;
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:75   
      307     4529    1        LINCNFG.KHA.FLWCNTRL = %KS_NO_BIT;
      308     4530    1        LINCNFG.KHA.INP = %KS_YES_BIT;
      309     4531    1        LINCNFG.KHA.OTP = %KS_YES_BIT;
      310     4532    1        LINCNFG.KHA.BRKRQ = %KS_NO_BIT;
      311     4533    1        LINCNFG.KHA.RE_ENB = %KS_YES_BIT;
      312     4534    1        LINCNFG.KHA.HARD = %KS_YES_BIT;
      313     4535    1        LINCNFG.KHA.CLK = %KS_NO_BIT;
      314     4536    1        LINCNFG.KHA.DRPDTR = %KS_NO_BIT;
      315     4537    1        LINCNFG.KHA.DBG = %KS_NO_BIT;
      316     4538    1        LINCNFG.KHA.RMTHST = %KS_NO_BIT;
      317     4539    1        LINCNFG.KHA.SPEED_AUTO = %KS_YES_BIT;
      318     4540    1        LINCNFG.KHA.ENB = %KS_YES_BIT;;
      319     4541    1        LINCNFG.KHA.DSBHSTDWN = %KS_NO_BIT;
      320     4542    1        LINCNFG.KHA.KLLHSTDWN = %KS_NO_BIT;
      321     4543    2        DO I = 0 TO 1;
      322     4544    2           LINCNFG.KHA.BUFSIZE.BYT(I) = 0;
      323     4545    2           LINCNFG.KHA.DELAY.BYT(I) = 0;
      324     4546    2           LINCNFG.KHA.REDTIMEOUT.BYT(I) = 0;
      325     4547    2           LINCNFG.KHA.TPTIMOUT.BYT(I) = 0;
      326     4548    2           LINCNFG.KHA.BLOCK.BYT(I) = 0;
      327     4549    2           LINCNFG.KHA.UNBLOCK.BYT(I) = 0;
      328     4550    2           LINCNFG.KHA.SPEED.BYT(I) = 0;
      329     4551    2           LINCNFG.NA.ATTR.BYT(I) = '0'B;
      330     4552    2           LINCNFG.NA.LGNTIMOUT.BYT(I) = 0;
      331     4553    2           END;  /* DO I */
      332     4554    1        LINCNFG.NA.RES = '  ';
      333     4555    1        LINCNFG.NA.SNDSLT = %KS_YES_BIT;
      334     4556    1        LINCNFG.NA.ECHLGN = %KS_NO_BIT;
      335     4557    1        LINCNFG.NA.AUTLGN = %KS_NO_BIT;
      336     4558    1        LINCNFG.NA.RMTDBG = %KS_NO_BIT;
      337     4559    1        LINCNFG.NA.RESPRES = '0'B;
      338     4560    1        LINCNFG.NA.ATTRPRES = '0'B;
      339     4561    1        LINCNFG.NA.PROFILE = %KS_NO_BIT;
      340     4562    1        LINCNFG.LGN.LGNSTRING = ' ';
      341     4563    1        LINCNFG.LGN.LGNSIZE = 0;
      342     4564    1        LINCNFG.PRO.PROTXT = ' ';
      343     4565    1        LINCNFG.PRO.PROSIZE = 0;
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:76   
      344     4566    1        RETURN;
      345     4567    1   END KSU$INIT_DEFCNFG;
      346     4568        %EOD;

PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:77   
--  Include file information  --

   KS_SUBS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$INIT_DEFCNFG.

   Procedure KSU$INIT_DEFCNFG requires 111 words for executable code.
   Procedure KSU$INIT_DEFCNFG requires 6 words of local(AUTO) storage.

PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:78   

 Object Unit name= KSU$INIT_DEFCNFG                           File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:47:43.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  KSU$INIT_DEFCNFG
    1   Proc  even  none   111    157  KSU$INIT_DEFCNFG
    2  RoData even  none    17     21  KSU$INIT_DEFCNFG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KSU$INIT_DEFCNFG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:79   


      290        1        /*M* KSU$INIT_DEFCNFG - routine to init a KL$LINCNFG structure to default values */
      291        2        /*T***********************************************************/
      292        3        /*T*                                                         */
      293        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      294        5        /*T*                                                         */
      295        6        /*T***********************************************************/
      296        7        KSU$INIT_DEFCNFG: PROC(LINCNFG);

      7  1 000000   000000 700200 xent  KSU$INIT_DE* TSX0  ! X66_AUTO_1
         1 000001   000006 000001                    ZERO    6,1

      297        8        /**/
      298        9        %INCLUDE KL_MACRO_C;
      299     3361        %INCLUDE KL_CONFIG_M;
      300     4123        %INCLUDE KS_SUBS_C;
      301     4366        /**/
      302     4367        %KL$LINCNFG (NAME=LINCNFG,STCLASS=PARAM);
      303     4525        /**/
      304     4526    1   DCL I UBIN;
      305     4527        /**/
      306     4528        %EJECT;
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:80   
      307     4529    1        LINCNFG.KHA.FLWCNTRL = %KS_NO_BIT;

   4529  1 000002   200003 470500                    LDP0    @LINCNFG,,AUTO
         1 000003   000000 236000 2                  LDQ     0
         1 000004   000000 356100                    ANSQ    0,,PR0

      308     4530    1        LINCNFG.KHA.INP = %KS_YES_BIT;

   4530  1 000005   000000 236100                    LDQ     0,,PR0
         1 000006   000001 376000 2                  ANQ     1
         1 000007   040000 276003                    ORQ     16384,DU
         1 000010   000000 756100                    STQ     0,,PR0

      309     4531    1        LINCNFG.KHA.OTP = %KS_YES_BIT;

   4531  1 000011   000000 236100                    LDQ     0,,PR0
         1 000012   000002 376000 2                  ANQ     2
         1 000013   010000 276003                    ORQ     4096,DU
         1 000014   000000 756100                    STQ     0,,PR0

      310     4532    1        LINCNFG.KHA.BRKRQ = %KS_NO_BIT;

   4532  1 000015   000003 236000 2                  LDQ     3
         1 000016   000000 356100                    ANSQ    0,,PR0

      311     4533    1        LINCNFG.KHA.RE_ENB = %KS_YES_BIT;

   4533  1 000017   000000 236100                    LDQ     0,,PR0
         1 000020   000004 376000 2                  ANQ     4
         1 000021   000200 276003                    ORQ     128,DU
         1 000022   000000 756100                    STQ     0,,PR0

      312     4534    1        LINCNFG.KHA.HARD = %KS_YES_BIT;

   4534  1 000023   000000 236100                    LDQ     0,,PR0
         1 000024   000005 376000 2                  ANQ     5
         1 000025   000040 276003                    ORQ     32,DU
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:81   
         1 000026   000000 756100                    STQ     0,,PR0

      313     4535    1        LINCNFG.KHA.CLK = %KS_NO_BIT;

   4535  1 000027   000006 236000 2                  LDQ     6
         1 000030   000000 356100                    ANSQ    0,,PR0

      314     4536    1        LINCNFG.KHA.DRPDTR = %KS_NO_BIT;

   4536  1 000031   000007 236000 2                  LDQ     7
         1 000032   000000 356100                    ANSQ    0,,PR0

      315     4537    1        LINCNFG.KHA.DBG = %KS_NO_BIT;

   4537  1 000033   000010 236000 2                  LDQ     8
         1 000034   000000 356100                    ANSQ    0,,PR0

      316     4538    1        LINCNFG.KHA.RMTHST = %KS_NO_BIT;

   4538  1 000035   000011 236000 2                  LDQ     9
         1 000036   000000 356100                    ANSQ    0,,PR0

      317     4539    1        LINCNFG.KHA.SPEED_AUTO = %KS_YES_BIT;

   4539  1 000037   000000 236100                    LDQ     0,,PR0
         1 000040   000012 376000 2                  ANQ     10
         1 000041   010000 276007                    ORQ     4096,DL
         1 000042   000000 756100                    STQ     0,,PR0

      318     4540    1        LINCNFG.KHA.ENB = %KS_YES_BIT;;

   4540  1 000043   000000 236100                    LDQ     0,,PR0
         1 000044   000013 376000 2                  ANQ     11
         1 000045   002000 276007                    ORQ     1024,DL
         1 000046   000000 756100                    STQ     0,,PR0

      319     4541    1        LINCNFG.KHA.DSBHSTDWN = %KS_NO_BIT;
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:82   

   4541  1 000047   000014 236000 2                  LDQ     12
         1 000050   000000 356100                    ANSQ    0,,PR0

      320     4542    1        LINCNFG.KHA.KLLHSTDWN = %KS_NO_BIT;

   4542  1 000051   000015 236000 2                  LDQ     13
         1 000052   000000 356100                    ANSQ    0,,PR0

      321     4543    2        DO I = 0 TO 1;

   4543  1 000053   200004 450100                    STZ     I,,AUTO

      322     4544    2           LINCNFG.KHA.BUFSIZE.BYT(I) = 0;

   4544  1 000054   200004 236100                    LDQ     I,,AUTO
         1 000055   000011 402007                    MPY     9,DL
         1 000056   200003 470500                    LDP0    @LINCNFG,,AUTO
         1 000057   003106 061400                    CSR     bolr='003'O
         1 000060   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000061   000001 010010                    BDSC    1,Q,PR0                  by=0,bit=1,n=8

      323     4545    2           LINCNFG.KHA.DELAY.BYT(I) = 0;

   4545  1 000062   003106 061400                    CSR     bolr='003'O
         1 000063   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000064   000001 410010                    BDSC    1,Q,PR0                  by=2,bit=1,n=8

      324     4546    2           LINCNFG.KHA.REDTIMEOUT.BYT(I) = 0;

   4546  1 000065   003106 061400                    CSR     bolr='003'O
         1 000066   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000067   000002 010010                    BDSC    2,Q,PR0                  by=0,bit=1,n=8

      325     4547    2           LINCNFG.KHA.TPTIMOUT.BYT(I) = 0;

   4547  1 000070   003106 061400                    CSR     bolr='003'O
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:83   
         1 000071   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000072   000002 410010                    BDSC    2,Q,PR0                  by=2,bit=1,n=8

      326     4548    2           LINCNFG.KHA.BLOCK.BYT(I) = 0;

   4548  1 000073   003106 061400                    CSR     bolr='003'O
         1 000074   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000075   000003 010010                    BDSC    3,Q,PR0                  by=0,bit=1,n=8

      327     4549    2           LINCNFG.KHA.UNBLOCK.BYT(I) = 0;

   4549  1 000076   003106 061400                    CSR     bolr='003'O
         1 000077   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000100   000003 410010                    BDSC    3,Q,PR0                  by=2,bit=1,n=8

      328     4550    2           LINCNFG.KHA.SPEED.BYT(I) = 0;

   4550  1 000101   003106 061400                    CSR     bolr='003'O
         1 000102   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000103   000004 010010                    BDSC    4,Q,PR0                  by=0,bit=1,n=8

      329     4551    2           LINCNFG.NA.ATTR.BYT(I) = '0'B;

   4551  1 000104   003106 060400                    CSL     bolr='003'O
         1 000105   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         1 000106   000005 410010                    BDSC    5,Q,PR0                  by=2,bit=1,n=8

      330     4552    2           LINCNFG.NA.LGNTIMOUT.BYT(I) = 0;

   4552  1 000107   003106 061400                    CSR     bolr='003'O
         1 000110   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000111   000005 010010                    BDSC    5,Q,PR0                  by=0,bit=1,n=8

      331     4553    2           END;  /* DO I */

   4553  1 000112   200004 235100                    LDA     I,,AUTO
         1 000113   000001 035007                    ADLA    1,DL
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:84   
         1 000114   200004 755100                    STA     I,,AUTO
         1 000115   000002 115007                    CMPA    2,DL
         1 000116   000054 602000 1                  TNC     s:4544

      332     4554    1        LINCNFG.NA.RES = '  ';

   4554  1 000117   000000 220000 0                  LDX0    0
         1 000120   000006 740100                    STX0    6,,PR0

      333     4555    1        LINCNFG.NA.SNDSLT = %KS_YES_BIT;

   4555  1 000121   000004 236100                    LDQ     4,,PR0
         1 000122   000010 376000 2                  ANQ     8
         1 000123   200000 276007                    ORQ     65536,DL
         1 000124   000004 756100                    STQ     4,,PR0

      334     4556    1        LINCNFG.NA.ECHLGN = %KS_NO_BIT;

   4556  1 000125   000011 236000 2                  LDQ     9
         1 000126   000004 356100                    ANSQ    4,,PR0

      335     4557    1        LINCNFG.NA.AUTLGN = %KS_NO_BIT;

   4557  1 000127   000012 236000 2                  LDQ     10
         1 000130   000004 356100                    ANSQ    4,,PR0

      336     4558    1        LINCNFG.NA.RMTDBG = %KS_NO_BIT;

   4558  1 000131   000013 236000 2                  LDQ     11
         1 000132   000004 356100                    ANSQ    4,,PR0

      337     4559    1        LINCNFG.NA.RESPRES = '0'B;

   4559  1 000133   000016 236000 2                  LDQ     14
         1 000134   000004 356100                    ANSQ    4,,PR0

      338     4560    1        LINCNFG.NA.ATTRPRES = '0'B;
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:85   

   4560  1 000135   000017 236000 2                  LDQ     15
         1 000136   000004 356100                    ANSQ    4,,PR0

      339     4561    1        LINCNFG.NA.PROFILE = %KS_NO_BIT;

   4561  1 000137   000020 236000 2                  LDQ     16
         1 000140   000004 356100                    ANSQ    4,,PR0

      340     4562    1        LINCNFG.LGN.LGNSTRING = ' ';

   4562  1 000141   000012 236100                    LDQ     10,,PR0
         1 000142   000011 772000                    QRL     9
         1 000143   000777 376007                    ANQ     511,DL
         1 000144   000000 621006                    EAX1    0,QL
         1 000145   040140 100400                    MLR     fill='040'O
         1 000146   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000147   000012 600011                    ADSC9   10,,PR0                  cn=3,n=*X1

      341     4563    1        LINCNFG.LGN.LGNSIZE = 0;

   4563  1 000150   000000 236003                    LDQ     0,DU
         1 000151   000012 552110                    STBQ    10,'10'O,PR0

      342     4564    1        LINCNFG.PRO.PROTXT = ' ';

   4564  1 000152   040100 100400                    MLR     fill='040'O
         1 000153   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000154   000007 600013                    ADSC9   7,,PR0                   cn=3,n=11

      343     4565    1        LINCNFG.PRO.PROSIZE = 0;

   4565  1 000155   000007 552110                    STBQ    7,'10'O,PR0

      344     4566    1        RETURN;

   4566  1 000156   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:86   
      345     4567    1   END KSU$INIT_DEFCNFG;
      346     4568        %EOD;

PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:87   
--  Include file information  --

   KS_SUBS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$INIT_DEFCNFG.
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:88   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @LINCNFG                   4-0-0/w UBIN        r     1 I
    *0-0-0/w ASTR(387)   r     1 LINCNFG


   Procedure KSU$INIT_DEFCNFG requires 111 words for executable code.
   Procedure KSU$INIT_DEFCNFG requires 6 words of local(AUTO) storage.
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:89   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:90   
          MINI XREF LISTING

I
      4526**DCL      4543<<DOINDEX  4544>>ASSIGN   4545>>ASSIGN   4546>>ASSIGN   4547>>ASSIGN   4548>>ASSIGN
      4549>>ASSIGN   4550>>ASSIGN   4551>>ASSIGN   4552>>ASSIGN
LINCNFG
      4385**DCL         7--PROC
LINCNFG.KHA.BLOCK.BYT
      4449**DCL      4548<<ASSIGN
LINCNFG.KHA.BRKRQ
      4412**DCL      4532<<ASSIGN
LINCNFG.KHA.BUFSIZE.BYT
      4437**DCL      4544<<ASSIGN
LINCNFG.KHA.CLK
      4418**DCL      4535<<ASSIGN
LINCNFG.KHA.DBG
      4423**DCL      4537<<ASSIGN
LINCNFG.KHA.DELAY.BYT
      4440**DCL      4545<<ASSIGN
LINCNFG.KHA.DRPDTR
      4419**DCL      4536<<ASSIGN
LINCNFG.KHA.DSBHSTDWN
      4430**DCL      4541<<ASSIGN
LINCNFG.KHA.ENB
      4426**DCL      4540<<ASSIGN
LINCNFG.KHA.FLWCNTRL
      4409**DCL      4529<<ASSIGN
LINCNFG.KHA.HARD
      4417**DCL      4534<<ASSIGN
LINCNFG.KHA.INP
      4410**DCL      4530<<ASSIGN
LINCNFG.KHA.KLLHSTDWN
      4431**DCL      4542<<ASSIGN
LINCNFG.KHA.OTP
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:91   
      4411**DCL      4531<<ASSIGN
LINCNFG.KHA.REDTIMEOUT.BYT
      4443**DCL      4546<<ASSIGN
LINCNFG.KHA.RE_ENB
      4416**DCL      4533<<ASSIGN
LINCNFG.KHA.RMTHST
      4424**DCL      4538<<ASSIGN
LINCNFG.KHA.SPEED.BYT
      4455**DCL      4550<<ASSIGN
LINCNFG.KHA.SPEED_AUTO
      4425**DCL      4539<<ASSIGN
LINCNFG.KHA.TPTIMOUT.BYT
      4446**DCL      4547<<ASSIGN
LINCNFG.KHA.UNBLOCK.BYT
      4452**DCL      4549<<ASSIGN
LINCNFG.LGN.LGNSIZE
      4522**DCL      4523--IMP-SIZ  4562>>ASSIGN   4563<<ASSIGN
LINCNFG.LGN.LGNSTRING
      4523**DCL      4562<<ASSIGN
LINCNFG.NA.ATTR.BYT
      4508**DCL      4551<<ASSIGN
LINCNFG.NA.ATTRPRES
      4497**DCL      4560<<ASSIGN
LINCNFG.NA.AUTLGN
      4491**DCL      4557<<ASSIGN
LINCNFG.NA.ECHLGN
      4490**DCL      4556<<ASSIGN
LINCNFG.NA.LGNTIMOUT.BYT
      4505**DCL      4552<<ASSIGN
LINCNFG.NA.PROFILE
      4499**DCL      4561<<ASSIGN
LINCNFG.NA.RES
      4513**DCL      4554<<ASSIGN
LINCNFG.NA.RESPRES
      4496**DCL      4559<<ASSIGN
LINCNFG.NA.RMTDBG
PL6.E3A0      #004=KSU$INIT_DEFCNFG File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:47 Page:92   
      4492**DCL      4558<<ASSIGN
LINCNFG.NA.SNDSLT
      4489**DCL      4555<<ASSIGN
LINCNFG.PRO.PROSIZE
      4519**DCL      4565<<ASSIGN
LINCNFG.PRO.PROTXT
      4520**DCL      4564<<ASSIGN

PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:93   
      347        1        /*T***********************************************************/
      348        2        /*T*                                                         */
      349        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      350        4        /*T*                                                         */
      351        5        /*T***********************************************************/
      352        6        KSU$BLD_TERMRANGE:  PROC (TOP$,TERMLO,TERMHI,IGNORE_NO_CHAN_ERR) ALTRET;
      353        7
      354        8             %INCLUDE CP_6;
      355       89             %INCLUDE CP_6_SUBS;
      356      629             %INCLUDE KS_PERR_C;
      357      696             %INCLUDE KL_CONFIG_M;
      358     1458             %INCLUDE XU_MACRO_C;
      359     4564
      360     4565             %PARSE$OUT (NAME=OUT$BLK,STCLASS=BASED);
      361     4610             %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
      362     4648
      363     4649    1        DCL KSU$BLD_TERMID ENTRY(3) ALTRET;
      364     4650    1        DCL KSE$ERRMSG ENTRY(4);
      365     4651    1        DCL KSU$CHK_TRM_RNG ENTRY(2) ALTRET;
      366     4652
      367     4653    1        DCL TOP$ PTR;
      368     4654    1        DCL IGNORE_NO_CHAN_ERR BIT(1) ALIGNED;
      369     4655             %B$TERMINAL_ID (FPTN=TERMLO,STCLASS=PARAM);
      370     4684             %B$TERMINAL_ID (FPTN=TERMHI,STCLASS=PARAM);
      371     4713
      372     4714
      373     4715    1        CALL KSU$BLD_TERMID (TOP$->OUT$BLK.SUBLK$(0),TERMLO,IGNORE_NO_CHAN_ERR) ALTRET(
              4715                 ERR);
      374     4716    1        IF TOP$->OUT$BLK.NSUBLKS = 2 THEN
      375     4717    2           DO;
      376     4718    2              CALL KSU$BLD_TERMID (TOP$->OUT$BLK.SUBLK$(1),TERMHI,IGNORE_NO_CHAN_ERR)
              4718                       ALTRET(ERR);
      377     4719    2              CALL KSU$CHK_TRM_RNG (TERMLO,TERMHI)
      378     4720    3                 WHENALTRETURN DO;
      379     4721    3                    CALL KSE$ERRMSG (%E$KS_BAD_TRM_RANGE);
      380     4722                         /*E* ERROR: KSN-E$KS_BAD_TRM_RANGE-0
      381     4723                            MESSAGE: Illegal range specified.
PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:94   
      382     4724                            MESSAGE1: The two terminal IDs specified are
      383     4725                                      either not of the same level, or the
      384     4726                                      second termid is less then the first.*/
      385     4727    3                    GOTO ERR;
      386     4728    3                 END;
      387     4729    2           END;
      388     4730    1        ELSE
      389     4731    1           TERMHI = TERMLO;
      390     4732    1        RETURN;
      391     4733
      392     4734    1   ERR:    ALTRETURN;
      393     4735
      394     4736    1   END KSU$BLD_TERMRANGE;
      395     4737        %EOD;

PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:95   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KS_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$BLD_TERMRANGE.

   Procedure KSU$BLD_TERMRANGE requires 47 words for executable code.
   Procedure KSU$BLD_TERMRANGE requires 12 words of local(AUTO) storage.

PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:96   

 Object Unit name= KSU$BLD_TERMRANGE                          File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:48:01.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    47     57  KSU$BLD_TERMRANGE
    2  RoData even  none     2      2  KSU$BLD_TERMRANGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  KSU$BLD_TERMRANGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 KSU$BLD_TERMID
 yes     yes           Std       2 KSU$CHK_TRM_RNG
         yes           Std       4 KSE$ERRMSG
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:97   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:98   


      347        1        /*T***********************************************************/
      348        2        /*T*                                                         */
      349        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      350        4        /*T*                                                         */
      351        5        /*T***********************************************************/
      352        6        KSU$BLD_TERMRANGE:  PROC (TOP$,TERMLO,TERMHI,IGNORE_NO_CHAN_ERR) ALTRET;

      6  1 000000   000000 700200 xent  KSU$BLD_TER* TSX0  ! X66_AUTO_4
         1 000001   000014 000004                    ZERO    12,4

      353        7
      354        8             %INCLUDE CP_6;
      355       89             %INCLUDE CP_6_SUBS;
      356      629             %INCLUDE KS_PERR_C;
      357      696             %INCLUDE KL_CONFIG_M;
      358     1458             %INCLUDE XU_MACRO_C;
      359     4564
      360     4565             %PARSE$OUT (NAME=OUT$BLK,STCLASS=BASED);
      361     4610             %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
      362     4648
      363     4649    1        DCL KSU$BLD_TERMID ENTRY(3) ALTRET;
      364     4650    1        DCL KSE$ERRMSG ENTRY(4);
      365     4651    1        DCL KSU$CHK_TRM_RNG ENTRY(2) ALTRET;
      366     4652
      367     4653    1        DCL TOP$ PTR;
      368     4654    1        DCL IGNORE_NO_CHAN_ERR BIT(1) ALIGNED;
      369     4655             %B$TERMINAL_ID (FPTN=TERMLO,STCLASS=PARAM);
      370     4684             %B$TERMINAL_ID (FPTN=TERMHI,STCLASS=PARAM);
      371     4713
      372     4714
      373     4715    1       CALL KSU$BLD_TERMID (TOP$->OUT$BLK.SUBLK$(0),TERMLO,IGNORE_NO_CHAN_ERR) ALTRET(
              4715                 ERR);

   4715  1 000002   200003 470500                    LDP0    @TOP$,,AUTO
         1 000003   000000 471500                    LDP1    0,,PR0
         1 000004   200006 236100                    LDQ     @IGNORE_NO_CHAN_ERR,,AUTO
PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:99   
         1 000005   200012 756100                    STQ     @IGNORE_NO_CHAN_ERR+4,,AUTO
         1 000006   200004 236100                    LDQ     @TERMLO,,AUTO
         1 000007   200011 756100                    STQ     @IGNORE_NO_CHAN_ERR+3,,AUTO
         1 000010   100003 633500                    EPPR3   3,,PR1
         1 000011   200010 453500                    STP3    @IGNORE_NO_CHAN_ERR+2,,AUTO
         1 000012   200010 630500                    EPPR0   @IGNORE_NO_CHAN_ERR+2,,AUTO
         1 000013   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000014   000000 701000 xent               TSX1    KSU$BLD_TERMID
         1 000015   000056 702000 1                  TSX2    ERR

      374     4716    1        IF TOP$->OUT$BLK.NSUBLKS = 2 THEN

   4716  1 000016   200003 470500                    LDP0    @TOP$,,AUTO
         1 000017   000000 471500                    LDP1    0,,PR0
         1 000020   100001 220100                    LDX0    1,,PR1
         1 000021   000002 100003                    CMPX0   2,DU
         1 000022   000050 601000 1                  TNZ     s:4731

      375     4717    2           DO;

      376     4718    2              CALL KSU$BLD_TERMID (TOP$->OUT$BLK.SUBLK$(1),TERMHI,IGNORE_NO_CHAN_ERR)
              4718                       ALTRET(ERR);

   4718  1 000023   200006 236100                    LDQ     @IGNORE_NO_CHAN_ERR,,AUTO
         1 000024   200012 756100                    STQ     @IGNORE_NO_CHAN_ERR+4,,AUTO
         1 000025   200005 236100                    LDQ     @TERMHI,,AUTO
         1 000026   200011 756100                    STQ     @IGNORE_NO_CHAN_ERR+3,,AUTO
         1 000027   100004 633500                    EPPR3   4,,PR1
         1 000030   200010 453500                    STP3    @IGNORE_NO_CHAN_ERR+2,,AUTO
         1 000031   200010 630500                    EPPR0   @IGNORE_NO_CHAN_ERR+2,,AUTO
         1 000032   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000033   000000 701000 xent               TSX1    KSU$BLD_TERMID
         1 000034   000056 702000 1                  TSX2    ERR

      377     4719    2              CALL KSU$CHK_TRM_RNG (TERMLO,TERMHI)

   4719  1 000035   200004 630500                    EPPR0   @TERMLO,,AUTO
PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:100  
         1 000036   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000037   000000 701000 xent               TSX1    KSU$CHK_TRM_RNG
         1 000040   000042 702000 1                  TSX2    s:4721
         1 000041   000047 710000 1                  TRA     s:4729

      378     4720    3                 WHENALTRETURN DO;

      379     4721    3                    CALL KSE$ERRMSG (%E$KS_BAD_TRM_RANGE);

   4721  1 000042   000001 630400 2                  EPPR0   1
         1 000043   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000044   000000 701000 xent               TSX1    KSE$ERRMSG
         1 000045   000000 011000                    NOP     0

      380     4722                         /*E* ERROR: KSN-E$KS_BAD_TRM_RANGE-0
      381     4723                            MESSAGE: Illegal range specified.
      382     4724                            MESSAGE1: The two terminal IDs specified are
      383     4725                                      either not of the same level, or the
      384     4726                                      second termid is less then the first.*/
      385     4727    3                    GOTO ERR;

   4727  1 000046   000056 710000 1                  TRA     ERR

      386     4728    3                 END;
      387     4729    2           END;

   4729  1 000047   000055 710000 1                  TRA     s:4732

      388     4730    1        ELSE
      389     4731    1           TERMHI = TERMLO;

   4731  1 000050   200004 473500                    LDP3    @TERMLO,,AUTO
         1 000051   200005 474500                    LDP4    @TERMHI,,AUTO
         1 000052   000100 100500                    MLR     fill='000'O
         1 000053   300000 000020                    ADSC9   0,,PR3                   cn=0,n=16
         1 000054   400000 000020                    ADSC9   0,,PR4                   cn=0,n=16

PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:101  
      390     4732    1        RETURN;

   4732  1 000055   000000 702200 xent               TSX2  ! X66_ARET

      391     4733
      392     4734    1   ERR:    ALTRETURN;

   4734  1 000056   000000 702200 xent  ERR          TSX2  ! X66_AALT
      393     4735
      394     4736    1   END KSU$BLD_TERMRANGE;
      395     4737        %EOD;

PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:102  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KS_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$BLD_TERMRANGE.
PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:103  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @IGNORE_NO_CHAN_ERR        5-0-0/w PTR         r     1 @TERMHI
     4-0-0/w PTR         r     1 @TERMLO                    3-0-0/w PTR         r     1 @TOP$
    *0-0-0/w BIT         r     1 IGNORE_NO_CHAN_ERR        *0-0-0/c STRC(144)   r     1 TERMHI
    *0-0-0/c STRC(144)   r     1 TERMLO                    *0-0-0/w PTR         r     1 TOP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure KSU$BLD_TERMRANGE requires 47 words for executable code.
   Procedure KSU$BLD_TERMRANGE requires 12 words of local(AUTO) storage.
PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:104  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KSU$BLD_TERMRANGE File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:48 Page:105  
          MINI XREF LISTING

ERR
      4734**LABEL    4715--CALLALT  4718--CALLALT  4727--GOTO
IGNORE_NO_CHAN_ERR
      4654**DCL         6--PROC     4715<>CALL     4718<>CALL
KSE$ERRMSG
      4650**DCL-ENT  4721--CALL
KSU$BLD_TERMID
      4649**DCL-ENT  4715--CALL     4718--CALL
KSU$CHK_TRM_RNG
      4651**DCL-ENT  4719--CALL
OUT$BLK.NSUBLKS
      4583**DCL      4716>>IF
OUT$BLK.SUBLK$
      4604**DCL      4715<>CALL     4718<>CALL
OUT$SYM.COUNT
      4640**DCL      4643--IMP-SIZ
TERMHI
      4698**DCL         6--PROC     4718<>CALL     4719<>CALL     4731<<ASSIGN
TERMHI.TERM
      4702**DCL      4711--REDEF
TERMLO
      4669**DCL         6--PROC     4715<>CALL     4719<>CALL     4731>>ASSIGN
TERMLO.TERM
      4673**DCL      4682--REDEF
TOP$
      4653**DCL         6--PROC     4715>>CALL     4716>>IF       4718>>CALL

PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:106  
      396        1        /*M* KSU$BLD_TERRMID - Routine to build a KL$TERMINAL_ID structure from
      397        2        NETCON parse nodes */
      398        3        /*T***********************************************************/
      399        4        /*T*                                                         */
      400        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      401        6        /*T*                                                         */
      402        7        /*T***********************************************************/
      403        8        KSU$BLD_TERMID: PROC(TOP$,TERMID,IGNORE_NO_CHAN_ERR) ALTRET;
      404        9        /**/
      405       10        %INCLUDE CP_6;
      406       91        %INCLUDE CP_6_SUBS;
      407      631        %INCLUDE KS_MACRO_M;
      408      828        %INCLUDE KS_SUBS_C;
      409     1071        %INCLUDE KS_PERR_C;
      410     1138        %INCLUDE KS_DATA_R;
      411     1153        %INCLUDE KL_CONFIG_M;
      412     1915        %INCLUDE KL_MACRO_C;
      413     5267        %INCLUDE XU_MACRO_C;
      414     8373        %INCLUDE F$DCB;
      415     8422        %INCLUDE B_ERRORS_C;
      416     9549        /**/
      417     9550    1   DCL TOP$ PTR;
      418     9551        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM);
      419     9580    1        DCL IGNORE_NO_CHAN_ERR  BIT(1) ALIGNED;
      420     9581        /**/
      421     9582    1   DCL KSE$ERRMSG ENTRY(4);
      422     9583    1   DCL KSU$HEXBIN ENTRY(2);
      423     9584    1   DCL KSU$READ_NETCON ENTRY(2) ALTRET;
      424     9585        /**/
      425     9586        %B$TCB;
      426     9589        %B$ALT;
      427     9597        /**/
      428     9598    1   DCL B$TCB$ PTR SYMREF;
      429     9599        /**/
      430     9600    1   DCL I UBIN;
      431     9601    1   DCL J UBIN;
      432     9602    1   DCL BLK$ PTR;
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:107  
      433     9603    1   DCL TEMP UBIN;
      434     9604    1   DCL ALTRET_FLAG BIT(1);
      435     9605        %B$TERMINAL_ID (FPTN=TERMID_C,STCLASS=STATIC);
      436     9634        %KL$NETWORK (NAME=KS_NETWORK,NUM=255,STCLASS=STATIC);
      437     9661        %KL$NETWORK_KEY (NAME=KS_NETWORK_KEY,STCLASS=STATIC);
      438     9678        /**/
      439     9679        %PARSE$OUT (NAME=OUT$BLK,STCLASS="BASED(TOP$)");
      440     9724        %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
      441     9762        /**/
      442     9763    1   DCL M$NETCON DCB;
      443     9764        /**/
      444     9765        %FPT_READ (FPTN=READ_NETCON,
      445     9766                   DCB=M$NETCON,
      446     9767                   KEYS=YES,
      447     9768                   BUF=TERM_REC,
      448     9769                   KEY=TERM_KEY);
      449     9808        /**/
      450     9809        %KL$TERM (NAME=TERM_REC,
      451     9810                  STCLASS=STATIC);
      452     9859        %KL$TERM_KEY (NAME=TERM_KEY,
      453     9860                      STCLASS=STATIC);
      454     9906        %EJECT;
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:108  
      455     9907    1        TERMID = TERMID_C;
      456     9908    2        DO CASE(OUT$BLK.CODE);
      457     9909    2           CASE(%KS_TERM1);
      458     9910    2              TEMP = 0;
      459     9911    2              ALTRET_FLAG = '0'B;
      460     9912    2              TERMID.LEV = OUT$BLK.NSUBLKS;
      461     9913    3              DO J = 0 TO OUT$BLK.NSUBLKS - 1;
      462     9914    3                 BLK$ = OUT$BLK.SUBLK$(J);
      463     9915    4                 DO CASE (J);
      464     9916    4                    CASE (0);    /* hex digit */
      465     9917    4                       CALL KSU$HEXBIN (TEMP,BLK$->OUT$BLK.SUBLK$(0));
      466     9918    4                 TERMID.TERM.CHANNEL.BYT(0) = TEMP/256;
      467     9919    4                 TERMID.TERM.CHANNEL.BYT(1) = MOD(TEMP,256);
      468     9920    4                 TERMID.TERM.TERM_NAME = ' ';
      469     9921    4                  IF TERMID.TERM.CHANNEL.BYT(0) = 0 THEN
      470     9922    5                     DO;
      471     9923    5                        CALL KSE$ERRMSG(%E$KS_CHAN_NR_TOO_SMALL);
      472     9924                             /*E* ERROR: KSN-E$KS_CHAN_NR_TOO_SMALL-0
      473     9925                                  MESSAGE: A channel number must be at least 3 hex digits
      474     9926                                   DESCRIPTION: SEE MESSAGE*/
      475     9927    5                        ALTRET_FLAG = '1'B;
      476     9928    5                     END;
      477     9929    4                  IF (TERMID.TERM.CHANNEL.BYT(1) ~= 0) &
      478     9930    4                     (TERMID.TERM.CHANNEL.BYT(1) ~= 128) THEN
      479     9931    5                     DO;
      480     9932    5                        CALL KSE$ERRMSG(%E$KS_ILLEGAL_CHANNEL_NR);
      481     9933                             /*E*  ERROR: KSN-E$KS_ILLEGAL_CHANNEL_NR-0
      482     9934                        MESSAGE: A channel number must be a multiple of 128 ('00'X OR '80'X)
      483     9935                                   DESCRIPTION: SEE MESSAGE*/
      484     9936    5                        ALTRET_FLAG = '1'B;
      485     9937    5                     END;
      486     9938    4              CASE(1);
      487     9939    4                 CALL CHARBIN(TEMP,BLK$->OUT$SYM.TEXT);
      488     9940    4                 TERMID.TERM.SUBDEVICE.BYT(0) = TEMP/256;
      489     9941    4                 TERMID.TERM.SUBDEVICE.BYT(1) = MOD(TEMP,256);
      490     9942    4              CASE(2);
      491     9943    4                 CALL CHARBIN(TEMP,BLK$->OUT$SYM.TEXT);
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:109  
      492     9944    4                 TERMID.TERM.SUBSUBDEVICE.BYT(0) = TEMP/256;
      493     9945    4                 TERMID.TERM.SUBSUBDEVICE.BYT(1) = MOD(TEMP,256);
      494     9946    4              END;  /* do case (j) */
      495     9947    3              END;   /* do j to nsublks */
      496     9948
      497     9949
      498     9950    2           CASE(%KS_TERM2);
      499     9951    2              ALTRET_FLAG = '0'B;
      500     9952    3              DO I = 0 TO OUT$BLK.NSUBLKS - 1;
      501     9953    3                 BLK$ = OUT$BLK.SUBLK$(I);
      502     9954    4                 DO CASE(I);
      503     9955    4                    CASE(0);
      504     9956    4                       TERM_KEY.TERMID = '0'B;
      505     9957    4                       TERM_REC = '0'B;
      506     9958    4                       TERM_KEY.TERMID.TERM.TERM_NAME = BLK$->OUT$SYM.TEXT;
      507     9959    4                       CALL KSU$READ_NETCON (VECTOR(TERM_KEY),VECTOR(TERM_REC))
      508     9960    5                          WHENALTRETURN DO;
      509     9961    5                             IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOKEY THEN
      510     9962    6                                DO;
      511     9963    6                                   KS_SUB_BUF_3.COUNT = SIZEC(TERM_KEY.TERMID.TERM.
              9963                                            TERM_NAME);
      512     9964    6                                   KS_SUB_BUF_3.TEXT  = TERM_KEY.TERMID.TERM.TERM_NAME;
      513     9965    6                                   CALL KSE$ERRMSG (%E$KS_UNDEF_TERMNAME,
      514     9966    6                                      VECTOR(KS_SUB_BUF_3));
      515     9967                /*E* ERROR:  KSN-E$KS_UNDEF_TERMNAME-0
      516     9968                     MESSAGE: Terminal name %U1 is not defined.
      517     9969                     MESSAGE1: A terminal name must be defined in SUPER
      518     9970                               before it can be used in NETCON. */
      519     9971    6                                   ALTRETURN;
      520     9972    6                                END;
      521     9973    5                             ELSE
      522     9974    5                                GOTO ERR;
      523     9975    5                          END;
      524     9976
      525     9977    4                       TERMID = TERM_REC.TERMID;
      526     9978    4                       TERMID.TERM.TERM_NAME = BLK$->OUT$SYM.TEXT;
      527     9979    4                       TERMID.LEV = OUT$BLK.NSUBLKS;
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:110  
      528     9980    5                       IF TERM_REC.NODE ~= KS_NODE THEN DO;
      529     9981    5                          KS_NODENAME_SV = KS_NODENAME;
      530     9982    5                          KS_NODE_SV = KS_NODE;
      531     9983    5                          KS_NODE = TERM_REC.NODE;
      532     9984    5                          IF KS_NODE ~=0 THEN
      533     9985    6                             DO;
      534     9986    6                                CALL KSU$READ_NETCON (VECTOR(KS_NETWORK_KEY),VECTOR(
              9986                                         KS_NETWORK));
      535     9987    6                                KS_NODENAME = KS_NETWORK.NODE.NODE(KS_NODE);
      536     9988    6                             END;
      537     9989    5                          END;  /* IF */
      538     9990
      539     9991    4                       IF TERM_REC.TERMID.TERM.CHANNEL = '0'B AND
      540     9992    4                          ADDR(IGNORE_NO_CHAN_ERR) ~= ADDR(NIL) THEN
      541     9993    4                          IF NOT IGNORE_NO_CHAN_ERR THEN
      542     9994    5                             DO;
      543     9995    5                                CALL KSE$ERRMSG (%E$KS_NO_CHAN_FOR_TRM,
      544     9996    5                                                 VECTOR(BLK$->OUT$SYM.TEXT));
      545     9997                /*E* ERROR:   KSN-E$KS_NO_CHAN_FOR_TRM-0
      546     9998                     MESSAGE: Terminal name %U1 has no associated channel.*/
      547     9999    5                                ALTRETURN;
      548    10000    5                             END;
      549    10001
      550    10002    4                    CASE(1);  /* Sub-device */
      551    10003    4                       CALL CHARBIN(TEMP,BLK$->OUT$SYM.TEXT);
      552    10004    4                       TERMID.TERM.SUBDEVICE.BYT(0) = TEMP/256;
      553    10005    4                       TERMID.TERM.SUBDEVICE.BYT(1) = MOD(TEMP,256);
      554    10006    4                    CASE(2);
      555    10007    4                       CALL CHARBIN(TEMP,BLK$->OUT$SYM.TEXT);
      556    10008    4                       TERMID.TERM.SUBSUBDEVICE.BYT(0) = TEMP/256;
      557    10009    4                       TERMID.TERM.SUBSUBDEVICE.BYT(1) = MOD(TEMP,256);
      558    10010    4                    END;  /* CASE(I) */
      559    10011    3                 END;  /* DO I */
      560    10012    2              END;  /* DO CASE(OUT$BLK.CODE) */
      561    10013    1        IF ALTRET_FLAG THEN
      562    10014    1           ALTRETURN;
      563    10015    1        ELSE
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:111  
      564    10016    1           RETURN;
      565    10017    1   ERR:;
      566    10018    1        CALL KSE$ERRMSG(0);
      567    10019    1        ALTRETURN;
      568    10020    1   END KSU$BLD_TERMID;
      569    10021        %EOD;

PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:112  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KS_PERR_C.:E05TOU  is referenced.
   KS_SUBS_C.:E05TOU  is referenced.
   KS_MACRO_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$BLD_TERMID.

   Procedure KSU$BLD_TERMID requires 329 words for executable code.
   Procedure KSU$BLD_TERMID requires 16 words of local(AUTO) storage.

PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:113  

 Object Unit name= KSU$BLD_TERMID                             File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:48:20.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none  1310   2436  KSU$BLD_TERMID
    2   DCB   even  none     0      0  M$NETCON
    3   Proc  even  none   329    511  KSU$BLD_TERMID
    4  RoData even  none    27     33  KSU$BLD_TERMID

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        3  KSU$BLD_TERMID

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 KSU$HEXBIN
         yes           Std       4 KSE$ERRMSG
 yes     yes           Std       2 KSU$READ_NETCON
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:114  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KS_MYSTATION                          KS_NODENAME
     KS_NODE                               KS_NODENAME_SV                        KS_NODE_SV
     KS_MSGBUF$                            KS_SUB_BUF_3                          B$TCB$
     M$NETCON                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:115  


      396        1        /*M* KSU$BLD_TERRMID - Routine to build a KL$TERMINAL_ID structure from
      397        2        NETCON parse nodes */
      398        3        /*T***********************************************************/
      399        4        /*T*                                                         */
      400        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      401        6        /*T*                                                         */
      402        7        /*T***********************************************************/
      403        8        KSU$BLD_TERMID: PROC(TOP$,TERMID,IGNORE_NO_CHAN_ERR) ALTRET;

      8  3 000000   000000 700200 xent  KSU$BLD_TER* TSX0  ! X66_AUTO_3
         3 000001   000020 000003                    ZERO    16,3

      404        9        /**/
      405       10        %INCLUDE CP_6;
      406       91        %INCLUDE CP_6_SUBS;
      407      631        %INCLUDE KS_MACRO_M;
      408      828        %INCLUDE KS_SUBS_C;
      409     1071        %INCLUDE KS_PERR_C;
      410     1138        %INCLUDE KS_DATA_R;
      411     1153        %INCLUDE KL_CONFIG_M;
      412     1915        %INCLUDE KL_MACRO_C;
      413     5267        %INCLUDE XU_MACRO_C;
      414     8373        %INCLUDE F$DCB;
      415     8422        %INCLUDE B_ERRORS_C;
      416     9549        /**/
      417     9550    1   DCL TOP$ PTR;
      418     9551        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM);
      419     9580    1        DCL IGNORE_NO_CHAN_ERR  BIT(1) ALIGNED;
      420     9581        /**/
      421     9582    1   DCL KSE$ERRMSG ENTRY(4);
      422     9583    1   DCL KSU$HEXBIN ENTRY(2);
      423     9584    1   DCL KSU$READ_NETCON ENTRY(2) ALTRET;
      424     9585        /**/
      425     9586        %B$TCB;
      426     9589        %B$ALT;
      427     9597        /**/
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:116  
      428     9598    1   DCL B$TCB$ PTR SYMREF;
      429     9599        /**/
      430     9600    1   DCL I UBIN;
      431     9601    1   DCL J UBIN;
      432     9602    1   DCL BLK$ PTR;
      433     9603    1   DCL TEMP UBIN;
      434     9604    1   DCL ALTRET_FLAG BIT(1);
      435     9605        %B$TERMINAL_ID (FPTN=TERMID_C,STCLASS=STATIC);
      436     9634        %KL$NETWORK (NAME=KS_NETWORK,NUM=255,STCLASS=STATIC);
      437     9661        %KL$NETWORK_KEY (NAME=KS_NETWORK_KEY,STCLASS=STATIC);
      438     9678        /**/
      439     9679        %PARSE$OUT (NAME=OUT$BLK,STCLASS="BASED(TOP$)");
      440     9724        %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
      441     9762        /**/
      442     9763    1   DCL M$NETCON DCB;
      443     9764        /**/
      444     9765        %FPT_READ (FPTN=READ_NETCON,
      445     9766                   DCB=M$NETCON,
      446     9767                   KEYS=YES,
      447     9768                   BUF=TERM_REC,
      448     9769                   KEY=TERM_KEY);
      449     9808        /**/
      450     9809        %KL$TERM (NAME=TERM_REC,
      451     9810                  STCLASS=STATIC);
      452     9859        %KL$TERM_KEY (NAME=TERM_KEY,
      453     9860                      STCLASS=STATIC);
      454     9906        %EJECT;
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:117  
      455     9907    1        TERMID = TERMID_C;

   9907  3 000002   200004 470500                    LDP0    @TERMID,,AUTO
         3 000003   000100 100400                    MLR     fill='000'O
         3 000004   000000 000020 1                  ADSC9   TERMID_C                 cn=0,n=16
         3 000005   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

      456     9908    2        DO CASE(OUT$BLK.CODE);

   9908  3 000006   200003 471500                    LDP1    @TOP$,,AUTO
         3 000007   100000 473500                    LDP3    0,,PR1
         3 000010   300000 720100                    LXL0    0,,PR3
         3 000011   000003 100003                    CMPX0   3,DU
         3 000012   000014 602010 3                  TNC     s:9908+6,X0
         3 000013   000500 710000 3                  TRA     s:10013
         3 000014   000500 710000 3                  TRA     s:10013
         3 000015   000017 710000 3                  TRA     s:9910
         3 000016   000232 710000 3                  TRA     s:9951

      457     9909    2           CASE(%KS_TERM1);

      458     9910    2              TEMP = 0;

   9910  3 000017   200011 450100                    STZ     TEMP,,AUTO

      459     9911    2              ALTRET_FLAG = '0'B;

   9911  3 000020   200012 450100                    STZ     ALTRET_FLAG,,AUTO

      460     9912    2              TERMID.LEV = OUT$BLK.NSUBLKS;

   9912  3 000021   100000 473500                    LDP3    0,,PR1
         3 000022   000100 101500                    MRL     fill='000'O
         3 000023   300001 000002                    ADSC9   1,,PR3                   cn=0,n=2
         3 000024   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1

      461     9913    3              DO J = 0 TO OUT$BLK.NSUBLKS - 1;
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:118  

   9913  3 000025   200007 450100                    STZ     J,,AUTO
         3 000026   000222 710000 3                  TRA     s:9947+3

      462     9914    3                 BLK$ = OUT$BLK.SUBLK$(J);

   9914  3 000027   200003 470500                    LDP0    @TOP$,,AUTO
         3 000030   000000 471500                    LDP1    0,,PR0
         3 000031   200007 720100                    LXL0    J,,AUTO
         3 000032   100003 236110                    LDQ     3,X0,PR1
         3 000033   200010 756100                    STQ     BLK$,,AUTO

      463     9915    4                 DO CASE (J);

   9915  3 000034   200007 235100                    LDA     J,,AUTO
         3 000035   000003 115007                    CMPA    3,DL
         3 000036   000040 602005 3                  TNC     s:9915+4,AL
         3 000037   000217 710000 3                  TRA     s:9947
         3 000040   000043 710000 3                  TRA     s:9917
         3 000041   000144 710000 3                  TRA     s:9939
         3 000042   000172 710000 3                  TRA     s:9943

      464     9916    4                    CASE (0);    /* hex digit */

      465     9917    4                       CALL KSU$HEXBIN (TEMP,BLK$->OUT$BLK.SUBLK$(0));

   9917  3 000043   000003 036003                    ADLQ    3,DU
         3 000044   200015 756100                    STQ     ALTRET_FLAG+3,,AUTO
         3 000045   200011 631500                    EPPR1   TEMP,,AUTO
         3 000046   200014 451500                    STP1    ALTRET_FLAG+2,,AUTO
         3 000047   200014 630500                    EPPR0   ALTRET_FLAG+2,,AUTO
         3 000050   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000051   000000 701000 xent               TSX1    KSU$HEXBIN
         3 000052   000000 011000                    NOP     0

      466     9918    4                 TERMID.TERM.CHANNEL.BYT(0) = TEMP/256;

PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:119  
   9918  3 000053   200011 236100                    LDQ     TEMP,,AUTO
         3 000054   000010 772000                    QRL     8
         3 000055   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000056   200004 470500                    LDP0    @TERMID,,AUTO
         3 000057   003100 061500                    CSR     bolr='003'O
         3 000060   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000061   000000 410010                    BDSC    0,,PR0                   by=2,bit=1,n=8

      467     9919    4                 TERMID.TERM.CHANNEL.BYT(1) = MOD(TEMP,256);

   9919  3 000062   200011 236100                    LDQ     TEMP,,AUTO
         3 000063   000377 376007                    ANQ     255,DL
         3 000064   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000065   003100 061500                    CSR     bolr='003'O
         3 000066   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000067   000000 610010                    BDSC    0,,PR0                   by=3,bit=1,n=8

      468     9920    4                 TERMID.TERM.TERM_NAME = ' ';

   9920  3 000070   040100 100400                    MLR     fill='040'O
         3 000071   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000072   000002 000010                    ADSC9   2,,PR0                   cn=0,n=8

      469     9921    4                  IF TERMID.TERM.CHANNEL.BYT(0) = 0 THEN

   9921  3 000073   003100 061500                    CSR     bolr='003'O
         3 000074   000000 410010                    BDSC    0,,PR0                   by=2,bit=1,n=8
         3 000075   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000076   200014 236100                    LDQ     ALTRET_FLAG+2,,AUTO
         3 000077   000000 116003                    CMPQ    0,DU
         3 000100   000107 601000 3                  TNZ     s:9929

      470     9922    5                     DO;

      471     9923    5                        CALL KSE$ERRMSG(%E$KS_CHAN_NR_TOO_SMALL);

   9923  3 000101   000001 630400 4                  EPPR0   1
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:120  
         3 000102   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000103   000000 701000 xent               TSX1    KSE$ERRMSG
         3 000104   000000 011000                    NOP     0

      472     9924                             /*E* ERROR: KSN-E$KS_CHAN_NR_TOO_SMALL-0
      473     9925                                  MESSAGE: A channel number must be at least 3 hex digits
      474     9926                                   DESCRIPTION: SEE MESSAGE*/
      475     9927    5                        ALTRET_FLAG = '1'B;

   9927  3 000105   400000 236003                    LDQ     -131072,DU
         3 000106   200012 756100                    STQ     ALTRET_FLAG,,AUTO

      476     9928    5                     END;

      477     9929    4                  IF (TERMID.TERM.CHANNEL.BYT(1) ~= 0) &

   9929  3 000107   400000 220003                    LDX0    -131072,DU
         3 000110   200004 470500                    LDP0    @TERMID,,AUTO
         3 000111   003100 061500                    CSR     bolr='003'O
         3 000112   000000 610010                    BDSC    0,,PR0                   by=3,bit=1,n=8
         3 000113   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000114   200014 236100                    LDQ     ALTRET_FLAG+2,,AUTO
         3 000115   000000 116003                    CMPQ    0,DU
         3 000116   000120 601000 3                  TNZ     s:9929+9
         3 000117   000000 220003                    LDX0    0,DU
         3 000120   400000 221003                    LDX1    -131072,DU
         3 000121   003100 061500                    CSR     bolr='003'O
         3 000122   000000 610010                    BDSC    0,,PR0                   by=3,bit=1,n=8
         3 000123   200015 000044                    BDSC    ALTRET_FLAG+3,,AUTO      by=0,bit=0,n=36
         3 000124   200015 236100                    LDQ     ALTRET_FLAG+3,,AUTO
         3 000125   000200 116007                    CMPQ    128,DL
         3 000126   000130 601000 3                  TNZ     s:9929+17
         3 000127   000000 221003                    LDX1    0,DU
         3 000130   000000 636011                    EAQ     0,X1
         3 000131   200016 756100                    STQ     ALTRET_FLAG+4,,AUTO
         3 000132   000000 636010                    EAQ     0,X0
         3 000133   200016 376100                    ANQ     ALTRET_FLAG+4,,AUTO
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:121  
         3 000134   000217 600000 3                  TZE     s:9947

      478     9930    4                     (TERMID.TERM.CHANNEL.BYT(1) ~= 128) THEN
      479     9931    5                     DO;

      480     9932    5                        CALL KSE$ERRMSG(%E$KS_ILLEGAL_CHANNEL_NR);

   9932  3 000135   000003 630400 4                  EPPR0   3
         3 000136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000137   000000 701000 xent               TSX1    KSE$ERRMSG
         3 000140   000000 011000                    NOP     0

      481     9933                             /*E*  ERROR: KSN-E$KS_ILLEGAL_CHANNEL_NR-0
      482     9934                       MESSAGE: A channel number must be a multiple of 128 ('00'X OR '80'X)
      483     9935                                   DESCRIPTION: SEE MESSAGE*/
      484     9936    5                        ALTRET_FLAG = '1'B;

   9936  3 000141   400000 236003                    LDQ     -131072,DU
         3 000142   200012 756100                    STQ     ALTRET_FLAG,,AUTO

      485     9937    5                     END;

   9937  3 000143   000217 710000 3                  TRA     s:9947

      486     9938    4              CASE(1);

      487     9939    4                 CALL CHARBIN(TEMP,BLK$->OUT$SYM.TEXT);

   9939  3 000144   200010 473500                    LDP3    BLK$,,AUTO
         3 000145   300004 236100                    LDQ     4,,PR3
         3 000146   000033 772000                    QRL     27
         3 000147   000000 621006                    EAX1    0,QL
         3 000150   000100 305540                    DTB
         3 000151   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         3 000152   200014 000010                    NDSC9   ALTRET_FLAG+2,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         3 000153   200015 236100                    LDQ     ALTRET_FLAG+3,,AUTO
         3 000154   200011 756100                    STQ     TEMP,,AUTO
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:122  

      488     9940    4                 TERMID.TERM.SUBDEVICE.BYT(0) = TEMP/256;

   9940  3 000155   000010 772000                    QRL     8
         3 000156   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000157   200004 471500                    LDP1    @TERMID,,AUTO
         3 000160   003100 061500                    CSR     bolr='003'O
         3 000161   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000162   100001 010010                    BDSC    1,,PR1                   by=0,bit=1,n=8

      489     9941    4                 TERMID.TERM.SUBDEVICE.BYT(1) = MOD(TEMP,256);

   9941  3 000163   200011 236100                    LDQ     TEMP,,AUTO
         3 000164   000377 376007                    ANQ     255,DL
         3 000165   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000166   003100 061500                    CSR     bolr='003'O
         3 000167   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000170   100001 210010                    BDSC    1,,PR1                   by=1,bit=1,n=8
         3 000171   000217 710000 3                  TRA     s:9947

      490     9942    4              CASE(2);

      491     9943    4                 CALL CHARBIN(TEMP,BLK$->OUT$SYM.TEXT);

   9943  3 000172   200010 473500                    LDP3    BLK$,,AUTO
         3 000173   300004 236100                    LDQ     4,,PR3
         3 000174   000033 772000                    QRL     27
         3 000175   000000 621006                    EAX1    0,QL
         3 000176   000100 305540                    DTB
         3 000177   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         3 000200   200014 000010                    NDSC9   ALTRET_FLAG+2,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         3 000201   200015 236100                    LDQ     ALTRET_FLAG+3,,AUTO
         3 000202   200011 756100                    STQ     TEMP,,AUTO

      492     9944    4                 TERMID.TERM.SUBSUBDEVICE.BYT(0) = TEMP/256;

   9944  3 000203   000010 772000                    QRL     8
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:123  
         3 000204   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000205   200004 471500                    LDP1    @TERMID,,AUTO
         3 000206   003100 061500                    CSR     bolr='003'O
         3 000207   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000210   100001 410010                    BDSC    1,,PR1                   by=2,bit=1,n=8

      493     9945    4                 TERMID.TERM.SUBSUBDEVICE.BYT(1) = MOD(TEMP,256);

   9945  3 000211   200011 236100                    LDQ     TEMP,,AUTO
         3 000212   000377 376007                    ANQ     255,DL
         3 000213   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000214   003100 061500                    CSR     bolr='003'O
         3 000215   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000216   100001 610010                    BDSC    1,,PR1                   by=3,bit=1,n=8

      494     9946    4              END;  /* do case (j) */

      495     9947    3              END;   /* do j to nsublks */

   9947  3 000217   200007 235100                    LDA     J,,AUTO
         3 000220   000001 035007                    ADLA    1,DL
         3 000221   200007 755100                    STA     J,,AUTO
         3 000222   200003 470500                    LDP0    @TOP$,,AUTO
         3 000223   000000 471500                    LDP1    0,,PR0
         3 000224   100001 236100                    LDQ     1,,PR1
         3 000225   000022 772000                    QRL     18
         3 000226   200007 116100                    CMPQ    J,,AUTO
         3 000227   000231 600000 3                  TZE     s:9947+10
         3 000230   000027 603000 3                  TRC     s:9914
         3 000231   000500 710000 3                  TRA     s:10013

      496     9948
      497     9949
      498     9950    2           CASE(%KS_TERM2);

      499     9951    2              ALTRET_FLAG = '0'B;

PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:124  
   9951  3 000232   200012 450100                    STZ     ALTRET_FLAG,,AUTO

      500     9952    3              DO I = 0 TO OUT$BLK.NSUBLKS - 1;

   9952  3 000233   200006 450100                    STZ     I,,AUTO
         3 000234   000471 710000 3                  TRA     s:10011+3

      501     9953    3                 BLK$ = OUT$BLK.SUBLK$(I);

   9953  3 000235   200003 470500                    LDP0    @TOP$,,AUTO
         3 000236   000000 471500                    LDP1    0,,PR0
         3 000237   200006 720100                    LXL0    I,,AUTO
         3 000240   100003 236110                    LDQ     3,X0,PR1
         3 000241   200010 756100                    STQ     BLK$,,AUTO

      502     9954    4                 DO CASE(I);

   9954  3 000242   200006 235100                    LDA     I,,AUTO
         3 000243   000003 115007                    CMPA    3,DL
         3 000244   000246 602005 3                  TNC     s:9954+4,AL
         3 000245   000466 710000 3                  TRA     s:10011
         3 000246   000251 710000 3                  TRA     s:9956
         3 000247   000413 710000 3                  TRA     s:10003
         3 000250   000441 710000 3                  TRA     s:10007

      503     9955    4                    CASE(0);

      504     9956    4                       TERM_KEY.TERMID = '0'B;

   9956  3 000251   000000 100400                    MLR     fill='000'O
         3 000252   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000253   002431 400020 1                  ADSC9   TERM_KEY                 cn=2,n=16

      505     9957    4                       TERM_REC = '0'B;

   9957  3 000254   000000 100400                    MLR     fill='000'O
         3 000255   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:125  
         3 000256   002424 000023 1                  ADSC9   TERM_REC                 cn=0,n=19

      506     9958    4                       TERM_KEY.TERMID.TERM.TERM_NAME = BLK$->OUT$SYM.TEXT;

   9958  3 000257   200010 471500                    LDP1    BLK$,,AUTO
         3 000260   100004 236100                    LDQ     4,,PR1
         3 000261   000033 772000                    QRL     27
         3 000262   000000 621006                    EAX1    0,QL
         3 000263   040000 100540                    MLR     fill='040'O
         3 000264   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         3 000265   002433 400010 1                  ADSC9   TERM_KEY+2               cn=2,n=8

      507     9959    4                       CALL KSU$READ_NETCON (VECTOR(TERM_KEY),VECTOR(TERM_REC))

   9959  3 000266   000010 630400 4                  EPPR0   8
         3 000267   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000270   000000 701000 xent               TSX1    KSU$READ_NETCON
         3 000271   000273 702000 3                  TSX2    s:9961
         3 000272   000313 710000 3                  TRA     s:9977

      508     9960    5                          WHENALTRETURN DO;

      509     9961    5                             IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOKEY THEN

   9961  3 000273   000000 470400 xsym               LDP0    B$TCB$
         3 000274   000000 471500                    LDP1    0,,PR0
         3 000275   100102 236100                    LDQ     66,,PR1
         3 000276   377770 376007                    ANQ     131064,DL
         3 000277   001020 116007                    CMPQ    528,DL
         3 000300   000504 601000 3                  TNZ     ERR

      510     9962    6                                DO;

      511     9963    6                                   KS_SUB_BUF_3.COUNT = SIZEC(TERM_KEY.TERMID.TERM.
              9963                                            TERM_NAME);

   9963  3 000301   010000 236003                    LDQ     4096,DU
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:126  
         3 000302   000000 552040 xsym               STBQ    KS_SUB_BUF_3,'40'O

      512     9964    6                                   KS_SUB_BUF_3.TEXT = TERM_KEY.TERMID.TERM.TERM_NAME;

   9964  3 000303   040000 100400                    MLR     fill='040'O
         3 000304   002433 400010 1                  ADSC9   TERM_KEY+2               cn=2,n=8
         3 000305   000000 200037 xsym               ADSC9   KS_SUB_BUF_3             cn=1,n=31

      513     9965    6                                   CALL KSE$ERRMSG (%E$KS_UNDEF_TERMNAME,

   9965  3 000306   000015 630400 4                  EPPR0   13
         3 000307   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000310   000000 701000 xent               TSX1    KSE$ERRMSG
         3 000311   000000 011000                    NOP     0

      514     9966    6                                      VECTOR(KS_SUB_BUF_3));
      515     9967                /*E* ERROR:  KSN-E$KS_UNDEF_TERMNAME-0
      516     9968                     MESSAGE: Terminal name %U1 is not defined.
      517     9969                     MESSAGE1: A terminal name must be defined in SUPER
      518     9970                               before it can be used in NETCON. */
      519     9971    6                                   ALTRETURN;

   9971  3 000312   000000 702200 xent               TSX2  ! X66_AALT

      520     9972    6                                END;
      521     9973    5                             ELSE
      522     9974    5                                GOTO ERR;
      523     9975    5                          END;
      524     9976
      525     9977    4                       TERMID = TERM_REC.TERMID;

   9977  3 000313   200004 470500                    LDP0    @TERMID,,AUTO
         3 000314   000100 100400                    MLR     fill='000'O
         3 000315   002424 600020 1                  ADSC9   TERM_REC                 cn=3,n=16
         3 000316   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

      526     9978    4                       TERMID.TERM.TERM_NAME = BLK$->OUT$SYM.TEXT;
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:127  

   9978  3 000317   200010 471500                    LDP1    BLK$,,AUTO
         3 000320   100004 236100                    LDQ     4,,PR1
         3 000321   000033 772000                    QRL     27
         3 000322   000000 620006                    EAX0    0,QL
         3 000323   040100 100540                    MLR     fill='040'O
         3 000324   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         3 000325   000002 000010                    ADSC9   2,,PR0                   cn=0,n=8

      527     9979    4                       TERMID.LEV = OUT$BLK.NSUBLKS;

   9979  3 000326   200003 473500                    LDP3    @TOP$,,AUTO
         3 000327   300000 474500                    LDP4    0,,PR3
         3 000330   000100 101500                    MRL     fill='000'O
         3 000331   400001 000002                    ADSC9   1,,PR4                   cn=0,n=2
         3 000332   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1

      528     9980    5                       IF TERM_REC.NODE ~= KS_NODE THEN DO;

   9980  3 000333   002424 236000 1                  LDQ     TERM_REC
         3 000334   000011 772000                    QRL     9
         3 000335   000777 376007                    ANQ     511,DL
         3 000336   000000 116000 xsym               CMPQ    KS_NODE
         3 000337   000361 600000 3                  TZE     s:9991

      529     9981    5                          KS_NODENAME_SV = KS_NODENAME;

   9981  3 000340   040000 100400                    MLR     fill='040'O
         3 000341   000000 000010 xsym               ADSC9   KS_NODENAME              cn=0,n=8
         3 000342   000000 000010 xsym               ADSC9   KS_NODENAME_SV           cn=0,n=8

      530     9982    5                          KS_NODE_SV = KS_NODE;

   9982  3 000343   000000 235000 xsym               LDA     KS_NODE
         3 000344   000000 755000 xsym               STA     KS_NODE_SV

      531     9983    5                          KS_NODE = TERM_REC.NODE;
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:128  

   9983  3 000345   000000 756000 xsym               STQ     KS_NODE

      532     9984    5                          IF KS_NODE ~=0 THEN

   9984  3 000346   000000 116003                    CMPQ    0,DU
         3 000347   000361 600000 3                  TZE     s:9991

      533     9985    6                             DO;

      534     9986    6                                CALL KSU$READ_NETCON (VECTOR(KS_NETWORK_KEY),VECTOR(
              9986                                         KS_NETWORK));

   9986  3 000350   000024 630400 4                  EPPR0   20
         3 000351   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000352   000000 701000 xent               TSX1    KSU$READ_NETCON
         3 000353   000000 011000                    NOP     0

      535     9987    6                                KS_NODENAME = KS_NETWORK.NODE.NODE(KS_NODE);

   9987  3 000354   000000 236000 xsym               LDQ     KS_NODE
         3 000355   000024 402007                    MPY     20,DL
         3 000356   040000 100406                    MLR     fill='040'O
         3 000357   000006 000010 1                  ADSC9   KS_NETWORK+2,Q           cn=0,n=8
         3 000360   000000 000010 xsym               ADSC9   KS_NODENAME              cn=0,n=8

      536     9988    6                             END;

      537     9989    5                          END;  /* IF */

      538     9990
      539     9991    4                       IF TERM_REC.TERMID.TERM.CHANNEL = '0'B AND

   9991  3 000361   002425 236000 1                  LDQ     TERM_REC+1
         3 000362   000026 316000 4                  CANQ    22
         3 000363   000466 601000 3                  TNZ     s:10011
         3 000364   200005 236100                    LDQ     @IGNORE_NO_CHAN_ERR,,AUTO
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:129  
         3 000365   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000366   000466 600000 3                  TZE     s:10011

      540     9992    4                          ADDR(IGNORE_NO_CHAN_ERR) ~= ADDR(NIL) THEN
      541     9993    4                          IF NOT IGNORE_NO_CHAN_ERR THEN

   9993  3 000367   200005 470500                    LDP0    @IGNORE_NO_CHAN_ERR,,AUTO
         3 000370   000000 234100                    SZN     0,,PR0
         3 000371   000466 604000 3                  TMI     s:10011

      542     9994    5                             DO;

      543     9995    5                                CALL KSE$ERRMSG (%E$KS_NO_CHAN_FOR_TRM,

   9995  3 000372   200010 471500                    LDP1    BLK$,,AUTO
         3 000373   100004 236100                    LDQ     4,,PR1
         3 000374   000033 772000                    QRL     27
         3 000375   000064 737000                    LLS     52
         3 000376   000140 135007                    SBLA    96,DL
         3 000377   200010 236100                    LDQ     BLK$,,AUTO
         3 000400   000027 036000 4                  ADLQ    23
         3 000401   200014 757100                    STAQ    ALTRET_FLAG+2,,AUTO
         3 000402   200014 633500                    EPPR3   ALTRET_FLAG+2,,AUTO
         3 000403   200017 453500                    STP3    ALTRET_FLAG+5,,AUTO
         3 000404   000031 236000 4                  LDQ     25
         3 000405   200016 756100                    STQ     ALTRET_FLAG+4,,AUTO
         3 000406   200016 630500                    EPPR0   ALTRET_FLAG+4,,AUTO
         3 000407   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000410   000000 701000 xent               TSX1    KSE$ERRMSG
         3 000411   000000 011000                    NOP     0

      544     9996    5                                                 VECTOR(BLK$->OUT$SYM.TEXT));
      545     9997                /*E* ERROR:   KSN-E$KS_NO_CHAN_FOR_TRM-0
      546     9998                     MESSAGE: Terminal name %U1 has no associated channel.*/
      547     9999    5                                ALTRETURN;

   9999  3 000412   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:130  

      548    10000    5                             END;
      549    10001
      550    10002    4                    CASE(1);  /* Sub-device */

      551    10003    4                       CALL CHARBIN(TEMP,BLK$->OUT$SYM.TEXT);

  10003  3 000413   200010 473500                    LDP3    BLK$,,AUTO
         3 000414   300004 236100                    LDQ     4,,PR3
         3 000415   000033 772000                    QRL     27
         3 000416   000000 621006                    EAX1    0,QL
         3 000417   000100 305540                    DTB
         3 000420   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         3 000421   200014 000010                    NDSC9   ALTRET_FLAG+2,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         3 000422   200015 236100                    LDQ     ALTRET_FLAG+3,,AUTO
         3 000423   200011 756100                    STQ     TEMP,,AUTO

      552    10004    4                       TERMID.TERM.SUBDEVICE.BYT(0) = TEMP/256;

  10004  3 000424   000010 772000                    QRL     8
         3 000425   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000426   200004 471500                    LDP1    @TERMID,,AUTO
         3 000427   003100 061500                    CSR     bolr='003'O
         3 000430   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000431   100001 010010                    BDSC    1,,PR1                   by=0,bit=1,n=8

      553    10005    4                       TERMID.TERM.SUBDEVICE.BYT(1) = MOD(TEMP,256);

  10005  3 000432   200011 236100                    LDQ     TEMP,,AUTO
         3 000433   000377 376007                    ANQ     255,DL
         3 000434   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000435   003100 061500                    CSR     bolr='003'O
         3 000436   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000437   100001 210010                    BDSC    1,,PR1                   by=1,bit=1,n=8
         3 000440   000466 710000 3                  TRA     s:10011

      554    10006    4                    CASE(2);
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:131  

      555    10007    4                       CALL CHARBIN(TEMP,BLK$->OUT$SYM.TEXT);

  10007  3 000441   200010 473500                    LDP3    BLK$,,AUTO
         3 000442   300004 236100                    LDQ     4,,PR3
         3 000443   000033 772000                    QRL     27
         3 000444   000000 621006                    EAX1    0,QL
         3 000445   000100 305540                    DTB
         3 000446   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         3 000447   200014 000010                    NDSC9   ALTRET_FLAG+2,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         3 000450   200015 236100                    LDQ     ALTRET_FLAG+3,,AUTO
         3 000451   200011 756100                    STQ     TEMP,,AUTO

      556    10008    4                       TERMID.TERM.SUBSUBDEVICE.BYT(0) = TEMP/256;

  10008  3 000452   000010 772000                    QRL     8
         3 000453   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000454   200004 471500                    LDP1    @TERMID,,AUTO
         3 000455   003100 061500                    CSR     bolr='003'O
         3 000456   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000457   100001 410010                    BDSC    1,,PR1                   by=2,bit=1,n=8

      557    10009    4                       TERMID.TERM.SUBSUBDEVICE.BYT(1) = MOD(TEMP,256);

  10009  3 000460   200011 236100                    LDQ     TEMP,,AUTO
         3 000461   000377 376007                    ANQ     255,DL
         3 000462   200014 756100                    STQ     ALTRET_FLAG+2,,AUTO
         3 000463   003100 061500                    CSR     bolr='003'O
         3 000464   200014 000044                    BDSC    ALTRET_FLAG+2,,AUTO      by=0,bit=0,n=36
         3 000465   100001 610010                    BDSC    1,,PR1                   by=3,bit=1,n=8

      558    10010    4                    END;  /* CASE(I) */

      559    10011    3                 END;  /* DO I */

  10011  3 000466   200006 235100                    LDA     I,,AUTO
         3 000467   000001 035007                    ADLA    1,DL
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:132  
         3 000470   200006 755100                    STA     I,,AUTO
         3 000471   200003 470500                    LDP0    @TOP$,,AUTO
         3 000472   000000 471500                    LDP1    0,,PR0
         3 000473   100001 236100                    LDQ     1,,PR1
         3 000474   000022 772000                    QRL     18
         3 000475   200006 116100                    CMPQ    I,,AUTO
         3 000476   000500 600000 3                  TZE     s:10013
         3 000477   000235 603000 3                  TRC     s:9953

      560    10012    2              END;  /* DO CASE(OUT$BLK.CODE) */

      561    10013    1        IF ALTRET_FLAG THEN

  10013  3 000500   200012 234100                    SZN     ALTRET_FLAG,,AUTO
         3 000501   000503 605000 3                  TPL     s:10016

      562    10014    1           ALTRETURN;

  10014  3 000502   000000 702200 xent               TSX2  ! X66_AALT

      563    10015    1        ELSE
      564    10016    1           RETURN;

  10016  3 000503   000000 702200 xent               TSX2  ! X66_ARET

  10013  3 000504                       ERR          null
      565    10017    1   ERR:;
      566    10018    1        CALL KSE$ERRMSG(0);

  10018  3 000504   000032 630400 4                  EPPR0   26
         3 000505   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000506   000000 701000 xent               TSX1    KSE$ERRMSG
         3 000507   000000 011000                    NOP     0

      567    10019    1        ALTRETURN;

  10019  3 000510   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:133  
      568    10020    1   END KSU$BLD_TERMID;
      569    10021        %EOD;

PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:134  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KS_PERR_C.:E05TOU  is referenced.
   KS_SUBS_C.:E05TOU  is referenced.
   KS_MACRO_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$BLD_TERMID.
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:135  

 **** Variables and constants ****

  ****  Section 001  Data  KSU$BLD_TERMID

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC(46116) r     1 KS_NETWORK              2405-0-0/w STRC(18)    r     1 KS_NETWORK_KEY
  2406-0-0/d STRC(504)   r     1 READ_NETCON                0-0-0/c STRC(144)   r     1 TERMID_C
  2431-0-0/w STRC(162)   r     1 TERM_KEY                2424-0-0/c STRC(171)   r     1 TERM_REC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @IGNORE_NO_CHAN_ERR        4-0-0/w PTR         r     1 @TERMID
     3-0-0/w PTR         r     1 @TOP$                     12-0-0/b BIT         r     1 ALTRET_FLAG
    10-0-0/w PTR         r     1 BLK$                       6-0-0/w UBIN        r     1 I
    *0-0-0/w BIT         r     1 IGNORE_NO_CHAN_ERR         7-0-0/w UBIN        r     1 J
    11-0-0/w UBIN        r     1 TEMP                      *0-0-0/c STRC(144)   r     1 TERMID
    *0-0-0/w PTR         r     1 TOP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 KS_MSGBUF$
     0-0-0/w SBIN        r     1 KS_NODE                    0-0-0/c CHAR(8)     r     1 KS_NODENAME
     0-0-0/c CHAR(8)     r     1 KS_NODENAME_SV             0-0-0/w UBIN        r     1 KS_NODE_SV
     0-0-0/w STRC(288)   r     1 KS_SUB_BUF_3

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:136  

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$NETCON
     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure KSU$BLD_TERMID requires 329 words for executable code.
   Procedure KSU$BLD_TERMID requires 16 words of local(AUTO) storage.
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:137  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:138  
          MINI XREF LISTING

ALTRET_FLAG
      9604**DCL      9911<<ASSIGN   9927<<ASSIGN   9936<<ASSIGN   9951<<ASSIGN  10013>>IF
B$ALT.CODE
      9591**DCL      9591--REDEF    9592--REDEF    9592--REDEF
B$ALT.ERR.CODE
      9593**DCL      9961>>IF
B$ALT.ERR.ERR#
      9593**DCL      9593--REDEF
B$ALT.EVID
      9592**DCL      9592--REDEF    9592--REDEF
B$TCB.ALT$
      9587**DCL      9961>>IF
B$TCB$
      9598**DCL      9961>>IF
BLK$
      9602**DCL      9914<<ASSIGN   9917>>CALL     9939>>CALLBLT  9939>>CALLBLT  9943>>CALLBLT  9943>>CALLBLT
      9953<<ASSIGN   9958>>ASSIGN   9958>>ASSIGN   9978>>ASSIGN   9978>>ASSIGN   9995>>CALL     9995>>CALL
     10003>>CALLBLT 10003>>CALLBLT 10007>>CALLBLT 10007>>CALLBLT
ERR
     10013**LABEL    9974--GOTO
F$DCB.ACTPOS
      8399**DCL      8399--REDEF
F$DCB.ARS
      8374**DCL      8374--REDEF
F$DCB.ATTR
      8392**DCL      8393--REDEF
F$DCB.BORROW
      8407**DCL      8407--REDEF    8407--REDEF    8407--REDEF
F$DCB.DCBNAME.L
      8421**DCL      8421--IMP-SIZ
F$DCB.EOMCHAR
      8378**DCL      8378--REDEF
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:139  
F$DCB.FLDID
      8402**DCL      8402--REDEF
F$DCB.FORM$
      8396**DCL      8396--REDEF
F$DCB.FSECT
      8412**DCL      8412--REDEF
F$DCB.FSN
      8389**DCL      8389--REDEF    8389--REDEF    8390--REDEF
F$DCB.HEADER$
      8395**DCL      8395--REDEF
F$DCB.IXTNSIZE
      8393**DCL      8393--REDEF
F$DCB.LASTSTA$
      8383**DCL      8383--REDEF
F$DCB.LVL
      8408**DCL      8408--REDEF
F$DCB.NAME.C
      8383**DCL      8383--REDEF
F$DCB.NOEOF
      8404**DCL      8404--REDEF
F$DCB.NRECS
      8394**DCL      8394--REDEF
F$DCB.NRECX
      8413**DCL      8413--REDEF
F$DCB.OHDR
      8405**DCL      8405--REDEF
F$DCB.ORG
      8388**DCL      8388--REDEF
F$DCB.PRECNO
      8411**DCL      8411--REDEF
F$DCB.RCSZ
      8416**DCL      8416--REDEF
F$DCB.RES
      8384**DCL      8384--REDEF
F$DCB.SETX
      8396**DCL      8396--REDEF
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:140  
F$DCB.TAB$
      8395**DCL      8396--REDEF
F$DCB.TDA
      8410**DCL      8410--REDEF
F$DCB.WSN
      8385**DCL      8385--REDEF
I
      9600**DCL      9952<<DOINDEX  9953>>ASSIGN   9954>>DOCASE
IGNORE_NO_CHAN_ERR
      9580**DCL         8--PROC     9991--IF       9993>>IF
J
      9601**DCL      9913<<DOINDEX  9914>>ASSIGN   9915>>DOCASE
KSE$ERRMSG
      9582**DCL-ENT  9923--CALL     9932--CALL     9965--CALL     9995--CALL    10018--CALL
KSU$HEXBIN
      9583**DCL-ENT  9917--CALL
KSU$READ_NETCON
      9584**DCL-ENT  9959--CALL     9986--CALL
KS_MSGBUF$
      1150**DCL      1150--IMP-PTR
KS_MYSTATION
      1146**DCL      1146--REDEF
KS_NETWORK
      9647**DCL      9986--CALL
KS_NETWORK.NODE.NODE
      9656**DCL      9987>>ASSIGN
KS_NETWORK_KEY
      9674**DCL      9986--CALL
KS_NODE
      1147**DCL      9980>>IF       9982>>ASSIGN   9983<<ASSIGN   9984>>IF       9987>>ASSIGN
KS_NODENAME
      1146**DCL      9981>>ASSIGN   9987<<ASSIGN
KS_NODENAME_SV
      1147**DCL      9981<<ASSIGN
KS_NODE_SV
      1147**DCL      9982<<ASSIGN
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:141  
KS_SUB_BUF_3
      1152**DCL      9965--CALL
KS_SUB_BUF_3.COUNT
      1152**DCL      9963<<ASSIGN
KS_SUB_BUF_3.TEXT
      1152**DCL      9964<<ASSIGN
OUT$BLK.CODE
      9693**DCL      9908>>DOCASE
OUT$BLK.NSUBLKS
      9697**DCL      9912>>ASSIGN   9913>>DOINDEX  9952>>DOINDEX  9979>>ASSIGN
OUT$BLK.SUBLK$
      9718**DCL      9914>>ASSIGN   9917<>CALL     9953>>ASSIGN
OUT$SYM.COUNT
      9754**DCL      9757--IMP-SIZ  9939>>CALLBLT  9943>>CALLBLT  9958>>ASSIGN   9978>>ASSIGN   9995>>CALL
     10003>>CALLBLT 10007>>CALLBLT
OUT$SYM.TEXT
      9757**DCL      9939>>CALLBLT  9943>>CALLBLT  9958>>ASSIGN   9978>>ASSIGN   9995--CALL    10003>>CALLBLT
     10007>>CALLBLT
READ_NETCON.STATION_
      9789**DCL      9790--REDEF
READ_NETCON.V
      9790**DCL      9786--DCLINIT
READ_NETCON.V.DVBYTE.REREAD#
      9801**DCL      9801--REDEF
READ_NETCON.V.INDX#
      9799**DCL      9799--REDEF
TEMP
      9603**DCL      9910<<ASSIGN   9917<>CALL     9918>>ASSIGN   9919>>ASSIGN   9939<<CALLBLT  9940>>ASSIGN
      9941>>ASSIGN   9943<<CALLBLT  9944>>ASSIGN   9945>>ASSIGN  10003<<CALLBLT 10004>>ASSIGN  10005>>ASSIGN
     10007<<CALLBLT 10008>>ASSIGN  10009>>ASSIGN
TERMID
      9565**DCL         8--PROC     9907<<ASSIGN   9977<<ASSIGN
TERMID.LEV
      9569**DCL      9912<<ASSIGN   9979<<ASSIGN
TERMID.TERM
      9569**DCL      9578--REDEF
PL6.E3A0      #006=KSU$BLD_TERMID File=KSU$UTIL.:E05TSI                          WED 07/30/97 01:48 Page:142  
TERMID.TERM.CHANNEL.BYT
      9571**DCL      9918<<ASSIGN   9919<<ASSIGN   9921>>IF       9929>>IF       9929>>IF
TERMID.TERM.SUBDEVICE.BYT
      9572**DCL      9940<<ASSIGN   9941<<ASSIGN  10004<<ASSIGN  10005<<ASSIGN
TERMID.TERM.SUBSUBDEVICE.BYT
      9573**DCL      9944<<ASSIGN   9945<<ASSIGN  10008<<ASSIGN  10009<<ASSIGN
TERMID.TERM.TERM_NAME
      9578**DCL      9920<<ASSIGN   9978<<ASSIGN
TERMID_C
      9619**DCL      9907>>ASSIGN
TERMID_C.TERM
      9623**DCL      9632--REDEF
TERM_KEY
      9873**DCL      9786--DCLINIT  9787--DCLINIT  9959--CALL
TERM_KEY.TERMID
      9892**DCL      9956<<ASSIGN
TERM_KEY.TERMID.TERM
      9894**DCL      9903--REDEF
TERM_KEY.TERMID.TERM.TERM_NAME
      9903**DCL      9958<<ASSIGN   9963--ASSIGN   9964>>ASSIGN
TERM_REC
      9824**DCL      9788--DCLINIT  9789--DCLINIT  9957<<ASSIGN   9959--CALL
TERM_REC.NODE
      9827**DCL      9980>>IF       9983>>ASSIGN
TERM_REC.TERMID
      9844**DCL      9977>>ASSIGN
TERM_REC.TERMID.TERM
      9846**DCL      9855--REDEF
TERM_REC.TERMID.TERM.CHANNEL
      9848**DCL      9991>>IF
TOP$
      9550**DCL         8--PROC     9685--IMP-PTR  9908>>DOCASE   9912>>ASSIGN   9913>>DOINDEX  9914>>ASSIGN
      9952>>DOINDEX  9953>>ASSIGN   9979>>ASSIGN

PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:143  
      570        1        /*T***********************************************************/
      571        2        /*T*                                                         */
      572        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      573        4        /*T*                                                         */
      574        5        /*T***********************************************************/
      575        6
      576        7        KSU$CHECK_FOR_FEP: PROC (NODE) ALTRET;
      577        8
      578        9             %INCLUDE CP_6;
      579       90             %INCLUDE CP_6_SUBS;
      580      630             %INCLUDE B_ERRORS_C;
      581     1757             %INCLUDE KL_CONFIG_M;
      582     2519             %INCLUDE KS_SUBS_C;
      583     2762             %INCLUDE KS_PERR_C;
      584     2829
      585     2830    1        DCL KSU$READ_NETCON  ENTRY(2) ALTRET;
      586     2831    1        DCL KSE$ERRMSG  ENTRY(4);
      587     2832
      588     2833
      589     2834             %KL$NETWORK (NAME=KS_NETWORK,NUM=255,STCLASS=STATIC);
      590     2861             %KL$NETWORK_KEY (NAME=KS_NETWORK_KEY,STCLASS=STATIC);
      591     2878
      592     2879    1        DCL NODE UBIN;
      593     2880
      594     2881    1        CALL KSU$READ_NETCON (VECTOR(KS_NETWORK_KEY),VECTOR(KS_NETWORK))
      595     2882    2           WHENALTRETURN DO;
      596     2883    2              CALL KSE$ERRMSG (0);
      597     2884    2              ALTRETURN;
      598     2885    2           END;
      599     2886
      600     2887    1        IF KS_NETWORK.NODE.TYPE(NODE) = %KS_HOST OR
      601     2888    1           KS_NETWORK.NODE.TYPE(NODE) = %KS_ME THEN
      602     2889    2           DO;
      603     2890    2              CALL KSE$ERRMSG (%E$KS_BAD_NODE_TYPE);
      604     2891    2              ALTRETURN;
      605     2892    2           END;
      606     2893
PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:144  
      607     2894    1   END KSU$CHECK_FOR_FEP;
      608     2895        %EOD;

PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:145  
--  Include file information  --

   KS_PERR_C.:E05TOU  is referenced.
   KS_SUBS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$CHECK_FOR_FEP.

   Procedure KSU$CHECK_FOR_FEP requires 26 words for executable code.
   Procedure KSU$CHECK_FOR_FEP requires 4 words of local(AUTO) storage.

PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:146  

 Object Unit name= KSU$CHECK_FOR_FEP                          File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:49:05.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none  1282   2402  KSU$CHECK_FOR_FEP
    2   Proc  even  none    26     32  KSU$CHECK_FOR_FEP
    3  RoData even  none     9     11  KSU$CHECK_FOR_FEP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  KSU$CHECK_FOR_FEP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KSU$READ_NETCON
         yes           Std       4 KSE$ERRMSG
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:147  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:148  


      570        1        /*T***********************************************************/
      571        2        /*T*                                                         */
      572        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      573        4        /*T*                                                         */
      574        5        /*T***********************************************************/
      575        6
      576        7        KSU$CHECK_FOR_FEP: PROC (NODE) ALTRET;

      7  2 000000   000000 700200 xent  KSU$CHECK_F* TSX0  ! X66_AUTO_1
         2 000001   000004 000001                    ZERO    4,1

      577        8
      578        9             %INCLUDE CP_6;
      579       90             %INCLUDE CP_6_SUBS;
      580      630             %INCLUDE B_ERRORS_C;
      581     1757             %INCLUDE KL_CONFIG_M;
      582     2519             %INCLUDE KS_SUBS_C;
      583     2762             %INCLUDE KS_PERR_C;
      584     2829
      585     2830    1        DCL KSU$READ_NETCON  ENTRY(2) ALTRET;
      586     2831    1        DCL KSE$ERRMSG  ENTRY(4);
      587     2832
      588     2833
      589     2834             %KL$NETWORK (NAME=KS_NETWORK,NUM=255,STCLASS=STATIC);
      590     2861             %KL$NETWORK_KEY (NAME=KS_NETWORK_KEY,STCLASS=STATIC);
      591     2878
      592     2879    1        DCL NODE UBIN;
      593     2880
      594     2881    1        CALL KSU$READ_NETCON (VECTOR(KS_NETWORK_KEY),VECTOR(KS_NETWORK))

   2881  2 000002   000004 630400 3                  EPPR0   4
         2 000003   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000004   000000 701000 xent               TSX1    KSU$READ_NETCON
         2 000005   000007 702000 2                  TSX2    s:2883
         2 000006   000014 710000 2                  TRA     s:2887

PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:149  
      595     2882    2           WHENALTRETURN DO;

      596     2883    2              CALL KSE$ERRMSG (0);

   2883  2 000007   000006 630400 3                  EPPR0   6
         2 000010   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000011   000000 701000 xent               TSX1    KSE$ERRMSG
         2 000012   000000 011000                    NOP     0

      597     2884    2              ALTRETURN;

   2884  2 000013   000000 702200 xent               TSX2  ! X66_AALT

      598     2885    2           END;
      599     2886
      600     2887    1        IF KS_NETWORK.NODE.TYPE(NODE) = %KS_HOST OR

   2887  2 000014   200003 470500                    LDP0    @NODE,,AUTO
         2 000015   000000 236100                    LDQ     0,,PR0
         2 000016   000005 402007                    MPY     5,DL
         2 000017   000001 235006 1                  LDA     KS_NETWORK+1,QL
         2 000020   000001 115007                    CMPA    1,DL
         2 000021   000024 600000 2                  TZE     s:2890
         2 000022   000003 115007                    CMPA    3,DL
         2 000023   000031 601000 2                  TNZ     s:2894

      601     2888    1           KS_NETWORK.NODE.TYPE(NODE) = %KS_ME THEN
      602     2889    2           DO;

      603     2890    2              CALL KSE$ERRMSG (%E$KS_BAD_NODE_TYPE);

   2890  2 000024   000010 630400 3                  EPPR0   8
         2 000025   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000026   000000 701000 xent               TSX1    KSE$ERRMSG
         2 000027   000000 011000                    NOP     0

      604     2891    2              ALTRETURN;
PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:150  

   2891  2 000030   000000 702200 xent               TSX2  ! X66_AALT

      605     2892    2           END;
      606     2893
      607     2894    1   END KSU$CHECK_FOR_FEP;

   2894  2 000031   000000 702200 xent               TSX2  ! X66_ARET
      608     2895        %EOD;

PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:151  
--  Include file information  --

   KS_PERR_C.:E05TOU  is referenced.
   KS_SUBS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$CHECK_FOR_FEP.
PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:152  

 **** Variables and constants ****

  ****  Section 001  Data  KSU$CHECK_FOR_FEP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(46116) r     1 KS_NETWORK              2401-0-0/w STRC(18)    r     1 KS_NETWORK_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NODE                     *0-0-0/w UBIN        r     1 NODE


   Procedure KSU$CHECK_FOR_FEP requires 26 words for executable code.
   Procedure KSU$CHECK_FOR_FEP requires 4 words of local(AUTO) storage.
PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:153  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=KSU$CHECK_FOR_FEP File=KSU$UTIL.:E05TSI                       WED 07/30/97 01:49 Page:154  
          MINI XREF LISTING

KSE$ERRMSG
      2831**DCL-ENT  2883--CALL     2890--CALL
KSU$READ_NETCON
      2830**DCL-ENT  2881--CALL
KS_NETWORK
      2847**DCL      2881--CALL
KS_NETWORK.NODE.TYPE
      2853**DCL      2887>>IF       2887>>IF
KS_NETWORK_KEY
      2874**DCL      2881--CALL
NODE
      2879**DCL         7--PROC     2887>>IF       2887>>IF

PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:155  
      609        1        /*M* KSU$HEXBIN -routine to convert a HEX number in the parse nodes toa UBIN value*/
      610        2        /*T***********************************************************/
      611        3        /*T*                                                         */
      612        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      613        5        /*T*                                                         */
      614        6        /*T***********************************************************/
      615        7        KSU$HEXBIN: PROC(TARGET,PTR$);
      616        8        /**/
      617        9        %INCLUDE XU_MACRO_C;
      618     3115        /**/
      619     3116    1   DCL TARGET        UBIN;
      620     3117    1   DCL PTR$          PTR;
      621     3118
      622     3119
      623     3120    1   DCL I    UBIN;
      624     3121    1   DCL HEX_CHAR   CHAR(1);
      625     3122    1   DCL HEX_DIGITS CHAR(0) CONSTANT INIT('0123456789ABCDEF');
      626     3123    1   DCL HEX_DIGIT  UBIN;
      627     3124        /**/
      628     3125        %PARSE$SYM (NAME=OUT$SYM,STCLASS="BASED(PTR$)");
      629     3163        /**/
      630     3164
      631     3165
      632     3166    1         TARGET = 0;
      633     3167
      634     3168    2         DO I = 0 TO OUT$SYM.COUNT - 1;
      635     3169    2            HEX_CHAR = SUBSTR(OUT$SYM.TEXT,I,1);
      636     3170    2            CALL INDEX(HEX_DIGIT,HEX_CHAR,HEX_DIGITS);
      637     3171    2            TARGET = TARGET * 16 + HEX_DIGIT;
      638     3172    2         END;
      639     3173
      640     3174
      641     3175    1   END KSU$HEXBIN;
      642     3176        %EOD;

PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:156  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$HEXBIN.

   Procedure KSU$HEXBIN requires 33 words for executable code.
   Procedure KSU$HEXBIN requires 8 words of local(AUTO) storage.

PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:157  

 Object Unit name= KSU$HEXBIN                                 File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:49:22.16 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      4      4  KSU$HEXBIN
    1   Proc  even  none    33     41  KSU$HEXBIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  KSU$HEXBIN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:158  


      609        1       /*M* KSU$HEXBIN -routine to convert a HEX number in the parse nodes toa UBIN value*/
      610        2        /*T***********************************************************/
      611        3        /*T*                                                         */
      612        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      613        5        /*T*                                                         */
      614        6        /*T***********************************************************/
      615        7        KSU$HEXBIN: PROC(TARGET,PTR$);

      7  1 000000   000000 700200 xent  KSU$HEXBIN   TSX0  ! X66_AUTO_2
         1 000001   000010 000002                    ZERO    8,2

      616        8        /**/
      617        9        %INCLUDE XU_MACRO_C;
      618     3115        /**/
      619     3116    1   DCL TARGET        UBIN;
      620     3117    1   DCL PTR$          PTR;
      621     3118
      622     3119
      623     3120    1   DCL I    UBIN;
      624     3121    1   DCL HEX_CHAR   CHAR(1);
      625     3122    1   DCL HEX_DIGITS CHAR(0) CONSTANT INIT('0123456789ABCDEF');
      626     3123    1   DCL HEX_DIGIT  UBIN;
      627     3124        /**/
      628     3125        %PARSE$SYM (NAME=OUT$SYM,STCLASS="BASED(PTR$)");
      629     3163        /**/
      630     3164
      631     3165
      632     3166    1         TARGET = 0;

   3166  1 000002   200003 470500                    LDP0    @TARGET,,AUTO
         1 000003   000000 450100                    STZ     0,,PR0

      633     3167
      634     3168    2         DO I = 0 TO OUT$SYM.COUNT - 1;

   3168  1 000004   200005 450100                    STZ     I,,AUTO
PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:159  
         1 000005   000031 710000 1                  TRA     s:3172+2

      635     3169    2            HEX_CHAR = SUBSTR(OUT$SYM.TEXT,I,1);

   3169  1 000006   200004 470500                    LDP0    @PTR$,,AUTO
         1 000007   000000 471500                    LDP1    0,,PR0
         1 000010   100004 236100                    LDQ     4,,PR1
         1 000011   000033 772000                    QRL     27
         1 000012   200005 235100                    LDA     I,,AUTO
         1 000013   040100 100505                    MLR     fill='040'O
         1 000014   100004 200001                    ADSC9   4,A,PR1                  cn=1,n=1
         1 000015   200006 000001                    ADSC9   HEX_CHAR,,AUTO           cn=0,n=1

      636     3170    2            CALL INDEX(HEX_DIGIT,HEX_CHAR,HEX_DIGITS);

   3170  1 000016   000100 124400                    SCM     mask='000'O
         1 000017   000000 000020 0                  ADSC9   HEX_DIGITS               cn=0,n=16
         1 000020   200006 000001                    ADSC9   HEX_CHAR,,AUTO           cn=0,n=1
         1 000021   200007 000100                    ARG     HEX_DIGIT,,AUTO

      637     3171    2            TARGET = TARGET * 16 + HEX_DIGIT;

   3171  1 000022   200003 473500                    LDP3    @TARGET,,AUTO
         1 000023   300000 236100                    LDQ     0,,PR3
         1 000024   000004 736000                    QLS     4
         1 000025   200007 036100                    ADLQ    HEX_DIGIT,,AUTO
         1 000026   300000 756100                    STQ     0,,PR3

      638     3172    2         END;

   3172  1 000027   000001 035007                    ADLA    1,DL
         1 000030   200005 755100                    STA     I,,AUTO
         1 000031   200004 470500                    LDP0    @PTR$,,AUTO
         1 000032   000000 471500                    LDP1    0,,PR0
         1 000033   100004 236100                    LDQ     4,,PR1
         1 000034   000033 772000                    QRL     27
         1 000035   200005 116100                    CMPQ    I,,AUTO
PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:160  
         1 000036   000040 600000 1                  TZE     s:3175
         1 000037   000006 603000 1                  TRC     s:3169

      639     3173
      640     3174
      641     3175    1   END KSU$HEXBIN;

   3175  1 000040   000000 702200 xent               TSX2  ! X66_ARET
      642     3176        %EOD;

PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:161  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$HEXBIN.
PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:162  

 **** Variables and constants ****

  ****  Section 000 RoData KSU$HEXBIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(16)    r     1 HEX_DIGITS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PTR$                      3-0-0/w PTR         r     1 @TARGET
     6-0-0/c CHAR        r     1 HEX_CHAR                   7-0-0/w UBIN        r     1 HEX_DIGIT
     5-0-0/w UBIN        r     1 I                         *0-0-0/w PTR         r     1 PTR$
    *0-0-0/w UBIN        r     1 TARGET

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure KSU$HEXBIN requires 33 words for executable code.
   Procedure KSU$HEXBIN requires 8 words of local(AUTO) storage.
PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:163  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=KSU$HEXBIN File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:164  
          MINI XREF LISTING

HEX_CHAR
      3121**DCL      3169<<ASSIGN   3170>>CALLBLT
HEX_DIGIT
      3123**DCL      3170<<CALLBLT  3171>>ASSIGN
HEX_DIGITS
      3122**DCL      3170>>CALLBLT
I
      3120**DCL      3168<<DOINDEX  3169>>ASSIGN
OUT$SYM.COUNT
      3155**DCL      3158--IMP-SIZ  3168>>DOINDEX  3169>>ASSIGN
OUT$SYM.TEXT
      3158**DCL      3169>>ASSIGN
PTR$
      3117**DCL         7--PROC     3132--IMP-PTR  3168>>DOINDEX  3169>>ASSIGN   3169>>ASSIGN
TARGET
      3116**DCL         7--PROC     3166<<ASSIGN   3171<<ASSIGN   3171>>ASSIGN

PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:165  
      643        1        /*T***********************************************************/
      644        2        /*T*                                                         */
      645        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      646        4        /*T*                                                         */
      647        5        /*T***********************************************************/
      648        6        KSU$PACK: PROC(INSTR,OUTSTR,SIZE);
      649        7        /**/
      650        8        /*F*    NAME:  KSU$PACK
      651        9                CALL:  CALL KSU$PACK(INSTRING,OUTSTRING,SIZE);
      652       10                PURPOSE:  Packs a string of nine bit bytes into an output
      653       11                          string of eight bit bytes, deleting the top bit
      654       12                          from each byte.
      655       13        */
      656       14        /**/
      657       15    1   DCL INSTR BIT(1) UNAL;
      658       16    1   DCL OUTSTR BIT(1) UNAL;
      659       17    1   DCL SIZE SBIN WORD;
      660       18        /**/
      661       19    1   DCL EIGHT$ PTR;
      662       20    1   DCL EIGHT(0:0) UBIN(8) UNAL BASED(EIGHT$);
      663       21        /**/
      664       22    1   DCL NINE$ PTR;
      665       23    1   DCL NINE(0:0) UBIN(9) UNAL BASED(NINE$);
      666       24        /**/
      667       25    1   DCL I SBIN;
      668       26        /**/
      669       27        %EJECT;
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:166  
      670       28        /**/
      671       29    1           NINE$=ADDR(INSTR);
      672       30    1           EIGHT$=ADDR(OUTSTR);
      673       31    2           DO I=0 TO SIZE-1;
      674       32    2              EIGHT(I)=NINE(I);
      675       33    2              END;
      676       34    1           RETURN;
      677       35        /**/
      678       36        %EJECT;
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:167  
      679       37        /**/
      680       38        /*F*    NAME:  KSU$UNPACK
      681       39                CALL:  CALL KSU$UNPACK(INSTRING,OUTSTRING,SIZE);
      682       40                PURPOSE:  Unpacks a string of eight bit bytes into a string of
      683       41                          nine bit bytes, adding a zero bit to the top of each
      684       42                          byte.
      685       43        */
      686       44        /**/
      687       45    1   END KSU$PACK;
      688       46        %EOD;

PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:168  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$PACK.

   Procedure KSU$PACK requires 28 words for executable code.
   Procedure KSU$PACK requires 10 words of local(AUTO) storage.

PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:169  

 Object Unit name= KSU$PACK                                   File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:49:35.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    28     34  KSU$PACK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  KSU$PACK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:170  


      643        1        /*T***********************************************************/
      644        2        /*T*                                                         */
      645        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      646        4        /*T*                                                         */
      647        5        /*T***********************************************************/
      648        6        KSU$PACK: PROC(INSTR,OUTSTR,SIZE);

      6  0 000000   000000 700200 xent  KSU$PACK     TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

      649        7        /**/
      650        8        /*F*    NAME:  KSU$PACK
      651        9                CALL:  CALL KSU$PACK(INSTRING,OUTSTRING,SIZE);
      652       10                PURPOSE:  Packs a string of nine bit bytes into an output
      653       11                          string of eight bit bytes, deleting the top bit
      654       12                          from each byte.
      655       13        */
      656       14        /**/
      657       15    1   DCL INSTR BIT(1) UNAL;
      658       16    1   DCL OUTSTR BIT(1) UNAL;
      659       17    1   DCL SIZE SBIN WORD;
      660       18        /**/
      661       19    1   DCL EIGHT$ PTR;
      662       20    1   DCL EIGHT(0:0) UBIN(8) UNAL BASED(EIGHT$);
      663       21        /**/
      664       22    1   DCL NINE$ PTR;
      665       23    1   DCL NINE(0:0) UBIN(9) UNAL BASED(NINE$);
      666       24        /**/
      667       25    1   DCL I SBIN;
      668       26        /**/
      669       27        %EJECT;
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:171  
      670       28        /**/
      671       29    1           NINE$=ADDR(INSTR);

     29  0 000002   200003 236100                    LDQ     @INSTR,,AUTO
         0 000003   200007 756100                    STQ     NINE$,,AUTO

      672       30    1           EIGHT$=ADDR(OUTSTR);

     30  0 000004   200004 236100                    LDQ     @OUTSTR,,AUTO
         0 000005   200006 756100                    STQ     EIGHT$,,AUTO

      673       31    2           DO I=0 TO SIZE-1;

     31  0 000006   200010 450100                    STZ     I,,AUTO
         0 000007   000027 710000 0                  TRA     s:33+1

      674       32    2              EIGHT(I)=NINE(I);

     32  0 000010   200010 236100                    LDQ     I,,AUTO
         0 000011   000011 402007                    MPY     9,DL
         0 000012   000000 116003                    CMPQ    0,DU
         0 000013   000015 605000 0                  TPL     s:32+5
         0 000014   000044 036003                    ADLQ    36,DU
         0 000015   200010 235100                    LDA     I,,AUTO
         0 000016   000003 735000                    ALS     3
         0 000017   000021 605000 0                  TPL     s:32+9
         0 000020   000044 035003                    ADLA    36,DU
         0 000021   200007 470500                    LDP0    NINE$,,AUTO
         0 000022   200006 471500                    LDP1    EIGHT$,,AUTO
         0 000023   003105 061506                    CSR     bolr='003'O
         0 000024   000000 000011                    BDSC    0,Q,PR0                  by=0,bit=0,n=9
         0 000025   100000 000010                    BDSC    0,A,PR1                  by=0,bit=0,n=8

      675       33    2              END;

     33  0 000026   200010 054100                    AOS     I,,AUTO
         0 000027   200005 470500                    LDP0    @SIZE,,AUTO
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:172  
         0 000030   200010 236100                    LDQ     I,,AUTO
         0 000031   000000 116100                    CMPQ    0,,PR0
         0 000032   000010 604000 0                  TMI     s:32

      676       34    1           RETURN;

     34  0 000033   000000 702200 xent               TSX2  ! X66_ARET
      677       35        /**/
      678       36        %EJECT;
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:173  
      679       37        /**/
      680       38        /*F*    NAME:  KSU$UNPACK
      681       39                CALL:  CALL KSU$UNPACK(INSTRING,OUTSTRING,SIZE);
      682       40                PURPOSE:  Unpacks a string of eight bit bytes into a string of
      683       41                          nine bit bytes, adding a zero bit to the top of each
      684       42                          byte.
      685       43        */
      686       44        /**/
      687       45    1   END KSU$PACK;
      688       46        %EOD;

PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:174  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$PACK.
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:175  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INSTR                     4-0-0/w PTR         r     1 @OUTSTR
     5-0-0/w PTR         r     1 @SIZE                      6-0-0/w PTR         r     1 EIGHT$
    10-0-0/w SBIN        r     1 I                         *0-0-0/b BIT         r     1 INSTR
     7-0-0/w PTR         r     1 NINE$                     *0-0-0/b BIT         r     1 OUTSTR
    *0-0-0/w SBIN        r     1 SIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b UBIN(8)     r     1 EIGHT(0:0)                 0-0-0/b UBIN(9)     r     1 NINE(0:0)


   Procedure KSU$PACK requires 28 words for executable code.
   Procedure KSU$PACK requires 10 words of local(AUTO) storage.
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:176  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=KSU$PACK File=KSU$UTIL.:E05TSI                                WED 07/30/97 01:49 Page:177  
          MINI XREF LISTING

EIGHT
        20**DCL        32<<ASSIGN
EIGHT$
        19**DCL        20--IMP-PTR    30<<ASSIGN     32>>ASSIGN
I
        25**DCL        31<<DOINDEX    32>>ASSIGN     32>>ASSIGN
INSTR
        15**DCL         6--PROC       29--ASSIGN
NINE
        23**DCL        32>>ASSIGN
NINE$
        22**DCL        23--IMP-PTR    29<<ASSIGN     32>>ASSIGN
OUTSTR
        16**DCL         6--PROC       30--ASSIGN
SIZE
        17**DCL         6--PROC       31>>DOINDEX

PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:178  
      689        1        /*T***********************************************************/
      690        2        /*T*                                                         */
      691        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      692        4        /*T*                                                         */
      693        5        /*T***********************************************************/
      694        6        /**/
      695        7        KSU$PACK1: PROC(INSTR,OUTWORD);
      696        8        /**/
      697        9        /*F*    NAME:  KSU$PACK1
      698       10                CALL:  CALL KSU$PACK1(INSTR,OUTWORD);
      699       11                PURPOSE:
      700       12                   Packs one 8 of 9 byte of data into a right justified
      701       13                UBIN(36).
      702       14        */
      703       15        /**/
      704       16    1   DCL INSTR(0:0) UBIN(9) CALIGNED;
      705       17    1   DCL OUTWORD UBIN;
      706       18        /**/
      707       19    1   DCL KSU$PACK ENTRY(3);
      708       20        /**/
      709       21    1           CALL KSU$PACK(INSTR,OUTWORD,1);
      710       22    1           OUTWORD=OUTWORD/%BITBIN('2000000000'O);
      711       23    1           RETURN;
      712       24        /**/
      713       25        /*F*    NAME:  KSU$PACK2
      714       26                CALL:  CALL KSU$PACK2(INSTR,OUTWORD);
      715       27                PURPOSE:
      716       28                   Packs two 8 of 9 bytes of data into a right justified
      717       29                UBIN(36).
      718       30        */
      719       31        /**/
      720       32    1   KSU$PACK2: ENTRY(INSTR,OUTWORD);
      721       33    1           CALL KSU$PACK(INSTR,OUTWORD,2);
      722       34    1           OUTWORD=OUTWORD/%BITBIN('4000000'O);
      723       35    1           RETURN;
      724       36        /**/
      725       37        /*F*    NAME:  KSU$PACK4
PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:179  
      726       38                CALL:  CALL KSU$PACK4(INSTR,OUTWORD);
      727       39                PURPOSE:
      728       40                   Packs four 8 of 9 bytes of data into a right justified
      729       41                UBIN(36).
      730       42        */
      731       43        /**/
      732       44    1   KSU$PACK4: ENTRY(INSTR,OUTWORD);
      733       45    1           CALL KSU$PACK(INSTR,OUTWORD,4);
      734       46    1           OUTWORD=OUTWORD/16;
      735       47    1           RETURN;
      736       48        /**/
      737       49    1   END KSU$PACK1;
      738       50        %EOD;

PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:180  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$PACK1.

   Procedure KSU$PACK1 requires 48 words for executable code.
   Procedure KSU$PACK1 requires 10 words of local(AUTO) storage.

PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:181  

 Object Unit name= KSU$PACK1                                  File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:49:40.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    48     60  KSU$PACK1
    1  RoData even  none     3      3  KSU$PACK1

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  KSU$PACK1
     0     20                  yes      Std        2  KSU$PACK2
     0     40                  yes      Std        2  KSU$PACK4

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 KSU$PACK
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:182  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:183  


      689        1        /*T***********************************************************/
      690        2        /*T*                                                         */
      691        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      692        4        /*T*                                                         */
      693        5        /*T***********************************************************/
      694        6        /**/
      695        7        KSU$PACK1: PROC(INSTR,OUTWORD);

      7  0 000000   000000 700200 xent  KSU$PACK1    TSX0  ! X66_AUTO_2
         0 000001   000012 000002                    ZERO    10,2

      696        8        /**/
      697        9        /*F*    NAME:  KSU$PACK1
      698       10                CALL:  CALL KSU$PACK1(INSTR,OUTWORD);
      699       11                PURPOSE:
      700       12                   Packs one 8 of 9 byte of data into a right justified
      701       13                UBIN(36).
      702       14        */
      703       15        /**/
      704       16    1   DCL INSTR(0:0) UBIN(9) CALIGNED;
      705       17    1   DCL OUTWORD UBIN;
      706       18        /**/
      707       19    1   DCL KSU$PACK ENTRY(3);
      708       20        /**/
      709       21    1           CALL KSU$PACK(INSTR,OUTWORD,1);

     21  0 000002   000000 236000 1                  LDQ     0
         0 000003   200010 756100                    STQ     @OUTWORD+4,,AUTO
         0 000004   200004 236100                    LDQ     @OUTWORD,,AUTO
         0 000005   200003 235100                    LDA     @INSTR,,AUTO
         0 000006   200006 757100                    STAQ    @OUTWORD+2,,AUTO
         0 000007   200006 630500                    EPPR0   @OUTWORD+2,,AUTO
         0 000010   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000011   000000 701000 xent               TSX1    KSU$PACK
         0 000012   000000 011000                    NOP     0

PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:184  
      710       22    1           OUTWORD=OUTWORD/%BITBIN('2000000000'O);

     22  0 000013   200004 470500                    LDP0    @OUTWORD,,AUTO
         0 000014   000000 236100                    LDQ     0,,PR0
         0 000015   000034 772000                    QRL     28
         0 000016   000000 756100                    STQ     0,,PR0

      711       23    1           RETURN;

     23  0 000017   000000 702200 xent               TSX2  ! X66_ARET

      712       24        /**/
      713       25        /*F*    NAME:  KSU$PACK2
      714       26                CALL:  CALL KSU$PACK2(INSTR,OUTWORD);
      715       27                PURPOSE:
      716       28                   Packs two 8 of 9 bytes of data into a right justified
      717       29                UBIN(36).
      718       30        */
      719       31        /**/
      720       32    1   KSU$PACK2: ENTRY(INSTR,OUTWORD);

     32  0 000020   000000 700200 xent  KSU$PACK2    TSX0  ! X66_AUTO_2
         0 000021   000012 000002                    ZERO    10,2

      721       33    1           CALL KSU$PACK(INSTR,OUTWORD,2);

     33  0 000022   000001 236000 1                  LDQ     1
         0 000023   200010 756100                    STQ     @OUTWORD+4,,AUTO
         0 000024   200004 236100                    LDQ     @OUTWORD,,AUTO
         0 000025   200003 235100                    LDA     @INSTR,,AUTO
         0 000026   200006 757100                    STAQ    @OUTWORD+2,,AUTO
         0 000027   200006 630500                    EPPR0   @OUTWORD+2,,AUTO
         0 000030   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000031   000000 701000 xent               TSX1    KSU$PACK
         0 000032   000000 011000                    NOP     0

      722       34    1           OUTWORD=OUTWORD/%BITBIN('4000000'O);
PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:185  

     34  0 000033   200004 470500                    LDP0    @OUTWORD,,AUTO
         0 000034   000000 236100                    LDQ     0,,PR0
         0 000035   000024 772000                    QRL     20
         0 000036   000000 756100                    STQ     0,,PR0

      723       35    1           RETURN;

     35  0 000037   000000 702200 xent               TSX2  ! X66_ARET

      724       36        /**/
      725       37        /*F*    NAME:  KSU$PACK4
      726       38                CALL:  CALL KSU$PACK4(INSTR,OUTWORD);
      727       39                PURPOSE:
      728       40                   Packs four 8 of 9 bytes of data into a right justified
      729       41                UBIN(36).
      730       42        */
      731       43        /**/
      732       44    1   KSU$PACK4: ENTRY(INSTR,OUTWORD);

     44  0 000040   000000 700200 xent  KSU$PACK4    TSX0  ! X66_AUTO_2
         0 000041   000012 000002                    ZERO    10,2

      733       45    1           CALL KSU$PACK(INSTR,OUTWORD,4);

     45  0 000042   000002 236000 1                  LDQ     2
         0 000043   200010 756100                    STQ     @OUTWORD+4,,AUTO
         0 000044   200004 236100                    LDQ     @OUTWORD,,AUTO
         0 000045   200003 235100                    LDA     @INSTR,,AUTO
         0 000046   200006 757100                    STAQ    @OUTWORD+2,,AUTO
         0 000047   200006 630500                    EPPR0   @OUTWORD+2,,AUTO
         0 000050   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000051   000000 701000 xent               TSX1    KSU$PACK
         0 000052   000000 011000                    NOP     0

      734       46    1           OUTWORD=OUTWORD/16;

PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:186  
     46  0 000053   200004 470500                    LDP0    @OUTWORD,,AUTO
         0 000054   000000 236100                    LDQ     0,,PR0
         0 000055   000004 772000                    QRL     4
         0 000056   000000 756100                    STQ     0,,PR0

      735       47    1           RETURN;

     47  0 000057   000000 702200 xent               TSX2  ! X66_ARET
      736       48        /**/
      737       49    1   END KSU$PACK1;
      738       50        %EOD;

PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:187  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$PACK1.
PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:188  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INSTR                     4-0-0/w PTR         r     1 @OUTWORD
    *0-0-0/c UBIN(9)     r     1 INSTR(0:0)                *0-0-0/w UBIN        r     1 OUTWORD


   Procedure KSU$PACK1 requires 48 words for executable code.
   Procedure KSU$PACK1 requires 10 words of local(AUTO) storage.
PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:189  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=KSU$PACK1 File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:190  
          MINI XREF LISTING

INSTR
        16**DCL         7--PROC       21<>CALL       32--ENTRY      33<>CALL       44--ENTRY      45<>CALL
KSU$PACK
        19**DCL-ENT    21--CALL       33--CALL       45--CALL
OUTWORD
        17**DCL         7--PROC       21<>CALL       22<<ASSIGN     22>>ASSIGN     32--ENTRY      33<>CALL
        34<<ASSIGN     34>>ASSIGN     44--ENTRY      45<>CALL       46<<ASSIGN     46>>ASSIGN

PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:191  
      739        1        /*T***********************************************************/
      740        2        /*T*                                                         */
      741        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      742        4        /*T*                                                         */
      743        5        /*T***********************************************************/
      744        6        KSU$PACKB: PROC(INSTR,OUTSTR);
      745        7        /**/
      746        8        /*F*  NAME:  KSU$PACKB
      747        9              CALL:  CALL KSU$PACKB(INSTR,OUTSTR);
      748       10              PURPOSE:  Packs 36 bits from INSTR into OUTSTR.
      749       11        */
      750       12        /**/
      751       13    1   DCL INSTR UBIN CALIGNED;
      752       14    1   DCL OUTSTR UBIN CALIGNED;
      753       15        /**/
      754       16    1   DCL TEMP(0:1) UBIN;
      755       17        /**/
      756       18    1   DCL KSU$PACK ENTRY(3);
      757       19        /**/
      758       20        /**/
      759       21    1           CALL KSU$PACK(INSTR,TEMP,5);
      760       22    1           OUTSTR=TEMP(0);
      761       23    1           RETURN;
      762       24        /**/
      763       25    1   END KSU$PACKB;
      764       26        %EOD;

PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:192  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$PACKB.

   Procedure KSU$PACKB requires 17 words for executable code.
   Procedure KSU$PACKB requires 12 words of local(AUTO) storage.

PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:193  

 Object Unit name= KSU$PACKB                                  File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:49:45.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    17     21  KSU$PACKB
    1  RoData even  none     1      1  KSU$PACKB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  KSU$PACKB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 KSU$PACK
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:194  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:195  


      739        1        /*T***********************************************************/
      740        2        /*T*                                                         */
      741        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      742        4        /*T*                                                         */
      743        5        /*T***********************************************************/
      744        6        KSU$PACKB: PROC(INSTR,OUTSTR);

      6  0 000000   000000 700200 xent  KSU$PACKB    TSX0  ! X66_AUTO_2
         0 000001   000014 000002                    ZERO    12,2

      745        7        /**/
      746        8        /*F*  NAME:  KSU$PACKB
      747        9              CALL:  CALL KSU$PACKB(INSTR,OUTSTR);
      748       10              PURPOSE:  Packs 36 bits from INSTR into OUTSTR.
      749       11        */
      750       12        /**/
      751       13    1   DCL INSTR UBIN CALIGNED;
      752       14    1   DCL OUTSTR UBIN CALIGNED;
      753       15        /**/
      754       16    1   DCL TEMP(0:1) UBIN;
      755       17        /**/
      756       18    1   DCL KSU$PACK ENTRY(3);
      757       19        /**/
      758       20        /**/
      759       21    1           CALL KSU$PACK(INSTR,TEMP,5);

     21  0 000002   000000 236000 1                  LDQ     0
         0 000003   200012 756100                    STQ     TEMP+5,,AUTO
         0 000004   200005 630500                    EPPR0   TEMP,,AUTO
         0 000005   200011 450500                    STP0    TEMP+4,,AUTO
         0 000006   200003 236100                    LDQ     @INSTR,,AUTO
         0 000007   200010 756100                    STQ     TEMP+3,,AUTO
         0 000010   200010 630500                    EPPR0   TEMP+3,,AUTO
         0 000011   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000012   000000 701000 xent               TSX1    KSU$PACK
         0 000013   000000 011000                    NOP     0
PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:196  

      760       22    1           OUTSTR=TEMP(0);

     22  0 000014   200004 470500                    LDP0    @OUTSTR,,AUTO
         0 000015   000100 100500                    MLR     fill='000'O
         0 000016   200005 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         0 000017   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      761       23    1           RETURN;

     23  0 000020   000000 702200 xent               TSX2  ! X66_ARET
      762       24        /**/
      763       25    1   END KSU$PACKB;
      764       26        %EOD;

PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:197  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$PACKB.
PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:198  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INSTR                     4-0-0/w PTR         r     1 @OUTSTR
    *0-0-0/c UBIN        r     1 INSTR                     *0-0-0/c UBIN        r     1 OUTSTR
     5-0-0/w UBIN        r     1 TEMP(0:1)


   Procedure KSU$PACKB requires 17 words for executable code.
   Procedure KSU$PACKB requires 12 words of local(AUTO) storage.
PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:199  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #011=KSU$PACKB File=KSU$UTIL.:E05TSI                               WED 07/30/97 01:49 Page:200  
          MINI XREF LISTING

INSTR
        13**DCL         6--PROC       21<>CALL
KSU$PACK
        18**DCL-ENT    21--CALL
OUTSTR
        14**DCL         6--PROC       22<<ASSIGN
TEMP
        16**DCL        21<>CALL       22>>ASSIGN

PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:201  
      765        1        /*T***********************************************************/
      766        2        /*T*                                                         */
      767        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      768        4        /*T*                                                         */
      769        5        /*T***********************************************************/
      770        6        KSU$UNPACK: PROC(INSTR,OUT);
      771        7    1        DCL INSTR UBIN;
      772        8    1        DCL OUT BIT(1) UNAL;
      773        9    1        DCL OUT$ PTR;
      774       10    1        DCL OUTSTR(0:1) UBIN(9) UNAL BASED(OUT$);
      775       11
      776       12    1        OUT$ = ADDR(OUT);
      777       13
      778       14    1        OUTSTR(0) = INSTR/256;
      779       15    1        OUTSTR(1) = MOD(INSTR,256);
      780       16    1   END KSU$UNPACK;
      781       17        %EOD;

PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:202  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$UNPACK.

   Procedure KSU$UNPACK requires 19 words for executable code.
   Procedure KSU$UNPACK requires 8 words of local(AUTO) storage.

PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:203  

 Object Unit name= KSU$UNPACK                                 File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:49:49.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    19     23  KSU$UNPACK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  KSU$UNPACK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:204  


      765        1        /*T***********************************************************/
      766        2        /*T*                                                         */
      767        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      768        4        /*T*                                                         */
      769        5        /*T***********************************************************/
      770        6        KSU$UNPACK: PROC(INSTR,OUT);

      6  0 000000   000000 700200 xent  KSU$UNPACK   TSX0  ! X66_AUTO_2
         0 000001   000010 000002                    ZERO    8,2

      771        7    1        DCL INSTR UBIN;
      772        8    1        DCL OUT BIT(1) UNAL;
      773        9    1        DCL OUT$ PTR;
      774       10    1        DCL OUTSTR(0:1) UBIN(9) UNAL BASED(OUT$);
      775       11
      776       12    1        OUT$ = ADDR(OUT);

     12  0 000002   200004 236100                    LDQ     @OUT,,AUTO
         0 000003   200005 756100                    STQ     OUT$,,AUTO

      777       13
      778       14    1        OUTSTR(0) = INSTR/256;

     14  0 000004   200003 470500                    LDP0    @INSTR,,AUTO
         0 000005   000000 236100                    LDQ     0,,PR0
         0 000006   000010 772000                    QRL     8
         0 000007   200006 756100                    STQ     OUT$+1,,AUTO
         0 000010   200005 471500                    LDP1    OUT$,,AUTO
         0 000011   003100 061500                    CSR     bolr='003'O
         0 000012   200006 000044                    BDSC    OUT$+1,,AUTO             by=0,bit=0,n=36
         0 000013   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9

      779       15    1        OUTSTR(1) = MOD(INSTR,256);

     15  0 000014   000000 236100                    LDQ     0,,PR0
         0 000015   000377 376007                    ANQ     255,DL
PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:205  
         0 000016   200006 756100                    STQ     OUT$+1,,AUTO
         0 000017   003100 061500                    CSR     bolr='003'O
         0 000020   200006 000044                    BDSC    OUT$+1,,AUTO             by=0,bit=0,n=36
         0 000021   100000 200011                    BDSC    0,,PR1                   by=1,bit=0,n=9

      780       16    1   END KSU$UNPACK;

     16  0 000022   000000 702200 xent               TSX2  ! X66_ARET
      781       17        %EOD;

PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:206  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$UNPACK.
PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:207  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INSTR                     4-0-0/w PTR         r     1 @OUT
    *0-0-0/w UBIN        r     1 INSTR                     *0-0-0/b BIT         r     1 OUT
     5-0-0/w PTR         r     1 OUT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b UBIN(9)     r     1 OUTSTR(0:1)


   Procedure KSU$UNPACK requires 19 words for executable code.
   Procedure KSU$UNPACK requires 8 words of local(AUTO) storage.
PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:208  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #012=KSU$UNPACK File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:49 Page:209  
          MINI XREF LISTING

INSTR
         7**DCL         6--PROC       14>>ASSIGN     15>>ASSIGN
OUT
         8**DCL         6--PROC       12--ASSIGN
OUT$
         9**DCL        10--IMP-PTR    12<<ASSIGN     14>>ASSIGN     15>>ASSIGN
OUTSTR
        10**DCL        14<<ASSIGN     15<<ASSIGN

PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:210  
      782        1        /*M* KSU$CHK_TRM_RNG - Routine to check for legal range of TERMIDs */
      783        2        /*T***********************************************************/
      784        3        /*T*                                                         */
      785        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      786        5        /*T*                                                         */
      787        6        /*T***********************************************************/
      788        7        /*F* NAME: KSU$CHK_TRM_RNG
      789        8             PURPOSE: This routine is called when NETCON receives a range of
      790        9                      termid specs.  This routine validates that the two termids
      791       10                      constitute a valid range according to the rules defined
      792       11                      below.
      793       12             DESCRIPTION: This routine validates that the two termids passed
      794       13                          constitute a valid range according to the following
      795       14                          rules:
      796       15
      797       16                         1. TERMLO.LEV = TERMHI.LEV
      798       17
      799       18                         2. IF LEV = 1
      800       19                               TERMLO.CHAN <= TERMHI.CHAN
      801       20
      802       21                         3. IF LEV = 2
      803       22                               TERMLO.CHAN = TERMHI.CHAN
      804       23                               TERMLO.SUB <= TERMHI.SUB
      805       24
      806       25                         4. IF LEV = 3
      807       26                               TERMLO.CHAN = TERMHI.CHAN
      808       27                               TERMLO.SUB = TERMHI.SUB
      809       28                               TERMLO.SUBSUB <= TERMHI.SUBSUB
      810       29
      811       30                         If any of the specified conditions are not met, the
      812       31                         altreturn is taken.  Else, return.
      813       32             CALL: CALL KSU$CHK_TRM_RNG(TERMLO,TERMHI) ALTRET(label);
      814       33             INPUT: TERMLO, TERMHI - the two termids making up the range.  See
      815       34                    the B$TERMINAL_ID macro in CP_6.
      816       35             OUTPUT: None.  If the range is valid we return, else altreturn.
      817       36        */
      818       37        KSU$CHK_TRM_RNG: PROC(TERMLO,TERMHI) ALTRET;
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:211  
      819       38        /**/
      820       39        %INCLUDE CP_6;
      821      120        %INCLUDE CP_6_SUBS;
      822      660        %INCLUDE KL_MACRO_C;
      823     4012        /**/
      824     4013        %B$TERMINAL_ID (FPTN=TERMLO,STCLASS=PARAM);
      825     4042        %B$TERMINAL_ID (FPTN=TERMHI,STCLASS=PARAM);
      826     4071        %EJECT;
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:212  
      827     4072    1        IF TERMLO.LEV ~= TERMHI.LEV
      828     4073    1           THEN ALTRETURN;
      829     4074    2        DO CASE(TERMLO.LEV);
      830     4075    2           CASE(%TERMINAL_ID_LEV_CHAN#);
      831     4076    2              IF TERMLO.TERM.CHANNEL > TERMHI.TERM.CHANNEL
      832     4077    2                 THEN ALTRETURN;
      833     4078    2           CASE(%TERMINAL_ID_LEV_SUBCHAN#);
      834     4079    2              IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR
      835     4080    2                 TERMLO.TERM.SUBDEVICE > TERMHI.TERM.SUBDEVICE
      836     4081    2                 THEN ALTRETURN;
      837     4082    2           CASE(%TERMINAL_ID_LEV_SUBSUBCHAN#);
      838     4083    2              IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR
      839     4084    2                 TERMLO.TERM.SUBDEVICE ~= TERMHI.TERM.SUBDEVICE OR
      840     4085    2                 TERMLO.TERM.SUBSUBDEVICE > TERMHI.TERM.SUBSUBDEVICE
      841     4086    2                 THEN ALTRETURN;
      842     4087    2           END;  /* DO CASE */
      843     4088    1        RETURN;
      844     4089    1   END KSU$CHK_TRM_RNG;
      845     4090        %EOD;

PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:213  
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$CHK_TRM_RNG.

   Procedure KSU$CHK_TRM_RNG requires 53 words for executable code.
   Procedure KSU$CHK_TRM_RNG requires 8 words of local(AUTO) storage.

PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:214  

 Object Unit name= KSU$CHK_TRM_RNG                            File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:49:53.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    53     65  KSU$CHK_TRM_RNG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  KSU$CHK_TRM_RNG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:215  


      782        1        /*M* KSU$CHK_TRM_RNG - Routine to check for legal range of TERMIDs */
      783        2        /*T***********************************************************/
      784        3        /*T*                                                         */
      785        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      786        5        /*T*                                                         */
      787        6        /*T***********************************************************/
      788        7        /*F* NAME: KSU$CHK_TRM_RNG
      789        8             PURPOSE: This routine is called when NETCON receives a range of
      790        9                      termid specs.  This routine validates that the two termids
      791       10                      constitute a valid range according to the rules defined
      792       11                      below.
      793       12             DESCRIPTION: This routine validates that the two termids passed
      794       13                          constitute a valid range according to the following
      795       14                          rules:
      796       15
      797       16                         1. TERMLO.LEV = TERMHI.LEV
      798       17
      799       18                         2. IF LEV = 1
      800       19                               TERMLO.CHAN <= TERMHI.CHAN
      801       20
      802       21                         3. IF LEV = 2
      803       22                               TERMLO.CHAN = TERMHI.CHAN
      804       23                               TERMLO.SUB <= TERMHI.SUB
      805       24
      806       25                         4. IF LEV = 3
      807       26                               TERMLO.CHAN = TERMHI.CHAN
      808       27                               TERMLO.SUB = TERMHI.SUB
      809       28                               TERMLO.SUBSUB <= TERMHI.SUBSUB
      810       29
      811       30                         If any of the specified conditions are not met, the
      812       31                         altreturn is taken.  Else, return.
      813       32             CALL: CALL KSU$CHK_TRM_RNG(TERMLO,TERMHI) ALTRET(label);
      814       33             INPUT: TERMLO, TERMHI - the two termids making up the range.  See
      815       34                    the B$TERMINAL_ID macro in CP_6.
      816       35             OUTPUT: None.  If the range is valid we return, else altreturn.
      817       36        */
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:216  
      818       37        KSU$CHK_TRM_RNG: PROC(TERMLO,TERMHI) ALTRET;

     37  1 000000   000000 700200 xent  KSU$CHK_TRM* TSX0  ! X66_AUTO_2
         1 000001   000010 000002                    ZERO    8,2

      819       38        /**/
      820       39        %INCLUDE CP_6;
      821      120        %INCLUDE CP_6_SUBS;
      822      660        %INCLUDE KL_MACRO_C;
      823     4012        /**/
      824     4013        %B$TERMINAL_ID (FPTN=TERMLO,STCLASS=PARAM);
      825     4042        %B$TERMINAL_ID (FPTN=TERMHI,STCLASS=PARAM);
      826     4071        %EJECT;
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:217  
      827     4072    1        IF TERMLO.LEV ~= TERMHI.LEV

   4072  1 000002   200004 470500                    LDP0    @TERMHI,,AUTO
         1 000003   000100 101500                    MRL     fill='000'O
         1 000004   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         1 000005   200006 000004                    ADSC9   @TERMHI+2,,AUTO          cn=0,n=4
         1 000006   200003 471500                    LDP1    @TERMLO,,AUTO
         1 000007   000100 101500                    MRL     fill='000'O
         1 000010   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 000011   200007 000004                    ADSC9   @TERMHI+3,,AUTO          cn=0,n=4
         1 000012   200007 236100                    LDQ     @TERMHI+3,,AUTO
         1 000013   200006 116100                    CMPQ    @TERMHI+2,,AUTO
         1 000014   000016 600000 1                  TZE     s:4074

      828     4073    1           THEN ALTRETURN;

   4073  1 000015   000000 702200 xent               TSX2  ! X66_AALT

      829     4074    2        DO CASE(TERMLO.LEV);

   4074  1 000016   000100 101500                    MRL     fill='000'O
         1 000017   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 000020   200006 000002                    ADSC9   @TERMHI+2,,AUTO          cn=0,n=2
         1 000021   200006 220100                    LDX0    @TERMHI+2,,AUTO
         1 000022   000004 100003                    CMPX0   4,DU
         1 000023   000025 602010 1                  TNC     s:4074+7,X0
         1 000024   000064 710000 1                  TRA     s:4088
         1 000025   000064 710000 1                  TRA     s:4088
         1 000026   000031 710000 1                  TRA     s:4076
         1 000027   000036 710000 1                  TRA     s:4079
         1 000030   000047 710000 1                  TRA     s:4083

      830     4075    2           CASE(%TERMINAL_ID_LEV_CHAN#);

      831     4076    2              IF TERMLO.TERM.CHANNEL > TERMHI.TERM.CHANNEL

   4076  1 000031   000100 106500                    CMPC    fill='000'O
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:218  
         1 000032   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         1 000033   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         1 000034   000064 603000 1                  TRC     s:4088

      832     4077    2                 THEN ALTRETURN;

   4077  1 000035   000000 702200 xent               TSX2  ! X66_AALT

      833     4078    2           CASE(%TERMINAL_ID_LEV_SUBCHAN#);

      834     4079    2              IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR

   4079  1 000036   000100 106500                    CMPC    fill='000'O
         1 000037   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         1 000040   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         1 000041   000046 601000 1                  TNZ     s:4081
         1 000042   000100 106500                    CMPC    fill='000'O
         1 000043   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         1 000044   100001 000002                    ADSC9   1,,PR1                   cn=0,n=2
         1 000045   000064 603000 1                  TRC     s:4088

      835     4080    2                 TERMLO.TERM.SUBDEVICE > TERMHI.TERM.SUBDEVICE
      836     4081    2                 THEN ALTRETURN;

   4081  1 000046   000000 702200 xent               TSX2  ! X66_AALT

      837     4082    2           CASE(%TERMINAL_ID_LEV_SUBSUBCHAN#);

      838     4083    2              IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR

   4083  1 000047   000100 106500                    CMPC    fill='000'O
         1 000050   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         1 000051   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         1 000052   000063 601000 1                  TNZ     s:4086
         1 000053   000100 106500                    CMPC    fill='000'O
         1 000054   100001 000002                    ADSC9   1,,PR1                   cn=0,n=2
         1 000055   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:219  
         1 000056   000063 601000 1                  TNZ     s:4086
         1 000057   000100 106500                    CMPC    fill='000'O
         1 000060   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2
         1 000061   100001 400002                    ADSC9   1,,PR1                   cn=2,n=2
         1 000062   000064 603000 1                  TRC     s:4088

      839     4084    2                 TERMLO.TERM.SUBDEVICE ~= TERMHI.TERM.SUBDEVICE OR
      840     4085    2                 TERMLO.TERM.SUBSUBDEVICE > TERMHI.TERM.SUBSUBDEVICE
      841     4086    2                 THEN ALTRETURN;

   4086  1 000063   000000 702200 xent               TSX2  ! X66_AALT

      842     4087    2           END;  /* DO CASE */

      843     4088    1        RETURN;

   4088  1 000064   000000 702200 xent               TSX2  ! X66_ARET
      844     4089    1   END KSU$CHK_TRM_RNG;
      845     4090        %EOD;

PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:220  
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$CHK_TRM_RNG.
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:221  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @TERMHI                    3-0-0/w PTR         r     1 @TERMLO
    *0-0-0/c STRC(144)   r     1 TERMHI                    *0-0-0/c STRC(144)   r     1 TERMLO


   Procedure KSU$CHK_TRM_RNG requires 53 words for executable code.
   Procedure KSU$CHK_TRM_RNG requires 8 words of local(AUTO) storage.
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:222  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #013=KSU$CHK_TRM_RNG File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:49 Page:223  
          MINI XREF LISTING

TERMHI
      4056**DCL        37--PROC
TERMHI.LEV
      4060**DCL      4072>>IF
TERMHI.TERM
      4060**DCL      4069--REDEF
TERMHI.TERM.CHANNEL
      4062**DCL      4076>>IF       4079>>IF       4083>>IF
TERMHI.TERM.SUBDEVICE
      4062**DCL      4079>>IF       4083>>IF
TERMHI.TERM.SUBSUBDEVICE
      4063**DCL      4083>>IF
TERMLO
      4027**DCL        37--PROC
TERMLO.LEV
      4031**DCL      4072>>IF       4074>>DOCASE
TERMLO.TERM
      4031**DCL      4040--REDEF
TERMLO.TERM.CHANNEL
      4033**DCL      4076>>IF       4079>>IF       4083>>IF
TERMLO.TERM.SUBDEVICE
      4033**DCL      4079>>IF       4083>>IF
TERMLO.TERM.SUBSUBDEVICE
      4034**DCL      4083>>IF

PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:224  
      846        1        /*M* KSU$READ_NETCON - routine to set up a key and buffer and read theNETCON file*/
      847        2        /*T***********************************************************/
      848        3        /*T*                                                         */
      849        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      850        5        /*T*                                                         */
      851        6        /*T***********************************************************/
      852        7        KSU$READ_NETCON: PROC (KEY_,BUF_) ALTRET;
      853        8
      854        9              %INCLUDE CP_6;
      855       90              %INCLUDE CP_6_SUBS;
      856      630    1         DCL KEY_ VECTOR;
      857      631    1         DCL BUF_ VECTOR;
      858      632
      859      633              %FPT_READ(FPTN=READ_NETCON,DCB=M$NETCON,KEYS=YES);
      860      672
      861      673    1         DCL M$NETCON DCB;
      862      674
      863      675    1         READ_NETCON.KEY_ = KEY_;
      864      676    1         READ_NETCON.BUF_ = BUF_;
      865      677
      866      678    1         CALL M$READ (READ_NETCON) WHENALTRETURN
      867      679    2            DO;
      868      680    2               ALTRETURN;
      869      681    2            END;
      870      682    1   END KSU$READ_NETCON;
      871      683        %EOD;

PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:225  
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$READ_NETCON.

   Procedure KSU$READ_NETCON requires 15 words for executable code.
   Procedure KSU$READ_NETCON requires 6 words of local(AUTO) storage.

PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:226  

 Object Unit name= KSU$READ_NETCON                            File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:50:08.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    14     16  KSU$READ_NETCON
    2   DCB   even  none     0      0  M$NETCON
    3   Proc  even  none    15     17  KSU$READ_NETCON

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  KSU$READ_NETCON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$NETCON
PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:227  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:228  


      846        1        /*M* KSU$READ_NETCON - routine to set up a key and buffer and read theNETCON file*/
      847        2        /*T***********************************************************/
      848        3        /*T*                                                         */
      849        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      850        5        /*T*                                                         */
      851        6        /*T***********************************************************/
      852        7        KSU$READ_NETCON: PROC (KEY_,BUF_) ALTRET;

      7  3 000000   000000 700200 xent  KSU$READ_NE* TSX0  ! X66_AUTO_2
         3 000001   000006 000002                    ZERO    6,2

      853        8
      854        9              %INCLUDE CP_6;
      855       90              %INCLUDE CP_6_SUBS;
      856      630    1         DCL KEY_ VECTOR;
      857      631    1         DCL BUF_ VECTOR;
      858      632
      859      633              %FPT_READ(FPTN=READ_NETCON,DCB=M$NETCON,KEYS=YES);
      860      672
      861      673    1         DCL M$NETCON DCB;
      862      674
      863      675    1         READ_NETCON.KEY_ = KEY_;

    675  3 000002   200003 470500                    LDP0    @KEY_,,AUTO
         3 000003   000000 237100                    LDAQ    0,,PR0
         3 000004   000002 757000 1                  STAQ    READ_NETCON+2

      864      676    1         READ_NETCON.BUF_ = BUF_;

    676  3 000005   200004 471500                    LDP1    @BUF_,,AUTO
         3 000006   100000 237100                    LDAQ    0,,PR1
         3 000007   000004 757000 1                  STAQ    READ_NETCON+4

      865      677
      866      678    1         CALL M$READ (READ_NETCON) WHENALTRETURN

PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:229  
    678  3 000010   000000 630400 1                  EPPR0   READ_NETCON
         3 000011   440000 713400                    CLIMB   alt,read
         3 000012   401400 401760                    pmme    nvectors=4
         3 000013   000015 702000 3                  TSX2    s:680
         3 000014   000016 710000 3                  TRA     s:682

      867      679    2            DO;

      868      680    2               ALTRETURN;

    680  3 000015   000000 702200 xent               TSX2  ! X66_AALT

      869      681    2            END;
      870      682    1   END KSU$READ_NETCON;

    682  3 000016   000000 702200 xent               TSX2  ! X66_ARET
      871      683        %EOD;

PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:230  
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$READ_NETCON.
PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:231  

 **** Variables and constants ****

  ****  Section 001  Data  KSU$READ_NETCON

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 READ_NETCON

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BUF_                      3-0-0/w PTR         r     1 @KEY_
    *0-0-0/d VECT        r     1 BUF_                      *0-0-0/d VECT        r     1 KEY_

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$NETCON


   Procedure KSU$READ_NETCON requires 15 words for executable code.
   Procedure KSU$READ_NETCON requires 6 words of local(AUTO) storage.
PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:232  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #014=KSU$READ_NETCON File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:233  
          MINI XREF LISTING

BUF_
       631**DCL         7--PROC      676>>ASSIGN
KEY_
       630**DCL         7--PROC      675>>ASSIGN
M$READ
        19**DCL-ENT   678--CALL
READ_NETCON
       650**DCL       678<>CALL
READ_NETCON.BUF_
       652**DCL       676<<ASSIGN
READ_NETCON.KEY_
       650**DCL       675<<ASSIGN
READ_NETCON.STATION_
       653**DCL       654--REDEF
READ_NETCON.V
       654**DCL       650--DCLINIT
READ_NETCON.V.DVBYTE.REREAD#
       665**DCL       665--REDEF
READ_NETCON.V.INDX#
       663**DCL       663--REDEF

PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:234  
      872        1        /*T***********************************************************/
      873        2        /*T*                                                         */
      874        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      875        4        /*T*                                                         */
      876        5        /*T***********************************************************/
      877        6
      878        7        KSU$BLD_KL_CONTROL: PROC(KL_CONTROL,HANDLER,CMD,PARMX,INDX);
      879        8
      880        9              %INCLUDE CP_6;
      881       90              %INCLUDE CP_6_SUBS;
      882      630              %INCLUDE KL_MACRO_C;
      883     3982
      884     3983    1         DCL HANDLER CHAR(8);
      885     3984    1         DCL CMD     UBIN;
      886     3985    1         DCL PARMX   UBIN;
      887     3986    1         DCL INDX    UBIN;
      888     3987
      889     3988              %KL_CONTROL (STCLASS=PARAM);
      890     4124
      891     4125    1         KL_CONTROL.HANDLER =HANDLER;
      892     4126    1         KL_CONTROL.CMD     =CMD;
      893     4127    1         KL_CONTROL.PARMX   =PARMX;
      894     4128    1         KL_CONTROL.INDX    =INDX;
      895     4129    1   END KSU$BLD_KL_CONTROL;
      896     4130        %EOD;

PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:235  
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$BLD_KL_CONTROL.

   Procedure KSU$BLD_KL_CONTROL requires 17 words for executable code.
   Procedure KSU$BLD_KL_CONTROL requires 8 words of local(AUTO) storage.

PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:236  

 Object Unit name= KSU$BLD_KL_CONTROL                         File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:50:15.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    17     21  KSU$BLD_KL_CONTROL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        5  KSU$BLD_KL_CONTROL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC
PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:237  


      872        1        /*T***********************************************************/
      873        2        /*T*                                                         */
      874        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      875        4        /*T*                                                         */
      876        5        /*T***********************************************************/
      877        6
      878        7        KSU$BLD_KL_CONTROL: PROC(KL_CONTROL,HANDLER,CMD,PARMX,INDX);

      7  1 000000   000000 700200 xent  KSU$BLD_KL_* TSX0  ! X66_AUTO_5
         1 000001   000010 000005                    ZERO    8,5

      879        8
      880        9              %INCLUDE CP_6;
      881       90              %INCLUDE CP_6_SUBS;
      882      630              %INCLUDE KL_MACRO_C;
      883     3982
      884     3983    1         DCL HANDLER CHAR(8);
      885     3984    1         DCL CMD     UBIN;
      886     3985    1         DCL PARMX   UBIN;
      887     3986    1         DCL INDX    UBIN;
      888     3987
      889     3988              %KL_CONTROL (STCLASS=PARAM);
      890     4124
      891     4125    1         KL_CONTROL.HANDLER =HANDLER;

   4125  1 000002   200004 470500                    LDP0    @HANDLER,,AUTO
         1 000003   200003 471500                    LDP1    @KL_CONTROL,,AUTO
         1 000004   040100 100500                    MLR     fill='040'O
         1 000005   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 000006   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8

      892     4126    1         KL_CONTROL.CMD     =CMD;

   4126  1 000007   200005 473500                    LDP3    @CMD,,AUTO
         1 000010   300000 720100                    LXL0    0,,PR3
         1 000011   100010 440100                    SXL0    8,,PR1
PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:238  

      893     4127    1         KL_CONTROL.PARMX   =PARMX;

   4127  1 000012   200006 474500                    LDP4    @PARMX,,AUTO
         1 000013   400000 721100                    LXL1    0,,PR4
         1 000014   100011 741100                    STX1    9,,PR1

      894     4128    1         KL_CONTROL.INDX    =INDX;

   4128  1 000015   200007 475500                    LDP5    @INDX,,AUTO
         1 000016   500000 722100                    LXL2    0,,PR5
         1 000017   100011 442100                    SXL2    9,,PR1

      895     4129    1   END KSU$BLD_KL_CONTROL;

   4129  1 000020   000000 702200 xent               TSX2  ! X66_ARET
      896     4130        %EOD;

PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:239  
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$BLD_KL_CONTROL.
PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:240  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @CMD                       4-0-0/w PTR         r     1 @HANDLER
     7-0-0/w PTR         r     1 @INDX                      3-0-0/w PTR         r     1 @KL_CONTROL
     6-0-0/w PTR         r     1 @PARMX                    *0-0-0/w UBIN        r     1 CMD
    *0-0-0/c CHAR(8)     r     1 HANDLER                   *0-0-0/w UBIN        r     1 INDX
    *0-0-0/w STRC(396)   r     1 KL_CONTROL                *0-0-0/w UBIN        r     1 PARMX


   Procedure KSU$BLD_KL_CONTROL requires 17 words for executable code.
   Procedure KSU$BLD_KL_CONTROL requires 8 words of local(AUTO) storage.
PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:241  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #015=KSU$BLD_KL_CONTROL File=KSU$UTIL.:E05TSI                      WED 07/30/97 01:50 Page:242  
          MINI XREF LISTING

CMD
      3984**DCL         7--PROC     4126>>ASSIGN
HANDLER
      3983**DCL         7--PROC     4125>>ASSIGN
INDX
      3986**DCL         7--PROC     4128>>ASSIGN
KL_CONTROL
      4019**DCL         7--PROC
KL_CONTROL.CMD
      4090**DCL      4126<<ASSIGN
KL_CONTROL.HANDLER
      4028**DCL      4125<<ASSIGN
KL_CONTROL.INDX
      4106**DCL      4128<<ASSIGN
KL_CONTROL.PARMX
      4100**DCL      4127<<ASSIGN
PARMX
      3985**DCL         7--PROC     4127>>ASSIGN

PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:243  
      897        1        /*M* KSU$WRITE_NETCON - routine to set up a key and buffer and write to the :NETCON
                 1        file*/
      898        2        /*T***********************************************************/
      899        3        /*T*                                                         */
      900        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      901        5        /*T*                                                         */
      902        6        /*T***********************************************************/
      903        7        KSU$WRITE_NETCON: PROC (KEY_,BUF_,BOUND) ALTRET;
      904        8
      905        9              %INCLUDE CP_6;
      906       90              %INCLUDE CP_6_SUBS;
      907      630    1         DCL KEY_ VECTOR;
      908      631    1         DCL BUF_ VECTOR;
      909      632    1         DCL BOUND    UBIN;
      910      633
      911      634              %FPT_WRITE(FPTN=WRITE_NETCON,DCB=M$NETCON);
      912      665
      913      666    1         DCL M$NETCON DCB;
      914      667
      915      668    1         WRITE_NETCON.KEY_ = KEY_;
      916      669    1         WRITE_NETCON.BUF_ = BUF_;
      917      670    1         IF ADDR(BOUND) ~= ADDR(NIL) THEN
      918      671    1            WRITE_NETCON.BUF_.BOUND = BOUND;
      919      672
      920      673    1         CALL M$WRITE (WRITE_NETCON) WHENALTRETURN
      921      674    2            DO;
      922      675    2               ALTRETURN;
      923      676    2            END;
      924      677    1   END KSU$WRITE_NETCON;
      925      678        %EOD;

PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:244  
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$WRITE_NETCON.

   Procedure KSU$WRITE_NETCON requires 24 words for executable code.
   Procedure KSU$WRITE_NETCON requires 6 words of local(AUTO) storage.

PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:245  

 Object Unit name= KSU$WRITE_NETCON                           File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:50:30.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    12     14  KSU$WRITE_NETCON
    2   DCB   even  none     0      0  M$NETCON
    3   Proc  even  none    24     30  KSU$WRITE_NETCON

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        3  KSU$WRITE_NETCON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$NETCON                              B_VECTNIL
PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:246  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:247  


      897        1        /*M* KSU$WRITE_NETCON - routine to set up a key and buffer and write to the :NETCON
                 1        file*/
      898        2        /*T***********************************************************/
      899        3        /*T*                                                         */
      900        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      901        5        /*T*                                                         */
      902        6        /*T***********************************************************/
      903        7        KSU$WRITE_NETCON: PROC (KEY_,BUF_,BOUND) ALTRET;

      7  3 000000   000000 700200 xent  KSU$WRITE_N* TSX0  ! X66_AUTO_3
         3 000001   000006 000003                    ZERO    6,3

      904        8
      905        9              %INCLUDE CP_6;
      906       90              %INCLUDE CP_6_SUBS;
      907      630    1         DCL KEY_ VECTOR;
      908      631    1         DCL BUF_ VECTOR;
      909      632    1         DCL BOUND    UBIN;
      910      633
      911      634              %FPT_WRITE(FPTN=WRITE_NETCON,DCB=M$NETCON);
      912      665
      913      666    1         DCL M$NETCON DCB;
      914      667
      915      668    1         WRITE_NETCON.KEY_ = KEY_;

    668  3 000002   200003 470500                    LDP0    @KEY_,,AUTO
         3 000003   000000 237100                    LDAQ    0,,PR0
         3 000004   000002 757000 1                  STAQ    WRITE_NETCON+2

      916      669    1         WRITE_NETCON.BUF_ = BUF_;

    669  3 000005   200004 471500                    LDP1    @BUF_,,AUTO
         3 000006   100000 237100                    LDAQ    0,,PR1
         3 000007   000004 757000 1                  STAQ    WRITE_NETCON+4

      917      670    1         IF ADDR(BOUND) ~= ADDR(NIL) THEN
PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:248  

    670  3 000010   200005 236100                    LDQ     @BOUND,,AUTO
         3 000011   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000012   000021 600000 3                  TZE     s:673

      918      671    1            WRITE_NETCON.BUF_.BOUND = BOUND;

    671  3 000013   200005 473500                    LDP3    @BOUND,,AUTO
         3 000014   300000 236100                    LDQ     0,,PR3
         3 000015   000020 736000                    QLS     16
         3 000016   000004 676000 1                  ERQ     WRITE_NETCON+4
         3 000017   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000020   000004 656000 1                  ERSQ    WRITE_NETCON+4

      919      672
      920      673    1         CALL M$WRITE (WRITE_NETCON) WHENALTRETURN

    673  3 000021   000000 630400 1                  EPPR0   WRITE_NETCON
         3 000022   440001 713400                    CLIMB   alt,write
         3 000023   401400 401760                    pmme    nvectors=4
         3 000024   000026 702000 3                  TSX2    s:675
         3 000025   000027 710000 3                  TRA     s:677

      921      674    2            DO;

      922      675    2               ALTRETURN;

    675  3 000026   000000 702200 xent               TSX2  ! X66_AALT

      923      676    2            END;
      924      677    1   END KSU$WRITE_NETCON;

    677  3 000027   000000 702200 xent               TSX2  ! X66_ARET
      925      678        %EOD;

PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:249  
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$WRITE_NETCON.
PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:250  

 **** Variables and constants ****

  ****  Section 001  Data  KSU$WRITE_NETCON

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 WRITE_NETCON

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @BOUND                     4-0-0/w PTR         r     1 @BUF_
     3-0-0/w PTR         r     1 @KEY_                     *0-0-0/w UBIN        r     1 BOUND
    *0-0-0/d VECT        r     1 BUF_                      *0-0-0/d VECT        r     1 KEY_

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$NETCON


   Procedure KSU$WRITE_NETCON requires 24 words for executable code.
   Procedure KSU$WRITE_NETCON requires 6 words of local(AUTO) storage.
PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:251  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #016=KSU$WRITE_NETCON File=KSU$UTIL.:E05TSI                        WED 07/30/97 01:50 Page:252  
          MINI XREF LISTING

BOUND
       632**DCL         7--PROC      670--IF        671>>ASSIGN
BUF_
       631**DCL         7--PROC      669>>ASSIGN
KEY_
       630**DCL         7--PROC      668>>ASSIGN
M$WRITE
        19**DCL-ENT   673--CALL
WRITE_NETCON
       651**DCL       673<>CALL
WRITE_NETCON.BUF_
       651**DCL       669<<ASSIGN
WRITE_NETCON.BUF_.BOUND
       651**DCL       671<<ASSIGN
WRITE_NETCON.KEY_
       651**DCL       668<<ASSIGN
WRITE_NETCON.STATION_
       653**DCL       653--REDEF
WRITE_NETCON.V
       654**DCL       651--DCLINIT
WRITE_NETCON.V.DVBYTE.VFC#
       660**DCL       660--REDEF

PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:253  
      926        1        /*M* KSU$BINHEX - routine to convert a ubin number to a hex string*/
      927        2        /*T***********************************************************/
      928        3        /*T*                                                         */
      929        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      930        5        /*T*                                                         */
      931        6        /*T***********************************************************/
      932        7        KSU$BINHEX: PROC (HEX_STR,BIN_NR);
      933        8
      934        9    1   DCL HEX_STR   CHAR(4);
      935       10    1   DCL BIN_NR    UBIN;
      936       11    1   DCL HEX_DIGITS CHAR(16) CONSTANT INIT ('0123456789ABCDEF');
      937       12    1   DCL DIVISOR   SBIN;
      938       13    1   DCL INDX      SBIN;
      939       14    1   DCL TEMP      SBIN;
      940       15    1   DCL I         UBIN;
      941       16
      942       17    1        TEMP = BIN_NR;
      943       18    1        DIVISOR = 4096;
      944       19    2        DO I = 0 TO 3;
      945       20    2           INDX = TEMP / DIVISOR;
      946       21    2           SUBSTR(HEX_STR,I,1) = SUBSTR(HEX_DIGITS,INDX,1);
      947       22    2           TEMP = TEMP - INDX * DIVISOR;
      948       23    2           DIVISOR = DIVISOR / 16;
      949       24    2        END;
      950       25    1   END KSU$BINHEX;
      951       26        %EOD;

PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:254  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$BINHEX.

   Procedure KSU$BINHEX requires 30 words for executable code.
   Procedure KSU$BINHEX requires 12 words of local(AUTO) storage.

PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:255  

 Object Unit name= KSU$BINHEX                                 File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:50:38.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      4      4  KSU$BINHEX
    1   Proc  even  none    30     36  KSU$BINHEX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  KSU$BINHEX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:256  


      926        1        /*M* KSU$BINHEX - routine to convert a ubin number to a hex string*/
      927        2        /*T***********************************************************/
      928        3        /*T*                                                         */
      929        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      930        5        /*T*                                                         */
      931        6        /*T***********************************************************/
      932        7        KSU$BINHEX: PROC (HEX_STR,BIN_NR);

      7  1 000000   000000 700200 xent  KSU$BINHEX   TSX0  ! X66_AUTO_2
         1 000001   000014 000002                    ZERO    12,2

      933        8
      934        9    1   DCL HEX_STR   CHAR(4);
      935       10    1   DCL BIN_NR    UBIN;
      936       11    1   DCL HEX_DIGITS CHAR(16) CONSTANT INIT ('0123456789ABCDEF');
      937       12    1   DCL DIVISOR   SBIN;
      938       13    1   DCL INDX      SBIN;
      939       14    1   DCL TEMP      SBIN;
      940       15    1   DCL I         UBIN;
      941       16
      942       17    1        TEMP = BIN_NR;

     17  1 000002   200004 470500                    LDP0    @BIN_NR,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   200007 755100                    STA     TEMP,,AUTO

      943       18    1        DIVISOR = 4096;

     18  1 000005   010000 236007                    LDQ     4096,DL
         1 000006   200005 756100                    STQ     DIVISOR,,AUTO

      944       19    2        DO I = 0 TO 3;

     19  1 000007   200010 450100                    STZ     I,,AUTO

      945       20    2           INDX = TEMP / DIVISOR;
PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:257  

     20  1 000010   200007 236100                    LDQ     TEMP,,AUTO
         1 000011   200005 506100                    DIV     DIVISOR,,AUTO
         1 000012   200006 756100                    STQ     INDX,,AUTO

      946       21    2           SUBSTR(HEX_STR,I,1) = SUBSTR(HEX_DIGITS,INDX,1);

     21  1 000013   200003 470500                    LDP0    @HEX_STR,,AUTO
         1 000014   200010 235100                    LDA     I,,AUTO
         1 000015   040105 100406                    MLR     fill='040'O
         1 000016   000000 000001 0                  ADSC9   HEX_DIGITS,Q             cn=0,n=1
         1 000017   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

      947       22    2           TEMP = TEMP - INDX * DIVISOR;

     22  1 000020   200005 402100                    MPY     DIVISOR,,AUTO
         1 000021   200012 756100                    STQ     I+2,,AUTO
         1 000022   200007 236100                    LDQ     TEMP,,AUTO
         1 000023   200012 136100                    SBLQ    I+2,,AUTO
         1 000024   200007 756100                    STQ     TEMP,,AUTO

      948       23    2           DIVISOR = DIVISOR / 16;

     23  1 000025   200005 236100                    LDQ     DIVISOR,,AUTO
         1 000026   000020 506007                    DIV     16,DL
         1 000027   200005 756100                    STQ     DIVISOR,,AUTO

      949       24    2        END;

     24  1 000030   200010 235100                    LDA     I,,AUTO
         1 000031   000001 035007                    ADLA    1,DL
         1 000032   200010 755100                    STA     I,,AUTO
         1 000033   000004 115007                    CMPA    4,DL
         1 000034   000010 602000 1                  TNC     s:20

      950       25    1   END KSU$BINHEX;

PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:258  
     25  1 000035   000000 702200 xent               TSX2  ! X66_ARET
      951       26        %EOD;

PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:259  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$BINHEX.
PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:260  

 **** Variables and constants ****

  ****  Section 000 RoData KSU$BINHEX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(16)    r     1 HEX_DIGITS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BIN_NR                    3-0-0/w PTR         r     1 @HEX_STR
    *0-0-0/w UBIN        r     1 BIN_NR                     5-0-0/w SBIN        r     1 DIVISOR
    *0-0-0/c CHAR(4)     r     1 HEX_STR                   10-0-0/w UBIN        r     1 I
     6-0-0/w SBIN        r     1 INDX                       7-0-0/w SBIN        r     1 TEMP


   Procedure KSU$BINHEX requires 30 words for executable code.
   Procedure KSU$BINHEX requires 12 words of local(AUTO) storage.
PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:261  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #017=KSU$BINHEX File=KSU$UTIL.:E05TSI                              WED 07/30/97 01:50 Page:262  
          MINI XREF LISTING

BIN_NR
        10**DCL         7--PROC       17>>ASSIGN
DIVISOR
        12**DCL        18<<ASSIGN     20>>ASSIGN     22>>ASSIGN     23<<ASSIGN     23>>ASSIGN
HEX_DIGITS
        11**DCL        21>>ASSIGN
HEX_STR
         9**DCL         7--PROC       21<<ASSIGN
I
        15**DCL        19<<DOINDEX    21>>ASSIGN
INDX
        13**DCL        20<<ASSIGN     21>>ASSIGN     22>>ASSIGN
TEMP
        14**DCL        17<<ASSIGN     20>>ASSIGN     22<<ASSIGN     22>>ASSIGN

PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:263  
      952        1        /*T***********************************************************/
      953        2        /*T*                                                         */
      954        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      955        4        /*T*                                                         */
      956        5        /*T***********************************************************/
      957        6        KSU$STRIP_ZEROS:  PROC (NUMBER,BUFFER,COUNT);
      958        7
      959        8        %INCLUDE B$TABLES_C;
      960      116        %B$SR_NON_ZERO;
      961      120
      962      121    1        DCL NUMBER  UBIN;
      963      122    1        DCL BUFFER  CHAR(31) UNAL;
      964      123    1        DCL COUNT   UBIN BYTE;
      965      124
      966      125    1        DCL START   UBIN;
      967      126    1        DCL TABLEVAL UBIN;
      968      127    1        DCL I       UBIN;
      969      128    1        DCL TEXT    CHAR(31);
      970      129
      971      130    1        CALL BINCHAR (TEXT,NUMBER);
      972      131    1        CALL SEARCH (I,TABLEVAL,B$SR_NON_ZERO,TEXT)
      973      132    2           WHENALTRETURN DO;
      974      133    2              I = 30;
      975      134    2           END;
      976      135
      977      136    1        COUNT = 31 - I;
      978      137    1        SUBSTR(BUFFER,0,COUNT) = SUBSTR(TEXT,I,COUNT);
      979      138    1   END KSU$STRIP_ZEROS;
      980      139        %EOD;

PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:264  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$STRIP_ZEROS.

   Procedure KSU$STRIP_ZEROS requires 39 words for executable code.
   Procedure KSU$STRIP_ZEROS requires 20 words of local(AUTO) storage.

PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:265  

 Object Unit name= KSU$STRIP_ZEROS                            File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:50:42.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    39     47  KSU$STRIP_ZEROS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  KSU$STRIP_ZEROS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$SR_NON_ZERO$
PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:266  


      952        1        /*T***********************************************************/
      953        2        /*T*                                                         */
      954        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      955        4        /*T*                                                         */
      956        5        /*T***********************************************************/
      957        6        KSU$STRIP_ZEROS:  PROC (NUMBER,BUFFER,COUNT);

      6  0 000000   000000 700200 xent  KSU$STRIP_Z* TSX0  ! X66_AUTO_3
         0 000001   000024 000003                    ZERO    20,3

      958        7
      959        8        %INCLUDE B$TABLES_C;
      960      116        %B$SR_NON_ZERO;
      961      120
      962      121    1        DCL NUMBER  UBIN;
      963      122    1        DCL BUFFER  CHAR(31) UNAL;
      964      123    1        DCL COUNT   UBIN BYTE;
      965      124
      966      125    1        DCL START   UBIN;
      967      126    1        DCL TABLEVAL UBIN;
      968      127    1        DCL I       UBIN;
      969      128    1        DCL TEXT    CHAR(31);
      970      129
      971      130    1        CALL BINCHAR (TEXT,NUMBER);

    130  0 000002   200003 470500                    LDP0    @NUMBER,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000044 773000                    LRL     36
         0 000005   200022 757100                    STAQ    TEXT+9,,AUTO
         0 000006   000100 301500                    BTD
         0 000007   200022 000010                    NDSC9   TEXT+9,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         0 000010   200011 030037                    NDSC9   TEXT,,AUTO               cn=0,s=nosgn,sf=0,n=31

      972      131    1        CALL SEARCH (I,TABLEVAL,B$SR_NON_ZERO,TEXT)

    131  0 000011   000000 471400 xsym               LDP1    B$SR_NON_ZERO$
PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:267  
         0 000012   000000 164500                    TCT
         0 000013   200011 000037                    ADSC9   TEXT,,AUTO               cn=0,n=31
         0 000014   100000 000100                    ARG     0,,PR1
         0 000015   200010 000100                    ARG     I,,AUTO
         0 000016   200010 235100                    LDA     I,,AUTO
         0 000017   000033 771000                    ARL     27
         0 000020   200007 755100                    STA     TABLEVAL,,AUTO
         0 000021   200010 551140                    STBA    I,'40'O,AUTO
         0 000022   000024 606400 0                  TTN     s:133
         0 000023   000026 710000 0                  TRA     s:136

      973      132    2           WHENALTRETURN DO;

      974      133    2              I = 30;

    133  0 000024   000036 235007                    LDA     30,DL
         0 000025   200010 755100                    STA     I,,AUTO

      975      134    2           END;

      976      135
      977      136    1        COUNT = 31 - I;

    136  0 000026   200005 470500                    LDP0    @COUNT,,AUTO
         0 000027   000037 235007                    LDA     31,DL
         0 000030   200010 135100                    SBLA    I,,AUTO
         0 000031   000033 735000                    ALS     27
         0 000032   000000 755100                    STA     0,,PR0

      978      137    1        SUBSTR(BUFFER,0,COUNT) = SUBSTR(TEXT,I,COUNT);

    137  0 000033   000000 236100                    LDQ     0,,PR0
         0 000034   000033 772000                    QRL     27
         0 000035   000000 620006                    EAX0    0,QL
         0 000036   000000 236100                    LDQ     0,,PR0
         0 000037   000033 772000                    QRL     27
         0 000040   000000 621006                    EAX1    0,QL
PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:268  
         0 000041   200010 236100                    LDQ     I,,AUTO
         0 000042   200004 471500                    LDP1    @BUFFER,,AUTO
         0 000043   040140 100546                    MLR     fill='040'O
         0 000044   200011 000011                    ADSC9   TEXT,Q,AUTO              cn=0,n=*X1
         0 000045   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      979      138    1   END KSU$STRIP_ZEROS;

    138  0 000046   000000 702200 xent               TSX2  ! X66_ARET
      980      139        %EOD;

PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:269  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KSU$STRIP_ZEROS.
PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:270  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BUFFER                    5-0-0/w PTR         r     1 @COUNT
     3-0-0/w PTR         r     1 @NUMBER                   *0-0-0/c CHAR(31)    r     1 BUFFER
    *0-0-0/w UBIN(9)     r     1 COUNT                     10-0-0/w UBIN        r     1 I
    *0-0-0/w UBIN        r     1 NUMBER                     7-0-0/w UBIN        r     1 TABLEVAL
    11-0-0/c CHAR(31)    r     1 TEXT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$SR_NON_ZERO$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4608)  r     1 B$SR_NON_ZERO


   Procedure KSU$STRIP_ZEROS requires 39 words for executable code.
   Procedure KSU$STRIP_ZEROS requires 20 words of local(AUTO) storage.
PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:271  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #018=KSU$STRIP_ZEROS File=KSU$UTIL.:E05TSI                         WED 07/30/97 01:50 Page:272  
          MINI XREF LISTING

B$SR_NON_ZERO
       118**DCL       131>>CALLBLT
B$SR_NON_ZERO$
       117**DCL       118--IMP-PTR   131>>CALLBLT
BUFFER
       122**DCL         6--PROC      137<<ASSIGN
COUNT
       123**DCL         6--PROC      136<<ASSIGN    137>>ASSIGN    137>>ASSIGN
I
       127**DCL       131<<CALLBLT   133<<ASSIGN    136>>ASSIGN    137>>ASSIGN
NUMBER
       121**DCL         6--PROC      130>>CALLBLT
TABLEVAL
       126**DCL       131<<CALLBLT
TEXT
       128**DCL       130<<CALLBLT   131>>CALLBLT   137>>ASSIGN

PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:273  
      981        1        /*T***********************************************************/
      982        2        /*T*                                                         */
      983        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      984        4        /*T*                                                         */
      985        5        /*T***********************************************************/
      986        6        KSU$GET_NODE: PROC(PTR$,FEPNODE,FEPNAME) ALTRET;
      987        7    1           DCL PTR$ PTR;
      988        8    1           DCL FEPNAME CHAR(8);
      989        9    1           DCL FEPNODE SBIN;
      990       10        %INCLUDE CP_6;
      991       91        %INCLUDE XU_MACRO_C;
      992     3197        %INCLUDE KL_CONFIG_M;
      993     3959        %INCLUDE KS_DATA_R;
      994     3974        %INCLUDE KS_PERR_C;
      995     4041        %INCLUDE KS_SUBS_C;
      996     4284        %FPT_READ (FPTN=READ_NETWORK,KEYS=YES,DCB=M$NETCON,KEY=KS_NETWORK_KEY,BUF=KS_NETWORK
              4284            );
      997     4323        %KL$NETWORK_KEY (NAME=KS_NETWORK_KEY,STCLASS=STATIC);
      998     4340        %KL$NETWORK(NAME=KS_NETWORK,NUM=255,STCLASS=SYMREF);
      999     4367        %PARSE$OUT (NAME=OUT$BLK,STCLASS="BASED(PTR$)");
     1000     4412        %PARSE$SYM (NAME=OUT$SYM,STCLASS="BASED(PTR$)");
     1001     4450    1           DCL KSE$ERRMSG ENTRY(4);
     1002     4451    1           DCL M$NETCON DCB;
     1003     4452    1           DCL I SBIN;
     1004     4453
     1005     4454    1           CALL M$READ(READ_NETWORK);
     1006     4455
     1007     4456    2           DO CASE(PTR$->OUT$BLK.CODE);
     1008     4457
     1009     4458    2            CASE (%KS_TEXTVAL);
     1010     4459    2              FEPNAME = PTR$->OUT$SYM.TEXT;
     1011     4460    2              FEPNODE = -1;
     1012     4461    3              DO I = 0 TO KS_NETWORK.NODE#;
     1013     4462    3                 IF FEPNAME = KS_NETWORK.NODE.NODE(I)
     1014     4463    3                 THEN
     1015     4464    3                    FEPNODE = I;
     1016     4465    3                 END;
PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:274  
     1017     4466
     1018     4467    2            CASE (%KS_DECVAL);
     1019     4468    2              CALL CHARBIN(FEPNODE,PTR$->OUT$SYM.TEXT);
     1020     4469    2              IF FEPNODE <= KS_NETWORK.NODE#
     1021     4470    2              THEN
     1022     4471    2                 FEPNAME = KS_NETWORK.NODE.NODE(FEPNODE);
     1023     4472
     1024     4473    2            END;
     1025     4474    1           IF FEPNODE = -1 OR FEPNODE > KS_NETWORK.NODE# OR
     1026     4475    1              FEPNAME = ' ' THEN
     1027     4476    2              DO;
     1028     4477    2              FEPNAME = KS_NODENAME;
     1029     4478    2              FEPNODE = KS_NODE;
     1030     4479    2              CALL KSE$ERRMSG(%E$KS_BAD_SELECT);
     1031     4480    2              ALTRETURN;
     1032     4481    2              END;
     1033     4482
     1034     4483    1           RETURN;
     1035     4484
     1036     4485    1   END KSU$GET_NODE;

PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:275  
--  Include file information  --

   KS_SUBS_C.:E05TOU  is referenced.
   KS_PERR_C.:E05TOU  is referenced.
   KS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$GET_NODE.

   Procedure KSU$GET_NODE requires 84 words for executable code.
   Procedure KSU$GET_NODE requires 8 words of local(AUTO) storage.

    No errors detected in file KSU$UTIL.:E05TSI    .

PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:276  

 Object Unit name= KSU$GET_NODE                               File name= KSU$UTIL.:E05TOU
 UTS= JUL 30 '97 01:50:46.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    15     17  KSU$GET_NODE
    2   DCB   even  none     0      0  M$NETCON
    3   Proc  even  none    84    124  KSU$GET_NODE
    4  RoData even  none     2      2  KSU$GET_NODE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        3  KSU$GET_NODE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 KSE$ERRMSG
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:277  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KS_MYSTATION                          KS_NODENAME
     KS_NODE                               KS_MSGBUF$                            KS_NETWORK
     M$NETCON                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:278  


      981        1        /*T***********************************************************/
      982        2        /*T*                                                         */
      983        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      984        4        /*T*                                                         */
      985        5        /*T***********************************************************/
      986        6        KSU$GET_NODE: PROC(PTR$,FEPNODE,FEPNAME) ALTRET;

      6  3 000000   000000 700200 xent  KSU$GET_NODE TSX0  ! X66_AUTO_3
         3 000001   000010 000003                    ZERO    8,3

      987        7    1           DCL PTR$ PTR;
      988        8    1           DCL FEPNAME CHAR(8);
      989        9    1           DCL FEPNODE SBIN;
      990       10        %INCLUDE CP_6;
      991       91        %INCLUDE XU_MACRO_C;
      992     3197        %INCLUDE KL_CONFIG_M;
      993     3959        %INCLUDE KS_DATA_R;
      994     3974        %INCLUDE KS_PERR_C;
      995     4041        %INCLUDE KS_SUBS_C;
      996     4284       %FPT_READ (FPTN=READ_NETWORK,KEYS=YES,DCB=M$NETCON,KEY=KS_NETWORK_KEY,BUF=KS_NETWORK
              4284            );
      997     4323        %KL$NETWORK_KEY (NAME=KS_NETWORK_KEY,STCLASS=STATIC);
      998     4340        %KL$NETWORK(NAME=KS_NETWORK,NUM=255,STCLASS=SYMREF);
      999     4367        %PARSE$OUT (NAME=OUT$BLK,STCLASS="BASED(PTR$)");
     1000     4412        %PARSE$SYM (NAME=OUT$SYM,STCLASS="BASED(PTR$)");
     1001     4450    1           DCL KSE$ERRMSG ENTRY(4);
     1002     4451    1           DCL M$NETCON DCB;
     1003     4452    1           DCL I SBIN;
     1004     4453
     1005     4454    1           CALL M$READ(READ_NETWORK);

   4454  3 000002   000000 630400 1                  EPPR0   READ_NETWORK
         3 000003   040000 713400                    CLIMB   read
         3 000004   401400 401760                    pmme    nvectors=4

     1006     4455
PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:279  
     1007     4456    2           DO CASE(PTR$->OUT$BLK.CODE);

   4456  3 000005   200003 470500                    LDP0    @PTR$,,AUTO
         3 000006   000000 471500                    LDP1    0,,PR0
         3 000007   100000 720100                    LXL0    0,,PR1
         3 000010   000002 100003                    CMPX0   2,DU
         3 000011   000013 602010 3                  TNC     s:4456+6,X0
         3 000012   000073 710000 3                  TRA     s:4474
         3 000013   000015 710000 3                  TRA     s:4459
         3 000014   000051 710000 3                  TRA     s:4468

     1008     4457
     1009     4458    2            CASE (%KS_TEXTVAL);

     1010     4459    2              FEPNAME = PTR$->OUT$SYM.TEXT;

   4459  3 000015   100004 236100                    LDQ     4,,PR1
         3 000016   000033 772000                    QRL     27
         3 000017   000000 621006                    EAX1    0,QL
         3 000020   200005 473500                    LDP3    @FEPNAME,,AUTO
         3 000021   040100 100540                    MLR     fill='040'O
         3 000022   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         3 000023   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8

     1011     4460    2              FEPNODE = -1;

   4460  3 000024   000001 335007                    LCA     1,DL
         3 000025   200004 471500                    LDP1    @FEPNODE,,AUTO
         3 000026   100000 755100                    STA     0,,PR1

     1012     4461    3              DO I = 0 TO KS_NETWORK.NODE#;

   4461  3 000027   200006 450100                    STZ     I,,AUTO
         3 000030   000044 710000 3                  TRA     s:4465+1

     1013     4462    3                 IF FEPNAME = KS_NETWORK.NODE.NODE(I)

PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:280  
   4462  3 000031   200006 236100                    LDQ     I,,AUTO
         3 000032   000024 402007                    MPY     20,DL
         3 000033   200005 470500                    LDP0    @FEPNAME,,AUTO
         3 000034   040006 106500                    CMPC    fill='040'O
         3 000035   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 000036   000002 000010 xsym               ADSC9   KS_NETWORK+2,Q           cn=0,n=8
         3 000037   000043 601000 3                  TNZ     s:4465

     1014     4463    3                 THEN
     1015     4464    3                    FEPNODE = I;

   4464  3 000040   200004 471500                    LDP1    @FEPNODE,,AUTO
         3 000041   200006 235100                    LDA     I,,AUTO
         3 000042   100000 755100                    STA     0,,PR1

     1016     4465    3                 END;

   4465  3 000043   200006 054100                    AOS     I,,AUTO
         3 000044   000000 236000 xsym               LDQ     KS_NETWORK
         3 000045   000031 604000 3                  TMI     s:4462
         3 000046   200006 116100                    CMPQ    I,,AUTO
         3 000047   000031 605000 3                  TPL     s:4462
         3 000050   000073 710000 3                  TRA     s:4474

     1017     4466
     1018     4467    2            CASE (%KS_DECVAL);

     1019     4468    2              CALL CHARBIN(FEPNODE,PTR$->OUT$SYM.TEXT);

   4468  3 000051   100004 236100                    LDQ     4,,PR1
         3 000052   000033 772000                    QRL     27
         3 000053   200004 473500                    LDP3    @FEPNODE,,AUTO
         3 000054   000000 621006                    EAX1    0,QL
         3 000055   000100 305540                    DTB
         3 000056   100004 230011                    NDSC9   4,,PR1                   cn=1,s=nosgn,sf=0,n=*X1
         3 000057   300000 000004                    NDSC9   0,,PR3                   cn=0,s=lsgnf,sf=0,n=4

PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:281  
     1020     4469    2              IF FEPNODE <= KS_NETWORK.NODE#

   4469  3 000060   000000 236000 xsym               LDQ     KS_NETWORK
         3 000061   000064 604000 3                  TMI     s:4471
         3 000062   300000 116100                    CMPQ    0,,PR3
         3 000063   000073 604000 3                  TMI     s:4474

     1021     4470    2              THEN
     1022     4471    2                 FEPNAME = KS_NETWORK.NODE.NODE(FEPNODE);

   4471  3 000064   300000 236100                    LDQ     0,,PR3
         3 000065   000005 402007                    MPY     5,DL
         3 000066   000002 736000                    QLS     2
         3 000067   200005 471500                    LDP1    @FEPNAME,,AUTO
         3 000070   040100 100406                    MLR     fill='040'O
         3 000071   000002 000010 xsym               ADSC9   KS_NETWORK+2,Q           cn=0,n=8
         3 000072   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8

     1023     4472
     1024     4473    2            END;

     1025     4474    1           IF FEPNODE = -1 OR FEPNODE > KS_NETWORK.NODE# OR

   4474  3 000073   200004 470500                    LDP0    @FEPNODE,,AUTO
         3 000074   000000 235100                    LDA     0,,PR0
         3 000075   000027 115000 xsym               CMPA    B_VECTNIL+23
         3 000076   000110 600000 3                  TZE     s:4477
         3 000077   000000 236000 xsym               LDQ     KS_NETWORK
         3 000100   000103 604000 3                  TMI     s:4474+8
         3 000101   000000 116100                    CMPQ    0,,PR0
         3 000102   000110 604000 3                  TMI     s:4477
         3 000103   200005 471500                    LDP1    @FEPNAME,,AUTO
         3 000104   040000 106500                    CMPC    fill='040'O
         3 000105   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 000106   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000107   000123 601000 3                  TNZ     s:4483

PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:282  
     1026     4475    1              FEPNAME = ' ' THEN
     1027     4476    2              DO;

     1028     4477    2              FEPNAME = KS_NODENAME;

   4477  3 000110   200005 471500                    LDP1    @FEPNAME,,AUTO
         3 000111   040100 100400                    MLR     fill='040'O
         3 000112   000000 000010 xsym               ADSC9   KS_NODENAME              cn=0,n=8
         3 000113   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8

     1029     4478    2              FEPNODE = KS_NODE;

   4478  3 000114   000000 235000 xsym               LDA     KS_NODE
         3 000115   000000 755100                    STA     0,,PR0

     1030     4479    2              CALL KSE$ERRMSG(%E$KS_BAD_SELECT);

   4479  3 000116   000001 630400 4                  EPPR0   1
         3 000117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000120   000000 701000 xent               TSX1    KSE$ERRMSG
         3 000121   000000 011000                    NOP     0

     1031     4480    2              ALTRETURN;

   4480  3 000122   000000 702200 xent               TSX2  ! X66_AALT

     1032     4481    2              END;
     1033     4482
     1034     4483    1           RETURN;

   4483  3 000123   000000 702200 xent               TSX2  ! X66_ARET
     1035     4484
     1036     4485    1   END KSU$GET_NODE;

PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:283  
--  Include file information  --

   KS_SUBS_C.:E05TOU  is referenced.
   KS_PERR_C.:E05TOU  is referenced.
   KS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSU$GET_NODE.
PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:284  

 **** Variables and constants ****

  ****  Section 001  Data  KSU$GET_NODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/w STRC(18)    r     1 KS_NETWORK_KEY             0-0-0/d STRC(504)   r     1 READ_NETWORK

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @FEPNAME                   4-0-0/w PTR         r     1 @FEPNODE
     3-0-0/w PTR         r     1 @PTR$                     *0-0-0/c CHAR(8)     r     1 FEPNAME
    *0-0-0/w SBIN        r     1 FEPNODE                    6-0-0/w SBIN        r     1 I
    *0-0-0/w PTR         r     1 PTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KS_MSGBUF$                 0-0-0/w STRC(46116) r     1 KS_NETWORK
     0-0-0/w SBIN        r     1 KS_NODE                    0-0-0/c CHAR(8)     r     1 KS_NODENAME

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$NETCON                   0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM

PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:285  

   Procedure KSU$GET_NODE requires 84 words for executable code.
   Procedure KSU$GET_NODE requires 8 words of local(AUTO) storage.

    No errors detected in file KSU$UTIL.:E05TSI    .
PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:286  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:287  
          MINI XREF LISTING

FEPNAME
         8**DCL         6--PROC     4459<<ASSIGN   4462>>IF       4471<<ASSIGN   4474>>IF       4477<<ASSIGN
FEPNODE
         9**DCL         6--PROC     4460<<ASSIGN   4464<<ASSIGN   4468<<CALLBLT  4469>>IF       4471>>ASSIGN
      4474>>IF       4474>>IF       4478<<ASSIGN
I
      4452**DCL      4461<<DOINDEX  4462>>IF       4464>>ASSIGN
KSE$ERRMSG
      4450**DCL-ENT  4479--CALL
KS_MSGBUF$
      3971**DCL      3971--IMP-PTR
KS_MYSTATION
      3967**DCL      3967--REDEF
KS_NETWORK
      4353**DCL      4303--DCLINIT  4304--DCLINIT
KS_NETWORK.NODE.NODE
      4362**DCL      4462>>IF       4471>>ASSIGN
KS_NETWORK.NODE#
      4354**DCL      4461>>DOINDEX  4469>>IF       4474>>IF
KS_NETWORK_KEY
      4336**DCL      4301--DCLINIT  4302--DCLINIT
KS_NODE
      3968**DCL      4478>>ASSIGN
KS_NODENAME
      3967**DCL      4477>>ASSIGN
M$READ
        20**DCL-ENT  4454--CALL
OUT$BLK.CODE
      4381**DCL      4456>>DOCASE
OUT$SYM.COUNT
      4442**DCL      4445--IMP-SIZ  4459>>ASSIGN   4468>>CALLBLT
OUT$SYM.TEXT
PL6.E3A0      #019=KSU$GET_NODE File=KSU$UTIL.:E05TSI                            WED 07/30/97 01:50 Page:288  
      4445**DCL      4459>>ASSIGN   4468>>CALLBLT
PTR$
         7**DCL         6--PROC     4373--IMP-PTR  4419--IMP-PTR  4456>>DOCASE   4459>>ASSIGN   4459>>ASSIGN
      4468>>CALLBLT  4468>>CALLBLT
READ_NETWORK
      4301**DCL      4454<>CALL
READ_NETWORK.STATION_
      4304**DCL      4305--REDEF
READ_NETWORK.V
      4305**DCL      4301--DCLINIT
READ_NETWORK.V.DVBYTE.REREAD#
      4316**DCL      4316--REDEF
READ_NETWORK.V.INDX#
      4314**DCL      4314--REDEF
