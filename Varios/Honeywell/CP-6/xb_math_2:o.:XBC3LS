
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               1    BMAP - B00     
                                         1  *T***********************************************************
                                         2  *T*                                                         *
                                         3  *T* Copyright (c) Bull HN Information Systems Inc., 1989    *
                                         4  *T*                                                         *
                                         5  *T***********************************************************
                                         6                LODM           xbi_std_ig
                                         7
                                         8                ENTDEF         fabs
                                         9                ENTDEF         abs
                                        10                ENTDEF         labs
                                        11                ENTDEF         rand
                                        12                ENTDEF         srand
                                        13                ENTDEF         ceil
                                        14                ENTDEF         floor
                                        15                ENTDEF         modf
                                        16                ENTDEF         fmod
                                        17                ENTDEF         div
                                        18                ENTDEF         ldiv
                                        19
                                        20                ENTREF         _XBC_AUTO_0
                                        21                ENTREF         _XBC_AUTO_2
                                        22                ENTREF         _XBC_AUTO_4
                                        23                ENTREF         _XBC_FARET
                                        24
                                        25
                                        26
 0 000000                               27                USE            fabs,1
                                        28
                                        29  *D* PROTOTYPE: double fabs( double x )
                                        30  *,* DESCRIPTION: the absolute vaalue of the arguement is returned.
                                        31  */
                                        32
          (0)000000000000               33  fabs          EQU            *
   000000    0 00000 6271 00            34                EAX7           0,,PR0
   000001    000001 3670 03             35                ANX7           1,DU
   000002    0 00000 6375 17            36                EPPR7          0,X7,PR0
   000003    7 00000 4331 00            37                DFLD           0,,PR7    - load arguement
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               2    BMAP - B00     
   000004    000001 6050 11             38                TPL            1,X1      - already positive
   000005    000000 5130 00             39                FNEG           0         - complement it
   000006    000001 7020 11             40                TSX2           1,X1
                                        41
                                        42  *D* PROTOTYPE: int abs( int x )
                                        43  *,* DESCRIPTION: the absolute vaalue of the arguement is returned.
                                        44  */
                                        45
          (0)000000000007               46  abs           EQU            *
                                        47
                                        48  *D* PROTOTYPE: long int labs( long int x )
                                        49  *,* DESCRIPTION: the absolute vaalue of the arguement is returned.
                                        50  */
                                        51
          (0)000000000007               52  labs          EQU            *
   000007    0 00000 2361 00            53                LDQ            0,,PR0    - load arguement
   000010    000001 6050 11             54                TPL            1,X1      - already positive
   000011    0 00000 3361 00            55                LCQ            0,,PR0    - complement it
   000012    000001 7020 11             56                TSX2           1,X1
                                        57
                                        58
                                        59  *D* PROTOTYPE: int rand ( void )
                                        60  *,* DESCRIPTION: successive calls to rand return values in the range of
                                        61  *,*              0 to the largest positive value of int.
                                        62  */
                                        63
          (0)000000000013               64  rand          EQU            *
   000013 (2)000000 2360 00             65               LDQ             RANDOM_SEED
   000014 (1)000000 4020 00             66               MPY             =660601212
   000015 (1)000001 3760 00             67               ANQ             =o377777777777  -make sure we have positive value
   000016 (1)000002 5060 00             68               DIV             =2147483646
   000017 (2)000000 7550 00             69               STA             RANDOM_SEED
   000020 (2)000000 2360 00             70               LDQ             RANDOM_SEED
   000021    000001 7020 11             71               TSX2            1,X1
                                        72
                                        73  *D* PROTOTYPE: void srand ( unsigned int seed )
                                        74  *,* DESCRIPTION: initialize the pseudo random number generator that
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               3    BMAP - B00     
                                        75  *,*              is used by rand.
                                        76  */
                                        77
          (0)000000000022               78  srand         EQU            *
   000022    0 00000 2361 00            79               LDQ             0,,PR0         -load new seed
   000023    000001 1160 07             80               CMPQ            1,DL           -reset to original seed?
   000024 (0)000026 6010 00             81               TNZ             *+2
   000025    023701 2360 07             82               LDQ             10177,DL       -reset to original seed
   000026 (2)000000 7560 00             83               STQ             RANDOM_SEED
   000027    000001 7020 11             84               TSX2            1,X1
                                        85
                                        86  *D* PROTOTYPE: double ceil ( double x )
                                        87  *,* DESCRIPTION: ceil returns the smallest floating point value not less
                                        88  *,*              than x that is an exact mathematicak integer. If x is
                                        89  *,*              already an interger then it is returned.
                                        90  *,*
                                        91  *,* -> double ceil( double x )
                                        92  *,* -> {
                                        93  *,* ->  double ipart;
                                        94  *,* ->
                                        95  *,* ->  modf( -x, &ipart );
                                        96  *,* ->  return -ipart;
                                        97  *,* -> }
                                        98  */
                                        99
          (0)000000000030              100  ceil          EQU            *
   000030    0 00000 6271 00           101                EAX7           0,,PR0
   000031    000001 3670 03            102                ANX7           1,DU
   000032    0 00000 6375 17           103                EPPR7          0,X7,PR0
   000033    7 00000 4331 00           104                DFLD           0,,PR7
   000034    000000 5130 00            105                FNEG           0              - complement the arguement
   000035    742000 4350 03            106                UFA            -15360,DU      - modf it to get integer part
   000036    004000 4350 03            107                UFA            2048,DU
   000037    042000 4350 03            108                UFA            17408,DU
   000040    000003 7730 00            109                LRL            3
   000041    000044 7370 00            110                LLS            36             - float it
   000042    000000 2360 07            111                LDQ            0,DL
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               4    BMAP - B00     
   000043    000001 7330 00            112                LRS            1
   000044    022000 4110 03            113                LDE            9216,DU
   000045    400000 4750 03            114                FAD            -131072,DU
   000046    000000 5130 00            115                FNEG           0              - and complement it again
   000047    000001 7020 11            116                TSX2           1,X1
                                       117
                                       118  *D* PROTOTYPE: double floor ( double x )
                                       119  *,* DESCRIPTION: floor returns the smallest floating point value not greater
                                       120  *,*              than x that is an exact mathematical integer. If x is
                                       121  *,*              already an interger then it is returned.
                                       122  *,* -> double floor( double x )
                                       123  *,* -> {
                                       124  *,* ->  double ipart;
                                       125  *,* ->
                                       126  *,* -> modf( x, &ipart );
                                       127  *,* -> return ipart;
                                       128  *,* -> }
                                       129  */
                                       130
          (0)000000000050              131  floor         EQU            *
   000050    0 00000 6271 00           132                EAX7           0,,PR0
   000051    000001 3670 03            133                ANX7           1,DU
   000052    0 00000 6375 17           134                EPPR7          0,X7,PR0
   000053    7 00000 4331 00           135                DFLD           0,,PR7         - same as ceil except
   000054    742000 4350 03            136                UFA            -15360,DU      - forget the complements
   000055    004000 4350 03            137                UFA            2048,DU        - we do it to the real
   000056    042000 4350 03            138                UFA            17408,DU       - number
   000057    000003 7730 00            139                LRL            3
   000060    000044 7370 00            140                LLS            36
   000061    000000 2360 07            141                LDQ            0,DL
   000062    000001 7330 00            142                LRS            1
   000063    022000 4110 03            143                LDE            9216,DU
   000064    400000 4750 03            144                FAD            -131072,DU
   000065    000001 7020 11            145                TSX2           1,X1
                                       146
                                       147  *D* PROTOTYPE: double modf ( double x, double *nptr )
                                       148  *,* DESCRIPTION: modf splits a floating point number into a fractional
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               5    BMAP - B00     
                                       149  *,*              part f and an integer part n such that the absolute value
                                       150  *,*              of f is less than 1.0 and such that f plus n is equal to x.
                                       151  *,*
                                       152  *,* -> double modf( double value, double *iptr )
                                       153  *,* -> {
                                       154  *,* ->
                                       155  *,* -> *iptr = ( TRUNCATE-FRACTION ) value;
                                       156  *,* ->  if ( value < 0.0  &&  *iptr < value )
                                       157  *,* ->   *iptr += 1.0;
                                       158  *,* -> return  value - *iptr;
                                       159  *,* -> }
                                       160  */
                                       161
          (0)000000000066              162  modf          EQU            *
                                       163
   000066    0 00000 6271 00           164                EAX7           0,,PR0
   000067    000001 3670 03            165                ANX7           1,DU
   000070    0 00000 6375 17           166                EPPR7          0,X7,PR0
   000071    7 00000 4331 00           167                DFLD           0,,PR7
   000072    042040 5150 03            168                FCMP           =O042040,DU
   000073 (0)000104 6054 00            169                TPNZ           modfPT1
   000074    042000 4350 03            170                UFA            =O042000,DU
   000075 (1)000003 3760 00            171                ANQ            =O777777777770
   000076    400000 4750 03            172                FAD            =O400000,DU
                                       173
   000077    7 00000 4301 00           174                FSZN           0,,PR7
   000100 (0)000104 6050 00            175                TPL            modfPT1
   000101    7 00000 5171 00           176                DFCMP          0,,PR7
   000102 (0)000104 6050 00            177                TPL            modfPT1
                                       178
   000103    002040 4750 03            179                FAD            =O002040,DU  =1.0
                                       180
   000104    7 00002 4715 00           181  modfPT1       LDP1           2,,PR7
   000105    1 00000 4571 00           182                DFST           0,,PR1
                                       183
   000106    7 00000 4331 00           184                DFLD           0,,PR7
   000107    1 00000 5771 00           185                DFSB           0,,PR1
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               6    BMAP - B00     
   000110    000001 7020 11            186                TSX2           1,X1
                                       187
                                       188
                                       189  *D* PROTOTYPE: double fmod ( double x, y)
                                       190  *,* DESCRIPTION: modf returns the floating point remainder of x/y. If y
                                       191  *,*              is zero 0 is returned.
                                       192  *,*
                                       193  *,* -> double fmod( dividend, divisor )
                                       194  *,* ->
                                       195  *,* -> double dividend, divisor;
                                       196  *,* -> {
                                       197  *,* -> int fmodtemp;
                                       198  *,* -> if (divisor==0.0) return 0;
                                       199  *,* ->    else return divisor * modf( (dividend / divisor), &fmodtemp );
                                       200  *,* -> }
                                       201  */
                                       202
             000000000004              203  dividend      EQU            4
             000000000006              204  divisor       EQU            6
             000000000010              205  fmodtemp      EQU            8
                                       206
          (0)000000000111              207  fmod          EQU            *
   000111    0 00000 6271 00           208                EAX7           0,,PR0
   000112    000001 3670 03            209                ANX7           1,DU
   000113    0 00000 5075 17           210                AWD            0,X7,PR0
   000114  X 000000 7000 00            211                TSX0           _XBC_AUTO_4
   000115    000022 000004             212                ZERO           18,4
                                       213
   000116    2 00006 4301 00           214                FSZN           divisor,,AUTO
   000117 (0)000122 6010 00            215                TNZ            fmodPT1
   000120 (2)000002 4330 00            216                DFLD           ZER_VAL
   000121  X 000000 7020 00            217                TSX2           _XBC_FARET
                                       218
   000122    2 00004 4331 00           219  fmodPT1       DFLD           dividend,,AUTO
   000123    2 00006 5671 00           220                DFDV           divisor,,AUTO
   000124    2 00016 4721 00           221                DFSTR          fmodtemp+6,,AUTO
   000125    2 00010 6305 00           222                EPPR0          fmodtemp,,AUTO
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               7    BMAP - B00     
   000126    2 00021 4505 00           223                STP0           fmodtemp+9,,AUTO
   000127    2 00021 2351 00           224                LDA            fmodtemp+9,,AUTO
   000130    2 00020 7551 00           225                STA            fmodtemp+8,,AUTO
   000131    2 00016 6305 00           226                EPPR0          fmodtemp+6,,AUTO
   000132 (1)000004 6314 00            227                EPPR1          =1048576
   000133 (0)000066 7010 00            228                TSX1           modf
   000134    000000 2360 07            229                LDQ            0,DL
   000135    2 00006 4631 00           230                DFMP           divisor,,AUTO
   000136  X 000000 7020 00            231                TSX2           _XBC_FARET
                                       232
                                       233
                                       234  *D* PROTOTYPE: div_t div ( int n,d )
                                       235  *,* DESCRIPTION: div computes the quotient and remainder of the division
                                       236  *,*              of n by d.
                                       237  *,*
                                       238  *,*
                                       239  *,* -> typedef struct
                                       240  *,* ->         {
                                       241  *,* ->         int quotient;
                                       242  *,* ->         int remainder;
                                       243  *,* ->         }
                                       244  *,* ->         div_t;
                                       245  *,* ->
                                       246  *,* -> div_t div(n,d)
                                       247  *,* ->
                                       248  *,* -> int n,d;
                                       249  *,* ->
                                       250  *,* -> {
                                       251  *,* -> div_t localdiv;
                                       252  *,* ->
                                       253  *,* -> if (d==0)
                                       254  *,* ->    {
                                       255  *,* ->    localdiv.quotient = 0;
                                       256  *,* ->    localdiv.remainder = n;
                                       257  *,* ->    }
                                       258  *,* -> else
                                       259  *,* ->    {
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               8    BMAP - B00     
                                       260  *,* ->    localdiv.quotient = n/d;
                                       261  *,* ->    localdiv.remainder = n-(d*localdiv.quotient);
                                       262  *,* ->    }
                                       263  *,* -> return localdiv;
                                       264  *,* -> }
                                       265  *,* ->
                                       266  */
                                       267  *D* PROTOTYPE: ldiv_t ldiv ( long int n,d )
                                       268  *,* DESCRIPTION: ldiv computes the quotient and remainder of the division
                                       269  *,*              of n by d.
                                       270  *,*
                                       271  *,*
                                       272  *,* -> typedef struct
                                       273  *,* ->         {
                                       274  *,* ->         long int quotient;
                                       275  *,* ->         long int remainder;
                                       276  *,* ->         }
                                       277  *,* ->         ldiv_t;
                                       278  *,* ->
                                       279  *,* -> ldiv_t ldiv(n,d)
                                       280  *,* ->
                                       281  *,* -> long int n,d;
                                       282  *,* ->
                                       283  *,* -> {
                                       284  *,* -> ldiv_t localdiv;
                                       285  *,* ->
                                       286  *,* -> if (d==0)
                                       287  *,* ->    {
                                       288  *,* ->    localdiv.quotient = 0;
                                       289  *,* ->    localdiv.remainder = n;
                                       290  *,* ->    }
                                       291  *,* -> else
                                       292  *,* ->    {
                                       293  *,* ->    localdiv.quotient = n/d;
                                       294  *,* ->    localdiv.remainder = n-(d*localdiv.quotient);
                                       295  *,* ->    }
                                       296  *,* -> return localdiv;
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               9    BMAP - B00     
                                       297  *,* -> }
                                       298  *,* ->
                                       299  */
                                       300
          (0)000000000137              301  div           EQU            *
          (0)000000000137              302  ldiv          EQU            *
   000137  X 000000 7000 00            303                TSX0           _XBC_AUTO_2
   000140    000012 000002             304                ZERO           10,2
                                       305
             000000000004              306  n             EQU            4
             000000000005              307  d             EQU            5
             000000000006              308  tempP0        EQU            6
             000000000007              309  quotient      EQU            7
             000000000010              310  remainder     EQU            8
                                       311
   000141    2 00006 4505 00           312                STP0           tempP0,,AUTO
                                       313
   000142    2 00005 2341 00           314                SZN            d,,AUTO
   000143 (0)000150 6010 00            315                TNZ            divPT1
                                       316
   000144    2 00007 4501 00           317                STZ            quotient,,AUTO
                                       318
   000145    2 00004 2351 00           319                LDA            n,,AUTO
   000146    2 00010 7551 00           320                STA            remainder,,AUTO
   000147 (0)000161 7100 00            321                TRA            divPT2
                                       322
   000150    2 00004 2361 00           323  divPT1        LDQ            n,,AUTO
   000151    2 00005 5061 00           324                DIV            d,,AUTO
   000152    2 00007 7561 00           325                STQ            quotient,,AUTO
                                       326
   000153    2 00005 2361 00           327                LDQ            d,,AUTO
   000154    2 00007 4021 00           328                MPY            quotient,,AUTO
   000155    2 00012 7561 00           329                STQ            quotient+3,,AUTO
   000156    2 00004 2351 00           330                LDA            n,,AUTO
   000157    2 00012 1751 00           331                SBA            quotient+3,,AUTO
   000160    2 00010 7551 00           332                STA            remainder,,AUTO
                                       333
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI                                                               10   BMAP - B00     
   000161    2 00006 4705 00           334  divPT2        LDP0           tempP0,,AUTO
   000162    2 00007 2351 00           335                LDA            quotient,,AUTO
   000163    0 00000 7551 00           336                STA            0,,PR0
   000164    2 00010 2351 00           337                LDA            remainder,,AUTO
   000165    0 00001 7551 00           338                STA            1,,PR0
   000166    2 00006 2361 00           339                LDQ            tempP0,,AUTO
                                       340
   000167  X 000000 7020 00            341                TSX2           _XBC_FARET
                                       342
                                       343
                                       344
 2 000000                              345                USE            math_2,0
                                       346                EVEN
   000000    000000023701              347  RANDOM_SEED   DEC            10177
   000001    000000 0110 00            348                EVEN
   000002
   000002    400000000000              349  ZER_VAL       OCT            400000000000
   000003    000000000000              350                OCT            0
                                       351
                                       352                END
 1 000000    004727774574
   000001    377777777777
   000002    017777777776
   000003    777777777770
   000004    000004000000

  CONTROL SECTION TABLE

   0 CODE   EVEN  000170 FABS
   1 RODATA EVEN  000005 LITERALS
   2 DATA   EVEN  000004 MATH_2

 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI    SYMBOL TABLE                                               11   BMAP - B00     
 00101000 000000000000 /*T*            *6
 00101000 000000000000 /*T***************************      *6
 52101000 000000000007 ABS              9       *46
 41000000 000000000102 AUTO            *6       214       219       220       221       222       223
                                      224       225       226       230       312       314       317
                                      319       320       323       324       325       327       328
                                      329       330       331       332       334       335       337
                                      339
 52101000 000000000030 CEIL            13      *100
 41000000 000000000005 D             *307       314       324       327
 52101000 000000000137 DIV             17      *301
 41000000 000000000004 DIVIDEND      *203       219
 41000000 000000000006 DIVISOR       *204       214       220       230
 01101000 000000000150 DIVPT1         315      *323
 01101000 000000000161 DIVPT2         321      *334
 52101000 000000000000 FABS             8       *33
 52101000 000000000050 FLOOR           14      *131
 52101000 000000000111 FMOD            16      *207
 01101000 000000000122 FMODPT1        215      *219
 41000000 000000000010 FMODTEMP      *205       221       222       223       224       225       226
 52101000 000000000007 LABS            10       *52
 52101000 000000000137 LDIV            18      *302
 53101000 000000000066 MODF            15      *162       228
 01101000 000000000104 MODFPT1        169       175       177      *181
 41000000 000000000004 N             *306       319       323       330
 41000000 000000000100 PR0             *6        34        36        53        55        79       101
                                      103       132       134       164       166       208       210
                                      336       338
 41000000 000000000101 PR1             *6       182       185
 41000000 000000000102 PR2             *6
 41000000 000000000103 PR3             *6
 41000000 000000000104 PR4             *6
 41000000 000000000105 PR5             *6
 41000000 000000000106 PR6             *6
 41000000 000000000107 PR7             *6        37       104       135       167       174       176
                                      181       184
 41000000 000000000007 QUOTIENT      *309       317       325       328       329       331       335
 11:17 01/06/95  FILE=xb_math_2:a.:XBC3TSI    SYMBOL TABLE                                               12   BMAP - B00     
 52101000 000000000013 RAND            11       *64
 01101002 000000000000 RANDOM_SEED     65        69        70        83      *347
 41000000 000000000010 REMAINDER     *310       320       332       337
 52101000 000000000022 SRAND           12       *78
 41000000 000000000006 TEMPP0        *308       312       334       339
 01101002 000000000002 ZER_VAL        216      *349
 02201000 000000000000 _XBC_AUTO_0    *20
 03201001 000000000000 _XBC_AUTO_2    *21       303
 03201002 000000000000 _XBC_AUTO_4    *22       211
 03201003 000000000000 _XBC_FARET     *23       217       231       341

      40 SYMBOLS

       0 MACROS

    SYMBOL SPACE USED   614 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   720
 STATEMENTS PROCESSED   204
         ELAPSED TIME  0:01.92
             CPU TIME     1.29 SEC.
        ASSEMBLY RATE  9488 STATEMENTS/CPU MIN.

      NO ERRORS

