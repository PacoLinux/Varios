VERSION E05

PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:1    
        1        1        /*M*     KPV$VINIT Handle the volume initialization for diskettes    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          KPV$VINIT
        8        8                 PURPOSE:       Initialize the diskette
        9        9                 DESCRIPTION:   Before a fep image can be written to a disk-
       10       10                                ette, it must be initialized to a known
       11       11                                state. KPV$VINIT sends to the fep the address
       12       12                                identifier block. This block gives the numbers
       13       13                                of the sector-headers that are to be written
       14       14                                on the disk. The format of the block is given
       15       15                                below. Consult the DISKETTE ADAPTER manual
       16       16                                for further information. There is one such
       17       17                                'address identifier block' per track to be
       18       18                                formatted.
       19       19              ADDRESS IDENTIFIER BLOCK (one per track) contains four bytes
       20       20                per sector:
       21       21                    BYTE 00:  track #    \
       22       22                    BYTE 01:  head code   \ ... data for first sector
       23       23                    BYTE 02:  sector #    /
       24       24                    BYTE 03:  sec-size   /
       25       25                    BYTE 04:  track #    \
       26       26                    BYTE 05:  head code   \ ... data for second sector
       27       27                    BYTE 06:  sector #    /
       28       28                    BYTE 07:  sec_size   /
       29       29                      .
       30       30                      .
       31       31                      .
       32       32                The 'head code' has the following values:
       33       33                    0 = 'normal' side (double- and single-sided media)
       34       34                    1 = 'alternate' side (double-sided media only)
       35       35                The 'sec-size' has the following values:
       36       36                    0 = 128-byte sectors
       37       37                    1 = 256-byte sectors
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:2    
       38       38        */
       39       39        KPV$VINIT : PROC( OUT$ );
       40       40        /**/
       41       41        /*  Include files  */
       42       42        /**/
       43       43        %INCLUDE XU_MACRO_C;
       44     3149        %INCLUDE KP_DATA_R;
       45     4401        %INCLUDE XU_SUBS_C;
       46     4493        %INCLUDE KP_MSG;
       47     4586        /**/
       48     4587        /*  Entry declarations  */
       49     4588        /**/
       50     4589        %KP_ENTRIES (OMIT=KPV$VINIT);
       51     4695        /**/
       52     4696        /*  BASED DATA  */
       53     4697        /**/
       54     4698        %PARSE$OUT    ( NAME    = OUT$BLK,
       55     4699                        STCLASS = BASED );
       56     4744        %KP$MSG (NAME = KP$MSG,STCLASS = BASED);
       57     4820        %EJECT;
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:3    
       58     4821        /**/
       59     4822        /*  Local goodies  */
       60     4823        /**/
       61     4824    1   DCL OUT$ PTR;
       62     4825    1   DCL NSUBLKS UBIN WORD;
       63     4826    1   DCL FEP_NUM UBIN WORD;
       64     4827    1   DCL DRIVE_NUM UBIN WORD;
       65     4828    1   DCL IMAGE_SIZE UBIN(16) UNAL;
       66     4829    1   DCL 1 IMAGE_SIZE_ REDEF IMAGE_SIZE,
       67     4830    1         2 HOB UBIN(8) UNAL,
       68     4831    1         2 LOB UBIN(8) UNAL;
       69     4832    1   DCL PART SBIN WORD;
       70     4833    1   DCL PART$ PTR;
       71     4834    1   DCL OPT SBIN WORD;
       72     4835    1   DCL OPT$ PTR;
       73     4836        %EJECT;
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:4    
       74     4837        /**/
       75     4838        /*  Make sure he is allowed to do this thing.  */
       76     4839        /**/
       77     4840    1           CALL KPU$SECURITY(%KP_PRIV_WR#) ALTRET(CANT_OPEN);
       78     4841    1           CALL KPD$DISK_TYPE (IN_OPTS,%DT_RFEP#);
       79     4842        /**/
       80     4843        /*  Loop, processing options.  */
       81     4844        /**/
       82     4845    2           DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;
       83     4846    2              PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);
       84     4847    3              DO CASE(PART$ -> OUT$BLK.CODE);
       85     4848    3                 CASE(1);                  /* VOLINIT options                    */
       86     4849    3                   CALL KPU$OPTIONS (IN_OPTS,PART$) ALTRET(BOGUS);
       87     4850    3                 CASE(2);                  /* DRIVE ID                           */
       88     4851    3                    CALL KPU$FEP_AND_DRIVE(
       89     4852    3                      PART$ -> OUT$BLK,
       90     4853    3                      FEP_NUM,DRIVE_NUM) ALTRET(BOGUS);
       91     4854    3                    CALL KPX$OPEN( FEP_NUM, DRIVE_NUM ) ALTRET( BAD_ALTRET );
       92     4855    3                    END;                   /* END CASE                           */
       93     4856    2              END;                         /* END DO INDEX                       */
       94     4857        %EJECT;
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:5    
       95     4858        /**/
       96     4859        /* Tell the human what we're up to */
       97     4860        /**/
       98     4861    1             CALL KPT$TERM_MSG( %T$VINITING );
       99     4862    1             KP_DISK_ACTIVITY = %KP_DISK_VOLINITING#;
      100     4863        /**/
      101     4864        /*  Send one message to VOLINIT the entire disk.  */
      102     4865        /**/
      103     4866    1             KP_FECG_OUT$ -> KP$MSG.HEAD.MSG_TYPE = %KP_VINIT_RQS#;
      104     4867    1             KP_FECG_OUT$ -> KP$MSG.HEAD.DRIVE_NO = DRIVE_NUM;
      105     4868    1             KP_FECG_OUT$ -> KP$MSG.HEAD.SEC_SIZE = IN_OPTS.SSIZE_CODE;
      106     4869    1             KP_FECG_OUT$ -> KP$MSG.HEAD.TRACK_NO = IN_OPTS.TRACK_LO;
      107     4870    1             KP_FECG_OUT$ -> KP$MSG.VINIT_RQS.TRACK_HI = IN_OPTS.TRACK_HI;
      108     4871    1             KP_FECG_OUT$ -> KP$MSG.HEAD.SECTOR_NO = IN_OPTS.SECTOR_LO;
      109     4872    1             KP_FECG_OUT$ -> KP$MSG.VINIT_RQS.SECTOR_HI = IN_OPTS.SECTOR_HI;
      110     4873    1             KP_FECG_OUT$ -> KP$MSG.HEAD.SIDE = IN_OPTS.SIDE_LO;
      111     4874    1             KP_FECG_OUT$ -> KP$MSG.VINIT_RQS.SIDE_HI = IN_OPTS.SIDE_HI;
      112     4875    1             IMAGE_SIZE = SIZEC(KP$MSG.VINIT_RQS) - SIZEC(KP$MSG.VINIT_RQS.SPARE);
      113     4876    1             KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES.HOB = IMAGE_SIZE_.HOB;
      114     4877    1             KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES.LOB = IMAGE_SIZE_.LOB;
      115     4878    1             KP_FECG_OUT_SIZE = SIZEC(KP$MSG.HEAD) + IMAGE_SIZE;
      116     4879    1             CALL KPI$IO_SVC(%KP_FECG_WRITE#) ALTRET(RIVER_CITY);
      117     4880    2             DO WHILE '1'B;
      118     4881    2                CALL KPI$IO_SVC(%KP_FECG_READ#) ALTRET(RIVER_CITY);
      119     4882    2                IF KP_FECG_IN$ -> KP$MSG.HEAD.MSG_TYPE = %KP_VINIT_RSP# THEN EXIT;
      120     4883    2                CALL KPE$CHECK_ERR(%KP_VINIT_STT#) ALTRET(RIVER_CITY);
      121     4884    2             END;
      122     4885    1             CALL KPE$CHECK_ERR(%KP_VINIT_RSP#) ALTRET(RIVER_CITY);
      123     4886        %EJECT;
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:6    
      124     4887        /**/
      125     4888        /*  We're finished, and it all went OK.  */
      126     4889        /**/
      127     4890    1           CALL KPX$CLOSE( FEP_NUM, DRIVE_NUM ) ALTRET( BAD_ALTRET );
      128     4891    1           CALL KPT$TERM_MSG( %T$VINITDUN );
      129     4892        /**/
      130     4893        /* Get here when things become severely fouled */
      131     4894        /**/
      132     4895    1   BOGUS: ;
      133     4896    1   RIVER_CITY: ;
      134     4897    1   BAD_ALTRET: ;
      135     4898    1   CANT_OPEN: ;
      136     4899    1           RETURN;
      137     4900    1   END KPV$VINIT;

PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:7    
--  Include file information  --

   KP_MSG.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPV$VINIT.

   Procedure KPV$VINIT requires 142 words for executable code.
   Procedure KPV$VINIT requires 16 words of local(AUTO) storage.

    No errors detected in file KPV$VINIT.:E05TSI    .

PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:8    

 Object Unit name= KPV$VINIT                                  File name= KPV$VINIT.:E05TOU
 UTS= JUL 30 '97 01:22:12.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   142    216  KPV$VINIT
    2  RoData even  none    13     15  KPV$VINIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KPV$VINIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KPU$SECURITY
 yes     yes           Std       2 KPU$OPTIONS
 yes     yes           Std       2 KPX$OPEN
         yes           Std       1 KPT$TERM_MSG
         yes           Std       2 KPD$DISK_TYPE
 yes     yes           Std       1 KPE$CHECK_ERR
 yes     yes           Std       3 KPU$FEP_AND_DRIVE
 yes     yes           Std       2 KPX$CLOSE
 yes     yes           Std       1 KPI$IO_SVC
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KP_INBUF                              KP_RU_OUTBUF
     KP_FECG_IN$                           KP_FECG_OUT$                          KP_FECG_OUT_SIZE
     KP_RU_KEY                             KP_DISK_ACTIVITY                      IN_OPTS
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:10   


        1        1        /*M*     KPV$VINIT Handle the volume initialization for diskettes    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          KPV$VINIT
        8        8                 PURPOSE:       Initialize the diskette
        9        9                 DESCRIPTION:   Before a fep image can be written to a disk-
       10       10                                ette, it must be initialized to a known
       11       11                                state. KPV$VINIT sends to the fep the address
       12       12                                identifier block. This block gives the numbers
       13       13                                of the sector-headers that are to be written
       14       14                                on the disk. The format of the block is given
       15       15                                below. Consult the DISKETTE ADAPTER manual
       16       16                                for further information. There is one such
       17       17                                'address identifier block' per track to be
       18       18                                formatted.
       19       19              ADDRESS IDENTIFIER BLOCK (one per track) contains four bytes
       20       20                per sector:
       21       21                    BYTE 00:  track #    \
       22       22                    BYTE 01:  head code   \ ... data for first sector
       23       23                    BYTE 02:  sector #    /
       24       24                    BYTE 03:  sec-size   /
       25       25                    BYTE 04:  track #    \
       26       26                    BYTE 05:  head code   \ ... data for second sector
       27       27                    BYTE 06:  sector #    /
       28       28                    BYTE 07:  sec_size   /
       29       29                      .
       30       30                      .
       31       31                      .
       32       32                The 'head code' has the following values:
       33       33                    0 = 'normal' side (double- and single-sided media)
       34       34                    1 = 'alternate' side (double-sided media only)
       35       35                The 'sec-size' has the following values:
       36       36                    0 = 128-byte sectors
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:11   
       37       37                    1 = 256-byte sectors
       38       38        */
       39       39        KPV$VINIT : PROC( OUT$ );

     39  1 000000   000000 700200 xent  KPV$VINIT    TSX0  ! X66_AUTO_1
         1 000001   000020 000001                    ZERO    16,1

       40       40        /**/
       41       41        /*  Include files  */
       42       42        /**/
       43       43        %INCLUDE XU_MACRO_C;
       44     3149        %INCLUDE KP_DATA_R;
       45     4401        %INCLUDE XU_SUBS_C;
       46     4493        %INCLUDE KP_MSG;
       47     4586        /**/
       48     4587        /*  Entry declarations  */
       49     4588        /**/
       50     4589        %KP_ENTRIES (OMIT=KPV$VINIT);
       51     4695        /**/
       52     4696        /*  BASED DATA  */
       53     4697        /**/
       54     4698        %PARSE$OUT    ( NAME    = OUT$BLK,
       55     4699                        STCLASS = BASED );
       56     4744        %KP$MSG (NAME = KP$MSG,STCLASS = BASED);
       57     4820        %EJECT;
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:12   
       58     4821        /**/
       59     4822        /*  Local goodies  */
       60     4823        /**/
       61     4824    1   DCL OUT$ PTR;
       62     4825    1   DCL NSUBLKS UBIN WORD;
       63     4826    1   DCL FEP_NUM UBIN WORD;
       64     4827    1   DCL DRIVE_NUM UBIN WORD;
       65     4828    1   DCL IMAGE_SIZE UBIN(16) UNAL;
       66     4829    1   DCL 1 IMAGE_SIZE_ REDEF IMAGE_SIZE,
       67     4830    1         2 HOB UBIN(8) UNAL,
       68     4831    1         2 LOB UBIN(8) UNAL;
       69     4832    1   DCL PART SBIN WORD;
       70     4833    1   DCL PART$ PTR;
       71     4834    1   DCL OPT SBIN WORD;
       72     4835    1   DCL OPT$ PTR;
       73     4836        %EJECT;
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:13   
       74     4837        /**/
       75     4838        /*  Make sure he is allowed to do this thing.  */
       76     4839        /**/
       77     4840    1           CALL KPU$SECURITY(%KP_PRIV_WR#) ALTRET(CANT_OPEN);

   4840  1 000002   000000 630400 2                  EPPR0   0
         1 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000004   000000 701000 xent               TSX1    KPU$SECURITY
         1 000005   000215 702000 1                  TSX2    BOGUS

       78     4841    1           CALL KPD$DISK_TYPE (IN_OPTS,%DT_RFEP#);

   4841  1 000006   000001 630400 2                  EPPR0   1
         1 000007   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000010   000000 701000 xent               TSX1    KPD$DISK_TYPE
         1 000011   000000 011000                    NOP     0

       79     4842        /**/
       80     4843        /*  Loop, processing options.  */
       81     4844        /**/
       82     4845    2           DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;

   4845  1 000012   200010 450100                    STZ     PART,,AUTO
         1 000013   000064 710000 1                  TRA     s:4856+1

       83     4846    2              PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);

   4846  1 000014   200003 470500                    LDP0    @OUT$,,AUTO
         1 000015   000000 471500                    LDP1    0,,PR0
         1 000016   200010 720100                    LXL0    PART,,AUTO
         1 000017   100003 236110                    LDQ     3,X0,PR1
         1 000020   200011 756100                    STQ     PART$,,AUTO

       84     4847    3              DO CASE(PART$ -> OUT$BLK.CODE);

   4847  1 000021   200011 471500                    LDP1    PART$,,AUTO
         1 000022   100000 721100                    LXL1    0,,PR1
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:14   
         1 000023   000003 101003                    CMPX1   3,DU
         1 000024   000026 602011 1                  TNC     s:4847+5,X1
         1 000025   000063 710000 1                  TRA     s:4856
         1 000026   000063 710000 1                  TRA     s:4856
         1 000027   000031 710000 1                  TRA     s:4849
         1 000030   000042 710000 1                  TRA     s:4851

       85     4848    3                 CASE(1);                  /* VOLINIT options                    */

       86     4849    3                   CALL KPU$OPTIONS (IN_OPTS,PART$) ALTRET(BOGUS);

   4849  1 000031   200011 633500                    EPPR3   PART$,,AUTO
         1 000032   200015 453500                    STP3    PART$+4,,AUTO
         1 000033   000001 236000 2                  LDQ     1
         1 000034   200014 756100                    STQ     PART$+3,,AUTO
         1 000035   200014 630500                    EPPR0   PART$+3,,AUTO
         1 000036   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000037   000000 701000 xent               TSX1    KPU$OPTIONS
         1 000040   000215 702000 1                  TSX2    BOGUS
         1 000041   000063 710000 1                  TRA     s:4856

       87     4850    3                 CASE(2);                  /* DRIVE ID                           */

       88     4851    3                    CALL KPU$FEP_AND_DRIVE(

   4851  1 000042   200006 633500                    EPPR3   DRIVE_NUM,,AUTO
         1 000043   200016 453500                    STP3    PART$+5,,AUTO
         1 000044   200005 634500                    EPPR4   FEP_NUM,,AUTO
         1 000045   200015 454500                    STP4    PART$+4,,AUTO
         1 000046   200014 756100                    STQ     PART$+3,,AUTO
         1 000047   200014 630500                    EPPR0   PART$+3,,AUTO
         1 000050   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000051   000000 701000 xent               TSX1    KPU$FEP_AND_DRIVE
         1 000052   000215 702000 1                  TSX2    BOGUS

       89     4852    3                      PART$ -> OUT$BLK,
       90     4853    3                      FEP_NUM,DRIVE_NUM) ALTRET(BOGUS);
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:15   
       91     4854    3                    CALL KPX$OPEN( FEP_NUM, DRIVE_NUM ) ALTRET( BAD_ALTRET );

   4854  1 000053   200006 630500                    EPPR0   DRIVE_NUM,,AUTO
         1 000054   200015 450500                    STP0    PART$+4,,AUTO
         1 000055   200005 631500                    EPPR1   FEP_NUM,,AUTO
         1 000056   200014 451500                    STP1    PART$+3,,AUTO
         1 000057   200014 630500                    EPPR0   PART$+3,,AUTO
         1 000060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000061   000000 701000 xent               TSX1    KPX$OPEN
         1 000062   000215 702000 1                  TSX2    BOGUS

       92     4855    3                    END;                   /* END CASE                           */

       93     4856    2              END;                         /* END DO INDEX                       */

   4856  1 000063   200010 054100                    AOS     PART,,AUTO
         1 000064   200003 470500                    LDP0    @OUT$,,AUTO
         1 000065   000000 471500                    LDP1    0,,PR0
         1 000066   100001 236100                    LDQ     1,,PR1
         1 000067   000022 772000                    QRL     18
         1 000070   200010 116100                    CMPQ    PART,,AUTO
         1 000071   000014 605400 1                  TPNZ    s:4846

       94     4857        %EJECT;
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:16   
       95     4858        /**/
       96     4859        /* Tell the human what we're up to */
       97     4860        /**/
       98     4861    1             CALL KPT$TERM_MSG( %T$VINITING );

   4861  1 000072   000004 630400 2                  EPPR0   4
         1 000073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000074   000000 701000 xent               TSX1    KPT$TERM_MSG
         1 000075   000000 011000                    NOP     0

       99     4862    1             KP_DISK_ACTIVITY = %KP_DISK_VOLINITING#;

   4862  1 000076   000004 235007                    LDA     4,DL
         1 000077   000000 755000 xsym               STA     KP_DISK_ACTIVITY

      100     4863        /**/
      101     4864        /*  Send one message to VOLINIT the entire disk.  */
      102     4865        /**/
      103     4866    1             KP_FECG_OUT$ -> KP$MSG.HEAD.MSG_TYPE = %KP_VINIT_RQS#;

   4866  1 000100   000000 470400 xsym               LDP0    KP_FECG_OUT$
         1 000101   001000 236003                    LDQ     512,DU
         1 000102   000000 552140                    STBQ    0,'40'O,PR0

      104     4867    1             KP_FECG_OUT$ -> KP$MSG.HEAD.DRIVE_NO = DRIVE_NUM;

   4867  1 000103   000000 470400 xsym               LDP0    KP_FECG_OUT$
         1 000104   200006 236100                    LDQ     DRIVE_NUM,,AUTO
         1 000105   000022 736000                    QLS     18
         1 000106   000000 552120                    STBQ    0,'20'O,PR0

      105     4868    1             KP_FECG_OUT$ -> KP$MSG.HEAD.SEC_SIZE = IN_OPTS.SSIZE_CODE;

   4868  1 000107   000000 470400 xsym               LDP0    KP_FECG_OUT$
         1 000110   000011 236000 xsym               LDQ     IN_OPTS+9
         1 000111   000002 552104                    STBQ    2,'04'O,PR0

PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:17   
      106     4869    1             KP_FECG_OUT$ -> KP$MSG.HEAD.TRACK_NO = IN_OPTS.TRACK_LO;

   4869  1 000112   000000 236000 xsym               LDQ     IN_OPTS
         1 000113   000022 736000                    QLS     18
         1 000114   000002 552120                    STBQ    2,'20'O,PR0

      107     4870    1             KP_FECG_OUT$ -> KP$MSG.VINIT_RQS.TRACK_HI = IN_OPTS.TRACK_HI;

   4870  1 000115   000001 236000 xsym               LDQ     IN_OPTS+1
         1 000116   000004 552104                    STBQ    4,'04'O,PR0

      108     4871    1             KP_FECG_OUT$ -> KP$MSG.HEAD.SECTOR_NO = IN_OPTS.SECTOR_LO;

   4871  1 000117   000002 236000 xsym               LDQ     IN_OPTS+2
         1 000120   000011 736000                    QLS     9
         1 000121   000002 552110                    STBQ    2,'10'O,PR0

      109     4872    1             KP_FECG_OUT$ -> KP$MSG.VINIT_RQS.SECTOR_HI = IN_OPTS.SECTOR_HI;

   4872  1 000122   000003 236000 xsym               LDQ     IN_OPTS+3
         1 000123   000011 736000                    QLS     9
         1 000124   000004 552110                    STBQ    4,'10'O,PR0

      110     4873    1             KP_FECG_OUT$ -> KP$MSG.HEAD.SIDE = IN_OPTS.SIDE_LO;

   4873  1 000125   000004 236000 xsym               LDQ     IN_OPTS+4
         1 000126   000033 736000                    QLS     27
         1 000127   000002 552140                    STBQ    2,'40'O,PR0

      111     4874    1             KP_FECG_OUT$ -> KP$MSG.VINIT_RQS.SIDE_HI = IN_OPTS.SIDE_HI;

   4874  1 000130   000005 236000 xsym               LDQ     IN_OPTS+5
         1 000131   000033 736000                    QLS     27
         1 000132   000005 552140                    STBQ    5,'40'O,PR0

      112     4875    1             IMAGE_SIZE = SIZEC(KP$MSG.VINIT_RQS) - SIZEC(KP$MSG.VINIT_RQS.SPARE);

PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:18   
   4875  1 000133   200007 236100                    LDQ     IMAGE_SIZE,,AUTO
         1 000134   000005 376000 2                  ANQ     5
         1 000135   000014 276003                    ORQ     12,DU
         1 000136   200007 756100                    STQ     IMAGE_SIZE,,AUTO

      113     4876    1             KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES.HOB = IMAGE_SIZE_.HOB;

   4876  1 000137   200007 236100                    LDQ     IMAGE_SIZE,,AUTO
         1 000140   776000 376003                    ANQ     -1024,DU
         1 000141   000023 772000                    QRL     19
         1 000142   000001 552110                    STBQ    1,'10'O,PR0

      114     4877    1             KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES.LOB = IMAGE_SIZE_.LOB;

   4877  1 000143   200007 236100                    LDQ     IMAGE_SIZE,,AUTO
         1 000144   001774 376003                    ANQ     1020,DU
         1 000145   000024 772000                    QRL     20
         1 000146   000001 552104                    STBQ    1,'04'O,PR0

      115     4878    1             KP_FECG_OUT_SIZE = SIZEC(KP$MSG.HEAD) + IMAGE_SIZE;

   4878  1 000147   200007 236100                    LDQ     IMAGE_SIZE,,AUTO
         1 000150   000024 772000                    QRL     20
         1 000151   000022 036007                    ADLQ    18,DL
         1 000152   000000 756000 xsym               STQ     KP_FECG_OUT_SIZE

      116     4879    1             CALL KPI$IO_SVC(%KP_FECG_WRITE#) ALTRET(RIVER_CITY);

   4879  1 000153   000006 630400 2                  EPPR0   6
         1 000154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000155   000000 701000 xent               TSX1    KPI$IO_SVC
         1 000156   000215 702000 1                  TSX2    BOGUS

      117     4880    2             DO WHILE '1'B;

      118     4881    2                CALL KPI$IO_SVC(%KP_FECG_READ#) ALTRET(RIVER_CITY);

PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:19   
   4881  1 000157   000002 630400 2                  EPPR0   2
         1 000160   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000161   000000 701000 xent               TSX1    KPI$IO_SVC
         1 000162   000215 702000 1                  TSX2    BOGUS

      119     4882    2                IF KP_FECG_IN$ -> KP$MSG.HEAD.MSG_TYPE = %KP_VINIT_RSP# THEN EXIT;

   4882  1 000163   000000 470400 xsym               LDP0    KP_FECG_IN$
         1 000164   000000 236100                    LDQ     0,,PR0
         1 000165   777000 376003                    ANQ     -512,DU
         1 000166   015000 116003                    CMPQ    6656,DU
         1 000167   000175 600000 1                  TZE     s:4885

      120     4883    2                CALL KPE$CHECK_ERR(%KP_VINIT_STT#) ALTRET(RIVER_CITY);

   4883  1 000170   000010 630400 2                  EPPR0   8
         1 000171   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000172   000000 701000 xent               TSX1    KPE$CHECK_ERR
         1 000173   000215 702000 1                  TSX2    BOGUS

      121     4884    2             END;

   4884  1 000174   000157 710000 1                  TRA     s:4881

      122     4885    1             CALL KPE$CHECK_ERR(%KP_VINIT_RSP#) ALTRET(RIVER_CITY);

   4885  1 000175   000012 630400 2                  EPPR0   10
         1 000176   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000177   000000 701000 xent               TSX1    KPE$CHECK_ERR
         1 000200   000215 702000 1                  TSX2    BOGUS

      123     4886        %EJECT;
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:20   
      124     4887        /**/
      125     4888        /*  We're finished, and it all went OK.  */
      126     4889        /**/
      127     4890    1           CALL KPX$CLOSE( FEP_NUM, DRIVE_NUM ) ALTRET( BAD_ALTRET );

   4890  1 000201   200006 630500                    EPPR0   DRIVE_NUM,,AUTO
         1 000202   200015 450500                    STP0    PART$+4,,AUTO
         1 000203   200005 631500                    EPPR1   FEP_NUM,,AUTO
         1 000204   200014 451500                    STP1    PART$+3,,AUTO
         1 000205   200014 630500                    EPPR0   PART$+3,,AUTO
         1 000206   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000207   000000 701000 xent               TSX1    KPX$CLOSE
         1 000210   000215 702000 1                  TSX2    BOGUS

      128     4891    1           CALL KPT$TERM_MSG( %T$VINITDUN );

   4891  1 000211   000014 630400 2                  EPPR0   12
         1 000212   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000213   000000 701000 xent               TSX1    KPT$TERM_MSG
         1 000214   000000 011000                    NOP     0

   4890  1 000215                       BOGUS        null
   4890  1 000215                       RIVER_CITY   null
   4890  1 000215                       BAD_ALTRET   null
   4890  1 000215                       CANT_OPEN    null
      129     4892        /**/
      130     4893        /* Get here when things become severely fouled */
      131     4894        /**/
      132     4895    1   BOGUS: ;
      133     4896    1   RIVER_CITY: ;
      134     4897    1   BAD_ALTRET: ;
      135     4898    1   CANT_OPEN: ;
      136     4899    1           RETURN;

   4899  1 000215   000000 702200 xent               TSX2  ! X66_ARET
      137     4900    1   END KPV$VINIT;

PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:21   
--  Include file information  --

   KP_MSG.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPV$VINIT.
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:22   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @OUT$                      6-0-0/w UBIN        r     1 DRIVE_NUM
     5-0-0/w UBIN        r     1 FEP_NUM                    7-0-0/b UBIN(16)    r     1 IMAGE_SIZE
     7-0-0/b STRC(16)    r     1 IMAGE_SIZE_               *0-0-0/w PTR         r     1 OUT$
    10-0-0/w SBIN        r     1 PART                      11-0-0/w PTR         r     1 PART$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(468)   r     1 IN_OPTS                    0-0-0/w SBIN        r     1 KP_DISK_ACTIVITY
     0-0-0/w PTR         r     1 KP_FECG_IN$                0-0-0/w PTR         r     1 KP_FECG_OUT$
     0-0-0/w UBIN        r     1 KP_FECG_OUT_SIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18594) r     1 KP$MSG                     0-0-0/w STRC(144)   r     1 OUT$BLK


   Procedure KPV$VINIT requires 142 words for executable code.
   Procedure KPV$VINIT requires 16 words of local(AUTO) storage.

    No errors detected in file KPV$VINIT.:E05TSI    .
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:24   
          MINI XREF LISTING

BAD_ALTRET
      4890**LABEL    4854--CALLALT  4890--CALLALT
BOGUS
      4890**LABEL    4849--CALLALT  4851--CALLALT
CANT_OPEN
      4890**LABEL    4840--CALLALT
DRIVE_NUM
      4827**DCL      4851<>CALL     4854<>CALL     4867>>ASSIGN   4890<>CALL
FEP_NUM
      4826**DCL      4851<>CALL     4854<>CALL     4890<>CALL
IMAGE_SIZE
      4828**DCL      4829--REDEF    4875<<ASSIGN   4878>>ASSIGN
IMAGE_SIZE_.HOB
      4830**DCL      4876>>ASSIGN
IMAGE_SIZE_.LOB
      4831**DCL      4877>>ASSIGN
IN_OPTS
      4156**DCL      4841<>CALL     4849<>CALL
IN_OPTS.SECTOR_HI
      4160**DCL      4872>>ASSIGN
IN_OPTS.SECTOR_LO
      4159**DCL      4871>>ASSIGN
IN_OPTS.SIDE_HI
      4162**DCL      4874>>ASSIGN
IN_OPTS.SIDE_LO
      4161**DCL      4873>>ASSIGN
IN_OPTS.SSIZE_CODE
      4166**DCL      4868>>ASSIGN
IN_OPTS.TRACK_HI
      4158**DCL      4870>>ASSIGN
IN_OPTS.TRACK_LO
      4157**DCL      4869>>ASSIGN
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:25   
KP$MSG.HEAD
      4746**DCL      4878--ASSIGN
KP$MSG.HEAD.DRIVE_NO
      4748**DCL      4867<<ASSIGN
KP$MSG.HEAD.MSG_TYPE
      4747**DCL      4866<<ASSIGN   4882>>IF
KP$MSG.HEAD.NUM_BYTES.HOB
      4759**DCL      4876<<ASSIGN
KP$MSG.HEAD.NUM_BYTES.LOB
      4760**DCL      4877<<ASSIGN
KP$MSG.HEAD.SECTOR_NO
      4763**DCL      4871<<ASSIGN
KP$MSG.HEAD.SEC_SIZE
      4764**DCL      4868<<ASSIGN
KP$MSG.HEAD.SIDE
      4761**DCL      4873<<ASSIGN
KP$MSG.HEAD.TRACK_NO
      4762**DCL      4869<<ASSIGN
KP$MSG.TDATA
      4771**DCL      4772--REDEF    4773--REDEF    4778--REDEF    4792--REDEF    4797--REDEF    4801--REDEF
      4807--REDEF    4810--REDEF
KP$MSG.VINIT_RQS
      4773**DCL      4875--ASSIGN
KP$MSG.VINIT_RQS.SECTOR_HI
      4774**DCL      4872<<ASSIGN
KP$MSG.VINIT_RQS.SIDE_HI
      4776**DCL      4874<<ASSIGN
KP$MSG.VINIT_RQS.SPARE
      4777**DCL      4875--ASSIGN
KP$MSG.VINIT_RQS.TRACK_HI
      4775**DCL      4870<<ASSIGN
KPD$DISK_TYPE
      4606**DCL-ENT  4841--CALL
KPE$CHECK_ERR
      4609**DCL-ENT  4883--CALL     4885--CALL
KPI$IO_SVC
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:26   
      4624**DCL-ENT  4879--CALL     4881--CALL
KPT$TERM_MSG
      4636**DCL-ENT  4861--CALL     4891--CALL
KPU$FEP_AND_DRIVE
      4642**DCL-ENT  4851--CALL
KPU$OPTIONS
      4649**DCL-ENT  4849--CALL
KPU$SECURITY
      4692**DCL-ENT  4840--CALL
KPX$CLOSE
      4658**DCL-ENT  4890--CALL
KPX$OPEN
      4664**DCL-ENT  4854--CALL
KP_DISK_ACTIVITY
      4005**DCL      4862<<ASSIGN
KP_EXIT.V.STEPCC#
      4072**DCL      4072--REDEF
KP_FECG_IN$
      3998**DCL      4882>>IF
KP_FECG_OUT$
      3998**DCL      4866>>ASSIGN   4867>>ASSIGN   4868>>ASSIGN   4869>>ASSIGN   4870>>ASSIGN   4871>>ASSIGN
      4872>>ASSIGN   4873>>ASSIGN   4874>>ASSIGN   4876>>ASSIGN   4877>>ASSIGN
KP_FECG_OUT_SIZE
      3998**DCL      4878<<ASSIGN
KP_INBUF
      3994**DCL      3994--REDEF
KP_RU_KEY
      4002**DCL      4003--REDEF
KP_RU_KEY.NODE
      4002**DCL      4002--REDEF
KP_RU_KEY.PAGE
      4003**DCL      4003--REDEF
KP_RU_OUTBUF
      3996**DCL      3996--REDEF
OUT$
      4824**DCL        39--PROC     4845>>DOINDEX  4846>>ASSIGN
PL6.E3A0      #001=KPV$VINIT File=KPV$VINIT.:E05TSI                              WED 07/30/97 01:22 Page:27   
OUT$BLK
      4705**DCL      4851<>CALL
OUT$BLK.CODE
      4713**DCL      4847>>DOCASE
OUT$BLK.NSUBLKS
      4717**DCL      4845>>DOINDEX
OUT$BLK.SUBLK$
      4738**DCL      4846>>ASSIGN
PART
      4832**DCL      4845<<DOINDEX  4846>>ASSIGN
PART$
      4833**DCL      4846<<ASSIGN   4847>>DOCASE   4849<>CALL     4851>>CALL
RIVER_CITY
      4890**LABEL    4879--CALLALT  4881--CALLALT  4883--CALLALT  4885--CALLALT
