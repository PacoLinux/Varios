VERSION E05

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:1    
        1        1        /*M* GTC$MLC16_HNDLR     Front End T&D COLTS Message and I/O Handler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        GTC$MLC16_HNDLR
       12       12              AUTHOR:      R. D. Vogler
       13       13              PURPOSE:     Colts Message Handler and I/O Handler
       14       14              DESCRIPTION: This module handles Colts intercomputer messages
       15       15                           (ICM's) between the FEP and the Host, and also
       16       16                           performs necessary I/O on behalf of the Colts
       17       17                           test pages.
       18       18              REFERENCE:   CP-6 Release C01
       19       19              LAST UPDATE: 04/10/85
       20       20        */
       21       21        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:2    
       22       22        /*F*  NAME:        GTC$MLC16_HNDLR
       23       23              PURPOSE:     Handle COLTS ICM's and test I/O's
       24       24              DESCRIPTION: This procedure is entered as a consequence of
       25       25                           downline-loading this module into the front-end
       26       26                           processor(FEP).  This routine opens a path to
       27       27                           host COLTS, processes incoming COLTS messages
       28       28                           (ICM's), performs specified test I/O's, and sends
       29       29                           the test results back to host COLTS.  As the
       30       30                           result of an ALTRET on either M$READ or M$WRITE,
       31       31                           this procedure does an orderly cleanup and
       32       32                           exits.
       33       33        */
       34       34        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:3    
       35       35        /*D*  NAME:        GTC$MLC16_HNDLR
       36       36              INTERFACE:   This routine calls the following:
       37       37                            M$OPEN
       38       38                            M$READ
       39       39                            PROCESS_ICM
       40       40                            M$WRITE
       41       41                            WRAP_UP
       42       42                            M$CLOSE
       43       43                            M$EXIT
       44       44        */
       45       45        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:4    
       46       46        GTC$MLC16_HNDLR: PROC MAIN;
       47       47
       48       48        /*   INCLUDE FILES   */
       49       49        %INCLUDE GT_MACROS_M;
       50      132        %INCLUDE GT_CMN_E;
       51      238        %INCLUDE GH_IOFNC_E;
       52      307        %INCLUDE GH_HARDWARE_M;
       53      405        %INCLUDE LCP_6;
       54     4684        %INCLUDE G_JIT_M;
       55     4949        %G$JIT_E;
       56     5011
       57     5012        /*   MACROS   */
       58     5013        %Y_CLTICM (STCLASS = "BASED (ICM$)");
       59     5058        %GH_IO (FPTN  = GT_IO, STCLASS =  STATIC);
       60     5074        %GH_IOLD (FPTN = GT_IOLD, STCLASS = STATIC);
       61     5089        %VLR_GCHAN (FPTN = CHAN_DATA);
       62     5108
       63     5109        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:5    
       64     5110        /*   FPT'S   */
       65     5111        %FPT_OPEN  (FPTN    = OPEN_COLTS,
       66     5112                    DCB     = M$COLTN,
       67     5113                    ORG     = CONSEC,
       68     5114                    RES     ='HO');
       69     5142
       70     5143        %FPT_READ  (FPTN    = GET_ICM,
       71     5144                    DCB     = M$COLTN,
       72     5145                    BUF     = ICMDATA,
       73     5146                    WAIT    = YES);
       74     5172
       75     5173        %FPT_WRITE (FPTN    = SEND_ICM,
       76     5174                    BP      = YES,
       77     5175                    DCB     = M$COLTN,
       78     5176                    BUF     = ICMDATA);
       79     5200
       80     5201        %FPT_WAIT  (FPTN    = WAIT_IO,
       81     5202                    UNITS   = SECS_DELAY);
       82     5226
       83     5227        %FPT_CLOSE (FPTN    = END_COLTS,
       84     5228                    DCB     = M$COLTN);
       85     5248
       86     5249        %FPT_GCHAN (FPTN       = GET_CHAN,
       87     5250                    GCHAN      = CHAN_DATA,
       88     5251                    DIAG       = YES);
       89     5274
       90     5275        %FPT_RCHAN (FPTN       = RELEASE_CHAN);
       91     5296
       92     5297        %FPT_SPRIV (FPTN = ACTIVATE_PRIV,
       93     5298                    AUTH = YES,
       94     5299                    PRIV = MSYS_PRIV);
       95     5322
       96     5323        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:6    
       97     5324        /*   DCL'S   */
       98     5325    1      DCL 1 Y_FLAGS STATIC ALIGNED,
       99     5326    1            2 NOSUCHTST BIT(1) UNAL INIT('0'B),
      100     5327    1            2 CKRDY BIT(1) UNAL INIT('0'B),
      101     5328    1            2 NOATE BIT(1) UNAL INIT('0'B),
      102     5329    1            2 RCH BIT(1) UNAL INIT('0'B),
      103     5330    1            2 XCH BIT(1) UNAL INIT('0'B),
      104     5331    1            2 CCB BIT(1) UNAL INIT('0'B),
      105     5332    1            2 * BIT(2) UNAL INIT('0'B);
      106     5333
      107     5334    1      DCL Y_TCOUNT UBIN BYTE STATIC UNAL INIT(0);
      108     5335
      109     5336    1      DCL 1 Y_TENTRY(0:7) STATIC ALIGNED,
      110     5337    1            2 CHN,
      111     5338    1              3 C BIT(10) UNAL INIT('0'B*8),
      112     5339    1              3 F BIT(6) UNAL INIT('0'B*8),
      113     5340    1            2 RFU UBIN BYTE UNAL INIT(0*8),
      114     5341    1            2 TYP UBIN BYTE UNAL INIT(0*8);
      115     5342
      116     5343    1      DCL ICM$ PTR STATIC INIT(ADDR(NIL));
      117     5344
      118     5345    1      DCL SECS_DELAY UBIN(16) STATIC INIT(1);
      119     5346
      120     5347    1      DCL M$COLTN DCB;
      121     5348
      122     5349    1      DCL GHH$IOLD ENTRY(1) ALTRET ;
      123     5350    1      DCL GHH$IO_IN ENTRY(1) ALTRET ;
      124     5351
      125     5352    1      DCL Y_DBUFSZ(0:7) UBIN WORD STATIC INIT(0*8);
      126     5353    1      DCL Y_DBUF(0:1935) UBIN WORD STATIC ALIGNED INIT(0*1936);
      127     5354
      128     5355    1      DCL ICMDATA CHAR(512) STATIC ALIGNED INIT(' ');
      129     5356
      130     5357    1      DCL MSYS_PRIV BIT (32) STATIC ALIGNED INIT('0'B);
      131     5358
      132     5359        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:7    
      133     5360
      134     5361        /*   THIS IS THE TOP-LEVEL CODING FOR THIS PROCEDURE   */
      135     5362
      136     5363        /* Note that it does M$READ(with WAIT) and M$WRITE(no WAIT) */
      137     5364
      138     5365    1      MSYS_PRIV = %G_PR_TND#;
      139     5366    1      CALL M$SPRIV (ACTIVATE_PRIV) ALTRET (SOLONG);
      140     5367    1      CALL M$SYS ALTRET (SOLONG);
      141     5368
      142     5369    1      CALL M$OPEN (OPEN_COLTS) ALTRET (SOLONG);
      143     5370
      144     5371    1      ICM$ = ADDR (ICMDATA);
      145     5372
      146     5373    2      DO WHILE (%G_YES#);
      147     5374    2         VBOUND(GET_ICM.BUF_) = 511;
      148     5375    2         CALL M$READ (GET_ICM) ALTRET (BEGONE);
      149     5376    2         CALL PROCESS_ICM;
      150     5377    2         VBOUND(SEND_ICM.BUF_) = 2 * Y_CLTICM.T1.R1.ICMWDS - 1;
      151     5378    2         CALL M$WRITE (SEND_ICM) ALTRET (BEGONE);
      152     5379    2      END;
      153     5380
      154     5381    1   BEGONE:
      155     5382    1      CALL WRAP_UP;
      156     5383    1      CALL M$CLOSE (END_COLTS);
      157     5384
      158     5385    1   SOLONG:
      159     5386    1      CALL M$EXIT;
      160     5387
      161     5388        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:8    
      162     5389        /*I*  NAME:        PROCESS_ICM
      163     5390              PURPOSE:     Process all COLTS ICM's
      164     5391              CALL:        CALL PROCESS_ICM;
      165     5392                           Never altreturns.
      166     5393              INTERFACE:   This routine calls the following:
      167     5394                            Y$CKSUM
      168     5395                            START_TEST
      169     5396                            EXECUTE_TEST
      170     5397                            TERMINATE_TEST
      171     5398              DATA:        This routine analyzes and modifies the data
      172     5399                           in the ICM buffer using the pointer ICM$.
      173     5400              DESCRIPTION: This procedure validates the checksum of the
      174     5401                           incoming ICM data, decodes and executes the
      175     5402                           ICM command, collects the test results and
      176     5403                           formats them into the outgoing ICM reply data.
      177     5404        */
      178     5405        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:9    
      179     5406    1   PROCESS_ICM: PROC;
      180     5407
      181     5408    2      DCL CKS BIT(16) ALIGNED;
      182     5409
      183     5410    2      CALL Y$CKSUM (CKS);
      184     5411
      185     5412    2      IF Y_CLTICM.T1.R1.ICMCKS ~= CKS
      186     5413
      187     5414    3      THEN DO;
      188     5415    3              Y_CLTICM.T1.IFLAGS.BADCKS = %G_ON#;
      189     5416    3              Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;
      190     5417    3           END;
      191     5418
      192     5419    3      ELSE DO;
      193     5420    4              DO CASE (Y_CLTICM.T1.R1.ICMCOM);
      194     5421    4                 CASE (%Y#STARTT);
      195     5422    4                    CALL START_TEST;
      196     5423
      197     5424    4                 CASE (%Y#EXECUT);
      198     5425    4                    CALL EXECUTE_TEST;
      199     5426
      200     5427    4                 CASE (%Y#TERMNT);
      201     5428    4                    CALL TERMINATE_TEST;
      202     5429
      203     5430    4                 CASE (ELSE);
      204     5431    4                    Y_CLTICM.T1.IFLAGS.BADCOM = %G_ON#;
      205     5432    4                    Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;
      206     5433    4              END;
      207     5434    3           END;
      208     5435
      209     5436    2      CALL Y$CKSUM (CKS);
      210     5437
      211     5438    2      Y_CLTICM.T1.R1.ICMCKS = CKS;
      212     5439
      213     5440    2      RETURN;
      214     5441
      215     5442        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:10   
      216     5443        /*I*  NAME:        Y$CKSUM
      217     5444              PURPOSE:     Compute checksum for COLTS ICM
      218     5445              CALL:        CALL Y$CKSUM (CS);
      219     5446                           Does not altreturn.
      220     5447              PARAMETERS:  CS is an OUTPUT parameter containing the
      221     5448                           computed checksum of the ICM data.
      222     5449              INTERFACE:   None.
      223     5450              DATA:        Examines data in ICM buffer using pointer ICM$.
      224     5451              DESCRIPTION: Computes checksum by successively exclusive-or'ing
      225     5452                           the words in the ICM data buffer, starting with
      226     5453                           word 3 of the ICM.
      227     5454        */
      228     5455        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:11   
      229     5456    2   Y$CKSUM: PROC (CS);
      230     5457
      231     5458    3      DCL ITEM UBIN BYTE;
      232     5459    3      DCL CS BIT(16) ALIGNED;
      233     5460
      234     5461    3      CS = '0'B;
      235     5462
      236     5463    3      IF Y_CLTICM.T1.R1.ICMWDS > 9
      237     5464    3      THEN
      238     5465
      239     5466    4           DO ITEM = 0 TO Y_CLTICM.T1.R1.ICMWDS - 4;
      240     5467    4              CS = CS \ Y_CLTICM.T2.ICMTXT (ITEM);
      241     5468    4           END;
      242     5469
      243     5470    3      RETURN;
      244     5471
      245     5472    3   END Y$CKSUM;
      246     5473
      247     5474        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:12   
      248     5475        /*I*  NAME:        START_TEST
      249     5476              PURPOSE:     Allocate resources for COLTS testing
      250     5477              CALL:        CALL START_TEST;
      251     5478                           Does not altreturn.
      252     5479              INTERFACE:   This routine calls the following:
      253     5480                            Y$GETLIN
      254     5481                            Y$ALLOC
      255     5482              DATA:        Uses data in ICM buffer (pointer ICM$).
      256     5483              DESCRIPTION: Places entry in Active Test Table and allocates
      257     5484                           channel/device for COLTS testing.
      258     5485        */
      259     5486        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:13   
      260     5487    2   START_TEST: PROC;
      261     5488
      262     5489    3      DCL CHAD BIT(16) ALIGNED;
      263     5490
      264     5491    3      CHAD = Y_CLTICM.T1.R1.CHNLNR;
      265     5492
      266     5493    3      CALL Y$GETLIN WHENRETURN
      267     5494    4           DO;
      268     5495    4              CALL Y$ALLOC;
      269     5496    4           END;
      270     5497
      271     5498    3      IF Y_CLTICM.T1.IFLAGS.DVBUSY = %G_OFF#
      272     5499    3      THEN
      273     5500    3         Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      274     5501    3      ELSE
      275     5502    4           DO;
      276     5503    4              Y_CLTICM.T1.R1.ICMRPY = %Y#ALLOCN;
      277     5504    4              IF Y_FLAGS.NOATE
      278     5505    4              THEN
      279     5506    4                 Y_FLAGS.NOATE = %G_OFF#;
      280     5507    4              ELSE
      281     5508    5                   DO;
      282     5509    5                      Y_TENTRY(Y_CLTICM.T1.R1.TSTIND) = '0'B;
      283     5510    5                      Y_TCOUNT = Y_TCOUNT - 1;
      284     5511    5                   END;
      285     5512    4           END;
      286     5513
      287     5514    3      RETURN;
      288     5515
      289     5516        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:14   
      290     5517        /*I*  NAME:        Y$GETLIN
      291     5518              PURPOSE:     Put entry in Active Test Table
      292     5519              CALL:        CALL Y$GETLIN ALTRET;
      293     5520                           This routine altreturns if the table is full.
      294     5521              INTERFACE:   None.
      295     5522              DATA:        Uses data in ICM buffer (pointer ICM$).
      296     5523              DESCRIPTION: This routine places the channel number and
      297     5524                           test type code of the requested test in the
      298     5525                           next available entry in the Active Test Table.
      299     5526                           The table can hold a maximum of 8 entries.
      300     5527        */
      301     5528        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:15   
      302     5529    3   Y$GETLIN: PROC ALTRET;
      303     5530
      304     5531    4      DCL ITEM UBIN BYTE;
      305     5532
      306     5533    4      IF Y_TCOUNT < 8
      307     5534    5      THEN DO ITEM = 0 TO 7;
      308     5535
      309     5536    5              IF Y_TENTRY(ITEM) = '0'B
      310     5537    6              THEN DO;
      311     5538    6                      Y_CLTICM.T1.R1.TSTIND = ITEM;
      312     5539    6                      Y_TENTRY.CHN(ITEM) = CHAD;
      313     5540    6                      Y_TENTRY.TYP(ITEM) = Y_CLTICM.T1.TSTYPE;
      314     5541    6                      Y_TCOUNT = Y_TCOUNT + 1;
      315     5542    6                      RETURN;
      316     5543    6                   END;
      317     5544
      318     5545    5           END;
      319     5546
      320     5547    4      Y_FLAGS.NOATE = %G_ON#;
      321     5548    4      Y_CLTICM.T1.IFLAGS.DVBUSY = %G_ON#;
      322     5549    4      ALTRETURN;
      323     5550
      324     5551    4   END Y$GETLIN;
      325     5552
      326     5553        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:16   
      327     5554        /*I*  NAME:        Y$ALLOC
      328     5555              PURPOSE:     Allocate channel or device to COLTS for testing
      329     5556              CALL:        CALL Y$ALLOC;
      330     5557                           Does not altreturn.
      331     5558              INTERFACE:   This routine calls the following:
      332     5559                            M$GCHAN
      333     5560              DATA:        Uses data in ICM buffer (pointer ICM$).
      334     5561              DESCRIPTION: This routine obtains a channel or device for
      335     5562                           testing.
      336     5563        */
      337     5564        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:17   
      338     5565    3   Y$ALLOC: PROC;
      339     5566
      340     5567    4      IF Y_CLTICM.T1.TSTYPE = 18
      341     5568    4      THEN
      342     5569    4         GET_CHAN.V.FLAGS.CONTROLLER = '1'B;
      343     5570    4      ELSE
      344     5571    4         GET_CHAN.V.FLAGS.CONTROLLER = '0'B;
      345     5572
      346     5573    4      GET_CHAN.V.CHANNEL = Y_CLTICM.T1.R1.CHAN;
      347     5574
      348     5575    4      CALL M$GCHAN (GET_CHAN)
      349     5576    5      WHENALTRETURN DO;
      350     5577    5              Y_CLTICM.T1.IFLAGS.DVBUSY = %G_ON#;
      351     5578    5           END;
      352     5579
      353     5580    4      RETURN;
      354     5581
      355     5582    4   END Y$ALLOC;
      356     5583
      357     5584    3   END START_TEST;
      358     5585
      359     5586        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:18   
      360     5587        /*I*  NAME:        EXECUTE_TEST
      361     5588              PURPOSE:     Execute test I/O per ICM
      362     5589              CALL:        CALL EXECUTE_TEST;
      363     5590                           Does not altreturn.
      364     5591              INTERFACE:   This routine calls the following:
      365     5592                            Y$RCCP
      366     5593                            Y$XCCP
      367     5594                            Y$IOSTR
      368     5595                            Y$XDATA
      369     5596                            Y$SWRDS
      370     5597                            Y$BMWUP
      371     5598                            Y$XEDAT
      372     5599                            Y$PRCCP
      373     5600                            Y$PXCCP
      374     5601              DATA:        Uses data in ICM buffer (pointer ICM$).
      375     5602              DESCRIPTION: Interprets ICM function code and calls
      376     5603                           corresponding routine to execute appropriate
      377     5604                           test I/O.
      378     5605        */
      379     5606        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:19   
      380     5607    2   EXECUTE_TEST: PROC;
      381     5608
      382     5609    4      DO CASE (Y_CLTICM.T1.EXTCFG);
      383     5610    4         CASE (%Y#RCCP);
      384     5611    4            CALL Y$RCCP;
      385     5612
      386     5613    4         CASE (%Y#XCCP);
      387     5614    4            CALL Y$XCCP;
      388     5615
      389     5616    4         CASE (%Y#IOSTR);
      390     5617    4            CALL Y$IOSTR;
      391     5618
      392     5619    4         CASE (%Y#XDATA);
      393     5620    4            CALL Y$XDATA;
      394     5621
      395     5622    4         CASE (%Y#SWRDS);
      396     5623    4            CALL Y$SWRDS;
      397     5624
      398     5625    4         CASE (%Y#BMWUP);
      399     5626    4            CALL Y$BMWUP;
      400     5627
      401     5628    4         CASE (%Y#XEDAT);
      402     5629    4            CALL Y$XEDAT;
      403     5630
      404     5631    4         CASE (%Y#PRCCB);
      405     5632    4            Y_FLAGS.CCB = %G_ON#;
      406     5633    4            CALL Y$IOSTR;
      407     5634
      408     5635    4         CASE (%Y#PRCCP);
      409     5636    4            CALL Y$PRCCP;
      410     5637
      411     5638    4         CASE (%Y#PXCCP);
      412     5639    4            CALL Y$PXCCP;
      413     5640
      414     5641    4         CASE (%Y#RLXBF);
      415     5642    4            Y_DBUFSZ(Y_CLTICM.T1.R1.TSTIND) = 0;
      416     5643    4            Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:20   
      417     5644
      418     5645    4         CASE (ELSE);
      419     5646    4            Y_CLTICM.T1.IFLAGS.BADCOM = %G_ON#;
      420     5647    4            Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;
      421     5648    4      END;
      422     5649    3      RETURN;
      423     5650
      424     5651        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:21   
      425     5652        /*I*  NAME:        Y$RCCP
      426     5653              PURPOSE:     Implement receive channel control program (CCP)
      427     5654              CALL:        CALL Y$RCCP;
      428     5655                           Does not altreturn.
      429     5656              INTERFACE:   This routine calls the following:
      430     5657                            Y$WRBLK
      431     5658                            Y$WRLCT
      432     5659              DATA:        Uses data in ICM buffer (pointer ICM$).
      433     5660              DESCRIPTION: This routine moves the data for the receive
      434     5661                           channel control program from the ICM to the
      435     5662                           MLC16 RAM.  It then stores the pointer to the
      436     5663                           CCP into LCT bytes 6 and 7 in the RAM.
      437     5664        */
      438     5665        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:22   
      439     5666    3   Y$RCCP: PROC;
      440     5667
      441     5668    4      DCL RAMAD UBIN WORD;
      442     5669    4      DCL CH UBIN(10) ALIGNED;
      443     5670
      444     5671    4      RAMAD = %Y#RCVRAM + Y_CLTICM.T2.TEXT(9);
      445     5672
      446     5673    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (GOOF);
      447     5674
      448     5675    4      CALL Y$WRLCT ALTRET (GOOF);
      449     5676
      450     5677    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      451     5678
      452     5679    4   GOOF:
      453     5680    4      RETURN;
      454     5681
      455     5682        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:23   
      456     5683        /*I*  NAME:        Y$WRLCT
      457     5684              PURPOSE:     Set pointer to receive CCP
      458     5685              CALL:        CALL Y$WRLCT ALTRET;
      459     5686                           Altreturns if an I/O error occurs.
      460     5687              INTERFACE:   This routine calls the following:
      461     5688                            Y$DOIO
      462     5689              DATA:        Sets up the GT_IO FPT.
      463     5690              DESCRIPTION: Stores the pointer to the receive CCP in
      464     5691                           LCT6 and LCT7 in the MLC16 RAM.
      465     5692        */
      466     5693        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:24   
      467     5694    4   Y$WRLCT: PROC ALTRET;
      468     5695
      469     5696    5      DCL 1 CONX ALIGNED,
      470     5697    5            2 L UBIN BYTE UNAL,
      471     5698    5            2 R UBIN BYTE UNAL;
      472     5699    5      DCL CONW REDEF CONX UBIN WORD;
      473     5700    5      DCL FC UBIN(6) ALIGNED;
      474     5701
      475     5702    5      FC = %GH#IO_OTPLCTBYT;
      476     5703
      477     5704    5      CONW = %Y#RCVRAM;
      478     5705    5      CONX.R = 6;
      479     5706
      480     5707    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);
      481     5708
      482     5709    5      CONW = %Y#RCVRAM;
      483     5710    5      CONX.L = CONX.R;
      484     5711    5      CONX.R = 7;
      485     5712
      486     5713    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);
      487     5714
      488     5715    5      RETURN;
      489     5716
      490     5717    5   ERRIO:
      491     5718    5      ALTRETURN;
      492     5719
      493     5720    5   END Y$WRLCT;
      494     5721
      495     5722    4   END Y$RCCP;
      496     5723
      497     5724        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:25   
      498     5725        /*I*  NAME:        Y$XCCP
      499     5726              PURPOSE:     Implement transmit channel control program
      500     5727              CALL:        CALL Y$XCCP;
      501     5728                           Does not altreturn.
      502     5729              INTERFACE:   This routine calls the following:
      503     5730                            Y$WRBLK
      504     5731                            Y$WXLCT
      505     5732              DATA:        Uses data in ICM buffer (pointer ICM$).
      506     5733              DESCRIPTION: This routine moves the data for the transmit
      507     5734                           CCP from the ICM to the MLC16 RAM.  It then
      508     5735                           stores the pointer to the CCP into LCT bytes
      509     5736                           38 and 39 in the RAM.
      510     5737        */
      511     5738        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:26   
      512     5739    3   Y$XCCP: PROC;
      513     5740
      514     5741    4      DCL RAMAD UBIN WORD;
      515     5742    4      DCL CH UBIN(10) ALIGNED;
      516     5743
      517     5744    4      RAMAD = %Y#XMTRAM + Y_CLTICM.T2.TEXT(9);
      518     5745
      519     5746    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (GOOF);
      520     5747
      521     5748    4      CALL Y$WXLCT ALTRET (GOOF);
      522     5749
      523     5750    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      524     5751
      525     5752    4   GOOF:
      526     5753    4      RETURN;
      527     5754
      528     5755        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:27   
      529     5756        /*I*  NAME:        Y$WXLCT
      530     5757              PURPOSE:     Set pointer to transmit CCP
      531     5758              CALL:        CALL Y$WXLCT ALTRET;
      532     5759                           Altreturns if an I/O error occurs.
      533     5760              INTERFACE:   This routine calls the following:
      534     5761                            Y$DOIO
      535     5762              DATA:        Sets up the GT_IO FPT.
      536     5763              DESCRIPTION: Stores the pointer to the transmit CCP
      537     5764                           in LCT38 and LCT39 in the MLC16 RAM.
      538     5765        */
      539     5766        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:28   
      540     5767    4   Y$WXLCT: PROC ALTRET;
      541     5768
      542     5769    5      DCL 1 CONX ALIGNED,
      543     5770    5            2 L UBIN BYTE UNAL,
      544     5771    5            2 R UBIN BYTE UNAL;
      545     5772    5      DCL CONW REDEF CONX UBIN WORD;
      546     5773    5      DCL FC UBIN(6) ALIGNED;
      547     5774
      548     5775    5      FC = %GH#IO_OTPLCTBYT;
      549     5776
      550     5777    5      CONW = %Y#XMTRAM;
      551     5778    5      CONX.R = 38;
      552     5779
      553     5780    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);
      554     5781
      555     5782    5      CONW = %Y#XMTRAM;
      556     5783    5      CONX.L = CONX.R;
      557     5784    5      CONX.R = 39;
      558     5785
      559     5786    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);
      560     5787
      561     5788    5      RETURN;
      562     5789
      563     5790    5   ERRIO:
      564     5791    5      ALTRETURN;
      565     5792
      566     5793    5   END Y$WXLCT;
      567     5794
      568     5795    4   END Y$XCCP;
      569     5796
      570     5797        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:29   
      571     5798        /*I*  NAME:        Y$IOSTR
      572     5799              PURPOSE:     Execute a string of I/O commands
      573     5800              CALL:        CALL Y$IOSTR;
      574     5801                           Does not altreturn.
      575     5802              INTERFACE:   This routine calls the following:
      576     5803                            Y$XECIO
      577     5804                            M$WAIT
      578     5805                            Y$STATUS
      579     5806                            Y$CKSTAT
      580     5807              DATA:        Uses data in ICM buffer (pointer ICM$).
      581     5808              DESCRIPTION: Sequentially executes a string of I/O
      582     5809                           instructions which it obtains from the
      583     5810                           ICM.
      584     5811        */
      585     5812        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:30   
      586     5813    3   Y$IOSTR: PROC;
      587     5814
      588     5815    4      DCL COUNT UBIN WORD;
      589     5816    4      DCL INX UBIN WORD;
      590     5817    4      DCL NUMIO UBIN WORD;
      591     5818    4      DCL STAT BIT(16) ALIGNED;
      592     5819    4      DCL XCHAN UBIN(10) ALIGNED;
      593     5820    4      DCL RCHAN UBIN(10) ALIGNED;
      594     5821
      595     5822    4      Y_FLAGS.XCH = %G_OFF#;
      596     5823    4      Y_FLAGS.RCH = %G_OFF#;
      597     5824    4      XCHAN = 0;
      598     5825    4      RCHAN = 0;
      599     5826    4      INX = %GT_STRDATOFS#;
      600     5827    4      NUMIO = Y_CLTICM.T1.TSTDAT(3);
      601     5828    4      CALL Y$XECIO ALTRET (PLOP);
      602     5829
      603     5830    4      IF Y_FLAGS.CKRDY
      604     5831    4      THEN
      605     5832    5           DO;
      606     5833    5              Y_FLAGS.CKRDY = %G_OFF#;
      607     5834    5              CALL M$WAIT (WAIT_IO);
      608     5835
      609     5836    5              IF Y_FLAGS.XCH
      610     5837    5              THEN
      611     5838    6                   DO;
      612     5839    6                      Y_FLAGS.XCH = %G_OFF#;
      613     5840    6                      CALL Y$STATUS (XCHAN, STAT) ALTRET (PLOP);
      614     5841    6                      CALL Y$CKSTAT (XCHAN, STAT) ALTRET (PLOP);
      615     5842    6                   END;
      616     5843
      617     5844    5              IF Y_FLAGS.RCH
      618     5845    5              THEN
      619     5846    6                   DO;
      620     5847    6                      Y_FLAGS.RCH = %G_OFF#;
      621     5848    6                      CALL Y$STATUS (RCHAN, STAT) ALTRET (PLOP);
      622     5849    6                      CALL Y$CKSTAT (RCHAN, STAT) ALTRET (PLOP);
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:31   
      623     5850    6                   END;
      624     5851    5           END;
      625     5852
      626     5853    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      627     5854
      628     5855    4   PLOP:
      629     5856    4      Y_FLAGS.CCB = %G_OFF#;
      630     5857    4      RETURN;
      631     5858
      632     5859        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:32   
      633     5860        /*I*  NAME:        Y$XECIO
      634     5861              PURPOSE:     Execute I/O
      635     5862              CALL:        CALL Y$XECIO ALTRET;
      636     5863                           Altreturns if an I/O error occurs.
      637     5864              INTERFACE:   This routine calls the following:
      638     5865                            Y$XIOLD
      639     5866                            Y$DOIO
      640     5867              DATA:        Uses data in ICM buffer (pointer ICM$).
      641     5868              DESCRIPTION: Obtains each I/O command in turn from ICM
      642     5869                           data, determines type of I/O required, and
      643     5870                           then executes that I/O command.
      644     5871        */
      645     5872        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:33   
      646     5873    4   Y$XECIO: PROC ALTRET;
      647     5874
      648     5875    5      DCL ITEM UBIN WORD;
      649     5876    5      DCL CHCON UBIN WORD;
      650     5877    5      DCL 1 CHN ALIGNED,
      651     5878    5            2 CH UBIN(10) UNAL,
      652     5879    5            2 C REDEF CH,
      653     5880    5              3 * UBIN(9) UNAL,
      654     5881    5              3 X BIT(1) UNAL,
      655     5882    5            2 F UBIN(6) UNAL;
      656     5883    5      DCL CHN_CH UBIN(10) ALIGNED;
      657     5884    5      DCL CHN_F UBIN(6) ALIGNED;
      658     5885
      659     5886    6      DO ITEM = 0 TO 2*(NUMIO - 1) BY 2;
      660     5887
      661     5888    6         CHCON = Y_CLTICM.T2.TEXT(INX + ITEM);
      662     5889    6         CHN = Y_CLTICM.T2.ICMTXT(INX + ITEM + 1);
      663     5890    6         CHN_CH = CHN.CH;
      664     5891    6         CHN_F = CHN.F;
      665     5892
      666     5893    6         IF CHN.F = %GH#IO_IOLD
      667     5894    6         THEN
      668     5895    6            CALL Y$XIOLD ALTRET (GOOP);
      669     5896    6         ELSE
      670     5897    7              DO;
      671     5898    7                 CALL Y$DOIO (CHN_CH, CHN_F, CHCON) ALTRET (GOOP);
      672     5899
      673     5900    7                 IF (CHN.F = %GH#IO_INPNXTCCBSTT OR
      674     5901    7                         CHN.F = %GH#IO_INPSTT)
      675     5902    7                 THEN
      676     5903    7                    IF CHN.C.X
      677     5904    7                    THEN
      678     5905    8                         DO;
      679     5906    8                            Y_CLTICM.T2.TEXT(10) = CHCON;
      680     5907    8                            Y_FLAGS.XCH = %G_ON#;
      681     5908    8                            XCHAN = CHN_CH;
      682     5909    8                         END;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:34   
      683     5910    7                    ELSE
      684     5911    8                         DO;
      685     5912    8                            Y_CLTICM.T2.TEXT(9) = CHCON;
      686     5913    8                            Y_FLAGS.RCH = %G_ON#;
      687     5914    8                            RCHAN = CHN_CH;
      688     5915    8                         END;
      689     5916
      690     5917    7              END;
      691     5918
      692     5919    6      END;
      693     5920
      694     5921    5      IF CHN.F = %GH#IO_INPNXTCCBSTT
      695     5922    5      THEN
      696     5923    5         Y_FLAGS.CKRDY = %G_ON#;
      697     5924
      698     5925    5      RETURN;
      699     5926
      700     5927    5   GOOP:
      701     5928    5      ALTRETURN;
      702     5929
      703     5930        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:35   
      704     5931        /*I*  NAME:        Y$XIOLD
      705     5932              PURPOSE:     Execute IOLD's in string I/O
      706     5933              CALL:        CALL Y$XIOLD ALTRET;
      707     5934                           Altreturns if I/O error occurs.
      708     5935              INTERFACE:   This routine calls the following:
      709     5936                            Y$IOLD
      710     5937              DATA:        Uses data in ICM buffer.
      711     5938              DESCRIPTION: Executes IOLD's when they occur in a string
      712     5939                           of I/O commands in the ICM test data.
      713     5940        */
      714     5941        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:36   
      715     5942    5   Y$XIOLD: PROC ALTRET;
      716     5943
      717     5944    6      DCL DP$ PTR;
      718     5945    6      DCL BOFS UBIN WORD;
      719     5946
      720     5947    6      IF (Y_DBUFSZ(Y_CLTICM.T1.R1.TSTIND) ~= 0)
      721     5948    6      THEN
      722     5949    6         IF Y_FLAGS.CCB
      723     5950    7         THEN DO;
      724     5951    7                 DP$ = ADDR(Y_DBUF(Y_CLTICM.T1.R1.TSTIND * 242));
      725     5952    7                 BOFS = Y_CLTICM.T2.TEXT(10);
      726     5953    7              END;
      727     5954    6         ELSE
      728     5955    6            IF CHN.C.X
      729     5956    7            THEN DO;
      730     5957    7                    DP$ = ADDR(Y_DBUF(Y_CLTICM.T1.R1.TSTIND * 242));
      731     5958    7                    BOFS = 0;
      732     5959    7                 END;
      733     5960    7            ELSE DO;
      734     5961    7                    DP$ = ICM$;
      735     5962    7                    BOFS = %GT_ICMDATOFF#;
      736     5963    7                 END;
      737     5964    7      ELSE DO;
      738     5965    7              DP$ = ICM$;
      739     5966    7              BOFS = %GT_ICMDATOFF#;
      740     5967    7           END;
      741     5968
      742     5969    6      CALL Y$IOLD (CHN_CH, DP$, BOFS, CHCON) WHENALTRETURN
      743     5970    7           DO;
      744     5971    7              ALTRETURN;
      745     5972    7           END;
      746     5973
      747     5974    6      RETURN;
      748     5975
      749     5976    6   END Y$XIOLD;
      750     5977
      751     5978    5   END Y$XECIO;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:37   
      752     5979
      753     5980    4   END Y$IOSTR;
      754     5981
      755     5982        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:38   
      756     5983        /*I*  NAME:        Y$XDATA
      757     5984              PURPOSE:     Save transmit data
      758     5985              CALL:        CALL Y$XDATA;
      759     5986                           Does not altreturn.
      760     5987              INTERFACE:   None.
      761     5988              DATA:        Uses data in ICM buffer (pointer ICM$).
      762     5989              DESCRIPTION: Moves transmit data from ICM buffer to
      763     5990                           temporary storage area.
      764     5991        */
      765     5992        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:39   
      766     5993    3   Y$XDATA: PROC;
      767     5994
      768     5995    4      DCL 1 Y_BUFTMP BASED ALIGNED,
      769     5996    4            2 BUFBYT (0:483) UBIN BYTE UNAL;
      770     5997
      771     5998    4      DCL BUF1$ PTR;
      772     5999
      773     6000    4      DCL BUF2$ PTR;
      774     6001
      775     6002    4      Y_DBUFSZ (Y_CLTICM.T1.R1.TSTIND) = 242;
      776     6003
      777     6004    4      BUF1$ = PINCRW (ICM$, %Y#ICMOFS);
      778     6005
      779     6006    4      BUF2$ = ADDR(Y_DBUF (Y_CLTICM.T1.R1.TSTIND * 242) );
      780     6007
      781     6008    4      BUF2$ -> Y_BUFTMP = BUF1$ -> Y_BUFTMP;
      782     6009
      783     6010    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      784     6011
      785     6012    4      RETURN;
      786     6013
      787     6014    4   END Y$XDATA;
      788     6015
      789     6016        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:40   
      790     6017        /*I*  NAME:        Y$SWRDS
      791     6018              PURPOSE:     Execute string of single-word reads
      792     6019              CALL:        CALL Y$SWRDS;
      793     6020                           Does not altreturn.
      794     6021              INTERFACE:   This routine calls the following:
      795     6022                            Y$IOREAD
      796     6023              DATA:        Uses data in ICM buffer (pointer ICM$).
      797     6024              DESCRIPTION: Executes a string of single-word read I/O's
      798     6025                           when they appear in the ICM test data.
      799     6026        */
      800     6027        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:41   
      801     6028    3   Y$SWRDS: PROC;
      802     6029
      803     6030    4      DCL INX UBIN WORD;
      804     6031    4      DCL NUMIO UBIN WORD;
      805     6032
      806     6033    4      INX = %GT_STRDATOFS#;
      807     6034
      808     6035    4      NUMIO = Y_CLTICM.T1.TSTDAT(3);
      809     6036
      810     6037    4      CALL Y$IOREAD ALTRET (BAMO);
      811     6038
      812     6039    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      813     6040
      814     6041    4   BAMO:
      815     6042    4      RETURN;
      816     6043
      817     6044        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:42   
      818     6045        /*I*  NAME:        Y$IOREAD
      819     6046              PURPOSE:     Perform single-word read I/O's
      820     6047              CALL:        CALL Y$IOREAD ALTRET;
      821     6048                           Altreturns if an I/O error occurs.
      822     6049              INTERFACE:   This routine calls the following:
      823     6050                            Y$DOIO
      824     6051              DATA:        Uses data in ICM buffer.
      825     6052              DESCRIPTION: Performs multiple reads of specified MLC16
      826     6053                           RAM bytes as per ICM test data.  The bytes
      827     6054                           read are placed in the corresponding CF data
      828     6055                           words of the ICM (a single byte, left justified,
      829     6056                           in each CF word).  The corresponding ML data
      830     6057                           words in the ICM are zeroed.
      831     6058        */
      832     6059        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:43   
      833     6060    4   Y$IOREAD: PROC ALTRET;
      834     6061
      835     6062    5      DCL ITEM UBIN WORD;
      836     6063    5      DCL CON UBIN WORD;
      837     6064    5      DCL 1 CHN ALIGNED,
      838     6065    5            2 C UBIN(10) UNAL,
      839     6066    5            2 F UBIN(6) UNAL;
      840     6067    5      DCL CHN_C UBIN(10) ALIGNED;
      841     6068    5      DCL CHN_F UBIN(6) ALIGNED;
      842     6069
      843     6070    6      DO ITEM = 0 TO 2*(NUMIO - 1) BY 2;
      844     6071
      845     6072    6         CON = Y_CLTICM.T2.TEXT(INX + ITEM);
      846     6073    6         CHN = Y_CLTICM.T2.ICMTXT(INX + ITEM + 1);
      847     6074    6         CHN_C = CHN.C;
      848     6075    6         CHN_F = CHN.F;
      849     6076
      850     6077    6         CALL Y$DOIO (CHN_C, CHN_F, CON) WHENALTRETURN
      851     6078    7              DO;
      852     6079    7                 ALTRETURN;
      853     6080    7              END;
      854     6081
      855     6082    6         Y_CLTICM.T2.TEXT(INX + ITEM) = 0;
      856     6083    6         Y_CLTICM.T2.TEXT(INX + ITEM + 1) = CON;
      857     6084
      858     6085    6      END;
      859     6086
      860     6087    5      RETURN;
      861     6088
      862     6089    5   END Y$IOREAD;
      863     6090
      864     6091    4   END Y$SWRDS;
      865     6092
      866     6093        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:44   
      867     6094        /*I*  NAME:        Y$BMWUP
      868     6095              PURPOSE:     Block mode write using supplied pointer
      869     6096              CALL:        CALL Y$BMWUP;
      870     6097                           Does not altreturn.
      871     6098              INTERFACE:   This routine calls the following:
      872     6099                            Y$WRBLK
      873     6100              DATA:        Uses data in ICM buffer (pointer ICM$).
      874     6101              DESCRIPTION: This routine moves a block of data from the
      875     6102                           ICM buffer into the MLC16 RAM using the RAM
      876     6103                           address supplied in the ICM.
      877     6104        */
      878     6105        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:45   
      879     6106    3   Y$BMWUP: PROC;
      880     6107
      881     6108    4      DCL RAMAD UBIN WORD;
      882     6109    4      DCL CH UBIN(10) ALIGNED;
      883     6110
      884     6111    4      RAMAD = Y_CLTICM.T2.TEXT(9);
      885     6112
      886     6113    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (SHAZAM);
      887     6114
      888     6115    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      889     6116
      890     6117    4   SHAZAM:
      891     6118    4      RETURN;
      892     6119
      893     6120    4   END Y$BMWUP;
      894     6121
      895     6122        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:46   
      896     6123        /*I*  NAME:        Y$XEDAT
      897     6124              PURPOSE:     Implement transmit CCP (even line)
      898     6125              CALL:        CALL Y$XEDAT;
      899     6126                           Does not altreturn.
      900     6127              INTERFACE:   This routine calls the following:
      901     6128                            Y$XCCP
      902     6129              DATA:        Uses data in ICM buffer (pointer ICM$).
      903     6130              DESCRIPTION: This routine changes the odd line address to
      904     6131                           even line and moves the data for the transmit
      905     6132                           CCP from the ICM to the MLC16 RAM (even line).
      906     6133                           It then stores the pointer to the CCP into
      907     6134                           LCT bytes 38 and 39 in the RAM.
      908     6135        */
      909     6136        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:47   
      910     6137    3   Y$XEDAT: PROC;
      911     6138
      912     6139    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR | %GT_ODDLINBIT#;
      913     6140    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR \ %GT_ODDLINBIT#;
      914     6141
      915     6142    4      CALL Y$XCCP;
      916     6143
      917     6144    4      RETURN;
      918     6145
      919     6146    4   END Y$XEDAT;
      920     6147
      921     6148        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:48   
      922     6149        /*I*  NAME:        Y$PRCCP
      923     6150              PURPOSE:     Implement partial receive CCP
      924     6151              CALL:        CALL Y$PRCCP;
      925     6152                           Does not altreturn.
      926     6153              INTERFACE:   This routine calls the following:
      927     6154                            Y$WRBLK
      928     6155              DATA:        Uses data in ICM buffer (pointer ICM$).
      929     6156              DESCRIPTION: Moves first part of receive CCP data from
      930     6157                           the ICM buffer into the MLC16 RAM.
      931     6158        */
      932     6159        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:49   
      933     6160    3   Y$PRCCP: PROC;
      934     6161
      935     6162    4      DCL RAMAD UBIN WORD;
      936     6163    4      DCL CH UBIN(10) ALIGNED;
      937     6164
      938     6165    4      RAMAD = %Y#RCVRAM;
      939     6166
      940     6167    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (EGAD);
      941     6168
      942     6169    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      943     6170
      944     6171    4   EGAD:
      945     6172    4      RETURN;
      946     6173
      947     6174    4   END Y$PRCCP;
      948     6175
      949     6176        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:50   
      950     6177        /*I*  NAME:        Y$PXCCP;
      951     6178              PURPOSE:     Implement partial transmit CCP
      952     6179              CALL:        CALL Y$PXCCP;
      953     6180                           Does not altreturn.
      954     6181              INTERFACE:   This routine calls the following:
      955     6182                            Y$WRBLK
      956     6183              DATA:        Uses data in ICM buffer (pointer ICM$).
      957     6184              DESCRIPTION: Moves first part of transmit CCP data from
      958     6185                           the ICM buffer into the MLC16 RAM.
      959     6186        */
      960     6187        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:51   
      961     6188    3   Y$PXCCP: PROC;
      962     6189
      963     6190    4      DCL RAMAD UBIN WORD;
      964     6191    4      DCL CH UBIN(10) ALIGNED;
      965     6192
      966     6193    4      RAMAD = %Y#XMTRAM;
      967     6194
      968     6195    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (ZOUNDS);
      969     6196
      970     6197    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      971     6198
      972     6199    4   ZOUNDS:
      973     6200    4      RETURN;
      974     6201
      975     6202    4   END Y$PXCCP;
      976     6203
      977     6204        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:52   
      978     6205        /*I*  NAME:        Y$WRBLK
      979     6206              PURPOSE:     Move ICM data to MLC16 RAM
      980     6207              CALL:        CALL Y$WRBLK (CH, RAMAD) ALTRET;
      981     6208                           Altreturns if an I/O error occurs.
      982     6209              PARAMETERS:  RAMAD is an input parameter containing the RAM
      983     6210                           address.
      984     6211                           CH is an output parameter containing the
      985     6212                           channel address.
      986     6213              INTERFACE:   This routine calls the following:
      987     6214                            Y$BMW
      988     6215                            M$WAIT
      989     6216                            Y$STATUS
      990     6217                            Y$CKSTAT
      991     6218              DATA:        Uses data in ICM buffer.
      992     6219              DESCRIPTION: Moves a block of ICM data using the ICM buffer
      993     6220                           (starting at word 14) into the MLC16 RAM at the
      994     6221                           previously set-up Ram address.
      995     6222        */
      996     6223        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:53   
      997     6224    3   Y$WRBLK: PROC (CH, RAMAD) ALTRET;
      998     6225
      999     6226    4      DCL RAMAD UBIN WORD;
     1000     6227    4      DCL STAT BIT(16) ALIGNED;
     1001     6228    4      DCL CH UBIN(10) ALIGNED;
     1002     6229
     1003     6230    4      CALL Y$BMW (CH, RAMAD) ALTRET (BADUN);
     1004     6231
     1005     6232    4      CALL M$WAIT (WAIT_IO);
     1006     6233
     1007     6234    4      CALL Y$STATUS (CH, STAT) ALTRET (BADUN);
     1008     6235
     1009     6236    4      CALL Y$CKSTAT (CH, STAT) ALTRET (BADUN);
     1010     6237
     1011     6238    4   BADUN:
     1012     6239    4      RETURN;
     1013     6240
     1014     6241    4   END Y$WRBLK;
     1015     6242
     1016     6243        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:54   
     1017     6244        /*I*  NAME:        Y$BMW
     1018     6245              PURPOSE:     Move ICM data to MLC16 RAM
     1019     6246              CALL:        CALL Y$BMW (CH, RAD) ALTRET;
     1020     6247                           Altreturns if an I/O error occurs.
     1021     6248              PARAMETERS:  RAD is an input parameter containing the RAM
     1022     6249                           address.
     1023     6250                           CH is an output parameter containing the
     1024     6251                           channel address.
     1025     6252              INTERFACE:   This routine calls the following:
     1026     6253                            Y$IOLD
     1027     6254                            Y$DOIO
     1028     6255              DATA:        Uses data in ICM buffer.
     1029     6256              DESCRIPTION: Moves a block of ICM data using the ICM buffer
     1030     6257                           (starting at word 14) into the MLC16 RAM at the
     1031     6258                           previously set-up Ram address.
     1032     6259        */
     1033     6260        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:55   
     1034     6261    3   Y$BMW: PROC (CH, RAD) ALTRET;
     1035     6262
     1036     6263    4      DCL RAD UBIN WORD;
     1037     6264    4      DCL CH UBIN(10) ALIGNED;
     1038     6265    4      DCL FC UBIN(6) ALIGNED;
     1039     6266    4      DCL STAT BIT(16) ALIGNED;
     1040     6267    4      DCL BOFS UBIN WORD;
     1041     6268    4      DCL BSIZ UBIN WORD;
     1042     6269
     1043     6270    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR | %GT_OTPCHNBIT#;
     1044     6271    4      CH = Y_CLTICM.T1.R1.CHNLNR.CH;
     1045     6272    4      BOFS = %GT_ICMDATOFF#;
     1046     6273    4      BSIZ = Y_CLTICM.T1.TSTDAT(1) * 2;
     1047     6274    4      CALL Y$IOLD (CH, ICM$, BOFS, BSIZ) ALTRET (ZONK);
     1048     6275
     1049     6276    4      FC = %GH#IO_OTPCCBCTR;
     1050     6277    4      CALL Y$DOIO (CH, FC, RAD) ALTRET (ZONK);
     1051     6278
     1052     6279    4      FC = %GH#IO_OTPCHNCTR;
     1053     6280    4      STAT = %GT_STTBLMWRT#;
     1054     6281    4      CALL Y$DOIO (CH, FC, STAT) ALTRET (ZONK);
     1055     6282
     1056     6283    4      FC = %GH#IO_INPNXTCCBSTT;
     1057     6284    4      STAT = '0'B;
     1058     6285    4      CALL Y$DOIO (CH, FC, STAT) ALTRET (ZONK);
     1059     6286
     1060     6287    4      RETURN;
     1061     6288
     1062     6289    4   ZONK:
     1063     6290    4      ALTRETURN;
     1064     6291
     1065     6292    4   END Y$BMW;
     1066     6293
     1067     6294        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:56   
     1068     6295        /*I*  NAME:        Y$STATUS
     1069     6296              PURPOSE:     Obtain and save status word
     1070     6297              CALL:        CALL Y$STATUS (CH, STAT) ALTRET;
     1071     6298                           Altreturns if an I/O error occurs.
     1072     6299              PARAMETERS:  CH is an INPUT parameter containing the
     1073     6300                           channel address.
     1074     6301                           STAT is an output parameter containing the
     1075     6302                           status.
     1076     6303              INTERFACE:   This routine calls the following:
     1077     6304                            Y$DOIO
     1078     6305                            Y$SAVSTT
     1079     6306              DATA:        Saves status in ICM buffer (pointer ICM$).
     1080     6307              DESCRIPTION: Executes I/O to obtain status word per
     1081     6308                           given channel address and saves status
     1082     6309                           in reply ICM.
     1083     6310        */
     1084     6311        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:57   
     1085     6312    3   Y$STATUS: PROC (CH, STAT) ALTRET;
     1086     6313
     1087     6314    4      DCL STAT BIT(16) ALIGNED;
     1088     6315    4      DCL 1 CH ALIGNED,
     1089     6316    4            2 M UBIN(9) UNAL,
     1090     6317    4            2 X BIT(1) UNAL;
     1091     6318    4      DCL FC UBIN(6) ALIGNED;
     1092     6319
     1093     6320    4      STAT = '0'B;
     1094     6321    4      FC = %GH#IO_INPCCBSTT;
     1095     6322
     1096     6323    4      CALL Y$DOIO (CH, FC, STAT) WHENALTRETURN
     1097     6324    5           DO;
     1098     6325    5              CALL Y$SAVSTT;
     1099     6326    5              ALTRETURN;
     1100     6327    5           END;
     1101     6328
     1102     6329    4      CALL Y$SAVSTT;
     1103     6330
     1104     6331    4      RETURN;
     1105     6332
     1106     6333        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:58   
     1107     6334        /*I*  NAME:        Y$SAVSTT
     1108     6335              PURPOSE:     Save status word
     1109     6336              CALL:        CALL Y$SAVSTT;
     1110     6337                           Does not altreturn.
     1111     6338              INTERFACE:   None.
     1112     6339              DATA:        ICM buffer (pointer ICM$).
     1113     6340              DESCRIPTION: Determines location in ICM buffer
     1114     6341                           to save status, and saves it there.
     1115     6342                           An output status is saved in word 13 of
     1116     6343                           the ICM.  An input status is saved in
     1117     6344                           word 12.
     1118     6345        */
     1119     6346        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:59   
     1120     6347    4   Y$SAVSTT: PROC;
     1121     6348
     1122     6349    5      IF CH.X
     1123     6350    5      THEN
     1124     6351    5         Y_CLTICM.T2.ICMTXT(10) = STAT;
     1125     6352    5      ELSE
     1126     6353    5         Y_CLTICM.T2.ICMTXT(9) = STAT;
     1127     6354
     1128     6355    5      RETURN;
     1129     6356
     1130     6357    5   END Y$SAVSTT;
     1131     6358
     1132     6359    4   END Y$STATUS;
     1133     6360
     1134     6361        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:60   
     1135     6362        /*I*  NAME:        Y$CKSTAT
     1136     6363              PURPOSE:     Check for valid status
     1137     6364              CALL:        CALL Y$CKSTAT (CH, STAT) ALTRET;
     1138     6365                           Altreturns if an I/O error occurs or
     1139     6366                           if timer runout occurs before a valid
     1140     6367                           status.
     1141     6368              PARAMETERS:  CH is an INPUT parameter containing the
     1142     6369                           pertinent channel address.
     1143     6370                           STAT is an input and output parameter
     1144     6371                           containing the status.
     1145     6372              INTERFACE:   This routine calls the following:
     1146     6373                            M$WAIT
     1147     6374                            Y$STATUS
     1148     6375                            Y$IOER
     1149     6376              DATA:        ICM buffer (pointer ICM$).
     1150     6377              DESCRIPTION: Checks status word in the FPT for device
     1151     6378                           ready.  If status is not ready, routine
     1152     6379                           then waits a short time and issues a new
     1153     6380                           status request.  This status is then
     1154     6381                           checked for ready.  Cycle continues until
     1155     6382                           either a valid status is obtained or a
     1156     6383                           timeout occurs.
     1157     6384        */
     1158     6385        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:61   
     1159     6386    3   Y$CKSTAT: PROC (CH, STAT) ALTRET;
     1160     6387
     1161     6388    4      DCL ITEM UBIN WORD;
     1162     6389    4      DCL STAT BIT(16) ALIGNED;
     1163     6390    4      DCL CH UBIN(10) ALIGNED;
     1164     6391    4      DCL FC UBIN(6) ALIGNED;
     1165     6392
     1166     6393    5      DO ITEM = 1 TO 9;
     1167     6394
     1168     6395    5         IF (STAT & %GT_STATUSCMP#)
     1169     6396    5         THEN
     1170     6397    5            RETURN;
     1171     6398    5         ELSE
     1172     6399    6              DO;
     1173     6400    6                 CALL M$WAIT (WAIT_IO);
     1174     6401    6                 CALL Y$STATUS (CH, STAT) ALTRET (BOP);
     1175     6402    6              END;
     1176     6403
     1177     6404    5      END;
     1178     6405    4      RETURN;
     1179     6406
     1180     6407    4   BOP:
     1181     6408    4      ALTRETURN;
     1182     6409
     1183     6410    4   END Y$CKSTAT;
     1184     6411
     1185     6412        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:62   
     1186     6413        /*I*  NAME:        Y$IOLD
     1187     6414              PURPOSE:     Perform IOLD using ICM data
     1188     6415              CALL:        CALL Y$IOLD (CH, DP$, BOFS, BSIZ) ALTRET;
     1189     6416                           Altreturns if an I/O error occurs
     1190     6417              PARAMETERS:  CH is an input parameter containing the
     1191     6418                           channel number.
     1192     6419                           DP$ is an input parameter containing a
     1193     6420                           pointer to the source data buffer.
     1194     6421                           BOFS is an input parameter containing
     1195     6422                           the byte offset value to the data buffer.
     1196     6423                           BSIZ is an input parameter containing
     1197     6424                           the size (bytes) of the data.
     1198     6425              INTERFACE:   This routine calls the following:
     1199     6426                            GHH$IOLD
     1200     6427                            Y$IOER
     1201     6428              DATA:        Sets up GT_IOLD FPT and uses ICM data.
     1202     6429              DESCRIPTION: Places channel, function code, size(bytes),
     1203     6430                           and buffer pointer (points to ICM word 14)
     1204     6431                           into GT_IOLD FPT.  Then it executes IOLD
     1205     6432                           using the GHH$IOLD routine.
     1206     6433        */
     1207     6434        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:63   
     1208     6435    3   Y$IOLD: PROC (CH, DP$, BOFS, BSIZ) ALTRET;
     1209     6436
     1210     6437    4      DCL CH UBIN(10) ALIGNED;
     1211     6438    4      DCL FC UBIN(6) ALIGNED;
     1212     6439    4      DCL DP$ PTR;
     1213     6440    4      DCL BOFS UBIN WORD;
     1214     6441    4      DCL BSIZ UBIN WORD;
     1215     6442
     1216     6443    4      FC = GT_IOLD.FNC;
     1217     6444
     1218     6445    4      GT_IOLD.CHN = CH;
     1219     6446    4      GT_IOLD.BYTX = BOFS;
     1220     6447    4      GT_IOLD.BUFSIZE = BSIZ;
     1221     6448    4      GT_IOLD.BUF$ = DP$;
     1222     6449
     1223     6450    4      CALL GHH$IOLD (GT_IOLD) WHENALTRETURN
     1224     6451    5           DO;
     1225     6452    5              Y_CLTICM.T1.IFLAGS.IONAK = %G_ON#;
     1226     6453    5              CALL Y$IOER (FC);
     1227     6454    5              ALTRETURN;
     1228     6455    5           END;
     1229     6456
     1230     6457    4      RETURN;
     1231     6458
     1232     6459    4   END Y$IOLD;
     1233     6460
     1234     6461        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:64   
     1235     6462        /*I*  NAME:        Y$DOIO
     1236     6463              PURPOSE:     Perform IO using ICM data
     1237     6464              CALL:        CALL Y$DOIO (CH, FC, CON) ALTRET;
     1238     6465                           Altreturns if an I/O error occurs.
     1239     6466              PARAMETERS:  CH is an input parameter containing the
     1240     6467                           channel number.
     1241     6468                           FC is an input parameter containing the
     1242     6469                           function code.
     1243     6470                           CON is an input or output parameter
     1244     6471                           containing control information.
     1245     6472              INTERFACE:   This routine calls the following:
     1246     6473                            GHH$IO_IN
     1247     6474                            Y$IOER
     1248     6475              DATA:        Sets up GT_IO FPT and uses ICM data.
     1249     6476              DESCRIPTION: Places channel address, function code, and
     1250     6477                           control word into the GT_IO FPT.  Then it
     1251     6478                           executes the I/O using the GHH$IO_IN
     1252     6479                           routine.
     1253     6480        */
     1254     6481        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:65   
     1255     6482    3   Y$DOIO: PROC (CH, FC, CON) ALTRET;
     1256     6483
     1257     6484    4      DCL CH UBIN(10) ALIGNED;
     1258     6485    4      DCL FC UBIN(6) ALIGNED;
     1259     6486    4      DCL CON UBIN WORD;
     1260     6487
     1261     6488    4      GT_IO.CAS.FNC = FC;
     1262     6489    4      GT_IO.RANGE = CON;
     1263     6490    4      GT_IO.CAS.CHN = CH;
     1264     6491
     1265     6492    4      CALL GHH$IO_IN (GT_IO) WHENALTRETURN
     1266     6493    5           DO;
     1267     6494    5              Y_CLTICM.T1.IFLAGS.IONAK = %G_ON#;
     1268     6495    5              CALL Y$IOER (FC);
     1269     6496    5              ALTRETURN;
     1270     6497    5           END;
     1271     6498
     1272     6499    4      CON = GT_IO.RANGE;
     1273     6500
     1274     6501    4      RETURN;
     1275     6502
     1276     6503    4   END Y$DOIO;
     1277     6504
     1278     6505        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:66   
     1279     6506        /*I*  NAME:        Y$IOER
     1280     6507              PURPOSE:     Process common error data on bad IO returns
     1281     6508              CALL:        CALL Y$IOER (FC);
     1282     6509                           Does not altreturn.
     1283     6510              PARAMETERS:  FC is an input parameter containing the
     1284     6511                           function code.
     1285     6512              INTERFACE:   None.
     1286     6513              DATA:        Uses data in ICM buffer (pointer ICM$).
     1287     6514              DESCRIPTION: Places common IO error data in ICM.
     1288     6515        */
     1289     6516        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:67   
     1290     6517    3   Y$IOER: PROC (FC);
     1291     6518
     1292     6519    4      DCL FC UBIN(6) ALIGNED;
     1293     6520
     1294     6521    4      Y_CLTICM.T1.TSTDAT(0) = FC;
     1295     6522    4      Y_CLTICM.T1.R1.ICMRPY = %Y#NORESP;
     1296     6523
     1297     6524    4      RETURN;
     1298     6525
     1299     6526    4   END Y$IOER;
     1300     6527
     1301     6528    3   END EXECUTE_TEST;
     1302     6529
     1303     6530        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:68   
     1304     6531        /*I*  NAME:        TERMINATE_TEST
     1305     6532              PURPOSE:     Terminate specified FEP COLTS test
     1306     6533              CALL:        CALL TERMINATE_TEST;
     1307     6534                           Does not altreturn.
     1308     6535              INTERFACE:   This routine calls the following:
     1309     6536                            Y$TRMTST
     1310     6537              DATA:        Uses data in ICM buffer (pointer ICM$).
     1311     6538              DESCRIPTION: Extracts the channel number and test
     1312     6539                           number from the ICM data and then calls
     1313     6540                           Y$TRMTST to terminate this test.
     1314     6541                           Places proper reply code in ICM data.
     1315     6542        */
     1316     6543        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:69   
     1317     6544    2   TERMINATE_TEST: PROC ALTRET;
     1318     6545
     1319     6546    3      DCL TNUM UBIN BYTE ALIGNED;
     1320     6547    3      DCL CHAD BIT(16) ALIGNED;
     1321     6548
     1322     6549    3      TNUM = Y_CLTICM.T1.R1.TSTIND;
     1323     6550    3      CHAD = Y_CLTICM.T1.R1.CHNLNR;
     1324     6551
     1325     6552    3      CALL Y$TRMTST (TNUM,CHAD);
     1326     6553
     1327     6554    3      IF Y_FLAGS.NOSUCHTST = %G_OFF#
     1328     6555    3      THEN
     1329     6556    3         Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
     1330     6557
     1331     6558    4      ELSE DO;
     1332     6559    4              Y_CLTICM.T1.IFLAGS.NOTEST = %G_ON#;
     1333     6560    4              Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;
     1334     6561    4              Y_FLAGS.NOSUCHTST = %G_OFF#;
     1335     6562    4           END;
     1336     6563
     1337     6564    3      RETURN;
     1338     6565
     1339     6566    3   END TERMINATE_TEST;
     1340     6567
     1341     6568    2   END PROCESS_ICM;
     1342     6569
     1343     6570        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:70   
     1344     6571        /*I*  NAME:        WRAP_UP
     1345     6572              PURPOSE:     Terminate all FEP COLTS tests
     1346     6573              CALL:        CALL WRAP_UP;
     1347     6574                           Does not altreturn.
     1348     6575              INTERFACE:   This routine calls the following:
     1349     6576                            Y$TRMTST
     1350     6577              DATA:        Uses data in Active Test Table.
     1351     6578              DESCRIPTION: This routine successively extracts channel
     1352     6579                           number and test number information on each
     1353     6580                           active test from the Active Test Table.
     1354     6581                           It successively calls Y$TRMTST to terminate
     1355     6582                           each active test.
     1356     6583        */
     1357     6584        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:71   
     1358     6585    1   WRAP_UP: PROC ALTRET;
     1359     6586
     1360     6587    2      DCL TNUM UBIN BYTE ALIGNED;
     1361     6588    2      DCL CHAD BIT(16) ALIGNED;
     1362     6589
     1363     6590    2      IF Y_TCOUNT > 0
     1364     6591    3      THEN DO TNUM = 0 TO 7;
     1365     6592
     1366     6593    3              IF Y_TENTRY (TNUM)
     1367     6594    4              THEN DO;
     1368     6595    4                      CHAD = Y_TENTRY.CHN(TNUM);
     1369     6596    4                      CALL Y$TRMTST (TNUM,CHAD);
     1370     6597    4                      IF Y_TCOUNT = 0 THEN RETURN;
     1371     6598    4                   END;
     1372     6599
     1373     6600    3           END;
     1374     6601
     1375     6602    2      RETURN;
     1376     6603
     1377     6604    2   END WRAP_UP;
     1378     6605
     1379     6606        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:72   
     1380     6607        /*I*  NAME:        Y$TRMTST
     1381     6608              PURPOSE:     Terminate specified FEP COLTS test
     1382     6609              CALL:        CALL Y$TRMTST (TNUM, CHAD);
     1383     6610                           Does not altreturn.
     1384     6611              PARAMETERS:  TNUM is an INPUT parameter containing the index
     1385     6612                           number to the test's entry in the Active Test
     1386     6613                           Table.
     1387     6614                           CHAD is an INPUT parameter containing the channel
     1388     6615                           address for the test.
     1389     6616              INTERFACE:   This routine calls the following:
     1390     6617                            M$RCHAN
     1391     6618              DATA:        Operates on Active Test Table.
     1392     6619              DESCRIPTION: This routine clears the entry for the specified
     1393     6620                           test in the Active Test Table, clears the contents
     1394     6621                           of the associated temporary storage area, and
     1395     6622                           releases the MLC16 line(s) from COLTS control.
     1396     6623                           The routine also sets a flag if there is an
     1397     6624                           altreturn from M$RCHAN.
     1398     6625        */
     1399     6626        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:73   
     1400     6627    1   Y$TRMTST: PROC (TNUM,CHAD) ALTRET;
     1401     6628
     1402     6629    2      DCL TNUM UBIN BYTE ALIGNED;
     1403     6630    2      DCL ITEM UBIN WORD;
     1404     6631    2      DCL CHAD UBIN(16) ALIGNED;
     1405     6632
     1406     6633    2      IF Y_TENTRY.TYP(TNUM) = 18
     1407     6634    2      THEN
     1408     6635    2         RELEASE_CHAN.V.CONTROLLER = '1'B;
     1409     6636    2      ELSE
     1410     6637    2         RELEASE_CHAN.V.CONTROLLER = '0'B;
     1411     6638
     1412     6639    2      Y_TENTRY(TNUM) = '0'B;
     1413     6640
     1414     6641    2      Y_DBUFSZ(TNUM) = 0;
     1415     6642
     1416     6643    3      DO ITEM = 0 TO 241;
     1417     6644    3         Y_DBUF(TNUM * 242 + ITEM) = 0;
     1418     6645    3      END;
     1419     6646
     1420     6647    2      Y_TCOUNT = Y_TCOUNT - 1;
     1421     6648
     1422     6649    2      Y_FLAGS.NOSUCHTST = %G_OFF#;
     1423     6650
     1424     6651    2      RELEASE_CHAN.V.CHANNEL = CHAD;
     1425     6652
     1426     6653    2      CALL M$RCHAN (RELEASE_CHAN)
     1427     6654    3      WHENALTRETURN DO;
     1428     6655    3              Y_FLAGS.NOSUCHTST = %G_ON#;
     1429     6656    3           END;
     1430     6657
     1431     6658    2      RETURN;
     1432     6659
     1433     6660    2   END Y$TRMTST;
     1434     6661
     1435     6662    1   END GTC$MLC16_HNDLR;
     1436     6663
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:74   
     1437     6664        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:75   

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:76   
--  Include file information  --

   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GT_CMN_E.:E05TOU  is referenced.
   GT_MACROS_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GTC$MLC16_HNDLR.

   Procedure GTC$MLC16_HNDLR requires 2048 words for executable code.
   Procedure GTC$MLC16_HNDLR requires 53 words of local(AUTO) storage.

    No errors detected in file GTC$MLC16_HNDLR.:E05TSI    .

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:77   

 Object Unit name= GTC$MLC16_HNDLR                            File name= GTC$MLC16_HNDLR.:E05TOU
 UTS= JUL 29 '97 22:12:04.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none  2374    946  GTC$MLC16_HNDLR
    1   DCB   even  none     0      0  M$COLTN
    2  RoData even  UTS      4      4  GTC$MLC16_HNDLR
    3   Proc  even  none  2048    800  GTC$MLC16_HNDLR
    4  RoData even  none     5      5  GTC$MLC16_HNDLR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Main       0  GTC$MLC16_HNDLR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$IOLD
 yes     yes           Std       1 GHH$IO_IN
                       nStd      0 X6A_MAUTO
                       nStd      0 X6A_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$COLTN                          r    G$ROS$
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:78   


        1        1        /*M* GTC$MLC16_HNDLR     Front End T&D COLTS Message and I/O Handler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        GTC$MLC16_HNDLR
       12       12              AUTHOR:      R. D. Vogler
       13       13              PURPOSE:     Colts Message Handler and I/O Handler
       14       14              DESCRIPTION: This module handles Colts intercomputer messages
       15       15                           (ICM's) between the FEP and the Host, and also
       16       16                           performs necessary I/O on behalf of the Colts
       17       17                           test pages.
       18       18              REFERENCE:   CP-6 Release C01
       19       19              LAST UPDATE: 04/10/85
       20       20        */
       21       21        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:79   
       22       22        /*F*  NAME:        GTC$MLC16_HNDLR
       23       23              PURPOSE:     Handle COLTS ICM's and test I/O's
       24       24              DESCRIPTION: This procedure is entered as a consequence of
       25       25                           downline-loading this module into the front-end
       26       26                           processor(FEP).  This routine opens a path to
       27       27                           host COLTS, processes incoming COLTS messages
       28       28                           (ICM's), performs specified test I/O's, and sends
       29       29                           the test results back to host COLTS.  As the
       30       30                           result of an ALTRET on either M$READ or M$WRITE,
       31       31                           this procedure does an orderly cleanup and
       32       32                           exits.
       33       33        */
       34       34        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:80   
       35       35        /*D*  NAME:        GTC$MLC16_HNDLR
       36       36              INTERFACE:   This routine calls the following:
       37       37                            M$OPEN
       38       38                            M$READ
       39       39                            PROCESS_ICM
       40       40                            M$WRITE
       41       41                            WRAP_UP
       42       42                            M$CLOSE
       43       43                            M$EXIT
       44       44        */
       45       45        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:81   
       46       46        GTC$MLC16_HNDLR: PROC MAIN;

     46   3 000000  D380 0000 0000  xent GTC$MLC16_HNDLR LNJ,B5   X6A_MAUTO
          3 000003       0035 0000                       DC       53,0

       47       47
       48       48        /*   INCLUDE FILES   */
       49       49        %INCLUDE GT_MACROS_M;
       50      132        %INCLUDE GT_CMN_E;
       51      238        %INCLUDE GH_IOFNC_E;
       52      307        %INCLUDE GH_HARDWARE_M;
       53      405        %INCLUDE LCP_6;
       54     4684        %INCLUDE G_JIT_M;
       55     4949        %G$JIT_E;
       56     5011
       57     5012        /*   MACROS   */
       58     5013        %Y_CLTICM (STCLASS = "BASED (ICM$)");
       59     5058        %GH_IO (FPTN  = GT_IO, STCLASS =  STATIC);
       60     5074        %GH_IOLD (FPTN = GT_IOLD, STCLASS = STATIC);
       61     5089        %VLR_GCHAN (FPTN = CHAN_DATA);
       62     5108
       63     5109        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:82   
       64     5110        /*   FPT'S   */
       65     5111        %FPT_OPEN  (FPTN    = OPEN_COLTS,
       66     5112                    DCB     = M$COLTN,
       67     5113                    ORG     = CONSEC,
       68     5114                    RES     ='HO');
       69     5142
       70     5143        %FPT_READ  (FPTN    = GET_ICM,
       71     5144                    DCB     = M$COLTN,
       72     5145                    BUF     = ICMDATA,
       73     5146                    WAIT    = YES);
       74     5172
       75     5173        %FPT_WRITE (FPTN    = SEND_ICM,
       76     5174                    BP      = YES,
       77     5175                    DCB     = M$COLTN,
       78     5176                    BUF     = ICMDATA);
       79     5200
       80     5201        %FPT_WAIT  (FPTN    = WAIT_IO,
       81     5202                    UNITS   = SECS_DELAY);
       82     5226
       83     5227        %FPT_CLOSE (FPTN    = END_COLTS,
       84     5228                    DCB     = M$COLTN);
       85     5248
       86     5249        %FPT_GCHAN (FPTN       = GET_CHAN,
       87     5250                    GCHAN      = CHAN_DATA,
       88     5251                    DIAG       = YES);
       89     5274
       90     5275        %FPT_RCHAN (FPTN       = RELEASE_CHAN);
       91     5296
       92     5297        %FPT_SPRIV (FPTN = ACTIVATE_PRIV,
       93     5298                    AUTH = YES,
       94     5299                    PRIV = MSYS_PRIV);
       95     5322
       96     5323        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:83   
       97     5324        /*   DCL'S   */
       98     5325    1      DCL 1 Y_FLAGS STATIC ALIGNED,
       99     5326    1            2 NOSUCHTST BIT(1) UNAL INIT('0'B),
      100     5327    1            2 CKRDY BIT(1) UNAL INIT('0'B),
      101     5328    1            2 NOATE BIT(1) UNAL INIT('0'B),
      102     5329    1            2 RCH BIT(1) UNAL INIT('0'B),
      103     5330    1            2 XCH BIT(1) UNAL INIT('0'B),
      104     5331    1            2 CCB BIT(1) UNAL INIT('0'B),
      105     5332    1            2 * BIT(2) UNAL INIT('0'B);
      106     5333
      107     5334    1      DCL Y_TCOUNT UBIN BYTE STATIC UNAL INIT(0);
      108     5335
      109     5336    1      DCL 1 Y_TENTRY(0:7) STATIC ALIGNED,
      110     5337    1            2 CHN,
      111     5338    1              3 C BIT(10) UNAL INIT('0'B*8),
      112     5339    1              3 F BIT(6) UNAL INIT('0'B*8),
      113     5340    1            2 RFU UBIN BYTE UNAL INIT(0*8),
      114     5341    1            2 TYP UBIN BYTE UNAL INIT(0*8);
      115     5342
      116     5343    1      DCL ICM$ PTR STATIC INIT(ADDR(NIL));
      117     5344
      118     5345    1      DCL SECS_DELAY UBIN(16) STATIC INIT(1);
      119     5346
      120     5347    1      DCL M$COLTN DCB;
      121     5348
      122     5349    1      DCL GHH$IOLD ENTRY(1) ALTRET ;
      123     5350    1      DCL GHH$IO_IN ENTRY(1) ALTRET ;
      124     5351
      125     5352    1      DCL Y_DBUFSZ(0:7) UBIN WORD STATIC INIT(0*8);
      126     5353    1      DCL Y_DBUF(0:1935) UBIN WORD STATIC ALIGNED INIT(0*1936);
      127     5354
      128     5355    1      DCL ICMDATA CHAR(512) STATIC ALIGNED INIT(' ');
      129     5356
      130     5357    1      DCL MSYS_PRIV BIT (32) STATIC ALIGNED INIT('0'B);
      131     5358
      132     5359        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:84   
      133     5360
      134     5361        /*   THIS IS THE TOP-LEVEL CODING FOR THIS PROCEDURE   */
      135     5362
      136     5363        /* Note that it does M$READ(with WAIT) and M$WRITE(no WAIT) */
      137     5364
      138     5365    1      MSYS_PRIV = %G_PR_TND#;

   5365   3 000005  8C80 0000 0000  02                   LDI      0
          3 000008  8D00 0000 0944  00                   SDI      MSYS_PRIV

      139     5366    1      CALL M$SPRIV (ACTIVATE_PRIV) ALTRET (SOLONG);

   5366   3 00000B  BB80 0000 008D  00                   LAB,B3   ACTIVATE_PRIV
          3 00000E  B870 0CD0                            LDR,R3   3280,IMO
          3 000010  0001                                 MCL
          3 000011       003E                            DC       s:5386,PREL

      140     5367    1      CALL M$SYS ALTRET (SOLONG);

   5367   3 000012  3C43                                 LDV,R3   67
          3 000013  0001                                 MCL
          3 000014       003B                            DC       s:5386,PREL

      141     5368
      142     5369    1      CALL M$OPEN (OPEN_COLTS) ALTRET (SOLONG);

   5369   3 000015  BB80 0000 000F  00                   LAB,B3   OPEN_COLTS
          3 000018  B870 3540                            LDR,R3   13632,IMO
          3 00001A  0001                                 MCL
          3 00001B       0034                            DC       s:5386,PREL

      143     5370
      144     5371    1      ICM$ = ADDR (ICMDATA);

   5371   3 00001C  EB80 0000 0844  00                   LAB,B6   ICMDATA
          3 00001F  EF80 0000 00A9  00                   STB,B6   ICM$

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:85   
      145     5372
      146     5373    2      DO WHILE (%G_YES#);

      147     5374    2         VBOUND(GET_ICM.BUF_) = 511;

   5374   3 000022  E870 01FF                            LDR,R6   511,IMO
          3 000024  EF00 0000 0044  00                   STR,R6   GET_ICM+6

      148     5375    2         CALL M$READ (GET_ICM) ALTRET (BEGONE);

   5375   3 000027  BB80 0000 003E  00                   LAB,B3   GET_ICM
          3 00002A  B870 1542                            LDR,R3   5442,IMO
          3 00002C  0001                                 MCL
          3 00002D       0018                            DC       s:5382,PREL

      149     5376    2         CALL PROCESS_ICM;

   5376   3 00002E  E3C0 0026                            LNJ,B6   s:0,PREL
          3 000030       0001                            DC       s:5377,PREL

      150     5377    2         VBOUND(SEND_ICM.BUF_) = 2 * Y_CLTICM.T1.R1.ICMWDS - 1;

   5377   3 000031  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000034  E846 0003                            LDR,R6   3,B6
          3 000036  6001                                 SOL,R6   1
          3 000037  E570 01FE                            AND,R6   510,IMO
          3 000039  6EFF                                 ADV,R6   -1
          3 00003A  EF00 0000 0056  00                   STR,R6   SEND_ICM+6

      151     5378    2         CALL M$WRITE (SEND_ICM) ALTRET (BEGONE);

   5378   3 00003D  BB80 0000 0050  00                   LAB,B3   SEND_ICM
          3 000040  B870 1543                            LDR,R3   5443,IMO
          3 000042  0001                                 MCL
          3 000043       0002                            DC       s:5382,PREL

      152     5379    2      END;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:86   

   5379   3 000044  0FDE                                 B        s:5374,SPREL

      153     5380
      154     5381    1   BEGONE:
      155     5382    1      CALL WRAP_UP;

   5382   3 000045  E3C0 0716            BEGONE          LNJ,B6   s:0,PREL
          3 000047       0001                            DC       s:5383,PREL

      156     5383    1      CALL M$CLOSE (END_COLTS);

   5383   3 000048  BB80 0000 006C  00                   LAB,B3   END_COLTS
          3 00004B  B870 1541                            LDR,R3   5441,IMO
          3 00004D  0001                                 MCL
          3 00004E       0000                            DC       s:5383+6,PREL

      157     5384
      158     5385    1   SOLONG:
      159     5386    1      CALL M$EXIT;

   5386   3 00004F  B870 0080            SOLONG          LDR,R3   128,IMO
          3 000051  0001                                 MCL
          3 000052       0000                            DC       s:5386+3,PREL
          3 000053  0F81 07A9                            B        s:6662,PREL

      160     5387
      161     5388        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:87   
      162     5389        /*I*  NAME:        PROCESS_ICM
      163     5390              PURPOSE:     Process all COLTS ICM's
      164     5391              CALL:        CALL PROCESS_ICM;
      165     5392                           Never altreturns.
      166     5393              INTERFACE:   This routine calls the following:
      167     5394                            Y$CKSUM
      168     5395                            START_TEST
      169     5396                            EXECUTE_TEST
      170     5397                            TERMINATE_TEST
      171     5398              DATA:        This routine analyzes and modifies the data
      172     5399                           in the ICM buffer using the pointer ICM$.
      173     5400              DESCRIPTION: This procedure validates the checksum of the
      174     5401                           incoming ICM data, decodes and executes the
      175     5402                           ICM command, collects the test results and
      176     5403                           formats them into the outgoing ICM reply data.
      177     5404        */
      178     5405        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:88   
      179     5406    1   PROCESS_ICM: PROC;

   5406   3 000055  EFC7 0004            PROCESS_ICM     STB,B6   +4,AUTO

      180     5407
      181     5408    2      DCL CKS BIT(16) ALIGNED;
      182     5409
      183     5410    2      CALL Y$CKSUM (CKS);

   5410   3 000057  DBC7 0006                            LAB,B5   CKS,AUTO
          3 000059  DFC7 000A                            STB,B5   CHAD+3,AUTO
          3 00005B  E3C0 0053                            LNJ,B6   s:0,PREL
          3 00005D       0001                            DC       s:5412,PREL

      184     5411
      185     5412    2      IF Y_CLTICM.T1.R1.ICMCKS ~= CKS

   5412   3 00005E  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000061  E846 0002                            LDR,R6   2,B6
          3 000063  E947 0006                            CMR,R6   CKS,AUTO
          3 000065  0901 000D                            BE       s:5420,PREL

      186     5413
      187     5414    3      THEN DO;

      188     5415    3              Y_CLTICM.T1.IFLAGS.BADCKS = %G_ON#;

   5415   3 000067  8946 0008                            LBT,'0080'X       8,B6
   5415   3 000069       0080

      189     5416    3              Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;

   5416   3 00006A  6C22                                 LDV,R6   34
          3 00006B  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00006E  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000070       00FF

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:89   
      190     5417    3           END;

   5417   3 000071  0F81 002B                            B        s:5436,PREL

      191     5418
      192     5419    3      ELSE DO;

      193     5420    4              DO CASE (Y_CLTICM.T1.R1.ICMCOM);

   5420   3 000073  B2C6 0004                            LLH,R3   4,B6
          3 000075  3D06                                 CMV,R3   6
          3 000076  0281 001C                            BGE      s:5431,PREL
          3 000078  A830 0000 007E  03                   LDR,R2   s:5420+11,R3
          3 00007B  83A0 0000 0084  03                   JMP      s:5422,R2
          3 00007E       000F                            DC       s:5431,PREL
          3 00007F       000F                            DC       s:5431,PREL
          3 000080       000F                            DC       s:5431,PREL
          3 000081       0000                            DC       s:5422,PREL
          3 000082       0005                            DC       s:5425,PREL
          3 000083       000A                            DC       s:5428,PREL

      194     5421    4                 CASE (%Y#STARTT);

      195     5422    4                    CALL START_TEST;

   5422   3 000084  E3C0 005D                            LNJ,B6   s:0,PREL
          3 000086       0001                            DC       s:5422+3,PREL
          3 000087  0F81 0015                            B        s:5436,PREL

      196     5423
      197     5424    4                 CASE (%Y#EXECUT);

      198     5425    4                    CALL EXECUTE_TEST;

   5425   3 000089  E3C0 0121                            LNJ,B6   s:0,PREL
          3 00008B       0001                            DC       s:5425+3,PREL
          3 00008C  0F81 0010                            B        s:5436,PREL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:90   

      199     5426
      200     5427    4                 CASE (%Y#TERMNT);

      201     5428    4                    CALL TERMINATE_TEST;

   5428   3 00008E  E3C0 0692                            LNJ,B6   s:0,PREL
          3 000090       0001                            DC       s:5428+3,PREL
          3 000091  0F81 000B                            B        s:5436,PREL

      202     5429
      203     5430    4                 CASE (ELSE);

      204     5431    4                    Y_CLTICM.T1.IFLAGS.BADCOM = %G_ON#;

   5431   3 000093  8946 0008                            LBT,'0040'X       8,B6
   5431   3 000095       0040

      205     5432    4                    Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;

   5432   3 000096  6C22                                 LDV,R6   34
          3 000097  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00009A  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 00009C       00FF

      206     5433    4              END;

      207     5434    3           END;

      208     5435
      209     5436    2      CALL Y$CKSUM (CKS);

   5436   3 00009D  EBC7 0006                            LAB,B6   CKS,AUTO
          3 00009F  EFC7 000A                            STB,B6   CHAD+3,AUTO
          3 0000A1  E3C0 000D                            LNJ,B6   s:0,PREL
          3 0000A3       0001                            DC       s:5438,PREL

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:91   
      210     5437
      211     5438    2      Y_CLTICM.T1.R1.ICMCKS = CKS;

   5438   3 0000A4  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0000A7  E847 0006                            LDR,R6   CKS,AUTO
          3 0000A9  EF46 0002                            STR,R6   2,B6

      212     5439
      213     5440    2      RETURN;

   5440   3 0000AB  ECC7 0004                            LDB,B6   +4,AUTO
          3 0000AD  C3C6 0001                            LNJ,B4   1,B6

      214     5441
      215     5442        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:92   
      216     5443        /*I*  NAME:        Y$CKSUM
      217     5444              PURPOSE:     Compute checksum for COLTS ICM
      218     5445              CALL:        CALL Y$CKSUM (CS);
      219     5446                           Does not altreturn.
      220     5447              PARAMETERS:  CS is an OUTPUT parameter containing the
      221     5448                           computed checksum of the ICM data.
      222     5449              INTERFACE:   None.
      223     5450              DATA:        Examines data in ICM buffer using pointer ICM$.
      224     5451              DESCRIPTION: Computes checksum by successively exclusive-or'ing
      225     5452                           the words in the ICM data buffer, starting with
      226     5453                           word 3 of the ICM.
      227     5454        */
      228     5455        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:93   
      229     5456    2   Y$CKSUM: PROC (CS);

   5456   3 0000AF  EFC7 0008            Y$CKSUM         STB,B6   CHAD+1,AUTO

      230     5457
      231     5458    3      DCL ITEM UBIN BYTE;
      232     5459    3      DCL CS BIT(16) ALIGNED;
      233     5460
      234     5461    3      CS = '0'B;

   5461   3 0000B1  DCC7 000A                            LDB,B5   @CS,AUTO
          3 0000B3  8705                                 CL       ,B5

      235     5462
      236     5463    3      IF Y_CLTICM.T1.R1.ICMWDS > 9

   5463   3 0000B4  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0000B7  E846 0003                            LDR,R6   3,B6
          3 0000B9  E570 00FF                            AND,R6   255,IMO
          3 0000BB  6D09                                 CMV,R6   9
          3 0000BC  0381 0021                            BLE      s:5470,PREL

      237     5464    3      THEN
      238     5465
      239     5466    4           DO ITEM = 0 TO Y_CLTICM.T1.R1.ICMWDS - 4;

   5466   3 0000BE  87C7 000C                            CLH      ITEM,AUTO
          3 0000C0  0F81 0011                            B        s:5468+5,PREL

      240     5467    4              CS = CS \ Y_CLTICM.T2.ICMTXT (ITEM);

   5467   3 0000C2  ECC7 000A                            LDB,B6   @CS,AUTO
          3 0000C4  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0000C7  B2C7 000C                            LLH,R3   ITEM,AUTO
          3 0000C9  3E03                                 ADV,R3   3
          3 0000CA  E806                                 LDR,R6   ,B6
          3 0000CB  E635                                 XOR,R6   ,B5,R3
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:94   
          3 0000CC  EF06                                 STR,R6   ,B6

      241     5468    4           END;

   5468   3 0000CD  D2C7 000C                            LLH,R5   ITEM,AUTO
          3 0000CF  5E01                                 ADV,R5   1
          3 0000D0  D7C7 000C                            STH,R5   ITEM,AUTO
          3 0000D2  E2C7 000C                            LLH,R6   ITEM,AUTO
          3 0000D4  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0000D7  D846 0003                            LDR,R5   3,B6
          3 0000D9  D570 00FF                            AND,R5   255,IMO
          3 0000DB  5EFC                                 ADV,R5   -4
          3 0000DC  E955                                 CMR,R6   R5
          3 0000DD  0AE5                                 BALE     s:5467,SPREL

      242     5469
      243     5470    3      RETURN;

   5470   3 0000DE  ECC7 0008                            LDB,B6   CHAD+1,AUTO
          3 0000E0  C3C6 0001                            LNJ,B4   1,B6

      244     5471
      245     5472    3   END Y$CKSUM;
      246     5473
      247     5474        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:95   
      248     5475        /*I*  NAME:        START_TEST
      249     5476              PURPOSE:     Allocate resources for COLTS testing
      250     5477              CALL:        CALL START_TEST;
      251     5478                           Does not altreturn.
      252     5479              INTERFACE:   This routine calls the following:
      253     5480                            Y$GETLIN
      254     5481                            Y$ALLOC
      255     5482              DATA:        Uses data in ICM buffer (pointer ICM$).
      256     5483              DESCRIPTION: Places entry in Active Test Table and allocates
      257     5484                           channel/device for COLTS testing.
      258     5485        */
      259     5486        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:96   
      260     5487    2   START_TEST: PROC;

   5487   3 0000E2  EFC7 0008            START_TEST      STB,B6   CHAD+1,AUTO

      261     5488
      262     5489    3      DCL CHAD BIT(16) ALIGNED;
      263     5490
      264     5491    3      CHAD = Y_CLTICM.T1.R1.CHNLNR;

   5491   3 0000E4  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0000E7  E845 0005                            LDR,R6   5,B5
          3 0000E9  EF47 000A                            STR,R6   CHAD,AUTO

      265     5492
      266     5493    3      CALL Y$GETLIN WHENRETURN

   5493   3 0000EB  E3C0 003F                            LNJ,B6   s:0,PREL
          3 0000ED       0004                            DC       s:5498,PREL

      267     5494    4           DO;

      268     5495    4              CALL Y$ALLOC;

   5495   3 0000EE  E3C0 0090                            LNJ,B6   s:0,PREL
          3 0000F0       0001                            DC       s:5498,PREL

      269     5496    4           END;

      270     5497
      271     5498    3      IF Y_CLTICM.T1.IFLAGS.DVBUSY = %G_OFF#

   5498   3 0000F1  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0000F4  82C6 0008                            LB,'0010'X        8,B6
          3 0000F6       0010
          3 0000F7  0501 0007                            BBT      s:5503,PREL

      272     5499    3      THEN
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:97   
      273     5500    3         Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5500   3 0000F9  6C21                                 LDV,R6   33
          3 0000FA  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 0000FC       00FF
          3 0000FD  0F81 0029                            B        s:5514,PREL

      274     5501    3      ELSE
      275     5502    4           DO;

      276     5503    4              Y_CLTICM.T1.R1.ICMRPY = %Y#ALLOCN;

   5503   3 0000FF  6C29                                 LDV,R6   41
          3 000100  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000102       00FF

      277     5504    4              IF Y_FLAGS.NOATE

   5504   3 000103  8280 0000 0097  00                   LB,'2000'X        Y_FLAGS
   5504   3 000106       2000
          3 000107  0581 0007                            BBF      s:5509,PREL

      278     5505    4              THEN
      279     5506    4                 Y_FLAGS.NOATE = %G_OFF#;

   5506   3 000109  8800 0000 0097  00                   LBF,'2000'X       Y_FLAGS
   5506   3 00010C       2000
          3 00010D  0F81 0019                            B        s:5514,PREL

      280     5507    4              ELSE
      281     5508    5                   DO;

      282     5509    5                      Y_TENTRY(Y_CLTICM.T1.R1.TSTIND) = '0'B;

   5509   3 00010F  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000112  B2C6 0003                            LLH,R3   3,B6
          3 000114  BF47 0034                            STR,R3   @FC+2,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:98   
          3 000116  3001                                 SOL,R3   1
          3 000117  8730 0000 0099  00                   CL       Y_TENTRY,R3
          3 00011A  B847 0034                            LDR,R3   @FC+2,AUTO
          3 00011C  3001                                 SOL,R3   1
          3 00011D  8730 0000 009A  00                   CL       Y_TENTRY+1,R3

      283     5510    5                      Y_TCOUNT = Y_TCOUNT - 1;

   5510   3 000120  D280 0000 0098  00                   LLH,R5   Y_TCOUNT
          3 000123  5EFF                                 ADV,R5   -1
          3 000124  D780 0000 0098  00                   STH,R5   Y_TCOUNT

      284     5511    5                   END;

      285     5512    4           END;

      286     5513
      287     5514    3      RETURN;

   5514   3 000127  ECC7 0008                            LDB,B6   CHAD+1,AUTO
          3 000129  C3C6 0001                            LNJ,B4   1,B6

      288     5515
      289     5516        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:99   
      290     5517        /*I*  NAME:        Y$GETLIN
      291     5518              PURPOSE:     Put entry in Active Test Table
      292     5519              CALL:        CALL Y$GETLIN ALTRET;
      293     5520                           This routine altreturns if the table is full.
      294     5521              INTERFACE:   None.
      295     5522              DATA:        Uses data in ICM buffer (pointer ICM$).
      296     5523              DESCRIPTION: This routine places the channel number and
      297     5524                           test type code of the requested test in the
      298     5525                           next available entry in the Active Test Table.
      299     5526                           The table can hold a maximum of 8 entries.
      300     5527        */
      301     5528        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:100  
      302     5529    3   Y$GETLIN: PROC ALTRET;

   5529   3 00012B  EFC7 000C            Y$GETLIN        STB,B6   ITEM,AUTO

      303     5530
      304     5531    4      DCL ITEM UBIN BYTE;
      305     5532
      306     5533    4      IF Y_TCOUNT < 8

   5533   3 00012D  E280 0000 0098  00                   LLH,R6   Y_TCOUNT
          3 000130  6D08                                 CMV,R6   8
          3 000131  0281 003F                            BGE      s:5547,PREL

      307     5534    5      THEN DO ITEM = 0 TO 7;

   5534   3 000133  87C7 000E                            CLH      ITEM,AUTO

      308     5535
      309     5536    5              IF Y_TENTRY(ITEM) = '0'B

   5536   3 000135  EB80 0000 0000  00                   LAB,B6   GT_IO
          3 000138  B2C7 000E                            LLH,R3   ITEM,AUTO
          3 00013A  3002                                 SOL,R3   2
          3 00013B  DB80 0000 0000  04                   LAB,B5   0
          3 00013E  5C01                                 LDV,R5   1
          3 00013F  0022                                 ACM      ;
          3 000140       4436 0099                                ALPHANUM(153,B6,R3,,4,FILL),;
          3 000142       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          3 000144  5301 0023                            CBNE     s:5545,PREL

      310     5537    6              THEN DO;

      311     5538    6                      Y_CLTICM.T1.R1.TSTIND = ITEM;

   5538   3 000146  E2C7 000E                            LLH,R6   ITEM,AUTO
          3 000148  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00014B  E7C6 0003                            STH,R6   3,B6
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:101  

      312     5539    6                      Y_TENTRY.CHN(ITEM) = CHAD;

   5539   3 00014D  A856                                 LDR,R2   R6
          3 00014E  2001                                 SOL,R2   1
          3 00014F  C847 000A                            LDR,R4   CHAD,AUTO
          3 000151  CF20 0000 0099  00                   STR,R4   Y_TENTRY,R2

      313     5540    6                      Y_TENTRY.TYP(ITEM) = Y_CLTICM.T1.TSTYPE;

   5540   3 000154  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000157  92C6 0008                            LLH,R1   8,B6
          3 000159  3E01                                 ADV,R3   1
          3 00015A  97B0 0000 009A  00                   STH,R1   Y_TENTRY+1,R3

      314     5541    6                      Y_TCOUNT = Y_TCOUNT + 1;

   5541   3 00015D  E280 0000 0098  00                   LLH,R6   Y_TCOUNT
          3 000160  6E01                                 ADV,R6   1
          3 000161  E780 0000 0098  00                   STH,R6   Y_TCOUNT

      315     5542    6                      RETURN;

   5542   3 000164  ECC7 000C                            LDB,B6   ITEM,AUTO
          3 000166  C3C6 0001                            LNJ,B4   1,B6

      316     5543    6                   END;
      317     5544
      318     5545    5           END;

   5545   3 000168  E2C7 000E                            LLH,R6   ITEM,AUTO
          3 00016A  6E01                                 ADV,R6   1
          3 00016B  E7C7 000E                            STH,R6   ITEM,AUTO
          3 00016D  E2C7 000E                            LLH,R6   ITEM,AUTO
          3 00016F  6D07                                 CMV,R6   7
          3 000170  03C5                                 BLE      s:5536,SPREL

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:102  
      319     5546
      320     5547    4      Y_FLAGS.NOATE = %G_ON#;

   5547   3 000171  8900 0000 0097  00                   LBT,'2000'X       Y_FLAGS
   5547   3 000174       2000

      321     5548    4      Y_CLTICM.T1.IFLAGS.DVBUSY = %G_ON#;

   5548   3 000175  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000178  8946 0008                            LBT,'0010'X       8,B6
          3 00017A       0010

      322     5549    4      ALTRETURN;

   5549   3 00017B  ECC7 000C                            LDB,B6   ITEM,AUTO
          3 00017D  B806                                 LDR,R3   ,B6
          3 00017E  C3B6                                 LNJ,B4   ,B6,R3

      323     5550
      324     5551    4   END Y$GETLIN;
      325     5552
      326     5553        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:103  
      327     5554        /*I*  NAME:        Y$ALLOC
      328     5555              PURPOSE:     Allocate channel or device to COLTS for testing
      329     5556              CALL:        CALL Y$ALLOC;
      330     5557                           Does not altreturn.
      331     5558              INTERFACE:   This routine calls the following:
      332     5559                            M$GCHAN
      333     5560              DATA:        Uses data in ICM buffer (pointer ICM$).
      334     5561              DESCRIPTION: This routine obtains a channel or device for
      335     5562                           testing.
      336     5563        */
      337     5564        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:104  
      338     5565    3   Y$ALLOC: PROC;

   5565   3 00017F  EFC7 000C            Y$ALLOC         STB,B6   ITEM,AUTO

      339     5566
      340     5567    4      IF Y_CLTICM.T1.TSTYPE = 18

   5567   3 000181  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000184  E2C5 0008                            LLH,R6   8,B5
          3 000186  6D12                                 CMV,R6   18
          3 000187  0981 0007                            BNE      s:5571,PREL

      341     5568    4      THEN
      342     5569    4         GET_CHAN.V.FLAGS.CONTROLLER = '1'B;

   5569   3 000189  8900 0000 0085  00                   LBT,'4000'X       GET_CHAN+9
   5569   3 00018C       4000
          3 00018D  0F81 0005                            B        s:5573,PREL

      343     5570    4      ELSE
      344     5571    4         GET_CHAN.V.FLAGS.CONTROLLER = '0'B;

   5571   3 00018F  8800 0000 0085  00                   LBF,'4000'X       GET_CHAN+9
   5571   3 000192       4000

      345     5572
      346     5573    4      GET_CHAN.V.CHANNEL = Y_CLTICM.T1.R1.CHAN;

   5573   3 000193  E845 0005                            LDR,R6   5,B5
          3 000195  EF00 0000 0082  00                   STR,R6   GET_CHAN+6

      347     5574
      348     5575    4      CALL M$GCHAN (GET_CHAN)

   5575   3 000198  BB80 0000 007C  00                   LAB,B3   GET_CHAN
          3 00019B  B870 0993                            LDR,R3   2451,IMO
          3 00019D  0001                                 MCL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:105  
          3 00019E       0003                            DC       s:5577,PREL
          3 00019F  0F81 0007                            B        s:5580,PREL

      349     5576    5      WHENALTRETURN DO;

      350     5577    5              Y_CLTICM.T1.IFLAGS.DVBUSY = %G_ON#;

   5577   3 0001A1  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0001A4  8946 0008                            LBT,'0010'X       8,B6
          3 0001A6       0010

      351     5578    5           END;

      352     5579
      353     5580    4      RETURN;

   5580   3 0001A7  ECC7 000C                            LDB,B6   ITEM,AUTO
          3 0001A9  C3C6 0001                            LNJ,B4   1,B6

      354     5581
      355     5582    4   END Y$ALLOC;
      356     5583
      357     5584    3   END START_TEST;
      358     5585
      359     5586        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:106  
      360     5587        /*I*  NAME:        EXECUTE_TEST
      361     5588              PURPOSE:     Execute test I/O per ICM
      362     5589              CALL:        CALL EXECUTE_TEST;
      363     5590                           Does not altreturn.
      364     5591              INTERFACE:   This routine calls the following:
      365     5592                            Y$RCCP
      366     5593                            Y$XCCP
      367     5594                            Y$IOSTR
      368     5595                            Y$XDATA
      369     5596                            Y$SWRDS
      370     5597                            Y$BMWUP
      371     5598                            Y$XEDAT
      372     5599                            Y$PRCCP
      373     5600                            Y$PXCCP
      374     5601              DATA:        Uses data in ICM buffer (pointer ICM$).
      375     5602              DESCRIPTION: Interprets ICM function code and calls
      376     5603                           corresponding routine to execute appropriate
      377     5604                           test I/O.
      378     5605        */
      379     5606        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:107  
      380     5607    2   EXECUTE_TEST: PROC;

   5607   3 0001AB  EFC7 0008            EXECUTE_TEST    STB,B6   CHAD+1,AUTO

      381     5608
      382     5609    4      DO CASE (Y_CLTICM.T1.EXTCFG);

   5609   3 0001AD  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0001B0  B845 0007                            LDR,R3   7,B5
          3 0001B2  3D0F                                 CMV,R3   15
          3 0001B3  0281 0057                            BGE      s:5646,PREL
          3 0001B5  A830 0000 01BB  03                   LDR,R2   s:5609+14,R3
          3 0001B8  83A0 0000 01CA  03                   JMP      s:5611,R2
          3 0001BB       0041                            DC       s:5646,PREL
          3 0001BC       0000                            DC       s:5611,PREL
          3 0001BD       0005                            DC       s:5614,PREL
          3 0001BE       000A                            DC       s:5617,PREL
          3 0001BF       000F                            DC       s:5620,PREL
          3 0001C0       0014                            DC       s:5623,PREL
          3 0001C1       0041                            DC       s:5646,PREL
          3 0001C2       0041                            DC       s:5646,PREL
          3 0001C3       0019                            DC       s:5626,PREL
          3 0001C4       001E                            DC       s:5629,PREL
          3 0001C5       0023                            DC       s:5632,PREL
          3 0001C6       002C                            DC       s:5636,PREL
          3 0001C7       0031                            DC       s:5639,PREL
          3 0001C8       0041                            DC       s:5646,PREL
          3 0001C9       0036                            DC       s:5642,PREL

      383     5610    4         CASE (%Y#RCCP);

      384     5611    4            CALL Y$RCCP;

   5611   3 0001CA  E3C0 004E                            LNJ,B6   s:0,PREL
          3 0001CC       0001                            DC       s:5611+3,PREL
          3 0001CD  0F81 0047                            B        s:5649,PREL

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:108  
      385     5612
      386     5613    4         CASE (%Y#XCCP);

      387     5614    4            CALL Y$XCCP;

   5614   3 0001CF  E3C0 00AF                            LNJ,B6   s:0,PREL
          3 0001D1       0001                            DC       s:5614+3,PREL
          3 0001D2  0F81 0042                            B        s:5649,PREL

      388     5615
      389     5616    4         CASE (%Y#IOSTR);

      390     5617    4            CALL Y$IOSTR;

   5617   3 0001D4  E3C0 0110                            LNJ,B6   s:0,PREL
          3 0001D6       0001                            DC       s:5617+3,PREL
          3 0001D7  0F81 003D                            B        s:5649,PREL

      391     5618
      392     5619    4         CASE (%Y#XDATA);

      393     5620    4            CALL Y$XDATA;

   5620   3 0001D9  E3C0 0278                            LNJ,B6   s:0,PREL
          3 0001DB       0001                            DC       s:5620+3,PREL
          3 0001DC  0F81 0038                            B        s:5649,PREL

      394     5621
      395     5622    4         CASE (%Y#SWRDS);

      396     5623    4            CALL Y$SWRDS;

   5623   3 0001DE  E3C0 029B                            LNJ,B6   s:0,PREL
          3 0001E0       0001                            DC       s:5623+3,PREL
          3 0001E1  0F81 0033                            B        s:5649,PREL

      397     5624
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:109  
      398     5625    4         CASE (%Y#BMWUP);

      399     5626    4            CALL Y$BMWUP;

   5626   3 0001E3  E3C0 0318                            LNJ,B6   s:0,PREL
          3 0001E5       0001                            DC       s:5626+3,PREL
          3 0001E6  0F81 002E                            B        s:5649,PREL

      400     5627
      401     5628    4         CASE (%Y#XEDAT);

      402     5629    4            CALL Y$XEDAT;

   5629   3 0001E8  E3C0 0332                            LNJ,B6   s:0,PREL
          3 0001EA       0001                            DC       s:5629+3,PREL
          3 0001EB  0F81 0029                            B        s:5649,PREL

      403     5630
      404     5631    4         CASE (%Y#PRCCB);

      405     5632    4            Y_FLAGS.CCB = %G_ON#;

   5632   3 0001ED  8900 0000 0097  00                   LBT,'0400'X       Y_FLAGS
   5632   3 0001F0       0400

      406     5633    4            CALL Y$IOSTR;

   5633   3 0001F1  E3C0 00F3                            LNJ,B6   s:0,PREL
          3 0001F3       0001                            DC       s:5633+3,PREL
          3 0001F4  0F81 0020                            B        s:5649,PREL

      407     5634
      408     5635    4         CASE (%Y#PRCCP);

      409     5636    4            CALL Y$PRCCP;

   5636   3 0001F6  E3C0 033F                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:110  
          3 0001F8       0001                            DC       s:5636+3,PREL
          3 0001F9  0F81 001B                            B        s:5649,PREL

      410     5637
      411     5638    4         CASE (%Y#PXCCP);

      412     5639    4            CALL Y$PXCCP;

   5639   3 0001FB  E3C0 0356                            LNJ,B6   s:0,PREL
          3 0001FD       0001                            DC       s:5639+3,PREL
          3 0001FE  0F81 0016                            B        s:5649,PREL

      413     5640
      414     5641    4         CASE (%Y#RLXBF);

      415     5642    4            Y_DBUFSZ(Y_CLTICM.T1.R1.TSTIND) = 0;

   5642   3 000200  92C5 0003                            LLH,R1   3,B5
          3 000202  8710 0000 00AC  00                   CL       Y_DBUFSZ,R1

      416     5643    4            Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5643   3 000205  6C21                                 LDV,R6   33
          3 000206  EAC5 0004                            SRM,R6,'00FF'X    4,B5
          3 000208       00FF
          3 000209  0F81 000B                            B        s:5649,PREL

      417     5644
      418     5645    4         CASE (ELSE);

      419     5646    4            Y_CLTICM.T1.IFLAGS.BADCOM = %G_ON#;

   5646   3 00020B  8945 0008                            LBT,'0040'X       8,B5
   5646   3 00020D       0040

      420     5647    4            Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:111  
   5647   3 00020E  6C22                                 LDV,R6   34
          3 00020F  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000212  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000214       00FF

      421     5648    4      END;

      422     5649    3      RETURN;

   5649   3 000215  ECC7 0008                            LDB,B6   CHAD+1,AUTO
          3 000217  C3C6 0001                            LNJ,B4   1,B6

      423     5650
      424     5651        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:112  
      425     5652        /*I*  NAME:        Y$RCCP
      426     5653              PURPOSE:     Implement receive channel control program (CCP)
      427     5654              CALL:        CALL Y$RCCP;
      428     5655                           Does not altreturn.
      429     5656              INTERFACE:   This routine calls the following:
      430     5657                            Y$WRBLK
      431     5658                            Y$WRLCT
      432     5659              DATA:        Uses data in ICM buffer (pointer ICM$).
      433     5660              DESCRIPTION: This routine moves the data for the receive
      434     5661                           channel control program from the ICM to the
      435     5662                           MLC16 RAM.  It then stores the pointer to the
      436     5663                           CCP into LCT bytes 6 and 7 in the RAM.
      437     5664        */
      438     5665        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:113  
      439     5666    3   Y$RCCP: PROC;

   5666   3 000219  EFC7 000A            Y$RCCP          STB,B6   CHAD,AUTO

      440     5667
      441     5668    4      DCL RAMAD UBIN WORD;
      442     5669    4      DCL CH UBIN(10) ALIGNED;
      443     5670
      444     5671    4      RAMAD = %Y#RCVRAM + Y_CLTICM.T2.TEXT(9);

   5671   3 00021B  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 00021E  E845 000C                            LDR,R6   12,B5
          3 000220  EA70 0CD4                            ADD,R6   3284,IMO
          3 000222  EF47 000C                            STR,R6   RAMAD,AUTO

      445     5672
      446     5673    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (GOOF);

   5673   3 000224  CBC7 000C                            LAB,B4   RAMAD,AUTO
          3 000226  CFC7 0014                            STB,B4   CHN_C+1,AUTO
          3 000228  BBC7 000D                            LAB,B3   CH,AUTO
          3 00022A  BFC7 0012                            STB,B3   CON+1,AUTO
          3 00022C  E3C0 0341                            LNJ,B6   s:0,PREL
          3 00022E       000B                            DC       s:5680,PREL

      447     5674
      448     5675    4      CALL Y$WRLCT ALTRET (GOOF);

   5675   3 00022F  E3C0 000D                            LNJ,B6   s:0,PREL
          3 000231       0008                            DC       s:5680,PREL

      449     5676
      450     5677    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5677   3 000232  6C21                                 LDV,R6   33
          3 000233  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000236  EAC6 0004                            SRM,R6,'00FF'X    4,B6
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:114  
          3 000238       00FF

      451     5678
      452     5679    4   GOOF:
      453     5680    4      RETURN;

   5680   3 000239  ECC7 000A            GOOF            LDB,B6   CHAD,AUTO
          3 00023B  C3C6 0001                            LNJ,B4   1,B6

      454     5681
      455     5682        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:115  
      456     5683        /*I*  NAME:        Y$WRLCT
      457     5684              PURPOSE:     Set pointer to receive CCP
      458     5685              CALL:        CALL Y$WRLCT ALTRET;
      459     5686                           Altreturns if an I/O error occurs.
      460     5687              INTERFACE:   This routine calls the following:
      461     5688                            Y$DOIO
      462     5689              DATA:        Sets up the GT_IO FPT.
      463     5690              DESCRIPTION: Stores the pointer to the receive CCP in
      464     5691                           LCT6 and LCT7 in the MLC16 RAM.
      465     5692        */
      466     5693        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:116  
      467     5694    4   Y$WRLCT: PROC ALTRET;

   5694   3 00023D  EFC7 000E            Y$WRLCT         STB,B6   ITEM,AUTO

      468     5695
      469     5696    5      DCL 1 CONX ALIGNED,
      470     5697    5            2 L UBIN BYTE UNAL,
      471     5698    5            2 R UBIN BYTE UNAL;
      472     5699    5      DCL CONW REDEF CONX UBIN WORD;
      473     5700    5      DCL FC UBIN(6) ALIGNED;
      474     5701
      475     5702    5      FC = %GH#IO_OTPLCTBYT;

   5702   3 00023F  E870 2C00                            LDR,R6   11264,IMO
          3 000241  EF47 0011                            STR,R6   FC,AUTO

      476     5703
      477     5704    5      CONW = %Y#RCVRAM;

   5704   3 000243  D870 0CD4                            LDR,R5   3284,IMO
          3 000245  DF47 0010                            STR,R5   CONX,AUTO

      478     5705    5      CONX.R = 6;

   5705   3 000247  4C06                                 LDV,R4   6
          3 000248  CAC7 0010                            SRM,R4,'00FF'X    CONX,AUTO
          3 00024A       00FF

      479     5706
      480     5707    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);

   5707   3 00024B  DBC7 0010                            LAB,B5   CONX,AUTO
          3 00024D  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 00024F  CBC7 0011                            LAB,B4   FC,AUTO
          3 000251  CFC7 002C                            STB,B4   @CH+2,AUTO
          3 000253  BBC7 000D                            LAB,B3   CH,AUTO
          3 000255  BFC7 002A                            STB,B3   @BOFS+2,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:117  
          3 000257  E3C0 0476                            LNJ,B6   s:0,PREL
          3 000259       0022                            DC       s:5718,PREL

      481     5708
      482     5709    5      CONW = %Y#RCVRAM;

   5709   3 00025A  E870 0CD4                            LDR,R6   3284,IMO
          3 00025C  EF47 0010                            STR,R6   CONX,AUTO

      483     5710    5      CONX.L = CONX.R;

   5710   3 00025E  D847 0010                            LDR,R5   CONX,AUTO
          3 000260  D570 00FF                            AND,R5   255,IMO
          3 000262  D7C7 0010                            STH,R5   CONX,AUTO

      484     5711    5      CONX.R = 7;

   5711   3 000264  4C07                                 LDV,R4   7
          3 000265  CAC7 0010                            SRM,R4,'00FF'X    CONX,AUTO
          3 000267       00FF

      485     5712
      486     5713    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);

   5713   3 000268  EBC7 0010                            LAB,B6   CONX,AUTO
          3 00026A  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 00026C  DBC7 0011                            LAB,B5   FC,AUTO
          3 00026E  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 000270  CBC7 000D                            LAB,B4   CH,AUTO
          3 000272  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 000274  E3C0 0459                            LNJ,B6   s:0,PREL
          3 000276       0005                            DC       s:5718,PREL

      487     5714
      488     5715    5      RETURN;

   5715   3 000277  ECC7 000E                            LDB,B6   ITEM,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:118  
          3 000279  C3C6 0001                            LNJ,B4   1,B6

      489     5716
      490     5717    5   ERRIO:
      491     5718    5      ALTRETURN;

   5718   3 00027B  ECC7 000E            ERRIO           LDB,B6   ITEM,AUTO
          3 00027D  B806                                 LDR,R3   ,B6
          3 00027E  C3B6                                 LNJ,B4   ,B6,R3

      492     5719
      493     5720    5   END Y$WRLCT;
      494     5721
      495     5722    4   END Y$RCCP;
      496     5723
      497     5724        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:119  
      498     5725        /*I*  NAME:        Y$XCCP
      499     5726              PURPOSE:     Implement transmit channel control program
      500     5727              CALL:        CALL Y$XCCP;
      501     5728                           Does not altreturn.
      502     5729              INTERFACE:   This routine calls the following:
      503     5730                            Y$WRBLK
      504     5731                            Y$WXLCT
      505     5732              DATA:        Uses data in ICM buffer (pointer ICM$).
      506     5733              DESCRIPTION: This routine moves the data for the transmit
      507     5734                           CCP from the ICM to the MLC16 RAM.  It then
      508     5735                           stores the pointer to the CCP into LCT bytes
      509     5736                           38 and 39 in the RAM.
      510     5737        */
      511     5738        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:120  
      512     5739    3   Y$XCCP: PROC;

   5739   3 00027F  EFC7 000C            Y$XCCP          STB,B6   RAMAD,AUTO

      513     5740
      514     5741    4      DCL RAMAD UBIN WORD;
      515     5742    4      DCL CH UBIN(10) ALIGNED;
      516     5743
      517     5744    4      RAMAD = %Y#XMTRAM + Y_CLTICM.T2.TEXT(9);

   5744   3 000281  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000284  E845 000C                            LDR,R6   12,B5
          3 000286  EA70 0D6A                            ADD,R6   3434,IMO
          3 000288  EF47 000E                            STR,R6   RAMAD,AUTO

      518     5745
      519     5746    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (GOOF);

   5746   3 00028A  CBC7 000E                            LAB,B4   RAMAD,AUTO
          3 00028C  CFC7 0014                            STB,B4   CHN_C+1,AUTO
          3 00028E  BBC7 000F                            LAB,B3   CH,AUTO
          3 000290  BFC7 0012                            STB,B3   CON+1,AUTO
          3 000292  E3C0 02DB                            LNJ,B6   s:0,PREL
          3 000294       000B                            DC       s:5753,PREL

      520     5747
      521     5748    4      CALL Y$WXLCT ALTRET (GOOF);

   5748   3 000295  E3C0 000D                            LNJ,B6   s:0,PREL
          3 000297       0008                            DC       s:5753,PREL

      522     5749
      523     5750    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5750   3 000298  6C21                                 LDV,R6   33
          3 000299  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00029C  EAC6 0004                            SRM,R6,'00FF'X    4,B6
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:121  
          3 00029E       00FF

      524     5751
      525     5752    4   GOOF:
      526     5753    4      RETURN;

   5753   3 00029F  ECC7 000C            GOOF            LDB,B6   RAMAD,AUTO
          3 0002A1  C3C6 0001                            LNJ,B4   1,B6

      527     5754
      528     5755        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:122  
      529     5756        /*I*  NAME:        Y$WXLCT
      530     5757              PURPOSE:     Set pointer to transmit CCP
      531     5758              CALL:        CALL Y$WXLCT ALTRET;
      532     5759                           Altreturns if an I/O error occurs.
      533     5760              INTERFACE:   This routine calls the following:
      534     5761                            Y$DOIO
      535     5762              DATA:        Sets up the GT_IO FPT.
      536     5763              DESCRIPTION: Stores the pointer to the transmit CCP
      537     5764                           in LCT38 and LCT39 in the MLC16 RAM.
      538     5765        */
      539     5766        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:123  
      540     5767    4   Y$WXLCT: PROC ALTRET;

   5767   3 0002A3  EFC7 0010            Y$WXLCT         STB,B6   CONX,AUTO

      541     5768
      542     5769    5      DCL 1 CONX ALIGNED,
      543     5770    5            2 L UBIN BYTE UNAL,
      544     5771    5            2 R UBIN BYTE UNAL;
      545     5772    5      DCL CONW REDEF CONX UBIN WORD;
      546     5773    5      DCL FC UBIN(6) ALIGNED;
      547     5774
      548     5775    5      FC = %GH#IO_OTPLCTBYT;

   5775   3 0002A5  E870 2C00                            LDR,R6   11264,IMO
          3 0002A7  EF47 0013                            STR,R6   FC,AUTO

      549     5776
      550     5777    5      CONW = %Y#XMTRAM;

   5777   3 0002A9  D870 0D6A                            LDR,R5   3434,IMO
          3 0002AB  DF47 0012                            STR,R5   CONX,AUTO

      551     5778    5      CONX.R = 38;

   5778   3 0002AD  4C26                                 LDV,R4   38
          3 0002AE  CAC7 0012                            SRM,R4,'00FF'X    CONX,AUTO
          3 0002B0       00FF

      552     5779
      553     5780    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);

   5780   3 0002B1  DBC7 0012                            LAB,B5   CONX,AUTO
          3 0002B3  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 0002B5  CBC7 0013                            LAB,B4   FC,AUTO
          3 0002B7  CFC7 002C                            STB,B4   @CH+2,AUTO
          3 0002B9  BBC7 000F                            LAB,B3   CH,AUTO
          3 0002BB  BFC7 002A                            STB,B3   @BOFS+2,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:124  
          3 0002BD  E3C0 0410                            LNJ,B6   s:0,PREL
          3 0002BF       0022                            DC       s:5791,PREL

      554     5781
      555     5782    5      CONW = %Y#XMTRAM;

   5782   3 0002C0  E870 0D6A                            LDR,R6   3434,IMO
          3 0002C2  EF47 0012                            STR,R6   CONX,AUTO

      556     5783    5      CONX.L = CONX.R;

   5783   3 0002C4  D847 0012                            LDR,R5   CONX,AUTO
          3 0002C6  D570 00FF                            AND,R5   255,IMO
          3 0002C8  D7C7 0012                            STH,R5   CONX,AUTO

      557     5784    5      CONX.R = 39;

   5784   3 0002CA  4C27                                 LDV,R4   39
          3 0002CB  CAC7 0012                            SRM,R4,'00FF'X    CONX,AUTO
          3 0002CD       00FF

      558     5785
      559     5786    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);

   5786   3 0002CE  EBC7 0012                            LAB,B6   CONX,AUTO
          3 0002D0  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 0002D2  DBC7 0013                            LAB,B5   FC,AUTO
          3 0002D4  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 0002D6  CBC7 000F                            LAB,B4   CH,AUTO
          3 0002D8  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0002DA  E3C0 03F3                            LNJ,B6   s:0,PREL
          3 0002DC       0005                            DC       s:5791,PREL

      560     5787
      561     5788    5      RETURN;

   5788   3 0002DD  ECC7 0010                            LDB,B6   CONX,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:125  
          3 0002DF  C3C6 0001                            LNJ,B4   1,B6

      562     5789
      563     5790    5   ERRIO:
      564     5791    5      ALTRETURN;

   5791   3 0002E1  ECC7 0010            ERRIO           LDB,B6   CONX,AUTO
          3 0002E3  B806                                 LDR,R3   ,B6
          3 0002E4  C3B6                                 LNJ,B4   ,B6,R3

      565     5792
      566     5793    5   END Y$WXLCT;
      567     5794
      568     5795    4   END Y$XCCP;
      569     5796
      570     5797        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:126  
      571     5798        /*I*  NAME:        Y$IOSTR
      572     5799              PURPOSE:     Execute a string of I/O commands
      573     5800              CALL:        CALL Y$IOSTR;
      574     5801                           Does not altreturn.
      575     5802              INTERFACE:   This routine calls the following:
      576     5803                            Y$XECIO
      577     5804                            M$WAIT
      578     5805                            Y$STATUS
      579     5806                            Y$CKSTAT
      580     5807              DATA:        Uses data in ICM buffer (pointer ICM$).
      581     5808              DESCRIPTION: Sequentially executes a string of I/O
      582     5809                           instructions which it obtains from the
      583     5810                           ICM.
      584     5811        */
      585     5812        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:127  
      586     5813    3   Y$IOSTR: PROC;

   5813   3 0002E5  EFC7 000A            Y$IOSTR         STB,B6   CHAD,AUTO

      587     5814
      588     5815    4      DCL COUNT UBIN WORD;
      589     5816    4      DCL INX UBIN WORD;
      590     5817    4      DCL NUMIO UBIN WORD;
      591     5818    4      DCL STAT BIT(16) ALIGNED;
      592     5819    4      DCL XCHAN UBIN(10) ALIGNED;
      593     5820    4      DCL RCHAN UBIN(10) ALIGNED;
      594     5821
      595     5822    4      Y_FLAGS.XCH = %G_OFF#;

   5822   3 0002E7  8800 0000 0097  00                   LBF,'0800'X       Y_FLAGS
   5822   3 0002EA       0800

      596     5823    4      Y_FLAGS.RCH = %G_OFF#;

   5823   3 0002EB  8800 0000 0097  00                   LBF,'1000'X       Y_FLAGS
   5823   3 0002EE       1000

      597     5824    4      XCHAN = 0;

   5824   3 0002EF  8747 0010                            CL       XCHAN,AUTO

      598     5825    4      RCHAN = 0;

   5825   3 0002F1  8747 0011                            CL       RCHAN,AUTO

      599     5826    4      INX = %GT_STRDATOFS#;

   5826   3 0002F3  6C0B                                 LDV,R6   11
          3 0002F4  EF47 000D                            STR,R6   INX,AUTO

      600     5827    4      NUMIO = Y_CLTICM.T1.TSTDAT(3);

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:128  
   5827   3 0002F6  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0002F9  D845 000B                            LDR,R5   11,B5
          3 0002FB  D570 00FF                            AND,R5   255,IMO
          3 0002FD  DF47 000E                            STR,R5   NUMIO,AUTO

      601     5828    4      CALL Y$XECIO ALTRET (PLOP);

   5828   3 0002FF  E3C0 0062                            LNJ,B6   s:0,PREL
          3 000301       0059                            DC       s:5856,PREL

      602     5829
      603     5830    4      IF Y_FLAGS.CKRDY

   5830   3 000302  8280 0000 0097  00                   LB,'4000'X        Y_FLAGS
   5830   3 000305       4000
          3 000306  0581 004C                            BBF      s:5853,PREL

      604     5831    4      THEN
      605     5832    5           DO;

      606     5833    5              Y_FLAGS.CKRDY = %G_OFF#;

   5833   3 000308  8800 0000 0097  00                   LBF,'4000'X       Y_FLAGS
   5833   3 00030B       4000

      607     5834    5              CALL M$WAIT (WAIT_IO);

   5834   3 00030C  BB80 0000 0062  00                   LAB,B3   WAIT_IO
          3 00030F  B870 0CC5                            LDR,R3   3269,IMO
          3 000311  0001                                 MCL
          3 000312       0000                            DC       s:5834+6,PREL

      608     5835
      609     5836    5              IF Y_FLAGS.XCH

   5836   3 000313  8280 0000 0097  00                   LB,'0800'X        Y_FLAGS
   5836   3 000316       0800
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:129  
          3 000317  0581 001B                            BBF      s:5844,PREL

      610     5837    5              THEN
      611     5838    6                   DO;

      612     5839    6                      Y_FLAGS.XCH = %G_OFF#;

   5839   3 000319  8800 0000 0097  00                   LBF,'0800'X       Y_FLAGS
   5839   3 00031C       0800

      613     5840    6                      CALL Y$STATUS (XCHAN, STAT) ALTRET (PLOP);

   5840   3 00031D  EBC7 000F                            LAB,B6   STAT,AUTO
          3 00031F  EFC7 0024                            STB,B6   @CH+2,AUTO
          3 000321  DBC7 0010                            LAB,B5   XCHAN,AUTO
          3 000323  DFC7 0022                            STB,B5   BSIZ+1,AUTO
          3 000325  E3C0 02F1                            LNJ,B6   s:0,PREL
          3 000327       0033                            DC       s:5856,PREL

      614     5841    6                      CALL Y$CKSTAT (XCHAN, STAT) ALTRET (PLOP);

   5841   3 000328  EBC7 000F                            LAB,B6   STAT,AUTO
          3 00032A  EFC7 001C                            STB,B6   @CH+2,AUTO
          3 00032C  DBC7 0010                            LAB,B5   XCHAN,AUTO
          3 00032E  DFC7 001A                            STB,B5   CHN_F+2,AUTO
          3 000330  E3C0 032A                            LNJ,B6   s:0,PREL
          3 000332       0028                            DC       s:5856,PREL

      615     5842    6                   END;

      616     5843
      617     5844    5              IF Y_FLAGS.RCH

   5844   3 000333  8280 0000 0097  00                   LB,'1000'X        Y_FLAGS
   5844   3 000336       1000
          3 000337  0581 001B                            BBF      s:5853,PREL

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:130  
      618     5845    5              THEN
      619     5846    6                   DO;

      620     5847    6                      Y_FLAGS.RCH = %G_OFF#;

   5847   3 000339  8800 0000 0097  00                   LBF,'1000'X       Y_FLAGS
   5847   3 00033C       1000

      621     5848    6                      CALL Y$STATUS (RCHAN, STAT) ALTRET (PLOP);

   5848   3 00033D  EBC7 000F                            LAB,B6   STAT,AUTO
          3 00033F  EFC7 0024                            STB,B6   @CH+2,AUTO
          3 000341  DBC7 0011                            LAB,B5   RCHAN,AUTO
          3 000343  DFC7 0022                            STB,B5   BSIZ+1,AUTO
          3 000345  E3C0 02D1                            LNJ,B6   s:0,PREL
          3 000347       0013                            DC       s:5856,PREL

      622     5849    6                      CALL Y$CKSTAT (RCHAN, STAT) ALTRET (PLOP);

   5849   3 000348  EBC7 000F                            LAB,B6   STAT,AUTO
          3 00034A  EFC7 001C                            STB,B6   @CH+2,AUTO
          3 00034C  DBC7 0011                            LAB,B5   RCHAN,AUTO
          3 00034E  DFC7 001A                            STB,B5   CHN_F+2,AUTO
          3 000350  E3C0 030A                            LNJ,B6   s:0,PREL
          3 000352       0008                            DC       s:5856,PREL

      623     5850    6                   END;

      624     5851    5           END;

      625     5852
      626     5853    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5853   3 000353  6C21                                 LDV,R6   33
          3 000354  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000357  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000359       00FF
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:131  

      627     5854
      628     5855    4   PLOP:
      629     5856    4      Y_FLAGS.CCB = %G_OFF#;

   5856   3 00035A  8800 0000 0097  00   PLOP            LBF,'0400'X       Y_FLAGS
   5856   3 00035D       0400

      630     5857    4      RETURN;

   5857   3 00035E  ECC7 000A                            LDB,B6   CHAD,AUTO
          3 000360  C3C6 0001                            LNJ,B4   1,B6

      631     5858
      632     5859        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:132  
      633     5860        /*I*  NAME:        Y$XECIO
      634     5861              PURPOSE:     Execute I/O
      635     5862              CALL:        CALL Y$XECIO ALTRET;
      636     5863                           Altreturns if an I/O error occurs.
      637     5864              INTERFACE:   This routine calls the following:
      638     5865                            Y$XIOLD
      639     5866                            Y$DOIO
      640     5867              DATA:        Uses data in ICM buffer (pointer ICM$).
      641     5868              DESCRIPTION: Obtains each I/O command in turn from ICM
      642     5869                           data, determines type of I/O required, and
      643     5870                           then executes that I/O command.
      644     5871        */
      645     5872        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:133  
      646     5873    4   Y$XECIO: PROC ALTRET;

   5873   3 000362  EFC7 0012            Y$XECIO         STB,B6   CONX,AUTO

      647     5874
      648     5875    5      DCL ITEM UBIN WORD;
      649     5876    5      DCL CHCON UBIN WORD;
      650     5877    5      DCL 1 CHN ALIGNED,
      651     5878    5            2 CH UBIN(10) UNAL,
      652     5879    5            2 C REDEF CH,
      653     5880    5              3 * UBIN(9) UNAL,
      654     5881    5              3 X BIT(1) UNAL,
      655     5882    5            2 F UBIN(6) UNAL;
      656     5883    5      DCL CHN_CH UBIN(10) ALIGNED;
      657     5884    5      DCL CHN_F UBIN(6) ALIGNED;
      658     5885
      659     5886    6      DO ITEM = 0 TO 2*(NUMIO - 1) BY 2;

   5886   3 000364  8747 0014                            CL       ITEM,AUTO
          3 000366  0F81 0076                            B        s:5919+5,PREL

      660     5887
      661     5888    6         CHCON = Y_CLTICM.T2.TEXT(INX + ITEM);

   5888   3 000368  E847 000D                            LDR,R6   INX,AUTO
          3 00036A  EA47 0014                            ADD,R6   ITEM,AUTO
          3 00036C  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00036F  B856                                 LDR,R3   R6
          3 000370  3E03                                 ADV,R3   3
          3 000371  E836                                 LDR,R6   ,B6,R3
          3 000372  EF47 0015                            STR,R6   CHCON,AUTO

      662     5889    6         CHN = Y_CLTICM.T2.ICMTXT(INX + ITEM + 1);

   5889   3 000374  D847 000D                            LDR,R5   INX,AUTO
          3 000376  DA47 0014                            ADD,R5   ITEM,AUTO
          3 000378  B855                                 LDR,R3   R5
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:134  
          3 000379  3E04                                 ADV,R3   4
          3 00037A  D836                                 LDR,R5   ,B6,R3
          3 00037B  DF47 0016                            STR,R5   CHN,AUTO

      663     5890    6         CHN_CH = CHN.CH;

   5890   3 00037D  C847 0016                            LDR,R4   CHN,AUTO
          3 00037F  4046                                 SOR,R4   6
          3 000380  4006                                 SOL,R4   6
          3 000381  CF47 0017                            STR,R4   CHN_CH,AUTO

      664     5891    6         CHN_F = CHN.F;

   5891   3 000383  C847 0016                            LDR,R4   CHN,AUTO
          3 000385  C570 003F                            AND,R4   63,IMO
          3 000387  400A                                 SOL,R4   10
          3 000388  CF47 0018                            STR,R4   CHN_F,AUTO

      665     5892
      666     5893    6         IF CHN.F = %GH#IO_IOLD

   5893   3 00038A  C847 0016                            LDR,R4   CHN,AUTO
          3 00038C  C570 003F                            AND,R4   63,IMO
          3 00038E  4D09                                 CMV,R4   9
          3 00038F  0981 0006                            BNE      s:5898,PREL

      667     5894    6         THEN
      668     5895    6            CALL Y$XIOLD ALTRET (GOOP);

   5895   3 000391  E3C0 0068                            LNJ,B6   s:0,PREL
          3 000393       0063                            DC       s:5928,PREL
          3 000394  0F81 0043                            B        s:5919,PREL

      669     5896    6         ELSE
      670     5897    7              DO;

      671     5898    7                 CALL Y$DOIO (CHN_CH, CHN_F, CHCON) ALTRET (GOOP);
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:135  

   5898   3 000396  DBC7 0015                            LAB,B5   CHCON,AUTO
          3 000398  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 00039A  CBC7 0018                            LAB,B4   CHN_F,AUTO
          3 00039C  CFC7 002C                            STB,B4   @CH+2,AUTO
          3 00039E  BBC7 0017                            LAB,B3   CHN_CH,AUTO
          3 0003A0  BFC7 002A                            STB,B3   @BOFS+2,AUTO
          3 0003A2  E3C0 032B                            LNJ,B6   s:0,PREL
          3 0003A4       0052                            DC       s:5928,PREL

      672     5899
      673     5900    7                 IF (CHN.F = %GH#IO_INPNXTCCBSTT OR

   5900   3 0003A5  E847 0016                            LDR,R6   CHN,AUTO
          3 0003A7  E570 003F                            AND,R6   63,IMO
          3 0003A9  6D1A                                 CMV,R6   26
          3 0003AA  0901 0004                            BE       s:5903,PREL
          3 0003AC  6D18                                 CMV,R6   24
          3 0003AD  0981 002A                            BNE      s:5919,PREL

      674     5901    7                         CHN.F = %GH#IO_INPSTT)
      675     5902    7                 THEN
      676     5903    7                    IF CHN.C.X

   5903   3 0003AF  82C7 0016                            LB,'0040'X        CHN,AUTO
   5903   3 0003B1       0040
          3 0003B2  0581 0014                            BBF      s:5912,PREL

      677     5904    7                    THEN
      678     5905    8                         DO;

      679     5906    8                            Y_CLTICM.T2.TEXT(10) = CHCON;

   5906   3 0003B4  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0003B7  D847 0015                            LDR,R5   CHCON,AUTO
          3 0003B9  DF46 000D                            STR,R5   13,B6

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:136  
      680     5907    8                            Y_FLAGS.XCH = %G_ON#;

   5907   3 0003BB  8900 0000 0097  00                   LBT,'0800'X       Y_FLAGS
   5907   3 0003BE       0800

      681     5908    8                            XCHAN = CHN_CH;

   5908   3 0003BF  D847 0017                            LDR,R5   CHN_CH,AUTO
          3 0003C1  5046                                 SOR,R5   6
          3 0003C2  5006                                 SOL,R5   6
          3 0003C3  DF47 0010                            STR,R5   XCHAN,AUTO

      682     5909    8                         END;

   5909   3 0003C5  0F81 0012                            B        s:5919,PREL

      683     5910    7                    ELSE
      684     5911    8                         DO;

      685     5912    8                            Y_CLTICM.T2.TEXT(9) = CHCON;

   5912   3 0003C7  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0003CA  D847 0015                            LDR,R5   CHCON,AUTO
          3 0003CC  DF46 000C                            STR,R5   12,B6

      686     5913    8                            Y_FLAGS.RCH = %G_ON#;

   5913   3 0003CE  8900 0000 0097  00                   LBT,'1000'X       Y_FLAGS
   5913   3 0003D1       1000

      687     5914    8                            RCHAN = CHN_CH;

   5914   3 0003D2  D847 0017                            LDR,R5   CHN_CH,AUTO
          3 0003D4  5046                                 SOR,R5   6
          3 0003D5  5006                                 SOL,R5   6
          3 0003D6  DF47 0011                            STR,R5   RCHAN,AUTO

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:137  
      688     5915    8                         END;

      689     5916
      690     5917    7              END;

      691     5918
      692     5919    6      END;

   5919   3 0003D8  E847 0014                            LDR,R6   ITEM,AUTO
          3 0003DA  6E02                                 ADV,R6   2
          3 0003DB  EF47 0014                            STR,R6   ITEM,AUTO
          3 0003DD  E847 000E                            LDR,R6   NUMIO,AUTO
          3 0003DF  6001                                 SOL,R6   1
          3 0003E0  6EFE                                 ADV,R6   -2
          3 0003E1  6801 0005                            BLZ,R6   s:5921,PREL
          3 0003E3  E947 0014                            CMR,R6   ITEM,AUTO
          3 0003E5  0281 FF82                            BGE      s:5888,PREL

      693     5920
      694     5921    5      IF CHN.F = %GH#IO_INPNXTCCBSTT

   5921   3 0003E7  D847 0016                            LDR,R5   CHN,AUTO
          3 0003E9  D570 003F                            AND,R5   63,IMO
          3 0003EB  5D1A                                 CMV,R5   26
          3 0003EC  0981 0005                            BNE      s:5925,PREL

      695     5922    5      THEN
      696     5923    5         Y_FLAGS.CKRDY = %G_ON#;

   5923   3 0003EE  8900 0000 0097  00                   LBT,'4000'X       Y_FLAGS
   5923   3 0003F1       4000

      697     5924
      698     5925    5      RETURN;

   5925   3 0003F2  ECC7 0012                            LDB,B6   CONX,AUTO
          3 0003F4  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:138  

      699     5926
      700     5927    5   GOOP:
      701     5928    5      ALTRETURN;

   5928   3 0003F6  ECC7 0012            GOOP            LDB,B6   CONX,AUTO
          3 0003F8  B806                                 LDR,R3   ,B6
          3 0003F9  C3B6                                 LNJ,B4   ,B6,R3

      702     5929
      703     5930        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:139  
      704     5931        /*I*  NAME:        Y$XIOLD
      705     5932              PURPOSE:     Execute IOLD's in string I/O
      706     5933              CALL:        CALL Y$XIOLD ALTRET;
      707     5934                           Altreturns if I/O error occurs.
      708     5935              INTERFACE:   This routine calls the following:
      709     5936                            Y$IOLD
      710     5937              DATA:        Uses data in ICM buffer.
      711     5938              DESCRIPTION: Executes IOLD's when they occur in a string
      712     5939                           of I/O commands in the ICM test data.
      713     5940        */
      714     5941        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:140  
      715     5942    5   Y$XIOLD: PROC ALTRET;

   5942   3 0003FA  EFC7 001A            Y$XIOLD         STB,B6   CHN_F+2,AUTO

      716     5943
      717     5944    6      DCL DP$ PTR;
      718     5945    6      DCL BOFS UBIN WORD;
      719     5946
      720     5947    6      IF (Y_DBUFSZ(Y_CLTICM.T1.R1.TSTIND) ~= 0)

   5947   3 0003FC  DC80 0000 00A9                       LDB,B5   169
          3 0003FF  B2C5 0003                            LLH,R3   3,B5
          3 000401  E830 0000 00AC  00                   LDR,R6   Y_DBUFSZ,R3
          3 000404  6901 002B                            BEZ,R6   s:5965,PREL

      721     5948    6      THEN
      722     5949    6         IF Y_FLAGS.CCB

   5949   3 000406  8280 0000 0097  00                   LB,'0400'X        Y_FLAGS
   5949   3 000409       0400
          3 00040A  0581 000E                            BBF      s:5955,PREL

      723     5950    7         THEN DO;

      724     5951    7                 DP$ = ADDR(Y_DBUF(Y_CLTICM.T1.R1.TSTIND * 242));

   5951   3 00040C  BB70 00F2                            MUL,R3   242,IMO
          3 00040E  CBB0 0000 00B4  00                   LAB,B4   Y_DBUF,R3
          3 000411  CFC7 001C                            STB,B4   DP$,AUTO

      725     5952    7                 BOFS = Y_CLTICM.T2.TEXT(10);

   5952   3 000413  E845 000D                            LDR,R6   13,B5
          3 000415  EF47 001E                            STR,R6   BOFS,AUTO

      726     5953    7              END;

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:141  
   5953   3 000417  0F81 001D                            B        s:5969,PREL

      727     5954    6         ELSE
      728     5955    6            IF CHN.C.X

   5955   3 000419  82C7 0016                            LB,'0040'X        CHN,AUTO
   5955   3 00041B       0040
          3 00041C  0581 000C                            BBF      s:5961,PREL

      729     5956    7            THEN DO;

      730     5957    7                    DP$ = ADDR(Y_DBUF(Y_CLTICM.T1.R1.TSTIND * 242));

   5957   3 00041E  BB70 00F2                            MUL,R3   242,IMO
          3 000420  CBB0 0000 00B4  00                   LAB,B4   Y_DBUF,R3
          3 000423  CFC7 001C                            STB,B4   DP$,AUTO

      731     5958    7                    BOFS = 0;

   5958   3 000425  8747 001E                            CL       BOFS,AUTO

      732     5959    7                 END;

   5959   3 000427  0F81 000D                            B        s:5969,PREL

      733     5960    7            ELSE DO;

      734     5961    7                    DP$ = ICM$;

   5961   3 000429  DFC7 001C                            STB,B5   DP$,AUTO

      735     5962    7                    BOFS = %GT_ICMDATOFF#;

   5962   3 00042B  6C1C                                 LDV,R6   28
          3 00042C  EF47 001E                            STR,R6   BOFS,AUTO

      736     5963    7                 END;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:142  

   5963   3 00042E  0F81 0006                            B        s:5969,PREL

      737     5964    7      ELSE DO;

      738     5965    7              DP$ = ICM$;

   5965   3 000430  DFC7 001C                            STB,B5   DP$,AUTO

      739     5966    7              BOFS = %GT_ICMDATOFF#;

   5966   3 000432  6C1C                                 LDV,R6   28
          3 000433  EF47 001E                            STR,R6   BOFS,AUTO

      740     5967    7           END;

      741     5968
      742     5969    6      CALL Y$IOLD (CHN_CH, DP$, BOFS, CHCON) WHENALTRETURN

   5969   3 000435  CBC7 0015                            LAB,B4   CHCON,AUTO
          3 000437  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 000439  BBC7 001E                            LAB,B3   BOFS,AUTO
          3 00043B  BFC7 0028                            STB,B3   @DP$+2,AUTO
          3 00043D  ABC7 001C                            LAB,B2   DP$,AUTO
          3 00043F  AFC7 0026                            STB,B2   @CH+2,AUTO
          3 000441  9BC7 0017                            LAB,B1   CHN_CH,AUTO
          3 000443  9FC7 0024                            STB,B1   @CH+2,AUTO
          3 000445  E3C0 0245                            LNJ,B6   s:0,PREL
          3 000447       0003                            DC       s:5971,PREL
          3 000448  0F81 0005                            B        s:5974,PREL

      743     5970    7           DO;

      744     5971    7              ALTRETURN;

   5971   3 00044A  ECC7 001A                            LDB,B6   CHN_F+2,AUTO
          3 00044C  B806                                 LDR,R3   ,B6
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:143  
          3 00044D  C3B6                                 LNJ,B4   ,B6,R3

      745     5972    7           END;
      746     5973
      747     5974    6      RETURN;

   5974   3 00044E  ECC7 001A                            LDB,B6   CHN_F+2,AUTO
          3 000450  C3C6 0001                            LNJ,B4   1,B6

      748     5975
      749     5976    6   END Y$XIOLD;
      750     5977
      751     5978    5   END Y$XECIO;
      752     5979
      753     5980    4   END Y$IOSTR;
      754     5981
      755     5982        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:144  
      756     5983        /*I*  NAME:        Y$XDATA
      757     5984              PURPOSE:     Save transmit data
      758     5985              CALL:        CALL Y$XDATA;
      759     5986                           Does not altreturn.
      760     5987              INTERFACE:   None.
      761     5988              DATA:        Uses data in ICM buffer (pointer ICM$).
      762     5989              DESCRIPTION: Moves transmit data from ICM buffer to
      763     5990                           temporary storage area.
      764     5991        */
      765     5992        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:145  
      766     5993    3   Y$XDATA: PROC;

   5993   3 000452  EFC7 000A            Y$XDATA         STB,B6   CHAD,AUTO

      767     5994
      768     5995    4      DCL 1 Y_BUFTMP BASED ALIGNED,
      769     5996    4            2 BUFBYT (0:483) UBIN BYTE UNAL;
      770     5997
      771     5998    4      DCL BUF1$ PTR;
      772     5999
      773     6000    4      DCL BUF2$ PTR;
      774     6001
      775     6002    4      Y_DBUFSZ (Y_CLTICM.T1.R1.TSTIND) = 242;

   6002   3 000454  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000457  B2C5 0003                            LLH,R3   3,B5
          3 000459  E870 00F2                            LDR,R6   242,IMO
          3 00045B  EF30 0000 00AC  00                   STR,R6   Y_DBUFSZ,R3

      776     6003
      777     6004    4      BUF1$ = PINCRW (ICM$, %Y#ICMOFS);

   6004   3 00045E  CBC5 000E                            LAB,B4   14,B5
          3 000460  CFC7 000C                            STB,B4   BUF1$,AUTO

      778     6005
      779     6006    4      BUF2$ = ADDR(Y_DBUF (Y_CLTICM.T1.R1.TSTIND * 242) );

   6006   3 000462  BB70 00F2                            MUL,R3   242,IMO
          3 000464  BBB0 0000 00B4  00                   LAB,B3   Y_DBUF,R3
          3 000467  BFC7 000E                            STB,B3   BUF2$,AUTO

      780     6007
      781     6008    4      BUF2$ -> Y_BUFTMP = BUF1$ -> Y_BUFTMP;

   6008   3 000469  AB84                                 LAB,B2   ,B4
          3 00046A  2C00                                 LDV,R2   0
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:146  
          3 00046B  E870 01E4                            LDR,R6   484,IMO
          3 00046D  3C00                                 LDV,R3   0
          3 00046E  0008                                 MMM

      782     6009
      783     6010    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6010   3 00046F  6C21                                 LDV,R6   33
          3 000470  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000473  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000475       00FF

      784     6011
      785     6012    4      RETURN;

   6012   3 000476  ECC7 000A                            LDB,B6   CHAD,AUTO
          3 000478  C3C6 0001                            LNJ,B4   1,B6

      786     6013
      787     6014    4   END Y$XDATA;
      788     6015
      789     6016        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:147  
      790     6017        /*I*  NAME:        Y$SWRDS
      791     6018              PURPOSE:     Execute string of single-word reads
      792     6019              CALL:        CALL Y$SWRDS;
      793     6020                           Does not altreturn.
      794     6021              INTERFACE:   This routine calls the following:
      795     6022                            Y$IOREAD
      796     6023              DATA:        Uses data in ICM buffer (pointer ICM$).
      797     6024              DESCRIPTION: Executes a string of single-word read I/O's
      798     6025                           when they appear in the ICM test data.
      799     6026        */
      800     6027        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:148  
      801     6028    3   Y$SWRDS: PROC;

   6028   3 00047A  EFC7 000A            Y$SWRDS         STB,B6   CHAD,AUTO

      802     6029
      803     6030    4      DCL INX UBIN WORD;
      804     6031    4      DCL NUMIO UBIN WORD;
      805     6032
      806     6033    4      INX = %GT_STRDATOFS#;

   6033   3 00047C  6C0B                                 LDV,R6   11
          3 00047D  EF47 000C                            STR,R6   INX,AUTO

      807     6034
      808     6035    4      NUMIO = Y_CLTICM.T1.TSTDAT(3);

   6035   3 00047F  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000482  D845 000B                            LDR,R5   11,B5
          3 000484  D570 00FF                            AND,R5   255,IMO
          3 000486  DF47 000D                            STR,R5   NUMIO,AUTO

      809     6036
      810     6037    4      CALL Y$IOREAD ALTRET (BAMO);

   6037   3 000488  E3C0 000D                            LNJ,B6   s:0,PREL
          3 00048A       0008                            DC       s:6042,PREL

      811     6038
      812     6039    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6039   3 00048B  6C21                                 LDV,R6   33
          3 00048C  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00048F  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000491       00FF

      813     6040
      814     6041    4   BAMO:
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:149  
      815     6042    4      RETURN;

   6042   3 000492  ECC7 000A            BAMO            LDB,B6   CHAD,AUTO
          3 000494  C3C6 0001                            LNJ,B4   1,B6

      816     6043
      817     6044        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:150  
      818     6045        /*I*  NAME:        Y$IOREAD
      819     6046              PURPOSE:     Perform single-word read I/O's
      820     6047              CALL:        CALL Y$IOREAD ALTRET;
      821     6048                           Altreturns if an I/O error occurs.
      822     6049              INTERFACE:   This routine calls the following:
      823     6050                            Y$DOIO
      824     6051              DATA:        Uses data in ICM buffer.
      825     6052              DESCRIPTION: Performs multiple reads of specified MLC16
      826     6053                           RAM bytes as per ICM test data.  The bytes
      827     6054                           read are placed in the corresponding CF data
      828     6055                           words of the ICM (a single byte, left justified,
      829     6056                           in each CF word).  The corresponding ML data
      830     6057                           words in the ICM are zeroed.
      831     6058        */
      832     6059        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:151  
      833     6060    4   Y$IOREAD: PROC ALTRET;

   6060   3 000496  EFC7 000E            Y$IOREAD        STB,B6   BUF2$,AUTO

      834     6061
      835     6062    5      DCL ITEM UBIN WORD;
      836     6063    5      DCL CON UBIN WORD;
      837     6064    5      DCL 1 CHN ALIGNED,
      838     6065    5            2 C UBIN(10) UNAL,
      839     6066    5            2 F UBIN(6) UNAL;
      840     6067    5      DCL CHN_C UBIN(10) ALIGNED;
      841     6068    5      DCL CHN_F UBIN(6) ALIGNED;
      842     6069
      843     6070    6      DO ITEM = 0 TO 2*(NUMIO - 1) BY 2;

   6070   3 000498  8747 0010                            CL       ITEM,AUTO
          3 00049A  0F81 0053                            B        s:6085+5,PREL

      844     6071
      845     6072    6         CON = Y_CLTICM.T2.TEXT(INX + ITEM);

   6072   3 00049C  E847 000C                            LDR,R6   INX,AUTO
          3 00049E  EA47 0010                            ADD,R6   ITEM,AUTO
          3 0004A0  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0004A3  B856                                 LDR,R3   R6
          3 0004A4  3E03                                 ADV,R3   3
          3 0004A5  E836                                 LDR,R6   ,B6,R3
          3 0004A6  EF47 0011                            STR,R6   CON,AUTO

      846     6073    6         CHN = Y_CLTICM.T2.ICMTXT(INX + ITEM + 1);

   6073   3 0004A8  D847 000C                            LDR,R5   INX,AUTO
          3 0004AA  DA47 0010                            ADD,R5   ITEM,AUTO
          3 0004AC  B855                                 LDR,R3   R5
          3 0004AD  3E04                                 ADV,R3   4
          3 0004AE  D836                                 LDR,R5   ,B6,R3
          3 0004AF  DF47 0012                            STR,R5   CHN,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:152  

      847     6074    6         CHN_C = CHN.C;

   6074   3 0004B1  C847 0012                            LDR,R4   CHN,AUTO
          3 0004B3  4046                                 SOR,R4   6
          3 0004B4  4006                                 SOL,R4   6
          3 0004B5  CF47 0013                            STR,R4   CHN_C,AUTO

      848     6075    6         CHN_F = CHN.F;

   6075   3 0004B7  C847 0012                            LDR,R4   CHN,AUTO
          3 0004B9  C570 003F                            AND,R4   63,IMO
          3 0004BB  400A                                 SOL,R4   10
          3 0004BC  CF47 0014                            STR,R4   CHN_F,AUTO

      849     6076
      850     6077    6         CALL Y$DOIO (CHN_C, CHN_F, CON) WHENALTRETURN

   6077   3 0004BE  DBC7 0011                            LAB,B5   CON,AUTO
          3 0004C0  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 0004C2  CBC7 0014                            LAB,B4   CHN_F,AUTO
          3 0004C4  CFC7 002C                            STB,B4   @CH+2,AUTO
          3 0004C6  BBC7 0013                            LAB,B3   CHN_C,AUTO
          3 0004C8  BFC7 002A                            STB,B3   @BOFS+2,AUTO
          3 0004CA  E3C0 0203                            LNJ,B6   s:0,PREL
          3 0004CC       0003                            DC       s:6079,PREL
          3 0004CD  0F81 0005                            B        s:6082,PREL

      851     6078    7              DO;

      852     6079    7                 ALTRETURN;

   6079   3 0004CF  ECC7 000E                            LDB,B6   BUF2$,AUTO
          3 0004D1  B806                                 LDR,R3   ,B6
          3 0004D2  C3B6                                 LNJ,B4   ,B6,R3

      853     6080    7              END;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:153  
      854     6081
      855     6082    6         Y_CLTICM.T2.TEXT(INX + ITEM) = 0;

   6082   3 0004D3  E847 000C                            LDR,R6   INX,AUTO
          3 0004D5  EA47 0010                            ADD,R6   ITEM,AUTO
          3 0004D7  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0004DA  B856                                 LDR,R3   R6
          3 0004DB  3E03                                 ADV,R3   3
          3 0004DC  8736                                 CL       ,B6,R3

      856     6083    6         Y_CLTICM.T2.TEXT(INX + ITEM + 1) = CON;

   6083   3 0004DD  E847 000C                            LDR,R6   INX,AUTO
          3 0004DF  EA47 0010                            ADD,R6   ITEM,AUTO
          3 0004E1  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0004E4  B856                                 LDR,R3   R6
          3 0004E5  3E04                                 ADV,R3   4
          3 0004E6  E847 0011                            LDR,R6   CON,AUTO
          3 0004E8  EF36                                 STR,R6   ,B6,R3

      857     6084
      858     6085    6      END;

   6085   3 0004E9  E847 0010                            LDR,R6   ITEM,AUTO
          3 0004EB  6E02                                 ADV,R6   2
          3 0004EC  EF47 0010                            STR,R6   ITEM,AUTO
          3 0004EE  E847 000D                            LDR,R6   NUMIO,AUTO
          3 0004F0  6001                                 SOL,R6   1
          3 0004F1  6EFE                                 ADV,R6   -2
          3 0004F2  6801 0005                            BLZ,R6   s:6087,PREL
          3 0004F4  E947 0010                            CMR,R6   ITEM,AUTO
          3 0004F6  0281 FFA5                            BGE      s:6072,PREL

      859     6086
      860     6087    5      RETURN;

   6087   3 0004F8  ECC7 000E                            LDB,B6   BUF2$,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:154  
          3 0004FA  C3C6 0001                            LNJ,B4   1,B6

      861     6088
      862     6089    5   END Y$IOREAD;
      863     6090
      864     6091    4   END Y$SWRDS;
      865     6092
      866     6093        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:155  
      867     6094        /*I*  NAME:        Y$BMWUP
      868     6095              PURPOSE:     Block mode write using supplied pointer
      869     6096              CALL:        CALL Y$BMWUP;
      870     6097                           Does not altreturn.
      871     6098              INTERFACE:   This routine calls the following:
      872     6099                            Y$WRBLK
      873     6100              DATA:        Uses data in ICM buffer (pointer ICM$).
      874     6101              DESCRIPTION: This routine moves a block of data from the
      875     6102                           ICM buffer into the MLC16 RAM using the RAM
      876     6103                           address supplied in the ICM.
      877     6104        */
      878     6105        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:156  
      879     6106    3   Y$BMWUP: PROC;

   6106   3 0004FC  EFC7 000A            Y$BMWUP         STB,B6   CHAD,AUTO

      880     6107
      881     6108    4      DCL RAMAD UBIN WORD;
      882     6109    4      DCL CH UBIN(10) ALIGNED;
      883     6110
      884     6111    4      RAMAD = Y_CLTICM.T2.TEXT(9);

   6111   3 0004FE  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000501  E845 000C                            LDR,R6   12,B5
          3 000503  EF47 000C                            STR,R6   RAMAD,AUTO

      885     6112
      886     6113    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (SHAZAM);

   6113   3 000505  CBC7 000C                            LAB,B4   RAMAD,AUTO
          3 000507  CFC7 0014                            STB,B4   CHN_F,AUTO
          3 000509  BBC7 000D                            LAB,B3   CH,AUTO
          3 00050B  BFC7 0012                            STB,B3   CHN,AUTO
          3 00050D  E3C0 0060                            LNJ,B6   s:0,PREL
          3 00050F       0008                            DC       s:6118,PREL

      887     6114
      888     6115    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6115   3 000510  6C21                                 LDV,R6   33
          3 000511  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000514  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000516       00FF

      889     6116
      890     6117    4   SHAZAM:
      891     6118    4      RETURN;

   6118   3 000517  ECC7 000A            SHAZAM          LDB,B6   CHAD,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:157  
          3 000519  C3C6 0001                            LNJ,B4   1,B6

      892     6119
      893     6120    4   END Y$BMWUP;
      894     6121
      895     6122        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:158  
      896     6123        /*I*  NAME:        Y$XEDAT
      897     6124              PURPOSE:     Implement transmit CCP (even line)
      898     6125              CALL:        CALL Y$XEDAT;
      899     6126                           Does not altreturn.
      900     6127              INTERFACE:   This routine calls the following:
      901     6128                            Y$XCCP
      902     6129              DATA:        Uses data in ICM buffer (pointer ICM$).
      903     6130              DESCRIPTION: This routine changes the odd line address to
      904     6131                           even line and moves the data for the transmit
      905     6132                           CCP from the ICM to the MLC16 RAM (even line).
      906     6133                           It then stores the pointer to the CCP into
      907     6134                           LCT bytes 38 and 39 in the RAM.
      908     6135        */
      909     6136        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:159  
      910     6137    3   Y$XEDAT: PROC;

   6137   3 00051B  EFC7 000A            Y$XEDAT         STB,B6   CHAD,AUTO

      911     6138
      912     6139    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR | %GT_ODDLINBIT#;

   6139   3 00051D  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000520  E845 0005                            LDR,R6   5,B5
          3 000522  E470 0080                            OR,R6    128,IMO
          3 000524  EF45 0005                            STR,R6   5,B5

      913     6140    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR \ %GT_ODDLINBIT#;

   6140   3 000526  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000529  E846 0005                            LDR,R6   5,B6
          3 00052B  E670 0080                            XOR,R6   128,IMO
          3 00052D  EF46 0005                            STR,R6   5,B6

      914     6141
      915     6142    4      CALL Y$XCCP;

   6142   3 00052F  E3C0 FD4F                            LNJ,B6   s:0,PREL
          3 000531       0001                            DC       s:6144,PREL

      916     6143
      917     6144    4      RETURN;

   6144   3 000532  ECC7 000A                            LDB,B6   CHAD,AUTO
          3 000534  C3C6 0001                            LNJ,B4   1,B6

      918     6145
      919     6146    4   END Y$XEDAT;
      920     6147
      921     6148        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:160  
      922     6149        /*I*  NAME:        Y$PRCCP
      923     6150              PURPOSE:     Implement partial receive CCP
      924     6151              CALL:        CALL Y$PRCCP;
      925     6152                           Does not altreturn.
      926     6153              INTERFACE:   This routine calls the following:
      927     6154                            Y$WRBLK
      928     6155              DATA:        Uses data in ICM buffer (pointer ICM$).
      929     6156              DESCRIPTION: Moves first part of receive CCP data from
      930     6157                           the ICM buffer into the MLC16 RAM.
      931     6158        */
      932     6159        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:161  
      933     6160    3   Y$PRCCP: PROC;

   6160   3 000536  EFC7 000A            Y$PRCCP         STB,B6   CHAD,AUTO

      934     6161
      935     6162    4      DCL RAMAD UBIN WORD;
      936     6163    4      DCL CH UBIN(10) ALIGNED;
      937     6164
      938     6165    4      RAMAD = %Y#RCVRAM;

   6165   3 000538  E870 0CD4                            LDR,R6   3284,IMO
          3 00053A  EF47 000C                            STR,R6   RAMAD,AUTO

      939     6166
      940     6167    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (EGAD);

   6167   3 00053C  DBC7 000C                            LAB,B5   RAMAD,AUTO
          3 00053E  DFC7 0014                            STB,B5   CHN_F,AUTO
          3 000540  CBC7 000D                            LAB,B4   CH,AUTO
          3 000542  CFC7 0012                            STB,B4   CHN,AUTO
          3 000544  E3C0 0029                            LNJ,B6   s:0,PREL
          3 000546       0008                            DC       s:6172,PREL

      941     6168
      942     6169    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6169   3 000547  6C21                                 LDV,R6   33
          3 000548  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00054B  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 00054D       00FF

      943     6170
      944     6171    4   EGAD:
      945     6172    4      RETURN;

   6172   3 00054E  ECC7 000A            EGAD            LDB,B6   CHAD,AUTO
          3 000550  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:162  

      946     6173
      947     6174    4   END Y$PRCCP;
      948     6175
      949     6176        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:163  
      950     6177        /*I*  NAME:        Y$PXCCP;
      951     6178              PURPOSE:     Implement partial transmit CCP
      952     6179              CALL:        CALL Y$PXCCP;
      953     6180                           Does not altreturn.
      954     6181              INTERFACE:   This routine calls the following:
      955     6182                            Y$WRBLK
      956     6183              DATA:        Uses data in ICM buffer (pointer ICM$).
      957     6184              DESCRIPTION: Moves first part of transmit CCP data from
      958     6185                           the ICM buffer into the MLC16 RAM.
      959     6186        */
      960     6187        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:164  
      961     6188    3   Y$PXCCP: PROC;

   6188   3 000552  EFC7 000A            Y$PXCCP         STB,B6   CHAD,AUTO

      962     6189
      963     6190    4      DCL RAMAD UBIN WORD;
      964     6191    4      DCL CH UBIN(10) ALIGNED;
      965     6192
      966     6193    4      RAMAD = %Y#XMTRAM;

   6193   3 000554  E870 0D6A                            LDR,R6   3434,IMO
          3 000556  EF47 000C                            STR,R6   RAMAD,AUTO

      967     6194
      968     6195    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (ZOUNDS);

   6195   3 000558  DBC7 000C                            LAB,B5   RAMAD,AUTO
          3 00055A  DFC7 0014                            STB,B5   CHN_F,AUTO
          3 00055C  CBC7 000D                            LAB,B4   CH,AUTO
          3 00055E  CFC7 0012                            STB,B4   CHN,AUTO
          3 000560  E3C0 000D                            LNJ,B6   s:0,PREL
          3 000562       0008                            DC       s:6200,PREL

      969     6196
      970     6197    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6197   3 000563  6C21                                 LDV,R6   33
          3 000564  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000567  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000569       00FF

      971     6198
      972     6199    4   ZOUNDS:
      973     6200    4      RETURN;

   6200   3 00056A  ECC7 000A            ZOUNDS          LDB,B6   CHAD,AUTO
          3 00056C  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:165  

      974     6201
      975     6202    4   END Y$PXCCP;
      976     6203
      977     6204        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:166  
      978     6205        /*I*  NAME:        Y$WRBLK
      979     6206              PURPOSE:     Move ICM data to MLC16 RAM
      980     6207              CALL:        CALL Y$WRBLK (CH, RAMAD) ALTRET;
      981     6208                           Altreturns if an I/O error occurs.
      982     6209              PARAMETERS:  RAMAD is an input parameter containing the RAM
      983     6210                           address.
      984     6211                           CH is an output parameter containing the
      985     6212                           channel address.
      986     6213              INTERFACE:   This routine calls the following:
      987     6214                            Y$BMW
      988     6215                            M$WAIT
      989     6216                            Y$STATUS
      990     6217                            Y$CKSTAT
      991     6218              DATA:        Uses data in ICM buffer.
      992     6219              DESCRIPTION: Moves a block of ICM data using the ICM buffer
      993     6220                           (starting at word 14) into the MLC16 RAM at the
      994     6221                           previously set-up Ram address.
      995     6222        */
      996     6223        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:167  
      997     6224    3   Y$WRBLK: PROC (CH, RAMAD) ALTRET;

   6224   3 00056E  EFC7 0010            Y$WRBLK         STB,B6   ITEM,AUTO

      998     6225
      999     6226    4      DCL RAMAD UBIN WORD;
     1000     6227    4      DCL STAT BIT(16) ALIGNED;
     1001     6228    4      DCL CH UBIN(10) ALIGNED;
     1002     6229
     1003     6230    4      CALL Y$BMW (CH, RAMAD) ALTRET (BADUN);

   6230   3 000570  DCC7 0014                            LDB,B5   @RAMAD,AUTO
          3 000572  DFC7 001C                            STB,B5   DP$,AUTO
          3 000574  CCC7 0012                            LDB,B4   @CH,AUTO
          3 000576  CFC7 001A                            STB,B4   CHN_F+2,AUTO
          3 000578  E3C0 0023                            LNJ,B6   s:0,PREL
          3 00057A       001E                            DC       s:6239,PREL

     1004     6231
     1005     6232    4      CALL M$WAIT (WAIT_IO);

   6232   3 00057B  BB80 0000 0062  00                   LAB,B3   WAIT_IO
          3 00057E  B870 0CC5                            LDR,R3   3269,IMO
          3 000580  0001                                 MCL
          3 000581       0000                            DC       s:6232+6,PREL

     1006     6233
     1007     6234    4      CALL Y$STATUS (CH, STAT) ALTRET (BADUN);

   6234   3 000582  EBC7 0016                            LAB,B6   STAT,AUTO
          3 000584  EFC7 0024                            STB,B6   @CH+2,AUTO
          3 000586  DCC7 0012                            LDB,B5   @CH,AUTO
          3 000588  DFC7 0022                            STB,B5   BSIZ+1,AUTO
          3 00058A  E3C0 008C                            LNJ,B6   s:0,PREL
          3 00058C       000C                            DC       s:6239,PREL

     1008     6235
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:168  
     1009     6236    4      CALL Y$CKSTAT (CH, STAT) ALTRET (BADUN);

   6236   3 00058D  EBC7 0016                            LAB,B6   STAT,AUTO
          3 00058F  EFC7 001C                            STB,B6   DP$,AUTO
          3 000591  DCC7 0012                            LDB,B5   @CH,AUTO
          3 000593  DFC7 001A                            STB,B5   CHN_F+2,AUTO
          3 000595  E3C0 00C5                            LNJ,B6   s:0,PREL
          3 000597       0001                            DC       s:6239,PREL

     1010     6237
     1011     6238    4   BADUN:
     1012     6239    4      RETURN;

   6239   3 000598  ECC7 0010            BADUN           LDB,B6   ITEM,AUTO
          3 00059A  C3C6 0001                            LNJ,B4   1,B6

     1013     6240
     1014     6241    4   END Y$WRBLK;
     1015     6242
     1016     6243        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:169  
     1017     6244        /*I*  NAME:        Y$BMW
     1018     6245              PURPOSE:     Move ICM data to MLC16 RAM
     1019     6246              CALL:        CALL Y$BMW (CH, RAD) ALTRET;
     1020     6247                           Altreturns if an I/O error occurs.
     1021     6248              PARAMETERS:  RAD is an input parameter containing the RAM
     1022     6249                           address.
     1023     6250                           CH is an output parameter containing the
     1024     6251                           channel address.
     1025     6252              INTERFACE:   This routine calls the following:
     1026     6253                            Y$IOLD
     1027     6254                            Y$DOIO
     1028     6255              DATA:        Uses data in ICM buffer.
     1029     6256              DESCRIPTION: Moves a block of ICM data using the ICM buffer
     1030     6257                           (starting at word 14) into the MLC16 RAM at the
     1031     6258                           previously set-up Ram address.
     1032     6259        */
     1033     6260        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:170  
     1034     6261    3   Y$BMW: PROC (CH, RAD) ALTRET;

   6261   3 00059C  EFC7 0018            Y$BMW           STB,B6   CHN_F,AUTO

     1035     6262
     1036     6263    4      DCL RAD UBIN WORD;
     1037     6264    4      DCL CH UBIN(10) ALIGNED;
     1038     6265    4      DCL FC UBIN(6) ALIGNED;
     1039     6266    4      DCL STAT BIT(16) ALIGNED;
     1040     6267    4      DCL BOFS UBIN WORD;
     1041     6268    4      DCL BSIZ UBIN WORD;
     1042     6269
     1043     6270    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR | %GT_OTPCHNBIT#;

   6270   3 00059E  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0005A1  E845 0005                            LDR,R6   5,B5
          3 0005A3  E470 0040                            OR,R6    64,IMO
          3 0005A5  EF45 0005                            STR,R6   5,B5

     1044     6271    4      CH = Y_CLTICM.T1.R1.CHNLNR.CH;

   6271   3 0005A7  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0005AA  DCC7 001A                            LDB,B5   @CH,AUTO
          3 0005AC  E846 0005                            LDR,R6   5,B6
          3 0005AE  6046                                 SOR,R6   6
          3 0005AF  6006                                 SOL,R6   6
          3 0005B0  EF05                                 STR,R6   ,B5

     1045     6272    4      BOFS = %GT_ICMDATOFF#;

   6272   3 0005B1  6C1C                                 LDV,R6   28
          3 0005B2  EF47 0020                            STR,R6   BOFS,AUTO

     1046     6273    4      BSIZ = Y_CLTICM.T1.TSTDAT(1) * 2;

   6273   3 0005B4  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0005B7  D846 000A                            LDR,R5   10,B6
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:171  
          3 0005B9  5001                                 SOL,R5   1
          3 0005BA  D570 01FE                            AND,R5   510,IMO
          3 0005BC  DF47 0021                            STR,R5   BSIZ,AUTO

     1047     6274    4      CALL Y$IOLD (CH, ICM$, BOFS, BSIZ) ALTRET (ZONK);

   6274   3 0005BE  CBC7 0021                            LAB,B4   BSIZ,AUTO
          3 0005C0  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0005C2  BBC7 0020                            LAB,B3   BOFS,AUTO
          3 0005C4  BFC7 0028                            STB,B3   @DP$+2,AUTO
          3 0005C6  AB80 0000 00A9  00                   LAB,B2   ICM$
          3 0005C9  AFC7 0026                            STB,B2   @CH+2,AUTO
          3 0005CB  DFC7 0024                            STB,B5   @CH+2,AUTO
          3 0005CD  E3C0 00BD                            LNJ,B6   s:0,PREL
          3 0005CF       0044                            DC       s:6290,PREL

     1048     6275
     1049     6276    4      FC = %GH#IO_OTPCCBCTR;

   6276   3 0005D0  E870 3C00                            LDR,R6   15360,IMO
          3 0005D2  EF47 001E                            STR,R6   FC,AUTO

     1050     6277    4      CALL Y$DOIO (CH, FC, RAD) ALTRET (ZONK);

   6277   3 0005D4  ECC7 001C                            LDB,B6   @RAD,AUTO
          3 0005D6  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 0005D8  DBC7 001E                            LAB,B5   FC,AUTO
          3 0005DA  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 0005DC  CCC7 001A                            LDB,B4   @CH,AUTO
          3 0005DE  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0005E0  E3C0 00ED                            LNJ,B6   s:0,PREL
          3 0005E2       0031                            DC       s:6290,PREL

     1051     6278
     1052     6279    4      FC = %GH#IO_OTPCHNCTR;

   6279   3 0005E3  E870 1400                            LDR,R6   5120,IMO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:172  
          3 0005E5  EF47 001E                            STR,R6   FC,AUTO

     1053     6280    4      STAT = %GT_STTBLMWRT#;

   6280   3 0005E7  D870 0400                            LDR,R5   1024,IMO
          3 0005E9  DF47 001F                            STR,R5   STAT,AUTO

     1054     6281    4      CALL Y$DOIO (CH, FC, STAT) ALTRET (ZONK);

   6281   3 0005EB  EBC7 001F                            LAB,B6   STAT,AUTO
          3 0005ED  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 0005EF  DBC7 001E                            LAB,B5   FC,AUTO
          3 0005F1  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 0005F3  CCC7 001A                            LDB,B4   @CH,AUTO
          3 0005F5  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0005F7  E3C0 00D6                            LNJ,B6   s:0,PREL
          3 0005F9       001A                            DC       s:6290,PREL

     1055     6282
     1056     6283    4      FC = %GH#IO_INPNXTCCBSTT;

   6283   3 0005FA  E870 6800                            LDR,R6   26624,IMO
          3 0005FC  EF47 001E                            STR,R6   FC,AUTO

     1057     6284    4      STAT = '0'B;

   6284   3 0005FE  8747 001F                            CL       STAT,AUTO

     1058     6285    4      CALL Y$DOIO (CH, FC, STAT) ALTRET (ZONK);

   6285   3 000600  EBC7 001F                            LAB,B6   STAT,AUTO
          3 000602  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 000604  DBC7 001E                            LAB,B5   FC,AUTO
          3 000606  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 000608  CCC7 001A                            LDB,B4   @CH,AUTO
          3 00060A  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 00060C  E3C0 00C1                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:173  
          3 00060E       0005                            DC       s:6290,PREL

     1059     6286
     1060     6287    4      RETURN;

   6287   3 00060F  ECC7 0018                            LDB,B6   CHN_F,AUTO
          3 000611  C3C6 0001                            LNJ,B4   1,B6

     1061     6288
     1062     6289    4   ZONK:
     1063     6290    4      ALTRETURN;

   6290   3 000613  ECC7 0018            ZONK            LDB,B6   CHN_F,AUTO
          3 000615  B806                                 LDR,R3   ,B6
          3 000616  C3B6                                 LNJ,B4   ,B6,R3

     1064     6291
     1065     6292    4   END Y$BMW;
     1066     6293
     1067     6294        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:174  
     1068     6295        /*I*  NAME:        Y$STATUS
     1069     6296              PURPOSE:     Obtain and save status word
     1070     6297              CALL:        CALL Y$STATUS (CH, STAT) ALTRET;
     1071     6298                           Altreturns if an I/O error occurs.
     1072     6299              PARAMETERS:  CH is an INPUT parameter containing the
     1073     6300                           channel address.
     1074     6301                           STAT is an output parameter containing the
     1075     6302                           status.
     1076     6303              INTERFACE:   This routine calls the following:
     1077     6304                            Y$DOIO
     1078     6305                            Y$SAVSTT
     1079     6306              DATA:        Saves status in ICM buffer (pointer ICM$).
     1080     6307              DESCRIPTION: Executes I/O to obtain status word per
     1081     6308                           given channel address and saves status
     1082     6309                           in reply ICM.
     1083     6310        */
     1084     6311        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:175  
     1085     6312    3   Y$STATUS: PROC (CH, STAT) ALTRET;

   6312   3 000617  EFC7 0020            Y$STATUS        STB,B6   BOFS,AUTO

     1086     6313
     1087     6314    4      DCL STAT BIT(16) ALIGNED;
     1088     6315    4      DCL 1 CH ALIGNED,
     1089     6316    4            2 M UBIN(9) UNAL,
     1090     6317    4            2 X BIT(1) UNAL;
     1091     6318    4      DCL FC UBIN(6) ALIGNED;
     1092     6319
     1093     6320    4      STAT = '0'B;

   6320   3 000619  DCC7 0024                            LDB,B5   @STAT,AUTO
          3 00061B  8705                                 CL       ,B5

     1094     6321    4      FC = %GH#IO_INPCCBSTT;

   6321   3 00061C  E870 6000                            LDR,R6   24576,IMO
          3 00061E  EF47 0026                            STR,R6   FC,AUTO

     1095     6322
     1096     6323    4      CALL Y$DOIO (CH, FC, STAT) WHENALTRETURN

   6323   3 000620  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 000622  EBC7 0026                            LAB,B6   FC,AUTO
          3 000624  EFC7 002C                            STB,B6   @CH+2,AUTO
          3 000626  CCC7 0022                            LDB,B4   @CH,AUTO
          3 000628  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 00062A  E3C0 00A3                            LNJ,B6   s:0,PREL
          3 00062C       0003                            DC       s:6325,PREL
          3 00062D  0F81 0008                            B        s:6329,PREL

     1097     6324    5           DO;

     1098     6325    5              CALL Y$SAVSTT;

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:176  
   6325   3 00062F  E3C0 000D                            LNJ,B6   s:0,PREL
          3 000631       0001                            DC       s:6326,PREL

     1099     6326    5              ALTRETURN;

   6326   3 000632  ECC7 0020                            LDB,B6   BOFS,AUTO
          3 000634  B806                                 LDR,R3   ,B6
          3 000635  C3B6                                 LNJ,B4   ,B6,R3

     1100     6327    5           END;
     1101     6328
     1102     6329    4      CALL Y$SAVSTT;

   6329   3 000636  E3C0 0006                            LNJ,B6   s:0,PREL
          3 000638       0001                            DC       s:6331,PREL

     1103     6330
     1104     6331    4      RETURN;

   6331   3 000639  ECC7 0020                            LDB,B6   BOFS,AUTO
          3 00063B  C3C6 0001                            LNJ,B4   1,B6

     1105     6332
     1106     6333        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:177  
     1107     6334        /*I*  NAME:        Y$SAVSTT
     1108     6335              PURPOSE:     Save status word
     1109     6336              CALL:        CALL Y$SAVSTT;
     1110     6337                           Does not altreturn.
     1111     6338              INTERFACE:   None.
     1112     6339              DATA:        ICM buffer (pointer ICM$).
     1113     6340              DESCRIPTION: Determines location in ICM buffer
     1114     6341                           to save status, and saves it there.
     1115     6342                           An output status is saved in word 13 of
     1116     6343                           the ICM.  An input status is saved in
     1117     6344                           word 12.
     1118     6345        */
     1119     6346        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:178  
     1120     6347    4   Y$SAVSTT: PROC;

   6347   3 00063D  EFC7 0028            Y$SAVSTT        STB,B6   @DP$+2,AUTO

     1121     6348
     1122     6349    5      IF CH.X

   6349   3 00063F  DCC7 0022                            LDB,B5   @CH,AUTO
          3 000641  8285                                 LB,'0040'X        ,B5
          3 000642       0040
          3 000643  0581 000B                            BBF      s:6353,PREL

     1123     6350    5      THEN
     1124     6351    5         Y_CLTICM.T2.ICMTXT(10) = STAT;

   6351   3 000645  CC80 0000 00A9  00                   LDB,B4   ICM$
          3 000648  BCC7 0024                            LDB,B3   @STAT,AUTO
          3 00064A  E803                                 LDR,R6   ,B3
          3 00064B  EF44 000D                            STR,R6   13,B4
          3 00064D  0F81 0009                            B        s:6355,PREL

     1125     6352    5      ELSE
     1126     6353    5         Y_CLTICM.T2.ICMTXT(9) = STAT;

   6353   3 00064F  CC80 0000 00A9  00                   LDB,B4   ICM$
          3 000652  BCC7 0024                            LDB,B3   @STAT,AUTO
          3 000654  E803                                 LDR,R6   ,B3
          3 000655  EF44 000C                            STR,R6   12,B4

     1127     6354
     1128     6355    5      RETURN;

   6355   3 000657  ECC7 0028                            LDB,B6   @DP$+2,AUTO
          3 000659  C3C6 0001                            LNJ,B4   1,B6

     1129     6356
     1130     6357    5   END Y$SAVSTT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:179  
     1131     6358
     1132     6359    4   END Y$STATUS;
     1133     6360
     1134     6361        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:180  
     1135     6362        /*I*  NAME:        Y$CKSTAT
     1136     6363              PURPOSE:     Check for valid status
     1137     6364              CALL:        CALL Y$CKSTAT (CH, STAT) ALTRET;
     1138     6365                           Altreturns if an I/O error occurs or
     1139     6366                           if timer runout occurs before a valid
     1140     6367                           status.
     1141     6368              PARAMETERS:  CH is an INPUT parameter containing the
     1142     6369                           pertinent channel address.
     1143     6370                           STAT is an input and output parameter
     1144     6371                           containing the status.
     1145     6372              INTERFACE:   This routine calls the following:
     1146     6373                            M$WAIT
     1147     6374                            Y$STATUS
     1148     6375                            Y$IOER
     1149     6376              DATA:        ICM buffer (pointer ICM$).
     1150     6377              DESCRIPTION: Checks status word in the FPT for device
     1151     6378                           ready.  If status is not ready, routine
     1152     6379                           then waits a short time and issues a new
     1153     6380                           status request.  This status is then
     1154     6381                           checked for ready.  Cycle continues until
     1155     6382                           either a valid status is obtained or a
     1156     6383                           timeout occurs.
     1157     6384        */
     1158     6385        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:181  
     1159     6386    3   Y$CKSTAT: PROC (CH, STAT) ALTRET;

   6386   3 00065B  EFC7 0018            Y$CKSTAT        STB,B6   CHN_F,AUTO

     1160     6387
     1161     6388    4      DCL ITEM UBIN WORD;
     1162     6389    4      DCL STAT BIT(16) ALIGNED;
     1163     6390    4      DCL CH UBIN(10) ALIGNED;
     1164     6391    4      DCL FC UBIN(6) ALIGNED;
     1165     6392
     1166     6393    5      DO ITEM = 1 TO 9;

   6393   3 00065D  6C01                                 LDV,R6   1
          3 00065E  EF47 001E                            STR,R6   ITEM,AUTO

     1167     6394
     1168     6395    5         IF (STAT & %GT_STATUSCMP#)

   6395   3 000660  ECC7 001C                            LDB,B6   @STAT,AUTO
          3 000662  E806                                 LDR,R6   ,B6
          3 000663  E570 1000                            AND,R6   4096,IMO
          3 000665  6901 0005                            BEZ,R6   s:6400,PREL

     1169     6396    5         THEN
     1170     6397    5            RETURN;

   6397   3 000667  ECC7 0018                            LDB,B6   CHN_F,AUTO
          3 000669  C3C6 0001                            LNJ,B4   1,B6

     1171     6398    5         ELSE
     1172     6399    6              DO;

     1173     6400    6                 CALL M$WAIT (WAIT_IO);

   6400   3 00066B  BB80 0000 0062  00                   LAB,B3   WAIT_IO
          3 00066E  B870 0CC5                            LDR,R3   3269,IMO
          3 000670  0001                                 MCL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:182  
          3 000671       0000                            DC       s:6400+6,PREL

     1174     6401    6                 CALL Y$STATUS (CH, STAT) ALTRET (BOP);

   6401   3 000672  ECC7 001C                            LDB,B6   @STAT,AUTO
          3 000674  EFC7 0024                            STB,B6   @STAT,AUTO
          3 000676  DCC7 001A                            LDB,B5   @CH,AUTO
          3 000678  DFC7 0022                            STB,B5   @CH,AUTO
          3 00067A  E3C0 FF9C                            LNJ,B6   s:0,PREL
          3 00067C       000B                            DC       s:6408,PREL

     1175     6402    6              END;

     1176     6403
     1177     6404    5      END;

   6404   3 00067D  8AC7 001E                            INC      ITEM,AUTO
          3 00067F  E847 001E                            LDR,R6   ITEM,AUTO
          3 000681  6D09                                 CMV,R6   9
          3 000682  03DE                                 BLE      s:6395,SPREL

     1178     6405    4      RETURN;

   6405   3 000683  ECC7 0018                            LDB,B6   CHN_F,AUTO
          3 000685  C3C6 0001                            LNJ,B4   1,B6

     1179     6406
     1180     6407    4   BOP:
     1181     6408    4      ALTRETURN;

   6408   3 000687  ECC7 0018            BOP             LDB,B6   CHN_F,AUTO
          3 000689  B806                                 LDR,R3   ,B6
          3 00068A  C3B6                                 LNJ,B4   ,B6,R3

     1182     6409
     1183     6410    4   END Y$CKSTAT;
     1184     6411
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:183  
     1185     6412        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:184  
     1186     6413        /*I*  NAME:        Y$IOLD
     1187     6414              PURPOSE:     Perform IOLD using ICM data
     1188     6415              CALL:        CALL Y$IOLD (CH, DP$, BOFS, BSIZ) ALTRET;
     1189     6416                           Altreturns if an I/O error occurs
     1190     6417              PARAMETERS:  CH is an input parameter containing the
     1191     6418                           channel number.
     1192     6419                           DP$ is an input parameter containing a
     1193     6420                           pointer to the source data buffer.
     1194     6421                           BOFS is an input parameter containing
     1195     6422                           the byte offset value to the data buffer.
     1196     6423                           BSIZ is an input parameter containing
     1197     6424                           the size (bytes) of the data.
     1198     6425              INTERFACE:   This routine calls the following:
     1199     6426                            GHH$IOLD
     1200     6427                            Y$IOER
     1201     6428              DATA:        Sets up GT_IOLD FPT and uses ICM data.
     1202     6429              DESCRIPTION: Places channel, function code, size(bytes),
     1203     6430                           and buffer pointer (points to ICM word 14)
     1204     6431                           into GT_IOLD FPT.  Then it executes IOLD
     1205     6432                           using the GHH$IOLD routine.
     1206     6433        */
     1207     6434        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:185  
     1208     6435    3   Y$IOLD: PROC (CH, DP$, BOFS, BSIZ) ALTRET;

   6435   3 00068B  EFC7 0022            Y$IOLD          STB,B6   @CH,AUTO

     1209     6436
     1210     6437    4      DCL CH UBIN(10) ALIGNED;
     1211     6438    4      DCL FC UBIN(6) ALIGNED;
     1212     6439    4      DCL DP$ PTR;
     1213     6440    4      DCL BOFS UBIN WORD;
     1214     6441    4      DCL BSIZ UBIN WORD;
     1215     6442
     1216     6443    4      FC = GT_IOLD.FNC;

   6443   3 00068D  E800 0000 0002  00                   LDR,R6   GT_IOLD
          3 000690  E570 003F                            AND,R6   63,IMO
          3 000692  600A                                 SOL,R6   10
          3 000693  EF47 002C                            STR,R6   FC,AUTO

     1217     6444
     1218     6445    4      GT_IOLD.CHN = CH;

   6445   3 000695  DCC7 0024                            LDB,B5   @CH,AUTO
          3 000697  E805                                 LDR,R6   ,B5
          3 000698  EA80 0000 0002  00                   SRM,R6,'FFC0'X    GT_IOLD
          3 00069B       FFC0

     1219     6446    4      GT_IOLD.BYTX = BOFS;

   6446   3 00069C  CCC7 0028                            LDB,B4   @BOFS,AUTO
          3 00069E  E804                                 LDR,R6   ,B4
          3 00069F  EF00 0000 0005  00                   STR,R6   GT_IOLD+3

     1220     6447    4      GT_IOLD.BUFSIZE = BSIZ;

   6447   3 0006A2  BCC7 002A                            LDB,B3   @BSIZ,AUTO
          3 0006A4  D803                                 LDR,R5   ,B3
          3 0006A5  DF00 0000 0006  00                   STR,R5   GT_IOLD+4
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:186  

     1221     6448    4      GT_IOLD.BUF$ = DP$;

   6448   3 0006A8  ACC7 0026                            LDB,B2   @DP$,AUTO
          3 0006AA  9C82                                 LDB,B1   ,B2
          3 0006AB  9F80 0000 0003  00                   STB,B1   GT_IOLD+1

     1222     6449
     1223     6450    4      CALL GHH$IOLD (GT_IOLD) WHENALTRETURN

   6450   3 0006AE  BB80 0000 0001  04                   LAB,B3   +1
          3 0006B1  CBF0 0100                            LAB,B4   256,IMO
          3 0006B3  E380 0000 0000  xent                 LNJ,B6   GHH$IOLD
          3 0006B6       0003                            DC       s:6452,PREL
          3 0006B7  0F81 0012                            B        s:6457,PREL

     1224     6451    5           DO;

     1225     6452    5              Y_CLTICM.T1.IFLAGS.IONAK = %G_ON#;

   6452   3 0006B9  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0006BC  8946 0008                            LBT,'0001'X       8,B6
          3 0006BE       0001

     1226     6453    5              CALL Y$IOER (FC);

   6453   3 0006BF  EBC7 002C                            LAB,B6   FC,AUTO
          3 0006C1  EFC7 0032                            STB,B6   @CON+4,AUTO
          3 0006C3  E3C0 0047                            LNJ,B6   s:0,PREL
          3 0006C5       0001                            DC       s:6454,PREL

     1227     6454    5              ALTRETURN;

   6454   3 0006C6  ECC7 0022                            LDB,B6   @CH,AUTO
          3 0006C8  B806                                 LDR,R3   ,B6
          3 0006C9  C3B6                                 LNJ,B4   ,B6,R3

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:187  
     1228     6455    5           END;
     1229     6456
     1230     6457    4      RETURN;

   6457   3 0006CA  ECC7 0022                            LDB,B6   @CH,AUTO
          3 0006CC  C3C6 0001                            LNJ,B4   1,B6

     1231     6458
     1232     6459    4   END Y$IOLD;
     1233     6460
     1234     6461        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:188  
     1235     6462        /*I*  NAME:        Y$DOIO
     1236     6463              PURPOSE:     Perform IO using ICM data
     1237     6464              CALL:        CALL Y$DOIO (CH, FC, CON) ALTRET;
     1238     6465                           Altreturns if an I/O error occurs.
     1239     6466              PARAMETERS:  CH is an input parameter containing the
     1240     6467                           channel number.
     1241     6468                           FC is an input parameter containing the
     1242     6469                           function code.
     1243     6470                           CON is an input or output parameter
     1244     6471                           containing control information.
     1245     6472              INTERFACE:   This routine calls the following:
     1246     6473                            GHH$IO_IN
     1247     6474                            Y$IOER
     1248     6475              DATA:        Sets up GT_IO FPT and uses ICM data.
     1249     6476              DESCRIPTION: Places channel address, function code, and
     1250     6477                           control word into the GT_IO FPT.  Then it
     1251     6478                           executes the I/O using the GHH$IO_IN
     1252     6479                           routine.
     1253     6480        */
     1254     6481        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:189  
     1255     6482    3   Y$DOIO: PROC (CH, FC, CON) ALTRET;

   6482   3 0006CE  EFC7 0028            Y$DOIO          STB,B6   @BOFS,AUTO

     1256     6483
     1257     6484    4      DCL CH UBIN(10) ALIGNED;
     1258     6485    4      DCL FC UBIN(6) ALIGNED;
     1259     6486    4      DCL CON UBIN WORD;
     1260     6487
     1261     6488    4      GT_IO.CAS.FNC = FC;

   6488   3 0006D0  DCC7 002C                            LDB,B5   @FC,AUTO
          3 0006D2  E805                                 LDR,R6   ,B5
          3 0006D3  604A                                 SOR,R6   10
          3 0006D4  EA80 0000 0000  00                   SRM,R6,'003F'X    GT_IO
          3 0006D7       003F

     1262     6489    4      GT_IO.RANGE = CON;

   6489   3 0006D8  CCC7 002E                            LDB,B4   @CON,AUTO
          3 0006DA  E804                                 LDR,R6   ,B4
          3 0006DB  EF00 0000 0001  00                   STR,R6   GT_IO+1

     1263     6490    4      GT_IO.CAS.CHN = CH;

   6490   3 0006DE  BCC7 002A                            LDB,B3   @CH,AUTO
          3 0006E0  D803                                 LDR,R5   ,B3
          3 0006E1  DA80 0000 0000  00                   SRM,R5,'FFC0'X    GT_IO
          3 0006E4       FFC0

     1264     6491
     1265     6492    4      CALL GHH$IO_IN (GT_IO) WHENALTRETURN

   6492   3 0006E5  BB80 0000 0003  04                   LAB,B3   +3
          3 0006E8  CBF0 0100                            LAB,B4   256,IMO
          3 0006EA  E380 0000 0000  xent                 LNJ,B6   GHH$IO_IN
          3 0006ED       0003                            DC       s:6494,PREL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:190  
          3 0006EE  0F81 0012                            B        s:6499,PREL

     1266     6493    5           DO;

     1267     6494    5              Y_CLTICM.T1.IFLAGS.IONAK = %G_ON#;

   6494   3 0006F0  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0006F3  8946 0008                            LBT,'0001'X       8,B6
          3 0006F5       0001

     1268     6495    5              CALL Y$IOER (FC);

   6495   3 0006F6  ECC7 002C                            LDB,B6   @FC,AUTO
          3 0006F8  EFC7 0032                            STB,B6   @CON+4,AUTO
          3 0006FA  E3C0 0010                            LNJ,B6   s:0,PREL
          3 0006FC       0001                            DC       s:6496,PREL

     1269     6496    5              ALTRETURN;

   6496   3 0006FD  ECC7 0028                            LDB,B6   @BOFS,AUTO
          3 0006FF  B806                                 LDR,R3   ,B6
          3 000700  C3B6                                 LNJ,B4   ,B6,R3

     1270     6497    5           END;
     1271     6498
     1272     6499    4      CON = GT_IO.RANGE;

   6499   3 000701  ECC7 002E                            LDB,B6   @CON,AUTO
          3 000703  E800 0000 0001  00                   LDR,R6   GT_IO+1
          3 000706  EF06                                 STR,R6   ,B6

     1273     6500
     1274     6501    4      RETURN;

   6501   3 000707  ECC7 0028                            LDB,B6   @BOFS,AUTO
          3 000709  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:191  
     1275     6502
     1276     6503    4   END Y$DOIO;
     1277     6504
     1278     6505        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:192  
     1279     6506        /*I*  NAME:        Y$IOER
     1280     6507              PURPOSE:     Process common error data on bad IO returns
     1281     6508              CALL:        CALL Y$IOER (FC);
     1282     6509                           Does not altreturn.
     1283     6510              PARAMETERS:  FC is an input parameter containing the
     1284     6511                           function code.
     1285     6512              INTERFACE:   None.
     1286     6513              DATA:        Uses data in ICM buffer (pointer ICM$).
     1287     6514              DESCRIPTION: Places common IO error data in ICM.
     1288     6515        */
     1289     6516        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:193  
     1290     6517    3   Y$IOER: PROC (FC);

   6517   3 00070B  EFC7 0030            Y$IOER          STB,B6   @CON+2,AUTO

     1291     6518
     1292     6519    4      DCL FC UBIN(6) ALIGNED;
     1293     6520
     1294     6521    4      Y_CLTICM.T1.TSTDAT(0) = FC;

   6521   3 00070D  DCC7 0032                            LDB,B5   @FC,AUTO
          3 00070F  E805                                 LDR,R6   ,B5
          3 000710  604A                                 SOR,R6   10
          3 000711  CC80 0000 00A9  00                   LDB,B4   ICM$
          3 000714  E7C4 000A                            STH,R6   10,B4

     1295     6522    4      Y_CLTICM.T1.R1.ICMRPY = %Y#NORESP;

   6522   3 000716  6C26                                 LDV,R6   38
          3 000717  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00071A  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 00071C       00FF

     1296     6523
     1297     6524    4      RETURN;

   6524   3 00071D  ECC7 0030                            LDB,B6   @CON+2,AUTO
          3 00071F  C3C6 0001                            LNJ,B4   1,B6

     1298     6525
     1299     6526    4   END Y$IOER;
     1300     6527
     1301     6528    3   END EXECUTE_TEST;
     1302     6529
     1303     6530        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:194  
     1304     6531        /*I*  NAME:        TERMINATE_TEST
     1305     6532              PURPOSE:     Terminate specified FEP COLTS test
     1306     6533              CALL:        CALL TERMINATE_TEST;
     1307     6534                           Does not altreturn.
     1308     6535              INTERFACE:   This routine calls the following:
     1309     6536                            Y$TRMTST
     1310     6537              DATA:        Uses data in ICM buffer (pointer ICM$).
     1311     6538              DESCRIPTION: Extracts the channel number and test
     1312     6539                           number from the ICM data and then calls
     1313     6540                           Y$TRMTST to terminate this test.
     1314     6541                           Places proper reply code in ICM data.
     1315     6542        */
     1316     6543        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:195  
     1317     6544    2   TERMINATE_TEST: PROC ALTRET;

   6544   3 000721  EFC7 0008            TERMINATE_TEST  STB,B6   CHAD+1,AUTO

     1318     6545
     1319     6546    3      DCL TNUM UBIN BYTE ALIGNED;
     1320     6547    3      DCL CHAD BIT(16) ALIGNED;
     1321     6548
     1322     6549    3      TNUM = Y_CLTICM.T1.R1.TSTIND;

   6549   3 000723  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000726  E2C5 0003                            LLH,R6   3,B5
          3 000728  E7C7 000A                            STH,R6   TNUM,AUTO

     1323     6550    3      CHAD = Y_CLTICM.T1.R1.CHNLNR;

   6550   3 00072A  E845 0005                            LDR,R6   5,B5
          3 00072C  EF47 000B                            STR,R6   CHAD,AUTO

     1324     6551
     1325     6552    3      CALL Y$TRMTST (TNUM,CHAD);

   6552   3 00072E  CBC7 000B                            LAB,B4   CHAD,AUTO
          3 000730  CFC7 0010                            STB,B4   ITEM,AUTO
          3 000732  BBC7 000A                            LAB,B3   TNUM,AUTO
          3 000734  BFC7 000E                            STB,B3   BUF2$,AUTO
          3 000736  E3C0 0068                            LNJ,B6   s:0,PREL
          3 000738       0001                            DC       s:6554,PREL

     1326     6553
     1327     6554    3      IF Y_FLAGS.NOSUCHTST = %G_OFF#

   6554   3 000739  8980 0000 0097  00                   CMZ      Y_FLAGS
          3 00073C  0801 000A                            BAL      s:6559,PREL

     1328     6555    3      THEN
     1329     6556    3         Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:196  

   6556   3 00073E  6C21                                 LDV,R6   33
          3 00073F  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000742  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000744       00FF
          3 000745  0F81 0012                            B        s:6564,PREL

     1330     6557
     1331     6558    4      ELSE DO;

     1332     6559    4              Y_CLTICM.T1.IFLAGS.NOTEST = %G_ON#;

   6559   3 000747  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00074A  8946 0008                            LBT,'0020'X       8,B6
          3 00074C       0020

     1333     6560    4              Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;

   6560   3 00074D  6C22                                 LDV,R6   34
          3 00074E  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000751  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000753       00FF

     1334     6561    4              Y_FLAGS.NOSUCHTST = %G_OFF#;

   6561   3 000754  8800 0000 0097  00                   LBF,'8000'X       Y_FLAGS
   6561   3 000757       8000

     1335     6562    4           END;

     1336     6563
     1337     6564    3      RETURN;

   6564   3 000758  ECC7 0008                            LDB,B6   CHAD+1,AUTO
          3 00075A  C3C6 0001                            LNJ,B4   1,B6

     1338     6565
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:197  
     1339     6566    3   END TERMINATE_TEST;
     1340     6567
     1341     6568    2   END PROCESS_ICM;
     1342     6569
     1343     6570        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:198  
     1344     6571        /*I*  NAME:        WRAP_UP
     1345     6572              PURPOSE:     Terminate all FEP COLTS tests
     1346     6573              CALL:        CALL WRAP_UP;
     1347     6574                           Does not altreturn.
     1348     6575              INTERFACE:   This routine calls the following:
     1349     6576                            Y$TRMTST
     1350     6577              DATA:        Uses data in Active Test Table.
     1351     6578              DESCRIPTION: This routine successively extracts channel
     1352     6579                           number and test number information on each
     1353     6580                           active test from the Active Test Table.
     1354     6581                           It successively calls Y$TRMTST to terminate
     1355     6582                           each active test.
     1356     6583        */
     1357     6584        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:199  
     1358     6585    1   WRAP_UP: PROC ALTRET;

   6585   3 00075C  EFC7 0004            WRAP_UP         STB,B6   +4,AUTO

     1359     6586
     1360     6587    2      DCL TNUM UBIN BYTE ALIGNED;
     1361     6588    2      DCL CHAD BIT(16) ALIGNED;
     1362     6589
     1363     6590    2      IF Y_TCOUNT > 0

   6590   3 00075E  E280 0000 0098  00                   LLH,R6   Y_TCOUNT
          3 000761  6901 0039                            BEZ,R6   s:6602,PREL

     1364     6591    3      THEN DO TNUM = 0 TO 7;

   6591   3 000763  87C7 0006                            CLH      TNUM,AUTO

     1365     6592
     1366     6593    3              IF Y_TENTRY (TNUM)

   6593   3 000765  EB80 0000 0000  00                   LAB,B6   GT_IO
          3 000768  B2C7 0006                            LLH,R3   TNUM,AUTO
          3 00076A  3002                                 SOL,R3   2
          3 00076B  DB80 0000 0000  04                   LAB,B5   0
          3 00076E  5C01                                 LDV,R5   1
          3 00076F  0022                                 ACM      ;
          3 000770       4436 0099                                ALPHANUM(153,B6,R3,,4,FILL),;
          3 000772       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          3 000774  5381 001D                            CBE      s:6600,PREL

     1367     6594    4              THEN DO;

     1368     6595    4                      CHAD = Y_TENTRY.CHN(TNUM);

   6595   3 000776  A2C7 0006                            LLH,R2   TNUM,AUTO
          3 000778  2001                                 SOL,R2   1
          3 000779  E820 0000 0099  00                   LDR,R6   Y_TENTRY,R2
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:200  
          3 00077C  EF47 0007                            STR,R6   CHAD,AUTO

     1369     6596    4                      CALL Y$TRMTST (TNUM,CHAD);

   6596   3 00077E  EBC7 0007                            LAB,B6   CHAD,AUTO
          3 000780  EFC7 0010                            STB,B6   ITEM,AUTO
          3 000782  DBC7 0006                            LAB,B5   TNUM,AUTO
          3 000784  DFC7 000E                            STB,B5   BUF2$,AUTO
          3 000786  E3C0 0018                            LNJ,B6   s:0,PREL
          3 000788       0001                            DC       s:6597,PREL

     1370     6597    4                      IF Y_TCOUNT = 0 THEN RETURN;

   6597   3 000789  E280 0000 0098  00                   LLH,R6   Y_TCOUNT
          3 00078C  6981 0005                            BNEZ,R6  s:6600,PREL

   6597   3 00078E  ECC7 0004                            LDB,B6   +4,AUTO
          3 000790  C3C6 0001                            LNJ,B4   1,B6

     1371     6598    4                   END;
     1372     6599
     1373     6600    3           END;

   6600   3 000792  E2C7 0006                            LLH,R6   TNUM,AUTO
          3 000794  6E01                                 ADV,R6   1
          3 000795  E7C7 0006                            STH,R6   TNUM,AUTO
          3 000797  E2C7 0006                            LLH,R6   TNUM,AUTO
          3 000799  6D07                                 CMV,R6   7
          3 00079A  03CB                                 BLE      s:6593,SPREL

     1374     6601
     1375     6602    2      RETURN;

   6602   3 00079B  ECC7 0004                            LDB,B6   +4,AUTO
          3 00079D  C3C6 0001                            LNJ,B4   1,B6

     1376     6603
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:201  
     1377     6604    2   END WRAP_UP;
     1378     6605
     1379     6606        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:202  
     1380     6607        /*I*  NAME:        Y$TRMTST
     1381     6608              PURPOSE:     Terminate specified FEP COLTS test
     1382     6609              CALL:        CALL Y$TRMTST (TNUM, CHAD);
     1383     6610                           Does not altreturn.
     1384     6611              PARAMETERS:  TNUM is an INPUT parameter containing the index
     1385     6612                           number to the test's entry in the Active Test
     1386     6613                           Table.
     1387     6614                           CHAD is an INPUT parameter containing the channel
     1388     6615                           address for the test.
     1389     6616              INTERFACE:   This routine calls the following:
     1390     6617                            M$RCHAN
     1391     6618              DATA:        Operates on Active Test Table.
     1392     6619              DESCRIPTION: This routine clears the entry for the specified
     1393     6620                           test in the Active Test Table, clears the contents
     1394     6621                           of the associated temporary storage area, and
     1395     6622                           releases the MLC16 line(s) from COLTS control.
     1396     6623                           The routine also sets a flag if there is an
     1397     6624                           altreturn from M$RCHAN.
     1398     6625        */
     1399     6626        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:203  
     1400     6627    1   Y$TRMTST: PROC (TNUM,CHAD) ALTRET;

   6627   3 00079F  EFC7 000C            Y$TRMTST        STB,B6   RAMAD,AUTO

     1401     6628
     1402     6629    2      DCL TNUM UBIN BYTE ALIGNED;
     1403     6630    2      DCL ITEM UBIN WORD;
     1404     6631    2      DCL CHAD UBIN(16) ALIGNED;
     1405     6632
     1406     6633    2      IF Y_TENTRY.TYP(TNUM) = 18

   6633   3 0007A1  DCC7 000E                            LDB,B5   @TNUM,AUTO
          3 0007A3  B285                                 LLH,R3   ,B5
          3 0007A4  3002                                 SOL,R3   2
          3 0007A5  3E01                                 ADV,R3   1
          3 0007A6  E2B0 0000 009A  00                   LLH,R6   Y_TENTRY+1,R3
          3 0007A9  6D12                                 CMV,R6   18
          3 0007AA  0981 0007                            BNE      s:6637,PREL

     1407     6634    2      THEN
     1408     6635    2         RELEASE_CHAN.V.CONTROLLER = '1'B;

   6635   3 0007AC  8900 0000 008B  00                   LBT,'8000'X       RELEASE_CHAN+4
   6635   3 0007AF       8000
          3 0007B0  0F81 0005                            B        s:6639,PREL

     1409     6636    2      ELSE
     1410     6637    2         RELEASE_CHAN.V.CONTROLLER = '0'B;

   6637   3 0007B2  8800 0000 008B  00                   LBF,'8000'X       RELEASE_CHAN+4
   6637   3 0007B5       8000

     1411     6638
     1412     6639    2      Y_TENTRY(TNUM) = '0'B;

   6639   3 0007B6  B285                                 LLH,R3   ,B5
          3 0007B7  BF47 0034                            STR,R3   @FC+2,AUTO
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:204  
          3 0007B9  3001                                 SOL,R3   1
          3 0007BA  8730 0000 0099  00                   CL       Y_TENTRY,R3
          3 0007BD  B847 0034                            LDR,R3   @FC+2,AUTO
          3 0007BF  3001                                 SOL,R3   1
          3 0007C0  8730 0000 009A  00                   CL       Y_TENTRY+1,R3

     1413     6640
     1414     6641    2      Y_DBUFSZ(TNUM) = 0;

   6641   3 0007C3  A285                                 LLH,R2   ,B5
          3 0007C4  8720 0000 00AC  00                   CL       Y_DBUFSZ,R2

     1415     6642
     1416     6643    3      DO ITEM = 0 TO 241;

   6643   3 0007C7  8747 0012                            CL       ITEM,AUTO

     1417     6644    3         Y_DBUF(TNUM * 242 + ITEM) = 0;

   6644   3 0007C9  ECC7 000E                            LDB,B6   @TNUM,AUTO
          3 0007CB  E286                                 LLH,R6   ,B6
          3 0007CC  EB70 00F2                            MUL,R6   242,IMO
          3 0007CE  EA47 0012                            ADD,R6   ITEM,AUTO
          3 0007D0  B856                                 LDR,R3   R6
          3 0007D1  8730 0000 00B4  00                   CL       Y_DBUF,R3

     1418     6645    3      END;

   6645   3 0007D4  8AC7 0012                            INC      ITEM,AUTO
          3 0007D6  E847 0012                            LDR,R6   ITEM,AUTO
          3 0007D8  E970 00F1                            CMR,R6   241,IMO
          3 0007DA  03EF                                 BLE      s:6644,SPREL

     1419     6646
     1420     6647    2      Y_TCOUNT = Y_TCOUNT - 1;

   6647   3 0007DB  D280 0000 0098  00                   LLH,R5   Y_TCOUNT
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:205  
          3 0007DE  5EFF                                 ADV,R5   -1
          3 0007DF  D780 0000 0098  00                   STH,R5   Y_TCOUNT

     1421     6648
     1422     6649    2      Y_FLAGS.NOSUCHTST = %G_OFF#;

   6649   3 0007E2  8800 0000 0097  00                   LBF,'8000'X       Y_FLAGS
   6649   3 0007E5       8000

     1423     6650
     1424     6651    2      RELEASE_CHAN.V.CHANNEL = CHAD;

   6651   3 0007E6  DCC7 0010                            LDB,B5   @CHAD,AUTO
          3 0007E8  D805                                 LDR,R5   ,B5
          3 0007E9  DF00 0000 008A  00                   STR,R5   RELEASE_CHAN+3

     1425     6652
     1426     6653    2      CALL M$RCHAN (RELEASE_CHAN)

   6653   3 0007EC  BB80 0000 0087  00                   LAB,B3   RELEASE_CHAN
          3 0007EF  B870 0594                            LDR,R3   1428,IMO
          3 0007F1  0001                                 MCL
          3 0007F2       0003                            DC       s:6655,PREL
          3 0007F3  0F81 0005                            B        s:6658,PREL

     1427     6654    3      WHENALTRETURN DO;

     1428     6655    3              Y_FLAGS.NOSUCHTST = %G_ON#;

   6655   3 0007F5  8900 0000 0097  00                   LBT,'8000'X       Y_FLAGS
   6655   3 0007F8       8000

     1429     6656    3           END;

     1430     6657
     1431     6658    2      RETURN;

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:206  
   6658   3 0007F9  ECC7 000C                            LDB,B6   RAMAD,AUTO
          3 0007FB  C3C6 0001                            LNJ,B4   1,B6

     1432     6659
     1433     6660    2   END Y$TRMTST;
     1434     6661
     1435     6662    1   END GTC$MLC16_HNDLR;

   6662   3 0007FD  C380 0000 0000  xent                 LNJ,B4   X6A_MARET
     1436     6663
     1437     6664        %EJECT;
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:207  

PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:208  
--  Include file information  --

   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GT_CMN_E.:E05TOU  is referenced.
   GT_MACROS_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GTC$MLC16_HNDLR.
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:209  

 **** Variables and constants ****

  ****  Section 000  Data  GTC$MLC16_HNDLR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    8D-0-0/w STRC(160)   r     1 ACTIVATE_PRIV              7-0-0/w STRC(128)   r     1 CHAN_DATA
    6C-0-0/w STRC(256)   r     1 END_COLTS                 7C-0-0/w STRC(176)   r     1 GET_CHAN
    3E-0-0/w STRC(288)   r     1 GET_ICM                    0-0-0/w STRC(32)    r     1 GT_IO
     2-0-0/w STRC(80)    r     1 GT_IOLD                   A9-0-0/w PTR         r     1 ICM$
   844-0-0/w CHAR(512)   r     1 ICMDATA                  944-0-0/w BIT (32)    r     1 MSYS_PRIV
     F-0-0/w STRC(752)   r     1 OPEN_COLTS                87-0-0/w STRC(96)    r     1 RELEASE_CHAN
    AB-0-0/w UBIN(16)    r     1 SECS_DELAY                50-0-0/w STRC(288)   r     1 SEND_ICM
    62-0-0/w STRC(160)   r     1 WAIT_IO                   B4-0-0/w UBIN(16)    r     1 Y_DBUF(0:1935)
    AC-0-0/w UBIN(16)    r     1 Y_DBUFSZ(0:7)
    97-0-0/w STRC(8)     r     1 Y_FLAGS                   98-0-0/b UBIN(8)     r     1 Y_TCOUNT
    99-0-0/w STRC(32)    r     1 Y_TENTRY(0:7)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    28-0-0/w PTR         r     1 @BOFS                     2A-0-0/w PTR         r     1 @BSIZ
    12-0-0/w PTR         r     1 @CH                       1A-0-0/w PTR         r     1 @CH
    22-0-0/w PTR         r     1 @CH                       1A-0-0/w PTR         r     1 @CH
    24-0-0/w PTR         r     1 @CH                       2A-0-0/w PTR         r     1 @CH
    10-0-0/w PTR         r     1 @CHAD                     2E-0-0/w PTR         r     1 @CON
     A-0-0/w PTR         r     1 @CS                       26-0-0/w PTR         r     1 @DP$
    2C-0-0/w PTR         r     1 @FC                       32-0-0/w PTR         r     1 @FC
    1C-0-0/w PTR         r     1 @RAD                      14-0-0/w PTR         r     1 @RAMAD
    24-0-0/w PTR         r     1 @STAT                     1C-0-0/w PTR         r     1 @STAT
     E-0-0/w PTR         r     1 @TNUM                     1E-0-0/w UBIN(16)    r     1 BOFS
    20-0-0/w UBIN(16)    r     1 BOFS                      *0-0-0/w UBIN(16)    r     1 BOFS
    21-0-0/w UBIN(16)    r     1 BSIZ                      *0-0-0/w UBIN(16)    r     1 BSIZ
     C-0-0/w PTR         r     1 BUF1$                      E-0-0/w PTR         r     1 BUF2$
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:210  
     D-0-0/w UBIN(10)    r     1 CH                         F-0-0/w UBIN(10)    r     1 CH
     D-0-0/w UBIN(10)    r     1 CH                         D-0-0/w UBIN(10)    r     1 CH
     D-0-0/w UBIN(10)    r     1 CH                        *0-0-0/w UBIN(10)    r     1 CH
    *0-0-0/w UBIN(10)    r     1 CH                        *0-0-0/w STRC(10)    r     1 CH
    *0-0-0/w UBIN(10)    r     1 CH                        *0-0-0/w UBIN(10)    r     1 CH
    *0-0-0/w UBIN(10)    r     1 CH                         A-0-0/w BIT (16)    r     1 CHAD
     B-0-0/w BIT (16)    r     1 CHAD                       7-0-0/w BIT (16)    r     1 CHAD
    *0-0-0/w UBIN(16)    r     1 CHAD                      15-0-0/w UBIN(16)    r     1 CHCON
    16-0-0/w STRC(16)    r     1 CHN                       12-0-0/w STRC(16)    r     1 CHN
    13-0-0/w UBIN(10)    r     1 CHN_C                     17-0-0/w UBIN(10)    r     1 CHN_CH
    18-0-0/w UBIN(6)     r     1 CHN_F                     14-0-0/w UBIN(6)     r     1 CHN_F
     6-0-0/w BIT (16)    r     1 CKS                       11-0-0/w UBIN(16)    r     1 CON
    *0-0-0/w UBIN(16)    r     1 CON                       10-0-0/w UBIN(16)    r     1 CONW
    12-0-0/w UBIN(16)    r     1 CONW                      10-0-0/w STRC(16)    r     1 CONX
    12-0-0/w STRC(16)    r     1 CONX                      *0-0-0/w BIT (16)    r     1 CS
    1C-0-0/w PTR         r     1 DP$                       *0-0-0/w PTR         r     1 DP$
    11-0-0/w UBIN(6)     r     1 FC                        13-0-0/w UBIN(6)     r     1 FC
    1E-0-0/w UBIN(6)     r     1 FC                        26-0-0/w UBIN(6)     r     1 FC
    2C-0-0/w UBIN(6)     r     1 FC                        *0-0-0/w UBIN(6)     r     1 FC
    *0-0-0/w UBIN(6)     r     1 FC                         D-0-0/w UBIN(16)    r     1 INX
     C-0-0/w UBIN(16)    r     1 INX                        C-0-0/w UBIN(8)     r     1 ITEM
     E-0-0/w UBIN(8)     r     1 ITEM                      14-0-0/w UBIN(16)    r     1 ITEM
    10-0-0/w UBIN(16)    r     1 ITEM                      1E-0-0/w UBIN(16)    r     1 ITEM
    12-0-0/w UBIN(16)    r     1 ITEM                       E-0-0/w UBIN(16)    r     1 NUMIO
     D-0-0/w UBIN(16)    r     1 NUMIO                     *0-0-0/w UBIN(16)    r     1 RAD
     C-0-0/w UBIN(16)    r     1 RAMAD                      E-0-0/w UBIN(16)    r     1 RAMAD
     C-0-0/w UBIN(16)    r     1 RAMAD                      C-0-0/w UBIN(16)    r     1 RAMAD
     C-0-0/w UBIN(16)    r     1 RAMAD                     *0-0-0/w UBIN(16)    r     1 RAMAD
    11-0-0/w UBIN(10)    r     1 RCHAN                      F-0-0/w BIT (16)    r     1 STAT
    16-0-0/w BIT (16)    r     1 STAT                      1F-0-0/w BIT (16)    r     1 STAT
    *0-0-0/w BIT (16)    r     1 STAT                      *0-0-0/w BIT (16)    r     1 STAT
     A-0-0/w UBIN(8)     r     1 TNUM                       6-0-0/w UBIN(8)     r     1 TNUM
    *0-0-0/w UBIN(8)     r     1 TNUM                      10-0-0/w UBIN(10)    r     1 XCHAN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:211  
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$COLTN                    0-0-0/w STRC(3872)  r     1 Y_BUFTMP
     0-0-0/w STRC(4096)  r     1 Y_CLTICM


   Procedure GTC$MLC16_HNDLR requires 2048 words for executable code.
   Procedure GTC$MLC16_HNDLR requires 53 words of local(AUTO) storage.

    No errors detected in file GTC$MLC16_HNDLR.:E05TSI    .
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:212  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:213  
          MINI XREF LISTING

ACTIVATE_PRIV
      5312**DCL      5366<>CALL
ACTIVATE_PRIV.V
      5314**DCL      5314--DCLINIT
BADUN IN PROCEDURE Y$WRBLK
      6239**LABEL    6230--CALLALT  6234--CALLALT  6236--CALLALT
BAMO IN PROCEDURE Y$SWRDS
      6042**LABEL    6037--CALLALT
BEGONE
      5382**LABEL    5375--CALLALT  5378--CALLALT
BOFS IN PROCEDURE Y$BMW
      6267**DCL      6272<<ASSIGN   6274<>CALL
BOFS IN PROCEDURE Y$IOLD
      6440**DCL      6435--PROC     6446>>ASSIGN
BOFS IN PROCEDURE Y$XIOLD
      5945**DCL      5952<<ASSIGN   5958<<ASSIGN   5962<<ASSIGN   5966<<ASSIGN   5969<>CALL
BOP IN PROCEDURE Y$CKSTAT
      6408**LABEL    6401--CALLALT
BSIZ IN PROCEDURE Y$BMW
      6268**DCL      6273<<ASSIGN   6274<>CALL
BSIZ IN PROCEDURE Y$IOLD
      6441**DCL      6435--PROC     6447>>ASSIGN
BUF1$ IN PROCEDURE Y$XDATA
      5998**DCL      6004<<ASSIGN   6008>>ASSIGN
BUF2$ IN PROCEDURE Y$XDATA
      6000**DCL      6006<<ASSIGN   6008>>ASSIGN
CH IN PROCEDURE Y$BMW
      6264**DCL      6261--PROC     6271<<ASSIGN   6274<>CALL     6277<>CALL     6281<>CALL     6285<>CALL
CH IN PROCEDURE Y$BMWUP
      6109**DCL      6113<>CALL
CH IN PROCEDURE Y$CKSTAT
      6390**DCL      6386--PROC     6401<>CALL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:214  
CH IN PROCEDURE Y$DOIO
      6484**DCL      6482--PROC     6490>>ASSIGN
CH IN PROCEDURE Y$IOLD
      6437**DCL      6435--PROC     6445>>ASSIGN
CH IN PROCEDURE Y$PRCCP
      6163**DCL      6167<>CALL
CH IN PROCEDURE Y$PXCCP
      6191**DCL      6195<>CALL
CH IN PROCEDURE Y$RCCP
      5669**DCL      5673<>CALL     5707<>CALL     5713<>CALL
CH IN PROCEDURE Y$STATUS
      6315**DCL      6312--PROC     6323<>CALL
CH.X IN PROCEDURE Y$STATUS
      6317**DCL      6349>>IF
CH IN PROCEDURE Y$WRBLK
      6228**DCL      6224--PROC     6230<>CALL     6234<>CALL     6236<>CALL
CH IN PROCEDURE Y$XCCP
      5742**DCL      5746<>CALL     5780<>CALL     5786<>CALL
CHAD IN PROCEDURE START_TEST
      5489**DCL      5491<<ASSIGN   5539>>ASSIGN
CHAD IN PROCEDURE TERMINATE_TEST
      6547**DCL      6550<<ASSIGN   6552<>CALL
CHAD IN PROCEDURE WRAP_UP
      6588**DCL      6595<<ASSIGN   6596<>CALL
CHAD IN PROCEDURE Y$TRMTST
      6631**DCL      6627--PROC     6651>>ASSIGN
CHAN_DATA
      5103**DCL      5267--DCLINIT
CHCON IN PROCEDURE Y$XECIO
      5876**DCL      5888<<ASSIGN   5898<>CALL     5906>>ASSIGN   5912>>ASSIGN   5969<>CALL
CHN IN PROCEDURE Y$IOREAD
      6064**DCL      6073<<ASSIGN
CHN.C IN PROCEDURE Y$IOREAD
      6065**DCL      6074>>ASSIGN
CHN.F IN PROCEDURE Y$IOREAD
      6066**DCL      6075>>ASSIGN
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:215  
CHN IN PROCEDURE Y$XECIO
      5877**DCL      5889<<ASSIGN
CHN.C.X IN PROCEDURE Y$XECIO
      5881**DCL      5903>>IF       5955>>IF
CHN.CH IN PROCEDURE Y$XECIO
      5878**DCL      5879--REDEF    5890>>ASSIGN
CHN.F IN PROCEDURE Y$XECIO
      5882**DCL      5891>>ASSIGN   5893>>IF       5900>>IF       5900>>IF       5921>>IF
CHN_C IN PROCEDURE Y$IOREAD
      6067**DCL      6074<<ASSIGN   6077<>CALL
CHN_CH IN PROCEDURE Y$XECIO
      5883**DCL      5890<<ASSIGN   5898<>CALL     5908>>ASSIGN   5914>>ASSIGN   5969<>CALL
CHN_F IN PROCEDURE Y$IOREAD
      6068**DCL      6075<<ASSIGN   6077<>CALL
CHN_F IN PROCEDURE Y$XECIO
      5884**DCL      5891<<ASSIGN   5898<>CALL
CKS IN PROCEDURE PROCESS_ICM
      5408**DCL      5410<>CALL     5412>>IF       5436<>CALL     5438>>ASSIGN
CON IN PROCEDURE Y$DOIO
      6486**DCL      6482--PROC     6489>>ASSIGN   6499<<ASSIGN
CON IN PROCEDURE Y$IOREAD
      6063**DCL      6072<<ASSIGN   6077<>CALL     6083>>ASSIGN
CONW IN PROCEDURE Y$WRLCT
      5699**DCL      5704<<ASSIGN   5707<>CALL     5709<<ASSIGN   5713<>CALL
CONW IN PROCEDURE Y$WXLCT
      5772**DCL      5777<<ASSIGN   5780<>CALL     5782<<ASSIGN   5786<>CALL
CONX IN PROCEDURE Y$WRLCT
      5696**DCL      5699--REDEF
CONX.L IN PROCEDURE Y$WRLCT
      5697**DCL      5710<<ASSIGN
CONX.R IN PROCEDURE Y$WRLCT
      5698**DCL      5705<<ASSIGN   5710>>ASSIGN   5711<<ASSIGN
CONX IN PROCEDURE Y$WXLCT
      5769**DCL      5772--REDEF
CONX.L IN PROCEDURE Y$WXLCT
      5770**DCL      5783<<ASSIGN
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:216  
CONX.R IN PROCEDURE Y$WXLCT
      5771**DCL      5778<<ASSIGN   5783>>ASSIGN   5784<<ASSIGN
CS IN PROCEDURE Y$CKSUM
      5459**DCL      5456--PROC     5461<<ASSIGN   5467<<ASSIGN   5467>>ASSIGN
DP$ IN PROCEDURE Y$IOLD
      6439**DCL      6435--PROC     6448>>ASSIGN
DP$ IN PROCEDURE Y$XIOLD
      5944**DCL      5951<<ASSIGN   5957<<ASSIGN   5961<<ASSIGN   5965<<ASSIGN   5969<>CALL
EGAD IN PROCEDURE Y$PRCCP
      6172**LABEL    6167--CALLALT
END_COLTS
      5241**DCL      5383<>CALL
END_COLTS.V
      5246**DCL      5243--DCLINIT
ERRIO IN PROCEDURE Y$WRLCT
      5718**LABEL    5707--CALLALT  5713--CALLALT
ERRIO IN PROCEDURE Y$WXLCT
      5791**LABEL    5780--CALLALT  5786--CALLALT
EXECUTE_TEST IN PROCEDURE PROCESS_ICM
      5607**PROC     5425--CALL
FC IN PROCEDURE Y$BMW
      6265**DCL      6276<<ASSIGN   6277<>CALL     6279<<ASSIGN   6281<>CALL     6283<<ASSIGN   6285<>CALL
FC IN PROCEDURE Y$DOIO
      6485**DCL      6482--PROC     6488>>ASSIGN   6495<>CALL
FC IN PROCEDURE Y$IOER
      6519**DCL      6517--PROC     6521>>ASSIGN
FC IN PROCEDURE Y$IOLD
      6438**DCL      6443<<ASSIGN   6453<>CALL
FC IN PROCEDURE Y$STATUS
      6318**DCL      6321<<ASSIGN   6323<>CALL
FC IN PROCEDURE Y$WRLCT
      5700**DCL      5702<<ASSIGN   5707<>CALL     5713<>CALL
FC IN PROCEDURE Y$WXLCT
      5773**DCL      5775<<ASSIGN   5780<>CALL     5786<>CALL
GET_CHAN
      5265**DCL      5575<>CALL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:217  
GET_CHAN.V
      5269**DCL      5267--DCLINIT
GET_CHAN.V.CHANNEL
      5269**DCL      5573<<ASSIGN
GET_CHAN.V.FLAGS.CONTROLLER
      5270**DCL      5569<<ASSIGN   5571<<ASSIGN
GET_ICM
      5159**DCL      5375<>CALL
GET_ICM.BUF_
      5161**DCL      5374<<ASSIGN
GET_ICM.V
      5164**DCL      5161--DCLINIT
GHH$IOLD
      5349**DCL-ENT  6450--CALL
GHH$IO_IN
      5350**DCL-ENT  6492--CALL
GOOF IN PROCEDURE Y$RCCP
      5680**LABEL    5673--CALLALT  5675--CALLALT
GOOF IN PROCEDURE Y$XCCP
      5753**LABEL    5746--CALLALT  5748--CALLALT
GOOP IN PROCEDURE Y$XECIO
      5928**LABEL    5895--CALLALT  5898--CALLALT
GT_IO
      5069**DCL      6492<>CALL
GT_IO.CAS.CHN
      5069**DCL      5069--REDEF    6490<<ASSIGN
GT_IO.CAS.FNC
      5070**DCL      6488<<ASSIGN
GT_IO.DAS
      5070**DCL      5071--REDEF    5072--REDEF
GT_IO.RANGE
      5071**DCL      6489<<ASSIGN   6499>>ASSIGN
GT_IOLD
      5085**DCL      6450<>CALL
GT_IOLD.BUF$
      5086**DCL      6448<<ASSIGN
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:218  
GT_IOLD.BUFSIZE
      5087**DCL      6447<<ASSIGN
GT_IOLD.BYTX
      5086**DCL      6446<<ASSIGN
GT_IOLD.CHN
      5085**DCL      5085--REDEF    6445<<ASSIGN
GT_IOLD.FNC
      5086**DCL      6443>>ASSIGN
ICM$
      5343**DCL      5022--IMP-PTR  5371<<ASSIGN   5377>>ASSIGN   5412>>IF       5415>>ASSIGN   5416>>ASSIGN
      5420>>DOCASE   5431>>ASSIGN   5432>>ASSIGN   5438>>ASSIGN   5463>>IF       5466>>DOINDEX  5467>>ASSIGN
      5491>>ASSIGN   5498>>IF       5500>>ASSIGN   5503>>ASSIGN   5509>>ASSIGN   5538>>ASSIGN   5540>>ASSIGN
      5548>>ASSIGN   5567>>IF       5573>>ASSIGN   5577>>ASSIGN   5609>>DOCASE   5642>>ASSIGN   5643>>ASSIGN
      5646>>ASSIGN   5647>>ASSIGN   5671>>ASSIGN   5677>>ASSIGN   5744>>ASSIGN   5750>>ASSIGN   5827>>ASSIGN
      5853>>ASSIGN   5888>>ASSIGN   5889>>ASSIGN   5906>>ASSIGN   5912>>ASSIGN   5947>>IF       5951>>ASSIGN
      5952>>ASSIGN   5957>>ASSIGN   5961>>ASSIGN   5965>>ASSIGN   6002>>ASSIGN   6004>>ASSIGN   6006>>ASSIGN
      6010>>ASSIGN   6035>>ASSIGN   6039>>ASSIGN   6072>>ASSIGN   6073>>ASSIGN   6082>>ASSIGN   6083>>ASSIGN
      6111>>ASSIGN   6115>>ASSIGN   6139>>ASSIGN   6139>>ASSIGN   6140>>ASSIGN   6140>>ASSIGN   6169>>ASSIGN
      6197>>ASSIGN   6270>>ASSIGN   6270>>ASSIGN   6271>>ASSIGN   6273>>ASSIGN   6274<>CALL     6351>>ASSIGN
      6353>>ASSIGN   6452>>ASSIGN   6494>>ASSIGN   6521>>ASSIGN   6522>>ASSIGN   6549>>ASSIGN   6550>>ASSIGN
      6556>>ASSIGN   6559>>ASSIGN   6560>>ASSIGN
ICMDATA
      5355**DCL      5161--DCLINIT  5191--DCLINIT  5371--ASSIGN
INX IN PROCEDURE Y$IOSTR
      5816**DCL      5826<<ASSIGN   5888>>ASSIGN   5889>>ASSIGN
INX IN PROCEDURE Y$SWRDS
      6030**DCL      6033<<ASSIGN   6072>>ASSIGN   6073>>ASSIGN   6082>>ASSIGN   6083>>ASSIGN
ITEM IN PROCEDURE Y$CKSTAT
      6388**DCL      6393<<DOINDEX
ITEM IN PROCEDURE Y$CKSUM
      5458**DCL      5466<<DOINDEX  5467>>ASSIGN
ITEM IN PROCEDURE Y$GETLIN
      5531**DCL      5534<<DOINDEX  5536>>IF       5538>>ASSIGN   5539>>ASSIGN   5540>>ASSIGN
ITEM IN PROCEDURE Y$IOREAD
      6062**DCL      6070<<DOINDEX  6072>>ASSIGN   6073>>ASSIGN   6082>>ASSIGN   6083>>ASSIGN
ITEM IN PROCEDURE Y$TRMTST
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:219  
      6630**DCL      6643<<DOINDEX  6644>>ASSIGN
ITEM IN PROCEDURE Y$XECIO
      5875**DCL      5886<<DOINDEX  5888>>ASSIGN   5889>>ASSIGN
M$CLOSE
      4665**DCL-ENT  5383--CALL
M$EXIT
      4643**DCL-ENT  5386--CALL
M$GCHAN
      4677**DCL-ENT  5575--CALL
M$OPEN
      4665**DCL-ENT  5369--CALL
M$RCHAN
      4678**DCL-ENT  6653--CALL
M$READ
      4665**DCL-ENT  5375--CALL
M$SPRIV
      4654**DCL-ENT  5366--CALL
M$SYS
      4640**DCL-ENT  5367--CALL
M$WAIT
      4649**DCL-ENT  5834--CALL     6232--CALL     6400--CALL
M$WRITE
      4666**DCL-ENT  5378--CALL
MSYS_PRIV
      5357**DCL      5314--DCLINIT  5365<<ASSIGN
NUMIO IN PROCEDURE Y$IOSTR
      5817**DCL      5827<<ASSIGN   5886>>DOINDEX
NUMIO IN PROCEDURE Y$SWRDS
      6031**DCL      6035<<ASSIGN   6070>>DOINDEX
OPEN_COLTS
      5127**DCL      5369<>CALL
OPEN_COLTS.V
      5135**DCL      5129--DCLINIT
PLOP IN PROCEDURE Y$IOSTR
      5856**LABEL    5828--CALLALT  5840--CALLALT  5841--CALLALT  5848--CALLALT  5849--CALLALT
PROCESS_ICM
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:220  
      5406**PROC     5376--CALL
RAD IN PROCEDURE Y$BMW
      6263**DCL      6261--PROC     6277<>CALL
RAMAD IN PROCEDURE Y$BMWUP
      6108**DCL      6111<<ASSIGN   6113<>CALL
RAMAD IN PROCEDURE Y$PRCCP
      6162**DCL      6165<<ASSIGN   6167<>CALL
RAMAD IN PROCEDURE Y$PXCCP
      6190**DCL      6193<<ASSIGN   6195<>CALL
RAMAD IN PROCEDURE Y$RCCP
      5668**DCL      5671<<ASSIGN   5673<>CALL
RAMAD IN PROCEDURE Y$WRBLK
      6226**DCL      6224--PROC     6230<>CALL
RAMAD IN PROCEDURE Y$XCCP
      5741**DCL      5744<<ASSIGN   5746<>CALL
RCHAN IN PROCEDURE Y$IOSTR
      5820**DCL      5825<<ASSIGN   5848<>CALL     5849<>CALL     5914<<ASSIGN
RELEASE_CHAN
      5289**DCL      6653<>CALL
RELEASE_CHAN.V
      5293**DCL      5291--DCLINIT
RELEASE_CHAN.V.CHANNEL
      5293**DCL      6651<<ASSIGN
RELEASE_CHAN.V.CONTROLLER
      5293**DCL      6635<<ASSIGN   6637<<ASSIGN
SECS_DELAY
      5345**DCL      5218--DCLINIT
SEND_ICM
      5189**DCL      5378<>CALL
SEND_ICM.BUF_
      5191**DCL      5377<<ASSIGN
SEND_ICM.V
      5194**DCL      5191--DCLINIT
SHAZAM IN PROCEDURE Y$BMWUP
      6118**LABEL    6113--CALLALT
SOLONG
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:221  
      5386**LABEL    5366--CALLALT  5367--CALLALT  5369--CALLALT
START_TEST IN PROCEDURE PROCESS_ICM
      5487**PROC     5422--CALL
STAT IN PROCEDURE Y$BMW
      6266**DCL      6280<<ASSIGN   6281<>CALL     6284<<ASSIGN   6285<>CALL
STAT IN PROCEDURE Y$CKSTAT
      6389**DCL      6386--PROC     6395>>IF       6401<>CALL
STAT IN PROCEDURE Y$IOSTR
      5818**DCL      5840<>CALL     5841<>CALL     5848<>CALL     5849<>CALL
STAT IN PROCEDURE Y$STATUS
      6314**DCL      6312--PROC     6320<<ASSIGN   6323<>CALL     6351>>ASSIGN   6353>>ASSIGN
STAT IN PROCEDURE Y$WRBLK
      6227**DCL      6234<>CALL     6236<>CALL
TERMINATE_TEST IN PROCEDURE PROCESS_ICM
      6544**PROC     5428--CALL
TNUM IN PROCEDURE TERMINATE_TEST
      6546**DCL      6549<<ASSIGN   6552<>CALL
TNUM IN PROCEDURE WRAP_UP
      6587**DCL      6591<<DOINDEX  6593>>IF       6595>>ASSIGN   6596<>CALL
TNUM IN PROCEDURE Y$TRMTST
      6629**DCL      6627--PROC     6633>>IF       6639>>ASSIGN   6641>>ASSIGN   6644>>ASSIGN
WAIT_IO
      5215**DCL      5834<>CALL     6232<>CALL     6400<>CALL
WAIT_IO.V
      5219**DCL      5218--DCLINIT
WRAP_UP
      6585**PROC     5382--CALL
XCHAN IN PROCEDURE Y$IOSTR
      5819**DCL      5824<<ASSIGN   5840<>CALL     5841<>CALL     5908<<ASSIGN
Y$ALLOC IN PROCEDURE START_TEST
      5565**PROC     5495--CALL
Y$BMW IN PROCEDURE EXECUTE_TEST
      6261**PROC     6230--CALL
Y$BMWUP IN PROCEDURE EXECUTE_TEST
      6106**PROC     5626--CALL
Y$CKSTAT IN PROCEDURE EXECUTE_TEST
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:222  
      6386**PROC     5841--CALL     5849--CALL     6236--CALL
Y$CKSUM IN PROCEDURE PROCESS_ICM
      5456**PROC     5410--CALL     5436--CALL
Y$DOIO IN PROCEDURE EXECUTE_TEST
      6482**PROC     5707--CALL     5713--CALL     5780--CALL     5786--CALL     5898--CALL     6077--CALL
      6277--CALL     6281--CALL     6285--CALL     6323--CALL
Y$GETLIN IN PROCEDURE START_TEST
      5529**PROC     5493--CALL
Y$IOER IN PROCEDURE EXECUTE_TEST
      6517**PROC     6453--CALL     6495--CALL
Y$IOLD IN PROCEDURE EXECUTE_TEST
      6435**PROC     5969--CALL     6274--CALL
Y$IOREAD IN PROCEDURE Y$SWRDS
      6060**PROC     6037--CALL
Y$IOSTR IN PROCEDURE EXECUTE_TEST
      5813**PROC     5617--CALL     5633--CALL
Y$PRCCP IN PROCEDURE EXECUTE_TEST
      6160**PROC     5636--CALL
Y$PXCCP IN PROCEDURE EXECUTE_TEST
      6188**PROC     5639--CALL
Y$RCCP IN PROCEDURE EXECUTE_TEST
      5666**PROC     5611--CALL
Y$SAVSTT IN PROCEDURE Y$STATUS
      6347**PROC     6325--CALL     6329--CALL
Y$STATUS IN PROCEDURE EXECUTE_TEST
      6312**PROC     5840--CALL     5848--CALL     6234--CALL     6401--CALL
Y$SWRDS IN PROCEDURE EXECUTE_TEST
      6028**PROC     5623--CALL
Y$TRMTST
      6627**PROC     6552--CALL     6596--CALL
Y$WRBLK IN PROCEDURE EXECUTE_TEST
      6224**PROC     5673--CALL     5746--CALL     6113--CALL     6167--CALL     6195--CALL
Y$WRLCT IN PROCEDURE Y$RCCP
      5694**PROC     5675--CALL
Y$WXLCT IN PROCEDURE Y$XCCP
      5767**PROC     5748--CALL
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:223  
Y$XCCP IN PROCEDURE EXECUTE_TEST
      5739**PROC     5614--CALL     6142--CALL
Y$XDATA IN PROCEDURE EXECUTE_TEST
      5993**PROC     5620--CALL
Y$XECIO IN PROCEDURE Y$IOSTR
      5873**PROC     5828--CALL
Y$XEDAT IN PROCEDURE EXECUTE_TEST
      6137**PROC     5629--CALL
Y$XIOLD IN PROCEDURE Y$XECIO
      5942**PROC     5895--CALL
Y_BUFTMP IN PROCEDURE Y$XDATA
      5995**DCL      6008<<ASSIGN   6008>>ASSIGN
Y_CLTICM.T1
      5026**DCL      5053--REDEF
Y_CLTICM.T1.DISCID
      5027**DCL      5029--REDEF
Y_CLTICM.T1.EXTCFG
      5040**DCL      5609>>DOCASE
Y_CLTICM.T1.IFLAGS.BADCKS
      5043**DCL      5415<<ASSIGN
Y_CLTICM.T1.IFLAGS.BADCOM
      5044**DCL      5431<<ASSIGN   5646<<ASSIGN
Y_CLTICM.T1.IFLAGS.DVBUSY
      5046**DCL      5498>>IF       5548<<ASSIGN   5577<<ASSIGN
Y_CLTICM.T1.IFLAGS.IONAK
      5050**DCL      6452<<ASSIGN   6494<<ASSIGN
Y_CLTICM.T1.IFLAGS.NOTEST
      5045**DCL      6559<<ASSIGN
Y_CLTICM.T1.R1.CHAN
      5038**DCL      5573>>ASSIGN
Y_CLTICM.T1.R1.CHNLNR
      5035**DCL      5038--REDEF    5491>>ASSIGN   6139<<ASSIGN   6139>>ASSIGN   6140<<ASSIGN   6140>>ASSIGN
      6270<<ASSIGN   6270>>ASSIGN   6550>>ASSIGN
Y_CLTICM.T1.R1.CHNLNR.CH
      5036**DCL      6271>>ASSIGN
Y_CLTICM.T1.R1.ICMCKS
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:224  
      5030**DCL      5412>>IF       5438<<ASSIGN
Y_CLTICM.T1.R1.ICMCOM
      5033**DCL      5420>>DOCASE
Y_CLTICM.T1.R1.ICMRPY
      5034**DCL      5416<<ASSIGN   5432<<ASSIGN   5500<<ASSIGN   5503<<ASSIGN   5643<<ASSIGN   5647<<ASSIGN
      5677<<ASSIGN   5750<<ASSIGN   5853<<ASSIGN   6010<<ASSIGN   6039<<ASSIGN   6115<<ASSIGN   6169<<ASSIGN
      6197<<ASSIGN   6522<<ASSIGN   6556<<ASSIGN   6560<<ASSIGN
Y_CLTICM.T1.R1.ICMWDS
      5032**DCL      5377>>ASSIGN   5463>>IF       5466>>DOINDEX
Y_CLTICM.T1.R1.TSTIND
      5031**DCL      5509>>ASSIGN   5538<<ASSIGN   5642>>ASSIGN   5947>>IF       5951>>ASSIGN   5957>>ASSIGN
      6002>>ASSIGN   6006>>ASSIGN   6549>>ASSIGN
Y_CLTICM.T1.TSTDAT
      5052**DCL      5827>>ASSIGN   6035>>ASSIGN   6273>>ASSIGN   6521<<ASSIGN
Y_CLTICM.T1.TSTYPE
      5041**DCL      5540>>ASSIGN   5567>>IF
Y_CLTICM.T2.ICMTXT
      5055**DCL      5056--REDEF    5467>>ASSIGN   5889>>ASSIGN   6073>>ASSIGN   6351<<ASSIGN   6353<<ASSIGN
Y_CLTICM.T2.TEXT
      5056**DCL      5671>>ASSIGN   5744>>ASSIGN   5888>>ASSIGN   5906<<ASSIGN   5912<<ASSIGN   5952>>ASSIGN
      6072>>ASSIGN   6082<<ASSIGN   6083<<ASSIGN   6111>>ASSIGN
Y_DBUF
      5353**DCL      5951--ASSIGN   5957--ASSIGN   6006--ASSIGN   6644<<ASSIGN
Y_DBUFSZ
      5352**DCL      5642<<ASSIGN   5947>>IF       6002<<ASSIGN   6641<<ASSIGN
Y_FLAGS.CCB
      5331**DCL      5632<<ASSIGN   5856<<ASSIGN   5949>>IF
Y_FLAGS.CKRDY
      5327**DCL      5830>>IF       5833<<ASSIGN   5923<<ASSIGN
Y_FLAGS.NOATE
      5328**DCL      5504>>IF       5506<<ASSIGN   5547<<ASSIGN
Y_FLAGS.NOSUCHTST
      5326**DCL      6554>>IF       6561<<ASSIGN   6649<<ASSIGN   6655<<ASSIGN
Y_FLAGS.RCH
      5329**DCL      5823<<ASSIGN   5844>>IF       5847<<ASSIGN   5913<<ASSIGN
Y_FLAGS.XCH
PL6.E3A0      #001=GTC$MLC16_HNDLR File=GTC$MLC16_HNDLR.:E05TSI                  TUE 07/29/97 22:12 Page:225  
      5330**DCL      5822<<ASSIGN   5836>>IF       5839<<ASSIGN   5907<<ASSIGN
Y_TCOUNT
      5334**DCL      5510<<ASSIGN   5510>>ASSIGN   5533>>IF       5541<<ASSIGN   5541>>ASSIGN   6590>>IF
      6597>>IF       6647<<ASSIGN   6647>>ASSIGN
Y_TENTRY
      5336**DCL      5509<<ASSIGN   5536>>IF       6593>>IF       6639<<ASSIGN
Y_TENTRY.CHN
      5337**DCL      5539<<ASSIGN   6595>>ASSIGN
Y_TENTRY.TYP
      5341**DCL      5540<<ASSIGN   6633>>IF
ZONK IN PROCEDURE Y$BMW
      6290**LABEL    6274--CALLALT  6277--CALLALT  6281--CALLALT  6285--CALLALT
ZOUNDS IN PROCEDURE Y$PXCCP
      6200**LABEL    6195--CALLALT
