

15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         1    
    1      /*M* NM_MACRO_M  - PL-6 MACRO definition file for MIRROR program.  */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DFC=YES, DMC=YES, EDMC = YES                                  */
    8      /********************** INCLUDE FILES ******************************/
    9      %INCLUDE                CP_6_SUBS ;
   10      %INCLUDE                NM_EQU_E ;
   11      %INCLUDE                NM_SUBS_C ;
   12      /********************** NMD_ERRTEXT ********************************/
   13      /*F*
   14      NAME:           NMD_ERRTEXT
   15
   16      PURPOSE:        To generate error message substitution vectors
   17      */
   18      /*D*
   19      NAME:           NMD_ERRTEXT
   20
   21      CALL:           %NMD_ERRTEXT            ( FPTN = name
   22                                              , STCLASS = stclass
   23                                              , FIRST = {YES|NO}
   24                                              , LAST = {YES|NO}
   25                                              , NAME = value
   26                                                                      ) ;
   27
   28      PARAMETERS:
   29      */
   30      /*K*
   31      FPTN = name             specifies the name given to the structure
   32              generated.  "name" must be a valid PL-6 variable name.
   33              "name" is declared at level 2.  This parameter must be
   34              specified.  There is no devault value.
   35      */
   36      /*K*
   37      STCLASS = stclass       specifies the storage class given to the
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         2    
   38              structure.  "stclass" must be a valid PL-6 storage class.
   39              "stclass" is used only if FIRST = YES.  The default is CONSTANT.
   40      */
   41      /*K*
   42      FIRST = {YES|NO}        specifies whether (YES) or not (NO) that this
   43              invocation of the macro is the beginning of a structure.  If
   44              YES is specified, the level one identifier ERRTEXT is
   45              declared.  If NO is specified, no level one identifier is
   46              declared.  The default is NO.
   47      */
   48      /*K*
   49      LAST = {YES|NO}         specifies whether (YES) or not (NO)
   50              this invocation of the macro is the end of the current
   51              structure.  If YES is specified, the declaration is
   52              terminated with a semicolon.  If NO is specified, the
   53              declaration is terminated with a comma.  The default is NO.
   54      */
   55      /*K*
   56      NAME = value            specifies the CHAR(1-255) CONSTANT that is
   57              to be used to generate the TEXTC character string.  If this
   58              is not specified, TEXTC string will be generated from the
   59              FPTN parameter.
   60      */
   61      /*D*
   62      DESCRIPTION:
   63
   64      The NMD_ERRTEXT macro is used to generate the TEXTC and VECTOR
   65      structure used for error message substitution values.
   66      */
   67      %MACRO  NMD_ERRTEXT             ( FPTN =
   68                                      , STCLASS = CONSTANT
   69                                      , FIRST ( YES='1'B, NO='0'B  ) = '0'B
   70                                      , LAST ( YES=";", NO="," ) = ","
   71                                      , NAME = ''
   72                                                                      ) ;
   73      %LSET LISTEXP = '1'B ;
   74      %LSET LISTSUB = '1'B ;
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         3    
   75      %LSET STR = CONCAT ( TEXTCHAR (STCLASS), '      ' ) ;
   76
   77      %IF  ( SUBSTR ( STR, 0, 6 ) = 'STATIC' )  OR
   78           ( SUBSTR ( STR, 0, 8 ) = 'CONSTANT' )  OR
   79           ( SUBSTR ( STR, 0, 3 ) = 'EXT' )  OR
   80           ( SUBSTR ( STR, 0, 6 ) = 'SYMDEF' ) ;
   81           %LSET INIT = CHARTEXT ( 'INIT' ) ;
   82           %LSET END  = CHARTEXT ( '    ' ) ;
   83      %ELSE ;
   84           %LSET INIT = CHARTEXT ( '/*  ' ) ;
   85           %LSET END  = CHARTEXT ( '  */' ) ;
   86           %ENDIF ;
   87
   88      %IF  FIRST = '1'B ;
   89      DCL 1 ERRTEXT           STCLASS,
   90      %ENDIF ;
   91
   92      %IF  LENGTHC ( NAME) = 0 ;
   93           %LSET TEXT = TEXTCHAR(FPTN) ;
   94      %ELSE ;
   95           %LSET TEXT = NAME ;
   96           %ENDIF ;
   97
   98      %NMD_NAME               ( FPTN = FPTN
   99                              , LAST = NO
  100                              , LVL = 2
  101                              , NAME = %TEXT
  102                                                              ) ;
  103
  104      %LSET V = CONCAT ( TEXTCHAR(FPTN), '_' ) ;
  105      %LSET V_ = CHARTEXT ( V ) ;
  106            2 %V_             VECTOR ALIGNED %INIT(VECTOR(ERRTEXT.FPTN)) %END LAST
  107      %MEND ;
  108      /********************** NMD_NAME ***********************************/
  109      /*F*
  110      NAME:           NMD_NAME
  111
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         4    
  112      PURPOSE:        To generate a NMD_NAME structure
  113      */
  114      /*D*
  115      NAME:           NMD_NAME
  116
  117      CALL:           %NMD_NAME               ( FPTN = name
  118                                              , STCLASS = stclass
  119                                              , L = value
  120                                              , LAST = {YES|NO}
  121                                              , LEN = value
  122                                              , LVL = value
  123                                              , NAME = value
  124                                                                      ) ;
  125
  126      PARAMETERS:
  127      */
  128      /*K*
  129      FPTN = name             specifies the name given to the
  130              structure.  "name" is declared at the level specified by
  131              LVL.  "name" must be a valid PL-6 variable name.  The
  132              default is NMD_NAME.
  133      */
  134      /*K*
  135      STCLASS = stclass       specifies the storage class given to the
  136              structure.  "stclass" must be a valid PL-6 storage class.
  137              "stclass" is used only if LVL = 1.  The default is STATIC.
  138      */
  139      /*K*
  140      L = value               specifies a VALUE-DEC(0-?) that is the
  141              number of significant characters in the name.  The default
  142              is either the length of NAME or 31, if NAME is not specified.
  143
  144              This parameter is used to initialize the FPTN.L#
  145              UBIN BYTE variable.
  146      */
  147      /*K*
  148      LAST = {YES|NO}         specifies whether (YES) or not (NO)
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         5    
  149              this invocation of the macro is the end of the current
  150              structure.  If YES is specified, the declaration is
  151              terminated with a semicolon.  If NO is specified, the
  152              declaration is terminated with a comma.  The default is YES.
  153      */
  154      /*K*
  155      LEN = value             specifies the VALUE-DEC(0-?) of the amount
  156              of storage in characters that are to be reserved in this
  157              invocation of the macro.  The default is either the
  158              length of NAME or 31, if NAME is not specified.
  159      */
  160      /*K*
  161      LVL = value             specifies the VALUE-DEC(1-9) of the level
  162              of this invocation of the macro.  The default is 1.
  163      */
  164      /*K*
  165      NAME = value            specifies the VALUE-CHAR(1-?) that is to
  166              be stored in the TEXTC format.  The default is 31 blanks.
  167
  168              This parameter is used to initialize the FPTN.NAME#
  169              CHAR variable.
  170      */
  171      /*D*
  172      DESCRIPTION:
  173
  174      The NMD_NAME macro is used to generate TEXTC data structures at
  175      levels other than 1.
  176      */
  177      %MACRO  NMD_NAME                ( FPTN = UND_NAME
  178                                      , STCLASS = STATIC
  179                                      , L =
  180                                      , LAST ( YES = ";", NO="," ) = ";"
  181                                      , LEN =
  182                                      , LVL = 1
  183                                      , NAME = '                               '
  184                                                                      ) ;
  185      %LSET LISTEXP = '1'B ;
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         6    
  186      %LSET LISTSUB = '1'B ;
  187      %LSET LNG = CHARTEXT ( TEXTCHAR(L) ) ;
  188      %LSET SIZ = CHARTEXT ( TEXTCHAR(LEN) ) ;
  189      %LSET STR = CONCAT ( TEXTCHAR (STCLASS), '      ' ) ;
  190      %IF  ( SUBSTR ( STR, 0, 6 ) = 'STATIC' )  OR
  191           ( SUBSTR ( STR, 0, 8 ) = 'CONSTANT' )  OR
  192           ( SUBSTR ( STR, 0, 3 ) = 'EXT' )  OR
  193           ( SUBSTR ( STR, 0, 6 ) = 'SYMDEF' ) ;
  194           %LSET INIT = CHARTEXT ( 'INIT' ) ;
  195           %LSET END  = CHARTEXT ( '    ' ) ;
  196           %IF  LENGTHC ( TEXTCHAR(L) ) = 0 ;
  197                %LSET SIZ = LENGTHC ( NAME ) ;
  198                %ENDIF ;
  199           %IF  LENGTHC ( TEXTCHAR(LEN) ) = 0 ;
  200                %LSET LNG = 0 ;
  201                %ENDIF ;
  202      %ELSE ;
  203           %LSET INIT = CHARTEXT ( '/*  ' ) ;
  204           %LSET END  = CHARTEXT ( '  */' ) ;
  205           %IF  LENGTHC ( TEXTCHAR(LEN) ) = 0 ;
  206                %LSET LNG = CHARTEXT ( CONCAT ( TEXTCHAR(FPTN), '.L#' ) );
  207                %IF  SUBSTR ( STR, 0, 4 ) = 'AUTO' ;
  208                     %LSET LNG = 31 ;
  209                     %ENDIF ;
  210                %ENDIF ;
  211           %ENDIF ;
  212
  213      %IF  LVL = 1 ;
  214      DCL 1 FPTN              STCLASS,
  215      %ELSE ;
  216            LVL FPTN          ,
  217      %ENDIF ;
  218
  219           %(LVL+1) L#        UBIN(9) CALIGNED %INIT(%SIZ) %END,
  220           %(LVL+1) NAME#     CHAR(%LNG) CALIGNED %INIT(NAME) %END LAST
  221      %MEND ;
  222      /********************** NMD_PIT ************************************/
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         7    
  223      /*F*
  224      NAME:           NMD_PIT
  225
  226      PURPOSE:        To generate Program Information Table.
  227      */
  228      /*D*
  229      NAME:           NMD_PIT
  230
  231      CALL:           %NMD_PIT                ( FPTN = name
  232                                              , STCLASS = stclass
  233                                              , DCB0 = dcbname,
  234                                              , DCB1 = dcbname,
  235                                              , ERRFID = variable
  236                                              , RUFID = variable
  237                                              , VID0 = buffer
  238                                              , VID1 = buffer
  239                                                                      ) ;
  240
  241      PARAMETERS:
  242      */
  243      /*K*
  244      FPTN = name             specifies the level name given to the
  245              structure.  "name" must be a valid PL-6 variable name.
  246              The default is NMD_PIT.
  247      */
  248      /*K*
  249      STCLASS = stclass       specifies the storage class given to the
  250              structure.  "stclass" must be a valid PL-6 storage class.
  251              The default is SYMREF.
  252      */
  253      /*K*
  254      DCB0 = dcbname          specifies the DCB name used to access the
  255              DEV(0) Mirrored Disk device.
  256              The default is NIL.
  257      */
  258      /*K*
  259      DCB1 = dcbname          specifies the DCB name used to access the
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         8    
  260              DEV(1) Mirrored Disk device.
  261              The default is NIL.
  262      */
  263      /*K*
  264      ERRFID = variable       specifies the VARIABLE that contains the
  265              error message fid.  "variable" must be in TEXTC format.
  266              The default is NIL.
  267
  268              This parameter is used to initialize the FPTN.ERRFID$
  269              PTR variable.
  270      */
  271      /*K*
  272      RUFID = variable        specifies the VARIABLE that contains the
  273              run unit fid.  "variable" must be in TEXTC format.  The
  274              default is NIL.
  275
  276              This parameter is used to initialize the FPTN.RUFID$
  277              PTR variable and the FPTN.RUFID_ VECTOR variable.
  278      */
  279      /*K*
  280      VID0 = buffer           specifies the buffer used to contain the
  281              VID read from DEV(0).  The default is NIL.
  282      */
  283      /*K*
  284      VID1 = buffer           specifies the buffer used to contain the
  285              VID read from DEV(1).  The default is NIL.
  286      */
  287      /*D*
  288      DESCRIPTION:
  289
  290      The NMD_PIT macro defines the program information table that is
  291      used to control the execution of the MIRROR program.
  292      */
  293      %MACRO  NMD_PIT         ( FPTN = NMD_PIT
  294                              , STCLASS = SYMREF
  295                              , DCB0 = NIL
  296                              , DCB1 = NIL
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         9    
  297                              , ERRFID = NIL
  298                              , RUFID = NIL
  299                              , VID0 = NIL
  300                              , VID1 = NIL
  301                                                                      ) ;
  302      %LSET LISTEXP = '1'B ;
  303      %LSET LISTSUB = '1'B ;
  304      %LSET STR = CONCAT ( TEXTCHAR (STCLASS), '      ' ) ;
  305      %IF  ( SUBSTR ( STR, 0, 6 ) = 'STATIC' )  OR
  306           ( SUBSTR ( STR, 0, 8 ) = 'CONSTANT' )  OR
  307           ( SUBSTR ( STR, 0, 3 ) = 'EXT' )  OR
  308           ( SUBSTR ( STR, 0, 6 ) = 'SYMDEF' ) ;
  309           %LSET INIT = CHARTEXT ( 'INIT' ) ;
  310           %LSET END  = CHARTEXT ( '    ' ) ;
  311      %ELSE ;
  312           %LSET INIT = CHARTEXT ( '/*  ' ) ;
  313           %LSET END  = CHARTEXT ( '  */' ) ;
  314           %ENDIF ;
  315
  316      DCL 1 FPTN              STCLASS,
  317      /*B*
  318      COMMAND         is a UBIN(36) that defines the command currently
  319              being processed by the MIRROR program.
  320      */
  321            2 COMMAND#        UBIN(36) ALIGNED %INIT(0) %END,
  322      /*B*
  323      DEV(0:1)        is an array that is used to specify the data
  324              on the Mirrored Disk devices specified on the commands.
  325              DEV(0) is used for the first device (usually referred to
  326              as DPmm or DPxx).
  327              DEV(1) is used for the second device (usually referred to
  328              as DPnn or DPyy).
  329      */
  330            2 DEV(0:1)        DALIGNED,
  331      /*B*
  332      DEV.BUF_        is a VECTOR variable that is used to locate the
  333              IO buffer for this Mirrored Disk device.
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         10   
  334      */
  335              3 BUF_          VECTOR DALIGNED %INIT(VECTOR(NIL)*0) %END,
  336      /*B*
  337      DEV.BUF$        is a PTR variable that is used to locate a granule
  338              within the IO buffer for this Mirrored Disk device.
  339      */
  340              3 BUF$          PTR ALIGNED %INIT(ADDR(NIL)*0) %END,
  341      /*B*
  342      DEV.CYL         is a SBIN(36) variable that is used to specify the
  343              number of cylinders on the Mirrored Disk device.
  344      */
  345              3 CYL           SBIN(36) ALIGNED %INIT(0*0) %END,
  346      /*B*
  347      DEV.DCB#        is a UBIN(36) variable that is used to specify the
  348              DCBNUM of the DCB associated with doing IO on this
  349              Mirrored Disk device.
  350      */
  351              3 DCB#          UBIN WORD ALIGNED %INIT(DCBNUM(DCB0),
  352                                                      DCBNUM(DCB1)) %END,
  353      /*B*
  354      DEV.DCB$        is a PTR variable that is used to specify the
  355              DCBADDR of the DCB associated with doing IO on this
  356              Mirrored Disk device.
  357      */
  358              3 DCB$          PTR ALIGNED %INIT(ADDR(NIL)*0) %END,
  359      /*B*
  360      DEV.DCT$        is a PTR variable that is used to point at the
  361              DCT for this Mirrored Disk device thru the user's SPCL1SID.
  362      */
  363              3 DCT$          PTR ALIGNED %INIT(ADDR(NIL)*0) %END,
  364      /*B*
  365      DEV.DCTX        is a UBIN(36) variable that is used to specify the
  366              DCT index of the Mirrored Disk device.
  367      */
  368              3 DCTX          UBIN(36) ALIGNED %INIT(0*0) %END,
  369      /*B*
  370      DEV.DRZERO      is a UBIN(36) variable that is used to specify the
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         11   
  371              DRZERO value for the Mirrored Disk device.
  372      */
  373              3 DRZERO        UBIN(36) ALIGNED %INIT(0*0) %END,
  374      /*B*
  375      DEV.DVT$        is a PTR variable that is used to point at the
  376              DVT for this Mirrored Disk device thru the user's SPCL2SID.
  377      */
  378              3 DVT$          PTR ALIGNED %INIT(ADDR(NIL)*0) %END,
  379      /*B*
  380      DEV.FLAGS       is a substructure used to specify flags for the
  381              Mirrored Disk device.
  382      */
  383              3 FLAGS         ALIGNED,
  384      /*B*
  385      DEV.FLAGS.LOCK          is a BIT(1) variable that is used to specify
  386              whether or not this Mirrored Disk device has been locked.
  387      */
  388                4 LOCK        BIT(1) UNAL %INIT('0'B*0) %END,
  389      /*B*
  390      DEV.FLAGS.PRI           is a BIT(1) variable that is used to specify
  391              whether or not this is a primary Mirrored Disk device.
  392      */
  393                4 PRI         BIT(1) UNAL %INIT('0'B*0) %END,
  394      /*B*
  395      DEV.FLAGS.SCRATCH       is a BIT(1) variable that is used to specify
  396              whether or not the Mirrored Disk device is a scratch volume.
  397      */
  398                4 SCRATCH     BIT(1) UNAL %INIT('0'B*0) %END,
  399      /*B*
  400      DEV.GRANS       is a UBIN(36) variable that is used to specify the
  401              number of granules on the Mirrored Disk device.
  402      */
  403              3 GRANS         UBIN(36) ALIGNED %INIT(0*0) %END,
  404      /*B*
  405      DEV.GRANSIZE    is a SBIN(36) variable that is used to specify the
  406              number of sectors per granule for the Mirrored Disk device.
  407      */
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         12   
  408              3 GRANSIZE      SBIN(36) ALIGNED %INIT(0*0) %END,
  409      /*B*
  410      DEV.MDCTX       is a UBIN(36) variable that is used to specify the
  411              DCTX of the mirror of this Mirrored Disk device.
  412      */
  413              3 MDCTX         UBIN(36) ALIGNED %INIT(0*0) %END,
  414      /*B*
  415      DEV.NAME        is a substructure used to hold the name of the
  416              device in TEXTC format.
  417      */
  418              3 NAME          CALIGNED,
  419      /*B*
  420      DEV.NAME.L      is a UBIN(9) variable that is used to specify the
  421              length of the device name for error messages.
  422      */
  423                4 L           UBIN(9) CALIGNED %INIT(4*0) %END,
  424      /*B*
  425      DEV.NAME.C      is a CHAR(8) variable that is used to specify the
  426              name of the Mirrored Disk device.
  427      */
  428                4 C           CHAR(8) CALIGNED %INIT(' '*0) %END,
  429      /*B*
  430      DEV.PACKSIZE    is a SBIN(36) variable that is used to specify the
  431              number of granules per device for the Mirrored Disk device.
  432      */
  433              3 PACKSIZE      SBIN(36) ALIGNED %INIT(0*0) %END,
  434      /*B*
  435      DEV.SECT        is a SBIN(36) variable that is used to speicfy the
  436              number of sectors per track for the Mirrored Disk device.
  437      */
  438              3 SECT  SBIN(36) ALIGNED %INIT(0*0) %END,
  439      /*B*
  440      DEV.STATE       is a UBIN(36) variable that is used to specify the
  441              state of the Mirrored Disk device.
  442      */
  443              3 STATE         UBIN(36) ALIGNED %INIT(0*0) %END,
  444      /*B*
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         13   
  445      DEV.TRK         is a SBIN(36) variable that is used to specify the
  446              number of heads per cylinder for the Mirrored Disk device.
  447      */
  448              3 TRK           SBIN(36) ALIGNED %INIT(0*0) %END,
  449      /*B*
  450      DEV.UTS         is a UBIN(36) variable that is used to specify the
  451              UTS of the Mirrored Disk device.
  452      */
  453              3 UTS           UBIN(36) ALIGNED %INIT(0*0) %END,
  454      /*B*
  455      DEV.VID_        is a VECTOR variable that is used to specify the
  456              location and size of the VID buffer for this Mirrored
  457              Disk device.
  458      */
  459              3 VID_          VECTOR ALIGNED %INIT(VECTOR(VID0),
  460                                                   VECTOR(VID1)) %END,
  461      /*B*
  462      DEV.VID$        is a PTR variable that is used to specify the location
  463              of the VID buffer for this Mirrored Disk device.
  464      */
  465              3 VID$          PTR ALIGNED %INIT(ADDR(VID0),
  466                                                ADDR(VID1)) %END,
  467      /*B*
  468      DEV.VSN         is a UBIN(36) variable that is used to specify the
  469              VSN for this Mirrored Disk device.
  470      */
  471              3 VSN           UBIN ALIGNED %INIT(0*0) %END,
  472      /*B*
  473      DGT(0:64)       is an array substructure that is the defective
  474              granule table (DGT) from the VID.
  475      */
  476            2 DGT             ALIGNED,
  477              3 I             SBIN ALIGNED %INIT(0) %END,
  478              3 FGRAN(0:64)   UBIN ALIGNED %INIT(0*0) %END,
  479              3 LGRAN(0:64)   UBIN ALIGNED %INIT(0*0) %END,
  480      /*B*
  481      ERRCODE         is a VLP_ERRCODE structure that is used to specify
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         14   
  482              the error code of the last error detected.  The contents
  483              of ERRCODE are meaningful only if FLAGS.ERRCODE# is set.
  484      */
  485              %VLP_ERRCODE    ( FPTN = ERRCODE
  486                              , STCLASS = %STR
  487                              , LAST = ","
  488                              , LVL = 2
  489                                                                      ) ;
  490      /*B*
  491      ERRFID$         is a PTR variable that points to the error message
  492              file name structure.
  493      */
  494            2 ERRFID$         PTR ALIGNED %INIT(ADDR(ERRFID)) %END,
  495      /*B*
  496      FLAGS           is a substructure of flags used to
  497              control the execution of the DRAFT program.
  498      */
  499            2 FLAGS           ALIGNED,
  500      /*B*
  501      FLAGS.BUF#      is a BIT(1) variable that is used to specify
  502              whether ('1'B) or not ('0'B) buffers have been obtained
  503              to do the COPY or KOMPARE operation.
  504      */
  505              3 BUF#          BIT(1) UNAL %INIT('0'B) %END,
  506      /*B*
  507      FLAGS.CIP#      is a BIT(1) variable that is used to specify
  508              whether ('1'B) or not ('0'B) a COPY operation is in
  509              progress.
  510      */
  511              3 CIP#          BIT(1) UNAL %INIT('0'B) %END,
  512      /*B*
  513      FLAGS.ERRCODE#  is a BIT(1) variable that is used to specify
  514              whether ('1'B) or not ('0'B) an error has been
  515              detected and stored in NMD_PIT.ERRCODE#.
  516      */
  517              3 ERRCODE#      BIT(1) UNAL %INIT('0'B) %END,
  518      /*B*
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         15   
  519      FLAGS.QUIT#     is a BIT(1) variable that is used to specify
  520              whether ('1'B) or not ('0'B) the END/XIT/QUIT command
  521              has been read or the end of file has been reached on
  522              the input command file.
  523      */
  524              3 QUIT#         BIT(1) UNAL %INIT('0'B) %END,
  525      /*B*
  526      FLAGS.REPORT#   is a BIT(1) variable that is used to specify
  527              whether ('1'B) or not ('0'B) a report is to be made
  528              during the execution of a command.
  529      */
  530              3 REPORT#       BIT(1) UNAL %INIT('0'B) %END,
  531      /*B*
  532      FLAGS.STEPCC#   is a BIT(1) variable that is used to specify
  533              whether ('1'B) or not ('0'B) a step condition code has
  534              been stored in NMD_PIT.STEPCC#.
  535      */
  536              3 STEPCC#       BIT(1) UNAL %INIT('0'B) %END,
  537      /*B*
  538      FLAGS.XCON#     is a BIT(1) variable that is used to specify
  539              whether ('1'B) or not ('0'B) exit control has been
  540              established.
  541      */
  542              3 XCON#         BIT(1) UNAL %INIT('0'B) %END,
  543      /*B*
  544      GRANS#          is a UBIN WORD variable that is used to specify
  545              the value from the GRANS option on the invocation line.
  546      */
  547            2 GRANS#          UBIN WORD ALIGNED %INIT(%NMD#DEFAULT_GRANS) %END,
  548      /*B*
  549      M$EI#           is a UBIN(WORD) that specified the DCBNUM of the M$EI DCB.
  550      */
  551            2 M$EI#           UBIN(36) ALIGNED %INIT(DCBNUM(M$EI)) %END,
  552      /*B*
  553      M$EI$           is a PTR that specifies the DCBADDR of the M$EI DCB.
  554      */
  555            2 M$EI$           PTR ALIGNED %INIT(ADDR(NIL)) %END,
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         16   
  556      /*B*
  557      M$EO#           is a UBIN(WORD) that specified the DCBNUM of the M$EO DCB.
  558      */
  559            2 M$EO#           UBIN(36) ALIGNED %INIT(DCBNUM(M$EO)) %END,
  560      /*B*
  561      M$EO$           is a PTR that specifies the DCBADDR of the M$EO DCB.
  562      */
  563            2 M$EO$           PTR ALIGNED %INIT(ADDR(NIL)) %END,
  564      /*B*
  565      M$SI#           is a UBIN(WORD) that specified the DCBNUM of the M$SI DCB.
  566      */
  567            2 M$SI#           UBIN(36) ALIGNED %INIT(DCBNUM(M$SI)) %END,
  568      /*B*
  569      M$SI$           is a PTR that specifies the DCBADDR of the M$SI DCB.
  570      */
  571            2 M$SI$           PTR ALIGNED %INIT(ADDR(NIL)) %END,
  572      /*B*
  573      MXDIFF#         is a UBIN WORD that specifies the maximum number of
  574              differences accept before terminating the COMPARE operation.
  575      */
  576            2 MXDIFF#         UBIN WORD ALIGNED %INIT(%NMD#DEFAULT_MXDIFF) %END,
  577      /*B*
  578      N$DCT$$         is a PTR variable that is the user pointer to the
  579              monitor's DCT tables thru SPCL1SID.
  580      */
  581            2 N$DCT$$         PTR ALIGNED %INIT(ADDR(NIL)) %END,
  582      /*B*
  583      NDIFF#          is a UBIN WORD that specifies the number of differences
  584              found thus far by the COMPARE operation.
  585      */
  586            2 NDIFF#          UBIN WORD ALIGNED %INIT(0) %END,
  587      /*B*
  588      OPTIONS         is a substructure of flags used to indicate if
  589              an option has been specified.  These flags are used to
  590              ensure that an option is not specified twice or that
  591              conflicting options are not specified.
  592      */
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         17   
  593            2 OPTIONS         ALIGNED,
  594      /*B*
  595      OPTIONS.GRANS#  is a BIT(1) variable that is used to specify
  596              whether ('1'B) or not ('0'B) the GRANS  option has been
  597              specified and processed.
  598      */
  599              3 GRANS#        BIT(1) UNAL %INIT('0'B) %END,
  600      /*B*
  601      OPTIONS.MS#     is a BIT(1) variable that is used to specify
  602              whether ('1'B) or not ('0'B) the MS option was specified
  603              on the PAUSE option.
  604      */
  605              3 MS#           BIT(1) UNAL %INIT('0'B) %END,
  606      /*B*
  607      OPTIONS.MXDIFF# is a BIT(1) variable that is used to specify
  608              whether ('1'B) or not ('0'B) the MXDIFF option has been
  609              specified and processed.
  610      */
  611              3 MXDIFF#       BIT(1) UNAL %INIT('0'B) %END,
  612      /*B*
  613      OPTIONS.NREPORT#        is a BIT(1) variable that is used to specify
  614              whether ('1'B) or not ('0'B) the NREPORT option has been
  615              specified and processed.
  616      */
  617              3 NREPORT#      BIT(1) UNAL %INIT('0'B) %END,
  618      /*B*
  619      OPTIONS.PAUSE#  is a BIT(1) variable that is used to specify
  620              whether ('1'B) or not ('0'B) the PAUSE  option has been
  621              specified and processed.
  622      */
  623              3 PAUSE#        BIT(1) UNAL %INIT('0'B) %END,
  624      /*B*
  625      OPTIONS.REPORT# is a BIT(1) variable that is used to specify
  626              whether ('1'B) or not ('0'B) the REPORT option has been
  627              specified and processed.
  628      */
  629              3 REPORT#       BIT(1) UNAL %INIT('0'B) %END,
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         18   
  630      /*B*
  631      OPTIONS.SECONDS#        is a BIT(1) variable that is used to specify
  632              whether ('1'B) or not ('0'B) the SECONDS option was specified
  633              on the PAUSE option.
  634      */
  635              3 SECONDS#      BIT(1) UNAL %INIT('0'B) %END,
  636      /*B*
  637      PACKSIZE                is a UBIN(36) variable that is used to specify
  638              the packsize of the Mirrored Disk device.  This is used in
  639              NMC$COPY and NMK$KOMPARE to loop thru the disk pack, and
  640              in the NMG$GRANULES routines for doing defective granule
  641              table calculations.
  642      */
  643            2 PACKSIZE        UBIN WORD ALIGNED %INIT(0) %END,
  644      /*B*
  645      PAUSE#          is a UBIN word variable that is used to specify
  646              the value from the PAUSE option on the command line.
  647      */
  648            2 PAUSE#          UBIN WORD ALIGNED %INIT(%NMD#DEFAULT_PAUSE) %END,
  649      /*B*
  650      PXCON$$         is a EPTR variable that contains the previous exit
  651              control entry point.
  652      */
  653            2 PXCON$$         EPTR ALIGNED %INIT(ENTADDR(NIL)) %END,
  654      /*B*
  655      REPORT          is a substructure used to report the percentage
  656              completion for COPY and KOMPARE operations.
  657      */
  658            2 REPORT          ALIGNED,
  659      /*B*
  660      REPORT.COMP     is a SBIN variable that represents the percentage of
  661              completion last reported.
  662      */
  663              3 COMP          SBIN WORD ALIGNED %INIT(0) %END,
  664      /*B*
  665      REPORT.HHMMSS   is a CHAR(8) variable that is the UTS of the last report.
  666      */
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         19   
  667              3 HHMMSS        CHAR(12) CALIGNED %INIT(' ') %END,
  668      /*B*
  669      REPORT.INCR     is a SBIN variable that is used to specify the increment
  670              to be used to report the percentage completion.
  671      */
  672              3 INCR          SBIN WORD ALIGNED %INIT(0) %END,
  673      /*B*
  674      RESTART         is a REMEMBER variable that is used to specify the
  675              address where the program is to be restarted after a BREAK key
  676              has been hit.
  677      */
  678            2 RESTART         REMEMBER ALIGNED,
  679      /*B*
  680      RUFID$          is a PTR variable that points to the run unit file
  681              name structure.
  682      */
  683            2 RUFID$          PTR ALIGNED %INIT(ADDR(RUFID)) %END,
  684      /*B*
  685      STATE           is a substructure that contains an array of TEXTC values
  686              for the the state names and an array of vectors framing those
  687              TEXTC values for use in error messages.
  688      */
  689            2 STATE           ALIGNED,
  690              3 TEXT(0:4)     CALIGNED,
  691                4 L           UBIN BYTE CALIGNED %INIT(11,6,9,7,18) %END,
  692                4 C           CHAR(19) CALIGNED
  693                              %INIT ( 'OPERational',
  694                                      'FAILed',
  695                                      'RESToring',
  696                                      'WAIT',
  697                                      'no longer mirrored' ) %END,
  698              3 V_(0:4)       VECTOR DALIGNED
  699                              %INIT ( VECTOR(NMD_PIT.STATE.TEXT(0)),
  700                                      VECTOR(NMD_PIT.STATE.TEXT(1)),
  701                                      VECTOR(NMD_PIT.STATE.TEXT(2)),
  702                                      VECTOR(NMD_PIT.STATE.TEXT(3)),
  703                                      VECTOR(NMD_PIT.STATE.TEXT(4))  ) %END,
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         20   
  704      /*B*
  705      STEPCC#         is a UBIN WORD variable that is used to contain the
  706              highest step condition code that is to be set when the
  707              MIRROR program does a M$EXIT, M$ERR, or M$XXX.
  708      */
  709            2 STEPCC#         UBIN WORD ALIGNED %INIT(0) %END ;
  710      %MEND ;
  711      /********************** NMD_VID ************************************/
  712      /*F*
  713      NAME:           NMD_VID
  714
  715      PURPOSE:        To generate a buffer to hold a VID.
  716      */
  717      /*D*
  718      NAME:           NMD_VID
  719
  720      CALL:           %NMD_VID                ( FPTN = name
  721                                              , STCLASS = stclass
  722                                                                      ) ;
  723
  724      PARAMETERS:
  725      */
  726      /*K*
  727      FPTN = name             specifies the level name given to the
  728              structure.  "name" must be a valid PL-6 variable name.
  729              The default is NMD_VID.
  730      */
  731      /*K*
  732      STCLASS = stclass       specifies the storage class given to the
  733              structure.  "stclass" must be a valid PL-6 storage class.
  734              The default is SYMREF.
  735      */
  736      /*D*
  737      DESCRIPTION:
  738
  739      The NMD_VID macro defines the buffer that is used to contain a
  740      VID of a disk device.
15:07 JUL 28 '97 NM_MACRO_M.:E05SI                                         21   
  741      */
  742      %MACRO  NMD_VID         ( FPTN = NMD_VID
  743                              , STCLASS = SYMREF
  744                                                                      ) ;
  745      %LSET LISTEXP = '1'B ;
  746      %LSET LISTSUB = '1'B ;
  747      %LSET STR = CONCAT ( TEXTCHAR (STCLASS), '      ' ) ;
  748      %IF  ( SUBSTR ( STR, 0, 6 ) = 'STATIC' )  OR
  749           ( SUBSTR ( STR, 0, 8 ) = 'CONSTANT' )  OR
  750           ( SUBSTR ( STR, 0, 3 ) = 'EXT' )  OR
  751           ( SUBSTR ( STR, 0, 6 ) = 'SYMDEF' ) ;
  752           %LSET INIT = CHARTEXT ( 'INIT' ) ;
  753           %LSET END  = CHARTEXT ( '    ' ) ;
  754      %ELSE ;
  755           %LSET INIT = CHARTEXT ( '/*  ' ) ;
  756           %LSET END  = CHARTEXT ( '  */' ) ;
  757           %ENDIF ;
  758
  759      DCL 1 FPTN(0:%(NMD#WORDS_PER_GRAN-1))
  760                                      UBIN ALIGNED STCLASS %INIT(0*0) %END ;
  761      %MEND ;
  762

