VPAGE.X is a library of routines that handles CRT screen updating so that a
minimum number of characters are sent over a communications line.
PURPOSE:
The VPAGE routines will save screen images so that when something on the screen
is updated, they will figure out if it is more economical to do cursor
positioning or to just redraw the line.
DESCRIPTION:
If the cursor has to move more than three positions, it is faster to do a
cursor position than to rewrite the three positions.
REFERENCE:
For more help on the individual routines, type HELP (VPAGE.X) TOPICS This will
list the topics of help available.
HELP file for: VPAGE.X
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
00002
00001
00003
10/16/84
Added VOUTPUT routine.
830428
Installation in the LADC X account.
CHANGES
Enter
 
!HELP (VPAGE.X) HELP_INDEX letter
 
to obtain HELP index references.
V
  VCLEAR -
      HELP VCLEAR
  VCLEARL -
      HELP VCLEARL
  VCURSOR -
      HELP VCURSOR
  VINIT -
      HELP VINIT
  VPAGE -
      HELP
  VUPDATE -
      HELP VUPDATE
  VWHAT -
      HELP VWHAT
  VWINDOW -
      HELP VWINDOW
  VWRITE -
      HELP VWRITE
 
00001
HELP_INDEX
Peter Rumsey, LADC
PURPOSE:
Clears the virtual window.
CALL:
CALL VCLEAR;
DESCRIPTION:
Will put blanks in the entire virtual window.  Screen will not be affected.
00001
00002
PURPOSE:
To clear to the end of the virtual line.
CALL:
CALL VCLEARL;
DESCRIPTION:
Will put blanks to the end of the virtual line.
00001
00002
PURPOSE:
Positions the cursor anywhere on the page.
CALL:
CALL VCURSOR (X,Y);
PARAMETERS:
X
     The X coordinate of where we want the cursor positioned.
Y
     The Y coordinate of where we want the cursor positioned.
DESCRIPTION:
Will set the X and Y coordinates to where specified, unless they exceed the
maximum displacement (79,23) in which case the value will be truncated to the
maximum.  The screen will not be affected, only the virtual location of X and
Y.
00001
00003
00002
PURPOSE:
Initialize vpage screen.
CALL:
CALL VINIT (   WIDTH,HEIGHT);
PARAMETERS:
WIDTH
     The width of the screen.
HEIGHT
     The height of the screen.
DATA:
Along with clearing the screen, VINIT also sets up some default values for the
origin and maximum displacement from the origin.  The defaults are:
 
 ORIGIN (0,0)
 MAXIMUM DISPLACEMENT (79,23)
 
All coordinates are given in terms of (X,Y) [UBIN WORD].
DESCRIPTION:
None.
00001
00003
00004
00002
PURPOSE:
To direct X$WRITE output to the virtual screen.
To have X$WRITE call VOUTPUT, include parameter OUTPUT=VOUTPUT in your F_FDS
structure definition and let the DCB default to nil.
DESCRIPTION:
VOUTPUT positions the cursor according to the VFC in the buffer passed by
X$WRITE, then calls VWRITE to write the data characters to the virtual screen.
the first page, while the index reference is to the second page.
00001
00002
PURPOSE:
To actually update the screen.
CALL:
CALL VUPDATE;
DESCRIPTION:
This routine will actually change the physical screen.  VUPDATE will update the
physical screen to look like the virtual screen.  Only Changes made to the
virtual screen since the last call to VUPDATE will cause changes to the
physical screen.  The other VPAGE routines will manipulate the virtual screen,
when these manipulations are done, then the user should call VUPDATE.  1 be on
00001
00002
PURPOSE:
To return to the user all the settings of the VPAGE routines.  This routine
will return the coordinates of the origin, the values of the maximum X and Y
offsets from the origin (see VWINDOW), and the current values of X and Y for
the current cursor position.
CALL:
CALL VWHAT (ORIGINX,ORIGINY,MAXOFFX,MAXOFFY,CURSORX,CURSORY);
PARAMETERS:
ORIGINX
     The origin's X coordinate value.
ORIGINY
     The origins Y coordinate value
MAXOFFX
     The maximum X offset from the origin, within the window.
MAXOFFY
     The maximum Y offset from the origin, within the window.
CURSORX
     The X coordinate of the current cursor location.
CURSORY
     The Y coordinate of the current cursor location.
DESCRIPTION:
This routine solely returns the values of the parameter list.
00001
00003
00002
PURPOSE:
To set the window on the virtual page.  The page is the screen, the window is
the area we keep track of with these routines.
CALL:
CALL VWINDOW (ORIGINX,ORIGINY,MAXOFFSETX,MAXOFFSETY);
PARAMETERS:
ORIGINX
     A relative starting X value, also can be considered the X value of the
window origin.
ORIGINY
     A relative starting Y value, also can be considered the Y value of the
window origin.
MAXOFFSETX
     The largest X displacement from the origin which will fit into the virtual
window.
MAXOFFSETY
     The largest Y displacement from the origin which will fit into the virtual
window.
DESCRIPTION:
This routine sets the location and size of the virtual window.  The defaults
are to start at the origin (0,0) and have the upper bounds be (79,23).  An
example of a call to this routine follows.  It will set up a virtual window
with the origin at (5,10) and the four points which will frame the window will
be: (5,10) (17,10) (5,28) (17,28)
 
CALL VWINDOW (5,10,12,18)
00001
00003
00002
PURPOSE:
Move data into the virtual page, optionally move the cursor first.
CALL:
CALL VWRITE (BUFFER,LENGTH [,X,Y])
PARAMETERS:
BUFFER
     The buffer containing the new data to be written to the virtual window.
LENGTH
     The length of the buffer.
X
     The optionally specified X value of where in the virtual window the buffer
is to be written.
Y
     The optionally specified Y value of where in the virtual window the buffer
is to be written.
DESCRIPTION:
X or Y can be specified to locate the cursor in the virtual window.  If only Y
is to be specified, use a blank for X as a place holder.  Puts the buffer into
the virtual window updating the memory resident picture of the screen.  This
routine does not change the physical screen.  The buffer is placed where the
last VCURSOR call set the coordinates to, or if the X and Y are specified for
this call, that is where the buffer is placed.  If X and Y are specified in
this call, they update the X and Y of where the cursor was.  In other words,
this X and Y will act as a most recent call to VCURSOR.
00001
00003
00002
VPAGE.X
AID=UTILITY
SCREEN_UPDATING
TERMINALS
TOOL=VPAGE
Routines that handle CRT screen updating so that a minimum number of characters
are sent over a communications line.
CHANGES
