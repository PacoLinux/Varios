VERSION E05

PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:1    
        1        1        /*M*    XUE$EVAL   implements expression evaluation     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
        8        8        /*F*    NAME:          X$EVAL
        9        9                PURPOSE:       To provide necessary setup for X$EVALUATE
       10       10                DESCRIPTION:   This routine will parse input text, setup
       11       11                               the free string space management macros,
       12       12                               handle errors and perform other setup functions
       13       13                               needed for X$EVALUATE.
       14       14        */
       15       15        X$EVAL: PROC (XUE_ECB) ALTRET;
       16       16        /***** Include files *****/
       17       17          %INCLUDE CP_6;
       18     5576          %INCLUDE CP_6_SUBS;
       19     6116          %INCLUDE XUE_MACRO_C;
       20     6860          %INCLUDE XUE_SUBS_C;
       21     7040          %INCLUDE XU_PERR_C;
       22     7231          %INCLUDE XUM_MACRO_C;
       23     7258        /***** Parameters *****/
       24     7259          %XUE_ECB (STCLASS=" ");
       25     7461        /***** Auto Structures *****/
       26     7462          %XUM$MCB (NAME=MCB,STCLASS=AUTO);
       27     7466    1   DCL EOF_NAME$ PTR CONSTANT INIT (ADDR(EOF_NAME));
       28     7467    1   DCL 1  EOF_NAME CONSTANT,
       29     7468    1         2  COUNT UBIN BYTE UNAL INIT(4),
       30     7469    1         2  TEXT CHAR(4) UNAL INIT ('$EOF');
       31     7470    1   DCL ZERO$ PTR CONSTANT INIT (ADDR(ZERO));
       32     7471    1   DCL 1  ZERO CONSTANT,
       33     7472    1         2  COUNT UBIN BYTE UNAL INIT (1),
       34     7473    1         2  TEXT CHAR(1) UNAL INIT('0');
       35     7474        /***** External Routines *****/
       36     7475          %XUE_ENTRIES (OMIT=X$EVAL);
       37     7499        /***** Error Codes *****/
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:2    
       38     7500          %VLP_ERRCODE (FPTN=E_SMALLWORK,ERR#=%E$XUE#SMALLWORK,
       39     7501                        FCG='XU',MID='E',STCLASS=CONSTANT);
       40     7546          /*E*    ERROR: XUE-E$XUE#SMALLWORK-0
       41     7547                  MESSAGE: Expression too complex for workspace available.
       42     7548                  MESSAGE1: Try multiple simple expressions.
       43     7549        */
       44     7550        /***** Special ENTREFs to make library search work properly *****/
       45     7551    1   ENTREFS: PROC;
       46     7552    2   DCL XUE_FUNCTIONS ENTRY CONV (5);
       47     7553    2   DCL XUE_EXP ENTRY CONV (5);
       48     7554    2   END ENTREFS;
       49     7555        %EJECT;
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:3    
       50     7556        /*
       51     7557             ***** Initialize ...
       52     7558        */
       53     7559    1       XUE_ECB.ERR = '0'B;
       54     7560    1       XUE_ECB.ERR_POS# = 0;
       55     7561    1       XUE_ECB.ERR_DCB# = 0;
       56     7562    1       MCB.FREE_HEAD$ = ADDR(NIL);
       57     7563    1       MCB.SEGMENT_BASE$ = XUE_ECB.WORK$;
       58     7564    1       MCB.HI_SEGMENT$ = MCB.SEGMENT_BASE$;
       59     7565    1       MCB.WKSZ = XUE_ECB.WKSZ#;
       60     7566    1       MCB.TYPE = 0; /* Byte allocation */
       61     7567    1       MCB.MIN_SIZE = 0;
       62     7568        /*
       63     7569             ***** Call X$EVALUATE ...
       64     7570        */
       65     7571    1       XUE_ECB.INTERNAL = '0'B;
       66     7572    1       CALL X$EVALUATE (XUE_ECB.TREE$,XUE_ECB,MCB) ALTRET(E_EVAL);
       67     7573        /*
       68     7574             ***** Do any required cleanup ...
       69     7575        */
       70     7576    1       IF XUE_ECB.INTERNAL.RESET_EOF#
       71     7577    1       THEN
       72     7578    2       DO;
       73     7579    2           CALL X$PUT_VAR (EOF_NAME$,ZERO$,XUE_ECB,0,%XUE_INTERNAL#) ALTRET(E_EVAL);
       74     7580    2           XUE_ECB.INTERNAL.RESET_EOF# = %NO#;
       75     7581    2       END;
       76     7582    1       RETURN;
       77     7583    1   E_EVAL:
       78     7584    1       IF XUE_ECB.ERR.CODE = %E$NOSPACE
       79     7585    1       THEN   /* Translate err code */
       80     7586    1           XUE_ECB.ERR = E_SMALLWORK;
       81     7587    1       ALTRETURN;
       82     7588    1   END X$EVAL;
       83     7589        %EOD;

PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:4    
--  Include file information  --

   XUM_MACRO_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XUE_SUBS_C.:E05TOU  is referenced.
   XUE_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X$EVAL.

   Procedure X$EVAL requires 55 words for executable code.
   Procedure X$EVAL requires 22 words of local(AUTO) storage.

PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:5    

 Object Unit name= X$EVAL                                     File name= XUE$EVAL.:E05TOU
 UTS= JUL 30 '97 09:12:29.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      6      6  X$EVAL
    2   Proc  even  none    55     67  X$EVAL
    3  RoData even  none     4      4  X$EVAL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  X$EVAL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 X$EVALUATE
 yes     yes           Std       5 X$PUT_VAR
         yes          ~proc      0 XUE_FUNCTIONS
         yes          ~proc      0 XUE_EXP
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:7    


        1        1        /*M*    XUE$EVAL   implements expression evaluation     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
        8        8        /*F*    NAME:          X$EVAL
        9        9                PURPOSE:       To provide necessary setup for X$EVALUATE
       10       10                DESCRIPTION:   This routine will parse input text, setup
       11       11                               the free string space management macros,
       12       12                               handle errors and perform other setup functions
       13       13                               needed for X$EVALUATE.
       14       14        */
       15       15        X$EVAL: PROC (XUE_ECB) ALTRET;

     15  2 000000   000000 700200 xent  X$EVAL       TSX0  ! X66_AUTO_1
         2 000001   000026 000001                    ZERO    22,1
         2 000002   000005 710000 2                  TRA     s:7559

       16       16        /***** Include files *****/
       17       17          %INCLUDE CP_6;
       18     5576          %INCLUDE CP_6_SUBS;
       19     6116          %INCLUDE XUE_MACRO_C;
       20     6860          %INCLUDE XUE_SUBS_C;
       21     7040          %INCLUDE XU_PERR_C;
       22     7231          %INCLUDE XUM_MACRO_C;
       23     7258        /***** Parameters *****/
       24     7259          %XUE_ECB (STCLASS=" ");
       25     7461        /***** Auto Structures *****/
       26     7462          %XUM$MCB (NAME=MCB,STCLASS=AUTO);
       27     7466    1   DCL EOF_NAME$ PTR CONSTANT INIT (ADDR(EOF_NAME));
       28     7467    1   DCL 1  EOF_NAME CONSTANT,
       29     7468    1         2  COUNT UBIN BYTE UNAL INIT(4),
       30     7469    1         2  TEXT CHAR(4) UNAL INIT ('$EOF');
       31     7470    1   DCL ZERO$ PTR CONSTANT INIT (ADDR(ZERO));
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:8    
       32     7471    1   DCL 1  ZERO CONSTANT,
       33     7472    1         2  COUNT UBIN BYTE UNAL INIT (1),
       34     7473    1         2  TEXT CHAR(1) UNAL INIT('0');
       35     7474        /***** External Routines *****/
       36     7475          %XUE_ENTRIES (OMIT=X$EVAL);
       37     7499        /***** Error Codes *****/
       38     7500          %VLP_ERRCODE (FPTN=E_SMALLWORK,ERR#=%E$XUE#SMALLWORK,
       39     7501                        FCG='XU',MID='E',STCLASS=CONSTANT);
       40     7546          /*E*    ERROR: XUE-E$XUE#SMALLWORK-0
       41     7547                  MESSAGE: Expression too complex for workspace available.
       42     7548                  MESSAGE1: Try multiple simple expressions.
       43     7549        */
       44     7550        /***** Special ENTREFs to make library search work properly *****/
       45     7551    1   ENTREFS: PROC;

   7551  2 000003   200016 741300       ENTREFS      STX1  ! MCB+10,,AUTO

       46     7552    2   DCL XUE_FUNCTIONS ENTRY CONV (5);
       47     7553    2   DCL XUE_EXP ENTRY CONV (5);
       48     7554    2   END ENTREFS;

   7554  2 000004   000001 702211                    TSX2  ! 1,X1

       49     7555        %EJECT;
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:9    
       50     7556        /*
       51     7557             ***** Initialize ...
       52     7558        */
       53     7559    1       XUE_ECB.ERR = '0'B;

   7559  2 000005   200003 470500                    LDP0    @XUE_ECB,,AUTO
         2 000006   000011 450100                    STZ     9,,PR0

       54     7560    1       XUE_ECB.ERR_POS# = 0;

   7560  2 000007   000000 220003                    LDX0    0,DU
         2 000010   000010 740100                    STX0    8,,PR0

       55     7561    1       XUE_ECB.ERR_DCB# = 0;

   7561  2 000011   000010 440100                    SXL0    8,,PR0

       56     7562    1       MCB.FREE_HEAD$ = ADDR(NIL);

   7562  2 000012   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000013   200005 756100                    STQ     MCB+1,,AUTO

       57     7563    1       MCB.SEGMENT_BASE$ = XUE_ECB.WORK$;

   7563  2 000014   000001 236100                    LDQ     1,,PR0
         2 000015   200006 756100                    STQ     MCB+2,,AUTO

       58     7564    1       MCB.HI_SEGMENT$ = MCB.SEGMENT_BASE$;

   7564  2 000016   200007 756100                    STQ     MCB+3,,AUTO

       59     7565    1       MCB.WKSZ = XUE_ECB.WKSZ#;

   7565  2 000017   000002 235100                    LDA     2,,PR0
         2 000020   200010 755100                    STA     MCB+4,,AUTO

       60     7566    1       MCB.TYPE = 0; /* Byte allocation */
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:10   

   7566  2 000021   200011 450100                    STZ     MCB+5,,AUTO

       61     7567    1       MCB.MIN_SIZE = 0;

   7567  2 000022   200013 450100                    STZ     MCB+7,,AUTO

       62     7568        /*
       63     7569             ***** Call X$EVALUATE ...
       64     7570        */
       65     7571    1       XUE_ECB.INTERNAL = '0'B;

   7571  2 000023   000020 450100                    STZ     16,,PR0

       66     7572    1       CALL X$EVALUATE (XUE_ECB.TREE$,XUE_ECB,MCB) ALTRET(E_EVAL);

   7572  2 000024   200004 631500                    EPPR1   MCB,,AUTO
         2 000025   200022 451500                    STP1    MCB+14,,AUTO
         2 000026   200003 236100                    LDQ     @XUE_ECB,,AUTO
         2 000027   200003 235100                    LDA     @XUE_ECB,,AUTO
         2 000030   200020 757100                    STAQ    MCB+12,,AUTO
         2 000031   200020 630500                    EPPR0   MCB+12,,AUTO
         2 000032   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000033   000000 701000 xent               TSX1    X$EVALUATE
         2 000034   000057 702000 2                  TSX2    E_EVAL

       67     7573        /*
       68     7574             ***** Do any required cleanup ...
       69     7575        */
       70     7576    1       IF XUE_ECB.INTERNAL.RESET_EOF#

   7576  2 000035   200003 470500                    LDP0    @XUE_ECB,,AUTO
         2 000036   000020 234100                    SZN     16,,PR0
         2 000037   000056 605000 2                  TPL     s:7582

       71     7577    1       THEN
       72     7578    2       DO;
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:11   

       73     7579    2           CALL X$PUT_VAR (EOF_NAME$,ZERO$,XUE_ECB,0,%XUE_INTERNAL#) ALTRET(E_EVAL);

   7579  2 000040   000000 236000 3                  LDQ     0
         2 000041   200024 756100                    STQ     MCB+16,,AUTO
         2 000042   000001 236000 3                  LDQ     1
         2 000043   200003 235100                    LDA     @XUE_ECB,,AUTO
         2 000044   200022 757100                    STAQ    MCB+14,,AUTO
         2 000045   000002 237000 3                  LDAQ    2
         2 000046   200020 757100                    STAQ    MCB+12,,AUTO
         2 000047   200020 630500                    EPPR0   MCB+12,,AUTO
         2 000050   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000051   000000 701000 xent               TSX1    X$PUT_VAR
         2 000052   000057 702000 2                  TSX2    E_EVAL

       74     7580    2           XUE_ECB.INTERNAL.RESET_EOF# = %NO#;

   7580  2 000053   200003 470500                    LDP0    @XUE_ECB,,AUTO
         2 000054   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 000055   000020 356100                    ANSQ    16,,PR0

       75     7581    2       END;

       76     7582    1       RETURN;

   7582  2 000056   000000 702200 xent               TSX2  ! X66_ARET

       77     7583    1   E_EVAL:
       78     7584    1       IF XUE_ECB.ERR.CODE = %E$NOSPACE

   7584  2 000057   200003 470500       E_EVAL       LDP0    @XUE_ECB,,AUTO
         2 000060   000011 236100                    LDQ     9,,PR0
         2 000061   377770 376007                    ANQ     131064,DL
         2 000062   003120 116007                    CMPQ    1616,DL
         2 000063   000066 601000 2                  TNZ     s:7587

       79     7585    1       THEN   /* Translate err code */
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:12   
       80     7586    1           XUE_ECB.ERR = E_SMALLWORK;

   7586  2 000064   000005 236000 1                  LDQ     E_SMALLWORK
         2 000065   000011 756100                    STQ     9,,PR0

       81     7587    1       ALTRETURN;

   7587  2 000066   000000 702200 xent               TSX2  ! X66_AALT
       82     7588    1   END X$EVAL;
       83     7589        %EOD;

PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:13   
--  Include file information  --

   XUM_MACRO_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XUE_SUBS_C.:E05TOU  is referenced.
   XUE_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X$EVAL.
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:14   

 **** Variables and constants ****

  ****  Section 001 RoData X$EVAL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c STRC(45)    r     1 EOF_NAME                   0-0-0/w PTR         r     1 EOF_NAME$
     5-0-0/w STRC        r     1 E_SMALLWORK                4-0-0/c STRC(18)    r     1 ZERO
     3-0-0/w PTR         r     1 ZERO$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @XUE_ECB                   4-0-0/w STRC(324)   r     1 MCB
    *0-0-0/d STRC(1008)  r     1 XUE_ECB


   Procedure X$EVAL requires 55 words for executable code.
   Procedure X$EVAL requires 22 words of local(AUTO) storage.
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:15   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:16   
          MINI XREF LISTING

EOF_NAME
      7467**DCL      7466--DCLINIT
EOF_NAME$
      7466**DCL      7579<>CALL
E_EVAL
      7584**LABEL    7572--CALLALT  7579--CALLALT
E_SMALLWORK
      7513**DCL      7586>>ASSIGN
MCB
      7463**DCL      7572<>CALL
MCB.FREE_HEAD$
      7463**DCL      7562<<ASSIGN
MCB.HI_SEGMENT$
      7463**DCL      7564<<ASSIGN
MCB.MIN_SIZE
      7464**DCL      7567<<ASSIGN
MCB.SEGMENT_BASE$
      7463**DCL      7563<<ASSIGN   7564>>ASSIGN
MCB.TYPE
      7463**DCL      7566<<ASSIGN
MCB.WKSZ
      7463**DCL      7565<<ASSIGN
X$EVALUATE
      7480**DCL-ENT  7572--CALL
X$PUT_VAR
      7484**DCL-ENT  7579--CALL
XUE_ECB
      7273**DCL        15--PROC     7572<>CALL     7579<>CALL
XUE_ECB.ERR
      7357**DCL      7559<<ASSIGN   7586<<ASSIGN
XUE_ECB.ERR.CODE
      7361**DCL      7584>>IF
PL6.E3A0      #001=X$EVAL File=XUE$EVAL.:E05TSI                                  WED 07/30/97 09:12 Page:17   
XUE_ECB.ERR_DCB#
      7349**DCL      7561<<ASSIGN
XUE_ECB.ERR_POS#
      7340**DCL      7560<<ASSIGN
XUE_ECB.INTERNAL
      7432**DCL      7571<<ASSIGN
XUE_ECB.INTERNAL.RESET_EOF#
      7433**DCL      7576>>IF       7580<<ASSIGN
XUE_ECB.TREE$
      7277**DCL      7572<>CALL
XUE_ECB.WKSZ#
      7288**DCL      7565>>ASSIGN
XUE_ECB.WORK$
      7283**DCL      7563>>ASSIGN
ZERO
      7471**DCL      7470--DCLINIT
ZERO$
      7470**DCL      7579<>CALL

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:18   
       84        1        /*T***********************************************************/
       85        2        /*T*                                                         */
       86        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       87        4        /*T*                                                         */
       88        5        /*T***********************************************************/
       89        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
       90        7        /*F*    NAME:          X$EVALUATE
       91        8                PURPOSE:       To evaluate IBEX-type expressions.
       92        9                DESCRIPTION:   This RECURSIVE routine uses operator
       93       10                               precedence to parse expressions.
       94       11                               It is called initially by X$EVAL which
       95       12                               performs all setup required for this
       96       13                               routine.
       97       14        */
       98       15        X$EVALUATE: PROC (TREE$,XUE_ECB,MCB) ALTRET;
       99       16        /***** Include Files *****/
      100       17          %INCLUDE B$JIT;
      101      620          %INCLUDE B_MACROS_C;
      102      731          %INCLUDE CP_6;
      103     6290          %INCLUDE CP_6_SUBS;
      104     6830          %INCLUDE B_ERRORS_C;
      105     7957          %INCLUDE XU_MACRO_C;
      106    11063          %INCLUDE XU_PERR_C;
      107    11254          %INCLUDE XUM_MACRO_C;
      108    11281          %INCLUDE NK_VFC_C;
      109    11355          %INCLUDE XUE_MACRO_C;
      110    12099          %INCLUDE XUE_SUBS_C;
      111    12279          %INCLUDE XUW_MACRO_C;
      112    12414          %INCLUDE FM$FIT;
      113    12635          %INCLUDE B$TABLES_C;
      114    12743        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:19   
      115    12744        /***** Parameters *****/
      116    12745          %XUE_ECB (NAME=XUE_ECB,STCLASS=" ");
      117    12947          %XUM$MCB (NAME=MCB,STCLASS=" ");
      118    12951        /***** Symref Variables ******/
      119    12952    1   DCL B$JIT$ PTR SYMREF;
      120    12953    1   DCL B$TCB$ PTR SYMREF;
      121    12954        /***** Based Structures *****/
      122    12955          %PARSE$OUT (NAME=P$B,STCLASS=BASED);
      123    13000          %PARSE$SYM (NAME=P$S,STCLASS=BASED);
      124    13038          %B$TCB (STCLASS="BASED(B$TCB$)");
      125    13041          %B$ALT;
      126    13049          %F$DCB;
      127    13106          %TEXTC (NAME=X$STRING,STCLASS=BASED);
      128    13111    1   DCL 1 U$STRING BASED ALIGNED,
      129    13112    1         2 SIZ UBIN BYTE UNAL,
      130    13113    1         2 TEXT (0:0) UBIN BYTE UNAL;
      131    13114          %CODE03;                              /* FIT structure                      */
      132    13121        /***** Auto Structures *****/
      133    13122    1   DCL 1 KEYIN_RESULTS ALIGNED AUTO,
      134    13123    1         2 TYC UBIN WORD,
      135    13124    1         2 ARS# UBIN WORD;
      136    13125        /***** Ptr Variables *****/
      137    13126    1   DCL TREE$ PTR;
      138    13127    1   DCL VALUE$ PTR AUTO;
      139    13128    1   DCL TOKEN_PTR$ PTR AUTO;
      140    13129    1   DCL TEMP$ PTR;
      141    13130        /***** Vectors *****/
      142    13131    1   DCL FPARAM_VECTOR VECTOR;
      143    13132        /***** Word/array variables *****/
      144    13133    1   DCL MORE# BIT(1) AUTO;
      145    13134    1   DCL TBIT BIT(1);                      /* TEMP                               */
      146    13135    1   DCL CHARPOS UBIN WORD AUTO;
      147    13136    1   DCL OP_PTR SBIN WORD AUTO;
      148    13137    1   DCL VAL_PTR SBIN WORD AUTO;
      149    13138    1   DCL NUM_ARGS SBIN WORD AUTO;
      150    13139    1   DCL TOKEN_INDX SBIN WORD AUTO;
      151    13140    1   DCL TOKEN UBIN WORD AUTO;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:20   
      152    13141    1   DCL TEMP SBIN;
      153    13142    1   DCL TEMP3 SBIN;
      154    13143    1   DCL NUM_TO_POP SBIN;
      155    13144    1   DCL SAVE_PROMPT CHAR(31) AUTO;
      156    13145        /***** Stacks *****/
      157    13146    1   DCL OP_STACK (0:%XUE_STACK_SIZE) UBIN BYTE UNAL AUTO;
      158    13147    1   DCL NUM_TO_POP_STACK (0:%XUE_STACK_SIZE) UBIN BYTE UNAL AUTO;
      159    13148    1   DCL VAL_STACK$ (0:%(XUE_STACK_SIZE*2)) PTR AUTO;
      160    13149    1   DCL VAL_TYPE (0:%(XUE_STACK_SIZE*2)) UBIN BYTE UNAL AUTO;
      161    13150    1   DCL CHARPOS_STACK (0:%(XUE_STACK_SIZE*2)) UBIN HALF UNAL AUTO;
      162    13151        /***** Constants *****/
      163    13152    1   DCL ZERO$ PTR CONSTANT INIT (ADDR(ZERO));
      164    13153    1   DCL 1  ZERO CONSTANT,
      165    13154    1         2  COUNT UBIN BYTE UNAL INIT (1),
      166    13155    1         2  TEXT CHAR(1) UNAL INIT('0');
      167    13156    1   DCL ONE$ PTR CONSTANT INIT (ADDR(ONE));
      168    13157    1   DCL 1  ONE CONSTANT,
      169    13158    1         2  COUNT UBIN BYTE UNAL INIT (1),
      170    13159    1         2  TEXT CHAR(1) UNAL INIT('1');
      171    13160    1   DCL YES$ PTR CONSTANT INIT (ADDR(YES));
      172    13161    1   DCL 1  YES CONSTANT,
      173    13162    1         2  COUNT UBIN BYTE UNAL INIT (3),
      174    13163    1         2  TEXT CHAR(3) UNAL INIT('YES');
      175    13164    1   DCL NO$ PTR CONSTANT INIT (ADDR(NO));
      176    13165    1   DCL 1  NO CONSTANT,
      177    13166    1         2  COUNT UBIN BYTE UNAL INIT (2),
      178    13167    1         2  TEXT CHAR(3) UNAL INIT('NO');
      179    13168    1   DCL EOF_NAME$ PTR CONSTANT INIT (ADDR(EOF_NAME));
      180    13169    1   DCL 1  EOF_NAME CONSTANT,
      181    13170    1         2  COUNT UBIN BYTE UNAL INIT(4),
      182    13171    1         2  TEXT CHAR(4) UNAL INIT ('$EOF');
      183    13172    1   DCL 1  PROMPT_VFC CONSTANT,
      184    13173    1         2  TEXT CHAR(1) INIT (%BITASC('140'O));
      185    13174    1   DCL 1  SAME_LINE CONSTANT,
      186    13175    1         2  TEXT CHAR(1) INIT (%BITASC('100'O));
      187    13176        /***** Conversion Tables *****/
      188    13177        %EQU TOP_ASN# = 8;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:21   
      189    13178    1   DCL 1 ASN_TBL (0:%TOP_ASN#) CONSTANT,
      190    13179    1         2 CODE UBIN BYTE CALIGNED INIT(
      191    13180    1           0,                              /* ??? NOT IN TABLE ???               */
      192    13181    1           %FILE#,                         /* FILE                               */
      193    13182    1           %TAPE#,                         /* TAPE                               */
      194    13183    1           %DEVICE#,                       /* DEVICE                             */
      195    13184    1           %COMGROUP#,                     /* COMGROUP                           */
      196    13185    1           %STREAM#,                       /* STREAM                             */
      197    13186    1           %T@D#,                          /* T@D                                */
      198    13187    1           %FMDIAG#,                       /* FMDIAG                             */
      199    13188    1           %FPRGIASN#),                    /* FPRGIASN                           */
      200    13189    1         2 TEXT CHAR(8) CALIGNED INIT(
      201    13190    1           '???     ',                     /* ??? NOT IN TABLE ???               */
      202    13191    1           'FILE    ',                     /* FILE                               */
      203    13192    1           'TAPE    ',                     /* TAPE                               */
      204    13193    1           'DEVICE  ',                     /* DEVICE                             */
      205    13194    1           'COMGROUP',                     /* COMGROUP                           */
      206    13195    1           'STREAM  ',                     /* STREAM                             */
      207    13196    1           'T@D     ',                     /* T@D                                */
      208    13197    1           'FMDIAG  ',                     /* FMDIAG                             */
      209    13198    1           'FPRGIASN'),                    /* FPRGIASN                           */
      210    13199    1         2 C UBIN BYTE CALIGNED INIT(
      211    13200    1           3,                              /* ??? NOT IN TABLE ???               */
      212    13201    1           4,                              /* FILE                               */
      213    13202    1           4,                              /* TAPE                               */
      214    13203    1           6,                              /* DEVICE                             */
      215    13204    1           8,                              /* COMGROUP                           */
      216    13205    1           6,                              /* STREAM                             */
      217    13206    1           3,                              /* T@D                                */
      218    13207    1           6,                              /* FMDIAG                             */
      219    13208    1           8);                             /* FPRGIASN                           */
      220    13209        %EQU TOP_ORG# = 15;
      221    13210    1   DCL 1 ORG_TBL (0:%TOP_ORG#) CONSTANT,
      222    13211    1         2 CODE UBIN BYTE CALIGNED INIT(
      223    13212    1           0,                              /* ??? NOT IN TABLE ???               */
      224    13213    1           %CONSEC#,                       /* CONSEC                             */
      225    13214    1           %KEYED#,                        /* KEYED                              */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:22   
      226    13215    1           %RANDOM#,                       /* RANDOM                             */
      227    13216    1           %UR#,                           /* UR                                 */
      228    13217    1           %RELATIVE#,                     /* RELATIVE                           */
      229    13218    1           %INDEXED#,                      /* INDEXED                            */
      230    13219    1           %IDS#,                          /* IDS                                */
      231    13220    1           %SYMB#,                         /* SYMB                               */
      232    13221    1           %CG#,                           /* CG                                 */
      233    13222    1           %IREL#,                         /* IREL                               */
      234    13223    1           %RESTRICT#,                     /* RESTRICT                           */
      235    13224    1           %FIXED#,                        /* FIXED                              */
      236    13225    1           %VARIABLE#,                     /* VARIABLE                           */
      237    13226    1           %UNDEF#,                        /* UNDEF                              */
      238    13227    1           %FREE#),                        /* FREE                               */
      239    13228    1         2 TEXT CHAR(8) CALIGNED INIT(
      240    13229    1           '???     ',                     /* ??? NOT IN TABLE ???               */
      241    13230    1           'CONSEC  ',                     /* CONSEC                             */
      242    13231    1           'KEYED   ',                     /* KEYED                              */
      243    13232    1           'RANDOM  ',                     /* RANDOM                             */
      244    13233    1           'UR      ',                     /* UR                                 */
      245    13234    1           'RELATIVE',                     /* RELATIVE                           */
      246    13235    1           'INDEXED ',                     /* INDEXED                            */
      247    13236    1           'IDS     ',                     /* IDS                                */
      248    13237    1           'SYMB    ',                     /* SYMB                               */
      249    13238    1           'CG      ',                     /* CG                                 */
      250    13239    1           'IREL    ',                     /* IREL                               */
      251    13240    1           'RESTRICT',                     /* RESTRICT                           */
      252    13241    1           'FIXED   ',                     /* FIXED                              */
      253    13242    1           'VARIABLE',                     /* VARIABLE                           */
      254    13243    1           'UNDEF   ',                     /* UNDEF                              */
      255    13244    1           'FREE    '),                    /* FREE                               */
      256    13245    1         2 C UBIN BYTE CALIGNED INIT(
      257    13246    1           3,                              /* ??? NOT IN TABLE ???               */
      258    13247    1           6,                              /* CONSEC                             */
      259    13248    1           5,                              /* KEYED                              */
      260    13249    1           6,                              /* RANDOM                             */
      261    13250    1           2,                              /* UR                                 */
      262    13251    1           8,                              /* RELATIVE                           */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:23   
      263    13252    1           7,                              /* INDEXED                            */
      264    13253    1           3,                              /* IDS                                */
      265    13254    1           4,                              /* SYMB                               */
      266    13255    1           2,                              /* CG                                 */
      267    13256    1           4,                              /* IREL                               */
      268    13257    1           8,                              /* RESTRICT                           */
      269    13258    1           5,                              /* FIXED                              */
      270    13259    1           8,                              /* VARIABLE                           */
      271    13260    1           5,                              /* UNDEF                              */
      272    13261    1           4);                             /* FREE                               */
      273    13262    1   DCL 1 PRIV (0:%(XUE_NUM_PRIVS-1)) CONSTANT,
      274    13263    1         2 MASK BIT(36) INIT(
      275    13264    1              %PR_ASAVE#,                  /* ASAVE                              */
      276    13265    1              %PR_CFEP#,                   /* CFEP                               */
      277    13266    1              %PR_DISPJOB#,                /* DISPJOB                            */
      278    13267    1              %PR_EXMM#,                   /* EXMM                               */
      279    13268    1              %PR_EXPM#,                   /* EXPM                               */
      280    13269    1              %PR_FMDIAG#,                 /* FMDIAG                             */
      281    13270    1              %PR_FMREAD#,                 /* FMREAD                             */
      282    13271    1              %PR_FMSEC#,                  /* FMSEC                              */
      283    13272    1              %PR_GPP#,                    /* GPP                                */
      284    13273    1              %PR_IOQ#,                    /* IOQ                                */
      285    13274    1              %PR_IOQW#,                   /* IOQW                               */
      286    13275    1              %PR_JIT#,                    /* JIT                                */
      287    13276    1              %PR_MAXMEM#,                 /* MAXMEM                             */
      288    13277    1              %PR_MFEP#,                   /* MFEP                               */
      289    13278    1              %PR_PM#,                     /* PM                                 */
      290    13279    1              %PR_SPCLMM#,                 /* SPCLMM                             */
      291    13280    1              %PR_SYSCON#,                 /* SYSCON                             */
      292    13281    1              %PR_SYSLOG#,                 /* SYSLOG                             */
      293    13282    1              %PR_TND#);                   /* TND                                */
      294    13283        /*  LINE-SPEED CODE TO ACTUAL SPEED IN B.P.S.  */
      295    13284    1   DCL SPEED_TBL (0:15) UBIN(18) HALIGNED CONSTANT INIT(
      296    13285    1            50,                            /* 00                                 */
      297    13286    1            75,                            /* 01                                 */
      298    13287    1           110,                            /* 02                                 */
      299    13288    1           134,                            /* 03                                 */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:24   
      300    13289    1           150,                            /* 04                                 */
      301    13290    1           200,                            /* 05                                 */
      302    13291    1           300,                            /* 06                                 */
      303    13292    1           600,                            /* 07                                 */
      304    13293    1          1050,                            /* 08                                 */
      305    13294    1          1200,                            /* 09                                 */
      306    13295    1          1800,                            /* 10                                 */
      307    13296    1          2000,                            /* 11                                 */
      308    13297    1          2400,                            /* 12                                 */
      309    13298    1          4800,                            /* 13                                 */
      310    13299    1          9600,                            /* 14                                 */
      311    13300    1         19200);                           /* 15                                 */
      312    13301        /***** External Routines *****/
      313    13302          %XUE_ENTRIES (OMIT=X$EVALUATE);
      314    13326          %XUM_ENTRIES;
      315    13334          %XUW_ENTRIES;
      316    13346    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
      317    13347        /***** Auto Fpts *****/
      318    13348          %FPT_KEYIN (FPTN=FPT_KEYIN,STCLASS=AUTO);
      319    13367          %FPT_MONINFO (FPTN=FPT_MONINFO,STCLASS=AUTO);
      320    13382          %FPT_PROMPT (FPTN=FPT_PROMPT,STCLASS=AUTO);
      321    13410          %FPT_PROMPT (FPTN=FPT_SAVE_PROMPT,STCLASS=AUTO);
      322    13438          %FPT_READ (FPTN=FPT_READ,STCLASS=AUTO);
      323    13477          %FPT_SINPUT (FPTN=FPT_SINPUT,STCLASS=AUTO);
      324    13514          %FPT_TIME (FPTN=FPT_TIME,STCLASS=AUTO);
      325    13533          %FPT_WRITE (FPTN=FPT_WRITE,STCLASS=AUTO);
      326    13564          %FPT_GLINEATTR (FPTN=FPT_GLINEATTR,STCLASS=AUTO);
      327    13589          %VLP_LINEATTR (FPTN=VLP_LINEATTR,STCLASS=AUTO);
      328    13611          %VLR_SITEINFO (FPTN=VLR_SITEINFO,STCLASS=AUTO);
      329    13630        /***** Constant Fpts *****/
      330    13631          %FPT_KEYIN (FPTN=CFPT_KEYIN,STCLASS=CONSTANT);
      331    13650          %FPT_MONINFO (FPTN=CFPT_MONINFO,STCLASS=CONSTANT);
      332    13665          %FPT_PROMPT (FPTN=CFPT_PROMPT,STCLASS=CONSTANT);
      333    13693          %FPT_READ (FPTN=CFPT_READ,STCLASS=CONSTANT);
      334    13732          %FPT_TIME (FPTN=CFPT_TIME,STCLASS=CONSTANT);
      335    13751          %FPT_WRITE (FPTN=CFPT_WRITE,STCLASS=CONSTANT);
      336    13782          %FPT_FID (FPTN=CFPT_FID,STCLASS=CONSTANT);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:25   
      337    13805          %FPT_SINPUT (FPTN=CFPT_SINPUT,STCLASS=CONSTANT);
      338    13842          %FPT_OPEN (FPTN=CFPT_OPEN,STCLASS=CONSTANT);
      339    13951          %FPT_GLINEATTR (FPTN=CFPT_GLINEATTR,STCLASS=CONSTANT);
      340    13976        /***** Auto for FID parts *****/
      341    13977          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
      342    13996          %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
      343    14023          %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
      344    14036          %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
      345    14049          %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
      346    14062          %VLP_SN (FPTN=FID_SN,N=3,STCLASS=AUTO);
      347    14075    1   DCL FID_ASN UBIN BYTE AUTO;
      348    14076    1   DCL FID_RES CHAR(4) AUTO;
      349    14077        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:26   
      350    14078        /***** Macros *****/
      351    14079          %MACRO ERR_CODE (NAME=JUNK,CODE=0,SEV=0);
      352    14080            %VLP_ERRCODE (FPTN=NAME,
      353    14081                          FCG="XU",
      354    14082                          MID="E",
      355    14083                          ERR#=CODE,
      356    14084                          STCLASS=CONSTANT);
      357    14085          %MEND;
      358    14086        /**/
      359    14087          %MACRO PUSH_VALUE (VALUE=VALUE$,TYPE=NIL_IS_BUG,CPOS=CHARPOS);
      360    14088            VAL_PTR = VAL_PTR + 1;
      361    14089            IF VAL_PTR > %XUE_STACK_SIZE
      362    14090            THEN
      363    14091            DO;   /* Return error */
      364    14092                XUE_ECB.ERR = E_STKOVFL;
      365    14093                XUE_ECB.ERR_POS# = CHARPOS;
      366    14094                ALTRETURN;
      367    14095            END;
      368    14096            ELSE
      369    14097            DO;   /* Stash VALUE, VAL_TYPE and CHARPOS */
      370    14098                VAL_STACK$(VAL_PTR) = VALUE;
      371    14099                VAL_TYPE(VAL_PTR) = TYPE;
      372    14100                CHARPOS_STACK(VAL_PTR) = CPOS;
      373    14101            END;
      374    14102          %MEND;
      375    14103        /**/
      376    14104        %MACRO PUSH_OPERATOR (NARGS=0);
      377    14105            OP_PTR = OP_PTR + 1;
      378    14106            IF OP_PTR > %XUE_STACK_SIZE
      379    14107            THEN
      380    14108            DO;   /* Return error */
      381    14109                XUE_ECB.ERR = E_STKOVFL;
      382    14110                XUE_ECB.ERR_POS# = CHARPOS;
      383    14111                ALTRETURN;
      384    14112            END;
      385    14113            ELSE
      386    14114            DO;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:27   
      387    14115                OP_STACK(OP_PTR) = TOKEN;
      388    14116                NUM_TO_POP_STACK(OP_PTR) = NARGS;
      389    14117            END;
      390    14118        %MEND;
      391    14119        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:28   
      392    14120        /***** Error Codes *****/
      393    14121          %ERR_CODE (NAME=E_STKOVFL,CODE=%E$XUE#STKOVFL);
      394    14172          /*E*    ERROR: XUE-E$XUE#STKOVFL-0
      395    14173                  MESSAGE: Stack overflow. Expression too complex.
      396    14174                  MESSAGE1: Grouping with extra parenthesis may help.
      397    14175          */
      398    14176          %ERR_CODE (NAME=E_BIGSTR,CODE=%E$XUE#BIGSTR);
      399    14227          /*E*    ERROR: XUE-E$XUE#BIGSTR-0
      400    14228               MESSAGE: Index specified is not within bounds of string.
      401    14229          */
      402    14230          %ERR_CODE (NAME=E_ILLINDEX,CODE=%E$XUE#ILLINDEX);
      403    14281          /*E*    ERROR: XUE-E$XUE#ILLINDEX-0
      404    14282                  MESSAGE: Starting index greater than ending index.
      405    14283          */
      406    14284          %ERR_CODE (NAME=E_MSGTOOLONG,CODE=%E$XUE#MSGTOOLONG);
      407    14335          /*E*    ERROR: XUE-E$XUE#MSGTOOLONG-0
      408    14336                  MESSAGE: Message to console must be 110 chars or less.
      409    14337          */
      410    14338          %ERR_CODE (NAME=E_ILLINPUT,CODE=%E$XUE#ILLINPUT);
      411    14389          /*E*    ERROR: XUE-E$XUE#ILLINPUT-0
      412    14390                  MESSAGE: Garbage characters before/after QUOTES.
      413    14391          */
      414    14392          %ERR_CODE (NAME=E_ILLQUOTE,CODE=%E$XUE#ILLQUOTE);
      415    14443          /*E*    ERROR: XUE-E$XUE#ILLQUOTE-0
      416    14444                  MESSAGE: Mismatched quotes.
      417    14445          */
      418    14446          %ERR_CODE (NAME=E_ZERODIVFLT,CODE=%E$XUE#ZERODIVFLT);
      419    14497          /*E*    ERROR: XUE-E$XUE#ZERODIVFLT-0
      420    14498                  MESSAGE: Division by zero is undefined.
      421    14499          */
      422    14500          %ERR_CODE (NAME=E_OFLOWFLT,CODE=%E$XUE#OFLOWFLT);
      423    14551          /*E*    ERROR: XUE-E$XUE#OFLOWFLT-0
      424    14552                  MESSAGE: Result of operation caused overflow.
      425    14553          */
      426    14554          %ERR_CODE (NAME=E_NONDECIMAL,CODE=%E$XUE#NONDECIMAL);
      427    14605          /*E*    ERROR: XUE-E$XUE#NONDECIMAL-0
      428    14606                  MESSAGE: Valid DECIMAL value required here.
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:29   
      429    14607                  MESSAGE1: The specified value may have been too large to process,
      430    14608           or it may have had illegal characters imbedded.
      431    14609          */
      432    14610          %ERR_CODE (NAME=E_CVARTOOBIG,CODE=%E$XUE#CVARTOOBIG);
      433    14661          /*E*    ERROR: XUE-E$XUE#CVARTOOBIG-0
      434    14662                  MESSAGE: The result of this operation will cause string overflow.
      435    14663                  MESSAGE1: This operation would cause overflow if stored into
      436    14664           a COMMAND VARIABLE (max size is 511 characters).
      437    14665          */
      438    14666          %ERR_CODE (NAME=E_NULLSTRING,CODE=%E$XUE#NULLSTRING);
      439    14717          /*E*    ERROR: XUE-E$XUE#NULLSTRING-0
      440    14718                  MESSAGE: NULL STRING not allowed.
      441    14719          */
      442    14720          %ERR_CODE (NAME=E_ILLFID,CODE=%E$XUE#ILLFID);
      443    14771          /*E*    ERROR: XUE-E$XUE#ILLFID-0
      444    14772                  MESSAGE: Must be a DISK or LABELED TAPE fid.
      445    14773          */
      446    14774          %ERR_CODE (NAME=E_BDSWITCH,CODE=%E$XUE#BDSWITCH);
      447    14825          /*E*    ERROR: XUE-E$XUE#BDSWITCH-0
      448    14826                  MESSAGE: SWITCHES are numbered 0 thru 35.
      449    14827          */
      450    14828          %ERR_CODE (NAME=E_STKFLT,CODE=%E$XUE#STKFLT);
      451    14879          /*E*    ERROR: XUE-E$XUE#STKFLT-0
      452    14880                  MESSAGE: Evaluation of this expression is not possible.
      453    14881                  MESSAGE1: The expression is meaningless.
      454    14882          */
      455    14883          %ERR_CODE (NAME=E_ILLNUMARGS,CODE=%E$XUE#ILLNUMARGS);
      456    14934          /*E*    ERROR: XUE-E$XUE#ILLNUMARGS-0
      457    14935                  MESSAGE: Wrong number of arguments for this function.
      458    14936          */
      459    14937          %ERR_CODE (NAME=E_BADMODE,CODE=%E$XUE#BADMODE);
      460    14988          /*E*    ERROR: XUE-E$XUE#BADMODE-0
      461    14989                  MESSAGE: That function is not applicable to this mode.
      462    14990          */
      463    14991          %ERR_CODE (NAME=E_NULLFUN$$,CODE=%E$XUE#NULLFUN$$);
      464    15042          /*E*    ERROR: XUE-E$XUE#NULLFUN$$-0
      465    15043                  MESSAGE: FUN$$ is nil. User-defined functions not possible.
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:30   
      466    15044          */
      467    15045          %ERR_CODE (NAME=E_ILLOPTION,CODE=%E$XUE#ILLOPTION);
      468    15096          /*E*    ERROR: XUE-E$XUE#ILLOPTION-0
      469    15097                  MESSAGE: That value not legal for this option.
      470    15098          */
      471    15099          %ERR_CODE (NAME=E_ILLFUNNAME,CODE=%E$XUE#ILLFUNNAME);
      472    15150          /*E*    ERROR: XUE-E$XUE#ILLFUNNAME-0
      473    15151                  MESSAGE: Unrecognized FUNCTION.
      474    15152          */
      475    15153          %ERR_CODE (NAME=E_ILLDCB,CODE=%E$XUE#ILLDCB);
      476    15204          /*E*    ERROR: XUE-E$XUE#ILLDCB-0
      477    15205                  MESSAGE: Caller's WORK_DCB# is not a valid dcb.
      478    15206                 MESSAGE1: Some XUE$EVAL functions require that the caller
      479    15207                           pass a valid DCB to play with.  You didn't.
      480    15208          */
      481    15209        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:31   
      482    15210        /*
      483    15211             ***** Function/Operator table ...
      484    15212                   This table is indexed by the master EQU for this function
      485    15213                   or operator.  It must EXACTLY reflect the ordering of
      486    15214                   functions and operators in XUE_SUBS_C (gaps included).
      487    15215
      488    15216                   PREC=a code indicating the precidence enjoyed by this
      489    15217                        operator.
      490    15218                   NTP=NUM_TO_POP specifies how many operands an OPERATOR
      491    15219                   or FUNCTION may have. Where a FUNCTION may have an
      492    15220                   arbirtray number of arguments this table will have
      493    15221                   511. The actual number will be contained in the
      494    15222                   stack NUM_TO_POP_STACK. This stack is parallel to OP_STACK.
      495    15223                   NOTE: THE MAX NUMBER OF ARGS IS DETERMINED BY THE SIZE
      496    15224                         OF VAL_STACK$.
      497    15225        */
      498    15226    1   DCL 1 FUNC (0:%(XUE_NUM_OPERATORS+XUE_NUM_FUNCTIONS-1)) CONSTANT,
      499    15227    1         2 PREC UBIN BYTE CALIGNED INIT(
      500    15228    1               0,                          /* BEGIN_MARKER                       */
      501    15229    1               0,                          /* END_MARKER                         */
      502    15230    1               7,                          /* MULTIPLY                           */
      503    15231    1               7,                          /* DIVIDE                             */
      504    15232    1               6,                          /* PLUS                               */
      505    15233    1               6,                          /* MINUS                              */
      506    15234    1               5,                          /* CONCAT                             */
      507    15235    1               4,                          /* EQUAL                              */
      508    15236    1               4,                          /* NEQUAL                             */
      509    15237    1               4,                          /* GTHAN                              */
      510    15238    1               4,                          /* GEQUAL                             */
      511    15239    1               4,                          /* LTHAN                              */
      512    15240    1               4,                          /* LEQUAL                             */
      513    15241    1               2,                          /* AND                                */
      514    15242    1               1,                          /* OR                                 */
      515    15243    1               3,                          /* U_NOT                              */
      516    15244    1               8,                          /* U_PLUS                             */
      517    15245    1               8,                          /* U_MINUS                            */
      518    15246    1              99,                          /* WEQ_LPAT                           */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:32   
      519    15247    1              99,                          /* WEQ_RPAT                           */
      520    15248    1              99,                          /* WCN_LPAT                           */
      521    15249    1              99,                          /* WCN_RPAT                           */
      522    15250    1              99,                          /* OPSPARE1                           */
      523    15251    1              99,                          /* OPSPARE2                           */
      524    15252    1              99,                          /* OPSPARE3                           */
      525    15253    1              99,                          /* FUNCSPARE0                         */
      526    15254    1              99,                          /* FUNCSPARE1                         */
      527    15255    1              99,                          /* FUNCSPARE2                         */
      528    15256    1               9,                          /* $TERM_PROFILE                      */
      529    15257    1               9,                          /* $TERM_FEP                          */
      530    15258    1               9,                          /* $TERM_LINE                         */
      531    15259    1               9,                          /* $TERM_SPEED                        */
      532    15260    1               9,                          /* $RERUN                             */
      533    15261    1               9,                          /* $PRIV_ACTIVE                       */
      534    15262    1               9,                          /* $PRIV_AUTH                         */
      535    15263    1               9,                          /* $FLAG                              */
      536    15264    1               9,                          /* $FID_ORG                           */
      537    15265    1               9,                          /* $FID_RECS                          */
      538    15266    1               9,                          /* $FID_GRANS                         */
      539    15267    1               9,                          /* $FID_UGRANS                        */
      540    15268    1               9,                          /* $FID_NGAVAL                        */
      541    15269    1               9,                          /* $UPC                               */
      542    15270    1               9,                          /* $LOC                               */
      543    15271    1               9,                          /* $ACCT                              */
      544    15272    1               9,                          /* $DATE                              */
      545    15273    1               9,                          /* $DAY                               */
      546    15274    1               9,                          /* $DIR                               */
      547    15275    1               9,                          /* $EOF                               */
      548    15276    1               9,                          /* $FID_EXIST                         */
      549    15277    1               9,                          /* $FID_TYPE                          */
      550    15278    1               9,                          /* $HSET                              */
      551    15279    1               9,                          /* $INDEX                             */
      552    15280    1               9,                          /* $INPUT                             */
      553    15281    1               9,                          /* $KEYIN                             */
      554    15282    1               9,                          /* $LASTBATCH                         */
      555    15283    1               9,                          /* $LEN                               */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:33   
      556    15284    1               9,                          /* $MAX                               */
      557    15285    1               9,                          /* $MIN                               */
      558    15286    1               9,                          /* $MOD                               */
      559    15287    1               9,                          /* $MODE                              */
      560    15288    1               9,                          /* $NAME                              */
      561    15289    1              99,                          /* FUNCSPARE3                         */
      562    15290    1               9,                          /* CMDVAR_EXIST                       */
      563    15291    1               9,                          /* $SEARCH                            */
      564    15292    1               9,                          /* $SITE                              */
      565    15293    1               9,                          /* $SUBSTR                            */
      566    15294    1               9,                          /* $SWITCH                            */
      567    15295    1               9,                          /* $SYSID                             */
      568    15296    1               9,                          /* $TIME                              */
      569    15297    1               9,                          /* $VERIFY                            */
      570    15298    1               9,                          /* $VERSION                           */
      571    15299    1               9,                          /* $WOO                               */
      572    15300    1               9,                          /* $ABS                               */
      573    15301    1               9,                          /* $REM                               */
      574    15302    1               9),                         /* $FID_ASN                           */
      575    15303    1         2 NTP UBIN BYTE CALIGNED INIT(
      576    15304    1               0,                          /* BEGIN_MARKER                       */
      577    15305    1               0,                          /* END_MARKER                         */
      578    15306    1               2,                          /* MULTIPLY                           */
      579    15307    1               2,                          /* DIVIDE                             */
      580    15308    1               2,                          /* PLUS                               */
      581    15309    1               2,                          /* MINUS                              */
      582    15310    1               2,                          /* CONCAT                             */
      583    15311    1               2,                          /* EQUAL                              */
      584    15312    1               2,                          /* NEQUAL                             */
      585    15313    1               2,                          /* GTHAN                              */
      586    15314    1               2,                          /* GEQUAL                             */
      587    15315    1               2,                          /* LTHAN                              */
      588    15316    1               2,                          /* LEQUAL                             */
      589    15317    1               2,                          /* AND                                */
      590    15318    1               2,                          /* OR                                 */
      591    15319    1               1,                          /* U_NOT                              */
      592    15320    1               1,                          /* U_PLUS                             */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:34   
      593    15321    1               1,                          /* U_MINUS                            */
      594    15322    1               2,                          /* WEQ_LPAT                           */
      595    15323    1               2,                          /* WEQ_RPAT                           */
      596    15324    1               2,                          /* WCN_LPAT                           */
      597    15325    1               2,                          /* WCN_RPAT                           */
      598    15326    1               2,                          /* OPSPARE1                           */
      599    15327    1               2,                          /* OPSPARE2                           */
      600    15328    1               2,                          /* OPSPARE3                           */
      601    15329    1              99,                          /* FUNCSPARE0                         */
      602    15330    1              99,                          /* FUNCSPARE1                         */
      603    15331    1              99,                          /* FUNCSPARE2                         */
      604    15332    1               0,                          /* $TERM_PROFILE                      */
      605    15333    1               0,                          /* $TERM_FEP                          */
      606    15334    1               0,                          /* $TERM_LINE                         */
      607    15335    1               0,                          /* $TERM_SPEED                        */
      608    15336    1               0,                          /* $RERUN                             */
      609    15337    1             511,                          /* $PRIV_ACTIVE                       */
      610    15338    1             511,                          /* $PRIV_AUTH                         */
      611    15339    1             511,                          /* $FLAG                              */
      612    15340    1               1,                          /* $FID_ORG                           */
      613    15341    1               1,                          /* $FID_RECS                          */
      614    15342    1               1,                          /* $FID_GRANS                         */
      615    15343    1               1,                          /* $FID_UGRANS                        */
      616    15344    1               1,                          /* $FID_NGAVAL                        */
      617    15345    1               1,                          /* $UPC                               */
      618    15346    1               1,                          /* $LOC                               */
      619    15347    1               0,                          /* $ACCT                              */
      620    15348    1             511,                          /* $DATE                              */
      621    15349    1               0,                          /* $DAY                               */
      622    15350    1               0,                          /* $DIR                               */
      623    15351    1               0,                          /* $EOF                               */
      624    15352    1               1,                          /* $FID_EXIST                         */
      625    15353    1               1,                          /* $FID_TYPE                          */
      626    15354    1               0,                          /* $HSET                              */
      627    15355    1               4,                          /* $INDEX                             */
      628    15356    1               3,                          /* $INPUT                             */
      629    15357    1               1,                          /* $KEYIN                             */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:35   
      630    15358    1               0,                          /* $LASTBATCH                         */
      631    15359    1               1,                          /* $LEN                               */
      632    15360    1             511,                          /* $MAX                               */
      633    15361    1             511,                          /* $MIN                               */
      634    15362    1               2,                          /* $MOD                               */
      635    15363    1               0,                          /* $MODE                              */
      636    15364    1               0,                          /* $NAME                              */
      637    15365    1              99,                          /* FUNCSPARE3                         */
      638    15366    1               1,                          /* CMDVAR_EXIST                       */
      639    15367    1               4,                          /* $SEARCH                            */
      640    15368    1               0,                          /* $SITE                              */
      641    15369    1               3,                          /* $SUBSTR                            */
      642    15370    1               1,                          /* $SWITCH                            */
      643    15371    1               0,                          /* $SYSID                             */
      644    15372    1             511,                          /* $TIME                              */
      645    15373    1               4,                          /* $VERIFY                            */
      646    15374    1               0,                          /* $VERSION                           */
      647    15375    1               0,                          /* $WOO                               */
      648    15376    1               1,                          /* $ABS                               */
      649    15377    1               2,                          /* $REM                               */
      650    15378    1               1);                         /* $FID_ASN                           */
      651    15379        %B$XL_UPPER (NAME=LC2UC);
      652    15383        %B$XL_LOWER (NAME=UC2LC);
      653    15387        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:36   
      654    15388    1   GET_VAR: PROC (VAR_NAME$,VALUE$,CHARPOS) ALTRET;
      655    15389        /*F*    NAME:          GET_VAR
      656    15390                PURPOSE:       To get value of specified variable.
      657    15391        */
      658    15392        /***** Parameters *****/
      659    15393    2   DCL VAR_NAME$ PTR;
      660    15394    2   DCL VALUE$ PTR;
      661    15395    2   DCL CHARPOS UBIN WORD;
      662    15396        /***** Auto storage *****/
      663    15397          %VLP_NAMEV (FPTN = VAR_NAME,STCLASS = "BASED(VAR_NAME$)");
      664    15404          %VLP_NAME (FPTN = VAR_VALUE,LEN = 511, STCLASS = AUTO);
      665    15431
      666    15432        /*
      667    15433             ***** Setup VAR_VALUE ...
      668    15434        */
      669    15435    2       VAR_VALUE.L# = SIZEC(VAR_VALUE.NAME#);
      670    15436        /*
      671    15437             ***** Call X$GET_VAR ...
      672    15438        */
      673    15439    2       CALL X$GET_VAR (VAR_NAME$,ADDR(VAR_VALUE),XUE_ECB,CHARPOS) ALTRET(E_GET);
      674    15440        /*
      675    15441             ***** Allocate space for VALUE ...
      676    15442        */
      677    15443    2       MCB.SIZE = VAR_VALUE.L# + 1;
      678    15444    2       CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
      679    15445    2       VALUE$ = MCB.ADDRESS$;
      680    15446    2       VALUE$ -> X$STRING.SIZ = VAR_VALUE.L#;
      681    15447    2       VALUE$ -> X$STRING.TEXT = VAR_VALUE.NAME#;
      682    15448    2       RETURN;
      683    15449        /**/
      684    15450    2   E_ALLOCATE:
      685    15451    2       XUE_ECB.ERR = MCB.ERR;
      686    15452    2       ALTRETURN;
      687    15453        /**/
      688    15454    2   E_GET:
      689    15455    2       ALTRETURN;
      690    15456        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:37   
      691    15457    2   TEST_VAR: ENTRY (VAR_NAME$) ALTRET;
      692    15458        /*F*    NAME:       TEST_VAR
      693    15459                PURPOSE:    To check whether a specified variable exists.
      694    15460        */
      695    15461    2       VAR_VALUE.L# = SIZEC(VAR_VALUE.NAME#);
      696    15462    2       CALL X$GET_VAR (VAR_NAME$,ADDR(VAR_VALUE),XUE_ECB,TEMP) ALTRET(E_GET);
      697    15463    2       RETURN;
      698    15464    2   END GET_VAR;
      699    15465        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:38   
      700    15466    1   LEX: PROC (TOKEN,VALUE$) ALTRET;
      701    15467        /***** Parameters *****/
      702    15468    2   DCL TOKEN UBIN WORD;
      703    15469    2   DCL VALUE$ PTR;
      704    15470        /***** Auto variables *****/
      705    15471    2   DCL NAME$ PTR AUTO;
      706    15472    2       TOKEN_INDX = TOKEN_INDX + 1;
      707    15473    2       IF TOKEN_INDX = TREE$ -> P$B.NSUBLKS
      708    15474    2       THEN   /* End of the expression */
      709    15475    2           TOKEN = %XUE_END_MARKER#;
      710    15476    2       ELSE
      711    15477    3       DO;
      712    15478    3           TOKEN_PTR$ = TREE$->P$B.SUBLK$(TOKEN_INDX);
      713    15479    3           TOKEN = TOKEN_PTR$ -> P$B.CODE;   /* Current lexical TOKEN */
      714    15480    3           CHARPOS = TOKEN_PTR$ -> P$B.CPOS;   /* CHARPOS of TOKEN */
      715    15481    4           DO CASE (TREE$->P$B.SUBLK$(TOKEN_INDX)->P$B.CODE);
      716    15482    4           CASE (%XUE_EXP#);
      717    15483    4               CALL X$EVALUATE (TOKEN_PTR$,XUE_ECB,MCB) ALTRET(E_LEX);
      718    15484    4               VALUE$ = XUE_ECB.OUT$;
      719    15485    4           CASE (%XUE_DECIMAL#,%XUE_QUOTE#);
      720    15486    4               VALUE$ = TOKEN_PTR$ -> P$S.TEXTC$;
      721    15487    4           CASE (%XUE_VAR#);
      722    15488    4               NAME$ = TOKEN_PTR$ -> P$S.TEXTC$;
      723    15489        /*
      724    15490             ***** It parsed as a variable name.  Make sure that it's not
      725    15491                   just an unrecognized (illegal) function name....
      726    15492        */
      727    15493    4               IF SUBSTR(NAME$ -> X$STRING.TEXT,0,1) = '$'
      728    15494    4               THEN   /* Unrecognized FUNCTION */
      729    15495    5               DO;
      730    15496    5                   XUE_ECB.ERR = E_ILLFUNNAME;
      731    15497    5                   XUE_ECB.ERR_POS# = CHARPOS +1; /* Point past '$'    */
      732    15498    5                   ALTRETURN;
      733    15499    5               END;
      734    15500    4               IF NAME$ -> X$STRING.TEXT = 'STEPCC'
      735    15501    4               THEN
      736    15502    5               DO;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:39   
      737    15503    5                   IF B$JIT.STEPCC < 10
      738    15504    5                   THEN
      739    15505    5                       MCB.SIZE = 2;
      740    15506    5                   ELSE
      741    15507    5                       IF B$JIT.STEPCC <100
      742    15508    5                       THEN
      743    15509    5                           MCB.SIZE = 3;
      744    15510    5                       ELSE
      745    15511    5                           MCB.SIZE = 4;
      746    15512    5                   CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
      747    15513    5                   VALUE$ = MCB.ADDRESS$;
      748    15514    5                   VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;
      749    15515    5                   CALL BINCHAR (VALUE$->X$STRING.TEXT,B$JIT.STEPCC);
      750    15516    5               END;
      751    15517    4               ELSE   /* Not STEPCC */
      752    15518    4                   CALL GET_VAR (NAME$,VALUE$,CHARPOS) ALTRET(E_LEX);
      753    15519    4           CASE (ELSE);
      754    15520                      /* Functions, Operators */
      755    15521    4           END;   /* Do case ... end */
      756    15522    3       END;   /* Do ... end */
      757    15523    2       RETURN;
      758    15524        /**/
      759    15525    2   E_LEX:
      760    15526    2       ALTRETURN;
      761    15527        /**/
      762    15528    2   E_ALLOCATE:
      763    15529    2       XUE_ECB.ERR = MCB.ERR;
      764    15530    2       XUE_ECB.ERR_POS# = TOKEN_PTR$ -> P$B.CPOS;
      765    15531    2       ALTRETURN;
      766    15532    2   END LEX;
      767    15533        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:40   
      768    15534    1   GET_ARGS: PROC (NUM_ARGS) ALTRET;
      769    15535        /***** Parameters *****/
      770    15536    2   DCL NUM_ARGS SBIN WORD;
      771    15537        /***** Local Variables *****/
      772    15538    2   DCL ARG_PTR$ PTR AUTO;
      773    15539    2   DCL EXP_PTR$ PTR AUTO;
      774    15540    2   DCL ARG_INDX SBIN WORD AUTO;
      775    15541        /**/
      776    15542        /*
      777    15543             ***** There are two types of built-in functions
      778    15544                   1) POSITIONAL - FUNC.NTP(X) = 0 TO n
      779    15545                   2) KEYWORD    - FUNC.NTP(X) = 511
      780    15546                   They have different parse tree structures and
      781    15547                   so have to be processed seperately ...
      782    15548        */
      783    15549    2       NUM_TO_POP = FUNC.NTP(TOKEN);
      784    15550    2       IF NUM_TO_POP = 511
      785    15551    2       THEN   /* KEYWORD parameters */
      786    15552    3       DO;
      787    15553    4           DO ARG_INDX = 0 TO TOKEN_PTR$ -> P$B.NSUBLKS - 1;
      788    15554    4               ARG_PTR$ = TOKEN_PTR$ -> P$B.SUBLK$(ARG_INDX);
      789    15555    4               IF ARG_PTR$ -> P$B.NSUBLKS = 0 THEN
      790    15556    5               DO;
      791    15557    5                   VALUE$ = ZERO$;      /* Keyword only, no argument attached */
      792    15558                           %PUSH_VALUE (TYPE="ARG_PTR$ -> P$B.CODE",
      793    15559                                        CPOS="ARG_PTR$ -> P$B.CPOS");
      794    15575    5               END;
      795    15576    4               ELSE
      796    15577    5               DO;
      797    15578    5                   EXP_PTR$ = ARG_PTR$ -> P$B.SUBLK$(0);
      798    15579    5                   CALL X$EVALUATE (EXP_PTR$,XUE_ECB,MCB) ALTRET(E_EVAL);
      799    15580    5                   VALUE$ = XUE_ECB.OUT$;
      800    15581                           %PUSH_VALUE (TYPE="ARG_PTR$ -> P$B.CODE",
      801    15582                                        CPOS="EXP_PTR$ -> P$B.CPOS");
      802    15598    5               END;
      803    15599    4           END;   /* Do index ... end */
      804    15600    3           NUM_ARGS = TOKEN_PTR$ -> P$B.NSUBLKS;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:41   
      805    15601    3           RETURN;
      806    15602    3       END;   /* Do ... end */
      807    15603    2       ELSE   /* POSITIONAL parameters */
      808    15604    3       DO;
      809    15605    4           DO ARG_INDX = 0 TO TOKEN_PTR$ -> P$B.NSUBLKS - 1;
      810    15606    4               ARG_PTR$ = TOKEN_PTR$ -> P$B.SUBLK$(ARG_INDX);
      811    15607        /*
      812    15608             ***** If an argument is optional and not specified
      813    15609                   then assume zero for it's value. Parse tree
      814    15610                   doesn't contain a value so don't try to chase it.
      815    15611                   For example, $SEARCH(A,B,,5) ...
      816    15612        */
      817    15613    4               IF ARG_PTR$ -> P$B.NSUBLKS = 0
      818    15614    4               THEN   /* Optional value not specified. Don't loop! */
      819    15615    5               DO;
      820    15616                               %PUSH_VALUE (VALUE=ZERO$,
      821    15617                                            CPOS="ARG_PTR$ -> P$B.CPOS",
      822    15618                                            TYPE=%XUE_DEFAULT#);
      823    15634    5               END;
      824    15635    4               ELSE
      825    15636    5               DO;
      826    15637    5                   CALL X$EVALUATE (ARG_PTR$,XUE_ECB,MCB) ALTRET(E_EVAL);
      827    15638                               %PUSH_VALUE (VALUE=XUE_ECB.OUT$,
      828    15639                                            CPOS="ARG_PTR$ -> P$B.CPOS",
      829    15640                                            TYPE=%XUE_UNKNOWN#);
      830    15656    5               END;
      831    15657    4           END;   /* Do index ... end */
      832    15658    3       END;  /* Do ... end */
      833    15659        /*
      834    15660             ***** If all the required parameters are not specified,
      835    15661                   fill in zeros ...
      836    15662        */
      837    15663    2       NUM_ARGS = FUNC.NTP(TOKEN);
      838    15664    3       DO ARG_INDX = TOKEN_PTR$ -> P$B.NSUBLKS TO NUM_ARGS - 1;
      839    15665             %PUSH_VALUE (VALUE=ZERO$,TYPE=%XUE_DEFAULT#);
      840    15681    3       END;
      841    15682    2       RETURN;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:42   
      842    15683    2   E_EVAL:
      843    15684    2       ALTRETURN;
      844    15685    2   END GET_ARGS;
      845    15686        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:43   
      846    15687    1   REDUCE: PROC ALTRET;
      847    15688        /***** Auto variables *****/
      848    15689    2   DCL VALUE SBIN WORD AUTO;
      849    15690    2   DCL TEMP1 SBIN WORD AUTO;
      850    15691    2   DCL TEMP2 SBIN WORD AUTO;
      851    15692    2   DCL K SBIN WORD AUTO;
      852    15693        /***** Character variables *****/
      853    15694    2   DCL 1  TEMPBUF AUTO,
      854    15695    2         2  SIZ UBIN BYTE UNAL,
      855    15696    2         2  TEXT CHAR(256) UNAL;
      856    15697        /***** Variables for use with SEARCH and VERIFY only *****/
      857    15698    2   DCL SEARCH_TABLE (0:511) UBIN BYTE UNAL AUTO;
      858    15699    2   DCL ZERO_511 (0:511) UBIN BYTE UNAL CONSTANT INIT (0*512);
      859    15700    2   DCL ONE_511 (0:511) UBIN BYTE UNAL CONSTANT INIT (1*512);
      860    15701    2   DCL WHERE UBIN WORD AUTO;
      861    15702    2   DCL RESULT UBIN WORD AUTO;
      862    15703        /***** Constants *****/
      863    15704    2   DCL SBIN_MAX SBIN WORD CONSTANT INIT (BITBIN('377777777777'O));
      864    15705    2   DCL SBIN_MIN SBIN WORD CONSTANT INIT (BITBIN('400000000001'O));
      865    15706        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:44   
      866    15707    2   FID_USERTHING: PROC ALTRET;
      867    15708        /*F*    NAME:          FID_USERTHING
      868    15709                PURPOSE:       Take a user-specified string and call M$FID
      869    15710                               with it.
      870    15711        */
      871    15712        /***** Fpts *****/
      872    15713          %FPT_FID (FPTN=FPT_FID,STCLASS=AUTO);
      873    15736        /*
      874    15737             ***** May not specify NULL file name ...
      875    15738        */
      876    15739    3       IF VAL_STACK$(VAL_PTR) -> X$STRING.SIZ = 0
      877    15740    3       THEN
      878    15741    4       DO;                             /* Post err                           */
      879    15742    4           XUE_ECB.ERR = E_NULLSTRING;
      880    15743    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
      881    15744    4           ALTRETURN;
      882    15745    4       END;
      883    15746        /*
      884    15747             ***** Break up the FID ...
      885    15748        */
      886    15749    3       FPT_FID = CFPT_FID;
      887    15750    3       FPT_FID.TEXTFID_ = VECTOR(VAL_STACK$(VAL_PTR) -> X$STRING.TEXT);
      888    15751    3       FPT_FID.NAME_ = VECTOR(FID_NAME);
      889    15752    3       FPT_FID.ACCT_ = VECTOR(FID_ACCT);
      890    15753    3       FPT_FID.PASS_ = VECTOR(FID_PASS);
      891    15754    3       FPT_FID.SN_ = VECTOR(FID_SN);
      892    15755    3       FPT_FID.WSN_ = VECTOR(FID_WSN);
      893    15756    3       FPT_FID.ASN_ = VECTOR(FID_ASN);
      894    15757    3       FPT_FID.RES_ = VECTOR(FID_RES);
      895    15758    3       FPT_FID.RESULTS_ = VECTOR(FID_RESULTS);
      896    15759        /**/
      897    15760    3       CALL M$FID (FPT_FID) ALTRET(E_PMME);
      898    15761    3       RETURN;
      899    15762        /**/
      900    15763    3   E_PMME:
      901    15764    3       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;
      902    15765    3       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:45   
      903    15766    3       XUE_ECB.ERR_DCB# = B$TCB.ALT$ -> B$ALT.DCB#;
      904    15767    3       ALTRETURN;
      905    15768        /**/
      906    15769    3   END FID_USERTHING;
      907    15770        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:46   
      908    15771    2   OPEN_TEST_FILE: PROC (EXIST) ALTRET;
      909    15772        /*F*    NAME:          OPEN_TEST_FILE
      910    15773                PURPOSE:       Open specified file in test mode to get
      911    15774                               important info returned in the dcb.
      912    15775        */
      913    15776        /***** Parameters *****/
      914    15777    3   DCL EXIST SBIN WORD;
      915    15778        /***** Fpts *****/
      916    15779          %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
      917    15888
      918    15889    3       CALL FID_USERTHING ALTRET(WASTE_EM);
      919    15890        /*
      920    15891             ***** $FID_xxx only work on DISK or LABELED tape files ...
      921    15892        */
      922    15893    3       IF DCBADDR(XUE_ECB.WORK_DCB#) = ADDR(NIL)
      923    15894    3       THEN   /* Wrong! */
      924    15895    4       DO;
      925    15896    4           XUE_ECB.ERR = E_ILLDCB;
      926    15897    4           ALTRETURN;
      927    15898    4       END;
      928    15899    3       IF FID_ASN ~= %FILE#
      929    15900    3         AND FID_ASN ~= %TAPE#
      930    15901    3       THEN   /* Not allowed to open this file */
      931    15902    4       DO;
      932    15903    4           XUE_ECB.ERR = E_ILLFID;
      933    15904    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
      934    15905    4           ALTRETURN;
      935    15906    4       END;
      936    15907        /*
      937    15908             ***** Open the specified file ...
      938    15909        */
      939    15910    3       FPT_OPEN = CFPT_OPEN;
      940    15911    3       FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);
      941    15912    3       FPT_OPEN.FPARAM_ = FPARAM_VECTOR;
      942    15913    3       FPT_OPEN.NAME_=VECTOR(FID_NAME);
      943    15914    3       IF FID_RESULTS.ACCT
      944    15915    3       THEN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:47   
      945    15916    3           FPT_OPEN.ACCT_=VECTOR(FID_ACCT);
      946    15917    3       IF FID_RESULTS.PASS
      947    15918    3       THEN
      948    15919    3           FPT_OPEN.PASS_=VECTOR(FID_PASS);
      949    15920    3       IF FID_RESULTS.SN
      950    15921    3       THEN
      951    15922    3           FPT_OPEN.SN_=VECTOR(FID_SN);
      952    15923    3       IF FID_RESULTS.WSN
      953    15924    3       THEN
      954    15925    3           FPT_OPEN.WSN_=VECTOR(FID_WSN);
      955    15926    3       IF FID_RESULTS.RES
      956    15927    3       THEN
      957    15928    3           FPT_OPEN.V.RES#=FID_RES;
      958    15929    3       FPT_OPEN.V.DCB#=XUE_ECB.WORK_DCB#;
      959    15930    3       FPT_OPEN.V.ASN#=FID_ASN;
      960    15931    3       FPT_OPEN.V.FUN#=%IN#;
      961    15932    3       FPT_OPEN.V.INITZ.SCRUB# = %YES#;
      962    15933    3       FPT_OPEN.V.OPER.TEST# = %YES#;
      963    15934    3       CALL M$OPEN(FPT_OPEN) ALTRET(E_OPEN);
      964    15935    3       EXIST = 1;                          /* Yes                                */
      965    15936    3       RETURN;
      966    15937        /**/
      967    15938    3   E_OPEN:
      968    15939    3       IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOACCESS
      969    15940    3         AND OP_STACK(OP_PTR) = %XUE_$FID_EXIST#
      970    15941    3       THEN   /* It really does exist */
      971    15942    4       DO;
      972    15943    4           EXIST = 1;
      973    15944    4           RETURN;
      974    15945    4       END;
      975    15946    3       IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOFILE /* FILE DOES NOT EXISY       */
      976    15947    3         OR B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$SETDOWN /* PACKSET NOT READY       */
      977    15948    3         OR B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$XCLSET /* PACKSET IS BUSY          */
      978    15949    3         OR B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NONEWU /* PACKSET BEING DISMOUNTED */
      979    15950    3       THEN
      980    15951    4       DO;   /* Set flag and return */
      981    15952    4           EXIST = 0;                /* No                                 */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:48   
      982    15953    4           RETURN;
      983    15954    4       END;   /* Do ... end */
      984    15955    3       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;
      985    15956    3       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
      986    15957    3       XUE_ECB.ERR_DCB# = B$TCB.ALT$ -> B$ALT.DCB#;
      987    15958    3   WASTE_EM: ;
      988    15959    3       ALTRETURN;
      989    15960    3   END OPEN_TEST_FILE;
      990    15961        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:49   
      991    15962    2   PROCESS_INPUT: PROC ALTRET;
      992    15963        /***** Local variables *****/
      993    15964    3   DCL L_INDEX SBIN WORD AUTO;
      994    15965    3   DCL R_INDEX SBIN WORD AUTO;
      995    15966    3   DCL START SBIN WORD AUTO;
      996    15967        /**/
      997    15968    3       IF TEMPBUF.SIZ = 0
      998    15969    3       THEN /* Null string */
      999    15970    3           RETURN;
     1000    15971        /*
     1001    15972             ***** Look for quotes ...
     1002    15973        */
     1003    15974    3       CALL INDEX (L_INDEX,'''',TEMPBUF.TEXT) ALTRET(STRIP_BLANKS);
     1004    15975        /*
     1005    15976             ***** If only one quote then not a quote string.
     1006    15977                   Just a string with a quote. Strip the blanks ...
     1007    15978        */
     1008    15979    3       CALL INDEX1R (R_INDEX,'''',TEMPBUF.TEXT);
     1009    15980    3       IF L_INDEX = R_INDEX
     1010    15981    3       THEN   /* Same quote */
     1011    15982    3           GOTO STRIP_BLANKS;
     1012    15983        /*
     1013    15984             ***** Make sure no garbage surrounding quotes ...
     1014    15985        */
     1015    15986    3       IF L_INDEX ~= 0
     1016    15987    3         AND SUBSTR(TEMPBUF.TEXT,0,L_INDEX-1) ~= ' '
     1017    15988    3       THEN   /* Garbage */
     1018    15989    4       DO;
     1019    15990    4           XUE_ECB.ERR = E_ILLINPUT;
     1020    15991    4           XUE_ECB.ERR_POS# = L_INDEX;
     1021    15992    4           ALTRETURN;
     1022    15993    4       END;
     1023    15994    3       IF R_INDEX+1 < TEMPBUF.SIZ
     1024    15995    3         AND SUBSTR(TEMPBUF.TEXT,R_INDEX+1) ~= ' '
     1025    15996    3       THEN   /* Garbage */
     1026    15997    4       DO;
     1027    15998    4           XUE_ECB.ERR = E_ILLINPUT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:50   
     1028    15999    4           XUE_ECB.ERR_POS# = L_INDEX;
     1029    16000    4           ALTRETURN;
     1030    16001    4       END;
     1031    16002        /*
     1032    16003             ***** Process ...
     1033    16004        */
     1034    16005    3       IF L_INDEX+1 = R_INDEX
     1035    16006    3       THEN   /* Null string */
     1036    16007    4       DO;
     1037    16008    4           TEMPBUF.SIZ = 0;
     1038    16009    4           RETURN;
     1039    16010    4       END;
     1040    16011        /*
     1041    16012             ***** Strip leading and trailing quotes ...
     1042    16013        */
     1043    16014    3       TEMPBUF.TEXT = SUBSTR(TEMPBUF.TEXT,L_INDEX+1,R_INDEX-(L_INDEX+1));
     1044    16015    3       TEMPBUF.SIZ = R_INDEX - (L_INDEX+1);
     1045    16016        /*
     1046    16017             ***** Look for imbedded quotes ...
     1047    16018        */
     1048    16019    3       START = 0;
     1049    16020    4       DO WHILE (%YES#);
     1050    16021    4           CALL INDEX (L_INDEX,'''',TEMPBUF.TEXT,START) ALTRET(BACK);
     1051    16022        /*
     1052    16023             ***** If the next character is a quote then
     1053    16024                   strip one out. Otherwise its an error ...
     1054    16025        */
     1055    16026    4           IF SUBSTR(TEMPBUF.TEXT,L_INDEX+1,1) = ''''
     1056    16027    4           THEN   /* Double quotes */
     1057    16028    5           DO;
     1058    16029    5               CALL INSERT (TEMPBUF.TEXT,L_INDEX,,
     1059    16030    5                 SUBSTR(TEMPBUF.TEXT,L_INDEX+1));
     1060    16031    5               TEMPBUF.SIZ = TEMPBUF.SIZ - 1;
     1061    16032    5               START = L_INDEX + 1;
     1062    16033    5           END;
     1063    16034    4           ELSE   /* Error */
     1064    16035    5           DO;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:51   
     1065    16036    5               XUE_ECB.ERR = E_ILLQUOTE;
     1066    16037    5               XUE_ECB.ERR_POS# = L_INDEX;
     1067    16038    5               ALTRETURN;
     1068    16039    5           END;
     1069    16040    4       END; /* Do while ... end */
     1070    16041        /*
     1071    16042             ***** Return ...
     1072    16043        */
     1073    16044    3   BACK:
     1074    16045    3       RETURN;
     1075    16046        /*
     1076    16047             ***** Strip the leading and trailing blanks from TEMPBUF ...
     1077    16048        */
     1078    16049    3   STRIP_BLANKS:
     1079    16050    3       CALL X$STRIP_BLANKS (ADDR(TEMPBUF));
     1080    16051    3       RETURN;
     1081    16052    3   END PROCESS_INPUT;
     1082    16053        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:52   
     1083    16054    2   CHK_BOUNDS: PROC (FUN_CODE, BOUND1, BOUND2) ALTRET;
     1084    16055        /*F*      NAME:       CHK_BOUNDS
     1085    16056                  PURPOSE:    To make sure that specified bound are allowed
     1086    16057                              for the string to be operated upon.
     1087    16058        */
     1088    16059        /***** Parameters *****/
     1089    16060    3   DCL FUN_CODE SBIN WORD;
     1090    16061    3   DCL BOUND1 SBIN WORD;
     1091    16062    3   DCL BOUND2 SBIN WORD;
     1092    16063        /***** Local variables *****/
     1093    16064    3   DCL SOURCE_SIZE SBIN WORD AUTO;
     1094    16065        /*
     1095    16066             ***** Get the size of the SOURCE STRING ...
     1096    16067                   Remember that strings are ZERO origin so that
     1097    16068                  any comparisons with size must recognize this.
     1098    16069                   Usually the correct value is SOURCE_SIZE-1.
     1099    16070        */
     1100    16071    4       DO CASE (FUN_CODE);
     1101    16072    4       CASE (%XUE_$INDEX#,
     1102    16073    4         %XUE_$SEARCH#,
     1103    16074    4         %XUE_$VERIFY#);
     1104    16075    4           SOURCE_SIZE = VAL_STACK$(VAL_PTR-3) -> X$STRING.SIZ;
     1105    16076    4       CASE (%XUE_$SUBSTR#);
     1106    16077    4           SOURCE_SIZE = VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ;
     1107    16078    4       END; /* Do case (FUN_CODE) ... end */
     1108    16079        /*
     1109    16080             ***** Convert BOUND1, BOUND2 ...
     1110    16081        */
     1111    16082    3       CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),BOUND2)
     1112    16083    4       WHENALTRETURN DO;
     1113    16084    4           XUE_ECB.ERR = E_NONDECIMAL;
     1114    16085    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     1115    16086    4           ALTRETURN;
     1116    16087    4       END;
     1117    16088    3       CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-1),BOUND1)
     1118    16089    4       WHENALTRETURN DO;
     1119    16090    4           XUE_ECB.ERR = E_NONDECIMAL;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:53   
     1120    16091    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR-1);
     1121    16092    4           ALTRETURN;
     1122    16093    4       END;
     1123    16094        /*
     1124    16095             ***** BOUND1 must be within the string, BOUND2 must be positive.
     1125    16096        */
     1126    16097    3       IF (BOUND1 < 0) OR (BOUND1 > SOURCE_SIZE)
     1127    16098    3       THEN
     1128    16099    4       DO;
     1129    16100    4           XUE_ECB.ERR = E_BIGSTR;
     1130    16101    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR-1);
     1131    16102    4           ALTRETURN;
     1132    16103    4       END;
     1133    16104    3       IF BOUND2 < 0
     1134    16105    3       THEN
     1135    16106    4       DO;
     1136    16107    4           XUE_ECB.ERR = E_BIGSTR;
     1137    16108    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     1138    16109    4           ALTRETURN;
     1139    16110    4       END;
     1140    16111        /*
     1141    16112             ***** Check BOUND2
     1142    16113                   BOUND2 is index of last char for $INDEX, $SEARCH, etc.
     1143    16114                   BOUND2 is number of chars for $SUBSTR
     1144    16115        */
     1145    16116    4       DO CASE (FUN_CODE);
     1146    16117    4       CASE (%XUE_$INDEX#,
     1147    16118    4         %XUE_$SEARCH#,
     1148    16119    4         %XUE_$VERIFY#);
     1149    16120    4           IF BOUND2 > (SOURCE_SIZE - 1)
     1150    16121    4             OR BOUND2 = 0
     1151    16122    4           THEN   /* Up to end of string implied */
     1152    16123    4               BOUND2 = SOURCE_SIZE - 1;
     1153    16124    4           IF BOUND2 < BOUND1
     1154    16125    4           THEN   /* Beginning index is past ending index */
     1155    16126    5           DO;
     1156    16127    5               XUE_ECB.ERR = E_ILLINDEX;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:54   
     1157    16128    5               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     1158    16129    5               ALTRETURN;
     1159    16130    5           END;
     1160    16131    4       CASE (%XUE_$SUBSTR#);
     1161    16132    4           IF BOUND1 + BOUND2 > SOURCE_SIZE /* LEN is past end of string         */
     1162    16133    4             OR VAL_TYPE(VAL_PTR) = %XUE_DEFAULT# /* Default LEN field            */
     1163    16134    4           THEN   /* Up to end of string implied */
     1164    16135    4               BOUND2 = SOURCE_SIZE - BOUND1;
     1165    16136    4       END; /* Do case (FUN_CODE) ... END */
     1166    16137    3       RETURN;
     1167    16138    3   END CHK_BOUNDS;
     1168    16139        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:55   
     1169    16140    2   CHK_ADD: PROC (ADDEND1, ADDEND2, SUM) ALTRET;
     1170    16141        /*F*    NAME:     CHK_ADD
     1171    16142                PURPOSE:  To perform addition and catch any overflows.
     1172    16143                DESCRIPTION: Overflow can occure only if both addends have
     1173    16144                             the same sign.
     1174    16145        */
     1175    16146        /***** Parameters *****/
     1176    16147    3   DCL ADDEND1 SBIN WORD;
     1177    16148    3   DCL ADDEND2 SBIN WORD;
     1178    16149    3   DCL SUM SBIN WORD;
     1179    16150        /***** Local variables *****/
     1180    16151    3   DCL UBIN1 UBIN WORD AUTO;
     1181    16152    3   DCL UBIN2 UBIN WORD AUTO;
     1182    16153    3   DCL UBIN3 UBIN WORD AUTO;
     1183    16154        /*
     1184    16155             ***** Make sure that both addends are legal numbers ..
     1185    16156        */
     1186    16157    3       IF ADDEND1 < SBIN_MIN
     1187    16158    3       THEN
     1188    16159    3           GOTO E_OVERFLOW;
     1189    16160    3       IF ADDEND2 < SBIN_MIN
     1190    16161    3       THEN
     1191    16162    3           GOTO E_OVERFLOW;
     1192    16163        /*
     1193    16164             ***** Different check required depending upon sign ...
     1194    16165        */
     1195    16166    3       IF ADDEND1 >=0 AND ADDEND2 >=0
     1196    16167    3       THEN
     1197    16168    4       DO;   /* Both positive */
     1198    16169    4           UBIN1 = ADDEND1;
     1199    16170    4           UBIN2 = ADDEND2;
     1200    16171    4           UBIN3 = UBIN1 + UBIN2;
     1201    16172    4           IF UBIN3 <= SBIN_MAX
     1202    16173    4           THEN
     1203    16174    5           DO;   /* Good value */
     1204    16175    5               SUM = UBIN3;
     1205    16176    5               RETURN;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:56   
     1206    16177    5           END;
     1207    16178    4           ELSE
     1208    16179    4               GOTO E_OVERFLOW;
     1209    16180    4       END;   /* Do... both positive... end */
     1210    16181    3       ELSE
     1211    16182    4       DO;   /* Both negative or differing signs */
     1212    16183    4           IF ADDEND1 < 0 AND ADDEND2 < 0
     1213    16184    4           THEN
     1214    16185    5           DO;
     1215    16186    5               UBIN1 = -ADDEND1;
     1216    16187    5               UBIN2 = -ADDEND2;
     1217    16188    5               UBIN3 = UBIN1 + UBIN2;
     1218    16189    5               IF UBIN3 <= SBIN_MAX
     1219    16190    5               THEN
     1220    16191    6               DO;   /* Good value */
     1221    16192    6                   SUM = -UBIN3;
     1222    16193    6                   RETURN;
     1223    16194    6               END;
     1224    16195    5               ELSE   /* Overflow occured */
     1225    16196    5                   GOTO E_OVERFLOW;
     1226    16197    5           END;
     1227    16198    4           ELSE   /* Differing SIGNS */
     1228    16199    5           DO;   /* No overflow possible */
     1229    16200    5               SUM = ADDEND1 + ADDEND2;
     1230    16201    5               RETURN;
     1231    16202    5           END;   /* DO... no overflow possible... End */
     1232    16203    4       END;   /* Do... both negative or differing signs... End */
     1233    16204        /**/
     1234    16205    3   E_OVERFLOW:
     1235    16206    3       ALTRETURN;
     1236    16207    3   END CHK_ADD;
     1237    16208        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:57   
     1238    16209    2   CHK_MULT: PROC (MULT1, MULT2, SUM) ALTRET;
     1239    16210        /*F*    NAME:     CHK_MULT
     1240    16211                PURPOSE:  To perform multiplication and catch any overflows.
     1241    16212        */
     1242    16213        /***** Parameters *****/
     1243    16214    3   DCL MULT1 SBIN WORD;
     1244    16215    3   DCL MULT2 SBIN WORD;
     1245    16216    3   DCL SUM SBIN WORD;
     1246    16217        /*
     1247    16218             ***** Make sure that both addends are legal numbers ..
     1248    16219        */
     1249    16220    3       IF MULT1 < SBIN_MIN
     1250    16221    3       THEN
     1251    16222    3           GOTO E_OVERFLOW;
     1252    16223    3       IF MULT2 < SBIN_MIN
     1253    16224    3       THEN
     1254    16225    3           GOTO E_OVERFLOW;
     1255    16226        /*
     1256    16227             ***** Multiply the operands together and check that
     1257    16228                   divide operation will result in initial operands ...
     1258    16229        */
     1259    16230    3       SUM = MULT1 * MULT2;
     1260    16231    3       IF SUM < SBIN_MIN
     1261    16232    3       THEN
     1262    16233    3           GOTO E_OVERFLOW;
     1263    16234        /**/
     1264    16235    3       IF MULT2 ~= 0
     1265    16236    3       THEN   /* Ok to divide */
     1266    16237    4       DO;
     1267    16238    4           IF SUM/MULT2 ~= MULT1
     1268    16239    4           THEN
     1269    16240    4               GOTO E_OVERFLOW;
     1270    16241    4       END;
     1271    16242    3       RETURN;
     1272    16243        /**/
     1273    16244    3   E_OVERFLOW:
     1274    16245    3       ALTRETURN;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:58   
     1275    16246    3   END CHK_MULT;
     1276    16247        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:59   
     1277    16248    2   STASH_VALUE: PROC (VALUE,VALUE$) ALTRET;
     1278    16249        /*F*    NAME:          STASH_VALUE
     1279    16250                PURPOSE:        To stash VALUE in a TEXTC string.
     1280    16251                DESCRIPTION:   This routine will allocate space in the
     1281    16252                               FREE STRING SPACE maintained by X$ALLOCATE
     1282    16253                               and X$DEALLOCATE and store the current value
     1283    16254                               of VALUE as a signed or unsigned CHARACTER
     1284    16255                               TEXTC STRING. The address of this string is
     1285    16256                               returned thru VALUE$.
     1286    16257        */
     1287    16258        /***** Parameters *****/
     1288    16259    3   DCL VALUE SBIN WORD;
     1289    16260    3   DCL VALUE$ PTR;
     1290    16261        /***** Constants *****/
     1291    16262                  /* DEC_ARRAY(0) is not really 10**0 but necessary to work right     */
     1292    16263    3   DCL DEC_ARRAY  (0:11) BIT (36) CONSTANT INIT
     1293    16264    3        ( '000000000000'O /* 10**01 */,  '000000000012'O /* 10**02 */,
     1294    16265    3          '000000000144'O /* 10**02 */,  '000000001750'O /* 10**03 */,
     1295    16266    3          '000000023420'O /* 10**04 */,  '000000303240'O /* 10**05 */,
     1296    16267    3          '000003641100'O /* 10**06 */,  '000046113200'O /* 10**07 */,
     1297    16268    3          '000575360400'O /* 10**08 */,  '007346545000'O /* 10**09 */,
     1298    16269    3          '112402762000'O /* 10**10 */,  '351035564000'O /* 10**11 */);
     1299    16270    3   DCL DEC_POWERS (0:11) REDEF DEC_ARRAY SBIN WORD;
     1300    16271        /***** Local Variables *****/
     1301    16272    3   DCL TEMP SBIN WORD AUTO;
     1302    16273
     1303    16274        /*
     1304    16275             ***** If VALUE equals one of the predefined
     1305    16276                   TEXTC strings, then don't allocate the space ...
     1306    16277        */
     1307    16278    3       IF VALUE = 0
     1308    16279    3       THEN
     1309    16280    4       DO;   /* Don't waste time/space */
     1310    16281    4           VALUE$ = ZERO$;
     1311    16282    4           RETURN;
     1312    16283    4       END;
     1313    16284    3       IF VALUE = 1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:60   
     1314    16285    3       THEN
     1315    16286    4       DO;   /* Don'T waste time/space */
     1316    16287    4           VALUE$ = ONE$;
     1317    16288    4           RETURN;
     1318    16289    4       END;
     1319    16290        /*
     1320    16291             ***** Determine how many characters needed to store VALUE ...
     1321    16292        */
     1322    16293    3       IF VALUE < 0
     1323    16294    3       THEN
     1324    16295    3           TEMP = 0 - VALUE;
     1325    16296    3       ELSE
     1326    16297    3           TEMP = VALUE;
     1327    16298    3       MCB.SIZE = 12; /* Default size */
     1328    16299    4       DO K = 0 TO 11;
     1329    16300    4           IF TEMP < DEC_POWERS(K)
     1330    16301    4           THEN   /* Found the size required */
     1331    16302    5           DO;
     1332    16303    5               MCB.SIZE = K + 1;   /* Allow one byte for COUNT           */
     1333    16304    5               GOTO GET_STRING_SPACE;
     1334    16305    5           END;
     1335    16306    4       END; /* Do index ... end */
     1336    16307        /*
     1337    16308        **** Allocate STRING SPACE for the result ...
     1338    16309        */
     1339    16310    3   GET_STRING_SPACE:
     1340    16311    3       IF VALUE < 0
     1341    16312    3       THEN
     1342    16313    3           MCB.SIZE = MCB.SIZE + 1;
     1343    16314    3       CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1344    16315    3       VALUE$ = MCB.ADDRESS$;
     1345    16316    3       VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;
     1346    16317    3       IF VALUE < 0
     1347    16318    3       THEN
     1348    16319    3           CALL BINXCHAR (VALUE$ -> X$STRING.TEXT,VALUE);
     1349    16320    3       ELSE
     1350    16321    3           CALL BINCHAR (VALUE$ -> X$STRING.TEXT,VALUE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:61   
     1351    16322    3       RETURN;
     1352    16323        /**/
     1353    16324    3   E_ALLOCATE:
     1354    16325    3       XUE_ECB.ERR = MCB.ERR;
     1355    16326    3       ALTRETURN;
     1356    16327    3   END STASH_VALUE;
     1357    16328        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:62   
     1358    16329    2   TIME_FUNCTIONS: PROC ALTRET;
     1359    16330        /*F*    NAME:          TIME_FUNCTIONS
     1360    16331                PURPOSE:       To process TIME/DATE options.
     1361    16332                DESCRIPTION:   This routine provides a common place to
     1362    16333                               setup FPT_TIME according to options specified
     1363    16334                               on several $FUNCTIONS.
     1364    16335        */
     1365    16336        /***** Local Variables *****/
     1366    16337    3   DCL I UBIN WORD AUTO;
     1367    16338    3   DCL STK_PTR UBIN WORD AUTO;
     1368    16339    3   DCL OFFSET UBIN WORD AUTO;
     1369    16340    3   DCL CUR_UTS UBIN WORD AUTO;
     1370    16341        /***** Constants *****/
     1371    16342    3   DCL DAY_OFFSET UBIN WORD CONSTANT INIT(8640000);
     1372    16343    3   DCL MIN_OFFSET UBIN WORD CONSTANT INIT(60000);
     1373    16344        /**/
     1374    16345    3       STK_PTR = VAL_PTR;
     1375    16346    4       DO I = 0 TO NUM_TO_POP_STACK(OP_PTR) - 1;
     1376    16347    5           DO CASE (VAL_TYPE(STK_PTR));
     1377    16348    5           CASE (%XUE_TYPE#);
     1378    16349    6               DO SELECT (VAL_STACK$(STK_PTR) -> X$STRING.TEXT);
     1379    16350    6                   SELECT ('ANS');
     1380    16351    6                   FPT_TIME.V.DEST# = %ANS#;
     1381    16352    6                   SELECT ('EXT');
     1382    16353    6                   FPT_TIME.V.DEST# = %EXT#;
     1383    16354    6                   SELECT ('LOCAL');
     1384    16355    6                   FPT_TIME.V.DEST# = %LOCAL#;
     1385    16356    6                   SELECT (ELSE);
     1386    16357    6               XUE_ECB.ERR = E_ILLOPTION;
     1387    16358    6               XUE_ECB.ERR_POS# = CHARPOS_STACK(STK_PTR);
     1388    16359    6               ALTRETURN;
     1389    16360    6               END;  /* Do select ... end */
     1390    16361    5           CASE (%XUE_INPUT#);
     1391    16362    5           CASE (%XUE_OFFSET_DATE#);
     1392    16363    5               CALL X$DEC_CONVERT (VAL_STACK$(STK_PTR),TEMP1) ALTRET(E_DEC);
     1393    16364    5               OFFSET = TEMP1 * DAY_OFFSET;
     1394    16365    5           CASE (%XUE_OFFSET_TIME#);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:63   
     1395    16366    5               CALL X$DEC_CONVERT (VAL_STACK$(STK_PTR),TEMP1) ALTRET(E_DEC);
     1396    16367    5               OFFSET = TEMP1 * MIN_OFFSET;
     1397    16368    5           END; /* Do case ... end */
     1398    16369    4       END; /* Do index ... end */
     1399    16370    3       CALL M$TIME (FPT_TIME) ALTRET(E_PMME);
     1400    16371    3       RETURN;
     1401    16372        /**/
     1402    16373    3   E_PMME:
     1403    16374    3       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;
     1404    16375    3       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     1405    16376    3       ALTRETURN;
     1406    16377        /**/
     1407    16378    3   E_DEC:
     1408    16379    3       XUE_ECB.ERR = E_NONDECIMAL;
     1409    16380    3       XUE_ECB.ERR_POS# = CHARPOS_STACK(STK_PTR);
     1410    16381    3       ALTRETURN;
     1411    16382    3   END TIME_FUNCTIONS;
     1412    16383        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:64   
     1413    16384        /***** Initialization *****/
     1414    16385    2       VALUE = 0;
     1415    16386    2       VALUE$ = ZERO$;
     1416    16387    2       MCB.ADDRESS$ = ADDR(NIL);
     1417    16388        /*
     1418    16389             ***** Make sure that there are enough entries in the
     1419    16390                   operand stack for this operator to operate upon ...
     1420    16391        */
     1421    16392    2       IF NUM_TO_POP_STACK(OP_PTR) > VAL_PTR+1
     1422    16393    2       THEN   /* Stacks are not right */
     1423    16394    3       DO;
     1424    16395    3           XUE_ECB.ERR = E_STKFLT;
     1425    16396    3           XUE_ECB.ERR_POS# = CHARPOS_STACK(0);
     1426    16397    3           GOTO E_REDUCE;
     1427    16398    3       END;
     1428    16399        /*
     1429    16400             ***** REDUCE the OPERATOR and VALUE stacks as necessary ...
     1430    16401        */
     1431    16402    2   APPLY_CASE:
     1432    16403    3       DO CASE (OP_STACK(OP_PTR));
     1433    16404        /*
     1434    16405             ***** ARITHMETIC operators ...
     1435    16406        */
     1436    16407    3       CASE (%XUE_PLUS#,
     1437    16408    3         %XUE_MINUS#,
     1438    16409    3         %XUE_MULTIPLY#,
     1439    16410    3         %XUE_DIVIDE#,
     1440    16411    3         %XUE_AND#,
     1441    16412    3         %XUE_OR#,
     1442    16413    3         %XUE_U_NOT#,
     1443    16414    3         %XUE_U_MINUS#,
     1444    16415    3         %XUE_U_PLUS#);
     1445    16416        /*
     1446    16417             ***** Get the operands needed for this operation ...
     1447    16418             ***** These operators cannot operate on non-numeric data ...
     1448    16419        */
     1449    16420    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP2) ALTRET(E_DEC);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:65   
     1450    16421    3           NUM_TO_POP = FUNC.NTP(OP_STACK(OP_PTR));
     1451    16422    3           IF NUM_TO_POP = 2
     1452    16423    3           THEN
     1453    16424    3               CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-1),TEMP1) ALTRET(E_DEC1);
     1454    16425    4           DO CASE (OP_STACK(OP_PTR));
     1455    16426    4           CASE (%XUE_PLUS#);
     1456    16427    4               CALL CHK_ADD (TEMP1, TEMP2, VALUE) ALTRET(E_OVERFLOW);
     1457    16428    4           CASE (%XUE_MINUS#);
     1458    16429    4               TEMP2 = -TEMP2; /* Subtraction is addition of compliment */
     1459    16430    4               CALL CHK_ADD (TEMP1, TEMP2, VALUE) ALTRET(E_OVERFLOW);
     1460    16431    4           CASE (%XUE_MULTIPLY#);
     1461    16432    4               CALL CHK_MULT (TEMP1, TEMP2, VALUE) ALTRET(E_OVERFLOW);
     1462    16433    4           CASE (%XUE_DIVIDE#);
     1463    16434    4               IF TEMP2 = 0
     1464    16435    4               THEN
     1465    16436    5               DO;
     1466    16437    5                   XUE_ECB.ERR = E_ZERODIVFLT;
     1467    16438    5                   ALTRETURN;
     1468    16439    5               END;
     1469    16440    4               VALUE = TEMP1 / TEMP2;
     1470    16441    4           CASE (%XUE_AND#);
     1471    16442    4               IF (TEMP1 > 0) AND (TEMP2 > 0)
     1472    16443    4               THEN
     1473    16444    4                   VALUE = 1;
     1474    16445    4           CASE (%XUE_OR#);
     1475    16446    4               IF (TEMP1 > 0) OR (TEMP2 > 0)
     1476    16447    4               THEN
     1477    16448    4                   VALUE = 1;
     1478    16449    4           CASE (%XUE_U_NOT#);
     1479    16450    4               IF TEMP2 <= 0
     1480    16451    4               THEN
     1481    16452    4                   VALUE = 1;
     1482    16453    4           CASE (%XUE_U_MINUS#);
     1483    16454    4               VALUE = 0 - TEMP2;
     1484    16455    4           CASE (%XUE_U_PLUS#);
     1485    16456    4               VALUE = TEMP2;
     1486    16457    4           END; /* Do case ... ARITHMETIC OPERATORS ... end */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:66   
     1487    16458    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     1488    16459
     1489    16460        /*
     1490    16461             ***** COMPARISON OPERATORS ...
     1491    16462        */
     1492    16463    3       CASE (%XUE_EQUAL#,
     1493    16464    3             %XUE_NEQUAL#,
     1494    16465    3             %XUE_LTHAN#,
     1495    16466    3             %XUE_GTHAN#,
     1496    16467    3             %XUE_LEQUAL#,
     1497    16468    3             %XUE_GEQUAL#);
     1498    16469        /*
     1499    16470             ***** Determine whether to do a NUMERIC or STRING comparision ...
     1500    16471        */
     1501    16472    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-1),TEMP1) ALTRET(CHAR_COMPARE);
     1502    16473    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP2) ALTRET(CHAR_COMPARE);
     1503    16474    3   NUMERIC_COMPARE:
     1504    16475    4           DO CASE (OP_STACK(OP_PTR));
     1505    16476    4           CASE (%XUE_EQUAL#);
     1506    16477    4               IF TEMP1 = TEMP2
     1507    16478    4               THEN
     1508    16479    4                   VALUE$ = ONE$;
     1509    16480    4           CASE (%XUE_NEQUAL#);
     1510    16481    4               IF TEMP1 ~= TEMP2
     1511    16482    4               THEN
     1512    16483    4                   VALUE$ = ONE$;
     1513    16484    4           CASE (%XUE_LTHAN#);
     1514    16485    4               IF TEMP1 < TEMP2
     1515    16486    4               THEN
     1516    16487    4                   VALUE$ = ONE$;
     1517    16488    4           CASE (%XUE_GTHAN#);
     1518    16489    4               IF TEMP1 > TEMP2
     1519    16490    4               THEN
     1520    16491    4                   VALUE$ = ONE$;
     1521    16492    4           CASE (%XUE_LEQUAL#);
     1522    16493    4               IF TEMP1 <= TEMP2
     1523    16494    4               THEN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:67   
     1524    16495    4                   VALUE$ = ONE$;
     1525    16496    4           CASE (%XUE_GEQUAL#);
     1526    16497    4               IF TEMP1 >= TEMP2
     1527    16498    4               THEN
     1528    16499    4                   VALUE$ = ONE$;
     1529    16500    4           END;                    /* Do case ... NUMERIC COMPARE ... end     */
     1530    16501    3           EXIT APPLY_CASE;
     1531    16502    3   CHAR_COMPARE:
     1532    16503    3           CALL X$STRIP_BLANKS (VAL_STACK$(VAL_PTR-1));
     1533    16504    3           CALL X$STRIP_BLANKS (VAL_STACK$(VAL_PTR));
     1534    16505    4           DO CASE (OP_STACK(OP_PTR));
     1535    16506    4           CASE (%XUE_EQUAL#);
     1536    16507    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT =
     1537    16508    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1538    16509    4               THEN
     1539    16510    4                   VALUE$ = ONE$;
     1540    16511    4           CASE (%XUE_NEQUAL#);
     1541    16512    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT ~=
     1542    16513    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1543    16514    4               THEN
     1544    16515    4                   VALUE$ = ONE$;
     1545    16516    4           CASE (%XUE_LTHAN#);
     1546    16517    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT <
     1547    16518    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1548    16519    4               THEN
     1549    16520    4                   VALUE$ = ONE$;
     1550    16521    4           CASE (%XUE_GTHAN#);
     1551    16522    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT >
     1552    16523    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1553    16524    4               THEN
     1554    16525    4                   VALUE$ = ONE$;
     1555    16526    4           CASE (%XUE_LEQUAL#);
     1556    16527    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT <=
     1557    16528    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1558    16529    4               THEN
     1559    16530    4                   VALUE$ = ONE$;
     1560    16531    4           CASE (%XUE_GEQUAL#);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:68   
     1561    16532    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT >=
     1562    16533    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1563    16534    4               THEN
     1564    16535    4                   VALUE$ = ONE$;
     1565    16536    4           END;                         /* Do case ... CHAR COMPARE ... end   */
     1566    16537
     1567    16538        /*
     1568    16539             ***** WILDCARDING COMPARISON OPERATORS ...
     1569    16540        */
     1570    16541    3       CASE (%XUE_WCN_RPAT#);
     1571    16542    3           CALL X$WILDTCMP (VAL_STACK$(VAL_PTR-1) -> X$STRING,
     1572    16543    3             VAL_STACK$(VAL_PTR) -> X$STRING,
     1573    16544    3             XUE_ECB.ERR,'1'B) ALTRET (WILD_AND_CRAZY);
     1574    16545    3           GOTO WILD_AND_CRAZY;
     1575    16546    3       CASE (%XUE_WCN_LPAT#);
     1576    16547    3           CALL X$WILDTCMP (VAL_STACK$(VAL_PTR) -> X$STRING,
     1577    16548    3             VAL_STACK$(VAL_PTR-1) -> X$STRING,
     1578    16549    3             XUE_ECB.ERR,'1'B) ALTRET (WILD_AND_CRAZY);
     1579    16550    3           GOTO WILD_AND_CRAZY;
     1580    16551    3       CASE (%XUE_WEQ_RPAT#);
     1581    16552    3           CALL X$WILDTCMP (VAL_STACK$(VAL_PTR-1) -> X$STRING,
     1582    16553    3             VAL_STACK$(VAL_PTR) -> X$STRING,
     1583    16554    3             XUE_ECB.ERR,'0'B) ALTRET (WILD_AND_CRAZY);
     1584    16555    3           GOTO WILD_AND_CRAZY;
     1585    16556    3       CASE (%XUE_WEQ_LPAT#);
     1586    16557    3           CALL X$WILDTCMP (VAL_STACK$(VAL_PTR) -> X$STRING,
     1587    16558    3             VAL_STACK$(VAL_PTR-1) -> X$STRING,
     1588    16559    3             XUE_ECB.ERR,'0'B) ALTRET (WILD_AND_CRAZY);
     1589    16560    3   WILD_AND_CRAZY: ;
     1590    16561    3           IF XUE_ECB.ERR.CODE = %E$XUW#WILD_OK THEN
     1591    16562    3               VALUE$ = ONE$;
     1592    16563    3           ELSE
     1593    16564    3               IF XUE_ECB.ERR.CODE = %E$XUW#NOMATCH THEN
     1594    16565    3                   VALUE$ = ZERO$;
     1595    16566    3               ELSE
     1596    16567    4               DO;
     1597    16568    4                   XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:69   
     1598    16569    4                   ALTRETURN;
     1599    16570    4               END;
     1600    16571
     1601    16572        /*
     1602    16573             ***** CHARACTER MANIPULATION FUNCTIONS and OPERATORS ...
     1603    16574        */
     1604    16575    3       CASE (%XUE_$ACCT#);
     1605    16576    3           MCB.SIZE = LENGTHC(B$JIT.ACCN)+1;
     1606    16577    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1607    16578    3           VALUE$ = MCB.ADDRESS$;
     1608    16579    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.ACCN);
     1609    16580    3           VALUE$ -> X$STRING.TEXT = B$JIT.ACCN;
     1610    16581    3           CALL X$STRIP_BLANKS (VALUE$);
     1611    16582    3       CASE (%XUE_CMDVAR_EXIST#);
     1612    16583    3           VALUE$ = ZERO$;
     1613    16584    3           CALL TEST_VAR (VAL_STACK$(VAL_PTR))
     1614    16585    4           WHENRETURN DO;
     1615    16586    4               VALUE$ = ONE$;
     1616    16587    4           END;
     1617    16588    3       CASE (%XUE_CONCAT#);
     1618    16589    3           TEMP1 = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ +
     1619    16590    3             VAL_STACK$(VAL_PTR-1) -> X$STRING.SIZ;
     1620    16591    3           IF TEMP1 > 511   /* Max size of COMMAND VARIABLE */
     1621    16592    3           THEN   /* Wraparound will occure */
     1622    16593    4           DO;
     1623    16594    4               XUE_ECB.ERR = E_CVARTOOBIG;
     1624    16595    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     1625    16596    4               ALTRETURN;
     1626    16597    4           END;
     1627    16598    3           MCB.SIZE = TEMP1+1;             /* 1 byte for COUNT                   */
     1628    16599    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1629    16600    3           VALUE$ = MCB.ADDRESS$;
     1630    16601    3           VALUE$ -> X$STRING.SIZ = TEMP1;
     1631    16602    3           CALL CONCAT (VALUE$ -> X$STRING.TEXT,
     1632    16603    3             VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT,
     1633    16604    3             VAL_STACK$(VAL_PTR) -> X$STRING.TEXT);
     1634    16605    3       CASE (%XUE_$DATE#);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:70   
     1635    16606    3           MCB.SIZE = 16;
     1636    16607    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1637    16608    3           VALUE$ = MCB.ADDRESS$;
     1638    16609    3           VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;
     1639    16610    3           VALUE$ -> X$STRING.TEXT = ' ';
     1640    16611    3           FPT_TIME = CFPT_TIME;
     1641    16612    3           FPT_TIME.V_ = VECTOR(FPT_TIME.V);
     1642    16613    3           FPT_TIME.DATE_ = VECTOR(VALUE$ -> X$STRING.TEXT);
     1643    16614    3           FPT_TIME.V.DEST# = %ANS#;
     1644    16615    3           CALL TIME_FUNCTIONS ALTRET(E_REDUCE);
     1645    16616    3           CALL X$STRIP_BLANKS (VALUE$);
     1646    16617    3       CASE (%XUE_$DAY#);
     1647    16618    3           MCB.SIZE = 16;
     1648    16619    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1649    16620    3           VALUE$ = MCB.ADDRESS$;
     1650    16621    3           VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;
     1651    16622    3           VALUE$ -> X$STRING.TEXT = ' ';
     1652    16623    3           FPT_TIME = CFPT_TIME;
     1653    16624    3           FPT_TIME.V_ = VECTOR(FPT_TIME.V);
     1654    16625    3           FPT_TIME.DAY_ = VECTOR(VALUE$ -> X$STRING.TEXT);
     1655    16626    3           CALL TIME_FUNCTIONS ALTRET(E_REDUCE);
     1656    16627    3           CALL X$STRIP_BLANKS (VALUE$);
     1657    16628    3       CASE (%XUE_$DIR#);
     1658    16629    3           MCB.SIZE = LENGTHC(B$JIT.FACCN)+1;
     1659    16630    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1660    16631    3           VALUE$ = MCB.ADDRESS$;
     1661    16632    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.FACCN);
     1662    16633    3           VALUE$ -> X$STRING.TEXT = B$JIT.FACCN;
     1663    16634    3           CALL X$STRIP_BLANKS (VALUE$);
     1664    16635    3       CASE (%XUE_$EOF#);
     1665    16636    3           CALL GET_VAR (EOF_NAME$,VALUE$,CHARPOS_STACK(VAL_PTR)) ALTRET(E_REDUCE);
     1666    16637        /*
     1667    16638             ***** Once $EOF has been sampled it must be reset.
     1668    16639                   However, it must not be reset here. Because the
     1669    16640                   rest of the expression may have some error
     1670    16641                   (like workspace overflow) and when X$EVAL is
     1671    16642                   called again, the flag would already be reset.
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:71   
     1672    16643                   Therefore, a flag is set here and when X$EVALUATE
     1673    16644                   returns the $EOF flag will be reset...
     1674    16645        */
     1675    16646    3           XUE_ECB.INTERNAL.RESET_EOF# = %YES#;
     1676    16647    3       CASE (%XUE_$FID_EXIST#);
     1677    16648    3           FPARAM_VECTOR = VECTOR(NIL);
     1678    16649    3           CALL OPEN_TEST_FILE (VALUE) ALTRET(E_REDUCE);
     1679    16650    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     1680    16651    3       CASE (%XUE_$FID_ASN#);
     1681    16652    3           CALL FID_USERTHING ALTRET(E_REDUCE);
     1682    16653    3           TEMP = %TOP_ASN#;
     1683    16654    4           DO WHILE (FID_ASN ~= ASN_TBL.CODE(TEMP)
     1684    16655    4             AND TEMP > 0);
     1685    16656    4               TEMP = TEMP -1;
     1686    16657    4           END;
     1687    16658    3           MCB.SIZE = ASN_TBL.C(TEMP) + 1; /* One for size */
     1688    16659    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1689    16660    3           VALUE$ = MCB.ADDRESS$;
     1690    16661    3           VALUE$ -> X$STRING.SIZ = ASN_TBL.C(TEMP);
     1691    16662    3           VALUE$ -> X$STRING.TEXT = ASN_TBL.TEXT(TEMP);
     1692    16663    3       CASE (%XUE_$FID_RECS#,%XUE_$FID_GRANS#,
     1693    16664    3             %XUE_$FID_TYPE#,%XUE_$FID_ORG#,
     1694    16665    3             %XUE_$FID_UGRANS#,%XUE_$FID_NGAVAL#);
     1695    16666    3           MCB.SIZE = 1024 * 4;  /* Room for entire FIT */
     1696    16667    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1697    16668    3           FPARAM_VECTOR = VECTOR(NIL);    /* Set other vector parts             */
     1698    16669    3           VBASE(FPARAM_VECTOR) = MCB.ADDRESS$;
     1699    16670    3           VBOUND(FPARAM_VECTOR) = MCB.SIZE -1;
     1700    16671    3           CALL OPEN_TEST_FILE (VALUE) ALTRET(E_RELFPARAM);
     1701    16672    3           IF VALUE = 0 THEN               /* File does not exist                */
     1702    16673    3               GOTO E_NONESUCH;
     1703    16674    3           TEMP$ = VBASE(FPARAM_VECTOR);
     1704    16675    3           CALL XSF$LOCCODP(TEMP$,03) ALTRET(E_RELFPARAM);
     1705    16676    4           DO CASE(OP_STACK(OP_PTR));
     1706    16677    4           CASE(%XUE_$FID_RECS#);
     1707    16678    4               TEMP = TEMP$ -> CODE03.NRECS;
     1708    16679    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:72   
     1709    16680    4           CASE(%XUE_$FID_GRANS#);
     1710    16681    4               TEMP = TEMP$ -> CODE03.UGRANS + TEMP$ -> CODE03.NGAVAL;
     1711    16682    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);
     1712    16683    4           CASE(%XUE_$FID_UGRANS#);
     1713    16684    4               TEMP = TEMP$ -> CODE03.UGRANS;
     1714    16685    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);
     1715    16686    4           CASE(%XUE_$FID_NGAVAL#);
     1716    16687    4               TEMP = TEMP$ -> CODE03.NGAVAL;
     1717    16688    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);
     1718    16689    4           CASE (%XUE_$FID_TYPE#);
     1719    16690    4               MCB.SIZE = SIZEC(CODE03.TYPE) + 1; /* One for size */
     1720    16691    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1721    16692    4               VALUE$ = MCB.ADDRESS$;
     1722    16693    4               VALUE$ -> X$STRING.SIZ = SIZEC(CODE03.TYPE);
     1723    16694    4               VALUE$ -> X$STRING.TEXT = TEMP$ -> CODE03.TYPE;
     1724    16695    4           CASE (%XUE_$FID_ORG#);
     1725    16696    4               TEMP = %TOP_ORG#;
     1726    16697    5               DO WHILE(TEMP$ -> CODE03.ORG ~= ORG_TBL.CODE(TEMP)
     1727    16698    5                 AND TEMP > 0);
     1728    16699    5                   TEMP = TEMP -1;
     1729    16700    5               END;
     1730    16701    4               MCB.SIZE = ORG_TBL.C(TEMP) + 1; /* One for size */
     1731    16702    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1732    16703    4               VALUE$ = MCB.ADDRESS$;
     1733    16704    4               VALUE$ -> X$STRING.SIZ = ORG_TBL.C(TEMP);
     1734    16705    4               VALUE$ -> X$STRING.TEXT = ORG_TBL.TEXT(TEMP);
     1735    16706    4           END;
     1736    16707    3           MCB.ADDRESS$ = VBASE(FPARAM_VECTOR) ;
     1737    16708    3           CALL X$DEALLOCATE(MCB) ALTRET(E_ALLOCATE);
     1738    16709    3       CASE (%XUE_$HSET#);
     1739    16710    3           MCB.SIZE = LENGTHC(B$JIT.HPSN)+1;
     1740    16711    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1741    16712    3           VALUE$ = MCB.ADDRESS$;
     1742    16713    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.HPSN);
     1743    16714    3           VALUE$ -> X$STRING.TEXT = B$JIT.HPSN;
     1744    16715    3           CALL X$STRIP_BLANKS (VALUE$);
     1745    16716    3       CASE (%XUE_$INDEX#);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:73   
     1746    16717    3           CALL CHK_BOUNDS (%XUE_$INDEX#,TEMP1,TEMP2) ALTRET(E_REDUCE);
     1747    16718    3           CALL INDEX (WHERE,VAL_STACK$(VAL_PTR-2)->X$STRING.TEXT,
     1748    16719    3             SUBSTR(VAL_STACK$(VAL_PTR-3)->X$STRING.TEXT,TEMP1,TEMP2-TEMP1+1));
     1749    16720    3           VALUE = WHERE + TEMP1;
     1750    16721    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     1751    16722    3       CASE (%XUE_$INPUT#);
     1752    16723    3           IF XUE_ECB.INPUT_DCB# = DCBNUM(NIL)
     1753    16724    3           THEN
     1754    16725    3               TEMP = %M$UC#;
     1755    16726    3           ELSE
     1756    16727    3               TEMP = XUE_ECB.INPUT_DCB#;
     1757    16728    3           IF VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ > 0
     1758    16729    3           THEN   /* PROMPT string specified */
     1759    16730    4           DO;
     1760    16731    4               CALL CONCAT (TEMPBUF.TEXT,PROMPT_VFC.TEXT,
     1761    16732    4                 VAL_STACK$(VAL_PTR-2) -> X$STRING.TEXT);
     1762    16733    4               FPT_WRITE = CFPT_WRITE;
     1763    16734    4               FPT_WRITE.V_ = VECTOR(FPT_WRITE.V);
     1764    16735    4               FPT_WRITE.V.DCB# = TEMP;
     1765    16736    4               FPT_WRITE.BUF_ = VECTOR(TEMPBUF.TEXT);
     1766    16737    4               FPT_WRITE.BUF_.BOUND =
     1767    16738    4                 VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ;
     1768    16739    4               FPT_WRITE.V.DVBYTE.VFC# = %YES#;
     1769    16740    4               FPT_WRITE.V.DVBYTE.BP# = %YES#;
     1770    16741    4               CALL M$WRITE (FPT_WRITE) ALTRET(E_PMME);
     1771    16742    4           END;  /* Do ... end */
     1772    16743        /*
     1773    16744             ***** Save the prompt ...
     1774    16745        */
     1775    16746    3           FPT_SAVE_PROMPT = CFPT_PROMPT;
     1776    16747    3           FPT_SAVE_PROMPT.V_ = VECTOR(FPT_SAVE_PROMPT.V);
     1777    16748    3           FPT_SAVE_PROMPT.PROMPT_ = VECTOR(SAVE_PROMPT);
     1778    16749    3           FPT_SAVE_PROMPT.V.DCB# = TEMP;
     1779    16750    3           TBIT = %YES#;                   /* Anticipate getting prompt          */
     1780    16751    3           CALL M$GPROMPT (FPT_SAVE_PROMPT)
     1781    16752    4           WHENALTRETURN DO;
     1782    16753    4               TBIT = %NO#;                /* Was unable to get prompt           */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:74   
     1783    16754    4           END;
     1784    16755    3           IF DCBADDR(TEMP) -> F$DCB.ARS# = 0 THEN
     1785    16756    3               FPT_SAVE_PROMPT.PROMPT_ = VECTOR(NIL);
     1786    16757    3           ELSE
     1787    16758    3               VBOUND(FPT_SAVE_PROMPT.PROMPT_) = DCBADDR(TEMP) -> F$DCB.ARS# -1;
     1788    16759        /*
     1789    16760             ***** Change the prompt ...
     1790    16761        */
     1791    16762    3           XUE_ECB.RESULTS.PROMPT# = %YES#;
     1792    16763    3           FPT_PROMPT = CFPT_PROMPT;
     1793    16764    3           FPT_PROMPT.V_ = VECTOR(FPT_PROMPT.V);
     1794    16765    3           FPT_PROMPT.V.DVBYTE#.VFC# = %YES#;
     1795    16766    3           FPT_PROMPT.V.DCB# = TEMP;
     1796    16767    3           FPT_PROMPT.PROMPT_ = VECTOR(SAME_LINE.TEXT);
     1797    16768    3           CALL M$PROMPT (FPT_PROMPT) ALTRET(E_PMME);
     1798    16769        /*
     1799    16770             ***** Setup the read FPT ...
     1800    16771        */
     1801    16772    3           TEMPBUF.TEXT = ' ';
     1802    16773    3           FPT_READ = CFPT_READ;
     1803    16774    3           FPT_READ.V_ = VECTOR(FPT_READ.V);
     1804    16775    3           FPT_READ.BUF_ = VECTOR(TEMPBUF.TEXT);
     1805    16776    3           FPT_READ.V.DCB# = TEMP;
     1806    16777        /*
     1807    16778             ***** Setup the reread buffer, if specified ...
     1808    16779        */
     1809    16780    3           IF VAL_TYPE(VAL_PTR-1) ~= %XUE_DEFAULT#
     1810    16781    3             AND VAL_STACK$(VAL_PTR-1) -> X$STRING.SIZ > 0
     1811    16782    4           THEN DO;
     1812    16783    4               FPT_READ.V.DVBYTE.REREAD# = %YES#;
     1813    16784    4               FPT_SINPUT = CFPT_SINPUT;
     1814    16785    4               FPT_SINPUT.BUF_ = VECTOR (VAL_STACK$(VAL_PTR-1)-> X$STRING.TEXT);
     1815    16786    4               FPT_SINPUT.V.DCB# = TEMP;
     1816    16787        /*
     1817    16788             ***** Also setup the reread position, if it's specified too ...
     1818    16789        */
     1819    16790    4               IF VAL_TYPE(VAL_PTR) ~= %XUE_DEFAULT#
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:75   
     1820    16791    5               THEN DO;
     1821    16792    5                   CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP1) ALTRET(E_DEC);
     1822    16793    5                   FPT_SINPUT.V.REREADPOS# = TEMP1;
     1823    16794    5               END;
     1824    16795        /*
     1825    16796             ***** Now issue the read pmme(s) ...
     1826    16797        */
     1827    16798    4               CALL M$SINPUT (FPT_SINPUT) ALTRET(E_PMME);
     1828    16799    4           END;
     1829    16800    3           CALL M$READ (FPT_READ) ALTRET(E_READ);
     1830    16801        /*
     1831    16802             ***** Restore the prompt ...
     1832    16803        */
     1833    16804    3           IF TBIT THEN
     1834    16805    4           DO;
     1835    16806    4               CALL M$PROMPT (FPT_SAVE_PROMPT) ALTRET(E_PMME);
     1836    16807    4               XUE_ECB.RESULTS.PROMPT# = %NO#;
     1837    16808    4           END;
     1838    16809        /*
     1839    16810             ***** Reset $EOF flag ...
     1840    16811        */
     1841    16812    3           XUE_ECB.INTERNAL.RESET_EOF# = %YES#;
     1842    16813        /*
     1843    16814             ***** Look for QUOTES, strip blanks, etc. ...
     1844    16815        */
     1845    16816    3           TEMPBUF.SIZ = DCBADDR(TEMP) -> F$DCB.ARS#;
     1846    16817    3           CALL PROCESS_INPUT ALTRET(E_REDUCE);
     1847    16818        /*
     1848    16819             ***** Stash away the reply ...
     1849    16820        */
     1850    16821    3           MCB.SIZE = TEMPBUF.SIZ + 1;     /* One for count                      */
     1851    16822    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1852    16823    3           VALUE$ = MCB.ADDRESS$;
     1853    16824    3           VALUE$ -> X$STRING.SIZ = TEMPBUF.SIZ;
     1854    16825    3           IF TEMPBUF.SIZ > 0
     1855    16826    3           THEN                         /* Not null string                    */
     1856    16827    3               VALUE$ -> X$STRING.TEXT = TEMPBUF.TEXT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:76   
     1857    16828        /*
     1858    16829             ***** Handle read errors.
     1859    16830                   Done here so that flow can fall thru
     1860    16831                   and the PROMPT reset...
     1861    16832        */
     1862    16833    4           DO WHILE(%NO#);
     1863    16834    4   E_READ:
     1864    16835    4               IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$EOF
     1865    16836    4               THEN   /* Set $EOF flag. Return NULL string */
     1866    16837    5               DO;
     1867    16838    5                   CALL X$PUT_VAR (EOF_NAME$,ONE$,XUE_ECB,,%XUE_INTERNAL#) ALTRET(
             16838                            E_REDUCE);
     1868    16839    5                   MCB.SIZE = 1;
     1869    16840    5                   CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1870    16841    5                   VALUE$ = MCB.ADDRESS$;
     1871    16842    5                   VALUE$ -> X$STRING.SIZ = 0;
     1872    16843        /*
     1873    16844             ***** Restore the prompt ...
     1874    16845        */
     1875    16846    5                   IF TBIT THEN
     1876    16847    6                   DO;
     1877    16848    6                       CALL M$PROMPT (FPT_SAVE_PROMPT) ALTRET(E_PMME);
     1878    16849    6                       XUE_ECB.RESULTS.PROMPT# = %NO#;
     1879    16850    6                   END;
     1880    16851    5               END;
     1881    16852    4               ELSE                      /* A real error                       */
     1882    16853    4                   GOTO E_PMME;
     1883    16854    4           END;   /* Do while NO */
     1884    16855    3       CASE (%XUE_$KEYIN#);
     1885    16856    3           IF VAL_STACK$(VAL_PTR) -> X$STRING.SIZ > 110
     1886    16857    3           THEN    /* Message too long */
     1887    16858    4           DO;   /* Return error */
     1888    16859    4               XUE_ECB.ERR = E_MSGTOOLONG;
     1889    16860    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     1890    16861    4               ALTRETURN;
     1891    16862    4           END;
     1892    16863    3           IF VAL_STACK$(VAL_PTR) -> X$STRING.SIZ = 0
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:77   
     1893    16864    3           THEN   /* Null message to operator? */
     1894    16865    4           DO;   /* Return error */
     1895    16866    4               XUE_ECB.ERR = E_NULLSTRING;
     1896    16867    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     1897    16868    4               ALTRETURN;
     1898    16869    4           END;
     1899    16870    3           FPT_KEYIN = CFPT_KEYIN;
     1900    16871    3           FPT_KEYIN.V_ = VECTOR(FPT_KEYIN.V);
     1901    16872    3           FPT_KEYIN.MESS_ = VECTOR(VAL_STACK$(VAL_PTR)->X$STRING.TEXT);
     1902    16873    3           FPT_KEYIN.REPLY_ = VECTOR(TEMPBUF.TEXT);
     1903    16874    3           FPT_KEYIN.RESULTS_ = VECTOR(KEYIN_RESULTS);
     1904    16875    3           CALL M$KEYIN (FPT_KEYIN) ALTRET(E_PMME);
     1905    16876        /*
     1906    16877             ***** Look for QUOTES, strip blanks, etc. ...
     1907    16878        */
     1908    16879    3           TEMPBUF.SIZ = KEYIN_RESULTS.ARS# + 1;
     1909    16880    3           CALL PROCESS_INPUT;
     1910    16881        /*
     1911    16882             ***** Stash away the reply ...
     1912    16883        */
     1913    16884    3           MCB.SIZE = TEMPBUF.SIZ + 1;     /* One for count                      */
     1914    16885    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1915    16886    3           VALUE$ = MCB.ADDRESS$;
     1916    16887    3           VALUE$ -> X$STRING.SIZ = KEYIN_RESULTS.ARS#;
     1917    16888    3           IF TEMPBUF.SIZ > 0
     1918    16889    3           THEN                         /* Not null string                    */
     1919    16890    3               VALUE$ -> X$STRING.TEXT = TEMPBUF.TEXT;
     1920    16891    3       CASE (%XUE_$UPC#);
     1921    16892    3           MCB.SIZE = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ +1;
     1922    16893    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1923    16894    3           VALUE$ = MCB.ADDRESS$;
     1924    16895    3           VALUE$ -> X$STRING.SIZ = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ;
     1925    16896    3           VALUE$ -> X$STRING.TEXT = VAL_STACK$(VAL_PTR) -> X$STRING.TEXT;
     1926    16897    3           CALL XLATE(VALUE$ -> X$STRING.TEXT,LC2UC,VALUE$ -> X$STRING.TEXT);
     1927    16898    3       CASE (%XUE_$LOC#);
     1928    16899    3           MCB.SIZE = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ +1;
     1929    16900    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:78   
     1930    16901    3           VALUE$ = MCB.ADDRESS$;
     1931    16902    3           VALUE$ -> X$STRING.SIZ = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ;
     1932    16903    3           VALUE$ -> X$STRING.TEXT = VAL_STACK$(VAL_PTR) -> X$STRING.TEXT;
     1933    16904    3           CALL XLATE(VALUE$ -> X$STRING.TEXT,UC2LC,VALUE$ -> X$STRING.TEXT);
     1934    16905    3       CASE (%XUE_$LASTBATCH#);
     1935    16906    3           VALUE = B$JIT.LBJID;
     1936    16907    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     1937    16908    3       CASE (%XUE_$LEN#);
     1938    16909    3           VALUE = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ;
     1939    16910    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     1940    16911    3       CASE (%XUE_$MODE#);
     1941    16912    4           DO CASE (B$JIT.MODE);
     1942    16913    4           CASE (%M_BATCH#);
     1943    16914    4               MCB.SIZE = 6;
     1944    16915    4               TEMPBUF.TEXT = 'BATCH';
     1945    16916    4           CASE (%M_GHOST#);
     1946    16917    4               MCB.SIZE = 6;
     1947    16918    4               TEMPBUF.TEXT = 'GHOST';
     1948    16919    4           CASE (%M_INT#);
     1949    16920    4               MCB.SIZE = 7;
     1950    16921    4               TEMPBUF.TEXT = 'ONLINE';
     1951    16922    4           CASE (%M_TP#);
     1952    16923    4               MCB.SIZE = 3;
     1953    16924    4               TEMPBUF.TEXT = 'TP';
     1954    16925    4           END;
     1955    16926    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     1956    16927    3           VALUE$ = MCB.ADDRESS$;
     1957    16928    3           VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;
     1958    16929    3           VALUE$ -> X$STRING.TEXT = TEMPBUF.TEXT;
     1959    16930    3       CASE (%XUE_$ABS#);
     1960    16931    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),VALUE) ALTRET(E_DEC);
     1961    16932    3           IF VALUE < 0 THEN
     1962    16933    3               VALUE = -VALUE;
     1963    16934    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     1964    16935    3       CASE (%XUE_$MIN#);
     1965    16936    3           IF NUM_TO_POP_STACK(OP_PTR) < 2 THEN
     1966    16937    3               GOTO E_BADNUMARGS;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:79   
     1967    16938    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),VALUE) ALTRET(E_DEC);
     1968    16939    4           DO TEMP1 = 2 TO NUM_TO_POP_STACK (OP_PTR);
     1969    16940    4               CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-TEMP1+1),TEMP2) ALTRET(E_DEC1);
     1970    16941    4               VALUE = MINIMUM(VALUE,TEMP2);
     1971    16942    4           END;
     1972    16943    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     1973    16944    3       CASE (%XUE_$MAX#);
     1974    16945    3           IF NUM_TO_POP_STACK(OP_PTR) < 2 THEN
     1975    16946    3               GOTO E_BADNUMARGS;
     1976    16947    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),VALUE) ALTRET(E_DEC);
     1977    16948    4           DO TEMP1 = 2 TO NUM_TO_POP_STACK (OP_PTR);
     1978    16949    4               CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-TEMP1+1),TEMP2) ALTRET(E_DEC1);
     1979    16950    4               VALUE = MAXIMUM(VALUE,TEMP2);
     1980    16951    4           END;
     1981    16952    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     1982    16953    3       CASE (%XUE_$MOD#,%XUE_$REM#);
     1983    16954    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP2) ALTRET(E_DEC);
     1984    16955    3           IF TEMP2 = 0 THEN
     1985    16956    4           DO;                          /* Post err                           */
     1986    16957    4               XUE_ECB.ERR = E_ZERODIVFLT;
     1987    16958    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     1988    16959    4               ALTRETURN;
     1989    16960    4           END;
     1990    16961    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-1),TEMP1) ALTRET(E_DEC1);
     1991    16962    3           IF TEMP2 > 0 OR OP_STACK(OP_PTR) = %XUE_$REM# THEN
     1992    16963    3               VALUE = MOD(TEMP1,TEMP2);
     1993    16964    3           ELSE                            /* Special, MOD of neg number         */
     1994    16965    4           DO;
     1995    16966    4               TEMP3 = TEMP1 / TEMP2;
     1996    16967    4               IF MOD(TEMP1,TEMP2) > 0 THEN
     1997    16968    4                   TEMP3 = TEMP3 -1;
     1998    16969    4               VALUE = TEMP1 - (TEMP2 * TEMP3);
     1999    16970    4           END;
     2000    16971    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     2001    16972    3       CASE (%XUE_$NAME#);
     2002    16973    3           MCB.SIZE = LENGTHC(B$JIT.UNAME)+1;
     2003    16974    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:80   
     2004    16975    3           VALUE$ = MCB.ADDRESS$;
     2005    16976    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.UNAME);
     2006    16977    3           VALUE$ -> X$STRING.TEXT = B$JIT.UNAME;
     2007    16978    3           CALL X$STRIP_BLANKS (VALUE$);
     2008    16979    3       CASE (%XUE_$TERM_PROFILE#,%XUE_$TERM_FEP#,
     2009    16980    3             %XUE_$TERM_LINE#,%XUE_$TERM_SPEED#);
     2010    16981    3           IF B$JIT.MODE ~= %M_INT# THEN
     2011    16982    3               GOTO E_BADMODE;
     2012    16983    3           FPT_GLINEATTR = CFPT_GLINEATTR;
     2013    16984    3           FPT_GLINEATTR.V_ = VECTOR(FPT_GLINEATTR.V);
     2014    16985    3           FPT_GLINEATTR.LINEATTR_ = VECTOR(VLP_LINEATTR);
     2015    16986    3           CALL M$GLINEATTR (FPT_GLINEATTR) ALTRET(E_PMME);
     2016    16987    4           DO CASE (OP_STACK(OP_PTR));
     2017    16988    4           CASE (%XUE_$TERM_PROFILE#);
     2018    16989    4               MCB.SIZE = VLP_LINEATTR.PROTXTC.CNT+1;
     2019    16990    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2020    16991    4               VALUE$ = MCB.ADDRESS$;
     2021    16992    4               VALUE$ -> X$STRING.SIZ = VLP_LINEATTR.PROTXTC.CNT;
     2022    16993    4               VALUE$ -> X$STRING.TEXT = VLP_LINEATTR.PROTXTC.TXT;
     2023    16994    4           CASE (%XUE_$TERM_FEP#);
     2024    16995    4               MCB.SIZE = 4 +1;
     2025    16996    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2026    16997    4               VALUE$ = MCB.ADDRESS$;
     2027    16998    4               VALUE$ -> X$STRING.SIZ = MCB.SIZE -1;
     2028    16999    4               VALUE$ -> X$STRING.TEXT = VLP_LINEATTR.NODE#;
     2029    17000    4           CASE (%XUE_$TERM_LINE#);
     2030    17001    4               MCB.SIZE = 4 +1;
     2031    17002    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2032    17003    4               VALUE$ = MCB.ADDRESS$;
     2033    17004    4               VALUE$ -> X$STRING.SIZ = MCB.SIZE -1;
     2034    17005    4               VALUE$ -> X$STRING.TEXT = VLP_LINEATTR.PORT#;
     2035    17006    4           CASE (%XUE_$TERM_SPEED#);
     2036    17007    4               TEMP = SPEED_TBL(VLP_LINEATTR.LINESPEED#);
     2037    17008    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);
     2038    17009    4           END;                         /* END CASE                           */
     2039    17010    3       CASE (%XUE_$RERUN#);
     2040    17011    3           IF B$JIT.RERUN THEN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:81   
     2041    17012    3               VALUE$ = YES$;
     2042    17013    3           ELSE
     2043    17014    3               VALUE$ = NO$;
     2044    17015    3       CASE (%XUE_$FLAG#);
     2045    17016    3           TEMP1 = VAL_TYPE(VAL_PTR);
     2046    17017    3           TBIT = %NO#;
     2047    17018    4           DO CASE (TEMP1);
     2048    17019    4           CASE(%FLAG_PROTECT#);
     2049    17020    4               IF B$JIT.CPFLAGS1 & %CP_PROTECT# THEN
     2050    17021    4                   TBIT = %YES#;
     2051    17022    4           CASE(%FLAG_LIST#);
     2052    17023    4               TBIT = B$JIT.PRFLAGS.LIST;
     2053    17024    4           CASE(%FLAG_COMMENT#);
     2054    17025    4               TBIT = B$JIT.PRFLAGS.COMMENT;
     2055    17026    4           CASE(%FLAG_DRIBBLE#);
     2056    17027    4               IF B$JIT.CPFLAGS1 & %CP_DRIBBLE# THEN
     2057    17028    4                   TBIT = %YES#;
     2058    17029    4           CASE(%FLAG_ECHO#);
     2059    17030    4               IF B$JIT.CPFLAGS1 & %CP_ECHO# THEN
     2060    17031    4                   TBIT = %YES#;
     2061    17032    4           CASE(%FLAG_NOTIFY#);
     2062    17033    4               IF B$JIT.CPFLAGS1 & %CP_NOTIFY# THEN
     2063    17034    4                   TBIT = %YES#;
     2064    17035    4           CASE(%FLAG_ACCEPTBROADCAST#);
     2065    17036                      /*N*/
     2066    17037    4           CASE(%FLAG_ACCEPTSEND#);
     2067    17038                      /*N*/
     2068    17039    4           CASE(%FLAG_ACCEPTANNOUNCE#);
     2069    17040                      /*N*/
     2070    17041    4           END;                         /* END CASE                           */
     2071    17042    3           IF TBIT THEN
     2072    17043    3               VALUE$ = YES$;
     2073    17044    3           ELSE
     2074    17045    3               VALUE$ = NO$;
     2075    17046    3       CASE (%XUE_$PRIV_ACTIVE#);
     2076    17047    3           TEMP1 = VAL_TYPE(VAL_PTR);
     2077    17048    3           IF B$JIT.PRIV.JOB & PRIV.MASK(TEMP1) THEN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:82   
     2078    17049    3               VALUE$ = YES$;
     2079    17050    3           ELSE
     2080    17051    3               VALUE$ = NO$;
     2081    17052    3       CASE (%XUE_$PRIV_AUTH#);
     2082    17053    3           TEMP1 = VAL_TYPE(VAL_PTR);
     2083    17054    3           IF B$JIT.PRIV.AUTH & PRIV.MASK(TEMP1) THEN
     2084    17055    3               VALUE$ = YES$;
     2085    17056    3           ELSE
     2086    17057    3               VALUE$ = NO$;
     2087    17058    3       CASE (%XUE_$SEARCH#);
     2088    17059    3           SEARCH_TABLE = ZERO_511;        /* Init table to zeros                */
     2089    17060    4           DO TEMP2 = 0 TO VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ - 1;
     2090    17061    4               TEMP1 = VAL_STACK$(VAL_PTR-2) -> U$STRING.TEXT(TEMP2);
     2091    17062    4               SEARCH_TABLE(TEMP1) = 1;
     2092    17063    4           END;
     2093    17064    3           CALL CHK_BOUNDS (%XUE_$SEARCH#,TEMP1,TEMP2) ALTRET(E_REDUCE);
     2094    17065    3           CALL SEARCH (WHERE,RESULT,SEARCH_TABLE,
     2095    17066    3             SUBSTR(VAL_STACK$(VAL_PTR-3)->X$STRING.TEXT,TEMP1,TEMP2-TEMP1+1));
     2096    17067    3           IF RESULT = 0
     2097    17068    3           THEN                         /* Unsuccessful                       */
     2098    17069    3               VALUE = VAL_STACK$(VAL_PTR-3) -> X$STRING.SIZ;
     2099    17070    3           ELSE                         /* RESULT points to first char        */
     2100    17071    3               VALUE = WHERE + TEMP1;
     2101    17072    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     2102    17073    3       CASE (%XUE_$SITE#);
     2103    17074    3           FPT_MONINFO = CFPT_MONINFO;
     2104    17075    3           FPT_MONINFO.SITEINFO_ = VECTOR(VLR_SITEINFO);
     2105    17076    3           CALL M$MONINFO (FPT_MONINFO) ALTRET(E_PMME);
     2106    17077    3           MCB.SIZE = VLR_SITEINFO.SITE_NAME#.L + 1; /* One for count*/
     2107    17078    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2108    17079    3           VALUE$ = MCB.ADDRESS$;
     2109    17080    3           VALUE$ -> X$STRING.SIZ = VLR_SITEINFO.SITE_NAME#.L;
     2110    17081    3           VALUE$ -> X$STRING.TEXT = VLR_SITEINFO.SITE_NAME#.C;
     2111    17082    3       CASE (%XUE_$SUBSTR#);
     2112    17083    3           CALL CHK_BOUNDS (%XUE_$SUBSTR#,TEMP1,TEMP2) ALTRET(E_REDUCE);
     2113    17084    3           MCB.SIZE = TEMP2 + 1;
     2114    17085    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:83   
     2115    17086    3           VALUE$ = MCB.ADDRESS$;
     2116    17087    3           VALUE$ -> X$STRING.SIZ = TEMP2;
     2117    17088    3           VALUE$ -> X$STRING.TEXT =
     2118    17089    3             SUBSTR(VAL_STACK$(VAL_PTR-2) -> X$STRING.TEXT,TEMP1,TEMP2);
     2119    17090    3       CASE (%XUE_$SWITCH#);
     2120    17091    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP2) ALTRET(E_REDUCE);
     2121    17092    3           IF TEMP2 > 35
     2122    17093    3           THEN
     2123    17094    4           DO;                       /* Post err                           */
     2124    17095    4               XUE_ECB.ERR = E_BDSWITCH;
     2125    17096    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     2126    17097    4               ALTRETURN;
     2127    17098    4           END;
     2128    17099    3           VALUE = BITBIN(B$JIT.SWITCH(TEMP2));
     2129    17100    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     2130    17101    3       CASE (%XUE_$SYSID#);
     2131    17102    3           VALUE = B$JIT.SYSID;
     2132    17103    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     2133    17104    3       CASE (%XUE_$TIME#);
     2134    17105    3           MCB.SIZE = 16;
     2135    17106    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2136    17107    3           VALUE$ = MCB.ADDRESS$;
     2137    17108    3           VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;
     2138    17109    3           VALUE$ -> X$STRING.TEXT  = ' ';
     2139    17110    3           FPT_TIME = CFPT_TIME;
     2140    17111    3           FPT_TIME.V_ = VECTOR(FPT_TIME.V);
     2141    17112    3           FPT_TIME.TIME_ = VECTOR(VALUE$ -> X$STRING.TEXT);
     2142    17113    3           FPT_TIME.V.DEST# = %ANS#;
     2143    17114    3           CALL TIME_FUNCTIONS ALTRET(E_REDUCE);
     2144    17115    3           CALL X$STRIP_BLANKS (VALUE$);
     2145    17116    4           DO CASE (FPT_TIME.V.DEST#);
     2146    17117    4           CASE (%ANS#);
     2147    17118    4               VALUE$ -> X$STRING.SIZ = 4;
     2148    17119    4           CASE (%EXT#,
     2149    17120    4                 %LOCAL#);
     2150    17121    4               VALUE$ -> X$STRING.SIZ = 5;
     2151    17122    4           END;   /* Do case ... end */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:84   
     2152    17123    3       CASE (%XUE_$VERIFY#);
     2153    17124    3           SEARCH_TABLE = ONE_511;         /* Init table to ones                 */
     2154    17125    4           DO TEMP2 = 0 TO VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ - 1;
     2155    17126    4               TEMP1 = VAL_STACK$(VAL_PTR-2) -> U$STRING.TEXT(TEMP2);
     2156    17127    4               SEARCH_TABLE(TEMP1) = 0;
     2157    17128    4           END;
     2158    17129    3           CALL CHK_BOUNDS (%XUE_$VERIFY#,TEMP1,TEMP2) ALTRET(E_REDUCE);
     2159    17130    3           CALL SEARCH (WHERE,RESULT,SEARCH_TABLE,
     2160    17131    3             SUBSTR(VAL_STACK$(VAL_PTR-3)->X$STRING.TEXT,TEMP1,TEMP2-TEMP1+1));
     2161    17132    3           IF RESULT = 0
     2162    17133    3           THEN                         /* Unsuccessful                       */
     2163    17134    3               VALUE = VAL_STACK$(VAL_PTR-3) -> X$STRING.SIZ;
     2164    17135    3           ELSE                         /* RESULT points to first char        */
     2165    17136    3               VALUE = WHERE + TEMP1;
     2166    17137    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
     2167    17138    3       CASE (%XUE_$VERSION#);
     2168    17139    3           FPT_MONINFO = CFPT_MONINFO;
     2169    17140    3           FPT_MONINFO.SITEINFO_ = VECTOR(VLR_SITEINFO);
     2170    17141    3           CALL M$MONINFO (FPT_MONINFO) ALTRET(E_PMME);
     2171    17142    3           MCB.SIZE = LENGTHC(VLR_SITEINFO.VERSION#) + 1; /* One for count        */
     2172    17143    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2173    17144    3           VALUE$ = MCB.ADDRESS$;
     2174    17145    3           VALUE$ -> X$STRING.SIZ = LENGTHC(VLR_SITEINFO.VERSION#);
     2175    17146    3           VALUE$ -> X$STRING.TEXT = VLR_SITEINFO.VERSION#;
     2176    17147    3       CASE (%XUE_$WOO#);
     2177    17148    3           MCB.SIZE = LENGTHC(B$JIT.WOO)+1;
     2178    17149    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2179    17150    3           VALUE$ = MCB.ADDRESS$;
     2180    17151    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.WOO);
     2181    17152    3           VALUE$ -> X$STRING.TEXT = B$JIT.WOO;
     2182    17153    3           CALL X$STRIP_BLANKS (VALUE$);
     2183    17154    3       CASE (ELSE);
     2184    17155    3       END APPLY_CASE; /* Do case ... end */
     2185    17156        /*
     2186    17157             ***** REDUCE the value stack...
     2187    17158                   Deallocate the string space, and decrement VAL_PTR ...
     2188    17159        */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:85   
     2189    17160    3       DO K = 1 TO NUM_TO_POP_STACK(OP_PTR);
     2190    17161    3           MCB.ADDRESS$ = VAL_STACK$(VAL_PTR);
     2191    17162    3           CALL X$DEALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2192    17163    3           VAL_PTR = VAL_PTR - 1;
     2193    17164    3       END; /* Do index ... end */
     2194    17165        /*
     2195    17166             ***** Push the RESULT of this REDUCTION
     2196    17167                   onto the VALUE STACK (VAL_STACK$) ...
     2197    17168        */
     2198    17169          %PUSH_VALUE (VALUE=VALUE$,TYPE=%XUE_UNKNOWN#);
     2199    17185        /*
     2200    17186             ***** Remove the REDUCEd operator from
     2201    17187                   the OPERATOR STACK (OP_STK) ...
     2202    17188        */
     2203    17189    2       OP_PTR = OP_PTR - 1;
     2204    17190    2       RETURN;
     2205    17191        /**/
     2206    17192    2   E_RELFPARAM: ;
     2207    17193    2       MCB.ADDRESS$ = VBASE(FPARAM_VECTOR) ;
     2208    17194    2       CALL X$DEALLOCATE(MCB) ALTRET(E_ALLOCATE);
     2209    17195    2       ALTRETURN;
     2210    17196        /**/
     2211    17197    2   E_NONESUCH: ;                           /* No such file exists                */
     2212    17198    2       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;
     2213    17199    2       XUE_ECB.ERR_DCB# = B$TCB.ALT$ -> B$ALT.DCB#;
     2214    17200    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     2215    17201    2       IF FPARAM_VECTOR ~= VECTOR(NIL) THEN
     2216    17202    3       DO;
     2217    17203    3           MCB.ADDRESS$ = VBASE(FPARAM_VECTOR) ;
     2218    17204    3           CALL X$DEALLOCATE(MCB) ALTRET(E_ALLOCATE);
     2219    17205    3       END;
     2220    17206    2       ALTRETURN;
     2221    17207        /**/
     2222    17208    2   E_BADNUMARGS: ;                         /* Bad number of arguments            */
     2223    17209    2       XUE_ECB.ERR = E_ILLNUMARGS;
     2224    17210    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     2225    17211    2       ALTRETURN;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:86   
     2226    17212        /**/
     2227    17213    2   E_BADMODE: ;                            /* Function not applicable this mode  */
     2228    17214    2       XUE_ECB.ERR = E_BADMODE;
     2229    17215    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     2230    17216    2       ALTRETURN;
     2231    17217        /**/
     2232    17218    2   E_REDUCE:
     2233    17219    2       ALTRETURN;
     2234    17220        /**/
     2235    17221    2   E_PMME:
     2236    17222    2       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;
     2237    17223    2       XUE_ECB.ERR_DCB# = B$TCB.ALT$ -> B$ALT.DCB#;
     2238    17224    2       ALTRETURN;
     2239    17225        /**/
     2240    17226    2   E_ALLOCATE:
     2241    17227    2       XUE_ECB.ERR = MCB.ERR;
     2242    17228    2       ALTRETURN;
     2243    17229        /**/
     2244    17230    2   E_DEC:
     2245    17231    2       XUE_ECB.ERR = E_NONDECIMAL;
     2246    17232    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
     2247    17233    2       ALTRETURN;
     2248    17234        /**/
     2249    17235    2   E_DEC1:
     2250    17236    2       XUE_ECB.ERR = E_NONDECIMAL;
     2251    17237    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR-1);
     2252    17238    2       ALTRETURN;
     2253    17239        /**/
     2254    17240    2   E_OVERFLOW:
     2255    17241    2       XUE_ECB.ERR = E_OFLOWFLT;
     2256    17242    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR-1);
     2257    17243    2       ALTRETURN;
     2258    17244    2   END REDUCE;
     2259    17245        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:87   
     2260    17246    1   PROCESS_USER_FUNCTIONS: PROC (PTR$) ALTRET;
     2261    17247        /*F*    NAME:          PROCESS_USER_FUNCTIONS
     2262    17248                PURPOSE:       Interfaces XUE$EVAL with user supplied routines.
     2263    17249                DESCRIPTION:   This routine creates the parameter
     2264    17250                               (XUE$FUNPARAM) specified by the user syntax
     2265    17251                               and calls the user supplied routine to
     2266    17252                               handle USER DEFINED FUNCTIONS.
     2267    17253        */
     2268    17254        /***** Parameters *****/
     2269    17255    2   DCL PTR$ PTR;
     2270    17256        /***** Local variables *****/
     2271    17257    2   DCL INDX SBIN WORD AUTO;
     2272    17258    2   DCL NARGS SBIN WORD AUTO;
     2273    17259    2   DCL PARAM$ PTR AUTO;
     2274    17260    2   DCL P$ PTR AUTO;
     2275    17261    2   DCL OPTION$ PTR AUTO;
     2276    17262    2   DCL TEMP_ADDR$ PTR AUTO;
     2277    17263        /***** Based Structures *****/
     2278    17264          %XUE_FUNPARAM (NAME=XUE$FUNPARAM,STCLASS=BASED);
     2279    17368          %XUE_OPTION (NAME=XUE$OPTION,STCLASS=BASED);
     2280    17424
     2281    17425        /*
     2282    17426             ***** Make sure that user supplied FUN$$ routine ...
     2283    17427        */
     2284    17428    2       IF XUE_ECB.FUN$$ = ENTADDR(NIL)
     2285    17429    2       THEN   /* Wrong! */
     2286    17430    3       DO;
     2287    17431    3           XUE_ECB.ERR = E_NULLFUN$$;
     2288    17432    3           ALTRETURN;
     2289    17433    3       END;
     2290    17434        /*
     2291    17435             ***** Allocate space for XUE$FUNPARAM ...
     2292    17436        */
     2293    17437    2       NARGS = PTR$ -> P$B.NSUBLKS;
     2294    17438    2       MCB.SIZE = SIZEC(XUE$FUNPARAM) + ((NARGS-1)*4 /* Convert to bytes*/);
     2295    17439    2       CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2296    17440    2       PARAM$ = MCB.ADDRESS$;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:88   
     2297    17441    2       PARAM$ -> XUE$FUNPARAM.CODE# = PTR$ -> P$B.CODE;
     2298    17442    2       PARAM$ -> XUE$FUNPARAM.CPOS# = PTR$ -> P$B.CPOS;
     2299    17443    2       PARAM$ -> XUE$FUNPARAM.ERR_POS# = 0;
     2300    17444    2       PARAM$ -> XUE$FUNPARAM.ERR_DCB# = 0;
     2301    17445    2       PARAM$ -> XUE$FUNPARAM.ERR = '0'B;
     2302    17446    2       PARAM$ -> XUE$FUNPARAM.NOPTS# = NARGS;
     2303    17447        /*
     2304    17448             ***** Allocate 512 bytes for RESULT$ ...
     2305    17449        */
     2306    17450    2       MCB.SIZE = 512; /* 511 bytes TEXT + 1 byte COUNT */
     2307    17451    2       CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2308    17452    2       PARAM$ -> XUE$FUNPARAM.OUT$ = MCB.ADDRESS$;
     2309    17453    2       MCB.ADDRESS$ -> X$STRING.SIZ = 511;
     2310    17454    2       MCB.ADDRESS$ -> X$STRING.TEXT = ' ';
     2311    17455        /*
     2312    17456             ***** Process the parameters for this USER DEFINED FUNCTION ...
     2313    17457        */
     2314    17458    3       DO INDX = 0 TO NARGS - 1;
     2315    17459    3           P$ = PTR$ -> P$B.SUBLK$(INDX);
     2316    17460        /*
     2317    17461             ***** Evaluate XUE_VALUE or XUE_PARAMETER, if any ...
     2318    17462        */
     2319    17463    3           IF P$ -> P$B.NSUBLKS > 0
     2320    17464    4           THEN DO;
     2321    17465    4               CALL X$EVALUATE (P$,XUE_ECB,MCB) ALTRET(E_PROCESS);
     2322    17466        /*
     2323    17467             ***** Allocate an XUE_OPTION block ...
     2324    17468        */
     2325    17469    4               MCB.SIZE = 8 /*SIZEC(XUE$OPTION)*/ +
     2326    17470    4                 (XUE_ECB.OUT$ -> X$STRING.SIZ + 1);
     2327    17471    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2328    17472        /*
     2329    17473             ***** Move the value into the block ...
     2330    17474        */
     2331    17475    4               MCB.ADDRESS$ -> XUE$OPTION.COUNT# = XUE_ECB.OUT$ -> X$STRING.SIZ;
     2332    17476    4               MCB.ADDRESS$ -> XUE$OPTION.TEXT# = XUE_ECB.OUT$ -> X$STRING.TEXT;
     2333    17477        /*
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:89   
     2334    17478             ***** Reclaim the RESULT$ area ...
     2335    17479        */
     2336    17480    4               TEMP_ADDR$ = MCB.ADDRESS$;
     2337    17481    4               MCB.ADDRESS$ = XUE_ECB.OUT$;
     2338    17482    4               CALL X$DEALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2339    17483    4               MCB.ADDRESS$ = TEMP_ADDR$;
     2340    17484    4           END;
     2341    17485        /*
     2342    17486             ***** Otherwise set up valueless XUE$OPTION block ...
     2343    17487        */
     2344    17488    4           ELSE DO;
     2345    17489    4               MCB.SIZE = 8;
     2346    17490    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2347    17491    4               MCB.ADDRESS$ -> XUE$OPTION.COUNT# = 0;
     2348    17492    4           END;
     2349    17493        /*
     2350    17494             ***** Fill in common XUE_OPTION fields .....
     2351    17495        */
     2352    17496    3           MCB.ADDRESS$ -> XUE$OPTION.CODE# = P$ -> P$B.CODE;
     2353    17497    3           MCB.ADDRESS$ -> XUE$OPTION.CPOS# = P$ -> P$S.CPOS;
     2354    17498    3           PARAM$ -> XUE$FUNPARAM.OPTION$(INDX) = MCB.ADDRESS$;
     2355    17499    3       END; /* Do index ... end */
     2356    17500    2       CALL XUE_ECB.FUN$$ (PARAM$ -> XUE$FUNPARAM) ALTRET(E_FUN$$);
     2357    17501        /*
     2358    17502             ***** Push the value of the function onto VAL_STACK$ ...
     2359    17503        */
     2360    17504    2       CALL X$STRIP_BLANKS (PARAM$ -> XUE$FUNPARAM.OUT$);
     2361    17505          %PUSH_VALUE (VALUE="PARAM$ -> XUE$FUNPARAM.OUT$",TYPE=%XUE_UNKNOWN#);
     2362    17521        /*
     2363    17522             ***** Deallocate XUE$FUNPARAM and associated XUE$OPTIONs ...
     2364    17523        */
     2365    17524    3       DO INDX = 0 TO NARGS - 1;
     2366    17525    3           MCB.ADDRESS$ = PARAM$ -> XUE$FUNPARAM.OPTION$(INDX);
     2367    17526    3           CALL X$DEALLOCATE (MCB) ALTRET(E_ALLOCATE);
     2368    17527    3       END; /* Do index ... end */
     2369    17528    2       MCB.ADDRESS$ = PARAM$;
     2370    17529    2       CALL X$DEALLOCATE (MCB) ALTRET(E_ALLOCATE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:90   
     2371    17530    2       RETURN;
     2372    17531        /**/
     2373    17532    2   E_FUN$$:
     2374    17533    2       XUE_ECB.ERR = PARAM$ -> XUE$FUNPARAM.ERR;
     2375    17534    2       XUE_ECB.ERR_POS# = PARAM$ -> XUE$FUNPARAM.ERR_POS#;
     2376    17535    2       XUE_ECB.ERR_DCB# = PARAM$ -> XUE$FUNPARAM.ERR_DCB#;
     2377    17536    2       ALTRETURN;
     2378    17537        /**/
     2379    17538    2   E_ALLOCATE:
     2380    17539    2       XUE_ECB.ERR = MCB.ERR;
     2381    17540    2       ALTRETURN;
     2382    17541        /**/
     2383    17542    2   E_PROCESS:
     2384    17543    2       ALTRETURN;
     2385    17544    2   END PROCESS_USER_FUNCTIONS;
     2386    17545        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:91   
     2387    17546        /*
     2388    17547             ***** Main routine for evaluating expressions.
     2389    17548                   Handles stacking/reduction decisions and
     2390    17549                   calls such routines as needed to perform
     2391    17550                   REDUCTION and LEXICAL ANALYSIS.
     2392    17551                   This routine is called recursively...
     2393    17552        */
     2394    17553    1       XUE_ECB.RESULTS = %NO#;
     2395    17554    1       OP_PTR = 0;
     2396    17555    1       VAL_PTR = -1;
     2397    17556    1       OP_STACK(0) = %XUE_BEGIN_MARKER#;
     2398    17557    1       TOKEN_INDX = -1;
     2399    17558        /*
     2400    17559             ***** Get the first TOKEN to start processing ...
     2401    17560        */
     2402    17561    1       CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);
     2403    17562        /*
     2404    17563             ***** MAIN LOOP...
     2405    17564                   Loop here while there are operators to process...
     2406    17565        */
     2407    17566    2       DO WHILE (%YES#);
     2408    17567    3           DO CASE (TOKEN);
     2409    17568    3           CASE (%XUE_DECIMAL#,
     2410    17569    3             %XUE_EXP#,
     2411    17570    3             %XUE_QUOTE#,
     2412    17571    3             %XUE_VAR#);
     2413    17572                   %PUSH_VALUE (TYPE=TOKEN);
     2414    17588    3               CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);
     2415    17589    3           CASE (%XUE_END_MARKER#);
     2416    17590    4               DO WHILE (%YES#);
     2417    17591    4                   IF OP_STACK(OP_PTR) = %XUE_BEGIN_MARKER#
     2418    17592    4                   THEN
     2419    17593    5                   DO;
     2420    17594    5                       XUE_ECB.OUT$ = VAL_STACK$(VAL_PTR);
     2421    17595    5                       RETURN;
     2422    17596    5                   END;
     2423    17597    4                   ELSE
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:92   
     2424    17598    4                       CALL REDUCE ALTRET(E_EVAL);
     2425    17599    4               END;                        /* Shrink stacks loop                 */
     2426    17600    3           CASE (%XUE_PLUS#,
     2427    17601    3                 %XUE_MINUS#,
     2428    17602    3                 %XUE_MULTIPLY#,
     2429    17603    3                 %XUE_DIVIDE#,
     2430    17604    3                 %XUE_CONCAT#,
     2431    17605    3                 %XUE_EQUAL#,
     2432    17606    3                 %XUE_NEQUAL#,
     2433    17607    3                 %XUE_GTHAN#,
     2434    17608    3                 %XUE_GEQUAL#,
     2435    17609    3                 %XUE_LTHAN#,
     2436    17610    3                 %XUE_LEQUAL#,
     2437    17611    3                 %XUE_AND#,
     2438    17612    3                 %XUE_OR#,
     2439    17613    3                 %XUE_U_PLUS#,
     2440    17614    3                 %XUE_U_MINUS#,
     2441    17615    3                 %XUE_U_NOT#,
     2442    17616    3                 %XUE_WEQ_LPAT#,
     2443    17617    3                 %XUE_WEQ_RPAT#,
     2444    17618    3                 %XUE_WCN_LPAT#,
     2445    17619    3                 %XUE_WCN_RPAT#,
     2446    17620    3                 %XUE_OPSPARE1#,
     2447    17621    3                 %XUE_OPSPARE2#,
     2448    17622    3                 %XUE_OPSPARE3#);
     2449    17623    3               MORE# = '1'B;
     2450    17624    4               DO WHILE (MORE#);
     2451    17625        /*
     2452    17626             ***** Decide whether to STACK or REDUCE ...
     2453    17627        */
     2454    17628    4                   IF FUNC.PREC(TOKEN) > FUNC.PREC(OP_STACK(OP_PTR))
     2455    17629    4                   THEN
     2456    17630    5                   DO;
     2457    17631    5                       NUM_TO_POP = FUNC.NTP(TOKEN);
     2458    17632                               %PUSH_OPERATOR (NARGS=NUM_TO_POP);
     2459    17647    5                       MORE# = '0'B;
     2460    17648    5                       CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:93   
     2461    17649    5                   END;
     2462    17650    4                   ELSE                   /* Reduce                             */
     2463    17651    4                       CALL REDUCE ALTRET(E_EVAL);
     2464    17652    4               END;  /* Do while (MORE#) ... end */
     2465    17653    3           CASE (%XUE_USER_FUNCTIONS);
     2466    17654        /*
     2467    17655             ***** USER DEFINED FUNCTIONS ...
     2468    17656        */
     2469    17657    3               CALL PROCESS_USER_FUNCTIONS (TOKEN_PTR$ ->
     2470    17658    3                 P$B.SUBLK$(0)) ALTRET(E_EVAL);
     2471    17659    3               CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);
     2472    17660    3           CASE (ELSE);
     2473    17661        /*
     2474    17662             ***** BUILT-IN FUNCTIONS ...
     2475    17663        */
     2476    17664    3               MORE# = '1'B;
     2477    17665    4               DO WHILE (MORE#);
     2478    17666        /*
     2479    17667             ***** If this is a FUNCTION with arguments,
     2480    17668                   then get those args onto the VAL_STACK$ ...
     2481    17669        */
     2482    17670    4                   NUM_ARGS = 0;
     2483    17671    4                   NUM_TO_POP = FUNC.NTP(TOKEN);
     2484    17672    4                   IF NUM_TO_POP > 0
     2485    17673    4                   THEN              /* Get the arguments for this FUNCTION     */
     2486    17674    4                       CALL GET_ARGS (NUM_ARGS) ALTRET(E_EVAL);
     2487    17675        /*
     2488    17676             ***** Since FUNCTIONS have the highest precidence,
     2489    17677                   they are always applied as soon as found ...
     2490    17678        */
     2491    17679                      %PUSH_OPERATOR (NARGS="NUM_ARGS");
     2492    17694    4                   MORE# = '0'B;
     2493    17695    4                   CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);
     2494    17696    4               END;  /* Do while (MORE#) ... end */
     2495    17697    3           END; /* Do case ... end */
     2496    17698    2       END; /* Do while (YES) ... end */
     2497    17699    1   E_EVAL:
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:94   
     2498    17700    1       ALTRETURN;
     2499    17701    1   END X$EVALUATE;
     2500    17702        %EOD;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:95   
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   FM$FIT.:E05TOU  is referenced.
   XUW_MACRO_C.:E05TOU  is referenced.
   XUE_SUBS_C.:E05TOU  is referenced.
   XUE_MACRO_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X$EVALUATE.

   Procedure X$EVALUATE requires 4417 words for executable code.
   Procedure X$EVALUATE requires 686 words of local(AUTO) storage.

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:96   

 Object Unit name= X$EVALUATE                                 File name= XUE$EVAL.:E05TOU
 UTS= JUL 30 '97 09:12:55.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    622   1156  X$EVALUATE
    2   Proc  even  none  4417  10501  X$EVALUATE
    3  RoData even  none    36     44  X$EVALUATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        3  X$EVALUATE
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:97   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
 yes     yes           Std       5 X$GET_VAR
 yes     yes           Std       1 X$ALLOCATE
 yes     yes           Std       2 X$DEC_CONVERT
 yes     yes           Std       1 X$DEALLOCATE
 yes     yes           Std       4 X$WILDTCMP
 yes     yes           Std       5 X$PUT_VAR
         yes           Std       1 X$STRIP_BLANKS
 yes     yes           Std       2 XSF$LOCCODP
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_INDEX
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                                B$TCB$
r    B$XL_UPPER$                      r    B$XL_LOWER$                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:98   


       84        1        /*T***********************************************************/
       85        2        /*T*                                                         */
       86        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       87        4        /*T*                                                         */
       88        5        /*T***********************************************************/
       89        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
       90        7        /*F*    NAME:          X$EVALUATE
       91        8                PURPOSE:       To evaluate IBEX-type expressions.
       92        9                DESCRIPTION:   This RECURSIVE routine uses operator
       93       10                               precedence to parse expressions.
       94       11                               It is called initially by X$EVAL which
       95       12                               performs all setup required for this
       96       13                               routine.
       97       14        */
       98       15        X$EVALUATE: PROC (TREE$,XUE_ECB,MCB) ALTRET;

     15  2 000000   000000 700200 xent  X$EVALUATE   TSX0  ! X66_AUTO_3
         2 000001   001256 000003                    ZERO    686,3
         2 000002   010032 710000 2                  TRA     s:17553

       99       16        /***** Include Files *****/
      100       17          %INCLUDE B$JIT;
      101      620          %INCLUDE B_MACROS_C;
      102      731          %INCLUDE CP_6;
      103     6290          %INCLUDE CP_6_SUBS;
      104     6830          %INCLUDE B_ERRORS_C;
      105     7957          %INCLUDE XU_MACRO_C;
      106    11063          %INCLUDE XU_PERR_C;
      107    11254          %INCLUDE XUM_MACRO_C;
      108    11281          %INCLUDE NK_VFC_C;
      109    11355          %INCLUDE XUE_MACRO_C;
      110    12099          %INCLUDE XUE_SUBS_C;
      111    12279          %INCLUDE XUW_MACRO_C;
      112    12414          %INCLUDE FM$FIT;
      113    12635          %INCLUDE B$TABLES_C;
      114    12743        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:99   
      115    12744        /***** Parameters *****/
      116    12745          %XUE_ECB (NAME=XUE_ECB,STCLASS=" ");
      117    12947          %XUM$MCB (NAME=MCB,STCLASS=" ");
      118    12951        /***** Symref Variables ******/
      119    12952    1   DCL B$JIT$ PTR SYMREF;
      120    12953    1   DCL B$TCB$ PTR SYMREF;
      121    12954        /***** Based Structures *****/
      122    12955          %PARSE$OUT (NAME=P$B,STCLASS=BASED);
      123    13000          %PARSE$SYM (NAME=P$S,STCLASS=BASED);
      124    13038          %B$TCB (STCLASS="BASED(B$TCB$)");
      125    13041          %B$ALT;
      126    13049          %F$DCB;
      127    13106          %TEXTC (NAME=X$STRING,STCLASS=BASED);
      128    13111    1   DCL 1 U$STRING BASED ALIGNED,
      129    13112    1         2 SIZ UBIN BYTE UNAL,
      130    13113    1         2 TEXT (0:0) UBIN BYTE UNAL;
      131    13114          %CODE03;                              /* FIT structure                      */
      132    13121        /***** Auto Structures *****/
      133    13122    1   DCL 1 KEYIN_RESULTS ALIGNED AUTO,
      134    13123    1         2 TYC UBIN WORD,
      135    13124    1         2 ARS# UBIN WORD;
      136    13125        /***** Ptr Variables *****/
      137    13126    1   DCL TREE$ PTR;
      138    13127    1   DCL VALUE$ PTR AUTO;
      139    13128    1   DCL TOKEN_PTR$ PTR AUTO;
      140    13129    1   DCL TEMP$ PTR;
      141    13130        /***** Vectors *****/
      142    13131    1   DCL FPARAM_VECTOR VECTOR;
      143    13132        /***** Word/array variables *****/
      144    13133    1   DCL MORE# BIT(1) AUTO;
      145    13134    1   DCL TBIT BIT(1);                      /* TEMP                               */
      146    13135    1   DCL CHARPOS UBIN WORD AUTO;
      147    13136    1   DCL OP_PTR SBIN WORD AUTO;
      148    13137    1   DCL VAL_PTR SBIN WORD AUTO;
      149    13138    1   DCL NUM_ARGS SBIN WORD AUTO;
      150    13139    1   DCL TOKEN_INDX SBIN WORD AUTO;
      151    13140    1   DCL TOKEN UBIN WORD AUTO;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:100  
      152    13141    1   DCL TEMP SBIN;
      153    13142    1   DCL TEMP3 SBIN;
      154    13143    1   DCL NUM_TO_POP SBIN;
      155    13144    1   DCL SAVE_PROMPT CHAR(31) AUTO;
      156    13145        /***** Stacks *****/
      157    13146    1   DCL OP_STACK (0:%XUE_STACK_SIZE) UBIN BYTE UNAL AUTO;
      158    13147    1   DCL NUM_TO_POP_STACK (0:%XUE_STACK_SIZE) UBIN BYTE UNAL AUTO;
      159    13148    1   DCL VAL_STACK$ (0:%(XUE_STACK_SIZE*2)) PTR AUTO;
      160    13149    1   DCL VAL_TYPE (0:%(XUE_STACK_SIZE*2)) UBIN BYTE UNAL AUTO;
      161    13150    1   DCL CHARPOS_STACK (0:%(XUE_STACK_SIZE*2)) UBIN HALF UNAL AUTO;
      162    13151        /***** Constants *****/
      163    13152    1   DCL ZERO$ PTR CONSTANT INIT (ADDR(ZERO));
      164    13153    1   DCL 1  ZERO CONSTANT,
      165    13154    1         2  COUNT UBIN BYTE UNAL INIT (1),
      166    13155    1         2  TEXT CHAR(1) UNAL INIT('0');
      167    13156    1   DCL ONE$ PTR CONSTANT INIT (ADDR(ONE));
      168    13157    1   DCL 1  ONE CONSTANT,
      169    13158    1         2  COUNT UBIN BYTE UNAL INIT (1),
      170    13159    1         2  TEXT CHAR(1) UNAL INIT('1');
      171    13160    1   DCL YES$ PTR CONSTANT INIT (ADDR(YES));
      172    13161    1   DCL 1  YES CONSTANT,
      173    13162    1         2  COUNT UBIN BYTE UNAL INIT (3),
      174    13163    1         2  TEXT CHAR(3) UNAL INIT('YES');
      175    13164    1   DCL NO$ PTR CONSTANT INIT (ADDR(NO));
      176    13165    1   DCL 1  NO CONSTANT,
      177    13166    1         2  COUNT UBIN BYTE UNAL INIT (2),
      178    13167    1         2  TEXT CHAR(3) UNAL INIT('NO');
      179    13168    1   DCL EOF_NAME$ PTR CONSTANT INIT (ADDR(EOF_NAME));
      180    13169    1   DCL 1  EOF_NAME CONSTANT,
      181    13170    1         2  COUNT UBIN BYTE UNAL INIT(4),
      182    13171    1         2  TEXT CHAR(4) UNAL INIT ('$EOF');
      183    13172    1   DCL 1  PROMPT_VFC CONSTANT,
      184    13173    1         2  TEXT CHAR(1) INIT (%BITASC('140'O));
      185    13174    1   DCL 1  SAME_LINE CONSTANT,
      186    13175    1         2  TEXT CHAR(1) INIT (%BITASC('100'O));
      187    13176        /***** Conversion Tables *****/
      188    13177        %EQU TOP_ASN# = 8;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:101  
      189    13178    1   DCL 1 ASN_TBL (0:%TOP_ASN#) CONSTANT,
      190    13179    1         2 CODE UBIN BYTE CALIGNED INIT(
      191    13180    1           0,                              /* ??? NOT IN TABLE ???               */
      192    13181    1           %FILE#,                         /* FILE                               */
      193    13182    1           %TAPE#,                         /* TAPE                               */
      194    13183    1           %DEVICE#,                       /* DEVICE                             */
      195    13184    1           %COMGROUP#,                     /* COMGROUP                           */
      196    13185    1           %STREAM#,                       /* STREAM                             */
      197    13186    1           %T@D#,                          /* T@D                                */
      198    13187    1           %FMDIAG#,                       /* FMDIAG                             */
      199    13188    1           %FPRGIASN#),                    /* FPRGIASN                           */
      200    13189    1         2 TEXT CHAR(8) CALIGNED INIT(
      201    13190    1           '???     ',                     /* ??? NOT IN TABLE ???               */
      202    13191    1           'FILE    ',                     /* FILE                               */
      203    13192    1           'TAPE    ',                     /* TAPE                               */
      204    13193    1           'DEVICE  ',                     /* DEVICE                             */
      205    13194    1           'COMGROUP',                     /* COMGROUP                           */
      206    13195    1           'STREAM  ',                     /* STREAM                             */
      207    13196    1           'T@D     ',                     /* T@D                                */
      208    13197    1           'FMDIAG  ',                     /* FMDIAG                             */
      209    13198    1           'FPRGIASN'),                    /* FPRGIASN                           */
      210    13199    1         2 C UBIN BYTE CALIGNED INIT(
      211    13200    1           3,                              /* ??? NOT IN TABLE ???               */
      212    13201    1           4,                              /* FILE                               */
      213    13202    1           4,                              /* TAPE                               */
      214    13203    1           6,                              /* DEVICE                             */
      215    13204    1           8,                              /* COMGROUP                           */
      216    13205    1           6,                              /* STREAM                             */
      217    13206    1           3,                              /* T@D                                */
      218    13207    1           6,                              /* FMDIAG                             */
      219    13208    1           8);                             /* FPRGIASN                           */
      220    13209        %EQU TOP_ORG# = 15;
      221    13210    1   DCL 1 ORG_TBL (0:%TOP_ORG#) CONSTANT,
      222    13211    1         2 CODE UBIN BYTE CALIGNED INIT(
      223    13212    1           0,                              /* ??? NOT IN TABLE ???               */
      224    13213    1           %CONSEC#,                       /* CONSEC                             */
      225    13214    1           %KEYED#,                        /* KEYED                              */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:102  
      226    13215    1           %RANDOM#,                       /* RANDOM                             */
      227    13216    1           %UR#,                           /* UR                                 */
      228    13217    1           %RELATIVE#,                     /* RELATIVE                           */
      229    13218    1           %INDEXED#,                      /* INDEXED                            */
      230    13219    1           %IDS#,                          /* IDS                                */
      231    13220    1           %SYMB#,                         /* SYMB                               */
      232    13221    1           %CG#,                           /* CG                                 */
      233    13222    1           %IREL#,                         /* IREL                               */
      234    13223    1           %RESTRICT#,                     /* RESTRICT                           */
      235    13224    1           %FIXED#,                        /* FIXED                              */
      236    13225    1           %VARIABLE#,                     /* VARIABLE                           */
      237    13226    1           %UNDEF#,                        /* UNDEF                              */
      238    13227    1           %FREE#),                        /* FREE                               */
      239    13228    1         2 TEXT CHAR(8) CALIGNED INIT(
      240    13229    1           '???     ',                     /* ??? NOT IN TABLE ???               */
      241    13230    1           'CONSEC  ',                     /* CONSEC                             */
      242    13231    1           'KEYED   ',                     /* KEYED                              */
      243    13232    1           'RANDOM  ',                     /* RANDOM                             */
      244    13233    1           'UR      ',                     /* UR                                 */
      245    13234    1           'RELATIVE',                     /* RELATIVE                           */
      246    13235    1           'INDEXED ',                     /* INDEXED                            */
      247    13236    1           'IDS     ',                     /* IDS                                */
      248    13237    1           'SYMB    ',                     /* SYMB                               */
      249    13238    1           'CG      ',                     /* CG                                 */
      250    13239    1           'IREL    ',                     /* IREL                               */
      251    13240    1           'RESTRICT',                     /* RESTRICT                           */
      252    13241    1           'FIXED   ',                     /* FIXED                              */
      253    13242    1           'VARIABLE',                     /* VARIABLE                           */
      254    13243    1           'UNDEF   ',                     /* UNDEF                              */
      255    13244    1           'FREE    '),                    /* FREE                               */
      256    13245    1         2 C UBIN BYTE CALIGNED INIT(
      257    13246    1           3,                              /* ??? NOT IN TABLE ???               */
      258    13247    1           6,                              /* CONSEC                             */
      259    13248    1           5,                              /* KEYED                              */
      260    13249    1           6,                              /* RANDOM                             */
      261    13250    1           2,                              /* UR                                 */
      262    13251    1           8,                              /* RELATIVE                           */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:103  
      263    13252    1           7,                              /* INDEXED                            */
      264    13253    1           3,                              /* IDS                                */
      265    13254    1           4,                              /* SYMB                               */
      266    13255    1           2,                              /* CG                                 */
      267    13256    1           4,                              /* IREL                               */
      268    13257    1           8,                              /* RESTRICT                           */
      269    13258    1           5,                              /* FIXED                              */
      270    13259    1           8,                              /* VARIABLE                           */
      271    13260    1           5,                              /* UNDEF                              */
      272    13261    1           4);                             /* FREE                               */
      273    13262    1   DCL 1 PRIV (0:%(XUE_NUM_PRIVS-1)) CONSTANT,
      274    13263    1         2 MASK BIT(36) INIT(
      275    13264    1              %PR_ASAVE#,                  /* ASAVE                              */
      276    13265    1              %PR_CFEP#,                   /* CFEP                               */
      277    13266    1              %PR_DISPJOB#,                /* DISPJOB                            */
      278    13267    1              %PR_EXMM#,                   /* EXMM                               */
      279    13268    1              %PR_EXPM#,                   /* EXPM                               */
      280    13269    1              %PR_FMDIAG#,                 /* FMDIAG                             */
      281    13270    1              %PR_FMREAD#,                 /* FMREAD                             */
      282    13271    1              %PR_FMSEC#,                  /* FMSEC                              */
      283    13272    1              %PR_GPP#,                    /* GPP                                */
      284    13273    1              %PR_IOQ#,                    /* IOQ                                */
      285    13274    1              %PR_IOQW#,                   /* IOQW                               */
      286    13275    1              %PR_JIT#,                    /* JIT                                */
      287    13276    1              %PR_MAXMEM#,                 /* MAXMEM                             */
      288    13277    1              %PR_MFEP#,                   /* MFEP                               */
      289    13278    1              %PR_PM#,                     /* PM                                 */
      290    13279    1              %PR_SPCLMM#,                 /* SPCLMM                             */
      291    13280    1              %PR_SYSCON#,                 /* SYSCON                             */
      292    13281    1              %PR_SYSLOG#,                 /* SYSLOG                             */
      293    13282    1              %PR_TND#);                   /* TND                                */
      294    13283        /*  LINE-SPEED CODE TO ACTUAL SPEED IN B.P.S.  */
      295    13284    1   DCL SPEED_TBL (0:15) UBIN(18) HALIGNED CONSTANT INIT(
      296    13285    1            50,                            /* 00                                 */
      297    13286    1            75,                            /* 01                                 */
      298    13287    1           110,                            /* 02                                 */
      299    13288    1           134,                            /* 03                                 */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:104  
      300    13289    1           150,                            /* 04                                 */
      301    13290    1           200,                            /* 05                                 */
      302    13291    1           300,                            /* 06                                 */
      303    13292    1           600,                            /* 07                                 */
      304    13293    1          1050,                            /* 08                                 */
      305    13294    1          1200,                            /* 09                                 */
      306    13295    1          1800,                            /* 10                                 */
      307    13296    1          2000,                            /* 11                                 */
      308    13297    1          2400,                            /* 12                                 */
      309    13298    1          4800,                            /* 13                                 */
      310    13299    1          9600,                            /* 14                                 */
      311    13300    1         19200);                           /* 15                                 */
      312    13301        /***** External Routines *****/
      313    13302          %XUE_ENTRIES (OMIT=X$EVALUATE);
      314    13326          %XUM_ENTRIES;
      315    13334          %XUW_ENTRIES;
      316    13346    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
      317    13347        /***** Auto Fpts *****/
      318    13348          %FPT_KEYIN (FPTN=FPT_KEYIN,STCLASS=AUTO);
      319    13367          %FPT_MONINFO (FPTN=FPT_MONINFO,STCLASS=AUTO);
      320    13382          %FPT_PROMPT (FPTN=FPT_PROMPT,STCLASS=AUTO);
      321    13410          %FPT_PROMPT (FPTN=FPT_SAVE_PROMPT,STCLASS=AUTO);
      322    13438          %FPT_READ (FPTN=FPT_READ,STCLASS=AUTO);
      323    13477          %FPT_SINPUT (FPTN=FPT_SINPUT,STCLASS=AUTO);
      324    13514          %FPT_TIME (FPTN=FPT_TIME,STCLASS=AUTO);
      325    13533          %FPT_WRITE (FPTN=FPT_WRITE,STCLASS=AUTO);
      326    13564          %FPT_GLINEATTR (FPTN=FPT_GLINEATTR,STCLASS=AUTO);
      327    13589          %VLP_LINEATTR (FPTN=VLP_LINEATTR,STCLASS=AUTO);
      328    13611          %VLR_SITEINFO (FPTN=VLR_SITEINFO,STCLASS=AUTO);
      329    13630        /***** Constant Fpts *****/
      330    13631          %FPT_KEYIN (FPTN=CFPT_KEYIN,STCLASS=CONSTANT);
      331    13650          %FPT_MONINFO (FPTN=CFPT_MONINFO,STCLASS=CONSTANT);
      332    13665          %FPT_PROMPT (FPTN=CFPT_PROMPT,STCLASS=CONSTANT);
      333    13693          %FPT_READ (FPTN=CFPT_READ,STCLASS=CONSTANT);
      334    13732          %FPT_TIME (FPTN=CFPT_TIME,STCLASS=CONSTANT);
      335    13751          %FPT_WRITE (FPTN=CFPT_WRITE,STCLASS=CONSTANT);
      336    13782          %FPT_FID (FPTN=CFPT_FID,STCLASS=CONSTANT);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:105  
      337    13805          %FPT_SINPUT (FPTN=CFPT_SINPUT,STCLASS=CONSTANT);
      338    13842          %FPT_OPEN (FPTN=CFPT_OPEN,STCLASS=CONSTANT);
      339    13951          %FPT_GLINEATTR (FPTN=CFPT_GLINEATTR,STCLASS=CONSTANT);
      340    13976        /***** Auto for FID parts *****/
      341    13977          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
      342    13996          %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
      343    14023          %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
      344    14036          %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
      345    14049          %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
      346    14062          %VLP_SN (FPTN=FID_SN,N=3,STCLASS=AUTO);
      347    14075    1   DCL FID_ASN UBIN BYTE AUTO;
      348    14076    1   DCL FID_RES CHAR(4) AUTO;
      349    14077        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:106  
      350    14078        /***** Macros *****/
      351    14079          %MACRO ERR_CODE (NAME=JUNK,CODE=0,SEV=0);
      352    14080            %VLP_ERRCODE (FPTN=NAME,
      353    14081                          FCG="XU",
      354    14082                          MID="E",
      355    14083                          ERR#=CODE,
      356    14084                          STCLASS=CONSTANT);
      357    14085          %MEND;
      358    14086        /**/
      359    14087          %MACRO PUSH_VALUE (VALUE=VALUE$,TYPE=NIL_IS_BUG,CPOS=CHARPOS);
      360    14088            VAL_PTR = VAL_PTR + 1;
      361    14089            IF VAL_PTR > %XUE_STACK_SIZE
      362    14090            THEN
      363    14091            DO;   /* Return error */
      364    14092                XUE_ECB.ERR = E_STKOVFL;
      365    14093                XUE_ECB.ERR_POS# = CHARPOS;
      366    14094                ALTRETURN;
      367    14095            END;
      368    14096            ELSE
      369    14097            DO;   /* Stash VALUE, VAL_TYPE and CHARPOS */
      370    14098                VAL_STACK$(VAL_PTR) = VALUE;
      371    14099                VAL_TYPE(VAL_PTR) = TYPE;
      372    14100                CHARPOS_STACK(VAL_PTR) = CPOS;
      373    14101            END;
      374    14102          %MEND;
      375    14103        /**/
      376    14104        %MACRO PUSH_OPERATOR (NARGS=0);
      377    14105            OP_PTR = OP_PTR + 1;
      378    14106            IF OP_PTR > %XUE_STACK_SIZE
      379    14107            THEN
      380    14108            DO;   /* Return error */
      381    14109                XUE_ECB.ERR = E_STKOVFL;
      382    14110                XUE_ECB.ERR_POS# = CHARPOS;
      383    14111                ALTRETURN;
      384    14112            END;
      385    14113            ELSE
      386    14114            DO;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:107  
      387    14115                OP_STACK(OP_PTR) = TOKEN;
      388    14116                NUM_TO_POP_STACK(OP_PTR) = NARGS;
      389    14117            END;
      390    14118        %MEND;
      391    14119        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:108  
      392    14120        /***** Error Codes *****/
      393    14121          %ERR_CODE (NAME=E_STKOVFL,CODE=%E$XUE#STKOVFL);
      394    14172          /*E*    ERROR: XUE-E$XUE#STKOVFL-0
      395    14173                  MESSAGE: Stack overflow. Expression too complex.
      396    14174                  MESSAGE1: Grouping with extra parenthesis may help.
      397    14175          */
      398    14176          %ERR_CODE (NAME=E_BIGSTR,CODE=%E$XUE#BIGSTR);
      399    14227          /*E*    ERROR: XUE-E$XUE#BIGSTR-0
      400    14228               MESSAGE: Index specified is not within bounds of string.
      401    14229          */
      402    14230          %ERR_CODE (NAME=E_ILLINDEX,CODE=%E$XUE#ILLINDEX);
      403    14281          /*E*    ERROR: XUE-E$XUE#ILLINDEX-0
      404    14282                  MESSAGE: Starting index greater than ending index.
      405    14283          */
      406    14284          %ERR_CODE (NAME=E_MSGTOOLONG,CODE=%E$XUE#MSGTOOLONG);
      407    14335          /*E*    ERROR: XUE-E$XUE#MSGTOOLONG-0
      408    14336                  MESSAGE: Message to console must be 110 chars or less.
      409    14337          */
      410    14338          %ERR_CODE (NAME=E_ILLINPUT,CODE=%E$XUE#ILLINPUT);
      411    14389          /*E*    ERROR: XUE-E$XUE#ILLINPUT-0
      412    14390                  MESSAGE: Garbage characters before/after QUOTES.
      413    14391          */
      414    14392          %ERR_CODE (NAME=E_ILLQUOTE,CODE=%E$XUE#ILLQUOTE);
      415    14443          /*E*    ERROR: XUE-E$XUE#ILLQUOTE-0
      416    14444                  MESSAGE: Mismatched quotes.
      417    14445          */
      418    14446          %ERR_CODE (NAME=E_ZERODIVFLT,CODE=%E$XUE#ZERODIVFLT);
      419    14497          /*E*    ERROR: XUE-E$XUE#ZERODIVFLT-0
      420    14498                  MESSAGE: Division by zero is undefined.
      421    14499          */
      422    14500          %ERR_CODE (NAME=E_OFLOWFLT,CODE=%E$XUE#OFLOWFLT);
      423    14551          /*E*    ERROR: XUE-E$XUE#OFLOWFLT-0
      424    14552                  MESSAGE: Result of operation caused overflow.
      425    14553          */
      426    14554          %ERR_CODE (NAME=E_NONDECIMAL,CODE=%E$XUE#NONDECIMAL);
      427    14605          /*E*    ERROR: XUE-E$XUE#NONDECIMAL-0
      428    14606                  MESSAGE: Valid DECIMAL value required here.
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:109  
      429    14607                  MESSAGE1: The specified value may have been too large to process,
      430    14608           or it may have had illegal characters imbedded.
      431    14609          */
      432    14610          %ERR_CODE (NAME=E_CVARTOOBIG,CODE=%E$XUE#CVARTOOBIG);
      433    14661          /*E*    ERROR: XUE-E$XUE#CVARTOOBIG-0
      434    14662                  MESSAGE: The result of this operation will cause string overflow.
      435    14663                  MESSAGE1: This operation would cause overflow if stored into
      436    14664           a COMMAND VARIABLE (max size is 511 characters).
      437    14665          */
      438    14666          %ERR_CODE (NAME=E_NULLSTRING,CODE=%E$XUE#NULLSTRING);
      439    14717          /*E*    ERROR: XUE-E$XUE#NULLSTRING-0
      440    14718                  MESSAGE: NULL STRING not allowed.
      441    14719          */
      442    14720          %ERR_CODE (NAME=E_ILLFID,CODE=%E$XUE#ILLFID);
      443    14771          /*E*    ERROR: XUE-E$XUE#ILLFID-0
      444    14772                  MESSAGE: Must be a DISK or LABELED TAPE fid.
      445    14773          */
      446    14774          %ERR_CODE (NAME=E_BDSWITCH,CODE=%E$XUE#BDSWITCH);
      447    14825          /*E*    ERROR: XUE-E$XUE#BDSWITCH-0
      448    14826                  MESSAGE: SWITCHES are numbered 0 thru 35.
      449    14827          */
      450    14828          %ERR_CODE (NAME=E_STKFLT,CODE=%E$XUE#STKFLT);
      451    14879          /*E*    ERROR: XUE-E$XUE#STKFLT-0
      452    14880                  MESSAGE: Evaluation of this expression is not possible.
      453    14881                  MESSAGE1: The expression is meaningless.
      454    14882          */
      455    14883          %ERR_CODE (NAME=E_ILLNUMARGS,CODE=%E$XUE#ILLNUMARGS);
      456    14934          /*E*    ERROR: XUE-E$XUE#ILLNUMARGS-0
      457    14935                  MESSAGE: Wrong number of arguments for this function.
      458    14936          */
      459    14937          %ERR_CODE (NAME=E_BADMODE,CODE=%E$XUE#BADMODE);
      460    14988          /*E*    ERROR: XUE-E$XUE#BADMODE-0
      461    14989                  MESSAGE: That function is not applicable to this mode.
      462    14990          */
      463    14991          %ERR_CODE (NAME=E_NULLFUN$$,CODE=%E$XUE#NULLFUN$$);
      464    15042          /*E*    ERROR: XUE-E$XUE#NULLFUN$$-0
      465    15043                  MESSAGE: FUN$$ is nil. User-defined functions not possible.
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:110  
      466    15044          */
      467    15045          %ERR_CODE (NAME=E_ILLOPTION,CODE=%E$XUE#ILLOPTION);
      468    15096          /*E*    ERROR: XUE-E$XUE#ILLOPTION-0
      469    15097                  MESSAGE: That value not legal for this option.
      470    15098          */
      471    15099          %ERR_CODE (NAME=E_ILLFUNNAME,CODE=%E$XUE#ILLFUNNAME);
      472    15150          /*E*    ERROR: XUE-E$XUE#ILLFUNNAME-0
      473    15151                  MESSAGE: Unrecognized FUNCTION.
      474    15152          */
      475    15153          %ERR_CODE (NAME=E_ILLDCB,CODE=%E$XUE#ILLDCB);
      476    15204          /*E*    ERROR: XUE-E$XUE#ILLDCB-0
      477    15205                  MESSAGE: Caller's WORK_DCB# is not a valid dcb.
      478    15206                 MESSAGE1: Some XUE$EVAL functions require that the caller
      479    15207                           pass a valid DCB to play with.  You didn't.
      480    15208          */
      481    15209        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:111  
      482    15210        /*
      483    15211             ***** Function/Operator table ...
      484    15212                   This table is indexed by the master EQU for this function
      485    15213                   or operator.  It must EXACTLY reflect the ordering of
      486    15214                   functions and operators in XUE_SUBS_C (gaps included).
      487    15215
      488    15216                   PREC=a code indicating the precidence enjoyed by this
      489    15217                        operator.
      490    15218                   NTP=NUM_TO_POP specifies how many operands an OPERATOR
      491    15219                   or FUNCTION may have. Where a FUNCTION may have an
      492    15220                   arbirtray number of arguments this table will have
      493    15221                   511. The actual number will be contained in the
      494    15222                   stack NUM_TO_POP_STACK. This stack is parallel to OP_STACK.
      495    15223                   NOTE: THE MAX NUMBER OF ARGS IS DETERMINED BY THE SIZE
      496    15224                         OF VAL_STACK$.
      497    15225        */
      498    15226    1   DCL 1 FUNC (0:%(XUE_NUM_OPERATORS+XUE_NUM_FUNCTIONS-1)) CONSTANT,
      499    15227    1         2 PREC UBIN BYTE CALIGNED INIT(
      500    15228    1               0,                          /* BEGIN_MARKER                       */
      501    15229    1               0,                          /* END_MARKER                         */
      502    15230    1               7,                          /* MULTIPLY                           */
      503    15231    1               7,                          /* DIVIDE                             */
      504    15232    1               6,                          /* PLUS                               */
      505    15233    1               6,                          /* MINUS                              */
      506    15234    1               5,                          /* CONCAT                             */
      507    15235    1               4,                          /* EQUAL                              */
      508    15236    1               4,                          /* NEQUAL                             */
      509    15237    1               4,                          /* GTHAN                              */
      510    15238    1               4,                          /* GEQUAL                             */
      511    15239    1               4,                          /* LTHAN                              */
      512    15240    1               4,                          /* LEQUAL                             */
      513    15241    1               2,                          /* AND                                */
      514    15242    1               1,                          /* OR                                 */
      515    15243    1               3,                          /* U_NOT                              */
      516    15244    1               8,                          /* U_PLUS                             */
      517    15245    1               8,                          /* U_MINUS                            */
      518    15246    1              99,                          /* WEQ_LPAT                           */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:112  
      519    15247    1              99,                          /* WEQ_RPAT                           */
      520    15248    1              99,                          /* WCN_LPAT                           */
      521    15249    1              99,                          /* WCN_RPAT                           */
      522    15250    1              99,                          /* OPSPARE1                           */
      523    15251    1              99,                          /* OPSPARE2                           */
      524    15252    1              99,                          /* OPSPARE3                           */
      525    15253    1              99,                          /* FUNCSPARE0                         */
      526    15254    1              99,                          /* FUNCSPARE1                         */
      527    15255    1              99,                          /* FUNCSPARE2                         */
      528    15256    1               9,                          /* $TERM_PROFILE                      */
      529    15257    1               9,                          /* $TERM_FEP                          */
      530    15258    1               9,                          /* $TERM_LINE                         */
      531    15259    1               9,                          /* $TERM_SPEED                        */
      532    15260    1               9,                          /* $RERUN                             */
      533    15261    1               9,                          /* $PRIV_ACTIVE                       */
      534    15262    1               9,                          /* $PRIV_AUTH                         */
      535    15263    1               9,                          /* $FLAG                              */
      536    15264    1               9,                          /* $FID_ORG                           */
      537    15265    1               9,                          /* $FID_RECS                          */
      538    15266    1               9,                          /* $FID_GRANS                         */
      539    15267    1               9,                          /* $FID_UGRANS                        */
      540    15268    1               9,                          /* $FID_NGAVAL                        */
      541    15269    1               9,                          /* $UPC                               */
      542    15270    1               9,                          /* $LOC                               */
      543    15271    1               9,                          /* $ACCT                              */
      544    15272    1               9,                          /* $DATE                              */
      545    15273    1               9,                          /* $DAY                               */
      546    15274    1               9,                          /* $DIR                               */
      547    15275    1               9,                          /* $EOF                               */
      548    15276    1               9,                          /* $FID_EXIST                         */
      549    15277    1               9,                          /* $FID_TYPE                          */
      550    15278    1               9,                          /* $HSET                              */
      551    15279    1               9,                          /* $INDEX                             */
      552    15280    1               9,                          /* $INPUT                             */
      553    15281    1               9,                          /* $KEYIN                             */
      554    15282    1               9,                          /* $LASTBATCH                         */
      555    15283    1               9,                          /* $LEN                               */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:113  
      556    15284    1               9,                          /* $MAX                               */
      557    15285    1               9,                          /* $MIN                               */
      558    15286    1               9,                          /* $MOD                               */
      559    15287    1               9,                          /* $MODE                              */
      560    15288    1               9,                          /* $NAME                              */
      561    15289    1              99,                          /* FUNCSPARE3                         */
      562    15290    1               9,                          /* CMDVAR_EXIST                       */
      563    15291    1               9,                          /* $SEARCH                            */
      564    15292    1               9,                          /* $SITE                              */
      565    15293    1               9,                          /* $SUBSTR                            */
      566    15294    1               9,                          /* $SWITCH                            */
      567    15295    1               9,                          /* $SYSID                             */
      568    15296    1               9,                          /* $TIME                              */
      569    15297    1               9,                          /* $VERIFY                            */
      570    15298    1               9,                          /* $VERSION                           */
      571    15299    1               9,                          /* $WOO                               */
      572    15300    1               9,                          /* $ABS                               */
      573    15301    1               9,                          /* $REM                               */
      574    15302    1               9),                         /* $FID_ASN                           */
      575    15303    1         2 NTP UBIN BYTE CALIGNED INIT(
      576    15304    1               0,                          /* BEGIN_MARKER                       */
      577    15305    1               0,                          /* END_MARKER                         */
      578    15306    1               2,                          /* MULTIPLY                           */
      579    15307    1               2,                          /* DIVIDE                             */
      580    15308    1               2,                          /* PLUS                               */
      581    15309    1               2,                          /* MINUS                              */
      582    15310    1               2,                          /* CONCAT                             */
      583    15311    1               2,                          /* EQUAL                              */
      584    15312    1               2,                          /* NEQUAL                             */
      585    15313    1               2,                          /* GTHAN                              */
      586    15314    1               2,                          /* GEQUAL                             */
      587    15315    1               2,                          /* LTHAN                              */
      588    15316    1               2,                          /* LEQUAL                             */
      589    15317    1               2,                          /* AND                                */
      590    15318    1               2,                          /* OR                                 */
      591    15319    1               1,                          /* U_NOT                              */
      592    15320    1               1,                          /* U_PLUS                             */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:114  
      593    15321    1               1,                          /* U_MINUS                            */
      594    15322    1               2,                          /* WEQ_LPAT                           */
      595    15323    1               2,                          /* WEQ_RPAT                           */
      596    15324    1               2,                          /* WCN_LPAT                           */
      597    15325    1               2,                          /* WCN_RPAT                           */
      598    15326    1               2,                          /* OPSPARE1                           */
      599    15327    1               2,                          /* OPSPARE2                           */
      600    15328    1               2,                          /* OPSPARE3                           */
      601    15329    1              99,                          /* FUNCSPARE0                         */
      602    15330    1              99,                          /* FUNCSPARE1                         */
      603    15331    1              99,                          /* FUNCSPARE2                         */
      604    15332    1               0,                          /* $TERM_PROFILE                      */
      605    15333    1               0,                          /* $TERM_FEP                          */
      606    15334    1               0,                          /* $TERM_LINE                         */
      607    15335    1               0,                          /* $TERM_SPEED                        */
      608    15336    1               0,                          /* $RERUN                             */
      609    15337    1             511,                          /* $PRIV_ACTIVE                       */
      610    15338    1             511,                          /* $PRIV_AUTH                         */
      611    15339    1             511,                          /* $FLAG                              */
      612    15340    1               1,                          /* $FID_ORG                           */
      613    15341    1               1,                          /* $FID_RECS                          */
      614    15342    1               1,                          /* $FID_GRANS                         */
      615    15343    1               1,                          /* $FID_UGRANS                        */
      616    15344    1               1,                          /* $FID_NGAVAL                        */
      617    15345    1               1,                          /* $UPC                               */
      618    15346    1               1,                          /* $LOC                               */
      619    15347    1               0,                          /* $ACCT                              */
      620    15348    1             511,                          /* $DATE                              */
      621    15349    1               0,                          /* $DAY                               */
      622    15350    1               0,                          /* $DIR                               */
      623    15351    1               0,                          /* $EOF                               */
      624    15352    1               1,                          /* $FID_EXIST                         */
      625    15353    1               1,                          /* $FID_TYPE                          */
      626    15354    1               0,                          /* $HSET                              */
      627    15355    1               4,                          /* $INDEX                             */
      628    15356    1               3,                          /* $INPUT                             */
      629    15357    1               1,                          /* $KEYIN                             */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:115  
      630    15358    1               0,                          /* $LASTBATCH                         */
      631    15359    1               1,                          /* $LEN                               */
      632    15360    1             511,                          /* $MAX                               */
      633    15361    1             511,                          /* $MIN                               */
      634    15362    1               2,                          /* $MOD                               */
      635    15363    1               0,                          /* $MODE                              */
      636    15364    1               0,                          /* $NAME                              */
      637    15365    1              99,                          /* FUNCSPARE3                         */
      638    15366    1               1,                          /* CMDVAR_EXIST                       */
      639    15367    1               4,                          /* $SEARCH                            */
      640    15368    1               0,                          /* $SITE                              */
      641    15369    1               3,                          /* $SUBSTR                            */
      642    15370    1               1,                          /* $SWITCH                            */
      643    15371    1               0,                          /* $SYSID                             */
      644    15372    1             511,                          /* $TIME                              */
      645    15373    1               4,                          /* $VERIFY                            */
      646    15374    1               0,                          /* $VERSION                           */
      647    15375    1               0,                          /* $WOO                               */
      648    15376    1               1,                          /* $ABS                               */
      649    15377    1               2,                          /* $REM                               */
      650    15378    1               1);                         /* $FID_ASN                           */
      651    15379        %B$XL_UPPER (NAME=LC2UC);
      652    15383        %B$XL_LOWER (NAME=UC2LC);
      653    15387        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:116  
      654    15388    1   GET_VAR: PROC (VAR_NAME$,VALUE$,CHARPOS) ALTRET;

  15388  2 000003   201044 741300       GET_VAR      STX1  ! RESULT+1,,AUTO

      655    15389        /*F*    NAME:          GET_VAR
      656    15390                PURPOSE:       To get value of specified variable.
      657    15391        */
      658    15392        /***** Parameters *****/
      659    15393    2   DCL VAR_NAME$ PTR;
      660    15394    2   DCL VALUE$ PTR;
      661    15395    2   DCL CHARPOS UBIN WORD;
      662    15396        /***** Auto storage *****/
      663    15397          %VLP_NAMEV (FPTN = VAR_NAME,STCLASS = "BASED(VAR_NAME$)");
      664    15404          %VLP_NAME (FPTN = VAR_VALUE,LEN = 511, STCLASS = AUTO);
      665    15431
      666    15432        /*
      667    15433             ***** Setup VAR_VALUE ...
      668    15434        */
      669    15435    2       VAR_VALUE.L# = SIZEC(VAR_VALUE.NAME#);

  15435  2 000004   777000 236003                    LDQ     -512,DU
         2 000005   201050 552140                    STBQ    VAR_VALUE,'40'O,AUTO

      670    15436        /*
      671    15437             ***** Call X$GET_VAR ...
      672    15438        */
      673    15439    2       CALL X$GET_VAR (VAR_NAME$,ADDR(VAR_VALUE),XUE_ECB,CHARPOS) ALTRET(E_GET);

  15439  2 000006   201050 630500                    EPPR0   VAR_VALUE,,AUTO
         2 000007   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 000010   201047 236100                    LDQ     @CHARPOS,,AUTO
         2 000011   200004 235100                    LDA     @XUE_ECB,,AUTO
         2 000012   201254 757100                    STAQ    FPT_FID+74,,AUTO
         2 000013   201250 631500                    EPPR1   FPT_FID+70,,AUTO
         2 000014   201253 451500                    STP1    FPT_FID+73,,AUTO
         2 000015   201045 236100                    LDQ     @VAR_NAME$,,AUTO
         2 000016   201252 756100                    STQ     FPT_FID+72,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:117  
         2 000017   201252 630500                    EPPR0   FPT_FID+72,,AUTO
         2 000020   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000021   000000 701000 xent               TSX1    X$GET_VAR
         2 000022   000064 702000 2                  TSX2    E_GET

      674    15440        /*
      675    15441             ***** Allocate space for VALUE ...
      676    15442        */
      677    15443    2       MCB.SIZE = VAR_VALUE.L# + 1;

  15443  2 000023   201050 236100                    LDQ     VAR_VALUE,,AUTO
         2 000024   000033 772000                    QRL     27
         2 000025   000001 036007                    ADLQ    1,DL
         2 000026   200005 470500                    LDP0    @MCB,,AUTO
         2 000027   000006 756100                    STQ     6,,PR0

      678    15444    2       CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  15444  2 000030   200005 630500                    EPPR0   @MCB,,AUTO
         2 000031   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000032   000000 701000 xent               TSX1    X$ALLOCATE
         2 000033   000056 702000 2                  TSX2    E_ALLOCATE

      679    15445    2       VALUE$ = MCB.ADDRESS$;

  15445  2 000034   200005 470500                    LDP0    @MCB,,AUTO
         2 000035   000000 236100                    LDQ     0,,PR0
         2 000036   201046 471500                    LDP1    @VALUE$,,AUTO
         2 000037   100000 756100                    STQ     0,,PR1

      680    15446    2       VALUE$ -> X$STRING.SIZ = VAR_VALUE.L#;

  15446  2 000040   100000 473500                    LDP3    0,,PR1
         2 000041   000100 100500                    MLR     fill='000'O
         2 000042   201050 000001                    ADSC9   VAR_VALUE,,AUTO          cn=0,n=1
         2 000043   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:118  
      681    15447    2       VALUE$ -> X$STRING.TEXT = VAR_VALUE.NAME#;

  15447  2 000044   100000 473500                    LDP3    0,,PR1
         2 000045   000100 101500                    MRL     fill='000'O
         2 000046   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000047   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 000050   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 000051   040140 100500                    MLR     fill='040'O
         2 000052   201050 200777                    ADSC9   VAR_VALUE,,AUTO          cn=1,n=511
         2 000053   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0

      682    15448    2       RETURN;

  15448  2 000054   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 000055   000001 702211                    TSX2  ! 1,X1

      683    15449        /**/
      684    15450    2   E_ALLOCATE:
      685    15451    2       XUE_ECB.ERR = MCB.ERR;

  15451  2 000056   200005 470500       E_ALLOCATE   LDP0    @MCB,,AUTO
         2 000057   000010 236100                    LDQ     8,,PR0
         2 000060   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 000061   100011 756100                    STQ     9,,PR1

      686    15452    2       ALTRETURN;

  15452  2 000062   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 000063   000000 702211                    TSX2  ! 0,X1

      687    15453        /**/
      688    15454    2   E_GET:
      689    15455    2       ALTRETURN;

  15455  2 000064   201044 221300       E_GET        LDX1  ! RESULT+1,,AUTO
         2 000065   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:119  
      690    15456        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:120  
      691    15457    2   TEST_VAR: ENTRY (VAR_NAME$) ALTRET;

  15457  2 000066   201044 741300       TEST_VAR     STX1  ! RESULT+1,,AUTO

      692    15458        /*F*    NAME:       TEST_VAR
      693    15459                PURPOSE:    To check whether a specified variable exists.
      694    15460        */
      695    15461    2       VAR_VALUE.L# = SIZEC(VAR_VALUE.NAME#);

  15461  2 000067   777000 236003                    LDQ     -512,DU
         2 000070   201050 552140                    STBQ    VAR_VALUE,'40'O,AUTO

      696    15462    2       CALL X$GET_VAR (VAR_NAME$,ADDR(VAR_VALUE),XUE_ECB,TEMP) ALTRET(E_GET);

  15462  2 000071   201050 630500                    EPPR0   VAR_VALUE,,AUTO
         2 000072   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 000073   200026 631500                    EPPR1   TEMP,,AUTO
         2 000074   201255 451500                    STP1    FPT_FID+75,,AUTO
         2 000075   200004 236100                    LDQ     @XUE_ECB,,AUTO
         2 000076   201254 756100                    STQ     FPT_FID+74,,AUTO
         2 000077   201250 633500                    EPPR3   FPT_FID+70,,AUTO
         2 000100   201253 453500                    STP3    FPT_FID+73,,AUTO
         2 000101   201045 236100                    LDQ     @VAR_NAME$,,AUTO
         2 000102   201252 756100                    STQ     FPT_FID+72,,AUTO
         2 000103   201252 630500                    EPPR0   FPT_FID+72,,AUTO
         2 000104   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000105   000000 701000 xent               TSX1    X$GET_VAR
         2 000106   000064 702000 2                  TSX2    E_GET

      697    15463    2       RETURN;

  15463  2 000107   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 000110   000001 702211                    TSX2  ! 1,X1

      698    15464    2   END GET_VAR;
      699    15465        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:121  
      700    15466    1   LEX: PROC (TOKEN,VALUE$) ALTRET;

  15466  2 000111   200534 741300       LEX          STX1  ! FID_RES+1,,AUTO

      701    15467        /***** Parameters *****/
      702    15468    2   DCL TOKEN UBIN WORD;
      703    15469    2   DCL VALUE$ PTR;
      704    15470        /***** Auto variables *****/
      705    15471    2   DCL NAME$ PTR AUTO;
      706    15472    2       TOKEN_INDX = TOKEN_INDX + 1;

  15472  2 000112   200024 054100                    AOS     TOKEN_INDX,,AUTO

      707    15473    2       IF TOKEN_INDX = TREE$ -> P$B.NSUBLKS

  15473  2 000113   200003 470500                    LDP0    @TREE$,,AUTO
         2 000114   000000 471500                    LDP1    0,,PR0
         2 000115   100001 236100                    LDQ     1,,PR1
         2 000116   000022 772000                    QRL     18
         2 000117   200024 116100                    CMPQ    TOKEN_INDX,,AUTO
         2 000120   000125 601000 2                  TNZ     s:15478

      708    15474    2       THEN   /* End of the expression */
      709    15475    2           TOKEN = %XUE_END_MARKER#;

  15475  2 000121   000001 235007                    LDA     1,DL
         2 000122   200535 473500                    LDP3    @TOKEN,,AUTO
         2 000123   300000 755100                    STA     0,,PR3
         2 000124   000323 710000 2                  TRA     s:15523

      710    15476    2       ELSE
      711    15477    3       DO;

      712    15478    3           TOKEN_PTR$ = TREE$->P$B.SUBLK$(TOKEN_INDX);

  15478  2 000125   200024 720100                    LXL0    TOKEN_INDX,,AUTO
         2 000126   100003 236110                    LDQ     3,X0,PR1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:122  
         2 000127   200011 756100                    STQ     TOKEN_PTR$,,AUTO

      713    15479    3           TOKEN = TOKEN_PTR$ -> P$B.CODE;   /* Current lexical TOKEN */

  15479  2 000130   200011 471500                    LDP1    TOKEN_PTR$,,AUTO
         2 000131   100000 236100                    LDQ     0,,PR1
         2 000132   777777 376007                    ANQ     -1,DL
         2 000133   200535 473500                    LDP3    @TOKEN,,AUTO
         2 000134   300000 756100                    STQ     0,,PR3

      714    15480    3           CHARPOS = TOKEN_PTR$ -> P$B.CPOS;   /* CHARPOS of TOKEN */

  15480  2 000135   200011 471500                    LDP1    TOKEN_PTR$,,AUTO
         2 000136   100002 235100                    LDA     2,,PR1
         2 000137   200020 755100                    STA     CHARPOS,,AUTO

      715    15481    4           DO CASE (TREE$->P$B.SUBLK$(TOKEN_INDX)->P$B.CODE);

  15481  2 000140   000000 474500                    LDP4    0,,PR0
         2 000141   400003 475510                    LDP5    3,X0,PR4
         2 000142   500000 236100                    LDQ     0,,PR5
         2 000143   777777 376007                    ANQ     -1,DL
         2 000144   000113 136007                    SBLQ    75,DL
         2 000145   000004 116007                    CMPQ    4,DL
         2 000146   000150 602006 2                  TNC     s:15481+8,QL
         2 000147   000323 710000 2                  TRA     s:15523
         2 000150   000154 710000 2                  TRA     s:15483
         2 000151   000173 710000 2                  TRA     s:15486
         2 000152   000173 710000 2                  TRA     s:15486
         2 000153   000177 710000 2                  TRA     s:15488

      716    15482    4           CASE (%XUE_EXP#);

      717    15483    4               CALL X$EVALUATE (TOKEN_PTR$,XUE_ECB,MCB) ALTRET(E_LEX);

  15483  2 000154   200005 236100                    LDQ     @MCB,,AUTO
         2 000155   201252 756100                    STQ     FPT_FID+72,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:123  
         2 000156   200004 236100                    LDQ     @XUE_ECB,,AUTO
         2 000157   201251 756100                    STQ     FPT_FID+71,,AUTO
         2 000160   200011 634500                    EPPR4   TOKEN_PTR$,,AUTO
         2 000161   201250 454500                    STP4    FPT_FID+70,,AUTO
         2 000162   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 000163   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000164   000000 701000 2                  TSX1    s:15
         2 000165   000325 702000 2                  TSX2    E_LEX

      718    15484    4               VALUE$ = XUE_ECB.OUT$;

  15484  2 000166   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 000167   000004 236100                    LDQ     4,,PR0
         2 000170   200536 471500                    LDP1    @VALUE$,,AUTO
         2 000171   100000 756100                    STQ     0,,PR1
         2 000172   000323 710000 2                  TRA     s:15523

      719    15485    4           CASE (%XUE_DECIMAL#,%XUE_QUOTE#);

      720    15486    4               VALUE$ = TOKEN_PTR$ -> P$S.TEXTC$;

  15486  2 000173   100003 236100                    LDQ     3,,PR1
         2 000174   200536 476500                    LDP6    @VALUE$,,AUTO
         2 000175   600000 756100                    STQ     0,,PR6
         2 000176   000323 710000 2                  TRA     s:15523

      721    15487    4           CASE (%XUE_VAR#);

      722    15488    4               NAME$ = TOKEN_PTR$ -> P$S.TEXTC$;

  15488  2 000177   100003 236100                    LDQ     3,,PR1
         2 000200   200537 756100                    STQ     NAME$,,AUTO

      723    15489        /*
      724    15490             ***** It parsed as a variable name.  Make sure that it's not
      725    15491                   just an unrecognized (illegal) function name....
      726    15492        */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:124  
      727    15493    4               IF SUBSTR(NAME$ -> X$STRING.TEXT,0,1) = '$'

  15493  2 000201   200537 474500                    LDP4    NAME$,,AUTO
         2 000202   000100 101500                    MRL     fill='000'O
         2 000203   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000204   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 000205   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 000206   040000 106500                    CMPC    fill='040'O
         2 000207   400000 200001                    ADSC9   0,,PR4                   cn=1,n=1
         2 000210   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000211   000222 601000 2                  TNZ     s:15500

      728    15494    4               THEN   /* Unrecognized FUNCTION */
      729    15495    5               DO;

      730    15496    5                   XUE_ECB.ERR = E_ILLFUNNAME;

  15496  2 000212   000446 236000 1                  LDQ     E_ILLFUNNAME
         2 000213   200004 475500                    LDP5    @XUE_ECB,,AUTO
         2 000214   500011 756100                    STQ     9,,PR5

      731    15497    5                   XUE_ECB.ERR_POS# = CHARPOS +1; /* Point past '$'    */

  15497  2 000215   200020 721100                    LXL1    CHARPOS,,AUTO
         2 000216   000001 622011                    EAX2    1,X1
         2 000217   500010 742100                    STX2    8,,PR5

      732    15498    5                   ALTRETURN;

  15498  2 000220   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000221   000000 702211                    TSX2  ! 0,X1

      733    15499    5               END;
      734    15500    4               IF NAME$ -> X$STRING.TEXT = 'STEPCC'

  15500  2 000222   000100 101500                    MRL     fill='000'O
         2 000223   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:125  
         2 000224   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 000225   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 000226   040000 106540                    CMPC    fill='040'O
         2 000227   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         2 000230   001136 000006 1                  ADSC9   MIN_OFFSET+1             cn=0,n=6
         2 000231   000312 601000 2                  TNZ     s:15518

      735    15501    4               THEN
      736    15502    5               DO;

      737    15503    5                   IF B$JIT.STEPCC < 10

  15503  2 000232   000000 475400 xsym               LDP5    B$JIT$
         2 000233   500316 236100                    LDQ     206,,PR5
         2 000234   000777 376003                    ANQ     511,DU
         2 000235   000012 116003                    CMPQ    10,DU
         2 000236   000243 603000 2                  TRC     s:15507

      738    15504    5                   THEN
      739    15505    5                       MCB.SIZE = 2;

  15505  2 000237   000002 235007                    LDA     2,DL
         2 000240   200005 476500                    LDP6    @MCB,,AUTO
         2 000241   600006 755100                    STA     6,,PR6
         2 000242   000254 710000 2                  TRA     s:15512

      740    15506    5                   ELSE
      741    15507    5                       IF B$JIT.STEPCC <100

  15507  2 000243   000144 116003                    CMPQ    100,DU
         2 000244   000251 603000 2                  TRC     s:15511

      742    15508    5                       THEN
      743    15509    5                           MCB.SIZE = 3;

  15509  2 000245   000003 235007                    LDA     3,DL
         2 000246   200005 476500                    LDP6    @MCB,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:126  
         2 000247   600006 755100                    STA     6,,PR6
         2 000250   000254 710000 2                  TRA     s:15512

      744    15510    5                       ELSE
      745    15511    5                           MCB.SIZE = 4;

  15511  2 000251   000004 235007                    LDA     4,DL
         2 000252   200005 476500                    LDP6    @MCB,,AUTO
         2 000253   600006 755100                    STA     6,,PR6

      746    15512    5                   CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  15512  2 000254   200005 630500                    EPPR0   @MCB,,AUTO
         2 000255   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000256   000000 701000 xent               TSX1    X$ALLOCATE
         2 000257   000327 702000 2                  TSX2    E_ALLOCATE

      747    15513    5                   VALUE$ = MCB.ADDRESS$;

  15513  2 000260   200005 470500                    LDP0    @MCB,,AUTO
         2 000261   000000 236100                    LDQ     0,,PR0
         2 000262   200536 471500                    LDP1    @VALUE$,,AUTO
         2 000263   100000 756100                    STQ     0,,PR1

      748    15514    5                   VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;

  15514  2 000264   100000 473500                    LDP3    0,,PR1
         2 000265   000006 236100                    LDQ     6,,PR0
         2 000266   000001 136007                    SBLQ    1,DL
         2 000267   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 000270   000100 101500                    MRL     fill='000'O
         2 000271   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 000272   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      749    15515    5                   CALL BINCHAR (VALUE$->X$STRING.TEXT,B$JIT.STEPCC);

  15515  2 000273   100000 473500                    LDP3    0,,PR1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:127  
         2 000274   000100 101500                    MRL     fill='000'O
         2 000275   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000276   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 000277   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 000300   000000 474400 xsym               LDP4    B$JIT$
         2 000301   400316 236100                    LDQ     206,,PR4
         2 000302   000022 772000                    QRL     18
         2 000303   000777 376007                    ANQ     511,DL
         2 000304   000000 235003                    LDA     0,DU
         2 000305   201252 757100                    STAQ    FPT_FID+72,,AUTO
         2 000306   000140 301500                    BTD
         2 000307   201252 000010                    NDSC9   FPT_FID+72,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         2 000310   300000 230010                    NDSC9   0,,PR3                   cn=1,s=nosgn,sf=0,n=*X0

      750    15516    5               END;

  15516  2 000311   000323 710000 2                  TRA     s:15523

      751    15517    4               ELSE   /* Not STEPCC */
      752    15518    4                   CALL GET_VAR (NAME$,VALUE$,CHARPOS) ALTRET(E_LEX);

  15518  2 000312   200020 635500                    EPPR5   CHARPOS,,AUTO
         2 000313   201047 455500                    STP5    @CHARPOS,,AUTO
         2 000314   200536 236100                    LDQ     @VALUE$,,AUTO
         2 000315   201046 756100                    STQ     @VALUE$,,AUTO
         2 000316   200537 636500                    EPPR6   NAME$,,AUTO
         2 000317   201045 456500                    STP6    @VAR_NAME$,,AUTO
         2 000320   000003 701000 2                  TSX1    GET_VAR
         2 000321   000325 702000 2                  TSX2    E_LEX
         2 000322   000323 710000 2                  TRA     s:15523

      753    15519    4           CASE (ELSE);

      754    15520                      /* Functions, Operators */
      755    15521    4           END;   /* Do case ... end */

      756    15522    3       END;   /* Do ... end */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:128  
      757    15523    2       RETURN;

  15523  2 000323   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000324   000001 702211                    TSX2  ! 1,X1

      758    15524        /**/
      759    15525    2   E_LEX:
      760    15526    2       ALTRETURN;

  15526  2 000325   200534 221300       E_LEX        LDX1  ! FID_RES+1,,AUTO
         2 000326   000000 702211                    TSX2  ! 0,X1

      761    15527        /**/
      762    15528    2   E_ALLOCATE:
      763    15529    2       XUE_ECB.ERR = MCB.ERR;

  15529  2 000327   200005 470500       E_ALLOCATE   LDP0    @MCB,,AUTO
         2 000330   000010 236100                    LDQ     8,,PR0
         2 000331   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 000332   100011 756100                    STQ     9,,PR1

      764    15530    2       XUE_ECB.ERR_POS# = TOKEN_PTR$ -> P$B.CPOS;

  15530  2 000333   200011 473500                    LDP3    TOKEN_PTR$,,AUTO
         2 000334   300002 720100                    LXL0    2,,PR3
         2 000335   100010 740100                    STX0    8,,PR1

      765    15531    2       ALTRETURN;

  15531  2 000336   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000337   000000 702211                    TSX2  ! 0,X1

      766    15532    2   END LEX;
      767    15533        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:129  
      768    15534    1   GET_ARGS: PROC (NUM_ARGS) ALTRET;

  15534  2 000340   200534 741300       GET_ARGS     STX1  ! FID_RES+1,,AUTO

      769    15535        /***** Parameters *****/
      770    15536    2   DCL NUM_ARGS SBIN WORD;
      771    15537        /***** Local Variables *****/
      772    15538    2   DCL ARG_PTR$ PTR AUTO;
      773    15539    2   DCL EXP_PTR$ PTR AUTO;
      774    15540    2   DCL ARG_INDX SBIN WORD AUTO;
      775    15541        /**/
      776    15542        /*
      777    15543             ***** There are two types of built-in functions
      778    15544                   1) POSITIONAL - FUNC.NTP(X) = 0 TO n
      779    15545                   2) KEYWORD    - FUNC.NTP(X) = 511
      780    15546                   They have different parse tree structures and
      781    15547                   so have to be processed seperately ...
      782    15548        */
      783    15549    2       NUM_TO_POP = FUNC.NTP(TOKEN);

  15549  2 000341   200025 235100                    LDA     TOKEN,,AUTO
         2 000342   000001 735000                    ALS     1
         2 000343   000100 101405                    MRL     fill='000'O
         2 000344   000450 200001 1                  ADSC9   FUNC,A                   cn=1,n=1
         2 000345   200030 000004                    ADSC9   NUM_TO_POP,,AUTO         cn=0,n=4

      784    15550    2       IF NUM_TO_POP = 511

  15550  2 000346   200030 236100                    LDQ     NUM_TO_POP,,AUTO
         2 000347   000777 116007                    CMPQ    511,DL
         2 000350   000470 601000 2                  TNZ     s:15605

      785    15551    2       THEN   /* KEYWORD parameters */
      786    15552    3       DO;

      787    15553    4           DO ARG_INDX = 0 TO TOKEN_PTR$ -> P$B.NSUBLKS - 1;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:130  
  15553  2 000351   200540 450100                    STZ     ARG_INDX,,AUTO
         2 000352   000457 710000 2                  TRA     s:15599+1

      788    15554    4               ARG_PTR$ = TOKEN_PTR$ -> P$B.SUBLK$(ARG_INDX);

  15554  2 000353   200011 470500                    LDP0    TOKEN_PTR$,,AUTO
         2 000354   200540 720100                    LXL0    ARG_INDX,,AUTO
         2 000355   000003 236110                    LDQ     3,X0,PR0
         2 000356   200536 756100                    STQ     ARG_PTR$,,AUTO

      789    15555    4               IF ARG_PTR$ -> P$B.NSUBLKS = 0 THEN

  15555  2 000357   200536 471500                    LDP1    ARG_PTR$,,AUTO
         2 000360   100001 221100                    LDX1    1,,PR1
         2 000361   000412 601000 2                  TNZ     s:15578

      790    15556    5               DO;

      791    15557    5                   VALUE$ = ZERO$;      /* Keyword only, no argument attached */

  15557  2 000362   000000 236000 1                  LDQ     ZERO$
         2 000363   200010 756100                    STQ     VALUE$,,AUTO

      792    15558                           %PUSH_VALUE (TYPE="ARG_PTR$ -> P$B.CODE",
      793    15559                                        CPOS="ARG_PTR$ -> P$B.CPOS");

  15560  2 000364   200022 054100                    AOS     VAL_PTR,,AUTO

  15561  2 000365   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000366   000031 115007                    CMPA    25,DL
         2 000367   000377 604400 2                  TMOZ    s:15570

  15564  2 000370   000424 236000 1                  LDQ     E_STKOVFL
         2 000371   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 000372   300011 756100                    STQ     9,,PR3

  15565  2 000373   200020 721100                    LXL1    CHARPOS,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:131  
         2 000374   300010 741100                    STX1    8,,PR3

  15566  2 000375   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000376   000000 702211                    TSX2  ! 0,X1

  15570  2 000377   200057 756105                    STQ     VAL_STACK$,AL,AUTO

  15571  2 000400   200536 470500                    LDP0    ARG_PTR$,,AUTO
         2 000401   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000402   000105 101500                    MRL     fill='000'O
         2 000403   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 000404   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1

  15572  2 000405   000001 735000                    ALS     1
         2 000406   000105 101500                    MRL     fill='000'O
         2 000407   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4
         2 000410   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2

      794    15575    5               END;

  15575  2 000411   000456 710000 2                  TRA     s:15599

      795    15576    4               ELSE
      796    15577    5               DO;

      797    15578    5                   EXP_PTR$ = ARG_PTR$ -> P$B.SUBLK$(0);

  15578  2 000412   100003 236100                    LDQ     3,,PR1
         2 000413   200537 756100                    STQ     EXP_PTR$,,AUTO

      798    15579    5                   CALL X$EVALUATE (EXP_PTR$,XUE_ECB,MCB) ALTRET(E_EVAL);

  15579  2 000414   200005 236100                    LDQ     @MCB,,AUTO
         2 000415   201252 756100                    STQ     FPT_FID+72,,AUTO
         2 000416   200004 236100                    LDQ     @XUE_ECB,,AUTO
         2 000417   201251 756100                    STQ     FPT_FID+71,,AUTO
         2 000420   200537 633500                    EPPR3   EXP_PTR$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:132  
         2 000421   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 000422   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 000423   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000424   000000 701000 2                  TSX1    s:15
         2 000425   000646 702000 2                  TSX2    E_EVAL

      799    15580    5                   VALUE$ = XUE_ECB.OUT$;

  15580  2 000426   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 000427   000004 236100                    LDQ     4,,PR0
         2 000430   200010 756100                    STQ     VALUE$,,AUTO

      800    15581                           %PUSH_VALUE (TYPE="ARG_PTR$ -> P$B.CODE",
      801    15582                                        CPOS="EXP_PTR$ -> P$B.CPOS");

  15583  2 000431   200022 054100                    AOS     VAL_PTR,,AUTO

  15584  2 000432   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000433   000031 115007                    CMPA    25,DL
         2 000434   000443 604400 2                  TMOZ    s:15593

  15587  2 000435   000424 236000 1                  LDQ     E_STKOVFL
         2 000436   000011 756100                    STQ     9,,PR0

  15588  2 000437   200020 720100                    LXL0    CHARPOS,,AUTO
         2 000440   000010 740100                    STX0    8,,PR0

  15589  2 000441   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000442   000000 702211                    TSX2  ! 0,X1

  15593  2 000443   200057 756105                    STQ     VAL_STACK$,AL,AUTO

  15594  2 000444   200536 471500                    LDP1    ARG_PTR$,,AUTO
         2 000445   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000446   000105 101500                    MRL     fill='000'O
         2 000447   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         2 000450   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:133  

  15595  2 000451   000001 735000                    ALS     1
         2 000452   200537 473500                    LDP3    EXP_PTR$,,AUTO
         2 000453   000105 101500                    MRL     fill='000'O
         2 000454   300002 000004                    ADSC9   2,,PR3                   cn=0,n=4
         2 000455   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2

      802    15598    5               END;

      803    15599    4           END;   /* Do index ... end */

  15599  2 000456   200540 054100                    AOS     ARG_INDX,,AUTO
         2 000457   200011 470500                    LDP0    TOKEN_PTR$,,AUTO
         2 000460   000001 236100                    LDQ     1,,PR0
         2 000461   000022 772000                    QRL     18
         2 000462   200540 116100                    CMPQ    ARG_INDX,,AUTO
         2 000463   000353 605400 2                  TPNZ    s:15554

      804    15600    3           NUM_ARGS = TOKEN_PTR$ -> P$B.NSUBLKS;

  15600  2 000464   200535 471500                    LDP1    @NUM_ARGS,,AUTO
         2 000465   100000 756100                    STQ     0,,PR1

      805    15601    3           RETURN;

  15601  2 000466   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000467   000001 702211                    TSX2  ! 1,X1

      806    15602    3       END;   /* Do ... end */
      807    15603    2       ELSE   /* POSITIONAL parameters */
      808    15604    3       DO;

      809    15605    4           DO ARG_INDX = 0 TO TOKEN_PTR$ -> P$B.NSUBLKS - 1;

  15605  2 000470   200540 450100                    STZ     ARG_INDX,,AUTO
         2 000471   000572 710000 2                  TRA     s:15657+1

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:134  
      810    15606    4               ARG_PTR$ = TOKEN_PTR$ -> P$B.SUBLK$(ARG_INDX);

  15606  2 000472   200011 470500                    LDP0    TOKEN_PTR$,,AUTO
         2 000473   200540 720100                    LXL0    ARG_INDX,,AUTO
         2 000474   000003 236110                    LDQ     3,X0,PR0
         2 000475   200536 756100                    STQ     ARG_PTR$,,AUTO

      811    15607        /*
      812    15608             ***** If an argument is optional and not specified
      813    15609                   then assume zero for it's value. Parse tree
      814    15610                   doesn't contain a value so don't try to chase it.
      815    15611                   For example, $SEARCH(A,B,,5) ...
      816    15612        */
      817    15613    4               IF ARG_PTR$ -> P$B.NSUBLKS = 0

  15613  2 000476   200536 471500                    LDP1    ARG_PTR$,,AUTO
         2 000477   100001 221100                    LDX1    1,,PR1
         2 000500   000530 601000 2                  TNZ     s:15637

      818    15614    4               THEN   /* Optional value not specified. Don't loop! */
      819    15615    5               DO;

      820    15616                               %PUSH_VALUE (VALUE=ZERO$,
      821    15617                                            CPOS="ARG_PTR$ -> P$B.CPOS",
      822    15618                                            TYPE=%XUE_DEFAULT#);

  15619  2 000501   200022 054100                    AOS     VAL_PTR,,AUTO

  15620  2 000502   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000503   000031 115007                    CMPA    25,DL
         2 000504   000514 604400 2                  TMOZ    s:15629

  15623  2 000505   000424 236000 1                  LDQ     E_STKOVFL
         2 000506   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 000507   300011 756100                    STQ     9,,PR3

  15624  2 000510   200020 721100                    LXL1    CHARPOS,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:135  
         2 000511   300010 741100                    STX1    8,,PR3

  15625  2 000512   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000513   000000 702211                    TSX2  ! 0,X1

  15629  2 000514   000000 236000 1                  LDQ     ZERO$
         2 000515   200057 756105                    STQ     VAL_STACK$,AL,AUTO

  15630  2 000516   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000517   000105 101400                    MRL     fill='000'O
         2 000520   000001 000004 3                  ADSC9   1                        cn=0,n=4
         2 000521   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1

  15631  2 000522   000001 735000                    ALS     1
         2 000523   200536 470500                    LDP0    ARG_PTR$,,AUTO
         2 000524   000105 101500                    MRL     fill='000'O
         2 000525   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4
         2 000526   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2

      823    15634    5               END;

  15634  2 000527   000571 710000 2                  TRA     s:15657

      824    15635    4               ELSE
      825    15636    5               DO;

      826    15637    5                   CALL X$EVALUATE (ARG_PTR$,XUE_ECB,MCB) ALTRET(E_EVAL);

  15637  2 000530   200005 236100                    LDQ     @MCB,,AUTO
         2 000531   201252 756100                    STQ     FPT_FID+72,,AUTO
         2 000532   200004 236100                    LDQ     @XUE_ECB,,AUTO
         2 000533   201251 756100                    STQ     FPT_FID+71,,AUTO
         2 000534   200536 633500                    EPPR3   ARG_PTR$,,AUTO
         2 000535   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 000536   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 000537   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000540   000000 701000 2                  TSX1    s:15
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:136  
         2 000541   000646 702000 2                  TSX2    E_EVAL

      827    15638                               %PUSH_VALUE (VALUE=XUE_ECB.OUT$,
      828    15639                                            CPOS="ARG_PTR$ -> P$B.CPOS",
      829    15640                                            TYPE=%XUE_UNKNOWN#);

  15641  2 000542   200022 054100                    AOS     VAL_PTR,,AUTO

  15642  2 000543   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000544   000031 115007                    CMPA    25,DL
         2 000545   000555 604400 2                  TMOZ    s:15651

  15645  2 000546   000424 236000 1                  LDQ     E_STKOVFL
         2 000547   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 000550   000011 756100                    STQ     9,,PR0

  15646  2 000551   200020 720100                    LXL0    CHARPOS,,AUTO
         2 000552   000010 740100                    STX0    8,,PR0

  15647  2 000553   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000554   000000 702211                    TSX2  ! 0,X1

  15651  2 000555   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 000556   000004 236100                    LDQ     4,,PR0
         2 000557   200057 756105                    STQ     VAL_STACK$,AL,AUTO

  15652  2 000560   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000561   000105 101400                    MRL     fill='000'O
         2 000562   000002 000004 3                  ADSC9   2                        cn=0,n=4
         2 000563   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1

  15653  2 000564   000001 735000                    ALS     1
         2 000565   200536 471500                    LDP1    ARG_PTR$,,AUTO
         2 000566   000105 101500                    MRL     fill='000'O
         2 000567   100002 000004                    ADSC9   2,,PR1                   cn=0,n=4
         2 000570   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:137  
      830    15656    5               END;

      831    15657    4           END;   /* Do index ... end */

  15657  2 000571   200540 054100                    AOS     ARG_INDX,,AUTO
         2 000572   200011 470500                    LDP0    TOKEN_PTR$,,AUTO
         2 000573   000001 236100                    LDQ     1,,PR0
         2 000574   000022 772000                    QRL     18
         2 000575   200540 116100                    CMPQ    ARG_INDX,,AUTO
         2 000576   000472 605400 2                  TPNZ    s:15606

      832    15658    3       END;  /* Do ... end */

      833    15659        /*
      834    15660             ***** If all the required parameters are not specified,
      835    15661                   fill in zeros ...
      836    15662        */
      837    15663    2       NUM_ARGS = FUNC.NTP(TOKEN);

  15663  2 000577   200025 235100                    LDA     TOKEN,,AUTO
         2 000600   000001 735000                    ALS     1
         2 000601   200535 471500                    LDP1    @NUM_ARGS,,AUTO
         2 000602   000100 101405                    MRL     fill='000'O
         2 000603   000450 200001 1                  ADSC9   FUNC,A                   cn=1,n=1
         2 000604   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4

      838    15664    3       DO ARG_INDX = TOKEN_PTR$ -> P$B.NSUBLKS TO NUM_ARGS - 1;

  15664  2 000605   200011 470500                    LDP0    TOKEN_PTR$,,AUTO
         2 000606   000001 236100                    LDQ     1,,PR0
         2 000607   000022 772000                    QRL     18
         2 000610   200540 756100                    STQ     ARG_INDX,,AUTO
         2 000611   000640 710000 2                  TRA     s:15681+1

      839    15665             %PUSH_VALUE (VALUE=ZERO$,TYPE=%XUE_DEFAULT#);

  15666  2 000612   200022 054100                    AOS     VAL_PTR,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:138  

  15667  2 000613   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000614   000031 115007                    CMPA    25,DL
         2 000615   000625 604400 2                  TMOZ    s:15676

  15670  2 000616   000424 236000 1                  LDQ     E_STKOVFL
         2 000617   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 000620   000011 756100                    STQ     9,,PR0

  15671  2 000621   200020 720100                    LXL0    CHARPOS,,AUTO
         2 000622   000010 740100                    STX0    8,,PR0

  15672  2 000623   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000624   000000 702211                    TSX2  ! 0,X1

  15676  2 000625   000000 236000 1                  LDQ     ZERO$
         2 000626   200057 756105                    STQ     VAL_STACK$,AL,AUTO

  15677  2 000627   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000630   000105 101400                    MRL     fill='000'O
         2 000631   000001 000004 3                  ADSC9   1                        cn=0,n=4
         2 000632   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1

  15678  2 000633   000001 735000                    ALS     1
         2 000634   000105 101500                    MRL     fill='000'O
         2 000635   200020 000004                    ADSC9   CHARPOS,,AUTO            cn=0,n=4
         2 000636   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2

      840    15681    3       END;

  15681  2 000637   200540 054100                    AOS     ARG_INDX,,AUTO
         2 000640   200535 470500                    LDP0    @NUM_ARGS,,AUTO
         2 000641   200540 236100                    LDQ     ARG_INDX,,AUTO
         2 000642   000000 116100                    CMPQ    0,,PR0
         2 000643   000612 604000 2                  TMI     s:15666

      841    15682    2       RETURN;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:139  

  15682  2 000644   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 000645   000001 702211                    TSX2  ! 1,X1

      842    15683    2   E_EVAL:
      843    15684    2       ALTRETURN;

  15684  2 000646   200534 221300       E_EVAL       LDX1  ! FID_RES+1,,AUTO
         2 000647   000000 702211                    TSX2  ! 0,X1

      844    15685    2   END GET_ARGS;
      845    15686        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:140  
      846    15687    1   REDUCE: PROC ALTRET;

  15687  2 000650   200534 741300       REDUCE       STX1  ! FID_RES+1,,AUTO
         2 000651   002334 710000 2                  TRA     s:16385

      847    15688        /***** Auto variables *****/
      848    15689    2   DCL VALUE SBIN WORD AUTO;
      849    15690    2   DCL TEMP1 SBIN WORD AUTO;
      850    15691    2   DCL TEMP2 SBIN WORD AUTO;
      851    15692    2   DCL K SBIN WORD AUTO;
      852    15693        /***** Character variables *****/
      853    15694    2   DCL 1  TEMPBUF AUTO,
      854    15695    2         2  SIZ UBIN BYTE UNAL,
      855    15696    2         2  TEXT CHAR(256) UNAL;
      856    15697        /***** Variables for use with SEARCH and VERIFY only *****/
      857    15698    2   DCL SEARCH_TABLE (0:511) UBIN BYTE UNAL AUTO;
      858    15699    2   DCL ZERO_511 (0:511) UBIN BYTE UNAL CONSTANT INIT (0*512);
      859    15700    2   DCL ONE_511 (0:511) UBIN BYTE UNAL CONSTANT INIT (1*512);
      860    15701    2   DCL WHERE UBIN WORD AUTO;
      861    15702    2   DCL RESULT UBIN WORD AUTO;
      862    15703        /***** Constants *****/
      863    15704    2   DCL SBIN_MAX SBIN WORD CONSTANT INIT (BITBIN('377777777777'O));
      864    15705    2   DCL SBIN_MIN SBIN WORD CONSTANT INIT (BITBIN('400000000001'O));
      865    15706        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:141  
      866    15707    2   FID_USERTHING: PROC ALTRET;

  15707  2 000652   201140 741300       FID_USERTHI* STX1  ! UBIN3+54,,AUTO

      867    15708        /*F*    NAME:          FID_USERTHING
      868    15709                PURPOSE:       Take a user-specified string and call M$FID
      869    15710                               with it.
      870    15711        */
      871    15712        /***** Fpts *****/
      872    15713          %FPT_FID (FPTN=FPT_FID,STCLASS=AUTO);
      873    15736        /*
      874    15737             ***** May not specify NULL file name ...
      875    15738        */
      876    15739    3       IF VAL_STACK$(VAL_PTR) -> X$STRING.SIZ = 0

  15739  2 000653   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 000654   200057 470510                    LDP0    VAL_STACK$,X0,AUTO
         2 000655   000100 101500                    MRL     fill='000'O
         2 000656   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000657   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 000660   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000661   000000 116003                    CMPQ    0,DU
         2 000662   000675 601000 2                  TNZ     s:15749

      877    15740    3       THEN
      878    15741    4       DO;                             /* Post err                           */

      879    15742    4           XUE_ECB.ERR = E_NULLSTRING;

  15742  2 000663   000436 236000 1                  LDQ     E_NULLSTRING
         2 000664   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 000665   000011 756100                    STQ     9,,PR0

      880    15743    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  15743  2 000666   200022 235100                    LDA     VAL_PTR,,AUTO
         2 000667   000001 735000                    ALS     1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:142  
         2 000670   000100 100505                    MLR     fill='000'O
         2 000671   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 000672   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

      881    15744    4           ALTRETURN;

  15744  2 000673   201140 221300                    LDX1  ! UBIN3+54,,AUTO
         2 000674   000000 702211                    TSX2  ! 0,X1

      882    15745    4       END;
      883    15746        /*
      884    15747             ***** Break up the FID ...
      885    15748        */
      886    15749    3       FPT_FID = CFPT_FID;

  15749  2 000675   000100 100400                    MLR     fill='000'O
         2 000676   000262 000140 1                  ADSC9   CFPT_FID                 cn=0,n=96
         2 000677   201142 000140                    ADSC9   FPT_FID,,AUTO            cn=0,n=96

      887    15750    3       FPT_FID.TEXTFID_ = VECTOR(VAL_STACK$(VAL_PTR) -> X$STRING.TEXT);

  15750  2 000700   200057 470510                    LDP0    VAL_STACK$,X0,AUTO
         2 000701   000100 101500                    MRL     fill='000'O
         2 000702   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000703   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 000704   201250 222100                    LDX2    FPT_FID+70,,AUTO
         2 000705   000000 635012                    EAA     0,X2
         2 000706   000002 771000                    ARL     2
         2 000707   000140 135007                    SBLA    96,DL
         2 000710   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 000711   201251 236100                    LDQ     FPT_FID+71,,AUTO
         2 000712   200000 036007                    ADLQ    65536,DL
         2 000713   201144 757100                    STAQ    FPT_FID+2,,AUTO

      888    15751    3       FPT_FID.NAME_ = VECTOR(FID_NAME);

  15751  2 000714   000003 235000 3                  LDA     3
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:143  
         2 000715   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 000716   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000717   000506 036003                    ADLQ    326,DU
         2 000720   201146 757100                    STAQ    FPT_FID+4,,AUTO

      889    15752    3       FPT_FID.ACCT_ = VECTOR(FID_ACCT);

  15752  2 000721   000004 235000 3                  LDA     4
         2 000722   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 000723   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000724   000516 036003                    ADLQ    334,DU
         2 000725   201150 757100                    STAQ    FPT_FID+6,,AUTO

      890    15753    3       FPT_FID.PASS_ = VECTOR(FID_PASS);

  15753  2 000726   000004 235000 3                  LDA     4
         2 000727   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 000730   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000731   000520 036003                    ADLQ    336,DU
         2 000732   201152 757100                    STAQ    FPT_FID+8,,AUTO

      891    15754    3       FPT_FID.SN_ = VECTOR(FID_SN);

  15754  2 000733   000005 235000 3                  LDA     5
         2 000734   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 000735   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000736   000524 036003                    ADLQ    340,DU
         2 000737   201154 757100                    STAQ    FPT_FID+10,,AUTO

      892    15755    3       FPT_FID.WSN_ = VECTOR(FID_WSN);

  15755  2 000740   000004 235000 3                  LDA     4
         2 000741   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 000742   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000743   000522 036003                    ADLQ    338,DU
         2 000744   201156 757100                    STAQ    FPT_FID+12,,AUTO

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:144  
      893    15756    3       FPT_FID.ASN_ = VECTOR(FID_ASN);

  15756  2 000745   777640 235007                    LDA     -96,DL
         2 000746   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 000747   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000750   000532 036003                    ADLQ    346,DU
         2 000751   201160 757100                    STAQ    FPT_FID+14,,AUTO

      894    15757    3       FPT_FID.RES_ = VECTOR(FID_RES);

  15757  2 000752   777640 235007                    LDA     -96,DL
         2 000753   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 000754   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000755   000533 036003                    ADLQ    347,DU
         2 000756   201162 757100                    STAQ    FPT_FID+16,,AUTO

      895    15758    3       FPT_FID.RESULTS_ = VECTOR(FID_RESULTS);

  15758  2 000757   000006 235000 3                  LDA     6
         2 000760   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 000761   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 000762   000474 036003                    ADLQ    316,DU
         2 000763   201164 757100                    STAQ    FPT_FID+18,,AUTO

      896    15759        /**/
      897    15760    3       CALL M$FID (FPT_FID) ALTRET(E_PMME);

  15760  2 000764   201142 630500                    EPPR0   FPT_FID,,AUTO
         2 000765   420001 713400                    CLIMB   alt,+8193
         2 000766   404400 401760                    pmme    nvectors=10
         2 000767   000772 702000 2                  TSX2    E_PMME

      898    15761    3       RETURN;

  15761  2 000770   201140 221300                    LDX1  ! UBIN3+54,,AUTO
         2 000771   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:145  
      899    15762        /**/
      900    15763    3   E_PMME:
      901    15764    3       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;

  15764  2 000772   000000 470400 xsym  E_PMME       LDP0    B$TCB$
         2 000773   000000 471500                    LDP1    0,,PR0
         2 000774   100102 236100                    LDQ     66,,PR1
         2 000775   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 000776   300011 756100                    STQ     9,,PR3

      902    15765    3       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  15765  2 000777   200022 235100                    LDA     VAL_PTR,,AUTO
         2 001000   000001 735000                    ALS     1
         2 001001   000100 100505                    MLR     fill='000'O
         2 001002   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 001003   300010 000002                    ADSC9   8,,PR3                   cn=0,n=2

      903    15766    3       XUE_ECB.ERR_DCB# = B$TCB.ALT$ -> B$ALT.DCB#;

  15766  2 001004   000000 471500                    LDP1    0,,PR0
         2 001005   100101 720100                    LXL0    65,,PR1
         2 001006   300010 440100                    SXL0    8,,PR3

      904    15767    3       ALTRETURN;

  15767  2 001007   201140 221300                    LDX1  ! UBIN3+54,,AUTO
         2 001010   000000 702211                    TSX2  ! 0,X1

      905    15768        /**/
      906    15769    3   END FID_USERTHING;
      907    15770        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:146  
      908    15771    2   OPEN_TEST_FILE: PROC (EXIST) ALTRET;

  15771  2 001011   201044 741300       OPEN_TEST_F* STX1  ! RESULT+1,,AUTO

      909    15772        /*F*    NAME:          OPEN_TEST_FILE
      910    15773                PURPOSE:       Open specified file in test mode to get
      911    15774                               important info returned in the dcb.
      912    15775        */
      913    15776        /***** Parameters *****/
      914    15777    3   DCL EXIST SBIN WORD;
      915    15778        /***** Fpts *****/
      916    15779          %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
      917    15888
      918    15889    3       CALL FID_USERTHING ALTRET(WASTE_EM);

  15889  2 001012   000652 701000 2                  TSX1    FID_USERTHING
         2 001013   001232 702000 2                  TSX2    WASTE_EM

      919    15890        /*
      920    15891             ***** $FID_xxx only work on DISK or LABELED tape files ...
      921    15892        */
      922    15893    3       IF DCBADDR(XUE_ECB.WORK_DCB#) = ADDR(NIL)

  15893  2 001014   000007 470400 3                  LDP0    7
         2 001015   000000 471500                    LDP1    0,,PR0
         2 001016   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 001017   300003 720100                    LXL0    3,,PR3
         2 001020   100000 236110                    LDQ     0,X0,PR1
         2 001021   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001022   001027 601000 2                  TNZ     s:15899

      923    15894    3       THEN   /* Wrong! */
      924    15895    4       DO;

      925    15896    4           XUE_ECB.ERR = E_ILLDCB;

  15896  2 001023   000447 236000 1                  LDQ     E_ILLDCB
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:147  
         2 001024   300011 756100                    STQ     9,,PR3

      926    15897    4           ALTRETURN;

  15897  2 001025   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001026   000000 702211                    TSX2  ! 0,X1

      927    15898    4       END;
      928    15899    3       IF FID_ASN ~= %FILE#

  15899  2 001027   200532 236100                    LDQ     FID_ASN,,AUTO
         2 001030   777000 376003                    ANQ     -512,DU
         2 001031   001000 116003                    CMPQ    512,DU
         2 001032   001046 600000 2                  TZE     s:15910
         2 001033   002000 116003                    CMPQ    1024,DU
         2 001034   001046 600000 2                  TZE     s:15910

      929    15900    3         AND FID_ASN ~= %TAPE#
      930    15901    3       THEN   /* Not allowed to open this file */
      931    15902    4       DO;

      932    15903    4           XUE_ECB.ERR = E_ILLFID;

  15903  2 001035   000437 236000 1                  LDQ     E_ILLFID
         2 001036   300011 756100                    STQ     9,,PR3

      933    15904    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  15904  2 001037   200022 235100                    LDA     VAL_PTR,,AUTO
         2 001040   000001 735000                    ALS     1
         2 001041   000100 100505                    MLR     fill='000'O
         2 001042   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 001043   300010 000002                    ADSC9   8,,PR3                   cn=0,n=2

      934    15905    4           ALTRETURN;

  15905  2 001044   201044 221300                    LDX1  ! RESULT+1,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:148  
         2 001045   000000 702211                    TSX2  ! 0,X1

      935    15906    4       END;
      936    15907        /*
      937    15908             ***** Open the specified file ...
      938    15909        */
      939    15910    3       FPT_OPEN = CFPT_OPEN;

  15910  2 001046   000100 100400                    MLR     fill='000'O
         2 001047   000322 000350 1                  ADSC9   CFPT_OPEN                cn=0,n=232
         2 001050   201046 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      940    15911    3       FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);

  15911  2 001051   000010 235000 3                  LDA     8
         2 001052   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 001053   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 001054   001112 036003                    ADLQ    586,DU
         2 001055   201046 757100                    STAQ    FPT_OPEN,,AUTO

      941    15912    3       FPT_OPEN.FPARAM_ = FPARAM_VECTOR;

  15912  2 001056   200014 237100                    LDAQ    FPARAM_VECTOR,,AUTO
         2 001057   201076 757100                    STAQ    UBIN3+20,,AUTO

      942    15913    3       FPT_OPEN.NAME_=VECTOR(FID_NAME);

  15913  2 001060   000003 235000 3                  LDA     3
         2 001061   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 001062   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 001063   000506 036003                    ADLQ    326,DU
         2 001064   201054 757100                    STAQ    UBIN3+2,,AUTO

      943    15914    3       IF FID_RESULTS.ACCT

  15914  2 001065   200474 236100                    LDQ     FID_RESULTS,,AUTO
         2 001066   200000 316003                    CANQ    65536,DU
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:149  
         2 001067   001075 600000 2                  TZE     s:15917

      944    15915    3       THEN
      945    15916    3           FPT_OPEN.ACCT_=VECTOR(FID_ACCT);

  15916  2 001070   000004 235000 3                  LDA     4
         2 001071   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 001072   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 001073   000516 036003                    ADLQ    334,DU
         2 001074   201072 757100                    STAQ    UBIN3+16,,AUTO

      946    15917    3       IF FID_RESULTS.PASS

  15917  2 001075   200474 236100                    LDQ     FID_RESULTS,,AUTO
         2 001076   100000 316003                    CANQ    32768,DU
         2 001077   001105 600000 2                  TZE     s:15920

      947    15918    3       THEN
      948    15919    3           FPT_OPEN.PASS_=VECTOR(FID_PASS);

  15919  2 001100   000004 235000 3                  LDA     4
         2 001101   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 001102   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 001103   000520 036003                    ADLQ    336,DU
         2 001104   201056 757100                    STAQ    UBIN3+4,,AUTO

      949    15920    3       IF FID_RESULTS.SN

  15920  2 001105   200474 236100                    LDQ     FID_RESULTS,,AUTO
         2 001106   040000 316003                    CANQ    16384,DU
         2 001107   001115 600000 2                  TZE     s:15923

      950    15921    3       THEN
      951    15922    3           FPT_OPEN.SN_=VECTOR(FID_SN);

  15922  2 001110   000005 235000 3                  LDA     5
         2 001111   201250 452500                    STP2    FPT_FID+70,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:150  
         2 001112   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 001113   000524 036003                    ADLQ    340,DU
         2 001114   201050 757100                    STAQ    VAR_VALUE,,AUTO

      952    15923    3       IF FID_RESULTS.WSN

  15923  2 001115   200474 236100                    LDQ     FID_RESULTS,,AUTO
         2 001116   020000 316003                    CANQ    8192,DU
         2 001117   001125 600000 2                  TZE     s:15926

      953    15924    3       THEN
      954    15925    3           FPT_OPEN.WSN_=VECTOR(FID_WSN);

  15925  2 001120   000004 235000 3                  LDA     4
         2 001121   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 001122   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 001123   000522 036003                    ADLQ    338,DU
         2 001124   201100 757100                    STAQ    UBIN3+22,,AUTO

      955    15926    3       IF FID_RESULTS.RES

  15926  2 001125   200474 236100                    LDQ     FID_RESULTS,,AUTO
         2 001126   004000 316003                    CANQ    2048,DU
         2 001127   001132 600000 2                  TZE     s:15929

      956    15927    3       THEN
      957    15928    3           FPT_OPEN.V.RES#=FID_RES;

  15928  2 001130   200533 236100                    LDQ     FID_RES,,AUTO
         2 001131   201116 756100                    STQ     UBIN3+36,,AUTO

      958    15929    3       FPT_OPEN.V.DCB#=XUE_ECB.WORK_DCB#;

  15929  2 001132   300003 720100                    LXL0    3,,PR3
         2 001133   201112 740100                    STX0    UBIN3+32,,AUTO

      959    15930    3       FPT_OPEN.V.ASN#=FID_ASN;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:151  

  15930  2 001134   200532 236100                    LDQ     FID_ASN,,AUTO
         2 001135   000033 772000                    QRL     27
         2 001136   201113 552104                    STBQ    UBIN3+33,'04'O,AUTO

      960    15931    3       FPT_OPEN.V.FUN#=%IN#;

  15931  2 001137   002000 236007                    LDQ     1024,DL
         2 001140   201113 552110                    STBQ    UBIN3+33,'10'O,AUTO

      961    15932    3       FPT_OPEN.V.INITZ.SCRUB# = %YES#;

  15932  2 001141   400000 236007                    LDQ     -131072,DL
         2 001142   201112 256100                    ORSQ    UBIN3+32,,AUTO

      962    15933    3       FPT_OPEN.V.OPER.TEST# = %YES#;

  15933  2 001143   020000 236007                    LDQ     8192,DL
         2 001144   201112 256100                    ORSQ    UBIN3+32,,AUTO

      963    15934    3       CALL M$OPEN(FPT_OPEN) ALTRET(E_OPEN);

  15934  2 001145   201046 630500                    EPPR0   FPT_OPEN,,AUTO
         2 001146   450000 713400                    CLIMB   alt,open
         2 001147   410400 401760                    pmme    nvectors=18
         2 001150   001156 702000 2                  TSX2    E_OPEN

      964    15935    3       EXIST = 1;                          /* Yes                                */

  15935  2 001151   000001 235007                    LDA     1,DL
         2 001152   201045 470500                    LDP0    @EXIST,,AUTO
         2 001153   000000 755100                    STA     0,,PR0

      965    15936    3       RETURN;

  15936  2 001154   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001155   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:152  

      966    15937        /**/
      967    15938    3   E_OPEN:
      968    15939    3       IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOACCESS

  15939  2 001156   000000 470400 xsym  E_OPEN       LDP0    B$TCB$
         2 001157   000000 471500                    LDP1    0,,PR0
         2 001160   100102 236100                    LDQ     66,,PR1
         2 001161   377770 376007                    ANQ     131064,DL
         2 001162   001640 116007                    CMPQ    928,DL
         2 001163   001200 601000 2                  TNZ     s:15946
         2 001164   200021 235100                    LDA     OP_PTR,,AUTO
         2 001165   000100 101505                    MRL     fill='000'O
         2 001166   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 001167   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 001170   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 001171   000060 116007                    CMPQ    48,DL
         2 001172   001200 601000 2                  TNZ     s:15946

      969    15940    3         AND OP_STACK(OP_PTR) = %XUE_$FID_EXIST#
      970    15941    3       THEN   /* It really does exist */
      971    15942    4       DO;

      972    15943    4           EXIST = 1;

  15943  2 001173   000001 236007                    LDQ     1,DL
         2 001174   201045 471500                    LDP1    @EXIST,,AUTO
         2 001175   100000 756100                    STQ     0,,PR1

      973    15944    4           RETURN;

  15944  2 001176   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001177   000001 702211                    TSX2  ! 1,X1

      974    15945    4       END;
      975    15946    3       IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOFILE /* FILE DOES NOT EXISY       */

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:153  
  15946  2 001200   000000 471500                    LDP1    0,,PR0
         2 001201   100102 236100                    LDQ     66,,PR1
         2 001202   377770 376007                    ANQ     131064,DL
         2 001203   001610 116007                    CMPQ    904,DL
         2 001204   001213 600000 2                  TZE     s:15952
         2 001205   002200 116007                    CMPQ    1152,DL
         2 001206   001213 600000 2                  TZE     s:15952
         2 001207   002170 116007                    CMPQ    1144,DL
         2 001210   001213 600000 2                  TZE     s:15952
         2 001211   001520 116007                    CMPQ    848,DL
         2 001212   001217 601000 2                  TNZ     s:15955

      976    15947    3         OR B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$SETDOWN /* PACKSET NOT READY       */
      977    15948    3         OR B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$XCLSET /* PACKSET IS BUSY          */
      978    15949    3         OR B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NONEWU /* PACKSET BEING DISMOUNTED */
      979    15950    3       THEN
      980    15951    4       DO;   /* Set flag and return */

      981    15952    4           EXIST = 0;                /* No                                 */

  15952  2 001213   201045 473500                    LDP3    @EXIST,,AUTO
         2 001214   300000 450100                    STZ     0,,PR3

      982    15953    4           RETURN;

  15953  2 001215   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001216   000001 702211                    TSX2  ! 1,X1

      983    15954    4       END;   /* Do ... end */
      984    15955    3       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;

  15955  2 001217   100102 236100                    LDQ     66,,PR1
         2 001220   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 001221   300011 756100                    STQ     9,,PR3

      985    15956    3       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:154  
  15956  2 001222   200022 235100                    LDA     VAL_PTR,,AUTO
         2 001223   000001 735000                    ALS     1
         2 001224   000100 100505                    MLR     fill='000'O
         2 001225   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 001226   300010 000002                    ADSC9   8,,PR3                   cn=0,n=2

      986    15957    3       XUE_ECB.ERR_DCB# = B$TCB.ALT$ -> B$ALT.DCB#;

  15957  2 001227   000000 471500                    LDP1    0,,PR0
         2 001230   100101 720100                    LXL0    65,,PR1
         2 001231   300010 440100                    SXL0    8,,PR3

  15957  2 001232                       WASTE_EM     null
      987    15958    3   WASTE_EM: ;
      988    15959    3       ALTRETURN;

  15959  2 001232   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001233   000000 702211                    TSX2  ! 0,X1

      989    15960    3   END OPEN_TEST_FILE;
      990    15961        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:155  
      991    15962    2   PROCESS_INPUT: PROC ALTRET;

  15962  2 001234   201044 741300       PROCESS_INP* STX1  ! RESULT+1,,AUTO

      992    15963        /***** Local variables *****/
      993    15964    3   DCL L_INDEX SBIN WORD AUTO;
      994    15965    3   DCL R_INDEX SBIN WORD AUTO;
      995    15966    3   DCL START SBIN WORD AUTO;
      996    15967        /**/
      997    15968    3       IF TEMPBUF.SIZ = 0

  15968  2 001235   200541 236100                    LDQ     TEMPBUF,,AUTO
         2 001236   777000 316003                    CANQ    -512,DU
         2 001237   001241 601000 2                  TNZ     s:15974

      998    15969    3       THEN /* Null string */
      999    15970    3           RETURN;

  15970  2 001240   000001 702211                    TSX2  ! 1,X1

     1000    15971        /*
     1001    15972             ***** Look for quotes ...
     1002    15973        */
     1003    15974    3       CALL INDEX (L_INDEX,'''',TEMPBUF.TEXT) ALTRET(STRIP_BLANKS);

  15974  2 001241   000000 124500                    SCM     mask='000'O
         2 001242   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256
         2 001243   000011 000001 3                  ADSC9   9                        cn=0,n=1
         2 001244   201045 000100                    ARG     L_INDEX,,AUTO
         2 001245   001417 606400 2                  TTN     STRIP_BLANKS

     1004    15975        /*
     1005    15976             ***** If only one quote then not a quote string.
     1006    15977                   Just a string with a quote. Strip the blanks ...
     1007    15978        */
     1008    15979    3       CALL INDEX1R (R_INDEX,'''',TEMPBUF.TEXT);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:156  
  15979  2 001246   000000 125500                    SCMR    mask='000'O
         2 001247   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256
         2 001250   000011 000001 3                  ADSC9   9                        cn=0,n=1
         2 001251   201046 000100                    ARG     R_INDEX,,AUTO
         2 001252   001255 606400 2                  TTN     s:15980
         2 001253   000377 236007                    LDQ     255,DL
         2 001254   201046 156100                    SSQ     R_INDEX,,AUTO

     1009    15980    3       IF L_INDEX = R_INDEX

  15980  2 001255   201045 236100                    LDQ     L_INDEX,,AUTO
         2 001256   201046 116100                    CMPQ    R_INDEX,,AUTO
         2 001257   001417 600000 2                  TZE     STRIP_BLANKS

     1010    15981    3       THEN   /* Same quote */
     1011    15982    3           GOTO STRIP_BLANKS;
     1012    15983        /*
     1013    15984             ***** Make sure no garbage surrounding quotes ...
     1014    15985        */
     1015    15986    3       IF L_INDEX ~= 0

  15986  2 001260   000000 116003                    CMPQ    0,DU
         2 001261   001276 600000 2                  TZE     s:15994
         2 001262   777777 620006                    EAX0    -1,QL
         2 001263   040000 106540                    CMPC    fill='040'O
         2 001264   200541 200010                    ADSC9   TEMPBUF,,AUTO            cn=1,n=*X0
         2 001265   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001266   001276 600000 2                  TZE     s:15994

     1016    15987    3         AND SUBSTR(TEMPBUF.TEXT,0,L_INDEX-1) ~= ' '
     1017    15988    3       THEN   /* Garbage */
     1018    15989    4       DO;

     1019    15990    4           XUE_ECB.ERR = E_ILLINPUT;

  15990  2 001267   000430 236000 1                  LDQ     E_ILLINPUT
         2 001270   200004 470500                    LDP0    @XUE_ECB,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:157  
         2 001271   000011 756100                    STQ     9,,PR0

     1020    15991    4           XUE_ECB.ERR_POS# = L_INDEX;

  15991  2 001272   201045 721100                    LXL1    L_INDEX,,AUTO
         2 001273   000010 741100                    STX1    8,,PR0

     1021    15992    4           ALTRETURN;

  15992  2 001274   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001275   000000 702211                    TSX2  ! 0,X1

     1022    15993    4       END;
     1023    15994    3       IF R_INDEX+1 < TEMPBUF.SIZ

  15994  2 001276   200541 236100                    LDQ     TEMPBUF,,AUTO
         2 001277   000033 772000                    QRL     27
         2 001300   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 001301   201046 236100                    LDQ     R_INDEX,,AUTO
         2 001302   000001 036007                    ADLQ    1,DL
         2 001303   201250 116100                    CMPQ    FPT_FID+70,,AUTO
         2 001304   001324 605000 2                  TPL     s:16005
         2 001305   201046 720100                    LXL0    R_INDEX,,AUTO
         2 001306   777400 620010                    EAX0    -256,X0
         2 001307   777777 660003                    ERX0    -1,DU
         2 001310   201046 235100                    LDA     R_INDEX,,AUTO
         2 001311   040000 106545                    CMPC    fill='040'O
         2 001312   200541 400010                    ADSC9   TEMPBUF,A,AUTO           cn=2,n=*X0
         2 001313   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001314   001324 600000 2                  TZE     s:16005

     1024    15995    3         AND SUBSTR(TEMPBUF.TEXT,R_INDEX+1) ~= ' '
     1025    15996    3       THEN   /* Garbage */
     1026    15997    4       DO;

     1027    15998    4           XUE_ECB.ERR = E_ILLINPUT;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:158  
  15998  2 001315   000430 236000 1                  LDQ     E_ILLINPUT
         2 001316   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 001317   000011 756100                    STQ     9,,PR0

     1028    15999    4           XUE_ECB.ERR_POS# = L_INDEX;

  15999  2 001320   201045 721100                    LXL1    L_INDEX,,AUTO
         2 001321   000010 741100                    STX1    8,,PR0

     1029    16000    4           ALTRETURN;

  16000  2 001322   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001323   000000 702211                    TSX2  ! 0,X1

     1030    16001    4       END;
     1031    16002        /*
     1032    16003             ***** Process ...
     1033    16004        */
     1034    16005    3       IF L_INDEX+1 = R_INDEX

  16005  2 001324   201045 236100                    LDQ     L_INDEX,,AUTO
         2 001325   000001 036007                    ADLQ    1,DL
         2 001326   201046 116100                    CMPQ    R_INDEX,,AUTO
         2 001327   001333 601000 2                  TNZ     s:16014

     1035    16006    3       THEN   /* Null string */
     1036    16007    4       DO;

     1037    16008    4           TEMPBUF.SIZ = 0;

  16008  2 001330   000000 236003                    LDQ     0,DU
         2 001331   200541 552140                    STBQ    TEMPBUF,'40'O,AUTO

     1038    16009    4           RETURN;

  16009  2 001332   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:159  
     1039    16010    4       END;
     1040    16011        /*
     1041    16012             ***** Strip leading and trailing quotes ...
     1042    16013        */
     1043    16014    3       TEMPBUF.TEXT = SUBSTR(TEMPBUF.TEXT,L_INDEX+1,R_INDEX-(L_INDEX+1));

  16014  2 001333   201046 236100                    LDQ     R_INDEX,,AUTO
         2 001334   201045 136100                    SBLQ    L_INDEX,,AUTO
         2 001335   777777 620006                    EAX0    -1,QL
         2 001336   201045 235100                    LDA     L_INDEX,,AUTO
         2 001337   040100 100545                    MLR     fill='040'O
         2 001340   200541 400010                    ADSC9   TEMPBUF,A,AUTO           cn=2,n=*X0
         2 001341   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256

     1044    16015    3       TEMPBUF.SIZ = R_INDEX - (L_INDEX+1);

  16015  2 001342   201046 236100                    LDQ     R_INDEX,,AUTO
         2 001343   201045 136100                    SBLQ    L_INDEX,,AUTO
         2 001344   000001 136007                    SBLQ    1,DL
         2 001345   000033 736000                    QLS     27
         2 001346   200541 552140                    STBQ    TEMPBUF,'40'O,AUTO

     1045    16016        /*
     1046    16017             ***** Look for imbedded quotes ...
     1047    16018        */
     1048    16019    3       START = 0;

  16019  2 001347   201047 450100                    STZ     START,,AUTO

     1049    16020    4       DO WHILE (%YES#);

     1050    16021    4           CALL INDEX (L_INDEX,'''',TEMPBUF.TEXT,START) ALTRET(BACK);

  16021  2 001350   201047 720100                    LXL0    START,,AUTO
         2 001351   777377 620010                    EAX0    -257,X0
         2 001352   777777 660003                    ERX0    -1,DU
         2 001353   201047 236100                    LDQ     START,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:160  
         2 001354   201047 235100                    LDA     START,,AUTO
         2 001355   000000 124545                    SCM     mask='000'O
         2 001356   200541 200010                    ADSC9   TEMPBUF,A,AUTO           cn=1,n=*X0
         2 001357   000011 000001 3                  ADSC9   9                        cn=0,n=1
         2 001360   201045 000100                    ARG     L_INDEX,,AUTO
         2 001361   201045 056100                    ASQ     L_INDEX,,AUTO
         2 001362   001415 606400 2                  TTN     BACK

     1051    16022        /*
     1052    16023             ***** If the next character is a quote then
     1053    16024                   strip one out. Otherwise its an error ...
     1054    16025        */
     1055    16026    4           IF SUBSTR(TEMPBUF.TEXT,L_INDEX+1,1) = ''''

  16026  2 001363   201045 236100                    LDQ     L_INDEX,,AUTO
         2 001364   040000 106506                    CMPC    fill='040'O
         2 001365   200541 400001                    ADSC9   TEMPBUF,Q,AUTO           cn=2,n=1
         2 001366   000011 000001 3                  ADSC9   9                        cn=0,n=1
         2 001367   001406 601000 2                  TNZ     s:16036

     1056    16027    4           THEN   /* Double quotes */
     1057    16028    5           DO;

     1058    16029    5               CALL INSERT (TEMPBUF.TEXT,L_INDEX,,

  16029  2 001370   777400 621006                    EAX1    -256,QL
         2 001371   777777 661003                    ERX1    -1,DU
         2 001372   777377 622006                    EAX2    -257,QL
         2 001373   777777 662003                    ERX2    -1,DU
         2 001374   040146 100546                    MLR     fill='040'O
         2 001375   200541 400011                    ADSC9   TEMPBUF,Q,AUTO           cn=2,n=*X1
         2 001376   200541 200012                    ADSC9   TEMPBUF,Q,AUTO           cn=1,n=*X2

     1059    16030    5                 SUBSTR(TEMPBUF.TEXT,L_INDEX+1));
     1060    16031    5               TEMPBUF.SIZ = TEMPBUF.SIZ - 1;

  16031  2 001377   200541 236100                    LDQ     TEMPBUF,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:161  
         2 001400   777000 036003                    ADLQ    -512,DU
         2 001401   200541 552140                    STBQ    TEMPBUF,'40'O,AUTO

     1061    16032    5               START = L_INDEX + 1;

  16032  2 001402   201045 236100                    LDQ     L_INDEX,,AUTO
         2 001403   000001 036007                    ADLQ    1,DL
         2 001404   201047 756100                    STQ     START,,AUTO

     1062    16033    5           END;

  16033  2 001405   001350 710000 2                  TRA     s:16021

     1063    16034    4           ELSE   /* Error */
     1064    16035    5           DO;

     1065    16036    5               XUE_ECB.ERR = E_ILLQUOTE;

  16036  2 001406   000431 236000 1                  LDQ     E_ILLQUOTE
         2 001407   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 001410   000011 756100                    STQ     9,,PR0

     1066    16037    5               XUE_ECB.ERR_POS# = L_INDEX;

  16037  2 001411   201045 721100                    LXL1    L_INDEX,,AUTO
         2 001412   000010 741100                    STX1    8,,PR0

     1067    16038    5               ALTRETURN;

  16038  2 001413   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001414   000000 702211                    TSX2  ! 0,X1

     1068    16039    5           END;
     1069    16040    4       END; /* Do while ... end */

     1070    16041        /*
     1071    16042             ***** Return ...
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:162  
     1072    16043        */
     1073    16044    3   BACK:
     1074    16045    3       RETURN;

  16045  2 001415   201044 221300       BACK         LDX1  ! RESULT+1,,AUTO
         2 001416   000001 702211                    TSX2  ! 1,X1

     1075    16046        /*
     1076    16047             ***** Strip the leading and trailing blanks from TEMPBUF ...
     1077    16048        */
     1078    16049    3   STRIP_BLANKS:
     1079    16050    3       CALL X$STRIP_BLANKS (ADDR(TEMPBUF));

  16050  2 001417   200541 630500       STRIP_BLANKS EPPR0   TEMPBUF,,AUTO
         2 001420   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 001421   201250 631500                    EPPR1   FPT_FID+70,,AUTO
         2 001422   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 001423   201251 630500                    EPPR0   FPT_FID+71,,AUTO
         2 001424   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001425   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 001426   000000 011000                    NOP     0

     1080    16051    3       RETURN;

  16051  2 001427   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001430   000001 702211                    TSX2  ! 1,X1

     1081    16052    3   END PROCESS_INPUT;
     1082    16053        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:163  
     1083    16054    2   CHK_BOUNDS: PROC (FUN_CODE, BOUND1, BOUND2) ALTRET;

  16054  2 001431   201044 741300       CHK_BOUNDS   STX1  ! RESULT+1,,AUTO

     1084    16055        /*F*      NAME:       CHK_BOUNDS
     1085    16056                  PURPOSE:    To make sure that specified bound are allowed
     1086    16057                              for the string to be operated upon.
     1087    16058        */
     1088    16059        /***** Parameters *****/
     1089    16060    3   DCL FUN_CODE SBIN WORD;
     1090    16061    3   DCL BOUND1 SBIN WORD;
     1091    16062    3   DCL BOUND2 SBIN WORD;
     1092    16063        /***** Local variables *****/
     1093    16064    3   DCL SOURCE_SIZE SBIN WORD AUTO;
     1094    16065        /*
     1095    16066             ***** Get the size of the SOURCE STRING ...
     1096    16067                   Remember that strings are ZERO origin so that
     1097    16068                  any comparisons with size must recognize this.
     1098    16069                   Usually the correct value is SOURCE_SIZE-1.
     1099    16070        */
     1100    16071    4       DO CASE (FUN_CODE);

  16071  2 001432   201045 470500                    LDP0    @FUN_CODE,,AUTO
         2 001433   000000 235100                    LDA     0,,PR0
         2 001434   000063 135007                    SBLA    51,DL
         2 001435   000023 115007                    CMPA    19,DL
         2 001436   001440 602005 2                  TNC     s:16071+6,AL
         2 001437   001476 710000 2                  TRA     s:16082
         2 001440   001463 710000 2                  TRA     s:16075
         2 001441   001476 710000 2                  TRA     s:16082
         2 001442   001476 710000 2                  TRA     s:16082
         2 001443   001476 710000 2                  TRA     s:16082
         2 001444   001476 710000 2                  TRA     s:16082
         2 001445   001476 710000 2                  TRA     s:16082
         2 001446   001476 710000 2                  TRA     s:16082
         2 001447   001476 710000 2                  TRA     s:16082
         2 001450   001476 710000 2                  TRA     s:16082
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:164  
         2 001451   001476 710000 2                  TRA     s:16082
         2 001452   001476 710000 2                  TRA     s:16082
         2 001453   001476 710000 2                  TRA     s:16082
         2 001454   001463 710000 2                  TRA     s:16075
         2 001455   001476 710000 2                  TRA     s:16082
         2 001456   001471 710000 2                  TRA     s:16077
         2 001457   001476 710000 2                  TRA     s:16082
         2 001460   001476 710000 2                  TRA     s:16082
         2 001461   001476 710000 2                  TRA     s:16082
         2 001462   001463 710000 2                  TRA     s:16075

     1101    16072    4       CASE (%XUE_$INDEX#,

     1102    16073    4         %XUE_$SEARCH#,
     1103    16074    4         %XUE_$VERIFY#);
     1104    16075    4           SOURCE_SIZE = VAL_STACK$(VAL_PTR-3) -> X$STRING.SIZ;

  16075  2 001463   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 001464   200054 471510                    LDP1    NUM_TO_POP_STACK+4,X0,AUTO
         2 001465   000100 101500                    MRL     fill='000'O
         2 001466   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 001467   201050 000004                    ADSC9   SOURCE_SIZE,,AUTO        cn=0,n=4
         2 001470   001476 710000 2                  TRA     s:16082

     1105    16076    4       CASE (%XUE_$SUBSTR#);

     1106    16077    4           SOURCE_SIZE = VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ;

  16077  2 001471   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 001472   200055 471510                    LDP1    NUM_TO_POP_STACK+5,X0,AUTO
         2 001473   000100 101500                    MRL     fill='000'O
         2 001474   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 001475   201050 000004                    ADSC9   SOURCE_SIZE,,AUTO        cn=0,n=4

     1107    16078    4       END; /* Do case (FUN_CODE) ... end */

     1108    16079        /*
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:165  
     1109    16080             ***** Convert BOUND1, BOUND2 ...
     1110    16081        */
     1111    16082    3       CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),BOUND2)

  16082  2 001476   201047 236100                    LDQ     @BOUND2,,AUTO
         2 001477   201251 756100                    STQ     FPT_FID+71,,AUTO
         2 001500   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 001501   200057 631510                    EPPR1   VAL_STACK$,X0,AUTO
         2 001502   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 001503   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 001504   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001505   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 001506   001510 702000 2                  TSX2    s:16084
         2 001507   001522 710000 2                  TRA     s:16088

     1112    16083    4       WHENALTRETURN DO;

     1113    16084    4           XUE_ECB.ERR = E_NONDECIMAL;

  16084  2 001510   000434 236000 1                  LDQ     E_NONDECIMAL
         2 001511   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 001512   000011 756100                    STQ     9,,PR0

     1114    16085    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16085  2 001513   200022 235100                    LDA     VAL_PTR,,AUTO
         2 001514   000001 735000                    ALS     1
         2 001515   000100 100505                    MLR     fill='000'O
         2 001516   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 001517   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     1115    16086    4           ALTRETURN;

  16086  2 001520   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001521   000000 702211                    TSX2  ! 0,X1

     1116    16087    4       END;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:166  
     1117    16088    3       CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-1),BOUND1)

  16088  2 001522   201046 236100                    LDQ     @BOUND1,,AUTO
         2 001523   201251 756100                    STQ     FPT_FID+71,,AUTO
         2 001524   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 001525   200056 630510                    EPPR0   NUM_TO_POP_STACK+6,X0,AUTO
         2 001526   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 001527   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 001530   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001531   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 001532   001534 702000 2                  TSX2    s:16090
         2 001533   001546 710000 2                  TRA     s:16097

     1118    16089    4       WHENALTRETURN DO;

     1119    16090    4           XUE_ECB.ERR = E_NONDECIMAL;

  16090  2 001534   000434 236000 1                  LDQ     E_NONDECIMAL
         2 001535   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 001536   000011 756100                    STQ     9,,PR0

     1120    16091    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR-1);

  16091  2 001537   200022 235100                    LDA     VAL_PTR,,AUTO
         2 001540   000001 735000                    ALS     1
         2 001541   000100 100505                    MLR     fill='000'O
         2 001542   200156 400002                    ADSC9   VAL_TYPE+12,A,AUTO       cn=2,n=2
         2 001543   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     1121    16092    4           ALTRETURN;

  16092  2 001544   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001545   000000 702211                    TSX2  ! 0,X1

     1122    16093    4       END;
     1123    16094        /*
     1124    16095             ***** BOUND1 must be within the string, BOUND2 must be positive.
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:167  
     1125    16096        */
     1126    16097    3       IF (BOUND1 < 0) OR (BOUND1 > SOURCE_SIZE)

  16097  2 001546   201046 470500                    LDP0    @BOUND1,,AUTO
         2 001547   000000 235100                    LDA     0,,PR0
         2 001550   001554 604000 2                  TMI     s:16100
         2 001551   000000 236100                    LDQ     0,,PR0
         2 001552   201050 116100                    CMPQ    SOURCE_SIZE,,AUTO
         2 001553   001566 604400 2                  TMOZ    s:16104

     1127    16098    3       THEN
     1128    16099    4       DO;

     1129    16100    4           XUE_ECB.ERR = E_BIGSTR;

  16100  2 001554   000425 236000 1                  LDQ     E_BIGSTR
         2 001555   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 001556   100011 756100                    STQ     9,,PR1

     1130    16101    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR-1);

  16101  2 001557   200022 235100                    LDA     VAL_PTR,,AUTO
         2 001560   000001 735000                    ALS     1
         2 001561   000100 100505                    MLR     fill='000'O
         2 001562   200156 400002                    ADSC9   VAL_TYPE+12,A,AUTO       cn=2,n=2
         2 001563   100010 000002                    ADSC9   8,,PR1                   cn=0,n=2

     1131    16102    4           ALTRETURN;

  16102  2 001564   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001565   000000 702211                    TSX2  ! 0,X1

     1132    16103    4       END;
     1133    16104    3       IF BOUND2 < 0

  16104  2 001566   201047 471500                    LDP1    @BOUND2,,AUTO
         2 001567   100000 235100                    LDA     0,,PR1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:168  
         2 001570   001603 605000 2                  TPL     s:16116

     1134    16105    3       THEN
     1135    16106    4       DO;

     1136    16107    4           XUE_ECB.ERR = E_BIGSTR;

  16107  2 001571   000425 236000 1                  LDQ     E_BIGSTR
         2 001572   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 001573   300011 756100                    STQ     9,,PR3

     1137    16108    4           XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16108  2 001574   200022 235100                    LDA     VAL_PTR,,AUTO
         2 001575   000001 735000                    ALS     1
         2 001576   000100 100505                    MLR     fill='000'O
         2 001577   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 001600   300010 000002                    ADSC9   8,,PR3                   cn=0,n=2

     1138    16109    4           ALTRETURN;

  16109  2 001601   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001602   000000 702211                    TSX2  ! 0,X1

     1139    16110    4       END;
     1140    16111        /*
     1141    16112             ***** Check BOUND2
     1142    16113                   BOUND2 is index of last char for $INDEX, $SEARCH, etc.
     1143    16114                   BOUND2 is number of chars for $SUBSTR
     1144    16115        */
     1145    16116    4       DO CASE (FUN_CODE);

  16116  2 001603   201045 473500                    LDP3    @FUN_CODE,,AUTO
         2 001604   300000 235100                    LDA     0,,PR3
         2 001605   000063 135007                    SBLA    51,DL
         2 001606   000023 115007                    CMPA    19,DL
         2 001607   001611 602005 2                  TNC     s:16116+6,AL
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:169  
         2 001610   001676 710000 2                  TRA     s:16137
         2 001611   001634 710000 2                  TRA     s:16120
         2 001612   001676 710000 2                  TRA     s:16137
         2 001613   001676 710000 2                  TRA     s:16137
         2 001614   001676 710000 2                  TRA     s:16137
         2 001615   001676 710000 2                  TRA     s:16137
         2 001616   001676 710000 2                  TRA     s:16137
         2 001617   001676 710000 2                  TRA     s:16137
         2 001620   001676 710000 2                  TRA     s:16137
         2 001621   001676 710000 2                  TRA     s:16137
         2 001622   001676 710000 2                  TRA     s:16137
         2 001623   001676 710000 2                  TRA     s:16137
         2 001624   001676 710000 2                  TRA     s:16137
         2 001625   001634 710000 2                  TRA     s:16120
         2 001626   001676 710000 2                  TRA     s:16137
         2 001627   001661 710000 2                  TRA     s:16132
         2 001630   001676 710000 2                  TRA     s:16137
         2 001631   001676 710000 2                  TRA     s:16137
         2 001632   001676 710000 2                  TRA     s:16137
         2 001633   001634 710000 2                  TRA     s:16120

     1146    16117    4       CASE (%XUE_$INDEX#,

     1147    16118    4         %XUE_$SEARCH#,
     1148    16119    4         %XUE_$VERIFY#);
     1149    16120    4           IF BOUND2 > (SOURCE_SIZE - 1)

  16120  2 001634   100000 236100                    LDQ     0,,PR1
         2 001635   201050 116100                    CMPQ    SOURCE_SIZE,,AUTO
         2 001636   001641 605000 2                  TPL     s:16123
         2 001637   000000 116003                    CMPQ    0,DU
         2 001640   001644 601000 2                  TNZ     s:16124

     1150    16121    4             OR BOUND2 = 0
     1151    16122    4           THEN   /* Up to end of string implied */
     1152    16123    4               BOUND2 = SOURCE_SIZE - 1;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:170  
  16123  2 001641   201050 235100                    LDA     SOURCE_SIZE,,AUTO
         2 001642   000001 135007                    SBLA    1,DL
         2 001643   100000 755100                    STA     0,,PR1

     1153    16124    4           IF BOUND2 < BOUND1

  16124  2 001644   100000 236100                    LDQ     0,,PR1
         2 001645   000000 116100                    CMPQ    0,,PR0
         2 001646   001676 605000 2                  TPL     s:16137

     1154    16125    4           THEN   /* Beginning index is past ending index */
     1155    16126    5           DO;

     1156    16127    5               XUE_ECB.ERR = E_ILLINDEX;

  16127  2 001647   000426 236000 1                  LDQ     E_ILLINDEX
         2 001650   200004 474500                    LDP4    @XUE_ECB,,AUTO
         2 001651   400011 756100                    STQ     9,,PR4

     1157    16128    5               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16128  2 001652   200022 235100                    LDA     VAL_PTR,,AUTO
         2 001653   000001 735000                    ALS     1
         2 001654   000100 100505                    MLR     fill='000'O
         2 001655   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 001656   400010 000002                    ADSC9   8,,PR4                   cn=0,n=2

     1158    16129    5               ALTRETURN;

  16129  2 001657   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001660   000000 702211                    TSX2  ! 0,X1

     1159    16130    5           END;
     1160    16131    4       CASE (%XUE_$SUBSTR#);

     1161    16132    4           IF BOUND1 + BOUND2 > SOURCE_SIZE /* LEN is past end of string         */

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:171  
  16132  2 001661   100000 036100                    ADLQ    0,,PR1
         2 001662   201050 116100                    CMPQ    SOURCE_SIZE,,AUTO
         2 001663   001673 605400 2                  TPNZ    s:16135
         2 001664   200022 236100                    LDQ     VAL_PTR,,AUTO
         2 001665   000100 101506                    MRL     fill='000'O
         2 001666   200142 000001                    ADSC9   VAL_TYPE,Q,AUTO          cn=0,n=1
         2 001667   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 001670   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 001671   000117 116007                    CMPQ    79,DL
         2 001672   001676 601000 2                  TNZ     s:16137

     1162    16133    4             OR VAL_TYPE(VAL_PTR) = %XUE_DEFAULT# /* Default LEN field            */
     1163    16134    4           THEN   /* Up to end of string implied */
     1164    16135    4               BOUND2 = SOURCE_SIZE - BOUND1;

  16135  2 001673   201050 236100                    LDQ     SOURCE_SIZE,,AUTO
         2 001674   000000 136100                    SBLQ    0,,PR0
         2 001675   100000 756100                    STQ     0,,PR1

     1165    16136    4       END; /* Do case (FUN_CODE) ... END */

     1166    16137    3       RETURN;

  16137  2 001676   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001677   000001 702211                    TSX2  ! 1,X1

     1167    16138    3   END CHK_BOUNDS;
     1168    16139        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:172  
     1169    16140    2   CHK_ADD: PROC (ADDEND1, ADDEND2, SUM) ALTRET;

  16140  2 001700   201044 741300       CHK_ADD      STX1  ! RESULT+1,,AUTO

     1170    16141        /*F*    NAME:     CHK_ADD
     1171    16142                PURPOSE:  To perform addition and catch any overflows.
     1172    16143                DESCRIPTION: Overflow can occure only if both addends have
     1173    16144                             the same sign.
     1174    16145        */
     1175    16146        /***** Parameters *****/
     1176    16147    3   DCL ADDEND1 SBIN WORD;
     1177    16148    3   DCL ADDEND2 SBIN WORD;
     1178    16149    3   DCL SUM SBIN WORD;
     1179    16150        /***** Local variables *****/
     1180    16151    3   DCL UBIN1 UBIN WORD AUTO;
     1181    16152    3   DCL UBIN2 UBIN WORD AUTO;
     1182    16153    3   DCL UBIN3 UBIN WORD AUTO;
     1183    16154        /*
     1184    16155             ***** Make sure that both addends are legal numbers ..
     1185    16156        */
     1186    16157    3       IF ADDEND1 < SBIN_MIN

  16157  2 001701   201045 470500                    LDP0    @ADDEND1,,AUTO
         2 001702   000000 236100                    LDQ     0,,PR0
         2 001703   001117 116000 1                  CMPQ    SBIN_MIN
         2 001704   001763 604000 2                  TMI     E_OVERFLOW

     1187    16158    3       THEN
     1188    16159    3           GOTO E_OVERFLOW;
     1189    16160    3       IF ADDEND2 < SBIN_MIN

  16160  2 001705   201046 471500                    LDP1    @ADDEND2,,AUTO
         2 001706   100000 236100                    LDQ     0,,PR1
         2 001707   001117 116000 1                  CMPQ    SBIN_MIN
         2 001710   001763 604000 2                  TMI     E_OVERFLOW

     1190    16161    3       THEN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:173  
     1191    16162    3           GOTO E_OVERFLOW;
     1192    16163        /*
     1193    16164             ***** Different check required depending upon sign ...
     1194    16165        */
     1195    16166    3       IF ADDEND1 >=0 AND ADDEND2 >=0

  16166  2 001711   000000 235100                    LDA     0,,PR0
         2 001712   001730 604000 2                  TMI     s:16183
         2 001713   000000 116003                    CMPQ    0,DU
         2 001714   001730 604000 2                  TMI     s:16183

     1196    16167    3       THEN
     1197    16168    4       DO;   /* Both positive */

     1198    16169    4           UBIN1 = ADDEND1;

  16169  2 001715   201050 755100                    STA     UBIN1,,AUTO

     1199    16170    4           UBIN2 = ADDEND2;

  16170  2 001716   201051 756100                    STQ     UBIN2,,AUTO

     1200    16171    4           UBIN3 = UBIN1 + UBIN2;

  16171  2 001717   201050 036100                    ADLQ    UBIN1,,AUTO
         2 001720   201052 756100                    STQ     UBIN3,,AUTO

     1201    16172    4           IF UBIN3 <= SBIN_MAX

  16172  2 001721   001763 604000 2                  TMI     E_OVERFLOW
         2 001722   001116 116000 1                  CMPQ    SBIN_MAX
         2 001723   001763 605400 2                  TPNZ    E_OVERFLOW

     1202    16173    4           THEN
     1203    16174    5           DO;   /* Good value */

     1204    16175    5               SUM = UBIN3;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:174  

  16175  2 001724   201047 473500                    LDP3    @SUM,,AUTO
         2 001725   300000 756100                    STQ     0,,PR3

     1205    16176    5               RETURN;

  16176  2 001726   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001727   000001 702211                    TSX2  ! 1,X1

     1206    16177    5           END;
     1207    16178    4           ELSE
     1208    16179    4               GOTO E_OVERFLOW;
     1209    16180    4       END;   /* Do... both positive... end */
     1210    16181    3       ELSE
     1211    16182    4       DO;   /* Both negative or differing signs */

     1212    16183    4           IF ADDEND1 < 0 AND ADDEND2 < 0

  16183  2 001730   000000 115003                    CMPA    0,DU
         2 001731   001756 605000 2                  TPL     s:16200
         2 001732   000000 116003                    CMPQ    0,DU
         2 001733   001756 605000 2                  TPL     s:16200

     1213    16184    4           THEN
     1214    16185    5           DO;

     1215    16186    5               UBIN1 = -ADDEND1;

  16186  2 001734   000000 235100                    LDA     0,,PR0
         2 001735   000000 531000                    NEG     0
         2 001736   201050 755100                    STA     UBIN1,,AUTO

     1216    16187    5               UBIN2 = -ADDEND2;

  16187  2 001737   100000 235100                    LDA     0,,PR1
         2 001740   000000 531000                    NEG     0
         2 001741   201051 755100                    STA     UBIN2,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:175  

     1217    16188    5               UBIN3 = UBIN1 + UBIN2;

  16188  2 001742   201050 236100                    LDQ     UBIN1,,AUTO
         2 001743   201051 036100                    ADLQ    UBIN2,,AUTO
         2 001744   201052 756100                    STQ     UBIN3,,AUTO

     1218    16189    5               IF UBIN3 <= SBIN_MAX

  16189  2 001745   001763 604000 2                  TMI     E_OVERFLOW
         2 001746   001116 116000 1                  CMPQ    SBIN_MAX
         2 001747   001763 605400 2                  TPNZ    E_OVERFLOW

     1219    16190    5               THEN
     1220    16191    6               DO;   /* Good value */

     1221    16192    6                   SUM = -UBIN3;

  16192  2 001750   000000 235003                    LDA     0,DU
         2 001751   201052 135100                    SBLA    UBIN3,,AUTO
         2 001752   201047 473500                    LDP3    @SUM,,AUTO
         2 001753   300000 755100                    STA     0,,PR3

     1222    16193    6                   RETURN;

  16193  2 001754   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001755   000001 702211                    TSX2  ! 1,X1

     1223    16194    6               END;
     1224    16195    5               ELSE   /* Overflow occured */
     1225    16196    5                   GOTO E_OVERFLOW;
     1226    16197    5           END;
     1227    16198    4           ELSE   /* Differing SIGNS */
     1228    16199    5           DO;   /* No overflow possible */

     1229    16200    5               SUM = ADDEND1 + ADDEND2;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:176  
  16200  2 001756   000000 036100                    ADLQ    0,,PR0
         2 001757   201047 473500                    LDP3    @SUM,,AUTO
         2 001760   300000 756100                    STQ     0,,PR3

     1230    16201    5               RETURN;

  16201  2 001761   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 001762   000001 702211                    TSX2  ! 1,X1

     1231    16202    5           END;   /* DO... no overflow possible... End */
     1232    16203    4       END;   /* Do... both negative or differing signs... End */
     1233    16204        /**/
     1234    16205    3   E_OVERFLOW:
     1235    16206    3       ALTRETURN;

  16206  2 001763   000000 702211       E_OVERFLOW   TSX2  ! 0,X1

     1236    16207    3   END CHK_ADD;
     1237    16208        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:177  
     1238    16209    2   CHK_MULT: PROC (MULT1, MULT2, SUM) ALTRET;

  16209  2 001764   201044 741300       CHK_MULT     STX1  ! RESULT+1,,AUTO

     1239    16210        /*F*    NAME:     CHK_MULT
     1240    16211                PURPOSE:  To perform multiplication and catch any overflows.
     1241    16212        */
     1242    16213        /***** Parameters *****/
     1243    16214    3   DCL MULT1 SBIN WORD;
     1244    16215    3   DCL MULT2 SBIN WORD;
     1245    16216    3   DCL SUM SBIN WORD;
     1246    16217        /*
     1247    16218             ***** Make sure that both addends are legal numbers ..
     1248    16219        */
     1249    16220    3       IF MULT1 < SBIN_MIN

  16220  2 001765   201045 470500                    LDP0    @MULT1,,AUTO
         2 001766   000000 236100                    LDQ     0,,PR0
         2 001767   001117 116000 1                  CMPQ    SBIN_MIN
         2 001770   002011 604000 2                  TMI     E_OVERFLOW

     1250    16221    3       THEN
     1251    16222    3           GOTO E_OVERFLOW;
     1252    16223    3       IF MULT2 < SBIN_MIN

  16223  2 001771   201046 471500                    LDP1    @MULT2,,AUTO
         2 001772   100000 236100                    LDQ     0,,PR1
         2 001773   001117 116000 1                  CMPQ    SBIN_MIN
         2 001774   002011 604000 2                  TMI     E_OVERFLOW

     1253    16224    3       THEN
     1254    16225    3           GOTO E_OVERFLOW;
     1255    16226        /*
     1256    16227             ***** Multiply the operands together and check that
     1257    16228                   divide operation will result in initial operands ...
     1258    16229        */
     1259    16230    3       SUM = MULT1 * MULT2;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:178  

  16230  2 001775   000000 402100                    MPY     0,,PR0
         2 001776   201047 473500                    LDP3    @SUM,,AUTO
         2 001777   300000 756100                    STQ     0,,PR3

     1260    16231    3       IF SUM < SBIN_MIN

  16231  2 002000   001117 116000 1                  CMPQ    SBIN_MIN
         2 002001   002011 604000 2                  TMI     E_OVERFLOW

     1261    16232    3       THEN
     1262    16233    3           GOTO E_OVERFLOW;
     1263    16234        /**/
     1264    16235    3       IF MULT2 ~= 0

  16235  2 002002   100000 235100                    LDA     0,,PR1
         2 002003   002007 600000 2                  TZE     s:16242

     1265    16236    3       THEN   /* Ok to divide */
     1266    16237    4       DO;

     1267    16238    4           IF SUM/MULT2 ~= MULT1

  16238  2 002004   100000 506100                    DIV     0,,PR1
         2 002005   000000 116100                    CMPQ    0,,PR0
         2 002006   002011 601000 2                  TNZ     E_OVERFLOW

     1268    16239    4           THEN
     1269    16240    4               GOTO E_OVERFLOW;
     1270    16241    4       END;

     1271    16242    3       RETURN;

  16242  2 002007   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 002010   000001 702211                    TSX2  ! 1,X1

     1272    16243        /**/
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:179  
     1273    16244    3   E_OVERFLOW:
     1274    16245    3       ALTRETURN;

  16245  2 002011   201044 221300       E_OVERFLOW   LDX1  ! RESULT+1,,AUTO
         2 002012   000000 702211                    TSX2  ! 0,X1

     1275    16246    3   END CHK_MULT;
     1276    16247        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:180  
     1277    16248    2   STASH_VALUE: PROC (VALUE,VALUE$) ALTRET;

  16248  2 002013   201044 741300       STASH_VALUE  STX1  ! RESULT+1,,AUTO

     1278    16249        /*F*    NAME:          STASH_VALUE
     1279    16250                PURPOSE:        To stash VALUE in a TEXTC string.
     1280    16251                DESCRIPTION:   This routine will allocate space in the
     1281    16252                               FREE STRING SPACE maintained by X$ALLOCATE
     1282    16253                               and X$DEALLOCATE and store the current value
     1283    16254                               of VALUE as a signed or unsigned CHARACTER
     1284    16255                               TEXTC STRING. The address of this string is
     1285    16256                               returned thru VALUE$.
     1286    16257        */
     1287    16258        /***** Parameters *****/
     1288    16259    3   DCL VALUE SBIN WORD;
     1289    16260    3   DCL VALUE$ PTR;
     1290    16261        /***** Constants *****/
     1291    16262                  /* DEC_ARRAY(0) is not really 10**0 but necessary to work right     */
     1292    16263    3   DCL DEC_ARRAY  (0:11) BIT (36) CONSTANT INIT
     1293    16264    3        ( '000000000000'O /* 10**01 */,  '000000000012'O /* 10**02 */,
     1294    16265    3          '000000000144'O /* 10**02 */,  '000000001750'O /* 10**03 */,
     1295    16266    3          '000000023420'O /* 10**04 */,  '000000303240'O /* 10**05 */,
     1296    16267    3          '000003641100'O /* 10**06 */,  '000046113200'O /* 10**07 */,
     1297    16268    3          '000575360400'O /* 10**08 */,  '007346545000'O /* 10**09 */,
     1298    16269    3          '112402762000'O /* 10**10 */,  '351035564000'O /* 10**11 */);
     1299    16270    3   DCL DEC_POWERS (0:11) REDEF DEC_ARRAY SBIN WORD;
     1300    16271        /***** Local Variables *****/
     1301    16272    3   DCL TEMP SBIN WORD AUTO;
     1302    16273
     1303    16274        /*
     1304    16275             ***** If VALUE equals one of the predefined
     1305    16276                   TEXTC strings, then don't allocate the space ...
     1306    16277        */
     1307    16278    3       IF VALUE = 0

  16278  2 002014   201045 470500                    LDP0    @VALUE,,AUTO
         2 002015   000000 235100                    LDA     0,,PR0
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:181  
         2 002016   002024 601000 2                  TNZ     s:16284

     1308    16279    3       THEN
     1309    16280    4       DO;   /* Don't waste time/space */

     1310    16281    4           VALUE$ = ZERO$;

  16281  2 002017   000000 236000 1                  LDQ     ZERO$
         2 002020   201046 471500                    LDP1    @VALUE$,,AUTO
         2 002021   100000 756100                    STQ     0,,PR1

     1311    16282    4           RETURN;

  16282  2 002022   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 002023   000001 702211                    TSX2  ! 1,X1

     1312    16283    4       END;
     1313    16284    3       IF VALUE = 1

  16284  2 002024   000001 115007                    CMPA    1,DL
         2 002025   002033 601000 2                  TNZ     s:16293

     1314    16285    3       THEN
     1315    16286    4       DO;   /* Don'T waste time/space */

     1316    16287    4           VALUE$ = ONE$;

  16287  2 002026   000002 236000 1                  LDQ     ONE$
         2 002027   201046 471500                    LDP1    @VALUE$,,AUTO
         2 002030   100000 756100                    STQ     0,,PR1

     1317    16288    4           RETURN;

  16288  2 002031   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 002032   000001 702211                    TSX2  ! 1,X1

     1318    16289    4       END;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:182  
     1319    16290        /*
     1320    16291             ***** Determine how many characters needed to store VALUE ...
     1321    16292        */
     1322    16293    3       IF VALUE < 0

  16293  2 002033   000000 115003                    CMPA    0,DU
         2 002034   002041 605000 2                  TPL     s:16297

     1323    16294    3       THEN
     1324    16295    3           TEMP = 0 - VALUE;

  16295  2 002035   000000 235100                    LDA     0,,PR0
         2 002036   000000 531000                    NEG     0
         2 002037   201047 755100                    STA     TEMP,,AUTO
         2 002040   002042 710000 2                  TRA     s:16298

     1325    16296    3       ELSE
     1326    16297    3           TEMP = VALUE;

  16297  2 002041   201047 755100                    STA     TEMP,,AUTO

     1327    16298    3       MCB.SIZE = 12; /* Default size */

  16298  2 002042   000014 236007                    LDQ     12,DL
         2 002043   200005 471500                    LDP1    @MCB,,AUTO
         2 002044   100006 756100                    STQ     6,,PR1

     1328    16299    4       DO K = 0 TO 11;

  16299  2 002045   200540 450100                    STZ     K,,AUTO

     1329    16300    4           IF TEMP < DEC_POWERS(K)

  16300  2 002046   200540 720100                    LXL0    K,,AUTO
         2 002047   201047 236100                    LDQ     TEMP,,AUTO
         2 002050   001120 116010 1                  CMPQ    DEC_ARRAY,X0
         2 002051   002057 605000 2                  TPL     s:16306
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:183  

     1330    16301    4           THEN   /* Found the size required */
     1331    16302    5           DO;

     1332    16303    5               MCB.SIZE = K + 1;   /* Allow one byte for COUNT           */

  16303  2 002052   200005 470500                    LDP0    @MCB,,AUTO
         2 002053   200540 235100                    LDA     K,,AUTO
         2 002054   000001 035007                    ADLA    1,DL
         2 002055   000006 755100                    STA     6,,PR0

     1333    16304    5               GOTO GET_STRING_SPACE;

  16304  2 002056   002063 710000 2                  TRA     GET_STRING_SPACE

     1334    16305    5           END;
     1335    16306    4       END; /* Do index ... end */

  16306  2 002057   200540 054100                    AOS     K,,AUTO
         2 002060   200540 235100                    LDA     K,,AUTO
         2 002061   000013 115007                    CMPA    11,DL
         2 002062   002046 604400 2                  TMOZ    s:16300

     1336    16307        /*
     1337    16308        **** Allocate STRING SPACE for the result ...
     1338    16309        */
     1339    16310    3   GET_STRING_SPACE:
     1340    16311    3       IF VALUE < 0

  16311  2 002063   201045 470500       GET_STRING_* LDP0    @VALUE,,AUTO
         2 002064   000000 235100                    LDA     0,,PR0
         2 002065   002070 605000 2                  TPL     s:16314

     1341    16312    3       THEN
     1342    16313    3           MCB.SIZE = MCB.SIZE + 1;

  16313  2 002066   200005 471500                    LDP1    @MCB,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:184  
         2 002067   100006 054100                    AOS     6,,PR1

     1343    16314    3       CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16314  2 002070   200005 630500                    EPPR0   @MCB,,AUTO
         2 002071   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002072   000000 701000 xent               TSX1    X$ALLOCATE
         2 002073   002135 702000 2                  TSX2    E_ALLOCATE

     1344    16315    3       VALUE$ = MCB.ADDRESS$;

  16315  2 002074   200005 470500                    LDP0    @MCB,,AUTO
         2 002075   000000 236100                    LDQ     0,,PR0
         2 002076   201046 471500                    LDP1    @VALUE$,,AUTO
         2 002077   100000 756100                    STQ     0,,PR1

     1345    16316    3       VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;

  16316  2 002100   100000 473500                    LDP3    0,,PR1
         2 002101   000006 236100                    LDQ     6,,PR0
         2 002102   000001 136007                    SBLQ    1,DL
         2 002103   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 002104   000100 101500                    MRL     fill='000'O
         2 002105   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 002106   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

     1346    16317    3       IF VALUE < 0

  16317  2 002107   201045 473500                    LDP3    @VALUE,,AUTO
         2 002110   300000 235100                    LDA     0,,PR3
         2 002111   002123 605000 2                  TPL     s:16321

     1347    16318    3       THEN
     1348    16319    3           CALL BINXCHAR (VALUE$ -> X$STRING.TEXT,VALUE);

  16319  2 002112   100000 474500                    LDP4    0,,PR1
         2 002113   000100 101500                    MRL     fill='000'O
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:185  
         2 002114   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 002115   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 002116   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 002117   000140 301500                    BTD
         2 002120   300000 000004                    NDSC9   0,,PR3                   cn=0,s=lsgnf,sf=0,n=4
         2 002121   400000 210010                    NDSC9   0,,PR4                   cn=1,s=lsgns,sf=0,n=*X0
         2 002122   002133 710000 2                  TRA     s:16322

     1349    16320    3       ELSE
     1350    16321    3           CALL BINCHAR (VALUE$ -> X$STRING.TEXT,VALUE);

  16321  2 002123   100000 474500                    LDP4    0,,PR1
         2 002124   000100 101500                    MRL     fill='000'O
         2 002125   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 002126   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 002127   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 002130   000140 301500                    BTD
         2 002131   300000 000004                    NDSC9   0,,PR3                   cn=0,s=lsgnf,sf=0,n=4
         2 002132   400000 230010                    NDSC9   0,,PR4                   cn=1,s=nosgn,sf=0,n=*X0

     1351    16322    3       RETURN;

  16322  2 002133   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 002134   000001 702211                    TSX2  ! 1,X1

     1352    16323        /**/
     1353    16324    3   E_ALLOCATE:
     1354    16325    3       XUE_ECB.ERR = MCB.ERR;

  16325  2 002135   200005 470500       E_ALLOCATE   LDP0    @MCB,,AUTO
         2 002136   000010 236100                    LDQ     8,,PR0
         2 002137   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 002140   100011 756100                    STQ     9,,PR1

     1355    16326    3       ALTRETURN;

  16326  2 002141   201044 221300                    LDX1  ! RESULT+1,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:186  
         2 002142   000000 702211                    TSX2  ! 0,X1

     1356    16327    3   END STASH_VALUE;
     1357    16328        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:187  
     1358    16329    2   TIME_FUNCTIONS: PROC ALTRET;

  16329  2 002143   201044 741300       TIME_FUNCTI* STX1  ! RESULT+1,,AUTO

     1359    16330        /*F*    NAME:          TIME_FUNCTIONS
     1360    16331                PURPOSE:       To process TIME/DATE options.
     1361    16332                DESCRIPTION:   This routine provides a common place to
     1362    16333                               setup FPT_TIME according to options specified
     1363    16334                               on several $FUNCTIONS.
     1364    16335        */
     1365    16336        /***** Local Variables *****/
     1366    16337    3   DCL I UBIN WORD AUTO;
     1367    16338    3   DCL STK_PTR UBIN WORD AUTO;
     1368    16339    3   DCL OFFSET UBIN WORD AUTO;
     1369    16340    3   DCL CUR_UTS UBIN WORD AUTO;
     1370    16341        /***** Constants *****/
     1371    16342    3   DCL DAY_OFFSET UBIN WORD CONSTANT INIT(8640000);
     1372    16343    3   DCL MIN_OFFSET UBIN WORD CONSTANT INIT(60000);
     1373    16344        /**/
     1374    16345    3       STK_PTR = VAL_PTR;

  16345  2 002144   200022 235100                    LDA     VAL_PTR,,AUTO
         2 002145   201046 755100                    STA     STK_PTR,,AUTO

     1375    16346    4       DO I = 0 TO NUM_TO_POP_STACK(OP_PTR) - 1;

  16346  2 002146   201045 450100                    STZ     I,,AUTO
         2 002147   002270 710000 2                  TRA     s:16369+3

     1376    16347    5           DO CASE (VAL_TYPE(STK_PTR));

  16347  2 002150   201046 235100                    LDA     STK_PTR,,AUTO
         2 002151   000100 101505                    MRL     fill='000'O
         2 002152   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1
         2 002153   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 002154   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 002155   000005 100003                    CMPX0   5,DU
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:188  
         2 002156   002160 602010 2                  TNC     s:16347+8,X0
         2 002157   002265 710000 2                  TRA     s:16369
         2 002160   002265 710000 2                  TRA     s:16369
         2 002161   002165 710000 2                  TRA     s:16349
         2 002162   002265 710000 2                  TRA     s:16369
         2 002163   002236 710000 2                  TRA     s:16363
         2 002164   002252 710000 2                  TRA     s:16366

     1377    16348    5           CASE (%XUE_TYPE#);

     1378    16349    6               DO SELECT (VAL_STACK$(STK_PTR) -> X$STRING.TEXT);

  16349  2 002165   200057 470505                    LDP0    VAL_STACK$,AL,AUTO
         2 002166   201046 721100                    LXL1    STK_PTR,,AUTO
         2 002167   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 002170   000100 101500                    MRL     fill='000'O
         2 002171   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 002172   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 002173   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 002174   040000 106540                    CMPC    fill='040'O
         2 002175   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 002176   001140 000003 1                  ADSC9   MIN_OFFSET+3             cn=0,n=3
         2 002177   002206 602000 2                  TNC     s:16349+17
         2 002200   002216 600000 2                  TZE     s:16353
         2 002201   040000 106540                    CMPC    fill='040'O
         2 002202   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 002203   001141 000005 1                  ADSC9   MIN_OFFSET+4             cn=0,n=5
         2 002204   002224 601000 2                  TNZ     s:16357
         2 002205   002221 710000 2                  TRA     s:16355
         2 002206   040000 106540                    CMPC    fill='040'O
         2 002207   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 002210   001143 000003 1                  ADSC9   MIN_OFFSET+6             cn=0,n=3
         2 002211   002224 601000 2                  TNZ     s:16357
         2 002212   002213 710000 2                  TRA     s:16351

     1379    16350    6                   SELECT ('ANS');

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:189  
     1380    16351    6                   FPT_TIME.V.DEST# = %ANS#;

  16351  2 002213   000002 236003                    LDQ     2,DU
         2 002214   200330 552120                    STBQ    FPT_TIME+10,'20'O,AUTO
         2 002215   002265 710000 2                  TRA     s:16369

     1381    16352    6                   SELECT ('EXT');

     1382    16353    6                   FPT_TIME.V.DEST# = %EXT#;

  16353  2 002216   000001 236003                    LDQ     1,DU
         2 002217   200330 552120                    STBQ    FPT_TIME+10,'20'O,AUTO
         2 002220   002265 710000 2                  TRA     s:16369

     1383    16354    6                   SELECT ('LOCAL');

     1384    16355    6                   FPT_TIME.V.DEST# = %LOCAL#;

  16355  2 002221   000003 236003                    LDQ     3,DU
         2 002222   200330 552120                    STBQ    FPT_TIME+10,'20'O,AUTO
         2 002223   002265 710000 2                  TRA     s:16369

     1385    16356    6                   SELECT (ELSE);

     1386    16357    6               XUE_ECB.ERR = E_ILLOPTION;

  16357  2 002224   000445 236000 1                  LDQ     E_ILLOPTION
         2 002225   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 002226   000011 756100                    STQ     9,,PR0

     1387    16358    6               XUE_ECB.ERR_POS# = CHARPOS_STACK(STK_PTR);

  16358  2 002227   201046 235100                    LDA     STK_PTR,,AUTO
         2 002230   000001 735000                    ALS     1
         2 002231   000100 100505                    MLR     fill='000'O
         2 002232   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 002233   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:190  

     1388    16359    6               ALTRETURN;

  16359  2 002234   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 002235   000000 702211                    TSX2  ! 0,X1

     1389    16360    6               END;  /* Do select ... end */

     1390    16361    5           CASE (%XUE_INPUT#);

     1391    16362    5           CASE (%XUE_OFFSET_DATE#);

     1392    16363    5               CALL X$DEC_CONVERT (VAL_STACK$(STK_PTR),TEMP1) ALTRET(E_DEC);

  16363  2 002236   200536 630500                    EPPR0   TEMP1,,AUTO
         2 002237   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 002240   200057 631505                    EPPR1   VAL_STACK$,AL,AUTO
         2 002241   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 002242   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 002243   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002244   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 002245   002322 702000 2                  TSX2    E_DEC

     1393    16364    5               OFFSET = TEMP1 * DAY_OFFSET;

  16364  2 002246   200536 236100                    LDQ     TEMP1,,AUTO
         2 002247   001134 402000 1                  MPY     DAY_OFFSET
         2 002250   201047 756100                    STQ     OFFSET,,AUTO
         2 002251   002265 710000 2                  TRA     s:16369

     1394    16365    5           CASE (%XUE_OFFSET_TIME#);

     1395    16366    5               CALL X$DEC_CONVERT (VAL_STACK$(STK_PTR),TEMP1) ALTRET(E_DEC);

  16366  2 002252   200536 630500                    EPPR0   TEMP1,,AUTO
         2 002253   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 002254   200057 631505                    EPPR1   VAL_STACK$,AL,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:191  
         2 002255   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 002256   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 002257   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002260   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 002261   002322 702000 2                  TSX2    E_DEC

     1396    16367    5               OFFSET = TEMP1 * MIN_OFFSET;

  16367  2 002262   200536 236100                    LDQ     TEMP1,,AUTO
         2 002263   001135 402000 1                  MPY     MIN_OFFSET
         2 002264   201047 756100                    STQ     OFFSET,,AUTO

     1397    16368    5           END; /* Do case ... end */

     1398    16369    4       END; /* Do index ... end */

  16369  2 002265   201045 235100                    LDA     I,,AUTO
         2 002266   000001 035007                    ADLA    1,DL
         2 002267   201045 755100                    STA     I,,AUTO
         2 002270   200021 235100                    LDA     OP_PTR,,AUTO
         2 002271   000100 101505                    MRL     fill='000'O
         2 002272   200050 000001                    ADSC9   NUM_TO_POP_STACK,A,AUTO  cn=0,n=1
         2 002273   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 002274   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 002275   201045 116100                    CMPQ    I,,AUTO
         2 002276   002300 600000 2                  TZE     s:16370
         2 002277   002150 603000 2                  TRC     s:16347

     1399    16370    3       CALL M$TIME (FPT_TIME) ALTRET(E_PMME);

  16370  2 002300   200316 630500                    EPPR0   FPT_TIME,,AUTO
         2 002301   420004 713400                    CLIMB   alt,+8196
         2 002302   402000 401760                    pmme    nvectors=5
         2 002303   002306 702000 2                  TSX2    E_PMME

     1400    16371    3       RETURN;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:192  
  16371  2 002304   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 002305   000001 702211                    TSX2  ! 1,X1

     1401    16372        /**/
     1402    16373    3   E_PMME:
     1403    16374    3       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;

  16374  2 002306   000000 470400 xsym  E_PMME       LDP0    B$TCB$
         2 002307   000000 471500                    LDP1    0,,PR0
         2 002310   100102 236100                    LDQ     66,,PR1
         2 002311   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 002312   300011 756100                    STQ     9,,PR3

     1404    16375    3       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16375  2 002313   200022 235100                    LDA     VAL_PTR,,AUTO
         2 002314   000001 735000                    ALS     1
         2 002315   000100 100505                    MLR     fill='000'O
         2 002316   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 002317   300010 000002                    ADSC9   8,,PR3                   cn=0,n=2

     1405    16376    3       ALTRETURN;

  16376  2 002320   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 002321   000000 702211                    TSX2  ! 0,X1

     1406    16377        /**/
     1407    16378    3   E_DEC:
     1408    16379    3       XUE_ECB.ERR = E_NONDECIMAL;

  16379  2 002322   000434 236000 1     E_DEC        LDQ     E_NONDECIMAL
         2 002323   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 002324   000011 756100                    STQ     9,,PR0

     1409    16380    3       XUE_ECB.ERR_POS# = CHARPOS_STACK(STK_PTR);

  16380  2 002325   201046 235100                    LDA     STK_PTR,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:193  
         2 002326   000001 735000                    ALS     1
         2 002327   000100 100505                    MLR     fill='000'O
         2 002330   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 002331   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     1410    16381    3       ALTRETURN;

  16381  2 002332   201044 221300                    LDX1  ! RESULT+1,,AUTO
         2 002333   000000 702211                    TSX2  ! 0,X1

     1411    16382    3   END TIME_FUNCTIONS;
     1412    16383        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:194  
     1413    16384        /***** Initialization *****/
     1414    16385    2       VALUE = 0;

  16385  2 002334   200535 450100                    STZ     VALUE,,AUTO

     1415    16386    2       VALUE$ = ZERO$;

  16386  2 002335   000000 236000 1                  LDQ     ZERO$
         2 002336   200010 756100                    STQ     VALUE$,,AUTO

     1416    16387    2       MCB.ADDRESS$ = ADDR(NIL);

  16387  2 002337   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002340   200005 470500                    LDP0    @MCB,,AUTO
         2 002341   000000 756100                    STQ     0,,PR0

     1417    16388        /*
     1418    16389             ***** Make sure that there are enough entries in the
     1419    16390                   operand stack for this operator to operate upon ...
     1420    16391        */
     1421    16392    2       IF NUM_TO_POP_STACK(OP_PTR) > VAL_PTR+1

  16392  2 002342   200022 235100                    LDA     VAL_PTR,,AUTO
         2 002343   000001 035007                    ADLA    1,DL
         2 002344   201250 755100                    STA     FPT_FID+70,,AUTO
         2 002345   200021 236100                    LDQ     OP_PTR,,AUTO
         2 002346   000100 101506                    MRL     fill='000'O
         2 002347   200050 000001                    ADSC9   NUM_TO_POP_STACK,Q,AUTO  cn=0,n=1
         2 002350   201251 000004                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=4
         2 002351   201251 236100                    LDQ     FPT_FID+71,,AUTO
         2 002352   201250 116100                    CMPQ    FPT_FID+70,,AUTO
         2 002353   002362 604400 2                  TMOZ    APPLY_CASE

     1422    16393    2       THEN   /* Stacks are not right */
     1423    16394    3       DO;

     1424    16395    3           XUE_ECB.ERR = E_STKFLT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:195  

  16395  2 002354   000441 236000 1                  LDQ     E_STKFLT
         2 002355   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 002356   100011 756100                    STQ     9,,PR1

     1425    16396    3           XUE_ECB.ERR_POS# = CHARPOS_STACK(0);

  16396  2 002357   200157 220100                    LDX0    CHARPOS_STACK,,AUTO
         2 002360   100010 740100                    STX0    8,,PR1

     1426    16397    3           GOTO E_REDUCE;

  16397  2 002361   007402 710000 2                  TRA     E_REDUCE

     1427    16398    3       END;
     1428    16399        /*
     1429    16400             ***** REDUCE the OPERATOR and VALUE stacks as necessary ...
     1430    16401        */
     1431    16402    2   APPLY_CASE:
     1432    16403    3       DO CASE (OP_STACK(OP_PTR));

  16403  2 002362   200021 235100       APPLY_CASE   LDA     OP_PTR,,AUTO
         2 002363   000100 101505                    MRL     fill='000'O
         2 002364   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 002365   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 002366   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 002367   000113 100003                    CMPX0   75,DU
         2 002370   002372 602010 2                  TNC     APPLY_CASE+8,X0
         2 002371   007235 710000 2                  TRA     s:17160
         2 002372   007235 710000 2                  TRA     s:17160
         2 002373   007235 710000 2                  TRA     s:17160
         2 002374   002505 710000 2                  TRA     s:16420
         2 002375   002505 710000 2                  TRA     s:16420
         2 002376   002505 710000 2                  TRA     s:16420
         2 002377   002505 710000 2                  TRA     s:16420
         2 002400   003410 710000 2                  TRA     s:16589
         2 002401   002704 710000 2                  TRA     s:16472
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:196  
         2 002402   002704 710000 2                  TRA     s:16472
         2 002403   002704 710000 2                  TRA     s:16472
         2 002404   002704 710000 2                  TRA     s:16472
         2 002405   002704 710000 2                  TRA     s:16472
         2 002406   002704 710000 2                  TRA     s:16472
         2 002407   002505 710000 2                  TRA     s:16420
         2 002410   002505 710000 2                  TRA     s:16420
         2 002411   002505 710000 2                  TRA     s:16420
         2 002412   002505 710000 2                  TRA     s:16420
         2 002413   002505 710000 2                  TRA     s:16420
         2 002414   003277 710000 2                  TRA     s:16557
         2 002415   003260 710000 2                  TRA     s:16552
         2 002416   003241 710000 2                  TRA     s:16547
         2 002417   003222 710000 2                  TRA     s:16542
         2 002420   007235 710000 2                  TRA     s:17160
         2 002421   007235 710000 2                  TRA     s:17160
         2 002422   007235 710000 2                  TRA     s:17160
         2 002423   007235 710000 2                  TRA     s:17160
         2 002424   007235 710000 2                  TRA     s:17160
         2 002425   007235 710000 2                  TRA     s:17160
         2 002426   006054 710000 2                  TRA     s:16981
         2 002427   006054 710000 2                  TRA     s:16981
         2 002430   006054 710000 2                  TRA     s:16981
         2 002431   006054 710000 2                  TRA     s:16981
         2 002432   006252 710000 2                  TRA     s:17011
         2 002433   006363 710000 2                  TRA     s:17047
         2 002434   006402 710000 2                  TRA     s:17053
         2 002435   006264 710000 2                  TRA     s:17016
         2 002436   004046 710000 2                  TRA     s:16666
         2 002437   004046 710000 2                  TRA     s:16666
         2 002440   004046 710000 2                  TRA     s:16666
         2 002441   004046 710000 2                  TRA     s:16666
         2 002442   004046 710000 2                  TRA     s:16666
         2 002443   005247 710000 2                  TRA     s:16892
         2 002444   005330 710000 2                  TRA     s:16899
         2 002445   003341 710000 2                  TRA     s:16576
         2 002446   003517 710000 2                  TRA     s:16606
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:197  
         2 002447   003605 710000 2                  TRA     s:16618
         2 002450   003671 710000 2                  TRA     s:16629
         2 002451   003726 710000 2                  TRA     s:16636
         2 002452   003746 710000 2                  TRA     s:16648
         2 002453   004046 710000 2                  TRA     s:16666
         2 002454   004336 710000 2                  TRA     s:16710
         2 002455   004373 710000 2                  TRA     s:16717
         2 002456   004450 710000 2                  TRA     s:16723
         2 002457   005100 710000 2                  TRA     s:16856
         2 002460   005411 710000 2                  TRA     s:16906
         2 002461   005424 710000 2                  TRA     s:16909
         2 002462   005635 710000 2                  TRA     s:16945
         2 002463   005555 710000 2                  TRA     s:16936
         2 002464   005715 710000 2                  TRA     s:16954
         2 002465   005440 710000 2                  TRA     s:16912
         2 002466   006017 710000 2                  TRA     s:16973
         2 002467   007235 710000 2                  TRA     s:17160
         2 002470   003376 710000 2                  TRA     s:16583
         2 002471   006421 710000 2                  TRA     s:17059
         2 002472   006524 710000 2                  TRA     s:17074
         2 002473   006571 710000 2                  TRA     s:17083
         2 002474   006641 710000 2                  TRA     s:17091
         2 002475   006707 710000 2                  TRA     s:17102
         2 002476   006722 710000 2                  TRA     s:17105
         2 002477   007032 710000 2                  TRA     s:17124
         2 002500   007135 710000 2                  TRA     s:17139
         2 002501   007200 710000 2                  TRA     s:17148
         2 002502   005531 710000 2                  TRA     s:16931
         2 002503   005715 710000 2                  TRA     s:16954
         2 002504   003763 710000 2                  TRA     s:16652

     1433    16404        /*
     1434    16405             ***** ARITHMETIC operators ...
     1435    16406        */
     1436    16407    3       CASE (%XUE_PLUS#,

     1437    16408    3         %XUE_MINUS#,
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:198  
     1438    16409    3         %XUE_MULTIPLY#,
     1439    16410    3         %XUE_DIVIDE#,
     1440    16411    3         %XUE_AND#,
     1441    16412    3         %XUE_OR#,
     1442    16413    3         %XUE_U_NOT#,
     1443    16414    3         %XUE_U_MINUS#,
     1444    16415    3         %XUE_U_PLUS#);
     1445    16416        /*
     1446    16417             ***** Get the operands needed for this operation ...
     1447    16418             ***** These operators cannot operate on non-numeric data ...
     1448    16419        */
     1449    16420    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP2) ALTRET(E_DEC);

  16420  2 002505   200537 631500                    EPPR1   TEMP2,,AUTO
         2 002506   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 002507   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 002510   200057 633511                    EPPR3   VAL_STACK$,X1,AUTO
         2 002511   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 002512   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 002513   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002514   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 002515   007424 702000 2                  TSX2    E_DEC

     1450    16421    3           NUM_TO_POP = FUNC.NTP(OP_STACK(OP_PTR));

  16421  2 002516   200021 235100                    LDA     OP_PTR,,AUTO
         2 002517   000100 101505                    MRL     fill='000'O
         2 002520   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 002521   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 002522   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 002523   000001 736000                    QLS     1
         2 002524   000100 101406                    MRL     fill='000'O
         2 002525   000450 200001 1                  ADSC9   FUNC,Q                   cn=1,n=1
         2 002526   200030 000004                    ADSC9   NUM_TO_POP,,AUTO         cn=0,n=4

     1451    16422    3           IF NUM_TO_POP = 2

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:199  
  16422  2 002527   200030 236100                    LDQ     NUM_TO_POP,,AUTO
         2 002530   000002 116007                    CMPQ    2,DL
         2 002531   002543 601000 2                  TNZ     s:16425

     1452    16423    3           THEN
     1453    16424    3               CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-1),TEMP1) ALTRET(E_DEC1);

  16424  2 002532   200536 630500                    EPPR0   TEMP1,,AUTO
         2 002533   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 002534   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 002535   200056 631510                    EPPR1   NUM_TO_POP_STACK+6,X0,AUTO
         2 002536   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 002537   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 002540   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002541   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 002542   007436 702000 2                  TSX2    E_DEC1

     1454    16425    4           DO CASE (OP_STACK(OP_PTR));

  16425  2 002543   200021 235100                    LDA     OP_PTR,,AUTO
         2 002544   000100 101505                    MRL     fill='000'O
         2 002545   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 002546   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 002547   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 002550   000022 100003                    CMPX0   18,DU
         2 002551   002553 602010 2                  TNC     s:16425+8,X0
         2 002552   002675 710000 2                  TRA     s:16458
         2 002553   002675 710000 2                  TRA     s:16458
         2 002554   002675 710000 2                  TRA     s:16458
         2 002555   002621 710000 2                  TRA     s:16432
         2 002556   002632 710000 2                  TRA     s:16434
         2 002557   002575 710000 2                  TRA     s:16427
         2 002560   002606 710000 2                  TRA     s:16429
         2 002561   002675 710000 2                  TRA     s:16458
         2 002562   002675 710000 2                  TRA     s:16458
         2 002563   002675 710000 2                  TRA     s:16458
         2 002564   002675 710000 2                  TRA     s:16458
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:200  
         2 002565   002675 710000 2                  TRA     s:16458
         2 002566   002675 710000 2                  TRA     s:16458
         2 002567   002675 710000 2                  TRA     s:16458
         2 002570   002645 710000 2                  TRA     s:16442
         2 002571   002654 710000 2                  TRA     s:16446
         2 002572   002663 710000 2                  TRA     s:16450
         2 002573   002673 710000 2                  TRA     s:16456
         2 002574   002670 710000 2                  TRA     s:16454

     1455    16426    4           CASE (%XUE_PLUS#);

     1456    16427    4               CALL CHK_ADD (TEMP1, TEMP2, VALUE) ALTRET(E_OVERFLOW);

  16427  2 002575   200535 630500                    EPPR0   VALUE,,AUTO
         2 002576   201047 450500                    STP0    @CHARPOS,,AUTO
         2 002577   200537 631500                    EPPR1   TEMP2,,AUTO
         2 002600   201046 451500                    STP1    @VALUE$,,AUTO
         2 002601   200536 633500                    EPPR3   TEMP1,,AUTO
         2 002602   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 002603   001700 701000 2                  TSX1    CHK_ADD
         2 002604   007450 702000 2                  TSX2    E_OVERFLOW
         2 002605   002675 710000 2                  TRA     s:16458

     1457    16428    4           CASE (%XUE_MINUS#);

     1458    16429    4               TEMP2 = -TEMP2; /* Subtraction is addition of compliment */

  16429  2 002606   200537 336100                    LCQ     TEMP2,,AUTO
         2 002607   200537 756100                    STQ     TEMP2,,AUTO

     1459    16430    4               CALL CHK_ADD (TEMP1, TEMP2, VALUE) ALTRET(E_OVERFLOW);

  16430  2 002610   200535 630500                    EPPR0   VALUE,,AUTO
         2 002611   201047 450500                    STP0    @CHARPOS,,AUTO
         2 002612   200537 631500                    EPPR1   TEMP2,,AUTO
         2 002613   201046 451500                    STP1    @VALUE$,,AUTO
         2 002614   200536 633500                    EPPR3   TEMP1,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:201  
         2 002615   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 002616   001700 701000 2                  TSX1    CHK_ADD
         2 002617   007450 702000 2                  TSX2    E_OVERFLOW
         2 002620   002675 710000 2                  TRA     s:16458

     1460    16431    4           CASE (%XUE_MULTIPLY#);

     1461    16432    4               CALL CHK_MULT (TEMP1, TEMP2, VALUE) ALTRET(E_OVERFLOW);

  16432  2 002621   200535 630500                    EPPR0   VALUE,,AUTO
         2 002622   201047 450500                    STP0    @CHARPOS,,AUTO
         2 002623   200537 631500                    EPPR1   TEMP2,,AUTO
         2 002624   201046 451500                    STP1    @VALUE$,,AUTO
         2 002625   200536 633500                    EPPR3   TEMP1,,AUTO
         2 002626   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 002627   001764 701000 2                  TSX1    CHK_MULT
         2 002630   007450 702000 2                  TSX2    E_OVERFLOW
         2 002631   002675 710000 2                  TRA     s:16458

     1462    16433    4           CASE (%XUE_DIVIDE#);

     1463    16434    4               IF TEMP2 = 0

  16434  2 002632   200537 236100                    LDQ     TEMP2,,AUTO
         2 002633   002641 601000 2                  TNZ     s:16440

     1464    16435    4               THEN
     1465    16436    5               DO;

     1466    16437    5                   XUE_ECB.ERR = E_ZERODIVFLT;

  16437  2 002634   000432 236000 1                  LDQ     E_ZERODIVFLT
         2 002635   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 002636   000011 756100                    STQ     9,,PR0

     1467    16438    5                   ALTRETURN;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:202  
  16438  2 002637   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 002640   000000 702211                    TSX2  ! 0,X1

     1468    16439    5               END;
     1469    16440    4               VALUE = TEMP1 / TEMP2;

  16440  2 002641   200536 236100                    LDQ     TEMP1,,AUTO
         2 002642   200537 506100                    DIV     TEMP2,,AUTO
         2 002643   200535 756100                    STQ     VALUE,,AUTO
         2 002644   002675 710000 2                  TRA     s:16458

     1470    16441    4           CASE (%XUE_AND#);

     1471    16442    4               IF (TEMP1 > 0) AND (TEMP2 > 0)

  16442  2 002645   200536 236100                    LDQ     TEMP1,,AUTO
         2 002646   002675 604400 2                  TMOZ    s:16458
         2 002647   200537 235100                    LDA     TEMP2,,AUTO
         2 002650   002675 604400 2                  TMOZ    s:16458

     1472    16443    4               THEN
     1473    16444    4                   VALUE = 1;

  16444  2 002651   000001 235007                    LDA     1,DL
         2 002652   200535 755100                    STA     VALUE,,AUTO
         2 002653   002675 710000 2                  TRA     s:16458

     1474    16445    4           CASE (%XUE_OR#);

     1475    16446    4               IF (TEMP1 > 0) OR (TEMP2 > 0)

  16446  2 002654   200536 236100                    LDQ     TEMP1,,AUTO
         2 002655   002660 605400 2                  TPNZ    s:16448
         2 002656   200537 235100                    LDA     TEMP2,,AUTO
         2 002657   002675 604400 2                  TMOZ    s:16458

     1476    16447    4               THEN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:203  
     1477    16448    4                   VALUE = 1;

  16448  2 002660   000001 235007                    LDA     1,DL
         2 002661   200535 755100                    STA     VALUE,,AUTO
         2 002662   002675 710000 2                  TRA     s:16458

     1478    16449    4           CASE (%XUE_U_NOT#);

     1479    16450    4               IF TEMP2 <= 0

  16450  2 002663   200537 236100                    LDQ     TEMP2,,AUTO
         2 002664   002675 605400 2                  TPNZ    s:16458

     1480    16451    4               THEN
     1481    16452    4                   VALUE = 1;

  16452  2 002665   000001 235007                    LDA     1,DL
         2 002666   200535 755100                    STA     VALUE,,AUTO
         2 002667   002675 710000 2                  TRA     s:16458

     1482    16453    4           CASE (%XUE_U_MINUS#);

     1483    16454    4               VALUE = 0 - TEMP2;

  16454  2 002670   200537 336100                    LCQ     TEMP2,,AUTO
         2 002671   200535 756100                    STQ     VALUE,,AUTO
         2 002672   002675 710000 2                  TRA     s:16458

     1484    16455    4           CASE (%XUE_U_PLUS#);

     1485    16456    4               VALUE = TEMP2;

  16456  2 002673   200537 236100                    LDQ     TEMP2,,AUTO
         2 002674   200535 756100                    STQ     VALUE,,AUTO

     1486    16457    4           END; /* Do case ... ARITHMETIC OPERATORS ... end */

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:204  
     1487    16458    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  16458  2 002675   200010 630500                    EPPR0   VALUE$,,AUTO
         2 002676   201046 450500                    STP0    @VALUE$,,AUTO
         2 002677   200535 631500                    EPPR1   VALUE,,AUTO
         2 002700   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 002701   002013 701000 2                  TSX1    STASH_VALUE
         2 002702   007402 702000 2                  TSX2    E_REDUCE
         2 002703   007235 710000 2                  TRA     s:17160

     1488    16459
     1489    16460        /*
     1490    16461             ***** COMPARISON OPERATORS ...
     1491    16462        */
     1492    16463    3       CASE (%XUE_EQUAL#,

     1493    16464    3             %XUE_NEQUAL#,
     1494    16465    3             %XUE_LTHAN#,
     1495    16466    3             %XUE_GTHAN#,
     1496    16467    3             %XUE_LEQUAL#,
     1497    16468    3             %XUE_GEQUAL#);
     1498    16469        /*
     1499    16470             ***** Determine whether to do a NUMERIC or STRING comparision ...
     1500    16471        */
     1501    16472    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-1),TEMP1) ALTRET(CHAR_COMPARE);

  16472  2 002704   200536 631500                    EPPR1   TEMP1,,AUTO
         2 002705   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 002706   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 002707   200056 633511                    EPPR3   NUM_TO_POP_STACK+6,X1,AUTO
         2 002710   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 002711   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 002712   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002713   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 002714   003011 702000 2                  TSX2    CHAR_COMPARE

     1502    16473    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP2) ALTRET(CHAR_COMPARE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:205  

  16473  2 002715   200537 630500                    EPPR0   TEMP2,,AUTO
         2 002716   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 002717   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 002720   200057 631510                    EPPR1   VAL_STACK$,X0,AUTO
         2 002721   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 002722   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 002723   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002724   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 002725   003011 702000 2                  TSX2    CHAR_COMPARE

     1503    16474    3   NUMERIC_COMPARE:
     1504    16475    4           DO CASE (OP_STACK(OP_PTR));

  16475  2 002726   200021 235100       NUMERIC_COM* LDA     OP_PTR,,AUTO
         2 002727   000100 101505                    MRL     fill='000'O
         2 002730   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 002731   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 002732   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 002733   000007 136007                    SBLQ    7,DL
         2 002734   000006 116007                    CMPQ    6,DL
         2 002735   002737 602006 2                  TNC     NUMERIC_COMPARE+9,QL
         2 002736   003010 710000 2                  TRA     s:16501
         2 002737   002745 710000 2                  TRA     s:16477
         2 002740   002753 710000 2                  TRA     s:16481
         2 002741   002767 710000 2                  TRA     s:16489
         2 002742   003003 710000 2                  TRA     s:16497
         2 002743   002761 710000 2                  TRA     s:16485
         2 002744   002775 710000 2                  TRA     s:16493

     1505    16476    4           CASE (%XUE_EQUAL#);

     1506    16477    4               IF TEMP1 = TEMP2

  16477  2 002745   200536 236100                    LDQ     TEMP1,,AUTO
         2 002746   200537 116100                    CMPQ    TEMP2,,AUTO
         2 002747   003010 601000 2                  TNZ     s:16501
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:206  

     1507    16478    4               THEN
     1508    16479    4                   VALUE$ = ONE$;

  16479  2 002750   000002 236000 1                  LDQ     ONE$
         2 002751   200010 756100                    STQ     VALUE$,,AUTO
         2 002752   003010 710000 2                  TRA     s:16501

     1509    16480    4           CASE (%XUE_NEQUAL#);

     1510    16481    4               IF TEMP1 ~= TEMP2

  16481  2 002753   200536 236100                    LDQ     TEMP1,,AUTO
         2 002754   200537 116100                    CMPQ    TEMP2,,AUTO
         2 002755   003010 600000 2                  TZE     s:16501

     1511    16482    4               THEN
     1512    16483    4                   VALUE$ = ONE$;

  16483  2 002756   000002 236000 1                  LDQ     ONE$
         2 002757   200010 756100                    STQ     VALUE$,,AUTO
         2 002760   003010 710000 2                  TRA     s:16501

     1513    16484    4           CASE (%XUE_LTHAN#);

     1514    16485    4               IF TEMP1 < TEMP2

  16485  2 002761   200536 236100                    LDQ     TEMP1,,AUTO
         2 002762   200537 116100                    CMPQ    TEMP2,,AUTO
         2 002763   003010 605000 2                  TPL     s:16501

     1515    16486    4               THEN
     1516    16487    4                   VALUE$ = ONE$;

  16487  2 002764   000002 236000 1                  LDQ     ONE$
         2 002765   200010 756100                    STQ     VALUE$,,AUTO
         2 002766   003010 710000 2                  TRA     s:16501
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:207  

     1517    16488    4           CASE (%XUE_GTHAN#);

     1518    16489    4               IF TEMP1 > TEMP2

  16489  2 002767   200536 236100                    LDQ     TEMP1,,AUTO
         2 002770   200537 116100                    CMPQ    TEMP2,,AUTO
         2 002771   003010 604400 2                  TMOZ    s:16501

     1519    16490    4               THEN
     1520    16491    4                   VALUE$ = ONE$;

  16491  2 002772   000002 236000 1                  LDQ     ONE$
         2 002773   200010 756100                    STQ     VALUE$,,AUTO
         2 002774   003010 710000 2                  TRA     s:16501

     1521    16492    4           CASE (%XUE_LEQUAL#);

     1522    16493    4               IF TEMP1 <= TEMP2

  16493  2 002775   200536 236100                    LDQ     TEMP1,,AUTO
         2 002776   200537 116100                    CMPQ    TEMP2,,AUTO
         2 002777   003010 605400 2                  TPNZ    s:16501

     1523    16494    4               THEN
     1524    16495    4                   VALUE$ = ONE$;

  16495  2 003000   000002 236000 1                  LDQ     ONE$
         2 003001   200010 756100                    STQ     VALUE$,,AUTO
         2 003002   003010 710000 2                  TRA     s:16501

     1525    16496    4           CASE (%XUE_GEQUAL#);

     1526    16497    4               IF TEMP1 >= TEMP2

  16497  2 003003   200536 236100                    LDQ     TEMP1,,AUTO
         2 003004   200537 116100                    CMPQ    TEMP2,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:208  
         2 003005   003010 604000 2                  TMI     s:16501

     1527    16498    4               THEN
     1528    16499    4                   VALUE$ = ONE$;

  16499  2 003006   000002 236000 1                  LDQ     ONE$
         2 003007   200010 756100                    STQ     VALUE$,,AUTO

     1529    16500    4           END;                    /* Do case ... NUMERIC COMPARE ... end     */

     1530    16501    3           EXIT APPLY_CASE;

  16501  2 003010   007235 710000 2                  TRA     s:17160

     1531    16502    3   CHAR_COMPARE:
     1532    16503    3           CALL X$STRIP_BLANKS (VAL_STACK$(VAL_PTR-1));

  16503  2 003011   200022 720100       CHAR_COMPARE LXL0    VAL_PTR,,AUTO
         2 003012   200056 630510                    EPPR0   NUM_TO_POP_STACK+6,X0,AUTO
         2 003013   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 003014   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003015   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003016   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 003017   000000 011000                    NOP     0

     1533    16504    3           CALL X$STRIP_BLANKS (VAL_STACK$(VAL_PTR));

  16504  2 003020   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 003021   200057 630510                    EPPR0   VAL_STACK$,X0,AUTO
         2 003022   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 003023   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003024   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003025   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 003026   000000 011000                    NOP     0

     1534    16505    4           DO CASE (OP_STACK(OP_PTR));

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:209  
  16505  2 003027   200021 235100                    LDA     OP_PTR,,AUTO
         2 003030   000100 101505                    MRL     fill='000'O
         2 003031   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 003032   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 003033   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 003034   000007 136007                    SBLQ    7,DL
         2 003035   000006 116007                    CMPQ    6,DL
         2 003036   003040 602006 2                  TNC     s:16505+9,QL
         2 003037   007235 710000 2                  TRA     s:17160
         2 003040   003046 710000 2                  TRA     s:16507
         2 003041   003070 710000 2                  TRA     s:16512
         2 003042   003134 710000 2                  TRA     s:16522
         2 003043   003200 710000 2                  TRA     s:16532
         2 003044   003112 710000 2                  TRA     s:16517
         2 003045   003156 710000 2                  TRA     s:16527

     1535    16506    4           CASE (%XUE_EQUAL#);

     1536    16507    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT =

  16507  2 003046   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 003047   200056 470510                    LDP0    NUM_TO_POP_STACK+6,X0,AUTO
         2 003050   000100 101500                    MRL     fill='000'O
         2 003051   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 003052   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003053   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 003054   200057 471510                    LDP1    VAL_STACK$,X0,AUTO
         2 003055   000100 101500                    MRL     fill='000'O
         2 003056   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003057   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 003060   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 003061   040140 106540                    CMPC    fill='040'O
         2 003062   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         2 003063   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         2 003064   007235 601000 2                  TNZ     s:17160

     1537    16508    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:210  
     1538    16509    4               THEN
     1539    16510    4                   VALUE$ = ONE$;

  16510  2 003065   000002 236000 1                  LDQ     ONE$
         2 003066   200010 756100                    STQ     VALUE$,,AUTO
         2 003067   007235 710000 2                  TRA     s:17160

     1540    16511    4           CASE (%XUE_NEQUAL#);

     1541    16512    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT ~=

  16512  2 003070   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 003071   200056 470510                    LDP0    NUM_TO_POP_STACK+6,X0,AUTO
         2 003072   000100 101500                    MRL     fill='000'O
         2 003073   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 003074   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003075   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 003076   200057 471510                    LDP1    VAL_STACK$,X0,AUTO
         2 003077   000100 101500                    MRL     fill='000'O
         2 003100   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003101   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 003102   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 003103   040140 106540                    CMPC    fill='040'O
         2 003104   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         2 003105   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         2 003106   007235 600000 2                  TZE     s:17160

     1542    16513    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1543    16514    4               THEN
     1544    16515    4                   VALUE$ = ONE$;

  16515  2 003107   000002 236000 1                  LDQ     ONE$
         2 003110   200010 756100                    STQ     VALUE$,,AUTO
         2 003111   007235 710000 2                  TRA     s:17160

     1545    16516    4           CASE (%XUE_LTHAN#);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:211  
     1546    16517    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT <

  16517  2 003112   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 003113   200056 470510                    LDP0    NUM_TO_POP_STACK+6,X0,AUTO
         2 003114   000100 101500                    MRL     fill='000'O
         2 003115   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 003116   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003117   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 003120   200057 471510                    LDP1    VAL_STACK$,X0,AUTO
         2 003121   000100 101500                    MRL     fill='000'O
         2 003122   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003123   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 003124   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 003125   040140 106540                    CMPC    fill='040'O
         2 003126   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         2 003127   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         2 003130   007235 603000 2                  TRC     s:17160

     1547    16518    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1548    16519    4               THEN
     1549    16520    4                   VALUE$ = ONE$;

  16520  2 003131   000002 236000 1                  LDQ     ONE$
         2 003132   200010 756100                    STQ     VALUE$,,AUTO
         2 003133   007235 710000 2                  TRA     s:17160

     1550    16521    4           CASE (%XUE_GTHAN#);

     1551    16522    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT >

  16522  2 003134   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 003135   200056 470510                    LDP0    NUM_TO_POP_STACK+6,X0,AUTO
         2 003136   000100 101500                    MRL     fill='000'O
         2 003137   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 003140   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003141   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 003142   200057 471510                    LDP1    VAL_STACK$,X0,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:212  
         2 003143   000100 101500                    MRL     fill='000'O
         2 003144   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003145   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 003146   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 003147   040140 106540                    CMPC    fill='040'O
         2 003150   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         2 003151   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         2 003152   007235 603000 2                  TRC     s:17160

     1552    16523    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1553    16524    4               THEN
     1554    16525    4                   VALUE$ = ONE$;

  16525  2 003153   000002 236000 1                  LDQ     ONE$
         2 003154   200010 756100                    STQ     VALUE$,,AUTO
         2 003155   007235 710000 2                  TRA     s:17160

     1555    16526    4           CASE (%XUE_LEQUAL#);

     1556    16527    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT <=

  16527  2 003156   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 003157   200056 470510                    LDP0    NUM_TO_POP_STACK+6,X0,AUTO
         2 003160   000100 101500                    MRL     fill='000'O
         2 003161   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 003162   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003163   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 003164   200057 471510                    LDP1    VAL_STACK$,X0,AUTO
         2 003165   000100 101500                    MRL     fill='000'O
         2 003166   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003167   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 003170   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 003171   040140 106540                    CMPC    fill='040'O
         2 003172   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         2 003173   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         2 003174   007235 602000 2                  TNC     s:17160

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:213  
     1557    16528    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1558    16529    4               THEN
     1559    16530    4                   VALUE$ = ONE$;

  16530  2 003175   000002 236000 1                  LDQ     ONE$
         2 003176   200010 756100                    STQ     VALUE$,,AUTO
         2 003177   007235 710000 2                  TRA     s:17160

     1560    16531    4           CASE (%XUE_GEQUAL#);

     1561    16532    4               IF VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT >=

  16532  2 003200   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 003201   200056 470510                    LDP0    NUM_TO_POP_STACK+6,X0,AUTO
         2 003202   000100 101500                    MRL     fill='000'O
         2 003203   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 003204   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003205   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 003206   200057 471510                    LDP1    VAL_STACK$,X0,AUTO
         2 003207   000100 101500                    MRL     fill='000'O
         2 003210   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003211   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 003212   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 003213   040140 106540                    CMPC    fill='040'O
         2 003214   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         2 003215   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         2 003216   007235 602000 2                  TNC     s:17160

     1562    16533    4                 VAL_STACK$(VAL_PTR) -> X$STRING.TEXT
     1563    16534    4               THEN
     1564    16535    4                   VALUE$ = ONE$;

  16535  2 003217   000002 236000 1                  LDQ     ONE$
         2 003220   200010 756100                    STQ     VALUE$,,AUTO

     1565    16536    4           END;                         /* Do case ... CHAR COMPARE ... end   */

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:214  
  16536  2 003221   007235 710000 2                  TRA     s:17160

     1566    16537
     1567    16538        /*
     1568    16539             ***** WILDCARDING COMPARISON OPERATORS ...
     1569    16540        */
     1570    16541    3       CASE (%XUE_WCN_RPAT#);

     1571    16542    3           CALL X$WILDTCMP (VAL_STACK$(VAL_PTR-1) -> X$STRING,

  16542  2 003222   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 003223   200056 471511                    LDP1    NUM_TO_POP_STACK+6,X1,AUTO
         2 003224   200057 473511                    LDP3    VAL_STACK$,X1,AUTO
         2 003225   000012 236000 3                  LDQ     10
         2 003226   201253 756100                    STQ     FPT_FID+73,,AUTO
         2 003227   200004 236100                    LDQ     @XUE_ECB,,AUTO
         2 003230   000011 036003                    ADLQ    9,DU
         2 003231   201252 756100                    STQ     FPT_FID+72,,AUTO
         2 003232   201251 453500                    STP3    FPT_FID+71,,AUTO
         2 003233   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 003234   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003235   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 003236   000000 701000 xent               TSX1    X$WILDTCMP
         2 003237   003315 702000 2                  TSX2    WILD_AND_CRAZY

     1572    16543    3             VAL_STACK$(VAL_PTR) -> X$STRING,
     1573    16544    3             XUE_ECB.ERR,'1'B) ALTRET (WILD_AND_CRAZY);
     1574    16545    3           GOTO WILD_AND_CRAZY;

  16545  2 003240   003315 710000 2                  TRA     WILD_AND_CRAZY

     1575    16546    3       CASE (%XUE_WCN_LPAT#);

     1576    16547    3           CALL X$WILDTCMP (VAL_STACK$(VAL_PTR) -> X$STRING,

  16547  2 003241   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 003242   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:215  
         2 003243   200056 473511                    LDP3    NUM_TO_POP_STACK+6,X1,AUTO
         2 003244   000012 236000 3                  LDQ     10
         2 003245   201253 756100                    STQ     FPT_FID+73,,AUTO
         2 003246   200004 236100                    LDQ     @XUE_ECB,,AUTO
         2 003247   000011 036003                    ADLQ    9,DU
         2 003250   201252 756100                    STQ     FPT_FID+72,,AUTO
         2 003251   201251 453500                    STP3    FPT_FID+71,,AUTO
         2 003252   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 003253   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003254   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 003255   000000 701000 xent               TSX1    X$WILDTCMP
         2 003256   003315 702000 2                  TSX2    WILD_AND_CRAZY

     1577    16548    3             VAL_STACK$(VAL_PTR-1) -> X$STRING,
     1578    16549    3             XUE_ECB.ERR,'1'B) ALTRET (WILD_AND_CRAZY);
     1579    16550    3           GOTO WILD_AND_CRAZY;

  16550  2 003257   003315 710000 2                  TRA     WILD_AND_CRAZY

     1580    16551    3       CASE (%XUE_WEQ_RPAT#);

     1581    16552    3           CALL X$WILDTCMP (VAL_STACK$(VAL_PTR-1) -> X$STRING,

  16552  2 003260   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 003261   200056 471511                    LDP1    NUM_TO_POP_STACK+6,X1,AUTO
         2 003262   200057 473511                    LDP3    VAL_STACK$,X1,AUTO
         2 003263   000013 236000 3                  LDQ     11
         2 003264   201253 756100                    STQ     FPT_FID+73,,AUTO
         2 003265   200004 236100                    LDQ     @XUE_ECB,,AUTO
         2 003266   000011 036003                    ADLQ    9,DU
         2 003267   201252 756100                    STQ     FPT_FID+72,,AUTO
         2 003270   201251 453500                    STP3    FPT_FID+71,,AUTO
         2 003271   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 003272   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003273   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 003274   000000 701000 xent               TSX1    X$WILDTCMP
         2 003275   003315 702000 2                  TSX2    WILD_AND_CRAZY
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:216  

     1582    16553    3             VAL_STACK$(VAL_PTR) -> X$STRING,
     1583    16554    3             XUE_ECB.ERR,'0'B) ALTRET (WILD_AND_CRAZY);
     1584    16555    3           GOTO WILD_AND_CRAZY;

  16555  2 003276   003315 710000 2                  TRA     WILD_AND_CRAZY

     1585    16556    3       CASE (%XUE_WEQ_LPAT#);

     1586    16557    3           CALL X$WILDTCMP (VAL_STACK$(VAL_PTR) -> X$STRING,

  16557  2 003277   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 003300   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 003301   200056 473511                    LDP3    NUM_TO_POP_STACK+6,X1,AUTO
         2 003302   000013 236000 3                  LDQ     11
         2 003303   201253 756100                    STQ     FPT_FID+73,,AUTO
         2 003304   200004 236100                    LDQ     @XUE_ECB,,AUTO
         2 003305   000011 036003                    ADLQ    9,DU
         2 003306   201252 756100                    STQ     FPT_FID+72,,AUTO
         2 003307   201251 453500                    STP3    FPT_FID+71,,AUTO
         2 003310   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 003311   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003312   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 003313   000000 701000 xent               TSX1    X$WILDTCMP
         2 003314   003315 702000 2                  TSX2    WILD_AND_CRAZY

     1587    16558    3             VAL_STACK$(VAL_PTR-1) -> X$STRING,
     1588    16559    3             XUE_ECB.ERR,'0'B) ALTRET (WILD_AND_CRAZY);

  16559  2 003315                       WILD_AND_CR* null
     1589    16560    3   WILD_AND_CRAZY: ;
     1590    16561    3           IF XUE_ECB.ERR.CODE = %E$XUW#WILD_OK THEN

  16561  2 003315   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 003316   000011 236100                    LDQ     9,,PR0
         2 003317   377770 376007                    ANQ     131064,DL
         2 003320   003720 116007                    CMPQ    2000,DL
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:217  
         2 003321   003325 601000 2                  TNZ     s:16564

     1591    16562    3               VALUE$ = ONE$;

  16562  2 003322   000002 236000 1                  LDQ     ONE$
         2 003323   200010 756100                    STQ     VALUE$,,AUTO
         2 003324   007235 710000 2                  TRA     s:17160

     1592    16563    3           ELSE
     1593    16564    3               IF XUE_ECB.ERR.CODE = %E$XUW#NOMATCH THEN

  16564  2 003325   004000 116007                    CMPQ    2048,DL
         2 003326   003332 601000 2                  TNZ     s:16568

     1594    16565    3                   VALUE$ = ZERO$;

  16565  2 003327   000000 236000 1                  LDQ     ZERO$
         2 003330   200010 756100                    STQ     VALUE$,,AUTO
         2 003331   007235 710000 2                  TRA     s:17160

     1595    16566    3               ELSE
     1596    16567    4               DO;

     1597    16568    4                   XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16568  2 003332   200022 235100                    LDA     VAL_PTR,,AUTO
         2 003333   000001 735000                    ALS     1
         2 003334   000100 100505                    MLR     fill='000'O
         2 003335   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 003336   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     1598    16569    4                   ALTRETURN;

  16569  2 003337   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 003340   000000 702211                    TSX2  ! 0,X1

     1599    16570    4               END;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:218  
     1600    16571
     1601    16572        /*
     1602    16573             ***** CHARACTER MANIPULATION FUNCTIONS and OPERATORS ...
     1603    16574        */
     1604    16575    3       CASE (%XUE_$ACCT#);

     1605    16576    3           MCB.SIZE = LENGTHC(B$JIT.ACCN)+1;

  16576  2 003341   000011 235007                    LDA     9,DL
         2 003342   000006 755100                    STA     6,,PR0

     1606    16577    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16577  2 003343   200005 630500                    EPPR0   @MCB,,AUTO
         2 003344   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003345   000000 701000 xent               TSX1    X$ALLOCATE
         2 003346   007416 702000 2                  TSX2    E_ALLOCATE

     1607    16578    3           VALUE$ = MCB.ADDRESS$;

  16578  2 003347   200005 470500                    LDP0    @MCB,,AUTO
         2 003350   000000 236100                    LDQ     0,,PR0
         2 003351   200010 756100                    STQ     VALUE$,,AUTO

     1608    16579    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.ACCN);

  16579  2 003352   200010 471500                    LDP1    VALUE$,,AUTO
         2 003353   000100 101400                    MRL     fill='000'O
         2 003354   000012 000004 xsym               ADSC9   B_VECTNIL+10             cn=0,n=4
         2 003355   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1609    16580    3           VALUE$ -> X$STRING.TEXT = B$JIT.ACCN;

  16580  2 003356   200010 471500                    LDP1    VALUE$,,AUTO
         2 003357   000100 101500                    MRL     fill='000'O
         2 003360   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003361   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:219  
         2 003362   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 003363   000000 473400 xsym               LDP3    B$JIT$
         2 003364   040140 100500                    MLR     fill='040'O
         2 003365   300001 000010                    ADSC9   1,,PR3                   cn=0,n=8
         2 003366   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     1610    16581    3           CALL X$STRIP_BLANKS (VALUE$);

  16581  2 003367   200010 631500                    EPPR1   VALUE$,,AUTO
         2 003370   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 003371   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003372   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003373   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 003374   000000 011000                    NOP     0
         2 003375   007235 710000 2                  TRA     s:17160

     1611    16582    3       CASE (%XUE_CMDVAR_EXIST#);

     1612    16583    3           VALUE$ = ZERO$;

  16583  2 003376   000000 236000 1                  LDQ     ZERO$
         2 003377   200010 756100                    STQ     VALUE$,,AUTO

     1613    16584    3           CALL TEST_VAR (VAL_STACK$(VAL_PTR))

  16584  2 003400   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 003401   200057 631511                    EPPR1   VAL_STACK$,X1,AUTO
         2 003402   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 003403   000066 701000 2                  TSX1    TEST_VAR
         2 003404   003407 702000 2                  TSX2    s:16587

     1614    16585    4           WHENRETURN DO;

     1615    16586    4               VALUE$ = ONE$;

  16586  2 003405   000002 236000 1                  LDQ     ONE$
         2 003406   200010 756100                    STQ     VALUE$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:220  

     1616    16587    4           END;

  16587  2 003407   007235 710000 2                  TRA     s:17160

     1617    16588    3       CASE (%XUE_CONCAT#);

     1618    16589    3           TEMP1 = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ +

  16589  2 003410   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 003411   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 003412   200056 473511                    LDP3    NUM_TO_POP_STACK+6,X1,AUTO
         2 003413   000100 101500                    MRL     fill='000'O
         2 003414   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 003415   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 003416   000100 101500                    MRL     fill='000'O
         2 003417   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003420   201251 000004                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=4
         2 003421   201251 236100                    LDQ     FPT_FID+71,,AUTO
         2 003422   201250 036100                    ADLQ    FPT_FID+70,,AUTO
         2 003423   200536 756100                    STQ     TEMP1,,AUTO

     1619    16590    3             VAL_STACK$(VAL_PTR-1) -> X$STRING.SIZ;
     1620    16591    3           IF TEMP1 > 511   /* Max size of COMMAND VARIABLE */

  16591  2 003424   000777 116007                    CMPQ    511,DL
         2 003425   003440 604400 2                  TMOZ    s:16598

     1621    16592    3           THEN   /* Wraparound will occure */
     1622    16593    4           DO;

     1623    16594    4               XUE_ECB.ERR = E_CVARTOOBIG;

  16594  2 003426   000435 236000 1                  LDQ     E_CVARTOOBIG
         2 003427   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 003430   100011 756100                    STQ     9,,PR1

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:221  
     1624    16595    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16595  2 003431   200022 235100                    LDA     VAL_PTR,,AUTO
         2 003432   000001 735000                    ALS     1
         2 003433   000100 100505                    MLR     fill='000'O
         2 003434   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 003435   100010 000002                    ADSC9   8,,PR1                   cn=0,n=2

     1625    16596    4               ALTRETURN;

  16596  2 003436   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 003437   000000 702211                    TSX2  ! 0,X1

     1626    16597    4           END;
     1627    16598    3           MCB.SIZE = TEMP1+1;             /* 1 byte for COUNT                   */

  16598  2 003440   000001 036007                    ADLQ    1,DL
         2 003441   000006 756100                    STQ     6,,PR0

     1628    16599    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16599  2 003442   200005 630500                    EPPR0   @MCB,,AUTO
         2 003443   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003444   000000 701000 xent               TSX1    X$ALLOCATE
         2 003445   007416 702000 2                  TSX2    E_ALLOCATE

     1629    16600    3           VALUE$ = MCB.ADDRESS$;

  16600  2 003446   200005 470500                    LDP0    @MCB,,AUTO
         2 003447   000000 236100                    LDQ     0,,PR0
         2 003450   200010 756100                    STQ     VALUE$,,AUTO

     1630    16601    3           VALUE$ -> X$STRING.SIZ = TEMP1;

  16601  2 003451   200010 471500                    LDP1    VALUE$,,AUTO
         2 003452   000100 101500                    MRL     fill='000'O
         2 003453   200536 000004                    ADSC9   TEMP1,,AUTO              cn=0,n=4
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:222  
         2 003454   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1631    16602    3           CALL CONCAT (VALUE$ -> X$STRING.TEXT,

  16602  2 003455   200010 471500                    LDP1    VALUE$,,AUTO
         2 003456   000100 101500                    MRL     fill='000'O
         2 003457   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003460   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003461   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 003462   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 003463   200056 473511                    LDP3    NUM_TO_POP_STACK+6,X1,AUTO
         2 003464   000100 101500                    MRL     fill='000'O
         2 003465   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 003466   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 003467   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 003470   200057 474511                    LDP4    VAL_STACK$,X1,AUTO
         2 003471   000100 101500                    MRL     fill='000'O
         2 003472   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 003473   201252 000002                    ADSC9   FPT_FID+72,,AUTO         cn=0,n=2
         2 003474   201252 223100                    LDX3    FPT_FID+72,,AUTO
         2 003475   040140 100540                    MLR     fill='040'O
         2 003476   300000 200012                    ADSC9   0,,PR3                   cn=1,n=*X2
         2 003477   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 003500   000000 635012                    EAA     0,X2
         2 003501   000022 771000                    ARL     18
         2 003502   201253 755100                    STA     FPT_FID+73,,AUTO
         2 003503   000000 636010                    EAQ     0,X0
         2 003504   000022 772000                    QRL     18
         2 003505   201253 136100                    SBLQ    FPT_FID+73,,AUTO
         2 003506   003516 604400 2                  TMOZ    s:16602+33
         2 003507   200010 471500                    LDP1    VALUE$,,AUTO
         2 003510   000000 624006                    EAX4    0,QL
         2 003511   000000 636012                    EAQ     0,X2
         2 003512   000022 772000                    QRL     18
         2 003513   040146 100540                    MLR     fill='040'O
         2 003514   400000 200013                    ADSC9   0,,PR4                   cn=1,n=*X3
         2 003515   100000 200014                    ADSC9   0,Q,PR1                  cn=1,n=*X4
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:223  
         2 003516   007235 710000 2                  TRA     s:17160

     1632    16603    3             VAL_STACK$(VAL_PTR-1) -> X$STRING.TEXT,
     1633    16604    3             VAL_STACK$(VAL_PTR) -> X$STRING.TEXT);
     1634    16605    3       CASE (%XUE_$DATE#);

     1635    16606    3           MCB.SIZE = 16;

  16606  2 003517   000020 235007                    LDA     16,DL
         2 003520   000006 755100                    STA     6,,PR0

     1636    16607    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16607  2 003521   200005 630500                    EPPR0   @MCB,,AUTO
         2 003522   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003523   000000 701000 xent               TSX1    X$ALLOCATE
         2 003524   007416 702000 2                  TSX2    E_ALLOCATE

     1637    16608    3           VALUE$ = MCB.ADDRESS$;

  16608  2 003525   200005 470500                    LDP0    @MCB,,AUTO
         2 003526   000000 236100                    LDQ     0,,PR0
         2 003527   200010 756100                    STQ     VALUE$,,AUTO

     1638    16609    3           VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;

  16609  2 003530   000006 236100                    LDQ     6,,PR0
         2 003531   000001 136007                    SBLQ    1,DL
         2 003532   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 003533   200010 471500                    LDP1    VALUE$,,AUTO
         2 003534   000100 101500                    MRL     fill='000'O
         2 003535   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 003536   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1639    16610    3           VALUE$ -> X$STRING.TEXT = ' ';

  16610  2 003537   200010 471500                    LDP1    VALUE$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:224  
         2 003540   000100 101500                    MRL     fill='000'O
         2 003541   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003542   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003543   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 003544   040140 100400                    MLR     fill='040'O
         2 003545   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003546   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     1640    16611    3           FPT_TIME = CFPT_TIME;

  16611  2 003547   000100 100400                    MLR     fill='000'O
         2 003550   000232 000060 1                  ADSC9   CFPT_TIME                cn=0,n=48
         2 003551   200316 000060                    ADSC9   FPT_TIME,,AUTO           cn=0,n=48

     1641    16612    3           FPT_TIME.V_ = VECTOR(FPT_TIME.V);

  16612  2 003552   000004 235000 3                  LDA     4
         2 003553   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 003554   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 003555   000330 036003                    ADLQ    216,DU
         2 003556   200316 757100                    STAQ    FPT_TIME,,AUTO

     1642    16613    3           FPT_TIME.DATE_ = VECTOR(VALUE$ -> X$STRING.TEXT);

  16613  2 003557   200010 471500                    LDP1    VALUE$,,AUTO
         2 003560   000100 101500                    MRL     fill='000'O
         2 003561   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003562   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003563   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 003564   000000 635010                    EAA     0,X0
         2 003565   000002 771000                    ARL     2
         2 003566   000140 135007                    SBLA    96,DL
         2 003567   200010 236100                    LDQ     VALUE$,,AUTO
         2 003570   200000 036007                    ADLQ    65536,DL
         2 003571   200320 757100                    STAQ    FPT_TIME+2,,AUTO

     1643    16614    3           FPT_TIME.V.DEST# = %ANS#;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:225  

  16614  2 003572   000002 236003                    LDQ     2,DU
         2 003573   200330 552120                    STBQ    FPT_TIME+10,'20'O,AUTO

     1644    16615    3           CALL TIME_FUNCTIONS ALTRET(E_REDUCE);

  16615  2 003574   002143 701000 2                  TSX1    TIME_FUNCTIONS
         2 003575   007402 702000 2                  TSX2    E_REDUCE

     1645    16616    3           CALL X$STRIP_BLANKS (VALUE$);

  16616  2 003576   200010 630500                    EPPR0   VALUE$,,AUTO
         2 003577   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 003600   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003601   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003602   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 003603   000000 011000                    NOP     0
         2 003604   007235 710000 2                  TRA     s:17160

     1646    16617    3       CASE (%XUE_$DAY#);

     1647    16618    3           MCB.SIZE = 16;

  16618  2 003605   000020 235007                    LDA     16,DL
         2 003606   000006 755100                    STA     6,,PR0

     1648    16619    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16619  2 003607   200005 630500                    EPPR0   @MCB,,AUTO
         2 003610   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003611   000000 701000 xent               TSX1    X$ALLOCATE
         2 003612   007416 702000 2                  TSX2    E_ALLOCATE

     1649    16620    3           VALUE$ = MCB.ADDRESS$;

  16620  2 003613   200005 470500                    LDP0    @MCB,,AUTO
         2 003614   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:226  
         2 003615   200010 756100                    STQ     VALUE$,,AUTO

     1650    16621    3           VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;

  16621  2 003616   000006 236100                    LDQ     6,,PR0
         2 003617   000001 136007                    SBLQ    1,DL
         2 003620   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 003621   200010 471500                    LDP1    VALUE$,,AUTO
         2 003622   000100 101500                    MRL     fill='000'O
         2 003623   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 003624   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1651    16622    3           VALUE$ -> X$STRING.TEXT = ' ';

  16622  2 003625   200010 471500                    LDP1    VALUE$,,AUTO
         2 003626   000100 101500                    MRL     fill='000'O
         2 003627   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003630   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003631   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 003632   040140 100400                    MLR     fill='040'O
         2 003633   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003634   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     1652    16623    3           FPT_TIME = CFPT_TIME;

  16623  2 003635   000100 100400                    MLR     fill='000'O
         2 003636   000232 000060 1                  ADSC9   CFPT_TIME                cn=0,n=48
         2 003637   200316 000060                    ADSC9   FPT_TIME,,AUTO           cn=0,n=48

     1653    16624    3           FPT_TIME.V_ = VECTOR(FPT_TIME.V);

  16624  2 003640   000004 235000 3                  LDA     4
         2 003641   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 003642   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 003643   000330 036003                    ADLQ    216,DU
         2 003644   200316 757100                    STAQ    FPT_TIME,,AUTO

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:227  
     1654    16625    3           FPT_TIME.DAY_ = VECTOR(VALUE$ -> X$STRING.TEXT);

  16625  2 003645   200010 471500                    LDP1    VALUE$,,AUTO
         2 003646   000100 101500                    MRL     fill='000'O
         2 003647   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003650   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003651   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 003652   000000 635010                    EAA     0,X0
         2 003653   000002 771000                    ARL     2
         2 003654   000140 135007                    SBLA    96,DL
         2 003655   200010 236100                    LDQ     VALUE$,,AUTO
         2 003656   200000 036007                    ADLQ    65536,DL
         2 003657   200324 757100                    STAQ    FPT_TIME+6,,AUTO

     1655    16626    3           CALL TIME_FUNCTIONS ALTRET(E_REDUCE);

  16626  2 003660   002143 701000 2                  TSX1    TIME_FUNCTIONS
         2 003661   007402 702000 2                  TSX2    E_REDUCE

     1656    16627    3           CALL X$STRIP_BLANKS (VALUE$);

  16627  2 003662   200010 630500                    EPPR0   VALUE$,,AUTO
         2 003663   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 003664   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003665   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003666   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 003667   000000 011000                    NOP     0
         2 003670   007235 710000 2                  TRA     s:17160

     1657    16628    3       CASE (%XUE_$DIR#);

     1658    16629    3           MCB.SIZE = LENGTHC(B$JIT.FACCN)+1;

  16629  2 003671   000011 235007                    LDA     9,DL
         2 003672   000006 755100                    STA     6,,PR0

     1659    16630    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:228  

  16630  2 003673   200005 630500                    EPPR0   @MCB,,AUTO
         2 003674   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003675   000000 701000 xent               TSX1    X$ALLOCATE
         2 003676   007416 702000 2                  TSX2    E_ALLOCATE

     1660    16631    3           VALUE$ = MCB.ADDRESS$;

  16631  2 003677   200005 470500                    LDP0    @MCB,,AUTO
         2 003700   000000 236100                    LDQ     0,,PR0
         2 003701   200010 756100                    STQ     VALUE$,,AUTO

     1661    16632    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.FACCN);

  16632  2 003702   200010 471500                    LDP1    VALUE$,,AUTO
         2 003703   000100 101400                    MRL     fill='000'O
         2 003704   000012 000004 xsym               ADSC9   B_VECTNIL+10             cn=0,n=4
         2 003705   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1662    16633    3           VALUE$ -> X$STRING.TEXT = B$JIT.FACCN;

  16633  2 003706   200010 471500                    LDP1    VALUE$,,AUTO
         2 003707   000100 101500                    MRL     fill='000'O
         2 003710   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 003711   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 003712   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 003713   000000 473400 xsym               LDP3    B$JIT$
         2 003714   040140 100500                    MLR     fill='040'O
         2 003715   300006 000010                    ADSC9   6,,PR3                   cn=0,n=8
         2 003716   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     1663    16634    3           CALL X$STRIP_BLANKS (VALUE$);

  16634  2 003717   200010 631500                    EPPR1   VALUE$,,AUTO
         2 003720   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 003721   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 003722   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:229  
         2 003723   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 003724   000000 011000                    NOP     0
         2 003725   007235 710000 2                  TRA     s:17160

     1664    16635    3       CASE (%XUE_$EOF#);

     1665    16636    3           CALL GET_VAR (EOF_NAME$,VALUE$,CHARPOS_STACK(VAL_PTR)) ALTRET(E_REDUCE);

  16636  2 003726   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 003727   200022 236100                    LDQ     VAL_PTR,,AUTO
         2 003730   000021 736000                    QLS     17
         2 003731   000157 036003                    ADLQ    111,DU
         2 003732   201250 036100                    ADLQ    FPT_FID+70,,AUTO
         2 003733   201047 756100                    STQ     @CHARPOS,,AUTO
         2 003734   200010 631500                    EPPR1   VALUE$,,AUTO
         2 003735   201046 451500                    STP1    @VALUE$,,AUTO
         2 003736   000014 236000 3                  LDQ     12
         2 003737   201045 756100                    STQ     @VAR_NAME$,,AUTO
         2 003740   000003 701000 2                  TSX1    GET_VAR
         2 003741   007402 702000 2                  TSX2    E_REDUCE

     1666    16637        /*
     1667    16638             ***** Once $EOF has been sampled it must be reset.
     1668    16639                   However, it must not be reset here. Because the
     1669    16640                   rest of the expression may have some error
     1670    16641                   (like workspace overflow) and when X$EVAL is
     1671    16642                   called again, the flag would already be reset.
     1672    16643                   Therefore, a flag is set here and when X$EVALUATE
     1673    16644                   returns the $EOF flag will be reset...
     1674    16645        */
     1675    16646    3           XUE_ECB.INTERNAL.RESET_EOF# = %YES#;

  16646  2 003742   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 003743   400000 236003                    LDQ     -131072,DU
         2 003744   000020 256100                    ORSQ    16,,PR0
         2 003745   007235 710000 2                  TRA     s:17160

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:230  
     1676    16647    3       CASE (%XUE_$FID_EXIST#);

     1677    16648    3           FPARAM_VECTOR = VECTOR(NIL);

  16648  2 003746   000016 237000 3                  LDAQ    14
         2 003747   200014 757100                    STAQ    FPARAM_VECTOR,,AUTO

     1678    16649    3           CALL OPEN_TEST_FILE (VALUE) ALTRET(E_REDUCE);

  16649  2 003750   200535 631500                    EPPR1   VALUE,,AUTO
         2 003751   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 003752   001011 701000 2                  TSX1    OPEN_TEST_FILE
         2 003753   007402 702000 2                  TSX2    E_REDUCE

     1679    16650    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  16650  2 003754   200010 630500                    EPPR0   VALUE$,,AUTO
         2 003755   201046 450500                    STP0    @VALUE$,,AUTO
         2 003756   200535 631500                    EPPR1   VALUE,,AUTO
         2 003757   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 003760   002013 701000 2                  TSX1    STASH_VALUE
         2 003761   007402 702000 2                  TSX2    E_REDUCE
         2 003762   007235 710000 2                  TRA     s:17160

     1680    16651    3       CASE (%XUE_$FID_ASN#);

     1681    16652    3           CALL FID_USERTHING ALTRET(E_REDUCE);

  16652  2 003763   000652 701000 2                  TSX1    FID_USERTHING
         2 003764   007402 702000 2                  TSX2    E_REDUCE

     1682    16653    3           TEMP = %TOP_ASN#;

  16653  2 003765   000010 235007                    LDA     8,DL
         2 003766   200026 755100                    STA     TEMP,,AUTO

     1683    16654    4           DO WHILE (FID_ASN ~= ASN_TBL.CODE(TEMP)
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:231  

  16654  2 003767   003772 710000 2                  TRA     s:16657

     1684    16655    4             AND TEMP > 0);
     1685    16656    4               TEMP = TEMP -1;

  16656  2 003770   000001 336007                    LCQ     1,DL
         2 003771   200026 056100                    ASQ     TEMP,,AUTO

     1686    16657    4           END;

  16657  2 003772   200026 236100                    LDQ     TEMP,,AUTO
         2 003773   000012 402007                    MPY     10,DL
         2 003774   000100 101406                    MRL     fill='000'O
         2 003775   000015 000001 1                  ADSC9   ASN_TBL,Q                cn=0,n=1
         2 003776   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 003777   200532 236100                    LDQ     FID_ASN,,AUTO
         2 004000   000033 772000                    QRL     27
         2 004001   201250 116100                    CMPQ    FPT_FID+70,,AUTO
         2 004002   004005 600000 2                  TZE     s:16658
         2 004003   200026 235100                    LDA     TEMP,,AUTO
         2 004004   003770 605400 2                  TPNZ    s:16656

     1687    16658    3           MCB.SIZE = ASN_TBL.C(TEMP) + 1; /* One for size */

  16658  2 004005   200026 236100                    LDQ     TEMP,,AUTO
         2 004006   000012 402007                    MPY     10,DL
         2 004007   000100 101406                    MRL     fill='000'O
         2 004010   000017 200001 1                  ADSC9   ASN_TBL+2,Q              cn=1,n=1
         2 004011   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 004012   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004013   000001 036007                    ADLQ    1,DL
         2 004014   200005 470500                    LDP0    @MCB,,AUTO
         2 004015   000006 756100                    STQ     6,,PR0

     1688    16659    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:232  
  16659  2 004016   200005 630500                    EPPR0   @MCB,,AUTO
         2 004017   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004020   000000 701000 xent               TSX1    X$ALLOCATE
         2 004021   007416 702000 2                  TSX2    E_ALLOCATE

     1689    16660    3           VALUE$ = MCB.ADDRESS$;

  16660  2 004022   200005 470500                    LDP0    @MCB,,AUTO
         2 004023   000000 236100                    LDQ     0,,PR0
         2 004024   200010 756100                    STQ     VALUE$,,AUTO

     1690    16661    3           VALUE$ -> X$STRING.SIZ = ASN_TBL.C(TEMP);

  16661  2 004025   200026 236100                    LDQ     TEMP,,AUTO
         2 004026   000012 402007                    MPY     10,DL
         2 004027   200010 471500                    LDP1    VALUE$,,AUTO
         2 004030   000100 100406                    MLR     fill='000'O
         2 004031   000017 200001 1                  ADSC9   ASN_TBL+2,Q              cn=1,n=1
         2 004032   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1691    16662    3           VALUE$ -> X$STRING.TEXT = ASN_TBL.TEXT(TEMP);

  16662  2 004033   200010 471500                    LDP1    VALUE$,,AUTO
         2 004034   000100 101500                    MRL     fill='000'O
         2 004035   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 004036   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 004037   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 004040   200026 236100                    LDQ     TEMP,,AUTO
         2 004041   000012 402007                    MPY     10,DL
         2 004042   040140 100406                    MLR     fill='040'O
         2 004043   000015 200010 1                  ADSC9   ASN_TBL,Q                cn=1,n=8
         2 004044   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 004045   007235 710000 2                  TRA     s:17160

     1692    16663    3       CASE (%XUE_$FID_RECS#,%XUE_$FID_GRANS#,

     1693    16664    3             %XUE_$FID_TYPE#,%XUE_$FID_ORG#,
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:233  
     1694    16665    3             %XUE_$FID_UGRANS#,%XUE_$FID_NGAVAL#);
     1695    16666    3           MCB.SIZE = 1024 * 4;  /* Room for entire FIT */

  16666  2 004046   010000 235007                    LDA     4096,DL
         2 004047   000006 755100                    STA     6,,PR0

     1696    16667    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16667  2 004050   200005 630500                    EPPR0   @MCB,,AUTO
         2 004051   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004052   000000 701000 xent               TSX1    X$ALLOCATE
         2 004053   007416 702000 2                  TSX2    E_ALLOCATE

     1697    16668    3           FPARAM_VECTOR = VECTOR(NIL);    /* Set other vector parts             */

  16668  2 004054   000016 237000 3                  LDAQ    14
         2 004055   200014 757100                    STAQ    FPARAM_VECTOR,,AUTO

     1698    16669    3           VBASE(FPARAM_VECTOR) = MCB.ADDRESS$;

  16669  2 004056   200005 470500                    LDP0    @MCB,,AUTO
         2 004057   000000 236100                    LDQ     0,,PR0
         2 004060   200015 756100                    STQ     FPARAM_VECTOR+1,,AUTO

     1699    16670    3           VBOUND(FPARAM_VECTOR) = MCB.SIZE -1;

  16670  2 004061   000006 236100                    LDQ     6,,PR0
         2 004062   000001 136007                    SBLQ    1,DL
         2 004063   000020 736000                    QLS     16
         2 004064   200014 676100                    ERQ     FPARAM_VECTOR,,AUTO
         2 004065   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 004066   200014 656100                    ERSQ    FPARAM_VECTOR,,AUTO

     1700    16671    3           CALL OPEN_TEST_FILE (VALUE) ALTRET(E_RELFPARAM);

  16671  2 004067   200535 631500                    EPPR1   VALUE,,AUTO
         2 004070   201045 451500                    STP1    @VAR_NAME$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:234  
         2 004071   001011 701000 2                  TSX1    OPEN_TEST_FILE
         2 004072   007314 702000 2                  TSX2    E_RELFPARAM

     1701    16672    3           IF VALUE = 0 THEN               /* File does not exist                */

  16672  2 004073   200535 235100                    LDA     VALUE,,AUTO
         2 004074   007325 600000 2                  TZE     E_NONESUCH

     1702    16673    3               GOTO E_NONESUCH;
     1703    16674    3           TEMP$ = VBASE(FPARAM_VECTOR);

  16674  2 004075   200015 236100                    LDQ     FPARAM_VECTOR+1,,AUTO
         2 004076   200012 756100                    STQ     TEMP$,,AUTO

     1704    16675    3           CALL XSF$LOCCODP(TEMP$,03) ALTRET(E_RELFPARAM);

  16675  2 004077   000020 236000 3                  LDQ     16
         2 004100   201251 756100                    STQ     FPT_FID+71,,AUTO
         2 004101   200012 630500                    EPPR0   TEMP$,,AUTO
         2 004102   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 004103   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 004104   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 004105   000000 701000 xent               TSX1    XSF$LOCCODP
         2 004106   007314 702000 2                  TSX2    E_RELFPARAM

     1705    16676    4           DO CASE(OP_STACK(OP_PTR));

  16676  2 004107   200021 235100                    LDA     OP_PTR,,AUTO
         2 004110   000100 101505                    MRL     fill='000'O
         2 004111   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 004112   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 004113   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004114   000044 136007                    SBLQ    36,DL
         2 004115   000016 116007                    CMPQ    14,DL
         2 004116   004120 602006 2                  TNC     s:16676+9,QL
         2 004117   004326 710000 2                  TRA     s:16707
         2 004120   004245 710000 2                  TRA     s:16696
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:235  
         2 004121   004136 710000 2                  TRA     s:16678
         2 004122   004150 710000 2                  TRA     s:16681
         2 004123   004167 710000 2                  TRA     s:16684
         2 004124   004202 710000 2                  TRA     s:16687
         2 004125   004326 710000 2                  TRA     s:16707
         2 004126   004326 710000 2                  TRA     s:16707
         2 004127   004326 710000 2                  TRA     s:16707
         2 004130   004326 710000 2                  TRA     s:16707
         2 004131   004326 710000 2                  TRA     s:16707
         2 004132   004326 710000 2                  TRA     s:16707
         2 004133   004326 710000 2                  TRA     s:16707
         2 004134   004326 710000 2                  TRA     s:16707
         2 004135   004215 710000 2                  TRA     s:16690

     1706    16677    4           CASE(%XUE_$FID_RECS#);

     1707    16678    4               TEMP = TEMP$ -> CODE03.NRECS;

  16678  2 004136   200012 470500                    LDP0    TEMP$,,AUTO
         2 004137   000002 235100                    LDA     2,,PR0
         2 004140   200026 755100                    STA     TEMP,,AUTO

     1708    16679    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);

  16679  2 004141   200010 631500                    EPPR1   VALUE$,,AUTO
         2 004142   201046 451500                    STP1    @VALUE$,,AUTO
         2 004143   200026 633500                    EPPR3   TEMP,,AUTO
         2 004144   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 004145   002013 701000 2                  TSX1    STASH_VALUE
         2 004146   007402 702000 2                  TSX2    E_REDUCE
         2 004147   004326 710000 2                  TRA     s:16707

     1709    16680    4           CASE(%XUE_$FID_GRANS#);

     1710    16681    4               TEMP = TEMP$ -> CODE03.UGRANS + TEMP$ -> CODE03.NGAVAL;

  16681  2 004150   200012 470500                    LDP0    TEMP$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:236  
         2 004151   000003 236100                    LDQ     3,,PR0
         2 004152   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 004153   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 004154   000000 236100                    LDQ     0,,PR0
         2 004155   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 004156   201250 036100                    ADLQ    FPT_FID+70,,AUTO
         2 004157   200026 756100                    STQ     TEMP,,AUTO

     1711    16682    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);

  16682  2 004160   200010 631500                    EPPR1   VALUE$,,AUTO
         2 004161   201046 451500                    STP1    @VALUE$,,AUTO
         2 004162   200026 633500                    EPPR3   TEMP,,AUTO
         2 004163   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 004164   002013 701000 2                  TSX1    STASH_VALUE
         2 004165   007402 702000 2                  TSX2    E_REDUCE
         2 004166   004326 710000 2                  TRA     s:16707

     1712    16683    4           CASE(%XUE_$FID_UGRANS#);

     1713    16684    4               TEMP = TEMP$ -> CODE03.UGRANS;

  16684  2 004167   200012 470500                    LDP0    TEMP$,,AUTO
         2 004170   000000 236100                    LDQ     0,,PR0
         2 004171   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 004172   200026 756100                    STQ     TEMP,,AUTO

     1714    16685    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);

  16685  2 004173   200010 631500                    EPPR1   VALUE$,,AUTO
         2 004174   201046 451500                    STP1    @VALUE$,,AUTO
         2 004175   200026 633500                    EPPR3   TEMP,,AUTO
         2 004176   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 004177   002013 701000 2                  TSX1    STASH_VALUE
         2 004200   007402 702000 2                  TSX2    E_REDUCE
         2 004201   004326 710000 2                  TRA     s:16707

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:237  
     1715    16686    4           CASE(%XUE_$FID_NGAVAL#);

     1716    16687    4               TEMP = TEMP$ -> CODE03.NGAVAL;

  16687  2 004202   200012 470500                    LDP0    TEMP$,,AUTO
         2 004203   000003 236100                    LDQ     3,,PR0
         2 004204   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 004205   200026 756100                    STQ     TEMP,,AUTO

     1717    16688    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);

  16688  2 004206   200010 631500                    EPPR1   VALUE$,,AUTO
         2 004207   201046 451500                    STP1    @VALUE$,,AUTO
         2 004210   200026 633500                    EPPR3   TEMP,,AUTO
         2 004211   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 004212   002013 701000 2                  TSX1    STASH_VALUE
         2 004213   007402 702000 2                  TSX2    E_REDUCE
         2 004214   004326 710000 2                  TRA     s:16707

     1718    16689    4           CASE (%XUE_$FID_TYPE#);

     1719    16690    4               MCB.SIZE = SIZEC(CODE03.TYPE) + 1; /* One for size */

  16690  2 004215   000003 235007                    LDA     3,DL
         2 004216   200005 470500                    LDP0    @MCB,,AUTO
         2 004217   000006 755100                    STA     6,,PR0

     1720    16691    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16691  2 004220   200005 630500                    EPPR0   @MCB,,AUTO
         2 004221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004222   000000 701000 xent               TSX1    X$ALLOCATE
         2 004223   007416 702000 2                  TSX2    E_ALLOCATE

     1721    16692    4               VALUE$ = MCB.ADDRESS$;

  16692  2 004224   200005 470500                    LDP0    @MCB,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:238  
         2 004225   000000 236100                    LDQ     0,,PR0
         2 004226   200010 756100                    STQ     VALUE$,,AUTO

     1722    16693    4               VALUE$ -> X$STRING.SIZ = SIZEC(CODE03.TYPE);

  16693  2 004227   200010 471500                    LDP1    VALUE$,,AUTO
         2 004230   000100 101400                    MRL     fill='000'O
         2 004231   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         2 004232   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1723    16694    4               VALUE$ -> X$STRING.TEXT = TEMP$ -> CODE03.TYPE;

  16694  2 004233   200010 471500                    LDP1    VALUE$,,AUTO
         2 004234   000100 101500                    MRL     fill='000'O
         2 004235   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 004236   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 004237   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 004240   200012 473500                    LDP3    TEMP$,,AUTO
         2 004241   040140 100500                    MLR     fill='040'O
         2 004242   300001 400002                    ADSC9   1,,PR3                   cn=2,n=2
         2 004243   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 004244   004326 710000 2                  TRA     s:16707

     1724    16695    4           CASE (%XUE_$FID_ORG#);

     1725    16696    4               TEMP = %TOP_ORG#;

  16696  2 004245   000017 235007                    LDA     15,DL
         2 004246   200026 755100                    STA     TEMP,,AUTO

     1726    16697    5               DO WHILE(TEMP$ -> CODE03.ORG ~= ORG_TBL.CODE(TEMP)

  16697  2 004247   004252 710000 2                  TRA     s:16700

     1727    16698    5                 AND TEMP > 0);
     1728    16699    5                   TEMP = TEMP -1;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:239  
  16699  2 004250   000001 336007                    LCQ     1,DL
         2 004251   200026 056100                    ASQ     TEMP,,AUTO

     1729    16700    5               END;

  16700  2 004252   200026 236100                    LDQ     TEMP,,AUTO
         2 004253   000012 402007                    MPY     10,DL
         2 004254   000100 101406                    MRL     fill='000'O
         2 004255   000044 000001 1                  ADSC9   ORG_TBL,Q                cn=0,n=1
         2 004256   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 004257   200012 470500                    LDP0    TEMP$,,AUTO
         2 004260   000000 236100                    LDQ     0,,PR0
         2 004261   000033 772000                    QRL     27
         2 004262   201250 116100                    CMPQ    FPT_FID+70,,AUTO
         2 004263   004266 600000 2                  TZE     s:16701
         2 004264   200026 235100                    LDA     TEMP,,AUTO
         2 004265   004250 605400 2                  TPNZ    s:16699

     1730    16701    4               MCB.SIZE = ORG_TBL.C(TEMP) + 1; /* One for size */

  16701  2 004266   200026 236100                    LDQ     TEMP,,AUTO
         2 004267   000012 402007                    MPY     10,DL
         2 004270   000100 101406                    MRL     fill='000'O
         2 004271   000046 200001 1                  ADSC9   ORG_TBL+2,Q              cn=1,n=1
         2 004272   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 004273   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004274   000001 036007                    ADLQ    1,DL
         2 004275   200005 471500                    LDP1    @MCB,,AUTO
         2 004276   100006 756100                    STQ     6,,PR1

     1731    16702    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16702  2 004277   200005 630500                    EPPR0   @MCB,,AUTO
         2 004300   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004301   000000 701000 xent               TSX1    X$ALLOCATE
         2 004302   007416 702000 2                  TSX2    E_ALLOCATE

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:240  
     1732    16703    4               VALUE$ = MCB.ADDRESS$;

  16703  2 004303   200005 470500                    LDP0    @MCB,,AUTO
         2 004304   000000 236100                    LDQ     0,,PR0
         2 004305   200010 756100                    STQ     VALUE$,,AUTO

     1733    16704    4               VALUE$ -> X$STRING.SIZ = ORG_TBL.C(TEMP);

  16704  2 004306   200026 236100                    LDQ     TEMP,,AUTO
         2 004307   000012 402007                    MPY     10,DL
         2 004310   200010 471500                    LDP1    VALUE$,,AUTO
         2 004311   000100 100406                    MLR     fill='000'O
         2 004312   000046 200001 1                  ADSC9   ORG_TBL+2,Q              cn=1,n=1
         2 004313   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1734    16705    4               VALUE$ -> X$STRING.TEXT = ORG_TBL.TEXT(TEMP);

  16705  2 004314   200010 471500                    LDP1    VALUE$,,AUTO
         2 004315   000100 101500                    MRL     fill='000'O
         2 004316   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 004317   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 004320   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 004321   200026 236100                    LDQ     TEMP,,AUTO
         2 004322   000012 402007                    MPY     10,DL
         2 004323   040140 100406                    MLR     fill='040'O
         2 004324   000044 200010 1                  ADSC9   ORG_TBL,Q                cn=1,n=8
         2 004325   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     1735    16706    4           END;

     1736    16707    3           MCB.ADDRESS$ = VBASE(FPARAM_VECTOR) ;

  16707  2 004326   200015 236100                    LDQ     FPARAM_VECTOR+1,,AUTO
         2 004327   200005 470500                    LDP0    @MCB,,AUTO
         2 004330   000000 756100                    STQ     0,,PR0

     1737    16708    3           CALL X$DEALLOCATE(MCB) ALTRET(E_ALLOCATE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:241  

  16708  2 004331   200005 630500                    EPPR0   @MCB,,AUTO
         2 004332   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004333   000000 701000 xent               TSX1    X$DEALLOCATE
         2 004334   007416 702000 2                  TSX2    E_ALLOCATE
         2 004335   007235 710000 2                  TRA     s:17160

     1738    16709    3       CASE (%XUE_$HSET#);

     1739    16710    3           MCB.SIZE = LENGTHC(B$JIT.HPSN)+1;

  16710  2 004336   000007 235007                    LDA     7,DL
         2 004337   000006 755100                    STA     6,,PR0

     1740    16711    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16711  2 004340   200005 630500                    EPPR0   @MCB,,AUTO
         2 004341   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004342   000000 701000 xent               TSX1    X$ALLOCATE
         2 004343   007416 702000 2                  TSX2    E_ALLOCATE

     1741    16712    3           VALUE$ = MCB.ADDRESS$;

  16712  2 004344   200005 470500                    LDP0    @MCB,,AUTO
         2 004345   000000 236100                    LDQ     0,,PR0
         2 004346   200010 756100                    STQ     VALUE$,,AUTO

     1742    16713    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.HPSN);

  16713  2 004347   200010 471500                    LDP1    VALUE$,,AUTO
         2 004350   000100 101400                    MRL     fill='000'O
         2 004351   000010 000004 xsym               ADSC9   B_VECTNIL+8              cn=0,n=4
         2 004352   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1743    16714    3           VALUE$ -> X$STRING.TEXT = B$JIT.HPSN;

  16714  2 004353   200010 471500                    LDP1    VALUE$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:242  
         2 004354   000100 101500                    MRL     fill='000'O
         2 004355   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 004356   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 004357   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 004360   000000 473400 xsym               LDP3    B$JIT$
         2 004361   040140 100500                    MLR     fill='040'O
         2 004362   300234 000006                    ADSC9   156,,PR3                 cn=0,n=6
         2 004363   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     1744    16715    3           CALL X$STRIP_BLANKS (VALUE$);

  16715  2 004364   200010 631500                    EPPR1   VALUE$,,AUTO
         2 004365   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 004366   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 004367   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004370   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 004371   000000 011000                    NOP     0
         2 004372   007235 710000 2                  TRA     s:17160

     1745    16716    3       CASE (%XUE_$INDEX#);

     1746    16717    3           CALL CHK_BOUNDS (%XUE_$INDEX#,TEMP1,TEMP2) ALTRET(E_REDUCE);

  16717  2 004373   200537 631500                    EPPR1   TEMP2,,AUTO
         2 004374   201047 451500                    STP1    @CHARPOS,,AUTO
         2 004375   200536 633500                    EPPR3   TEMP1,,AUTO
         2 004376   201046 453500                    STP3    @VALUE$,,AUTO
         2 004377   000022 236000 3                  LDQ     18
         2 004400   201045 756100                    STQ     @VAR_NAME$,,AUTO
         2 004401   001431 701000 2                  TSX1    CHK_BOUNDS
         2 004402   007402 702000 2                  TSX2    E_REDUCE

     1747    16718    3           CALL INDEX (WHERE,VAL_STACK$(VAL_PTR-2)->X$STRING.TEXT,

  16718  2 004403   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 004404   200055 470510                    LDP0    NUM_TO_POP_STACK+5,X0,AUTO
         2 004405   000100 101500                    MRL     fill='000'O
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:243  
         2 004406   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 004407   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 004410   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 004411   200054 471510                    LDP1    NUM_TO_POP_STACK+4,X0,AUTO
         2 004412   000100 101500                    MRL     fill='000'O
         2 004413   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 004414   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 004415   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 004416   200537 236100                    LDQ     TEMP2,,AUTO
         2 004417   200536 136100                    SBLQ    TEMP1,,AUTO
         2 004420   201252 451500                    STP1    FPT_FID+72,,AUTO
         2 004421   201042 631500                    EPPR1   WHERE,,AUTO
         2 004422   000000 633500                    EPPR3   0,,PR0
         2 004423   000001 223003                    LDX3    1,DU
         2 004424   300000 500513                    A9BD    0,X3,PR3
         2 004425   000000 623011                    EAX3    0,X1
         2 004426   201252 470500                    LDP0    FPT_FID+72,,AUTO
         2 004427   200536 235100                    LDA     TEMP1,,AUTO
         2 004430   000001 035007                    ADLA    1,DL
         2 004431   000000 500505                    A9BD    0,AL,PR0
         2 004432   000001 620006                    EAX0    1,QL
         2 004433   000000 236003                    LDQ     0,DU
         2 004434   000000 701000 xent               TSX1    X66_INDEX
         2 004435   000000 011000                    NOP     0

     1748    16719    3             SUBSTR(VAL_STACK$(VAL_PTR-3)->X$STRING.TEXT,TEMP1,TEMP2-TEMP1+1));
     1749    16720    3           VALUE = WHERE + TEMP1;

  16720  2 004436   201042 236100                    LDQ     WHERE,,AUTO
         2 004437   200536 036100                    ADLQ    TEMP1,,AUTO
         2 004440   200535 756100                    STQ     VALUE,,AUTO

     1750    16721    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  16721  2 004441   200010 630500                    EPPR0   VALUE$,,AUTO
         2 004442   201046 450500                    STP0    @VALUE$,,AUTO
         2 004443   200535 631500                    EPPR1   VALUE,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:244  
         2 004444   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 004445   002013 701000 2                  TSX1    STASH_VALUE
         2 004446   007402 702000 2                  TSX2    E_REDUCE
         2 004447   007235 710000 2                  TRA     s:17160

     1751    16722    3       CASE (%XUE_$INPUT#);

     1752    16723    3           IF XUE_ECB.INPUT_DCB# = DCBNUM(NIL)

  16723  2 004450   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 004451   100022 235100                    LDA     18,,PR1
         2 004452   004456 601000 2                  TNZ     s:16727

     1753    16724    3           THEN
     1754    16725    3               TEMP = %M$UC#;

  16725  2 004453   000003 235007                    LDA     3,DL
         2 004454   200026 755100                    STA     TEMP,,AUTO
         2 004455   004457 710000 2                  TRA     s:16728

     1755    16726    3           ELSE
     1756    16727    3               TEMP = XUE_ECB.INPUT_DCB#;

  16727  2 004456   200026 755100                    STA     TEMP,,AUTO

     1757    16728    3           IF VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ > 0

  16728  2 004457   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 004460   200055 473511                    LDP3    NUM_TO_POP_STACK+5,X1,AUTO
         2 004461   000100 101500                    MRL     fill='000'O
         2 004462   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 004463   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 004464   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004465   000000 116003                    CMPQ    0,DU
         2 004466   004536 600000 2                  TZE     s:16746

     1758    16729    3           THEN   /* PROMPT string specified */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:245  
     1759    16730    4           DO;

     1760    16731    4               CALL CONCAT (TEMPBUF.TEXT,PROMPT_VFC.TEXT,

  16731  2 004467   200055 473511                    LDP3    NUM_TO_POP_STACK+5,X1,AUTO
         2 004470   000100 101500                    MRL     fill='000'O
         2 004471   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 004472   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 004473   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 004474   000013 236000 1                  LDQ     PROMPT_VFC
         2 004475   000011 772000                    QRL     9
         2 004476   200541 552120                    STBQ    TEMPBUF,'20'O,AUTO
         2 004477   040100 100540                    MLR     fill='040'O
         2 004500   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 004501   200541 400377                    ADSC9   TEMPBUF,,AUTO            cn=2,n=255

     1761    16732    4                 VAL_STACK$(VAL_PTR-2) -> X$STRING.TEXT);
     1762    16733    4               FPT_WRITE = CFPT_WRITE;

  16733  2 004502   000100 100400                    MLR     fill='000'O
         2 004503   000246 000060 1                  ADSC9   CFPT_WRITE               cn=0,n=48
         2 004504   200332 000060                    ADSC9   FPT_WRITE,,AUTO          cn=0,n=48

     1763    16734    4               FPT_WRITE.V_ = VECTOR(FPT_WRITE.V);

  16734  2 004505   000023 235000 3                  LDA     19
         2 004506   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 004507   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004510   000342 036003                    ADLQ    226,DU
         2 004511   200332 757100                    STAQ    FPT_WRITE,,AUTO

     1764    16735    4               FPT_WRITE.V.DCB# = TEMP;

  16735  2 004512   200026 720100                    LXL0    TEMP,,AUTO
         2 004513   200342 740100                    STX0    FPT_WRITE+8,,AUTO

     1765    16736    4               FPT_WRITE.BUF_ = VECTOR(TEMPBUF.TEXT);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:246  

  16736  2 004514   000024 235000 3                  LDA     20
         2 004515   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 004516   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004517   000025 036000 3                  ADLQ    21
         2 004520   200336 757100                    STAQ    FPT_WRITE+4,,AUTO

     1766    16737    4               FPT_WRITE.BUF_.BOUND =

  16737  2 004521   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 004522   200055 470511                    LDP0    NUM_TO_POP_STACK+5,X1,AUTO
         2 004523   003100 061500                    CSR     bolr='003'O
         2 004524   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         2 004525   200336 000024                    BDSC    FPT_WRITE+4,,AUTO        by=0,bit=0,n=20

     1767    16738    4                 VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ;
     1768    16739    4               FPT_WRITE.V.DVBYTE.VFC# = %YES#;

  16739  2 004526   100000 236003                    LDQ     32768,DU
         2 004527   200345 256100                    ORSQ    FPT_WRITE+11,,AUTO

     1769    16740    4               FPT_WRITE.V.DVBYTE.BP# = %YES#;

  16740  2 004530   200000 236003                    LDQ     65536,DU
         2 004531   200345 256100                    ORSQ    FPT_WRITE+11,,AUTO

     1770    16741    4               CALL M$WRITE (FPT_WRITE) ALTRET(E_PMME);

  16741  2 004532   200332 630500                    EPPR0   FPT_WRITE,,AUTO
         2 004533   440001 713400                    CLIMB   alt,write
         2 004534   401400 401760                    pmme    nvectors=4
         2 004535   007404 702000 2                  TSX2    E_PMME

     1771    16742    4           END;  /* Do ... end */

     1772    16743        /*
     1773    16744             ***** Save the prompt ...
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:247  
     1774    16745        */
     1775    16746    3           FPT_SAVE_PROMPT = CFPT_PROMPT;

  16746  2 004536   000100 100400                    MLR     fill='000'O
         2 004537   000202 000050 1                  ADSC9   CFPT_PROMPT              cn=0,n=40
         2 004540   200256 000050                    ADSC9   FPT_SAVE_PROMPT,,AUTO    cn=0,n=40

     1776    16747    3           FPT_SAVE_PROMPT.V_ = VECTOR(FPT_SAVE_PROMPT.V);

  16747  2 004541   000023 235000 3                  LDA     19
         2 004542   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 004543   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004544   000264 036003                    ADLQ    180,DU
         2 004545   200256 757100                    STAQ    FPT_SAVE_PROMPT,,AUTO

     1777    16748    3           FPT_SAVE_PROMPT.PROMPT_ = VECTOR(SAVE_PROMPT);

  16748  2 004546   000026 235000 3                  LDA     22
         2 004547   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 004550   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004551   000031 036003                    ADLQ    25,DU
         2 004552   200262 757100                    STAQ    FPT_SAVE_PROMPT+4,,AUTO

     1778    16749    3           FPT_SAVE_PROMPT.V.DCB# = TEMP;

  16749  2 004553   200026 720100                    LXL0    TEMP,,AUTO
         2 004554   200264 740100                    STX0    FPT_SAVE_PROMPT+6,,AUTO

     1779    16750    3           TBIT = %YES#;                   /* Anticipate getting prompt          */

  16750  2 004555   400000 236003                    LDQ     -131072,DU
         2 004556   200017 756100                    STQ     TBIT,,AUTO

     1780    16751    3           CALL M$GPROMPT (FPT_SAVE_PROMPT)

  16751  2 004557   200256 630500                    EPPR0   FPT_SAVE_PROMPT,,AUTO
         2 004560   560032 713400                    CLIMB   alt,+57370
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:248  
         2 004561   401000 401760                    pmme    nvectors=3
         2 004562   004564 702000 2                  TSX2    s:16753
         2 004563   004565 710000 2                  TRA     s:16755

     1781    16752    4           WHENALTRETURN DO;

     1782    16753    4               TBIT = %NO#;                /* Was unable to get prompt           */

  16753  2 004564   200017 450100                    STZ     TBIT,,AUTO

     1783    16754    4           END;

     1784    16755    3           IF DCBADDR(TEMP) -> F$DCB.ARS# = 0 THEN

  16755  2 004565   000007 470400 3                  LDP0    7
         2 004566   000000 471500                    LDP1    0,,PR0
         2 004567   200026 720100                    LXL0    TEMP,,AUTO
         2 004570   100000 473510                    LDP3    0,X0,PR1
         2 004571   300000 235100                    LDA     0,,PR3
         2 004572   004576 601000 2                  TNZ     s:16758

     1785    16756    3               FPT_SAVE_PROMPT.PROMPT_ = VECTOR(NIL);

  16756  2 004573   000016 237000 3                  LDAQ    14
         2 004574   200262 757100                    STAQ    FPT_SAVE_PROMPT+4,,AUTO
         2 004575   004604 710000 2                  TRA     s:16762

     1786    16757    3           ELSE
     1787    16758    3               VBOUND(FPT_SAVE_PROMPT.PROMPT_) = DCBADDR(TEMP) -> F$DCB.ARS# -1;

  16758  2 004576   300000 236100                    LDQ     0,,PR3
         2 004577   000001 136007                    SBLQ    1,DL
         2 004600   000020 736000                    QLS     16
         2 004601   200262 676100                    ERQ     FPT_SAVE_PROMPT+4,,AUTO
         2 004602   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 004603   200262 656100                    ERSQ    FPT_SAVE_PROMPT+4,,AUTO

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:249  
     1788    16759        /*
     1789    16760             ***** Change the prompt ...
     1790    16761        */
     1791    16762    3           XUE_ECB.RESULTS.PROMPT# = %YES#;

  16762  2 004604   200004 474500                    LDP4    @XUE_ECB,,AUTO
         2 004605   400000 236003                    LDQ     -131072,DU
         2 004606   400017 256100                    ORSQ    15,,PR4

     1792    16763    3           FPT_PROMPT = CFPT_PROMPT;

  16763  2 004607   000100 100400                    MLR     fill='000'O
         2 004610   000202 000050 1                  ADSC9   CFPT_PROMPT              cn=0,n=40
         2 004611   200244 000050                    ADSC9   FPT_PROMPT,,AUTO         cn=0,n=40

     1793    16764    3           FPT_PROMPT.V_ = VECTOR(FPT_PROMPT.V);

  16764  2 004612   000023 235000 3                  LDA     19
         2 004613   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 004614   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004615   000252 036003                    ADLQ    170,DU
         2 004616   200244 757100                    STAQ    FPT_PROMPT,,AUTO

     1794    16765    3           FPT_PROMPT.V.DVBYTE#.VFC# = %YES#;

  16765  2 004617   100000 236003                    LDQ     32768,DU
         2 004620   200254 256100                    ORSQ    FPT_PROMPT+8,,AUTO

     1795    16766    3           FPT_PROMPT.V.DCB# = TEMP;

  16766  2 004621   200026 720100                    LXL0    TEMP,,AUTO
         2 004622   200252 740100                    STX0    FPT_PROMPT+6,,AUTO

     1796    16767    3           FPT_PROMPT.PROMPT_ = VECTOR(SAME_LINE.TEXT);

  16767  2 004623   000030 237000 3                  LDAQ    24
         2 004624   200250 757100                    STAQ    FPT_PROMPT+4,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:250  

     1797    16768    3           CALL M$PROMPT (FPT_PROMPT) ALTRET(E_PMME);

  16768  2 004625   200244 630500                    EPPR0   FPT_PROMPT,,AUTO
         2 004626   560002 713400                    CLIMB   alt,+57346
         2 004627   401000 401760                    pmme    nvectors=3
         2 004630   007404 702000 2                  TSX2    E_PMME

     1798    16769        /*
     1799    16770             ***** Setup the read FPT ...
     1800    16771        */
     1801    16772    3           TEMPBUF.TEXT = ' ';

  16772  2 004631   040100 100400                    MLR     fill='040'O
         2 004632   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 004633   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256

     1802    16773    3           FPT_READ = CFPT_READ;

  16773  2 004634   000100 100400                    MLR     fill='000'O
         2 004635   000214 000070 1                  ADSC9   CFPT_READ                cn=0,n=56
         2 004636   200270 000070                    ADSC9   FPT_READ,,AUTO           cn=0,n=56

     1803    16774    3           FPT_READ.V_ = VECTOR(FPT_READ.V);

  16774  2 004637   000005 235000 3                  LDA     5
         2 004640   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 004641   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004642   000300 036003                    ADLQ    192,DU
         2 004643   200270 757100                    STAQ    FPT_READ,,AUTO

     1804    16775    3           FPT_READ.BUF_ = VECTOR(TEMPBUF.TEXT);

  16775  2 004644   000024 235000 3                  LDA     20
         2 004645   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 004646   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004647   000025 036000 3                  ADLQ    21
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:251  
         2 004650   200274 757100                    STAQ    FPT_READ+4,,AUTO

     1805    16776    3           FPT_READ.V.DCB# = TEMP;

  16776  2 004651   200026 720100                    LXL0    TEMP,,AUTO
         2 004652   200300 740100                    STX0    FPT_READ+8,,AUTO

     1806    16777        /*
     1807    16778             ***** Setup the reread buffer, if specified ...
     1808    16779        */
     1809    16780    3           IF VAL_TYPE(VAL_PTR-1) ~= %XUE_DEFAULT#

  16780  2 004653   200022 235100                    LDA     VAL_PTR,,AUTO
         2 004654   000100 101505                    MRL     fill='000'O
         2 004655   200141 600001                    ADSC9   VAL_STACK$+50,A,AUTO     cn=3,n=1
         2 004656   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 004657   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004660   000117 116007                    CMPQ    79,DL
         2 004661   004741 600000 2                  TZE     s:16800
         2 004662   200056 470505                    LDP0    NUM_TO_POP_STACK+6,AL,AUTO
         2 004663   000100 101500                    MRL     fill='000'O
         2 004664   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 004665   201251 000004                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=4
         2 004666   201251 236100                    LDQ     FPT_FID+71,,AUTO
         2 004667   000000 116003                    CMPQ    0,DU
         2 004670   004741 600000 2                  TZE     s:16800

     1810    16781    3             AND VAL_STACK$(VAL_PTR-1) -> X$STRING.SIZ > 0
     1811    16782    4           THEN DO;

     1812    16783    4               FPT_READ.V.DVBYTE.REREAD# = %YES#;

  16783  2 004671   100000 236003                    LDQ     32768,DU
         2 004672   200303 256100                    ORSQ    FPT_READ+11,,AUTO

     1813    16784    4               FPT_SINPUT = CFPT_SINPUT;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:252  
  16784  2 004673   000100 100400                    MLR     fill='000'O
         2 004674   000312 000040 1                  ADSC9   CFPT_SINPUT              cn=0,n=32
         2 004675   200306 000040                    ADSC9   FPT_SINPUT,,AUTO         cn=0,n=32

     1814    16785    4               FPT_SINPUT.BUF_ = VECTOR (VAL_STACK$(VAL_PTR-1)-> X$STRING.TEXT);

  16785  2 004676   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 004677   200056 470511                    LDP0    NUM_TO_POP_STACK+6,X1,AUTO
         2 004700   000100 101500                    MRL     fill='000'O
         2 004701   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 004702   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 004703   201250 222100                    LDX2    FPT_FID+70,,AUTO
         2 004704   000000 635012                    EAA     0,X2
         2 004705   000002 771000                    ARL     2
         2 004706   000140 135007                    SBLA    96,DL
         2 004707   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 004710   201251 236100                    LDQ     FPT_FID+71,,AUTO
         2 004711   200000 036007                    ADLQ    65536,DL
         2 004712   200312 757100                    STAQ    FPT_SINPUT+4,,AUTO

     1815    16786    4               FPT_SINPUT.V.DCB# = TEMP;

  16786  2 004713   200314 740100                    STX0    FPT_SINPUT+6,,AUTO

     1816    16787        /*
     1817    16788             ***** Also setup the reread position, if it's specified too ...
     1818    16789        */
     1819    16790    4               IF VAL_TYPE(VAL_PTR) ~= %XUE_DEFAULT#

  16790  2 004714   200022 235100                    LDA     VAL_PTR,,AUTO
         2 004715   000100 101505                    MRL     fill='000'O
         2 004716   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1
         2 004717   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 004720   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 004721   000117 116007                    CMPQ    79,DL
         2 004722   004735 600000 2                  TZE     s:16798

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:253  
     1820    16791    5               THEN DO;

     1821    16792    5                   CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP1) ALTRET(E_DEC);

  16792  2 004723   200536 630500                    EPPR0   TEMP1,,AUTO
         2 004724   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 004725   200057 631511                    EPPR1   VAL_STACK$,X1,AUTO
         2 004726   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 004727   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 004730   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 004731   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 004732   007424 702000 2                  TSX2    E_DEC

     1822    16793    5                   FPT_SINPUT.V.REREADPOS# = TEMP1;

  16793  2 004733   200536 720100                    LXL0    TEMP1,,AUTO
         2 004734   200315 440100                    SXL0    FPT_SINPUT+7,,AUTO

     1823    16794    5               END;

     1824    16795        /*
     1825    16796             ***** Now issue the read pmme(s) ...
     1826    16797        */
     1827    16798    4               CALL M$SINPUT (FPT_SINPUT) ALTRET(E_PMME);

  16798  2 004735   200306 630500                    EPPR0   FPT_SINPUT,,AUTO
         2 004736   560013 713400                    CLIMB   alt,+57355
         2 004737   401000 401760                    pmme    nvectors=3
         2 004740   007404 702000 2                  TSX2    E_PMME

     1828    16799    4           END;

     1829    16800    3           CALL M$READ (FPT_READ) ALTRET(E_READ);

  16800  2 004741   200270 630500                    EPPR0   FPT_READ,,AUTO
         2 004742   440000 713400                    CLIMB   alt,read
         2 004743   401400 401760                    pmme    nvectors=4
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:254  
         2 004744   005026 702000 2                  TSX2    E_READ

     1830    16801        /*
     1831    16802             ***** Restore the prompt ...
     1832    16803        */
     1833    16804    3           IF TBIT THEN

  16804  2 004745   200017 234100                    SZN     TBIT,,AUTO
         2 004746   004756 605000 2                  TPL     s:16812

     1834    16805    4           DO;

     1835    16806    4               CALL M$PROMPT (FPT_SAVE_PROMPT) ALTRET(E_PMME);

  16806  2 004747   200256 630500                    EPPR0   FPT_SAVE_PROMPT,,AUTO
         2 004750   560002 713400                    CLIMB   alt,+57346
         2 004751   401000 401760                    pmme    nvectors=3
         2 004752   007404 702000 2                  TSX2    E_PMME

     1836    16807    4               XUE_ECB.RESULTS.PROMPT# = %NO#;

  16807  2 004753   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 004754   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 004755   000017 356100                    ANSQ    15,,PR0

     1837    16808    4           END;

     1838    16809        /*
     1839    16810             ***** Reset $EOF flag ...
     1840    16811        */
     1841    16812    3           XUE_ECB.INTERNAL.RESET_EOF# = %YES#;

  16812  2 004756   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 004757   400000 236003                    LDQ     -131072,DU
         2 004760   000020 256100                    ORSQ    16,,PR0

     1842    16813        /*
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:255  
     1843    16814             ***** Look for QUOTES, strip blanks, etc. ...
     1844    16815        */
     1845    16816    3           TEMPBUF.SIZ = DCBADDR(TEMP) -> F$DCB.ARS#;

  16816  2 004761   000007 471400 3                  LDP1    7
         2 004762   100000 473500                    LDP3    0,,PR1
         2 004763   200026 720100                    LXL0    TEMP,,AUTO
         2 004764   300000 474510                    LDP4    0,X0,PR3
         2 004765   400000 236100                    LDQ     0,,PR4
         2 004766   000033 736000                    QLS     27
         2 004767   200541 552140                    STBQ    TEMPBUF,'40'O,AUTO

     1846    16817    3           CALL PROCESS_INPUT ALTRET(E_REDUCE);

  16817  2 004770   001234 701000 2                  TSX1    PROCESS_INPUT
         2 004771   007402 702000 2                  TSX2    E_REDUCE

     1847    16818        /*
     1848    16819             ***** Stash away the reply ...
     1849    16820        */
     1850    16821    3           MCB.SIZE = TEMPBUF.SIZ + 1;     /* One for count                      */

  16821  2 004772   200541 236100                    LDQ     TEMPBUF,,AUTO
         2 004773   000033 772000                    QRL     27
         2 004774   000001 036007                    ADLQ    1,DL
         2 004775   200005 470500                    LDP0    @MCB,,AUTO
         2 004776   000006 756100                    STQ     6,,PR0

     1851    16822    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16822  2 004777   200005 630500                    EPPR0   @MCB,,AUTO
         2 005000   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005001   000000 701000 xent               TSX1    X$ALLOCATE
         2 005002   007416 702000 2                  TSX2    E_ALLOCATE

     1852    16823    3           VALUE$ = MCB.ADDRESS$;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:256  
  16823  2 005003   200005 470500                    LDP0    @MCB,,AUTO
         2 005004   000000 236100                    LDQ     0,,PR0
         2 005005   200010 756100                    STQ     VALUE$,,AUTO

     1853    16824    3           VALUE$ -> X$STRING.SIZ = TEMPBUF.SIZ;

  16824  2 005006   200010 471500                    LDP1    VALUE$,,AUTO
         2 005007   000100 100500                    MLR     fill='000'O
         2 005010   200541 000001                    ADSC9   TEMPBUF,,AUTO            cn=0,n=1
         2 005011   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1854    16825    3           IF TEMPBUF.SIZ > 0

  16825  2 005012   200541 236100                    LDQ     TEMPBUF,,AUTO
         2 005013   777000 316003                    CANQ    -512,DU
         2 005014   005025 600000 2                  TZE     s:16833

     1855    16826    3           THEN                         /* Not null string                    */
     1856    16827    3               VALUE$ -> X$STRING.TEXT = TEMPBUF.TEXT;

  16827  2 005015   200010 471500                    LDP1    VALUE$,,AUTO
         2 005016   000100 101500                    MRL     fill='000'O
         2 005017   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005020   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 005021   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 005022   040140 100500                    MLR     fill='040'O
         2 005023   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256
         2 005024   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     1857    16828        /*
     1858    16829             ***** Handle read errors.
     1859    16830                   Done here so that flow can fall thru
     1860    16831                   and the PROMPT reset...
     1861    16832        */
     1862    16833    4           DO WHILE(%NO#);

  16833  2 005025   007235 710000 2                  TRA     s:17160
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:257  

     1863    16834    4   E_READ:
     1864    16835    4               IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$EOF

  16835  2 005026   000000 470400 xsym  E_READ       LDP0    B$TCB$
         2 005027   000000 471500                    LDP1    0,,PR0
         2 005030   100102 236100                    LDQ     66,,PR1
         2 005031   377770 376007                    ANQ     131064,DL
         2 005032   000060 116007                    CMPQ    48,DL
         2 005033   007404 601000 2                  TNZ     E_PMME

     1865    16836    4               THEN   /* Set $EOF flag. Return NULL string */
     1866    16837    5               DO;

     1867    16838    5                   CALL X$PUT_VAR (EOF_NAME$,ONE$,XUE_ECB,,%XUE_INTERNAL#) ALTRET(
             16838                            E_REDUCE);

  16838  2 005034   000027 236000 3                  LDQ     23
         2 005035   201254 756100                    STQ     FPT_FID+74,,AUTO
         2 005036   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 005037   200004 235100                    LDA     @XUE_ECB,,AUTO
         2 005040   201252 757100                    STAQ    FPT_FID+72,,AUTO
         2 005041   000014 237000 3                  LDAQ    12
         2 005042   201250 757100                    STAQ    FPT_FID+70,,AUTO
         2 005043   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 005044   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 005045   000000 701000 xent               TSX1    X$PUT_VAR
         2 005046   007402 702000 2                  TSX2    E_REDUCE

     1868    16839    5                   MCB.SIZE = 1;

  16839  2 005047   000001 235007                    LDA     1,DL
         2 005050   200005 470500                    LDP0    @MCB,,AUTO
         2 005051   000006 755100                    STA     6,,PR0

     1869    16840    5                   CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:258  
  16840  2 005052   200005 630500                    EPPR0   @MCB,,AUTO
         2 005053   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005054   000000 701000 xent               TSX1    X$ALLOCATE
         2 005055   007416 702000 2                  TSX2    E_ALLOCATE

     1870    16841    5                   VALUE$ = MCB.ADDRESS$;

  16841  2 005056   200005 470500                    LDP0    @MCB,,AUTO
         2 005057   000000 236100                    LDQ     0,,PR0
         2 005060   200010 756100                    STQ     VALUE$,,AUTO

     1871    16842    5                   VALUE$ -> X$STRING.SIZ = 0;

  16842  2 005061   200010 471500                    LDP1    VALUE$,,AUTO
         2 005062   000100 101400                    MRL     fill='000'O
         2 005063   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         2 005064   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1872    16843        /*
     1873    16844             ***** Restore the prompt ...
     1874    16845        */
     1875    16846    5                   IF TBIT THEN

  16846  2 005065   200017 234100                    SZN     TBIT,,AUTO
         2 005066   005077 605000 2                  TPL     s:16854

     1876    16847    6                   DO;

     1877    16848    6                       CALL M$PROMPT (FPT_SAVE_PROMPT) ALTRET(E_PMME);

  16848  2 005067   200256 630500                    EPPR0   FPT_SAVE_PROMPT,,AUTO
         2 005070   560002 713400                    CLIMB   alt,+57346
         2 005071   401000 401760                    pmme    nvectors=3
         2 005072   007404 702000 2                  TSX2    E_PMME

     1878    16849    6                       XUE_ECB.RESULTS.PROMPT# = %NO#;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:259  
  16849  2 005073   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 005074   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 005075   000017 356100                    ANSQ    15,,PR0

     1879    16850    6                   END;

     1880    16851    5               END;

  16851  2 005076   005077 710000 2                  TRA     s:16854

     1881    16852    4               ELSE                      /* A real error                       */
     1882    16853    4                   GOTO E_PMME;
     1883    16854    4           END;   /* Do while NO */

  16854  2 005077   007235 710000 2                  TRA     s:17160

     1884    16855    3       CASE (%XUE_$KEYIN#);

     1885    16856    3           IF VAL_STACK$(VAL_PTR) -> X$STRING.SIZ > 110

  16856  2 005100   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 005101   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 005102   000100 101500                    MRL     fill='000'O
         2 005103   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005104   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005105   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005106   000157 116007                    CMPQ    111,DL
         2 005107   005122 604000 2                  TMI     s:16863

     1886    16857    3           THEN    /* Message too long */
     1887    16858    4           DO;   /* Return error */

     1888    16859    4               XUE_ECB.ERR = E_MSGTOOLONG;

  16859  2 005110   000427 236000 1                  LDQ     E_MSGTOOLONG
         2 005111   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 005112   100011 756100                    STQ     9,,PR1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:260  

     1889    16860    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16860  2 005113   200022 235100                    LDA     VAL_PTR,,AUTO
         2 005114   000001 735000                    ALS     1
         2 005115   000100 100505                    MLR     fill='000'O
         2 005116   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 005117   100010 000002                    ADSC9   8,,PR1                   cn=0,n=2

     1890    16861    4               ALTRETURN;

  16861  2 005120   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 005121   000000 702211                    TSX2  ! 0,X1

     1891    16862    4           END;
     1892    16863    3           IF VAL_STACK$(VAL_PTR) -> X$STRING.SIZ = 0

  16863  2 005122   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 005123   000100 101500                    MRL     fill='000'O
         2 005124   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005125   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005126   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005127   000000 116003                    CMPQ    0,DU
         2 005130   005143 601000 2                  TNZ     s:16870

     1893    16864    3           THEN   /* Null message to operator? */
     1894    16865    4           DO;   /* Return error */

     1895    16866    4               XUE_ECB.ERR = E_NULLSTRING;

  16866  2 005131   000436 236000 1                  LDQ     E_NULLSTRING
         2 005132   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 005133   100011 756100                    STQ     9,,PR1

     1896    16867    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16867  2 005134   200022 235100                    LDA     VAL_PTR,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:261  
         2 005135   000001 735000                    ALS     1
         2 005136   000100 100505                    MLR     fill='000'O
         2 005137   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 005140   100010 000002                    ADSC9   8,,PR1                   cn=0,n=2

     1897    16868    4               ALTRETURN;

  16868  2 005141   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 005142   000000 702211                    TSX2  ! 0,X1

     1898    16869    4           END;
     1899    16870    3           FPT_KEYIN = CFPT_KEYIN;

  16870  2 005143   000100 100400                    MLR     fill='000'O
         2 005144   000150 000070 1                  ADSC9   CFPT_KEYIN               cn=0,n=56
         2 005145   200212 000070                    ADSC9   FPT_KEYIN,,AUTO          cn=0,n=56

     1900    16871    3           FPT_KEYIN.V_ = VECTOR(FPT_KEYIN.V);

  16871  2 005146   000005 235000 3                  LDA     5
         2 005147   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 005150   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005151   000222 036003                    ADLQ    146,DU
         2 005152   200212 757100                    STAQ    FPT_KEYIN,,AUTO

     1901    16872    3           FPT_KEYIN.MESS_ = VECTOR(VAL_STACK$(VAL_PTR)->X$STRING.TEXT);

  16872  2 005153   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 005154   000100 101500                    MRL     fill='000'O
         2 005155   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005156   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 005157   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 005160   000000 635010                    EAA     0,X0
         2 005161   000002 771000                    ARL     2
         2 005162   000140 135007                    SBLA    96,DL
         2 005163   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 005164   201251 236100                    LDQ     FPT_FID+71,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:262  
         2 005165   200000 036007                    ADLQ    65536,DL
         2 005166   200214 757100                    STAQ    FPT_KEYIN+2,,AUTO

     1902    16873    3           FPT_KEYIN.REPLY_ = VECTOR(TEMPBUF.TEXT);

  16873  2 005167   000024 235000 3                  LDA     20
         2 005170   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 005171   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005172   000025 036000 3                  ADLQ    21
         2 005173   200216 757100                    STAQ    FPT_KEYIN+4,,AUTO

     1903    16874    3           FPT_KEYIN.RESULTS_ = VECTOR(KEYIN_RESULTS);

  16874  2 005174   000004 235000 3                  LDA     4
         2 005175   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 005176   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005177   000006 036003                    ADLQ    6,DU
         2 005200   200220 757100                    STAQ    FPT_KEYIN+6,,AUTO

     1904    16875    3           CALL M$KEYIN (FPT_KEYIN) ALTRET(E_PMME);

  16875  2 005201   200212 630500                    EPPR0   FPT_KEYIN,,AUTO
         2 005202   520000 713400                    CLIMB   alt,+40960
         2 005203   401400 401760                    pmme    nvectors=4
         2 005204   007404 702000 2                  TSX2    E_PMME

     1905    16876        /*
     1906    16877             ***** Look for QUOTES, strip blanks, etc. ...
     1907    16878        */
     1908    16879    3           TEMPBUF.SIZ = KEYIN_RESULTS.ARS# + 1;

  16879  2 005205   200007 236100                    LDQ     KEYIN_RESULTS+1,,AUTO
         2 005206   000001 036007                    ADLQ    1,DL
         2 005207   000033 736000                    QLS     27
         2 005210   200541 552140                    STBQ    TEMPBUF,'40'O,AUTO

     1909    16880    3           CALL PROCESS_INPUT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:263  

  16880  2 005211   001234 701000 2                  TSX1    PROCESS_INPUT
         2 005212   000000 011000                    NOP     0

     1910    16881        /*
     1911    16882             ***** Stash away the reply ...
     1912    16883        */
     1913    16884    3           MCB.SIZE = TEMPBUF.SIZ + 1;     /* One for count                      */

  16884  2 005213   200541 236100                    LDQ     TEMPBUF,,AUTO
         2 005214   000033 772000                    QRL     27
         2 005215   000001 036007                    ADLQ    1,DL
         2 005216   200005 470500                    LDP0    @MCB,,AUTO
         2 005217   000006 756100                    STQ     6,,PR0

     1914    16885    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16885  2 005220   200005 630500                    EPPR0   @MCB,,AUTO
         2 005221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005222   000000 701000 xent               TSX1    X$ALLOCATE
         2 005223   007416 702000 2                  TSX2    E_ALLOCATE

     1915    16886    3           VALUE$ = MCB.ADDRESS$;

  16886  2 005224   200005 470500                    LDP0    @MCB,,AUTO
         2 005225   000000 236100                    LDQ     0,,PR0
         2 005226   200010 756100                    STQ     VALUE$,,AUTO

     1916    16887    3           VALUE$ -> X$STRING.SIZ = KEYIN_RESULTS.ARS#;

  16887  2 005227   200010 471500                    LDP1    VALUE$,,AUTO
         2 005230   000100 101500                    MRL     fill='000'O
         2 005231   200007 000004                    ADSC9   KEYIN_RESULTS+1,,AUTO    cn=0,n=4
         2 005232   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1917    16888    3           IF TEMPBUF.SIZ > 0

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:264  
  16888  2 005233   200541 236100                    LDQ     TEMPBUF,,AUTO
         2 005234   777000 316003                    CANQ    -512,DU
         2 005235   007235 600000 2                  TZE     s:17160

     1918    16889    3           THEN                         /* Not null string                    */
     1919    16890    3               VALUE$ -> X$STRING.TEXT = TEMPBUF.TEXT;

  16890  2 005236   200010 471500                    LDP1    VALUE$,,AUTO
         2 005237   000100 101500                    MRL     fill='000'O
         2 005240   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005241   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 005242   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 005243   040140 100500                    MLR     fill='040'O
         2 005244   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256
         2 005245   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 005246   007235 710000 2                  TRA     s:17160

     1920    16891    3       CASE (%XUE_$UPC#);

     1921    16892    3           MCB.SIZE = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ +1;

  16892  2 005247   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 005250   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 005251   000100 101500                    MRL     fill='000'O
         2 005252   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005253   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005254   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005255   000001 036007                    ADLQ    1,DL
         2 005256   000006 756100                    STQ     6,,PR0

     1922    16893    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16893  2 005257   200005 630500                    EPPR0   @MCB,,AUTO
         2 005260   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005261   000000 701000 xent               TSX1    X$ALLOCATE
         2 005262   007416 702000 2                  TSX2    E_ALLOCATE

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:265  
     1923    16894    3           VALUE$ = MCB.ADDRESS$;

  16894  2 005263   200005 470500                    LDP0    @MCB,,AUTO
         2 005264   000000 236100                    LDQ     0,,PR0
         2 005265   200010 756100                    STQ     VALUE$,,AUTO

     1924    16895    3           VALUE$ -> X$STRING.SIZ = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ;

  16895  2 005266   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 005267   200057 471510                    LDP1    VAL_STACK$,X0,AUTO
         2 005270   200010 473500                    LDP3    VALUE$,,AUTO
         2 005271   000100 100500                    MLR     fill='000'O
         2 005272   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005273   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

     1925    16896    3           VALUE$ -> X$STRING.TEXT = VAL_STACK$(VAL_PTR) -> X$STRING.TEXT;

  16896  2 005274   200010 471500                    LDP1    VALUE$,,AUTO
         2 005275   000100 101500                    MRL     fill='000'O
         2 005276   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005277   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 005300   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 005301   200057 473510                    LDP3    VAL_STACK$,X0,AUTO
         2 005302   000100 101500                    MRL     fill='000'O
         2 005303   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 005304   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 005305   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 005306   040140 100540                    MLR     fill='040'O
         2 005307   300000 200012                    ADSC9   0,,PR3                   cn=1,n=*X2
         2 005310   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1

     1926    16897    3           CALL XLATE(VALUE$ -> X$STRING.TEXT,LC2UC,VALUE$ -> X$STRING.TEXT);

  16897  2 005311   200010 471500                    LDP1    VALUE$,,AUTO
         2 005312   000100 101500                    MRL     fill='000'O
         2 005313   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005314   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:266  
         2 005315   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 005316   000100 101500                    MRL     fill='000'O
         2 005317   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005320   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 005321   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 005322   000000 473400 xsym               LDP3    B$XL_UPPER$
         2 005323   040140 160540                    MVT     fill='040'O
         2 005324   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         2 005325   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         2 005326   300000 000100                    ARG     0,,PR3
         2 005327   007235 710000 2                  TRA     s:17160

     1927    16898    3       CASE (%XUE_$LOC#);

     1928    16899    3           MCB.SIZE = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ +1;

  16899  2 005330   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 005331   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 005332   000100 101500                    MRL     fill='000'O
         2 005333   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005334   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005335   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005336   000001 036007                    ADLQ    1,DL
         2 005337   000006 756100                    STQ     6,,PR0

     1929    16900    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16900  2 005340   200005 630500                    EPPR0   @MCB,,AUTO
         2 005341   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005342   000000 701000 xent               TSX1    X$ALLOCATE
         2 005343   007416 702000 2                  TSX2    E_ALLOCATE

     1930    16901    3           VALUE$ = MCB.ADDRESS$;

  16901  2 005344   200005 470500                    LDP0    @MCB,,AUTO
         2 005345   000000 236100                    LDQ     0,,PR0
         2 005346   200010 756100                    STQ     VALUE$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:267  

     1931    16902    3           VALUE$ -> X$STRING.SIZ = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ;

  16902  2 005347   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 005350   200057 471510                    LDP1    VAL_STACK$,X0,AUTO
         2 005351   200010 473500                    LDP3    VALUE$,,AUTO
         2 005352   000100 100500                    MLR     fill='000'O
         2 005353   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005354   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

     1932    16903    3           VALUE$ -> X$STRING.TEXT = VAL_STACK$(VAL_PTR) -> X$STRING.TEXT;

  16903  2 005355   200010 471500                    LDP1    VALUE$,,AUTO
         2 005356   000100 101500                    MRL     fill='000'O
         2 005357   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005360   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 005361   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 005362   200057 473510                    LDP3    VAL_STACK$,X0,AUTO
         2 005363   000100 101500                    MRL     fill='000'O
         2 005364   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 005365   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 005366   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 005367   040140 100540                    MLR     fill='040'O
         2 005370   300000 200012                    ADSC9   0,,PR3                   cn=1,n=*X2
         2 005371   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1

     1933    16904    3           CALL XLATE(VALUE$ -> X$STRING.TEXT,UC2LC,VALUE$ -> X$STRING.TEXT);

  16904  2 005372   200010 471500                    LDP1    VALUE$,,AUTO
         2 005373   000100 101500                    MRL     fill='000'O
         2 005374   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005375   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 005376   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 005377   000100 101500                    MRL     fill='000'O
         2 005400   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005401   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 005402   201251 222100                    LDX2    FPT_FID+71,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:268  
         2 005403   000000 473400 xsym               LDP3    B$XL_LOWER$
         2 005404   040140 160540                    MVT     fill='040'O
         2 005405   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         2 005406   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         2 005407   300000 000100                    ARG     0,,PR3
         2 005410   007235 710000 2                  TRA     s:17160

     1934    16905    3       CASE (%XUE_$LASTBATCH#);

     1935    16906    3           VALUE = B$JIT.LBJID;

  16906  2 005411   000000 471400 xsym               LDP1    B$JIT$
         2 005412   100302 236100                    LDQ     194,,PR1
         2 005413   777777 376007                    ANQ     -1,DL
         2 005414   200535 756100                    STQ     VALUE,,AUTO

     1936    16907    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  16907  2 005415   200010 633500                    EPPR3   VALUE$,,AUTO
         2 005416   201046 453500                    STP3    @VALUE$,,AUTO
         2 005417   200535 634500                    EPPR4   VALUE,,AUTO
         2 005420   201045 454500                    STP4    @VAR_NAME$,,AUTO
         2 005421   002013 701000 2                  TSX1    STASH_VALUE
         2 005422   007402 702000 2                  TSX2    E_REDUCE
         2 005423   007235 710000 2                  TRA     s:17160

     1937    16908    3       CASE (%XUE_$LEN#);

     1938    16909    3           VALUE = VAL_STACK$(VAL_PTR) -> X$STRING.SIZ;

  16909  2 005424   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 005425   200057 471511                    LDP1    VAL_STACK$,X1,AUTO
         2 005426   000100 101500                    MRL     fill='000'O
         2 005427   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005430   200535 000004                    ADSC9   VALUE,,AUTO              cn=0,n=4

     1939    16910    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:269  

  16910  2 005431   200010 631500                    EPPR1   VALUE$,,AUTO
         2 005432   201046 451500                    STP1    @VALUE$,,AUTO
         2 005433   200535 633500                    EPPR3   VALUE,,AUTO
         2 005434   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 005435   002013 701000 2                  TSX1    STASH_VALUE
         2 005436   007402 702000 2                  TSX2    E_REDUCE
         2 005437   007235 710000 2                  TRA     s:17160

     1940    16911    3       CASE (%XUE_$MODE#);

     1941    16912    4           DO CASE (B$JIT.MODE);

  16912  2 005440   000000 471400 xsym               LDP1    B$JIT$
         2 005441   100000 236100                    LDQ     0,,PR1
         2 005442   000040 772000                    QRL     32
         2 005443   000005 116007                    CMPQ    5,DL
         2 005444   005446 602006 2                  TNC     s:16912+6,QL
         2 005445   005502 710000 2                  TRA     s:16926
         2 005446   005502 710000 2                  TRA     s:16926
         2 005447   005453 710000 2                  TRA     s:16914
         2 005450   005461 710000 2                  TRA     s:16917
         2 005451   005467 710000 2                  TRA     s:16920
         2 005452   005475 710000 2                  TRA     s:16923

     1942    16913    4           CASE (%M_BATCH#);

     1943    16914    4               MCB.SIZE = 6;

  16914  2 005453   000006 235007                    LDA     6,DL
         2 005454   000006 755100                    STA     6,,PR0

     1944    16915    4               TEMPBUF.TEXT = 'BATCH';

  16915  2 005455   040100 100400                    MLR     fill='040'O
         2 005456   001144 000005 1                  ADSC9   MIN_OFFSET+7             cn=0,n=5
         2 005457   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:270  
         2 005460   005502 710000 2                  TRA     s:16926

     1945    16916    4           CASE (%M_GHOST#);

     1946    16917    4               MCB.SIZE = 6;

  16917  2 005461   000006 235007                    LDA     6,DL
         2 005462   000006 755100                    STA     6,,PR0

     1947    16918    4               TEMPBUF.TEXT = 'GHOST';

  16918  2 005463   040100 100400                    MLR     fill='040'O
         2 005464   001146 000005 1                  ADSC9   MIN_OFFSET+9             cn=0,n=5
         2 005465   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256
         2 005466   005502 710000 2                  TRA     s:16926

     1948    16919    4           CASE (%M_INT#);

     1949    16920    4               MCB.SIZE = 7;

  16920  2 005467   000007 235007                    LDA     7,DL
         2 005470   000006 755100                    STA     6,,PR0

     1950    16921    4               TEMPBUF.TEXT = 'ONLINE';

  16921  2 005471   040100 100400                    MLR     fill='040'O
         2 005472   001150 000006 1                  ADSC9   MIN_OFFSET+11            cn=0,n=6
         2 005473   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256
         2 005474   005502 710000 2                  TRA     s:16926

     1951    16922    4           CASE (%M_TP#);

     1952    16923    4               MCB.SIZE = 3;

  16923  2 005475   000003 235007                    LDA     3,DL
         2 005476   000006 755100                    STA     6,,PR0

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:271  
     1953    16924    4               TEMPBUF.TEXT = 'TP';

  16924  2 005477   040100 100400                    MLR     fill='040'O
         2 005500   001152 000002 1                  ADSC9   MIN_OFFSET+13            cn=0,n=2
         2 005501   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256

     1954    16925    4           END;

     1955    16926    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16926  2 005502   200005 630500                    EPPR0   @MCB,,AUTO
         2 005503   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005504   000000 701000 xent               TSX1    X$ALLOCATE
         2 005505   007416 702000 2                  TSX2    E_ALLOCATE

     1956    16927    3           VALUE$ = MCB.ADDRESS$;

  16927  2 005506   200005 470500                    LDP0    @MCB,,AUTO
         2 005507   000000 236100                    LDQ     0,,PR0
         2 005510   200010 756100                    STQ     VALUE$,,AUTO

     1957    16928    3           VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;

  16928  2 005511   000006 236100                    LDQ     6,,PR0
         2 005512   000001 136007                    SBLQ    1,DL
         2 005513   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 005514   200010 471500                    LDP1    VALUE$,,AUTO
         2 005515   000100 101500                    MRL     fill='000'O
         2 005516   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005517   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1958    16929    3           VALUE$ -> X$STRING.TEXT = TEMPBUF.TEXT;

  16929  2 005520   200010 471500                    LDP1    VALUE$,,AUTO
         2 005521   000100 101500                    MRL     fill='000'O
         2 005522   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 005523   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:272  
         2 005524   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 005525   040140 100500                    MLR     fill='040'O
         2 005526   200541 200400                    ADSC9   TEMPBUF,,AUTO            cn=1,n=256
         2 005527   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 005530   007235 710000 2                  TRA     s:17160

     1959    16930    3       CASE (%XUE_$ABS#);

     1960    16931    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),VALUE) ALTRET(E_DEC);

  16931  2 005531   200535 631500                    EPPR1   VALUE,,AUTO
         2 005532   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 005533   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 005534   200057 633511                    EPPR3   VAL_STACK$,X1,AUTO
         2 005535   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 005536   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 005537   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005540   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 005541   007424 702000 2                  TSX2    E_DEC

     1961    16932    3           IF VALUE < 0 THEN

  16932  2 005542   200535 235100                    LDA     VALUE,,AUTO
         2 005543   005546 605000 2                  TPL     s:16934

     1962    16933    3               VALUE = -VALUE;

  16933  2 005544   000000 531000                    NEG     0
         2 005545   200535 755100                    STA     VALUE,,AUTO

     1963    16934    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  16934  2 005546   200010 630500                    EPPR0   VALUE$,,AUTO
         2 005547   201046 450500                    STP0    @VALUE$,,AUTO
         2 005550   200535 631500                    EPPR1   VALUE,,AUTO
         2 005551   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 005552   002013 701000 2                  TSX1    STASH_VALUE
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:273  
         2 005553   007402 702000 2                  TSX2    E_REDUCE
         2 005554   007235 710000 2                  TRA     s:17160

     1964    16935    3       CASE (%XUE_$MIN#);

     1965    16936    3           IF NUM_TO_POP_STACK(OP_PTR) < 2 THEN

  16936  2 005555   000100 101505                    MRL     fill='000'O
         2 005556   200050 000001                    ADSC9   NUM_TO_POP_STACK,A,AUTO  cn=0,n=1
         2 005557   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005560   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005561   000002 116007                    CMPQ    2,DL
         2 005562   007356 604000 2                  TMI     E_BADNUMARGS

     1966    16937    3               GOTO E_BADNUMARGS;
     1967    16938    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),VALUE) ALTRET(E_DEC);

  16938  2 005563   200535 631500                    EPPR1   VALUE,,AUTO
         2 005564   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 005565   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 005566   200057 633510                    EPPR3   VAL_STACK$,X0,AUTO
         2 005567   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 005570   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 005571   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005572   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 005573   007424 702000 2                  TSX2    E_DEC

     1968    16939    4           DO TEMP1 = 2 TO NUM_TO_POP_STACK (OP_PTR);

  16939  2 005574   000002 235007                    LDA     2,DL
         2 005575   200536 755100                    STA     TEMP1,,AUTO
         2 005576   005617 710000 2                  TRA     s:16942+1

     1969    16940    4               CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-TEMP1+1),TEMP2) ALTRET(E_DEC1);

  16940  2 005577   200022 236100                    LDQ     VAL_PTR,,AUTO
         2 005600   200536 136100                    SBLQ    TEMP1,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:274  
         2 005601   200537 630500                    EPPR0   TEMP2,,AUTO
         2 005602   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 005603   200060 631506                    EPPR1   VAL_STACK$+1,QL,AUTO
         2 005604   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 005605   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 005606   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005607   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 005610   007436 702000 2                  TSX2    E_DEC1

     1970    16941    4               VALUE = MINIMUM(VALUE,TEMP2);

  16941  2 005611   200537 236100                    LDQ     TEMP2,,AUTO
         2 005612   200535 116100                    CMPQ    VALUE,,AUTO
         2 005613   005615 604400 2                  TMOZ    s:16941+4
         2 005614   200535 236100                    LDQ     VALUE,,AUTO
         2 005615   200535 756100                    STQ     VALUE,,AUTO

     1971    16942    4           END;

  16942  2 005616   200536 054100                    AOS     TEMP1,,AUTO
         2 005617   200021 235100                    LDA     OP_PTR,,AUTO
         2 005620   000100 101505                    MRL     fill='000'O
         2 005621   200050 000001                    ADSC9   NUM_TO_POP_STACK,A,AUTO  cn=0,n=1
         2 005622   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005623   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005624   200536 116100                    CMPQ    TEMP1,,AUTO
         2 005625   005577 605000 2                  TPL     s:16940

     1972    16943    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  16943  2 005626   200010 630500                    EPPR0   VALUE$,,AUTO
         2 005627   201046 450500                    STP0    @VALUE$,,AUTO
         2 005630   200535 631500                    EPPR1   VALUE,,AUTO
         2 005631   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 005632   002013 701000 2                  TSX1    STASH_VALUE
         2 005633   007402 702000 2                  TSX2    E_REDUCE
         2 005634   007235 710000 2                  TRA     s:17160
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:275  

     1973    16944    3       CASE (%XUE_$MAX#);

     1974    16945    3           IF NUM_TO_POP_STACK(OP_PTR) < 2 THEN

  16945  2 005635   000100 101505                    MRL     fill='000'O
         2 005636   200050 000001                    ADSC9   NUM_TO_POP_STACK,A,AUTO  cn=0,n=1
         2 005637   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005640   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005641   000002 116007                    CMPQ    2,DL
         2 005642   007356 604000 2                  TMI     E_BADNUMARGS

     1975    16946    3               GOTO E_BADNUMARGS;
     1976    16947    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),VALUE) ALTRET(E_DEC);

  16947  2 005643   200535 631500                    EPPR1   VALUE,,AUTO
         2 005644   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 005645   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 005646   200057 633510                    EPPR3   VAL_STACK$,X0,AUTO
         2 005647   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 005650   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 005651   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005652   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 005653   007424 702000 2                  TSX2    E_DEC

     1977    16948    4           DO TEMP1 = 2 TO NUM_TO_POP_STACK (OP_PTR);

  16948  2 005654   000002 235007                    LDA     2,DL
         2 005655   200536 755100                    STA     TEMP1,,AUTO
         2 005656   005677 710000 2                  TRA     s:16951+1

     1978    16949    4               CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-TEMP1+1),TEMP2) ALTRET(E_DEC1);

  16949  2 005657   200022 236100                    LDQ     VAL_PTR,,AUTO
         2 005660   200536 136100                    SBLQ    TEMP1,,AUTO
         2 005661   200537 630500                    EPPR0   TEMP2,,AUTO
         2 005662   201251 450500                    STP0    FPT_FID+71,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:276  
         2 005663   200060 631506                    EPPR1   VAL_STACK$+1,QL,AUTO
         2 005664   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 005665   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 005666   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005667   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 005670   007436 702000 2                  TSX2    E_DEC1

     1979    16950    4               VALUE = MAXIMUM(VALUE,TEMP2);

  16950  2 005671   200537 236100                    LDQ     TEMP2,,AUTO
         2 005672   200535 116100                    CMPQ    VALUE,,AUTO
         2 005673   005675 605000 2                  TPL     s:16950+4
         2 005674   200535 236100                    LDQ     VALUE,,AUTO
         2 005675   200535 756100                    STQ     VALUE,,AUTO

     1980    16951    4           END;

  16951  2 005676   200536 054100                    AOS     TEMP1,,AUTO
         2 005677   200021 235100                    LDA     OP_PTR,,AUTO
         2 005700   000100 101505                    MRL     fill='000'O
         2 005701   200050 000001                    ADSC9   NUM_TO_POP_STACK,A,AUTO  cn=0,n=1
         2 005702   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005703   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005704   200536 116100                    CMPQ    TEMP1,,AUTO
         2 005705   005657 605000 2                  TPL     s:16949

     1981    16952    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  16952  2 005706   200010 630500                    EPPR0   VALUE$,,AUTO
         2 005707   201046 450500                    STP0    @VALUE$,,AUTO
         2 005710   200535 631500                    EPPR1   VALUE,,AUTO
         2 005711   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 005712   002013 701000 2                  TSX1    STASH_VALUE
         2 005713   007402 702000 2                  TSX2    E_REDUCE
         2 005714   007235 710000 2                  TRA     s:17160

     1982    16953    3       CASE (%XUE_$MOD#,%XUE_$REM#);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:277  

     1983    16954    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP2) ALTRET(E_DEC);

  16954  2 005715   200537 631500                    EPPR1   TEMP2,,AUTO
         2 005716   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 005717   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 005720   200057 633511                    EPPR3   VAL_STACK$,X1,AUTO
         2 005721   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 005722   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 005723   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005724   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 005725   007424 702000 2                  TSX2    E_DEC

     1984    16955    3           IF TEMP2 = 0 THEN

  16955  2 005726   200537 235100                    LDA     TEMP2,,AUTO
         2 005727   005742 601000 2                  TNZ     s:16961

     1985    16956    4           DO;                          /* Post err                           */

     1986    16957    4               XUE_ECB.ERR = E_ZERODIVFLT;

  16957  2 005730   000432 236000 1                  LDQ     E_ZERODIVFLT
         2 005731   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 005732   000011 756100                    STQ     9,,PR0

     1987    16958    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  16958  2 005733   200022 235100                    LDA     VAL_PTR,,AUTO
         2 005734   000001 735000                    ALS     1
         2 005735   000100 100505                    MLR     fill='000'O
         2 005736   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 005737   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     1988    16959    4               ALTRETURN;

  16959  2 005740   200534 221300                    LDX1  ! FID_RES+1,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:278  
         2 005741   000000 702211                    TSX2  ! 0,X1

     1989    16960    4           END;
     1990    16961    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR-1),TEMP1) ALTRET(E_DEC1);

  16961  2 005742   200536 630500                    EPPR0   TEMP1,,AUTO
         2 005743   201251 450500                    STP0    FPT_FID+71,,AUTO
         2 005744   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 005745   200056 631510                    EPPR1   NUM_TO_POP_STACK+6,X0,AUTO
         2 005746   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 005747   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 005750   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005751   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 005752   007436 702000 2                  TSX2    E_DEC1

     1991    16962    3           IF TEMP2 > 0 OR OP_STACK(OP_PTR) = %XUE_$REM# THEN

  16962  2 005753   200537 235100                    LDA     TEMP2,,AUTO
         2 005754   005764 605400 2                  TPNZ    s:16963
         2 005755   200021 236100                    LDQ     OP_PTR,,AUTO
         2 005756   000100 101506                    MRL     fill='000'O
         2 005757   200041 000001                    ADSC9   OP_STACK,Q,AUTO          cn=0,n=1
         2 005760   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 005761   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 005762   000111 116007                    CMPQ    73,DL
         2 005763   005770 601000 2                  TNZ     s:16966

     1992    16963    3               VALUE = MOD(TEMP1,TEMP2);

  16963  2 005764   200536 236100                    LDQ     TEMP1,,AUTO
         2 005765   200537 506100                    DIV     TEMP2,,AUTO
         2 005766   200535 755100                    STA     VALUE,,AUTO
         2 005767   006010 710000 2                  TRA     s:16971

     1993    16964    3           ELSE                            /* Special, MOD of neg number         */
     1994    16965    4           DO;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:279  
     1995    16966    4               TEMP3 = TEMP1 / TEMP2;

  16966  2 005770   200536 236100                    LDQ     TEMP1,,AUTO
         2 005771   200537 506100                    DIV     TEMP2,,AUTO
         2 005772   200027 756100                    STQ     TEMP3,,AUTO

     1996    16967    4               IF MOD(TEMP1,TEMP2) > 0 THEN

  16967  2 005773   200536 236100                    LDQ     TEMP1,,AUTO
         2 005774   200537 506100                    DIV     TEMP2,,AUTO
         2 005775   000044 733000                    LRS     36
         2 005776   000000 116003                    CMPQ    0,DU
         2 005777   006002 604400 2                  TMOZ    s:16969

     1997    16968    4                   TEMP3 = TEMP3 -1;

  16968  2 006000   000001 336007                    LCQ     1,DL
         2 006001   200027 056100                    ASQ     TEMP3,,AUTO

     1998    16969    4               VALUE = TEMP1 - (TEMP2 * TEMP3);

  16969  2 006002   200537 236100                    LDQ     TEMP2,,AUTO
         2 006003   200027 402100                    MPY     TEMP3,,AUTO
         2 006004   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 006005   200536 236100                    LDQ     TEMP1,,AUTO
         2 006006   201250 136100                    SBLQ    FPT_FID+70,,AUTO
         2 006007   200535 756100                    STQ     VALUE,,AUTO

     1999    16970    4           END;

     2000    16971    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  16971  2 006010   200010 630500                    EPPR0   VALUE$,,AUTO
         2 006011   201046 450500                    STP0    @VALUE$,,AUTO
         2 006012   200535 631500                    EPPR1   VALUE,,AUTO
         2 006013   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 006014   002013 701000 2                  TSX1    STASH_VALUE
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:280  
         2 006015   007402 702000 2                  TSX2    E_REDUCE
         2 006016   007235 710000 2                  TRA     s:17160

     2001    16972    3       CASE (%XUE_$NAME#);

     2002    16973    3           MCB.SIZE = LENGTHC(B$JIT.UNAME)+1;

  16973  2 006017   000015 235007                    LDA     13,DL
         2 006020   000006 755100                    STA     6,,PR0

     2003    16974    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16974  2 006021   200005 630500                    EPPR0   @MCB,,AUTO
         2 006022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006023   000000 701000 xent               TSX1    X$ALLOCATE
         2 006024   007416 702000 2                  TSX2    E_ALLOCATE

     2004    16975    3           VALUE$ = MCB.ADDRESS$;

  16975  2 006025   200005 470500                    LDP0    @MCB,,AUTO
         2 006026   000000 236100                    LDQ     0,,PR0
         2 006027   200010 756100                    STQ     VALUE$,,AUTO

     2005    16976    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.UNAME);

  16976  2 006030   200010 471500                    LDP1    VALUE$,,AUTO
         2 006031   000100 101400                    MRL     fill='000'O
         2 006032   000032 000004 3                  ADSC9   26                       cn=0,n=4
         2 006033   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2006    16977    3           VALUE$ -> X$STRING.TEXT = B$JIT.UNAME;

  16977  2 006034   200010 471500                    LDP1    VALUE$,,AUTO
         2 006035   000100 101500                    MRL     fill='000'O
         2 006036   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 006037   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006040   201250 220100                    LDX0    FPT_FID+70,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:281  
         2 006041   000000 473400 xsym               LDP3    B$JIT$
         2 006042   040140 100500                    MLR     fill='040'O
         2 006043   300003 000014                    ADSC9   3,,PR3                   cn=0,n=12
         2 006044   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     2007    16978    3           CALL X$STRIP_BLANKS (VALUE$);

  16978  2 006045   200010 631500                    EPPR1   VALUE$,,AUTO
         2 006046   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 006047   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 006050   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006051   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 006052   000000 011000                    NOP     0
         2 006053   007235 710000 2                  TRA     s:17160

     2008    16979    3       CASE (%XUE_$TERM_PROFILE#,%XUE_$TERM_FEP#,

     2009    16980    3             %XUE_$TERM_LINE#,%XUE_$TERM_SPEED#);
     2010    16981    3           IF B$JIT.MODE ~= %M_INT# THEN

  16981  2 006054   000000 471400 xsym               LDP1    B$JIT$
         2 006055   100000 236100                    LDQ     0,,PR1
         2 006056   740000 376003                    ANQ     -16384,DU
         2 006057   140000 116003                    CMPQ    49152,DU
         2 006060   007370 601000 2                  TNZ     E_BADMODE

     2011    16982    3               GOTO E_BADMODE;
     2012    16983    3           FPT_GLINEATTR = CFPT_GLINEATTR;

  16983  2 006061   000100 100400                    MLR     fill='000'O
         2 006062   000414 000040 1                  ADSC9   CFPT_GLINEATTR           cn=0,n=32
         2 006063   200346 000040                    ADSC9   FPT_GLINEATTR,,AUTO      cn=0,n=32

     2013    16984    3           FPT_GLINEATTR.V_ = VECTOR(FPT_GLINEATTR.V);

  16984  2 006064   000004 235000 3                  LDA     4
         2 006065   201250 452500                    STP2    FPT_FID+70,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:282  
         2 006066   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 006067   000354 036003                    ADLQ    236,DU
         2 006070   200346 757100                    STAQ    FPT_GLINEATTR,,AUTO

     2014    16985    3           FPT_GLINEATTR.LINEATTR_ = VECTOR(VLP_LINEATTR);

  16985  2 006071   000033 235000 3                  LDA     27
         2 006072   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 006073   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 006074   000356 036003                    ADLQ    238,DU
         2 006075   200352 757100                    STAQ    FPT_GLINEATTR+4,,AUTO

     2015    16986    3           CALL M$GLINEATTR (FPT_GLINEATTR) ALTRET(E_PMME);

  16986  2 006076   200346 630500                    EPPR0   FPT_GLINEATTR,,AUTO
         2 006077   560005 713400                    CLIMB   alt,+57349
         2 006100   401000 401760                    pmme    nvectors=3
         2 006101   007404 702000 2                  TSX2    E_PMME

     2016    16987    4           DO CASE (OP_STACK(OP_PTR));

  16987  2 006102   200021 235100                    LDA     OP_PTR,,AUTO
         2 006103   000100 101505                    MRL     fill='000'O
         2 006104   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 006105   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 006106   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 006107   000034 136007                    SBLQ    28,DL
         2 006110   000004 116007                    CMPQ    4,DL
         2 006111   006113 602006 2                  TNC     s:16987+9,QL
         2 006112   007235 710000 2                  TRA     s:17160
         2 006113   006117 710000 2                  TRA     s:16989
         2 006114   006150 710000 2                  TRA     s:16995
         2 006115   006202 710000 2                  TRA     s:17001
         2 006116   006234 710000 2                  TRA     s:17007

     2017    16988    4           CASE (%XUE_$TERM_PROFILE#);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:283  
     2018    16989    4               MCB.SIZE = VLP_LINEATTR.PROTXTC.CNT+1;

  16989  2 006117   200360 236100                    LDQ     VLP_LINEATTR+2,,AUTO
         2 006120   000033 772000                    QRL     27
         2 006121   000001 036007                    ADLQ    1,DL
         2 006122   200005 470500                    LDP0    @MCB,,AUTO
         2 006123   000006 756100                    STQ     6,,PR0

     2019    16990    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16990  2 006124   200005 630500                    EPPR0   @MCB,,AUTO
         2 006125   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006126   000000 701000 xent               TSX1    X$ALLOCATE
         2 006127   007416 702000 2                  TSX2    E_ALLOCATE

     2020    16991    4               VALUE$ = MCB.ADDRESS$;

  16991  2 006130   200005 470500                    LDP0    @MCB,,AUTO
         2 006131   000000 236100                    LDQ     0,,PR0
         2 006132   200010 756100                    STQ     VALUE$,,AUTO

     2021    16992    4               VALUE$ -> X$STRING.SIZ = VLP_LINEATTR.PROTXTC.CNT;

  16992  2 006133   200010 471500                    LDP1    VALUE$,,AUTO
         2 006134   000100 100500                    MLR     fill='000'O
         2 006135   200360 000001                    ADSC9   VLP_LINEATTR+2,,AUTO     cn=0,n=1
         2 006136   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2022    16993    4               VALUE$ -> X$STRING.TEXT = VLP_LINEATTR.PROTXTC.TXT;

  16993  2 006137   200010 471500                    LDP1    VALUE$,,AUTO
         2 006140   000100 101500                    MRL     fill='000'O
         2 006141   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 006142   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006143   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 006144   040140 100500                    MLR     fill='040'O
         2 006145   200360 200013                    ADSC9   VLP_LINEATTR+2,,AUTO     cn=1,n=11
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:284  
         2 006146   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 006147   007235 710000 2                  TRA     s:17160

     2023    16994    4           CASE (%XUE_$TERM_FEP#);

     2024    16995    4               MCB.SIZE = 4 +1;

  16995  2 006150   000005 235007                    LDA     5,DL
         2 006151   200005 470500                    LDP0    @MCB,,AUTO
         2 006152   000006 755100                    STA     6,,PR0

     2025    16996    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  16996  2 006153   200005 630500                    EPPR0   @MCB,,AUTO
         2 006154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006155   000000 701000 xent               TSX1    X$ALLOCATE
         2 006156   007416 702000 2                  TSX2    E_ALLOCATE

     2026    16997    4               VALUE$ = MCB.ADDRESS$;

  16997  2 006157   200005 470500                    LDP0    @MCB,,AUTO
         2 006160   000000 236100                    LDQ     0,,PR0
         2 006161   200010 756100                    STQ     VALUE$,,AUTO

     2027    16998    4               VALUE$ -> X$STRING.SIZ = MCB.SIZE -1;

  16998  2 006162   000006 236100                    LDQ     6,,PR0
         2 006163   000001 136007                    SBLQ    1,DL
         2 006164   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 006165   200010 471500                    LDP1    VALUE$,,AUTO
         2 006166   000100 101500                    MRL     fill='000'O
         2 006167   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 006170   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2028    16999    4               VALUE$ -> X$STRING.TEXT = VLP_LINEATTR.NODE#;

  16999  2 006171   200010 471500                    LDP1    VALUE$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:285  
         2 006172   000100 101500                    MRL     fill='000'O
         2 006173   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 006174   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006175   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 006176   040140 100500                    MLR     fill='040'O
         2 006177   200363 000004                    ADSC9   VLP_LINEATTR+5,,AUTO     cn=0,n=4
         2 006200   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 006201   007235 710000 2                  TRA     s:17160

     2029    17000    4           CASE (%XUE_$TERM_LINE#);

     2030    17001    4               MCB.SIZE = 4 +1;

  17001  2 006202   000005 235007                    LDA     5,DL
         2 006203   200005 470500                    LDP0    @MCB,,AUTO
         2 006204   000006 755100                    STA     6,,PR0

     2031    17002    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17002  2 006205   200005 630500                    EPPR0   @MCB,,AUTO
         2 006206   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006207   000000 701000 xent               TSX1    X$ALLOCATE
         2 006210   007416 702000 2                  TSX2    E_ALLOCATE

     2032    17003    4               VALUE$ = MCB.ADDRESS$;

  17003  2 006211   200005 470500                    LDP0    @MCB,,AUTO
         2 006212   000000 236100                    LDQ     0,,PR0
         2 006213   200010 756100                    STQ     VALUE$,,AUTO

     2033    17004    4               VALUE$ -> X$STRING.SIZ = MCB.SIZE -1;

  17004  2 006214   000006 236100                    LDQ     6,,PR0
         2 006215   000001 136007                    SBLQ    1,DL
         2 006216   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 006217   200010 471500                    LDP1    VALUE$,,AUTO
         2 006220   000100 101500                    MRL     fill='000'O
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:286  
         2 006221   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 006222   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2034    17005    4               VALUE$ -> X$STRING.TEXT = VLP_LINEATTR.PORT#;

  17005  2 006223   200010 471500                    LDP1    VALUE$,,AUTO
         2 006224   000100 101500                    MRL     fill='000'O
         2 006225   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 006226   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006227   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 006230   040140 100500                    MLR     fill='040'O
         2 006231   200364 000004                    ADSC9   VLP_LINEATTR+6,,AUTO     cn=0,n=4
         2 006232   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 006233   007235 710000 2                  TRA     s:17160

     2035    17006    4           CASE (%XUE_$TERM_SPEED#);

     2036    17007    4               TEMP = SPEED_TBL(VLP_LINEATTR.LINESPEED#);

  17007  2 006234   200356 236100                    LDQ     VLP_LINEATTR,,AUTO
         2 006235   000022 772000                    QRL     18
         2 006236   000777 376007                    ANQ     511,DL
         2 006237   000001 736000                    QLS     1
         2 006240   000100 101406                    MRL     fill='000'O
         2 006241   000137 000002 1                  ADSC9   SPEED_TBL,Q              cn=0,n=2
         2 006242   200026 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     2037    17008    4               CALL STASH_VALUE(TEMP,VALUE$) ALTRET(E_REDUCE);

  17008  2 006243   200010 630500                    EPPR0   VALUE$,,AUTO
         2 006244   201046 450500                    STP0    @VALUE$,,AUTO
         2 006245   200026 631500                    EPPR1   TEMP,,AUTO
         2 006246   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 006247   002013 701000 2                  TSX1    STASH_VALUE
         2 006250   007402 702000 2                  TSX2    E_REDUCE

     2038    17009    4           END;                         /* END CASE                           */
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:287  

  17009  2 006251   007235 710000 2                  TRA     s:17160

     2039    17010    3       CASE (%XUE_$RERUN#);

     2040    17011    3           IF B$JIT.RERUN THEN

  17011  2 006252   000000 471400 xsym               LDP1    B$JIT$
         2 006253   100302 236100                    LDQ     194,,PR1
         2 006254   000400 316003                    CANQ    256,DU
         2 006255   006261 600000 2                  TZE     s:17014

     2041    17012    3               VALUE$ = YES$;

  17012  2 006256   000004 236000 1                  LDQ     YES$
         2 006257   200010 756100                    STQ     VALUE$,,AUTO
         2 006260   007235 710000 2                  TRA     s:17160

     2042    17013    3           ELSE
     2043    17014    3               VALUE$ = NO$;

  17014  2 006261   000006 236000 1                  LDQ     NO$
         2 006262   200010 756100                    STQ     VALUE$,,AUTO
         2 006263   007235 710000 2                  TRA     s:17160

     2044    17015    3       CASE (%XUE_$FLAG#);

     2045    17016    3           TEMP1 = VAL_TYPE(VAL_PTR);

  17016  2 006264   200022 235100                    LDA     VAL_PTR,,AUTO
         2 006265   000100 101505                    MRL     fill='000'O
         2 006266   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1
         2 006267   200536 000004                    ADSC9   TEMP1,,AUTO              cn=0,n=4

     2046    17017    3           TBIT = %NO#;

  17017  2 006270   200017 450100                    STZ     TBIT,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:288  

     2047    17018    4           DO CASE (TEMP1);

  17018  2 006271   200536 235100                    LDA     TEMP1,,AUTO
         2 006272   000006 115007                    CMPA    6,DL
         2 006273   006275 602005 2                  TNC     s:17018+4,AL
         2 006274   006353 710000 2                  TRA     s:17042
         2 006275   006303 710000 2                  TRA     s:17020
         2 006276   006312 710000 2                  TRA     s:17023
         2 006277   006320 710000 2                  TRA     s:17025
         2 006300   006326 710000 2                  TRA     s:17027
         2 006301   006335 710000 2                  TRA     s:17030
         2 006302   006344 710000 2                  TRA     s:17033

     2048    17019    4           CASE(%FLAG_PROTECT#);

     2049    17020    4               IF B$JIT.CPFLAGS1 & %CP_PROTECT# THEN

  17020  2 006303   000000 471400 xsym               LDP1    B$JIT$
         2 006304   100143 236100                    LDQ     99,,PR1
         2 006305   001153 376000 1                  ANQ     MIN_OFFSET+14
         2 006306   006353 600000 2                  TZE     s:17042

     2050    17021    4                   TBIT = %YES#;

  17021  2 006307   400000 236003                    LDQ     -131072,DU
         2 006310   200017 756100                    STQ     TBIT,,AUTO
         2 006311   006353 710000 2                  TRA     s:17042

     2051    17022    4           CASE(%FLAG_LIST#);

     2052    17023    4               TBIT = B$JIT.PRFLAGS.LIST;

  17023  2 006312   000000 471400 xsym               LDP1    B$JIT$
         2 006313   100030 236100                    LDQ     24,,PR1
         2 006314   000005 736000                    QLS     5
         2 006315   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:289  
         2 006316   200017 756100                    STQ     TBIT,,AUTO
         2 006317   006353 710000 2                  TRA     s:17042

     2053    17024    4           CASE(%FLAG_COMMENT#);

     2054    17025    4               TBIT = B$JIT.PRFLAGS.COMMENT;

  17025  2 006320   000000 471400 xsym               LDP1    B$JIT$
         2 006321   100030 236100                    LDQ     24,,PR1
         2 006322   000004 736000                    QLS     4
         2 006323   400000 376003                    ANQ     -131072,DU
         2 006324   200017 756100                    STQ     TBIT,,AUTO
         2 006325   006353 710000 2                  TRA     s:17042

     2055    17026    4           CASE(%FLAG_DRIBBLE#);

     2056    17027    4               IF B$JIT.CPFLAGS1 & %CP_DRIBBLE# THEN

  17027  2 006326   000000 471400 xsym               LDP1    B$JIT$
         2 006327   100143 236100                    LDQ     99,,PR1
         2 006330   001154 376000 1                  ANQ     MIN_OFFSET+15
         2 006331   006353 600000 2                  TZE     s:17042

     2057    17028    4                   TBIT = %YES#;

  17028  2 006332   400000 236003                    LDQ     -131072,DU
         2 006333   200017 756100                    STQ     TBIT,,AUTO
         2 006334   006353 710000 2                  TRA     s:17042

     2058    17029    4           CASE(%FLAG_ECHO#);

     2059    17030    4               IF B$JIT.CPFLAGS1 & %CP_ECHO# THEN

  17030  2 006335   000000 471400 xsym               LDP1    B$JIT$
         2 006336   100143 236100                    LDQ     99,,PR1
         2 006337   000012 376000 xsym               ANQ     B_VECTNIL+10
         2 006340   006353 600000 2                  TZE     s:17042
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:290  

     2060    17031    4                   TBIT = %YES#;

  17031  2 006341   400000 236003                    LDQ     -131072,DU
         2 006342   200017 756100                    STQ     TBIT,,AUTO
         2 006343   006353 710000 2                  TRA     s:17042

     2061    17032    4           CASE(%FLAG_NOTIFY#);

     2062    17033    4               IF B$JIT.CPFLAGS1 & %CP_NOTIFY# THEN

  17033  2 006344   000000 471400 xsym               LDP1    B$JIT$
         2 006345   100143 236100                    LDQ     99,,PR1
         2 006346   001155 376000 1                  ANQ     MIN_OFFSET+16
         2 006347   006353 600000 2                  TZE     s:17042

     2063    17034    4                   TBIT = %YES#;

  17034  2 006350   400000 236003                    LDQ     -131072,DU
         2 006351   200017 756100                    STQ     TBIT,,AUTO
         2 006352   006353 710000 2                  TRA     s:17042

     2064    17035    4           CASE(%FLAG_ACCEPTBROADCAST#);

     2065    17036                      /*N*/
     2066    17037    4           CASE(%FLAG_ACCEPTSEND#);

     2067    17038                      /*N*/
     2068    17039    4           CASE(%FLAG_ACCEPTANNOUNCE#);

     2069    17040                      /*N*/
     2070    17041    4           END;                         /* END CASE                           */

     2071    17042    3           IF TBIT THEN

  17042  2 006353   200017 234100                    SZN     TBIT,,AUTO
         2 006354   006360 605000 2                  TPL     s:17045
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:291  

     2072    17043    3               VALUE$ = YES$;

  17043  2 006355   000004 236000 1                  LDQ     YES$
         2 006356   200010 756100                    STQ     VALUE$,,AUTO
         2 006357   007235 710000 2                  TRA     s:17160

     2073    17044    3           ELSE
     2074    17045    3               VALUE$ = NO$;

  17045  2 006360   000006 236000 1                  LDQ     NO$
         2 006361   200010 756100                    STQ     VALUE$,,AUTO
         2 006362   007235 710000 2                  TRA     s:17160

     2075    17046    3       CASE (%XUE_$PRIV_ACTIVE#);

     2076    17047    3           TEMP1 = VAL_TYPE(VAL_PTR);

  17047  2 006363   200022 235100                    LDA     VAL_PTR,,AUTO
         2 006364   000100 101505                    MRL     fill='000'O
         2 006365   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1
         2 006366   200536 000004                    ADSC9   TEMP1,,AUTO              cn=0,n=4

     2077    17048    3           IF B$JIT.PRIV.JOB & PRIV.MASK(TEMP1) THEN

  17048  2 006367   000000 471400 xsym               LDP1    B$JIT$
         2 006370   200536 721100                    LXL1    TEMP1,,AUTO
         2 006371   100015 236100                    LDQ     13,,PR1
         2 006372   000114 376011 1                  ANQ     PRIV,X1
         2 006373   006377 600000 2                  TZE     s:17051

     2078    17049    3               VALUE$ = YES$;

  17049  2 006374   000004 236000 1                  LDQ     YES$
         2 006375   200010 756100                    STQ     VALUE$,,AUTO
         2 006376   007235 710000 2                  TRA     s:17160

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:292  
     2079    17050    3           ELSE
     2080    17051    3               VALUE$ = NO$;

  17051  2 006377   000006 236000 1                  LDQ     NO$
         2 006400   200010 756100                    STQ     VALUE$,,AUTO
         2 006401   007235 710000 2                  TRA     s:17160

     2081    17052    3       CASE (%XUE_$PRIV_AUTH#);

     2082    17053    3           TEMP1 = VAL_TYPE(VAL_PTR);

  17053  2 006402   200022 235100                    LDA     VAL_PTR,,AUTO
         2 006403   000100 101505                    MRL     fill='000'O
         2 006404   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1
         2 006405   200536 000004                    ADSC9   TEMP1,,AUTO              cn=0,n=4

     2083    17054    3           IF B$JIT.PRIV.AUTH & PRIV.MASK(TEMP1) THEN

  17054  2 006406   000000 471400 xsym               LDP1    B$JIT$
         2 006407   200536 721100                    LXL1    TEMP1,,AUTO
         2 006410   100014 236100                    LDQ     12,,PR1
         2 006411   000114 376011 1                  ANQ     PRIV,X1
         2 006412   006416 600000 2                  TZE     s:17057

     2084    17055    3               VALUE$ = YES$;

  17055  2 006413   000004 236000 1                  LDQ     YES$
         2 006414   200010 756100                    STQ     VALUE$,,AUTO
         2 006415   007235 710000 2                  TRA     s:17160

     2085    17056    3           ELSE
     2086    17057    3               VALUE$ = NO$;

  17057  2 006416   000006 236000 1                  LDQ     NO$
         2 006417   200010 756100                    STQ     VALUE$,,AUTO
         2 006420   007235 710000 2                  TRA     s:17160

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:293  
     2087    17058    3       CASE (%XUE_$SEARCH#);

     2088    17059    3           SEARCH_TABLE = ZERO_511;        /* Init table to zeros                */

  17059  2 006421   000100 100400                    MLR     fill='000'O
         2 006422   000516 001000 1                  ADSC9   ZERO_511                 cn=0,n=512
         2 006423   200642 001000                    ADSC9   SEARCH_TABLE,,AUTO       cn=0,n=512

     2089    17060    4           DO TEMP2 = 0 TO VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ - 1;

  17060  2 006424   200537 450100                    STZ     TEMP2,,AUTO
         2 006425   006441 710000 2                  TRA     s:17063+1

     2090    17061    4               TEMP1 = VAL_STACK$(VAL_PTR-2) -> U$STRING.TEXT(TEMP2);

  17061  2 006426   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 006427   200055 470510                    LDP0    NUM_TO_POP_STACK+5,X0,AUTO
         2 006430   200537 235100                    LDA     TEMP2,,AUTO
         2 006431   000100 101505                    MRL     fill='000'O
         2 006432   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 006433   200536 000004                    ADSC9   TEMP1,,AUTO              cn=0,n=4

     2091    17062    4               SEARCH_TABLE(TEMP1) = 1;

  17062  2 006434   200536 236100                    LDQ     TEMP1,,AUTO
         2 006435   000106 101400                    MRL     fill='000'O
         2 006436   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         2 006437   200642 000001                    ADSC9   SEARCH_TABLE,Q,AUTO      cn=0,n=1

     2092    17063    4           END;

  17063  2 006440   200537 054100                    AOS     TEMP2,,AUTO
         2 006441   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 006442   200055 470510                    LDP0    NUM_TO_POP_STACK+5,X0,AUTO
         2 006443   000100 101500                    MRL     fill='000'O
         2 006444   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 006445   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:294  
         2 006446   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 006447   200537 116100                    CMPQ    TEMP2,,AUTO
         2 006450   006426 605400 2                  TPNZ    s:17061

     2093    17064    3           CALL CHK_BOUNDS (%XUE_$SEARCH#,TEMP1,TEMP2) ALTRET(E_REDUCE);

  17064  2 006451   200537 630500                    EPPR0   TEMP2,,AUTO
         2 006452   201047 450500                    STP0    @CHARPOS,,AUTO
         2 006453   200536 631500                    EPPR1   TEMP1,,AUTO
         2 006454   201046 451500                    STP1    @VALUE$,,AUTO
         2 006455   000035 236000 3                  LDQ     29
         2 006456   201045 756100                    STQ     @VAR_NAME$,,AUTO
         2 006457   001431 701000 2                  TSX1    CHK_BOUNDS
         2 006460   007402 702000 2                  TSX2    E_REDUCE

     2094    17065    3           CALL SEARCH (WHERE,RESULT,SEARCH_TABLE,

  17065  2 006461   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 006462   200054 470510                    LDP0    NUM_TO_POP_STACK+4,X0,AUTO
         2 006463   000100 101500                    MRL     fill='000'O
         2 006464   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 006465   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006466   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 006467   200537 236100                    LDQ     TEMP2,,AUTO
         2 006470   200536 136100                    SBLQ    TEMP1,,AUTO
         2 006471   000001 622006                    EAX2    1,QL
         2 006472   200536 235100                    LDA     TEMP1,,AUTO
         2 006473   000000 164545                    TCT
         2 006474   000000 200012                    ADSC9   0,A,PR0                  cn=1,n=*X2
         2 006475   200642 000100                    ARG     SEARCH_TABLE,,AUTO
         2 006476   201042 000100                    ARG     WHERE,,AUTO
         2 006477   201042 236100                    LDQ     WHERE,,AUTO
         2 006500   000044 737000                    LLS     36
         2 006501   000033 771000                    ARL     27
         2 006502   201043 755100                    STA     RESULT,,AUTO
         2 006503   201042 551140                    STBA    WHERE,'40'O,AUTO

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:295  
     2095    17066    3             SUBSTR(VAL_STACK$(VAL_PTR-3)->X$STRING.TEXT,TEMP1,TEMP2-TEMP1+1));
     2096    17067    3           IF RESULT = 0

  17067  2 006504   006512 601000 2                  TNZ     s:17071

     2097    17068    3           THEN                         /* Unsuccessful                       */
     2098    17069    3               VALUE = VAL_STACK$(VAL_PTR-3) -> X$STRING.SIZ;

  17069  2 006505   200054 470510                    LDP0    NUM_TO_POP_STACK+4,X0,AUTO
         2 006506   000100 101500                    MRL     fill='000'O
         2 006507   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 006510   200535 000004                    ADSC9   VALUE,,AUTO              cn=0,n=4
         2 006511   006515 710000 2                  TRA     s:17072

     2099    17070    3           ELSE                         /* RESULT points to first char        */
     2100    17071    3               VALUE = WHERE + TEMP1;

  17071  2 006512   201042 236100                    LDQ     WHERE,,AUTO
         2 006513   200536 036100                    ADLQ    TEMP1,,AUTO
         2 006514   200535 756100                    STQ     VALUE,,AUTO

     2101    17072    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  17072  2 006515   200010 630500                    EPPR0   VALUE$,,AUTO
         2 006516   201046 450500                    STP0    @VALUE$,,AUTO
         2 006517   200535 631500                    EPPR1   VALUE,,AUTO
         2 006520   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 006521   002013 701000 2                  TSX1    STASH_VALUE
         2 006522   007402 702000 2                  TSX2    E_REDUCE
         2 006523   007235 710000 2                  TRA     s:17160

     2102    17073    3       CASE (%XUE_$SITE#);

     2103    17074    3           FPT_MONINFO = CFPT_MONINFO;

  17074  2 006524   000100 100400                    MLR     fill='000'O
         2 006525   000166 000060 1                  ADSC9   CFPT_MONINFO             cn=0,n=48
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:296  
         2 006526   200230 000060                    ADSC9   FPT_MONINFO,,AUTO        cn=0,n=48

     2104    17075    3           FPT_MONINFO.SITEINFO_ = VECTOR(VLR_SITEINFO);

  17075  2 006527   000036 235000 3                  LDA     30
         2 006530   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 006531   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 006532   000376 036003                    ADLQ    254,DU
         2 006533   200230 757100                    STAQ    FPT_MONINFO,,AUTO

     2105    17076    3           CALL M$MONINFO (FPT_MONINFO) ALTRET(E_PMME);

  17076  2 006534   200230 630500                    EPPR0   FPT_MONINFO,,AUTO
         2 006535   420023 713400                    CLIMB   alt,+8211
         2 006536   402400 401760                    pmme    nvectors=6
         2 006537   007404 702000 2                  TSX2    E_PMME

     2106    17077    3           MCB.SIZE = VLR_SITEINFO.SITE_NAME#.L + 1; /* One for count*/

  17077  2 006540   200377 236100                    LDQ     VLR_SITEINFO+1,,AUTO
         2 006541   000033 772000                    QRL     27
         2 006542   000001 036007                    ADLQ    1,DL
         2 006543   200005 470500                    LDP0    @MCB,,AUTO
         2 006544   000006 756100                    STQ     6,,PR0

     2107    17078    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17078  2 006545   200005 630500                    EPPR0   @MCB,,AUTO
         2 006546   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006547   000000 701000 xent               TSX1    X$ALLOCATE
         2 006550   007416 702000 2                  TSX2    E_ALLOCATE

     2108    17079    3           VALUE$ = MCB.ADDRESS$;

  17079  2 006551   200005 470500                    LDP0    @MCB,,AUTO
         2 006552   000000 236100                    LDQ     0,,PR0
         2 006553   200010 756100                    STQ     VALUE$,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:297  

     2109    17080    3           VALUE$ -> X$STRING.SIZ = VLR_SITEINFO.SITE_NAME#.L;

  17080  2 006554   200010 471500                    LDP1    VALUE$,,AUTO
         2 006555   000100 100500                    MLR     fill='000'O
         2 006556   200377 000001                    ADSC9   VLR_SITEINFO+1,,AUTO     cn=0,n=1
         2 006557   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2110    17081    3           VALUE$ -> X$STRING.TEXT = VLR_SITEINFO.SITE_NAME#.C;

  17081  2 006560   200010 471500                    LDP1    VALUE$,,AUTO
         2 006561   000100 101500                    MRL     fill='000'O
         2 006562   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 006563   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006564   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 006565   040140 100500                    MLR     fill='040'O
         2 006566   200377 200167                    ADSC9   VLR_SITEINFO+1,,AUTO     cn=1,n=119
         2 006567   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 006570   007235 710000 2                  TRA     s:17160

     2111    17082    3       CASE (%XUE_$SUBSTR#);

     2112    17083    3           CALL CHK_BOUNDS (%XUE_$SUBSTR#,TEMP1,TEMP2) ALTRET(E_REDUCE);

  17083  2 006571   200537 631500                    EPPR1   TEMP2,,AUTO
         2 006572   201047 451500                    STP1    @CHARPOS,,AUTO
         2 006573   200536 633500                    EPPR3   TEMP1,,AUTO
         2 006574   201046 453500                    STP3    @VALUE$,,AUTO
         2 006575   000040 236000 3                  LDQ     32
         2 006576   201045 756100                    STQ     @VAR_NAME$,,AUTO
         2 006577   001431 701000 2                  TSX1    CHK_BOUNDS
         2 006600   007402 702000 2                  TSX2    E_REDUCE

     2113    17084    3           MCB.SIZE = TEMP2 + 1;

  17084  2 006601   200005 470500                    LDP0    @MCB,,AUTO
         2 006602   200537 235100                    LDA     TEMP2,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:298  
         2 006603   000001 035007                    ADLA    1,DL
         2 006604   000006 755100                    STA     6,,PR0

     2114    17085    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17085  2 006605   200005 630500                    EPPR0   @MCB,,AUTO
         2 006606   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006607   000000 701000 xent               TSX1    X$ALLOCATE
         2 006610   007416 702000 2                  TSX2    E_ALLOCATE

     2115    17086    3           VALUE$ = MCB.ADDRESS$;

  17086  2 006611   200005 470500                    LDP0    @MCB,,AUTO
         2 006612   000000 236100                    LDQ     0,,PR0
         2 006613   200010 756100                    STQ     VALUE$,,AUTO

     2116    17087    3           VALUE$ -> X$STRING.SIZ = TEMP2;

  17087  2 006614   200010 471500                    LDP1    VALUE$,,AUTO
         2 006615   000100 101500                    MRL     fill='000'O
         2 006616   200537 000004                    ADSC9   TEMP2,,AUTO              cn=0,n=4
         2 006617   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2117    17088    3           VALUE$ -> X$STRING.TEXT =

  17088  2 006620   200010 471500                    LDP1    VALUE$,,AUTO
         2 006621   000100 101500                    MRL     fill='000'O
         2 006622   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 006623   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006624   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 006625   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 006626   200055 473511                    LDP3    NUM_TO_POP_STACK+5,X1,AUTO
         2 006627   000100 101500                    MRL     fill='000'O
         2 006630   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 006631   201251 000002                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=2
         2 006632   201251 222100                    LDX2    FPT_FID+71,,AUTO
         2 006633   200537 723100                    LXL3    TEMP2,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:299  
         2 006634   200536 235100                    LDA     TEMP1,,AUTO
         2 006635   040140 100545                    MLR     fill='040'O
         2 006636   300000 200013                    ADSC9   0,A,PR3                  cn=1,n=*X3
         2 006637   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 006640   007235 710000 2                  TRA     s:17160

     2118    17089    3             SUBSTR(VAL_STACK$(VAL_PTR-2) -> X$STRING.TEXT,TEMP1,TEMP2);
     2119    17090    3       CASE (%XUE_$SWITCH#);

     2120    17091    3           CALL X$DEC_CONVERT (VAL_STACK$(VAL_PTR),TEMP2) ALTRET(E_REDUCE);

  17091  2 006641   200537 631500                    EPPR1   TEMP2,,AUTO
         2 006642   201251 451500                    STP1    FPT_FID+71,,AUTO
         2 006643   200022 721100                    LXL1    VAL_PTR,,AUTO
         2 006644   200057 633511                    EPPR3   VAL_STACK$,X1,AUTO
         2 006645   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 006646   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 006647   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 006650   000000 701000 xent               TSX1    X$DEC_CONVERT
         2 006651   007402 702000 2                  TSX2    E_REDUCE

     2121    17092    3           IF TEMP2 > 35

  17092  2 006652   200537 235100                    LDA     TEMP2,,AUTO
         2 006653   000043 115007                    CMPA    35,DL
         2 006654   006667 604400 2                  TMOZ    s:17099

     2122    17093    3           THEN
     2123    17094    4           DO;                       /* Post err                           */

     2124    17095    4               XUE_ECB.ERR = E_BDSWITCH;

  17095  2 006655   000440 236000 1                  LDQ     E_BDSWITCH
         2 006656   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 006657   000011 756100                    STQ     9,,PR0

     2125    17096    4               XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:300  

  17096  2 006660   200022 235100                    LDA     VAL_PTR,,AUTO
         2 006661   000001 735000                    ALS     1
         2 006662   000100 100505                    MLR     fill='000'O
         2 006663   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 006664   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     2126    17097    4               ALTRETURN;

  17097  2 006665   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 006666   000000 702211                    TSX2  ! 0,X1

     2127    17098    4           END;
     2128    17099    3           VALUE = BITBIN(B$JIT.SWITCH(TEMP2));

  17099  2 006667   000000 115003                    CMPA    0,DU
         2 006670   006672 605000 2                  TPL     s:17099+3
         2 006671   000044 035003                    ADLA    36,DU
         2 006672   000000 470400 xsym               LDP0    B$JIT$
         2 006673   003100 061505                    CSR     bolr='003'O
         2 006674   000031 000001                    BDSC    25,A,PR0                 by=0,bit=0,n=1
         2 006675   201250 000044                    BDSC    FPT_FID+70,,AUTO         by=0,bit=0,n=36
         2 006676   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 006677   200535 756100                    STQ     VALUE,,AUTO

     2129    17100    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  17100  2 006700   200010 631500                    EPPR1   VALUE$,,AUTO
         2 006701   201046 451500                    STP1    @VALUE$,,AUTO
         2 006702   200535 633500                    EPPR3   VALUE,,AUTO
         2 006703   201045 453500                    STP3    @VAR_NAME$,,AUTO
         2 006704   002013 701000 2                  TSX1    STASH_VALUE
         2 006705   007402 702000 2                  TSX2    E_REDUCE
         2 006706   007235 710000 2                  TRA     s:17160

     2130    17101    3       CASE (%XUE_$SYSID#);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:301  
     2131    17102    3           VALUE = B$JIT.SYSID;

  17102  2 006707   000000 471400 xsym               LDP1    B$JIT$
         2 006710   100000 236100                    LDQ     0,,PR1
         2 006711   777777 376007                    ANQ     -1,DL
         2 006712   200535 756100                    STQ     VALUE,,AUTO

     2132    17103    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  17103  2 006713   200010 633500                    EPPR3   VALUE$,,AUTO
         2 006714   201046 453500                    STP3    @VALUE$,,AUTO
         2 006715   200535 634500                    EPPR4   VALUE,,AUTO
         2 006716   201045 454500                    STP4    @VAR_NAME$,,AUTO
         2 006717   002013 701000 2                  TSX1    STASH_VALUE
         2 006720   007402 702000 2                  TSX2    E_REDUCE
         2 006721   007235 710000 2                  TRA     s:17160

     2133    17104    3       CASE (%XUE_$TIME#);

     2134    17105    3           MCB.SIZE = 16;

  17105  2 006722   000020 235007                    LDA     16,DL
         2 006723   000006 755100                    STA     6,,PR0

     2135    17106    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17106  2 006724   200005 630500                    EPPR0   @MCB,,AUTO
         2 006725   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006726   000000 701000 xent               TSX1    X$ALLOCATE
         2 006727   007416 702000 2                  TSX2    E_ALLOCATE

     2136    17107    3           VALUE$ = MCB.ADDRESS$;

  17107  2 006730   200005 470500                    LDP0    @MCB,,AUTO
         2 006731   000000 236100                    LDQ     0,,PR0
         2 006732   200010 756100                    STQ     VALUE$,,AUTO

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:302  
     2137    17108    3           VALUE$ -> X$STRING.SIZ = MCB.SIZE - 1;

  17108  2 006733   000006 236100                    LDQ     6,,PR0
         2 006734   000001 136007                    SBLQ    1,DL
         2 006735   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 006736   200010 471500                    LDP1    VALUE$,,AUTO
         2 006737   000100 101500                    MRL     fill='000'O
         2 006740   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 006741   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2138    17109    3           VALUE$ -> X$STRING.TEXT  = ' ';

  17109  2 006742   200010 471500                    LDP1    VALUE$,,AUTO
         2 006743   000100 101500                    MRL     fill='000'O
         2 006744   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 006745   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006746   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 006747   040140 100400                    MLR     fill='040'O
         2 006750   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 006751   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     2139    17110    3           FPT_TIME = CFPT_TIME;

  17110  2 006752   000100 100400                    MLR     fill='000'O
         2 006753   000232 000060 1                  ADSC9   CFPT_TIME                cn=0,n=48
         2 006754   200316 000060                    ADSC9   FPT_TIME,,AUTO           cn=0,n=48

     2140    17111    3           FPT_TIME.V_ = VECTOR(FPT_TIME.V);

  17111  2 006755   000004 235000 3                  LDA     4
         2 006756   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 006757   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 006760   000330 036003                    ADLQ    216,DU
         2 006761   200316 757100                    STAQ    FPT_TIME,,AUTO

     2141    17112    3           FPT_TIME.TIME_ = VECTOR(VALUE$ -> X$STRING.TEXT);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:303  
  17112  2 006762   200010 471500                    LDP1    VALUE$,,AUTO
         2 006763   000100 101500                    MRL     fill='000'O
         2 006764   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 006765   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 006766   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 006767   000000 635010                    EAA     0,X0
         2 006770   000002 771000                    ARL     2
         2 006771   000140 135007                    SBLA    96,DL
         2 006772   200010 236100                    LDQ     VALUE$,,AUTO
         2 006773   200000 036007                    ADLQ    65536,DL
         2 006774   200322 757100                    STAQ    FPT_TIME+4,,AUTO

     2142    17113    3           FPT_TIME.V.DEST# = %ANS#;

  17113  2 006775   000002 236003                    LDQ     2,DU
         2 006776   200330 552120                    STBQ    FPT_TIME+10,'20'O,AUTO

     2143    17114    3           CALL TIME_FUNCTIONS ALTRET(E_REDUCE);

  17114  2 006777   002143 701000 2                  TSX1    TIME_FUNCTIONS
         2 007000   007402 702000 2                  TSX2    E_REDUCE

     2144    17115    3           CALL X$STRIP_BLANKS (VALUE$);

  17115  2 007001   200010 630500                    EPPR0   VALUE$,,AUTO
         2 007002   201250 450500                    STP0    FPT_FID+70,,AUTO
         2 007003   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 007004   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007005   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 007006   000000 011000                    NOP     0

     2145    17116    4           DO CASE (FPT_TIME.V.DEST#);

  17116  2 007007   200330 220100                    LDX0    FPT_TIME+10,,AUTO
         2 007010   000777 360003                    ANX0    511,DU
         2 007011   000004 100003                    CMPX0   4,DU
         2 007012   007014 602010 2                  TNC     s:17116+5,X0
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:304  
         2 007013   007235 710000 2                  TRA     s:17160
         2 007014   007031 710000 2                  TRA     s:17122
         2 007015   007025 710000 2                  TRA     s:17121
         2 007016   007020 710000 2                  TRA     s:17118
         2 007017   007025 710000 2                  TRA     s:17121

     2146    17117    4           CASE (%ANS#);

     2147    17118    4               VALUE$ -> X$STRING.SIZ = 4;

  17118  2 007020   200010 470500                    LDP0    VALUE$,,AUTO
         2 007021   000100 101400                    MRL     fill='000'O
         2 007022   000006 000004 xsym               ADSC9   B_VECTNIL+6              cn=0,n=4
         2 007023   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 007024   007235 710000 2                  TRA     s:17160

     2148    17119    4           CASE (%EXT#,

     2149    17120    4                 %LOCAL#);
     2150    17121    4               VALUE$ -> X$STRING.SIZ = 5;

  17121  2 007025   200010 470500                    LDP0    VALUE$,,AUTO
         2 007026   000100 101400                    MRL     fill='000'O
         2 007027   000007 000004 xsym               ADSC9   B_VECTNIL+7              cn=0,n=4
         2 007030   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

     2151    17122    4           END;   /* Do case ... end */

  17122  2 007031   007235 710000 2                  TRA     s:17160

     2152    17123    3       CASE (%XUE_$VERIFY#);

     2153    17124    3           SEARCH_TABLE = ONE_511;         /* Init table to ones                 */

  17124  2 007032   000100 100400                    MLR     fill='000'O
         2 007033   000716 001000 1                  ADSC9   ONE_511                  cn=0,n=512
         2 007034   200642 001000                    ADSC9   SEARCH_TABLE,,AUTO       cn=0,n=512
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:305  

     2154    17125    4           DO TEMP2 = 0 TO VAL_STACK$(VAL_PTR-2) -> X$STRING.SIZ - 1;

  17125  2 007035   200537 450100                    STZ     TEMP2,,AUTO
         2 007036   007052 710000 2                  TRA     s:17128+1

     2155    17126    4               TEMP1 = VAL_STACK$(VAL_PTR-2) -> U$STRING.TEXT(TEMP2);

  17126  2 007037   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 007040   200055 470510                    LDP0    NUM_TO_POP_STACK+5,X0,AUTO
         2 007041   200537 235100                    LDA     TEMP2,,AUTO
         2 007042   000100 101505                    MRL     fill='000'O
         2 007043   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 007044   200536 000004                    ADSC9   TEMP1,,AUTO              cn=0,n=4

     2156    17127    4               SEARCH_TABLE(TEMP1) = 0;

  17127  2 007045   200536 236100                    LDQ     TEMP1,,AUTO
         2 007046   000106 101400                    MRL     fill='000'O
         2 007047   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         2 007050   200642 000001                    ADSC9   SEARCH_TABLE,Q,AUTO      cn=0,n=1

     2157    17128    4           END;

  17128  2 007051   200537 054100                    AOS     TEMP2,,AUTO
         2 007052   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 007053   200055 470510                    LDP0    NUM_TO_POP_STACK+5,X0,AUTO
         2 007054   000100 101500                    MRL     fill='000'O
         2 007055   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 007056   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 007057   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 007060   200537 116100                    CMPQ    TEMP2,,AUTO
         2 007061   007037 605400 2                  TPNZ    s:17126

     2158    17129    3           CALL CHK_BOUNDS (%XUE_$VERIFY#,TEMP1,TEMP2) ALTRET(E_REDUCE);

  17129  2 007062   200537 630500                    EPPR0   TEMP2,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:306  
         2 007063   201047 450500                    STP0    @CHARPOS,,AUTO
         2 007064   200536 631500                    EPPR1   TEMP1,,AUTO
         2 007065   201046 451500                    STP1    @VALUE$,,AUTO
         2 007066   000042 236000 3                  LDQ     34
         2 007067   201045 756100                    STQ     @VAR_NAME$,,AUTO
         2 007070   001431 701000 2                  TSX1    CHK_BOUNDS
         2 007071   007402 702000 2                  TSX2    E_REDUCE

     2159    17130    3           CALL SEARCH (WHERE,RESULT,SEARCH_TABLE,

  17130  2 007072   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 007073   200054 470510                    LDP0    NUM_TO_POP_STACK+4,X0,AUTO
         2 007074   000100 101500                    MRL     fill='000'O
         2 007075   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 007076   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 007077   201250 221100                    LDX1    FPT_FID+70,,AUTO
         2 007100   200537 236100                    LDQ     TEMP2,,AUTO
         2 007101   200536 136100                    SBLQ    TEMP1,,AUTO
         2 007102   000001 622006                    EAX2    1,QL
         2 007103   200536 235100                    LDA     TEMP1,,AUTO
         2 007104   000000 164545                    TCT
         2 007105   000000 200012                    ADSC9   0,A,PR0                  cn=1,n=*X2
         2 007106   200642 000100                    ARG     SEARCH_TABLE,,AUTO
         2 007107   201042 000100                    ARG     WHERE,,AUTO
         2 007110   201042 236100                    LDQ     WHERE,,AUTO
         2 007111   000044 737000                    LLS     36
         2 007112   000033 771000                    ARL     27
         2 007113   201043 755100                    STA     RESULT,,AUTO
         2 007114   201042 551140                    STBA    WHERE,'40'O,AUTO

     2160    17131    3             SUBSTR(VAL_STACK$(VAL_PTR-3)->X$STRING.TEXT,TEMP1,TEMP2-TEMP1+1));
     2161    17132    3           IF RESULT = 0

  17132  2 007115   007123 601000 2                  TNZ     s:17136

     2162    17133    3           THEN                         /* Unsuccessful                       */
     2163    17134    3               VALUE = VAL_STACK$(VAL_PTR-3) -> X$STRING.SIZ;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:307  

  17134  2 007116   200054 470510                    LDP0    NUM_TO_POP_STACK+4,X0,AUTO
         2 007117   000100 101500                    MRL     fill='000'O
         2 007120   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 007121   200535 000004                    ADSC9   VALUE,,AUTO              cn=0,n=4
         2 007122   007126 710000 2                  TRA     s:17137

     2164    17135    3           ELSE                         /* RESULT points to first char        */
     2165    17136    3               VALUE = WHERE + TEMP1;

  17136  2 007123   201042 236100                    LDQ     WHERE,,AUTO
         2 007124   200536 036100                    ADLQ    TEMP1,,AUTO
         2 007125   200535 756100                    STQ     VALUE,,AUTO

     2166    17137    3           CALL STASH_VALUE (VALUE,VALUE$) ALTRET(E_REDUCE);

  17137  2 007126   200010 630500                    EPPR0   VALUE$,,AUTO
         2 007127   201046 450500                    STP0    @VALUE$,,AUTO
         2 007130   200535 631500                    EPPR1   VALUE,,AUTO
         2 007131   201045 451500                    STP1    @VAR_NAME$,,AUTO
         2 007132   002013 701000 2                  TSX1    STASH_VALUE
         2 007133   007402 702000 2                  TSX2    E_REDUCE
         2 007134   007235 710000 2                  TRA     s:17160

     2167    17138    3       CASE (%XUE_$VERSION#);

     2168    17139    3           FPT_MONINFO = CFPT_MONINFO;

  17139  2 007135   000100 100400                    MLR     fill='000'O
         2 007136   000166 000060 1                  ADSC9   CFPT_MONINFO             cn=0,n=48
         2 007137   200230 000060                    ADSC9   FPT_MONINFO,,AUTO        cn=0,n=48

     2169    17140    3           FPT_MONINFO.SITEINFO_ = VECTOR(VLR_SITEINFO);

  17140  2 007140   000036 235000 3                  LDA     30
         2 007141   201250 452500                    STP2    FPT_FID+70,,AUTO
         2 007142   201250 236100                    LDQ     FPT_FID+70,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:308  
         2 007143   000376 036003                    ADLQ    254,DU
         2 007144   200230 757100                    STAQ    FPT_MONINFO,,AUTO

     2170    17141    3           CALL M$MONINFO (FPT_MONINFO) ALTRET(E_PMME);

  17141  2 007145   200230 630500                    EPPR0   FPT_MONINFO,,AUTO
         2 007146   420023 713400                    CLIMB   alt,+8211
         2 007147   402400 401760                    pmme    nvectors=6
         2 007150   007404 702000 2                  TSX2    E_PMME

     2171    17142    3           MCB.SIZE = LENGTHC(VLR_SITEINFO.VERSION#) + 1; /* One for count        */

  17142  2 007151   000005 235007                    LDA     5,DL
         2 007152   200005 470500                    LDP0    @MCB,,AUTO
         2 007153   000006 755100                    STA     6,,PR0

     2172    17143    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17143  2 007154   200005 630500                    EPPR0   @MCB,,AUTO
         2 007155   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007156   000000 701000 xent               TSX1    X$ALLOCATE
         2 007157   007416 702000 2                  TSX2    E_ALLOCATE

     2173    17144    3           VALUE$ = MCB.ADDRESS$;

  17144  2 007160   200005 470500                    LDP0    @MCB,,AUTO
         2 007161   000000 236100                    LDQ     0,,PR0
         2 007162   200010 756100                    STQ     VALUE$,,AUTO

     2174    17145    3           VALUE$ -> X$STRING.SIZ = LENGTHC(VLR_SITEINFO.VERSION#);

  17145  2 007163   200010 471500                    LDP1    VALUE$,,AUTO
         2 007164   000100 101400                    MRL     fill='000'O
         2 007165   000006 000004 xsym               ADSC9   B_VECTNIL+6              cn=0,n=4
         2 007166   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2175    17146    3           VALUE$ -> X$STRING.TEXT = VLR_SITEINFO.VERSION#;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:309  

  17146  2 007167   200010 471500                    LDP1    VALUE$,,AUTO
         2 007170   000100 101500                    MRL     fill='000'O
         2 007171   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 007172   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 007173   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 007174   040140 100500                    MLR     fill='040'O
         2 007175   200462 000004                    ADSC9   VLR_SITEINFO+52,,AUTO    cn=0,n=4
         2 007176   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         2 007177   007235 710000 2                  TRA     s:17160

     2176    17147    3       CASE (%XUE_$WOO#);

     2177    17148    3           MCB.SIZE = LENGTHC(B$JIT.WOO)+1;

  17148  2 007200   000011 235007                    LDA     9,DL
         2 007201   000006 755100                    STA     6,,PR0

     2178    17149    3           CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17149  2 007202   200005 630500                    EPPR0   @MCB,,AUTO
         2 007203   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007204   000000 701000 xent               TSX1    X$ALLOCATE
         2 007205   007416 702000 2                  TSX2    E_ALLOCATE

     2179    17150    3           VALUE$ = MCB.ADDRESS$;

  17150  2 007206   200005 470500                    LDP0    @MCB,,AUTO
         2 007207   000000 236100                    LDQ     0,,PR0
         2 007210   200010 756100                    STQ     VALUE$,,AUTO

     2180    17151    3           VALUE$ -> X$STRING.SIZ = LENGTHC(B$JIT.WOO);

  17151  2 007211   200010 471500                    LDP1    VALUE$,,AUTO
         2 007212   000100 101400                    MRL     fill='000'O
         2 007213   000012 000004 xsym               ADSC9   B_VECTNIL+10             cn=0,n=4
         2 007214   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:310  

     2181    17152    3           VALUE$ -> X$STRING.TEXT = B$JIT.WOO;

  17152  2 007215   200010 471500                    LDP1    VALUE$,,AUTO
         2 007216   000100 101500                    MRL     fill='000'O
         2 007217   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 007220   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 007221   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 007222   000000 473400 xsym               LDP3    B$JIT$
         2 007223   040140 100500                    MLR     fill='040'O
         2 007224   300010 000010                    ADSC9   8,,PR3                   cn=0,n=8
         2 007225   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0

     2182    17153    3           CALL X$STRIP_BLANKS (VALUE$);

  17153  2 007226   200010 631500                    EPPR1   VALUE$,,AUTO
         2 007227   201250 451500                    STP1    FPT_FID+70,,AUTO
         2 007230   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 007231   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007232   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 007233   000000 011000                    NOP     0
         2 007234   007235 710000 2                  TRA     s:17160

     2183    17154    3       CASE (ELSE);

     2184    17155    3       END APPLY_CASE; /* Do case ... end */

     2185    17156        /*
     2186    17157             ***** REDUCE the value stack...
     2187    17158                   Deallocate the string space, and decrement VAL_PTR ...
     2188    17159        */
     2189    17160    3       DO K = 1 TO NUM_TO_POP_STACK(OP_PTR);

  17160  2 007235   000001 235007                    LDA     1,DL
         2 007236   200540 755100                    STA     K,,AUTO
         2 007237   007253 710000 2                  TRA     s:17164+1

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:311  
     2190    17161    3           MCB.ADDRESS$ = VAL_STACK$(VAL_PTR);

  17161  2 007240   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 007241   200057 236110                    LDQ     VAL_STACK$,X0,AUTO
         2 007242   200005 470500                    LDP0    @MCB,,AUTO
         2 007243   000000 756100                    STQ     0,,PR0

     2191    17162    3           CALL X$DEALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17162  2 007244   200005 630500                    EPPR0   @MCB,,AUTO
         2 007245   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007246   000000 701000 xent               TSX1    X$DEALLOCATE
         2 007247   007416 702000 2                  TSX2    E_ALLOCATE

     2192    17163    3           VAL_PTR = VAL_PTR - 1;

  17163  2 007250   000001 336007                    LCQ     1,DL
         2 007251   200022 056100                    ASQ     VAL_PTR,,AUTO

     2193    17164    3       END; /* Do index ... end */

  17164  2 007252   200540 054100                    AOS     K,,AUTO
         2 007253   200021 235100                    LDA     OP_PTR,,AUTO
         2 007254   000100 101505                    MRL     fill='000'O
         2 007255   200050 000001                    ADSC9   NUM_TO_POP_STACK,A,AUTO  cn=0,n=1
         2 007256   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 007257   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 007260   200540 116100                    CMPQ    K,,AUTO
         2 007261   007240 605000 2                  TPL     s:17161

     2194    17165        /*
     2195    17166             ***** Push the RESULT of this REDUCTION
     2196    17167                   onto the VALUE STACK (VAL_STACK$) ...
     2197    17168        */
     2198    17169          %PUSH_VALUE (VALUE=VALUE$,TYPE=%XUE_UNKNOWN#);

  17170  2 007262   200022 054100                    AOS     VAL_PTR,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:312  

  17171  2 007263   200022 236100                    LDQ     VAL_PTR,,AUTO
         2 007264   000031 116007                    CMPQ    25,DL
         2 007265   007275 604400 2                  TMOZ    s:17180

  17174  2 007266   000424 236000 1                  LDQ     E_STKOVFL
         2 007267   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 007270   000011 756100                    STQ     9,,PR0

  17175  2 007271   200020 720100                    LXL0    CHARPOS,,AUTO
         2 007272   000010 740100                    STX0    8,,PR0

  17176  2 007273   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007274   000000 702211                    TSX2  ! 0,X1

  17180  2 007275   200010 236100                    LDQ     VALUE$,,AUTO
         2 007276   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 007277   200057 756110                    STQ     VAL_STACK$,X0,AUTO

  17181  2 007300   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007301   000105 101400                    MRL     fill='000'O
         2 007302   000002 000004 3                  ADSC9   2                        cn=0,n=4
         2 007303   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1

  17182  2 007304   000001 735000                    ALS     1
         2 007305   000105 101500                    MRL     fill='000'O
         2 007306   200020 000004                    ADSC9   CHARPOS,,AUTO            cn=0,n=4
         2 007307   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2

     2199    17185        /*
     2200    17186             ***** Remove the REDUCEd operator from
     2201    17187                   the OPERATOR STACK (OP_STK) ...
     2202    17188        */
     2203    17189    2       OP_PTR = OP_PTR - 1;

  17189  2 007310   000001 336007                    LCQ     1,DL
         2 007311   200021 056100                    ASQ     OP_PTR,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:313  

     2204    17190    2       RETURN;

  17190  2 007312   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007313   000001 702211                    TSX2  ! 1,X1

  17189  2 007314                       E_RELFPARAM  null
     2205    17191        /**/
     2206    17192    2   E_RELFPARAM: ;
     2207    17193    2       MCB.ADDRESS$ = VBASE(FPARAM_VECTOR) ;

  17193  2 007314   200015 236100                    LDQ     FPARAM_VECTOR+1,,AUTO
         2 007315   200005 470500                    LDP0    @MCB,,AUTO
         2 007316   000000 756100                    STQ     0,,PR0

     2208    17194    2       CALL X$DEALLOCATE(MCB) ALTRET(E_ALLOCATE);

  17194  2 007317   200005 630500                    EPPR0   @MCB,,AUTO
         2 007320   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007321   000000 701000 xent               TSX1    X$DEALLOCATE
         2 007322   007416 702000 2                  TSX2    E_ALLOCATE

     2209    17195    2       ALTRETURN;

  17195  2 007323   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007324   000000 702211                    TSX2  ! 0,X1

  17193  2 007325                       E_NONESUCH   null
     2210    17196        /**/
     2211    17197    2   E_NONESUCH: ;                           /* No such file exists                */
     2212    17198    2       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;

  17198  2 007325   000000 470400 xsym               LDP0    B$TCB$
         2 007326   000000 471500                    LDP1    0,,PR0
         2 007327   100102 236100                    LDQ     66,,PR1
         2 007330   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 007331   300011 756100                    STQ     9,,PR3
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:314  

     2213    17199    2       XUE_ECB.ERR_DCB# = B$TCB.ALT$ -> B$ALT.DCB#;

  17199  2 007332   000000 471500                    LDP1    0,,PR0
         2 007333   100101 720100                    LXL0    65,,PR1
         2 007334   300010 440100                    SXL0    8,,PR3

     2214    17200    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  17200  2 007335   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007336   000001 735000                    ALS     1
         2 007337   000100 100505                    MLR     fill='000'O
         2 007340   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 007341   300010 000002                    ADSC9   8,,PR3                   cn=0,n=2

     2215    17201    2       IF FPARAM_VECTOR ~= VECTOR(NIL) THEN

  17201  2 007342   200014 237100                    LDAQ    FPARAM_VECTOR,,AUTO
         2 007343   000016 117000 3                  CMPAQ   14
         2 007344   007354 600000 2                  TZE     s:17206

     2216    17202    3       DO;

     2217    17203    3           MCB.ADDRESS$ = VBASE(FPARAM_VECTOR) ;

  17203  2 007345   200015 236100                    LDQ     FPARAM_VECTOR+1,,AUTO
         2 007346   200005 471500                    LDP1    @MCB,,AUTO
         2 007347   100000 756100                    STQ     0,,PR1

     2218    17204    3           CALL X$DEALLOCATE(MCB) ALTRET(E_ALLOCATE);

  17204  2 007350   200005 630500                    EPPR0   @MCB,,AUTO
         2 007351   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007352   000000 701000 xent               TSX1    X$DEALLOCATE
         2 007353   007416 702000 2                  TSX2    E_ALLOCATE

     2219    17205    3       END;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:315  

     2220    17206    2       ALTRETURN;

  17206  2 007354   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007355   000000 702211                    TSX2  ! 0,X1

  17201  2 007356                       E_BADNUMARGS null
     2221    17207        /**/
     2222    17208    2   E_BADNUMARGS: ;                         /* Bad number of arguments            */
     2223    17209    2       XUE_ECB.ERR = E_ILLNUMARGS;

  17209  2 007356   000442 236000 1                  LDQ     E_ILLNUMARGS
         2 007357   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 007360   100011 756100                    STQ     9,,PR1

     2224    17210    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  17210  2 007361   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007362   000001 735000                    ALS     1
         2 007363   000100 100505                    MLR     fill='000'O
         2 007364   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 007365   100010 000002                    ADSC9   8,,PR1                   cn=0,n=2

     2225    17211    2       ALTRETURN;

  17211  2 007366   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007367   000000 702211                    TSX2  ! 0,X1

  17210  2 007370                       E_BADMODE    null
     2226    17212        /**/
     2227    17213    2   E_BADMODE: ;                            /* Function not applicable this mode  */
     2228    17214    2       XUE_ECB.ERR = E_BADMODE;

  17214  2 007370   000443 236000 1                  LDQ     E_BADMODE
         2 007371   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 007372   300011 756100                    STQ     9,,PR3

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:316  
     2229    17215    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  17215  2 007373   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007374   000001 735000                    ALS     1
         2 007375   000100 100505                    MLR     fill='000'O
         2 007376   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 007377   300010 000002                    ADSC9   8,,PR3                   cn=0,n=2

     2230    17216    2       ALTRETURN;

  17216  2 007400   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007401   000000 702211                    TSX2  ! 0,X1

     2231    17217        /**/
     2232    17218    2   E_REDUCE:
     2233    17219    2       ALTRETURN;

  17219  2 007402   200534 221300       E_REDUCE     LDX1  ! FID_RES+1,,AUTO
         2 007403   000000 702211                    TSX2  ! 0,X1

     2234    17220        /**/
     2235    17221    2   E_PMME:
     2236    17222    2       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;

  17222  2 007404   000000 470400 xsym  E_PMME       LDP0    B$TCB$
         2 007405   000000 471500                    LDP1    0,,PR0
         2 007406   100102 236100                    LDQ     66,,PR1
         2 007407   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 007410   300011 756100                    STQ     9,,PR3

     2237    17223    2       XUE_ECB.ERR_DCB# = B$TCB.ALT$ -> B$ALT.DCB#;

  17223  2 007411   000000 471500                    LDP1    0,,PR0
         2 007412   100101 720100                    LXL0    65,,PR1
         2 007413   300010 440100                    SXL0    8,,PR3

     2238    17224    2       ALTRETURN;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:317  

  17224  2 007414   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007415   000000 702211                    TSX2  ! 0,X1

     2239    17225        /**/
     2240    17226    2   E_ALLOCATE:
     2241    17227    2       XUE_ECB.ERR = MCB.ERR;

  17227  2 007416   200005 470500       E_ALLOCATE   LDP0    @MCB,,AUTO
         2 007417   000010 236100                    LDQ     8,,PR0
         2 007420   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 007421   100011 756100                    STQ     9,,PR1

     2242    17228    2       ALTRETURN;

  17228  2 007422   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007423   000000 702211                    TSX2  ! 0,X1

     2243    17229        /**/
     2244    17230    2   E_DEC:
     2245    17231    2       XUE_ECB.ERR = E_NONDECIMAL;

  17231  2 007424   000434 236000 1     E_DEC        LDQ     E_NONDECIMAL
         2 007425   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 007426   000011 756100                    STQ     9,,PR0

     2246    17232    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR);

  17232  2 007427   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007430   000001 735000                    ALS     1
         2 007431   000100 100505                    MLR     fill='000'O
         2 007432   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2
         2 007433   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     2247    17233    2       ALTRETURN;

  17233  2 007434   200534 221300                    LDX1  ! FID_RES+1,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:318  
         2 007435   000000 702211                    TSX2  ! 0,X1

     2248    17234        /**/
     2249    17235    2   E_DEC1:
     2250    17236    2       XUE_ECB.ERR = E_NONDECIMAL;

  17236  2 007436   000434 236000 1     E_DEC1       LDQ     E_NONDECIMAL
         2 007437   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 007440   000011 756100                    STQ     9,,PR0

     2251    17237    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR-1);

  17237  2 007441   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007442   000001 735000                    ALS     1
         2 007443   000100 100505                    MLR     fill='000'O
         2 007444   200156 400002                    ADSC9   VAL_TYPE+12,A,AUTO       cn=2,n=2
         2 007445   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     2252    17238    2       ALTRETURN;

  17238  2 007446   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007447   000000 702211                    TSX2  ! 0,X1

     2253    17239        /**/
     2254    17240    2   E_OVERFLOW:
     2255    17241    2       XUE_ECB.ERR = E_OFLOWFLT;

  17241  2 007450   000433 236000 1     E_OVERFLOW   LDQ     E_OFLOWFLT
         2 007451   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 007452   000011 756100                    STQ     9,,PR0

     2256    17242    2       XUE_ECB.ERR_POS# = CHARPOS_STACK(VAL_PTR-1);

  17242  2 007453   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007454   000001 735000                    ALS     1
         2 007455   000100 100505                    MLR     fill='000'O
         2 007456   200156 400002                    ADSC9   VAL_TYPE+12,A,AUTO       cn=2,n=2
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:319  
         2 007457   000010 000002                    ADSC9   8,,PR0                   cn=0,n=2

     2257    17243    2       ALTRETURN;

  17243  2 007460   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007461   000000 702211                    TSX2  ! 0,X1

     2258    17244    2   END REDUCE;
     2259    17245        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:320  
     2260    17246    1   PROCESS_USER_FUNCTIONS: PROC (PTR$) ALTRET;

  17246  2 007462   200534 741300       PROCESS_USE* STX1  ! FID_RES+1,,AUTO

     2261    17247        /*F*    NAME:          PROCESS_USER_FUNCTIONS
     2262    17248                PURPOSE:       Interfaces XUE$EVAL with user supplied routines.
     2263    17249                DESCRIPTION:   This routine creates the parameter
     2264    17250                               (XUE$FUNPARAM) specified by the user syntax
     2265    17251                               and calls the user supplied routine to
     2266    17252                               handle USER DEFINED FUNCTIONS.
     2267    17253        */
     2268    17254        /***** Parameters *****/
     2269    17255    2   DCL PTR$ PTR;
     2270    17256        /***** Local variables *****/
     2271    17257    2   DCL INDX SBIN WORD AUTO;
     2272    17258    2   DCL NARGS SBIN WORD AUTO;
     2273    17259    2   DCL PARAM$ PTR AUTO;
     2274    17260    2   DCL P$ PTR AUTO;
     2275    17261    2   DCL OPTION$ PTR AUTO;
     2276    17262    2   DCL TEMP_ADDR$ PTR AUTO;
     2277    17263        /***** Based Structures *****/
     2278    17264          %XUE_FUNPARAM (NAME=XUE$FUNPARAM,STCLASS=BASED);
     2279    17368          %XUE_OPTION (NAME=XUE$OPTION,STCLASS=BASED);
     2280    17424
     2281    17425        /*
     2282    17426             ***** Make sure that user supplied FUN$$ routine ...
     2283    17427        */
     2284    17428    2       IF XUE_ECB.FUN$$ = ENTADDR(NIL)

  17428  2 007463   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 007464   000005 236100                    LDQ     5,,PR0
         2 007465   000002 116000 xsym               CMPQ    B_VECTNIL+2
         2 007466   007473 601000 2                  TNZ     s:17437

     2285    17429    2       THEN   /* Wrong! */
     2286    17430    3       DO;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:321  
     2287    17431    3           XUE_ECB.ERR = E_NULLFUN$$;

  17431  2 007467   000444 236000 1                  LDQ     E_NULLFUN$$
         2 007470   000011 756100                    STQ     9,,PR0

     2288    17432    3           ALTRETURN;

  17432  2 007471   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007472   000000 702211                    TSX2  ! 0,X1

     2289    17433    3       END;
     2290    17434        /*
     2291    17435             ***** Allocate space for XUE$FUNPARAM ...
     2292    17436        */
     2293    17437    2       NARGS = PTR$ -> P$B.NSUBLKS;

  17437  2 007473   200535 471500                    LDP1    @PTR$,,AUTO
         2 007474   100000 473500                    LDP3    0,,PR1
         2 007475   300001 236100                    LDQ     1,,PR3
         2 007476   000022 772000                    QRL     18
         2 007477   200537 756100                    STQ     NARGS,,AUTO

     2294    17438    2       MCB.SIZE = SIZEC(XUE$FUNPARAM) + ((NARGS-1)*4 /* Convert to bytes*/);

  17438  2 007500   200005 474500                    LDP4    @MCB,,AUTO
         2 007501   200537 235100                    LDA     NARGS,,AUTO
         2 007502   000002 735000                    ALS     2
         2 007503   000034 035007                    ADLA    28,DL
         2 007504   400006 755100                    STA     6,,PR4

     2295    17439    2       CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17439  2 007505   200005 630500                    EPPR0   @MCB,,AUTO
         2 007506   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007507   000000 701000 xent               TSX1    X$ALLOCATE
         2 007510   010022 702000 2                  TSX2    E_ALLOCATE

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:322  
     2296    17440    2       PARAM$ = MCB.ADDRESS$;

  17440  2 007511   200005 470500                    LDP0    @MCB,,AUTO
         2 007512   000000 236100                    LDQ     0,,PR0
         2 007513   200540 756100                    STQ     PARAM$,,AUTO

     2297    17441    2       PARAM$ -> XUE$FUNPARAM.CODE# = PTR$ -> P$B.CODE;

  17441  2 007514   200535 471500                    LDP1    @PTR$,,AUTO
         2 007515   100000 473500                    LDP3    0,,PR1
         2 007516   300000 236100                    LDQ     0,,PR3
         2 007517   777777 376007                    ANQ     -1,DL
         2 007520   200540 474500                    LDP4    PARAM$,,AUTO
         2 007521   400000 756100                    STQ     0,,PR4

     2298    17442    2       PARAM$ -> XUE$FUNPARAM.CPOS# = PTR$ -> P$B.CPOS;

  17442  2 007522   100000 473500                    LDP3    0,,PR1
         2 007523   300002 235100                    LDA     2,,PR3
         2 007524   400001 755100                    STA     1,,PR4

     2299    17443    2       PARAM$ -> XUE$FUNPARAM.ERR_POS# = 0;

  17443  2 007525   000000 220003                    LDX0    0,DU
         2 007526   400002 740100                    STX0    2,,PR4

     2300    17444    2       PARAM$ -> XUE$FUNPARAM.ERR_DCB# = 0;

  17444  2 007527   400002 440100                    SXL0    2,,PR4

     2301    17445    2       PARAM$ -> XUE$FUNPARAM.ERR = '0'B;

  17445  2 007530   400003 450100                    STZ     3,,PR4

     2302    17446    2       PARAM$ -> XUE$FUNPARAM.NOPTS# = NARGS;

  17446  2 007531   200537 235100                    LDA     NARGS,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:323  
         2 007532   400006 755100                    STA     6,,PR4

     2303    17447        /*
     2304    17448             ***** Allocate 512 bytes for RESULT$ ...
     2305    17449        */
     2306    17450    2       MCB.SIZE = 512; /* 511 bytes TEXT + 1 byte COUNT */

  17450  2 007533   001000 235007                    LDA     512,DL
         2 007534   000006 755100                    STA     6,,PR0

     2307    17451    2       CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17451  2 007535   200005 630500                    EPPR0   @MCB,,AUTO
         2 007536   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007537   000000 701000 xent               TSX1    X$ALLOCATE
         2 007540   010022 702000 2                  TSX2    E_ALLOCATE

     2308    17452    2       PARAM$ -> XUE$FUNPARAM.OUT$ = MCB.ADDRESS$;

  17452  2 007541   200005 470500                    LDP0    @MCB,,AUTO
         2 007542   000000 236100                    LDQ     0,,PR0
         2 007543   200540 471500                    LDP1    PARAM$,,AUTO
         2 007544   100004 756100                    STQ     4,,PR1

     2309    17453    2       MCB.ADDRESS$ -> X$STRING.SIZ = 511;

  17453  2 007545   000000 473500                    LDP3    0,,PR0
         2 007546   000100 101400                    MRL     fill='000'O
         2 007547   000043 000004 3                  ADSC9   35                       cn=0,n=4
         2 007550   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

     2310    17454    2       MCB.ADDRESS$ -> X$STRING.TEXT = ' ';

  17454  2 007551   000000 473500                    LDP3    0,,PR0
         2 007552   000100 101500                    MRL     fill='000'O
         2 007553   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 007554   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:324  
         2 007555   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 007556   040140 100400                    MLR     fill='040'O
         2 007557   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 007560   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0

     2311    17455        /*
     2312    17456             ***** Process the parameters for this USER DEFINED FUNCTION ...
     2313    17457        */
     2314    17458    3       DO INDX = 0 TO NARGS - 1;

  17458  2 007561   200536 450100                    STZ     INDX,,AUTO
         2 007562   007712 710000 2                  TRA     s:17499+1

     2315    17459    3           P$ = PTR$ -> P$B.SUBLK$(INDX);

  17459  2 007563   200535 470500                    LDP0    @PTR$,,AUTO
         2 007564   000000 471500                    LDP1    0,,PR0
         2 007565   200536 720100                    LXL0    INDX,,AUTO
         2 007566   100003 236110                    LDQ     3,X0,PR1
         2 007567   200541 756100                    STQ     P$,,AUTO

     2316    17460        /*
     2317    17461             ***** Evaluate XUE_VALUE or XUE_PARAMETER, if any ...
     2318    17462        */
     2319    17463    3           IF P$ -> P$B.NSUBLKS > 0

  17463  2 007570   200541 471500                    LDP1    P$,,AUTO
         2 007571   100001 221100                    LDX1    1,,PR1
         2 007572   007661 600000 2                  TZE     s:17489

     2320    17464    4           THEN DO;

     2321    17465    4               CALL X$EVALUATE (P$,XUE_ECB,MCB) ALTRET(E_PROCESS);

  17465  2 007573   200005 236100                    LDQ     @MCB,,AUTO
         2 007574   201252 756100                    STQ     FPT_FID+72,,AUTO
         2 007575   200004 236100                    LDQ     @XUE_ECB,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:325  
         2 007576   201251 756100                    STQ     FPT_FID+71,,AUTO
         2 007577   200541 633500                    EPPR3   P$,,AUTO
         2 007600   201250 453500                    STP3    FPT_FID+70,,AUTO
         2 007601   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 007602   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 007603   000000 701000 2                  TSX1    s:15
         2 007604   010030 702000 2                  TSX2    E_PROCESS

     2322    17466        /*
     2323    17467             ***** Allocate an XUE_OPTION block ...
     2324    17468        */
     2325    17469    4               MCB.SIZE = 8 /*SIZEC(XUE$OPTION)*/ +

  17469  2 007605   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 007606   000004 471500                    LDP1    4,,PR0
         2 007607   000100 101500                    MRL     fill='000'O
         2 007610   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 007611   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 007612   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 007613   000011 036007                    ADLQ    9,DL
         2 007614   200005 471500                    LDP1    @MCB,,AUTO
         2 007615   100006 756100                    STQ     6,,PR1

     2326    17470    4                 (XUE_ECB.OUT$ -> X$STRING.SIZ + 1);
     2327    17471    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17471  2 007616   200005 630500                    EPPR0   @MCB,,AUTO
         2 007617   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007620   000000 701000 xent               TSX1    X$ALLOCATE
         2 007621   010022 702000 2                  TSX2    E_ALLOCATE

     2328    17472        /*
     2329    17473             ***** Move the value into the block ...
     2330    17474        */
     2331    17475    4               MCB.ADDRESS$ -> XUE$OPTION.COUNT# = XUE_ECB.OUT$ -> X$STRING.SIZ;

  17475  2 007622   200005 470500                    LDP0    @MCB,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:326  
         2 007623   000000 471500                    LDP1    0,,PR0
         2 007624   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 007625   300004 474500                    LDP4    4,,PR3
         2 007626   000100 100500                    MLR     fill='000'O
         2 007627   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 007630   100002 000001                    ADSC9   2,,PR1                   cn=0,n=1

     2332    17476    4               MCB.ADDRESS$ -> XUE$OPTION.TEXT# = XUE_ECB.OUT$ -> X$STRING.TEXT;

  17476  2 007631   000000 471500                    LDP1    0,,PR0
         2 007632   100002 236100                    LDQ     2,,PR1
         2 007633   000033 772000                    QRL     27
         2 007634   300004 474500                    LDP4    4,,PR3
         2 007635   000100 101500                    MRL     fill='000'O
         2 007636   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 007637   201250 000002                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=2
         2 007640   201250 220100                    LDX0    FPT_FID+70,,AUTO
         2 007641   000000 621006                    EAX1    0,QL
         2 007642   040140 100540                    MLR     fill='040'O
         2 007643   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0
         2 007644   100002 200011                    ADSC9   2,,PR1                   cn=1,n=*X1

     2333    17477        /*
     2334    17478             ***** Reclaim the RESULT$ area ...
     2335    17479        */
     2336    17480    4               TEMP_ADDR$ = MCB.ADDRESS$;

  17480  2 007645   000000 236100                    LDQ     0,,PR0
         2 007646   200543 756100                    STQ     TEMP_ADDR$,,AUTO

     2337    17481    4               MCB.ADDRESS$ = XUE_ECB.OUT$;

  17481  2 007647   300004 236100                    LDQ     4,,PR3
         2 007650   000000 756100                    STQ     0,,PR0

     2338    17482    4               CALL X$DEALLOCATE (MCB) ALTRET(E_ALLOCATE);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:327  
  17482  2 007651   200005 630500                    EPPR0   @MCB,,AUTO
         2 007652   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007653   000000 701000 xent               TSX1    X$DEALLOCATE
         2 007654   010022 702000 2                  TSX2    E_ALLOCATE

     2339    17483    4               MCB.ADDRESS$ = TEMP_ADDR$;

  17483  2 007655   200543 236100                    LDQ     TEMP_ADDR$,,AUTO
         2 007656   200005 470500                    LDP0    @MCB,,AUTO
         2 007657   000000 756100                    STQ     0,,PR0

     2340    17484    4           END;

  17484  2 007660   007674 710000 2                  TRA     s:17496

     2341    17485        /*
     2342    17486             ***** Otherwise set up valueless XUE$OPTION block ...
     2343    17487        */
     2344    17488    4           ELSE DO;

     2345    17489    4               MCB.SIZE = 8;

  17489  2 007661   000010 235007                    LDA     8,DL
         2 007662   200005 473500                    LDP3    @MCB,,AUTO
         2 007663   300006 755100                    STA     6,,PR3

     2346    17490    4               CALL X$ALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17490  2 007664   200005 630500                    EPPR0   @MCB,,AUTO
         2 007665   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007666   000000 701000 xent               TSX1    X$ALLOCATE
         2 007667   010022 702000 2                  TSX2    E_ALLOCATE

     2347    17491    4               MCB.ADDRESS$ -> XUE$OPTION.COUNT# = 0;

  17491  2 007670   200005 470500                    LDP0    @MCB,,AUTO
         2 007671   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:328  
         2 007672   000000 236003                    LDQ     0,DU
         2 007673   100002 552140                    STBQ    2,'40'O,PR1

     2348    17492    4           END;

     2349    17493        /*
     2350    17494             ***** Fill in common XUE_OPTION fields .....
     2351    17495        */
     2352    17496    3           MCB.ADDRESS$ -> XUE$OPTION.CODE# = P$ -> P$B.CODE;

  17496  2 007674   000000 471500                    LDP1    0,,PR0
         2 007675   200541 473500                    LDP3    P$,,AUTO
         2 007676   300000 236100                    LDQ     0,,PR3
         2 007677   777777 376007                    ANQ     -1,DL
         2 007700   100000 756100                    STQ     0,,PR1

     2353    17497    3           MCB.ADDRESS$ -> XUE$OPTION.CPOS# = P$ -> P$S.CPOS;

  17497  2 007701   000000 471500                    LDP1    0,,PR0
         2 007702   200541 473500                    LDP3    P$,,AUTO
         2 007703   300002 235100                    LDA     2,,PR3
         2 007704   100001 755100                    STA     1,,PR1

     2354    17498    3           PARAM$ -> XUE$FUNPARAM.OPTION$(INDX) = MCB.ADDRESS$;

  17498  2 007705   000000 236100                    LDQ     0,,PR0
         2 007706   200540 471500                    LDP1    PARAM$,,AUTO
         2 007707   200536 720100                    LXL0    INDX,,AUTO
         2 007710   100007 756110                    STQ     7,X0,PR1

     2355    17499    3       END; /* Do index ... end */

  17499  2 007711   200536 054100                    AOS     INDX,,AUTO
         2 007712   200536 236100                    LDQ     INDX,,AUTO
         2 007713   200537 116100                    CMPQ    NARGS,,AUTO
         2 007714   007563 604000 2                  TMI     s:17459

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:329  
     2356    17500    2       CALL XUE_ECB.FUN$$ (PARAM$ -> XUE$FUNPARAM) ALTRET(E_FUN$$);

  17500  2 007715   200540 630500                    EPPR0   PARAM$,,AUTO
         2 007716   200004 473500                    LDP3    @XUE_ECB,,AUTO
         2 007717   300005 220100                    LDX0    5,,PR3
         2 007720   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007721   000000 701010                    TSX1    0,X0
         2 007722   010010 702000 2                  TSX2    E_FUN$$

     2357    17501        /*
     2358    17502             ***** Push the value of the function onto VAL_STACK$ ...
     2359    17503        */
     2360    17504    2       CALL X$STRIP_BLANKS (PARAM$ -> XUE$FUNPARAM.OUT$);

  17504  2 007723   200540 236100                    LDQ     PARAM$,,AUTO
         2 007724   000004 036003                    ADLQ    4,DU
         2 007725   201250 756100                    STQ     FPT_FID+70,,AUTO
         2 007726   201250 630500                    EPPR0   FPT_FID+70,,AUTO
         2 007727   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007730   000000 701000 xent               TSX1    X$STRIP_BLANKS
         2 007731   000000 011000                    NOP     0

     2361    17505          %PUSH_VALUE (VALUE="PARAM$ -> XUE$FUNPARAM.OUT$",TYPE=%XUE_UNKNOWN#);

  17506  2 007732   200022 054100                    AOS     VAL_PTR,,AUTO

  17507  2 007733   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007734   000031 115007                    CMPA    25,DL
         2 007735   007745 604400 2                  TMOZ    s:17516

  17510  2 007736   000424 236000 1                  LDQ     E_STKOVFL
         2 007737   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 007740   000011 756100                    STQ     9,,PR0

  17511  2 007741   200020 720100                    LXL0    CHARPOS,,AUTO
         2 007742   000010 740100                    STX0    8,,PR0

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:330  
  17512  2 007743   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 007744   000000 702211                    TSX2  ! 0,X1

  17516  2 007745   200540 470500                    LDP0    PARAM$,,AUTO
         2 007746   000004 236100                    LDQ     4,,PR0
         2 007747   200057 756105                    STQ     VAL_STACK$,AL,AUTO

  17517  2 007750   200022 235100                    LDA     VAL_PTR,,AUTO
         2 007751   000105 101400                    MRL     fill='000'O
         2 007752   000002 000004 3                  ADSC9   2                        cn=0,n=4
         2 007753   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1

  17518  2 007754   000001 735000                    ALS     1
         2 007755   000105 101500                    MRL     fill='000'O
         2 007756   200020 000004                    ADSC9   CHARPOS,,AUTO            cn=0,n=4
         2 007757   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2

     2362    17521        /*
     2363    17522             ***** Deallocate XUE$FUNPARAM and associated XUE$OPTIONs ...
     2364    17523        */
     2365    17524    3       DO INDX = 0 TO NARGS - 1;

  17524  2 007760   200536 450100                    STZ     INDX,,AUTO
         2 007761   007774 710000 2                  TRA     s:17527+1

     2366    17525    3           MCB.ADDRESS$ = PARAM$ -> XUE$FUNPARAM.OPTION$(INDX);

  17525  2 007762   200540 470500                    LDP0    PARAM$,,AUTO
         2 007763   200536 720100                    LXL0    INDX,,AUTO
         2 007764   000007 236110                    LDQ     7,X0,PR0
         2 007765   200005 471500                    LDP1    @MCB,,AUTO
         2 007766   100000 756100                    STQ     0,,PR1

     2367    17526    3           CALL X$DEALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17526  2 007767   200005 630500                    EPPR0   @MCB,,AUTO
         2 007770   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:331  
         2 007771   000000 701000 xent               TSX1    X$DEALLOCATE
         2 007772   010022 702000 2                  TSX2    E_ALLOCATE

     2368    17527    3       END; /* Do index ... end */

  17527  2 007773   200536 054100                    AOS     INDX,,AUTO
         2 007774   200536 236100                    LDQ     INDX,,AUTO
         2 007775   200537 116100                    CMPQ    NARGS,,AUTO
         2 007776   007762 604000 2                  TMI     s:17525

     2369    17528    2       MCB.ADDRESS$ = PARAM$;

  17528  2 007777   200540 236100                    LDQ     PARAM$,,AUTO
         2 010000   200005 470500                    LDP0    @MCB,,AUTO
         2 010001   000000 756100                    STQ     0,,PR0

     2370    17529    2       CALL X$DEALLOCATE (MCB) ALTRET(E_ALLOCATE);

  17529  2 010002   200005 630500                    EPPR0   @MCB,,AUTO
         2 010003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 010004   000000 701000 xent               TSX1    X$DEALLOCATE
         2 010005   010022 702000 2                  TSX2    E_ALLOCATE

     2371    17530    2       RETURN;

  17530  2 010006   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 010007   000001 702211                    TSX2  ! 1,X1

     2372    17531        /**/
     2373    17532    2   E_FUN$$:
     2374    17533    2       XUE_ECB.ERR = PARAM$ -> XUE$FUNPARAM.ERR;

  17533  2 010010   200540 470500       E_FUN$$      LDP0    PARAM$,,AUTO
         2 010011   000003 236100                    LDQ     3,,PR0
         2 010012   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 010013   100011 756100                    STQ     9,,PR1

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:332  
     2375    17534    2       XUE_ECB.ERR_POS# = PARAM$ -> XUE$FUNPARAM.ERR_POS#;

  17534  2 010014   000002 220100                    LDX0    2,,PR0
         2 010015   100010 740100                    STX0    8,,PR1

     2376    17535    2       XUE_ECB.ERR_DCB# = PARAM$ -> XUE$FUNPARAM.ERR_DCB#;

  17535  2 010016   000002 721100                    LXL1    2,,PR0
         2 010017   100010 441100                    SXL1    8,,PR1

     2377    17536    2       ALTRETURN;

  17536  2 010020   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 010021   000000 702211                    TSX2  ! 0,X1

     2378    17537        /**/
     2379    17538    2   E_ALLOCATE:
     2380    17539    2       XUE_ECB.ERR = MCB.ERR;

  17539  2 010022   200005 470500       E_ALLOCATE   LDP0    @MCB,,AUTO
         2 010023   000010 236100                    LDQ     8,,PR0
         2 010024   200004 471500                    LDP1    @XUE_ECB,,AUTO
         2 010025   100011 756100                    STQ     9,,PR1

     2381    17540    2       ALTRETURN;

  17540  2 010026   200534 221300                    LDX1  ! FID_RES+1,,AUTO
         2 010027   000000 702211                    TSX2  ! 0,X1

     2382    17541        /**/
     2383    17542    2   E_PROCESS:
     2384    17543    2       ALTRETURN;

  17543  2 010030   200534 221300       E_PROCESS    LDX1  ! FID_RES+1,,AUTO
         2 010031   000000 702211                    TSX2  ! 0,X1

     2385    17544    2   END PROCESS_USER_FUNCTIONS;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:333  
     2386    17545        %EJECT;
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:334  
     2387    17546        /*
     2388    17547             ***** Main routine for evaluating expressions.
     2389    17548                   Handles stacking/reduction decisions and
     2390    17549                   calls such routines as needed to perform
     2391    17550                   REDUCTION and LEXICAL ANALYSIS.
     2392    17551                   This routine is called recursively...
     2393    17552        */
     2394    17553    1       XUE_ECB.RESULTS = %NO#;

  17553  2 010032   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 010033   000017 450100                    STZ     15,,PR0

     2395    17554    1       OP_PTR = 0;

  17554  2 010034   200021 450100                    STZ     OP_PTR,,AUTO

     2396    17555    1       VAL_PTR = -1;

  17555  2 010035   000001 335007                    LCA     1,DL
         2 010036   200022 755100                    STA     VAL_PTR,,AUTO

     2397    17556    1       OP_STACK(0) = %XUE_BEGIN_MARKER#;

  17556  2 010037   000000 236003                    LDQ     0,DU
         2 010040   200041 552140                    STBQ    OP_STACK,'40'O,AUTO

     2398    17557    1       TOKEN_INDX = -1;

  17557  2 010041   200024 755100                    STA     TOKEN_INDX,,AUTO

     2399    17558        /*
     2400    17559             ***** Get the first TOKEN to start processing ...
     2401    17560        */
     2402    17561    1       CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);

  17561  2 010042   200010 631500                    EPPR1   VALUE$,,AUTO
         2 010043   200536 451500                    STP1    @PTR$+1,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:335  
         2 010044   200025 633500                    EPPR3   TOKEN,,AUTO
         2 010045   200535 453500                    STP3    FID_RES+2,,AUTO
         2 010046   000111 701000 2                  TSX1    LEX
         2 010047   010500 702000 2                  TSX2    E_EVAL

     2403    17562        /*
     2404    17563             ***** MAIN LOOP...
     2405    17564                   Loop here while there are operators to process...
     2406    17565        */
     2407    17566    2       DO WHILE (%YES#);

     2408    17567    3           DO CASE (TOKEN);

  17567  2 010050   200025 235100                    LDA     TOKEN,,AUTO
         2 010051   000176 115007                    CMPA    126,DL
         2 010052   010054 602005 2                  TNC     s:17567+4,AL
         2 010053   010426 710000 2                  TRA     s:17664
         2 010054   010426 710000 2                  TRA     s:17664
         2 010055   010306 710000 2                  TRA     s:17591
         2 010056   010325 710000 2                  TRA     s:17623
         2 010057   010325 710000 2                  TRA     s:17623
         2 010060   010325 710000 2                  TRA     s:17623
         2 010061   010325 710000 2                  TRA     s:17623
         2 010062   010325 710000 2                  TRA     s:17623
         2 010063   010325 710000 2                  TRA     s:17623
         2 010064   010325 710000 2                  TRA     s:17623
         2 010065   010325 710000 2                  TRA     s:17623
         2 010066   010325 710000 2                  TRA     s:17623
         2 010067   010325 710000 2                  TRA     s:17623
         2 010070   010325 710000 2                  TRA     s:17623
         2 010071   010325 710000 2                  TRA     s:17623
         2 010072   010325 710000 2                  TRA     s:17623
         2 010073   010325 710000 2                  TRA     s:17623
         2 010074   010325 710000 2                  TRA     s:17623
         2 010075   010325 710000 2                  TRA     s:17623
         2 010076   010325 710000 2                  TRA     s:17623
         2 010077   010325 710000 2                  TRA     s:17623
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:336  
         2 010100   010325 710000 2                  TRA     s:17623
         2 010101   010325 710000 2                  TRA     s:17623
         2 010102   010325 710000 2                  TRA     s:17623
         2 010103   010325 710000 2                  TRA     s:17623
         2 010104   010325 710000 2                  TRA     s:17623
         2 010105   010426 710000 2                  TRA     s:17664
         2 010106   010426 710000 2                  TRA     s:17664
         2 010107   010426 710000 2                  TRA     s:17664
         2 010110   010426 710000 2                  TRA     s:17664
         2 010111   010426 710000 2                  TRA     s:17664
         2 010112   010426 710000 2                  TRA     s:17664
         2 010113   010426 710000 2                  TRA     s:17664
         2 010114   010426 710000 2                  TRA     s:17664
         2 010115   010426 710000 2                  TRA     s:17664
         2 010116   010426 710000 2                  TRA     s:17664
         2 010117   010426 710000 2                  TRA     s:17664
         2 010120   010426 710000 2                  TRA     s:17664
         2 010121   010426 710000 2                  TRA     s:17664
         2 010122   010426 710000 2                  TRA     s:17664
         2 010123   010426 710000 2                  TRA     s:17664
         2 010124   010426 710000 2                  TRA     s:17664
         2 010125   010426 710000 2                  TRA     s:17664
         2 010126   010426 710000 2                  TRA     s:17664
         2 010127   010426 710000 2                  TRA     s:17664
         2 010130   010426 710000 2                  TRA     s:17664
         2 010131   010426 710000 2                  TRA     s:17664
         2 010132   010426 710000 2                  TRA     s:17664
         2 010133   010426 710000 2                  TRA     s:17664
         2 010134   010426 710000 2                  TRA     s:17664
         2 010135   010426 710000 2                  TRA     s:17664
         2 010136   010426 710000 2                  TRA     s:17664
         2 010137   010426 710000 2                  TRA     s:17664
         2 010140   010426 710000 2                  TRA     s:17664
         2 010141   010426 710000 2                  TRA     s:17664
         2 010142   010426 710000 2                  TRA     s:17664
         2 010143   010426 710000 2                  TRA     s:17664
         2 010144   010426 710000 2                  TRA     s:17664
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:337  
         2 010145   010426 710000 2                  TRA     s:17664
         2 010146   010426 710000 2                  TRA     s:17664
         2 010147   010426 710000 2                  TRA     s:17664
         2 010150   010426 710000 2                  TRA     s:17664
         2 010151   010426 710000 2                  TRA     s:17664
         2 010152   010426 710000 2                  TRA     s:17664
         2 010153   010426 710000 2                  TRA     s:17664
         2 010154   010426 710000 2                  TRA     s:17664
         2 010155   010426 710000 2                  TRA     s:17664
         2 010156   010426 710000 2                  TRA     s:17664
         2 010157   010426 710000 2                  TRA     s:17664
         2 010160   010426 710000 2                  TRA     s:17664
         2 010161   010426 710000 2                  TRA     s:17664
         2 010162   010426 710000 2                  TRA     s:17664
         2 010163   010426 710000 2                  TRA     s:17664
         2 010164   010426 710000 2                  TRA     s:17664
         2 010165   010426 710000 2                  TRA     s:17664
         2 010166   010426 710000 2                  TRA     s:17664
         2 010167   010252 710000 2                  TRA     s:17573
         2 010170   010252 710000 2                  TRA     s:17573
         2 010171   010252 710000 2                  TRA     s:17573
         2 010172   010252 710000 2                  TRA     s:17573
         2 010173   010426 710000 2                  TRA     s:17664
         2 010174   010426 710000 2                  TRA     s:17664
         2 010175   010426 710000 2                  TRA     s:17664
         2 010176   010426 710000 2                  TRA     s:17664
         2 010177   010426 710000 2                  TRA     s:17664
         2 010200   010426 710000 2                  TRA     s:17664
         2 010201   010426 710000 2                  TRA     s:17664
         2 010202   010426 710000 2                  TRA     s:17664
         2 010203   010426 710000 2                  TRA     s:17664
         2 010204   010426 710000 2                  TRA     s:17664
         2 010205   010426 710000 2                  TRA     s:17664
         2 010206   010426 710000 2                  TRA     s:17664
         2 010207   010426 710000 2                  TRA     s:17664
         2 010210   010426 710000 2                  TRA     s:17664
         2 010211   010426 710000 2                  TRA     s:17664
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:338  
         2 010212   010426 710000 2                  TRA     s:17664
         2 010213   010426 710000 2                  TRA     s:17664
         2 010214   010426 710000 2                  TRA     s:17664
         2 010215   010426 710000 2                  TRA     s:17664
         2 010216   010426 710000 2                  TRA     s:17664
         2 010217   010426 710000 2                  TRA     s:17664
         2 010220   010426 710000 2                  TRA     s:17664
         2 010221   010426 710000 2                  TRA     s:17664
         2 010222   010426 710000 2                  TRA     s:17664
         2 010223   010426 710000 2                  TRA     s:17664
         2 010224   010426 710000 2                  TRA     s:17664
         2 010225   010426 710000 2                  TRA     s:17664
         2 010226   010426 710000 2                  TRA     s:17664
         2 010227   010426 710000 2                  TRA     s:17664
         2 010230   010426 710000 2                  TRA     s:17664
         2 010231   010426 710000 2                  TRA     s:17664
         2 010232   010426 710000 2                  TRA     s:17664
         2 010233   010426 710000 2                  TRA     s:17664
         2 010234   010426 710000 2                  TRA     s:17664
         2 010235   010426 710000 2                  TRA     s:17664
         2 010236   010426 710000 2                  TRA     s:17664
         2 010237   010426 710000 2                  TRA     s:17664
         2 010240   010426 710000 2                  TRA     s:17664
         2 010241   010426 710000 2                  TRA     s:17664
         2 010242   010426 710000 2                  TRA     s:17664
         2 010243   010426 710000 2                  TRA     s:17664
         2 010244   010426 710000 2                  TRA     s:17664
         2 010245   010426 710000 2                  TRA     s:17664
         2 010246   010426 710000 2                  TRA     s:17664
         2 010247   010426 710000 2                  TRA     s:17664
         2 010250   010426 710000 2                  TRA     s:17664
         2 010251   010412 710000 2                  TRA     s:17657

     2409    17568    3           CASE (%XUE_DECIMAL#,

     2410    17569    3             %XUE_EXP#,
     2411    17570    3             %XUE_QUOTE#,
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:339  
     2412    17571    3             %XUE_VAR#);
     2413    17572                   %PUSH_VALUE (TYPE=TOKEN);

  17573  2 010252   200022 054100                    AOS     VAL_PTR,,AUTO

  17574  2 010253   200022 236100                    LDQ     VAL_PTR,,AUTO
         2 010254   000031 116007                    CMPQ    25,DL
         2 010255   010264 604400 2                  TMOZ    s:17583

  17577  2 010256   000424 236000 1                  LDQ     E_STKOVFL
         2 010257   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 010260   000011 756100                    STQ     9,,PR0

  17578  2 010261   200020 720100                    LXL0    CHARPOS,,AUTO
         2 010262   000010 740100                    STX0    8,,PR0

  17579  2 010263   000000 702200 xent               TSX2  ! X66_AALT

  17583  2 010264   200010 236100                    LDQ     VALUE$,,AUTO
         2 010265   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 010266   200057 756110                    STQ     VAL_STACK$,X0,AUTO

  17584  2 010267   200022 235100                    LDA     VAL_PTR,,AUTO
         2 010270   000105 101500                    MRL     fill='000'O
         2 010271   200025 000004                    ADSC9   TOKEN,,AUTO              cn=0,n=4
         2 010272   200142 000001                    ADSC9   VAL_TYPE,A,AUTO          cn=0,n=1

  17585  2 010273   000001 735000                    ALS     1
         2 010274   000105 101500                    MRL     fill='000'O
         2 010275   200020 000004                    ADSC9   CHARPOS,,AUTO            cn=0,n=4
         2 010276   200157 000002                    ADSC9   CHARPOS_STACK,A,AUTO     cn=0,n=2

     2414    17588    3               CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);

  17588  2 010277   200010 630500                    EPPR0   VALUE$,,AUTO
         2 010300   200536 450500                    STP0    @PTR$+1,,AUTO
         2 010301   200025 631500                    EPPR1   TOKEN,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:340  
         2 010302   200535 451500                    STP1    FID_RES+2,,AUTO
         2 010303   000111 701000 2                  TSX1    LEX
         2 010304   010500 702000 2                  TSX2    E_EVAL
         2 010305   010050 710000 2                  TRA     s:17567

     2415    17589    3           CASE (%XUE_END_MARKER#);

     2416    17590    4               DO WHILE (%YES#);

     2417    17591    4                   IF OP_STACK(OP_PTR) = %XUE_BEGIN_MARKER#

  17591  2 010306   200021 235100                    LDA     OP_PTR,,AUTO
         2 010307   000100 101505                    MRL     fill='000'O
         2 010310   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 010311   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 010312   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 010313   000000 116003                    CMPQ    0,DU
         2 010314   010322 601000 2                  TNZ     s:17598

     2418    17592    4                   THEN
     2419    17593    5                   DO;

     2420    17594    5                       XUE_ECB.OUT$ = VAL_STACK$(VAL_PTR);

  17594  2 010315   200022 720100                    LXL0    VAL_PTR,,AUTO
         2 010316   200057 236110                    LDQ     VAL_STACK$,X0,AUTO
         2 010317   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 010320   000004 756100                    STQ     4,,PR0

     2421    17595    5                       RETURN;

  17595  2 010321   000000 702200 xent               TSX2  ! X66_ARET

     2422    17596    5                   END;
     2423    17597    4                   ELSE
     2424    17598    4                       CALL REDUCE ALTRET(E_EVAL);

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:341  
  17598  2 010322   000650 701000 2                  TSX1    REDUCE
         2 010323   010500 702000 2                  TSX2    E_EVAL

     2425    17599    4               END;                        /* Shrink stacks loop                 */

  17599  2 010324   010306 710000 2                  TRA     s:17591

     2426    17600    3           CASE (%XUE_PLUS#,

     2427    17601    3                 %XUE_MINUS#,
     2428    17602    3                 %XUE_MULTIPLY#,
     2429    17603    3                 %XUE_DIVIDE#,
     2430    17604    3                 %XUE_CONCAT#,
     2431    17605    3                 %XUE_EQUAL#,
     2432    17606    3                 %XUE_NEQUAL#,
     2433    17607    3                 %XUE_GTHAN#,
     2434    17608    3                 %XUE_GEQUAL#,
     2435    17609    3                 %XUE_LTHAN#,
     2436    17610    3                 %XUE_LEQUAL#,
     2437    17611    3                 %XUE_AND#,
     2438    17612    3                 %XUE_OR#,
     2439    17613    3                 %XUE_U_PLUS#,
     2440    17614    3                 %XUE_U_MINUS#,
     2441    17615    3                 %XUE_U_NOT#,
     2442    17616    3                 %XUE_WEQ_LPAT#,
     2443    17617    3                 %XUE_WEQ_RPAT#,
     2444    17618    3                 %XUE_WCN_LPAT#,
     2445    17619    3                 %XUE_WCN_RPAT#,
     2446    17620    3                 %XUE_OPSPARE1#,
     2447    17621    3                 %XUE_OPSPARE2#,
     2448    17622    3                 %XUE_OPSPARE3#);
     2449    17623    3               MORE# = '1'B;

  17623  2 010325   400000 236003                    LDQ     -131072,DU
         2 010326   200016 756100                    STQ     MORE#,,AUTO

     2450    17624    4               DO WHILE (MORE#);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:342  

  17624  2 010327   200016 234100                    SZN     MORE#,,AUTO
         2 010330   010050 605000 2                  TPL     s:17567

     2451    17625        /*
     2452    17626             ***** Decide whether to STACK or REDUCE ...
     2453    17627        */
     2454    17628    4                   IF FUNC.PREC(TOKEN) > FUNC.PREC(OP_STACK(OP_PTR))

  17628  2 010331   200021 235100                    LDA     OP_PTR,,AUTO
         2 010332   000100 101505                    MRL     fill='000'O
         2 010333   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1
         2 010334   201250 000004                    ADSC9   FPT_FID+70,,AUTO         cn=0,n=4
         2 010335   201250 236100                    LDQ     FPT_FID+70,,AUTO
         2 010336   000001 736000                    QLS     1
         2 010337   200025 235100                    LDA     TOKEN,,AUTO
         2 010340   000001 735000                    ALS     1
         2 010341   000100 101405                    MRL     fill='000'O
         2 010342   000450 000001 1                  ADSC9   FUNC,A                   cn=0,n=1
         2 010343   201251 000004                    ADSC9   FPT_FID+71,,AUTO         cn=0,n=4
         2 010344   000100 101406                    MRL     fill='000'O
         2 010345   000450 000001 1                  ADSC9   FUNC,Q                   cn=0,n=1
         2 010346   201252 000004                    ADSC9   FPT_FID+72,,AUTO         cn=0,n=4
         2 010347   201252 236100                    LDQ     FPT_FID+72,,AUTO
         2 010350   201251 116100                    CMPQ    FPT_FID+71,,AUTO
         2 010351   010405 605000 2                  TPL     s:17651

     2455    17629    4                   THEN
     2456    17630    5                   DO;

     2457    17631    5                       NUM_TO_POP = FUNC.NTP(TOKEN);

  17631  2 010352   000100 101405                    MRL     fill='000'O
         2 010353   000450 200001 1                  ADSC9   FUNC,A                   cn=1,n=1
         2 010354   200030 000004                    ADSC9   NUM_TO_POP,,AUTO         cn=0,n=4

     2458    17632                               %PUSH_OPERATOR (NARGS=NUM_TO_POP);
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:343  

  17633  2 010355   200021 054100                    AOS     OP_PTR,,AUTO

  17634  2 010356   200021 236100                    LDQ     OP_PTR,,AUTO
         2 010357   000031 116007                    CMPQ    25,DL
         2 010360   010367 604400 2                  TMOZ    s:17643

  17637  2 010361   000424 236000 1                  LDQ     E_STKOVFL
         2 010362   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 010363   000011 756100                    STQ     9,,PR0

  17638  2 010364   200020 720100                    LXL0    CHARPOS,,AUTO
         2 010365   000010 740100                    STX0    8,,PR0

  17639  2 010366   000000 702200 xent               TSX2  ! X66_AALT

  17643  2 010367   000106 101500                    MRL     fill='000'O
         2 010370   200025 000004                    ADSC9   TOKEN,,AUTO              cn=0,n=4
         2 010371   200041 000001                    ADSC9   OP_STACK,Q,AUTO          cn=0,n=1

  17644  2 010372   000106 101500                    MRL     fill='000'O
         2 010373   200030 000004                    ADSC9   NUM_TO_POP,,AUTO         cn=0,n=4
         2 010374   200050 000001                    ADSC9   NUM_TO_POP_STACK,Q,AUTO  cn=0,n=1

     2459    17647    5                       MORE# = '0'B;

  17647  2 010375   200016 450100                    STZ     MORE#,,AUTO

     2460    17648    5                       CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);

  17648  2 010376   200010 630500                    EPPR0   VALUE$,,AUTO
         2 010377   200536 450500                    STP0    @PTR$+1,,AUTO
         2 010400   200025 631500                    EPPR1   TOKEN,,AUTO
         2 010401   200535 451500                    STP1    FID_RES+2,,AUTO
         2 010402   000111 701000 2                  TSX1    LEX
         2 010403   010500 702000 2                  TSX2    E_EVAL

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:344  
     2461    17649    5                   END;

  17649  2 010404   010407 710000 2                  TRA     s:17652

     2462    17650    4                   ELSE                   /* Reduce                             */
     2463    17651    4                       CALL REDUCE ALTRET(E_EVAL);

  17651  2 010405   000650 701000 2                  TSX1    REDUCE
         2 010406   010500 702000 2                  TSX2    E_EVAL

     2464    17652    4               END;  /* Do while (MORE#) ... end */

  17652  2 010407   200016 234100                    SZN     MORE#,,AUTO
         2 010410   010331 604000 2                  TMI     s:17628
         2 010411   010050 710000 2                  TRA     s:17567

     2465    17653    3           CASE (%XUE_USER_FUNCTIONS);

     2466    17654        /*
     2467    17655             ***** USER DEFINED FUNCTIONS ...
     2468    17656        */
     2469    17657    3               CALL PROCESS_USER_FUNCTIONS (TOKEN_PTR$ ->

  17657  2 010412   200011 236100                    LDQ     TOKEN_PTR$,,AUTO
         2 010413   000003 036003                    ADLQ    3,DU
         2 010414   200535 756100                    STQ     FID_RES+2,,AUTO
         2 010415   007462 701000 2                  TSX1    PROCESS_USER_FUNCTIONS
         2 010416   010500 702000 2                  TSX2    E_EVAL

     2470    17658    3                 P$B.SUBLK$(0)) ALTRET(E_EVAL);
     2471    17659    3               CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);

  17659  2 010417   200010 630500                    EPPR0   VALUE$,,AUTO
         2 010420   200536 450500                    STP0    @PTR$+1,,AUTO
         2 010421   200025 631500                    EPPR1   TOKEN,,AUTO
         2 010422   200535 451500                    STP1    FID_RES+2,,AUTO
         2 010423   000111 701000 2                  TSX1    LEX
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:345  
         2 010424   010500 702000 2                  TSX2    E_EVAL
         2 010425   010050 710000 2                  TRA     s:17567

     2472    17660    3           CASE (ELSE);

     2473    17661        /*
     2474    17662             ***** BUILT-IN FUNCTIONS ...
     2475    17663        */
     2476    17664    3               MORE# = '1'B;

  17664  2 010426   400000 236003                    LDQ     -131072,DU
         2 010427   200016 756100                    STQ     MORE#,,AUTO

     2477    17665    4               DO WHILE (MORE#);

  17665  2 010430   200016 234100                    SZN     MORE#,,AUTO
         2 010431   010050 605000 2                  TPL     s:17567

     2478    17666        /*
     2479    17667             ***** If this is a FUNCTION with arguments,
     2480    17668                   then get those args onto the VAL_STACK$ ...
     2481    17669        */
     2482    17670    4                   NUM_ARGS = 0;

  17670  2 010432   200023 450100                    STZ     NUM_ARGS,,AUTO

     2483    17671    4                   NUM_TO_POP = FUNC.NTP(TOKEN);

  17671  2 010433   200025 235100                    LDA     TOKEN,,AUTO
         2 010434   000001 735000                    ALS     1
         2 010435   000100 101405                    MRL     fill='000'O
         2 010436   000450 200001 1                  ADSC9   FUNC,A                   cn=1,n=1
         2 010437   200030 000004                    ADSC9   NUM_TO_POP,,AUTO         cn=0,n=4

     2484    17672    4                   IF NUM_TO_POP > 0

  17672  2 010440   200030 236100                    LDQ     NUM_TO_POP,,AUTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:346  
         2 010441   010446 604400 2                  TMOZ    s:17680

     2485    17673    4                   THEN              /* Get the arguments for this FUNCTION     */
     2486    17674    4                       CALL GET_ARGS (NUM_ARGS) ALTRET(E_EVAL);

  17674  2 010442   200023 630500                    EPPR0   NUM_ARGS,,AUTO
         2 010443   200535 450500                    STP0    FID_RES+2,,AUTO
         2 010444   000340 701000 2                  TSX1    GET_ARGS
         2 010445   010500 702000 2                  TSX2    E_EVAL

     2487    17675        /*
     2488    17676             ***** Since FUNCTIONS have the highest precidence,
     2489    17677                   they are always applied as soon as found ...
     2490    17678        */
     2491    17679                      %PUSH_OPERATOR (NARGS="NUM_ARGS");

  17680  2 010446   200021 054100                    AOS     OP_PTR,,AUTO

  17681  2 010447   200021 235100                    LDA     OP_PTR,,AUTO
         2 010450   000031 115007                    CMPA    25,DL
         2 010451   010460 604400 2                  TMOZ    s:17690

  17684  2 010452   000424 236000 1                  LDQ     E_STKOVFL
         2 010453   200004 470500                    LDP0    @XUE_ECB,,AUTO
         2 010454   000011 756100                    STQ     9,,PR0

  17685  2 010455   200020 720100                    LXL0    CHARPOS,,AUTO
         2 010456   000010 740100                    STX0    8,,PR0

  17686  2 010457   000000 702200 xent               TSX2  ! X66_AALT

  17690  2 010460   000105 101500                    MRL     fill='000'O
         2 010461   200025 000004                    ADSC9   TOKEN,,AUTO              cn=0,n=4
         2 010462   200041 000001                    ADSC9   OP_STACK,A,AUTO          cn=0,n=1

  17691  2 010463   000105 101500                    MRL     fill='000'O
         2 010464   200023 000004                    ADSC9   NUM_ARGS,,AUTO           cn=0,n=4
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:347  
         2 010465   200050 000001                    ADSC9   NUM_TO_POP_STACK,A,AUTO  cn=0,n=1

     2492    17694    4                   MORE# = '0'B;

  17694  2 010466   200016 450100                    STZ     MORE#,,AUTO

     2493    17695    4                   CALL LEX (TOKEN,VALUE$) ALTRET(E_EVAL);

  17695  2 010467   200010 630500                    EPPR0   VALUE$,,AUTO
         2 010470   200536 450500                    STP0    @PTR$+1,,AUTO
         2 010471   200025 631500                    EPPR1   TOKEN,,AUTO
         2 010472   200535 451500                    STP1    FID_RES+2,,AUTO
         2 010473   000111 701000 2                  TSX1    LEX
         2 010474   010500 702000 2                  TSX2    E_EVAL

     2494    17696    4               END;  /* Do while (MORE#) ... end */

  17696  2 010475   200016 234100                    SZN     MORE#,,AUTO
         2 010476   010432 604000 2                  TMI     s:17670

     2495    17697    3           END; /* Do case ... end */

     2496    17698    2       END; /* Do while (YES) ... end */

  17698  2 010477   010050 710000 2                  TRA     s:17567

     2497    17699    1   E_EVAL:
     2498    17700    1       ALTRETURN;

  17700  2 010500   000000 702200 xent  E_EVAL       TSX2  ! X66_AALT
     2499    17701    1   END X$EVALUATE;
     2500    17702        %EOD;

PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:348  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   FM$FIT.:E05TOU  is referenced.
   XUW_MACRO_C.:E05TOU  is referenced.
   XUE_SUBS_C.:E05TOU  is referenced.
   XUE_MACRO_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X$EVALUATE.
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:349  

 **** Variables and constants ****

  ****  Section 001 RoData X$EVALUATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    15-0-0/c STRC(90)    r     1 ASN_TBL(0:8)
   262-0-0/d STRC(864)   r     1 CFPT_FID                 414-0-0/d STRC(288)   r     1 CFPT_GLINEATTR
   150-0-0/d STRC(504)   r     1 CFPT_KEYIN               166-0-0/d STRC(432)   r     1 CFPT_MONINFO
   322-0-0/d STRC(2088)  r     1 CFPT_OPEN                202-0-0/d STRC(360)   r     1 CFPT_PROMPT
   214-0-0/d STRC(504)   r     1 CFPT_READ                312-0-0/d STRC(288)   r     1 CFPT_SINPUT
   232-0-0/d STRC(432)   r     1 CFPT_TIME                246-0-0/d STRC(432)   r     1 CFPT_WRITE
  1134-0-0/w UBIN        r     1 DAY_OFFSET
  1120-0-0/b BIT         r     1 DEC_ARRAY(0:11)
  1120-0-0/w SBIN        r     1 DEC_POWERS(0:11)
    11-0-0/c STRC(45)    r     1 EOF_NAME                  10-0-0/w PTR         r     1 EOF_NAME$
   443-0-0/w STRC        r     1 E_BADMODE                440-0-0/w STRC        r     1 E_BDSWITCH
   425-0-0/w STRC        r     1 E_BIGSTR                 435-0-0/w STRC        r     1 E_CVARTOOBIG
   447-0-0/w STRC        r     1 E_ILLDCB                 437-0-0/w STRC        r     1 E_ILLFID
   446-0-0/w STRC        r     1 E_ILLFUNNAME             426-0-0/w STRC        r     1 E_ILLINDEX
   430-0-0/w STRC        r     1 E_ILLINPUT               442-0-0/w STRC        r     1 E_ILLNUMARGS
   445-0-0/w STRC        r     1 E_ILLOPTION              431-0-0/w STRC        r     1 E_ILLQUOTE
   427-0-0/w STRC        r     1 E_MSGTOOLONG             434-0-0/w STRC        r     1 E_NONDECIMAL
   444-0-0/w STRC        r     1 E_NULLFUN$$              436-0-0/w STRC        r     1 E_NULLSTRING
   433-0-0/w STRC        r     1 E_OFLOWFLT               441-0-0/w STRC        r     1 E_STKFLT
   424-0-0/w STRC        r     1 E_STKOVFL                432-0-0/w STRC        r     1 E_ZERODIVFLT
   450-0-0/c STRC(18)    r     1 FUNC(0:74)              1135-0-0/w UBIN        r     1 MIN_OFFSET
     7-0-0/c STRC        r     1 NO                         6-0-0/w PTR         r     1 NO$
     3-0-0/c STRC(18)    r     1 ONE                        2-0-0/w PTR         r     1 ONE$
   716-0-0/b UBIN(9)     r     1 ONE_511(0:511)            44-0-0/c STRC(90)    r     1 ORG_TBL(0:15)
   114-0-0/b STRC        r     1 PRIV(0:18)                13-0-0/c STRC(9)     r     1 PROMPT_VFC
    14-0-0/c STRC(9)     r     1 SAME_LINE               1116-0-0/w SBIN        r     1 SBIN_MAX
  1117-0-0/w SBIN        r     1 SBIN_MIN
   137-0-0/h UBIN(18)    r     1 SPEED_TBL(0:15)
     5-0-0/c STRC        r     1 YES                        4-0-0/w PTR         r     1 YES$
     1-0-0/c STRC(18)    r     1 ZERO                       0-0-0/w PTR         r     1 ZERO$
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:350  
   516-0-0/b UBIN(9)     r     1 ZERO_511(0:511)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  1045-0-0/w PTR         r     1 @ADDEND1                1046-0-0/w PTR         r     1 @ADDEND2
  1046-0-0/w PTR         r     1 @BOUND1                 1047-0-0/w PTR         r     1 @BOUND2
  1047-0-0/w PTR         r     1 @CHARPOS                1045-0-0/w PTR         r     1 @EXIST
  1045-0-0/w PTR         r     1 @FUN_CODE                  5-0-0/w PTR         r     1 @MCB
  1045-0-0/w PTR         r     1 @MULT1                  1046-0-0/w PTR         r     1 @MULT2
   535-0-0/w PTR         r     1 @NUM_ARGS                535-0-0/w PTR         r     1 @PTR$
  1047-0-0/w PTR         r     1 @SUM                    1047-0-0/w PTR         r     1 @SUM
   535-0-0/w PTR         r     1 @TOKEN                     3-0-0/w PTR         r     1 @TREE$
  1045-0-0/w PTR         r     1 @VALUE                  1046-0-0/w PTR         r     1 @VALUE$
   536-0-0/w PTR         r     1 @VALUE$                 1046-0-0/w PTR         r     1 @VALUE$
  1045-0-0/w PTR         r     1 @VAR_NAME$                 4-0-0/w PTR         r     1 @XUE_ECB
    *0-0-0/w SBIN        r     1 ADDEND1                   *0-0-0/w SBIN        r     1 ADDEND2
   540-0-0/w SBIN        r     1 ARG_INDX                 536-0-0/w PTR         r     1 ARG_PTR$
    *0-0-0/w SBIN        r     1 BOUND1                    *0-0-0/w SBIN        r     1 BOUND2
    20-0-0/w UBIN        r     1 CHARPOS                   *0-0-0/w UBIN        r     1 CHARPOS
   157-0-0/b UBIN(18)    r     1 CHARPOS_STACK(0:50)
    *0-0-0/w SBIN        r     1 EXIST                    537-0-0/w PTR         r     1 EXP_PTR$
   516-0-0/c STRC(72)    r     1 FID_ACCT                 532-0-0/w UBIN(9)     r     1 FID_ASN
   506-0-0/c STRC(288)   r     1 FID_NAME                 520-0-0/c STRC(72)    r     1 FID_PASS
   533-0-0/c CHAR(4)     r     1 FID_RES                  474-0-0/d STRC(324)   r     1 FID_RESULTS
   524-0-0/d STRC(198)   r     1 FID_SN                   522-0-0/c STRC(72)    r     1 FID_WSN
    14-0-0/d VECT        r     1 FPARAM_VECTOR           1142-0-0/d STRC(864)   r     1 FPT_FID
   346-0-0/d STRC(288)   r     1 FPT_GLINEATTR            212-0-0/d STRC(504)   r     1 FPT_KEYIN
   230-0-0/d STRC(432)   r     1 FPT_MONINFO             1046-0-0/d STRC(2088)  r     1 FPT_OPEN
   244-0-0/d STRC(360)   r     1 FPT_PROMPT               270-0-0/d STRC(504)   r     1 FPT_READ
   256-0-0/d STRC(360)   r     1 FPT_SAVE_PROMPT          306-0-0/d STRC(288)   r     1 FPT_SINPUT
   316-0-0/d STRC(432)   r     1 FPT_TIME                 332-0-0/d STRC(432)   r     1 FPT_WRITE
    *0-0-0/w SBIN        r     1 FUN_CODE                1045-0-0/w UBIN        r     1 I
   536-0-0/w SBIN        r     1 INDX                     540-0-0/w SBIN        r     1 K
     6-0-0/w STRC(72)    r     1 KEYIN_RESULTS           1045-0-0/w SBIN        r     1 L_INDEX
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:351  
    *0-0-0/w STRC(324)   r     1 MCB                       16-0-0/b BIT         r     1 MORE#
    *0-0-0/w SBIN        r     1 MULT1                     *0-0-0/w SBIN        r     1 MULT2
   537-0-0/w PTR         r     1 NAME$                    537-0-0/w SBIN        r     1 NARGS
    23-0-0/w SBIN        r     1 NUM_ARGS                  *0-0-0/w SBIN        r     1 NUM_ARGS
    30-0-0/w SBIN        r     1 NUM_TO_POP
    50-0-0/b UBIN(9)     r     1 NUM_TO_POP_STACK(0:25)
  1047-0-0/w UBIN        r     1 OFFSET                    21-0-0/w SBIN        r     1 OP_PTR
    41-0-0/b UBIN(9)     r     1 OP_STACK(0:25)
   541-0-0/w PTR         r     1 P$                       540-0-0/w PTR         r     1 PARAM$
    *0-0-0/w PTR         r     1 PTR$                    1043-0-0/w UBIN        r     1 RESULT
  1046-0-0/w SBIN        r     1 R_INDEX                   31-0-0/c CHAR(31)    r     1 SAVE_PROMPT
   642-0-0/b UBIN(9)     r     1 SEARCH_TABLE(0:511)
  1050-0-0/w SBIN        r     1 SOURCE_SIZE             1047-0-0/w SBIN        r     1 START
  1046-0-0/w UBIN        r     1 STK_PTR                   *0-0-0/w SBIN        r     1 SUM
    *0-0-0/w SBIN        r     1 SUM                       17-0-0/b BIT         r     1 TBIT
    26-0-0/w SBIN        r     1 TEMP                    1047-0-0/w SBIN        r     1 TEMP
    12-0-0/w PTR         r     1 TEMP$                    536-0-0/w SBIN        r     1 TEMP1
   537-0-0/w SBIN        r     1 TEMP2                     27-0-0/w SBIN        r     1 TEMP3
   541-0-0/c STRC(2313)  r     1 TEMPBUF                  543-0-0/w PTR         r     1 TEMP_ADDR$
    25-0-0/w UBIN        r     1 TOKEN                     *0-0-0/w UBIN        r     1 TOKEN
    24-0-0/w SBIN        r     1 TOKEN_INDX                11-0-0/w PTR         r     1 TOKEN_PTR$
    *0-0-0/w PTR         r     1 TREE$                   1050-0-0/w UBIN        r     1 UBIN1
  1051-0-0/w UBIN        r     1 UBIN2                   1052-0-0/w UBIN        r     1 UBIN3
   535-0-0/w SBIN        r     1 VALUE                     *0-0-0/w SBIN        r     1 VALUE
    10-0-0/w PTR         r     1 VALUE$                    *0-0-0/w PTR         r     1 VALUE$
    *0-0-0/w PTR         r     1 VALUE$                    *0-0-0/w PTR         r     1 VALUE$
    22-0-0/w SBIN        r     1 VAL_PTR
    57-0-0/w PTR         r     1 VAL_STACK$(0:50)
   142-0-0/b UBIN(9)     r     1 VAL_TYPE(0:50)
    *0-0-0/w PTR         r     1 VAR_NAME$               1050-0-0/c STRC(4608)  r     1 VAR_VALUE
   356-0-0/d STRC(576)   r     1 VLP_LINEATTR             376-0-0/d STRC(2232)  r     1 VLR_SITEINFO
  1042-0-0/w UBIN        r     1 WHERE                     *0-0-0/d STRC(1008)  r     1 XUE_ECB

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:352  

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 B$XL_LOWER$                0-0-0/w PTR         r     1 B$XL_UPPER$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w STRC(324)   r     1 CODE03
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/d STRC(4608)  r     1 LC2UC
     0-0-0N  NULL        r     1 M$UC                       0-0-0/w STRC(144)   r     1 P$B
     0-0-0/w ASTR(153)   r     1 P$S                        0-0-0/w STRC(18)    r     1 U$STRING
     0-0-0/d STRC(4608)  r     1 UC2LC                      0-0-0/c ASTR(9)     r     1 VAR_NAME
     0-0-0/c ASTR(9)     r     1 X$STRING                   0-0-0/w STRC(288)   r     1 XUE$FUNPARAM
     0-0-0/w ASTR(81)    r     1 XUE$OPTION


   Procedure X$EVALUATE requires 4417 words for executable code.
   Procedure X$EVALUATE requires 686 words of local(AUTO) storage.
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:353  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:354  
          MINI XREF LISTING

ADDEND1 IN PROCEDURE CHK_ADD
     16147**DCL     16140--PROC    16157>>IF      16166>>IF      16169>>ASSIGN  16183>>IF      16186>>ASSIGN
     16200>>ASSIGN
ADDEND2 IN PROCEDURE CHK_ADD
     16148**DCL     16140--PROC    16160>>IF      16166>>IF      16170>>ASSIGN  16183>>IF      16187>>ASSIGN
     16200>>ASSIGN
APPLY_CASE IN PROCEDURE REDUCE
     16403**LABEL   16501--EXIT
ARG_INDX IN PROCEDURE GET_ARGS
     15540**DCL     15553<<DOINDEX 15554>>ASSIGN  15605<<DOINDEX 15606>>ASSIGN  15664<<DOINDEX
ARG_PTR$ IN PROCEDURE GET_ARGS
     15538**DCL     15554<<ASSIGN  15555>>IF      15571>>ASSIGN  15572>>ASSIGN  15578>>ASSIGN  15594>>ASSIGN
     15606<<ASSIGN  15613>>IF      15631>>ASSIGN  15637<>CALL    15653>>ASSIGN
ASN_TBL.C
     13199**DCL     16658>>ASSIGN  16661>>ASSIGN
ASN_TBL.CODE
     13179**DCL     16654>>DOWHILE
ASN_TBL.TEXT
     13189**DCL     16662>>ASSIGN
B$ALT.CODE
     13043**DCL     13043--REDEF   13044--REDEF   13044--REDEF
B$ALT.DCB#
     13044**DCL     15766>>ASSIGN  15957>>ASSIGN  17199>>ASSIGN  17223>>ASSIGN
B$ALT.ERR
     13044**DCL     15764>>ASSIGN  15955>>ASSIGN  16374>>ASSIGN  17198>>ASSIGN  17222>>ASSIGN
B$ALT.ERR.CODE
     13045**DCL     15939>>IF      15946>>IF      15946>>IF      15946>>IF      15946>>IF      16835>>IF
B$ALT.ERR.ERR#
     13045**DCL     13045--REDEF
B$ALT.EVID
     13044**DCL     13044--REDEF   13044--REDEF
B$JIT.ACCN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:355  
       344**DCL     16576--ASSIGN  16579--ASSIGN  16580>>ASSIGN
B$JIT.CPFLAGS1
       433**DCL     17020>>IF      17027>>IF      17030>>IF      17033>>IF
B$JIT.CPFLAGS1.SLEAZE
       438**DCL       438--REDEF
B$JIT.ERR.MID
       345**DCL       345--REDEF
B$JIT.FACCN
       344**DCL     16629--ASSIGN  16632--ASSIGN  16633>>ASSIGN
B$JIT.HPSN
       512**DCL     16710--ASSIGN  16713--ASSIGN  16714>>ASSIGN
B$JIT.JRESPEAK
       506**DCL       507--REDEF
B$JIT.LBJID
       520**DCL     16906>>ASSIGN
B$JIT.MODE
       339**DCL     16912>>DOCASE  16981>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
       615**DCL       615--REDEF     616--REDEF
B$JIT.PNR
       519**DCL       519--REDEF
B$JIT.PRFLAGS.COMMENT
       428**DCL     17025>>ASSIGN
B$JIT.PRFLAGS.LIST
       428**DCL     17023>>ASSIGN
B$JIT.PRIV.AUTH
       385**DCL     17054>>IF
B$JIT.PRIV.JOB
       388**DCL     17048>>IF
B$JIT.RERUN
       519**DCL     17011>>IF
B$JIT.STEPCC
       571**DCL     15503>>IF      15507>>IF      15515>>CALLBLT
B$JIT.SWITCH
       432**DCL     17099>>ASSIGN
B$JIT.SYSID
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:356  
       344**DCL     17102>>ASSIGN
B$JIT.TSLINE
       613**DCL       614--REDEF
B$JIT.UNAME
       344**DCL     16973--ASSIGN  16976--ASSIGN  16977>>ASSIGN
B$JIT.WOO
       344**DCL     17148--ASSIGN  17151--ASSIGN  17152>>ASSIGN
B$JIT$
     12952**DCL       339--IMP-PTR 15503>>IF      15507>>IF      15515>>CALLBLT 16580>>ASSIGN  16633>>ASSIGN
     16714>>ASSIGN  16906>>ASSIGN  16912>>DOCASE  16977>>ASSIGN  16981>>IF      17011>>IF      17020>>IF
     17023>>ASSIGN  17025>>ASSIGN  17027>>IF      17030>>IF      17033>>IF      17048>>IF      17054>>IF
     17099>>ASSIGN  17102>>ASSIGN  17152>>ASSIGN
B$TCB.ALT$
     13039**DCL     15764>>ASSIGN  15766>>ASSIGN  15939>>IF      15946>>IF      15946>>IF      15946>>IF
     15946>>IF      15955>>ASSIGN  15957>>ASSIGN  16374>>ASSIGN  16835>>IF      17198>>ASSIGN  17199>>ASSIGN
     17222>>ASSIGN  17223>>ASSIGN
B$TCB$
     12953**DCL     13039--IMP-PTR 15764>>ASSIGN  15766>>ASSIGN  15939>>IF      15946>>IF      15946>>IF
     15946>>IF      15946>>IF      15955>>ASSIGN  15957>>ASSIGN  16374>>ASSIGN  16835>>IF      17198>>ASSIGN
     17199>>ASSIGN  17222>>ASSIGN  17223>>ASSIGN
B$XL_LOWER$
     15384**DCL     15385--IMP-PTR 16904>>CALLBLT
B$XL_UPPER$
     15380**DCL     15381--IMP-PTR 16897>>CALLBLT
BACK IN PROCEDURE PROCESS_INPUT
     16045**LABEL   16021--CALLALT
BOUND1 IN PROCEDURE CHK_BOUNDS
     16061**DCL     16054--PROC    16088<>CALL    16097>>IF      16097>>IF      16124>>IF      16132>>IF
     16135>>ASSIGN
BOUND2 IN PROCEDURE CHK_BOUNDS
     16062**DCL     16054--PROC    16082<>CALL    16104>>IF      16120>>IF      16120>>IF      16123<<ASSIGN
     16124>>IF      16132>>IF      16135<<ASSIGN
CFPT_FID
     13793**DCL     15749>>ASSIGN
CFPT_FID.V
     13797**DCL     13793--DCLINIT
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:357  
CFPT_GLINEATTR
     13966**DCL     16983>>ASSIGN
CFPT_GLINEATTR.V
     13974**DCL     13968--DCLINIT
CFPT_KEYIN
     13642**DCL     16870>>ASSIGN
CFPT_KEYIN.V
     13645**DCL     13642--DCLINIT
CFPT_MONINFO
     13661**DCL     17074>>ASSIGN  17139>>ASSIGN
CFPT_OPEN
     13907**DCL     15910>>ASSIGN
CFPT_OPEN.ACSVEH_
     13909**DCL     13910--REDEF
CFPT_OPEN.ALTKEYS_
     13915**DCL     13916--REDEF   13916--REDEF
CFPT_OPEN.HDR_
     13914**DCL     13915--REDEF
CFPT_OPEN.TAB_
     13913**DCL     13914--REDEF
CFPT_OPEN.UHL_
     13907**DCL     13908--REDEF   13908--REDEF
CFPT_OPEN.V
     13916**DCL     13907--DCLINIT
CFPT_OPEN.V.FSN#
     13947**DCL     13947--REDEF   13947--REDEF
CFPT_OPEN.WSN_
     13913**DCL     13913--REDEF
CFPT_PROMPT
     13681**DCL     16746>>ASSIGN  16763>>ASSIGN
CFPT_PROMPT.V
     13689**DCL     13683--DCLINIT
CFPT_READ
     13710**DCL     16773>>ASSIGN
CFPT_READ.STATION_
     13713**DCL     13714--REDEF
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:358  
CFPT_READ.V
     13714**DCL     13710--DCLINIT
CFPT_READ.V.DVBYTE.REREAD#
     13725**DCL     13725--REDEF
CFPT_READ.V.INDX#
     13723**DCL     13723--REDEF
CFPT_SINPUT
     13821**DCL     16784>>ASSIGN
CFPT_SINPUT.V
     13833**DCL     13823--DCLINIT
CFPT_TIME
     13743**DCL     16611>>ASSIGN  16623>>ASSIGN  17110>>ASSIGN
CFPT_TIME.V
     13747**DCL     13743--DCLINIT
CFPT_WRITE
     13768**DCL     16733>>ASSIGN
CFPT_WRITE.STATION_
     13770**DCL     13770--REDEF
CFPT_WRITE.V
     13771**DCL     13768--DCLINIT
CFPT_WRITE.V.DVBYTE.VFC#
     13777**DCL     13777--REDEF
CHARPOS
     13135**DCL     15480<<ASSIGN  15497>>ASSIGN  15518<>CALL    15565>>ASSIGN  15588>>ASSIGN  15624>>ASSIGN
     15646>>ASSIGN  15671>>ASSIGN  15678>>ASSIGN  17175>>ASSIGN  17182>>ASSIGN  17511>>ASSIGN  17518>>ASSIGN
     17578>>ASSIGN  17585>>ASSIGN  17638>>ASSIGN  17685>>ASSIGN
CHARPOS IN PROCEDURE GET_VAR
     15395**DCL     15388--PROC    15439<>CALL
CHARPOS_STACK
     13150**DCL     15572<<ASSIGN  15595<<ASSIGN  15631<<ASSIGN  15653<<ASSIGN  15678<<ASSIGN  15743>>ASSIGN
     15765>>ASSIGN  15904>>ASSIGN  15956>>ASSIGN  16085>>ASSIGN  16091>>ASSIGN  16101>>ASSIGN  16108>>ASSIGN
     16128>>ASSIGN  16358>>ASSIGN  16375>>ASSIGN  16380>>ASSIGN  16396>>ASSIGN  16568>>ASSIGN  16595>>ASSIGN
     16636<>CALL    16860>>ASSIGN  16867>>ASSIGN  16958>>ASSIGN  17096>>ASSIGN  17182<<ASSIGN  17200>>ASSIGN
     17210>>ASSIGN  17215>>ASSIGN  17232>>ASSIGN  17237>>ASSIGN  17242>>ASSIGN  17518<<ASSIGN  17585<<ASSIGN
CHAR_COMPARE IN PROCEDURE REDUCE
     16503**LABEL   16472--CALLALT 16473--CALLALT
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:359  
CHK_ADD IN PROCEDURE REDUCE
     16140**PROC    16427--CALL    16430--CALL
CHK_BOUNDS IN PROCEDURE REDUCE
     16054**PROC    16717--CALL    17064--CALL    17083--CALL    17129--CALL
CHK_MULT IN PROCEDURE REDUCE
     16209**PROC    16432--CALL
CODE03.NGAVAL
     13117**DCL     16681>>ASSIGN  16687>>ASSIGN
CODE03.NRECS
     13117**DCL     16678>>ASSIGN
CODE03.ORG
     13115**DCL     16697>>DOWHILE
CODE03.TYPE
     13117**DCL     16690--ASSIGN  16693--ASSIGN  16694>>ASSIGN
CODE03.UGRANS
     13115**DCL     16681>>ASSIGN  16684>>ASSIGN
DAY_OFFSET IN PROCEDURE TIME_FUNCTIONS
     16342**DCL     16364>>ASSIGN
DEC_ARRAY IN PROCEDURE STASH_VALUE
     16263**DCL     16270--REDEF
DEC_POWERS IN PROCEDURE STASH_VALUE
     16270**DCL     16300>>IF
EOF_NAME
     13169**DCL     13168--DCLINIT
EOF_NAME$
     13168**DCL     16636<>CALL    16838<>CALL
EXIST IN PROCEDURE OPEN_TEST_FILE
     15777**DCL     15771--PROC    15935<<ASSIGN  15943<<ASSIGN  15952<<ASSIGN
EXP_PTR$ IN PROCEDURE GET_ARGS
     15539**DCL     15578<<ASSIGN  15579<>CALL    15595>>ASSIGN
E_ALLOCATE IN PROCEDURE GET_VAR
     15451**LABEL   15444--CALLALT
E_ALLOCATE IN PROCEDURE LEX
     15529**LABEL   15512--CALLALT
E_ALLOCATE IN PROCEDURE PROCESS_USER_FUNCTIONS
     17539**LABEL   17439--CALLALT 17451--CALLALT 17471--CALLALT 17482--CALLALT 17490--CALLALT 17526--CALLALT
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:360  
     17529--CALLALT
E_ALLOCATE IN PROCEDURE REDUCE
     17227**LABEL   16577--CALLALT 16599--CALLALT 16607--CALLALT 16619--CALLALT 16630--CALLALT 16659--CALLALT
     16667--CALLALT 16691--CALLALT 16702--CALLALT 16708--CALLALT 16711--CALLALT 16822--CALLALT 16840--CALLALT
     16885--CALLALT 16893--CALLALT 16900--CALLALT 16926--CALLALT 16974--CALLALT 16990--CALLALT 16996--CALLALT
     17002--CALLALT 17078--CALLALT 17085--CALLALT 17106--CALLALT 17143--CALLALT 17149--CALLALT 17162--CALLALT
     17194--CALLALT 17204--CALLALT
E_ALLOCATE IN PROCEDURE STASH_VALUE
     16325**LABEL   16314--CALLALT
E_BADMODE
     14954**DCL     17214>>ASSIGN
E_BADMODE IN PROCEDURE REDUCE
     17210**LABEL   16982--GOTO
E_BADNUMARGS IN PROCEDURE REDUCE
     17201**LABEL   16937--GOTO    16946--GOTO
E_BDSWITCH
     14791**DCL     17095>>ASSIGN
E_BIGSTR
     14193**DCL     16100>>ASSIGN  16107>>ASSIGN
E_CVARTOOBIG
     14627**DCL     16594>>ASSIGN
E_DEC IN PROCEDURE REDUCE
     17231**LABEL   16420--CALLALT 16792--CALLALT 16931--CALLALT 16938--CALLALT 16947--CALLALT 16954--CALLALT
E_DEC IN PROCEDURE TIME_FUNCTIONS
     16379**LABEL   16363--CALLALT 16366--CALLALT
E_DEC1 IN PROCEDURE REDUCE
     17236**LABEL   16424--CALLALT 16940--CALLALT 16949--CALLALT 16961--CALLALT
E_EVAL
     17700**LABEL   17561--CALLALT 17588--CALLALT 17598--CALLALT 17648--CALLALT 17651--CALLALT 17657--CALLALT
     17659--CALLALT 17674--CALLALT 17695--CALLALT
E_EVAL IN PROCEDURE GET_ARGS
     15684**LABEL   15579--CALLALT 15637--CALLALT
E_FUN$$ IN PROCEDURE PROCESS_USER_FUNCTIONS
     17533**LABEL   17500--CALLALT
E_GET IN PROCEDURE GET_VAR
     15455**LABEL   15439--CALLALT 15462--CALLALT
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:361  
E_ILLDCB
     15170**DCL     15896>>ASSIGN
E_ILLFID
     14737**DCL     15903>>ASSIGN
E_ILLFUNNAME
     15116**DCL     15496>>ASSIGN
E_ILLINDEX
     14247**DCL     16127>>ASSIGN
E_ILLINPUT
     14355**DCL     15990>>ASSIGN  15998>>ASSIGN
E_ILLNUMARGS
     14900**DCL     17209>>ASSIGN
E_ILLOPTION
     15062**DCL     16357>>ASSIGN
E_ILLQUOTE
     14409**DCL     16036>>ASSIGN
E_LEX IN PROCEDURE LEX
     15526**LABEL   15483--CALLALT 15518--CALLALT
E_MSGTOOLONG
     14301**DCL     16859>>ASSIGN
E_NONDECIMAL
     14571**DCL     16084>>ASSIGN  16090>>ASSIGN  16379>>ASSIGN  17231>>ASSIGN  17236>>ASSIGN
E_NONESUCH IN PROCEDURE REDUCE
     17193**LABEL   16673--GOTO
E_NULLFUN$$
     15008**DCL     17431>>ASSIGN
E_NULLSTRING
     14683**DCL     15742>>ASSIGN  16866>>ASSIGN
E_OFLOWFLT
     14517**DCL     17241>>ASSIGN
E_OPEN IN PROCEDURE OPEN_TEST_FILE
     15939**LABEL   15934--CALLALT
E_OVERFLOW IN PROCEDURE CHK_ADD
     16206**LABEL   16159--GOTO    16162--GOTO    16179--GOTO    16196--GOTO
E_OVERFLOW IN PROCEDURE CHK_MULT
     16245**LABEL   16222--GOTO    16225--GOTO    16233--GOTO    16240--GOTO
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:362  
E_OVERFLOW IN PROCEDURE REDUCE
     17241**LABEL   16427--CALLALT 16430--CALLALT 16432--CALLALT
E_PMME IN PROCEDURE FID_USERTHING
     15764**LABEL   15760--CALLALT
E_PMME IN PROCEDURE REDUCE
     17222**LABEL   16741--CALLALT 16768--CALLALT 16798--CALLALT 16806--CALLALT 16848--CALLALT 16853--GOTO
     16875--CALLALT 16986--CALLALT 17076--CALLALT 17141--CALLALT
E_PMME IN PROCEDURE TIME_FUNCTIONS
     16374**LABEL   16370--CALLALT
E_PROCESS IN PROCEDURE PROCESS_USER_FUNCTIONS
     17543**LABEL   17465--CALLALT
E_READ IN PROCEDURE REDUCE
     16835**LABEL   16800--CALLALT
E_REDUCE IN PROCEDURE REDUCE
     17219**LABEL   16397--GOTO    16458--CALLALT 16615--CALLALT 16626--CALLALT 16636--CALLALT 16649--CALLALT
     16650--CALLALT 16652--CALLALT 16679--CALLALT 16682--CALLALT 16685--CALLALT 16688--CALLALT 16717--CALLALT
     16721--CALLALT 16817--CALLALT 16838--CALLALT 16907--CALLALT 16910--CALLALT 16934--CALLALT 16943--CALLALT
     16952--CALLALT 16971--CALLALT 17008--CALLALT 17064--CALLALT 17072--CALLALT 17083--CALLALT 17091--CALLALT
     17100--CALLALT 17103--CALLALT 17114--CALLALT 17129--CALLALT 17137--CALLALT
E_RELFPARAM IN PROCEDURE REDUCE
     17189**LABEL   16671--CALLALT 16675--CALLALT
E_STKFLT
     14845**DCL     16395>>ASSIGN
E_STKOVFL
     14138**DCL     15564>>ASSIGN  15587>>ASSIGN  15623>>ASSIGN  15645>>ASSIGN  15670>>ASSIGN  17174>>ASSIGN
     17510>>ASSIGN  17577>>ASSIGN  17637>>ASSIGN  17684>>ASSIGN
E_ZERODIVFLT
     14463**DCL     16437>>ASSIGN  16957>>ASSIGN
F$DCB.ACTPOS
     13082**DCL     13082--REDEF
F$DCB.ARS#
     13056**DCL     13056--REDEF   16755>>IF      16758>>ASSIGN  16816>>ASSIGN
F$DCB.ATTR
     13075**DCL     13076--REDEF
F$DCB.BORROW
     13090**DCL     13090--REDEF   13090--REDEF   13090--REDEF
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:363  
F$DCB.DCBNAME.L
     13104**DCL     13104--IMP-SIZ
F$DCB.EOMCHAR#
     13060**DCL     13060--REDEF
F$DCB.FLDID
     13085**DCL     13085--REDEF
F$DCB.FORM$
     13079**DCL     13079--REDEF
F$DCB.FSECT
     13095**DCL     13095--REDEF
F$DCB.FSN#
     13072**DCL     13072--REDEF   13072--REDEF   13073--REDEF
F$DCB.HEADER$
     13078**DCL     13078--REDEF
F$DCB.IXTNSIZE#
     13076**DCL     13076--REDEF
F$DCB.LASTSTA$
     13065**DCL     13065--REDEF
F$DCB.LVL
     13091**DCL     13091--REDEF
F$DCB.NAME#.C
     13066**DCL     13066--REDEF
F$DCB.NOEOF
     13088**DCL     13088--REDEF
F$DCB.NRECS#
     13077**DCL     13077--REDEF
F$DCB.NRECX
     13096**DCL     13096--REDEF
F$DCB.OHDR
     13088**DCL     13088--REDEF
F$DCB.ORG#
     13071**DCL     13071--REDEF
F$DCB.PRECNO
     13094**DCL     13094--REDEF
F$DCB.RCSZ
     13100**DCL     13100--REDEF
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:364  
F$DCB.RES#
     13067**DCL     13067--REDEF
F$DCB.SETX
     13079**DCL     13079--REDEF
F$DCB.TAB$
     13079**DCL     13079--REDEF
F$DCB.TDA
     13093**DCL     13094--REDEF
F$DCB.WSN#
     13067**DCL     13067--REDEF
FID_ACCT
     14034**DCL     15752--ASSIGN  15916--ASSIGN
FID_ASN
     14075**DCL     15756--ASSIGN  15899>>IF      15899>>IF      15930>>ASSIGN  16654>>DOWHILE
FID_NAME
     14021**DCL     15751--ASSIGN  15913--ASSIGN
FID_PASS
     14047**DCL     15753--ASSIGN  15919--ASSIGN
FID_RES
     14076**DCL     15757--ASSIGN  15928>>ASSIGN
FID_RESULTS
     13988**DCL     15758--ASSIGN
FID_RESULTS.ACCT
     13988**DCL     15914>>IF
FID_RESULTS.PASS
     13988**DCL     15917>>IF
FID_RESULTS.RES
     13988**DCL     15926>>IF
FID_RESULTS.SN
     13988**DCL     15920>>IF
FID_RESULTS.WSN
     13988**DCL     15923>>IF
FID_SN
     14073**DCL     15754--ASSIGN  15922--ASSIGN
FID_USERTHING IN PROCEDURE REDUCE
     15707**PROC    15889--CALL    16652--CALL
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:365  
FID_WSN
     14060**DCL     15755--ASSIGN  15925--ASSIGN
FPARAM_VECTOR
     13131**DCL     15912>>ASSIGN  16648<<ASSIGN  16668<<ASSIGN  16669<<ASSIGN  16670<<ASSIGN  16674>>ASSIGN
     16707>>ASSIGN  17193>>ASSIGN  17201>>IF      17203>>ASSIGN
FPT_FID IN PROCEDURE FID_USERTHING
     15724**DCL     15749<<ASSIGN  15760<>CALL
FPT_FID.ACCT_ IN PROCEDURE FID_USERTHING
     15725**DCL     15752<<ASSIGN
FPT_FID.ASN_ IN PROCEDURE FID_USERTHING
     15727**DCL     15756<<ASSIGN
FPT_FID.NAME_ IN PROCEDURE FID_USERTHING
     15725**DCL     15751<<ASSIGN
FPT_FID.PASS_ IN PROCEDURE FID_USERTHING
     15725**DCL     15753<<ASSIGN
FPT_FID.RESULTS_ IN PROCEDURE FID_USERTHING
     15727**DCL     15758<<ASSIGN
FPT_FID.RES_ IN PROCEDURE FID_USERTHING
     15727**DCL     15757<<ASSIGN
FPT_FID.SN_ IN PROCEDURE FID_USERTHING
     15726**DCL     15754<<ASSIGN
FPT_FID.TEXTFID_ IN PROCEDURE FID_USERTHING
     15724**DCL     15750<<ASSIGN
FPT_FID.WSN_ IN PROCEDURE FID_USERTHING
     15726**DCL     15755<<ASSIGN
FPT_GLINEATTR
     13579**DCL     16983<<ASSIGN  16986<>CALL
FPT_GLINEATTR.LINEATTR_
     13585**DCL     16985<<ASSIGN
FPT_GLINEATTR.V
     13587**DCL     16984--ASSIGN
FPT_GLINEATTR.V_
     13581**DCL     16984<<ASSIGN
FPT_KEYIN
     13359**DCL     16870<<ASSIGN  16875<>CALL
FPT_KEYIN.MESS_
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:366  
     13359**DCL     16872<<ASSIGN
FPT_KEYIN.REPLY_
     13360**DCL     16873<<ASSIGN
FPT_KEYIN.RESULTS_
     13361**DCL     16874<<ASSIGN
FPT_KEYIN.V
     13362**DCL     16871--ASSIGN
FPT_KEYIN.V_
     13359**DCL     16871<<ASSIGN
FPT_MONINFO
     13378**DCL     17074<<ASSIGN  17076<>CALL    17139<<ASSIGN  17141<>CALL
FPT_MONINFO.SITEINFO_
     13378**DCL     17075<<ASSIGN  17140<<ASSIGN
FPT_OPEN IN PROCEDURE OPEN_TEST_FILE
     15844**DCL     15910<<ASSIGN  15934<>CALL
FPT_OPEN.ACCT_ IN PROCEDURE OPEN_TEST_FILE
     15848**DCL     15916<<ASSIGN
FPT_OPEN.ACSVEH_ IN PROCEDURE OPEN_TEST_FILE
     15846**DCL     15847--REDEF
FPT_OPEN.ALTKEYS_ IN PROCEDURE OPEN_TEST_FILE
     15852**DCL     15853--REDEF   15853--REDEF
FPT_OPEN.FPARAM_ IN PROCEDURE OPEN_TEST_FILE
     15849**DCL     15912<<ASSIGN
FPT_OPEN.HDR_ IN PROCEDURE OPEN_TEST_FILE
     15851**DCL     15852--REDEF
FPT_OPEN.NAME_ IN PROCEDURE OPEN_TEST_FILE
     15845**DCL     15913<<ASSIGN
FPT_OPEN.PASS_ IN PROCEDURE OPEN_TEST_FILE
     15846**DCL     15919<<ASSIGN
FPT_OPEN.SN_ IN PROCEDURE OPEN_TEST_FILE
     15844**DCL     15922<<ASSIGN
FPT_OPEN.TAB_ IN PROCEDURE OPEN_TEST_FILE
     15850**DCL     15851--REDEF
FPT_OPEN.UHL_ IN PROCEDURE OPEN_TEST_FILE
     15844**DCL     15845--REDEF   15845--REDEF
FPT_OPEN.V IN PROCEDURE OPEN_TEST_FILE
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:367  
     15853**DCL     15911--ASSIGN
FPT_OPEN.V.ASN# IN PROCEDURE OPEN_TEST_FILE
     15863**DCL     15930<<ASSIGN
FPT_OPEN.V.DCB# IN PROCEDURE OPEN_TEST_FILE
     15853**DCL     15929<<ASSIGN
FPT_OPEN.V.FSN# IN PROCEDURE OPEN_TEST_FILE
     15884**DCL     15884--REDEF   15884--REDEF
FPT_OPEN.V.FUN# IN PROCEDURE OPEN_TEST_FILE
     15863**DCL     15931<<ASSIGN
FPT_OPEN.V.INITZ.SCRUB# IN PROCEDURE OPEN_TEST_FILE
     15854**DCL     15932<<ASSIGN
FPT_OPEN.V.OPER.TEST# IN PROCEDURE OPEN_TEST_FILE
     15855**DCL     15933<<ASSIGN
FPT_OPEN.V.RES# IN PROCEDURE OPEN_TEST_FILE
     15868**DCL     15928<<ASSIGN
FPT_OPEN.V_ IN PROCEDURE OPEN_TEST_FILE
     15844**DCL     15911<<ASSIGN
FPT_OPEN.WSN_ IN PROCEDURE OPEN_TEST_FILE
     15850**DCL     15850--REDEF   15925<<ASSIGN
FPT_PROMPT
     13398**DCL     16763<<ASSIGN  16768<>CALL
FPT_PROMPT.PROMPT_
     13404**DCL     16767<<ASSIGN
FPT_PROMPT.V
     13406**DCL     16764--ASSIGN
FPT_PROMPT.V.DCB#
     13406**DCL     16766<<ASSIGN
FPT_PROMPT.V.DVBYTE#.VFC#
     13407**DCL     16765<<ASSIGN
FPT_PROMPT.V_
     13400**DCL     16764<<ASSIGN
FPT_READ
     13455**DCL     16773<<ASSIGN  16800<>CALL
FPT_READ.BUF_
     13457**DCL     16775<<ASSIGN
FPT_READ.STATION_
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:368  
     13458**DCL     13459--REDEF
FPT_READ.V
     13459**DCL     16774--ASSIGN
FPT_READ.V.DCB#
     13459**DCL     16776<<ASSIGN
FPT_READ.V.DVBYTE.REREAD#
     13470**DCL     13470--REDEF   16783<<ASSIGN
FPT_READ.V.INDX#
     13468**DCL     13468--REDEF
FPT_READ.V_
     13455**DCL     16774<<ASSIGN
FPT_SAVE_PROMPT
     13426**DCL     16746<<ASSIGN  16751<>CALL    16806<>CALL    16848<>CALL
FPT_SAVE_PROMPT.PROMPT_
     13432**DCL     16748<<ASSIGN  16756<<ASSIGN  16758<<ASSIGN
FPT_SAVE_PROMPT.V
     13434**DCL     16747--ASSIGN
FPT_SAVE_PROMPT.V.DCB#
     13434**DCL     16749<<ASSIGN
FPT_SAVE_PROMPT.V_
     13428**DCL     16747<<ASSIGN
FPT_SINPUT
     13493**DCL     16784<<ASSIGN  16798<>CALL
FPT_SINPUT.BUF_
     13500**DCL     16785<<ASSIGN
FPT_SINPUT.V.DCB#
     13505**DCL     16786<<ASSIGN
FPT_SINPUT.V.REREADPOS#
     13512**DCL     16793<<ASSIGN
FPT_TIME
     13525**DCL     16370<>CALL    16611<<ASSIGN  16623<<ASSIGN  17110<<ASSIGN
FPT_TIME.DATE_
     13525**DCL     16613<<ASSIGN
FPT_TIME.DAY_
     13528**DCL     16625<<ASSIGN
FPT_TIME.TIME_
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:369  
     13527**DCL     17112<<ASSIGN
FPT_TIME.V
     13529**DCL     16612--ASSIGN  16624--ASSIGN  17111--ASSIGN
FPT_TIME.V.DEST#
     13529**DCL     16351<<ASSIGN  16353<<ASSIGN  16355<<ASSIGN  16614<<ASSIGN  17113<<ASSIGN  17116>>DOCASE
FPT_TIME.V_
     13525**DCL     16612<<ASSIGN  16624<<ASSIGN  17111<<ASSIGN
FPT_WRITE
     13550**DCL     16733<<ASSIGN  16741<>CALL
FPT_WRITE.BUF_
     13550**DCL     16736<<ASSIGN
FPT_WRITE.BUF_.BOUND
     13550**DCL     16737<<ASSIGN
FPT_WRITE.STATION_
     13552**DCL     13552--REDEF
FPT_WRITE.V
     13553**DCL     16734--ASSIGN
FPT_WRITE.V.DCB#
     13553**DCL     16735<<ASSIGN
FPT_WRITE.V.DVBYTE.BP#
     13559**DCL     16740<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
     13559**DCL     13559--REDEF   16739<<ASSIGN
FPT_WRITE.V_
     13550**DCL     16734<<ASSIGN
FUNC.NTP
     15303**DCL     15549>>ASSIGN  15663>>ASSIGN  16421>>ASSIGN  17631>>ASSIGN  17671>>ASSIGN
FUNC.PREC
     15227**DCL     17628>>IF      17628>>IF
FUN_CODE IN PROCEDURE CHK_BOUNDS
     16060**DCL     16054--PROC    16071>>DOCASE  16116>>DOCASE
GET_ARGS
     15534**PROC    17674--CALL
GET_STRING_SPACE IN PROCEDURE STASH_VALUE
     16311**LABEL   16304--GOTO
GET_VAR
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:370  
     15388**PROC    15518--CALL    16636--CALL
I IN PROCEDURE TIME_FUNCTIONS
     16337**DCL     16346<<DOINDEX
INDX IN PROCEDURE PROCESS_USER_FUNCTIONS
     17257**DCL     17458<<DOINDEX 17459>>ASSIGN  17498>>ASSIGN  17524<<DOINDEX 17525>>ASSIGN
K IN PROCEDURE REDUCE
     15692**DCL     16299<<DOINDEX 16300>>IF      16303>>ASSIGN  17160<<DOINDEX
KEYIN_RESULTS
     13122**DCL     16874--ASSIGN
KEYIN_RESULTS.ARS#
     13124**DCL     16879>>ASSIGN  16887>>ASSIGN
LC2UC
     15381**DCL     16897>>CALLBLT
LEX
     15466**PROC    17561--CALL    17588--CALL    17648--CALL    17659--CALL    17695--CALL
L_INDEX IN PROCEDURE PROCESS_INPUT
     15964**DCL     15974<<CALLBLT 15980>>IF      15986>>IF      15986>>IF      15991>>ASSIGN  15999>>ASSIGN
     16005>>IF      16014>>ASSIGN  16014>>ASSIGN  16015>>ASSIGN  16021<<CALLBLT 16026>>IF      16029>>CALLBLT
     16029>>CALLBLT 16032>>ASSIGN  16037>>ASSIGN
M$FID
      6281**DCL-ENT 15760--CALL
M$GLINEATTR
      6243**DCL-ENT 16986--CALL
M$GPROMPT
      6250**DCL-ENT 16751--CALL
M$KEYIN
      6223**DCL-ENT 16875--CALL
M$MONINFO
      6286**DCL-ENT 17076--CALL    17141--CALL
M$OPEN
      6218**DCL-ENT 15934--CALL
M$PROMPT
      6242**DCL-ENT 16768--CALL    16806--CALL    16848--CALL
M$READ
      6219**DCL-ENT 16800--CALL
M$SINPUT
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:371  
      6245**DCL-ENT 16798--CALL
M$TIME
      6285**DCL-ENT 16370--CALL
M$WRITE
      6219**DCL-ENT 16741--CALL
MCB
     12948**DCL        15--PROC    15444<>CALL    15483<>CALL    15512<>CALL    15579<>CALL    15637<>CALL
     16314<>CALL    16577<>CALL    16599<>CALL    16607<>CALL    16619<>CALL    16630<>CALL    16659<>CALL
     16667<>CALL    16691<>CALL    16702<>CALL    16708<>CALL    16711<>CALL    16822<>CALL    16840<>CALL
     16885<>CALL    16893<>CALL    16900<>CALL    16926<>CALL    16974<>CALL    16990<>CALL    16996<>CALL
     17002<>CALL    17078<>CALL    17085<>CALL    17106<>CALL    17143<>CALL    17149<>CALL    17162<>CALL
     17194<>CALL    17204<>CALL    17439<>CALL    17451<>CALL    17465<>CALL    17471<>CALL    17482<>CALL
     17490<>CALL    17526<>CALL    17529<>CALL
MCB.ADDRESS$
     12948**DCL     15445>>ASSIGN  15513>>ASSIGN  16315>>ASSIGN  16387<<ASSIGN  16578>>ASSIGN  16600>>ASSIGN
     16608>>ASSIGN  16620>>ASSIGN  16631>>ASSIGN  16660>>ASSIGN  16669>>ASSIGN  16692>>ASSIGN  16703>>ASSIGN
     16707<<ASSIGN  16712>>ASSIGN  16823>>ASSIGN  16841>>ASSIGN  16886>>ASSIGN  16894>>ASSIGN  16901>>ASSIGN
     16927>>ASSIGN  16975>>ASSIGN  16991>>ASSIGN  16997>>ASSIGN  17003>>ASSIGN  17079>>ASSIGN  17086>>ASSIGN
     17107>>ASSIGN  17144>>ASSIGN  17150>>ASSIGN  17161<<ASSIGN  17193<<ASSIGN  17203<<ASSIGN  17440>>ASSIGN
     17452>>ASSIGN  17453>>ASSIGN  17454>>ASSIGN  17454>>ASSIGN  17475>>ASSIGN  17476>>ASSIGN  17476>>ASSIGN
     17480>>ASSIGN  17481<<ASSIGN  17483<<ASSIGN  17491>>ASSIGN  17496>>ASSIGN  17497>>ASSIGN  17498>>ASSIGN
     17525<<ASSIGN  17528<<ASSIGN
MCB.ERR
     12949**DCL     15451>>ASSIGN  15529>>ASSIGN  16325>>ASSIGN  17227>>ASSIGN  17539>>ASSIGN
MCB.SIZE
     12948**DCL     15443<<ASSIGN  15505<<ASSIGN  15509<<ASSIGN  15511<<ASSIGN  15514>>ASSIGN  16298<<ASSIGN
     16303<<ASSIGN  16313<<ASSIGN  16313>>ASSIGN  16316>>ASSIGN  16576<<ASSIGN  16598<<ASSIGN  16606<<ASSIGN
     16609>>ASSIGN  16618<<ASSIGN  16621>>ASSIGN  16629<<ASSIGN  16658<<ASSIGN  16666<<ASSIGN  16670>>ASSIGN
     16690<<ASSIGN  16701<<ASSIGN  16710<<ASSIGN  16821<<ASSIGN  16839<<ASSIGN  16884<<ASSIGN  16892<<ASSIGN
     16899<<ASSIGN  16914<<ASSIGN  16917<<ASSIGN  16920<<ASSIGN  16923<<ASSIGN  16928>>ASSIGN  16973<<ASSIGN
     16989<<ASSIGN  16995<<ASSIGN  16998>>ASSIGN  17001<<ASSIGN  17004>>ASSIGN  17077<<ASSIGN  17084<<ASSIGN
     17105<<ASSIGN  17108>>ASSIGN  17142<<ASSIGN  17148<<ASSIGN  17438<<ASSIGN  17450<<ASSIGN  17469<<ASSIGN
     17489<<ASSIGN
MIN_OFFSET IN PROCEDURE TIME_FUNCTIONS
     16343**DCL     16367>>ASSIGN
MORE#
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:372  
     13133**DCL     17623<<ASSIGN  17624>>DOWHILE 17647<<ASSIGN  17664<<ASSIGN  17665>>DOWHILE 17694<<ASSIGN
MULT1 IN PROCEDURE CHK_MULT
     16214**DCL     16209--PROC    16220>>IF      16230>>ASSIGN  16238>>IF
MULT2 IN PROCEDURE CHK_MULT
     16215**DCL     16209--PROC    16223>>IF      16230>>ASSIGN  16235>>IF      16238>>IF
NAME$ IN PROCEDURE LEX
     15471**DCL     15488<<ASSIGN  15493>>IF      15493>>IF      15500>>IF      15500>>IF      15518<>CALL
NARGS IN PROCEDURE PROCESS_USER_FUNCTIONS
     17258**DCL     17437<<ASSIGN  17438>>ASSIGN  17446>>ASSIGN  17458>>DOINDEX 17524>>DOINDEX
NO
     13165**DCL     13164--DCLINIT
NO$
     13164**DCL     17014>>ASSIGN  17045>>ASSIGN  17051>>ASSIGN  17057>>ASSIGN
NUM_ARGS
     13138**DCL     17670<<ASSIGN  17674<>CALL    17691>>ASSIGN
NUM_ARGS IN PROCEDURE GET_ARGS
     15536**DCL     15534--PROC    15600<<ASSIGN  15663<<ASSIGN  15664>>DOINDEX
NUM_TO_POP
     13143**DCL     15549<<ASSIGN  15550>>IF      16421<<ASSIGN  16422>>IF      17631<<ASSIGN  17644>>ASSIGN
     17671<<ASSIGN  17672>>IF
NUM_TO_POP_STACK
     13147**DCL     16346>>DOINDEX 16392>>IF      16936>>IF      16939>>DOINDEX 16945>>IF      16948>>DOINDEX
     17160>>DOINDEX 17644<<ASSIGN  17691<<ASSIGN
OFFSET IN PROCEDURE TIME_FUNCTIONS
     16339**DCL     16364<<ASSIGN  16367<<ASSIGN
ONE
     13157**DCL     13156--DCLINIT
ONE$
     13156**DCL     16287>>ASSIGN  16479>>ASSIGN  16483>>ASSIGN  16487>>ASSIGN  16491>>ASSIGN  16495>>ASSIGN
     16499>>ASSIGN  16510>>ASSIGN  16515>>ASSIGN  16520>>ASSIGN  16525>>ASSIGN  16530>>ASSIGN  16535>>ASSIGN
     16562>>ASSIGN  16586>>ASSIGN  16838<>CALL
ONE_511 IN PROCEDURE REDUCE
     15700**DCL     17124>>ASSIGN
OPEN_TEST_FILE IN PROCEDURE REDUCE
     15771**PROC    16649--CALL    16671--CALL
OP_PTR
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:373  
     13136**DCL     15939>>IF      16346>>DOINDEX 16392>>IF      16403>>DOCASE  16421>>ASSIGN  16425>>DOCASE
     16475>>DOCASE  16505>>DOCASE  16676>>DOCASE  16936>>IF      16939>>DOINDEX 16945>>IF      16948>>DOINDEX
     16962>>IF      16987>>DOCASE  17160>>DOINDEX 17189<<ASSIGN  17189>>ASSIGN  17554<<ASSIGN  17591>>IF
     17628>>IF      17633<<ASSIGN  17633>>ASSIGN  17634>>IF      17643>>ASSIGN  17644>>ASSIGN  17680<<ASSIGN
     17680>>ASSIGN  17681>>IF      17690>>ASSIGN  17691>>ASSIGN
OP_STACK
     13146**DCL     15939>>IF      16403>>DOCASE  16421>>ASSIGN  16425>>DOCASE  16475>>DOCASE  16505>>DOCASE
     16676>>DOCASE  16962>>IF      16987>>DOCASE  17556<<ASSIGN  17591>>IF      17628>>IF      17643<<ASSIGN
     17690<<ASSIGN
ORG_TBL.C
     13245**DCL     16701>>ASSIGN  16704>>ASSIGN
ORG_TBL.CODE
     13211**DCL     16697>>DOWHILE
ORG_TBL.TEXT
     13228**DCL     16705>>ASSIGN
P$ IN PROCEDURE PROCESS_USER_FUNCTIONS
     17260**DCL     17459<<ASSIGN  17463>>IF      17465<>CALL    17496>>ASSIGN  17497>>ASSIGN
P$B.CODE
     12969**DCL     15479>>ASSIGN  15481>>DOCASE  15571>>ASSIGN  15594>>ASSIGN  17441>>ASSIGN  17496>>ASSIGN
P$B.CPOS
     12987**DCL     15480>>ASSIGN  15530>>ASSIGN  15572>>ASSIGN  15595>>ASSIGN  15631>>ASSIGN  15653>>ASSIGN
     17442>>ASSIGN
P$B.NSUBLKS
     12973**DCL     15473>>IF      15553>>DOINDEX 15555>>IF      15600>>ASSIGN  15605>>DOINDEX 15613>>IF
     15664>>DOINDEX 17437>>ASSIGN  17463>>IF
P$B.SUBLK$
     12994**DCL     15478>>ASSIGN  15481>>DOCASE  15554>>ASSIGN  15578>>ASSIGN  15606>>ASSIGN  17459>>ASSIGN
     17657<>CALL
P$S.COUNT
     13030**DCL     13033--IMP-SIZ
P$S.CPOS
     13022**DCL     17497>>ASSIGN
P$S.TEXTC$
     13025**DCL     15486>>ASSIGN  15488>>ASSIGN
PARAM$ IN PROCEDURE PROCESS_USER_FUNCTIONS
     17259**DCL     17440<<ASSIGN  17441>>ASSIGN  17442>>ASSIGN  17443>>ASSIGN  17444>>ASSIGN  17445>>ASSIGN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:374  
     17446>>ASSIGN  17452>>ASSIGN  17498>>ASSIGN  17500>>CALL    17504>>CALL    17516>>ASSIGN  17525>>ASSIGN
     17528>>ASSIGN  17533>>ASSIGN  17534>>ASSIGN  17535>>ASSIGN
PRIV.MASK
     13263**DCL     17048>>IF      17054>>IF
PROCESS_INPUT IN PROCEDURE REDUCE
     15962**PROC    16817--CALL    16880--CALL
PROCESS_USER_FUNCTIONS
     17246**PROC    17657--CALL
PROMPT_VFC.TEXT
     13173**DCL     16731>>CALLBLT
PTR$ IN PROCEDURE PROCESS_USER_FUNCTIONS
     17255**DCL     17246--PROC    17437>>ASSIGN  17441>>ASSIGN  17442>>ASSIGN  17459>>ASSIGN
REDUCE
     15687**PROC    17598--CALL    17651--CALL
RESULT IN PROCEDURE REDUCE
     15702**DCL     17065<<CALLBLT 17067>>IF      17130<<CALLBLT 17132>>IF
R_INDEX IN PROCEDURE PROCESS_INPUT
     15965**DCL     15979<<CALLBLT 15980>>IF      15994>>IF      15994>>IF      16005>>IF      16014>>ASSIGN
     16015>>ASSIGN
SAME_LINE.TEXT
     13175**DCL     16767--ASSIGN
SAVE_PROMPT
     13144**DCL     16748--ASSIGN
SBIN_MAX IN PROCEDURE REDUCE
     15704**DCL     16172>>IF      16189>>IF
SBIN_MIN IN PROCEDURE REDUCE
     15705**DCL     16157>>IF      16160>>IF      16220>>IF      16223>>IF      16231>>IF
SEARCH_TABLE IN PROCEDURE REDUCE
     15698**DCL     17059<<ASSIGN  17062<<ASSIGN  17065>>CALLBLT 17124<<ASSIGN  17127<<ASSIGN  17130>>CALLBLT
SOURCE_SIZE IN PROCEDURE CHK_BOUNDS
     16064**DCL     16075<<ASSIGN  16077<<ASSIGN  16097>>IF      16120>>IF      16123>>ASSIGN  16132>>IF
     16135>>ASSIGN
SPEED_TBL
     13284**DCL     17007>>ASSIGN
START IN PROCEDURE PROCESS_INPUT
     15966**DCL     16019<<ASSIGN  16021>>CALLBLT 16032<<ASSIGN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:375  
STASH_VALUE IN PROCEDURE REDUCE
     16248**PROC    16458--CALL    16650--CALL    16679--CALL    16682--CALL    16685--CALL    16688--CALL
     16721--CALL    16907--CALL    16910--CALL    16934--CALL    16943--CALL    16952--CALL    16971--CALL
     17008--CALL    17072--CALL    17100--CALL    17103--CALL    17137--CALL
STK_PTR IN PROCEDURE TIME_FUNCTIONS
     16338**DCL     16345<<ASSIGN  16347>>DOCASE  16349>>DOSELCT 16349>>DOSELCT 16358>>ASSIGN  16363>>CALL
     16366>>CALL    16380>>ASSIGN
STRIP_BLANKS IN PROCEDURE PROCESS_INPUT
     16050**LABEL   15974--CALLALT 15982--GOTO
SUM IN PROCEDURE CHK_ADD
     16149**DCL     16140--PROC    16175<<ASSIGN  16192<<ASSIGN  16200<<ASSIGN
SUM IN PROCEDURE CHK_MULT
     16216**DCL     16209--PROC    16230<<ASSIGN  16231>>IF      16238>>IF
TBIT
     13134**DCL     16750<<ASSIGN  16753<<ASSIGN  16804>>IF      16846>>IF      17017<<ASSIGN  17021<<ASSIGN
     17023<<ASSIGN  17025<<ASSIGN  17028<<ASSIGN  17031<<ASSIGN  17034<<ASSIGN  17042>>IF
TEMP
     13141**DCL     15462<>CALL    16653<<ASSIGN  16654>>DOWHILE 16654>>DOWHILE 16656<<ASSIGN  16656>>ASSIGN
     16658>>ASSIGN  16661>>ASSIGN  16662>>ASSIGN  16678<<ASSIGN  16679<>CALL    16681<<ASSIGN  16682<>CALL
     16684<<ASSIGN  16685<>CALL    16687<<ASSIGN  16688<>CALL    16696<<ASSIGN  16697>>DOWHILE 16697>>DOWHILE
     16699<<ASSIGN  16699>>ASSIGN  16701>>ASSIGN  16704>>ASSIGN  16705>>ASSIGN  16725<<ASSIGN  16727<<ASSIGN
     16735>>ASSIGN  16749>>ASSIGN  16755--IF      16758--ASSIGN  16766>>ASSIGN  16776>>ASSIGN  16786>>ASSIGN
     16816--ASSIGN  17007<<ASSIGN  17008<>CALL
TEMP IN PROCEDURE STASH_VALUE
     16272**DCL     16295<<ASSIGN  16297<<ASSIGN  16300>>IF
TEMP$
     13129**DCL     16674<<ASSIGN  16675<>CALL    16678>>ASSIGN  16681>>ASSIGN  16681>>ASSIGN  16684>>ASSIGN
     16687>>ASSIGN  16694>>ASSIGN  16697>>DOWHILE
TEMP1 IN PROCEDURE REDUCE
     15690**DCL     16363<>CALL    16364>>ASSIGN  16366<>CALL    16367>>ASSIGN  16424<>CALL    16427<>CALL
     16430<>CALL    16432<>CALL    16440>>ASSIGN  16442>>IF      16446>>IF      16472<>CALL    16477>>IF
     16481>>IF      16485>>IF      16489>>IF      16493>>IF      16497>>IF      16589<<ASSIGN  16591>>IF
     16598>>ASSIGN  16601>>ASSIGN  16717<>CALL    16718>>CALLBLT 16718>>CALLBLT 16720>>ASSIGN  16792<>CALL
     16793>>ASSIGN  16939<<DOINDEX 16940>>CALL    16948<<DOINDEX 16949>>CALL    16961<>CALL    16963>>ASSIGN
     16966>>ASSIGN  16967>>IF      16969>>ASSIGN  17016<<ASSIGN  17018>>DOCASE  17047<<ASSIGN  17048>>IF
     17053<<ASSIGN  17054>>IF      17061<<ASSIGN  17062>>ASSIGN  17064<>CALL    17065>>CALLBLT 17065>>CALLBLT
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:376  
     17071>>ASSIGN  17083<>CALL    17088>>ASSIGN  17126<<ASSIGN  17127>>ASSIGN  17129<>CALL    17130>>CALLBLT
     17130>>CALLBLT 17136>>ASSIGN
TEMP2 IN PROCEDURE REDUCE
     15691**DCL     16420<>CALL    16427<>CALL    16429<<ASSIGN  16429>>ASSIGN  16430<>CALL    16432<>CALL
     16434>>IF      16440>>ASSIGN  16442>>IF      16446>>IF      16450>>IF      16454>>ASSIGN  16456>>ASSIGN
     16473<>CALL    16477>>IF      16481>>IF      16485>>IF      16489>>IF      16493>>IF      16497>>IF
     16717<>CALL    16718>>CALLBLT 16940<>CALL    16941>>ASSIGN  16949<>CALL    16950>>ASSIGN  16954<>CALL
     16955>>IF      16962>>IF      16963>>ASSIGN  16966>>ASSIGN  16967>>IF      16969>>ASSIGN  17060<<DOINDEX
     17061>>ASSIGN  17064<>CALL    17065>>CALLBLT 17083<>CALL    17084>>ASSIGN  17087>>ASSIGN  17088>>ASSIGN
     17091<>CALL    17092>>IF      17099>>ASSIGN  17125<<DOINDEX 17126>>ASSIGN  17129<>CALL    17130>>CALLBLT
TEMP3
     13142**DCL     16966<<ASSIGN  16968<<ASSIGN  16968>>ASSIGN  16969>>ASSIGN
TEMPBUF IN PROCEDURE REDUCE
     15694**DCL     16050--CALL
TEMPBUF.SIZ IN PROCEDURE REDUCE
     15695**DCL     15968>>IF      15994>>IF      16008<<ASSIGN  16015<<ASSIGN  16031<<ASSIGN  16031>>ASSIGN
     16816<<ASSIGN  16821>>ASSIGN  16824>>ASSIGN  16825>>IF      16879<<ASSIGN  16884>>ASSIGN  16888>>IF
TEMPBUF.TEXT IN PROCEDURE REDUCE
     15696**DCL     15974>>CALLBLT 15979>>CALLBLT 15986>>IF      15994>>IF      16014<<ASSIGN  16014>>ASSIGN
     16021>>CALLBLT 16026>>IF      16029<<CALLBLT 16029>>CALLBLT 16731<<CALLBLT 16736--ASSIGN  16772<<ASSIGN
     16775--ASSIGN  16827>>ASSIGN  16873--ASSIGN  16890>>ASSIGN  16915<<ASSIGN  16918<<ASSIGN  16921<<ASSIGN
     16924<<ASSIGN  16929>>ASSIGN
TEMP_ADDR$ IN PROCEDURE PROCESS_USER_FUNCTIONS
     17262**DCL     17480<<ASSIGN  17483>>ASSIGN
TEST_VAR IN PROCEDURE GET_VAR
     15457**ENTRY   16584--CALL
TIME_FUNCTIONS IN PROCEDURE REDUCE
     16329**PROC    16615--CALL    16626--CALL    17114--CALL
TOKEN
     13140**DCL     15549>>ASSIGN  15663>>ASSIGN  17561<>CALL    17567>>DOCASE  17584>>ASSIGN  17588<>CALL
     17628>>IF      17631>>ASSIGN  17643>>ASSIGN  17648<>CALL    17659<>CALL    17671>>ASSIGN  17690>>ASSIGN
     17695<>CALL
TOKEN IN PROCEDURE LEX
     15468**DCL     15466--PROC    15475<<ASSIGN  15479<<ASSIGN
TOKEN_INDX
     13139**DCL     15472<<ASSIGN  15472>>ASSIGN  15473>>IF      15478>>ASSIGN  15481>>DOCASE  17557<<ASSIGN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:377  
TOKEN_PTR$
     13128**DCL     15478<<ASSIGN  15479>>ASSIGN  15480>>ASSIGN  15483<>CALL    15486>>ASSIGN  15488>>ASSIGN
     15530>>ASSIGN  15553>>DOINDEX 15554>>ASSIGN  15600>>ASSIGN  15605>>DOINDEX 15606>>ASSIGN  15664>>DOINDEX
     17657>>CALL
TREE$
     13126**DCL        15--PROC    15473>>IF      15478>>ASSIGN  15481>>DOCASE
U$STRING.TEXT
     13113**DCL     17061>>ASSIGN  17126>>ASSIGN
UBIN1 IN PROCEDURE CHK_ADD
     16151**DCL     16169<<ASSIGN  16171>>ASSIGN  16186<<ASSIGN  16188>>ASSIGN
UBIN2 IN PROCEDURE CHK_ADD
     16152**DCL     16170<<ASSIGN  16171>>ASSIGN  16187<<ASSIGN  16188>>ASSIGN
UBIN3 IN PROCEDURE CHK_ADD
     16153**DCL     16171<<ASSIGN  16172>>IF      16175>>ASSIGN  16188<<ASSIGN  16189>>IF      16192>>ASSIGN
UC2LC
     15385**DCL     16904>>CALLBLT
VALUE IN PROCEDURE REDUCE
     15689**DCL     16385<<ASSIGN  16427<>CALL    16430<>CALL    16432<>CALL    16440<<ASSIGN  16444<<ASSIGN
     16448<<ASSIGN  16452<<ASSIGN  16454<<ASSIGN  16456<<ASSIGN  16458<>CALL    16649<>CALL    16650<>CALL
     16671<>CALL    16672>>IF      16720<<ASSIGN  16721<>CALL    16906<<ASSIGN  16907<>CALL    16909<<ASSIGN
     16910<>CALL    16931<>CALL    16932>>IF      16933<<ASSIGN  16933>>ASSIGN  16934<>CALL    16938<>CALL
     16941<<ASSIGN  16941>>ASSIGN  16943<>CALL    16947<>CALL    16950<<ASSIGN  16950>>ASSIGN  16952<>CALL
     16963<<ASSIGN  16969<<ASSIGN  16971<>CALL    17069<<ASSIGN  17071<<ASSIGN  17072<>CALL    17099<<ASSIGN
     17100<>CALL    17102<<ASSIGN  17103<>CALL    17134<<ASSIGN  17136<<ASSIGN  17137<>CALL
VALUE IN PROCEDURE STASH_VALUE
     16259**DCL     16248--PROC    16278>>IF      16284>>IF      16293>>IF      16295>>ASSIGN  16297>>ASSIGN
     16311>>IF      16317>>IF      16319>>CALLBLT 16321>>CALLBLT
VALUE$
     13127**DCL     15557<<ASSIGN  15570>>ASSIGN  15580<<ASSIGN  15593>>ASSIGN  16386<<ASSIGN  16458<>CALL
     16479<<ASSIGN  16483<<ASSIGN  16487<<ASSIGN  16491<<ASSIGN  16495<<ASSIGN  16499<<ASSIGN  16510<<ASSIGN
     16515<<ASSIGN  16520<<ASSIGN  16525<<ASSIGN  16530<<ASSIGN  16535<<ASSIGN  16562<<ASSIGN  16565<<ASSIGN
     16578<<ASSIGN  16579>>ASSIGN  16580>>ASSIGN  16580>>ASSIGN  16581<>CALL    16583<<ASSIGN  16586<<ASSIGN
     16600<<ASSIGN  16601>>ASSIGN  16602>>CALLBLT 16602>>CALLBLT 16608<<ASSIGN  16609>>ASSIGN  16610>>ASSIGN
     16610>>ASSIGN  16613>>ASSIGN  16613>>ASSIGN  16616<>CALL    16620<<ASSIGN  16621>>ASSIGN  16622>>ASSIGN
     16622>>ASSIGN  16625>>ASSIGN  16625>>ASSIGN  16627<>CALL    16631<<ASSIGN  16632>>ASSIGN  16633>>ASSIGN
     16633>>ASSIGN  16634<>CALL    16636<>CALL    16650<>CALL    16660<<ASSIGN  16661>>ASSIGN  16662>>ASSIGN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:378  
     16662>>ASSIGN  16679<>CALL    16682<>CALL    16685<>CALL    16688<>CALL    16692<<ASSIGN  16693>>ASSIGN
     16694>>ASSIGN  16694>>ASSIGN  16703<<ASSIGN  16704>>ASSIGN  16705>>ASSIGN  16705>>ASSIGN  16712<<ASSIGN
     16713>>ASSIGN  16714>>ASSIGN  16714>>ASSIGN  16715<>CALL    16721<>CALL    16823<<ASSIGN  16824>>ASSIGN
     16827>>ASSIGN  16827>>ASSIGN  16841<<ASSIGN  16842>>ASSIGN  16886<<ASSIGN  16887>>ASSIGN  16890>>ASSIGN
     16890>>ASSIGN  16894<<ASSIGN  16895>>ASSIGN  16896>>ASSIGN  16896>>ASSIGN  16897>>CALLBLT 16897>>CALLBLT
     16897>>CALLBLT 16897>>CALLBLT 16901<<ASSIGN  16902>>ASSIGN  16903>>ASSIGN  16903>>ASSIGN  16904>>CALLBLT
     16904>>CALLBLT 16904>>CALLBLT 16904>>CALLBLT 16907<>CALL    16910<>CALL    16927<<ASSIGN  16928>>ASSIGN
     16929>>ASSIGN  16929>>ASSIGN  16934<>CALL    16943<>CALL    16952<>CALL    16971<>CALL    16975<<ASSIGN
     16976>>ASSIGN  16977>>ASSIGN  16977>>ASSIGN  16978<>CALL    16991<<ASSIGN  16992>>ASSIGN  16993>>ASSIGN
     16993>>ASSIGN  16997<<ASSIGN  16998>>ASSIGN  16999>>ASSIGN  16999>>ASSIGN  17003<<ASSIGN  17004>>ASSIGN
     17005>>ASSIGN  17005>>ASSIGN  17008<>CALL    17012<<ASSIGN  17014<<ASSIGN  17043<<ASSIGN  17045<<ASSIGN
     17049<<ASSIGN  17051<<ASSIGN  17055<<ASSIGN  17057<<ASSIGN  17072<>CALL    17079<<ASSIGN  17080>>ASSIGN
     17081>>ASSIGN  17081>>ASSIGN  17086<<ASSIGN  17087>>ASSIGN  17088>>ASSIGN  17088>>ASSIGN  17100<>CALL
     17103<>CALL    17107<<ASSIGN  17108>>ASSIGN  17109>>ASSIGN  17109>>ASSIGN  17112>>ASSIGN  17112>>ASSIGN
     17115<>CALL    17118>>ASSIGN  17121>>ASSIGN  17137<>CALL    17144<<ASSIGN  17145>>ASSIGN  17146>>ASSIGN
     17146>>ASSIGN  17150<<ASSIGN  17151>>ASSIGN  17152>>ASSIGN  17152>>ASSIGN  17153<>CALL    17180>>ASSIGN
     17561<>CALL    17583>>ASSIGN  17588<>CALL    17648<>CALL    17659<>CALL    17695<>CALL
VALUE$ IN PROCEDURE GET_VAR
     15394**DCL     15388--PROC    15445<<ASSIGN  15446>>ASSIGN  15447>>ASSIGN  15447>>ASSIGN
VALUE$ IN PROCEDURE LEX
     15469**DCL     15466--PROC    15484<<ASSIGN  15486<<ASSIGN  15513<<ASSIGN  15514>>ASSIGN  15515>>CALLBLT
     15515>>CALLBLT 15518<>CALL
VALUE$ IN PROCEDURE STASH_VALUE
     16260**DCL     16248--PROC    16281<<ASSIGN  16287<<ASSIGN  16315<<ASSIGN  16316>>ASSIGN  16319>>CALLBLT
     16319>>CALLBLT 16321>>CALLBLT 16321>>CALLBLT
VAL_PTR
     13137**DCL     15560<<ASSIGN  15560>>ASSIGN  15561>>IF      15570>>ASSIGN  15571>>ASSIGN  15572>>ASSIGN
     15583<<ASSIGN  15583>>ASSIGN  15584>>IF      15593>>ASSIGN  15594>>ASSIGN  15595>>ASSIGN  15619<<ASSIGN
     15619>>ASSIGN  15620>>IF      15629>>ASSIGN  15630>>ASSIGN  15631>>ASSIGN  15641<<ASSIGN  15641>>ASSIGN
     15642>>IF      15651>>ASSIGN  15652>>ASSIGN  15653>>ASSIGN  15666<<ASSIGN  15666>>ASSIGN  15667>>IF
     15676>>ASSIGN  15677>>ASSIGN  15678>>ASSIGN  15739>>IF      15743>>ASSIGN  15750>>ASSIGN  15750>>ASSIGN
     15765>>ASSIGN  15904>>ASSIGN  15956>>ASSIGN  16075>>ASSIGN  16077>>ASSIGN  16082>>CALL    16085>>ASSIGN
     16088>>CALL    16091>>ASSIGN  16101>>ASSIGN  16108>>ASSIGN  16128>>ASSIGN  16132>>IF      16345>>ASSIGN
     16375>>ASSIGN  16392>>IF      16420>>CALL    16424>>CALL    16472>>CALL    16473>>CALL    16503>>CALL
     16504>>CALL    16507>>IF      16507>>IF      16507>>IF      16507>>IF      16512>>IF      16512>>IF
     16512>>IF      16512>>IF      16517>>IF      16517>>IF      16517>>IF      16517>>IF      16522>>IF
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:379  
     16522>>IF      16522>>IF      16522>>IF      16527>>IF      16527>>IF      16527>>IF      16527>>IF
     16532>>IF      16532>>IF      16532>>IF      16532>>IF      16542>>CALL    16542>>CALL    16542>>CALL
     16542>>CALL    16547>>CALL    16547>>CALL    16547>>CALL    16547>>CALL    16552>>CALL    16552>>CALL
     16552>>CALL    16552>>CALL    16557>>CALL    16557>>CALL    16557>>CALL    16557>>CALL    16568>>ASSIGN
     16584>>CALL    16589>>ASSIGN  16589>>ASSIGN  16595>>ASSIGN  16602>>CALLBLT 16602>>CALLBLT 16602>>CALLBLT
     16602>>CALLBLT 16636>>CALL    16718>>CALLBLT 16718>>CALLBLT 16718>>CALLBLT 16718>>CALLBLT 16728>>IF
     16731>>CALLBLT 16731>>CALLBLT 16737>>ASSIGN  16780>>IF      16780>>IF      16785>>ASSIGN  16785>>ASSIGN
     16790>>IF      16792>>CALL    16856>>IF      16860>>ASSIGN  16863>>IF      16867>>ASSIGN  16872>>ASSIGN
     16872>>ASSIGN  16892>>ASSIGN  16895>>ASSIGN  16896>>ASSIGN  16896>>ASSIGN  16899>>ASSIGN  16902>>ASSIGN
     16903>>ASSIGN  16903>>ASSIGN  16909>>ASSIGN  16931>>CALL    16938>>CALL    16940>>CALL    16947>>CALL
     16949>>CALL    16954>>CALL    16958>>ASSIGN  16961>>CALL    17016>>ASSIGN  17047>>ASSIGN  17053>>ASSIGN
     17060>>DOINDEX 17061>>ASSIGN  17065>>CALLBLT 17065>>CALLBLT 17069>>ASSIGN  17088>>ASSIGN  17088>>ASSIGN
     17091>>CALL    17096>>ASSIGN  17125>>DOINDEX 17126>>ASSIGN  17130>>CALLBLT 17130>>CALLBLT 17134>>ASSIGN
     17161>>ASSIGN  17163<<ASSIGN  17163>>ASSIGN  17170<<ASSIGN  17170>>ASSIGN  17171>>IF      17180>>ASSIGN
     17181>>ASSIGN  17182>>ASSIGN  17200>>ASSIGN  17210>>ASSIGN  17215>>ASSIGN  17232>>ASSIGN  17237>>ASSIGN
     17242>>ASSIGN  17506<<ASSIGN  17506>>ASSIGN  17507>>IF      17516>>ASSIGN  17517>>ASSIGN  17518>>ASSIGN
     17555<<ASSIGN  17573<<ASSIGN  17573>>ASSIGN  17574>>IF      17583>>ASSIGN  17584>>ASSIGN  17585>>ASSIGN
     17594>>ASSIGN
VAL_STACK$
     13148**DCL     15570<<ASSIGN  15593<<ASSIGN  15629<<ASSIGN  15651<<ASSIGN  15676<<ASSIGN  15739>>IF
     15750>>ASSIGN  15750>>ASSIGN  16075>>ASSIGN  16077>>ASSIGN  16082<>CALL    16088<>CALL    16349>>DOSELCT
     16349>>DOSELCT 16363<>CALL    16366<>CALL    16420<>CALL    16424<>CALL    16472<>CALL    16473<>CALL
     16503<>CALL    16504<>CALL    16507>>IF      16507>>IF      16507>>IF      16507>>IF      16512>>IF
     16512>>IF      16512>>IF      16512>>IF      16517>>IF      16517>>IF      16517>>IF      16517>>IF
     16522>>IF      16522>>IF      16522>>IF      16522>>IF      16527>>IF      16527>>IF      16527>>IF
     16527>>IF      16532>>IF      16532>>IF      16532>>IF      16532>>IF      16542>>CALL    16542>>CALL
     16542>>CALL    16542>>CALL    16547>>CALL    16547>>CALL    16547>>CALL    16547>>CALL    16552>>CALL
     16552>>CALL    16552>>CALL    16552>>CALL    16557>>CALL    16557>>CALL    16557>>CALL    16557>>CALL
     16584<>CALL    16589>>ASSIGN  16589>>ASSIGN  16602>>CALLBLT 16602>>CALLBLT 16602>>CALLBLT 16602>>CALLBLT
     16718>>CALLBLT 16718>>CALLBLT 16718>>CALLBLT 16718>>CALLBLT 16728>>IF      16731>>CALLBLT 16731>>CALLBLT
     16737>>ASSIGN  16780>>IF      16785>>ASSIGN  16785>>ASSIGN  16792<>CALL    16856>>IF      16863>>IF
     16872>>ASSIGN  16872>>ASSIGN  16892>>ASSIGN  16895>>ASSIGN  16896>>ASSIGN  16896>>ASSIGN  16899>>ASSIGN
     16902>>ASSIGN  16903>>ASSIGN  16903>>ASSIGN  16909>>ASSIGN  16931<>CALL    16938<>CALL    16940<>CALL
     16947<>CALL    16949<>CALL    16954<>CALL    16961<>CALL    17060>>DOINDEX 17061>>ASSIGN  17065>>CALLBLT
     17065>>CALLBLT 17069>>ASSIGN  17088>>ASSIGN  17088>>ASSIGN  17091<>CALL    17125>>DOINDEX 17126>>ASSIGN
     17130>>CALLBLT 17130>>CALLBLT 17134>>ASSIGN  17161>>ASSIGN  17180<<ASSIGN  17516<<ASSIGN  17583<<ASSIGN
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:380  
     17594>>ASSIGN
VAL_TYPE
     13149**DCL     15571<<ASSIGN  15594<<ASSIGN  15630<<ASSIGN  15652<<ASSIGN  15677<<ASSIGN  16132>>IF
     16347>>DOCASE  16780>>IF      16790>>IF      17016>>ASSIGN  17047>>ASSIGN  17053>>ASSIGN  17181<<ASSIGN
     17517<<ASSIGN  17584<<ASSIGN
VAR_NAME.L# IN PROCEDURE GET_VAR
     15402**DCL     15402--IMP-SIZ
VAR_NAME$ IN PROCEDURE GET_VAR
     15393**DCL     15388--PROC    15402--IMP-PTR 15439<>CALL    15457--ENTRY   15462<>CALL
VAR_VALUE IN PROCEDURE GET_VAR
     15429**DCL     15439--CALL    15462--CALL
VAR_VALUE.L# IN PROCEDURE GET_VAR
     15429**DCL     15435<<ASSIGN  15443>>ASSIGN  15446>>ASSIGN  15461<<ASSIGN
VAR_VALUE.NAME# IN PROCEDURE GET_VAR
     15429**DCL     15435--ASSIGN  15447>>ASSIGN  15461--ASSIGN
VLP_LINEATTR
     13605**DCL     16985--ASSIGN
VLP_LINEATTR.LINESPEED#
     13606**DCL     17007>>ASSIGN
VLP_LINEATTR.NODE#
     13608**DCL     16999>>ASSIGN
VLP_LINEATTR.PORT#
     13608**DCL     17005>>ASSIGN
VLP_LINEATTR.PROFILE#
     13607**DCL     13607--REDEF
VLP_LINEATTR.PROTXTC.CNT
     13607**DCL     16989>>ASSIGN  16992>>ASSIGN
VLP_LINEATTR.PROTXTC.TXT
     13608**DCL     16993>>ASSIGN
VLR_SITEINFO
     13622**DCL     17075--ASSIGN  17140--ASSIGN
VLR_SITEINFO.SITE_NAME#.C
     13623**DCL     17081>>ASSIGN
VLR_SITEINFO.SITE_NAME#.L
     13623**DCL     17077>>ASSIGN  17080>>ASSIGN
VLR_SITEINFO.VERSION#
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:381  
     13625**DCL     17142--ASSIGN  17145--ASSIGN  17146>>ASSIGN
WASTE_EM IN PROCEDURE OPEN_TEST_FILE
     15957**LABEL   15889--CALLALT
WHERE IN PROCEDURE REDUCE
     15701**DCL     16718<<CALLBLT 16720>>ASSIGN  17065<<CALLBLT 17071>>ASSIGN  17130<<CALLBLT 17136>>ASSIGN
WILD_AND_CRAZY IN PROCEDURE REDUCE
     16559**LABEL   16542--CALLALT 16545--GOTO    16547--CALLALT 16550--GOTO    16552--CALLALT 16555--GOTO
     16557--CALLALT
X$ALLOCATE
     13328**DCL-ENT 15444--CALL    15512--CALL    16314--CALL    16577--CALL    16599--CALL    16607--CALL
     16619--CALL    16630--CALL    16659--CALL    16667--CALL    16691--CALL    16702--CALL    16711--CALL
     16822--CALL    16840--CALL    16885--CALL    16893--CALL    16900--CALL    16926--CALL    16974--CALL
     16990--CALL    16996--CALL    17002--CALL    17078--CALL    17085--CALL    17106--CALL    17143--CALL
     17149--CALL    17439--CALL    17451--CALL    17471--CALL    17490--CALL
X$DEALLOCATE
     13331**DCL-ENT 16708--CALL    17162--CALL    17194--CALL    17204--CALL    17482--CALL    17526--CALL
     17529--CALL
X$DEC_CONVERT
     13317**DCL-ENT 16082--CALL    16088--CALL    16363--CALL    16366--CALL    16420--CALL    16424--CALL
     16472--CALL    16473--CALL    16792--CALL    16931--CALL    16938--CALL    16940--CALL    16947--CALL
     16949--CALL    16954--CALL    16961--CALL    17091--CALL
X$EVALUATE
        15**PROC    15483--CALL    15579--CALL    15637--CALL    17465--CALL
X$GET_VAR
     13310**DCL-ENT 15439--CALL    15462--CALL
X$PUT_VAR
     13311**DCL-ENT 16838--CALL
X$STRING
     13107**DCL     16542<>CALL    16542<>CALL    16547<>CALL    16547<>CALL    16552<>CALL    16552<>CALL
     16557<>CALL    16557<>CALL
X$STRING.SIZ
     13108**DCL     13109--IMP-SIZ 15446<<ASSIGN  15447>>ASSIGN  15493>>IF      15500>>IF      15514<<ASSIGN
     15515>>CALLBLT 15739>>IF      15750>>ASSIGN  16075>>ASSIGN  16077>>ASSIGN  16316<<ASSIGN  16319>>CALLBLT
     16321>>CALLBLT 16349>>DOSELCT 16507>>IF      16507>>IF      16512>>IF      16512>>IF      16517>>IF
     16517>>IF      16522>>IF      16522>>IF      16527>>IF      16527>>IF      16532>>IF      16532>>IF
     16542>>CALL    16542>>CALL    16547>>CALL    16547>>CALL    16552>>CALL    16552>>CALL    16557>>CALL
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:382  
     16557>>CALL    16579<<ASSIGN  16580>>ASSIGN  16589>>ASSIGN  16589>>ASSIGN  16601<<ASSIGN  16602>>CALLBLT
     16602>>CALLBLT 16602>>CALLBLT 16609<<ASSIGN  16610>>ASSIGN  16613>>ASSIGN  16621<<ASSIGN  16622>>ASSIGN
     16625>>ASSIGN  16632<<ASSIGN  16633>>ASSIGN  16661<<ASSIGN  16662>>ASSIGN  16693<<ASSIGN  16694>>ASSIGN
     16704<<ASSIGN  16705>>ASSIGN  16713<<ASSIGN  16714>>ASSIGN  16718>>CALLBLT 16718>>CALLBLT 16728>>IF
     16731>>CALLBLT 16737>>ASSIGN  16780>>IF      16785>>ASSIGN  16824<<ASSIGN  16827>>ASSIGN  16842<<ASSIGN
     16856>>IF      16863>>IF      16872>>ASSIGN  16887<<ASSIGN  16890>>ASSIGN  16892>>ASSIGN  16895<<ASSIGN
     16895>>ASSIGN  16896>>ASSIGN  16896>>ASSIGN  16897>>CALLBLT 16897>>CALLBLT 16899>>ASSIGN  16902<<ASSIGN
     16902>>ASSIGN  16903>>ASSIGN  16903>>ASSIGN  16904>>CALLBLT 16904>>CALLBLT 16909>>ASSIGN  16928<<ASSIGN
     16929>>ASSIGN  16976<<ASSIGN  16977>>ASSIGN  16992<<ASSIGN  16993>>ASSIGN  16998<<ASSIGN  16999>>ASSIGN
     17004<<ASSIGN  17005>>ASSIGN  17060>>DOINDEX 17065>>CALLBLT 17069>>ASSIGN  17080<<ASSIGN  17081>>ASSIGN
     17087<<ASSIGN  17088>>ASSIGN  17088>>ASSIGN  17108<<ASSIGN  17109>>ASSIGN  17112>>ASSIGN  17118<<ASSIGN
     17121<<ASSIGN  17125>>DOINDEX 17130>>CALLBLT 17134>>ASSIGN  17145<<ASSIGN  17146>>ASSIGN  17151<<ASSIGN
     17152>>ASSIGN  17453<<ASSIGN  17454>>ASSIGN  17469>>ASSIGN  17475>>ASSIGN  17476>>ASSIGN
X$STRING.TEXT
     13109**DCL     15447<<ASSIGN  15493>>IF      15500>>IF      15515<<CALLBLT 15750--ASSIGN  16319<<CALLBLT
     16321<<CALLBLT 16349>>DOSELCT 16507>>IF      16507>>IF      16512>>IF      16512>>IF      16517>>IF
     16517>>IF      16522>>IF      16522>>IF      16527>>IF      16527>>IF      16532>>IF      16532>>IF
     16580<<ASSIGN  16602<<CALLBLT 16602>>CALLBLT 16602>>CALLBLT 16610<<ASSIGN  16613--ASSIGN  16622<<ASSIGN
     16625--ASSIGN  16633<<ASSIGN  16662<<ASSIGN  16694<<ASSIGN  16705<<ASSIGN  16714<<ASSIGN  16718>>CALLBLT
     16718>>CALLBLT 16731>>CALLBLT 16785--ASSIGN  16827<<ASSIGN  16872--ASSIGN  16890<<ASSIGN  16896<<ASSIGN
     16896>>ASSIGN  16897<<CALLBLT 16897>>CALLBLT 16903<<ASSIGN  16903>>ASSIGN  16904<<CALLBLT 16904>>CALLBLT
     16929<<ASSIGN  16977<<ASSIGN  16993<<ASSIGN  16999<<ASSIGN  17005<<ASSIGN  17065>>CALLBLT 17081<<ASSIGN
     17088<<ASSIGN  17088>>ASSIGN  17109<<ASSIGN  17112--ASSIGN  17130>>CALLBLT 17146<<ASSIGN  17152<<ASSIGN
     17454<<ASSIGN  17476>>ASSIGN
X$STRIP_BLANKS
     13314**DCL-ENT 16050--CALL    16503--CALL    16504--CALL    16581--CALL    16616--CALL    16627--CALL
     16634--CALL    16715--CALL    16978--CALL    17115--CALL    17153--CALL    17504--CALL
X$WILDTCMP
     13343**DCL-ENT 16542--CALL    16547--CALL    16552--CALL    16557--CALL
XSF$LOCCODP
     13346**DCL-ENT 16675--CALL
XUE$FUNPARAM IN PROCEDURE PROCESS_USER_FUNCTIONS
     17278**DCL     17438--ASSIGN  17500<>CALL
XUE$FUNPARAM.CODE# IN PROCEDURE PROCESS_USER_FUNCTIONS
     17282**DCL     17441<<ASSIGN
XUE$FUNPARAM.CPOS# IN PROCEDURE PROCESS_USER_FUNCTIONS
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:383  
     17289**DCL     17442<<ASSIGN
XUE$FUNPARAM.ERR IN PROCEDURE PROCESS_USER_FUNCTIONS
     17312**DCL     17445<<ASSIGN  17533>>ASSIGN
XUE$FUNPARAM.ERR_DCB# IN PROCEDURE PROCESS_USER_FUNCTIONS
     17304**DCL     17444<<ASSIGN  17535>>ASSIGN
XUE$FUNPARAM.ERR_POS# IN PROCEDURE PROCESS_USER_FUNCTIONS
     17295**DCL     17443<<ASSIGN  17534>>ASSIGN
XUE$FUNPARAM.NOPTS# IN PROCEDURE PROCESS_USER_FUNCTIONS
     17344**DCL     17446<<ASSIGN
XUE$FUNPARAM.OPTION$ IN PROCEDURE PROCESS_USER_FUNCTIONS
     17358**DCL     17498<<ASSIGN  17525>>ASSIGN
XUE$FUNPARAM.OUT$ IN PROCEDURE PROCESS_USER_FUNCTIONS
     17327**DCL     17452<<ASSIGN  17504<>CALL    17516>>ASSIGN
XUE$OPTION.CODE# IN PROCEDURE PROCESS_USER_FUNCTIONS
     17386**DCL     17496<<ASSIGN
XUE$OPTION.COUNT# IN PROCEDURE PROCESS_USER_FUNCTIONS
     17399**DCL     17414--IMP-SIZ 17475<<ASSIGN  17476>>ASSIGN  17491<<ASSIGN
XUE$OPTION.CPOS# IN PROCEDURE PROCESS_USER_FUNCTIONS
     17392**DCL     17497<<ASSIGN
XUE$OPTION.TEXT# IN PROCEDURE PROCESS_USER_FUNCTIONS
     17414**DCL     17476<<ASSIGN
XUE_ECB
     12759**DCL        15--PROC    15439<>CALL    15462<>CALL    15483<>CALL    15579<>CALL    15637<>CALL
     16838<>CALL    17465<>CALL
XUE_ECB.ERR
     12843**DCL     15451<<ASSIGN  15496<<ASSIGN  15529<<ASSIGN  15564<<ASSIGN  15587<<ASSIGN  15623<<ASSIGN
     15645<<ASSIGN  15670<<ASSIGN  15742<<ASSIGN  15764<<ASSIGN  15896<<ASSIGN  15903<<ASSIGN  15955<<ASSIGN
     15990<<ASSIGN  15998<<ASSIGN  16036<<ASSIGN  16084<<ASSIGN  16090<<ASSIGN  16100<<ASSIGN  16107<<ASSIGN
     16127<<ASSIGN  16325<<ASSIGN  16357<<ASSIGN  16374<<ASSIGN  16379<<ASSIGN  16395<<ASSIGN  16437<<ASSIGN
     16542<>CALL    16547<>CALL    16552<>CALL    16557<>CALL    16594<<ASSIGN  16859<<ASSIGN  16866<<ASSIGN
     16957<<ASSIGN  17095<<ASSIGN  17174<<ASSIGN  17198<<ASSIGN  17209<<ASSIGN  17214<<ASSIGN  17222<<ASSIGN
     17227<<ASSIGN  17231<<ASSIGN  17236<<ASSIGN  17241<<ASSIGN  17431<<ASSIGN  17510<<ASSIGN  17533<<ASSIGN
     17539<<ASSIGN  17577<<ASSIGN  17637<<ASSIGN  17684<<ASSIGN
XUE_ECB.ERR.CODE
     12847**DCL     16561>>IF      16564>>IF
XUE_ECB.ERR_DCB#
PL6.E3A0      #002=X$EVALUATE File=XUE$EVAL.:E05TSI                              WED 07/30/97 09:12 Page:384  
     12835**DCL     15766<<ASSIGN  15957<<ASSIGN  17199<<ASSIGN  17223<<ASSIGN  17535<<ASSIGN
XUE_ECB.ERR_POS#
     12826**DCL     15497<<ASSIGN  15530<<ASSIGN  15565<<ASSIGN  15588<<ASSIGN  15624<<ASSIGN  15646<<ASSIGN
     15671<<ASSIGN  15743<<ASSIGN  15765<<ASSIGN  15904<<ASSIGN  15956<<ASSIGN  15991<<ASSIGN  15999<<ASSIGN
     16037<<ASSIGN  16085<<ASSIGN  16091<<ASSIGN  16101<<ASSIGN  16108<<ASSIGN  16128<<ASSIGN  16358<<ASSIGN
     16375<<ASSIGN  16380<<ASSIGN  16396<<ASSIGN  16568<<ASSIGN  16595<<ASSIGN  16860<<ASSIGN  16867<<ASSIGN
     16958<<ASSIGN  17096<<ASSIGN  17175<<ASSIGN  17200<<ASSIGN  17210<<ASSIGN  17215<<ASSIGN  17232<<ASSIGN
     17237<<ASSIGN  17242<<ASSIGN  17511<<ASSIGN  17534<<ASSIGN  17578<<ASSIGN  17638<<ASSIGN  17685<<ASSIGN
XUE_ECB.FUN$$
     12798**DCL     17428>>IF      17500>>CALL
XUE_ECB.INPUT_DCB#
     12939**DCL     16723>>IF      16727>>ASSIGN
XUE_ECB.INTERNAL.RESET_EOF#
     12919**DCL     16646<<ASSIGN  16812<<ASSIGN
XUE_ECB.OUT$
     12791**DCL     15484>>ASSIGN  15580>>ASSIGN  15651>>ASSIGN  17469>>ASSIGN  17475>>ASSIGN  17476>>ASSIGN
     17476>>ASSIGN  17481>>ASSIGN  17594<<ASSIGN
XUE_ECB.RESULTS
     12904**DCL     17553<<ASSIGN
XUE_ECB.RESULTS.PROMPT#
     12905**DCL     16762<<ASSIGN  16807<<ASSIGN  16849<<ASSIGN
XUE_ECB.WORK_DCB#
     12781**DCL     15893--IF      15929>>ASSIGN
YES
     13161**DCL     13160--DCLINIT
YES$
     13160**DCL     17012>>ASSIGN  17043>>ASSIGN  17049>>ASSIGN  17055>>ASSIGN
ZERO
     13153**DCL     13152--DCLINIT
ZERO$
     13152**DCL     15557>>ASSIGN  15629>>ASSIGN  15676>>ASSIGN  16281>>ASSIGN  16386>>ASSIGN  16565>>ASSIGN
     16583>>ASSIGN
ZERO_511 IN PROCEDURE REDUCE
     15699**DCL     17059>>ASSIGN

PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:385  
     2501        1        /*T***********************************************************/
     2502        2        /*T*                                                         */
     2503        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2504        4        /*T*                                                         */
     2505        5        /*T***********************************************************/
     2506        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2507        7        /*F*    NAME:          X$GET_VAR
     2508        8                PURPOSE:       To retrieve the value for a specified VARIABLE.
     2509        9                DESCRIPTION:   COMMAND VARIABLES are stored in the *S
     2510       10                               file.
     2511       11        */
     2512       12        X$GET_VAR: PROC (VAR_NAME$,VALUE$,XUE_ECB,CHARPOS,TYPE) ALTRET;
     2513       13        /***** INCLUDES *****/
     2514       14          %INCLUDE B_MACROS_C;
     2515      125          %INCLUDE CP_6;
     2516     5684          %INCLUDE CP_6_SUBS;
     2517     6224          %INCLUDE XU_MACRO_C;
     2518     9330          %INCLUDE XU_PERR_C;
     2519     9521          %INCLUDE XUE_SUBS_C;
     2520     9701          %INCLUDE XUE_MACRO_C;
     2521    10445        /***** Parameters *****/
     2522    10446    1   DCL VAR_NAME$ PTR;
     2523    10447    1   DCL VALUE$ PTR;
     2524    10448          %XUE_ECB (STCLASS=" ");
     2525    10650    1   DCL CHARPOS UBIN WORD;
     2526    10651    1   DCL TYPE SBIN WORD;
     2527    10652        /***** Local Auto *****/
     2528    10653    1   DCL CHARPOS_ SBIN WORD;
     2529    10654    1   DCL FUNK_SHUN SBIN;
     2530    10655    1   DCL TYPE_ SBIN;
     2531    10656        /***** Based Structures *****/
     2532    10657          %VLP_NAMEV (FPTN = VAR_NAME,STCLASS ="BASED(VAR_NAME$)");
     2533    10664          %VLP_NAMEV (FPTN = VAR_VALUE,STCLASS ="BASED(VALUE$)");
     2534    10671          %XUE_VARPARAM (NAME=XUE_VARPARAM,VARILEN=NO,LEN=31,STCLASS=AUTO);
     2535    10773          %TEXTC (NAME=X$STRING,STCLASS=BASED);
     2536    10778          %F$DCB;
     2537    10835    1   DCL 1 U$STRING BASED ALIGNED,
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:386  
     2538    10836    1         2 SIZ UBIN BYTE UNAL,
     2539    10837    1         2 TEXT (0:0) CHAR(1) UNAL;
     2540    10838        /***** Fpts *****/
     2541    10839          %FPT_CMDVAR (FPTN=CFPT_CMDVAR,STCLASS=CONSTANT);
     2542    10856        /***** Based structures *****/
     2543    10857          %B$TCB (STCLASS = "BASED(B$TCB$)");
     2544    10860          %B$ALT (STCLASS = BASED);
     2545    10868          %FPT_CMDVAR (STCLASS = AUTO);
     2546    10885        /***** Symref Variables *****/
     2547    10886    1   DCL B$TCB$ PTR SYMREF;
     2548    10887        /***** Error Codes *****/
     2549    10888          /*E*    ERROR: XUE-E$XUE#NULLVAR$$-0
     2550    10889                  MESSAGE: VAR$$ is nil. User variables not possible.
     2551    10890          */
     2552    10891          %VLP_ERRCODE (FPTN=E_NULLVAR$$,ERR#=%E$XUE#NULLVAR$$,
     2553    10892                        FCG="XU",MID="E",STCLASS=CONSTANT);
     2554    10937          /*E*    ERROR: XUE-E$XUE#ILLVARNAME-0
     2555    10938                  MESSAGE: VARIABLE names must begin with an ALPHA character.
     2556    10939          */
     2557    10940          %VLP_ERRCODE (FPTN=E_ILLVARNAME,ERR#=%E$XUE#ILLVARNAME,
     2558    10941                        FCG="XU",MID="E",STCLASS=CONSTANT);
     2559    10986        /**/
     2560    10987    1       FUNK_SHUN = %XUE_FETCH#;
     2561    10988    1       GOTO COMMON_CODE;
     2562    10989        %EJECT;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:387  
     2563    10990        /*F*    NAME:          X$PUT_VAR
     2564    10991                PURPOSE:       To stash values away for a specified VARIABLE.
     2565    10992                DESCRIPTION:   COMMAND VARIABLES are stored in the *S
     2566    10993                               file.
     2567    10994        */
     2568    10995    1   X$PUT_VAR: ENTRY (VAR_NAME$,VALUE$,XUE_ECB,CHARPOS,TYPE) ALTRET;
     2569    10996    1       FUNK_SHUN = %XUE_STORE#;
     2570    10997        /**/
     2571    10998    1   COMMON_CODE: ;
     2572    10999        /*
     2573    11000             ***** Provide defaults for optional parameters.
     2574    11001        */
     2575    11002    1       IF ADDR(CHARPOS) = ADDR(NIL)
     2576    11003    1       THEN
     2577    11004    1           CHARPOS_ = 0;
     2578    11005    1       ELSE
     2579    11006    1           CHARPOS_ = CHARPOS;
     2580    11007    1       IF ADDR(TYPE) = ADDR(NIL)
     2581    11008    1       THEN
     2582    11009    1           TYPE_ = %XUE_EXTERNAL#;
     2583    11010    1       ELSE
     2584    11011    1           TYPE_ = TYPE;
     2585    11012        %EJECT;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:388  
     2586    11013        /*
     2587    11014             ***** Make sure that VARIABLE name is valid ...
     2588    11015                   Valid characters are ...
     2589    11016                   A-Z  a-z  0-9  #  @  _  $ (.SYMBOL)
     2590    11017                   The first character may not be ...
     2591    11018                   0-9  #  @  _
     2592    11019                   The $ is reserved to signify a function or a
     2593    11020                   hidden variable used by X$EVAL ...
     2594    11021        */
     2595    11022    1       IF VAR_NAME$ -> U$STRING.SIZ = 0
     2596    11023    1       THEN
     2597    11024    1           GOTO EVIL_NAME;
     2598    11025    1       IF VAR_NAME$ -> U$STRING.TEXT(0) = '#'
     2599    11026    1         OR VAR_NAME$ -> U$STRING.TEXT(0) = '@'
     2600    11027    1         OR VAR_NAME$ -> U$STRING.TEXT(0) = '_'
     2601    11028    1         OR (VAR_NAME$ -> U$STRING.TEXT(0) >= '0'
     2602    11029    1         AND VAR_NAME$ -> U$STRING.TEXT(0) <= '9')
     2603    11030    1       THEN   /* Invalid VARIABLE name */
     2604    11031    2       DO;
     2605    11032    2   EVIL_NAME: XUE_ECB.ERR = E_ILLVARNAME;
     2606    11033    2           ALTRETURN;
     2607    11034    2       END;
     2608    11035        /*
     2609    11036             ***** COMMAND VARIABLES, or
     2610    11037                   does the user want to manage variables?
     2611    11038        */
     2612    11039    1       IF XUE_ECB.FLAGS.CMDVARS# = %NO#
     2613    11040    1         AND TYPE_ = %XUE_EXTERNAL#
     2614    11041    1       THEN
     2615    11042    2       DO;   /* Let user do it */
     2616    11043    2           IF XUE_ECB.VAR$$ = ENTADDR(NIL)
     2617    11044    2           THEN   /* Wrong! */
     2618    11045    3           DO;
     2619    11046    3               XUE_ECB.ERR = E_NULLVAR$$;
     2620    11047    3               ALTRETURN;
     2621    11048    3           END;
     2622    11049    2           XUE_VARPARAM.CODE# = FUNK_SHUN;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:389  
     2623    11050    2           XUE_VARPARAM.CPOS# = CHARPOS_;
     2624    11051    2           XUE_VARPARAM.VALUE$ = VALUE$;
     2625    11052    2           XUE_VARPARAM.ERR_POS# = 0;
     2626    11053    2           XUE_VARPARAM.ERR_DCB# = 0;
     2627    11054    2           XUE_VARPARAM.ERR = '0'B;
     2628    11055    2           XUE_VARPARAM.VARIABLE.COUNT# = VAR_NAME$ -> X$STRING.SIZ;
     2629    11056    2           XUE_VARPARAM.VARIABLE.TEXT# = VAR_NAME$ -> X$STRING.TEXT;
     2630    11057    2           XUE_VARPARAM.USER$ = XUE_ECB.USER$;
     2631    11058    2           CALL XUE_ECB.VAR$$ (XUE_VARPARAM) ALTRET(E_VAR$$);
     2632    11059    2       END;   /* Do ... end */
     2633    11060    1       ELSE
     2634    11061    2       DO;   /* Use COMMAND VARIABLES */
     2635    11062    2           FPT_CMDVAR = CFPT_CMDVAR;
     2636    11063    2           FPT_CMDVAR.V_ = VECTOR(FPT_CMDVAR.V);
     2637    11064    2           IF FUNK_SHUN = %XUE_FETCH# THEN
     2638    11065    2               FPT_CMDVAR.V.FUN# = %CMD_FETCH#;
     2639    11066    2           ELSE
     2640    11067    2               FPT_CMDVAR.V.FUN# = %CMD_STORE#;
     2641    11068    2           FPT_CMDVAR.NAME_ = VECTOR(VAR_NAME);
     2642    11069    2           FPT_CMDVAR.VALUE_ = VECTOR(VAR_VALUE);
     2643    11070    2           IF SUBSTR(VAR_NAME.NAME#,0,1) = '$'
     2644    11071    2             AND NOT XUE_ECB.FLAGS.PRIVATE#
     2645    11072    2           THEN                        /* Public CMDVAR with $name           */
     2646    11073    3           DO;
     2647    11074    3               IF FUNK_SHUN = %XUE_STORE#
     2648    11075    3                 AND TYPE_ = %XUE_EXTERNAL#
     2649    11076    3               THEN                   /* Can only STORE from inside!        */
     2650    11077    3                   GOTO EVIL_NAME;
     2651    11078    3               GOTO CONSIDER_PRIVATE;
     2652    11079    3           END;
     2653    11080    2           IF XUE_ECB.FLAGS.PRIVATE# THEN
     2654    11081    3           DO;   /* Store this as a PRIVATE COMMAND VARIABLE */
     2655    11082    3   CONSIDER_PRIVATE: ;
     2656    11083    3               FPT_CMDVAR.V.PRIVATE# = %YES#;
     2657    11084    3               IF XUE_ECB.PROCNAME_ ~= VECTOR(NIL)
     2658    11085    3               THEN   /* Assume good vector */
     2659    11086    3                   FPT_CMDVAR.PNAME_ = XUE_ECB.PROCNAME_;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:390  
     2660    11087    3               ELSE   /* Get PROCNAME from M$LM */
     2661    11088    3                   FPT_CMDVAR.PNAME_ =
     2662    11089    3                     VECTOR(DCBADDR(%M$LM#) -> F$DCB.NAME#);
     2663    11090    3               IF XUE_ECB.PROCACCT_ ~= VECTOR(NIL)
     2664    11091    3               THEN   /* Assume good vector */
     2665    11092    3                   FPT_CMDVAR.PACCT_ = XUE_ECB.PROCACCT_;
     2666    11093    3               ELSE   /* Get PROCACCT from M$LM */
     2667    11094    3                   FPT_CMDVAR.PACCT_ =
     2668    11095    3                     VECTOR(DCBADDR(%M$LM#) -> F$DCB.ACCT#);
     2669    11096    3           END;
     2670    11097    2           CALL M$CMDVAR (FPT_CMDVAR) ALTRET(E_PMME);
     2671    11098    2       END;   /* Do ... end */
     2672    11099    1       RETURN;
     2673    11100        %EJECT;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:391  
     2674    11101        /**/
     2675    11102    1   E_PMME:
     2676    11103    1       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;
     2677    11104    1       XUE_ECB.ERR_POS# = CHARPOS_;
     2678    11105    1       ALTRETURN;
     2679    11106        /**/
     2680    11107    1   E_VAR$$:
     2681    11108    1       XUE_ECB.ERR = XUE_VARPARAM.ERR;
     2682    11109    1       XUE_ECB.ERR_POS# = XUE_VARPARAM.ERR_POS#;
     2683    11110    1       XUE_ECB.ERR_DCB# = XUE_VARPARAM.ERR_DCB#;
     2684    11111    1       ALTRETURN;
     2685    11112    1   END X$GET_VAR;
     2686    11113        %EOD;

PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:392  
--  Include file information  --

   XUE_MACRO_C.:E05TOU  is referenced.
   XUE_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure X$GET_VAR.

   Procedure X$GET_VAR requires 214 words for executable code.
   Procedure X$GET_VAR requires 42 words of local(AUTO) storage.

PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:393  

 Object Unit name= X$GET_VAR                                  File name= XUE$EVAL.:E05TOU
 UTS= JUL 30 '97 09:15:39.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     16     20  X$GET_VAR
    2   Proc  even  none   214    326  X$GET_VAR
    3  RoData even  none     6      6  X$GET_VAR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        5  X$GET_VAR
     2      5          yes     yes      Std        5  X$PUT_VAR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                B_VECTNIL
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:394  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:395  


     2501        1        /*T***********************************************************/
     2502        2        /*T*                                                         */
     2503        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2504        4        /*T*                                                         */
     2505        5        /*T***********************************************************/
     2506        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2507        7        /*F*    NAME:          X$GET_VAR
     2508        8                PURPOSE:       To retrieve the value for a specified VARIABLE.
     2509        9                DESCRIPTION:   COMMAND VARIABLES are stored in the *S
     2510       10                               file.
     2511       11        */
     2512       12        X$GET_VAR: PROC (VAR_NAME$,VALUE$,XUE_ECB,CHARPOS,TYPE) ALTRET;

     12  2 000000   000000 700200 xent  X$GET_VAR    TSX0  ! X66_AUTO_5
         2 000001   000052 000005                    ZERO    42,5

     2513       13        /***** INCLUDES *****/
     2514       14          %INCLUDE B_MACROS_C;
     2515      125          %INCLUDE CP_6;
     2516     5684          %INCLUDE CP_6_SUBS;
     2517     6224          %INCLUDE XU_MACRO_C;
     2518     9330          %INCLUDE XU_PERR_C;
     2519     9521          %INCLUDE XUE_SUBS_C;
     2520     9701          %INCLUDE XUE_MACRO_C;
     2521    10445        /***** Parameters *****/
     2522    10446    1   DCL VAR_NAME$ PTR;
     2523    10447    1   DCL VALUE$ PTR;
     2524    10448          %XUE_ECB (STCLASS=" ");
     2525    10650    1   DCL CHARPOS UBIN WORD;
     2526    10651    1   DCL TYPE SBIN WORD;
     2527    10652        /***** Local Auto *****/
     2528    10653    1   DCL CHARPOS_ SBIN WORD;
     2529    10654    1   DCL FUNK_SHUN SBIN;
     2530    10655    1   DCL TYPE_ SBIN;
     2531    10656        /***** Based Structures *****/
     2532    10657          %VLP_NAMEV (FPTN = VAR_NAME,STCLASS ="BASED(VAR_NAME$)");
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:396  
     2533    10664          %VLP_NAMEV (FPTN = VAR_VALUE,STCLASS ="BASED(VALUE$)");
     2534    10671          %XUE_VARPARAM (NAME=XUE_VARPARAM,VARILEN=NO,LEN=31,STCLASS=AUTO);
     2535    10773          %TEXTC (NAME=X$STRING,STCLASS=BASED);
     2536    10778          %F$DCB;
     2537    10835    1   DCL 1 U$STRING BASED ALIGNED,
     2538    10836    1         2 SIZ UBIN BYTE UNAL,
     2539    10837    1         2 TEXT (0:0) CHAR(1) UNAL;
     2540    10838        /***** Fpts *****/
     2541    10839          %FPT_CMDVAR (FPTN=CFPT_CMDVAR,STCLASS=CONSTANT);
     2542    10856        /***** Based structures *****/
     2543    10857          %B$TCB (STCLASS = "BASED(B$TCB$)");
     2544    10860          %B$ALT (STCLASS = BASED);
     2545    10868          %FPT_CMDVAR (STCLASS = AUTO);
     2546    10885        /***** Symref Variables *****/
     2547    10886    1   DCL B$TCB$ PTR SYMREF;
     2548    10887        /***** Error Codes *****/
     2549    10888          /*E*    ERROR: XUE-E$XUE#NULLVAR$$-0
     2550    10889                  MESSAGE: VAR$$ is nil. User variables not possible.
     2551    10890          */
     2552    10891          %VLP_ERRCODE (FPTN=E_NULLVAR$$,ERR#=%E$XUE#NULLVAR$$,
     2553    10892                        FCG="XU",MID="E",STCLASS=CONSTANT);
     2554    10937          /*E*    ERROR: XUE-E$XUE#ILLVARNAME-0
     2555    10938                  MESSAGE: VARIABLE names must begin with an ALPHA character.
     2556    10939          */
     2557    10940          %VLP_ERRCODE (FPTN=E_ILLVARNAME,ERR#=%E$XUE#ILLVARNAME,
     2558    10941                        FCG="XU",MID="E",STCLASS=CONSTANT);
     2559    10986        /**/
     2560    10987    1       FUNK_SHUN = %XUE_FETCH#;

  10987  2 000002   000001 235007                    LDA     1,DL
         2 000003   200011 755100                    STA     FUNK_SHUN,,AUTO

     2561    10988    1       GOTO COMMON_CODE;

  10988  2 000004   000011 710000 2                  TRA     COMMON_CODE

     2562    10989        %EJECT;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:397  
     2563    10990        /*F*    NAME:          X$PUT_VAR
     2564    10991                PURPOSE:       To stash values away for a specified VARIABLE.
     2565    10992                DESCRIPTION:   COMMAND VARIABLES are stored in the *S
     2566    10993                               file.
     2567    10994        */
     2568    10995    1   X$PUT_VAR: ENTRY (VAR_NAME$,VALUE$,XUE_ECB,CHARPOS,TYPE) ALTRET;

  10995  2 000005   000000 700200 xent  X$PUT_VAR    TSX0  ! X66_AUTO_5
         2 000006   000052 000005                    ZERO    42,5

     2569    10996    1       FUNK_SHUN = %XUE_STORE#;

  10996  2 000007   000002 235007                    LDA     2,DL
         2 000010   200011 755100                    STA     FUNK_SHUN,,AUTO

  10996  2 000011                       COMMON_CODE  null
     2570    10997        /**/
     2571    10998    1   COMMON_CODE: ;
     2572    10999        /*
     2573    11000             ***** Provide defaults for optional parameters.
     2574    11001        */
     2575    11002    1       IF ADDR(CHARPOS) = ADDR(NIL)

  11002  2 000011   200006 236100                    LDQ     @CHARPOS,,AUTO
         2 000012   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000013   000016 601000 2                  TNZ     s:11006

     2576    11003    1       THEN
     2577    11004    1           CHARPOS_ = 0;

  11004  2 000014   200010 450100                    STZ     CHARPOS_,,AUTO
         2 000015   000021 710000 2                  TRA     s:11007

     2578    11005    1       ELSE
     2579    11006    1           CHARPOS_ = CHARPOS;

  11006  2 000016   200006 470500                    LDP0    @CHARPOS,,AUTO
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:398  
         2 000017   000000 235100                    LDA     0,,PR0
         2 000020   200010 755100                    STA     CHARPOS_,,AUTO

     2580    11007    1       IF ADDR(TYPE) = ADDR(NIL)

  11007  2 000021   200007 236100                    LDQ     @TYPE,,AUTO
         2 000022   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000023   000027 601000 2                  TNZ     s:11011

     2581    11008    1       THEN
     2582    11009    1           TYPE_ = %XUE_EXTERNAL#;

  11009  2 000024   000002 235007                    LDA     2,DL
         2 000025   200012 755100                    STA     TYPE_,,AUTO
         2 000026   000032 710000 2                  TRA     s:11022

     2583    11010    1       ELSE
     2584    11011    1           TYPE_ = TYPE;

  11011  2 000027   200007 470500                    LDP0    @TYPE,,AUTO
         2 000030   000000 235100                    LDA     0,,PR0
         2 000031   200012 755100                    STA     TYPE_,,AUTO

     2585    11012        %EJECT;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:399  
     2586    11013        /*
     2587    11014             ***** Make sure that VARIABLE name is valid ...
     2588    11015                   Valid characters are ...
     2589    11016                   A-Z  a-z  0-9  #  @  _  $ (.SYMBOL)
     2590    11017                   The first character may not be ...
     2591    11018                   0-9  #  @  _
     2592    11019                   The $ is reserved to signify a function or a
     2593    11020                   hidden variable used by X$EVAL ...
     2594    11021        */
     2595    11022    1       IF VAR_NAME$ -> U$STRING.SIZ = 0

  11022  2 000032   200003 470500                    LDP0    @VAR_NAME$,,AUTO
         2 000033   000000 471500                    LDP1    0,,PR0
         2 000034   100000 236100                    LDQ     0,,PR1
         2 000035   777000 316003                    CANQ    -512,DU
         2 000036   000063 600000 2                  TZE     EVIL_NAME

     2596    11023    1       THEN
     2597    11024    1           GOTO EVIL_NAME;
     2598    11025    1       IF VAR_NAME$ -> U$STRING.TEXT(0) = '#'

  11025  2 000037   000777 376003                    ANQ     511,DU
         2 000040   000043 116003                    CMPQ    35,DU
         2 000041   000063 600000 2                  TZE     EVIL_NAME
         2 000042   100000 236100                    LDQ     0,,PR1
         2 000043   000777 376003                    ANQ     511,DU
         2 000044   000100 116003                    CMPQ    64,DU
         2 000045   000063 600000 2                  TZE     EVIL_NAME
         2 000046   100000 236100                    LDQ     0,,PR1
         2 000047   000777 376003                    ANQ     511,DU
         2 000050   000137 116003                    CMPQ    95,DU
         2 000051   000063 600000 2                  TZE     EVIL_NAME
         2 000052   100000 236100                    LDQ     0,,PR1
         2 000053   000777 376003                    ANQ     511,DU
         2 000054   000060 116003                    CMPQ    48,DU
         2 000055   000067 602000 2                  TNC     s:11039
         2 000056   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:400  
         2 000057   000777 376003                    ANQ     511,DU
         2 000060   000071 116003                    CMPQ    57,DU
         2 000061   000063 600000 2                  TZE     EVIL_NAME
         2 000062   000067 603000 2                  TRC     s:11039

     2599    11026    1         OR VAR_NAME$ -> U$STRING.TEXT(0) = '@'
     2600    11027    1         OR VAR_NAME$ -> U$STRING.TEXT(0) = '_'
     2601    11028    1         OR (VAR_NAME$ -> U$STRING.TEXT(0) >= '0'
     2602    11029    1         AND VAR_NAME$ -> U$STRING.TEXT(0) <= '9')
     2603    11030    1       THEN   /* Invalid VARIABLE name */
     2604    11031    2       DO;

     2605    11032    2   EVIL_NAME: XUE_ECB.ERR = E_ILLVARNAME;

  11032  2 000063   000017 236000 1     EVIL_NAME    LDQ     E_ILLVARNAME
         2 000064   200005 470500                    LDP0    @XUE_ECB,,AUTO
         2 000065   000011 756100                    STQ     9,,PR0

     2606    11033    2           ALTRETURN;

  11033  2 000066   000000 702200 xent               TSX2  ! X66_AALT

     2607    11034    2       END;
     2608    11035        /*
     2609    11036             ***** COMMAND VARIABLES, or
     2610    11037                   does the user want to manage variables?
     2611    11038        */
     2612    11039    1       IF XUE_ECB.FLAGS.CMDVARS# = %NO#

  11039  2 000067   200005 473500                    LDP3    @XUE_ECB,,AUTO
         2 000070   300016 234100                    SZN     14,,PR3
         2 000071   000143 604000 2                  TMI     s:11062
         2 000072   000002 115007                    CMPA    2,DL
         2 000073   000143 601000 2                  TNZ     s:11062

     2613    11040    1         AND TYPE_ = %XUE_EXTERNAL#
     2614    11041    1       THEN
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:401  
     2615    11042    2       DO;   /* Let user do it */

     2616    11043    2           IF XUE_ECB.VAR$$ = ENTADDR(NIL)

  11043  2 000074   300006 236100                    LDQ     6,,PR3
         2 000075   000002 116000 xsym               CMPQ    B_VECTNIL+2
         2 000076   000102 601000 2                  TNZ     s:11049

     2617    11044    2           THEN   /* Wrong! */
     2618    11045    3           DO;

     2619    11046    3               XUE_ECB.ERR = E_NULLVAR$$;

  11046  2 000077   000016 236000 1                  LDQ     E_NULLVAR$$
         2 000100   300011 756100                    STQ     9,,PR3

     2620    11047    3               ALTRETURN;

  11047  2 000101   000000 702200 xent               TSX2  ! X66_AALT

     2621    11048    3           END;
     2622    11049    2           XUE_VARPARAM.CODE# = FUNK_SHUN;

  11049  2 000102   200011 235100                    LDA     FUNK_SHUN,,AUTO
         2 000103   200013 755100                    STA     XUE_VARPARAM,,AUTO

     2623    11050    2           XUE_VARPARAM.CPOS# = CHARPOS_;

  11050  2 000104   200010 236100                    LDQ     CHARPOS_,,AUTO
         2 000105   200014 756100                    STQ     XUE_VARPARAM+1,,AUTO

     2624    11051    2           XUE_VARPARAM.VALUE$ = VALUE$;

  11051  2 000106   200004 471500                    LDP1    @VALUE$,,AUTO
         2 000107   100000 236100                    LDQ     0,,PR1
         2 000110   200017 756100                    STQ     XUE_VARPARAM+4,,AUTO

PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:402  
     2625    11052    2           XUE_VARPARAM.ERR_POS# = 0;

  11052  2 000111   000000 220003                    LDX0    0,DU
         2 000112   200015 740100                    STX0    XUE_VARPARAM+2,,AUTO

     2626    11053    2           XUE_VARPARAM.ERR_DCB# = 0;

  11053  2 000113   200015 440100                    SXL0    XUE_VARPARAM+2,,AUTO

     2627    11054    2           XUE_VARPARAM.ERR = '0'B;

  11054  2 000114   200016 450100                    STZ     XUE_VARPARAM+3,,AUTO

     2628    11055    2           XUE_VARPARAM.VARIABLE.COUNT# = VAR_NAME$ -> X$STRING.SIZ;

  11055  2 000115   000000 474500                    LDP4    0,,PR0
         2 000116   000100 100500                    MLR     fill='000'O
         2 000117   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000120   200021 000001                    ADSC9   XUE_VARPARAM+6,,AUTO     cn=0,n=1

     2629    11056    2           XUE_VARPARAM.VARIABLE.TEXT# = VAR_NAME$ -> X$STRING.TEXT;

  11056  2 000121   000000 474500                    LDP4    0,,PR0
         2 000122   000100 101500                    MRL     fill='000'O
         2 000123   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000124   200050 000002                    ADSC9   FPT_CMDVAR+14,,AUTO      cn=0,n=2
         2 000125   200050 221100                    LDX1    FPT_CMDVAR+14,,AUTO
         2 000126   040100 100540                    MLR     fill='040'O
         2 000127   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         2 000130   200021 200037                    ADSC9   XUE_VARPARAM+6,,AUTO     cn=1,n=31

     2630    11057    2           XUE_VARPARAM.USER$ = XUE_ECB.USER$;

  11057  2 000131   300007 236100                    LDQ     7,,PR3
         2 000132   200020 756100                    STQ     XUE_VARPARAM+5,,AUTO

     2631    11058    2           CALL XUE_ECB.VAR$$ (XUE_VARPARAM) ALTRET(E_VAR$$);
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:403  

  11058  2 000133   200013 634500                    EPPR4   XUE_VARPARAM,,AUTO
         2 000134   200050 454500                    STP4    FPT_CMDVAR+14,,AUTO
         2 000135   200050 630500                    EPPR0   FPT_CMDVAR+14,,AUTO
         2 000136   300006 221100                    LDX1    6,,PR3
         2 000137   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000140   000000 701011                    TSX1    0,X1
         2 000141   000316 702000 2                  TSX2    E_VAR$$

     2632    11059    2       END;   /* Do ... end */

  11059  2 000142   000305 710000 2                  TRA     s:11099

     2633    11060    1       ELSE
     2634    11061    2       DO;   /* Use COMMAND VARIABLES */

     2635    11062    2           FPT_CMDVAR = CFPT_CMDVAR;

  11062  2 000143   000100 100400                    MLR     fill='000'O
         2 000144   000000 000070 1                  ADSC9   CFPT_CMDVAR              cn=0,n=56
         2 000145   200032 000070                    ADSC9   FPT_CMDVAR,,AUTO         cn=0,n=56

     2636    11063    2           FPT_CMDVAR.V_ = VECTOR(FPT_CMDVAR.V);

  11063  2 000146   000000 235000 3                  LDA     0
         2 000147   200050 452500                    STP2    FPT_CMDVAR+14,,AUTO
         2 000150   200050 236100                    LDQ     FPT_CMDVAR+14,,AUTO
         2 000151   000046 036003                    ADLQ    38,DU
         2 000152   200032 757100                    STAQ    FPT_CMDVAR,,AUTO

     2637    11064    2           IF FUNK_SHUN = %XUE_FETCH# THEN

  11064  2 000153   200011 235100                    LDA     FUNK_SHUN,,AUTO
         2 000154   000001 115007                    CMPA    1,DL
         2 000155   000161 601000 2                  TNZ     s:11067

     2638    11065    2               FPT_CMDVAR.V.FUN# = %CMD_FETCH#;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:404  

  11065  2 000156   002000 236003                    LDQ     1024,DU
         2 000157   200046 552140                    STBQ    FPT_CMDVAR+12,'40'O,AUTO
         2 000160   000163 710000 2                  TRA     s:11068

     2639    11066    2           ELSE
     2640    11067    2               FPT_CMDVAR.V.FUN# = %CMD_STORE#;

  11067  2 000161   001000 236003                    LDQ     512,DU
         2 000162   200046 552140                    STBQ    FPT_CMDVAR+12,'40'O,AUTO

     2641    11068    2           FPT_CMDVAR.NAME_ = VECTOR(VAR_NAME);

  11068  2 000163   000000 471500                    LDP1    0,,PR0
         2 000164   000100 101500                    MRL     fill='000'O
         2 000165   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000166   200050 000002                    ADSC9   FPT_CMDVAR+14,,AUTO      cn=0,n=2
         2 000167   200050 220100                    LDX0    FPT_CMDVAR+14,,AUTO
         2 000170   000001 621010                    EAX1    1,X0
         2 000171   000000 636011                    EAQ     0,X1
         2 000172   000022 772000                    QRL     18
         2 000173   000064 737000                    LLS     52
         2 000174   000140 135007                    SBLA    96,DL
         2 000175   200051 451500                    STP1    FPT_CMDVAR+15,,AUTO
         2 000176   200051 236100                    LDQ     FPT_CMDVAR+15,,AUTO
         2 000177   200034 757100                    STAQ    FPT_CMDVAR+2,,AUTO

     2642    11069    2           FPT_CMDVAR.VALUE_ = VECTOR(VAR_VALUE);

  11069  2 000200   200004 471500                    LDP1    @VALUE$,,AUTO
         2 000201   100000 474500                    LDP4    0,,PR1
         2 000202   000100 101500                    MRL     fill='000'O
         2 000203   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000204   200050 000002                    ADSC9   FPT_CMDVAR+14,,AUTO      cn=0,n=2
         2 000205   200050 220100                    LDX0    FPT_CMDVAR+14,,AUTO
         2 000206   000001 621010                    EAX1    1,X0
         2 000207   000000 635011                    EAA     0,X1
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:405  
         2 000210   000002 771000                    ARL     2
         2 000211   000140 135007                    SBLA    96,DL
         2 000212   200051 454500                    STP4    FPT_CMDVAR+15,,AUTO
         2 000213   200051 236100                    LDQ     FPT_CMDVAR+15,,AUTO
         2 000214   200036 757100                    STAQ    FPT_CMDVAR+4,,AUTO

     2643    11070    2           IF SUBSTR(VAR_NAME.NAME#,0,1) = '$'

  11070  2 000215   000000 474500                    LDP4    0,,PR0
         2 000216   000100 101500                    MRL     fill='000'O
         2 000217   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000220   200050 000002                    ADSC9   FPT_CMDVAR+14,,AUTO      cn=0,n=2
         2 000221   200050 220100                    LDX0    FPT_CMDVAR+14,,AUTO
         2 000222   040000 106500                    CMPC    fill='040'O
         2 000223   400000 200001                    ADSC9   0,,PR4                   cn=1,n=1
         2 000224   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000225   000240 601000 2                  TNZ     s:11080
         2 000226   300016 236100                    LDQ     14,,PR3
         2 000227   200000 316003                    CANQ    65536,DU
         2 000230   000240 601000 2                  TNZ     s:11080

     2644    11071    2             AND NOT XUE_ECB.FLAGS.PRIVATE#
     2645    11072    2           THEN                        /* Public CMDVAR with $name           */
     2646    11073    3           DO;

     2647    11074    3               IF FUNK_SHUN = %XUE_STORE#

  11074  2 000231   200011 235100                    LDA     FUNK_SHUN,,AUTO
         2 000232   000002 115007                    CMPA    2,DL
         2 000233   000237 601000 2                  TNZ     s:11078
         2 000234   200012 235100                    LDA     TYPE_,,AUTO
         2 000235   000002 115007                    CMPA    2,DL
         2 000236   000063 600000 2                  TZE     EVIL_NAME

     2648    11075    3                 AND TYPE_ = %XUE_EXTERNAL#
     2649    11076    3               THEN                   /* Can only STORE from inside!        */
     2650    11077    3                   GOTO EVIL_NAME;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:406  
     2651    11078    3               GOTO CONSIDER_PRIVATE;

  11078  2 000237   000243 710000 2                  TRA     CONSIDER_PRIVATE

     2652    11079    3           END;
     2653    11080    2           IF XUE_ECB.FLAGS.PRIVATE# THEN

  11080  2 000240   300016 236100                    LDQ     14,,PR3
         2 000241   200000 316003                    CANQ    65536,DU
         2 000242   000301 600000 2                  TZE     s:11097

     2654    11081    3           DO;   /* Store this as a PRIVATE COMMAND VARIABLE */

  11078  2 000243                       CONSIDER_PR* null
     2655    11082    3   CONSIDER_PRIVATE: ;
     2656    11083    3               FPT_CMDVAR.V.PRIVATE# = %YES#;

  11083  2 000243   000400 236003                    LDQ     256,DU
         2 000244   200046 256100                    ORSQ    FPT_CMDVAR+12,,AUTO

     2657    11084    3               IF XUE_ECB.PROCNAME_ ~= VECTOR(NIL)

  11084  2 000245   300012 237100                    LDAQ    10,,PR3
         2 000246   000002 117000 3                  CMPAQ   2
         2 000247   000253 600000 2                  TZE     s:11088

     2658    11085    3               THEN   /* Assume good vector */
     2659    11086    3                   FPT_CMDVAR.PNAME_ = XUE_ECB.PROCNAME_;

  11086  2 000250   300012 237100                    LDAQ    10,,PR3
         2 000251   200040 757100                    STAQ    FPT_CMDVAR+6,,AUTO
         2 000252   000263 710000 2                  TRA     s:11090

     2660    11087    3               ELSE   /* Get PROCNAME from M$LM */
     2661    11088    3                   FPT_CMDVAR.PNAME_ =

  11088  2 000253   000004 474400 3                  LDP4    4
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:407  
         2 000254   400000 475500                    LDP5    0,,PR4
         2 000255   500002 476500                    LDP6    2,,PR5
         2 000256   000005 235000 3                  LDA     5
         2 000257   200050 456500                    STP6    FPT_CMDVAR+14,,AUTO
         2 000260   200050 236100                    LDQ     FPT_CMDVAR+14,,AUTO
         2 000261   000010 036003                    ADLQ    8,DU
         2 000262   200040 757100                    STAQ    FPT_CMDVAR+6,,AUTO

     2662    11089    3                     VECTOR(DCBADDR(%M$LM#) -> F$DCB.NAME#);
     2663    11090    3               IF XUE_ECB.PROCACCT_ ~= VECTOR(NIL)

  11090  2 000263   300014 237100                    LDAQ    12,,PR3
         2 000264   000002 117000 3                  CMPAQ   2
         2 000265   000271 600000 2                  TZE     s:11094

     2664    11091    3               THEN   /* Assume good vector */
     2665    11092    3                   FPT_CMDVAR.PACCT_ = XUE_ECB.PROCACCT_;

  11092  2 000266   300014 237100                    LDAQ    12,,PR3
         2 000267   200042 757100                    STAQ    FPT_CMDVAR+8,,AUTO
         2 000270   000301 710000 2                  TRA     s:11097

     2666    11093    3               ELSE   /* Get PROCACCT from M$LM */
     2667    11094    3                   FPT_CMDVAR.PACCT_ =

  11094  2 000271   000004 474400 3                  LDP4    4
         2 000272   400000 475500                    LDP5    0,,PR4
         2 000273   500002 476500                    LDP6    2,,PR5
         2 000274   000000 235000 3                  LDA     0
         2 000275   200050 456500                    STP6    FPT_CMDVAR+14,,AUTO
         2 000276   200050 236100                    LDQ     FPT_CMDVAR+14,,AUTO
         2 000277   000020 036003                    ADLQ    16,DU
         2 000300   200042 757100                    STAQ    FPT_CMDVAR+8,,AUTO

     2668    11095    3                     VECTOR(DCBADDR(%M$LM#) -> F$DCB.ACCT#);
     2669    11096    3           END;

PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:408  
     2670    11097    2           CALL M$CMDVAR (FPT_CMDVAR) ALTRET(E_PMME);

  11097  2 000301   200032 630500                    EPPR0   FPT_CMDVAR,,AUTO
         2 000302   420025 713400                    CLIMB   alt,+8213
         2 000303   402400 401760                    pmme    nvectors=6
         2 000304   000306 702000 2                  TSX2    E_PMME

     2671    11098    2       END;   /* Do ... end */

     2672    11099    1       RETURN;

  11099  2 000305   000000 702200 xent               TSX2  ! X66_ARET

     2673    11100        %EJECT;
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:409  
     2674    11101        /**/
     2675    11102    1   E_PMME:
     2676    11103    1       XUE_ECB.ERR = B$TCB.ALT$ -> B$ALT.ERR;

  11103  2 000306   000000 470400 xsym  E_PMME       LDP0    B$TCB$
         2 000307   000000 471500                    LDP1    0,,PR0
         2 000310   100102 236100                    LDQ     66,,PR1
         2 000311   200005 473500                    LDP3    @XUE_ECB,,AUTO
         2 000312   300011 756100                    STQ     9,,PR3

     2677    11104    1       XUE_ECB.ERR_POS# = CHARPOS_;

  11104  2 000313   200010 720100                    LXL0    CHARPOS_,,AUTO
         2 000314   300010 740100                    STX0    8,,PR3

     2678    11105    1       ALTRETURN;

  11105  2 000315   000000 702200 xent               TSX2  ! X66_AALT

     2679    11106        /**/
     2680    11107    1   E_VAR$$:
     2681    11108    1       XUE_ECB.ERR = XUE_VARPARAM.ERR;

  11108  2 000316   200016 236100       E_VAR$$      LDQ     XUE_VARPARAM+3,,AUTO
         2 000317   200005 470500                    LDP0    @XUE_ECB,,AUTO
         2 000320   000011 756100                    STQ     9,,PR0

     2682    11109    1       XUE_ECB.ERR_POS# = XUE_VARPARAM.ERR_POS#;

  11109  2 000321   200015 220100                    LDX0    XUE_VARPARAM+2,,AUTO
         2 000322   000010 740100                    STX0    8,,PR0

     2683    11110    1       XUE_ECB.ERR_DCB# = XUE_VARPARAM.ERR_DCB#;

  11110  2 000323   200015 721100                    LXL1    XUE_VARPARAM+2,,AUTO
         2 000324   000010 441100                    SXL1    8,,PR0

PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:410  
     2684    11111    1       ALTRETURN;

  11111  2 000325   000000 702200 xent               TSX2  ! X66_AALT
     2685    11112    1   END X$GET_VAR;
     2686    11113        %EOD;

PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:411  
--  Include file information  --

   XUE_MACRO_C.:E05TOU  is referenced.
   XUE_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure X$GET_VAR.
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:412  

 **** Variables and constants ****

  ****  Section 001 RoData X$GET_VAR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 CFPT_CMDVAR               17-0-0/w STRC        r     1 E_ILLVARNAME
    16-0-0/w STRC        r     1 E_NULLVAR$$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CHARPOS                   7-0-0/w PTR         r     1 @TYPE
     4-0-0/w PTR         r     1 @VALUE$                    3-0-0/w PTR         r     1 @VAR_NAME$
     5-0-0/w PTR         r     1 @XUE_ECB                  *0-0-0/w UBIN        r     1 CHARPOS
    10-0-0/w SBIN        r     1 CHARPOS_                  32-0-0/d STRC(504)   r     1 FPT_CMDVAR
    11-0-0/w SBIN        r     1 FUNK_SHUN                 *0-0-0/w SBIN        r     1 TYPE
    12-0-0/w SBIN        r     1 TYPE_                     *0-0-0/w PTR         r     1 VALUE$
    *0-0-0/w PTR         r     1 VAR_NAME$                 *0-0-0/d STRC(1008)  r     1 XUE_ECB
    13-0-0/w STRC(504)   r     1 XUE_VARPARAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:413  
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(18)    r     1 U$STRING
     0-0-0/c ASTR(9)     r     1 VAR_NAME                   0-0-0/c ASTR(9)     r     1 VAR_VALUE
     0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure X$GET_VAR requires 214 words for executable code.
   Procedure X$GET_VAR requires 42 words of local(AUTO) storage.
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:414  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:415  
          MINI XREF LISTING

B$ALT.CODE
     10862**DCL     10862--REDEF   10863--REDEF   10863--REDEF
B$ALT.ERR
     10863**DCL     11103>>ASSIGN
B$ALT.ERR.ERR#
     10864**DCL     10864--REDEF
B$ALT.EVID
     10863**DCL     10863--REDEF   10863--REDEF
B$TCB.ALT$
     10858**DCL     11103>>ASSIGN
B$TCB$
     10886**DCL     10858--IMP-PTR 11103>>ASSIGN
CFPT_CMDVAR
     10850**DCL     11062>>ASSIGN
CFPT_CMDVAR.V
     10852**DCL     10850--DCLINIT
CHARPOS
     10650**DCL        12--PROC    10995--ENTRY   11002--IF      11006>>ASSIGN
CHARPOS_
     10653**DCL     11004<<ASSIGN  11006<<ASSIGN  11050>>ASSIGN  11104>>ASSIGN
COMMON_CODE
     10996**LABEL   10988--GOTO
CONSIDER_PRIVATE
     11078**LABEL   11078--GOTO
EVIL_NAME
     11032**LABEL   11024--GOTO    11077--GOTO
E_ILLVARNAME
     10953**DCL     11032>>ASSIGN
E_NULLVAR$$
     10904**DCL     11046>>ASSIGN
E_PMME
     11103**LABEL   11097--CALLALT
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:416  
E_VAR$$
     11108**LABEL   11058--CALLALT
F$DCB.ACCT#
     10795**DCL     11094--ASSIGN
F$DCB.ACTPOS
     10811**DCL     10811--REDEF
F$DCB.ARS#
     10785**DCL     10785--REDEF
F$DCB.ATTR
     10804**DCL     10805--REDEF
F$DCB.BORROW
     10819**DCL     10819--REDEF   10819--REDEF   10819--REDEF
F$DCB.DCBNAME.L
     10833**DCL     10833--IMP-SIZ
F$DCB.EOMCHAR#
     10789**DCL     10789--REDEF
F$DCB.FLDID
     10814**DCL     10814--REDEF
F$DCB.FORM$
     10808**DCL     10808--REDEF
F$DCB.FSECT
     10824**DCL     10824--REDEF
F$DCB.FSN#
     10801**DCL     10801--REDEF   10801--REDEF   10802--REDEF
F$DCB.HEADER$
     10807**DCL     10807--REDEF
F$DCB.IXTNSIZE#
     10805**DCL     10805--REDEF
F$DCB.LASTSTA$
     10794**DCL     10794--REDEF
F$DCB.LVL
     10820**DCL     10820--REDEF
F$DCB.NAME#
     10795**DCL     11088--ASSIGN
F$DCB.NAME#.C
     10795**DCL     10795--REDEF
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:417  
F$DCB.NOEOF
     10817**DCL     10817--REDEF
F$DCB.NRECS#
     10806**DCL     10806--REDEF
F$DCB.NRECX
     10825**DCL     10825--REDEF
F$DCB.OHDR
     10817**DCL     10817--REDEF
F$DCB.ORG#
     10800**DCL     10800--REDEF
F$DCB.PRECNO
     10823**DCL     10823--REDEF
F$DCB.RCSZ
     10829**DCL     10829--REDEF
F$DCB.RES#
     10796**DCL     10796--REDEF
F$DCB.SETX
     10808**DCL     10808--REDEF
F$DCB.TAB$
     10808**DCL     10808--REDEF
F$DCB.TDA
     10822**DCL     10823--REDEF
F$DCB.WSN#
     10796**DCL     10796--REDEF
FPT_CMDVAR
     10879**DCL     11062<<ASSIGN  11097<>CALL
FPT_CMDVAR.NAME_
     10879**DCL     11068<<ASSIGN
FPT_CMDVAR.PACCT_
     10880**DCL     11092<<ASSIGN  11094<<ASSIGN
FPT_CMDVAR.PNAME_
     10880**DCL     11086<<ASSIGN  11088<<ASSIGN
FPT_CMDVAR.V
     10881**DCL     11063--ASSIGN
FPT_CMDVAR.V.FUN#
     10881**DCL     11065<<ASSIGN  11067<<ASSIGN
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:418  
FPT_CMDVAR.V.PRIVATE#
     10882**DCL     11083<<ASSIGN
FPT_CMDVAR.VALUE_
     10879**DCL     11069<<ASSIGN
FPT_CMDVAR.V_
     10879**DCL     11063<<ASSIGN
FUNK_SHUN
     10654**DCL     10987<<ASSIGN  10996<<ASSIGN  11049>>ASSIGN  11064>>IF      11074>>IF
M$CMDVAR
      5681**DCL-ENT 11097--CALL
TYPE
     10651**DCL        12--PROC    10995--ENTRY   11007--IF      11011>>ASSIGN
TYPE_
     10655**DCL     11009<<ASSIGN  11011<<ASSIGN  11039>>IF      11074>>IF
U$STRING.SIZ
     10836**DCL     11022>>IF
U$STRING.TEXT
     10837**DCL     11025>>IF      11025>>IF      11025>>IF      11025>>IF      11025>>IF
VALUE$
     10447**DCL        12--PROC    10669--IMP-PTR 10995--ENTRY   11051>>ASSIGN  11069>>ASSIGN  11069>>ASSIGN
VAR_NAME
     10662**DCL     11068--ASSIGN
VAR_NAME.L#
     10662**DCL     10662--IMP-SIZ 11068>>ASSIGN  11070>>IF
VAR_NAME.NAME#
     10662**DCL     11070>>IF
VAR_NAME$
     10446**DCL        12--PROC    10662--IMP-PTR 10995--ENTRY   11022>>IF      11025>>IF      11025>>IF
     11025>>IF      11025>>IF      11025>>IF      11055>>ASSIGN  11056>>ASSIGN  11056>>ASSIGN  11068>>ASSIGN
     11068>>ASSIGN  11070>>IF      11070>>IF
VAR_VALUE
     10669**DCL     11069--ASSIGN
VAR_VALUE.L#
     10669**DCL     10669--IMP-SIZ 11069>>ASSIGN
X$STRING.SIZ
     10775**DCL     10776--IMP-SIZ 11055>>ASSIGN  11056>>ASSIGN
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:419  
X$STRING.TEXT
     10776**DCL     11056>>ASSIGN
XUE_ECB
     10462**DCL        12--PROC    10995--ENTRY
XUE_ECB.ERR
     10546**DCL     11032<<ASSIGN  11046<<ASSIGN  11103<<ASSIGN  11108<<ASSIGN
XUE_ECB.ERR_DCB#
     10538**DCL     11110<<ASSIGN
XUE_ECB.ERR_POS#
     10529**DCL     11104<<ASSIGN  11109<<ASSIGN
XUE_ECB.FLAGS.CMDVARS#
     10586**DCL     11039>>IF
XUE_ECB.FLAGS.PRIVATE#
     10597**DCL     11070>>IF      11080>>IF
XUE_ECB.PROCACCT_
     10577**DCL     11090>>IF      11092>>ASSIGN
XUE_ECB.PROCNAME_
     10561**DCL     11084>>IF      11086>>ASSIGN
XUE_ECB.USER$
     10521**DCL     11057>>ASSIGN
XUE_ECB.VAR$$
     10510**DCL     11043>>IF      11058>>CALL
XUE_VARPARAM
     10685**DCL     11058<>CALL
XUE_VARPARAM.CODE#
     10689**DCL     11049<<ASSIGN
XUE_VARPARAM.CPOS#
     10695**DCL     11050<<ASSIGN
XUE_VARPARAM.ERR
     10716**DCL     11054<<ASSIGN  11108>>ASSIGN
XUE_VARPARAM.ERR_DCB#
     10709**DCL     11053<<ASSIGN  11110>>ASSIGN
XUE_VARPARAM.ERR_POS#
     10701**DCL     11052<<ASSIGN  11109>>ASSIGN
XUE_VARPARAM.USER$
     10743**DCL     11057<<ASSIGN
PL6.E3A0      #003=X$GET_VAR File=XUE$EVAL.:E05TSI                               WED 07/30/97 09:15 Page:420  
XUE_VARPARAM.VALUE$
     10730**DCL     11051<<ASSIGN
XUE_VARPARAM.VARIABLE.COUNT#
     10750**DCL     11055<<ASSIGN
XUE_VARPARAM.VARIABLE.TEXT#
     10762**DCL     11056<<ASSIGN

PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:421  
     2687        1        /*T***********************************************************/
     2688        2        /*T*                                                         */
     2689        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2690        4        /*T*                                                         */
     2691        5        /*T***********************************************************/
     2692        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2693        7        X$STRIP_BLANKS: PROC (PTR$);
     2694        8          %INCLUDE B_MACROS_C;
     2695      119        %INCLUDE B$TABLES_C;
     2696      227          %TEXTC (NAME=X$STRING);
     2697      232    1   DCL PTR$ PTR;
     2698      233    1   DCL WHERE SBIN WORD AUTO;
     2699      234    1   DCL DUMMY SBIN WORD AUTO;
     2700      235        %B$SR_NON_BLANK (NAME=NON_BLANKS);
     2701      239        /**/
     2702      240    1       IF PTR$ -> X$STRING.TEXT = ' '
     2703      241    1       THEN   /* All BLANKS */
     2704      242    2       DO;   /* Return a NULL string */
     2705      243    2           PTR$ -> X$STRING.SIZ = 0;
     2706      244    2           RETURN;
     2707      245    2       END;
     2708      246        /*
     2709      247             ***** Search for first non-blank character
     2710      248                   starting at right end of string ...
     2711      249        */
     2712      250    1       CALL SEARCHR (WHERE,DUMMY,NON_BLANKS,PTR$->X$STRING.TEXT);
     2713      251    1       WHERE = WHERE + 1;
     2714      252    1       IF WHERE < PTR$ -> X$STRING.SIZ
     2715      253    1       THEN   /* Blank found */
     2716      254    1           IF SUBSTR(PTR$->X$STRING.TEXT,WHERE) = ' '
     2717      255    1           THEN   /* Not an imbedded blank */
     2718      256    2           DO;   /* Strip them */
     2719      257    2               PTR$ -> X$STRING.SIZ = WHERE;
     2720      258    2           END;
     2721      259        /*
     2722      260             ***** Search for first non-blank character
     2723      261                   starting at left end of string ...
PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:422  
     2724      262        */
     2725      263    1       CALL SEARCH (WHERE,DUMMY,NON_BLANKS,PTR$->X$STRING.TEXT);
     2726      264    1       IF WHERE = 0
     2727      265    1       THEN   /* First character is non-blank */
     2728      266    1           RETURN;
     2729      267    1       IF SUBSTR(PTR$ -> X$STRING.TEXT,0,WHERE-1) = ' '
     2730      268    1       THEN   /* There were leading blanks */
     2731      269    2       DO;   /* Strip them */
     2732      270    2           PTR$ -> X$STRING.TEXT = SUBSTR(PTR$ -> X$STRING.TEXT,WHERE);
     2733      271    2           PTR$ -> X$STRING.SIZ = PTR$ -> X$STRING.SIZ - WHERE;
     2734      272    2       END;
     2735      273    1       RETURN;
     2736      274    1   END X$STRIP_BLANKS;
     2737      275        %EOD;

PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:423  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure X$STRIP_BLANKS.

   Procedure X$STRIP_BLANKS requires 118 words for executable code.
   Procedure X$STRIP_BLANKS requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:424  

 Object Unit name= X$STRIP_BLANKS                             File name= XUE$EVAL.:E05TOU
 UTS= JUL 30 '97 09:16:13.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   118    166  X$STRIP_BLANKS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  X$STRIP_BLANKS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$SR_NON_BLANK$                       B_VECTNIL
PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:425  


     2687        1        /*T***********************************************************/
     2688        2        /*T*                                                         */
     2689        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2690        4        /*T*                                                         */
     2691        5        /*T***********************************************************/
     2692        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2693        7        X$STRIP_BLANKS: PROC (PTR$);

      7  0 000000   000000 700200 xent  X$STRIP_BLA* TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

     2694        8          %INCLUDE B_MACROS_C;
     2695      119        %INCLUDE B$TABLES_C;
     2696      227          %TEXTC (NAME=X$STRING);
     2697      232    1   DCL PTR$ PTR;
     2698      233    1   DCL WHERE SBIN WORD AUTO;
     2699      234    1   DCL DUMMY SBIN WORD AUTO;
     2700      235        %B$SR_NON_BLANK (NAME=NON_BLANKS);
     2701      239        /**/
     2702      240    1       IF PTR$ -> X$STRING.TEXT = ' '

    240  0 000002   200003 470500                    LDP0    @PTR$,,AUTO
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   000100 101500                    MRL     fill='000'O
         0 000005   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000006   200006 000002                    ADSC9   DUMMY+1,,AUTO            cn=0,n=2
         0 000007   200006 220100                    LDX0    DUMMY+1,,AUTO
         0 000010   040000 106540                    CMPC    fill='040'O
         0 000011   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         0 000012   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 000013   000021 601000 0                  TNZ     s:250

     2703      241    1       THEN   /* All BLANKS */
     2704      242    2       DO;   /* Return a NULL string */

     2705      243    2           PTR$ -> X$STRING.SIZ = 0;
PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:426  

    243  0 000014   000000 471500                    LDP1    0,,PR0
         0 000015   000100 101400                    MRL     fill='000'O
         0 000016   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         0 000017   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2706      244    2           RETURN;

    244  0 000020   000000 702200 xent               TSX2  ! X66_ARET

     2707      245    2       END;
     2708      246        /*
     2709      247             ***** Search for first non-blank character
     2710      248                   starting at right end of string ...
     2711      249        */
     2712      250    1       CALL SEARCHR (WHERE,DUMMY,NON_BLANKS,PTR$->X$STRING.TEXT);

    250  0 000021   000000 471500                    LDP1    0,,PR0
         0 000022   000100 101500                    MRL     fill='000'O
         0 000023   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000024   200006 000002                    ADSC9   DUMMY+1,,AUTO            cn=0,n=2
         0 000025   200006 220100                    LDX0    DUMMY+1,,AUTO
         0 000026   000000 636010                    EAQ     0,X0
         0 000027   000022 772000                    QRL     18
         0 000030   000000 473400 xsym               LDP3    B$SR_NON_BLANK$
         0 000031   000000 165540                    TCTR
         0 000032   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         0 000033   300000 000100                    ARG     0,,PR3
         0 000034   200004 000100                    ARG     WHERE,,AUTO
         0 000035   200004 235100                    LDA     WHERE,,AUTO
         0 000036   000033 771000                    ARL     27
         0 000037   200005 755100                    STA     DUMMY,,AUTO
         0 000040   200004 551140                    STBA    WHERE,'40'O,AUTO
         0 000041   000044 606400 0                  TTN     s:251
         0 000042   200004 054100                    AOS     WHERE,,AUTO
         0 000043   200004 156100                    SSQ     WHERE,,AUTO

PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:427  
     2713      251    1       WHERE = WHERE + 1;

    251  0 000044   200004 054100                    AOS     WHERE,,AUTO

     2714      252    1       IF WHERE < PTR$ -> X$STRING.SIZ

    252  0 000045   000000 471500                    LDP1    0,,PR0
         0 000046   000100 101500                    MRL     fill='000'O
         0 000047   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000050   200006 000004                    ADSC9   DUMMY+1,,AUTO            cn=0,n=4
         0 000051   200006 236100                    LDQ     DUMMY+1,,AUTO
         0 000052   200004 116100                    CMPQ    WHERE,,AUTO
         0 000053   000076 604400 0                  TMOZ    s:263

     2715      253    1       THEN   /* Blank found */
     2716      254    1           IF SUBSTR(PTR$->X$STRING.TEXT,WHERE) = ' '

    254  0 000054   000000 471500                    LDP1    0,,PR0
         0 000055   000100 101500                    MRL     fill='000'O
         0 000056   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000057   200006 000002                    ADSC9   DUMMY+1,,AUTO            cn=0,n=2
         0 000060   200006 220100                    LDX0    DUMMY+1,,AUTO
         0 000061   000000 636010                    EAQ     0,X0
         0 000062   000022 772000                    QRL     18
         0 000063   200004 136100                    SBLQ    WHERE,,AUTO
         0 000064   000000 621006                    EAX1    0,QL
         0 000065   200004 236100                    LDQ     WHERE,,AUTO
         0 000066   040000 106546                    CMPC    fill='040'O
         0 000067   100000 200011                    ADSC9   0,Q,PR1                  cn=1,n=*X1
         0 000070   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 000071   000076 601000 0                  TNZ     s:263

     2717      255    1           THEN   /* Not an imbedded blank */
     2718      256    2           DO;   /* Strip them */

     2719      257    2               PTR$ -> X$STRING.SIZ = WHERE;

PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:428  
    257  0 000072   000000 471500                    LDP1    0,,PR0
         0 000073   000100 101500                    MRL     fill='000'O
         0 000074   200004 000004                    ADSC9   WHERE,,AUTO              cn=0,n=4
         0 000075   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2720      258    2           END;

     2721      259        /*
     2722      260             ***** Search for first non-blank character
     2723      261                   starting at left end of string ...
     2724      262        */
     2725      263    1       CALL SEARCH (WHERE,DUMMY,NON_BLANKS,PTR$->X$STRING.TEXT);

    263  0 000076   000000 471500                    LDP1    0,,PR0
         0 000077   000100 101500                    MRL     fill='000'O
         0 000100   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000101   200006 000002                    ADSC9   DUMMY+1,,AUTO            cn=0,n=2
         0 000102   200006 220100                    LDX0    DUMMY+1,,AUTO
         0 000103   000000 164540                    TCT
         0 000104   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         0 000105   300000 000100                    ARG     0,,PR3
         0 000106   200004 000100                    ARG     WHERE,,AUTO
         0 000107   200004 236100                    LDQ     WHERE,,AUTO
         0 000110   000044 737000                    LLS     36
         0 000111   000033 771000                    ARL     27
         0 000112   200005 755100                    STA     DUMMY,,AUTO
         0 000113   200004 551140                    STBA    WHERE,'40'O,AUTO

     2726      264    1       IF WHERE = 0

    264  0 000114   200004 236100                    LDQ     WHERE,,AUTO
         0 000115   000117 601000 0                  TNZ     s:267

     2727      265    1       THEN   /* First character is non-blank */
     2728      266    1           RETURN;

    266  0 000116   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:429  

     2729      267    1       IF SUBSTR(PTR$ -> X$STRING.TEXT,0,WHERE-1) = ' '

    267  0 000117   000000 471500                    LDP1    0,,PR0
         0 000120   000100 101500                    MRL     fill='000'O
         0 000121   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000122   200006 000002                    ADSC9   DUMMY+1,,AUTO            cn=0,n=2
         0 000123   200006 220100                    LDX0    DUMMY+1,,AUTO
         0 000124   777777 621006                    EAX1    -1,QL
         0 000125   040000 106540                    CMPC    fill='040'O
         0 000126   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         0 000127   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 000130   000165 601000 0                  TNZ     s:273

     2730      268    1       THEN   /* There were leading blanks */
     2731      269    2       DO;   /* Strip them */

     2732      270    2           PTR$ -> X$STRING.TEXT = SUBSTR(PTR$ -> X$STRING.TEXT,WHERE);

    270  0 000131   000000 471500                    LDP1    0,,PR0
         0 000132   000100 101500                    MRL     fill='000'O
         0 000133   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000134   200006 000002                    ADSC9   DUMMY+1,,AUTO            cn=0,n=2
         0 000135   200006 220100                    LDX0    DUMMY+1,,AUTO
         0 000136   000000 474500                    LDP4    0,,PR0
         0 000137   000100 101500                    MRL     fill='000'O
         0 000140   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         0 000141   200007 000002                    ADSC9   DUMMY+2,,AUTO            cn=0,n=2
         0 000142   200007 222100                    LDX2    DUMMY+2,,AUTO
         0 000143   000000 636012                    EAQ     0,X2
         0 000144   000022 772000                    QRL     18
         0 000145   200004 136100                    SBLQ    WHERE,,AUTO
         0 000146   000000 623006                    EAX3    0,QL
         0 000147   200004 236100                    LDQ     WHERE,,AUTO
         0 000150   040140 100546                    MLR     fill='040'O
         0 000151   400000 200013                    ADSC9   0,Q,PR4                  cn=1,n=*X3
         0 000152   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:430  

     2733      271    2           PTR$ -> X$STRING.SIZ = PTR$ -> X$STRING.SIZ - WHERE;

    271  0 000153   000000 471500                    LDP1    0,,PR0
         0 000154   000100 101500                    MRL     fill='000'O
         0 000155   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000156   200006 000004                    ADSC9   DUMMY+1,,AUTO            cn=0,n=4
         0 000157   200006 236100                    LDQ     DUMMY+1,,AUTO
         0 000160   200004 136100                    SBLQ    WHERE,,AUTO
         0 000161   200007 756100                    STQ     DUMMY+2,,AUTO
         0 000162   000100 101500                    MRL     fill='000'O
         0 000163   200007 000004                    ADSC9   DUMMY+2,,AUTO            cn=0,n=4
         0 000164   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2734      272    2       END;

     2735      273    1       RETURN;

    273  0 000165   000000 702200 xent               TSX2  ! X66_ARET
     2736      274    1   END X$STRIP_BLANKS;
     2737      275        %EOD;

PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:431  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure X$STRIP_BLANKS.
PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:432  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PTR$                      5-0-0/w SBIN        r     1 DUMMY
    *0-0-0/w PTR         r     1 PTR$                       4-0-0/w SBIN        r     1 WHERE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$SR_NON_BLANK$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4608)  r     1 NON_BLANKS                 0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure X$STRIP_BLANKS requires 118 words for executable code.
   Procedure X$STRIP_BLANKS requires 8 words of local(AUTO) storage.
PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:433  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=X$STRIP_BLANKS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:16 Page:434  
          MINI XREF LISTING

B$SR_NON_BLANK$
       236**DCL       237--IMP-PTR   250>>CALLBLT   263>>CALLBLT
DUMMY
       234**DCL       250<<CALLBLT   263<<CALLBLT
NON_BLANKS
       237**DCL       250>>CALLBLT   263>>CALLBLT
PTR$
       232**DCL         7--PROC      240>>IF        240>>IF        243>>ASSIGN    250>>CALLBLT   250>>CALLBLT
       252>>IF        254>>IF        254>>IF        257>>ASSIGN    263>>CALLBLT   263>>CALLBLT   267>>IF
       267>>IF        270>>ASSIGN    270>>ASSIGN    270>>ASSIGN    270>>ASSIGN    271>>ASSIGN    271>>ASSIGN
WHERE
       233**DCL       250<<CALLBLT   251<<ASSIGN    251>>ASSIGN    252>>IF        254>>IF        257>>ASSIGN
       263<<CALLBLT   264>>IF        267>>IF        270>>ASSIGN    271>>ASSIGN
X$STRING.SIZ
       229**DCL       230--IMP-SIZ   240>>IF        243<<ASSIGN    250>>CALLBLT   252>>IF        254>>IF
       257<<ASSIGN    263>>CALLBLT   267>>IF        270>>ASSIGN    270>>ASSIGN    271<<ASSIGN    271>>ASSIGN
X$STRING.TEXT
       230**DCL       240>>IF        250>>CALLBLT   254>>IF        263>>CALLBLT   267>>IF        270<<ASSIGN
       270>>ASSIGN

PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:435  
     2738        1        /*T***********************************************************/
     2739        2        /*T*                                                         */
     2740        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2741        4        /*T*                                                         */
     2742        5        /*T***********************************************************/
     2743        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2744        7        X$DEC_CONVERT: PROC (STRING$,VALUE) ALTRET;
     2745        8          %INCLUDE B_MACROS_C;
     2746      119          %INCLUDE XUE_MACRO_C;
     2747      863    1   DCL STRING$ PTR;
     2748      864    1   DCL VALUE SBIN WORD;
     2749      865        /***** Auto variables *****/
     2750      866    1   DCL WHERE SBIN WORD AUTO;
     2751      867    1   DCL RESULT SBIN WORD AUTO;
     2752      868        /***** External routines *****/
     2753      869          %XUE_ENTRIES (OMIT=X$DEC_CONVERT);
     2754      893        /***** Based structures *****/
     2755      894    1   DCL 1 B$STRING BASED,
     2756      895    1         2  SIZ UBIN BYTE UNAL,
     2757      896    1         2  TEXT (0:0) CHAR(1) UNAL;
     2758      897          %TEXTC (NAME=X$STRING);
     2759      902        /***** SEARCH table *****/
     2760      903    1   DCL DECIMAL_TABLE (0:511) UBIN BYTE UNAL CONSTANT INIT
     2761      904    1        ( 1*48, 0*10, 1*454);
     2762      905        /***** Max decimal value *****/
     2763      906    1   DCL HI_VALUE CHAR(0) CONSTANT INIT ('34359738367');
     2764      907        /*
     2765      908             ***** Initialize ...
     2766      909        */
     2767      910    1       RESULT = 0;
     2768      911        /*
     2769      912             ***** Strip any BLANKS ...
     2770      913        */
     2771      914    1       CALL X$STRIP_BLANKS (STRING$);
     2772      915        /*
     2773      916             ***** Null strings are not valid decimal strings ...
     2774      917        */
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:436  
     2775      918    1       IF STRING$ -> X$STRING.SIZ = 0
     2776      919    1         OR (STRING$ -> X$STRING.SIZ = 1
     2777      920    1         AND STRING$ -> B$STRING.TEXT(0) = '-'
     2778      921    1         OR STRING$ -> B$STRING.TEXT(0) = '+')
     2779      922    1       THEN
     2780      923    1           ALTRETURN;
     2781      924        /*
     2782      925             ***** VERIFY that all chars are legal DECIMAL characters ...
     2783      926        */
     2784      927    1       IF STRING$ -> B$STRING.TEXT(0) = '+'
     2785      928    1         OR STRING$ -> B$STRING.TEXT(0) = '-'
     2786      929    1       THEN                               /* In XCHARBIN form                   */
     2787      930    2       DO;
     2788      931    2           CALL SEARCH (WHERE,RESULT,DECIMAL_TABLE,STRING$ ->
     2789      932    2             X$STRING.TEXT,1);      /* Skip SIGN char                     */
     2790      933    2           IF RESULT ~= 0
     2791      934    2           THEN                      /* Non DECIMAL found                  */
     2792      935    2               GOTO E_CONVERT;
     2793      936    2           IF (STRING$ -> X$STRING.SIZ -1) >= LENGTHC(HI_VALUE)
     2794      937    2             AND SUBSTR(STRING$ -> X$STRING.TEXT,1) > HI_VALUE
     2795      938    2           THEN                      /* Value too large                    */
     2796      939    3           DO;
     2797      940    3               ALTRETURN;
     2798      941    3           END;
     2799      942    2           CALL XCHARBIN (VALUE,STRING$->X$STRING.TEXT);
     2800      943    2       END;
     2801      944    1       ELSE                               /* In CHARBIN form                    */
     2802      945    2       DO;
     2803      946    2           CALL SEARCH (WHERE,RESULT,DECIMAL_TABLE,STRING$ ->
     2804      947    2             X$STRING.TEXT,0);      /* No SIGN char                       */
     2805      948    2           IF RESULT ~= 0
     2806      949    2           THEN                      /* Non DECIMAL found                  */
     2807      950    2               GOTO E_CONVERT;
     2808      951    2           IF STRING$ -> X$STRING.SIZ >= LENGTHC(HI_VALUE)
     2809      952    2             AND STRING$ -> X$STRING.TEXT > HI_VALUE
     2810      953    2           THEN                      /* Value too large                    */
     2811      954    3           DO;
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:437  
     2812      955    3               ALTRETURN;
     2813      956    3           END;
     2814      957    2           CALL CHARBIN (VALUE,STRING$->X$STRING.TEXT);
     2815      958    2       END;
     2816      959    1       RETURN;
     2817      960        /**/
     2818      961    1   E_CONVERT:
     2819      962    1       ALTRETURN;
     2820      963    1   END X$DEC_CONVERT;
     2821      964        %EOD;

PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:438  
--  Include file information  --

   XUE_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure X$DEC_CONVERT.

   Procedure X$DEC_CONVERT requires 123 words for executable code.
   Procedure X$DEC_CONVERT requires 10 words of local(AUTO) storage.

PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:439  

 Object Unit name= X$DEC_CONVERT                              File name= XUE$EVAL.:E05TOU
 UTS= JUL 30 '97 09:16:19.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS    131    203  X$DEC_CONVERT
    1   Proc  even  none   123    173  X$DEC_CONVERT
    2  RoData even  none     2      2  X$DEC_CONVERT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  X$DEC_CONVERT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 X$STRIP_BLANKS
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:440  


     2738        1        /*T***********************************************************/
     2739        2        /*T*                                                         */
     2740        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2741        4        /*T*                                                         */
     2742        5        /*T***********************************************************/
     2743        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2744        7        X$DEC_CONVERT: PROC (STRING$,VALUE) ALTRET;

      7  1 000000   000000 700200 xent  X$DEC_CONVE* TSX0  ! X66_AUTO_2
         1 000001   000012 000002                    ZERO    10,2

     2745        8          %INCLUDE B_MACROS_C;
     2746      119          %INCLUDE XUE_MACRO_C;
     2747      863    1   DCL STRING$ PTR;
     2748      864    1   DCL VALUE SBIN WORD;
     2749      865        /***** Auto variables *****/
     2750      866    1   DCL WHERE SBIN WORD AUTO;
     2751      867    1   DCL RESULT SBIN WORD AUTO;
     2752      868        /***** External routines *****/
     2753      869          %XUE_ENTRIES (OMIT=X$DEC_CONVERT);
     2754      893        /***** Based structures *****/
     2755      894    1   DCL 1 B$STRING BASED,
     2756      895    1         2  SIZ UBIN BYTE UNAL,
     2757      896    1         2  TEXT (0:0) CHAR(1) UNAL;
     2758      897          %TEXTC (NAME=X$STRING);
     2759      902        /***** SEARCH table *****/
     2760      903    1   DCL DECIMAL_TABLE (0:511) UBIN BYTE UNAL CONSTANT INIT
     2761      904    1        ( 1*48, 0*10, 1*454);
     2762      905        /***** Max decimal value *****/
     2763      906    1   DCL HI_VALUE CHAR(0) CONSTANT INIT ('34359738367');
     2764      907        /*
     2765      908             ***** Initialize ...
     2766      909        */
     2767      910    1       RESULT = 0;

    910  1 000002   200006 450100                    STZ     RESULT,,AUTO
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:441  

     2768      911        /*
     2769      912             ***** Strip any BLANKS ...
     2770      913        */
     2771      914    1       CALL X$STRIP_BLANKS (STRING$);

    914  1 000003   200003 630500                    EPPR0   @STRING$,,AUTO
         1 000004   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000005   000000 701000 xent               TSX1    X$STRIP_BLANKS
         1 000006   000000 011000                    NOP     0

     2772      915        /*
     2773      916             ***** Null strings are not valid decimal strings ...
     2774      917        */
     2775      918    1       IF STRING$ -> X$STRING.SIZ = 0

    918  1 000007   200003 470500                    LDP0    @STRING$,,AUTO
         1 000010   000000 471500                    LDP1    0,,PR0
         1 000011   000100 101500                    MRL     fill='000'O
         1 000012   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000013   200010 000004                    ADSC9   RESULT+2,,AUTO           cn=0,n=4
         1 000014   200010 236100                    LDQ     RESULT+2,,AUTO
         1 000015   000000 116003                    CMPQ    0,DU
         1 000016   000040 600000 1                  TZE     s:923
         1 000017   000000 471500                    LDP1    0,,PR0
         1 000020   000100 101500                    MRL     fill='000'O
         1 000021   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000022   200011 000004                    ADSC9   RESULT+3,,AUTO           cn=0,n=4
         1 000023   200011 236100                    LDQ     RESULT+3,,AUTO
         1 000024   000001 116007                    CMPQ    1,DL
         1 000025   000033 601000 1                  TNZ     s:918+20
         1 000026   000000 471500                    LDP1    0,,PR0
         1 000027   040000 106500                    CMPC    fill='040'O
         1 000030   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 000031   000000 000001 2                  ADSC9   0                        cn=0,n=1
         1 000032   000040 600000 1                  TZE     s:923
         1 000033   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:442  
         1 000034   040000 106500                    CMPC    fill='040'O
         1 000035   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 000036   000001 000001 2                  ADSC9   1                        cn=0,n=1
         1 000037   000041 601000 1                  TNZ     s:927

     2776      919    1         OR (STRING$ -> X$STRING.SIZ = 1
     2777      920    1         AND STRING$ -> B$STRING.TEXT(0) = '-'
     2778      921    1         OR STRING$ -> B$STRING.TEXT(0) = '+')
     2779      922    1       THEN
     2780      923    1           ALTRETURN;

    923  1 000040   000000 702200 xent               TSX2  ! X66_AALT

     2781      924        /*
     2782      925             ***** VERIFY that all chars are legal DECIMAL characters ...
     2783      926        */
     2784      927    1       IF STRING$ -> B$STRING.TEXT(0) = '+'

    927  1 000041   000046 600000 1                  TZE     s:931
         1 000042   040000 106500                    CMPC    fill='040'O
         1 000043   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 000044   000000 000001 2                  ADSC9   0                        cn=0,n=1
         1 000045   000122 601000 1                  TNZ     s:946

     2785      928    1         OR STRING$ -> B$STRING.TEXT(0) = '-'
     2786      929    1       THEN                               /* In XCHARBIN form                   */
     2787      930    2       DO;

     2788      931    2           CALL SEARCH (WHERE,RESULT,DECIMAL_TABLE,STRING$ ->

    931  1 000046   000100 101500                    MRL     fill='000'O
         1 000047   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000050   200010 000002                    ADSC9   RESULT+2,,AUTO           cn=0,n=2
         1 000051   200010 220100                    LDX0    RESULT+2,,AUTO
         1 000052   777777 621010                    EAX1    -1,X0
         1 000053   000000 164540                    TCT
         1 000054   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:443  
         1 000055   000000 000000 0                  ARG     DECIMAL_TABLE
         1 000056   200005 000100                    ARG     WHERE,,AUTO
         1 000057   200005 235100                    LDA     WHERE,,AUTO
         1 000060   000033 771000                    ARL     27
         1 000061   200006 755100                    STA     RESULT,,AUTO
         1 000062   200005 551140                    STBA    WHERE,'40'O,AUTO
         1 000063   200005 054100                    AOS     WHERE,,AUTO

     2789      932    2             X$STRING.TEXT,1);      /* Skip SIGN char                     */
     2790      933    2           IF RESULT ~= 0

    933  1 000064   000000 115003                    CMPA    0,DU
         1 000065   000172 601000 1                  TNZ     E_CONVERT

     2791      934    2           THEN                      /* Non DECIMAL found                  */
     2792      935    2               GOTO E_CONVERT;
     2793      936    2           IF (STRING$ -> X$STRING.SIZ -1) >= LENGTHC(HI_VALUE)

    936  1 000066   000000 471500                    LDP1    0,,PR0
         1 000067   000100 101500                    MRL     fill='000'O
         1 000070   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000071   200010 000004                    ADSC9   RESULT+2,,AUTO           cn=0,n=4
         1 000072   200010 236100                    LDQ     RESULT+2,,AUTO
         1 000073   000014 116007                    CMPQ    12,DL
         1 000074   000110 604000 1                  TMI     s:942
         1 000075   000000 471500                    LDP1    0,,PR0
         1 000076   000100 101500                    MRL     fill='000'O
         1 000077   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000100   200011 000002                    ADSC9   RESULT+3,,AUTO           cn=0,n=2
         1 000101   200011 220100                    LDX0    RESULT+3,,AUTO
         1 000102   777777 621010                    EAX1    -1,X0
         1 000103   040140 106400                    CMPC    fill='040'O
         1 000104   000200 000013 0                  ADSC9   HI_VALUE                 cn=0,n=11
         1 000105   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         1 000106   000110 603000 1                  TRC     s:942

     2794      937    2             AND SUBSTR(STRING$ -> X$STRING.TEXT,1) > HI_VALUE
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:444  
     2795      938    2           THEN                      /* Value too large                    */
     2796      939    3           DO;

     2797      940    3               ALTRETURN;

    940  1 000107   000000 702200 xent               TSX2  ! X66_AALT

     2798      941    3           END;
     2799      942    2           CALL XCHARBIN (VALUE,STRING$->X$STRING.TEXT);

    942  1 000110   000000 471500                    LDP1    0,,PR0
         1 000111   000100 101500                    MRL     fill='000'O
         1 000112   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000113   200010 000002                    ADSC9   RESULT+2,,AUTO           cn=0,n=2
         1 000114   200010 220100                    LDX0    RESULT+2,,AUTO
         1 000115   200004 473500                    LDP3    @VALUE,,AUTO
         1 000116   000100 305540                    DTB
         1 000117   100000 210010                    NDSC9   0,,PR1                   cn=1,s=lsgns,sf=0,n=*X0
         1 000120   300000 000004                    NDSC9   0,,PR3                   cn=0,s=lsgnf,sf=0,n=4

     2800      943    2       END;

    943  1 000121   000171 710000 1                  TRA     s:959

     2801      944    1       ELSE                               /* In CHARBIN form                    */
     2802      945    2       DO;

     2803      946    2           CALL SEARCH (WHERE,RESULT,DECIMAL_TABLE,STRING$ ->

    946  1 000122   000100 101500                    MRL     fill='000'O
         1 000123   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000124   200010 000002                    ADSC9   RESULT+2,,AUTO           cn=0,n=2
         1 000125   200010 220100                    LDX0    RESULT+2,,AUTO
         1 000126   000000 164540                    TCT
         1 000127   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000130   000000 000000 0                  ARG     DECIMAL_TABLE
         1 000131   200005 000100                    ARG     WHERE,,AUTO
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:445  
         1 000132   200005 235100                    LDA     WHERE,,AUTO
         1 000133   000033 771000                    ARL     27
         1 000134   200006 755100                    STA     RESULT,,AUTO
         1 000135   200005 551140                    STBA    WHERE,'40'O,AUTO

     2804      947    2             X$STRING.TEXT,0);      /* No SIGN char                       */
     2805      948    2           IF RESULT ~= 0

    948  1 000136   000172 601000 1                  TNZ     E_CONVERT

     2806      949    2           THEN                      /* Non DECIMAL found                  */
     2807      950    2               GOTO E_CONVERT;
     2808      951    2           IF STRING$ -> X$STRING.SIZ >= LENGTHC(HI_VALUE)

    951  1 000137   000000 471500                    LDP1    0,,PR0
         1 000140   000100 101500                    MRL     fill='000'O
         1 000141   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000142   200010 000004                    ADSC9   RESULT+2,,AUTO           cn=0,n=4
         1 000143   200010 236100                    LDQ     RESULT+2,,AUTO
         1 000144   000013 116007                    CMPQ    11,DL
         1 000145   000160 604000 1                  TMI     s:957
         1 000146   000000 471500                    LDP1    0,,PR0
         1 000147   000100 101500                    MRL     fill='000'O
         1 000150   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000151   200011 000002                    ADSC9   RESULT+3,,AUTO           cn=0,n=2
         1 000152   200011 220100                    LDX0    RESULT+3,,AUTO
         1 000153   040140 106400                    CMPC    fill='040'O
         1 000154   000200 000013 0                  ADSC9   HI_VALUE                 cn=0,n=11
         1 000155   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000156   000160 603000 1                  TRC     s:957

     2809      952    2             AND STRING$ -> X$STRING.TEXT > HI_VALUE
     2810      953    2           THEN                      /* Value too large                    */
     2811      954    3           DO;

     2812      955    3               ALTRETURN;

PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:446  
    955  1 000157   000000 702200 xent               TSX2  ! X66_AALT

     2813      956    3           END;
     2814      957    2           CALL CHARBIN (VALUE,STRING$->X$STRING.TEXT);

    957  1 000160   000000 471500                    LDP1    0,,PR0
         1 000161   000100 101500                    MRL     fill='000'O
         1 000162   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000163   200010 000002                    ADSC9   RESULT+2,,AUTO           cn=0,n=2
         1 000164   200010 220100                    LDX0    RESULT+2,,AUTO
         1 000165   200004 473500                    LDP3    @VALUE,,AUTO
         1 000166   000100 305540                    DTB
         1 000167   100000 230010                    NDSC9   0,,PR1                   cn=1,s=nosgn,sf=0,n=*X0
         1 000170   300000 000004                    NDSC9   0,,PR3                   cn=0,s=lsgnf,sf=0,n=4

     2815      958    2       END;

     2816      959    1       RETURN;

    959  1 000171   000000 702200 xent               TSX2  ! X66_ARET

     2817      960        /**/
     2818      961    1   E_CONVERT:
     2819      962    1       ALTRETURN;

    962  1 000172   000000 702200 xent  E_CONVERT    TSX2  ! X66_AALT
     2820      963    1   END X$DEC_CONVERT;
     2821      964        %EOD;

PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:447  
--  Include file information  --

   XUE_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure X$DEC_CONVERT.
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:448  

 **** Variables and constants ****

  ****  Section 000 RoData X$DEC_CONVERT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b UBIN(9)     r     1 DECIMAL_TABLE(0:511)
   200-0-0/c CHAR(11)    r     1 HI_VALUE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @STRING$                   4-0-0/w PTR         r     1 @VALUE
     6-0-0/w SBIN        r     1 RESULT                    *0-0-0/w PTR         r     1 STRING$
    *0-0-0/w SBIN        r     1 VALUE                      5-0-0/w SBIN        r     1 WHERE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(18)    r     1 B$STRING                   0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure X$DEC_CONVERT requires 123 words for executable code.
   Procedure X$DEC_CONVERT requires 10 words of local(AUTO) storage.
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:449  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=X$DEC_CONVERT File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:450  
          MINI XREF LISTING

B$STRING.TEXT
       896**DCL       918>>IF        918>>IF        927>>IF        927>>IF
DECIMAL_TABLE
       903**DCL       931>>CALLBLT   946>>CALLBLT
E_CONVERT
       962**LABEL     935--GOTO      950--GOTO
HI_VALUE
       906**DCL       936--IF        936>>IF        951--IF        951>>IF
RESULT
       867**DCL       910<<ASSIGN    931<<CALLBLT   933>>IF        946<<CALLBLT   948>>IF
STRING$
       863**DCL         7--PROC      914<>CALL      918>>IF        918>>IF        918>>IF        918>>IF
       927>>IF        927>>IF        931>>CALLBLT   931>>CALLBLT   936>>IF        936>>IF        936>>IF
       942>>CALLBLT   942>>CALLBLT   946>>CALLBLT   946>>CALLBLT   951>>IF        951>>IF        951>>IF
       957>>CALLBLT   957>>CALLBLT
VALUE
       864**DCL         7--PROC      942<<CALLBLT   957<<CALLBLT
WHERE
       866**DCL       931<<CALLBLT   946<<CALLBLT
X$STRING.SIZ
       899**DCL       900--IMP-SIZ   918>>IF        918>>IF        931>>CALLBLT   936>>IF        936>>IF
       942>>CALLBLT   946>>CALLBLT   951>>IF        951>>IF        957>>CALLBLT
X$STRING.TEXT
       900**DCL       931>>CALLBLT   936>>IF        942>>CALLBLT   946>>CALLBLT   951>>IF        957>>CALLBLT
X$STRIP_BLANKS
       881**DCL-ENT   914--CALL

PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:451  
     2822        1        /*T***********************************************************/
     2823        2        /*T*                                                         */
     2824        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2825        4        /*T*                                                         */
     2826        5        /*T***********************************************************/
     2827        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2828        7        X$PRE_PROCESS: PROC (XUE_PPCB) ALTRET;
     2829        8        /**********************************************************************/
     2830        9        /*F*    NAME:        X$PRE_PROCESS
     2831       10                PURPOSE:     To do pre-parse expression processing.
     2832       11                DESCRIPTION: This routine scans for %expressions, evaluates
     2833       12                             them and then sticks the result back into the
     2834       13                             command. It only scans the record once. Thus
     2835       14                             %expressions may not have other %expressions
     2836       15                             imbedded.
     2837       16        */
     2838       17        /**********************************************************************/
     2839       18          %INCLUDE B_MACROS_C;
     2840      129          %INCLUDE CP_6;
     2841     5688          %INCLUDE CP_6_SUBS;
     2842     6228          %INCLUDE XU_MACRO_C;
     2843     9334          %INCLUDE XU_PERR_C;
     2844     9525          %INCLUDE XUE_MACRO_C;
     2845    10269        /***** External routines *****/
     2846    10270          %XUE_ENTRIES (OMIT=X$PRE_PROCESS);
     2847    10294    1   DCL X$PARSE ENTRY(1) ALTRET;
     2848    10295        /***** Parameters *****/
     2849    10296          %XUE_PPCB (NAME=XUE_PPCB,STCLASS=" ");
     2850    10563        /***** Character variables *****/
     2851    10564    1   DCL TEMPBUF CHAR(511) AUTO;
     2852    10565        %VLP_NAME (FPTN=COMMENT_L,LEN=2,STCLASS=AUTO);
     2853    10592        %VLP_NAME (FPTN=COMMENT_R,LEN=2,STCLASS=AUTO);
     2854    10619        /***** Word variables *****/
     2855    10620    1   DCL INDX1 SBIN WORD AUTO;
     2856    10621    1   DCL INDX2 SBIN WORD AUTO;
     2857    10622    1   DCL WHERE SBIN WORD AUTO;
     2858    10623    1   DCL RESULTS SBIN WORD AUTO;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:452  
     2859    10624    1   DCL START_INDX SBIN WORD AUTO;
     2860    10625    1   DCL STR_INDX SBIN WORD AUTO;
     2861    10626    1   DCL ERR_INDX SBIN WORD AUTO;
     2862    10627    1   DCL SAVE_WKSZ# UBIN WORD AUTO;
     2863    10628        /***** Ptrs *****/
     2864    10629    1   DCL SAVE_WORK$ PTR AUTO;
     2865    10630        /***** Based structures *****/
     2866    10631          %TEXTC (NAME=X$STRING);
     2867    10636    1   DCL IN$BUF CHAR(XUE_PPCB.ICHARS#) UNAL BASED (XUE_PPCB.INBUF$);
     2868    10637    1   DCL OUT$BUF CHAR(XUE_PPCB.OCHARS#) UNAL BASED (XUE_PPCB.OUTBUF$);
     2869    10638          %PARSE$OUT (NAME=P$B,STCLASS=BASED);
     2870    10683        /***** Bit variables *****/
     2871    10684        /***** Auto Structures *****/
     2872    10685          %P_PCB (NAME=PCB,STCLASS=AUTO);
     2873    10884        /***** Constants *****/
     2874    10885    1   DCL VERIFY_CHARS (0:511) UBIN BYTE UNAL CONSTANT INIT
     2875    10886    1       (1*36,0,0,1,1,0,1*7,0*10,1*7,0*26,1*6,0*26,1*389);
     2876    10887          %P_PCB (NAME = I_PCB,
     2877    10888                  CNTU = NO,                    /* Don't allow continuation           */
     2878    10889                  U$ = XUE$PP_SUCCESS,
     2879    10890                  STCLASS = CONSTANT);
     2880    11089        /***** Error codes *****/
     2881    11090          %VLP_ERRCODE (FPTN=E_TRUNCATE,ERR#=%E$XUE#TRUNCATE,
     2882    11091                        FCG="XU",MID="E",STCLASS=CONSTANT);
     2883    11136          /*E*    ERROR: XUE-E$XUE#TRUNCATE-0
     2884    11137              MESSAGE: The result of preparsing was longer than allowed. Truncation occured.
     2885    11138          */
     2886    11139        %EJECT;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:453  
     2887    11140        /*
     2888    11141             ***** Copy IN$BUF into OUT$BUF. OUT$BUF is used for
     2889    11142                   all work. IN$BUF must never be touched (may cause
     2890    11143                   memory fault, etc.). OUT$BUF will be unchanged if no
     2891    11144                   preprocessor expressions were found ...
     2892    11145        */
     2893    11146    1       OUT$BUF = IN$BUF;
     2894    11147    1       XUE_PPCB.RCHARS# = XUE_PPCB.ICHARS#;
     2895    11148    1       START_INDX = 0;
     2896    11149    1       ERR_INDX = 0;
     2897    11150        /*
     2898    11151             ***** Save WORK$ and WKSZ# ...
     2899    11152        */
     2900    11153    1       SAVE_WORK$ = XUE_PPCB.ECB.WORK$;
     2901    11154    1       SAVE_WKSZ# = XUE_PPCB.ECB.WKSZ#;
     2902    11155        /*
     2903    11156             ***** Search for any (%) PREPROCESSOR EXPRESSIONS ...
     2904    11157        */
     2905    11158    1       CALL INDEX (STR_INDX,'%',OUT$BUF,START_INDX) ALTRET(RETURN_TO_USER);
     2906    11159        /*
     2907    11160             ***** Initialize PCB ...
     2908    11161        */
     2909    11162    1       PCB = I_PCB;
     2910    11163    1       PCB.WKSZ = XUE_PPCB.ECB.WKSZ#;
     2911    11164    1       PCB.WORK$ = XUE_PPCB.ECB.WORK$;
     2912    11165    1       PCB.CONTINUE = %NO#;
     2913    11166    1       PCB.ROOT$ = XUE_PPCB.ROOT$;
     2914    11167    1       PCB.COMMENT.LEAD = XUE_PPCB.ECB.LEAD#;
     2915    11168    1       PCB.COMMENT.TRAIL = XUE_PPCB.ECB.TRAIL#;
     2916    11169        /*
     2917    11170             ***** Initialize comment delimiters ...
     2918    11171        */
     2919    11172    1       IF SUBSTR(XUE_PPCB.ECB.LEAD#,0,1) = ' '
     2920    11173    1       THEN
     2921    11174    2       DO;
     2922    11175    2           IF SUBSTR(XUE_PPCB.ECB.LEAD#,1,1) = ' '
     2923    11176    2           THEN
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:454  
     2924    11177    3           DO;   /* No comment characters supplied */
     2925    11178    3               COMMENT_L.L# = 0;
     2926    11179    3           END;
     2927    11180    2           ELSE   /* One character delimiter */
     2928    11181    3           DO;
     2929    11182    3               COMMENT_L.L# = 1;
     2930    11183    3               COMMENT_L.NAME# = SUBSTR(XUE_PPCB.ECB.LEAD#,1,1);
     2931    11184    3           END;
     2932    11185    2       END;
     2933    11186    1       ELSE /* Two character delimiter */
     2934    11187    2       DO;
     2935    11188    2           COMMENT_L.L# = 2;
     2936    11189    2           COMMENT_L.NAME# = XUE_PPCB.ECB.LEAD#;
     2937    11190    2       END;
     2938    11191    1       IF SUBSTR(XUE_PPCB.ECB.TRAIL#,0,1) = ' '
     2939    11192    1       THEN
     2940    11193    2       DO;
     2941    11194    2           IF SUBSTR(XUE_PPCB.ECB.TRAIL#,1,1) = ' '
     2942    11195    2           THEN
     2943    11196    3           DO;   /* No comment characters supplied */
     2944    11197    3               COMMENT_R.L# = 0;
     2945    11198    3           END;
     2946    11199    2           ELSE   /* One character delimiter */
     2947    11200    3           DO;
     2948    11201    3               COMMENT_R.L# = 1;
     2949    11202    3               COMMENT_R.NAME# = SUBSTR(XUE_PPCB.ECB.TRAIL#,1,1);
     2950    11203    3           END;
     2951    11204    2       END;
     2952    11205    1       ELSE /* Two character delimiter */
     2953    11206    2       DO;
     2954    11207    2           COMMENT_R.L# = 2;
     2955    11208    2           COMMENT_R.NAME# = XUE_PPCB.ECB.TRAIL#;
     2956    11209    2       END;
     2957    11210        /*
     2958    11211             ***** Loop until no more PREPROCESSOR expressions found ...
     2959    11212        */
     2960    11213    2   MAIN_LOOP: DO WHILE (%YES#);
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:455  
     2961    11214        /*
     2962    11215             ***** If the character following the % is not legal
     2963    11216                   in a %EXPRESSION then ignore it ...
     2964    11217        */
     2965    11218    2           CALL SEARCH (WHERE,RESULTS,VERIFY_CHARS,
     2966    11219    2             SUBSTR(OUT$BUF,STR_INDX+1,1));
     2967    11220    2           IF RESULTS ~= 0
     2968    11221    2           THEN   /* The character is illegal */
     2969    11222    3           DO;
     2970    11223    3               START_INDX = STR_INDX + 1;
     2971    11224    3               GOTO END_LOOP;
     2972    11225    3           END;
     2973    11226        /*
     2974    11227             ***** May be inside a comment
     2975    11228                   If so, then dont process ...
     2976    11229        */
     2977    11230        /*
     2978    11231             ***** If no leading comment delimiter is defined,
     2979    11232                   then no comments are allowed ...
     2980    11233        */
     2981    11234    2           IF COMMENT_L.L# = 0
     2982    11235    2           THEN
     2983    11236    2               GOTO END_COMMENT;
     2984    11237        /*
     2985    11238             ***** Look for matched comment pairs between last
     2986    11239                   preprocessor expression, or beginning of record, and
     2987    11240                   the beginning of this preprocessor expression.
     2988    11241                   Determine if this expression is within a comment ...
     2989    11242        */
     2990    11243    2           INDX1 = 0;
     2991    11244    3           DO WHILE (%YES#);
     2992    11245        /*
     2993    11246             ***** Find the left comment delimiter ...
     2994    11247        */
     2995    11248    3               CALL INDEX (INDX2,SUBSTR(COMMENT_L.NAME#,0,COMMENT_L.L#),
     2996    11249    3                 SUBSTR(OUT$BUF,0,STR_INDX),INDX1) ALTRET(END_COMMENT);
     2997    11250    3               INDX1 = INDX2 + 1; /* Where to look for closing delimiter */
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:456  
     2998    11251        /*
     2999    11252             ***** Now find the right comment delimeter.
     3000    11253                   If none is found, then ignore the rest
     3001    11254                   of the information on the record ...
     3002    11255        */
     3003    11256    3               CALL INDEX (INDX2,SUBSTR(COMMENT_R.NAME#,0,COMMENT_R.L#),
     3004    11257    3                 SUBSTR(OUT$BUF,0,STR_INDX),INDX1)
     3005    11258    3               WHENALTRETURN
     3006    11259    4               DO;   /* Within quotes. Skip over it */
     3007    11260    4                   CALL INDEX (INDX2,SUBSTR(COMMENT_R.NAME#,0,COMMENT_R.L#),
     3008    11261    4                     OUT$BUF,INDX2) ALTRET(RETURN_TO_USER);
     3009    11262    4                   START_INDX = INDX2 + 1;
     3010    11263    4                   GOTO END_LOOP;
     3011    11264    4               END;
     3012    11265    3               INDX1 = INDX2 + 1; /* Where to look for new left delimiter */
     3013    11266    3           END; /* Do while ... end */
     3014    11267    2   END_COMMENT: ;   /* No left comment delimeter. No comment */
     3015    11268        /*
     3016    11269             ***** If this is two percents side by side then
     3017    11270                   pretend that it is one and start again ...
     3018    11271        */
     3019    11272    2           IF SUBSTR(OUT$BUF,STR_INDX+1,1) = '%'
     3020    11273    2           THEN /* Two percent signs */
     3021    11274    3           DO;
     3022    11275    3               CALL CONCAT(TEMPBUF,SUBSTR(OUT$BUF,0,STR_INDX),
     3023    11276    3                 SUBSTR(OUT$BUF,STR_INDX+1));
     3024    11277    3               XUE_PPCB.RCHARS# = XUE_PPCB.RCHARS# - 1;
     3025    11278    3               OUT$BUF = TEMPBUF;
     3026    11279    3               START_INDX = STR_INDX + 1;  /* Skip over % */
     3027    11280    3               ERR_INDX = ERR_INDX + 1;
     3028    11281    3               GOTO END_LOOP;
     3029    11282    3           END;
     3030    11283        /*
     3031    11284             ***** Evaluate the expression ...
     3032    11285        */
     3033    11286    2           PCB.TEXT$ = PINCRC(XUE_PPCB.OUTBUF$,STR_INDX);
     3034    11287    2           PCB.NCHARS = XUE_PPCB.RCHARS# - STR_INDX;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:457  
     3035    11288    2           CALL X$PARSE (PCB) ALTRET(E_PARSE);
     3036    11289        /*
     3037    11290             ***** Setup workarea for X$EVAL ...
     3038    11291        */
     3039    11292    2           XUE_PPCB.ECB.WORK$ = PINCRW(SAVE_WORK$,PCB.WK_USED+1);
     3040    11293    2           XUE_PPCB.ECB.WKSZ# = SAVE_WKSZ# - (PCB.WK_USED+1);
     3041    11294    2           XUE_PPCB.ECB.TREE$ = PCB.OUT$;
     3042    11295    2           CALL X$EVAL (XUE_PPCB.ECB.TREE$) ALTRET(E_PREPARSE);
     3043    11296        /*
     3044    11297             ***** Insert the resultant string into OUT$BUF ...
     3045    11298        */
     3046    11299    2           INDX1 = PCB.OUT$ -> P$B.SUBLK$(PCB.OUT$ -> P$B.NSUBLKS -1) ->
     3047    11300    2             P$B.CPOS + STR_INDX;
     3048    11301    2           IF STR_INDX = 0
     3049    11302    2           THEN   /* %exp at front of buffer */
     3050    11303    2               CALL CONCAT(TEMPBUF,XUE_PPCB.ECB.OUT$ -> X$STRING.TEXT,
     3051    11304    2                 SUBSTR(OUT$BUF,INDX1));
     3052    11305    2           ELSE
     3053    11306    2               CALL CONCAT(TEMPBUF,SUBSTR(OUT$BUF,0,STR_INDX),
     3054    11307    2                 XUE_PPCB.ECB.OUT$->X$STRING.TEXT,
     3055    11308    2                 SUBSTR(OUT$BUF,INDX1));
     3056    11309    2           OUT$BUF = TEMPBUF;
     3057    11310    2           XUE_PPCB.RCHARS# = XUE_PPCB.RCHARS# +
     3058    11311    2             (XUE_PPCB.ECB.OUT$ -> X$STRING.SIZ - (INDX1 - STR_INDX));
     3059    11312    2           ERR_INDX = ERR_INDX -
     3060    11313    2             (XUE_PPCB.ECB.OUT$ -> X$STRING.SIZ - (INDX1 - STR_INDX));
     3061    11314    2           IF XUE_PPCB.RCHARS# > XUE_PPCB.OCHARS#
     3062    11315    2           THEN   /* Truncated */
     3063    11316    3           DO;
     3064    11317                      /*   Show them the error of their ways!!! */
     3065    11318    3               XUE_PPCB.ECB.ERR = E_TRUNCATE;
     3066    11319    3               XUE_PPCB.RCHARS# = XUE_PPCB.OCHARS#;
     3067    11320    3               GOTO E_PREPARSE;
     3068    11321    3           END;
     3069    11322        /*
     3070    11323             ***** Move START_INDX past end of %exp ...
     3071    11324                   That is, do not rescan from front of command.
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:458  
     3072    11325        */
     3073    11326    2           START_INDX = STR_INDX + XUE_PPCB.ECB.OUT$ -> X$STRING.SIZ;
     3074    11327    2   END_LOOP:
     3075    11328        /*
     3076    11329             ***** Reset WORK$ and WKSZ# ...
     3077    11330        */
     3078    11331    2           XUE_PPCB.ECB.WORK$ = SAVE_WORK$;
     3079    11332    2           XUE_PPCB.ECB.WKSZ# = SAVE_WKSZ#;
     3080    11333        /*
     3081    11334             ***** See if there are any more %expressions ...
     3082    11335        */
     3083    11336    2           IF START_INDX >= XUE_PPCB.RCHARS#
     3084    11337    2           THEN   /* No more chars to look at */
     3085    11338    2               GOTO RETURN_TO_USER;
     3086    11339    2           CALL INDEX (STR_INDX,'%',OUT$BUF,START_INDX) ALTRET(RETURN_TO_USER);
     3087    11340    2       END MAIN_LOOP; /* Do while ... end */
     3088    11341    1   RETURN_TO_USER:   /* Finished pre-parse processing */
     3089    11342    1       RETURN;
     3090    11343        %EJECT;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:459  
     3091    11344    2       DO WHILE (%NO#);
     3092    11345    2   E_PREPARSE:
     3093    11346    2           XUE_PPCB.ECB.ERR_POS# = XUE_PPCB.ECB.ERR_POS# + STR_INDX + ERR_INDX;
     3094    11347        /*
     3095    11348             ***** Reset WORK$ and WKSZ# ...
     3096    11349        */
     3097    11350    2           XUE_PPCB.ECB.WORK$ = SAVE_WORK$;
     3098    11351    2           XUE_PPCB.ECB.WKSZ# = SAVE_WKSZ#;
     3099    11352    2       END;
     3100    11353    2       DO WHILE (%NO#);
     3101    11354    2   E_PARSE:
     3102    11355    2           XUE_PPCB.ECB.ERR = PCB.ERROR;
     3103    11356    2           XUE_PPCB.ECB.ERR_POS# = PCB.HI_CHAR + STR_INDX + ERR_INDX;
     3104    11357    2       END;
     3105    11358        /*
     3106    11359             ***** Restore WORK$ and WKSZ# ...
     3107    11360        */
     3108    11361    1       ALTRETURN;
     3109    11362    1   END X$PRE_PROCESS;
     3110    11363        %EOD;

PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:460  
--  Include file information  --

   XUE_MACRO_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure X$PRE_PROCESS.

   Procedure X$PRE_PROCESS requires 425 words for executable code.
   Procedure X$PRE_PROCESS requires 162 words of local(AUTO) storage.

PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:461  

 Object Unit name= X$PRE_PROCESS                              File name= XUE$EVAL.:E05TOU
 UTS= JUL 30 '97 09:16:26.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    143    217  X$PRE_PROCESS
    2   Proc  even  none   425    651  X$PRE_PROCESS
    3  RoData even  none     3      3  X$PRE_PROCESS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  X$PRE_PROCESS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 XUE$PP_SUCCESS
 yes     yes           Std       1 X$EVAL
 yes     yes           Std       1 X$PARSE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_INDEX
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:462  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:463  


     2822        1        /*T***********************************************************/
     2823        2        /*T*                                                         */
     2824        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2825        4        /*T*                                                         */
     2826        5        /*T***********************************************************/
     2827        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2828        7        X$PRE_PROCESS: PROC (XUE_PPCB) ALTRET;

      7  2 000000   000000 700200 xent  X$PRE_PROCE* TSX0  ! X66_AUTO_1
         2 000001   000242 000001                    ZERO    162,1

     2829        8        /**********************************************************************/
     2830        9        /*F*    NAME:        X$PRE_PROCESS
     2831       10                PURPOSE:     To do pre-parse expression processing.
     2832       11                DESCRIPTION: This routine scans for %expressions, evaluates
     2833       12                             them and then sticks the result back into the
     2834       13                             command. It only scans the record once. Thus
     2835       14                             %expressions may not have other %expressions
     2836       15                             imbedded.
     2837       16        */
     2838       17        /**********************************************************************/
     2839       18          %INCLUDE B_MACROS_C;
     2840      129          %INCLUDE CP_6;
     2841     5688          %INCLUDE CP_6_SUBS;
     2842     6228          %INCLUDE XU_MACRO_C;
     2843     9334          %INCLUDE XU_PERR_C;
     2844     9525          %INCLUDE XUE_MACRO_C;
     2845    10269        /***** External routines *****/
     2846    10270          %XUE_ENTRIES (OMIT=X$PRE_PROCESS);
     2847    10294    1   DCL X$PARSE ENTRY(1) ALTRET;
     2848    10295        /***** Parameters *****/
     2849    10296          %XUE_PPCB (NAME=XUE_PPCB,STCLASS=" ");
     2850    10563        /***** Character variables *****/
     2851    10564    1   DCL TEMPBUF CHAR(511) AUTO;
     2852    10565        %VLP_NAME (FPTN=COMMENT_L,LEN=2,STCLASS=AUTO);
     2853    10592        %VLP_NAME (FPTN=COMMENT_R,LEN=2,STCLASS=AUTO);
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:464  
     2854    10619        /***** Word variables *****/
     2855    10620    1   DCL INDX1 SBIN WORD AUTO;
     2856    10621    1   DCL INDX2 SBIN WORD AUTO;
     2857    10622    1   DCL WHERE SBIN WORD AUTO;
     2858    10623    1   DCL RESULTS SBIN WORD AUTO;
     2859    10624    1   DCL START_INDX SBIN WORD AUTO;
     2860    10625    1   DCL STR_INDX SBIN WORD AUTO;
     2861    10626    1   DCL ERR_INDX SBIN WORD AUTO;
     2862    10627    1   DCL SAVE_WKSZ# UBIN WORD AUTO;
     2863    10628        /***** Ptrs *****/
     2864    10629    1   DCL SAVE_WORK$ PTR AUTO;
     2865    10630        /***** Based structures *****/
     2866    10631          %TEXTC (NAME=X$STRING);
     2867    10636    1   DCL IN$BUF CHAR(XUE_PPCB.ICHARS#) UNAL BASED (XUE_PPCB.INBUF$);
     2868    10637    1   DCL OUT$BUF CHAR(XUE_PPCB.OCHARS#) UNAL BASED (XUE_PPCB.OUTBUF$);
     2869    10638          %PARSE$OUT (NAME=P$B,STCLASS=BASED);
     2870    10683        /***** Bit variables *****/
     2871    10684        /***** Auto Structures *****/
     2872    10685          %P_PCB (NAME=PCB,STCLASS=AUTO);
     2873    10884        /***** Constants *****/
     2874    10885    1   DCL VERIFY_CHARS (0:511) UBIN BYTE UNAL CONSTANT INIT
     2875    10886    1       (1*36,0,0,1,1,0,1*7,0*10,1*7,0*26,1*6,0*26,1*389);
     2876    10887          %P_PCB (NAME = I_PCB,
     2877    10888                  CNTU = NO,                    /* Don't allow continuation           */
     2878    10889                  U$ = XUE$PP_SUCCESS,
     2879    10890                  STCLASS = CONSTANT);
     2880    11089        /***** Error codes *****/
     2881    11090          %VLP_ERRCODE (FPTN=E_TRUNCATE,ERR#=%E$XUE#TRUNCATE,
     2882    11091                        FCG="XU",MID="E",STCLASS=CONSTANT);
     2883    11136          /*E*    ERROR: XUE-E$XUE#TRUNCATE-0
     2884    11137             MESSAGE: The result of preparsing was longer than allowed. Truncation occured.
     2885    11138          */
     2886    11139        %EJECT;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:465  
     2887    11140        /*
     2888    11141             ***** Copy IN$BUF into OUT$BUF. OUT$BUF is used for
     2889    11142                   all work. IN$BUF must never be touched (may cause
     2890    11143                   memory fault, etc.). OUT$BUF will be unchanged if no
     2891    11144                   preprocessor expressions were found ...
     2892    11145        */
     2893    11146    1       OUT$BUF = IN$BUF;

  11146  2 000002   200003 470500                    LDP0    @XUE_PPCB,,AUTO
         2 000003   000002 471500                    LDP1    2,,PR0
         2 000004   000003 720100                    LXL0    3,,PR0
         2 000005   000000 473500                    LDP3    0,,PR0
         2 000006   000001 721100                    LXL1    1,,PR0
         2 000007   040140 100540                    MLR     fill='040'O
         2 000010   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         2 000011   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     2894    11147    1       XUE_PPCB.RCHARS# = XUE_PPCB.ICHARS#;

  11147  2 000012   000001 235100                    LDA     1,,PR0
         2 000013   000004 755100                    STA     4,,PR0

     2895    11148    1       START_INDX = 0;

  11148  2 000014   200212 450100                    STZ     START_INDX,,AUTO

     2896    11149    1       ERR_INDX = 0;

  11149  2 000015   200214 450100                    STZ     ERR_INDX,,AUTO

     2897    11150        /*
     2898    11151             ***** Save WORK$ and WKSZ# ...
     2899    11152        */
     2900    11153    1       SAVE_WORK$ = XUE_PPCB.ECB.WORK$;

  11153  2 000016   000007 236100                    LDQ     7,,PR0
         2 000017   200216 756100                    STQ     SAVE_WORK$,,AUTO
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:466  

     2901    11154    1       SAVE_WKSZ# = XUE_PPCB.ECB.WKSZ#;

  11154  2 000020   000010 235100                    LDA     8,,PR0
         2 000021   200215 755100                    STA     SAVE_WKSZ#,,AUTO

     2902    11155        /*
     2903    11156             ***** Search for any (%) PREPROCESSOR EXPRESSIONS ...
     2904    11157        */
     2905    11158    1       CALL INDEX (STR_INDX,'%',OUT$BUF,START_INDX) ALTRET(RETURN_TO_USER);

  11158  2 000022   000002 471500                    LDP1    2,,PR0
         2 000023   000003 720100                    LXL0    3,,PR0
         2 000024   000000 636010                    EAQ     0,X0
         2 000025   000022 772000                    QRL     18
         2 000026   200212 136100                    SBLQ    START_INDX,,AUTO
         2 000027   200236 756100                    STQ     PCB+15,,AUTO
         2 000030   200212 236100                    LDQ     START_INDX,,AUTO
         2 000031   200236 720100                    LXL0    PCB+15,,AUTO
         2 000032   200212 235100                    LDA     START_INDX,,AUTO
         2 000033   000000 124545                    SCM     mask='000'O
         2 000034   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         2 000035   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000036   200213 000100                    ARG     STR_INDX,,AUTO
         2 000037   200213 056100                    ASQ     STR_INDX,,AUTO
         2 000040   000623 606400 2                  TTN     RETURN_TO_USER

     2906    11159        /*
     2907    11160             ***** Initialize PCB ...
     2908    11161        */
     2909    11162    1       PCB = I_PCB;

  11162  2 000041   000100 100400                    MLR     fill='000'O
         2 000042   000200 000070 1                  ADSC9   I_PCB                    cn=0,n=56
         2 000043   200217 000070                    ADSC9   PCB,,AUTO                cn=0,n=56

     2910    11163    1       PCB.WKSZ = XUE_PPCB.ECB.WKSZ#;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:467  

  11163  2 000044   000010 720100                    LXL0    8,,PR0
         2 000045   200224 740100                    STX0    PCB+5,,AUTO

     2911    11164    1       PCB.WORK$ = XUE_PPCB.ECB.WORK$;

  11164  2 000046   000007 236100                    LDQ     7,,PR0
         2 000047   200221 756100                    STQ     PCB+2,,AUTO

     2912    11165    1       PCB.CONTINUE = %NO#;

  11165  2 000050   000001 236000 3                  LDQ     1
         2 000051   200224 356100                    ANSQ    PCB+5,,AUTO

     2913    11166    1       PCB.ROOT$ = XUE_PPCB.ROOT$;

  11166  2 000052   000005 236100                    LDQ     5,,PR0
         2 000053   200220 756100                    STQ     PCB+1,,AUTO

     2914    11167    1       PCB.COMMENT.LEAD = XUE_PPCB.ECB.LEAD#;

  11167  2 000054   000027 221100                    LDX1    23,,PR0
         2 000055   200226 741100                    STX1    PCB+7,,AUTO

     2915    11168    1       PCB.COMMENT.TRAIL = XUE_PPCB.ECB.TRAIL#;

  11168  2 000056   000027 722100                    LXL2    23,,PR0
         2 000057   200226 442100                    SXL2    PCB+7,,AUTO

     2916    11169        /*
     2917    11170             ***** Initialize comment delimiters ...
     2918    11171        */
     2919    11172    1       IF SUBSTR(XUE_PPCB.ECB.LEAD#,0,1) = ' '

  11172  2 000060   000027 236100                    LDQ     23,,PR0
         2 000061   777000 376003                    ANQ     -512,DU
         2 000062   040000 116003                    CMPQ    16384,DU
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:468  
         2 000063   000104 601000 2                  TNZ     s:11188

     2920    11173    1       THEN
     2921    11174    2       DO;

     2922    11175    2           IF SUBSTR(XUE_PPCB.ECB.LEAD#,1,1) = ' '

  11175  2 000064   000027 236100                    LDQ     23,,PR0
         2 000065   000777 376003                    ANQ     511,DU
         2 000066   000040 116003                    CMPQ    32,DU
         2 000067   000073 601000 2                  TNZ     s:11182

     2923    11176    2           THEN
     2924    11177    3           DO;   /* No comment characters supplied */

     2925    11178    3               COMMENT_L.L# = 0;

  11178  2 000070   000000 236003                    LDQ     0,DU
         2 000071   200204 552140                    STBQ    COMMENT_L,'40'O,AUTO

     2926    11179    3           END;

  11179  2 000072   000111 710000 2                  TRA     s:11191

     2927    11180    2           ELSE   /* One character delimiter */
     2928    11181    3           DO;

     2929    11182    3               COMMENT_L.L# = 1;

  11182  2 000073   001000 236003                    LDQ     512,DU
         2 000074   200204 552140                    STBQ    COMMENT_L,'40'O,AUTO

     2930    11183    3               COMMENT_L.NAME# = SUBSTR(XUE_PPCB.ECB.LEAD#,1,1);

  11183  2 000075   000027 236100                    LDQ     23,,PR0
         2 000076   000011 736000                    QLS     9
         2 000077   777000 376003                    ANQ     -512,DU
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:469  
         2 000100   000002 276000 3                  ORQ     2
         2 000101   000011 772000                    QRL     9
         2 000102   200204 552130                    STBQ    COMMENT_L,'30'O,AUTO

     2931    11184    3           END;

     2932    11185    2       END;

  11185  2 000103   000111 710000 2                  TRA     s:11191

     2933    11186    1       ELSE /* Two character delimiter */
     2934    11187    2       DO;

     2935    11188    2           COMMENT_L.L# = 2;

  11188  2 000104   002000 236003                    LDQ     1024,DU
         2 000105   200204 552140                    STBQ    COMMENT_L,'40'O,AUTO

     2936    11189    2           COMMENT_L.NAME# = XUE_PPCB.ECB.LEAD#;

  11189  2 000106   000027 236100                    LDQ     23,,PR0
         2 000107   000011 772000                    QRL     9
         2 000110   200204 552130                    STBQ    COMMENT_L,'30'O,AUTO

     2937    11190    2       END;

     2938    11191    1       IF SUBSTR(XUE_PPCB.ECB.TRAIL#,0,1) = ' '

  11191  2 000111   000027 236100                    LDQ     23,,PR0
         2 000112   777000 376007                    ANQ     -512,DL
         2 000113   040000 116007                    CMPQ    16384,DL
         2 000114   000134 601000 2                  TNZ     s:11207

     2939    11192    1       THEN
     2940    11193    2       DO;

     2941    11194    2           IF SUBSTR(XUE_PPCB.ECB.TRAIL#,1,1) = ' '
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:470  

  11194  2 000115   000027 236100                    LDQ     23,,PR0
         2 000116   000777 376007                    ANQ     511,DL
         2 000117   000040 116007                    CMPQ    32,DL
         2 000120   000124 601000 2                  TNZ     s:11201

     2942    11195    2           THEN
     2943    11196    3           DO;   /* No comment characters supplied */

     2944    11197    3               COMMENT_R.L# = 0;

  11197  2 000121   000000 236003                    LDQ     0,DU
         2 000122   200205 552140                    STBQ    COMMENT_R,'40'O,AUTO

     2945    11198    3           END;

  11198  2 000123   000141 710000 2                  TRA     MAIN_LOOP

     2946    11199    2           ELSE   /* One character delimiter */
     2947    11200    3           DO;

     2948    11201    3               COMMENT_R.L# = 1;

  11201  2 000124   001000 236003                    LDQ     512,DU
         2 000125   200205 552140                    STBQ    COMMENT_R,'40'O,AUTO

     2949    11202    3               COMMENT_R.NAME# = SUBSTR(XUE_PPCB.ECB.TRAIL#,1,1);

  11202  2 000126   000027 236100                    LDQ     23,,PR0
         2 000127   000033 736000                    QLS     27
         2 000130   000002 276000 3                  ORQ     2
         2 000131   000011 772000                    QRL     9
         2 000132   200205 552130                    STBQ    COMMENT_R,'30'O,AUTO

     2950    11203    3           END;

     2951    11204    2       END;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:471  

  11204  2 000133   000141 710000 2                  TRA     MAIN_LOOP

     2952    11205    1       ELSE /* Two character delimiter */
     2953    11206    2       DO;

     2954    11207    2           COMMENT_R.L# = 2;

  11207  2 000134   002000 236003                    LDQ     1024,DU
         2 000135   200205 552140                    STBQ    COMMENT_R,'40'O,AUTO

     2955    11208    2           COMMENT_R.NAME# = XUE_PPCB.ECB.TRAIL#;

  11208  2 000136   000027 236100                    LDQ     23,,PR0
         2 000137   000011 736000                    QLS     9
         2 000140   200205 552130                    STBQ    COMMENT_R,'30'O,AUTO

     2956    11209    2       END;

     2957    11210        /*
     2958    11211             ***** Loop until no more PREPROCESSOR expressions found ...
     2959    11212        */
     2960    11213    2   MAIN_LOOP: DO WHILE (%YES#);

  11213  2 000141                       MAIN_LOOP    null
     2961    11214        /*
     2962    11215             ***** If the character following the % is not legal
     2963    11216                   in a %EXPRESSION then ignore it ...
     2964    11217        */
     2965    11218    2           CALL SEARCH (WHERE,RESULTS,VERIFY_CHARS,

  11218  2 000141   200003 470500                    LDP0    @XUE_PPCB,,AUTO
         2 000142   000002 471500                    LDP1    2,,PR0
         2 000143   000003 720100                    LXL0    3,,PR0
         2 000144   200213 235100                    LDA     STR_INDX,,AUTO
         2 000145   000000 164505                    TCT
         2 000146   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:472  
         2 000147   000000 000000 1                  ARG     VERIFY_CHARS
         2 000150   200210 000100                    ARG     WHERE,,AUTO
         2 000151   200210 236100                    LDQ     WHERE,,AUTO
         2 000152   000044 737000                    LLS     36
         2 000153   000033 771000                    ARL     27
         2 000154   200211 755100                    STA     RESULTS,,AUTO
         2 000155   200210 551140                    STBA    WHERE,'40'O,AUTO

     2966    11219    2             SUBSTR(OUT$BUF,STR_INDX+1,1));
     2967    11220    2           IF RESULTS ~= 0

  11220  2 000156   000163 600000 2                  TZE     s:11234

     2968    11221    2           THEN   /* The character is illegal */
     2969    11222    3           DO;

     2970    11223    3               START_INDX = STR_INDX + 1;

  11223  2 000157   200213 236100                    LDQ     STR_INDX,,AUTO
         2 000160   000001 036007                    ADLQ    1,DL
         2 000161   200212 756100                    STQ     START_INDX,,AUTO

     2971    11224    3               GOTO END_LOOP;

  11224  2 000162   000572 710000 2                  TRA     END_LOOP

     2972    11225    3           END;
     2973    11226        /*
     2974    11227             ***** May be inside a comment
     2975    11228                   If so, then dont process ...
     2976    11229        */
     2977    11230        /*
     2978    11231             ***** If no leading comment delimiter is defined,
     2979    11232                   then no comments are allowed ...
     2980    11233        */
     2981    11234    2           IF COMMENT_L.L# = 0

PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:473  
  11234  2 000163   200204 236100                    LDQ     COMMENT_L,,AUTO
         2 000164   777000 316003                    CANQ    -512,DU
         2 000165   000261 600000 2                  TZE     END_COMMENT

     2982    11235    2           THEN
     2983    11236    2               GOTO END_COMMENT;
     2984    11237        /*
     2985    11238             ***** Look for matched comment pairs between last
     2986    11239                   preprocessor expression, or beginning of record, and
     2987    11240                   the beginning of this preprocessor expression.
     2988    11241                   Determine if this expression is within a comment ...
     2989    11242        */
     2990    11243    2           INDX1 = 0;

  11243  2 000166   200206 450100                    STZ     INDX1,,AUTO

     2991    11244    3           DO WHILE (%YES#);

     2992    11245        /*
     2993    11246             ***** Find the left comment delimiter ...
     2994    11247        */
     2995    11248    3               CALL INDEX (INDX2,SUBSTR(COMMENT_L.NAME#,0,COMMENT_L.L#),

  11248  2 000167   200204 236100                    LDQ     COMMENT_L,,AUTO
         2 000170   000033 772000                    QRL     27
         2 000171   200003 470500                    LDP0    @XUE_PPCB,,AUTO
         2 000172   000002 471500                    LDP1    2,,PR0
         2 000173   000003 720100                    LXL0    3,,PR0
         2 000174   200236 451500                    STP1    PCB+15,,AUTO
         2 000175   200207 631500                    EPPR1   INDX2,,AUTO
         2 000176   200204 633500                    EPPR3   COMMENT_L,,AUTO
         2 000177   000001 220003                    LDX0    1,DU
         2 000200   300000 500510                    A9BD    0,X0,PR3
         2 000201   000000 623006                    EAX3    0,QL
         2 000202   200236 470500                    LDP0    PCB+15,,AUTO
         2 000203   200213 720100                    LXL0    STR_INDX,,AUTO
         2 000204   200206 236100                    LDQ     INDX1,,AUTO
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:474  
         2 000205   000000 701000 xent               TSX1    X66_INDEX
         2 000206   000261 710000 2                  TRA     END_COMMENT

     2996    11249    3                 SUBSTR(OUT$BUF,0,STR_INDX),INDX1) ALTRET(END_COMMENT);
     2997    11250    3               INDX1 = INDX2 + 1; /* Where to look for closing delimiter */

  11250  2 000207   200207 235100                    LDA     INDX2,,AUTO
         2 000210   000001 035007                    ADLA    1,DL
         2 000211   200206 755100                    STA     INDX1,,AUTO

     2998    11251        /*
     2999    11252             ***** Now find the right comment delimeter.
     3000    11253                   If none is found, then ignore the rest
     3001    11254                   of the information on the record ...
     3002    11255        */
     3003    11256    3               CALL INDEX (INDX2,SUBSTR(COMMENT_R.NAME#,0,COMMENT_R.L#),

  11256  2 000212   200205 236100                    LDQ     COMMENT_R,,AUTO
         2 000213   000033 772000                    QRL     27
         2 000214   200003 470500                    LDP0    @XUE_PPCB,,AUTO
         2 000215   000002 471500                    LDP1    2,,PR0
         2 000216   000003 721100                    LXL1    3,,PR0
         2 000217   200236 451500                    STP1    PCB+15,,AUTO
         2 000220   200207 631500                    EPPR1   INDX2,,AUTO
         2 000221   200205 633500                    EPPR3   COMMENT_R,,AUTO
         2 000222   000001 221003                    LDX1    1,DU
         2 000223   300000 500511                    A9BD    0,X1,PR3
         2 000224   000000 623006                    EAX3    0,QL
         2 000225   200236 470500                    LDP0    PCB+15,,AUTO
         2 000226   200206 236100                    LDQ     INDX1,,AUTO
         2 000227   000000 701000 xent               TSX1    X66_INDEX
         2 000230   000232 710000 2                  TRA     s:11260
         2 000231   000255 710000 2                  TRA     s:11265

     3004    11257    3                 SUBSTR(OUT$BUF,0,STR_INDX),INDX1)
     3005    11258    3               WHENALTRETURN
     3006    11259    4               DO;   /* Within quotes. Skip over it */
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:475  

     3007    11260    4                   CALL INDEX (INDX2,SUBSTR(COMMENT_R.NAME#,0,COMMENT_R.L#),

  11260  2 000232   200205 236100                    LDQ     COMMENT_R,,AUTO
         2 000233   000033 772000                    QRL     27
         2 000234   200003 470500                    LDP0    @XUE_PPCB,,AUTO
         2 000235   000002 471500                    LDP1    2,,PR0
         2 000236   000003 720100                    LXL0    3,,PR0
         2 000237   200236 451500                    STP1    PCB+15,,AUTO
         2 000240   200207 631500                    EPPR1   INDX2,,AUTO
         2 000241   200205 633500                    EPPR3   COMMENT_R,,AUTO
         2 000242   000001 221003                    LDX1    1,DU
         2 000243   300000 500511                    A9BD    0,X1,PR3
         2 000244   000000 623006                    EAX3    0,QL
         2 000245   200236 470500                    LDP0    PCB+15,,AUTO
         2 000246   200207 236100                    LDQ     INDX2,,AUTO
         2 000247   000000 701000 xent               TSX1    X66_INDEX
         2 000250   000623 710000 2                  TRA     RETURN_TO_USER

     3008    11261    4                     OUT$BUF,INDX2) ALTRET(RETURN_TO_USER);
     3009    11262    4                   START_INDX = INDX2 + 1;

  11262  2 000251   200207 235100                    LDA     INDX2,,AUTO
         2 000252   000001 035007                    ADLA    1,DL
         2 000253   200212 755100                    STA     START_INDX,,AUTO

     3010    11263    4                   GOTO END_LOOP;

  11263  2 000254   000572 710000 2                  TRA     END_LOOP

     3011    11264    4               END;
     3012    11265    3               INDX1 = INDX2 + 1; /* Where to look for new left delimiter */

  11265  2 000255   200207 235100                    LDA     INDX2,,AUTO
         2 000256   000001 035007                    ADLA    1,DL
         2 000257   200206 755100                    STA     INDX1,,AUTO

PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:476  
     3013    11266    3           END; /* Do while ... end */

  11266  2 000260   000167 710000 2                  TRA     s:11248

  11262  2 000261                       END_COMMENT  null
     3014    11267    2   END_COMMENT: ;   /* No left comment delimeter. No comment */
     3015    11268        /*
     3016    11269             ***** If this is two percents side by side then
     3017    11270                   pretend that it is one and start again ...
     3018    11271        */
     3019    11272    2           IF SUBSTR(OUT$BUF,STR_INDX+1,1) = '%'

  11272  2 000261   200003 470500                    LDP0    @XUE_PPCB,,AUTO
         2 000262   000002 471500                    LDP1    2,,PR0
         2 000263   000003 720100                    LXL0    3,,PR0
         2 000264   200213 235100                    LDA     STR_INDX,,AUTO
         2 000265   040000 106505                    CMPC    fill='040'O
         2 000266   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1
         2 000267   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000270   000327 601000 2                  TNZ     s:11286

     3020    11273    2           THEN /* Two percent signs */
     3021    11274    3           DO;

     3022    11275    3               CALL CONCAT(TEMPBUF,SUBSTR(OUT$BUF,0,STR_INDX),

  11275  2 000271   000000 636010                    EAQ     0,X0
         2 000272   000022 772000                    QRL     18
         2 000273   200213 136100                    SBLQ    STR_INDX,,AUTO
         2 000274   000000 621005                    EAX1    0,AL
         2 000275   040100 100540                    MLR     fill='040'O
         2 000276   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         2 000277   200004 000777                    ADSC9   TEMPBUF,,AUTO            cn=0,n=511
         2 000300   200236 756100                    STQ     PCB+15,,AUTO
         2 000301   200213 236100                    LDQ     STR_INDX,,AUTO
         2 000302   000777 116007                    CMPQ    511,DL
         2 000303   000313 605000 2                  TPL     s:11277
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:477  
         2 000304   200236 720100                    LXL0    PCB+15,,AUTO
         2 000305   777777 621010                    EAX1    -1,X0
         2 000306   777000 622006                    EAX2    -512,QL
         2 000307   777777 662003                    ERX2    -1,DU
         2 000310   040146 100546                    MLR     fill='040'O
         2 000311   100000 200011                    ADSC9   0,Q,PR1                  cn=1,n=*X1
         2 000312   200004 000012                    ADSC9   TEMPBUF,Q,AUTO           cn=0,n=*X2

     3023    11276    3                 SUBSTR(OUT$BUF,STR_INDX+1));
     3024    11277    3               XUE_PPCB.RCHARS# = XUE_PPCB.RCHARS# - 1;

  11277  2 000313   000004 235100                    LDA     4,,PR0
         2 000314   000001 135007                    SBLA    1,DL
         2 000315   000004 755100                    STA     4,,PR0

     3025    11278    3               OUT$BUF = TEMPBUF;

  11278  2 000316   000002 471500                    LDP1    2,,PR0
         2 000317   000003 720100                    LXL0    3,,PR0
         2 000320   040140 100500                    MLR     fill='040'O
         2 000321   200004 000777                    ADSC9   TEMPBUF,,AUTO            cn=0,n=511
         2 000322   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     3026    11279    3               START_INDX = STR_INDX + 1;  /* Skip over % */

  11279  2 000323   000001 036007                    ADLQ    1,DL
         2 000324   200212 756100                    STQ     START_INDX,,AUTO

     3027    11280    3               ERR_INDX = ERR_INDX + 1;

  11280  2 000325   200214 054100                    AOS     ERR_INDX,,AUTO

     3028    11281    3               GOTO END_LOOP;

  11281  2 000326   000572 710000 2                  TRA     END_LOOP

     3029    11282    3           END;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:478  
     3030    11283        /*
     3031    11284             ***** Evaluate the expression ...
     3032    11285        */
     3033    11286    2           PCB.TEXT$ = PINCRC(XUE_PPCB.OUTBUF$,STR_INDX);

  11286  2 000327   200213 236100                    LDQ     STR_INDX,,AUTO
         2 000330   000011 402007                    MPY     9,DL
         2 000331   000000 116003                    CMPQ    0,DU
         2 000332   000334 605000 2                  TPL     s:11286+5
         2 000333   000044 036003                    ADLQ    36,DU
         2 000334   100000 503506                    ABD     0,QL,PR1
         2 000335   200217 451500                    STP1    PCB,,AUTO

     3034    11287    2           PCB.NCHARS = XUE_PPCB.RCHARS# - STR_INDX;

  11287  2 000336   000004 236100                    LDQ     4,,PR0
         2 000337   200213 136100                    SBLQ    STR_INDX,,AUTO
         2 000340   200230 756100                    STQ     PCB+9,,AUTO

     3035    11288    2           CALL X$PARSE (PCB) ALTRET(E_PARSE);

  11288  2 000341   200217 633500                    EPPR3   PCB,,AUTO
         2 000342   200236 453500                    STP3    PCB+15,,AUTO
         2 000343   200236 630500                    EPPR0   PCB+15,,AUTO
         2 000344   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000345   000000 701000 xent               TSX1    X$PARSE
         2 000346   000640 702000 2                  TSX2    E_PARSE

     3036    11289        /*
     3037    11290             ***** Setup workarea for X$EVAL ...
     3038    11291        */
     3039    11292    2           XUE_PPCB.ECB.WORK$ = PINCRW(SAVE_WORK$,PCB.WK_USED+1);

  11292  2 000347   200227 236100                    LDQ     PCB+8,,AUTO
         2 000350   777777 376003                    ANQ     -1,DU
         2 000351   000001 036003                    ADLQ    1,DU
         2 000352   200216 036100                    ADLQ    SAVE_WORK$,,AUTO
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:479  
         2 000353   200003 470500                    LDP0    @XUE_PPCB,,AUTO
         2 000354   000007 756100                    STQ     7,,PR0

     3040    11293    2           XUE_PPCB.ECB.WKSZ# = SAVE_WKSZ# - (PCB.WK_USED+1);

  11293  2 000355   200227 235100                    LDA     PCB+8,,AUTO
         2 000356   000022 771000                    ARL     18
         2 000357   200236 755100                    STA     PCB+15,,AUTO
         2 000360   200215 236100                    LDQ     SAVE_WKSZ#,,AUTO
         2 000361   200236 136100                    SBLQ    PCB+15,,AUTO
         2 000362   000001 136007                    SBLQ    1,DL
         2 000363   000010 756100                    STQ     8,,PR0

     3041    11294    2           XUE_PPCB.ECB.TREE$ = PCB.OUT$;

  11294  2 000364   200222 236100                    LDQ     PCB+3,,AUTO
         2 000365   000006 756100                    STQ     6,,PR0

     3042    11295    2           CALL X$EVAL (XUE_PPCB.ECB.TREE$) ALTRET(E_PREPARSE);

  11295  2 000366   200003 236100                    LDQ     @XUE_PPCB,,AUTO
         2 000367   000006 036003                    ADLQ    6,DU
         2 000370   200236 756100                    STQ     PCB+15,,AUTO
         2 000371   200236 630500                    EPPR0   PCB+15,,AUTO
         2 000372   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000373   000000 701000 xent               TSX1    X$EVAL
         2 000374   000624 702000 2                  TSX2    E_PREPARSE

     3043    11296        /*
     3044    11297             ***** Insert the resultant string into OUT$BUF ...
     3045    11298        */
     3046    11299    2           INDX1 = PCB.OUT$ -> P$B.SUBLK$(PCB.OUT$ -> P$B.NSUBLKS -1) ->

  11299  2 000375   200222 470500                    LDP0    PCB+3,,AUTO
         2 000376   000001 220100                    LDX0    1,,PR0
         2 000377   000002 471510                    LDP1    2,X0,PR0
         2 000400   100002 236100                    LDQ     2,,PR1
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:480  
         2 000401   200213 036100                    ADLQ    STR_INDX,,AUTO
         2 000402   200206 756100                    STQ     INDX1,,AUTO

     3047    11300    2             P$B.CPOS + STR_INDX;
     3048    11301    2           IF STR_INDX = 0

  11301  2 000403   200213 235100                    LDA     STR_INDX,,AUTO
         2 000404   000443 601000 2                  TNZ     s:11306

     3049    11302    2           THEN   /* %exp at front of buffer */
     3050    11303    2               CALL CONCAT(TEMPBUF,XUE_PPCB.ECB.OUT$ -> X$STRING.TEXT,

  11303  2 000405   200003 473500                    LDP3    @XUE_PPCB,,AUTO
         2 000406   300012 474500                    LDP4    10,,PR3
         2 000407   000100 101500                    MRL     fill='000'O
         2 000410   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000411   200236 000002                    ADSC9   PCB+15,,AUTO             cn=0,n=2
         2 000412   200236 220100                    LDX0    PCB+15,,AUTO
         2 000413   300002 471500                    LDP1    2,,PR3
         2 000414   300003 721100                    LXL1    3,,PR3
         2 000415   000000 636011                    EAQ     0,X1
         2 000416   000022 772000                    QRL     18
         2 000417   200206 136100                    SBLQ    INDX1,,AUTO
         2 000420   040100 100540                    MLR     fill='040'O
         2 000421   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0
         2 000422   200004 000777                    ADSC9   TEMPBUF,,AUTO            cn=0,n=511
         2 000423   200237 756100                    STQ     PCB+16,,AUTO
         2 000424   000000 636010                    EAQ     0,X0
         2 000425   000022 772000                    QRL     18
         2 000426   000777 116007                    CMPQ    511,DL
         2 000427   000442 603000 2                  TRC     s:11303+29
         2 000430   200240 740100                    STX0    PCB+17,,AUTO
         2 000431   777000 620010                    EAX0    -512,X0
         2 000432   777777 660003                    ERX0    -1,DU
         2 000433   200237 721100                    LXL1    PCB+16,,AUTO
         2 000434   200206 236100                    LDQ     INDX1,,AUTO
         2 000435   200240 235100                    LDA     PCB+17,,AUTO
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:481  
         2 000436   000022 771000                    ARL     18
         2 000437   040145 100546                    MLR     fill='040'O
         2 000440   100000 000011                    ADSC9   0,Q,PR1                  cn=0,n=*X1
         2 000441   200004 000010                    ADSC9   TEMPBUF,A,AUTO           cn=0,n=*X0
         2 000442   000516 710000 2                  TRA     s:11309

     3051    11304    2                 SUBSTR(OUT$BUF,INDX1));
     3052    11305    2           ELSE
     3053    11306    2               CALL CONCAT(TEMPBUF,SUBSTR(OUT$BUF,0,STR_INDX),

  11306  2 000443   200003 473500                    LDP3    @XUE_PPCB,,AUTO
         2 000444   300002 474500                    LDP4    2,,PR3
         2 000445   300003 721100                    LXL1    3,,PR3
         2 000446   300012 475500                    LDP5    10,,PR3
         2 000447   000100 101500                    MRL     fill='000'O
         2 000450   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         2 000451   200236 000002                    ADSC9   PCB+15,,AUTO             cn=0,n=2
         2 000452   200236 220100                    LDX0    PCB+15,,AUTO
         2 000453   300002 471500                    LDP1    2,,PR3
         2 000454   300003 721100                    LXL1    3,,PR3
         2 000455   000000 636011                    EAQ     0,X1
         2 000456   000022 772000                    QRL     18
         2 000457   200206 136100                    SBLQ    INDX1,,AUTO
         2 000460   000000 622005                    EAX2    0,AL
         2 000461   040100 100540                    MLR     fill='040'O
         2 000462   400000 000012                    ADSC9   0,,PR4                   cn=0,n=*X2
         2 000463   200004 000777                    ADSC9   TEMPBUF,,AUTO            cn=0,n=511
         2 000464   200237 756100                    STQ     PCB+16,,AUTO
         2 000465   200213 236100                    LDQ     STR_INDX,,AUTO
         2 000466   000777 116007                    CMPQ    511,DL
         2 000467   000516 605000 2                  TPL     s:11309
         2 000470   777000 621006                    EAX1    -512,QL
         2 000471   777777 661003                    ERX1    -1,DU
         2 000472   040146 100540                    MLR     fill='040'O
         2 000473   500000 200010                    ADSC9   0,,PR5                   cn=1,n=*X0
         2 000474   200004 000011                    ADSC9   TEMPBUF,Q,AUTO           cn=0,n=*X1
         2 000475   000000 636010                    EAQ     0,X0
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:482  
         2 000476   000022 772000                    QRL     18
         2 000477   200213 036100                    ADLQ    STR_INDX,,AUTO
         2 000500   000777 116007                    CMPQ    511,DL
         2 000501   000516 605000 2                  TPL     s:11309
         2 000502   200240 756100                    STQ     PCB+17,,AUTO
         2 000503   000000 636010                    EAQ     0,X0
         2 000504   000022 772000                    QRL     18
         2 000505   200213 036100                    ADLQ    STR_INDX,,AUTO
         2 000506   200240 722100                    LXL2    PCB+17,,AUTO
         2 000507   777000 622012                    EAX2    -512,X2
         2 000510   777777 662003                    ERX2    -1,DU
         2 000511   200237 723100                    LXL3    PCB+16,,AUTO
         2 000512   200206 235100                    LDA     INDX1,,AUTO
         2 000513   040146 100545                    MLR     fill='040'O
         2 000514   100000 000013                    ADSC9   0,A,PR1                  cn=0,n=*X3
         2 000515   200004 000012                    ADSC9   TEMPBUF,Q,AUTO           cn=0,n=*X2

     3054    11307    2                 XUE_PPCB.ECB.OUT$->X$STRING.TEXT,
     3055    11308    2                 SUBSTR(OUT$BUF,INDX1));
     3056    11309    2           OUT$BUF = TEMPBUF;

  11309  2 000516   300002 471500                    LDP1    2,,PR3
         2 000517   300003 720100                    LXL0    3,,PR3
         2 000520   040140 100500                    MLR     fill='040'O
         2 000521   200004 000777                    ADSC9   TEMPBUF,,AUTO            cn=0,n=511
         2 000522   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     3057    11310    2           XUE_PPCB.RCHARS# = XUE_PPCB.RCHARS# +

  11310  2 000523   300012 470500                    LDP0    10,,PR3
         2 000524   200206 236100                    LDQ     INDX1,,AUTO
         2 000525   200213 136100                    SBLQ    STR_INDX,,AUTO
         2 000526   200236 756100                    STQ     PCB+15,,AUTO
         2 000527   000100 101500                    MRL     fill='000'O
         2 000530   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000531   200237 000004                    ADSC9   PCB+16,,AUTO             cn=0,n=4
         2 000532   200237 236100                    LDQ     PCB+16,,AUTO
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:483  
         2 000533   200236 136100                    SBLQ    PCB+15,,AUTO
         2 000534   300004 036100                    ADLQ    4,,PR3
         2 000535   300004 756100                    STQ     4,,PR3

     3058    11311    2             (XUE_PPCB.ECB.OUT$ -> X$STRING.SIZ - (INDX1 - STR_INDX));
     3059    11312    2           ERR_INDX = ERR_INDX -

  11312  2 000536   300012 470500                    LDP0    10,,PR3
         2 000537   200206 236100                    LDQ     INDX1,,AUTO
         2 000540   200213 136100                    SBLQ    STR_INDX,,AUTO
         2 000541   200236 756100                    STQ     PCB+15,,AUTO
         2 000542   000100 101500                    MRL     fill='000'O
         2 000543   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000544   200237 000004                    ADSC9   PCB+16,,AUTO             cn=0,n=4
         2 000545   200237 236100                    LDQ     PCB+16,,AUTO
         2 000546   200236 136100                    SBLQ    PCB+15,,AUTO
         2 000547   200240 756100                    STQ     PCB+17,,AUTO
         2 000550   200214 236100                    LDQ     ERR_INDX,,AUTO
         2 000551   200240 136100                    SBLQ    PCB+17,,AUTO
         2 000552   200214 756100                    STQ     ERR_INDX,,AUTO

     3060    11313    2             (XUE_PPCB.ECB.OUT$ -> X$STRING.SIZ - (INDX1 - STR_INDX));
     3061    11314    2           IF XUE_PPCB.RCHARS# > XUE_PPCB.OCHARS#

  11314  2 000553   300003 236100                    LDQ     3,,PR3
         2 000554   300004 116100                    CMPQ    4,,PR3
         2 000555   000563 603000 2                  TRC     s:11326

     3062    11315    2           THEN   /* Truncated */
     3063    11316    3           DO;

     3064    11317                      /*   Show them the error of their ways!!! */
     3065    11318    3               XUE_PPCB.ECB.ERR = E_TRUNCATE;

  11318  2 000556   000216 236000 1                  LDQ     E_TRUNCATE
         2 000557   300017 756100                    STQ     15,,PR3

PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:484  
     3066    11319    3               XUE_PPCB.RCHARS# = XUE_PPCB.OCHARS#;

  11319  2 000560   300003 235100                    LDA     3,,PR3
         2 000561   300004 755100                    STA     4,,PR3

     3067    11320    3               GOTO E_PREPARSE;

  11320  2 000562   000624 710000 2                  TRA     E_PREPARSE

     3068    11321    3           END;
     3069    11322        /*
     3070    11323             ***** Move START_INDX past end of %exp ...
     3071    11324                   That is, do not rescan from front of command.
     3072    11325        */
     3073    11326    2           START_INDX = STR_INDX + XUE_PPCB.ECB.OUT$ -> X$STRING.SIZ;

  11326  2 000563   300012 470500                    LDP0    10,,PR3
         2 000564   000100 101500                    MRL     fill='000'O
         2 000565   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000566   200236 000004                    ADSC9   PCB+15,,AUTO             cn=0,n=4
         2 000567   200236 236100                    LDQ     PCB+15,,AUTO
         2 000570   200213 036100                    ADLQ    STR_INDX,,AUTO
         2 000571   200212 756100                    STQ     START_INDX,,AUTO

     3074    11327    2   END_LOOP:
     3075    11328        /*
     3076    11329             ***** Reset WORK$ and WKSZ# ...
     3077    11330        */
     3078    11331    2           XUE_PPCB.ECB.WORK$ = SAVE_WORK$;

  11331  2 000572   200216 236100       END_LOOP     LDQ     SAVE_WORK$,,AUTO
         2 000573   200003 470500                    LDP0    @XUE_PPCB,,AUTO
         2 000574   000007 756100                    STQ     7,,PR0

     3079    11332    2           XUE_PPCB.ECB.WKSZ# = SAVE_WKSZ#;

  11332  2 000575   200215 235100                    LDA     SAVE_WKSZ#,,AUTO
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:485  
         2 000576   000010 755100                    STA     8,,PR0

     3080    11333        /*
     3081    11334             ***** See if there are any more %expressions ...
     3082    11335        */
     3083    11336    2           IF START_INDX >= XUE_PPCB.RCHARS#

  11336  2 000577   200212 236100                    LDQ     START_INDX,,AUTO
         2 000600   000603 604000 2                  TMI     s:11339
         2 000601   000004 116100                    CMPQ    4,,PR0
         2 000602   000623 603000 2                  TRC     RETURN_TO_USER

     3084    11337    2           THEN   /* No more chars to look at */
     3085    11338    2               GOTO RETURN_TO_USER;
     3086    11339    2           CALL INDEX (STR_INDX,'%',OUT$BUF,START_INDX) ALTRET(RETURN_TO_USER);

  11339  2 000603   000002 471500                    LDP1    2,,PR0
         2 000604   000003 720100                    LXL0    3,,PR0
         2 000605   000000 636010                    EAQ     0,X0
         2 000606   000022 772000                    QRL     18
         2 000607   200212 136100                    SBLQ    START_INDX,,AUTO
         2 000610   200236 756100                    STQ     PCB+15,,AUTO
         2 000611   200212 236100                    LDQ     START_INDX,,AUTO
         2 000612   200236 720100                    LXL0    PCB+15,,AUTO
         2 000613   200212 235100                    LDA     START_INDX,,AUTO
         2 000614   000000 124545                    SCM     mask='000'O
         2 000615   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         2 000616   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000617   200213 000100                    ARG     STR_INDX,,AUTO
         2 000620   200213 056100                    ASQ     STR_INDX,,AUTO
         2 000621   000623 606400 2                  TTN     RETURN_TO_USER

     3087    11340    2       END MAIN_LOOP; /* Do while ... end */

  11340  2 000622   000141 710000 2                  TRA     MAIN_LOOP

     3088    11341    1   RETURN_TO_USER:   /* Finished pre-parse processing */
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:486  
     3089    11342    1       RETURN;

  11342  2 000623   000000 702200 xent  RETURN_TO_U* TSX2  ! X66_ARET

     3090    11343        %EJECT;
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:487  
     3091    11344    2       DO WHILE (%NO#);

     3092    11345    2   E_PREPARSE:
     3093    11346    2           XUE_PPCB.ECB.ERR_POS# = XUE_PPCB.ECB.ERR_POS# + STR_INDX + ERR_INDX;

  11346  2 000624   200003 470500       E_PREPARSE   LDP0    @XUE_PPCB,,AUTO
         2 000625   000016 236100                    LDQ     14,,PR0
         2 000626   000022 772000                    QRL     18
         2 000627   200213 036100                    ADLQ    STR_INDX,,AUTO
         2 000630   200214 036100                    ADLQ    ERR_INDX,,AUTO
         2 000631   000000 620006                    EAX0    0,QL
         2 000632   000016 740100                    STX0    14,,PR0

     3094    11347        /*
     3095    11348             ***** Reset WORK$ and WKSZ# ...
     3096    11349        */
     3097    11350    2           XUE_PPCB.ECB.WORK$ = SAVE_WORK$;

  11350  2 000633   200216 236100                    LDQ     SAVE_WORK$,,AUTO
         2 000634   000007 756100                    STQ     7,,PR0

     3098    11351    2           XUE_PPCB.ECB.WKSZ# = SAVE_WKSZ#;

  11351  2 000635   200215 235100                    LDA     SAVE_WKSZ#,,AUTO
         2 000636   000010 755100                    STA     8,,PR0

     3099    11352    2       END;

     3100    11353    2       DO WHILE (%NO#);

  11353  2 000637   000650 710000 2                  TRA     s:11361

     3101    11354    2   E_PARSE:
     3102    11355    2           XUE_PPCB.ECB.ERR = PCB.ERROR;

  11355  2 000640   200225 236100       E_PARSE      LDQ     PCB+6,,AUTO
         2 000641   200003 470500                    LDP0    @XUE_PPCB,,AUTO
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:488  
         2 000642   000017 756100                    STQ     15,,PR0

     3103    11356    2           XUE_PPCB.ECB.ERR_POS# = PCB.HI_CHAR + STR_INDX + ERR_INDX;

  11356  2 000643   200231 236100                    LDQ     PCB+10,,AUTO
         2 000644   200213 036100                    ADLQ    STR_INDX,,AUTO
         2 000645   200214 036100                    ADLQ    ERR_INDX,,AUTO
         2 000646   000000 620006                    EAX0    0,QL
         2 000647   000016 740100                    STX0    14,,PR0

     3104    11357    2       END;

     3105    11358        /*
     3106    11359             ***** Restore WORK$ and WKSZ# ...
     3107    11360        */
     3108    11361    1       ALTRETURN;

  11361  2 000650   000000 702200 xent               TSX2  ! X66_AALT
     3109    11362    1   END X$PRE_PROCESS;
     3110    11363        %EOD;

PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:489  
--  Include file information  --

   XUE_MACRO_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure X$PRE_PROCESS.
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:490  

 **** Variables and constants ****

  ****  Section 001 RoData X$PRE_PROCESS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   216-0-0/w STRC        r     1 E_TRUNCATE               200-0-0/w STRC(504)   r     1 I_PCB
     0-0-0/b UBIN(9)     r     1 VERIFY_CHARS(0:511)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @XUE_PPCB                204-0-0/c STRC(27)    r     1 COMMENT_L
   205-0-0/c STRC(27)    r     1 COMMENT_R                214-0-0/w SBIN        r     1 ERR_INDX
   206-0-0/w SBIN        r     1 INDX1                    207-0-0/w SBIN        r     1 INDX2
   217-0-0/w STRC(504)   r     1 PCB                      211-0-0/w SBIN        r     1 RESULTS
   215-0-0/w UBIN        r     1 SAVE_WKSZ#               216-0-0/w PTR         r     1 SAVE_WORK$
   212-0-0/w SBIN        r     1 START_INDX               213-0-0/w SBIN        r     1 STR_INDX
     4-0-0/c CHAR(511)   r     1 TEMPBUF                  210-0-0/w SBIN        r     1 WHERE
    *0-0-0/d STRC(1224)  r     1 XUE_PPCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 IN$BUF                     0-0-0/c ACHR        r     1 OUT$BUF
     0-0-0/w STRC(144)   r     1 P$B                        0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure X$PRE_PROCESS requires 425 words for executable code.
   Procedure X$PRE_PROCESS requires 162 words of local(AUTO) storage.
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:491  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:492  
          MINI XREF LISTING

COMMENT_L.L#
     10590**DCL     11178<<ASSIGN  11182<<ASSIGN  11188<<ASSIGN  11234>>IF      11248>>CALLBLT
COMMENT_L.NAME#
     10590**DCL     11183<<ASSIGN  11189<<ASSIGN  11248>>CALLBLT
COMMENT_R.L#
     10617**DCL     11197<<ASSIGN  11201<<ASSIGN  11207<<ASSIGN  11256>>CALLBLT 11260>>CALLBLT
COMMENT_R.NAME#
     10617**DCL     11202<<ASSIGN  11208<<ASSIGN  11256>>CALLBLT 11260>>CALLBLT
END_COMMENT
     11262**LABEL   11236--GOTO    11248--CALLALT
END_LOOP
     11331**LABEL   11224--GOTO    11263--GOTO    11281--GOTO
ERR_INDX
     10626**DCL     11149<<ASSIGN  11280<<ASSIGN  11280>>ASSIGN  11312<<ASSIGN  11312>>ASSIGN  11346>>ASSIGN
     11356>>ASSIGN
E_PARSE
     11355**LABEL   11288--CALLALT
E_PREPARSE
     11346**LABEL   11295--CALLALT 11320--GOTO
E_TRUNCATE
     11103**DCL     11318>>ASSIGN
IN$BUF
     10636**DCL     11146>>ASSIGN
INDX1
     10620**DCL     11243<<ASSIGN  11248>>CALLBLT 11250<<ASSIGN  11256>>CALLBLT 11265<<ASSIGN  11299<<ASSIGN
     11303>>CALLBLT 11306>>CALLBLT 11310>>ASSIGN  11312>>ASSIGN
INDX2
     10621**DCL     11248<<CALLBLT 11250>>ASSIGN  11256<<CALLBLT 11260<<CALLBLT 11260>>CALLBLT 11262>>ASSIGN
     11265>>ASSIGN
I_PCB
     10908**DCL     11162>>ASSIGN
OUT$BUF
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:493  
     10637**DCL     11146<<ASSIGN  11158>>CALLBLT 11218>>CALLBLT 11248>>CALLBLT 11256>>CALLBLT 11260>>CALLBLT
     11272>>IF      11275>>CALLBLT 11275>>CALLBLT 11278<<ASSIGN  11303>>CALLBLT 11306>>CALLBLT 11306>>CALLBLT
     11309<<ASSIGN  11339>>CALLBLT
P$B.CPOS
     10670**DCL     11299>>ASSIGN
P$B.NSUBLKS
     10656**DCL     11299>>ASSIGN
P$B.SUBLK$
     10677**DCL     11299>>ASSIGN
PCB
     10703**DCL     11162<<ASSIGN  11288<>CALL
PCB.COMMENT.LEAD
     10821**DCL     11167<<ASSIGN
PCB.COMMENT.TRAIL
     10829**DCL     11168<<ASSIGN
PCB.CONTINUE
     10744**DCL     11165<<ASSIGN
PCB.ERROR
     10807**DCL     11355>>ASSIGN
PCB.HI_CHAR
     10854**DCL     11356>>ASSIGN
PCB.NCHARS
     10850**DCL     11287<<ASSIGN
PCB.OUT$
     10716**DCL     11294>>ASSIGN  11299>>ASSIGN  11299>>ASSIGN
PCB.ROOT$
     10708**DCL     11166<<ASSIGN
PCB.TEXT$
     10704**DCL     11286<<ASSIGN
PCB.WKSZ
     10733**DCL     11163<<ASSIGN
PCB.WK_USED
     10836**DCL     11292>>ASSIGN  11293>>ASSIGN
PCB.WORK$
     10712**DCL     11164<<ASSIGN
RESULTS
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:494  
     10623**DCL     11218<<CALLBLT 11220>>IF
RETURN_TO_USER
     11342**LABEL   11158--CALLALT 11260--CALLALT 11338--GOTO    11339--CALLALT
SAVE_WKSZ#
     10627**DCL     11154<<ASSIGN  11293>>ASSIGN  11332>>ASSIGN  11351>>ASSIGN
SAVE_WORK$
     10629**DCL     11153<<ASSIGN  11292>>ASSIGN  11331>>ASSIGN  11350>>ASSIGN
START_INDX
     10624**DCL     11148<<ASSIGN  11158>>CALLBLT 11223<<ASSIGN  11262<<ASSIGN  11279<<ASSIGN  11326<<ASSIGN
     11336>>IF      11339>>CALLBLT
STR_INDX
     10625**DCL     11158<<CALLBLT 11218>>CALLBLT 11223>>ASSIGN  11248>>CALLBLT 11256>>CALLBLT 11272>>IF
     11275>>CALLBLT 11275>>CALLBLT 11279>>ASSIGN  11286>>ASSIGN  11287>>ASSIGN  11299>>ASSIGN  11301>>IF
     11306>>CALLBLT 11310>>ASSIGN  11312>>ASSIGN  11326>>ASSIGN  11339<<CALLBLT 11346>>ASSIGN  11356>>ASSIGN
TEMPBUF
     10564**DCL     11275<<CALLBLT 11278>>ASSIGN  11303<<CALLBLT 11306<<CALLBLT 11309>>ASSIGN
VERIFY_CHARS
     10885**DCL     11218>>CALLBLT
WHERE
     10622**DCL     11218<<CALLBLT
X$EVAL
     10272**DCL-ENT 11295--CALL
X$PARSE
     10294**DCL-ENT 11288--CALL
X$STRING.SIZ
     10633**DCL     10634--IMP-SIZ 11303>>CALLBLT 11306>>CALLBLT 11310>>ASSIGN  11312>>ASSIGN  11326>>ASSIGN
X$STRING.TEXT
     10634**DCL     11303>>CALLBLT 11306>>CALLBLT
XUE$PP_SUCCESS
     10291**DCL-ENT 10926--DCLINIT
XUE_PPCB
     10311**DCL         7--PROC
XUE_PPCB.ECB.ERR
     10458**DCL     11318<<ASSIGN  11355<<ASSIGN
XUE_PPCB.ECB.ERR_POS#
     10441**DCL     11346<<ASSIGN  11346>>ASSIGN  11356<<ASSIGN
PL6.E3A0      #006=X$PRE_PROCESS File=XUE$EVAL.:E05TSI                           WED 07/30/97 09:16 Page:495  
XUE_PPCB.ECB.LEAD#
     10536**DCL     11167>>ASSIGN  11172>>IF      11175>>IF      11183>>ASSIGN  11189>>ASSIGN
XUE_PPCB.ECB.OUT$
     10406**DCL     11303>>CALLBLT 11303>>CALLBLT 11306>>CALLBLT 11306>>CALLBLT 11310>>ASSIGN  11312>>ASSIGN
     11326>>ASSIGN
XUE_PPCB.ECB.TRAIL#
     10545**DCL     11168>>ASSIGN  11191>>IF      11194>>IF      11202>>ASSIGN  11208>>ASSIGN
XUE_PPCB.ECB.TREE$
     10378**DCL     11294<<ASSIGN  11295<>CALL
XUE_PPCB.ECB.WKSZ#
     10389**DCL     11154>>ASSIGN  11163>>ASSIGN  11293<<ASSIGN  11332<<ASSIGN  11351<<ASSIGN
XUE_PPCB.ECB.WORK$
     10384**DCL     11153>>ASSIGN  11164>>ASSIGN  11292<<ASSIGN  11331<<ASSIGN  11350<<ASSIGN
XUE_PPCB.ICHARS#
     10320**DCL     10636--IMP-SIZ 11146>>ASSIGN  11147>>ASSIGN
XUE_PPCB.INBUF$
     10315**DCL     10636--IMP-PTR 11146>>ASSIGN
XUE_PPCB.OCHARS#
     10334**DCL     10637--IMP-SIZ 11146>>ASSIGN  11158>>CALLBLT 11218>>CALLBLT 11248>>CALLBLT 11256>>CALLBLT
     11260>>CALLBLT 11272>>IF      11275>>CALLBLT 11275>>CALLBLT 11278>>ASSIGN  11303>>CALLBLT 11306>>CALLBLT
     11306>>CALLBLT 11309>>ASSIGN  11314>>IF      11319>>ASSIGN  11339>>CALLBLT
XUE_PPCB.OUTBUF$
     10327**DCL     10637--IMP-PTR 11146>>ASSIGN  11158>>CALLBLT 11218>>CALLBLT 11248>>CALLBLT 11256>>CALLBLT
     11260>>CALLBLT 11272>>IF      11275>>CALLBLT 11275>>CALLBLT 11278>>ASSIGN  11286>>ASSIGN  11303>>CALLBLT
     11306>>CALLBLT 11306>>CALLBLT 11309>>ASSIGN  11339>>CALLBLT
XUE_PPCB.RCHARS#
     10341**DCL     11147<<ASSIGN  11277<<ASSIGN  11277>>ASSIGN  11287>>ASSIGN  11310<<ASSIGN  11310>>ASSIGN
     11314>>IF      11319<<ASSIGN  11336>>IF
XUE_PPCB.ROOT$
     10348**DCL     11166>>ASSIGN

PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:496  
     3111        1        /*T***********************************************************/
     3112        2        /*T*                                                         */
     3113        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     3114        4        /*T*                                                         */
     3115        5        /*T***********************************************************/
     3116        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     3117        7        XUE$PP_SUCCESS: PROC(PARSE$PARAM);
     3118        8        /**********************************************************************/
     3119        9        /*F*    NAME:        XUE$PP_SUCCESS
     3120       10                PURPOSE:     To do success processing during parseing of expressiona.
     3121       11                DESCRIPTION: This routine insures that this token is distinct
     3122       12                             from the next one by insuring that there be a
     3123       13                             transition from alphanumeric to non, or vica versa.
     3124       14        */
     3125       15        /**********************************************************************/
     3126       16        /***** INCLUDES *****/
     3127       17          %INCLUDE XU_DATA_R;
     3128       28          %INCLUDE XU_MACRO_C;
     3129     3134          %INCLUDE XU_PERR_C;
     3130     3325        /***** Parameters *****/
     3131     3326        %PARSE$PARAM;
     3132     3407        /***** Based structures *****/
     3133     3408    1   DCL B$TEXT(0:0) CHAR(1) CALIGNED BASED(TEXT$);
     3134     3409          %P_PCB (NAME = P$PCB, STCLASS = BASED);
     3135     3608        /***** Local auto *****/
     3136     3609    1   DCL IDX SBIN AUTO;
     3137     3610    1   DCL TEXT$ PTR AUTO;
     3138     3611        %EJECT;
PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:497  
     3139     3612        /**/
     3140     3613        /* Insure that this function can be distinguished from the characters         */
     3141     3614        /* that follow.                                                               */
     3142     3615        /*                                                                            */
     3143     3616        /* A handy way to do this is to examine the last character of the function    */
     3144     3617        /* and the first character following it.  If these are both alphanumeric,     */
     3145     3618        /* a reader could have trouble figuring out where one stops and the           */
     3146     3619        /* next begins... error it.                                                   */
     3147     3620        /**/
     3148     3621    1       TEXT$ = PARSE$PARAM.PCB$ -> P$PCB.TEXT$;
     3149     3622    1       IDX = PARSE$PARAM.CHARPOS;
     3150     3623        /* Use parser table that has 'alphanumeric' flag        */
     3151     3624    1       IF SYMTTBL.ALNUM(ASCBIN(B$TEXT(IDX)))
     3152     3625    1         AND SYMTTBL.ALNUM(ASCBIN(B$TEXT(IDX-1)))
     3153     3626    1       THEN
     3154     3627    1           PARSE$PARAM.REJECT = '1'B;      /* No way!                            */
     3155     3628    1       ELSE
     3156     3629    1           PARSE$PARAM.ACCEPT = '1'B;      /* OK!                                */
     3157     3630    1       RETURN;
     3158     3631        /**/
     3159     3632    1   END XUE$PP_SUCCESS;

PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:498  
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XU_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XUE$PP_SUCCESS.

   Procedure XUE$PP_SUCCESS requires 29 words for executable code.
   Procedure XUE$PP_SUCCESS requires 8 words of local(AUTO) storage.

    No errors detected in file XUE$EVAL.:E05TSI    .

PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:499  

 Object Unit name= XUE$PP_SUCCESS                             File name= XUE$EVAL.:E05TOU
 UTS= JUL 30 '97 09:17:09.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    29     35  XUE$PP_SUCCESS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  XUE$PP_SUCCESS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_DATA_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    XUP_SYMTBL
PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:500  


     3111        1        /*T***********************************************************/
     3112        2        /*T*                                                         */
     3113        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     3114        4        /*T*                                                         */
     3115        5        /*T***********************************************************/
     3116        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     3117        7        XUE$PP_SUCCESS: PROC(PARSE$PARAM);

      7  0 000000   000000 700200 xent  XUE$PP_SUCC* TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

     3118        8        /**********************************************************************/
     3119        9        /*F*    NAME:        XUE$PP_SUCCESS
     3120       10                PURPOSE:     To do success processing during parseing of expressiona.
     3121       11                DESCRIPTION: This routine insures that this token is distinct
     3122       12                             from the next one by insuring that there be a
     3123       13                             transition from alphanumeric to non, or vica versa.
     3124       14        */
     3125       15        /**********************************************************************/
     3126       16        /***** INCLUDES *****/
     3127       17          %INCLUDE XU_DATA_R;
     3128       28          %INCLUDE XU_MACRO_C;
     3129     3134          %INCLUDE XU_PERR_C;
     3130     3325        /***** Parameters *****/
     3131     3326        %PARSE$PARAM;
     3132     3407        /***** Based structures *****/
     3133     3408    1   DCL B$TEXT(0:0) CHAR(1) CALIGNED BASED(TEXT$);
     3134     3409          %P_PCB (NAME = P$PCB, STCLASS = BASED);
     3135     3608        /***** Local auto *****/
     3136     3609    1   DCL IDX SBIN AUTO;
     3137     3610    1   DCL TEXT$ PTR AUTO;
     3138     3611        %EJECT;
PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:501  
     3139     3612        /**/
     3140     3613        /* Insure that this function can be distinguished from the characters         */
     3141     3614        /* that follow.                                                               */
     3142     3615        /*                                                                            */
     3143     3616        /* A handy way to do this is to examine the last character of the function    */
     3144     3617        /* and the first character following it.  If these are both alphanumeric,     */
     3145     3618        /* a reader could have trouble figuring out where one stops and the           */
     3146     3619        /* next begins... error it.                                                   */
     3147     3620        /**/
     3148     3621    1       TEXT$ = PARSE$PARAM.PCB$ -> P$PCB.TEXT$;

   3621  0 000002   200003 470500                    LDP0    @PARSE$PARAM,,AUTO
         0 000003   000005 471500                    LDP1    5,,PR0
         0 000004   100000 236100                    LDQ     0,,PR1
         0 000005   200005 756100                    STQ     TEXT$,,AUTO

     3149     3622    1       IDX = PARSE$PARAM.CHARPOS;

   3622  0 000006   000004 235100                    LDA     4,,PR0
         0 000007   200004 755100                    STA     IDX,,AUTO

     3150     3623        /* Use parser table that has 'alphanumeric' flag        */
     3151     3624    1       IF SYMTTBL.ALNUM(ASCBIN(B$TEXT(IDX)))

   3624  0 000010   200005 473500                    LDP3    TEXT$,,AUTO
         0 000011   000100 101505                    MRL     fill='000'O
         0 000012   300000 000001                    ADSC9   0,A,PR3                  cn=0,n=1
         0 000013   200006 000004                    ADSC9   TEXT$+1,,AUTO            cn=0,n=4
         0 000014   200006 236100                    LDQ     TEXT$+1,,AUTO
         0 000015   000000 236006 xsym               LDQ     XUP_SYMTBL,QL
         0 000016   100000 316003                    CANQ    32768,DU
         0 000017   000032 600000 0                  TZE     s:3629
         0 000020   000100 101505                    MRL     fill='000'O
         0 000021   377777 600001                    ADSC9   -1,A,PR3                 cn=3,n=1
         0 000022   200007 000004                    ADSC9   TEXT$+2,,AUTO            cn=0,n=4
         0 000023   200007 236100                    LDQ     TEXT$+2,,AUTO
         0 000024   000000 236006 xsym               LDQ     XUP_SYMTBL,QL
PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:502  
         0 000025   100000 316003                    CANQ    32768,DU
         0 000026   000032 600000 0                  TZE     s:3629

     3152     3625    1         AND SYMTTBL.ALNUM(ASCBIN(B$TEXT(IDX-1)))
     3153     3626    1       THEN
     3154     3627    1           PARSE$PARAM.REJECT = '1'B;      /* No way!                            */

   3627  0 000027   000200 236003                    LDQ     128,DU
         0 000030   000000 256100                    ORSQ    0,,PR0
         0 000031   000034 710000 0                  TRA     s:3630

     3155     3628    1       ELSE
     3156     3629    1           PARSE$PARAM.ACCEPT = '1'B;      /* OK!                                */

   3629  0 000032   000400 236003                    LDQ     256,DU
         0 000033   000000 256100                    ORSQ    0,,PR0

     3157     3630    1       RETURN;

   3630  0 000034   000000 702200 xent               TSX2  ! X66_ARET
     3158     3631        /**/
     3159     3632    1   END XUE$PP_SUCCESS;

PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:503  
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XU_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XUE$PP_SUCCESS.
PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:504  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARSE$PARAM               4-0-0/w SBIN        r     1 IDX
    *0-0-0/w STRC(270)   r     1 PARSE$PARAM                5-0-0/w PTR         r     1 TEXT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 SYMTTBL(0:127)
     0-0-0/b BIT         r     1 XUP_SYMTBL(0:127)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 B$TEXT(0:0)                0-0-0/w STRC(504)   r     1 P$PCB


   Procedure XUE$PP_SUCCESS requires 29 words for executable code.
   Procedure XUE$PP_SUCCESS requires 8 words of local(AUTO) storage.

    No errors detected in file XUE$EVAL.:E05TSI    .
PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:505  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=XUE$PP_SUCCESS File=XUE$EVAL.:E05TSI                          WED 07/30/97 09:17 Page:506  
          MINI XREF LISTING

B$TEXT
      3408**DCL      3624>>IF       3624>>IF
IDX
      3609**DCL      3622<<ASSIGN   3624>>IF       3624>>IF
P$PCB.TEXT$
      3428**DCL      3621>>ASSIGN
PARSE$PARAM
      3345**DCL         7--PROC
PARSE$PARAM.ACCEPT
      3352**DCL      3629<<ASSIGN
PARSE$PARAM.CHARPOS
      3383**DCL      3622>>ASSIGN
PARSE$PARAM.PCB$
      3389**DCL      3621>>ASSIGN
PARSE$PARAM.REJECT
      3357**DCL      3627<<ASSIGN
SYMTTBL.ALNUM
        26**DCL      3624>>IF       3624>>IF
TEXT$
      3610**DCL      3408--IMP-PTR  3621<<ASSIGN   3624>>IF       3624>>IF
XUP_SYMTBL
        25**DCL        25--REDEF
