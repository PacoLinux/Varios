VERSION E05

PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:1    
        1        1        /*M* DDS$DUBREAK . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$DUBREAK
        9        9             PURPOSE: TO CHECK FOR DUPLICATE BREAKPOINTS.
       10       10             DESCRIPTION: CHECKS THE ENTRY AT S_D.STORED AGAINST THE STORED
       11       11             COMMANDS TABLE FOR AN IDENTICAL ENTRY. */
       12       12        /*D* NAME: DDS$DUBREAK
       13       13             CALL: CALL DDS$DUBREAK ALTRET( DUP FOUND );
       14       14             INTERFACE:
       15       15             ENVIRONMENT: DDS$SCAN ACTIVE.
       16       16             INPUT: S_D.STORED - ID OF COMMAND TO BE CHECKED.
       17       17             OUTPUT:
       18       18             SCRATCH: LOCAL AUTO ONLY.
       19       19             DESCRIPTION: RUNS THE COMMAND INPUT AGAINST THE STORED COMMANDS
       20       20             TABLE. "AT", "ON CALL", "ON NODE", AND "SKIP" BREAKPOINTS ARE
       21       21             DISTINGUISHED FROM "WHEN" BREAKPOINTS. RETURNS IF NO DUPLICATE FOUND,
       22       22             ELSE ALTRETURNS */
       23       23                                                /**/
       24       24        DDS$DUBREAK: PROC ALTRET;
       25       25                                                /**/
       26       26    1   DCL CMDOLD UBIN;
       27       27    1   DCL CMDNEW UBIN;
       28       28    1   DCL FXOLD$ PTR;
       29       29    1   DCL FXNEW$ PTR;
       30       30    1   DCL ATOLD$ PTR;
       31       31    1   DCL ATNEW$ PTR;
       32       32    1   DCL IX UBIN;
       33       33        %INCLUDE DD$BASED;
       34     1336        %FIXCOM (NAME=FXOLD,STCLASS="BASED(FXOLD$)");
       35     1352        %FIXCOM (NAME=FXNEW,STCLASS="BASED(FXNEW$)");
       36     1368        %AT_FIRST (NAME=ATNEW,STCLASS="BASED(ATNEW$)");
       37     1396        %AT_FIRST (NAME=ATOLD,STCLASS="BASED(ATOLD$)");
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:2    
       38     1424        %INCLUDE DD_ERR_C;
       39     1821        %INCLUDE DD_SUBS_C;
       40     2092        %INCLUDE XUH_MACRO_C;
       41     2176        %INCLUDE DD_SD_M;
       42     3512        %S_D;
       43     4830                                                /**/
       44     4831    1        FXNEW$ = ADDR( S_D.FIXCOM( S_D.STORED ) );
       45     4832    1        ATNEW$ = PINCRW( S_D.VARCOM$, FXNEW.FAI );
       46     4833    1        CMDNEW = FXNEW.CMD;
       47     4834        /*D* IT IS ASSUMED THAT THE COMMAND INPUT IS ONE OF AT, ON CALL, ON NODE, OR WHEN */
       48     4835    1        IF ( CMDNEW = C_AT ) OR ( CMDNEW = C_OC ) /* C_AT, C_OC */
       49     4836    1        THEN CMDNEW = C_AT;                /* C_AT */
       50     4837    2        DO IX = 1 TO S_D.FIXLAST;
       51     4838    2             FXOLD$ = ADDR( S_D.FIXCOM( IX ) );
       52     4839    2             ATOLD$ = PINCRW( S_D.VARCOM$, FXOLD.FAI );
       53     4840    2             CMDOLD = FXOLD.CMD;
       54     4841    2             IF (CMDOLD = C_AT) OR (CMDOLD = C_OC) /* C_AT, C_OC */
       55     4842    2             THEN CMDOLD = C_AT;           /* C_AT */
       56     4843    2             IF FXNEW$ ~= FXOLD$
       57     4844    2             THEN IF CMDNEW = CMDOLD
       58     4845    2                  THEN IF FXNEW.CDF = FXOLD.CDF
       59     4846    2                       THEN IF ATNEW.NODE = ATOLD.NODE
       60     4847    2                            THEN IF FXNEW.USER = FXOLD.USER
       61     4848    2                                 THEN IF FXNEW.USER
       62     4849    2                                      THEN IF ATNEW.U.LS = LS_USER /* LS_USER */
       63     4850    2                                           THEN IF ATNEW.U = ATOLD.U
       64     4851    2                                                THEN CALL PDUP ALTRET( DUP );
       65     4852    2                                                ELSE ;
       66     4853    2                                           ELSE IF ATNEW.U.LS = ATOLD.U.LS
       67     4854    2                                                THEN CALL PDUP ALTRET( DUP );
       68     4855    2                                                ELSE ;
       69     4856    2                                      ELSE CALL PDUP ALTRET( DUP );
       70     4857    2           END;                            /* "DO IX" */
       71     4858                                                /**/
       72     4859    1        RETURN;
       73     4860                                                /**/
       74     4861    1   DUP:
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:3    
       75     4862    1        S_D.ERROR = E@DUBREAK;             /* E@DUBREAK */
       76     4863    1        ALTRETURN;
       77     4864                                                /**/
       78     4865        %EJECT;
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:4    
       79     4866                                                /**/
       80     4867    1   PDUP: PROC ALTRET;
       81     4868                                                /**/
       82     4869    2        IF ( CMDOLD = C_AT ) OR ( CMDOLD = C_ONN )
       83     4870    2        THEN ALTRETURN;                    /* Got a duplicate */
       84     4871    3        ELSE DO;                           /* WHEN */
       85     4872    3           END;
       86     4873                                                /**/
       87     4874    2        RETURN;
       88     4875                                                /**/
       89     4876    2   END PDUP;
       90     4877                                                /**/
       91     4878    1   END DDS$DUBREAK;

PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:5    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$DUBREAK.

   Procedure DDS$DUBREAK requires 108 words for executable code.
   Procedure DDS$DUBREAK requires 12 words of local(AUTO) storage.

    No errors detected in file DDS$DUBREAK.:E05TSI    .

PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:6    

 Object Unit name= DDS$DUBREAK                                File name= DDS$DUBREAK.:E05TOU
 UTS= JUL 29 '97 14:15:26.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   108    154  DDS$DUBREAK
    1  RoData even  none     1      1  DDS$DUBREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  DDS$DUBREAK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:7    


        1        1        /*M* DDS$DUBREAK . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$DUBREAK
        9        9             PURPOSE: TO CHECK FOR DUPLICATE BREAKPOINTS.
       10       10             DESCRIPTION: CHECKS THE ENTRY AT S_D.STORED AGAINST THE STORED
       11       11             COMMANDS TABLE FOR AN IDENTICAL ENTRY. */
       12       12        /*D* NAME: DDS$DUBREAK
       13       13             CALL: CALL DDS$DUBREAK ALTRET( DUP FOUND );
       14       14             INTERFACE:
       15       15             ENVIRONMENT: DDS$SCAN ACTIVE.
       16       16             INPUT: S_D.STORED - ID OF COMMAND TO BE CHECKED.
       17       17             OUTPUT:
       18       18             SCRATCH: LOCAL AUTO ONLY.
       19       19             DESCRIPTION: RUNS THE COMMAND INPUT AGAINST THE STORED COMMANDS
       20       20             TABLE. "AT", "ON CALL", "ON NODE", AND "SKIP" BREAKPOINTS ARE
       21       21             DISTINGUISHED FROM "WHEN" BREAKPOINTS. RETURNS IF NO DUPLICATE FOUND,
       22       22             ELSE ALTRETURNS */
       23       23                                                /**/
       24       24        DDS$DUBREAK: PROC ALTRET;

     24  0 000000   000000 700200 xent  DDS$DUBREAK  TSX0  ! X66_AUTO_0
         0 000001   000014 000000                    ZERO    12,0

       25       25                                                /**/
       26       26    1   DCL CMDOLD UBIN;
       27       27    1   DCL CMDNEW UBIN;
       28       28    1   DCL FXOLD$ PTR;
       29       29    1   DCL FXNEW$ PTR;
       30       30    1   DCL ATOLD$ PTR;
       31       31    1   DCL ATNEW$ PTR;
       32       32    1   DCL IX UBIN;
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:8    
       33       33        %INCLUDE DD$BASED;
       34     1336        %FIXCOM (NAME=FXOLD,STCLASS="BASED(FXOLD$)");
       35     1352        %FIXCOM (NAME=FXNEW,STCLASS="BASED(FXNEW$)");
       36     1368        %AT_FIRST (NAME=ATNEW,STCLASS="BASED(ATNEW$)");
       37     1396        %AT_FIRST (NAME=ATOLD,STCLASS="BASED(ATOLD$)");
       38     1424        %INCLUDE DD_ERR_C;
       39     1821        %INCLUDE DD_SUBS_C;
       40     2092        %INCLUDE XUH_MACRO_C;
       41     2176        %INCLUDE DD_SD_M;
       42     3512        %S_D;
       43     4830                                                /**/
       44     4831    1        FXNEW$ = ADDR( S_D.FIXCOM( S_D.STORED ) );

   4831  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000135 236100                    LDQ     93,,PR0
         0 000004   000003 402007                    MPY     3,DL
         0 000005   000023 736000                    QLS     19
         0 000006   001212 036003                    ADLQ    650,DU
         0 000007   000000 036000 xsym               ADLQ    S_D$
         0 000010   200006 756100                    STQ     FXNEW$,,AUTO

       45     4832    1        ATNEW$ = PINCRW( S_D.VARCOM$, FXNEW.FAI );

   4832  0 000011   200006 471500                    LDP1    FXNEW$,,AUTO
         0 000012   100002 720100                    LXL0    2,,PR1
         0 000013   004622 473500                    LDP3    2450,,PR0
         0 000014   300000 634510                    EPPR4   0,X0,PR3
         0 000015   200010 454500                    STP4    ATNEW$,,AUTO

       46     4833    1        CMDNEW = FXNEW.CMD;

   4833  0 000016   100000 236100                    LDQ     0,,PR1
         0 000017   000033 772000                    QRL     27
         0 000020   200004 756100                    STQ     CMDNEW,,AUTO

       47     4834       /*D* IT IS ASSUMED THAT THE COMMAND INPUT IS ONE OF AT, ON CALL, ON NODE, OR WHEN */
       48     4835    1        IF ( CMDNEW = C_AT ) OR ( CMDNEW = C_OC ) /* C_AT, C_OC */
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:9    

   4835  0 000021   000002 116007                    CMPQ    2,DL
         0 000022   000025 600000 0                  TZE     s:4836
         0 000023   000037 116007                    CMPQ    31,DL
         0 000024   000027 601000 0                  TNZ     s:4837

       49     4836    1        THEN CMDNEW = C_AT;                /* C_AT */

   4836  0 000025   000002 235007                    LDA     2,DL
         0 000026   200004 755100                    STA     CMDNEW,,AUTO

       50     4837    2        DO IX = 1 TO S_D.FIXLAST;

   4837  0 000027   000001 235007                    LDA     1,DL
         0 000030   200011 755100                    STA     IX,,AUTO
         0 000031   000132 710000 0                  TRA     s:4857+3

       51     4838    2             FXOLD$ = ADDR( S_D.FIXCOM( IX ) );

   4838  0 000032   200011 236100                    LDQ     IX,,AUTO
         0 000033   000006 402003                    MPY     6,DU
         0 000034   001212 036003                    ADLQ    650,DU
         0 000035   000000 036000 xsym               ADLQ    S_D$
         0 000036   200005 756100                    STQ     FXOLD$,,AUTO

       52     4839    2             ATOLD$ = PINCRW( S_D.VARCOM$, FXOLD.FAI );

   4839  0 000037   200005 470500                    LDP0    FXOLD$,,AUTO
         0 000040   000002 720100                    LXL0    2,,PR0
         0 000041   000000 471400 xsym               LDP1    S_D$
         0 000042   104622 473500                    LDP3    2450,,PR1
         0 000043   300000 634510                    EPPR4   0,X0,PR3
         0 000044   200007 454500                    STP4    ATOLD$,,AUTO

       53     4840    2             CMDOLD = FXOLD.CMD;

   4840  0 000045   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:10   
         0 000046   000033 772000                    QRL     27
         0 000047   200003 756100                    STQ     CMDOLD,,AUTO

       54     4841    2             IF (CMDOLD = C_AT) OR (CMDOLD = C_OC) /* C_AT, C_OC */

   4841  0 000050   000002 116007                    CMPQ    2,DL
         0 000051   000054 600000 0                  TZE     s:4842
         0 000052   000037 116007                    CMPQ    31,DL
         0 000053   000056 601000 0                  TNZ     s:4843

       55     4842    2             THEN CMDOLD = C_AT;           /* C_AT */

   4842  0 000054   000002 235007                    LDA     2,DL
         0 000055   200003 755100                    STA     CMDOLD,,AUTO

       56     4843    2             IF FXNEW$ ~= FXOLD$

   4843  0 000056   200006 236100                    LDQ     FXNEW$,,AUTO
         0 000057   200005 116100                    CMPQ    FXOLD$,,AUTO
         0 000060   000127 600000 0                  TZE     s:4857

       57     4844    2             THEN IF CMDNEW = CMDOLD

   4844  0 000061   200004 236100                    LDQ     CMDNEW,,AUTO
         0 000062   200003 116100                    CMPQ    CMDOLD,,AUTO
         0 000063   000127 601000 0                  TNZ     s:4857

       58     4845    2                  THEN IF FXNEW.CDF = FXOLD.CDF

   4845  0 000064   200006 475500                    LDP5    FXNEW$,,AUTO
         0 000065   500001 236100                    LDQ     1,,PR5
         0 000066   000001 116100                    CMPQ    1,,PR0
         0 000067   000127 601000 0                  TNZ     s:4857

       59     4846    2                       THEN IF ATNEW.NODE = ATOLD.NODE

   4846  0 000070   200010 476500                    LDP6    ATNEW$,,AUTO
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:11   
         0 000071   600003 221100                    LDX1    3,,PR6
         0 000072   400003 101100                    CMPX1   3,,PR4
         0 000073   000127 601000 0                  TNZ     s:4857

       60     4847    2                            THEN IF FXNEW.USER = FXOLD.USER

   4847  0 000074   500000 236100                    LDQ     0,,PR5
         0 000075   000000 676100                    ERQ     0,,PR0
         0 000076   000001 376003                    ANQ     1,DU
         0 000077   000127 601000 0                  TNZ     s:4857

       61     4848    2                                 THEN IF FXNEW.USER

   4848  0 000100   500000 236100                    LDQ     0,,PR5
         0 000101   000001 316003                    CANQ    1,DU
         0 000102   000125 600000 0                  TZE     s:4856

       62     4849    2                                      THEN IF ATNEW.U.LS = LS_USER /* LS_USER */

   4849  0 000103   600001 236100                    LDQ     1,,PR6
         0 000104   700000 376007                    ANQ     -32768,DL
         0 000105   100000 116007                    CMPQ    32768,DL
         0 000106   000116 601000 0                  TNZ     s:4853

       63     4850    2                                           THEN IF ATNEW.U = ATOLD.U

   4850  0 000107   600001 236100                    LDQ     1,,PR6
         0 000110   400001 676100                    ERQ     1,,PR4
         0 000111   000000 376000 1                  ANQ     0
         0 000112   000127 601000 0                  TNZ     s:4857

       64     4851    2                                                THEN CALL PDUP ALTRET( DUP );

   4851  0 000113   000144 701000 0                  TSX1    PDUP
         0 000114   000140 702000 0                  TSX2    DUP
         0 000115   000127 710000 0                  TRA     s:4857

PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:12   
       65     4852    2                                                ELSE ;
       66     4853    2                                           ELSE IF ATNEW.U.LS = ATOLD.U.LS

   4853  0 000116   600001 236100                    LDQ     1,,PR6
         0 000117   400001 676100                    ERQ     1,,PR4
         0 000120   700000 376007                    ANQ     -32768,DL
         0 000121   000127 601000 0                  TNZ     s:4857

       67     4854    2                                                THEN CALL PDUP ALTRET( DUP );

   4854  0 000122   000144 701000 0                  TSX1    PDUP
         0 000123   000140 702000 0                  TSX2    DUP
         0 000124   000127 710000 0                  TRA     s:4857

       68     4855    2                                                ELSE ;
       69     4856    2                                      ELSE CALL PDUP ALTRET( DUP );

   4856  0 000125   000144 701000 0                  TSX1    PDUP
         0 000126   000140 702000 0                  TSX2    DUP

       70     4857    2           END;                            /* "DO IX" */

   4857  0 000127   200011 235100                    LDA     IX,,AUTO
         0 000130   000001 035007                    ADLA    1,DL
         0 000131   200011 755100                    STA     IX,,AUTO
         0 000132   000000 470400 xsym               LDP0    S_D$
         0 000133   200011 236100                    LDQ     IX,,AUTO
         0 000134   000137 604000 0                  TMI     s:4859
         0 000135   000047 116100                    CMPQ    39,,PR0
         0 000136   000032 604400 0                  TMOZ    s:4838

       71     4858                                                /**/
       72     4859    1        RETURN;

   4859  0 000137   000000 702200 xent               TSX2  ! X66_ARET

       73     4860                                                /**/
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:13   
       74     4861    1   DUP:
       75     4862    1        S_D.ERROR = E@DUBREAK;             /* E@DUBREAK */

   4862  0 000140   000071 235007       DUP          LDA     57,DL
         0 000141   000000 470400 xsym               LDP0    S_D$
         0 000142   000013 755100                    STA     11,,PR0

       76     4863    1        ALTRETURN;

   4863  0 000143   000000 702200 xent               TSX2  ! X66_AALT

       77     4864                                                /**/
       78     4865        %EJECT;
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:14   
       79     4866                                                /**/
       80     4867    1   PDUP: PROC ALTRET;

   4867  0 000144   200012 741300       PDUP         STX1  ! IX+1,,AUTO

       81     4868                                                /**/
       82     4869    2        IF ( CMDOLD = C_AT ) OR ( CMDOLD = C_ONN )

   4869  0 000145   200003 235100                    LDA     CMDOLD,,AUTO
         0 000146   000002 115007                    CMPA    2,DL
         0 000147   000152 600000 0                  TZE     s:4870
         0 000150   000042 115007                    CMPA    34,DL
         0 000151   000153 601000 0                  TNZ     s:4874

       83     4870    2        THEN ALTRETURN;                    /* Got a duplicate */

   4870  0 000152   000000 702211                    TSX2  ! 0,X1

       84     4871    3        ELSE DO;                           /* WHEN */

       85     4872    3           END;

       86     4873                                                /**/
       87     4874    2        RETURN;

   4874  0 000153   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   777777 777000                                                    ....
       88     4875                                                /**/
       89     4876    2   END PDUP;
       90     4877                                                /**/
       91     4878    1   END DDS$DUBREAK;

PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:15   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$DUBREAK.

   Procedure DDS$DUBREAK requires 108 words for executable code.
   Procedure DDS$DUBREAK requires 12 words of local(AUTO) storage.

    No errors detected in file DDS$DUBREAK.:E05TSI    .
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:16   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:17   
          MINI XREF LISTING

ATNEW.NODE
      1384**DCL      4846>>IF
ATNEW.U
      1374**DCL      4850>>IF
ATNEW.U.LS
      1376**DCL      4849>>IF       4853>>IF
ATNEW.UNUSED
      1373**DCL      1374--REDEF    1378--REDEF
ATNEW$
        31**DCL      1369--IMP-PTR  4832<<ASSIGN   4846>>IF       4849>>IF       4850>>IF       4853>>IF
ATOLD.NODE
      1412**DCL      4846>>IF
ATOLD.U
      1402**DCL      4850>>IF
ATOLD.U.LS
      1404**DCL      4853>>IF
ATOLD.UNUSED
      1401**DCL      1402--REDEF    1406--REDEF
ATOLD$
        30**DCL      1397--IMP-PTR  4839<<ASSIGN   4846>>IF       4850>>IF       4853>>IF
CMDNEW
        27**DCL      4833<<ASSIGN   4835>>IF       4835>>IF       4836<<ASSIGN   4844>>IF
CMDOLD
        26**DCL      4840<<ASSIGN   4841>>IF       4841>>IF       4842<<ASSIGN   4844>>IF       4869>>IF
      4869>>IF
DUP
      4862**LABEL    4851--CALLALT  4854--CALLALT  4856--CALLALT
FXNEW.CDF
      1362**DCL      4845>>IF
FXNEW.CMD
      1354**DCL      4833>>ASSIGN
FXNEW.FAI
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:18   
      1364**DCL      4832>>ASSIGN
FXNEW.USER
      1360**DCL      4847>>IF       4848>>IF
FXNEW$
        29**DCL      1353--IMP-PTR  4831<<ASSIGN   4832>>ASSIGN   4833>>ASSIGN   4843>>IF       4845>>IF
      4847>>IF       4848>>IF
FXOLD.CDF
      1346**DCL      4845>>IF
FXOLD.CMD
      1338**DCL      4840>>ASSIGN
FXOLD.FAI
      1348**DCL      4839>>ASSIGN
FXOLD.USER
      1344**DCL      4847>>IF
FXOLD$
        28**DCL      1337--IMP-PTR  4838<<ASSIGN   4839>>ASSIGN   4840>>ASSIGN   4843>>IF       4845>>IF
      4847>>IF
IX
        32**DCL      4837<<DOINDEX  4838>>ASSIGN
PDUP
      4867**PROC     4851--CALL     4854--CALL     4856--CALL
S_D.CURRENT_CHANNEL
      4464**DCL      4466--REDEF
S_D.DEBUGA
      3616**DCL      3618--REDEF
S_D.EIS
      4574**DCL      4603--REDEF
S_D.ERROR
      3545**DCL      4862<<ASSIGN
S_D.FIXCOM
      3970**DCL      4831--ASSIGN   4838--ASSIGN
S_D.FIXLAST
      3608**DCL      4837>>DOINDEX
S_D.HOST_MESSAGE_BUF_REMOTE
      4507**DCL      4508--REDEF    4522--REDEF
S_D.JDE
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:19   
      4121**DCL      4122--REDEF
S_D.L$.VALUE
      3674**DCL      3680--REDEF    3688--REDEF    3691--REDEF    3694--REDEF    3697--REDEF
S_D.L$.VALUE.L
      3675**DCL      3676--REDEF    3677--REDEF
S_D.L6_MESSAGE_BUF
      4528**DCL      4530--REDEF
S_D.OUTPUT
      4494**DCL      4496--REDEF
S_D.REMOTE_MSG.FNCC
      4513**DCL      4514--REDEF
S_D.REMOTE_MSG.STXC
      4509**DCL      4510--REDEF
S_D.REMOTE_MSG.SUBFNCC
      4517**DCL      4518--REDEF
S_D.STORED
      3710**DCL      4831>>ASSIGN
S_D.SV
      3573**DCL      3594--REDEF
S_D.VARCOM$
      3985**DCL      4832>>ASSIGN   4839>>ASSIGN
S_D$
      4825**DCL      3521--IMP-PTR  4831>>ASSIGN   4831>>ASSIGN   4832>>ASSIGN   4837>>DOINDEX  4838>>ASSIGN
      4839>>ASSIGN   4862>>ASSIGN
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:20   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$DUBREAK File=DDS$DUBREAK.:E05TSI                          TUE 07/29/97 14:15 Page:21   
              MINI UREF LISTING

DDS$DUBREAK      24**PROC
