VERSION E05

PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:1    
        1        1        /*M*    VEX$PARSE_SEQRANGE - TURN PARSE INPUT INTO EDIT SEQ. NUMBER RANGE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        VEX$PARSE_SEQRANGE: PROC(LO_SEQNUM,HI_SEQNUM,P$) ALTRET;
        9        9        /**/
       10       10        /*F*     NAME:     VEX$PARSE_SEQRANGE
       11       11                 PURPOSE:  TO CONVERT THE PARSE BLOCKS OUTPUT BY M$PARSE FOR
       12       12                           A SEQUENCE NUMBER RANGE (N-M) TO TWO SEQUENCE NUMBER
       13       13                           VALUES. IF ONLY A SINGLE SEQUENCE NUMBER WAS INPUT THEN
       14       14                           BOTH SEQUENCE NUMBERS WILL BE SET TO THAT VALUE */
       15       15        /**/
       16       16        /*D*     NAME:     VEX$PARSE_SEQRANGE
       17       17                 PARAMETERS: LO_SEQNUM - SEQUENCE NUMBER TO TAKE THE VALUE OF THE
       18       18                                FIRST SEQUENCE NUMBER INPUT.
       19       19                           HI_SEQNUM - SEQUENCE NUMBER TO BE SET TO THE VALUE OF
       20       20                                THE SECOND SEQUENCE NUMBER INPUT IF PRESENT, ELSE
       21       21                                TO BE SET TO LO_SEQNUM.
       22       22                           P$ - POINTER TO THE FIRST PARSE BLOCK DESCRIBING THE
       23       23                                SEQUENCE NUMBER RANGE.
       24       24                 DESCRIPTION: P$ POINTS AT A PARSE BLOCK WITH EITHER ONE OR TWO
       25       25                           SUB- POINTERS. VEX$BUILD_SEQNUM IS CALLED USING THE FIRST
       26       26                           OF THESE SUB-POINTERS AND THE VALUE RETURNED IS
       27       27                           PLACED IN LO_SEQNUM. IF THE SECOND SUB-POINTER IS PRESENT
       28       28                           THEN TWO SEQUENCE NUMBERS WERE INPUT AND VEX$BUILD_SEQNUM
       29       29                           IS CALLED AGAIN FOR HI_SEQNUM. OTHERWISE HI_SEQNUM IS
       30       30                           SET EQUAL TO LO_SEQNUM. VEX$PARSE_SEQRANGE WILL
       31       31                           ALTRETURN IF VEX$BUILD_SEQNUM ALTRETURNS OR IF THE
       32       32                           VALUE INPUT FOR LO_SEQNUM IS GREATER THAN THAT FOR
       33       33                           HI_SEQNUM, ELSE IT RETURNS NORMALLY.    */
       34       34        /**/
       35       35        /**********************************************************************/
       36       36        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       37       37        /**********************************************************************/
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:2    
       38       38    1   DCL LO_SEQNUM UBIN(36);
       39       39    1   DCL HI_SEQNUM UBIN(36);
       40       40    1   DCL P$ PTR;
       41       41        /**/
       42       42        /*********************************************************************/
       43       43        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       44       44        /*********************************************************************/
       45       45        %PLIST;
       46       46        %INCLUDE   XU_MACRO_C;
       47     3152        %INCLUDE VE_SUBS_C;
       48     3346        %INCLUDE VE_PERR_C;
       49     3563        /**/
       50     3564        /**********************************************************************/
       51     3565        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       52     3566        /**********************************************************************/
       53     3567        %PARSE$OUT (STCLASS = BASED);
       54     3612        /**/
       55     3613        %EJECT;
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:3    
       56     3614        /*****************************************************************/
       57     3615        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       58     3616        /*****************************************************************/
       59     3617    1   DCL VEX$BUILD_SEQNUM ENTRY(2) ALTRET;
       60     3618    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       61     3619        /**/
       62     3620        /*****************************************************************************/
       63     3621        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       64     3622        /*****************************************************************************/
       65     3623    1           CALL VEX$BUILD_SEQNUM(LO_SEQNUM,P$ -> OUT$BLK.SUBLK$(0))
       66     3624    1             ALTRET (PARSE_SEQRANGE_ALT);
       67     3625    1           IF (P$ -> OUT$BLK.NSUBLKS = 1) THEN HI_SEQNUM = LO_SEQNUM;
       68     3626    1           ELSE CALL VEX$BUILD_SEQNUM (HI_SEQNUM,P$ -> OUT$BLK.SUBLK$(1))
       69     3627    1                ALTRET (PARSE_SEQRANGE_ALT);
       70     3628    2           IF (HI_SEQNUM < LO_SEQNUM) THEN DO;
       71     3629    2              CALL VEX$ERROR(E$E_SEQRNGE,3);
       72     3630    2   PARSE_SEQRANGE_ALT:
       73     3631    2              ALTRETURN;
       74     3632    2              END;
       75     3633        /**/
       76     3634        /*E*     ERROR:    VEE-E$E_SEQRNGE-0
       77     3635                 MESSAGE:  Illegal sequence number range - LO > HI
       78     3636                 DESCRIPTION: A sequence number range with the upper limit
       79     3637                           smaller than the lower limit has been input.
       80     3638        */
       81     3639    1           RETURN;
       82     3640    1   END;

PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:4    
--  Include file information  --

   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$PARSE_SEQRANGE.

   Procedure VEX$PARSE_SEQRANGE requires 41 words for executable code.
   Procedure VEX$PARSE_SEQRANGE requires 8 words of local(AUTO) storage.

    No errors detected in file VEX$PARSE_SEQRANGE.:E05TSI    .

PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:5    

 Object Unit name= VEX$PARSE_SEQRANGE                         File name= VEX$PARSE_SEQRANGE.:E05TOU
 UTS= JUL 30 '97 07:14:41.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    41     51  VEX$PARSE_SEQRANGE
    1  RoData even  none     3      3  VEX$PARSE_SEQRANGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  VEX$PARSE_SEQRANGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VEX$BUILD_SEQNUM
 yes     yes           Std       2 VEX$ERROR
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:6    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:7    


        1        1        /*M*    VEX$PARSE_SEQRANGE - TURN PARSE INPUT INTO EDIT SEQ. NUMBER RANGE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        VEX$PARSE_SEQRANGE: PROC(LO_SEQNUM,HI_SEQNUM,P$) ALTRET;

      8  0 000000   000000 700200 xent  VEX$PARSE_S* TSX0  ! X66_AUTO_3
         0 000001   000010 000003                    ZERO    8,3

        9        9        /**/
       10       10        /*F*     NAME:     VEX$PARSE_SEQRANGE
       11       11                 PURPOSE:  TO CONVERT THE PARSE BLOCKS OUTPUT BY M$PARSE FOR
       12       12                           A SEQUENCE NUMBER RANGE (N-M) TO TWO SEQUENCE NUMBER
       13       13                           VALUES. IF ONLY A SINGLE SEQUENCE NUMBER WAS INPUT THEN
       14       14                           BOTH SEQUENCE NUMBERS WILL BE SET TO THAT VALUE */
       15       15        /**/
       16       16        /*D*     NAME:     VEX$PARSE_SEQRANGE
       17       17                 PARAMETERS: LO_SEQNUM - SEQUENCE NUMBER TO TAKE THE VALUE OF THE
       18       18                                FIRST SEQUENCE NUMBER INPUT.
       19       19                           HI_SEQNUM - SEQUENCE NUMBER TO BE SET TO THE VALUE OF
       20       20                                THE SECOND SEQUENCE NUMBER INPUT IF PRESENT, ELSE
       21       21                                TO BE SET TO LO_SEQNUM.
       22       22                           P$ - POINTER TO THE FIRST PARSE BLOCK DESCRIBING THE
       23       23                                SEQUENCE NUMBER RANGE.
       24       24                 DESCRIPTION: P$ POINTS AT A PARSE BLOCK WITH EITHER ONE OR TWO
       25       25                           SUB- POINTERS. VEX$BUILD_SEQNUM IS CALLED USING THE FIRST
       26       26                           OF THESE SUB-POINTERS AND THE VALUE RETURNED IS
       27       27                           PLACED IN LO_SEQNUM. IF THE SECOND SUB-POINTER IS PRESENT
       28       28                           THEN TWO SEQUENCE NUMBERS WERE INPUT AND VEX$BUILD_SEQNUM
       29       29                           IS CALLED AGAIN FOR HI_SEQNUM. OTHERWISE HI_SEQNUM IS
       30       30                           SET EQUAL TO LO_SEQNUM. VEX$PARSE_SEQRANGE WILL
       31       31                           ALTRETURN IF VEX$BUILD_SEQNUM ALTRETURNS OR IF THE
       32       32                           VALUE INPUT FOR LO_SEQNUM IS GREATER THAN THAT FOR
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:8    
       33       33                           HI_SEQNUM, ELSE IT RETURNS NORMALLY.    */
       34       34        /**/
       35       35        /**********************************************************************/
       36       36        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       37       37        /**********************************************************************/
       38       38    1   DCL LO_SEQNUM UBIN(36);
       39       39    1   DCL HI_SEQNUM UBIN(36);
       40       40    1   DCL P$ PTR;
       41       41        /**/
       42       42        /*********************************************************************/
       43       43        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       44       44        /*********************************************************************/
       45       45        %PLIST;
       46       46        %INCLUDE   XU_MACRO_C;
       47     3152        %INCLUDE VE_SUBS_C;
       48     3346        %INCLUDE VE_PERR_C;
       49     3563        /**/
       50     3564        /**********************************************************************/
       51     3565        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       52     3566        /**********************************************************************/
       53     3567        %PARSE$OUT (STCLASS = BASED);
       54     3612        /**/
       55     3613        %EJECT;
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:9    
       56     3614        /*****************************************************************/
       57     3615        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       58     3616        /*****************************************************************/
       59     3617    1   DCL VEX$BUILD_SEQNUM ENTRY(2) ALTRET;
       60     3618    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       61     3619        /**/
       62     3620        /*****************************************************************************/
       63     3621        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       64     3622        /*****************************************************************************/
       65     3623    1           CALL VEX$BUILD_SEQNUM(LO_SEQNUM,P$ -> OUT$BLK.SUBLK$(0))

   3623  0 000002   200005 470500                    LDP0    @P$,,AUTO
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   100003 633500                    EPPR3   3,,PR1
         0 000005   200007 453500                    STP3    @P$+2,,AUTO
         0 000006   200003 236100                    LDQ     @LO_SEQNUM,,AUTO
         0 000007   200006 756100                    STQ     @P$+1,,AUTO
         0 000010   200006 630500                    EPPR0   @P$+1,,AUTO
         0 000011   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000012   000000 701000 xent               TSX1    VEX$BUILD_SEQNUM
         0 000013   000047 702000 0                  TSX2    PARSE_SEQRANGE_ALT

       66     3624    1             ALTRET (PARSE_SEQRANGE_ALT);
       67     3625    1           IF (P$ -> OUT$BLK.NSUBLKS = 1) THEN HI_SEQNUM = LO_SEQNUM;

   3625  0 000014   200005 470500                    LDP0    @P$,,AUTO
         0 000015   000000 471500                    LDP1    0,,PR0
         0 000016   100001 220100                    LDX0    1,,PR1
         0 000017   000001 100003                    CMPX0   1,DU
         0 000020   000026 601000 0                  TNZ     s:3626

   3625  0 000021   200003 473500                    LDP3    @LO_SEQNUM,,AUTO
         0 000022   200004 474500                    LDP4    @HI_SEQNUM,,AUTO
         0 000023   300000 235100                    LDA     0,,PR3
         0 000024   400000 755100                    STA     0,,PR4
         0 000025   000036 710000 0                  TRA     s:3628

PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:10   
       68     3626    1           ELSE CALL VEX$BUILD_SEQNUM (HI_SEQNUM,P$ -> OUT$BLK.SUBLK$(1))

   3626  0 000026   100004 633500                    EPPR3   4,,PR1
         0 000027   200007 453500                    STP3    @P$+2,,AUTO
         0 000030   200004 236100                    LDQ     @HI_SEQNUM,,AUTO
         0 000031   200006 756100                    STQ     @P$+1,,AUTO
         0 000032   200006 630500                    EPPR0   @P$+1,,AUTO
         0 000033   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000034   000000 701000 xent               TSX1    VEX$BUILD_SEQNUM
         0 000035   000047 702000 0                  TSX2    PARSE_SEQRANGE_ALT

       69     3627    1                ALTRET (PARSE_SEQRANGE_ALT);
       70     3628    2           IF (HI_SEQNUM < LO_SEQNUM) THEN DO;

   3628  0 000036   200004 470500                    LDP0    @HI_SEQNUM,,AUTO
         0 000037   200003 471500                    LDP1    @LO_SEQNUM,,AUTO
         0 000040   000000 236100                    LDQ     0,,PR0
         0 000041   100000 116100                    CMPQ    0,,PR1
         0 000042   000050 603000 0                  TRC     s:3639

       71     3629    2              CALL VEX$ERROR(E$E_SEQRNGE,3);

   3629  0 000043   000001 630400 1                  EPPR0   1
         0 000044   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000045   000000 701000 xent               TSX1    VEX$ERROR
         0 000046   000000 011000                    NOP     0

       72     3630    2   PARSE_SEQRANGE_ALT:
       73     3631    2              ALTRETURN;

   3631  0 000047   000000 702200 xent  PARSE_SEQRA* TSX2  ! X66_AALT

       74     3632    2              END;
       75     3633        /**/
       76     3634        /*E*     ERROR:    VEE-E$E_SEQRNGE-0
       77     3635                 MESSAGE:  Illegal sequence number range - LO > HI
       78     3636                 DESCRIPTION: A sequence number range with the upper limit
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:11   
       79     3637                           smaller than the lower limit has been input.
       80     3638        */
       81     3639    1           RETURN;

   3639  0 000050   000000 702200 xent               TSX2  ! X66_ARET
       82     3640    1   END;

PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:12   
--  Include file information  --

   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$PARSE_SEQRANGE.
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:13   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @HI_SEQNUM                 3-0-0/w PTR         r     1 @LO_SEQNUM
     5-0-0/w PTR         r     1 @P$                       *0-0-0/w UBIN        r     1 HI_SEQNUM
    *0-0-0/w UBIN        r     1 LO_SEQNUM                 *0-0-0/w PTR         r     1 P$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK


   Procedure VEX$PARSE_SEQRANGE requires 41 words for executable code.
   Procedure VEX$PARSE_SEQRANGE requires 8 words of local(AUTO) storage.

    No errors detected in file VEX$PARSE_SEQRANGE.:E05TSI    .
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$PARSE_SEQRANGE File=VEX$PARSE_SEQRANGE.:E05TSI            WED 07/30/97 07:14 Page:15   
          MINI XREF LISTING

HI_SEQNUM
        39**DCL         8--PROC     3625<<ASSIGN   3626<>CALL     3628>>IF
LO_SEQNUM
        38**DCL         8--PROC     3623<>CALL     3625>>ASSIGN   3628>>IF
OUT$BLK.NSUBLKS
      3585**DCL      3625>>IF
OUT$BLK.SUBLK$
      3606**DCL      3623<>CALL     3626<>CALL
P$
        40**DCL         8--PROC     3623>>CALL     3625>>IF       3626>>CALL
PARSE_SEQRANGE_ALT
      3631**LABEL    3623--CALLALT  3626--CALLALT
VEX$BUILD_SEQNUM
      3617**DCL-ENT  3623--CALL     3626--CALL
VEX$ERROR
      3618**DCL-ENT  3629--CALL
