

14:42 JUL 28 '97 JL_DATA_M.:E05SI                                          1    
    1      /*M* JL_DATA_M - Based structures for image file records for M$LINK and M$SAVE */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7                          /*F*    NAME: JL_DATA_M
    8
    9                          The JL_DATA_M file contains the macros for the
   10                          BASED structures for the following records in the
   11                          *N file or the user's SAVE file and a macro to
   12                          generate the string substitutions for the record
   13                          keys.
   14
   15                          }   JL$HEAD     - The header record
   16                          }   JL$TRAILER  - The trailer record
   17                          }   JL$AMR_BUF  - The assign/merge info record
   18                          }   JL_SUBS     - String Substitutions
   19                          }
   20                          */
   21
   22                          /*F*    NAME: JL$HEAD
   23                          */
   24
   25      %MACRO JL$HEAD;
   26      DCL 1 JL$HEAD BASED DALIGNED,
   27            2 CVMPGS UBIN(9) UNAL,            /* # of cvm-ed pages for this prog    */
   28            2 IDN UBIN(27) UNAL,              /* Unique id for this record set      */
   29            2 ID REDEF IDN,
   30              3 N UBIN(9) UNAL,               /* Link count part of idn             */
   31              3 SYSID UBIN(18) UNAL,          /* Sysid part of idn                  */
   32            2 DTS UBIN(36),                   /* Date/time stamp                    */
   33            2 SSR BIT(72),                    /* Saved safe store register          */
   34            2 ASR BIT(72),                    /* Saved argument stack register      */
   35            2 FLG BIT(36),                    /* Saved user flags                   */
   36            2 ASL UBIN(6) UNAL,               /* Associated asl #                   */
   37            2 APR UBIN(12) UNAL,              /* Associated shared processor #      */
14:42 JUL 28 '97 JL_DATA_M.:E05SI                                          2    
   38            2 APO UBIN(12) UNAL,              /* Shared processor overlay #         */
   39            2 LIB UBIN(6) UNAL,               /* Associated shared library #        */
   40            2 ACP UBIN(9) UNAL,               /* Associated command processor       */
   41            2 DB UBIN(9) UNAL,                /* Associated debugger                */
   42            2 LIBPGS UBIN(9) UNAL,            /* # of saved library pgs             */
   43            2 DOLST_RECS UBIN(9) UNAL,
   44            2 APR_UTS UBIN(36),               /* Uts from apr run unit              */
   45            2 LIB_UTS UBIN(36),               /* Uts from library run unit          */
   46            2 DB_UTS UBIN(36),                /* Uts from debugger run unit         */
   47            2 SYSVERS CHAR(4) UNAL,           /* System version                     */
   48            2 DPGS UBIN(9) UNAL,              /* # of pgs (records) of saved data   */
   49            2 PPGS UBIN(9) UNAL,              /* # of pgs of saved procedure        */
   50            2 DDPGS UBIN(9) UNAL,             /* # of saved dynamic data pgs        */
   51            2 ROPGS UBIN(9) UNAL,             /* # of saved roseg pgs               */
   52            2 UDS(0:7) UBIN,                  /* # of words for each user data seg  */
   53            2 ASLDS(0:7) UBIN,                /* # of words for each asl data seg   */
   54            2 DBDS(0:7) UBIN,                 /* # of words for each db data seg    */
   55            2 ASLTCB UBIN(18) UNAL,           /* BOUND of ASL TCB descriptor        */
   56            2 DBTCB UBIN(18) UNAL,            /* BOUND of DB TCB descriptor         */
   57            2 ASLNAME,                        /* ASL name                           */
   58              3 L UBIN(9) UNAL,
   59              3 C CHAR(31) UNAL,
   60            2 APRNAME,                        /* Apr name                           */
   61              3 L UBIN(9) UNAL,
   62              3 C CHAR(31) UNAL,
   63            2 APONAME,                        /* Processor overlay name             */
   64              3 L UBIN(9) UNAL,
   65              3 C CHAR(31) UNAL,
   66            2 LIBNAME,                        /* Shared library name                */
   67              3 L UBIN(9) UNAL,
   68              3 C CHAR(31) UNAL,
   69            2 CPNAME,                         /* Command processor name             */
   70              3 L UBIN(9) UNAL,
   71              3 C CHAR(31) UNAL,
   72            2 DBNAME,                         /* Debugger name                      */
   73              3 L UBIN(9) UNAL,
   74              3 C CHAR(31) UNAL,
14:42 JUL 28 '97 JL_DATA_M.:E05SI                                          3    
   75            2 LMNAME,                         /* Saved name from M$LM dcb           */
   76              3 L UBIN(9) UNAL,
   77              3 C CHAR(31) UNAL,
   78            2 LMACCT CHAR(8) UNAL,            /* Saved account from M$LM dcb        */
   79            2 LMPASS ,                        /* Saved password from M$LM dcb       */
   80              3 C CHAR(8) UNAL,
   81            2 LMPSN CHAR(6) UNAL,             /* PSN from M$LM DCB                  */
   82            2 AMR_SIZE UBIN,
   83                          /*K* AMR_SIZE - UBIN.  Contains the byte size of the assign/merge
   84                          information record.
   85                          */
   86            2 ASYNCH_FLG BIT(36) UNAL,
   87                          /*K* AMR_SIZE - UBIN.  Contains the B$U.ASYNC from  B$USER
   88                          */
   89            2 CLEANUP$ EPTR,                  /* Cleanup routine if JJ_MONLINK      */
   90             %UD$PRMPT (LVL=2,LAST=","); /* DRIBBLE prompt strings, from UD_MACRO_C*/
   91            2 INFO_SIZE UBIN(9) UNAL,
   92            2 TERM_INFO CHAR(496) UNAL; /* 16 less than 512, a power of 2. */
   93      %MEND;
   94
   95
   96                          /*F*   NAME: JL$TRAILER
   97                          */
   98
   99      %MACRO JL$TRAILER;
  100      DCL 1 JL$TRAILER BASED ALIGNED,
  101            2 * UBIN(9) UNAL,
  102            2 IDN UBIN(27) UNAL,          /* Unique record set identifier       */
  103            2 DTS UBIN(36),                   /* Date/time stamp                    */
  104            2 NRECS UBIN(18) UNAL;        /* # of records in set preceding trailer   */
  105      %MEND;
  106
  107
  108                          /*F*   NAME: JL$AMR_BUF
  109
  110                          The JL$AMR_BUF macro defines the structure for the
  111                          buffer that contains the assign/merge records for
14:42 JUL 28 '97 JL_DATA_M.:E05SI                                          4    
  112                          #1, #2, #3 and #4.  These records are read into
  113                          SBUF2 bt the JLU$SAVE_AMR routine.
  114                          */
  115
  116      %MACRO JL$AMR_BUF;
  117      DCL 1 JL$AMR_BUF BASED(B$SBUF2$) DALIGNED,
  118            2 AMR_SIZE UBIN,
  119                          /*K* AMR_SIZE - UBIN.  Contains the byte size of the assign/merge
  120                          information record, including this word.
  121                          */
  122            2 REC(0:3),
  123                          /*K* REC - ARRAY(0:3).  Contains the following:
  124                          */
  125              3 INFO$ PTR,
  126                          /*K* REC.INFO$ - PTR.  Contains the address within SBUF2
  127                          for the assign/merge record.
  128                          */
  129              3 SZ UBIN;
  130                          /*K* REC.SZ - UBIN.  Contains the byte size of the assign/merge
  131                          record at JL$AMR_BUF.REC.INFO$ if JL$AMR_BUF.REC.INFO$ ~= ADDR(NIL).
  132                          If the pointer is NIL, REC.SZ contins a key to indicate
  133                          if the existing record should be deleted; 1 if yes, 0 if no.
  134                          */
  135      %MEND;
  136
  137
  138                          /*F*   NAME: JL_SUBS
  139
  140                          The JL_SUBS macro generates the string substitution
  141                          values for the keys and size of the records in the
  142                          *N file and a user's SAVE file.
  143                          */
  144
  145      %MACRO JL_SUBS;
  146      %SUB   JL_HEADTYPE = 0;
  147      %SUB   JL_JITTYPE = 1;
  148      %SUB   JL_HJITTYPE = 3;
14:42 JUL 28 '97 JL_DATA_M.:E05SI                                          5    
  149      %SUB   JL_ROTYPE = 4;
  150      %SUB   JL_DATATYPE = 5;
  151      %SUB   JL_PROCTYPE = 6;
  152      %SUB   JL_DYNDTYPE = 7;
  153      %SUB   JL_UDS1TYPE = 8;
  154      %SUB   JL_ATCBTYPE = 16;
  155      %SUB   JL_DTCBTYPE = 17;
  156      %SUB   JL_ADS1TYPE = 18;
  157      %SUB   JL_DDS1TYPE = 26;
  158      %SUB   JL_LIBTYPE = 34;
  159      %SUB   JL_PGTBLTYPE = 40;
  160      %SUB   JL_DOLSTTYPE = 50;
  161      %SUB   JL_AMRTYPE=510;
  162      %SUB   JL_TRLRTYPE = 511;
  163
  164      %SUB   JL_HEADSIZE ="SIZEC(JL$HEAD)";
  165      %SUB   JL_TRLRSIZE ="SIZEC(JL$TRAILER)";
  166      %SUB   JL_FULLPAGE = 4096;
  167      %MEND;
  168

