
PL6.E3A0      #001=XBI$POSITION_TO_EOF File=xbi_io_position:6.:XBC3TSI           FRI 01/06/95 11:26 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        XBI$POSITION_TO_EOF: PROC (F) ALTRET;
        7        7           /*I*  NAME: XBI$POSITION_TO_EOF
        8        8                 CALL: CALL XBI$POSITION_TO_EOF (F) ALTRET (..);
        9        9                 INPUT: F file_header;
       10       10                 PURPOSE: Positions stream F to end of file.
       11       11           */
       12       12
       13       13           %INCLUDE CP_6;
       14     5573           %INCLUDE xb_stdio_i6;
       15     5816           %INCLUDE XS_MACRO_C;
       16     5860           %INCLUDE xb_errors_i6;
       17     5931
       18     5932           %File_Header (Name=F, Stclass=" ");
       19     6044
       20     6045           %XSA_PARAM (STCLASS="BASED (F.xsa$)");
       21     6075
       22     6076           %FPT_PFIL (FPTN=PFIL_EOF_CONST, BOF=NO, STCLASS=CONSTANT);
       23     6091           %FPT_PFIL (FPTN=PFIL_EOF, STCLASS=AUTO);
       24     6106
       25     6107           %XSA_ENTRIES;
       26     6111    1      DCL XBI_SET_STREAM_ERRNO         ENTRY (2);
       27     6112    1      DCL XBI$WRITE_BEFORE_POSITIONING ENTRY (1) ALTRET;
       28     6113    1      DCL XBI$READ_AFTER_POSITIONING   ENTRY (1) ALTRET;
       29     6114    1      DCL XB_IO_ERROR                  ENTRY;
       30     6115
       31     6116    2      IF F.is_eof THEN DO;
       32     6117    2         CALL XBI_SET_STREAM_ERRNO (F, ERR$ASSERTION_FAILURE);
       33     6118    2         CALL XB_IO_ERROR;
       34     6119    2      END;
       35     6120
       36     6121    1      F.is_saved_char = '0'B;
       37     6122
PL6.E3A0      #001=XBI$POSITION_TO_EOF File=xbi_io_position:6.:XBC3TSI           FRI 01/06/95 11:26 Page:2    
       38     6123           /* we may already be positioned to the correct record */
       39     6124
       40     6125    2      IF F.record_position >= F.last_record AND NOT F.is_text THEN DO;
       41     6126    2         F.character_position = F.ars;
       42     6127    2         F.is_eof = '1'B;
       43     6128    2         IF F.is_writes_ok AND F.is_reads_ok THEN F.state = %F_dont_care_state;
       44     6129    2         RETURN;
       45     6130    2      END;
       46     6131
       47     6132    1      IF F.is_buffer_modified THEN
       48     6133    1         CALL XBI$WRITE_BEFORE_POSITIONING (F) ALTRET (error_return);
       49     6134
       50     6135    2      IF F.fpt_read.key_ = VECTOR(NIL) THEN DO;
       51     6136    2         PFIL_EOF = PFIL_EOF_CONST;
       52     6137    2         PFIL_EOF.V_ = VECTOR (PFIL_EOF.V);
       53     6138    2         PFIL_EOF.V.DCB# = F.fpt_read.v.dcb#;
       54     6139    2         IF F.xsa$ = ADDR(NIL) THEN
       55     6140    2            CALL M$PFIL (PFIL_EOF)
       56     6141    3               WHENALTRETURN DO;
       57     6142    3                  CALL XBI_SET_STREAM_ERRNO (F);
       58     6143    3                  GOTO error_return;
       59     6144    3               END;
       60     6145    2         ELSE
       61     6146    2            CALL XSA$PFIL (PFIL_EOF, XSA_PARAM)
       62     6147    3               WHENALTRETURN DO;
       63     6148    3                  CALL XBI_SET_STREAM_ERRNO (F, XSA_PARAM.ERR);
       64     6149    3                  GOTO error_return;
       65     6150    3               END;
       66     6151    2         F.is_eof = '1'B;
       67     6152    2         F.record_position = F.last_record + 1;
       68     6153    2         F.character_position = 0;
       69     6154    2         F.continued_ios = 0;
       70     6155    2         F.ars = 0;
       71     6156    2         IF F.is_writes_ok AND F.is_reads_ok THEN F.state = %F_dont_care_state;
       72     6157    2         RETURN;
       73     6158    2      END;
       74     6159
PL6.E3A0      #001=XBI$POSITION_TO_EOF File=xbi_io_position:6.:XBC3TSI           FRI 01/06/95 11:26 Page:3    
       75     6160           /* we've got a binary keyed file */
       76     6161
       77     6162    1      F.record_position = F.last_record - 1;
       78     6163    1      CALL XBI$READ_AFTER_POSITIONING (F) ALTRET (error_return);
       79     6164    1      F.is_eof = '1'B;
       80     6165    1      F.character_position = F.ars;
       81     6166    1      IF F.is_writes_ok AND F.is_reads_ok THEN F.state = %F_dont_care_state;
       82     6167    1      RETURN;
       83     6168
       84     6169    1   error_return:
       85     6170    1      ALTRETURN;
       86     6171    1   END XBI$POSITION_TO_EOF;
       87     6172        %EOD;

PL6.E3A0      #001=XBI$POSITION_TO_EOF File=xbi_io_position:6.:XBC3TSI           FRI 01/06/95 11:26 Page:4    
--  Include file information  --

   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   XS_MACRO_C.:LIB_E04  is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI$POSITION_TO_EOF.

   Procedure XBI$POSITION_TO_EOF requires 129 words for executable code.
   Procedure XBI$POSITION_TO_EOF requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=XBI$POSITION_TO_EOF File=xbi_io_position:6.:XBC3TSI           FRI 01/06/95 11:26 Page:5    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XBI$POSITION_TO_EOF File=xbi_io_position:6.:XBC3TSI           FRI 01/06/95 11:26 Page:6    
          MINI XREF LISTING

ERROR_RETURN
      6170**LABEL    6133--CALLALT  6143--GOTO     6149--GOTO     6163--CALLALT
F
      5933**DCL         6--PROC     6117<>CALL     6133<>CALL     6142<>CALL     6148<>CALL     6163<>CALL
F.ARS
      5955**DCL      6126>>ASSIGN   6155<<ASSIGN   6165>>ASSIGN
F.CHARACTER_POSITION
      5953**DCL      6126<<ASSIGN   6153<<ASSIGN   6165<<ASSIGN
F.CONTINUED_IOS
      5954**DCL      6154<<ASSIGN
F.FPT_READ.KEY_
      5974**DCL      6135>>IF
F.FPT_READ.V.DCB#
      5978**DCL      6138>>ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
      5995**DCL      5996--REDEF
F.FPT_READ.V.INDX#
      5988**DCL      5989--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
      6033**DCL      6034--REDEF
F.IS_BUFFER_MODIFIED
      5937**DCL      6132>>IF
F.IS_EOF
      5935**DCL      6116>>IF       6127<<ASSIGN   6151<<ASSIGN   6164<<ASSIGN
F.IS_READS_OK
      5943**DCL      6128>>IF       6156>>IF       6166>>IF
F.IS_SAVED_CHAR
      5936**DCL      6121<<ASSIGN
F.IS_TEXT
      5934**DCL      6125>>IF
F.IS_WRITES_OK
      5938**DCL      6128>>IF       6156>>IF       6166>>IF
PL6.E3A0      #001=XBI$POSITION_TO_EOF File=xbi_io_position:6.:XBC3TSI           FRI 01/06/95 11:26 Page:7    
F.LAST_RECORD
      5956**DCL      6125>>IF       6152>>ASSIGN   6162>>ASSIGN
F.RECORD_POSITION
      5952**DCL      6125>>IF       6152<<ASSIGN   6162<<ASSIGN
F.STATE
      5960**DCL      6128<<ASSIGN   6156<<ASSIGN   6166<<ASSIGN
F.XSA$
      5959**DCL      6053--IMP-PTR  6139>>IF       6146>>CALL     6148>>CALL
M$PFIL
      5503**DCL-ENT  6140--CALL
PFIL_EOF
      6102**DCL      6136<<ASSIGN   6140<>CALL     6146<>CALL
PFIL_EOF.V
      6102**DCL      6137--ASSIGN
PFIL_EOF.V.DCB#
      6102**DCL      6138<<ASSIGN
PFIL_EOF.V_
      6102**DCL      6137<<ASSIGN
PFIL_EOF_CONST
      6087**DCL      6136>>ASSIGN
PFIL_EOF_CONST.V
      6087**DCL      6087--DCLINIT
XB$ERR$ASSERTION_FAILURE
      5905**DCL      6117<>CALL
XBI$READ_AFTER_POSITIONING
      6113**DCL-ENT  6163--CALL
XBI$WRITE_BEFORE_POSITIONING
      6112**DCL-ENT  6133--CALL
XBI_SET_STREAM_ERRNO
      6111**DCL-ENT  6117--CALL     6142--CALL     6148--CALL
XB_IO_ERROR
      6114**DCL-ENT  6118--CALL
XSA$PFIL
      6109**DCL-ENT  6146--CALL
XSA_PARAM
      6053**DCL      6146<>CALL
PL6.E3A0      #001=XBI$POSITION_TO_EOF File=xbi_io_position:6.:XBC3TSI           FRI 01/06/95 11:26 Page:8    
XSA_PARAM.EOMCHAR#
      6069**DCL      6070--REDEF
XSA_PARAM.ERR
      6057**DCL      6148<>CALL
XSA_PARAM.SIG1
      6063**DCL      6063--REDEF
XSA_PARAM.SIG2
      6063**DCL      6064--REDEF

PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:9    
       88        1        /*T***********************************************************/
       89        2        /*T*                                                         */
       90        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
       91        4        /*T*                                                         */
       92        5        /*T***********************************************************/
       93        6
       94        7
       95        8        XBI$FSETPOS: PROC (F, fileposition) ALTRET;
       96        9           /*I*  NAME: XBI$FSETPOS
       97       10                 PURPOSE: Does the real work for fseek, fsetpos and rewind.
       98       11           */
       99       12
      100       13           %INCLUDE CP_6;
      101     5573           %INCLUDE xb_stdio_i6;
      102     5816           %INCLUDE XS_MACRO_C;
      103     5860           %INCLUDE xb_errors_i6;
      104     5931
      105     5932           %File_Header (Name=F, Stclass=" ");
      106     6044           %fpos_t (Name=fileposition, Stclass=" ");
      107     6049
      108     6050           %XSA_PARAM (STCLASS="BASED (F.xsa$)");
      109     6080           %FPT_PRECORD (FPTN=PRECORD_CONST, STCLASS=CONSTANT);
      110     6101           %FPT_PRECORD (FPTN=PRECORD, STCLASS=AUTO);
      111     6122           %FPT_PFIL (FPTN=REWIND_CONST, BOF=YES, STCLASS=CONSTANT);
      112     6137           %FPT_PFIL (FPTN=REWIND, STCLASS=AUTO);
      113     6152
      114     6153    1      DCL i                            SBIN;
      115     6154    1      DCL chunks                       SBIN;
      116     6155
      117     6156           %XSA_ENTRIES;
      118     6160    1      DCL XBI_SET_STREAM_ERRNO         ENTRY (2);
      119     6161    1      DCL XBI$WRITE_BEFORE_POSITIONING ENTRY (1) ALTRET;
      120     6162    1      DCL XBI$READ_AFTER_POSITIONING   ENTRY (1) ALTRET;
      121     6163    1      DCL XBI$RELEASE_XSA_BUFFERS      ENTRY (1);
      122     6164    1      DCL XBI$READ_NEXT_RECORD         ENTRY (1) ALTRET;
      123     6165
      124     6166    1      F.is_saved_char = '0'B;
PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:10   
      125     6167
      126     6168           /* special case read only stream positioning to BOF */
      127     6169    2      IF fileposition.record_position = 1 AND fileposition.character_position = 0 AND ~
              6169               F.is_writes_ok THEN DO;
      128     6170    2         IF F.is_buffer_modified THEN
      129     6171    2            CALL XBI$WRITE_BEFORE_POSITIONING (F) ALTRET (error_return);
      130     6172    2         REWIND = REWIND_CONST;
      131     6173    2         REWIND.V_ = VECTOR (REWIND.V);
      132     6174    2         REWIND.V.DCB# = F.fpt_read.v.dcb#;
      133     6175    2         IF F.xsa$ = ADDR(NIL) THEN
      134     6176    2            CALL M$PFIL (REWIND)
      135     6177    3               WHENALTRETURN DO;
      136     6178    3                  CALL XBI_SET_STREAM_ERRNO (F);
      137     6179    3                  GOTO error_return;
      138     6180    3               END;
      139     6181    2         ELSE
      140     6182    2            CALL XSA$PFIL (REWIND, XSA_PARAM)
      141     6183    3               WHENALTRETURN DO;
      142     6184    3                  CALL XBI_SET_STREAM_ERRNO (F, XSA_PARAM.ERR);
      143     6185    3                  GOTO error_return;
      144     6186    3               END;
      145     6187    2         F.is_eof = '0'B;
      146     6188    2         F.record_position = 0;
      147     6189    2         F.character_position = 0;
      148     6190    2         F.continued_ios = 0;
      149     6191    2         F.ars = 0;
      150     6192    2         IF F.is_writes_ok AND F.is_reads_ok THEN F.state = %F_dont_care_state;
      151     6193    2         RETURN;
      152     6194    2      END;
      153     6195
      154     6196
      155     6197    1      IF (F.is_buffer_modified) THEN
      156     6198    1         CALL XBI$WRITE_BEFORE_POSITIONING (F) ALTRET (error_return);
      157     6199
      158     6200           /* Are we already positioned to the right record and in the case of
      159     6201              a text stream to the right record chunk?
      160     6202           */
PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:11   
      161     6203
      162     6204    1      IF fileposition.record_position = F.record_position AND
      163     6205    1         (NOT F.is_text OR (fileposition.character_position/F.buffer_size =
      164     6206    1          F.continued_ios))
      165     6207    2      THEN DO;
      166     6208    2         IF F.is_text THEN
      167     6209    2            F.character_position = MOD (fileposition.character_position,
      168     6210    2               F.buffer_size);
      169     6211    2         ELSE
      170     6212    2            F.character_position = fileposition.character_position;
      171     6213    2         IF ~F.is_text AND (F.character_position = F.ars) AND (F.ars < F.buffer_size)
              6213                  THEN
      172     6214    2            F.is_eof = '1'B;
      173     6215    2         ELSE
      174     6216    2            F.is_eof = '0'B;
      175     6217    2         IF F.is_writes_ok AND F.is_reads_ok THEN F.state = %F_dont_care_state;
      176     6218    2         RETURN;
      177     6219    2      END;
      178     6220
      179     6221    1      IF fileposition.record_position > F.last_record AND
      180     6222    1         NOT ((fileposition.record_position = F.last_record+1) AND
      181     6223    2          (fileposition.character_position = 0)) THEN DO;
      182     6224    2         CALL XBI_SET_STREAM_ERRNO (F, ERR$BAD_FILE_POSITIONING);
      183     6225    2         GOTO error_return;
      184     6226    2      END;
      185     6227    2      IF F.fpt_read.key_ = VECTOR (NIL) THEN DO;
      186     6228    2         PRECORD = PRECORD_CONST;
      187     6229    2         PRECORD.V_ = VECTOR (PRECORD.V);
      188     6230    2         PRECORD.V.DCB# = F.fpt_read.v.dcb#;
      189     6231    2         IF F.record_position > F.last_record THEN
      190     6232    2            PRECORD.V.N# = fileposition.record_position - F.record_position;
      191     6233    2         ELSE
      192     6234    2            PRECORD.V.N# = fileposition.record_position - F.record_position - 1;
      193     6235    2         IF F.xsa$ = ADDR(NIL) THEN
      194     6236    2            CALL M$PRECORD (PRECORD)
      195     6237    3               WHENALTRETURN DO;
      196     6238    3                  CALL XBI_SET_STREAM_ERRNO (F);
PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:12   
      197     6239    3                  GOTO error_return;
      198     6240    3               END;
      199     6241    3         ELSE DO;
      200     6242    3            CALL XSA$PRECORD (PRECORD, XSA_PARAM)
      201     6243    4               WHENALTRETURN DO;
      202     6244    4                  CALL XBI_SET_STREAM_ERRNO (F, XSA_PARAM.ERR);
      203     6245    4                  GOTO error_return;
      204     6246    4               END;
      205     6247    3            IF XSA_PARAM.ORG = 0 THEN CALL XBI$RELEASE_XSA_BUFFERS (F);
      206     6248    3         END;
      207     6249    2      END;
      208     6250    1      F.is_eof = '0'B;
      209     6251    1      F.record_position = fileposition.record_position - 1;
      210     6252    1      CALL XBI$READ_AFTER_POSITIONING (F) ALTRET (error_return);
      211     6253
      212     6254    2      IF F.is_text THEN DO;
      213     6255    2         chunks = fileposition.character_position / F.buffer_size;
      214     6256    3         DO i = 1 to chunks;
      215     6257    3            CALL XBI$READ_NEXT_RECORD (F) ALTRET (error_return);
      216     6258    3         END;
      217     6259    2         F.character_position = MOD (fileposition.character_position,
      218     6260    2            F.buffer_size);
      219     6261    1      END; ELSE
      220     6262    1         F.character_position = fileposition.character_position;
      221     6263    1      IF ~F.is_text AND (F.character_position = F.ars) AND (F.ars < F.buffer_size) THEN
      222     6264    1         F.is_eof = '1'B;
      223     6265    1      IF F.is_writes_ok AND F.is_reads_ok THEN F.state = %F_dont_care_state;
      224     6266    1      RETURN;
      225     6267
      226     6268    1   error_return:
      227     6269    1      ALTRETURN;
      228     6270    1   END XBI$FSETPOS;

PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:13   
--  Include file information  --

   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   XS_MACRO_C.:LIB_E04  is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI$FSETPOS.

   Procedure XBI$FSETPOS requires 348 words for executable code.
   Procedure XBI$FSETPOS requires 24 words of local(AUTO) storage.

    No errors detected in file xbi_io_position:6.:XBC3TSI    .

PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:15   
          MINI XREF LISTING

CHUNKS
      6154**DCL      6255<<ASSIGN   6256>>DOINDEX
ERROR_RETURN
      6269**LABEL    6171--CALLALT  6179--GOTO     6185--GOTO     6198--CALLALT  6225--GOTO     6239--GOTO
      6245--GOTO     6252--CALLALT  6257--CALLALT
F
      5933**DCL         8--PROC     6171<>CALL     6178<>CALL     6184<>CALL     6198<>CALL     6224<>CALL
      6238<>CALL     6244<>CALL     6247<>CALL     6252<>CALL     6257<>CALL
F.ARS
      5955**DCL      6191<<ASSIGN   6213>>IF       6213>>IF       6263>>IF       6263>>IF
F.BUFFER_SIZE
      5958**DCL      6204>>IF       6209>>ASSIGN   6213>>IF       6255>>ASSIGN   6259>>ASSIGN   6263>>IF
F.CHARACTER_POSITION
      5953**DCL      6189<<ASSIGN   6209<<ASSIGN   6212<<ASSIGN   6213>>IF       6259<<ASSIGN   6262<<ASSIGN
      6263>>IF
F.CONTINUED_IOS
      5954**DCL      6190<<ASSIGN   6204>>IF
F.FPT_READ.KEY_
      5974**DCL      6227>>IF
F.FPT_READ.V.DCB#
      5978**DCL      6174>>ASSIGN   6230>>ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
      5995**DCL      5996--REDEF
F.FPT_READ.V.INDX#
      5988**DCL      5989--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
      6033**DCL      6034--REDEF
F.IS_BUFFER_MODIFIED
      5937**DCL      6170>>IF       6197>>IF
F.IS_EOF
      5935**DCL      6187<<ASSIGN   6214<<ASSIGN   6216<<ASSIGN   6250<<ASSIGN   6264<<ASSIGN
F.IS_READS_OK
PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:16   
      5943**DCL      6192>>IF       6217>>IF       6265>>IF
F.IS_SAVED_CHAR
      5936**DCL      6166<<ASSIGN
F.IS_TEXT
      5934**DCL      6204>>IF       6208>>IF       6213>>IF       6254>>IF       6263>>IF
F.IS_WRITES_OK
      5938**DCL      6169>>IF       6192>>IF       6217>>IF       6265>>IF
F.LAST_RECORD
      5956**DCL      6221>>IF       6221>>IF       6231>>IF
F.RECORD_POSITION
      5952**DCL      6188<<ASSIGN   6204>>IF       6231>>IF       6232>>ASSIGN   6234>>ASSIGN   6251<<ASSIGN
F.STATE
      5960**DCL      6192<<ASSIGN   6217<<ASSIGN   6265<<ASSIGN
F.XSA$
      5959**DCL      6058--IMP-PTR  6175>>IF       6182>>CALL     6184>>CALL     6235>>IF       6242>>CALL
      6244>>CALL     6247>>IF
FILEPOSITION
      6045**DCL         8--PROC
FILEPOSITION.CHARACTER_POSITION
      6047**DCL      6169>>IF       6204>>IF       6209>>ASSIGN   6212>>ASSIGN   6221>>IF       6255>>ASSIGN
      6259>>ASSIGN   6262>>ASSIGN
FILEPOSITION.RECORD_POSITION
      6046**DCL      6169>>IF       6204>>IF       6221>>IF       6221>>IF       6232>>ASSIGN   6234>>ASSIGN
      6251>>ASSIGN
I
      6153**DCL      6256<<DOINDEX
M$PFIL
      5503**DCL-ENT  6176--CALL
M$PRECORD
      5505**DCL-ENT  6236--CALL
PRECORD
      6112**DCL      6228<<ASSIGN   6236<>CALL     6242<>CALL
PRECORD.V
      6114**DCL      6229--ASSIGN
PRECORD.V.DCB#
      6114**DCL      6230<<ASSIGN
PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:17   
PRECORD.V.N#
      6118**DCL      6232<<ASSIGN   6234<<ASSIGN
PRECORD.V_
      6112**DCL      6229<<ASSIGN
PRECORD_CONST
      6091**DCL      6228>>ASSIGN
PRECORD_CONST.V
      6093**DCL      6091--DCLINIT
REWIND
      6148**DCL      6172<<ASSIGN   6176<>CALL     6182<>CALL
REWIND.V
      6148**DCL      6173--ASSIGN
REWIND.V.DCB#
      6148**DCL      6174<<ASSIGN
REWIND.V_
      6148**DCL      6173<<ASSIGN
REWIND_CONST
      6133**DCL      6172>>ASSIGN
REWIND_CONST.V
      6133**DCL      6133--DCLINIT
XB$ERR$BAD_FILE_POSITIONING
      5915**DCL      6224<>CALL
XBI$READ_AFTER_POSITIONING
      6162**DCL-ENT  6252--CALL
XBI$READ_NEXT_RECORD
      6164**DCL-ENT  6257--CALL
XBI$RELEASE_XSA_BUFFERS
      6163**DCL-ENT  6247--CALL
XBI$WRITE_BEFORE_POSITIONING
      6161**DCL-ENT  6171--CALL     6198--CALL
XBI_SET_STREAM_ERRNO
      6160**DCL-ENT  6178--CALL     6184--CALL     6224--CALL     6238--CALL     6244--CALL
XSA$PFIL
      6158**DCL-ENT  6182--CALL
XSA$PRECORD
      6157**DCL-ENT  6242--CALL
PL6.E3A0      #002=XBI$FSETPOS File=xbi_io_position:6.:XBC3TSI                   FRI 01/06/95 11:26 Page:18   
XSA_PARAM
      6058**DCL      6182<>CALL     6242<>CALL
XSA_PARAM.EOMCHAR#
      6074**DCL      6075--REDEF
XSA_PARAM.ERR
      6062**DCL      6184<>CALL     6244<>CALL
XSA_PARAM.ORG
      6073**DCL      6247>>IF
XSA_PARAM.SIG1
      6068**DCL      6068--REDEF
XSA_PARAM.SIG2
      6068**DCL      6069--REDEF
