
     DIRECTORY AND SEGMENT LIST  (OBJECT UNIT NAME '')

      * SYMDEF *        GLOBAL NAME               SEGMENT  OFFSET      ACCESS ATTRIBUTES
     1  X9DD   'X9DD'                              .X9DD       1          R  W  E  L  U

      * SYMREF *        GLOBAL NAME                                    ACCESS ATTRIBUTES
     2  X8ER   'X8ER$ERROR'                                               R  W  E  L  U
     3  X9DI   'X9DI'                                                     R  W  E  L  U

      * SECTION *          SIZE          KIND
     4  .X9DD              1230           CODE
     5  .X9DD.              150           DATA


     PROGRAM BREAK        1400

                                      1 *M*
                                      2 *T***********************************************************
                                      3 *T*                                                         *
                                      4 *T* COPYRIGHT (C) BULL HN INFORMATION SYSTEMS INC., 1997    *
                                      5 *T*                                                         *
                                      6 *T***********************************************************
                                      7 *P*
                                      8 *P*
                                      9 *P*     NAME       : X9DD
                                     10 *P*
                                     11 *P*     PURPOSE    : TO COMPUTE THE EXPRESSION :: A ** B :: WHERE,
                                     12 *P*                  A IS DECIMAL, AND B IS DECIMAL OR INTEGER.
                                     13 *P*
                                     14 *P*
                                     15 *D*
                                     16 *D*
                                     17 *D*     NAME       : X9DD
                                     18 *D*
                                     19 *D*     CALL       :   . . .
                                     20 *D*                  EPPRN   LOP
                                     21 *D*                  STPN    ARGLST
                                     22 *D*                  EPPRN   ROP
                                     23 *D*                  STPN    ARGLST+1
                                     24 *D*                  EPPRN   RESULT
                                     25 *D*                  STPN    ARGLST+2
                                     26 *D*                  EPPRN   DESCRP
                                     27 *D*                  STPN    ARGLST+3
                                     28 *D*                  EPPR1   NUMARG
                                     29 *D*                  EPPR0   ARGLST
                                     30 *D*                  TSX1    X9DD
                                     31 *D*                  NOP     0,DL
                                     32 *D*                    . . .
                                     33 *D*           ARGLST BSS     4
                                     34 *D*           DESCRP BSS     3
                                     35 *D*           NUMARG VFD     18/2,18/0
                                     36 *D*                    . . .
                                     37 *D*

                                     38 *D*     INTERFACE  : 1.) X8ER - THE ERROR OUTPUT ROUTINE.
                                     39 *D*                  2.) X9DI - PERFORMS EXPONENTIATION WHEN "B" IS
                                     40 *D*                      INTEGER AND NOT TWO.
                                     41 *D*
                                     42 *D*     INPUT      : 1.) POINTER TO THE LOP
                                     43 *D*                  2.) POINTER TO THE ROP
                                     44 *D*                  3.) POINTER TO THE RESULT
                                     45 *D*                  4.) POINTER TO THE DESCRIPTOR LIST
                                     46 *D*                                                ----
                                     47 *D*     OUTPUT     : NONE
                                     48 *D*
                                     49 *D*     SCRATCH    : NONE
                                     50 *D*
                                     51 *D*     REFERENCE  : X8LC$DOCUMENT, COBOL-74 - MODULE K658 DECIMAL
                                     52 *D*                  EXPONENTIATION MODIFIED FOR OUR PURPOSES.
                                     53 *D*
                                     54 *D*
                        000000       55        SECT    .X9DD,CODE
                        000000       56        ENTREF  (X8ER,X8ER$ERROR)
                        000000       57        ENTREF  X9DI
                                     58 *
                                     59 *****DESCRIPTOR BLOCK****
                                     60 *V*
                                     61 *V*
                                     62 *V*                    NOTE_ON_DESCRIPTORS
                                     63 *V*
                                     64 *V*              BASE DESCRIPTOR
                                     65 *V*              EXPONENT DESCRIPTOR
                                     66 *V*              ANSWER DESCRIPTOR
                                     67 *V*
                                     68 *V*              ****** NOTE******  THE DESCRIPTORS ARE PRESUMED TO BE
                                     69 *V*              COMPLETE -- I.E., USE NO REGISTER MODIFICATION FOR
                                     70 *V*              EITHER ADDRESSING OR OPERAND LENGTH.
                                     71 *V*
                                     72 *V*
                                     73 *
                                     74 *V*

                                     75 *V*
                                     76 *V*                    GENERAL_ALGORITHM
                                     77 *V*
                                     78 *V*     1. FOR INTEGRAL EXPONENTS LESS THAN A SET LIMIT
                                     79 *V*             ITERATIVE MULTIPLY LOOP
                                     80 *V*             FOR NEGATIVE EXPONENTS - DIVIDE RESULT INTO
                                     81 *V*                 ONE BEFORE EXITING
                                     82 *V*     2. FOR LARGER AND NON-INTEGRAL EXPONENTS
                                     83 *V*              SINCE  X = A ** B
                                     84 *V*               THEN  X = EXP(LOG A ** B)
                                     85 *V*                 OR   X = EXP (B ** LOG A)
                                     86 *V*            THEREFORE, A 3-STEP PROCEDURE IS USED
                                     87 *V*                A.  FIND LOGARITHM (BASE 10 ) OF THE BASE IN.
                                     88 *V*                B.   MULTIPLY EXPONENT-IN TIMES ABOVE RESULT
                                     89 *V*                C.   FIND EXPONENT OF STEP 2-B.

                                     91 *
                                     92 *      DEFINITION OF ALL INDEX REGISTERS
                                     93 *
                                     94 *XREG  MACRO
                        000001       95 AR     BOOL    1
                        000001       96 .IND   EQU     1
                        000001       97 RL     BOOL    1
                        000001       98 .RND   EQU     1
                        000010       99 X0     BOOL    10
                        000011      100 X1     BOOL    11
                        000012      101 X2     BOOL    12
                        000013      102 X3     BOOL    13
                        000014      103 X4     BOOL    14
                        000015      104 X5     BOOL    15
                        000016      105 X6     BOOL    16
                        000017      106 X7     BOOL    17
                                    107 *      ENDM    XREG
                        000000      108 LSF    BOOL    0
                        000001      109 LSS    BOOL    1
                        000002      110 TSS    BOOL    2
                        000003      111 NS     BOOL    3

                                    114 *      BASE POST
      000000 070200050011           115        BCI     1,720509
                                    116 *      GENERAL ENTRY
                        000001      117        ENTDEF  X9DD
                        000001      118 X9DD   NULL    COBOL-80 ENTRY POINT
      000001 000010 7530 00 010NN   119        SREG    .REG.
      000002 000031 4574 00 010NN   120        STP7    PR7           SAVE POINTER 7
      000003 000032 4564 00 010NN   121        STP6    PR6           SAVE POINTER 6
      000004 000033 4554 00 010NN   122        STP5    PR5           SAVE POINTER 5
      000005 000034 4544 00 010NN   123        STP4    PR4           SAVE POINTER 4
      000006 000000 4775 00         124        LDP7    0,,0          POINTER TO LOP(BASE)
      000007 000001 4765 00         125        LDP6    1,,0          POINTER TO ROP(EXP)
      000010 000002 4755 00         126        LDP5    2,,0          POINTER TO RESULT
      000011 000003 2201 00         127        LDX0    3,,0          POINTER TO DESCRIPTER BLOCK
      000012 000000 2350 10         128        LDA     0,X0            MOVE BASE DESCRIPTOR
      000013 077777 3750 07         129        ANA     =O077777,DL         ZERO THE UPPER HALF OF THE WORD
      000014 700000 2750 03         130        ORA     =O700000,DU   BASE DESC = PR7
      000015 000021 7550 00 010NN   131        STA     BASDES          TO INTERNAL STORAGE
      000016 000001 2350 10         132        LDA     1,X0            MOVE EXPONENT DESCRIPTOR
      000017 077777 3750 07         133        ANA     =O077777,DL         ZERO THE UPPER HALF OF THE WORD
      000020 600000 2750 03         134        ORA     =O600000,DU   EXPONENT = PR6
      000021 000020 7550 00 010NN   135        STA     EXPDES          TO INTERNAL STORAGE
      000022 000002 2350 10         136        LDA     2,X0            MOVE ANSWER DESCRIPTOR
      000023 077777 3750 07         137        ANA     =O077777,DL         ZERO THE UPPER HALF OF THE WORD
      000024 500000 2750 03         138        ORA     =O500000,DU    ANSWER = PR5
      000025 000022 7550 00 010NN   139        STA     ANSDES          TO INTERNAL STORAGE
                                    140 *      GENERAL PARAMETER FILTER
                                    141 *      A=0,B>0 THEN ANSDES = 0
                                    142 *      A=0,B=0,B<0 THEN ABORT
                                    143 *V*
                                    144 *V*
                                    145 *V*                    GENERAL_PARAMETER_FILTER
                                    146 *V*
                                    147 *V*     IF THE FOLLOWING CONDITIONS EXIST THEN THE SPECIAL ANSWERS
                                    148 *V*     ARE GENERATED :
                                    149 *V*
                                    150 *V*           THE EQUATION C = A ** B

                                    151 *V*
                                    152 *V*                1.) IF A = 0, B > 0 THEN
                                    153 *V*                      THE ANSWER = 0
                                    154 *V*                2.) IF A = 0, B <= 0 THEN
                                    155 *V*                      ABORT
                                    156 *V*                3.) IF A 0= 0, B = 0 THEN
                                    157 *V*                      THE ANSWER = 1
                                    158 *V*                4.) IF A 0= 0, B 0= 0 THEN
                                    159 *V*                      IF A = 1 THEN
                                    160 *V*                        THE ANSWER = 1
                                    161 *V*                      IF B = 1 THEN
                                    162 *V*                        THE ANSWER = A
                                    163 *V*                5.) IF A IS DECIMAL AND B IS INTEGER THEN
                                    164 *V*                      IF B 0= 2 THEN
                                    165 *V*                        CALL X9DI
                                    166 *V*                ELSE COMPUTE NORMALLY.
                                    167 *V*
                                    168 *V*
                                    169 *      A NEQ 0,B=0 THEN ANSDES = 1
                                    170 *      A NEQ 0,B NEQ 0 THEN IF A = 1 ANSDES = 1
                                    171 *                           IF B = 1 ANDES = A
                                    172 *                           ELSE COMPUTE.
                                    173 *
                                    174 *
      000026 000061 4500 00 010NN   175        STZ     NEGSW           CLEAR NEG. BASE INDICATOR
      000027 000002 7540 00 010NN   176        STI     SAVEI           SET OVERFLOW MASK ON
      000030 004000 2350 07         177        LDA     =O4000,DL
      000031 000002 2550 00 010NN   178        ORSA    SAVEI
      000032 000002 6340 00 010NN   179        LDI     SAVEI
      000033 000120 3034 00         180        CMPN    (0,0,0),(1,0,1)     COMPARE
      000034 000742 0700 01 010NN   181        NDSC4   CONST,0,1,NS    ZERO
      000035 000021 000000  010NN   182        ZERO    BASDES          TO BASE VALUE.
      000036 000072 6010 00 010NN   183        TNZ     T1              BASE NEQ ZERO.
      000037 000120 3034 00         184        CMPN    (0,0,0),(1,0,1)     COMPARE
      000040 000742 0700 01 010NN   185        NDSC4   CONST,0,1,NS    ZERO
      000041 000020 000000  010NN   186        ZERO    EXPDES          TO VALUE OF EXPONENT.
      000042 000061 6054 00 010NN   187        TPNZ    OK              B > 0 IS VALID, GIVES ZERO.

      000043 000051 6000 00 010NN   188        TZE     ZEZ
      000044 000726 6304 00 010NN   189        EPPR0   PTRBK1          NEGATIVE EXPONENT
      000045 000730 6314 00 010NN   190        EPPR1   NUMARG
      000046 000000 7010 00 020NN   191        TSX1    X8ER            ERROR MESSAGE ROUTINE
      000047 000000 0110 07         192        NOP     0,DL
      000050 000061 7100 00 010NN   193        TRA     OK
                                    194
                        000051      195 ZEZ    NULL                    0 ** 0 = 1
      000051 000120 3004 00         196        MVN     (0,0,0),(1,0,1)
      000052 000742 1700 01 010NN   197        NDSC4   CONST,1,1,NS
      000053 000022 000000  010NN   198        ZERO    ANSDES
      000054 000231 7100 00 010NN   199        TRA     EXIT
                                    200
                                    201
                        000055      202 ERR1   NULL
      000055 000727 6304 00 010NN   203        EPPR0   PTRBK2          NEGATIVE BASE ** FRACTIONAL EXP
      000056 000730 6314 00 010NN   204        EPPR1   NUMARG
      000057 000000 7010 00 020NN   205        TSX1    X8ER            ERROR MESSAGE ROUTINE
      000060 000000 0110 07         206        NOP     0,DL
                                    207 *
                                    208 *      *       0**B = 0
                                    209 *
      000061 000120 3004 00         210 OK     MVN     (0,0,0),(1,0,1)     MOVE NUMERIC
      000062 000742 0700 01 010NN   211        NDSC4   CONST,0,1,NS    ZERO
      000063 000022 000000  010NN   212        ZERO    ANSDES          TO EXTERNAL ANSWER.
      000064 000001 7540 00 010NN   213        STI     ONSIZE          SETS THE
      000065 040000 2350 07         214        LDA     =O040000,DL       OVERFLOW
      000066 000001 2550 00 010NN   215        ORSA    ONSIZE          BIT FOR ALL
      000067 000001 7550 00 010NN   216        STA     ONSIZE          ERRORS
      000070 000001 6340 00 010NN   217        LDI     ONSIZE
      000071 000231 7100 00 010NN   218        TRA     EXIT            EXIT.
                                    219 *

      000072 000051 4500 00 010NN   221 T1     STZ     RECIP           CLEAR RECIPROCAL SWITCH.
                                    222 *      BASE IS NON-ZERO
      000073 000120 3034 00         223        CMPN  (0,0,0),(1,0,1)     COMPARE
      000074 000742 1700 01 010NN   224        NDSC4   CONST,1,1,NS    COMPARE ONE
      000075 000021 000000  010NN   225        ZERO    BASDES          TO BASE
      000076 000116 6000 00 010NN   226        TZE     T2              1**A = 1
      000077 000120 3034 00         227        CMPN    (0,0,0),(1,0,1)     COMPARE
      000100 000742 0700 01 010NN   228        NDSC4   CONST,0,1,NS    ZERO
      000101 000020 000000  010NN   229        ZERO    EXPDES          TO VALUE OF EXPONENT.
      000102 000122 6054 00 010NN   230        TPNZ    T3              B > 0 GOTO PLUS ONE TEST.
      000103 000116 6000 00 010NN   231        TZE     T2              B = 0 GOTO ANSWER = 1.
      000104 000051 0540 00 010NN   232        AOS     RECIP           B < 0 , SET RECIPROCAL SWITCH.
      000105 000120 3034 00         233        CMPN    (0,0,0),(1,0,1)     COMPARE
      000106 000742 1600 02 010NN   234        NDSC4   CONST,1,2,TSS   MINUS ONE
      000107 000020 000000  010NN   235        ZERO    EXPDES          TO VALUE OF EXPONENT.
      000110 000132 6010 00 010NN   236        TNZ     T4              B NEQ -1 GO TO FRACTIONAL TEST.
                                    237 *
                                    238 *              A**(-1) = 1/A
                                    239 *
      000111 120000 2275 20         240        DV3D    (1,0,1),(0,0,0),(1,0,1)    ELSE DIVIDE
      000112 000021 000000  010NN   241        ZERO    BASDES          BASE
      000113 000742 1700 01 010NN   242        NDSC4   CONST,1,1,NS    INTO ONE
      000114 000022 000000  010NN   243        ZERO    ANSDES          GIVING ANSWER.
      000115 000231 7100 00 010NN   244        TRA     EXIT            EXIT.
                                    245 *
                                    246 *
                                    247 *
                                    248 *              A**0 = 1  AND 1**B = 1
                                    249 *
      000116 000120 3004 00         250 T2     MVN     (0,0,0),(1,0,1)      MOVE NUMERIC
      000117 000742 1700 01 010NN   251        NDSC4   CONST,1,1,NS    PLUS ONE
      000120 000022 000000  010NN   252        ZERO    ANSDES          TO ANSWER.
      000121 000231 7100 00 010NN   253        TRA     EXIT            EXIT.
                                    254 *
                                    255 *      B > 0
                                    256 *
      000122 000120 3034 00         257 T3     CMPN    (0,0,0),(1,0,1)     00001290

      000123 000742 1700 01 010NN   258        NDSC4   CONST,1,1,NS    COMPARE PLUS ONE
      000124 000020 000000  010NN   259        ZERO    EXPDES          TO EXPONENT.
      000125 000132 6010 00 010NN   260        TNZ     T4              B NEQ +1 GOTO FRACTIONAL TEST.
                                    261 *
                                    262 *              A**1 = A
                                    263 *
      000126 000120 3005 20         264        MVN     (1,0,1),(1,0,1)    ELSE  MOVE
      000127 000021 000000  010NN   265        ZERO    BASDES          BASE
      000130 000022 000000  010NN   266        ZERO    ANSDES          TO ANSWER.
      000131 000231 7100 00 010NN   267        TRA     EXIT            EXIT.
                                    268 *
                                    269 *      TEST FOR INTEGRAL EXPONENT
                                    270 *
      000132 000000 3005 20         271 T4     MVN     (1,0,1),(0,0,0)    MOVE
      000133 000020 000000  010NN   272        ZERO    EXPDES          EXPONENT VALUE
      000134 000043 0600 30 010NN   273        NDSC4   TEMP,0,24,TSS   SIGNED INTEGER COUNT.
      000135 000120 3034 00         274        CMPN    (0,0,0),(1,0,1)    COMPARE
      000136 000043 0600 30 010NN   275        NDSC4   TEMP,0,24,TSS   INTEGER COUNTER
      000137 000020 000000  010NN   276        ZERO    EXPDES          TO EXTERNAL EXPONENT.
      000140 000177 6010 00 010NN   277        TNZ     LONG            EXPAND FOR NON-INTEGER.
      000141 000000 3034 00         278        CMPN                    COMPARE
      000142 000043 0700 27 010NN   279        NDSC4   TEMP,0,23,NS  ABSOLUTE VALUE
      000143 001002 0300 04 010NN   280        NDSC9   LIMIT,0,4,NS  TO EXPANSION LIMITS
      000144 000261 6040 00 010NN   281        TMI     LOG10            EXPONENT IS GREATER THAN 100

                                    283 *      NOW COMPUTE X = A ** B BY ITERATIVE MULTIPLICATION.DE
                                    284 *V*
                                    285 *V*
                                    286 *V*                    CALL_SQUARES_ALGORITHM
                                    287 *V*
      000145 000000 3054 00         288        DTB                     CONVERT EXPONENT TO BINARY COUNTER
      000146 000045 0700 07 010NN   289        NDSC4   TEMP+2,0,7,NS
      000147 000071 0000 04 010NN   290        NDSC9   CONST1,0,4
      000150 000071 2350 00 010NN   291        LDA     CONST1          PUT COUNTER INTO A-REG
      000151 000002 1150 07         292        CMPA    =2,DL          IS EXPONENT A 2 (SQUARE)
      000152 000172 6000 00 010NN   293        TZE     NOTDON         YES, SQUARE FOR ANSWER
      000153 000023 4574 00 010NN   294        STP7    NEWARG
      000154 000071 6344 00 010NN   295        EPPR4   CONST1
      000155 000024 4544 00 010NN   296        STP4    NEWARG+1
      000156 000035 6344 00 010NN   297        EPPR4   SUM
      000157 000025 4544 00 010NN   298        STP4    NEWARG+2
      000160 000027 6344 00 010NN   299        EPPR4   DSCLST
      000161 000026 4544 00 010NN   300        STP4    NEWARG+3
      000162 000021 2350 00 010NN   301        LDA     BASDES
      000163 000027 7550 00 010NN   302        STA     DSCLST
      000164 000744 2350 00 010NN   303        LDA     SUMDES
      000165 000030 7550 00 010NN   304        STA     DSCLST+1
      000166 000023 6304 00 010NN   305        EPPR0   NEWARG
      000167 000000 7010 00 020NN   306        TSX1    X9DI
      000170 000000 0110 07         307        NOP     0,DL
      000171 000204 7100 00 010NN   308        TRA     DONE
                                    309 *
                        000172      310 NOTDON NULL
                                    311 *
      000172 000120 2265 20         312        MP3D    (1,0,1),(1,0,1),(0,0,0)     MULTIPLY
      000173 000021 000000  010NN   313        ZERO    BASDES          BASE
      000174 000021 000000  010NN   314        ZERO    BASDES          TIMES BASE
      000175 000035 0400 25 010NN   315        NDSC4   SUM,0,21,LSF    GIVING RUNNING PRODUCT.
      000176 000204 7100 00 010NN   316        TRA     DONE            IF X = A ** 2 GOTO DONE.
                                    317 *

                                    319 *      AT THIS POINT THE EXPONENT IS PRESUMED TO BE NON-INTEGRAL
                        000177      320 LONG   EQU     *               TEST FOR A<0
      000177 000120 3034 00         321        CMPN    (0,0,0),(1,0,1)    COMPARE
      000200 000742 0700 01 010NN   322        NDSC4   CONST,0,1,NS    ZERO
      000201 000021 000000  010NN   323        ZERO    BASDES          TO BASE VALUE.
      000202 000055 6040 00 010NN   324        TMI     ERR1            IF A < 0 GOTO ERROR ABORT.
      000203 000261 7100 00 010NN   325        TRA     LOG10           ***NOW GET LOGARITHM OF A
                        000204      326 DONE   NULL
                        000204      327 REC    NULL
      000204 000051 2340 00 010NN   328        SZN     RECIP
      000205 000212 6000 00 010NN   329        TZE     EXITC           Y WAS POSITIVE
                                    330 ***   DIVIDE IF ABSOLUTE VALUE OF EXPONENT WAS LESS THAN "LIMIT"***
      000206 000000 2274 00         331        DV3D    (0,0,0),(0,0,0),(0,0,0)
      000207 000035 0400 25 010NN   332        NDSC4   SUM,0,21,LSF  DIVIDE SUM
      000210 000742 1700 01 010NN   333        NDSC4   CONST,1,1,NS     INTO ONE GIVING
      000211 000035 0400 25 010NN   334        NDSC4   SUM,0,21,LSF    SUM
                        000212      335 EXITC  NULL
      000212 000061 2340 00 010NN   336        SZN     NEGSW
      000213 000226 6000 00 010NN   337        TZE     EXITD           ***BASE WAS NEGATIVE
                                    338 ***   CHECK FOR (-X) ** (ODD INTEGER)  ***
      000214 000000 3005 20         339        MVN     (1,0,1),(0,0,0)    MOVE
      000215 000020 0000 00 010NN   340        ARG     EXPDES
      000216 000114 0500 25 010NN   341        NDSC4   .DTMP3,0,21,1,0
      000217 000000 3004 00         342        MVN
      000220 000116 4700 01 010NN   343        NDSC4   .DTMP3+2,4,1,NS
      000221 000060 5700 01 010NN   344        NDSC4   .UNITS,5,1,NS
      000222 000060 2350 00 010NN   345        LDA     .UNITS
      000223 001000 3150 07         346        CANA    =O001000,DL
      000224 000226 6000 00 010NN   347        TZE     EXITD           Y IS AN EVEN NUMBER
      000225 000244 7100 00 010NN   348        TRA     NEGATE
                        000226      349 EXITD  NULL
      000226 000320 3004 00         350        MVN     (0,0,0),(1,0,1),1  MOVE ROUNDED
      000227 000035 0400 25 010NN   351        NDSC4   SUM,0,21,LSF    SUM
      000230 000022 000000  010NN   352        ZERO    ANSDES          TO EXTERNAL ANSWER.
                        000231      353 EXIT   NULL                    COMMON EXIT
      000231 000031 4774 00 010NN   354        LDP7    PR7
      000232 000032 4764 00 010NN   355        LDP6    PR6

      000233 000033 4754 00 010NN   356        LDP5    PR5
      000234 000034 4744 00 010NN   357        LDP4    PR4
      000235 000010 0730 00 010NN   358        LREG    .REG.
      000236 000000 4500 00 010NN   359        STZ     BENTRY
      000237 000001 7100 11         360        TRA     1,X1            RETURN
                        000240      361 EXITA  NULL
      000240 000200 3004 00         362        MVN     (0,0,0),(0,0,0),1 ROUNDED
      000241 000750 0350 31 010NN   363        NDSC9   E,0,25,NS,-24   MOVE E
      000242 000035 0400 25 010NN   364        NDSC4   SUM,0,21,LSF    TO SUM
      000243 000204 7100 00 010NN   365        TRA     REC             GO TO CHECK RECIP
                                    366 *
                                    367 ****** (-X) ** (ODD INTEGER) = NEGATIVE RESULT
      000244 120200 2234 00         368 NEGATE SB3D    ,,(1,0,1),.RND
      000245 000035 0400 25 010NN   369        NDSC4   SUM,0,21,LSF
      000246 000742 0700 01 010NN   370        NDSC4   CONST,0,1,NS
      000247 000022 0000 00 010NN   371        ARG     ANSDES
      000250 000231 7100 00 010NN   372        TRA     EXIT
      000251 000120 3004 00         373 OVFL   MVN     (0,0,0),(1,0,1)
      000252 000766 0741 77 010NN   374        NDSC4   OVFL9,0,63,NS,-31   MOVE MAX 9 TO ANSWER
      000253 000022 000000  010NN   375        ZERO    ANSDES
      000254 000001 7540 00 010NN   376        STI     ONSIZE
      000255 040000 2350 07         377        LDA     =O040000,DL  SET OVERFLOW
      000256 000001 2550 00 010NN   378        ORSA    ONSIZE          BIT FOR AN
      000257 000001 6340 00 010NN   379        LDI     ONSIZE          OVERFLOW
      000260 000231 7100 00 010NN   380        TRA     EXIT            EXIT.

                                    382 *DESCRIPTION - FINDS THE LOGARITHM TO  THE  BASE   10
                                    383 *        OF THE DECIMAL STRING FOR WHICH
                                    384 *     BASDES IS THE EIS DESCRIPTOR.
                                    385 *
                                    386 *
                                    387 *RESULTS - IN PRINCIPLE THE  ANSWER  SHOULD  BE  ACCURATE  TO
                                    388 *     WITHIN ONE DIGIT OF THE MAXIMUM ACCURACY (20.6 DIGITS).
                                    389 *
                                    390 *
                                    391 *METHOD - THE FOLLOWING PROCEDURES ARE USED IN COMPUTING  THE
                                    392 *     LOGARITHM TO THE REQUIRED BASE--
                                    393 *
                                    394 *     1.  COPY  INPUT ARGUMENT INTO  .DRRX
                                    395 *
                                    396 *     2. NOW HANDLE THE EXPONENT OF  .DRRX  IN  THE  FOLLOWING
                                    397 *     MANNER--
                                    398 *
                                    399 *         A. PULL OUT THE EXPONENT INTO .EEXP AND SIGN EXTEND.
                                    400 *
                                    401 *         B. SET .DTMP1 = THE NO. OF SIGNIF. DIGITS(X1) - 3;
                                    402 *
                                    403 *         C. SET .DTMP1 = -(.DTMP1 + .EEXP);
                                    404 *
                                    405 *         D. SET .DEXP = .EEXP - .5;
                                    406 *
                                    407 *         E.   STUFF   .DEXP   BACK  INTO  .DRES  AS  THE  NEW
                                    408 *         EXPONENT(HOWEVER,THIS OCCURS AFTER STEP 4 AFTER  FINAL
                                    409 *         .DRES IS COMPUTED).
                                    410 *
                                    411 *
                                    412 *     3.  CALCULATE  .DRES  USING  THE  FOLLOWING POLYNOMIAL
                                    413 *     EQUATION. THE CONSTANT COEFFICIENTS USED  ARE  TAKEN  FROM
                                    414 *     HART 2330--
                                    415 *
                                    416 *         .DRES = (Z * P(X)) / Q(X)
                                    417 *
                                    418 *

                                    419 *         WHERE--
                                    420 *                 Z = (.DRRX - 1) / (.DRRX + 1)
                                    421 *
                                    422 *                 X = Z**2
                                    423 *
                                    424 *
                                    425 *         P(X) = P00 + X * (P01 + X * (P02 ... + X * P05))))
                                    426 *
                                    427 *
                                    428 *         Q(X) = Q00 + X * (Q01 + X * (Q02 ... + X * Q06)))))
                                    429 *
                                    430 *
                                    431 *     4.  NOW   CALCULATE THE DESIRED LOGARITHMIC FUNCTION TO
                                    432 *       THE BASE TEN.
                                    433 *
                                    434 *
                                    435 **********************************************************************
                                    436 *      THIS ROUTINE CALCULATES THE LOG(10)
                                    437 *      OF A NUMBER
                                    438 *
                                    439 *      THE FOLLOWING FORMULA IS USED TO CALCULATE THE .DRES
                                    440 *      LOG10(X) = Z*P(Z**2)/Q(Z**2), WHERE Z = (X-1)/(X+1);
                                    441 *
                        000261      442 LOG10  NULL
      000261 000000 6260 11         443        EAX6    0,X1            MOVE FLAG TO X6
      000262 000034 2210 03         444        LDX1    28,DU           SET MAXIMUM PRECISION
                                    445 *
                        000263      446 .PLOG. NULL                    LOG ENTRY FOR .DEXP(X)
      000263 000051 4500 00 010NN   447        STZ     RECIP           DO NOT DIVIDE INTO 1 AT END
      000264 000061 4500 00 010NN   448        STZ     NEGSW           RESET NEGATE SW
      000265 000240 3005 20         449        MVN     (1,,.IND),(,RL),.RND  COPY ARG INTO .DRR1
      000266 000021 0000 00 010NN   450        ARG     BASDES
      000267 000100 0400 11 010NN   451 LABRRX NDSC4   .DRRX,0,X1,LSF
                                    452 *
                                    453 *
      000270 000272 6040 00 010NN   454        TMI     NEG30           XFER TO ABSOLUTE VALUE FOR LOG(X < 0)
      000271 000277 7100 00 010NN   455        TRA     LOG30

                        000272      456 NEG30  NULL
      000272 040200 2235 20         457        SB3D    (1,0,1),(0,0,0),(,RL),.RND
      000273 000021 0000 00 010NN   458        ARG     BASDES
      000274 000742 0700 01 010NN   459        NDSC4   CONST,0,1,NS   NEGATE
      000275 000100 0400 11 010NN   460        NDSC4   .DRRX,0,X1,LSF    BASE
      000276 000061 0540 00 010NN   461        AOS     NEGSW           INDICATE BASE IS NEGATIVE
                                    462 *
                        000277      463 LOG30  NULL
      000277 000240 2064 00         464        MP2D    ,(,RL),.RND     NORMALIZE .DRRX
      000300 001003 0400 77 010NN   465        NDSC4   .LONG1,0,63,LSF
      000301 000100 0400 11 010NN   466        NDSC4   .DRRX,0,X1,LSF
      000302 000126 4500 00 010NN   467        STZ     .EEXP           INITIALIZE TO ZERO
                                    468 *
      000303 000000 1014 11         469        MRL     (,,,X1),,0      PULL OUT EXPONENT INTO .EEXP
      000304 000077 6400 02 010NN   470        ADSC4   .DRRX-1,6,2
      000305 000126 6400 02 010NN   471        ADSC4   .EEXP,6,2
                                    472 *
      000306 000126 2350 00 010NN   473        LDA     .EEXP           LOAD A-REG WITH EXPONENT
      000307 000034 7350 00         474        ALS     28              SIGN EXTEND EXPONENT
      000310 000012 7310 00         475        ARS     10              RIGHT JUSTIFY .EEXP
      000311 000126 7550 00 010NN   476        STA     .EEXP           SAVE .EEXP FOR LATER USE
                                    477 *
      000312 777775 6350 11         478        EAA     -3,X1           LOAD A-REG WITH (X1 - 3)
      000313 000126 0550 00 010NN   479        ASA     .EEXP           ADD .EEXP TO A-REG
      000314 000000 5310 00         480        NEG                     NEGATE; NOW A-REG = -((X1 - 3) + .EEXP)
      000315 000377 3750 03         481        ANA     =O377,DU
      000316 000104 7550 00 010NN   482        STA     .DTMP1          SAVE A-REG INTO .DTMP1
                                    483 *
      000317 000125 4500 00 010NN   484        STZ     .DEXP           STORE ZEROES INTO EXPONENT
                                    485 *
      000320 000000 3014 00         486        BTD                     CONVERT BINARY .EEXP TO DECIMAL .DEXP
      000321 000126 2000 01 010NN   487        NDSC9   .EEXP,1,1
      000322 000125 0500 07 010NN   488        NDSC4   .DEXP,0,7,LSS,0
                                    489 *
      000323 000000 2034 00         490        SB2D                    COMPENSATE FOR RANGE REDUCTION
      000324 001075 0777 01 010NN   491        NDSC4   HALF,0,1,NS,-1  NOW .DEXP = .DEXP - .5
      000325 000125 0577 10 010NN   492        NDSC4   .DEXP,0,8,LSS,-1

                                    493 *
      000326 000011 1004 00         494        MLR     ,(,,,X1),0      SET EXPONENT TO ZERO
      000327 000104 2400 02 010NN   495        ADSC4   .DTMP1,2,2
      000330 000077 6400 02 010NN   496        ADSC4   .DRRX-1,6,2
                                    497 *
                                    498 **********************************************************************
                                    499 *      CALCULATE LOG10(X) ACCORDING TO ABOVE FORMULA
                                    500 *
                                    501 *      ALGORITHM REQUIRES .DRRX TO BE WITHIN (SQRT(10)/10, SQRT(10))
                                    502 *      HOWEVER, SINCE NORMALIZED IS (1/10, 1) WE COMPENSATE FOR
                                    503 *      THIS BY MULTIPLYING BY (1/SQRT(10)), WHICH = (SQRT(10)/10)
                                    504 **********************************************************************
                                    505 *
      000331 040240 2224 00         506        AD3D    ,(,RL),(,RL),.RND   .DTMP2 = .DRRX + 1
      000332 001110 0400 47 010NN   507        NDSC4   OVRT10,0,39,LSF
      000333 000100 0400 11 010NN   508        NDSC4   .DRRX,0,X1,LSF
      000334 000110 0400 11 010NN   509        NDSC4   .DTMP2,0,X1,LSF
                                    510 *
      000335 040240 2234 00         511        SB3D    ,(,RL),(,RL),.RND    .DTMP1 = .DRRX - 1
      000336 001110 0400 47 010NN   512        NDSC4   OVRT10,0,39,LSF
      000337 000100 0400 11 010NN   513        NDSC4   .DRRX,0,X1,LSF
      000340 000104 0400 11 010NN   514        NDSC4   .DTMP1,0,X1,LSF
                                    515 *
      000341 040240 2274 40         516        DV3D    (,RL),(,RL),(,RL),.RND    .DTMP3 = .DTMP1/.DTMP2
      000342 000110 0400 11 010NN   517        NDSC4   .DTMP2,0,X1,LSF
      000343 000104 0400 11 010NN   518        NDSC4   .DTMP1,0,X1,LSF
      000344 000114 0400 11 010NN   519        NDSC4   .DTMP3,0,X1,LSF
                                    520 *
      000345 040240 2264 40         521        MP3D    (,RL),(,RL),(,RL),.RND   .DRRX = .DTMP3 ** 2
      000346 000114 0400 11 010NN   522        NDSC4   .DTMP3,0,X1,LSF
      000347 000114 0400 11 010NN   523        NDSC4   .DTMP3,0,X1,LSF
      000350 000100 0400 11 010NN   524        NDSC4   .DRRX,0,X1,LSF
                                    525 *
                                    526 **********************************************************************
                                    527 *      NOW USE THE FOLLOWING POLYNOMIALS TO OBTAIN .DRES
                                    528 *
                                    529 *      LOG10(Z) = .DTMP1(Z)/.DTMP2(Z), WHERE Z = .DRRX

                                    530 *
                                    531 *      .DTMP1 = P00+Z*(P01+Z*(P02+Z*(P03+Z*P04+Z*P05))))
                                    532 **********************************************************************
                                    533 *
      000351 040240 2264 00         534        MP3D    ,(,RL),(,RL),.RND  .DTMP1 = .DRRX * P05
      000352 001037 0400 37 010NN   535        NDSC4   P05,0,31,LSF
      000353 000100 0400 11 010NN   536        NDSC4   .DRRX,0,X1,LSF
      000354 000104 0400 11 010NN   537        NDSC4   .DTMP1,0,X1,LSF
                                    538 *
      000355 000240 2024 00         539        AD2D    ,(,RL),.RND     .DTMP1 = .DTMP1 + P04
      000356 001033 0400 37 010NN   540        NDSC4   P04,0,31,LSF
      000357 000104 0400 11 010NN   541        NDSC4   .DTMP1,0,X1,LSF
                                    542 *
      000360 000240 2064 40         543        MP2D    (,RL),(,RL),.RND  .DTMP1 = .DTMP1 * .DRRX
      000361 000100 0400 11 010NN   544        NDSC4   .DRRX,0,X1,LSF
      000362 000104 0400 11 010NN   545        NDSC4   .DTMP1,0,X1,LSF
                                    546 *
      000363 000240 2024 00         547        AD2D    ,(,RL),.RND     .DTMP1 = .DTMP1 + P03
      000364 001027 0400 37 010NN   548        NDSC4   P03,0,31,LSF
      000365 000104 0400 11 010NN   549        NDSC4   .DTMP1,0,X1,LSF
                                    550 *
      000366 000240 2064 40         551        MP2D    (,RL),(,RL),.RND  .DTMP1 = .DTMP1 * .DRRX
      000367 000100 0400 11 010NN   552        NDSC4   .DRRX,0,X1,LSF
      000370 000104 0400 11 010NN   553        NDSC4   .DTMP1,0,X1,LSF
                                    554 *
      000371 000240 2024 00         555        AD2D    ,(,RL),.RND     .DTMP1 = .DTMP1 + P02
      000372 001023 0400 37 010NN   556        NDSC4   P02,0,31,LSF
      000373 000104 0400 11 010NN   557        NDSC4   .DTMP1,0,X1,LSF
                                    558 *
      000374 000240 2064 40         559        MP2D    (,RL),(,RL),.RND  .DTMP1 = .DTMP1 * .DRRX
      000375 000100 0400 11 010NN   560        NDSC4   .DRRX,0,X1,LSF
      000376 000104 0400 11 010NN   561        NDSC4   .DTMP1,0,X1,LSF
                                    562 *
      000377 000240 2024 00         563        AD2D    ,(,RL),.RND     .DTMP1 = .DTMP1 + P01
      000400 001017 0400 37 010NN   564        NDSC4   P01,0,31,LSF
      000401 000104 0400 11 010NN   565        NDSC4   .DTMP1,0,X1,LSF
                                    566 *

      000402 000240 2064 40         567        MP2D    (,RL),(,RL),.RND  .DTMP1 = .DTMP1 * .DRRX
      000403 000100 0400 11 010NN   568        NDSC4   .DRRX,0,X1,LSF
      000404 000104 0400 11 010NN   569        NDSC4   .DTMP1,0,X1,LSF
                                    570 *
      000405 000240 2024 00         571        AD2D    ,(,RL),.RND     .DTMP1 = .DTMP1 + P00
      000406 001013 0400 37 010NN   572        NDSC4   P00,0,31,LSF
      000407 000104 0400 11 010NN   573        NDSC4   .DTMP1,0,X1,LSF
                                    574 *
      000410 000240 2064 40         575        MP2D    (,RL),(,RL),.RND   .DTMP1 = .DTMP1 * .DTMP3
      000411 000114 0400 11 010NN   576        NDSC4   .DTMP3,0,X1,LSF
      000412 000104 0400 11 010NN   577        NDSC4   .DTMP1,0,X1,LSF
                                    578 *
                                    579 *      .DTMP2 = Q00+Z*(Q0Q+Z*(Q02+Z*(Q03+Z*(Q04+Z*(Q05+Z*Q06)))))
                                    580 *
      000413 040240 2224 00         581        AD3D    ,(,RL),(,RL),.RND  SINCE Q06 - 1, A STEP IS SAVED;
      000414 001067 0400 37 010NN   582        NDSC4   Q05,0,31,LSF    .DTMP2 = .DRRX + Q05
      000415 000100 0400 11 010NN   583        NDSC4   .DRRX,0,X1,LSF
      000416 000110 0400 11 010NN   584        NDSC4   .DTMP2,0,X1,LSF
                                    585 *
      000417 000240 2064 40         586        MP2D    (,RL),(,RL),.RND  .DTMP2 = .DTMP2 * .DRRX
      000420 000100 0400 11 010NN   587        NDSC4   .DRRX,0,X1,LSF
      000421 000110 0400 11 010NN   588        NDSC4   .DTMP2,0,X1,LSF
                                    589 *
      000422 000240 2024 00         590        AD2D    ,(,RL),.RND     .DTMP2 = .DTMP2 + Q04
      000423 001063 0400 37 010NN   591        NDSC4   Q04,0,31,LSF
      000424 000110 0400 11 010NN   592        NDSC4   .DTMP2,0,X1,LSF
                                    593 *
      000425 000240 2064 40         594        MP2D    (,RL),(,RL),.RND  .DTMP2 = .DTMP2 * .DRRX
      000426 000100 0400 11 010NN   595        NDSC4   .DRRX,0,X1,LSF
      000427 000110 0400 11 010NN   596        NDSC4   .DTMP2,0,X1,LSF
                                    597 *
      000430 000240 2024 00         598        AD2D    ,(,RL),.RND     .DTMP2 = .DTMP2 + Q03
      000431 001057 0400 37 010NN   599        NDSC4   Q03,0,31,LSF
      000432 000110 0400 11 010NN   600        NDSC4   .DTMP2,0,X1,LSF
                                    601 *
      000433 000240 2064 40         602        MP2D    (,RL),(,RL),.RND  .DTMP2 = .DTMP2 * .DRRX
      000434 000100 0400 11 010NN   603        NDSC4   .DRRX,0,X1,LSF

      000435 000110 0400 11 010NN   604        NDSC4   .DTMP2,0,X1,LSF
                                    605 *
      000436 000240 2024 00         606        AD2D    ,(,RL),.RND     .DTMP2 = .DTMP2 + Q02
      000437 001053 0400 37 010NN   607        NDSC4   Q02,0,31,LSF
      000440 000110 0400 11 010NN   608        NDSC4   .DTMP2,0,X1,LSF
                                    609 *
      000441 000240 2064 40         610        MP2D    (,RL),(,RL),.RND  .DTMP2 = .DTMP2 * .DRRX
      000442 000100 0400 11 010NN   611        NDSC4   .DRRX,0,X1,LSF
      000443 000110 0400 11 010NN   612        NDSC4   .DTMP2,0,X1,LSF
                                    613 *
      000444 000240 2024 00         614        AD2D    ,(,RL),.RND     .DTMP2 = .DTMP2 + Q01
      000445 001047 0400 37 010NN   615        NDSC4   Q01,0,31,LSF
      000446 000110 0400 11 010NN   616        NDSC4   .DTMP2,0,X1,LSF
                                    617 *
      000447 000240 2064 40         618        MP2D    (,RL),(,RL),.RND  .DTMP2 = .DTMP2 * .DRRX
      000450 000100 0400 11 010NN   619        NDSC4   .DRRX,0,X1,LSF
      000451 000110 0400 11 010NN   620        NDSC4   .DTMP2,0,X1,LSF
                                    621 *
      000452 000240 2024 00         622        AD2D    ,(,RL),.RND     .DTMP2 = .DTMP2 + Q00
      000453 001043 0400 37 010NN   623        NDSC4   Q00,0,31,LSF
      000454 000110 0400 11 010NN   624        NDSC4   .DTMP2,0,X1,LSF
                                    625 *
                                    626 *      CALCULATE .DRES = .DTMP1/.DTMP2 + .DEXP
                                    627 *
      000455 040240 2274 40         628        DV3D    (,RL),(,RL),(,RL),.RND  .DRES = .DTMP1/.DTMP2
      000456 000110 0400 11 010NN   629        NDSC4   .DTMP2,0,X1,LSF
      000457 000104 0400 11 010NN   630        NDSC4   .DTMP1,0,X1,LSF
      000460 000120 0400 11 010NN   631        NDSC4   .DRES,0,X1,LSF
                                    632 *
      000461 000240 2024 00         633        AD2D    ,(,RL),.RND     .DRES = .DRES + .DEXP
      000462 000125 0577 10 010NN   634        NDSC4   .DEXP,0,8,LSS,-1
      000463 000120 0400 11 010NN   635        NDSC4   .DRES,0,X1,LSF
                                    636 *
                                    637 ***   .DRES NOW CONTAINS LOG (10) OF A.   ***
                                    638 ***   MULTIPLY INPUT EXPONENT BY LOGARITHM CALCULATED ABOVE    ***
                        000464      639 ENDLOG NULL
      000464 000240 2065 20         640        MP2D    (1,0,.IND),(,RL),.RND EXP * RESULT OF LOG

      000465 000020 0000 00 010NN   641        ARG     EXPDES
      000466 000120 0400 11 010NN   642 .RSLT  NDSC4   .DRES,0,X1,LSF

                                    644 *METHOD         THE BASIC FUNCTION CALCULATED  BY  THE  ROUTINE  IS
                                    645 *     EXP10(X). RESULTS FOR THE EXP USE THE FACT THAT
                                    646 *      EXP(X)=EXP10(X*LOG10(E)).
                                    647 *     THE CONSTANT LOG10(E) IS STORED IN THE ROUTINE.
                                    648 *     RANGE REDUCTION IS PERFORMED BY SUBTRACTING THE NEAREST
                                    649 *     MULTIPLE OF 0.1 FROM X (OR X*LOG10(E)). THE MULTIPLE OF
                                    650 *     .1 IS SAVED AT LOCATION  .DEXP,  AS  A  PACKED  DECIMAL
                                    651 *     STRING. THE  DECIMAL  POINT  IS INTENTIONALLY PLACED ON
                                    652 *     THE WORD BOUNDARY BETWEEN .DEXP AND .EEXP.
                                    653 *
                                    654 *     .DRRX IS THUS ON THE RANGE [-0.05, 0.05].
                                    655 *
                                    656 *     EXP10(.DRRX)  IS  FOUND  USING   A   MINIMAX   POLYNOMIAL
                                    657 *     APPROXIMATION OF THE FORM
                                    658 *     .DRES=(Q(.DRRX**2)+.DRRX*P(.DRRX**2)) DIVIDED BY
                                    659 *              (Q(.DRRX**2)-.DRRX*P(.DRRX**2)),
                                    660 *     WHERE P(Y)=P00+Y*(P*+Y*EXP02)
                                    661 *     AND Q(Y)=EXQ00+Y*(Q*+Y*EXQ02).
                                    662 *     THIS APPROXIMATION IS ACCURATE TO 23.33 DIGITS.
                                    663 *
                                    664 *     NEXT,  THE  SINGLE DECIMAL DIGIT IN .EEXP IS TAKEN CARE
                                    665 *     OF. AS IT IS JUST ONE DIGIT, IT IS IN EFFECT IN BINARY;
                                    666 *     BITS  1-4  HAVE  WEIGHTS  OF  0.8,  0.4,  0.2, AND 0.1,
                                    667 *     RESPECTIVELY. .DRES IS  MULTIPLIED  BY  10**WEIGHT  OF
                                    668 *     EACH "1" BIT; FOR EXAMPLE, IF .EEXP=0.5, THEN .DRES IS
                                    669 *
                                    670 *     MULTIPLIED BY 10**0.4 AND BY 10**0.1.
                                    671 *
                                    672 *     EXP10(X) IS FOUND BY CONVERTING .DEXP, THE INTEGER PART
                                    673 *     OF X, TO BINARY, AND ADDING IT TO THE EXPONENT OF .DRES.
                                    674 *
                                    675 *
                                    676 *
                                    677 *EFFECT OF ARGUMENT ERROR       AER=REA*X THUS WHEN X IS LARGE, A
                                    678 *     SMALL ERROR IN THE VALUE OF X WILL CAUSE A LARGE  ERROR
                                    679 *     IN THE RESULT.
                                    680 *     RER=AEA FOR LARGE POSITIVE X.

                                    681 *     RER=REA FOR X NEAR ZERO.
                                    682 *     RER=REA*EXP(X) FOR LARGE NEGATIVE X.
                                    683 *
                                    684 *      A=LOWER BOUND ON .DRRX.
                                    685 *      B=FIRST DIGIT RIGHT OF DECIMAL POINT,.DRRX-A.
                                    686 *      .DRRX=.DRRX-A-B.
                                    687 *      .DRES=(Q(.DRRX**2)+.DRRX*P(.DRRX**2)) DIVIDED BY
                                    688 *              (Q(.DRRX**2)-.DRRX*P(.DRRX**2))
                                    689 *              (HART 1460)
                                    690 *
      000467 000240 3004 40         691        MVN     (,RL),(,RL),.RND
      000470 000120 0400 11 010NN   692        NDSC4   .DRES,0,X1,LSF
      000471 000100 0400 11 010NN   693        NDSC4   .DRRX,0,X1,LSF
                                    694 *      CHECK FOR OUT OF RANGE CONDITIONS
      000472 000126 4500 00 010NN   695        STZ     .EEXP           .EEXP MUST BE ZERO FOR LATER SSQ TO WORK.
      000473 000200 3004 40         696        MVN     (,RL),,.RND     .DEXP=0.1*FIX(10*.DRRX)
      000474 000100 0400 11 010NN   697        NDSC4   .DRRX,0,X1,LSF
      000475 000125 0577 11 010NN   698        NDSC4   .DEXP,0,9,LSS,-1
      000476 000040 2034 00         699        SB2D    ,(,RL)          .DRRX=AMOD(.DRRX,0.1)
      000477 000125 0577 11 010NN   700        NDSC4   .DEXP,0,9,LSS,-1   .DRRX RANGE IS [-0.05,+0.05]
      000500 000100 0400 11 010NN   701        NDSC4   .DRRX,0,X1,LSF
      000501 000124 7540 00 010NN   702        STI     .DTMP
      000502 000125 2360 00 010NN   703        LDQ     .DEXP
      000503 020000 3160 03         704        CANQ    =O020000,DU     CHECK SIGN OF .DEXP
      000504 000512 6000 00 010NN   705        TZE     EXP120          PLUS,NO PROBLEM
      000505 000000 2034 00         706        SB2D                    MINUS,SOME ADJUSTMENTS NEEDED
      000506 001073 3700 01 010NN   707        NDSC4   .DONE,3,1,NS,0
      000507 000125 0500 10 010NN   708        NDSC4   .DEXP,0,8,LSS,0 DECREMENT .DEXP,SO THAT .DEXP NOT >X
      000510 240000 2360 03         709        LDQ     =O240000,DU
      000511 000126 1560 00 010NN   710        SSQ     .EEXP           ADD 1 TO .EEXP,ABSOLUTIZE
      000512 000124 6340 00 010NN   711 EXP120 LDI     .DTMP
      000513 000520 6010 00 010NN   712        TNZ     EXP130          .DRRX NONZERO
      000514 000040 3004 00         713        MVN     ,(,RL)          .DRRX ZERO;10**.DRRX=1
      000515 001073 3700 01 010NN   714        NDSC4   .DONE,3,1,NS,0
      000516 000120 0400 11 010NN   715        NDSC4   .DRES,0,X1,LSF
      000517 000570 7100 00 010NN   716        TRA     EXP140
      000520 040240 2264 40         717 EXP130 MP3D    (,RL),(,RL),(,RL),.RND  ARG FOR BOTH POLYNOMIALS IS

      000521 000100 0400 11 010NN   718        NDSC4   .DRRX,0,X1,LSF           .DRRX**2.
      000522 000100 0400 11 010NN   719        NDSC4   .DRRX,0,X1,LSF
      000523 000114 0400 11 010NN   720        NDSC4   .DTMP3,0,X1,LSF
      000524 040200 2264 40         721        MP3D    (,RL),,(,RL),.RND
      000525 000114 0400 11 010NN   722        NDSC4   .DTMP3,0,X1,LSF
      000526 001124 0754 23 010NN   723        NDSC4   EXP02,0,19,NS,-20
      000527 000104 0400 11 010NN   724        NDSC4   .DTMP1,0,X1,LSF
      000530 000240 2024 00         725        AD2D    ,(,RL),.RND
      000531 001121 0752 27 010NN   726        NDSC4   EXP01,0,23,NS,-22
      000532 000104 0400 11 010NN   727        NDSC4   .DTMP1,0,X1,LSF
      000533 000240 2064 40         728        MP2D    (,RL),(,RL),.RND
      000534 000114 0400 11 010NN   729        NDSC4   .DTMP3,0,X1,LSF
      000535 000104 0400 11 010NN   730        NDSC4   .DTMP1,0,X1,LSF
      000536 000240 2024 00         731        AD2D    ,(,RL),.RND     .DTMP1=EXP00+.DTMP3*(EXP01+.DTMP3*EXP02)
      000537 001115 0747 33 010NN   732        NDSC4   EXP00,0,27,NS,-25
      000540 000104 0400 11 010NN   733        NDSC4   .DTMP1,0,X1,LSF
      000541 040200 2224 40         734        AD3D    (,RL),,(,RL),.RND  EXQ02=1 HENCE A STEP CAN BE SAVED.
      000542 000114 0400 11 010NN   735        NDSC4   .DTMP3,0,X1,LSF .DTMP2=EXQ00+.DTMP3*(EXQ01+.DTMP3*EXQ02)
      000543 001133 0752 30 010NN   736        NDSC4   EXQ01,0,24,NS,-22
      000544 000110 0400 11 010NN   737        NDSC4   .DTMP2,0,X1,LSF
      000545 000240 2064 40         738        MP2D    (,RL),(,RL),.RND
      000546 000114 0400 11 010NN   739        NDSC4   .DTMP3,0,X1,LSF
      000547 000110 0400 11 010NN   740        NDSC4   .DTMP2,0,X1,LSF
      000550 000240 2024 00         741        AD2D    ,(,RL),.RND
      000551 001127 0747 33 010NN   742        NDSC4   EXQ00,0,27,NS,-25
      000552 000110 0400 11 010NN   743        NDSC4   .DTMP2,0,X1,LSF
      000553 000240 2064 40         744        MP2D    (,RL),(,RL),.RND  CALCULATE X*P(X**2)
      000554 000100 0400 11 010NN   745        NDSC4   .DRRX,0,X1,LSF
      000555 000104 0400 11 010NN   746        NDSC4   .DTMP1,0,X1,LSF
      000556 040240 2224 40         747        AD3D    (,RL),(,RL),(,RL),.RND  NUMERATOR=Q(X**2)+X*P(X**2)
      000557 000110 0400 11 010NN   748        NDSC4   .DTMP2,0,X1,LSF
      000560 000104 0400 11 010NN   749        NDSC4   .DTMP1,0,X1,LSF
      000561 000120 0400 11 010NN   750        NDSC4   .DRES,0,X1,LSF
      000562 000240 2034 40         751        SB2D    (,RL),(,RL),.RND  DENOMINATOR=Q(X**2)-X*P(X**2)
      000563 000104 0400 11 010NN   752        NDSC4   .DTMP1,0,X1,LSF
      000564 000110 0400 11 010NN   753        NDSC4   .DTMP2,0,X1,LSF
      000565 000240 2074 40         754        DV2D    (,RL),(,RL),.RND

      000566 000110 0400 11 010NN   755        NDSC4   .DTMP2,0,X1,LSF
      000567 000120 0400 11 010NN   756        NDSC4   .DRES,0,X1,LSF
                                    757 *
                                    758 *      NOW ADJUST .DRES FOR FIRST DIGIT TO RIGHT OF
                                    759 *       ARGUMENT'S DECIMAL POINT.
                                    760 *      THIS DIGIT IS IN BITS 1-4 OF .EEXP. BIT WEIGHTS,IN ORDER,
                                    761 *       ARE 0.8,0.4,0.2,AND 0.1.
                                    762 *      MULTIPLY BY 10**0.8 (IF APPROPRIATE),ETC.
                                    763 *
      000570 000126 2360 00 010NN   764 EXP140 LDQ     .EEXP
      000571 000602 6000 00 010NN   765        TZE     EXP170          DIGIT IS ZERO,NO CORRECTION NEEDED.
      000572 000140 6200 00         766        EAX0    3*32            SET X0 TO 3*NO. DIGITS IN A "TBL" ENTRY.
      000573 000001 7360 00         767 EXP150 QLS     1               TEST NEXT BIT
      000574 000600 6050 00 010NN   768        TPL     EXP160          BIT IS ZERO,SKIP IT.
      000575 000240 2064 10         769        MP2D    (,,,X0),(,RL),.RND  BIT IS 1.MULTIPLY BY RT .
      000576 001202 0750 31 010NN   770        NDSC4   TBL,0,25,NS,-24 ENTRY LENGTH 25 CHARS.
      000577 000120 0400 11 010NN   771        NDSC4   .DRES,0,X1,LSF
      000600 777740 6200 10         772 EXP160 EAX0    -32,X0          BACK UP ONE "TBL" ENTRY.
      000601 000573 6050 00 010NN   773        TPL     EXP150          ONE OR MORE REMAIN.
                                    774 *
                                    775 *      THE WHOLE FRACTIONAL PART OF X HAS BEEN EXPONENTIATED.
                                    776 *      NOW TAKE CARE OF THE INTEGER PART BY ADDING IT TO
                                    777 *      THE EXPONENT FIELD OF .DRES.
                                    778 *
                        000602      779 EXP170 NULL
      000602 000000 3054 00         780        DTB                     CONVERT INTEGER PART OF ARG (.DEXP)
      000603 000125 0500 10 010NN   781        NDSC4   .DEXP,0,8,LSS,0   INTO BINARY.
      000604 000126 0000 04 010NN   782        NDSC9   .EEXP,0,4       SAVE IN .EEXP.
      000605 000000 1014 11         783        MRL     (,,,X1),,0      PULL OUT EXPONENT OF 10**.DRRX
      000606 000117 6400 02 010NN   784        ADSC4   .DRES-1,6,2
      000607 000125 0400 10 010NN   785        ADSC4   .DEXP,0,8       PUT IT AWAY IN .DEXP
      000610 000125 2350 00 010NN   786        LDA     .DEXP           GET READY TO ADD INTEGER PART OF X TO IT.
      000611 000034 7350 00         787        ALS     28
      000612 000034 7310 00         788        ARS     28              BUT FIRST EXTEND SIGN.
      000613 000126 0750 00 010NN   789        ADA     .EEXP           CALCULATE THE EXPONENT NEEDED.
      000614 000200 6200 05         790        EAX0    128,AL          COMPARE WITH -128.
      000615 000636 6050 00 010NN   791        TPL     EXP190          GREATER OR EQUAL,NO PROBLEM.

                                    792 *                              UNDERFLOW IMMINENT.PREVENT IT IF CAN.
      000616 000040 3004 40         793        MVN     (,RL),(,RL)     FIRST COPY NUMBER TO .DTMP STORAGE.
      000617 000120 0400 11 010NN   794 RDS    NDSC4   .DRES,0,X1,LSF
      000620 000104 0400 11 010NN   795        NDSC4   .DTMP1,0,X1,LSF .DTMP1 IS AVAILABLE.
      000621 000125 7410 00 010NN   796        STX1    .DEXP
      000622 000125 0600 00 010NN   797        ADX0    .DEXP           NOW,C(X0)=MAX LENGTH WITHOUT UNDERFLOW.
      000623 000003 1000 03         798        CMPX0   3,DU
      000624 000631 6054 00 010NN   799        TPNZ    EXP180          SOME ACCURACY LOST--NO SERIOUS PROBLEM.
      000625 000000 3004 00         800        MVN     ,,0             EXP(-LARGE)=0.
      000626 001073 2700 01 010NN   801        NDSC4   .DZERO,2,1,NS,0
      000627 000104 0400 31 010NN   802        NDSC4   .DTMP1,0,25,LSF
      000630 000204 7100 00 010NN   803        TRA     DONE            RESTORE REG AND RETURN
      000631 000240 3004 40         804 EXP180 MVN     (,RL),(,RL),.RND
      000632 000104 0400 11 010NN   805        NDSC4   .DTMP1,0,X1,LSF
      000633 000120 0400 10 010NN   806        NDSC4   .DRES,0,X0      .DRES WILL HAVE EXPONENT=-128.
      000634 000000 6210 10         807        EAX1    0,X0            MOVE REDUCED LENGTH TO X1.
      000635 000200 3350 07         808        LCA     128,DL          EXPONENT=-128
      000636 000125 7550 00 010NN   809 EXP190 STA     .DEXP           PUT EXPONENT IN .DEXP.
      000637 000200 1150 07         810        CMPA    128,DL          CHECK FOR EXPONENT TOO LARGE.
      000640 000251 6050 00 010NN   811        TPL     OVFL            IT IS TOO LARGE.
      000641 000011 1004 00         812        MLR     ,(,,,X1)
      000642 000125 6400 02 010NN   813        ADSC4   .DEXP,6,2       PLACE EXPONENT
      000643 000117 6400 02 010NN   814        ADSC4   .DRES-1,6,2      IN .DRES.
      000644 000200 3004 40         815        MVN     (,RL),(0,0,0),.RND  FINAL MOVE.
      000645 000120 0400 11 010NN   816        NDSC4   .DRES,0,X1,LSF
      000646 000035 0400 25 010NN   817        NDSC4   SUM,0,21,LSF
      000647 000204 7100 00 010NN   818        TRA     DONE            RESTORE REG AND RETURN
                                    819
                                    820                COMPLEMENTARY EXPONENTIAL
                                    821
                        000650      822 EXP200 NULL                    COMPLEMENTARY EXPONENTIAL OR TANH
      000650 040240 2264 40         823        MP3D    (,RL),(,RL),(,RL),.RND
      000651 000100 0400 11 010NN   824        NDSC4   .DRRX,0,X1,LSF
      000652 000100 0400 11 010NN   825        NDSC4   .DRRX,0,X1,LSF
      000653 000114 0400 11 010NN   826        NDSC4   .DTMP3,0,X1,LSF
      000654 040240 2264 00         827        MP3D    ,(,RL),(,RL),.RND
      000655 001156 0743 34 010NN   828        NDSC4   PEXP04,0,28,NS,-29

      000656 000114 0400 11 010NN   829        NDSC4   .DTMP3,0,X1,LSF
      000657 000104 0400 11 010NN   830        NDSC4   .DTMP1,0,X1,LSF
      000660 040240 2224 00         831        AD3D    ,(,RL),(,RL),.RND
      000661 001176 0744 34 010NN   832        NDSC4   QEXQ03,0,28,NS,-28
      000662 000114 0400 11 010NN   833        NDSC4   .DTMP3,0,X1,LSF
      000663 000110 0400 11 010NN   834        NDSC4   .DTMP2,0,X1,LSF
      000664 000140 6200 00         835        EAX0    96              4BIT CHAR DISPLACEMENT,PEXP00 TO PEXP03.
      000665 000677 7100 00 010NN   836        TRA     EXP230
                        000666      837 EXP210 NULL
      000666 000240 2064 40         838        MP2D    (,RL),(,RL),.RND
      000667 000114 0400 11 010NN   839        NDSC4   .DTMP3,0,X1,LSF
      000670 000110 0400 11 010NN   840        NDSC4   .DTMP2,0,X1,LSF
      000671 000240 2064 40         841        MP2D    (,RL),(,RL),.RND
      000672 000114 0400 11 010NN   842        NDSC4   .DTMP3,0,X1,LSF
      000673 000104 0400 11 010NN   843        NDSC4   .DTMP1,0,X1,LSF
      000674 000240 2024 10         844        AD2D    (,,,X0),(,RL),.RND
      000675 001162 0746 40 010NN   845        NDSC4   QEXQ00,0,32,NS,-26
      000676 000110 0400 11 010NN   846        NDSC4   .DTMP2,0,X1,LSF
                        000677      847 EXP230 NULL
      000677 000240 2024 10         848        AD2D    (,,,X0),(,RL),.RND
      000700 001136 0746 40 010NN   849        NDSC4   PEXP00,0,32,NS,-26
      000701 000104 0400 11 010NN   850        NDSC4   .DTMP1,0,X1,LSF
      000702 777740 6200 10         851        EAX0    -32,X0
      000703 000666 6050 00 010NN   852        TPL     EXP210
      000704 000240 2064 40         853        MP2D    (,RL),(,RL),.RND
      000705 000100 0400 11 010NN   854        NDSC4   .DRRX,0,X1,LSF
      000706 000104 0400 11 010NN   855        NDSC4   .DTMP1,0,X1,LSF
      000707 000240 2034 40         856        SB2D    (,RL),(,RL),.RND
      000710 000104 0400 11 010NN   857        NDSC4   .DTMP1,0,X1,LSF
      000711 000110 0400 11 010NN   858        NDSC4   .DTMP2,0,X1,LSF
      000712 000240 2074 40         859        DV2D    (,RL),(,RL),.RND
      000713 000110 0400 11 010NN   860        NDSC4   .DTMP2,0,X1,LSF
      000714 000104 0400 11 010NN   861        NDSC4   .DTMP1,0,X1,LSF
      000715 000240 2024 40         862        AD2D    (,RL),(,RL),.RND  .DTMP1=2*.DRRX*P(.DRRX*.DRRX) DIVIDED
                                    863 *                              BY (Q(.DRRX*.DRRX)...
      000716 000104 0400 11 010NN   864        NDSC4   .DTMP1,0,X1,LSF  ... -.DRRX*P(.DRRX*.DRRX))  --HART 1647
      000717 000104 0400 11 010NN   865 PDS    NDSC4   .DTMP1,0,X1,LSF

      000720 000200 3004 40         866        MVN     (,RL),(0,0,0),.RND  COMPLEMENTARY EXPONENTIAL.
      000721 000104 0400 11 010NN   867        NDSC4   .DTMP1,0,X1,LSF
      000722 000035 0400 25 010NN   868        NDSC4   SUM,0,21,LSF
      000723 000204 7100 00 010NN   869        TRA     DONE
                                    870 *

      000724 000000000003           872 ZRONEG DEC     3
      000725 000000000004           873 NEGREL DEC     4
      000726 000724000000   01000   874 PTRBK1 PTR     .X9DD,ZRONEG
      000727 000725000000   01000   875 PTRBK2 PTR     .X9DD,NEGREL
      000730 000001000000           876 NUMARG VFD     18/1,18/0
      000731 000000000000           877 NUM    DEC     0
      000732 103102224110           878 LOG10E EDEC    25P4342944819032518276511289  LOG10E,0,25,NS,-25
      000733 031003045030
      000734 047145021050
      000735 220000000000
      000736 206205210226           879 2LG10E EDEC    25P8685889638065036553022578  2LG10E,0,25,NS,-25
      000737 070006120066
      000740 125060042127
      000741 200000000000
                                    880                                POLYNOMIAL COEFFICIENTS  HART 1460
                                    881 *
                                    882 *      CONSTANTS AND WORKING STORAGE.
      000742 001322000000           883 CONST  VFD     5/0,4/1,O5/15,4/2,18/0   0,1,-1,2, AND DIVISOR.
      000743 321000000000           884 NEG1   EDEC    2P-1            NEG1,0,2,LSS,0
      000744 000000 0400 25         885 SUMDES NDSC4   0,0,21,LSF
      000745 000000 006000          886 ZER0   ZERO    0,3072          POINTS TO ISSID
      000746 000000000025           887 EXP221 DEC     21
      000747 353000000000           888 EXP21  OCT     353000000000
      000750 047030050030           889 E      EDEC    25P2718281828459045235360287
      000751 050105220105
      000752 043123140050
      000753 160000000000
      000754 043002130120           890 LN10   EDEC    26P23025850929940456840199246
      000755 222231100105
      000756 150100031222
      000757 106000000000
      000760 060061060060           891 D100   ASCII   1,0100
      000761 060060060061           892 D.001  ASCII   1,0001
      000762 060061062067           893 D127   ASCII   1,0127
      000763 300000000000           894 EXP10  OCT     300000000000
      000764 000000000000           895        OCT     000000000000
      000765 000000001000           896        OCT     000000001000

      000766 231231231231           897 OVFL9  EDEC    40P9999999999999999999999999999999999999999
      000767 231231231231
      000770 231231231231
      000771 231231231231
      000772 231231231231
      000773 231231231231           898        EDEC    23P99999999999999999999999
      000774 231231231231
      000775 231231231220
      000776 000001001001           899 TABL   OCT     000001001001
      000777 001001001001           900        OCT     001001001001
      001000 001001001001           901        OCT     001001001001
      001001 001001001001           902        OCT     001001001001
      001002 070061071061           903 LIMIT  ASCII   1,8191
      001003 260020000000           904 .LONG1 OCT     260020000000,0,0,0,0,0,0,14140
      001004 000000000000
      001005 000000000000
      001006 000000000000
      001007 000000000000
      001010 000000000000
      001011 000000000000
      001012 000000014140
                                    905 *
                                    906 *      THESE CONSTANT COEFFICIENTS ARE FROM HART 2330
                                    907 *
      001013 301127144063           908 P00    EDEC    31P+1576433484511276925502758687E-24
      001014 110105021047
      001015 151045120047
      001016 130150176200
      001017 324031043105           909 P01    EDEC    31P-4192345602070810791081549123E-24
      001020 140040160201
      001021 007221010025
      001022 111022076200
      001023 304005230063           910 P02    EDEC    31P+4059833123944762151318193331E-24
      001024 022071104166
      001025 041121061201
      001026 223063036200
      001027 321162125066           911 P03    EDEC    31P-1725536265006530338684495701E-24

      001030 046120006123
      001031 003070150104
      001032 225160036200
      001033 303001062064           912 P04    EDEC    31P+3013234734147484613846188400E-25
      001034 163101107110
      001035 106023204141
      001036 210100016160
      001037 321111063101           913 P05    EDEC    31P-1493341871231014986770224000E-26
      001040 207022061001
      001041 111206167002
      001042 044000016140
      001043 301201111066           914 Q00    EDEC    31P+1814936120766163028214277095E-24
      001044 022007146026
      001045 060050041102
      001046 167011136200
      001047 325103025224           915 Q01    EDEC    31P-5431594950925752573524755918E-24
      001050 225011045165
      001051 045163122107
      001052 125221216200
      001053 306022026000           916 Q02    EDEC    31P+6121600041774687806850390866E-24
      001054 004027164150
      001055 170006205003
      001056 220206156200
      001057 323040000207           917 Q03    EDEC    31P-3200087986366641222500715651E-24
      001060 230143146144
      001061 022042120007
      001062 025145036200
      001063 307143127000           918 Q04    EDEC    31P+7635700230091557987722430100E-25
      001064 043000221125
      001065 171207162044
      001066 060020016160
      001067 326166226101           919 Q05    EDEC    31P-6769641190462245275846469000E-26
      001070 031004142044
      001071 122165204144
      001072 151000016140
                                    920 *
                                    921 *      OTHER CONSTANTS

                                    922 *
                        001073      923 .DONE  EQU     *
                        001073      924 .DZERO EQU     *
      001073 315001040177           925        OCT     315001040177
      001074 020000000000           926 ONE    EDEC    1P1
      001075 120000000000           927 HALF   EDEC    1P5
      001076 303062031050           928 LG2.10 EDEC    39P+332192809488736234787031942948939017E-35
      001077 011110207066
      001100 043107207003
      001101 031102224211
      001102 071001175320
      001103 302060045205           929 LGE.10 EDEC    39P+230258509299404568401799145468436421E-35
      001104 011051224004
      001105 126204001171
      001106 221105106204
      001107 066102035320
      001110 303026042167           930 OVRT10 EDEC    39P+316227766016837933199889354443271853E-36
      001111 146001150067
      001112 223061231210
      001113 223124104062
      001114 161205075300
                                    931 *
      001115 101050126201           932 EXP00  EDEC    27P412856818518155985386667571  EXP00,0,27,NS,-25
      001116 205030025131
      001117 205070146147
      001120 127020000000
      001121 140200046146           933 EXP01  EDEC    23P60802666689673966880154  EXP01,0,23,NS,-22
      001122 150226163226
      001123 150200025100
      001124 166164205227           934 EXP02  EDEC    19P7674859772287285452  EXP02,0,19,NS,-20
      001125 162050162205
      001126 105040000000
      001127 065206002207           935 EXQ00  EDEC    27P358602876197134837270759109  EXQ00,0,27,NS,-25
      001130 141227023110
      001131 067047007131
      001132 020220000000
      001133 041022122030           936 EXQ01  EDEC    24P211252184566798465692396  EXQ01,0,24,NS,-22

      001134 105146171204
      001135 145151043226
                                    937                                COMPLEMENTARY EXPONENTIAL.  HART 1647.
      001136 050144127022           938 PEXP00 EDEC    32P28645712122839996845179929760000  PEXP00,0,32,NS,-26
      001137 022050071231
      001140 150105027231
      001141 051166000000
      001142 005041007126           939 PEXP01 EDEC    32P05210756920354462102951204251000  MF=(,,,X0)
      001143 222003124106
      001144 041002225022
      001145 004045020000
      001146 000031162103           940 PEXP02 EDEC    32P00197243035865458417536349276200
      001147 003130145105
      001150 204027123143
      001151 111047142000
      001152 000000031023           941 PEXP03 EDEC    32P00001913044732218274363936656426
      001153 004107062041
      001154 202164066071
      001155 066145144046
      001156 045123221204           942 PEXP04 EDEC    28P2553918457552997383091151317    PEXP04,0,28,NS,-29
      001157 127125051227
      001160 070060221025
      001161 023027000000
      001162 044210023111           943 QEXQ00 EDEC    32P24881349410276993010484764760000  QEXQ00,0,32,NS,-26
      001163 101002166231
      001164 060020110107
      001165 144166000000
      001166 025121222004           944 QEXQ01 EDEC    32P15519204239473282989977150710000  MF=(,,,X0)
      001167 043224163050
      001170 051211227161
      001171 120161000000
      001172 001031226021           945 QEXQ02 EDEC    32P01199611371855314426169339409000
      001173 067030125061
      001174 104046026223
      001175 071100220000
      001176 043047231027           946 QEXQ03 EDEC    28P2327991781846466341520008888    QEXQ03,0,28,NS,-28
      001177 201204144146

      001200 064025040000
      001201 210210000000
                                    947 *QQ04  EDEC    1P1
                        001133      948 TWO    EQU     EXQ01           TWO,0,1,NS,0
      001202 022130222124           949 TBL    EDEC    25P1258925411794167210423954  10**0.1  TBL,0,25,NS,-24
      001203 021171101147
      001204 041004043225
      001205 100000000000
      001206 025204211061           950        EDEC    25P1584893192461113485202101  10**0.2  MF=(,,,X0)
      001207 222106021023
      001210 110122002020
      001211 020000000000
      001212 045021210144           951        EDEC    25P2511886431509580111085032  10**0.4
      001213 061120225200
      001214 021020205003
      001215 040000000000
      001216 143011127064           952        EDEC    25P6309573444801932494343602  10**0.8
      001217 104200031062
      001220 111103103140
      001221 040000000000

                        000000      954        SECT    .X9DD.,DATA
      000000 000000000000           955 BENTRY DEC     0
                        000001      956 ONSIZE BSS     1
                        000002      957 SAVEI  BSS     1
                        000010      958        EIGHT
                        000010      959 .REG.  BSS     8
                        000020      960 EXPDES BSS     1
                        000021      961 BASDES BSS     1
                        000022      962 ANSDES BSS     1
                        000023      963 NEWARG BSS     4
                        000027      964 DSCLST BSS     2
                        000031      965 PR7    BSS     1
                        000032      966 PR6    BSS     1
                        000033      967 PR5    BSS     1
                        000034      968 PR4    BSS     1
                        000035      969 SUM    BSS     3
                        000040      970 TERM   BSS     3
                        000043      971 TEMP   BSS     3
                        000046      972 TEMP2  BSS     3
                        000051      973 RECIP  BSS     1
                        000052      974 LNF    BSS     3
                        000055      975 N.LN10 BSS     3
                        000060      976 .UNITS BSS     1               FOR UNITS POS OF EXPONENT
                        000061      977 NEGSW  BSS     1               SET FOR NEG. EXPONENT
                        000062      978 EXP    BSS     1
                        000063      979 ZERO   BSS     1
                        000064      980 TEMP3  BSS     3
                        000067      981 G.100  BSS     1
                        000070      982 L.001  BSS     1
                        000071      983 CONST1 BSS     1
                        000072      984 COUNTR BSS     1
                                    985 *      TEMPORARY STORAGE
                                    986 *
                        000100      987 .STOR18BSS     40
                        000100      988 .DRRX  EQU     .STOR1          BSS   4
                        000104      989 .DTMP1 EQU     .STOR1+4        BSS   4
                        000110      990 .DTMP2 EQU     .STOR1+8        BSS   4

                        000114      991 .DTMP3 EQU     .STOR1+12       BSS   4
                        000120      992 .DRES  EQU     .STOR1+16       BSS   4
                        000124      993 .DTMP  EQU     .STOR1+20     BSS 1   TEMPORARY STORAGE
                        000125      994 .DEXP  EQU     .STOR1+21       BSS   1 BINARY FORMAT OF EXP
                        000126      995 .EEXP  EQU     .STOR1+22       BSS   1  DECIMAL EXPONENT
                        000127      996 .SAVX6 EQU     .STOR1+23       BSS 1 TO SAVE INDEX 6
                        000133      997 .DESCB EQU     .STOR1+27       BSS    7  MUST BE ODD LOC
                                    998 *
                                    999        END
 GMAP6 VERSION/ASSEMBLY DATES  JNPA NO TTL/2(_00]      JNPB NO TTL/2(_00]      JNPC NO TTL/2(_00]
 THERE WERE    NO  WARNING FLAGS IN THE ABOVE ASSEMBLY

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
   736   2LG10E   REL   .X9DD    879  879
    22   ANSDES   REL   .X9DD.   962  139W  198   212   243   252   266   352   371   375   962
     1   AR       ABS             95   95
    21   BASDES   REL   .X9DD.   961  131W  182   225   241   265   301R  313   314   323   450   458   961
     0   BENTRY   REL   .X9DD.   955  359W  955
    71   CONST1   REL   .X9DD.   983  290D  291R  295   983
   742   CONST    REL   .X9DD    883  181D  185D  197D  211D  224D  228D  234D  242D  251D  258D  322D  333D  370D
    72   COUNTR   REL   .X9DD.   984  984
   760   D100     REL   .X9DD    891  891
   762   D127     REL   .X9DD    893  893
   761   D.001    REL   .X9DD    892  892
   204   DONE     REL   .X9DD    326  308T  316T  326   803T  818T  869T
    27   DSCLST   REL   .X9DD.   964  299   302W  304W  964
   750   E        REL   .X9DD    889  363D  889
   464   ENDLOG   REL   .X9DD    639  639
    55   ERR1     REL   .X9DD    202  202   324T
   231   EXIT     REL   .X9DD    353  199T  218T  244T  253T  267T  353   372T  380T
   240   EXITA    REL   .X9DD    361  361
   212   EXITC    REL   .X9DD    335  329T  335
   226   EXITD    REL   .X9DD    349  337T  347T  349
  1115   EXP00    REL   .X9DD    932  732D  932
  1121   EXP01    REL   .X9DD    933  726D  933
  1124   EXP02    REL   .X9DD    934  723D  934
   763   EXP10    REL   .X9DD    894  894
   512   EXP120   REL   .X9DD    711  705T  711
   520   EXP130   REL   .X9DD    717  712T  717
   570   EXP140   REL   .X9DD    764  716T  764
   573   EXP150   REL   .X9DD    767  767   773T
   600   EXP160   REL   .X9DD    772  768T  772
   602   EXP170   REL   .X9DD    779  765T  779
   631   EXP180   REL   .X9DD    804  799T  804
   636   EXP190   REL   .X9DD    809  791T  809
   650   EXP200   REL   .X9DD    822  822
   666   EXP210   REL   .X9DD    837  837   852T
   747   EXP21    REL   .X9DD    888  888

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
   746   EXP221   REL   .X9DD    887  887
   677   EXP230   REL   .X9DD    847  836T  847
    62   EXP      REL   .X9DD.   978  978
    20   EXPDES   REL   .X9DD.   960  135W  186   229   235   259   272   276   340   641   960
  1127   EXQ00    REL   .X9DD    935  742D  935
  1133   EXQ01    REL   .X9DD    936  736D  936   948
    67   G.100    REL   .X9DD.   981  981
  1075   HALF     REL   .X9DD    927  491D  927
   133   .DESCB   REL   .X9DD.   997  997
   125   .DEXP    REL   .X9DD.   994  484W  488D  492D  634D  698D  700D  703R  708D  781D  785D  786R  796W  797R
                                      994
  1073   .DONE    REL   .X9DD    923  707D  714D  923
   120   .DRES    REL   .X9DD.   992  631D  635D  642D  692D  715D  750D  756D  771D  784D  794D  806D  814D  816D
   100   .DRRX    REL   .X9DD.   988  451D  460D  466D  470D  496D  508D  513D  524D  536D  544D  552D  560D  568D
                                      595D  603D  611D  619D  693D  697D  701D  718D  719D  745D  824D  825D  854D
   104   .DTMP1   REL   .X9DD.   989  482W  495D  514D  518D  537D  541D  545D  549D  553D  557D  561D  565D  569D
                                      630D  724D  727D  730D  733D  746D  749D  752D  795D  802D  805D  830D  843D
                                      857D  861D  864D  865D  867D  989
   110   .DTMP2   REL   .X9DD.   990  509D  517D  584D  588D  592D  596D  600D  604D  608D  612D  616D  620D  624D
                                      740D  743D  748D  753D  755D  834D  840D  846D  858D  860D  990
   114   .DTMP3   REL   .X9DD.   991  341D  343D  519D  522D  523D  576D  720D  722D  729D  735D  739D  826D  829D
                                      842D  991
   124   .DTMP    REL   .X9DD.   993  702W  711R  993
  1073   .DZERO   REL   .X9DD    924  801D  924
   126   .EEXP    REL   .X9DD.   995  467W  471D  473R  476W  479A  487D  695W  710A  764R  782D  789R  995
     1   .IND     ABS             96   96   449   640
  1003   .LONG1   REL   .X9DD    904  465D  904
   263   .PLOG.   REL   .X9DD    446  446
    10   .REG.    REL   .X9DD.   959  119W  358R  959
     1   .RND     ABS             98   98   368   449   457   464   506   511   516   521   534   539   543   547
                                      559   563   567   571   575   581   586   590   594   598   602   606   610
                                      622   628   633   640   691   696   717   721   725   728   731   734   738
                                      747   751   754   769   804   815   823   827   831   838   841   844   848
                                      859   862   866
   466   .RSLT    REL   .X9DD    642  642

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
   127   .SAVX6   REL   .X9DD.   996  996
   100   .STOR1   REL   .X9DD.   987  987   988   989   990   991   992   993   994   995   996   997
    60   .UNITS   REL   .X9DD.   976  344D  345R  976
  6000   .X9DD    SEC   SECT      55   55   874   875
  6001   .X9DD.   SEC   SECT     954  954
   267   LABRRX   REL   .X9DD    451  451
  1076   LG2.10   REL   .X9DD    928  928
  1103   LGE.10   REL   .X9DD    929  929
  1002   LIMIT    REL   .X9DD    903  280D  903
    70   L.001    REL   .X9DD.   982  982
   754   LN10     REL   .X9DD    890  890
    52   LNF      REL   .X9DD.   974  974
   261   LOG10    REL   .X9DD    442  281T  325T  442
   732   LOG10E   REL   .X9DD    878  878
   277   LOG30    REL   .X9DD    463  455T  463
   177   LONG     REL   .X9DD    320  277T  320
     0   LSF      ABS            108  108   315   332   334   351   364   369   451   460   465   466   507   508
                                      513   514   517   518   519   522   523   524   535   536   537   540   541
                                      548   549   552   553   556   557   560   561   564   565   568   569   572
                                      577   582   583   584   587   588   591   592   595   596   599   600   603
                                      608   611   612   615   616   619   620   623   624   629   630   631   635
                                      693   697   701   715   718   719   720   722   724   727   729   730   733
                                      739   740   743   745   746   748   749   750   752   753   755   756   771
                                      802   805   816   817   824   825   826   829   830   833   834   839   840
                                      846   850   854   855   857   858   860   861   864   865   867   868   885
     1   LSS      ABS            109  109   488   492   634   698   700   708   781
   743   NEG1     REL   .X9DD    884  884
   272   NEG30    REL   .X9DD    456  454T  456
   244   NEGATE   REL   .X9DD    368  348T  368
   725   NEGREL   REL   .X9DD    873  873   875
    61   NEGSW    REL   .X9DD.   977  175W  336R  448W  461A  977
    23   NEWARG   REL   .X9DD.   963  294W  296W  298W  300W  305   963
    55   N.LN10   REL   .X9DD.   975  975
   172   NOTDON   REL   .X9DD    310  293T  310
     3   NS       ABS            111  111   181   185   197   211   224   228   242   251   258   279   280   289

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
                                      343   344   363   370   374   459   491   707   714   723   726   732   736
                                      801   828   832   845   849
   731   NUM      REL   .X9DD    877  877
   730   NUMARG   REL   .X9DD    876  190   204   876
    61   OK       REL   .X9DD    210  187T  193T  210
  1074   ONE      REL   .X9DD    926  926
     1   ONSIZE   REL   .X9DD.   956  213W  215A  216W  217R  376W  378A  379R  956
   766   OVFL9    REL   .X9DD    897  374D  897
   251   OVFL     REL   .X9DD    373  373   811T
  1110   OVRT10   REL   .X9DD    930  507D  512D  930
  1013   P00      REL   .X9DD    908  572D  908
  1017   P01      REL   .X9DD    909  564D  909
  1023   P02      REL   .X9DD    910  556D  910
  1027   P03      REL   .X9DD    911  548D  911
  1033   P04      REL   .X9DD    912  540D  912
  1037   P05      REL   .X9DD    913  535D  913
   717   PDS      REL   .X9DD    865  865
  1136   PEXP00   REL   .X9DD    938  849D  938
  1142   PEXP01   REL   .X9DD    939  939
  1146   PEXP02   REL   .X9DD    940  940
  1152   PEXP03   REL   .X9DD    941  941
  1156   PEXP04   REL   .X9DD    942  828D  942
    34   PR4      REL   .X9DD.   968  123W  357R  968
    33   PR5      REL   .X9DD.   967  122W  356R  967
    32   PR6      REL   .X9DD.   966  121W  355R  966
    31   PR7      REL   .X9DD.   965  120W  354R  965
   726   PTRBK1   REL   .X9DD    874  189   874
   727   PTRBK2   REL   .X9DD    875  203   875
  1043   Q00      REL   .X9DD    914  623D  914
  1047   Q01      REL   .X9DD    915  615D  915
  1053   Q02      REL   .X9DD    916  607D  916
  1057   Q03      REL   .X9DD    917  599D  917
  1063   Q04      REL   .X9DD    918  591D  918
  1067   Q05      REL   .X9DD    919  582D  919
  1162   QEXQ00   REL   .X9DD    943  845D  943

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
  1166   QEXQ01   REL   .X9DD    944  944
  1172   QEXQ02   REL   .X9DD    945  945
  1176   QEXQ03   REL   .X9DD    946  832D  946
   617   RDS      REL   .X9DD    794  794
   204   REC      REL   .X9DD    327  327   365T
    51   RECIP    REL   .X9DD.   973  221W  232A  328R  447W  973
     1   RL       ABS             97   97   449   457   464   506   511   516   521   534   539   543   547   551
                                      563   567   571   575   581   586   590   594   598   602   606   610   614
                                      628   633   640   691   696   699   713   717   721   725   728   731   734
                                      744   747   751   754   769   793   804   815   823   827   831   838   841
                                      853   856   859   862   866
     2   SAVEI    REL   .X9DD.   957  176W  178A  179R  957
    35   SUM      REL   .X9DD.   969  297   315D  332D  334D  351D  364D  369D  817D  868D  969
   744   SUMDES   REL   .X9DD    885  303R  885
    72   T1       REL   .X9DD    221  183T  221
   116   T2       REL   .X9DD    250  226T  231T  250
   122   T3       REL   .X9DD    257  230T  257
   132   T4       REL   .X9DD    271  236T  260T  271
   776   TABL     REL   .X9DD    899  899
  1202   TBL      REL   .X9DD    949  770D  949
    46   TEMP2    REL   .X9DD.   972  972
    64   TEMP3    REL   .X9DD.   980  980
    43   TEMP     REL   .X9DD.   971  273D  275D  279D  289D  971
    40   TERM     REL   .X9DD.   970  970
     2   TSS      ABS            110  110   234   273   275
  1133   TWO      REL   .X9DD    948  948
    10   X0       ABS             99   99   128   132   136   769   772   807   844   848   851
    11   X1       ABS            100  100   360   443   469   478   494   783   812
    12   X2       ABS            101  101
    13   X3       ABS            102  102
    14   X4       ABS            103  103
    15   X5       ABS            104  104
    16   X6       ABS            105  105
    17   X7       ABS            106  106
NO VAL   X8ER     EXT   SYMREF         56   191T  205T

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
     1   X9DD     REL   .X9DD    118  117   118
NO VAL   X9DI     EXT   SYMREF         57   306T
   745   ZER0     REL   .X9DD    886  886
    63   ZERO     REL   .X9DD.   979  979
    51   ZEZ      REL   .X9DD    195  188T  195
   724   ZRONEG   REL   .X9DD    872  872   874
