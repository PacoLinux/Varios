

14:12 JUL 28 '97 B_MACROS_C.:E05SI                                         1    
    1      /*M* Macro definitions for use in CP-6 system development.         */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /* This file contains macros of more or less general utility to    */
    8      /* the more or less average system programmer.                     */
    9
   10      /* Following is  a single       macro  for generating 'canned'     */
   11      /* PL-6 pointers which are NSA pointers to particular descriptors  */
   12      /* in either the parameter, argument or linkage segments.          */
   13      %MACRO SEGPTR(NAME=NAME,D#=0,DISP=0);
   14      DCL 1 NAME CONSTANT SYMDEF,
   15            2 OFFSET UBIN(24) INIT(DISP) UNAL,
   16            2 SID BIT(12) INIT(D#) UNAL;      /* D# SHOULD BE OCTAL                     */
   17      %MEND;
   18
   19
   20      /* The following macros provide an easy way to add or subtract     */
   21      /* one from a PL-6 variable, or set or reset bits.                 */
   22      %MACRO INCR(VAR=VAR);
   23              VAR = VAR + 1;
   24      %MEND;
   25
   26              %MACRO DECR(VAR=VAR);
   27              VAR = VAR - 1;
   28      %MEND;
   29
   30              %MACRO SETV(VAR=VAR,FLAGS=FLAGS);
   31              VAR = VAR | (FLAGS);
   32      %MEND;
   33
   34              %MACRO RESETV(VAR=VAR,FLAGS=FLAGS);
   35              VAR = VAR & ~(FLAGS);
   36      %MEND;
   37
14:12 JUL 28 '97 B_MACROS_C.:E05SI                                         2    
   38              %MACRO U_SET(FLAGS=FLAGS);
   39              S$CU$->B$U.FLG = S$CU$->B$U.FLG | (FLAGS);
   40      %MEND;
   41
   42              %MACRO U_RESET(FLAGS=FLAGS);
   43              S$CU$->B$U.FLG = S$CU$->B$U.FLG & ~(FLAGS);
   44      %MEND;
   45
   46
   47      /* MACRO TO GENERATE A TEMPLATE FOR A 2-WORD NSA VECTOR */
   48              %MACRO VECTOR(NAME=B$VECTOR,STCLASS="BASED DALIGNED");
   49      DCL 1 NAME STCLASS,
   50            2 VSIZE UBIN(20) UNAL,            /* SIZE FIELD OF VECTOR                    */
   51            2 FLAGS BIT(9) UNAL,              /* FLAGS...                                */
   52            2 V BIT(2) UNAL,                  /* VECTOR TYPE FIELD                       */
   53            2 Z5 BIT(5) UNAL,                 /* UNUSED                                  */
   54            2 BASE UBIN(20) UNAL,             /* BASE FOR VECTOR                         */
   55            2 Z4 BIT(4) UNAL,                 /* UNUSED                                  */
   56            2 SEGID UBIN(12) UNAL;            /* SEGID                                   */
   57      %MEND;
   58
   59
   60      /* MACRO TO GETNERATE A TEMPLATE FOR AN NSA (& PL-6) POINTER */
   61      %MACRO POINTER(NAME=POINTER,STCLASS=BASED);
   62      DCL 1 NAME STCLASS ALIGNED,
   63            2 OFFSET UBIN(24) UNAL,           /* BIT OFFSET                              */
   64            2 SEGID BIT(12) UNAL;             /* SEGID                                   */
   65      %MEND;
   66
   67
   68      /* MACRO TO GENERATE A TEMPLATE FOR A STANDARD (TYPE = 0 OR 1)     */
   69      /* NSA DESCRIPTOR.                                                 */
   70      %MACRO T01DESCR (NAME=T01DESCR);
   71      DCL 1 NAME BASED ALIGNED,
   72            2 BOUND UBIN(20) UNAL,            /* BOUND FIELD OF DESCRIPTOR               */
   73            2 FLGS BIT(9) UNAL,               /* DESCRIPTOR FLAGS                        */
   74            2 WSR UBIN(3) UNAL,               /* WORKING SPACE REGISTER NUMBER           */
14:12 JUL 28 '97 B_MACROS_C.:E05SI                                         3    
   75            2 TYP UBIN(4) UNAL,               /* DESCRIPTOR TYPE FIELD                   */
   76            2 BASE SBIN WORD;                 /* BASE OF DESCRIPTOR                      */
   77      %MEND;
   78
   79
   80      /* MACRO TO GENERATE A TEMPLATE FOR A STANDARD (TYPE = 2 OR 3)     */
   81      /* NSA DESCRIPTOR.                                                 */
   82      %MACRO T23DESCR(NAME=T23DESCR);
   83      DCL 1 NAME BASED ALIGNED,
   84            2 BOUND UBIN(20) UNAL,            /* BOUND FIELD OF DESCRIPTOR               */
   85            2 FLGS BIT(3) UNAL,               /* DESCRIPTOR FLAGS                        */
   86            2 WSQ UBIN(9) UNAL,               /* WORKING SPACE QUARTER NUMBER           */
   87            2 TYP UBIN(4) UNAL,               /* DESCRIPTOR TYPE FIELD                   */
   88            2 BASE SBIN WORD;                 /* BASE OF DESCRIPTOR                      */
   89      %MEND;
   90
   91
   92      /* MACRO TO GENERATE A TEMPLATE FOR AN ENTRY DESCRIPTOR.           */
   93      %MACRO ENTDESCR(NAME=ENTDESCR);
   94      DCL 1 NAME BASED ALIGNED,
   95            2 ENTLOC UBIN(18) UNAL,           /* ENTRY LOCATION (NEW IC)                 */
   96            2 SAV BIT(1) UNAL,                /* SAVE PERMISSION BIT                     */
   97            2 ISEGNO UBIN(10) UNAL,           /* SEGID OF ISR IN NEW LSEG                */
   98            2 WSR UBIN(3) UNAL,               /* WORKING SPACE REGISTER NUMBER           */
   99            2 TYP UBIN(4) UNAL,               /* DESCRIPTOR TYPE FIELD                   */
  100            2 LSIZE UBIN(10) UNAL,            /* SIZE OF NEW LSEG (IN DESCRIPTORS)       */
  101            2 LBASE UBIN(26) UNAL;            /* DISP TO LSEG IN NEW WSQ (BYTES)         */
  102      %MEND;
  103
  104
  105      /* MACRO TO GENERATE A TEMPLATE FOR TEXTC STRINGS */
  106      %MACRO TEXTC(NAME=TEXTC,STCLASS=BASED);
  107      DCL 1 NAME STCLASS,
  108            2 SIZ UBIN(9) UNAL,
  109            2 TEXT CHAR(NAME.SIZ);
  110      %MEND;

