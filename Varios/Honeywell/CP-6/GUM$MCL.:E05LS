VERSION E05

PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:1    
        1        1        /*M* GUM$MCL  Handler for miscellaneous GU Monitor Services  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0     */
        8        8
        9        9        /*P* NAME: GUM$MCL
       10       10
       11       11             PURPOSE:  The GUM$MCL module contains several compile
       12       12                       units, each of which is the MCL handler for
       13       13                       one or more of the monitor services in the
       14       14                       'GU' FCG.  Also see GUE$MCL and GUS$SCHD for
       15       15                       other monitor service handlers in the 'GU' FCG.
       16       16
       17       17                       The routines currently in GUM$MCL are:
       18       18                             GUM$AFD
       19       19                             GUM$CHGUNIT
       20       20                             GUM$DRTN
       21       21                             GUM$ERRMSG
       22       22                             GUM$SPRIV
       23       23                             GUM$UNSHARE
       24       24        */
       25       25        %EJECT;
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:2    
       26       26
       27       27
       28       28        /*F* NAME: GUM$AFD
       29       29
       30       30             PURPOSE: This routine handles the M$AFD MCL for NODEADMIN
       31       31         */
       32       32
       33       33        GUM$AFD: PROC (PARM);
       34       34
       35       35                                                /* Include files                      */
       36       36        %INCLUDE B_ERRORS_C;
       37     1163        %INCLUDE G$BOBCAT_M;
       38     1183        %INCLUDE GH_SCHD_E;
       39     1279        %INCLUDE GH_SCHD_M;
       40     1423        %INCLUDE GU_MACROS_M;
       41     1582        %INCLUDE G_JIT_M;
       42     1847        %INCLUDE KL_MACRO_C;
       43     5199 S      %INCLUDE GU_LCP6_M;
       44     5200
       45     5201                                                /* Parameters                         */
       46     5202        %GUD_HAND_PARAMS (FPTN=PARM);
       47     5278
       48     5279                                                /* Based                              */
       49     5280        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS="BASED(G$BOBCAT$)");
       50     5293        %G$JIT (STCLASS="BASED(G$JIT$)");
       51     5707        %G$USER (FPTN="G$U(0:0)",STCLASS="BASED(G$USRT$)");
       52     5718        %KL_AFD (FPTN=KL$AFD,STCLASS="BASED(PARM.PTRS.PAR1$)");
       53     5758
       54     5759                                                /* Auto                               */
       55     5760    1   DCL USER UBIN;
       56     5761
       57     5762                                                /* Constant                           */
       58     5763        %VLP_ERRCODE (FPTN=E_NOTAUTH,FCG='GU',MID='M',MON='1'B,SEV=4,
       59     5764                      STCLASS=CONSTANT,ERR#=%E$NOTAUTH);
       60     5810        %VLP_ERRCODE (FPTN=E_NOFPRG,FCG='GU',MID='M',MON='1'B,SEV=4,
       61     5811                      STCLASS=CONSTANT,ERR#=%E$NOFPRG);
       62     5857
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:3    
       63     5858                                                /* Symrefs                            */
       64     5859    1   DCL G$BOBCAT$ PTR SYMREF;
       65     5860    1   DCL G$JIT$ PTR SYMREF;
       66     5861    1   DCL G$USRT$ PTR SYMREF;
       67     5862
       68     5863                                                /* Entrys                             */
       69     5864    1   DCL GHS$RUE ENTRY(4) ALTRET;
       70     5865        %EJECT;
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:4    
       71     5866
       72     5867    1      IF G$JIT.USR#~=1
       73     5868    2      THEN DO;
       74     5869    2           PARM.ERR=E_NOTAUTH;
       75     5870    2           RETURN;
       76     5871    2           END;
       77     5872
       78     5873    1      USER=1;
       79     5874    2      DO WHILE '1'B;
       80     5875    2           USER=USER+1;
       81     5876
       82     5877    2           IF USER>G$BOBCAT.MUIS
       83     5878    3           THEN DO;
       84     5879    3                PARM.ERR=E_NOFPRG;
       85     5880    3                RETURN;
       86     5881    3                END;
       87     5882        /*E* ERROR: GUM-E$NOFPRG-4
       88     5883           MESSAGE: That FPRG does not exist
       89     5884        */
       90     5885    2           IF G$U.SYSID(USER)=KL$AFD.SYSID THEN EXIT;
       91     5886    2           END;
       92     5887
       93     5888    1      CALL GHS$RUE (%GH_EVALIBFD,USER,KL$AFD,PARM.ERR);
       94     5889    1      RETURN;
       95     5890    1   END GUM$AFD;
       96     5891        %EOD;

PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:5    
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GUM$AFD.

   Procedure GUM$AFD requires 90 words for executable code.
   Procedure GUM$AFD requires 16 words of local(AUTO) storage.

PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:6    

 Object Unit name= GUM$AFD                                    File name= GUM$MCL.:E05TOU
 UTS= JUL 29 '97 22:15:52.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      4      4  GUM$AFD
    1   Proc  even  none    90     5A  GUM$AFD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GUM$AFD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 GHS$RUE
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$BOBCAT$                             G$JIT$                                G$USRT$
r    G$ROS$
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:7    


        1        1        /*M* GUM$MCL  Handler for miscellaneous GU Monitor Services  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0     */
        8        8
        9        9        /*P* NAME: GUM$MCL
       10       10
       11       11             PURPOSE:  The GUM$MCL module contains several compile
       12       12                       units, each of which is the MCL handler for
       13       13                       one or more of the monitor services in the
       14       14                       'GU' FCG.  Also see GUE$MCL and GUS$SCHD for
       15       15                       other monitor service handlers in the 'GU' FCG.
       16       16
       17       17                       The routines currently in GUM$MCL are:
       18       18                             GUM$AFD
       19       19                             GUM$CHGUNIT
       20       20                             GUM$DRTN
       21       21                             GUM$ERRMSG
       22       22                             GUM$SPRIV
       23       23                             GUM$UNSHARE
       24       24        */
       25       25        %EJECT;
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:8    
       26       26
       27       27
       28       28        /*F* NAME: GUM$AFD
       29       29
       30       30             PURPOSE: This routine handles the M$AFD MCL for NODEADMIN
       31       31         */
       32       32
       33       33        GUM$AFD: PROC (PARM);

     33   1 000000  D380 0000 0000  xent GUM$AFD         LNJ,B5   X6A_AUTO_1
          1 000003       0010 0001                       DC       16,1

       34       34
       35       35                                                /* Include files                      */
       36       36        %INCLUDE B_ERRORS_C;
       37     1163        %INCLUDE G$BOBCAT_M;
       38     1183        %INCLUDE GH_SCHD_E;
       39     1279        %INCLUDE GH_SCHD_M;
       40     1423        %INCLUDE GU_MACROS_M;
       41     1582        %INCLUDE G_JIT_M;
       42     1847        %INCLUDE KL_MACRO_C;
       43     5199 S      %INCLUDE GU_LCP6_M;
       44     5200
       45     5201                                                /* Parameters                         */
       46     5202        %GUD_HAND_PARAMS (FPTN=PARM);
       47     5278
       48     5279                                                /* Based                              */
       49     5280        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS="BASED(G$BOBCAT$)");
       50     5293        %G$JIT (STCLASS="BASED(G$JIT$)");
       51     5707        %G$USER (FPTN="G$U(0:0)",STCLASS="BASED(G$USRT$)");
       52     5718        %KL_AFD (FPTN=KL$AFD,STCLASS="BASED(PARM.PTRS.PAR1$)");
       53     5758
       54     5759                                                /* Auto                               */
       55     5760    1   DCL USER UBIN;
       56     5761
       57     5762                                                /* Constant                           */
       58     5763        %VLP_ERRCODE (FPTN=E_NOTAUTH,FCG='GU',MID='M',MON='1'B,SEV=4,
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:9    
       59     5764                      STCLASS=CONSTANT,ERR#=%E$NOTAUTH);
       60     5810        %VLP_ERRCODE (FPTN=E_NOFPRG,FCG='GU',MID='M',MON='1'B,SEV=4,
       61     5811                      STCLASS=CONSTANT,ERR#=%E$NOFPRG);
       62     5857
       63     5858                                                /* Symrefs                            */
       64     5859    1   DCL G$BOBCAT$ PTR SYMREF;
       65     5860    1   DCL G$JIT$ PTR SYMREF;
       66     5861    1   DCL G$USRT$ PTR SYMREF;
       67     5862
       68     5863                                                /* Entrys                             */
       69     5864    1   DCL GHS$RUE ENTRY(4) ALTRET;
       70     5865        %EJECT;
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:10   
       71     5866
       72     5867    1      IF G$JIT.USR#~=1

   5867   1 000005  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 000008  E846 0004                            LDR,R6   4,B6
          1 00000A  E570 00FF                            AND,R6   255,IMO
          1 00000C  6D01                                 CMV,R6   1
          1 00000D  0901 000B                            BE       s:5873,PREL

       73     5868    2      THEN DO;

       74     5869    2           PARM.ERR=E_NOTAUTH;

   5869   1 00000F  8C80 0000 0000  00                   LDI      E_NOTAUTH
          1 000012  DCC7 0004                            LDB,B5   @PARM,AUTO
          1 000014  8D45 0003                            SDI      3,B5

       75     5870    2           RETURN;

   5870   1 000016  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       76     5871    2           END;
       77     5872
       78     5873    1      USER=1;

   5873   1 000019  5C01                                 LDV,R5   1
          1 00001A  DF47 0006                            STR,R5   USER,AUTO

       79     5874    2      DO WHILE '1'B;

       80     5875    2           USER=USER+1;

   5875   1 00001C  8AC7 0006                            INC      USER,AUTO

       81     5876
       82     5877    2           IF USER>G$BOBCAT.MUIS

PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:11   
   5877   1 00001E  EC80 0000 0000  xsym                 LDB,B6   G$BOBCAT$
          1 000021  E847 0006                            LDR,R6   USER,AUTO
          1 000023  E946 000A                            CMR,R6   10,B6
          1 000025  0381 000B                            BLE      s:5885,PREL

       83     5878    3           THEN DO;

       84     5879    3                PARM.ERR=E_NOFPRG;

   5879   1 000027  8C80 0000 0002  00                   LDI      E_NOFPRG
          1 00002A  DCC7 0004                            LDB,B5   @PARM,AUTO
          1 00002C  8D45 0003                            SDI      3,B5

       85     5880    3                RETURN;

   5880   1 00002E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       86     5881    3                END;
       87     5882        /*E* ERROR: GUM-E$NOFPRG-4
       88     5883           MESSAGE: That FPRG does not exist
       89     5884        */
       90     5885    2           IF G$U.SYSID(USER)=KL$AFD.SYSID THEN EXIT;

   5885   1 000031  DCC7 0004                            LDB,B5   @PARM,AUTO
          1 000033  CCC5 0006                            LDB,B4   6,B5
          1 000035  BC80 0000 0000  xsym                 LDB,B3   G$USRT$
          1 000038  B856                                 LDR,R3   R6
          1 000039  3F18                                 MLV,R3   24
          1 00003A  3E13                                 ADV,R3   19
          1 00003B  D833                                 LDR,R5   ,B3,R3
          1 00003C  D944 0003                            CMR,R5   3,B4
          1 00003E  0901 0002                            BE       s:5888,PREL

       91     5886    2           END;

   5886   1 000040  0FDC                                 B        s:5875,SPREL

PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:12   
       92     5887
       93     5888    1      CALL GHS$RUE (%GH_EVALIBFD,USER,KL$AFD,PARM.ERR);

   5888   1 000041  ABF0 0012                            LAB,B2   18,IMO
          1 000043  9BC5 0003                            LAB,B1   3,B5
          1 000045  9FC7 000E                            STB,B1   USER+8,AUTO
          1 000047  CFC7 000C                            STB,B4   USER+6,AUTO
          1 000049  EBC7 0006                            LAB,B6   USER,AUTO
          1 00004B  EFC7 000A                            STB,B6   USER+4,AUTO
          1 00004D  AFC7 0008                            STB,B2   USER+2,AUTO
          1 00004F  BBC7 0008                            LAB,B3   USER+2,AUTO
          1 000051  CBF0 0400                            LAB,B4   1024,IMO
          1 000053  E380 0000 0000  xent                 LNJ,B6   GHS$RUE
          1 000056       0001                            DC       s:5889,PREL

       94     5889    1      RETURN;

   5889   1 000057  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       95     5890    1   END GUM$AFD;
       96     5891        %EOD;

PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:13   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GUM$AFD.
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:14   

 **** Variables and constants ****

  ****  Section 000 RoData GUM$AFD

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w STRC(32)    r     1 E_NOFPRG                   0-0-0/w STRC(32)    r     1 E_NOTAUTH

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PARM                     *0-0-0/w STRC(1280)  r     1 PARM
     6-0-0/w UBIN(16)    r     1 USER

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$BOBCAT$                  0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w PTR         r     1 G$USRT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1696)  r     1 G$BOBCAT                   0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w STRC(384)   r     1 G$U(0:0)                   0-0-0/w STRC(128)   r     1 KL$AFD


   Procedure GUM$AFD requires 90 words for executable code.
   Procedure GUM$AFD requires 16 words of local(AUTO) storage.
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:15   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:16   
          MINI XREF LISTING

E_NOFPRG
      5825**DCL      5879>>ASSIGN
E_NOTAUTH
      5778**DCL      5869>>ASSIGN
G$BOBCAT.MUIS
      5282**DCL      5877>>IF
G$BOBCAT$
      5859**DCL      5281--IMP-PTR  5877>>IF
G$JIT.ERRLOG
      5637**DCL      5640--REDEF
G$JIT.JSUNIT
      5376**DCL      5377--REDEF
G$JIT.MCLS
      5375**DCL      5375--REDEF
G$JIT.TMRZ
      5644**DCL      5645--REDEF
G$JIT.USER_EXTIME
      5368**DCL      5369--REDEF
G$JIT.USER_MEMTIME
      5371**DCL      5371--REDEF
G$JIT.USER_SVTIME
      5370**DCL      5370--REDEF
G$JIT.USR#
      5365**DCL      5867>>IF
G$JIT$
      5860**DCL      5307--IMP-PTR  5867>>IF
G$U.MISC
      5713**DCL      5713--REDEF
G$U.SYSID
      5716**DCL      5885>>IF
G$USRT$
      5861**DCL      5712--IMP-PTR  5885>>IF
PL6.E3A0      #001=GUM$AFD File=GUM$MCL.:E05TSI                                  TUE 07/29/97 22:15 Page:17   
GHS$RUE
      5864**DCL-ENT  5888--CALL
KL$AFD
      5731**DCL      5888<>CALL
KL$AFD.SYSID
      5751**DCL      5885>>IF
PARM
      5203**DCL        33--PROC
PARM.BND
      5263**DCL      5264--REDEF
PARM.DESC
      5265**DCL      5266--REDEF
PARM.ERR
      5229**DCL      5869<<ASSIGN   5879<<ASSIGN   5888<>CALL
PARM.MCL.CODE
      5210**DCL      5210--REDEF
PARM.PTRS
      5259**DCL      5260--REDEF    5262--REDEF    5262--REDEF    5262--REDEF
PARM.PTRS.PAR1$
      5259**DCL      5731--IMP-PTR  5885>>IF       5888>>CALL
USER
      5760**DCL      5873<<ASSIGN   5875<<ASSIGN   5875>>ASSIGN   5877>>IF       5885>>IF       5888<>CALL

PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:18   
       97        1        /*T***********************************************************/
       98        2        /*T*                                                         */
       99        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      100        4        /*T*                                                         */
      101        5        /*T***********************************************************/
      102        6        /*F* NAME: GUM$CHGUNIT
      103        7
      104        8             PURPOSE: This routine handler the M$CHGUNIT monitor service.
      105        9
      106       10        */
      107       11        GUM$CHGUNIT: PROC(GUD_PARAMS);
      108       12
      109       13        %INCLUDE G_JIT_M;
      110      278        %INCLUDE GU_MACROS_M;
      111      437 S      %INCLUDE GU_LCP6_M;
      112      438
      113      439                                                /* Input parameters                   */
      114      440        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
      115      516
      116      517                                                /* AUTO Storage                       */
      117      518    1   DCL USR$ PTR;
      118      519    1   DCL JIT$ PTR;
      119      520    1   DCL I UBIN;
      120      521    1   DCL UTEMP UBIN;
      121      522
      122      523                                                /*  Based Structures                  */
      123      524
      124      525        %G$JIT (FPTN=G$JIT,STCLASS="BASED(G$JIT$)");
      125      939
      126      940        %FPT_CHGUNIT (FPTN=FPT$CHGUNIT,STCLASS=BASED,VECTORS=NO);
      127      964
      128      965    1   DCL 1 JIT BASED(JIT$),
      129      966    1         2 UNIT(0:3) UBIN;
      130      967
      131      968    1   DCL 1 FPT BASED(USR$),
      132      969    1         2 UNIT(0:3) UBIN;
      133      970
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:19   
      134      971                                                /* EQUS                               */
      135      972        %INCLUDE UD_ERRORS_C;
      136     1014
      137     1015                                                /* Internal Data                      */
      138     1016        %VLP_ERRCODE (FPTN=EMAXCHG,ERR#=%E$MAXCHG,SEV=G_SEV_CONT#,
      139     1017                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      140     1063
      141     1064                                                /*  External data                     */
      142     1065    1   DCL G$JIT$ PTR SYMREF;
      143     1066
      144     1067                                                /* String Substitutions               */
      145     1068        %SUB FPT$=GUD_PARAMS.PTRS.PAR1$;
      146     1069        %EJECT;
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:20   
      147     1070
      148     1071    1      USR$ = ADDR(FPT$->FPT$CHGUNIT.UNIT0);
      149     1072
      150     1073    1      IF FPT$->FPT$CHGUNIT.STEP
      151     1074    1      THEN JIT$=ADDR(G$JIT.STEPUNIT);
      152     1075    1      ELSE JIT$=ADDR(G$JIT.JOBUNIT);
      153     1076
      154     1077    2      DO I=0 TO 3;
      155     1078    2           UTEMP = JIT.UNIT(I) + FPT.UNIT(I);
      156     1079    2           IF UTEMP > 61439
      157     1080    3           THEN DO;
      158     1081    3                UTEMP = 61439;
      159     1082    3                GUD_PARAMS.ERR = EMAXCHG;
      160     1083    3                END;
      161     1084    2           JIT.UNIT(I) = UTEMP;
      162     1085    2           END;
      163     1086    1      RETURN;
      164     1087        /*E* ERROR: GUM-E$MAXCHG-C
      165     1088             MESSAGE: Charges have exceeded field size.
      166     1089        */
      167     1090    1   END GUM$CHGUNIT;
      168     1091        %EOD;

PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:21   
--  Include file information  --

   UD_ERRORS_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GUM$CHGUNIT.

   Procedure GUM$CHGUNIT requires 71 words for executable code.
   Procedure GUM$CHGUNIT requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:22   

 Object Unit name= GUM$CHGUNIT                                File name= GUM$MCL.:E05TOU
 UTS= JUL 29 '97 22:16:38.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      2      2  GUM$CHGUNIT
    1   Proc  even  none    71     47  GUM$CHGUNIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GUM$CHGUNIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$JIT$                           r    G$ROS$
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:23   


       97        1        /*T***********************************************************/
       98        2        /*T*                                                         */
       99        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      100        4        /*T*                                                         */
      101        5        /*T***********************************************************/
      102        6        /*F* NAME: GUM$CHGUNIT
      103        7
      104        8             PURPOSE: This routine handler the M$CHGUNIT monitor service.
      105        9
      106       10        */
      107       11        GUM$CHGUNIT: PROC(GUD_PARAMS);

     11   1 000000  D380 0000 0000  xent GUM$CHGUNIT     LNJ,B5   X6A_AUTO_1
          1 000003       000C 0001                       DC       12,1

      108       12
      109       13        %INCLUDE G_JIT_M;
      110      278        %INCLUDE GU_MACROS_M;
      111      437 S      %INCLUDE GU_LCP6_M;
      112      438
      113      439                                                /* Input parameters                   */
      114      440        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
      115      516
      116      517                                                /* AUTO Storage                       */
      117      518    1   DCL USR$ PTR;
      118      519    1   DCL JIT$ PTR;
      119      520    1   DCL I UBIN;
      120      521    1   DCL UTEMP UBIN;
      121      522
      122      523                                                /*  Based Structures                  */
      123      524
      124      525        %G$JIT (FPTN=G$JIT,STCLASS="BASED(G$JIT$)");
      125      939
      126      940        %FPT_CHGUNIT (FPTN=FPT$CHGUNIT,STCLASS=BASED,VECTORS=NO);
      127      964
      128      965    1   DCL 1 JIT BASED(JIT$),
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:24   
      129      966    1         2 UNIT(0:3) UBIN;
      130      967
      131      968    1   DCL 1 FPT BASED(USR$),
      132      969    1         2 UNIT(0:3) UBIN;
      133      970
      134      971                                                /* EQUS                               */
      135      972        %INCLUDE UD_ERRORS_C;
      136     1014
      137     1015                                                /* Internal Data                      */
      138     1016        %VLP_ERRCODE (FPTN=EMAXCHG,ERR#=%E$MAXCHG,SEV=G_SEV_CONT#,
      139     1017                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      140     1063
      141     1064                                                /*  External data                     */
      142     1065    1   DCL G$JIT$ PTR SYMREF;
      143     1066
      144     1067                                                /* String Substitutions               */
      145     1068        %SUB FPT$=GUD_PARAMS.PTRS.PAR1$;
      146     1069        %EJECT;
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:25   
      147     1070
      148     1071    1      USR$ = ADDR(FPT$->FPT$CHGUNIT.UNIT0);

   1071   1 000005  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000007  DCC6 0006                            LDB,B5   6,B6
          1 000009  CBC5 0001                            LAB,B4   1,B5
          1 00000B  CFC7 0006                            STB,B4   USR$,AUTO

      149     1072
      150     1073    1      IF FPT$->FPT$CHGUNIT.STEP

   1073   1 00000D  8985                                 CMZ      ,B5
          1 00000E  0881 000A                            BAGE     s:1075,PREL

      151     1074    1      THEN JIT$=ADDR(G$JIT.STEPUNIT);

   1074   1 000010  BC80 0000 0000  xsym                 LDB,B3   G$JIT$
          1 000013  ABC3 0038                            LAB,B2   56,B3
          1 000015  AFC7 0008                            STB,B2   JIT$,AUTO
          1 000017  0F81 0008                            B        s:1077,PREL

      152     1075    1      ELSE JIT$=ADDR(G$JIT.JOBUNIT);

   1075   1 000019  BC80 0000 0000  xsym                 LDB,B3   G$JIT$
          1 00001C  ABC3 00B8                            LAB,B2   184,B3
          1 00001E  AFC7 0008                            STB,B2   JIT$,AUTO

      153     1076
      154     1077    2      DO I=0 TO 3;

   1077   1 000020  8747 000A                            CL       I,AUTO

      155     1078    2           UTEMP = JIT.UNIT(I) + FPT.UNIT(I);

   1078   1 000022  ECC7 0008                            LDB,B6   JIT$,AUTO
          1 000024  B847 000A                            LDR,R3   I,AUTO
          1 000026  DCC7 0006                            LDB,B5   USR$,AUTO
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:26   
          1 000028  E836                                 LDR,R6   ,B6,R3
          1 000029  EA35                                 ADD,R6   ,B5,R3
          1 00002A  EF47 000B                            STR,R6   UTEMP,AUTO

      156     1079    2           IF UTEMP > 61439

   1079   1 00002C  E970 EFFF                            CMR,R6   -4097,IMO
          1 00002E  0381 000C                            BLE      s:1084,PREL

      157     1080    3           THEN DO;

      158     1081    3                UTEMP = 61439;

   1081   1 000030  E870 EFFF                            LDR,R6   -4097,IMO
          1 000032  EF47 000B                            STR,R6   UTEMP,AUTO

      159     1082    3                GUD_PARAMS.ERR = EMAXCHG;

   1082   1 000034  8C80 0000 0000  00                   LDI      EMAXCHG
          1 000037  CCC7 0004                            LDB,B4   @GUD_PARAMS,AUTO
          1 000039  8D44 0003                            SDI      3,B4

      160     1083    3                END;

      161     1084    2           JIT.UNIT(I) = UTEMP;

   1084   1 00003B  E847 000B                            LDR,R6   UTEMP,AUTO
          1 00003D  EF36                                 STR,R6   ,B6,R3

      162     1085    2           END;

   1085   1 00003E  8AC7 000A                            INC      I,AUTO
          1 000040  D847 000A                            LDR,R5   I,AUTO
          1 000042  5D03                                 CMV,R5   3
          1 000043  03DF                                 BLE      s:1078,SPREL

      163     1086    1      RETURN;
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:27   

   1086   1 000044  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      164     1087        /*E* ERROR: GUM-E$MAXCHG-C
      165     1088             MESSAGE: Charges have exceeded field size.
      166     1089        */
      167     1090    1   END GUM$CHGUNIT;
      168     1091        %EOD;

PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:28   
--  Include file information  --

   UD_ERRORS_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GUM$CHGUNIT.
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:29   

 **** Variables and constants ****

  ****  Section 000 RoData GUM$CHGUNIT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 EMAXCHG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @GUD_PARAMS               *0-0-0/w STRC(1280)  r     1 GUD_PARAMS
     A-0-0/w UBIN(16)    r     1 I                          8-0-0/w PTR         r     1 JIT$
     6-0-0/w PTR         r     1 USR$                       B-0-0/w UBIN(16)    r     1 UTEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(64)    r     1 FPT                        0-0-0/d STRC(80)    r     1 FPT$CHGUNIT
     0-0-0/w STRC(5616)  r     1 G$JIT                      0-0-0/w STRC(64)    r     1 JIT


   Procedure GUM$CHGUNIT requires 71 words for executable code.
   Procedure GUM$CHGUNIT requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:30   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:31   
          MINI XREF LISTING

EMAXCHG
      1031**DCL      1082>>ASSIGN
FPT.UNIT
       969**DCL      1078>>ASSIGN
FPT$CHGUNIT.STEP
       960**DCL      1073>>IF
FPT$CHGUNIT.UNIT0
       960**DCL      1071--ASSIGN
G$JIT.ERRLOG
       869**DCL       872--REDEF
G$JIT.JOBUNIT
       929**DCL      1075--ASSIGN
G$JIT.JSUNIT
       608**DCL       609--REDEF
G$JIT.MCLS
       607**DCL       607--REDEF
G$JIT.STEPUNIT
       609**DCL      1074--ASSIGN
G$JIT.TMRZ
       876**DCL       877--REDEF
G$JIT.USER_EXTIME
       600**DCL       601--REDEF
G$JIT.USER_MEMTIME
       603**DCL       603--REDEF
G$JIT.USER_SVTIME
       602**DCL       602--REDEF
G$JIT$
      1065**DCL       539--IMP-PTR  1074>>ASSIGN   1075>>ASSIGN
GUD_PARAMS
       441**DCL        11--PROC
GUD_PARAMS.BND
       501**DCL       502--REDEF
PL6.E3A0      #002=GUM$CHGUNIT File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:16 Page:32   
GUD_PARAMS.DESC
       503**DCL       504--REDEF
GUD_PARAMS.ERR
       467**DCL      1082<<ASSIGN
GUD_PARAMS.MCL.CODE
       448**DCL       448--REDEF
GUD_PARAMS.PTRS
       497**DCL       498--REDEF     500--REDEF     500--REDEF     500--REDEF
GUD_PARAMS.PTRS.PAR1$
       497**DCL      1071>>ASSIGN   1073>>IF
I
       520**DCL      1077<<DOINDEX  1078>>ASSIGN   1078>>ASSIGN   1084>>ASSIGN
JIT.UNIT
       966**DCL      1078>>ASSIGN   1084<<ASSIGN
JIT$
       519**DCL       965--IMP-PTR  1074<<ASSIGN   1075<<ASSIGN   1078>>ASSIGN   1084>>ASSIGN
USR$
       518**DCL       968--IMP-PTR  1071<<ASSIGN   1078>>ASSIGN
UTEMP
       521**DCL      1078<<ASSIGN   1079>>IF       1081<<ASSIGN   1084>>ASSIGN

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:33   
      169        1        /*T***********************************************************/
      170        2        /*T*                                                         */
      171        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      172        4        /*T*                                                         */
      173        5        /*T***********************************************************/
      174        6
      175        7
      176        8        /*F* NAME: GUM$DRTN
      177        9
      178       10             PURPOSE:  This routine handler the M$DRTN monitor service.
      179       11
      180       12        */
      181       13
      182       14        GUM$DRTN: PROC(PARAMS);
      183       15
      184       16        %INCLUDE G_JIT_M;
      185      281        %INCLUDE G_HJIT_M;
      186      426 S      %INCLUDE GH_LCP6_M;
      187      427 S      %INCLUDE GU_LCP6_M;
      188      428        %INCLUDE GU_MACROS_M;
      189      587
      190      588 S      %INCLUDE G_LCP6_E;
      191      589        %INCLUDE J_ERRORS_C;
      192      676        %INCLUDE UD_ERRORS_C;
      193      718        %INCLUDE UE_ERRORS_C;
      194      736
      195      737                                                /* Input parameters                   */
      196      738        %GUD_HAND_PARAMS (FPTN=PARAMS);
      197      814
      198      815                                                /* AUTO Storage                       */
      199      816    1   DCL T$ PTR;
      200      817    1   DCL PGS UBIN;
      201      818    1   DCL NEW_ECC UBIN;
      202      819    1   DCL OLD_ECC UBIN;
      203      820        %GUE_ENVTCB_PARAMS (FPTN=ENVTCB_PARAMS,STCLASS=AUTO);
      204      945
      205      946        %VLP_ERRCODE (FPTN=ERR, STCLASS=AUTO);
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:34   
      206      992
      207      993
      208      994                                                /* Based Structures                   */
      209      995    1   DCL B$JERR(0:0) BASED BIT(32) WALIGNED;
      210      996        %G$ECCB (STCLASS=BASED);
      211     1072        %G$ECCB (FPTN=G$UECCB,ARRAYED=YES);
      212     1148        %G$EXCFR;
      213     1530        %G$TCB;
      214     1551        %G$JIT (STCLASS="BASED(G$JIT$)");
      215     1965        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
      216     2014        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
      217     4988
      218     4989        %FPT_DRTN (FPTN=FPT$DRTN,STCLASS=BASED,VECTORS=NO);
      219     5013
      220     5014                                                /* Internal Data                      */
      221     5015    1   DCL 1 JERR CONSTANT,
      222     5016              %VLP_ERRCODE (FPTN=*,LVL=2,STCLASS=CONSTANT,FCG=GJ,MID=M,MON='1'B,
      223     5017                            ERR#=0,SEV=%G_SEV_CONT#,LAST=NO);
      224     5063              %VLP_ERRCODE (FPTN=*,LVL=2,STCLASS=CONSTANT,FCG=GJ,MID=M,MON='1'B,
      225     5064                            ERR#=%E$ERRPMME,SEV=%G_SEV_ERR#,LAST=NO);
      226     5110              %VLP_ERRCODE (FPTN=*,LVL=2,STCLASS=CONSTANT,FCG=GJ,MID=M,MON='1'B,
      227     5111                            ERR#=%E$XXXPMME,SEV=%G_SEV_XXX#,LAST=YES);
      228     5157
      229     5158        %VLP_ERRCODE (FPTN=EDOMAIN,ERR#=%E$DOMAIN,SEV=G_SEV_ERROR#,
      230     5159                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      231     5205        %VLP_ERRCODE (FPTN=EEKEY,ERR#=%E$EKEY,SEV=G_SEV_ERROR#,
      232     5206                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      233     5252        %VLP_ERRCODE (FPTN=EALTRET,ERR#=%E$ALTRET,SEV=G_SEV_ERROR#,
      234     5253                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      235     5299        %VLP_ERRCODE (FPTN=ENOCONTROL,ERR#=%E$NOCONTROL,SEV=G_SEV_ERROR#,
      236     5300                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      237     5346        %VLP_ERRCODE (FPTN=ESIMULATED,ERR#=%E$SIMULATED,SEV=G_SEV_ERROR#,
      238     5347                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      239     5393
      240     5394                                                /* External Data                      */
      241     5395    1   DCL G$UHJIT$ PTR SYMREF READONLY;
      242     5396    1   DCL G$U_ECCB$ PTR SYMREF READONLY;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:35   
      243     5397    1   DCL G$TCB$ PTR SYMREF READONLY;
      244     5398    1   DCL G$JIT$ PTR SYMREF READONLY;
      245     5399    1   DCL G$LOW_MEM$ PTR SYMREF READONLY;
      246     5400
      247     5401                                                /* External Routines                  */
      248     5402    1   DCL GJS$ABORTX ENTRY(1);
      249     5403    1   DCL GMA$REL_ACCTMEM ENTRY(1) ALTRET;
      250     5404    1   DCL GJS$RUND_FD ENTRY(1);
      251     5405    1   DCL GUE$ENVTCB ENTRY(1) ALTRET;
      252     5406
      253     5407                                                /* String Substitutions               */
      254     5408        %G$JIT_E;
      255     5470        %SUB G$TCB = G$TCB$->G$TCB;
      256     5471        %EJECT;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:36   
      257     5472        /*D* NAME: GUM$DRTN
      258     5473        */
      259     5474
      260     5475        /*D* If the M$DRTN request was issued by any domain other than
      261     5476             the debugger, it is an error.
      262     5477        */
      263     5478    1      IF G$UHJIT.DMN.ID ~= %G_DMN_DB_SVC#
      264     5479    2      THEN DO;
      265     5480    2           PARAMS.ERR = EDOMAIN;
      266     5481    2           RETURN;
      267     5482    2           END;
      268     5483
      269     5484        /*E* ERROR: GUM-E$DOMAIN-E
      270     5485             MESSAGE: M$DRTN allowed only from the debugger.
      271     5486        */
      272     5487
      273     5488        /*D* If DELTA is telling us to set up the user TCB for exceptional
      274     5489             condition processing, first make sure the user has a handler
      275     5490             for the specified condition.
      276     5491        */
      277     5492    1      IF PARAMS.PTRS.PAR1$->FPT$DRTN.SETECC
      278     5493    2      THEN DO;
      279     5494    2           NEW_ECC = PARAMS.PTRS.PAR1$->FPT$DRTN.ECC;
      280     5495    2           IF NEW_ECC > %G_TRAP#
      281     5496    2             OR G$U_ECCB$->G$UECCB.HAND$(NEW_ECC) = ENTADDR(NIL)
      282     5497    3           THEN DO;
      283     5498    3                PARAMS.ERR = ENOCONTROL;
      284     5499    3                RETURN;
      285     5500    3                END;
      286     5501
      287     5502        /*D* The trap# in the TSA may indicate that a frame has already been
      288     5503             put of the user TCB.  If so, do any modification of that frame
      289     5504             necessary to make it look like the new specifie3d ecc type.
      290     5505        */
      291     5506    2           OLD_ECC = G$UHJIT.TSA_USR.I.TRAP#;
      292     5507
      293     5508    2           IF (OLD_ECC >= %G_FPRG_EVENT#) AND (OLD_ECC <= %G_FPRG_MCLTRAP#)
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:37   
      294     5509    3           THEN DO/*when there is a frame there*/;
      295     5510    3                OLD_ECC = OLD_ECC - %G_FPRG_EVENT#;
      296     5511
      297     5512    3                IF NEW_ECC ~= OLD_ECC
      298     5513    4                THEN DO;
      299     5514    4                     G$TCB.STK$->G$EXCFR.ECC = NEW_ECC;
      300     5515    4                     ERR = G$TCB.STK$->G$EXCFR.TRLR.ERR;
      301     5516    4                     G$TCB.STK$->G$EXCFR.TRLR = '0'B;
      302     5517    4                     G$TCB.STK$->G$EXCFR.TRLR.ERR = ERR;
      303     5518    4                     G$TCB.AVSZ = G$TCB.AVSZ + G$TCB.CURRSZ - SIZEW(G$EXCFR);
      304     5519    4                     G$TCB.CURRSZ = SIZEW(G$EXCFR);
      305     5520
      306     5521    4                     IF OLD_ECC = %G_XCON#
      307     5522    5                     THEN DO;
      308     5523    5                          G$U_ECCB$->G$ECCB.FLAGS.XCONP = '0'B;
      309     5524    5                          END;
      310     5525
      311     5526    4                     END/*do if new_ecc ~= old_ecc*/;
      312     5527    3                ELSE/*new_ecc = old_ecc*/;
      313     5528
      314     5529    3                G$UHJIT.TSA_USR.P$$ = G$U_ECCB$->G$UECCB.HAND$(NEW_ECC);
      315     5530    3                END/*do if there is a frame on the TCB*/;
      316     5531
      317     5532    3           ELSE DO/*we must build the frame*/;
      318     5533    3                ENVTCB_PARAMS = '0'B;
      319     5534    3                ENVTCB_PARAMS.ECC = NEW_ECC;
      320     5535
      321     5536    3                IF (OLD_ECC >= %G_FPRG_EXIT#) AND (OLD_ECC <= %G_HOST_INT#)
      322     5537    4                THEN DO;
      323     5538    4                     IF OLD_ECC <= %G_FPRG_XXX#
      324     5539    5                     THEN DO;
      325     5540    5                          T$ = ADDR(JERR);
      326     5541    5                          ENVTCB_PARAMS.ECINFO.ERR = T$->B$JERR(OLD_ECC - %G_FPRG_XXX#)
              5541                                   ;
      327     5542    5                          END;
      328     5543    4                     ELSE ENVTCB_PARAMS.ECINFO.ERR = '0'B;
      329     5544    4                     END;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:38   
      330     5545    3                ELSE ENVTCB_PARAMS.ECINFO.ERR = ESIMULATED;
      331     5546
      332     5547        /*E* ERROR: GUM-E$SIMULATED-E
      333     5548             MESSAGE: Exception Condition simulated under DELTA.
      334     5549        */
      335     5550
      336     5551    3                ENVTCB_PARAMS.P$$ = G$U_ECCB$->G$UECCB.HAND$(NEW_ECC);
      337     5552    3                ENVTCB_PARAMS.ENV$ = ADDR(G$UHJIT.TSA_USR);
      338     5553    3                ENVTCB_PARAMS.TCB$ = ADDR(NIL);
      339     5554
      340     5555    3                CALL GUE$ENVTCB(ENVTCB_PARAMS);
      341     5556    3                END/*do if no frame currently on the TCB*/;
      342     5557
      343     5558    2           IF NEW_ECC = %G_XCON#
      344     5559    3           THEN DO;
      345     5560    3                G$U_ECCB$->G$ECCB.FLAGS.XCONP = '1'B;
      346     5561    3                END;
      347     5562    2           END/*do if fpt.setecc*/;
      348     5563
      349     5564        /*D* If this is a 'QUIT' request, the user's request for exit
      350     5565             control (if any) is reset, JIT.ERR and JIT.RNST are set
      351     5566             to reflect the QUIT condition, the FD's M$DRTN TSA is
      352     5567             returned to the available pool, and the GJS$ABORTX routine
      353     5568             is called to complete the QUIT process.  An ALTRET to the
      354     5569             trap handler then causes GJI$INIT_USR to be entered.
      355     5570        */
      356     5571    1      IF PARAMS.PTRS.PAR1$->FPT$DRTN.QUIT
      357     5572    2      THEN DO;
      358     5573    2           G$U_ECCB$->G$ECCB.XCON$ = ENTADDR(NIL);
      359     5574    2           PARAMS.ERR = EEKEY;
      360     5575    2           G$JIT.RNST = (G$JIT.RNST | %G_RS_EKEY#);
      361     5576    2           CALL GJS$RUND_FD(PGS);
      362     5577    2           CALL GMA$REL_ACCTMEM(PGS);
      363     5578    2           CALL RELEASE_TSA;
      364     5579    2           G$UHJIT.DMN.ID = %G_DMN_USR_SVC#;
      365     5580    2           CALL GJS$ABORTX(PARAMS.ERR);
      366     5581    2           G$UHJIT.TSA_USR.I.TRAP# = 0;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:39   
      367     5582    2           GOTO DO_ALTRET;
      368     5583    2           END;
      369     5584
      370     5585        /*E* ERROR: GUM-E$EKEY-E
      371     5586             MESSAGE: FPRG terminated via 'QUIT' command to debugger.
      372     5587        */
      373     5588
      374     5589        /*D* If this is a request to 'KILL FD' and continue executing the
      375     5590             FPRG, the debugger is dis-associated by calling the GJS$RUND_FD
      376     5591             routine, and the M$DRTN TSA is returned to the available pool.
      377     5592
      378     5593             The error code is set to E$ALTRET which is used to tell
      379     5594             the MCL handler that the existing TSA frame is not to be
      380     5595             modified in any way when returning to the user.
      381     5596             The TRAP# in the TSA is set to zero (just to be sure).
      382     5597        */
      383     5598    1      IF PARAMS.PTRS.PAR1$->FPT$DRTN.KILLFD
      384     5599    2      THEN DO;
      385     5600    2           CALL GJS$RUND_FD(PGS);
      386     5601    2           CALL GMA$REL_ACCTMEM(PGS);
      387     5602    2           CALL RELEASE_TSA;
      388     5603    2           G$UHJIT.TSA_USR.I.TRAP# = 0;
      389     5604    2           G$UHJIT.DMN.ID = %G_DMN_USR_SVC#;
      390     5605
      391     5606    2   DO_ALTRET: ;
      392     5607    2           PARAMS.ERR = EALTRET;
      393     5608    2           RETURN;
      394     5609    2           END;
      395     5610
      396     5611        %EJECT;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:40   
      397     5612        /*I* NAME: RELEASE_TSA
      398     5613
      399     5614             PURPOSE:  To return the debugger's M$DRTN TSA to the
      400     5615                       chain of available TSAs.
      401     5616
      402     5617        */
      403     5618    1   RELEASE_TSA: PROC;
      404     5619    2      G$LOW_MEM.NATSAP1$ = ADDR(G$UHJIT.TSA_DB.TSAL$);
      405     5620    2      G$UHJIT.TSA_DB.TSAL$ = ADDR(G$UHJIT.TSA_CP.TSAL$);
      406     5621    2      G$UHJIT.TSA_USR.TSAL$ = ADDR(NIL);
      407     5622    2      G$UHJIT.ISA_USR.TSAP$ = ADDR(G$UHJIT.TSA_USR);
      408     5623    2      RETURN;
      409     5624    2   END RELEASE_TSA;
      410     5625
      411     5626    1   END GUM$DRTN;
      412     5627        %EOD;

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:41   
--  Include file information  --

   UE_ERRORS_C.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GUM$DRTN.

   Procedure GUM$DRTN requires 362 words for executable code.
   Procedure GUM$DRTN requires 32 words of local(AUTO) storage.

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:42   

 Object Unit name= GUM$DRTN                                   File name= GUM$MCL.:E05TOU
 UTS= JUL 29 '97 22:17:04.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     16     10  GUM$DRTN
    1   Proc  even  none   362    16A  GUM$DRTN
    2  RoData even  none     2      2  GUM$DRTN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GUM$DRTN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GUE$ENVTCB
         yes           Std       1 GJS$RUND_FD
 yes     yes           Std       1 GMA$REL_ACCTMEM
         yes           Std       1 GJS$ABORTX
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:43   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$UHJIT$                         r    G$U_ECCB$                        r    G$TCB$
r    G$JIT$                           r    G$LOW_MEM$                       r    G$ROS$
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:44   


      169        1        /*T***********************************************************/
      170        2        /*T*                                                         */
      171        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      172        4        /*T*                                                         */
      173        5        /*T***********************************************************/
      174        6
      175        7
      176        8        /*F* NAME: GUM$DRTN
      177        9
      178       10             PURPOSE:  This routine handler the M$DRTN monitor service.
      179       11
      180       12        */
      181       13
      182       14        GUM$DRTN: PROC(PARAMS);

     14   1 000000  D380 0000 0000  xent GUM$DRTN        LNJ,B5   X6A_AUTO_1
          1 000003       0020 0001                       DC       32,1

      183       15
      184       16        %INCLUDE G_JIT_M;
      185      281        %INCLUDE G_HJIT_M;
      186      426 S      %INCLUDE GH_LCP6_M;
      187      427 S      %INCLUDE GU_LCP6_M;
      188      428        %INCLUDE GU_MACROS_M;
      189      587
      190      588 S      %INCLUDE G_LCP6_E;
      191      589        %INCLUDE J_ERRORS_C;
      192      676        %INCLUDE UD_ERRORS_C;
      193      718        %INCLUDE UE_ERRORS_C;
      194      736
      195      737                                                /* Input parameters                   */
      196      738        %GUD_HAND_PARAMS (FPTN=PARAMS);
      197      814
      198      815                                                /* AUTO Storage                       */
      199      816    1   DCL T$ PTR;
      200      817    1   DCL PGS UBIN;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:45   
      201      818    1   DCL NEW_ECC UBIN;
      202      819    1   DCL OLD_ECC UBIN;
      203      820        %GUE_ENVTCB_PARAMS (FPTN=ENVTCB_PARAMS,STCLASS=AUTO);
      204      945
      205      946        %VLP_ERRCODE (FPTN=ERR, STCLASS=AUTO);
      206      992
      207      993
      208      994                                                /* Based Structures                   */
      209      995    1   DCL B$JERR(0:0) BASED BIT(32) WALIGNED;
      210      996        %G$ECCB (STCLASS=BASED);
      211     1072        %G$ECCB (FPTN=G$UECCB,ARRAYED=YES);
      212     1148        %G$EXCFR;
      213     1530        %G$TCB;
      214     1551        %G$JIT (STCLASS="BASED(G$JIT$)");
      215     1965        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
      216     2014        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
      217     4988
      218     4989        %FPT_DRTN (FPTN=FPT$DRTN,STCLASS=BASED,VECTORS=NO);
      219     5013
      220     5014                                                /* Internal Data                      */
      221     5015    1   DCL 1 JERR CONSTANT,
      222     5016              %VLP_ERRCODE (FPTN=*,LVL=2,STCLASS=CONSTANT,FCG=GJ,MID=M,MON='1'B,
      223     5017                            ERR#=0,SEV=%G_SEV_CONT#,LAST=NO);
      224     5063              %VLP_ERRCODE (FPTN=*,LVL=2,STCLASS=CONSTANT,FCG=GJ,MID=M,MON='1'B,
      225     5064                            ERR#=%E$ERRPMME,SEV=%G_SEV_ERR#,LAST=NO);
      226     5110              %VLP_ERRCODE (FPTN=*,LVL=2,STCLASS=CONSTANT,FCG=GJ,MID=M,MON='1'B,
      227     5111                            ERR#=%E$XXXPMME,SEV=%G_SEV_XXX#,LAST=YES);
      228     5157
      229     5158        %VLP_ERRCODE (FPTN=EDOMAIN,ERR#=%E$DOMAIN,SEV=G_SEV_ERROR#,
      230     5159                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      231     5205        %VLP_ERRCODE (FPTN=EEKEY,ERR#=%E$EKEY,SEV=G_SEV_ERROR#,
      232     5206                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      233     5252        %VLP_ERRCODE (FPTN=EALTRET,ERR#=%E$ALTRET,SEV=G_SEV_ERROR#,
      234     5253                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      235     5299        %VLP_ERRCODE (FPTN=ENOCONTROL,ERR#=%E$NOCONTROL,SEV=G_SEV_ERROR#,
      236     5300                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      237     5346        %VLP_ERRCODE (FPTN=ESIMULATED,ERR#=%E$SIMULATED,SEV=G_SEV_ERROR#,
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:46   
      238     5347                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      239     5393
      240     5394                                                /* External Data                      */
      241     5395    1   DCL G$UHJIT$ PTR SYMREF READONLY;
      242     5396    1   DCL G$U_ECCB$ PTR SYMREF READONLY;
      243     5397    1   DCL G$TCB$ PTR SYMREF READONLY;
      244     5398    1   DCL G$JIT$ PTR SYMREF READONLY;
      245     5399    1   DCL G$LOW_MEM$ PTR SYMREF READONLY;
      246     5400
      247     5401                                                /* External Routines                  */
      248     5402    1   DCL GJS$ABORTX ENTRY(1);
      249     5403    1   DCL GMA$REL_ACCTMEM ENTRY(1) ALTRET;
      250     5404    1   DCL GJS$RUND_FD ENTRY(1);
      251     5405    1   DCL GUE$ENVTCB ENTRY(1) ALTRET;
      252     5406
      253     5407                                                /* String Substitutions               */
      254     5408        %G$JIT_E;
      255     5470        %SUB G$TCB = G$TCB$->G$TCB;
      256     5471        %EJECT;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:47   
      257     5472        /*D* NAME: GUM$DRTN
      258     5473        */
      259     5474
      260     5475        /*D* If the M$DRTN request was issued by any domain other than
      261     5476             the debugger, it is an error.
      262     5477        */
      263     5478    1      IF G$UHJIT.DMN.ID ~= %G_DMN_DB_SVC#

   5478   1 000005  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          1 000008  E846 007E                            LDR,R6   126,B6
          1 00000A  6D01                                 CMV,R6   1
          1 00000B  0901 000B                            BE       s:5492,PREL

      264     5479    2      THEN DO;

      265     5480    2           PARAMS.ERR = EDOMAIN;

   5480   1 00000D  8C80 0000 0006  00                   LDI      EDOMAIN
          1 000010  DCC7 0004                            LDB,B5   @PARAMS,AUTO
          1 000012  8D45 0003                            SDI      3,B5

      266     5481    2           RETURN;

   5481   1 000014  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      267     5482    2           END;
      268     5483
      269     5484        /*E* ERROR: GUM-E$DOMAIN-E
      270     5485             MESSAGE: M$DRTN allowed only from the debugger.
      271     5486        */
      272     5487
      273     5488        /*D* If DELTA is telling us to set up the user TCB for exceptional
      274     5489             condition processing, first make sure the user has a handler
      275     5490             for the specified condition.
      276     5491        */
      277     5492    1      IF PARAMS.PTRS.PAR1$->FPT$DRTN.SETECC

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:48   
   5492   1 000017  DCC7 0004                            LDB,B5   @PARAMS,AUTO
          1 000019  CCC5 0006                            LDB,B4   6,B5
          1 00001B  8984                                 CMZ      ,B4
          1 00001C  0881 00A6                            BAGE     s:5571,PREL

      278     5493    2      THEN DO;

      279     5494    2           NEW_ECC = PARAMS.PTRS.PAR1$->FPT$DRTN.ECC;

   5494   1 00001E  D2C4 0001                            LLH,R5   1,B4
          1 000020  DF47 0009                            STR,R5   NEW_ECC,AUTO

      280     5495    2           IF NEW_ECC > %G_TRAP#

   5495   1 000022  5D03                                 CMV,R5   3
          1 000023  0301 000B                            BG       s:5498,PREL
          1 000025  BC80 0000 0000  xsym                 LDB,B3   G$U_ECCB$
          1 000028  B855                                 LDR,R3   R5
          1 000029  ACB3                                 LDB,B2   ,B3,R3
          1 00002A  AD80 0000 0000  02                   CMB,B2   0
          1 00002D  0981 0009                            BNE      s:5506,PREL

      281     5496    2             OR G$U_ECCB$->G$UECCB.HAND$(NEW_ECC) = ENTADDR(NIL)
      282     5497    3           THEN DO;

      283     5498    3                PARAMS.ERR = ENOCONTROL;

   5498   1 00002F  8C80 0000 000C  00                   LDI      ENOCONTROL
          1 000032  8D45 0003                            SDI      3,B5

      284     5499    3                RETURN;

   5499   1 000034  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      285     5500    3                END;
      286     5501
      287     5502        /*D* The trap# in the TSA may indicate that a frame has already been
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:49   
      288     5503             put of the user TCB.  If so, do any modification of that frame
      289     5504             necessary to make it look like the new specifie3d ecc type.
      290     5505        */
      291     5506    2           OLD_ECC = G$UHJIT.TSA_USR.I.TRAP#;

   5506   1 000037  C2C6 00B8                            LLH,R4   184,B6
          1 000039  CF47 000A                            STR,R4   OLD_ECC,AUTO

      292     5507
      293     5508    2           IF (OLD_ECC >= %G_FPRG_EVENT#) AND (OLD_ECC <= %G_FPRG_MCLTRAP#)

   5508   1 00003B  4D38                                 CMV,R4   56
          1 00003C  0201 003A                            BL       s:5533,PREL
          1 00003E  4D3B                                 CMV,R4   59
          1 00003F  0301 0037                            BG       s:5533,PREL

      294     5509    3           THEN DO/*when there is a frame there*/;

      295     5510    3                OLD_ECC = OLD_ECC - %G_FPRG_EVENT#;

   5510   1 000041  4EC8                                 ADV,R4   -56
          1 000042  CF47 000A                            STR,R4   OLD_ECC,AUTO

      296     5511
      297     5512    3                IF NEW_ECC ~= OLD_ECC

   5512   1 000044  B954                                 CMR,R3   R4
          1 000045  0901 0029                            BE       s:5529,PREL

      298     5513    4                THEN DO;

      299     5514    4                     G$TCB.STK$->G$EXCFR.ECC = NEW_ECC;

   5514   1 000047  9C80 0000 0000  xsym                 LDB,B1   G$TCB$
          1 00004A  ECC1 0002                            LDB,B6   2,B1
          1 00004C  BF46 0001                            STR,R3   1,B6

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:50   
      300     5515    4                     ERR = G$TCB.STK$->G$EXCFR.TRLR.ERR;

   5515   1 00004E  ECC1 0002                            LDB,B6   2,B1
          1 000050  8CC6 002B                            LDI      43,B6
          1 000052  8D47 001A                            SDI      ERR,AUTO

      301     5516    4                     G$TCB.STK$->G$EXCFR.TRLR = '0'B;

   5516   1 000054  5C0A                                 LDV,R5   10
          1 000055  0021                                 ALR      ;
          1 000056       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000058       4006 0029                                ALPHANUM(41,B6,,R5,FILL)

      302     5517    4                     G$TCB.STK$->G$EXCFR.TRLR.ERR = ERR;

   5517   1 00005A  437F                                 CSYNC    s:5516+5,SPREL
          1 00005B  ECC1 0002                            LDB,B6   2,B1
          1 00005D  8D46 002B                            SDI      43,B6

      303     5518    4                     G$TCB.AVSZ = G$TCB.AVSZ + G$TCB.CURRSZ - SIZEW(G$EXCFR);

   5518   1 00005F  A841 0004                            LDR,R2   4,B1
          1 000061  AA41 0005                            ADD,R2   5,B1
          1 000063  2ED2                                 ADV,R2   -46
          1 000064  AF41 0004                            STR,R2   4,B1

      304     5519    4                     G$TCB.CURRSZ = SIZEW(G$EXCFR);

   5519   1 000066  1C2E                                 LDV,R1   46
          1 000067  9F41 0005                            STR,R1   5,B1

      305     5520
      306     5521    4                     IF OLD_ECC = %G_XCON#

   5521   1 000069  4D02                                 CMV,R4   2
          1 00006A  0981 0004                            BNE      s:5529,PREL

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:51   
      307     5522    5                     THEN DO;

      308     5523    5                          G$U_ECCB$->G$ECCB.FLAGS.XCONP = '0'B;

   5523   1 00006C  8843 000A                            LBF,'8000'X       10,B3
   5523   1 00006E       8000

      309     5524    5                          END;

      310     5525
      311     5526    4                     END/*do if new_ecc ~= old_ecc*/;

      312     5527    3                ELSE/*new_ecc = old_ecc*/;
      313     5528
      314     5529    3                G$UHJIT.TSA_USR.P$$ = G$U_ECCB$->G$UECCB.HAND$(NEW_ECC);

   5529   1 00006F  ECB3                                 LDB,B6   ,B3,R3
          1 000070  CC80 0000 0000  xsym                 LDB,B4   G$UHJIT$
          1 000073  EFC4 00BE                            STB,B6   190,B4

      315     5530    3                END/*do if there is a frame on the TCB*/;

   5530   1 000075  0F81 0042                            B        s:5558,PREL

      316     5531
      317     5532    3           ELSE DO/*we must build the frame*/;

      318     5533    3                ENVTCB_PARAMS = '0'B;

   5533   1 000077  5C1E                                 LDV,R5   30
          1 000078  0021                                 ALR      ;
          1 000079       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 00007B       4007 000B                                ALPHANUM(ENVTCB_PARAMS,AUTO,,R5,FILL)

      319     5534    3                ENVTCB_PARAMS.ECC = NEW_ECC;

   5534   1 00007D  437F                                 CSYNC    s:5533+5,SPREL
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:52   
          1 00007E  BF47 000D                            STR,R3   ENVTCB_PARAMS+2,AUTO

      320     5535
      321     5536    3                IF (OLD_ECC >= %G_FPRG_EXIT#) AND (OLD_ECC <= %G_HOST_INT#)

   5536   1 000080  4D2F                                 CMV,R4   47
          1 000081  0201 0019                            BL       s:5545,PREL
          1 000083  4D37                                 CMV,R4   55
          1 000084  0301 0016                            BG       s:5545,PREL

      322     5537    4                THEN DO;

      323     5538    4                     IF OLD_ECC <= %G_FPRG_XXX#

   5538   1 000086  4D31                                 CMV,R4   49
          1 000087  0301 000D                            BG       s:5543,PREL

      324     5539    5                     THEN DO;

      325     5540    5                          T$ = ADDR(JERR);

   5540   1 000089  CB80 0000 0000  00                   LAB,B4   JERR
          1 00008C  CFC7 0006                            STB,B4   T$,AUTO

      326     5541    5                         ENVTCB_PARAMS.ECINFO.ERR = T$->B$JERR(OLD_ECC - %G_FPRG_XXX#)
              5541                                   ;

   5541   1 00008E  A854                                 LDR,R2   R4
          1 00008F  2ECF                                 ADV,R2   -49
          1 000090  8CA4                                 LDI      ,B4,R2
          1 000091  8D47 0010                            SDI      ENVTCB_PARAMS+5,AUTO

      327     5542    5                          END;

   5542   1 000093  0F81 000C                            B        s:5551,PREL

      328     5543    4                     ELSE ENVTCB_PARAMS.ECINFO.ERR = '0'B;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:53   

   5543   1 000095  8747 0010                            CL       ENVTCB_PARAMS+5,AUTO
          1 000097  8747 0011                            CL       ENVTCB_PARAMS+6,AUTO

      329     5544    4                     END;

   5544   1 000099  0F81 0006                            B        s:5551,PREL

      330     5545    3                ELSE ENVTCB_PARAMS.ECINFO.ERR = ESIMULATED;

   5545   1 00009B  8C80 0000 000E  00                   LDI      ESIMULATED
          1 00009E  8D47 0010                            SDI      ENVTCB_PARAMS+5,AUTO

      331     5546
      332     5547        /*E* ERROR: GUM-E$SIMULATED-E
      333     5548             MESSAGE: Exception Condition simulated under DELTA.
      334     5549        */
      335     5550
      336     5551    3                ENVTCB_PARAMS.P$$ = G$U_ECCB$->G$UECCB.HAND$(NEW_ECC);

   5551   1 0000A0  CCB3                                 LDB,B4   ,B3,R3
          1 0000A1  CFC7 000B                            STB,B4   ENVTCB_PARAMS,AUTO

      337     5552    3                ENVTCB_PARAMS.ENV$ = ADDR(G$UHJIT.TSA_USR);

   5552   1 0000A3  ABC6 00B6                            LAB,B2   182,B6
          1 0000A5  AFC7 0016                            STB,B2   ENVTCB_PARAMS+11,AUTO

      338     5553    3                ENVTCB_PARAMS.TCB$ = ADDR(NIL);

   5553   1 0000A7  9B80 0000 0000                       LAB,B1   0
          1 0000AA  9FC7 0018                            STB,B1   ENVTCB_PARAMS+13,AUTO

      339     5554
      340     5555    3                CALL GUE$ENVTCB(ENVTCB_PARAMS);

   5555   1 0000AC  EBC7 000B                            LAB,B6   ENVTCB_PARAMS,AUTO
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:54   
          1 0000AE  EFC7 001E                            STB,B6   ERR+4,AUTO
          1 0000B0  BBC7 001E                            LAB,B3   ERR+4,AUTO
          1 0000B2  CBF0 0100                            LAB,B4   256,IMO
          1 0000B4  E380 0000 0000  xent                 LNJ,B6   GUE$ENVTCB
          1 0000B7       0001                            DC       s:5558,PREL

      341     5556    3                END/*do if no frame currently on the TCB*/;

      342     5557
      343     5558    2           IF NEW_ECC = %G_XCON#

   5558   1 0000B8  E847 0009                            LDR,R6   NEW_ECC,AUTO
          1 0000BA  6D02                                 CMV,R6   2
          1 0000BB  0981 0007                            BNE      s:5571,PREL

      344     5559    3           THEN DO;

      345     5560    3                G$U_ECCB$->G$ECCB.FLAGS.XCONP = '1'B;

   5560   1 0000BD  EC80 0000 0000  xsym                 LDB,B6   G$U_ECCB$
          1 0000C0  8946 000A                            LBT,'8000'X       10,B6
          1 0000C2       8000

      346     5561    3                END;

      347     5562    2           END/*do if fpt.setecc*/;

      348     5563
      349     5564        /*D* If this is a 'QUIT' request, the user's request for exit
      350     5565             control (if any) is reset, JIT.ERR and JIT.RNST are set
      351     5566             to reflect the QUIT condition, the FD's M$DRTN TSA is
      352     5567             returned to the available pool, and the GJS$ABORTX routine
      353     5568             is called to complete the QUIT process.  An ALTRET to the
      354     5569             trap handler then causes GJI$INIT_USR to be entered.
      355     5570        */
      356     5571    1      IF PARAMS.PTRS.PAR1$->FPT$DRTN.QUIT

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:55   
   5571   1 0000C3  ECC7 0004                            LDB,B6   @PARAMS,AUTO
          1 0000C5  DCC6 0006                            LDB,B5   6,B6
          1 0000C7  8285                                 LB,'4000'X        ,B5
          1 0000C8       4000
          1 0000C9  0581 004D                            BBF      s:5598,PREL

      357     5572    2      THEN DO;

      358     5573    2           G$U_ECCB$->G$ECCB.XCON$ = ENTADDR(NIL);

   5573   1 0000CB  CC80 0000 0000  02                   LDB,B4   0
          1 0000CE  BC80 0000 0000  xsym                 LDB,B3   G$U_ECCB$
          1 0000D1  CFC3 0004                            STB,B4   4,B3

      359     5574    2           PARAMS.ERR = EEKEY;

   5574   1 0000D3  8C80 0000 0008  00                   LDI      EEKEY
          1 0000D6  8D46 0003                            SDI      3,B6

      360     5575    2           G$JIT.RNST = (G$JIT.RNST | %G_RS_EKEY#);

   5575   1 0000D8  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 0000DB  D845 0096                            LDR,R5   150,B5
          1 0000DD  D470 0200                            OR,R5    512,IMO
          1 0000DF  DF45 0096                            STR,R5   150,B5

      361     5576    2           CALL GJS$RUND_FD(PGS);

   5576   1 0000E1  ABC7 0008                            LAB,B2   PGS,AUTO
          1 0000E3  AFC7 001E                            STB,B2   ERR+4,AUTO
          1 0000E5  BBC7 001E                            LAB,B3   ERR+4,AUTO
          1 0000E7  CBF0 0100                            LAB,B4   256,IMO
          1 0000E9  E380 0000 0000  xent                 LNJ,B6   GJS$RUND_FD
          1 0000EC       0001                            DC       s:5577,PREL

      362     5577    2           CALL GMA$REL_ACCTMEM(PGS);

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:56   
   5577   1 0000ED  EBC7 0008                            LAB,B6   PGS,AUTO
          1 0000EF  EFC7 001E                            STB,B6   ERR+4,AUTO
          1 0000F1  BBC7 001E                            LAB,B3   ERR+4,AUTO
          1 0000F3  CBF0 0100                            LAB,B4   256,IMO
          1 0000F5  E380 0000 0000  xent                 LNJ,B6   GMA$REL_ACCTMEM
          1 0000F8       0001                            DC       s:5578,PREL

      363     5578    2           CALL RELEASE_TSA;

   5578   1 0000F9  E3C0 0050                            LNJ,B6   s:0,PREL
          1 0000FB       0001                            DC       s:5579,PREL

      364     5579    2           G$UHJIT.DMN.ID = %G_DMN_USR_SVC#;

   5579   1 0000FC  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          1 0000FF  6C03                                 LDV,R6   3
          1 000100  EF46 007E                            STR,R6   126,B6

      365     5580    2           CALL GJS$ABORTX(PARAMS.ERR);

   5580   1 000102  DCC7 0004                            LDB,B5   @PARAMS,AUTO
          1 000104  CBC5 0003                            LAB,B4   3,B5
          1 000106  CFC7 001E                            STB,B4   ERR+4,AUTO
          1 000108  BBC7 001E                            LAB,B3   ERR+4,AUTO
          1 00010A  CBF0 0100                            LAB,B4   256,IMO
          1 00010C  E380 0000 0000  xent                 LNJ,B6   GJS$ABORTX
          1 00010F       0001                            DC       s:5581,PREL

      366     5581    2           G$UHJIT.TSA_USR.I.TRAP# = 0;

   5581   1 000110  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          1 000113  87C6 00B8                            CLH      184,B6

      367     5582    2           GOTO DO_ALTRET;

   5582   1 000115  0F81 0028                            B        s:5604,PREL

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:57   
      368     5583    2           END;
      369     5584
      370     5585        /*E* ERROR: GUM-E$EKEY-E
      371     5586             MESSAGE: FPRG terminated via 'QUIT' command to debugger.
      372     5587        */
      373     5588
      374     5589        /*D* If this is a request to 'KILL FD' and continue executing the
      375     5590             FPRG, the debugger is dis-associated by calling the GJS$RUND_FD
      376     5591             routine, and the M$DRTN TSA is returned to the available pool.
      377     5592
      378     5593             The error code is set to E$ALTRET which is used to tell
      379     5594             the MCL handler that the existing TSA frame is not to be
      380     5595             modified in any way when returning to the user.
      381     5596             The TRAP# in the TSA is set to zero (just to be sure).
      382     5597        */
      383     5598    1      IF PARAMS.PTRS.PAR1$->FPT$DRTN.KILLFD

   5598   1 000117  8285                                 LB,'2000'X        ,B5
   5598   1 000118       2000
          1 000119  0581 002E                            BBF      s:5608+3,PREL

      384     5599    2      THEN DO;

      385     5600    2           CALL GJS$RUND_FD(PGS);

   5600   1 00011B  CBC7 0008                            LAB,B4   PGS,AUTO
          1 00011D  CFC7 001E                            STB,B4   ERR+4,AUTO
          1 00011F  BBC7 001E                            LAB,B3   ERR+4,AUTO
          1 000121  CBF0 0100                            LAB,B4   256,IMO
          1 000123  E380 0000 0000  xent                 LNJ,B6   GJS$RUND_FD
          1 000126       0001                            DC       s:5601,PREL

      386     5601    2           CALL GMA$REL_ACCTMEM(PGS);

   5601   1 000127  EBC7 0008                            LAB,B6   PGS,AUTO
          1 000129  EFC7 001E                            STB,B6   ERR+4,AUTO
          1 00012B  BBC7 001E                            LAB,B3   ERR+4,AUTO
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:58   
          1 00012D  CBF0 0100                            LAB,B4   256,IMO
          1 00012F  E380 0000 0000  xent                 LNJ,B6   GMA$REL_ACCTMEM
          1 000132       0001                            DC       s:5602,PREL

      387     5602    2           CALL RELEASE_TSA;

   5602   1 000133  E3C0 0016                            LNJ,B6   s:0,PREL
          1 000135       0001                            DC       s:5603,PREL

      388     5603    2           G$UHJIT.TSA_USR.I.TRAP# = 0;

   5603   1 000136  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          1 000139  87C6 00B8                            CLH      184,B6

      389     5604    2           G$UHJIT.DMN.ID = %G_DMN_USR_SVC#;

   5604   1 00013B  6C03                                 LDV,R6   3
          1 00013C  EF46 007E                            STR,R6   126,B6

   5604   1                              DO_ALTRET       null
      390     5605
      391     5606    2   DO_ALTRET: ;
      392     5607    2           PARAMS.ERR = EALTRET;

   5607   1 00013E  8C80 0000 000A  00   DO_ALTRET       LDI      EALTRET
          1 000141  DCC7 0004                            LDB,B5   @PARAMS,AUTO
          1 000143  8D45 0003                            SDI      3,B5

      393     5608    2           RETURN;

   5608   1 000145  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
          1 000148  0F81 001E                            B        s:5626,PREL

      394     5609    2           END;
      395     5610
      396     5611        %EJECT;
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:59   
      397     5612        /*I* NAME: RELEASE_TSA
      398     5613
      399     5614             PURPOSE:  To return the debugger's M$DRTN TSA to the
      400     5615                       chain of available TSAs.
      401     5616
      402     5617        */
      403     5618    1   RELEASE_TSA: PROC;

   5618   1 00014A  EFC7 001C            RELEASE_TSA     STB,B6   ERR+2,AUTO

      404     5619    2      G$LOW_MEM.NATSAP1$ = ADDR(G$UHJIT.TSA_DB.TSAL$);

   5619   1 00014C  DC80 0000 0000  xsym                 LDB,B5   G$UHJIT$
          1 00014F  CBC5 00FF                            LAB,B4   255,B5
          1 000151  BC80 0000 0000  xsym                 LDB,B3   G$LOW_MEM$
          1 000154  CFC3 000E                            STB,B4   14,B3

      405     5620    2      G$UHJIT.TSA_DB.TSAL$ = ADDR(G$UHJIT.TSA_CP.TSAL$);

   5620   1 000156  EBC5 0139                            LAB,B6   313,B5
          1 000158  EFC5 00FF                            STB,B6   255,B5

      406     5621    2      G$UHJIT.TSA_USR.TSAL$ = ADDR(NIL);

   5621   1 00015A  CB80 0000 0000                       LAB,B4   0
          1 00015D  CFC5 00B6                            STB,B4   182,B5

      407     5622    2      G$UHJIT.ISA_USR.TSAP$ = ADDR(G$UHJIT.TSA_USR);

   5622   1 00015F  ABC5 00B6                            LAB,B2   182,B5
          1 000161  AFC5 007F                            STB,B2   127,B5

      408     5623    2      RETURN;

   5623   1 000163  ECC7 001C                            LDB,B6   ERR+2,AUTO
          1 000165  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:60   
      409     5624    2   END RELEASE_TSA;
      410     5625
      411     5626    1   END GUM$DRTN;

   5626   1 000167  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      412     5627        %EOD;

PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:61   
--  Include file information  --

   UE_ERRORS_C.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GUM$DRTN.
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:62   

 **** Variables and constants ****

  ****  Section 000 RoData GUM$DRTN

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     A-0-0/w STRC(32)    r     1 EALTRET                    6-0-0/w STRC(32)    r     1 EDOMAIN
     8-0-0/w STRC(32)    r     1 EEKEY                      C-0-0/w STRC(32)    r     1 ENOCONTROL
     E-0-0/w STRC(32)    r     1 ESIMULATED                 0-0-0/w STRC(96)    r     1 JERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PARAMS                    B-0-0/w STRC(240)   r     1 ENVTCB_PARAMS
    1A-0-0/w STRC(32)    r     1 ERR                        9-0-0/w UBIN(16)    r     1 NEW_ECC
     A-0-0/w UBIN(16)    r     1 OLD_ECC                   *0-0-0/w STRC(1280)  r     1 PARAMS
     8-0-0/w UBIN(16)    r     1 PGS                        6-0-0/w PTR         r     1 T$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w PTR         r     1 G$LOW_MEM$
     0-0-0/w PTR         r     1 G$TCB$                     0-0-0/w PTR         r     1 G$UHJIT$
     0-0-0/w PTR         r     1 G$U_ECCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT (32)    r     1 B$JERR(0:0)                0-0-0/d STRC(32)    r     1 FPT$DRTN
     0-0-0/w STRC(224)   r     1 G$ECCB                     0-0-0/w STRC(736)   r     1 G$EXCFR
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:63   
     0-0-0/w STRC(5616)  r     1 G$JIT                      0-0-0/w STRC(4096)  r     1 G$LOW_MEM
     0-0-0/w STRC(96)    r     1 G$TCB                      0-0-0/w STRC(224)   r     1 G$UECCB
     0-0-0/w STRC(6480)  r     1 G$UHJIT


   Procedure GUM$DRTN requires 362 words for executable code.
   Procedure GUM$DRTN requires 32 words of local(AUTO) storage.
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:65   
          MINI XREF LISTING

B$JERR
       995**DCL      5541>>ASSIGN
DO_ALTRET
      5604**LABEL    5582--GOTO
EALTRET
      5267**DCL      5607>>ASSIGN
EDOMAIN
      5173**DCL      5480>>ASSIGN
EEKEY
      5220**DCL      5574>>ASSIGN
ENOCONTROL
      5314**DCL      5498>>ASSIGN
ENVTCB_PARAMS
       821**DCL      5533<<ASSIGN   5555<>CALL
ENVTCB_PARAMS.ECC
       821**DCL      5534<<ASSIGN
ENVTCB_PARAMS.ECINFO.ERR
       907**DCL      5541<<ASSIGN   5543<<ASSIGN   5545<<ASSIGN
ENVTCB_PARAMS.ECINFO.EVID
       864**DCL       882--REDEF     890--REDEF     890--REDEF
ENVTCB_PARAMS.ECINFO.SUBC
       841**DCL       841--REDEF     859--REDEF     863--REDEF     863--REDEF
ENVTCB_PARAMS.ENV$
       939**DCL      5552<<ASSIGN
ENVTCB_PARAMS.P$$
       821**DCL       821--REDEF    5551<<ASSIGN
ENVTCB_PARAMS.TCB$
       939**DCL      5553<<ASSIGN
ERR
       960**DCL      5515<<ASSIGN   5517>>ASSIGN
ESIMULATED
      5361**DCL      5545>>ASSIGN
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:66   
FPT$DRTN.ECC
      5010**DCL      5494>>ASSIGN
FPT$DRTN.KILLFD
      5009**DCL      5598>>IF
FPT$DRTN.QUIT
      5009**DCL      5571>>IF
FPT$DRTN.SETECC
      5009**DCL      5492>>IF
G$ECCB.FLAGS.XCONP
      1021**DCL      5523<<ASSIGN   5560<<ASSIGN
G$ECCB.FLTFLG
      1039**DCL      1070--REDEF
G$ECCB.XCON$
      1016**DCL      5573<<ASSIGN
G$EXCFR
      1162**DCL      5518--ASSIGN   5519--ASSIGN
G$EXCFR.ECC
      1167**DCL      5514<<ASSIGN
G$EXCFR.P$$
      1217**DCL      1217--REDEF    1217--REDEF
G$EXCFR.PREVSZ
      1167**DCL      1167--REDEF
G$EXCFR.TRLR
      1428**DCL      5516<<ASSIGN
G$EXCFR.TRLR.ERR
      1497**DCL      5515>>ASSIGN   5517<<ASSIGN
G$EXCFR.TRLR.EVID
      1454**DCL      1472--REDEF    1480--REDEF    1480--REDEF
G$EXCFR.TRLR.SUBC
      1431**DCL      1431--REDEF    1449--REDEF    1453--REDEF    1453--REDEF
G$JIT.ERRLOG
      1895**DCL      1898--REDEF
G$JIT.JSUNIT
      1634**DCL      1635--REDEF
G$JIT.MCLS
      1633**DCL      1633--REDEF
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:67   
G$JIT.RNST
      1865**DCL      5575<<ASSIGN   5575>>ASSIGN
G$JIT.TMRZ
      1902**DCL      1903--REDEF
G$JIT.USER_EXTIME
      1626**DCL      1627--REDEF
G$JIT.USER_MEMTIME
      1629**DCL      1629--REDEF
G$JIT.USER_SVTIME
      1628**DCL      1628--REDEF
G$JIT$
      5398**DCL      1565--IMP-PTR  5575>>ASSIGN   5575>>ASSIGN
G$LOW_MEM.IV.IL$
      2007**DCL      2007--REDEF
G$LOW_MEM.IV.INT.I#00$
      2007**DCL      2007--REDEF
G$LOW_MEM.IV.INT.I#01$
      2007**DCL      2007--REDEF
G$LOW_MEM.IV.INT.I#02$
      2008**DCL      2008--REDEF
G$LOW_MEM.IV.INT.I#03$
      2008**DCL      2008--REDEF
G$LOW_MEM.IV.INT.I#04$
      2008**DCL      2009--REDEF
G$LOW_MEM.IV.INT.I#05$
      2009**DCL      2009--REDEF
G$LOW_MEM.IV.INT.I#61$
      2010**DCL      2010--REDEF
G$LOW_MEM.IV.INT.I#62$
      2010**DCL      2010--REDEF
G$LOW_MEM.IV.INT.I#63$
      2010**DCL      2010--REDEF
G$LOW_MEM.NATSAP1$
      1970**DCL      5619<<ASSIGN
G$LOW_MEM.TV.T#01$
      1995**DCL      1995--REDEF
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:68   
G$LOW_MEM.TV.T#02$
      1995**DCL      1995--REDEF
G$LOW_MEM.TV.T#03$
      1994**DCL      1994--REDEF
G$LOW_MEM.TV.T#05$
      1994**DCL      1994--REDEF
G$LOW_MEM.TV.T#06$
      1993**DCL      1993--REDEF
G$LOW_MEM.TV.T#07$
      1993**DCL      1993--REDEF
G$LOW_MEM.TV.T#08$
      1992**DCL      1993--REDEF
G$LOW_MEM.TV.T#09$
      1992**DCL      1992--REDEF
G$LOW_MEM.TV.T#10$
      1992**DCL      1992--REDEF
G$LOW_MEM.TV.T#12$
      1991**DCL      1991--REDEF
G$LOW_MEM.TV.T#13$
      1991**DCL      1991--REDEF
G$LOW_MEM.TV.T#14$
      1990**DCL      1990--REDEF
G$LOW_MEM.TV.T#15$
      1990**DCL      1990--REDEF
G$LOW_MEM.TV.T#16$
      1989**DCL      1990--REDEF
G$LOW_MEM.TV.T#17$
      1989**DCL      1989--REDEF
G$LOW_MEM.TV.T#19$
      1988**DCL      1989--REDEF
G$LOW_MEM.TV.T#20$
      1988**DCL      1988--REDEF
G$LOW_MEM.TV.T#21$
      1988**DCL      1988--REDEF
G$LOW_MEM.TV.T#22$
      1987**DCL      1987--REDEF
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:69   
G$LOW_MEM.TV.T#23$
      1987**DCL      1987--REDEF
G$LOW_MEM.TV.T#24$
      1986**DCL      1987--REDEF
G$LOW_MEM.TV.T#25$
      1986**DCL      1986--REDEF
G$LOW_MEM.TV.T#26$
      1986**DCL      1986--REDEF
G$LOW_MEM.TV.T#27$
      1985**DCL      1985--REDEF
G$LOW_MEM.TV.T#28$
      1985**DCL      1985--REDEF
G$LOW_MEM.TV.T#29$
      1984**DCL      1985--REDEF
G$LOW_MEM.TV.T#30$
      1984**DCL      1984--REDEF
G$LOW_MEM.TV.T#31$
      1984**DCL      1984--REDEF
G$LOW_MEM.TV.T#32$
      1983**DCL      1983--REDEF
G$LOW_MEM.TV.T#33$
      1983**DCL      1983--REDEF
G$LOW_MEM$
      5399**DCL      1970--IMP-PTR  5619>>ASSIGN
G$TCB.AVSZ
      1548**DCL      5518<<ASSIGN   5518>>ASSIGN
G$TCB.CURRSZ
      1549**DCL      5518>>ASSIGN   5519<<ASSIGN
G$TCB.STK$
      1548**DCL      5514>>ASSIGN   5515>>ASSIGN   5516>>ASSIGN   5517>>ASSIGN
G$TCB$
      5397**DCL      5514>>ASSIGN   5515>>ASSIGN   5516>>ASSIGN   5517>>ASSIGN   5518>>ASSIGN   5518>>ASSIGN
      5518>>ASSIGN   5519>>ASSIGN
G$UECCB.FLTFLG
      1115**DCL      1146--REDEF
G$UECCB.HAND$
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:70   
      1095**DCL      5495>>IF       5529>>ASSIGN   5551>>ASSIGN
G$UHJIT.DMN.ID
      3749**DCL      5478>>IF       5579<<ASSIGN   5604<<ASSIGN
G$UHJIT.ISA_USR
      3454**DCL      3749--REDEF
G$UHJIT.ISA_USR.P$$
      3529**DCL      3529--REDEF
G$UHJIT.ISA_USR.TSAP$
      3456**DCL      5622<<ASSIGN
G$UHJIT.TSA_CP.ISA.P$$
      4736**DCL      4736--REDEF
G$UHJIT.TSA_CP.P$$
      4607**DCL      4607--REDEF    4608--REDEF
G$UHJIT.TSA_CP.TSAL$
      4580**DCL      5620--ASSIGN
G$UHJIT.TSA_DB.ISA.P$$
      4348**DCL      4348--REDEF
G$UHJIT.TSA_DB.P$$
      4219**DCL      4219--REDEF    4220--REDEF
G$UHJIT.TSA_DB.TSAL$
      4192**DCL      5619--ASSIGN   5620<<ASSIGN
G$UHJIT.TSA_RTT.P$$
      4982**DCL      4982--REDEF    4983--REDEF
G$UHJIT.TSA_USR
      3779**DCL      5552--ASSIGN   5622--ASSIGN
G$UHJIT.TSA_USR.I.TRAP#
      3801**DCL      5506>>ASSIGN   5581<<ASSIGN   5603<<ASSIGN
G$UHJIT.TSA_USR.ISA.P$$
      3938**DCL      3938--REDEF
G$UHJIT.TSA_USR.P$$
      3809**DCL      3809--REDEF    3810--REDEF    5529<<ASSIGN
G$UHJIT.TSA_USR.TSAL$
      3782**DCL      5621<<ASSIGN
G$UHJIT$
      5395**DCL      2031--IMP-PTR  5478>>IF       5506>>ASSIGN   5529>>ASSIGN   5552>>ASSIGN   5579>>ASSIGN
      5581>>ASSIGN   5603>>ASSIGN   5604>>ASSIGN   5619>>ASSIGN   5620>>ASSIGN   5620>>ASSIGN   5621>>ASSIGN
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:71   
      5622>>ASSIGN   5622>>ASSIGN
G$U_ECCB$
      5396**DCL      5495>>IF       5523>>ASSIGN   5529>>ASSIGN   5551>>ASSIGN   5560>>ASSIGN   5573>>ASSIGN
GJS$ABORTX
      5402**DCL-ENT  5580--CALL
GJS$RUND_FD
      5404**DCL-ENT  5576--CALL     5600--CALL
GMA$REL_ACCTMEM
      5403**DCL-ENT  5577--CALL     5601--CALL
GUE$ENVTCB
      5405**DCL-ENT  5555--CALL
JERR
      5015**DCL      5540--ASSIGN
NEW_ECC
       818**DCL      5494<<ASSIGN   5495>>IF       5495>>IF       5512>>IF       5514>>ASSIGN   5529>>ASSIGN
      5534>>ASSIGN   5551>>ASSIGN   5558>>IF
OLD_ECC
       819**DCL      5506<<ASSIGN   5508>>IF       5508>>IF       5510<<ASSIGN   5510>>ASSIGN   5512>>IF
      5521>>IF       5536>>IF       5536>>IF       5538>>IF       5541>>ASSIGN
PARAMS
       739**DCL        14--PROC
PARAMS.BND
       799**DCL       800--REDEF
PARAMS.DESC
       801**DCL       802--REDEF
PARAMS.ERR
       765**DCL      5480<<ASSIGN   5498<<ASSIGN   5574<<ASSIGN   5580<>CALL     5607<<ASSIGN
PARAMS.MCL.CODE
       746**DCL       746--REDEF
PARAMS.PTRS
       795**DCL       796--REDEF     798--REDEF     798--REDEF     798--REDEF
PARAMS.PTRS.PAR1$
       795**DCL      5492>>IF       5494>>ASSIGN   5571>>IF       5598>>IF
PGS
       817**DCL      5576<>CALL     5577<>CALL     5600<>CALL     5601<>CALL
RELEASE_TSA
PL6.E3A0      #003=GUM$DRTN File=GUM$MCL.:E05TSI                                 TUE 07/29/97 22:17 Page:72   
      5618**PROC     5578--CALL     5602--CALL
T$
       816**DCL      5540<<ASSIGN   5541>>ASSIGN

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:73   
      413        1        /*T***********************************************************/
      414        2        /*T*                                                         */
      415        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      416        4        /*T*                                                         */
      417        5        /*T***********************************************************/
      418        6        /*X* PLM=3,IND=5,ENU=0,ECU=0,CRM=70      */
      419        7
      420        8        /*F* NAME: GUM$ERRMSG
      421        9
      422       10             PURPOSE: This routine handler the M$ERRMSG monitor service.
      423       11
      424       12        */
      425       13        GUM$ERRMSG: PROC(GUD_PARAMS);
      426       14
      427       15        %INCLUDE G_JIT_M;
      428      280        %INCLUDE G_HJIT_M;
      429      425        %INCLUDE GU_MACROS_M;
      430      584 S      %INCLUDE GH_LCP6_M;
      431      585 S      %INCLUDE GU_LCP6_M;
      432      586        %INCLUDE KL_MACRO_C;
      433     3938        %INCLUDE KL_AFCN_C;
      434     4039 S      %INCLUDE G_LCP6_E;
      435     4040        %INCLUDE GM_VIRTUAL_E;
      436     4250        %INCLUDE UD_ERRORS_C;
      437     4292        %INCLUDE UM_ERRORS_C;
      438     4326
      439     4327                                                /* Input parameters         */
      440     4328        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
      441     4404
      442     4405                                                /* AUTO Storage             */
      443     4406        %KL_ERRMSG_RQS (FPTN=KL@RQS,STCLASS=AUTO);
      444     4581    1   DCL RQS_SZ UBIN;
      445     4582        %KL_ERRMSG_RSP (FPTN=KL@RSP,STCLASS=AUTO);
      446     4658    1   DCL RSP_SZ UBIN;
      447     4659
      448     4660    1   DCL USR_BUF$ CPTR;
      449     4661    1   DCL USR_BUFSZ UBIN;
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:74   
      450     4662    1   DCL I UBIN;
      451     4663    1   DCL FLAGLEV UBIN;
      452     4664    1   DCL MIN_SIZE UBIN;
      453     4665
      454     4666
      455     4667                                                /*  Based Structures        */
      456     4668
      457     4669        %G$JIT (FPTN=G$JIT,STCLASS="BASED(G$JIT$)");
      458     5083        %G$TCB (FPTN=G$TCB,STCLASS="BASED(G$TCB$)");
      459     5104        %G$EXCFR (FPTN=G$EXCFR,STCLASS=BASED);
      460     5486        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
      461     8460        %FPT_ERRMSG (FPTN=FPT$ERRMSG,STCLASS=BASED,VECTORS=NO);
      462     8488        %VLP_ERRCODE (FPTN=VLP$ERRCODE,STCLASS=BASED);
      463     8534        %VLR_ERRMSG (FPTN=VLR$ERRMSG,STCLASS=BASED);
      464     8551        %KL_ERRMSG_RQS(FPTN=SHORT$RQS,STCLASS=BASED,FILE_PARAMS=NO);
      465     8726        %KL_ERRMSG_RQS(FPTN=LONG$RQS,STCLASS=BASED,FILE_PARAMS=YES);
      466     8901
      467     8902    1   DCL 1 B$NAME BASED,
      468     8903    1         2 L UBIN BYTE UNAL,
      469     8904    1         2 TEXT CHAR(B$NAME.L) UNAL;
      470     8905    1   DCL B$CHARS(0:0) CHAR(1) UNAL BASED;
      471     8906    1   DCL B$CHAR8 CHAR(8) BASED;
      472     8907
      473     8908    1   DCL B$BUF CHAR(KL@RSP.MESSAGE_SZ) BASED;
      474     8909    1   DCL B$USRBUF CHAR(USR_BUFSZ) BASED;
      475     8910
      476     8911                                                /* EQUS                     */
      477     8912        %G$JIT_E;
      478     8974
      479     8975                                                /* Internal Data            */
      480     8976        %VLP_ERRCODE (FPTN=EERRMSGALT,ERR#=%E$ERRMSGALT,SEV=G_SEV_CONT#,
      481     8977                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      482     9023        %VLP_ERRCODE (FPTN=EINTLVL,ERR#=%E$INTLVL,SEV=G_SEV_ERROR#,
      483     9024                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      484     9070        %VLP_ERRCODE (FPTN=EXCON_PROG,ERR#=%E$XCON_PROG,SEV=G_SEV_ERROR#,
      485     9071                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      486     9117        %VLP_ERRCODE (FPTN=EBADVECT1,ERR#=%E$BADVECT1,SEV=G_SEV_ERROR#,
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:75   
      487     9118                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      488     9164        %VLP_ERRCODE (FPTN=EBADVECT2,ERR#=%E$BADVECT2,SEV=G_SEV_ERROR#,
      489     9165                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      490     9211        %VLP_ERRCODE (FPTN=EBADVECT3,ERR#=%E$BADVECT3,SEV=G_SEV_ERROR#,
      491     9212                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      492     9258
      493     9259                                                /*  External data           */
      494     9260    1   DCL G$JIT$ PTR SYMREF READONLY;
      495     9261    1   DCL G$TCB$ PTR SYMREF READONLY;
      496     9262    1   DCL G$UHJIT$ PTR SYMREF READONLY;
      497     9263
      498     9264                                                /* External Procedures      */
      499     9265    1   DCL GUD$MAPPER ENTRY(1);
      500     9266    1   DCL KNB$GETRESP ENTRY(4) ALTRET;
      501     9267
      502     9268
      503     9269                                                /* String Substitutions     */
      504     9270        %SUB V$=GUD_PARAMS.PTRS.PAR1$;
      505     9271        %SUB CODE$=GUD_PARAMS.PTRS.PAR2$;
      506     9272        %SUB BUF$=GUD_PARAMS.PTRS.PAR3$;
      507     9273        %SUB BUF_BOUND=GUD_PARAMS.BND.PAR3;
      508     9274        %SUB NAME$=GUD_PARAMS.PTRS.PAR4$;
      509     9275        %SUB ACCT$=GUD_PARAMS.PTRS.PAR5$;
      510     9276        %SUB PASS$=GUD_PARAMS.PTRS.PAR6$;
      511     9277        %SUB FIELD1$=GUD_PARAMS.PTRS.PAR7$;
      512     9278        %SUB FIELD2$=GUD_PARAMS.PTRS.PAR8$;
      513     9279        %SUB FIELD3$=GUD_PARAMS.PTRS.PAR9$;
      514     9280        %SUB RESULTS$=GUD_PARAMS.PTRS.PAR10$;
      515     9281        %SUB ALTCODE$=GUD_PARAMS.PTRS.PAR11$;
      516     9282
      517     9283        %EJECT;
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:76   
      518     9284        /*D* M$ERRMSG is not allowed unless executing at the user base level,
      519     9285             and M$ERRMSG is not allowed if a Class 2 or Class 3 exit control
      520     9286             is in progress.
      521     9287        */
      522     9288    1      IF G$UHJIT.DMN.ID = %G_DMN_INT_SVC#
      523     9289    2      THEN DO;
      524     9290    2           GUD_PARAMS.ERR = EINTLVL;
      525     9291    2           RETURN;
      526     9292    2           END;
      527     9293        /*E* ERROR: GUM-E$INTLVL-4
      528     9294             MESSAGE: M$ERRMSG not allowed from interrupt level.
      529     9295        */
      530     9296
      531     9297    1      IF (G$JIT.FRS & %G_RS_CL23#)
      532     9298    2      THEN DO;
      533     9299    2           GUD_PARAMS.ERR = EXCON_PROG;
      534     9300    2           RETURN;
      535     9301    2           END;
      536     9302        /*E* ERROR: GUM-E$XCON_PROG-4
      537     9303          MESSAGE: M$ERRMSG not allowed in LCP-6 when class 2 or 3 exit control in progress.
      538     9304        */
      539     9305
      540     9306    1      IF BUF$ = ADDR(NIL)
      541     9307    1      THEN GOTO BAD_BUF;
      542     9308
      543     9309    1      IF V$->FPT$ERRMSG.FLAGLEV > 4
      544     9310    1      THEN FLAGLEV=4;
      545     9311    1      ELSE FLAGLEV = V$->FPT$ERRMSG.FLAGLEV;
      546     9312
      547     9313    1      USR_BUFSZ = BUF_BOUND +1;
      548     9314    1      IF V$->FPT$ERRMSG.INCLCODE
      549     9315    1      THEN MIN_SIZE = 14;
      550     9316    1      ELSE MIN_SIZE = 1;
      551     9317    1      MIN_SIZE = MIN_SIZE + FLAGLEV;
      552     9318
      553     9319    1      IF MIN_SIZE > USR_BUFSZ
      554     9320    2      THEN DO;
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:77   
      555     9321    2   BAD_BUF: ;
      556     9322    2           GUD_PARAMS.ERR = EBADVECT2;
      557     9323    2           RETURN;
      558     9324    2           END;
      559     9325        /*E* ERROR: GUM-E$BADVECT2-4
      560     9326             MESSAGE: Your buffer is too small for the options specified via M$ERRMSG.
      561     9327        */
      562     9328
      563     9329
      564     9330    1      KL@RQS = '0'B;
      565     9331    1      KL@RQS.FCN = %IGA_ERRMSG_RQS;
      566     9332    1      KL@RQS.USR# = G$JIT.USR#;
      567     9333    1      KL@RQS.SUBLANG = V$->FPT$ERRMSG.SUBLANG;
      568     9334    1      KL@RQS.SUBFILE = V$->FPT$ERRMSG.SUBFILE;
      569     9335    1      KL@RQS.SUBMESS = V$->FPT$ERRMSG.SUBMESS;
      570     9336    1      KL@RQS.INCLCODE = V$->FPT$ERRMSG.INCLCODE;
      571     9337
      572     9338    2      DO CASE(V$->FPT$ERRMSG.SOURCE);
      573     9339    2       CASE(0)/*passed*/;
      574     9340    2         IF CODE$ ~= ADDR(NIL)
      575     9341    2         THEN KL@RQS.ERR = CODE$->VLP$ERRCODE;
      576     9342
      577     9343    3         ELSE DO;
      578     9344    3   BAD_CALL:  ;
      579     9345    3              GUD_PARAMS.ERR = EBADVECT1;
      580     9346    3              RETURN;
      581     9347    3              END;
      582     9348        /*E* ERROR: GUM-E$BADVECT1-4
      583     9349             MESSAGE: Error Code specification for M$ERRMSG is bad.
      584     9350        */
      585     9351
      586     9352    2       CASE(1)/*trap*/;
      587     9353    2         IF G$TCB.CURRSZ = 0
      588     9354    2         THEN GOTO BAD_CALL;
      589     9355
      590     9356    2         KL@RQS.ERR = G$TCB.STK$->G$EXCFR.TRLR.ERR;
      591     9357    2         KL@RQS.ERR.SEV = 0;
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:78   
      592     9358
      593     9359    2       CASE(2)/*altret*/;
      594     9360    2         IF G$TCB.ALT$->G$EXCFR.ALTEMPTY ~= 0
      595     9361    2         THEN GOTO BAD_CALL;
      596     9362
      597     9363    2         KL@RQS.ERR = G$TCB.ALT$->G$EXCFR.TRLR.ERR;
      598     9364    2         KL@RQS.ERR.SEV = 0;
      599     9365
      600     9366    2         END/*do case*/;
      601     9367
      602     9368    1      IF V$->FPT$ERRMSG.MY_LANG = '1'B
      603     9369    1      THEN KL@RQS.LANG = G$JIT.LANG;
      604     9370    1      ELSE KL@RQS.LANG = V$->FPT$ERRMSG.LANG;
      605     9371
      606     9372    1      IF ALTCODE$ = ADDR(NIL)
      607     9373    1      THEN KL@RQS.ALTCODE_EXISTS = '0'B;
      608     9374    2      ELSE DO;
      609     9375    2           GUD_PARAMS.USR_PARAM_INDX = %PAR11#;
      610     9376    2           GUD_PARAMS.ASDT_MCL_INDX = %GM_LPAR6#;
      611     9377    2           CALL GUD$MAPPER(GUD_PARAMS);
      612     9378    2           KL@RQS.ALTCODE_EXISTS = '1'B;
      613     9379    2           KL@RQS.ALTERR = ALTCODE$->VLP$ERRCODE;
      614     9380    2           END;
      615     9381
      616     9382    1      IF NAME$ = ADDR(NIL)
      617     9383    2      THEN DO;
      618     9384    2           KL@RQS.FID_EXISTS = '0'B;
      619     9385    2           RQS_SZ = SIZEC(SHORT$RQS);
      620     9386    2           END;
      621     9387
      622     9388    2      ELSE DO;
      623     9389    2           IF (NAME$ ->B$NAME.L = 0) OR
      624     9390    2             (NAME$ ->B$NAME.TEXT = ' ') OR
      625     9391    2             (NAME$ ->B$NAME.L > GUD_PARAMS.BND.PAR4)
      626     9392    3           THEN DO;
      627     9393    3                GUD_PARAMS.ERR = EBADVECT3;
      628     9394    3                RETURN;
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:79   
      629     9395    3                END;
      630     9396        /*E* ERROR: GUM-E$BADVECT3-E
      631     9397             MESSAGE:  Your M$ERRMSG request specified a bad errmsg file fid.
      632     9398        */
      633     9399    2           KL@RQS.FID_EXISTS = '1'B;
      634     9400    2           RQS_SZ = SIZEC(LONG$RQS);
      635     9401    2           KL@RQS.FILENAME = NAME$->B$NAME;
      636     9402
      637     9403    2           IF ACCT$ ~= ADDR(NIL)
      638     9404    2           THEN KL@RQS.FILEACCT = ACCT$->B$CHAR8;
      639     9405    2           ELSE KL@RQS.FILEACCT = ' ';
      640     9406
      641     9407    2           IF PASS$ ~= ADDR(NIL)
      642     9408    2           THEN KL@RQS.FILEPASS = PASS$->B$CHAR8;
      643     9409    2           ELSE KL@RQS.FILEPASS = ' ';
      644     9410    2           END;
      645     9411
      646     9412    1      IF (V$->FPT$ERRMSG.DCB# =0)
      647     9413    1        AND (FIELD1$ = ADDR(NIL) )
      648     9414    1        AND (FIELD2$ = ADDR(NIL) )
      649     9415    1        AND (FIELD3$ = ADDR(NIL) )
      650     9416    1      THEN KL@RQS.LEAVE_TOKEN = '0'B;
      651     9417    1      ELSE KL@RQS.LEAVE_TOKEN = '1'B;
      652     9418
      653     9419    1      CALL KNB$GETRESP(ADDR(KL@RQS), RQS_SZ, ADDR(KL@RSP), SIZEC(KL@RSP));
      654     9420
      655     9421    1      USR_BUF$ = BUF$;
      656     9422    1      USR_BUF$->B$USRBUF = ' ';
      657     9423    1      IF V$->FPT$ERRMSG.FLAGLEV ~= 0
      658     9424    2      THEN DO;
      659     9425    3           DO I=0 TO FLAGLEV;
      660     9426    3                USR_BUF$->B$CHARS(I) = '*';
      661     9427    3                END;
      662     9428    2           USR_BUF$ = PINCRC(USR_BUF$, V$->FPT$ERRMSG.FLAGLEV);
      663     9429    2           USR_BUFSZ = USR_BUFSZ - V$->FPT$ERRMSG.FLAGLEV;
      664     9430    2           END;
      665     9431
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:80   
      666     9432    1      IF USR_BUFSZ < KL@RSP.MESSAGE_SZ
      667     9433    2      THEN DO;
      668     9434    2           KL@RSP.MESSAGE_SZ = USR_BUFSZ;
      669     9435    2           KL@RSP.MSGCOMP = '0'B;
      670     9436    2           END;
      671     9437
      672     9438    1      USR_BUF$->B$BUF = ADDR(KL@RSP.MESSAGE)->B$BUF;
      673     9439
      674     9440    1      IF RESULTS$ ~= ADDR(NIL)
      675     9441    2      THEN DO;
      676     9442    2           GUD_PARAMS.USR_PARAM_INDX = %PAR10#;
      677     9443    2           GUD_PARAMS.ASDT_MCL_INDX = %GM_LPAR6#;
      678     9444    2           CALL GUD$MAPPER(GUD_PARAMS);
      679     9445
      680     9446    2           RESULTS$->VLR$ERRMSG = '0'B;
      681     9447    2           RESULTS$->VLR$ERRMSG.NOFILE = KL@RSP.NOFILE;
      682     9448    2           RESULTS$->VLR$ERRMSG.NOMSG = KL@RSP.NOMSG;
      683     9449    2           RESULTS$->VLR$ERRMSG.ALTMSG = KL@RSP.ALTMSG;
      684     9450    2           RESULTS$->VLR$ERRMSG.NNATIVE = KL@RSP.NNATIVE;
      685     9451    2           RESULTS$->VLR$ERRMSG.INERR = KL@RSP.INERR;
      686     9452    2           RESULTS$->VLR$ERRMSG.MSGCOMP = KL@RSP.MSGCOMP;
      687     9453
      688     9454    2           IF KL@RSP.MSGCOMP = '0'B
      689     9455    2           THEN GUD_PARAMS.ERR = EERRMSGALT;
      690     9456    2           END;
      691     9457
      692     9458    1      RETURN;
      693     9459    1   END GUM$ERRMSG;
      694     9460        %EOD;

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:81   
--  Include file information  --

   UM_ERRORS_C.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GUM$ERRMSG.

   Procedure GUM$ERRMSG requires 624 words for executable code.
   Procedure GUM$ERRMSG requires 122 words of local(AUTO) storage.

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:82   

 Object Unit name= GUM$ERRMSG                                 File name= GUM$MCL.:E05TOU
 UTS= JUL 29 '97 22:18:51.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     12      C  GUM$ERRMSG
    1   Proc  even  none   624    270  GUM$ERRMSG
    2  RoData even  none     1      1  GUM$ERRMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GUM$ERRMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 GUD$MAPPER
 yes     yes           Std       4 KNB$GETRESP
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6C_ALRZ
                       nStd      0 X6C_ALR
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:83   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$JIT$                           r    G$TCB$                           r    G$UHJIT$
r    G$ROS$
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:84   


      413        1        /*T***********************************************************/
      414        2        /*T*                                                         */
      415        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      416        4        /*T*                                                         */
      417        5        /*T***********************************************************/
      418        6        /*X* PLM=3,IND=5,ENU=0,ECU=0,CRM=70      */
      419        7
      420        8        /*F* NAME: GUM$ERRMSG
      421        9
      422       10             PURPOSE: This routine handler the M$ERRMSG monitor service.
      423       11
      424       12        */
      425       13        GUM$ERRMSG: PROC(GUD_PARAMS);

     13   1 000000  D380 0000 0000  xent GUM$ERRMSG      LNJ,B5   X6A_AUTO_1
          1 000003       007A 0001                       DC       122,1

      426       14
      427       15        %INCLUDE G_JIT_M;
      428      280        %INCLUDE G_HJIT_M;
      429      425        %INCLUDE GU_MACROS_M;
      430      584 S      %INCLUDE GH_LCP6_M;
      431      585 S      %INCLUDE GU_LCP6_M;
      432      586        %INCLUDE KL_MACRO_C;
      433     3938        %INCLUDE KL_AFCN_C;
      434     4039 S      %INCLUDE G_LCP6_E;
      435     4040        %INCLUDE GM_VIRTUAL_E;
      436     4250        %INCLUDE UD_ERRORS_C;
      437     4292        %INCLUDE UM_ERRORS_C;
      438     4326
      439     4327                                                /* Input parameters         */
      440     4328        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
      441     4404
      442     4405                                                /* AUTO Storage             */
      443     4406        %KL_ERRMSG_RQS (FPTN=KL@RQS,STCLASS=AUTO);
      444     4581    1   DCL RQS_SZ UBIN;
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:85   
      445     4582        %KL_ERRMSG_RSP (FPTN=KL@RSP,STCLASS=AUTO);
      446     4658    1   DCL RSP_SZ UBIN;
      447     4659
      448     4660    1   DCL USR_BUF$ CPTR;
      449     4661    1   DCL USR_BUFSZ UBIN;
      450     4662    1   DCL I UBIN;
      451     4663    1   DCL FLAGLEV UBIN;
      452     4664    1   DCL MIN_SIZE UBIN;
      453     4665
      454     4666
      455     4667                                                /*  Based Structures        */
      456     4668
      457     4669        %G$JIT (FPTN=G$JIT,STCLASS="BASED(G$JIT$)");
      458     5083        %G$TCB (FPTN=G$TCB,STCLASS="BASED(G$TCB$)");
      459     5104        %G$EXCFR (FPTN=G$EXCFR,STCLASS=BASED);
      460     5486        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
      461     8460        %FPT_ERRMSG (FPTN=FPT$ERRMSG,STCLASS=BASED,VECTORS=NO);
      462     8488        %VLP_ERRCODE (FPTN=VLP$ERRCODE,STCLASS=BASED);
      463     8534        %VLR_ERRMSG (FPTN=VLR$ERRMSG,STCLASS=BASED);
      464     8551        %KL_ERRMSG_RQS(FPTN=SHORT$RQS,STCLASS=BASED,FILE_PARAMS=NO);
      465     8726        %KL_ERRMSG_RQS(FPTN=LONG$RQS,STCLASS=BASED,FILE_PARAMS=YES);
      466     8901
      467     8902    1   DCL 1 B$NAME BASED,
      468     8903    1         2 L UBIN BYTE UNAL,
      469     8904    1         2 TEXT CHAR(B$NAME.L) UNAL;
      470     8905    1   DCL B$CHARS(0:0) CHAR(1) UNAL BASED;
      471     8906    1   DCL B$CHAR8 CHAR(8) BASED;
      472     8907
      473     8908    1   DCL B$BUF CHAR(KL@RSP.MESSAGE_SZ) BASED;
      474     8909    1   DCL B$USRBUF CHAR(USR_BUFSZ) BASED;
      475     8910
      476     8911                                                /* EQUS                     */
      477     8912        %G$JIT_E;
      478     8974
      479     8975                                                /* Internal Data            */
      480     8976        %VLP_ERRCODE (FPTN=EERRMSGALT,ERR#=%E$ERRMSGALT,SEV=G_SEV_CONT#,
      481     8977                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:86   
      482     9023        %VLP_ERRCODE (FPTN=EINTLVL,ERR#=%E$INTLVL,SEV=G_SEV_ERROR#,
      483     9024                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      484     9070        %VLP_ERRCODE (FPTN=EXCON_PROG,ERR#=%E$XCON_PROG,SEV=G_SEV_ERROR#,
      485     9071                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      486     9117        %VLP_ERRCODE (FPTN=EBADVECT1,ERR#=%E$BADVECT1,SEV=G_SEV_ERROR#,
      487     9118                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      488     9164        %VLP_ERRCODE (FPTN=EBADVECT2,ERR#=%E$BADVECT2,SEV=G_SEV_ERROR#,
      489     9165                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      490     9211        %VLP_ERRCODE (FPTN=EBADVECT3,ERR#=%E$BADVECT3,SEV=G_SEV_ERROR#,
      491     9212                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      492     9258
      493     9259                                                /*  External data           */
      494     9260    1   DCL G$JIT$ PTR SYMREF READONLY;
      495     9261    1   DCL G$TCB$ PTR SYMREF READONLY;
      496     9262    1   DCL G$UHJIT$ PTR SYMREF READONLY;
      497     9263
      498     9264                                                /* External Procedures      */
      499     9265    1   DCL GUD$MAPPER ENTRY(1);
      500     9266    1   DCL KNB$GETRESP ENTRY(4) ALTRET;
      501     9267
      502     9268
      503     9269                                                /* String Substitutions     */
      504     9270        %SUB V$=GUD_PARAMS.PTRS.PAR1$;
      505     9271        %SUB CODE$=GUD_PARAMS.PTRS.PAR2$;
      506     9272        %SUB BUF$=GUD_PARAMS.PTRS.PAR3$;
      507     9273        %SUB BUF_BOUND=GUD_PARAMS.BND.PAR3;
      508     9274        %SUB NAME$=GUD_PARAMS.PTRS.PAR4$;
      509     9275        %SUB ACCT$=GUD_PARAMS.PTRS.PAR5$;
      510     9276        %SUB PASS$=GUD_PARAMS.PTRS.PAR6$;
      511     9277        %SUB FIELD1$=GUD_PARAMS.PTRS.PAR7$;
      512     9278        %SUB FIELD2$=GUD_PARAMS.PTRS.PAR8$;
      513     9279        %SUB FIELD3$=GUD_PARAMS.PTRS.PAR9$;
      514     9280        %SUB RESULTS$=GUD_PARAMS.PTRS.PAR10$;
      515     9281        %SUB ALTCODE$=GUD_PARAMS.PTRS.PAR11$;
      516     9282
      517     9283        %EJECT;
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:87   
      518     9284        /*D* M$ERRMSG is not allowed unless executing at the user base level,
      519     9285             and M$ERRMSG is not allowed if a Class 2 or Class 3 exit control
      520     9286             is in progress.
      521     9287        */
      522     9288    1      IF G$UHJIT.DMN.ID = %G_DMN_INT_SVC#

   9288   1 000005  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          1 000008  E846 007E                            LDR,R6   126,B6
          1 00000A  6D02                                 CMV,R6   2
          1 00000B  0981 000B                            BNE      s:9297,PREL

      523     9289    2      THEN DO;

      524     9290    2           GUD_PARAMS.ERR = EINTLVL;

   9290   1 00000D  8C80 0000 0002  00                   LDI      EINTLVL
          1 000010  DCC7 0004                            LDB,B5   @GUD_PARAMS,AUTO
          1 000012  8D45 0003                            SDI      3,B5

      525     9291    2           RETURN;

   9291   1 000014  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      526     9292    2           END;
      527     9293        /*E* ERROR: GUM-E$INTLVL-4
      528     9294             MESSAGE: M$ERRMSG not allowed from interrupt level.
      529     9295        */
      530     9296
      531     9297    1      IF (G$JIT.FRS & %G_RS_CL23#)

   9297   1 000017  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 00001A  D845 003E                            LDR,R5   62,B5
          1 00001C  D570 FF00                            AND,R5   -256,IMO
          1 00001E  5901 000B                            BEZ,R5   s:9306,PREL

      532     9298    2      THEN DO;

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:88   
      533     9299    2           GUD_PARAMS.ERR = EXCON_PROG;

   9299   1 000020  8C80 0000 0004  00                   LDI      EXCON_PROG
          1 000023  CCC7 0004                            LDB,B4   @GUD_PARAMS,AUTO
          1 000025  8D44 0003                            SDI      3,B4

      534     9300    2           RETURN;

   9300   1 000027  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      535     9301    2           END;
      536     9302        /*E* ERROR: GUM-E$XCON_PROG-4
      537     9303         MESSAGE: M$ERRMSG not allowed in LCP-6 when class 2 or 3 exit control in progress.
      538     9304        */
      539     9305
      540     9306    1      IF BUF$ = ADDR(NIL)

   9306   1 00002A  CCC7 0004                            LDB,B4   @GUD_PARAMS,AUTO
          1 00002C  8DC4 000A                            CMN      10,B4
          1 00002E  0901 0029                            BE       s:9320,PREL

      541     9307    1      THEN GOTO BAD_BUF;
      542     9308
      543     9309    1      IF V$->FPT$ERRMSG.FLAGLEV > 4

   9309   1 000030  BCC4 0006                            LDB,B3   6,B4
          1 000032  D843 0001                            LDR,R5   1,B3
          1 000034  D570 00FF                            AND,R5   255,IMO
          1 000036  5D04                                 CMV,R5   4
          1 000037  0381 0006                            BLE      s:9311,PREL

      544     9310    1      THEN FLAGLEV=4;

   9310   1 000039  4C04                                 LDV,R4   4
          1 00003A  CF47 006B                            STR,R4   FLAGLEV,AUTO
          1 00003C  0F81 0003                            B        s:9313,PREL

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:89   
      545     9311    1      ELSE FLAGLEV = V$->FPT$ERRMSG.FLAGLEV;

   9311   1 00003E  DF47 006B                            STR,R5   FLAGLEV,AUTO

      546     9312
      547     9313    1      USR_BUFSZ = BUF_BOUND +1;

   9313   1 000040  C844 0028                            LDR,R4   40,B4
          1 000042  4E01                                 ADV,R4   1
          1 000043  CF47 0069                            STR,R4   USR_BUFSZ,AUTO

      548     9314    1      IF V$->FPT$ERRMSG.INCLCODE

   9314   1 000045  8283                                 LB,'0010'X        ,B3
   9314   1 000046       0010
          1 000047  0581 0006                            BBF      s:9316,PREL

      549     9315    1      THEN MIN_SIZE = 14;

   9315   1 000049  3C0E                                 LDV,R3   14
          1 00004A  BF47 006C                            STR,R3   MIN_SIZE,AUTO
          1 00004C  0F81 0004                            B        s:9317,PREL

      550     9316    1      ELSE MIN_SIZE = 1;

   9316   1 00004E  3C01                                 LDV,R3   1
          1 00004F  BF47 006C                            STR,R3   MIN_SIZE,AUTO

      551     9317    1      MIN_SIZE = MIN_SIZE + FLAGLEV;

   9317   1 000051  BA47 006B                            ADD,R3   FLAGLEV,AUTO
          1 000053  BF47 006C                            STR,R3   MIN_SIZE,AUTO

      552     9318
      553     9319    1      IF MIN_SIZE > USR_BUFSZ

   9319   1 000055  B954                                 CMR,R3   R4
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:90   
          1 000056  0381 0009                            BLE      s:9330,PREL

      554     9320    2      THEN DO;

   9316   1                              BAD_BUF         null
      555     9321    2   BAD_BUF: ;
      556     9322    2           GUD_PARAMS.ERR = EBADVECT2;

   9322   1 000058  8C80 0000 0008  00   BAD_BUF         LDI      EBADVECT2
          1 00005B  8D44 0003                            SDI      3,B4

      557     9323    2           RETURN;

   9323   1 00005D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      558     9324    2           END;
      559     9325        /*E* ERROR: GUM-E$BADVECT2-4
      560     9326             MESSAGE: Your buffer is too small for the options specified via M$ERRMSG.
      561     9327        */
      562     9328
      563     9329
      564     9330    1      KL@RQS = '0'B;

   9330   1 000060  5C3E                                 LDV,R5   62
          1 000061  0021                                 ALR      ;
          1 000062       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000064       4007 0006                                ALPHANUM(KL@RQS,AUTO,,R5,FILL)

      565     9331    1      KL@RQS.FCN = %IGA_ERRMSG_RQS;

   9331   1 000066  6C2D                                 LDV,R6   45
          1 000067  437F                                 CSYNC    s:9331,SPREL
          1 000068  E7C7 0006                            STH,R6   KL@RQS,AUTO

      566     9332    1      KL@RQS.USR# = G$JIT.USR#;

   9332   1 00006A  C845 0004                            LDR,R4   4,B5
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:91   
          1 00006C  CAC7 0006                            SRM,R4,'00FF'X    KL@RQS,AUTO
          1 00006E       00FF

      567     9333    1      KL@RQS.SUBLANG = V$->FPT$ERRMSG.SUBLANG;

   9333   1 00006F  BCC4 0006                            LDB,B3   6,B4
          1 000071  C803                                 LDR,R4   ,B3
          1 000072  CAC7 0007                            SRM,R4,'0020'X    KL@RQS+1,AUTO
          1 000074       0020

      568     9334    1      KL@RQS.SUBFILE = V$->FPT$ERRMSG.SUBFILE;

   9334   1 000075  BCC4 0006                            LDB,B3   6,B4
          1 000077  C803                                 LDR,R4   ,B3
          1 000078  4043                                 SOR,R4   3
          1 000079  CAC7 0007                            SRM,R4,'0010'X    KL@RQS+1,AUTO
          1 00007B       0010

      569     9335    1      KL@RQS.SUBMESS = V$->FPT$ERRMSG.SUBMESS;

   9335   1 00007C  BCC4 0006                            LDB,B3   6,B4
          1 00007E  C803                                 LDR,R4   ,B3
          1 00007F  4043                                 SOR,R4   3
          1 000080  CAC7 0007                            SRM,R4,'0008'X    KL@RQS+1,AUTO
          1 000082       0008

      570     9336    1      KL@RQS.INCLCODE = V$->FPT$ERRMSG.INCLCODE;

   9336   1 000083  BCC4 0006                            LDB,B3   6,B4
          1 000085  C803                                 LDR,R4   ,B3
          1 000086  4042                                 SOR,R4   2
          1 000087  CAC7 0007                            SRM,R4,'0004'X    KL@RQS+1,AUTO
          1 000089       0004

      571     9337
      572     9338    2      DO CASE(V$->FPT$ERRMSG.SOURCE);

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:92   
   9338   1 00008A  BCC4 0006                            LDB,B3   6,B4
          1 00008C  B803                                 LDR,R3   ,B3
          1 00008D  B570 0007                            AND,R3   7,IMO
          1 00008F  3D03                                 CMV,R3   3
          1 000090  0281 003D                            BGE      s:9368,PREL
          1 000092  A830 0000 0098  01                   LDR,R2   s:9338+14,R3
          1 000095  83A0 0000 009B  01                   JMP      s:9340,R2
          1 000098       0000                            DC       s:9340,PREL
          1 000099       0015                            DC       s:9353,PREL
          1 00009A       0026                            DC       s:9360,PREL

      573     9339    2       CASE(0)/*passed*/;

      574     9340    2         IF CODE$ ~= ADDR(NIL)

   9340   1 00009B  8DC4 0008                            CMN      8,B4
          1 00009D  0901 0008                            BE       s:9343,PREL

      575     9341    2         THEN KL@RQS.ERR = CODE$->VLP$ERRCODE;

   9341   1 00009F  ACC4 0008                            LDB,B2   8,B4
          1 0000A1  8C82                                 LDI      ,B2
          1 0000A2  8D47 000A                            SDI      KL@RQS+4,AUTO
          1 0000A4  0F81 0029                            B        s:9368,PREL

      576     9342
      577     9343    3         ELSE DO;

      578     9344    3   BAD_CALL:  ;

   9344   1                              BAD_CALL        null
      579     9345    3              GUD_PARAMS.ERR = EBADVECT1;

   9345   1 0000A6  8C80 0000 0006  00   BAD_CALL        LDI      EBADVECT1
          1 0000A9  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 0000AB  8D46 0003                            SDI      3,B6

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:93   
      580     9346    3              RETURN;

   9346   1 0000AD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      581     9347    3              END;
      582     9348        /*E* ERROR: GUM-E$BADVECT1-4
      583     9349             MESSAGE: Error Code specification for M$ERRMSG is bad.
      584     9350        */
      585     9351
      586     9352    2       CASE(1)/*trap*/;

      587     9353    2         IF G$TCB.CURRSZ = 0

   9353   1 0000B0  AC80 0000 0000  xsym                 LDB,B2   G$TCB$
          1 0000B3  C842 0005                            LDR,R4   5,B2
          1 0000B5  4971                                 BEZ,R4   s:9343,SPREL

      588     9354    2         THEN GOTO BAD_CALL;
      589     9355
      590     9356    2         KL@RQS.ERR = G$TCB.STK$->G$EXCFR.TRLR.ERR;

   9356   1 0000B6  9CC2 0002                            LDB,B1   2,B2
          1 0000B8  8CC1 002B                            LDI      43,B1
          1 0000BA  8D47 000A                            SDI      KL@RQS+4,AUTO

      591     9357    2         KL@RQS.ERR.SEV = 0;

   9357   1 0000BC  8847 000B                            LBF,'0007'X       KL@RQS+5,AUTO
   9357   1 0000BE       0007
          1 0000BF  0F81 000E                            B        s:9368,PREL

      592     9358
      593     9359    2       CASE(2)/*altret*/;

      594     9360    2         IF G$TCB.ALT$->G$EXCFR.ALTEMPTY ~= 0

   9360   1 0000C1  AC80 0000 0000  xsym                 LDB,B2   G$TCB$
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:94   
          1 0000C4  9C82                                 LDB,B1   ,B2
          1 0000C5  C801                                 LDR,R4   ,B1
          1 0000C6  49E0                                 BNEZ,R4  s:9343,SPREL

      595     9361    2         THEN GOTO BAD_CALL;
      596     9362
      597     9363    2         KL@RQS.ERR = G$TCB.ALT$->G$EXCFR.TRLR.ERR;

   9363   1 0000C7  8CC1 002B                            LDI      43,B1
          1 0000C9  8D47 000A                            SDI      KL@RQS+4,AUTO

      598     9364    2         KL@RQS.ERR.SEV = 0;

   9364   1 0000CB  8847 000B                            LBF,'0007'X       KL@RQS+5,AUTO
   9364   1 0000CD       0007

      599     9365
      600     9366    2         END/*do case*/;

      601     9367
      602     9368    1      IF V$->FPT$ERRMSG.MY_LANG = '1'B

   9368   1 0000CE  BCC4 0006                            LDB,B3   6,B4
          1 0000D0  8283                                 LB,'0008'X        ,B3
          1 0000D1       0008
          1 0000D2  0581 0009                            BBF      s:9370,PREL

      603     9369    1      THEN KL@RQS.LANG = G$JIT.LANG;

   9369   1 0000D4  E845 0099                            LDR,R6   153,B5
          1 0000D6  6008                                 SOL,R6   8
          1 0000D7  6068                                 SAR,R6   8
          1 0000D8  E7C7 0007                            STH,R6   KL@RQS+1,AUTO
          1 0000DA  0F81 0005                            B        s:9372,PREL

      604     9370    1      ELSE KL@RQS.LANG = V$->FPT$ERRMSG.LANG;

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:95   
   9370   1 0000DC  E0C3 0001                            LDH,R6   1,B3
          1 0000DE  E7C7 0007                            STH,R6   KL@RQS+1,AUTO

      605     9371
      606     9372    1      IF ALTCODE$ = ADDR(NIL)

   9372   1 0000E0  8DC4 001A                            CMN      26,B4
          1 0000E2  0981 0006                            BNE      s:9375,PREL

      607     9373    1      THEN KL@RQS.ALTCODE_EXISTS = '0'B;

   9373   1 0000E4  8847 0007                            LBF,'0002'X       KL@RQS+1,AUTO
   9373   1 0000E6       0002
          1 0000E7  0F81 0019                            B        s:9382,PREL

      608     9374    2      ELSE DO;

      609     9375    2           GUD_PARAMS.USR_PARAM_INDX = %PAR11#;

   9375   1 0000E9  4C02                                 LDV,R4   2
          1 0000EA  CF44 004F                            STR,R4   79,B4

      610     9376    2           GUD_PARAMS.ASDT_MCL_INDX = %GM_LPAR6#;

   9376   1 0000EC  3C0F                                 LDV,R3   15
          1 0000ED  BF44 004E                            STR,R3   78,B4

      611     9377    2           CALL GUD$MAPPER(GUD_PARAMS);

   9377   1 0000EF  BBC7 0004                            LAB,B3   @GUD_PARAMS,AUTO
          1 0000F1  CBF0 0100                            LAB,B4   256,IMO
          1 0000F3  E380 0000 0000  xent                 LNJ,B6   GUD$MAPPER
          1 0000F6       0001                            DC       s:9378,PREL

      612     9378    2           KL@RQS.ALTCODE_EXISTS = '1'B;

   9378   1 0000F7  8947 0007                            LBT,'0002'X       KL@RQS+1,AUTO
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:96   
   9378   1 0000F9       0002

      613     9379    2           KL@RQS.ALTERR = ALTCODE$->VLP$ERRCODE;

   9379   1 0000FA  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 0000FC  DCC6 001A                            LDB,B5   26,B6
          1 0000FE  8C85                                 LDI      ,B5
          1 0000FF  8D47 000C                            SDI      KL@RQS+6,AUTO

      614     9380    2           END;

      615     9381
      616     9382    1      IF NAME$ = ADDR(NIL)

   9382   1 000101  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000103  8DC6 000C                            CMN      12,B6
          1 000105  0981 0009                            BNE      s:9389,PREL

      617     9383    2      THEN DO;

      618     9384    2           KL@RQS.FID_EXISTS = '0'B;

   9384   1 000107  8847 0007                            LBF,'0001'X       KL@RQS+1,AUTO
   9384   1 000109       0001

      619     9385    2           RQS_SZ = SIZEC(SHORT$RQS);

   9385   1 00010A  6C10                                 LDV,R6   16
          1 00010B  EF47 0025                            STR,R6   RQS_SZ,AUTO

      620     9386    2           END;

   9386   1 00010D  0F81 005D                            B        s:9412,PREL

      621     9387
      622     9388    2      ELSE DO;

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:97   
      623     9389    2           IF (NAME$ ->B$NAME.L = 0) OR

   9389   1 00010F  DCC6 000C                            LDB,B5   12,B6
          1 000111  E285                                 LLH,R6   ,B5
          1 000112  6901 0010                            BEZ,R6   s:9393,PREL
          1 000114  C856                                 LDR,R4   R6
          1 000115  CB80 0000 0000  02                   LAB,B4   0
          1 000118  0022                                 ACM      ;
          1 000119       C005 0000                                ALPHANUM(0,B5,1,R4,FILL),;
          1 00011B       4104 0000                                ALPHANUM(0,B4,,1,FILL)
          1 00011D  5381 0005                            CBE      s:9393,PREL
          1 00011F  C946 0029                            CMR,R4   41,B6
          1 000121  0381 0009                            BLE      s:9399,PREL

      624     9390    2             (NAME$ ->B$NAME.TEXT = ' ') OR
      625     9391    2             (NAME$ ->B$NAME.L > GUD_PARAMS.BND.PAR4)
      626     9392    3           THEN DO;

      627     9393    3                GUD_PARAMS.ERR = EBADVECT3;

   9393   1 000123  8C80 0000 000A  00                   LDI      EBADVECT3
          1 000126  8D46 0003                            SDI      3,B6

      628     9394    3                RETURN;

   9394   1 000128  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      629     9395    3                END;
      630     9396        /*E* ERROR: GUM-E$BADVECT3-E
      631     9397             MESSAGE:  Your M$ERRMSG request specified a bad errmsg file fid.
      632     9398        */
      633     9399    2           KL@RQS.FID_EXISTS = '1'B;

   9399   1 00012B  8947 0007                            LBT,'0001'X       KL@RQS+1,AUTO
   9399   1 00012D       0001

      634     9400    2           RQS_SZ = SIZEC(LONG$RQS);
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:98   

   9400   1 00012E  5C3E                                 LDV,R5   62
          1 00012F  DF47 0025                            STR,R5   RQS_SZ,AUTO

      635     9401    2           KL@RQS.FILENAME = NAME$->B$NAME;

   9401   1 000131  DCC6 000C                            LDB,B5   12,B6
          1 000133  B285                                 LLH,R3   ,B5
          1 000134  BF47 006E                            STR,R3   MIN_SIZE+2,AUTO
          1 000136  DFC7 006F                            STB,B5   MIN_SIZE+3,AUTO
          1 000138  AB85                                 LAB,B2   ,B5
          1 000139  2C00                                 LDV,R2   0
          1 00013A  E853                                 LDR,R6   R3
          1 00013B  6E01                                 ADV,R6   1
          1 00013C  BB87                                 LAB,B3   ,AUTO
          1 00013D  3C1C                                 LDV,R3   28
          1 00013E  7C20                                 LDV,R7   32
          1 00013F  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      636     9402
      637     9403    2           IF ACCT$ ~= ADDR(NIL)

   9403   1 000142  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000144  8DC6 000E                            CMN      14,B6
          1 000146  0901 000B                            BE       s:9405,PREL

      638     9404    2           THEN KL@RQS.FILEACCT = ACCT$->B$CHAR8;

   9404   1 000148  DCC6 000E                            LDB,B5   14,B6
          1 00014A  AB85                                 LAB,B2   ,B5
          1 00014B  2C00                                 LDV,R2   0
          1 00014C  6C08                                 LDV,R6   8
          1 00014D  BB87                                 LAB,B3   ,AUTO
          1 00014E  3C3C                                 LDV,R3   60
          1 00014F  0008                                 MMM
          1 000150  0F81 0006                            B        s:9407,PREL

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:99   
      639     9405    2           ELSE KL@RQS.FILEACCT = ' ';

   9405   1 000152  0021                                 ALR      ;
          1 000153       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          1 000155       4807 001E                                ALPHANUM(KL@RQS+24,AUTO,,8,FILL)

      640     9406
      641     9407    2           IF PASS$ ~= ADDR(NIL)

   9407   1 000157  437F                                 CSYNC    s:9405+4,SPREL
          1 000158  8DC6 0010                            CMN      16,B6
          1 00015A  0901 000B                            BE       s:9409,PREL

      642     9408    2           THEN KL@RQS.FILEPASS = PASS$->B$CHAR8;

   9408   1 00015C  DCC6 0010                            LDB,B5   16,B6
          1 00015E  AB85                                 LAB,B2   ,B5
          1 00015F  2C00                                 LDV,R2   0
          1 000160  6C06                                 LDV,R6   6
          1 000161  BB87                                 LAB,B3   ,AUTO
          1 000162  3C44                                 LDV,R3   68
          1 000163  0008                                 MMM
          1 000164  0F81 0006                            B        s:9412,PREL

      643     9409    2           ELSE KL@RQS.FILEPASS = ' ';

   9409   1 000166  0021                                 ALR      ;
          1 000167       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          1 000169       4607 0022                                ALPHANUM(KL@RQS+28,AUTO,,6,FILL)

      644     9410    2           END;

      645     9411
      646     9412    1      IF (V$->FPT$ERRMSG.DCB# =0)

   9412   1 00016B  437F                                 CSYNC    s:9409+4,SPREL
          1 00016C  DCC6 0006                            LDB,B5   6,B6
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:100  
          1 00016E  E285                                 LLH,R6   ,B5
          1 00016F  6981 0012                            BNEZ,R6  s:9417,PREL
          1 000171  8DC6 0012                            CMN      18,B6
          1 000173  0981 000E                            BNE      s:9417,PREL
          1 000175  8DC6 0014                            CMN      20,B6
          1 000177  0981 000A                            BNE      s:9417,PREL
          1 000179  8DC6 0016                            CMN      22,B6
          1 00017B  0981 0006                            BNE      s:9417,PREL

      647     9413    1        AND (FIELD1$ = ADDR(NIL) )
      648     9414    1        AND (FIELD2$ = ADDR(NIL) )
      649     9415    1        AND (FIELD3$ = ADDR(NIL) )
      650     9416    1      THEN KL@RQS.LEAVE_TOKEN = '0'B;

   9416   1 00017D  8847 0007                            LBF,'0040'X       KL@RQS+1,AUTO
   9416   1 00017F       0040
          1 000180  0F81 0004                            B        s:9419,PREL

      651     9417    1      ELSE KL@RQS.LEAVE_TOKEN = '1'B;

   9417   1 000182  8947 0007                            LBT,'0040'X       KL@RQS+1,AUTO
   9417   1 000184       0040

      652     9418
      653     9419    1      CALL KNB$GETRESP(ADDR(KL@RQS), RQS_SZ, ADDR(KL@RSP), SIZEC(KL@RSP));

   9419   1 000185  DBC7 0006                            LAB,B5   KL@RQS,AUTO
          1 000187  DFC7 006E                            STB,B5   MIN_SIZE+2,AUTO
          1 000189  CBC7 0026                            LAB,B4   KL@RSP,AUTO
          1 00018B  CFC7 0070                            STB,B4   MIN_SIZE+4,AUTO
          1 00018D  BBF0 0080                            LAB,B3   128,IMO
          1 00018F  BFC7 0078                            STB,B3   MIN_SIZE+12,AUTO
          1 000191  ABC7 0070                            LAB,B2   MIN_SIZE+4,AUTO
          1 000193  AFC7 0076                            STB,B2   MIN_SIZE+10,AUTO
          1 000195  9BC7 0025                            LAB,B1   RQS_SZ,AUTO
          1 000197  9FC7 0074                            STB,B1   MIN_SIZE+8,AUTO
          1 000199  EBC7 006E                            LAB,B6   MIN_SIZE+2,AUTO
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:101  
          1 00019B  EFC7 0072                            STB,B6   MIN_SIZE+6,AUTO
          1 00019D  BBC7 0072                            LAB,B3   MIN_SIZE+6,AUTO
          1 00019F  CBF0 0400                            LAB,B4   1024,IMO
          1 0001A1  E380 0000 0000  xent                 LNJ,B6   KNB$GETRESP
          1 0001A4       0001                            DC       s:9421,PREL

      654     9420
      655     9421    1      USR_BUF$ = BUF$;

   9421   1 0001A5  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 0001A7  DCC6 000A                            LDB,B5   10,B6
          1 0001A9  DFC7 0067                            STB,B5   USR_BUF$,AUTO

      656     9422    1      USR_BUF$->B$USRBUF = ' ';

   9422   1 0001AB  8CC7 0067                            LDI      USR_BUF$,AUTO
          1 0001AD  B856                                 LDR,R3   R6
          1 0001AE  E570 7FFF                            AND,R6   32767,IMO
          1 0001B0  8D47 006E                            SDI      MIN_SIZE+2,AUTO
          1 0001B2  CCC7 006E                            LDB,B4   MIN_SIZE+2,AUTO
          1 0001B4  304F                                 SOR,R3   15
          1 0001B5  BF47 0070                            STR,R3   MIN_SIZE+4,AUTO
          1 0001B7  CFC7 0071                            STB,B4   MIN_SIZE+5,AUTO
          1 0001B9  AB80 0000 0000  02                   LAB,B2   0
          1 0001BC  2C00                                 LDV,R2   0
          1 0001BD  6C01                                 LDV,R6   1
          1 0001BE  BB84                                 LAB,B3   ,B4
          1 0001BF  F847 0069                            LDR,R7   USR_BUFSZ,AUTO
          1 0001C1  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      657     9423    1      IF V$->FPT$ERRMSG.FLAGLEV ~= 0

   9423   1 0001C4  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 0001C6  DCC6 0006                            LDB,B5   6,B6
          1 0001C8  82C5 0001                            LB,'00FF'X        1,B5
          1 0001CA       00FF
          1 0001CB  0581 0039                            BBF      s:9432,PREL
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:102  

      658     9424    2      THEN DO;

      659     9425    3           DO I=0 TO FLAGLEV;

   9425   1 0001CD  8747 006A                            CL       I,AUTO
          1 0001CF  0F81 0011                            B        s:9427+2,PREL

      660     9426    3                USR_BUF$->B$CHARS(I) = '*';

   9426   1 0001D1  8CC7 0067                            LDI      USR_BUF$,AUTO
          1 0001D3  B856                                 LDR,R3   R6
          1 0001D4  E570 7FFF                            AND,R6   32767,IMO
          1 0001D6  8D47 006E                            SDI      MIN_SIZE+2,AUTO
          1 0001D8  ECC7 006E                            LDB,B6   MIN_SIZE+2,AUTO
          1 0001DA  304F                                 SOR,R3   15
          1 0001DB  BA47 006A                            ADD,R3   I,AUTO
          1 0001DD  5C2A                                 LDV,R5   42
          1 0001DE  D7B6                                 STH,R5   ,B6,R3

      661     9427    3                END;

   9427   1 0001DF  8AC7 006A                            INC      I,AUTO
          1 0001E1  E847 006A                            LDR,R6   I,AUTO
          1 0001E3  E947 006B                            CMR,R6   FLAGLEV,AUTO
          1 0001E5  03EC                                 BLE      s:9426,SPREL

      662     9428    2           USR_BUF$ = PINCRC(USR_BUF$, V$->FPT$ERRMSG.FLAGLEV);

   9428   1 0001E6  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 0001E8  DCC6 0006                            LDB,B5   6,B6
          1 0001EA  B845 0001                            LDR,R3   1,B5
          1 0001EC  B570 00FF                            AND,R3   255,IMO
          1 0001EE  8CC7 0067                            LDI      USR_BUF$,AUTO
          1 0001F0  7031                                 DCL,R7   1
          1 0001F1  8D47 006E                            SDI      MIN_SIZE+2,AUTO
          1 0001F3  F853                                 LDR,R7   R3
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:103  
          1 0001F4  6C00                                 LDV,R6   0
          1 0001F5  8447 006E                            AID      MIN_SIZE+2,AUTO
          1 0001F7  7071                                 DCR,R7   1
          1 0001F8  8D47 0067                            SDI      USR_BUF$,AUTO

      663     9429    2           USR_BUFSZ = USR_BUFSZ - V$->FPT$ERRMSG.FLAGLEV;

   9429   1 0001FA  DCC6 0006                            LDB,B5   6,B6
          1 0001FC  D845 0001                            LDR,R5   1,B5
          1 0001FE  D570 00FF                            AND,R5   255,IMO
          1 000200  D247 0069                            SUB,R5   USR_BUFSZ,AUTO
          1 000202  8255                                 NEG      R5
          1 000203  DF47 0069                            STR,R5   USR_BUFSZ,AUTO

      664     9430    2           END;

      665     9431
      666     9432    1      IF USR_BUFSZ < KL@RSP.MESSAGE_SZ

   9432   1 000205  E2C7 0027                            LLH,R6   KL@RSP+1,AUTO
          1 000207  E947 0069                            CMR,R6   USR_BUFSZ,AUTO
          1 000209  0381 0008                            BLE      s:9438,PREL

      667     9433    2      THEN DO;

      668     9434    2           KL@RSP.MESSAGE_SZ = USR_BUFSZ;

   9434   1 00020B  D847 0069                            LDR,R5   USR_BUFSZ,AUTO
          1 00020D  D7C7 0027                            STH,R5   KL@RSP+1,AUTO

      669     9435    2           KL@RSP.MSGCOMP = '0'B;

   9435   1 00020F  8847 0027                            LBF,'0008'X       KL@RSP+1,AUTO
   9435   1 000211       0008

      670     9436    2           END;

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:104  
      671     9437
      672     9438    1      USR_BUF$->B$BUF = ADDR(KL@RSP.MESSAGE)->B$BUF;

   9438   1 000212  8CC7 0067                            LDI      USR_BUF$,AUTO
          1 000214  B856                                 LDR,R3   R6
          1 000215  E570 7FFF                            AND,R6   32767,IMO
          1 000217  8D47 006E                            SDI      MIN_SIZE+2,AUTO
          1 000219  DCC7 006E                            LDB,B5   MIN_SIZE+2,AUTO
          1 00021B  304F                                 SOR,R3   15
          1 00021C  AB87                                 LAB,B2   ,AUTO
          1 00021D  2C54                                 LDV,R2   84
          1 00021E  E2C7 0027                            LLH,R6   KL@RSP+1,AUTO
          1 000220  BB85                                 LAB,B3   ,B5
          1 000221  0008                                 MMM

      673     9439
      674     9440    1      IF RESULTS$ ~= ADDR(NIL)

   9440   1 000222  8DC6 0018                            CMN      24,B6
          1 000224  0901 0048                            BE       s:9458,PREL

      675     9441    2      THEN DO;

      676     9442    2           GUD_PARAMS.USR_PARAM_INDX = %PAR10#;

   9442   1 000226  6C01                                 LDV,R6   1
          1 000227  EF46 004F                            STR,R6   79,B6

      677     9443    2           GUD_PARAMS.ASDT_MCL_INDX = %GM_LPAR6#;

   9443   1 000229  5C0F                                 LDV,R5   15
          1 00022A  DF46 004E                            STR,R5   78,B6

      678     9444    2           CALL GUD$MAPPER(GUD_PARAMS);

   9444   1 00022C  BBC7 0004                            LAB,B3   @GUD_PARAMS,AUTO
          1 00022E  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:105  
          1 000230  E380 0000 0000  xent                 LNJ,B6   GUD$MAPPER
          1 000233       0001                            DC       s:9446,PREL

      679     9445
      680     9446    2           RESULTS$->VLR$ERRMSG = '0'B;

   9446   1 000234  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000236  DCC6 0018                            LDB,B5   24,B6
          1 000238  8705                                 CL       ,B5

      681     9447    2           RESULTS$->VLR$ERRMSG.NOFILE = KL@RSP.NOFILE;

   9447   1 000239  DCC6 0018                            LDB,B5   24,B6
          1 00023B  E847 0027                            LDR,R6   KL@RSP+1,AUTO
          1 00023D  6008                                 SOL,R6   8
          1 00023E  EA85                                 SRM,R6,'4000'X    ,B5
          1 00023F       4000

      682     9448    2           RESULTS$->VLR$ERRMSG.NOMSG = KL@RSP.NOMSG;

   9448   1 000240  DCC6 0018                            LDB,B5   24,B6
          1 000242  E847 0027                            LDR,R6   KL@RSP+1,AUTO
          1 000244  6008                                 SOL,R6   8
          1 000245  EA85                                 SRM,R6,'2000'X    ,B5
          1 000246       2000

      683     9449    2           RESULTS$->VLR$ERRMSG.ALTMSG = KL@RSP.ALTMSG;

   9449   1 000247  DCC6 0018                            LDB,B5   24,B6
          1 000249  E847 0027                            LDR,R6   KL@RSP+1,AUTO
          1 00024B  6008                                 SOL,R6   8
          1 00024C  EA85                                 SRM,R6,'1000'X    ,B5
          1 00024D       1000

      684     9450    2           RESULTS$->VLR$ERRMSG.NNATIVE = KL@RSP.NNATIVE;

   9450   1 00024E  DCC6 0018                            LDB,B5   24,B6
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:106  
          1 000250  E847 0027                            LDR,R6   KL@RSP+1,AUTO
          1 000252  6008                                 SOL,R6   8
          1 000253  EA85                                 SRM,R6,'0400'X    ,B5
          1 000254       0400

      685     9451    2           RESULTS$->VLR$ERRMSG.INERR = KL@RSP.INERR;

   9451   1 000255  DCC6 0018                            LDB,B5   24,B6
          1 000257  E847 0027                            LDR,R6   KL@RSP+1,AUTO
          1 000259  6008                                 SOL,R6   8
          1 00025A  EA85                                 SRM,R6,'0100'X    ,B5
          1 00025B       0100

      686     9452    2           RESULTS$->VLR$ERRMSG.MSGCOMP = KL@RSP.MSGCOMP;

   9452   1 00025C  DCC6 0018                            LDB,B5   24,B6
          1 00025E  E847 0027                            LDR,R6   KL@RSP+1,AUTO
          1 000260  6008                                 SOL,R6   8
          1 000261  EA85                                 SRM,R6,'0800'X    ,B5
          1 000262       0800

      687     9453
      688     9454    2           IF KL@RSP.MSGCOMP = '0'B

   9454   1 000263  82C7 0027                            LB,'0008'X        KL@RSP+1,AUTO
   9454   1 000265       0008
          1 000266  0501 0006                            BBT      s:9458,PREL

      689     9455    2           THEN GUD_PARAMS.ERR = EERRMSGALT;

   9455   1 000268  8C80 0000 0000  00                   LDI      EERRMSGALT
          1 00026B  8D46 0003                            SDI      3,B6

      690     9456    2           END;

      691     9457
      692     9458    1      RETURN;
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:107  

   9458   1 00026D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      693     9459    1   END GUM$ERRMSG;
      694     9460        %EOD;

PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:108  
--  Include file information  --

   UM_ERRORS_C.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GUM$ERRMSG.
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:109  

 **** Variables and constants ****

  ****  Section 000 RoData GUM$ERRMSG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w STRC(32)    r     1 EBADVECT1                  8-0-0/w STRC(32)    r     1 EBADVECT2
     A-0-0/w STRC(32)    r     1 EBADVECT3                  0-0-0/w STRC(32)    r     1 EERRMSGALT
     2-0-0/w STRC(32)    r     1 EINTLVL                    4-0-0/w STRC(32)    r     1 EXCON_PROG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @GUD_PARAMS               6B-0-0/w UBIN(16)    r     1 FLAGLEV
    *0-0-0/w STRC(1280)  r     1 GUD_PARAMS                6A-0-0/w UBIN(16)    r     1 I
     6-0-0/w STRC(496)   r     1 KL@RQS                    26-0-0/w STRC(1024)  r     1 KL@RSP
    6C-0-0/w UBIN(16)    r     1 MIN_SIZE                  25-0-0/w UBIN(16)    r     1 RQS_SZ
    67-0-0/w PTR         r     1 USR_BUF$                  69-0-0/w UBIN(16)    r     1 USR_BUFSZ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w PTR         r     1 G$TCB$
     0-0-0/w PTR         r     1 G$UHJIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 B$BUF                      0-0-0/c CHAR(8)     r     1 B$CHAR8
     0-0-0/c CHAR        r     1 B$CHARS(0:0)
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:110  
     0-0-0/c ASTR(8)     r     1 B$NAME                     0-0-0/c ACHR        r     1 B$USRBUF
     0-0-0/w STRC(32)    r     1 FPT$ERRMSG                 0-0-0/w STRC(736)   r     1 G$EXCFR
     0-0-0/w STRC(5616)  r     1 G$JIT                      0-0-0/w STRC(96)    r     1 G$TCB
     0-0-0/w STRC(6480)  r     1 G$UHJIT                    0-0-0/w STRC(496)   r     1 LONG$RQS
     0-0-0/w STRC(128)   r     1 SHORT$RQS                  0-0-0/w STRC(32)    r     1 VLP$ERRCODE
     0-0-0/w STRC(16)    r     1 VLR$ERRMSG


   Procedure GUM$ERRMSG requires 624 words for executable code.
   Procedure GUM$ERRMSG requires 122 words of local(AUTO) storage.
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:111  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:112  
          MINI XREF LISTING

B$BUF
      8908**DCL      9438<<ASSIGN   9438>>ASSIGN
B$CHAR8
      8906**DCL      9404>>ASSIGN   9408>>ASSIGN
B$CHARS
      8905**DCL      9426<<ASSIGN
B$NAME
      8902**DCL      9401>>ASSIGN
B$NAME.L
      8903**DCL      8904--IMP-SIZ  9389>>IF       9389>>IF       9389>>IF       9401>>ASSIGN
B$NAME.TEXT
      8904**DCL      9389>>IF
B$USRBUF
      8909**DCL      9422<<ASSIGN
BAD_BUF
      9316**LABEL    9307--GOTO
BAD_CALL
      9344**LABEL    9354--GOTO     9361--GOTO
EBADVECT1
      9132**DCL      9345>>ASSIGN
EBADVECT2
      9179**DCL      9322>>ASSIGN
EBADVECT3
      9226**DCL      9393>>ASSIGN
EERRMSGALT
      8991**DCL      9455>>ASSIGN
EINTLVL
      9038**DCL      9290>>ASSIGN
EXCON_PROG
      9085**DCL      9299>>ASSIGN
FLAGLEV
      4663**DCL      9310<<ASSIGN   9311<<ASSIGN   9317>>ASSIGN   9425>>DOINDEX
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:113  
FPT$ERRMSG.DCB#
      8483**DCL      9412>>IF
FPT$ERRMSG.FLAGLEV
      8486**DCL      9309>>IF       9311>>ASSIGN   9423>>IF       9428>>ASSIGN   9429>>ASSIGN
FPT$ERRMSG.INCLCODE
      8484**DCL      9314>>IF       9336>>ASSIGN
FPT$ERRMSG.LANG
      8486**DCL      9370>>ASSIGN
FPT$ERRMSG.MY_LANG
      8485**DCL      9368>>IF
FPT$ERRMSG.SOURCE
      8485**DCL      9338>>DOCASE
FPT$ERRMSG.SUBFILE
      8483**DCL      9334>>ASSIGN
FPT$ERRMSG.SUBLANG
      8484**DCL      9333>>ASSIGN
FPT$ERRMSG.SUBMESS
      8483**DCL      9335>>ASSIGN
G$EXCFR.ALTEMPTY
      5123**DCL      9360>>IF
G$EXCFR.P$$
      5173**DCL      5173--REDEF    5173--REDEF
G$EXCFR.PREVSZ
      5123**DCL      5123--REDEF
G$EXCFR.TRLR.ERR
      5453**DCL      9356>>ASSIGN   9363>>ASSIGN
G$EXCFR.TRLR.EVID
      5410**DCL      5428--REDEF    5436--REDEF    5436--REDEF
G$EXCFR.TRLR.SUBC
      5387**DCL      5387--REDEF    5405--REDEF    5409--REDEF    5409--REDEF
G$JIT.ERRLOG
      5013**DCL      5016--REDEF
G$JIT.FRS
      4822**DCL      9297>>IF
G$JIT.JSUNIT
      4752**DCL      4753--REDEF
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:114  
G$JIT.LANG
      5016**DCL      9369>>ASSIGN
G$JIT.MCLS
      4751**DCL      4751--REDEF
G$JIT.TMRZ
      5020**DCL      5021--REDEF
G$JIT.USER_EXTIME
      4744**DCL      4745--REDEF
G$JIT.USER_MEMTIME
      4747**DCL      4747--REDEF
G$JIT.USER_SVTIME
      4746**DCL      4746--REDEF
G$JIT.USR#
      4741**DCL      9332>>ASSIGN
G$JIT$
      9260**DCL      4683--IMP-PTR  9297>>IF       9332>>ASSIGN   9369>>ASSIGN
G$TCB.ALT$
      5101**DCL      9360>>IF       9363>>ASSIGN
G$TCB.CURRSZ
      5102**DCL      9353>>IF
G$TCB.STK$
      5101**DCL      9356>>ASSIGN
G$TCB$
      9261**DCL      5097--IMP-PTR  9353>>IF       9356>>ASSIGN   9360>>IF       9363>>ASSIGN
G$UHJIT.DMN.ID
      7221**DCL      9288>>IF
G$UHJIT.ISA_USR
      6926**DCL      7221--REDEF
G$UHJIT.ISA_USR.P$$
      7001**DCL      7001--REDEF
G$UHJIT.TSA_CP.ISA.P$$
      8208**DCL      8208--REDEF
G$UHJIT.TSA_CP.P$$
      8079**DCL      8079--REDEF    8080--REDEF
G$UHJIT.TSA_DB.ISA.P$$
      7820**DCL      7820--REDEF
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:115  
G$UHJIT.TSA_DB.P$$
      7691**DCL      7691--REDEF    7692--REDEF
G$UHJIT.TSA_RTT.P$$
      8454**DCL      8454--REDEF    8455--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      7410**DCL      7410--REDEF
G$UHJIT.TSA_USR.P$$
      7281**DCL      7281--REDEF    7282--REDEF
G$UHJIT$
      9262**DCL      5503--IMP-PTR  9288>>IF
GUD$MAPPER
      9265**DCL-ENT  9377--CALL     9444--CALL
GUD_PARAMS
      4329**DCL        13--PROC     9377<>CALL     9444<>CALL
GUD_PARAMS.ASDT_MCL_INDX
      4392**DCL      9376<<ASSIGN   9443<<ASSIGN
GUD_PARAMS.BND
      4389**DCL      4390--REDEF
GUD_PARAMS.BND.PAR3
      4389**DCL      9313>>ASSIGN
GUD_PARAMS.BND.PAR4
      4389**DCL      9389>>IF
GUD_PARAMS.DESC
      4391**DCL      4392--REDEF
GUD_PARAMS.ERR
      4355**DCL      9290<<ASSIGN   9299<<ASSIGN   9322<<ASSIGN   9345<<ASSIGN   9393<<ASSIGN   9455<<ASSIGN
GUD_PARAMS.MCL.CODE
      4336**DCL      4336--REDEF
GUD_PARAMS.PTRS
      4385**DCL      4386--REDEF    4388--REDEF    4388--REDEF    4388--REDEF
GUD_PARAMS.PTRS.PAR1$
      4385**DCL      9309>>IF       9311>>ASSIGN   9314>>IF       9333>>ASSIGN   9334>>ASSIGN   9335>>ASSIGN
      9336>>ASSIGN   9338>>DOCASE   9368>>IF       9370>>ASSIGN   9412>>IF       9423>>IF       9428>>ASSIGN
      9429>>ASSIGN
GUD_PARAMS.PTRS.PAR10$
      4386**DCL      9440>>IF       9446>>ASSIGN   9447>>ASSIGN   9448>>ASSIGN   9449>>ASSIGN   9450>>ASSIGN
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:116  
      9451>>ASSIGN   9452>>ASSIGN
GUD_PARAMS.PTRS.PAR11$
      4386**DCL      9372>>IF       9379>>ASSIGN
GUD_PARAMS.PTRS.PAR2$
      4385**DCL      9340>>IF       9341>>ASSIGN
GUD_PARAMS.PTRS.PAR3$
      4385**DCL      9306>>IF       9421>>ASSIGN
GUD_PARAMS.PTRS.PAR4$
      4385**DCL      9382>>IF       9389>>IF       9389>>IF       9389>>IF       9389>>IF       9401>>ASSIGN
      9401>>ASSIGN
GUD_PARAMS.PTRS.PAR5$
      4385**DCL      9403>>IF       9404>>ASSIGN
GUD_PARAMS.PTRS.PAR6$
      4385**DCL      9407>>IF       9408>>ASSIGN
GUD_PARAMS.PTRS.PAR7$
      4385**DCL      9412>>IF
GUD_PARAMS.PTRS.PAR8$
      4385**DCL      9412>>IF
GUD_PARAMS.PTRS.PAR9$
      4385**DCL      9412>>IF
GUD_PARAMS.USR_PARAM_INDX
      4392**DCL      9375<<ASSIGN   9442<<ASSIGN
I
      4662**DCL      9425<<DOINDEX  9426>>ASSIGN
KL@RQS
      4421**DCL      9330<<ASSIGN   9419--CALL
KL@RQS.ALTCODE_EXISTS
      4447**DCL      9373<<ASSIGN   9378<<ASSIGN
KL@RQS.ALTERR
      4536**DCL      9379<<ASSIGN
KL@RQS.ERR
      4475**DCL      9341<<ASSIGN   9356<<ASSIGN   9363<<ASSIGN
KL@RQS.ERR.SEV
      4503**DCL      9357<<ASSIGN   9364<<ASSIGN
KL@RQS.FCN
      4422**DCL      9331<<ASSIGN
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:117  
KL@RQS.FID_EXISTS
      4448**DCL      9384<<ASSIGN   9399<<ASSIGN
KL@RQS.FILEACCT
      4577**DCL      9404<<ASSIGN   9405<<ASSIGN
KL@RQS.FILENAME
      4574**DCL      9401<<ASSIGN
KL@RQS.FILEPASS
      4578**DCL      9408<<ASSIGN   9409<<ASSIGN
KL@RQS.INCLCODE
      4442**DCL      9336<<ASSIGN
KL@RQS.LANG
      4433**DCL      9369<<ASSIGN   9370<<ASSIGN
KL@RQS.LEAVE_TOKEN
      4438**DCL      9416<<ASSIGN   9417<<ASSIGN
KL@RQS.SUBFILE
      4440**DCL      9334<<ASSIGN
KL@RQS.SUBLANG
      4439**DCL      9333<<ASSIGN
KL@RQS.SUBMESS
      4441**DCL      9335<<ASSIGN
KL@RQS.USR#
      4428**DCL      9332<<ASSIGN
KL@RSP
      4597**DCL      9419--CALL     9419--CALL
KL@RSP.ALTMSG
      4626**DCL      9449>>ASSIGN
KL@RSP.INERR
      4643**DCL      9451>>ASSIGN
KL@RSP.MESSAGE
      4655**DCL      9438--ASSIGN
KL@RSP.MESSAGE_SZ
      4609**DCL      8908--IMP-SIZ  9432>>IF       9434<<ASSIGN   9438>>ASSIGN   9438>>ASSIGN
KL@RSP.MSGCOMP
      4631**DCL      9435<<ASSIGN   9452>>ASSIGN   9454>>IF
KL@RSP.NNATIVE
      4635**DCL      9450>>ASSIGN
PL6.E3A0      #004=GUM$ERRMSG File=GUM$MCL.:E05TSI                               TUE 07/29/97 22:18 Page:118  
KL@RSP.NOFILE
      4617**DCL      9447>>ASSIGN
KL@RSP.NOMSG
      4621**DCL      9448>>ASSIGN
KNB$GETRESP
      9266**DCL-ENT  9419--CALL
LONG$RQS
      8741**DCL      9400--ASSIGN
MIN_SIZE
      4664**DCL      9315<<ASSIGN   9316<<ASSIGN   9317<<ASSIGN   9317>>ASSIGN   9319>>IF
RQS_SZ
      4581**DCL      9385<<ASSIGN   9400<<ASSIGN   9419<>CALL
SHORT$RQS
      8566**DCL      9385--ASSIGN
USR_BUF$
      4660**DCL      9421<<ASSIGN   9422>>ASSIGN   9426>>ASSIGN   9428<<ASSIGN   9428>>ASSIGN   9438>>ASSIGN
USR_BUFSZ
      4661**DCL      8909--IMP-SIZ  9313<<ASSIGN   9319>>IF       9422>>ASSIGN   9429<<ASSIGN   9429>>ASSIGN
      9432>>IF       9434>>ASSIGN
VLP$ERRCODE
      8502**DCL      9341>>ASSIGN   9379>>ASSIGN
VLR$ERRMSG
      8547**DCL      9446<<ASSIGN
VLR$ERRMSG.ALTMSG
      8547**DCL      9449<<ASSIGN
VLR$ERRMSG.INERR
      8548**DCL      9451<<ASSIGN
VLR$ERRMSG.MSGCOMP
      8548**DCL      9452<<ASSIGN
VLR$ERRMSG.NNATIVE
      8548**DCL      9450<<ASSIGN
VLR$ERRMSG.NOFILE
      8547**DCL      9447<<ASSIGN
VLR$ERRMSG.NOMSG
      8547**DCL      9448<<ASSIGN

PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:119  
      695        1        /*T***********************************************************/
      696        2        /*T*                                                         */
      697        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      698        4        /*T*                                                         */
      699        5        /*T***********************************************************/
      700        6        /*F* NAME: GUM$SPRIV
      701        7
      702        8             PURPOSE: This routine handler the M$SPRIV monitor service.
      703        9
      704       10        */
      705       11        GUM$SPRIV: PROC(GUD_PARAMS);
      706       12
      707       13        %INCLUDE G_JIT_M;
      708      278        %INCLUDE GU_MACROS_M;
      709      437 S      %INCLUDE GU_LCP6_M;
      710      438
      711      439                                                /* Input parameters         */
      712      440        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
      713      516
      714      517                                                /* AUTO Storage             */
      715      518    1   DCL AUTH_PRIVS BIT(32);
      716      519
      717      520                                                /*  Based Structures        */
      718      521    1   DCL G$PRIVS BIT(32) BASED WALIGNED;
      719      522
      720      523        %G$JIT (FPTN=G$JIT,STCLASS="BASED(G$JIT$)");
      721      937
      722      938        %FPT_SPRIV (FPTN=FPT$SPRIV,STCLASS=BASED,VECTORS=NO);
      723      961
      724      962                                                /* EQUS                     */
      725      963        %INCLUDE UD_ERRORS_C;
      726     1005
      727     1006                                                /* Internal Data            */
      728     1007        %VLP_ERRCODE (FPTN=ENOPRIV,ERR#=%E$NOPRIV,SEV=G_SEV_CONT#,
      729     1008                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      730     1054
      731     1055                                                /*  External data           */
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:120  
      732     1056    1   DCL G$JIT$ PTR SYMREF;
      733     1057
      734     1058                                                /* String Substitutions     */
      735     1059        %SUB V$=GUD_PARAMS.PTRS.PAR1$;
      736     1060        %SUB PRIV$=GUD_PARAMS.PTRS.PAR2$;
      737     1061        %SUB PPRIV$=GUD_PARAMS.PTRS.PAR3$;
      738     1062        %EJECT;
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:121  
      739     1063        /*D* NAME: GUM$SPRIV
      740     1064        */
      741     1065
      742     1066    1      AUTH_PRIVS = '0'B;
      743     1067
      744     1068        /*D* If the PRC option is specified, but PPRIV is not, the privileges
      745     1069             from JIT.PRIV.PRC will be used to verify the operation.
      746     1070        */
      747     1071    1      IF V$->FPT$SPRIV.PRC = '1'B
      748     1072    2      THEN DO;
      749     1073    2           IF PPRIV$ = ADDR(NIL)
      750     1074    2           THEN AUTH_PRIVS = G$JIT.PRIV.PRC;
      751     1075
      752     1076        /*D* If the PRC option is used with PPCHK = ALL, the privileges from
      753     1077             JIT.PRIV.PRC will be used only if all bits specified via the
      754     1078             PPRIV option are contained in JIT.PPRIV.
      755     1079        */
      756     1080    3           ELSE DO;
      757     1081    3                IF V$->FPT$SPRIV.PPCHK = '1'B/*ALL*/
      758     1082    3                THEN IF (G$JIT.PPRIV & PPRIV$->G$PRIVS) = PPRIV$->G$PRIVS
      759     1083    3                     THEN AUTH_PRIVS = G$JIT.PRIV.PRC;
      760     1084    3                     ELSE ;
      761     1085
      762     1086        /*D* If the PRC option is used with PPCHK = ANY, the privileges from
      763     1087             JIT.PRIV.PRC will be used if any bits specifiec via the PPRIV
      764     1088             option are contained in JIT.PPRIV.
      765     1089        */
      766     1090    3                ELSE IF (G$JIT.PPRIV & PPRIV$->G$PRIVS) ~= '0'B
      767     1091    3                     THEN AUTH_PRIVS = G$JIT.PRIV.PRC;
      768     1092    3                     ELSE ;
      769     1093    3                END;
      770     1094    2           END/* do if PRC specified */;
      771     1095
      772     1096        /*D* If the AUTH option is specified, the privileges from
      773     1097             JIT.PRIV.AUTH will also be used to verify the operation.
      774     1098        */
      775     1099    1      IF V$->FPT$SPRIV.AUTH = '1'B
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:122  
      776     1100    1      THEN AUTH_PRIVS = (AUTH_PRIVS | G$JIT.PRIV.AUTH);
      777     1101
      778     1102        /*D* Those privileges verified as authorized are set in
      779     1103             JIT.PRIV.ACTIVE.  All privileges not requested via the
      780     1104             PRIV option are reset.
      781     1105        */
      782     1106    1      G$JIT.PRIV.ACTIVE = AUTH_PRIVS & PRIV$->G$PRIVS;
      783     1107
      784     1108        /*D* If not all requested privileges could be granted, the alternate
      785     1109             return will be taken with the severity of the error set to zero.
      786     1110        */
      787     1111    1      IF G$JIT.PRIV.ACTIVE ~= GUD_PARAMS.PTRS.PAR2$->G$PRIVS
      788     1112    1      THEN GUD_PARAMS.ERR = ENOPRIV;
      789     1113
      790     1114        /*E* ERROR: GUM-E$NOPRIV-C
      791     1115             MESSAGE: Cannot effect the entire privilege change request.
      792     1116        */
      793     1117
      794     1118    1   END GUM$SPRIV;
      795     1119        %EOD;

PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:123  
--  Include file information  --

   UD_ERRORS_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GUM$SPRIV.

   Procedure GUM$SPRIV requires 133 words for executable code.
   Procedure GUM$SPRIV requires 10 words of local(AUTO) storage.

PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:124  

 Object Unit name= GUM$SPRIV                                  File name= GUM$MCL.:E05TOU
 UTS= JUL 29 '97 22:20:33.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      2      2  GUM$SPRIV
    1   Proc  even  none   133     85  GUM$SPRIV
    2  RoData even  none     1      1  GUM$SPRIV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GUM$SPRIV

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$JIT$                           r    G$ROS$
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:125  


      695        1        /*T***********************************************************/
      696        2        /*T*                                                         */
      697        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      698        4        /*T*                                                         */
      699        5        /*T***********************************************************/
      700        6        /*F* NAME: GUM$SPRIV
      701        7
      702        8             PURPOSE: This routine handler the M$SPRIV monitor service.
      703        9
      704       10        */
      705       11        GUM$SPRIV: PROC(GUD_PARAMS);

     11   1 000000  D380 0000 0000  xent GUM$SPRIV       LNJ,B5   X6A_AUTO_1
          1 000003       000A 0001                       DC       10,1

      706       12
      707       13        %INCLUDE G_JIT_M;
      708      278        %INCLUDE GU_MACROS_M;
      709      437 S      %INCLUDE GU_LCP6_M;
      710      438
      711      439                                                /* Input parameters         */
      712      440        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
      713      516
      714      517                                                /* AUTO Storage             */
      715      518    1   DCL AUTH_PRIVS BIT(32);
      716      519
      717      520                                                /*  Based Structures        */
      718      521    1   DCL G$PRIVS BIT(32) BASED WALIGNED;
      719      522
      720      523        %G$JIT (FPTN=G$JIT,STCLASS="BASED(G$JIT$)");
      721      937
      722      938        %FPT_SPRIV (FPTN=FPT$SPRIV,STCLASS=BASED,VECTORS=NO);
      723      961
      724      962                                                /* EQUS                     */
      725      963        %INCLUDE UD_ERRORS_C;
      726     1005
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:126  
      727     1006                                                /* Internal Data            */
      728     1007        %VLP_ERRCODE (FPTN=ENOPRIV,ERR#=%E$NOPRIV,SEV=G_SEV_CONT#,
      729     1008                         STCLASS=CONSTANT,FCG=GU,MID=M,MON='1'B);
      730     1054
      731     1055                                                /*  External data           */
      732     1056    1   DCL G$JIT$ PTR SYMREF;
      733     1057
      734     1058                                                /* String Substitutions     */
      735     1059        %SUB V$=GUD_PARAMS.PTRS.PAR1$;
      736     1060        %SUB PRIV$=GUD_PARAMS.PTRS.PAR2$;
      737     1061        %SUB PPRIV$=GUD_PARAMS.PTRS.PAR3$;
      738     1062        %EJECT;
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:127  
      739     1063        /*D* NAME: GUM$SPRIV
      740     1064        */
      741     1065
      742     1066    1      AUTH_PRIVS = '0'B;

   1066   1 000005  8747 0006                            CL       AUTH_PRIVS,AUTO
          1 000007  8747 0007                            CL       AUTH_PRIVS+1,AUTO

      743     1067
      744     1068        /*D* If the PRC option is specified, but PPRIV is not, the privileges
      745     1069             from JIT.PRIV.PRC will be used to verify the operation.
      746     1070        */
      747     1071    1      IF V$->FPT$SPRIV.PRC = '1'B

   1071   1 000009  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 00000B  DCC6 0006                            LDB,B5   6,B6
          1 00000D  8285                                 LB,'4000'X        ,B5
          1 00000E       4000
          1 00000F  0581 0047                            BBF      s:1099,PREL

      748     1072    2      THEN DO;

      749     1073    2           IF PPRIV$ = ADDR(NIL)

   1073   1 000011  8DC6 000A                            CMN      10,B6
          1 000013  0981 000A                            BNE      s:1081,PREL

      750     1074    2           THEN AUTH_PRIVS = G$JIT.PRIV.PRC;

   1074   1 000015  CC80 0000 0000  xsym                 LDB,B4   G$JIT$
          1 000018  8CC4 0092                            LDI      146,B4
          1 00001A  8D47 0006                            SDI      AUTH_PRIVS,AUTO
          1 00001C  0F81 003A                            B        s:1099,PREL

      751     1075
      752     1076        /*D* If the PRC option is used with PPCHK = ALL, the privileges from
      753     1077             JIT.PRIV.PRC will be used only if all bits specified via the
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:128  
      754     1078             PPRIV option are contained in JIT.PPRIV.
      755     1079        */
      756     1080    3           ELSE DO;

      757     1081    3                IF V$->FPT$SPRIV.PPCHK = '1'B/*ALL*/

   1081   1 00001E  8285                                 LB,'2000'X        ,B5
   1081   1 00001F       2000
          1 000020  0581 001B                            BBF      s:1090,PREL

      758     1082    3                THEN IF (G$JIT.PPRIV & PPRIV$->G$PRIVS) = PPRIV$->G$PRIVS

   1082   1 000022  CCC6 000A                            LDB,B4   10,B6
          1 000024  BC80 0000 0000  xsym                 LDB,B3   G$JIT$
          1 000027  8CC3 0094                            LDI      148,B3
          1 000029  E504                                 AND,R6   ,B4
          1 00002A  F544 0001                            AND,R7   1,B4
          1 00002C  8D47 0008                            SDI      AUTH_PRIVS+2,AUTO
          1 00002E  5C04                                 LDV,R5   4
          1 00002F  0022                                 ACM      ;
          1 000030       4407 0008                                ALPHANUM(AUTH_PRIVS+2,AUTO,,4,FILL),;
          1 000032       4004 0000                                ALPHANUM(0,B4,,R5,FILL)
          1 000034  5301 0022                            CBNE     s:1099,PREL

      759     1083    3                     THEN AUTH_PRIVS = G$JIT.PRIV.PRC;

   1083   1 000036  8CC3 0092                            LDI      146,B3
          1 000038  8D47 0006                            SDI      AUTH_PRIVS,AUTO
          1 00003A  0F81 001C                            B        s:1099,PREL

      760     1084    3                     ELSE ;
      761     1085
      762     1086        /*D* If the PRC option is used with PPCHK = ANY, the privileges from
      763     1087             JIT.PRIV.PRC will be used if any bits specifiec via the PPRIV
      764     1088             option are contained in JIT.PPRIV.
      765     1089        */
      766     1090    3                ELSE IF (G$JIT.PPRIV & PPRIV$->G$PRIVS) ~= '0'B
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:129  

   1090   1 00003C  CCC6 000A                            LDB,B4   10,B6
          1 00003E  BC80 0000 0000  xsym                 LDB,B3   G$JIT$
          1 000041  8CC3 0094                            LDI      148,B3
          1 000043  E504                                 AND,R6   ,B4
          1 000044  F544 0001                            AND,R7   1,B4
          1 000046  8D47 0008                            SDI      AUTH_PRIVS+2,AUTO
          1 000048  DB80 0000 0000  02                   LAB,B5   0
          1 00004B  5C01                                 LDV,R5   1
          1 00004C  0022                                 ACM      ;
          1 00004D       4407 0008                                ALPHANUM(AUTH_PRIVS+2,AUTO,,4,FILL),;
          1 00004F       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          1 000051  5381 0005                            CBE      s:1099,PREL

      767     1091    3                     THEN AUTH_PRIVS = G$JIT.PRIV.PRC;

   1091   1 000053  8CC3 0092                            LDI      146,B3
          1 000055  8D47 0006                            SDI      AUTH_PRIVS,AUTO

      768     1092    3                     ELSE ;
      769     1093    3                END;

      770     1094    2           END/* do if PRC specified */;

      771     1095
      772     1096        /*D* If the AUTH option is specified, the privileges from
      773     1097             JIT.PRIV.AUTH will also be used to verify the operation.
      774     1098        */
      775     1099    1      IF V$->FPT$SPRIV.AUTH = '1'B

   1099   1 000057  DCC6 0006                            LDB,B5   6,B6
          1 000059  8985                                 CMZ      ,B5
          1 00005A  0881 000C                            BAGE     s:1106,PREL

      776     1100    1      THEN AUTH_PRIVS = (AUTH_PRIVS | G$JIT.PRIV.AUTH);

   1100   1 00005C  CC80 0000 0000  xsym                 LDB,B4   G$JIT$
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:130  
          1 00005F  8CC7 0006                            LDI      AUTH_PRIVS,AUTO
          1 000061  E444 0090                            OR,R6    144,B4
          1 000063  F444 0091                            OR,R7    145,B4
          1 000065  8D47 0006                            SDI      AUTH_PRIVS,AUTO

      777     1101
      778     1102        /*D* Those privileges verified as authorized are set in
      779     1103             JIT.PRIV.ACTIVE.  All privileges not requested via the
      780     1104             PRIV option are reset.
      781     1105        */
      782     1106    1      G$JIT.PRIV.ACTIVE = AUTH_PRIVS & PRIV$->G$PRIVS;

   1106   1 000067  CCC6 0008                            LDB,B4   8,B6
          1 000069  8CC7 0006                            LDI      AUTH_PRIVS,AUTO
          1 00006B  E504                                 AND,R6   ,B4
          1 00006C  F544 0001                            AND,R7   1,B4
          1 00006E  BC80 0000 0000  xsym                 LDB,B3   G$JIT$
          1 000071  8D43 008E                            SDI      142,B3

      783     1107
      784     1108        /*D* If not all requested privileges could be granted, the alternate
      785     1109             return will be taken with the severity of the error set to zero.
      786     1110        */
      787     1111    1      IF G$JIT.PRIV.ACTIVE ~= GUD_PARAMS.PTRS.PAR2$->G$PRIVS

   1111   1 000073  DCC6 0008                            LDB,B5   8,B6
          1 000075  5C04                                 LDV,R5   4
          1 000076  0022                                 ACM      ;
          1 000077       4403 008E                                ALPHANUM(142,B3,,4,FILL),;
          1 000079       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          1 00007B  5381 0006                            CBE      s:1118,PREL

      788     1112    1      THEN GUD_PARAMS.ERR = ENOPRIV;

   1112   1 00007D  8C80 0000 0000  00                   LDI      ENOPRIV
          1 000080  8D46 0003                            SDI      3,B6

PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:131  
      789     1113
      790     1114        /*E* ERROR: GUM-E$NOPRIV-C
      791     1115             MESSAGE: Cannot effect the entire privilege change request.
      792     1116        */
      793     1117
      794     1118    1   END GUM$SPRIV;

   1118   1 000082  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      795     1119        %EOD;

PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:132  
--  Include file information  --

   UD_ERRORS_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GUM$SPRIV.
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:133  

 **** Variables and constants ****

  ****  Section 000 RoData GUM$SPRIV

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 ENOPRIV

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @GUD_PARAMS                6-0-0/b BIT (32)    r     1 AUTH_PRIVS
    *0-0-0/w STRC(1280)  r     1 GUD_PARAMS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(16)    r     1 FPT$SPRIV                  0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w BIT (32)    r     1 G$PRIVS


   Procedure GUM$SPRIV requires 133 words for executable code.
   Procedure GUM$SPRIV requires 10 words of local(AUTO) storage.
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:134  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:135  
          MINI XREF LISTING

AUTH_PRIVS
       518**DCL      1066<<ASSIGN   1074<<ASSIGN   1083<<ASSIGN   1091<<ASSIGN   1100<<ASSIGN   1100>>ASSIGN
      1106>>ASSIGN
ENOPRIV
      1022**DCL      1112>>ASSIGN
FPT$SPRIV.AUTH
       958**DCL      1099>>IF
FPT$SPRIV.PPCHK
       958**DCL      1081>>IF
FPT$SPRIV.PRC
       958**DCL      1071>>IF
G$JIT.ERRLOG
       867**DCL       870--REDEF
G$JIT.JSUNIT
       606**DCL       607--REDEF
G$JIT.MCLS
       605**DCL       605--REDEF
G$JIT.PPRIV
       819**DCL      1082>>IF       1090>>IF
G$JIT.PRIV.ACTIVE
       737**DCL      1106<<ASSIGN   1111>>IF
G$JIT.PRIV.AUTH
       770**DCL      1100>>ASSIGN
G$JIT.PRIV.PRC
       803**DCL      1074>>ASSIGN   1083>>ASSIGN   1091>>ASSIGN
G$JIT.TMRZ
       874**DCL       875--REDEF
G$JIT.USER_EXTIME
       598**DCL       599--REDEF
G$JIT.USER_MEMTIME
       601**DCL       601--REDEF
G$JIT.USER_SVTIME
PL6.E3A0      #005=GUM$SPRIV File=GUM$MCL.:E05TSI                                TUE 07/29/97 22:20 Page:136  
       600**DCL       600--REDEF
G$JIT$
      1056**DCL       537--IMP-PTR  1074>>ASSIGN   1082>>IF       1083>>ASSIGN   1090>>IF       1091>>ASSIGN
      1100>>ASSIGN   1106>>ASSIGN   1111>>IF
G$PRIVS
       521**DCL      1082>>IF       1082>>IF       1090>>IF       1106>>ASSIGN   1111>>IF
GUD_PARAMS
       441**DCL        11--PROC
GUD_PARAMS.BND
       501**DCL       502--REDEF
GUD_PARAMS.DESC
       503**DCL       504--REDEF
GUD_PARAMS.ERR
       467**DCL      1112<<ASSIGN
GUD_PARAMS.MCL.CODE
       448**DCL       448--REDEF
GUD_PARAMS.PTRS
       497**DCL       498--REDEF     500--REDEF     500--REDEF     500--REDEF
GUD_PARAMS.PTRS.PAR1$
       497**DCL      1071>>IF       1081>>IF       1099>>IF
GUD_PARAMS.PTRS.PAR2$
       497**DCL      1106>>ASSIGN   1111>>IF
GUD_PARAMS.PTRS.PAR3$
       497**DCL      1073>>IF       1082>>IF       1082>>IF       1090>>IF

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:137  
      796        1        /*T***********************************************************/
      797        2        /*T*                                                         */
      798        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      799        4        /*T*                                                         */
      800        5        /*T***********************************************************/
      801        6        /*F* NAME: GUM$UNSHARE
      802        7
      803        8             PURPOSE: This routine handler the M$UNSHARE monitor service.
      804        9
      805       10        */
      806       11        GUM$UNSHARE: PROC(GUD_PARAMS);
      807       12
      808       13        %INCLUDE G$BOBCAT_M;
      809       33        %INCLUDE G_JIT_M;
      810      298        %INCLUDE G_SFILE_M;
      811      358        %INCLUDE GH_GATE_M;
      812      399        %INCLUDE GH_SCHD_E;
      813      495        %INCLUDE GM_MACRO_M;
      814      977        %INCLUDE GJ_MACROS_M;
      815     1450        %INCLUDE GU_MACROS_M;
      816     1609 S      %INCLUDE GH_LCP6_M;
      817     1610 S      %INCLUDE GU_LCP6_M;
      818     1611 S      %INCLUDE G_LCP6_E;
      819     1612        %INCLUDE M_ERRORS_C;
      820     1676
      821     1677                                                /* Input parameters         */
      822     1678        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
      823     1754
      824     1755                                                /* AUTO Storage             */
      825     1756    1   DCL USIZE UBIN;
      826     1757    1   DCL ASDT_INDX UBIN;
      827     1758    1   DCL I UBIN;
      828     1759    1   DCL GM@SHUF UBIN;
      829     1760    1   DCL G$SFILE$ PTR;
      830     1761        %GJ_GETPROC_PARAMS (FPTN=GP_PARAMS,STCLASS=AUTO);
      831     1806        %GM_CHKSZ_PARAMS (FPTN=CHKSZ, STCLASS=AUTO);
      832     1900
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:138  
      833     1901                                                /*  External data           */
      834     1902    1   DCL GM_REG_4_MEM UBIN SYMREF;
      835     1903    1   DCL GM_SHUF UBIN SYMREF;
      836     1904    1   DCL GM_STEP UBIN SYMREF;
      837     1905    1   DCL G$JIT$ PTR SYMREF READONLY;
      838     1906    1   DCL G$BOBCAT$ PTR SYMREF READONLY;
      839     1907    1   DCL G$ASDT_USR$ PTR SYMREF READONLY;
      840     1908
      841     1909        %GATE (FPTN=GM_MEATLOCK,STCLASS=SYMREF);
      842     1928
      843     1929                                                /*  Internal Data           */
      844     1930        %VLP_ERRCODE (FPTN=E$PHYSMEM, FCG='GU', MID='M', MON='1'B, SEV=G_SEV_ERROR#,
      845     1931              STCLASS=CONSTANT, ERR#=%E$PHYS_MEMLIMIT);
      846     1977
      847     1978
      848     1979                                                /*  Based Structures        */
      849     1980
      850     1981        %G$ASDT (FPTN=G$ASDT_USR,STCLASS="BASED(G$ASDT_USR$)");
      851     2010        %G$JIT (FPTN=G$JIT,STCLASS="BASED(G$JIT$)");
      852     2424        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(G$SFILE$)");
      853     2461        %G$BOBCAT (STCLASS="BASED(G$BOBCAT$)");
      854     2474
      855     2475        %FPT_UNSHARE (FPTN=FPT$UNSHARE,STCLASS=BASED,VECTORS=NO);
      856     2498
      857     2499                                                /* External Routines        */
      858     2500    1   DCL GHS$REG ENTRY(2) ALTRET;
      859     2501    1   DCL GJS$CLOSE_SHARED ENTRY(1) ALTRET;
      860     2502    1   DCL GJS$REL_ALL ENTRY(1) ALTRET;
      861     2503    1   DCL GJU$GET_PROC ENTRY(1) ALTRET;
      862     2504    1   DCL GMA$CHKSIZE ENTRY(1) ALTRET;
      863     2505    1   DCL GMA$REL_ACCTMEM ENTRY(1) ALTRET;
      864     2506
      865     2507                                                /* String Substitutions     */
      866     2508        %GJ_SHARE#;
      867     2514        %SUB V$=GUD_PARAMS.PTRS.PAR1$;
      868     2515
      869     2516        %EJECT;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:139  
      870     2517
      871     2518    1      G$SFILE$ = G$BOBCAT.SFILE$;
      872     2519
      873     2520    1      GP_PARAMS = '0'B;
      874     2521    1      GP_PARAMS.SHARE.SHARE_PROC = %GJ_UNSHARE#;
      875     2522
      876     2523    1      IF (V$->FPT$UNSHARE.PROG) AND (G$JIT.SPROC# ~= 0)
      877     2524    2      THEN DO;
      878     2525    2           GP_PARAMS.PGSZ = G_SFILE.PGSZ_PROC(G$JIT.SPROC#);
      879     2526    2           GP_PARAMS.SHARE.SFILE$ = ADDR(G_SFILE(G$JIT.SPROC#));
      880     2527    2           GP_PARAMS.VP# = G$JIT.PLL;
      881     2528
      882     2529    2           CALL CHECK_PMEM
      883     2530    3           WHENALTRETURN DO; RETURN; END;
      884     2531
      885     2532    2           I = G$JIT.SPROC#;
      886     2533    2           CALL GJS$CLOSE_SHARED(I);
      887     2534    2           G$JIT.SPROC# = 0;
      888     2535
      889     2536    2           CALL SET_ACCESS;
      890     2537    2           END;
      891     2538
      892     2539    1      IF (V$->FPT$UNSHARE.SLIB) AND (G$JIT.SLIB# ~= 0)
      893     2540    2      THEN DO;
      894     2541    2           GP_PARAMS.PGSZ = G_SFILE.PGSZ_PROC(G$JIT.SLIB#);
      895     2542    2           GP_PARAMS.SHARE.SFILE$ = ADDR(G_SFILE(G$JIT.SLIB#));
      896     2543    2           GP_PARAMS.VP# = G$JIT.LLL;
      897     2544
      898     2545    2           CHKSZ.FLGS.CHK_ONLY='0'B;
      899     2546    2           CHKSZ.FLGS.REQ_ALL='1'B;
      900     2547    2           CHKSZ.FLGS.PARK='1'B;
      901     2548    2           CHKSZ.FLGS.NSHUF='0'B;
      902     2549    2           CHKSZ.FLGS.STEP='1'B;
      903     2550    2           CHKSZ.SIZE = GP_PARAMS.PGSZ;
      904     2551    2           CALL GMA$CHKSIZE(CHKSZ)
      905     2552    3           WHENALTRETURN DO;
      906     2553    3                GUD_PARAMS.ERR = CHKSZ.ERR;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:140  
      907     2554    3                RETURN;
      908     2555    3                END;
      909     2556
      910     2557    2           CALL CHECK_PMEM
      911     2558    3           WHENALTRETURN DO;
      912     2559    3                CALL GMA$REL_ACCTMEM(GP_PARAMS.PGSZ);
      913     2560    3                RETURN;
      914     2561    3                END;
      915     2562
      916     2563
      917     2564    2           I = G$JIT.SLIB#;
      918     2565    2           CALL GJS$CLOSE_SHARED(I);
      919     2566    2           G$JIT.SLIB# = 0;
      920     2567
      921     2568    2           G$JIT.PCL = GP_PARAMS.PGSZ;
      922     2569    2           CALL SET_ACCESS;
      923     2570    2           END;
      924     2571
      925     2572    1      RETURN;
      926     2573        %EJECT;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:141  
      927     2574
      928     2575        /*   Get these pages as if we were step because we dont want to compete
      929     2576             with someone in job step when getting more than one segment worth.
      930     2577        */
      931     2578
      932     2579    1   CHECK_PMEM: PROC ALTRET;
      933     2580
      934     2581    2      IF GM_SHUF > GM_STEP
      935     2582    2      THEN GM@SHUF = GM_SHUF - GM_STEP;
      936     2583    2      ELSE GM@SHUF = 0;
      937     2584
      938     2585    2      IF GP_PARAMS.PGSZ > GM@SHUF
      939     2586    3      THEN DO;
      940     2587    3           I = GP_PARAMS.PGSZ - GM@SHUF;
      941     2588    3           CALL GJS$REL_ALL(I)
      942     2589    4           WHENALTRETURN DO;
      943     2590    4                IF GM_REG_4_MEM = 0
      944     2591    5                THEN DO;
      945     2592    5   NO_PHYS_MEM:      ;
      946     2593    5                     GUD_PARAMS.ERR = E$PHYSMEM;
      947     2594    5                     ALTRETURN;
      948     2595    5                     END;
      949     2596
      950     2597    5                DO WHILE(GP_PARAMS.PGSZ > (GM_SHUF-GM_STEP));
      951     2598    5                     CALL GHS$REG(%GH_EVMEM) ALTRET(NO_PHYS_MEM);
      952     2599    5                     END;
      953     2600    4                END/*altret from rel_all*/;
      954     2601    3           END/*do if > gm@shuf*/;
      955     2602
      956     2603        /*E* ERROR: GUM-E$PHYS_MEMLIMIT-E
      957     2604             MESSAGE: Can't unshare - physical memory exceeded.
      958     2605        */
      959     2606
      960     2607    2      GM_STEP = GM_STEP + GP_PARAMS.PGSZ;
      961     2608
      962     2609    2      CALL GJU$GET_PROC(GP_PARAMS);
      963     2610    2      GM_STEP = GM_STEP - GP_PARAMS.PGSZ;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:142  
      964     2611
      965     2612    2      RETURN;
      966     2613    2   END CHECK_PMEM;
      967     2614
      968     2615        %EJECT;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:143  
      969     2616
      970     2617        /*   If unsharing for a user running under control of a
      971     2618             debugger, give the debugger write access to the newly
      972     2619             unshared procedure.
      973     2620        */
      974     2621
      975     2622    1   SET_ACCESS: PROC;
      976     2623
      977     2624    2      IF G$JIT.DB# ~= 0
      978     2625    3      THEN DO;
      979     2626    3           USIZE = (GP_PARAMS.PGSZ + 255) / 256; /* # of 64k segments*/
      980     2627    3           ASDT_INDX = (GP_PARAMS.VP#  /256) +15;
      981     2628                %LOCK(G=GM_MEATLOCK);
      982     2635
      983     2636    4           DO I=0 TO USIZE-1;
      984     2637    4                G$ASDT_USR.DESC.WP(ASDT_INDX +I) = %G_R_DB#;
      985     2638    4                G$JIT.DB_WRTSEGS(ASDT_INDX+I -16) = '1'B;
      986     2639    4                END;
      987     2640
      988     2641                %UNLOCK(G=GM_MEATLOCK);
      989     2648    3           END;
      990     2649
      991     2650    2      RETURN;
      992     2651
      993     2652    2   END SET_ACCESS;
      994     2653
      995     2654    1   END GUM$UNSHARE;

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:144  
--  Include file information  --

   M_ERRORS_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   GJ_MACROS_M.:E05TOU  is referenced.
   GM_MACRO_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GUM$UNSHARE.

   Procedure GUM$UNSHARE requires 414 words for executable code.
   Procedure GUM$UNSHARE requires 28 words of local(AUTO) storage.

    No errors detected in file GUM$MCL.:E05TSI    .

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:145  

 Object Unit name= GUM$UNSHARE                                File name= GUM$MCL.:E05TOU
 UTS= JUL 29 '97 22:20:52.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      2      2  GUM$UNSHARE
    1   Proc  even  none   414    19E  GUM$UNSHARE
    2  RoData even  none     5      5  GUM$UNSHARE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GUM$UNSHARE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GJS$CLOSE_SHARED
 yes     yes           Std       1 GMA$CHKSIZE
 yes     yes           Std       1 GMA$REL_ACCTMEM
 yes     yes           Std       1 GJS$REL_ALL
 yes     yes           Std       2 GHS$REG
 yes     yes           Std       1 GJU$GET_PROC
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHH$UNLOCK
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:146  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GM_REG_4_MEM                          GM_SHUF                               GM_STEP
r    G$JIT$                           r    G$BOBCAT$                        r    G$ASDT_USR$
     GM_MEATLOCK                      r    G$ROS$
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:147  


      796        1        /*T***********************************************************/
      797        2        /*T*                                                         */
      798        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      799        4        /*T*                                                         */
      800        5        /*T***********************************************************/
      801        6        /*F* NAME: GUM$UNSHARE
      802        7
      803        8             PURPOSE: This routine handler the M$UNSHARE monitor service.
      804        9
      805       10        */
      806       11        GUM$UNSHARE: PROC(GUD_PARAMS);

     11   1 000000  D380 0000 0000  xent GUM$UNSHARE     LNJ,B5   X6A_AUTO_1
          1 000003       001C 0001                       DC       28,1

      807       12
      808       13        %INCLUDE G$BOBCAT_M;
      809       33        %INCLUDE G_JIT_M;
      810      298        %INCLUDE G_SFILE_M;
      811      358        %INCLUDE GH_GATE_M;
      812      399        %INCLUDE GH_SCHD_E;
      813      495        %INCLUDE GM_MACRO_M;
      814      977        %INCLUDE GJ_MACROS_M;
      815     1450        %INCLUDE GU_MACROS_M;
      816     1609 S      %INCLUDE GH_LCP6_M;
      817     1610 S      %INCLUDE GU_LCP6_M;
      818     1611 S      %INCLUDE G_LCP6_E;
      819     1612        %INCLUDE M_ERRORS_C;
      820     1676
      821     1677                                                /* Input parameters         */
      822     1678        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
      823     1754
      824     1755                                                /* AUTO Storage             */
      825     1756    1   DCL USIZE UBIN;
      826     1757    1   DCL ASDT_INDX UBIN;
      827     1758    1   DCL I UBIN;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:148  
      828     1759    1   DCL GM@SHUF UBIN;
      829     1760    1   DCL G$SFILE$ PTR;
      830     1761        %GJ_GETPROC_PARAMS (FPTN=GP_PARAMS,STCLASS=AUTO);
      831     1806        %GM_CHKSZ_PARAMS (FPTN=CHKSZ, STCLASS=AUTO);
      832     1900
      833     1901                                                /*  External data           */
      834     1902    1   DCL GM_REG_4_MEM UBIN SYMREF;
      835     1903    1   DCL GM_SHUF UBIN SYMREF;
      836     1904    1   DCL GM_STEP UBIN SYMREF;
      837     1905    1   DCL G$JIT$ PTR SYMREF READONLY;
      838     1906    1   DCL G$BOBCAT$ PTR SYMREF READONLY;
      839     1907    1   DCL G$ASDT_USR$ PTR SYMREF READONLY;
      840     1908
      841     1909        %GATE (FPTN=GM_MEATLOCK,STCLASS=SYMREF);
      842     1928
      843     1929                                                /*  Internal Data           */
      844     1930        %VLP_ERRCODE (FPTN=E$PHYSMEM, FCG='GU', MID='M', MON='1'B, SEV=G_SEV_ERROR#,
      845     1931              STCLASS=CONSTANT, ERR#=%E$PHYS_MEMLIMIT);
      846     1977
      847     1978
      848     1979                                                /*  Based Structures        */
      849     1980
      850     1981        %G$ASDT (FPTN=G$ASDT_USR,STCLASS="BASED(G$ASDT_USR$)");
      851     2010        %G$JIT (FPTN=G$JIT,STCLASS="BASED(G$JIT$)");
      852     2424        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(G$SFILE$)");
      853     2461        %G$BOBCAT (STCLASS="BASED(G$BOBCAT$)");
      854     2474
      855     2475        %FPT_UNSHARE (FPTN=FPT$UNSHARE,STCLASS=BASED,VECTORS=NO);
      856     2498
      857     2499                                                /* External Routines        */
      858     2500    1   DCL GHS$REG ENTRY(2) ALTRET;
      859     2501    1   DCL GJS$CLOSE_SHARED ENTRY(1) ALTRET;
      860     2502    1   DCL GJS$REL_ALL ENTRY(1) ALTRET;
      861     2503    1   DCL GJU$GET_PROC ENTRY(1) ALTRET;
      862     2504    1   DCL GMA$CHKSIZE ENTRY(1) ALTRET;
      863     2505    1   DCL GMA$REL_ACCTMEM ENTRY(1) ALTRET;
      864     2506
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:149  
      865     2507                                                /* String Substitutions     */
      866     2508        %GJ_SHARE#;
      867     2514        %SUB V$=GUD_PARAMS.PTRS.PAR1$;
      868     2515
      869     2516        %EJECT;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:150  
      870     2517
      871     2518    1      G$SFILE$ = G$BOBCAT.SFILE$;

   2518   1 000005  EC80 0000 0000  xsym                 LDB,B6   G$BOBCAT$
          1 000008  DCC6 001E                            LDB,B5   30,B6
          1 00000A  DFC7 000A                            STB,B5   G$SFILE$,AUTO

      872     2519
      873     2520    1      GP_PARAMS = '0'B;

   2520   1 00000C  5C10                                 LDV,R5   16
          1 00000D  0021                                 ALR      ;
          1 00000E       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000010       4007 000C                                ALPHANUM(GP_PARAMS,AUTO,,R5,FILL)

      874     2521    1      GP_PARAMS.SHARE.SHARE_PROC = %GJ_UNSHARE#;

   2521   1 000012  437F                                 CSYNC    s:2520+5,SPREL
          1 000013  8947 0011                            LBT,'FFFF'X       GP_PARAMS+5,AUTO
          1 000015       FFFF

      875     2522
      876     2523    1      IF (V$->FPT$UNSHARE.PROG) AND (G$JIT.SPROC# ~= 0)

   2523   1 000016  CCC7 0004                            LDB,B4   @GUD_PARAMS,AUTO
          1 000018  BCC4 0006                            LDB,B3   6,B4
          1 00001A  8983                                 CMZ      ,B3
          1 00001B  0881 003A                            BAGE     s:2539,PREL
          1 00001D  AC80 0000 0000  xsym                 LDB,B2   G$JIT$
          1 000020  E2C2 008C                            LLH,R6   140,B2
          1 000022  6901 0033                            BEZ,R6   s:2539,PREL

      877     2524    2      THEN DO;

      878     2525    2           GP_PARAMS.PGSZ = G_SFILE.PGSZ_PROC(G$JIT.SPROC#);

   2525   1 000024  B856                                 LDR,R3   R6
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:151  
          1 000025  3F30                                 MLV,R3   48
          1 000026  3E27                                 ADV,R3   39
          1 000027  C835                                 LDR,R4   ,B5,R3
          1 000028  CF47 0013                            STR,R4   GP_PARAMS+7,AUTO

      879     2526    2           GP_PARAMS.SHARE.SFILE$ = ADDR(G_SFILE(G$JIT.SPROC#));

   2526   1 00002A  B856                                 LDR,R3   R6
          1 00002B  3F30                                 MLV,R3   48
          1 00002C  BBB5                                 LAB,B3   ,B5,R3
          1 00002D  BFC7 000E                            STB,B3   GP_PARAMS+2,AUTO

      880     2527    2           GP_PARAMS.VP# = G$JIT.PLL;

   2527   1 00002F  B842 007B                            LDR,R3   123,B2
          1 000031  BF47 0012                            STR,R3   GP_PARAMS+6,AUTO

      881     2528
      882     2529    2           CALL CHECK_PMEM

   2529   1 000033  E3C0 00AA                            LNJ,B6   s:0,PREL
          1 000035       0003                            DC       s:2530,PREL
          1 000036  0F81 0004                            B        s:2532,PREL

      883     2530    3           WHENALTRETURN DO; RETURN; END;

   2530   1 000038  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      884     2531
      885     2532    2           I = G$JIT.SPROC#;

   2532   1 00003B  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00003E  E2C6 008C                            LLH,R6   140,B6
          1 000040  EF47 0008                            STR,R6   I,AUTO

      886     2533    2           CALL GJS$CLOSE_SHARED(I);

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:152  
   2533   1 000042  DBC7 0008                            LAB,B5   I,AUTO
          1 000044  DFC7 001A                            STB,B5   CHKSZ+6,AUTO
          1 000046  BBC7 001A                            LAB,B3   CHKSZ+6,AUTO
          1 000048  CBF0 0100                            LAB,B4   256,IMO
          1 00004A  E380 0000 0000  xent                 LNJ,B6   GJS$CLOSE_SHARED
          1 00004D       0001                            DC       s:2534,PREL

      887     2534    2           G$JIT.SPROC# = 0;

   2534   1 00004E  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 000051  87C6 008C                            CLH      140,B6

      888     2535
      889     2536    2           CALL SET_ACCESS;

   2536   1 000053  E3C0 00FA                            LNJ,B6   s:0,PREL
          1 000055       0001                            DC       s:2539,PREL

      890     2537    2           END;

      891     2538
      892     2539    1      IF (V$->FPT$UNSHARE.SLIB) AND (G$JIT.SLIB# ~= 0)

   2539   1 000056  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000058  DCC6 0006                            LDB,B5   6,B6
          1 00005A  8285                                 LB,'4000'X        ,B5
          1 00005B       4000
          1 00005C  0581 007E                            BBF      s:2572,PREL
          1 00005E  CC80 0000 0000  xsym                 LDB,B4   G$JIT$
          1 000061  82C4 008C                            LB,'00FF'X        140,B4
          1 000063       00FF
          1 000064  0581 0076                            BBF      s:2572,PREL

      893     2540    2      THEN DO;

      894     2541    2           GP_PARAMS.PGSZ = G_SFILE.PGSZ_PROC(G$JIT.SLIB#);

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:153  
   2541   1 000066  B844 008C                            LDR,R3   140,B4
          1 000068  B570 00FF                            AND,R3   255,IMO
          1 00006A  BCC7 000A                            LDB,B3   G$SFILE$,AUTO
          1 00006C  3F30                                 MLV,R3   48
          1 00006D  3E27                                 ADV,R3   39
          1 00006E  E833                                 LDR,R6   ,B3,R3
          1 00006F  EF47 0013                            STR,R6   GP_PARAMS+7,AUTO

      895     2542    2           GP_PARAMS.SHARE.SFILE$ = ADDR(G_SFILE(G$JIT.SLIB#));

   2542   1 000071  B844 008C                            LDR,R3   140,B4
          1 000073  B570 00FF                            AND,R3   255,IMO
          1 000075  3F30                                 MLV,R3   48
          1 000076  DBB3                                 LAB,B5   ,B3,R3
          1 000077  DFC7 000E                            STB,B5   GP_PARAMS+2,AUTO

      896     2543    2           GP_PARAMS.VP# = G$JIT.LLL;

   2543   1 000079  D844 007D                            LDR,R5   125,B4
          1 00007B  DF47 0012                            STR,R5   GP_PARAMS+6,AUTO

      897     2544
      898     2545    2           CHKSZ.FLGS.CHK_ONLY='0'B;

   2545   1 00007D  8847 0017                            LBF,'8000'X       CHKSZ+3,AUTO
   2545   1 00007F       8000

      899     2546    2           CHKSZ.FLGS.REQ_ALL='1'B;

   2546   1 000080  8947 0017                            LBT,'4000'X       CHKSZ+3,AUTO
   2546   1 000082       4000

      900     2547    2           CHKSZ.FLGS.PARK='1'B;

   2547   1 000083  8947 0017                            LBT,'2000'X       CHKSZ+3,AUTO
   2547   1 000085       2000

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:154  
      901     2548    2           CHKSZ.FLGS.NSHUF='0'B;

   2548   1 000086  8847 0017                            LBF,'1000'X       CHKSZ+3,AUTO
   2548   1 000088       1000

      902     2549    2           CHKSZ.FLGS.STEP='1'B;

   2549   1 000089  8947 0017                            LBT,'0800'X       CHKSZ+3,AUTO
   2549   1 00008B       0800

      903     2550    2           CHKSZ.SIZE = GP_PARAMS.PGSZ;

   2550   1 00008C  EF47 0014                            STR,R6   CHKSZ,AUTO

      904     2551    2           CALL GMA$CHKSIZE(CHKSZ)

   2551   1 00008E  ABC7 0014                            LAB,B2   CHKSZ,AUTO
          1 000090  AFC7 001A                            STB,B2   CHKSZ+6,AUTO
          1 000092  BBC7 001A                            LAB,B3   CHKSZ+6,AUTO
          1 000094  CBF0 0100                            LAB,B4   256,IMO
          1 000096  E380 0000 0000  xent                 LNJ,B6   GMA$CHKSIZE
          1 000099       0003                            DC       s:2553,PREL
          1 00009A  0F81 000A                            B        s:2557,PREL

      905     2552    3           WHENALTRETURN DO;

      906     2553    3                GUD_PARAMS.ERR = CHKSZ.ERR;

   2553   1 00009C  8CC7 0015                            LDI      CHKSZ+1,AUTO
          1 00009E  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 0000A0  8D46 0003                            SDI      3,B6

      907     2554    3                RETURN;

   2554   1 0000A2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      908     2555    3                END;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:155  
      909     2556
      910     2557    2           CALL CHECK_PMEM

   2557   1 0000A5  E3C0 0038                            LNJ,B6   s:0,PREL
          1 0000A7       0003                            DC       s:2559,PREL
          1 0000A8  0F81 0010                            B        s:2564,PREL

      911     2558    3           WHENALTRETURN DO;

      912     2559    3                CALL GMA$REL_ACCTMEM(GP_PARAMS.PGSZ);

   2559   1 0000AA  EBC7 0013                            LAB,B6   GP_PARAMS+7,AUTO
          1 0000AC  EFC7 001A                            STB,B6   CHKSZ+6,AUTO
          1 0000AE  BBC7 001A                            LAB,B3   CHKSZ+6,AUTO
          1 0000B0  CBF0 0100                            LAB,B4   256,IMO
          1 0000B2  E380 0000 0000  xent                 LNJ,B6   GMA$REL_ACCTMEM
          1 0000B5       0001                            DC       s:2560,PREL

      913     2560    3                RETURN;

   2560   1 0000B6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      914     2561    3                END;
      915     2562
      916     2563
      917     2564    2           I = G$JIT.SLIB#;

   2564   1 0000B9  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 0000BC  E846 008C                            LDR,R6   140,B6
          1 0000BE  E570 00FF                            AND,R6   255,IMO
          1 0000C0  EF47 0008                            STR,R6   I,AUTO

      918     2565    2           CALL GJS$CLOSE_SHARED(I);

   2565   1 0000C2  DBC7 0008                            LAB,B5   I,AUTO
          1 0000C4  DFC7 001A                            STB,B5   CHKSZ+6,AUTO
          1 0000C6  BBC7 001A                            LAB,B3   CHKSZ+6,AUTO
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:156  
          1 0000C8  CBF0 0100                            LAB,B4   256,IMO
          1 0000CA  E380 0000 0000  xent                 LNJ,B6   GJS$CLOSE_SHARED
          1 0000CD       0001                            DC       s:2566,PREL

      919     2566    2           G$JIT.SLIB# = 0;

   2566   1 0000CE  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 0000D1  8846 008C                            LBF,'00FF'X       140,B6
          1 0000D3       00FF

      920     2567
      921     2568    2           G$JIT.PCL = GP_PARAMS.PGSZ;

   2568   1 0000D4  E847 0013                            LDR,R6   GP_PARAMS+7,AUTO
          1 0000D6  EF46 0082                            STR,R6   130,B6

      922     2569    2           CALL SET_ACCESS;

   2569   1 0000D8  E3C0 0075                            LNJ,B6   s:0,PREL
          1 0000DA       0001                            DC       s:2572,PREL

      923     2570    2           END;

      924     2571
      925     2572    1      RETURN;

   2572   1 0000DB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      926     2573        %EJECT;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:157  
      927     2574
      928     2575        /*   Get these pages as if we were step because we dont want to compete
      929     2576             with someone in job step when getting more than one segment worth.
      930     2577        */
      931     2578
      932     2579    1   CHECK_PMEM: PROC ALTRET;

   2579   1 0000DE  EFC7 0018            CHECK_PMEM      STB,B6   CHKSZ+4,AUTO

      933     2580
      934     2581    2      IF GM_SHUF > GM_STEP

   2581   1 0000E0  E800 0000 0000  xsym                 LDR,R6   GM_SHUF
          1 0000E3  E900 0000 0000  xsym                 CMR,R6   GM_STEP
          1 0000E6  0381 0008                            BLE      s:2583,PREL

      935     2582    2      THEN GM@SHUF = GM_SHUF - GM_STEP;

   2582   1 0000E8  E200 0000 0000  xsym                 SUB,R6   GM_STEP
          1 0000EB  EF47 0009                            STR,R6   GM@SHUF,AUTO
          1 0000ED  0F81 0003                            B        s:2585,PREL

      936     2583    2      ELSE GM@SHUF = 0;

   2583   1 0000EF  8747 0009                            CL       GM@SHUF,AUTO

      937     2584
      938     2585    2      IF GP_PARAMS.PGSZ > GM@SHUF

   2585   1 0000F1  E847 0013                            LDR,R6   GP_PARAMS+7,AUTO
          1 0000F3  E947 0009                            CMR,R6   GM@SHUF,AUTO
          1 0000F5  0381 0038                            BLE      s:2607,PREL

      939     2586    3      THEN DO;

      940     2587    3           I = GP_PARAMS.PGSZ - GM@SHUF;

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:158  
   2587   1 0000F7  E247 0009                            SUB,R6   GM@SHUF,AUTO
          1 0000F9  EF47 0008                            STR,R6   I,AUTO

      941     2588    3           CALL GJS$REL_ALL(I)

   2588   1 0000FB  DBC7 0008                            LAB,B5   I,AUTO
          1 0000FD  DFC7 001A                            STB,B5   CHKSZ+6,AUTO
          1 0000FF  BBC7 001A                            LAB,B3   CHKSZ+6,AUTO
          1 000101  CBF0 0100                            LAB,B4   256,IMO
          1 000103  E380 0000 0000  xent                 LNJ,B6   GJS$REL_ALL
          1 000106       0003                            DC       s:2590,PREL
          1 000107  0F81 0026                            B        s:2607,PREL

      942     2589    4           WHENALTRETURN DO;

      943     2590    4                IF GM_REG_4_MEM = 0

   2590   1 000109  E800 0000 0000  xsym                 LDR,R6   GM_REG_4_MEM
          1 00010C  6981 000C                            BNEZ,R6  s:2597,PREL

      944     2591    5                THEN DO;

      945     2592    5   NO_PHYS_MEM:      ;

   2592   1                              NO_PHYS_MEM     null
      946     2593    5                     GUD_PARAMS.ERR = E$PHYSMEM;

   2593   1 00010E  8C80 0000 0000  00   NO_PHYS_MEM     LDI      E$PHYSMEM
          1 000111  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000113  8D46 0003                            SDI      3,B6

      947     2594    5                     ALTRETURN;

   2594   1 000115  ECC7 0018                            LDB,B6   CHKSZ+4,AUTO
          1 000117  B806                                 LDR,R3   ,B6
          1 000118  C3B6                                 LNJ,B4   ,B6,R3

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:159  
      948     2595    5                     END;
      949     2596
      950     2597    5                DO WHILE(GP_PARAMS.PGSZ > (GM_SHUF-GM_STEP));

   2597   1 000119  0F81 000A                            B        s:2599,PREL

      951     2598    5                     CALL GHS$REG(%GH_EVMEM) ALTRET(NO_PHYS_MEM);

   2598   1 00011B  BB80 0000 0001  02                   LAB,B3   +1
          1 00011E  CBF0 0100                            LAB,B4   256,IMO
          1 000120  E380 0000 0000  xent                 LNJ,B6   GHS$REG
          1 000123       FFEB                            DC       s:2591,PREL

      952     2599    5                     END;

   2599   1 000124  E800 0000 0000  xsym                 LDR,R6   GM_SHUF
          1 000127  E200 0000 0000  xsym                 SUB,R6   GM_STEP
          1 00012A  6871                                 BLZ,R6   s:2598,SPREL
          1 00012B  E947 0013                            CMR,R6   GP_PARAMS+7,AUTO
          1 00012D  026E                                 BL       s:2598,SPREL

      953     2600    4                END/*altret from rel_all*/;

      954     2601    3           END/*do if > gm@shuf*/;

      955     2602
      956     2603        /*E* ERROR: GUM-E$PHYS_MEMLIMIT-E
      957     2604             MESSAGE: Can't unshare - physical memory exceeded.
      958     2605        */
      959     2606
      960     2607    2      GM_STEP = GM_STEP + GP_PARAMS.PGSZ;

   2607   1 00012E  E800 0000 0000  xsym                 LDR,R6   GM_STEP
          1 000131  EA47 0013                            ADD,R6   GP_PARAMS+7,AUTO
          1 000133  EF00 0000 0000  xsym                 STR,R6   GM_STEP

      961     2608
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:160  
      962     2609    2      CALL GJU$GET_PROC(GP_PARAMS);

   2609   1 000136  EBC7 000C                            LAB,B6   GP_PARAMS,AUTO
          1 000138  EFC7 001A                            STB,B6   CHKSZ+6,AUTO
          1 00013A  BBC7 001A                            LAB,B3   CHKSZ+6,AUTO
          1 00013C  CBF0 0100                            LAB,B4   256,IMO
          1 00013E  E380 0000 0000  xent                 LNJ,B6   GJU$GET_PROC
          1 000141       0001                            DC       s:2610,PREL

      963     2610    2      GM_STEP = GM_STEP - GP_PARAMS.PGSZ;

   2610   1 000142  E800 0000 0000  xsym                 LDR,R6   GM_STEP
          1 000145  E247 0013                            SUB,R6   GP_PARAMS+7,AUTO
          1 000147  EF00 0000 0000  xsym                 STR,R6   GM_STEP

      964     2611
      965     2612    2      RETURN;

   2612   1 00014A  ECC7 0018                            LDB,B6   CHKSZ+4,AUTO
          1 00014C  C3C6 0001                            LNJ,B4   1,B6

      966     2613    2   END CHECK_PMEM;
      967     2614
      968     2615        %EJECT;
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:161  
      969     2616
      970     2617        /*   If unsharing for a user running under control of a
      971     2618             debugger, give the debugger write access to the newly
      972     2619             unshared procedure.
      973     2620        */
      974     2621
      975     2622    1   SET_ACCESS: PROC;

   2622   1 00014E  EFC7 0018            SET_ACCESS      STB,B6   CHKSZ+4,AUTO

      976     2623
      977     2624    2      IF G$JIT.DB# ~= 0

   2624   1 000150  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 000153  E2C5 008D                            LLH,R6   141,B5
          1 000155  6901 0044                            BEZ,R6   s:2650,PREL

      978     2625    3      THEN DO;

      979     2626    3           USIZE = (GP_PARAMS.PGSZ + 255) / 256; /* # of 64k segments*/

   2626   1 000157  D847 0013                            LDR,R5   GP_PARAMS+7,AUTO
          1 000159  DA70 00FF                            ADD,R5   255,IMO
          1 00015B  5048                                 SOR,R5   8
          1 00015C  DF47 0006                            STR,R5   USIZE,AUTO

      980     2627    3           ASDT_INDX = (GP_PARAMS.VP#  /256) +15;

   2627   1 00015E  C847 0012                            LDR,R4   GP_PARAMS+6,AUTO
          1 000160  4048                                 SOR,R4   8
          1 000161  4E0F                                 ADV,R4   15
          1 000162  CF47 0007                            STR,R4   ASDT_INDX,AUTO

      981     2628                %LOCK(G=GM_MEATLOCK);

   2633   1 000164  BB80 0000 0003  02                   LAB,B3   +3
          1 000167  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:162  
          1 000169  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 00016C       0001                            DC       s:2636,PREL

      982     2635
      983     2636    4           DO I=0 TO USIZE-1;

   2636   1 00016D  8747 0008                            CL       I,AUTO
          1 00016F  0F81 001C                            B        s:2639+2,PREL

      984     2637    4                G$ASDT_USR.DESC.WP(ASDT_INDX +I) = %G_R_DB#;

   2637   1 000171  E847 0007                            LDR,R6   ASDT_INDX,AUTO
          1 000173  EA47 0008                            ADD,R6   I,AUTO
          1 000175  D870 1000                            LDR,R5   4096,IMO
          1 000177  EC80 0000 0000  xsym                 LDB,B6   G$ASDT_USR$
          1 00017A  B856                                 LDR,R3   R6
          1 00017B  3001                                 SOL,R3   1
          1 00017C  3E01                                 ADV,R3   1
          1 00017D  DAB6                                 SRM,R5,'3000'X    ,B6,R3
          1 00017E       3000

      985     2638    4                G$JIT.DB_WRTSEGS(ASDT_INDX+I -16) = '1'B;

   2638   1 00017F  E847 0007                            LDR,R6   ASDT_INDX,AUTO
          1 000181  EA47 0008                            ADD,R6   I,AUTO
          1 000183  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 000186  CBC5 007E                            LAB,B4   126,B5
          1 000188  B856                                 LDR,R3   R6
          1 000189  8934                                 LBT      ,B4,R3

      986     2639    4                END;

   2639   1 00018A  8AC7 0008                            INC      I,AUTO
          1 00018C  E847 0008                            LDR,R6   I,AUTO
          1 00018E  E947 0006                            CMR,R6   USIZE,AUTO
          1 000190  0261                                 BL       s:2637,SPREL

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:163  
      987     2640
      988     2641                %UNLOCK(G=GM_MEATLOCK);

   2646   1 000191  BB80 0000 0003  02                   LAB,B3   +3
          1 000194  CBF0 0100                            LAB,B4   256,IMO
          1 000196  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000199       0001                            DC       s:2650,PREL

      989     2648    3           END;

      990     2649
      991     2650    2      RETURN;

   2650   1 00019A  ECC7 0018                            LDB,B6   CHKSZ+4,AUTO
          1 00019C  C3C6 0001                            LNJ,B4   1,B6
      992     2651
      993     2652    2   END SET_ACCESS;
      994     2653
      995     2654    1   END GUM$UNSHARE;

PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:164  
--  Include file information  --

   M_ERRORS_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   GJ_MACROS_M.:E05TOU  is referenced.
   GM_MACRO_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GUM$UNSHARE.
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:165  

 **** Variables and constants ****

  ****  Section 000 RoData GUM$UNSHARE

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 E$PHYSMEM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @GUD_PARAMS                7-0-0/w UBIN(16)    r     1 ASDT_INDX
    14-0-0/w STRC(64)    r     1 CHKSZ                      A-0-0/w PTR         r     1 G$SFILE$
     9-0-0/w UBIN(16)    r     1 GM@SHUF                    C-0-0/w STRC(128)   r     1 GP_PARAMS
    *0-0-0/w STRC(1280)  r     1 GUD_PARAMS                 8-0-0/w UBIN(16)    r     1 I
     6-0-0/w UBIN(16)    r     1 USIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$ASDT_USR$                0-0-0/w PTR         r     1 G$BOBCAT$
     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w STRC(48)    r     1 GM_MEATLOCK
     0-0-0/w UBIN(16)    r     1 GM_REG_4_MEM               0-0-0/w UBIN(16)    r     1 GM_SHUF
     0-0-0/w UBIN(16)    r     1 GM_STEP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(16)    r     1 FPT$UNSHARE
     0-0-0/w STRC(32)    r     1 G$ASDT_USR(0:30)
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:166  
     0-0-0/w STRC(1696)  r     1 G$BOBCAT                   0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w STRC(768)   r     1 G_SFILE(0:0)


   Procedure GUM$UNSHARE requires 414 words for executable code.
   Procedure GUM$UNSHARE requires 28 words of local(AUTO) storage.

    No errors detected in file GUM$MCL.:E05TSI    .
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:167  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:168  
          MINI XREF LISTING

ASDT_INDX
      1757**DCL      2627<<ASSIGN   2637>>ASSIGN   2638>>ASSIGN
CHECK_PMEM
      2579**PROC     2529--CALL     2557--CALL
CHKSZ
      1812**DCL      2551<>CALL
CHKSZ.ERR
      1833**DCL      2553>>ASSIGN
CHKSZ.FLGS.CHK_ONLY
      1867**DCL      2545<<ASSIGN
CHKSZ.FLGS.NSHUF
      1886**DCL      2548<<ASSIGN
CHKSZ.FLGS.PARK
      1880**DCL      2547<<ASSIGN
CHKSZ.FLGS.REQ_ALL
      1874**DCL      2546<<ASSIGN
CHKSZ.FLGS.STEP
      1892**DCL      2549<<ASSIGN
CHKSZ.SIZE
      1813**DCL      2550<<ASSIGN
E$PHYSMEM
      1945**DCL      2593>>ASSIGN
FPT$UNSHARE.PROG
      2495**DCL      2523>>IF
FPT$UNSHARE.SLIB
      2495**DCL      2539>>IF
G$ASDT_USR.DESC.WP
      2006**DCL      2637<<ASSIGN
G$ASDT_USR$
      1907**DCL      1986--IMP-PTR  2637>>ASSIGN
G$BOBCAT.SFILE$
      2466**DCL      2518>>ASSIGN
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:169  
G$BOBCAT$
      1906**DCL      2462--IMP-PTR  2518>>ASSIGN
G$JIT.DB#
      2205**DCL      2624>>IF
G$JIT.DB_WRTSEGS
      2198**DCL      2638<<ASSIGN
G$JIT.ERRLOG
      2354**DCL      2357--REDEF
G$JIT.JSUNIT
      2093**DCL      2094--REDEF
G$JIT.LLL
      2197**DCL      2543>>ASSIGN
G$JIT.MCLS
      2092**DCL      2092--REDEF
G$JIT.PCL
      2199**DCL      2568<<ASSIGN
G$JIT.PLL
      2196**DCL      2527>>ASSIGN
G$JIT.SLIB#
      2204**DCL      2539>>IF       2541>>ASSIGN   2542>>ASSIGN   2564>>ASSIGN   2566<<ASSIGN
G$JIT.SPROC#
      2204**DCL      2523>>IF       2525>>ASSIGN   2526>>ASSIGN   2532>>ASSIGN   2534<<ASSIGN
G$JIT.TMRZ
      2361**DCL      2362--REDEF
G$JIT.USER_EXTIME
      2085**DCL      2086--REDEF
G$JIT.USER_MEMTIME
      2088**DCL      2088--REDEF
G$JIT.USER_SVTIME
      2087**DCL      2087--REDEF
G$JIT$
      1905**DCL      2024--IMP-PTR  2523>>IF       2525>>ASSIGN   2526>>ASSIGN   2527>>ASSIGN   2532>>ASSIGN
      2534>>ASSIGN   2539>>IF       2541>>ASSIGN   2542>>ASSIGN   2543>>ASSIGN   2564>>ASSIGN   2566>>ASSIGN
      2568>>ASSIGN   2624>>IF       2638>>ASSIGN
G$SFILE$
      1760**DCL      2438--IMP-PTR  2518<<ASSIGN   2525>>ASSIGN   2526>>ASSIGN   2541>>ASSIGN   2542>>ASSIGN
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:170  
GHH$LOCK
       398**DCL-ENT  2633--CALL
GHH$UNLOCK
       398**DCL-ENT  2646--CALL
GHS$REG
      2500**DCL-ENT  2598--CALL
GJS$CLOSE_SHARED
      2501**DCL-ENT  2533--CALL     2565--CALL
GJS$REL_ALL
      2502**DCL-ENT  2588--CALL
GJU$GET_PROC
      2503**DCL-ENT  2609--CALL
GM@SHUF
      1759**DCL      2582<<ASSIGN   2583<<ASSIGN   2585>>IF       2587>>ASSIGN
GMA$CHKSIZE
      2504**DCL-ENT  2551--CALL
GMA$REL_ACCTMEM
      2505**DCL-ENT  2559--CALL
GM_MEATLOCK
      1921**DCL      2633<>CALL     2646<>CALL
GM_REG_4_MEM
      1902**DCL      2590>>IF
GM_SHUF
      1903**DCL      2581>>IF       2582>>ASSIGN   2597>>DOWHILE
GM_STEP
      1904**DCL      2581>>IF       2582>>ASSIGN   2597>>DOWHILE  2607<<ASSIGN   2607>>ASSIGN   2610<<ASSIGN
      2610>>ASSIGN
GP_PARAMS
      1766**DCL      2520<<ASSIGN   2609<>CALL
GP_PARAMS.PGSZ
      1801**DCL      2525<<ASSIGN   2541<<ASSIGN   2550>>ASSIGN   2559<>CALL     2568>>ASSIGN   2585>>IF
      2587>>ASSIGN   2597>>DOWHILE  2607>>ASSIGN   2610>>ASSIGN   2626>>ASSIGN
GP_PARAMS.SHARE.SFILE$
      1779**DCL      2526<<ASSIGN   2542<<ASSIGN
GP_PARAMS.SHARE.SHARE_PROC
      1788**DCL      2521<<ASSIGN
PL6.E3A0      #006=GUM$UNSHARE File=GUM$MCL.:E05TSI                              TUE 07/29/97 22:20 Page:171  
GP_PARAMS.VP#
      1797**DCL      2527<<ASSIGN   2543<<ASSIGN   2627>>ASSIGN
GUD_PARAMS
      1679**DCL        11--PROC
GUD_PARAMS.BND
      1739**DCL      1740--REDEF
GUD_PARAMS.DESC
      1741**DCL      1742--REDEF
GUD_PARAMS.ERR
      1705**DCL      2553<<ASSIGN   2593<<ASSIGN
GUD_PARAMS.MCL.CODE
      1686**DCL      1686--REDEF
GUD_PARAMS.PTRS
      1735**DCL      1736--REDEF    1738--REDEF    1738--REDEF    1738--REDEF
GUD_PARAMS.PTRS.PAR1$
      1735**DCL      2523>>IF       2539>>IF
G_SFILE
      2438**DCL      2526--ASSIGN   2542--ASSIGN
G_SFILE.LIB_WDSZ_DATA
      2456**DCL      2457--REDEF
G_SFILE.PGSZ_PROC
      2457**DCL      2525>>ASSIGN   2541>>ASSIGN
I
      1758**DCL      2532<<ASSIGN   2533<>CALL     2564<<ASSIGN   2565<>CALL     2587<<ASSIGN   2588<>CALL
      2636<<DOINDEX  2637>>ASSIGN   2638>>ASSIGN
NO_PHYS_MEM IN PROCEDURE CHECK_PMEM
      2592**LABEL    2598--CALLALT
SET_ACCESS
      2622**PROC     2536--CALL     2569--CALL
USIZE
      1756**DCL      2626<<ASSIGN   2636>>DOINDEX
