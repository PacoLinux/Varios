VERSION E05

PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:1    
        1        1        /*M* NMO$DCT - Obtain DCT information for Mirrored Disk device     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
        8        8        /*F*
        9        9        NAME:           NMO$DCT
       10       10
       11       11        PURPOSE:        To obtain mirror device information
       12       12
       13       13        DESCRIPTION:
       14       14
       15       15        The NMO$DCT procedure is used to obtain information on the
       16       16        Mirrored Disk device from the specified DCT.
       17       17        */
       18       18        /*D*
       19       19        NAME:           NMO$DCT
       20       20
       21       21        CALL:           CALL NMO$DCT ( i, dctx )  ALTRET ( error ) ;
       22       22
       23       23        PARAMETERS:
       24       24        */
       25       25        /*K*
       26       26        i               is the index into NMD_PIT.DEV.  i must be
       27       27                either 0 or 1.
       28       28        */
       29       29        /*K*
       30       30        dctx            specifies a UBIN(36) variable which specifies
       31       31                the DCTX to be used.
       32       32        */
       33       33        /*D*
       34       34        DESCRIPTION:
       35       35
       36       36        The NMO$DCT procedure is used to obtain Mirrored Disk
       37       37        information from the specified DCT.
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:2    
       38       38
       39       39        If an error is detected, an error message is printed, and an
       40       40        altreturn is made to the calling routine.
       41       41        */
       42       42        %EJECT ;
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:3    
       43       43        NMO$DCT:        PROC ( I, DCTX ) ALTRET ;
       44       44        /*
       45       45                        Includes
       46       46        */
       47       47        %INCLUDE                B_SEGIDS_C ;
       48      586        %INCLUDE                CP_6 ;
       49     6145        %INCLUDE                NI$TABLES ;
       50     6361        %INCLUDE                NI_DATA_C ;
       51     6474        %INCLUDE                NM_MACRO_M ;
       52     7879        %INCLUDE                NM_PERR_C ;
       53     7956        /*
       54     7957                        Parameters
       55     7958        */
       56     7959    1   DCL 1 I                 SBIN WORD ALIGNED PARAM ;
       57     7960    1   DCL 1 DCTX              SBIN WORD ALIGNED PARAM ;
       58     7961        /*
       59     7962                        Entries
       60     7963        */
       61     7964    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
       62     7965    1   DCL 1 NMU$CONVERT$      ENTRY(4) ALTRET ;
       63     7966        /*
       64     7967                        Variables
       65     7968        */
       66     7969                                %B$ALT ( NAME =
       67     7970              B$ALT             , STCLASS = BASED
       68     7971                                                                        ) ;
       69     7979                                %B$TCB ( NAME =
       70     7980              B$TCB             , STCLASS = "BASED(B$TCB$)"
       71     7981                                                                        ) ;
       72     7984    1   DCL 1 B$TCB$            PTR SYMREF ;
       73     7985                                %NI$DCT ( NAME =
       74     7986              DCT               , STCLASS = "BASED(DCT$)"
       75     7987                                                                        ) ;
       76     8035    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
       77     8036                                %NI$DVT ( NAME =
       78     8037              DVT               , STCLASS = "BASED(DVT$)"
       79     8038                                                                        ) ;
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:4    
       80     8045    1   DCL 1 DVT$              PTR ALIGNED AUTO ;
       81     8046    1   DCL 1 N$DCT$(0:0)       PTR ALIGNED BASED(NMD_PIT.N$DCT$$) ;
       82     8047                                %NMD_PIT ( FPTN =
       83     8048              NMD_PIT           , STCLASS = SYMREF
       84     8049                                                                        ) ;
       85     8502                                %VLP_ERRCODE ( FPTN =
       86     8503              NMO#BAD_POINTER   , STCLASS = CONSTANT
       87     8504                                , ERR# = %E$NMD#BAD_POINTER
       88     8505                                , FCG  = %NMD#FCG
       89     8506                                , MID  = 'O'
       90     8507                                , MON  = %NO#
       91     8508                                , SEV  = 5
       92     8509                                                                        ) ;
       93     8554                                %FPT_OPEN ( FPTN =
       94     8555              SETDCB            , STCLASS = STATIC
       95     8556                                , ASN = DEVICE
       96     8557                                , FUN = IN
       97     8558                                , REASSIGN = NO
       98     8559                                , SCRUB = YES
       99     8560                                , SETDCB = YES
      100     8561                                                                        ) ;
      101     8670        %EJECT ;
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:5    
      102     8671        /*
      103     8672        Obtain the mirror device information from the system DCT tables.
      104     8673        */
      105     8674    1           CALL NMU$CONVERT$ ( DCT$,
      106     8675    1                               BITBIN(%SPCL1SID),
      107     8676    1                               N$DCT$(DCTX),
      108     8677    1                               BITBIN(%TIGRSID)                    )
      109     8678    1                                                   ALTRET ( BADPTR ) ;
      110     8679    1           NMD_PIT.DEV.NAME.C(I)     = DCT.DEVNM ;
      111     8680    1           NMD_PIT.DEV.DCT$(I)       = DCT$ ;
      112     8681    1           NMD_PIT.DEV.DCTX(I)       = DCTX ;
      113     8682    1           NMD_PIT.DEV.FLAGS.PRI(I)  = DCT.DP.MIRROR.PRI ;
      114     8683    1           NMD_PIT.DEV.MDCTX(I)      = DCT.DP.MIRROR.DCTX ;
      115     8684    1           NMD_PIT.DEV.STATE(I)      = DCT.DP.MIRROR.STATE ;
      116     8685    1           NMD_PIT.DEV.UTS(I)        = DCT.DP.MIRROR.UTS ;
      117     8686    1           NMD_PIT.DEV.DRZERO(I)     = DCT.DP.MIRROR.DRZERO ;
      118     8687
      119     8688    1           CALL NMU$CONVERT$ ( DVT$,
      120     8689    1                               BITBIN(%SPCL2SID),
      121     8690    1                               DCT.DVT$,
      122     8691    1                               BITBIN(%DVTTBLSID) )
      123     8692    1                                                   ALTRET ( BADPTR ) ;
      124     8693    1           NMD_PIT.DEV.DVT$(I)         = DVT$ ;
      125     8694    1           NMD_PIT.DEV.CYL(I)          = DVT.T@DCYL ;
      126     8695    1           NMD_PIT.DEV.GRANSIZE(I)     = DVT.GRANSIZE ;
      127     8696    1           NMD_PIT.DEV.PACKSIZE(I)     = DVT.PACKSIZE ;
      128     8697    1           NMD_PIT.DEV.SECT(I)         = DVT.SPT ;
      129     8698    1           NMD_PIT.DEV.TRK(I)          = DVT.CYLSIZE / DVT.SPT ;
      130     8699        /*
      131     8700        Adjust the DCB to point at the device for error message display
      132     8701        and debug purposes.
      133     8702        */
      134     8703    1           SETDCB.V.DCB# = NMD_PIT.DEV.DCB#(I) ;
      135     8704    1           SETDCB.V.RES# = SUBSTR ( NMD_PIT.DEV.NAME.C(I), 0, 4 ) ;
      136     8705    1           CALL M$OPEN ( SETDCB )
      137     8706    2           WHENALTRETURN DO ;
      138     8707    2               CALL NME$ERRMSG ( B$TCB.ALT$->B$ALT.ERR, NMD_PIT.DEV.DCB#(I) ) ;
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:6    
      139     8708    2               GOTO ERROR ;
      140     8709    2               END ;
      141     8710        /*
      142     8711        Return to the calling procedure.
      143     8712        */
      144     8713    1           RETURN ;
      145     8714
      146     8715        /*E*
      147     8716        ERROR:  NMO-E$NMD#BAD_POINTER-7
      148     8717        MESSAGE:  Unsuccessful conversion of monitor pointer to user pointer.
      149     8718        DESCRIPTION:  The pointer conversion failed because the SEGID of the
      150     8719                      monitor pointer did not contain the expected value.
      151     8720        */
      152     8721    1   BADPTR: CALL NME$ERRMSG ( NMO#BAD_POINTER ) ;
      153     8722
      154     8723    1   ERROR:  ALTRETURN ;
      155     8724
      156     8725    1           END NMO$DCT ;
      157     8726        %EOD ;

PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:7    
--  Include file information  --

   NM_PERR_C.:E05TOU  is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NMO$DCT.

   Procedure NMO$DCT requires 171 words for executable code.
   Procedure NMO$DCT requires 12 words of local(AUTO) storage.

PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:8    

 Object Unit name= NMO$DCT                                    File name= NMO$OPTIONS.:E05TOU
 UTS= JUL 30 '97 03:50:16.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  NMO$DCT
    2   Data  even  none    58     72  NMO$DCT
    3   Proc  even  none   171    253  NMO$DCT
    4  RoData even  none    10     12  NMO$DCT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  NMO$DCT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 NMU$CONVERT$
         yes           Std       6 NME$ERRMSG
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                NMD_PIT
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:10   


        1        1        /*M* NMO$DCT - Obtain DCT information for Mirrored Disk device     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
        8        8        /*F*
        9        9        NAME:           NMO$DCT
       10       10
       11       11        PURPOSE:        To obtain mirror device information
       12       12
       13       13        DESCRIPTION:
       14       14
       15       15        The NMO$DCT procedure is used to obtain information on the
       16       16        Mirrored Disk device from the specified DCT.
       17       17        */
       18       18        /*D*
       19       19        NAME:           NMO$DCT
       20       20
       21       21        CALL:           CALL NMO$DCT ( i, dctx )  ALTRET ( error ) ;
       22       22
       23       23        PARAMETERS:
       24       24        */
       25       25        /*K*
       26       26        i               is the index into NMD_PIT.DEV.  i must be
       27       27                either 0 or 1.
       28       28        */
       29       29        /*K*
       30       30        dctx            specifies a UBIN(36) variable which specifies
       31       31                the DCTX to be used.
       32       32        */
       33       33        /*D*
       34       34        DESCRIPTION:
       35       35
       36       36        The NMO$DCT procedure is used to obtain Mirrored Disk
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:11   
       37       37        information from the specified DCT.
       38       38
       39       39        If an error is detected, an error message is printed, and an
       40       40        altreturn is made to the calling routine.
       41       41        */
       42       42        %EJECT ;
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:12   
       43       43        NMO$DCT:        PROC ( I, DCTX ) ALTRET ;

     43  3 000000   000000 700200 xent  NMO$DCT      TSX0  ! X66_AUTO_2
         3 000001   000014 000002                    ZERO    12,2

       44       44        /*
       45       45                        Includes
       46       46        */
       47       47        %INCLUDE                B_SEGIDS_C ;
       48      586        %INCLUDE                CP_6 ;
       49     6145        %INCLUDE                NI$TABLES ;
       50     6361        %INCLUDE                NI_DATA_C ;
       51     6474        %INCLUDE                NM_MACRO_M ;
       52     7879        %INCLUDE                NM_PERR_C ;
       53     7956        /*
       54     7957                        Parameters
       55     7958        */
       56     7959    1   DCL 1 I                 SBIN WORD ALIGNED PARAM ;
       57     7960    1   DCL 1 DCTX              SBIN WORD ALIGNED PARAM ;
       58     7961        /*
       59     7962                        Entries
       60     7963        */
       61     7964    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
       62     7965    1   DCL 1 NMU$CONVERT$      ENTRY(4) ALTRET ;
       63     7966        /*
       64     7967                        Variables
       65     7968        */
       66     7969                                %B$ALT ( NAME =
       67     7970              B$ALT             , STCLASS = BASED
       68     7971                                                                        ) ;
       69     7979                                %B$TCB ( NAME =
       70     7980              B$TCB             , STCLASS = "BASED(B$TCB$)"
       71     7981                                                                        ) ;
       72     7984    1   DCL 1 B$TCB$            PTR SYMREF ;
       73     7985                                %NI$DCT ( NAME =
       74     7986              DCT               , STCLASS = "BASED(DCT$)"
       75     7987                                                                        ) ;
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:13   
       76     8035    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
       77     8036                                %NI$DVT ( NAME =
       78     8037              DVT               , STCLASS = "BASED(DVT$)"
       79     8038                                                                        ) ;
       80     8045    1   DCL 1 DVT$              PTR ALIGNED AUTO ;
       81     8046    1   DCL 1 N$DCT$(0:0)       PTR ALIGNED BASED(NMD_PIT.N$DCT$$) ;
       82     8047                                %NMD_PIT ( FPTN =
       83     8048              NMD_PIT           , STCLASS = SYMREF
       84     8049                                                                        ) ;
       85     8502                                %VLP_ERRCODE ( FPTN =
       86     8503              NMO#BAD_POINTER   , STCLASS = CONSTANT
       87     8504                                , ERR# = %E$NMD#BAD_POINTER
       88     8505                                , FCG  = %NMD#FCG
       89     8506                                , MID  = 'O'
       90     8507                                , MON  = %NO#
       91     8508                                , SEV  = 5
       92     8509                                                                        ) ;
       93     8554                                %FPT_OPEN ( FPTN =
       94     8555              SETDCB            , STCLASS = STATIC
       95     8556                                , ASN = DEVICE
       96     8557                                , FUN = IN
       97     8558                                , REASSIGN = NO
       98     8559                                , SCRUB = YES
       99     8560                                , SETDCB = YES
      100     8561                                                                        ) ;
      101     8670        %EJECT ;
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:14   
      102     8671        /*
      103     8672        Obtain the mirror device information from the system DCT tables.
      104     8673        */
      105     8674    1           CALL NMU$CONVERT$ ( DCT$,

   8674  3 000002   200004 470500                    LDP0    @DCTX,,AUTO
         3 000003   000000 720100                    LXL0    0,,PR0
         3 000004   000002 236000 4                  LDQ     2
         3 000005   200013 756100                    STQ     DVT$+5,,AUTO
         3 000006   000000 636010                    EAQ     0,X0
         3 000007   000304 036000 xsym               ADLQ    NMD_PIT+196
         3 000010   200012 756100                    STQ     DVT$+4,,AUTO
         3 000011   000003 236000 4                  LDQ     3
         3 000012   200011 756100                    STQ     DVT$+3,,AUTO
         3 000013   200005 631500                    EPPR1   DCT$,,AUTO
         3 000014   200010 451500                    STP1    DVT$+2,,AUTO
         3 000015   200010 630500                    EPPR0   DVT$+2,,AUTO
         3 000016   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000017   000000 701000 xent               TSX1    NMU$CONVERT$
         3 000020   000246 702000 3                  TSX2    BADPTR

      106     8675    1                               BITBIN(%SPCL1SID),
      107     8676    1                               N$DCT$(DCTX),
      108     8677    1                               BITBIN(%TIGRSID)                    )
      109     8678    1                                                   ALTRET ( BADPTR ) ;
      110     8679    1           NMD_PIT.DEV.NAME.C(I)     = DCT.DEVNM ;

   8679  3 000021   200003 470500                    LDP0    @I,,AUTO
         3 000022   000000 236100                    LDQ     0,,PR0
         3 000023   000015 402007                    MPY     13,DL
         3 000024   000001 736000                    QLS     1
         3 000025   000002 736000                    QLS     2
         3 000026   200005 471500                    LDP1    DCT$,,AUTO
         3 000027   040006 100500                    MLR     fill='040'O
         3 000030   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         3 000031   000020 200010 xsym               ADSC9   NMD_PIT+16,Q             cn=1,n=8

PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:15   
      111     8680    1           NMD_PIT.DEV.DCT$(I)       = DCT$ ;

   8680  3 000032   000000 236100                    LDQ     0,,PR0
         3 000033   000015 402007                    MPY     13,DL
         3 000034   000001 736000                    QLS     1
         3 000035   000000 620006                    EAX0    0,QL
         3 000036   200005 236100                    LDQ     DCT$,,AUTO
         3 000037   000010 756010 xsym               STQ     NMD_PIT+8,X0

      112     8681    1           NMD_PIT.DEV.DCTX(I)       = DCTX ;

   8681  3 000040   000000 236100                    LDQ     0,,PR0
         3 000041   000015 402007                    MPY     13,DL
         3 000042   000001 736000                    QLS     1
         3 000043   200004 473500                    LDP3    @DCTX,,AUTO
         3 000044   300000 235100                    LDA     0,,PR3
         3 000045   000011 755006 xsym               STA     NMD_PIT+9,QL

      113     8682    1           NMD_PIT.DEV.FLAGS.PRI(I)  = DCT.DP.MIRROR.PRI ;

   8682  3 000046   000000 236100                    LDQ     0,,PR0
         3 000047   000015 402007                    MPY     13,DL
         3 000050   000001 736000                    QLS     1
         3 000051   000000 620006                    EAX0    0,QL
         3 000052   100036 236100                    LDQ     30,,PR1
         3 000053   000003 736000                    QLS     3
         3 000054   000014 676010 xsym               ERQ     NMD_PIT+12,X0
         3 000055   200000 376003                    ANQ     65536,DU
         3 000056   000014 656010 xsym               ERSQ    NMD_PIT+12,X0

      114     8683    1           NMD_PIT.DEV.MDCTX(I)      = DCT.DP.MIRROR.DCTX ;

   8683  3 000057   000000 236100                    LDQ     0,,PR0
         3 000060   000015 402007                    MPY     13,DL
         3 000061   000001 736000                    QLS     1
         3 000062   000000 620006                    EAX0    0,QL
         3 000063   100037 236100                    LDQ     31,,PR1
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:16   
         3 000064   000022 772000                    QRL     18
         3 000065   000017 756010 xsym               STQ     NMD_PIT+15,X0

      115     8684    1           NMD_PIT.DEV.STATE(I)      = DCT.DP.MIRROR.STATE ;

   8684  3 000066   000000 236100                    LDQ     0,,PR0
         3 000067   000015 402007                    MPY     13,DL
         3 000070   000001 736000                    QLS     1
         3 000071   000000 620006                    EAX0    0,QL
         3 000072   100036 236100                    LDQ     30,,PR1
         3 000073   000030 772000                    QRL     24
         3 000074   000077 376007                    ANQ     63,DL
         3 000075   000025 756010 xsym               STQ     NMD_PIT+21,X0

      116     8685    1           NMD_PIT.DEV.UTS(I)        = DCT.DP.MIRROR.UTS ;

   8685  3 000076   000000 236100                    LDQ     0,,PR0
         3 000077   000015 402007                    MPY     13,DL
         3 000100   000001 736000                    QLS     1
         3 000101   100040 235100                    LDA     32,,PR1
         3 000102   000027 755006 xsym               STA     NMD_PIT+23,QL

      117     8686    1           NMD_PIT.DEV.DRZERO(I)     = DCT.DP.MIRROR.DRZERO ;

   8686  3 000103   000000 236100                    LDQ     0,,PR0
         3 000104   000015 402007                    MPY     13,DL
         3 000105   000001 736000                    QLS     1
         3 000106   100041 235100                    LDA     33,,PR1
         3 000107   000012 755006 xsym               STA     NMD_PIT+10,QL

      118     8687
      119     8688    1           CALL NMU$CONVERT$ ( DVT$,

   8688  3 000110   000006 236000 4                  LDQ     6
         3 000111   200013 756100                    STQ     DVT$+5,,AUTO
         3 000112   200005 236100                    LDQ     DCT$,,AUTO
         3 000113   000024 036003                    ADLQ    20,DU
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:17   
         3 000114   200012 756100                    STQ     DVT$+4,,AUTO
         3 000115   000007 236000 4                  LDQ     7
         3 000116   200011 756100                    STQ     DVT$+3,,AUTO
         3 000117   200006 634500                    EPPR4   DVT$,,AUTO
         3 000120   200010 454500                    STP4    DVT$+2,,AUTO
         3 000121   200010 630500                    EPPR0   DVT$+2,,AUTO
         3 000122   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000123   000000 701000 xent               TSX1    NMU$CONVERT$
         3 000124   000246 702000 3                  TSX2    BADPTR

      120     8689    1                               BITBIN(%SPCL2SID),
      121     8690    1                               DCT.DVT$,
      122     8691    1                               BITBIN(%DVTTBLSID) )
      123     8692    1                                                   ALTRET ( BADPTR ) ;
      124     8693    1           NMD_PIT.DEV.DVT$(I)         = DVT$ ;

   8693  3 000125   200003 470500                    LDP0    @I,,AUTO
         3 000126   000000 236100                    LDQ     0,,PR0
         3 000127   000015 402007                    MPY     13,DL
         3 000130   000001 736000                    QLS     1
         3 000131   000000 620006                    EAX0    0,QL
         3 000132   200006 236100                    LDQ     DVT$,,AUTO
         3 000133   000013 756010 xsym               STQ     NMD_PIT+11,X0

      125     8694    1           NMD_PIT.DEV.CYL(I)          = DVT.T@DCYL ;

   8694  3 000134   000000 236100                    LDQ     0,,PR0
         3 000135   000015 402007                    MPY     13,DL
         3 000136   000001 736000                    QLS     1
         3 000137   200006 471500                    LDP1    DVT$,,AUTO
         3 000140   000000 620006                    EAX0    0,QL
         3 000141   100055 236100                    LDQ     45,,PR1
         3 000142   777777 376007                    ANQ     -1,DL
         3 000143   000005 756010 xsym               STQ     NMD_PIT+5,X0

      126     8695    1           NMD_PIT.DEV.GRANSIZE(I)     = DVT.GRANSIZE ;

PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:18   
   8695  3 000144   000000 236100                    LDQ     0,,PR0
         3 000145   000015 402007                    MPY     13,DL
         3 000146   000001 736000                    QLS     1
         3 000147   000000 620006                    EAX0    0,QL
         3 000150   100053 236100                    LDQ     43,,PR1
         3 000151   000777 376007                    ANQ     511,DL
         3 000152   000016 756010 xsym               STQ     NMD_PIT+14,X0

      127     8696    1           NMD_PIT.DEV.PACKSIZE(I)     = DVT.PACKSIZE ;

   8696  3 000153   000000 236100                    LDQ     0,,PR0
         3 000154   000015 402007                    MPY     13,DL
         3 000155   000001 736000                    QLS     1
         3 000156   100054 235100                    LDA     44,,PR1
         3 000157   000023 755006 xsym               STA     NMD_PIT+19,QL

      128     8697    1           NMD_PIT.DEV.SECT(I)         = DVT.SPT ;

   8697  3 000160   000000 236100                    LDQ     0,,PR0
         3 000161   000015 402007                    MPY     13,DL
         3 000162   000001 736000                    QLS     1
         3 000163   000000 620006                    EAX0    0,QL
         3 000164   100053 236100                    LDQ     43,,PR1
         3 000165   000011 772000                    QRL     9
         3 000166   000777 376007                    ANQ     511,DL
         3 000167   000024 756010 xsym               STQ     NMD_PIT+20,X0

      129     8698    1           NMD_PIT.DEV.TRK(I)          = DVT.CYLSIZE / DVT.SPT ;

   8698  3 000170   000000 236100                    LDQ     0,,PR0
         3 000171   000015 402007                    MPY     13,DL
         3 000172   000001 736000                    QLS     1
         3 000173   000000 620006                    EAX0    0,QL
         3 000174   100053 236100                    LDQ     43,,PR1
         3 000175   000011 772000                    QRL     9
         3 000176   000777 376007                    ANQ     511,DL
         3 000177   200010 756100                    STQ     DVT$+2,,AUTO
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:19   
         3 000200   100055 236100                    LDQ     45,,PR1
         3 000201   000022 772000                    QRL     18
         3 000202   200010 506100                    DIV     DVT$+2,,AUTO
         3 000203   000026 756010 xsym               STQ     NMD_PIT+22,X0

      130     8699        /*
      131     8700        Adjust the DCB to point at the device for error message display
      132     8701        and debug purposes.
      133     8702        */
      134     8703    1           SETDCB.V.DCB# = NMD_PIT.DEV.DCB#(I) ;

   8703  3 000204   000000 236100                    LDQ     0,,PR0
         3 000205   000015 402007                    MPY     13,DL
         3 000206   000001 736000                    QLS     1
         3 000207   000006 720006 xsym               LXL0    NMD_PIT+6,QL
         3 000210   000044 740000 2                  STX0    SETDCB+36

      135     8704    1           SETDCB.V.RES# = SUBSTR ( NMD_PIT.DEV.NAME.C(I), 0, 4 ) ;

   8704  3 000211   000000 236100                    LDQ     0,,PR0
         3 000212   000015 402007                    MPY     13,DL
         3 000213   000001 736000                    QLS     1
         3 000214   000020 235006 xsym               LDA     NMD_PIT+16,QL
         3 000215   000021 236006 xsym               LDQ     NMD_PIT+17,QL
         3 000216   000033 773000                    LRL     27
         3 000217   000027 376000 xsym               ANQ     B_VECTNIL+23
         3 000220   000050 756000 2                  STQ     SETDCB+40

      136     8705    1           CALL M$OPEN ( SETDCB )

   8705  3 000221   000000 630400 2                  EPPR0   SETDCB
         3 000222   450000 713400                    CLIMB   alt,open
         3 000223   410400 401760                    pmme    nvectors=18
         3 000224   000226 702000 3                  TSX2    s:8707
         3 000225   000245 710000 3                  TRA     s:8713

      137     8706    2           WHENALTRETURN DO ;
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:20   

      138     8707    2               CALL NME$ERRMSG ( B$TCB.ALT$->B$ALT.ERR, NMD_PIT.DEV.DCB#(I) ) ;

   8707  3 000226   000000 470400 xsym               LDP0    B$TCB$
         3 000227   000000 471500                    LDP1    0,,PR0
         3 000230   200003 473500                    LDP3    @I,,AUTO
         3 000231   300000 236100                    LDQ     0,,PR3
         3 000232   000015 402007                    MPY     13,DL
         3 000233   000023 736000                    QLS     19
         3 000234   000010 036000 4                  ADLQ    8
         3 000235   200011 756100                    STQ     DVT$+3,,AUTO
         3 000236   100102 634500                    EPPR4   66,,PR1
         3 000237   200010 454500                    STP4    DVT$+2,,AUTO
         3 000240   200010 630500                    EPPR0   DVT$+2,,AUTO
         3 000241   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000242   000000 701000 xent               TSX1    NME$ERRMSG
         3 000243   000000 011000                    NOP     0

      139     8708    2               GOTO ERROR ;

   8708  3 000244   000252 710000 3                  TRA     ERROR

      140     8709    2               END ;
      141     8710        /*
      142     8711        Return to the calling procedure.
      143     8712        */
      144     8713    1           RETURN ;

   8713  3 000245   000000 702200 xent               TSX2  ! X66_ARET

      145     8714
      146     8715        /*E*
      147     8716        ERROR:  NMO-E$NMD#BAD_POINTER-7
      148     8717        MESSAGE:  Unsuccessful conversion of monitor pointer to user pointer.
      149     8718        DESCRIPTION:  The pointer conversion failed because the SEGID of the
      150     8719                      monitor pointer did not contain the expected value.
      151     8720        */
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:21   
      152     8721    1   BADPTR: CALL NME$ERRMSG ( NMO#BAD_POINTER ) ;

   8721  3 000246   000011 630400 4     BADPTR       EPPR0   9
         3 000247   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000250   000000 701000 xent               TSX1    NME$ERRMSG
         3 000251   000000 011000                    NOP     0

      153     8722
      154     8723    1   ERROR:  ALTRETURN ;

   8723  3 000252   000000 702200 xent  ERROR        TSX2  ! X66_AALT
      155     8724
      156     8725    1           END NMO$DCT ;
      157     8726        %EOD ;

PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:22   
--  Include file information  --

   NM_PERR_C.:E05TOU  is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NMO$DCT.
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:23   

 **** Variables and constants ****

  ****  Section 001 RoData NMO$DCT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 NMO#BAD_POINTER

  ****  Section 002  Data  NMO$DCT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 SETDCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DCTX                      3-0-0/w PTR         r     1 @I
     5-0-0/w PTR         r     1 DCT$                      *0-0-0/w SBIN        r     1 DCTX
     6-0-0/w PTR         r     1 DVT$                      *0-0-0/w SBIN        r     1 I

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/d STRC(8892)  r     1 NMD_PIT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:24   
     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/w STRC(2844)  r     1 DVT
     0-0-0/w PTR         r     1 N$DCT$(0:0)


   Procedure NMO$DCT requires 171 words for executable code.
   Procedure NMO$DCT requires 12 words of local(AUTO) storage.
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:26   
          MINI XREF LISTING

B$ALT.CODE
      7973**DCL      7973--REDEF    7974--REDEF    7974--REDEF
B$ALT.ERR
      7974**DCL      8707<>CALL
B$ALT.ERR.ERR#
      7975**DCL      7975--REDEF
B$ALT.EVID
      7974**DCL      7974--REDEF    7974--REDEF
B$TCB.ALT$
      7982**DCL      8707>>CALL
B$TCB$
      7984**DCL      7982--IMP-PTR  8707>>CALL
BADPTR
      8721**LABEL    8674--CALLALT  8688--CALLALT
DCT.DEVNM
      7996**DCL      8679>>ASSIGN
DCT.DP
      8016**DCL      8023--REDEF    8026--REDEF    8027--REDEF    8029--REDEF    8029--REDEF    8030--REDEF
      8031--REDEF    8031--REDEF
DCT.DP.MIRROR.DCTX
      8021**DCL      8683>>ASSIGN
DCT.DP.MIRROR.DRZERO
      8022**DCL      8686>>ASSIGN
DCT.DP.MIRROR.PRI
      8020**DCL      8682>>ASSIGN
DCT.DP.MIRROR.STATE
      8020**DCL      8684>>ASSIGN
DCT.DP.MIRROR.UTS
      8022**DCL      8685>>ASSIGN
DCT.DVT$
      8012**DCL      8688<>CALL
DCT.MPC.IOCHANX
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:27   
      8024**DCL      8024--REDEF
DCT$
      8035**DCL      7996--IMP-PTR  8674<>CALL     8679>>ASSIGN   8680>>ASSIGN   8682>>ASSIGN   8683>>ASSIGN
      8684>>ASSIGN   8685>>ASSIGN   8686>>ASSIGN   8688>>CALL
DCTX
      7960**DCL        43--PROC     8674>>CALL     8681>>ASSIGN
DVT.CYLSIZE
      8040**DCL      8698>>ASSIGN
DVT.GRANSIZE
      8040**DCL      8695>>ASSIGN
DVT.MPC
      8041**DCL      8042--REDEF
DVT.PACKSIZE
      8040**DCL      8696>>ASSIGN
DVT.SPT
      8040**DCL      8697>>ASSIGN   8698>>ASSIGN
DVT.T@DCYL
      8041**DCL      8694>>ASSIGN
DVT$
      8045**DCL      8039--IMP-PTR  8688<>CALL     8693>>ASSIGN   8694>>ASSIGN   8695>>ASSIGN   8696>>ASSIGN
      8697>>ASSIGN   8698>>ASSIGN   8698>>ASSIGN
ERROR
      8723**LABEL    8708--GOTO
I
      7959**DCL        43--PROC     8679>>ASSIGN   8680>>ASSIGN   8681>>ASSIGN   8682>>ASSIGN   8683>>ASSIGN
      8684>>ASSIGN   8685>>ASSIGN   8686>>ASSIGN   8693>>ASSIGN   8694>>ASSIGN   8695>>ASSIGN   8696>>ASSIGN
      8697>>ASSIGN   8698>>ASSIGN   8703>>ASSIGN   8704>>ASSIGN   8707>>CALL
M$OPEN
      6073**DCL-ENT  8705--CALL
N$DCT$
      8046**DCL      8674<>CALL
NMD_PIT.DEV.CYL
      8092**DCL      8694<<ASSIGN
NMD_PIT.DEV.DCB#
      8098**DCL      8703>>ASSIGN   8707<>CALL
NMD_PIT.DEV.DCT$
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:28   
      8110**DCL      8680<<ASSIGN
NMD_PIT.DEV.DCTX
      8115**DCL      8681<<ASSIGN
NMD_PIT.DEV.DRZERO
      8120**DCL      8686<<ASSIGN
NMD_PIT.DEV.DVT$
      8125**DCL      8693<<ASSIGN
NMD_PIT.DEV.FLAGS.PRI
      8140**DCL      8682<<ASSIGN
NMD_PIT.DEV.GRANSIZE
      8155**DCL      8695<<ASSIGN
NMD_PIT.DEV.MDCTX
      8160**DCL      8683<<ASSIGN
NMD_PIT.DEV.NAME.C
      8175**DCL      8679<<ASSIGN   8704>>ASSIGN
NMD_PIT.DEV.PACKSIZE
      8180**DCL      8696<<ASSIGN
NMD_PIT.DEV.SECT
      8185**DCL      8697<<ASSIGN
NMD_PIT.DEV.STATE
      8190**DCL      8684<<ASSIGN
NMD_PIT.DEV.TRK
      8195**DCL      8698<<ASSIGN
NMD_PIT.DEV.UTS
      8200**DCL      8685<<ASSIGN
NMD_PIT.N$DCT$$
      8372**DCL      8046--IMP-PTR  8674>>CALL
NME$ERRMSG
      7964**DCL-ENT  8707--CALL     8721--CALL
NMO#BAD_POINTER
      8521**DCL      8721<>CALL
NMU$CONVERT$
      7965**DCL-ENT  8674--CALL     8688--CALL
SETDCB
      8626**DCL      8705<>CALL
SETDCB.ACSVEH_
PL6.E3A0      #001=NMO$DCT File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:50 Page:29   
      8628**DCL      8629--REDEF
SETDCB.ALTKEYS_
      8634**DCL      8635--REDEF    8635--REDEF
SETDCB.HDR_
      8633**DCL      8634--REDEF
SETDCB.TAB_
      8632**DCL      8633--REDEF
SETDCB.UHL_
      8626**DCL      8627--REDEF    8627--REDEF
SETDCB.V
      8635**DCL      8626--DCLINIT
SETDCB.V.DCB#
      8635**DCL      8703<<ASSIGN
SETDCB.V.FSN#
      8666**DCL      8666--REDEF    8666--REDEF
SETDCB.V.RES#
      8650**DCL      8704<<ASSIGN
SETDCB.WSN_
      8632**DCL      8632--REDEF

PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:30   
      158        1        /*M* NMO$DEFAULTS - Procedure to establish default options.       */
      159        2        /*T***********************************************************/
      160        3        /*T*                                                         */
      161        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      162        5        /*T*                                                         */
      163        6        /*T***********************************************************/
      164        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
      165        8        /*F*
      166        9        NAME:           NMO$DEFAULTS
      167       10
      168       11        PURPOSE:        To set options to default values.
      169       12        */
      170       13        /*D*
      171       14        NAME:           NMO$DEFAULTS
      172       15
      173       16        CALL:           CALL NMO$DEFAULTS ;
      174       17
      175       18        PARAMETERS:     None.
      176       19
      177       20        DESCRIPTION:
      178       21
      179       22        The NMO$DEFAULTS procedure is used to set the default values
      180       23        for all options.
      181       24        */
      182       25        %EJECT ;
PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:31   
      183       26        NMO$DEFAULTS:    PROC ;
      184       27        /*
      185       28                        Includes
      186       29        */
      187       30        %INCLUDE                CP_6 ;
      188     5589        %INCLUDE                NM_MACRO_M ;
      189     6994        /*
      190     6995                        Variables
      191     6996        */
      192     6997                                %NMD_PIT ( FPTN =
      193     6998              NMD_PIT           , STCLASS = SYMREF
      194     6999                                                                        ) ;
      195     7452
      196     7453
      197     7454
      198     7455        /*
      199     7456        Initialize the default option values.
      200     7457        */
      201     7458    1           NMD_PIT.OPTIONS       = '0'B ;
      202     7459
      203     7460    1           NMD_PIT.GRANS#        = %NMD#DEFAULT_GRANS ;
      204     7461    1           NMD_PIT.MXDIFF#       = %NMD#DEFAULT_MXDIFF ;
      205     7462    1           NMD_PIT.NDIFF#        = 0 ;
      206     7463    1           NMD_PIT.PAUSE#        = %NMD#DEFAULT_PAUSE ;
      207     7464    1           NMD_PIT.REPORT.INCR   = %NMD#DEFAULT_REPORT_INCR ;
      208     7465
      209     7466    1           NMD_PIT.FLAGS.REPORT# = %NMD#DEFAULT_REPORT ;
      210     7467        /*
      211     7468        Return to the calling procedure.
      212     7469        */
      213     7470    1           RETURN ;
      214     7471
      215     7472    1           END NMO$DEFAULTS ;
      216     7473        %EOD ;

PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:32   
--  Include file information  --

   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NMO$DEFAULTS.

   Procedure NMO$DEFAULTS requires 14 words for executable code.
   Procedure NMO$DEFAULTS requires 4 words of local(AUTO) storage.

PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:33   

 Object Unit name= NMO$DEFAULTS                               File name= NMO$OPTIONS.:E05TOU
 UTS= JUL 30 '97 03:51:01.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    14     16  NMO$DEFAULTS
    2  RoData even  none     1      1  NMO$DEFAULTS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  NMO$DEFAULTS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  NMD_PIT
PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:34   


      158        1        /*M* NMO$DEFAULTS - Procedure to establish default options.       */
      159        2        /*T***********************************************************/
      160        3        /*T*                                                         */
      161        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      162        5        /*T*                                                         */
      163        6        /*T***********************************************************/
      164        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
      165        8        /*F*
      166        9        NAME:           NMO$DEFAULTS
      167       10
      168       11        PURPOSE:        To set options to default values.
      169       12        */
      170       13        /*D*
      171       14        NAME:           NMO$DEFAULTS
      172       15
      173       16        CALL:           CALL NMO$DEFAULTS ;
      174       17
      175       18        PARAMETERS:     None.
      176       19
      177       20        DESCRIPTION:
      178       21
      179       22        The NMO$DEFAULTS procedure is used to set the default values
      180       23        for all options.
      181       24        */
      182       25        %EJECT ;
PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:35   
      183       26        NMO$DEFAULTS:    PROC ;

     26  1 000000   000000 700200 xent  NMO$DEFAULTS TSX0  ! X66_AUTO_0
         1 000001   000004 000000                    ZERO    4,0

      184       27        /*
      185       28                        Includes
      186       29        */
      187       30        %INCLUDE                CP_6 ;
      188     5589        %INCLUDE                NM_MACRO_M ;
      189     6994        /*
      190     6995                        Variables
      191     6996        */
      192     6997                                %NMD_PIT ( FPTN =
      193     6998              NMD_PIT           , STCLASS = SYMREF
      194     6999                                                                        ) ;
      195     7452
      196     7453
      197     7454
      198     7455        /*
      199     7456        Initialize the default option values.
      200     7457        */
      201     7458    1           NMD_PIT.OPTIONS       = '0'B ;

   7458  1 000002   000306 450000 xsym               STZ     NMD_PIT+198

      202     7459
      203     7460    1           NMD_PIT.GRANS#        = %NMD#DEFAULT_GRANS ;

   7460  1 000003   000100 235007                    LDA     64,DL
         1 000004   000274 755000 xsym               STA     NMD_PIT+188

      204     7461    1           NMD_PIT.MXDIFF#       = %NMD#DEFAULT_MXDIFF ;

   7461  1 000005   000000 236000 2                  LDQ     0
         1 000006   000303 756000 xsym               STQ     NMD_PIT+195

PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:36   
      205     7462    1           NMD_PIT.NDIFF#        = 0 ;

   7462  1 000007   000305 450000 xsym               STZ     NMD_PIT+197

      206     7463    1           NMD_PIT.PAUSE#        = %NMD#DEFAULT_PAUSE ;

   7463  1 000010   000310 450000 xsym               STZ     NMD_PIT+200

      207     7464    1           NMD_PIT.REPORT.INCR   = %NMD#DEFAULT_REPORT_INCR ;

   7464  1 000011   000012 235007                    LDA     10,DL
         1 000012   000316 755000 xsym               STA     NMD_PIT+206

      208     7465
      209     7466    1           NMD_PIT.FLAGS.REPORT# = %NMD#DEFAULT_REPORT ;

   7466  1 000013   020000 236003                    LDQ     8192,DU
         1 000014   000273 256000 xsym               ORSQ    NMD_PIT+187

      210     7467        /*
      211     7468        Return to the calling procedure.
      212     7469        */
      213     7470    1           RETURN ;

   7470  1 000015   000000 702200 xent               TSX2  ! X66_ARET
      214     7471
      215     7472    1           END NMO$DEFAULTS ;
      216     7473        %EOD ;

PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:37   
--  Include file information  --

   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NMO$DEFAULTS.
PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:38   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8892)  r     1 NMD_PIT


   Procedure NMO$DEFAULTS requires 14 words for executable code.
   Procedure NMO$DEFAULTS requires 4 words of local(AUTO) storage.
PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:39   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=NMO$DEFAULTS File=NMO$OPTIONS.:E05TSI                         WED 07/30/97 03:51 Page:40   
          MINI XREF LISTING

NMD_PIT.FLAGS.REPORT#
      7271**DCL      7466<<ASSIGN
NMD_PIT.GRANS#
      7288**DCL      7460<<ASSIGN
NMD_PIT.MXDIFF#
      7317**DCL      7461<<ASSIGN
NMD_PIT.NDIFF#
      7327**DCL      7462<<ASSIGN
NMD_PIT.OPTIONS
      7334**DCL      7458<<ASSIGN
NMD_PIT.PAUSE#
      7389**DCL      7463<<ASSIGN
NMD_PIT.REPORT.INCR
      7413**DCL      7464<<ASSIGN

PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:41   
      217        1        /*M* NMO$DEV - DEV process the specified device.                    */
      218        2        /*T***********************************************************/
      219        3        /*T*                                                         */
      220        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      221        5        /*T*                                                         */
      222        6        /*T***********************************************************/
      223        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
      224        8        /*F*
      225        9        NAME:           NMO$DEV
      226       10
      227       11        PURPOSE:        To process the specified device.
      228       12
      229       13        DESCRIPTION:
      230       14
      231       15        The NMO$DEV procedure is used to process the specified device.
      232       16        */
      233       17        /*D*
      234       18        NAME:           NMO$DEV
      235       19
      236       20        CALL:           CALL NMO$DEV ( i, out$ ) ALTRET ( error ) ;
      237       21
      238       22        PARAMETERS:
      239       23        */
      240       24        /*K*
      241       25        i               is the index into NMD_PIT.DEV.  i must be
      242       26                either 0 or 1.
      243       27        */
      244       28        /*K*
      245       29        out$            is a pointer to the NMC#DEV parse output
      246       30                block.
      247       31        */
      248       32        /*D*
      249       33        DESCRIPTION:
      250       34
      251       35        The NMO$DEV procedure is used to process the specified device.
      252       36
      253       37        If the device specification is correct, if the device is found
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:42   
      254       38        in the DCT tapes, if the device is a disk drive, additional
      255       39        information is moved from the DCT into NMD_PIT.DEV for the
      256       40        specified device.
      257       41
      258       42        If an error is detected, an error message is printed, and an
      259       43        altreturn is made to the calling routine.
      260       44        */
      261       45        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:43   
      262       46        NMO$DEV:        PROC ( I, OUT$ ) ALTRET ;
      263       47        /*
      264       48                        Includes
      265       49        */
      266       50        %INCLUDE                B_SEGIDS_C ;
      267      589        %INCLUDE                CP_6 ;
      268     6148        %INCLUDE                NI$TABLES ;
      269     6364        %INCLUDE                NM_MACRO_M ;
      270     7769        %INCLUDE                NM_PERR_C ;
      271     7846        %INCLUDE                XU_MACRO_C ;
      272    10952        /*
      273    10953                        Parameters
      274    10954        */
      275    10955    1   DCL 1 I                 UBIN ALIGNED PARAM ;
      276    10956    1   DCL 1 OUT$              PTR ALIGNED PARAM ;
      277    10957        /*
      278    10958                        Entries
      279    10959        */
      280    10960    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
      281    10961    1   DCL 1 NMU$CONVERT$      ENTRY(4) ALTRET ;
      282    10962        /*
      283    10963                        Variables
      284    10964        */
      285    10965                                %B$ALT ( NAME =
      286    10966              B$ALT             , STCLASS = BASED
      287    10967                                                                        ) ;
      288    10975                                %B$TCB ( NAME =
      289    10976              B$TCB             , STCLASS = "BASED(B$TCB$)"
      290    10977                                                                        ) ;
      291    10980    1   DCL 1 B$TCB$            PTR SYMREF ;
      292    10981                                %NI$DCT ( NAME =
      293    10982              DCT               , STCLASS = "BASED(DCT$)"
      294    10983                                                                        ) ;
      295    11031    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
      296    11032    1   DCL 1 DCTX              UBIN WORD ALIGNED AUTO ;
      297    11033                                %NI$DVT ( NAME =
      298    11034              DVT               , STCLASS = "BASED(DVT$)"
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:44   
      299    11035                                                                        ) ;
      300    11042    1   DCL 1 DVT$              PTR ALIGNED AUTO ;
      301    11043                                %NMD_PIT ( FPTN =
      302    11044              NMD_PIT           , STCLASS = SYMREF
      303    11045                                                                        ) ;
      304    11498                                %VLP_ERRCODE ( FPTN =
      305    11499              NMO#BAD_POINTER   , STCLASS = CONSTANT
      306    11500                                , ERR# = %E$NMD#BAD_POINTER
      307    11501                                , FCG  = %NMD#FCG
      308    11502                                , MID  = 'O'
      309    11503                                , MON  = %NO#
      310    11504                                , SEV  = 5
      311    11505                                                                        ) ;
      312    11550                                %VLP_ERRCODE ( FPTN =
      313    11551              NMO#INV_DEVICE    , STCLASS = CONSTANT
      314    11552                                , ERR# = %E$NMD#INV_DEVICE
      315    11553                                , FCG  = %NMD#FCG
      316    11554                                , MID  = 'O'
      317    11555                                , MON  = %NO#
      318    11556                                , SEV  = 5
      319    11557                                                                        ) ;
      320    11602                                %VLP_NAMEV ( FPTN =
      321    11603              NN                , STCLASS = BASED
      322    11604                                                                        ) ;
      323    11611                                %PARSE$OUT ( NAME =
      324    11612              OUT               , STCLASS = "BASED(OUT$)"
      325    11613                                                                        ) ;
      326    11658                                %FPT_OPEN ( FPTN =
      327    11659              SETDCB            , STCLASS = STATIC
      328    11660                                , ASN = DEVICE
      329    11661                                , FUN = IN
      330    11662                                , REASSIGN = NO
      331    11663                                , SCRUB = YES
      332    11664                                , SETDCB = YES
      333    11665                                                                        ) ;
      334    11774                                %PARSE$SYM ( NAME =
      335    11775              SYM               , STCLASS = "BASED(SYM$)"
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:45   
      336    11776                                                                        ) ;
      337    11814    1   DCL 1 SYM$              PTR ALIGNED AUTO ;
      338    11815        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:46   
      339    11816        /*
      340    11817        Determine name for the device.
      341    11818        */
      342    11819    1           SYM$ = OUT.SUBLK$(0) ;
      343    11820    1           CALL CONCAT ( NMD_PIT.DEV.NAME.C(I), 'DP',
      344    11821    1                                                SYM.TEXTC$->NN.NAME#,
      345    11822    1                                                '0000' ) ;
      346    11823    1           NMD_PIT.DEV.NAME.L(I) = 2 + SYM.COUNT ;
      347    11824
      348    11825    1           IF  NMD_PIT.DEV.NAME.L(I) ~= 4
      349    11826    2           THEN DO ;
      350    11827        /*E*
      351    11828        ERROR:  NMO-E$NMD#INV_DEVICE-5
      352    11829        MESSAGE:  %U1 is an invalid device name.
      353    11830        DESCRIPTION:  The device name must be of the form "DPnn"
      354    11831                      where "nn" is two digits from 00 thru 99.
      355    11832        */
      356    11833    2               CALL NME$ERRMSG ( NMO#INV_DEVICE, ,
      357    11834    2                                 VECTOR ( NMD_PIT.DEV.NAME(I) ) ) ;
      358    11835    2               GOTO ERROR ;
      359    11836    2               END ;
      360    11837        /*
      361    11838        Find the device in the DCT tables to establish the DCT index
      362    11839        and pointer for the device.
      363    11840        */
      364    11841    1           CALL FIND_DCT ( DCT$, DCTX, NMD_PIT.DEV.NAME(I) )
      365    11842    1                                                   ALTRET ( ERROR ) ;
      366    11843    1           NMD_PIT.DEV.DCT$(I) = DCT$ ;
      367    11844    1           NMD_PIT.DEV.DCTX(I) = DCTX ;
      368    11845        /*
      369    11846        Move the required information from the DCT and DVT into NMD_PIT.
      370    11847        */
      371    11848    1           NMD_PIT.DEV.FLAGS.PRI(I)  = DCT.DP.MIRROR.PRI ;
      372    11849    1           NMD_PIT.DEV.MDCTX(I)      = DCT.DP.MIRROR.DCTX ;
      373    11850    1           NMD_PIT.DEV.STATE(I)      = DCT.DP.MIRROR.STATE ;
      374    11851    1           NMD_PIT.DEV.UTS(I)        = DCT.DP.MIRROR.UTS ;
      375    11852    1           NMD_PIT.DEV.DRZERO(I)     = DCT.DP.MIRROR.DRZERO ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:47   
      376    11853
      377    11854    1           CALL NMU$CONVERT$ ( DVT$,
      378    11855    1                               BITBIN(%SPCL2SID),
      379    11856    1                               DCT.DVT$,
      380    11857    1                               BITBIN(%DVTTBLSID) )
      381    11858    2           WHENALTRETURN DO ;
      382    11859        /*
      383    11860        ERROR:  NMO-E$NMD#BAD_POINTER-7
      384    11861        MESSAGE:  Unsuccessful conversion of monitor pointer to user pointer.
      385    11862        DESCRIPTION:  The pointer conversion failed because the SEGID of the
      386    11863                      monitor pointer did not contain the expected value.
      387    11864        */
      388    11865    2               CALL NME$ERRMSG ( NMO#BAD_POINTER ) ;
      389    11866    2               GOTO ERROR ;
      390    11867    2               END;
      391    11868
      392    11869    1           NMD_PIT.DEV.DVT$(I)         = DVT$ ;
      393    11870    1           NMD_PIT.DEV.CYL(I)          = DVT.T@DCYL ;
      394    11871    1           NMD_PIT.DEV.GRANSIZE(I)     = DVT.GRANSIZE ;
      395    11872    1           NMD_PIT.DEV.PACKSIZE(I)     = DVT.PACKSIZE ;
      396    11873    1           NMD_PIT.DEV.SECT(I)         = DVT.SPT ;
      397    11874    1           NMD_PIT.DEV.TRK(I)          = DVT.CYLSIZE / DVT.SPT ;
      398    11875        /*
      399    11876        Adjust the DCB to point at the device for error message display
      400    11877        and debug purposes.
      401    11878        */
      402    11879    1           SETDCB.V.DCB# = NMD_PIT.DEV.DCB#(I) ;
      403    11880    1           SETDCB.V.RES# = SUBSTR ( NMD_PIT.DEV.NAME.C(I), 0, 4 ) ;
      404    11881    1           CALL M$OPEN ( SETDCB )                  ALTRET ( ALTERR ) ;
      405    11882        /*
      406    11883        Return to the calling routine.
      407    11884        */
      408    11885    1           RETURN ;
      409    11886
      410    11887    1   ALTERR: CALL NME$ERRMSG ( B$TCB.ALT$->B$ALT.ERR, NMD_PIT.DEV.DCB#(I) ) ;
      411    11888
      412    11889    1   ERROR:  ALTRETURN ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:48   
      413    11890
      414    11891        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:49   
      415    11892        /*F*
      416    11893        NAME:           FIND_DCT
      417    11894
      418    11895        PURPOSE:        To find device DCT pointer and index.
      419    11896
      420    11897        */
      421    11898        /*D*
      422    11899        NAME:           FIND_DCT
      423    11900
      424    11901        CALL:           CALL FIND_DCT ( dct$, dctx, name ) ALTRET ( error ) ;
      425    11902
      426    11903        PARAMETERS:
      427    11904        */
      428    11905        /*K*
      429    11906        dct$            specifies a PTR variable in which the device
      430    11907                DCT pointer is returned.
      431    11908        */
      432    11909        /*K*
      433    11910        dctx            specifies a UBIN(36) variable in which the device
      434    11911                DCT index is returned.
      435    11912        */
      436    11913        /*K*
      437    11914        name            specifies a TEXTC value which is the name of the
      438    11915                device to be searched for in the DCT tables.
      439    11916        */
      440    11917        /*D*
      441    11918        DESCRIPTION:
      442    11919
      443    11920        The FIND_DCT procedure is used to find the DCT pointer and
      444    11921        index for a given device name.  If the name is found in the DCT
      445    11922        tables, the DCT pointer and index are returned.  If the name is
      446    11923        not found in the DCT tables, an error message is generated, the
      447    11924        DCT pointer and index are not returned, and the procedure makes
      448    11925        an ALTRETURN to the calling procedure.
      449    11926        */
      450    11927        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:50   
      451    11928    1   FIND_DCT:   PROC ( DCT$, DCTX, NAME ) ALTRET ;
      452    11929        /*
      453    11930                        Parameters
      454    11931        */
      455    11932    2   DCL 1 DCT$              PTR ALIGNED PARAM ;
      456    11933    2   DCL 1 DCTX              UBIN ALIGNED PARAM ;
      457    11934    2   DCL 1 NAME              CALIGNED PARAM,
      458    11935    2         2 L               UBIN BYTE CALIGNED,
      459    11936    2         2 C               CHAR(8) CALIGNED ;
      460    11937        /*
      461    11938                        Variables
      462    11939        */
      463    11940    2   DCL 1 I                 SBIN WORD ALIGNED AUTO ;
      464    11941    2   DCL 1 N$DCT$(0:0)       PTR ALIGNED BASED(NMD_PIT.N$DCT$$) ;
      465    11942
      466    11943                                %NI$DCT ( NAME =
      467    11944              NI$DCT            , STCLASS = "BASED(NI$DCT$)"
      468    11945                                                                        ) ;
      469    11993    2   DCL 1 NI$DCT$           PTR ALIGNED AUTO ;
      470    11994                                %VLP_ERRCODE ( FPTN =
      471    11995              NMO#BAD_DEVICE    , STCLASS = CONSTANT
      472    11996                                , ERR# = %E$NMD#BAD_DEVICE
      473    11997                                , FCG  = %NMD#FCG
      474    11998                                , MID  = 'O'
      475    11999                                , MON  = %NO#
      476    12000                                , SEV  = 5
      477    12001                                                                        ) ;
      478    12046        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:51   
      479    12047        /*
      480    12048        Find the specified device name in the DCT tables.  If device name
      481    12049        is found, return the DCT pointer and index.
      482    12050        */
      483    12051    2           DCT$ = ADDR(NIL) ;
      484    12052    2           DCTX = 0 ;
      485    12053    2           I = 1 ;
      486    12054    3           DO  WHILE  ( DCTX = 0 ) ;
      487    12055    3               CALL NMU$CONVERT$ ( NI$DCT$,
      488    12056    3                                   BITBIN(%SPCL1SID),
      489    12057    3                                   N$DCT$(I),
      490    12058    3                                   BITBIN(%TIGRSID) )
      491    12059    3                                                   ALTRET ( NOFIND ) ;
      492    12060    3               IF  NI$DCT.DEVNM = NAME.C
      493    12061    4               THEN DO ;
      494    12062    4                   DCT$ = NI$DCT$ ;
      495    12063    4                   DCTX = I ;
      496    12064    4                   RETURN ;
      497    12065    4                   END ;
      498    12066
      499    12067    3               I = I + 1 ;
      500    12068    3               END ;
      501    12069        /*
      502    12070        Device name not found in DCT tables.  Therefore, output error
      503    12071        message, and make an ALTRETURN to the calling
      504    12072        procedure.
      505    12073        */
      506    12074        /*E*
      507    12075        ERROR:  NMO-E$NMD#BAD_DEVICE-5
      508    12076        MESSAGE:  Device %U1 not found in DCT tables.
      509    12077        DESCRIPTION:  Self explanatory.
      510    12078        */
      511    12079    2   NOFIND: CALL NME$ERRMSG ( NMO#BAD_DEVICE, , VECTOR(NAME) ) ;
      512    12080    2           ALTRETURN ;
      513    12081    2           END FIND_DCT ;
      514    12082
      515    12083    1           END NMO$DEV ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:52   
      516    12084        %EOD ;

PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:53   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   NM_PERR_C.:E05TOU  is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NMO$DEV.

   Procedure NMO$DEV requires 291 words for executable code.
   Procedure NMO$DEV requires 22 words of local(AUTO) storage.

PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:54   

 Object Unit name= NMO$DEV                                    File name= NMO$OPTIONS.:E05TOU
 UTS= JUL 30 '97 03:51:24.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      5      5  NMO$DEV
    2   Data  even  none    58     72  NMO$DEV
    3   Proc  even  none   291    443  NMO$DEV
    4  RoData even  none    15     17  NMO$DEV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  NMO$DEV

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 NME$ERRMSG
 yes     yes           Std       4 NMU$CONVERT$
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:55   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                NMD_PIT
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:56   


      217        1        /*M* NMO$DEV - DEV process the specified device.                    */
      218        2        /*T***********************************************************/
      219        3        /*T*                                                         */
      220        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      221        5        /*T*                                                         */
      222        6        /*T***********************************************************/
      223        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
      224        8        /*F*
      225        9        NAME:           NMO$DEV
      226       10
      227       11        PURPOSE:        To process the specified device.
      228       12
      229       13        DESCRIPTION:
      230       14
      231       15        The NMO$DEV procedure is used to process the specified device.
      232       16        */
      233       17        /*D*
      234       18        NAME:           NMO$DEV
      235       19
      236       20        CALL:           CALL NMO$DEV ( i, out$ ) ALTRET ( error ) ;
      237       21
      238       22        PARAMETERS:
      239       23        */
      240       24        /*K*
      241       25        i               is the index into NMD_PIT.DEV.  i must be
      242       26                either 0 or 1.
      243       27        */
      244       28        /*K*
      245       29        out$            is a pointer to the NMC#DEV parse output
      246       30                block.
      247       31        */
      248       32        /*D*
      249       33        DESCRIPTION:
      250       34
      251       35        The NMO$DEV procedure is used to process the specified device.
      252       36
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:57   
      253       37        If the device specification is correct, if the device is found
      254       38        in the DCT tapes, if the device is a disk drive, additional
      255       39        information is moved from the DCT into NMD_PIT.DEV for the
      256       40        specified device.
      257       41
      258       42        If an error is detected, an error message is printed, and an
      259       43        altreturn is made to the calling routine.
      260       44        */
      261       45        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:58   
      262       46        NMO$DEV:        PROC ( I, OUT$ ) ALTRET ;

     46  3 000000   000000 700200 xent  NMO$DEV      TSX0  ! X66_AUTO_2
         3 000001   000026 000002                    ZERO    22,2

      263       47        /*
      264       48                        Includes
      265       49        */
      266       50        %INCLUDE                B_SEGIDS_C ;
      267      589        %INCLUDE                CP_6 ;
      268     6148        %INCLUDE                NI$TABLES ;
      269     6364        %INCLUDE                NM_MACRO_M ;
      270     7769        %INCLUDE                NM_PERR_C ;
      271     7846        %INCLUDE                XU_MACRO_C ;
      272    10952        /*
      273    10953                        Parameters
      274    10954        */
      275    10955    1   DCL 1 I                 UBIN ALIGNED PARAM ;
      276    10956    1   DCL 1 OUT$              PTR ALIGNED PARAM ;
      277    10957        /*
      278    10958                        Entries
      279    10959        */
      280    10960    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
      281    10961    1   DCL 1 NMU$CONVERT$      ENTRY(4) ALTRET ;
      282    10962        /*
      283    10963                        Variables
      284    10964        */
      285    10965                                %B$ALT ( NAME =
      286    10966              B$ALT             , STCLASS = BASED
      287    10967                                                                        ) ;
      288    10975                                %B$TCB ( NAME =
      289    10976              B$TCB             , STCLASS = "BASED(B$TCB$)"
      290    10977                                                                        ) ;
      291    10980    1   DCL 1 B$TCB$            PTR SYMREF ;
      292    10981                                %NI$DCT ( NAME =
      293    10982              DCT               , STCLASS = "BASED(DCT$)"
      294    10983                                                                        ) ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:59   
      295    11031    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
      296    11032    1   DCL 1 DCTX              UBIN WORD ALIGNED AUTO ;
      297    11033                                %NI$DVT ( NAME =
      298    11034              DVT               , STCLASS = "BASED(DVT$)"
      299    11035                                                                        ) ;
      300    11042    1   DCL 1 DVT$              PTR ALIGNED AUTO ;
      301    11043                                %NMD_PIT ( FPTN =
      302    11044              NMD_PIT           , STCLASS = SYMREF
      303    11045                                                                        ) ;
      304    11498                                %VLP_ERRCODE ( FPTN =
      305    11499              NMO#BAD_POINTER   , STCLASS = CONSTANT
      306    11500                                , ERR# = %E$NMD#BAD_POINTER
      307    11501                                , FCG  = %NMD#FCG
      308    11502                                , MID  = 'O'
      309    11503                                , MON  = %NO#
      310    11504                                , SEV  = 5
      311    11505                                                                        ) ;
      312    11550                                %VLP_ERRCODE ( FPTN =
      313    11551              NMO#INV_DEVICE    , STCLASS = CONSTANT
      314    11552                                , ERR# = %E$NMD#INV_DEVICE
      315    11553                                , FCG  = %NMD#FCG
      316    11554                                , MID  = 'O'
      317    11555                                , MON  = %NO#
      318    11556                                , SEV  = 5
      319    11557                                                                        ) ;
      320    11602                                %VLP_NAMEV ( FPTN =
      321    11603              NN                , STCLASS = BASED
      322    11604                                                                        ) ;
      323    11611                                %PARSE$OUT ( NAME =
      324    11612              OUT               , STCLASS = "BASED(OUT$)"
      325    11613                                                                        ) ;
      326    11658                                %FPT_OPEN ( FPTN =
      327    11659              SETDCB            , STCLASS = STATIC
      328    11660                                , ASN = DEVICE
      329    11661                                , FUN = IN
      330    11662                                , REASSIGN = NO
      331    11663                                , SCRUB = YES
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:60   
      332    11664                                , SETDCB = YES
      333    11665                                                                        ) ;
      334    11774                                %PARSE$SYM ( NAME =
      335    11775              SYM               , STCLASS = "BASED(SYM$)"
      336    11776                                                                        ) ;
      337    11814    1   DCL 1 SYM$              PTR ALIGNED AUTO ;
      338    11815        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:61   
      339    11816        /*
      340    11817        Determine name for the device.
      341    11818        */
      342    11819    1           SYM$ = OUT.SUBLK$(0) ;

  11819  3 000002   200004 470500                    LDP0    @OUT$,,AUTO
         3 000003   000000 471500                    LDP1    0,,PR0
         3 000004   100003 236100                    LDQ     3,,PR1
         3 000005   200010 756100                    STQ     SYM$,,AUTO

      343    11820    1           CALL CONCAT ( NMD_PIT.DEV.NAME.C(I), 'DP',

  11820  3 000006   200003 473500                    LDP3    @I,,AUTO
         3 000007   300000 236100                    LDQ     0,,PR3
         3 000010   000015 402007                    MPY     13,DL
         3 000011   200010 474500                    LDP4    SYM$,,AUTO
         3 000012   400003 475500                    LDP5    3,,PR4
         3 000013   000100 101500                    MRL     fill='000'O
         3 000014   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         3 000015   200020 000002                    ADSC9   NI$DCT$+1,,AUTO          cn=0,n=2
         3 000016   200020 220100                    LDX0    NI$DCT$+1,,AUTO
         3 000017   000000 621006                    EAX1    0,QL
         3 000020   000001 736000                    QLS     1
         3 000021   000000 622006                    EAX2    0,QL
         3 000022   000003 236000 1                  LDQ     NMO#BAD_DEVICE+1
         3 000023   000011 772000                    QRL     9
         3 000024   000020 676012 xsym               ERQ     NMD_PIT+16,X2
         3 000025   000000 376000 4                  ANQ     0
         3 000026   000020 656012 xsym               ERSQ    NMD_PIT+16,X2
         3 000027   000000 635011                    EAA     0,X1
         3 000030   000021 771000                    ARL     17
         3 000031   000002 735000                    ALS     2
         3 000032   040005 100540                    MLR     fill='040'O
         3 000033   500000 200010                    ADSC9   0,,PR5                   cn=1,n=*X0
         3 000034   000020 600006 xsym               ADSC9   NMD_PIT+16,A             cn=3,n=6
         3 000035   000000 636010                    EAQ     0,X0
         3 000036   000022 772000                    QRL     18
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:62   
         3 000037   000006 116007                    CMPQ    6,DL
         3 000040   000054 603000 3                  TRC     s:11823
         3 000041   000000 635010                    EAA     0,X0
         3 000042   000022 771000                    ARL     18
         3 000043   200021 755100                    STA     NI$DCT$+2,,AUTO
         3 000044   000000 636011                    EAQ     0,X1
         3 000045   000017 772000                    QRL     15
         3 000046   200021 036100                    ADLQ    NI$DCT$+2,,AUTO
         3 000047   777771 620010                    EAX0    -7,X0
         3 000050   777777 660003                    ERX0    -1,DU
         3 000051   040046 100400                    MLR     fill='040'O
         3 000052   000004 000004 1                  ADSC9   NMO#BAD_DEVICE+2         cn=0,n=4
         3 000053   000020 600010 xsym               ADSC9   NMD_PIT+16,Q             cn=3,n=*X0

      344    11821    1                                                SYM.TEXTC$->NN.NAME#,
      345    11822    1                                                '0000' ) ;
      346    11823    1           NMD_PIT.DEV.NAME.L(I) = 2 + SYM.COUNT ;

  11823  3 000054   300000 236100                    LDQ     0,,PR3
         3 000055   000015 402007                    MPY     13,DL
         3 000056   000001 736000                    QLS     1
         3 000057   000000 620006                    EAX0    0,QL
         3 000060   400004 236100                    LDQ     4,,PR4
         3 000061   000033 772000                    QRL     27
         3 000062   000002 036007                    ADLQ    2,DL
         3 000063   000033 736000                    QLS     27
         3 000064   000020 676010 xsym               ERQ     NMD_PIT+16,X0
         3 000065   777000 376003                    ANQ     -512,DU
         3 000066   000020 656010 xsym               ERSQ    NMD_PIT+16,X0

      347    11824
      348    11825    1           IF  NMD_PIT.DEV.NAME.L(I) ~= 4

  11825  3 000067   300000 236100                    LDQ     0,,PR3
         3 000070   000015 402007                    MPY     13,DL
         3 000071   000001 736000                    QLS     1
         3 000072   000020 236006 xsym               LDQ     NMD_PIT+16,QL
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:63   
         3 000073   777000 376003                    ANQ     -512,DU
         3 000074   004000 116003                    CMPQ    2048,DU
         3 000075   000116 600000 3                  TZE     s:11841

      349    11826    2           THEN DO ;

      350    11827        /*E*
      351    11828        ERROR:  NMO-E$NMD#INV_DEVICE-5
      352    11829        MESSAGE:  %U1 is an invalid device name.
      353    11830        DESCRIPTION:  The device name must be of the form "DPnn"
      354    11831                      where "nn" is two digits from 00 thru 99.
      355    11832        */
      356    11833    2               CALL NME$ERRMSG ( NMO#INV_DEVICE, ,

  11833  3 000076   300000 236100                    LDQ     0,,PR3
         3 000077   000015 402007                    MPY     13,DL
         3 000100   000001 235000 4                  LDA     1
         3 000101   000023 736000                    QLS     19
         3 000102   000002 036000 4                  ADLQ    2
         3 000103   200020 757100                    STAQ    NI$DCT$+1,,AUTO
         3 000104   200020 631500                    EPPR1   NI$DCT$+1,,AUTO
         3 000105   200024 451500                    STP1    NI$DCT$+5,,AUTO
         3 000106   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000107   000003 235000 4                  LDA     3
         3 000110   200022 757100                    STAQ    NI$DCT$+3,,AUTO
         3 000111   200022 630500                    EPPR0   NI$DCT$+3,,AUTO
         3 000112   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000113   000000 701000 xent               TSX1    NME$ERRMSG
         3 000114   000000 011000                    NOP     0

      357    11834    2                                 VECTOR ( NMD_PIT.DEV.NAME(I) ) ) ;
      358    11835    2               GOTO ERROR ;

  11835  3 000115   000352 710000 3                  TRA     ERROR

      359    11836    2               END ;
      360    11837        /*
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:64   
      361    11838        Find the device in the DCT tables to establish the DCT index
      362    11839        and pointer for the device.
      363    11840        */
      364    11841    1           CALL FIND_DCT ( DCT$, DCTX, NMD_PIT.DEV.NAME(I) )

  11841  3 000116   300000 236100                    LDQ     0,,PR3
         3 000117   000015 402007                    MPY     13,DL
         3 000120   000023 736000                    QLS     19
         3 000121   000002 036000 4                  ADLQ    2
         3 000122   200015 756100                    STQ     @DCTX+1,,AUTO
         3 000123   200006 631500                    EPPR1   DCTX,,AUTO
         3 000124   200014 451500                    STP1    @DCT$+1,,AUTO
         3 000125   200005 635500                    EPPR5   DCT$,,AUTO
         3 000126   200013 455500                    STP5    SYM$+3,,AUTO
         3 000127   000353 701000 3                  TSX1    FIND_DCT
         3 000130   000352 702000 3                  TSX2    ERROR

      365    11842    1                                                   ALTRET ( ERROR ) ;
      366    11843    1           NMD_PIT.DEV.DCT$(I) = DCT$ ;

  11843  3 000131   200003 470500                    LDP0    @I,,AUTO
         3 000132   000000 236100                    LDQ     0,,PR0
         3 000133   000015 402007                    MPY     13,DL
         3 000134   000001 736000                    QLS     1
         3 000135   000000 620006                    EAX0    0,QL
         3 000136   200005 236100                    LDQ     DCT$,,AUTO
         3 000137   000010 756010 xsym               STQ     NMD_PIT+8,X0

      367    11844    1           NMD_PIT.DEV.DCTX(I) = DCTX ;

  11844  3 000140   000000 236100                    LDQ     0,,PR0
         3 000141   000015 402007                    MPY     13,DL
         3 000142   000001 736000                    QLS     1
         3 000143   200006 235100                    LDA     DCTX,,AUTO
         3 000144   000011 755006 xsym               STA     NMD_PIT+9,QL

      368    11845        /*
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:65   
      369    11846        Move the required information from the DCT and DVT into NMD_PIT.
      370    11847        */
      371    11848    1           NMD_PIT.DEV.FLAGS.PRI(I)  = DCT.DP.MIRROR.PRI ;

  11848  3 000145   000000 236100                    LDQ     0,,PR0
         3 000146   000015 402007                    MPY     13,DL
         3 000147   000001 736000                    QLS     1
         3 000150   200005 471500                    LDP1    DCT$,,AUTO
         3 000151   000000 620006                    EAX0    0,QL
         3 000152   100036 236100                    LDQ     30,,PR1
         3 000153   000003 736000                    QLS     3
         3 000154   000014 676010 xsym               ERQ     NMD_PIT+12,X0
         3 000155   200000 376003                    ANQ     65536,DU
         3 000156   000014 656010 xsym               ERSQ    NMD_PIT+12,X0

      372    11849    1           NMD_PIT.DEV.MDCTX(I)      = DCT.DP.MIRROR.DCTX ;

  11849  3 000157   000000 236100                    LDQ     0,,PR0
         3 000160   000015 402007                    MPY     13,DL
         3 000161   000001 736000                    QLS     1
         3 000162   000000 620006                    EAX0    0,QL
         3 000163   100037 236100                    LDQ     31,,PR1
         3 000164   000022 772000                    QRL     18
         3 000165   000017 756010 xsym               STQ     NMD_PIT+15,X0

      373    11850    1           NMD_PIT.DEV.STATE(I)      = DCT.DP.MIRROR.STATE ;

  11850  3 000166   000000 236100                    LDQ     0,,PR0
         3 000167   000015 402007                    MPY     13,DL
         3 000170   000001 736000                    QLS     1
         3 000171   000000 620006                    EAX0    0,QL
         3 000172   100036 236100                    LDQ     30,,PR1
         3 000173   000030 772000                    QRL     24
         3 000174   000077 376007                    ANQ     63,DL
         3 000175   000025 756010 xsym               STQ     NMD_PIT+21,X0

      374    11851    1           NMD_PIT.DEV.UTS(I)        = DCT.DP.MIRROR.UTS ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:66   

  11851  3 000176   000000 236100                    LDQ     0,,PR0
         3 000177   000015 402007                    MPY     13,DL
         3 000200   000001 736000                    QLS     1
         3 000201   100040 235100                    LDA     32,,PR1
         3 000202   000027 755006 xsym               STA     NMD_PIT+23,QL

      375    11852    1           NMD_PIT.DEV.DRZERO(I)     = DCT.DP.MIRROR.DRZERO ;

  11852  3 000203   000000 236100                    LDQ     0,,PR0
         3 000204   000015 402007                    MPY     13,DL
         3 000205   000001 736000                    QLS     1
         3 000206   100041 235100                    LDA     33,,PR1
         3 000207   000012 755006 xsym               STA     NMD_PIT+10,QL

      376    11853
      377    11854    1           CALL NMU$CONVERT$ ( DVT$,

  11854  3 000210   000006 236000 4                  LDQ     6
         3 000211   200023 756100                    STQ     NI$DCT$+4,,AUTO
         3 000212   200005 236100                    LDQ     DCT$,,AUTO
         3 000213   000024 036003                    ADLQ    20,DU
         3 000214   200022 756100                    STQ     NI$DCT$+3,,AUTO
         3 000215   000007 236000 4                  LDQ     7
         3 000216   200021 756100                    STQ     NI$DCT$+2,,AUTO
         3 000217   200007 633500                    EPPR3   DVT$,,AUTO
         3 000220   200020 453500                    STP3    NI$DCT$+1,,AUTO
         3 000221   200020 630500                    EPPR0   NI$DCT$+1,,AUTO
         3 000222   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000223   000000 701000 xent               TSX1    NMU$CONVERT$
         3 000224   000226 702000 3                  TSX2    s:11865
         3 000225   000233 710000 3                  TRA     s:11869

      378    11855    1                               BITBIN(%SPCL2SID),
      379    11856    1                               DCT.DVT$,
      380    11857    1                               BITBIN(%DVTTBLSID) )
      381    11858    2           WHENALTRETURN DO ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:67   

      382    11859        /*
      383    11860        ERROR:  NMO-E$NMD#BAD_POINTER-7
      384    11861        MESSAGE:  Unsuccessful conversion of monitor pointer to user pointer.
      385    11862        DESCRIPTION:  The pointer conversion failed because the SEGID of the
      386    11863                      monitor pointer did not contain the expected value.
      387    11864        */
      388    11865    2               CALL NME$ERRMSG ( NMO#BAD_POINTER ) ;

  11865  3 000226   000010 630400 4                  EPPR0   8
         3 000227   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000230   000000 701000 xent               TSX1    NME$ERRMSG
         3 000231   000000 011000                    NOP     0

      389    11866    2               GOTO ERROR ;

  11866  3 000232   000352 710000 3                  TRA     ERROR

      390    11867    2               END;
      391    11868
      392    11869    1           NMD_PIT.DEV.DVT$(I)         = DVT$ ;

  11869  3 000233   200003 470500                    LDP0    @I,,AUTO
         3 000234   000000 236100                    LDQ     0,,PR0
         3 000235   000015 402007                    MPY     13,DL
         3 000236   000001 736000                    QLS     1
         3 000237   000000 620006                    EAX0    0,QL
         3 000240   200007 236100                    LDQ     DVT$,,AUTO
         3 000241   000013 756010 xsym               STQ     NMD_PIT+11,X0

      393    11870    1           NMD_PIT.DEV.CYL(I)          = DVT.T@DCYL ;

  11870  3 000242   000000 236100                    LDQ     0,,PR0
         3 000243   000015 402007                    MPY     13,DL
         3 000244   000001 736000                    QLS     1
         3 000245   200007 471500                    LDP1    DVT$,,AUTO
         3 000246   000000 620006                    EAX0    0,QL
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:68   
         3 000247   100055 236100                    LDQ     45,,PR1
         3 000250   777777 376007                    ANQ     -1,DL
         3 000251   000005 756010 xsym               STQ     NMD_PIT+5,X0

      394    11871    1           NMD_PIT.DEV.GRANSIZE(I)     = DVT.GRANSIZE ;

  11871  3 000252   000000 236100                    LDQ     0,,PR0
         3 000253   000015 402007                    MPY     13,DL
         3 000254   000001 736000                    QLS     1
         3 000255   000000 620006                    EAX0    0,QL
         3 000256   100053 236100                    LDQ     43,,PR1
         3 000257   000777 376007                    ANQ     511,DL
         3 000260   000016 756010 xsym               STQ     NMD_PIT+14,X0

      395    11872    1           NMD_PIT.DEV.PACKSIZE(I)     = DVT.PACKSIZE ;

  11872  3 000261   000000 236100                    LDQ     0,,PR0
         3 000262   000015 402007                    MPY     13,DL
         3 000263   000001 736000                    QLS     1
         3 000264   100054 235100                    LDA     44,,PR1
         3 000265   000023 755006 xsym               STA     NMD_PIT+19,QL

      396    11873    1           NMD_PIT.DEV.SECT(I)         = DVT.SPT ;

  11873  3 000266   000000 236100                    LDQ     0,,PR0
         3 000267   000015 402007                    MPY     13,DL
         3 000270   000001 736000                    QLS     1
         3 000271   000000 620006                    EAX0    0,QL
         3 000272   100053 236100                    LDQ     43,,PR1
         3 000273   000011 772000                    QRL     9
         3 000274   000777 376007                    ANQ     511,DL
         3 000275   000024 756010 xsym               STQ     NMD_PIT+20,X0

      397    11874    1           NMD_PIT.DEV.TRK(I)          = DVT.CYLSIZE / DVT.SPT ;

  11874  3 000276   000000 236100                    LDQ     0,,PR0
         3 000277   000015 402007                    MPY     13,DL
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:69   
         3 000300   000001 736000                    QLS     1
         3 000301   000000 620006                    EAX0    0,QL
         3 000302   100053 236100                    LDQ     43,,PR1
         3 000303   000011 772000                    QRL     9
         3 000304   000777 376007                    ANQ     511,DL
         3 000305   200020 756100                    STQ     NI$DCT$+1,,AUTO
         3 000306   100055 236100                    LDQ     45,,PR1
         3 000307   000022 772000                    QRL     18
         3 000310   200020 506100                    DIV     NI$DCT$+1,,AUTO
         3 000311   000026 756010 xsym               STQ     NMD_PIT+22,X0

      398    11875        /*
      399    11876        Adjust the DCB to point at the device for error message display
      400    11877        and debug purposes.
      401    11878        */
      402    11879    1           SETDCB.V.DCB# = NMD_PIT.DEV.DCB#(I) ;

  11879  3 000312   000000 236100                    LDQ     0,,PR0
         3 000313   000015 402007                    MPY     13,DL
         3 000314   000001 736000                    QLS     1
         3 000315   000006 720006 xsym               LXL0    NMD_PIT+6,QL
         3 000316   000044 740000 2                  STX0    SETDCB+36

      403    11880    1           SETDCB.V.RES# = SUBSTR ( NMD_PIT.DEV.NAME.C(I), 0, 4 ) ;

  11880  3 000317   000000 236100                    LDQ     0,,PR0
         3 000320   000015 402007                    MPY     13,DL
         3 000321   000001 736000                    QLS     1
         3 000322   000020 235006 xsym               LDA     NMD_PIT+16,QL
         3 000323   000021 236006 xsym               LDQ     NMD_PIT+17,QL
         3 000324   000033 773000                    LRL     27
         3 000325   000027 376000 xsym               ANQ     B_VECTNIL+23
         3 000326   000050 756000 2                  STQ     SETDCB+40

      404    11881    1           CALL M$OPEN ( SETDCB )                  ALTRET ( ALTERR ) ;

  11881  3 000327   000000 630400 2                  EPPR0   SETDCB
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:70   
         3 000330   450000 713400                    CLIMB   alt,open
         3 000331   410400 401760                    pmme    nvectors=18
         3 000332   000334 702000 3                  TSX2    ALTERR

      405    11882        /*
      406    11883        Return to the calling routine.
      407    11884        */
      408    11885    1           RETURN ;

  11885  3 000333   000000 702200 xent               TSX2  ! X66_ARET

      409    11886
      410    11887    1   ALTERR: CALL NME$ERRMSG ( B$TCB.ALT$->B$ALT.ERR, NMD_PIT.DEV.DCB#(I) ) ;

  11887  3 000334   000000 470400 xsym  ALTERR       LDP0    B$TCB$
         3 000335   000000 471500                    LDP1    0,,PR0
         3 000336   200003 473500                    LDP3    @I,,AUTO
         3 000337   300000 236100                    LDQ     0,,PR3
         3 000340   000015 402007                    MPY     13,DL
         3 000341   000023 736000                    QLS     19
         3 000342   000011 036000 4                  ADLQ    9
         3 000343   200021 756100                    STQ     NI$DCT$+2,,AUTO
         3 000344   100102 634500                    EPPR4   66,,PR1
         3 000345   200020 454500                    STP4    NI$DCT$+1,,AUTO
         3 000346   200020 630500                    EPPR0   NI$DCT$+1,,AUTO
         3 000347   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000350   000000 701000 xent               TSX1    NME$ERRMSG
         3 000351   000000 011000                    NOP     0

      411    11888
      412    11889    1   ERROR:  ALTRETURN ;

  11889  3 000352   000000 702200 xent  ERROR        TSX2  ! X66_AALT

      413    11890
      414    11891        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:71   
      415    11892        /*F*
      416    11893        NAME:           FIND_DCT
      417    11894
      418    11895        PURPOSE:        To find device DCT pointer and index.
      419    11896
      420    11897        */
      421    11898        /*D*
      422    11899        NAME:           FIND_DCT
      423    11900
      424    11901        CALL:           CALL FIND_DCT ( dct$, dctx, name ) ALTRET ( error ) ;
      425    11902
      426    11903        PARAMETERS:
      427    11904        */
      428    11905        /*K*
      429    11906        dct$            specifies a PTR variable in which the device
      430    11907                DCT pointer is returned.
      431    11908        */
      432    11909        /*K*
      433    11910        dctx            specifies a UBIN(36) variable in which the device
      434    11911                DCT index is returned.
      435    11912        */
      436    11913        /*K*
      437    11914        name            specifies a TEXTC value which is the name of the
      438    11915                device to be searched for in the DCT tables.
      439    11916        */
      440    11917        /*D*
      441    11918        DESCRIPTION:
      442    11919
      443    11920        The FIND_DCT procedure is used to find the DCT pointer and
      444    11921        index for a given device name.  If the name is found in the DCT
      445    11922        tables, the DCT pointer and index are returned.  If the name is
      446    11923        not found in the DCT tables, an error message is generated, the
      447    11924        DCT pointer and index are not returned, and the procedure makes
      448    11925        an ALTRETURN to the calling procedure.
      449    11926        */
      450    11927        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:72   
      451    11928    1   FIND_DCT:   PROC ( DCT$, DCTX, NAME ) ALTRET ;

  11928  3 000353   200012 741300       FIND_DCT     STX1  ! SYM$+2,,AUTO

      452    11929        /*
      453    11930                        Parameters
      454    11931        */
      455    11932    2   DCL 1 DCT$              PTR ALIGNED PARAM ;
      456    11933    2   DCL 1 DCTX              UBIN ALIGNED PARAM ;
      457    11934    2   DCL 1 NAME              CALIGNED PARAM,
      458    11935    2         2 L               UBIN BYTE CALIGNED,
      459    11936    2         2 C               CHAR(8) CALIGNED ;
      460    11937        /*
      461    11938                        Variables
      462    11939        */
      463    11940    2   DCL 1 I                 SBIN WORD ALIGNED AUTO ;
      464    11941    2   DCL 1 N$DCT$(0:0)       PTR ALIGNED BASED(NMD_PIT.N$DCT$$) ;
      465    11942
      466    11943                                %NI$DCT ( NAME =
      467    11944              NI$DCT            , STCLASS = "BASED(NI$DCT$)"
      468    11945                                                                        ) ;
      469    11993    2   DCL 1 NI$DCT$           PTR ALIGNED AUTO ;
      470    11994                                %VLP_ERRCODE ( FPTN =
      471    11995              NMO#BAD_DEVICE    , STCLASS = CONSTANT
      472    11996                                , ERR# = %E$NMD#BAD_DEVICE
      473    11997                                , FCG  = %NMD#FCG
      474    11998                                , MID  = 'O'
      475    11999                                , MON  = %NO#
      476    12000                                , SEV  = 5
      477    12001                                                                        ) ;
      478    12046        %EJECT ;
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:73   
      479    12047        /*
      480    12048        Find the specified device name in the DCT tables.  If device name
      481    12049        is found, return the DCT pointer and index.
      482    12050        */
      483    12051    2           DCT$ = ADDR(NIL) ;

  12051  3 000354   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000355   200013 470500                    LDP0    @DCT$,,AUTO
         3 000356   000000 756100                    STQ     0,,PR0

      484    12052    2           DCTX = 0 ;

  12052  3 000357   200014 471500                    LDP1    @DCTX,,AUTO
         3 000360   100000 450100                    STZ     0,,PR1

      485    12053    2           I = 1 ;

  12053  3 000361   000001 235007                    LDA     1,DL
         3 000362   200016 755100                    STA     I,,AUTO

      486    12054    3           DO  WHILE  ( DCTX = 0 ) ;

  12054  3 000363   100000 235100                    LDA     0,,PR1
         3 000364   000425 601000 3                  TNZ     NOFIND

      487    12055    3               CALL NMU$CONVERT$ ( NI$DCT$,

  12055  3 000365   000014 236000 4                  LDQ     12
         3 000366   200023 756100                    STQ     NI$DCT$+4,,AUTO
         3 000367   200016 236100                    LDQ     I,,AUTO
         3 000370   000022 736000                    QLS     18
         3 000371   000304 036000 xsym               ADLQ    NMD_PIT+196
         3 000372   200022 756100                    STQ     NI$DCT$+3,,AUTO
         3 000373   000015 236000 4                  LDQ     13
         3 000374   200021 756100                    STQ     NI$DCT$+2,,AUTO
         3 000375   200017 630500                    EPPR0   NI$DCT$,,AUTO
         3 000376   200020 450500                    STP0    NI$DCT$+1,,AUTO
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:74   
         3 000377   200020 630500                    EPPR0   NI$DCT$+1,,AUTO
         3 000400   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000401   000000 701000 xent               TSX1    NMU$CONVERT$
         3 000402   000425 702000 3                  TSX2    NOFIND

      488    12056    3                                   BITBIN(%SPCL1SID),
      489    12057    3                                   N$DCT$(I),
      490    12058    3                                   BITBIN(%TIGRSID) )
      491    12059    3                                                   ALTRET ( NOFIND ) ;
      492    12060    3               IF  NI$DCT.DEVNM = NAME.C

  12060  3 000403   200017 470500                    LDP0    NI$DCT$,,AUTO
         3 000404   200015 471500                    LDP1    @NAME,,AUTO
         3 000405   040100 106500                    CMPC    fill='040'O
         3 000406   000002 000010                    ADSC9   2,,PR0                   cn=0,n=8
         3 000407   100000 200010                    ADSC9   0,,PR1                   cn=1,n=8
         3 000410   000421 601000 3                  TNZ     s:12067

      493    12061    4               THEN DO ;

      494    12062    4                   DCT$ = NI$DCT$ ;

  12062  3 000411   200017 236100                    LDQ     NI$DCT$,,AUTO
         3 000412   200013 473500                    LDP3    @DCT$,,AUTO
         3 000413   300000 756100                    STQ     0,,PR3

      495    12063    4                   DCTX = I ;

  12063  3 000414   200016 235100                    LDA     I,,AUTO
         3 000415   200014 470500                    LDP0    @DCTX,,AUTO
         3 000416   000000 755100                    STA     0,,PR0

      496    12064    4                   RETURN ;

  12064  3 000417   200012 221300                    LDX1  ! SYM$+2,,AUTO
         3 000420   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:75   
      497    12065    4                   END ;
      498    12066
      499    12067    3               I = I + 1 ;

  12067  3 000421   200016 054100                    AOS     I,,AUTO

      500    12068    3               END ;

  12068  3 000422   200014 473500                    LDP3    @DCTX,,AUTO
         3 000423   300000 235100                    LDA     0,,PR3
         3 000424   000365 600000 3                  TZE     s:12055

      501    12069        /*
      502    12070        Device name not found in DCT tables.  Therefore, output error
      503    12071        message, and make an ALTRETURN to the calling
      504    12072        procedure.
      505    12073        */
      506    12074        /*E*
      507    12075        ERROR:  NMO-E$NMD#BAD_DEVICE-5
      508    12076        MESSAGE:  Device %U1 not found in DCT tables.
      509    12077        DESCRIPTION:  Self explanatory.
      510    12078        */
      511    12079    2   NOFIND: CALL NME$ERRMSG ( NMO#BAD_DEVICE, , VECTOR(NAME) ) ;

  12079  3 000425   000001 235000 4     NOFIND       LDA     1
         3 000426   200015 236100                    LDQ     @NAME,,AUTO
         3 000427   200020 757100                    STAQ    NI$DCT$+1,,AUTO
         3 000430   200020 630500                    EPPR0   NI$DCT$+1,,AUTO
         3 000431   200024 450500                    STP0    NI$DCT$+5,,AUTO
         3 000432   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000433   000016 235000 4                  LDA     14
         3 000434   200022 757100                    STAQ    NI$DCT$+3,,AUTO
         3 000435   200022 630500                    EPPR0   NI$DCT$+3,,AUTO
         3 000436   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000437   000000 701000 xent               TSX1    NME$ERRMSG
         3 000440   000000 011000                    NOP     0

PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:76   
      512    12080    2           ALTRETURN ;

  12080  3 000441   200012 221300                    LDX1  ! SYM$+2,,AUTO
         3 000442   000000 702211                    TSX2  ! 0,X1
      513    12081    2           END FIND_DCT ;
      514    12082
      515    12083    1           END NMO$DEV ;
      516    12084        %EOD ;

PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:77   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   NM_PERR_C.:E05TOU  is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NMO$DEV.
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:78   

 **** Variables and constants ****

  ****  Section 001 RoData NMO$DEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w STRC        r     1 NMO#BAD_DEVICE             0-0-0/w STRC        r     1 NMO#BAD_POINTER
     1-0-0/w STRC        r     1 NMO#INV_DEVICE

  ****  Section 002  Data  NMO$DEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 SETDCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w PTR         r     1 @DCT$                     14-0-0/w PTR         r     1 @DCTX
     3-0-0/w PTR         r     1 @I                        15-0-0/w PTR         r     1 @NAME
     4-0-0/w PTR         r     1 @OUT$                      5-0-0/w PTR         r     1 DCT$
    *0-0-0/w PTR         r     1 DCT$                       6-0-0/w UBIN        r     1 DCTX
    *0-0-0/w UBIN        r     1 DCTX                       7-0-0/w PTR         r     1 DVT$
    *0-0-0/w UBIN        r     1 I                         16-0-0/w SBIN        r     1 I
    *0-0-0/c STRC(81)    r     1 NAME                      17-0-0/w PTR         r     1 NI$DCT$
    *0-0-0/w PTR         r     1 OUT$                      10-0-0/w PTR         r     1 SYM$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/d STRC(8892)  r     1 NMD_PIT
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:79   

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/w STRC(2844)  r     1 DVT
     0-0-0/w PTR         r     1 N$DCT$(0:0)                0-0-0/w STRC(1332)  r     1 NI$DCT
     0-0-0/c ASTR(9)     r     1 NN                         0-0-0/w STRC(144)   r     1 OUT
     0-0-0/w ASTR(153)   r     1 SYM


   Procedure NMO$DEV requires 291 words for executable code.
   Procedure NMO$DEV requires 22 words of local(AUTO) storage.
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:81   
          MINI XREF LISTING

ALTERR
     11887**LABEL   11881--CALLALT
B$ALT.CODE
     10969**DCL     10969--REDEF   10970--REDEF   10970--REDEF
B$ALT.ERR
     10970**DCL     11887<>CALL
B$ALT.ERR.ERR#
     10971**DCL     10971--REDEF
B$ALT.EVID
     10970**DCL     10970--REDEF   10970--REDEF
B$TCB.ALT$
     10978**DCL     11887>>CALL
B$TCB$
     10980**DCL     10978--IMP-PTR 11887>>CALL
DCT.DP
     11012**DCL     11019--REDEF   11022--REDEF   11023--REDEF   11025--REDEF   11025--REDEF   11026--REDEF
     11027--REDEF   11027--REDEF
DCT.DP.MIRROR.DCTX
     11017**DCL     11849>>ASSIGN
DCT.DP.MIRROR.DRZERO
     11018**DCL     11852>>ASSIGN
DCT.DP.MIRROR.PRI
     11016**DCL     11848>>ASSIGN
DCT.DP.MIRROR.STATE
     11016**DCL     11850>>ASSIGN
DCT.DP.MIRROR.UTS
     11018**DCL     11851>>ASSIGN
DCT.DVT$
     11008**DCL     11854<>CALL
DCT.MPC.IOCHANX
     11020**DCL     11020--REDEF
DCT$
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:82   
     11031**DCL     10992--IMP-PTR 11841<>CALL    11843>>ASSIGN  11848>>ASSIGN  11849>>ASSIGN  11850>>ASSIGN
     11851>>ASSIGN  11852>>ASSIGN  11854>>CALL
DCT$ IN PROCEDURE FIND_DCT
     11932**DCL     11928--PROC    12051<<ASSIGN  12062<<ASSIGN
DCTX
     11032**DCL     11841<>CALL    11844>>ASSIGN
DCTX IN PROCEDURE FIND_DCT
     11933**DCL     11928--PROC    12052<<ASSIGN  12054>>DOWHILE 12063<<ASSIGN
DVT.CYLSIZE
     11037**DCL     11874>>ASSIGN
DVT.GRANSIZE
     11037**DCL     11871>>ASSIGN
DVT.MPC
     11038**DCL     11039--REDEF
DVT.PACKSIZE
     11037**DCL     11872>>ASSIGN
DVT.SPT
     11037**DCL     11873>>ASSIGN  11874>>ASSIGN
DVT.T@DCYL
     11038**DCL     11870>>ASSIGN
DVT$
     11042**DCL     11036--IMP-PTR 11854<>CALL    11869>>ASSIGN  11870>>ASSIGN  11871>>ASSIGN  11872>>ASSIGN
     11873>>ASSIGN  11874>>ASSIGN  11874>>ASSIGN
ERROR
     11889**LABEL   11835--GOTO    11841--CALLALT 11866--GOTO
FIND_DCT
     11928**PROC    11841--CALL
I
     10955**DCL        46--PROC    11820>>CALLBLT 11823>>ASSIGN  11825>>IF      11833>>CALL    11841>>CALL
     11843>>ASSIGN  11844>>ASSIGN  11848>>ASSIGN  11849>>ASSIGN  11850>>ASSIGN  11851>>ASSIGN  11852>>ASSIGN
     11869>>ASSIGN  11870>>ASSIGN  11871>>ASSIGN  11872>>ASSIGN  11873>>ASSIGN  11874>>ASSIGN  11879>>ASSIGN
     11880>>ASSIGN  11887>>CALL
I IN PROCEDURE FIND_DCT
     11940**DCL     12053<<ASSIGN  12055>>CALL    12063>>ASSIGN  12067<<ASSIGN  12067>>ASSIGN
M$OPEN
      6076**DCL-ENT 11881--CALL
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:83   
N$DCT$ IN PROCEDURE FIND_DCT
     11941**DCL     12055<>CALL
NAME IN PROCEDURE FIND_DCT
     11934**DCL     11928--PROC    12079--CALL
NAME.C IN PROCEDURE FIND_DCT
     11936**DCL     12060>>IF
NI$DCT.DEVNM IN PROCEDURE FIND_DCT
     11954**DCL     12060>>IF
NI$DCT.DP IN PROCEDURE FIND_DCT
     11974**DCL     11981--REDEF   11984--REDEF   11985--REDEF   11987--REDEF   11987--REDEF   11988--REDEF
     11989--REDEF   11989--REDEF
NI$DCT.MPC.IOCHANX IN PROCEDURE FIND_DCT
     11982**DCL     11982--REDEF
NI$DCT$ IN PROCEDURE FIND_DCT
     11993**DCL     11954--IMP-PTR 12055<>CALL    12060>>IF      12062>>ASSIGN
NMD_PIT.DEV.CYL
     11088**DCL     11870<<ASSIGN
NMD_PIT.DEV.DCB#
     11094**DCL     11879>>ASSIGN  11887<>CALL
NMD_PIT.DEV.DCT$
     11106**DCL     11843<<ASSIGN
NMD_PIT.DEV.DCTX
     11111**DCL     11844<<ASSIGN
NMD_PIT.DEV.DRZERO
     11116**DCL     11852<<ASSIGN
NMD_PIT.DEV.DVT$
     11121**DCL     11869<<ASSIGN
NMD_PIT.DEV.FLAGS.PRI
     11136**DCL     11848<<ASSIGN
NMD_PIT.DEV.GRANSIZE
     11151**DCL     11871<<ASSIGN
NMD_PIT.DEV.MDCTX
     11156**DCL     11849<<ASSIGN
NMD_PIT.DEV.NAME
     11161**DCL     11833--CALL    11841<>CALL
NMD_PIT.DEV.NAME.C
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:84   
     11171**DCL     11820<<CALLBLT 11880>>ASSIGN
NMD_PIT.DEV.NAME.L
     11166**DCL     11823<<ASSIGN  11825>>IF
NMD_PIT.DEV.PACKSIZE
     11176**DCL     11872<<ASSIGN
NMD_PIT.DEV.SECT
     11181**DCL     11873<<ASSIGN
NMD_PIT.DEV.STATE
     11186**DCL     11850<<ASSIGN
NMD_PIT.DEV.TRK
     11191**DCL     11874<<ASSIGN
NMD_PIT.DEV.UTS
     11196**DCL     11851<<ASSIGN
NMD_PIT.N$DCT$$
     11368**DCL     11941--IMP-PTR 12055>>CALL
NME$ERRMSG
     10960**DCL-ENT 11833--CALL    11865--CALL    11887--CALL    12079--CALL
NMO#BAD_DEVICE IN PROCEDURE FIND_DCT
     12013**DCL     12079<>CALL
NMO#BAD_POINTER
     11517**DCL     11865<>CALL
NMO#INV_DEVICE
     11569**DCL     11833<>CALL
NMU$CONVERT$
     10961**DCL-ENT 11854--CALL    12055--CALL
NN.L#
     11609**DCL     11609--IMP-SIZ 11820>>CALLBLT
NN.NAME#
     11609**DCL     11820>>CALLBLT
NOFIND IN PROCEDURE FIND_DCT
     12079**LABEL   12055--CALLALT
OUT.SUBLK$
     11652**DCL     11819>>ASSIGN
OUT$
     10956**DCL        46--PROC    11619--IMP-PTR 11819>>ASSIGN
SETDCB
PL6.E3A0      #003=NMO$DEV File=NMO$OPTIONS.:E05TSI                              WED 07/30/97 03:51 Page:85   
     11730**DCL     11881<>CALL
SETDCB.ACSVEH_
     11732**DCL     11733--REDEF
SETDCB.ALTKEYS_
     11738**DCL     11739--REDEF   11739--REDEF
SETDCB.HDR_
     11737**DCL     11738--REDEF
SETDCB.TAB_
     11736**DCL     11737--REDEF
SETDCB.UHL_
     11730**DCL     11731--REDEF   11731--REDEF
SETDCB.V
     11739**DCL     11730--DCLINIT
SETDCB.V.DCB#
     11739**DCL     11879<<ASSIGN
SETDCB.V.FSN#
     11770**DCL     11770--REDEF   11770--REDEF
SETDCB.V.RES#
     11754**DCL     11880<<ASSIGN
SETDCB.WSN_
     11736**DCL     11736--REDEF
SYM.COUNT
     11806**DCL     11809--IMP-SIZ 11823>>ASSIGN
SYM.TEXTC$
     11801**DCL     11820>>CALLBLT 11820>>CALLBLT
SYM$
     11814**DCL     11783--IMP-PTR 11819<<ASSIGN  11820>>CALLBLT 11820>>CALLBLT 11823>>ASSIGN

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:86   
      517        1        /*M* NMO$OPTIONS - Option processing procedure.                    */
      518        2        /*T***********************************************************/
      519        3        /*T*                                                         */
      520        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      521        5        /*T*                                                         */
      522        6        /*T***********************************************************/
      523        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
      524        8        /*F*
      525        9        NAME:           NMO$OPTIONS
      526       10
      527       11        PURPOSE:        To parse the options on the command.
      528       12        */
      529       13        /*D*
      530       14        NAME:           NMO$OPTIONS
      531       15
      532       16        CALL:           CALL NMO$OPTIONS ( i1, i2 ) ALTRET ( error ) ;
      533       17
      534       18        PARAMETERS:
      535       19        */
      536       20        /*K*
      537       21        i1              is a UBIN WORD that indicates the first node
      538       22                to be processed.
      539       23        */
      540       24        /*K*
      541       25        i2              is a UBIN WORD that indicates the last node
      542       26                to be processed.
      543       27        */
      544       28        /*K*
      545       29        error           is a statement label to which NMO$OPTIONS will
      546       30                make an altreturn if an error is detected.
      547       31        */
      548       32        /*D*
      549       33        DESCRIPTION:
      550       34
      551       35        The NMO$OPTIONS procedure is used to process the options on the
      552       36        command.  The NMO$OPTIONS procedure sets flags and values in the
      553       37        NMD_PIT structure based upon the options that are processed.
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:87   
      554       38        */
      555       39        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:88   
      556       40        NMO$OPTIONS:    PROC ( I1, I2 ) ALTRET ;
      557       41        /*
      558       42                        Includes
      559       43        */
      560       44        %INCLUDE                CP_6 ;
      561     5603        %INCLUDE                NM_MACRO_M ;
      562     7008        %INCLUDE                NM_PERR_C ;
      563     7085        %INCLUDE                XU_MACRO_C ;
      564    10191        /*
      565    10192                        Parameters
      566    10193        */
      567    10194    1   DCL 1 I1                UBIN WORD ALIGNED PARAM ;
      568    10195    1   DCL 1 I2                UBIN WORD ALIGNED PARAM ;
      569    10196        /*
      570    10197                        Entries
      571    10198        */
      572    10199    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
      573    10200        /*
      574    10201                        Variables
      575    10202        */
      576    10203    1   DCL 1 ALTERR            BIT(1) ALIGNED AUTO ;
      577    10204        /*
      578    10205        ERRTEXT         is a structure that defines the substitution values
      579    10206                for the error messages.  The entries in
      580    10207                this structure are of the form ERRTEXT.nnnnnn and
      581    10208                ERRTEXT.nnnnnn_ where "nnnnnn" is the name of an option
      582    10209                accepted by the MIRROR program. The ERRTEXT.nnnnnn entries
      583    10210                are TEXTC constants.  The ERRTEXT.nnnnnn_ entries are
      584    10211                VECTOR constants framing the appropriate TEXTC constant.
      585    10212                The vector entries are passed to the error message routine
      586    10213                as vector framing the substitution character strings.
      587    10214        */
      588    10215                                %NMD_ERRTEXT ( FPTN = Option, FIRST=YES ) ;
      589    10281                                %NMD_ERRTEXT ( FPTN = GRANS             ) ;
      590    10347                                %NMD_ERRTEXT ( FPTN = MXDIFF            ) ;
      591    10413                                %NMD_ERRTEXT ( FPTN = NREPORT           ) ;
      592    10479                                %NMD_ERRTEXT ( FPTN = PAUSE             ) ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:89   
      593    10545                                %NMD_ERRTEXT ( FPTN = REPORT, LAST=YES  ) ;
      594    10611
      595    10612    1   DCL 1 I                 SBIN ALIGNED AUTO ;
      596    10613                                %NMD_PIT ( FPTN =
      597    10614              NMD_PIT           , STCLASS = SYMREF
      598    10615                                                                        ) ;
      599    11068                                %VLP_ERRCODE ( FPTN =
      600    11069              NMO#BAD_GRANS     , STCLASS = CONSTANT
      601    11070                                , ERR# = %E$NMD#BAD_GRANS
      602    11071                                , FCG = %NMD#FCG
      603    11072                                , MID = 'O'
      604    11073                                , MON = %NO#
      605    11074                                , SEV = 3
      606    11075                                                                        ) ;
      607    11120                                %VLP_ERRCODE ( FPTN =
      608    11121              NMO#BAD_MXDIFF    , STCLASS = CONSTANT
      609    11122                                , ERR# = %E$NMD#BAD_MXDIFF
      610    11123                                , FCG = %NMD#FCG
      611    11124                                , MID = 'O'
      612    11125                                , MON = %NO#
      613    11126                                , SEV = 3
      614    11127                                                                        ) ;
      615    11172                                %VLP_ERRCODE ( FPTN =
      616    11173              NMO#BAD_REPORT    , STCLASS = CONSTANT
      617    11174                                , ERR# = %E$NMD#BAD_REPORT
      618    11175                                , FCG = %NMD#FCG
      619    11176                                , MID = 'O'
      620    11177                                , MON = %NO#
      621    11178                                , SEV = 3
      622    11179                                                                        ) ;
      623    11224                                %VLP_ERRCODE ( FPTN =
      624    11225              NMO#DUPE_OPTIONS  , STCLASS = CONSTANT
      625    11226                                , ERR# = %E$NMD#DUPE_OPTIONS
      626    11227                                , FCG = %NMD#FCG
      627    11228                                , MID = 'O'
      628    11229                                , MON = %NO#
      629    11230                                , SEV = 1
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:90   
      630    11231                                                                        ) ;
      631    11276                                %VLP_ERRCODE ( FPTN =
      632    11277              NMO#NOT_IMPL      , STCLASS = CONSTANT
      633    11278                                , ERR# = %E$NMD#NOT_IMPL
      634    11279                                , FCG = %NMD#FCG
      635    11280                                , MID = 'O'
      636    11281                                , MON = %NO#
      637    11282                                , SEV = 3
      638    11283                                                                        ) ;
      639    11328                                %PARSE$OUT ( NAME =
      640    11329              OUT               , STCLASS = "BASED(OUT$)"
      641    11330                                                                        ) ;
      642    11375    1   DCL 1 OUT$              PTR ALIGNED AUTO ;
      643    11376                                %PARSE$SYM ( NAME =
      644    11377              SYM               , STCLASS = "BASED(OUT$)"
      645    11378                                                                        ) ;
      646    11416                                %VLP_NAMEV ( FPTN =
      647    11417              TEXTC             , STCLASS = BASED
      648    11418                                                                        ) ;
      649    11425                                %XUG_GETCMD ( NAME =
      650    11426              XUG_GETCMD        , STCLASS = SYMREF
      651    11427                                                                        ) ;
      652    11765        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:91   
      653    11766        /*
      654    11767        Process the options that were specified.  When an option
      655    11768        is processed, the appropriate OPTIONS bit is set.  If the option
      656    11769        specifies a value, the appropriate value is set.  If the option
      657    11770        has already been specified or if the option conflicts with another
      658    11771        option that has already been specified, report an error.
      659    11772        */
      660    11773    2           DO  I = I1 TO I2 ;
      661    11774    2               OUT$ = XUG_GETCMD.OUT$ -> OUT.SUBLK$(I) ;
      662    11775    3               DO  CASE  ( OUT.CODE ) ;
      663    11776        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:92   
      664    11777    3               CASE ( NMO#GRANS ) ;                /*** GRANS       ***/
      665    11778    3                   IF  NMD_PIT.OPTIONS.GRANS#
      666    11779    4                   THEN DO ;
      667    11780        /*E*
      668    11781        ERROR:  NMO-E$NMD#DUPE_OPTIONS-1
      669    11782        MESSAGE0:  %U1 is a duplicate or conflicting option.
      670    11783        MESSAGE1:  This occurrance of %U1 ignored.
      671    11784        */
      672    11785    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.GRANS_ ) ;
      673    11786    4                       ALTERR = '1'B ;
      674    11787    4                       END ;
      675    11788    4                   ELSE DO ;
      676    11789    4                       CALL CHARBIN ( NMD_PIT.GRANS#,
      677    11790    4                                      OUT$->OUT.SUBLK$(0)->SYM.TEXT ) ;
      678    11791    4                       IF  NMD_PIT.GRANS# < 1
      679    11792    4                       OR  NMD_PIT.GRANS# > 255
      680    11793    5                       THEN DO ;
      681    11794        /*E*
      682    11795        ERROR:  NMO-E$NMD#BAD_GRANS-3
      683    11796        MESSAGE0:  Bad GRANS option value.
      684    11797        MESSAGE1:  GRANS option value must be between 1 and 255, inclusive.
      685    11798        */
      686    11799    5                           CALL NME$ERRMSG ( NMO#BAD_GRANS ) ;
      687    11800    5                           NMD_PIT.GRANS# = %NMD#DEFAULT_GRANS ;
      688    11801    5                           ALTERR = '1'B ;
      689    11802    5                           END ;
      690    11803    4                       ELSE
      691    11804    4                           NMD_PIT.OPTIONS.GRANS# = '1'B ;
      692    11805    4                       END ;
      693    11806
      694    11807        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:93   
      695    11808    3               CASE ( NMO#MXDIFF ) ;               /*** MXDIFF      ***/
      696    11809    3                   IF  NMD_PIT.OPTIONS.MXDIFF#
      697    11810    4                   THEN DO ;
      698    11811    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.MXDIFF_ ) ;
      699    11812    4                       ALTERR = '1'B ;
      700    11813    4                       END ;
      701    11814    4                   ELSE DO ;
      702    11815    4                       CALL CHARBIN ( NMD_PIT.MXDIFF#,
      703    11816    4                                      OUT$->OUT.SUBLK$(0)->SYM.TEXT ) ;
      704    11817    4                       IF  NMD_PIT.MXDIFF# < 1
      705    11818    5                       THEN DO ;
      706    11819        /*E*
      707    11820        ERROR:  NMO-E$NMD#BAD_MXDIFF-3
      708    11821        MESSAGE0:  Bad MXDIFF option value.
      709    11822        MESSAGE1:  MXDIFF option value must be greater than  1.
      710    11823        */
      711    11824    5                           CALL NME$ERRMSG ( NMO#BAD_MXDIFF ) ;
      712    11825    5                           NMD_PIT.MXDIFF# = %NMD#DEFAULT_MXDIFF ;
      713    11826    5                           ALTERR = '1'B ;
      714    11827    5                           END ;
      715    11828    4                       ELSE
      716    11829    4                           NMD_PIT.OPTIONS.MXDIFF# = '1'B ;
      717    11830    4                       END ;
      718    11831
      719    11832        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:94   
      720    11833    3               CASE ( NMO#NREPORT ) ;              /*** NREPORT     ***/
      721    11834    3                   IF  NMD_PIT.OPTIONS.NREPORT#
      722    11835    3                   OR  NMD_PIT.OPTIONS.REPORT#
      723    11836    4                   THEN DO ;
      724    11837    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.NREPORT_ ) ;
      725    11838    4                       ALTERR = '1'B ;
      726    11839    4                       END ;
      727    11840    4                   ELSE DO ;
      728    11841    4                       NMD_PIT.FLAGS.REPORT#    = '0'B ;
      729    11842    4                       NMD_PIT.OPTIONS.NREPORT# = '1'B ;
      730    11843    4                       END ;
      731    11844
      732    11845        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:95   
      733    11846    3               CASE ( NMO#PAUSE ) ;                /*** PAUSE       ***/
      734    11847    3                   IF  NMD_PIT.OPTIONS.PAUSE#
      735    11848    4                   THEN DO ;
      736    11849    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.PAUSE_ ) ;
      737    11850    4                       ALTERR = '1'B ;
      738    11851    4                       END ;
      739    11852    4                   ELSE DO ;
      740    11853    4                       CALL CHARBIN ( NMD_PIT.PAUSE#,
      741    11854    4                                      OUT$->OUT.SUBLK$(0)->SYM.TEXT ) ;
      742    11855    4                       NMD_PIT.OPTIONS.PAUSE#   = '1'B ;
      743    11856    4                       NMD_PIT.OPTIONS.MS#      = '0'B ;
      744    11857    4                       NMD_PIT.OPTIONS.SECONDS# = '1'B ;
      745    11858    4                       IF  OUT$->OUT.NSUBLKS > 1
      746    11859    5                       THEN DO ;
      747    11860    5                           OUT$ = OUT$->OUT.SUBLK$(1) ;
      748    11861    5                           IF  OUT.CODE = NMO#MS
      749    11862    6                           THEN DO ;
      750    11863    6                               NMD_PIT.OPTIONS.MS#      = '1'B ;
      751    11864    6                               NMD_PIT.OPTIONS.SECONDS# = '0'B ;
      752    11865    6                               NMD_PIT.PAUSE#           = ( NMD_PIT.PAUSE# + 9 ) / 10 ;
      753    11866    6                               END ;
      754    11867    5                           END ;
      755    11868    4                       END ;
      756    11869
      757    11870        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:96   
      758    11871    3               CASE ( NMO#REPORT ) ;               /*** REPORT      ***/
      759    11872    3                   IF  NMD_PIT.OPTIONS.REPORT#
      760    11873    3                   OR  NMD_PIT.OPTIONS.NREPORT#
      761    11874    4                   THEN DO ;
      762    11875    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.REPORT_ ) ;
      763    11876    4                       ALTERR = '1'B ;
      764    11877    4                       END ;
      765    11878    4                   ELSE DO ;
      766    11879    4                       CALL CHARBIN ( NMD_PIT.REPORT.INCR,
      767    11880    4                                      OUT$->OUT.SUBLK$(0)->SYM.TEXT ) ;
      768    11881    4                       IF  NMD_PIT.REPORT.INCR < 1
      769    11882    4                       OR  NMD_PIT.REPORT.INCR > 99
      770    11883    5                       THEN DO ;
      771    11884        /*E*
      772    11885        ERROR:  NMO-E$NMD#BAD_REPORT-3
      773    11886        MESSAGE0:  Bad REPORT option value.
      774    11887        MESSAGE1:  REPORT option value must be between 1 and 99 inclusive.
      775    11888        */
      776    11889    5                           CALL NME$ERRMSG ( NMO#BAD_REPORT ) ;
      777    11890    5                           NMD_PIT.FLAGS.REPORT# = %NMD#DEFAULT_REPORT ;
      778    11891    5                           NMD_PIT.REPORT.INCR   = %NMD#DEFAULT_REPORT_INCR ;
      779    11892    5                           ALTERR = '1'B ;
      780    11893    5                           END ;
      781    11894    5                       ELSE DO ;
      782    11895    5                           NMD_PIT.FLAGS.REPORT#   = '1'B ;
      783    11896    5                           NMD_PIT.OPTIONS.REPORT# = '1'B ;
      784    11897    5                           END ;
      785    11898    4                       END ;
      786    11899
      787    11900        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:97   
      788    11901    3               CASE ( ELSE ) ;                     /*** NOT IMPL    ***/
      789    11902        /*E*
      790    11903        ERROR:  NMO-E$NMD#NOT_IMPL-3
      791    11904        MESSAGE0:  %U1 not implemented yet.
      792    11905        MESSAGE1:  The %U1 has been added to the parse nodes, but the code
      793    11906                   has not be written to process the %U1 yet.
      794    11907        */
      795    11908    3                   CALL NME$ERRMSG ( NMO#NOT_IMPL, , ERRTEXT.OPTION_ ) ;
      796    11909    3                   ALTERR = '1'B ;
      797    11910
      798    11911    3                   END /* DO CASE */ ;
      799    11912
      800    11913    2               END /* DO I */ ;
      801    11914        /*
      802    11915        Return to calling procedure.
      803    11916        */
      804    11917    1           IF  ALTERR
      805    11918    1           THEN
      806    11919    1               ALTRETURN ;
      807    11920    1           ELSE
      808    11921    1               RETURN ;
      809    11922
      810    11923    1           END NMO$OPTIONS ;
      811    11924        %EOD ;

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:98   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   NM_PERR_C.:E05TOU  is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NMO$OPTIONS.

   Procedure NMO$OPTIONS requires 235 words for executable code.
   Procedure NMO$OPTIONS requires 12 words of local(AUTO) storage.

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:99   

 Object Unit name= NMO$OPTIONS                                File name= NMO$OPTIONS.:E05TOU
 UTS= JUL 30 '97 03:52:26.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     29     35  NMO$OPTIONS
    2   Proc  even  none   235    353  NMO$OPTIONS
    3  RoData even  none    15     17  NMO$OPTIONS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  NMO$OPTIONS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 NME$ERRMSG
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:100  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  NMD_PIT                               XUG_GETCMD
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:101  


      517        1        /*M* NMO$OPTIONS - Option processing procedure.                    */
      518        2        /*T***********************************************************/
      519        3        /*T*                                                         */
      520        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      521        5        /*T*                                                         */
      522        6        /*T***********************************************************/
      523        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
      524        8        /*F*
      525        9        NAME:           NMO$OPTIONS
      526       10
      527       11        PURPOSE:        To parse the options on the command.
      528       12        */
      529       13        /*D*
      530       14        NAME:           NMO$OPTIONS
      531       15
      532       16        CALL:           CALL NMO$OPTIONS ( i1, i2 ) ALTRET ( error ) ;
      533       17
      534       18        PARAMETERS:
      535       19        */
      536       20        /*K*
      537       21        i1              is a UBIN WORD that indicates the first node
      538       22                to be processed.
      539       23        */
      540       24        /*K*
      541       25        i2              is a UBIN WORD that indicates the last node
      542       26                to be processed.
      543       27        */
      544       28        /*K*
      545       29        error           is a statement label to which NMO$OPTIONS will
      546       30                make an altreturn if an error is detected.
      547       31        */
      548       32        /*D*
      549       33        DESCRIPTION:
      550       34
      551       35        The NMO$OPTIONS procedure is used to process the options on the
      552       36        command.  The NMO$OPTIONS procedure sets flags and values in the
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:102  
      553       37        NMD_PIT structure based upon the options that are processed.
      554       38        */
      555       39        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:103  
      556       40        NMO$OPTIONS:    PROC ( I1, I2 ) ALTRET ;

     40  2 000000   000000 700200 xent  NMO$OPTIONS  TSX0  ! X66_AUTO_2
         2 000001   000014 000002                    ZERO    12,2

      557       41        /*
      558       42                        Includes
      559       43        */
      560       44        %INCLUDE                CP_6 ;
      561     5603        %INCLUDE                NM_MACRO_M ;
      562     7008        %INCLUDE                NM_PERR_C ;
      563     7085        %INCLUDE                XU_MACRO_C ;
      564    10191        /*
      565    10192                        Parameters
      566    10193        */
      567    10194    1   DCL 1 I1                UBIN WORD ALIGNED PARAM ;
      568    10195    1   DCL 1 I2                UBIN WORD ALIGNED PARAM ;
      569    10196        /*
      570    10197                        Entries
      571    10198        */
      572    10199    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
      573    10200        /*
      574    10201                        Variables
      575    10202        */
      576    10203    1   DCL 1 ALTERR            BIT(1) ALIGNED AUTO ;
      577    10204        /*
      578    10205        ERRTEXT         is a structure that defines the substitution values
      579    10206                for the error messages.  The entries in
      580    10207                this structure are of the form ERRTEXT.nnnnnn and
      581    10208                ERRTEXT.nnnnnn_ where "nnnnnn" is the name of an option
      582    10209                accepted by the MIRROR program. The ERRTEXT.nnnnnn entries
      583    10210                are TEXTC constants.  The ERRTEXT.nnnnnn_ entries are
      584    10211                VECTOR constants framing the appropriate TEXTC constant.
      585    10212                The vector entries are passed to the error message routine
      586    10213                as vector framing the substitution character strings.
      587    10214        */
      588    10215                                %NMD_ERRTEXT ( FPTN = Option, FIRST=YES ) ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:104  
      589    10281                                %NMD_ERRTEXT ( FPTN = GRANS             ) ;
      590    10347                                %NMD_ERRTEXT ( FPTN = MXDIFF            ) ;
      591    10413                                %NMD_ERRTEXT ( FPTN = NREPORT           ) ;
      592    10479                                %NMD_ERRTEXT ( FPTN = PAUSE             ) ;
      593    10545                                %NMD_ERRTEXT ( FPTN = REPORT, LAST=YES  ) ;
      594    10611
      595    10612    1   DCL 1 I                 SBIN ALIGNED AUTO ;
      596    10613                                %NMD_PIT ( FPTN =
      597    10614              NMD_PIT           , STCLASS = SYMREF
      598    10615                                                                        ) ;
      599    11068                                %VLP_ERRCODE ( FPTN =
      600    11069              NMO#BAD_GRANS     , STCLASS = CONSTANT
      601    11070                                , ERR# = %E$NMD#BAD_GRANS
      602    11071                                , FCG = %NMD#FCG
      603    11072                                , MID = 'O'
      604    11073                                , MON = %NO#
      605    11074                                , SEV = 3
      606    11075                                                                        ) ;
      607    11120                                %VLP_ERRCODE ( FPTN =
      608    11121              NMO#BAD_MXDIFF    , STCLASS = CONSTANT
      609    11122                                , ERR# = %E$NMD#BAD_MXDIFF
      610    11123                                , FCG = %NMD#FCG
      611    11124                                , MID = 'O'
      612    11125                                , MON = %NO#
      613    11126                                , SEV = 3
      614    11127                                                                        ) ;
      615    11172                                %VLP_ERRCODE ( FPTN =
      616    11173              NMO#BAD_REPORT    , STCLASS = CONSTANT
      617    11174                                , ERR# = %E$NMD#BAD_REPORT
      618    11175                                , FCG = %NMD#FCG
      619    11176                                , MID = 'O'
      620    11177                                , MON = %NO#
      621    11178                                , SEV = 3
      622    11179                                                                        ) ;
      623    11224                                %VLP_ERRCODE ( FPTN =
      624    11225              NMO#DUPE_OPTIONS  , STCLASS = CONSTANT
      625    11226                                , ERR# = %E$NMD#DUPE_OPTIONS
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:105  
      626    11227                                , FCG = %NMD#FCG
      627    11228                                , MID = 'O'
      628    11229                                , MON = %NO#
      629    11230                                , SEV = 1
      630    11231                                                                        ) ;
      631    11276                                %VLP_ERRCODE ( FPTN =
      632    11277              NMO#NOT_IMPL      , STCLASS = CONSTANT
      633    11278                                , ERR# = %E$NMD#NOT_IMPL
      634    11279                                , FCG = %NMD#FCG
      635    11280                                , MID = 'O'
      636    11281                                , MON = %NO#
      637    11282                                , SEV = 3
      638    11283                                                                        ) ;
      639    11328                                %PARSE$OUT ( NAME =
      640    11329              OUT               , STCLASS = "BASED(OUT$)"
      641    11330                                                                        ) ;
      642    11375    1   DCL 1 OUT$              PTR ALIGNED AUTO ;
      643    11376                                %PARSE$SYM ( NAME =
      644    11377              SYM               , STCLASS = "BASED(OUT$)"
      645    11378                                                                        ) ;
      646    11416                                %VLP_NAMEV ( FPTN =
      647    11417              TEXTC             , STCLASS = BASED
      648    11418                                                                        ) ;
      649    11425                                %XUG_GETCMD ( NAME =
      650    11426              XUG_GETCMD        , STCLASS = SYMREF
      651    11427                                                                        ) ;
      652    11765        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:106  
      653    11766        /*
      654    11767        Process the options that were specified.  When an option
      655    11768        is processed, the appropriate OPTIONS bit is set.  If the option
      656    11769        specifies a value, the appropriate value is set.  If the option
      657    11770        has already been specified or if the option conflicts with another
      658    11771        option that has already been specified, report an error.
      659    11772        */
      660    11773    2           DO  I = I1 TO I2 ;

  11773  2 000002   200003 470500                    LDP0    @I1,,AUTO
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   200006 755100                    STA     I,,AUTO
         2 000005   000342 710000 2                  TRA     s:11913+1

      661    11774    2               OUT$ = XUG_GETCMD.OUT$ -> OUT.SUBLK$(I) ;

  11774  2 000006   000001 470400 xsym               LDP0    XUG_GETCMD+1
         2 000007   200006 720100                    LXL0    I,,AUTO
         2 000010   000003 236110                    LDQ     3,X0,PR0
         2 000011   200007 756100                    STQ     OUT$,,AUTO

      662    11775    3               DO  CASE  ( OUT.CODE ) ;

  11775  2 000012   200007 471500                    LDP1    OUT$,,AUTO
         2 000013   100000 236100                    LDQ     0,,PR1
         2 000014   777777 376007                    ANQ     -1,DL
         2 000015   000311 136007                    SBLQ    201,DL
         2 000016   000007 116007                    CMPQ    7,DL
         2 000017   000021 602006 2                  TNC     s:11775+7,QL
         2 000020   000326 710000 2                  TRA     s:11908
         2 000021   000030 710000 2                  TRA     s:11778
         2 000022   000326 710000 2                  TRA     s:11908
         2 000023   000171 710000 2                  TRA     s:11847
         2 000024   000326 710000 2                  TRA     s:11908
         2 000025   000076 710000 2                  TRA     s:11809
         2 000026   000252 710000 2                  TRA     s:11872
         2 000027   000143 710000 2                  TRA     s:11834
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:107  

      663    11776        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:108  
      664    11777    3               CASE ( NMO#GRANS ) ;                /*** GRANS       ***/

      665    11778    3                   IF  NMD_PIT.OPTIONS.GRANS#

  11778  2 000030   000306 234000 xsym               SZN     NMD_PIT+198
         2 000031   000046 605000 2                  TPL     s:11789

      666    11779    4                   THEN DO ;

      667    11780        /*E*
      668    11781        ERROR:  NMO-E$NMD#DUPE_OPTIONS-1
      669    11782        MESSAGE0:  %U1 is a duplicate or conflicting option.
      670    11783        MESSAGE1:  This occurrance of %U1 ignored.
      671    11784        */
      672    11785    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.GRANS_ ) ;

  11785  2 000032   000000 236000 3                  LDQ     0
         2 000033   200012 756100                    STQ     OUT$+3,,AUTO
         2 000034   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000035   000001 235000 3                  LDA     1
         2 000036   200010 757100                    STAQ    OUT$+1,,AUTO
         2 000037   200010 630500                    EPPR0   OUT$+1,,AUTO
         2 000040   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000041   000000 701000 xent               TSX1    NME$ERRMSG
         2 000042   000000 011000                    NOP     0

      673    11786    4                       ALTERR = '1'B ;

  11786  2 000043   400000 236003                    LDQ     -131072,DU
         2 000044   200005 756100                    STQ     ALTERR,,AUTO

      674    11787    4                       END ;

  11787  2 000045   000341 710000 2                  TRA     s:11913

      675    11788    4                   ELSE DO ;

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:109  
      676    11789    4                       CALL CHARBIN ( NMD_PIT.GRANS#,

  11789  2 000046   100003 473500                    LDP3    3,,PR1
         2 000047   300004 236100                    LDQ     4,,PR3
         2 000050   000033 772000                    QRL     27
         2 000051   000000 621006                    EAX1    0,QL
         2 000052   000100 305540                    DTB
         2 000053   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         2 000054   200010 000010                    NDSC9   OUT$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000055   200011 235100                    LDA     OUT$+2,,AUTO
         2 000056   000274 755000 xsym               STA     NMD_PIT+188

      677    11790    4                                      OUT$->OUT.SUBLK$(0)->SYM.TEXT ) ;
      678    11791    4                       IF  NMD_PIT.GRANS# < 1

  11791  2 000057   000062 600000 2                  TZE     s:11799
         2 000060   000400 115007                    CMPA    256,DL
         2 000061   000073 602000 2                  TNC     s:11804

      679    11792    4                       OR  NMD_PIT.GRANS# > 255
      680    11793    5                       THEN DO ;

      681    11794        /*E*
      682    11795        ERROR:  NMO-E$NMD#BAD_GRANS-3
      683    11796        MESSAGE0:  Bad GRANS option value.
      684    11797        MESSAGE1:  GRANS option value must be between 1 and 255, inclusive.
      685    11798        */
      686    11799    5                           CALL NME$ERRMSG ( NMO#BAD_GRANS ) ;

  11799  2 000062   000002 630400 3                  EPPR0   2
         2 000063   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000064   000000 701000 xent               TSX1    NME$ERRMSG
         2 000065   000000 011000                    NOP     0

      687    11800    5                           NMD_PIT.GRANS# = %NMD#DEFAULT_GRANS ;

  11800  2 000066   000100 235007                    LDA     64,DL
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:110  
         2 000067   000274 755000 xsym               STA     NMD_PIT+188

      688    11801    5                           ALTERR = '1'B ;

  11801  2 000070   400000 236003                    LDQ     -131072,DU
         2 000071   200005 756100                    STQ     ALTERR,,AUTO

      689    11802    5                           END ;

  11802  2 000072   000341 710000 2                  TRA     s:11913

      690    11803    4                       ELSE
      691    11804    4                           NMD_PIT.OPTIONS.GRANS# = '1'B ;

  11804  2 000073   400000 236003                    LDQ     -131072,DU
         2 000074   000306 256000 xsym               ORSQ    NMD_PIT+198

      692    11805    4                       END ;

  11805  2 000075   000341 710000 2                  TRA     s:11913

      693    11806
      694    11807        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:111  
      695    11808    3               CASE ( NMO#MXDIFF ) ;               /*** MXDIFF      ***/

      696    11809    3                   IF  NMD_PIT.OPTIONS.MXDIFF#

  11809  2 000076   000306 236000 xsym               LDQ     NMD_PIT+198
         2 000077   100000 316003                    CANQ    32768,DU
         2 000100   000115 600000 2                  TZE     s:11815

      697    11810    4                   THEN DO ;

      698    11811    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.MXDIFF_ ) ;

  11811  2 000101   000003 236000 3                  LDQ     3
         2 000102   200012 756100                    STQ     OUT$+3,,AUTO
         2 000103   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000104   000001 235000 3                  LDA     1
         2 000105   200010 757100                    STAQ    OUT$+1,,AUTO
         2 000106   200010 630500                    EPPR0   OUT$+1,,AUTO
         2 000107   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000110   000000 701000 xent               TSX1    NME$ERRMSG
         2 000111   000000 011000                    NOP     0

      699    11812    4                       ALTERR = '1'B ;

  11812  2 000112   400000 236003                    LDQ     -131072,DU
         2 000113   200005 756100                    STQ     ALTERR,,AUTO

      700    11813    4                       END ;

  11813  2 000114   000341 710000 2                  TRA     s:11913

      701    11814    4                   ELSE DO ;

      702    11815    4                       CALL CHARBIN ( NMD_PIT.MXDIFF#,

  11815  2 000115   100003 473500                    LDP3    3,,PR1
         2 000116   300004 236100                    LDQ     4,,PR3
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:112  
         2 000117   000033 772000                    QRL     27
         2 000120   000000 621006                    EAX1    0,QL
         2 000121   000100 305540                    DTB
         2 000122   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         2 000123   200010 000010                    NDSC9   OUT$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000124   200011 235100                    LDA     OUT$+2,,AUTO
         2 000125   000303 755000 xsym               STA     NMD_PIT+195

      703    11816    4                                      OUT$->OUT.SUBLK$(0)->SYM.TEXT ) ;
      704    11817    4                       IF  NMD_PIT.MXDIFF# < 1

  11817  2 000126   000140 601000 2                  TNZ     s:11829

      705    11818    5                       THEN DO ;

      706    11819        /*E*
      707    11820        ERROR:  NMO-E$NMD#BAD_MXDIFF-3
      708    11821        MESSAGE0:  Bad MXDIFF option value.
      709    11822        MESSAGE1:  MXDIFF option value must be greater than  1.
      710    11823        */
      711    11824    5                           CALL NME$ERRMSG ( NMO#BAD_MXDIFF ) ;

  11824  2 000127   000004 630400 3                  EPPR0   4
         2 000130   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000131   000000 701000 xent               TSX1    NME$ERRMSG
         2 000132   000000 011000                    NOP     0

      712    11825    5                           NMD_PIT.MXDIFF# = %NMD#DEFAULT_MXDIFF ;

  11825  2 000133   000005 235000 3                  LDA     5
         2 000134   000303 755000 xsym               STA     NMD_PIT+195

      713    11826    5                           ALTERR = '1'B ;

  11826  2 000135   400000 236003                    LDQ     -131072,DU
         2 000136   200005 756100                    STQ     ALTERR,,AUTO

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:113  
      714    11827    5                           END ;

  11827  2 000137   000341 710000 2                  TRA     s:11913

      715    11828    4                       ELSE
      716    11829    4                           NMD_PIT.OPTIONS.MXDIFF# = '1'B ;

  11829  2 000140   100000 236003                    LDQ     32768,DU
         2 000141   000306 256000 xsym               ORSQ    NMD_PIT+198

      717    11830    4                       END ;

  11830  2 000142   000341 710000 2                  TRA     s:11913

      718    11831
      719    11832        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:114  
      720    11833    3               CASE ( NMO#NREPORT ) ;              /*** NREPORT     ***/

      721    11834    3                   IF  NMD_PIT.OPTIONS.NREPORT#

  11834  2 000143   000306 236000 xsym               LDQ     NMD_PIT+198
         2 000144   040000 316003                    CANQ    16384,DU
         2 000145   000150 601000 2                  TNZ     s:11837
         2 000146   010000 316003                    CANQ    4096,DU
         2 000147   000164 600000 2                  TZE     s:11841

      722    11835    3                   OR  NMD_PIT.OPTIONS.REPORT#
      723    11836    4                   THEN DO ;

      724    11837    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.NREPORT_ ) ;

  11837  2 000150   000006 236000 3                  LDQ     6
         2 000151   200012 756100                    STQ     OUT$+3,,AUTO
         2 000152   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000153   000001 235000 3                  LDA     1
         2 000154   200010 757100                    STAQ    OUT$+1,,AUTO
         2 000155   200010 630500                    EPPR0   OUT$+1,,AUTO
         2 000156   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000157   000000 701000 xent               TSX1    NME$ERRMSG
         2 000160   000000 011000                    NOP     0

      725    11838    4                       ALTERR = '1'B ;

  11838  2 000161   400000 236003                    LDQ     -131072,DU
         2 000162   200005 756100                    STQ     ALTERR,,AUTO

      726    11839    4                       END ;

  11839  2 000163   000341 710000 2                  TRA     s:11913

      727    11840    4                   ELSE DO ;

      728    11841    4                       NMD_PIT.FLAGS.REPORT#    = '0'B ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:115  

  11841  2 000164   000007 236000 3                  LDQ     7
         2 000165   000273 356000 xsym               ANSQ    NMD_PIT+187

      729    11842    4                       NMD_PIT.OPTIONS.NREPORT# = '1'B ;

  11842  2 000166   040000 236003                    LDQ     16384,DU
         2 000167   000306 256000 xsym               ORSQ    NMD_PIT+198

      730    11843    4                       END ;

  11843  2 000170   000341 710000 2                  TRA     s:11913

      731    11844
      732    11845        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:116  
      733    11846    3               CASE ( NMO#PAUSE ) ;                /*** PAUSE       ***/

      734    11847    3                   IF  NMD_PIT.OPTIONS.PAUSE#

  11847  2 000171   000306 236000 xsym               LDQ     NMD_PIT+198
         2 000172   020000 316003                    CANQ    8192,DU
         2 000173   000210 600000 2                  TZE     s:11853

      735    11848    4                   THEN DO ;

      736    11849    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.PAUSE_ ) ;

  11849  2 000174   000010 236000 3                  LDQ     8
         2 000175   200012 756100                    STQ     OUT$+3,,AUTO
         2 000176   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000177   000001 235000 3                  LDA     1
         2 000200   200010 757100                    STAQ    OUT$+1,,AUTO
         2 000201   200010 630500                    EPPR0   OUT$+1,,AUTO
         2 000202   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000203   000000 701000 xent               TSX1    NME$ERRMSG
         2 000204   000000 011000                    NOP     0

      737    11850    4                       ALTERR = '1'B ;

  11850  2 000205   400000 236003                    LDQ     -131072,DU
         2 000206   200005 756100                    STQ     ALTERR,,AUTO

      738    11851    4                       END ;

  11851  2 000207   000341 710000 2                  TRA     s:11913

      739    11852    4                   ELSE DO ;

      740    11853    4                       CALL CHARBIN ( NMD_PIT.PAUSE#,

  11853  2 000210   100003 473500                    LDP3    3,,PR1
         2 000211   300004 236100                    LDQ     4,,PR3
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:117  
         2 000212   000033 772000                    QRL     27
         2 000213   000000 621006                    EAX1    0,QL
         2 000214   000100 305540                    DTB
         2 000215   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         2 000216   200010 000010                    NDSC9   OUT$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000217   200011 235100                    LDA     OUT$+2,,AUTO
         2 000220   000310 755000 xsym               STA     NMD_PIT+200

      741    11854    4                                      OUT$->OUT.SUBLK$(0)->SYM.TEXT ) ;
      742    11855    4                       NMD_PIT.OPTIONS.PAUSE#   = '1'B ;

  11855  2 000221   020000 236003                    LDQ     8192,DU
         2 000222   000306 256000 xsym               ORSQ    NMD_PIT+198

      743    11856    4                       NMD_PIT.OPTIONS.MS#      = '0'B ;

  11856  2 000223   000011 236000 3                  LDQ     9
         2 000224   000306 356000 xsym               ANSQ    NMD_PIT+198

      744    11857    4                       NMD_PIT.OPTIONS.SECONDS# = '1'B ;

  11857  2 000225   004000 236003                    LDQ     2048,DU
         2 000226   000306 256000 xsym               ORSQ    NMD_PIT+198

      745    11858    4                       IF  OUT$->OUT.NSUBLKS > 1

  11858  2 000227   100001 221100                    LDX1    1,,PR1
         2 000230   000002 101003                    CMPX1   2,DU
         2 000231   000341 602000 2                  TNC     s:11913

      746    11859    5                       THEN DO ;

      747    11860    5                           OUT$ = OUT$->OUT.SUBLK$(1) ;

  11860  2 000232   100004 236100                    LDQ     4,,PR1
         2 000233   200007 756100                    STQ     OUT$,,AUTO

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:118  
      748    11861    5                           IF  OUT.CODE = NMO#MS

  11861  2 000234   200007 471500                    LDP1    OUT$,,AUTO
         2 000235   100000 721100                    LXL1    0,,PR1
         2 000236   000312 101003                    CMPX1   202,DU
         2 000237   000341 601000 2                  TNZ     s:11913

      749    11862    6                           THEN DO ;

      750    11863    6                               NMD_PIT.OPTIONS.MS#      = '1'B ;

  11863  2 000240   200000 236003                    LDQ     65536,DU
         2 000241   000306 256000 xsym               ORSQ    NMD_PIT+198

      751    11864    6                               NMD_PIT.OPTIONS.SECONDS# = '0'B ;

  11864  2 000242   000012 236000 3                  LDQ     10
         2 000243   000306 356000 xsym               ANSQ    NMD_PIT+198

      752    11865    6                               NMD_PIT.PAUSE#          = ( NMD_PIT.PAUSE# + 9 ) / 10 ;

  11865  2 000244   000310 236000 xsym               LDQ     NMD_PIT+200
         2 000245   000011 036007                    ADLQ    9,DL
         2 000246   000001 772000                    QRL     1
         2 000247   000005 506007                    DIV     5,DL
         2 000250   000310 756000 xsym               STQ     NMD_PIT+200

      753    11866    6                               END ;

      754    11867    5                           END ;

      755    11868    4                       END ;

  11868  2 000251   000341 710000 2                  TRA     s:11913

      756    11869
      757    11870        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:119  
      758    11871    3               CASE ( NMO#REPORT ) ;               /*** REPORT      ***/

      759    11872    3                   IF  NMD_PIT.OPTIONS.REPORT#

  11872  2 000252   000306 236000 xsym               LDQ     NMD_PIT+198
         2 000253   010000 316003                    CANQ    4096,DU
         2 000254   000257 601000 2                  TNZ     s:11875
         2 000255   040000 316003                    CANQ    16384,DU
         2 000256   000273 600000 2                  TZE     s:11879

      760    11873    3                   OR  NMD_PIT.OPTIONS.NREPORT#
      761    11874    4                   THEN DO ;

      762    11875    4                       CALL NME$ERRMSG ( NMO#DUPE_OPTIONS, , ERRTEXT.REPORT_ ) ;

  11875  2 000257   000013 236000 3                  LDQ     11
         2 000260   200012 756100                    STQ     OUT$+3,,AUTO
         2 000261   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000262   000001 235000 3                  LDA     1
         2 000263   200010 757100                    STAQ    OUT$+1,,AUTO
         2 000264   200010 630500                    EPPR0   OUT$+1,,AUTO
         2 000265   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000266   000000 701000 xent               TSX1    NME$ERRMSG
         2 000267   000000 011000                    NOP     0

      763    11876    4                       ALTERR = '1'B ;

  11876  2 000270   400000 236003                    LDQ     -131072,DU
         2 000271   200005 756100                    STQ     ALTERR,,AUTO

      764    11877    4                       END ;

  11877  2 000272   000341 710000 2                  TRA     s:11913

      765    11878    4                   ELSE DO ;

      766    11879    4                       CALL CHARBIN ( NMD_PIT.REPORT.INCR,
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:120  

  11879  2 000273   100003 473500                    LDP3    3,,PR1
         2 000274   300004 236100                    LDQ     4,,PR3
         2 000275   000033 772000                    QRL     27
         2 000276   000000 621006                    EAX1    0,QL
         2 000277   000000 305540                    DTB
         2 000300   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         2 000301   000316 000004 xsym               NDSC9   NMD_PIT+206              cn=0,s=lsgnf,sf=0,n=4

      767    11880    4                                      OUT$->OUT.SUBLK$(0)->SYM.TEXT ) ;
      768    11881    4                       IF  NMD_PIT.REPORT.INCR < 1

  11881  2 000302   000316 235000 xsym               LDA     NMD_PIT+206
         2 000303   000306 604400 2                  TMOZ    s:11889
         2 000304   000143 115007                    CMPA    99,DL
         2 000305   000321 604400 2                  TMOZ    s:11895

      769    11882    4                       OR  NMD_PIT.REPORT.INCR > 99
      770    11883    5                       THEN DO ;

      771    11884        /*E*
      772    11885        ERROR:  NMO-E$NMD#BAD_REPORT-3
      773    11886        MESSAGE0:  Bad REPORT option value.
      774    11887        MESSAGE1:  REPORT option value must be between 1 and 99 inclusive.
      775    11888        */
      776    11889    5                           CALL NME$ERRMSG ( NMO#BAD_REPORT ) ;

  11889  2 000306   000014 630400 3                  EPPR0   12
         2 000307   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000310   000000 701000 xent               TSX1    NME$ERRMSG
         2 000311   000000 011000                    NOP     0

      777    11890    5                           NMD_PIT.FLAGS.REPORT# = %NMD#DEFAULT_REPORT ;

  11890  2 000312   020000 236003                    LDQ     8192,DU
         2 000313   000273 256000 xsym               ORSQ    NMD_PIT+187

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:121  
      778    11891    5                           NMD_PIT.REPORT.INCR   = %NMD#DEFAULT_REPORT_INCR ;

  11891  2 000314   000012 235007                    LDA     10,DL
         2 000315   000316 755000 xsym               STA     NMD_PIT+206

      779    11892    5                           ALTERR = '1'B ;

  11892  2 000316   400000 236003                    LDQ     -131072,DU
         2 000317   200005 756100                    STQ     ALTERR,,AUTO

      780    11893    5                           END ;

  11893  2 000320   000341 710000 2                  TRA     s:11913

      781    11894    5                       ELSE DO ;

      782    11895    5                           NMD_PIT.FLAGS.REPORT#   = '1'B ;

  11895  2 000321   020000 236003                    LDQ     8192,DU
         2 000322   000273 256000 xsym               ORSQ    NMD_PIT+187

      783    11896    5                           NMD_PIT.OPTIONS.REPORT# = '1'B ;

  11896  2 000323   010000 236003                    LDQ     4096,DU
         2 000324   000306 256000 xsym               ORSQ    NMD_PIT+198

      784    11897    5                           END ;

      785    11898    4                       END ;

  11898  2 000325   000341 710000 2                  TRA     s:11913

      786    11899
      787    11900        %EJECT ;
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:122  
      788    11901    3               CASE ( ELSE ) ;                     /*** NOT IMPL    ***/

      789    11902        /*E*
      790    11903        ERROR:  NMO-E$NMD#NOT_IMPL-3
      791    11904        MESSAGE0:  %U1 not implemented yet.
      792    11905        MESSAGE1:  The %U1 has been added to the parse nodes, but the code
      793    11906                   has not be written to process the %U1 yet.
      794    11907        */
      795    11908    3                   CALL NME$ERRMSG ( NMO#NOT_IMPL, , ERRTEXT.OPTION_ ) ;

  11908  2 000326   000015 236000 3                  LDQ     13
         2 000327   200012 756100                    STQ     OUT$+3,,AUTO
         2 000330   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000331   000016 235000 3                  LDA     14
         2 000332   200010 757100                    STAQ    OUT$+1,,AUTO
         2 000333   200010 630500                    EPPR0   OUT$+1,,AUTO
         2 000334   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000335   000000 701000 xent               TSX1    NME$ERRMSG
         2 000336   000000 011000                    NOP     0

      796    11909    3                   ALTERR = '1'B ;

  11909  2 000337   400000 236003                    LDQ     -131072,DU
         2 000340   200005 756100                    STQ     ALTERR,,AUTO

      797    11910
      798    11911    3                   END /* DO CASE */ ;

      799    11912
      800    11913    2               END /* DO I */ ;

  11913  2 000341   200006 054100                    AOS     I,,AUTO
         2 000342   200004 470500                    LDP0    @I2,,AUTO
         2 000343   000000 236100                    LDQ     0,,PR0
         2 000344   000006 604000 2                  TMI     s:11774
         2 000345   200006 116100                    CMPQ    I,,AUTO
         2 000346   000006 605000 2                  TPL     s:11774
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:123  

      801    11914        /*
      802    11915        Return to calling procedure.
      803    11916        */
      804    11917    1           IF  ALTERR

  11917  2 000347   200005 234100                    SZN     ALTERR,,AUTO
         2 000350   000352 605000 2                  TPL     s:11921

      805    11918    1           THEN
      806    11919    1               ALTRETURN ;

  11919  2 000351   000000 702200 xent               TSX2  ! X66_AALT

      807    11920    1           ELSE
      808    11921    1               RETURN ;

  11921  2 000352   000000 702200 xent               TSX2  ! X66_ARET
      809    11922
      810    11923    1           END NMO$OPTIONS ;
      811    11924        %EOD ;

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:124  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   NM_PERR_C.:E05TOU  is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NMO$OPTIONS.
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:125  

 **** Variables and constants ****

  ****  Section 001 RoData NMO$OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(864)   r     1 ERRTEXT                   30-0-0/w STRC        r     1 NMO#BAD_GRANS
    31-0-0/w STRC        r     1 NMO#BAD_MXDIFF            32-0-0/w STRC        r     1 NMO#BAD_REPORT
    33-0-0/w STRC        r     1 NMO#DUPE_OPTIONS          34-0-0/w STRC        r     1 NMO#NOT_IMPL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @I1                        4-0-0/w PTR         r     1 @I2
     5-0-0/w BIT         r     1 ALTERR                     6-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN        r     1 I1                        *0-0-0/w UBIN        r     1 I2
     7-0-0/w PTR         r     1 OUT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8892)  r     1 NMD_PIT                    0-0-0/d STRC(1512)  r     1 XUG_GETCMD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT                        0-0-0/w ASTR(153)   r     1 SYM
     0-0-0/c ASTR(9)     r     1 TEXTC

PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:126  

   Procedure NMO$OPTIONS requires 235 words for executable code.
   Procedure NMO$OPTIONS requires 12 words of local(AUTO) storage.
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:127  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:128  
          MINI XREF LISTING

ALTERR
     10203**DCL     11786<<ASSIGN  11801<<ASSIGN  11812<<ASSIGN  11826<<ASSIGN  11838<<ASSIGN  11850<<ASSIGN
     11876<<ASSIGN  11892<<ASSIGN  11909<<ASSIGN  11917>>IF
ERRTEXT.GRANS
     10338**DCL     10345--DCLINIT
ERRTEXT.GRANS_
     10345**DCL     11785<>CALL
ERRTEXT.MXDIFF
     10404**DCL     10411--DCLINIT
ERRTEXT.MXDIFF_
     10411**DCL     11811<>CALL
ERRTEXT.NREPORT
     10470**DCL     10477--DCLINIT
ERRTEXT.NREPORT_
     10477**DCL     11837<>CALL
ERRTEXT.OPTION
     10272**DCL     10279--DCLINIT
ERRTEXT.OPTION_
     10279**DCL     11908<>CALL
ERRTEXT.PAUSE
     10536**DCL     10543--DCLINIT
ERRTEXT.PAUSE_
     10543**DCL     11849<>CALL
ERRTEXT.REPORT
     10602**DCL     10609--DCLINIT
ERRTEXT.REPORT_
     10609**DCL     11875<>CALL
I
     10612**DCL     11773<<DOINDEX 11774>>ASSIGN
I1
     10194**DCL        40--PROC    11773>>DOINDEX
I2
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:129  
     10195**DCL        40--PROC    11773>>DOINDEX
NMD_PIT.FLAGS.REPORT#
     10887**DCL     11841<<ASSIGN  11890<<ASSIGN  11895<<ASSIGN
NMD_PIT.GRANS#
     10904**DCL     11789<<CALLBLT 11791>>IF      11791>>IF      11800<<ASSIGN
NMD_PIT.MXDIFF#
     10933**DCL     11815<<CALLBLT 11817>>IF      11825<<ASSIGN
NMD_PIT.OPTIONS.GRANS#
     10956**DCL     11778>>IF      11804<<ASSIGN
NMD_PIT.OPTIONS.MS#
     10962**DCL     11856<<ASSIGN  11863<<ASSIGN
NMD_PIT.OPTIONS.MXDIFF#
     10968**DCL     11809>>IF      11829<<ASSIGN
NMD_PIT.OPTIONS.NREPORT#
     10974**DCL     11834>>IF      11842<<ASSIGN  11872>>IF
NMD_PIT.OPTIONS.PAUSE#
     10980**DCL     11847>>IF      11855<<ASSIGN
NMD_PIT.OPTIONS.REPORT#
     10986**DCL     11834>>IF      11872>>IF      11896<<ASSIGN
NMD_PIT.OPTIONS.SECONDS#
     10992**DCL     11857<<ASSIGN  11864<<ASSIGN
NMD_PIT.PAUSE#
     11005**DCL     11853<<CALLBLT 11865<<ASSIGN  11865>>ASSIGN
NMD_PIT.REPORT.INCR
     11029**DCL     11879<<CALLBLT 11881>>IF      11881>>IF      11891<<ASSIGN
NME$ERRMSG
     10199**DCL-ENT 11785--CALL    11799--CALL    11811--CALL    11824--CALL    11837--CALL    11849--CALL
     11875--CALL    11889--CALL    11908--CALL
NMO#BAD_GRANS
     11087**DCL     11799<>CALL
NMO#BAD_MXDIFF
     11139**DCL     11824<>CALL
NMO#BAD_REPORT
     11191**DCL     11889<>CALL
NMO#DUPE_OPTIONS
     11243**DCL     11785<>CALL    11811<>CALL    11837<>CALL    11849<>CALL    11875<>CALL
PL6.E3A0      #004=NMO$OPTIONS File=NMO$OPTIONS.:E05TSI                          WED 07/30/97 03:52 Page:130  
NMO#NOT_IMPL
     11295**DCL     11908<>CALL
OUT.CODE
     11344**DCL     11775>>DOCASE  11861>>IF
OUT.NSUBLKS
     11348**DCL     11858>>IF
OUT.SUBLK$
     11369**DCL     11774>>ASSIGN  11789>>CALLBLT 11789>>CALLBLT 11815>>CALLBLT 11815>>CALLBLT 11853>>CALLBLT
     11853>>CALLBLT 11860>>ASSIGN  11879>>CALLBLT 11879>>CALLBLT
OUT$
     11375**DCL     11336--IMP-PTR 11385--IMP-PTR 11774<<ASSIGN  11775>>DOCASE  11789>>CALLBLT 11789>>CALLBLT
     11815>>CALLBLT 11815>>CALLBLT 11853>>CALLBLT 11853>>CALLBLT 11858>>IF      11860<<ASSIGN  11860>>ASSIGN
     11861>>IF      11879>>CALLBLT 11879>>CALLBLT
SYM.COUNT
     11408**DCL     11411--IMP-SIZ 11789>>CALLBLT 11815>>CALLBLT 11853>>CALLBLT 11879>>CALLBLT
SYM.TEXT
     11411**DCL     11789>>CALLBLT 11815>>CALLBLT 11853>>CALLBLT 11879>>CALLBLT
TEXTC.L#
     11423**DCL     11423--IMP-SIZ
XUG_GETCMD.OUT$
     11445**DCL     11451--REDEF   11774>>ASSIGN

PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:131  
      812        1        /*M* NMO$REPORT - To do percentage completion reports.            */
      813        2        /*T***********************************************************/
      814        3        /*T*                                                         */
      815        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      816        5        /*T*                                                         */
      817        6        /*T***********************************************************/
      818        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
      819        8        /*F*
      820        9        NAME:           NMO$REPORT
      821       10
      822       11        PURSPOSE:       To do percentage completion reports.
      823       12        */
      824       13        /*D*
      825       14        NAME:           NMO$REPORT
      826       15
      827       16        CALL:           CALL NMO$REPORT ( grans ) ;
      828       17
      829       18        PARAMETERS:
      830       19        */
      831       20        /*K*
      832       21        grans           is a UBIN WORD that specifies the number of granules
      833       22                that have been completed.
      834       23        */
      835       24        /*D*
      836       25        DESCRIPTION:
      837       26
      838       27        The NMO$REPORT procedure is used to do percentage completion
      839       28        reports for COPY and KOMPARE operations.  A report is written
      840       29        to M$LO every time the (integer) percentage of
      841       30        completion changes to the next NMD_PIT.REPORT.INCR increment.
      842       31        */
      843       32        %EJECT ;
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:132  
      844       33        NMO$REPORT:     PROC ( GRANS ) ALTRET ;
      845       34        /*
      846       35                        Includes
      847       36        */
      848       37        %INCLUDE                CP_6 ;
      849     5596        %INCLUDE                NM_MACRO_M ;
      850     7001        /*
      851     7002                        Parameters
      852     7003        */
      853     7004    1   DCL 1 GRANS             SBIN WORD ALIGNED PARAM ;
      854     7005        /*
      855     7006                        Variables
      856     7007        */
      857     7008    1   DCL 1 COMP              SBIN WORD ALIGNED AUTO ;
      858     7009    1   DCL 1 I                 SBIN WORD ALIGNED AUTO ;
      859     7010    1   DCL 1 LINE              CALIGNED STATIC,
      860     7011    1         2 VFC             CHAR(1)  CALIGNED INIT('A'),
      861     7012    1         2 HHMMSS          CHAR(11) CALIGNED INIT('HH:MM:SS.SS'),
      862     7013    1         2 *               CHAR(1)  CALIGNED INIT(' '),
      863     7014    1         2 DEV1            CHAR(4)  CALIGNED INIT(' '),
      864     7015    1         2 *               CHAR(0)  CALIGNED INIT(' and '),
      865     7016    1         2 DEV2            CHAR(4)  CALIGNED INIT(' '),
      866     7017    1         2 *               CHAR(1)  CALIGNED INIT(' '),
      867     7018    1         2 PERCENT         CHAR(3)  CALIGNED INIT(' '),
      868     7019    1         2 *               CHAR(0)  CALIGNED INIT('% completed.') ;
      869     7020    1   DCL 1 M$LO              DCB ;
      870     7021                                %NMD_PIT ( FPTN =
      871     7022              NMD_PIT           , STCLASS = SYMREF
      872     7023                                                                        ) ;
      873     7476                                %FPT_TIME ( FPTN =
      874     7477              TIME              , STCLASS = CONSTANT
      875     7478                                , DEST = LOCAL
      876     7479                                , SOURCE = CLOCK
      877     7480                                , TIME = LINE.HHMMSS
      878     7481                                                                        ) ;
      879     7500                                %FPT_WRITE ( FPTN =
      880     7501              WRITE             , STCLASS = CONSTANT
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:133  
      881     7502                                , BUF = LINE
      882     7503                                , DCB = M$LO
      883     7504                                , VFC = YES
      884     7505                                , WAIT = YES
      885     7506                                                                        ) ;
      886     7537        %EJECT ;
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:134  
      887     7538        /*
      888     7539        Get current time and calculate percentage of completion.
      889     7540        */
      890     7541    1           CALL M$TIME ( TIME ) ;
      891     7542
      892     7543    1           COMP = ( GRANS * 100 ) / NMD_PIT.PACKSIZE ;
      893     7544        /*
      894     7545        Report the percentage of completion if it has changed from the
      895     7546        previous value reported.
      896     7547        */
      897     7548    1           IF  GRANS = 0
      898     7549    1           OR  GRANS >= NMD_PIT.PACKSIZE
      899     7550    1           OR  COMP >= ( NMD_PIT.REPORT.COMP + NMD_PIT.REPORT.INCR )
      900     7551    2           THEN DO ;
      901     7552    2               LINE.DEV1 = SUBSTR ( NMD_PIT.DEV.NAME.C(0), 0, 4 ) ;
      902     7553    2               LINE.DEV2 = SUBSTR ( NMD_PIT.DEV.NAME.C(1), 0, 4 ) ;
      903     7554
      904     7555    2               CALL BINCHAR ( LINE.PERCENT, COMP ) ;
      905     7556    2               IF  COMP < 10
      906     7557    2               THEN
      907     7558    2                   SUBSTR(LINE.PERCENT,0,2) = '  ' ;
      908     7559    2               ELSE IF  COMP < 100
      909     7560    2               THEN
      910     7561    2                   SUBSTR(LINE.PERCENT,0,1) = ' ' ;
      911     7562
      912     7563    2               CALL M$WRITE ( WRITE ) ;
      913     7564
      914     7565    2               IF  GRANS = 0
      915     7566    2               THEN
      916     7567    2                   NMD_PIT.REPORT.COMP = 0 ;
      917     7568    2               ELSE
      918     7569    2                   NMD_PIT.REPORT.COMP   = NMD_PIT.REPORT.COMP +
      919     7570    2                                           NMD_PIT.REPORT.INCR ;
      920     7571    2               NMD_PIT.REPORT.HHMMSS = LINE.HHMMSS ;
      921     7572
      922     7573    2               END ;
      923     7574        /*
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:135  
      924     7575        Return to the calling procedure.
      925     7576        */
      926     7577    1           RETURN ;
      927     7578
      928     7579    1           END NMO$REPORT ;
      929     7580

PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:136  
--  Include file information  --

   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NMO$REPORT.

   Procedure NMO$REPORT requires 59 words for executable code.
   Procedure NMO$REPORT requires 6 words of local(AUTO) storage.

    No errors detected in file NMO$OPTIONS.:E05TSI    .

PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:137  

 Object Unit name= NMO$REPORT                                 File name= NMO$OPTIONS.:E05TOU
 UTS= JUL 30 '97 03:53:13.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    11     13  NMO$REPORT
    2   DCB   even  none     0      0  M$LO
    3  RoData even  UTS     25     31  NMO$REPORT
    4   Proc  even  none    59     73  NMO$REPORT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        1  NMO$REPORT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  NMD_PIT
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:138  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:139  


      812        1        /*M* NMO$REPORT - To do percentage completion reports.            */
      813        2        /*T***********************************************************/
      814        3        /*T*                                                         */
      815        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      816        5        /*T*                                                         */
      817        6        /*T***********************************************************/
      818        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
      819        8        /*F*
      820        9        NAME:           NMO$REPORT
      821       10
      822       11        PURSPOSE:       To do percentage completion reports.
      823       12        */
      824       13        /*D*
      825       14        NAME:           NMO$REPORT
      826       15
      827       16        CALL:           CALL NMO$REPORT ( grans ) ;
      828       17
      829       18        PARAMETERS:
      830       19        */
      831       20        /*K*
      832       21        grans           is a UBIN WORD that specifies the number of granules
      833       22                that have been completed.
      834       23        */
      835       24        /*D*
      836       25        DESCRIPTION:
      837       26
      838       27        The NMO$REPORT procedure is used to do percentage completion
      839       28        reports for COPY and KOMPARE operations.  A report is written
      840       29        to M$LO every time the (integer) percentage of
      841       30        completion changes to the next NMD_PIT.REPORT.INCR increment.
      842       31        */
      843       32        %EJECT ;
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:140  
      844       33        NMO$REPORT:     PROC ( GRANS ) ALTRET ;

     33  4 000000   000000 700200 xent  NMO$REPORT   TSX0  ! X66_AUTO_1
         4 000001   000006 000001                    ZERO    6,1

      845       34        /*
      846       35                        Includes
      847       36        */
      848       37        %INCLUDE                CP_6 ;
      849     5596        %INCLUDE                NM_MACRO_M ;
      850     7001        /*
      851     7002                        Parameters
      852     7003        */
      853     7004    1   DCL 1 GRANS             SBIN WORD ALIGNED PARAM ;
      854     7005        /*
      855     7006                        Variables
      856     7007        */
      857     7008    1   DCL 1 COMP              SBIN WORD ALIGNED AUTO ;
      858     7009    1   DCL 1 I                 SBIN WORD ALIGNED AUTO ;
      859     7010    1   DCL 1 LINE              CALIGNED STATIC,
      860     7011    1         2 VFC             CHAR(1)  CALIGNED INIT('A'),
      861     7012    1         2 HHMMSS          CHAR(11) CALIGNED INIT('HH:MM:SS.SS'),
      862     7013    1         2 *               CHAR(1)  CALIGNED INIT(' '),
      863     7014    1         2 DEV1            CHAR(4)  CALIGNED INIT(' '),
      864     7015    1         2 *               CHAR(0)  CALIGNED INIT(' and '),
      865     7016    1         2 DEV2            CHAR(4)  CALIGNED INIT(' '),
      866     7017    1         2 *               CHAR(1)  CALIGNED INIT(' '),
      867     7018    1         2 PERCENT         CHAR(3)  CALIGNED INIT(' '),
      868     7019    1         2 *               CHAR(0)  CALIGNED INIT('% completed.') ;
      869     7020    1   DCL 1 M$LO              DCB ;
      870     7021                                %NMD_PIT ( FPTN =
      871     7022              NMD_PIT           , STCLASS = SYMREF
      872     7023                                                                        ) ;
      873     7476                                %FPT_TIME ( FPTN =
      874     7477              TIME              , STCLASS = CONSTANT
      875     7478                                , DEST = LOCAL
      876     7479                                , SOURCE = CLOCK
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:141  
      877     7480                                , TIME = LINE.HHMMSS
      878     7481                                                                        ) ;
      879     7500                                %FPT_WRITE ( FPTN =
      880     7501              WRITE             , STCLASS = CONSTANT
      881     7502                                , BUF = LINE
      882     7503                                , DCB = M$LO
      883     7504                                , VFC = YES
      884     7505                                , WAIT = YES
      885     7506                                                                        ) ;
      886     7537        %EJECT ;
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:142  
      887     7538        /*
      888     7539        Get current time and calculate percentage of completion.
      889     7540        */
      890     7541    1           CALL M$TIME ( TIME ) ;

   7541  4 000002   000000 630400 3                  EPPR0   TIME
         4 000003   020004 713400                    CLIMB   8196
         4 000004   402000 401760                    pmme    nvectors=5

      891     7542
      892     7543    1           COMP = ( GRANS * 100 ) / NMD_PIT.PACKSIZE ;

   7543  4 000005   200003 470500                    LDP0    @GRANS,,AUTO
         4 000006   000000 236100                    LDQ     0,,PR0
         4 000007   000144 402007                    MPY     100,DL
         4 000010   000307 235000 xsym               LDA     NMD_PIT+199
         4 000011   000014 605000 4                  TPL     s:7543+7
         4 000012   000000 236003                    LDQ     0,DU
         4 000013   000015 710000 4                  TRA     s:7543+8
         4 000014   000307 506000 xsym               DIV     NMD_PIT+199
         4 000015   200004 756100                    STQ     COMP,,AUTO

      893     7544        /*
      894     7545        Report the percentage of completion if it has changed from the
      895     7546        previous value reported.
      896     7547        */
      897     7548    1           IF  GRANS = 0

   7548  4 000016   000000 235100                    LDA     0,,PR0
         4 000017   000030 600000 4                  TZE     s:7552
         4 000020   000000 236100                    LDQ     0,,PR0
         4 000021   000024 604000 4                  TMI     s:7548+6
         4 000022   000307 116000 xsym               CMPQ    NMD_PIT+199
         4 000023   000030 603000 4                  TRC     s:7552
         4 000024   000312 236000 xsym               LDQ     NMD_PIT+202
         4 000025   000316 036000 xsym               ADLQ    NMD_PIT+206
         4 000026   200004 116100                    CMPQ    COMP,,AUTO
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:143  
         4 000027   000072 605400 4                  TPNZ    s:7577

      898     7549    1           OR  GRANS >= NMD_PIT.PACKSIZE
      899     7550    1           OR  COMP >= ( NMD_PIT.REPORT.COMP + NMD_PIT.REPORT.INCR )
      900     7551    2           THEN DO ;

      901     7552    2               LINE.DEV1 = SUBSTR ( NMD_PIT.DEV.NAME.C(0), 0, 4 ) ;

   7552  4 000030   040000 100400                    MLR     fill='040'O
         4 000031   000020 200004 xsym               ADSC9   NMD_PIT+16               cn=1,n=4
         4 000032   000003 200004 1                  ADSC9   LINE+3                   cn=1,n=4

      902     7553    2               LINE.DEV2 = SUBSTR ( NMD_PIT.DEV.NAME.C(1), 0, 4 ) ;

   7553  4 000033   040000 100400                    MLR     fill='040'O
         4 000034   000052 200004 xsym               ADSC9   NMD_PIT+42               cn=1,n=4
         4 000035   000005 400004 1                  ADSC9   LINE+5                   cn=2,n=4

      903     7554
      904     7555    2               CALL BINCHAR ( LINE.PERCENT, COMP ) ;

   7555  4 000036   000000 301500                    BTD
         4 000037   200004 000004                    NDSC9   COMP,,AUTO               cn=0,s=lsgnf,sf=0,n=4
         4 000040   000006 630003 1                  NDSC9   LINE+6                   cn=3,s=nosgn,sf=0,n=3

      905     7556    2               IF  COMP < 10

   7556  4 000041   200004 235100                    LDA     COMP,,AUTO
         4 000042   000012 115007                    CMPA    10,DL
         4 000043   000050 605000 4                  TPL     s:7559

      906     7557    2               THEN
      907     7558    2                   SUBSTR(LINE.PERCENT,0,2) = '  ' ;

   7558  4 000044   040000 100400                    MLR     fill='040'O
         4 000045   000030 000002 3                  ADSC9   WRITE+12                 cn=0,n=2
         4 000046   000006 600002 1                  ADSC9   LINE+6                   cn=3,n=2
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:144  
         4 000047   000054 710000 4                  TRA     s:7563

      908     7559    2               ELSE IF  COMP < 100

   7559  4 000050   000144 115007                    CMPA    100,DL
         4 000051   000054 605000 4                  TPL     s:7563

      909     7560    2               THEN
      910     7561    2                   SUBSTR(LINE.PERCENT,0,1) = ' ' ;

   7561  4 000052   000040 236007                    LDQ     32,DL
         4 000053   000006 552004 1                  STBQ    LINE+6,'04'O

      911     7562
      912     7563    2               CALL M$WRITE ( WRITE ) ;

   7563  4 000054   000014 630400 3                  EPPR0   WRITE
         4 000055   040001 713400                    CLIMB   write
         4 000056   401400 401760                    pmme    nvectors=4

      913     7564
      914     7565    2               IF  GRANS = 0

   7565  4 000057   200003 470500                    LDP0    @GRANS,,AUTO
         4 000060   000000 235100                    LDA     0,,PR0
         4 000061   000064 601000 4                  TNZ     s:7569

      915     7566    2               THEN
      916     7567    2                   NMD_PIT.REPORT.COMP = 0 ;

   7567  4 000062   000312 450000 xsym               STZ     NMD_PIT+202
         4 000063   000067 710000 4                  TRA     s:7571

      917     7568    2               ELSE
      918     7569    2                   NMD_PIT.REPORT.COMP   = NMD_PIT.REPORT.COMP +

   7569  4 000064   000312 236000 xsym               LDQ     NMD_PIT+202
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:145  
         4 000065   000316 036000 xsym               ADLQ    NMD_PIT+206
         4 000066   000312 756000 xsym               STQ     NMD_PIT+202

      919     7570    2                                           NMD_PIT.REPORT.INCR ;
      920     7571    2               NMD_PIT.REPORT.HHMMSS = LINE.HHMMSS ;

   7571  4 000067   040000 100400                    MLR     fill='040'O
         4 000070   000000 200013 1                  ADSC9   LINE                     cn=1,n=11
         4 000071   000313 000014 xsym               ADSC9   NMD_PIT+203              cn=0,n=12

      921     7572
      922     7573    2               END ;

      923     7574        /*
      924     7575        Return to the calling procedure.
      925     7576        */
      926     7577    1           RETURN ;

   7577  4 000072   000000 702200 xent               TSX2  ! X66_ARET
      927     7578
      928     7579    1           END NMO$REPORT ;
      929     7580

PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:146  
--  Include file information  --

   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NMO$REPORT.
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:147  

 **** Variables and constants ****

  ****  Section 001  Data  NMO$REPORT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(378)   r     1 LINE

  ****  Section 003 RoData NMO$REPORT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 TIME                      14-0-0/d STRC(432)   r     1 WRITE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @GRANS                     4-0-0/w SBIN        r     1 COMP
    *0-0-0/w SBIN        r     1 GRANS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8892)  r     1 NMD_PIT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:148  


   Procedure NMO$REPORT requires 59 words for executable code.
   Procedure NMO$REPORT requires 6 words of local(AUTO) storage.

    No errors detected in file NMO$OPTIONS.:E05TSI    .
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:149  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:150  
          MINI XREF LISTING

COMP
      7008**DCL      7543<<ASSIGN   7548>>IF       7555>>CALLBLT  7556>>IF       7559>>IF
GRANS
      7004**DCL        33--PROC     7543>>ASSIGN   7548>>IF       7548>>IF       7565>>IF
LINE
      7010**DCL      7524--DCLINIT  7525--DCLINIT
LINE.DEV1
      7014**DCL      7552<<ASSIGN
LINE.DEV2
      7016**DCL      7553<<ASSIGN
LINE.HHMMSS
      7012**DCL      7494--DCLINIT  7495--DCLINIT  7571>>ASSIGN
LINE.PERCENT
      7018**DCL      7555<<CALLBLT  7558<<ASSIGN   7561<<ASSIGN
M$TIME
      5591**DCL-ENT  7541--CALL
M$WRITE
      5525**DCL-ENT  7563--CALL
NMD_PIT.DEV.NAME.C
      7149**DCL      7552>>ASSIGN   7553>>ASSIGN
NMD_PIT.PACKSIZE
      7408**DCL      7543>>ASSIGN   7548>>IF
NMD_PIT.REPORT.COMP
      7428**DCL      7548>>IF       7567<<ASSIGN   7569<<ASSIGN   7569>>ASSIGN
NMD_PIT.REPORT.HHMMSS
      7432**DCL      7571<<ASSIGN
NMD_PIT.REPORT.INCR
      7437**DCL      7548>>IF       7569>>ASSIGN
TIME
      7492**DCL      7541<>CALL
TIME.V
      7496**DCL      7492--DCLINIT
PL6.E3A0      #005=NMO$REPORT File=NMO$OPTIONS.:E05TSI                           WED 07/30/97 03:53 Page:151  
WRITE
      7523**DCL      7563<>CALL
WRITE.STATION_
      7525**DCL      7525--REDEF
WRITE.V
      7526**DCL      7523--DCLINIT
WRITE.V.DVBYTE.VFC#
      7532**DCL      7532--REDEF
