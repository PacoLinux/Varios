

CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=1  
        1         1             /*M*  NAME: zb6$main:c - driver module for the ou generator.
        2         2                   This is the driver routine for the generation of CP-6
        3         3                   object units. Amoung the functions that are performed
        4         4                   in this routine are the generation of the specific
        5         5                   parts of the object unit that have to do with the initial
        6         6                   and final phases of the object unit generation.
        7         7             */
        8         8             #include <stdio:h>
        9         9             #include <errno:h>
       10        10             #include "codegen:h"
       11        11             #include "zb6$ougen:h"
       12        12             #include "zb6$instructions:h"
       13        13             #include "zb6$tables:h"
       14        14             #include "zb6$regopt:h"
       15        15
       16        16             #define pl6str(_s_)  ( *(int *) buffer =0,\
       17        16                   strcpy( &buffer[2], _s_ ),\
       18        16                   *(int *)buffer |= strlen( &buffer[2] ) << 18)
       19        19
       20        20             #define  pl6str2(_s_)  ( *(int *) buffer =0,\
       21        20                   strcpy( &buffer[1], _s_ ),\
       22        20                   *(int *)buffer |= strlen( &buffer[1] ) << 27)
       23        23
       24        24             char buffer[512] ;
       25        25
       26        26
       27        27             int curr_eol_flag ;
       28        28
       29        29             int reloc_addr ;
       30        30
       31        31             struct reloc_struct reloc[8] = { 0,0,0,
       32        32    1                                       0,0,RELADDOP,
       33        33    1                                       0,17,RELADDOP,
       34        34    1                                       24,35,RELADDOP,
       35        35    1                                       9,35,0,
       36        36    1                                       18,35,0,
       37        37    1                                       0,0,RELSTORER,
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=2  
       38        38    1                                       0,0,0 };
       39        39
       40        40             int reloc_directive ;
       41        41             int reloc_type ;
       42        42             int reloc_section ;
       43        43             int instruct_type ;
       44        44
       45        45             struct eis_oper  m1_operand , m1_set ={0,0,0,0,0,0,0,0};
       46        46             struct eis_oper  m2_operand , m2_set ={0,0,0,0,0,0,0,0};
       47        47             struct inst_std instr_set ={0,0,0,0,0};
       48        48             struct eis_desc set_eis_desc ={0,0,0,0};
       49        49             struct eis_desc_ptr set_eis_desc_ptr ={0,0,0,0,0};
       50        50
       51        51             struct sec_table s_s_table[20] ;
       52        52             int xbo_seg_ref_id;
       53        53             int procsec ;
       54        54             int datasec ;
       55        55             int conssec ;
       56        56             int opt;
       57        57             int register_opt_flag = {1};
       58        58             int first_func_flag;
       59        59             struct reg_list cr_list[30], cr_list_init={0,0,0,0,0,0};
       60        60             int instr_drop_count ;
       61        61             int eol_flag ;
       62        62             int eof_flag;
       63        63             int debug_flag = 1; /* temp setting- need real ref to global set
       64        64                                    in the root by options scanner. */
       65        65             int debug_print_flag = 0; /* debug print flag for ou generator.. */
       66        66             int debug_drop_flag =1; /* debug print for dropped instructions in
       67        67                                       register optimization mode. */
       68        68             int log_blk_num ;  /* logical blk number for debug stuff.. */
       69        69             int var_num ;  /* curr debug tbl ariable entry number.  */
       70        70
       71        71             extern int set_control ();
       72        72             extern int set_pointer();
       73        73             extern int set_addr_pointer();
       74        74
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=3  
       75        75             struct instr curr_instr, curr_i_set = {"          ",0,0,0,0,0,0,0,0,0};
       76        76             struct instr prev_instr;
       77        77             struct instr next_instr;
       78        78
       79        79             int int_constant_flag;
       80        80             int first_blk_flag ;
       81        81             int first_prog_line;
       82        82             int instr_flag ;
       83        83             int symdef_flag ;
       84        84             int static_terminate_flag;
       85        85             int static_data_flag;
       86        86             char static_con_name[130];
       87        87             char static_data_name[130];
       88        88             int static_con_ref_num;
       89        89             int static_data_ref_num;
       90        90             int static_con_size ;
       91        91             int static_data_size ;
       92        92             int static_first_use_flag ;
       93        93             int static_function_flag;
       94        94             int debug_rec_match_flag ;
       95        95             int global_store_flag;
       96        96             int active_label; /* last active stmt lbl in the debug schema. */
       97        97
       98        98
       99        99             int *dfloat_ptr ;
      100       100             int *int_ptr ;
      101       101             int *string_ptr ;
      102       102             labels_p first_lbl_tbl_ptr;
      103       103             labels_p lbl_tbl_ptr ;
      104       104             sym_tbl_p first_sym_tbl_ptr ;
      105       105             sym_tbl_p sym_tbl_ptr;
      106       106             line_tbl_p line_tbl_ptr;
      107       107
      108       108
      109       109             int curr_con_section; /* the current active control section. */
      110       110             char static_func_suffix[64];
      111       111
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=4  
      112       112
      113       113             char progname[65];  /* hold prog/file name being compiler.*/
      114       114             FILE *infile ;
      115       115             FILE *oufile ;
      116       116             int oudcbnum ;
      117       117             int *oudcbptr ;
      118       118             char ououtput[130];
      119       119             char cginput[130];
      120       120             int error_severity;
      121       121             int forward_ref_flag ;
      122       122             int forward_ref_count;
      123       123             int ref_name_flag ;  /* have a sym ent ref name on tsx instruction, */
      124       124             fwd_ref_p   fwd_p;
      125       125             int fwd_tbl_size ;
      126       126
      127       127             int integer_only_flag;
      128       128             char *cur_func;
      129       129             char *cur_file = (char *) 0;
      130       130             int line_num = 0;
      131       131             char *OUGEN_PHASE = "Object Generation:";
      132       132             #define BRK_FMT   "%s File=%s  Line=%d   Function=%s,\n"
      133       133
      134       134
      135       135             extern int conv_i_to_f();
      136       136             extern int conv_f_to_i();
      137       137             extern int set_constant();
      138       138             extern int set_file_name();
      139       139             extern int set_static_storage();
      140       140             extern int *myalloc();
      141       141             extern void get_symbol_ids();
      142       142             extern void set_entry_def();
      143       143             extern void set_debug_stmt_info();
      144       144             extern void set_label_info();
      145       145             extern void set_var_info();
      146       146             extern void set_debug_blk_info();
      147       147             extern void set_debug_fun_info();
      148       148             extern void set_line();
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=5  
      149       149             extern void incr_line();
      150       150             extern void get_eol();
      151       151             extern void set_data_ref_num();
      152       152             extern void set_con_ref_num();
      153       153             extern void walk_lbls();
      154       154             extern void walk_vars();
      155       155             extern void check_for_static_terminate();
      156       156             extern void check_if_first_call();
      157       157             extern void set_global_debug_vars();
      158       158
      159       159
      160       160                   char blnk_buff[] = {"                                                "};

      161       161
      162       162             int  c ;
      163       163
      164       164
      165       165             int lo_flag = { 0 }; /* dummy for the moment - should be an
      166       166                                   external reference to flag set in root. */
      167       167             int debuflag = {-1} ;
      168       168             int pm_flag = {-1} ;
      169       169             int dm_flag = {-1} ;
      170       170             int mdm_flag = {-1} ;
      171       171             int two_arg = {2};
      172       172             int zero_arg = {0};
      173       173             int one_arg = {1};
      174       174             int three_arg = {3};
      175       175             int minus_one_arg = {-1};
      176       176             int compiler_id = {COMPILER_ID};
      177       177             int codesect = {CODESECT};
      178       178             int datasect = {DATASECT};
      179       179             int zeroinit = {ZEROINIT};
      180       180             int evenbound = {EVENBOUND};
      181       181             int noinit = {NOINIT} ;
      182       182             int eightbound = {EIGHTBOUND} ;
      183       183             int conssect = {CONSSECT} ;
      184       184             int noname = {NONAME};
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=6  
      185       185
      186       186             int trustme = {-1};
      187       187
      188       188             /*    Main driver routine follows......    */
      189       189
      190       190             main (argc, argv)
      191       191                   int argc ;
      192       192                   char *argv[];
      193       193                   {
      194       194    1        int i;
      195       195    1        void *ent_ptr1;
      196       196    1        void *ent_ptr2;
      197       197    1        char tmp1[130];
      198       198    1        void ZB_OPEN_OU_FILE();
      199       199    1        void ZB_CLOSE_OU_FILE();
      200       200    1
      201       201    1        void loerrhandler();
      202       202    1        void LOSTMT_HANDLER();
      203       203    1              strcpy (progname, *argv );
      204       204    1              while (argc-- > 1 && **++argv == '-' )
      205       205    1               flags (*argv);
      206       206    1
      207       207    1              if (argc > 2 || argc < 2 ) {
      208       208    2                fprintf (stderr, "Arg usage erro in %s, /n", progname);
      209       209    2                exit(8); }
      210       210    1              strcpy( cginput , *argv ) ;
      211       211    1              **++argv ;
      212       212    1              strcpy (ououtput , *argv ) ;
      213       213    1
      214       214    1              pl6str2 (ououtput);
      215       215    1              ZB_OPEN_OU_FILE(buffer, &oudcbnum, &oudcbptr);
      216       216    1              if (lo_flag)
      217       217    1                loinit();  /* initialize the LO handler */
      218       218    1
      219       219    1              infile = fopen (cginput,"r");
      220       220    1              if (infile == NULL) {
      221       221    2                printf(" bad input file - file not found. \n");
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=7  
      222       222    2                return; }
      223       223    1
      224       224    1              vmeminit ( 4096, 3, 40);
      225       225    1              /* The virtual memory initialization routine. */
      226       226    1
      227       227    1              strcpy (static_func_suffix, "    ");
      228       228    1              static_function_flag = 0;
      229       229    1              static_data_flag = -1;
      230       230    1              static_terminate_flag = 0;
      231       231    1              static_first_use_flag = -1;
      232       232    1              static_con_size = 0 ;
      233       233    1              static_data_size = 0 ;
      234       234    1              debug_rec_match_flag = 0;
      235       235    1              active_label = 0;
      236       236    1              global_store_flag = 0;
      237       237    1              blk_count = 0;
      238       238    1              stmt_count = 0;
      239       239    1              first_blk_flag = 1;
      240       240    1              first_prog_line = 1;
      241       241    1              symdef_flag = 0;
      242       242    1              integer_only_flag = 0;
      243       243    1              int_constant_flag = 0;
      244       244    1
      245       245    1              lbl_tbl_ptr = NULL;
      246       246    1              line_tbl_ptr = NULL ;
      247       247    1              first_lbl_tbl_ptr = NULL;
      248       248    1              first_sym_tbl_ptr = NULL;
      249       249    1              sym_tbl_ptr = NULL ;
      250       250    1              dfloat_ptr = NULL;
      251       251    1              int_ptr = NULL;
      252       252    1              string_ptr = NULL;
      253       253    1
      254       254    1              fwd_tbl_size = 700;
      255       255    1              fwd_p = (fwd_ref_p) myalloc( fwd_tbl_size * sizeof(short));
      256       256    1
      257       257    1              for (i=0; i < 128; i++) {
      258       258    2                label_hash[i] = NULL ;
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=8  
      259       259    2                symbol_hash[i] = NULL ;
      260       260    2              }  /* end of the for loop. */
      261       261    1              instr_drop_count = 0;
      262       262    1              ro_reset_register_status();
      263       263    1              eof_flag = 0;
      264       264    1
      265       265    1              cur_func = progname;
      266       266    1              cur_file = ououtput;
      267       267    1              set_break_vars (BRK_FMT, &OUGEN_PHASE, &cur_file, (char *) 0,
      268       268    1                             &line_num, &cur_func, (int *) 0, (int *) 0);
      269       269    1             for ( ; eof_flag == 0 ; ) {  /* loop onr functions until eof. */
      270       270    2        /*    go do the program initialization at this point..  */
      271       271    2
      272       272    2        /*    go do the processing of the code form the code generator
      273       273    2              and build the o.u. records for the code generated for
      274       274    2              the program.
      275       275    2        */
      276       276    2              program_gen ();
      277       277    2
      278       278    2        /*    generate the close code for the object units.
      279       279    2        */
      280       280    2              outerm();
      281       281    2
      282       282    2        /*    If lo has been asked for, go generate the lo listing for
      283       283    2              the program.
      284       284    2        */
      285       285    2              if (lo_flag != 0) {
      286       286    3                if (static_function_flag == 0) {
      287       287    4                  if (static_terminate_flag == 0) {
      288       288    5                    pl6str2 (progname); }
      289       289    4                  else {
      290       290    5                    strcpy(tmp1,"_");
      291       291    5                    strcat(tmp1,progname); strcat(tmp1,"#f#");
      292       292    5                    pl6str2(tmp1); } }
      293       293    3                else {
      294       294    4                  strcpy(tmp1, progname);
      295       295    4                  strcat(tmp1, "#");
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=9  
      296       296    4                  strcat(tmp1, static_name);
      297       297    4                  pl6str2(tmp1);    }
      298       298    3                if (buffer[0] > 31) {  /*********** temp **************/
      299       299    4                  buffer[0] = 31;
      300       300    4                  buffer[31] = '#'; }
      301       301    3                ent_ptr2 = (void (*)()) loerrhandler ;
      302       302    3                ent_ptr1 = (void (*)()) LOSTMT_HANDLER;
      303       303    3                ZPC_UNGMAP(&oudcbnum,buffer , &lo_flag, &dm_flag, &pm_flag,
      304       304    3                   &mdm_flag, &ent_ptr1 , &ent_ptr2 );
      305       305    3                }
      306       306    2
      307       307    2              c = getc(infile);
      308       308    2              if ( c== EOF ) {
      309       309    3                 eof_flag =  -1; }
      310       310    2              else {
      311       311    3                 ungetc(c,infile);
      312       312    3                 walk_lbls();
      313       313    3                 walk_vars(); }
      314       314    2
      315       315    2              }  /* end of the for loops on eof_flag. */
      316       316    1              ZB_CLOSE_OU_FILE ( &oudcbnum);
      317       317    1              if (lo_flag)
      318       318    1                 loclose();
      319       319    1
      320       320    1
      321       321    1              if (instr_drop_count != 0 && debug_drop_flag != 0) {
      322       322    2                 printf ("The number of instructions deleted is %d,\n",instr_drop_coun
                               t);
      323       323    2              }
      324       324    1              exit (0);
      325       325    1              }
      326       326
      327       327             /*    the following routine processes the options that are assoicated
      328       328                   with the call to the CP-6 object unit generator.
      329       329                   The follwoing options are accepted by this function:
      330       330                   'A' - specifies that debug info for all instructions is to
      331       331                         dumped to listin device.
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=10 
      332       332                   'D' - specifies all deleted instructions are to be printed
      333       333                         with the location that they were deleted.
      334       334                   'N' - turns register optimization off.
      335       335                   'O' - turns register optimization on (default is on).
      336       336                   'Q' - truns all debug printout off.
      337       337             */
      338       338             flags(s) register char *s; {
      339       339    1        #define TRUE 1
      340       340    1        #define FALSE 0
      341       341    1
      342       342    1              for (s++;*s;s++)
      343       343    1               switch(*s) {
      344       344    2                case 'D': debug_drop_flag =TRUE; break ;
      345       345    2                case 'N': register_opt_flag = FALSE ; break ;
      346       346    2                case 'Q': debug_print_flag = FALSE;
      347       347    2                          debug_drop_flag = FALSE;
      348       348    2                          break;
      349       349    2                case 'O': register_opt_flag = TRUE; break;
      350       350    2                case 'A': debug_print_flag = TRUE ; break;
      351       351    2                default:
      352       352    2                  printf(" Illegal object generator option.  \n");
      353       353    2                  printf (" The follwoing options are accepted by this function: \n");

      354       354    2                  printf (" 'A' - specifies that debug info for all instructions is to
                                 \n");
      355       355    2                  printf ("       dumped to listin device.  \n");
      356       356    2                  printf (" 'D' - specifies all deleted instructions are to be printed
                                 \n");
      357       357    2                  printf ("       with the location that they were deleted.  \n");
      358       358    2                  printf (" 'N' - turns register optimization off.  \n");
      359       359    2                  printf (" 'O' - turns register optimization on (default is on).  \n"
                               );
      360       360    2                  printf (" 'Q' - truns all debug printout off.  \n");
      361       361    2                  printf (" Compilation terminated. ,\n");
      362       362    2                  exit (0);
      363       363    2                }
      364       364    1              }
CC.C03    File=zb6$main:c.:ZBC3TSI                                                  Fri Aug 22 1997  Page=11 
      365       365             /*I*
      366       366                   NAME: No_Mem
      367       367                   purpose: This routine is a error return routine for all
      368       368                   the print alising libary routine.....
      369       369             */
      370       370             No_Mem () {
      371       371    1              printf (" An error occured in the printing of a listing..");
      372       372    1              exit(0);
      373       373    1        }
      374       374
      375       375             /*I*
      376       376                   NAME: zb6_dummy
      377       377                   purpose: This routine is a dummy routine just to get the defs
      378       378                            needed for the listing routines
      379       379             */
      380       380             zb6_dummy () {
      381       381    1           zb_listing_start_listing ();
      382       382    1        }
---  Include file information  ---

   stdio:h.:LIBRARY. is referenced
   errno:h.:LIBRARY. is referenced
   codegen:h.:ZBC3TOU. is referenced
   zb6$ougen:h.:ZBC3TOU. is referenced
   zb6$instructions:h.:ZBC3TOU. is referenced
   zb6$tables:h.:ZBC3TOU. is referenced
   zb6$regopt:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zb6$main:c.:ZBC3TSI
