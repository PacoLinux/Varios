VERSION E05

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:1    
        1        1        /*M* TOU$REMREF     DEckfile Editor Routine REMOVE REFERENCE Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$REMREF
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine REMOVE REFERENCE Function
       14       14              DESCRIPTION: This program is called when the REMREF function
       15       15                           is invoked by the  CP-6 deckfile editor driver.
       16       16                           This program removes the catalog reference to a
       17       17                           deck  from the catalog and  adjusts the  deck's
       18       18                           reference list.
       19       19              REFERENCE:   CP-6 Release C0M0
       20       20              LAST UPDATE: 10/27/83
       21       21        */
       22       22        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:2    
       23       23        /*F*  NAME:        TOU$REMREF
       24       24              DESCRIPTION: Procedure Nesting Hierarchy
       25       25
       26       26              TOU$REMREF: procedure
       27       27              TOU$RR_REMOVE_FROM_CATALOG: entry ALTRET
       28       28              TOU$RR_REMOVE_FROM_REFLIST: entry ALTRET
       29       29              TOU$RR_DELETE_CATALOG: entry ALTRET
       30       30
       31       31                 RR_INIT_DUP: procedure
       32       32                 RR_COMMAND_SETUP: procedure ALTRET
       33       33                 RR_FIND_DECK: procedure ALTRET
       34       34                 RR_GET_REFLIST: procedure ALTRET
       35       35                 RR_REMOVE_FROM_REFLIST: procedure ALTRET
       36       36                 RR_REMOVE_FROM_CATALOG: procedure (LR) ALTRET
       37       37                 RR_ADJUST_REFLIST: procedure (OM, OC, NM, NC) ALTRET
       38       38                 RR_DELETE_CATALOG: procedure ALTRET
       39       39                    RR_REORDER_REFLISTS: procedure (OM, NM) ALTRET
       40       40                 RR_ADJUST_CATALOG: procedure ALTRET
       41       41                 RR_ADJUST_MASTER_CATALOG: procedure ALTRET
       42       42                 RR_SAVE_LOG: procedure ALTRET
       43       43
       44       44        */
       45       45        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:3    
       46       46        TOU$REMREF: PROC ALTRET ;
       47       47
       48       48        /* Include Files */
       49       49
       50       50           %INCLUDE TOU_DEER_M ;
       51     1461           %INCLUDE TOU_RQSTS_E ;
       52     1536           %INCLUDE TO_PERR_C ;
       53     2121           %INCLUDE XU_MACRO_C ;
       54     5227
       55     5228        /* Macros */
       56     5229
       57     5230           %DUP (STCLASS = SYMREF) ;
       58     5373           %CATALOG_DATA (STCLASS = SYMREF) ;
       59     5387           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
       60     5401           %CATALOG_KEY (STCLASS = SYMREF) ;
       61     5415           %CATALOG_SEARCH_KEY (STCLASS = SYMREF) ;
       62     5427           %MASTER_DATA (STCLASS = SYMREF) ;
       63     5441           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
       64     5455           %OBJECT (STCLASS = SYMREF) ;
       65     5518           %OBJECT_KEY (STCLASS = SYMREF) ;
       66     5531           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       67     5545           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
       68     5560           %OBJECT_SEARCH_KEY (STCLASS = SYMREF) ;
       69     5572           %SUBCATALOG_KEY (STCLASS = SYMREF) ;
       70     5586
       71     5587        /* Variables */
       72     5588
       73     5589    1      DCL SAVED_MASTER_ENTRY#             UBIN HALF HALIGNED ;
       74     5590    1      DCL SAVED_CATALOG_ENTRY#            UBIN HALF HALIGNED ;
       75     5591           %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:4    
       76     5592        /* External Entry Points */
       77     5593
       78     5594    1      DCL TOU$DU_SET_DF_FID               ENTRY ALTRET ;
       79     5595    1      DCL TOU$DU_OPEN_DF                  ENTRY ALTRET ;
       80     5596    1      DCL TOU$DU_CLOSE_DF                 ENTRY ALTRET ;
       81     5597
       82     5598    1      DCL TOU$DU_USER_WRITE               ENTRY ALTRET ;
       83     5599    1      DCL TOU$DU_PRINTER_WRITE            ENTRY ALTRET ;
       84     5600    1      DCL TOU$DU_UPDATE_LOG               ENTRY ALTRET ;
       85     5601
       86     5602    1      DCL TOU$DFU_DF_RD_MASTER_ENTRY      ENTRY ALTRET ;
       87     5603    1      DCL TOU$DFU_DF_RD_CATALOG_CONTROL   ENTRY ALTRET ;
       88     5604    1      DCL TOU$DFU_DF_RD_CATALOG_ENTRY     ENTRY ALTRET ;
       89     5605    1      DCL TOU$DFU_DF_RD_OBJECT            ENTRY ALTRET ;
       90     5606    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST    ENTRY ALTRET ;
       91     5607
       92     5608    1      DCL TOU$DFU_DF_DL_CATALOG_ENTRY     ENTRY ALTRET ;
       93     5609    1      DCL TOU$DFU_DF_DL_MASTER_ENTRY      ENTRY ALTRET ;
       94     5610    1      DCL TOU$DFU_DF_DL_CATALOG           ENTRY ALTRET ;
       95     5611
       96     5612    1      DCL TOU$DFU_DF_WR_MASTER_CONTROL    ENTRY ALTRET ;
       97     5613    1      DCL TOU$DFU_DF_WR_MASTER_ENTRY      ENTRY ALTRET ;
       98     5614    1      DCL TOU$DFU_DF_WR_CATALOG_CONTROL   ENTRY ALTRET ;
       99     5615    1      DCL TOU$DFU_DF_WR_CATALOG_ENTRY     ENTRY ALTRET ;
      100     5616    1      DCL TOU$DFU_DF_WR_OBJECT_REFLIST    ENTRY ALTRET ;
      101     5617    1      DCL TOU$DFU_DF_WR_LOG               ENTRY ALTRET ;
      102     5618    1      DCL TOU$DFU_DF_RD_LOG               ENTRY ALTRET ;
      103     5619
      104     5620    1      DCL TOU$L_SHOW_DCB                  ENTRY ;
      105     5621    1      DCL TOU$ND_FIND_CATALOG             ENTRY ALTRET ;
      106     5622           %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:5    
      107     5623        /* Main Code */
      108     5624
      109     5625    1      CALL RR_INIT_DUP ;
      110     5626    1      CALL RR_COMMAND_SETUP ALTRET (ERROR_RETURN) ;
      111     5627    1      CALL TOU$L_SHOW_DCB ;
      112     5628    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;
      113     5629    1      CALL TOU$ND_FIND_CATALOG ALTRET (ERROR_RETURN) ;
      114     5630    1      CALL TOU$DFU_DF_RD_LOG ALTRET (ERROR_RETURN) ;
      115     5631    1      CALL RR_FIND_DECK ALTRET (ERROR_RETURN) ;
      116     5632    1      CALL RR_GET_REFLIST ALTRET (ERROR_RETURN) ;
      117     5633    1      DUP.BREAK_DISABLED = %TRUE ;
      118     5634    1      CALL RR_REMOVE_FROM_REFLIST ALTRET (ERROR_RETURN) ;
      119     5635    1      CALL RR_REMOVE_FROM_CATALOG (%TRUE) ALTRET (ERROR_RETURN) ;
      120     5636    1      CALL RR_ADJUST_MASTER_CATALOG ALTRET (ERROR_RETURN) ;
      121     5637    1      CALL RR_SAVE_LOG ALTRET (ERROR) ;
      122     5638    1      DUP.BREAK_DISABLED = %FALSE ;
      123     5639    1      CALL TOU$DU_CLOSE_DF ALTRET (ERROR_RETURN) ;
      124     5640
      125     5641        /* NORMAL_RETURN: */
      126     5642    1      DUP.MSG_CODE = %T$RR_SUCCESS;
      127     5643    1      CALL TOU$DU_USER_WRITE ;
      128     5644    1      RETURN ;
      129     5645
      130     5646    1   ERROR_RETURN:
      131     5647    1      DUP.BREAK_DISABLED = %FALSE ;
      132     5648    1      CALL TOU$DU_CLOSE_DF ;
      133     5649    1      DUP.MSG_CODE = %T$RR_FAILURE;
      134     5650    1      CALL TOU$DU_USER_WRITE ;
      135     5651    1      RETURN ;
      136     5652
      137     5653        /* End Of Main */
      138     5654        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:6    
      139     5655        /*D*  NAME:        TOU$RR_REMOVE_FROM_CATALOG
      140     5656              ENTRY:
      141     5657              AUTHOR:      Scott S. Sheppard
      142     5658              PURPOSE:     Remove Reference Entry Point
      143     5659              INTERFACE:   RR_REMOVE_FROM_CATALOG
      144     5660              DESCRIPTION: This entry point is called by TOU$DELDECK  so that
      145     5661                           references to an object deck may be removed before
      146     5662                           the object deck is deleted.
      147     5663        */
      148     5664
      149     5665    1   TOU$RR_REMOVE_FROM_CATALOG: ENTRY ALTRET ;
      150     5666
      151     5667    1      SAVED_MASTER_ENTRY# = MASTER_ENTRY_KEY.ENTRY# ;
      152     5668    1      SAVED_CATALOG_ENTRY# = CATALOG_ENTRY_KEY.ENTRY# ;
      153     5669    1      CALL RR_REMOVE_FROM_CATALOG (%FALSE) ALTRET (ERROR) ;
      154     5670    1      RETURN ;
      155     5671
      156     5672    1   ERROR:
      157     5673    1      ALTRETURN ;
      158     5674
      159     5675        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:7    
      160     5676        /*D*  NAME:        TOU$RR_REMOVE_FROM_REFLIST
      161     5677              ENTRY:
      162     5678              AUTHOR:      Scott S. Sheppard
      163     5679              PURPOSE:     Remove Reference List-Entry Entry Point
      164     5680              INTERFACE:   RR_REMOVE_FROM_REFLIST
      165     5681              DESCRIPTION: This entry point is called by TOU$DELCAT   so that
      166     5682                           the deleted catalog may be  disassociated  with an
      167     5683                           object deck.
      168     5684        */
      169     5685
      170     5686    1   TOU$RR_REMOVE_FROM_REFLIST: ENTRY ALTRET ;
      171     5687
      172     5688    1      SAVED_MASTER_ENTRY# = MASTER_ENTRY_KEY.ENTRY# ;
      173     5689    1      SAVED_CATALOG_ENTRY# = CATALOG_ENTRY_KEY.ENTRY# ;
      174     5690    1      CALL RR_REMOVE_FROM_REFLIST ALTRET (ERROR) ;
      175     5691    1      RETURN ;
      176     5692
      177     5693        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:8    
      178     5694        /*D*  NAME:        TOU$RR_DELETE_CATALOG
      179     5695              ENTRY:
      180     5696              AUTHOR:      Scott S. Sheppard
      181     5697              PURPOSE:     Delete Catalog Entry Point
      182     5698              INTERFACE:   RR_DELETE_CATALOG
      183     5699                           RR_ADJUST_MASTER_CATALOG
      184     5700              DESCRIPTION: This entry point is called by TOU$DELCAT   so that
      185     5701                           a catalog may be deleted.
      186     5702        */
      187     5703
      188     5704    1   TOU$RR_DELETE_CATALOG: ENTRY ALTRET ;
      189     5705
      190     5706    1      SAVED_MASTER_ENTRY# = MASTER_ENTRY_KEY.ENTRY# ;
      191     5707    1      SAVED_CATALOG_ENTRY# = CATALOG_ENTRY_KEY.ENTRY# ;
      192     5708    1      CALL RR_DELETE_CATALOG ALTRET (ERROR) ;
      193     5709    1      CALL RR_ADJUST_MASTER_CATALOG ALTRET (ERROR) ;
      194     5710    1      RETURN ;
      195     5711
      196     5712        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:9    
      197     5713        /*I*  NAME:        RR_INIT_DUP
      198     5714              AUTHOR:      Scott S. Sheppard
      199     5715              PURPOSE:     Initilization
      200     5716              INTERFACE:   None called.
      201     5717              INPUT:       Set of system equates.
      202     5718              OUTPUT:      DUP - Deckfile Utility Parameter
      203     5719              DESCRIPTION: This procedure initializes the deckfile utility
      204     5720                           parameter to appropriate starting values.
      205     5721        */
      206     5722
      207     5723    1   RR_INIT_DUP: PROC ;
      208     5724
      209     5725        /* Code */
      210     5726
      211     5727    2      DUP.HDR_CODE = %H$REMREF ;
      212     5728    2      DUP.LINE_VFC = %SKIP_WRITE ;
      213     5729    2      DUP.FORCE_NEW_PAGE = %TRUE ;
      214     5730    2      DUP.DF.ENTERED = %FALSE ;
      215     5731    2      DUP.DF.OPEN_TYPE = %UPDATE_FILE ;
      216     5732    2      DUP.DF.REPORT_ERROR = %TRUE ;
      217     5733    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;
      218     5734    2      RETURN ;
      219     5735
      220     5736    2   END RR_INIT_DUP ;
      221     5737        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:10   
      222     5738        /*I*  NAME:        RR_COMMAND_SETUP
      223     5739              AUTHOR:      Scott S. Sheppard
      224     5740              PURPOSE:     Sets up REMREF Command
      225     5741              INTERFACE:   TOU$DU_SET_IFAD_FID
      226     5742              INPUT:       DUP.CMD$ - pointer to the parse control block
      227     5743              OUTPUT:      DUP.DF.HOLD_AREA
      228     5744                           DUP.DF.HOLD_AREA_LGTH
      229     5745              DESCRIPTION: This procedure sets up the BUILD command from the
      230     5746                           information entered by the user.    DUP.CMD$ is a
      231     5747                           pointer to a   parse control block  that contains
      232     5748                           the tokens entered by the user.
      233     5749                           COMMAND FORMS:
      234     5750              Case 1: RR <catalog key> <object key>
      235     5751              Case 2: RR <catalog key> <object key> FROM <deckfile fid>
      236     5752        */
      237     5753        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:11   
      238     5754    1   RR_COMMAND_SETUP: PROC ALTRET ;
      239     5755
      240     5756    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      241     5757    2      DCL OUTBLK$                    PTR ALIGNED ;
      242     5758           %PARSE$OUT (STCLASS = BASED) ;
      243     5803           %PARSE$SYM (STCLASS = BASED) ;
      244     5841
      245     5842        /* Code */
      246     5843
      247     5844    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;
      248     5845    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;
      249     5846    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;
      250     5847    4            CASE (%CATKEY) ;
      251     5848    4               CATALOG_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;
      252     5849    4            CASE (%OBJKEY) ;
      253     5850    4               OBJECT_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;
      254     5851    4            CASE (%DECKFILE_FID) ;
      255     5852    4               DUP.DF.ENTERED = %TRUE ;
      256     5853    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;
      257     5854    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
      258     5855    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      259     5856    4         END /* CASE */ ;
      260     5857    3      END /* DO */ ;
      261     5858
      262     5859    2      IF DUP.DF.ENTERED
      263     5860    2      THEN /* FID set from DEER command */ ;
      264     5861    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      265     5862    2      RETURN ;
      266     5863
      267     5864    2   ERROR:
      268     5865    2      ALTRETURN ;
      269     5866
      270     5867    2   END RR_COMMAND_SETUP ;
      271     5868        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:12   
      272     5869        /*I*  NAME:        RR_FIND_DECK
      273     5870              AUTHOR:      Scott S. Sheppard
      274     5871              PURPOSE:     Locates Object Deck
      275     5872              INTERFACE:   TOU$DFU_DF_RD_CATALOG_CONTROL
      276     5873                           TOU$DFU_DF_RD_CATALOG_ENTRY
      277     5874                           TOU$DFU_DF_RD_OBJECT
      278     5875                           TOU$DFU_DF_RD_OBJECT_REFLIST
      279     5876                           TOU$DU_USER_WRITE
      280     5877                           TOU$DU_PRINTER_WRITE
      281     5878              INPUT:       DECK_SEARCH_KEY
      282     5879                           BINARY_KEY  (checked for match with search key)
      283     5880              OUTPUT:      OBJECT_KEY  (reassigned as we loop through deckfile)
      284     5881                           CATALOG_ENTRY_KEY.DECK#
      285     5882                           CATALOG_ENTRY_KEY.ENTRY#
      286     5883              DESCRIPTION: This  procedure  locates  an  object  deck in the
      287     5884                           previously located catalog.   The procedure loops
      288     5885                           through the catalog checking  each  catalog entry
      289     5886                           against the object search key.   If  a  match  is
      290     5887                           found the object card is  read to obtain the deck
      291     5888                           number of the object deck. After this, the object
      292     5889                           reference list is read in so that  the  reference
      293     5890                           to the object deck may be removed.
      294     5891        */
      295     5892        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:13   
      296     5893    1   RR_FIND_DECK: PROC ALTRET ;
      297     5894
      298     5895    2      DCL FOUND                      BIT (1) CALIGNED ;
      299     5896
      300     5897        /* Code */
      301     5898
      302     5899    2      CALL TOU$DFU_DF_RD_CATALOG_CONTROL ALTRET (ERROR) ;
      303     5900    2      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;
      304     5901    2      CATALOG_ENTRY_KEY.ENTRY# = 1 ;
      305     5902    2      FOUND = %FALSE ;
      306     5903
      307     5904    3      DO UNTIL (FOUND OR CATALOG_ENTRY_KEY.ENTRY# > CATALOG_DATA.ENTRY_COUNT) ;
      308     5905    3         CALL TOU$DFU_DF_RD_CATALOG_ENTRY ALTRET (ERROR) ;
      309     5906    3         IF OBJECT_SEARCH_KEY.DATA = OBJECT_KEY.DATA
      310     5907    3         THEN FOUND = %TRUE ;
      311     5908    3         ELSE CATALOG_ENTRY_KEY.ENTRY# = CATALOG_ENTRY_KEY.ENTRY# + 1 ;
      312     5909    3      END /* UNTIL */ ;
      313     5910
      314     5911    2      IF FOUND
      315     5912    3      THEN DO ;
      316     5913    3              SAVED_MASTER_ENTRY#  = MASTER_ENTRY_KEY.ENTRY# ;
      317     5914    3              SAVED_CATALOG_ENTRY# = CATALOG_ENTRY_KEY.ENTRY# ;
      318     5915    3              RETURN ;
      319     5916    3           END /* THEN */ ;
      320     5917    3      ELSE DO ;
      321     5918    3              DUP.MSG_CODE = %E$RFD_NO_OBJ_IN_CAT ;
      322     5919    3              OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;
      323     5920    3              CALL TOU$DU_USER_WRITE ;
      324     5921    3   ERROR:
      325     5922    3              ALTRETURN ;
      326     5923    3           END /* ELSE */ ;
      327     5924
      328     5925    2   END RR_FIND_DECK ;
      329     5926        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:14   
      330     5927        /*I*  NAME:        RR_GET_REFLIST
      331     5928              AUTHOR:      Scott S. Sheppard
      332     5929              PURPOSE:     Reads In The Object Reference List
      333     5930              INTERFACE:   TOU$DFU_DF_RD_OBJECT
      334     5931                           TOU$DFU_DF_RD_OBJECT_REFLIST
      335     5932              INPUT:       CATALOG_ENTRY_KEY  - used to read in $Object Card
      336     5933              OUTPUT:      OBJECT_REFLIST_DATA
      337     5934              DESCRIPTION: This procedure reads in the object reference list
      338     5935                           of the object deck being removed from the catalog
      339     5936        */
      340     5937
      341     5938    1   RR_GET_REFLIST: PROC ALTRET ;
      342     5939
      343     5940        /* Code */
      344     5941
      345     5942    2      CALL TOU$DFU_DF_RD_OBJECT ALTRET (ERROR) ;
      346     5943    2      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
      347     5944    2      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;
      348     5945    2      IF OBJECT_REFLIST_DATA.NUM_REFS > 1
      349     5946    2      THEN RETURN ;
      350     5947    3      ELSE DO ;
      351     5948    3              DUP.MSG_CODE = %E$RGR_ONLY_ONE_REF ;
      352     5949    3              CALL TOU$DU_USER_WRITE ;
      353     5950    3   ERROR:
      354     5951    3              ALTRETURN ;
      355     5952    3           END /* ELSE */ ;
      356     5953
      357     5954    2   END RR_GET_REFLIST ;
      358     5955        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:15   
      359     5956        /*I*  NAME:        RR_REMOVE_FROM_REFLIST
      360     5957              AUTHOR:      Scott S. Sheppard
      361     5958              PURPOSE:     Removes Object Deck
      362     5959              INTERFACE:   TOU$DFU_DF_WR_OBJECT_REFLIST
      363     5960                           TOU$DU_USER_WRITE
      364     5961                           TOU$DU_PRINTER_WRITE
      365     5962              INPUT:       MASTER_ENTRY_KEY.ENTRY#
      366     5963                           OBJECT_REFLIST.DATA
      367     5964              OUTPUT:      OBJECT_REFLIST_DATA.NUM_REFS
      368     5965                           OBJECT_REFLIST_DATA.REFS
      369     5966              DESCRIPTION: This procedure removes a catalog reference to an
      370     5967                           object deck from the list of  catalog references
      371     5968                           for the object deck.  Since the reference to the
      372     5969                           object deck was removed from the  set of catalog
      373     5970                           entries, likewise the object deck reflist should
      374     5971                           no  longer contain that  catalog in the list  of
      375     5972                           catalogs who reference the object deck.
      376     5973        */
      377     5974        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:16   
      378     5975    1   RR_REMOVE_FROM_REFLIST: PROC ALTRET ;
      379     5976
      380     5977    2      DCL R                          UBIN HALF HALIGNED ;
      381     5978    2      DCL I                          UBIN HALF HALIGNED ;
      382     5979    2      DCL FOUND                      BIT (1) CALIGNED ;
      383     5980
      384     5981        /* Code */
      385     5982
      386     5983    2      R = 0 ;
      387     5984    2      FOUND = %FALSE ;
      388     5985    3      DO UNTIL (FOUND OR R = OBJECT_REFLIST_DATA.NUM_REFS) ;
      389     5986    3         IF OBJECT_REFLIST_DATA.REFS.ME#(R) = SAVED_MASTER_ENTRY#  AND
      390     5987    3                 OBJECT_REFLIST_DATA.REFS.CE#(R) = SAVED_CATALOG_ENTRY#
      391     5988    3         THEN FOUND = %TRUE ;
      392     5989    3         ELSE R = R + 1 ;
      393     5990    3      END /* UNTIL */ ;
      394     5991    2      IF FOUND
      395     5992    3      THEN DO ;
      396     5993    4              DO I = R TO OBJECT_REFLIST_DATA.NUM_REFS-2 ;
      397     5994    4                 OBJECT_REFLIST_DATA.REFS(I) = OBJECT_REFLIST_DATA.REFS(I+1) ;
      398     5995    4              END /* DO */ ;
      399     5996    3              OBJECT_REFLIST_DATA.NUM_REFS = OBJECT_REFLIST_DATA.NUM_REFS - 1 ;
      400     5997    3              CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;
      401     5998    3              RETURN ;
      402     5999    3           END /* THEN */ ;
      403     6000    3      ELSE DO ;
      404     6001    3              DUP.MSG_CODE = %E$RFR_IN_CAT_BUT_NOT_REFL ;
      405     6002    3              CALL TOU$DU_USER_WRITE ;
      406     6003    3              CALL TOU$DU_PRINTER_WRITE ;
      407     6004    3   ERROR:
      408     6005    3              ALTRETURN ;
      409     6006    3           END /* ELSE */ ;
      410     6007
      411     6008    2   END RR_REMOVE_FROM_REFLIST ;
      412     6009        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:17   
      413     6010        /*I*  NAME:        RR_REMOVE_FROM_CATALOG
      414     6011              AUTHOR:      Scott S. Sheppard
      415     6012              PURPOSE:     Removes Catalog Entry
      416     6013              INTERFACE:   RR_ADJUST_REFLIST
      417     6014                           TOU$DFU_DF_RD_CATALOG_ENTRY
      418     6015                           TOU$DFU_DF_WR_CATALOG_ENTRY
      419     6016                           TOU$DFU_DF_RD_OBJECT
      420     6017                           TOU$DFU_DF_RD_OBJECT_REFLIST
      421     6018                           TOU$DFU_DF_WR_OBJECT_REFLIST
      422     6019                           TOU$DFU_DF_DL_CATALOG_ENTRY
      423     6020                           TOU$DU_USER_WRITE
      424     6021                           TOU$DU_PRINTER_WRITE
      425     6022              INPUT:       MASTER_ENTRY - used to read in Catalog Control
      426     6023                           CATALOG_CONTROL - used to read in Catalog Entries
      427     6024              OUTPUT:      CATALOG_CONTROL - set to show 1 less entry
      428     6025              DESCRIPTION: This  procedure  loops  through  a  catalog  and
      429     6026                           eliminates an entry. Here's how:
      430     6027                           Suppose a catalog has N entries numbered 1 to N.
      431     6028                           If we  want to delete the  Mth  entry, we simply
      432     6029                           assign entries  M+1  through  N  to positions  M
      433     6030                           through N-1.  The catalog now has N-1 entries so
      434     6031                           we  call  TOU$DFU_DF_DL_CATALOG_ENTRY  to delete
      435     6032                           the Nth entry.   Another task which must be done
      436     6033                           is that all catalog entries who  follow  the one
      437     6034                           to be removed, must be bumped up one notch since
      438     6035                           the catalog will have one less reference.   This
      439     6036                           means that such  object decks'  reference  lists
      440     6037                           must be modified to show their  new position  in
      441     6038                           the catalog.
      442     6039        */
      443     6040        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:18   
      444     6041    1   RR_REMOVE_FROM_CATALOG: PROC (LOG_REMREF) ALTRET ;
      445     6042
      446     6043    2      DCL LOG_REMREF                 BIT (1) ALIGNED ;
      447     6044    2      DCL CUR_POS                    UBIN HALF HALIGNED ;
      448     6045    2      DCL NEW_POS                    UBIN HALF HALIGNED ;
      449     6046
      450     6047        /* Code */
      451     6048
      452     6049    3      DO CUR_POS = SAVED_CATALOG_ENTRY#+1 TO CATALOG_DATA.ENTRY_COUNT ;
      453     6050    3         CATALOG_ENTRY_KEY.ENTRY# = CUR_POS ;
      454     6051    3         CALL TOU$DFU_DF_RD_CATALOG_ENTRY ALTRET (ERROR) ;
      455     6052    3         NEW_POS = CUR_POS - 1 ;
      456     6053    3         CATALOG_ENTRY_KEY.ENTRY# = NEW_POS ;
      457     6054    3         CALL TOU$DFU_DF_WR_CATALOG_ENTRY ALTRET (ERROR) ;
      458     6055    3         CALL TOU$DFU_DF_RD_OBJECT ALTRET (ERROR) ;
      459     6056    3         OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
      460     6057    3         CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;
      461     6058    3         CALL RR_ADJUST_REFLIST (SAVED_MASTER_ENTRY#,
      462     6059    3                 CUR_POS,
      463     6060    3                 SAVED_MASTER_ENTRY#,
      464     6061    3                 NEW_POS) ALTRET (ERROR) ;
      465     6062    3         CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;
      466     6063    3      END /* DO */ ;
      467     6064
      468     6065    2      CALL TOU$DFU_DF_DL_CATALOG_ENTRY ALTRET (ERROR) ;
      469     6066    2      CATALOG_DATA.ENTRY_COUNT = CATALOG_DATA.ENTRY_COUNT - 1 ;
      470     6067
      471     6068    2      DUP.MSG_CODE = %T$RR_INFORM ;
      472     6069    2      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;
      473     6070    2      CALL TOU$DU_USER_WRITE ;
      474     6071    2      CALL TOU$DU_PRINTER_WRITE ;
      475     6072           %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:19   
      476     6073    2      IF LOG_REMREF
      477     6074    3      THEN DO ;
      478     6075    3              DUP.LOG.TYPE = %T$SF_REMREF ;
      479     6076    3              DUP.LOG.CATALOG = CATALOG_KEY.DATA ;
      480     6077    3              DUP.LOG.DECK = OBJECT_KEY.DATA ;
      481     6078    3              DUP.HOLD_AREA = ' ' ;
      482     6079    3              CALL TOU$DU_UPDATE_LOG ALTRET (ERROR) ;
      483     6080    3           END /* THEN */ ;
      484     6081    2      ELSE /* this is a delete deck or delete catalog */ ;
      485     6082
      486     6083    2      IF CATALOG_DATA.ENTRY_COUNT = 0
      487     6084    3      THEN DO ;
      488     6085    3              DUP.MSG_CODE = %T$RR_CAT_NO_REFS ;
      489     6086    3              CALL TOU$DU_USER_WRITE ;
      490     6087    3              CALL TOU$DU_PRINTER_WRITE ;
      491     6088    3              CALL RR_DELETE_CATALOG ALTRET (ERROR) ;
      492     6089    3           END /* THEN */ ;
      493     6090    2      ELSE CALL RR_ADJUST_CATALOG ALTRET (ERROR) ;
      494     6091    2      RETURN ;
      495     6092
      496     6093    2   ERROR:
      497     6094    2      ALTRETURN ;
      498     6095
      499     6096    2   END RR_REMOVE_FROM_CATALOG ;
      500     6097        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:20   
      501     6098        /*I*  NAME:        RR_ADJUST_REFLIST
      502     6099              AUTHOR:      Scott S. Sheppard
      503     6100              PURPOSE:     Removes Object Deck
      504     6101              INTERFACE:   TOU$DU_USER_WRITE
      505     6102                           TOU$DU_PRINTER_WRITE
      506     6103              INPUT:       OME# - old master entry number
      507     6104                           OCE# - old catalog entry number
      508     6105                           NME# - new master entry number
      509     6106                           NCE# - new catalog entry number
      510     6107              OUTPUT:      OBJECT_REFLIST_DATA.REFS.ME#
      511     6108                           OBJECT_REFLIST_DATA.REFS.CE#
      512     6109              DESCRIPTION: This procedure  locates and modifies  a catalog
      513     6110                           reference to an object deck.  The object deck's
      514     6111                           reference list is chenged to reflect the deck's
      515     6112                           new position in the catalog.
      516     6113        */
      517     6114        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:21   
      518     6115    1   RR_ADJUST_REFLIST: PROC (OME#, OCE#, NME#, NCE#) ALTRET ;
      519     6116
      520     6117    2      DCL OME#                       UBIN HALF HALIGNED ;
      521     6118    2      DCL OCE#                       UBIN HALF HALIGNED ;
      522     6119    2      DCL NME#                       UBIN HALF HALIGNED ;
      523     6120    2      DCL NCE#                       UBIN HALF HALIGNED ;
      524     6121    2      DCL R                          UBIN HALF HALIGNED ;
      525     6122    2      DCL FOUND                      BIT (1) CALIGNED ;
      526     6123
      527     6124        /* Code */
      528     6125
      529     6126    2      R = 0 ;
      530     6127    2      FOUND = %FALSE ;
      531     6128    3      DO UNTIL (FOUND OR R = OBJECT_REFLIST_DATA.NUM_REFS) ;
      532     6129    3         IF OBJECT_REFLIST_DATA.REFS.ME#(R) = OME# AND
      533     6130    3                 OBJECT_REFLIST_DATA.REFS.CE#(R) = OCE#
      534     6131    3         THEN FOUND = %TRUE ;
      535     6132    3         ELSE R = R + 1 ;
      536     6133    3      END /* UNTIL */ ;
      537     6134    2      IF FOUND
      538     6135    3      THEN DO ;
      539     6136    3              OBJECT_REFLIST_DATA.REFS.ME#(R) = NME# ;
      540     6137    3              OBJECT_REFLIST_DATA.REFS.CE#(R) = NCE# ;
      541     6138    3              RETURN ;
      542     6139    3           END /* THEN */ ;
      543     6140    3      ELSE DO ;
      544     6141    3              DUP.MSG_CODE = %E$RAR_IN_CAT_BUT_NOT_REFL ;
      545     6142    3              CALL TOU$DU_USER_WRITE ;
      546     6143    3              CALL TOU$DU_PRINTER_WRITE ;
      547     6144    3              ALTRETURN ;
      548     6145    3           END /* ELSE */ ;
      549     6146
      550     6147    2   END RR_ADJUST_REFLIST ;
      551     6148        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:22   
      552     6149        /*I*  NAME:        RR_DELETE_CATALOG
      553     6150              AUTHOR:      Scott S. Sheppard
      554     6151              PURPOSE:     Removes Catalog
      555     6152              INTERFACE:   TOU$DFU_DF_RD_MASTER_ENTRY
      556     6153                           TOU$DFU_DF_DL_MASTER_ENTRY
      557     6154                           TOU$DFU_DF_DL_CATALOG
      558     6155                           TOU$DU_USER_WRITE
      559     6156                           TOU$DU_PRINTER_WRITE
      560     6157              INPUT:       CATALOG_ENTRY# - master entry number of catalog
      561     6158              OUTPUT:      Master entries reassigned.
      562     6159              DESCRIPTION: This  procedure  loops through the  master catalog
      563     6160                           and eliminates a catalog  entry from the deckfile.
      564     6161                           The  procedure  then removes the  catalog  control
      565     6162                           record keyed by the catalog key and the subcatalog
      566     6163                           for the catalog.  This procedure is only called if
      567     6164                           the catalog no longer contains any object decks.
      568     6165        */
      569     6166
      570     6167    1   RR_DELETE_CATALOG: PROC ALTRET ;
      571     6168
      572     6169    2      DCL CUR_POS                    UBIN HALF HALIGNED ;
      573     6170    2      DCL NEW_POS                    UBIN HALF HALIGNED ;
      574     6171    2      DCL SAVED_CATALOG_DECK#        UBIN HALF HALIGNED ;
      575     6172           %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:23   
      576     6173        /* Code */
      577     6174
      578     6175    2      SAVED_CATALOG_DECK# = CATALOG_KEY.DECK# ;
      579     6176    3      DO CUR_POS = SAVED_MASTER_ENTRY#+1 TO MASTER_DATA.ENTRY_COUNT ;
      580     6177    3         MASTER_ENTRY_KEY.ENTRY# = CUR_POS ;
      581     6178    3         CALL TOU$DFU_DF_RD_MASTER_ENTRY ALTRET (ERROR) ;
      582     6179    3         NEW_POS = CUR_POS - 1 ;
      583     6180    3         MASTER_ENTRY_KEY.ENTRY# = NEW_POS ;
      584     6181    3         CALL TOU$DFU_DF_WR_MASTER_ENTRY ALTRET (ERROR) ;
      585     6182    3         CALL RR_REORDER_REFLISTS (CUR_POS, NEW_POS) ALTRET (ERROR) ;
      586     6183    3      END /* DO */ ;
      587     6184    2      CALL TOU$DFU_DF_DL_MASTER_ENTRY ALTRET (ERROR) ;
      588     6185    2      MASTER_DATA.ENTRY_COUNT = MASTER_DATA.ENTRY_COUNT - 1 ;
      589     6186    2      CATALOG_KEY.DATA = CATALOG_SEARCH_KEY.DATA ;
      590     6187    2      CATALOG_KEY.DECK# = SAVED_CATALOG_DECK# ;
      591     6188    2      SUBCATALOG_KEY.DECK# = SAVED_CATALOG_DECK# ;
      592     6189    2      CALL TOU$DFU_DF_DL_CATALOG ALTRET (ERROR) ;
      593     6190
      594     6191    2      DUP.LOG.TYPE = %T$SF_DELCAT ;
      595     6192    2      DUP.LOG.CATALOG = CATALOG_KEY.DATA ;
      596     6193    2      DUP.LOG.DECK = ' ' ;
      597     6194    2      CALL TOU$DU_UPDATE_LOG ALTRET (ERROR) ;
      598     6195
      599     6196    2      DUP.MSG_CODE = %T$DD_DEL_CAT ;
      600     6197    2      CALL TOU$DU_USER_WRITE ;
      601     6198    2      CALL TOU$DU_PRINTER_WRITE ;
      602     6199    2      RETURN ;
      603     6200
      604     6201    2   ERROR:
      605     6202    2      ALTRETURN ;
      606     6203
      607     6204        /* END RR_DELETE_CATALOG */
      608     6205        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:24   
      609     6206        /*I*  NAME:        RR_REORDER_REFLISTS
      610     6207              AUTHOR:      Scott S. Sheppard
      611     6208              PURPOSE:     Updates Object Reference Lists
      612     6209              INTERFACE:   TOU$DFU_DF_RD_MASTER_ENTRY
      613     6210                           TOU$DFU_DF_RD_CATALOG_CONTROL
      614     6211                           TOU$DFU_DF_RD_CATALOG_ENTRY
      615     6212                           TOU$DFU_DF_RD_OBJECT
      616     6213                           TOU$DFU_DF_RD_OBJECT_REFLIST
      617     6214                           TOU$DFU_DF_WR_OBJECT_REFLIST
      618     6215              INPUT:       MASTER_DATA.DECK#
      619     6216                           OME# - old master entry number
      620     6217                           NME# - new master entry number
      621     6218              OUTPUT:      OBJECT_REFLIST_DATA
      622     6219              DESCRIPTION: This  procedure  loops through the  deckfile
      623     6220                           updating the object lists to reflect the new
      624     6221                           master entry number for each reference.It is
      625     6222                           one less since a catalog was deleted.
      626     6223        */
      627     6224        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:25   
      628     6225    2   RR_REORDER_REFLISTS: PROC (OME#, NME#) ALTRET ;
      629     6226
      630     6227    3      DCL OME#                       UBIN HALF HALIGNED ;
      631     6228    3      DCL NME#                       UBIN HALF HALIGNED ;
      632     6229
      633     6230        /* Code */
      634     6231
      635     6232    3      CALL TOU$DFU_DF_RD_CATALOG_CONTROL ALTRET (ERROR) ;
      636     6233    3      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;
      637     6234    4      DO CATALOG_ENTRY_KEY.ENTRY# = 1 TO CATALOG_DATA.ENTRY_COUNT ;
      638     6235    4         CALL TOU$DFU_DF_RD_CATALOG_ENTRY ALTRET (ERROR) ;
      639     6236    4         CALL TOU$DFU_DF_RD_OBJECT ALTRET (ERROR) ;
      640     6237    4         OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
      641     6238    4         CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;
      642     6239    4         CALL RR_ADJUST_REFLIST (OME#,
      643     6240    4                 CATALOG_ENTRY_KEY.ENTRY#,
      644     6241    4                 NME#,
      645     6242    4                 CATALOG_ENTRY_KEY.ENTRY#) ALTRET (ERROR) ;
      646     6243    4         CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;
      647     6244    4      END /* DO */ ;
      648     6245    3      RETURN ;
      649     6246
      650     6247    3   ERROR:
      651     6248    3      ALTRETURN ;
      652     6249
      653     6250    3   END RR_REORDER_REFLISTS ;
      654     6251    2   END RR_DELETE_CATALOG ;
      655     6252        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:26   
      656     6253        /*I*  NAME:        RR_ADJUST_CATALOG
      657     6254              AUTHOR:      Scott S. Sheppard
      658     6255              PURPOSE:     Adjust Catalog Checksum
      659     6256              INTERFACE:   TOU$DFU_DF_WR_CATALOG_CONTROL
      660     6257              INPUT:       No specicially used by this procedure.
      661     6258              OUTPUT:      CATALOG_DATA written to deckfile.
      662     6259              DESCRIPTION: This procedure calls the necessary routines to
      663     6260                           rechecksum and  save  the catalog since it now
      664     6261                           a less entry, which changes the checksum.
      665     6262                           (No longer checksummed 06/14/83)
      666     6263        */
      667     6264
      668     6265    1   RR_ADJUST_CATALOG: PROC ALTRET ;
      669     6266
      670     6267        /* Code */
      671     6268
      672     6269    2      CALL TOU$DFU_DF_WR_CATALOG_CONTROL ALTRET (ERROR) ;
      673     6270    2      RETURN ;
      674     6271
      675     6272    2   ERROR:
      676     6273    2      ALTRETURN ;
      677     6274
      678     6275    2   END RR_ADJUST_CATALOG ;
      679     6276        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:27   
      680     6277        /*I*  NAME:        RR_ADJUST_MASTER_CATALOG
      681     6278              AUTHOR:      Scott S. Sheppard
      682     6279              PURPOSE:     Adjust Master Catalog Checksum
      683     6280              INTERFACE:   TOU$DFU_DF_WR_MASTER_CONTROL  TOU$DU_USER_WRITE
      684     6281              INPUT:       MASTER_DATA.ENTRY_COUNT
      685     6282              OUTPUT:      MASTER_DATA written to deckfile.
      686     6283                           DUP.MSG_CODE
      687     6284              DESCRIPTION: This procedure calls the necessary routines to
      688     6285                           rechecksum and save the  master catalog  since
      689     6286                           one of the deck catalogs has a new checksum.
      690     6287                           (No longer checksummed 06/14/83)
      691     6288        */
      692     6289
      693     6290    1   RR_ADJUST_MASTER_CATALOG: PROC ALTRET ;
      694     6291
      695     6292        /* Code */
      696     6293
      697     6294    2      IF MASTER_DATA.ENTRY_COUNT > 0
      698     6295    2      THEN CALL TOU$DFU_DF_WR_MASTER_CONTROL ALTRET (ERROR) ;
      699     6296    3      ELSE DO ;
      700     6297    3              DUP.DF.CLOSE_TYPE = %DISCARD_FILE ;
      701     6298    3              DUP.MSG_CODE = %T$DD_DEL_DF ;
      702     6299    3              CALL TOU$DU_USER_WRITE ;
      703     6300    3           END /* THEN */ ;
      704     6301    2      RETURN ;
      705     6302
      706     6303    2   ERROR:
      707     6304    2      ALTRETURN ;
      708     6305
      709     6306    2   END RR_ADJUST_MASTER_CATALOG ;
      710     6307        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:28   
      711     6308        /*I*  NAME:        RR_SAVE_LOG
      712     6309              AUTHOR:      Scott S. Sheppard
      713     6310              PURPOSE:     Saves the deckfile history log
      714     6311              INTERFACE:   TOU$DFU_DF_WR_LOG
      715     6312              INPUT:       No system data accessed.
      716     6313              OUTPUT:      History log buffer written to deckfile
      717     6314              DESCRIPTION: This procedure stores the deckfile history log.
      718     6315        */
      719     6316
      720     6317    1   RR_SAVE_LOG: PROC ALTRET ;
      721     6318
      722     6319        /* Code */
      723     6320
      724     6321    2      CALL TOU$DFU_DF_WR_LOG ALTRET (ERROR) ;
      725     6322    2      RETURN ;
      726     6323
      727     6324    2   ERROR:
      728     6325    2      ALTRETURN ;
      729     6326
      730     6327    2   END RR_SAVE_LOG ;
      731     6328    1   END TOU$REMREF ;

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:29   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$REMREF.

   Procedure TOU$REMREF requires 662 words for executable code.
   Procedure TOU$REMREF requires 28 words of local(AUTO) storage.

    No errors detected in file TOU$REMREF.:E05TSI    .

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:30   

 Object Unit name= TOU$REMREF                                 File name= TOU$REMREF.:E05TOU
 UTS= JUL 30 '97 06:50:03.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   662   1226  TOU$REMREF
    1  RoData even  none     4      4  TOU$REMREF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  TOU$REMREF
     0     70          yes     yes      Std        0  TOU$RR_REMOVE_FROM_CATALOG
     0    114          yes     yes      Std        0  TOU$RR_REMOVE_FROM_REFLIST
     0    135          yes     yes      Std        0  TOU$RR_DELETE_CATALOG
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:31   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 TOU$ND_FIND_CATALOG
 yes     yes           Std       0 TOU$DU_CLOSE_DF
         yes           Std       0 TOU$L_SHOW_DCB
 yes     yes           Std       0 TOU$DFU_DF_RD_LOG
 yes     yes           Std       0 TOU$DU_OPEN_DF
 yes     yes           Std       0 TOU$DU_USER_WRITE
 yes     yes           Std       0 TOU$DU_SET_DF_FID
 yes     yes           Std       0 TOU$DFU_DF_RD_CATALOG_CONTROL
 yes     yes           Std       0 TOU$DFU_DF_RD_CATALOG_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_RD_OBJECT
 yes     yes           Std       0 TOU$DFU_DF_RD_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DFU_DF_WR_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DU_PRINTER_WRITE
 yes     yes           Std       0 TOU$DFU_DF_WR_CATALOG_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_DL_CATALOG_ENTRY
 yes     yes           Std       0 TOU$DU_UPDATE_LOG
 yes     yes           Std       0 TOU$DFU_DF_RD_MASTER_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_DL_MASTER_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_DL_CATALOG
 yes     yes           Std       0 TOU$DFU_DF_WR_MASTER_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_WR_CATALOG_CONTROL
 yes     yes           Std       0 TOU$DFU_DF_WR_MASTER_CONTROL
 yes     yes           Std       0 TOU$DFU_DF_WR_LOG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:32   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DUP                                   CATALOG_DATA                          CATALOG_ENTRY_KEY
     CATALOG_KEY                           CATALOG_SEARCH_KEY                    MASTER_DATA
     MASTER_ENTRY_KEY                      OBJECT                                OBJECT_KEY
     OBJECT_REFLIST_KEY                    OBJECT_REFLIST_DATA                   OBJECT_SEARCH_KEY
     SUBCATALOG_KEY                        B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:33   


        1        1        /*M* TOU$REMREF     DEckfile Editor Routine REMOVE REFERENCE Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$REMREF
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine REMOVE REFERENCE Function
       14       14              DESCRIPTION: This program is called when the REMREF function
       15       15                           is invoked by the  CP-6 deckfile editor driver.
       16       16                           This program removes the catalog reference to a
       17       17                           deck  from the catalog and  adjusts the  deck's
       18       18                           reference list.
       19       19              REFERENCE:   CP-6 Release C0M0
       20       20              LAST UPDATE: 10/27/83
       21       21        */
       22       22        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:34   
       23       23        /*F*  NAME:        TOU$REMREF
       24       24              DESCRIPTION: Procedure Nesting Hierarchy
       25       25
       26       26              TOU$REMREF: procedure
       27       27              TOU$RR_REMOVE_FROM_CATALOG: entry ALTRET
       28       28              TOU$RR_REMOVE_FROM_REFLIST: entry ALTRET
       29       29              TOU$RR_DELETE_CATALOG: entry ALTRET
       30       30
       31       31                 RR_INIT_DUP: procedure
       32       32                 RR_COMMAND_SETUP: procedure ALTRET
       33       33                 RR_FIND_DECK: procedure ALTRET
       34       34                 RR_GET_REFLIST: procedure ALTRET
       35       35                 RR_REMOVE_FROM_REFLIST: procedure ALTRET
       36       36                 RR_REMOVE_FROM_CATALOG: procedure (LR) ALTRET
       37       37                 RR_ADJUST_REFLIST: procedure (OM, OC, NM, NC) ALTRET
       38       38                 RR_DELETE_CATALOG: procedure ALTRET
       39       39                    RR_REORDER_REFLISTS: procedure (OM, NM) ALTRET
       40       40                 RR_ADJUST_CATALOG: procedure ALTRET
       41       41                 RR_ADJUST_MASTER_CATALOG: procedure ALTRET
       42       42                 RR_SAVE_LOG: procedure ALTRET
       43       43
       44       44        */
       45       45        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:35   
       46       46        TOU$REMREF: PROC ALTRET ;

     46  0 000000   000000 700200 xent  TOU$REMREF   TSX0  ! X66_AUTO_0
         0 000001   000034 000000                    ZERO    28,0

       47       47
       48       48        /* Include Files */
       49       49
       50       50           %INCLUDE TOU_DEER_M ;
       51     1461           %INCLUDE TOU_RQSTS_E ;
       52     1536           %INCLUDE TO_PERR_C ;
       53     2121           %INCLUDE XU_MACRO_C ;
       54     5227
       55     5228        /* Macros */
       56     5229
       57     5230           %DUP (STCLASS = SYMREF) ;
       58     5373           %CATALOG_DATA (STCLASS = SYMREF) ;
       59     5387           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
       60     5401           %CATALOG_KEY (STCLASS = SYMREF) ;
       61     5415           %CATALOG_SEARCH_KEY (STCLASS = SYMREF) ;
       62     5427           %MASTER_DATA (STCLASS = SYMREF) ;
       63     5441           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
       64     5455           %OBJECT (STCLASS = SYMREF) ;
       65     5518           %OBJECT_KEY (STCLASS = SYMREF) ;
       66     5531           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       67     5545           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
       68     5560           %OBJECT_SEARCH_KEY (STCLASS = SYMREF) ;
       69     5572           %SUBCATALOG_KEY (STCLASS = SYMREF) ;
       70     5586
       71     5587        /* Variables */
       72     5588
       73     5589    1      DCL SAVED_MASTER_ENTRY#             UBIN HALF HALIGNED ;
       74     5590    1      DCL SAVED_CATALOG_ENTRY#            UBIN HALF HALIGNED ;
       75     5591           %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:36   
       76     5592        /* External Entry Points */
       77     5593
       78     5594    1      DCL TOU$DU_SET_DF_FID               ENTRY ALTRET ;
       79     5595    1      DCL TOU$DU_OPEN_DF                  ENTRY ALTRET ;
       80     5596    1      DCL TOU$DU_CLOSE_DF                 ENTRY ALTRET ;
       81     5597
       82     5598    1      DCL TOU$DU_USER_WRITE               ENTRY ALTRET ;
       83     5599    1      DCL TOU$DU_PRINTER_WRITE            ENTRY ALTRET ;
       84     5600    1      DCL TOU$DU_UPDATE_LOG               ENTRY ALTRET ;
       85     5601
       86     5602    1      DCL TOU$DFU_DF_RD_MASTER_ENTRY      ENTRY ALTRET ;
       87     5603    1      DCL TOU$DFU_DF_RD_CATALOG_CONTROL   ENTRY ALTRET ;
       88     5604    1      DCL TOU$DFU_DF_RD_CATALOG_ENTRY     ENTRY ALTRET ;
       89     5605    1      DCL TOU$DFU_DF_RD_OBJECT            ENTRY ALTRET ;
       90     5606    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST    ENTRY ALTRET ;
       91     5607
       92     5608    1      DCL TOU$DFU_DF_DL_CATALOG_ENTRY     ENTRY ALTRET ;
       93     5609    1      DCL TOU$DFU_DF_DL_MASTER_ENTRY      ENTRY ALTRET ;
       94     5610    1      DCL TOU$DFU_DF_DL_CATALOG           ENTRY ALTRET ;
       95     5611
       96     5612    1      DCL TOU$DFU_DF_WR_MASTER_CONTROL    ENTRY ALTRET ;
       97     5613    1      DCL TOU$DFU_DF_WR_MASTER_ENTRY      ENTRY ALTRET ;
       98     5614    1      DCL TOU$DFU_DF_WR_CATALOG_CONTROL   ENTRY ALTRET ;
       99     5615    1      DCL TOU$DFU_DF_WR_CATALOG_ENTRY     ENTRY ALTRET ;
      100     5616    1      DCL TOU$DFU_DF_WR_OBJECT_REFLIST    ENTRY ALTRET ;
      101     5617    1      DCL TOU$DFU_DF_WR_LOG               ENTRY ALTRET ;
      102     5618    1      DCL TOU$DFU_DF_RD_LOG               ENTRY ALTRET ;
      103     5619
      104     5620    1      DCL TOU$L_SHOW_DCB                  ENTRY ;
      105     5621    1      DCL TOU$ND_FIND_CATALOG             ENTRY ALTRET ;
      106     5622           %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:37   
      107     5623        /* Main Code */
      108     5624
      109     5625    1      CALL RR_INIT_DUP ;

   5625  0 000002   000160 701000 0                  TSX1    RR_INIT_DUP
         0 000003   000000 011000                    NOP     0

      110     5626    1      CALL RR_COMMAND_SETUP ALTRET (ERROR_RETURN) ;

   5626  0 000004   000177 701000 0                  TSX1    RR_COMMAND_SETUP
         0 000005   000055 702000 0                  TSX2    ERROR_RETURN

      111     5627    1      CALL TOU$L_SHOW_DCB ;

   5627  0 000006   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000007   000000 701000 xent               TSX1    TOU$L_SHOW_DCB
         0 000010   000000 011000                    NOP     0

      112     5628    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;

   5628  0 000011   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000012   000000 701000 xent               TSX1    TOU$DU_OPEN_DF
         0 000013   000055 702000 0                  TSX2    ERROR_RETURN

      113     5629    1      CALL TOU$ND_FIND_CATALOG ALTRET (ERROR_RETURN) ;

   5629  0 000014   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000015   000000 701000 xent               TSX1    TOU$ND_FIND_CATALOG
         0 000016   000055 702000 0                  TSX2    ERROR_RETURN

      114     5630    1      CALL TOU$DFU_DF_RD_LOG ALTRET (ERROR_RETURN) ;

   5630  0 000017   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000020   000000 701000 xent               TSX1    TOU$DFU_DF_RD_LOG
         0 000021   000055 702000 0                  TSX2    ERROR_RETURN

      115     5631    1      CALL RR_FIND_DECK ALTRET (ERROR_RETURN) ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:38   

   5631  0 000022   000301 701000 0                  TSX1    RR_FIND_DECK
         0 000023   000055 702000 0                  TSX2    ERROR_RETURN

      116     5632    1      CALL RR_GET_REFLIST ALTRET (ERROR_RETURN) ;

   5632  0 000024   000404 701000 0                  TSX1    RR_GET_REFLIST
         0 000025   000055 702000 0                  TSX2    ERROR_RETURN

      117     5633    1      DUP.BREAK_DISABLED = %TRUE ;

   5633  0 000026   000400 236003                    LDQ     256,DU
         0 000027   000155 256000 xsym               ORSQ    DUP+109

      118     5634    1      CALL RR_REMOVE_FROM_REFLIST ALTRET (ERROR_RETURN) ;

   5634  0 000030   000432 701000 0                  TSX1    RR_REMOVE_FROM_REFLIST
         0 000031   000055 702000 0                  TSX2    ERROR_RETURN

      119     5635    1      CALL RR_REMOVE_FROM_CATALOG (%TRUE) ALTRET (ERROR_RETURN) ;

   5635  0 000032   000000 236000 1                  LDQ     0
         0 000033   200007 756100                    STQ     SAVED_CATALOG_ENTRY#+3,,AUTO
         0 000034   000523 701000 0                  TSX1    RR_REMOVE_FROM_CATALOG
         0 000035   000055 702000 0                  TSX2    ERROR_RETURN

      120     5636    1      CALL RR_ADJUST_MASTER_CATALOG ALTRET (ERROR_RETURN) ;

   5636  0 000036   001174 701000 0                  TSX1    RR_ADJUST_MASTER_CATALOG
         0 000037   000055 702000 0                  TSX2    ERROR_RETURN

      121     5637    1      CALL RR_SAVE_LOG ALTRET (ERROR) ;

   5637  0 000040   001216 701000 0                  TSX1    RR_SAVE_LOG
         0 000041   000113 702000 0                  TSX2    ERROR

      122     5638    1      DUP.BREAK_DISABLED = %FALSE ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:39   

   5638  0 000042   000001 236000 1                  LDQ     1
         0 000043   000155 356000 xsym               ANSQ    DUP+109

      123     5639    1      CALL TOU$DU_CLOSE_DF ALTRET (ERROR_RETURN) ;

   5639  0 000044   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000045   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         0 000046   000055 702000 0                  TSX2    ERROR_RETURN

      124     5640
      125     5641        /* NORMAL_RETURN: */
      126     5642    1      DUP.MSG_CODE = %T$RR_SUCCESS;

   5642  0 000047   000170 235007                    LDA     120,DL
         0 000050   000020 755000 xsym               STA     DUP+16

      127     5643    1      CALL TOU$DU_USER_WRITE ;

   5643  0 000051   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000052   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 000053   000000 011000                    NOP     0

      128     5644    1      RETURN ;

   5644  0 000054   000000 702200 xent               TSX2  ! X66_ARET

      129     5645
      130     5646    1   ERROR_RETURN:
      131     5647    1      DUP.BREAK_DISABLED = %FALSE ;

   5647  0 000055   000001 236000 1     ERROR_RETURN LDQ     1
         0 000056   000155 356000 xsym               ANSQ    DUP+109

      132     5648    1      CALL TOU$DU_CLOSE_DF ;

   5648  0 000057   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:40   
         0 000060   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         0 000061   000000 011000                    NOP     0

      133     5649    1      DUP.MSG_CODE = %T$RR_FAILURE;

   5649  0 000062   000171 235007                    LDA     121,DL
         0 000063   000020 755000 xsym               STA     DUP+16

      134     5650    1      CALL TOU$DU_USER_WRITE ;

   5650  0 000064   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000065   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 000066   000000 011000                    NOP     0

      135     5651    1      RETURN ;

   5651  0 000067   000000 702200 xent               TSX2  ! X66_ARET

      136     5652
      137     5653        /* End Of Main */
      138     5654        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:41   
      139     5655        /*D*  NAME:        TOU$RR_REMOVE_FROM_CATALOG
      140     5656              ENTRY:
      141     5657              AUTHOR:      Scott S. Sheppard
      142     5658              PURPOSE:     Remove Reference Entry Point
      143     5659              INTERFACE:   RR_REMOVE_FROM_CATALOG
      144     5660              DESCRIPTION: This entry point is called by TOU$DELDECK  so that
      145     5661                           references to an object deck may be removed before
      146     5662                           the object deck is deleted.
      147     5663        */
      148     5664
      149     5665    1   TOU$RR_REMOVE_FROM_CATALOG: ENTRY ALTRET ;

   5665  0 000070   000000 700200 xent  TOU$RR_REMO* TSX0  ! X66_AUTO_0
         0 000071   000034 000000                    ZERO    28,0

      150     5666
      151     5667    1      SAVED_MASTER_ENTRY# = MASTER_ENTRY_KEY.ENTRY# ;

   5667  0 000072   000000 235000 xsym               LDA     MASTER_ENTRY_KEY
         0 000073   000001 236000 xsym               LDQ     MASTER_ENTRY_KEY+1
         0 000074   000033 773000                    LRL     27
         0 000075   777777 376007                    ANQ     -1,DL
         0 000076   000000 620006                    EAX0    0,QL
         0 000077   200003 740100                    STX0    SAVED_MASTER_ENTRY#,,AUTO

      152     5668    1      SAVED_CATALOG_ENTRY# = CATALOG_ENTRY_KEY.ENTRY# ;

   5668  0 000100   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         0 000101   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         0 000102   000033 773000                    LRL     27
         0 000103   777777 376007                    ANQ     -1,DL
         0 000104   000000 621006                    EAX1    0,QL
         0 000105   200004 741100                    STX1    SAVED_CATALOG_ENTRY#,,AUTO

      153     5669    1      CALL RR_REMOVE_FROM_CATALOG (%FALSE) ALTRET (ERROR) ;

   5669  0 000106   000002 236000 1                  LDQ     2
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:42   
         0 000107   200007 756100                    STQ     SAVED_CATALOG_ENTRY#+3,,AUTO
         0 000110   000523 701000 0                  TSX1    RR_REMOVE_FROM_CATALOG
         0 000111   000113 702000 0                  TSX2    ERROR

      154     5670    1      RETURN ;

   5670  0 000112   000000 702200 xent               TSX2  ! X66_ARET

      155     5671
      156     5672    1   ERROR:
      157     5673    1      ALTRETURN ;

   5673  0 000113   000000 702200 xent  ERROR        TSX2  ! X66_AALT

      158     5674
      159     5675        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:43   
      160     5676        /*D*  NAME:        TOU$RR_REMOVE_FROM_REFLIST
      161     5677              ENTRY:
      162     5678              AUTHOR:      Scott S. Sheppard
      163     5679              PURPOSE:     Remove Reference List-Entry Entry Point
      164     5680              INTERFACE:   RR_REMOVE_FROM_REFLIST
      165     5681              DESCRIPTION: This entry point is called by TOU$DELCAT   so that
      166     5682                           the deleted catalog may be  disassociated  with an
      167     5683                           object deck.
      168     5684        */
      169     5685
      170     5686    1   TOU$RR_REMOVE_FROM_REFLIST: ENTRY ALTRET ;

   5686  0 000114   000000 700200 xent  TOU$RR_REMO* TSX0  ! X66_AUTO_0
         0 000115   000034 000000                    ZERO    28,0

      171     5687
      172     5688    1      SAVED_MASTER_ENTRY# = MASTER_ENTRY_KEY.ENTRY# ;

   5688  0 000116   000000 235000 xsym               LDA     MASTER_ENTRY_KEY
         0 000117   000001 236000 xsym               LDQ     MASTER_ENTRY_KEY+1
         0 000120   000033 773000                    LRL     27
         0 000121   777777 376007                    ANQ     -1,DL
         0 000122   000000 620006                    EAX0    0,QL
         0 000123   200003 740100                    STX0    SAVED_MASTER_ENTRY#,,AUTO

      173     5689    1      SAVED_CATALOG_ENTRY# = CATALOG_ENTRY_KEY.ENTRY# ;

   5689  0 000124   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         0 000125   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         0 000126   000033 773000                    LRL     27
         0 000127   777777 376007                    ANQ     -1,DL
         0 000130   000000 621006                    EAX1    0,QL
         0 000131   200004 741100                    STX1    SAVED_CATALOG_ENTRY#,,AUTO

      174     5690    1      CALL RR_REMOVE_FROM_REFLIST ALTRET (ERROR) ;

   5690  0 000132   000432 701000 0                  TSX1    RR_REMOVE_FROM_REFLIST
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:44   
         0 000133   000113 702000 0                  TSX2    ERROR

      175     5691    1      RETURN ;

   5691  0 000134   000000 702200 xent               TSX2  ! X66_ARET

      176     5692
      177     5693        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:45   
      178     5694        /*D*  NAME:        TOU$RR_DELETE_CATALOG
      179     5695              ENTRY:
      180     5696              AUTHOR:      Scott S. Sheppard
      181     5697              PURPOSE:     Delete Catalog Entry Point
      182     5698              INTERFACE:   RR_DELETE_CATALOG
      183     5699                           RR_ADJUST_MASTER_CATALOG
      184     5700              DESCRIPTION: This entry point is called by TOU$DELCAT   so that
      185     5701                           a catalog may be deleted.
      186     5702        */
      187     5703
      188     5704    1   TOU$RR_DELETE_CATALOG: ENTRY ALTRET ;

   5704  0 000135   000000 700200 xent  TOU$RR_DELE* TSX0  ! X66_AUTO_0
         0 000136   000034 000000                    ZERO    28,0

      189     5705
      190     5706    1      SAVED_MASTER_ENTRY# = MASTER_ENTRY_KEY.ENTRY# ;

   5706  0 000137   000000 235000 xsym               LDA     MASTER_ENTRY_KEY
         0 000140   000001 236000 xsym               LDQ     MASTER_ENTRY_KEY+1
         0 000141   000033 773000                    LRL     27
         0 000142   777777 376007                    ANQ     -1,DL
         0 000143   000000 620006                    EAX0    0,QL
         0 000144   200003 740100                    STX0    SAVED_MASTER_ENTRY#,,AUTO

      191     5707    1      SAVED_CATALOG_ENTRY# = CATALOG_ENTRY_KEY.ENTRY# ;

   5707  0 000145   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         0 000146   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         0 000147   000033 773000                    LRL     27
         0 000150   777777 376007                    ANQ     -1,DL
         0 000151   000000 621006                    EAX1    0,QL
         0 000152   200004 741100                    STX1    SAVED_CATALOG_ENTRY#,,AUTO

      192     5708    1      CALL RR_DELETE_CATALOG ALTRET (ERROR) ;

   5708  0 000153   000761 701000 0                  TSX1    RR_DELETE_CATALOG
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:46   
         0 000154   000113 702000 0                  TSX2    ERROR

      193     5709    1      CALL RR_ADJUST_MASTER_CATALOG ALTRET (ERROR) ;

   5709  0 000155   001174 701000 0                  TSX1    RR_ADJUST_MASTER_CATALOG
         0 000156   000113 702000 0                  TSX2    ERROR

      194     5710    1      RETURN ;

   5710  0 000157   000000 702200 xent               TSX2  ! X66_ARET

      195     5711
      196     5712        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:47   
      197     5713        /*I*  NAME:        RR_INIT_DUP
      198     5714              AUTHOR:      Scott S. Sheppard
      199     5715              PURPOSE:     Initilization
      200     5716              INTERFACE:   None called.
      201     5717              INPUT:       Set of system equates.
      202     5718              OUTPUT:      DUP - Deckfile Utility Parameter
      203     5719              DESCRIPTION: This procedure initializes the deckfile utility
      204     5720                           parameter to appropriate starting values.
      205     5721        */
      206     5722
      207     5723    1   RR_INIT_DUP: PROC ;

   5723  0 000160   200006 741300       RR_INIT_DUP  STX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO

      208     5724
      209     5725        /* Code */
      210     5726
      211     5727    2      DUP.HDR_CODE = %H$REMREF ;

   5727  0 000161   001414 235007                    LDA     780,DL
         0 000162   000021 755000 xsym               STA     DUP+17

      212     5728    2      DUP.LINE_VFC = %SKIP_WRITE ;

   5728  0 000163   142000 236003                    LDQ     50176,DU
         0 000164   000026 756000 xsym               STQ     DUP+22

      213     5729    2      DUP.FORCE_NEW_PAGE = %TRUE ;

   5729  0 000165   400000 236003                    LDQ     -131072,DU
         0 000166   000056 756000 xsym               STQ     DUP+46

      214     5730    2      DUP.DF.ENTERED = %FALSE ;

   5730  0 000167   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000170   000104 356000 xsym               ANSQ    DUP+68

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:48   
      215     5731    2      DUP.DF.OPEN_TYPE = %UPDATE_FILE ;

   5731  0 000171   000001 235007                    LDA     1,DL
         0 000172   000105 755000 xsym               STA     DUP+69

      216     5732    2      DUP.DF.REPORT_ERROR = %TRUE ;

   5732  0 000173   400000 236007                    LDQ     -131072,DL
         0 000174   000104 256000 xsym               ORSQ    DUP+68

      217     5733    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;

   5733  0 000175   000106 450000 xsym               STZ     DUP+70

      218     5734    2      RETURN ;

   5734  0 000176   000001 702211                    TSX2  ! 1,X1

      219     5735
      220     5736    2   END RR_INIT_DUP ;
      221     5737        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:49   
      222     5738        /*I*  NAME:        RR_COMMAND_SETUP
      223     5739              AUTHOR:      Scott S. Sheppard
      224     5740              PURPOSE:     Sets up REMREF Command
      225     5741              INTERFACE:   TOU$DU_SET_IFAD_FID
      226     5742              INPUT:       DUP.CMD$ - pointer to the parse control block
      227     5743              OUTPUT:      DUP.DF.HOLD_AREA
      228     5744                           DUP.DF.HOLD_AREA_LGTH
      229     5745              DESCRIPTION: This procedure sets up the BUILD command from the
      230     5746                           information entered by the user.    DUP.CMD$ is a
      231     5747                           pointer to a   parse control block  that contains
      232     5748                           the tokens entered by the user.
      233     5749                           COMMAND FORMS:
      234     5750              Case 1: RR <catalog key> <object key>
      235     5751              Case 2: RR <catalog key> <object key> FROM <deckfile fid>
      236     5752        */
      237     5753        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:50   
      238     5754    1   RR_COMMAND_SETUP: PROC ALTRET ;

   5754  0 000177   200006 741300       RR_COMMAND_* STX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO

      239     5755
      240     5756    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      241     5757    2      DCL OUTBLK$                    PTR ALIGNED ;
      242     5758           %PARSE$OUT (STCLASS = BASED) ;
      243     5803           %PARSE$SYM (STCLASS = BASED) ;
      244     5841
      245     5842        /* Code */
      246     5843
      247     5844    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;

   5844  0 000200   200007 450100                    STZ     OUTBLK#,,AUTO
         0 000201   000262 710000 0                  TRA     s:5857+3

      248     5845    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;

   5845  0 000202   000017 470400 xsym               LDP0    DUP+15
         0 000203   200007 720100                    LXL0    OUTBLK#,,AUTO
         0 000204   000003 236110                    LDQ     3,X0,PR0
         0 000205   200010 756100                    STQ     OUTBLK$,,AUTO

      249     5846    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;

   5846  0 000206   200010 471500                    LDP1    OUTBLK$,,AUTO
         0 000207   100000 236100                    LDQ     0,,PR1
         0 000210   777777 376007                    ANQ     -1,DL
         0 000211   000004 136007                    SBLQ    4,DL
         0 000212   000006 116007                    CMPQ    6,DL
         0 000213   000215 602006 0                  TNC     s:5846+7,QL
         0 000214   000257 710000 0                  TRA     s:5857
         0 000215   000241 710000 0                  TRA     s:5852
         0 000216   000257 710000 0                  TRA     s:5857
         0 000217   000257 710000 0                  TRA     s:5857
         0 000220   000257 710000 0                  TRA     s:5857
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:51   
         0 000221   000223 710000 0                  TRA     s:5848
         0 000222   000232 710000 0                  TRA     s:5850

      250     5847    4            CASE (%CATKEY) ;

      251     5848    4               CATALOG_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;

   5848  0 000223   100004 236100                    LDQ     4,,PR1
         0 000224   000033 772000                    QRL     27
         0 000225   000000 621006                    EAX1    0,QL
         0 000226   040000 100540                    MLR     fill='040'O
         0 000227   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         0 000230   000000 000025 xsym               ADSC9   CATALOG_SEARCH_KEY       cn=0,n=21
         0 000231   000257 710000 0                  TRA     s:5857

      252     5849    4            CASE (%OBJKEY) ;

      253     5850    4               OBJECT_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;

   5850  0 000232   100004 236100                    LDQ     4,,PR1
         0 000233   000033 772000                    QRL     27
         0 000234   000000 621006                    EAX1    0,QL
         0 000235   040000 100540                    MLR     fill='040'O
         0 000236   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         0 000237   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         0 000240   000257 710000 0                  TRA     s:5857

      254     5851    4            CASE (%DECKFILE_FID) ;

      255     5852    4               DUP.DF.ENTERED = %TRUE ;

   5852  0 000241   400000 236003                    LDQ     -131072,DU
         0 000242   000104 256000 xsym               ORSQ    DUP+68

      256     5853    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;

   5853  0 000243   100004 236100                    LDQ     4,,PR1
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:52   
         0 000244   000033 772000                    QRL     27
         0 000245   000000 621006                    EAX1    0,QL
         0 000246   040000 100540                    MLR     fill='040'O
         0 000247   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         0 000250   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      257     5854    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

   5854  0 000251   100004 236100                    LDQ     4,,PR1
         0 000252   000033 772000                    QRL     27
         0 000253   000154 756000 xsym               STQ     DUP+108

      258     5855    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

   5855  0 000254   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000255   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         0 000256   000277 702000 0                  TSX2    ERROR

      259     5856    4         END /* CASE */ ;

      260     5857    3      END /* DO */ ;

   5857  0 000257   200007 235100                    LDA     OUTBLK#,,AUTO
         0 000260   000001 035007                    ADLA    1,DL
         0 000261   200007 755100                    STA     OUTBLK#,,AUTO
         0 000262   000017 470400 xsym               LDP0    DUP+15
         0 000263   000001 236100                    LDQ     1,,PR0
         0 000264   000022 772000                    QRL     18
         0 000265   200007 116100                    CMPQ    OUTBLK#,,AUTO
         0 000266   000270 600000 0                  TZE     s:5859
         0 000267   000202 603000 0                  TRC     s:5845

      261     5858
      262     5859    2      IF DUP.DF.ENTERED

   5859  0 000270   000104 234000 xsym               SZN     DUP+68
         0 000271   000275 604000 0                  TMI     s:5862
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:53   

      263     5860    2      THEN /* FID set from DEER command */ ;
      264     5861    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

   5861  0 000272   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000273   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         0 000274   000277 702000 0                  TSX2    ERROR

      265     5862    2      RETURN ;

   5862  0 000275   200006 221300                    LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000276   000001 702211                    TSX2  ! 1,X1

      266     5863
      267     5864    2   ERROR:
      268     5865    2      ALTRETURN ;

   5865  0 000277   200006 221300       ERROR        LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000300   000000 702211                    TSX2  ! 0,X1

      269     5866
      270     5867    2   END RR_COMMAND_SETUP ;
      271     5868        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:54   
      272     5869        /*I*  NAME:        RR_FIND_DECK
      273     5870              AUTHOR:      Scott S. Sheppard
      274     5871              PURPOSE:     Locates Object Deck
      275     5872              INTERFACE:   TOU$DFU_DF_RD_CATALOG_CONTROL
      276     5873                           TOU$DFU_DF_RD_CATALOG_ENTRY
      277     5874                           TOU$DFU_DF_RD_OBJECT
      278     5875                           TOU$DFU_DF_RD_OBJECT_REFLIST
      279     5876                           TOU$DU_USER_WRITE
      280     5877                           TOU$DU_PRINTER_WRITE
      281     5878              INPUT:       DECK_SEARCH_KEY
      282     5879                           BINARY_KEY  (checked for match with search key)
      283     5880              OUTPUT:      OBJECT_KEY  (reassigned as we loop through deckfile)
      284     5881                           CATALOG_ENTRY_KEY.DECK#
      285     5882                           CATALOG_ENTRY_KEY.ENTRY#
      286     5883              DESCRIPTION: This  procedure  locates  an  object  deck in the
      287     5884                           previously located catalog.   The procedure loops
      288     5885                           through the catalog checking  each  catalog entry
      289     5886                           against the object search key.   If  a  match  is
      290     5887                           found the object card is  read to obtain the deck
      291     5888                           number of the object deck. After this, the object
      292     5889                           reference list is read in so that  the  reference
      293     5890                           to the object deck may be removed.
      294     5891        */
      295     5892        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:55   
      296     5893    1   RR_FIND_DECK: PROC ALTRET ;

   5893  0 000301   200006 741300       RR_FIND_DECK STX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO

      297     5894
      298     5895    2      DCL FOUND                      BIT (1) CALIGNED ;
      299     5896
      300     5897        /* Code */
      301     5898
      302     5899    2      CALL TOU$DFU_DF_RD_CATALOG_CONTROL ALTRET (ERROR) ;

   5899  0 000302   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000303   000000 701000 xent               TSX1    TOU$DFU_DF_RD_CATALOG_CONTROL
         0 000304   000402 702000 0                  TSX2    ERROR

      303     5900    2      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;

   5900  0 000305   000000 236000 xsym               LDQ     CATALOG_DATA
         0 000306   000011 772000                    QRL     9
         0 000307   000000 552030 xsym               STBQ    CATALOG_ENTRY_KEY,'30'O

      304     5901    2      CATALOG_ENTRY_KEY.ENTRY# = 1 ;

   5901  0 000310   000000 101400                    MRL     fill='000'O
         0 000311   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         0 000312   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

      305     5902    2      FOUND = %FALSE ;

   5902  0 000313   200007 450100                    STZ     FOUND,,AUTO

      306     5903
      307     5904    3      DO UNTIL (FOUND OR CATALOG_ENTRY_KEY.ENTRY# > CATALOG_DATA.ENTRY_COUNT) ;

      308     5905    3         CALL TOU$DFU_DF_RD_CATALOG_ENTRY ALTRET (ERROR) ;

   5905  0 000314   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:56   
         0 000315   000000 701000 xent               TSX1    TOU$DFU_DF_RD_CATALOG_ENTRY
         0 000316   000402 702000 0                  TSX2    ERROR

      309     5906    3         IF OBJECT_SEARCH_KEY.DATA = OBJECT_KEY.DATA

   5906  0 000317   040000 106400                    CMPC    fill='040'O
         0 000320   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         0 000321   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23
         0 000322   000326 601000 0                  TNZ     s:5908

      310     5907    3         THEN FOUND = %TRUE ;

   5907  0 000323   400000 236003                    LDQ     -131072,DU
         0 000324   200007 756100                    STQ     FOUND,,AUTO
         0 000325   000337 710000 0                  TRA     s:5909

      311     5908    3         ELSE CATALOG_ENTRY_KEY.ENTRY# = CATALOG_ENTRY_KEY.ENTRY# + 1 ;

   5908  0 000326   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         0 000327   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         0 000330   000033 773000                    LRL     27
         0 000331   777777 376007                    ANQ     -1,DL
         0 000332   000001 036007                    ADLQ    1,DL
         0 000333   200032 756100                    STQ     FOUND+2,,AUTO
         0 000334   000000 101500                    MRL     fill='000'O
         0 000335   200032 000004                    ADSC9   FOUND+2,,AUTO            cn=0,n=4
         0 000336   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

      312     5909    3      END /* UNTIL */ ;

   5909  0 000337   200007 234100                    SZN     FOUND,,AUTO
         0 000340   000352 604000 0                  TMI     s:5911
         0 000341   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         0 000342   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         0 000343   000033 773000                    LRL     27
         0 000344   777777 376007                    ANQ     -1,DL
         0 000345   200032 756100                    STQ     FOUND+2,,AUTO
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:57   
         0 000346   000000 236000 xsym               LDQ     CATALOG_DATA
         0 000347   777777 376007                    ANQ     -1,DL
         0 000350   200032 116100                    CMPQ    FOUND+2,,AUTO
         0 000351   000314 605000 0                  TPL     s:5905

      313     5910
      314     5911    2      IF FOUND

   5911  0 000352   200007 234100                    SZN     FOUND,,AUTO
         0 000353   000372 605000 0                  TPL     s:5918

      315     5912    3      THEN DO ;

      316     5913    3              SAVED_MASTER_ENTRY#  = MASTER_ENTRY_KEY.ENTRY# ;

   5913  0 000354   000000 235000 xsym               LDA     MASTER_ENTRY_KEY
         0 000355   000001 236000 xsym               LDQ     MASTER_ENTRY_KEY+1
         0 000356   000033 773000                    LRL     27
         0 000357   777777 376007                    ANQ     -1,DL
         0 000360   000000 620006                    EAX0    0,QL
         0 000361   200003 740100                    STX0    SAVED_MASTER_ENTRY#,,AUTO

      317     5914    3              SAVED_CATALOG_ENTRY# = CATALOG_ENTRY_KEY.ENTRY# ;

   5914  0 000362   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         0 000363   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         0 000364   000033 773000                    LRL     27
         0 000365   777777 376007                    ANQ     -1,DL
         0 000366   000000 621006                    EAX1    0,QL
         0 000367   200004 741100                    STX1    SAVED_CATALOG_ENTRY#,,AUTO

      318     5915    3              RETURN ;

   5915  0 000370   200006 221300                    LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000371   000001 702211                    TSX2  ! 1,X1

      319     5916    3           END /* THEN */ ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:58   
      320     5917    3      ELSE DO ;

      321     5918    3              DUP.MSG_CODE = %E$RFD_NO_OBJ_IN_CAT ;

   5918  0 000372   000764 235007                    LDA     500,DL
         0 000373   000020 755000 xsym               STA     DUP+16

      322     5919    3              OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;

   5919  0 000374   040000 100400                    MLR     fill='040'O
         0 000375   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         0 000376   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      323     5920    3              CALL TOU$DU_USER_WRITE ;

   5920  0 000377   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000400   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 000401   000000 011000                    NOP     0

      324     5921    3   ERROR:
      325     5922    3              ALTRETURN ;

   5922  0 000402   200006 221300       ERROR        LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000403   000000 702211                    TSX2  ! 0,X1

      326     5923    3           END /* ELSE */ ;
      327     5924
      328     5925    2   END RR_FIND_DECK ;
      329     5926        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:59   
      330     5927        /*I*  NAME:        RR_GET_REFLIST
      331     5928              AUTHOR:      Scott S. Sheppard
      332     5929              PURPOSE:     Reads In The Object Reference List
      333     5930              INTERFACE:   TOU$DFU_DF_RD_OBJECT
      334     5931                           TOU$DFU_DF_RD_OBJECT_REFLIST
      335     5932              INPUT:       CATALOG_ENTRY_KEY  - used to read in $Object Card
      336     5933              OUTPUT:      OBJECT_REFLIST_DATA
      337     5934              DESCRIPTION: This procedure reads in the object reference list
      338     5935                           of the object deck being removed from the catalog
      339     5936        */
      340     5937
      341     5938    1   RR_GET_REFLIST: PROC ALTRET ;

   5938  0 000404   200006 741300       RR_GET_REFL* STX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO

      342     5939
      343     5940        /* Code */
      344     5941
      345     5942    2      CALL TOU$DFU_DF_RD_OBJECT ALTRET (ERROR) ;

   5942  0 000405   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000406   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT
         0 000407   000430 702000 0                  TSX2    ERROR

      346     5943    2      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   5943  0 000410   000024 236000 xsym               LDQ     OBJECT+20
         0 000411   000011 772000                    QRL     9
         0 000412   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

      347     5944    2      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;

   5944  0 000413   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000414   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT_REFLIST
         0 000415   000430 702000 0                  TSX2    ERROR

      348     5945    2      IF OBJECT_REFLIST_DATA.NUM_REFS > 1
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:60   

   5945  0 000416   000000 235000 xsym               LDA     OBJECT_REFLIST_DATA
         0 000417   000002 115007                    CMPA    2,DL
         0 000420   000423 602000 0                  TNC     s:5948

      349     5946    2      THEN RETURN ;

   5946  0 000421   200006 221300                    LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000422   000001 702211                    TSX2  ! 1,X1

      350     5947    3      ELSE DO ;

      351     5948    3              DUP.MSG_CODE = %E$RGR_ONLY_ONE_REF ;

   5948  0 000423   000767 236007                    LDQ     503,DL
         0 000424   000020 756000 xsym               STQ     DUP+16

      352     5949    3              CALL TOU$DU_USER_WRITE ;

   5949  0 000425   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000426   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 000427   000000 011000                    NOP     0

      353     5950    3   ERROR:
      354     5951    3              ALTRETURN ;

   5951  0 000430   200006 221300       ERROR        LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000431   000000 702211                    TSX2  ! 0,X1

      355     5952    3           END /* ELSE */ ;
      356     5953
      357     5954    2   END RR_GET_REFLIST ;
      358     5955        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:61   
      359     5956        /*I*  NAME:        RR_REMOVE_FROM_REFLIST
      360     5957              AUTHOR:      Scott S. Sheppard
      361     5958              PURPOSE:     Removes Object Deck
      362     5959              INTERFACE:   TOU$DFU_DF_WR_OBJECT_REFLIST
      363     5960                           TOU$DU_USER_WRITE
      364     5961                           TOU$DU_PRINTER_WRITE
      365     5962              INPUT:       MASTER_ENTRY_KEY.ENTRY#
      366     5963                           OBJECT_REFLIST.DATA
      367     5964              OUTPUT:      OBJECT_REFLIST_DATA.NUM_REFS
      368     5965                           OBJECT_REFLIST_DATA.REFS
      369     5966              DESCRIPTION: This procedure removes a catalog reference to an
      370     5967                           object deck from the list of  catalog references
      371     5968                           for the object deck.  Since the reference to the
      372     5969                           object deck was removed from the  set of catalog
      373     5970                           entries, likewise the object deck reflist should
      374     5971                           no  longer contain that  catalog in the list  of
      375     5972                           catalogs who reference the object deck.
      376     5973        */
      377     5974        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:62   
      378     5975    1   RR_REMOVE_FROM_REFLIST: PROC ALTRET ;

   5975  0 000432   200006 741300       RR_REMOVE_F* STX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO

      379     5976
      380     5977    2      DCL R                          UBIN HALF HALIGNED ;
      381     5978    2      DCL I                          UBIN HALF HALIGNED ;
      382     5979    2      DCL FOUND                      BIT (1) CALIGNED ;
      383     5980
      384     5981        /* Code */
      385     5982
      386     5983    2      R = 0 ;

   5983  0 000433   000000 220003                    LDX0    0,DU
         0 000434   200007 740100                    STX0    R,,AUTO

      387     5984    2      FOUND = %FALSE ;

   5984  0 000435   200011 450100                    STZ     FOUND,,AUTO

      388     5985    3      DO UNTIL (FOUND OR R = OBJECT_REFLIST_DATA.NUM_REFS) ;

      389     5986    3         IF OBJECT_REFLIST_DATA.REFS.ME#(R) = SAVED_MASTER_ENTRY#  AND

   5986  0 000436   200007 220100                    LDX0    R,,AUTO
         0 000437   000001 221010 xsym               LDX1    OBJECT_REFLIST_DATA+1,X0
         0 000440   200003 101100                    CMPX1   SAVED_MASTER_ENTRY#,,AUTO
         0 000441   000450 601000 0                  TNZ     s:5989
         0 000442   000001 722010 xsym               LXL2    OBJECT_REFLIST_DATA+1,X0
         0 000443   200004 102100                    CMPX2   SAVED_CATALOG_ENTRY#,,AUTO
         0 000444   000450 601000 0                  TNZ     s:5989

      390     5987    3                 OBJECT_REFLIST_DATA.REFS.CE#(R) = SAVED_CATALOG_ENTRY#
      391     5988    3         THEN FOUND = %TRUE ;

   5988  0 000445   400000 236003                    LDQ     -131072,DU
         0 000446   200011 756100                    STQ     FOUND,,AUTO
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:63   
         0 000447   000452 710000 0                  TRA     s:5990

      392     5989    3         ELSE R = R + 1 ;

   5989  0 000450   000001 622010                    EAX2    1,X0
         0 000451   200007 742100                    STX2    R,,AUTO

      393     5990    3      END /* UNTIL */ ;

   5990  0 000452   200011 234100                    SZN     FOUND,,AUTO
         0 000453   000460 604000 0                  TMI     s:5991
         0 000454   200007 236100                    LDQ     R,,AUTO
         0 000455   000022 772000                    QRL     18
         0 000456   000000 116000 xsym               CMPQ    OBJECT_REFLIST_DATA
         0 000457   000436 601000 0                  TNZ     s:5986

      394     5991    2      IF FOUND

   5991  0 000460   200011 234100                    SZN     FOUND,,AUTO
         0 000461   000511 605000 0                  TPL     s:6001

      395     5992    3      THEN DO ;

      396     5993    4              DO I = R TO OBJECT_REFLIST_DATA.NUM_REFS-2 ;

   5993  0 000462   200007 220100                    LDX0    R,,AUTO
         0 000463   200010 740100                    STX0    I,,AUTO
         0 000464   000472 710000 0                  TRA     s:5995+2

      397     5994    4                 OBJECT_REFLIST_DATA.REFS(I) = OBJECT_REFLIST_DATA.REFS(I+1) ;

   5994  0 000465   200010 220100                    LDX0    I,,AUTO
         0 000466   000002 236010 xsym               LDQ     OBJECT_REFLIST_DATA+2,X0
         0 000467   000001 756010 xsym               STQ     OBJECT_REFLIST_DATA+1,X0

      398     5995    4              END /* DO */ ;

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:64   
   5995  0 000470   000001 621010                    EAX1    1,X0
         0 000471   200010 741100                    STX1    I,,AUTO
         0 000472   200010 235100                    LDA     I,,AUTO
         0 000473   000022 771000                    ARL     18
         0 000474   200032 755100                    STA     FOUND+2,,AUTO
         0 000475   000000 236000 xsym               LDQ     OBJECT_REFLIST_DATA
         0 000476   000002 136007                    SBLQ    2,DL
         0 000477   200032 116100                    CMPQ    FOUND+2,,AUTO
         0 000500   000465 605000 0                  TPL     s:5994

      399     5996    3              OBJECT_REFLIST_DATA.NUM_REFS = OBJECT_REFLIST_DATA.NUM_REFS - 1 ;

   5996  0 000501   000000 235000 xsym               LDA     OBJECT_REFLIST_DATA
         0 000502   000001 135007                    SBLA    1,DL
         0 000503   000000 755000 xsym               STA     OBJECT_REFLIST_DATA

      400     5997    3              CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;

   5997  0 000504   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000505   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT_REFLIST
         0 000506   000521 702000 0                  TSX2    ERROR

      401     5998    3              RETURN ;

   5998  0 000507   200006 221300                    LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000510   000001 702211                    TSX2  ! 1,X1

      402     5999    3           END /* THEN */ ;
      403     6000    3      ELSE DO ;

      404     6001    3              DUP.MSG_CODE = %E$RFR_IN_CAT_BUT_NOT_REFL ;

   6001  0 000511   000765 235007                    LDA     501,DL
         0 000512   000020 755000 xsym               STA     DUP+16

      405     6002    3              CALL TOU$DU_USER_WRITE ;

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:65   
   6002  0 000513   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000514   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 000515   000000 011000                    NOP     0

      406     6003    3              CALL TOU$DU_PRINTER_WRITE ;

   6003  0 000516   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000517   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         0 000520   000000 011000                    NOP     0

      407     6004    3   ERROR:
      408     6005    3              ALTRETURN ;

   6005  0 000521   200006 221300       ERROR        LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000522   000000 702211                    TSX2  ! 0,X1

      409     6006    3           END /* ELSE */ ;
      410     6007
      411     6008    2   END RR_REMOVE_FROM_REFLIST ;
      412     6009        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:66   
      413     6010        /*I*  NAME:        RR_REMOVE_FROM_CATALOG
      414     6011              AUTHOR:      Scott S. Sheppard
      415     6012              PURPOSE:     Removes Catalog Entry
      416     6013              INTERFACE:   RR_ADJUST_REFLIST
      417     6014                           TOU$DFU_DF_RD_CATALOG_ENTRY
      418     6015                           TOU$DFU_DF_WR_CATALOG_ENTRY
      419     6016                           TOU$DFU_DF_RD_OBJECT
      420     6017                           TOU$DFU_DF_RD_OBJECT_REFLIST
      421     6018                           TOU$DFU_DF_WR_OBJECT_REFLIST
      422     6019                           TOU$DFU_DF_DL_CATALOG_ENTRY
      423     6020                           TOU$DU_USER_WRITE
      424     6021                           TOU$DU_PRINTER_WRITE
      425     6022              INPUT:       MASTER_ENTRY - used to read in Catalog Control
      426     6023                           CATALOG_CONTROL - used to read in Catalog Entries
      427     6024              OUTPUT:      CATALOG_CONTROL - set to show 1 less entry
      428     6025              DESCRIPTION: This  procedure  loops  through  a  catalog  and
      429     6026                           eliminates an entry. Here's how:
      430     6027                           Suppose a catalog has N entries numbered 1 to N.
      431     6028                           If we  want to delete the  Mth  entry, we simply
      432     6029                           assign entries  M+1  through  N  to positions  M
      433     6030                           through N-1.  The catalog now has N-1 entries so
      434     6031                           we  call  TOU$DFU_DF_DL_CATALOG_ENTRY  to delete
      435     6032                           the Nth entry.   Another task which must be done
      436     6033                           is that all catalog entries who  follow  the one
      437     6034                           to be removed, must be bumped up one notch since
      438     6035                           the catalog will have one less reference.   This
      439     6036                           means that such  object decks'  reference  lists
      440     6037                           must be modified to show their  new position  in
      441     6038                           the catalog.
      442     6039        */
      443     6040        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:67   
      444     6041    1   RR_REMOVE_FROM_CATALOG: PROC (LOG_REMREF) ALTRET ;

   6041  0 000523   200006 741300       RR_REMOVE_F* STX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO

      445     6042
      446     6043    2      DCL LOG_REMREF                 BIT (1) ALIGNED ;
      447     6044    2      DCL CUR_POS                    UBIN HALF HALIGNED ;
      448     6045    2      DCL NEW_POS                    UBIN HALF HALIGNED ;
      449     6046
      450     6047        /* Code */
      451     6048
      452     6049    3      DO CUR_POS = SAVED_CATALOG_ENTRY#+1 TO CATALOG_DATA.ENTRY_COUNT ;

   6049  0 000524   200004 220100                    LDX0    SAVED_CATALOG_ENTRY#,,AUTO
         0 000525   000001 622010                    EAX2    1,X0
         0 000526   200010 742100                    STX2    CUR_POS,,AUTO
         0 000527   000600 710000 0                  TRA     s:6063+3

      453     6050    3         CATALOG_ENTRY_KEY.ENTRY# = CUR_POS ;

   6050  0 000530   000000 100500                    MLR     fill='000'O
         0 000531   200010 000002                    ADSC9   CUR_POS,,AUTO            cn=0,n=2
         0 000532   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

      454     6051    3         CALL TOU$DFU_DF_RD_CATALOG_ENTRY ALTRET (ERROR) ;

   6051  0 000533   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000534   000000 701000 xent               TSX1    TOU$DFU_DF_RD_CATALOG_ENTRY
         0 000535   000666 702000 0                  TSX2    ERROR

      455     6052    3         NEW_POS = CUR_POS - 1 ;

   6052  0 000536   200010 220100                    LDX0    CUR_POS,,AUTO
         0 000537   777777 621010                    EAX1    -1,X0
         0 000540   200011 741100                    STX1    NEW_POS,,AUTO

      456     6053    3         CATALOG_ENTRY_KEY.ENTRY# = NEW_POS ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:68   

   6053  0 000541   000000 100500                    MLR     fill='000'O
         0 000542   200011 000002                    ADSC9   NEW_POS,,AUTO            cn=0,n=2
         0 000543   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

      457     6054    3         CALL TOU$DFU_DF_WR_CATALOG_ENTRY ALTRET (ERROR) ;

   6054  0 000544   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000545   000000 701000 xent               TSX1    TOU$DFU_DF_WR_CATALOG_ENTRY
         0 000546   000666 702000 0                  TSX2    ERROR

      458     6055    3         CALL TOU$DFU_DF_RD_OBJECT ALTRET (ERROR) ;

   6055  0 000547   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000550   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT
         0 000551   000666 702000 0                  TSX2    ERROR

      459     6056    3         OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   6056  0 000552   000024 236000 xsym               LDQ     OBJECT+20
         0 000553   000011 772000                    QRL     9
         0 000554   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

      460     6057    3         CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;

   6057  0 000555   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000556   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT_REFLIST
         0 000557   000666 702000 0                  TSX2    ERROR

      461     6058    3         CALL RR_ADJUST_REFLIST (SAVED_MASTER_ENTRY#,

   6058  0 000560   200011 630500                    EPPR0   NEW_POS,,AUTO
         0 000561   200026 450500                    STP0    @NME#+1,,AUTO
         0 000562   200003 631500                    EPPR1   SAVED_MASTER_ENTRY#,,AUTO
         0 000563   200025 451500                    STP1    @OCE#+1,,AUTO
         0 000564   200010 633500                    EPPR3   CUR_POS,,AUTO
         0 000565   200024 453500                    STP3    @OME#+1,,AUTO
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:69   
         0 000566   200003 634500                    EPPR4   SAVED_MASTER_ENTRY#,,AUTO
         0 000567   200023 454500                    STP4    @NME#+3,,AUTO
         0 000570   000670 701000 0                  TSX1    RR_ADJUST_REFLIST
         0 000571   000666 702000 0                  TSX2    ERROR

      462     6059    3                 CUR_POS,
      463     6060    3                 SAVED_MASTER_ENTRY#,
      464     6061    3                 NEW_POS) ALTRET (ERROR) ;
      465     6062    3         CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;

   6062  0 000572   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000573   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT_REFLIST
         0 000574   000666 702000 0                  TSX2    ERROR

      466     6063    3      END /* DO */ ;

   6063  0 000575   200010 220100                    LDX0    CUR_POS,,AUTO
         0 000576   000001 621010                    EAX1    1,X0
         0 000577   200010 741100                    STX1    CUR_POS,,AUTO
         0 000600   000000 720000 xsym               LXL0    CATALOG_DATA
         0 000601   200010 100100                    CMPX0   CUR_POS,,AUTO
         0 000602   000530 603000 0                  TRC     s:6050

      467     6064
      468     6065    2      CALL TOU$DFU_DF_DL_CATALOG_ENTRY ALTRET (ERROR) ;

   6065  0 000603   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000604   000000 701000 xent               TSX1    TOU$DFU_DF_DL_CATALOG_ENTRY
         0 000605   000666 702000 0                  TSX2    ERROR

      469     6066    2      CATALOG_DATA.ENTRY_COUNT = CATALOG_DATA.ENTRY_COUNT - 1 ;

   6066  0 000606   000000 720000 xsym               LXL0    CATALOG_DATA
         0 000607   777777 621010                    EAX1    -1,X0
         0 000610   000000 441000 xsym               SXL1    CATALOG_DATA

      470     6067
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:70   
      471     6068    2      DUP.MSG_CODE = %T$RR_INFORM ;

   6068  0 000611   000172 235007                    LDA     122,DL
         0 000612   000020 755000 xsym               STA     DUP+16

      472     6069    2      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;

   6069  0 000613   040000 100400                    MLR     fill='040'O
         0 000614   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         0 000615   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      473     6070    2      CALL TOU$DU_USER_WRITE ;

   6070  0 000616   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000617   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 000620   000000 011000                    NOP     0

      474     6071    2      CALL TOU$DU_PRINTER_WRITE ;

   6071  0 000621   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000622   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         0 000623   000000 011000                    NOP     0

      475     6072           %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:71   
      476     6073    2      IF LOG_REMREF

   6073  0 000624   200007 470500                    LDP0    @LOG_REMREF,,AUTO
         0 000625   000000 234100                    SZN     0,,PR0
         0 000626   000645 605000 0                  TPL     s:6083

      477     6074    3      THEN DO ;

      478     6075    3              DUP.LOG.TYPE = %T$SF_REMREF ;

   6075  0 000627   000114 235007                    LDA     76,DL
         0 000630   000122 755000 xsym               STA     DUP+82

      479     6076    3              DUP.LOG.CATALOG = CATALOG_KEY.DATA ;

   6076  0 000631   040000 100400                    MLR     fill='040'O
         0 000632   000000 200025 xsym               ADSC9   CATALOG_KEY              cn=1,n=21
         0 000633   000123 000025 xsym               ADSC9   DUP+83                   cn=0,n=21

      480     6077    3              DUP.LOG.DECK = OBJECT_KEY.DATA ;

   6077  0 000634   040000 100400                    MLR     fill='040'O
         0 000635   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23
         0 000636   000130 200027 xsym               ADSC9   DUP+88                   cn=1,n=23

      481     6078    3              DUP.HOLD_AREA = ' ' ;

   6078  0 000637   040000 100400                    MLR     fill='040'O
         0 000640   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 000641   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      482     6079    3              CALL TOU$DU_UPDATE_LOG ALTRET (ERROR) ;

   6079  0 000642   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000643   000000 701000 xent               TSX1    TOU$DU_UPDATE_LOG
         0 000644   000666 702000 0                  TSX2    ERROR

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:72   
      483     6080    3           END /* THEN */ ;

      484     6081    2      ELSE /* this is a delete deck or delete catalog */ ;
      485     6082
      486     6083    2      IF CATALOG_DATA.ENTRY_COUNT = 0

   6083  0 000645   000000 720000 xsym               LXL0    CATALOG_DATA
         0 000646   000662 601000 0                  TNZ     s:6090

      487     6084    3      THEN DO ;

      488     6085    3              DUP.MSG_CODE = %T$RR_CAT_NO_REFS ;

   6085  0 000647   000173 235007                    LDA     123,DL
         0 000650   000020 755000 xsym               STA     DUP+16

      489     6086    3              CALL TOU$DU_USER_WRITE ;

   6086  0 000651   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000652   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 000653   000000 011000                    NOP     0

      490     6087    3              CALL TOU$DU_PRINTER_WRITE ;

   6087  0 000654   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000655   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         0 000656   000000 011000                    NOP     0

      491     6088    3              CALL RR_DELETE_CATALOG ALTRET (ERROR) ;

   6088  0 000657   000761 701000 0                  TSX1    RR_DELETE_CATALOG
         0 000660   000666 702000 0                  TSX2    ERROR

      492     6089    3           END /* THEN */ ;

   6089  0 000661   000664 710000 0                  TRA     s:6091

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:73   
      493     6090    2      ELSE CALL RR_ADJUST_CATALOG ALTRET (ERROR) ;

   6090  0 000662   001164 701000 0                  TSX1    RR_ADJUST_CATALOG
         0 000663   000666 702000 0                  TSX2    ERROR

      494     6091    2      RETURN ;

   6091  0 000664   200006 221300                    LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000665   000001 702211                    TSX2  ! 1,X1

      495     6092
      496     6093    2   ERROR:
      497     6094    2      ALTRETURN ;

   6094  0 000666   200006 221300       ERROR        LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 000667   000000 702211                    TSX2  ! 0,X1

      498     6095
      499     6096    2   END RR_REMOVE_FROM_CATALOG ;
      500     6097        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:74   
      501     6098        /*I*  NAME:        RR_ADJUST_REFLIST
      502     6099              AUTHOR:      Scott S. Sheppard
      503     6100              PURPOSE:     Removes Object Deck
      504     6101              INTERFACE:   TOU$DU_USER_WRITE
      505     6102                           TOU$DU_PRINTER_WRITE
      506     6103              INPUT:       OME# - old master entry number
      507     6104                           OCE# - old catalog entry number
      508     6105                           NME# - new master entry number
      509     6106                           NCE# - new catalog entry number
      510     6107              OUTPUT:      OBJECT_REFLIST_DATA.REFS.ME#
      511     6108                           OBJECT_REFLIST_DATA.REFS.CE#
      512     6109              DESCRIPTION: This procedure  locates and modifies  a catalog
      513     6110                           reference to an object deck.  The object deck's
      514     6111                           reference list is chenged to reflect the deck's
      515     6112                           new position in the catalog.
      516     6113        */
      517     6114        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:75   
      518     6115    1   RR_ADJUST_REFLIST: PROC (OME#, OCE#, NME#, NCE#) ALTRET ;

   6115  0 000670   200022 741300       RR_ADJUST_R* STX1  ! @NME#+2,,AUTO

      519     6116
      520     6117    2      DCL OME#                       UBIN HALF HALIGNED ;
      521     6118    2      DCL OCE#                       UBIN HALF HALIGNED ;
      522     6119    2      DCL NME#                       UBIN HALF HALIGNED ;
      523     6120    2      DCL NCE#                       UBIN HALF HALIGNED ;
      524     6121    2      DCL R                          UBIN HALF HALIGNED ;
      525     6122    2      DCL FOUND                      BIT (1) CALIGNED ;
      526     6123
      527     6124        /* Code */
      528     6125
      529     6126    2      R = 0 ;

   6126  0 000671   000000 220003                    LDX0    0,DU
         0 000672   200027 740100                    STX0    R,,AUTO

      530     6127    2      FOUND = %FALSE ;

   6127  0 000673   200030 450100                    STZ     FOUND,,AUTO

      531     6128    3      DO UNTIL (FOUND OR R = OBJECT_REFLIST_DATA.NUM_REFS) ;

      532     6129    3         IF OBJECT_REFLIST_DATA.REFS.ME#(R) = OME# AND

   6129  0 000674   200023 470500                    LDP0    @OME#,,AUTO
         0 000675   000100 101500                    MRL     fill='000'O
         0 000676   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         0 000677   200032 000004                    ADSC9   FOUND+2,,AUTO            cn=0,n=4
         0 000700   200027 220100                    LDX0    R,,AUTO
         0 000701   000001 236010 xsym               LDQ     OBJECT_REFLIST_DATA+1,X0
         0 000702   000022 772000                    QRL     18
         0 000703   200032 116100                    CMPQ    FOUND+2,,AUTO
         0 000704   000720 601000 0                  TNZ     s:6132
         0 000705   200024 471500                    LDP1    @OCE#,,AUTO
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:76   
         0 000706   000100 101500                    MRL     fill='000'O
         0 000707   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         0 000710   200033 000004                    ADSC9   FOUND+3,,AUTO            cn=0,n=4
         0 000711   000001 236010 xsym               LDQ     OBJECT_REFLIST_DATA+1,X0
         0 000712   777777 376007                    ANQ     -1,DL
         0 000713   200033 116100                    CMPQ    FOUND+3,,AUTO
         0 000714   000720 601000 0                  TNZ     s:6132

      533     6130    3                 OBJECT_REFLIST_DATA.REFS.CE#(R) = OCE#
      534     6131    3         THEN FOUND = %TRUE ;

   6131  0 000715   400000 236003                    LDQ     -131072,DU
         0 000716   200030 756100                    STQ     FOUND,,AUTO
         0 000717   000722 710000 0                  TRA     s:6133

      535     6132    3         ELSE R = R + 1 ;

   6132  0 000720   000001 621010                    EAX1    1,X0
         0 000721   200027 741100                    STX1    R,,AUTO

      536     6133    3      END /* UNTIL */ ;

   6133  0 000722   200030 234100                    SZN     FOUND,,AUTO
         0 000723   000730 604000 0                  TMI     s:6134
         0 000724   200027 236100                    LDQ     R,,AUTO
         0 000725   000022 772000                    QRL     18
         0 000726   000000 116000 xsym               CMPQ    OBJECT_REFLIST_DATA
         0 000727   000674 601000 0                  TNZ     s:6129

      537     6134    2      IF FOUND

   6134  0 000730   200030 234100                    SZN     FOUND,,AUTO
         0 000731   000747 605000 0                  TPL     s:6141

      538     6135    3      THEN DO ;

      539     6136    3              OBJECT_REFLIST_DATA.REFS.ME#(R) = NME# ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:77   

   6136  0 000732   200027 235100                    LDA     R,,AUTO
         0 000733   777777 375003                    ANA     -1,DU
         0 000734   000020 771000                    ARL     16
         0 000735   200025 471500                    LDP1    @NME#,,AUTO
         0 000736   000005 100500                    MLR     fill='000'O
         0 000737   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         0 000740   000001 000002 xsym               ADSC9   OBJECT_REFLIST_DATA+1,A  cn=0,n=2

      540     6137    3              OBJECT_REFLIST_DATA.REFS.CE#(R) = NCE# ;

   6137  0 000741   200026 473500                    LDP3    @NCE#,,AUTO
         0 000742   000005 100500                    MLR     fill='000'O
         0 000743   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         0 000744   000001 400002 xsym               ADSC9   OBJECT_REFLIST_DATA+1,A  cn=2,n=2

      541     6138    3              RETURN ;

   6138  0 000745   200022 221300                    LDX1  ! @NME#+2,,AUTO
         0 000746   000001 702211                    TSX2  ! 1,X1

      542     6139    3           END /* THEN */ ;
      543     6140    3      ELSE DO ;

      544     6141    3              DUP.MSG_CODE = %E$RAR_IN_CAT_BUT_NOT_REFL ;

   6141  0 000747   000766 235007                    LDA     502,DL
         0 000750   000020 755000 xsym               STA     DUP+16

      545     6142    3              CALL TOU$DU_USER_WRITE ;

   6142  0 000751   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000752   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 000753   000000 011000                    NOP     0

      546     6143    3              CALL TOU$DU_PRINTER_WRITE ;

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:78   
   6143  0 000754   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000755   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         0 000756   000000 011000                    NOP     0

      547     6144    3              ALTRETURN ;

   6144  0 000757   200022 221300                    LDX1  ! @NME#+2,,AUTO
         0 000760   000000 702211                    TSX2  ! 0,X1

      548     6145    3           END /* ELSE */ ;
      549     6146
      550     6147    2   END RR_ADJUST_REFLIST ;
      551     6148        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:79   
      552     6149        /*I*  NAME:        RR_DELETE_CATALOG
      553     6150              AUTHOR:      Scott S. Sheppard
      554     6151              PURPOSE:     Removes Catalog
      555     6152              INTERFACE:   TOU$DFU_DF_RD_MASTER_ENTRY
      556     6153                           TOU$DFU_DF_DL_MASTER_ENTRY
      557     6154                           TOU$DFU_DF_DL_CATALOG
      558     6155                           TOU$DU_USER_WRITE
      559     6156                           TOU$DU_PRINTER_WRITE
      560     6157              INPUT:       CATALOG_ENTRY# - master entry number of catalog
      561     6158              OUTPUT:      Master entries reassigned.
      562     6159              DESCRIPTION: This  procedure  loops through the  master catalog
      563     6160                           and eliminates a catalog  entry from the deckfile.
      564     6161                           The  procedure  then removes the  catalog  control
      565     6162                           record keyed by the catalog key and the subcatalog
      566     6163                           for the catalog.  This procedure is only called if
      567     6164                           the catalog no longer contains any object decks.
      568     6165        */
      569     6166
      570     6167    1   RR_DELETE_CATALOG: PROC ALTRET ;

   6167  0 000761   200012 741300       RR_DELETE_C* STX1  ! NEW_POS+1,,AUTO

      571     6168
      572     6169    2      DCL CUR_POS                    UBIN HALF HALIGNED ;
      573     6170    2      DCL NEW_POS                    UBIN HALF HALIGNED ;
      574     6171    2      DCL SAVED_CATALOG_DECK#        UBIN HALF HALIGNED ;
      575     6172           %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:80   
      576     6173        /* Code */
      577     6174
      578     6175    2      SAVED_CATALOG_DECK# = CATALOG_KEY.DECK# ;

   6175  0 000762   000005 720000 xsym               LXL0    CATALOG_KEY+5
         0 000763   200015 740100                    STX0    SAVED_CATALOG_DECK#,,AUTO

      579     6176    3      DO CUR_POS = SAVED_MASTER_ENTRY#+1 TO MASTER_DATA.ENTRY_COUNT ;

   6176  0 000764   200003 222100                    LDX2    SAVED_MASTER_ENTRY#,,AUTO
         0 000765   000001 623012                    EAX3    1,X2
         0 000766   200013 743100                    STX3    CUR_POS,,AUTO
         0 000767   001020 710000 0                  TRA     s:6183+3

      580     6177    3         MASTER_ENTRY_KEY.ENTRY# = CUR_POS ;

   6177  0 000770   000000 100500                    MLR     fill='000'O
         0 000771   200013 000002                    ADSC9   CUR_POS,,AUTO            cn=0,n=2
         0 000772   000000 600002 xsym               ADSC9   MASTER_ENTRY_KEY         cn=3,n=2

      581     6178    3         CALL TOU$DFU_DF_RD_MASTER_ENTRY ALTRET (ERROR) ;

   6178  0 000773   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000774   000000 701000 xent               TSX1    TOU$DFU_DF_RD_MASTER_ENTRY
         0 000775   001071 702000 0                  TSX2    ERROR

      582     6179    3         NEW_POS = CUR_POS - 1 ;

   6179  0 000776   200013 220100                    LDX0    CUR_POS,,AUTO
         0 000777   777777 621010                    EAX1    -1,X0
         0 001000   200014 741100                    STX1    NEW_POS,,AUTO

      583     6180    3         MASTER_ENTRY_KEY.ENTRY# = NEW_POS ;

   6180  0 001001   000000 100500                    MLR     fill='000'O
         0 001002   200014 000002                    ADSC9   NEW_POS,,AUTO            cn=0,n=2
         0 001003   000000 600002 xsym               ADSC9   MASTER_ENTRY_KEY         cn=3,n=2
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:81   

      584     6181    3         CALL TOU$DFU_DF_WR_MASTER_ENTRY ALTRET (ERROR) ;

   6181  0 001004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001005   000000 701000 xent               TSX1    TOU$DFU_DF_WR_MASTER_ENTRY
         0 001006   001071 702000 0                  TSX2    ERROR

      585     6182    3         CALL RR_REORDER_REFLISTS (CUR_POS, NEW_POS) ALTRET (ERROR) ;

   6182  0 001007   200014 630500                    EPPR0   NEW_POS,,AUTO
         0 001010   200020 450500                    STP0    @OME#+1,,AUTO
         0 001011   200013 631500                    EPPR1   CUR_POS,,AUTO
         0 001012   200017 451500                    STP1    SAVED_CATALOG_DECK#+2,,AUTO
         0 001013   001073 701000 0                  TSX1    RR_REORDER_REFLISTS
         0 001014   001071 702000 0                  TSX2    ERROR

      586     6183    3      END /* DO */ ;

   6183  0 001015   200013 220100                    LDX0    CUR_POS,,AUTO
         0 001016   000001 621010                    EAX1    1,X0
         0 001017   200013 741100                    STX1    CUR_POS,,AUTO
         0 001020   000000 720000 xsym               LXL0    MASTER_DATA
         0 001021   200013 100100                    CMPX0   CUR_POS,,AUTO
         0 001022   000770 603000 0                  TRC     s:6177

      587     6184    2      CALL TOU$DFU_DF_DL_MASTER_ENTRY ALTRET (ERROR) ;

   6184  0 001023   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001024   000000 701000 xent               TSX1    TOU$DFU_DF_DL_MASTER_ENTRY
         0 001025   001071 702000 0                  TSX2    ERROR

      588     6185    2      MASTER_DATA.ENTRY_COUNT = MASTER_DATA.ENTRY_COUNT - 1 ;

   6185  0 001026   000000 720000 xsym               LXL0    MASTER_DATA
         0 001027   777777 621010                    EAX1    -1,X0
         0 001030   000000 441000 xsym               SXL1    MASTER_DATA

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:82   
      589     6186    2      CATALOG_KEY.DATA = CATALOG_SEARCH_KEY.DATA ;

   6186  0 001031   040000 100400                    MLR     fill='040'O
         0 001032   000000 000025 xsym               ADSC9   CATALOG_SEARCH_KEY       cn=0,n=21
         0 001033   000000 200025 xsym               ADSC9   CATALOG_KEY              cn=1,n=21

      590     6187    2      CATALOG_KEY.DECK# = SAVED_CATALOG_DECK# ;

   6187  0 001034   200015 220100                    LDX0    SAVED_CATALOG_DECK#,,AUTO
         0 001035   000005 440000 xsym               SXL0    CATALOG_KEY+5

      591     6188    2      SUBCATALOG_KEY.DECK# = SAVED_CATALOG_DECK# ;

   6188  0 001036   200015 236100                    LDQ     SAVED_CATALOG_DECK#,,AUTO
         0 001037   000011 772000                    QRL     9
         0 001040   000000 552030 xsym               STBQ    SUBCATALOG_KEY,'30'O

      592     6189    2      CALL TOU$DFU_DF_DL_CATALOG ALTRET (ERROR) ;

   6189  0 001041   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001042   000000 701000 xent               TSX1    TOU$DFU_DF_DL_CATALOG
         0 001043   001071 702000 0                  TSX2    ERROR

      593     6190
      594     6191    2      DUP.LOG.TYPE = %T$SF_DELCAT ;

   6191  0 001044   000116 235007                    LDA     78,DL
         0 001045   000122 755000 xsym               STA     DUP+82

      595     6192    2      DUP.LOG.CATALOG = CATALOG_KEY.DATA ;

   6192  0 001046   040000 100400                    MLR     fill='040'O
         0 001047   000000 200025 xsym               ADSC9   CATALOG_KEY              cn=1,n=21
         0 001050   000123 000025 xsym               ADSC9   DUP+83                   cn=0,n=21

      596     6193    2      DUP.LOG.DECK = ' ' ;

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:83   
   6193  0 001051   040000 100400                    MLR     fill='040'O
         0 001052   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 001053   000130 200027 xsym               ADSC9   DUP+88                   cn=1,n=23

      597     6194    2      CALL TOU$DU_UPDATE_LOG ALTRET (ERROR) ;

   6194  0 001054   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001055   000000 701000 xent               TSX1    TOU$DU_UPDATE_LOG
         0 001056   001071 702000 0                  TSX2    ERROR

      598     6195
      599     6196    2      DUP.MSG_CODE = %T$DD_DEL_CAT ;

   6196  0 001057   000205 235007                    LDA     133,DL
         0 001060   000020 755000 xsym               STA     DUP+16

      600     6197    2      CALL TOU$DU_USER_WRITE ;

   6197  0 001061   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001062   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 001063   000000 011000                    NOP     0

      601     6198    2      CALL TOU$DU_PRINTER_WRITE ;

   6198  0 001064   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001065   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         0 001066   000000 011000                    NOP     0

      602     6199    2      RETURN ;

   6199  0 001067   200012 221300                    LDX1  ! NEW_POS+1,,AUTO
         0 001070   000001 702211                    TSX2  ! 1,X1

      603     6200
      604     6201    2   ERROR:
      605     6202    2      ALTRETURN ;

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:84   
   6202  0 001071   200012 221300       ERROR        LDX1  ! NEW_POS+1,,AUTO
         0 001072   000000 702211                    TSX2  ! 0,X1

      606     6203
      607     6204        /* END RR_DELETE_CATALOG */
      608     6205        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:85   
      609     6206        /*I*  NAME:        RR_REORDER_REFLISTS
      610     6207              AUTHOR:      Scott S. Sheppard
      611     6208              PURPOSE:     Updates Object Reference Lists
      612     6209              INTERFACE:   TOU$DFU_DF_RD_MASTER_ENTRY
      613     6210                           TOU$DFU_DF_RD_CATALOG_CONTROL
      614     6211                           TOU$DFU_DF_RD_CATALOG_ENTRY
      615     6212                           TOU$DFU_DF_RD_OBJECT
      616     6213                           TOU$DFU_DF_RD_OBJECT_REFLIST
      617     6214                           TOU$DFU_DF_WR_OBJECT_REFLIST
      618     6215              INPUT:       MASTER_DATA.DECK#
      619     6216                           OME# - old master entry number
      620     6217                           NME# - new master entry number
      621     6218              OUTPUT:      OBJECT_REFLIST_DATA
      622     6219              DESCRIPTION: This  procedure  loops through the  deckfile
      623     6220                           updating the object lists to reflect the new
      624     6221                           master entry number for each reference.It is
      625     6222                           one less since a catalog was deleted.
      626     6223        */
      627     6224        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:86   
      628     6225    2   RR_REORDER_REFLISTS: PROC (OME#, NME#) ALTRET ;

   6225  0 001073   200016 741300       RR_REORDER_* STX1  ! SAVED_CATALOG_DECK#+1,,AUTO

      629     6226
      630     6227    3      DCL OME#                       UBIN HALF HALIGNED ;
      631     6228    3      DCL NME#                       UBIN HALF HALIGNED ;
      632     6229
      633     6230        /* Code */
      634     6231
      635     6232    3      CALL TOU$DFU_DF_RD_CATALOG_CONTROL ALTRET (ERROR) ;

   6232  0 001074   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001075   000000 701000 xent               TSX1    TOU$DFU_DF_RD_CATALOG_CONTROL
         0 001076   001162 702000 0                  TSX2    ERROR

      636     6233    3      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;

   6233  0 001077   000000 236000 xsym               LDQ     CATALOG_DATA
         0 001100   000011 772000                    QRL     9
         0 001101   000000 552030 xsym               STBQ    CATALOG_ENTRY_KEY,'30'O

      637     6234    4      DO CATALOG_ENTRY_KEY.ENTRY# = 1 TO CATALOG_DATA.ENTRY_COUNT ;

   6234  0 001102   000000 101400                    MRL     fill='000'O
         0 001103   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         0 001104   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2
         0 001105   001147 710000 0                  TRA     s:6244+9

      638     6235    4         CALL TOU$DFU_DF_RD_CATALOG_ENTRY ALTRET (ERROR) ;

   6235  0 001106   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001107   000000 701000 xent               TSX1    TOU$DFU_DF_RD_CATALOG_ENTRY
         0 001110   001162 702000 0                  TSX2    ERROR

      639     6236    4         CALL TOU$DFU_DF_RD_OBJECT ALTRET (ERROR) ;

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:87   
   6236  0 001111   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001112   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT
         0 001113   001162 702000 0                  TSX2    ERROR

      640     6237    4         OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   6237  0 001114   000024 236000 xsym               LDQ     OBJECT+20
         0 001115   000011 772000                    QRL     9
         0 001116   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

      641     6238    4         CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;

   6238  0 001117   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001120   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT_REFLIST
         0 001121   001162 702000 0                  TSX2    ERROR

      642     6239    4         CALL RR_ADJUST_REFLIST (OME#,

   6239  0 001122   000003 236000 1                  LDQ     3
         0 001123   200026 756100                    STQ     @NCE#,,AUTO
         0 001124   200020 236100                    LDQ     @NME#,,AUTO
         0 001125   000003 235000 1                  LDA     3
         0 001126   200024 757100                    STAQ    @OCE#,,AUTO
         0 001127   200017 236100                    LDQ     @OME#,,AUTO
         0 001130   200023 756100                    STQ     @OME#,,AUTO
         0 001131   000670 701000 0                  TSX1    RR_ADJUST_REFLIST
         0 001132   001162 702000 0                  TSX2    ERROR

      643     6240    4                 CATALOG_ENTRY_KEY.ENTRY#,
      644     6241    4                 NME#,
      645     6242    4                 CATALOG_ENTRY_KEY.ENTRY#) ALTRET (ERROR) ;
      646     6243    4         CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;

   6243  0 001133   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001134   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT_REFLIST
         0 001135   001162 702000 0                  TSX2    ERROR

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:88   
      647     6244    4      END /* DO */ ;

   6244  0 001136   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         0 001137   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         0 001140   000033 773000                    LRL     27
         0 001141   777777 376007                    ANQ     -1,DL
         0 001142   000001 036007                    ADLQ    1,DL
         0 001143   200032 756100                    STQ     FOUND+2,,AUTO
         0 001144   000000 101500                    MRL     fill='000'O
         0 001145   200032 000004                    ADSC9   FOUND+2,,AUTO            cn=0,n=4
         0 001146   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2
         0 001147   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         0 001150   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         0 001151   000033 773000                    LRL     27
         0 001152   777777 376007                    ANQ     -1,DL
         0 001153   200033 756100                    STQ     FOUND+3,,AUTO
         0 001154   000000 236000 xsym               LDQ     CATALOG_DATA
         0 001155   777777 376007                    ANQ     -1,DL
         0 001156   200033 116100                    CMPQ    FOUND+3,,AUTO
         0 001157   001106 605000 0                  TPL     s:6235

      648     6245    3      RETURN ;

   6245  0 001160   200016 221300                    LDX1  ! SAVED_CATALOG_DECK#+1,,AUTO
         0 001161   000001 702211                    TSX2  ! 1,X1

      649     6246
      650     6247    3   ERROR:
      651     6248    3      ALTRETURN ;

   6248  0 001162   200016 221300       ERROR        LDX1  ! SAVED_CATALOG_DECK#+1,,AUTO
         0 001163   000000 702211                    TSX2  ! 0,X1

      652     6249
      653     6250    3   END RR_REORDER_REFLISTS ;
      654     6251    2   END RR_DELETE_CATALOG ;
      655     6252        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:89   
      656     6253        /*I*  NAME:        RR_ADJUST_CATALOG
      657     6254              AUTHOR:      Scott S. Sheppard
      658     6255              PURPOSE:     Adjust Catalog Checksum
      659     6256              INTERFACE:   TOU$DFU_DF_WR_CATALOG_CONTROL
      660     6257              INPUT:       No specicially used by this procedure.
      661     6258              OUTPUT:      CATALOG_DATA written to deckfile.
      662     6259              DESCRIPTION: This procedure calls the necessary routines to
      663     6260                           rechecksum and  save  the catalog since it now
      664     6261                           a less entry, which changes the checksum.
      665     6262                           (No longer checksummed 06/14/83)
      666     6263        */
      667     6264
      668     6265    1   RR_ADJUST_CATALOG: PROC ALTRET ;

   6265  0 001164   200012 741300       RR_ADJUST_C* STX1  ! NEW_POS+1,,AUTO

      669     6266
      670     6267        /* Code */
      671     6268
      672     6269    2      CALL TOU$DFU_DF_WR_CATALOG_CONTROL ALTRET (ERROR) ;

   6269  0 001165   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001166   000000 701000 xent               TSX1    TOU$DFU_DF_WR_CATALOG_CONTROL
         0 001167   001172 702000 0                  TSX2    ERROR

      673     6270    2      RETURN ;

   6270  0 001170   200012 221300                    LDX1  ! NEW_POS+1,,AUTO
         0 001171   000001 702211                    TSX2  ! 1,X1

      674     6271
      675     6272    2   ERROR:
      676     6273    2      ALTRETURN ;

   6273  0 001172   200012 221300       ERROR        LDX1  ! NEW_POS+1,,AUTO
         0 001173   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:90   
      677     6274
      678     6275    2   END RR_ADJUST_CATALOG ;
      679     6276        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:91   
      680     6277        /*I*  NAME:        RR_ADJUST_MASTER_CATALOG
      681     6278              AUTHOR:      Scott S. Sheppard
      682     6279              PURPOSE:     Adjust Master Catalog Checksum
      683     6280              INTERFACE:   TOU$DFU_DF_WR_MASTER_CONTROL  TOU$DU_USER_WRITE
      684     6281              INPUT:       MASTER_DATA.ENTRY_COUNT
      685     6282              OUTPUT:      MASTER_DATA written to deckfile.
      686     6283                           DUP.MSG_CODE
      687     6284              DESCRIPTION: This procedure calls the necessary routines to
      688     6285                           rechecksum and save the  master catalog  since
      689     6286                           one of the deck catalogs has a new checksum.
      690     6287                           (No longer checksummed 06/14/83)
      691     6288        */
      692     6289
      693     6290    1   RR_ADJUST_MASTER_CATALOG: PROC ALTRET ;

   6290  0 001174   200006 741300       RR_ADJUST_M* STX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO

      694     6291
      695     6292        /* Code */
      696     6293
      697     6294    2      IF MASTER_DATA.ENTRY_COUNT > 0

   6294  0 001175   000000 720000 xsym               LXL0    MASTER_DATA
         0 001176   001203 600000 0                  TZE     s:6297

      698     6295    2      THEN CALL TOU$DFU_DF_WR_MASTER_CONTROL ALTRET (ERROR) ;

   6295  0 001177   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001200   000000 701000 xent               TSX1    TOU$DFU_DF_WR_MASTER_CONTROL
         0 001201   001214 702000 0                  TSX2    ERROR
         0 001202   001212 710000 0                  TRA     s:6301

      699     6296    3      ELSE DO ;

      700     6297    3              DUP.DF.CLOSE_TYPE = %DISCARD_FILE ;

   6297  0 001203   000001 235007                    LDA     1,DL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:92   
         0 001204   000106 755000 xsym               STA     DUP+70

      701     6298    3              DUP.MSG_CODE = %T$DD_DEL_DF ;

   6298  0 001205   000206 236007                    LDQ     134,DL
         0 001206   000020 756000 xsym               STQ     DUP+16

      702     6299    3              CALL TOU$DU_USER_WRITE ;

   6299  0 001207   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001210   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         0 001211   000000 011000                    NOP     0

      703     6300    3           END /* THEN */ ;

      704     6301    2      RETURN ;

   6301  0 001212   200006 221300                    LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 001213   000001 702211                    TSX2  ! 1,X1

      705     6302
      706     6303    2   ERROR:
      707     6304    2      ALTRETURN ;

   6304  0 001214   200006 221300       ERROR        LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 001215   000000 702211                    TSX2  ! 0,X1

      708     6305
      709     6306    2   END RR_ADJUST_MASTER_CATALOG ;
      710     6307        %EJECT ;
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:93   
      711     6308        /*I*  NAME:        RR_SAVE_LOG
      712     6309              AUTHOR:      Scott S. Sheppard
      713     6310              PURPOSE:     Saves the deckfile history log
      714     6311              INTERFACE:   TOU$DFU_DF_WR_LOG
      715     6312              INPUT:       No system data accessed.
      716     6313              OUTPUT:      History log buffer written to deckfile
      717     6314              DESCRIPTION: This procedure stores the deckfile history log.
      718     6315        */
      719     6316
      720     6317    1   RR_SAVE_LOG: PROC ALTRET ;

   6317  0 001216   200006 741300       RR_SAVE_LOG  STX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO

      721     6318
      722     6319        /* Code */
      723     6320
      724     6321    2      CALL TOU$DFU_DF_WR_LOG ALTRET (ERROR) ;

   6321  0 001217   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001220   000000 701000 xent               TSX1    TOU$DFU_DF_WR_LOG
         0 001221   001224 702000 0                  TSX2    ERROR

      725     6322    2      RETURN ;

   6322  0 001222   200006 221300                    LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 001223   000001 702211                    TSX2  ! 1,X1

      726     6323
      727     6324    2   ERROR:
      728     6325    2      ALTRETURN ;

   6325  0 001224   200006 221300       ERROR        LDX1  ! SAVED_CATALOG_ENTRY#+2,,AUTO
         0 001225   000000 702211                    TSX2  ! 0,X1

(unnamed)
 Sect OctLoc
   1     000   000030 006000   777377 777777   000002 006000   000000 606000    ................
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:94   
      729     6326
      730     6327    2   END RR_SAVE_LOG ;
      731     6328    1   END TOU$REMREF ;

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:95   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$REMREF.
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:96   

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    46-  6328    232    50     0      0  y y y    0   1 TOU$REMREF
                                  0     70    y y    0     TOU$RR_REMOVE_FROM_CATALOG
                                  0    114    y y    0     TOU$RR_REMOVE_FROM_REFLIST
                                  0    135    y y    0     TOU$RR_DELETE_CATALOG
  1  5723-  5736      9     0     0    160  y   y    0     2 RR_INIT_DUP
  2  5754-  5867     19     9     0    177  y y y    0     2 RR_COMMAND_SETUP
  3  5893-  5925     21     1     0    301  y y y    0     2 RR_FIND_DECK
  4  5938-  5954     10     0     0    404  y y y    0     2 RR_GET_REFLIST
  5  5975-  6008     21     3     0    432  y y y    0     2 RR_REMOVE_FROM_REFLIST
  6  6041-  6096     37     4     0    523  y y y    1     2 RR_REMOVE_FROM_CATALOG
  7  6115-  6147     18    10     0    670  y y y    4     2 RR_ADJUST_REFLIST
  8  6167-  6251     38     3     0    761  y y y    0     2 RR_DELETE_CATALOG
  9  6225-  6250     13     4     0   1073  y y y    2      3 RR_REORDER_REFLISTS
 10  6265-  6275      4     0     0   1164  y y y    0     2 RR_ADJUST_CATALOG
 11  6290-  6306     10     0     0   1174  y y y    0     2 RR_ADJUST_MASTER_CATALOG
 12  6317-  6327      4     0     0   1216  y y y    0     2 RR_SAVE_LOG
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:97   

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              46   0      0 Proc    0                              5625   0      2 Call    0
            5626   0      4 Call    0                              5627   0      6 Call    0
            5628   0     11 Call    0                              5629   0     14 Call    0
            5630   0     17 Call    0                              5631   0     22 Call    0
            5632   0     24 Call    0                              5633   0     26 Assign  0
            5634   0     30 Call    0                              5635   0     32 Call    0
            5636   0     36 Call    0                              5637   0     40 Call    0
            5638   0     42 Assign  0                              5639   0     44 Call    0
            5642   0     47 Assign  0                              5643   0     51 Call    0
            5644   0     54 Return  0                              5647   0     55 Assign  0 ERROR_RETURN
            5648   0     57 Call    0                              5649   0     62 Assign  0
            5650   0     64 Call    0                              5651   0     67 Return  0
            5665   0     70 Entry   0                           $  5667   0     72 Assign  0
         $  5668   0    100 Assign  0                              5669   0    106 Call    0
            5670   0    112 Return  0                              5673   0    113 Altret  0 ERROR
            5686   0    114 Entry   0                           $  5688   0    116 Assign  0
         $  5689   0    124 Assign  0                              5690   0    132 Call    0
            5691   0    134 Return  0                              5704   0    135 Entry   0
         $  5706   0    137 Assign  0                           $  5707   0    145 Assign  0
            5708   0    153 Call    0                              5709   0    155 Call    0
            5710   0    157 Return  0                              5723   0    160 Proc    1
            5727   0    161 Assign  1                              5728   0    163 Assign  1
            5729   0    165 Assign  1                              5730   0    167 Assign  1
            5731   0    171 Assign  1                              5732   0    173 Assign  1
            5733   0    175 Assign  1                              5734   0    176 Return  1
            5754   0    177 Proc    2                              5844   0    200 DoIndx  2
         $  5845   0    202 Assign  2                        $$$$  5846   0    206 DoCase  2
            5847   0    223 Case    2                           $  5848   0    223 Assign  2
            5849   0    232 Case    2                           $  5850   0    232 Assign  2
            5851   0    241 Case    2                              5852   0    241 Assign  2
         $  5853   0    243 Assign  2                              5854   0    251 Assign  2
            5855   0    254 Call    2                              5856   0    257 EndCse  2
        $$  5857   0    257 EndInd  2                              5859   0    270 If      2
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:98   
            5861   0    272 Call    2                              5862   0    275 Return  2
            5865   0    277 Altret  2 ERROR                        5893   0    301 Proc    3
            5899   0    302 Call    3                              5900   0    305 Assign  3
         $  5901   0    310 Assign  3                              5902   0    313 Assign  3
            5904   0    314 DoUntl  3                              5905   0    314 Call    3
            5906   0    317 If      3                              5907   0    323 Assign  3
       $$$  5908   0    326 Assign  3                          $$  5909   0    337 EndUnt  3
            5911   0    352 If      3                              5912   0    354 Do      3
         $  5913   0    354 Assign  3                           $  5914   0    362 Assign  3
            5915   0    370 Return  3                              5917   0    372 Do      3
            5918   0    372 Assign  3                              5919   0    374 Assign  3
            5920   0    377 Call    3                              5922   0    402 Altret  3 ERROR
            5938   0    404 Proc    4                              5942   0    405 Call    4
            5943   0    410 Assign  4                              5944   0    413 Call    4
            5945   0    416 If      4                              5946   0    421 Return  4
            5947   0    423 Do      4                              5948   0    423 Assign  4
            5949   0    425 Call    4                              5951   0    430 Altret  4 ERROR
            5975   0    432 Proc    5                              5983   0    433 Assign  5
            5984   0    435 Assign  5                              5985   0    436 DoUntl  5
         $  5986   0    436 If      5                              5988   0    445 Assign  5
            5989   0    450 Assign  5                              5990   0    452 EndUnt  5
            5991   0    460 If      5                              5992   0    462 Do      5
            5993   0    462 DoIndx  5                              5994   0    465 Assign  5
        $$  5995   0    470 EndInd  5                              5996   0    501 Assign  5
            5997   0    504 Call    5                              5998   0    507 Return  5
            6000   0    511 Do      5                              6001   0    511 Assign  5
            6002   0    513 Call    5                              6003   0    516 Call    5
            6005   0    521 Altret  5 ERROR                        6041   0    523 Proc    6
            6049   0    524 DoIndx  6                              6050   0    530 Assign  6
            6051   0    533 Call    6                              6052   0    536 Assign  6
            6053   0    541 Assign  6                              6054   0    544 Call    6
            6055   0    547 Call    6                              6056   0    552 Assign  6
            6057   0    555 Call    6                         $$$  6058   0    560 Call    6
            6062   0    572 Call    6                              6063   0    575 EndInd  6
            6065   0    603 Call    6                              6066   0    606 Assign  6
            6068   0    611 Assign  6                              6069   0    613 Assign  6
            6070   0    616 Call    6                              6071   0    621 Call    6
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:99   
            6073   0    624 If      6                              6074   0    627 Do      6
            6075   0    627 Assign  6                              6076   0    631 Assign  6
            6077   0    634 Assign  6                              6078   0    637 Assign  6
            6079   0    642 Call    6                              6080   0    645 EndDo   6
            6083   0    645 If      6                              6084   0    647 Do      6
            6085   0    647 Assign  6                              6086   0    651 Call    6
            6087   0    654 Call    6                              6088   0    657 Call    6
            6089   0    661 EndDo   6                              6090   0    662 Call    6
            6091   0    664 Return  6                              6094   0    666 Altret  6 ERROR
            6115   0    670 Proc    7                              6126   0    671 Assign  7
            6127   0    673 Assign  7                              6128   0    674 DoUntl  7
  $$$$$$$$  6129   0    674 If      7                              6131   0    715 Assign  7
            6132   0    720 Assign  7                              6133   0    722 EndUnt  7
            6134   0    730 If      7                              6135   0    732 Do      7
        $$  6136   0    732 Assign  7                           $  6137   0    741 Assign  7
            6138   0    745 Return  7                              6140   0    747 Do      7
            6141   0    747 Assign  7                              6142   0    751 Call    7
            6143   0    754 Call    7                              6144   0    757 Altret  7
            6167   0    761 Proc    8                              6175   0    762 Assign  8
            6176   0    764 DoIndx  8                              6177   0    770 Assign  8
            6178   0    773 Call    8                              6179   0    776 Assign  8
            6180   0   1001 Assign  8                              6181   0   1004 Call    8
         $  6182   0   1007 Call    8                              6183   0   1015 EndInd  8
            6184   0   1023 Call    8                              6185   0   1026 Assign  8
            6186   0   1031 Assign  8                              6187   0   1034 Assign  8
            6188   0   1036 Assign  8                              6189   0   1041 Call    8
            6191   0   1044 Assign  8                              6192   0   1046 Assign  8
            6193   0   1051 Assign  8                              6194   0   1054 Call    8
            6196   0   1057 Assign  8                              6197   0   1061 Call    8
            6198   0   1064 Call    8                              6199   0   1067 Return  8
            6202   0   1071 Altret  8 ERROR                        6225   0   1073 Proc    9
            6232   0   1074 Call    9                              6233   0   1077 Assign  9
         $  6234   0   1102 DoIndx  9                              6235   0   1106 Call    9
            6236   0   1111 Call    9                              6237   0   1114 Assign  9
            6238   0   1117 Call    9                          $$  6239   0   1122 Call    9
            6243   0   1133 Call    9                      $$$$$$  6244   0   1136 EndInd  9
            6245   0   1160 Return  9                              6248   0   1162 Altret  9 ERROR
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:100  
            6265   0   1164 Proc   10                              6269   0   1165 Call   10
            6270   0   1170 Return 10                              6273   0   1172 Altret 10 ERROR
            6290   0   1174 Proc   11                              6294   0   1175 If     11
            6295   0   1177 Call   11                              6296   0   1203 Do     11
            6297   0   1203 Assign 11                              6298   0   1205 Assign 11
            6299   0   1207 Call   11                              6300   0   1212 EndDo  11
            6301   0   1212 Return 11                              6304   0   1214 Altret 11 ERROR
            6317   0   1216 Proc   12                              6321   0   1217 Call   12
            6322   0   1222 Return 12                              6325   0   1224 Altret 12 ERROR


  **** Statement type totals  ****

    77 Assign    65 Call      11 If         3 Case      17 Return    12 Altret
     3 DoUntl     5 DoIndx     1 DoCase    10 Do         3 EndUnt     5 EndInd
     1 EndCse     3 EndDo     13 Proc       3 Entry     12 Labels

 # major stmts=  191 Code/major= 3.46 # stmts=  232 Code/stmt= 2.85  Point total=101.8
 Cost/major stmt=  2.8 Cost/stmt=  2.3 Total cost=    535.4

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$
   6-8  $$
  8-10
 10-12
 12-14
 14-16
 16-18
 18-20
 20-22
 22-??
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:101  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @LOG_REMREF               26-0-0/w PTR         r     1 @NCE#
    25-0-0/w PTR         r     1 @NME#                     20-0-0/w PTR         r     1 @NME#
    24-0-0/w PTR         r     1 @OCE#                     23-0-0/w PTR         r     1 @OME#
    17-0-0/w PTR         r     1 @OME#                     10-0-0/h UBIN(18)    r     1 CUR_POS
    13-0-0/h UBIN(18)    r     1 CUR_POS                    7-0-0/c BIT         r     1 FOUND
    11-0-0/c BIT         r     1 FOUND                     30-0-0/c BIT         r     1 FOUND
    10-0-0/h UBIN(18)    r     1 I                         *0-0-0/w BIT         r     1 LOG_REMREF
    *0-0-0/h UBIN(18)    r     1 NCE#                      11-0-0/h UBIN(18)    r     1 NEW_POS
    14-0-0/h UBIN(18)    r     1 NEW_POS                   *0-0-0/h UBIN(18)    r     1 NME#
    *0-0-0/h UBIN(18)    r     1 NME#                      *0-0-0/h UBIN(18)    r     1 OCE#
    *0-0-0/h UBIN(18)    r     1 OME#                      *0-0-0/h UBIN(18)    r     1 OME#
     7-0-0/w UBIN        r     1 OUTBLK#                   10-0-0/w PTR         r     1 OUTBLK$
     7-0-0/h UBIN(18)    r     1 R                         27-0-0/h UBIN(18)    r     1 R
    15-0-0/h UBIN(18)    r     1 SAVED_CATALOG_DECK#        4-0-0/h UBIN(18)    r     1 SAVED_CATALOG_ENTRY#
     3-0-0/h UBIN(18)    r     1 SAVED_MASTER_ENTRY#

  ****  SYMREF variables  ****

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 CATALOG_DATA
     0-0-0/b UBIN(18)    r         2 DECK#
     0-2-0/b UBIN(18)    r         2 ENTRY_COUNT

     0-0-0/c STRC(45)    r     1 CATALOG_ENTRY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(216)   r     1 CATALOG_KEY
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:102  
     0-1-0/c CHAR(21)    r         2 DATA
     5-2-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(189)   r     1 CATALOG_SEARCH_KEY
     0-0-0/c CHAR(21)    r         2 DATA

     0-0-0/d STRC(5220)  r     1 DUP
    17-0-0/w PTR         r         2 CMD$
    20-0-0/w UBIN        r         2 MSG_CODE
    21-0-0/w UBIN        r         2 HDR_CODE
    26-0-0/c CHAR        r         2 LINE_VFC
    56-0-0/c BIT         r         2 FORCE_NEW_PAGE
   104-0-0/w STRC(504)   r         2 DF
   104-0-0/c BIT         r          3 ENTERED
   104-2-0/c BIT         r          3 REPORT_ERROR
   105-0-0/w UBIN        r          3 OPEN_TYPE
   106-0-0/w UBIN        r          3 CLOSE_TYPE
   122-0-0/w STRC(432)   r         2 LOG
   122-0-0/w UBIN        r          3 TYPE
   123-0-0/c CHAR(21)    r          3 CATALOG
   130-1-0/c CHAR(23)    r          3 DECK
   142-0-0/c CHAR(40)    r         2 HOLD_AREA
   154-0-0/w UBIN        r         2 HOLD_AREA_LGTH
   155-1-0/c BIT         r         2 BREAK_DISABLED

     0-0-0/w STRC(72)    r     1 MASTER_DATA
     0-2-0/b UBIN(18)    r         2 ENTRY_COUNT

     0-0-0/c STRC(45)    r     1 MASTER_ENTRY_KEY
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(864)   r     1 OBJECT
    24-0-0/b UBIN(18)    r         2 DECK#

     0-0-0/w STRC(216)   r     1 OBJECT_KEY
     0-1-0/c CHAR(23)    r         2 DATA

PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:103  
     0-0-0/w STRC(576)   r     1 OBJECT_REFLIST_DATA
     0-0-0/b UBIN        r         2 NUM_REFS
     1-0-0/b STRC        r         2 REFS(0:14)
     1-0-0/b UBIN(18)    r          3 ME#
     1-2-0/b UBIN(18)    r          3 CE#

     0-0-0/c STRC(45)    r     1 OBJECT_REFLIST_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(207)   r     1 OBJECT_SEARCH_KEY
     0-0-0/c CHAR(23)    r         2 DATA

     0-0-0/c STRC(45)    r     1 SUBCATALOG_KEY
     0-1-0/b UBIN(18)    r         2 DECK#


  ****  BASED and DCB variables  ****

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK
     0-2-0/h UBIN(18)    r         2 CODE
     1-0-0/h UBIN(18)    r         2 NSUBLKS
     3-0-0/b PTR         r         2 SUBLK$(0:0)

     0-0-0/w ASTR(153)   r     1 OUT$SYM
     4-0-0/c UBIN(9)     r         2 COUNT
     4-1-0/c ACHR        r         2 TEXT



   Procedure TOU$REMREF requires 662 words for executable code.
   Procedure TOU$REMREF requires 28 words of local(AUTO) storage.
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:104  

    No errors detected in file TOU$REMREF.:E05TSI    .
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:105  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:106  
          MINI XREF LISTING

CATALOG_DATA.DECK#
      5383**DCL      5900>>ASSIGN   6233>>ASSIGN
CATALOG_DATA.ENTRY_COUNT
      5384**DCL      5904>>DOUNTIL  6049>>DOINDEX  6066<<ASSIGN   6066>>ASSIGN   6083>>IF       6234>>DOINDEX
CATALOG_ENTRY_KEY.DECK#
      5398**DCL      5900<<ASSIGN   6233<<ASSIGN
CATALOG_ENTRY_KEY.ENTRY#
      5399**DCL      5668>>ASSIGN   5689>>ASSIGN   5707>>ASSIGN   5901<<ASSIGN   5904>>DOUNTIL  5908<<ASSIGN
      5908>>ASSIGN   5914>>ASSIGN   6050<<ASSIGN   6053<<ASSIGN   6234<<DOINDEX  6239<>CALL     6239<>CALL
CATALOG_KEY.DATA
      5412**DCL      6076>>ASSIGN   6186<<ASSIGN   6192>>ASSIGN
CATALOG_KEY.DECK#
      5413**DCL      6175>>ASSIGN   6187<<ASSIGN
CATALOG_SEARCH_KEY.DATA
      5425**DCL      5848<<ASSIGN   6186>>ASSIGN
CUR_POS IN PROCEDURE RR_DELETE_CATALOG
      6169**DCL      6176<<DOINDEX  6177>>ASSIGN   6179>>ASSIGN   6182<>CALL
CUR_POS IN PROCEDURE RR_REMOVE_FROM_CATALOG
      6044**DCL      6049<<DOINDEX  6050>>ASSIGN   6052>>ASSIGN   6058<>CALL
DUP.BREAK_DISABLED
      5359**DCL      5633<<ASSIGN   5638<<ASSIGN   5647<<ASSIGN
DUP.CMD$
      5257**DCL      5844>>DOINDEX  5845>>ASSIGN
DUP.DF.CLOSE_TYPE
      5325**DCL      5733<<ASSIGN   6297<<ASSIGN
DUP.DF.ENTERED
      5317**DCL      5730<<ASSIGN   5852<<ASSIGN   5859>>IF
DUP.DF.OPEN_TYPE
      5323**DCL      5731<<ASSIGN
DUP.DF.REPORT_ERROR
      5321**DCL      5732<<ASSIGN
DUP.FORCE_NEW_PAGE
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:107  
      5281**DCL      5729<<ASSIGN
DUP.HDR_CODE
      5262**DCL      5727<<ASSIGN
DUP.HOLD_AREA
      5352**DCL      5853<<ASSIGN   6078<<ASSIGN
DUP.HOLD_AREA_LGTH
      5354**DCL      5854<<ASSIGN
DUP.LINE_VFC
      5271**DCL      5728<<ASSIGN
DUP.LOG.CATALOG
      5335**DCL      6076<<ASSIGN   6192<<ASSIGN
DUP.LOG.DECK
      5337**DCL      6077<<ASSIGN   6193<<ASSIGN
DUP.LOG.TYPE
      5333**DCL      6075<<ASSIGN   6191<<ASSIGN
DUP.LOG_V
      5339**DCL      5344--REDEF
DUP.MSG_CODE
      5260**DCL      5642<<ASSIGN   5649<<ASSIGN   5918<<ASSIGN   5948<<ASSIGN   6001<<ASSIGN   6068<<ASSIGN
      6085<<ASSIGN   6141<<ASSIGN   6196<<ASSIGN   6298<<ASSIGN
ERROR
      5673**LABEL    5637--CALLALT  5669--CALLALT  5690--CALLALT  5708--CALLALT  5709--CALLALT
ERROR IN PROCEDURE RR_ADJUST_CATALOG
      6273**LABEL    6269--CALLALT
ERROR IN PROCEDURE RR_ADJUST_MASTER_CATALOG
      6304**LABEL    6295--CALLALT
ERROR IN PROCEDURE RR_COMMAND_SETUP
      5865**LABEL    5855--CALLALT  5861--CALLALT
ERROR IN PROCEDURE RR_DELETE_CATALOG
      6202**LABEL    6178--CALLALT  6181--CALLALT  6182--CALLALT  6184--CALLALT  6189--CALLALT  6194--CALLALT
ERROR IN PROCEDURE RR_FIND_DECK
      5922**LABEL    5899--CALLALT  5905--CALLALT
ERROR IN PROCEDURE RR_GET_REFLIST
      5951**LABEL    5942--CALLALT  5944--CALLALT
ERROR IN PROCEDURE RR_REMOVE_FROM_CATALOG
      6094**LABEL    6051--CALLALT  6054--CALLALT  6055--CALLALT  6057--CALLALT  6058--CALLALT  6062--CALLALT
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:108  
      6065--CALLALT  6079--CALLALT  6088--CALLALT  6090--CALLALT
ERROR IN PROCEDURE RR_REMOVE_FROM_REFLIST
      6005**LABEL    5997--CALLALT
ERROR IN PROCEDURE RR_REORDER_REFLISTS
      6248**LABEL    6232--CALLALT  6235--CALLALT  6236--CALLALT  6238--CALLALT  6239--CALLALT  6243--CALLALT
ERROR IN PROCEDURE RR_SAVE_LOG
      6325**LABEL    6321--CALLALT
ERROR_RETURN
      5647**LABEL    5626--CALLALT  5628--CALLALT  5629--CALLALT  5630--CALLALT  5631--CALLALT  5632--CALLALT
      5634--CALLALT  5635--CALLALT  5636--CALLALT  5639--CALLALT
FOUND IN PROCEDURE RR_ADJUST_REFLIST
      6122**DCL      6127<<ASSIGN   6128>>DOUNTIL  6131<<ASSIGN   6134>>IF
FOUND IN PROCEDURE RR_FIND_DECK
      5895**DCL      5902<<ASSIGN   5904>>DOUNTIL  5907<<ASSIGN   5911>>IF
FOUND IN PROCEDURE RR_REMOVE_FROM_REFLIST
      5979**DCL      5984<<ASSIGN   5985>>DOUNTIL  5988<<ASSIGN   5991>>IF
I IN PROCEDURE RR_REMOVE_FROM_REFLIST
      5978**DCL      5993<<DOINDEX  5994>>ASSIGN   5994>>ASSIGN
LOG_REMREF IN PROCEDURE RR_REMOVE_FROM_CATALOG
      6043**DCL      6041--PROC     6073>>IF
MASTER_DATA.ENTRY_COUNT
      5438**DCL      6176>>DOINDEX  6185<<ASSIGN   6185>>ASSIGN   6294>>IF
MASTER_ENTRY_KEY.ENTRY#
      5453**DCL      5667>>ASSIGN   5688>>ASSIGN   5706>>ASSIGN   5913>>ASSIGN   6177<<ASSIGN   6180<<ASSIGN
NCE# IN PROCEDURE RR_ADJUST_REFLIST
      6120**DCL      6115--PROC     6137>>ASSIGN
NEW_POS IN PROCEDURE RR_DELETE_CATALOG
      6170**DCL      6179<<ASSIGN   6180>>ASSIGN   6182<>CALL
NEW_POS IN PROCEDURE RR_REMOVE_FROM_CATALOG
      6045**DCL      6052<<ASSIGN   6053>>ASSIGN   6058<>CALL
NME# IN PROCEDURE RR_ADJUST_REFLIST
      6119**DCL      6115--PROC     6136>>ASSIGN
NME# IN PROCEDURE RR_REORDER_REFLISTS
      6228**DCL      6225--PROC     6239<>CALL
OBJECT.BCD
      5465**DCL      5487--REDEF    5510--REDEF
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:109  
OBJECT.DECK#
      5511**DCL      5943>>ASSIGN   6056>>ASSIGN   6237>>ASSIGN
OBJECT.NIO_BCD.X_OF_N
      5498**DCL      5503--REDEF
OBJECT_KEY.DATA
      5529**DCL      5906>>IF       5919<<ASSIGN   6069<<ASSIGN   6077>>ASSIGN
OBJECT_REFLIST_DATA.NUM_REFS
      5555**DCL      5945>>IF       5985>>DOUNTIL  5993>>DOINDEX  5996<<ASSIGN   5996>>ASSIGN   6128>>DOUNTIL
OBJECT_REFLIST_DATA.REFS
      5556**DCL      5994<<ASSIGN   5994>>ASSIGN
OBJECT_REFLIST_DATA.REFS.CE#
      5558**DCL      5986>>IF       6129>>IF       6137<<ASSIGN
OBJECT_REFLIST_DATA.REFS.ME#
      5557**DCL      5986>>IF       6129>>IF       6136<<ASSIGN
OBJECT_REFLIST_KEY.DECK#
      5542**DCL      5943<<ASSIGN   6056<<ASSIGN   6237<<ASSIGN
OBJECT_SEARCH_KEY.DATA
      5570**DCL      5850<<ASSIGN   5906>>IF       5919>>ASSIGN   6069>>ASSIGN
OCE# IN PROCEDURE RR_ADJUST_REFLIST
      6118**DCL      6115--PROC     6129>>IF
OME# IN PROCEDURE RR_ADJUST_REFLIST
      6117**DCL      6115--PROC     6129>>IF
OME# IN PROCEDURE RR_REORDER_REFLISTS
      6227**DCL      6225--PROC     6239<>CALL
OUT$BLK.CODE IN PROCEDURE RR_COMMAND_SETUP
      5772**DCL      5846>>DOCASE
OUT$BLK.NSUBLKS IN PROCEDURE RR_COMMAND_SETUP
      5776**DCL      5844>>DOINDEX
OUT$BLK.SUBLK$ IN PROCEDURE RR_COMMAND_SETUP
      5797**DCL      5845>>ASSIGN
OUT$SYM.COUNT IN PROCEDURE RR_COMMAND_SETUP
      5833**DCL      5836--IMP-SIZ  5848>>ASSIGN   5850>>ASSIGN   5853>>ASSIGN   5854>>ASSIGN
OUT$SYM.TEXT IN PROCEDURE RR_COMMAND_SETUP
      5836**DCL      5848>>ASSIGN   5850>>ASSIGN   5853>>ASSIGN
OUTBLK# IN PROCEDURE RR_COMMAND_SETUP
      5756**DCL      5844<<DOINDEX  5845>>ASSIGN
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:110  
OUTBLK$ IN PROCEDURE RR_COMMAND_SETUP
      5757**DCL      5845<<ASSIGN   5846>>DOCASE   5848>>ASSIGN   5848>>ASSIGN   5850>>ASSIGN   5850>>ASSIGN
      5853>>ASSIGN   5853>>ASSIGN   5854>>ASSIGN
R IN PROCEDURE RR_ADJUST_REFLIST
      6121**DCL      6126<<ASSIGN   6128>>DOUNTIL  6129>>IF       6129>>IF       6132<<ASSIGN   6132>>ASSIGN
      6136>>ASSIGN   6137>>ASSIGN
R IN PROCEDURE RR_REMOVE_FROM_REFLIST
      5977**DCL      5983<<ASSIGN   5985>>DOUNTIL  5986>>IF       5986>>IF       5989<<ASSIGN   5989>>ASSIGN
      5993>>DOINDEX
RR_ADJUST_CATALOG
      6265**PROC     6090--CALL
RR_ADJUST_MASTER_CATALOG
      6290**PROC     5636--CALL     5709--CALL
RR_ADJUST_REFLIST
      6115**PROC     6058--CALL     6239--CALL
RR_COMMAND_SETUP
      5754**PROC     5626--CALL
RR_DELETE_CATALOG
      6167**PROC     5708--CALL     6088--CALL
RR_FIND_DECK
      5893**PROC     5631--CALL
RR_GET_REFLIST
      5938**PROC     5632--CALL
RR_INIT_DUP
      5723**PROC     5625--CALL
RR_REMOVE_FROM_CATALOG
      6041**PROC     5635--CALL     5669--CALL
RR_REMOVE_FROM_REFLIST
      5975**PROC     5634--CALL     5690--CALL
RR_REORDER_REFLISTS IN PROCEDURE RR_DELETE_CATALOG
      6225**PROC     6182--CALL
RR_SAVE_LOG
      6317**PROC     5637--CALL
SAVED_CATALOG_DECK# IN PROCEDURE RR_DELETE_CATALOG
      6171**DCL      6175<<ASSIGN   6187>>ASSIGN   6188>>ASSIGN
SAVED_CATALOG_ENTRY#
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:111  
      5590**DCL      5668<<ASSIGN   5689<<ASSIGN   5707<<ASSIGN   5914<<ASSIGN   5986>>IF       6049>>DOINDEX
SAVED_MASTER_ENTRY#
      5589**DCL      5667<<ASSIGN   5688<<ASSIGN   5706<<ASSIGN   5913<<ASSIGN   5986>>IF       6058<>CALL
      6058<>CALL     6176>>DOINDEX
SUBCATALOG_KEY.DECK#
      5583**DCL      6188<<ASSIGN
TOU$DFU_DF_DL_CATALOG
      5610**DCL-ENT  6189--CALL
TOU$DFU_DF_DL_CATALOG_ENTRY
      5608**DCL-ENT  6065--CALL
TOU$DFU_DF_DL_MASTER_ENTRY
      5609**DCL-ENT  6184--CALL
TOU$DFU_DF_RD_CATALOG_CONTROL
      5603**DCL-ENT  5899--CALL     6232--CALL
TOU$DFU_DF_RD_CATALOG_ENTRY
      5604**DCL-ENT  5905--CALL     6051--CALL     6235--CALL
TOU$DFU_DF_RD_LOG
      5618**DCL-ENT  5630--CALL
TOU$DFU_DF_RD_MASTER_ENTRY
      5602**DCL-ENT  6178--CALL
TOU$DFU_DF_RD_OBJECT
      5605**DCL-ENT  5942--CALL     6055--CALL     6236--CALL
TOU$DFU_DF_RD_OBJECT_REFLIST
      5606**DCL-ENT  5944--CALL     6057--CALL     6238--CALL
TOU$DFU_DF_WR_CATALOG_CONTROL
      5614**DCL-ENT  6269--CALL
TOU$DFU_DF_WR_CATALOG_ENTRY
      5615**DCL-ENT  6054--CALL
TOU$DFU_DF_WR_LOG
      5617**DCL-ENT  6321--CALL
TOU$DFU_DF_WR_MASTER_CONTROL
      5612**DCL-ENT  6295--CALL
TOU$DFU_DF_WR_MASTER_ENTRY
      5613**DCL-ENT  6181--CALL
TOU$DFU_DF_WR_OBJECT_REFLIST
      5616**DCL-ENT  5997--CALL     6062--CALL     6243--CALL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:112  
TOU$DU_CLOSE_DF
      5596**DCL-ENT  5639--CALL     5648--CALL
TOU$DU_OPEN_DF
      5595**DCL-ENT  5628--CALL
TOU$DU_PRINTER_WRITE
      5599**DCL-ENT  6003--CALL     6071--CALL     6087--CALL     6143--CALL     6198--CALL
TOU$DU_SET_DF_FID
      5594**DCL-ENT  5855--CALL     5861--CALL
TOU$DU_UPDATE_LOG
      5600**DCL-ENT  6079--CALL     6194--CALL
TOU$DU_USER_WRITE
      5598**DCL-ENT  5643--CALL     5650--CALL     5920--CALL     5949--CALL     6002--CALL     6070--CALL
      6086--CALL     6142--CALL     6197--CALL     6299--CALL
TOU$L_SHOW_DCB
      5620**DCL-ENT  5627--CALL
TOU$ND_FIND_CATALOG
      5621**DCL-ENT  5629--CALL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:113  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:114  
              FULL UREF LISTING

CATALOG_DATA
      5382**DCL
CATALOG_DATA.RFU
      5385**DCL
CATALOG_ENTRY_KEY
      5396**DCL
CATALOG_ENTRY_KEY.SIZE
      5397**DCL
CATALOG_KEY
      5410**DCL
CATALOG_KEY.SIZE
      5411**DCL
CATALOG_SEARCH_KEY
      5424**DCL
DUP
      5239**DCL
DUP.BATCH_MODE
      5241**DCL
DUP.BCD_V
      5310**DCL
DUP.BCD_V.PTR$
      5313**DCL
DUP.BINARY_V
      5305**DCL
DUP.BINARY_V.PTR$
      5308**DCL
DUP.BOTTOM_LINE#
      5277**DCL
DUP.BREAK_RETURN
      5361**DCL
DUP.BREAK_TERMINATE
      5357**DCL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:115  
DUP.CPU_TYPE
      5370**DCL
DUP.CURRENT_LINE#
      5275**DCL
DUP.CURRENT_PAGE#
      5273**DCL
DUP.DF
      5316**DCL
DUP.DF.FID
      5327**DCL
DUP.DF.FID_LGTH
      5329**DCL
DUP.DF.NO_EXIST
      5319**DCL
DUP.DS_V
      5250**DCL
DUP.ERROR_IMAGE
      5279**DCL
DUP.FAULT_ERROR
      5245**DCL
DUP.IFAD
      5284**DCL
DUP.IFAD.CONFIG_TAB
      5293**DCL
DUP.IFAD.DEVICE_INPUT
      5289**DCL
DUP.IFAD.DRIVE_NUMBER
      5299**DCL
DUP.IFAD.ENTERED
      5287**DCL
DUP.IFAD.FID
      5301**DCL
DUP.IFAD.FID_LGTH
      5303**DCL
DUP.IFAD.IMU_NUMBER
      5297**DCL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:116  
DUP.IFAD.IMU_TAB
      5291**DCL
DUP.IFAD.ME_ALLOWED
      5285**DCL
DUP.IFAD.NUM_VOLUMES
      5295**DCL
DUP.LOG
      5332**DCL
DUP.LOG_V.PTR$
      5342**DCL
DUP.LOG_V_
      5344**DCL
DUP.MSG_V
      5266**DCL
DUP.MSG_V.PTR$
      5269**DCL
DUP.NUM_LINES
      5264**DCL
DUP.NUM_WORDS
      5248**DCL
DUP.PROCESS_COMPLETE
      5243**DCL
DUP.RESPONSE
      5253**DCL
DUP.RESPONSE_LGTH
      5255**DCL
DUP.SITE_ID
      5368**DCL
DUP.SITE_NAME
      5363**DCL
DUP.SITE_NAME.LGTH
      5364**DCL
DUP.SITE_NAME.TEXT
      5366**DCL
DUP.TEMP
      5346**DCL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:117  
DUP.TEMP.CLOSE_TYPE
      5349**DCL
DUP.TEMP.OPEN_TYPE
      5347**DCL
MASTER_DATA
      5436**DCL
MASTER_DATA.DECK#
      5437**DCL
MASTER_DATA.RFU
      5439**DCL
MASTER_ENTRY_KEY
      5450**DCL
MASTER_ENTRY_KEY.DECK#
      5452**DCL
MASTER_ENTRY_KEY.SIZE
      5451**DCL
OBJECT
      5464**DCL
OBJECT.BCD.ASSEMBLER
      5482**DCL
OBJECT.BCD.CLASS
      5470**DCL
OBJECT.BCD.CONTROL
      5466**DCL
OBJECT.BCD.DATE
      5484**DCL
OBJECT.BCD.DONT_APPLY
      5471**DCL
OBJECT.BCD.DONT_APPLY.CP6
      5473**DCL
OBJECT.BCD.DONT_APPLY.DPS8000
      5476**DCL
OBJECT.BCD.DONT_APPLY.DPS90
      5475**DCL
OBJECT.BCD.FILENAME
      5480**DCL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:118  
OBJECT.BCD.GECALL
      5483**DCL
OBJECT.BCD.LBL
      5485**DCL
OBJECT.BCD.LIBRARY
      5468**DCL
OBJECT.BCD.LOAD_TYPE
      5469**DCL
OBJECT.BCD.MODEL
      5479**DCL
OBJECT.BCD.SEQ
      5486**DCL
OBJECT.BCD.TYPE
      5467**DCL
OBJECT.BCD_
      5510**DCL
OBJECT.BINARY_COUNT
      5512**DCL
OBJECT.CHECKSUM
      5516**DCL
OBJECT.DECK_CHECKSUM
      5515**DCL
OBJECT.LOAD_SIZE
      5514**DCL
OBJECT.NIO_BCD
      5487**DCL
OBJECT.NIO_BCD.ASSEMBLER
      5504**DCL
OBJECT.NIO_BCD.CLASS
      5492**DCL
OBJECT.NIO_BCD.CONTROL
      5488**DCL
OBJECT.NIO_BCD.DATA
      5494**DCL
OBJECT.NIO_BCD.EQUIP_TYPE
      5496**DCL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:119  
OBJECT.NIO_BCD.FILE_NAME
      5497**DCL
OBJECT.NIO_BCD.LBL
      5508**DCL
OBJECT.NIO_BCD.LIBRARY
      5490**DCL
OBJECT.NIO_BCD.LOAD_TYPE
      5491**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB
      5505**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB
      5506**DCL
OBJECT.NIO_BCD.SEQ
      5509**DCL
OBJECT.NIO_BCD.TYPE
      5489**DCL
OBJECT.NIO_BCD.X_OF_N.N
      5502**DCL
OBJECT.NIO_BCD.X_OF_N.X
      5500**DCL
OBJECT.NIO_BCD.X_OF_N_
      5503**DCL
OBJECT.TOTAL_COUNT
      5513**DCL
OBJECT_KEY
      5527**DCL
OBJECT_KEY.SIZE
      5528**DCL
OBJECT_REFLIST_DATA
      5554**DCL
OBJECT_REFLIST_KEY
      5540**DCL
OBJECT_REFLIST_KEY.ENTRY#
      5543**DCL
OBJECT_REFLIST_KEY.SIZE
      5541**DCL
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:120  
OBJECT_SEARCH_KEY
      5569**DCL
OUT$BLK IN PROCEDURE RR_COMMAND_SETUP
      5764**DCL
OUT$BLK.CPOS IN PROCEDURE RR_COMMAND_SETUP
      5790**DCL
OUT$BLK.NDTYPE IN PROCEDURE RR_COMMAND_SETUP
      5767**DCL
OUT$BLK.SCRITCH IN PROCEDURE RR_COMMAND_SETUP
      5780**DCL
OUT$BLK.TEMP IN PROCEDURE RR_COMMAND_SETUP
      5765**DCL
OUT$SYM IN PROCEDURE RR_COMMAND_SETUP
      5810**DCL
OUT$SYM.CODE IN PROCEDURE RR_COMMAND_SETUP
      5816**DCL
OUT$SYM.CPOS IN PROCEDURE RR_COMMAND_SETUP
      5825**DCL
OUT$SYM.NDTYPE IN PROCEDURE RR_COMMAND_SETUP
      5813**DCL
OUT$SYM.NSUBLKS IN PROCEDURE RR_COMMAND_SETUP
      5819**DCL
OUT$SYM.SCRITCH IN PROCEDURE RR_COMMAND_SETUP
      5822**DCL
OUT$SYM.TEMP IN PROCEDURE RR_COMMAND_SETUP
      5811**DCL
OUT$SYM.TEXTC$ IN PROCEDURE RR_COMMAND_SETUP
      5828**DCL
SUBCATALOG_KEY
      5581**DCL
SUBCATALOG_KEY.ENTRY#
      5584**DCL
SUBCATALOG_KEY.SIZE
      5582**DCL
TOU$REMREF
        46**PROC
PL6.E3A0      #001=TOU$REMREF File=TOU$REMREF.:E05TSI                            WED 07/30/97 06:50 Page:121  
TOU$RR_DELETE_CATALOG
      5704**ENTRY
TOU$RR_REMOVE_FROM_CATALOG
      5665**ENTRY
TOU$RR_REMOVE_FROM_REFLIST
      5686**ENTRY
