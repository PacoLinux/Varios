VERSION E05

PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:1    
        1        1        /*M*   JSX$XCON   Exit Control routines    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8                                                /*                                    */
        9        9        JSX$XCONGO: PROC(SAVEP);
       10       10    1   DCL 1 SAVEP,
       11       11    1         2 CECCB BIT(9) UNAL,              /*NEW ECCB FLAGS                      */
       12       12    1         2 FLAG,                           /* Used with M$SAVE                   */
       13       13    1           3 ALTBIT BIT(1) UNAL,
       14       14    1           3 * BIT(8) UNAL,
       15       15    1         2 ECCS UBIN(18) UNAL,             /* ECC SUBCODE                        */
       16       16    1         2 RNST BIT(9) UNAL,               /* JIT.RNST                           */
       17       17    1         2 XCFL BIT(9) UNAL,               /* JIT.XCONFLGS                       */
       18       18    1         2 LIMT BIT(9) UNAL,               /* JIT.XLIMFLG                        */
       19       19    1         2 ECCBF BIT(9) UNAL,              /* ECCB.XCFLGS                        */
       20       20    1         2 JERR BIT(36),                   /* JIT.ERR                            */
       21       21    1         2 P# UBIN(36);                    /* # OF PARAMETERS                    */
       22       22                                                /*  LOCAL AUTO                        */
       23       23
       24       24    1   DCL SSIC UBIN(36);                      /*IC FOR SAFE-STORE FRAME             */
       25       25    1   DCL ECC  UBIN(36);                      /*EXC. COND. CODE                     */
       26       26    1   DCL TEMP# UBIN(36);
       27       27    1   DCL TECCB BIT(9);
       28       28
       29       29
       30       30
       31       31                                                /*  EXTERNAL PROCEDURES               */
       32       32
       33       33    1   DCL JSE$ABORTX ENTRY;
       34       34    1   DCL SST$SSFTCB ENTRY(6) ALTRET;
       35       35    1   DCL UDB$AUTO  ENTRY;
       36       36    1   DCL SSU$DELTAGO ENTRY(3);
       37       37
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:2    
       38       38        /* EXTERNAL DATA */
       39       39
       40       40    1   DCL B$JIT$ PTR SYMREF READONLY;
       41       41        %INCLUDE B_MAGIC_C;
       42      159        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
       43      252
       44      253        /* BASED STRUCTURES */
       45      254
       46      255
       47      256        %INCLUDE B$JIT_C;
       48      570        %B$JIT0;
       49      659        %U$JIT1X;
       50      662        %M$JIT2X;
       51      665        %F$JIT3X;
       52      668        %S$JIT4X;
       53      671        %J$JIT5;
       54      759        %A$JIT6X;
       55      762                                                /*                                    */
       56      763        %INCLUDE B$SS;
       57      942                                                /*                                    */
       58      943        %INCLUDE UE_CP6;
       59     1634        %B$ECCB;
       60     1642        %SUB_EXC;
       61     1689        %SUB_ECCDELTA;
       62     1726        %INCLUDE B_MACROS_C;
       63     1837        %T01DESCR (NAME=B$$DESCR);
       64     1845        %INCLUDE B_ULSMAC_C;
       65     2954        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
       66     3153        %INCLUDE B$USER;
       67     3369        %B$USERREFS;
       68     3373
       69     3374                                                /* STRING SUBSTITUTIONS               */
       70     3375
       71     3376        %SUB B$JIT=B$JIT$->B$JIT;
       72     3377        %SUB B$U=S$CU$->B$U;
       73     3378        %SUB B$SS=B_MPT.SS$->B$SS;
       74     3379        %SUB B$ECCB=B_MPT.ECCB$->B$ECCB;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:3    
       75     3380                                                /*                                    */
       76     3381
       77     3382        /* TO SET JIT.ERR */
       78     3383        %INCLUDE UE_ERRORS_C;
       79     3401        %INCLUDE UD_SEV_C;
       80     3415        %INCLUDE J_ERRSET_C;
       81     3435        %SUB FCG#='1223'O;
       82     3436        %SUB MID#='30'O;
       83     3437        %ERRCODE (NAME=ENOROOM,COD#=%E$TCBFULL);
       84     3445
       85     3446        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:4    
       86     3447        /* SET UP EC FRAME FOR EXIT CONTROL */
       87     3448        /* CALLED BY JSX$DLTAXCON AND JSX$XCONGO */
       88     3449
       89     3450    1   SETXCON: PROC;
       90     3451
       91     3452    2      SSIC = B$ECCB.XCON;
       92     3453    2      ECC=%ECC_XCON#;
       93     3454                                                /*                                    */
       94     3455    2      IF (B$JIT.JUNK & (%JJ_RUNXCON# | %JJ_DLIB#) )
       95     3456    3      THEN DO;
       96     3457    3           SAVEP.ECCS=1;
       97     3458    3           B$JIT.JUNK = (B$JIT.JUNK &~%JJ_RUNXCON#);
       98     3459    3           END;
       99     3460    2      ELSE SAVEP.ECCS=0;
      100     3461                                                /*                                    */
      101     3462                                                /*                                    */
      102     3463    2      SAVEP.RNST = B$JIT.RNST;
      103     3464    2      SAVEP.XCFL = B$JIT.XCONF;
      104     3465    2      SAVEP.LIMT = B$JIT.XLIMFLG;
      105     3466    2      SAVEP.CECCB=( (B$ECCB.XCONF | '400'O) &~ SAVEP.ECCBF);
      106     3467                                      /*SAVEP.ECCBF has been set up by the caller     */
      107     3468    2      SAVEP.FLAG='0'B;
      108     3469    2      SAVEP.JERR = B$JIT.ERR;
      109     3470    2      SAVEP.P# = 0;
      110     3471
      111     3472    2      RETURN;
      112     3473    2   END SETXCON;
      113     3474        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:5    
      114     3475
      115     3476
      116     3477    1      B$ECCB.XCONF=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );
      117     3478                                      /* So DELTA will recognize YC-Save when DIC     */
      118     3479    1      CALL SETXCON;
      119     3480    1      IF B_MPT.TCBDESC$->B$$DESCR.BOUND = 0 THEN GOTO NOTCB;
      120     3481                                                /*                                    */
      121     3482    1      CALL SST$SSFTCB(SSIC,ECC,SAVEP,B_MPT.SS$,B_MPT.TCB$) ALTRET(TCBFULL);
      122     3483    1      B$ECCB.XCONF.NOTCB='0'B;
      123     3484    1   GOXCON: ;
      124     3485    1      B$JIT.XCONF=( (B$JIT.XCONF | B$JIT.FRS) | (B$JIT.RNST & %XC_PRNST#) );
      125     3486    1      B$JIT.RNST= '000'O;
      126     3487    1      B$ECCB.XCONF.PROG = '1'B;
      127     3488    1      CALL UDB$AUTO;
      128     3489    1   TCBFULL: ;
      129     3490    1      IF B$ECCB.XCONF.NOTCB='1'B
      130     3491    1      THEN RETURN;
      131     3492                                                /*ONLY ONE XCON SHOT WHEN TCB IS FULL */
      132     3493    1      ECC=%ECC_TCBFULL#;
      133     3494    1      CALL SST$SSFTCB(SSIC,ECC,SAVEP,B_MPT.SS$,B_MPT.TCB$) ALTRET(NOTCB);
      134     3495    1   NOTCB: ;
      135     3496    1      B$SS.IC = B$ECCB.XCON;
      136     3497    1      B$SS.IR.MIR = '0'B;
      137     3498    1      B$ECCB.XCONF.NOTCB= '1'B;
      138     3499    1      GOTO GOXCON;
      139     3500        /* NO RETURN FROM JSX$XCONGO */
      140     3501        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:6    
      141     3502
      142     3503    1   JSX$DLTAXCON: ENTRY(SAVEP);
      143     3504    1      CALL SETXCON;
      144     3505    1      B$JIT.RNST= '000'O;
      145     3506    1      CALL SSU$DELTAGO (ECC,SAVEP);
      146     3507        /* NO RETURN FROM JSX$DLTAXCON */
      147     3508        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:7    
      148     3509
      149     3510    1   JSX$XCONSAVE: ENTRY(SAVEP);
      150     3511    1      TEMP#=SAVEP.P#;
      151     3512    1      SAVEP.ECCBF=B$ECCB.XCONF;
      152     3513    1      CALL SETXCON;
      153     3514    1      SAVEP.P#=TEMP#;
      154     3515    1      IF (B$JIT.SVLDTF & %SVL_MSAVE#)
      155     3516    1      THEN SAVEP.FLAG.ALTBIT = B$SS.FPT.ALT;
      156     3517    1      ELSE SAVEP.FLAG.ALTBIT = '0'B;
      157     3518    1      IF (B$JIT.XCONF & %RS_CL3#)
      158     3519    1      THEN GOTO NO_DELTA;
      159     3520    1      IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & '020'O)
      160     3521    2      THEN DO;
      161     3522    2           TECCB=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );
      162     3523    2           TECCB=(TECCB | '400'O);         /*IN PROGRESS                         */
      163     3524    2           SAVEP.CECCB=(TECCB &~ SAVEP.ECCBF);
      164     3525    2           B$JIT.RNST='000'O;
      165     3526    2           CALL SSU$DELTAGO (ECC,SAVEP);
      166     3527    2           END;
      167     3528    2      ELSE DO;
      168     3529    2   NO_DELTA: ;
      169     3530    2           B$ECCB.XCONF=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );
      170     3531    2           TECCB=(B$ECCB.XCONF | '400'O);
      171     3532    2           SAVEP.CECCB=(TECCB &~ SAVEP.ECCBF);
      172     3533    2           CALL SST$SSFTCB(SSIC,ECC,SAVEP,B_MPT.SS$,B_MPT.TCB$) ALTRET(NO_ROOM);
      173     3534    2           GOTO GOXCON;
      174     3535    2           END;
      175     3536    1   NO_ROOM: ;               /*RETURN TO JSP$PMME IF NO ROOM IN TCB FOR SAVE-XCON */
      176     3537    1      B$ECCB.XCONF=(B$ECCB.XCONF &~'006'O); /*RESET SAVE BITS*/
      177     3538    1      B$JIT.ERR=ENOROOM;
      178     3539    1      RETURN;
      179     3540        /*E*   ERROR:  JSX-E$TCBFULL-E
      180     3541               MESSAGE: Insufficient room in TCB for SAVE or LDTRC Exit Control.
      181     3542        */
      182     3543        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:8    
      183     3544           /* COME HERE IF DIC OR ASLIC
      184     3545              OR IF USER DOESNT WANT XCON FOR SAVE */
      185     3546    1   JSX$SVLDTXCON: ENTRY(SAVEP);
      186     3547    1      IF B_MPT.TCBDESC$->B$$DESCR.BOUND = 0 THEN GOTO NO_ROOM2;
      187     3548    1      TEMP#=SAVEP.P#;
      188     3549    1      SAVEP.ECCBF=B$ECCB.XCONF;
      189     3550    1      CALL SETXCON;
      190     3551    1      SAVEP.P#=TEMP#;
      191     3552    1      ECC=%ECC_SAVLDT#;
      192     3553    1      SSIC=B$SS.IC;
      193     3554    1      SAVEP.CECCB=(B$JIT.SVLDTF & %SVL_ECCB#);
      194     3555    1      CALL SST$SSFTCB(SSIC,ECC,SAVEP,B_MPT.SS$,B_MPT.TCB$) ALTRET(NO_ROOM2);
      195     3556    1      CALL JSE$ABORTX;
      196     3557    1   NO_ROOM2: ;              /*RETURN TO JSP$PMME IF NO ROOM IN TCB FOR SAVE-XCON */
      197     3558    1      B$JIT.ERR=ENOROOM;
      198     3559    1      RETURN;
      199     3560    1   END JSX$XCONGO;
      200     3561
      201     3562
      202     3563        %EOD;

PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:9    
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSX$XCONGO.

   Procedure JSX$XCONGO requires 321 words for executable code.
   Procedure JSX$XCONGO requires 16 words of local(AUTO) storage.

PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:10   

 Object Unit name= JSX$XCONGO                                 File name= JSX$XCON.:E05TOU
 UTS= JUL 29 '97 23:51:42.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  JSX$XCONGO
    1   Proc  even  none   321    501  JSX$XCONGO
    2  RoData even  none     5      5  JSX$XCONGO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  JSX$XCONGO
     1    207                  yes      Std        1  JSX$DLTAXCON
     1    227                  yes      Std        1  JSX$XCONSAVE
     1    420                  yes      Std        1  JSX$SVLDTXCON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 SST$SSFTCB
         yes           Std       0 UDB$AUTO
         yes           Std       3 SSU$DELTAGO
         yes           Std       0 JSE$ABORTX
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                B_MPT                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:12   


        1        1        /*M*   JSX$XCON   Exit Control routines    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8                                                /*                                    */
        9        9        JSX$XCONGO: PROC(SAVEP);

      9  1 000000   000000 700200 xent  JSX$XCONGO   TSX0  ! X66_AUTO_1
         1 000001   000020 000001                    ZERO    16,1
         1 000002   000061 710000 1                  TRA     s:3477

       10       10    1   DCL 1 SAVEP,
       11       11    1         2 CECCB BIT(9) UNAL,              /*NEW ECCB FLAGS                      */
       12       12    1         2 FLAG,                           /* Used with M$SAVE                   */
       13       13    1           3 ALTBIT BIT(1) UNAL,
       14       14    1           3 * BIT(8) UNAL,
       15       15    1         2 ECCS UBIN(18) UNAL,             /* ECC SUBCODE                        */
       16       16    1         2 RNST BIT(9) UNAL,               /* JIT.RNST                           */
       17       17    1         2 XCFL BIT(9) UNAL,               /* JIT.XCONFLGS                       */
       18       18    1         2 LIMT BIT(9) UNAL,               /* JIT.XLIMFLG                        */
       19       19    1         2 ECCBF BIT(9) UNAL,              /* ECCB.XCFLGS                        */
       20       20    1         2 JERR BIT(36),                   /* JIT.ERR                            */
       21       21    1         2 P# UBIN(36);                    /* # OF PARAMETERS                    */
       22       22                                                /*  LOCAL AUTO                        */
       23       23
       24       24    1   DCL SSIC UBIN(36);                      /*IC FOR SAFE-STORE FRAME             */
       25       25    1   DCL ECC  UBIN(36);                      /*EXC. COND. CODE                     */
       26       26    1   DCL TEMP# UBIN(36);
       27       27    1   DCL TECCB BIT(9);
       28       28
       29       29
       30       30
       31       31                                                /*  EXTERNAL PROCEDURES               */
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:13   
       32       32
       33       33    1   DCL JSE$ABORTX ENTRY;
       34       34    1   DCL SST$SSFTCB ENTRY(6) ALTRET;
       35       35    1   DCL UDB$AUTO  ENTRY;
       36       36    1   DCL SSU$DELTAGO ENTRY(3);
       37       37
       38       38        /* EXTERNAL DATA */
       39       39
       40       40    1   DCL B$JIT$ PTR SYMREF READONLY;
       41       41        %INCLUDE B_MAGIC_C;
       42      159        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
       43      252
       44      253        /* BASED STRUCTURES */
       45      254
       46      255
       47      256        %INCLUDE B$JIT_C;
       48      570        %B$JIT0;
       49      659        %U$JIT1X;
       50      662        %M$JIT2X;
       51      665        %F$JIT3X;
       52      668        %S$JIT4X;
       53      671        %J$JIT5;
       54      759        %A$JIT6X;
       55      762                                                /*                                    */
       56      763        %INCLUDE B$SS;
       57      942                                                /*                                    */
       58      943        %INCLUDE UE_CP6;
       59     1634        %B$ECCB;
       60     1642        %SUB_EXC;
       61     1689        %SUB_ECCDELTA;
       62     1726        %INCLUDE B_MACROS_C;
       63     1837        %T01DESCR (NAME=B$$DESCR);
       64     1845        %INCLUDE B_ULSMAC_C;
       65     2954        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
       66     3153        %INCLUDE B$USER;
       67     3369        %B$USERREFS;
       68     3373
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:14   
       69     3374                                                /* STRING SUBSTITUTIONS               */
       70     3375
       71     3376        %SUB B$JIT=B$JIT$->B$JIT;
       72     3377        %SUB B$U=S$CU$->B$U;
       73     3378        %SUB B$SS=B_MPT.SS$->B$SS;
       74     3379        %SUB B$ECCB=B_MPT.ECCB$->B$ECCB;
       75     3380                                                /*                                    */
       76     3381
       77     3382        /* TO SET JIT.ERR */
       78     3383        %INCLUDE UE_ERRORS_C;
       79     3401        %INCLUDE UD_SEV_C;
       80     3415        %INCLUDE J_ERRSET_C;
       81     3435        %SUB FCG#='1223'O;
       82     3436        %SUB MID#='30'O;
       83     3437        %ERRCODE (NAME=ENOROOM,COD#=%E$TCBFULL);
       84     3445
       85     3446        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:15   
       86     3447        /* SET UP EC FRAME FOR EXIT CONTROL */
       87     3448        /* CALLED BY JSX$DLTAXCON AND JSX$XCONGO */
       88     3449
       89     3450    1   SETXCON: PROC;

   3450  1 000003   200010 741300       SETXCON      STX1  ! TECCB+1,,AUTO

       90     3451
       91     3452    2      SSIC = B$ECCB.XCON;

   3452  1 000004   000005 470400 xsym               LDP0    B_MPT+5
         1 000005   000001 236100                    LDQ     1,,PR0
         1 000006   777777 376007                    ANQ     -1,DL
         1 000007   200004 756100                    STQ     SSIC,,AUTO

       92     3453    2      ECC=%ECC_XCON#;

   3453  1 000010   000003 235007                    LDA     3,DL
         1 000011   200005 755100                    STA     ECC,,AUTO

       93     3454                                                /*                                    */
       94     3455    2      IF (B$JIT.JUNK & (%JJ_RUNXCON# | %JJ_DLIB#) )

   3455  1 000012   000000 471400 xsym               LDP1    B$JIT$
         1 000013   100315 220100                    LDX0    205,,PR1
         1 000014   006000 360003                    ANX0    3072,DU
         1 000015   000025 600000 1                  TZE     s:3460

       95     3456    3      THEN DO;

       96     3457    3           SAVEP.ECCS=1;

   3457  1 000016   000001 220003                    LDX0    1,DU
         1 000017   200003 473500                    LDP3    @SAVEP,,AUTO
         1 000020   300000 440100                    SXL0    0,,PR3

       97     3458    3           B$JIT.JUNK = (B$JIT.JUNK &~%JJ_RUNXCON#);
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:16   

   3458  1 000021   100315 221100                    LDX1    205,,PR1
         1 000022   775777 361003                    ANX1    -1025,DU
         1 000023   100315 741100                    STX1    205,,PR1

       98     3459    3           END;

   3459  1 000024   000030 710000 1                  TRA     s:3463

       99     3460    2      ELSE SAVEP.ECCS=0;

   3460  1 000025   000000 220003                    LDX0    0,DU
         1 000026   200003 473500                    LDP3    @SAVEP,,AUTO
         1 000027   300000 440100                    SXL0    0,,PR3

      100     3461                                                /*                                    */
      101     3462                                                /*                                    */
      102     3463    2      SAVEP.RNST = B$JIT.RNST;

   3463  1 000030   100314 236100                    LDQ     204,,PR1
         1 000031   300001 552140                    STBQ    1,'40'O,PR3

      103     3464    2      SAVEP.XCFL = B$JIT.XCONF;

   3464  1 000032   100316 236100                    LDQ     206,,PR1
         1 000033   000011 772000                    QRL     9
         1 000034   300001 552120                    STBQ    1,'20'O,PR3

      104     3465    2      SAVEP.LIMT = B$JIT.XLIMFLG;

   3465  1 000035   100316 236100                    LDQ     206,,PR1
         1 000036   300001 552110                    STBQ    1,'10'O,PR3

      105     3466    2      SAVEP.CECCB=( (B$ECCB.XCONF | '400'O) &~ SAVEP.ECCBF);

   3466  1 000037   000005 470400 xsym               LDP0    B_MPT+5
         1 000040   000004 236100                    LDQ     4,,PR0
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:17   
         1 000041   000011 736000                    QLS     9
         1 000042   777000 376003                    ANQ     -512,DU
         1 000043   400000 276003                    ORQ     -131072,DU
         1 000044   200012 756100                    STQ     TECCB+3,,AUTO
         1 000045   300001 236100                    LDQ     1,,PR3
         1 000046   000033 736000                    QLS     27
         1 000047   777000 676003                    ERQ     -512,DU
         1 000050   200012 376100                    ANQ     TECCB+3,,AUTO
         1 000051   300000 552140                    STBQ    0,'40'O,PR3

      106     3467                                      /*SAVEP.ECCBF has been set up by the caller     */
      107     3468    2      SAVEP.FLAG='0'B;

   3468  1 000052   000000 236003                    LDQ     0,DU
         1 000053   300000 552120                    STBQ    0,'20'O,PR3

      108     3469    2      SAVEP.JERR = B$JIT.ERR;

   3469  1 000054   100012 236100                    LDQ     10,,PR1
         1 000055   300002 756100                    STQ     2,,PR3

      109     3470    2      SAVEP.P# = 0;

   3470  1 000056   300003 450100                    STZ     3,,PR3

      110     3471
      111     3472    2      RETURN;

   3472  1 000057   200010 221300                    LDX1  ! TECCB+1,,AUTO
         1 000060   000001 702211                    TSX2  ! 1,X1

      112     3473    2   END SETXCON;
      113     3474        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:18   
      114     3475
      115     3476
      116     3477    1      B$ECCB.XCONF=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );

   3477  1 000061   000000 470400 xsym               LDP0    B$JIT$
         1 000062   000316 236100                    LDQ     206,,PR0
         1 000063   000033 736000                    QLS     27
         1 000064   016000 376003                    ANQ     7168,DU
         1 000065   200012 756100                    STQ     TECCB+3,,AUTO
         1 000066   000005 471400 xsym               LDP1    B_MPT+5
         1 000067   100004 236100                    LDQ     4,,PR1
         1 000070   000011 736000                    QLS     9
         1 000071   777000 376003                    ANQ     -512,DU
         1 000072   200012 276100                    ORQ     TECCB+3,,AUTO
         1 000073   000011 772000                    QRL     9
         1 000074   100004 552120                    STBQ    4,'20'O,PR1

      117     3478                                      /* So DELTA will recognize YC-Save when DIC     */
      118     3479    1      CALL SETXCON;

   3479  1 000075   000003 701000 1                  TSX1    SETXCON
         1 000076   000000 011000                    NOP     0

      119     3480    1      IF B_MPT.TCBDESC$->B$$DESCR.BOUND = 0 THEN GOTO NOTCB;

   3480  1 000077   000012 470400 xsym               LDP0    B_MPT+10
         1 000100   000000 236100                    LDQ     0,,PR0
         1 000101   000034 316000 xsym               CANQ    B_VECTNIL+28
         1 000102   000175 600000 1                  TZE     NOTCB

      120     3481                                                /*                                    */
      121     3482    1      CALL SST$SSFTCB(SSIC,ECC,SAVEP,B_MPT.SS$,B_MPT.TCB$) ALTRET(TCBFULL);

   3482  1 000103   000000 236000 2                  LDQ     0
         1 000104   200016 756100                    STQ     TECCB+7,,AUTO
         1 000105   000001 236000 2                  LDQ     1
         1 000106   200003 235100                    LDA     @SAVEP,,AUTO
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:19   
         1 000107   200014 757100                    STAQ    TECCB+5,,AUTO
         1 000110   200005 631500                    EPPR1   ECC,,AUTO
         1 000111   200013 451500                    STP1    TECCB+4,,AUTO
         1 000112   200004 633500                    EPPR3   SSIC,,AUTO
         1 000113   200012 453500                    STP3    TECCB+3,,AUTO
         1 000114   200012 630500                    EPPR0   TECCB+3,,AUTO
         1 000115   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000116   000000 701000 xent               TSX1    SST$SSFTCB
         1 000117   000151 702000 1                  TSX2    TCBFULL

      122     3483    1      B$ECCB.XCONF.NOTCB='0'B;

   3483  1 000120   000005 470400 xsym               LDP0    B_MPT+5
         1 000121   000002 236000 2                  LDQ     2
         1 000122   000004 356100                    ANSQ    4,,PR0

   3483  1 000123                       GOXCON       null
      123     3484    1   GOXCON: ;
      124     3485    1      B$JIT.XCONF=( (B$JIT.XCONF | B$JIT.FRS) | (B$JIT.RNST & %XC_PRNST#) );

   3485  1 000123   000000 470400 xsym               LDP0    B$JIT$
         1 000124   000314 236100                    LDQ     204,,PR0
         1 000125   000011 736000                    QLS     9
         1 000126   777000 376003                    ANQ     -512,DU
         1 000127   200012 756100                    STQ     TECCB+3,,AUTO
         1 000130   000316 236100                    LDQ     206,,PR0
         1 000131   777000 376003                    ANQ     -512,DU
         1 000132   200012 276100                    ORQ     TECCB+3,,AUTO
         1 000133   200013 756100                    STQ     TECCB+4,,AUTO
         1 000134   000314 236100                    LDQ     204,,PR0
         1 000135   777000 376003                    ANQ     -512,DU
         1 000136   770000 376003                    ANQ     -4096,DU
         1 000137   200013 276100                    ORQ     TECCB+4,,AUTO
         1 000140   000316 552140                    STBQ    206,'40'O,PR0

      125     3486    1      B$JIT.RNST= '000'O;

PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:20   
   3486  1 000141   000000 236003                    LDQ     0,DU
         1 000142   000314 552140                    STBQ    204,'40'O,PR0

      126     3487    1      B$ECCB.XCONF.PROG = '1'B;

   3487  1 000143   000005 471400 xsym               LDP1    B_MPT+5
         1 000144   000400 236003                    LDQ     256,DU
         1 000145   100004 256100                    ORSQ    4,,PR1

      127     3488    1      CALL UDB$AUTO;

   3488  1 000146   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000147   000000 701000 xent               TSX1    UDB$AUTO
         1 000150   000000 011000                    NOP     0

   3487  1 000151                       TCBFULL      null
      128     3489    1   TCBFULL: ;
      129     3490    1      IF B$ECCB.XCONF.NOTCB='1'B

   3490  1 000151   000005 470400 xsym               LDP0    B_MPT+5
         1 000152   000004 236100                    LDQ     4,,PR0
         1 000153   000200 316003                    CANQ    128,DU
         1 000154   000156 600000 1                  TZE     s:3493

      130     3491    1      THEN RETURN;

   3491  1 000155   000000 702200 xent               TSX2  ! X66_ARET

      131     3492                                                /*ONLY ONE XCON SHOT WHEN TCB IS FULL */
      132     3493    1      ECC=%ECC_TCBFULL#;

   3493  1 000156   000142 235007                    LDA     98,DL
         1 000157   200005 755100                    STA     ECC,,AUTO

      133     3494    1      CALL SST$SSFTCB(SSIC,ECC,SAVEP,B_MPT.SS$,B_MPT.TCB$) ALTRET(NOTCB);

   3494  1 000160   000000 236000 2                  LDQ     0
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:21   
         1 000161   200016 756100                    STQ     TECCB+7,,AUTO
         1 000162   000001 236000 2                  LDQ     1
         1 000163   200003 235100                    LDA     @SAVEP,,AUTO
         1 000164   200014 757100                    STAQ    TECCB+5,,AUTO
         1 000165   200005 631500                    EPPR1   ECC,,AUTO
         1 000166   200013 451500                    STP1    TECCB+4,,AUTO
         1 000167   200004 633500                    EPPR3   SSIC,,AUTO
         1 000170   200012 453500                    STP3    TECCB+3,,AUTO
         1 000171   200012 630500                    EPPR0   TECCB+3,,AUTO
         1 000172   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000173   000000 701000 xent               TSX1    SST$SSFTCB
         1 000174   000175 702000 1                  TSX2    NOTCB

   3493  1 000175                       NOTCB        null
      134     3495    1   NOTCB: ;
      135     3496    1      B$SS.IC = B$ECCB.XCON;

   3496  1 000175   000005 470400 xsym               LDP0    B_MPT+5
         1 000176   000001 720100                    LXL0    1,,PR0
         1 000177   000000 471400 xsym               LDP1    B_MPT
         1 000200   100004 740100                    STX0    4,,PR1

      136     3497    1      B$SS.IR.MIR = '0'B;

   3497  1 000201   000003 236000 2                  LDQ     3
         1 000202   100004 356100                    ANSQ    4,,PR1

      137     3498    1      B$ECCB.XCONF.NOTCB= '1'B;

   3498  1 000203   000005 470400 xsym               LDP0    B_MPT+5
         1 000204   000200 236003                    LDQ     128,DU
         1 000205   000004 256100                    ORSQ    4,,PR0

      138     3499    1      GOTO GOXCON;

   3499  1 000206   000123 710000 1                  TRA     GOXCON

PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:22   
      139     3500        /* NO RETURN FROM JSX$XCONGO */
      140     3501        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:23   
      141     3502
      142     3503    1   JSX$DLTAXCON: ENTRY(SAVEP);

   3503  1 000207   000000 700200 xent  JSX$DLTAXCON TSX0  ! X66_AUTO_1
         1 000210   000020 000001                    ZERO    16,1

      143     3504    1      CALL SETXCON;

   3504  1 000211   000003 701000 1                  TSX1    SETXCON
         1 000212   000000 011000                    NOP     0

      144     3505    1      B$JIT.RNST= '000'O;

   3505  1 000213   000000 470400 xsym               LDP0    B$JIT$
         1 000214   000000 236003                    LDQ     0,DU
         1 000215   000314 552140                    STBQ    204,'40'O,PR0

      145     3506    1      CALL SSU$DELTAGO (ECC,SAVEP);

   3506  1 000216   200003 236100                    LDQ     @SAVEP,,AUTO
         1 000217   200013 756100                    STQ     TECCB+4,,AUTO
         1 000220   200005 631500                    EPPR1   ECC,,AUTO
         1 000221   200012 451500                    STP1    TECCB+3,,AUTO
         1 000222   200012 630500                    EPPR0   TECCB+3,,AUTO
         1 000223   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000224   000000 701000 xent               TSX1    SSU$DELTAGO
         1 000225   000000 011000                    NOP     0
         1 000226   000231 710000 1                  TRA     s:3511

      146     3507        /* NO RETURN FROM JSX$DLTAXCON */
      147     3508        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:24   
      148     3509
      149     3510    1   JSX$XCONSAVE: ENTRY(SAVEP);

   3510  1 000227   000000 700200 xent  JSX$XCONSAVE TSX0  ! X66_AUTO_1
         1 000230   000020 000001                    ZERO    16,1

      150     3511    1      TEMP#=SAVEP.P#;

   3511  1 000231   200003 470500                    LDP0    @SAVEP,,AUTO
         1 000232   000003 235100                    LDA     3,,PR0
         1 000233   200006 755100                    STA     TEMP#,,AUTO

      151     3512    1      SAVEP.ECCBF=B$ECCB.XCONF;

   3512  1 000234   000005 471400 xsym               LDP1    B_MPT+5
         1 000235   100004 236100                    LDQ     4,,PR1
         1 000236   000022 772000                    QRL     18
         1 000237   000001 552104                    STBQ    1,'04'O,PR0

      152     3513    1      CALL SETXCON;

   3513  1 000240   000003 701000 1                  TSX1    SETXCON
         1 000241   000000 011000                    NOP     0

      153     3514    1      SAVEP.P#=TEMP#;

   3514  1 000242   200003 470500                    LDP0    @SAVEP,,AUTO
         1 000243   200006 235100                    LDA     TEMP#,,AUTO
         1 000244   000003 755100                    STA     3,,PR0

      154     3515    1      IF (B$JIT.SVLDTF & %SVL_MSAVE#)

   3515  1 000245   000000 471400 xsym               LDP1    B$JIT$
         1 000246   100316 236100                    LDQ     206,,PR1
         1 000247   000033 736000                    QLS     27
         1 000250   004000 376003                    ANQ     2048,DU
         1 000251   000261 600000 1                  TZE     s:3517
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:25   

      155     3516    1      THEN SAVEP.FLAG.ALTBIT = B$SS.FPT.ALT;

   3516  1 000252   000000 473400 xsym               LDP3    B_MPT
         1 000253   300001 236100                    LDQ     1,,PR3
         1 000254   000011 772000                    QRL     9
         1 000255   000000 676100                    ERQ     0,,PR0
         1 000256   000400 376003                    ANQ     256,DU
         1 000257   000000 656100                    ERSQ    0,,PR0
         1 000260   000263 710000 1                  TRA     s:3518

      156     3517    1      ELSE SAVEP.FLAG.ALTBIT = '0'B;

   3517  1 000261   000004 236000 2                  LDQ     4
         1 000262   000000 356100                    ANSQ    0,,PR0

      157     3518    1      IF (B$JIT.XCONF & %RS_CL3#)

   3518  1 000263   100316 236100                    LDQ     206,,PR1
         1 000264   777000 376003                    ANQ     -512,DU
         1 000265   640000 376003                    ANQ     -49152,DU
         1 000266   000336 601000 1                  TNZ     NO_DELTA

      158     3519    1      THEN GOTO NO_DELTA;
      159     3520    1      IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & '020'O)

   3520  1 000267   000013 473400 xsym               LDP3    B_MPT+11
         1 000270   300000 236100                    LDQ     0,,PR3
         1 000271   000024 736000                    QLS     20
         1 000272   777000 376003                    ANQ     -512,DU
         1 000273   020000 376003                    ANQ     8192,DU
         1 000274   000336 600000 1                  TZE     NO_DELTA

      160     3521    2      THEN DO;

      161     3522    2           TECCB=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );

PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:26   
   3522  1 000275   100316 236100                    LDQ     206,,PR1
         1 000276   000033 736000                    QLS     27
         1 000277   016000 376003                    ANQ     7168,DU
         1 000300   200012 756100                    STQ     TECCB+3,,AUTO
         1 000301   000005 474400 xsym               LDP4    B_MPT+5
         1 000302   400004 236100                    LDQ     4,,PR4
         1 000303   000011 736000                    QLS     9
         1 000304   777000 376003                    ANQ     -512,DU
         1 000305   200012 276100                    ORQ     TECCB+3,,AUTO
         1 000306   200007 756100                    STQ     TECCB,,AUTO

      162     3523    2           TECCB=(TECCB | '400'O);         /*IN PROGRESS                         */

   3523  1 000307   200007 236100                    LDQ     TECCB,,AUTO
         1 000310   777000 376003                    ANQ     -512,DU
         1 000311   400000 276003                    ORQ     -131072,DU
         1 000312   200007 756100                    STQ     TECCB,,AUTO

      163     3524    2           SAVEP.CECCB=(TECCB &~ SAVEP.ECCBF);

   3524  1 000313   000001 236100                    LDQ     1,,PR0
         1 000314   000033 736000                    QLS     27
         1 000315   777000 676003                    ERQ     -512,DU
         1 000316   200012 756100                    STQ     TECCB+3,,AUTO
         1 000317   200007 236100                    LDQ     TECCB,,AUTO
         1 000320   777000 376003                    ANQ     -512,DU
         1 000321   200012 376100                    ANQ     TECCB+3,,AUTO
         1 000322   000000 552140                    STBQ    0,'40'O,PR0

      164     3525    2           B$JIT.RNST='000'O;

   3525  1 000323   000000 236003                    LDQ     0,DU
         1 000324   100314 552140                    STBQ    204,'40'O,PR1

      165     3526    2           CALL SSU$DELTAGO (ECC,SAVEP);

   3526  1 000325   200003 236100                    LDQ     @SAVEP,,AUTO
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:27   
         1 000326   200013 756100                    STQ     TECCB+4,,AUTO
         1 000327   200005 633500                    EPPR3   ECC,,AUTO
         1 000330   200012 453500                    STP3    TECCB+3,,AUTO
         1 000331   200012 630500                    EPPR0   TECCB+3,,AUTO
         1 000332   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000333   000000 701000 xent               TSX1    SSU$DELTAGO
         1 000334   000000 011000                    NOP     0

      166     3527    2           END;

   3527  1 000335   000405 710000 1                  TRA     NO_ROOM

      167     3528    2      ELSE DO;

   3524  1 000336                       NO_DELTA     null
      168     3529    2   NO_DELTA: ;
      169     3530    2           B$ECCB.XCONF=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );

   3530  1 000336   100316 236100                    LDQ     206,,PR1
         1 000337   000033 736000                    QLS     27
         1 000340   016000 376003                    ANQ     7168,DU
         1 000341   200012 756100                    STQ     TECCB+3,,AUTO
         1 000342   000005 473400 xsym               LDP3    B_MPT+5
         1 000343   300004 236100                    LDQ     4,,PR3
         1 000344   000011 736000                    QLS     9
         1 000345   777000 376003                    ANQ     -512,DU
         1 000346   200012 276100                    ORQ     TECCB+3,,AUTO
         1 000347   000011 772000                    QRL     9
         1 000350   300004 552120                    STBQ    4,'20'O,PR3

      170     3531    2           TECCB=(B$ECCB.XCONF | '400'O);

   3531  1 000351   000005 473400 xsym               LDP3    B_MPT+5
         1 000352   300004 236100                    LDQ     4,,PR3
         1 000353   000011 736000                    QLS     9
         1 000354   777000 376003                    ANQ     -512,DU
         1 000355   400000 276003                    ORQ     -131072,DU
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:28   
         1 000356   200007 756100                    STQ     TECCB,,AUTO

      171     3532    2           SAVEP.CECCB=(TECCB &~ SAVEP.ECCBF);

   3532  1 000357   000001 236100                    LDQ     1,,PR0
         1 000360   000033 736000                    QLS     27
         1 000361   777000 676003                    ERQ     -512,DU
         1 000362   200012 756100                    STQ     TECCB+3,,AUTO
         1 000363   200007 236100                    LDQ     TECCB,,AUTO
         1 000364   777000 376003                    ANQ     -512,DU
         1 000365   200012 376100                    ANQ     TECCB+3,,AUTO
         1 000366   000000 552140                    STBQ    0,'40'O,PR0

      172     3533    2           CALL SST$SSFTCB(SSIC,ECC,SAVEP,B_MPT.SS$,B_MPT.TCB$) ALTRET(NO_ROOM);

   3533  1 000367   000000 236000 2                  LDQ     0
         1 000370   200016 756100                    STQ     TECCB+7,,AUTO
         1 000371   000001 236000 2                  LDQ     1
         1 000372   200003 235100                    LDA     @SAVEP,,AUTO
         1 000373   200014 757100                    STAQ    TECCB+5,,AUTO
         1 000374   200005 633500                    EPPR3   ECC,,AUTO
         1 000375   200013 453500                    STP3    TECCB+4,,AUTO
         1 000376   200004 634500                    EPPR4   SSIC,,AUTO
         1 000377   200012 454500                    STP4    TECCB+3,,AUTO
         1 000400   200012 630500                    EPPR0   TECCB+3,,AUTO
         1 000401   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000402   000000 701000 xent               TSX1    SST$SSFTCB
         1 000403   000405 702000 1                  TSX2    NO_ROOM

      173     3534    2           GOTO GOXCON;

   3534  1 000404   000123 710000 1                  TRA     GOXCON

   3533  1 000405                       NO_ROOM      null
      174     3535    2           END;
      175     3536    1   NO_ROOM: ;               /*RETURN TO JSP$PMME IF NO ROOM IN TCB FOR SAVE-XCON */
      176     3537    1      B$ECCB.XCONF=(B$ECCB.XCONF &~'006'O); /*RESET SAVE BITS*/
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:29   

   3537  1 000405   000005 470400 xsym               LDP0    B_MPT+5
         1 000406   000004 236100                    LDQ     4,,PR0
         1 000407   000011 736000                    QLS     9
         1 000410   777000 376003                    ANQ     -512,DU
         1 000411   771000 376003                    ANQ     -3584,DU
         1 000412   000011 772000                    QRL     9
         1 000413   000004 552120                    STBQ    4,'20'O,PR0

      177     3538    1      B$JIT.ERR=ENOROOM;

   3538  1 000414   000000 236000 0                  LDQ     ENOROOM
         1 000415   000000 470400 xsym               LDP0    B$JIT$
         1 000416   000012 756100                    STQ     10,,PR0

      178     3539    1      RETURN;

   3539  1 000417   000000 702200 xent               TSX2  ! X66_ARET

      179     3540        /*E*   ERROR:  JSX-E$TCBFULL-E
      180     3541               MESSAGE: Insufficient room in TCB for SAVE or LDTRC Exit Control.
      181     3542        */
      182     3543        %EJECT;
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:30   
      183     3544           /* COME HERE IF DIC OR ASLIC
      184     3545              OR IF USER DOESNT WANT XCON FOR SAVE */
      185     3546    1   JSX$SVLDTXCON: ENTRY(SAVEP);

   3546  1 000420   000000 700200 xent  JSX$SVLDTXC* TSX0  ! X66_AUTO_1
         1 000421   000020 000001                    ZERO    16,1

      186     3547    1      IF B_MPT.TCBDESC$->B$$DESCR.BOUND = 0 THEN GOTO NO_ROOM2;

   3547  1 000422   000012 470400 xsym               LDP0    B_MPT+10
         1 000423   000000 236100                    LDQ     0,,PR0
         1 000424   000034 316000 xsym               CANQ    B_VECTNIL+28
         1 000425   000475 600000 1                  TZE     NO_ROOM2

      187     3548    1      TEMP#=SAVEP.P#;

   3548  1 000426   200003 471500                    LDP1    @SAVEP,,AUTO
         1 000427   100003 235100                    LDA     3,,PR1
         1 000430   200006 755100                    STA     TEMP#,,AUTO

      188     3549    1      SAVEP.ECCBF=B$ECCB.XCONF;

   3549  1 000431   000005 473400 xsym               LDP3    B_MPT+5
         1 000432   300004 236100                    LDQ     4,,PR3
         1 000433   000022 772000                    QRL     18
         1 000434   100001 552104                    STBQ    1,'04'O,PR1

      189     3550    1      CALL SETXCON;

   3550  1 000435   000003 701000 1                  TSX1    SETXCON
         1 000436   000000 011000                    NOP     0

      190     3551    1      SAVEP.P#=TEMP#;

   3551  1 000437   200003 470500                    LDP0    @SAVEP,,AUTO
         1 000440   200006 235100                    LDA     TEMP#,,AUTO
         1 000441   000003 755100                    STA     3,,PR0
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:31   

      191     3552    1      ECC=%ECC_SAVLDT#;

   3552  1 000442   000136 236007                    LDQ     94,DL
         1 000443   200005 756100                    STQ     ECC,,AUTO

      192     3553    1      SSIC=B$SS.IC;

   3553  1 000444   000000 471400 xsym               LDP1    B_MPT
         1 000445   100004 236100                    LDQ     4,,PR1
         1 000446   000022 772000                    QRL     18
         1 000447   200004 756100                    STQ     SSIC,,AUTO

      193     3554    1      SAVEP.CECCB=(B$JIT.SVLDTF & %SVL_ECCB#);

   3554  1 000450   000000 473400 xsym               LDP3    B$JIT$
         1 000451   300316 236100                    LDQ     206,,PR3
         1 000452   000033 736000                    QLS     27
         1 000453   016000 376003                    ANQ     7168,DU
         1 000454   000000 552140                    STBQ    0,'40'O,PR0

      194     3555    1      CALL SST$SSFTCB(SSIC,ECC,SAVEP,B_MPT.SS$,B_MPT.TCB$) ALTRET(NO_ROOM2);

   3555  1 000455   000000 236000 2                  LDQ     0
         1 000456   200016 756100                    STQ     TECCB+7,,AUTO
         1 000457   000001 236000 2                  LDQ     1
         1 000460   200003 235100                    LDA     @SAVEP,,AUTO
         1 000461   200014 757100                    STAQ    TECCB+5,,AUTO
         1 000462   200005 631500                    EPPR1   ECC,,AUTO
         1 000463   200013 451500                    STP1    TECCB+4,,AUTO
         1 000464   200004 634500                    EPPR4   SSIC,,AUTO
         1 000465   200012 454500                    STP4    TECCB+3,,AUTO
         1 000466   200012 630500                    EPPR0   TECCB+3,,AUTO
         1 000467   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000470   000000 701000 xent               TSX1    SST$SSFTCB
         1 000471   000475 702000 1                  TSX2    NO_ROOM2

PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:32   
      195     3556    1      CALL JSE$ABORTX;

   3556  1 000472   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000473   000000 701000 xent               TSX1    JSE$ABORTX
         1 000474   000000 011000                    NOP     0

   3554  1 000475                       NO_ROOM2     null
      196     3557    1   NO_ROOM2: ;              /*RETURN TO JSP$PMME IF NO ROOM IN TCB FOR SAVE-XCON */
      197     3558    1      B$JIT.ERR=ENOROOM;

   3558  1 000475   000000 236000 0                  LDQ     ENOROOM
         1 000476   000000 470400 xsym               LDP0    B$JIT$
         1 000477   000012 756100                    STQ     10,,PR0

      198     3559    1      RETURN;

   3559  1 000500   000000 702200 xent               TSX2  ! X66_ARET

ENOROOM
 Sect OctLoc
   0     000   122330 407634                                                    R...

(unnamed)
 Sect OctLoc
   2     000   000004 006000   000000 006000   777577 777777   777777 777737    ................
   2     004   777377 777777                                                    ....
      199     3560    1   END JSX$XCONGO;
      200     3561
      201     3562
      202     3563        %EOD;

PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:33   
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSX$XCONGO.
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:34   

 **** Variables and constants ****

  ****  Section 000 RoData JSX$XCONGO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 ENOROOM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SAVEP                     5-0-0/w UBIN        r     1 ECC
    *0-0-0/w STRC(144)   r     1 SAVEP                      4-0-0/w UBIN        r     1 SSIC
     7-0-0/b BIT (9)     r     1 TECCB                      6-0-0/w UBIN        r     1 TEMP#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d STRC(432)   r     1 B_MPT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$$DESCR                   0-0-0/w STRC(180)   r     1 B$ECCB
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(2304)  r     1 B$SS


   Procedure JSX$XCONGO requires 321 words for executable code.
   Procedure JSX$XCONGO requires 16 words of local(AUTO) storage.
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:36   
          MINI XREF LISTING

B$$DESCR.BOUND
      1839**DCL      3480>>IF       3547>>IF
B$$DESCR.FLGS
      1840**DCL      3520>>IF
B$DO.ECCINFO
      3304**DCL      3305--REDEF
B$ECCB.XCON
      1635**DCL      3452>>ASSIGN   3496>>ASSIGN
B$ECCB.XCONF
      1637**DCL      3466>>ASSIGN   3477<<ASSIGN   3477>>ASSIGN   3512>>ASSIGN   3522>>ASSIGN   3530<<ASSIGN
      3530>>ASSIGN   3531>>ASSIGN   3537<<ASSIGN   3537>>ASSIGN   3549>>ASSIGN
B$ECCB.XCONF.NOTCB
      1637**DCL      3483<<ASSIGN   3490>>IF       3498<<ASSIGN
B$ECCB.XCONF.PROG
      1637**DCL      3487<<ASSIGN
B$JIT.ERR
       576**DCL      3469>>ASSIGN   3538<<ASSIGN   3558<<ASSIGN
B$JIT.ERR.MID
       577**DCL       577--REDEF
B$JIT.FRS
       689**DCL      3485>>ASSIGN
B$JIT.JUNK
       693**DCL      3455>>IF       3458<<ASSIGN   3458>>ASSIGN
B$JIT.RNST
       672**DCL      3463>>ASSIGN   3485>>ASSIGN   3486<<ASSIGN   3505<<ASSIGN   3525<<ASSIGN
B$JIT.SVLDTF
       734**DCL      3477>>ASSIGN   3515>>IF       3522>>ASSIGN   3530>>ASSIGN   3554>>ASSIGN
B$JIT.XCONF
       714**DCL      3464>>ASSIGN   3485<<ASSIGN   3485>>ASSIGN   3518>>IF
B$JIT.XLIMFLG
       724**DCL      3465>>ASSIGN
B$JIT$
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:37   
        40**DCL       571--IMP-PTR  3455>>IF       3458>>ASSIGN   3458>>ASSIGN   3463>>ASSIGN   3464>>ASSIGN
      3465>>ASSIGN   3469>>ASSIGN   3477>>ASSIGN   3485>>ASSIGN   3485>>ASSIGN   3485>>ASSIGN   3485>>ASSIGN
      3486>>ASSIGN   3505>>ASSIGN   3515>>IF       3518>>IF       3522>>ASSIGN   3525>>ASSIGN   3530>>ASSIGN
      3538>>ASSIGN   3554>>ASSIGN   3558>>ASSIGN
B$SS.FPT.ALT
       775**DCL      3516>>ASSIGN
B$SS.IC
       782**DCL      3496<<ASSIGN   3553>>ASSIGN
B$SS.IR.MIR
       796**DCL      3497<<ASSIGN
B$SS.RVA
       815**DCL       816--REDEF
B$U.MISC
      3283**DCL      3284--REDEF
B$USER.MISC
      3359**DCL      3360--REDEF
B_MPT.AS
       195**DCL       198--REDEF
B_MPT.ASDESC
       227**DCL       231--REDEF
B_MPT.ECCB
       210**DCL       213--REDEF
B_MPT.ECCB$
       213**DCL      3452>>ASSIGN   3466>>ASSIGN   3477>>ASSIGN   3477>>ASSIGN   3483>>ASSIGN   3487>>ASSIGN
      3490>>IF       3496>>ASSIGN   3498>>ASSIGN   3512>>ASSIGN   3522>>ASSIGN   3530>>ASSIGN   3530>>ASSIGN
      3531>>ASSIGN   3537>>ASSIGN   3537>>ASSIGN   3549>>ASSIGN
B_MPT.ECCBDESC
       245**DCL       249--REDEF
B_MPT.ECCBDESC$
       249**DCL      3520>>IF
B_MPT.LS
       190**DCL       193--REDEF
B_MPT.LSDESC
       221**DCL       225--REDEF
B_MPT.PS
       200**DCL       203--REDEF
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:38   
B_MPT.PSDESC
       233**DCL       237--REDEF
B_MPT.SS
       185**DCL       188--REDEF
B_MPT.SS$
       188**DCL      3482<>CALL     3494<>CALL     3496>>ASSIGN   3497>>ASSIGN   3516>>ASSIGN   3533<>CALL
      3553>>ASSIGN   3555<>CALL
B_MPT.SSDESC
       215**DCL       219--REDEF
B_MPT.TCB
       205**DCL       208--REDEF
B_MPT.TCB$
       208**DCL      3482<>CALL     3494<>CALL     3533<>CALL     3555<>CALL
B_MPT.TCBDESC
       239**DCL       243--REDEF
B_MPT.TCBDESC$
       243**DCL      3480>>IF       3547>>IF
ECC
        25**DCL      3453<<ASSIGN   3482<>CALL     3493<<ASSIGN   3494<>CALL     3506<>CALL     3526<>CALL
      3533<>CALL     3552<<ASSIGN   3555<>CALL
ENOROOM
      3438**DCL      3538>>ASSIGN   3558>>ASSIGN
GOXCON
      3483**LABEL    3499--GOTO     3534--GOTO
JSE$ABORTX
        33**DCL-ENT  3556--CALL
NOTCB
      3493**LABEL    3480--GOTO     3494--CALLALT
NO_DELTA
      3524**LABEL    3519--GOTO
NO_ROOM
      3533**LABEL    3533--CALLALT
NO_ROOM2
      3554**LABEL    3547--GOTO     3555--CALLALT
SAVEP
        10**DCL         9--PROC     3482<>CALL     3494<>CALL     3503--ENTRY    3506<>CALL     3510--ENTRY
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:39   
      3526<>CALL     3533<>CALL     3546--ENTRY    3555<>CALL
SAVEP.CECCB
        11**DCL      3466<<ASSIGN   3524<<ASSIGN   3532<<ASSIGN   3554<<ASSIGN
SAVEP.ECCBF
        19**DCL      3466>>ASSIGN   3512<<ASSIGN   3524>>ASSIGN   3532>>ASSIGN   3549<<ASSIGN
SAVEP.ECCS
        15**DCL      3457<<ASSIGN   3460<<ASSIGN
SAVEP.FLAG
        12**DCL      3468<<ASSIGN
SAVEP.FLAG.ALTBIT
        13**DCL      3516<<ASSIGN   3517<<ASSIGN
SAVEP.JERR
        20**DCL      3469<<ASSIGN
SAVEP.LIMT
        18**DCL      3465<<ASSIGN
SAVEP.P#
        21**DCL      3470<<ASSIGN   3511>>ASSIGN   3514<<ASSIGN   3548>>ASSIGN   3551<<ASSIGN
SAVEP.RNST
        16**DCL      3463<<ASSIGN
SAVEP.XCFL
        17**DCL      3464<<ASSIGN
SETXCON
      3450**PROC     3479--CALL     3504--CALL     3513--CALL     3550--CALL
SSIC
        24**DCL      3452<<ASSIGN   3482<>CALL     3494<>CALL     3533<>CALL     3553<<ASSIGN   3555<>CALL
SST$SSFTCB
        34**DCL-ENT  3482--CALL     3494--CALL     3533--CALL     3555--CALL
SSU$DELTAGO
        36**DCL-ENT  3506--CALL     3526--CALL
TCBFULL
      3487**LABEL    3482--CALLALT
TECCB
        27**DCL      3522<<ASSIGN   3523<<ASSIGN   3523>>ASSIGN   3524>>ASSIGN   3531<<ASSIGN   3532>>ASSIGN
TEMP#
        26**DCL      3511<<ASSIGN   3514>>ASSIGN   3548<<ASSIGN   3551>>ASSIGN
UDB$AUTO
PL6.E3A0      #001=JSX$XCONGO File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:51 Page:40   
        35**DCL-ENT  3488--CALL

PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:41   
      203        1        /*T***********************************************************/
      204        2        /*T*                                                         */
      205        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      206        4        /*T*                                                         */
      207        5        /*T***********************************************************/
      208        6
      209        7
      210        8        JSX$XCONSEE: PROC;
      211        9        /*P*    NAME:   JSX$XCONSEE
      212       10
      213       11                PURPOSE:   To determine if Exit Control Processing is
      214       12                           to be entered for the currently active domain
      215       13                           and to call the appropriate routine if so.
      216       14        */
      217       15
      218       16        /* LOCAL AUTO */
      219       17
      220       18    1   DCL 1 ECP,                              /* FIXED END OF FRAME                 */
      221       19    1         2 ECCS UBIN(36),                  /* ECC SUB-CODE                       */
      222       20    1         2 RNST BIT(9) UNAL,               /* JIT.RNST                           */
      223       21    1         2 XCFL BIT(9) UNAL,               /* JIT.XCONFLGS                       */
      224       22    1         2 LIMT BIT(9) UNAL,               /* JIT.XLIMFLG                        */
      225       23    1         2 ECCBF BIT(9) UNAL,              /* ECCB.XCFLGS                        */
      226       24    1         2 JERR BIT(36),                   /* JIT.ERR                            */
      227       25    1         2 P# UBIN(36);                    /* # OF PARAMETERS                    */
      228       26
      229       27    1   DCL TEMP UBIN(36);
      230       28    1   DCL TEMP$ REDEF TEMP PTR;
      231       29    1   DCL TEMPF BIT(9);
      232       30
      233       31
      234       32        /* EXTERNAL PROCEDURES */
      235       33
      236       34    1   DCL JSX$XCONGO ENTRY(1);
      237       35    1   DCL JSX$DLTAXCON ENTRY(1);
      238       36    1   DCL JSX$UNXCON ENTRY;
      239       37    1   DCL UEP$CLEARONE ENTRY(3) ALTRET;
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:42   
      240       38
      241       39        /* EXTERNAL DATA */
      242       40
      243       41    1   DCL B$JIT$ PTR SYMREF READONLY;
      244       42        %INCLUDE B_MAGIC_C;
      245      160        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      246      253        %INCLUDE JS_CNTRL_R;
      247      287
      248      288                                                /* Based Structures                   */
      249      289
      250      290        %INCLUDE B$JIT;
      251      893        %INCLUDE UE_CP6;
      252     1584        %B$TCB;
      253     1587        %B$ECCB;
      254     1595        %INCLUDE B_ULSMAC_C;
      255     2704        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
      256     2903        %INCLUDE B$SS;
      257     3082        %INCLUDE B_MACROS_C;
      258     3193        %T01DESCR (NAME=B$$DESCR);
      259     3201
      260     3202                                                /* String Substitutions               */
      261     3203        %INCLUDE B_STRINGS_C;
      262     3332
      263     3333        %SUB B$TCB=B_MPT.TCB$->B$TCB;
      264     3334        %SUB B$JIT=B$JIT$->B$JIT;
      265     3335        %SUB B$SS=B_MPT.SS$->B$SS;
      266     3336        %SUB B$ECCB=B_MPT.ECCB$->B$ECCB;
      267     3337
      268     3338        %EJECT;
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:43   
      269     3339
      270     3340    1      ECP.ECCBF=B$ECCB.XCONF;
      271     3341                            /* The rest will be initialized by XCONGO or DLTAXCON     */
      272     3342
      273     3343    1      IF (B$JIT.RNST & %RS_CL3#) THEN GOTO NO_DELTA;
      274     3344    1      IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & '020'O)
      275     3345    1      THEN IF (B$JIT.JUNK & %JJ_BYPASSD#) = '0'O
      276     3346    1           THEN CALL JSX$DLTAXCON(ECP);
      277     3347    1           ELSE B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_BYPASSD#);
      278     3348
      279     3349    1   NO_DELTA: ;
      280     3350    1      IF B$ECCB.FLAGS.XCONSET = '0'B THEN GOTO SET_RNST;
      281     3351    1      IF B$ECCB.XCONF.SVLDT='1'B THEN GOTO SET_RNST;
      282     3352
      283     3353    1      IF B$ECCB.XCONF.PROG = '1'B
      284     3354    1      THEN IF (B$JIT.RNST & %RS_PMME#) = '000'O
      285     3355    2           THEN DO;                        /* if M$EXIT-M$ERR-M$XXX              */
      286     3356    2                IF (B$SS.ISR.WSR = %CPWSR) AND (B$TCB.CURRSZ ~= 0)
      287     3357    3                THEN DO;
      288     3358    3                     TEMP$ = ADDR(NIL);
      289     3359    3                     CALL UEP$CLEARONE(0,TEMP$);
      290     3360    3                     END;
      291     3361    2                GOTO FINAL_EXIT;
      292     3362    2                END;
      293     3363
      294     3364    1      IF (B$JIT.RNST & %RS_CL23#) = '000'O THEN GOTO GOXCON;
      295     3365        /* GOXCON IF CLASS 1 */
      296     3366
      297     3367    1      IF B$ECCB.XCONF.CL3 ~= '0'B THEN GOTO FINAL_EXIT;
      298     3368        /* FINAL EXIT IF (2 ON 3) OR (3 ON 3) */
      299     3369
      300     3370    1      TEMP = B$SS.ISR.WSR - 4;             /*TO SET EXTENDED LIMITS              */
      301     3371
      302     3372    1      IF (B$JIT.RNST & %RS_CL3#) = '000'O
      303     3373    2      THEN DO;                             /* DO IF CLASS 2                      */
      304     3374    2           IF B$ECCB.XCONF.LIMIT = '1'B THEN GOTO FINAL_EXIT;
      305     3375                                                /* KICK OFF IF (2 ON 2)               */
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:44   
      306     3376
      307     3377                                                /* NEW INSTANCE OF CLASS 2            */
      308     3378
      309     3379    2           IF (B$JIT.MODE ~= %M_INT#) OR (B$JIT.XLIMFLG & %XL_TIME#)
      310     3380    2           THEN GOTO SET_MRT;
      311     3381    2           GOTO SET_LIMS;
      312     3382    2           END;                            /* DO IF CLASS 2                      */
      313     3383
      314     3384    2      ELSE DO;                             /* DO IF CLASS 3                      */
      315     3385    2           B$ECCB.XCONF.CL3 = '1'B;
      316     3386
      317     3387    2           IF B$ECCB.XCONF.LIMIT = '0'B THEN GOTO SET_MRT;
      318     3388        /* ORIGINAL 3 OR (3 ON 1) */
      319     3389
      320     3390    2           IF (B$JIT.MODE ~= %M_INT#) OR (B$JIT.XLIMFLG & %XL_TIME#)
      321     3391                                                /* WE KNOW ITS (3 ON 2)               */
      322     3392    2           THEN B$JIT.MRT=JS_TIME(TEMP);   /*ONLY BATCH HAD MRT SET ON CLASS 2   */
      323     3393
      324     3394    2           END;                            /* DO IF CLASS 3                      */
      325     3395
      326     3396    1   GOXCON: ;
      327     3397    1      CALL JSX$XCONGO(ECP);
      328     3398                                 /* Will return only if TCB_FULL for the second time  */
      329     3399    1      GOTO FINAL_EXIT;
      330     3400
      331     3401    1   SET_MRT: B$JIT.MRT = JS_TIME(TEMP);
      332     3402
      333     3403    1   SET_LIMS: ;
      334     3404    1      B$JIT.MAXTMPDP = B$JIT.MAXTMPDP + JS_TMDPRM(TEMP);
      335     3405    1      B$JIT.PRDPRM = B$JIT.PRDPRM + JS_PRDPRM(TEMP);
      336     3406    1      B$JIT.REMCPO = B$JIT.REMCPO + JS_REMCPO(TEMP);
      337     3407    1      B$JIT.REMLO  = B$JIT.REMLO  + JS_REMLO(TEMP);
      338     3408    1      B$JIT.REMDO  = B$JIT.REMDO  + JS_REMDO(TEMP);
      339     3409    1      B$ECCB.XCONF.LIMIT = '1'B;
      340     3410    1      GOTO GOXCON;
      341     3411
      342     3412    1   FINAL_EXIT: ;
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:45   
      343     3413    1      B$ECCB.XCONF.PROG='0'B;
      344     3414    1      B$ECCB.XCONF=(B$ECCB.XCONF &~ %SVL_ECCB#);
      345     3415    1      B$ECCB.XCONF.SVLDT='1'B;
      346     3416                                                /* Get rid of old SAVE-LDTRC settings */
      347     3417    1   SET_RNST: ;
      348     3418    1      B$JIT.RNST = (B$JIT.RNST | (B$JIT.FRS   & %RS_XCON#));
      349     3419    1      B$JIT.XCONF=(B$JIT.XCONF &~ %RS_XCON#);
      350     3420                                           /* RESTORE RNST FOR NEXT LEVEL OF XCON     */
      351     3421    1      IF B$ECCB.XCONF.LIMIT='1'B
      352     3422    1      THEN CALL JSX$UNXCON;
      353     3423
      354     3424    1      RETURN;
      355     3425    1   END JSX$XCONSEE;
      356     3426        %EOD;

PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:46   
--  Include file information  --

   B_STRINGS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   JS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSX$XCONSEE.

   Procedure JSX$XCONSEE requires 175 words for executable code.
   Procedure JSX$XCONSEE requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:47   

 Object Unit name= JSX$XCONSEE                                File name= JSX$XCON.:E05TOU
 UTS= JUL 29 '97 23:52:07.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   175    257  JSX$XCONSEE
    1  RoData even  none     2      2  JSX$XCONSEE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  JSX$XCONSEE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 JSX$DLTAXCON
 yes     yes           Std       3 UEP$CLEARONE
         yes           Std       1 JSX$XCONGO
         yes           Std       0 JSX$UNXCON
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:48   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                B_MPT                                 JS_TIME
     JS_TMDPRM                             JS_PRDPRM                             JS_REMCPO
     JS_REMLO                              JS_REMDO                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:49   


      203        1        /*T***********************************************************/
      204        2        /*T*                                                         */
      205        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      206        4        /*T*                                                         */
      207        5        /*T***********************************************************/
      208        6
      209        7
      210        8        JSX$XCONSEE: PROC;

      8  0 000000   000000 700200 xent  JSX$XCONSEE  TSX0  ! X66_AUTO_0
         0 000001   000014 000000                    ZERO    12,0

      211        9        /*P*    NAME:   JSX$XCONSEE
      212       10
      213       11                PURPOSE:   To determine if Exit Control Processing is
      214       12                           to be entered for the currently active domain
      215       13                           and to call the appropriate routine if so.
      216       14        */
      217       15
      218       16        /* LOCAL AUTO */
      219       17
      220       18    1   DCL 1 ECP,                              /* FIXED END OF FRAME                 */
      221       19    1         2 ECCS UBIN(36),                  /* ECC SUB-CODE                       */
      222       20    1         2 RNST BIT(9) UNAL,               /* JIT.RNST                           */
      223       21    1         2 XCFL BIT(9) UNAL,               /* JIT.XCONFLGS                       */
      224       22    1         2 LIMT BIT(9) UNAL,               /* JIT.XLIMFLG                        */
      225       23    1         2 ECCBF BIT(9) UNAL,              /* ECCB.XCFLGS                        */
      226       24    1         2 JERR BIT(36),                   /* JIT.ERR                            */
      227       25    1         2 P# UBIN(36);                    /* # OF PARAMETERS                    */
      228       26
      229       27    1   DCL TEMP UBIN(36);
      230       28    1   DCL TEMP$ REDEF TEMP PTR;
      231       29    1   DCL TEMPF BIT(9);
      232       30
      233       31
      234       32        /* EXTERNAL PROCEDURES */
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:50   
      235       33
      236       34    1   DCL JSX$XCONGO ENTRY(1);
      237       35    1   DCL JSX$DLTAXCON ENTRY(1);
      238       36    1   DCL JSX$UNXCON ENTRY;
      239       37    1   DCL UEP$CLEARONE ENTRY(3) ALTRET;
      240       38
      241       39        /* EXTERNAL DATA */
      242       40
      243       41    1   DCL B$JIT$ PTR SYMREF READONLY;
      244       42        %INCLUDE B_MAGIC_C;
      245      160        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      246      253        %INCLUDE JS_CNTRL_R;
      247      287
      248      288                                                /* Based Structures                   */
      249      289
      250      290        %INCLUDE B$JIT;
      251      893        %INCLUDE UE_CP6;
      252     1584        %B$TCB;
      253     1587        %B$ECCB;
      254     1595        %INCLUDE B_ULSMAC_C;
      255     2704        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
      256     2903        %INCLUDE B$SS;
      257     3082        %INCLUDE B_MACROS_C;
      258     3193        %T01DESCR (NAME=B$$DESCR);
      259     3201
      260     3202                                                /* String Substitutions               */
      261     3203        %INCLUDE B_STRINGS_C;
      262     3332
      263     3333        %SUB B$TCB=B_MPT.TCB$->B$TCB;
      264     3334        %SUB B$JIT=B$JIT$->B$JIT;
      265     3335        %SUB B$SS=B_MPT.SS$->B$SS;
      266     3336        %SUB B$ECCB=B_MPT.ECCB$->B$ECCB;
      267     3337
      268     3338        %EJECT;
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:51   
      269     3339
      270     3340    1      ECP.ECCBF=B$ECCB.XCONF;

   3340  0 000002   000005 470400 xsym               LDP0    B_MPT+5
         0 000003   000004 236100                    LDQ     4,,PR0
         0 000004   000022 772000                    QRL     18
         0 000005   200004 552104                    STBQ    ECP+1,'04'O,AUTO

      271     3341                            /* The rest will be initialized by XCONGO or DLTAXCON     */
      272     3342
      273     3343    1      IF (B$JIT.RNST & %RS_CL3#) THEN GOTO NO_DELTA;

   3343  0 000006   000000 471400 xsym               LDP1    B$JIT$
         0 000007   100314 236100                    LDQ     204,,PR1
         0 000010   777000 376003                    ANQ     -512,DU
         0 000011   640000 376003                    ANQ     -49152,DU
         0 000012   000036 601000 0                  TNZ     NO_DELTA

      274     3344    1      IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & '020'O)

   3344  0 000013   000013 473400 xsym               LDP3    B_MPT+11
         0 000014   300000 236100                    LDQ     0,,PR3
         0 000015   000024 736000                    QLS     20
         0 000016   777000 376003                    ANQ     -512,DU
         0 000017   020000 376003                    ANQ     8192,DU
         0 000020   000036 600000 0                  TZE     NO_DELTA

      275     3345    1      THEN IF (B$JIT.JUNK & %JJ_BYPASSD#) = '0'O

   3345  0 000021   100315 220100                    LDX0    205,,PR1
         0 000022   000400 360003                    ANX0    256,DU
         0 000023   000033 601000 0                  TNZ     s:3347

      276     3346    1           THEN CALL JSX$DLTAXCON(ECP);

   3346  0 000024   200003 634500                    EPPR4   ECP,,AUTO
         0 000025   200012 454500                    STP4    TEMP+3,,AUTO
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:52   
         0 000026   200012 630500                    EPPR0   TEMP+3,,AUTO
         0 000027   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000030   000000 701000 xent               TSX1    JSX$DLTAXCON
         0 000031   000000 011000                    NOP     0
         0 000032   000036 710000 0                  TRA     NO_DELTA

      277     3347    1           ELSE B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_BYPASSD#);

   3347  0 000033   100315 220100                    LDX0    205,,PR1
         0 000034   777377 360003                    ANX0    -257,DU
         0 000035   100315 740100                    STX0    205,,PR1

      278     3348
      279     3349    1   NO_DELTA: ;

   3349  0 000036                       NO_DELTA     null
      280     3350    1      IF B$ECCB.FLAGS.XCONSET = '0'B THEN GOTO SET_RNST;

   3350  0 000036   000005 470400 xsym               LDP0    B_MPT+5
         0 000037   000004 236100                    LDQ     4,,PR0
         0 000040   040000 316003                    CANQ    16384,DU
         0 000041   000231 600000 0                  TZE     SET_RNST

      281     3351    1      IF B$ECCB.XCONF.SVLDT='1'B THEN GOTO SET_RNST;

   3351  0 000042   000020 316003                    CANQ    16,DU
         0 000043   000231 601000 0                  TNZ     SET_RNST

      282     3352
      283     3353    1      IF B$ECCB.XCONF.PROG = '1'B

   3353  0 000044   000400 316003                    CANQ    256,DU
         0 000045   000076 600000 0                  TZE     s:3364

      284     3354    1      THEN IF (B$JIT.RNST & %RS_PMME#) = '000'O

   3354  0 000046   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:53   
         0 000047   100314 236100                    LDQ     204,,PR1
         0 000050   777000 376003                    ANQ     -512,DU
         0 000051   774000 376003                    ANQ     -2048,DU
         0 000052   000076 601000 0                  TNZ     s:3364

      285     3355    2           THEN DO;                        /* if M$EXIT-M$ERR-M$XXX              */

      286     3356    2                IF (B$SS.ISR.WSR = %CPWSR) AND (B$TCB.CURRSZ ~= 0)

   3356  0 000053   000000 473400 xsym               LDP3    B_MPT
         0 000054   300010 236100                    LDQ     8,,PR3
         0 000055   000160 376007                    ANQ     112,DL
         0 000056   000100 116007                    CMPQ    64,DL
         0 000057   000075 601000 0                  TNZ     s:3361
         0 000060   000004 474400 xsym               LDP4    B_MPT+4
         0 000061   400002 720100                    LXL0    2,,PR4
         0 000062   000075 600000 0                  TZE     s:3361

      287     3357    3                THEN DO;

      288     3358    3                     TEMP$ = ADDR(NIL);

   3358  0 000063   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000064   200007 756100                    STQ     TEMP,,AUTO

      289     3359    3                     CALL UEP$CLEARONE(0,TEMP$);

   3359  0 000065   200007 635500                    EPPR5   TEMP,,AUTO
         0 000066   200013 455500                    STP5    TEMP+4,,AUTO
         0 000067   000000 236000 1                  LDQ     0
         0 000070   200012 756100                    STQ     TEMP+3,,AUTO
         0 000071   200012 630500                    EPPR0   TEMP+3,,AUTO
         0 000072   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000073   000000 701000 xent               TSX1    UEP$CLEARONE
         0 000074   000000 011000                    NOP     0

      290     3360    3                     END;
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:54   

      291     3361    2                GOTO FINAL_EXIT;

   3361  0 000075   000214 710000 0                  TRA     FINAL_EXIT

      292     3362    2                END;
      293     3363
      294     3364    1      IF (B$JIT.RNST & %RS_CL23#) = '000'O THEN GOTO GOXCON;

   3364  0 000076   000000 471400 xsym               LDP1    B$JIT$
         0 000077   100314 236100                    LDQ     204,,PR1
         0 000100   777000 376003                    ANQ     -512,DU
         0 000101   740000 376003                    ANQ     -16384,DU
         0 000102   000157 600000 0                  TZE     GOXCON

      295     3365        /* GOXCON IF CLASS 1 */
      296     3366
      297     3367    1      IF B$ECCB.XCONF.CL3 ~= '0'B THEN GOTO FINAL_EXIT;

   3367  0 000103   000004 236100                    LDQ     4,,PR0
         0 000104   000040 316003                    CANQ    32,DU
         0 000105   000214 601000 0                  TNZ     FINAL_EXIT

      298     3368        /* FINAL EXIT IF (2 ON 3) OR (3 ON 3) */
      299     3369
      300     3370    1      TEMP = B$SS.ISR.WSR - 4;             /*TO SET EXTENDED LIMITS              */

   3370  0 000106   000000 473400 xsym               LDP3    B_MPT
         0 000107   300010 236100                    LDQ     8,,PR3
         0 000110   000004 772000                    QRL     4
         0 000111   000007 376007                    ANQ     7,DL
         0 000112   000004 136007                    SBLQ    4,DL
         0 000113   200007 756100                    STQ     TEMP,,AUTO

      301     3371
      302     3372    1      IF (B$JIT.RNST & %RS_CL3#) = '000'O

PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:55   
   3372  0 000114   100314 236100                    LDQ     204,,PR1
         0 000115   777000 376003                    ANQ     -512,DU
         0 000116   640000 376003                    ANQ     -49152,DU
         0 000117   000135 601000 0                  TNZ     s:3385

      303     3373    2      THEN DO;                             /* DO IF CLASS 2                      */

      304     3374    2           IF B$ECCB.XCONF.LIMIT = '1'B THEN GOTO FINAL_EXIT;

   3374  0 000120   000004 236100                    LDQ     4,,PR0
         0 000121   000100 316003                    CANQ    64,DU
         0 000122   000214 601000 0                  TNZ     FINAL_EXIT

      305     3375                                                /* KICK OFF IF (2 ON 2)               */
      306     3376
      307     3377                                                /* NEW INSTANCE OF CLASS 2            */
      308     3378
      309     3379    2           IF (B$JIT.MODE ~= %M_INT#) OR (B$JIT.XLIMFLG & %XL_TIME#)

   3379  0 000123   100000 236100                    LDQ     0,,PR1
         0 000124   740000 376003                    ANQ     -16384,DU
         0 000125   140000 116003                    CMPQ    49152,DU
         0 000126   000166 601000 0                  TNZ     SET_MRT
         0 000127   100316 236100                    LDQ     206,,PR1
         0 000130   000022 736000                    QLS     18
         0 000131   777000 376003                    ANQ     -512,DU
         0 000132   001000 376003                    ANQ     512,DU
         0 000133   000166 601000 0                  TNZ     SET_MRT

      310     3380    2           THEN GOTO SET_MRT;
      311     3381    2           GOTO SET_LIMS;

   3381  0 000134   000171 710000 0                  TRA     SET_LIMS

      312     3382    2           END;                            /* DO IF CLASS 2                      */
      313     3383
      314     3384    2      ELSE DO;                             /* DO IF CLASS 3                      */
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:56   

      315     3385    2           B$ECCB.XCONF.CL3 = '1'B;

   3385  0 000135   000040 236003                    LDQ     32,DU
         0 000136   000004 256100                    ORSQ    4,,PR0

      316     3386
      317     3387    2           IF B$ECCB.XCONF.LIMIT = '0'B THEN GOTO SET_MRT;

   3387  0 000137   000005 470400 xsym               LDP0    B_MPT+5
         0 000140   000004 236100                    LDQ     4,,PR0
         0 000141   000100 316003                    CANQ    64,DU
         0 000142   000166 600000 0                  TZE     SET_MRT

      318     3388        /* ORIGINAL 3 OR (3 ON 1) */
      319     3389
      320     3390    2           IF (B$JIT.MODE ~= %M_INT#) OR (B$JIT.XLIMFLG & %XL_TIME#)

   3390  0 000143   100000 236100                    LDQ     0,,PR1
         0 000144   740000 376003                    ANQ     -16384,DU
         0 000145   140000 116003                    CMPQ    49152,DU
         0 000146   000154 601000 0                  TNZ     s:3392
         0 000147   100316 236100                    LDQ     206,,PR1
         0 000150   000022 736000                    QLS     18
         0 000151   777000 376003                    ANQ     -512,DU
         0 000152   001000 376003                    ANQ     512,DU
         0 000153   000157 600000 0                  TZE     GOXCON

      321     3391                                                /* WE KNOW ITS (3 ON 2)               */
      322     3392    2           THEN B$JIT.MRT=JS_TIME(TEMP);   /*ONLY BATCH HAD MRT SET ON CLASS 2   */

   3392  0 000154   200007 720100                    LXL0    TEMP,,AUTO
         0 000155   000000 235010 xsym               LDA     JS_TIME,X0
         0 000156   100276 755100                    STA     190,,PR1

      323     3393
      324     3394    2           END;                            /* DO IF CLASS 3                      */
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:57   

   3390  0 000157                       GOXCON       null
      325     3395
      326     3396    1   GOXCON: ;
      327     3397    1      CALL JSX$XCONGO(ECP);

   3397  0 000157   200003 630500                    EPPR0   ECP,,AUTO
         0 000160   200012 450500                    STP0    TEMP+3,,AUTO
         0 000161   200012 630500                    EPPR0   TEMP+3,,AUTO
         0 000162   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000163   000000 701000 xent               TSX1    JSX$XCONGO
         0 000164   000000 011000                    NOP     0

      328     3398                                 /* Will return only if TCB_FULL for the second time  */
      329     3399    1      GOTO FINAL_EXIT;

   3399  0 000165   000214 710000 0                  TRA     FINAL_EXIT

      330     3400
      331     3401    1   SET_MRT: B$JIT.MRT = JS_TIME(TEMP);

   3401  0 000166   200007 720100       SET_MRT      LXL0    TEMP,,AUTO
         0 000167   000000 235010 xsym               LDA     JS_TIME,X0
         0 000170   100276 755100                    STA     190,,PR1

   3390  0 000171                       SET_LIMS     null
      332     3402
      333     3403    1   SET_LIMS: ;
      334     3404    1      B$JIT.MAXTMPDP = B$JIT.MAXTMPDP + JS_TMDPRM(TEMP);

   3404  0 000171   200007 720100                    LXL0    TEMP,,AUTO
         0 000172   100241 236100                    LDQ     161,,PR1
         0 000173   000000 036010 xsym               ADLQ    JS_TMDPRM,X0
         0 000174   100241 756100                    STQ     161,,PR1

      335     3405    1      B$JIT.PRDPRM = B$JIT.PRDPRM + JS_PRDPRM(TEMP);

PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:58   
   3405  0 000175   100242 236100                    LDQ     162,,PR1
         0 000176   000000 036010 xsym               ADLQ    JS_PRDPRM,X0
         0 000177   100242 756100                    STQ     162,,PR1

      336     3406    1      B$JIT.REMCPO = B$JIT.REMCPO + JS_REMCPO(TEMP);

   3406  0 000200   100360 236100                    LDQ     240,,PR1
         0 000201   000000 036010 xsym               ADLQ    JS_REMCPO,X0
         0 000202   100360 756100                    STQ     240,,PR1

      337     3407    1      B$JIT.REMLO  = B$JIT.REMLO  + JS_REMLO(TEMP);

   3407  0 000203   100361 236100                    LDQ     241,,PR1
         0 000204   000000 036010 xsym               ADLQ    JS_REMLO,X0
         0 000205   100361 756100                    STQ     241,,PR1

      338     3408    1      B$JIT.REMDO  = B$JIT.REMDO  + JS_REMDO(TEMP);

   3408  0 000206   100362 236100                    LDQ     242,,PR1
         0 000207   000000 036010 xsym               ADLQ    JS_REMDO,X0
         0 000210   100362 756100                    STQ     242,,PR1

      339     3409    1      B$ECCB.XCONF.LIMIT = '1'B;

   3409  0 000211   000100 236003                    LDQ     64,DU
         0 000212   000004 256100                    ORSQ    4,,PR0

      340     3410    1      GOTO GOXCON;

   3410  0 000213   000157 710000 0                  TRA     GOXCON

   3409  0 000214                       FINAL_EXIT   null
      341     3411
      342     3412    1   FINAL_EXIT: ;
      343     3413    1      B$ECCB.XCONF.PROG='0'B;

   3413  0 000214   000005 470400 xsym               LDP0    B_MPT+5
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:59   
         0 000215   000001 236000 1                  LDQ     1
         0 000216   000004 356100                    ANSQ    4,,PR0

      344     3414    1      B$ECCB.XCONF=(B$ECCB.XCONF &~ %SVL_ECCB#);

   3414  0 000217   000005 470400 xsym               LDP0    B_MPT+5
         0 000220   000004 236100                    LDQ     4,,PR0
         0 000221   000011 736000                    QLS     9
         0 000222   777000 376003                    ANQ     -512,DU
         0 000223   761000 376003                    ANQ     -7680,DU
         0 000224   000011 772000                    QRL     9
         0 000225   000004 552120                    STBQ    4,'20'O,PR0

      345     3415    1      B$ECCB.XCONF.SVLDT='1'B;

   3415  0 000226   000005 470400 xsym               LDP0    B_MPT+5
         0 000227   000020 236003                    LDQ     16,DU
         0 000230   000004 256100                    ORSQ    4,,PR0

   3415  0 000231                       SET_RNST     null
      346     3416                                                /* Get rid of old SAVE-LDTRC settings */
      347     3417    1   SET_RNST: ;
      348     3418    1      B$JIT.RNST = (B$JIT.RNST | (B$JIT.FRS   & %RS_XCON#));

   3418  0 000231   000000 470400 xsym               LDP0    B$JIT$
         0 000232   000314 236100                    LDQ     204,,PR0
         0 000233   000011 736000                    QLS     9
         0 000234   777000 376003                    ANQ     -512,DU
         0 000235   760000 376003                    ANQ     -8192,DU
         0 000236   200012 756100                    STQ     TEMP+3,,AUTO
         0 000237   000314 236100                    LDQ     204,,PR0
         0 000240   777000 376003                    ANQ     -512,DU
         0 000241   200012 276100                    ORQ     TEMP+3,,AUTO
         0 000242   000314 552140                    STBQ    204,'40'O,PR0

      349     3419    1      B$JIT.XCONF=(B$JIT.XCONF &~ %RS_XCON#);

PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:60   
   3419  0 000243   000316 236100                    LDQ     206,,PR0
         0 000244   777000 376003                    ANQ     -512,DU
         0 000245   017000 376003                    ANQ     7680,DU
         0 000246   000316 552140                    STBQ    206,'40'O,PR0

      350     3420                                           /* RESTORE RNST FOR NEXT LEVEL OF XCON     */
      351     3421    1      IF B$ECCB.XCONF.LIMIT='1'B

   3421  0 000247   000005 471400 xsym               LDP1    B_MPT+5
         0 000250   100004 236100                    LDQ     4,,PR1
         0 000251   000100 316003                    CANQ    64,DU
         0 000252   000256 600000 0                  TZE     s:3424

      352     3422    1      THEN CALL JSX$UNXCON;

   3422  0 000253   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000254   000000 701000 xent               TSX1    JSX$UNXCON
         0 000255   000000 011000                    NOP     0

      353     3423
      354     3424    1      RETURN;

   3424  0 000256   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000002 006000   777377 777777                                    ........
      355     3425    1   END JSX$XCONSEE;
      356     3426        %EOD;

PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:61   
--  Include file information  --

   B_STRINGS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   JS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSX$XCONSEE.
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:62   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC(144)   r     1 ECP                        7-0-0/w UBIN        r     1 TEMP
     7-0-0/w PTR         r     1 TEMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d STRC(432)   r     1 B_MPT
     0-0-0/w SBIN        r     1 JS_PRDPRM(0:3)
     0-0-0/w SBIN        r     1 JS_REMCPO(0:3)
     0-0-0/w SBIN        r     1 JS_REMDO(0:3)
     0-0-0/w SBIN        r     1 JS_REMLO(0:3)
     0-0-0/w SBIN        r     1 JS_TIME(0:3)
     0-0-0/w SBIN        r     1 JS_TMDPRM(0:3)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$$DESCR                   0-0-0/w STRC(180)   r     1 B$ECCB
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/w STRC(144)   r     1 B$TCB


   Procedure JSX$XCONSEE requires 175 words for executable code.
   Procedure JSX$XCONSEE requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:63   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:64   
          MINI XREF LISTING

B$$DESCR.FLGS
      3196**DCL      3344>>IF
B$ECCB.FLAGS.XCONSET
      1589**DCL      3350>>IF
B$ECCB.XCONF
      1590**DCL      3340>>ASSIGN   3414<<ASSIGN   3414>>ASSIGN
B$ECCB.XCONF.CL3
      1591**DCL      3367>>IF       3385<<ASSIGN
B$ECCB.XCONF.LIMIT
      1590**DCL      3374>>IF       3387>>IF       3409<<ASSIGN   3421>>IF
B$ECCB.XCONF.PROG
      1590**DCL      3353>>IF       3413<<ASSIGN
B$ECCB.XCONF.SVLDT
      1591**DCL      3351>>IF       3415<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       711**DCL       711--REDEF
B$JIT.ERR.MID
       618**DCL       618--REDEF
B$JIT.FRS
       813**DCL      3418>>ASSIGN
B$JIT.JRESPEAK
       779**DCL       780--REDEF
B$JIT.JUNK
       817**DCL      3345>>IF       3347<<ASSIGN   3347>>ASSIGN
B$JIT.MAXTMPDP
       786**DCL      3404<<ASSIGN   3404>>ASSIGN
B$JIT.MODE
       612**DCL      3379>>IF       3390>>IF
B$JIT.MRT
       791**DCL      3392<<ASSIGN   3401<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
       888**DCL       888--REDEF     889--REDEF
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:65   
B$JIT.PNR
       792**DCL       792--REDEF
B$JIT.PRDPRM
       786**DCL      3405<<ASSIGN   3405>>ASSIGN
B$JIT.REMCPO
       890**DCL      3406<<ASSIGN   3406>>ASSIGN
B$JIT.REMDO
       890**DCL      3408<<ASSIGN   3408>>ASSIGN
B$JIT.REMLO
       890**DCL      3407<<ASSIGN   3407>>ASSIGN
B$JIT.RNST
       796**DCL      3343>>IF       3354>>IF       3364>>IF       3372>>IF       3418<<ASSIGN   3418>>ASSIGN
B$JIT.TSLINE
       886**DCL       887--REDEF
B$JIT.XCONF
       838**DCL      3419<<ASSIGN   3419>>ASSIGN
B$JIT.XLIMFLG
       848**DCL      3379>>IF       3390>>IF
B$JIT$
        41**DCL       612--IMP-PTR  3343>>IF       3345>>IF       3347>>ASSIGN   3347>>ASSIGN   3354>>IF
      3364>>IF       3372>>IF       3379>>IF       3379>>IF       3390>>IF       3390>>IF       3392>>ASSIGN
      3401>>ASSIGN   3404>>ASSIGN   3404>>ASSIGN   3405>>ASSIGN   3405>>ASSIGN   3406>>ASSIGN   3406>>ASSIGN
      3407>>ASSIGN   3407>>ASSIGN   3408>>ASSIGN   3408>>ASSIGN   3418>>ASSIGN   3418>>ASSIGN   3418>>ASSIGN
      3419>>ASSIGN   3419>>ASSIGN
B$SS.ISR.WSR
      2960**DCL      3356>>IF       3370>>ASSIGN
B$SS.RVA
      2955**DCL      2956--REDEF
B$TCB.CURRSZ
      1585**DCL      3356>>IF
B_MPT.AS
       196**DCL       199--REDEF
B_MPT.ASDESC
       228**DCL       232--REDEF
B_MPT.ECCB
       211**DCL       214--REDEF
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:66   
B_MPT.ECCB$
       214**DCL      3340>>ASSIGN   3350>>IF       3351>>IF       3353>>IF       3367>>IF       3374>>IF
      3385>>ASSIGN   3387>>IF       3409>>ASSIGN   3413>>ASSIGN   3414>>ASSIGN   3414>>ASSIGN   3415>>ASSIGN
      3421>>IF
B_MPT.ECCBDESC
       246**DCL       250--REDEF
B_MPT.ECCBDESC$
       250**DCL      3344>>IF
B_MPT.LS
       191**DCL       194--REDEF
B_MPT.LSDESC
       222**DCL       226--REDEF
B_MPT.PS
       201**DCL       204--REDEF
B_MPT.PSDESC
       234**DCL       238--REDEF
B_MPT.SS
       186**DCL       189--REDEF
B_MPT.SS$
       189**DCL      3356>>IF       3370>>ASSIGN
B_MPT.SSDESC
       216**DCL       220--REDEF
B_MPT.TCB
       206**DCL       209--REDEF
B_MPT.TCB$
       209**DCL      3356>>IF
B_MPT.TCBDESC
       240**DCL       244--REDEF
ECP
        18**DCL      3346<>CALL     3397<>CALL
ECP.ECCBF
        23**DCL      3340<<ASSIGN
FINAL_EXIT
      3409**LABEL    3361--GOTO     3367--GOTO     3374--GOTO     3399--GOTO
GOXCON
      3390**LABEL    3364--GOTO     3410--GOTO
PL6.E3A0      #002=JSX$XCONSEE File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:67   
JSX$DLTAXCON
        35**DCL-ENT  3346--CALL
JSX$UNXCON
        36**DCL-ENT  3422--CALL
JSX$XCONGO
        34**DCL-ENT  3397--CALL
JS_PRDPRM
       285**DCL      3405>>ASSIGN
JS_REMCPO
       285**DCL      3406>>ASSIGN
JS_REMDO
       286**DCL      3408>>ASSIGN
JS_REMLO
       285**DCL      3407>>ASSIGN
JS_TIME
       285**DCL      3392>>ASSIGN   3401>>ASSIGN
JS_TMDPRM
       285**DCL      3404>>ASSIGN
NO_DELTA
      3349**LABEL    3343--GOTO
SET_LIMS
      3390**LABEL    3381--GOTO
SET_MRT
      3401**LABEL    3380--GOTO     3387--GOTO
SET_RNST
      3415**LABEL    3350--GOTO     3351--GOTO
TEMP
        27**DCL        28--REDEF    3370<<ASSIGN   3392>>ASSIGN   3401>>ASSIGN   3404>>ASSIGN   3405>>ASSIGN
      3406>>ASSIGN   3407>>ASSIGN   3408>>ASSIGN
TEMP$
        28**DCL      3358<<ASSIGN   3359<>CALL
UEP$CLEARONE
        37**DCL-ENT  3359--CALL

PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:68   
      357        1        /*T***********************************************************/
      358        2        /*T*                                                         */
      359        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      360        4        /*T*                                                         */
      361        5        /*T***********************************************************/
      362        6        JSX$UNXCON: PROC;
      363        7
      364        8         /*P* NAME: JSX$UNXCON.
      365        9
      366       10              PURPOSE:  To remove extended limits for Exit Control
      367       11                        from the user's JIT.
      368       12
      369       13         */
      370       14    1   DCL I SBIN;
      371       15
      372       16    1   DCL B$JIT$ PTR SYMREF READONLY;
      373       17
      374       18        %INCLUDE JS_CNTRL_R;
      375       52        %INCLUDE B_MAGIC_C;
      376      170        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      377      263                                                /* Based Structures                   */
      378      264        %INCLUDE B$JIT_C;
      379      578        %B$JIT0;
      380      667        %U$JIT1X;
      381      670        %M$JIT2X;
      382      673        %F$JIT3;
      383      678        %S$JIT4;
      384      684        %J$JIT5;
      385      772        %A$JIT6;
      386      782        %INCLUDE UE_CP6;
      387     1473        %INCLUDE B$SS;
      388     1652
      389     1653                                                /* String substitutions               */
      390     1654
      391     1655        %SUB B$JIT=B$JIT$->B$JIT;
      392     1656        %SUB B$SS=B_MPT.SS$->B$SS;
      393     1657        %EJECT;
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:69   
      394     1658    1      I=B$SS.ISR.WSR-4;
      395     1659    1      IF B$JIT.MAXTMPDP - JS_TMDPRM(I) >0
      396     1660    1      THEN B$JIT.MAXTMPDP = B$JIT.MAXTMPDP - JS_TMDPRM(I);
      397     1661    1      ELSE B$JIT.MAXTMPDP=0;
      398     1662
      399     1663    1      IF B$JIT.PRDPRM - JS_PRDPRM(I) >0
      400     1664    1      THEN B$JIT.PRDPRM = B$JIT.PRDPRM - JS_PRDPRM(I);
      401     1665    1      ELSE B$JIT.PRDPRM=0;
      402     1666
      403     1667    1      IF B$JIT.REMCPO - JS_REMCPO(I) >0
      404     1668    1      THEN B$JIT.REMCPO = B$JIT.REMCPO - JS_REMCPO(I);
      405     1669    1      ELSE B$JIT.REMCPO=0;
      406     1670
      407     1671    1      IF B$JIT.REMLO - JS_REMLO(I) >0
      408     1672    1      THEN B$JIT.REMLO = B$JIT.REMLO - JS_REMLO(4);
      409     1673    1      ELSE B$JIT.REMLO = 0;
      410     1674
      411     1675    1      IF B$JIT.REMDO - JS_REMDO(I) > 0
      412     1676    1      THEN B$JIT.REMDO = B$JIT.REMDO - JS_REMDO(I);
      413     1677    1      ELSE B$JIT.REMDO =0;
      414     1678
      415     1679    1      IF (B$JIT.MODE ~= %M_INT#) OR (B$JIT.XLIMFLG & %XL_TIME#)
      416     1680    1      THEN B$JIT.MRT=0;
      417     1681                                                /*                                    */
      418     1682    1   END JSX$UNXCON;
      419     1683        %EOD;

PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:70   
--  Include file information  --

   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   UE_CP6.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   JS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSX$UNXCON.

   Procedure JSX$UNXCON requires 63 words for executable code.
   Procedure JSX$UNXCON requires 4 words of local(AUTO) storage.

PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:71   

 Object Unit name= JSX$UNXCON                                 File name= JSX$XCON.:E05TOU
 UTS= JUL 29 '97 23:52:35.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    63     77  JSX$UNXCON

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  JSX$UNXCON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                JS_TMDPRM                             JS_PRDPRM
     JS_REMCPO                             JS_REMLO                              JS_REMDO
     B_MPT
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:72   


      357        1        /*T***********************************************************/
      358        2        /*T*                                                         */
      359        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      360        4        /*T*                                                         */
      361        5        /*T***********************************************************/
      362        6        JSX$UNXCON: PROC;

      6  0 000000   000000 700200 xent  JSX$UNXCON   TSX0  ! X66_AUTO_0
         0 000001   000004 000000                    ZERO    4,0

      363        7
      364        8         /*P* NAME: JSX$UNXCON.
      365        9
      366       10              PURPOSE:  To remove extended limits for Exit Control
      367       11                        from the user's JIT.
      368       12
      369       13         */
      370       14    1   DCL I SBIN;
      371       15
      372       16    1   DCL B$JIT$ PTR SYMREF READONLY;
      373       17
      374       18        %INCLUDE JS_CNTRL_R;
      375       52        %INCLUDE B_MAGIC_C;
      376      170        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      377      263                                                /* Based Structures                   */
      378      264        %INCLUDE B$JIT_C;
      379      578        %B$JIT0;
      380      667        %U$JIT1X;
      381      670        %M$JIT2X;
      382      673        %F$JIT3;
      383      678        %S$JIT4;
      384      684        %J$JIT5;
      385      772        %A$JIT6;
      386      782        %INCLUDE UE_CP6;
      387     1473        %INCLUDE B$SS;
      388     1652
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:73   
      389     1653                                                /* String substitutions               */
      390     1654
      391     1655        %SUB B$JIT=B$JIT$->B$JIT;
      392     1656        %SUB B$SS=B_MPT.SS$->B$SS;
      393     1657        %EJECT;
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:74   
      394     1658    1      I=B$SS.ISR.WSR-4;

   1658  0 000002   000000 470400 xsym               LDP0    B_MPT
         0 000003   000010 236100                    LDQ     8,,PR0
         0 000004   000004 772000                    QRL     4
         0 000005   000007 376007                    ANQ     7,DL
         0 000006   000004 136007                    SBLQ    4,DL
         0 000007   200003 756100                    STQ     I,,AUTO

      395     1659    1      IF B$JIT.MAXTMPDP - JS_TMDPRM(I) >0

   1659  0 000010   000000 620006                    EAX0    0,QL
         0 000011   000000 471400 xsym               LDP1    B$JIT$
         0 000012   100241 236100                    LDQ     161,,PR1
         0 000013   000000 136010 xsym               SBLQ    JS_TMDPRM,X0
         0 000014   000022 604400 0                  TMOZ    s:1661

      396     1660    1      THEN B$JIT.MAXTMPDP = B$JIT.MAXTMPDP - JS_TMDPRM(I);

   1660  0 000015   200003 720100                    LXL0    I,,AUTO
         0 000016   100241 236100                    LDQ     161,,PR1
         0 000017   000000 136010 xsym               SBLQ    JS_TMDPRM,X0
         0 000020   100241 756100                    STQ     161,,PR1
         0 000021   000023 710000 0                  TRA     s:1663

      397     1661    1      ELSE B$JIT.MAXTMPDP=0;

   1661  0 000022   100241 450100                    STZ     161,,PR1

      398     1662
      399     1663    1      IF B$JIT.PRDPRM - JS_PRDPRM(I) >0

   1663  0 000023   200003 720100                    LXL0    I,,AUTO
         0 000024   100242 236100                    LDQ     162,,PR1
         0 000025   000000 136010 xsym               SBLQ    JS_PRDPRM,X0
         0 000026   000033 604400 0                  TMOZ    s:1665

PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:75   
      400     1664    1      THEN B$JIT.PRDPRM = B$JIT.PRDPRM - JS_PRDPRM(I);

   1664  0 000027   100242 236100                    LDQ     162,,PR1
         0 000030   000000 136010 xsym               SBLQ    JS_PRDPRM,X0
         0 000031   100242 756100                    STQ     162,,PR1
         0 000032   000034 710000 0                  TRA     s:1667

      401     1665    1      ELSE B$JIT.PRDPRM=0;

   1665  0 000033   100242 450100                    STZ     162,,PR1

      402     1666
      403     1667    1      IF B$JIT.REMCPO - JS_REMCPO(I) >0

   1667  0 000034   100360 236100                    LDQ     240,,PR1
         0 000035   000000 136010 xsym               SBLQ    JS_REMCPO,X0
         0 000036   000043 604400 0                  TMOZ    s:1669

      404     1668    1      THEN B$JIT.REMCPO = B$JIT.REMCPO - JS_REMCPO(I);

   1668  0 000037   100360 236100                    LDQ     240,,PR1
         0 000040   000000 136010 xsym               SBLQ    JS_REMCPO,X0
         0 000041   100360 756100                    STQ     240,,PR1
         0 000042   000044 710000 0                  TRA     s:1671

      405     1669    1      ELSE B$JIT.REMCPO=0;

   1669  0 000043   100360 450100                    STZ     240,,PR1

      406     1670
      407     1671    1      IF B$JIT.REMLO - JS_REMLO(I) >0

   1671  0 000044   100361 236100                    LDQ     241,,PR1
         0 000045   000000 136010 xsym               SBLQ    JS_REMLO,X0
         0 000046   000053 604400 0                  TMOZ    s:1673

      408     1672    1      THEN B$JIT.REMLO = B$JIT.REMLO - JS_REMLO(4);
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:76   

   1672  0 000047   100361 236100                    LDQ     241,,PR1
         0 000050   000004 136000 xsym               SBLQ    JS_REMLO+4
         0 000051   100361 756100                    STQ     241,,PR1
         0 000052   000054 710000 0                  TRA     s:1675

      409     1673    1      ELSE B$JIT.REMLO = 0;

   1673  0 000053   100361 450100                    STZ     241,,PR1

      410     1674
      411     1675    1      IF B$JIT.REMDO - JS_REMDO(I) > 0

   1675  0 000054   100362 236100                    LDQ     242,,PR1
         0 000055   000000 136010 xsym               SBLQ    JS_REMDO,X0
         0 000056   000063 604400 0                  TMOZ    s:1677

      412     1676    1      THEN B$JIT.REMDO = B$JIT.REMDO - JS_REMDO(I);

   1676  0 000057   100362 236100                    LDQ     242,,PR1
         0 000060   000000 136010 xsym               SBLQ    JS_REMDO,X0
         0 000061   100362 756100                    STQ     242,,PR1
         0 000062   000064 710000 0                  TRA     s:1679

      413     1677    1      ELSE B$JIT.REMDO =0;

   1677  0 000063   100362 450100                    STZ     242,,PR1

      414     1678
      415     1679    1      IF (B$JIT.MODE ~= %M_INT#) OR (B$JIT.XLIMFLG & %XL_TIME#)

   1679  0 000064   100000 236100                    LDQ     0,,PR1
         0 000065   740000 376003                    ANQ     -16384,DU
         0 000066   140000 116003                    CMPQ    49152,DU
         0 000067   000075 601000 0                  TNZ     s:1680
         0 000070   100316 236100                    LDQ     206,,PR1
         0 000071   000022 736000                    QLS     18
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:77   
         0 000072   777000 376003                    ANQ     -512,DU
         0 000073   001000 376003                    ANQ     512,DU
         0 000074   000076 600000 0                  TZE     s:1682

      416     1680    1      THEN B$JIT.MRT=0;

   1680  0 000075   100276 450100                    STZ     190,,PR1

      417     1681                                                /*                                    */
      418     1682    1   END JSX$UNXCON;

   1682  0 000076   000000 702200 xent               TSX2  ! X66_ARET
      419     1683        %EOD;

PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:78   
--  Include file information  --

   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   UE_CP6.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   JS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSX$UNXCON.
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:79   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN        r     1 I

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d STRC(432)   r     1 B_MPT
     0-0-0/w SBIN        r     1 JS_PRDPRM(0:3)
     0-0-0/w SBIN        r     1 JS_REMCPO(0:3)
     0-0-0/w SBIN        r     1 JS_REMDO(0:3)
     0-0-0/w SBIN        r     1 JS_REMLO(0:3)
     0-0-0/w SBIN        r     1 JS_TMDPRM(0:3)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(2304)  r     1 B$SS


   Procedure JSX$UNXCON requires 63 words for executable code.
   Procedure JSX$UNXCON requires 4 words of local(AUTO) storage.
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:81   
          MINI XREF LISTING

B$JIT.ERR.MID
       585**DCL       585--REDEF
B$JIT.MAXTMPDP
       675**DCL      1659>>IF       1660<<ASSIGN   1660>>ASSIGN   1661<<ASSIGN
B$JIT.MODE
       579**DCL      1679>>IF
B$JIT.MRT
       680**DCL      1680<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
       777**DCL       777--REDEF     778--REDEF
B$JIT.PNR
       681**DCL       681--REDEF
B$JIT.PRDPRM
       675**DCL      1663>>IF       1664<<ASSIGN   1664>>ASSIGN   1665<<ASSIGN
B$JIT.REMCPO
       779**DCL      1667>>IF       1668<<ASSIGN   1668>>ASSIGN   1669<<ASSIGN
B$JIT.REMDO
       779**DCL      1675>>IF       1676<<ASSIGN   1676>>ASSIGN   1677<<ASSIGN
B$JIT.REMLO
       779**DCL      1671>>IF       1672<<ASSIGN   1672>>ASSIGN   1673<<ASSIGN
B$JIT.TSLINE
       775**DCL       776--REDEF
B$JIT.XLIMFLG
       737**DCL      1679>>IF
B$JIT$
        16**DCL       579--IMP-PTR  1659>>IF       1660>>ASSIGN   1660>>ASSIGN   1661>>ASSIGN   1663>>IF
      1664>>ASSIGN   1664>>ASSIGN   1665>>ASSIGN   1667>>IF       1668>>ASSIGN   1668>>ASSIGN   1669>>ASSIGN
      1671>>IF       1672>>ASSIGN   1672>>ASSIGN   1673>>ASSIGN   1675>>IF       1676>>ASSIGN   1676>>ASSIGN
      1677>>ASSIGN   1679>>IF       1679>>IF       1680>>ASSIGN
B$SS.ISR.WSR
      1530**DCL      1658>>ASSIGN
B$SS.RVA
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:82   
      1525**DCL      1526--REDEF
B_MPT.AS
       206**DCL       209--REDEF
B_MPT.ASDESC
       238**DCL       242--REDEF
B_MPT.ECCB
       221**DCL       224--REDEF
B_MPT.ECCBDESC
       256**DCL       260--REDEF
B_MPT.LS
       201**DCL       204--REDEF
B_MPT.LSDESC
       232**DCL       236--REDEF
B_MPT.PS
       211**DCL       214--REDEF
B_MPT.PSDESC
       244**DCL       248--REDEF
B_MPT.SS
       196**DCL       199--REDEF
B_MPT.SS$
       199**DCL      1658>>ASSIGN
B_MPT.SSDESC
       226**DCL       230--REDEF
B_MPT.TCB
       216**DCL       219--REDEF
B_MPT.TCBDESC
       250**DCL       254--REDEF
I
        14**DCL      1658<<ASSIGN   1659>>IF       1660>>ASSIGN   1663>>IF       1664>>ASSIGN   1667>>IF
      1668>>ASSIGN   1671>>IF       1675>>IF       1676>>ASSIGN
JS_PRDPRM
        50**DCL      1663>>IF       1664>>ASSIGN
JS_REMCPO
        50**DCL      1667>>IF       1668>>ASSIGN
JS_REMDO
        51**DCL      1675>>IF       1676>>ASSIGN
PL6.E3A0      #003=JSX$UNXCON File=JSX$XCON.:E05TSI                              TUE 07/29/97 23:52 Page:83   
JS_REMLO
        50**DCL      1671>>IF       1672>>ASSIGN
JS_TMDPRM
        50**DCL      1659>>IF       1660>>ASSIGN

PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:84   
      420        1        /*T***********************************************************/
      421        2        /*T*                                                         */
      422        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      423        4        /*T*                                                         */
      424        5        /*T***********************************************************/
      425        6
      426        7
      427        8        JSX$RUNXCON: PROC(SSP_WSR);
      428        9    1   DCL SSP_WSR SBIN;
      429       10        /*
      430       11        */
      431       12        /* LOCAL AUTO */
      432       13    1   DCL AUTOPT UBIN(36);
      433       14    1   DCL WSR SBIN;
      434       15
      435       16
      436       17
      437       18        /* EXTERNAL PROCEDURES */
      438       19
      439       20    1   DCL JSS$RUNDSPC ENTRY;
      440       21    1   DCL JSS$XCON_SS ENTRY(2);
      441       22    1   DCL JSX$XCONSEE ENTRY;
      442       23    1   DCL JSA$RUNDSPC ENTRY(2);
      443       24    1   DCL JSU$FDSEG ENTRY(1);
      444       25    1   DCL SSV$DORUND ENTRY(1);
      445       26    1   DCL UDN$MAGICLS ENTRY;
      446       27
      447       28        /* EXTERNAL DATA */
      448       29
      449       30    1   DCL B$LS$ PTR SYMREF READONLY;
      450       31    1   DCL B$JIT$ PTR SYMREF READONLY;
      451       32        %INCLUDE B_MAGIC_C;
      452      150        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      453      243
      454      244        /* BASED STRUCTURES */
      455      245
      456      246        %INCLUDE B$SS;
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:85   
      457      425
      458      426        %INCLUDE B$JIT_C;
      459      740        %B$JIT0;
      460      829        %U$JIT1;
      461      903        %M$JIT2X;
      462      906        %F$JIT3X;
      463      909        %S$JIT4X;
      464      912        %J$JIT5;
      465     1000        %A$JIT6X;
      466     1003
      467     1004        %INCLUDE B_MACROS_C;
      468     1115        %T01DESCR (NAME=B$$DESCR);
      469     1123        %INCLUDE UE_CP6;
      470     1814        %B$ECCB;
      471     1822        %INCLUDE B_MLSMAC_C;
      472     2764        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
      473     3579        %INCLUDE B_ULSMAC_C;
      474     4688        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
      475     4887        %INCLUDE B$USER;
      476     5103        %B$USERREFS;
      477     5107
      478     5108        /* STRING SUBSTITUTIONS */
      479     5109
      480     5110        %SUB B$SS=B_MPT.SS$->B$SS;
      481     5111        %SUB B$JIT = B$JIT$->B$JIT;
      482     5112        %INCLUDE B_STRINGS_C;
      483     5241        %INCLUDE B_SEGIDS_C;
      484     5780
      485     5781        %EJECT;
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:86   
      486     5782    1      IF (B$JIT.JUNK & %JJ_DLIB#)
      487     5783    2      THEN DO;
      488     5784    2           WSR=SSP_WSR;
      489     5785    2           GOTO DOING_DLIB;
      490     5786    2           END;
      491     5787
      492     5788    1      B$JIT.RNST = (B$JIT.FRS & %RS_XCON#);
      493     5789    1      B$JIT.JUNK = (B$JIT.JUNK | %JJ_RUNXCON#);
      494     5790    1      IF (B$JIT.RNST & %RS_CL23#) > B$JIT.USRRNST
      495     5791    2      THEN DO;
      496     5792    2           B$JIT.USRRNST = B$JIT.RNST;
      497     5793    2           B$JIT.USRERR = B$JIT.ERR;
      498     5794    2           B$JIT.USRDCB=B$JIT.DCBNO;
      499     5795    2           END;
      500     5796
      501     5797    1      WSR=%ASLWSR;                         /*ASL GETS FIRST SHOT*/
      502     5798
      503     5799    1   DOING_DLIB: ;
      504     5800    2      DO WHILE (WSR > 3);
      505     5801
      506     5802    3           DO CASE(WSR);
      507     5803    3            CASE(%ASLWSR);
      508     5804    3              IF S$CU$->B$U.ASL=0 THEN GOTO NO_SSP;
      509     5805    3              B_MPT.LSDESC$->B$$DESCR=B$LS$->B$MLS.ASLLS;
      510     5806    3            CASE(%DBWSR);
      511     5807    3              IF S$CU$->B$U.DB=0 THEN GOTO NO_SSP;
      512     5808    3              B_MPT.LSDESC$->B$$DESCR=B$LS$->B$MLS.DBLS;
      513     5809    3            CASE(%CPWSR);
      514     5810    3              IF S$CU$->B$U.ACP=0 THEN GOTO NO_SSP;
      515     5811    3              B_MPT.LSDESC$->B$$DESCR=B$LS$->B$MLS.CPLS;
      516     5812    3              END;
      517     5813    2           CALL UDN$MAGICLS;
      518     5814
      519     5815    2           AUTOPT=B$SS.AUTOPT;
      520     5816    2           B_MPT.SSDESC$->B$$DESCR.BOUND = B_MPT.SSDESC$->B$$DESCR.BOUND -256;
              5816                    /*PROTECT LAST USER FRAME */
      521     5817    2           B_MPT.SSDESC$->B$$DESCR.BASE = B_MPT.SSDESC$->B$$DESCR.BASE + 256;
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:87   
      522     5818
      523     5819
      524     5820    2           CALL JSS$XCON_SS(AUTOPT,WSR);   /*BUILD 2 SS FRAMES                   */
      525     5821    2           CALL JSX$XCONSEE;          /* WONT RETURN IF XCON ROUTINE ENTERED     */
      526     5822    2   NO_XCON: ;
      527     5823    2           CALL SSV$DORUND(WSR);
      528     5824    2           IF (WSR=%CPWSR) THEN GOTO NO_SSP;
      529     5825    2           IF (WSR=%ASLWSR) THEN GOTO RUND;
      530     5826    2           IF ((B$JIT.SVLDTF & %SVL_ECCB#) AND (WSR=%DBWSR) ) OR
      531     5827    2             ((B$JIT.SVLDTF & %SVL_SAVE#) AND (WSR=%ASLWSR) )
      532     5828    2           THEN GOTO NO_SSP;
      533     5829    2           IF (B$JIT.JUNK & %JJ_RTNXIT#)
      534     5830    3           THEN DO;
      535     5831    3                CALL JSU$FDSEG(WSR);
      536     5832    3                GOTO NO_SSP;
      537     5833    3                END;                       /*DO IF JJ_RTNXIT                     */
      538     5834    2   RUND:   ;
      539     5835    2           CALL JSA$RUNDSPC(WSR,1);
      540     5836
      541     5837    2   NO_SSP: ;
      542     5838    2           CALL JSS$RUNDSPC;               /* BACKSS-REBUILD USER MAGIC*/
      543     5839    2           IF (B$JIT.JUNK & %JJ_DLIB#)
      544     5840    3           THEN DO;
      545     5841    3                B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_DLIB#);
      546     5842    3                RETURN;
      547     5843    3                END;
      548     5844    2           WSR = WSR-1;
      549     5845    2           END;                            /* DO WHILE WSR > 3                   */
      550     5846
      551     5847    1      B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_RUNXCON#);
      552     5848    1      B$JIT.RNST=(B$JIT.FRS   & %RS_CL3#);
      553     5849    1      RETURN;
      554     5850    1   END JSX$RUNXCON;

PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:88   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSX$RUNXCON.

   Procedure JSX$RUNXCON requires 170 words for executable code.
   Procedure JSX$RUNXCON requires 8 words of local(AUTO) storage.

    No errors detected in file JSX$XCON.:E05TSI    .

PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:89   

 Object Unit name= JSX$RUNXCON                                File name= JSX$XCON.:E05TOU
 UTS= JUL 29 '97 23:52:48.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   170    252  JSX$RUNXCON
    1  RoData even  none     1      1  JSX$RUNXCON

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  JSX$RUNXCON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 UDN$MAGICLS
         yes           Std       2 JSS$XCON_SS
         yes           Std       1 JSU$FDSEG
         yes           Std       0 JSS$RUNDSPC
         yes           Std       2 JSA$RUNDSPC
         yes           Std       0 JSX$XCONSEE
         yes           Std       1 SSV$DORUND
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:90   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$LS$                            r    B$JIT$                                B_MPT
     S$CU$                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:91   


      420        1        /*T***********************************************************/
      421        2        /*T*                                                         */
      422        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      423        4        /*T*                                                         */
      424        5        /*T***********************************************************/
      425        6
      426        7
      427        8        JSX$RUNXCON: PROC(SSP_WSR);

      8  0 000000   000000 700200 xent  JSX$RUNXCON  TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

      428        9    1   DCL SSP_WSR SBIN;
      429       10        /*
      430       11        */
      431       12        /* LOCAL AUTO */
      432       13    1   DCL AUTOPT UBIN(36);
      433       14    1   DCL WSR SBIN;
      434       15
      435       16
      436       17
      437       18        /* EXTERNAL PROCEDURES */
      438       19
      439       20    1   DCL JSS$RUNDSPC ENTRY;
      440       21    1   DCL JSS$XCON_SS ENTRY(2);
      441       22    1   DCL JSX$XCONSEE ENTRY;
      442       23    1   DCL JSA$RUNDSPC ENTRY(2);
      443       24    1   DCL JSU$FDSEG ENTRY(1);
      444       25    1   DCL SSV$DORUND ENTRY(1);
      445       26    1   DCL UDN$MAGICLS ENTRY;
      446       27
      447       28        /* EXTERNAL DATA */
      448       29
      449       30    1   DCL B$LS$ PTR SYMREF READONLY;
      450       31    1   DCL B$JIT$ PTR SYMREF READONLY;
      451       32        %INCLUDE B_MAGIC_C;
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:92   
      452      150        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      453      243
      454      244        /* BASED STRUCTURES */
      455      245
      456      246        %INCLUDE B$SS;
      457      425
      458      426        %INCLUDE B$JIT_C;
      459      740        %B$JIT0;
      460      829        %U$JIT1;
      461      903        %M$JIT2X;
      462      906        %F$JIT3X;
      463      909        %S$JIT4X;
      464      912        %J$JIT5;
      465     1000        %A$JIT6X;
      466     1003
      467     1004        %INCLUDE B_MACROS_C;
      468     1115        %T01DESCR (NAME=B$$DESCR);
      469     1123        %INCLUDE UE_CP6;
      470     1814        %B$ECCB;
      471     1822        %INCLUDE B_MLSMAC_C;
      472     2764        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
      473     3579        %INCLUDE B_ULSMAC_C;
      474     4688        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
      475     4887        %INCLUDE B$USER;
      476     5103        %B$USERREFS;
      477     5107
      478     5108        /* STRING SUBSTITUTIONS */
      479     5109
      480     5110        %SUB B$SS=B_MPT.SS$->B$SS;
      481     5111        %SUB B$JIT = B$JIT$->B$JIT;
      482     5112        %INCLUDE B_STRINGS_C;
      483     5241        %INCLUDE B_SEGIDS_C;
      484     5780
      485     5781        %EJECT;
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:93   
      486     5782    1      IF (B$JIT.JUNK & %JJ_DLIB#)

   5782  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000315 220100                    LDX0    205,,PR0
         0 000004   004000 360003                    ANX0    2048,DU
         0 000005   000012 600000 0                  TZE     s:5788

      487     5783    2      THEN DO;

      488     5784    2           WSR=SSP_WSR;

   5784  0 000006   200003 471500                    LDP1    @SSP_WSR,,AUTO
         0 000007   100000 235100                    LDA     0,,PR1
         0 000010   200005 755100                    STA     WSR,,AUTO

      489     5785    2           GOTO DOING_DLIB;

   5785  0 000011   000043 710000 0                  TRA     DOING_DLIB

      490     5786    2           END;
      491     5787
      492     5788    1      B$JIT.RNST = (B$JIT.FRS & %RS_XCON#);

   5788  0 000012   000314 236100                    LDQ     204,,PR0
         0 000013   000011 736000                    QLS     9
         0 000014   777000 376003                    ANQ     -512,DU
         0 000015   760000 376003                    ANQ     -8192,DU
         0 000016   000314 552140                    STBQ    204,'40'O,PR0

      493     5789    1      B$JIT.JUNK = (B$JIT.JUNK | %JJ_RUNXCON#);

   5789  0 000017   000315 220100                    LDX0    205,,PR0
         0 000020   002000 260003                    ORX0    1024,DU
         0 000021   000315 740100                    STX0    205,,PR0

      494     5790    1      IF (B$JIT.RNST & %RS_CL23#) > B$JIT.USRRNST

PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:94   
   5790  0 000022   000314 236100                    LDQ     204,,PR0
         0 000023   777000 376003                    ANQ     -512,DU
         0 000024   740000 376003                    ANQ     -16384,DU
         0 000025   200006 756100                    STQ     WSR+1,,AUTO
         0 000026   000100 106500                    CMPC    fill='000'O
         0 000027   000145 400001                    ADSC9   101,,PR0                 cn=2,n=1
         0 000030   200006 000004                    ADSC9   WSR+1,,AUTO              cn=0,n=4
         0 000031   000041 603000 0                  TRC     s:5797

      495     5791    2      THEN DO;

      496     5792    2           B$JIT.USRRNST = B$JIT.RNST;

   5792  0 000032   000314 236100                    LDQ     204,,PR0
         0 000033   000022 772000                    QRL     18
         0 000034   000145 552110                    STBQ    101,'10'O,PR0

      497     5793    2           B$JIT.USRERR = B$JIT.ERR;

   5793  0 000035   000012 236100                    LDQ     10,,PR0
         0 000036   000144 756100                    STQ     100,,PR0

      498     5794    2           B$JIT.USRDCB=B$JIT.DCBNO;

   5794  0 000037   000022 236100                    LDQ     18,,PR0
         0 000040   000153 552104                    STBQ    107,'04'O,PR0

      499     5795    2           END;

      500     5796
      501     5797    1      WSR=%ASLWSR;                         /*ASL GETS FIRST SHOT*/

   5797  0 000041   000006 235007                    LDA     6,DL
         0 000042   200005 755100                    STA     WSR,,AUTO

   5797  0 000043                       DOING_DLIB   null
      502     5798
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:95   
      503     5799    1   DOING_DLIB: ;
      504     5800    2      DO WHILE (WSR > 3);

   5800  0 000043   000003 115007                    CMPA    3,DL
         0 000044   000241 604400 0                  TMOZ    s:5847

      505     5801
      506     5802    3           DO CASE(WSR);

   5802  0 000045   200005 235100                    LDA     WSR,,AUTO
         0 000046   000004 135007                    SBLA    4,DL
         0 000047   000003 115007                    CMPA    3,DL
         0 000050   000052 602005 0                  TNC     s:5802+5,AL
         0 000051   000112 710000 0                  TRA     s:5813
         0 000052   000101 710000 0                  TRA     s:5810
         0 000053   000067 710000 0                  TRA     s:5807
         0 000054   000055 710000 0                  TRA     s:5804

      507     5803    3            CASE(%ASLWSR);

      508     5804    3              IF S$CU$->B$U.ASL=0 THEN GOTO NO_SSP;

   5804  0 000055   000000 470400 xsym               LDP0    S$CU$
         0 000056   000006 236100                    LDQ     6,,PR0
         0 000057   000777 316007                    CANQ    511,DL
         0 000060   000221 600000 0                  TZE     NO_SSP

      509     5805    3              B_MPT.LSDESC$->B$$DESCR=B$LS$->B$MLS.ASLLS;

   5805  0 000061   000007 471400 xsym               LDP1    B_MPT+7
         0 000062   000000 473400 xsym               LDP3    B$LS$
         0 000063   300066 237100                    LDAQ    54,,PR3
         0 000064   100000 755100                    STA     0,,PR1
         0 000065   100001 756100                    STQ     1,,PR1
         0 000066   000112 710000 0                  TRA     s:5813

      510     5806    3            CASE(%DBWSR);
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:96   

      511     5807    3              IF S$CU$->B$U.DB=0 THEN GOTO NO_SSP;

   5807  0 000067   000000 470400 xsym               LDP0    S$CU$
         0 000070   000006 236100                    LDQ     6,,PR0
         0 000071   777000 316007                    CANQ    -512,DL
         0 000072   000221 600000 0                  TZE     NO_SSP

      512     5808    3              B_MPT.LSDESC$->B$$DESCR=B$LS$->B$MLS.DBLS;

   5808  0 000073   000007 471400 xsym               LDP1    B_MPT+7
         0 000074   000000 473400 xsym               LDP3    B$LS$
         0 000075   300064 237100                    LDAQ    52,,PR3
         0 000076   100000 755100                    STA     0,,PR1
         0 000077   100001 756100                    STQ     1,,PR1
         0 000100   000112 710000 0                  TRA     s:5813

      513     5809    3            CASE(%CPWSR);

      514     5810    3              IF S$CU$->B$U.ACP=0 THEN GOTO NO_SSP;

   5810  0 000101   000000 470400 xsym               LDP0    S$CU$
         0 000102   000006 236100                    LDQ     6,,PR0
         0 000103   000777 316003                    CANQ    511,DU
         0 000104   000221 600000 0                  TZE     NO_SSP

      515     5811    3              B_MPT.LSDESC$->B$$DESCR=B$LS$->B$MLS.CPLS;

   5811  0 000105   000007 471400 xsym               LDP1    B_MPT+7
         0 000106   000000 473400 xsym               LDP3    B$LS$
         0 000107   300070 237100                    LDAQ    56,,PR3
         0 000110   100000 755100                    STA     0,,PR1
         0 000111   100001 756100                    STQ     1,,PR1

      516     5812    3              END;

      517     5813    2           CALL UDN$MAGICLS;
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:97   

   5813  0 000112   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000113   000000 701000 xent               TSX1    UDN$MAGICLS
         0 000114   000000 011000                    NOP     0

      518     5814
      519     5815    2           AUTOPT=B$SS.AUTOPT;

   5815  0 000115   000000 470400 xsym               LDP0    B_MPT
         0 000116   000001 236100                    LDQ     1,,PR0
         0 000117   777777 376007                    ANQ     -1,DL
         0 000120   200004 756100                    STQ     AUTOPT,,AUTO

      520     5816    2           B_MPT.SSDESC$->B$$DESCR.BOUND = B_MPT.SSDESC$->B$$DESCR.BOUND -256;
              5816                    /*PROTECT LAST USER FRAME */

   5816  0 000121   000006 471400 xsym               LDP1    B_MPT+6
         0 000122   100000 236100                    LDQ     0,,PR1
         0 000123   000020 772000                    QRL     16
         0 000124   000400 136007                    SBLQ    256,DL
         0 000125   000020 736000                    QLS     16
         0 000126   100000 676100                    ERQ     0,,PR1
         0 000127   000034 376000 xsym               ANQ     B_VECTNIL+28
         0 000130   100000 656100                    ERSQ    0,,PR1

      521     5817    2           B_MPT.SSDESC$->B$$DESCR.BASE = B_MPT.SSDESC$->B$$DESCR.BASE + 256;

   5817  0 000131   000006 470400 xsym               LDP0    B_MPT+6
         0 000132   000400 236007                    LDQ     256,DL
         0 000133   000001 056100                    ASQ     1,,PR0

      522     5818
      523     5819
      524     5820    2           CALL JSS$XCON_SS(AUTOPT,WSR);   /*BUILD 2 SS FRAMES                   */

   5820  0 000134   200005 630500                    EPPR0   WSR,,AUTO
         0 000135   200007 450500                    STP0    WSR+2,,AUTO
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:98   
         0 000136   200004 631500                    EPPR1   AUTOPT,,AUTO
         0 000137   200006 451500                    STP1    WSR+1,,AUTO
         0 000140   200006 630500                    EPPR0   WSR+1,,AUTO
         0 000141   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000142   000000 701000 xent               TSX1    JSS$XCON_SS
         0 000143   000000 011000                    NOP     0

      525     5821    2           CALL JSX$XCONSEE;          /* WONT RETURN IF XCON ROUTINE ENTERED     */

   5821  0 000144   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000145   000000 701000 xent               TSX1    JSX$XCONSEE
         0 000146   000000 011000                    NOP     0

   5817  0 000147                       NO_XCON      null
      526     5822    2   NO_XCON: ;
      527     5823    2           CALL SSV$DORUND(WSR);

   5823  0 000147   200005 630500                    EPPR0   WSR,,AUTO
         0 000150   200006 450500                    STP0    WSR+1,,AUTO
         0 000151   200006 630500                    EPPR0   WSR+1,,AUTO
         0 000152   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000153   000000 701000 xent               TSX1    SSV$DORUND
         0 000154   000000 011000                    NOP     0

      528     5824    2           IF (WSR=%CPWSR) THEN GOTO NO_SSP;

   5824  0 000155   200005 235100                    LDA     WSR,,AUTO
         0 000156   000004 115007                    CMPA    4,DL
         0 000157   000221 600000 0                  TZE     NO_SSP

      529     5825    2           IF (WSR=%ASLWSR) THEN GOTO RUND;

   5825  0 000160   000006 115007                    CMPA    6,DL
         0 000161   000211 600000 0                  TZE     RUND

      530     5826    2           IF ((B$JIT.SVLDTF & %SVL_ECCB#) AND (WSR=%DBWSR) ) OR

PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:99   
   5826  0 000162   000000 470400 xsym               LDP0    B$JIT$
         0 000163   000316 236100                    LDQ     206,,PR0
         0 000164   000033 736000                    QLS     27
         0 000165   016000 376003                    ANQ     7168,DU
         0 000166   000171 600000 0                  TZE     s:5826+7
         0 000167   000005 115007                    CMPA    5,DL
         0 000170   000221 600000 0                  TZE     NO_SSP
         0 000171   000316 236100                    LDQ     206,,PR0
         0 000172   000033 736000                    QLS     27
         0 000173   006000 376003                    ANQ     3072,DU
         0 000174   000177 600000 0                  TZE     s:5829
         0 000175   000006 115007                    CMPA    6,DL
         0 000176   000221 600000 0                  TZE     NO_SSP

      531     5827    2             ((B$JIT.SVLDTF & %SVL_SAVE#) AND (WSR=%ASLWSR) )
      532     5828    2           THEN GOTO NO_SSP;
      533     5829    2           IF (B$JIT.JUNK & %JJ_RTNXIT#)

   5829  0 000177   000315 220100                    LDX0    205,,PR0
         0 000200   000100 360003                    ANX0    64,DU
         0 000201   000211 600000 0                  TZE     RUND

      534     5830    3           THEN DO;

      535     5831    3                CALL JSU$FDSEG(WSR);

   5831  0 000202   200005 631500                    EPPR1   WSR,,AUTO
         0 000203   200006 451500                    STP1    WSR+1,,AUTO
         0 000204   200006 630500                    EPPR0   WSR+1,,AUTO
         0 000205   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000206   000000 701000 xent               TSX1    JSU$FDSEG
         0 000207   000000 011000                    NOP     0

      536     5832    3                GOTO NO_SSP;

   5832  0 000210   000221 710000 0                  TRA     NO_SSP

PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:100  
   5829  0 000211                       RUND         null
      537     5833    3                END;                       /*DO IF JJ_RTNXIT                     */
      538     5834    2   RUND:   ;
      539     5835    2           CALL JSA$RUNDSPC(WSR,1);

   5835  0 000211   000000 236000 1                  LDQ     0
         0 000212   200007 756100                    STQ     WSR+2,,AUTO
         0 000213   200005 630500                    EPPR0   WSR,,AUTO
         0 000214   200006 450500                    STP0    WSR+1,,AUTO
         0 000215   200006 630500                    EPPR0   WSR+1,,AUTO
         0 000216   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000217   000000 701000 xent               TSX1    JSA$RUNDSPC
         0 000220   000000 011000                    NOP     0

   5829  0 000221                       NO_SSP       null
      540     5836
      541     5837    2   NO_SSP: ;
      542     5838    2           CALL JSS$RUNDSPC;               /* BACKSS-REBUILD USER MAGIC*/

   5838  0 000221   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000222   000000 701000 xent               TSX1    JSS$RUNDSPC
         0 000223   000000 011000                    NOP     0

      543     5839    2           IF (B$JIT.JUNK & %JJ_DLIB#)

   5839  0 000224   000000 470400 xsym               LDP0    B$JIT$
         0 000225   000315 220100                    LDX0    205,,PR0
         0 000226   004000 360003                    ANX0    2048,DU
         0 000227   000234 600000 0                  TZE     s:5844

      544     5840    3           THEN DO;

      545     5841    3                B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_DLIB#);

   5841  0 000230   000315 220100                    LDX0    205,,PR0
         0 000231   773777 360003                    ANX0    -2049,DU
         0 000232   000315 740100                    STX0    205,,PR0
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:101  

      546     5842    3                RETURN;

   5842  0 000233   000000 702200 xent               TSX2  ! X66_ARET

      547     5843    3                END;
      548     5844    2           WSR = WSR-1;

   5844  0 000234   000001 336007                    LCQ     1,DL
         0 000235   200005 056100                    ASQ     WSR,,AUTO

      549     5845    2           END;                            /* DO WHILE WSR > 3                   */

   5845  0 000236   200005 235100                    LDA     WSR,,AUTO
         0 000237   000003 115007                    CMPA    3,DL
         0 000240   000045 605400 0                  TPNZ    s:5802

      550     5846
      551     5847    1      B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_RUNXCON#);

   5847  0 000241   000315 220100                    LDX0    205,,PR0
         0 000242   775777 360003                    ANX0    -1025,DU
         0 000243   000315 740100                    STX0    205,,PR0

      552     5848    1      B$JIT.RNST=(B$JIT.FRS   & %RS_CL3#);

   5848  0 000244   000314 236100                    LDQ     204,,PR0
         0 000245   000011 736000                    QLS     9
         0 000246   777000 376003                    ANQ     -512,DU
         0 000247   640000 376003                    ANQ     -49152,DU
         0 000250   000314 552140                    STBQ    204,'40'O,PR0

      553     5849    1      RETURN;

   5849  0 000251   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:102  
 Sect OctLoc
   1     000   000003 006000                                                    ....
      554     5850    1   END JSX$RUNXCON;

PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:103  
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSX$RUNXCON.
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:104  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SSP_WSR                   4-0-0/w UBIN        r     1 AUTOPT
    *0-0-0/w SBIN        r     1 SSP_WSR                    5-0-0/w SBIN        r     1 WSR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$LS$
     0-0-0/d STRC(432)   r     1 B_MPT                      0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$$DESCR                   0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/d STRC(10368) r     1 B$MLS                      0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/d STRC(576)   r     1 B$U


   Procedure JSX$RUNXCON requires 170 words for executable code.
   Procedure JSX$RUNXCON requires 8 words of local(AUTO) storage.

    No errors detected in file JSX$XCON.:E05TSI    .
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:105  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:106  
          MINI XREF LISTING

AUTOPT
        13**DCL      5815<<ASSIGN   5820<>CALL
B$$DESCR
      1116**DCL      5805<<ASSIGN   5808<<ASSIGN   5811<<ASSIGN
B$$DESCR.BASE
      1121**DCL      5817<<ASSIGN   5817>>ASSIGN
B$$DESCR.BOUND
      1117**DCL      5816<<ASSIGN   5816>>ASSIGN
B$DO.ECCINFO
      5038**DCL      5039--REDEF
B$JIT.CPFLAGS1.SLEAZE
       840**DCL       840--REDEF
B$JIT.DCBNO
       827**DCL      5794>>ASSIGN
B$JIT.ERR
       746**DCL      5793>>ASSIGN
B$JIT.ERR.MID
       747**DCL       747--REDEF
B$JIT.FRS
       930**DCL      5788>>ASSIGN   5848>>ASSIGN
B$JIT.JUNK
       934**DCL      5782>>IF       5789<<ASSIGN   5789>>ASSIGN   5829>>IF       5839>>IF       5841<<ASSIGN
      5841>>ASSIGN   5847<<ASSIGN   5847>>ASSIGN
B$JIT.RNST
       913**DCL      5788<<ASSIGN   5790>>IF       5792>>ASSIGN   5848<<ASSIGN
B$JIT.SVLDTF
       975**DCL      5826>>IF       5826>>IF
B$JIT.USRDCB
       895**DCL      5794<<ASSIGN
B$JIT.USRERR
       882**DCL      5793<<ASSIGN
B$JIT.USRRNST
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:107  
       882**DCL      5790>>IF       5792<<ASSIGN
B$JIT$
        31**DCL       741--IMP-PTR  5782>>IF       5788>>ASSIGN   5788>>ASSIGN   5789>>ASSIGN   5789>>ASSIGN
      5790>>IF       5790>>IF       5792>>ASSIGN   5792>>ASSIGN   5793>>ASSIGN   5793>>ASSIGN   5794>>ASSIGN
      5794>>ASSIGN   5826>>IF       5826>>IF       5829>>IF       5839>>IF       5841>>ASSIGN   5841>>ASSIGN
      5847>>ASSIGN   5847>>ASSIGN   5848>>ASSIGN   5848>>ASSIGN
B$LS$
        30**DCL      5805>>ASSIGN   5808>>ASSIGN   5811>>ASSIGN
B$MLS.ASLLS
      2974**DCL      5805>>ASSIGN
B$MLS.CPLS
      2980**DCL      5811>>ASSIGN
B$MLS.DBLS
      2968**DCL      5808>>ASSIGN
B$SS.AUTOPT
       261**DCL      5815>>ASSIGN
B$SS.RVA
       298**DCL       299--REDEF
B$U.ACP
      4994**DCL      5810>>IF
B$U.ASL
      4996**DCL      5804>>IF
B$U.DB
      4995**DCL      5807>>IF
B$U.MISC
      5017**DCL      5018--REDEF
B$USER.MISC
      5093**DCL      5094--REDEF
B_MPT.AS
       186**DCL       189--REDEF
B_MPT.ASDESC
       218**DCL       222--REDEF
B_MPT.ECCB
       201**DCL       204--REDEF
B_MPT.ECCBDESC
       236**DCL       240--REDEF
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:108  
B_MPT.LS
       181**DCL       184--REDEF
B_MPT.LSDESC
       212**DCL       216--REDEF
B_MPT.LSDESC$
       216**DCL      5805>>ASSIGN   5808>>ASSIGN   5811>>ASSIGN
B_MPT.PS
       191**DCL       194--REDEF
B_MPT.PSDESC
       224**DCL       228--REDEF
B_MPT.SS
       176**DCL       179--REDEF
B_MPT.SS$
       179**DCL      5815>>ASSIGN
B_MPT.SSDESC
       206**DCL       210--REDEF
B_MPT.SSDESC$
       210**DCL      5816>>ASSIGN   5816>>ASSIGN   5817>>ASSIGN   5817>>ASSIGN
B_MPT.TCB
       196**DCL       199--REDEF
B_MPT.TCBDESC
       230**DCL       234--REDEF
DOING_DLIB
      5797**LABEL    5785--GOTO
JSA$RUNDSPC
        23**DCL-ENT  5835--CALL
JSS$RUNDSPC
        20**DCL-ENT  5838--CALL
JSS$XCON_SS
        21**DCL-ENT  5820--CALL
JSU$FDSEG
        24**DCL-ENT  5831--CALL
JSX$XCONSEE
        22**DCL-ENT  5821--CALL
NO_SSP
      5829**LABEL    5804--GOTO     5807--GOTO     5810--GOTO     5824--GOTO     5828--GOTO     5832--GOTO
PL6.E3A0      #004=JSX$RUNXCON File=JSX$XCON.:E05TSI                             TUE 07/29/97 23:52 Page:109  
RUND
      5829**LABEL    5825--GOTO
S$CU$
      5104**DCL      5804>>IF       5807>>IF       5810>>IF
SSP_WSR
         9**DCL         8--PROC     5784>>ASSIGN
SSV$DORUND
        25**DCL-ENT  5823--CALL
UDN$MAGICLS
        26**DCL-ENT  5813--CALL
WSR
        14**DCL      5784<<ASSIGN   5797<<ASSIGN   5800>>DOWHILE  5802>>DOCASE   5820<>CALL     5823<>CALL
      5824>>IF       5825>>IF       5826>>IF       5826>>IF       5831<>CALL     5835<>CALL     5844<<ASSIGN
      5844>>ASSIGN
