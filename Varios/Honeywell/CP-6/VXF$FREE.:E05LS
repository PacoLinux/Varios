VERSION E05

PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:1    
        1        1        /*M* VXF$FREE - frees memory.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4          */
        8        8        /*M*  VXF$FREE Frees dynamic data segments         */
        9        9        /*P*  NAME: VXF$FREE
       10       10              PURPOSE: Frees dynamic data segments
       11       11              DESCRIPTION: Frees dynamic data segments     */
       12       12        /*D*  NAME: VXF$FREE
       13       13              CALL: CALL VXF$FREE( TYPE, SIZE, RELEASE );
       14       14              INPUT: TYPE     - Data segment number.
       15       15                     SIZE     - Request size in words.
       16       16                   RELEASE  - Switch to release space back to the monitor.(=0=>no, <>0=>yes)
       17       17              DESCRIPTION: Frees dynamic data segments.
       18       18                           The returned space is assumed to be last allocated
       19       19                           first freed ( stack allocation/deallocation ).
       20       20                           It is reflected in the available space list and
       21       21                           the free space list is checked to determine if any
       22       22                           pages may be freed. Any available space in excess
       23       23                           of 1024 words is returned in page size blocks.
       24       24                                                                        */
       25       25        VXF$FREE:
       26       26              PROC(         TYPE, SIZE, RELEASE );
       27       27        %INCLUDE VX_INC_C;
       28    10743        %E;

             10751    1   /*******************************************************************************
             10752    1   *                                                                              *
             10753    1   *                          ENTRY                                                 *
             10754    1   *                                                                              *
             10755    1   *******************************************************************************/

       29    10759    1   DCL VXE$ERROR       ENTRY(4);
       30    10760    1   DCL VXE$ERR         ENTRY(3);
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:2    
       31    10761        %P;

             10769    1   /*******************************************************************************
             10770    1   *                                                                              *
             10771    1   *                          PARAMETERS                                              *
             10772    1   *                                                                              *
             10773    1   *******************************************************************************/

       32    10777    1   DCL TYPE            UBIN(36);   /* ALIAS FOR WHICH SEGMENT TO ALLOCATE FROM */
       33    10778    1   DCL SIZE            UBIN(36);           /* SIZE IN WORDS OF THE REQUEST */
       34    10779    1   DCL RELEASE         UBIN(36);           /* SWITCH TO RETURN ANY PAGES BACK */
       35    10780        %S;

             10788    1   /*******************************************************************************
             10789    1   *                                                                              *
             10790    1   *                          SBIN                                                 *
             10791    1   *                                                                              *
             10792    1   *******************************************************************************/

       36    10796    1   DCL REL             SBIN WORD ALIGNED   AUTO;
       37    10797    1   DCL DIFF            SBIN WORD ALIGNED   AUTO;
       38    10798        %U;

             10806    1   /*******************************************************************************
             10807    1   *                                                                              *
             10808    1   *                          UBIN                                                 *
             10809    1   *                                                                              *
             10810    1   *******************************************************************************/

       39    10814    1   DCL GET             UBIN(36)  ALIGNED   AUTO;
       40    10815        %LIST;
       41    10816        %FPT_FDS( FPTN=FPT_FDS, RESULTS=VX_M_VECTOR);
             10817        %LSET LISTDIR='0'B;
             10827    1   DCL 1 FPT_FDS STATIC,2 V_ BIT(72)INIT(VECTOR(FPT_FDS.V))/**/,2 RESULTS_ BIT(72)INIT(
             10827            VECTOR(VX_M_VECTOR))/**/,2 V
             10828    1   DALIGNED,3 AUTOSEG# BIT(1)INIT('0'B)/**/ ,3 COMMON# BIT(1)INIT('0'B)/**/ ,3 * BIT(16
             10828            )INIT('0'B
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:3    
             10829    1   )/**/,3 SEGSIZE# UBIN HALF UNAL INIT(0)/**/;
       42    10831        %FPT_FDP( FPTN=FPT_FDP, RESULTS=VX_M_VECTOR_DP);
             10832        %LSET LISTDIR='0'B;
             10842    1   DCL 1 FPT_FDP STATIC,2 V_ BIT(72)INIT(VECTOR(FPT_FDP.V))/**/,2 RESULTS_ BIT(72)INIT(
             10842            VECTOR(VX_M_VECTOR_DP))/**/,2 V
             10843    1   DALIGNED,3 PAGES# UBIN INIT(0)/**/;
       43    10845        %EJECT;
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:4    
       44    10846    2         DO CASE( TYPE );
       45    10847    2           CASE( 0, 1, 2, 3, 4, 5, 6, 7 );
       46    10848    2             VX_M_FREE(TYPE) = VX_M_FREE(TYPE) - SIZE;
       47    10849    3             IF RELEASE ~= 0 THEN DO;
       48    10850    3                 REL  = VX_M_ALL(TYPE) - VX_M_FREE(TYPE);
       49    10851    3                 DIFF = ( REL/@PAGE_SIZE ) * @PAGE_SIZE;
       50    10852    4                 IF DIFF >= @PAGE_SIZE THEN DO;
       51    10853    4                     VX_M_ALL(TYPE) = VX_M_ALL(TYPE) - DIFF;
       52    10854    4                     FPT_FDS.V.SEGSIZE# = DIFF;
       53    10855    4                     VX_M_VECTOR.F.SEGID = VX_M_SEGID(TYPE);
       54    10856    4                     IF TYPE = 1 THEN FPT_FDS.V.COMMON# = @TRUE_B;
       55    10857    4                     ELSE FPT_FDS.V.COMMON# = @FALSE_B;
       56    10858    4                     CALL M$FDS( FPT_FDS)  ALTRET(ERR_SEGS);
       57    10859    4                    END;
       58    10860    4                 IF VX_M_ALL(TYPE) <=0 THEN DO; /* CHECK IF ALL GONE */
       59    10861    4                     VX_M_ALL(TYPE) = 0;   /* RESET TO INITIAL CONDITIONS  */
       60    10862    4                     VX_M_FREE(TYPE) = 0;  /* DITTO */
       61    10863    4                     VX_M_BASE_PTR(TYPE) = ADDR(NIL);
       62    10864    4                     VX_M_SEGID(TYPE) = 0;
       63    10865    4                    END;
       64    10866    3                END;
       65    10867    2           CASE(8);
       66    10868    2             VX_M_FREE(8)    = VX_M_FREE(8)    - SIZE;
       67    10869    3             IF RELEASE ~= 0 THEN DO;
       68    10870    3                 DIFF = VX_M_ALL(8) - VX_M_FREE(8);
       69    10871    4                 IF DIFF >= @PAGE_SIZE THEN DO;
       70    10872    4                     REL = DIFF/ @PAGE_SIZE;
       71    10873    4                     FPT_FDP.V.PAGES# = REL;
       72    10874    4                     CALL M$FDP( FPT_FDP)  ALTRET(LAST_RELEASED);
       73    10875    4                     VX_M_ALL(8) = VX_M_ALL(8) - REL * 1024;
       74    10876    4                    END;
       75    10877    3                 RETURN;
       76    10878    3   LAST_RELEASED: ;
       77    10879    3                 VX_M_ALL(8) = 0;
       78    10880    3                 VX_M_FREE(8)    = 0;
       79    10881    3                 VX_M_BASE_PTR(8) = ADDR(NIL);
       80    10882    3                END;
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:5    
       81    10883    2           END;
       82    10884    1         RETURN;
       83    10885    1   ERR_SEGS: ;
       84    10886    1   END VXF$FREE;

PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:6    
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXF$FREE.

   Procedure VXF$FREE requires 96 words for executable code.
   Procedure VXF$FREE requires 10 words of local(AUTO) storage.

    No errors detected in file VXF$FREE.:E05TSI    .

PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:7    

 Object Unit name= VXF$FREE                                   File name= VXF$FREE.:E05TOU
 UTS= JUL 30 '97 08:08:48.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Data  even  none    12     14  VXF$FREE
    3   Proc  even  none    96    140  VXF$FREE
    4  RoData even  none     1      1  VXF$FREE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        3  VXF$FREE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_M_VECTOR                           VX_M_VECTOR_DP
     VX_OU_HEAD                            VX_ERRORS                             VX_M_FREE
     VX_M_ALL                              VX_M_BASE_PTR                         VX_M_SEGID
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:9    


        1        1        /*M* VXF$FREE - frees memory.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4          */
        8        8        /*M*  VXF$FREE Frees dynamic data segments         */
        9        9        /*P*  NAME: VXF$FREE
       10       10              PURPOSE: Frees dynamic data segments
       11       11              DESCRIPTION: Frees dynamic data segments     */
       12       12        /*D*  NAME: VXF$FREE
       13       13              CALL: CALL VXF$FREE( TYPE, SIZE, RELEASE );
       14       14              INPUT: TYPE     - Data segment number.
       15       15                     SIZE     - Request size in words.
       16       16                   RELEASE - Switch to release space back to the monitor.(=0=>no, <>0=>yes)
       17       17              DESCRIPTION: Frees dynamic data segments.
       18       18                           The returned space is assumed to be last allocated
       19       19                           first freed ( stack allocation/deallocation ).
       20       20                           It is reflected in the available space list and
       21       21                           the free space list is checked to determine if any
       22       22                           pages may be freed. Any available space in excess
       23       23                           of 1024 words is returned in page size blocks.
       24       24                                                                        */
       25       25        VXF$FREE:
       26       26              PROC(         TYPE, SIZE, RELEASE );

     26  3 000000   000000 700200 xent  VXF$FREE     TSX0  ! X66_AUTO_3
         3 000001   000012 000003                    ZERO    10,3

       27       27        %INCLUDE VX_INC_C;
       28    10743        %E;

             10751    1   /*******************************************************************************
             10752    1   *                                                                              *
             10753    1   *                          ENTRY                                                 *
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:10   
             10754    1   *                                                                              *
             10755    1   *******************************************************************************/

       29    10759    1   DCL VXE$ERROR       ENTRY(4);
       30    10760    1   DCL VXE$ERR         ENTRY(3);
       31    10761        %P;

             10769    1   /*******************************************************************************
             10770    1   *                                                                              *
             10771    1   *                          PARAMETERS                                             *
             10772    1   *                                                                              *
             10773    1   *******************************************************************************/

       32    10777    1   DCL TYPE            UBIN(36);   /* ALIAS FOR WHICH SEGMENT TO ALLOCATE FROM */
       33    10778    1   DCL SIZE            UBIN(36);           /* SIZE IN WORDS OF THE REQUEST */
       34    10779    1   DCL RELEASE         UBIN(36);           /* SWITCH TO RETURN ANY PAGES BACK */
       35    10780        %S;

             10788    1   /*******************************************************************************
             10789    1   *                                                                              *
             10790    1   *                          SBIN                                                 *
             10791    1   *                                                                              *
             10792    1   *******************************************************************************/

       36    10796    1   DCL REL             SBIN WORD ALIGNED   AUTO;
       37    10797    1   DCL DIFF            SBIN WORD ALIGNED   AUTO;
       38    10798        %U;

             10806    1   /*******************************************************************************
             10807    1   *                                                                              *
             10808    1   *                          UBIN                                                 *
             10809    1   *                                                                              *
             10810    1   *******************************************************************************/

       39    10814    1   DCL GET             UBIN(36)  ALIGNED   AUTO;
       40    10815        %LIST;
       41    10816        %FPT_FDS( FPTN=FPT_FDS, RESULTS=VX_M_VECTOR);
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:11   
             10817        %LSET LISTDIR='0'B;
             10827    1  DCL 1 FPT_FDS STATIC,2 V_ BIT(72)INIT(VECTOR(FPT_FDS.V))/**/,2 RESULTS_ BIT(72)INIT(
             10827            VECTOR(VX_M_VECTOR))/**/,2 V
             10828    1  DALIGNED,3 AUTOSEG# BIT(1)INIT('0'B)/**/ ,3 COMMON# BIT(1)INIT('0'B)/**/ ,3 * BIT(16
             10828            )INIT('0'B
             10829    1   )/**/,3 SEGSIZE# UBIN HALF UNAL INIT(0)/**/;
       42    10831        %FPT_FDP( FPTN=FPT_FDP, RESULTS=VX_M_VECTOR_DP);
             10832        %LSET LISTDIR='0'B;
             10842    1  DCL 1 FPT_FDP STATIC,2 V_ BIT(72)INIT(VECTOR(FPT_FDP.V))/**/,2 RESULTS_ BIT(72)INIT(
             10842            VECTOR(VX_M_VECTOR_DP))/**/,2 V
             10843    1   DALIGNED,3 PAGES# UBIN INIT(0)/**/;
       43    10845        %EJECT;
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:12   
       44    10846    2         DO CASE( TYPE );

  10846  3 000002   200003 470500                    LDP0    @TYPE,,AUTO
         3 000003   000000 235100                    LDA     0,,PR0
         3 000004   000011 115007                    CMPA    9,DL
         3 000005   000007 602005 3                  TNC     s:10846+5,AL
         3 000006   000136 710000 3                  TRA     s:10884
         3 000007   000020 710000 3                  TRA     s:10848
         3 000010   000020 710000 3                  TRA     s:10848
         3 000011   000020 710000 3                  TRA     s:10848
         3 000012   000020 710000 3                  TRA     s:10848
         3 000013   000020 710000 3                  TRA     s:10848
         3 000014   000020 710000 3                  TRA     s:10848
         3 000015   000020 710000 3                  TRA     s:10848
         3 000016   000020 710000 3                  TRA     s:10848
         3 000017   000102 710000 3                  TRA     s:10868

       45    10847    2           CASE( 0, 1, 2, 3, 4, 5, 6, 7 );

       46    10848    2             VX_M_FREE(TYPE) = VX_M_FREE(TYPE) - SIZE;

  10848  3 000020   000000 720100                    LXL0    0,,PR0
         3 000021   200004 471500                    LDP1    @SIZE,,AUTO
         3 000022   000000 236010 xsym               LDQ     VX_M_FREE,X0
         3 000023   100000 136100                    SBLQ    0,,PR1
         3 000024   000000 756010 xsym               STQ     VX_M_FREE,X0

       47    10849    3             IF RELEASE ~= 0 THEN DO;

  10849  3 000025   200005 473500                    LDP3    @RELEASE,,AUTO
         3 000026   300000 235100                    LDA     0,,PR3
         3 000027   000136 600000 3                  TZE     s:10884

       48    10850    3                 REL  = VX_M_ALL(TYPE) - VX_M_FREE(TYPE);

  10850  3 000030   000000 720100                    LXL0    0,,PR0
         3 000031   000000 236010 xsym               LDQ     VX_M_ALL,X0
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:13   
         3 000032   000000 136010 xsym               SBLQ    VX_M_FREE,X0
         3 000033   200006 756100                    STQ     REL,,AUTO

       49    10851    3                 DIFF = ( REL/@PAGE_SIZE ) * @PAGE_SIZE;

  10851  3 000034   002000 506007                    DIV     1024,DL
         3 000035   000012 736000                    QLS     10
         3 000036   200007 756100                    STQ     DIFF,,AUTO

       50    10852    4                 IF DIFF >= @PAGE_SIZE THEN DO;

  10852  3 000037   002000 116007                    CMPQ    1024,DL
         3 000040   000065 604000 3                  TMI     s:10860

       51    10853    4                     VX_M_ALL(TYPE) = VX_M_ALL(TYPE) - DIFF;

  10853  3 000041   000000 236010 xsym               LDQ     VX_M_ALL,X0
         3 000042   200007 136100                    SBLQ    DIFF,,AUTO
         3 000043   000000 756010 xsym               STQ     VX_M_ALL,X0

       52    10854    4                     FPT_FDS.V.SEGSIZE# = DIFF;

  10854  3 000044   200007 720100                    LXL0    DIFF,,AUTO
         3 000045   000004 440000 2                  SXL0    FPT_FDS+4

       53    10855    4                     VX_M_VECTOR.F.SEGID = VX_M_SEGID(TYPE);

  10855  3 000046   000000 721100                    LXL1    0,,PR0
         3 000047   000000 236011 xsym               LDQ     VX_M_SEGID,X1
         3 000050   000001 752003 xsym               STCQ    VX_M_VECTOR+1,'03'O

       54    10856    4                     IF TYPE = 1 THEN FPT_FDS.V.COMMON# = @TRUE_B;

  10856  3 000051   000000 235100                    LDA     0,,PR0
         3 000052   000001 115007                    CMPA    1,DL
         3 000053   000057 601000 3                  TNZ     s:10857

PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:14   
  10856  3 000054   200000 236003                    LDQ     65536,DU
         3 000055   000004 256000 2                  ORSQ    FPT_FDS+4
         3 000056   000061 710000 3                  TRA     s:10858

       55    10857    4                     ELSE FPT_FDS.V.COMMON# = @FALSE_B;

  10857  3 000057   000000 236000 4                  LDQ     0
         3 000060   000004 356000 2                  ANSQ    FPT_FDS+4

       56    10858    4                     CALL M$FDS( FPT_FDS)  ALTRET(ERR_SEGS);

  10858  3 000061   000000 630400 2                  EPPR0   FPT_FDS
         3 000062   430002 713400                    CLIMB   alt,fds
         3 000063   400400 401760                    pmme    nvectors=2
         3 000064   000137 702000 3                  TSX2    ERR_SEGS

       57    10859    4                    END;

       58    10860    4                 IF VX_M_ALL(TYPE) <=0 THEN DO; /* CHECK IF ALL GONE */

  10860  3 000065   200003 470500                    LDP0    @TYPE,,AUTO
         3 000066   000000 720100                    LXL0    0,,PR0
         3 000067   000000 235010 xsym               LDA     VX_M_ALL,X0
         3 000070   000136 605400 3                  TPNZ    s:10884

       59    10861    4                     VX_M_ALL(TYPE) = 0;   /* RESET TO INITIAL CONDITIONS  */

  10861  3 000071   000000 450010 xsym               STZ     VX_M_ALL,X0

       60    10862    4                     VX_M_FREE(TYPE) = 0;  /* DITTO */

  10862  3 000072   000000 720100                    LXL0    0,,PR0
         3 000073   000000 450010 xsym               STZ     VX_M_FREE,X0

       61    10863    4                     VX_M_BASE_PTR(TYPE) = ADDR(NIL);

  10863  3 000074   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:15   
         3 000075   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000076   000000 756010 xsym               STQ     VX_M_BASE_PTR,X0

       62    10864    4                     VX_M_SEGID(TYPE) = 0;

  10864  3 000077   000000 720100                    LXL0    0,,PR0
         3 000100   000000 450010 xsym               STZ     VX_M_SEGID,X0

       63    10865    4                    END;

       64    10866    3                END;

  10866  3 000101   000136 710000 3                  TRA     s:10884

       65    10867    2           CASE(8);

       66    10868    2             VX_M_FREE(8)    = VX_M_FREE(8)    - SIZE;

  10868  3 000102   200004 471500                    LDP1    @SIZE,,AUTO
         3 000103   000010 236000 xsym               LDQ     VX_M_FREE+8
         3 000104   100000 136100                    SBLQ    0,,PR1
         3 000105   000010 756000 xsym               STQ     VX_M_FREE+8

       67    10869    3             IF RELEASE ~= 0 THEN DO;

  10869  3 000106   200005 473500                    LDP3    @RELEASE,,AUTO
         3 000107   300000 235100                    LDA     0,,PR3
         3 000110   000136 600000 3                  TZE     s:10884

       68    10870    3                 DIFF = VX_M_ALL(8) - VX_M_FREE(8);

  10870  3 000111   000010 236000 xsym               LDQ     VX_M_ALL+8
         3 000112   000010 136000 xsym               SBLQ    VX_M_FREE+8
         3 000113   200007 756100                    STQ     DIFF,,AUTO

       69    10871    4                 IF DIFF >= @PAGE_SIZE THEN DO;

PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:16   
  10871  3 000114   002000 116007                    CMPQ    1024,DL
         3 000115   000131 604000 3                  TMI     s:10877

       70    10872    4                     REL = DIFF/ @PAGE_SIZE;

  10872  3 000116   002000 506007                    DIV     1024,DL
         3 000117   200006 756100                    STQ     REL,,AUTO

       71    10873    4                     FPT_FDP.V.PAGES# = REL;

  10873  3 000120   000012 756000 2                  STQ     FPT_FDP+4

       72    10874    4                     CALL M$FDP( FPT_FDP)  ALTRET(LAST_RELEASED);

  10874  3 000121   000006 630400 2                  EPPR0   FPT_FDP
         3 000122   430004 713400                    CLIMB   alt,+12292
         3 000123   400400 401760                    pmme    nvectors=2
         3 000124   000132 702000 3                  TSX2    LAST_RELEASED

       73    10875    4                     VX_M_ALL(8) = VX_M_ALL(8) - REL * 1024;

  10875  3 000125   200006 336100                    LCQ     REL,,AUTO
         3 000126   000012 736000                    QLS     10
         3 000127   000010 036000 xsym               ADLQ    VX_M_ALL+8
         3 000130   000010 756000 xsym               STQ     VX_M_ALL+8

       74    10876    4                    END;

       75    10877    3                 RETURN;

  10877  3 000131   000000 702200 xent               TSX2  ! X66_ARET

  10871  3 000132                       LAST_RELEAS* null
       76    10878    3   LAST_RELEASED: ;
       77    10879    3                 VX_M_ALL(8) = 0;

  10879  3 000132   000010 450000 xsym               STZ     VX_M_ALL+8
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:17   

       78    10880    3                 VX_M_FREE(8)    = 0;

  10880  3 000133   000010 450000 xsym               STZ     VX_M_FREE+8

       79    10881    3                 VX_M_BASE_PTR(8) = ADDR(NIL);

  10881  3 000134   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000135   000010 756000 xsym               STQ     VX_M_BASE_PTR+8

       80    10882    3                END;

       81    10883    2           END;

       82    10884    1         RETURN;

  10884  3 000136   000000 702200 xent               TSX2  ! X66_ARET

  10875  3 000137                       ERR_SEGS     null
       83    10885    1   ERR_SEGS: ;
       84    10886    1   END VXF$FREE;

  10886  3 000137   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:18   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXF$FREE.
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:19   

 **** Variables and constants ****

  ****  Section 002  Data  VXF$FREE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(216)   r     1 FPT_FDP                    0-0-0/d STRC(216)   r     1 FPT_FDS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @RELEASE                   4-0-0/w PTR         r     1 @SIZE
     3-0-0/w PTR         r     1 @TYPE                      7-0-0/w SBIN        r     1 DIFF
     6-0-0/w SBIN        r     1 REL                       *0-0-0/w UBIN        r     1 RELEASE
    *0-0-0/w UBIN        r     1 SIZE                      *0-0-0/w UBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w UBIN        r     1 VX_M_SEGID(0:8)
     0-0-0/w STRC(72)    r     1 VX_M_VECTOR                0-0-0/w STRC(72)    r     1 VX_M_VECTOR_DP


   Procedure VXF$FREE requires 96 words for executable code.
   Procedure VXF$FREE requires 10 words of local(AUTO) storage.

    No errors detected in file VXF$FREE.:E05TSI    .
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:20   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:21   
          MINI XREF LISTING

DIFF
     10797**DCL     10851<<ASSIGN  10852>>IF      10853>>ASSIGN  10854>>ASSIGN  10870<<ASSIGN  10871>>IF
     10872>>ASSIGN
ERR_SEGS
     10875**LABEL   10858--CALLALT
FPT_FDP
     10842**DCL     10874<>CALL
FPT_FDP.V
     10842**DCL     10842--DCLINIT
FPT_FDP.V.PAGES#
     10843**DCL     10873<<ASSIGN
FPT_FDS
     10827**DCL     10858<>CALL
FPT_FDS.V
     10827**DCL     10827--DCLINIT
FPT_FDS.V.COMMON#
     10828**DCL     10856<<ASSIGN  10857<<ASSIGN
FPT_FDS.V.SEGSIZE#
     10829**DCL     10854<<ASSIGN
LAST_RELEASED
     10871**LABEL   10874--CALLALT
M$FDP
      5126**DCL-ENT 10874--CALL
M$FDS
      5125**DCL-ENT 10858--CALL
REL
     10796**DCL     10850<<ASSIGN  10851>>ASSIGN  10872<<ASSIGN  10873>>ASSIGN  10875>>ASSIGN
RELEASE
     10779**DCL        25--PROC    10849>>IF      10869>>IF
SIZE
     10778**DCL        25--PROC    10848>>ASSIGN  10868>>ASSIGN
TYPE
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:22   
     10777**DCL        25--PROC    10846>>DOCASE  10848>>ASSIGN  10848>>ASSIGN  10850>>ASSIGN  10850>>ASSIGN
     10853>>ASSIGN  10853>>ASSIGN  10855>>ASSIGN  10856>>IF      10860>>IF      10861>>ASSIGN  10862>>ASSIGN
     10863>>ASSIGN  10864>>ASSIGN
VX_BIAS.A
      9593**DCL      9594--REDEF
VX_CBUF.CHARS_A
      9527**DCL      9528--REDEF
VX_CONST_DCB.ACTPOS
     10709**DCL     10709--REDEF
VX_CONST_DCB.ARS#
     10668**DCL     10668--REDEF
VX_CONST_DCB.ATTR#
     10698**DCL     10698--REDEF   10700--REDEF
VX_CONST_DCB.BORROW
     10720**DCL     10720--REDEF   10720--REDEF   10720--REDEF
VX_CONST_DCB.EOMCHAR#
     10675**DCL     10676--REDEF
VX_CONST_DCB.FLDID
     10712**DCL     10713--REDEF
VX_CONST_DCB.FORM$
     10704**DCL     10704--REDEF
VX_CONST_DCB.FSECT
     10727**DCL     10727--REDEF
VX_CONST_DCB.FSN#
     10694**DCL     10694--REDEF   10694--REDEF   10695--REDEF
VX_CONST_DCB.HEADER$
     10703**DCL     10704--REDEF
VX_CONST_DCB.IXTNSIZE#
     10700**DCL     10701--REDEF
VX_CONST_DCB.LASTSTA$
     10684**DCL     10684--REDEF
VX_CONST_DCB.LVL
     10721**DCL     10721--REDEF
VX_CONST_DCB.NAME#.C
     10684**DCL     10685--REDEF
VX_CONST_DCB.NOEOF
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:23   
     10716**DCL     10716--REDEF
VX_CONST_DCB.NRECS#
     10701**DCL     10701--REDEF
VX_CONST_DCB.NRECX
     10728**DCL     10728--REDEF
VX_CONST_DCB.OHDR
     10717**DCL     10717--REDEF
VX_CONST_DCB.ORG#
     10692**DCL     10693--REDEF
VX_CONST_DCB.PRECNO
     10725**DCL     10725--REDEF
VX_CONST_DCB.RCSZ
     10733**DCL     10733--REDEF
VX_CONST_DCB.RES#
     10686**DCL     10686--REDEF
VX_CONST_DCB.SETX
     10705**DCL     10705--REDEF
VX_CONST_DCB.TAB$
     10704**DCL     10704--REDEF
VX_CONST_DCB.TDA
     10724**DCL     10725--REDEF
VX_CONST_DCB.WSN#
     10686**DCL     10687--REDEF
VX_EBUF.CHARS_A
     10116**DCL     10117--REDEF
VX_EFIELD1.CHARS
     10125**DCL     10126--REDEF
VX_EFIELD2.CHARS
     10129**DCL     10130--REDEF
VX_EFIELD3.CHARS
     10133**DCL     10134--REDEF
VX_EI_KEY_BUF.KEY
     10509**DCL     10510--REDEF
VX_ERRORS
      9570**DCL      9581--REDEF
VX_ERRORS.CONFLICT_A
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:24   
      9576**DCL      9577--REDEF
VX_ERRORS.UNSAT_A
      9572**DCL      9573--REDEF
VX_IMAGE_DATA.CPAGE#_A
      8707**DCL      8708--REDEF
VX_IMAGE_DATA.NODE_A$
      8719**DCL      8720--REDEF
VX_IMAGE_DATA.START_A$
      8711**DCL      8712--REDEF
VX_IMAGE_DATA.STOP_A$
      8715**DCL      8716--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8776**DCL      8777--REDEF
VX_IMAGE_DS3.NODE_A$
      8788**DCL      8789--REDEF
VX_IMAGE_DS3.START_A$
      8780**DCL      8781--REDEF
VX_IMAGE_DS3.STOP_A$
      8784**DCL      8785--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8799**DCL      8800--REDEF
VX_IMAGE_DS4.NODE_A$
      8811**DCL      8812--REDEF
VX_IMAGE_DS4.START_A$
      8803**DCL      8804--REDEF
VX_IMAGE_DS4.STOP_A$
      8807**DCL      8808--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8822**DCL      8823--REDEF
VX_IMAGE_DS5.NODE_A$
      8834**DCL      8835--REDEF
VX_IMAGE_DS5.START_A$
      8826**DCL      8827--REDEF
VX_IMAGE_DS5.STOP_A$
      8830**DCL      8831--REDEF
VX_IMAGE_DS6.CPAGE#_A
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:25   
      8845**DCL      8846--REDEF
VX_IMAGE_DS6.NODE_A$
      8857**DCL      8858--REDEF
VX_IMAGE_DS6.START_A$
      8849**DCL      8850--REDEF
VX_IMAGE_DS6.STOP_A$
      8853**DCL      8854--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8868**DCL      8869--REDEF
VX_IMAGE_DS7.NODE_A$
      8880**DCL      8881--REDEF
VX_IMAGE_DS7.START_A$
      8872**DCL      8873--REDEF
VX_IMAGE_DS7.STOP_A$
      8876**DCL      8877--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8891**DCL      8892--REDEF
VX_IMAGE_DS8.NODE_A$
      8903**DCL      8904--REDEF
VX_IMAGE_DS8.START_A$
      8895**DCL      8896--REDEF
VX_IMAGE_DS8.STOP_A$
      8899**DCL      8900--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8730**DCL      8731--REDEF
VX_IMAGE_PROC.NODE_A$
      8742**DCL      8743--REDEF
VX_IMAGE_PROC.START_A$
      8734**DCL      8735--REDEF
VX_IMAGE_PROC.STOP_A$
      8738**DCL      8739--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8753**DCL      8754--REDEF
VX_IMAGE_ROS.NODE_A$
      8765**DCL      8766--REDEF
VX_IMAGE_ROS.START_A$
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:26   
      8757**DCL      8758--REDEF
VX_IMAGE_ROS.STOP_A$
      8761**DCL      8762--REDEF
VX_M_ALL
      9604**DCL     10850>>ASSIGN  10853<<ASSIGN  10853>>ASSIGN  10860>>IF      10861<<ASSIGN  10870>>ASSIGN
     10875<<ASSIGN  10875>>ASSIGN  10879<<ASSIGN
VX_M_BASE_PTR
      9606**DCL     10863<<ASSIGN  10881<<ASSIGN
VX_M_FREE
      9602**DCL     10848<<ASSIGN  10848>>ASSIGN  10850>>ASSIGN  10862<<ASSIGN  10868<<ASSIGN  10868>>ASSIGN
     10870>>ASSIGN  10880<<ASSIGN
VX_M_SEGID
      9608**DCL     10855>>ASSIGN  10864<<ASSIGN
VX_M_VECTOR
      8553**DCL     10827--DCLINIT
VX_M_VECTOR.F
      8558**DCL      8562--REDEF
VX_M_VECTOR.F.SEGID
      8561**DCL     10855<<ASSIGN
VX_M_VECTOR_DP
      8588**DCL     10842--DCLINIT
VX_M_VECTOR_DP.F
      8593**DCL      8597--REDEF
VX_O.ACCTN_A$
      9722**DCL      9723--REDEF
VX_O.DCB_MATCH_A$
      9731**DCL      9732--REDEF
VX_O.DCB_MATCH_HIT_A
      9737**DCL      9738--REDEF
VX_O.FIDN_A$
      9716**DCL      9717--REDEF
VX_O.FID_A$
      9708**DCL      9709--REDEF
VX_O.INCLUDE_A$
      9728**DCL      9729--REDEF
VX_O.MAP_A
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:27   
      9702**DCL      9703--REDEF
VX_O.NODCB_A
      9759**DCL      9760--REDEF
VX_O.NUM_A
      9647**DCL      9649--REDEF
VX_O.OPT_A
      9747**DCL      9748--REDEF
VX_O.PRIV_A
      9663**DCL      9665--REDEF
VX_O.SIN_A
      9616**DCL      9617--REDEF
VX_O.TCB_A
      9743**DCL      9744--REDEF
VX_OD.ACCTN_A$
      9920**DCL      9921--REDEF
VX_OD.DCB_MATCH_A$
      9929**DCL      9930--REDEF
VX_OD.FIDN_A$
      9914**DCL      9915--REDEF
VX_OD.FID_A$
      9906**DCL      9907--REDEF
VX_OD.INCLUDE_A$
      9926**DCL      9927--REDEF
VX_OD.MAP_A
      9900**DCL      9901--REDEF
VX_OD.NODCB_A
      9944**DCL      9945--REDEF
VX_OD.NUM_A
      9847**DCL      9848--REDEF
VX_OD.PRIV_A
      9862**DCL      9863--REDEF
VX_OD.SIN_A
      9816**DCL      9817--REDEF
VX_OD.VECTOR_A$
      9935**DCL      9936--REDEF
VX_OL.MAX_A
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:28   
      9791**DCL      9793--REDEF
VX_OL.MIN_A
      9776**DCL      9777--REDEF
VX_ON.ACCTN_A$
     10065**DCL     10067--REDEF
VX_ON.DCB_MATCH_A$
     10076**DCL     10078--REDEF
VX_ON.FIDN_A$
     10058**DCL     10060--REDEF
VX_ON.FID_A$
     10049**DCL     10051--REDEF
VX_ON.INCLUDE_A$
     10072**DCL     10074--REDEF
VX_ON.MAP_A
     10042**DCL     10044--REDEF
VX_ON.NODCB_A$
     10092**DCL     10093--REDEF
VX_ON.NUM_A
      9987**DCL      9989--REDEF
VX_ON.PRIV_A
     10003**DCL     10005--REDEF
VX_ON.SIN_A
      9955**DCL      9957--REDEF
VX_ON.VECTOR_A$
     10083**DCL     10084--REDEF
VX_OUHEAD.VERSION
      9402**DCL      9404--REDEF
VX_OU_HEAD
      9345**DCL      9384--REDEF
VX_OU_HEAD.REC_A
      9357**DCL      9360--REDEF
VX_O_KEY_BUF.FORM0
      8606**DCL      8609--REDEF    8616--REDEF
VX_O_KEY_BUF_L.FORM0
      8629**DCL      8632--REDEF    8639--REDEF
VX_PASS2_REF.OU.L_START
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:29   
     10295**DCL     10300--REDEF
VX_PASS2_REF.OU.L_STOP
     10301**DCL     10306--REDEF
VX_PASS2_REF.OU.MAX
     10289**DCL     10294--REDEF
VX_PASS2_REF.OU.SIZE
     10307**DCL     10312--REDEF
VX_PASS2_REF.SAT.COUNT
     10334**DCL     10340--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10341**DCL     10347--REDEF
VX_PASS2_REF.SAT.L_START
     10320**DCL     10326--REDEF
VX_PASS2_REF.SAT.L_STOP
     10327**DCL     10333--REDEF
VX_PASS2_REF.SAT.MAX
     10314**DCL     10319--REDEF
VX_PASS2_REF.UNSAT.L_START
     10382**DCL     10387--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10388**DCL     10393--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10394**DCL     10399--REDEF
VX_PASS2_REF.UNSAT.MAX
     10376**DCL     10381--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10406**DCL     10411--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10400**DCL     10405--REDEF
VX_PHRASE.PHRASE
      9808**DCL      9810--REDEF
VX_PROGRAM_BIAS.A
      9586**DCL      9587--REDEF
VX_R_KEY_BUF.FORM0
      8655**DCL      8659--REDEF    8665--REDEF
VX_SD.A
PL6.E3A0      #001=VXF$FREE File=VXF$FREE.:E05TSI                                WED 07/30/97 08:08 Page:30   
      8283**DCL      8284--REDEF
VX_SPC.B$.MINE
     10477**DCL     10483--REDEF
VX_SPC.B$.NAME
     10456**DCL     10462--REDEF
VX_SPC.B$.SKIP
     10470**DCL     10476--REDEF
VX_SPC.B$.VALUE
     10463**DCL     10469--REDEF
VX_SPC.SEG.NAME
     10425**DCL     10431--REDEF
VX_SPC.SEG.VALUE
     10432**DCL     10438--REDEF
VX_TSX0_OVERLAY.H
     10200**DCL     10203--REDEF
