VERSION A02

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:1    
        1        1        /*M* NFS request handler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* plm=3 */
        8        8        /*P*  NAME: FUN$NFS
        9        9              Purpose:
       10       10                    Contains the modules that do all of the work on NFS files
       11       11                    (except I/O).
       12       12        */
       13       13        /*F*  NAME: FUN$NFSRQS
       14       14              Purpose:
       15       15                    To perform the specified function for an NFS file/account.
       16       16        */
       17       17        /*D*  NAME: FUN$NFSRQS
       18       18              Inputs:
       19       19                    RQSCTX - contains the Request information/operation, and all
       20       20                             relevant information required to perform the operation.
       21       21        */
       22       22
       23       23        FUN$NFS: PROC( RQSCTX);
       24       24
       25       25        %INCLUDE B$JIT;
       26      315    1   DCL B$JIT$ PTR SYMREF READONLY;
       27      316        %INCLUDE CP_6;
       28      397    1   DCL B$TCB$ PTR SYMREF READONLY;
       29      398            %B$TCB( STCLASS="BASED(B$TCB$)");
       30      401            %B$ALT;
       31      409            %F$DCB;
       32      466            %FPT_CLOSE( CHGATT=YES, PROCATTR=UFATTR);
       33      508            %FPT_CLOSE( FPTN=CLOSE_RENAME, CHGATT=YES, NAME=FID.NAME);
       34      550            %FPT_TIME( FPTN=FU_FPT_TIME, STCLASS=SYMREF);
       35      569
       36      570            %FPT_OPEN( FPTN=OPEN_NEXT_FILE, DCB=F$TEST, ASN=FILE, TEST=YES, NXTF=YES,
       37      571                       NAME=FID.NAME, ACCT=FID.ACCT, SN=FID.PSN, FPARAM=FM$FIT);
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:2    
       38      680            %FPT_OPEN( FPTN=OPEN_NEXT_ACCT, DCB=F$TEST, ASN=FILE, TEST=YES, NXTA=YES,
       39      681                       ACCT=FID.ACCT, SN=FID.PSN, SCRUB=YES);
       40      790            %FPT_OPEN( FPTN=OPEN_ACCT_FIT, DCB=F$TEST, ASN=DEVICE, RES='DP', TEST=YES,
       41      791                       ACCT=FID.ACCT, SN=FID.PSN, FPARAM=FM$FIT);
       42      900            %FPT_MADMUCK( FPTN=GET_PSN, READ=YES, ACCT=FID.ACCT, SN=FID.PSN);
       43      916            %FPT_DELREC( FPTN=DELETE_ALL, DELALL=YES);
       44      935
       45      936        %INCLUDE CP_6_SUBS;
       46     1476        %INCLUDE FM$FIT;
       47     1697            %FM$FIT( N=1023, BASED=STATIC);
       48     1700
       49     1701        %INCLUDE FU_NFSSUBS_C;
       50     1796        %INCLUDE FU_NFS_M;
       51     2311        %INCLUDE B_ERRORS_C;
       52     3438        %INCLUDE XSL_PERR_C;
       53     3493        %INCLUDE XSL_SOCKET_E;
       54     3751        %INCLUDE XSL_SOCKET_M;
       55     4499
       56     4500        %FU$RQSCTX( NAME=RQSCTX, STCLASS=PARAM);
       57     4589
       58     4590    1   DCL F$TEST DCB;
       59     4591    1   DCL FU_NFSSOCKET SBIN SYMREF;
       60     4592    1   DCL FU_TIME UBIN SYMREF;
       61     4593    1   DCL FU_CTXHD$ PTR SYMREF;
       62     4594    1   DCL FU_FCTX$ PTR SYMREF;
       63     4595    1   DCL FU_PROC# UBIN SYMREF;
       64     4596    1   DCL FU_OPENLIM UBIN SYMREF;
       65     4597        %FU$FCTX( NAME=FU_FCTX, STCLASS=SYMREF);
       66     4700        %FU$UCTX( NAME=FU_UCTX, STCLASS=SYMREF);
       67     4753    1   DCL FU_MYACCN CHAR(8) SYMREF;
       68     4754    1   DCL FU_MYUNAME CHAR(12) SYMREF;
       69     4755    1   DCL 1 FU_XLATE CONSTANT SYMDEF,2 *(0:7) CHAR(32) INIT(
       70     4756    1   '################################',' ###.##''#####-$#0123456789:#####',
              4756            /* $ <-> . */
       71     4757    1    '#ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_','#abcdefghijklmnopqrstuvwxyz{|}~#',
       72     4758    1   '################################',' ###.##''#####-$#0123456789:#####',
              4758            /* $ <-> . */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:3    
       73     4759    1    '#ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_','#abcdefghijklmnopqrstuvwxyz{|}~#');
       74     4760
       75     4761    1   DCL 1 FU_BINSRCH CONSTANT SYMDEF,2 *(0:255) UBIN(9) UNAL
       76     4762    1    INIT( 1*8,0*6,1*18,0*95,1*0);
       77     4763
       78     4764    1   DCL NULLZ_INIT (0:11) CHAR(1) CONSTANT UNAL INIT (BINASC(0)*0);
       79     4765    1   DCL NULLZ REDEF NULLZ_INIT CHAR(12);
       80     4766
       81     4767    1   DCL FUA$GETCTX ENTRY;
       82     4768    1   DCL FUG$REMOVE_FCTX ENTRY(1);
       83     4769    1   DCL FUI$IORQS ENTRY(1);
       84     4770    1   DCL FUI$FILELEN ENTRY(2) ALTRET;
       85     4771    1   DCL FUS$SECCHK ENTRY(1) ALTRET;
       86     4772    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
       87     4773    1   DCL XSL$HTONL ENTRY(2);
       88     4774    1   DCL XSL$NTOHL ENTRY(2);
       89     4775    1   DCL XSL$QSENDTO ENTRY(7) ALTRET;
       90     4776
       91     4777    1   DCL 1 REPLY BASED(REPLY$) ALIGNED,
       92     4778    1         2 STAT UBIN;
       93     4779
       94     4780        %FU$ATTRSTAT( NAME=ATTRSTAT, STCLASS="BASED(REPLY$)");
       95     4831        %FU$DIROPRES( NAME=DIROPRES, STCLASS="BASED(REPLY$)");
       96     4903    1   DCL 1 READDIRRES BASED(DIRRES$) ALIGNED, /* return structure for READDIR cmd  */
       97     4904    1         2 STAT UBIN,                      /* for the first entry, this is right */
       98     4905    1         2 COOKIE REDEF STAT UBIN, /* for prev READIRRES since NAME's variable   */
       99     4906    1         2 PRESENT UBIN,
      100     4907    1         2 FILEID UBIN,
      101     4908    1         2 EOF REDEF FILEID UBIN,          /* For the last entry ...             */
      102     4909    1         2 NAME,
      103     4910    1           3 L UBIN,
      104     4911    1           3 T CHAR(READDIRRES.NAME.L);
      105     4912        %FU$STATFSRES( NAME=STATFS, STCLASS="BASED(REPLY$)");
      106     4933
      107     4934        %FU$DIROPARGS( NAME=DIROP, STCLASS="BASED(BODY$)");
      108     4976        %FU$FHANDLE( NAME=FHANDLE, STCLASS="BASED(BODY$)");
      109     4997         /* NO_STAMP - same as FHANDLE, but isolates out the stamp for comparisions   */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:4    
      110     4998    1   DCL 1 NO_STAMP BASED ALIGNED,
      111     4999    1         2 * BIT(18),                      /* stamp                              */
      112     5000    1         2 TEXT CHAR(30),
      113     5001    1         2 TEXTB REDEF TEXT,
      114     5002    1           3 * CHAR(30);
      115     5003        %FU$READDIRARGS( NAME=READDIR, STCLASS="BASED(BODY$)");
      116     5045        %FU$WRITEARGS( NAME=WRITEARGS, STCLASS="BASED(BODY$)");
      117     5088
      118     5089        %FU$UCTX( NAME=UCTX, STCLASS="BASED(UCTX$)");
      119     5142        %FU$FCTX( NAME=FCTX, STCLASS="BASED(FCTX$)");
      120     5245        %FU$HCTX( NAME=HCTX, STCLASS=BASED);
      121     5268        %FU$NFSDS( NAME=DS, STCLASS="BASED(B$DS8)");
      122     5298    1   DCL B$DS8 PTR SYMREF READONLY;
      123     5299        %CODE03( BASED="BASED(F$)");
      124     5306        %CODE04( BASED="BASED(F$)");
      125     5314        %CODE14( BASED="BASED(F$)");
      126     5324    1   DCL 1 CODE13 ALIGNED BASED(F$),
      127     5325    1         2 ID CHAR(8),
      128     5326    1         2 MODTIME UBIN,
      129     5327              %FU$FATTR( NAME=FATTR, STCLASS=BASED, LVL=2);
      130     5357
      131     5358    1   DCL F$ PTR;
      132     5359
      133     5360    1   DCL BODY$ PTR;
      134     5361    1   DCL DIRRES$ PTR;
      135     5362    1   DCL REPLY$ PTR;
      136     5363    1   DCL UCTX$ PTR;
      137     5364    1   DCL FCTX$ PTR;
      138     5365    1   DCL MAXDIRRES$ PTR;
      139     5366    1   DCL TO$ REDEF MAXDIRRES$ PTR;
      140     5367    1   DCL F$TEST$ PTR;
      141     5368    1   DCL SAVE_FCTX$ PTR;
      142     5369    1   DCL I UBIN;
      143     5370    1   DCL CREATUTS UBIN;
      144     5371    1   DCL AT_COOKIE SBIN;
      145     5372    1   DCL START_COOKIE SBIN;
      146     5373    1   DCL FSID UBIN;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:5    
      147     5374    1   DCL TEXTMODE BIT(1);
      148     5375    1   DCL EOD UBIN;
      149     5376    1   DCL LIST_ACCTS SBIN;
      150     5377
      151     5378        %FU$FIDPARTS( NAME=FID, STCLASS=STATIC);
      152     5405        %FU$FIDPARTS( NAME=FID_INIT, STCLASS=CONSTANT);
      153     5432        %VLP_ATTR( FPTN=UFATTR);
      154     5446    1           3 ID CHAR(8) INIT('nfs fit'),
      155     5447    1           3 MODTIME UBIN,
      156     5448                %FU$FATTR( STCLASS=STATIC, LVL=3, NAME=FATTR);
      157     5478
      158     5479        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:6    
      159     5480    1   FUN$NFSRQS: ENTRY( RQSCTX);
      160     5481    1      BODY$ = RQSCTX.BODY$;
      161     5482    1      REPLY$ = ADDR( RQSCTX.REPLYHDR.RESULTS);
      162     5483    1      IF FU_PROC# = 0
      163     5484    1      THEN DS.NFSRQS( RQSCTX.PROC#) = DS.NFSRQS( RQSCTX.PROC#) + 1;
      164     5485    1      CALL FINDUCTX ALTRET( BAD2);
      165     5486    2      DO CASE( RQSCTX.PROC#);
      166     5487
      167     5488    2       CASE( %NFSPROC_GETATTR);
      168     5489    3         IF RQSCTX.LEN ~= SIZEC(FHANDLE) THEN DO;
      169     5490    3   BAD_ARG: RQSCTX.REPLYHDR.ACCEPT_STAT = %GARBAGE_ARGS;
      170     5491    3            RQSCTX.LEN = 32;
      171     5492    3            END;
      172     5493    3         ELSE DO;
      173     5494    3            RQSCTX.LEN = 32+SIZEC(ATTRSTAT);
      174     5495    3            ATTRSTAT.STAT = %NFS_OK;
      175     5496    3            ATTRSTAT.FATTR = FCTX.FATTR;
      176     5497    3            ATTRSTAT.FATTR.XATTR = '0'B;
      177     5498    3            END;
      178     5499
      179     5500    2       CASE( %NFSPROC_LOOKUP);
      180     5501    2         FID = FCTX.FID;
      181     5502    2         FID.RES = 'DP';
      182     5503    2         DIROPRES.FILE = FCTX.FHANDLE;
      183     5504    2         IF FCTX.FATTR.TYPE ~= %NFDIR THEN GOTO ERR_NOTDIR;
      184     5505    2         IF DIROP.NAME.L = 0 THEN GOTO BAD_ARG;
      185     5506    2         IF DIROP.NAME.T = '.' THEN GOTO NOP_LOOKUP;
      186     5507    2         IF DIROP.NAME.T = '..+' OR        /* hp thinks ..+ is ..                */
      187     5508    3           DIROP.NAME.T = '..' THEN DO;    /* Going backwards                    */
      188     5509    3            IF UCTX.USER.TOPLVL = %TOPLVL_NONE THEN GOTO ERR_ACCES;
      189     5510    3            IF DIROPRES.FILE.ACCTLNG > 0   /* do '..' from account level         */
      190     5511    4            THEN DO;
      191     5512    4               SUBSTR( DIROPRES.FILE.TEXT, DIROPRES.FILE.PSNLNG, DIROPRES.FILE.ACCTLNG)
              5512                        = NULLZ;
      192     5513    4               DIROPRES.FILE.ACCTLNG = 0;
      193     5514    4               IF DIROPRES.FILE.PSNLNG = 0 /* was MAD mounted, so back to MAD    */
      194     5515    4               THEN FID.ASN = %DEVICE#+512;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:7    
      195     5516    4               ELSE FID.ASN = %DEVICE#;
      196     5517    4               DIROPRES.FILE.STAMP = FID.ASN;
      197     5518    4               END;
      198     5519    3            ELSE IF DIROPRES.FILE.PSNLNG > 0 /* do '..' from packset level       */
      199     5520    4               THEN DO;
      200     5521    4                  IF UCTX.USER.TOPLVL ~= %TOPLVL_ALL THEN GOTO ERR_ACCES;
      201     5522    4                  SUBSTR( DIROPRES.FILE.TEXT, 0, DIROPRES.FILE.PSNLNG) = NULLZ;
      202     5523    4                  FID.ASN = %DEVICE#;      /* the works                          */
      203     5524    4                  DIROPRES.FILE.STAMP = %DEVICE#;
      204     5525    4                  DIROPRES.FILE.PSNLNG = 0;
      205     5526    4                  END;
      206     5527    3               ELSE GOTO ERR_NOTDIR;       /* Nothing there for '..'             */
      207     5528    4            IF DIROPRES.FILE.PSNLNG = 0 THEN DO;
      208     5529    4               FID.RES = 'NO';
      209     5530    4               FID.RES = 'ME';             /* Bug in M$OPEN                      */
      210     5531    4               END;
      211     5532    3            FID.ACCT = BINASC( 0);
      212     5533    3            END;
      213     5534    3         ELSE IF DIROPRES.FILE.ACCTLNG > 0 THEN DO; /* next lvl is a file name   */
      214     5535    3               FID.NAME.L = DIROP.NAME.L;
      215     5536    3               CALL XLATE( FID.NAME.T, FU_XLATE, DIROP.NAME.T);
      216     5537    3               IF FCTX.FHANDLE.PSNLNG > 0  /* see if we can treat this like MAD  */
      217     5538    4               THEN DO;
      218     5539    4                  CALL M$MADMUCK( GET_PSN)
      219     5540    5                  WHENRETURN DO;
      220     5541    5                     IF FID.PSN.SN = SUBSTR( FCTX.FHANDLE.TEXT,0,FCTX.FHANDLE.PSNLNG)
      221     5542    6                     THEN DO;
      222     5543    6                        DIROPRES.FILE.TEXT = SUBSTR( DIROPRES.FILE.TEXT,DIROPRES.FILE.
              5543                                 PSNLNG,DIROPRES.FILE.ACCTLNG);
      223     5544    6                        DIROPRES.FILE.PSNLNG = 0;
      224     5545    6                        END;
      225     5546    5                     ELSE FID.PSN.SN = SUBSTR( FCTX.FHANDLE.TEXT,0,FCTX.FHANDLE.PSNLNG)
              5546                              ;
      226     5547    5                     END;
      227     5548    4                  FID.PSN.SN = SUBSTR( DIROPRES.FILE.TEXT,0,DIROPRES.FILE.PSNLNG);
      228     5549    4                  END;
      229     5550    3               I = DIROPRES.FILE.PSNLNG + DIROPRES.FILE.ACCTLNG; /* Append pos.  */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:8    
      230     5551    3               IF I /* PSNLNG + ACCTLNG */ + FID.NAME.L > SIZEC(FCTX.FHANDLE.TEXT)
      231     5552    3               THEN GOTO ERR_TOOLONG;
      232     5553    3               SUBSTR( DIROPRES.FILE.TEXT, I, FID.NAME.L) = FID.NAME.T;
      233     5554    3               END;
      234     5555    3            ELSE IF DIROPRES.FILE.PSNLNG > 0 OR DIROPRES.FILE.STAMP > 512 THEN DO;
      235     5556                                      /* had packset or mad, next lvl is account name */
      236     5557    3                  IF DIROP.NAME.L > 8 THEN GOTO ERR_TOOLONG;
      237     5558    3                  DIROPRES.FILE.ACCTLNG = DIROP.NAME.L;
      238     5559    3                  CALL XLATE( FID.ACCT, FU_XLATE, DIROP.NAME.T);
      239     5560    3                  SUBSTR( DIROPRES.FILE.TEXT, DIROPRES.FILE.PSNLNG, DIROP.NAME.L) = FID
              5560                           .ACCT;
      240     5561    3                  FID.ASN = %FILE#;
      241     5562    3                  END;
      242     5563    3               ELSE DO;     /* had the system, next lvl is a packset (or fid?)   */
      243     5564    3                  IF DIROP.NAME.L > 6 THEN GOTO ERR_TOOLONG;
      244     5565    3                  DIROPRES.FILE.PSNLNG = DIROP.NAME.L;
      245     5566    3                  CALL XLATE( FID.PSN.SN, FU_XLATE, DIROP.NAME.T);
      246     5567    3                  SUBSTR( DIROPRES.FILE.TEXT, 0, DIROP.NAME.L) = FID.PSN.SN;
      247     5568    3                  FID.ACCT = BINASC( 0);
      248     5569    3                  END;
      249     5570
      250     5571    2         CALL SETJIT;
      251     5572    2         CREATUTS = 0;
      252     5573    3         CALL TESTOPEN WHENALTRETURN DO;
      253     5574    3            CALL UNSETJIT;
      254     5575    3            GOTO BAD2;
      255     5576    3            END;
      256     5577    2         CALL UNSETJIT;
      257     5578    2         IF CREATUTS ~= 0 THEN CALL TESTOPEN; /* Didn't get FIT - try harder     */
      258     5579    2         BODY$ = ADDR( DIROPRES.FILE);     /*   might have better info           */
      259     5580    2         CALL FINDSTAMP
      260     5581    3         WHENRETURN DO;
      261     5582    3   NOP_LOOKUP:
      262     5583    3            DIROPRES.FATTR = FCTX.FATTR;
      263     5584    3            END;
      264     5585    3         WHENALTRETURN DO;
      265     5586    3            FCTX$ = UCTX.FCTX$;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:9    
      266     5587    3            IF FCTX.FHANDLE.ACCTLNG > 0 THEN FSID = FCTX.FATTR.FSID;
      267     5588    3            ELSE CALL MAKEFSID( DIROPRES.FILE);
      268     5589    3            CALL MAKEFATTR( DIROPRES.FATTR);
      269     5590    3            DIROPRES.FILE.STAMP = CREATUTS;
      270     5591    3            END;
      271     5592    2         DIROPRES.STAT = %NFS_OK;
      272     5593    2         DIROPRES.FATTR.XATTR = '0'B;
      273     5594    2         RQSCTX.LEN = SIZEC( DIROPRES) + 32;
      274     5595
      275     5596    2       CASE( %NFSPROC_READDIR);
      276     5597    2         IF FCTX.FATTR.TYPE ~= %NFDIR THEN GOTO ERR_NOTDIR;
      277     5598    2         F$TEST$ = DCBADDR( DCBNUM ( F$TEST));
      278     5599    2         EOD = 1;                          /* assume end of directory for now    */
      279     5600    2         IF RQSCTX.LEN ~= SIZEC( READDIR) THEN GOTO BAD_ARG;
      280     5601    2         CALL XSL$NTOHL( I, READDIR.COUNT);
      281     5602    2         MAXDIRRES$ = PINCRW( REPLY$, I/4 /* word length */ - 14);
      282     5603    2         DIRRES$ = REPLY$;
      283     5604    2         CALL XSL$NTOHL( START_COOKIE, READDIR.COOKIE);
      284     5605    2         LIST_ACCTS = 0;                   /* assume we want to list files       */
      285     5606    2         FID = FCTX.FID;
      286     5607    2         IF FCTX.FHANDLE.ACCTLNG = 0
      287     5608    3         THEN DO;                /* want to list accounts, or the whole system   */
      288     5609    3            IF FCTX.FHANDLE.PSNLNG ~= 0
      289     5610    3            THEN LIST_ACCTS = -1;          /* want to list accounts in a PAD     */
      290     5611    3            ELSE IF FCTX.FHANDLE.STAMP ~= %DEVICE#
      291     5612    3               THEN LIST_ACCTS = 1;        /* want to list accounts in the MAD   */
      292     5613    3               ELSE GOTO EODIR;            /* want to list packsets - can't      */
      293     5614    3            IF NOT UCTX.USER.FMBLK THEN GOTO EODIR; /* need priv to list accts   */
      294     5615    3            END;
      295     5616
      296     5617    2         CALL SETJIT;
      297     5618    2         AT_COOKIE = 0;
      298     5619    2         IF READDIRRES.COOKIE ~= 0 THEN
      299     5620    3         DO I = 0 TO 1;
      300     5621    4            IF START_COOKIE = UCTX.COOKIE.ID( I) THEN DO;
      301     5622    4               AT_COOKIE = UCTX.COOKIE.ID( I);
      302     5623    4               IF LIST_ACCTS = 0           /* listing files                      */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:10   
      303     5624    4               THEN FID.NAME = UCTX.COOKIE.NAME( I);
      304     5625    4               ELSE FID.ACCT = UCTX.COOKIE.NAME.T( I);
      305     5626    4               END;
      306     5627    3            END;
      307     5628
      308     5629    3         DO WHILE DIRRES$ <= MAXDIRRES$;
      309     5630    3            IF LIST_ACCTS = 0
      310     5631    4            THEN DO;                       /* listing files                      */
      311     5632    4               CALL M$OPEN( OPEN_NEXT_FILE) ALTRET( EODIR);
      312     5633    4               FID.NAME = F$TEST$ -> F$DCB.NAME#;
      313     5634    4               IF AT_COOKIE < START_COOKIE THEN GOTO NEXT_DIR_ENTRY;
      314     5635    4               READDIRRES.NAME.L = FID.NAME.L;
      315     5636    4               CALL XLATE( READDIRRES.NAME.T, FU_XLATE, FID.NAME.T);
      316     5637    4               END;
      317     5638    4            ELSE DO;                       /* listing accounts                   */
      318     5639    4   TRY_NEXT_ACCT:;
      319     5640    4               IF LIST_ACCTS > 0      /* listing PAD, remove PSN for NXTA open   */
      320     5641    4               THEN FID.PSN.SN = '      ';
      321     5642    4               CALL M$OPEN( OPEN_NEXT_ACCT)
      322     5643    5               WHENALTRETURN DO;
      323     5644    6                  IF B$TCB.ALT$->B$ALT.ERR.ERR# = %E$NOKEY THEN DO; /* NOACCT    */
      324     5645    6                     FID.ACCT = F$TEST$ -> F$DCB.ACCT#;
      325     5646    6                     GOTO TRY_NEXT_ACCT;
      326     5647    6                     END;
      327     5648    5                  IF B$TCB.ALT$->B$ALT.ERR.ERR# ~= %E$NOFILE THEN GOTO EODIR;
      328     5649                            /* this is the only error that we can keep going with     */
      329     5650    5                  END;
      330     5651    4               FID.ACCT = F$TEST$ -> F$DCB.ACCT#;
      331     5652    4               IF LIST_ACCTS > 0           /* listing PAD, need to get PSN       */
      332     5653    4               THEN CALL M$MADMUCK( GET_PSN) ALTRET( TRY_NEXT_ACCT);
      333     5654    4               CALL M$OPEN( OPEN_ACCT_FIT) ALTRET( TRY_NEXT_ACCT);
      334     5655    4               IF AT_COOKIE < START_COOKIE THEN GOTO NEXT_DIR_ENTRY;
      335     5656    4               CALL INDEX( READDIRRES.NAME.L, ' ', FID.ACCT);
      336     5657    4               CALL XLATE( READDIRRES.NAME.T, FU_XLATE, FID.ACCT);
      337     5658    4               END;
      338     5659    3            F$ = ADDR( FM$FIT );
      339     5660    3            CALL XSF$LOCCODP( F$, 04 )
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:11   
      340     5661    4            WHENRETURN DO;
      341     5662    4               CALL XSL$HTONL( READDIRRES.FILEID, MOD( CODE04.CREATION.TIME, %(BITBIN(
              5662                        '040000000'X))));
      342     5663    4               END;
      343     5664    3            READDIRRES.PRESENT = 1;
      344     5665    3            DIRRES$ = PINCRW( DIRRES$, SIZEW( READDIRRES));
      345     5666    3   NEXT_DIR_ENTRY:;
      346     5667    3            AT_COOKIE = AT_COOKIE + 1;
      347     5668    3            CALL XSL$HTONL (READDIRRES.COOKIE, AT_COOKIE);
      348     5669    3            END;
      349     5670    2         EOD = 0;                /* not end of directory, just ran out of room   */
      350     5671
      351     5672    2   EODIR: ;
      352     5673    2         READDIRRES.PRESENT = 0;
      353     5674    2         READDIRRES.EOF = EOD;
      354     5675    2         IF UCTX.COOKIE.ID( 0) ~= AT_COOKIE
      355     5676    2         THEN UCTX.COOKIE( 1) = UCTX.COOKIE( 0);
      356     5677    2         UCTX.COOKIE.ID( 0) = AT_COOKIE;
      357     5678    2         IF LIST_ACCTS = 0                 /* listing files                      */
      358     5679    2         THEN UCTX.COOKIE.NAME( 0) = FID.NAME;
      359     5680    2         ELSE UCTX.COOKIE.NAME.T( 0) = FID.ACCT;
      360     5681    2         RQSCTX.REPLYHDR.RESULT0 = %NFS_OK;
      361     5682    2         RQSCTX.LEN = POFFC( ADDR( READDIRRES.NAME), REPLY$) +32;
      362     5683    2         CALL UNSETJIT;
      363     5684
      364     5685    2       CASE( %NFSPROC_REMOVE);
      365     5686    2         IF RQSCTX.LEN ~= 4* SIZEW( DIROP) THEN GOTO BAD_ARG;
      366     5687    2         IF FCTX.FHANDLE.ACCTLNG = 0 OR FCTX.FID.ASN ~= %FILE#
      367     5688    2           OR FCTX.FID.NAME.L > 0 THEN GOTO ERR_ACCES; /* not a .ACCT            */
      368     5689    2         CALL FINDDIROP ALTRET( BAD2);
      369     5690    2         CALL DELETE_FILE ALTRET( BAD2);
      370     5691    2         REPLY.STAT = %NFS_OK;
      371     5692    2         RQSCTX.LEN = 32+4;
      372     5693
      373     5694    2       CASE( %NFSPROC_RENAME);
      374     5695    2         CLOSE_RENAME.PROCATTR_ = VECTOR( NIL);
      375     5696    2         SAVE_FCTX$ = FCTX$;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:12   
      376     5697    2         TO$ = PINCRW( BODY$, SIZEW( DIROP));
      377     5698    2         IF RQSCTX.LEN ~= 4*( SIZEW( DIROP) + SIZEW( TO$->DIROP)) THEN GOTO BAD_ARG;
      378     5699    2         IF FCTX.FHANDLE.ACCTLNG = 0 OR FCTX.FID.ASN ~= %FILE#
      379     5700    2           OR FCTX.FID.NAME.L > 0 OR DIROP.DIR ~= TO$-> DIROP.DIR
      380     5701    2         THEN GOTO ERR_ACCES;
      381     5702    2         CALL FINDDIROP ALTRET( BAD2);
      382     5703    2         IF NOT UCTX.FFLG.DELF THEN GOTO ERR_PERM;
      383     5704    2         CALL CHECK_OWNER
      384     5705    3         WHENALTRETURN DO;
      385     5706    3            CALL CHECK_WRITE ALTRET( ERR_ACCES);
      386     5707    3            END;
      387     5708    2         F$ = FCTX$;                       /* FCTX of file to move               */
      388     5709    2         FCTX$ = SAVE_FCTX$;               /* FCTX of the account                */
      389     5710    2         SAVE_FCTX$ = F$;
      390     5711    2         BODY$ = TO$;       /* look if the TO file exists - if so, delete it     */
      391     5712    3         CALL FINDDIROP WHENRETURN DO;     /* already have this file on CP-6     */
      392     5713    3            CALL DELETE_FILE ALTRET( RENAME_DEL_ERR);
      393     5714    3            END;
      394     5715    3         WHENALTRETURN DO;
      395     5716    3   RENAME_DEL_ERR:
      396     5717    3            IF REPLY.STAT ~= %NFSERR_NOENT THEN GOTO BAD2;
      397     5718    3            END;
      398     5719    2         BODY$ = RQSCTX.BODY$;
      399     5720    2         FCTX$ = SAVE_FCTX$;               /* the FROM file                      */
      400     5721    2         FID = FCTX.FID;
      401     5722    2         CALL TIMEVAL( FCTX.FATTR.MTIME, FU_TIME);
      402     5723    2         FCTX.FATTR.ATIME = FCTX.FATTR.MTIME;
      403     5724    2         UFATTR.Q.FATTR = FCTX.FATTR;
      404     5725    2         UFATTR.Q.MODTIME = FU_TIME;
      405     5726    2         IF FCTX.FATTR.XATTR.UFIT & FCTX.FITMOD
      406     5727    2         THEN CLOSE_RENAME.PROCATTR_ = FPT_CLOSE.PROCATTR_;
      407     5728    2         CLOSE_RENAME.V.DCB# = FCTX.DCB#;
      408     5729    3         IF CLOSE_RENAME.V.DCB# = 0 THEN DO;
      409     5730    3            CALL TESTOPEN ALTRET( BAD2);
      410     5731    3            CLOSE_RENAME.V.DCB# = DCBNUM( F$TEST);
      411     5732    3            END;
      412     5733    3         CALL M$REW( CLOSE_RENAME) WHENALTRETURN DO; END;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:13   
      413     5734    2         FID.NAME.L = TO$->DIROP.NAME.L;   /* the name to use for the RENAME     */
      414     5735    2         CALL XLATE( FID.NAME.T, FU_XLATE, TO$->DIROP.NAME.T);
      415     5736
      416     5737    2         CALL M$CLOSE( CLOSE_RENAME) ALTRET( ERR_ACCES);
      417     5738    2         FCTX.FITMOD = '0'B;
      418     5739    2         I = TO$->DIROP.DIR.ACCTLNG + TO$->DIROP.DIR.PSNLNG;
      419     5740    2         SUBSTR( TO$->DIROP.DIR.TEXT,I,FID.NAME.L) = FID.NAME.T;
      420     5741    2         TO$->DIROP.DIR.STAMP = FCTX.FHANDLE.STAMP;
      421     5742    2         FCTX.FID.NAME = TO$->DIROP.DIR;   /* Save the new fhandle               */
      422     5743    2         FCTX.RENAMED = '1'B;
      423     5744    3         IF FCTX.DCB# ~= 0 THEN DO;
      424     5745    3            FCTX.DCB# = 0;
      425     5746    3            CALL M$RELDCB( CLOSE_RENAME);
      426     5747    3            DS.P.FCNT( FU_PROC#) = DS.P.FCNT( FU_PROC#) - 1;
      427     5748    3            END;
      428     5749
      429     5750    2         FCTX$ = FU_FCTX$;       /* look for renamed FCTX, if exists, delete it  */
      430     5751    3         DO WHILE FCTX$ ~= ADDR( NIL);
      431     5752    3            F$ = FCTX.LNK$;                /* next FCTX in the chain             */
      432     5753    3            IF FCTX.FHANDLE = TO$->DIROP.DIR THEN CALL FUG$REMOVE_FCTX( FCTX);
      433     5754    3            FCTX$ = F$;
      434     5755    3            END;
      435     5756
      436     5757    2         REPLY.STAT = %NFS_OK;
      437     5758    2         RQSCTX.LEN = 32+4;
      438     5759
      439     5760    2       CASE( %NFSPROC_CREATE);
      440     5761    2         IF FCTX.FATTR.TYPE ~= %NFDIR THEN GOTO ERR_NOTDIR;
      441     5762    2         IF FCTX.FHANDLE.ACCTLNG = 0 OR NOT UCTX.FFLG.CREATE THEN GOTO ERR_ACCES;
      442     5763    2         FPT_CLOSE.V.DCB# = DCBNUM( F$TEST);
      443     5764    2         FPT_CLOSE.V.DISP# = %SAVE#;
      444     5765    2         FPT_CLOSE.V.OPER.CHGATT# = '1'B;
      445     5766    2         TO$ = FCTX$;
      446     5767    3         CALL FINDDIROP WHENRETURN DO;     /* already have this file on CP-6     */
      447     5768    3            IF NOT UCTX.FFLG.DELR THEN GOTO ERR_ACCES;
      448     5769    3            IF NOT UCTX.FFLG.REATTR THEN GOTO ERR_PERM;
      449     5770    3            CALL CHECK_WRITE ALTRET( ERR_ACCES);
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:14   
      450     5771    3            DIROPRES.STAT = %NFS_OK;
      451     5772    3            FID = FCTX.FID;
      452     5773    3            IF FCTX.DCB# ~= 0
      453     5774    3            THEN FPT_CLOSE.V.DCB# = FCTX.DCB#;
      454     5775    3            ELSE CALL TESTOPEN ALTRET( BAD2);
      455     5776    3            CALL UPDATEFATTR( PINCRW( ADDR(DIROP), SIZEW( DIROP))-> DIROP);
      456     5777    3            UFATTR.Q.FATTR = FCTX.FATTR;
      457     5778    3            END;
      458     5779    3         WHENALTRETURN DO;
      459     5780    3            IF DIROPRES.STAT ~= %NFSERR_NOENT THEN GOTO BAD2;
      460     5781    3            DIROPRES.STAT = %NFS_OK;
      461     5782    3            FCTX$ = ADDR( NIL);
      462     5783    3            CALL SETJIT;
      463     5784    3            CALL CREATOPN; CALL CREATCLNUP; /* messes with the FPT too much      */
      464     5785    3            CALL UNSETJIT;
      465     5786    3            UFATTR.Q.FATTR.TYPE = 0;       /* It's garbage at the moment         */
      466     5787    3            CALL M$CLOSE( FPT_CLOSE) ALTRET( ERR_ACCES);
      467     5788    3            IF DIROPRES.STAT ~= %NFS_OK THEN GOTO BAD2;
      468     5789    3            CALL TESTOPEN ALTRET( BAD2);
      469     5790    3            CALL MAKEFSID( DIROP.DIR);
      470     5791    3            CALL MAKEFATTR( UFATTR.Q.FATTR);
      471     5792    3            DIROP.DIR.STAMP = CREATUTS;
      472     5793    3            UFATTR.Q.FATTR.UID = UCTX.USER.UID;
      473     5794    3            UFATTR.Q.FATTR.GID = UCTX.USER.GID;
      474     5795    3            UFATTR.Q.FATTR.XATTR.UFIT = '1'B;
      475     5796                                      /* make addr(FCTX.FATTR) = addr(UFATTR.Q.FATTR) */
      476     5797    3            FCTX$ = PINCRW( ADDR( UFATTR.Q.FATTR), POFFW( FCTX$, ADDR(FCTX.FATTR)));
      477     5798    3            CALL UPDATEFATTR( PINCRW( ADDR(DIROP), SIZEW( DIROP))-> DIROP);
      478     5799    3            END;
      479     5800    3         CALL M$REW( FPT_CLOSE) WHENALTRETURN DO; END; /* open file if not       */
      480     5801    2         IF DIROPRES.STAT ~= %NFS_OK THEN GOTO BAD2;
      481     5802    2         UFATTR.Q.MODTIME = FU_TIME;
      482     5803    2         DIROPRES.FILE = DIROP.DIR;
      483     5804    2         DIROPRES.FATTR = UFATTR.Q.FATTR;
      484     5805    2         DIROPRES.FATTR.XATTR = '0'B;
      485     5806    2         DELETE_ALL.V.DCB# = FPT_CLOSE.V.DCB#;
      486     5807    3         IF FCTX.FATTR.SIZE = 0 THEN CALL M$DELREC( DELETE_ALL) WHENALTRETURN DO; END;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:15   
      487     5808    2         CALL M$CLOSE( FPT_CLOSE) ALTRET( ERR_ACCES);
      488     5809    2         RQSCTX.LEN = 32+SIZEC( DIROPRES);
      489     5810
      490     5811    2       CASE( %NFSPROC_SETATTR);
      491     5812    2         IF FCTX.FATTR.TYPE ~= %NFREG THEN GOTO ERR_ISDIR;
      492     5813    2         IF NOT UCTX.FFLG.REATTR THEN GOTO ERR_PERM;
      493     5814    2         CALL CHECK_OWNER ALTRET( ERR_PERM);
      494     5815    2         CALL TIMEVAL( FCTX.FATTR.MTIME, FU_TIME);
      495     5816    2         CALL UPDATEFATTR( DIROP.NAME);
      496     5817    2         FCTX.FITMOD = '0'B;
      497     5818    2         UFATTR.Q.FATTR = FCTX.FATTR;
      498     5819    2         UFATTR.Q.MODTIME = FU_TIME;
      499     5820    2         FID = FCTX.FID;
      500     5821    2         FPT_CLOSE.V.DISP# = 0;
      501     5822    2         FPT_CLOSE.V.DCB# = FCTX.DCB#;
      502     5823    2         FPT_CLOSE.V.OPER.CHGATT# = '1'B;
      503     5824    3         IF FPT_CLOSE.V.DCB# = 0 THEN DO;
      504     5825    3            CALL TESTOPEN ALTRET( BAD2);
      505     5826    3            FPT_CLOSE.V.DCB# = DCBNUM( F$TEST);
      506     5827    3            END;
      507     5828    3         CALL M$REW( FPT_CLOSE) WHENALTRETURN DO; END;
      508     5829    2         CALL M$CLOSE( FPT_CLOSE);
      509     5830    2         CALL REOPEN;
      510     5831    2         ATTRSTAT.STAT = %NFS_OK;
      511     5832    2         ATTRSTAT.FATTR = FCTX.FATTR;
      512     5833    2         ATTRSTAT.FATTR.XATTR = '0'B;
      513     5834    2         RQSCTX.LEN = 32 + SIZEC( ATTRSTAT);
      514     5835
      515     5836    2       CASE( %NFSPROC_STATFS);        /* not really much meaning on this CP-6    */
      516     5837    2         STATFS.STAT = %NFS_OK;
      517     5838    2         CALL XSL$HTONL (STATFS.TSIZE, DS.TRANSIZE);
      518     5839    2         STATFS.BSIZE = STATFS.TSIZE;
      519     5840    2         STATFS.BLOCKS = STATFS.TSIZE;     /* just numbers out of the air        */
      520     5841    2         STATFS.BFREE = STATFS.TSIZE;
      521     5842    2         STATFS.BAVAIL = STATFS.TSIZE;
      522     5843    2         RQSCTX.LEN = 32 + SIZEC( STATFS);
      523     5844
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:16   
      524     5845    2       CASE( %NFSPROC_READ);
      525     5846    2         IF FCTX.FATTR.TYPE ~= %NFREG THEN GOTO ERR_ISDIR;
      526     5847    2         IF NOT UCTX.FFLG.READ THEN GOTO ERR_ACCES;
      527     5848    2         CALL CHECK_READ ALTRET( ERR_ACCES);
      528     5849    2         IF FCTX.DCB# = 0 THEN CALL REALOPEN ALTRET( BAD2);
      529     5850    2         I = FCTX.FATTR.SIZE;              /* Detect changes therein             */
      530     5851    2         CALL TIMEVAL( FCTX.FATTR.ATIME, FU_TIME);
      531     5852    2         CALL FUI$IORQS( RQSCTX);
      532     5853    2         IF I ~= FCTX.FATTR.SIZE THEN FCTX.FITMOD = '1'B;
      533     5854
      534     5855    2       CASE( %NFSPROC_WRITE);
      535     5856    2         IF FCTX.FATTR.TYPE ~= %NFREG THEN GOTO ERR_ISDIR;
      536     5857    2         IF NOT UCTX.FFLG&%(FFLG_WNEW#|FFLG_UPD#) THEN GOTO ERR_ACCES;
      537     5858    2         CALL CHECK_WRITE ALTRET( ERR_ACCES);
      538     5859    2         IF FCTX.DCB# = 0 THEN CALL REALOPEN ALTRET( BAD2);
      539     5860    2         IF FCTX.FATTR.SIZE = 0            /* if the file is empty               */
      540     5861    2           AND FCTX.FATTR.XATTR.UFIT       /* and was created by NFS             */
      541     5862    3         THEN DO;
      542     5863    3            I = MINIMUM( 256, WRITEARGS.COUNT);
      543     5864    3            TEXTMODE = %YES#;
      544     5865    3            CALL SEARCH( FSID, FSID, FU_BINSRCH, SUBSTR( WRITEARGS.DATA,0,I))
      545     5866    4            WHENRETURN DO;
      546     5867    4               TEXTMODE = %NO#;            /* Set flag if we found nonprintable  */
      547     5868    4               END;
      548     5869             /* if we're writing into the middle of an empty file, must be binary     */
      549     5870    3            IF WRITEARGS.OFFSET > 0 THEN TEXTMODE = %NO#;
      550     5871    3            IF TEXTMODE ~= FCTX.FATTR.XATTR.TEXTMODE /* change text/bin mode     */
      551     5872    4            THEN DO;
      552     5873    4               FID = FCTX.FID;
      553     5874    4               FPT_CLOSE.V.DCB# = FCTX.DCB#;
      554     5875    4               FPT_CLOSE.V.DISP# = 0;
      555     5876    4               FPT_CLOSE.V.OPER.CHGATT# = '0'B;
      556     5877    5               CALL M$CLOSE( FPT_CLOSE) WHENALTRETURN DO; END;
      557     5878    4               CALL TESTOPEN;              /* Get FPARAM items                   */
      558     5879    4               CALL CHANGEORG; /* Recreate with other ORG with FMEFT to keep dates */
      559     5880    4               CALL CREATCLNUP;            /* Reinitialise FPT_OPEN              */
      560     5881    4               CALL UNSETJIT;              /* Restore PRIV.ACTIVE                */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:17   
      561     5882    4               END;
      562     5883    3            END;
      563     5884    2         CALL TIMEVAL( FCTX.FATTR.MTIME, FU_TIME);
      564     5885    2         FCTX.FATTR.ATIME = FCTX.FATTR.MTIME;
      565     5886    2         FCTX.FITMOD = '1'B;
      566     5887    2         CALL FUI$IORQS( RQSCTX);
      567     5888
      568     5889    2       CASE( ELSE);
      569     5890    2   ERR_ACCES: REPLY.STAT = %NFSERR_ACCES; GOTO BAD2;
      570     5891    2   ERR_PERM: REPLY.STAT = %NFSERR_PERM; GOTO BAD2;
      571     5892    2   ERR_TOOLONG: REPLY.STAT = %NFSERR_NAMETOOLONG; GOTO BAD2;
      572     5893    2   ERR_NOTDIR: REPLY.STAT = %NFSERR_NOTDIR; GOTO BAD2;
      573     5894    2   ERR_ISDIR: REPLY.STAT = %NFSERR_ISDIR; GOTO BAD2;
      574     5895    2   BAD2: RQSCTX.LEN = 32+4;
      575     5896
      576     5897    2       END;
      577     5898    1      CALL XSL$QSENDTO( RQSCTX.LEN, FU_NFSSOCKET, RQSCTX.REPLYHDR, RQSCTX.LEN, 0,
      578     5899    1        RQSCTX.FROMADDR, 8);
      579     5900    1      RETURN;
      580     5901
      581     5902        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:18   
      582     5903        /*F* NAME: FUN$GETSTAMP
      583     5904             Purpose:
      584     5905                   Fill in the STAMP part of a DIROPRES-style reply for the mount
      585     5906                   server.  Reply status is non-zero only if the request is not valid.
      586     5907        */
      587     5908        /*D* NAME: FUN$GETSTAMP
      588     5909             Inputs:
      589     5910                   RQSCTX - contains the DIROPRES to get the stamp for.
      590     5911             Outputs:
      591     5912                   RQSCTX - contains the filled in DIROPRES if it is a valid account.
      592     5913        */
      593     5914    1   FUN$GETSTAMP: ENTRY( RQSCTX);
      594     5915    1      REPLY$ = ADDR( RQSCTX.REPLYHDR.RESULTS);
      595     5916    1      BODY$ = ADDR( DIROPRES.FILE);
      596     5917    1      CALL FINDSTAMP                       /* Only look for the FCTX             */
      597     5918    2      WHENALTRETURN DO;
      598     5919    2         CALL GETFCTX ALTRET( BAD2);
      599     5920    2         DIROPRES.FILE.STAMP = FCTX.FHANDLE.STAMP;
      600     5921    2         END;
      601     5922    1      DIROPRES.STAT = %NFS_OK;
      602     5923    1      RQSCTX.LEN = 32+SIZEC( DIROPRES);
      603     5924    1      RETURN;
      604     5925
      605     5926        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:19   
      606     5927        /*F* NAME: FUN$CLOSE
      607     5928             Purpose:
      608     5929                   To close any DCBs in the FCTX chain that are older than DS.OPENLIM
      609     5930                   seconds.
      610     5931        */
      611     5932    1   FUN$CLOSE: ENTRY;
      612     5933
      613     5934    1      I = FU_TIME - FU_OPENLIM;            /* AGE limit                          */
      614     5935    1      REPLY$ = ADDR(FID);        /* Place for REOPEN to put in an error status   */
      615     5936    1      FCTX$ = FU_FCTX$;
      616     5937    1      FPT_CLOSE.V.DISP# = 0;
      617     5938    2      DO WHILE FCTX$ ~= ADDR( NIL);
      618     5939    3         IF FCTX.AGE <= I AND FCTX.DCB# ~= 0 AND FCTX.PROC# = FU_PROC# THEN DO;
      619     5940    3            FPT_CLOSE.V.OPER.CHGATT# = FCTX.FATTR.XATTR.UFIT & FCTX.FITMOD;
      620     5941    3            FCTX.FITMOD = '0'B;
      621     5942    3            CALL TIMEVAL( FCTX.FATTR.ATIME, FU_TIME);
      622     5943    3            FID = FCTX.FID;
      623     5944    3            UFATTR.Q.FATTR = FCTX.FATTR;
      624     5945    3            UFATTR.Q.MODTIME = FU_TIME;
      625     5946    3            FPT_CLOSE.V.DCB# = FCTX.DCB#;
      626     5947    4            CALL M$CLOSE( FPT_CLOSE) WHENALTRETURN DO; END;
      627     5948    3            CALL REOPEN;
      628     5949    3            END;
      629     5950    2         FCTX$ = FCTX.LNK$;
      630     5951    2         END;
      631     5952    1      RETURN;
      632     5953
      633     5954        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:20   
      634     5955        /*F* NAME: FUN$RELDCB
      635     5956             Purpose:
      636     5957                   To release the DCB being used by the FCTX parameter.
      637     5958        */
      638     5959        /*D* NAME: FUN$RELDCB
      639     5960             Inputs:
      640     5961                   FCTX (RQSCTX) - the FCTX block to release the dcb for.
      641     5962        */
      642     5963    1   FUN$RELDCB: ENTRY( RQSCTX);
      643     5964
      644     5965    1      FPT_CLOSE.V.DISP# = 0;
      645     5966    1      FCTX$ = ADDR( RQSCTX);
      646     5967    2      IF FCTX.DCB# ~= 0 THEN DO;
      647     5968    2         FPT_CLOSE.V.DCB# = FCTX.DCB#;
      648     5969    2         FCTX.DCB# = 0;
      649     5970    2         FPT_CLOSE.V.OPER.CHGATT# = FCTX.FATTR.XATTR.UFIT & FCTX.FITMOD;
      650     5971    2         FID = FCTX.FID;
      651     5972    2         CALL TIMEVAL( FCTX.FATTR.ATIME, FU_TIME);
      652     5973    2         UFATTR.Q.FATTR = FCTX.FATTR;
      653     5974    2         UFATTR.Q.MODTIME = FU_TIME;
      654     5975    3         CALL M$CLOSE( FPT_CLOSE) WHENALTRETURN DO; END;
      655     5976    3         CALL M$RELDCB( FPT_CLOSE) WHENALTRETURN DO; END;
      656     5977    2         END;
      657     5978    1      RETURN;
      658     5979
      659     5980        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:21   
      660     5981        /*I*  NAME:    FINDUCTX
      661     5982              Purpose: To find/create the UCTX and FCTX for this FHANDLE.
      662     5983              Inputs:  FHANDLE - the file handle of the file/account to look for.
      663     5984              Outputs: FCTX$ - points to the FCTX block for this FHANDLE.
      664     5985                       UCTX$ - points to the UCTX block for this FHANDLE.
      665     5986              Algorithm: We've got a chain of files (FU_FCTX$) that we're using, look
      666     5987                       through it to see if we've got a match.  If not we've got to
      667     5988                       create a new FCTX (if this file/account exists).  Now that we've
      668     5989                       got an FCTX, look for a UCTX for THIS user, if none is found,
      669     5990                       we'll have to build one of those too.
      670     5991              Altreturns: if the file/account doesn't exist, or is not the same file/
      671     5992                       account that we were looking at (STALE - CP/6 changed it on us).
      672     5993        */
      673     5994    1   FINDUCTX: PROC ALTRET;
      674     5995
      675     5996    2   DCL FND_STAMP SBIN;           /* >= 0 : set stamp, > 0 : don't return UCTX    */
      676     5997    2   DCL LEN SBIN;
      677     5998
      678     5999    2      IF RQSCTX.LEN < SIZEC(FHANDLE) THEN RETURN;
      679     6000    2      FND_STAMP = -1;
      680     6001    2      FCTX$ = FU_FCTX$;                    /* see if we already have this FCTX   */
      681     6002    3      DO WHILE FCTX$ ~= ADDR( NIL);
      682     6003    3         IF FCTX.FHANDLE = FHANDLE
      683     6004    3         THEN IF NOT FCTX.RENAMED THEN EXIT;
      684     6005    4            ELSE DO;
      685     6006    4               FHANDLE = FCTX.FID.NAME;
      686     6007    4               FCTX$ = FU_FCTX$;           /* Renamed, try again with new name   */
      687     6008    4               END;
      688     6009    3         ELSE FCTX$ = FCTX.LNK$;
      689     6010    3         END;
      690     6011
      691     6012    2   GOT_FCTX$:
      692     6013    3      IF FCTX$ = ADDR( NIL) THEN DO;       /* don't have this FCTX, build it     */
      693     6014    3         FID = FID_INIT;                   /* unpack FHANDLE into FID ...        */
      694     6015    4         IF FHANDLE.PSNLNG + FHANDLE.ACCTLNG = 0 THEN DO; /* MAD or SYSTEM       */
      695     6016    4            FID.ASN = FHANDLE.STAMP;
      696     6017    4            FID.RES = 'NO';
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:22   
      697     6018    4            FID.RES = 'ME';                /* Bug in M$OPEN                      */
      698     6019    4            END;
      699     6020    4         ELSE IF FHANDLE.ACCTLNG = 0 THEN DO; /* only PSN, no account            */
      700     6021    4               FID.ASN = %DEVICE#;
      701     6022    4               FID.PSN.SN = SUBSTR(FHANDLE.TEXT,0,FHANDLE.PSNLNG);
      702     6023    4               FID.ACCT = BINASC(0);
      703     6024    4               END;
      704     6025    4            ELSE DO;        /* have account, possibly PSN, possible file name    */
      705     6026    4               FID.ASN = %FILE#;
      706     6027    4               FID.PSN.SN = SUBSTR(FHANDLE.TEXT,0,FHANDLE.PSNLNG);
      707     6028    4               FID.ACCT = SUBSTR(FHANDLE.TEXT,FHANDLE.PSNLNG,FHANDLE.ACCTLNG);
      708     6029    4               FID.NAME.T = SUBSTR(FHANDLE.TEXT, FHANDLE.PSNLNG+FHANDLE.ACCTLNG);
      709     6030    4               CALL INDEX( I, ' ', FID.NAME.T, 0, %ASCBIT(' '));
      710     6031    4               FID.NAME.L = I;
      711     6032    4               END;
      712     6033    3         CREATUTS = 0;                /* see if we had to kludge up a fake FIT   */
      713     6034    3         CALL TESTOPEN ALTRET( ALT);       /* check if this file/account exists  */
      714     6035    3         IF CREATUTS ~= 0 AND FHANDLE.ACCTLNG ~= 0 AND FID.NAME.L = 0
      715     6036    4         THEN DO;           /* openning up an account, and we didn't get the FIT */
      716     6037    4            IF FHANDLE.PSNLNG = 0
      717     6038    4            THEN CALL M$MADMUCK( GET_PSN)  /* get PSN if MAD                     */
      718     6039    5               WHENALTRETURN DO;
      719     6040    5   NOT_THERE:     REPLY.STAT = %NFSERR_NOENT;
      720     6041    5                  GOTO ALT;
      721     6042    5                  END;
      722     6043    4            CALL M$OPEN( OPEN_ACCT_FIT) ALTRET( NOT_THERE);
      723     6044    4            END;
      724     6045    3         F$ = ADDR( FM$FIT);
      725     6046    3         CALL XSF$LOCCODP( F$, 04 )
      726     6047    4         WHENRETURN DO;
      727     6048    4            CALL XSL$HTONL( CREATUTS, CODE04.CREATION.TIME);
      728     6049    4            IF FND_STAMP >= 0 THEN FHANDLE.STAMP = CREATUTS;
      729     6050    5            ELSE IF FHANDLE.STAMP ~= MOD( CREATUTS, BITBIN('1000000'O)) THEN DO;
      730     6051    5                  REPLY.STAT = %NFSERR_STALE; /* this file is not the expected one */
      731     6052    5   ALT:           ALTRETURN;
      732     6053    5                  END;
      733     6054    4            END;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:23   
      734     6055    3         IF FU_CTXHD$ = ADDR( NIL) THEN CALL FUA$GETCTX; /* build a new FCTX     */
      735     6056    3         FCTX$ = FU_CTXHD$;
      736     6057    3         FU_CTXHD$ = FCTX.LNK$;
      737     6058    3         FCTX = FU_FCTX;                   /* initialize this new FCTX           */
      738     6059    3         FCTX.FHANDLE = FHANDLE;
      739     6060    3         FCTX.UCTX$ = ADDR( NIL);
      740     6061    3         FCTX.FID = FID;
      741     6062    3         FCTX.LNK$ = FU_FCTX$;
      742     6063    3         FU_FCTX$ = FCTX$;
      743     6064    3         DS.FCNT = DS.FCNT + 1;
      744     6065    3         CALL MAKEFSID( FHANDLE);
      745     6066    3         CALL MAKEFATTR( FCTX.FATTR);
      746     6067    3         END;
      747     6068
      748     6069    2      IF FND_STAMP > 0 THEN RETURN;
      749     6070    2      IF RQSCTX.UCTX$-> UCTX.FCTX$ = FCTX$
      750     6071    2      THEN UCTX$ = RQSCTX.UCTX$;
      751     6072    2      ELSE UCTX$ = FCTX.UCTX$;
      752     6073    3      DO WHILE UCTX$ ~= ADDR( NIL);        /* check chain for this user's UCTX   */
      753     6074    3         IF UCTX.HCTX$ = RQSCTX.UCTX$-> UCTX.HCTX$
      754     6075    3           AND UCTX.USER.UID = RQSCTX.UCTX$-> UCTX.USER.UID
      755     6076    3           AND UCTX.USER.GID = RQSCTX.UCTX$-> UCTX.USER.GID THEN EXIT;
      756     6077    3         UCTX$ = UCTX.FLNK$;
      757     6078    3         END;
      758     6079
      759     6080    2      IF UCTX$ = ADDR( NIL)                /* UCTX not found                     */
      760     6081    3      THEN IF RQSCTX.UCTX$-> UCTX.FCTX$ ~= ADDR( NIL) THEN DO;
      761     6082    3            IF FU_CTXHD$ = ADDR( NIL) THEN CALL FUA$GETCTX;
      762     6083    3            DS.UCNT = DS.UCNT + 1;
      763     6084    3            UCTX$ = FU_CTXHD$;
      764     6085    3            FU_CTXHD$ = UCTX.HLNK$;
      765     6086    3            UCTX = FU_UCTX;
      766     6087    3            UCTX.USER = RQSCTX.UCTX$-> UCTX.USER;
      767     6088    3            UCTX.HCTX$ = RQSCTX.UCTX$-> UCTX.HCTX$;
      768     6089    3            UCTX.HLNK$ = UCTX.HCTX$-> HCTX.UCTX$;
      769     6090    3            UCTX.HCTX$-> HCTX.UCTX$ = UCTX$;
      770     6091    3            END;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:24   
      771     6092    2         ELSE UCTX$ = RQSCTX.UCTX$;
      772     6093
      773     6094    3      IF UCTX.FCTX$ = ADDR( NIL) THEN DO;  /* Hook 'em up.                       */
      774     6095    3         UCTX.FCTX$ = FCTX$;
      775     6096    3         UCTX.FLNK$ = FCTX.UCTX$;
      776     6097    3         FCTX.UCTX$ = UCTX$;
      777     6098    3         FID = FCTX.FID;
      778     6099    3         CALL SETJIT;
      779     6100    3         CALL TESTOPEN;
      780     6101    3         UCTX.FFLG = DCBADDR( DCBNUM( F$TEST))-> F$DCB.FFLG;
      781     6102    3         IF UCTX.USER.SECCHK THEN CALL FUS$SECCHK( UCTX);
      782     6103    4         IF NOT FCTX.FATTR.XATTR.UFIT THEN DO; /* Not NFS created - limit access */
      783     6104    4            UCTX.FFLG.REATTR = '0'B;
      784     6105    4            IF NOT FCTX.FATTR.MODE.OWRITE
      785     6106    4            THEN UCTX.FFLG = UCTX.FFLG & %~(FFLG_WNEW#|FFLG_UPD#);
      786     6107    4            END;
      787     6108    3         CALL UNSETJIT;
      788     6109    3         END;
      789     6110    2      RQSCTX.UCTX$ = UCTX$;
      790     6111    2      FCTX.AGE = FU_TIME;
      791     6112    2      UCTX.AGE = FU_TIME;
      792     6113    2      RETURN;
      793     6114
      794     6115        /*I*  NAME:    FINDDIROP
      795     6116              Purpose: To find/create the UCTX and FCTX for this DIROP.
      796     6117              Inputs:  DIROP - the DIROP for the file to find.
      797     6118                       FCTX$ - points to the account the file exists in.
      798     6119              Outputs: DIROP.DIR - the FHANDLE of the file found.
      799     6120                       FCTX$ - points to the FCTX block for this DIROP (NIL if not fnd).
      800     6121                       UCTX$ - points to the UCTX block for this DIROP.
      801     6122              Algorithm: Create the FHANDLE to look for (except for the STAMP), because
      802     6123                       we don't know that yet.  Check to see if we have this file in
      803     6124                       the FCTX cache (the actual file, not a previously renamed one),
      804     6125                       because we want to get the stamp.  Then go into the FINDUCTX
      805     6126                       code.
      806     6127              Altreturns: If the FHANDLE will get too large if created.  Or something
      807     6128                       in the body of FINDUCTX forces an ALTRETurn.
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:25   
      808     6129        */
      809     6130    2   FINDDIROP: ENTRY ALTRET;
      810     6131
      811     6132    2      IF DIROP.DIR.PSNLNG > 0              /* see if we can treat this like MAD  */
      812     6133    3      THEN DO;
      813     6134    3         CALL M$MADMUCK( GET_PSN)
      814     6135    4         WHENRETURN DO;
      815     6136    4            IF FID.PSN.SN = SUBSTR( DIROP.DIR.TEXT, 0, DIROP.DIR.PSNLNG)
      816     6137    5            THEN DO;
      817     6138    5               DIROP.DIR.TEXT = FID.ACCT;
      818     6139    5               DIROP.DIR.PSNLNG = 0;
      819     6140    5               END;
      820     6141    4            END;
      821     6142    3         END;
      822     6143    2      FND_STAMP = 0;
      823     6144    2      LEN = DIROP.DIR.PSNLNG+DIROP.DIR.ACCTLNG;
      824     6145    2      IF DIROP.NAME.L+LEN > SIZEC(FCTX.FHANDLE.TEXT)
      825     6146    3      THEN DO;
      826     6147    3         REPLY.STAT = %NFSERR_NAMETOOLONG;
      827     6148    3         ALTRETURN;
      828     6149    3         END;
      829     6150    2      CALL XLATE( SUBSTR( DIROP.DIR.TEXT,LEN,DIROP.NAME.L),
      830     6151    2        FU_XLATE, DIROP.NAME.T);
      831     6152
      832     6153    2      FCTX$ = FU_FCTX$;                    /* look for the actual file           */
      833     6154    3      DO WHILE FCTX$ ~= ADDR( NIL);
      834     6155    3         IF ADDR( FCTX.FHANDLE)->NO_STAMP.TEXT = BODY$->NO_STAMP.TEXT
      835     6156    3           AND NOT FCTX.RENAMED
      836     6157    4         THEN DO;
      837     6158    4            FHANDLE.STAMP = FCTX.FHANDLE.STAMP;
      838     6159    4            GOTO GOT_FCTX$;
      839     6160    4            END;
      840     6161    3         FCTX$ = FCTX.LNK$;
      841     6162    3         END;
      842     6163    2      GOTO GOT_FCTX$;
      843     6164
      844     6165        /*I*  NAME:    FINDSTAMP
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:26   
      845     6166              Purpose: To find the stamp for the given FHANDLE if it exists in the
      846     6167                       FCTX cache.
      847     6168              Inputs:  FHANDLE - the FHANDLE to find the stamp for.
      848     6169              Outputs: FHANDLE.STAMP - the stamp found.
      849     6170                       FCTX$ - pointer to the FCTX block for this FHANDLE.
      850     6171              Altreturns: If the FHANDLE was not in the FCTX cache.
      851     6172        */
      852     6173    2   FINDSTAMP: ENTRY ALTRET;
      853     6174
      854     6175    2      FCTX$ = FU_FCTX$;
      855     6176    3      DO WHILE FCTX$ ~= ADDR( NIL);
      856     6177    3         IF ADDR( FCTX.FHANDLE)->NO_STAMP.TEXT = BODY$->NO_STAMP.TEXT
      857     6178    3           AND NOT FCTX.RENAMED
      858     6179    3           AND (BODY$->NO_STAMP.TEXTB ~= '0'B
      859     6180    3           OR FCTX.FHANDLE.STAMP = FHANDLE.STAMP)
      860     6181    4         THEN DO;
      861     6182    4            FHANDLE.STAMP = FCTX.FHANDLE.STAMP;
      862     6183    4            RETURN;
      863     6184    4            END;
      864     6185    3         FCTX$ = FCTX.LNK$;
      865     6186    3         END;
      866     6187    2      ALTRETURN;
      867     6188
      868     6189        /*I*  NAME:    GETFCTX
      869     6190              Purpose: To get only an FCTX for the given FHANDLE.  Doesn't get a UCTX.
      870     6191              Inputs:  FHANDLE - the FHANDLE to create the FCTX for.
      871     6192              Outputs: FCTX$ - points to the FCTX block created.
      872     6193              Altreturns: If the file doesn't exist
      873     6194        */
      874     6195    2   GETFCTX: ENTRY ALTRET;
      875     6196
      876     6197    2      FND_STAMP = 1;
      877     6198    2      FCTX$ = ADDR( NIL);
      878     6199    2      GOTO GOT_FCTX$;
      879     6200
      880     6201    2   END FINDUCTX;
      881     6202        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:27   
      882     6203        /*I*  NAME:    TESTOPEN
      883     6204              Purpose: Test open the file in FID.  Checks for existance/attributes
      884     6205              Inputs:  FID - contains the name of the file/account to test open.
      885     6206              Outputs: FM$FIT - the FIT information of the file/account.
      886     6207              Altreturns: if the file can't be test openned, returns with the
      887     6208                       appropriate NFS error code in REPLY.STAT
      888     6209        */
      889     6210    1   TESTOPEN: PROC ALTRET;
      890     6211
      891     6212        %FPT_OPEN( DCB=F$TEST, NAME=FID.NAME, ACCT=FID.ACCT, SN=FID.PSN, ACS=DIRECT,
      892     6213                   CTG=YES, FUN=UPDATE, ORG=CONSEC, FPARAM=FM$FIT, TEST=YES, SCRUB=YES);
      893     6322        %FPT_GETDCB( DCBNUM=FPT_OPEN.V.DCB#);
      894     6337        %CODE14;
      895     6347
      896     6348    2   DCL MINAGE UBIN;
      897     6349    2   DCL MINF$ PTR;
      898     6350
      899     6351    2      FPT_OPEN.V.DCB# = DCBNUM( F$TEST);
      900     6352    2   ALMOST_THE_TOP: ;
      901     6353    2      FM$FIT.CODES(0) = '0'B;
      902     6354    2   NEARLY_THE_TOP: ;
      903     6355    2      FPT_OPEN.V.ASN# = FID.ASN;
      904     6356    2      FPT_OPEN.V.RES# = FID.RES;
      905     6357    3      CALL M$OPEN( FPT_OPEN) WHENALTRETURN DO;
      906     6358    4         DO SELECT( B$TCB.ALT$->B$ALT.ERR.ERR#);
      907     6359    4            SELECT( %E$NOFILE); IF FID.NAME.L = 0 AND
      908     6360    4              DCBADDR( FPT_OPEN.V.DCB#)-> F$DCB.FFLG
      909     6361    4            THEN GOTO OK;                  /* openning an account                */
      910     6362    4            REPLY.STAT = %NFSERR_NOENT;
      911     6363    4            SELECT( %E$NOACCESS); REPLY.STAT = %NFSERR_ACCES;
      912     6364    4            SELECT( ELSE); REPLY.STAT = %NFSERR_PERM;
      913     6365    4            END;
      914     6366    3      ALTRETURN;
      915     6367    3         END;
      916     6368    2   OK:;
      917     6369    3      IF NOT FM$FIT.CODES(0) THEN DO;      /* Make a dir. if we got nothing      */
      918     6370    3         FM$FIT.CODES.CODE(0) = 1;         /*  ie. a FIT with only a CODE14.     */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:28   
      919     6371    3         FM$FIT.CODES(1) = '340000000002'O;
      920     6372    3         ADDR(FM$FIT.CODES(2))-> CODE14.CGRANS = 1;
      921     6373    3         CREATUTS = FID.ASN;
      922     6374    3         END;
      923     6375             /* Update FU_TIME if this is a real open, so that FM's ATIME < NFS's.    */
      924     6376    2      IF FPT_OPEN.V.DCB# ~= DCBNUM( F$TEST) THEN CALL M$TIME( FU_FPT_TIME);
      925     6377    2      RETURN;
      926     6378
      927     6379
      928     6380        /*I*  NAME:    REALOPEN
      929     6381              Purpose: For the file specified in FCTX, get a DCB for it and open it up.
      930     6382        */
      931     6383    2   REALOPEN: ENTRY ALTRET;
      932     6384    2      CALL M$GETDCB( FPT_GETDCB)
      933     6385    3      WHENRETURN DO;
      934     6386    3         FCTX.DCB# = FPT_OPEN.V.DCB#;
      935     6387    3         DS.P.FCNT( FU_PROC#) = DS.P.FCNT( FU_PROC#) + 1;
      936     6388    3         END;
      937     6389    3      WHENALTRETURN DO;
      938     6390    3         MINF$ = ADDR( NIL);
      939     6391    3         MINAGE = BITBIN( '777777777777'O);
      940     6392    3         F$ = FU_FCTX$;
      941     6393    4         DO WHILE( F$ ~= ADDR( NIL));      /* look for the oldest unused DCB     */
      942     6394    4            IF F$->FCTX.AGE <= MINAGE
      943     6395    4              AND F$->FCTX.DCB# ~= 0
      944     6396    4              AND NOT DCBADDR( F$->FCTX.DCB#) -> F$DCB.FCD#
      945     6397    5            THEN DO;
      946     6398    5               MINAGE = F$->FCTX.AGE;
      947     6399    5               MINF$ = F$;
      948     6400    5               END;
      949     6401    4            F$ = F$->FCTX.LNK$;
      950     6402    4            END;
      951     6403    3         IF MINF$ = ADDR( NIL)
      952     6404    4         THEN DO;
      953     6405    4            CALL M$MERC;
      954     6406    4            CALL M$XXX;
      955     6407    4            END;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:29   
      956     6408    3         FCTX.DCB# = MINF$->FCTX.DCB#;
      957     6409    3         MINF$->FCTX.DCB# = 0;
      958     6410    3         END;
      959     6411    2      FID = FCTX.FID;
      960     6412    2      GOTO ALMOST_THE_TOP;
      961     6413
      962     6414        /*I*  NAME:    REOPEN
      963     6415              Purpose: To reopen the DCB in FCTX (if it doesn't have one, it used
      964     6416                       the F$TEST DCB).
      965     6417        */
      966     6418    2   REOPEN: ENTRY ALTRET;
      967     6419    2      FCTX.CRECNO = 0;
      968     6420    2      FCTX.CHUNK = 0;
      969     6421    2      IF FCTX.DCB# = 0
      970     6422    2      THEN FPT_OPEN.V.DCB# = DCBNUM( F$TEST);
      971     6423    2      ELSE FPT_OPEN.V.DCB# = FCTX.DCB#;
      972     6424    2      GOTO ALMOST_THE_TOP;
      973     6425
      974     6426        /*I*  NAME:    CHANGEORG
      975     6427              Purpose: To open up FCTX file with a different organization - to change
      976     6428                       the text mode of the file.  Opens it up with FMEFT privileges
      977     6429                       so that the FIT times don't change.
      978     6430        */
      979     6431    2   CHANGEORG: ENTRY ALTRET;
      980     6432    2      IF TEXTMODE
      981     6433    3      THEN DO;              /* want a text file (consec), have a keyed file now  */
      982     6434    3         FM$FIT.CODES(2) = '0'B;           /* Zap CODE03 pointer - after CODE02  */
      983     6435    3         FM$FIT.CODES(1) = '0'B;           /* Zap CODE02 pointer                 */
      984     6436    3         END;
      985     6437    3      ELSE DO;              /* want a binary file (keyed), have a consec now     */
      986     6438    3         FM$FIT.CODES(1) = '0'B;           /* Zap CODE03 pointer                 */
      987     6439    3         FPT_OPEN.V.ORG# = %KEYED#;        /* open up as a binary file           */
      988     6440    3         FPT_OPEN.V.TYPE# = 'ur';
      989     6441    3         END;
      990     6442    2      FCTX.FATTR.XATTR.TEXTMODE = TEXTMODE;
      991     6443    2      FPT_OPEN.IFPARAM_ = FPT_OPEN.FPARAM_;
      992     6444    2      B$JIT.PRIV.ACTIVE = %(PR_FMEFT# | PR_FMSEC#);
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:30   
      993     6445
      994     6446        /*I*  NAME:    CREATOPN
      995     6447              Purpose: To create the file specified in FCTX, and open for reading or
      996     6448                       writing.
      997     6449        */
      998     6450    2   CREATOPN: ENTRY ALTRET;
      999     6451    2      FPT_OPEN.FPARAM_ = VECTOR( NIL);     /* FPARAM trashes FM$FIT too early    */
     1000     6452    2      FPT_OPEN.V.FUN# = %CREATE#;
     1001     6453    2      FPT_OPEN.V.OPER.TEST# = '0'B;
     1002     6454    2      IF FCTX$ = ADDR( NIL) OR FCTX.DCB# = 0
     1003     6455    2      THEN FPT_OPEN.V.DCB# = DCBNUM( F$TEST);
     1004     6456    2      ELSE FPT_OPEN.V.DCB# = FCTX.DCB#;
     1005     6457    2      GOTO NEARLY_THE_TOP;       /* Don't clobber FM$FIT in case IFPARAM is set  */
     1006     6458
     1007     6459        /*I*  NAME:    CREATCLNUP
     1008     6460              Purpose: To reset the FPT_OPEN structure for the above entry points.
     1009     6461        */
     1010     6462    2   CREATCLNUP: ENTRY ALTRET;
     1011     6463    2      FPT_OPEN.V.FUN# = %UPDATE#;
     1012     6464    2      FPT_OPEN.V.ORG# = %CONSEC#;
     1013     6465    2      FPT_OPEN.V.TYPE# = BINASC(0);
     1014     6466    2      FPT_OPEN.V.OPER.TEST# = '1'B;
     1015     6467    2      FPT_OPEN.FPARAM_ = VECTOR( FM$FIT);
     1016     6468    2      FPT_OPEN.IFPARAM_ = VECTOR( NIL);
     1017     6469    2      RETURN;
     1018     6470    2   END TESTOPEN;
     1019     6471        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:31   
     1020     6472        /*I*  NAME:    MAKEFATTR
     1021     6473              Purpose: Converts the FIT at FPARAM$ to a network format fit.
     1022     6474              Inputs:  FPARAM$ - points to the FM$FIT structure to be turned into FATTR.
     1023     6475              Outputs: FATTR - the NFS file attributes.
     1024     6476                       CREATUTS - creation UTS (unix format) for use in FHANDLE.
     1025     6477        */
     1026     6478    1   MAKEFATTR: PROC( FATTR);
     1027     6479
     1028     6480        %FU$FATTR( NAME=FATTR, STCLASS=PARAM);
     1029     6510
     1030     6511    2   DCL NFSFIT SBIN;                        /* -1 = none, 0 = inaccurate, 1 = ok  */
     1031     6512    2   DCL 1 MODTIME, 2 SECONDS UBIN, 2 * UBIN;
     1032     6513
     1033     6514    2      FATTR = '0'B;
     1034     6515    2      FATTR.XATTR.TEXTMODE = '1'B;
     1035     6516    2      NFSFIT = -1;
     1036     6517
     1037     6518    2      F$ = ADDR( FM$FIT );
     1038     6519    2      CALL XSF$LOCCODP( F$, 04 )           /* File dates                         */
     1039     6520    3      WHENRETURN DO;
     1040     6521    3         CALL TIMEVAL( FATTR.CTIME, CODE04.CREATION.TIME);
     1041     6522    3         CALL TIMEVAL( FATTR.MTIME, CODE04.MODIFY.TIME);
     1042     6523    3         CALL TIMEVAL( FATTR.ATIME, CODE04.ACCESS.TIME);
     1043     6524    3         CALL XSL$HTONL( CREATUTS, MOD( CODE04.CREATION.TIME, %(BITBIN( '040000000'X)))
              6524                  );
     1044     6525    3         END;
     1045     6526
     1046     6527    2      F$ = ADDR( FM$FIT );
     1047     6528    2      CALL XSF$LOCCODP( F$, 13 )           /* Unix fit.                          */
     1048     6529    3      WHENRETURN DO;
     1049     6530    3         IF CODE13.ID ~= 'nfs fit' OR CODE13.FATTR.TYPE = %NFNON THEN EXIT;
     1050     6531    3         NFSFIT = 1;                       /* assume accurate fit                */
     1051     6532    3         CALL TIMEVAL( MODTIME, CODE13.MODTIME);
     1052     6533    3         IF FATTR.ATIME.SECONDS > MODTIME.SECONDS
     1053     6534    3         THEN CODE13.FATTR.ATIME = FATTR.ATIME; /* CP6 accessed after NFS did    */
     1054     6535    3         IF FATTR.MTIME.SECONDS > MODTIME.SECONDS
     1055     6536    3         THEN NFSFIT = 0;   /* file was modified after we last wrote this fit    */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:32   
     1056     6537    3         FATTR = CODE13.FATTR;
     1057     6538    3         END;
     1058     6539
     1059     6540    2      F$ = ADDR( FM$FIT );
     1060     6541    2      CALL XSF$LOCCODP( F$, 03 )           /* A file                             */
     1061     6542    3      WHENRETURN DO;
     1062     6543    3         FATTR.TYPE = %NFREG;
     1063     6544    3         FATTR.BLOCKS = CODE03.UGRANS;
     1064     6545    3         CALL XSL$HTONL( FATTR.BLOCKS, FATTR.BLOCKS);
     1065     6546    3         IF CODE03.ORG = %KEYED# AND CODE03.TYPE = 'ur'
     1066     6547    3         THEN FATTR.XATTR.TEXTMODE = '0'B;
     1067     6548    4         IF NFSFIT < 0 THEN DO;            /* no NFS FIT - use default modes     */
     1068     6549    4            IF CODE03.ORG = %CONSEC#       /* check if NFS writable              */
     1069     6550    4              OR CODE03.ORG = %UR#
     1070     6551    4              OR NOT FATTR.XATTR.TEXTMODE
     1071     6552    4            THEN FATTR.MODE = '201266'O;   /* Read/Write, but not Exec           */
     1072     6553    4            ELSE FATTR.MODE = '201044'O;   /* Read only                          */
     1073     6554    4            END;
     1074     6555    4         IF NFSFIT < 1 THEN DO;            /* no/inaccurate FIT - update length  */
     1075     6556    4            IF CODE03.NRECS = 0
     1076     6557    4            THEN FATTR.SIZE = 0;
     1077     6558    4            ELSE CALL FUI$FILELEN( FATTR.SIZE, CODE03 )
     1078     6559    5               WHENALTRETURN DO;
     1079     6560    5                  IF CODE03.ORG = %CONSEC# OR CODE03.ORG = %UR#
     1080     6561    5                  THEN FATTR.SIZE = CODE03.UGRANS*4084-CODE03.NRECS*4;
     1081     6562    5                  ELSE IF NOT FATTR.XATTR.TEXTMODE
     1082     6563    5                     THEN FATTR.SIZE = CODE03.NRECS*1024; /* not for holey files */
     1083     6564    5                     ELSE FATTR.SIZE = CODE03.UGRANS*4088-CODE03.NRECS*13;
     1084     6565    5                  END;
     1085     6566    4            CALL XSL$HTONL (FATTR.SIZE, FATTR.SIZE);
     1086     6567    4            END;
     1087     6568    3         END;
     1088     6569
     1089     6570    2      F$ = ADDR( FM$FIT );
     1090     6571    2      CALL XSF$LOCCODP( F$, 14 )           /* A directory                        */
     1091     6572    3      WHENRETURN DO;
     1092     6573    3         FATTR.TYPE = %NFDIR;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:33   
     1093     6574    3         FATTR.MODE = '101377'O;      /* Needs some work - writeall for testing  */
     1094     6575    3         FATTR.SIZE = MAXIMUM( CODE14.CGRANS*32, 32); /* slight exaggeration     */
     1095     6576    3         CALL XSL$HTONL( FATTR.SIZE, FATTR.SIZE);
     1096     6577    3         END;
     1097     6578
     1098     6579    2      FATTR.NLINK = 1;
     1099     6580    2      CALL XSL$HTONL( FATTR.BLOCKSIZE, 4096);
     1100     6581    2      FATTR.FSID = FSID;
     1101     6582    2      FATTR.FILEID = CREATUTS;
     1102     6583
     1103     6584    2   END MAKEFATTR;
     1104     6585
     1105     6586        /*I*  NAME:    UPDATEFATTR
     1106     6587              Purpose: Updates the FIT with the new NFS information desired.
     1107     6588              Inputs:  SATTR - the new attributes to be put into FATTR.
     1108     6589              Outputs: FATTR - the new NFS file attributes.
     1109     6590        */
     1110     6591    1   UPDATEFATTR: PROC( SATTR);
     1111     6592        %FU$SATTR( NAME=SATTR, STCLASS=PARAM);
     1112     6614        %EQU IGNORE# = BITBIN('377377377377'O);
     1113     6615        %EQU MIGNORE# = BITBIN('000000377377'O);
     1114     6616
     1115     6617    2      IF SATTR.MODE ~= %IGNORE#
     1116     6618    2        AND SATTR.MODE ~= %MIGNORE#
     1117     6619    2      THEN FCTX.FATTR.MODE = BINBIT(SATTR.MODE,18) | '200000'O /* regular file */;
     1118     6620    2      IF SATTR.UID ~= %IGNORE# THEN FCTX.FATTR.UID = SATTR.UID;
     1119     6621    2      IF SATTR.GID ~= %IGNORE# THEN FCTX.FATTR.GID = SATTR.GID;
     1120     6622    2      IF SATTR.SIZE = 0 THEN FCTX.FATTR.SIZE = 0; /* means truncate the file     */
     1121     6623    2      IF SATTR.ATIME.SECONDS ~= %IGNORE# THEN FCTX.FATTR.ATIME = SATTR.ATIME;
     1122     6624    2      IF SATTR.MTIME.SECONDS ~= %IGNORE# THEN FCTX.FATTR.MTIME = SATTR.MTIME;
     1123     6625    2   END UPDATEFATTR;
     1124     6626
     1125     6627        /*I*  NAME:    CHECK_READ
     1126     6628              Purpose: To check if the user has UNIX read permission on this file.
     1127     6629              INPUTs:  UCTX - the user to check (UID and GID).
     1128     6630                       FCTX - the file to check the modes for (rwx...)
     1129     6631              ALTRETs: if the user does not have read access to the file.
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:34   
     1130     6632        */
     1131     6633    1   CHECK_READ: PROC ALTRET;
     1132     6634
     1133     6635    2   DCL ACCESS BIT(1);                      /* the access we read                 */
     1134     6636
     1135     6637    2      ACCESS = %NO#;
     1136     6638    2      IF UCTX.USER.UID = 0                 /* root - only needs CP-6 permission  */
     1137     6639    2      THEN ACCESS = %YES#;
     1138     6640    2      ELSE IF UCTX.USER.UID = FCTX.FATTR.UID
     1139     6641    2         THEN ACCESS = FCTX.FATTR.MODE.OREAD;
     1140     6642    2         ELSE IF UCTX.USER.GID = FCTX.FATTR.GID
     1141     6643    2            THEN ACCESS = FCTX.FATTR.MODE.GREAD;
     1142     6644    2            ELSE ACCESS = FCTX.FATTR.MODE.EREAD;
     1143     6645    2      GOTO COMMON;
     1144     6646
     1145     6647        /*I*  NAME:    CHECK_WRITE
     1146     6648              Purpose: To check if the user has UNIX write permission on this file.
     1147     6649              INPUTs:  UCTX - the user to check (UID and GID).
     1148     6650                       FCTX - the file to check the modes for (rwx...)
     1149     6651              ALTRETs: if the user does not have write access to the file.
     1150     6652        */
     1151     6653    2   CHECK_WRITE: ENTRY ALTRET;
     1152     6654
     1153     6655    2      ACCESS = %NO#;
     1154     6656    2      IF UCTX.USER.UID = 0                 /* root - only needs CP-6 permission  */
     1155     6657    2      THEN ACCESS = %YES#;
     1156     6658    2      ELSE IF UCTX.USER.UID = FCTX.FATTR.UID
     1157     6659    2         THEN ACCESS = FCTX.FATTR.MODE.OWRITE;
     1158     6660    2         ELSE IF UCTX.USER.GID = FCTX.FATTR.GID
     1159     6661    2            THEN ACCESS = FCTX.FATTR.MODE.GWRITE;
     1160     6662    2            ELSE ACCESS = FCTX.FATTR.MODE.EWRITE;
     1161     6663    2      GOTO COMMON;
     1162     6664
     1163     6665        /*I*  NAME:    CHECK_OWNER
     1164     6666              Purpose: To check if this UNIX user is the owner on this file.
     1165     6667              INPUTs:  UCTX - the user to check (UID and GID).
     1166     6668                       FCTX - the file to check the owner for (rwx...)
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:35   
     1167     6669              ALTRETs: if the user is not the owner of this file.
     1168     6670        */
     1169     6671    2   CHECK_OWNER: ENTRY ALTRET;
     1170     6672
     1171     6673    2      ACCESS = %NO#;
     1172     6674    2      IF UCTX.USER.UID = 0                 /* root - only needs CP-6 permission  */
     1173     6675    2        OR UCTX.USER.UID = FCTX.FATTR.UID AND UCTX.USER.GID = FCTX.FATTR.GID
     1174     6676    2      THEN ACCESS = %YES#;
     1175     6677
     1176     6678    2   COMMON:
     1177     6679    2      IF ACCESS
     1178     6680    2      THEN RETURN;
     1179     6681    2      ELSE ALTRETURN;
     1180     6682
     1181     6683    2   END CHECK_READ;
     1182     6684        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:36   
     1183     6685        /*I*  NAME:    MAKEFSID
     1184     6686              Purpose: Computes a filesystem ID from the packsetname and account.
     1185     6687                       Making it differentiate between different accounts makes the
     1186     6688                       "mv" command do the right thing when source and destination
     1187     6689                       are not in the same directory (only thing that works in CP-6).
     1188     6690              Inputs:  FHANDLE - the file handle to get a filesystem ID for.
     1189     6691              Outputs: FSID (global) - the file system ID.
     1190     6692        */
     1191     6693    1   MAKEFSID: PROC( FHANDLE);
     1192     6694        %FU$FHANDLE( NAME=FHANDLE, STCLASS=PARAM);
     1193     6715
     1194     6716    2      FSID = 0;
     1195     6717    2      IF FHANDLE.ACCTLNG = 0 THEN FSID = %BITBIN('63702D36'X); /* cp-6           */
     1196     6718    3      ELSE DO I = FHANDLE.PSNLNG+FHANDLE.ACCTLNG DOWNTO 1;
     1197     6719    3         FSID = FSID*4+ASCBIN( SUBSTR( FHANDLE.TEXT,I-1,1));
     1198     6720    3         END;
     1199     6721    2      CALL XSL$HTONL( FSID, FSID);
     1200     6722    2      RETURN;
     1201     6723    2   END MAKEFSID;
     1202     6724
     1203     6725        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:37   
     1204     6726        /*I*  NAME:    DELETE_FILE
     1205     6727              Purpose: To delete the FCTX file.
     1206     6728              Inputs:  FCTX$ - pointer to the FCTX of the file to delete.
     1207     6729        */
     1208     6730    1   DELETE_FILE: PROC ALTRET;
     1209     6731
     1210     6732    2   DCL NO_ENT BIT(1);
     1211     6733
     1212     6734    2      NO_ENT = %NO#;
     1213     6735    2      IF NOT UCTX.FFLG.DELF THEN GOTO ERR_ACCES;
     1214     6736    2      CALL CHECK_OWNER
     1215     6737    3      WHENALTRETURN DO;
     1216     6738    3         CALL CHECK_WRITE ALTRET( ERR_ACCES);
     1217     6739    3         END;
     1218     6740    2      FPT_CLOSE.V.DISP# = %RELEASE#;
     1219     6741    2      FPT_CLOSE.V.DCB# = FCTX.DCB#;
     1220     6742    3      IF FPT_CLOSE.V.DCB# = 0 THEN DO;
     1221     6743    3         FID = FCTX.FID;
     1222     6744    3         CALL TESTOPEN
     1223     6745    4         WHENALTRETURN DO;
     1224     6746    4            IF REPLY.STAT ~= %NFSERR_NOENT THEN GOTO ALT;
     1225     6747    4            NO_ENT = %YES#;
     1226     6748    4            END;
     1227     6749    3         FPT_CLOSE.V.DCB# = DCBNUM( F$TEST);
     1228     6750    3         END;
     1229     6751    2      IF NOT NO_ENT THEN
     1230     6752    2         CALL M$REW( FPT_CLOSE)            /* open file if not                   */
     1231     6753    3         WHENALTRETURN DO;
     1232     6754    3            IF B$TCB.ALT$->B$ALT.ERR.ERR# = %E$NOFILE
     1233     6755    4            THEN DO;
     1234     6756    4               REPLY.STAT = %NFSERR_NOENT;
     1235     6757    4               NO_ENT = %YES#;
     1236     6758    4               END;
     1237     6759    3            END;
     1238     6760    2      IF NOT NO_ENT THEN
     1239     6761    2         CALL M$CLOSE( FPT_CLOSE) ALTRET( ERR_ACCES);
     1240     6762    2      CALL FUG$REMOVE_FCTX( FCTX);
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:38   
     1241     6763
     1242     6764    2   REMOVE_RENAMES:
     1243     6765    2      F$ = FCTX$;                     /* remove any files renamed to this one    */
     1244     6766    2      FCTX$ = FU_FCTX$;
     1245     6767    3      DO WHILE (FCTX$ ~= ADDR(NIL));
     1246     6768    3         IF FCTX.RENAMED AND FCTX.FID.NAME = F$->FCTX.FHANDLE
     1247     6769    4         THEN DO;
     1248     6770    4            CALL FUG$REMOVE_FCTX( FCTX);
     1249     6771    4            GOTO REMOVE_RENAMES;
     1250     6772    4            END;
     1251     6773    3         FCTX$ = FCTX.LNK$;
     1252     6774    3         END;
     1253     6775    2      IF NO_ENT THEN GOTO ALT;
     1254     6776    2      RETURN;
     1255     6777
     1256     6778    2   ERR_ACCES: REPLY.STAT = %NFSERR_ACCES;
     1257     6779    2   ALT: ALTRETURN;
     1258     6780
     1259     6781    2   END DELETE_FILE;
     1260     6782
     1261     6783        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:39   
     1262     6784        /*I*  NAME:    SETJIT
     1263     6785              Purpose: To set the JIT to the user access described in the :nfssec
     1264     6786                       file.  Used to restrict access to what it should be.
     1265     6787        */
     1266     6788    1   SETJIT: PROC;
     1267     6789    2      B$JIT.ACCN = UCTX.USER.ACCN;
     1268     6790    2      B$JIT.UNAME = UCTX.USER.UNAME;
     1269     6791    2      B$JIT.PRIV.ACTIVE = '0'B;
     1270     6792    2      IF UCTX.USER.FMSEC THEN B$JIT.PRIV.ACTIVE.FMSEC = '1'B;
     1271     6793    2      IF UCTX.USER.FMREAD THEN B$JIT.PRIV.ACTIVE.FMREAD = '1'B;
     1272     6794    2      IF FID.ASN ~= %FILE# THEN B$JIT.PRIV.ACTIVE.FMDIAG = '1'B;
     1273     6795    2      RETURN;
     1274     6796
     1275     6797        /*I*  NAME:     UNSETJIT
     1276     6798              Purpose: Resets the JIT to contain the NFS access.
     1277     6799        */
     1278     6800    2   UNSETJIT: ENTRY;
     1279     6801    2      B$JIT.ACCN = FU_MYACCN;
     1280     6802    2      B$JIT.UNAME = FU_MYUNAME;
     1281     6803    2      B$JIT.PRIV.ACTIVE = %(PR_FMSEC# | PR_FMDIAG#);
     1282     6804
     1283     6805    2   END SETJIT;
     1284     6806
     1285     6807        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:40   
     1286     6808        /*I*  NAME:    TIMEVAL
     1287     6809              Purpose: Convert a UTS value into a UNIX timeval, which is two 32-bit
     1288     6810                       values: seconds since 1/1/70 and microsecs into that second.
     1289     6811              Inputs:  UTS - the CP-6 UTS value to be converted.
     1290     6812              Outputs: RESULT - the UNIX timeval in network (8-bit) form.
     1291     6813        */
     1292     6814    1   TIMEVAL: PROC( RESULT, UTS);
     1293     6815
     1294     6816    2   DCL 1 RESULT ALIGNED,
     1295     6817    2         2 SECS UBIN,
     1296     6818    2         2 USECS UBIN;
     1297     6819    2   DCL UTS UBIN;
     1298     6820
     1299     6821        %INCLUDE XUD_UTS_M;
     1300     6903        %XUD_UTS_EQU;
     1301     6914        %EQU ZEROSECS=(8*365+2)*24*60*60;       /* difference between 1/1/70 - 1/1/78 */
     1302     6915
     1303     6916    2   DCL UTSS SBIN AUTO;
     1304     6917    2   DCL FU_TIMEZONESECS SBIN SYMREF;
     1305     6918
     1306     6919    3      IF UTS < %UTS_CUSP# THEN DO;
     1307     6920    3         RESULT.USECS = 10000*MOD(UTS,100);
     1308     6921    3         RESULT.SECS = UTS/100+%ZEROSECS-FU_TIMEZONESECS;
     1309     6922    3         END;
     1310     6923    3      ELSE DO;
     1311     6924    3         UTSS = UTS-%UTS_CUSP#;
     1312     6925    3         RESULT.USECS = 40000*MOD(UTSS,25);
     1313     6926    3         RESULT.SECS = UTSS/25+%UTS_CUSP#/100+%ZEROSECS-FU_TIMEZONESECS;
     1314     6927    3         END;
     1315     6928    2      CALL XSL$HTONL( RESULT.SECS, RESULT.SECS);
     1316     6929    2      CALL XSL$HTONL( RESULT.USECS, RESULT.USECS);
     1317     6930    2      RETURN;
     1318     6931    2   END TIMEVAL;
     1319     6932
     1320     6933    1   END FUN$NFS;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:41   
--  Include file information  --

   XUD_UTS_M.:TOOLE05  is referenced.
   XSL_SOCKET_M.:LIBRARY  is referenced.
   XSL_SOCKET_E.:LIBRARY  is referenced.
   XSL_PERR_C.:LIBRARY  is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   FM$FIT.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUN$NFS.

   Procedure FUN$NFS requires 2665 words for executable code.
   Procedure FUN$NFS requires 44 words of local(AUTO) storage.

    No errors detected in file FUN$NFS.:FUA2TSI    .

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:42   

 Object Unit name= FUN$NFS                                    File name= FUN$NFS.:FUA2TOU
 UTS= NOV 21 '97 11:34:12.00 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none  1378   2542  FUN$NFS
    2   DCB   even  none     0      0  F$TEST
    3  RoData even  UTS    159    237  FUN$NFS
    4   Proc  even  none  2665   5151  FUN$NFS
    5  RoData even  none    34     42  FUN$NFS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        1  FUN$NFS
     4      3                  yes      Std        1  FUN$NFSRQS
     4   2346                  yes      Std        1  FUN$GETSTAMP
     4   2374                  yes      Std        0  FUN$CLOSE
     4   2477                  yes      Std        1  FUN$RELDCB

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    3      0  FU_XLATE                           3    100  FU_BINSRCH
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:43   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 XSL$NTOHL
 yes     yes           Std       2 XSF$LOCCODP
 yes     yes           Std       7 XSL$QSENDTO
         yes           Std       1 FUI$IORQS
         yes           Std       2 XSL$HTONL
         yes           Std       1 FUG$REMOVE_FCTX
         yes           Std       0 FUA$GETCTX
 yes     yes           Std       1 FUS$SECCHK
 yes     yes           Std       2 FUI$FILELEN
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                M$UC                             r    B$TCB$
     FU_FPT_TIME                           F$TEST                                FU_NFSSOCKET
     FU_TIME                               FU_CTXHD$                             FU_FCTX$
     FU_PROC#                              FU_OPENLIM                            FU_FCTX
     FU_UCTX                               FU_MYACCN                             FU_MYUNAME
r    B$DS8                                 FU_TIMEZONESECS                       B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:44   


        1        1        /*M* NFS request handler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* plm=3 */
        8        8        /*P*  NAME: FUN$NFS
        9        9              Purpose:
       10       10                    Contains the modules that do all of the work on NFS files
       11       11                    (except I/O).
       12       12        */
       13       13        /*F*  NAME: FUN$NFSRQS
       14       14              Purpose:
       15       15                    To perform the specified function for an NFS file/account.
       16       16        */
       17       17        /*D*  NAME: FUN$NFSRQS
       18       18              Inputs:
       19       19                    RQSCTX - contains the Request information/operation, and all
       20       20                             relevant information required to perform the operation.
       21       21        */
       22       22
       23       23        FUN$NFS: PROC( RQSCTX);

     23  4 000000   000000 700200 xent  FUN$NFS      TSX0  ! X66_AUTO_1
         4 000001   000054 000001                    ZERO    44,1
         4 000002   000005 710000 4                  TRA     s:5481

       24       24
       25       25        %INCLUDE B$JIT;
       26      315    1   DCL B$JIT$ PTR SYMREF READONLY;
       27      316        %INCLUDE CP_6;
       28      397    1   DCL B$TCB$ PTR SYMREF READONLY;
       29      398            %B$TCB( STCLASS="BASED(B$TCB$)");
       30      401            %B$ALT;
       31      409            %F$DCB;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:45   
       32      466            %FPT_CLOSE( CHGATT=YES, PROCATTR=UFATTR);
       33      508            %FPT_CLOSE( FPTN=CLOSE_RENAME, CHGATT=YES, NAME=FID.NAME);
       34      550            %FPT_TIME( FPTN=FU_FPT_TIME, STCLASS=SYMREF);
       35      569
       36      570            %FPT_OPEN( FPTN=OPEN_NEXT_FILE, DCB=F$TEST, ASN=FILE, TEST=YES, NXTF=YES,
       37      571                       NAME=FID.NAME, ACCT=FID.ACCT, SN=FID.PSN, FPARAM=FM$FIT);
       38      680            %FPT_OPEN( FPTN=OPEN_NEXT_ACCT, DCB=F$TEST, ASN=FILE, TEST=YES, NXTA=YES,
       39      681                       ACCT=FID.ACCT, SN=FID.PSN, SCRUB=YES);
       40      790            %FPT_OPEN( FPTN=OPEN_ACCT_FIT, DCB=F$TEST, ASN=DEVICE, RES='DP', TEST=YES,
       41      791                       ACCT=FID.ACCT, SN=FID.PSN, FPARAM=FM$FIT);
       42      900            %FPT_MADMUCK( FPTN=GET_PSN, READ=YES, ACCT=FID.ACCT, SN=FID.PSN);
       43      916            %FPT_DELREC( FPTN=DELETE_ALL, DELALL=YES);
       44      935
       45      936        %INCLUDE CP_6_SUBS;
       46     1476        %INCLUDE FM$FIT;
       47     1697            %FM$FIT( N=1023, BASED=STATIC);
       48     1700
       49     1701        %INCLUDE FU_NFSSUBS_C;
       50     1796        %INCLUDE FU_NFS_M;
       51     2311        %INCLUDE B_ERRORS_C;
       52     3438        %INCLUDE XSL_PERR_C;
       53     3493        %INCLUDE XSL_SOCKET_E;
       54     3751        %INCLUDE XSL_SOCKET_M;
       55     4499
       56     4500        %FU$RQSCTX( NAME=RQSCTX, STCLASS=PARAM);
       57     4589
       58     4590    1   DCL F$TEST DCB;
       59     4591    1   DCL FU_NFSSOCKET SBIN SYMREF;
       60     4592    1   DCL FU_TIME UBIN SYMREF;
       61     4593    1   DCL FU_CTXHD$ PTR SYMREF;
       62     4594    1   DCL FU_FCTX$ PTR SYMREF;
       63     4595    1   DCL FU_PROC# UBIN SYMREF;
       64     4596    1   DCL FU_OPENLIM UBIN SYMREF;
       65     4597        %FU$FCTX( NAME=FU_FCTX, STCLASS=SYMREF);
       66     4700        %FU$UCTX( NAME=FU_UCTX, STCLASS=SYMREF);
       67     4753    1   DCL FU_MYACCN CHAR(8) SYMREF;
       68     4754    1   DCL FU_MYUNAME CHAR(12) SYMREF;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:46   
       69     4755    1   DCL 1 FU_XLATE CONSTANT SYMDEF,2 *(0:7) CHAR(32) INIT(
       70     4756    1   '################################',' ###.##''#####-$#0123456789:#####',
              4756            /* $ <-> . */
       71     4757    1    '#ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_','#abcdefghijklmnopqrstuvwxyz{|}~#',
       72     4758    1   '################################',' ###.##''#####-$#0123456789:#####',
              4758            /* $ <-> . */
       73     4759    1    '#ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_','#abcdefghijklmnopqrstuvwxyz{|}~#');
       74     4760
       75     4761    1   DCL 1 FU_BINSRCH CONSTANT SYMDEF,2 *(0:255) UBIN(9) UNAL
       76     4762    1    INIT( 1*8,0*6,1*18,0*95,1*0);
       77     4763
       78     4764    1   DCL NULLZ_INIT (0:11) CHAR(1) CONSTANT UNAL INIT (BINASC(0)*0);
       79     4765    1   DCL NULLZ REDEF NULLZ_INIT CHAR(12);
       80     4766
       81     4767    1   DCL FUA$GETCTX ENTRY;
       82     4768    1   DCL FUG$REMOVE_FCTX ENTRY(1);
       83     4769    1   DCL FUI$IORQS ENTRY(1);
       84     4770    1   DCL FUI$FILELEN ENTRY(2) ALTRET;
       85     4771    1   DCL FUS$SECCHK ENTRY(1) ALTRET;
       86     4772    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
       87     4773    1   DCL XSL$HTONL ENTRY(2);
       88     4774    1   DCL XSL$NTOHL ENTRY(2);
       89     4775    1   DCL XSL$QSENDTO ENTRY(7) ALTRET;
       90     4776
       91     4777    1   DCL 1 REPLY BASED(REPLY$) ALIGNED,
       92     4778    1         2 STAT UBIN;
       93     4779
       94     4780        %FU$ATTRSTAT( NAME=ATTRSTAT, STCLASS="BASED(REPLY$)");
       95     4831        %FU$DIROPRES( NAME=DIROPRES, STCLASS="BASED(REPLY$)");
       96     4903    1   DCL 1 READDIRRES BASED(DIRRES$) ALIGNED, /* return structure for READDIR cmd  */
       97     4904    1         2 STAT UBIN,                      /* for the first entry, this is right */
       98     4905    1         2 COOKIE REDEF STAT UBIN, /* for prev READIRRES since NAME's variable   */
       99     4906    1         2 PRESENT UBIN,
      100     4907    1         2 FILEID UBIN,
      101     4908    1         2 EOF REDEF FILEID UBIN,          /* For the last entry ...             */
      102     4909    1         2 NAME,
      103     4910    1           3 L UBIN,
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:47   
      104     4911    1           3 T CHAR(READDIRRES.NAME.L);
      105     4912        %FU$STATFSRES( NAME=STATFS, STCLASS="BASED(REPLY$)");
      106     4933
      107     4934        %FU$DIROPARGS( NAME=DIROP, STCLASS="BASED(BODY$)");
      108     4976        %FU$FHANDLE( NAME=FHANDLE, STCLASS="BASED(BODY$)");
      109     4997         /* NO_STAMP - same as FHANDLE, but isolates out the stamp for comparisions   */
      110     4998    1   DCL 1 NO_STAMP BASED ALIGNED,
      111     4999    1         2 * BIT(18),                      /* stamp                              */
      112     5000    1         2 TEXT CHAR(30),
      113     5001    1         2 TEXTB REDEF TEXT,
      114     5002    1           3 * CHAR(30);
      115     5003        %FU$READDIRARGS( NAME=READDIR, STCLASS="BASED(BODY$)");
      116     5045        %FU$WRITEARGS( NAME=WRITEARGS, STCLASS="BASED(BODY$)");
      117     5088
      118     5089        %FU$UCTX( NAME=UCTX, STCLASS="BASED(UCTX$)");
      119     5142        %FU$FCTX( NAME=FCTX, STCLASS="BASED(FCTX$)");
      120     5245        %FU$HCTX( NAME=HCTX, STCLASS=BASED);
      121     5268        %FU$NFSDS( NAME=DS, STCLASS="BASED(B$DS8)");
      122     5298    1   DCL B$DS8 PTR SYMREF READONLY;
      123     5299        %CODE03( BASED="BASED(F$)");
      124     5306        %CODE04( BASED="BASED(F$)");
      125     5314        %CODE14( BASED="BASED(F$)");
      126     5324    1   DCL 1 CODE13 ALIGNED BASED(F$),
      127     5325    1         2 ID CHAR(8),
      128     5326    1         2 MODTIME UBIN,
      129     5327              %FU$FATTR( NAME=FATTR, STCLASS=BASED, LVL=2);
      130     5357
      131     5358    1   DCL F$ PTR;
      132     5359
      133     5360    1   DCL BODY$ PTR;
      134     5361    1   DCL DIRRES$ PTR;
      135     5362    1   DCL REPLY$ PTR;
      136     5363    1   DCL UCTX$ PTR;
      137     5364    1   DCL FCTX$ PTR;
      138     5365    1   DCL MAXDIRRES$ PTR;
      139     5366    1   DCL TO$ REDEF MAXDIRRES$ PTR;
      140     5367    1   DCL F$TEST$ PTR;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:48   
      141     5368    1   DCL SAVE_FCTX$ PTR;
      142     5369    1   DCL I UBIN;
      143     5370    1   DCL CREATUTS UBIN;
      144     5371    1   DCL AT_COOKIE SBIN;
      145     5372    1   DCL START_COOKIE SBIN;
      146     5373    1   DCL FSID UBIN;
      147     5374    1   DCL TEXTMODE BIT(1);
      148     5375    1   DCL EOD UBIN;
      149     5376    1   DCL LIST_ACCTS SBIN;
      150     5377
      151     5378        %FU$FIDPARTS( NAME=FID, STCLASS=STATIC);
      152     5405        %FU$FIDPARTS( NAME=FID_INIT, STCLASS=CONSTANT);
      153     5432        %VLP_ATTR( FPTN=UFATTR);
      154     5446    1           3 ID CHAR(8) INIT('nfs fit'),
      155     5447    1           3 MODTIME UBIN,
      156     5448                %FU$FATTR( STCLASS=STATIC, LVL=3, NAME=FATTR);
      157     5478
      158     5479        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:49   
      159     5480    1   FUN$NFSRQS: ENTRY( RQSCTX);

   5480  4 000003   000000 700200 xent  FUN$NFSRQS   TSX0  ! X66_AUTO_1
         4 000004   000054 000001                    ZERO    44,1

      160     5481    1      BODY$ = RQSCTX.BODY$;

   5481  4 000005   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 000006   000003 236100                    LDQ     3,,PR0
         4 000007   200005 756100                    STQ     BODY$,,AUTO

      161     5482    1      REPLY$ = ADDR( RQSCTX.REPLYHDR.RESULTS);

   5482  4 000010   200003 236100                    LDQ     @RQSCTX,,AUTO
         4 000011   000023 036003                    ADLQ    19,DU
         4 000012   200007 756100                    STQ     REPLY$,,AUTO

      162     5483    1      IF FU_PROC# = 0

   5483  4 000013   000000 235000 xsym               LDA     FU_PROC#
         4 000014   000020 601000 4                  TNZ     s:5485

      163     5484    1      THEN DS.NFSRQS( RQSCTX.PROC#) = DS.NFSRQS( RQSCTX.PROC#) + 1;

   5484  4 000015   000005 720100                    LXL0    5,,PR0
         4 000016   000000 471400 xsym               LDP1    B$DS8
         4 000017   100021 054110                    AOS     17,X0,PR1

      164     5485    1      CALL FINDUCTX ALTRET( BAD2);

   5485  4 000020   002561 701000 4                  TSX1    FINDUCTX
         4 000021   002315 702000 4                  TSX2    BAD2

      165     5486    2      DO CASE( RQSCTX.PROC#);

   5486  4 000022   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 000023   000005 235100                    LDA     5,,PR0
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:50   
         4 000024   000022 115007                    CMPA    18,DL
         4 000025   000027 602005 4                  TNC     s:5486+5,AL
         4 000026   002271 710000 4                  TRA     ERR_ACCES
         4 000027   002271 710000 4                  TRA     ERR_ACCES
         4 000030   000051 710000 4                  TRA     s:5489
         4 000031   001741 710000 4                  TRA     s:5812
         4 000032   002271 710000 4                  TRA     ERR_ACCES
         4 000033   000075 710000 4                  TRA     s:5501
         4 000034   002271 710000 4                  TRA     ERR_ACCES
         4 000035   002073 710000 4                  TRA     s:5846
         4 000036   002271 710000 4                  TRA     ERR_ACCES
         4 000037   002136 710000 4                  TRA     s:5856
         4 000040   001501 710000 4                  TRA     s:5761
         4 000041   001132 710000 4                  TRA     s:5686
         4 000042   001171 710000 4                  TRA     s:5695
         4 000043   002271 710000 4                  TRA     ERR_ACCES
         4 000044   002271 710000 4                  TRA     ERR_ACCES
         4 000045   002271 710000 4                  TRA     ERR_ACCES
         4 000046   002271 710000 4                  TRA     ERR_ACCES
         4 000047   000525 710000 4                  TRA     s:5597
         4 000050   002045 710000 4                  TRA     s:5837

      166     5487
      167     5488    2       CASE( %NFSPROC_GETATTR);

      168     5489    3         IF RQSCTX.LEN ~= SIZEC(FHANDLE) THEN DO;

   5489  4 000051   000002 235100                    LDA     2,,PR0
         4 000052   000040 115007                    CMPA    32,DL
         4 000053   000062 600000 4                  TZE     s:5494

      169     5490    3   BAD_ARG: RQSCTX.REPLYHDR.ACCEPT_STAT = %GARBAGE_ARGS;

   5490  4 000054   000004 235007       BAD_ARG      LDA     4,DL
         4 000055   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 000056   000022 755100                    STA     18,,PR0

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:51   
      170     5491    3            RQSCTX.LEN = 32;

   5491  4 000057   000040 236007                    LDQ     32,DL
         4 000060   000002 756100                    STQ     2,,PR0

      171     5492    3            END;

   5492  4 000061   002320 710000 4                  TRA     s:5898

      172     5493    3         ELSE DO;

      173     5494    3            RQSCTX.LEN = 32+SIZEC(ATTRSTAT);

   5494  4 000062   000150 236007                    LDQ     104,DL
         4 000063   000002 756100                    STQ     2,,PR0

      174     5495    3            ATTRSTAT.STAT = %NFS_OK;

   5495  4 000064   200007 471500                    LDP1    REPLY$,,AUTO
         4 000065   100000 450100                    STZ     0,,PR1

      175     5496    3            ATTRSTAT.FATTR = FCTX.FATTR;

   5496  4 000066   200011 473500                    LDP3    FCTX$,,AUTO
         4 000067   000100 100500                    MLR     fill='000'O
         4 000070   300016 000104                    ADSC9   14,,PR3                  cn=0,n=68
         4 000071   100001 000104                    ADSC9   1,,PR1                   cn=0,n=68

      176     5497    3            ATTRSTAT.FATTR.XATTR = '0'B;

   5497  4 000072   000000 220003                    LDX0    0,DU
         4 000073   100002 740100                    STX0    2,,PR1

      177     5498    3            END;

   5498  4 000074   002320 710000 4                  TRA     s:5898

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:52   
      178     5499
      179     5500    2       CASE( %NFSPROC_LOOKUP);

      180     5501    2         FID = FCTX.FID;

   5501  4 000075   200011 471500                    LDP1    FCTX$,,AUTO
         4 000076   000000 100500                    MLR     fill='000'O
         4 000077   100037 000070                    ADSC9   31,,PR1                  cn=0,n=56
         4 000100   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      181     5502    2         FID.RES = 'DP';

   5502  4 000101   000221 236000 3                  LDQ     FID_INIT+14
         4 000102   777777 376003                    ANQ     -1,DU
         4 000103   040040 276007                    ORQ     16416,DL
         4 000104   002377 756000 1                  STQ     FID+3

      182     5503    2         DIROPRES.FILE = FCTX.FHANDLE;

   5503  4 000105   200007 473500                    LDP3    REPLY$,,AUTO
         4 000106   000100 100500                    MLR     fill='000'O
         4 000107   100002 000040                    ADSC9   2,,PR1                   cn=0,n=32
         4 000110   300001 000040                    ADSC9   1,,PR3                   cn=0,n=32

      183     5504    2         IF FCTX.FATTR.TYPE ~= %NFDIR THEN GOTO ERR_NOTDIR;

   5504  4 000111   100016 235100                    LDA     14,,PR1
         4 000112   000002 115007                    CMPA    2,DL
         4 000113   002305 601000 4                  TNZ     ERR_NOTDIR

      184     5505    2         IF DIROP.NAME.L = 0 THEN GOTO BAD_ARG;

   5505  4 000114   200005 474500                    LDP4    BODY$,,AUTO
         4 000115   400010 235100                    LDA     8,,PR4
         4 000116   000054 600000 4                  TZE     BAD_ARG

      185     5506    2         IF DIROP.NAME.T = '.' THEN GOTO NOP_LOOKUP;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:53   

   5506  4 000117   400010 720100                    LXL0    8,,PR4
         4 000120   040000 106540                    CMPC    fill='040'O
         4 000121   400011 000010                    ADSC9   9,,PR4                   cn=0,n=*X0
         4 000122   000000 000001 5                  ADSC9   0                        cn=0,n=1
         4 000123   000460 600000 4                  TZE     NOP_LOOKUP

      186     5507    2         IF DIROP.NAME.T = '..+' OR        /* hp thinks ..+ is ..                */

   5507  4 000124   040000 106540                    CMPC    fill='040'O
         4 000125   400011 000010                    ADSC9   9,,PR4                   cn=0,n=*X0
         4 000126   000222 000003 3                  ADSC9   FID_INIT+15              cn=0,n=3
         4 000127   000134 600000 4                  TZE     s:5509
         4 000130   040000 106540                    CMPC    fill='040'O
         4 000131   400011 000010                    ADSC9   9,,PR4                   cn=0,n=*X0
         4 000132   000222 000002 3                  ADSC9   FID_INIT+15              cn=0,n=2
         4 000133   000235 601000 4                  TNZ     s:5534

      187     5508    3           DIROP.NAME.T = '..' THEN DO;    /* Going backwards                    */

      188     5509    3            IF UCTX.USER.TOPLVL = %TOPLVL_NONE THEN GOTO ERR_ACCES;

   5509  4 000134   200010 475500                    LDP5    UCTX$,,AUTO
         4 000135   500013 236100                    LDQ     11,,PR5
         4 000136   014000 376003                    ANQ     6144,DU
         4 000137   014000 116003                    CMPQ    6144,DU
         4 000140   002271 600000 4                  TZE     ERR_ACCES

      189     5510    3            IF DIROPRES.FILE.ACCTLNG > 0   /* do '..' from account level         */

   5510  4 000141   300001 236100                    LDQ     1,,PR3
         4 000142   017000 316007                    CANQ    7680,DL
         4 000143   000174 600000 4                  TZE     s:5519

      190     5511    4            THEN DO;

      191     5512    4              SUBSTR( DIROPRES.FILE.TEXT, DIROPRES.FILE.PSNLNG, DIROPRES.FILE.ACCTLNG)
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:54   
              5512                        = NULLZ;

   5512  4 000144   300001 236100                    LDQ     1,,PR3
         4 000145   000015 772000                    QRL     13
         4 000146   000007 376007                    ANQ     7,DL
         4 000147   200044 756100                    STQ     UTSS+1,,AUTO
         4 000150   300001 236100                    LDQ     1,,PR3
         4 000151   000011 772000                    QRL     9
         4 000152   000017 376007                    ANQ     15,DL
         4 000153   000000 620006                    EAX0    0,QL
         4 000154   200044 235100                    LDA     UTSS+1,,AUTO
         4 000155   040145 100400                    MLR     fill='040'O
         4 000156   000200 000014 3                  ADSC9   NULLZ_INIT               cn=0,n=12
         4 000157   300001 600010                    ADSC9   1,A,PR3                  cn=3,n=*X0

      192     5513    4               DIROPRES.FILE.ACCTLNG = 0;

   5513  4 000160   000001 236000 5                  LDQ     1
         4 000161   300001 356100                    ANSQ    1,,PR3

      193     5514    4               IF DIROPRES.FILE.PSNLNG = 0 /* was MAD mounted, so back to MAD    */

   5514  4 000162   300001 236100                    LDQ     1,,PR3
         4 000163   160000 316007                    CANQ    57344,DL
         4 000164   000170 601000 4                  TNZ     s:5516

      194     5515    4               THEN FID.ASN = %DEVICE#+512;

   5515  4 000165   001003 220003                    LDX0    515,DU
         4 000166   002376 440000 1                  SXL0    FID+2
         4 000167   000172 710000 4                  TRA     s:5517

      195     5516    4               ELSE FID.ASN = %DEVICE#;

   5516  4 000170   000003 220003                    LDX0    3,DU
         4 000171   002376 440000 1                  SXL0    FID+2

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:55   
      196     5517    4               DIROPRES.FILE.STAMP = FID.ASN;

   5517  4 000172   300001 740100                    STX0    1,,PR3

      197     5518    4               END;

   5518  4 000173   000216 710000 4                  TRA     s:5528

      198     5519    3            ELSE IF DIROPRES.FILE.PSNLNG > 0 /* do '..' from packset level       */

   5519  4 000174   160000 316007                    CANQ    57344,DL
         4 000175   002305 600000 4                  TZE     ERR_NOTDIR

      199     5520    4               THEN DO;

      200     5521    4                  IF UCTX.USER.TOPLVL ~= %TOPLVL_ALL THEN GOTO ERR_ACCES;

   5521  4 000176   500013 236100                    LDQ     11,,PR5
         4 000177   014000 316003                    CANQ    6144,DU
         4 000200   002271 601000 4                  TNZ     ERR_ACCES

      201     5522    4                  SUBSTR( DIROPRES.FILE.TEXT, 0, DIROPRES.FILE.PSNLNG) = NULLZ;

   5522  4 000201   300001 236100                    LDQ     1,,PR3
         4 000202   000015 772000                    QRL     13
         4 000203   000007 376007                    ANQ     7,DL
         4 000204   000000 621006                    EAX1    0,QL
         4 000205   040140 100400                    MLR     fill='040'O
         4 000206   000200 000014 3                  ADSC9   NULLZ_INIT               cn=0,n=12
         4 000207   300001 600011                    ADSC9   1,,PR3                   cn=3,n=*X1

      202     5523    4                  FID.ASN = %DEVICE#;      /* the works                          */

   5523  4 000210   000003 220003                    LDX0    3,DU
         4 000211   002376 440000 1                  SXL0    FID+2

      203     5524    4                  DIROPRES.FILE.STAMP = %DEVICE#;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:56   

   5524  4 000212   300001 740100                    STX0    1,,PR3

      204     5525    4                  DIROPRES.FILE.PSNLNG = 0;

   5525  4 000213   000002 236000 5                  LDQ     2
         4 000214   300001 356100                    ANSQ    1,,PR3

      205     5526    4                  END;

   5526  4 000215   000216 710000 4                  TRA     s:5528

      206     5527    3               ELSE GOTO ERR_NOTDIR;       /* Nothing there for '..'             */
      207     5528    4            IF DIROPRES.FILE.PSNLNG = 0 THEN DO;

   5528  4 000216   300001 236100                    LDQ     1,,PR3
         4 000217   160000 316007                    CANQ    57344,DL
         4 000220   000231 601000 4                  TNZ     s:5532

      208     5529    4               FID.RES = 'NO';

   5529  4 000221   000223 236000 3                  LDQ     FID_INIT+16
         4 000222   777777 376003                    ANQ     -1,DU
         4 000223   040040 276007                    ORQ     16416,DL
         4 000224   002377 756000 1                  STQ     FID+3

      209     5530    4               FID.RES = 'ME';             /* Bug in M$OPEN                      */

   5530  4 000225   000224 236000 3                  LDQ     FID_INIT+17
         4 000226   777777 376003                    ANQ     -1,DU
         4 000227   040040 276007                    ORQ     16416,DL
         4 000230   002377 756000 1                  STQ     FID+3

      210     5531    4               END;

      211     5532    3            FID.ACCT = BINASC( 0);

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:57   
   5532  4 000231   000003 235000 5                  LDA     3
         4 000232   000035 236000 xsym               LDQ     B_VECTNIL+29
         4 000233   002400 757000 1                  STAQ    FID+4

      212     5533    3            END;

   5533  4 000234   000434 710000 4                  TRA     s:5571

      213     5534    3         ELSE IF DIROPRES.FILE.ACCTLNG > 0 THEN DO; /* next lvl is a file name   */

   5534  4 000235   300001 236100                    LDQ     1,,PR3
         4 000236   017000 316007                    CANQ    7680,DL
         4 000237   000356 600000 4                  TZE     s:5555

      214     5535    3               FID.NAME.L = DIROP.NAME.L;

   5535  4 000240   400010 236100                    LDQ     8,,PR4
         4 000241   000033 736000                    QLS     27
         4 000242   002402 552040 1                  STBQ    FID+6,'40'O

      215     5536    3               CALL XLATE( FID.NAME.T, FU_XLATE, DIROP.NAME.T);

   5536  4 000243   400010 720100                    LXL0    8,,PR4
         4 000244   040000 160540                    MVT     fill='040'O
         4 000245   400011 000010                    ADSC9   9,,PR4                   cn=0,n=*X0
         4 000246   002402 200037 1                  ADSC9   FID+6                    cn=1,n=31
         4 000247   000000 000000 3                  ARG     FU_XLATE

      216     5537    3               IF FCTX.FHANDLE.PSNLNG > 0  /* see if we can treat this like MAD  */

   5537  4 000250   100002 236100                    LDQ     2,,PR1
         4 000251   160000 316007                    CANQ    57344,DL
         4 000252   000327 600000 4                  TZE     s:5550

      217     5538    4               THEN DO;

      218     5539    4                  CALL M$MADMUCK( GET_PSN)
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:58   

   5539  4 000253   000352 630400 1                  EPPR0   GET_PSN
         4 000254   460005 713400                    CLIMB   alt,+24581
         4 000255   401000 401760                    pmme    nvectors=3
         4 000256   000317 702000 4                  TSX2    s:5548

      219     5540    5                  WHENRETURN DO;

      220     5541    5                     IF FID.PSN.SN = SUBSTR( FCTX.FHANDLE.TEXT,0,FCTX.FHANDLE.PSNLNG)

   5541  4 000257   200011 470500                    LDP0    FCTX$,,AUTO
         4 000260   000002 236100                    LDQ     2,,PR0
         4 000261   000015 772000                    QRL     13
         4 000262   000007 376007                    ANQ     7,DL
         4 000263   000000 620006                    EAX0    0,QL
         4 000264   040140 106400                    CMPC    fill='040'O
         4 000265   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6
         4 000266   000002 600010                    ADSC9   2,,PR0                   cn=3,n=*X0
         4 000267   000310 601000 4                  TNZ     s:5546

      221     5542    6                     THEN DO;

      222     5543    6                        DIROPRES.FILE.TEXT = SUBSTR( DIROPRES.FILE.TEXT,DIROPRES.FILE.
              5543                                 PSNLNG,DIROPRES.FILE.ACCTLNG);

   5543  4 000270   200007 471500                    LDP1    REPLY$,,AUTO
         4 000271   100001 236100                    LDQ     1,,PR1
         4 000272   000015 772000                    QRL     13
         4 000273   000007 376007                    ANQ     7,DL
         4 000274   200044 756100                    STQ     UTSS+1,,AUTO
         4 000275   100001 236100                    LDQ     1,,PR1
         4 000276   000011 772000                    QRL     9
         4 000277   000017 376007                    ANQ     15,DL
         4 000300   000000 620006                    EAX0    0,QL
         4 000301   200044 235100                    LDA     UTSS+1,,AUTO
         4 000302   040100 100545                    MLR     fill='040'O
         4 000303   100001 600010                    ADSC9   1,A,PR1                  cn=3,n=*X0
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:59   
         4 000304   100001 600035                    ADSC9   1,,PR1                   cn=3,n=29

      223     5544    6                        DIROPRES.FILE.PSNLNG = 0;

   5544  4 000305   000002 236000 5                  LDQ     2
         4 000306   100001 356100                    ANSQ    1,,PR1

      224     5545    6                        END;

   5545  4 000307   000317 710000 4                  TRA     s:5548

      225     5546    5                    ELSE FID.PSN.SN = SUBSTR( FCTX.FHANDLE.TEXT,0,FCTX.FHANDLE.PSNLNG)
              5546                              ;

   5546  4 000310   000002 236100                    LDQ     2,,PR0
         4 000311   000015 772000                    QRL     13
         4 000312   000007 376007                    ANQ     7,DL
         4 000313   000000 620006                    EAX0    0,QL
         4 000314   040000 100540                    MLR     fill='040'O
         4 000315   000002 600010                    ADSC9   2,,PR0                   cn=3,n=*X0
         4 000316   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6

      226     5547    5                     END;

      227     5548    4                  FID.PSN.SN = SUBSTR( DIROPRES.FILE.TEXT,0,DIROPRES.FILE.PSNLNG);

   5548  4 000317   200007 470500                    LDP0    REPLY$,,AUTO
         4 000320   000001 236100                    LDQ     1,,PR0
         4 000321   000015 772000                    QRL     13
         4 000322   000007 376007                    ANQ     7,DL
         4 000323   000000 620006                    EAX0    0,QL
         4 000324   040000 100540                    MLR     fill='040'O
         4 000325   000001 600010                    ADSC9   1,,PR0                   cn=3,n=*X0
         4 000326   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6

      228     5549    4                  END;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:60   
      229     5550    3               I = DIROPRES.FILE.PSNLNG + DIROPRES.FILE.ACCTLNG; /* Append pos.  */

   5550  4 000327   200007 470500                    LDP0    REPLY$,,AUTO
         4 000330   000001 236100                    LDQ     1,,PR0
         4 000331   000011 772000                    QRL     9
         4 000332   000017 376007                    ANQ     15,DL
         4 000333   200044 756100                    STQ     UTSS+1,,AUTO
         4 000334   000001 236100                    LDQ     1,,PR0
         4 000335   000015 772000                    QRL     13
         4 000336   000007 376007                    ANQ     7,DL
         4 000337   200044 036100                    ADLQ    UTSS+1,,AUTO
         4 000340   200015 756100                    STQ     I,,AUTO

      230     5551    3               IF I /* PSNLNG + ACCTLNG */ + FID.NAME.L > SIZEC(FCTX.FHANDLE.TEXT)

   5551  4 000341   002402 236000 1                  LDQ     FID+6
         4 000342   000033 772000                    QRL     27
         4 000343   200015 036100                    ADLQ    I,,AUTO
         4 000344   000036 116007                    CMPQ    30,DL
         4 000345   002301 603000 4                  TRC     ERR_TOOLONG

      231     5552    3               THEN GOTO ERR_TOOLONG;
      232     5553    3               SUBSTR( DIROPRES.FILE.TEXT, I, FID.NAME.L) = FID.NAME.T;

   5553  4 000346   002402 236000 1                  LDQ     FID+6
         4 000347   000033 772000                    QRL     27
         4 000350   000000 620006                    EAX0    0,QL
         4 000351   200015 235100                    LDA     I,,AUTO
         4 000352   040145 100400                    MLR     fill='040'O
         4 000353   002402 200037 1                  ADSC9   FID+6                    cn=1,n=31
         4 000354   000001 600010                    ADSC9   1,A,PR0                  cn=3,n=*X0

      233     5554    3               END;

   5554  4 000355   000434 710000 4                  TRA     s:5571

      234     5555    3            ELSE IF DIROPRES.FILE.PSNLNG > 0 OR DIROPRES.FILE.STAMP > 512 THEN DO;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:61   

   5555  4 000356   160000 316007                    CANQ    57344,DL
         4 000357   000363 601000 4                  TNZ     s:5557
         4 000360   300001 221100                    LDX1    1,,PR3
         4 000361   001001 101003                    CMPX1   513,DU
         4 000362   000411 602000 4                  TNC     s:5564

      235     5556                                      /* had packset or mad, next lvl is account name */
      236     5557    3                  IF DIROP.NAME.L > 8 THEN GOTO ERR_TOOLONG;

   5557  4 000363   000011 115007                    CMPA    9,DL
         4 000364   002301 603000 4                  TRC     ERR_TOOLONG

      237     5558    3                  DIROPRES.FILE.ACCTLNG = DIROP.NAME.L;

   5558  4 000365   400010 236100                    LDQ     8,,PR4
         4 000366   000011 736000                    QLS     9
         4 000367   300001 676100                    ERQ     1,,PR3
         4 000370   017000 376007                    ANQ     7680,DL
         4 000371   300001 656100                    ERSQ    1,,PR3

      238     5559    3                  CALL XLATE( FID.ACCT, FU_XLATE, DIROP.NAME.T);

   5559  4 000372   400010 720100                    LXL0    8,,PR4
         4 000373   040000 160540                    MVT     fill='040'O
         4 000374   400011 000010                    ADSC9   9,,PR4                   cn=0,n=*X0
         4 000375   002400 000010 1                  ADSC9   FID+4                    cn=0,n=8
         4 000376   000000 000000 3                  ARG     FU_XLATE

      239     5560    3                 SUBSTR( DIROPRES.FILE.TEXT, DIROPRES.FILE.PSNLNG, DIROP.NAME.L) = FID
              5560                           .ACCT;

   5560  4 000377   300001 236100                    LDQ     1,,PR3
         4 000400   000015 772000                    QRL     13
         4 000401   000007 376007                    ANQ     7,DL
         4 000402   400010 720100                    LXL0    8,,PR4
         4 000403   040146 100400                    MLR     fill='040'O
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:62   
         4 000404   002400 000010 1                  ADSC9   FID+4                    cn=0,n=8
         4 000405   300001 600010                    ADSC9   1,Q,PR3                  cn=3,n=*X0

      240     5561    3                  FID.ASN = %FILE#;

   5561  4 000406   000001 220003                    LDX0    1,DU
         4 000407   002376 440000 1                  SXL0    FID+2

      241     5562    3                  END;

   5562  4 000410   000434 710000 4                  TRA     s:5571

      242     5563    3               ELSE DO;     /* had the system, next lvl is a packset (or fid?)   */

      243     5564    3                  IF DIROP.NAME.L > 6 THEN GOTO ERR_TOOLONG;

   5564  4 000411   000007 115007                    CMPA    7,DL
         4 000412   002301 603000 4                  TRC     ERR_TOOLONG

      244     5565    3                  DIROPRES.FILE.PSNLNG = DIROP.NAME.L;

   5565  4 000413   400010 236100                    LDQ     8,,PR4
         4 000414   000015 736000                    QLS     13
         4 000415   300001 676100                    ERQ     1,,PR3
         4 000416   160000 376007                    ANQ     57344,DL
         4 000417   300001 656100                    ERSQ    1,,PR3

      245     5566    3                  CALL XLATE( FID.PSN.SN, FU_XLATE, DIROP.NAME.T);

   5566  4 000420   400010 720100                    LXL0    8,,PR4
         4 000421   040000 160540                    MVT     fill='040'O
         4 000422   400011 000010                    ADSC9   9,,PR4                   cn=0,n=*X0
         4 000423   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6
         4 000424   000000 000000 3                  ARG     FU_XLATE

      246     5567    3                  SUBSTR( DIROPRES.FILE.TEXT, 0, DIROP.NAME.L) = FID.PSN.SN;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:63   
   5567  4 000425   400010 720100                    LXL0    8,,PR4
         4 000426   040140 100400                    MLR     fill='040'O
         4 000427   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6
         4 000430   300001 600010                    ADSC9   1,,PR3                   cn=3,n=*X0

      247     5568    3                  FID.ACCT = BINASC( 0);

   5568  4 000431   000003 235000 5                  LDA     3
         4 000432   000035 236000 xsym               LDQ     B_VECTNIL+29
         4 000433   002400 757000 1                  STAQ    FID+4

      248     5569    3                  END;

      249     5570
      250     5571    2         CALL SETJIT;

   5571  4 000434   005016 701000 4                  TSX1    SETJIT
         4 000435   000000 011000                    NOP     0

      251     5572    2         CREATUTS = 0;

   5572  4 000436   200016 450100                    STZ     CREATUTS,,AUTO

      252     5573    3         CALL TESTOPEN WHENALTRETURN DO;

   5573  4 000437   003506 701000 4                  TSX1    TESTOPEN
         4 000440   000442 702000 4                  TSX2    s:5574
         4 000441   000445 710000 4                  TRA     s:5577

      253     5574    3            CALL UNSETJIT;

   5574  4 000442   005051 701000 4                  TSX1    UNSETJIT
         4 000443   000000 011000                    NOP     0

      254     5575    3            GOTO BAD2;

   5575  4 000444   002315 710000 4                  TRA     BAD2
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:64   

      255     5576    3            END;
      256     5577    2         CALL UNSETJIT;

   5577  4 000445   005051 701000 4                  TSX1    UNSETJIT
         4 000446   000000 011000                    NOP     0

      257     5578    2         IF CREATUTS ~= 0 THEN CALL TESTOPEN; /* Didn't get FIT - try harder     */

   5578  4 000447   200016 235100                    LDA     CREATUTS,,AUTO
         4 000450   000453 600000 4                  TZE     s:5579

   5578  4 000451   003506 701000 4                  TSX1    TESTOPEN
         4 000452   000000 011000                    NOP     0

      258     5579    2         BODY$ = ADDR( DIROPRES.FILE);     /*   might have better info           */

   5579  4 000453   200007 236100                    LDQ     REPLY$,,AUTO
         4 000454   000001 036003                    ADLQ    1,DU
         4 000455   200005 756100                    STQ     BODY$,,AUTO

      259     5580    2         CALL FINDSTAMP

   5580  4 000456   003442 701000 4                  TSX1    FINDSTAMP
         4 000457   000466 702000 4                  TSX2    s:5586

      260     5581    3         WHENRETURN DO;

      261     5582    3   NOP_LOOKUP:
      262     5583    3            DIROPRES.FATTR = FCTX.FATTR;

   5583  4 000460   200011 470500       NOP_LOOKUP   LDP0    FCTX$,,AUTO
         4 000461   200007 471500                    LDP1    REPLY$,,AUTO
         4 000462   000100 100500                    MLR     fill='000'O
         4 000463   000016 000104                    ADSC9   14,,PR0                  cn=0,n=68
         4 000464   100011 000104                    ADSC9   9,,PR1                   cn=0,n=68

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:65   
      263     5584    3            END;

   5584  4 000465   000515 710000 4                  TRA     s:5592

      264     5585    3         WHENALTRETURN DO;

      265     5586    3            FCTX$ = UCTX.FCTX$;

   5586  4 000466   200010 470500                    LDP0    UCTX$,,AUTO
         4 000467   000003 236100                    LDQ     3,,PR0
         4 000470   200011 756100                    STQ     FCTX$,,AUTO

      266     5587    3            IF FCTX.FHANDLE.ACCTLNG > 0 THEN FSID = FCTX.FATTR.FSID;

   5587  4 000471   200011 471500                    LDP1    FCTX$,,AUTO
         4 000472   100002 236100                    LDQ     2,,PR1
         4 000473   017000 316007                    CANQ    7680,DL
         4 000474   000500 600000 4                  TZE     s:5588

   5587  4 000475   100027 235100                    LDA     23,,PR1
         4 000476   200021 755100                    STA     FSID,,AUTO
         4 000477   000505 710000 4                  TRA     s:5589

      267     5588    3            ELSE CALL MAKEFSID( DIROPRES.FILE);

   5588  4 000500   200007 236100                    LDQ     REPLY$,,AUTO
         4 000501   000001 036003                    ADLQ    1,DU
         4 000502   200033 756100                    STQ     ACCESS+2,,AUTO
         4 000503   004606 701000 4                  TSX1    MAKEFSID
         4 000504   000000 011000                    NOP     0

      268     5589    3            CALL MAKEFATTR( DIROPRES.FATTR);

   5589  4 000505   200007 236100                    LDQ     REPLY$,,AUTO
         4 000506   000011 036003                    ADLQ    9,DU
         4 000507   200033 756100                    STQ     ACCESS+2,,AUTO
         4 000510   004013 701000 4                  TSX1    MAKEFATTR
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:66   
         4 000511   000000 011000                    NOP     0

      269     5590    3            DIROPRES.FILE.STAMP = CREATUTS;

   5590  4 000512   200016 720100                    LXL0    CREATUTS,,AUTO
         4 000513   200007 470500                    LDP0    REPLY$,,AUTO
         4 000514   000001 740100                    STX0    1,,PR0

      270     5591    3            END;

      271     5592    2         DIROPRES.STAT = %NFS_OK;

   5592  4 000515   200007 470500                    LDP0    REPLY$,,AUTO
         4 000516   000000 450100                    STZ     0,,PR0

      272     5593    2         DIROPRES.FATTR.XATTR = '0'B;

   5593  4 000517   000000 220003                    LDX0    0,DU
         4 000520   000012 740100                    STX0    10,,PR0

      273     5594    2         RQSCTX.LEN = SIZEC( DIROPRES) + 32;

   5594  4 000521   000210 235007                    LDA     136,DL
         4 000522   200003 471500                    LDP1    @RQSCTX,,AUTO
         4 000523   100002 755100                    STA     2,,PR1
         4 000524   002320 710000 4                  TRA     s:5898

      274     5595
      275     5596    2       CASE( %NFSPROC_READDIR);

      276     5597    2         IF FCTX.FATTR.TYPE ~= %NFDIR THEN GOTO ERR_NOTDIR;

   5597  4 000525   200011 471500                    LDP1    FCTX$,,AUTO
         4 000526   100016 235100                    LDA     14,,PR1
         4 000527   000002 115007                    CMPA    2,DL
         4 000530   002305 601000 4                  TNZ     ERR_NOTDIR

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:67   
      277     5598    2         F$TEST$ = DCBADDR( DCBNUM ( F$TEST));

   5598  4 000531   000000 236007 xsym               LDQ     F$TEST,DL
         4 000532   000004 473400 5                  LDP3    4
         4 000533   300000 474500                    LDP4    0,,PR3
         4 000534   400000 236106                    LDQ     0,QL,PR4
         4 000535   200013 756100                    STQ     F$TEST$,,AUTO

      278     5599    2         EOD = 1;                          /* assume end of directory for now    */

   5599  4 000536   000001 235007                    LDA     1,DL
         4 000537   200023 755100                    STA     EOD,,AUTO

      279     5600    2         IF RQSCTX.LEN ~= SIZEC( READDIR) THEN GOTO BAD_ARG;

   5600  4 000540   000002 235100                    LDA     2,,PR0
         4 000541   000050 115007                    CMPA    40,DL
         4 000542   000054 601000 4                  TNZ     BAD_ARG

      280     5601    2         CALL XSL$NTOHL( I, READDIR.COUNT);

   5601  4 000543   200005 236100                    LDQ     BODY$,,AUTO
         4 000544   000011 036003                    ADLQ    9,DU
         4 000545   200045 756100                    STQ     UTSS+2,,AUTO
         4 000546   200015 635500                    EPPR5   I,,AUTO
         4 000547   200044 455500                    STP5    UTSS+1,,AUTO
         4 000550   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 000551   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000552   000000 701000 xent               TSX1    XSL$NTOHL
         4 000553   000000 011000                    NOP     0

      281     5602    2         MAXDIRRES$ = PINCRW( REPLY$, I/4 /* word length */ - 14);

   5602  4 000554   200015 236100                    LDQ     I,,AUTO
         4 000555   000002 772000                    QRL     2
         4 000556   000022 736000                    QLS     18
         4 000557   000016 136003                    SBLQ    14,DU
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:68   
         4 000560   200007 036100                    ADLQ    REPLY$,,AUTO
         4 000561   200012 756100                    STQ     MAXDIRRES$,,AUTO

      282     5603    2         DIRRES$ = REPLY$;

   5603  4 000562   200007 236100                    LDQ     REPLY$,,AUTO
         4 000563   200006 756100                    STQ     DIRRES$,,AUTO

      283     5604    2         CALL XSL$NTOHL( START_COOKIE, READDIR.COOKIE);

   5604  4 000564   200005 236100                    LDQ     BODY$,,AUTO
         4 000565   000010 036003                    ADLQ    8,DU
         4 000566   200045 756100                    STQ     UTSS+2,,AUTO
         4 000567   200020 630500                    EPPR0   START_COOKIE,,AUTO
         4 000570   200044 450500                    STP0    UTSS+1,,AUTO
         4 000571   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 000572   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000573   000000 701000 xent               TSX1    XSL$NTOHL
         4 000574   000000 011000                    NOP     0

      284     5605    2         LIST_ACCTS = 0;                   /* assume we want to list files       */

   5605  4 000575   200024 450100                    STZ     LIST_ACCTS,,AUTO

      285     5606    2         FID = FCTX.FID;

   5606  4 000576   200011 470500                    LDP0    FCTX$,,AUTO
         4 000577   000000 100500                    MLR     fill='000'O
         4 000600   000037 000070                    ADSC9   31,,PR0                  cn=0,n=56
         4 000601   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      286     5607    2         IF FCTX.FHANDLE.ACCTLNG = 0

   5607  4 000602   000002 236100                    LDQ     2,,PR0
         4 000603   017000 316007                    CANQ    7680,DL
         4 000604   000624 601000 4                  TNZ     s:5617

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:69   
      287     5608    3         THEN DO;                /* want to list accounts, or the whole system   */

      288     5609    3            IF FCTX.FHANDLE.PSNLNG ~= 0

   5609  4 000605   160000 316007                    CANQ    57344,DL
         4 000606   000612 600000 4                  TZE     s:5611

      289     5610    3            THEN LIST_ACCTS = -1;          /* want to list accounts in a PAD     */

   5610  4 000607   000001 335007                    LCA     1,DL
         4 000610   200024 755100                    STA     LIST_ACCTS,,AUTO
         4 000611   000620 710000 4                  TRA     s:5614

      290     5611    3            ELSE IF FCTX.FHANDLE.STAMP ~= %DEVICE#

   5611  4 000612   000002 220100                    LDX0    2,,PR0
         4 000613   000003 100003                    CMPX0   3,DU
         4 000614   001063 600000 4                  TZE     EODIR

      291     5612    3               THEN LIST_ACCTS = 1;        /* want to list accounts in the MAD   */

   5612  4 000615   000001 235007                    LDA     1,DL
         4 000616   200024 755100                    STA     LIST_ACCTS,,AUTO
         4 000617   000620 710000 4                  TRA     s:5614

      292     5613    3               ELSE GOTO EODIR;            /* want to list packsets - can't      */
      293     5614    3            IF NOT UCTX.USER.FMBLK THEN GOTO EODIR; /* need priv to list accts   */

   5614  4 000620   200010 471500                    LDP1    UCTX$,,AUTO
         4 000621   100013 236100                    LDQ     11,,PR1
         4 000622   200000 316003                    CANQ    65536,DU
         4 000623   001063 600000 4                  TZE     EODIR

      294     5615    3            END;

      295     5616
      296     5617    2         CALL SETJIT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:70   

   5617  4 000624   005016 701000 4                  TSX1    SETJIT
         4 000625   000000 011000                    NOP     0

      297     5618    2         AT_COOKIE = 0;

   5618  4 000626   200017 450100                    STZ     AT_COOKIE,,AUTO

      298     5619    2         IF READDIRRES.COOKIE ~= 0 THEN

   5619  4 000627   200006 470500                    LDP0    DIRRES$,,AUTO
         4 000630   000000 235100                    LDA     0,,PR0
         4 000631   000670 600000 4                  TZE     s:5629

      299     5620    3         DO I = 0 TO 1;

   5620  4 000632   200015 450100                    STZ     I,,AUTO

      300     5621    4            IF START_COOKIE = UCTX.COOKIE.ID( I) THEN DO;

   5621  4 000633   200015 236100                    LDQ     I,,AUTO
         4 000634   000012 402007                    MPY     10,DL
         4 000635   200010 470500                    LDP0    UCTX$,,AUTO
         4 000636   000020 236106                    LDQ     16,QL,PR0
         4 000637   000663 604000 4                  TMI     s:5627
         4 000640   200020 116100                    CMPQ    START_COOKIE,,AUTO
         4 000641   000663 601000 4                  TNZ     s:5627

      301     5622    4               AT_COOKIE = UCTX.COOKIE.ID( I);

   5622  4 000642   200015 236100                    LDQ     I,,AUTO
         4 000643   000012 402007                    MPY     10,DL
         4 000644   000020 235106                    LDA     16,QL,PR0
         4 000645   200017 755100                    STA     AT_COOKIE,,AUTO

      302     5623    4               IF LIST_ACCTS = 0           /* listing files                      */

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:71   
   5623  4 000646   200024 235100                    LDA     LIST_ACCTS,,AUTO
         4 000647   000656 601000 4                  TNZ     s:5625

      303     5624    4               THEN FID.NAME = UCTX.COOKIE.NAME( I);

   5624  4 000650   200015 236100                    LDQ     I,,AUTO
         4 000651   000050 402007                    MPY     40,DL
         4 000652   000000 100506                    MLR     fill='000'O
         4 000653   000021 000040                    ADSC9   17,Q,PR0                 cn=0,n=32
         4 000654   002402 000040 1                  ADSC9   FID+6                    cn=0,n=32
         4 000655   000663 710000 4                  TRA     s:5627

      304     5625    4               ELSE FID.ACCT = UCTX.COOKIE.NAME.T( I);

   5625  4 000656   200015 236100                    LDQ     I,,AUTO
         4 000657   000050 402007                    MPY     40,DL
         4 000660   040000 100506                    MLR     fill='040'O
         4 000661   000021 200010                    ADSC9   17,Q,PR0                 cn=1,n=8
         4 000662   002400 000010 1                  ADSC9   FID+4                    cn=0,n=8

      305     5626    4               END;

      306     5627    3            END;

   5627  4 000663   200015 235100                    LDA     I,,AUTO
         4 000664   000001 035007                    ADLA    1,DL
         4 000665   200015 755100                    STA     I,,AUTO
         4 000666   000002 115007                    CMPA    2,DL
         4 000667   000633 602000 4                  TNC     s:5621

      307     5628
      308     5629    3         DO WHILE DIRRES$ <= MAXDIRRES$;

   5629  4 000670   200012 236100                    LDQ     MAXDIRRES$,,AUTO
         4 000671   200006 116100                    CMPQ    DIRRES$,,AUTO
         4 000672   001062 602000 4                  TNC     s:5670

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:72   
      309     5630    3            IF LIST_ACCTS = 0

   5630  4 000673   200024 235100                    LDA     LIST_ACCTS,,AUTO
         4 000674   000722 601000 4                  TNZ     TRY_NEXT_ACCT

      310     5631    4            THEN DO;                       /* listing files                      */

      311     5632    4               CALL M$OPEN( OPEN_NEXT_FILE) ALTRET( EODIR);

   5632  4 000675   000074 630400 1                  EPPR0   OPEN_NEXT_FILE
         4 000676   450000 713400                    CLIMB   alt,open
         4 000677   410400 401760                    pmme    nvectors=18
         4 000700   001063 702000 4                  TSX2    EODIR

      312     5633    4               FID.NAME = F$TEST$ -> F$DCB.NAME#;

   5633  4 000701   200013 470500                    LDP0    F$TEST$,,AUTO
         4 000702   000000 100500                    MLR     fill='000'O
         4 000703   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
         4 000704   002402 000040 1                  ADSC9   FID+6                    cn=0,n=32

      313     5634    4               IF AT_COOKIE < START_COOKIE THEN GOTO NEXT_DIR_ENTRY;

   5634  4 000705   200017 236100                    LDQ     AT_COOKIE,,AUTO
         4 000706   200020 116100                    CMPQ    START_COOKIE,,AUTO
         4 000707   001046 604000 4                  TMI     NEXT_DIR_ENTRY

      314     5635    4               READDIRRES.NAME.L = FID.NAME.L;

   5635  4 000710   200006 471500                    LDP1    DIRRES$,,AUTO
         4 000711   002402 236000 1                  LDQ     FID+6
         4 000712   000033 772000                    QRL     27
         4 000713   100003 756100                    STQ     3,,PR1

      315     5636    4               CALL XLATE( READDIRRES.NAME.T, FU_XLATE, FID.NAME.T);

   5636  4 000714   100003 720100                    LXL0    3,,PR1
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:73   
         4 000715   040140 160400                    MVT     fill='040'O
         4 000716   002402 200037 1                  ADSC9   FID+6                    cn=1,n=31
         4 000717   100004 000010                    ADSC9   4,,PR1                   cn=0,n=*X0
         4 000720   000000 000000 3                  ARG     FU_XLATE

      316     5637    4               END;

   5637  4 000721   001002 710000 4                  TRA     s:5659

      317     5638    4            ELSE DO;                       /* listing accounts                   */

   5636  4 000722                       TRY_NEXT_AC* null
      318     5639    4   TRY_NEXT_ACCT:;
      319     5640    4               IF LIST_ACCTS > 0      /* listing PAD, remove PSN for NXTA open   */

   5640  4 000722   200024 235100                    LDA     LIST_ACCTS,,AUTO
         4 000723   000727 604400 4                  TMOZ    s:5642

      320     5641    4               THEN FID.PSN.SN = '      ';

   5641  4 000724   040000 100400                    MLR     fill='040'O
         4 000725   000225 000006 3                  ADSC9   FID_INIT+18              cn=0,n=6
         4 000726   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6

      321     5642    4               CALL M$OPEN( OPEN_NEXT_ACCT)

   5642  4 000727   000166 630400 1                  EPPR0   OPEN_NEXT_ACCT
         4 000730   450000 713400                    CLIMB   alt,open
         4 000731   410400 401760                    pmme    nvectors=18
         4 000732   000734 702000 4                  TSX2    s:5644
         4 000733   000750 710000 4                  TRA     s:5651

      322     5643    5               WHENALTRETURN DO;

      323     5644    6                  IF B$TCB.ALT$->B$ALT.ERR.ERR# = %E$NOKEY THEN DO; /* NOACCT    */

   5644  4 000734   000000 470400 xsym               LDP0    B$TCB$
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:74   
         4 000735   000000 471500                    LDP1    0,,PR0
         4 000736   100102 236100                    LDQ     66,,PR1
         4 000737   377770 376007                    ANQ     131064,DL
         4 000740   001020 116007                    CMPQ    528,DL
         4 000741   000746 601000 4                  TNZ     s:5648

      324     5645    6                     FID.ACCT = F$TEST$ -> F$DCB.ACCT#;

   5645  4 000742   200013 473500                    LDP3    F$TEST$,,AUTO
         4 000743   300020 237100                    LDAQ    16,,PR3
         4 000744   002400 757000 1                  STAQ    FID+4

      325     5646    6                     GOTO TRY_NEXT_ACCT;

   5646  4 000745   000722 710000 4                  TRA     TRY_NEXT_ACCT

      326     5647    6                     END;
      327     5648    5                  IF B$TCB.ALT$->B$ALT.ERR.ERR# ~= %E$NOFILE THEN GOTO EODIR;

   5648  4 000746   001610 116007                    CMPQ    904,DL
         4 000747   001063 601000 4                  TNZ     EODIR

      328     5649                            /* this is the only error that we can keep going with     */
      329     5650    5                  END;

      330     5651    4               FID.ACCT = F$TEST$ -> F$DCB.ACCT#;

   5651  4 000750   200013 470500                    LDP0    F$TEST$,,AUTO
         4 000751   000020 237100                    LDAQ    16,,PR0
         4 000752   002400 757000 1                  STAQ    FID+4

      331     5652    4               IF LIST_ACCTS > 0           /* listing PAD, need to get PSN       */

   5652  4 000753   200024 235100                    LDA     LIST_ACCTS,,AUTO
         4 000754   000761 604400 4                  TMOZ    s:5654

      332     5653    4               THEN CALL M$MADMUCK( GET_PSN) ALTRET( TRY_NEXT_ACCT);
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:75   

   5653  4 000755   000352 630400 1                  EPPR0   GET_PSN
         4 000756   460005 713400                    CLIMB   alt,+24581
         4 000757   401000 401760                    pmme    nvectors=3
         4 000760   000722 702000 4                  TSX2    TRY_NEXT_ACCT

      333     5654    4               CALL M$OPEN( OPEN_ACCT_FIT) ALTRET( TRY_NEXT_ACCT);

   5654  4 000761   000260 630400 1                  EPPR0   OPEN_ACCT_FIT
         4 000762   450000 713400                    CLIMB   alt,open
         4 000763   410400 401760                    pmme    nvectors=18
         4 000764   000722 702000 4                  TSX2    TRY_NEXT_ACCT

      334     5655    4               IF AT_COOKIE < START_COOKIE THEN GOTO NEXT_DIR_ENTRY;

   5655  4 000765   200017 236100                    LDQ     AT_COOKIE,,AUTO
         4 000766   200020 116100                    CMPQ    START_COOKIE,,AUTO
         4 000767   001046 604000 4                  TMI     NEXT_DIR_ENTRY

      335     5656    4               CALL INDEX( READDIRRES.NAME.L, ' ', FID.ACCT);

   5656  4 000770   200006 470500                    LDP0    DIRRES$,,AUTO
         4 000771   000000 124400                    SCM     mask='000'O
         4 000772   002400 000010 1                  ADSC9   FID+4                    cn=0,n=8
         4 000773   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000774   000003 000100                    ARG     3,,PR0

      336     5657    4               CALL XLATE( READDIRRES.NAME.T, FU_XLATE, FID.ACCT);

   5657  4 000775   000003 720100                    LXL0    3,,PR0
         4 000776   040140 160400                    MVT     fill='040'O
         4 000777   002400 000010 1                  ADSC9   FID+4                    cn=0,n=8
         4 001000   000004 000010                    ADSC9   4,,PR0                   cn=0,n=*X0
         4 001001   000000 000000 3                  ARG     FU_XLATE

      337     5658    4               END;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:76   
      338     5659    3            F$ = ADDR( FM$FIT );

   5659  4 001002   000005 236000 5                  LDQ     5
         4 001003   200004 756100                    STQ     F$,,AUTO

      339     5660    3            CALL XSF$LOCCODP( F$, 04 )

   5660  4 001004   000006 236000 5                  LDQ     6
         4 001005   200045 756100                    STQ     UTSS+2,,AUTO
         4 001006   200004 630500                    EPPR0   F$,,AUTO
         4 001007   200044 450500                    STP0    UTSS+1,,AUTO
         4 001010   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 001011   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001012   000000 701000 xent               TSX1    XSF$LOCCODP
         4 001013   001031 702000 4                  TSX2    s:5664

      340     5661    4            WHENRETURN DO;

      341     5662    4               CALL XSL$HTONL( READDIRRES.FILEID, MOD( CODE04.CREATION.TIME, %(BITBIN(
              5662                        '040000000'X))));

   5662  4 001014   200004 470500                    LDP0    F$,,AUTO
         4 001015   000002 236100                    LDQ     2,,PR0
         4 001016   000007 376000 5                  ANQ     7
         4 001017   200044 756100                    STQ     UTSS+1,,AUTO
         4 001020   200044 631500                    EPPR1   UTSS+1,,AUTO
         4 001021   200047 451500                    STP1    UTSS+4,,AUTO
         4 001022   200006 236100                    LDQ     DIRRES$,,AUTO
         4 001023   000002 036003                    ADLQ    2,DU
         4 001024   200046 756100                    STQ     UTSS+3,,AUTO
         4 001025   200046 630500                    EPPR0   UTSS+3,,AUTO
         4 001026   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001027   000000 701000 xent               TSX1    XSL$HTONL
         4 001030   000000 011000                    NOP     0

      342     5663    4               END;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:77   
      343     5664    3            READDIRRES.PRESENT = 1;

   5664  4 001031   000001 235007                    LDA     1,DL
         4 001032   200006 470500                    LDP0    DIRRES$,,AUTO
         4 001033   000001 755100                    STA     1,,PR0

      344     5665    3            DIRRES$ = PINCRW( DIRRES$, SIZEW( READDIRRES));

   5665  4 001034   000003 720100                    LXL0    3,,PR0
         4 001035   000020 621010                    EAX1    16,X0
         4 001036   000000 636011                    EAQ     0,X1
         4 001037   000022 772000                    QRL     18
         4 001040   000011 402007                    MPY     9,DL
         4 001041   000043 036007                    ADLQ    35,DL
         4 001042   000044 506007                    DIV     36,DL
         4 001043   000022 736000                    QLS     18
         4 001044   200006 036100                    ADLQ    DIRRES$,,AUTO
         4 001045   200006 756100                    STQ     DIRRES$,,AUTO

   5665  4 001046                       NEXT_DIR_EN* null
      345     5666    3   NEXT_DIR_ENTRY:;
      346     5667    3            AT_COOKIE = AT_COOKIE + 1;

   5667  4 001046   200017 054100                    AOS     AT_COOKIE,,AUTO

      347     5668    3            CALL XSL$HTONL (READDIRRES.COOKIE, AT_COOKIE);

   5668  4 001047   200017 630500                    EPPR0   AT_COOKIE,,AUTO
         4 001050   200045 450500                    STP0    UTSS+2,,AUTO
         4 001051   200006 236100                    LDQ     DIRRES$,,AUTO
         4 001052   200044 756100                    STQ     UTSS+1,,AUTO
         4 001053   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 001054   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001055   000000 701000 xent               TSX1    XSL$HTONL
         4 001056   000000 011000                    NOP     0

      348     5669    3            END;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:78   

   5669  4 001057   200012 236100                    LDQ     MAXDIRRES$,,AUTO
         4 001060   200006 116100                    CMPQ    DIRRES$,,AUTO
         4 001061   000673 603000 4                  TRC     s:5630

      349     5670    2         EOD = 0;                /* not end of directory, just ran out of room   */

   5670  4 001062   200023 450100                    STZ     EOD,,AUTO

   5670  4 001063                       EODIR        null
      350     5671
      351     5672    2   EODIR: ;
      352     5673    2         READDIRRES.PRESENT = 0;

   5673  4 001063   200006 470500                    LDP0    DIRRES$,,AUTO
         4 001064   000001 450100                    STZ     1,,PR0

      353     5674    2         READDIRRES.EOF = EOD;

   5674  4 001065   200023 235100                    LDA     EOD,,AUTO
         4 001066   000002 755100                    STA     2,,PR0

      354     5675    2         IF UCTX.COOKIE.ID( 0) ~= AT_COOKIE

   5675  4 001067   200010 471500                    LDP1    UCTX$,,AUTO
         4 001070   100020 236100                    LDQ     16,,PR1
         4 001071   001074 604000 4                  TMI     s:5676
         4 001072   200017 116100                    CMPQ    AT_COOKIE,,AUTO
         4 001073   001077 600000 4                  TZE     s:5677

      355     5676    2         THEN UCTX.COOKIE( 1) = UCTX.COOKIE( 0);

   5676  4 001074   000100 100500                    MLR     fill='000'O
         4 001075   100020 000050                    ADSC9   16,,PR1                  cn=0,n=40
         4 001076   100032 000050                    ADSC9   26,,PR1                  cn=0,n=40

      356     5677    2         UCTX.COOKIE.ID( 0) = AT_COOKIE;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:79   

   5677  4 001077   200017 235100                    LDA     AT_COOKIE,,AUTO
         4 001100   100020 755100                    STA     16,,PR1

      357     5678    2         IF LIST_ACCTS = 0                 /* listing files                      */

   5678  4 001101   200024 236100                    LDQ     LIST_ACCTS,,AUTO
         4 001102   001107 601000 4                  TNZ     s:5680

      358     5679    2         THEN UCTX.COOKIE.NAME( 0) = FID.NAME;

   5679  4 001103   000100 100400                    MLR     fill='000'O
         4 001104   002402 000040 1                  ADSC9   FID+6                    cn=0,n=32
         4 001105   100021 000040                    ADSC9   17,,PR1                  cn=0,n=32
         4 001106   001112 710000 4                  TRA     s:5681

      359     5680    2         ELSE UCTX.COOKIE.NAME.T( 0) = FID.ACCT;

   5680  4 001107   040100 100400                    MLR     fill='040'O
         4 001110   002400 000010 1                  ADSC9   FID+4                    cn=0,n=8
         4 001111   100021 200037                    ADSC9   17,,PR1                  cn=1,n=31

      360     5681    2         RQSCTX.REPLYHDR.RESULT0 = %NFS_OK;

   5681  4 001112   200003 473500                    LDP3    @RQSCTX,,AUTO
         4 001113   300023 450100                    STZ     19,,PR3

      361     5682    2         RQSCTX.LEN = POFFC( ADDR( READDIRRES.NAME), REPLY$) +32;

   5682  4 001114   200006 236100                    LDQ     DIRRES$,,AUTO
         4 001115   000003 036003                    ADLQ    3,DU
         4 001116   000020 772000                    QRL     16
         4 001117   200044 756100                    STQ     UTSS+1,,AUTO
         4 001120   200007 236100                    LDQ     REPLY$,,AUTO
         4 001121   000020 772000                    QRL     16
         4 001122   200045 756100                    STQ     UTSS+2,,AUTO
         4 001123   200044 236100                    LDQ     UTSS+1,,AUTO
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:80   
         4 001124   200045 136100                    SBLQ    UTSS+2,,AUTO
         4 001125   000040 036007                    ADLQ    32,DL
         4 001126   300002 756100                    STQ     2,,PR3

      362     5683    2         CALL UNSETJIT;

   5683  4 001127   005051 701000 4                  TSX1    UNSETJIT
         4 001130   000000 011000                    NOP     0
         4 001131   002320 710000 4                  TRA     s:5898

      363     5684
      364     5685    2       CASE( %NFSPROC_REMOVE);

      365     5686    2         IF RQSCTX.LEN ~= 4* SIZEW( DIROP) THEN GOTO BAD_ARG;

   5686  4 001132   200005 471500                    LDP1    BODY$,,AUTO
         4 001133   100010 720100                    LXL0    8,,PR1
         4 001134   000044 621010                    EAX1    36,X0
         4 001135   000000 636011                    EAQ     0,X1
         4 001136   000022 772000                    QRL     18
         4 001137   000011 402007                    MPY     9,DL
         4 001140   000043 036007                    ADLQ    35,DL
         4 001141   000044 506007                    DIV     36,DL
         4 001142   000002 736000                    QLS     2
         4 001143   000002 116100                    CMPQ    2,,PR0
         4 001144   000054 601000 4                  TNZ     BAD_ARG

      366     5687    2         IF FCTX.FHANDLE.ACCTLNG = 0 OR FCTX.FID.ASN ~= %FILE#

   5687  4 001145   200011 473500                    LDP3    FCTX$,,AUTO
         4 001146   300002 236100                    LDQ     2,,PR3
         4 001147   017000 316007                    CANQ    7680,DL
         4 001150   002271 600000 4                  TZE     ERR_ACCES
         4 001151   300041 722100                    LXL2    33,,PR3
         4 001152   000001 102003                    CMPX2   1,DU
         4 001153   002271 601000 4                  TNZ     ERR_ACCES
         4 001154   300045 236100                    LDQ     37,,PR3
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:81   
         4 001155   777000 316003                    CANQ    -512,DU
         4 001156   002271 601000 4                  TNZ     ERR_ACCES

      367     5688    2           OR FCTX.FID.NAME.L > 0 THEN GOTO ERR_ACCES; /* not a .ACCT            */
      368     5689    2         CALL FINDDIROP ALTRET( BAD2);

   5689  4 001157   003335 701000 4                  TSX1    FINDDIROP
         4 001160   002315 702000 4                  TSX2    BAD2

      369     5690    2         CALL DELETE_FILE ALTRET( BAD2);

   5690  4 001161   004662 701000 4                  TSX1    DELETE_FILE
         4 001162   002315 702000 4                  TSX2    BAD2

      370     5691    2         REPLY.STAT = %NFS_OK;

   5691  4 001163   200007 470500                    LDP0    REPLY$,,AUTO
         4 001164   000000 450100                    STZ     0,,PR0

      371     5692    2         RQSCTX.LEN = 32+4;

   5692  4 001165   000044 235007                    LDA     36,DL
         4 001166   200003 471500                    LDP1    @RQSCTX,,AUTO
         4 001167   100002 755100                    STA     2,,PR1
         4 001170   002320 710000 4                  TRA     s:5898

      372     5693
      373     5694    2       CASE( %NFSPROC_RENAME);

      374     5695    2         CLOSE_RENAME.PROCATTR_ = VECTOR( NIL);

   5695  4 001171   000010 237000 5                  LDAQ    8
         4 001172   000060 757000 1                  STAQ    CLOSE_RENAME+18

      375     5696    2         SAVE_FCTX$ = FCTX$;

   5696  4 001173   200011 236100                    LDQ     FCTX$,,AUTO
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:82   
         4 001174   200014 756100                    STQ     SAVE_FCTX$,,AUTO

      376     5697    2         TO$ = PINCRW( BODY$, SIZEW( DIROP));

   5697  4 001175   200005 471500                    LDP1    BODY$,,AUTO
         4 001176   100010 720100                    LXL0    8,,PR1
         4 001177   000044 621010                    EAX1    36,X0
         4 001200   000000 636011                    EAQ     0,X1
         4 001201   000022 772000                    QRL     18
         4 001202   000011 402007                    MPY     9,DL
         4 001203   000043 036007                    ADLQ    35,DL
         4 001204   000044 506007                    DIV     36,DL
         4 001205   000022 736000                    QLS     18
         4 001206   200005 036100                    ADLQ    BODY$,,AUTO
         4 001207   200012 756100                    STQ     MAXDIRRES$,,AUTO

      377     5698    2         IF RQSCTX.LEN ~= 4*( SIZEW( DIROP) + SIZEW( TO$->DIROP)) THEN GOTO BAD_ARG;

   5698  4 001210   000000 636011                    EAQ     0,X1
         4 001211   000022 772000                    QRL     18
         4 001212   000011 402007                    MPY     9,DL
         4 001213   000043 036007                    ADLQ    35,DL
         4 001214   000044 506007                    DIV     36,DL
         4 001215   200012 473500                    LDP3    MAXDIRRES$,,AUTO
         4 001216   300010 722100                    LXL2    8,,PR3
         4 001217   000044 623012                    EAX3    36,X2
         4 001220   200044 756100                    STQ     UTSS+1,,AUTO
         4 001221   000000 636013                    EAQ     0,X3
         4 001222   000022 772000                    QRL     18
         4 001223   000011 402007                    MPY     9,DL
         4 001224   000043 036007                    ADLQ    35,DL
         4 001225   000044 506007                    DIV     36,DL
         4 001226   200044 036100                    ADLQ    UTSS+1,,AUTO
         4 001227   000002 736000                    QLS     2
         4 001230   000002 116100                    CMPQ    2,,PR0
         4 001231   000054 601000 4                  TNZ     BAD_ARG

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:83   
      378     5699    2         IF FCTX.FHANDLE.ACCTLNG = 0 OR FCTX.FID.ASN ~= %FILE#

   5699  4 001232   200011 474500                    LDP4    FCTX$,,AUTO
         4 001233   400002 236100                    LDQ     2,,PR4
         4 001234   017000 316007                    CANQ    7680,DL
         4 001235   002271 600000 4                  TZE     ERR_ACCES
         4 001236   400041 720100                    LXL0    33,,PR4
         4 001237   000001 100003                    CMPX0   1,DU
         4 001240   002271 601000 4                  TNZ     ERR_ACCES
         4 001241   400045 236100                    LDQ     37,,PR4
         4 001242   777000 316003                    CANQ    -512,DU
         4 001243   002271 601000 4                  TNZ     ERR_ACCES
         4 001244   000100 106500                    CMPC    fill='000'O
         4 001245   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
         4 001246   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32
         4 001247   002271 601000 4                  TNZ     ERR_ACCES

      379     5700    2           OR FCTX.FID.NAME.L > 0 OR DIROP.DIR ~= TO$-> DIROP.DIR
      380     5701    2         THEN GOTO ERR_ACCES;
      381     5702    2         CALL FINDDIROP ALTRET( BAD2);

   5702  4 001250   003335 701000 4                  TSX1    FINDDIROP
         4 001251   002315 702000 4                  TSX2    BAD2

      382     5703    2         IF NOT UCTX.FFLG.DELF THEN GOTO ERR_PERM;

   5703  4 001252   200010 470500                    LDP0    UCTX$,,AUTO
         4 001253   000015 236100                    LDQ     13,,PR0
         4 001254   020000 316003                    CANQ    8192,DU
         4 001255   002275 600000 4                  TZE     ERR_PERM

      383     5704    2         CALL CHECK_OWNER

   5704  4 001256   004564 701000 4                  TSX1    CHECK_OWNER
         4 001257   001261 702000 4                  TSX2    s:5706
         4 001260   001263 710000 4                  TRA     s:5708

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:84   
      384     5705    3         WHENALTRETURN DO;

      385     5706    3            CALL CHECK_WRITE ALTRET( ERR_ACCES);

   5706  4 001261   004526 701000 4                  TSX1    CHECK_WRITE
         4 001262   002271 702000 4                  TSX2    ERR_ACCES

      386     5707    3            END;

      387     5708    2         F$ = FCTX$;                       /* FCTX of file to move               */

   5708  4 001263   200011 236100                    LDQ     FCTX$,,AUTO
         4 001264   200004 756100                    STQ     F$,,AUTO

      388     5709    2         FCTX$ = SAVE_FCTX$;               /* FCTX of the account                */

   5709  4 001265   200014 236100                    LDQ     SAVE_FCTX$,,AUTO
         4 001266   200011 756100                    STQ     FCTX$,,AUTO

      389     5710    2         SAVE_FCTX$ = F$;

   5710  4 001267   200004 236100                    LDQ     F$,,AUTO
         4 001270   200014 756100                    STQ     SAVE_FCTX$,,AUTO

      390     5711    2         BODY$ = TO$;       /* look if the TO file exists - if so, delete it     */

   5711  4 001271   200012 236100                    LDQ     MAXDIRRES$,,AUTO
         4 001272   200005 756100                    STQ     BODY$,,AUTO

      391     5712    3         CALL FINDDIROP WHENRETURN DO;     /* already have this file on CP-6     */

   5712  4 001273   003335 701000 4                  TSX1    FINDDIROP
         4 001274   001300 702000 4                  TSX2    RENAME_DEL_ERR

      392     5713    3            CALL DELETE_FILE ALTRET( RENAME_DEL_ERR);

   5713  4 001275   004662 701000 4                  TSX1    DELETE_FILE
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:85   
         4 001276   001300 702000 4                  TSX2    RENAME_DEL_ERR

      393     5714    3            END;

   5714  4 001277   001304 710000 4                  TRA     s:5719

      394     5715    3         WHENALTRETURN DO;

      395     5716    3   RENAME_DEL_ERR:
      396     5717    3            IF REPLY.STAT ~= %NFSERR_NOENT THEN GOTO BAD2;

   5717  4 001300   200007 470500       RENAME_DEL_* LDP0    REPLY$,,AUTO
         4 001301   000000 235100                    LDA     0,,PR0
         4 001302   000002 115007                    CMPA    2,DL
         4 001303   002315 601000 4                  TNZ     BAD2

      397     5718    3            END;

      398     5719    2         BODY$ = RQSCTX.BODY$;

   5719  4 001304   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 001305   000003 236100                    LDQ     3,,PR0
         4 001306   200005 756100                    STQ     BODY$,,AUTO

      399     5720    2         FCTX$ = SAVE_FCTX$;               /* the FROM file                      */

   5720  4 001307   200014 236100                    LDQ     SAVE_FCTX$,,AUTO
         4 001310   200011 756100                    STQ     FCTX$,,AUTO

      400     5721    2         FID = FCTX.FID;

   5721  4 001311   200011 471500                    LDP1    FCTX$,,AUTO
         4 001312   000000 100500                    MLR     fill='000'O
         4 001313   100037 000070                    ADSC9   31,,PR1                  cn=0,n=56
         4 001314   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      401     5722    2         CALL TIMEVAL( FCTX.FATTR.MTIME, FU_TIME);
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:86   

   5722  4 001315   000012 236000 5                  LDQ     10
         4 001316   200042 756100                    STQ     @RESULT+1,,AUTO
         4 001317   200011 236100                    LDQ     FCTX$,,AUTO
         4 001320   000033 036003                    ADLQ    27,DU
         4 001321   200041 756100                    STQ     MODTIME+4,,AUTO
         4 001322   005065 701000 4                  TSX1    TIMEVAL
         4 001323   000000 011000                    NOP     0

      402     5723    2         FCTX.FATTR.ATIME = FCTX.FATTR.MTIME;

   5723  4 001324   200011 470500                    LDP0    FCTX$,,AUTO
         4 001325   000100 100500                    MLR     fill='000'O
         4 001326   000033 000010                    ADSC9   27,,PR0                  cn=0,n=8
         4 001327   000031 000010                    ADSC9   25,,PR0                  cn=0,n=8

      403     5724    2         UFATTR.Q.FATTR = FCTX.FATTR;

   5724  4 001330   000000 100500                    MLR     fill='000'O
         4 001331   000016 000104                    ADSC9   14,,PR0                  cn=0,n=68
         4 001332   002416 000104 1                  ADSC9   UFATTR+4                 cn=0,n=68

      404     5725    2         UFATTR.Q.MODTIME = FU_TIME;

   5725  4 001333   000000 235000 xsym               LDA     FU_TIME
         4 001334   002415 755000 1                  STA     UFATTR+3

      405     5726    2         IF FCTX.FATTR.XATTR.UFIT & FCTX.FITMOD

   5726  4 001335   000015 236100                    LDQ     13,,PR0
         4 001336   400000 376003                    ANQ     -131072,DU
         4 001337   200044 756100                    STQ     UTSS+1,,AUTO
         4 001340   000017 236100                    LDQ     15,,PR0
         4 001341   000001 736000                    QLS     1
         4 001342   400000 376003                    ANQ     -131072,DU
         4 001343   200044 376100                    ANQ     UTSS+1,,AUTO
         4 001344   001347 600000 4                  TZE     s:5728
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:87   

      406     5727    2         THEN CLOSE_RENAME.PROCATTR_ = FPT_CLOSE.PROCATTR_;

   5727  4 001345   000022 237000 1                  LDAQ    FPT_CLOSE+18
         4 001346   000060 757000 1                  STAQ    CLOSE_RENAME+18

      407     5728    2         CLOSE_RENAME.V.DCB# = FCTX.DCB#;

   5728  4 001347   000012 220100                    LDX0    10,,PR0
         4 001350   000070 740000 1                  STX0    CLOSE_RENAME+26

      408     5729    3         IF CLOSE_RENAME.V.DCB# = 0 THEN DO;

   5729  4 001351   001357 601000 4                  TNZ     s:5733

      409     5730    3            CALL TESTOPEN ALTRET( BAD2);

   5730  4 001352   003506 701000 4                  TSX1    TESTOPEN
         4 001353   002315 702000 4                  TSX2    BAD2

      410     5731    3            CLOSE_RENAME.V.DCB# = DCBNUM( F$TEST);

   5731  4 001354   000000 236007 xsym               LDQ     F$TEST,DL
         4 001355   000000 620006                    EAX0    0,QL
         4 001356   000070 740000 1                  STX0    CLOSE_RENAME+26

      411     5732    3            END;

      412     5733    3         CALL M$REW( CLOSE_RENAME) WHENALTRETURN DO; END;

   5733  4 001357   000036 630400 1                  EPPR0   CLOSE_RENAME
         4 001360   440006 713400                    CLIMB   alt,+16390
         4 001361   400000 401760                    pmme    nvectors=1
         4 001362   001364 702000 4                  TSX2    s:5734
         4 001363   001364 710000 4                  TRA     s:5734

      413     5734    2         FID.NAME.L = TO$->DIROP.NAME.L;   /* the name to use for the RENAME     */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:88   

   5734  4 001364   200012 470500                    LDP0    MAXDIRRES$,,AUTO
         4 001365   000010 236100                    LDQ     8,,PR0
         4 001366   000033 736000                    QLS     27
         4 001367   002402 552040 1                  STBQ    FID+6,'40'O

      414     5735    2         CALL XLATE( FID.NAME.T, FU_XLATE, TO$->DIROP.NAME.T);

   5735  4 001370   000010 720100                    LXL0    8,,PR0
         4 001371   040000 160540                    MVT     fill='040'O
         4 001372   000011 000010                    ADSC9   9,,PR0                   cn=0,n=*X0
         4 001373   002402 200037 1                  ADSC9   FID+6                    cn=1,n=31
         4 001374   000000 000000 3                  ARG     FU_XLATE

      415     5736
      416     5737    2         CALL M$CLOSE( CLOSE_RENAME) ALTRET( ERR_ACCES);

   5737  4 001375   000036 630400 1                  EPPR0   CLOSE_RENAME
         4 001376   450001 713400                    CLIMB   alt,close
         4 001377   406000 401760                    pmme    nvectors=13
         4 001400   002271 702000 4                  TSX2    ERR_ACCES

      417     5738    2         FCTX.FITMOD = '0'B;

   5738  4 001401   200011 470500                    LDP0    FCTX$,,AUTO
         4 001402   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 001403   000015 356100                    ANSQ    13,,PR0

      418     5739    2         I = TO$->DIROP.DIR.ACCTLNG + TO$->DIROP.DIR.PSNLNG;

   5739  4 001404   200012 471500                    LDP1    MAXDIRRES$,,AUTO
         4 001405   100000 236100                    LDQ     0,,PR1
         4 001406   000015 772000                    QRL     13
         4 001407   000007 376007                    ANQ     7,DL
         4 001410   200044 756100                    STQ     UTSS+1,,AUTO
         4 001411   100000 236100                    LDQ     0,,PR1
         4 001412   000011 772000                    QRL     9
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:89   
         4 001413   000017 376007                    ANQ     15,DL
         4 001414   200044 036100                    ADLQ    UTSS+1,,AUTO
         4 001415   200015 756100                    STQ     I,,AUTO

      419     5740    2         SUBSTR( TO$->DIROP.DIR.TEXT,I,FID.NAME.L) = FID.NAME.T;

   5740  4 001416   002402 236000 1                  LDQ     FID+6
         4 001417   000033 772000                    QRL     27
         4 001420   000000 620006                    EAX0    0,QL
         4 001421   200015 235100                    LDA     I,,AUTO
         4 001422   040145 100400                    MLR     fill='040'O
         4 001423   002402 200037 1                  ADSC9   FID+6                    cn=1,n=31
         4 001424   100000 600010                    ADSC9   0,A,PR1                  cn=3,n=*X0

      420     5741    2         TO$->DIROP.DIR.STAMP = FCTX.FHANDLE.STAMP;

   5741  4 001425   000002 220100                    LDX0    2,,PR0
         4 001426   100000 740100                    STX0    0,,PR1

      421     5742    2         FCTX.FID.NAME = TO$->DIROP.DIR;   /* Save the new fhandle               */

   5742  4 001427   000100 100500                    MLR     fill='000'O
         4 001430   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
         4 001431   000045 000040                    ADSC9   37,,PR0                  cn=0,n=32

      422     5743    2         FCTX.RENAMED = '1'B;

   5743  4 001432   200000 236003                    LDQ     65536,DU
         4 001433   000015 256100                    ORSQ    13,,PR0

      423     5744    3         IF FCTX.DCB# ~= 0 THEN DO;

   5744  4 001434   000012 220100                    LDX0    10,,PR0
         4 001435   001450 600000 4                  TZE     s:5750

      424     5745    3            FCTX.DCB# = 0;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:90   
   5745  4 001436   000000 221003                    LDX1    0,DU
         4 001437   000012 741100                    STX1    10,,PR0

      425     5746    3            CALL M$RELDCB( CLOSE_RENAME);

   5746  4 001440   000036 630400 1                  EPPR0   CLOSE_RENAME
         4 001441   060003 713400                    CLIMB   24579
         4 001442   400000 401760                    pmme    nvectors=1

      426     5747    3            DS.P.FCNT( FU_PROC#) = DS.P.FCNT( FU_PROC#) - 1;

   5747  4 001443   000000 235000 xsym               LDA     FU_PROC#
         4 001444   000004 735000                    ALS     4
         4 001445   000000 470400 xsym               LDP0    B$DS8
         4 001446   000001 336007                    LCQ     1,DL
         4 001447   000050 056105                    ASQ     40,AL,PR0

      427     5748    3            END;

      428     5749
      429     5750    2         FCTX$ = FU_FCTX$;       /* look for renamed FCTX, if exists, delete it  */

   5750  4 001450   000000 236000 xsym               LDQ     FU_FCTX$
         4 001451   200011 756100                    STQ     FCTX$,,AUTO

      430     5751    3         DO WHILE FCTX$ ~= ADDR( NIL);

   5751  4 001452   001471 710000 4                  TRA     s:5755

      431     5752    3            F$ = FCTX.LNK$;                /* next FCTX in the chain             */

   5752  4 001453   200011 470500                    LDP0    FCTX$,,AUTO
         4 001454   000000 236100                    LDQ     0,,PR0
         4 001455   200004 756100                    STQ     F$,,AUTO

      432     5753    3            IF FCTX.FHANDLE = TO$->DIROP.DIR THEN CALL FUG$REMOVE_FCTX( FCTX);

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:91   
   5753  4 001456   200012 471500                    LDP1    MAXDIRRES$,,AUTO
         4 001457   000100 106500                    CMPC    fill='000'O
         4 001460   000002 000040                    ADSC9   2,,PR0                   cn=0,n=32
         4 001461   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
         4 001462   001467 601000 4                  TNZ     s:5754

   5753  4 001463   200011 630500                    EPPR0   FCTX$,,AUTO
         4 001464   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001465   000000 701000 xent               TSX1    FUG$REMOVE_FCTX
         4 001466   000000 011000                    NOP     0

      433     5754    3            FCTX$ = F$;

   5754  4 001467   200004 236100                    LDQ     F$,,AUTO
         4 001470   200011 756100                    STQ     FCTX$,,AUTO

      434     5755    3            END;

   5755  4 001471   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 001472   001453 601000 4                  TNZ     s:5752

      435     5756
      436     5757    2         REPLY.STAT = %NFS_OK;

   5757  4 001473   200007 470500                    LDP0    REPLY$,,AUTO
         4 001474   000000 450100                    STZ     0,,PR0

      437     5758    2         RQSCTX.LEN = 32+4;

   5758  4 001475   000044 235007                    LDA     36,DL
         4 001476   200003 471500                    LDP1    @RQSCTX,,AUTO
         4 001477   100002 755100                    STA     2,,PR1
         4 001500   002320 710000 4                  TRA     s:5898

      438     5759
      439     5760    2       CASE( %NFSPROC_CREATE);

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:92   
      440     5761    2         IF FCTX.FATTR.TYPE ~= %NFDIR THEN GOTO ERR_NOTDIR;

   5761  4 001501   200011 471500                    LDP1    FCTX$,,AUTO
         4 001502   100016 235100                    LDA     14,,PR1
         4 001503   000002 115007                    CMPA    2,DL
         4 001504   002305 601000 4                  TNZ     ERR_NOTDIR

      441     5762    2         IF FCTX.FHANDLE.ACCTLNG = 0 OR NOT UCTX.FFLG.CREATE THEN GOTO ERR_ACCES;

   5762  4 001505   100002 236100                    LDQ     2,,PR1
         4 001506   017000 316007                    CANQ    7680,DL
         4 001507   002271 600000 4                  TZE     ERR_ACCES
         4 001510   200010 473500                    LDP3    UCTX$,,AUTO
         4 001511   300015 430100                    FSZN    13,,PR3
         4 001512   002271 605000 4                  TPL     ERR_ACCES

      442     5763    2         FPT_CLOSE.V.DCB# = DCBNUM( F$TEST);

   5763  4 001513   000000 236007 xsym               LDQ     F$TEST,DL
         4 001514   000000 620006                    EAX0    0,QL
         4 001515   000032 740000 1                  STX0    FPT_CLOSE+26

      443     5764    2         FPT_CLOSE.V.DISP# = %SAVE#;

   5764  4 001516   000002 236007                    LDQ     2,DL
         4 001517   000032 552004 1                  STBQ    FPT_CLOSE+26,'04'O

      444     5765    2         FPT_CLOSE.V.OPER.CHGATT# = '1'B;

   5765  4 001520   400000 236007                    LDQ     -131072,DL
         4 001521   000032 256000 1                  ORSQ    FPT_CLOSE+26

      445     5766    2         TO$ = FCTX$;

   5766  4 001522   200011 236100                    LDQ     FCTX$,,AUTO
         4 001523   200012 756100                    STQ     MAXDIRRES$,,AUTO

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:93   
      446     5767    3         CALL FINDDIROP WHENRETURN DO;     /* already have this file on CP-6     */

   5767  4 001524   003335 701000 4                  TSX1    FINDDIROP
         4 001525   001574 702000 4                  TSX2    s:5780

      447     5768    3            IF NOT UCTX.FFLG.DELR THEN GOTO ERR_ACCES;

   5768  4 001526   200010 470500                    LDP0    UCTX$,,AUTO
         4 001527   000015 236100                    LDQ     13,,PR0
         4 001530   200000 316003                    CANQ    65536,DU
         4 001531   002271 600000 4                  TZE     ERR_ACCES

      448     5769    3            IF NOT UCTX.FFLG.REATTR THEN GOTO ERR_PERM;

   5769  4 001532   004000 316003                    CANQ    2048,DU
         4 001533   002275 600000 4                  TZE     ERR_PERM

      449     5770    3            CALL CHECK_WRITE ALTRET( ERR_ACCES);

   5770  4 001534   004526 701000 4                  TSX1    CHECK_WRITE
         4 001535   002271 702000 4                  TSX2    ERR_ACCES

      450     5771    3            DIROPRES.STAT = %NFS_OK;

   5771  4 001536   200007 470500                    LDP0    REPLY$,,AUTO
         4 001537   000000 450100                    STZ     0,,PR0

      451     5772    3            FID = FCTX.FID;

   5772  4 001540   200011 471500                    LDP1    FCTX$,,AUTO
         4 001541   000000 100500                    MLR     fill='000'O
         4 001542   100037 000070                    ADSC9   31,,PR1                  cn=0,n=56
         4 001543   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      452     5773    3            IF FCTX.DCB# ~= 0

   5773  4 001544   100012 220100                    LDX0    10,,PR1
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:94   
         4 001545   001550 600000 4                  TZE     s:5775

      453     5774    3            THEN FPT_CLOSE.V.DCB# = FCTX.DCB#;

   5774  4 001546   000032 740000 1                  STX0    FPT_CLOSE+26
         4 001547   001552 710000 4                  TRA     s:5776

      454     5775    3            ELSE CALL TESTOPEN ALTRET( BAD2);

   5775  4 001550   003506 701000 4                  TSX1    TESTOPEN
         4 001551   002315 702000 4                  TSX2    BAD2

      455     5776    3            CALL UPDATEFATTR( PINCRW( ADDR(DIROP), SIZEW( DIROP))-> DIROP);

   5776  4 001552   200005 470500                    LDP0    BODY$,,AUTO
         4 001553   000010 720100                    LXL0    8,,PR0
         4 001554   000044 621010                    EAX1    36,X0
         4 001555   000000 636011                    EAQ     0,X1
         4 001556   000022 772000                    QRL     18
         4 001557   000011 402007                    MPY     9,DL
         4 001560   000043 036007                    ADLQ    35,DL
         4 001561   000044 506007                    DIV     36,DL
         4 001562   000022 736000                    QLS     18
         4 001563   200005 036100                    ADLQ    BODY$,,AUTO
         4 001564   200027 756100                    STQ     LIST_ACCTS+3,,AUTO
         4 001565   004414 701000 4                  TSX1    UPDATEFATTR
         4 001566   000000 011000                    NOP     0

      456     5777    3            UFATTR.Q.FATTR = FCTX.FATTR;

   5777  4 001567   200011 470500                    LDP0    FCTX$,,AUTO
         4 001570   000000 100500                    MLR     fill='000'O
         4 001571   000016 000104                    ADSC9   14,,PR0                  cn=0,n=68
         4 001572   002416 000104 1                  ADSC9   UFATTR+4                 cn=0,n=68

      457     5778    3            END;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:95   
   5778  4 001573   001674 710000 4                  TRA     s:5800

      458     5779    3         WHENALTRETURN DO;

      459     5780    3            IF DIROPRES.STAT ~= %NFSERR_NOENT THEN GOTO BAD2;

   5780  4 001574   200007 470500                    LDP0    REPLY$,,AUTO
         4 001575   000000 235100                    LDA     0,,PR0
         4 001576   000002 115007                    CMPA    2,DL
         4 001577   002315 601000 4                  TNZ     BAD2

      460     5781    3            DIROPRES.STAT = %NFS_OK;

   5781  4 001600   000000 450100                    STZ     0,,PR0

      461     5782    3            FCTX$ = ADDR( NIL);

   5782  4 001601   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 001602   200011 756100                    STQ     FCTX$,,AUTO

      462     5783    3            CALL SETJIT;

   5783  4 001603   005016 701000 4                  TSX1    SETJIT
         4 001604   000000 011000                    NOP     0

      463     5784    3            CALL CREATOPN; CALL CREATCLNUP; /* messes with the FPT too much      */

   5784  4 001605   003753 701000 4                  TSX1    CREATOPN
         4 001606   000000 011000                    NOP     0

   5784  4 001607   003776 701000 4                  TSX1    CREATCLNUP
         4 001610   000000 011000                    NOP     0

      464     5785    3            CALL UNSETJIT;

   5785  4 001611   005051 701000 4                  TSX1    UNSETJIT
         4 001612   000000 011000                    NOP     0
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:96   

      465     5786    3            UFATTR.Q.FATTR.TYPE = 0;       /* It's garbage at the moment         */

   5786  4 001613   002416 450000 1                  STZ     UFATTR+4

      466     5787    3            CALL M$CLOSE( FPT_CLOSE) ALTRET( ERR_ACCES);

   5787  4 001614   000000 630400 1                  EPPR0   FPT_CLOSE
         4 001615   450001 713400                    CLIMB   alt,close
         4 001616   406000 401760                    pmme    nvectors=13
         4 001617   002271 702000 4                  TSX2    ERR_ACCES

      467     5788    3            IF DIROPRES.STAT ~= %NFS_OK THEN GOTO BAD2;

   5788  4 001620   200007 470500                    LDP0    REPLY$,,AUTO
         4 001621   000000 235100                    LDA     0,,PR0
         4 001622   002315 601000 4                  TNZ     BAD2

      468     5789    3            CALL TESTOPEN ALTRET( BAD2);

   5789  4 001623   003506 701000 4                  TSX1    TESTOPEN
         4 001624   002315 702000 4                  TSX2    BAD2

      469     5790    3            CALL MAKEFSID( DIROP.DIR);

   5790  4 001625   200005 236100                    LDQ     BODY$,,AUTO
         4 001626   200033 756100                    STQ     ACCESS+2,,AUTO
         4 001627   004606 701000 4                  TSX1    MAKEFSID
         4 001630   000000 011000                    NOP     0

      470     5791    3            CALL MAKEFATTR( UFATTR.Q.FATTR);

   5791  4 001631   000013 236000 5                  LDQ     11
         4 001632   200033 756100                    STQ     ACCESS+2,,AUTO
         4 001633   004013 701000 4                  TSX1    MAKEFATTR
         4 001634   000000 011000                    NOP     0

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:97   
      471     5792    3            DIROP.DIR.STAMP = CREATUTS;

   5792  4 001635   200016 720100                    LXL0    CREATUTS,,AUTO
         4 001636   200005 470500                    LDP0    BODY$,,AUTO
         4 001637   000000 740100                    STX0    0,,PR0

      472     5793    3            UFATTR.Q.FATTR.UID = UCTX.USER.UID;

   5793  4 001640   200010 471500                    LDP1    UCTX$,,AUTO
         4 001641   100004 235100                    LDA     4,,PR1
         4 001642   002421 755000 1                  STA     UFATTR+7

      473     5794    3            UFATTR.Q.FATTR.GID = UCTX.USER.GID;

   5794  4 001643   100005 235100                    LDA     5,,PR1
         4 001644   002422 755000 1                  STA     UFATTR+8

      474     5795    3            UFATTR.Q.FATTR.XATTR.UFIT = '1'B;

   5795  4 001645   200000 236003                    LDQ     65536,DU
         4 001646   002417 256000 1                  ORSQ    UFATTR+5

      475     5796                                      /* make addr(FCTX.FATTR) = addr(UFATTR.Q.FATTR) */
      476     5797    3            FCTX$ = PINCRW( ADDR( UFATTR.Q.FATTR), POFFW( FCTX$, ADDR(FCTX.FATTR)));

   5797  4 001647   200011 236100                    LDQ     FCTX$,,AUTO
         4 001650   000016 036003                    ADLQ    14,DU
         4 001651   000022 772000                    QRL     18
         4 001652   200044 756100                    STQ     UTSS+1,,AUTO
         4 001653   200011 236100                    LDQ     FCTX$,,AUTO
         4 001654   000022 772000                    QRL     18
         4 001655   200044 136100                    SBLQ    UTSS+1,,AUTO
         4 001656   002416 633406 1                  EPPR3   UFATTR+4,QL
         4 001657   200011 453500                    STP3    FCTX$,,AUTO

      477     5798    3            CALL UPDATEFATTR( PINCRW( ADDR(DIROP), SIZEW( DIROP))-> DIROP);

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:98   
   5798  4 001660   000010 720100                    LXL0    8,,PR0
         4 001661   000044 621010                    EAX1    36,X0
         4 001662   000000 636011                    EAQ     0,X1
         4 001663   000022 772000                    QRL     18
         4 001664   000011 402007                    MPY     9,DL
         4 001665   000043 036007                    ADLQ    35,DL
         4 001666   000044 506007                    DIV     36,DL
         4 001667   000022 736000                    QLS     18
         4 001670   200005 036100                    ADLQ    BODY$,,AUTO
         4 001671   200027 756100                    STQ     LIST_ACCTS+3,,AUTO
         4 001672   004414 701000 4                  TSX1    UPDATEFATTR
         4 001673   000000 011000                    NOP     0

      478     5799    3            END;

      479     5800    3         CALL M$REW( FPT_CLOSE) WHENALTRETURN DO; END; /* open file if not       */

   5800  4 001674   000000 630400 1                  EPPR0   FPT_CLOSE
         4 001675   440006 713400                    CLIMB   alt,+16390
         4 001676   400000 401760                    pmme    nvectors=1
         4 001677   001701 702000 4                  TSX2    s:5801
         4 001700   001701 710000 4                  TRA     s:5801

      480     5801    2         IF DIROPRES.STAT ~= %NFS_OK THEN GOTO BAD2;

   5801  4 001701   200007 470500                    LDP0    REPLY$,,AUTO
         4 001702   000000 235100                    LDA     0,,PR0
         4 001703   002315 601000 4                  TNZ     BAD2

      481     5802    2         UFATTR.Q.MODTIME = FU_TIME;

   5802  4 001704   000000 236000 xsym               LDQ     FU_TIME
         4 001705   002415 756000 1                  STQ     UFATTR+3

      482     5803    2         DIROPRES.FILE = DIROP.DIR;

   5803  4 001706   200005 471500                    LDP1    BODY$,,AUTO
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:99   
         4 001707   000100 100500                    MLR     fill='000'O
         4 001710   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
         4 001711   000001 000040                    ADSC9   1,,PR0                   cn=0,n=32

      483     5804    2         DIROPRES.FATTR = UFATTR.Q.FATTR;

   5804  4 001712   000100 100400                    MLR     fill='000'O
         4 001713   002416 000104 1                  ADSC9   UFATTR+4                 cn=0,n=68
         4 001714   000011 000104                    ADSC9   9,,PR0                   cn=0,n=68

      484     5805    2         DIROPRES.FATTR.XATTR = '0'B;

   5805  4 001715   000000 220003                    LDX0    0,DU
         4 001716   000012 740100                    STX0    10,,PR0

      485     5806    2         DELETE_ALL.V.DCB# = FPT_CLOSE.V.DCB#;

   5806  4 001717   000032 221000 1                  LDX1    FPT_CLOSE+26
         4 001720   000372 741000 1                  STX1    DELETE_ALL+8

      486     5807    3         IF FCTX.FATTR.SIZE = 0 THEN CALL M$DELREC( DELETE_ALL) WHENALTRETURN DO; END;

   5807  4 001721   200011 473500                    LDP3    FCTX$,,AUTO
         4 001722   300023 235100                    LDA     19,,PR3
         4 001723   001731 601000 4                  TNZ     s:5808

   5807  4 001724   000362 630400 1                  EPPR0   DELETE_ALL
         4 001725   440002 713400                    CLIMB   alt,+16386
         4 001726   401400 401760                    pmme    nvectors=4
         4 001727   001731 702000 4                  TSX2    s:5808
         4 001730   001731 710000 4                  TRA     s:5808

      487     5808    2         CALL M$CLOSE( FPT_CLOSE) ALTRET( ERR_ACCES);

   5808  4 001731   000000 630400 1                  EPPR0   FPT_CLOSE
         4 001732   450001 713400                    CLIMB   alt,close
         4 001733   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:100  
         4 001734   002271 702000 4                  TSX2    ERR_ACCES

      488     5809    2         RQSCTX.LEN = 32+SIZEC( DIROPRES);

   5809  4 001735   000210 235007                    LDA     136,DL
         4 001736   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 001737   000002 755100                    STA     2,,PR0
         4 001740   002320 710000 4                  TRA     s:5898

      489     5810
      490     5811    2       CASE( %NFSPROC_SETATTR);

      491     5812    2         IF FCTX.FATTR.TYPE ~= %NFREG THEN GOTO ERR_ISDIR;

   5812  4 001741   200011 471500                    LDP1    FCTX$,,AUTO
         4 001742   100016 235100                    LDA     14,,PR1
         4 001743   000001 115007                    CMPA    1,DL
         4 001744   002311 601000 4                  TNZ     ERR_ISDIR

      492     5813    2         IF NOT UCTX.FFLG.REATTR THEN GOTO ERR_PERM;

   5813  4 001745   200010 473500                    LDP3    UCTX$,,AUTO
         4 001746   300015 236100                    LDQ     13,,PR3
         4 001747   004000 316003                    CANQ    2048,DU
         4 001750   002275 600000 4                  TZE     ERR_PERM

      493     5814    2         CALL CHECK_OWNER ALTRET( ERR_PERM);

   5814  4 001751   004564 701000 4                  TSX1    CHECK_OWNER
         4 001752   002275 702000 4                  TSX2    ERR_PERM

      494     5815    2         CALL TIMEVAL( FCTX.FATTR.MTIME, FU_TIME);

   5815  4 001753   000012 236000 5                  LDQ     10
         4 001754   200042 756100                    STQ     @RESULT+1,,AUTO
         4 001755   200011 236100                    LDQ     FCTX$,,AUTO
         4 001756   000033 036003                    ADLQ    27,DU
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:101  
         4 001757   200041 756100                    STQ     MODTIME+4,,AUTO
         4 001760   005065 701000 4                  TSX1    TIMEVAL
         4 001761   000000 011000                    NOP     0

      495     5816    2         CALL UPDATEFATTR( DIROP.NAME);

   5816  4 001762   200005 236100                    LDQ     BODY$,,AUTO
         4 001763   000010 036003                    ADLQ    8,DU
         4 001764   200027 756100                    STQ     LIST_ACCTS+3,,AUTO
         4 001765   004414 701000 4                  TSX1    UPDATEFATTR
         4 001766   000000 011000                    NOP     0

      496     5817    2         FCTX.FITMOD = '0'B;

   5817  4 001767   200011 470500                    LDP0    FCTX$,,AUTO
         4 001770   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 001771   000015 356100                    ANSQ    13,,PR0

      497     5818    2         UFATTR.Q.FATTR = FCTX.FATTR;

   5818  4 001772   000000 100500                    MLR     fill='000'O
         4 001773   000016 000104                    ADSC9   14,,PR0                  cn=0,n=68
         4 001774   002416 000104 1                  ADSC9   UFATTR+4                 cn=0,n=68

      498     5819    2         UFATTR.Q.MODTIME = FU_TIME;

   5819  4 001775   000000 235000 xsym               LDA     FU_TIME
         4 001776   002415 755000 1                  STA     UFATTR+3

      499     5820    2         FID = FCTX.FID;

   5820  4 001777   000000 100500                    MLR     fill='000'O
         4 002000   000037 000070                    ADSC9   31,,PR0                  cn=0,n=56
         4 002001   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      500     5821    2         FPT_CLOSE.V.DISP# = 0;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:102  
   5821  4 002002   000000 236003                    LDQ     0,DU
         4 002003   000032 552004 1                  STBQ    FPT_CLOSE+26,'04'O

      501     5822    2         FPT_CLOSE.V.DCB# = FCTX.DCB#;

   5822  4 002004   000012 220100                    LDX0    10,,PR0
         4 002005   000032 740000 1                  STX0    FPT_CLOSE+26

      502     5823    2         FPT_CLOSE.V.OPER.CHGATT# = '1'B;

   5823  4 002006   400000 236007                    LDQ     -131072,DL
         4 002007   000032 256000 1                  ORSQ    FPT_CLOSE+26

      503     5824    3         IF FPT_CLOSE.V.DCB# = 0 THEN DO;

   5824  4 002010   000000 100003                    CMPX0   0,DU
         4 002011   002017 601000 4                  TNZ     s:5828

      504     5825    3            CALL TESTOPEN ALTRET( BAD2);

   5825  4 002012   003506 701000 4                  TSX1    TESTOPEN
         4 002013   002315 702000 4                  TSX2    BAD2

      505     5826    3            FPT_CLOSE.V.DCB# = DCBNUM( F$TEST);

   5826  4 002014   000000 236007 xsym               LDQ     F$TEST,DL
         4 002015   000000 620006                    EAX0    0,QL
         4 002016   000032 740000 1                  STX0    FPT_CLOSE+26

      506     5827    3            END;

      507     5828    3         CALL M$REW( FPT_CLOSE) WHENALTRETURN DO; END;

   5828  4 002017   000000 630400 1                  EPPR0   FPT_CLOSE
         4 002020   440006 713400                    CLIMB   alt,+16390
         4 002021   400000 401760                    pmme    nvectors=1
         4 002022   002024 702000 4                  TSX2    s:5829
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:103  
         4 002023   002024 710000 4                  TRA     s:5829

      508     5829    2         CALL M$CLOSE( FPT_CLOSE);

   5829  4 002024   000000 630400 1                  EPPR0   FPT_CLOSE
         4 002025   050001 713400                    CLIMB   close
         4 002026   406000 401760                    pmme    nvectors=13

      509     5830    2         CALL REOPEN;

   5830  4 002027   003710 701000 4                  TSX1    REOPEN
         4 002030   000000 011000                    NOP     0

      510     5831    2         ATTRSTAT.STAT = %NFS_OK;

   5831  4 002031   200007 470500                    LDP0    REPLY$,,AUTO
         4 002032   000000 450100                    STZ     0,,PR0

      511     5832    2         ATTRSTAT.FATTR = FCTX.FATTR;

   5832  4 002033   200011 471500                    LDP1    FCTX$,,AUTO
         4 002034   000100 100500                    MLR     fill='000'O
         4 002035   100016 000104                    ADSC9   14,,PR1                  cn=0,n=68
         4 002036   000001 000104                    ADSC9   1,,PR0                   cn=0,n=68

      512     5833    2         ATTRSTAT.FATTR.XATTR = '0'B;

   5833  4 002037   000000 220003                    LDX0    0,DU
         4 002040   000002 740100                    STX0    2,,PR0

      513     5834    2         RQSCTX.LEN = 32 + SIZEC( ATTRSTAT);

   5834  4 002041   000150 235007                    LDA     104,DL
         4 002042   200003 473500                    LDP3    @RQSCTX,,AUTO
         4 002043   300002 755100                    STA     2,,PR3
         4 002044   002320 710000 4                  TRA     s:5898

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:104  
      514     5835
      515     5836    2       CASE( %NFSPROC_STATFS);        /* not really much meaning on this CP-6    */

      516     5837    2         STATFS.STAT = %NFS_OK;

   5837  4 002045   200007 471500                    LDP1    REPLY$,,AUTO
         4 002046   100000 450100                    STZ     0,,PR1

      517     5838    2         CALL XSL$HTONL (STATFS.TSIZE, DS.TRANSIZE);

   5838  4 002047   000000 236000 xsym               LDQ     B$DS8
         4 002050   000020 036003                    ADLQ    16,DU
         4 002051   200045 756100                    STQ     UTSS+2,,AUTO
         4 002052   200007 236100                    LDQ     REPLY$,,AUTO
         4 002053   000001 036003                    ADLQ    1,DU
         4 002054   200044 756100                    STQ     UTSS+1,,AUTO
         4 002055   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 002056   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 002057   000000 701000 xent               TSX1    XSL$HTONL
         4 002060   000000 011000                    NOP     0

      518     5839    2         STATFS.BSIZE = STATFS.TSIZE;

   5839  4 002061   200007 470500                    LDP0    REPLY$,,AUTO
         4 002062   000001 235100                    LDA     1,,PR0
         4 002063   000002 755100                    STA     2,,PR0

      519     5840    2         STATFS.BLOCKS = STATFS.TSIZE;     /* just numbers out of the air        */

   5840  4 002064   000003 755100                    STA     3,,PR0

      520     5841    2         STATFS.BFREE = STATFS.TSIZE;

   5841  4 002065   000004 755100                    STA     4,,PR0

      521     5842    2         STATFS.BAVAIL = STATFS.TSIZE;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:105  
   5842  4 002066   000005 755100                    STA     5,,PR0

      522     5843    2         RQSCTX.LEN = 32 + SIZEC( STATFS);

   5843  4 002067   000070 236007                    LDQ     56,DL
         4 002070   200003 471500                    LDP1    @RQSCTX,,AUTO
         4 002071   100002 756100                    STQ     2,,PR1
         4 002072   002320 710000 4                  TRA     s:5898

      523     5844
      524     5845    2       CASE( %NFSPROC_READ);

      525     5846    2         IF FCTX.FATTR.TYPE ~= %NFREG THEN GOTO ERR_ISDIR;

   5846  4 002073   200011 471500                    LDP1    FCTX$,,AUTO
         4 002074   100016 235100                    LDA     14,,PR1
         4 002075   000001 115007                    CMPA    1,DL
         4 002076   002311 601000 4                  TNZ     ERR_ISDIR

      526     5847    2         IF NOT UCTX.FFLG.READ THEN GOTO ERR_ACCES;

   5847  4 002077   200010 473500                    LDP3    UCTX$,,AUTO
         4 002100   300015 234100                    SZN     13,,PR3
         4 002101   002271 605000 4                  TPL     ERR_ACCES

      527     5848    2         CALL CHECK_READ ALTRET( ERR_ACCES);

   5848  4 002102   004470 701000 4                  TSX1    CHECK_READ
         4 002103   002271 702000 4                  TSX2    ERR_ACCES

      528     5849    2         IF FCTX.DCB# = 0 THEN CALL REALOPEN ALTRET( BAD2);

   5849  4 002104   200011 470500                    LDP0    FCTX$,,AUTO
         4 002105   000012 220100                    LDX0    10,,PR0
         4 002106   002111 601000 4                  TNZ     s:5850

   5849  4 002107   003616 701000 4                  TSX1    REALOPEN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:106  
         4 002110   002315 702000 4                  TSX2    BAD2

      529     5850    2         I = FCTX.FATTR.SIZE;              /* Detect changes therein             */

   5850  4 002111   200011 470500                    LDP0    FCTX$,,AUTO
         4 002112   000023 235100                    LDA     19,,PR0
         4 002113   200015 755100                    STA     I,,AUTO

      530     5851    2         CALL TIMEVAL( FCTX.FATTR.ATIME, FU_TIME);

   5851  4 002114   000012 236000 5                  LDQ     10
         4 002115   200042 756100                    STQ     @RESULT+1,,AUTO
         4 002116   200011 236100                    LDQ     FCTX$,,AUTO
         4 002117   000031 036003                    ADLQ    25,DU
         4 002120   200041 756100                    STQ     MODTIME+4,,AUTO
         4 002121   005065 701000 4                  TSX1    TIMEVAL
         4 002122   000000 011000                    NOP     0

      531     5852    2         CALL FUI$IORQS( RQSCTX);

   5852  4 002123   200003 630500                    EPPR0   @RQSCTX,,AUTO
         4 002124   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002125   000000 701000 xent               TSX1    FUI$IORQS
         4 002126   000000 011000                    NOP     0

      532     5853    2         IF I ~= FCTX.FATTR.SIZE THEN FCTX.FITMOD = '1'B;

   5853  4 002127   200011 470500                    LDP0    FCTX$,,AUTO
         4 002130   200015 236100                    LDQ     I,,AUTO
         4 002131   000023 116100                    CMPQ    19,,PR0
         4 002132   002320 600000 4                  TZE     s:5898

   5853  4 002133   400000 236003                    LDQ     -131072,DU
         4 002134   000015 256100                    ORSQ    13,,PR0
         4 002135   002320 710000 4                  TRA     s:5898

      533     5854
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:107  
      534     5855    2       CASE( %NFSPROC_WRITE);

      535     5856    2         IF FCTX.FATTR.TYPE ~= %NFREG THEN GOTO ERR_ISDIR;

   5856  4 002136   200011 471500                    LDP1    FCTX$,,AUTO
         4 002137   100016 235100                    LDA     14,,PR1
         4 002140   000001 115007                    CMPA    1,DL
         4 002141   002311 601000 4                  TNZ     ERR_ISDIR

      536     5857    2         IF NOT UCTX.FFLG&%(FFLG_WNEW#|FFLG_UPD#) THEN GOTO ERR_ACCES;

   5857  4 002142   200010 473500                    LDP3    UCTX$,,AUTO
         4 002143   300015 220100                    LDX0    13,,PR3
         4 002144   140000 360003                    ANX0    49152,DU
         4 002145   002271 600000 4                  TZE     ERR_ACCES

      537     5858    2         CALL CHECK_WRITE ALTRET( ERR_ACCES);

   5858  4 002146   004526 701000 4                  TSX1    CHECK_WRITE
         4 002147   002271 702000 4                  TSX2    ERR_ACCES

      538     5859    2         IF FCTX.DCB# = 0 THEN CALL REALOPEN ALTRET( BAD2);

   5859  4 002150   200011 470500                    LDP0    FCTX$,,AUTO
         4 002151   000012 220100                    LDX0    10,,PR0
         4 002152   002155 601000 4                  TNZ     s:5860

   5859  4 002153   003616 701000 4                  TSX1    REALOPEN
         4 002154   002315 702000 4                  TSX2    BAD2

      539     5860    2         IF FCTX.FATTR.SIZE = 0            /* if the file is empty               */

   5860  4 002155   200011 470500                    LDP0    FCTX$,,AUTO
         4 002156   000023 235100                    LDA     19,,PR0
         4 002157   002247 601000 4                  TNZ     s:5884
         4 002160   000017 236100                    LDQ     15,,PR0
         4 002161   200000 316003                    CANQ    65536,DU
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:108  
         4 002162   002247 600000 4                  TZE     s:5884

      540     5861    2           AND FCTX.FATTR.XATTR.UFIT       /* and was created by NFS             */
      541     5862    3         THEN DO;

      542     5863    3            I = MINIMUM( 256, WRITEARGS.COUNT);

   5863  4 002163   200005 471500                    LDP1    BODY$,,AUTO
         4 002164   100013 236100                    LDQ     11,,PR1
         4 002165   000400 116007                    CMPQ    256,DL
         4 002166   002171 602000 4                  TNC     s:5863+6
         4 002167   002171 600000 4                  TZE     s:5863+6
         4 002170   000400 236007                    LDQ     256,DL
         4 002171   200015 756100                    STQ     I,,AUTO

      543     5864    3            TEXTMODE = %YES#;

   5864  4 002172   400000 236003                    LDQ     -131072,DU
         4 002173   200022 756100                    STQ     TEXTMODE,,AUTO

      544     5865    3            CALL SEARCH( FSID, FSID, FU_BINSRCH, SUBSTR( WRITEARGS.DATA,0,I))

   5865  4 002174   100013 720100                    LXL0    11,,PR1
         4 002175   200015 721100                    LXL1    I,,AUTO
         4 002176   000000 164540                    TCT
         4 002177   100014 000011                    ADSC9   12,,PR1                  cn=0,n=*X1
         4 002200   000100 000000 3                  ARG     FU_BINSRCH
         4 002201   200021 000100                    ARG     FSID,,AUTO
         4 002202   200021 235100                    LDA     FSID,,AUTO
         4 002203   000033 771000                    ARL     27
         4 002204   200021 755100                    STA     FSID,,AUTO
         4 002205   200021 551140                    STBA    FSID,'40'O,AUTO
         4 002206   002210 606400 4                  TTN     s:5870

      545     5866    4            WHENRETURN DO;

      546     5867    4               TEXTMODE = %NO#;            /* Set flag if we found nonprintable  */
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:109  

   5867  4 002207   200022 450100                    STZ     TEXTMODE,,AUTO

      547     5868    4               END;

      548     5869             /* if we're writing into the middle of an empty file, must be binary     */
      549     5870    3            IF WRITEARGS.OFFSET > 0 THEN TEXTMODE = %NO#;

   5870  4 002210   200005 470500                    LDP0    BODY$,,AUTO
         4 002211   000011 235100                    LDA     9,,PR0
         4 002212   002214 600000 4                  TZE     s:5871

   5870  4 002213   200022 450100                    STZ     TEXTMODE,,AUTO

      550     5871    3            IF TEXTMODE ~= FCTX.FATTR.XATTR.TEXTMODE /* change text/bin mode     */

   5871  4 002214   200011 471500                    LDP1    FCTX$,,AUTO
         4 002215   200022 236100                    LDQ     TEXTMODE,,AUTO
         4 002216   100017 676100                    ERQ     15,,PR1
         4 002217   400000 376003                    ANQ     -131072,DU
         4 002220   002247 600000 4                  TZE     s:5884

      551     5872    4            THEN DO;

      552     5873    4               FID = FCTX.FID;

   5873  4 002221   000000 100500                    MLR     fill='000'O
         4 002222   100037 000070                    ADSC9   31,,PR1                  cn=0,n=56
         4 002223   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      553     5874    4               FPT_CLOSE.V.DCB# = FCTX.DCB#;

   5874  4 002224   100012 220100                    LDX0    10,,PR1
         4 002225   000032 740000 1                  STX0    FPT_CLOSE+26

      554     5875    4               FPT_CLOSE.V.DISP# = 0;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:110  
   5875  4 002226   000000 236003                    LDQ     0,DU
         4 002227   000032 552004 1                  STBQ    FPT_CLOSE+26,'04'O

      555     5876    4               FPT_CLOSE.V.OPER.CHGATT# = '0'B;

   5876  4 002230   000014 236000 5                  LDQ     12
         4 002231   000032 356000 1                  ANSQ    FPT_CLOSE+26

      556     5877    5               CALL M$CLOSE( FPT_CLOSE) WHENALTRETURN DO; END;

   5877  4 002232   000000 630400 1                  EPPR0   FPT_CLOSE
         4 002233   450001 713400                    CLIMB   alt,close
         4 002234   406000 401760                    pmme    nvectors=13
         4 002235   002237 702000 4                  TSX2    s:5878
         4 002236   002237 710000 4                  TRA     s:5878

      557     5878    4               CALL TESTOPEN;              /* Get FPARAM items                   */

   5878  4 002237   003506 701000 4                  TSX1    TESTOPEN
         4 002240   000000 011000                    NOP     0

      558     5879    4               CALL CHANGEORG; /* Recreate with other ORG with FMEFT to keep dates */

   5879  4 002241   003725 701000 4                  TSX1    CHANGEORG
         4 002242   000000 011000                    NOP     0

      559     5880    4               CALL CREATCLNUP;            /* Reinitialise FPT_OPEN              */

   5880  4 002243   003776 701000 4                  TSX1    CREATCLNUP
         4 002244   000000 011000                    NOP     0

      560     5881    4               CALL UNSETJIT;              /* Restore PRIV.ACTIVE                */

   5881  4 002245   005051 701000 4                  TSX1    UNSETJIT
         4 002246   000000 011000                    NOP     0

      561     5882    4               END;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:111  

      562     5883    3            END;

      563     5884    2         CALL TIMEVAL( FCTX.FATTR.MTIME, FU_TIME);

   5884  4 002247   000012 236000 5                  LDQ     10
         4 002250   200042 756100                    STQ     @RESULT+1,,AUTO
         4 002251   200011 236100                    LDQ     FCTX$,,AUTO
         4 002252   000033 036003                    ADLQ    27,DU
         4 002253   200041 756100                    STQ     MODTIME+4,,AUTO
         4 002254   005065 701000 4                  TSX1    TIMEVAL
         4 002255   000000 011000                    NOP     0

      564     5885    2         FCTX.FATTR.ATIME = FCTX.FATTR.MTIME;

   5885  4 002256   200011 470500                    LDP0    FCTX$,,AUTO
         4 002257   000100 100500                    MLR     fill='000'O
         4 002260   000033 000010                    ADSC9   27,,PR0                  cn=0,n=8
         4 002261   000031 000010                    ADSC9   25,,PR0                  cn=0,n=8

      565     5886    2         FCTX.FITMOD = '1'B;

   5886  4 002262   400000 236003                    LDQ     -131072,DU
         4 002263   000015 256100                    ORSQ    13,,PR0

      566     5887    2         CALL FUI$IORQS( RQSCTX);

   5887  4 002264   200003 630500                    EPPR0   @RQSCTX,,AUTO
         4 002265   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002266   000000 701000 xent               TSX1    FUI$IORQS
         4 002267   000000 011000                    NOP     0
         4 002270   002320 710000 4                  TRA     s:5898

      567     5888
      568     5889    2       CASE( ELSE);

      569     5890    2   ERR_ACCES: REPLY.STAT = %NFSERR_ACCES; GOTO BAD2;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:112  

   5890  4 002271   000015 235007       ERR_ACCES    LDA     13,DL
         4 002272   200007 470500                    LDP0    REPLY$,,AUTO
         4 002273   000000 755100                    STA     0,,PR0

   5890  4 002274   002315 710000 4                  TRA     BAD2

      570     5891    2   ERR_PERM: REPLY.STAT = %NFSERR_PERM; GOTO BAD2;

   5891  4 002275   000001 235007       ERR_PERM     LDA     1,DL
         4 002276   200007 470500                    LDP0    REPLY$,,AUTO
         4 002277   000000 755100                    STA     0,,PR0

   5891  4 002300   002315 710000 4                  TRA     BAD2

      571     5892    2   ERR_TOOLONG: REPLY.STAT = %NFSERR_NAMETOOLONG; GOTO BAD2;

   5892  4 002301   000077 235007       ERR_TOOLONG  LDA     63,DL
         4 002302   200007 470500                    LDP0    REPLY$,,AUTO
         4 002303   000000 755100                    STA     0,,PR0

   5892  4 002304   002315 710000 4                  TRA     BAD2

      572     5893    2   ERR_NOTDIR: REPLY.STAT = %NFSERR_NOTDIR; GOTO BAD2;

   5893  4 002305   000024 235007       ERR_NOTDIR   LDA     20,DL
         4 002306   200007 473500                    LDP3    REPLY$,,AUTO
         4 002307   300000 755100                    STA     0,,PR3

   5893  4 002310   002315 710000 4                  TRA     BAD2

      573     5894    2   ERR_ISDIR: REPLY.STAT = %NFSERR_ISDIR; GOTO BAD2;

   5894  4 002311   000025 236007       ERR_ISDIR    LDQ     21,DL
         4 002312   200007 473500                    LDP3    REPLY$,,AUTO
         4 002313   300000 756100                    STQ     0,,PR3

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:113  
   5894  4 002314   002315 710000 4                  TRA     BAD2

      574     5895    2   BAD2: RQSCTX.LEN = 32+4;

   5895  4 002315   000044 235007       BAD2         LDA     36,DL
         4 002316   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 002317   000002 755100                    STA     2,,PR0

      575     5896
      576     5897    2       END;

      577     5898    1      CALL XSL$QSENDTO( RQSCTX.LEN, FU_NFSSOCKET, RQSCTX.REPLYHDR, RQSCTX.LEN, 0,

   5898  4 002320   000015 236000 5                  LDQ     13
         4 002321   200052 756100                    STQ     UTSS+7,,AUTO
         4 002322   200003 236100                    LDQ     @RQSCTX,,AUTO
         4 002323   000006 036003                    ADLQ    6,DU
         4 002324   000016 235000 5                  LDA     14
         4 002325   200050 757100                    STAQ    UTSS+5,,AUTO
         4 002326   200003 236100                    LDQ     @RQSCTX,,AUTO
         4 002327   000002 036003                    ADLQ    2,DU
         4 002330   200047 756100                    STQ     UTSS+4,,AUTO
         4 002331   200003 236100                    LDQ     @RQSCTX,,AUTO
         4 002332   000013 036003                    ADLQ    11,DU
         4 002333   200046 756100                    STQ     UTSS+3,,AUTO
         4 002334   000017 236000 5                  LDQ     15
         4 002335   200045 756100                    STQ     UTSS+2,,AUTO
         4 002336   200003 236100                    LDQ     @RQSCTX,,AUTO
         4 002337   000002 036003                    ADLQ    2,DU
         4 002340   200044 756100                    STQ     UTSS+1,,AUTO
         4 002341   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 002342   000025 631400 xsym               EPPR1   B_VECTNIL+21
         4 002343   000000 701000 xent               TSX1    XSL$QSENDTO
         4 002344   000000 011000                    NOP     0

      578     5899    1        RQSCTX.FROMADDR, 8);
      579     5900    1      RETURN;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:114  

   5900  4 002345   000000 702200 xent               TSX2  ! X66_ARET

      580     5901
      581     5902        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:115  
      582     5903        /*F* NAME: FUN$GETSTAMP
      583     5904             Purpose:
      584     5905                   Fill in the STAMP part of a DIROPRES-style reply for the mount
      585     5906                   server.  Reply status is non-zero only if the request is not valid.
      586     5907        */
      587     5908        /*D* NAME: FUN$GETSTAMP
      588     5909             Inputs:
      589     5910                   RQSCTX - contains the DIROPRES to get the stamp for.
      590     5911             Outputs:
      591     5912                   RQSCTX - contains the filled in DIROPRES if it is a valid account.
      592     5913        */
      593     5914    1   FUN$GETSTAMP: ENTRY( RQSCTX);

   5914  4 002346   000000 700200 xent  FUN$GETSTAMP TSX0  ! X66_AUTO_1
         4 002347   000054 000001                    ZERO    44,1

      594     5915    1      REPLY$ = ADDR( RQSCTX.REPLYHDR.RESULTS);

   5915  4 002350   200003 236100                    LDQ     @RQSCTX,,AUTO
         4 002351   000023 036003                    ADLQ    19,DU
         4 002352   200007 756100                    STQ     REPLY$,,AUTO

      595     5916    1      BODY$ = ADDR( DIROPRES.FILE);

   5916  4 002353   000001 036003                    ADLQ    1,DU
         4 002354   200005 756100                    STQ     BODY$,,AUTO

      596     5917    1      CALL FINDSTAMP                       /* Only look for the FCTX             */

   5917  4 002355   003442 701000 4                  TSX1    FINDSTAMP
         4 002356   002360 702000 4                  TSX2    s:5919
         4 002357   002366 710000 4                  TRA     s:5922

      597     5918    2      WHENALTRETURN DO;

      598     5919    2         CALL GETFCTX ALTRET( BAD2);

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:116  
   5919  4 002360   003500 701000 4                  TSX1    GETFCTX
         4 002361   002315 702000 4                  TSX2    BAD2

      599     5920    2         DIROPRES.FILE.STAMP = FCTX.FHANDLE.STAMP;

   5920  4 002362   200011 470500                    LDP0    FCTX$,,AUTO
         4 002363   000002 220100                    LDX0    2,,PR0
         4 002364   200007 471500                    LDP1    REPLY$,,AUTO
         4 002365   100001 740100                    STX0    1,,PR1

      600     5921    2         END;

      601     5922    1      DIROPRES.STAT = %NFS_OK;

   5922  4 002366   200007 470500                    LDP0    REPLY$,,AUTO
         4 002367   000000 450100                    STZ     0,,PR0

      602     5923    1      RQSCTX.LEN = 32+SIZEC( DIROPRES);

   5923  4 002370   000210 235007                    LDA     136,DL
         4 002371   200003 471500                    LDP1    @RQSCTX,,AUTO
         4 002372   100002 755100                    STA     2,,PR1

      603     5924    1      RETURN;

   5924  4 002373   000000 702200 xent               TSX2  ! X66_ARET

      604     5925
      605     5926        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:117  
      606     5927        /*F* NAME: FUN$CLOSE
      607     5928             Purpose:
      608     5929                   To close any DCBs in the FCTX chain that are older than DS.OPENLIM
      609     5930                   seconds.
      610     5931        */
      611     5932    1   FUN$CLOSE: ENTRY;

   5932  4 002374   000000 700200 xent  FUN$CLOSE    TSX0  ! X66_AUTO_1
         4 002375   000054 000001                    ZERO    44,1

      612     5933
      613     5934    1      I = FU_TIME - FU_OPENLIM;            /* AGE limit                          */

   5934  4 002376   000000 236000 xsym               LDQ     FU_TIME
         4 002377   000000 136000 xsym               SBLQ    FU_OPENLIM
         4 002400   200015 756100                    STQ     I,,AUTO

      614     5935    1      REPLY$ = ADDR(FID);        /* Place for REOPEN to put in an error status   */

   5935  4 002401   000020 236000 5                  LDQ     16
         4 002402   200007 756100                    STQ     REPLY$,,AUTO

      615     5936    1      FCTX$ = FU_FCTX$;

   5936  4 002403   000000 236000 xsym               LDQ     FU_FCTX$
         4 002404   200011 756100                    STQ     FCTX$,,AUTO

      616     5937    1      FPT_CLOSE.V.DISP# = 0;

   5937  4 002405   000000 236003                    LDQ     0,DU
         4 002406   000032 552004 1                  STBQ    FPT_CLOSE+26,'04'O

      617     5938    2      DO WHILE FCTX$ ~= ADDR( NIL);

   5938  4 002407   002473 710000 4                  TRA     s:5951

      618     5939    3         IF FCTX.AGE <= I AND FCTX.DCB# ~= 0 AND FCTX.PROC# = FU_PROC# THEN DO;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:118  

   5939  4 002410   200011 470500                    LDP0    FCTX$,,AUTO
         4 002411   200015 236100                    LDQ     I,,AUTO
         4 002412   000013 116100                    CMPQ    11,,PR0
         4 002413   002470 602000 4                  TNC     s:5950
         4 002414   000012 220100                    LDX0    10,,PR0
         4 002415   002470 600000 4                  TZE     s:5950
         4 002416   000012 236100                    LDQ     10,,PR0
         4 002417   777777 376007                    ANQ     -1,DL
         4 002420   000000 116000 xsym               CMPQ    FU_PROC#
         4 002421   002470 601000 4                  TNZ     s:5950

      619     5940    3            FPT_CLOSE.V.OPER.CHGATT# = FCTX.FATTR.XATTR.UFIT & FCTX.FITMOD;

   5940  4 002422   000015 236100                    LDQ     13,,PR0
         4 002423   400000 376003                    ANQ     -131072,DU
         4 002424   200044 756100                    STQ     UTSS+1,,AUTO
         4 002425   000017 236100                    LDQ     15,,PR0
         4 002426   000001 736000                    QLS     1
         4 002427   400000 376003                    ANQ     -131072,DU
         4 002430   200044 376100                    ANQ     UTSS+1,,AUTO
         4 002431   000022 772000                    QRL     18
         4 002432   000032 676000 1                  ERQ     FPT_CLOSE+26
         4 002433   400000 376007                    ANQ     -131072,DL
         4 002434   000032 656000 1                  ERSQ    FPT_CLOSE+26

      620     5941    3            FCTX.FITMOD = '0'B;

   5941  4 002435   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 002436   000015 356100                    ANSQ    13,,PR0

      621     5942    3            CALL TIMEVAL( FCTX.FATTR.ATIME, FU_TIME);

   5942  4 002437   000012 236000 5                  LDQ     10
         4 002440   200042 756100                    STQ     @RESULT+1,,AUTO
         4 002441   200011 236100                    LDQ     FCTX$,,AUTO
         4 002442   000031 036003                    ADLQ    25,DU
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:119  
         4 002443   200041 756100                    STQ     MODTIME+4,,AUTO
         4 002444   005065 701000 4                  TSX1    TIMEVAL
         4 002445   000000 011000                    NOP     0

      622     5943    3            FID = FCTX.FID;

   5943  4 002446   200011 470500                    LDP0    FCTX$,,AUTO
         4 002447   000000 100500                    MLR     fill='000'O
         4 002450   000037 000070                    ADSC9   31,,PR0                  cn=0,n=56
         4 002451   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      623     5944    3            UFATTR.Q.FATTR = FCTX.FATTR;

   5944  4 002452   000000 100500                    MLR     fill='000'O
         4 002453   000016 000104                    ADSC9   14,,PR0                  cn=0,n=68
         4 002454   002416 000104 1                  ADSC9   UFATTR+4                 cn=0,n=68

      624     5945    3            UFATTR.Q.MODTIME = FU_TIME;

   5945  4 002455   000000 235000 xsym               LDA     FU_TIME
         4 002456   002415 755000 1                  STA     UFATTR+3

      625     5946    3            FPT_CLOSE.V.DCB# = FCTX.DCB#;

   5946  4 002457   000012 220100                    LDX0    10,,PR0
         4 002460   000032 740000 1                  STX0    FPT_CLOSE+26

      626     5947    4            CALL M$CLOSE( FPT_CLOSE) WHENALTRETURN DO; END;

   5947  4 002461   000000 630400 1                  EPPR0   FPT_CLOSE
         4 002462   450001 713400                    CLIMB   alt,close
         4 002463   406000 401760                    pmme    nvectors=13
         4 002464   002466 702000 4                  TSX2    s:5948
         4 002465   002466 710000 4                  TRA     s:5948

      627     5948    3            CALL REOPEN;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:120  
   5948  4 002466   003710 701000 4                  TSX1    REOPEN
         4 002467   000000 011000                    NOP     0

      628     5949    3            END;

      629     5950    2         FCTX$ = FCTX.LNK$;

   5950  4 002470   200011 470500                    LDP0    FCTX$,,AUTO
         4 002471   000000 236100                    LDQ     0,,PR0
         4 002472   200011 756100                    STQ     FCTX$,,AUTO

      630     5951    2         END;

   5951  4 002473   200011 236100                    LDQ     FCTX$,,AUTO
         4 002474   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 002475   002410 601000 4                  TNZ     s:5939

      631     5952    1      RETURN;

   5952  4 002476   000000 702200 xent               TSX2  ! X66_ARET

      632     5953
      633     5954        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:121  
      634     5955        /*F* NAME: FUN$RELDCB
      635     5956             Purpose:
      636     5957                   To release the DCB being used by the FCTX parameter.
      637     5958        */
      638     5959        /*D* NAME: FUN$RELDCB
      639     5960             Inputs:
      640     5961                   FCTX (RQSCTX) - the FCTX block to release the dcb for.
      641     5962        */
      642     5963    1   FUN$RELDCB: ENTRY( RQSCTX);

   5963  4 002477   000000 700200 xent  FUN$RELDCB   TSX0  ! X66_AUTO_1
         4 002500   000054 000001                    ZERO    44,1

      643     5964
      644     5965    1      FPT_CLOSE.V.DISP# = 0;

   5965  4 002501   000000 236003                    LDQ     0,DU
         4 002502   000032 552004 1                  STBQ    FPT_CLOSE+26,'04'O

      645     5966    1      FCTX$ = ADDR( RQSCTX);

   5966  4 002503   200003 236100                    LDQ     @RQSCTX,,AUTO
         4 002504   200011 756100                    STQ     FCTX$,,AUTO

      646     5967    2      IF FCTX.DCB# ~= 0 THEN DO;

   5967  4 002505   200011 470500                    LDP0    FCTX$,,AUTO
         4 002506   000012 220100                    LDX0    10,,PR0
         4 002507   002560 600000 4                  TZE     s:5978

      647     5968    2         FPT_CLOSE.V.DCB# = FCTX.DCB#;

   5968  4 002510   000032 740000 1                  STX0    FPT_CLOSE+26

      648     5969    2         FCTX.DCB# = 0;

   5969  4 002511   000000 221003                    LDX1    0,DU
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:122  
         4 002512   000012 741100                    STX1    10,,PR0

      649     5970    2         FPT_CLOSE.V.OPER.CHGATT# = FCTX.FATTR.XATTR.UFIT & FCTX.FITMOD;

   5970  4 002513   000015 236100                    LDQ     13,,PR0
         4 002514   400000 376003                    ANQ     -131072,DU
         4 002515   200044 756100                    STQ     UTSS+1,,AUTO
         4 002516   000017 236100                    LDQ     15,,PR0
         4 002517   000001 736000                    QLS     1
         4 002520   400000 376003                    ANQ     -131072,DU
         4 002521   200044 376100                    ANQ     UTSS+1,,AUTO
         4 002522   000022 772000                    QRL     18
         4 002523   000032 676000 1                  ERQ     FPT_CLOSE+26
         4 002524   400000 376007                    ANQ     -131072,DL
         4 002525   000032 656000 1                  ERSQ    FPT_CLOSE+26

      650     5971    2         FID = FCTX.FID;

   5971  4 002526   000000 100500                    MLR     fill='000'O
         4 002527   000037 000070                    ADSC9   31,,PR0                  cn=0,n=56
         4 002530   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      651     5972    2         CALL TIMEVAL( FCTX.FATTR.ATIME, FU_TIME);

   5972  4 002531   000012 236000 5                  LDQ     10
         4 002532   200042 756100                    STQ     @RESULT+1,,AUTO
         4 002533   200011 236100                    LDQ     FCTX$,,AUTO
         4 002534   000031 036003                    ADLQ    25,DU
         4 002535   200041 756100                    STQ     MODTIME+4,,AUTO
         4 002536   005065 701000 4                  TSX1    TIMEVAL
         4 002537   000000 011000                    NOP     0

      652     5973    2         UFATTR.Q.FATTR = FCTX.FATTR;

   5973  4 002540   200011 470500                    LDP0    FCTX$,,AUTO
         4 002541   000000 100500                    MLR     fill='000'O
         4 002542   000016 000104                    ADSC9   14,,PR0                  cn=0,n=68
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:123  
         4 002543   002416 000104 1                  ADSC9   UFATTR+4                 cn=0,n=68

      653     5974    2         UFATTR.Q.MODTIME = FU_TIME;

   5974  4 002544   000000 235000 xsym               LDA     FU_TIME
         4 002545   002415 755000 1                  STA     UFATTR+3

      654     5975    3         CALL M$CLOSE( FPT_CLOSE) WHENALTRETURN DO; END;

   5975  4 002546   000000 630400 1                  EPPR0   FPT_CLOSE
         4 002547   450001 713400                    CLIMB   alt,close
         4 002550   406000 401760                    pmme    nvectors=13
         4 002551   002553 702000 4                  TSX2    s:5976
         4 002552   002553 710000 4                  TRA     s:5976

      655     5976    3         CALL M$RELDCB( FPT_CLOSE) WHENALTRETURN DO; END;

   5976  4 002553   000000 630400 1                  EPPR0   FPT_CLOSE
         4 002554   460003 713400                    CLIMB   alt,+24579
         4 002555   400000 401760                    pmme    nvectors=1
         4 002556   002560 702000 4                  TSX2    s:5978
         4 002557   002560 710000 4                  TRA     s:5978

      656     5977    2         END;

      657     5978    1      RETURN;

   5978  4 002560   000000 702200 xent               TSX2  ! X66_ARET

      658     5979
      659     5980        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:124  
      660     5981        /*I*  NAME:    FINDUCTX
      661     5982              Purpose: To find/create the UCTX and FCTX for this FHANDLE.
      662     5983              Inputs:  FHANDLE - the file handle of the file/account to look for.
      663     5984              Outputs: FCTX$ - points to the FCTX block for this FHANDLE.
      664     5985                       UCTX$ - points to the UCTX block for this FHANDLE.
      665     5986              Algorithm: We've got a chain of files (FU_FCTX$) that we're using, look
      666     5987                       through it to see if we've got a match.  If not we've got to
      667     5988                       create a new FCTX (if this file/account exists).  Now that we've
      668     5989                       got an FCTX, look for a UCTX for THIS user, if none is found,
      669     5990                       we'll have to build one of those too.
      670     5991              Altreturns: if the file/account doesn't exist, or is not the same file/
      671     5992                       account that we were looking at (STALE - CP/6 changed it on us).
      672     5993        */
      673     5994    1   FINDUCTX: PROC ALTRET;

   5994  4 002561   200026 741300       FINDUCTX     STX1  ! LIST_ACCTS+2,,AUTO

      674     5995
      675     5996    2   DCL FND_STAMP SBIN;           /* >= 0 : set stamp, > 0 : don't return UCTX    */
      676     5997    2   DCL LEN SBIN;
      677     5998
      678     5999    2      IF RQSCTX.LEN < SIZEC(FHANDLE) THEN RETURN;

   5999  4 002562   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 002563   000002 235100                    LDA     2,,PR0
         4 002564   000040 115007                    CMPA    32,DL
         4 002565   002567 603000 4                  TRC     s:6000

   5999  4 002566   000001 702211                    TSX2  ! 1,X1

      679     6000    2      FND_STAMP = -1;

   6000  4 002567   000001 336007                    LCQ     1,DL
         4 002570   200027 756100                    STQ     FND_STAMP,,AUTO

      680     6001    2      FCTX$ = FU_FCTX$;                    /* see if we already have this FCTX   */

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:125  
   6001  4 002571   000000 236000 xsym               LDQ     FU_FCTX$
         4 002572   200011 756100                    STQ     FCTX$,,AUTO

      681     6002    3      DO WHILE FCTX$ ~= ADDR( NIL);

   6002  4 002573   002615 710000 4                  TRA     s:6010

      682     6003    3         IF FCTX.FHANDLE = FHANDLE

   6003  4 002574   200011 470500                    LDP0    FCTX$,,AUTO
         4 002575   200005 471500                    LDP1    BODY$,,AUTO
         4 002576   000100 106500                    CMPC    fill='000'O
         4 002577   000002 000040                    ADSC9   2,,PR0                   cn=0,n=32
         4 002600   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
         4 002601   002613 601000 4                  TNZ     s:6009

      683     6004    3         THEN IF NOT FCTX.RENAMED THEN EXIT;

   6004  4 002602   000015 236100                    LDQ     13,,PR0
         4 002603   200000 316003                    CANQ    65536,DU
         4 002604   002617 600000 4                  TZE     GOT_FCTX$

      684     6005    4            ELSE DO;

      685     6006    4               FHANDLE = FCTX.FID.NAME;

   6006  4 002605   000100 100500                    MLR     fill='000'O
         4 002606   000045 000040                    ADSC9   37,,PR0                  cn=0,n=32
         4 002607   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32

      686     6007    4               FCTX$ = FU_FCTX$;           /* Renamed, try again with new name   */

   6007  4 002610   000000 236000 xsym               LDQ     FU_FCTX$
         4 002611   200011 756100                    STQ     FCTX$,,AUTO

      687     6008    4               END;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:126  
   6008  4 002612   002615 710000 4                  TRA     s:6010

      688     6009    3         ELSE FCTX$ = FCTX.LNK$;

   6009  4 002613   000000 236100                    LDQ     0,,PR0
         4 002614   200011 756100                    STQ     FCTX$,,AUTO

      689     6010    3         END;

   6010  4 002615   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 002616   002574 601000 4                  TNZ     s:6003

      690     6011
      691     6012    2   GOT_FCTX$:
      692     6013    3      IF FCTX$ = ADDR( NIL) THEN DO;       /* don't have this FCTX, build it     */

   6013  4 002617   200011 236100       GOT_FCTX$    LDQ     FCTX$,,AUTO
         4 002620   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 002621   003137 601000 4                  TNZ     s:6069

      693     6014    3         FID = FID_INIT;                   /* unpack FHANDLE into FID ...        */

   6014  4 002622   000000 100400                    MLR     fill='000'O
         4 002623   000203 000070 3                  ADSC9   FID_INIT                 cn=0,n=56
         4 002624   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      694     6015    4         IF FHANDLE.PSNLNG + FHANDLE.ACCTLNG = 0 THEN DO; /* MAD or SYSTEM       */

   6015  4 002625   200005 470500                    LDP0    BODY$,,AUTO
         4 002626   000000 236100                    LDQ     0,,PR0
         4 002627   000011 772000                    QRL     9
         4 002630   000017 376007                    ANQ     15,DL
         4 002631   200044 756100                    STQ     UTSS+1,,AUTO
         4 002632   000000 236100                    LDQ     0,,PR0
         4 002633   000015 772000                    QRL     13
         4 002634   000007 376007                    ANQ     7,DL
         4 002635   200044 036100                    ADLQ    UTSS+1,,AUTO
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:127  
         4 002636   002652 601000 4                  TNZ     s:6020

      695     6016    4            FID.ASN = FHANDLE.STAMP;

   6016  4 002637   000000 220100                    LDX0    0,,PR0
         4 002640   002376 440000 1                  SXL0    FID+2

      696     6017    4            FID.RES = 'NO';

   6017  4 002641   000223 236000 3                  LDQ     FID_INIT+16
         4 002642   777777 376003                    ANQ     -1,DU
         4 002643   040040 276007                    ORQ     16416,DL
         4 002644   002377 756000 1                  STQ     FID+3

      697     6018    4            FID.RES = 'ME';                /* Bug in M$OPEN                      */

   6018  4 002645   000224 236000 3                  LDQ     FID_INIT+17
         4 002646   777777 376003                    ANQ     -1,DU
         4 002647   040040 276007                    ORQ     16416,DL
         4 002650   002377 756000 1                  STQ     FID+3

      698     6019    4            END;

   6019  4 002651   002743 710000 4                  TRA     s:6033

      699     6020    4         ELSE IF FHANDLE.ACCTLNG = 0 THEN DO; /* only PSN, no account            */

   6020  4 002652   000000 236100                    LDQ     0,,PR0
         4 002653   017000 316007                    CANQ    7680,DL
         4 002654   002672 601000 4                  TNZ     s:6026

      700     6021    4               FID.ASN = %DEVICE#;

   6021  4 002655   000003 220003                    LDX0    3,DU
         4 002656   002376 440000 1                  SXL0    FID+2

      701     6022    4               FID.PSN.SN = SUBSTR(FHANDLE.TEXT,0,FHANDLE.PSNLNG);
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:128  

   6022  4 002657   000000 236100                    LDQ     0,,PR0
         4 002660   000015 772000                    QRL     13
         4 002661   000007 376007                    ANQ     7,DL
         4 002662   000000 621006                    EAX1    0,QL
         4 002663   040000 100540                    MLR     fill='040'O
         4 002664   000000 600011                    ADSC9   0,,PR0                   cn=3,n=*X1
         4 002665   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6

      702     6023    4               FID.ACCT = BINASC(0);

   6023  4 002666   000003 235000 5                  LDA     3
         4 002667   000035 236000 xsym               LDQ     B_VECTNIL+29
         4 002670   002400 757000 1                  STAQ    FID+4

      703     6024    4               END;

   6024  4 002671   002743 710000 4                  TRA     s:6033

      704     6025    4            ELSE DO;        /* have account, possibly PSN, possible file name    */

      705     6026    4               FID.ASN = %FILE#;

   6026  4 002672   000001 220003                    LDX0    1,DU
         4 002673   002376 440000 1                  SXL0    FID+2

      706     6027    4               FID.PSN.SN = SUBSTR(FHANDLE.TEXT,0,FHANDLE.PSNLNG);

   6027  4 002674   000000 236100                    LDQ     0,,PR0
         4 002675   000015 772000                    QRL     13
         4 002676   000007 376007                    ANQ     7,DL
         4 002677   000000 621006                    EAX1    0,QL
         4 002700   040000 100540                    MLR     fill='040'O
         4 002701   000000 600011                    ADSC9   0,,PR0                   cn=3,n=*X1
         4 002702   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6

      707     6028    4               FID.ACCT = SUBSTR(FHANDLE.TEXT,FHANDLE.PSNLNG,FHANDLE.ACCTLNG);
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:129  

   6028  4 002703   000000 236100                    LDQ     0,,PR0
         4 002704   000015 772000                    QRL     13
         4 002705   000007 376007                    ANQ     7,DL
         4 002706   200044 756100                    STQ     UTSS+1,,AUTO
         4 002707   000000 236100                    LDQ     0,,PR0
         4 002710   000011 772000                    QRL     9
         4 002711   000017 376007                    ANQ     15,DL
         4 002712   000000 621006                    EAX1    0,QL
         4 002713   200044 235100                    LDA     UTSS+1,,AUTO
         4 002714   040000 100545                    MLR     fill='040'O
         4 002715   000000 600011                    ADSC9   0,A,PR0                  cn=3,n=*X1
         4 002716   002400 000010 1                  ADSC9   FID+4                    cn=0,n=8

      708     6029    4               FID.NAME.T = SUBSTR(FHANDLE.TEXT, FHANDLE.PSNLNG+FHANDLE.ACCTLNG);

   6029  4 002717   000000 236100                    LDQ     0,,PR0
         4 002720   000011 772000                    QRL     9
         4 002721   000017 376007                    ANQ     15,DL
         4 002722   200044 756100                    STQ     UTSS+1,,AUTO
         4 002723   000000 236100                    LDQ     0,,PR0
         4 002724   000015 772000                    QRL     13
         4 002725   000007 376007                    ANQ     7,DL
         4 002726   200044 036100                    ADLQ    UTSS+1,,AUTO
         4 002727   777742 621006                    EAX1    -30,QL
         4 002730   777777 661003                    ERX1    -1,DU
         4 002731   040000 100546                    MLR     fill='040'O
         4 002732   000000 600011                    ADSC9   0,Q,PR0                  cn=3,n=*X1
         4 002733   002402 200037 1                  ADSC9   FID+6                    cn=1,n=31

      709     6030    4               CALL INDEX( I, ' ', FID.NAME.T, 0, %ASCBIT(' '));

   6030  4 002734   040000 124400                    SCM     mask='040'O
         4 002735   002402 200037 1                  ADSC9   FID+6                    cn=1,n=31
         4 002736   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 002737   200015 000100                    ARG     I,,AUTO

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:130  
      710     6031    4               FID.NAME.L = I;

   6031  4 002740   200015 236100                    LDQ     I,,AUTO
         4 002741   000033 736000                    QLS     27
         4 002742   002402 552040 1                  STBQ    FID+6,'40'O

      711     6032    4               END;

      712     6033    3         CREATUTS = 0;                /* see if we had to kludge up a fake FIT   */

   6033  4 002743   200016 450100                    STZ     CREATUTS,,AUTO

      713     6034    3         CALL TESTOPEN ALTRET( ALT);       /* check if this file/account exists  */

   6034  4 002744   003506 701000 4                  TSX1    TESTOPEN
         4 002745   003067 702000 4                  TSX2    ALT

      714     6035    3         IF CREATUTS ~= 0 AND FHANDLE.ACCTLNG ~= 0 AND FID.NAME.L = 0

   6035  4 002746   200016 235100                    LDA     CREATUTS,,AUTO
         4 002747   002777 600000 4                  TZE     s:6045
         4 002750   200005 470500                    LDP0    BODY$,,AUTO
         4 002751   000000 236100                    LDQ     0,,PR0
         4 002752   017000 316007                    CANQ    7680,DL
         4 002753   002777 600000 4                  TZE     s:6045
         4 002754   002402 236000 1                  LDQ     FID+6
         4 002755   777000 316003                    CANQ    -512,DU
         4 002756   002777 601000 4                  TNZ     s:6045

      715     6036    4         THEN DO;           /* openning up an account, and we didn't get the FIT */

      716     6037    4            IF FHANDLE.PSNLNG = 0

   6037  4 002757   000000 236100                    LDQ     0,,PR0
         4 002760   160000 316007                    CANQ    57344,DL
         4 002761   002773 601000 4                  TNZ     s:6043

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:131  
      717     6038    4            THEN CALL M$MADMUCK( GET_PSN)  /* get PSN if MAD                     */

   6038  4 002762   000352 630400 1                  EPPR0   GET_PSN
         4 002763   460005 713400                    CLIMB   alt,+24581
         4 002764   401000 401760                    pmme    nvectors=3
         4 002765   002767 702000 4                  TSX2    NOT_THERE
         4 002766   002773 710000 4                  TRA     s:6043

      718     6039    5               WHENALTRETURN DO;

      719     6040    5   NOT_THERE:     REPLY.STAT = %NFSERR_NOENT;

   6040  4 002767   000002 235007       NOT_THERE    LDA     2,DL
         4 002770   200007 470500                    LDP0    REPLY$,,AUTO
         4 002771   000000 755100                    STA     0,,PR0

      720     6041    5                  GOTO ALT;

   6041  4 002772   003067 710000 4                  TRA     ALT

      721     6042    5                  END;
      722     6043    4            CALL M$OPEN( OPEN_ACCT_FIT) ALTRET( NOT_THERE);

   6043  4 002773   000260 630400 1                  EPPR0   OPEN_ACCT_FIT
         4 002774   450000 713400                    CLIMB   alt,open
         4 002775   410400 401760                    pmme    nvectors=18
         4 002776   002767 702000 4                  TSX2    NOT_THERE

      723     6044    4            END;

      724     6045    3         F$ = ADDR( FM$FIT);

   6045  4 002777   000005 236000 5                  LDQ     5
         4 003000   200004 756100                    STQ     F$,,AUTO

      725     6046    3         CALL XSF$LOCCODP( F$, 04 )

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:132  
   6046  4 003001   000006 236000 5                  LDQ     6
         4 003002   200045 756100                    STQ     UTSS+2,,AUTO
         4 003003   200004 630500                    EPPR0   F$,,AUTO
         4 003004   200044 450500                    STP0    UTSS+1,,AUTO
         4 003005   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 003006   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 003007   000000 701000 xent               TSX1    XSF$LOCCODP
         4 003010   003071 702000 4                  TSX2    s:6055

      726     6047    4         WHENRETURN DO;

      727     6048    4            CALL XSL$HTONL( CREATUTS, CODE04.CREATION.TIME);

   6048  4 003011   200004 236100                    LDQ     F$,,AUTO
         4 003012   000002 036003                    ADLQ    2,DU
         4 003013   200045 756100                    STQ     UTSS+2,,AUTO
         4 003014   200016 630500                    EPPR0   CREATUTS,,AUTO
         4 003015   200044 450500                    STP0    UTSS+1,,AUTO
         4 003016   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 003017   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 003020   000000 701000 xent               TSX1    XSL$HTONL
         4 003021   000000 011000                    NOP     0

      728     6049    4            IF FND_STAMP >= 0 THEN FHANDLE.STAMP = CREATUTS;

   6049  4 003022   200027 235100                    LDA     FND_STAMP,,AUTO
         4 003023   003030 604000 4                  TMI     s:6050

   6049  4 003024   200016 720100                    LXL0    CREATUTS,,AUTO
         4 003025   200005 470500                    LDP0    BODY$,,AUTO
         4 003026   000000 740100                    STX0    0,,PR0
         4 003027   003071 710000 4                  TRA     s:6055

      729     6050    5            ELSE IF FHANDLE.STAMP ~= MOD( CREATUTS, BITBIN('1000000'O)) THEN DO;

   6050  4 003030   000227 236000 3                  LDQ     FID_INIT+20
         4 003031   000017 772000                    QRL     15
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:133  
         4 003032   200044 756100                    STQ     UTSS+1,,AUTO
         4 003033   200016 236100                    LDQ     CREATUTS,,AUTO
         4 003034   003051 605000 4                  TPL     s:6050+17
         4 003035   200044 235100                    LDA     UTSS+1,,AUTO
         4 003036   003045 604000 4                  TMI     s:6050+13
         4 003037   000001 115007                    CMPA    1,DL
         4 003040   003053 600000 4                  TZE     s:6050+19
         4 003041   000000 235003                    LDA     0,DU
         4 003042   000001 737000                    LLS     1
         4 003043   200044 507100                    DVF     UTSS+1,,AUTO
         4 003044   003053 710000 4                  TRA     s:6050+19
         4 003045   200044 116100                    CMPQ    UTSS+1,,AUTO
         4 003046   003053 604000 4                  TMI     s:6050+19
         4 003047   200044 136100                    SBLQ    UTSS+1,,AUTO
         4 003050   003053 710000 4                  TRA     s:6050+19
         4 003051   200044 235100                    LDA     UTSS+1,,AUTO
         4 003052   003055 605000 4                  TPL     s:6050+21
         4 003053   000044 737000                    LLS     36
         4 003054   003056 710000 4                  TRA     s:6050+22
         4 003055   200044 506100                    DIV     UTSS+1,,AUTO
         4 003056   200045 755100                    STA     UTSS+2,,AUTO
         4 003057   200005 470500                    LDP0    BODY$,,AUTO
         4 003060   000000 236100                    LDQ     0,,PR0
         4 003061   000022 772000                    QRL     18
         4 003062   200045 116100                    CMPQ    UTSS+2,,AUTO
         4 003063   003071 600000 4                  TZE     s:6055

      730     6051    5                  REPLY.STAT = %NFSERR_STALE; /* this file is not the expected one */

   6051  4 003064   000106 235007                    LDA     70,DL
         4 003065   200007 471500                    LDP1    REPLY$,,AUTO
         4 003066   100000 755100                    STA     0,,PR1

      731     6052    5   ALT:           ALTRETURN;

   6052  4 003067   200026 221300       ALT          LDX1  ! LIST_ACCTS+2,,AUTO
         4 003070   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:134  

      732     6053    5                  END;
      733     6054    4            END;
      734     6055    3         IF FU_CTXHD$ = ADDR( NIL) THEN CALL FUA$GETCTX; /* build a new FCTX     */

   6055  4 003071   000000 236000 xsym               LDQ     FU_CTXHD$
         4 003072   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003073   003077 601000 4                  TNZ     s:6056

   6055  4 003074   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 003075   000000 701000 xent               TSX1    FUA$GETCTX
         4 003076   000000 011000                    NOP     0

      735     6056    3         FCTX$ = FU_CTXHD$;

   6056  4 003077   000000 236000 xsym               LDQ     FU_CTXHD$
         4 003100   200011 756100                    STQ     FCTX$,,AUTO

      736     6057    3         FU_CTXHD$ = FCTX.LNK$;

   6057  4 003101   200011 470500                    LDP0    FCTX$,,AUTO
         4 003102   000000 236100                    LDQ     0,,PR0
         4 003103   000000 756000 xsym               STQ     FU_CTXHD$

      737     6058    3         FCTX = FU_FCTX;                   /* initialize this new FCTX           */

   6058  4 003104   000100 100400                    MLR     fill='000'O
         4 003105   000000 000270 xsym               ADSC9   FU_FCTX                  cn=0,n=184
         4 003106   000000 000270                    ADSC9   0,,PR0                   cn=0,n=184

      738     6059    3         FCTX.FHANDLE = FHANDLE;

   6059  4 003107   200005 471500                    LDP1    BODY$,,AUTO
         4 003110   000100 100500                    MLR     fill='000'O
         4 003111   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
         4 003112   000002 000040                    ADSC9   2,,PR0                   cn=0,n=32

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:135  
      739     6060    3         FCTX.UCTX$ = ADDR( NIL);

   6060  4 003113   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003114   000001 756100                    STQ     1,,PR0

      740     6061    3         FCTX.FID = FID;

   6061  4 003115   000100 100400                    MLR     fill='000'O
         4 003116   002374 000070 1                  ADSC9   FID                      cn=0,n=56
         4 003117   000037 000070                    ADSC9   31,,PR0                  cn=0,n=56

      741     6062    3         FCTX.LNK$ = FU_FCTX$;

   6062  4 003120   000000 236000 xsym               LDQ     FU_FCTX$
         4 003121   000000 756100                    STQ     0,,PR0

      742     6063    3         FU_FCTX$ = FCTX$;

   6063  4 003122   200011 236100                    LDQ     FCTX$,,AUTO
         4 003123   000000 756000 xsym               STQ     FU_FCTX$

      743     6064    3         DS.FCNT = DS.FCNT + 1;

   6064  4 003124   000000 473400 xsym               LDP3    B$DS8
         4 003125   300005 054100                    AOS     5,,PR3

      744     6065    3         CALL MAKEFSID( FHANDLE);

   6065  4 003126   200005 236100                    LDQ     BODY$,,AUTO
         4 003127   200033 756100                    STQ     ACCESS+2,,AUTO
         4 003130   004606 701000 4                  TSX1    MAKEFSID
         4 003131   000000 011000                    NOP     0

      745     6066    3         CALL MAKEFATTR( FCTX.FATTR);

   6066  4 003132   200011 236100                    LDQ     FCTX$,,AUTO
         4 003133   000016 036003                    ADLQ    14,DU
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:136  
         4 003134   200033 756100                    STQ     ACCESS+2,,AUTO
         4 003135   004013 701000 4                  TSX1    MAKEFATTR
         4 003136   000000 011000                    NOP     0

      746     6067    3         END;

      747     6068
      748     6069    2      IF FND_STAMP > 0 THEN RETURN;

   6069  4 003137   200027 235100                    LDA     FND_STAMP,,AUTO
         4 003140   003143 604400 4                  TMOZ    s:6070

   6069  4 003141   200026 221300                    LDX1  ! LIST_ACCTS+2,,AUTO
         4 003142   000001 702211                    TSX2  ! 1,X1

      749     6070    2      IF RQSCTX.UCTX$-> UCTX.FCTX$ = FCTX$

   6070  4 003143   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 003144   000004 471500                    LDP1    4,,PR0
         4 003145   100003 236100                    LDQ     3,,PR1
         4 003146   200011 116100                    CMPQ    FCTX$,,AUTO
         4 003147   003153 601000 4                  TNZ     s:6072

      750     6071    2      THEN UCTX$ = RQSCTX.UCTX$;

   6071  4 003150   000004 236100                    LDQ     4,,PR0
         4 003151   200010 756100                    STQ     UCTX$,,AUTO
         4 003152   003156 710000 4                  TRA     s:6073

      751     6072    2      ELSE UCTX$ = FCTX.UCTX$;

   6072  4 003153   200011 473500                    LDP3    FCTX$,,AUTO
         4 003154   300001 236100                    LDQ     1,,PR3
         4 003155   200010 756100                    STQ     UCTX$,,AUTO

      752     6073    3      DO WHILE UCTX$ ~= ADDR( NIL);        /* check chain for this user's UCTX   */

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:137  
   6073  4 003156   003175 710000 4                  TRA     s:6078

      753     6074    3         IF UCTX.HCTX$ = RQSCTX.UCTX$-> UCTX.HCTX$

   6074  4 003157   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 003160   000004 471500                    LDP1    4,,PR0
         4 003161   200010 473500                    LDP3    UCTX$,,AUTO
         4 003162   300001 236100                    LDQ     1,,PR3
         4 003163   100001 116100                    CMPQ    1,,PR1
         4 003164   003173 601000 4                  TNZ     s:6077
         4 003165   300004 236100                    LDQ     4,,PR3
         4 003166   100004 116100                    CMPQ    4,,PR1
         4 003167   003173 601000 4                  TNZ     s:6077
         4 003170   300005 236100                    LDQ     5,,PR3
         4 003171   100005 116100                    CMPQ    5,,PR1
         4 003172   003177 600000 4                  TZE     s:6080

      754     6075    3           AND UCTX.USER.UID = RQSCTX.UCTX$-> UCTX.USER.UID
      755     6076    3           AND UCTX.USER.GID = RQSCTX.UCTX$-> UCTX.USER.GID THEN EXIT;
      756     6077    3         UCTX$ = UCTX.FLNK$;

   6077  4 003173   300002 236100                    LDQ     2,,PR3
         4 003174   200010 756100                    STQ     UCTX$,,AUTO

      757     6078    3         END;

   6078  4 003175   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003176   003157 601000 4                  TNZ     s:6074

      758     6079
      759     6080    2      IF UCTX$ = ADDR( NIL)                /* UCTX not found                     */

   6080  4 003177   200010 236100                    LDQ     UCTX$,,AUTO
         4 003200   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003201   003245 601000 4                  TNZ     s:6094

      760     6081    3      THEN IF RQSCTX.UCTX$-> UCTX.FCTX$ ~= ADDR( NIL) THEN DO;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:138  

   6081  4 003202   100003 236100                    LDQ     3,,PR1
         4 003203   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003204   003243 600000 4                  TZE     s:6092

      761     6082    3            IF FU_CTXHD$ = ADDR( NIL) THEN CALL FUA$GETCTX;

   6082  4 003205   000000 236000 xsym               LDQ     FU_CTXHD$
         4 003206   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003207   003213 601000 4                  TNZ     s:6083

   6082  4 003210   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 003211   000000 701000 xent               TSX1    FUA$GETCTX
         4 003212   000000 011000                    NOP     0

      762     6083    3            DS.UCNT = DS.UCNT + 1;

   6083  4 003213   000000 470400 xsym               LDP0    B$DS8
         4 003214   000010 054100                    AOS     8,,PR0

      763     6084    3            UCTX$ = FU_CTXHD$;

   6084  4 003215   000000 236000 xsym               LDQ     FU_CTXHD$
         4 003216   200010 756100                    STQ     UCTX$,,AUTO

      764     6085    3            FU_CTXHD$ = UCTX.HLNK$;

   6085  4 003217   200010 471500                    LDP1    UCTX$,,AUTO
         4 003220   100000 236100                    LDQ     0,,PR1
         4 003221   000000 756000 xsym               STQ     FU_CTXHD$

      765     6086    3            UCTX = FU_UCTX;

   6086  4 003222   000100 100400                    MLR     fill='000'O
         4 003223   000000 000220 xsym               ADSC9   FU_UCTX                  cn=0,n=144
         4 003224   100000 000220                    ADSC9   0,,PR1                   cn=0,n=144

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:139  
      766     6087    3            UCTX.USER = RQSCTX.UCTX$-> UCTX.USER;

   6087  4 003225   200003 473500                    LDP3    @RQSCTX,,AUTO
         4 003226   300004 474500                    LDP4    4,,PR3
         4 003227   000100 100500                    MLR     fill='000'O
         4 003230   400004 000040                    ADSC9   4,,PR4                   cn=0,n=32
         4 003231   100004 000040                    ADSC9   4,,PR1                   cn=0,n=32

      767     6088    3            UCTX.HCTX$ = RQSCTX.UCTX$-> UCTX.HCTX$;

   6088  4 003232   300004 474500                    LDP4    4,,PR3
         4 003233   400001 236100                    LDQ     1,,PR4
         4 003234   100001 756100                    STQ     1,,PR1

      768     6089    3            UCTX.HLNK$ = UCTX.HCTX$-> HCTX.UCTX$;

   6089  4 003235   100001 474500                    LDP4    1,,PR1
         4 003236   400001 236100                    LDQ     1,,PR4
         4 003237   100000 756100                    STQ     0,,PR1

      769     6090    3            UCTX.HCTX$-> HCTX.UCTX$ = UCTX$;

   6090  4 003240   200010 236100                    LDQ     UCTX$,,AUTO
         4 003241   400001 756100                    STQ     1,,PR4

      770     6091    3            END;

   6091  4 003242   003245 710000 4                  TRA     s:6094

      771     6092    2         ELSE UCTX$ = RQSCTX.UCTX$;

   6092  4 003243   000004 236100                    LDQ     4,,PR0
         4 003244   200010 756100                    STQ     UCTX$,,AUTO

      772     6093
      773     6094    3      IF UCTX.FCTX$ = ADDR( NIL) THEN DO;  /* Hook 'em up.                       */

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:140  
   6094  4 003245   200010 470500                    LDP0    UCTX$,,AUTO
         4 003246   000003 236100                    LDQ     3,,PR0
         4 003247   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003250   003323 601000 4                  TNZ     s:6110

      774     6095    3         UCTX.FCTX$ = FCTX$;

   6095  4 003251   200011 236100                    LDQ     FCTX$,,AUTO
         4 003252   000003 756100                    STQ     3,,PR0

      775     6096    3         UCTX.FLNK$ = FCTX.UCTX$;

   6096  4 003253   200011 471500                    LDP1    FCTX$,,AUTO
         4 003254   100001 236100                    LDQ     1,,PR1
         4 003255   000002 756100                    STQ     2,,PR0

      776     6097    3         FCTX.UCTX$ = UCTX$;

   6097  4 003256   200010 236100                    LDQ     UCTX$,,AUTO
         4 003257   100001 756100                    STQ     1,,PR1

      777     6098    3         FID = FCTX.FID;

   6098  4 003260   000000 100500                    MLR     fill='000'O
         4 003261   100037 000070                    ADSC9   31,,PR1                  cn=0,n=56
         4 003262   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      778     6099    3         CALL SETJIT;

   6099  4 003263   005016 701000 4                  TSX1    SETJIT
         4 003264   000000 011000                    NOP     0

      779     6100    3         CALL TESTOPEN;

   6100  4 003265   003506 701000 4                  TSX1    TESTOPEN
         4 003266   000000 011000                    NOP     0

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:141  
      780     6101    3         UCTX.FFLG = DCBADDR( DCBNUM( F$TEST))-> F$DCB.FFLG;

   6101  4 003267   000000 236007 xsym               LDQ     F$TEST,DL
         4 003270   000004 470400 5                  LDP0    4
         4 003271   000000 471500                    LDP1    0,,PR0
         4 003272   100000 473506                    LDP3    0,QL,PR1
         4 003273   300004 220100                    LDX0    4,,PR3
         4 003274   200010 473500                    LDP3    UCTX$,,AUTO
         4 003275   300015 740100                    STX0    13,,PR3

      781     6102    3         IF UCTX.USER.SECCHK THEN CALL FUS$SECCHK( UCTX);

   6102  4 003276   300013 234100                    SZN     11,,PR3
         4 003277   003304 605000 4                  TPL     s:6103

   6102  4 003300   200010 630500                    EPPR0   UCTX$,,AUTO
         4 003301   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003302   000000 701000 xent               TSX1    FUS$SECCHK
         4 003303   000000 011000                    NOP     0

      782     6103    4         IF NOT FCTX.FATTR.XATTR.UFIT THEN DO; /* Not NFS created - limit access */

   6103  4 003304   200011 470500                    LDP0    FCTX$,,AUTO
         4 003305   000017 236100                    LDQ     15,,PR0
         4 003306   200000 316003                    CANQ    65536,DU
         4 003307   003321 601000 4                  TNZ     s:6108

      783     6104    4            UCTX.FFLG.REATTR = '0'B;

   6104  4 003310   200010 471500                    LDP1    UCTX$,,AUTO
         4 003311   000021 236000 5                  LDQ     17
         4 003312   100015 356100                    ANSQ    13,,PR1

      784     6105    4            IF NOT FCTX.FATTR.MODE.OWRITE

   6105  4 003313   000017 236100                    LDQ     15,,PR0
         4 003314   000200 316007                    CANQ    128,DL
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:142  
         4 003315   003321 601000 4                  TNZ     s:6108

      785     6106    4            THEN UCTX.FFLG = UCTX.FFLG & %~(FFLG_WNEW#|FFLG_UPD#);

   6106  4 003316   100015 220100                    LDX0    13,,PR1
         4 003317   637777 360003                    ANX0    -49153,DU
         4 003320   100015 740100                    STX0    13,,PR1

      786     6107    4            END;

      787     6108    3         CALL UNSETJIT;

   6108  4 003321   005051 701000 4                  TSX1    UNSETJIT
         4 003322   000000 011000                    NOP     0

      788     6109    3         END;

      789     6110    2      RQSCTX.UCTX$ = UCTX$;

   6110  4 003323   200010 236100                    LDQ     UCTX$,,AUTO
         4 003324   200003 470500                    LDP0    @RQSCTX,,AUTO
         4 003325   000004 756100                    STQ     4,,PR0

      790     6111    2      FCTX.AGE = FU_TIME;

   6111  4 003326   200011 471500                    LDP1    FCTX$,,AUTO
         4 003327   000000 235000 xsym               LDA     FU_TIME
         4 003330   100013 755100                    STA     11,,PR1

      791     6112    2      UCTX.AGE = FU_TIME;

   6112  4 003331   200010 473500                    LDP3    UCTX$,,AUTO
         4 003332   300014 755100                    STA     12,,PR3

      792     6113    2      RETURN;

   6113  4 003333   200026 221300                    LDX1  ! LIST_ACCTS+2,,AUTO
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:143  
         4 003334   000001 702211                    TSX2  ! 1,X1

      793     6114
      794     6115        /*I*  NAME:    FINDDIROP
      795     6116              Purpose: To find/create the UCTX and FCTX for this DIROP.
      796     6117              Inputs:  DIROP - the DIROP for the file to find.
      797     6118                       FCTX$ - points to the account the file exists in.
      798     6119              Outputs: DIROP.DIR - the FHANDLE of the file found.
      799     6120                       FCTX$ - points to the FCTX block for this DIROP (NIL if not fnd).
      800     6121                       UCTX$ - points to the UCTX block for this DIROP.
      801     6122              Algorithm: Create the FHANDLE to look for (except for the STAMP), because
      802     6123                       we don't know that yet.  Check to see if we have this file in
      803     6124                       the FCTX cache (the actual file, not a previously renamed one),
      804     6125                       because we want to get the stamp.  Then go into the FINDUCTX
      805     6126                       code.
      806     6127              Altreturns: If the FHANDLE will get too large if created.  Or something
      807     6128                       in the body of FINDUCTX forces an ALTRETurn.
      808     6129        */
      809     6130    2   FINDDIROP: ENTRY ALTRET;

   6130  4 003335   200026 741300       FINDDIROP    STX1  ! LIST_ACCTS+2,,AUTO

      810     6131
      811     6132    2      IF DIROP.DIR.PSNLNG > 0              /* see if we can treat this like MAD  */

   6132  4 003336   200005 470500                    LDP0    BODY$,,AUTO
         4 003337   000000 236100                    LDQ     0,,PR0
         4 003340   160000 316007                    CANQ    57344,DL
         4 003341   003364 600000 4                  TZE     s:6143

      812     6133    3      THEN DO;

      813     6134    3         CALL M$MADMUCK( GET_PSN)

   6134  4 003342   000352 630400 1                  EPPR0   GET_PSN
         4 003343   460005 713400                    CLIMB   alt,+24581
         4 003344   401000 401760                    pmme    nvectors=3
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:144  
         4 003345   003364 702000 4                  TSX2    s:6143

      814     6135    4         WHENRETURN DO;

      815     6136    4            IF FID.PSN.SN = SUBSTR( DIROP.DIR.TEXT, 0, DIROP.DIR.PSNLNG)

   6136  4 003346   200005 470500                    LDP0    BODY$,,AUTO
         4 003347   000000 236100                    LDQ     0,,PR0
         4 003350   000015 772000                    QRL     13
         4 003351   000007 376007                    ANQ     7,DL
         4 003352   000000 620006                    EAX0    0,QL
         4 003353   040140 106400                    CMPC    fill='040'O
         4 003354   002375 000006 1                  ADSC9   FID+1                    cn=0,n=6
         4 003355   000000 600010                    ADSC9   0,,PR0                   cn=3,n=*X0
         4 003356   003364 601000 4                  TNZ     s:6143

      816     6137    5            THEN DO;

      817     6138    5               DIROP.DIR.TEXT = FID.ACCT;

   6138  4 003357   040100 100400                    MLR     fill='040'O
         4 003360   002400 000010 1                  ADSC9   FID+4                    cn=0,n=8
         4 003361   000000 600035                    ADSC9   0,,PR0                   cn=3,n=29

      818     6139    5               DIROP.DIR.PSNLNG = 0;

   6139  4 003362   000002 236000 5                  LDQ     2
         4 003363   000000 356100                    ANSQ    0,,PR0

      819     6140    5               END;

      820     6141    4            END;

      821     6142    3         END;

      822     6143    2      FND_STAMP = 0;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:145  
   6143  4 003364   200027 450100                    STZ     FND_STAMP,,AUTO

      823     6144    2      LEN = DIROP.DIR.PSNLNG+DIROP.DIR.ACCTLNG;

   6144  4 003365   200005 470500                    LDP0    BODY$,,AUTO
         4 003366   000000 236100                    LDQ     0,,PR0
         4 003367   000011 772000                    QRL     9
         4 003370   000017 376007                    ANQ     15,DL
         4 003371   200044 756100                    STQ     UTSS+1,,AUTO
         4 003372   000000 236100                    LDQ     0,,PR0
         4 003373   000015 772000                    QRL     13
         4 003374   000007 376007                    ANQ     7,DL
         4 003375   200044 036100                    ADLQ    UTSS+1,,AUTO
         4 003376   200030 756100                    STQ     LEN,,AUTO

      824     6145    2      IF DIROP.NAME.L+LEN > SIZEC(FCTX.FHANDLE.TEXT)

   6145  4 003377   000010 036100                    ADLQ    8,,PR0
         4 003400   000035 116007                    CMPQ    29,DL
         4 003401   003407 604400 4                  TMOZ    s:6150

      825     6146    3      THEN DO;

      826     6147    3         REPLY.STAT = %NFSERR_NAMETOOLONG;

   6147  4 003402   000077 235007                    LDA     63,DL
         4 003403   200007 471500                    LDP1    REPLY$,,AUTO
         4 003404   100000 755100                    STA     0,,PR1

      827     6148    3         ALTRETURN;

   6148  4 003405   200026 221300                    LDX1  ! LIST_ACCTS+2,,AUTO
         4 003406   000000 702211                    TSX2  ! 0,X1

      828     6149    3         END;
      829     6150    2      CALL XLATE( SUBSTR( DIROP.DIR.TEXT,LEN,DIROP.NAME.L),

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:146  
   6150  4 003407   000010 720100                    LXL0    8,,PR0
         4 003410   000010 721100                    LXL1    8,,PR0
         4 003411   200030 235100                    LDA     LEN,,AUTO
         4 003412   040145 160540                    MVT     fill='040'O
         4 003413   000011 000011                    ADSC9   9,,PR0                   cn=0,n=*X1
         4 003414   000000 600010                    ADSC9   0,A,PR0                  cn=3,n=*X0
         4 003415   000000 000000 3                  ARG     FU_XLATE

      830     6151    2        FU_XLATE, DIROP.NAME.T);
      831     6152
      832     6153    2      FCTX$ = FU_FCTX$;                    /* look for the actual file           */

   6153  4 003416   000000 236000 xsym               LDQ     FU_FCTX$
         4 003417   200011 756100                    STQ     FCTX$,,AUTO

      833     6154    3      DO WHILE FCTX$ ~= ADDR( NIL);

   6154  4 003420   003437 710000 4                  TRA     s:6162

      834     6155    3         IF ADDR( FCTX.FHANDLE)->NO_STAMP.TEXT = BODY$->NO_STAMP.TEXT

   6155  4 003421   200011 470500                    LDP0    FCTX$,,AUTO
         4 003422   200005 471500                    LDP1    BODY$,,AUTO
         4 003423   040100 106500                    CMPC    fill='040'O
         4 003424   000002 400036                    ADSC9   2,,PR0                   cn=2,n=30
         4 003425   100000 400036                    ADSC9   0,,PR1                   cn=2,n=30
         4 003426   003435 601000 4                  TNZ     s:6161
         4 003427   000015 236100                    LDQ     13,,PR0
         4 003430   200000 316003                    CANQ    65536,DU
         4 003431   003435 601000 4                  TNZ     s:6161

      835     6156    3           AND NOT FCTX.RENAMED
      836     6157    4         THEN DO;

      837     6158    4            FHANDLE.STAMP = FCTX.FHANDLE.STAMP;

   6158  4 003432   000002 220100                    LDX0    2,,PR0
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:147  
         4 003433   100000 740100                    STX0    0,,PR1

      838     6159    4            GOTO GOT_FCTX$;

   6159  4 003434   002617 710000 4                  TRA     GOT_FCTX$

      839     6160    4            END;
      840     6161    3         FCTX$ = FCTX.LNK$;

   6161  4 003435   000000 236100                    LDQ     0,,PR0
         4 003436   200011 756100                    STQ     FCTX$,,AUTO

      841     6162    3         END;

   6162  4 003437   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003440   003421 601000 4                  TNZ     s:6155

      842     6163    2      GOTO GOT_FCTX$;

   6163  4 003441   002617 710000 4                  TRA     GOT_FCTX$

      843     6164
      844     6165        /*I*  NAME:    FINDSTAMP
      845     6166              Purpose: To find the stamp for the given FHANDLE if it exists in the
      846     6167                       FCTX cache.
      847     6168              Inputs:  FHANDLE - the FHANDLE to find the stamp for.
      848     6169              Outputs: FHANDLE.STAMP - the stamp found.
      849     6170                       FCTX$ - pointer to the FCTX block for this FHANDLE.
      850     6171              Altreturns: If the FHANDLE was not in the FCTX cache.
      851     6172        */
      852     6173    2   FINDSTAMP: ENTRY ALTRET;

   6173  4 003442   200026 741300       FINDSTAMP    STX1  ! LIST_ACCTS+2,,AUTO

      853     6174
      854     6175    2      FCTX$ = FU_FCTX$;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:148  
   6175  4 003443   000000 236000 xsym               LDQ     FU_FCTX$
         4 003444   200011 756100                    STQ     FCTX$,,AUTO

      855     6176    3      DO WHILE FCTX$ ~= ADDR( NIL);

   6176  4 003445   003474 710000 4                  TRA     s:6186

      856     6177    3         IF ADDR( FCTX.FHANDLE)->NO_STAMP.TEXT = BODY$->NO_STAMP.TEXT

   6177  4 003446   200011 470500                    LDP0    FCTX$,,AUTO
         4 003447   200005 471500                    LDP1    BODY$,,AUTO
         4 003450   040100 106500                    CMPC    fill='040'O
         4 003451   000002 400036                    ADSC9   2,,PR0                   cn=2,n=30
         4 003452   100000 400036                    ADSC9   0,,PR1                   cn=2,n=30
         4 003453   003472 601000 4                  TNZ     s:6185
         4 003454   000015 236100                    LDQ     13,,PR0
         4 003455   200000 316003                    CANQ    65536,DU
         4 003456   003472 601000 4                  TNZ     s:6185
         4 003457   000000 106500                    CMPC    fill='000'O
         4 003460   100000 400036                    ADSC9   0,,PR1                   cn=2,n=30
         4 003461   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         4 003462   003466 601000 4                  TNZ     s:6182
         4 003463   000002 220100                    LDX0    2,,PR0
         4 003464   100000 100100                    CMPX0   0,,PR1
         4 003465   003472 601000 4                  TNZ     s:6185

      857     6178    3           AND NOT FCTX.RENAMED
      858     6179    3           AND (BODY$->NO_STAMP.TEXTB ~= '0'B
      859     6180    3           OR FCTX.FHANDLE.STAMP = FHANDLE.STAMP)
      860     6181    4         THEN DO;

      861     6182    4            FHANDLE.STAMP = FCTX.FHANDLE.STAMP;

   6182  4 003466   000002 220100                    LDX0    2,,PR0
         4 003467   100000 740100                    STX0    0,,PR1

      862     6183    4            RETURN;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:149  

   6183  4 003470   200026 221300                    LDX1  ! LIST_ACCTS+2,,AUTO
         4 003471   000001 702211                    TSX2  ! 1,X1

      863     6184    4            END;
      864     6185    3         FCTX$ = FCTX.LNK$;

   6185  4 003472   000000 236100                    LDQ     0,,PR0
         4 003473   200011 756100                    STQ     FCTX$,,AUTO

      865     6186    3         END;

   6186  4 003474   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003475   003446 601000 4                  TNZ     s:6177

      866     6187    2      ALTRETURN;

   6187  4 003476   200026 221300                    LDX1  ! LIST_ACCTS+2,,AUTO
         4 003477   000000 702211                    TSX2  ! 0,X1

      867     6188
      868     6189        /*I*  NAME:    GETFCTX
      869     6190              Purpose: To get only an FCTX for the given FHANDLE.  Doesn't get a UCTX.
      870     6191              Inputs:  FHANDLE - the FHANDLE to create the FCTX for.
      871     6192              Outputs: FCTX$ - points to the FCTX block created.
      872     6193              Altreturns: If the file doesn't exist
      873     6194        */
      874     6195    2   GETFCTX: ENTRY ALTRET;

   6195  4 003500   200026 741300       GETFCTX      STX1  ! LIST_ACCTS+2,,AUTO

      875     6196
      876     6197    2      FND_STAMP = 1;

   6197  4 003501   000001 235007                    LDA     1,DL
         4 003502   200027 755100                    STA     FND_STAMP,,AUTO

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:150  
      877     6198    2      FCTX$ = ADDR( NIL);

   6198  4 003503   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003504   200011 756100                    STQ     FCTX$,,AUTO

      878     6199    2      GOTO GOT_FCTX$;

   6199  4 003505   002617 710000 4                  TRA     GOT_FCTX$

      879     6200
      880     6201    2   END FINDUCTX;
      881     6202        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:151  
      882     6203        /*I*  NAME:    TESTOPEN
      883     6204              Purpose: Test open the file in FID.  Checks for existance/attributes
      884     6205              Inputs:  FID - contains the name of the file/account to test open.
      885     6206              Outputs: FM$FIT - the FIT information of the file/account.
      886     6207              Altreturns: if the file can't be test openned, returns with the
      887     6208                       appropriate NFS error code in REPLY.STAT
      888     6209        */
      889     6210    1   TESTOPEN: PROC ALTRET;

   6210  4 003506   200032 741300       TESTOPEN     STX1  ! ACCESS+1,,AUTO

      890     6211
      891     6212        %FPT_OPEN( DCB=F$TEST, NAME=FID.NAME, ACCT=FID.ACCT, SN=FID.PSN, ACS=DIRECT,
      892     6213                   CTG=YES, FUN=UPDATE, ORG=CONSEC, FPARAM=FM$FIT, TEST=YES, SCRUB=YES);
      893     6322        %FPT_GETDCB( DCBNUM=FPT_OPEN.V.DCB#);
      894     6337        %CODE14;
      895     6347
      896     6348    2   DCL MINAGE UBIN;
      897     6349    2   DCL MINF$ PTR;
      898     6350
      899     6351    2      FPT_OPEN.V.DCB# = DCBNUM( F$TEST);

   6351  4 003507   000000 236007 xsym               LDQ     F$TEST,DL
         4 003510   000000 620006                    EAX0    0,QL
         4 003511   002504 740000 1                  STX0    FPT_OPEN+36

   6351  4 003512                       ALMOST_THE_* null
      900     6352    2   ALMOST_THE_TOP: ;
      901     6353    2      FM$FIT.CODES(0) = '0'B;

   6353  4 003512   000374 450000 1                  STZ     FM$FIT

   6353  4 003513                       NEARLY_THE_* null
      902     6354    2   NEARLY_THE_TOP: ;
      903     6355    2      FPT_OPEN.V.ASN# = FID.ASN;

   6355  4 003513   002376 236000 1                  LDQ     FID+2
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:152  
         4 003514   002505 552004 1                  STBQ    FPT_OPEN+37,'04'O

      904     6356    2      FPT_OPEN.V.RES# = FID.RES;

   6356  4 003515   002377 236000 1                  LDQ     FID+3
         4 003516   002510 756000 1                  STQ     FPT_OPEN+40

      905     6357    3      CALL M$OPEN( FPT_OPEN) WHENALTRETURN DO;

   6357  4 003517   002440 630400 1                  EPPR0   FPT_OPEN
         4 003520   450000 713400                    CLIMB   alt,open
         4 003521   410400 401760                    pmme    nvectors=18
         4 003522   003524 702000 4                  TSX2    s:6358
         4 003523   003566 710000 4                  TRA     OK

      906     6358    4         DO SELECT( B$TCB.ALT$->B$ALT.ERR.ERR#);

   6358  4 003524   000000 470400 xsym               LDP0    B$TCB$
         4 003525   000000 471500                    LDP1    0,,PR0
         4 003526   100102 236100                    LDQ     66,,PR1
         4 003527   000003 772000                    QRL     3
         4 003530   037777 376007                    ANQ     16383,DL
         4 003531   000161 116007                    CMPQ    113,DL
         4 003532   003561 602000 4                  TNC     s:6364
         4 003533   003540 600000 4                  TZE     s:6359
         4 003534   000003 736000                    QLS     3
         4 003535   001640 116007                    CMPQ    928,DL
         4 003536   003561 601000 4                  TNZ     s:6364
         4 003537   003555 710000 4                  TRA     s:6363

      907     6359    4            SELECT( %E$NOFILE); IF FID.NAME.L = 0 AND

   6359  4 003540   002402 236000 1                  LDQ     FID+6
         4 003541   777000 316003                    CANQ    -512,DU
         4 003542   003551 601000 4                  TNZ     s:6362
         4 003543   000004 473400 5                  LDP3    4
         4 003544   300000 474500                    LDP4    0,,PR3
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:153  
         4 003545   002504 220000 1                  LDX0    FPT_OPEN+36
         4 003546   400000 475510                    LDP5    0,X0,PR4
         4 003547   500004 221100                    LDX1    4,,PR5
         4 003550   003566 601000 4                  TNZ     OK

      908     6360    4              DCBADDR( FPT_OPEN.V.DCB#)-> F$DCB.FFLG
      909     6361    4            THEN GOTO OK;                  /* openning an account                */
      910     6362    4            REPLY.STAT = %NFSERR_NOENT;

   6362  4 003551   000002 235007                    LDA     2,DL
         4 003552   200007 473500                    LDP3    REPLY$,,AUTO
         4 003553   300000 755100                    STA     0,,PR3
         4 003554   003564 710000 4                  TRA     s:6366

      911     6363    4            SELECT( %E$NOACCESS); REPLY.STAT = %NFSERR_ACCES;

   6363  4 003555   000015 235007                    LDA     13,DL
         4 003556   200007 473500                    LDP3    REPLY$,,AUTO
         4 003557   300000 755100                    STA     0,,PR3
         4 003560   003564 710000 4                  TRA     s:6366

      912     6364    4            SELECT( ELSE); REPLY.STAT = %NFSERR_PERM;

   6364  4 003561   000001 235007                    LDA     1,DL
         4 003562   200007 473500                    LDP3    REPLY$,,AUTO
         4 003563   300000 755100                    STA     0,,PR3

      913     6365    4            END;

      914     6366    3      ALTRETURN;

   6366  4 003564   200032 221300                    LDX1  ! ACCESS+1,,AUTO
         4 003565   000000 702211                    TSX2  ! 0,X1

   6360  4 003566                       OK           null
      915     6367    3         END;
      916     6368    2   OK:;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:154  
      917     6369    3      IF NOT FM$FIT.CODES(0) THEN DO;      /* Make a dir. if we got nothing      */

   6369  4 003566   000374 235000 1                  LDA     FM$FIT
         4 003567   003603 601000 4                  TNZ     s:6376

      918     6370    3         FM$FIT.CODES.CODE(0) = 1;         /*  ie. a FIT with only a CODE14.     */

   6370  4 003570   000374 236000 1                  LDQ     FM$FIT
         4 003571   000022 376000 5                  ANQ     18
         4 003572   020000 276003                    ORQ     8192,DU
         4 003573   000374 756000 1                  STQ     FM$FIT

      919     6371    3         FM$FIT.CODES(1) = '340000000002'O;

   6371  4 003574   000230 236000 3                  LDQ     FID_INIT+21
         4 003575   000375 756000 1                  STQ     FM$FIT+1

      920     6372    3         ADDR(FM$FIT.CODES(2))-> CODE14.CGRANS = 1;

   6372  4 003576   000001 235007                    LDA     1,DL
         4 003577   000400 755000 1                  STA     FM$FIT+4

      921     6373    3         CREATUTS = FID.ASN;

   6373  4 003600   002376 236000 1                  LDQ     FID+2
         4 003601   777777 376007                    ANQ     -1,DL
         4 003602   200016 756100                    STQ     CREATUTS,,AUTO

      922     6374    3         END;

      923     6375             /* Update FU_TIME if this is a real open, so that FM's ATIME < NFS's.    */
      924     6376    2      IF FPT_OPEN.V.DCB# ~= DCBNUM( F$TEST) THEN CALL M$TIME( FU_FPT_TIME);

   6376  4 003603   000000 236007 xsym               LDQ     F$TEST,DL
         4 003604   200044 756100                    STQ     UTSS+1,,AUTO
         4 003605   002504 236000 1                  LDQ     FPT_OPEN+36
         4 003606   000022 772000                    QRL     18
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:155  
         4 003607   200044 116100                    CMPQ    UTSS+1,,AUTO
         4 003610   003614 600000 4                  TZE     s:6377

   6376  4 003611   000000 630400 xsym               EPPR0   FU_FPT_TIME
         4 003612   020004 713400                    CLIMB   8196
         4 003613   402000 401760                    pmme    nvectors=5

      925     6377    2      RETURN;

   6377  4 003614   200032 221300                    LDX1  ! ACCESS+1,,AUTO
         4 003615   000001 702211                    TSX2  ! 1,X1

      926     6378
      927     6379
      928     6380        /*I*  NAME:    REALOPEN
      929     6381              Purpose: For the file specified in FCTX, get a DCB for it and open it up.
      930     6382        */
      931     6383    2   REALOPEN: ENTRY ALTRET;

   6383  4 003616   200032 741300       REALOPEN     STX1  ! ACCESS+1,,AUTO

      932     6384    2      CALL M$GETDCB( FPT_GETDCB)

   6384  4 003617   002532 630400 1                  EPPR0   FPT_GETDCB
         4 003620   460002 713400                    CLIMB   alt,+24578
         4 003621   401000 401760                    pmme    nvectors=3
         4 003622   003633 702000 4                  TSX2    s:6390

      933     6385    3      WHENRETURN DO;

      934     6386    3         FCTX.DCB# = FPT_OPEN.V.DCB#;

   6386  4 003623   002504 220000 1                  LDX0    FPT_OPEN+36
         4 003624   200011 470500                    LDP0    FCTX$,,AUTO
         4 003625   000012 740100                    STX0    10,,PR0

      935     6387    3         DS.P.FCNT( FU_PROC#) = DS.P.FCNT( FU_PROC#) + 1;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:156  

   6387  4 003626   000000 235000 xsym               LDA     FU_PROC#
         4 003627   000004 735000                    ALS     4
         4 003630   000000 471400 xsym               LDP1    B$DS8
         4 003631   100050 054105                    AOS     40,AL,PR1

      936     6388    3         END;

   6388  4 003632   003703 710000 4                  TRA     s:6411

      937     6389    3      WHENALTRETURN DO;

      938     6390    3         MINF$ = ADDR( NIL);

   6390  4 003633   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003634   200034 756100                    STQ     MINF$,,AUTO

      939     6391    3         MINAGE = BITBIN( '777777777777'O);

   6391  4 003635   000027 235000 xsym               LDA     B_VECTNIL+23
         4 003636   200033 755100                    STA     MINAGE,,AUTO

      940     6392    3         F$ = FU_FCTX$;

   6392  4 003637   000000 236000 xsym               LDQ     FU_FCTX$
         4 003640   200004 756100                    STQ     F$,,AUTO

      941     6393    4         DO WHILE( F$ ~= ADDR( NIL));      /* look for the oldest unused DCB     */

   6393  4 003641   003664 710000 4                  TRA     s:6402

      942     6394    4            IF F$->FCTX.AGE <= MINAGE

   6394  4 003642   200004 470500                    LDP0    F$,,AUTO
         4 003643   200033 236100                    LDQ     MINAGE,,AUTO
         4 003644   000013 116100                    CMPQ    11,,PR0
         4 003645   003662 602000 4                  TNC     s:6401
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:157  
         4 003646   000012 220100                    LDX0    10,,PR0
         4 003647   003662 600000 4                  TZE     s:6401
         4 003650   000004 471400 5                  LDP1    4
         4 003651   100000 473500                    LDP3    0,,PR1
         4 003652   300000 474510                    LDP4    0,X0,PR3
         4 003653   400031 236100                    LDQ     25,,PR4
         4 003654   020000 316007                    CANQ    8192,DL
         4 003655   003662 601000 4                  TNZ     s:6401

      943     6395    4              AND F$->FCTX.DCB# ~= 0
      944     6396    4              AND NOT DCBADDR( F$->FCTX.DCB#) -> F$DCB.FCD#
      945     6397    5            THEN DO;

      946     6398    5               MINAGE = F$->FCTX.AGE;

   6398  4 003656   000013 235100                    LDA     11,,PR0
         4 003657   200033 755100                    STA     MINAGE,,AUTO

      947     6399    5               MINF$ = F$;

   6399  4 003660   200004 236100                    LDQ     F$,,AUTO
         4 003661   200034 756100                    STQ     MINF$,,AUTO

      948     6400    5               END;

      949     6401    4            F$ = F$->FCTX.LNK$;

   6401  4 003662   000000 236100                    LDQ     0,,PR0
         4 003663   200004 756100                    STQ     F$,,AUTO

      950     6402    4            END;

   6402  4 003664   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003665   003642 601000 4                  TNZ     s:6394

      951     6403    3         IF MINF$ = ADDR( NIL)

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:158  
   6403  4 003666   200034 236100                    LDQ     MINF$,,AUTO
         4 003667   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003670   003675 601000 4                  TNZ     s:6408

      952     6404    4         THEN DO;

      953     6405    4            CALL M$MERC;

   6405  4 003671   010007 713400                    CLIMB   4103
         4 003672   000000 401760                    pmme    nvectors=0

      954     6406    4            CALL M$XXX;

   6406  4 003673   000003 713400                    CLIMB   3
         4 003674   000000 401760                    pmme    nvectors=0

      955     6407    4            END;

      956     6408    3         FCTX.DCB# = MINF$->FCTX.DCB#;

   6408  4 003675   200034 470500                    LDP0    MINF$,,AUTO
         4 003676   000012 220100                    LDX0    10,,PR0
         4 003677   200011 471500                    LDP1    FCTX$,,AUTO
         4 003700   100012 740100                    STX0    10,,PR1

      957     6409    3         MINF$->FCTX.DCB# = 0;

   6409  4 003701   000000 221003                    LDX1    0,DU
         4 003702   000012 741100                    STX1    10,,PR0

      958     6410    3         END;

      959     6411    2      FID = FCTX.FID;

   6411  4 003703   200011 470500                    LDP0    FCTX$,,AUTO
         4 003704   000000 100500                    MLR     fill='000'O
         4 003705   000037 000070                    ADSC9   31,,PR0                  cn=0,n=56
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:159  
         4 003706   002374 000070 1                  ADSC9   FID                      cn=0,n=56

      960     6412    2      GOTO ALMOST_THE_TOP;

   6412  4 003707   003512 710000 4                  TRA     ALMOST_THE_TOP

      961     6413
      962     6414        /*I*  NAME:    REOPEN
      963     6415              Purpose: To reopen the DCB in FCTX (if it doesn't have one, it used
      964     6416                       the F$TEST DCB).
      965     6417        */
      966     6418    2   REOPEN: ENTRY ALTRET;

   6418  4 003710   200032 741300       REOPEN       STX1  ! ACCESS+1,,AUTO

      967     6419    2      FCTX.CRECNO = 0;

   6419  4 003711   200011 470500                    LDP0    FCTX$,,AUTO
         4 003712   000014 450100                    STZ     12,,PR0

      968     6420    2      FCTX.CHUNK = 0;

   6420  4 003713   000000 220003                    LDX0    0,DU
         4 003714   000015 440100                    SXL0    13,,PR0

      969     6421    2      IF FCTX.DCB# = 0

   6421  4 003715   000012 221100                    LDX1    10,,PR0
         4 003716   003723 601000 4                  TNZ     s:6423

      970     6422    2      THEN FPT_OPEN.V.DCB# = DCBNUM( F$TEST);

   6422  4 003717   000000 236007 xsym               LDQ     F$TEST,DL
         4 003720   000000 622006                    EAX2    0,QL
         4 003721   002504 742000 1                  STX2    FPT_OPEN+36
         4 003722   003724 710000 4                  TRA     s:6424

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:160  
      971     6423    2      ELSE FPT_OPEN.V.DCB# = FCTX.DCB#;

   6423  4 003723   002504 741000 1                  STX1    FPT_OPEN+36

      972     6424    2      GOTO ALMOST_THE_TOP;

   6424  4 003724   003512 710000 4                  TRA     ALMOST_THE_TOP

      973     6425
      974     6426        /*I*  NAME:    CHANGEORG
      975     6427              Purpose: To open up FCTX file with a different organization - to change
      976     6428                       the text mode of the file.  Opens it up with FMEFT privileges
      977     6429                       so that the FIT times don't change.
      978     6430        */
      979     6431    2   CHANGEORG: ENTRY ALTRET;

   6431  4 003725   200032 741300       CHANGEORG    STX1  ! ACCESS+1,,AUTO

      980     6432    2      IF TEXTMODE

   6432  4 003726   200022 234100                    SZN     TEXTMODE,,AUTO
         4 003727   003733 605000 4                  TPL     s:6438

      981     6433    3      THEN DO;              /* want a text file (consec), have a keyed file now  */

      982     6434    3         FM$FIT.CODES(2) = '0'B;           /* Zap CODE03 pointer - after CODE02  */

   6434  4 003730   000376 450000 1                  STZ     FM$FIT+2

      983     6435    3         FM$FIT.CODES(1) = '0'B;           /* Zap CODE02 pointer                 */

   6435  4 003731   000375 450000 1                  STZ     FM$FIT+1

      984     6436    3         END;

   6436  4 003732   003740 710000 4                  TRA     s:6442

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:161  
      985     6437    3      ELSE DO;              /* want a binary file (keyed), have a consec now     */

      986     6438    3         FM$FIT.CODES(1) = '0'B;           /* Zap CODE03 pointer                 */

   6438  4 003733   000375 450000 1                  STZ     FM$FIT+1

      987     6439    3         FPT_OPEN.V.ORG# = %KEYED#;        /* open up as a binary file           */

   6439  4 003734   002000 236007                    LDQ     1024,DL
         4 003735   002506 552010 1                  STBQ    FPT_OPEN+38,'10'O

      988     6440    3         FPT_OPEN.V.TYPE# = 'ur';

   6440  4 003736   000231 220000 3                  LDX0    FID_INIT+22
         4 003737   002507 740000 1                  STX0    FPT_OPEN+39

      989     6441    3         END;

      990     6442    2      FCTX.FATTR.XATTR.TEXTMODE = TEXTMODE;

   6442  4 003740   200011 470500                    LDP0    FCTX$,,AUTO
         4 003741   200022 236100                    LDQ     TEXTMODE,,AUTO
         4 003742   000017 676100                    ERQ     15,,PR0
         4 003743   400000 376003                    ANQ     -131072,DU
         4 003744   000017 656100                    ERSQ    15,,PR0

      991     6443    2      FPT_OPEN.IFPARAM_ = FPT_OPEN.FPARAM_;

   6443  4 003745   002470 237000 1                  LDAQ    FPT_OPEN+24
         4 003746   002466 757000 1                  STAQ    FPT_OPEN+22

      992     6444    2      B$JIT.PRIV.ACTIVE = %(PR_FMEFT# | PR_FMSEC#);

   6444  4 003747   000232 236000 3                  LDQ     FID_INIT+23
         4 003750   000000 471400 xsym               LDP1    B$JIT$
         4 003751   100013 756100                    STQ     11,,PR1
         4 003752   003754 710000 4                  TRA     s:6451
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:162  

      993     6445
      994     6446        /*I*  NAME:    CREATOPN
      995     6447              Purpose: To create the file specified in FCTX, and open for reading or
      996     6448                       writing.
      997     6449        */
      998     6450    2   CREATOPN: ENTRY ALTRET;

   6450  4 003753   200032 741300       CREATOPN     STX1  ! ACCESS+1,,AUTO

      999     6451    2      FPT_OPEN.FPARAM_ = VECTOR( NIL);     /* FPARAM trashes FM$FIT too early    */

   6451  4 003754   000010 237000 5                  LDAQ    8
         4 003755   002470 757000 1                  STAQ    FPT_OPEN+24

     1000     6452    2      FPT_OPEN.V.FUN# = %CREATE#;

   6452  4 003756   003000 236007                    LDQ     1536,DL
         4 003757   002505 552010 1                  STBQ    FPT_OPEN+37,'10'O

     1001     6453    2      FPT_OPEN.V.OPER.TEST# = '0'B;

   6453  4 003760   000023 236000 5                  LDQ     19
         4 003761   002504 356000 1                  ANSQ    FPT_OPEN+36

     1002     6454    2      IF FCTX$ = ADDR( NIL) OR FCTX.DCB# = 0

   6454  4 003762   200011 236100                    LDQ     FCTX$,,AUTO
         4 003763   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 003764   003770 600000 4                  TZE     s:6455
         4 003765   200011 470500                    LDP0    FCTX$,,AUTO
         4 003766   000012 220100                    LDX0    10,,PR0
         4 003767   003774 601000 4                  TNZ     s:6456

     1003     6455    2      THEN FPT_OPEN.V.DCB# = DCBNUM( F$TEST);

   6455  4 003770   000000 236007 xsym               LDQ     F$TEST,DL
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:163  
         4 003771   000000 620006                    EAX0    0,QL
         4 003772   002504 740000 1                  STX0    FPT_OPEN+36
         4 003773   003775 710000 4                  TRA     s:6457

     1004     6456    2      ELSE FPT_OPEN.V.DCB# = FCTX.DCB#;

   6456  4 003774   002504 740000 1                  STX0    FPT_OPEN+36

     1005     6457    2      GOTO NEARLY_THE_TOP;       /* Don't clobber FM$FIT in case IFPARAM is set  */

   6457  4 003775   003513 710000 4                  TRA     NEARLY_THE_TOP

     1006     6458
     1007     6459        /*I*  NAME:    CREATCLNUP
     1008     6460              Purpose: To reset the FPT_OPEN structure for the above entry points.
     1009     6461        */
     1010     6462    2   CREATCLNUP: ENTRY ALTRET;

   6462  4 003776   200032 741300       CREATCLNUP   STX1  ! ACCESS+1,,AUTO

     1011     6463    2      FPT_OPEN.V.FUN# = %UPDATE#;

   6463  4 003777   001000 236007                    LDQ     512,DL
         4 004000   002505 552010 1                  STBQ    FPT_OPEN+37,'10'O

     1012     6464    2      FPT_OPEN.V.ORG# = %CONSEC#;

   6464  4 004001   002506 552010 1                  STBQ    FPT_OPEN+38,'10'O

     1013     6465    2      FPT_OPEN.V.TYPE# = BINASC(0);

   6465  4 004002   000040 220003                    LDX0    32,DU
         4 004003   002507 740000 1                  STX0    FPT_OPEN+39

     1014     6466    2      FPT_OPEN.V.OPER.TEST# = '1'B;

   6466  4 004004   020000 236007                    LDQ     8192,DL
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:164  
         4 004005   002504 256000 1                  ORSQ    FPT_OPEN+36

     1015     6467    2      FPT_OPEN.FPARAM_ = VECTOR( FM$FIT);

   6467  4 004006   000024 237000 5                  LDAQ    20
         4 004007   002470 757000 1                  STAQ    FPT_OPEN+24

     1016     6468    2      FPT_OPEN.IFPARAM_ = VECTOR( NIL);

   6468  4 004010   000010 237000 5                  LDAQ    8
         4 004011   002466 757000 1                  STAQ    FPT_OPEN+22

     1017     6469    2      RETURN;

   6469  4 004012   000001 702211                    TSX2  ! 1,X1

     1018     6470    2   END TESTOPEN;
     1019     6471        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:165  
     1020     6472        /*I*  NAME:    MAKEFATTR
     1021     6473              Purpose: Converts the FIT at FPARAM$ to a network format fit.
     1022     6474              Inputs:  FPARAM$ - points to the FM$FIT structure to be turned into FATTR.
     1023     6475              Outputs: FATTR - the NFS file attributes.
     1024     6476                       CREATUTS - creation UTS (unix format) for use in FHANDLE.
     1025     6477        */
     1026     6478    1   MAKEFATTR: PROC( FATTR);

   6478  4 004013   200032 741300       MAKEFATTR    STX1  ! ACCESS+1,,AUTO

     1027     6479
     1028     6480        %FU$FATTR( NAME=FATTR, STCLASS=PARAM);
     1029     6510
     1030     6511    2   DCL NFSFIT SBIN;                        /* -1 = none, 0 = inaccurate, 1 = ok  */
     1031     6512    2   DCL 1 MODTIME, 2 SECONDS UBIN, 2 * UBIN;
     1032     6513
     1033     6514    2      FATTR = '0'B;

   6514  4 004014   200033 470500                    LDP0    @FATTR,,AUTO
         4 004015   000100 100400                    MLR     fill='000'O
         4 004016   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 004017   000000 000104                    ADSC9   0,,PR0                   cn=0,n=68

     1034     6515    2      FATTR.XATTR.TEXTMODE = '1'B;

   6515  4 004020   400000 236003                    LDQ     -131072,DU
         4 004021   000001 256100                    ORSQ    1,,PR0

     1035     6516    2      NFSFIT = -1;

   6516  4 004022   000001 335007                    LCA     1,DL
         4 004023   200034 755100                    STA     NFSFIT,,AUTO

     1036     6517
     1037     6518    2      F$ = ADDR( FM$FIT );

   6518  4 004024   000005 236000 5                  LDQ     5
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:166  
         4 004025   200004 756100                    STQ     F$,,AUTO

     1038     6519    2      CALL XSF$LOCCODP( F$, 04 )           /* File dates                         */

   6519  4 004026   000006 236000 5                  LDQ     6
         4 004027   200045 756100                    STQ     UTSS+2,,AUTO
         4 004030   200004 631500                    EPPR1   F$,,AUTO
         4 004031   200044 451500                    STP1    UTSS+1,,AUTO
         4 004032   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004033   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004034   000000 701000 xent               TSX1    XSF$LOCCODP
         4 004035   004101 702000 4                  TSX2    s:6527

     1039     6520    3      WHENRETURN DO;

     1040     6521    3         CALL TIMEVAL( FATTR.CTIME, CODE04.CREATION.TIME);

   6521  4 004036   200004 236100                    LDQ     F$,,AUTO
         4 004037   000002 036003                    ADLQ    2,DU
         4 004040   200042 756100                    STQ     @RESULT+1,,AUTO
         4 004041   200033 236100                    LDQ     @FATTR,,AUTO
         4 004042   000017 036003                    ADLQ    15,DU
         4 004043   200041 756100                    STQ     MODTIME+4,,AUTO
         4 004044   005065 701000 4                  TSX1    TIMEVAL
         4 004045   000000 011000                    NOP     0

     1041     6522    3         CALL TIMEVAL( FATTR.MTIME, CODE04.MODIFY.TIME);

   6522  4 004046   200004 236100                    LDQ     F$,,AUTO
         4 004047   000001 036003                    ADLQ    1,DU
         4 004050   200042 756100                    STQ     @RESULT+1,,AUTO
         4 004051   200033 236100                    LDQ     @FATTR,,AUTO
         4 004052   000015 036003                    ADLQ    13,DU
         4 004053   200041 756100                    STQ     MODTIME+4,,AUTO
         4 004054   005065 701000 4                  TSX1    TIMEVAL
         4 004055   000000 011000                    NOP     0

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:167  
     1042     6523    3         CALL TIMEVAL( FATTR.ATIME, CODE04.ACCESS.TIME);

   6523  4 004056   200004 236100                    LDQ     F$,,AUTO
         4 004057   200042 756100                    STQ     @RESULT+1,,AUTO
         4 004060   200033 236100                    LDQ     @FATTR,,AUTO
         4 004061   000013 036003                    ADLQ    11,DU
         4 004062   200041 756100                    STQ     MODTIME+4,,AUTO
         4 004063   005065 701000 4                  TSX1    TIMEVAL
         4 004064   000000 011000                    NOP     0

     1043     6524    3        CALL XSL$HTONL( CREATUTS, MOD( CODE04.CREATION.TIME, %(BITBIN( '040000000'X)))
              6524                  );

   6524  4 004065   200004 470500                    LDP0    F$,,AUTO
         4 004066   000002 236100                    LDQ     2,,PR0
         4 004067   000007 376000 5                  ANQ     7
         4 004070   200044 756100                    STQ     UTSS+1,,AUTO
         4 004071   200044 631500                    EPPR1   UTSS+1,,AUTO
         4 004072   200047 451500                    STP1    UTSS+4,,AUTO
         4 004073   200016 633500                    EPPR3   CREATUTS,,AUTO
         4 004074   200046 453500                    STP3    UTSS+3,,AUTO
         4 004075   200046 630500                    EPPR0   UTSS+3,,AUTO
         4 004076   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004077   000000 701000 xent               TSX1    XSL$HTONL
         4 004100   000000 011000                    NOP     0

     1044     6525    3         END;

     1045     6526
     1046     6527    2      F$ = ADDR( FM$FIT );

   6527  4 004101   000005 236000 5                  LDQ     5
         4 004102   200004 756100                    STQ     F$,,AUTO

     1047     6528    2      CALL XSF$LOCCODP( F$, 13 )           /* Unix fit.                          */

   6528  4 004103   000027 236000 5                  LDQ     23
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:168  
         4 004104   200045 756100                    STQ     UTSS+2,,AUTO
         4 004105   200004 630500                    EPPR0   F$,,AUTO
         4 004106   200044 450500                    STP0    UTSS+1,,AUTO
         4 004107   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004110   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004111   000000 701000 xent               TSX1    XSF$LOCCODP
         4 004112   004153 702000 4                  TSX2    s:6540

     1048     6529    3      WHENRETURN DO;

     1049     6530    3         IF CODE13.ID ~= 'nfs fit' OR CODE13.FATTR.TYPE = %NFNON THEN EXIT;

   6530  4 004113   200004 470500                    LDP0    F$,,AUTO
         4 004114   040000 106500                    CMPC    fill='040'O
         4 004115   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         4 004116   000233 000007 3                  ADSC9   FID_INIT+24              cn=0,n=7
         4 004117   004153 601000 4                  TNZ     s:6540
         4 004120   000003 235100                    LDA     3,,PR0
         4 004121   004153 600000 4                  TZE     s:6540

     1050     6531    3         NFSFIT = 1;                       /* assume accurate fit                */

   6531  4 004122   000001 236007                    LDQ     1,DL
         4 004123   200034 756100                    STQ     NFSFIT,,AUTO

     1051     6532    3         CALL TIMEVAL( MODTIME, CODE13.MODTIME);

   6532  4 004124   200004 236100                    LDQ     F$,,AUTO
         4 004125   000002 036003                    ADLQ    2,DU
         4 004126   200042 756100                    STQ     @RESULT+1,,AUTO
         4 004127   200035 631500                    EPPR1   MODTIME,,AUTO
         4 004130   200041 451500                    STP1    MODTIME+4,,AUTO
         4 004131   005065 701000 4                  TSX1    TIMEVAL
         4 004132   000000 011000                    NOP     0

     1052     6533    3         IF FATTR.ATIME.SECONDS > MODTIME.SECONDS

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:169  
   6533  4 004133   200033 470500                    LDP0    @FATTR,,AUTO
         4 004134   200035 236100                    LDQ     MODTIME,,AUTO
         4 004135   000013 116100                    CMPQ    11,,PR0
         4 004136   004143 603000 4                  TRC     s:6535

     1053     6534    3         THEN CODE13.FATTR.ATIME = FATTR.ATIME; /* CP6 accessed after NFS did    */

   6534  4 004137   200004 471500                    LDP1    F$,,AUTO
         4 004140   000100 100500                    MLR     fill='000'O
         4 004141   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
         4 004142   100016 000010                    ADSC9   14,,PR1                  cn=0,n=8

     1054     6535    3         IF FATTR.MTIME.SECONDS > MODTIME.SECONDS

   6535  4 004143   200035 236100                    LDQ     MODTIME,,AUTO
         4 004144   000015 116100                    CMPQ    13,,PR0
         4 004145   004147 603000 4                  TRC     s:6537

     1055     6536    3         THEN NFSFIT = 0;   /* file was modified after we last wrote this fit    */

   6536  4 004146   200034 450100                    STZ     NFSFIT,,AUTO

     1056     6537    3         FATTR = CODE13.FATTR;

   6537  4 004147   200004 471500                    LDP1    F$,,AUTO
         4 004150   000100 100500                    MLR     fill='000'O
         4 004151   100003 000104                    ADSC9   3,,PR1                   cn=0,n=68
         4 004152   000000 000104                    ADSC9   0,,PR0                   cn=0,n=68

     1057     6538    3         END;

     1058     6539
     1059     6540    2      F$ = ADDR( FM$FIT );

   6540  4 004153   000005 236000 5                  LDQ     5
         4 004154   200004 756100                    STQ     F$,,AUTO

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:170  
     1060     6541    2      CALL XSF$LOCCODP( F$, 03 )           /* A file                             */

   6541  4 004155   000030 236000 5                  LDQ     24
         4 004156   200045 756100                    STQ     UTSS+2,,AUTO
         4 004157   200004 630500                    EPPR0   F$,,AUTO
         4 004160   200044 450500                    STP0    UTSS+1,,AUTO
         4 004161   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004162   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004163   000000 701000 xent               TSX1    XSF$LOCCODP
         4 004164   004333 702000 4                  TSX2    s:6570

     1061     6542    3      WHENRETURN DO;

     1062     6543    3         FATTR.TYPE = %NFREG;

   6543  4 004165   000001 235007                    LDA     1,DL
         4 004166   200033 470500                    LDP0    @FATTR,,AUTO
         4 004167   000000 755100                    STA     0,,PR0

     1063     6544    3         FATTR.BLOCKS = CODE03.UGRANS;

   6544  4 004170   200004 471500                    LDP1    F$,,AUTO
         4 004171   100000 236100                    LDQ     0,,PR1
         4 004172   000032 376000 xsym               ANQ     B_VECTNIL+26
         4 004173   000010 756100                    STQ     8,,PR0

     1064     6545    3         CALL XSL$HTONL( FATTR.BLOCKS, FATTR.BLOCKS);

   6545  4 004174   200033 236100                    LDQ     @FATTR,,AUTO
         4 004175   000010 036003                    ADLQ    8,DU
         4 004176   200045 756100                    STQ     UTSS+2,,AUTO
         4 004177   200044 756100                    STQ     UTSS+1,,AUTO
         4 004200   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004201   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004202   000000 701000 xent               TSX1    XSL$HTONL
         4 004203   000000 011000                    NOP     0

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:171  
     1065     6546    3         IF CODE03.ORG = %KEYED# AND CODE03.TYPE = 'ur'

   6546  4 004204   200004 470500                    LDP0    F$,,AUTO
         4 004205   000000 236100                    LDQ     0,,PR0
         4 004206   777000 376003                    ANQ     -512,DU
         4 004207   002000 116003                    CMPQ    1024,DU
         4 004210   004217 601000 4                  TNZ     s:6548
         4 004211   000001 720100                    LXL0    1,,PR0
         4 004212   000231 100000 3                  CMPX0   FID_INIT+22
         4 004213   004217 601000 4                  TNZ     s:6548

     1066     6547    3         THEN FATTR.XATTR.TEXTMODE = '0'B;

   6547  4 004214   200033 471500                    LDP1    @FATTR,,AUTO
         4 004215   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 004216   100001 356100                    ANSQ    1,,PR1

     1067     6548    4         IF NFSFIT < 0 THEN DO;            /* no NFS FIT - use default modes     */

   6548  4 004217   200034 235100                    LDA     NFSFIT,,AUTO
         4 004220   004241 605000 4                  TPL     s:6555

     1068     6549    4            IF CODE03.ORG = %CONSEC#       /* check if NFS writable              */

   6549  4 004221   200004 470500                    LDP0    F$,,AUTO
         4 004222   000000 236100                    LDQ     0,,PR0
         4 004223   777000 376003                    ANQ     -512,DU
         4 004224   001000 116003                    CMPQ    512,DU
         4 004225   004233 600000 4                  TZE     s:6552
         4 004226   004000 116003                    CMPQ    2048,DU
         4 004227   004233 600000 4                  TZE     s:6552
         4 004230   200033 471500                    LDP1    @FATTR,,AUTO
         4 004231   100001 234100                    SZN     1,,PR1
         4 004232   004237 604000 4                  TMI     s:6553

     1069     6550    4              OR CODE03.ORG = %UR#
     1070     6551    4              OR NOT FATTR.XATTR.TEXTMODE
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:172  
     1071     6552    4            THEN FATTR.MODE = '201266'O;   /* Read/Write, but not Exec           */

   6552  4 004233   201266 220003                    LDX0    66230,DU
         4 004234   200033 471500                    LDP1    @FATTR,,AUTO
         4 004235   100001 440100                    SXL0    1,,PR1
         4 004236   004241 710000 4                  TRA     s:6555

     1072     6553    4            ELSE FATTR.MODE = '201044'O;   /* Read only                          */

   6553  4 004237   201044 220003                    LDX0    66084,DU
         4 004240   100001 440100                    SXL0    1,,PR1

     1073     6554    4            END;

     1074     6555    4         IF NFSFIT < 1 THEN DO;            /* no/inaccurate FIT - update length  */

   6555  4 004241   000000 115003                    CMPA    0,DU
         4 004242   004333 605400 4                  TPNZ    s:6570

     1075     6556    4            IF CODE03.NRECS = 0

   6556  4 004243   200004 470500                    LDP0    F$,,AUTO
         4 004244   000002 235100                    LDA     2,,PR0
         4 004245   004251 601000 4                  TNZ     s:6558

     1076     6557    4            THEN FATTR.SIZE = 0;

   6557  4 004246   200033 471500                    LDP1    @FATTR,,AUTO
         4 004247   100005 450100                    STZ     5,,PR1
         4 004250   004323 710000 4                  TRA     s:6566

     1077     6558    4            ELSE CALL FUI$FILELEN( FATTR.SIZE, CODE03 )

   6558  4 004251   200004 236100                    LDQ     F$,,AUTO
         4 004252   200045 756100                    STQ     UTSS+2,,AUTO
         4 004253   200033 236100                    LDQ     @FATTR,,AUTO
         4 004254   000005 036003                    ADLQ    5,DU
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:173  
         4 004255   200044 756100                    STQ     UTSS+1,,AUTO
         4 004256   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004257   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004260   000000 701000 xent               TSX1    FUI$FILELEN
         4 004261   004263 702000 4                  TSX2    s:6560
         4 004262   004323 710000 4                  TRA     s:6566

     1078     6559    5               WHENALTRETURN DO;

     1079     6560    5                  IF CODE03.ORG = %CONSEC# OR CODE03.ORG = %UR#

   6560  4 004263   200004 470500                    LDP0    F$,,AUTO
         4 004264   000000 236100                    LDQ     0,,PR0
         4 004265   777000 376003                    ANQ     -512,DU
         4 004266   001000 116003                    CMPQ    512,DU
         4 004267   004272 600000 4                  TZE     s:6561
         4 004270   004000 116003                    CMPQ    2048,DU
         4 004271   004304 601000 4                  TNZ     s:6562

     1080     6561    5                  THEN FATTR.SIZE = CODE03.UGRANS*4084-CODE03.NRECS*4;

   6561  4 004272   000000 236100                    LDQ     0,,PR0
         4 004273   000032 376000 xsym               ANQ     B_VECTNIL+26
         4 004274   000031 402000 5                  MPY     25
         4 004275   000002 036100                    ADLQ    2,,PR0
         4 004276   000002 736000                    QLS     2
         4 004277   000027 676000 xsym               ERQ     B_VECTNIL+23
         4 004300   000001 036007                    ADLQ    1,DL
         4 004301   200033 471500                    LDP1    @FATTR,,AUTO
         4 004302   100005 756100                    STQ     5,,PR1
         4 004303   004323 710000 4                  TRA     s:6566

     1081     6562    5                  ELSE IF NOT FATTR.XATTR.TEXTMODE

   6562  4 004304   200033 471500                    LDP1    @FATTR,,AUTO
         4 004305   100001 234100                    SZN     1,,PR1
         4 004306   004313 604000 4                  TMI     s:6564
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:174  

     1082     6563    5                     THEN FATTR.SIZE = CODE03.NRECS*1024; /* not for holey files */

   6563  4 004307   000002 235100                    LDA     2,,PR0
         4 004310   000012 735000                    ALS     10
         4 004311   100005 755100                    STA     5,,PR1
         4 004312   004323 710000 4                  TRA     s:6566

     1083     6564    5                     ELSE FATTR.SIZE = CODE03.UGRANS*4088-CODE03.NRECS*13;

   6564  4 004313   000002 236100                    LDQ     2,,PR0
         4 004314   000032 402000 5                  MPY     26
         4 004315   200044 756100                    STQ     UTSS+1,,AUTO
         4 004316   000000 236100                    LDQ     0,,PR0
         4 004317   000032 376000 xsym               ANQ     B_VECTNIL+26
         4 004320   007770 402007                    MPY     4088,DL
         4 004321   200044 036100                    ADLQ    UTSS+1,,AUTO
         4 004322   100005 756100                    STQ     5,,PR1

     1084     6565    5                  END;

     1085     6566    4            CALL XSL$HTONL (FATTR.SIZE, FATTR.SIZE);

   6566  4 004323   200033 236100                    LDQ     @FATTR,,AUTO
         4 004324   000005 036003                    ADLQ    5,DU
         4 004325   200045 756100                    STQ     UTSS+2,,AUTO
         4 004326   200044 756100                    STQ     UTSS+1,,AUTO
         4 004327   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004330   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004331   000000 701000 xent               TSX1    XSL$HTONL
         4 004332   000000 011000                    NOP     0

     1086     6567    4            END;

     1087     6568    3         END;

     1088     6569
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:175  
     1089     6570    2      F$ = ADDR( FM$FIT );

   6570  4 004333   000005 236000 5                  LDQ     5
         4 004334   200004 756100                    STQ     F$,,AUTO

     1090     6571    2      CALL XSF$LOCCODP( F$, 14 )           /* A directory                        */

   6571  4 004335   000034 236000 5                  LDQ     28
         4 004336   200045 756100                    STQ     UTSS+2,,AUTO
         4 004337   200004 630500                    EPPR0   F$,,AUTO
         4 004340   200044 450500                    STP0    UTSS+1,,AUTO
         4 004341   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004342   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004343   000000 701000 xent               TSX1    XSF$LOCCODP
         4 004344   004371 702000 4                  TSX2    s:6579

     1091     6572    3      WHENRETURN DO;

     1092     6573    3         FATTR.TYPE = %NFDIR;

   6573  4 004345   000002 235007                    LDA     2,DL
         4 004346   200033 470500                    LDP0    @FATTR,,AUTO
         4 004347   000000 755100                    STA     0,,PR0

     1093     6574    3         FATTR.MODE = '101377'O;      /* Needs some work - writeall for testing  */

   6574  4 004350   101377 220003                    LDX0    33535,DU
         4 004351   000001 440100                    SXL0    1,,PR0

     1094     6575    3         FATTR.SIZE = MAXIMUM( CODE14.CGRANS*32, 32); /* slight exaggeration     */

   6575  4 004352   200004 471500                    LDP1    F$,,AUTO
         4 004353   100002 236100                    LDQ     2,,PR1
         4 004354   000005 736000                    QLS     5
         4 004355   000040 116007                    CMPQ    32,DL
         4 004356   004360 605000 4                  TPL     s:6575+6
         4 004357   000040 236007                    LDQ     32,DL
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:176  
         4 004360   000005 756100                    STQ     5,,PR0

     1095     6576    3         CALL XSL$HTONL( FATTR.SIZE, FATTR.SIZE);

   6576  4 004361   200033 236100                    LDQ     @FATTR,,AUTO
         4 004362   000005 036003                    ADLQ    5,DU
         4 004363   200045 756100                    STQ     UTSS+2,,AUTO
         4 004364   200044 756100                    STQ     UTSS+1,,AUTO
         4 004365   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004366   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004367   000000 701000 xent               TSX1    XSL$HTONL
         4 004370   000000 011000                    NOP     0

     1096     6577    3         END;

     1097     6578
     1098     6579    2      FATTR.NLINK = 1;

   6579  4 004371   000001 235007                    LDA     1,DL
         4 004372   200033 470500                    LDP0    @FATTR,,AUTO
         4 004373   000002 755100                    STA     2,,PR0

     1099     6580    2      CALL XSL$HTONL( FATTR.BLOCKSIZE, 4096);

   6580  4 004374   000036 236000 5                  LDQ     30
         4 004375   200045 756100                    STQ     UTSS+2,,AUTO
         4 004376   200033 236100                    LDQ     @FATTR,,AUTO
         4 004377   000006 036003                    ADLQ    6,DU
         4 004400   200044 756100                    STQ     UTSS+1,,AUTO
         4 004401   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004402   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004403   000000 701000 xent               TSX1    XSL$HTONL
         4 004404   000000 011000                    NOP     0

     1100     6581    2      FATTR.FSID = FSID;

   6581  4 004405   200033 470500                    LDP0    @FATTR,,AUTO
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:177  
         4 004406   200021 235100                    LDA     FSID,,AUTO
         4 004407   000011 755100                    STA     9,,PR0

     1101     6582    2      FATTR.FILEID = CREATUTS;

   6582  4 004410   200016 236100                    LDQ     CREATUTS,,AUTO
         4 004411   000012 756100                    STQ     10,,PR0

     1102     6583
     1103     6584    2   END MAKEFATTR;

   6584  4 004412   200032 221300                    LDX1  ! ACCESS+1,,AUTO
         4 004413   000001 702211                    TSX2  ! 1,X1

     1104     6585
     1105     6586        /*I*  NAME:    UPDATEFATTR
     1106     6587              Purpose: Updates the FIT with the new NFS information desired.
     1107     6588              Inputs:  SATTR - the new attributes to be put into FATTR.
     1108     6589              Outputs: FATTR - the new NFS file attributes.
     1109     6590        */
     1110     6591    1   UPDATEFATTR: PROC( SATTR);

   6591  4 004414   200026 741300       UPDATEFATTR  STX1  ! LIST_ACCTS+2,,AUTO

     1111     6592        %FU$SATTR( NAME=SATTR, STCLASS=PARAM);
     1112     6614        %EQU IGNORE# = BITBIN('377377377377'O);
     1113     6615        %EQU MIGNORE# = BITBIN('000000377377'O);
     1114     6616
     1115     6617    2      IF SATTR.MODE ~= %IGNORE#

   6617  4 004415   200027 470500                    LDP0    @SATTR,,AUTO
         4 004416   000000 235100                    LDA     0,,PR0
         4 004417   000037 115000 5                  CMPA    31
         4 004420   004432 600000 4                  TZE     s:6620
         4 004421   377377 115007                    CMPA    130815,DL
         4 004422   004432 600000 4                  TZE     s:6620

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:178  
     1116     6618    2        AND SATTR.MODE ~= %MIGNORE#
     1117     6619    2      THEN FCTX.FATTR.MODE = BINBIT(SATTR.MODE,18) | '200000'O /* regular file */;

   6619  4 004423   000000 236100                    LDQ     0,,PR0
         4 004424   000022 736000                    QLS     18
         4 004425   000022 772000                    QRL     18
         4 004426   000000 620006                    EAX0    0,QL
         4 004427   200000 260003                    ORX0    65536,DU
         4 004430   200011 471500                    LDP1    FCTX$,,AUTO
         4 004431   100017 440100                    SXL0    15,,PR1

     1118     6620    2      IF SATTR.UID ~= %IGNORE# THEN FCTX.FATTR.UID = SATTR.UID;

   6620  4 004432   000001 235100                    LDA     1,,PR0
         4 004433   000037 115000 5                  CMPA    31
         4 004434   004437 600000 4                  TZE     s:6621

   6620  4 004435   200011 471500                    LDP1    FCTX$,,AUTO
         4 004436   100021 755100                    STA     17,,PR1

     1119     6621    2      IF SATTR.GID ~= %IGNORE# THEN FCTX.FATTR.GID = SATTR.GID;

   6621  4 004437   000002 235100                    LDA     2,,PR0
         4 004440   000037 115000 5                  CMPA    31
         4 004441   004444 600000 4                  TZE     s:6622

   6621  4 004442   200011 471500                    LDP1    FCTX$,,AUTO
         4 004443   100022 755100                    STA     18,,PR1

     1120     6622    2      IF SATTR.SIZE = 0 THEN FCTX.FATTR.SIZE = 0; /* means truncate the file     */

   6622  4 004444   000003 235100                    LDA     3,,PR0
         4 004445   004450 601000 4                  TNZ     s:6623

   6622  4 004446   200011 471500                    LDP1    FCTX$,,AUTO
         4 004447   100023 450100                    STZ     19,,PR1

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:179  
     1121     6623    2      IF SATTR.ATIME.SECONDS ~= %IGNORE# THEN FCTX.FATTR.ATIME = SATTR.ATIME;

   6623  4 004450   000004 235100                    LDA     4,,PR0
         4 004451   000037 115000 5                  CMPA    31
         4 004452   004457 600000 4                  TZE     s:6624

   6623  4 004453   200011 471500                    LDP1    FCTX$,,AUTO
         4 004454   000100 100500                    MLR     fill='000'O
         4 004455   000004 000010                    ADSC9   4,,PR0                   cn=0,n=8
         4 004456   100031 000010                    ADSC9   25,,PR1                  cn=0,n=8

     1122     6624    2      IF SATTR.MTIME.SECONDS ~= %IGNORE# THEN FCTX.FATTR.MTIME = SATTR.MTIME;

   6624  4 004457   000006 235100                    LDA     6,,PR0
         4 004460   000037 115000 5                  CMPA    31
         4 004461   004466 600000 4                  TZE     s:6625

   6624  4 004462   200011 471500                    LDP1    FCTX$,,AUTO
         4 004463   000100 100500                    MLR     fill='000'O
         4 004464   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
         4 004465   100033 000010                    ADSC9   27,,PR1                  cn=0,n=8

     1123     6625    2   END UPDATEFATTR;

   6625  4 004466   200026 221300                    LDX1  ! LIST_ACCTS+2,,AUTO
         4 004467   000001 702211                    TSX2  ! 1,X1

     1124     6626
     1125     6627        /*I*  NAME:    CHECK_READ
     1126     6628              Purpose: To check if the user has UNIX read permission on this file.
     1127     6629              INPUTs:  UCTX - the user to check (UID and GID).
     1128     6630                       FCTX - the file to check the modes for (rwx...)
     1129     6631              ALTRETs: if the user does not have read access to the file.
     1130     6632        */
     1131     6633    1   CHECK_READ: PROC ALTRET;

   6633  4 004470   200030 741300       CHECK_READ   STX1  ! LEN,,AUTO
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:180  

     1132     6634
     1133     6635    2   DCL ACCESS BIT(1);                      /* the access we read                 */
     1134     6636
     1135     6637    2      ACCESS = %NO#;

   6637  4 004471   200031 450100                    STZ     ACCESS,,AUTO

     1136     6638    2      IF UCTX.USER.UID = 0                 /* root - only needs CP-6 permission  */

   6638  4 004472   200010 470500                    LDP0    UCTX$,,AUTO
         4 004473   000004 235100                    LDA     4,,PR0
         4 004474   004500 601000 4                  TNZ     s:6640

     1137     6639    2      THEN ACCESS = %YES#;

   6639  4 004475   400000 236003                    LDQ     -131072,DU
         4 004476   200031 756100                    STQ     ACCESS,,AUTO
         4 004477   004525 710000 4                  TRA     s:6645

     1138     6640    2      ELSE IF UCTX.USER.UID = FCTX.FATTR.UID

   6640  4 004500   200011 471500                    LDP1    FCTX$,,AUTO
         4 004501   000004 236100                    LDQ     4,,PR0
         4 004502   100021 116100                    CMPQ    17,,PR1
         4 004503   004511 601000 4                  TNZ     s:6642

     1139     6641    2         THEN ACCESS = FCTX.FATTR.MODE.OREAD;

   6641  4 004504   100017 236100                    LDQ     15,,PR1
         4 004505   000032 736000                    QLS     26
         4 004506   400000 376003                    ANQ     -131072,DU
         4 004507   200031 756100                    STQ     ACCESS,,AUTO
         4 004510   004525 710000 4                  TRA     s:6645

     1140     6642    2         ELSE IF UCTX.USER.GID = FCTX.FATTR.GID

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:181  
   6642  4 004511   000005 236100                    LDQ     5,,PR0
         4 004512   100022 116100                    CMPQ    18,,PR1
         4 004513   004521 601000 4                  TNZ     s:6644

     1141     6643    2            THEN ACCESS = FCTX.FATTR.MODE.GREAD;

   6643  4 004514   100017 236100                    LDQ     15,,PR1
         4 004515   000036 736000                    QLS     30
         4 004516   400000 376003                    ANQ     -131072,DU
         4 004517   200031 756100                    STQ     ACCESS,,AUTO
         4 004520   004525 710000 4                  TRA     s:6645

     1142     6644    2            ELSE ACCESS = FCTX.FATTR.MODE.EREAD;

   6644  4 004521   100017 236100                    LDQ     15,,PR1
         4 004522   000041 736000                    QLS     33
         4 004523   400000 376003                    ANQ     -131072,DU
         4 004524   200031 756100                    STQ     ACCESS,,AUTO

     1143     6645    2      GOTO COMMON;

   6645  4 004525   004602 710000 4                  TRA     COMMON

     1144     6646
     1145     6647        /*I*  NAME:    CHECK_WRITE
     1146     6648              Purpose: To check if the user has UNIX write permission on this file.
     1147     6649              INPUTs:  UCTX - the user to check (UID and GID).
     1148     6650                       FCTX - the file to check the modes for (rwx...)
     1149     6651              ALTRETs: if the user does not have write access to the file.
     1150     6652        */
     1151     6653    2   CHECK_WRITE: ENTRY ALTRET;

   6653  4 004526   200030 741300       CHECK_WRITE  STX1  ! LEN,,AUTO

     1152     6654
     1153     6655    2      ACCESS = %NO#;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:182  
   6655  4 004527   200031 450100                    STZ     ACCESS,,AUTO

     1154     6656    2      IF UCTX.USER.UID = 0                 /* root - only needs CP-6 permission  */

   6656  4 004530   200010 470500                    LDP0    UCTX$,,AUTO
         4 004531   000004 235100                    LDA     4,,PR0
         4 004532   004536 601000 4                  TNZ     s:6658

     1155     6657    2      THEN ACCESS = %YES#;

   6657  4 004533   400000 236003                    LDQ     -131072,DU
         4 004534   200031 756100                    STQ     ACCESS,,AUTO
         4 004535   004563 710000 4                  TRA     s:6663

     1156     6658    2      ELSE IF UCTX.USER.UID = FCTX.FATTR.UID

   6658  4 004536   200011 471500                    LDP1    FCTX$,,AUTO
         4 004537   000004 236100                    LDQ     4,,PR0
         4 004540   100021 116100                    CMPQ    17,,PR1
         4 004541   004547 601000 4                  TNZ     s:6660

     1157     6659    2         THEN ACCESS = FCTX.FATTR.MODE.OWRITE;

   6659  4 004542   100017 236100                    LDQ     15,,PR1
         4 004543   000034 736000                    QLS     28
         4 004544   400000 376003                    ANQ     -131072,DU
         4 004545   200031 756100                    STQ     ACCESS,,AUTO
         4 004546   004563 710000 4                  TRA     s:6663

     1158     6660    2         ELSE IF UCTX.USER.GID = FCTX.FATTR.GID

   6660  4 004547   000005 236100                    LDQ     5,,PR0
         4 004550   100022 116100                    CMPQ    18,,PR1
         4 004551   004557 601000 4                  TNZ     s:6662

     1159     6661    2            THEN ACCESS = FCTX.FATTR.MODE.GWRITE;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:183  
   6661  4 004552   100017 236100                    LDQ     15,,PR1
         4 004553   000037 736000                    QLS     31
         4 004554   400000 376003                    ANQ     -131072,DU
         4 004555   200031 756100                    STQ     ACCESS,,AUTO
         4 004556   004563 710000 4                  TRA     s:6663

     1160     6662    2            ELSE ACCESS = FCTX.FATTR.MODE.EWRITE;

   6662  4 004557   100017 236100                    LDQ     15,,PR1
         4 004560   000042 736000                    QLS     34
         4 004561   400000 376003                    ANQ     -131072,DU
         4 004562   200031 756100                    STQ     ACCESS,,AUTO

     1161     6663    2      GOTO COMMON;

   6663  4 004563   004602 710000 4                  TRA     COMMON

     1162     6664
     1163     6665        /*I*  NAME:    CHECK_OWNER
     1164     6666              Purpose: To check if this UNIX user is the owner on this file.
     1165     6667              INPUTs:  UCTX - the user to check (UID and GID).
     1166     6668                       FCTX - the file to check the owner for (rwx...)
     1167     6669              ALTRETs: if the user is not the owner of this file.
     1168     6670        */
     1169     6671    2   CHECK_OWNER: ENTRY ALTRET;

   6671  4 004564   200030 741300       CHECK_OWNER  STX1  ! LEN,,AUTO

     1170     6672
     1171     6673    2      ACCESS = %NO#;

   6673  4 004565   200031 450100                    STZ     ACCESS,,AUTO

     1172     6674    2      IF UCTX.USER.UID = 0                 /* root - only needs CP-6 permission  */

   6674  4 004566   200010 470500                    LDP0    UCTX$,,AUTO
         4 004567   000004 235100                    LDA     4,,PR0
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:184  
         4 004570   004600 600000 4                  TZE     s:6676
         4 004571   200011 471500                    LDP1    FCTX$,,AUTO
         4 004572   000004 236100                    LDQ     4,,PR0
         4 004573   100021 116100                    CMPQ    17,,PR1
         4 004574   004602 601000 4                  TNZ     COMMON
         4 004575   000005 236100                    LDQ     5,,PR0
         4 004576   100022 116100                    CMPQ    18,,PR1
         4 004577   004602 601000 4                  TNZ     COMMON

     1173     6675    2        OR UCTX.USER.UID = FCTX.FATTR.UID AND UCTX.USER.GID = FCTX.FATTR.GID
     1174     6676    2      THEN ACCESS = %YES#;

   6676  4 004600   400000 236003                    LDQ     -131072,DU
         4 004601   200031 756100                    STQ     ACCESS,,AUTO

     1175     6677
     1176     6678    2   COMMON:
     1177     6679    2      IF ACCESS

   6679  4 004602   200031 234100       COMMON       SZN     ACCESS,,AUTO
         4 004603   004605 605000 4                  TPL     s:6681

     1178     6680    2      THEN RETURN;

   6680  4 004604   000001 702211                    TSX2  ! 1,X1

     1179     6681    2      ELSE ALTRETURN;

   6681  4 004605   000000 702211                    TSX2  ! 0,X1

     1180     6682
     1181     6683    2   END CHECK_READ;
     1182     6684        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:185  
     1183     6685        /*I*  NAME:    MAKEFSID
     1184     6686              Purpose: Computes a filesystem ID from the packsetname and account.
     1185     6687                       Making it differentiate between different accounts makes the
     1186     6688                       "mv" command do the right thing when source and destination
     1187     6689                       are not in the same directory (only thing that works in CP-6).
     1188     6690              Inputs:  FHANDLE - the file handle to get a filesystem ID for.
     1189     6691              Outputs: FSID (global) - the file system ID.
     1190     6692        */
     1191     6693    1   MAKEFSID: PROC( FHANDLE);

   6693  4 004606   200032 741300       MAKEFSID     STX1  ! ACCESS+1,,AUTO

     1192     6694        %FU$FHANDLE( NAME=FHANDLE, STCLASS=PARAM);
     1193     6715
     1194     6716    2      FSID = 0;

   6716  4 004607   200021 450100                    STZ     FSID,,AUTO

     1195     6717    2      IF FHANDLE.ACCTLNG = 0 THEN FSID = %BITBIN('63702D36'X); /* cp-6           */

   6717  4 004610   200033 470500                    LDP0    @FHANDLE,,AUTO
         4 004611   000000 236100                    LDQ     0,,PR0
         4 004612   017000 316007                    CANQ    7680,DL
         4 004613   004617 601000 4                  TNZ     s:6718

   6717  4 004614   000040 235000 5                  LDA     32
         4 004615   200021 755100                    STA     FSID,,AUTO
         4 004616   004650 710000 4                  TRA     s:6721

     1196     6718    3      ELSE DO I = FHANDLE.PSNLNG+FHANDLE.ACCTLNG DOWNTO 1;

   6718  4 004617   000000 236100                    LDQ     0,,PR0
         4 004620   000011 772000                    QRL     9
         4 004621   000017 376007                    ANQ     15,DL
         4 004622   200044 756100                    STQ     UTSS+1,,AUTO
         4 004623   000000 236100                    LDQ     0,,PR0
         4 004624   000015 772000                    QRL     13
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:186  
         4 004625   000007 376007                    ANQ     7,DL
         4 004626   200044 036100                    ADLQ    UTSS+1,,AUTO
         4 004627   200015 756100                    STQ     I,,AUTO
         4 004630   004646 710000 4                  TRA     s:6720+2

     1197     6719    3         FSID = FSID*4+ASCBIN( SUBSTR( FHANDLE.TEXT,I-1,1));

   6719  4 004631   200033 470500                    LDP0    @FHANDLE,,AUTO
         4 004632   200015 235100                    LDA     I,,AUTO
         4 004633   000100 101505                    MRL     fill='000'O
         4 004634   000000 400001                    ADSC9   0,A,PR0                  cn=2,n=1
         4 004635   200044 000004                    ADSC9   UTSS+1,,AUTO             cn=0,n=4
         4 004636   200044 236100                    LDQ     UTSS+1,,AUTO
         4 004637   200045 756100                    STQ     UTSS+2,,AUTO
         4 004640   200021 236100                    LDQ     FSID,,AUTO
         4 004641   000002 736000                    QLS     2
         4 004642   200045 036100                    ADLQ    UTSS+2,,AUTO
         4 004643   200021 756100                    STQ     FSID,,AUTO

     1198     6720    3         END;

   6720  4 004644   000001 135007                    SBLA    1,DL
         4 004645   200015 755100                    STA     I,,AUTO
         4 004646   200015 235100                    LDA     I,,AUTO
         4 004647   004631 601000 4                  TNZ     s:6719

     1199     6721    2      CALL XSL$HTONL( FSID, FSID);

   6721  4 004650   200021 631500                    EPPR1   FSID,,AUTO
         4 004651   200045 451500                    STP1    UTSS+2,,AUTO
         4 004652   200021 633500                    EPPR3   FSID,,AUTO
         4 004653   200044 453500                    STP3    UTSS+1,,AUTO
         4 004654   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 004655   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004656   000000 701000 xent               TSX1    XSL$HTONL
         4 004657   000000 011000                    NOP     0

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:187  
     1200     6722    2      RETURN;

   6722  4 004660   200032 221300                    LDX1  ! ACCESS+1,,AUTO
         4 004661   000001 702211                    TSX2  ! 1,X1

     1201     6723    2   END MAKEFSID;
     1202     6724
     1203     6725        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:188  
     1204     6726        /*I*  NAME:    DELETE_FILE
     1205     6727              Purpose: To delete the FCTX file.
     1206     6728              Inputs:  FCTX$ - pointer to the FCTX of the file to delete.
     1207     6729        */
     1208     6730    1   DELETE_FILE: PROC ALTRET;

   6730  4 004662   200026 741300       DELETE_FILE  STX1  ! LIST_ACCTS+2,,AUTO

     1209     6731
     1210     6732    2   DCL NO_ENT BIT(1);
     1211     6733
     1212     6734    2      NO_ENT = %NO#;

   6734  4 004663   200027 450100                    STZ     NO_ENT,,AUTO

     1213     6735    2      IF NOT UCTX.FFLG.DELF THEN GOTO ERR_ACCES;

   6735  4 004664   200010 470500                    LDP0    UCTX$,,AUTO
         4 004665   000015 236100                    LDQ     13,,PR0
         4 004666   020000 316003                    CANQ    8192,DU
         4 004667   005011 600000 4                  TZE     ERR_ACCES

     1214     6736    2      CALL CHECK_OWNER

   6736  4 004670   004564 701000 4                  TSX1    CHECK_OWNER
         4 004671   004673 702000 4                  TSX2    s:6738
         4 004672   004675 710000 4                  TRA     s:6740

     1215     6737    3      WHENALTRETURN DO;

     1216     6738    3         CALL CHECK_WRITE ALTRET( ERR_ACCES);

   6738  4 004673   004526 701000 4                  TSX1    CHECK_WRITE
         4 004674   005011 702000 4                  TSX2    ERR_ACCES

     1217     6739    3         END;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:189  
     1218     6740    2      FPT_CLOSE.V.DISP# = %RELEASE#;

   6740  4 004675   000001 236007                    LDQ     1,DL
         4 004676   000032 552004 1                  STBQ    FPT_CLOSE+26,'04'O

     1219     6741    2      FPT_CLOSE.V.DCB# = FCTX.DCB#;

   6741  4 004677   200011 470500                    LDP0    FCTX$,,AUTO
         4 004700   000012 220100                    LDX0    10,,PR0
         4 004701   000032 740000 1                  STX0    FPT_CLOSE+26

     1220     6742    3      IF FPT_CLOSE.V.DCB# = 0 THEN DO;

   6742  4 004702   004722 601000 4                  TNZ     s:6751

     1221     6743    3         FID = FCTX.FID;

   6743  4 004703   000000 100500                    MLR     fill='000'O
         4 004704   000037 000070                    ADSC9   31,,PR0                  cn=0,n=56
         4 004705   002374 000070 1                  ADSC9   FID                      cn=0,n=56

     1222     6744    3         CALL TESTOPEN

   6744  4 004706   003506 701000 4                  TSX1    TESTOPEN
         4 004707   004711 702000 4                  TSX2    s:6746
         4 004710   004717 710000 4                  TRA     s:6749

     1223     6745    4         WHENALTRETURN DO;

     1224     6746    4            IF REPLY.STAT ~= %NFSERR_NOENT THEN GOTO ALT;

   6746  4 004711   200007 470500                    LDP0    REPLY$,,AUTO
         4 004712   000000 235100                    LDA     0,,PR0
         4 004713   000002 115007                    CMPA    2,DL
         4 004714   005014 601000 4                  TNZ     ALT

     1225     6747    4            NO_ENT = %YES#;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:190  

   6747  4 004715   400000 236003                    LDQ     -131072,DU
         4 004716   200027 756100                    STQ     NO_ENT,,AUTO

     1226     6748    4            END;

     1227     6749    3         FPT_CLOSE.V.DCB# = DCBNUM( F$TEST);

   6749  4 004717   000000 236007 xsym               LDQ     F$TEST,DL
         4 004720   000000 620006                    EAX0    0,QL
         4 004721   000032 740000 1                  STX0    FPT_CLOSE+26

     1228     6750    3         END;

     1229     6751    2      IF NOT NO_ENT THEN

   6751  4 004722   200027 234100                    SZN     NO_ENT,,AUTO
         4 004723   004744 604000 4                  TMI     s:6760

     1230     6752    2         CALL M$REW( FPT_CLOSE)            /* open file if not                   */

   6752  4 004724   000000 630400 1                  EPPR0   FPT_CLOSE
         4 004725   440006 713400                    CLIMB   alt,+16390
         4 004726   400000 401760                    pmme    nvectors=1
         4 004727   004731 702000 4                  TSX2    s:6754
         4 004730   004744 710000 4                  TRA     s:6760

     1231     6753    3         WHENALTRETURN DO;

     1232     6754    3            IF B$TCB.ALT$->B$ALT.ERR.ERR# = %E$NOFILE

   6754  4 004731   000000 470400 xsym               LDP0    B$TCB$
         4 004732   000000 471500                    LDP1    0,,PR0
         4 004733   100102 236100                    LDQ     66,,PR1
         4 004734   377770 376007                    ANQ     131064,DL
         4 004735   001610 116007                    CMPQ    904,DL
         4 004736   004744 601000 4                  TNZ     s:6760
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:191  

     1233     6755    4            THEN DO;

     1234     6756    4               REPLY.STAT = %NFSERR_NOENT;

   6756  4 004737   000002 235007                    LDA     2,DL
         4 004740   200007 473500                    LDP3    REPLY$,,AUTO
         4 004741   300000 755100                    STA     0,,PR3

     1235     6757    4               NO_ENT = %YES#;

   6757  4 004742   400000 236003                    LDQ     -131072,DU
         4 004743   200027 756100                    STQ     NO_ENT,,AUTO

     1236     6758    4               END;

     1237     6759    3            END;

     1238     6760    2      IF NOT NO_ENT THEN

   6760  4 004744   200027 234100                    SZN     NO_ENT,,AUTO
         4 004745   004752 604000 4                  TMI     s:6762

     1239     6761    2         CALL M$CLOSE( FPT_CLOSE) ALTRET( ERR_ACCES);

   6761  4 004746   000000 630400 1                  EPPR0   FPT_CLOSE
         4 004747   450001 713400                    CLIMB   alt,close
         4 004750   406000 401760                    pmme    nvectors=13
         4 004751   005011 702000 4                  TSX2    ERR_ACCES

     1240     6762    2      CALL FUG$REMOVE_FCTX( FCTX);

   6762  4 004752   200011 630500                    EPPR0   FCTX$,,AUTO
         4 004753   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 004754   000000 701000 xent               TSX1    FUG$REMOVE_FCTX
         4 004755   000000 011000                    NOP     0

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:192  
     1241     6763
     1242     6764    2   REMOVE_RENAMES:
     1243     6765    2      F$ = FCTX$;                     /* remove any files renamed to this one    */

   6765  4 004756   200011 236100       REMOVE_RENA* LDQ     FCTX$,,AUTO
         4 004757   200004 756100                    STQ     F$,,AUTO

     1244     6766    2      FCTX$ = FU_FCTX$;

   6766  4 004760   000000 236000 xsym               LDQ     FU_FCTX$
         4 004761   200011 756100                    STQ     FCTX$,,AUTO

     1245     6767    3      DO WHILE (FCTX$ ~= ADDR(NIL));

   6767  4 004762   005003 710000 4                  TRA     s:6774

     1246     6768    3         IF FCTX.RENAMED AND FCTX.FID.NAME = F$->FCTX.FHANDLE

   6768  4 004763   200011 470500                    LDP0    FCTX$,,AUTO
         4 004764   000015 236100                    LDQ     13,,PR0
         4 004765   200000 316003                    CANQ    65536,DU
         4 004766   005001 600000 4                  TZE     s:6773
         4 004767   200004 471500                    LDP1    F$,,AUTO
         4 004770   000100 106500                    CMPC    fill='000'O
         4 004771   000045 000040                    ADSC9   37,,PR0                  cn=0,n=32
         4 004772   100002 000040                    ADSC9   2,,PR1                   cn=0,n=32
         4 004773   005001 601000 4                  TNZ     s:6773

     1247     6769    4         THEN DO;

     1248     6770    4            CALL FUG$REMOVE_FCTX( FCTX);

   6770  4 004774   200011 630500                    EPPR0   FCTX$,,AUTO
         4 004775   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 004776   000000 701000 xent               TSX1    FUG$REMOVE_FCTX
         4 004777   000000 011000                    NOP     0

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:193  
     1249     6771    4            GOTO REMOVE_RENAMES;

   6771  4 005000   004756 710000 4                  TRA     REMOVE_RENAMES

     1250     6772    4            END;
     1251     6773    3         FCTX$ = FCTX.LNK$;

   6773  4 005001   000000 236100                    LDQ     0,,PR0
         4 005002   200011 756100                    STQ     FCTX$,,AUTO

     1252     6774    3         END;

   6774  4 005003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 005004   004763 601000 4                  TNZ     s:6768

     1253     6775    2      IF NO_ENT THEN GOTO ALT;

   6775  4 005005   200027 234100                    SZN     NO_ENT,,AUTO
         4 005006   005014 604000 4                  TMI     ALT

     1254     6776    2      RETURN;

   6776  4 005007   200026 221300                    LDX1  ! LIST_ACCTS+2,,AUTO
         4 005010   000001 702211                    TSX2  ! 1,X1

     1255     6777
     1256     6778    2   ERR_ACCES: REPLY.STAT = %NFSERR_ACCES;

   6778  4 005011   000015 235007       ERR_ACCES    LDA     13,DL
         4 005012   200007 470500                    LDP0    REPLY$,,AUTO
         4 005013   000000 755100                    STA     0,,PR0

     1257     6779    2   ALT: ALTRETURN;

   6779  4 005014   200026 221300       ALT          LDX1  ! LIST_ACCTS+2,,AUTO
         4 005015   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:194  
     1258     6780
     1259     6781    2   END DELETE_FILE;
     1260     6782
     1261     6783        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:195  
     1262     6784        /*I*  NAME:    SETJIT
     1263     6785              Purpose: To set the JIT to the user access described in the :nfssec
     1264     6786                       file.  Used to restrict access to what it should be.
     1265     6787        */
     1266     6788    1   SETJIT: PROC;

   6788  4 005016   200032 741300       SETJIT       STX1  ! ACCESS+1,,AUTO

     1267     6789    2      B$JIT.ACCN = UCTX.USER.ACCN;

   6789  4 005017   200010 470500                    LDP0    UCTX$,,AUTO
         4 005020   000000 471400 xsym               LDP1    B$JIT$
         4 005021   040100 100500                    MLR     fill='040'O
         4 005022   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
         4 005023   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8

     1268     6790    2      B$JIT.UNAME = UCTX.USER.UNAME;

   6790  4 005024   040100 100500                    MLR     fill='040'O
         4 005025   000010 000014                    ADSC9   8,,PR0                   cn=0,n=12
         4 005026   100003 000014                    ADSC9   3,,PR1                   cn=0,n=12

     1269     6791    2      B$JIT.PRIV.ACTIVE = '0'B;

   6791  4 005027   100013 450100                    STZ     11,,PR1

     1270     6792    2      IF UCTX.USER.FMSEC THEN B$JIT.PRIV.ACTIVE.FMSEC = '1'B;

   6792  4 005030   000013 236100                    LDQ     11,,PR0
         4 005031   100000 316003                    CANQ    32768,DU
         4 005032   005035 600000 4                  TZE     s:6793

   6792  4 005033   100000 236003                    LDQ     32768,DU
         4 005034   100013 256100                    ORSQ    11,,PR1

     1271     6793    2      IF UCTX.USER.FMREAD THEN B$JIT.PRIV.ACTIVE.FMREAD = '1'B;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:196  
   6793  4 005035   000013 236100                    LDQ     11,,PR0
         4 005036   020000 316003                    CANQ    8192,DU
         4 005037   005042 600000 4                  TZE     s:6794

   6793  4 005040   020000 236003                    LDQ     8192,DU
         4 005041   100013 256100                    ORSQ    11,,PR1

     1272     6794    2      IF FID.ASN ~= %FILE# THEN B$JIT.PRIV.ACTIVE.FMDIAG = '1'B;

   6794  4 005042   002376 720000 1                  LXL0    FID+2
         4 005043   000001 100003                    CMPX0   1,DU
         4 005044   005047 600000 4                  TZE     s:6795

   6794  4 005045   040000 236003                    LDQ     16384,DU
         4 005046   100013 256100                    ORSQ    11,,PR1

     1273     6795    2      RETURN;

   6795  4 005047   200032 221300                    LDX1  ! ACCESS+1,,AUTO
         4 005050   000001 702211                    TSX2  ! 1,X1

     1274     6796
     1275     6797        /*I*  NAME:     UNSETJIT
     1276     6798              Purpose: Resets the JIT to contain the NFS access.
     1277     6799        */
     1278     6800    2   UNSETJIT: ENTRY;

   6800  4 005051   200032 741300       UNSETJIT     STX1  ! ACCESS+1,,AUTO

     1279     6801    2      B$JIT.ACCN = FU_MYACCN;

   6801  4 005052   000000 470400 xsym               LDP0    B$JIT$
         4 005053   040100 100400                    MLR     fill='040'O
         4 005054   000000 000010 xsym               ADSC9   FU_MYACCN                cn=0,n=8
         4 005055   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8

     1280     6802    2      B$JIT.UNAME = FU_MYUNAME;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:197  

   6802  4 005056   040100 100400                    MLR     fill='040'O
         4 005057   000000 000014 xsym               ADSC9   FU_MYUNAME               cn=0,n=12
         4 005060   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12

     1281     6803    2      B$JIT.PRIV.ACTIVE = %(PR_FMSEC# | PR_FMDIAG#);

   6803  4 005061   000235 236000 3                  LDQ     FID_INIT+26
         4 005062   000013 756100                    STQ     11,,PR0

     1282     6804
     1283     6805    2   END SETJIT;

   6805  4 005063   200032 221300                    LDX1  ! ACCESS+1,,AUTO
         4 005064   000001 702211                    TSX2  ! 1,X1

     1284     6806
     1285     6807        %EJECT;
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:198  
     1286     6808        /*I*  NAME:    TIMEVAL
     1287     6809              Purpose: Convert a UTS value into a UNIX timeval, which is two 32-bit
     1288     6810                       values: seconds since 1/1/70 and microsecs into that second.
     1289     6811              Inputs:  UTS - the CP-6 UTS value to be converted.
     1290     6812              Outputs: RESULT - the UNIX timeval in network (8-bit) form.
     1291     6813        */
     1292     6814    1   TIMEVAL: PROC( RESULT, UTS);

   6814  4 005065   200040 741300       TIMEVAL      STX1  ! MODTIME+3,,AUTO

     1293     6815
     1294     6816    2   DCL 1 RESULT ALIGNED,
     1295     6817    2         2 SECS UBIN,
     1296     6818    2         2 USECS UBIN;
     1297     6819    2   DCL UTS UBIN;
     1298     6820
     1299     6821        %INCLUDE XUD_UTS_M;
     1300     6903        %XUD_UTS_EQU;
     1301     6914        %EQU ZEROSECS=(8*365+2)*24*60*60;       /* difference between 1/1/70 - 1/1/78 */
     1302     6915
     1303     6916    2   DCL UTSS SBIN AUTO;
     1304     6917    2   DCL FU_TIMEZONESECS SBIN SYMREF;
     1305     6918
     1306     6919    3      IF UTS < %UTS_CUSP# THEN DO;

   6919  4 005066   200042 470500                    LDP0    @UTS,,AUTO
         4 005067   000000 236100                    LDQ     0,,PR0
         4 005070   000236 116000 3                  CMPQ    FID_INIT+27
         4 005071   005107 603000 4                  TRC     s:6924

     1307     6920    3         RESULT.USECS = 10000*MOD(UTS,100);

   6920  4 005072   000000 235100                    LDA     0,,PR0
         4 005073   000043 773000                    LRL     35
         4 005074   000144 507007                    DVF     100,DL
         4 005075   023420 402007                    MPY     10000,DL
         4 005076   200041 471500                    LDP1    @RESULT,,AUTO
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:199  
         4 005077   100001 756100                    STQ     1,,PR1

     1308     6921    3         RESULT.SECS = UTS/100+%ZEROSECS-FU_TIMEZONESECS;

   6921  4 005100   000000 236100                    LDQ     0,,PR0
         4 005101   000001 772000                    QRL     1
         4 005102   000062 506007                    DIV     50,DL
         4 005103   000000 136000 xsym               SBLQ    FU_TIMEZONESECS
         4 005104   000041 036000 5                  ADLQ    33
         4 005105   100000 756100                    STQ     0,,PR1

     1309     6922    3         END;

   6922  4 005106   005130 710000 4                  TRA     s:6928

     1310     6923    3      ELSE DO;

     1311     6924    3         UTSS = UTS-%UTS_CUSP#;

   6924  4 005107   000236 136000 3                  SBLQ    FID_INIT+27
         4 005110   200043 756100                    STQ     UTSS,,AUTO

     1312     6925    3         RESULT.USECS = 40000*MOD(UTSS,25);

   6925  4 005111   000031 506007                    DIV     25,DL
         4 005112   000044 733000                    LRS     36
         4 005113   116100 402007                    MPY     40000,DL
         4 005114   200041 471500                    LDP1    @RESULT,,AUTO
         4 005115   100001 756100                    STQ     1,,PR1

     1313     6926    3         RESULT.SECS = UTSS/25+%UTS_CUSP#/100+%ZEROSECS-FU_TIMEZONESECS;

   6926  4 005116   200043 236100                    LDQ     UTSS,,AUTO
         4 005117   000031 506007                    DIV     25,DL
         4 005120   200044 756100                    STQ     UTSS+1,,AUTO
         4 005121   000236 236000 3                  LDQ     FID_INIT+27
         4 005122   000001 772000                    QRL     1
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:200  
         4 005123   000062 506007                    DIV     50,DL
         4 005124   200044 036100                    ADLQ    UTSS+1,,AUTO
         4 005125   000000 136000 xsym               SBLQ    FU_TIMEZONESECS
         4 005126   000041 036000 5                  ADLQ    33
         4 005127   100000 756100                    STQ     0,,PR1

     1314     6927    3         END;

     1315     6928    2      CALL XSL$HTONL( RESULT.SECS, RESULT.SECS);

   6928  4 005130   200041 236100                    LDQ     @RESULT,,AUTO
         4 005131   200041 235100                    LDA     @RESULT,,AUTO
         4 005132   200044 757100                    STAQ    UTSS+1,,AUTO
         4 005133   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 005134   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 005135   000000 701000 xent               TSX1    XSL$HTONL
         4 005136   000000 011000                    NOP     0

     1316     6929    2      CALL XSL$HTONL( RESULT.USECS, RESULT.USECS);

   6929  4 005137   200041 236100                    LDQ     @RESULT,,AUTO
         4 005140   000001 036003                    ADLQ    1,DU
         4 005141   200045 756100                    STQ     UTSS+2,,AUTO
         4 005142   200044 756100                    STQ     UTSS+1,,AUTO
         4 005143   200044 630500                    EPPR0   UTSS+1,,AUTO
         4 005144   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 005145   000000 701000 xent               TSX1    XSL$HTONL
         4 005146   000000 011000                    NOP     0

     1317     6930    2      RETURN;

   6930  4 005147   200040 221300                    LDX1  ! MODTIME+3,,AUTO
         4 005150   000001 702211                    TSX2  ! 1,X1
     1318     6931    2   END TIMEVAL;
     1319     6932
     1320     6933    1   END FUN$NFS;

PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:201  
--  Include file information  --

   XUD_UTS_M.:TOOLE05  is referenced.
   XSL_SOCKET_M.:LIBRARY  is referenced.
   XSL_SOCKET_E.:LIBRARY  is referenced.
   XSL_PERR_C.:LIBRARY  is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   FM$FIT.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUN$NFS.
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:202  

 **** Variables and constants ****

  ****  Section 001  Data  FUN$NFS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    36-0-0/d STRC(1080)  r     1 CLOSE_RENAME             362-0-0/d STRC(360)   r     1 DELETE_ALL
  2374-0-0/w STRC(504)   r     1 FID                      374-0-0/w STRC(36864) r     1 FM$FIT
     0-0-0/d STRC(1080)  r     1 FPT_CLOSE               2532-0-0/d STRC(288)   r     1 FPT_GETDCB
  2440-0-0/d STRC(2088)  r     1 FPT_OPEN                 352-0-0/d STRC(288)   r     1 GET_PSN
   260-0-0/d STRC(2088)  r     1 OPEN_ACCT_FIT            166-0-0/d STRC(2088)  r     1 OPEN_NEXT_ACCT
    74-0-0/d STRC(2088)  r     1 OPEN_NEXT_FILE          2412-0-0/w STRC(756)   r     1 UFATTR

  ****  Section 003 RoData FUN$NFS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   203-0-0/w STRC(504)   r     1 FID_INIT                 100-0-0/b STRC(2304)  r     1 FU_BINSRCH
     0-0-0/c STRC(2304)  r     1 FU_XLATE                 200-0-0/c CHAR(12)    r     1 NULLZ
   200-0-0/c CHAR        r     1 NULLZ_INIT(0:11)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    33-0-0/w PTR         r     1 @FATTR                    33-0-0/w PTR         r     1 @FHANDLE
    41-0-0/w PTR         r     1 @RESULT                    3-0-0/w PTR         r     1 @RQSCTX
    27-0-0/w PTR         r     1 @SATTR                    42-0-0/w PTR         r     1 @UTS
    31-0-0/b BIT         r     1 ACCESS                    17-0-0/w SBIN        r     1 AT_COOKIE
     5-0-0/w PTR         r     1 BODY$                     16-0-0/w UBIN        r     1 CREATUTS
     6-0-0/w PTR         r     1 DIRRES$                   23-0-0/w UBIN        r     1 EOD
     4-0-0/w PTR         r     1 F$                        13-0-0/w PTR         r     1 F$TEST$
    *0-0-0/w STRC(612)   r     1 FATTR                     11-0-0/w PTR         r     1 FCTX$
    *0-0-0/w STRC(288)   r     1 FHANDLE                   27-0-0/w SBIN        r     1 FND_STAMP
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:203  
    21-0-0/w UBIN        r     1 FSID                      15-0-0/w UBIN        r     1 I
    30-0-0/w SBIN        r     1 LEN                       24-0-0/w SBIN        r     1 LIST_ACCTS
    12-0-0/w PTR         r     1 MAXDIRRES$                33-0-0/w UBIN        r     1 MINAGE
    34-0-0/w PTR         r     1 MINF$                     35-0-0/w STRC(72)    r     1 MODTIME
    34-0-0/w SBIN        r     1 NFSFIT                    27-0-0/b BIT         r     1 NO_ENT
     7-0-0/w PTR         r     1 REPLY$                    *0-0-0/w STRC(72)    r     1 RESULT
    *0-0-0/w STRC(74556) r     1 RQSCTX                    *0-0-0/w STRC(288)   r     1 SATTR
    14-0-0/w PTR         r     1 SAVE_FCTX$                20-0-0/w SBIN        r     1 START_COOKIE
    22-0-0/b BIT         r     1 TEXTMODE                  12-0-0/w PTR         r     1 TO$
    10-0-0/w PTR         r     1 UCTX$                     *0-0-0/w UBIN        r     1 UTS
    43-0-0/w SBIN        r     1 UTSS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$DS8                      0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 FU_CTXHD$
     0-0-0/w STRC(1656)  r     1 FU_FCTX                    0-0-0/w PTR         r     1 FU_FCTX$
     0-0-0/d STRC(432)   r     1 FU_FPT_TIME                0-0-0/c CHAR(8)     r     1 FU_MYACCN
     0-0-0/c CHAR(12)    r     1 FU_MYUNAME                 0-0-0/w SBIN        r     1 FU_NFSSOCKET
     0-0-0/w UBIN        r     1 FU_OPENLIM                 0-0-0/w UBIN        r     1 FU_PROC#
     0-0-0/w UBIN        r     1 FU_TIME                    0-0-0/w SBIN        r     1 FU_TIMEZONESECS
     0-0-0/w STRC(1296)  r     1 FU_UCTX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(648)   r     1 ATTRSTAT                   0-0-0/w STRC(2448)  r     1 B$ALT
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(324)   r     1 CODE03                     0-0-0/w STRC(396)   r     1 CODE04
     0-0-0/w STRC(720)   r     1 CODE13                     0-0-0/w STRC(288)   r     1 CODE14
     0-0-0/w STRC(288)   r     1 CODE14                     0-0-0/w ASTR(324)   r     1 DIROP
     0-0-0/w STRC(936)   r     1 DIROPRES                   0-0-0/w STRC(4716)  r     1 DS
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:204  
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 F$TEST
     0-0-0/w STRC(1656)  r     1 FCTX                       0-0-0/w STRC(288)   r     1 FHANDLE
     0-0-0/w ASTR(900)   r     1 HCTX                       0-0-0/w STRC(288)   r     1 NO_STAMP
     0-0-0/w STRC(360)   r     1 READDIR                    0-0-0/w ASTR(144)   r     1 READDIRRES
     0-0-0/w STRC        r     1 REPLY                      0-0-0/w STRC(216)   r     1 STATFS
     0-0-0/w STRC(1296)  r     1 UCTX                       0-0-0/w ASTR(432)   r     1 WRITEARGS


   Procedure FUN$NFS requires 2665 words for executable code.
   Procedure FUN$NFS requires 44 words of local(AUTO) storage.

    No errors detected in file FUN$NFS.:FUA2TSI    .
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:205  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:206  
          MINI XREF LISTING

ACCESS IN PROCEDURE CHECK_READ
      6635**DCL      6637<<ASSIGN   6639<<ASSIGN   6641<<ASSIGN   6643<<ASSIGN   6644<<ASSIGN   6655<<ASSIGN
      6657<<ASSIGN   6659<<ASSIGN   6661<<ASSIGN   6662<<ASSIGN   6673<<ASSIGN   6676<<ASSIGN   6679>>IF
ALMOST_THE_TOP IN PROCEDURE TESTOPEN
      6351**LABEL    6412--GOTO     6424--GOTO
ALT IN PROCEDURE DELETE_FILE
      6779**LABEL    6746--GOTO     6775--GOTO
ALT IN PROCEDURE FINDUCTX
      6052**LABEL    6034--CALLALT  6041--GOTO
ATTRSTAT
      4794**DCL      5494--ASSIGN   5834--ASSIGN
ATTRSTAT.FATTR
      4816**DCL      5496<<ASSIGN   5832<<ASSIGN
ATTRSTAT.FATTR.XATTR
      4818**DCL      5497<<ASSIGN   5833<<ASSIGN
ATTRSTAT.STAT
      4799**DCL      5495<<ASSIGN   5831<<ASSIGN
AT_COOKIE
      5371**DCL      5618<<ASSIGN   5622<<ASSIGN   5634>>IF       5655>>IF       5667<<ASSIGN   5667>>ASSIGN
      5668<>CALL     5675>>IF       5677>>ASSIGN
B$ALT.CODE
       403**DCL       403--REDEF     404--REDEF     404--REDEF
B$ALT.ERR.ERR#
       405**DCL       405--REDEF    5644>>IF       5648>>IF       6358>>DOSELCT  6754>>IF
B$ALT.EVID
       404**DCL       404--REDEF     404--REDEF
B$DS8
      5298**DCL      5282--IMP-PTR  5484>>ASSIGN   5484>>ASSIGN   5747>>ASSIGN   5747>>ASSIGN   5838>>CALL
      6064>>ASSIGN   6064>>ASSIGN   6083>>ASSIGN   6083>>ASSIGN   6387>>ASSIGN   6387>>ASSIGN
B$JIT.ACCN
        39**DCL      6789<<ASSIGN   6801<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:207  
       133**DCL       133--REDEF
B$JIT.ERR.MID
        40**DCL        40--REDEF
B$JIT.JRESPEAK
       201**DCL       202--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       310**DCL       310--REDEF     311--REDEF
B$JIT.PNR
       214**DCL       214--REDEF
B$JIT.PRIV.ACTIVE
        40**DCL      6444<<ASSIGN   6791<<ASSIGN   6803<<ASSIGN
B$JIT.PRIV.ACTIVE.FMDIAG
        41**DCL      6794<<ASSIGN
B$JIT.PRIV.ACTIVE.FMREAD
        41**DCL      6793<<ASSIGN
B$JIT.PRIV.ACTIVE.FMSEC
        41**DCL      6792<<ASSIGN
B$JIT.TSLINE
       308**DCL       309--REDEF
B$JIT.UNAME
        39**DCL      6790<<ASSIGN   6802<<ASSIGN
B$JIT$
       315**DCL        34--IMP-PTR  6444>>ASSIGN   6789>>ASSIGN   6790>>ASSIGN   6791>>ASSIGN   6792>>ASSIGN
      6793>>ASSIGN   6794>>ASSIGN   6801>>ASSIGN   6802>>ASSIGN   6803>>ASSIGN
B$TCB.ALT$
       399**DCL      5644>>IF       5648>>IF       6358>>DOSELCT  6754>>IF
B$TCB$
       397**DCL       399--IMP-PTR  5644>>IF       5648>>IF       6358>>DOSELCT  6754>>IF
BAD2
      5895**LABEL    5485--CALLALT  5575--GOTO     5689--CALLALT  5690--CALLALT  5702--CALLALT  5717--GOTO
      5730--CALLALT  5775--CALLALT  5780--GOTO     5788--GOTO     5789--CALLALT  5801--GOTO     5825--CALLALT
      5849--CALLALT  5859--CALLALT  5890--GOTO     5891--GOTO     5892--GOTO     5893--GOTO     5894--GOTO
      5919--CALLALT
BAD_ARG
      5490**LABEL    5505--GOTO     5600--GOTO     5686--GOTO     5698--GOTO
BODY$
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:208  
      5360**DCL      4948--IMP-PTR  4990--IMP-PTR  5017--IMP-PTR  5059--IMP-PTR  5481<<ASSIGN   5505>>IF
      5506>>IF       5506>>IF       5507>>IF       5507>>IF       5507>>IF       5507>>IF       5535>>ASSIGN
      5536>>CALLBLT  5536>>CALLBLT  5557>>IF       5558>>ASSIGN   5559>>CALLBLT  5559>>CALLBLT  5560>>ASSIGN
      5564>>IF       5565>>ASSIGN   5566>>CALLBLT  5566>>CALLBLT  5567>>ASSIGN   5579<<ASSIGN   5601>>CALL
      5604>>CALL     5686>>IF       5686>>IF       5697>>ASSIGN   5697>>ASSIGN   5697>>ASSIGN   5698>>IF
      5698>>IF       5699>>IF       5711<<ASSIGN   5719<<ASSIGN   5776>>CALL     5776>>CALL     5776>>CALL
      5776>>CALL     5776>>CALL     5776>>CALL     5790>>CALL     5792>>ASSIGN   5798>>CALL     5798>>CALL
      5798>>CALL     5798>>CALL     5798>>CALL     5798>>CALL     5803>>ASSIGN   5816>>CALL     5816>>CALL
      5863>>ASSIGN   5865>>CALLBLT  5865>>CALLBLT  5870>>IF       5916<<ASSIGN   6003>>IF       6006>>ASSIGN
      6015>>IF       6015>>IF       6016>>ASSIGN   6020>>IF       6022>>ASSIGN   6022>>ASSIGN   6027>>ASSIGN
      6027>>ASSIGN   6028>>ASSIGN   6028>>ASSIGN   6028>>ASSIGN   6029>>ASSIGN   6029>>ASSIGN   6029>>ASSIGN
      6035>>IF       6037>>IF       6049>>ASSIGN   6050>>IF       6059>>ASSIGN   6065>>CALL     6132>>IF
      6136>>IF       6136>>IF       6138>>ASSIGN   6139>>ASSIGN   6144>>ASSIGN   6144>>ASSIGN   6145>>IF
      6150>>CALLBLT  6150>>CALLBLT  6150>>CALLBLT  6150>>CALLBLT  6155>>IF       6158>>ASSIGN   6177>>IF
      6177>>IF       6177>>IF       6182>>ASSIGN
CHANGEORG IN PROCEDURE TESTOPEN
      6431**ENTRY    5879--CALL
CHECK_OWNER IN PROCEDURE CHECK_READ
      6671**ENTRY    5704--CALL     5814--CALL     6736--CALL
CHECK_READ
      6633**PROC     5848--CALL
CHECK_WRITE IN PROCEDURE CHECK_READ
      6653**ENTRY    5706--CALL     5770--CALL     5858--CALL     6738--CALL
CLOSE_RENAME
       531**DCL      5733<>CALL     5737<>CALL     5746<>CALL
CLOSE_RENAME.PROCATTR_
       535**DCL      5695<<ASSIGN   5727<<ASSIGN
CLOSE_RENAME.SN_
       531**DCL       531--REDEF
CLOSE_RENAME.UTL_
       532**DCL       532--REDEF
CLOSE_RENAME.V
       536**DCL       531--DCLINIT
CLOSE_RENAME.V.DCB#
       537**DCL      5728<<ASSIGN   5729>>IF       5731<<ASSIGN
CLOSE_RENAME.V.EXPIRE#
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:209  
       546**DCL       546--REDEF
CLOSE_RENAME.V.TYPE#
       544**DCL       544--REDEF
CLOSE_RENAME.V.XTNSIZE#
       541**DCL       541--REDEF     543--REDEF
CODE03
      5300**DCL      6558<>CALL
CODE03.NRECS
      5302**DCL      6556>>IF       6561>>ASSIGN   6563>>ASSIGN   6564>>ASSIGN
CODE03.ORG
      5300**DCL      6546>>IF       6549>>IF       6549>>IF       6560>>IF       6560>>IF
CODE03.TYPE
      5302**DCL      6546>>IF
CODE03.UGRANS
      5300**DCL      6544>>ASSIGN   6561>>ASSIGN   6564>>ASSIGN
CODE04.ACCESS.TIME
      5311**DCL      6523<>CALL
CODE04.CREATION.TIME
      5311**DCL      5662>>CALL     6048<>CALL     6521<>CALL     6524>>CALL
CODE04.MODIFY.TIME
      5311**DCL      6522<>CALL
CODE13.FATTR
      5343**DCL      6537>>ASSIGN
CODE13.FATTR.ATIME
      5353**DCL      6534<<ASSIGN
CODE13.FATTR.TYPE
      5345**DCL      6530>>IF
CODE13.ID
      5325**DCL      6530>>IF
CODE13.MODTIME
      5326**DCL      6532<>CALL
CODE14.CGRANS
      5322**DCL      6575>>ASSIGN
CODE14.CGRANS IN PROCEDURE TESTOPEN
      6345**DCL      6372<<ASSIGN
COMMON IN PROCEDURE CHECK_READ
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:210  
      6679**LABEL    6645--GOTO     6663--GOTO
CREATCLNUP IN PROCEDURE TESTOPEN
      6462**ENTRY    5784--CALL     5880--CALL
CREATOPN IN PROCEDURE TESTOPEN
      6450**ENTRY    5784--CALL
CREATUTS
      5370**DCL      5572<<ASSIGN   5578>>IF       5590>>ASSIGN   5792>>ASSIGN   6033<<ASSIGN   6035>>IF
      6048<>CALL     6049>>ASSIGN   6050>>IF       6373<<ASSIGN   6524<>CALL     6582>>ASSIGN
DELETE_ALL
       927**DCL      5807<>CALL
DELETE_ALL.V
       930**DCL       927--DCLINIT
DELETE_ALL.V.DCB#
       931**DCL      5806<<ASSIGN
DELETE_FILE
      6730**PROC     5690--CALL     5713--CALL
DIROP
      4948**DCL      5686--IF       5697--ASSIGN   5698--IF       5698--IF       5776--CALL     5776--CALL
      5776--CALL     5776--CALL     5776<>CALL     5798--CALL     5798--CALL     5798--CALL     5798--CALL
      5798<>CALL
DIROP.DIR
      4969**DCL      5699>>IF       5699>>IF       5742>>ASSIGN   5753>>IF       5790<>CALL     5803>>ASSIGN
DIROP.DIR.ACCTLNG
      4972**DCL      5739>>ASSIGN   6144>>ASSIGN
DIROP.DIR.PSNLNG
      4971**DCL      5739>>ASSIGN   6132>>IF       6136>>IF       6139<<ASSIGN   6144>>ASSIGN
DIROP.DIR.STAMP
      4971**DCL      5741<<ASSIGN   5792<<ASSIGN
DIROP.DIR.TEXT
      4972**DCL      5740<<ASSIGN   6136>>IF       6138<<ASSIGN   6150<<CALLBLT
DIROP.NAME
      4974**DCL      5816<>CALL
DIROP.NAME.L
      4974**DCL      4974--IMP-SIZ  5505>>IF       5506>>IF       5507>>IF       5507>>IF       5535>>ASSIGN
      5536>>CALLBLT  5557>>IF       5558>>ASSIGN   5559>>CALLBLT  5560>>ASSIGN   5564>>IF       5565>>ASSIGN
      5566>>CALLBLT  5567>>ASSIGN   5686>>IF       5697>>ASSIGN   5698>>IF       5698>>IF       5734>>ASSIGN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:211  
      5735>>CALLBLT  5776>>CALL     5776>>CALL     5776>>CALL     5798>>CALL     5798>>CALL     5798>>CALL
      5816>>CALL     6145>>IF       6150>>CALLBLT  6150>>CALLBLT
DIROP.NAME.T
      4974**DCL      5506>>IF       5507>>IF       5507>>IF       5536>>CALLBLT  5559>>CALLBLT  5566>>CALLBLT
      5735>>CALLBLT  6150>>CALLBLT
DIROPRES
      4845**DCL      5594--ASSIGN   5809--ASSIGN   5923--ASSIGN
DIROPRES.FATTR
      4888**DCL      5583<<ASSIGN   5589<>CALL     5804<<ASSIGN
DIROPRES.FATTR.XATTR
      4890**DCL      5593<<ASSIGN   5805<<ASSIGN
DIROPRES.FILE
      4867**DCL      5503<<ASSIGN   5579--ASSIGN   5588<>CALL     5803<<ASSIGN   5916--ASSIGN
DIROPRES.FILE.ACCTLNG
      4870**DCL      5510>>IF       5512>>ASSIGN   5513<<ASSIGN   5534>>IF       5543>>ASSIGN   5550>>ASSIGN
      5558<<ASSIGN
DIROPRES.FILE.PSNLNG
      4869**DCL      5512>>ASSIGN   5514>>IF       5519>>IF       5522>>ASSIGN   5525<<ASSIGN   5528>>IF
      5543>>ASSIGN   5544<<ASSIGN   5548>>ASSIGN   5550>>ASSIGN   5555>>IF       5560>>ASSIGN   5565<<ASSIGN
DIROPRES.FILE.STAMP
      4869**DCL      5517<<ASSIGN   5524<<ASSIGN   5555>>IF       5590<<ASSIGN   5920<<ASSIGN
DIROPRES.FILE.TEXT
      4870**DCL      5512<<ASSIGN   5522<<ASSIGN   5543<<ASSIGN   5543>>ASSIGN   5548>>ASSIGN   5553<<ASSIGN
      5560<<ASSIGN   5567<<ASSIGN
DIROPRES.STAT
      4849**DCL      5592<<ASSIGN   5771<<ASSIGN   5780>>IF       5781<<ASSIGN   5788>>IF       5801>>IF
      5922<<ASSIGN
DIRRES$
      5361**DCL      4903--IMP-PTR  5603<<ASSIGN   5619>>IF       5629>>DOWHILE  5635>>ASSIGN   5636>>CALLBLT
      5636>>CALLBLT  5656>>CALLBLT  5657>>CALLBLT  5657>>CALLBLT  5662>>CALL     5664>>ASSIGN   5665<<ASSIGN
      5665>>ASSIGN   5665>>ASSIGN   5665>>ASSIGN   5668>>CALL     5673>>ASSIGN   5674>>ASSIGN   5682>>ASSIGN
DS.FCNT
      5287**DCL      6064<<ASSIGN   6064>>ASSIGN
DS.NFSRQS
      5290**DCL      5484<<ASSIGN   5484>>ASSIGN
DS.P.FCNT
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:212  
      5293**DCL      5747<<ASSIGN   5747>>ASSIGN   6387<<ASSIGN   6387>>ASSIGN
DS.TRANSIZE
      5290**DCL      5838<>CALL
DS.UCNT
      5288**DCL      6083<<ASSIGN   6083>>ASSIGN
EOD
      5375**DCL      5599<<ASSIGN   5670<<ASSIGN   5674>>ASSIGN
EODIR
      5670**LABEL    5613--GOTO     5614--GOTO     5632--CALLALT  5648--GOTO
ERR_ACCES
      5890**LABEL    5509--GOTO     5521--GOTO     5688--GOTO     5701--GOTO     5706--CALLALT  5737--CALLALT
      5762--GOTO     5768--GOTO     5770--CALLALT  5787--CALLALT  5808--CALLALT  5847--GOTO     5848--CALLALT
      5857--GOTO     5858--CALLALT
ERR_ACCES IN PROCEDURE DELETE_FILE
      6778**LABEL    6735--GOTO     6738--CALLALT  6761--CALLALT
ERR_ISDIR
      5894**LABEL    5812--GOTO     5846--GOTO     5856--GOTO
ERR_NOTDIR
      5893**LABEL    5504--GOTO     5527--GOTO     5597--GOTO     5761--GOTO
ERR_PERM
      5891**LABEL    5703--GOTO     5769--GOTO     5813--GOTO     5814--CALLALT
ERR_TOOLONG
      5892**LABEL    5552--GOTO     5557--GOTO     5564--GOTO
F$
      5358**DCL      5300--IMP-PTR  5309--IMP-PTR  5317--IMP-PTR  5324--IMP-PTR  5659<<ASSIGN   5660<>CALL
      5662>>CALL     5708<<ASSIGN   5710>>ASSIGN   5752<<ASSIGN   5754>>ASSIGN   6045<<ASSIGN   6046<>CALL
      6048>>CALL     6392<<ASSIGN   6393>>DOWHILE  6394>>IF       6394>>IF       6394>>IF       6398>>ASSIGN
      6399>>ASSIGN   6401<<ASSIGN   6401>>ASSIGN   6518<<ASSIGN   6519<>CALL     6521>>CALL     6522>>CALL
      6523>>CALL     6524>>CALL     6527<<ASSIGN   6528<>CALL     6530>>IF       6530>>IF       6532>>CALL
      6534>>ASSIGN   6537>>ASSIGN   6540<<ASSIGN   6541<>CALL     6544>>ASSIGN   6546>>IF       6546>>IF
      6549>>IF       6549>>IF       6556>>IF       6558>>CALL     6560>>IF       6560>>IF       6561>>ASSIGN
      6561>>ASSIGN   6563>>ASSIGN   6564>>ASSIGN   6564>>ASSIGN   6570<<ASSIGN   6571<>CALL     6575>>ASSIGN
      6765<<ASSIGN   6768>>IF
F$DCB.ACCT#
       426**DCL      5645>>ASSIGN   5651>>ASSIGN
F$DCB.ACTPOS
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:213  
       442**DCL       442--REDEF
F$DCB.ARS#
       416**DCL       416--REDEF
F$DCB.ATTR
       435**DCL       436--REDEF
F$DCB.BORROW
       450**DCL       450--REDEF     450--REDEF     450--REDEF
F$DCB.DCBNAME.L
       464**DCL       464--IMP-SIZ
F$DCB.EOMCHAR#
       420**DCL       420--REDEF
F$DCB.FCD#
       429**DCL      6394>>IF
F$DCB.FFLG
       421**DCL      6101>>ASSIGN   6359>>IF
F$DCB.FLDID
       445**DCL       445--REDEF
F$DCB.FORM$
       439**DCL       439--REDEF
F$DCB.FSECT
       455**DCL       455--REDEF
F$DCB.FSN#
       432**DCL       432--REDEF     432--REDEF     433--REDEF
F$DCB.HEADER$
       438**DCL       438--REDEF
F$DCB.IXTNSIZE#
       436**DCL       436--REDEF
F$DCB.LASTSTA$
       425**DCL       425--REDEF
F$DCB.LVL
       451**DCL       451--REDEF
F$DCB.NAME#
       426**DCL      5633>>ASSIGN
F$DCB.NAME#.C
       426**DCL       426--REDEF
F$DCB.NOEOF
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:214  
       448**DCL       448--REDEF
F$DCB.NRECS#
       437**DCL       437--REDEF
F$DCB.NRECX
       456**DCL       456--REDEF
F$DCB.OHDR
       448**DCL       448--REDEF
F$DCB.ORG#
       431**DCL       431--REDEF
F$DCB.PRECNO
       454**DCL       454--REDEF
F$DCB.RCSZ
       460**DCL       460--REDEF
F$DCB.RES#
       427**DCL       427--REDEF
F$DCB.SETX
       439**DCL       439--REDEF
F$DCB.TAB$
       439**DCL       439--REDEF
F$DCB.TDA
       453**DCL       454--REDEF
F$DCB.WSN#
       427**DCL       427--REDEF
F$TEST
      4590**DCL      5598--ASSIGN   5731>>ASSIGN   5763>>ASSIGN   5826>>ASSIGN   6101--ASSIGN   6351>>ASSIGN
      6376>>IF       6422>>ASSIGN   6455>>ASSIGN   6749>>ASSIGN
F$TEST$
      5367**DCL      5598<<ASSIGN   5633>>ASSIGN   5645>>ASSIGN   5651>>ASSIGN
FATTR IN PROCEDURE MAKEFATTR
      6494**DCL      6478--PROC     6514<<ASSIGN   6537<<ASSIGN
FATTR.ATIME IN PROCEDURE MAKEFATTR
      6506**DCL      6523<>CALL     6534>>ASSIGN
FATTR.ATIME.SECONDS IN PROCEDURE MAKEFATTR
      6506**DCL      6533>>IF
FATTR.BLOCKS IN PROCEDURE MAKEFATTR
      6505**DCL      6544<<ASSIGN   6545<>CALL     6545<>CALL
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:215  
FATTR.BLOCKSIZE IN PROCEDURE MAKEFATTR
      6504**DCL      6580<>CALL
FATTR.CTIME IN PROCEDURE MAKEFATTR
      6507**DCL      6521<>CALL
FATTR.FILEID IN PROCEDURE MAKEFATTR
      6506**DCL      6582<<ASSIGN
FATTR.FSID IN PROCEDURE MAKEFATTR
      6505**DCL      6581<<ASSIGN
FATTR.MODE IN PROCEDURE MAKEFATTR
      6499**DCL      6552<<ASSIGN   6553<<ASSIGN   6574<<ASSIGN
FATTR.MTIME IN PROCEDURE MAKEFATTR
      6506**DCL      6522<>CALL
FATTR.MTIME.SECONDS IN PROCEDURE MAKEFATTR
      6507**DCL      6535>>IF
FATTR.NLINK IN PROCEDURE MAKEFATTR
      6503**DCL      6579<<ASSIGN
FATTR.SIZE IN PROCEDURE MAKEFATTR
      6504**DCL      6557<<ASSIGN   6558<>CALL     6561<<ASSIGN   6563<<ASSIGN   6564<<ASSIGN   6566<>CALL
      6566<>CALL     6575<<ASSIGN   6576<>CALL     6576<>CALL
FATTR.TYPE IN PROCEDURE MAKEFATTR
      6498**DCL      6543<<ASSIGN   6573<<ASSIGN
FATTR.XATTR.TEXTMODE IN PROCEDURE MAKEFATTR
      6498**DCL      6515<<ASSIGN   6547<<ASSIGN   6549>>IF       6562>>IF
FCTX
      5156**DCL      5753<>CALL     6058<<ASSIGN   6762<>CALL     6770<>CALL
FCTX.AGE
      5183**DCL      5939>>IF       6111<<ASSIGN   6394>>IF       6398>>ASSIGN
FCTX.CHUNK
      5185**DCL      6420<<ASSIGN
FCTX.CRECNO
      5183**DCL      6419<<ASSIGN
FCTX.DCB#
      5183**DCL      5728>>ASSIGN   5744>>IF       5745<<ASSIGN   5773>>IF       5774>>ASSIGN   5822>>ASSIGN
      5849>>IF       5859>>IF       5874>>ASSIGN   5939>>IF       5946>>ASSIGN   5967>>IF       5968>>ASSIGN
      5969<<ASSIGN   6386<<ASSIGN   6394>>IF       6394--IF       6408<<ASSIGN   6408>>ASSIGN   6409<<ASSIGN
      6421>>IF       6423>>ASSIGN   6454>>IF       6456>>ASSIGN   6741>>ASSIGN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:216  
FCTX.FATTR
      5202**DCL      5496>>ASSIGN   5583>>ASSIGN   5724>>ASSIGN   5777>>ASSIGN   5797--ASSIGN   5818>>ASSIGN
      5832>>ASSIGN   5944>>ASSIGN   5973>>ASSIGN   6066<>CALL
FCTX.FATTR.ATIME
      5212**DCL      5723<<ASSIGN   5851<>CALL     5885<<ASSIGN   5942<>CALL     5972<>CALL     6623<<ASSIGN
FCTX.FATTR.FSID
      5211**DCL      5587>>ASSIGN
FCTX.FATTR.GID
      5210**DCL      6621<<ASSIGN   6642>>IF       6660>>IF       6674>>IF
FCTX.FATTR.MODE
      5205**DCL      6619<<ASSIGN
FCTX.FATTR.MODE.EREAD
      5209**DCL      6644>>ASSIGN
FCTX.FATTR.MODE.EWRITE
      5209**DCL      6662>>ASSIGN
FCTX.FATTR.MODE.GREAD
      5208**DCL      6643>>ASSIGN
FCTX.FATTR.MODE.GWRITE
      5208**DCL      6661>>ASSIGN
FCTX.FATTR.MODE.OREAD
      5207**DCL      6641>>ASSIGN
FCTX.FATTR.MODE.OWRITE
      5207**DCL      6105>>IF       6659>>ASSIGN
FCTX.FATTR.MTIME
      5212**DCL      5722<>CALL     5723>>ASSIGN   5815<>CALL     5884<>CALL     5885>>ASSIGN   6624<<ASSIGN
FCTX.FATTR.SIZE
      5210**DCL      5807>>IF       5850>>ASSIGN   5853>>IF       5860>>IF       6622<<ASSIGN
FCTX.FATTR.TYPE
      5204**DCL      5504>>IF       5597>>IF       5761>>IF       5812>>IF       5846>>IF       5856>>IF
FCTX.FATTR.UID
      5210**DCL      6620<<ASSIGN   6640>>IF       6658>>IF       6674>>IF
FCTX.FATTR.XATTR.TEXTMODE
      5204**DCL      5871>>IF       6442<<ASSIGN
FCTX.FATTR.XATTR.UFIT
      5204**DCL      5726>>IF       5860>>IF       5940>>ASSIGN   5970>>ASSIGN   6103>>IF
FCTX.FHANDLE
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:217  
      5178**DCL      5503>>ASSIGN   5753>>IF       6003>>IF       6059<<ASSIGN   6155--IF       6177--IF
      6768>>IF
FCTX.FHANDLE.ACCTLNG
      5181**DCL      5587>>IF       5607>>IF       5687>>IF       5699>>IF       5762>>IF
FCTX.FHANDLE.PSNLNG
      5180**DCL      5537>>IF       5541>>IF       5546>>ASSIGN   5609>>IF
FCTX.FHANDLE.STAMP
      5180**DCL      5611>>IF       5741>>ASSIGN   5920>>ASSIGN   6158>>ASSIGN   6177>>IF       6182>>ASSIGN
FCTX.FHANDLE.TEXT
      5181**DCL      5541>>IF       5546>>ASSIGN   5551--IF       6145--IF
FCTX.FID
      5232**DCL      5501>>ASSIGN   5606>>ASSIGN   5721>>ASSIGN   5772>>ASSIGN   5820>>ASSIGN   5873>>ASSIGN
      5943>>ASSIGN   5971>>ASSIGN   6061<<ASSIGN   6098>>ASSIGN   6411>>ASSIGN   6743>>ASSIGN
FCTX.FID.ASN
      5234**DCL      5235--REDEF    5687>>IF       5699>>IF
FCTX.FID.NAME
      5237**DCL      5742<<ASSIGN   6006>>ASSIGN   6768>>IF
FCTX.FID.NAME.L
      5237**DCL      5687>>IF       5699>>IF
FCTX.FITMOD
      5184**DCL      5726>>IF       5738<<ASSIGN   5817<<ASSIGN   5853<<ASSIGN   5886<<ASSIGN   5940>>ASSIGN
      5941<<ASSIGN   5970>>ASSIGN
FCTX.FOFFSET
      5243**DCL      5243--REDEF
FCTX.LNK$
      5160**DCL      5752>>ASSIGN   5950>>ASSIGN   6009>>ASSIGN   6057>>ASSIGN   6062<<ASSIGN   6161>>ASSIGN
      6185>>ASSIGN   6401>>ASSIGN   6773>>ASSIGN
FCTX.PROC#
      5183**DCL      5939>>IF
FCTX.RENAMED
      5184**DCL      5743<<ASSIGN   6004>>IF       6155>>IF       6177>>IF       6768>>IF
FCTX.UCTX$
      5160**DCL      6060<<ASSIGN   6072>>ASSIGN   6096>>ASSIGN   6097<<ASSIGN
FCTX$
      5364**DCL      5156--IMP-PTR  5496>>ASSIGN   5501>>ASSIGN   5503>>ASSIGN   5504>>IF       5537>>IF
      5541>>IF       5541>>IF       5546>>ASSIGN   5546>>ASSIGN   5583>>ASSIGN   5586<<ASSIGN   5587>>IF
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:218  
      5587>>ASSIGN   5597>>IF       5606>>ASSIGN   5607>>IF       5609>>IF       5611>>IF       5687>>IF
      5687>>IF       5687>>IF       5696>>ASSIGN   5699>>IF       5699>>IF       5699>>IF       5708>>ASSIGN
      5709<<ASSIGN   5720<<ASSIGN   5721>>ASSIGN   5722>>CALL     5723>>ASSIGN   5723>>ASSIGN   5724>>ASSIGN
      5726>>IF       5726>>IF       5728>>ASSIGN   5738>>ASSIGN   5741>>ASSIGN   5742>>ASSIGN   5743>>ASSIGN
      5744>>IF       5745>>ASSIGN   5750<<ASSIGN   5751>>DOWHILE  5752>>ASSIGN   5753>>IF       5753>>CALL
      5754<<ASSIGN   5761>>IF       5762>>IF       5766>>ASSIGN   5772>>ASSIGN   5773>>IF       5774>>ASSIGN
      5777>>ASSIGN   5782<<ASSIGN   5797<<ASSIGN   5797>>ASSIGN   5797>>ASSIGN   5807>>IF       5812>>IF
      5815>>CALL     5817>>ASSIGN   5818>>ASSIGN   5820>>ASSIGN   5822>>ASSIGN   5832>>ASSIGN   5846>>IF
      5849>>IF       5850>>ASSIGN   5851>>CALL     5853>>IF       5853>>ASSIGN   5856>>IF       5859>>IF
      5860>>IF       5860>>IF       5871>>IF       5873>>ASSIGN   5874>>ASSIGN   5884>>CALL     5885>>ASSIGN
      5885>>ASSIGN   5886>>ASSIGN   5920>>ASSIGN   5936<<ASSIGN   5938>>DOWHILE  5939>>IF       5939>>IF
      5939>>IF       5940>>ASSIGN   5940>>ASSIGN   5941>>ASSIGN   5942>>CALL     5943>>ASSIGN   5944>>ASSIGN
      5946>>ASSIGN   5950<<ASSIGN   5950>>ASSIGN   5966<<ASSIGN   5967>>IF       5968>>ASSIGN   5969>>ASSIGN
      5970>>ASSIGN   5970>>ASSIGN   5971>>ASSIGN   5972>>CALL     5973>>ASSIGN   6001<<ASSIGN   6002>>DOWHILE
      6003>>IF       6004>>IF       6006>>ASSIGN   6007<<ASSIGN   6009<<ASSIGN   6009>>ASSIGN   6013>>IF
      6056<<ASSIGN   6057>>ASSIGN   6058>>ASSIGN   6059>>ASSIGN   6060>>ASSIGN   6061>>ASSIGN   6062>>ASSIGN
      6063>>ASSIGN   6066>>CALL     6070>>IF       6072>>ASSIGN   6095>>ASSIGN   6096>>ASSIGN   6097>>ASSIGN
      6098>>ASSIGN   6103>>IF       6105>>IF       6111>>ASSIGN   6153<<ASSIGN   6154>>DOWHILE  6155>>IF
      6155>>IF       6158>>ASSIGN   6161<<ASSIGN   6161>>ASSIGN   6175<<ASSIGN   6176>>DOWHILE  6177>>IF
      6177>>IF       6177>>IF       6182>>ASSIGN   6185<<ASSIGN   6185>>ASSIGN   6198<<ASSIGN   6386>>ASSIGN
      6408>>ASSIGN   6411>>ASSIGN   6419>>ASSIGN   6420>>ASSIGN   6421>>IF       6423>>ASSIGN   6442>>ASSIGN
      6454>>IF       6454>>IF       6456>>ASSIGN   6619>>ASSIGN   6620>>ASSIGN   6621>>ASSIGN   6622>>ASSIGN
      6623>>ASSIGN   6624>>ASSIGN   6640>>IF       6641>>ASSIGN   6642>>IF       6643>>ASSIGN   6644>>ASSIGN
      6658>>IF       6659>>ASSIGN   6660>>IF       6661>>ASSIGN   6662>>ASSIGN   6674>>IF       6674>>IF
      6741>>ASSIGN   6743>>ASSIGN   6762>>CALL     6765>>ASSIGN   6766<<ASSIGN   6767>>DOWHILE  6768>>IF
      6768>>IF       6770>>CALL     6773<<ASSIGN   6773>>ASSIGN
FHANDLE
      4990**DCL      5489--IF       5999--IF       6003>>IF       6006<<ASSIGN   6059>>ASSIGN   6065<>CALL
FHANDLE.ACCTLNG
      4995**DCL      6015>>IF       6020>>IF       6028>>ASSIGN   6029>>ASSIGN   6035>>IF
FHANDLE.PSNLNG
      4994**DCL      6015>>IF       6022>>ASSIGN   6027>>ASSIGN   6028>>ASSIGN   6029>>ASSIGN   6037>>IF
FHANDLE.STAMP
      4994**DCL      6016>>ASSIGN   6049<<ASSIGN   6050>>IF       6158<<ASSIGN   6177>>IF       6182<<ASSIGN
FHANDLE.TEXT
      4995**DCL      6022>>ASSIGN   6027>>ASSIGN   6028>>ASSIGN   6029>>ASSIGN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:219  
FHANDLE IN PROCEDURE MAKEFSID
      6708**DCL      6693--PROC
FHANDLE.ACCTLNG IN PROCEDURE MAKEFSID
      6713**DCL      6717>>IF       6718>>DOINDEX
FHANDLE.PSNLNG IN PROCEDURE MAKEFSID
      6712**DCL      6718>>DOINDEX
FHANDLE.TEXT IN PROCEDURE MAKEFSID
      6713**DCL      6719>>ASSIGN
FID
      5392**DCL      5501<<ASSIGN   5606<<ASSIGN   5721<<ASSIGN   5772<<ASSIGN   5820<<ASSIGN   5873<<ASSIGN
      5935--ASSIGN   5943<<ASSIGN   5971<<ASSIGN   6014<<ASSIGN   6061>>ASSIGN   6098<<ASSIGN   6411<<ASSIGN
      6743<<ASSIGN
FID.ACCT
      5399**DCL       641--DCLINIT   751--DCLINIT   861--DCLINIT   911--DCLINIT  5532<<ASSIGN   5559<<CALLBLT
      5560>>ASSIGN   5568<<ASSIGN   5625<<ASSIGN   5645<<ASSIGN   5651<<ASSIGN   5656>>CALLBLT  5657>>CALLBLT
      5680>>ASSIGN   6023<<ASSIGN   6028<<ASSIGN   6138>>ASSIGN   6283--DCLINIT
FID.ASN
      5396**DCL      5397--REDEF    5515<<ASSIGN   5516<<ASSIGN   5517>>ASSIGN   5523<<ASSIGN   5561<<ASSIGN
      6016<<ASSIGN   6021<<ASSIGN   6026<<ASSIGN   6355>>ASSIGN   6373>>ASSIGN   6794>>IF
FID.NAME
      5399**DCL       533--DCLINIT   637--DCLINIT  5624<<ASSIGN   5633<<ASSIGN   5679>>ASSIGN   6279--DCLINIT
FID.NAME.L
      5399**DCL      5535<<ASSIGN   5551>>IF       5553>>ASSIGN   5635>>ASSIGN   5734<<ASSIGN   5740>>ASSIGN
      6031<<ASSIGN   6035>>IF       6359>>IF
FID.NAME.T
      5403**DCL      5536<<CALLBLT  5553>>ASSIGN   5636>>CALLBLT  5735<<CALLBLT  5740>>ASSIGN   6029<<ASSIGN
      6030>>CALLBLT
FID.PSN
      5396**DCL       636--DCLINIT   746--DCLINIT   856--DCLINIT   912--DCLINIT  6278--DCLINIT
FID.PSN.SN
      5396**DCL      5541>>IF       5546<<ASSIGN   5548<<ASSIGN   5566<<CALLBLT  5567>>ASSIGN   5641<<ASSIGN
      6022<<ASSIGN   6027<<ASSIGN   6136>>IF
FID.RES
      5399**DCL      5502<<ASSIGN   5529<<ASSIGN   5530<<ASSIGN   6017<<ASSIGN   6018<<ASSIGN   6356>>ASSIGN
FID_INIT
      5419**DCL      6014>>ASSIGN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:220  
FID_INIT.ASN
      5423**DCL      5424--REDEF
FINDDIROP IN PROCEDURE FINDUCTX
      6130**ENTRY    5689--CALL     5702--CALL     5712--CALL     5767--CALL
FINDSTAMP IN PROCEDURE FINDUCTX
      6173**ENTRY    5580--CALL     5917--CALL
FINDUCTX
      5994**PROC     5485--CALL
FM$FIT
      1698**DCL       641--DCLINIT   861--DCLINIT  5659--ASSIGN   6045--ASSIGN   6283--DCLINIT  6467--ASSIGN
      6518--ASSIGN   6527--ASSIGN   6540--ASSIGN   6570--ASSIGN
FM$FIT.CODES
      1698**DCL      6353<<ASSIGN   6369>>IF       6371<<ASSIGN   6372--ASSIGN   6434<<ASSIGN   6435<<ASSIGN
      6438<<ASSIGN
FM$FIT.CODES.CODE
      1698**DCL      6370<<ASSIGN
FND_STAMP IN PROCEDURE FINDUCTX
      5996**DCL      6000<<ASSIGN   6049>>IF       6069>>IF       6143<<ASSIGN   6197<<ASSIGN
FPT_CLOSE
       489**DCL      5787<>CALL     5800<>CALL     5808<>CALL     5828<>CALL     5829<>CALL     5877<>CALL
      5947<>CALL     5975<>CALL     5976<>CALL     6752<>CALL     6761<>CALL
FPT_CLOSE.PROCATTR_
       493**DCL      5727>>ASSIGN
FPT_CLOSE.SN_
       489**DCL       489--REDEF
FPT_CLOSE.UTL_
       490**DCL       490--REDEF
FPT_CLOSE.V
       494**DCL       489--DCLINIT
FPT_CLOSE.V.DCB#
       495**DCL      5763<<ASSIGN   5774<<ASSIGN   5806>>ASSIGN   5822<<ASSIGN   5824>>IF       5826<<ASSIGN
      5874<<ASSIGN   5946<<ASSIGN   5968<<ASSIGN   6741<<ASSIGN   6742>>IF       6749<<ASSIGN
FPT_CLOSE.V.DISP#
       498**DCL      5764<<ASSIGN   5821<<ASSIGN   5875<<ASSIGN   5937<<ASSIGN   5965<<ASSIGN   6740<<ASSIGN
FPT_CLOSE.V.EXPIRE#
       504**DCL       504--REDEF
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:221  
FPT_CLOSE.V.OPER.CHGATT#
       495**DCL      5765<<ASSIGN   5823<<ASSIGN   5876<<ASSIGN   5940<<ASSIGN   5970<<ASSIGN
FPT_CLOSE.V.TYPE#
       502**DCL       502--REDEF
FPT_CLOSE.V.XTNSIZE#
       499**DCL       499--REDEF     501--REDEF
FPT_GETDCB IN PROCEDURE TESTOPEN
      6333**DCL      6384<>CALL
FPT_GETDCB.V IN PROCEDURE TESTOPEN
      6334**DCL      6333--DCLINIT
FPT_OPEN IN PROCEDURE TESTOPEN
      6278**DCL      6357<>CALL
FPT_OPEN.ACSVEH_ IN PROCEDURE TESTOPEN
      6280**DCL      6281--REDEF
FPT_OPEN.ALTKEYS_ IN PROCEDURE TESTOPEN
      6286**DCL      6287--REDEF    6287--REDEF
FPT_OPEN.FPARAM_ IN PROCEDURE TESTOPEN
      6283**DCL      6443>>ASSIGN   6451<<ASSIGN   6467<<ASSIGN
FPT_OPEN.HDR_ IN PROCEDURE TESTOPEN
      6285**DCL      6286--REDEF
FPT_OPEN.IFPARAM_ IN PROCEDURE TESTOPEN
      6283**DCL      6443<<ASSIGN   6468<<ASSIGN
FPT_OPEN.TAB_ IN PROCEDURE TESTOPEN
      6284**DCL      6285--REDEF
FPT_OPEN.UHL_ IN PROCEDURE TESTOPEN
      6278**DCL      6279--REDEF    6279--REDEF
FPT_OPEN.V IN PROCEDURE TESTOPEN
      6287**DCL      6278--DCLINIT
FPT_OPEN.V.ASN# IN PROCEDURE TESTOPEN
      6297**DCL      6355<<ASSIGN
FPT_OPEN.V.DCB# IN PROCEDURE TESTOPEN
      6287**DCL      6334--DCLINIT  6351<<ASSIGN   6359--IF       6376>>IF       6386>>ASSIGN   6422<<ASSIGN
      6423<<ASSIGN   6455<<ASSIGN   6456<<ASSIGN
FPT_OPEN.V.FSN# IN PROCEDURE TESTOPEN
      6318**DCL      6318--REDEF    6318--REDEF
FPT_OPEN.V.FUN# IN PROCEDURE TESTOPEN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:222  
      6297**DCL      6452<<ASSIGN   6463<<ASSIGN
FPT_OPEN.V.OPER.TEST# IN PROCEDURE TESTOPEN
      6289**DCL      6453<<ASSIGN   6466<<ASSIGN
FPT_OPEN.V.ORG# IN PROCEDURE TESTOPEN
      6298**DCL      6439<<ASSIGN   6464<<ASSIGN
FPT_OPEN.V.RES# IN PROCEDURE TESTOPEN
      6302**DCL      6356<<ASSIGN
FPT_OPEN.V.TYPE# IN PROCEDURE TESTOPEN
      6299**DCL      6440<<ASSIGN   6465<<ASSIGN
FPT_OPEN.WSN_ IN PROCEDURE TESTOPEN
      6284**DCL      6284--REDEF
FSID
      5373**DCL      5587<<ASSIGN   5865<<CALLBLT  5865<<CALLBLT  6581>>ASSIGN   6716<<ASSIGN   6717<<ASSIGN
      6719<<ASSIGN   6719>>ASSIGN   6721<>CALL     6721<>CALL
FUA$GETCTX
      4767**DCL-ENT  6055--CALL     6082--CALL
FUG$REMOVE_FCTX
      4768**DCL-ENT  5753--CALL     6762--CALL     6770--CALL
FUI$FILELEN
      4770**DCL-ENT  6558--CALL
FUI$IORQS
      4769**DCL-ENT  5852--CALL     5887--CALL
FUS$SECCHK
      4771**DCL-ENT  6102--CALL
FU_BINSRCH
      4761**DCL      5865>>CALLBLT
FU_CTXHD$
      4593**DCL      6055>>IF       6056>>ASSIGN   6057<<ASSIGN   6082>>IF       6084>>ASSIGN   6085<<ASSIGN
FU_FCTX
      4611**DCL      6058>>ASSIGN
FU_FCTX.FID.ASN
      4689**DCL      4690--REDEF
FU_FCTX.FOFFSET
      4698**DCL      4698--REDEF
FU_FCTX$
      4594**DCL      5750>>ASSIGN   5936>>ASSIGN   6001>>ASSIGN   6007>>ASSIGN   6062>>ASSIGN   6063<<ASSIGN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:223  
      6153>>ASSIGN   6175>>ASSIGN   6392>>ASSIGN   6766>>ASSIGN
FU_FPT_TIME
       561**DCL      6376<>CALL
FU_MYACCN
      4753**DCL      6801>>ASSIGN
FU_MYUNAME
      4754**DCL      6802>>ASSIGN
FU_NFSSOCKET
      4591**DCL      5898<>CALL
FU_OPENLIM
      4596**DCL      5934>>ASSIGN
FU_PROC#
      4595**DCL      5483>>IF       5747>>ASSIGN   5747>>ASSIGN   5939>>IF       6387>>ASSIGN   6387>>ASSIGN
FU_TIME
      4592**DCL      5722<>CALL     5725>>ASSIGN   5802>>ASSIGN   5815<>CALL     5819>>ASSIGN   5851<>CALL
      5884<>CALL     5934>>ASSIGN   5942<>CALL     5945>>ASSIGN   5972<>CALL     5974>>ASSIGN   6111>>ASSIGN
      6112>>ASSIGN
FU_TIMEZONESECS IN PROCEDURE TIMEVAL
      6917**DCL      6921>>ASSIGN   6926>>ASSIGN
FU_UCTX
      4715**DCL      6086>>ASSIGN
FU_UCTX.FFLG#
      4745**DCL      4745--REDEF
FU_UCTX.FILEPOS
      4749**DCL      4750--REDEF
FU_UCTX.FILEPOS.FOFFSET
      4749**DCL      4750--REDEF
FU_XLATE
      4755**DCL      5536>>CALLBLT  5559>>CALLBLT  5566>>CALLBLT  5636>>CALLBLT  5657>>CALLBLT  5735>>CALLBLT
      6150>>CALLBLT
GETFCTX IN PROCEDURE FINDUCTX
      6195**ENTRY    5919--CALL
GET_PSN
       911**DCL      5539<>CALL     5653<>CALL     6038<>CALL     6134<>CALL
GET_PSN.V
       912**DCL       911--DCLINIT
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:224  
GOT_FCTX$ IN PROCEDURE FINDUCTX
      6013**LABEL    6159--GOTO     6163--GOTO     6199--GOTO
HCTX.NAME.L
      5265**DCL      5266--IMP-SIZ
HCTX.UCTX$
      5263**DCL      6089>>ASSIGN   6090<<ASSIGN
I
      5369**DCL      5550<<ASSIGN   5551>>IF       5553>>ASSIGN   5601<>CALL     5602>>ASSIGN   5620<<DOINDEX
      5621>>IF       5622>>ASSIGN   5624>>ASSIGN   5625>>ASSIGN   5739<<ASSIGN   5740>>ASSIGN   5850<<ASSIGN
      5853>>IF       5863<<ASSIGN   5865>>CALLBLT  5934<<ASSIGN   5939>>IF       6030<<CALLBLT  6031>>ASSIGN
      6718<<DOINDEX  6719>>ASSIGN
LEN IN PROCEDURE FINDUCTX
      5997**DCL      6144<<ASSIGN   6145>>IF       6150>>CALLBLT
LIST_ACCTS
      5376**DCL      5605<<ASSIGN   5610<<ASSIGN   5612<<ASSIGN   5623>>IF       5630>>IF       5640>>IF
      5652>>IF       5678>>IF
M$CLOSE
       325**DCL-ENT  5737--CALL     5787--CALL     5808--CALL     5829--CALL     5877--CALL     5947--CALL
      5975--CALL     6761--CALL
M$DELREC
       327**DCL-ENT  5807--CALL
M$GETDCB
       331**DCL-ENT  6384--CALL
M$MADMUCK
       333**DCL-ENT  5539--CALL     5653--CALL     6038--CALL     6134--CALL
M$MERC
       381**DCL-ENT  6405--CALL
M$OPEN
       325**DCL-ENT  5632--CALL     5642--CALL     5654--CALL     6043--CALL     6357--CALL
M$RELDCB
       331**DCL-ENT  5746--CALL     5976--CALL
M$REW
       328**DCL-ENT  5733--CALL     5800--CALL     5828--CALL     6752--CALL
M$TIME
       392**DCL-ENT  6376--CALL
M$XXX
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:225  
       337**DCL-ENT  6406--CALL
MAKEFATTR
      6478**PROC     5589--CALL     5791--CALL     6066--CALL
MAKEFSID
      6693**PROC     5588--CALL     5790--CALL     6065--CALL
MAXDIRRES$
      5365**DCL      5366--REDEF    5602<<ASSIGN   5629>>DOWHILE
MINAGE IN PROCEDURE TESTOPEN
      6348**DCL      6391<<ASSIGN   6394>>IF       6398<<ASSIGN
MINF$ IN PROCEDURE TESTOPEN
      6349**DCL      6390<<ASSIGN   6399<<ASSIGN   6403>>IF       6408>>ASSIGN   6409>>ASSIGN
MODTIME IN PROCEDURE MAKEFATTR
      6512**DCL      6532<>CALL
MODTIME.SECONDS IN PROCEDURE MAKEFATTR
      6512**DCL      6533>>IF       6535>>IF
NEARLY_THE_TOP IN PROCEDURE TESTOPEN
      6353**LABEL    6457--GOTO
NEXT_DIR_ENTRY
      5665**LABEL    5634--GOTO     5655--GOTO
NFSFIT IN PROCEDURE MAKEFATTR
      6511**DCL      6516<<ASSIGN   6531<<ASSIGN   6536<<ASSIGN   6548>>IF       6555>>IF
NOP_LOOKUP
      5583**LABEL    5506--GOTO
NOT_THERE IN PROCEDURE FINDUCTX
      6040**LABEL    6043--CALLALT
NO_ENT IN PROCEDURE DELETE_FILE
      6732**DCL      6734<<ASSIGN   6747<<ASSIGN   6751>>IF       6757<<ASSIGN   6760>>IF       6775>>IF
NO_STAMP.TEXT
      5000**DCL      5001--REDEF    6155>>IF       6155>>IF       6177>>IF       6177>>IF
NO_STAMP.TEXTB
      5001**DCL      6177>>IF
NULLZ
      4765**DCL      5512>>ASSIGN   5522>>ASSIGN
NULLZ_INIT
      4764**DCL      4765--REDEF
OK IN PROCEDURE TESTOPEN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:226  
      6360**LABEL    6361--GOTO
OPEN_ACCT_FIT
       856**DCL      5654<>CALL     6043<>CALL
OPEN_ACCT_FIT.ACSVEH_
       858**DCL       859--REDEF
OPEN_ACCT_FIT.ALTKEYS_
       864**DCL       865--REDEF     865--REDEF
OPEN_ACCT_FIT.HDR_
       863**DCL       864--REDEF
OPEN_ACCT_FIT.TAB_
       862**DCL       863--REDEF
OPEN_ACCT_FIT.UHL_
       856**DCL       857--REDEF     857--REDEF
OPEN_ACCT_FIT.V
       865**DCL       856--DCLINIT
OPEN_ACCT_FIT.V.FSN#
       896**DCL       896--REDEF     896--REDEF
OPEN_ACCT_FIT.WSN_
       862**DCL       862--REDEF
OPEN_NEXT_ACCT
       746**DCL      5642<>CALL
OPEN_NEXT_ACCT.ACSVEH_
       748**DCL       749--REDEF
OPEN_NEXT_ACCT.ALTKEYS_
       754**DCL       755--REDEF     755--REDEF
OPEN_NEXT_ACCT.HDR_
       753**DCL       754--REDEF
OPEN_NEXT_ACCT.TAB_
       752**DCL       753--REDEF
OPEN_NEXT_ACCT.UHL_
       746**DCL       747--REDEF     747--REDEF
OPEN_NEXT_ACCT.V
       755**DCL       746--DCLINIT
OPEN_NEXT_ACCT.V.FSN#
       786**DCL       786--REDEF     786--REDEF
OPEN_NEXT_ACCT.WSN_
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:227  
       752**DCL       752--REDEF
OPEN_NEXT_FILE
       636**DCL      5632<>CALL
OPEN_NEXT_FILE.ACSVEH_
       638**DCL       639--REDEF
OPEN_NEXT_FILE.ALTKEYS_
       644**DCL       645--REDEF     645--REDEF
OPEN_NEXT_FILE.HDR_
       643**DCL       644--REDEF
OPEN_NEXT_FILE.TAB_
       642**DCL       643--REDEF
OPEN_NEXT_FILE.UHL_
       636**DCL       637--REDEF     637--REDEF
OPEN_NEXT_FILE.V
       645**DCL       636--DCLINIT
OPEN_NEXT_FILE.V.FSN#
       676**DCL       676--REDEF     676--REDEF
OPEN_NEXT_FILE.WSN_
       642**DCL       642--REDEF
READDIR
      5017**DCL      5600--IF
READDIR.COOKIE
      5043**DCL      5604<>CALL
READDIR.COUNT
      5043**DCL      5601<>CALL
READDIRRES
      4903**DCL      5665--ASSIGN
READDIRRES.COOKIE
      4905**DCL      5619>>IF       5668<>CALL
READDIRRES.EOF
      4908**DCL      5674<<ASSIGN
READDIRRES.FILEID
      4907**DCL      4908--REDEF    5662<>CALL
READDIRRES.NAME
      4909**DCL      5682--ASSIGN
READDIRRES.NAME.L
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:228  
      4910**DCL      4911--IMP-SIZ  5635<<ASSIGN   5636>>CALLBLT  5656<<CALLBLT  5657>>CALLBLT  5665>>ASSIGN
READDIRRES.NAME.T
      4911**DCL      5636<<CALLBLT  5657<<CALLBLT
READDIRRES.PRESENT
      4906**DCL      5664<<ASSIGN   5673<<ASSIGN
READDIRRES.STAT
      4904**DCL      4905--REDEF
REALOPEN IN PROCEDURE TESTOPEN
      6383**ENTRY    5849--CALL     5859--CALL
REMOVE_RENAMES IN PROCEDURE DELETE_FILE
      6765**LABEL    6771--GOTO
RENAME_DEL_ERR
      5717**LABEL    5713--CALLALT
REOPEN IN PROCEDURE TESTOPEN
      6418**ENTRY    5830--CALL     5948--CALL
REPLY.STAT
      4778**DCL      5691<<ASSIGN   5717>>IF       5757<<ASSIGN   5890<<ASSIGN   5891<<ASSIGN   5892<<ASSIGN
      5893<<ASSIGN   5894<<ASSIGN   6040<<ASSIGN   6051<<ASSIGN   6147<<ASSIGN   6362<<ASSIGN   6363<<ASSIGN
      6364<<ASSIGN   6746>>IF       6756<<ASSIGN   6778<<ASSIGN
REPLY$
      5362**DCL      4777--IMP-PTR  4794--IMP-PTR  4845--IMP-PTR  4926--IMP-PTR  5482<<ASSIGN   5495>>ASSIGN
      5496>>ASSIGN   5497>>ASSIGN   5503>>ASSIGN   5510>>IF       5512>>ASSIGN   5512>>ASSIGN   5512>>ASSIGN
      5513>>ASSIGN   5514>>IF       5517>>ASSIGN   5519>>IF       5522>>ASSIGN   5522>>ASSIGN   5524>>ASSIGN
      5525>>ASSIGN   5528>>IF       5534>>IF       5543>>ASSIGN   5543>>ASSIGN   5543>>ASSIGN   5543>>ASSIGN
      5544>>ASSIGN   5548>>ASSIGN   5548>>ASSIGN   5550>>ASSIGN   5550>>ASSIGN   5553>>ASSIGN   5555>>IF
      5555>>IF       5558>>ASSIGN   5560>>ASSIGN   5560>>ASSIGN   5565>>ASSIGN   5567>>ASSIGN   5579>>ASSIGN
      5583>>ASSIGN   5588>>CALL     5589>>CALL     5590>>ASSIGN   5592>>ASSIGN   5593>>ASSIGN   5602>>ASSIGN
      5603>>ASSIGN   5682>>ASSIGN   5691>>ASSIGN   5717>>IF       5757>>ASSIGN   5771>>ASSIGN   5780>>IF
      5781>>ASSIGN   5788>>IF       5801>>IF       5803>>ASSIGN   5804>>ASSIGN   5805>>ASSIGN   5831>>ASSIGN
      5832>>ASSIGN   5833>>ASSIGN   5837>>ASSIGN   5838>>CALL     5839>>ASSIGN   5839>>ASSIGN   5840>>ASSIGN
      5840>>ASSIGN   5841>>ASSIGN   5841>>ASSIGN   5842>>ASSIGN   5842>>ASSIGN   5890>>ASSIGN   5891>>ASSIGN
      5892>>ASSIGN   5893>>ASSIGN   5894>>ASSIGN   5915<<ASSIGN   5916>>ASSIGN   5920>>ASSIGN   5922>>ASSIGN
      5935<<ASSIGN   6040>>ASSIGN   6051>>ASSIGN   6147>>ASSIGN   6362>>ASSIGN   6363>>ASSIGN   6364>>ASSIGN
      6746>>IF       6756>>ASSIGN   6778>>ASSIGN
RESULT IN PROCEDURE TIMEVAL
      6816**DCL      6814--PROC
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:229  
RESULT.SECS IN PROCEDURE TIMEVAL
      6817**DCL      6921<<ASSIGN   6926<<ASSIGN   6928<>CALL     6928<>CALL
RESULT.USECS IN PROCEDURE TIMEVAL
      6818**DCL      6920<<ASSIGN   6925<<ASSIGN   6929<>CALL     6929<>CALL
RQSCTX
      4514**DCL        23--PROC     5480--ENTRY    5852<>CALL     5887<>CALL     5914--ENTRY    5963--ENTRY
      5966--ASSIGN
RQSCTX.BODY$
      4518**DCL      5481>>ASSIGN   5719>>ASSIGN
RQSCTX.CALLHDR
      4575**DCL      4580--REDEF
RQSCTX.CALLHDR.AUTH_CRED
      4577**DCL      4579--REDEF
RQSCTX.CALLHDR.XID
      4575**DCL      4575--REDEF
RQSCTX.FROMADDR
      4540**DCL      5898<>CALL
RQSCTX.LEN
      4518**DCL      5489>>IF       5491<<ASSIGN   5494<<ASSIGN   5594<<ASSIGN   5600>>IF       5682<<ASSIGN
      5686>>IF       5692<<ASSIGN   5698>>IF       5758<<ASSIGN   5809<<ASSIGN   5834<<ASSIGN   5843<<ASSIGN
      5895<<ASSIGN   5898<>CALL     5898<>CALL     5923<<ASSIGN   5999>>IF
RQSCTX.PROC#
      4519**DCL      5484>>ASSIGN   5484>>ASSIGN   5486>>DOCASE
RQSCTX.REPLYHDR
      4580**DCL      5898<>CALL
RQSCTX.REPLYHDR.ACCEPT_STAT
      4585**DCL      5490<<ASSIGN
RQSCTX.REPLYHDR.AUTH_VERF_HID
      4584**DCL      4584--REDEF    4584--REDEF
RQSCTX.REPLYHDR.PVERS_HIGH
      4586**DCL      4586--REDEF
RQSCTX.REPLYHDR.PVERS_LOW
      4585**DCL      4585--REDEF    4586--REDEF
RQSCTX.REPLYHDR.REJECT_STAT
      4581**DCL      4581--REDEF    4582--REDEF
RQSCTX.REPLYHDR.RESULT0
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:230  
      4586**DCL      5681<<ASSIGN
RQSCTX.REPLYHDR.RESULTS
      4585**DCL      5482--ASSIGN   5915--ASSIGN
RQSCTX.REPLYHDR.VERS_HIGH
      4583**DCL      4583--REDEF    4583--REDEF
RQSCTX.REPLYHDR.VERS_LOW
      4582**DCL      4582--REDEF    4583--REDEF
RQSCTX.UCTX$
      4519**DCL      6070>>IF       6071>>ASSIGN   6074>>IF       6074>>IF       6074>>IF       6081>>IF
      6087>>ASSIGN   6088>>ASSIGN   6092>>ASSIGN   6110<<ASSIGN
SATTR IN PROCEDURE UPDATEFATTR
      6606**DCL      6591--PROC
SATTR.ATIME IN PROCEDURE UPDATEFATTR
      6611**DCL      6623>>ASSIGN
SATTR.ATIME.SECONDS IN PROCEDURE UPDATEFATTR
      6611**DCL      6623>>IF
SATTR.GID IN PROCEDURE UPDATEFATTR
      6610**DCL      6621>>IF       6621>>ASSIGN
SATTR.MODE IN PROCEDURE UPDATEFATTR
      6610**DCL      6617>>IF       6617>>IF       6619>>ASSIGN
SATTR.MTIME IN PROCEDURE UPDATEFATTR
      6611**DCL      6624>>ASSIGN
SATTR.MTIME.SECONDS IN PROCEDURE UPDATEFATTR
      6611**DCL      6624>>IF
SATTR.SIZE IN PROCEDURE UPDATEFATTR
      6610**DCL      6622>>IF
SATTR.UID IN PROCEDURE UPDATEFATTR
      6610**DCL      6620>>IF       6620>>ASSIGN
SAVE_FCTX$
      5368**DCL      5696<<ASSIGN   5709>>ASSIGN   5710<<ASSIGN   5720>>ASSIGN
SETJIT
      6788**PROC     5571--CALL     5617--CALL     5783--CALL     6099--CALL
START_COOKIE
      5372**DCL      5604<>CALL     5621>>IF       5634>>IF       5655>>IF
STATFS
      4926**DCL      5843--ASSIGN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:231  
STATFS.BAVAIL
      4931**DCL      5842<<ASSIGN
STATFS.BFREE
      4931**DCL      5841<<ASSIGN
STATFS.BLOCKS
      4930**DCL      5840<<ASSIGN
STATFS.BSIZE
      4930**DCL      5839<<ASSIGN
STATFS.STAT
      4930**DCL      5837<<ASSIGN
STATFS.TSIZE
      4930**DCL      5838<>CALL     5839>>ASSIGN   5840>>ASSIGN   5841>>ASSIGN   5842>>ASSIGN
TESTOPEN
      6210**PROC     5573--CALL     5578--CALL     5730--CALL     5775--CALL     5789--CALL     5825--CALL
      5878--CALL     6034--CALL     6100--CALL     6744--CALL
TEXTMODE
      5374**DCL      5864<<ASSIGN   5867<<ASSIGN   5870<<ASSIGN   5871>>IF       6432>>IF       6442>>ASSIGN
TIMEVAL
      6814**PROC     5722--CALL     5815--CALL     5851--CALL     5884--CALL     5942--CALL     5972--CALL
      6521--CALL     6522--CALL     6523--CALL     6532--CALL
TO$
      5366**DCL      5697<<ASSIGN   5698>>IF       5698>>IF       5699>>IF       5711>>ASSIGN   5734>>ASSIGN
      5735>>CALLBLT  5735>>CALLBLT  5739>>ASSIGN   5739>>ASSIGN   5740>>ASSIGN   5741>>ASSIGN   5742>>ASSIGN
      5753>>IF       5766<<ASSIGN
TRY_NEXT_ACCT
      5636**LABEL    5646--GOTO     5653--CALLALT  5654--CALLALT
UCTX
      5104**DCL      6086<<ASSIGN   6102<>CALL
UCTX.AGE
      5134**DCL      6112<<ASSIGN
UCTX.COOKIE
      5139**DCL      5676<<ASSIGN   5676>>ASSIGN
UCTX.COOKIE.ID
      5139**DCL      5621>>IF       5622>>ASSIGN   5675>>IF       5677<<ASSIGN
UCTX.COOKIE.NAME
      5140**DCL      5624>>ASSIGN   5679<<ASSIGN
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:232  
UCTX.COOKIE.NAME.T
      5140**DCL      5625>>ASSIGN   5680<<ASSIGN
UCTX.FCTX$
      5108**DCL      5586>>ASSIGN   6070>>IF       6081>>IF       6094>>IF       6095<<ASSIGN
UCTX.FFLG
      5134**DCL      5857>>IF       6101<<ASSIGN   6106<<ASSIGN   6106>>ASSIGN
UCTX.FFLG.CREATE
      5136**DCL      5762>>IF
UCTX.FFLG.DELF
      5135**DCL      5703>>IF       6735>>IF
UCTX.FFLG.DELR
      5135**DCL      5768>>IF
UCTX.FFLG.READ
      5134**DCL      5847>>IF
UCTX.FFLG.REATTR
      5135**DCL      5769>>IF       5813>>IF       6104<<ASSIGN
UCTX.FFLG#
      5134**DCL      5134--REDEF
UCTX.FILEPOS
      5138**DCL      5139--REDEF
UCTX.FILEPOS.FOFFSET
      5138**DCL      5139--REDEF
UCTX.FLNK$
      5108**DCL      6077>>ASSIGN   6096<<ASSIGN
UCTX.HCTX$
      5108**DCL      6074>>IF       6074>>IF       6088<<ASSIGN   6088>>ASSIGN   6089>>ASSIGN   6090>>ASSIGN
UCTX.HLNK$
      5108**DCL      6085>>ASSIGN   6089<<ASSIGN
UCTX.USER
      5127**DCL      6087<<ASSIGN   6087>>ASSIGN
UCTX.USER.ACCN
      5129**DCL      6789>>ASSIGN
UCTX.USER.FMBLK
      5130**DCL      5614>>IF
UCTX.USER.FMREAD
      5131**DCL      6793>>IF
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:233  
UCTX.USER.FMSEC
      5130**DCL      6792>>IF
UCTX.USER.GID
      5129**DCL      5794>>ASSIGN   6074>>IF       6074>>IF       6642>>IF       6660>>IF       6674>>IF
UCTX.USER.SECCHK
      5130**DCL      6102>>IF
UCTX.USER.TOPLVL
      5131**DCL      5509>>IF       5521>>IF
UCTX.USER.UID
      5129**DCL      5793>>ASSIGN   6074>>IF       6074>>IF       6638>>IF       6640>>IF       6656>>IF
      6658>>IF       6674>>IF       6674>>IF
UCTX.USER.UNAME
      5129**DCL      6790>>ASSIGN
UCTX$
      5363**DCL      5104--IMP-PTR  5509>>IF       5521>>IF       5586>>ASSIGN   5614>>IF       5621>>IF
      5622>>ASSIGN   5624>>ASSIGN   5625>>ASSIGN   5675>>IF       5676>>ASSIGN   5676>>ASSIGN   5677>>ASSIGN
      5679>>ASSIGN   5680>>ASSIGN   5703>>IF       5762>>IF       5768>>IF       5769>>IF       5793>>ASSIGN
      5794>>ASSIGN   5813>>IF       5847>>IF       5857>>IF       6071<<ASSIGN   6072<<ASSIGN   6073>>DOWHILE
      6074>>IF       6074>>IF       6074>>IF       6077<<ASSIGN   6077>>ASSIGN   6080>>IF       6084<<ASSIGN
      6085>>ASSIGN   6086>>ASSIGN   6087>>ASSIGN   6088>>ASSIGN   6089>>ASSIGN   6089>>ASSIGN   6090>>ASSIGN
      6090>>ASSIGN   6092<<ASSIGN   6094>>IF       6095>>ASSIGN   6096>>ASSIGN   6097>>ASSIGN   6101>>ASSIGN
      6102>>IF       6102>>CALL     6104>>ASSIGN   6106>>ASSIGN   6106>>ASSIGN   6110>>ASSIGN   6112>>ASSIGN
      6638>>IF       6640>>IF       6642>>IF       6656>>IF       6658>>IF       6660>>IF       6674>>IF
      6674>>IF       6674>>IF       6735>>IF       6789>>ASSIGN   6790>>ASSIGN   6792>>IF       6793>>IF
UFATTR
      5443**DCL       493--DCLINIT
UFATTR.Q
      5444**DCL      5443--DCLINIT
UFATTR.Q.FATTR
      5464**DCL      5724<<ASSIGN   5777<<ASSIGN   5791<>CALL     5797--ASSIGN   5804>>ASSIGN   5818<<ASSIGN
      5944<<ASSIGN   5973<<ASSIGN
UFATTR.Q.FATTR.GID
      5472**DCL      5794<<ASSIGN
UFATTR.Q.FATTR.TYPE
      5466**DCL      5786<<ASSIGN
UFATTR.Q.FATTR.UID
PL6.E3A0      #001=FUN$NFS File=FUN$NFS.:FUA2TSI                                 FRI 11/21/97 11:34 Page:234  
      5472**DCL      5793<<ASSIGN
UFATTR.Q.FATTR.XATTR.UFIT
      5466**DCL      5795<<ASSIGN
UFATTR.Q.MODTIME
      5447**DCL      5725<<ASSIGN   5802<<ASSIGN   5819<<ASSIGN   5945<<ASSIGN   5974<<ASSIGN
UNSETJIT IN PROCEDURE SETJIT
      6800**ENTRY    5574--CALL     5577--CALL     5683--CALL     5785--CALL     5881--CALL     6108--CALL
UPDATEFATTR
      6591**PROC     5776--CALL     5798--CALL     5816--CALL
UTS IN PROCEDURE TIMEVAL
      6819**DCL      6814--PROC     6919>>IF       6920>>ASSIGN   6921>>ASSIGN   6924>>ASSIGN
UTSS IN PROCEDURE TIMEVAL
      6916**DCL      6924<<ASSIGN   6925>>ASSIGN   6926>>ASSIGN
WRITEARGS.COUNT
      5085**DCL      5086--IMP-SIZ  5863>>ASSIGN   5865>>CALLBLT
WRITEARGS.DATA
      5086**DCL      5865>>CALLBLT
WRITEARGS.OFFSET
      5085**DCL      5870>>IF
XSF$LOCCODP
      4772**DCL-ENT  5660--CALL     6046--CALL     6519--CALL     6528--CALL     6541--CALL     6571--CALL
XSL$HTONL
      4773**DCL-ENT  5662--CALL     5668--CALL     5838--CALL     6048--CALL     6524--CALL     6545--CALL
      6566--CALL     6576--CALL     6580--CALL     6721--CALL     6928--CALL     6929--CALL
XSL$NTOHL
      4774**DCL-ENT  5601--CALL     5604--CALL
XSL$QSENDTO
      4775**DCL-ENT  5898--CALL
