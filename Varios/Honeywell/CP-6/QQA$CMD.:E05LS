VERSION E05

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:1    
        1        1        /*M* QQA$CMD - Perform initial processing of TP commands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        /*P* NAME:        QQA$CMD
        9        9
       10       10             PURPOSE:     This routine performs all elementary checking of
       11       11                          TP commands.  This includes syntax checking and
       12       12                          security checks.
       13       13        */
       14       14        /*D* NAME:        QQA$CMD
       15       15
       16       16             CALL:        CALL QQA$CMD
       17       17
       18       18             INPUT:       QQ_CMDBLK - Structure describing a command to be
       19       19                          processed.
       20       20
       21       21             OUTPUT:      QQ_CMDBLK - with OUT$ filled in
       22       22
       23       23             DESCRIPTION: QQ_CMDBLK contains all the pertinent information
       24       24                          about a command such as its origin and size in
       25       25                          bytes.  All commands are parsed twice.  The first
       26       26                          "rough" parse is used just to determine if the
       27       27                          command looks like something we know about.
       28       28                          The parse tree QQ_NODES0_D defines the rough
       29       29                          syntax for all of the the TP commands.  From
       30       30                          the first parse we obtain a command number.
       31       31                          This command number is used as an index in
       32       32                          a table of command flags called QQ_CMDFLAGS.
       33       33                          QQ_CMDFLAGS contains information on who
       34       34                          can use a command, which parse tree to use
       35       35                          for the next call to X$PARSE (QQ_NODES1_D or
       36       36                          QQ_NODES2_D) and some other information
       37       37                          (see QQ_CMDFLAGS macro).
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:2    
       38       38
       39       39                          The command is parsed for the second time and
       40       40                          then the processing routine for that particular
       41       41                          command is called.  All of the lower level
       42       42                          processing routines (named QQB$xxx) use
       43       43                          as their input QQ_CMDBLK.  The output of the
       44       44                          parser is stored in QQ_CMDBLK.OUT$.
       45       45
       46       46                          Commands that are processed at initialization
       47       47                          may have to be saved for deferred processing.
       48       48                          A command must be saved for deferred processing
       49       49                          is it needs to use the comgroup or some table
       50       50                          that may not be built at initialization
       51       51                          time.  QQ_CMDFLAGS has the information on
       52       52                          what commands can be processed during which
       53       53                          pass.  If a command can't be processed during
       54       54                          pass zero it is written to a star file.  QQA$INIT
       55       55                          will rewind and reread this star file when the
       56       56                          pass two  commands can be processed.
       57       57        */
       58       58        %EJECT;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:3    
       59       59        QQA$CMD:
       60       60                PROC;
       61       61
       62       62        %INCLUDE Q_PAGE_C;
       63       94        %SET LISTEXP = '1'B;
       64       95        %PAGE(ARG="Includes");

               112        /***************************************************************************
               113         *                                                                         *
               114         *                                  Includes                               *
               115         *                                                                         *
               116         ***************************************************************************/

       65      120        %INCLUDE CP_6;
       66      201        %INCLUDE B$JIT;
       67      491        %INCLUDE XU_PERR_C;
       68      682        %INCLUDE XU_MACRO_C;
       69     3788        %INCLUDE QQ_SUBS_C;
       70     3980        %INCLUDE QQ_MACROS_C;
       71     4405        %INCLUDE QQ_DATA_R;
       72     4651        %INCLUDE QQ_CMDFLAGS_R;
       73     4705        %INCLUDE QQ_PERR_C;
       74     4866        %INCLUDE Q_ERRCODE_C;
       75     4889        %PAGE(ARG="Externally defined routines");

              4906    1   /***************************************************************************
              4907    1    *                                                                         *
              4908    1    *                        Externally defined routines                      *
              4909    1    *                                                                         *
              4910    1    ***************************************************************************/

       76     4914    1   DCL X$PARSE ENTRY(1) ALTRET;
       77     4915    1   DCL QQB$ASSIST ENTRY;
       78     4916    1   DCL QQB$BEGIN ENTRY;
       79     4917    1   DCL QQB$CANCEL ENTRY;
       80     4918    1   DCL QQB$CHECK ENTRY;
       81     4919    1   DCL QQB$DELIVER ENTRY;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:4    
       82     4920    1   DCL QQB$DISEN ENTRY;
       83     4921    1   DCL QQB$DISPLAY ENTRY;
       84     4922    1   DCL   QQB$ERSEND ENTRY;
       85     4923    1   DCL QQB$HELP ENTRY;
       86     4924    1   DCL QQB$HOLD ENTRY;
       87     4925    1   DCL QQB$KILL ENTRY;
       88     4926    1   DCL QQB$LET ENTRY;
       89     4927    1   DCL QQB$MESSAGE ENTRY;
       90     4928    1   DCL QQB$OFF ENTRY;
       91     4929    1   DCL QQB$PASSWORD ENTRY;
       92     4930    1   DCL QQB$PRIO ENTRY;
       93     4931    1   DCL QQB$PROFILE ENTRY;
       94     4932    1   DCL QQB$READ ENTRY;
       95     4933    1   DCL QQB$SPY ENTRY;
       96     4934    1   DCL QQB$START ENTRY;
       97     4935    1   DCL QQB$STATS ENTRY;
       98     4936    1   DCL QQB$STOPTP ENTRY;
       99     4937    1   DCL QQB$TIME ENTRY;
      100     4938    1   DCL QQB$TRANS ENTRY;
      101     4939    1   DCL QQB$UNDER ENTRY;
      102     4940    1   DCL QQC$BLDMSG_BLK ENTRY(1);
      103     4941    1   DCL QQC$BLDMSG ENTRY(1);
      104     4942    1   DCL QQC$SNDMSG ENTRY(1);
      105     4943    1   DCL QQC$SCREECH ENTRY;
      106     4944        %PAGE(ARG="Symrefs");

              4961    1   /***************************************************************************
              4962    1    *                                                                         *
              4963    1    *                                  Symrefs                                *
              4964    1    *                                                                         *
              4965    1    ***************************************************************************/

      107     4969    1   DCL B$TCB$ PTR SYMREF;
      108     4970    1   DCL B$JIT$ PTR SYMREF;
      109     4971        %PAGE(ARG="DCBs");

              4988    1   /***************************************************************************
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:5    
              4989    1    *                                                                         *
              4990    1    *                                    DCBs                                 *
              4991    1    *                                                                         *
              4992    1    ***************************************************************************/

      110     4996    1   DCL M$TPCMD DCB;
      111     4997        %PAGE(ARG="Based");

              5014    1   /***************************************************************************
              5015    1    *                                                                         *
              5016    1    *                                   Based                                 *
              5017    1    *                                                                         *
              5018    1    ***************************************************************************/

      112     5022        %B$TCB;
      113     5025        %B$ALT;
      114     5033        %TP$STATION;
      115     5106        %PARSE$OUT (STCLASS=BASED);
      116     5151        %PARSE$SYM (STCLASS=BASED);
      117     5189    1   DCL CHAR$STRING CHAR(CHAR_STRING_SIZE) BASED;
      118     5190        %PAGE(ARG="Static");

              5207    1   /***************************************************************************
              5208    1    *                                                                         *
              5209    1    *                                   Static                                *
              5210    1    *                                                                         *
              5211    1    ***************************************************************************/

      119     5215        %P_PCB(STCLASS=STATIC);
      120     5414        %PAGE(ARG="Auto");

              5431    1   /***************************************************************************
              5432    1    *                                                                         *
              5433    1    *                                    Auto                                 *
              5434    1    *                                                                         *
              5435    1    ***************************************************************************/

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:6    
      121     5439        %MSGBLK;
      122     5529    1   DCL 1 CMDFLAGS,
      123     5530    1         2 INFO,
      124     5531        %CMD_FLAGS (STCLASS=, LVL=3, LAST=";");
      125     5576    1   DCL CHAR_STRING_SIZE UBIN WORD;
      126     5577    1   DCL UPBUF CHAR(90);
      127     5578    1   DCL POS SBIN WORD;
      128     5579    1   DCL 1 ERR,
      129     5580    1         2 FCG BIT(12) UNAL,
      130     5581    1         2 MID BIT(6) UNAL,
      131     5582    1         2 MON BIT(1) UNAL,
      132     5583    1         2 CODE UBIN(14) UNAL,
      133     5584    1         2 SEV UBIN(3) UNAL;
      134     5585
      135     5586    1   DCL PARSE_WORK(0:299) UBIN WORD;
      136     5587        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:7    
              5604    1   /***************************************************************************
              5605    1    *                                                                         *
              5606    1    *                                Error codes                              *
              5607    1    *                                                                         *
              5608    1    ***************************************************************************/

      137     5612        %ERRCODE(NAME=CODE_NULL, FCG#=%FCG_QQ, MID#=%MID_A);
      138     5619        %ERRCODE(NAME=CODE_NOTIMP, CODE#=%E$NOTIMP, FCG#=%FCG_QQ, MID#=%MID_A);
      139     5626        %ERRCODE(NAME=CODE_INITONLY, CODE#=%E$INITONLY, FCG#=%FCG_QQ, MID#=%MID_A);
      140     5633        %ERRCODE(NAME=CODE_RUNONLY, CODE#=%E$RUNONLY, FCG#=%FCG_QQ, MID#=%MID_A);
      141     5640        %ERRCODE(NAME=CODE_BEENUSED, CODE#=%E$BEENUSED, FCG#=%FCG_QQ, MID#=%MID_A);
      142     5647        %ERRCODE(NAME=CODE_EH, CODE#=%E$EH, FCG#=%FCG_QQ, MID#=%MID_A);
      143     5654        %ERRCODE(NAME=CODE_PRIVREQ, CODE#=%E$PRIVREQ, FCG#=%FCG_QQ, MID#=%MID_A);
      144     5661        %ERRCODE(NAME=CODE_SYNTAX_ERR, CODE#=%E$SYNTAX_ERR, FCG#=%FCG_QQ, MID#=%MID_A);
      145     5668        %ERRCODE(NAME=CODE_NOCONSOLES, CODE#=%E$NOCONSOLES, FCG#=%FCG_QQ, MID#=%MID_A);
      146     5675        %ERRCODE(NAME=CODE_CONSONLY, CODE#=%E$CONSONLY, FCG#=%FCG_QQ, MID#=%MID_A);
      147     5682        %ERRCODE(NAME=CODE_RU_AND_U, CODE#=%E$RU_AND_U, FCG#=%FCG_QQ, MID#=%MID_A);
      148     5689
      149     5690        /*E*       ERROR: QQA-E$NOTIMP-C
      150     5691
      151     5692                 MESSAGE: This command has not been implemented.
      152     5693             DESCRIPTION: The specified command has not been implemented.
      153     5694        */
      154     5695        /*E*       ERROR: QQA-E$INITONLY-C
      155     5696
      156     5697                 MESSAGE: This command can only be used at TP initialization.
      157     5698             DESCRIPTION: The specified command can only be used while
      158     5699                          an instance of TP is being initialized.
      159     5700        */
      160     5701        /*E*       ERROR: QQA-E$RUNONLY-C
      161     5702
      162     5703                 MESSAGE: This command can only be used after TP initialization
      163     5704                          has been completed.
      164     5705             DESCRIPTION: The specified command can not be used during
      165     5706                          the initialization phase.
      166     5707        */
      167     5708        /*E*       ERROR: QQA-E$BEENUSED-C
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:8    
      168     5709
      169     5710                 MESSAGE: Warning:  this command has been used more than
      170     5711                          once during TP initialization.  The most
      171     5712                          recent value specified has been used.
      172     5713             DESCRIPTION: It does not make sense to use the LET commands
      173     5714                          for control variables more than once during
      174     5715                          initialization.  As a service to the user
      175     5716                          he will just be warned of the condition.
      176     5717                          For example: LET TESTMODE ON  LET TESTMODE OFF
      177     5718        */
      178     5719        /*E*       ERROR: QQA-E$EH-C
      179     5720
      180     5721                 MESSAGE: Eh?
      181     5722             DESCRIPTION: When the parser fails to match anything
      182     5723                          from the command string this diagnostic is
      183     5724                          returned.
      184     5725        */
      185     5726        /*E*       ERROR: QQA-E$PRIVREQ-C
      186     5727
      187     5728                 MESSAGE: You do not have sufficient privilege to
      188     5729                          use this command.
      189     5730             DESCRIPTION: Privilege is required to use this command.
      190     5731                          To use this command you must either be an
      191     5732                          MCT or be privileged.
      192     5733        */
      193     5734        /*E*       ERROR: QQA-E$SYNTAX_ERR-C
      194     5735
      195     5736                 MESSAGE: Syntax error
      196     5737             DESCRIPTION: The parser recognized some portion of the
      197     5738                          command string but the command is not a
      198     5739                          valid one.
      199     5740        */
      200     5741        /*E*       ERROR: QQA-E$NOCONSOLES-C
      201     5742
      202     5743                 MESSAGE: This command can not be used from TP consoles.
      203     5744             DESCRIPTION: Operator consoles are not permitted to use
      204     5745                          commands like BEGIN and OFF
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:9    
      205     5746        */
      206     5747        /*E*       ERROR: QQA-E$CONSONLY-C
      207     5748
      208     5749                 MESSAGE: This command may only be issued from system consoles.
      209     5750             DESCRIPTION: Only consoles may use commands like LET LOG.
      210     5751        */
      211     5752        /*E*       ERROR: QQA-E$RU_AND_U-C
      212     5753
      213     5754                 MESSAGE: RUNUNIT command must immediately follow the UNDER command
      214     5755             DESCRIPTION: The command following an UNDER command for a station
      215     5756                          was not a RUNUNIT command.
      216     5757        */
      217     5758        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:10   
              5775    1   /***************************************************************************
              5776    1    *                                                                         *
              5777    1    *                                    FPTs                                 *
              5778    1    *                                                                         *
              5779    1    ***************************************************************************/

      218     5783        %FPT_WRITE(FPTN=FPT_WRITE_SEQ, DCB=M$TPCMD);
      219     5814        %PAGE(ARG="QQA$CMD", PAGE=YES);

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:11   
              5831    1   /***************************************************************************
              5832    1    *                                                                         *
              5833    1    *                                  QQA$CMD                                *
              5834    1    *                                                                         *
              5835    1    ***************************************************************************/

      220     5839    1           IF QQ_GLOBAL.TERMINATE THEN
      221     5840    2             DO;
      222     5841    2               GOTO RET;
      223     5842    2             END;
      224     5843
      225     5844    1           P_PCB.TEXT$ = QQ_CMDBLK.TEXT$;
      226     5845    1           P_PCB.ROOT$ = QQ_NODES$(0);
      227     5846    1           P_PCB.WORK$ = ADDR(PARSE_WORK);
      228     5847    1           P_PCB.WKSZ = SIZEW(PARSE_WORK);
      229     5848    1           P_PCB.NCHARS = QQ_CMDBLK.ARS;
      230     5849    1           QQ_CMDBLK.CODE = 0;
      231     5850    1           QQ_CMDBLK.FLAGS = '0'B;
      232     5851    1           CALL X$PARSE(P_PCB) ALTRET(PARSE_ERR);
      233     5852
      234     5853    1           QQ_CMDBLK.CODE = P_PCB.OUT$ -> OUT$BLK.CODE;
      235     5854    1           IF QQ_CMDFLAGS.INFO.TREE#(QQ_CMDBLK.CODE) ~= 0 THEN
      236     5855    2             DO;
      237     5856    2               P_PCB.ROOT$ = QQ_NODES$(QQ_CMDFLAGS.INFO.TREE#(QQ_CMDBLK.CODE));
      238     5857    2               CALL X$PARSE(P_PCB) ALTRET(PARSE_ERR);
      239     5858    2             END;
      240     5859
      241     5860    1           QQ_CMDBLK.CODE = P_PCB.OUT$ -> OUT$BLK.CODE;
      242     5861    1           QQ_CMDBLK.OUT$ = P_PCB.OUT$;
      243     5862    1           CMDFLAGS = QQ_CMDFLAGS.INFO(QQ_CMDBLK.CODE);
      244     5863
      245     5864    1           IF QQ_CMDBLK.ORIGIN ~= 2 THEN   /* not initialization                 */
      246     5865    1             IF QQ_CMDBLK.S$->TP$STATION.FLAGS.UNDER_SET THEN
      247     5866    2               IF QQ_CMDBLK.CODE ~= 57 /* RU CMD */ THEN DO;
      248     5867    2                   QQ_CMDBLK.S$->TP$STATION.FLAGS.UNDER_SET = '0'B;
      249     5868    2                   QQ_CMDBLK.MINOR_ERR = CODE_RU_AND_U;
      250     5869    2                   GOTO PRINT_ERR;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:12   
      251     5870    2                 END;
      252     5871    1           IF QQ_CMDBLK.CODE ~= 52 /* QUEST ?*/ THEN
      253     5872    2             DO;
      254     5873    2               ERR = CODE_NULL;
      255     5874    2               ERR.CODE = QQ_CMDBLK.CODE;
      256     5875    2               QQ_CMDBLK.MAJOR_ERR = ERR;
      257     5876    2               QQ_CMDBLK.MINOR_ERR = '0'B;
      258     5877    2               QQ_CMDBLK.MAJOR_ERR_USED = '0'B;
      259     5878    2             END;
      260     5879
      261     5880    1           IF CMDFLAGS.INFO.NOTIMP# THEN
      262     5881    2             DO;
      263     5882    2               QQ_CMDBLK.MINOR_ERR = CODE_NOTIMP;
      264     5883    2               GOTO PRINT_ERR;
      265     5884    2             END;
      266     5885
      267     5886    2           DO CASE(QQ_CMDBLK.ORIGIN);
      268     5887
      269     5888    2             CASE(1 /* ORIGIN_STATION */);
      270     5889
      271     5890    2               IF CMDFLAGS.INFO.INITONLY# THEN
      272     5891    3                 DO;
      273     5892    3                   QQ_CMDBLK.MINOR_ERR = CODE_INITONLY;
      274     5893    3                   GOTO PRINT_ERR;
      275     5894    3                 END;
      276     5895
      277     5896    2               IF CMDFLAGS.INFO.PRIVREQ# AND
      278     5897    2                   NOT QQ_CMDBLK.S$ -> TP$STATION.FLAGS.PRIV THEN
      279     5898    3                 DO;
      280     5899    3                   QQ_CMDBLK.MINOR_ERR = CODE_PRIVREQ;
      281     5900    3                   GOTO PRINT_ERR;
      282     5901    3                 END;
      283     5902
      284     5903    2               IF CMDFLAGS.INFO.CONSOLESONLY# THEN
      285     5904    3                 DO;
      286     5905    3                   QQ_CMDBLK.MINOR_ERR = CODE_CONSONLY;
      287     5906    3                   GOTO PRINT_ERR;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:13   
      288     5907    3                 END;
      289     5908    2               IF CMDFLAGS.INFO.PRIVREQ# THEN
      290     5909    3                 DO;
      291     5910    3                   CALL QQC$BLDMSG_BLK(MSGBLK);
      292     5911    3                   MSGBLK.FLAGS.DEST.STATION = '0'B;
      293     5912    3                   MSGBLK.FLAGS.DEST.DODCB = '1'B;
      294     5913    3                   UPBUF = QQ_CMDBLK.S$->TP$STATION.ID;
      295     5914    3                   POS = 7;
      296     5915    4                   DO WHILE (POS > 0);
      297     5916    4                     IF SUBSTR(UPBUF,POS,1) ~= ' ' THEN
      298     5917    4                       GOTO END_STATION_MSG;
      299     5918    4                     POS = POS - 1;
      300     5919    4                   END;
      301     5920    3   END_STATION_MSG:
      302     5921    3                   SUBSTR(UPBUF,POS+1,1) = ':';
      303     5922    3                   POS = POS +3;
      304     5923    3                   CHAR_STRING_SIZE = QQ_CMDBLK.ARS;
      305     5924    3                   PINCRC(ADDR(UPBUF),POS)->CHAR$STRING = QQ_CMDBLK.TEXT$->CHAR$STRING;
      306     5925    3                   MSGBLK.TEXT$ = ADDR(UPBUF);
      307     5926    3                   MSGBLK.ARS = CHAR_STRING_SIZE + POS;
      308     5927    3                   CALL QQC$SNDMSG(MSGBLK);
      309     5928    3                 END;
      310     5929
      311     5930    2             CASE(2 /* ORIGIN_INIT */);
      312     5931
      313     5932    2               IF QQ_GLOBAL.INIT_PASS = 0 AND CMDFLAGS.INFO.PASS# > 0 THEN
      314     5933    3                 DO;
      315     5934    3                   QQ_GLOBAL.PASS1_CMDS = '1'B;
      316     5935    3                   FPT_WRITE_SEQ.BUF_.BOUND = QQ_CMDBLK.ARS - 1;
      317     5936    3                   FPT_WRITE_SEQ.BUF_.BUF$ = QQ_CMDBLK.TEXT$;
      318     5937    3                   CALL M$WRITE(FPT_WRITE_SEQ) ALTRET(MON_ERR);
      319     5938    3                   GOTO RET;
      320     5939    3                 END;
      321     5940    2               CALL QQC$BLDMSG_BLK(MSGBLK);
      322     5941    2               MSGBLK.CODECNT = 0;
      323     5942    2               MSGBLK.TEXT$ = QQ_CMDBLK.TEXT$;
      324     5943    2               MSGBLK.ARS = QQ_CMDBLK.ARS;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:14   
      325     5944    2               CALL QQC$BLDMSG(MSGBLK);
      326     5945    2               QQ_GLOBAL.ERROR_CNT = QQ_GLOBAL.ERROR_CNT - 1;
      327     5946
      328     5947    2               IF CMDFLAGS.INFO.RUNONLY# THEN
      329     5948    3                 DO;
      330     5949    3                   QQ_CMDBLK.MINOR_ERR = CODE_RUNONLY;
      331     5950    3                   GOTO PRINT_ERR;
      332     5951    3                 END;
      333     5952
      334     5953    2               IF CMDFLAGS.INFO.ONCEONLY# AND CMDFLAGS.INFO.BEENUSED# THEN
      335     5954    3                 DO;
      336     5955    3                   QQ_CMDBLK.MINOR_ERR = CODE_BEENUSED;
      337     5956    3                   CALL QQC$BLDMSG_BLK(MSGBLK);
      338     5957    3                   CALL QQC$BLDMSG(MSGBLK);
      339     5958    3                 END;
      340     5959
      341     5960    2               QQ_CMDFLAGS.INFO.BEENUSED#(QQ_CMDBLK.CODE) = '1'B;
      342     5961
      343     5962    2             CASE(3 /* ORIGIN_CSCG */);
      344     5963
      345     5964    2               IF CMDFLAGS.INFO.INITONLY# THEN
      346     5965    3                 DO;
      347     5966    3                   QQ_CMDBLK.MINOR_ERR = CODE_INITONLY;
      348     5967    3                   GOTO PRINT_ERR;
      349     5968    3                 END;
      350     5969
      351     5970    2               IF NOT CMDFLAGS.INFO.CONSOLESOK# THEN
      352     5971    3                 DO;
      353     5972    3                   QQ_CMDBLK.MINOR_ERR = CODE_NOCONSOLES;
      354     5973    3                   GOTO PRINT_ERR;
      355     5974    3                 END;
      356     5975    2               IF CMDFLAGS.INFO.PRIVREQ# THEN
      357     5976    3                 DO;
      358     5977    3                   CALL QQC$BLDMSG_BLK(MSGBLK);
      359     5978    3                   MSGBLK.FLAGS.DEST.ONECONSOLE= '0'B;
      360     5979    3                   MSGBLK.FLAGS.DEST.DODCB = '1'B;
      361     5980    3                   UPBUF = 'KEYIN:';
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:15   
      362     5981    3                   POS = 8;
      363     5982    3                   CHAR_STRING_SIZE = QQ_CMDBLK.ARS;
      364     5983    3                   PINCRC(ADDR(UPBUF),POS)->CHAR$STRING = QQ_CMDBLK.TEXT$->CHAR$STRING;
      365     5984    3                   MSGBLK.TEXT$ = ADDR(UPBUF);
      366     5985    3                   MSGBLK.ARS = CHAR_STRING_SIZE + POS;
      367     5986    3                   CALL QQC$SNDMSG(MSGBLK);
      368     5987    3                 END;
      369     5988
      370     5989    2           END /* CASE */;
      371     5990        %EJECT;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:16   
      372     5991    1           QQ_GLOBAL.CMD_CNT = QQ_GLOBAL.CMD_CNT + 1;
      373     5992
      374     5993    2           DO CASE(QQ_CMDBLK.CODE);
      375     5994    2             CASE(1 /* NULL */);
      376     5995
      377     5996    2             CASE(3 /* ASSIST */);
      378     5997    2               CALL QQB$ASSIST;
      379     5998
      380     5999    2             CASE(4 /* BEGIN */, 8 /* DEBUG */);
      381     6000    2               CALL QQB$BEGIN;
      382     6001
      383     6002    2             CASE(6 /* CANCEL */, 14 /* ERASE */);
      384     6003    2               CALL QQB$CANCEL;
      385     6004
      386     6005    2             CASE(7 /* CHECK */);
      387     6006    2               CALL QQB$CHECK;
      388     6007
      389     6008    2             CASE(9 /* SWITCH */);
      390     6009    2               CALL QQB$DELIVER;
      391     6010
      392     6011    2             CASE(10 /* DISABLE */, 12 /* ENABLE */);
      393     6012    2               CALL QQB$DISEN;
      394     6013
      395     6014    2             CASE(11 /* DISPLAY */);
      396     6015    2               CALL QQB$DISPLAY;
      397     6016
      398     6017    2             CASE(13 /* HOLD */, 45 /* RELEASE */);
      399     6018    2               CALL QQB$HOLD;
      400     6019
      401     6020    2             CASE(15 /* HELP */, 52 /* QUEST ?*/, 53 /* DBL_QUEST ??*/);
      402     6021    2               CALL QQB$HELP;
      403     6022
      404     6023    2             CASE(16 /* KILL */);
      405     6024    2               CALL QQB$KILL;
      406     6025
      407     6026    2             CASE(18 /* LET_ACCOUNTING */,
      408     6027    2                   19 /* LET_CGPAGEMAX */,
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:17   
      409     6028    2                   20 /* LET_CGPAGEMIN */,
      410     6029    2                   21 /* LET_CGSIZEMAX */,
      411     6030    2                   22 /* LET_DCBCON */,
      412     6031    2                   23 /* LET_HISTORY */,
      413     6032    2                   24 /* LET_IXTNSIZE */,
      414     6033    2                   25 /* LET_JOURNAL */,
      415     6034    2                   26 /* LET_LOG */,
      416     6035    2                   27 /* LET_MCTID */,
      417     6036    2                   28 /* LET_NEWCG */,
      418     6037    2                   29 /* LET_POOLSIZE */,
      419     6038    2                   30 /* LET_DISKWARN */,
      420     6039    2                   31 /* LET_STATIONMAX */,
      421     6040    2                   32 /* LET_MEMWARN */,
      422     6041    2                   33 /* LET_TPCPRU */,
      423     6042    2                   34 /* LET_TPUINITIAL */,
      424     6043    2                   35 /* LET_TPUMAX */,
      425     6044    2                   36 /* LET_TPUMIN */,
      426     6045    2                   37 /* LET_CFPRU */,
      427     6046    2                   38 /* LET_XTNSIZE */,
      428     6047    2                   39 /* LET_TPHEAD */);
      429     6048    2               IF (QQ_CMDBLK.CODE = 23 /* LET_HISTORY */ OR
      430     6049    2                   QQ_CMDBLK.CODE = 33 /* LET_TPCPRU */) AND
      431     6050    2                   (B$JIT$ -> B$JIT.SWITCH ~= '124105123124'O) THEN
      432     6051    3                 DO;
      433     6052    3                   P_PCB.ERROR.CODE = 1;
      434     6053    3                   GOTO PARSE_ERR;
      435     6054    3                 END;
      436     6055        /* We test the pseudo switches to make sure that they are the octal
      437     6056           representation of 'TEST'.  This may be set by the IBEX "SWITCH"
      438     6057           command.  We do this for various commands.                                 */
      439     6058    2               CALL QQB$LET;
      440     6059
      441     6060    2             CASE(59 /* MESSAGE */);
      442     6061    2               CALL QQB$MESSAGE;
      443     6062
      444     6063    2             CASE(5 /* BYE */, 40 /* OFF */);
      445     6064    2               CALL QQB$OFF;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:18   
      446     6065
      447     6066    2             CASE(41 /* PASSWORD */);
      448     6067    2               CALL QQB$PASSWORD;
      449     6068
      450     6069    2             CASE(42 /* PRIORITY */);
      451     6070    2               CALL QQB$PRIO;
      452     6071
      453     6072    2             CASE(43 /* PROFILE */);
      454     6073    2               CALL QQB$PROFILE;
      455     6074
      456     6075    2             CASE(44 /* READ */);
      457     6076    2               CALL QQB$READ;
      458     6077
      459     6078    2             CASE(47 /* SPY */);
      460     6079    2               CALL QQB$SPY;
      461     6080
      462     6081    2             CASE(48 /* STATS */);
      463     6082    2               CALL QQB$STATS;
      464     6083
      465     6084    2             CASE(50 /* STOPTP */);
      466     6085    2               CALL QQB$STOPTP;
      467     6086
      468     6087    2             CASE(51 /* TRANSACTION */);
      469     6088    2               CALL QQB$TRANS;
      470     6089
      471     6090    2             CASE(54 /* TIME */);
      472     6091    2               CALL QQB$TIME;
      473     6092
      474     6093    2             CASE(55 /* ERSEND CMD*/);
      475     6094    2               CALL QQB$ERSEND;
      476     6095    2             CASE(57 /* RU CMD */);
      477     6096    2               IF SUBSTR(QQ_CMDBLK.OUT$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT,0,1) = '?'
              6096                        THEN
      478     6097    2                 CALL QQB$HELP;
      479     6098    2               ELSE
      480     6099    2                 CALL QQB$START;
      481     6100    2             CASE(56 /* START CMD */);
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:19   
      482     6101    2               CALL QQB$START;
      483     6102    2             CASE(58 /* UNDER CMD*/);
      484     6103    2               CALL QQB$UNDER;
      485     6104    2           END /* CASE */;
      486     6105    1           GOTO RET;
      487     6106        %EJECT;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:20   
      488     6107    1   PARSE_ERR:
      489     6108    1           IF QQ_CMDBLK.ORIGIN = 2 /* ORIGIN_INIT */ THEN
      490     6109    2             DO;
      491     6110    2               CALL QQC$BLDMSG_BLK(MSGBLK);
      492     6111    2               MSGBLK.CODECNT = 0;
      493     6112    2               MSGBLK.TEXT$ = QQ_CMDBLK.TEXT$;
      494     6113    2               MSGBLK.ARS = QQ_CMDBLK.ARS;
      495     6114    2               CALL QQC$BLDMSG(MSGBLK);
      496     6115    2               QQ_GLOBAL.ERROR_CNT = QQ_GLOBAL.ERROR_CNT - 1;
      497     6116    2             END;
      498     6117
      499     6118    1           ERR = P_PCB.ERROR;
      500     6119    1           IF ERR.CODE ~= 1 THEN
      501     6120    2             DO;
      502     6121    2               P_PCB.HI_CHAR = 0;
      503     6122    2               QQ_CMDBLK.MINOR_ERR = ERR;
      504     6123    2             END;
      505     6124    1           ELSE
      506     6125    2             DO;
      507     6126    2               IF QQ_CMDBLK.CODE = 0 THEN
      508     6127    3                 DO;
      509     6128    3                   QQ_CMDBLK.MINOR_ERR = CODE_EH;
      510     6129    3                 END;
      511     6130    2               ELSE
      512     6131    3                 DO;
      513     6132    3                   QQ_CMDBLK.MINOR_ERR = CODE_SYNTAX_ERR;
      514     6133    3                   ERR = CODE_NULL;
      515     6134    3                   ERR.CODE = QQ_CMDBLK.CODE;
      516     6135    3                   QQ_CMDBLK.MAJOR_ERR = ERR;
      517     6136    3                   QQ_CMDBLK.FLAGS.ERR = '1'B;
      518     6137    3                 END;
      519     6138    2             END;
      520     6139
      521     6140    1           CALL QQC$BLDMSG_BLK(MSGBLK);
      522     6141    1           UPBUF = ' ';
      523     6142    1           CHAR_STRING_SIZE = 1;
      524     6143    1           PINCRC(ADDR(UPBUF), P_PCB.HI_CHAR+2) -> CHAR$STRING = '^';
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:21   
      525     6144    1           MSGBLK.TEXT$ = ADDR(UPBUF);
      526     6145    1           MSGBLK.ARS = P_PCB.HI_CHAR + 3;
      527     6146    1           CALL QQC$BLDMSG(MSGBLK);
      528     6147    1           GOTO RET;
      529     6148
      530     6149    1   PRINT_ERR:
      531     6150    1           CALL QQC$BLDMSG_BLK(MSGBLK);
      532     6151    1           CALL QQC$BLDMSG(MSGBLK);
      533     6152
      534     6153    1   RET:
      535     6154    1           RETURN;
      536     6155
      537     6156    1   MON_ERR:
      538     6157    1           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      539     6158    1           CALL QQC$SCREECH;
      540     6159
      541     6160    1   END QQA$CMD;

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:22   
--  Include file information  --

   Q_ERRCODE_C.:E05TOU  is referenced.
   QQ_PERR_C.:E05TOU  is referenced.
   QQ_CMDFLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   QQ_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQA$CMD.

   Procedure QQA$CMD requires 589 words for executable code.
   Procedure QQA$CMD requires 356 words of local(AUTO) storage.

    No errors detected in file QQA$CMD.:E05TSI    .

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:23   

 Object Unit name= QQA$CMD                                    File name= QQA$CMD.:E05TOU
 UTS= JUL 30 '97 05:21:16.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$TPCMD
    2   Data  even  none    26     32  QQA$CMD
    3  RoData even  UTS     14     16  QQA$CMD
    4   Proc  even  none   589   1115  QQA$CMD
    5  RoData even  none     6      6  QQA$CMD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  QQA$CMD
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:24   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 X$PARSE
         yes           Std       1 QQC$BLDMSG_BLK
         yes           Std       0 QQB$LET
         yes           Std       0 QQB$UNDER
         yes           Std       1 QQC$SNDMSG
         yes           Std       0 QQB$HELP
         yes           Std       0 QQB$BEGIN
         yes           Std       0 QQC$SCREECH
         yes           Std       0 QQB$DISEN
         yes           Std       0 QQB$DISPLAY
         yes           Std       0 QQB$KILL
         yes           Std       0 QQB$SPY
         yes           Std       0 QQB$START
         yes           Std       1 QQC$BLDMSG
         yes           Std       0 QQB$ASSIST
         yes           Std       0 QQB$DELIVER
         yes           Std       0 QQB$MESSAGE
         yes           Std       0 QQB$OFF
         yes           Std       0 QQB$PASSWORD
         yes           Std       0 QQB$ERSEND
         yes           Std       0 QQB$STATS
         yes           Std       0 QQB$READ
         yes           Std       0 QQB$CANCEL
         yes           Std       0 QQB$STOPTP
         yes           Std       0 QQB$TIME
         yes           Std       0 QQB$PRIO
         yes           Std       0 QQB$TRANS
         yes           Std       0 QQB$CHECK
         yes           Std       0 QQB$PROFILE
         yes           Std       0 QQB$HOLD
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:25   
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QQ_CMDBLK                             QQ_GLOBAL
     QQ_NODES$                             QQ_CMDFLAGS                           B$TCB$
     B$JIT$                                M$TPCMD                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:26   


        1        1        /*M* QQA$CMD - Perform initial processing of TP commands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        /*P* NAME:        QQA$CMD
        9        9
       10       10             PURPOSE:     This routine performs all elementary checking of
       11       11                          TP commands.  This includes syntax checking and
       12       12                          security checks.
       13       13        */
       14       14        /*D* NAME:        QQA$CMD
       15       15
       16       16             CALL:        CALL QQA$CMD
       17       17
       18       18             INPUT:       QQ_CMDBLK - Structure describing a command to be
       19       19                          processed.
       20       20
       21       21             OUTPUT:      QQ_CMDBLK - with OUT$ filled in
       22       22
       23       23             DESCRIPTION: QQ_CMDBLK contains all the pertinent information
       24       24                          about a command such as its origin and size in
       25       25                          bytes.  All commands are parsed twice.  The first
       26       26                          "rough" parse is used just to determine if the
       27       27                          command looks like something we know about.
       28       28                          The parse tree QQ_NODES0_D defines the rough
       29       29                          syntax for all of the the TP commands.  From
       30       30                          the first parse we obtain a command number.
       31       31                          This command number is used as an index in
       32       32                          a table of command flags called QQ_CMDFLAGS.
       33       33                          QQ_CMDFLAGS contains information on who
       34       34                          can use a command, which parse tree to use
       35       35                          for the next call to X$PARSE (QQ_NODES1_D or
       36       36                          QQ_NODES2_D) and some other information
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:27   
       37       37                          (see QQ_CMDFLAGS macro).
       38       38
       39       39                          The command is parsed for the second time and
       40       40                          then the processing routine for that particular
       41       41                          command is called.  All of the lower level
       42       42                          processing routines (named QQB$xxx) use
       43       43                          as their input QQ_CMDBLK.  The output of the
       44       44                          parser is stored in QQ_CMDBLK.OUT$.
       45       45
       46       46                          Commands that are processed at initialization
       47       47                          may have to be saved for deferred processing.
       48       48                          A command must be saved for deferred processing
       49       49                          is it needs to use the comgroup or some table
       50       50                          that may not be built at initialization
       51       51                          time.  QQ_CMDFLAGS has the information on
       52       52                          what commands can be processed during which
       53       53                          pass.  If a command can't be processed during
       54       54                          pass zero it is written to a star file.  QQA$INIT
       55       55                          will rewind and reread this star file when the
       56       56                          pass two  commands can be processed.
       57       57        */
       58       58        %EJECT;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:28   
       59       59        QQA$CMD:
       60       60                PROC;

     60  4 000000   000000 700200 xent  QQA$CMD      TSX0  ! X66_AUTO_0
         4 000001   000544 000000                    ZERO    356,0

       61       61
       62       62        %INCLUDE Q_PAGE_C;
       63       94        %SET LISTEXP = '1'B;
       64       95        %PAGE(ARG="Includes");

               112        /***************************************************************************
               113         *                                                                         *
               114         *                                  Includes                               *
               115         *                                                                         *
               116         ***************************************************************************/

       65      120        %INCLUDE CP_6;
       66      201        %INCLUDE B$JIT;
       67      491        %INCLUDE XU_PERR_C;
       68      682        %INCLUDE XU_MACRO_C;
       69     3788        %INCLUDE QQ_SUBS_C;
       70     3980        %INCLUDE QQ_MACROS_C;
       71     4405        %INCLUDE QQ_DATA_R;
       72     4651        %INCLUDE QQ_CMDFLAGS_R;
       73     4705        %INCLUDE QQ_PERR_C;
       74     4866        %INCLUDE Q_ERRCODE_C;
       75     4889        %PAGE(ARG="Externally defined routines");

              4906    1   /***************************************************************************
              4907    1    *                                                                         *
              4908    1    *                        Externally defined routines                      *
              4909    1    *                                                                         *
              4910    1    ***************************************************************************/

       76     4914    1   DCL X$PARSE ENTRY(1) ALTRET;
       77     4915    1   DCL QQB$ASSIST ENTRY;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:29   
       78     4916    1   DCL QQB$BEGIN ENTRY;
       79     4917    1   DCL QQB$CANCEL ENTRY;
       80     4918    1   DCL QQB$CHECK ENTRY;
       81     4919    1   DCL QQB$DELIVER ENTRY;
       82     4920    1   DCL QQB$DISEN ENTRY;
       83     4921    1   DCL QQB$DISPLAY ENTRY;
       84     4922    1   DCL   QQB$ERSEND ENTRY;
       85     4923    1   DCL QQB$HELP ENTRY;
       86     4924    1   DCL QQB$HOLD ENTRY;
       87     4925    1   DCL QQB$KILL ENTRY;
       88     4926    1   DCL QQB$LET ENTRY;
       89     4927    1   DCL QQB$MESSAGE ENTRY;
       90     4928    1   DCL QQB$OFF ENTRY;
       91     4929    1   DCL QQB$PASSWORD ENTRY;
       92     4930    1   DCL QQB$PRIO ENTRY;
       93     4931    1   DCL QQB$PROFILE ENTRY;
       94     4932    1   DCL QQB$READ ENTRY;
       95     4933    1   DCL QQB$SPY ENTRY;
       96     4934    1   DCL QQB$START ENTRY;
       97     4935    1   DCL QQB$STATS ENTRY;
       98     4936    1   DCL QQB$STOPTP ENTRY;
       99     4937    1   DCL QQB$TIME ENTRY;
      100     4938    1   DCL QQB$TRANS ENTRY;
      101     4939    1   DCL QQB$UNDER ENTRY;
      102     4940    1   DCL QQC$BLDMSG_BLK ENTRY(1);
      103     4941    1   DCL QQC$BLDMSG ENTRY(1);
      104     4942    1   DCL QQC$SNDMSG ENTRY(1);
      105     4943    1   DCL QQC$SCREECH ENTRY;
      106     4944        %PAGE(ARG="Symrefs");

              4961    1   /***************************************************************************
              4962    1    *                                                                         *
              4963    1    *                                  Symrefs                                *
              4964    1    *                                                                         *
              4965    1    ***************************************************************************/

      107     4969    1   DCL B$TCB$ PTR SYMREF;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:30   
      108     4970    1   DCL B$JIT$ PTR SYMREF;
      109     4971        %PAGE(ARG="DCBs");

              4988    1   /***************************************************************************
              4989    1    *                                                                         *
              4990    1    *                                    DCBs                                 *
              4991    1    *                                                                         *
              4992    1    ***************************************************************************/

      110     4996    1   DCL M$TPCMD DCB;
      111     4997        %PAGE(ARG="Based");

              5014    1   /***************************************************************************
              5015    1    *                                                                         *
              5016    1    *                                   Based                                 *
              5017    1    *                                                                         *
              5018    1    ***************************************************************************/

      112     5022        %B$TCB;
      113     5025        %B$ALT;
      114     5033        %TP$STATION;
      115     5106        %PARSE$OUT (STCLASS=BASED);
      116     5151        %PARSE$SYM (STCLASS=BASED);
      117     5189    1   DCL CHAR$STRING CHAR(CHAR_STRING_SIZE) BASED;
      118     5190        %PAGE(ARG="Static");

              5207    1   /***************************************************************************
              5208    1    *                                                                         *
              5209    1    *                                   Static                                *
              5210    1    *                                                                         *
              5211    1    ***************************************************************************/

      119     5215        %P_PCB(STCLASS=STATIC);
      120     5414        %PAGE(ARG="Auto");

              5431    1   /***************************************************************************
              5432    1    *                                                                         *
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:31   
              5433    1    *                                    Auto                                 *
              5434    1    *                                                                         *
              5435    1    ***************************************************************************/

      121     5439        %MSGBLK;
      122     5529    1   DCL 1 CMDFLAGS,
      123     5530    1         2 INFO,
      124     5531        %CMD_FLAGS (STCLASS=, LVL=3, LAST=";");
      125     5576    1   DCL CHAR_STRING_SIZE UBIN WORD;
      126     5577    1   DCL UPBUF CHAR(90);
      127     5578    1   DCL POS SBIN WORD;
      128     5579    1   DCL 1 ERR,
      129     5580    1         2 FCG BIT(12) UNAL,
      130     5581    1         2 MID BIT(6) UNAL,
      131     5582    1         2 MON BIT(1) UNAL,
      132     5583    1         2 CODE UBIN(14) UNAL,
      133     5584    1         2 SEV UBIN(3) UNAL;
      134     5585
      135     5586    1   DCL PARSE_WORK(0:299) UBIN WORD;
      136     5587        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:32   
              5604    1   /***************************************************************************
              5605    1    *                                                                         *
              5606    1    *                                Error codes                              *
              5607    1    *                                                                         *
              5608    1    ***************************************************************************/

      137     5612        %ERRCODE(NAME=CODE_NULL, FCG#=%FCG_QQ, MID#=%MID_A);
      138     5619        %ERRCODE(NAME=CODE_NOTIMP, CODE#=%E$NOTIMP, FCG#=%FCG_QQ, MID#=%MID_A);
      139     5626        %ERRCODE(NAME=CODE_INITONLY, CODE#=%E$INITONLY, FCG#=%FCG_QQ, MID#=%MID_A);
      140     5633        %ERRCODE(NAME=CODE_RUNONLY, CODE#=%E$RUNONLY, FCG#=%FCG_QQ, MID#=%MID_A);
      141     5640        %ERRCODE(NAME=CODE_BEENUSED, CODE#=%E$BEENUSED, FCG#=%FCG_QQ, MID#=%MID_A);
      142     5647        %ERRCODE(NAME=CODE_EH, CODE#=%E$EH, FCG#=%FCG_QQ, MID#=%MID_A);
      143     5654        %ERRCODE(NAME=CODE_PRIVREQ, CODE#=%E$PRIVREQ, FCG#=%FCG_QQ, MID#=%MID_A);
      144     5661        %ERRCODE(NAME=CODE_SYNTAX_ERR, CODE#=%E$SYNTAX_ERR, FCG#=%FCG_QQ, MID#=%MID_A);
      145     5668        %ERRCODE(NAME=CODE_NOCONSOLES, CODE#=%E$NOCONSOLES, FCG#=%FCG_QQ, MID#=%MID_A);
      146     5675        %ERRCODE(NAME=CODE_CONSONLY, CODE#=%E$CONSONLY, FCG#=%FCG_QQ, MID#=%MID_A);
      147     5682        %ERRCODE(NAME=CODE_RU_AND_U, CODE#=%E$RU_AND_U, FCG#=%FCG_QQ, MID#=%MID_A);
      148     5689
      149     5690        /*E*       ERROR: QQA-E$NOTIMP-C
      150     5691
      151     5692                 MESSAGE: This command has not been implemented.
      152     5693             DESCRIPTION: The specified command has not been implemented.
      153     5694        */
      154     5695        /*E*       ERROR: QQA-E$INITONLY-C
      155     5696
      156     5697                 MESSAGE: This command can only be used at TP initialization.
      157     5698             DESCRIPTION: The specified command can only be used while
      158     5699                          an instance of TP is being initialized.
      159     5700        */
      160     5701        /*E*       ERROR: QQA-E$RUNONLY-C
      161     5702
      162     5703                 MESSAGE: This command can only be used after TP initialization
      163     5704                          has been completed.
      164     5705             DESCRIPTION: The specified command can not be used during
      165     5706                          the initialization phase.
      166     5707        */
      167     5708        /*E*       ERROR: QQA-E$BEENUSED-C
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:33   
      168     5709
      169     5710                 MESSAGE: Warning:  this command has been used more than
      170     5711                          once during TP initialization.  The most
      171     5712                          recent value specified has been used.
      172     5713             DESCRIPTION: It does not make sense to use the LET commands
      173     5714                          for control variables more than once during
      174     5715                          initialization.  As a service to the user
      175     5716                          he will just be warned of the condition.
      176     5717                          For example: LET TESTMODE ON  LET TESTMODE OFF
      177     5718        */
      178     5719        /*E*       ERROR: QQA-E$EH-C
      179     5720
      180     5721                 MESSAGE: Eh?
      181     5722             DESCRIPTION: When the parser fails to match anything
      182     5723                          from the command string this diagnostic is
      183     5724                          returned.
      184     5725        */
      185     5726        /*E*       ERROR: QQA-E$PRIVREQ-C
      186     5727
      187     5728                 MESSAGE: You do not have sufficient privilege to
      188     5729                          use this command.
      189     5730             DESCRIPTION: Privilege is required to use this command.
      190     5731                          To use this command you must either be an
      191     5732                          MCT or be privileged.
      192     5733        */
      193     5734        /*E*       ERROR: QQA-E$SYNTAX_ERR-C
      194     5735
      195     5736                 MESSAGE: Syntax error
      196     5737             DESCRIPTION: The parser recognized some portion of the
      197     5738                          command string but the command is not a
      198     5739                          valid one.
      199     5740        */
      200     5741        /*E*       ERROR: QQA-E$NOCONSOLES-C
      201     5742
      202     5743                 MESSAGE: This command can not be used from TP consoles.
      203     5744             DESCRIPTION: Operator consoles are not permitted to use
      204     5745                          commands like BEGIN and OFF
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:34   
      205     5746        */
      206     5747        /*E*       ERROR: QQA-E$CONSONLY-C
      207     5748
      208     5749                 MESSAGE: This command may only be issued from system consoles.
      209     5750             DESCRIPTION: Only consoles may use commands like LET LOG.
      210     5751        */
      211     5752        /*E*       ERROR: QQA-E$RU_AND_U-C
      212     5753
      213     5754                 MESSAGE: RUNUNIT command must immediately follow the UNDER command
      214     5755             DESCRIPTION: The command following an UNDER command for a station
      215     5756                          was not a RUNUNIT command.
      216     5757        */
      217     5758        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:35   
              5775    1   /***************************************************************************
              5776    1    *                                                                         *
              5777    1    *                                    FPTs                                 *
              5778    1    *                                                                         *
              5779    1    ***************************************************************************/

      218     5783        %FPT_WRITE(FPTN=FPT_WRITE_SEQ, DCB=M$TPCMD);
      219     5814        %PAGE(ARG="QQA$CMD", PAGE=YES);

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:36   
              5831    1   /***************************************************************************
              5832    1    *                                                                         *
              5833    1    *                                  QQA$CMD                                *
              5834    1    *                                                                         *
              5835    1    ***************************************************************************/

      220     5839    1           IF QQ_GLOBAL.TERMINATE THEN

   5839  4 000002   000015 234000 xsym               SZN     QQ_GLOBAL+13
         4 000003   000005 605000 4                  TPL     s:5844

      221     5840    2             DO;

      222     5841    2               GOTO RET;

   5841  4 000004   001104 710000 4                  TRA     RET

      223     5842    2             END;
      224     5843
      225     5844    1           P_PCB.TEXT$ = QQ_CMDBLK.TEXT$;

   5844  4 000005   000003 236000 xsym               LDQ     QQ_CMDBLK+3
         4 000006   000000 756000 2                  STQ     P_PCB

      226     5845    1           P_PCB.ROOT$ = QQ_NODES$(0);

   5845  4 000007   000000 236000 xsym               LDQ     QQ_NODES$
         4 000010   000001 756000 2                  STQ     P_PCB+1

      227     5846    1           P_PCB.WORK$ = ADDR(PARSE_WORK);

   5846  4 000011   200066 630500                    EPPR0   PARSE_WORK,,AUTO
         4 000012   000002 450400 2                  STP0    P_PCB+2

      228     5847    1           P_PCB.WKSZ = SIZEW(PARSE_WORK);

   5847  4 000013   000454 220003                    LDX0    300,DU
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:37   
         4 000014   000005 740000 2                  STX0    P_PCB+5

      229     5848    1           P_PCB.NCHARS = QQ_CMDBLK.ARS;

   5848  4 000015   000007 236000 xsym               LDQ     QQ_CMDBLK+7
         4 000016   000022 736000                    QLS     18
         4 000017   000022 732000                    QRS     18
         4 000020   000011 756000 2                  STQ     P_PCB+9

      230     5849    1           QQ_CMDBLK.CODE = 0;

   5849  4 000021   000006 450000 xsym               STZ     QQ_CMDBLK+6

      231     5850    1           QQ_CMDBLK.FLAGS = '0'B;

   5850  4 000022   000000 236003                    LDQ     0,DU
         4 000023   000010 552010 xsym               STBQ    QQ_CMDBLK+8,'10'O

      232     5851    1           CALL X$PARSE(P_PCB) ALTRET(PARSE_ERR);

   5851  4 000024   000000 630400 5                  EPPR0   0
         4 000025   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000026   000000 701000 xent               TSX1    X$PARSE
         4 000027   000751 702000 4                  TSX2    PARSE_ERR

      233     5852
      234     5853    1           QQ_CMDBLK.CODE = P_PCB.OUT$ -> OUT$BLK.CODE;

   5853  4 000030   000003 470400 2                  LDP0    P_PCB+3
         4 000031   000000 236100                    LDQ     0,,PR0
         4 000032   777777 376007                    ANQ     -1,DL
         4 000033   000006 756000 xsym               STQ     QQ_CMDBLK+6

      235     5854    1           IF QQ_CMDFLAGS.INFO.TREE#(QQ_CMDBLK.CODE) ~= 0 THEN

   5854  4 000034   000003 402007                    MPY     3,DL
         4 000035   000000 236006 xsym               LDQ     QQ_CMDFLAGS,QL
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:38   
         4 000036   000700 316003                    CANQ    448,DU
         4 000037   000053 600000 4                  TZE     s:5860

      236     5855    2             DO;

      237     5856    2               P_PCB.ROOT$ = QQ_NODES$(QQ_CMDFLAGS.INFO.TREE#(QQ_CMDBLK.CODE));

   5856  4 000040   000006 236000 xsym               LDQ     QQ_CMDBLK+6
         4 000041   000003 402007                    MPY     3,DL
         4 000042   000000 236006 xsym               LDQ     QQ_CMDFLAGS,QL
         4 000043   000030 772000                    QRL     24
         4 000044   000007 376007                    ANQ     7,DL
         4 000045   000000 236006 xsym               LDQ     QQ_NODES$,QL
         4 000046   000001 756000 2                  STQ     P_PCB+1

      238     5857    2               CALL X$PARSE(P_PCB) ALTRET(PARSE_ERR);

   5857  4 000047   000000 630400 5                  EPPR0   0
         4 000050   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000051   000000 701000 xent               TSX1    X$PARSE
         4 000052   000751 702000 4                  TSX2    PARSE_ERR

      239     5858    2             END;

      240     5859
      241     5860    1           QQ_CMDBLK.CODE = P_PCB.OUT$ -> OUT$BLK.CODE;

   5860  4 000053   000003 470400 2                  LDP0    P_PCB+3
         4 000054   000000 236100                    LDQ     0,,PR0
         4 000055   777777 376007                    ANQ     -1,DL
         4 000056   000006 756000 xsym               STQ     QQ_CMDBLK+6

      242     5861    1           QQ_CMDBLK.OUT$ = P_PCB.OUT$;

   5861  4 000057   000003 236000 2                  LDQ     P_PCB+3
         4 000060   000005 756000 xsym               STQ     QQ_CMDBLK+5

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:39   
      243     5862    1           CMDFLAGS = QQ_CMDFLAGS.INFO(QQ_CMDBLK.CODE);

   5862  4 000061   000006 236000 xsym               LDQ     QQ_CMDBLK+6
         4 000062   000014 402007                    MPY     12,DL
         4 000063   000100 100406                    MLR     fill='000'O
         4 000064   000000 000014 xsym               ADSC9   QQ_CMDFLAGS,Q            cn=0,n=12
         4 000065   200031 000014                    ADSC9   CMDFLAGS,,AUTO           cn=0,n=12

      244     5863
      245     5864    1           IF QQ_CMDBLK.ORIGIN ~= 2 THEN   /* not initialization                 */

   5864  4 000066   000007 220000 xsym               LDX0    QQ_CMDBLK+7
         4 000067   000002 100003                    CMPX0   2,DU
         4 000070   000104 600000 4                  TZE     s:5871

      246     5865    1             IF QQ_CMDBLK.S$->TP$STATION.FLAGS.UNDER_SET THEN

   5865  4 000071   000004 471400 xsym               LDP1    QQ_CMDBLK+4
         4 000072   100023 234100                    SZN     19,,PR1
         4 000073   000104 605000 4                  TPL     s:5871

      247     5866    2               IF QQ_CMDBLK.CODE ~= 57 /* RU CMD */ THEN DO;

   5866  4 000074   000006 235000 xsym               LDA     QQ_CMDBLK+6
         4 000075   000071 115007                    CMPA    57,DL
         4 000076   000104 600000 4                  TZE     s:5871

      248     5867    2                   QQ_CMDBLK.S$->TP$STATION.FLAGS.UNDER_SET = '0'B;

   5867  4 000077   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 000100   100023 356100                    ANSQ    19,,PR1

      249     5868    2                   QQ_CMDBLK.MINOR_ERR = CODE_RU_AND_U;

   5868  4 000101   000012 236000 3                  LDQ     CODE_RU_AND_U
         4 000102   000001 756000 xsym               STQ     QQ_CMDBLK+1

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:40   
      250     5869    2                   GOTO PRINT_ERR;

   5869  4 000103   001070 710000 4                  TRA     PRINT_ERR

      251     5870    2                 END;
      252     5871    1           IF QQ_CMDBLK.CODE ~= 52 /* QUEST ?*/ THEN

   5871  4 000104   000006 235000 xsym               LDA     QQ_CMDBLK+6
         4 000105   000064 115007                    CMPA    52,DL
         4 000106   000122 600000 4                  TZE     s:5880

      253     5872    2             DO;

      254     5873    2               ERR = CODE_NULL;

   5873  4 000107   000000 236000 3                  LDQ     CODE_NULL
         4 000110   200065 756100                    STQ     ERR,,AUTO

      255     5874    2               ERR.CODE = QQ_CMDBLK.CODE;

   5874  4 000111   000006 236000 xsym               LDQ     QQ_CMDBLK+6
         4 000112   000003 736000                    QLS     3
         4 000113   200065 676100                    ERQ     ERR,,AUTO
         4 000114   377770 376007                    ANQ     131064,DL
         4 000115   200065 656100                    ERSQ    ERR,,AUTO

      256     5875    2               QQ_CMDBLK.MAJOR_ERR = ERR;

   5875  4 000116   200065 236100                    LDQ     ERR,,AUTO
         4 000117   000000 756000 xsym               STQ     QQ_CMDBLK

      257     5876    2               QQ_CMDBLK.MINOR_ERR = '0'B;

   5876  4 000120   000001 450000 xsym               STZ     QQ_CMDBLK+1

      258     5877    2               QQ_CMDBLK.MAJOR_ERR_USED = '0'B;

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:41   
   5877  4 000121   000002 450000 xsym               STZ     QQ_CMDBLK+2

      259     5878    2             END;

      260     5879
      261     5880    1           IF CMDFLAGS.INFO.NOTIMP# THEN

   5880  4 000122   200031 234100                    SZN     CMDFLAGS,,AUTO
         4 000123   000127 605000 4                  TPL     s:5886

      262     5881    2             DO;

      263     5882    2               QQ_CMDBLK.MINOR_ERR = CODE_NOTIMP;

   5882  4 000124   000001 236000 3                  LDQ     CODE_NOTIMP
         4 000125   000001 756000 xsym               STQ     QQ_CMDBLK+1

      264     5883    2               GOTO PRINT_ERR;

   5883  4 000126   001070 710000 4                  TRA     PRINT_ERR

      265     5884    2             END;
      266     5885
      267     5886    2           DO CASE(QQ_CMDBLK.ORIGIN);

   5886  4 000127   000004 100003                    CMPX0   4,DU
         4 000130   000132 602010 4                  TNC     s:5886+3,X0
         4 000131   000445 710000 4                  TRA     s:5991
         4 000132   000445 710000 4                  TRA     s:5991
         4 000133   000136 710000 4                  TRA     s:5890
         4 000134   000252 710000 4                  TRA     s:5932
         4 000135   000363 710000 4                  TRA     s:5964

      268     5887
      269     5888    2             CASE(1 /* ORIGIN_STATION */);

      270     5889
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:42   
      271     5890    2               IF CMDFLAGS.INFO.INITONLY# THEN

   5890  4 000136   200031 236100                    LDQ     CMDFLAGS,,AUTO
         4 000137   100000 316003                    CANQ    32768,DU
         4 000140   000144 600000 4                  TZE     s:5896

      272     5891    3                 DO;

      273     5892    3                   QQ_CMDBLK.MINOR_ERR = CODE_INITONLY;

   5892  4 000141   000002 236000 3                  LDQ     CODE_INITONLY
         4 000142   000001 756000 xsym               STQ     QQ_CMDBLK+1

      274     5893    3                   GOTO PRINT_ERR;

   5893  4 000143   001070 710000 4                  TRA     PRINT_ERR

      275     5894    3                 END;
      276     5895
      277     5896    2               IF CMDFLAGS.INFO.PRIVREQ# AND

   5896  4 000144   200000 316003                    CANQ    65536,DU
         4 000145   000154 600000 4                  TZE     s:5903
         4 000146   000004 471400 xsym               LDP1    QQ_CMDBLK+4
         4 000147   100022 234100                    SZN     18,,PR1
         4 000150   000154 604000 4                  TMI     s:5903

      278     5897    2                   NOT QQ_CMDBLK.S$ -> TP$STATION.FLAGS.PRIV THEN
      279     5898    3                 DO;

      280     5899    3                   QQ_CMDBLK.MINOR_ERR = CODE_PRIVREQ;

   5899  4 000151   000006 236000 3                  LDQ     CODE_PRIVREQ
         4 000152   000001 756000 xsym               STQ     QQ_CMDBLK+1

      281     5900    3                   GOTO PRINT_ERR;

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:43   
   5900  4 000153   001070 710000 4                  TRA     PRINT_ERR

      282     5901    3                 END;
      283     5902
      284     5903    2               IF CMDFLAGS.INFO.CONSOLESONLY# THEN

   5903  4 000154   002000 316003                    CANQ    1024,DU
         4 000155   000161 600000 4                  TZE     s:5908

      285     5904    3                 DO;

      286     5905    3                   QQ_CMDBLK.MINOR_ERR = CODE_CONSONLY;

   5905  4 000156   000011 236000 3                  LDQ     CODE_CONSONLY
         4 000157   000001 756000 xsym               STQ     QQ_CMDBLK+1

      287     5906    3                   GOTO PRINT_ERR;

   5906  4 000160   001070 710000 4                  TRA     PRINT_ERR

      288     5907    3                 END;
      289     5908    2               IF CMDFLAGS.INFO.PRIVREQ# THEN

   5908  4 000161   200000 316003                    CANQ    65536,DU
         4 000162   000445 600000 4                  TZE     s:5991

      290     5909    3                 DO;

      291     5910    3                   CALL QQC$BLDMSG_BLK(MSGBLK);

   5910  4 000163   200004 631500                    EPPR1   MSGBLK,,AUTO
         4 000164   200542 451500                    STP1    PARSE_WORK+300,,AUTO
         4 000165   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000166   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000167   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 000170   000000 011000                    NOP     0

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:44   
      292     5911    3                   MSGBLK.FLAGS.DEST.STATION = '0'B;

   5911  4 000171   000001 236000 5                  LDQ     1
         4 000172   200006 356100                    ANSQ    MSGBLK+2,,AUTO

      293     5912    3                   MSGBLK.FLAGS.DEST.DODCB = '1'B;

   5912  4 000173   000010 236003                    LDQ     8,DU
         4 000174   200006 256100                    ORSQ    MSGBLK+2,,AUTO

      294     5913    3                   UPBUF = QQ_CMDBLK.S$->TP$STATION.ID;

   5913  4 000175   000004 470400 xsym               LDP0    QQ_CMDBLK+4
         4 000176   040100 100500                    MLR     fill='040'O
         4 000177   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         4 000200   200035 000132                    ADSC9   UPBUF,,AUTO              cn=0,n=90

      295     5914    3                   POS = 7;

   5914  4 000201   000007 235007                    LDA     7,DL
         4 000202   200064 755100                    STA     POS,,AUTO

      296     5915    4                   DO WHILE (POS > 0);

   5915  4 000203   000214 604400 4                  TMOZ    END_STATION_MSG

      297     5916    4                     IF SUBSTR(UPBUF,POS,1) ~= ' ' THEN

   5916  4 000204   200064 235100                    LDA     POS,,AUTO
         4 000205   040000 106505                    CMPC    fill='040'O
         4 000206   200035 000001                    ADSC9   UPBUF,A,AUTO             cn=0,n=1
         4 000207   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000210   000214 601000 4                  TNZ     END_STATION_MSG

      298     5917    4                       GOTO END_STATION_MSG;
      299     5918    4                     POS = POS - 1;

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:45   
   5918  4 000211   000001 336007                    LCQ     1,DL
         4 000212   200064 056100                    ASQ     POS,,AUTO

      300     5919    4                   END;

   5919  4 000213   000204 605400 4                  TPNZ    s:5916

      301     5920    3   END_STATION_MSG:
      302     5921    3                   SUBSTR(UPBUF,POS+1,1) = ':';

   5921  4 000214   200064 235100       END_STATION* LDA     POS,,AUTO
         4 000215   040105 100400                    MLR     fill='040'O
         4 000216   000002 000001 5                  ADSC9   2                        cn=0,n=1
         4 000217   200035 200001                    ADSC9   UPBUF,A,AUTO             cn=1,n=1

      303     5922    3                   POS = POS +3;

   5922  4 000220   000003 236007                    LDQ     3,DL
         4 000221   200064 056100                    ASQ     POS,,AUTO

      304     5923    3                   CHAR_STRING_SIZE = QQ_CMDBLK.ARS;

   5923  4 000222   000007 236000 xsym               LDQ     QQ_CMDBLK+7
         4 000223   000022 736000                    QLS     18
         4 000224   000022 732000                    QRS     18
         4 000225   200034 756100                    STQ     CHAR_STRING_SIZE,,AUTO

      305     5924    3                  PINCRC(ADDR(UPBUF),POS)->CHAR$STRING = QQ_CMDBLK.TEXT$->CHAR$STRING;

   5924  4 000226   000003 470400 xsym               LDP0    QQ_CMDBLK+3
         4 000227   000000 620006                    EAX0    0,QL
         4 000230   200034 721100                    LXL1    CHAR_STRING_SIZE,,AUTO
         4 000231   200064 235100                    LDA     POS,,AUTO
         4 000232   040145 100540                    MLR     fill='040'O
         4 000233   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 000234   200035 000011                    ADSC9   UPBUF,A,AUTO             cn=0,n=*X1

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:46   
      306     5925    3                   MSGBLK.TEXT$ = ADDR(UPBUF);

   5925  4 000235   200035 631500                    EPPR1   UPBUF,,AUTO
         4 000236   200011 451500                    STP1    MSGBLK+5,,AUTO

      307     5926    3                   MSGBLK.ARS = CHAR_STRING_SIZE + POS;

   5926  4 000237   200034 236100                    LDQ     CHAR_STRING_SIZE,,AUTO
         4 000240   200064 036100                    ADLQ    POS,,AUTO
         4 000241   000000 620006                    EAX0    0,QL
         4 000242   200007 740100                    STX0    MSGBLK+3,,AUTO

      308     5927    3                   CALL QQC$SNDMSG(MSGBLK);

   5927  4 000243   200004 633500                    EPPR3   MSGBLK,,AUTO
         4 000244   200542 453500                    STP3    PARSE_WORK+300,,AUTO
         4 000245   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000246   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000247   000000 701000 xent               TSX1    QQC$SNDMSG
         4 000250   000000 011000                    NOP     0

      309     5928    3                 END;

   5928  4 000251   000445 710000 4                  TRA     s:5991

      310     5929
      311     5930    2             CASE(2 /* ORIGIN_INIT */);

      312     5931
      313     5932    2               IF QQ_GLOBAL.INIT_PASS = 0 AND CMDFLAGS.INFO.PASS# > 0 THEN

   5932  4 000252   000050 236000 xsym               LDQ     QQ_GLOBAL+40
         4 000253   000300 601000 4                  TNZ     s:5940
         4 000254   200031 236100                    LDQ     CMDFLAGS,,AUTO
         4 000255   020000 316003                    CANQ    8192,DU
         4 000256   000300 600000 4                  TZE     s:5940

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:47   
      314     5933    3                 DO;

      315     5934    3                   QQ_GLOBAL.PASS1_CMDS = '1'B;

   5934  4 000257   400000 236003                    LDQ     -131072,DU
         4 000260   000011 756000 xsym               STQ     QQ_GLOBAL+9

      316     5935    3                   FPT_WRITE_SEQ.BUF_.BOUND = QQ_CMDBLK.ARS - 1;

   5935  4 000261   000007 236000 xsym               LDQ     QQ_CMDBLK+7
         4 000262   000022 736000                    QLS     18
         4 000263   000022 732000                    QRS     18
         4 000264   000001 136007                    SBLQ    1,DL
         4 000265   000020 736000                    QLS     16
         4 000266   000022 676000 2                  ERQ     FPT_WRITE_SEQ+4
         4 000267   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 000270   000022 656000 2                  ERSQ    FPT_WRITE_SEQ+4

      317     5936    3                   FPT_WRITE_SEQ.BUF_.BUF$ = QQ_CMDBLK.TEXT$;

   5936  4 000271   000003 236000 xsym               LDQ     QQ_CMDBLK+3
         4 000272   000023 756000 2                  STQ     FPT_WRITE_SEQ+5

      318     5937    3                   CALL M$WRITE(FPT_WRITE_SEQ) ALTRET(MON_ERR);

   5937  4 000273   000016 630400 2                  EPPR0   FPT_WRITE_SEQ
         4 000274   440001 713400                    CLIMB   alt,write
         4 000275   401400 401760                    pmme    nvectors=4
         4 000276   001105 702000 4                  TSX2    MON_ERR

      319     5938    3                   GOTO RET;

   5938  4 000277   001104 710000 4                  TRA     RET

      320     5939    3                 END;
      321     5940    2               CALL QQC$BLDMSG_BLK(MSGBLK);

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:48   
   5940  4 000300   200004 631500                    EPPR1   MSGBLK,,AUTO
         4 000301   200542 451500                    STP1    PARSE_WORK+300,,AUTO
         4 000302   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000303   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000304   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 000305   000000 011000                    NOP     0

      322     5941    2               MSGBLK.CODECNT = 0;

   5941  4 000306   000000 236003                    LDQ     0,DU
         4 000307   200007 552110                    STBQ    MSGBLK+3,'10'O,AUTO

      323     5942    2               MSGBLK.TEXT$ = QQ_CMDBLK.TEXT$;

   5942  4 000310   000003 236000 xsym               LDQ     QQ_CMDBLK+3
         4 000311   200011 756100                    STQ     MSGBLK+5,,AUTO

      324     5943    2               MSGBLK.ARS = QQ_CMDBLK.ARS;

   5943  4 000312   000007 720000 xsym               LXL0    QQ_CMDBLK+7
         4 000313   200007 740100                    STX0    MSGBLK+3,,AUTO

      325     5944    2               CALL QQC$BLDMSG(MSGBLK);

   5944  4 000314   200004 630500                    EPPR0   MSGBLK,,AUTO
         4 000315   200542 450500                    STP0    PARSE_WORK+300,,AUTO
         4 000316   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000317   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000320   000000 701000 xent               TSX1    QQC$BLDMSG
         4 000321   000000 011000                    NOP     0

      326     5945    2               QQ_GLOBAL.ERROR_CNT = QQ_GLOBAL.ERROR_CNT - 1;

   5945  4 000322   000040 235000 xsym               LDA     QQ_GLOBAL+32
         4 000323   000001 135007                    SBLA    1,DL
         4 000324   000040 755000 xsym               STA     QQ_GLOBAL+32

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:49   
      327     5946
      328     5947    2               IF CMDFLAGS.INFO.RUNONLY# THEN

   5947  4 000325   200031 236100                    LDQ     CMDFLAGS,,AUTO
         4 000326   040000 316003                    CANQ    16384,DU
         4 000327   000333 600000 4                  TZE     s:5953

      329     5948    3                 DO;

      330     5949    3                   QQ_CMDBLK.MINOR_ERR = CODE_RUNONLY;

   5949  4 000330   000003 236000 3                  LDQ     CODE_RUNONLY
         4 000331   000001 756000 xsym               STQ     QQ_CMDBLK+1

      331     5950    3                   GOTO PRINT_ERR;

   5950  4 000332   001070 710000 4                  TRA     PRINT_ERR

      332     5951    3                 END;
      333     5952
      334     5953    2               IF CMDFLAGS.INFO.ONCEONLY# AND CMDFLAGS.INFO.BEENUSED# THEN

   5953  4 000333   010000 316003                    CANQ    4096,DU
         4 000334   000355 600000 4                  TZE     s:5960
         4 000335   200031 430100                    FSZN    CMDFLAGS,,AUTO
         4 000336   000355 605000 4                  TPL     s:5960

      335     5954    3                 DO;

      336     5955    3                   QQ_CMDBLK.MINOR_ERR = CODE_BEENUSED;

   5955  4 000337   000004 236000 3                  LDQ     CODE_BEENUSED
         4 000340   000001 756000 xsym               STQ     QQ_CMDBLK+1

      337     5956    3                   CALL QQC$BLDMSG_BLK(MSGBLK);

   5956  4 000341   200004 630500                    EPPR0   MSGBLK,,AUTO
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:50   
         4 000342   200542 450500                    STP0    PARSE_WORK+300,,AUTO
         4 000343   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000344   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000345   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 000346   000000 011000                    NOP     0

      338     5957    3                   CALL QQC$BLDMSG(MSGBLK);

   5957  4 000347   200004 630500                    EPPR0   MSGBLK,,AUTO
         4 000350   200542 450500                    STP0    PARSE_WORK+300,,AUTO
         4 000351   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000352   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000353   000000 701000 xent               TSX1    QQC$BLDMSG
         4 000354   000000 011000                    NOP     0

      339     5958    3                 END;

      340     5959
      341     5960    2               QQ_CMDFLAGS.INFO.BEENUSED#(QQ_CMDBLK.CODE) = '1'B;

   5960  4 000355   000006 236000 xsym               LDQ     QQ_CMDBLK+6
         4 000356   000003 402007                    MPY     3,DL
         4 000357   000000 620006                    EAX0    0,QL
         4 000360   001000 236003                    LDQ     512,DU
         4 000361   000000 256010 xsym               ORSQ    QQ_CMDFLAGS,X0
         4 000362   000445 710000 4                  TRA     s:5991

      342     5961
      343     5962    2             CASE(3 /* ORIGIN_CSCG */);

      344     5963
      345     5964    2               IF CMDFLAGS.INFO.INITONLY# THEN

   5964  4 000363   200031 236100                    LDQ     CMDFLAGS,,AUTO
         4 000364   100000 316003                    CANQ    32768,DU
         4 000365   000371 600000 4                  TZE     s:5970

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:51   
      346     5965    3                 DO;

      347     5966    3                   QQ_CMDBLK.MINOR_ERR = CODE_INITONLY;

   5966  4 000366   000002 236000 3                  LDQ     CODE_INITONLY
         4 000367   000001 756000 xsym               STQ     QQ_CMDBLK+1

      348     5967    3                   GOTO PRINT_ERR;

   5967  4 000370   001070 710000 4                  TRA     PRINT_ERR

      349     5968    3                 END;
      350     5969
      351     5970    2               IF NOT CMDFLAGS.INFO.CONSOLESOK# THEN

   5970  4 000371   004000 316003                    CANQ    2048,DU
         4 000372   000376 601000 4                  TNZ     s:5975

      352     5971    3                 DO;

      353     5972    3                   QQ_CMDBLK.MINOR_ERR = CODE_NOCONSOLES;

   5972  4 000373   000010 236000 3                  LDQ     CODE_NOCONSOLES
         4 000374   000001 756000 xsym               STQ     QQ_CMDBLK+1

      354     5973    3                   GOTO PRINT_ERR;

   5973  4 000375   001070 710000 4                  TRA     PRINT_ERR

      355     5974    3                 END;
      356     5975    2               IF CMDFLAGS.INFO.PRIVREQ# THEN

   5975  4 000376   200000 316003                    CANQ    65536,DU
         4 000377   000445 600000 4                  TZE     s:5991

      357     5976    3                 DO;

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:52   
      358     5977    3                   CALL QQC$BLDMSG_BLK(MSGBLK);

   5977  4 000400   200004 631500                    EPPR1   MSGBLK,,AUTO
         4 000401   200542 451500                    STP1    PARSE_WORK+300,,AUTO
         4 000402   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000403   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000404   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 000405   000000 011000                    NOP     0

      359     5978    3                   MSGBLK.FLAGS.DEST.ONECONSOLE= '0'B;

   5978  4 000406   000003 236000 5                  LDQ     3
         4 000407   200006 356100                    ANSQ    MSGBLK+2,,AUTO

      360     5979    3                   MSGBLK.FLAGS.DEST.DODCB = '1'B;

   5979  4 000410   000010 236003                    LDQ     8,DU
         4 000411   200006 256100                    ORSQ    MSGBLK+2,,AUTO

      361     5980    3                   UPBUF = 'KEYIN:';

   5980  4 000412   040100 100400                    MLR     fill='040'O
         4 000413   000013 000006 3                  ADSC9   CODE_RU_AND_U+1          cn=0,n=6
         4 000414   200035 000132                    ADSC9   UPBUF,,AUTO              cn=0,n=90

      362     5981    3                   POS = 8;

   5981  4 000415   000010 235007                    LDA     8,DL
         4 000416   200064 755100                    STA     POS,,AUTO

      363     5982    3                   CHAR_STRING_SIZE = QQ_CMDBLK.ARS;

   5982  4 000417   000007 236000 xsym               LDQ     QQ_CMDBLK+7
         4 000420   000022 736000                    QLS     18
         4 000421   000022 732000                    QRS     18
         4 000422   200034 756100                    STQ     CHAR_STRING_SIZE,,AUTO

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:53   
      364     5983    3                  PINCRC(ADDR(UPBUF),POS)->CHAR$STRING = QQ_CMDBLK.TEXT$->CHAR$STRING;

   5983  4 000423   000003 470400 xsym               LDP0    QQ_CMDBLK+3
         4 000424   000000 620006                    EAX0    0,QL
         4 000425   200034 721100                    LXL1    CHAR_STRING_SIZE,,AUTO
         4 000426   040145 100540                    MLR     fill='040'O
         4 000427   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 000430   200035 000011                    ADSC9   UPBUF,A,AUTO             cn=0,n=*X1

      365     5984    3                   MSGBLK.TEXT$ = ADDR(UPBUF);

   5984  4 000431   200035 631500                    EPPR1   UPBUF,,AUTO
         4 000432   200011 451500                    STP1    MSGBLK+5,,AUTO

      366     5985    3                   MSGBLK.ARS = CHAR_STRING_SIZE + POS;

   5985  4 000433   200034 236100                    LDQ     CHAR_STRING_SIZE,,AUTO
         4 000434   200064 036100                    ADLQ    POS,,AUTO
         4 000435   000000 620006                    EAX0    0,QL
         4 000436   200007 740100                    STX0    MSGBLK+3,,AUTO

      367     5986    3                   CALL QQC$SNDMSG(MSGBLK);

   5986  4 000437   200004 633500                    EPPR3   MSGBLK,,AUTO
         4 000440   200542 453500                    STP3    PARSE_WORK+300,,AUTO
         4 000441   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000442   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000443   000000 701000 xent               TSX1    QQC$SNDMSG
         4 000444   000000 011000                    NOP     0

      368     5987    3                 END;

      369     5988
      370     5989    2           END /* CASE */;

      371     5990        %EJECT;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:54   
      372     5991    1           QQ_GLOBAL.CMD_CNT = QQ_GLOBAL.CMD_CNT + 1;

   5991  4 000445   000037 235000 xsym               LDA     QQ_GLOBAL+31
         4 000446   000001 035007                    ADLA    1,DL
         4 000447   000037 755000 xsym               STA     QQ_GLOBAL+31

      373     5992
      374     5993    2           DO CASE(QQ_CMDBLK.CODE);

   5993  4 000450   000006 236000 xsym               LDQ     QQ_CMDBLK+6
         4 000451   000074 116007                    CMPQ    60,DL
         4 000452   000454 602006 4                  TNC     s:5993+4,QL
         4 000453   000750 710000 4                  TRA     s:6105
         4 000454   000750 710000 4                  TRA     s:6105
         4 000455   000750 710000 4                  TRA     s:6105
         4 000456   000750 710000 4                  TRA     s:6105
         4 000457   000550 710000 4                  TRA     s:5997
         4 000460   000554 710000 4                  TRA     s:6000
         4 000461   000645 710000 4                  TRA     s:6064
         4 000462   000560 710000 4                  TRA     s:6003
         4 000463   000564 710000 4                  TRA     s:6006
         4 000464   000554 710000 4                  TRA     s:6000
         4 000465   000570 710000 4                  TRA     s:6009
         4 000466   000574 710000 4                  TRA     s:6012
         4 000467   000600 710000 4                  TRA     s:6015
         4 000470   000574 710000 4                  TRA     s:6012
         4 000471   000604 710000 4                  TRA     s:6018
         4 000472   000560 710000 4                  TRA     s:6003
         4 000473   000610 710000 4                  TRA     s:6021
         4 000474   000614 710000 4                  TRA     s:6024
         4 000475   000750 710000 4                  TRA     s:6105
         4 000476   000620 710000 4                  TRA     s:6048
         4 000477   000620 710000 4                  TRA     s:6048
         4 000500   000620 710000 4                  TRA     s:6048
         4 000501   000620 710000 4                  TRA     s:6048
         4 000502   000620 710000 4                  TRA     s:6048
         4 000503   000620 710000 4                  TRA     s:6048
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:55   
         4 000504   000620 710000 4                  TRA     s:6048
         4 000505   000620 710000 4                  TRA     s:6048
         4 000506   000620 710000 4                  TRA     s:6048
         4 000507   000620 710000 4                  TRA     s:6048
         4 000510   000620 710000 4                  TRA     s:6048
         4 000511   000620 710000 4                  TRA     s:6048
         4 000512   000620 710000 4                  TRA     s:6048
         4 000513   000620 710000 4                  TRA     s:6048
         4 000514   000620 710000 4                  TRA     s:6048
         4 000515   000620 710000 4                  TRA     s:6048
         4 000516   000620 710000 4                  TRA     s:6048
         4 000517   000620 710000 4                  TRA     s:6048
         4 000520   000620 710000 4                  TRA     s:6048
         4 000521   000620 710000 4                  TRA     s:6048
         4 000522   000620 710000 4                  TRA     s:6048
         4 000523   000620 710000 4                  TRA     s:6048
         4 000524   000645 710000 4                  TRA     s:6064
         4 000525   000651 710000 4                  TRA     s:6067
         4 000526   000655 710000 4                  TRA     s:6070
         4 000527   000661 710000 4                  TRA     s:6073
         4 000530   000665 710000 4                  TRA     s:6076
         4 000531   000604 710000 4                  TRA     s:6018
         4 000532   000750 710000 4                  TRA     s:6105
         4 000533   000671 710000 4                  TRA     s:6079
         4 000534   000675 710000 4                  TRA     s:6082
         4 000535   000750 710000 4                  TRA     s:6105
         4 000536   000701 710000 4                  TRA     s:6085
         4 000537   000705 710000 4                  TRA     s:6088
         4 000540   000610 710000 4                  TRA     s:6021
         4 000541   000610 710000 4                  TRA     s:6021
         4 000542   000711 710000 4                  TRA     s:6091
         4 000543   000715 710000 4                  TRA     s:6094
         4 000544   000741 710000 4                  TRA     s:6101
         4 000545   000721 710000 4                  TRA     s:6096
         4 000546   000745 710000 4                  TRA     s:6103
         4 000547   000641 710000 4                  TRA     s:6061

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:56   
      375     5994    2             CASE(1 /* NULL */);

      376     5995
      377     5996    2             CASE(3 /* ASSIST */);

      378     5997    2               CALL QQB$ASSIST;

   5997  4 000550   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000551   000000 701000 xent               TSX1    QQB$ASSIST
         4 000552   000000 011000                    NOP     0
         4 000553   000750 710000 4                  TRA     s:6105

      379     5998
      380     5999    2             CASE(4 /* BEGIN */, 8 /* DEBUG */);

      381     6000    2               CALL QQB$BEGIN;

   6000  4 000554   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000555   000000 701000 xent               TSX1    QQB$BEGIN
         4 000556   000000 011000                    NOP     0
         4 000557   000750 710000 4                  TRA     s:6105

      382     6001
      383     6002    2             CASE(6 /* CANCEL */, 14 /* ERASE */);

      384     6003    2               CALL QQB$CANCEL;

   6003  4 000560   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000561   000000 701000 xent               TSX1    QQB$CANCEL
         4 000562   000000 011000                    NOP     0
         4 000563   000750 710000 4                  TRA     s:6105

      385     6004
      386     6005    2             CASE(7 /* CHECK */);

      387     6006    2               CALL QQB$CHECK;

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:57   
   6006  4 000564   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000565   000000 701000 xent               TSX1    QQB$CHECK
         4 000566   000000 011000                    NOP     0
         4 000567   000750 710000 4                  TRA     s:6105

      388     6007
      389     6008    2             CASE(9 /* SWITCH */);

      390     6009    2               CALL QQB$DELIVER;

   6009  4 000570   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000571   000000 701000 xent               TSX1    QQB$DELIVER
         4 000572   000000 011000                    NOP     0
         4 000573   000750 710000 4                  TRA     s:6105

      391     6010
      392     6011    2             CASE(10 /* DISABLE */, 12 /* ENABLE */);

      393     6012    2               CALL QQB$DISEN;

   6012  4 000574   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000575   000000 701000 xent               TSX1    QQB$DISEN
         4 000576   000000 011000                    NOP     0
         4 000577   000750 710000 4                  TRA     s:6105

      394     6013
      395     6014    2             CASE(11 /* DISPLAY */);

      396     6015    2               CALL QQB$DISPLAY;

   6015  4 000600   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000601   000000 701000 xent               TSX1    QQB$DISPLAY
         4 000602   000000 011000                    NOP     0
         4 000603   000750 710000 4                  TRA     s:6105

      397     6016
      398     6017    2             CASE(13 /* HOLD */, 45 /* RELEASE */);
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:58   

      399     6018    2               CALL QQB$HOLD;

   6018  4 000604   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000605   000000 701000 xent               TSX1    QQB$HOLD
         4 000606   000000 011000                    NOP     0
         4 000607   000750 710000 4                  TRA     s:6105

      400     6019
      401     6020    2             CASE(15 /* HELP */, 52 /* QUEST ?*/, 53 /* DBL_QUEST ??*/);

      402     6021    2               CALL QQB$HELP;

   6021  4 000610   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000611   000000 701000 xent               TSX1    QQB$HELP
         4 000612   000000 011000                    NOP     0
         4 000613   000750 710000 4                  TRA     s:6105

      403     6022
      404     6023    2             CASE(16 /* KILL */);

      405     6024    2               CALL QQB$KILL;

   6024  4 000614   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000615   000000 701000 xent               TSX1    QQB$KILL
         4 000616   000000 011000                    NOP     0
         4 000617   000750 710000 4                  TRA     s:6105

      406     6025
      407     6026    2             CASE(18 /* LET_ACCOUNTING */,

      408     6027    2                   19 /* LET_CGPAGEMAX */,
      409     6028    2                   20 /* LET_CGPAGEMIN */,
      410     6029    2                   21 /* LET_CGSIZEMAX */,
      411     6030    2                   22 /* LET_DCBCON */,
      412     6031    2                   23 /* LET_HISTORY */,
      413     6032    2                   24 /* LET_IXTNSIZE */,
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:59   
      414     6033    2                   25 /* LET_JOURNAL */,
      415     6034    2                   26 /* LET_LOG */,
      416     6035    2                   27 /* LET_MCTID */,
      417     6036    2                   28 /* LET_NEWCG */,
      418     6037    2                   29 /* LET_POOLSIZE */,
      419     6038    2                   30 /* LET_DISKWARN */,
      420     6039    2                   31 /* LET_STATIONMAX */,
      421     6040    2                   32 /* LET_MEMWARN */,
      422     6041    2                   33 /* LET_TPCPRU */,
      423     6042    2                   34 /* LET_TPUINITIAL */,
      424     6043    2                   35 /* LET_TPUMAX */,
      425     6044    2                   36 /* LET_TPUMIN */,
      426     6045    2                   37 /* LET_CFPRU */,
      427     6046    2                   38 /* LET_XTNSIZE */,
      428     6047    2                   39 /* LET_TPHEAD */);
      429     6048    2               IF (QQ_CMDBLK.CODE = 23 /* LET_HISTORY */ OR

   6048  4 000620   000027 116007                    CMPQ    23,DL
         4 000621   000624 600000 4                  TZE     s:6048+4
         4 000622   000041 116007                    CMPQ    33,DL
         4 000623   000635 601000 4                  TNZ     s:6058
         4 000624   000000 470400 xsym               LDP0    B$JIT$
         4 000625   000031 236100                    LDQ     25,,PR0
         4 000626   000015 116000 3                  CMPQ    CODE_RU_AND_U+3
         4 000627   000635 600000 4                  TZE     s:6058

      430     6049    2                   QQ_CMDBLK.CODE = 33 /* LET_TPCPRU */) AND
      431     6050    2                   (B$JIT$ -> B$JIT.SWITCH ~= '124105123124'O) THEN
      432     6051    3                 DO;

      433     6052    3                   P_PCB.ERROR.CODE = 1;

   6052  4 000630   000006 236000 2                  LDQ     P_PCB+6
         4 000631   000004 376000 5                  ANQ     4
         4 000632   000010 276007                    ORQ     8,DL
         4 000633   000006 756000 2                  STQ     P_PCB+6

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:60   
      434     6053    3                   GOTO PARSE_ERR;

   6053  4 000634   000751 710000 4                  TRA     PARSE_ERR

      435     6054    3                 END;
      436     6055        /* We test the pseudo switches to make sure that they are the octal
      437     6056           representation of 'TEST'.  This may be set by the IBEX "SWITCH"
      438     6057           command.  We do this for various commands.                                 */
      439     6058    2               CALL QQB$LET;

   6058  4 000635   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000636   000000 701000 xent               TSX1    QQB$LET
         4 000637   000000 011000                    NOP     0
         4 000640   000750 710000 4                  TRA     s:6105

      440     6059
      441     6060    2             CASE(59 /* MESSAGE */);

      442     6061    2               CALL QQB$MESSAGE;

   6061  4 000641   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000642   000000 701000 xent               TSX1    QQB$MESSAGE
         4 000643   000000 011000                    NOP     0
         4 000644   000750 710000 4                  TRA     s:6105

      443     6062
      444     6063    2             CASE(5 /* BYE */, 40 /* OFF */);

      445     6064    2               CALL QQB$OFF;

   6064  4 000645   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000646   000000 701000 xent               TSX1    QQB$OFF
         4 000647   000000 011000                    NOP     0
         4 000650   000750 710000 4                  TRA     s:6105

      446     6065
      447     6066    2             CASE(41 /* PASSWORD */);
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:61   

      448     6067    2               CALL QQB$PASSWORD;

   6067  4 000651   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000652   000000 701000 xent               TSX1    QQB$PASSWORD
         4 000653   000000 011000                    NOP     0
         4 000654   000750 710000 4                  TRA     s:6105

      449     6068
      450     6069    2             CASE(42 /* PRIORITY */);

      451     6070    2               CALL QQB$PRIO;

   6070  4 000655   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000656   000000 701000 xent               TSX1    QQB$PRIO
         4 000657   000000 011000                    NOP     0
         4 000660   000750 710000 4                  TRA     s:6105

      452     6071
      453     6072    2             CASE(43 /* PROFILE */);

      454     6073    2               CALL QQB$PROFILE;

   6073  4 000661   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000662   000000 701000 xent               TSX1    QQB$PROFILE
         4 000663   000000 011000                    NOP     0
         4 000664   000750 710000 4                  TRA     s:6105

      455     6074
      456     6075    2             CASE(44 /* READ */);

      457     6076    2               CALL QQB$READ;

   6076  4 000665   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000666   000000 701000 xent               TSX1    QQB$READ
         4 000667   000000 011000                    NOP     0
         4 000670   000750 710000 4                  TRA     s:6105
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:62   

      458     6077
      459     6078    2             CASE(47 /* SPY */);

      460     6079    2               CALL QQB$SPY;

   6079  4 000671   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000672   000000 701000 xent               TSX1    QQB$SPY
         4 000673   000000 011000                    NOP     0
         4 000674   000750 710000 4                  TRA     s:6105

      461     6080
      462     6081    2             CASE(48 /* STATS */);

      463     6082    2               CALL QQB$STATS;

   6082  4 000675   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000676   000000 701000 xent               TSX1    QQB$STATS
         4 000677   000000 011000                    NOP     0
         4 000700   000750 710000 4                  TRA     s:6105

      464     6083
      465     6084    2             CASE(50 /* STOPTP */);

      466     6085    2               CALL QQB$STOPTP;

   6085  4 000701   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000702   000000 701000 xent               TSX1    QQB$STOPTP
         4 000703   000000 011000                    NOP     0
         4 000704   000750 710000 4                  TRA     s:6105

      467     6086
      468     6087    2             CASE(51 /* TRANSACTION */);

      469     6088    2               CALL QQB$TRANS;

   6088  4 000705   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:63   
         4 000706   000000 701000 xent               TSX1    QQB$TRANS
         4 000707   000000 011000                    NOP     0
         4 000710   000750 710000 4                  TRA     s:6105

      470     6089
      471     6090    2             CASE(54 /* TIME */);

      472     6091    2               CALL QQB$TIME;

   6091  4 000711   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000712   000000 701000 xent               TSX1    QQB$TIME
         4 000713   000000 011000                    NOP     0
         4 000714   000750 710000 4                  TRA     s:6105

      473     6092
      474     6093    2             CASE(55 /* ERSEND CMD*/);

      475     6094    2               CALL QQB$ERSEND;

   6094  4 000715   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000716   000000 701000 xent               TSX1    QQB$ERSEND
         4 000717   000000 011000                    NOP     0
         4 000720   000750 710000 4                  TRA     s:6105

      476     6095    2             CASE(57 /* RU CMD */);

      477     6096    2               IF SUBSTR(QQ_CMDBLK.OUT$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT,0,1) = '?'
              6096                        THEN

   6096  4 000721   000005 470400 xsym               LDP0    QQ_CMDBLK+5
         4 000722   000003 471500                    LDP1    3,,PR0
         4 000723   100004 236100                    LDQ     4,,PR1
         4 000724   000033 772000                    QRL     27
         4 000725   100004 236100                    LDQ     4,,PR1
         4 000726   000777 376003                    ANQ     511,DU
         4 000727   000077 116003                    CMPQ    63,DU
         4 000730   000735 601000 4                  TNZ     s:6099
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:64   

      478     6097    2                 CALL QQB$HELP;

   6097  4 000731   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000732   000000 701000 xent               TSX1    QQB$HELP
         4 000733   000000 011000                    NOP     0
         4 000734   000750 710000 4                  TRA     s:6105

      479     6098    2               ELSE
      480     6099    2                 CALL QQB$START;

   6099  4 000735   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000736   000000 701000 xent               TSX1    QQB$START
         4 000737   000000 011000                    NOP     0
         4 000740   000750 710000 4                  TRA     s:6105

      481     6100    2             CASE(56 /* START CMD */);

      482     6101    2               CALL QQB$START;

   6101  4 000741   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000742   000000 701000 xent               TSX1    QQB$START
         4 000743   000000 011000                    NOP     0
         4 000744   000750 710000 4                  TRA     s:6105

      483     6102    2             CASE(58 /* UNDER CMD*/);

      484     6103    2               CALL QQB$UNDER;

   6103  4 000745   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000746   000000 701000 xent               TSX1    QQB$UNDER
         4 000747   000000 011000                    NOP     0

      485     6104    2           END /* CASE */;

      486     6105    1           GOTO RET;

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:65   
   6105  4 000750   001104 710000 4                  TRA     RET

      487     6106        %EJECT;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:66   
      488     6107    1   PARSE_ERR:
      489     6108    1           IF QQ_CMDBLK.ORIGIN = 2 /* ORIGIN_INIT */ THEN

   6108  4 000751   000007 220000 xsym  PARSE_ERR    LDX0    QQ_CMDBLK+7
         4 000752   000002 100003                    CMPX0   2,DU
         4 000753   001001 601000 4                  TNZ     s:6118

      490     6109    2             DO;

      491     6110    2               CALL QQC$BLDMSG_BLK(MSGBLK);

   6110  4 000754   200004 630500                    EPPR0   MSGBLK,,AUTO
         4 000755   200542 450500                    STP0    PARSE_WORK+300,,AUTO
         4 000756   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000757   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000760   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 000761   000000 011000                    NOP     0

      492     6111    2               MSGBLK.CODECNT = 0;

   6111  4 000762   000000 236003                    LDQ     0,DU
         4 000763   200007 552110                    STBQ    MSGBLK+3,'10'O,AUTO

      493     6112    2               MSGBLK.TEXT$ = QQ_CMDBLK.TEXT$;

   6112  4 000764   000003 236000 xsym               LDQ     QQ_CMDBLK+3
         4 000765   200011 756100                    STQ     MSGBLK+5,,AUTO

      494     6113    2               MSGBLK.ARS = QQ_CMDBLK.ARS;

   6113  4 000766   000007 720000 xsym               LXL0    QQ_CMDBLK+7
         4 000767   200007 740100                    STX0    MSGBLK+3,,AUTO

      495     6114    2               CALL QQC$BLDMSG(MSGBLK);

   6114  4 000770   200004 630500                    EPPR0   MSGBLK,,AUTO
         4 000771   200542 450500                    STP0    PARSE_WORK+300,,AUTO
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:67   
         4 000772   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 000773   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000774   000000 701000 xent               TSX1    QQC$BLDMSG
         4 000775   000000 011000                    NOP     0

      496     6115    2               QQ_GLOBAL.ERROR_CNT = QQ_GLOBAL.ERROR_CNT - 1;

   6115  4 000776   000040 235000 xsym               LDA     QQ_GLOBAL+32
         4 000777   000001 135007                    SBLA    1,DL
         4 001000   000040 755000 xsym               STA     QQ_GLOBAL+32

      497     6116    2             END;

      498     6117
      499     6118    1           ERR = P_PCB.ERROR;

   6118  4 001001   000006 236000 2                  LDQ     P_PCB+6
         4 001002   200065 756100                    STQ     ERR,,AUTO

      500     6119    1           IF ERR.CODE ~= 1 THEN

   6119  4 001003   200065 236100                    LDQ     ERR,,AUTO
         4 001004   377770 376007                    ANQ     131064,DL
         4 001005   000010 116007                    CMPQ    8,DL
         4 001006   001013 600000 4                  TZE     s:6126

      501     6120    2             DO;

      502     6121    2               P_PCB.HI_CHAR = 0;

   6121  4 001007   000012 450000 2                  STZ     P_PCB+10

      503     6122    2               QQ_CMDBLK.MINOR_ERR = ERR;

   6122  4 001010   200065 236100                    LDQ     ERR,,AUTO
         4 001011   000001 756000 xsym               STQ     QQ_CMDBLK+1

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:68   
      504     6123    2             END;

   6123  4 001012   001035 710000 4                  TRA     s:6140

      505     6124    1           ELSE
      506     6125    2             DO;

      507     6126    2               IF QQ_CMDBLK.CODE = 0 THEN

   6126  4 001013   000006 235000 xsym               LDA     QQ_CMDBLK+6
         4 001014   001020 601000 4                  TNZ     s:6132

      508     6127    3                 DO;

      509     6128    3                   QQ_CMDBLK.MINOR_ERR = CODE_EH;

   6128  4 001015   000005 236000 3                  LDQ     CODE_EH
         4 001016   000001 756000 xsym               STQ     QQ_CMDBLK+1

      510     6129    3                 END;

   6129  4 001017   001035 710000 4                  TRA     s:6140

      511     6130    2               ELSE
      512     6131    3                 DO;

      513     6132    3                   QQ_CMDBLK.MINOR_ERR = CODE_SYNTAX_ERR;

   6132  4 001020   000007 236000 3                  LDQ     CODE_SYNTAX_ERR
         4 001021   000001 756000 xsym               STQ     QQ_CMDBLK+1

      514     6133    3                   ERR = CODE_NULL;

   6133  4 001022   000000 236000 3                  LDQ     CODE_NULL
         4 001023   200065 756100                    STQ     ERR,,AUTO

      515     6134    3                   ERR.CODE = QQ_CMDBLK.CODE;
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:69   

   6134  4 001024   000006 236000 xsym               LDQ     QQ_CMDBLK+6
         4 001025   000003 736000                    QLS     3
         4 001026   200065 676100                    ERQ     ERR,,AUTO
         4 001027   377770 376007                    ANQ     131064,DL
         4 001030   200065 656100                    ERSQ    ERR,,AUTO

      516     6135    3                   QQ_CMDBLK.MAJOR_ERR = ERR;

   6135  4 001031   200065 236100                    LDQ     ERR,,AUTO
         4 001032   000000 756000 xsym               STQ     QQ_CMDBLK

      517     6136    3                   QQ_CMDBLK.FLAGS.ERR = '1'B;

   6136  4 001033   400000 236007                    LDQ     -131072,DL
         4 001034   000010 256000 xsym               ORSQ    QQ_CMDBLK+8

      518     6137    3                 END;

      519     6138    2             END;

      520     6139
      521     6140    1           CALL QQC$BLDMSG_BLK(MSGBLK);

   6140  4 001035   200004 630500                    EPPR0   MSGBLK,,AUTO
         4 001036   200542 450500                    STP0    PARSE_WORK+300,,AUTO
         4 001037   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 001040   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001041   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 001042   000000 011000                    NOP     0

      522     6141    1           UPBUF = ' ';

   6141  4 001043   040100 100400                    MLR     fill='040'O
         4 001044   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 001045   200035 000132                    ADSC9   UPBUF,,AUTO              cn=0,n=90

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:70   
      523     6142    1           CHAR_STRING_SIZE = 1;

   6142  4 001046   000001 235007                    LDA     1,DL
         4 001047   200034 755100                    STA     CHAR_STRING_SIZE,,AUTO

      524     6143    1           PINCRC(ADDR(UPBUF), P_PCB.HI_CHAR+2) -> CHAR$STRING = '^';

   6143  4 001050   000000 620005                    EAX0    0,AL
         4 001051   000012 235000 2                  LDA     P_PCB+10
         4 001052   040145 100400                    MLR     fill='040'O
         4 001053   000005 000001 5                  ADSC9   5                        cn=0,n=1
         4 001054   200035 400010                    ADSC9   UPBUF,A,AUTO             cn=2,n=*X0

      525     6144    1           MSGBLK.TEXT$ = ADDR(UPBUF);

   6144  4 001055   200035 630500                    EPPR0   UPBUF,,AUTO
         4 001056   200011 450500                    STP0    MSGBLK+5,,AUTO

      526     6145    1           MSGBLK.ARS = P_PCB.HI_CHAR + 3;

   6145  4 001057   000003 620005                    EAX0    3,AL
         4 001060   200007 740100                    STX0    MSGBLK+3,,AUTO

      527     6146    1           CALL QQC$BLDMSG(MSGBLK);

   6146  4 001061   200004 631500                    EPPR1   MSGBLK,,AUTO
         4 001062   200542 451500                    STP1    PARSE_WORK+300,,AUTO
         4 001063   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 001064   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001065   000000 701000 xent               TSX1    QQC$BLDMSG
         4 001066   000000 011000                    NOP     0

      528     6147    1           GOTO RET;

   6147  4 001067   001104 710000 4                  TRA     RET

      529     6148
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:71   
      530     6149    1   PRINT_ERR:
      531     6150    1           CALL QQC$BLDMSG_BLK(MSGBLK);

   6150  4 001070   200004 630500       PRINT_ERR    EPPR0   MSGBLK,,AUTO
         4 001071   200542 450500                    STP0    PARSE_WORK+300,,AUTO
         4 001072   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 001073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001074   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 001075   000000 011000                    NOP     0

      532     6151    1           CALL QQC$BLDMSG(MSGBLK);

   6151  4 001076   200004 630500                    EPPR0   MSGBLK,,AUTO
         4 001077   200542 450500                    STP0    PARSE_WORK+300,,AUTO
         4 001100   200542 630500                    EPPR0   PARSE_WORK+300,,AUTO
         4 001101   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001102   000000 701000 xent               TSX1    QQC$BLDMSG
         4 001103   000000 011000                    NOP     0

      533     6152
      534     6153    1   RET:
      535     6154    1           RETURN;

   6154  4 001104   000000 702200 xent  RET          TSX2  ! X66_ARET

      536     6155
      537     6156    1   MON_ERR:
      538     6157    1           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   6157  4 001105   000000 470400 xsym  MON_ERR      LDP0    B$TCB$
         4 001106   000000 471500                    LDP1    0,,PR0
         4 001107   100102 236100                    LDQ     66,,PR1
         4 001110   000000 756000 xsym               STQ     QQ_GLOBAL

      539     6158    1           CALL QQC$SCREECH;

   6158  4 001111   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:72   
         4 001112   000000 701000 xent               TSX1    QQC$SCREECH
         4 001113   000000 011000                    NOP     0

      540     6159
      541     6160    1   END QQA$CMD;

   6160  4 001114   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:73   
--  Include file information  --

   Q_ERRCODE_C.:E05TOU  is referenced.
   QQ_PERR_C.:E05TOU  is referenced.
   QQ_CMDFLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   QQ_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQA$CMD.
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:74   

 **** Variables and constants ****

  ****  Section 002  Data  QQA$CMD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/d STRC(432)   r     1 FPT_WRITE_SEQ              0-0-0/w STRC(504)   r     1 P_PCB

  ****  Section 003 RoData QQA$CMD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/b STRC        r     1 CODE_BEENUSED             11-0-0/b STRC        r     1 CODE_CONSONLY
     5-0-0/b STRC        r     1 CODE_EH                    2-0-0/b STRC        r     1 CODE_INITONLY
    10-0-0/b STRC        r     1 CODE_NOCONSOLES            1-0-0/b STRC        r     1 CODE_NOTIMP
     0-0-0/b STRC        r     1 CODE_NULL                  6-0-0/b STRC        r     1 CODE_PRIVREQ
     3-0-0/b STRC        r     1 CODE_RUNONLY              12-0-0/b STRC        r     1 CODE_RU_AND_U
     7-0-0/b STRC        r     1 CODE_SYNTAX_ERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    34-0-0/w UBIN        r     1 CHAR_STRING_SIZE          31-0-0/w STRC(108)   r     1 CMDFLAGS
    65-0-0/b STRC        r     1 ERR                        4-0-0/w STRC(738)   r     1 MSGBLK
    66-0-0/w UBIN        r     1 PARSE_WORK(0:299)
    64-0-0/w SBIN        r     1 POS                        3-0-0/w PTR         r     1 S$
    35-0-0/c CHAR(90)    r     1 UPBUF

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:75   
     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w STRC(315)   r     1 QQ_CMDBLK                  0-0-0/w STRC(6480)  r     1 QQ_CMDFLAGS
     0-0-0/d STRC(9090)  r     1 QQ_GLOBAL
     0-0-0/w PTR         r     1 QQ_NODES$(0:7)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/c ACHR        r     1 CHAR$STRING
     0-0-0N  NULL        r     1 M$TPCMD                    0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(909)   r     1 TP$STATION


   Procedure QQA$CMD requires 589 words for executable code.
   Procedure QQA$CMD requires 356 words of local(AUTO) storage.

    No errors detected in file QQA$CMD.:E05TSI    .
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:76   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:77   
          MINI XREF LISTING

B$ALT.CODE
      5027**DCL      5027--REDEF    5028--REDEF    5028--REDEF
B$ALT.ERR
      5028**DCL      6157>>ASSIGN
B$ALT.ERR.ERR#
      5029**DCL      5029--REDEF
B$ALT.EVID
      5028**DCL      5028--REDEF    5028--REDEF
B$JIT.CPFLAGS1.SLEAZE
       309**DCL       309--REDEF
B$JIT.ERR.MID
       216**DCL       216--REDEF
B$JIT.JRESPEAK
       377**DCL       378--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       486**DCL       486--REDEF     487--REDEF
B$JIT.PNR
       390**DCL       390--REDEF
B$JIT.SWITCH
       303**DCL      6048>>IF
B$JIT.TSLINE
       484**DCL       485--REDEF
B$JIT$
      4970**DCL       210--IMP-PTR  6048>>IF
B$TCB.ALT$
      5023**DCL      6157>>ASSIGN
B$TCB$
      4969**DCL      6157>>ASSIGN
CHAR$STRING
      5189**DCL      5924<<ASSIGN   5924>>ASSIGN   5983<<ASSIGN   5983>>ASSIGN   6143<<ASSIGN
CHAR_STRING_SIZE
      5576**DCL      5189--IMP-SIZ  5923<<ASSIGN   5924>>ASSIGN   5924>>ASSIGN   5926>>ASSIGN   5982<<ASSIGN
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:78   
      5983>>ASSIGN   5983>>ASSIGN   5985>>ASSIGN   6142<<ASSIGN   6143>>ASSIGN
CMDFLAGS
      5529**DCL      5862<<ASSIGN
CMDFLAGS.INFO.BEENUSED#
      5561**DCL      5953>>IF
CMDFLAGS.INFO.CONSOLESOK#
      5557**DCL      5970>>IF
CMDFLAGS.INFO.CONSOLESONLY#
      5559**DCL      5903>>IF
CMDFLAGS.INFO.INITONLY#
      5549**DCL      5890>>IF       5964>>IF
CMDFLAGS.INFO.NOTIMP#
      5545**DCL      5880>>IF
CMDFLAGS.INFO.ONCEONLY#
      5555**DCL      5953>>IF
CMDFLAGS.INFO.PASS#
      5553**DCL      5932>>IF
CMDFLAGS.INFO.PRIVREQ#
      5547**DCL      5896>>IF       5908>>IF       5975>>IF
CMDFLAGS.INFO.RUNONLY#
      5551**DCL      5947>>IF
CODE_BEENUSED
      5641**DCL      5955>>ASSIGN
CODE_CONSONLY
      5676**DCL      5905>>ASSIGN
CODE_EH
      5648**DCL      6128>>ASSIGN
CODE_INITONLY
      5627**DCL      5892>>ASSIGN   5966>>ASSIGN
CODE_NOCONSOLES
      5669**DCL      5972>>ASSIGN
CODE_NOTIMP
      5620**DCL      5882>>ASSIGN
CODE_NULL
      5613**DCL      5873>>ASSIGN   6133>>ASSIGN
CODE_PRIVREQ
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:79   
      5655**DCL      5899>>ASSIGN
CODE_RUNONLY
      5634**DCL      5949>>ASSIGN
CODE_RU_AND_U
      5683**DCL      5868>>ASSIGN
CODE_SYNTAX_ERR
      5662**DCL      6132>>ASSIGN
END_STATION_MSG
      5921**LABEL    5917--GOTO
ERR
      5579**DCL      5873<<ASSIGN   5875>>ASSIGN   6118<<ASSIGN   6122>>ASSIGN   6133<<ASSIGN   6135>>ASSIGN
ERR.CODE
      5583**DCL      5874<<ASSIGN   6119>>IF       6134<<ASSIGN
FPT_WRITE_SEQ
      5800**DCL      5937<>CALL
FPT_WRITE_SEQ.BUF_.BOUND
      5800**DCL      5935<<ASSIGN
FPT_WRITE_SEQ.BUF_.BUF$
      5802**DCL      5936<<ASSIGN
FPT_WRITE_SEQ.STATION_
      5802**DCL      5802--REDEF
FPT_WRITE_SEQ.V
      5803**DCL      5800--DCLINIT
FPT_WRITE_SEQ.V.DVBYTE.VFC#
      5809**DCL      5809--REDEF
M$WRITE
       130**DCL-ENT  5937--CALL
MON_ERR
      6157**LABEL    5937--CALLALT
MSGBLK
      5440**DCL      5910<>CALL     5927<>CALL     5940<>CALL     5944<>CALL     5956<>CALL     5957<>CALL
      5977<>CALL     5986<>CALL     6110<>CALL     6114<>CALL     6140<>CALL     6146<>CALL     6150<>CALL
      6151<>CALL
MSGBLK.ARS
      5507**DCL      5926<<ASSIGN   5943<<ASSIGN   5985<<ASSIGN   6113<<ASSIGN   6145<<ASSIGN
MSGBLK.CODECNT
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:80   
      5509**DCL      5941<<ASSIGN   6111<<ASSIGN
MSGBLK.FLAGS.DEST.DODCB
      5488**DCL      5912<<ASSIGN   5979<<ASSIGN
MSGBLK.FLAGS.DEST.ONECONSOLE
      5492**DCL      5978<<ASSIGN
MSGBLK.FLAGS.DEST.STATION
      5482**DCL      5911<<ASSIGN
MSGBLK.TEXT$
      5514**DCL      5925<<ASSIGN   5942<<ASSIGN   5984<<ASSIGN   6112<<ASSIGN   6144<<ASSIGN
OUT$BLK.CODE
      5120**DCL      5853>>ASSIGN   5860>>ASSIGN
OUT$BLK.SUBLK$
      5145**DCL      6096>>IF       6096>>IF
OUT$SYM.COUNT
      5181**DCL      5184--IMP-SIZ  6096>>IF
OUT$SYM.TEXT
      5184**DCL      6096>>IF
PARSE_ERR
      6108**LABEL    5851--CALLALT  5857--CALLALT  6053--GOTO
PARSE_WORK
      5586**DCL      5846--ASSIGN   5847--ASSIGN
POS
      5578**DCL      5914<<ASSIGN   5915>>DOWHILE  5916>>IF       5918<<ASSIGN   5918>>ASSIGN   5921>>ASSIGN
      5922<<ASSIGN   5922>>ASSIGN   5924>>ASSIGN   5926>>ASSIGN   5981<<ASSIGN   5983>>ASSIGN   5985>>ASSIGN
PRINT_ERR
      6150**LABEL    5869--GOTO     5883--GOTO     5893--GOTO     5900--GOTO     5906--GOTO     5950--GOTO
      5967--GOTO     5973--GOTO
P_PCB
      5233**DCL      5851<>CALL     5857<>CALL
P_PCB.ERROR
      5337**DCL      6118>>ASSIGN
P_PCB.ERROR.CODE
      5345**DCL      6052<<ASSIGN
P_PCB.HI_CHAR
      5384**DCL      6121<<ASSIGN   6143>>ASSIGN   6145>>ASSIGN
P_PCB.NCHARS
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:81   
      5380**DCL      5848<<ASSIGN
P_PCB.OUT$
      5246**DCL      5853>>ASSIGN   5860>>ASSIGN   5861>>ASSIGN
P_PCB.ROOT$
      5238**DCL      5845<<ASSIGN   5856<<ASSIGN
P_PCB.TEXT$
      5234**DCL      5844<<ASSIGN
P_PCB.WKSZ
      5263**DCL      5847<<ASSIGN
P_PCB.WORK$
      5242**DCL      5846<<ASSIGN
QQB$ASSIST
      4915**DCL-ENT  5997--CALL
QQB$BEGIN
      4916**DCL-ENT  6000--CALL
QQB$CANCEL
      4917**DCL-ENT  6003--CALL
QQB$CHECK
      4918**DCL-ENT  6006--CALL
QQB$DELIVER
      4919**DCL-ENT  6009--CALL
QQB$DISEN
      4920**DCL-ENT  6012--CALL
QQB$DISPLAY
      4921**DCL-ENT  6015--CALL
QQB$ERSEND
      4922**DCL-ENT  6094--CALL
QQB$HELP
      4923**DCL-ENT  6021--CALL     6097--CALL
QQB$HOLD
      4924**DCL-ENT  6018--CALL
QQB$KILL
      4925**DCL-ENT  6024--CALL
QQB$LET
      4926**DCL-ENT  6058--CALL
QQB$MESSAGE
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:82   
      4927**DCL-ENT  6061--CALL
QQB$OFF
      4928**DCL-ENT  6064--CALL
QQB$PASSWORD
      4929**DCL-ENT  6067--CALL
QQB$PRIO
      4930**DCL-ENT  6070--CALL
QQB$PROFILE
      4931**DCL-ENT  6073--CALL
QQB$READ
      4932**DCL-ENT  6076--CALL
QQB$SPY
      4933**DCL-ENT  6079--CALL
QQB$START
      4934**DCL-ENT  6099--CALL     6101--CALL
QQB$STATS
      4935**DCL-ENT  6082--CALL
QQB$STOPTP
      4936**DCL-ENT  6085--CALL
QQB$TIME
      4937**DCL-ENT  6091--CALL
QQB$TRANS
      4938**DCL-ENT  6088--CALL
QQB$UNDER
      4939**DCL-ENT  6103--CALL
QQC$BLDMSG
      4941**DCL-ENT  5944--CALL     5957--CALL     6114--CALL     6146--CALL     6151--CALL
QQC$BLDMSG_BLK
      4940**DCL-ENT  5910--CALL     5940--CALL     5956--CALL     5977--CALL     6110--CALL     6140--CALL
      6150--CALL
QQC$SCREECH
      4943**DCL-ENT  6158--CALL
QQC$SNDMSG
      4942**DCL-ENT  5927--CALL     5986--CALL
QQ_CMDBLK.ARS
      4414**DCL      5848>>ASSIGN   5923>>ASSIGN   5935>>ASSIGN   5943>>ASSIGN   5982>>ASSIGN   6113>>ASSIGN
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:83   
QQ_CMDBLK.CODE
      4414**DCL      5849<<ASSIGN   5853<<ASSIGN   5854>>IF       5856>>ASSIGN   5860<<ASSIGN   5862>>ASSIGN
      5866>>IF       5871>>IF       5874>>ASSIGN   5960>>ASSIGN   5993>>DOCASE   6048>>IF       6048>>IF
      6126>>IF       6134>>ASSIGN
QQ_CMDBLK.FLAGS
      4415**DCL      5850<<ASSIGN
QQ_CMDBLK.FLAGS.ERR
      4415**DCL      6136<<ASSIGN
QQ_CMDBLK.MAJOR_ERR
      4413**DCL      5875<<ASSIGN   6135<<ASSIGN
QQ_CMDBLK.MAJOR_ERR_USED
      4414**DCL      5877<<ASSIGN
QQ_CMDBLK.MINOR_ERR
      4414**DCL      5868<<ASSIGN   5876<<ASSIGN   5882<<ASSIGN   5892<<ASSIGN   5899<<ASSIGN   5905<<ASSIGN
      5949<<ASSIGN   5955<<ASSIGN   5966<<ASSIGN   5972<<ASSIGN   6122<<ASSIGN   6128<<ASSIGN   6132<<ASSIGN
QQ_CMDBLK.ORIGIN
      4414**DCL      5864>>IF       5886>>DOCASE   6108>>IF
QQ_CMDBLK.OUT$
      4414**DCL      5861<<ASSIGN   6096>>IF       6096>>IF
QQ_CMDBLK.S$
      4414**DCL      5865>>IF       5867>>ASSIGN   5896>>IF       5913>>ASSIGN
QQ_CMDBLK.TEXT$
      4414**DCL      5844>>ASSIGN   5924>>ASSIGN   5936>>ASSIGN   5942>>ASSIGN   5983>>ASSIGN   6112>>ASSIGN
QQ_CMDFLAGS.INFO
      4659**DCL      5862>>ASSIGN
QQ_CMDFLAGS.INFO.BEENUSED#
      4690**DCL      5960<<ASSIGN
QQ_CMDFLAGS.INFO.TREE#
      4692**DCL      5854>>IF       5856>>ASSIGN
QQ_GLOBAL.CMD_CNT
      4421**DCL      5991<<ASSIGN   5991>>ASSIGN
QQ_GLOBAL.DS1$_BITS
      4425**DCL      4425--REDEF
QQ_GLOBAL.DS2$_BITS
      4425**DCL      4426--REDEF
QQ_GLOBAL.DS3$_BITS
PL6.E3A0      #001=QQA$CMD File=QQA$CMD.:E05TSI                                  WED 07/30/97 05:21 Page:84   
      4426**DCL      4426--REDEF
QQ_GLOBAL.DS4$_BITS
      4426**DCL      4427--REDEF
QQ_GLOBAL.ERR
      4415**DCL      6157<<ASSIGN
QQ_GLOBAL.ERROR_CNT
      4421**DCL      5945<<ASSIGN   5945>>ASSIGN   6115<<ASSIGN   6115>>ASSIGN
QQ_GLOBAL.INIT_PASS
      4422**DCL      5932>>IF
QQ_GLOBAL.PASS1_CMDS
      4417**DCL      5934<<ASSIGN
QQ_GLOBAL.TERMINATE
      4418**DCL      5839>>IF
QQ_NODES$
      4503**DCL      5845>>ASSIGN   5856>>ASSIGN
RET
      6154**LABEL    5841--GOTO     5938--GOTO     6105--GOTO     6147--GOTO
S$
      5045**DCL      5047--IMP-PTR
TP$STATION.FLAGS.PRIV
      5075**DCL      5896>>IF
TP$STATION.FLAGS.UNDER_SET
      5094**DCL      5865>>IF       5867<<ASSIGN
TP$STATION.ID
      5048**DCL      5913>>ASSIGN
UPBUF
      5577**DCL      5913<<ASSIGN   5916>>IF       5921<<ASSIGN   5924--ASSIGN   5925--ASSIGN   5980<<ASSIGN
      5983--ASSIGN   5984--ASSIGN   6141<<ASSIGN   6143--ASSIGN   6144--ASSIGN
X$PARSE
      4914**DCL-ENT  5851--CALL     5857--CALL
