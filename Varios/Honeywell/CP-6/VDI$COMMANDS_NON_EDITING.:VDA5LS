VERSION A05

PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:1    
        1        1        /*M* VDI$COMMANDS_NON_EDITING - Command processors for non-editing commands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME:  VDI$COMMANDS_NON_EDITING
       12       12            PURPOSE:  Command processors for non-editing commands.
       13       13            DESCRIPTION:
       14       14                This module contains several external routines:
       15       15
       16       16                VDI$CEND
       17       17                Processes the END/XIT/QUIT command.
       18       18
       19       19                VDI$CEQUALS
       20       20                Processes the EQUALS command.
       21       21
       22       22                VDI$CKEYIN
       23       23                Processes the KEYIN command.
       24       24
       25       25                VDI$CLOCATION
       26       26                Processes the LOCATION command.
       27       27
       28       28                VDI$CREAD
       29       29                Processes the READ command.
       30       30
       31       31                VDI$CRESTORE
       32       32                Processes the RESTORE command.
       33       33
       34       34                VDI$CSAVE
       35       35                Processes the SAVE command.
       36       36
       37       37                VDI$CSYNONYM
PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:2    
       38       38                Processes the SYNONYM command.
       39       39
       40       40                VDI$CUPDATE_NAME
       41       41                Does processing common to all assignment commands:  given a name,
       42       42                a value, and an optional subscript, creates or updates the name with
       43       43                the value.
       44       44        */
       45       45
       46       46        /*D* NAME:  VDI$CEND
       47       47            PARAMETERS:
       48       48                END_CMD - A VD$IT_COMMAND InTree node whose .CODE# is %T_END_CMD.
       49       49            INPUT:
       50       50                None.
       51       51            OUTPUT:
       52       52                None.
       53       53            DESCRIPTION:
       54       54                Call VDG$MTERMINATE to clean up and return to the monitor.
       55       55        */
       56       56
       57       57        VDI$CEND: PROC (END_CMD) ALTRET;
       58       58
       59       59        %INCLUDE VD_MACROS_M;
       60     2274
       61     2275        %VD$IT_COMMAND (NAME=END_CMD, STCLASS=PARAM);
       62     2313
       63     2314    1   DCL VDG$MTERMINATE ENTRY;
       64     2315        %EJECT;
PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:3    
       65     2316    1   VDI$CEND_GLOBAL: ENTRY;
       66     2317    1           CALL VDG$MTERMINATE;
       67     2318
       68     2319    1   END VDI$CEND;
       69     2320        %EOD;

PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:4    
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CEND.

   Procedure VDI$CEND requires 9 words for executable code.
   Procedure VDI$CEND requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:5    

 Object Unit name= VDI$CEND                                   File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:31:22.56 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     9     11  VDI$CEND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  VDI$CEND
     0      3          yes     yes      Std        0  VDI$CEND_GLOBAL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 VDG$MTERMINATE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:6    


        1        1        /*M* VDI$COMMANDS_NON_EDITING - Command processors for non-editing commands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME:  VDI$COMMANDS_NON_EDITING
       12       12            PURPOSE:  Command processors for non-editing commands.
       13       13            DESCRIPTION:
       14       14                This module contains several external routines:
       15       15
       16       16                VDI$CEND
       17       17                Processes the END/XIT/QUIT command.
       18       18
       19       19                VDI$CEQUALS
       20       20                Processes the EQUALS command.
       21       21
       22       22                VDI$CKEYIN
       23       23                Processes the KEYIN command.
       24       24
       25       25                VDI$CLOCATION
       26       26                Processes the LOCATION command.
       27       27
       28       28                VDI$CREAD
       29       29                Processes the READ command.
       30       30
       31       31                VDI$CRESTORE
       32       32                Processes the RESTORE command.
       33       33
       34       34                VDI$CSAVE
       35       35                Processes the SAVE command.
       36       36
PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:7    
       37       37                VDI$CSYNONYM
       38       38                Processes the SYNONYM command.
       39       39
       40       40                VDI$CUPDATE_NAME
       41       41                Does processing common to all assignment commands:  given a name,
       42       42                a value, and an optional subscript, creates or updates the name with
       43       43                the value.
       44       44        */
       45       45
       46       46        /*D* NAME:  VDI$CEND
       47       47            PARAMETERS:
       48       48                END_CMD - A VD$IT_COMMAND InTree node whose .CODE# is %T_END_CMD.
       49       49            INPUT:
       50       50                None.
       51       51            OUTPUT:
       52       52                None.
       53       53            DESCRIPTION:
       54       54                Call VDG$MTERMINATE to clean up and return to the monitor.
       55       55        */
       56       56
       57       57        VDI$CEND: PROC (END_CMD) ALTRET;

     57  0 000000   000000 700200 xent  VDI$CEND     TSX0  ! X66_AUTO_1
         0 000001   000004 000001                    ZERO    4,1
         0 000002   000005 710000 0                  TRA     s:2317

       58       58
       59       59        %INCLUDE VD_MACROS_M;
       60     2274
       61     2275        %VD$IT_COMMAND (NAME=END_CMD, STCLASS=PARAM);
       62     2313
       63     2314    1   DCL VDG$MTERMINATE ENTRY;
       64     2315        %EJECT;
PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:8    
       65     2316    1   VDI$CEND_GLOBAL: ENTRY;

   2316  0 000003   000000 700200 xent  VDI$CEND_GL* TSX0  ! X66_AUTO_1
         0 000004   000004 000001                    ZERO    4,1

       66     2317    1           CALL VDG$MTERMINATE;

   2317  0 000005   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000006   000000 701000 xent               TSX1    VDG$MTERMINATE
         0 000007   000000 011000                    NOP     0

       67     2318
       68     2319    1   END VDI$CEND;

   2319  0 000010   000000 702200 xent               TSX2  ! X66_ARET
       69     2320        %EOD;

PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:9    
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CEND.
PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:10   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @END_CMD                  *0-0-0/w STRC(540)   r     1 END_CMD


   Procedure VDI$CEND requires 9 words for executable code.
   Procedure VDI$CEND requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDI$CEND File=VDI$COMMANDS_NON_EDITING.:VDA5TSI               FRI 07/04/97 11:31 Page:12   
          MINI XREF LISTING

END_CMD
      2283**DCL        57--PROC
VDG$MTERMINATE
      2314**DCL-ENT  2317--CALL

PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:13   
       70        1        /*M* VDI$CEQUALS - Command Processor for EQUALS command */
       71        2        /*T***********************************************************/
       72        3        /*T*                                                         */
       73        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       74        5        /*T*                                                         */
       75        6        /*T***********************************************************/
       76        7
       77        8        /*X* MCR=NO, DMC=YES */
       78        9        /*T*/
       79       10
       80       11        /*P* NAME:  VDI$CEQUALS
       81       12            PURPOSE:
       82       13                Command Processor for EQUALS command.
       83       14            DESCRIPTION:
       84       15                Given an InTree node for an EQUALS command, will perform
       85       16                the command:  evaluate the right-side expression, find/insert
       86       17                the defined variable in the EQUALS file, deleting it from any
       87       18                other internal file it may have been defined in.
       88       19        */
       89       20
       90       21        /*D* NAME:  VDI$CEQUALS
       91       22            PARAMETERS:
       92       23                EQUALS_CMD - The VD$IT_COMMAND node for the command:
       93       24                    .CODE must be %T_EQUALS_CMD.
       94       25                    .PARAM$ (%CP_EQ_NAME) must point to a VD$TEXTC_REMOTE which contains
       95       26                        the name being assigned.
       96       27                    .PARAM$ (%CP_EQ_VALUE) must point to a VD$BUFFER which contains
       97       28                        the value to assign to the name.
       98       29                    .PARAM$ (%CP_EQ_IN) optionally points to a VD$NUMBER which contains
       99       30                        the window specifier (%WI_xxx value, or window key with
      100       31                        %WI_KEY_OFFSET added to it).
      101       32            INPUT:
      102       33                VD_6E.EQUALS$ must point to a VD$STREAM which is open to the Equals
      103       34                    file.
      104       35            OUTPUT:
      105       36                EQUALS_CMD.PARAM$ (%CP_EQ_VALUE) will be NIL.
      106       37            DESCRIPTION:
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:14   
      107       38                Find the name in the EQUALS file:  if not found,
      108       39                    insert it into the file, deleting it from any other
      109       40                    internal file it may be defined in.
      110       41        */
      111       42
      112       43        VDI$CEQUALS: PROC (EQUALS_CMD) ALTRET;
      113       44
      114       45        %INCLUDE VD_MACROS_M;
      115     2260        %INCLUDE VD_PERR_C;
      116     2408        %INCLUDE VD_NODES0_E;
      117     2500
      118     2501        %VD$IT_COMMAND (NAME=EQUALS_CMD, STCLASS=PARAM);
      119     2539
      120     2540    1   DCL VDI$CUPDATE_NAME            ENTRY (4) ALTRET;
      121     2541
      122     2542        %VD_6E ( STCLASS = SYMREF );
      123     2578
      124     2579
      125     2580    1   DCL EQUALS_NAME$ PTR;
      126     2581    1   DCL EQUALS_IN$ PTR;
      127     2582    1   DCL SUBSCRIPT$ PTR;
      128     2583
      129     2584
      130     2585        %VD$TEXTC_REMOTE (NAME=EQUALS$NAME, STCLASS="BASED(EQUALS_NAME$)");
      131     2646        %VD$NUMBER (NAME=EQUALS$IN, STCLASS="BASED(EQUALS_IN$)");
      132     2691        %VD$STREAM (NAME=EQUALS$STREAM, STCLASS="BASED(VD_6E.EQUALS$)");
      133     2797    1   DCL SUB$SCRIPT SBIN BASED(SUBSCRIPT$);
      134     2798        %VD$TEXTC;
      135     2821        %EJECT;
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:15   
      136     2822    1           EQUALS_NAME$ = EQUALS_CMD.PARAM$ (%CP_EQ_NAME);
      137     2823    1           SUBSCRIPT$ = ADDR(NIL);
      138     2824
      139     2825    2           IF EQUALS_CMD.PARAM$ (%CP_EQ_IN) ~= ADDR(NIL) THEN DO;
      140     2826    2              EQUALS_IN$ = EQUALS_CMD.PARAM$ (%CP_EQ_IN);
      141     2827    2              IF EQUALS$IN.V# ~= %WI_ALL THEN
      142     2828    2                 SUBSCRIPT$ = ADDR(EQUALS$IN.V#);
      143     2829    2              END;
      144     2830
      145     2831    1           CALL VDI$CUPDATE_NAME ( EQUALS$STREAM,
      146     2832    1             ADDR(EQUALS$NAME.LENGTH#) -> VD$TEXTC,
      147     2833    1             EQUALS_CMD.PARAM$ (%CP_EQ_VALUE),
      148     2834    1             SUB$SCRIPT )
      149     2835    1           WHENALTRETURN
      150     2836    2           DO;
      151     2837    2              ALTRETURN;
      152     2838    2              END;
      153     2839                /* The Equals file now owns the value VD$BUFFER object */
      154     2840
      155     2841    1           RETURN;
      156     2842
      157     2843    1   END VDI$CEQUALS;
      158     2844        %EOD;

PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:16   
--  Include file information  --

   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CEQUALS.

   Procedure VDI$CEQUALS requires 32 words for executable code.
   Procedure VDI$CEQUALS requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:17   

 Object Unit name= VDI$CEQUALS                                File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:31:26.72 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    32     40  VDI$CEQUALS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  VDI$CEQUALS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 VDI$CUPDATE_NAME
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 B_VECTNIL
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:18   


       70        1        /*M* VDI$CEQUALS - Command Processor for EQUALS command */
       71        2        /*T***********************************************************/
       72        3        /*T*                                                         */
       73        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       74        5        /*T*                                                         */
       75        6        /*T***********************************************************/
       76        7
       77        8        /*X* MCR=NO, DMC=YES */
       78        9        /*T*/
       79       10
       80       11        /*P* NAME:  VDI$CEQUALS
       81       12            PURPOSE:
       82       13                Command Processor for EQUALS command.
       83       14            DESCRIPTION:
       84       15                Given an InTree node for an EQUALS command, will perform
       85       16                the command:  evaluate the right-side expression, find/insert
       86       17                the defined variable in the EQUALS file, deleting it from any
       87       18                other internal file it may have been defined in.
       88       19        */
       89       20
       90       21        /*D* NAME:  VDI$CEQUALS
       91       22            PARAMETERS:
       92       23                EQUALS_CMD - The VD$IT_COMMAND node for the command:
       93       24                    .CODE must be %T_EQUALS_CMD.
       94       25                    .PARAM$ (%CP_EQ_NAME) must point to a VD$TEXTC_REMOTE which contains
       95       26                        the name being assigned.
       96       27                    .PARAM$ (%CP_EQ_VALUE) must point to a VD$BUFFER which contains
       97       28                        the value to assign to the name.
       98       29                    .PARAM$ (%CP_EQ_IN) optionally points to a VD$NUMBER which contains
       99       30                        the window specifier (%WI_xxx value, or window key with
      100       31                        %WI_KEY_OFFSET added to it).
      101       32            INPUT:
      102       33                VD_6E.EQUALS$ must point to a VD$STREAM which is open to the Equals
      103       34                    file.
      104       35            OUTPUT:
      105       36                EQUALS_CMD.PARAM$ (%CP_EQ_VALUE) will be NIL.
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:19   
      106       37            DESCRIPTION:
      107       38                Find the name in the EQUALS file:  if not found,
      108       39                    insert it into the file, deleting it from any other
      109       40                    internal file it may be defined in.
      110       41        */
      111       42
      112       43        VDI$CEQUALS: PROC (EQUALS_CMD) ALTRET;

     43  0 000000   000000 700200 xent  VDI$CEQUALS  TSX0  ! X66_AUTO_1
         0 000001   000014 000001                    ZERO    12,1

      113       44
      114       45        %INCLUDE VD_MACROS_M;
      115     2260        %INCLUDE VD_PERR_C;
      116     2408        %INCLUDE VD_NODES0_E;
      117     2500
      118     2501        %VD$IT_COMMAND (NAME=EQUALS_CMD, STCLASS=PARAM);
      119     2539
      120     2540    1   DCL VDI$CUPDATE_NAME            ENTRY (4) ALTRET;
      121     2541
      122     2542        %VD_6E ( STCLASS = SYMREF );
      123     2578
      124     2579
      125     2580    1   DCL EQUALS_NAME$ PTR;
      126     2581    1   DCL EQUALS_IN$ PTR;
      127     2582    1   DCL SUBSCRIPT$ PTR;
      128     2583
      129     2584
      130     2585        %VD$TEXTC_REMOTE (NAME=EQUALS$NAME, STCLASS="BASED(EQUALS_NAME$)");
      131     2646        %VD$NUMBER (NAME=EQUALS$IN, STCLASS="BASED(EQUALS_IN$)");
      132     2691        %VD$STREAM (NAME=EQUALS$STREAM, STCLASS="BASED(VD_6E.EQUALS$)");
      133     2797    1   DCL SUB$SCRIPT SBIN BASED(SUBSCRIPT$);
      134     2798        %VD$TEXTC;
      135     2821        %EJECT;
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:20   
      136     2822    1           EQUALS_NAME$ = EQUALS_CMD.PARAM$ (%CP_EQ_NAME);

   2822  0 000002   200003 470500                    LDP0    @EQUALS_CMD,,AUTO
         0 000003   000006 236100                    LDQ     6,,PR0
         0 000004   200004 756100                    STQ     EQUALS_NAME$,,AUTO

      137     2823    1           SUBSCRIPT$ = ADDR(NIL);

   2823  0 000005   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000006   200006 756100                    STQ     SUBSCRIPT$,,AUTO

      138     2824
      139     2825    2           IF EQUALS_CMD.PARAM$ (%CP_EQ_IN) ~= ADDR(NIL) THEN DO;

   2825  0 000007   000010 236100                    LDQ     8,,PR0
         0 000010   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000011   000020 600000 0                  TZE     s:2831

      140     2826    2              EQUALS_IN$ = EQUALS_CMD.PARAM$ (%CP_EQ_IN);

   2826  0 000012   200005 756100                    STQ     EQUALS_IN$,,AUTO

      141     2827    2              IF EQUALS$IN.V# ~= %WI_ALL THEN

   2827  0 000013   200005 471500                    LDP1    EQUALS_IN$,,AUTO
         0 000014   100003 235100                    LDA     3,,PR1
         0 000015   000020 600000 0                  TZE     s:2831

      142     2828    2                 SUBSCRIPT$ = ADDR(EQUALS$IN.V#);

   2828  0 000016   000003 036003                    ADLQ    3,DU
         0 000017   200006 756100                    STQ     SUBSCRIPT$,,AUTO

      143     2829    2              END;

      144     2830
      145     2831    1           CALL VDI$CUPDATE_NAME ( EQUALS$STREAM,
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:21   

   2831  0 000020   200006 236100                    LDQ     SUBSCRIPT$,,AUTO
         0 000021   200013 756100                    STQ     SUBSCRIPT$+5,,AUTO
         0 000022   200003 236100                    LDQ     @EQUALS_CMD,,AUTO
         0 000023   000007 036003                    ADLQ    7,DU
         0 000024   200012 756100                    STQ     SUBSCRIPT$+4,,AUTO
         0 000025   200004 236100                    LDQ     EQUALS_NAME$,,AUTO
         0 000026   000002 036003                    ADLQ    2,DU
         0 000027   000001 235000 xsym               LDA     VD_6E+1
         0 000030   200010 757100                    STAQ    SUBSCRIPT$+2,,AUTO
         0 000031   200010 630500                    EPPR0   SUBSCRIPT$+2,,AUTO
         0 000032   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000033   000000 701000 xent               TSX1    VDI$CUPDATE_NAME
         0 000034   000036 702000 0                  TSX2    s:2837
         0 000035   000037 710000 0                  TRA     s:2841

      146     2832    1             ADDR(EQUALS$NAME.LENGTH#) -> VD$TEXTC,
      147     2833    1             EQUALS_CMD.PARAM$ (%CP_EQ_VALUE),
      148     2834    1             SUB$SCRIPT )
      149     2835    1           WHENALTRETURN
      150     2836    2           DO;

      151     2837    2              ALTRETURN;

   2837  0 000036   000000 702200 xent               TSX2  ! X66_AALT

      152     2838    2              END;
      153     2839                /* The Equals file now owns the value VD$BUFFER object */
      154     2840
      155     2841    1           RETURN;

   2841  0 000037   000000 702200 xent               TSX2  ! X66_ARET
      156     2842
      157     2843    1   END VDI$CEQUALS;
      158     2844        %EOD;

PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:22   
--  Include file information  --

   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CEQUALS.
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:23   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EQUALS_CMD               *0-0-0/w STRC(540)   r     1 EQUALS_CMD
     5-0-0/w PTR         r     1 EQUALS_IN$                 4-0-0/w PTR         r     1 EQUALS_NAME$
     6-0-0/w PTR         r     1 SUBSCRIPT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 EQUALS$IN                  0-0-0/w ASTR(81)    r     1 EQUALS$NAME
     0-0-0/w STRC(864)   r     1 EQUALS$STREAM              0-0-0/w SBIN        r     1 SUB$SCRIPT
     0-0-0/w ASTR(9)     r     1 VD$TEXTC


   Procedure VDI$CEQUALS requires 32 words for executable code.
   Procedure VDI$CEQUALS requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:24   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VDI$CEQUALS File=VDI$COMMANDS_NON_EDITING.:VDA5TSI            FRI 07/04/97 11:31 Page:25   
          MINI XREF LISTING

EQUALS$IN.V#
      2688**DCL      2827>>IF       2828--ASSIGN
EQUALS$NAME.LENGTH#
      2639**DCL      2641--IMP-SIZ  2831--CALL     2831--CALL
EQUALS$STREAM
      2699**DCL      2831<>CALL
EQUALS_CMD
      2509**DCL        43--PROC
EQUALS_CMD.PARAM$
      2536**DCL      2822>>ASSIGN   2825>>IF       2826>>ASSIGN   2831<>CALL
EQUALS_IN$
      2581**DCL      2654--IMP-PTR  2826<<ASSIGN   2827>>IF       2828>>ASSIGN
EQUALS_NAME$
      2580**DCL      2610--IMP-PTR  2822<<ASSIGN   2831>>CALL     2831>>CALL
SUB$SCRIPT
      2797**DCL      2831<>CALL
SUBSCRIPT$
      2582**DCL      2797--IMP-PTR  2823<<ASSIGN   2828<<ASSIGN   2831>>CALL
VD$TEXTC
      2806**DCL      2831<>CALL
VD$TEXTC.LENGTH#
      2814**DCL      2816--IMP-SIZ  2831>>CALL
VDI$CUPDATE_NAME
      2540**DCL-ENT  2831--CALL
VD_6E.EQUALS$
      2555**DCL      2699--IMP-PTR  2831>>CALL

PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:26   
      159        1        /*M* VDI$CKEYIN - Command Processor for KEYIN command */
      160        2        /*T***********************************************************/
      161        3        /*T*                                                         */
      162        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      163        5        /*T*                                                         */
      164        6        /*T***********************************************************/
      165        7
      166        8        /*X* MCR=NO, DMC=YES */
      167        9        /*T*/
      168       10
      169       11        /*P* NAME:  VDI$CKEYIN
      170       12            PURPOSE:
      171       13                Command Processor for KEYIN command.
      172       14            DESCRIPTION:
      173       15                Given a VD$IT_COMMAND InTree node for a KEYIN command, will perform
      174       16                the command:  write the name to the KEYINS file (possibly deleting
      175       17                it from other internal files it may exist in).
      176       18                Calls the Presenter to send the input function definition to the FEP
      177       19                (or queue it up, as appropriate).
      178       20        */
      179       21
      180       22        /*D* NAME:  VDI$CKEYIN
      181       23            PARAMETERS:
      182       24                KEYIN_CMD - The VD$IT_COMMAND Intree node for the command:
      183       25                    .CODE must be %T_TERM_COMMAND.
      184       26                    .PARAM$ (%CP_KE_NAME) must point to a VD$BUFFER containing
      185       27                        the "name" (key sequence to IMP).
      186       28                    .PARAM$ (%CP_KE_VALUE) must point to a VD$BUFFER containing
      187       29                        the value to "assign" to the "name" (string to be generated
      188       30                        by the IMPd key sequence).
      189       31                    .PARAM$ (%CP_KE_IN) optionally points to a VD$NUMBER which contains
      190       32                        the window specifier (%WI_xxx value, or window key with
      191       33                        %WI_KEY_OFFSET added to it).
      192       34            INPUT:
      193       35                VD_$INTRO_1 - A VD_BUFFER for the $INTRO_1 predefined name.  The value
      194       36                    of this name is the user's primary introducer for IMP.
      195       37                    Value's length may be 0.
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:27   
      196       38                VD_$INTRO_2 - A VD_BUFFER for the $INTRO_2 predefined name.  The value
      197       39                    of this name is  the user's secondary introducer for IMP.
      198       40                    Value's length may be 0.
      199       41            OUTPUT:
      200       42                An entry will be made for the "name" within the Keyins internal
      201       43                    file (and deleted from any other internal file in which it may
      202       44                    exist).
      203       45                An IMP input function record will be sent to the Presenter.
      204       46                KEYIN_CMD.PARAM$ (%CP_KE_VALUE) will be NIL.
      205       47            DESCRIPTION:
      206       48                Verify that the name is legal:
      207       49                    1 to 3 chars;
      208       50                    1st char should be non-displayable (if not, just warn the user);
      209       51                    if 1 char, it must not be contained in the $INTRO_1 or $INTRO_2
      210       52                        values;
      211       53                    if > 1 char, all chars except the last must equal exactly either
      212       54                        the $INTRO_1 or $INTRO_2 value.
      213       55                Find the name in the Keyins file:  if not found, insert it into the
      214       56                    file, deleting it from any other internal file it may be defined
      215       57                    in.
      216       58                Build an IMP input function record for the definition, and
      217       59                    send it to the FEP.
      218       60        */
      219       61
      220       62        VDI$CKEYIN: PROC (KEYIN_CMD) ALTRET;
      221       63
      222       64        %INCLUDE CP_6;
      223      145
      224      146        %INCLUDE VD_MACROS_M;
      225     2361        %INCLUDE VD_PERR_C;
      226     2509        %INCLUDE VD_NODES0_E;
      227     2601
      228     2602        %VD$IT_COMMAND (NAME=KEYIN_CMD, STCLASS=PARAM);
      229     2640
      230     2641    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
      231     2642    1   DCL VDG$EREPORT_ERROR           ENTRY (1);
      232     2643    1   DCL VDG$ESCREECH                ENTRY (3);
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:28   
      233     2644    1   DCL VDI$CUPDATE_NAME            ENTRY (4) ALTRET;
      234     2645
      235     2646        %VD_BUFFER (NAME=VD_$INTRO_1, MXNB=%MXNB_$INTRO, STCLASS=SYMREF);
      236     2706        %VD_BUFFER (NAME=VD_$INTRO_2, MXNB=%MXNB_$INTRO, STCLASS=SYMREF);
      237     2766        %VD_6E (STCLASS=SYMREF);
      238     2802
      239     2803    1   DCL PTR_$INTRO_1$ PTR CONSTANT INIT(ADDR(VD_$INTRO_1));
      240     2804    1   DCL PTR_$INTRO_2$ PTR CONSTANT INIT(ADDR(VD_$INTRO_2));
      241     2805
      242     2806        %VD_TEXTC (NAME=KEYIN$NAME, STCLASS=AUTO, MXNB=3);
      243     2947    1   DCL SUBSCRIPT$ PTR;
      244     2948    1   DCL ERROR_CODE UBIN;
      245     2949    1   DCL ESCAPE_COUNT SBIN;
      246     2950    1   DCL VD_ERR$ PTR;
      247     2951    1   DCL VD_U1$ PTR;
      248     2952
      249     2953        %VD$BUFFER (NAME=VD$INTRO_1, STCLASS="BASED(PTR_$INTRO_1$)");
      250     3011        %VD$BUFFER (NAME=VD$INTRO_2, STCLASS="BASED(PTR_$INTRO_2$)");
      251     3069        %VD$NUMBER (NAME=KEYIN$IN);
      252     3114    1   DCL SUB$SCRIPT SBIN BASED(SUBSCRIPT$);
      253     3115        %VD$ERR ( STCLASS = "BASED ( VD_ERR$ )" );
      254     3168        %VD$POINTER;
      255     3213        %VD$STREAM;
      256     3319        %VD$TEXTC;
      257     3342        %VD$BUFFER;
      258     3400        %EJECT;
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:29   
      259     3401    1           KEYIN$NAME.LENGTH# = KEYIN_CMD.PARAM$(%CP_KE_NAME) -> VD$BUFFER.LENGTH#;
      260     3402    1           KEYIN$NAME.BYTES = KEYIN_CMD.PARAM$(%CP_KE_NAME) -> VD$BUFFER.BYTES;
      261     3403    1           SUBSCRIPT$ = ADDR(NIL);
      262     3404
      263     3405    2           IF KEYIN_CMD.PARAM$ (%CP_EQ_IN) ~= ADDR(NIL) THEN DO;
      264     3406    2              IF KEYIN_CMD.PARAM$ (%CP_KE_IN) -> KEYIN$IN.V# ~= %WI_ALL THEN
      265     3407    2                 SUBSCRIPT$ = ADDR(KEYIN_CMD.PARAM$ (%CP_KE_IN) -> KEYIN$IN.V#);
      266     3408    2              END;
      267     3409
      268     3410    1           IF VD$INTRO_1.LENGTH# > 0
      269     3411    1           THEN
      270     3412    1              IF VD$INTRO_1.BYTES = KEYIN$NAME.BYTES
      271     3413    1              THEN
      272     3414    1                 GOTO SPEC_CANT_BE_INTRO;
      273     3415    1           IF VD$INTRO_2.LENGTH# > 0
      274     3416    1           THEN
      275     3417    1              IF VD$INTRO_2.BYTES = KEYIN$NAME.BYTES
      276     3418    1              THEN
      277     3419    1                 GOTO SPEC_CANT_BE_INTRO;
      278     3420
      279     3421    1           ESCAPE_COUNT = 0;
      280     3422    1           IF SUBSTR(KEYIN$NAME.BYTES,0,1) = BINASC(511) THEN
      281     3423    1              ESCAPE_COUNT = 1;
      282     3424
      283     3425    1   CHECK_KEYIN_NAME_AGAINST_INTRO:
      284     3426    2           DO CASE ( KEYIN$NAME.LENGTH# - ESCAPE_COUNT );
      285     3427
      286     3428    2            CASE ( 1 );
      287     3429    2              IF KEYIN$NAME.BYTES >= %CHR_FIRST_DISPLAYABLE
      288     3430    2                AND KEYIN$NAME.BYTES <= %CHR_LAST_DISPLAYABLE
      289     3431    2              THEN
      290     3432    3              DO;
      291     3433    3                 CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )
      292     3434    3                 WHENALTRETURN
      293     3435    4                 DO;
      294     3436    4                    ALTRETURN;
      295     3437    4                    END;
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:30   
      296     3438    3                 VD_ERR$ -> VD$ERR.ERR.CODE# = %E$WARN_KEYIN_DISPLAYABLE;
      297     3439    3                 VD_ERR$ -> VD$ERR.FLAGLEV# = %FLV_WARN;
      298     3440    3                 VD_U1$ = PINCRW ( VD_ERR$, SIZEW ( VD$ERR ) );
      299     3441    3                 VD_U1$ -> VD$POINTER.OBJECT.CLASS# = %CLS_PTR_TEXTC;
      300     3442    3                 VD_U1$ -> VD$POINTER.V$ = ADDR ( KEYIN$NAME.LENGTH# );
      301     3443    3                 CALL VDG$EREPORT_ERROR;
      302     3444    3                 END;
      303     3445
      304     3446    2            CASE ( 2, 3 );
      305     3447    2              IF SUBSTR (KEYIN$NAME.BYTES, ESCAPE_COUNT+1, 1) > BINASC(255)
      306     3448    2                OR SUBSTR (KEYIN$NAME.BYTES, KEYIN$NAME.LENGTH#-1, 1) > BINASC(255)
      307     3449    2              THEN /* function key names only allowed first */
      308     3450    2                 GOTO KEYNAME_NOT_FIRST_ERROR;
      309     3451
      310     3452    2              IF VD$INTRO_1.LENGTH# > 0
      311     3453    2              THEN
      312     3454    2                 IF VD$INTRO_1.BYTES = SUBSTR ( KEYIN$NAME.BYTES, 0, KEYIN$NAME.LENGTH#
              3454                          - 1 )
      313     3455    2                 THEN
      314     3456    3                 DO;
      315     3457    3                    IF VD$INTRO_1.LENGTH# ~= KEYIN$NAME.LENGTH# - 1
      316     3458    3                    THEN
      317     3459    3                       GOTO BAD_KEYIN_NAME_LENGTH;
      318     3460    3                    EXIT CHECK_KEYIN_NAME_AGAINST_INTRO;
      319     3461    3                    END;
      320     3462    2              IF VD$INTRO_2.LENGTH# > 0
      321     3463    2              THEN
      322     3464    2                 IF VD$INTRO_2.BYTES = SUBSTR ( KEYIN$NAME.BYTES, 0, KEYIN$NAME.LENGTH#
              3464                          - 1 )
      323     3465    2                 THEN
      324     3466    3                 DO;
      325     3467    3                    IF VD$INTRO_2.LENGTH# ~= KEYIN$NAME.LENGTH# - 1
      326     3468    3                    THEN
      327     3469    3                       GOTO BAD_KEYIN_NAME_LENGTH;
      328     3470    3                    EXIT CHECK_KEYIN_NAME_AGAINST_INTRO;
      329     3471    3                    END;
      330     3472
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:31   
      331     3473    2              GOTO BAD_KEYIN_NAME_INTRO;
      332     3474
      333     3475    2            CASE ( ELSE );
      334     3476    2              GOTO BAD_KEYIN_NAME_LENGTH;
      335     3477
      336     3478    2            END CHECK_KEYIN_NAME_AGAINST_INTRO;
      337     3479
      338     3480    1           IF KEYIN_CMD.PARAM$ (%CP_KE_VALUE) -> VD$BUFFER.LENGTH# >
      339     3481    1             %MXNB_IMP_TEXT
      340     3482    1           THEN
      341     3483    1              GOTO BAD_KEYIN_VALUE_LENGTH;
      342     3484
      343     3485    1           CALL VDI$CUPDATE_NAME ( VD_6E.KEYINS$ -> VD$STREAM,
      344     3486    1             ADDR(KEYIN$NAME.LENGTH#) -> VD$TEXTC,
      345     3487    1             KEYIN_CMD.PARAM$ (%CP_KE_VALUE),
      346     3488    1             SUB$SCRIPT )
      347     3489    1           WHENALTRETURN
      348     3490    2           DO;
      349     3491    2              ALTRETURN;
      350     3492    2              END;
      351     3493                /* The Keyin file now owns the value VD$BUFFER object */
      352     3494
      353     3495    1           RETURN;
      354     3496
      355     3497    1   KEYNAME_NOT_FIRST_ERROR:
      356     3498    1           ERROR_CODE = %E$KEYNAME_NOT_FIRST;
      357     3499    1           GOTO SERIOUS_ERROR;
      358     3500
      359     3501    1   BAD_KEYIN_NAME_LENGTH:
      360     3502    1           ERROR_CODE = %E$BAD_KEYIN_NAME_LENGTH;
      361     3503    1           GOTO SERIOUS_ERROR;
      362     3504
      363     3505    1   SPEC_CANT_BE_INTRO:
      364     3506    1           ERROR_CODE = %E$SPEC_CANT_BE_INTRO;
      365     3507    1           GOTO SERIOUS_ERROR;
      366     3508
      367     3509    1   BAD_KEYIN_NAME_INTRO:
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:32   
      368     3510    1           ERROR_CODE = %E$BAD_KEYIN_NAME_INTRO;
      369     3511    1           GOTO SERIOUS_ERROR;
      370     3512
      371     3513    1   BAD_KEYIN_VALUE_LENGTH:
      372     3514    1           ERROR_CODE = %E$BAD_KEYIN_VALUE_LENGTH;
      373     3515
      374     3516    1   SERIOUS_ERROR:
      375     3517    1           CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )
      376     3518    1           WHENALTRETURN
      377     3519    2           DO;
      378     3520    2              ALTRETURN;
      379     3521    2              END;
      380     3522    1           VD_ERR$ -> VD$ERR.ERR.CODE# = ERROR_CODE;
      381     3523    1           VD_ERR$ -> VD$ERR.FLAGLEV# = %FLV_SERIOUS;
      382     3524    1           ALTRETURN;
      383     3525
      384     3526    1   END VDI$CKEYIN;
      385     3527        %EOD;

PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:33   
--  Include file information  --

   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDI$CKEYIN.

   Procedure VDI$CKEYIN requires 187 words for executable code.
   Procedure VDI$CKEYIN requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:34   

 Object Unit name= VDI$CKEYIN                                 File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:31:33.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  VDI$CKEYIN
    2   Proc  even  none   187    273  VDI$CKEYIN
    3  RoData even  none     5      5  VDI$CKEYIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  VDI$CKEYIN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 VDG$OALLOC
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       4 VDI$CUPDATE_NAME
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:35   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VD_$INTRO_1                           VD_$INTRO_2
     VD_6E                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:36   


      159        1        /*M* VDI$CKEYIN - Command Processor for KEYIN command */
      160        2        /*T***********************************************************/
      161        3        /*T*                                                         */
      162        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      163        5        /*T*                                                         */
      164        6        /*T***********************************************************/
      165        7
      166        8        /*X* MCR=NO, DMC=YES */
      167        9        /*T*/
      168       10
      169       11        /*P* NAME:  VDI$CKEYIN
      170       12            PURPOSE:
      171       13                Command Processor for KEYIN command.
      172       14            DESCRIPTION:
      173       15                Given a VD$IT_COMMAND InTree node for a KEYIN command, will perform
      174       16                the command:  write the name to the KEYINS file (possibly deleting
      175       17                it from other internal files it may exist in).
      176       18                Calls the Presenter to send the input function definition to the FEP
      177       19                (or queue it up, as appropriate).
      178       20        */
      179       21
      180       22        /*D* NAME:  VDI$CKEYIN
      181       23            PARAMETERS:
      182       24                KEYIN_CMD - The VD$IT_COMMAND Intree node for the command:
      183       25                    .CODE must be %T_TERM_COMMAND.
      184       26                    .PARAM$ (%CP_KE_NAME) must point to a VD$BUFFER containing
      185       27                        the "name" (key sequence to IMP).
      186       28                    .PARAM$ (%CP_KE_VALUE) must point to a VD$BUFFER containing
      187       29                        the value to "assign" to the "name" (string to be generated
      188       30                        by the IMPd key sequence).
      189       31                    .PARAM$ (%CP_KE_IN) optionally points to a VD$NUMBER which contains
      190       32                        the window specifier (%WI_xxx value, or window key with
      191       33                        %WI_KEY_OFFSET added to it).
      192       34            INPUT:
      193       35                VD_$INTRO_1 - A VD_BUFFER for the $INTRO_1 predefined name.  The value
      194       36                    of this name is the user's primary introducer for IMP.
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:37   
      195       37                    Value's length may be 0.
      196       38                VD_$INTRO_2 - A VD_BUFFER for the $INTRO_2 predefined name.  The value
      197       39                    of this name is  the user's secondary introducer for IMP.
      198       40                    Value's length may be 0.
      199       41            OUTPUT:
      200       42                An entry will be made for the "name" within the Keyins internal
      201       43                    file (and deleted from any other internal file in which it may
      202       44                    exist).
      203       45                An IMP input function record will be sent to the Presenter.
      204       46                KEYIN_CMD.PARAM$ (%CP_KE_VALUE) will be NIL.
      205       47            DESCRIPTION:
      206       48                Verify that the name is legal:
      207       49                    1 to 3 chars;
      208       50                    1st char should be non-displayable (if not, just warn the user);
      209       51                    if 1 char, it must not be contained in the $INTRO_1 or $INTRO_2
      210       52                        values;
      211       53                    if > 1 char, all chars except the last must equal exactly either
      212       54                        the $INTRO_1 or $INTRO_2 value.
      213       55                Find the name in the Keyins file:  if not found, insert it into the
      214       56                    file, deleting it from any other internal file it may be defined
      215       57                    in.
      216       58                Build an IMP input function record for the definition, and
      217       59                    send it to the FEP.
      218       60        */
      219       61
      220       62        VDI$CKEYIN: PROC (KEYIN_CMD) ALTRET;

     62  2 000000   000000 700200 xent  VDI$CKEYIN   TSX0  ! X66_AUTO_1
         2 000001   000016 000001                    ZERO    14,1

      221       63
      222       64        %INCLUDE CP_6;
      223      145
      224      146        %INCLUDE VD_MACROS_M;
      225     2361        %INCLUDE VD_PERR_C;
      226     2509        %INCLUDE VD_NODES0_E;
      227     2601
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:38   
      228     2602        %VD$IT_COMMAND (NAME=KEYIN_CMD, STCLASS=PARAM);
      229     2640
      230     2641    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
      231     2642    1   DCL VDG$EREPORT_ERROR           ENTRY (1);
      232     2643    1   DCL VDG$ESCREECH                ENTRY (3);
      233     2644    1   DCL VDI$CUPDATE_NAME            ENTRY (4) ALTRET;
      234     2645
      235     2646        %VD_BUFFER (NAME=VD_$INTRO_1, MXNB=%MXNB_$INTRO, STCLASS=SYMREF);
      236     2706        %VD_BUFFER (NAME=VD_$INTRO_2, MXNB=%MXNB_$INTRO, STCLASS=SYMREF);
      237     2766        %VD_6E (STCLASS=SYMREF);
      238     2802
      239     2803    1   DCL PTR_$INTRO_1$ PTR CONSTANT INIT(ADDR(VD_$INTRO_1));
      240     2804    1   DCL PTR_$INTRO_2$ PTR CONSTANT INIT(ADDR(VD_$INTRO_2));
      241     2805
      242     2806        %VD_TEXTC (NAME=KEYIN$NAME, STCLASS=AUTO, MXNB=3);
      243     2947    1   DCL SUBSCRIPT$ PTR;
      244     2948    1   DCL ERROR_CODE UBIN;
      245     2949    1   DCL ESCAPE_COUNT SBIN;
      246     2950    1   DCL VD_ERR$ PTR;
      247     2951    1   DCL VD_U1$ PTR;
      248     2952
      249     2953        %VD$BUFFER (NAME=VD$INTRO_1, STCLASS="BASED(PTR_$INTRO_1$)");
      250     3011        %VD$BUFFER (NAME=VD$INTRO_2, STCLASS="BASED(PTR_$INTRO_2$)");
      251     3069        %VD$NUMBER (NAME=KEYIN$IN);
      252     3114    1   DCL SUB$SCRIPT SBIN BASED(SUBSCRIPT$);
      253     3115        %VD$ERR ( STCLASS = "BASED ( VD_ERR$ )" );
      254     3168        %VD$POINTER;
      255     3213        %VD$STREAM;
      256     3319        %VD$TEXTC;
      257     3342        %VD$BUFFER;
      258     3400        %EJECT;
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:39   
      259     3401    1           KEYIN$NAME.LENGTH# = KEYIN_CMD.PARAM$(%CP_KE_NAME) -> VD$BUFFER.LENGTH#;

   3401  2 000002   200003 470500                    LDP0    @KEYIN_CMD,,AUTO
         2 000003   000006 471500                    LDP1    6,,PR0
         2 000004   100002 236100                    LDQ     2,,PR1
         2 000005   000011 736000                    QLS     9
         2 000006   200004 552140                    STBQ    KEYIN$NAME,'40'O,AUTO

      260     3402    1           KEYIN$NAME.BYTES = KEYIN_CMD.PARAM$(%CP_KE_NAME) -> VD$BUFFER.BYTES;

   3402  2 000007   100002 220100                    LDX0    2,,PR1
         2 000010   040100 100540                    MLR     fill='040'O
         2 000011   100002 400010                    ADSC9   2,,PR1                   cn=2,n=*X0
         2 000012   200004 200003                    ADSC9   KEYIN$NAME,,AUTO         cn=1,n=3

      261     3403    1           SUBSCRIPT$ = ADDR(NIL);

   3403  2 000013   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000014   200005 756100                    STQ     SUBSCRIPT$,,AUTO

      262     3404
      263     3405    2           IF KEYIN_CMD.PARAM$ (%CP_EQ_IN) ~= ADDR(NIL) THEN DO;

   3405  2 000015   000010 236100                    LDQ     8,,PR0
         2 000016   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000017   000025 600000 2                  TZE     s:3410

      264     3406    2              IF KEYIN_CMD.PARAM$ (%CP_KE_IN) -> KEYIN$IN.V# ~= %WI_ALL THEN

   3406  2 000020   000010 473500                    LDP3    8,,PR0
         2 000021   300003 235100                    LDA     3,,PR3
         2 000022   000025 600000 2                  TZE     s:3410

      265     3407    2                 SUBSCRIPT$ = ADDR(KEYIN_CMD.PARAM$ (%CP_KE_IN) -> KEYIN$IN.V#);

   3407  2 000023   300003 634500                    EPPR4   3,,PR3
         2 000024   200005 454500                    STP4    SUBSCRIPT$,,AUTO
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:40   

      266     3408    2              END;

      267     3409
      268     3410    1           IF VD$INTRO_1.LENGTH# > 0

   3410  2 000025   000000 473400 1                  LDP3    PTR_$INTRO_1$
         2 000026   300002 220100                    LDX0    2,,PR3
         2 000027   000034 604400 2                  TMOZ    s:3415

      269     3411    1           THEN
      270     3412    1              IF VD$INTRO_1.BYTES = KEYIN$NAME.BYTES

   3412  2 000030   040100 106540                    CMPC    fill='040'O
         2 000031   300002 400010                    ADSC9   2,,PR3                   cn=2,n=*X0
         2 000032   200004 200003                    ADSC9   KEYIN$NAME,,AUTO         cn=1,n=3
         2 000033   000237 600000 2                  TZE     SPEC_CANT_BE_INTRO

      271     3413    1              THEN
      272     3414    1                 GOTO SPEC_CANT_BE_INTRO;
      273     3415    1           IF VD$INTRO_2.LENGTH# > 0

   3415  2 000034   000001 474400 1                  LDP4    PTR_$INTRO_2$
         2 000035   400002 221100                    LDX1    2,,PR4
         2 000036   000043 604400 2                  TMOZ    s:3421

      274     3416    1           THEN
      275     3417    1              IF VD$INTRO_2.BYTES = KEYIN$NAME.BYTES

   3417  2 000037   040100 106540                    CMPC    fill='040'O
         2 000040   400002 400011                    ADSC9   2,,PR4                   cn=2,n=*X1
         2 000041   200004 200003                    ADSC9   KEYIN$NAME,,AUTO         cn=1,n=3
         2 000042   000237 600000 2                  TZE     SPEC_CANT_BE_INTRO

      276     3418    1              THEN
      277     3419    1                 GOTO SPEC_CANT_BE_INTRO;
      278     3420
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:41   
      279     3421    1           ESCAPE_COUNT = 0;

   3421  2 000043   200007 450100                    STZ     ESCAPE_COUNT,,AUTO

      280     3422    1           IF SUBSTR(KEYIN$NAME.BYTES,0,1) = BINASC(511) THEN

   3422  2 000044   200004 236100                    LDQ     KEYIN$NAME,,AUTO
         2 000045   000777 376003                    ANQ     511,DU
         2 000046   000777 116003                    CMPQ    511,DU
         2 000047   000052 601000 2                  TNZ     CHECK_KEYIN_NAME_AGAINST_INTRO

      281     3423    1              ESCAPE_COUNT = 1;

   3423  2 000050   000001 235007                    LDA     1,DL
         2 000051   200007 755100                    STA     ESCAPE_COUNT,,AUTO

      282     3424
      283     3425    1   CHECK_KEYIN_NAME_AGAINST_INTRO:
      284     3426    2           DO CASE ( KEYIN$NAME.LENGTH# - ESCAPE_COUNT );

   3426  2 000052   200004 236100       CHECK_KEYIN* LDQ     KEYIN$NAME,,AUTO
         2 000053   000033 772000                    QRL     27
         2 000054   200007 136100                    SBLQ    ESCAPE_COUNT,,AUTO
         2 000055   000004 116007                    CMPQ    4,DL
         2 000056   000060 602006 2                  TNC     CHECK_KEYIN_NAME_AGAINST_INTRO+6,QL
         2 000057   000203 710000 2                  TRA     s:3476
         2 000060   000203 710000 2                  TRA     s:3476
         2 000061   000064 710000 2                  TRA     s:3429
         2 000062   000133 710000 2                  TRA     s:3447
         2 000063   000133 710000 2                  TRA     s:3447

      285     3427
      286     3428    2            CASE ( 1 );

      287     3429    2              IF KEYIN$NAME.BYTES >= %CHR_FIRST_DISPLAYABLE

   3429  2 000064   200004 236100                    LDQ     KEYIN$NAME,,AUTO
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:42   
         2 000065   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000066   000000 116000 3                  CMPQ    0
         2 000067   000204 602000 2                  TNC     s:3480
         2 000070   200004 236100                    LDQ     KEYIN$NAME,,AUTO
         2 000071   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000072   000001 116000 3                  CMPQ    1
         2 000073   000075 600000 2                  TZE     s:3433
         2 000074   000204 603000 2                  TRC     s:3480

      288     3430    2                AND KEYIN$NAME.BYTES <= %CHR_LAST_DISPLAYABLE
      289     3431    2              THEN
      290     3432    3              DO;

      291     3433    3                 CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )

   3433  2 000075   200010 635500                    EPPR5   VD_ERR$,,AUTO
         2 000076   200013 455500                    STP5    VD_U1$+2,,AUTO
         2 000077   000002 236000 3                  LDQ     2
         2 000100   200012 756100                    STQ     VD_U1$+1,,AUTO
         2 000101   200012 630500                    EPPR0   VD_U1$+1,,AUTO
         2 000102   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000103   000000 701000 xent               TSX1    VDG$OALLOC
         2 000104   000106 702000 2                  TSX2    s:3436
         2 000105   000107 710000 2                  TRA     s:3438

      292     3434    3                 WHENALTRETURN
      293     3435    4                 DO;

      294     3436    4                    ALTRETURN;

   3436  2 000106   000000 702200 xent               TSX2  ! X66_AALT

      295     3437    4                    END;
      296     3438    3                 VD_ERR$ -> VD$ERR.ERR.CODE# = %E$WARN_KEYIN_DISPLAYABLE;

   3438  2 000107   200010 470500                    LDP0    VD_ERR$,,AUTO
         2 000110   000002 236100                    LDQ     2,,PR0
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:43   
         2 000111   000003 376000 3                  ANQ     3
         2 000112   001770 276007                    ORQ     1016,DL
         2 000113   000002 756100                    STQ     2,,PR0

      297     3439    3                 VD_ERR$ -> VD$ERR.FLAGLEV# = %FLV_WARN;

   3439  2 000114   000002 220003                    LDX0    2,DU
         2 000115   200010 470500                    LDP0    VD_ERR$,,AUTO
         2 000116   000003 740100                    STX0    3,,PR0

      298     3440    3                 VD_U1$ = PINCRW ( VD_ERR$, SIZEW ( VD$ERR ) );

   3440  2 000117   200010 236100                    LDQ     VD_ERR$,,AUTO
         2 000120   000005 036003                    ADLQ    5,DU
         2 000121   200011 756100                    STQ     VD_U1$,,AUTO

      299     3441    3                 VD_U1$ -> VD$POINTER.OBJECT.CLASS# = %CLS_PTR_TEXTC;

   3441  2 000122   000045 221003                    LDX1    37,DU
         2 000123   200011 470500                    LDP0    VD_U1$,,AUTO
         2 000124   000000 741100                    STX1    0,,PR0

      300     3442    3                 VD_U1$ -> VD$POINTER.V$ = ADDR ( KEYIN$NAME.LENGTH# );

   3442  2 000125   200004 631500                    EPPR1   KEYIN$NAME,,AUTO
         2 000126   000003 451500                    STP1    3,,PR0

      301     3443    3                 CALL VDG$EREPORT_ERROR;

   3443  2 000127   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000130   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         2 000131   000000 011000                    NOP     0

      302     3444    3                 END;

   3444  2 000132   000204 710000 2                  TRA     s:3480

PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:44   
      303     3445
      304     3446    2            CASE ( 2, 3 );

      305     3447    2              IF SUBSTR (KEYIN$NAME.BYTES, ESCAPE_COUNT+1, 1) > BINASC(255)

   3447  2 000133   200007 235100                    LDA     ESCAPE_COUNT,,AUTO
         2 000134   040105 106400                    CMPC    fill='040'O
         2 000135   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000136   200004 400001                    ADSC9   KEYIN$NAME,A,AUTO        cn=2,n=1
         2 000137   000231 602000 2                  TNC     KEYNAME_NOT_FIRST_ERROR
         2 000140   200004 236100                    LDQ     KEYIN$NAME,,AUTO
         2 000141   000033 772000                    QRL     27
         2 000142   040106 106400                    CMPC    fill='040'O
         2 000143   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000144   200004 000001                    ADSC9   KEYIN$NAME,Q,AUTO        cn=0,n=1
         2 000145   000231 602000 2                  TNC     KEYNAME_NOT_FIRST_ERROR

      306     3448    2                OR SUBSTR (KEYIN$NAME.BYTES, KEYIN$NAME.LENGTH#-1, 1) > BINASC(255)
      307     3449    2              THEN /* function key names only allowed first */
      308     3450    2                 GOTO KEYNAME_NOT_FIRST_ERROR;
      309     3451
      310     3452    2              IF VD$INTRO_1.LENGTH# > 0

   3452  2 000146   000000 100003                    CMPX0   0,DU
         2 000147   000164 604400 2                  TMOZ    s:3462

      311     3453    2              THEN
      312     3454    2                IF VD$INTRO_1.BYTES = SUBSTR ( KEYIN$NAME.BYTES, 0, KEYIN$NAME.LENGTH#
              3454                          - 1 )

   3454  2 000150   777777 622006                    EAX2    -1,QL
         2 000151   040140 106540                    CMPC    fill='040'O
         2 000152   300002 400010                    ADSC9   2,,PR3                   cn=2,n=*X0
         2 000153   200004 200012                    ADSC9   KEYIN$NAME,,AUTO         cn=1,n=*X2
         2 000154   000164 601000 2                  TNZ     s:3462

      313     3455    2                 THEN
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:45   
      314     3456    3                 DO;

      315     3457    3                    IF VD$INTRO_1.LENGTH# ~= KEYIN$NAME.LENGTH# - 1

   3457  2 000155   000001 136007                    SBLQ    1,DL
         2 000156   200012 756100                    STQ     VD_U1$+1,,AUTO
         2 000157   300002 236100                    LDQ     2,,PR3
         2 000160   000022 732000                    QRS     18
         2 000161   200012 116100                    CMPQ    VD_U1$+1,,AUTO
         2 000162   000234 601000 2                  TNZ     BAD_KEYIN_NAME_LENGTH

      316     3458    3                    THEN
      317     3459    3                       GOTO BAD_KEYIN_NAME_LENGTH;
      318     3460    3                    EXIT CHECK_KEYIN_NAME_AGAINST_INTRO;

   3460  2 000163   000204 710000 2                  TRA     s:3480

      319     3461    3                    END;
      320     3462    2              IF VD$INTRO_2.LENGTH# > 0

   3462  2 000164   000000 101003                    CMPX1   0,DU
         2 000165   000202 604400 2                  TMOZ    s:3473

      321     3463    2              THEN
      322     3464    2                IF VD$INTRO_2.BYTES = SUBSTR ( KEYIN$NAME.BYTES, 0, KEYIN$NAME.LENGTH#
              3464                          - 1 )

   3464  2 000166   777777 622006                    EAX2    -1,QL
         2 000167   040140 106540                    CMPC    fill='040'O
         2 000170   400002 400011                    ADSC9   2,,PR4                   cn=2,n=*X1
         2 000171   200004 200012                    ADSC9   KEYIN$NAME,,AUTO         cn=1,n=*X2
         2 000172   000202 601000 2                  TNZ     s:3473

      323     3465    2                 THEN
      324     3466    3                 DO;

      325     3467    3                    IF VD$INTRO_2.LENGTH# ~= KEYIN$NAME.LENGTH# - 1
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:46   

   3467  2 000173   000001 136007                    SBLQ    1,DL
         2 000174   200012 756100                    STQ     VD_U1$+1,,AUTO
         2 000175   400002 236100                    LDQ     2,,PR4
         2 000176   000022 732000                    QRS     18
         2 000177   200012 116100                    CMPQ    VD_U1$+1,,AUTO
         2 000200   000234 601000 2                  TNZ     BAD_KEYIN_NAME_LENGTH

      326     3468    3                    THEN
      327     3469    3                       GOTO BAD_KEYIN_NAME_LENGTH;
      328     3470    3                    EXIT CHECK_KEYIN_NAME_AGAINST_INTRO;

   3470  2 000201   000204 710000 2                  TRA     s:3480

      329     3471    3                    END;
      330     3472
      331     3473    2              GOTO BAD_KEYIN_NAME_INTRO;

   3473  2 000202   000242 710000 2                  TRA     BAD_KEYIN_NAME_INTRO

      332     3474
      333     3475    2            CASE ( ELSE );

      334     3476    2              GOTO BAD_KEYIN_NAME_LENGTH;

   3476  2 000203   000234 710000 2                  TRA     BAD_KEYIN_NAME_LENGTH

      335     3477
      336     3478    2            END CHECK_KEYIN_NAME_AGAINST_INTRO;

      337     3479
      338     3480    1           IF KEYIN_CMD.PARAM$ (%CP_KE_VALUE) -> VD$BUFFER.LENGTH# >

   3480  2 000204   200003 470500                    LDP0    @KEYIN_CMD,,AUTO
         2 000205   000007 471500                    LDP1    7,,PR0
         2 000206   100002 220100                    LDX0    2,,PR1
         2 000207   000377 100003                    CMPX0   255,DU
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:47   
         2 000210   000245 605400 2                  TPNZ    BAD_KEYIN_VALUE_LENGTH

      339     3481    1             %MXNB_IMP_TEXT
      340     3482    1           THEN
      341     3483    1              GOTO BAD_KEYIN_VALUE_LENGTH;
      342     3484
      343     3485    1           CALL VDI$CUPDATE_NAME ( VD_6E.KEYINS$ -> VD$STREAM,

   3485  2 000211   200005 236100                    LDQ     SUBSCRIPT$,,AUTO
         2 000212   200015 756100                    STQ     VD_U1$+4,,AUTO
         2 000213   200003 236100                    LDQ     @KEYIN_CMD,,AUTO
         2 000214   000007 036003                    ADLQ    7,DU
         2 000215   200014 756100                    STQ     VD_U1$+3,,AUTO
         2 000216   200004 631500                    EPPR1   KEYIN$NAME,,AUTO
         2 000217   200013 451500                    STP1    VD_U1$+2,,AUTO
         2 000220   000004 236000 xsym               LDQ     VD_6E+4
         2 000221   200012 756100                    STQ     VD_U1$+1,,AUTO
         2 000222   200012 630500                    EPPR0   VD_U1$+1,,AUTO
         2 000223   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000224   000000 701000 xent               TSX1    VDI$CUPDATE_NAME
         2 000225   000227 702000 2                  TSX2    s:3491
         2 000226   000230 710000 2                  TRA     s:3495

      344     3486    1             ADDR(KEYIN$NAME.LENGTH#) -> VD$TEXTC,
      345     3487    1             KEYIN_CMD.PARAM$ (%CP_KE_VALUE),
      346     3488    1             SUB$SCRIPT )
      347     3489    1           WHENALTRETURN
      348     3490    2           DO;

      349     3491    2              ALTRETURN;

   3491  2 000227   000000 702200 xent               TSX2  ! X66_AALT

      350     3492    2              END;
      351     3493                /* The Keyin file now owns the value VD$BUFFER object */
      352     3494
      353     3495    1           RETURN;
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:48   

   3495  2 000230   000000 702200 xent               TSX2  ! X66_ARET

      354     3496
      355     3497    1   KEYNAME_NOT_FIRST_ERROR:
      356     3498    1           ERROR_CODE = %E$KEYNAME_NOT_FIRST;

   3498  2 000231   000133 236007       KEYNAME_NOT* LDQ     91,DL
         2 000232   200006 756100                    STQ     ERROR_CODE,,AUTO

      357     3499    1           GOTO SERIOUS_ERROR;

   3499  2 000233   000247 710000 2                  TRA     SERIOUS_ERROR

      358     3500
      359     3501    1   BAD_KEYIN_NAME_LENGTH:
      360     3502    1           ERROR_CODE = %E$BAD_KEYIN_NAME_LENGTH;

   3502  2 000234   000202 235007       BAD_KEYIN_N* LDA     130,DL
         2 000235   200006 755100                    STA     ERROR_CODE,,AUTO

      361     3503    1           GOTO SERIOUS_ERROR;

   3503  2 000236   000247 710000 2                  TRA     SERIOUS_ERROR

      362     3504
      363     3505    1   SPEC_CANT_BE_INTRO:
      364     3506    1           ERROR_CODE = %E$SPEC_CANT_BE_INTRO;

   3506  2 000237   000200 235007       SPEC_CANT_B* LDA     128,DL
         2 000240   200006 755100                    STA     ERROR_CODE,,AUTO

      365     3507    1           GOTO SERIOUS_ERROR;

   3507  2 000241   000247 710000 2                  TRA     SERIOUS_ERROR

      366     3508
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:49   
      367     3509    1   BAD_KEYIN_NAME_INTRO:
      368     3510    1           ERROR_CODE = %E$BAD_KEYIN_NAME_INTRO;

   3510  2 000242   000201 235007       BAD_KEYIN_N* LDA     129,DL
         2 000243   200006 755100                    STA     ERROR_CODE,,AUTO

      369     3511    1           GOTO SERIOUS_ERROR;

   3511  2 000244   000247 710000 2                  TRA     SERIOUS_ERROR

      370     3512
      371     3513    1   BAD_KEYIN_VALUE_LENGTH:
      372     3514    1           ERROR_CODE = %E$BAD_KEYIN_VALUE_LENGTH;

   3514  2 000245   000203 235007       BAD_KEYIN_V* LDA     131,DL
         2 000246   200006 755100                    STA     ERROR_CODE,,AUTO

      373     3515
      374     3516    1   SERIOUS_ERROR:
      375     3517    1           CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )

   3517  2 000247   200010 631500       SERIOUS_ERR* EPPR1   VD_ERR$,,AUTO
         2 000250   200013 451500                    STP1    VD_U1$+2,,AUTO
         2 000251   000002 236000 3                  LDQ     2
         2 000252   200012 756100                    STQ     VD_U1$+1,,AUTO
         2 000253   200012 630500                    EPPR0   VD_U1$+1,,AUTO
         2 000254   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000255   000000 701000 xent               TSX1    VDG$OALLOC
         2 000256   000260 702000 2                  TSX2    s:3520
         2 000257   000261 710000 2                  TRA     s:3522

      376     3518    1           WHENALTRETURN
      377     3519    2           DO;

      378     3520    2              ALTRETURN;

   3520  2 000260   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:50   

      379     3521    2              END;
      380     3522    1           VD_ERR$ -> VD$ERR.ERR.CODE# = ERROR_CODE;

   3522  2 000261   200010 470500                    LDP0    VD_ERR$,,AUTO
         2 000262   200006 236100                    LDQ     ERROR_CODE,,AUTO
         2 000263   000003 736000                    QLS     3
         2 000264   000002 676100                    ERQ     2,,PR0
         2 000265   377770 376007                    ANQ     131064,DL
         2 000266   000002 656100                    ERSQ    2,,PR0

      381     3523    1           VD_ERR$ -> VD$ERR.FLAGLEV# = %FLV_SERIOUS;

   3523  2 000267   000003 220003                    LDX0    3,DU
         2 000270   200010 470500                    LDP0    VD_ERR$,,AUTO
         2 000271   000003 740100                    STX0    3,,PR0

      382     3524    1           ALTRETURN;

   3524  2 000272   000000 702200 xent               TSX2  ! X66_AALT
      383     3525
      384     3526    1   END VDI$CKEYIN;
      385     3527        %EOD;

PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:51   
--  Include file information  --

   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDI$CKEYIN.
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:52   

 **** Variables and constants ****

  ****  Section 001 RoData VDI$CKEYIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 PTR_$INTRO_1$              1-0-0/w PTR         r     1 PTR_$INTRO_2$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @KEYIN_CMD                 6-0-0/w UBIN        r     1 ERROR_CODE
     7-0-0/w SBIN        r     1 ESCAPE_COUNT               4-0-0/c STRC        r     1 KEYIN$NAME
    *0-0-0/w STRC(540)   r     1 KEYIN_CMD                  5-0-0/w PTR         r     1 SUBSCRIPT$
    10-0-0/w PTR         r     1 VD_ERR$                   11-0-0/w PTR         r     1 VD_U1$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(90)    r     1 VD_$INTRO_1                0-0-0/w ASTR(90)    r     1 VD_$INTRO_2
     0-0-0/w STRC(22644) r     1 VD_6E

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 KEYIN$IN                   0-0-0/w SBIN        r     1 SUB$SCRIPT
     0-0-0/w ASTR(90)    r     1 VD$BUFFER                  0-0-0/w STRC(180)   r     1 VD$ERR
     0-0-0/w ASTR(90)    r     1 VD$INTRO_1                 0-0-0/w ASTR(90)    r     1 VD$INTRO_2
     0-0-0/w STRC(144)   r     1 VD$POINTER                 0-0-0/w STRC(864)   r     1 VD$STREAM
     0-0-0/w ASTR(9)     r     1 VD$TEXTC
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:53   


   Procedure VDI$CKEYIN requires 187 words for executable code.
   Procedure VDI$CKEYIN requires 14 words of local(AUTO) storage.
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:54   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:55   
          MINI XREF LISTING

BAD_KEYIN_NAME_INTRO
      3510**LABEL    3473--GOTO
BAD_KEYIN_NAME_LENGTH
      3502**LABEL    3459--GOTO     3469--GOTO     3476--GOTO
BAD_KEYIN_VALUE_LENGTH
      3514**LABEL    3483--GOTO
CHECK_KEYIN_NAME_AGAINST_INTRO
      3426**LABEL    3460--EXIT     3470--EXIT
ERROR_CODE
      2948**DCL      3498<<ASSIGN   3502<<ASSIGN   3506<<ASSIGN   3510<<ASSIGN   3514<<ASSIGN   3522>>ASSIGN
ESCAPE_COUNT
      2949**DCL      3421<<ASSIGN   3423<<ASSIGN   3426>>DOCASE   3447>>IF
KEYIN$IN.V#
      3111**DCL      3406>>IF       3407--ASSIGN
KEYIN$NAME.BYTES
      2944**DCL      3402<<ASSIGN   3412>>IF       3417>>IF       3422>>IF       3429>>IF       3429>>IF
      3447>>IF       3447>>IF       3454>>IF       3464>>IF
KEYIN$NAME.LENGTH#
      2944**DCL      3401<<ASSIGN   3426>>DOCASE   3442--ASSIGN   3447>>IF       3454>>IF       3457>>IF
      3464>>IF       3467>>IF       3485--CALL     3485--CALL
KEYIN_CMD
      2610**DCL        62--PROC
KEYIN_CMD.PARAM$
      2637**DCL      3401>>ASSIGN   3402>>ASSIGN   3402>>ASSIGN   3405>>IF       3406>>IF       3407>>ASSIGN
      3480>>IF       3485<>CALL
KEYNAME_NOT_FIRST_ERROR
      3498**LABEL    3450--GOTO
PTR_$INTRO_1$
      2803**DCL      2978--IMP-PTR  3410>>IF       3412>>IF       3412>>IF       3452>>IF       3454>>IF
      3454>>IF       3457>>IF
PTR_$INTRO_2$
      2804**DCL      3036--IMP-PTR  3415>>IF       3417>>IF       3417>>IF       3462>>IF       3464>>IF
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:56   
      3464>>IF       3467>>IF
SERIOUS_ERROR
      3517**LABEL    3499--GOTO     3503--GOTO     3507--GOTO     3511--GOTO
SPEC_CANT_BE_INTRO
      3506**LABEL    3414--GOTO     3419--GOTO
SUB$SCRIPT
      3114**DCL      3485<>CALL
SUBSCRIPT$
      2947**DCL      3114--IMP-PTR  3403<<ASSIGN   3407<<ASSIGN   3485>>CALL
VD$BUFFER.BYTES
      3395**DCL      3402>>ASSIGN
VD$BUFFER.LENGTH#
      3393**DCL      3395--IMP-SIZ  3401>>ASSIGN   3402>>ASSIGN   3480>>IF
VD$ERR
      3123**DCL      3440--ASSIGN
VD$ERR.ERR.CODE#
      3162**DCL      3438<<ASSIGN   3522<<ASSIGN
VD$ERR.FLAGLEV#
      3165**DCL      3439<<ASSIGN   3523<<ASSIGN
VD$INTRO_1.BYTES
      3006**DCL      3412>>IF       3454>>IF
VD$INTRO_1.LENGTH#
      3004**DCL      3006--IMP-SIZ  3410>>IF       3412>>IF       3452>>IF       3454>>IF       3457>>IF
VD$INTRO_2.BYTES
      3064**DCL      3417>>IF       3464>>IF
VD$INTRO_2.LENGTH#
      3062**DCL      3064--IMP-SIZ  3415>>IF       3417>>IF       3462>>IF       3464>>IF       3467>>IF
VD$POINTER.OBJECT.CLASS#
      3208**DCL      3441<<ASSIGN
VD$POINTER.V$
      3210**DCL      3442<<ASSIGN
VD$STREAM
      3221**DCL      3485<>CALL
VD$TEXTC
      3327**DCL      3485<>CALL
VD$TEXTC.LENGTH#
PL6.E3A0      #003=VDI$CKEYIN File=VDI$COMMANDS_NON_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:57   
      3335**DCL      3337--IMP-SIZ  3485>>CALL
VDG$EREPORT_ERROR
      2642**DCL-ENT  3443--CALL
VDG$OALLOC
      2641**DCL-ENT  3433--CALL     3517--CALL
VDI$CUPDATE_NAME
      2644**DCL-ENT  3485--CALL
VD_$INTRO_1
      2672**DCL      2803--DCLINIT
VD_$INTRO_1.LENGTH#
      2698**DCL      2700--IMP-SIZ
VD_$INTRO_2
      2732**DCL      2804--DCLINIT
VD_$INTRO_2.LENGTH#
      2758**DCL      2760--IMP-SIZ
VD_6E.KEYINS$
      2779**DCL      3485>>CALL
VD_ERR$
      2950**DCL      3123--IMP-PTR  3433<>CALL     3438>>ASSIGN   3439>>ASSIGN   3440>>ASSIGN   3517<>CALL
      3522>>ASSIGN   3523>>ASSIGN
VD_U1$
      2951**DCL      3440<<ASSIGN   3441>>ASSIGN   3442>>ASSIGN

PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:58   
      386        1        /*M* VDI$CLOCATION - Command Processor for LOCATION command */
      387        2        /*T***********************************************************/
      388        3        /*T*                                                         */
      389        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      390        5        /*T*                                                         */
      391        6        /*T***********************************************************/
      392        7
      393        8        /*X* MCR=NO, DMC=YES */
      394        9        /*T*/
      395       10
      396       11        /*P* NAME:  VDI$CLOCATION
      397       12            PURPOSE:
      398       13                Command Processor for LOCATION command.
      399       14            DESCRIPTION:
      400       15                Performs the LOCATION command:  assigns a block-descriptor
      401       16                value to a name.
      402       17        */
      403       18
      404       19        /*D* NAME:  VDI$CLOCATION
      405       20            PARAMETERS:
      406       21                LOCATION_CMD - A VD$IT_COMMAND InTree node:
      407       22                    .CODE must be %T_LOCATION_CMD.
      408       23                    .PARAM$ (%CP_LO_NAME) must point to a VD$TEXTC_REMOTE which contains
      409       24                        the name being assigned.
      410       25            INPUT:
      411       26                VD_CURRENT_WINDOW$ must point to a VD$FILE_NODE at level 1 of the
      412       27                    Windows file, for the current editing window.  This pointer must
      413       28                    not be NIL.  The VD$WINDOW_SPEC attached to this VD$FILE_NODE must
      414       29                    have:
      415       30                    .OPERAND.EDIT_BLOCK$ pointing to a VD$BLOCK_DESC for the current
      416       31                        EditBlock.
      417       32                    .OPERAND.INTREE$ pointing to the root node of the InTree for the
      418       33                        block expression which is to be assigned to the LOCATION-name.
      419       34            OUTPUT:
      420       35            DESCRIPTION:
      421       36                If the block is in a scratch file, reject the assignment.
      422       37                Call VDG$TEST_1_RANGE to guarantee that no SELECT clause
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:59   
      423       38                    repetition was specified in the block expression.
      424       39                Call VDE$IRANGE to evaluate the block expression and find it's range.
      425       40                Build a %CLS_BLOCK_BUFFER (a VD$BLOCK_DESC in a VD$BUFFER's .BYTES
      426       41                    field) with the evaluated range in the block descriptor.
      427       42                Update the Locations file.
      428       43        */
      429       44
      430       45        VDI$CLOCATION: PROC ( LOCATION_CMD ) ALTRET;
      431       46
      432       47        %INCLUDE VD_MACROS_M;
      433     2262        %INCLUDE VD_PERR_C;
      434     2410
      435     2411        %VD$IT_COMMAND ( NAME = LOCATION_CMD,
      436     2412                         STCLASS = PARAM );
      437     2450
      438     2451        %VD_6E ( STCLASS = SYMREF );
      439     2487    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
      440     2488
      441     2489    1   DCL VDE$IRANGE                  ENTRY (2) ALTRET;
      442     2490    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
      443     2491    1   DCL VDG$OCOPY                   ENTRY (2) ALTRET;
      444     2492    1   DCL VDG$OCOPY_RANGE             ENTRY (2) ALTRET;
      445     2493    1   DCL VDG$ESCREECH                ENTRY (3);
      446     2494    1   DCL VDG$TEST_1_RANGE            ENTRY (2) ALTRET;
      447     2495    1   DCL VDI$CUPDATE_NAME            ENTRY (4) ALTRET;
      448     2496
      449     2497    1   DCL LOCATION_NAME$ PTR;
      450     2498    1   DCL BLOCK_BUFFER$ PTR;
      451     2499    1   DCL BLOCK_DESC$ PTR;
      452     2500    1   DCL BLOCK_WITHIN_BUFFER$ PTR;
      453     2501    1   DCL CURRENT_WINDOW$ PTR;
      454     2502    1   DCL ERROR_CODE UBIN;
      455     2503    1   DCL FILE_KEY$ PTR;
      456     2504    1   DCL SIGNAL BIT(1) ALIGNED;
      457     2505    1   DCL VD_ERR$ PTR;
      458     2506
      459     2507        %VD$BLOCK_DESC;
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:60   
      460     2654        %VD$BUFFER;
      461     2712        %VD$BUFFER_HEADER;
      462     2748        %VD$ERR;
      463     2801        %VD$EVAL;
      464     3046        %VD$FILE_KEY ( NAME = FILE$KEY,
      465     3047                       STCLASS = "BASED ( FILE_KEY$ )" );
      466     3096        %VD$FILE_NODE;
      467     3189        %VD$IT_BLOCK_EXPR;
      468     3339        %VD$STREAM;
      469     3445        %VD$TEXTC;
      470     3468        %VD$TEXTC_REMOTE;
      471     3529        %VD$WINDOW_SPEC ( NAME = WINDOW$SPEC,
      472     3530                          STCLASS = "BASED ( CURRENT_WINDOW$ )" );
      473     3596        %VD$TEXTC_REMOTE ( NAME = LOCATION$NAME,
      474     3597                     STCLASS = "BASED ( LOCATION_NAME$ )" );
      475     3658
      476     3659        %EQU SCRATCH_FNAME = CONCAT(FSTCL_INTERNAL, PFK_CONSTANT, DK_SCRATCH);
      477     3660        %EJECT;
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:61   
      478     3661    1   LOCATION_A_FILE_BLOCK:
      479     3662    2           DO;
      480     3663    2              LOCATION_NAME$ = LOCATION_CMD.PARAM$ (%CP_LO_NAME);
      481     3664    2              CURRENT_WINDOW$ = VD_CURRENT_WINDOW$ -> VD$FILE_NODE.DESC.SPEC.V$;
      482     3665
      483     3666                   %GETKEY ( KEY =
              3666                       "WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.FILE_KEY",
      484     3667                   PTR = FILE_KEY$ );
      485     3677    2              IF SUBSTR ( FILE$KEY.UNIQUE.FNAME.BYTES,
      486     3678    2                0, %LENGTHC(SCRATCH_FNAME) ) = %SCRATCH_FNAME
      487     3679    2              THEN
      488     3680    2                 GOTO CANT_LOCATION_SCRATCH;
      489     3681
      490     3682    2              CALL VDG$TEST_1_RANGE ( WINDOW$SPEC.OPERAND.INTREE$ ->
      491     3683    2                VD$IT_BLOCK_EXPR,
      492     3684    2                SIGNAL )
      493     3685    2              WHENALTRETURN
      494     3686    3              DO;
      495     3687    3                 ALTRETURN;
      496     3688    3                 END;
      497     3689
      498     3690    2              IF NOT SIGNAL
      499     3691    2              THEN
      500     3692    2                 GOTO LOCATION_RPT_CNT_NOT_1;
      501     3693
      502     3694    2              CALL VDE$IRANGE ( WINDOW$SPEC.OPERAND,
      503     3695    2                SIGNAL )
      504     3696    2              WHENALTRETURN
      505     3697    3              DO;
      506     3698    3                 ALTRETURN;
      507     3699    3                 END;
      508     3700
      509     3701    2              IF NOT SIGNAL
      510     3702    2              THEN
      511     3703    2                 GOTO NO_RANGE_FOR_LOCATION;
      512     3704
      513     3705    2              CALL VDG$OALLOC ( %CLS_BLOCK_BUFFER,
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:62   
      514     3706    2                BLOCK_BUFFER$ )
      515     3707    2              WHENALTRETURN
      516     3708    3              DO;
      517     3709    3                 ALTRETURN;
      518     3710    3                 END;
      519     3711
      520     3712    2              CALL VDG$OCOPY ( WINDOW$SPEC.OPERAND.EDIT_BLOCK$ ->
      521     3713    2                VD$BLOCK_DESC,
      522     3714    2                BLOCK_DESC$ )
      523     3715    2              WHENALTRETURN
      524     3716    3              DO;
      525     3717    3                 ALTRETURN;
      526     3718    3                 END;
      527     3719
      528     3720    2              BLOCK_WITHIN_BUFFER$ = PINCRW ( BLOCK_BUFFER$,
      529     3721    2                SIZEW ( VD$BUFFER_HEADER ) );
      530     3722
      531     3723    2              BLOCK_WITHIN_BUFFER$ -> VD$BLOCK_DESC = BLOCK_DESC$ -> VD$BLOCK_DESC;
      532     3724
      533     3725    2              CALL VDG$OCOPY_RANGE ( WINDOW$SPEC.OPERAND.EVAL$ ->
      534     3726    2                VD$EVAL.RANGE,
      535     3727    2                BLOCK_WITHIN_BUFFER$ -> VD$BLOCK_DESC.RANGE )
      536     3728    2              WHENALTRETURN
      537     3729    3              DO;
      538     3730    3                 ALTRETURN;
      539     3731    3                 END;
      540     3732
      541     3733    2              CALL VDI$CUPDATE_NAME ( VD_6E.LOCATIONS$ -> VD$STREAM,
      542     3734    2                ADDR(LOCATION$NAME.LENGTH#) -> VD$TEXTC,
      543     3735    2                BLOCK_BUFFER$ )
      544     3736    2              WHENALTRETURN
      545     3737    3              DO;
      546     3738    3                 ALTRETURN;
      547     3739    3                 END;
      548     3740                   /* (Note: the Location file now owns the value VD$BUFFER object.) */
      549     3741
      550     3742    2              END LOCATION_A_FILE_BLOCK;
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:63   
      551     3743
      552     3744    1           RETURN;
      553     3745
      554     3746    1   CANT_LOCATION_SCRATCH:
      555     3747    1           ERROR_CODE = %E$CANT_LOCATION_SCRATCH;
      556     3748    1           GOTO SERIOUS_ERROR;
      557     3749
      558     3750    1   LOCATION_RPT_CNT_NOT_1:
      559     3751    1           ERROR_CODE = %E$LOCATION_RPT_CNT_NOT_1;
      560     3752    1           GOTO SERIOUS_ERROR;
      561     3753
      562     3754    1   NO_RANGE_FOR_LOCATION:
      563     3755    1           ERROR_CODE = %E$NO_RANGE_FOR_LOCATION;
      564     3756
      565     3757    1   SERIOUS_ERROR:
      566     3758    1           CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )
      567     3759    1           WHENALTRETURN
      568     3760    2           DO;
      569     3761    2              ALTRETURN;
      570     3762    2              END;
      571     3763    1           VD_ERR$ -> VD$ERR.ERR.CODE# = ERROR_CODE;
      572     3764    1           VD_ERR$ -> VD$ERR.FLAGLEV# = %FLV_SERIOUS;
      573     3765    1           ALTRETURN;
      574     3766
      575     3767    1   END VDI$CLOCATION;
      576     3768        %EOD;

PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:64   
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CLOCATION.

   Procedure VDI$CLOCATION requires 131 words for executable code.
   Procedure VDI$CLOCATION requires 18 words of local(AUTO) storage.

PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:65   

 Object Unit name= VDI$CLOCATION                              File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:31:43.88 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      4      4  VDI$CLOCATION
    1   Proc  even  none   131    203  VDI$CLOCATION
    2  RoData even  none     2      2  VDI$CLOCATION

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  VDI$CLOCATION

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VDG$TEST_1_RANGE
 yes     yes           Std       2 VDE$IRANGE
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       2 VDG$OCOPY
 yes     yes           Std       2 VDG$OCOPY_RANGE
 yes     yes           Std       4 VDI$CUPDATE_NAME
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:66   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_CURRENT_WINDOW$                    B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:67   


      386        1        /*M* VDI$CLOCATION - Command Processor for LOCATION command */
      387        2        /*T***********************************************************/
      388        3        /*T*                                                         */
      389        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      390        5        /*T*                                                         */
      391        6        /*T***********************************************************/
      392        7
      393        8        /*X* MCR=NO, DMC=YES */
      394        9        /*T*/
      395       10
      396       11        /*P* NAME:  VDI$CLOCATION
      397       12            PURPOSE:
      398       13                Command Processor for LOCATION command.
      399       14            DESCRIPTION:
      400       15                Performs the LOCATION command:  assigns a block-descriptor
      401       16                value to a name.
      402       17        */
      403       18
      404       19        /*D* NAME:  VDI$CLOCATION
      405       20            PARAMETERS:
      406       21                LOCATION_CMD - A VD$IT_COMMAND InTree node:
      407       22                    .CODE must be %T_LOCATION_CMD.
      408       23                    .PARAM$ (%CP_LO_NAME) must point to a VD$TEXTC_REMOTE which contains
      409       24                        the name being assigned.
      410       25            INPUT:
      411       26                VD_CURRENT_WINDOW$ must point to a VD$FILE_NODE at level 1 of the
      412       27                    Windows file, for the current editing window.  This pointer must
      413       28                    not be NIL.  The VD$WINDOW_SPEC attached to this VD$FILE_NODE must
      414       29                    have:
      415       30                    .OPERAND.EDIT_BLOCK$ pointing to a VD$BLOCK_DESC for the current
      416       31                        EditBlock.
      417       32                    .OPERAND.INTREE$ pointing to the root node of the InTree for the
      418       33                        block expression which is to be assigned to the LOCATION-name.
      419       34            OUTPUT:
      420       35            DESCRIPTION:
      421       36                If the block is in a scratch file, reject the assignment.
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:68   
      422       37                Call VDG$TEST_1_RANGE to guarantee that no SELECT clause
      423       38                    repetition was specified in the block expression.
      424       39                Call VDE$IRANGE to evaluate the block expression and find it's range.
      425       40                Build a %CLS_BLOCK_BUFFER (a VD$BLOCK_DESC in a VD$BUFFER's .BYTES
      426       41                    field) with the evaluated range in the block descriptor.
      427       42                Update the Locations file.
      428       43        */
      429       44
      430       45        VDI$CLOCATION: PROC ( LOCATION_CMD ) ALTRET;

     45  1 000000   000000 700200 xent  VDI$CLOCATI* TSX0  ! X66_AUTO_1
         1 000001   000022 000001                    ZERO    18,1

      431       46
      432       47        %INCLUDE VD_MACROS_M;
      433     2262        %INCLUDE VD_PERR_C;
      434     2410
      435     2411        %VD$IT_COMMAND ( NAME = LOCATION_CMD,
      436     2412                         STCLASS = PARAM );
      437     2450
      438     2451        %VD_6E ( STCLASS = SYMREF );
      439     2487    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
      440     2488
      441     2489    1   DCL VDE$IRANGE                  ENTRY (2) ALTRET;
      442     2490    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
      443     2491    1   DCL VDG$OCOPY                   ENTRY (2) ALTRET;
      444     2492    1   DCL VDG$OCOPY_RANGE             ENTRY (2) ALTRET;
      445     2493    1   DCL VDG$ESCREECH                ENTRY (3);
      446     2494    1   DCL VDG$TEST_1_RANGE            ENTRY (2) ALTRET;
      447     2495    1   DCL VDI$CUPDATE_NAME            ENTRY (4) ALTRET;
      448     2496
      449     2497    1   DCL LOCATION_NAME$ PTR;
      450     2498    1   DCL BLOCK_BUFFER$ PTR;
      451     2499    1   DCL BLOCK_DESC$ PTR;
      452     2500    1   DCL BLOCK_WITHIN_BUFFER$ PTR;
      453     2501    1   DCL CURRENT_WINDOW$ PTR;
      454     2502    1   DCL ERROR_CODE UBIN;
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:69   
      455     2503    1   DCL FILE_KEY$ PTR;
      456     2504    1   DCL SIGNAL BIT(1) ALIGNED;
      457     2505    1   DCL VD_ERR$ PTR;
      458     2506
      459     2507        %VD$BLOCK_DESC;
      460     2654        %VD$BUFFER;
      461     2712        %VD$BUFFER_HEADER;
      462     2748        %VD$ERR;
      463     2801        %VD$EVAL;
      464     3046        %VD$FILE_KEY ( NAME = FILE$KEY,
      465     3047                       STCLASS = "BASED ( FILE_KEY$ )" );
      466     3096        %VD$FILE_NODE;
      467     3189        %VD$IT_BLOCK_EXPR;
      468     3339        %VD$STREAM;
      469     3445        %VD$TEXTC;
      470     3468        %VD$TEXTC_REMOTE;
      471     3529        %VD$WINDOW_SPEC ( NAME = WINDOW$SPEC,
      472     3530                          STCLASS = "BASED ( CURRENT_WINDOW$ )" );
      473     3596        %VD$TEXTC_REMOTE ( NAME = LOCATION$NAME,
      474     3597                     STCLASS = "BASED ( LOCATION_NAME$ )" );
      475     3658
      476     3659        %EQU SCRATCH_FNAME = CONCAT(FSTCL_INTERNAL, PFK_CONSTANT, DK_SCRATCH);
      477     3660        %EJECT;
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:70   
      478     3661    1   LOCATION_A_FILE_BLOCK:
      479     3662    2           DO;

   3662  1 000002                       LOCATION_A_* null
      480     3663    2              LOCATION_NAME$ = LOCATION_CMD.PARAM$ (%CP_LO_NAME);

   3663  1 000002   200003 470500                    LDP0    @LOCATION_CMD,,AUTO
         1 000003   000007 236100                    LDQ     7,,PR0
         1 000004   200004 756100                    STQ     LOCATION_NAME$,,AUTO

      481     3664    2              CURRENT_WINDOW$ = VD_CURRENT_WINDOW$ -> VD$FILE_NODE.DESC.SPEC.V$;

   3664  1 000005   000000 471400 xsym               LDP1    VD_CURRENT_WINDOW$
         1 000006   100007 236100                    LDQ     7,,PR1
         1 000007   200010 756100                    STQ     CURRENT_WINDOW$,,AUTO

      482     3665
      483     3666                   %GETKEY ( KEY =
              3666                       "WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.FILE_KEY",
      484     3667                   PTR = FILE_KEY$ );

   3674  1 000010   200010 473500                    LDP3    CURRENT_WINDOW$,,AUTO
         1 000011   300012 474500                    LDP4    10,,PR3
         1 000012   400001 720100                    LXL0    1,,PR4
         1 000013   000002 100003                    CMPX0   2,DU
         1 000014   000021 601000 1                  TNZ     s:3674+9

   3674  1 000015   400002 475500                    LDP5    2,,PR4
         1 000016   500002 636500                    EPPR6   2,,PR5
         1 000017   200012 456500                    STP6    FILE_KEY$,,AUTO
         1 000020   000023 710000 1                  TRA     s:3677

   3674  1 000021   400002 635500                    EPPR5   2,,PR4
         1 000022   200012 455500                    STP5    FILE_KEY$,,AUTO

      485     3677    2              IF SUBSTR ( FILE$KEY.UNIQUE.FNAME.BYTES,

PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:71   
   3677  1 000023   200012 475500                    LDP5    FILE_KEY$,,AUTO
         1 000024   040000 106500                    CMPC    fill='040'O
         1 000025   500004 400016                    ADSC9   4,,PR5                   cn=2,n=14
         1 000026   000000 000016 0                  ADSC9   0                        cn=0,n=14
         1 000027   000147 600000 1                  TZE     CANT_LOCATION_SCRATCH

      486     3678    2                0, %LENGTHC(SCRATCH_FNAME) ) = %SCRATCH_FNAME
      487     3679    2              THEN
      488     3680    2                 GOTO CANT_LOCATION_SCRATCH;
      489     3681
      490     3682    2              CALL VDG$TEST_1_RANGE ( WINDOW$SPEC.OPERAND.INTREE$ ->

   3682  1 000030   300011 476500                    LDP6    9,,PR3
         1 000031   200013 637500                    EPPR7   SIGNAL,,AUTO
         1 000032   200017 457500                    STP7    VD_ERR$+3,,AUTO
         1 000033   200016 456500                    STP6    VD_ERR$+2,,AUTO
         1 000034   200016 630500                    EPPR0   VD_ERR$+2,,AUTO
         1 000035   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000036   000000 701000 xent               TSX1    VDG$TEST_1_RANGE
         1 000037   000041 702000 1                  TSX2    s:3687
         1 000040   000042 710000 1                  TRA     s:3690

      491     3683    2                VD$IT_BLOCK_EXPR,
      492     3684    2                SIGNAL )
      493     3685    2              WHENALTRETURN
      494     3686    3              DO;

      495     3687    3                 ALTRETURN;

   3687  1 000041   000000 702200 xent               TSX2  ! X66_AALT

      496     3688    3                 END;
      497     3689
      498     3690    2              IF NOT SIGNAL

   3690  1 000042   200013 234100                    SZN     SIGNAL,,AUTO
         1 000043   000152 605000 1                  TPL     LOCATION_RPT_CNT_NOT_1
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:72   

      499     3691    2              THEN
      500     3692    2                 GOTO LOCATION_RPT_CNT_NOT_1;
      501     3693
      502     3694    2              CALL VDE$IRANGE ( WINDOW$SPEC.OPERAND,

   3694  1 000044   200013 630500                    EPPR0   SIGNAL,,AUTO
         1 000045   200017 450500                    STP0    VD_ERR$+3,,AUTO
         1 000046   200010 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         1 000047   000010 036003                    ADLQ    8,DU
         1 000050   200016 756100                    STQ     VD_ERR$+2,,AUTO
         1 000051   200016 630500                    EPPR0   VD_ERR$+2,,AUTO
         1 000052   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000053   000000 701000 xent               TSX1    VDE$IRANGE
         1 000054   000056 702000 1                  TSX2    s:3698
         1 000055   000057 710000 1                  TRA     s:3701

      503     3695    2                SIGNAL )
      504     3696    2              WHENALTRETURN
      505     3697    3              DO;

      506     3698    3                 ALTRETURN;

   3698  1 000056   000000 702200 xent               TSX2  ! X66_AALT

      507     3699    3                 END;
      508     3700
      509     3701    2              IF NOT SIGNAL

   3701  1 000057   200013 234100                    SZN     SIGNAL,,AUTO
         1 000060   000155 605000 1                  TPL     NO_RANGE_FOR_LOCATION

      510     3702    2              THEN
      511     3703    2                 GOTO NO_RANGE_FOR_LOCATION;
      512     3704
      513     3705    2              CALL VDG$OALLOC ( %CLS_BLOCK_BUFFER,

PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:73   
   3705  1 000061   200005 630500                    EPPR0   BLOCK_BUFFER$,,AUTO
         1 000062   200017 450500                    STP0    VD_ERR$+3,,AUTO
         1 000063   000000 236000 2                  LDQ     0
         1 000064   200016 756100                    STQ     VD_ERR$+2,,AUTO
         1 000065   200016 630500                    EPPR0   VD_ERR$+2,,AUTO
         1 000066   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000067   000000 701000 xent               TSX1    VDG$OALLOC
         1 000070   000072 702000 1                  TSX2    s:3709
         1 000071   000073 710000 1                  TRA     s:3712

      514     3706    2                BLOCK_BUFFER$ )
      515     3707    2              WHENALTRETURN
      516     3708    3              DO;

      517     3709    3                 ALTRETURN;

   3709  1 000072   000000 702200 xent               TSX2  ! X66_AALT

      518     3710    3                 END;
      519     3711
      520     3712    2              CALL VDG$OCOPY ( WINDOW$SPEC.OPERAND.EDIT_BLOCK$ ->

   3712  1 000073   200010 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         1 000074   000012 471500                    LDP1    10,,PR0
         1 000075   200006 633500                    EPPR3   BLOCK_DESC$,,AUTO
         1 000076   200017 453500                    STP3    VD_ERR$+3,,AUTO
         1 000077   200016 451500                    STP1    VD_ERR$+2,,AUTO
         1 000100   200016 630500                    EPPR0   VD_ERR$+2,,AUTO
         1 000101   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000102   000000 701000 xent               TSX1    VDG$OCOPY
         1 000103   000105 702000 1                  TSX2    s:3717
         1 000104   000106 710000 1                  TRA     s:3720

      521     3713    2                VD$BLOCK_DESC,
      522     3714    2                BLOCK_DESC$ )
      523     3715    2              WHENALTRETURN
      524     3716    3              DO;
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:74   

      525     3717    3                 ALTRETURN;

   3717  1 000105   000000 702200 xent               TSX2  ! X66_AALT

      526     3718    3                 END;
      527     3719
      528     3720    2              BLOCK_WITHIN_BUFFER$ = PINCRW ( BLOCK_BUFFER$,

   3720  1 000106   200005 236100                    LDQ     BLOCK_BUFFER$,,AUTO
         1 000107   000003 036003                    ADLQ    3,DU
         1 000110   200007 756100                    STQ     BLOCK_WITHIN_BUFFER$,,AUTO

      529     3721    2                SIZEW ( VD$BUFFER_HEADER ) );
      530     3722
      531     3723    2              BLOCK_WITHIN_BUFFER$ -> VD$BLOCK_DESC = BLOCK_DESC$ -> VD$BLOCK_DESC;

   3723  1 000111   200006 470500                    LDP0    BLOCK_DESC$,,AUTO
         1 000112   200007 471500                    LDP1    BLOCK_WITHIN_BUFFER$,,AUTO
         1 000113   000100 100500                    MLR     fill='000'O
         1 000114   000000 000150                    ADSC9   0,,PR0                   cn=0,n=104
         1 000115   100000 000150                    ADSC9   0,,PR1                   cn=0,n=104

      532     3724
      533     3725    2              CALL VDG$OCOPY_RANGE ( WINDOW$SPEC.OPERAND.EVAL$ ->

   3725  1 000116   200010 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         1 000117   000013 473500                    LDP3    11,,PR0
         1 000120   000003 036003                    ADLQ    3,DU
         1 000121   200017 756100                    STQ     VD_ERR$+3,,AUTO
         1 000122   300024 634500                    EPPR4   20,,PR3
         1 000123   200016 454500                    STP4    VD_ERR$+2,,AUTO
         1 000124   200016 630500                    EPPR0   VD_ERR$+2,,AUTO
         1 000125   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000126   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         1 000127   000131 702000 1                  TSX2    s:3730
         1 000130   000132 710000 1                  TRA     s:3733
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:75   

      534     3726    2                VD$EVAL.RANGE,
      535     3727    2                BLOCK_WITHIN_BUFFER$ -> VD$BLOCK_DESC.RANGE )
      536     3728    2              WHENALTRETURN
      537     3729    3              DO;

      538     3730    3                 ALTRETURN;

   3730  1 000131   000000 702200 xent               TSX2  ! X66_AALT

      539     3731    3                 END;
      540     3732
      541     3733    2              CALL VDI$CUPDATE_NAME ( VD_6E.LOCATIONS$ -> VD$STREAM,

   3733  1 000132   200005 630500                    EPPR0   BLOCK_BUFFER$,,AUTO
         1 000133   200020 450500                    STP0    VD_ERR$+4,,AUTO
         1 000134   200004 236100                    LDQ     LOCATION_NAME$,,AUTO
         1 000135   000002 036003                    ADLQ    2,DU
         1 000136   000002 235000 xsym               LDA     VD_6E+2
         1 000137   200016 757100                    STAQ    VD_ERR$+2,,AUTO
         1 000140   200016 630500                    EPPR0   VD_ERR$+2,,AUTO
         1 000141   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000142   000000 701000 xent               TSX1    VDI$CUPDATE_NAME
         1 000143   000145 702000 1                  TSX2    s:3738
         1 000144   000146 710000 1                  TRA     s:3744

      542     3734    2                ADDR(LOCATION$NAME.LENGTH#) -> VD$TEXTC,
      543     3735    2                BLOCK_BUFFER$ )
      544     3736    2              WHENALTRETURN
      545     3737    3              DO;

      546     3738    3                 ALTRETURN;

   3738  1 000145   000000 702200 xent               TSX2  ! X66_AALT

      547     3739    3                 END;
      548     3740                   /* (Note: the Location file now owns the value VD$BUFFER object.) */
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:76   
      549     3741
      550     3742    2              END LOCATION_A_FILE_BLOCK;

      551     3743
      552     3744    1           RETURN;

   3744  1 000146   000000 702200 xent               TSX2  ! X66_ARET

      553     3745
      554     3746    1   CANT_LOCATION_SCRATCH:
      555     3747    1           ERROR_CODE = %E$CANT_LOCATION_SCRATCH;

   3747  1 000147   000204 235007       CANT_LOCATI* LDA     132,DL
         1 000150   200011 755100                    STA     ERROR_CODE,,AUTO

      556     3748    1           GOTO SERIOUS_ERROR;

   3748  1 000151   000157 710000 1                  TRA     SERIOUS_ERROR

      557     3749
      558     3750    1   LOCATION_RPT_CNT_NOT_1:
      559     3751    1           ERROR_CODE = %E$LOCATION_RPT_CNT_NOT_1;

   3751  1 000152   000174 235007       LOCATION_RP* LDA     124,DL
         1 000153   200011 755100                    STA     ERROR_CODE,,AUTO

      560     3752    1           GOTO SERIOUS_ERROR;

   3752  1 000154   000157 710000 1                  TRA     SERIOUS_ERROR

      561     3753
      562     3754    1   NO_RANGE_FOR_LOCATION:
      563     3755    1           ERROR_CODE = %E$NO_RANGE_FOR_LOCATION;

   3755  1 000155   000175 235007       NO_RANGE_FO* LDA     125,DL
         1 000156   200011 755100                    STA     ERROR_CODE,,AUTO

PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:77   
      564     3756
      565     3757    1   SERIOUS_ERROR:
      566     3758    1           CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )

   3758  1 000157   200014 630500       SERIOUS_ERR* EPPR0   VD_ERR$,,AUTO
         1 000160   200017 450500                    STP0    VD_ERR$+3,,AUTO
         1 000161   000001 236000 2                  LDQ     1
         1 000162   200016 756100                    STQ     VD_ERR$+2,,AUTO
         1 000163   200016 630500                    EPPR0   VD_ERR$+2,,AUTO
         1 000164   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000165   000000 701000 xent               TSX1    VDG$OALLOC
         1 000166   000170 702000 1                  TSX2    s:3761
         1 000167   000171 710000 1                  TRA     s:3763

      567     3759    1           WHENALTRETURN
      568     3760    2           DO;

      569     3761    2              ALTRETURN;

   3761  1 000170   000000 702200 xent               TSX2  ! X66_AALT

      570     3762    2              END;
      571     3763    1           VD_ERR$ -> VD$ERR.ERR.CODE# = ERROR_CODE;

   3763  1 000171   200014 470500                    LDP0    VD_ERR$,,AUTO
         1 000172   200011 236100                    LDQ     ERROR_CODE,,AUTO
         1 000173   000003 736000                    QLS     3
         1 000174   000002 676100                    ERQ     2,,PR0
         1 000175   377770 376007                    ANQ     131064,DL
         1 000176   000002 656100                    ERSQ    2,,PR0

      572     3764    1           VD_ERR$ -> VD$ERR.FLAGLEV# = %FLV_SERIOUS;

   3764  1 000177   000003 220003                    LDX0    3,DU
         1 000200   200014 470500                    LDP0    VD_ERR$,,AUTO
         1 000201   000003 740100                    STX0    3,,PR0

PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:78   
      573     3765    1           ALTRETURN;

   3765  1 000202   000000 702200 xent               TSX2  ! X66_AALT
      574     3766
      575     3767    1   END VDI$CLOCATION;
      576     3768        %EOD;

PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:79   
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CLOCATION.
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:80   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @LOCATION_CMD              5-0-0/w PTR         r     1 BLOCK_BUFFER$
     6-0-0/w PTR         r     1 BLOCK_DESC$                7-0-0/w PTR         r     1 BLOCK_WITHIN_BUFFER$
    10-0-0/w PTR         r     1 CURRENT_WINDOW$           11-0-0/w UBIN        r     1 ERROR_CODE
    12-0-0/w PTR         r     1 FILE_KEY$                 *0-0-0/w STRC(540)   r     1 LOCATION_CMD
     4-0-0/w PTR         r     1 LOCATION_NAME$            13-0-0/w BIT         r     1 SIGNAL
    14-0-0/w PTR         r     1 VD_ERR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(648)   r     1 FILE$KEY                   0-0-0/w ASTR(81)    r     1 LOCATION$NAME
     0-0-0/w STRC(936)   r     1 VD$BLOCK_DESC              0-0-0/w ASTR(90)    r     1 VD$BUFFER
     0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER           0-0-0/w STRC(180)   r     1 VD$ERR
     0-0-0/w STRC(2124)  r     1 VD$EVAL                    0-0-0/w STRC(468)   r     1 VD$FILE_NODE
     0-0-0/w STRC(1116)  r     1 VD$IT_BLOCK_EXPR           0-0-0/w STRC(864)   r     1 VD$STREAM
     0-0-0/w ASTR(9)     r     1 VD$TEXTC                   0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE
     0-0-0/w STRC(900)   r     1 WINDOW$SPEC


   Procedure VDI$CLOCATION requires 131 words for executable code.
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:81   
   Procedure VDI$CLOCATION requires 18 words of local(AUTO) storage.
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:82   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:83   
          MINI XREF LISTING

BLOCK_BUFFER$
      2498**DCL      3705<>CALL     3720>>ASSIGN   3733<>CALL
BLOCK_DESC$
      2499**DCL      3712<>CALL     3723>>ASSIGN
BLOCK_WITHIN_BUFFER$
      2500**DCL      3720<<ASSIGN   3723>>ASSIGN   3725>>CALL
CANT_LOCATION_SCRATCH
      3747**LABEL    3680--GOTO
CURRENT_WINDOW$
      2501**DCL      3538--IMP-PTR  3664<<ASSIGN   3674>>IF       3674>>ASSIGN   3674>>ASSIGN   3682>>CALL
      3694>>CALL     3712>>CALL     3725>>CALL
ERROR_CODE
      2502**DCL      3747<<ASSIGN   3751<<ASSIGN   3755<<ASSIGN   3763>>ASSIGN
FILE$KEY.UNIQUE.FNAME.BYTES
      3092**DCL      3677>>IF
FILE_KEY$
      2503**DCL      3063--IMP-PTR  3674<<ASSIGN   3674<<ASSIGN   3677>>IF
LOCATION$NAME.LENGTH#
      3651**DCL      3653--IMP-SIZ  3733--CALL     3733--CALL
LOCATION_CMD
      2420**DCL        45--PROC
LOCATION_CMD.PARAM$
      2447**DCL      3663>>ASSIGN
LOCATION_NAME$
      2497**DCL      3622--IMP-PTR  3663<<ASSIGN   3733>>CALL     3733>>CALL
LOCATION_RPT_CNT_NOT_1
      3751**LABEL    3692--GOTO
NO_RANGE_FOR_LOCATION
      3755**LABEL    3703--GOTO
SERIOUS_ERROR
      3758**LABEL    3748--GOTO     3752--GOTO
SIGNAL
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:84   
      2504**DCL      3682<>CALL     3690>>IF       3694<>CALL     3701>>IF
VD$BLOCK_DESC
      2515**DCL      3712<>CALL     3723<<ASSIGN   3723>>ASSIGN
VD$BLOCK_DESC.FILE_KEY.REP#
      2553**DCL      3674>>IF
VD$BLOCK_DESC.FILE_KEY.V$
      2553**DCL      3674>>ASSIGN   3674--ASSIGN
VD$BLOCK_DESC.RANGE
      2565**DCL      3725<>CALL
VD$BUFFER.LENGTH#
      2705**DCL      2707--IMP-SIZ
VD$BUFFER_HEADER
      2720**DCL      3720--ASSIGN
VD$ERR.ERR.CODE#
      2795**DCL      3763<<ASSIGN
VD$ERR.FLAGLEV#
      2798**DCL      3764<<ASSIGN
VD$EVAL.RANGE
      2915**DCL      3725<>CALL
VD$FILE_NODE.DESC.SPEC.V$
      3183**DCL      3664>>ASSIGN
VD$IT_BLOCK_EXPR
      3197**DCL      3682<>CALL
VD$STREAM
      3347**DCL      3733<>CALL
VD$TEXTC
      3453**DCL      3733<>CALL
VD$TEXTC.LENGTH#
      3461**DCL      3463--IMP-SIZ  3733>>CALL
VD$TEXTC_REMOTE.LENGTH#
      3522**DCL      3524--IMP-SIZ  3674--ASSIGN
VDE$IRANGE
      2489**DCL-ENT  3694--CALL
VDG$OALLOC
      2490**DCL-ENT  3705--CALL     3758--CALL
VDG$OCOPY
PL6.E3A0      #004=VDI$CLOCATION File=VDI$COMMANDS_NON_EDITING.:VDA5TSI          FRI 07/04/97 11:31 Page:85   
      2491**DCL-ENT  3712--CALL
VDG$OCOPY_RANGE
      2492**DCL-ENT  3725--CALL
VDG$TEST_1_RANGE
      2494**DCL-ENT  3682--CALL
VDI$CUPDATE_NAME
      2495**DCL-ENT  3733--CALL
VD_6E.LOCATIONS$
      2464**DCL      3733>>CALL
VD_CURRENT_WINDOW$
      2487**DCL      3664>>ASSIGN
VD_ERR$
      2505**DCL      3758<>CALL     3763>>ASSIGN   3764>>ASSIGN
WINDOW$SPEC.OPERAND
      3577**DCL      3694<>CALL
WINDOW$SPEC.OPERAND.EDIT_BLOCK$
      3579**DCL      3674>>IF       3674>>ASSIGN   3674>>ASSIGN   3712>>CALL
WINDOW$SPEC.OPERAND.EVAL$
      3579**DCL      3725>>CALL
WINDOW$SPEC.OPERAND.INTREE$
      3579**DCL      3682>>CALL

PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:86   
      577        1        /*T***********************************************************/
      578        2        /*T*                                                         */
      579        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      580        4        /*T*                                                         */
      581        5        /*T***********************************************************/
      582        6        /*
      583        7                VDI$CREAD
      584        8                Given a VD$IT_COMMAND node for a READ command, will
      585        9                perform the command:  push the READ-file fid onto the
      586       10                command stream stack, and open the file.
      587       11        */
      588       12
      589       13        /*D* NAME:  VDI$CREAD
      590       14            PARAMETERS:
      591       15                READ_CMD - A VD$IT_COMMAND InTree node:
      592       16                    .CODE must be %T_READ_CMD.
      593       17                    .PARAM$ (%CP_READ_FID) must point to a VD$TEXTC_REMOTE containing
      594       18                        the fid to read.
      595       19                    .PARAM$ (%CP_READ_NEXT_COMMAND) must point to a VD$NUMBER whose
      596       20                        .V# contains the position in the command record of
      597       21                        the beginning of the next command after this READ command.
      598       22                        If none, (*??* or if the command didn't come from a parsed-and-
      599       23                        encoded command line, *??*) this value should be 0.
      600       24            INPUT:
      601       25                VD_6E.CMD_STREAM$ - Ptr to VD$CMD_STREAM describing the current
      602       26                    command stream.  VD$CMD_STREAMs are stacked; the current
      603       27                    command stream is represented by the top entry on the
      604       28                    stack.  If the top entry is for a READ-file, that file
      605       29                    should be open at entry.
      606       30            OUTPUT:
      607       31                The top VD$CMD_STREAM at entry may be modified:  if it has an .INTREE$
      608       32                    and its .IT_FROM_PARSE_TREE is set (indicating that the InTree was
      609       33                    just built from a ParseTree), then the InTree will be freed and
      610       34                    .INTREE$ set to NIL.
      611       35                VD_6E.CMD_STREAM$ will be modified:  it will point to a new top
      612       36                    VD$CMD_STREAM.
      613       37                If NEXT_COMMAND > 0, the remainder of the command line will be saved
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:87   
      614       38                    from XUG's context (thru VD_PCB.TEXT$) in VD$CMD_STREAM.RECORD$.
      615       39                If NEXT_COMMAND = 0, the old top VD$CMD_STREAM will have its
      616       40                    .REC_NUM# incremented and its .POSITION# set to 0.
      617       41                The new VD$CMD_STREAM at the top of the stack will describe the
      618       42                    new READ-file to use for the command stream; this file will
      619       43                    be open and ready for reading the first command line from it.
      620       44            DESCRIPTION:
      621       45                If the current command stream is a READ-file, close it.
      622       46                If there are more commands in this command record (that is, if
      623       47                    NEXT_COMMAND > 0), save the rest of the command in RECORD$.
      624       48                If there aren't any more commands in this command record (that is,
      625       49                    if NEXT_COMMAND = 0), bump to the next record, position 0.
      626       50                If the current command stream has an .INTREE$ (it usually should!)
      627       51                    and its .IT_FROM_PARSE_TREE is set (indicating that the InTree was
      628       52                    just built from a ParseTree), then the InTree will be freed and
      629       53                    .INTREE$ set to NIL.
      630       54
      631       55                                        !! CAUTION !!
      632       56                            The InTree freed in this step contains as
      633       57                            on of its nodes READ_CMD, the parameter to
      634       58                            this routine.  Therefore, before freeing
      635       59                            the InTree, we must save an info we want from
      636       60                            READ_CMD in our auto.
      637       61
      638       62                Push a new VD$CMD_STREAM onto the command stream stack, and
      639       63                    fill it in to describe the READ-file named in the READ
      640       64                    command.
      641       65                Open the file.
      642       66        */
      643       67
      644       68        VDI$CREAD: PROC (READ_CMD) ALTRET;
      645       69
      646       70
      647       71        %INCLUDE VD_MACROS_M;
      648     2286        %INCLUDE VD_NODES0_E;
      649     2378        %INCLUDE XU_MACRO_C;
      650     5472
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:88   
      651     5473
      652     5474        %VD$IT_COMMAND (NAME=READ_CMD, STCLASS=PARAM);
      653     5512
      654     5513
      655     5514    1   DCL VDI$PREAD_FILE_CLOSE ENTRY ALTRET;
      656     5515    1   DCL VDI$PREAD_FILE_OPEN ENTRY ALTRET;
      657     5516    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      658     5517    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
      659     5518    1   DCL VDG$ESCREECH        ENTRY (3);
      660     5519
      661     5520
      662     5521        %VD_6E (STCLASS=SYMREF);
      663     5557    1   DCL VD_RPAREN_POS UBIN SYMREF;
      664     5558
      665     5559
      666     5560
      667     5561    1   DCL READ_FID$ PTR;
      668     5562    1   DCL NEXT_COMMAND$ PTR;
      669     5563    1   DCL RECORD$ PTR;
      670     5564        %VD_TEXTC (NAME=READ_FID, STCLASS=AUTO, MXNB=68);
      671     5705    1   DCL SINK$ PTR;
      672     5706
      673     5707
      674     5708        %VD$TEXTC_REMOTE (NAME=READ$FID, STCLASS="BASED(READ_FID$)");
      675     5769        %VD$NUMBER (NAME=NEXT$COMMAND, STCLASS="BASED(NEXT_COMMAND$)");
      676     5814        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(VD_6E.CMD_STREAM$)");
      677     5853        %VD$BUFFER (NAME=CMD$RECORD, STCLASS="BASED(RECORD$)");
      678     5911        %VD$BUFFER_HEADER;
      679     5947        %P_PCB (NAME=VD_PCB, STCLASS=SYMREF);
      680     6146    1   DCL CHARS CHAR(256) BASED;
      681     6147        %VD$IT_COMMAND;
      682     6185
      683     6186
      684     6187
      685     6188    1           READ_FID$ = READ_CMD.PARAM$ (%CP_READ_FID);
      686     6189    1           NEXT_COMMAND$ = READ_CMD.PARAM$ (%CP_READ_NEXT_COMMAND);
      687     6190
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:89   
      688     6191    2           IF NEXT$COMMAND.V# > 0 THEN DO;
      689     6192    2              RECORD$ = CMD$STREAM.RECORD$;
      690     6193    2              IF RECORD$~=ADDR(NIL) THEN
      691     6194    2                 IF CMD$RECORD.OBJECT.SIZE# < SIZEW(VD$BUFFER_HEADER) +
      692     6195    3                   (VD_PCB.NCHARS - NEXT$COMMAND.V# + 3) / 4 THEN DO;
      693     6196    3                    CALL VDG$OFREE (CMD$RECORD);
      694     6197    3                    RECORD$ = ADDR(NIL);
      695     6198    3                    END;
      696     6199    3              IF RECORD$ = ADDR(NIL) THEN DO;
      697     6200    3                 CALL VDG$OALLOC (%CLS_BUFFER, CMD$STREAM.RECORD$,
      698     6201    3                   SIZEW(VD$BUFFER_HEADER) +
      699     6202    3                   (VD_PCB.NCHARS - NEXT$COMMAND.V# + 3) /4) ALTRET(OALLOC_FAILED);
      700     6203    3                 RECORD$ = CMD$STREAM.RECORD$;
      701     6204    3                 END;
      702     6205    2              CMD$RECORD.LENGTH# = VD_PCB.NCHARS - NEXT$COMMAND.V#;
      703     6206    2              CMD$RECORD.BYTES =
      704     6207    2                SUBSTR(VD_PCB.TEXT$->CHARS, NEXT$COMMAND.V#, CMD$RECORD.LENGTH#);
      705     6208    2              IF VD_RPAREN_POS > 0 THEN
      706     6209    2                 SUBSTR(CMD$RECORD.BYTES, VD_RPAREN_POS - NEXT$COMMAND.V#, 1) = ' ';
      707     6210    2              CMD$STREAM.POSITION# = 0;
      708     6211    2              CMD$STREAM.CMD_AFTER_READ = %TRUE;
      709     6212    2              END;
      710     6213    2           ELSE DO;
      711     6214    2              CMD$STREAM.POSITION# = 0;
      712     6215    2              END;
      713     6216
      714     6217                /* Save fid from READ_CMD node, in case we free the InTree */
      715     6218    1           READ_FID$ = READ_CMD.PARAM$ (%CP_READ_FID);
      716     6219    1           READ_FID.LENGTH# = MINIMUM (READ$FID.LENGTH#, LENGTHC(READ_FID.BYTES));
      717     6220    1           READ_FID.BYTES = READ$FID.BYTES;
      718     6221
      719     6222
      720     6223    1           IF CMD$STREAM.INTREE$ ~= ADDR(NIL)
      721     6224    2             AND CMD$STREAM.IT_FROM_PARSE_TREE THEN DO;
      722     6225    2              CALL VDG$OFREE (CMD$STREAM.INTREE$->VD$IT_COMMAND)
      723     6226    2                ALTRET (OFREE_FAILED);
      724     6227    2              CMD$STREAM.INTREE$ = ADDR(NIL);
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:90   
      725     6228    2              CMD$STREAM.IT_FROM_PARSE_TREE = %FALSE;
      726     6229    2              END;
      727     6230
      728     6231                        /***************  !! CAUTION !! *****************/
      729     6232                        /*****  From this point on, we can't refer  *****/
      730     6233                        /*****  to READ_CMD, because it may have    *****/
      731     6234                        /*****  been freed.                         *****/
      732     6235                        /***************  !! CAUTION !! *****************/
      733     6236
      734     6237
      735     6238    1           IF CMD$STREAM.TYPE# = %CS_FILE THEN
      736     6239    1              CALL VDI$PREAD_FILE_CLOSE
      737     6240    1                ALTRET (PREAD_FILE_CLOSE_FAILED);
      738     6241
      739     6242    1           CALL VDG$OALLOC (%CLS_CMD_STREAM, SINK$)
      740     6243    1             ALTRET (OALLOC_FAILED);
      741     6244
      742     6245    1           CMD$STREAM.TYPE# = %CS_FILE;
      743     6246    1           CMD$STREAM.FILE = READ_FID;
      744     6247    1           CMD$STREAM.ECHO = %TRUE;    /* Honor $ECHO flag */
      745     6248
      746     6249    1           CALL VDI$PREAD_FILE_OPEN
      747     6250    1             ALTRET (PREAD_FILE_OPEN_FAILED);
      748     6251
      749     6252    1           RETURN;
      750     6253
      751     6254
      752     6255
      753     6256    1   OFREE_FAILED: ;
      754     6257    1   OALLOC_FAILED: ;
      755     6258    1   PREAD_FILE_OPEN_FAILED: ;
      756     6259    1   PREAD_FILE_CLOSE_FAILED: ;
      757     6260    1           ALTRETURN;
      758     6261
      759     6262    1   END VDI$CREAD;
      760     6263        %EOD;

PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:91   
--  Include file information  --

   XU_MACRO_C.:LIBRARY  is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CREAD.

   Procedure VDI$CREAD requires 153 words for executable code.
   Procedure VDI$CREAD requires 30 words of local(AUTO) storage.

PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:92   

 Object Unit name= VDI$CREAD                                  File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:31:54.08 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   153    231  VDI$CREAD
    1  RoData even  none     3      3  VDI$CREAD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  VDI$CREAD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       0 VDI$PREAD_FILE_OPEN
 yes     yes           Std       0 VDI$PREAD_FILE_CLOSE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:93   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_RPAREN_POS                         VD_PCB
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:94   


      577        1        /*T***********************************************************/
      578        2        /*T*                                                         */
      579        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      580        4        /*T*                                                         */
      581        5        /*T***********************************************************/
      582        6        /*
      583        7                VDI$CREAD
      584        8                Given a VD$IT_COMMAND node for a READ command, will
      585        9                perform the command:  push the READ-file fid onto the
      586       10                command stream stack, and open the file.
      587       11        */
      588       12
      589       13        /*D* NAME:  VDI$CREAD
      590       14            PARAMETERS:
      591       15                READ_CMD - A VD$IT_COMMAND InTree node:
      592       16                    .CODE must be %T_READ_CMD.
      593       17                    .PARAM$ (%CP_READ_FID) must point to a VD$TEXTC_REMOTE containing
      594       18                        the fid to read.
      595       19                    .PARAM$ (%CP_READ_NEXT_COMMAND) must point to a VD$NUMBER whose
      596       20                        .V# contains the position in the command record of
      597       21                        the beginning of the next command after this READ command.
      598       22                        If none, (*??* or if the command didn't come from a parsed-and-
      599       23                        encoded command line, *??*) this value should be 0.
      600       24            INPUT:
      601       25                VD_6E.CMD_STREAM$ - Ptr to VD$CMD_STREAM describing the current
      602       26                    command stream.  VD$CMD_STREAMs are stacked; the current
      603       27                    command stream is represented by the top entry on the
      604       28                    stack.  If the top entry is for a READ-file, that file
      605       29                    should be open at entry.
      606       30            OUTPUT:
      607       31                The top VD$CMD_STREAM at entry may be modified:  if it has an .INTREE$
      608       32                    and its .IT_FROM_PARSE_TREE is set (indicating that the InTree was
      609       33                    just built from a ParseTree), then the InTree will be freed and
      610       34                    .INTREE$ set to NIL.
      611       35                VD_6E.CMD_STREAM$ will be modified:  it will point to a new top
      612       36                    VD$CMD_STREAM.
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:95   
      613       37                If NEXT_COMMAND > 0, the remainder of the command line will be saved
      614       38                    from XUG's context (thru VD_PCB.TEXT$) in VD$CMD_STREAM.RECORD$.
      615       39                If NEXT_COMMAND = 0, the old top VD$CMD_STREAM will have its
      616       40                    .REC_NUM# incremented and its .POSITION# set to 0.
      617       41                The new VD$CMD_STREAM at the top of the stack will describe the
      618       42                    new READ-file to use for the command stream; this file will
      619       43                    be open and ready for reading the first command line from it.
      620       44            DESCRIPTION:
      621       45                If the current command stream is a READ-file, close it.
      622       46                If there are more commands in this command record (that is, if
      623       47                    NEXT_COMMAND > 0), save the rest of the command in RECORD$.
      624       48                If there aren't any more commands in this command record (that is,
      625       49                    if NEXT_COMMAND = 0), bump to the next record, position 0.
      626       50                If the current command stream has an .INTREE$ (it usually should!)
      627       51                    and its .IT_FROM_PARSE_TREE is set (indicating that the InTree was
      628       52                    just built from a ParseTree), then the InTree will be freed and
      629       53                    .INTREE$ set to NIL.
      630       54
      631       55                                        !! CAUTION !!
      632       56                            The InTree freed in this step contains as
      633       57                            on of its nodes READ_CMD, the parameter to
      634       58                            this routine.  Therefore, before freeing
      635       59                            the InTree, we must save an info we want from
      636       60                            READ_CMD in our auto.
      637       61
      638       62                Push a new VD$CMD_STREAM onto the command stream stack, and
      639       63                    fill it in to describe the READ-file named in the READ
      640       64                    command.
      641       65                Open the file.
      642       66        */
      643       67
      644       68        VDI$CREAD: PROC (READ_CMD) ALTRET;

     68  0 000000   000000 700200 xent  VDI$CREAD    TSX0  ! X66_AUTO_1
         0 000001   000036 000001                    ZERO    30,1

      645       69
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:96   
      646       70
      647       71        %INCLUDE VD_MACROS_M;
      648     2286        %INCLUDE VD_NODES0_E;
      649     2378        %INCLUDE XU_MACRO_C;
      650     5472
      651     5473
      652     5474        %VD$IT_COMMAND (NAME=READ_CMD, STCLASS=PARAM);
      653     5512
      654     5513
      655     5514    1   DCL VDI$PREAD_FILE_CLOSE ENTRY ALTRET;
      656     5515    1   DCL VDI$PREAD_FILE_OPEN ENTRY ALTRET;
      657     5516    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      658     5517    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
      659     5518    1   DCL VDG$ESCREECH        ENTRY (3);
      660     5519
      661     5520
      662     5521        %VD_6E (STCLASS=SYMREF);
      663     5557    1   DCL VD_RPAREN_POS UBIN SYMREF;
      664     5558
      665     5559
      666     5560
      667     5561    1   DCL READ_FID$ PTR;
      668     5562    1   DCL NEXT_COMMAND$ PTR;
      669     5563    1   DCL RECORD$ PTR;
      670     5564        %VD_TEXTC (NAME=READ_FID, STCLASS=AUTO, MXNB=68);
      671     5705    1   DCL SINK$ PTR;
      672     5706
      673     5707
      674     5708        %VD$TEXTC_REMOTE (NAME=READ$FID, STCLASS="BASED(READ_FID$)");
      675     5769        %VD$NUMBER (NAME=NEXT$COMMAND, STCLASS="BASED(NEXT_COMMAND$)");
      676     5814        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(VD_6E.CMD_STREAM$)");
      677     5853        %VD$BUFFER (NAME=CMD$RECORD, STCLASS="BASED(RECORD$)");
      678     5911        %VD$BUFFER_HEADER;
      679     5947        %P_PCB (NAME=VD_PCB, STCLASS=SYMREF);
      680     6146    1   DCL CHARS CHAR(256) BASED;
      681     6147        %VD$IT_COMMAND;
      682     6185
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:97   
      683     6186
      684     6187
      685     6188    1           READ_FID$ = READ_CMD.PARAM$ (%CP_READ_FID);

   6188  0 000002   200003 470500                    LDP0    @READ_CMD,,AUTO
         0 000003   000006 236100                    LDQ     6,,PR0
         0 000004   200004 756100                    STQ     READ_FID$,,AUTO

      686     6189    1           NEXT_COMMAND$ = READ_CMD.PARAM$ (%CP_READ_NEXT_COMMAND);

   6189  0 000005   000007 236100                    LDQ     7,,PR0
         0 000006   200005 756100                    STQ     NEXT_COMMAND$,,AUTO

      687     6190
      688     6191    2           IF NEXT$COMMAND.V# > 0 THEN DO;

   6191  0 000007   200005 471500                    LDP1    NEXT_COMMAND$,,AUTO
         0 000010   100003 235100                    LDA     3,,PR1
         0 000011   000124 604400 0                  TMOZ    s:6214

      689     6192    2              RECORD$ = CMD$STREAM.RECORD$;

   6192  0 000012   000026 473400 xsym               LDP3    VD_6E+22
         0 000013   300025 236100                    LDQ     21,,PR3
         0 000014   200006 756100                    STQ     RECORD$,,AUTO

      690     6193    2              IF RECORD$~=ADDR(NIL) THEN

   6193  0 000015   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000016   000041 600000 0                  TZE     s:6199

      691     6194    2                 IF CMD$RECORD.OBJECT.SIZE# < SIZEW(VD$BUFFER_HEADER) +

   6194  0 000017   000011 236000 xsym               LDQ     VD_PCB+9
         0 000020   100003 136100                    SBLQ    3,,PR1
         0 000021   000003 036007                    ADLQ    3,DL
         0 000022   000004 506007                    DIV     4,DL
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:98   
         0 000023   000003 036007                    ADLQ    3,DL
         0 000024   200032 756100                    STQ     SINK$+1,,AUTO
         0 000025   200006 474500                    LDP4    RECORD$,,AUTO
         0 000026   400000 236100                    LDQ     0,,PR4
         0 000027   000022 736000                    QLS     18
         0 000030   000022 732000                    QRS     18
         0 000031   200032 116100                    CMPQ    SINK$+1,,AUTO
         0 000032   000041 605000 0                  TPL     s:6199

      692     6195    3                   (VD_PCB.NCHARS - NEXT$COMMAND.V# + 3) / 4 THEN DO;

      693     6196    3                    CALL VDG$OFREE (CMD$RECORD);

   6196  0 000033   200006 630500                    EPPR0   RECORD$,,AUTO
         0 000034   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000035   000000 701000 xent               TSX1    VDG$OFREE
         0 000036   000000 011000                    NOP     0

      694     6197    3                    RECORD$ = ADDR(NIL);

   6197  0 000037   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000040   200006 756100                    STQ     RECORD$,,AUTO

      695     6198    3                    END;

      696     6199    3              IF RECORD$ = ADDR(NIL) THEN DO;

   6199  0 000041   200006 236100                    LDQ     RECORD$,,AUTO
         0 000042   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000043   000071 601000 0                  TNZ     s:6205

      697     6200    3                 CALL VDG$OALLOC (%CLS_BUFFER, CMD$STREAM.RECORD$,

   6200  0 000044   200005 470500                    LDP0    NEXT_COMMAND$,,AUTO
         0 000045   000011 236000 xsym               LDQ     VD_PCB+9
         0 000046   000003 136100                    SBLQ    3,,PR0
         0 000047   000003 036007                    ADLQ    3,DL
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:99   
         0 000050   000004 506007                    DIV     4,DL
         0 000051   000003 036007                    ADLQ    3,DL
         0 000052   200032 756100                    STQ     SINK$+1,,AUTO
         0 000053   200032 631500                    EPPR1   SINK$+1,,AUTO
         0 000054   200035 451500                    STP1    SINK$+4,,AUTO
         0 000055   000026 236000 xsym               LDQ     VD_6E+22
         0 000056   000025 036003                    ADLQ    21,DU
         0 000057   200034 756100                    STQ     SINK$+3,,AUTO
         0 000060   000000 236000 1                  LDQ     0
         0 000061   200033 756100                    STQ     SINK$+2,,AUTO
         0 000062   200033 630500                    EPPR0   SINK$+2,,AUTO
         0 000063   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000064   000000 701000 xent               TSX1    VDG$OALLOC
         0 000065   000230 702000 0                  TSX2    OFREE_FAILED

      698     6201    3                   SIZEW(VD$BUFFER_HEADER) +
      699     6202    3                   (VD_PCB.NCHARS - NEXT$COMMAND.V# + 3) /4) ALTRET(OALLOC_FAILED);
      700     6203    3                 RECORD$ = CMD$STREAM.RECORD$;

   6203  0 000066   000026 470400 xsym               LDP0    VD_6E+22
         0 000067   000025 236100                    LDQ     21,,PR0
         0 000070   200006 756100                    STQ     RECORD$,,AUTO

      701     6204    3                 END;

      702     6205    2              CMD$RECORD.LENGTH# = VD_PCB.NCHARS - NEXT$COMMAND.V#;

   6205  0 000071   200005 470500                    LDP0    NEXT_COMMAND$,,AUTO
         0 000072   000011 236000 xsym               LDQ     VD_PCB+9
         0 000073   000003 136100                    SBLQ    3,,PR0
         0 000074   000000 620006                    EAX0    0,QL
         0 000075   200006 471500                    LDP1    RECORD$,,AUTO
         0 000076   100002 740100                    STX0    2,,PR1

      703     6206    2              CMD$RECORD.BYTES =

   6206  0 000077   000003 235100                    LDA     3,,PR0
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:100  
         0 000100   200032 740100                    STX0    SINK$+1,,AUTO
         0 000101   000000 473400 xsym               LDP3    VD_PCB
         0 000102   200032 221100                    LDX1    SINK$+1,,AUTO
         0 000103   040140 100545                    MLR     fill='040'O
         0 000104   300000 000010                    ADSC9   0,A,PR3                  cn=0,n=*X0
         0 000105   100002 400011                    ADSC9   2,,PR1                   cn=2,n=*X1

      704     6207    2                SUBSTR(VD_PCB.TEXT$->CHARS, NEXT$COMMAND.V#, CMD$RECORD.LENGTH#);
      705     6208    2              IF VD_RPAREN_POS > 0 THEN

   6208  0 000106   000000 235000 xsym               LDA     VD_RPAREN_POS
         0 000107   000116 600000 0                  TZE     s:6210

      706     6209    2                 SUBSTR(CMD$RECORD.BYTES, VD_RPAREN_POS - NEXT$COMMAND.V#, 1) = ' ';

   6209  0 000110   100002 220100                    LDX0    2,,PR1
         0 000111   000000 236000 xsym               LDQ     VD_RPAREN_POS
         0 000112   000003 136100                    SBLQ    3,,PR0
         0 000113   040106 100400                    MLR     fill='040'O
         0 000114   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 000115   100002 400001                    ADSC9   2,Q,PR1                  cn=2,n=1

      707     6210    2              CMD$STREAM.POSITION# = 0;

   6210  0 000116   000000 220003                    LDX0    0,DU
         0 000117   000026 473400 xsym               LDP3    VD_6E+22
         0 000120   300027 740100                    STX0    23,,PR3

      708     6211    2              CMD$STREAM.CMD_AFTER_READ = %TRUE;

   6211  0 000121   040000 236007                    LDQ     16384,DL
         0 000122   300027 256100                    ORSQ    23,,PR3

      709     6212    2              END;

   6212  0 000123   000127 710000 0                  TRA     s:6218

PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:101  
      710     6213    2           ELSE DO;

      711     6214    2              CMD$STREAM.POSITION# = 0;

   6214  0 000124   000000 220003                    LDX0    0,DU
         0 000125   000026 473400 xsym               LDP3    VD_6E+22
         0 000126   300027 740100                    STX0    23,,PR3

      712     6215    2              END;

      713     6216
      714     6217                /* Save fid from READ_CMD node, in case we free the InTree */
      715     6218    1           READ_FID$ = READ_CMD.PARAM$ (%CP_READ_FID);

   6218  0 000127   200003 470500                    LDP0    @READ_CMD,,AUTO
         0 000130   000006 236100                    LDQ     6,,PR0
         0 000131   200004 756100                    STQ     READ_FID$,,AUTO

      716     6219    1           READ_FID.LENGTH# = MINIMUM (READ$FID.LENGTH#, LENGTHC(READ_FID.BYTES));

   6219  0 000132   200004 471500                    LDP1    READ_FID$,,AUTO
         0 000133   100002 236100                    LDQ     2,,PR1
         0 000134   000033 772000                    QRL     27
         0 000135   000104 116007                    CMPQ    68,DL
         0 000136   000141 602000 0                  TNC     s:6219+7
         0 000137   000141 600000 0                  TZE     s:6219+7
         0 000140   000104 236007                    LDQ     68,DL
         0 000141   000033 736000                    QLS     27
         0 000142   200007 552140                    STBQ    READ_FID,'40'O,AUTO

      717     6220    1           READ_FID.BYTES = READ$FID.BYTES;

   6220  0 000143   100002 236100                    LDQ     2,,PR1
         0 000144   000033 772000                    QRL     27
         0 000145   000000 621006                    EAX1    0,QL
         0 000146   040100 100540                    MLR     fill='040'O
         0 000147   100002 200011                    ADSC9   2,,PR1                   cn=1,n=*X1
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:102  
         0 000150   200007 200104                    ADSC9   READ_FID,,AUTO           cn=1,n=68

      718     6221
      719     6222
      720     6223    1           IF CMD$STREAM.INTREE$ ~= ADDR(NIL)

   6223  0 000151   300026 236100                    LDQ     22,,PR3
         0 000152   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000153   000173 600000 0                  TZE     s:6238
         0 000154   300027 236100                    LDQ     23,,PR3
         0 000155   200000 316007                    CANQ    65536,DL
         0 000156   000173 600000 0                  TZE     s:6238

      721     6224    2             AND CMD$STREAM.IT_FROM_PARSE_TREE THEN DO;

      722     6225    2              CALL VDG$OFREE (CMD$STREAM.INTREE$->VD$IT_COMMAND)

   6225  0 000157   300026 474500                    LDP4    22,,PR3
         0 000160   200032 454500                    STP4    SINK$+1,,AUTO
         0 000161   200032 630500                    EPPR0   SINK$+1,,AUTO
         0 000162   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000163   000000 701000 xent               TSX1    VDG$OFREE
         0 000164   000230 702000 0                  TSX2    OFREE_FAILED

      723     6226    2                ALTRET (OFREE_FAILED);
      724     6227    2              CMD$STREAM.INTREE$ = ADDR(NIL);

   6227  0 000165   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000166   000026 470400 xsym               LDP0    VD_6E+22
         0 000167   000026 756100                    STQ     22,,PR0

      725     6228    2              CMD$STREAM.IT_FROM_PARSE_TREE = %FALSE;

   6228  0 000170   000026 470400 xsym               LDP0    VD_6E+22
         0 000171   000001 236000 1                  LDQ     1
         0 000172   000027 356100                    ANSQ    23,,PR0

PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:103  
      726     6229    2              END;

      727     6230
      728     6231                        /***************  !! CAUTION !! *****************/
      729     6232                        /*****  From this point on, we can't refer  *****/
      730     6233                        /*****  to READ_CMD, because it may have    *****/
      731     6234                        /*****  been freed.                         *****/
      732     6235                        /***************  !! CAUTION !! *****************/
      733     6236
      734     6237
      735     6238    1           IF CMD$STREAM.TYPE# = %CS_FILE THEN

   6238  0 000173   000026 470400 xsym               LDP0    VD_6E+22
         0 000174   000002 220100                    LDX0    2,,PR0
         0 000175   000003 100003                    CMPX0   3,DU
         0 000176   000202 601000 0                  TNZ     s:6242

      736     6239    1              CALL VDI$PREAD_FILE_CLOSE

   6239  0 000177   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000200   000000 701000 xent               TSX1    VDI$PREAD_FILE_CLOSE
         0 000201   000230 702000 0                  TSX2    OFREE_FAILED

      737     6240    1                ALTRET (PREAD_FILE_CLOSE_FAILED);
      738     6241
      739     6242    1           CALL VDG$OALLOC (%CLS_CMD_STREAM, SINK$)

   6242  0 000202   200031 630500                    EPPR0   SINK$,,AUTO
         0 000203   200033 450500                    STP0    SINK$+2,,AUTO
         0 000204   000002 236000 1                  LDQ     2
         0 000205   200032 756100                    STQ     SINK$+1,,AUTO
         0 000206   200032 630500                    EPPR0   SINK$+1,,AUTO
         0 000207   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000210   000000 701000 xent               TSX1    VDG$OALLOC
         0 000211   000230 702000 0                  TSX2    OFREE_FAILED

      740     6243    1             ALTRET (OALLOC_FAILED);
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:104  
      741     6244
      742     6245    1           CMD$STREAM.TYPE# = %CS_FILE;

   6245  0 000212   000003 220003                    LDX0    3,DU
         0 000213   000026 470400 xsym               LDP0    VD_6E+22
         0 000214   000002 740100                    STX0    2,,PR0

      743     6246    1           CMD$STREAM.FILE = READ_FID;

   6246  0 000215   000026 470400 xsym               LDP0    VD_6E+22
         0 000216   000100 100500                    MLR     fill='000'O
         0 000217   200007 000105                    ADSC9   READ_FID,,AUTO           cn=0,n=69
         0 000220   000002 400105                    ADSC9   2,,PR0                   cn=2,n=69

      744     6247    1           CMD$STREAM.ECHO = %TRUE;    /* Honor $ECHO flag */

   6247  0 000221   000026 470400 xsym               LDP0    VD_6E+22
         0 000222   400000 236007                    LDQ     -131072,DL
         0 000223   000027 256100                    ORSQ    23,,PR0

      745     6248
      746     6249    1           CALL VDI$PREAD_FILE_OPEN

   6249  0 000224   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000225   000000 701000 xent               TSX1    VDI$PREAD_FILE_OPEN
         0 000226   000230 702000 0                  TSX2    OFREE_FAILED

      747     6250    1             ALTRET (PREAD_FILE_OPEN_FAILED);
      748     6251
      749     6252    1           RETURN;

   6252  0 000227   000000 702200 xent               TSX2  ! X66_ARET

   6247  0 000230                       OFREE_FAILED null
   6247  0 000230                       OALLOC_FAIL* null
   6247  0 000230                       PREAD_FILE_* null
   6247  0 000230                       PREAD_FILE_* null
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:105  
      750     6253
      751     6254
      752     6255
      753     6256    1   OFREE_FAILED: ;
      754     6257    1   OALLOC_FAILED: ;
      755     6258    1   PREAD_FILE_OPEN_FAILED: ;
      756     6259    1   PREAD_FILE_CLOSE_FAILED: ;
      757     6260    1           ALTRETURN;

   6260  0 000230   000000 702200 xent               TSX2  ! X66_AALT
      758     6261
      759     6262    1   END VDI$CREAD;
      760     6263        %EOD;

PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:106  
--  Include file information  --

   XU_MACRO_C.:LIBRARY  is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CREAD.
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:107  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @READ_CMD                  5-0-0/w PTR         r     1 NEXT_COMMAND$
    *0-0-0/w STRC(540)   r     1 READ_CMD                   7-0-0/c STRC(621)   r     1 READ_FID
     4-0-0/w PTR         r     1 READ_FID$                  6-0-0/w PTR         r     1 RECORD$
    31-0-0/w PTR         r     1 SINK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w STRC(504)   r     1 VD_PCB
     0-0-0/w UBIN        r     1 VD_RPAREN_POS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(256)   r     1 CHARS                      0-0-0/w ASTR(90)    r     1 CMD$RECORD
     0-0-0/w STRC(900)   r     1 CMD$STREAM                 0-0-0/w STRC(144)   r     1 NEXT$COMMAND
     0-0-0/w ASTR(81)    r     1 READ$FID                   0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER
     0-0-0/w STRC(540)   r     1 VD$IT_COMMAND


   Procedure VDI$CREAD requires 153 words for executable code.
   Procedure VDI$CREAD requires 30 words of local(AUTO) storage.
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:108  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:109  
          MINI XREF LISTING

CHARS
      6146**DCL      6206>>ASSIGN
CMD$RECORD
      5878**DCL      6196<>CALL
CMD$RECORD.BYTES
      5906**DCL      6206<<ASSIGN   6209<<ASSIGN
CMD$RECORD.LENGTH#
      5904**DCL      5906--IMP-SIZ  6196>>CALL     6205<<ASSIGN   6206>>ASSIGN   6206>>ASSIGN   6209>>ASSIGN
CMD$RECORD.OBJECT.SIZE#
      5902**DCL      6194>>IF
CMD$STREAM.CMD_AFTER_READ
      5851**DCL      6211<<ASSIGN
CMD$STREAM.ECHO
      5850**DCL      6247<<ASSIGN
CMD$STREAM.FILE
      5848**DCL      6246<<ASSIGN
CMD$STREAM.INTREE$
      5849**DCL      6223>>IF       6225>>CALL     6227<<ASSIGN
CMD$STREAM.IT_FROM_PARSE_TREE
      5850**DCL      6223>>IF       6228<<ASSIGN
CMD$STREAM.POSITION#
      5850**DCL      6210<<ASSIGN   6214<<ASSIGN
CMD$STREAM.RECORD$
      5849**DCL      6192>>ASSIGN   6200<>CALL     6203>>ASSIGN
CMD$STREAM.TYPE#
      5848**DCL      6238>>IF       6245<<ASSIGN
NEXT$COMMAND.V#
      5811**DCL      6191>>IF       6194>>IF       6200>>CALL     6205>>ASSIGN   6206>>ASSIGN   6209>>ASSIGN
NEXT_COMMAND$
      5562**DCL      5777--IMP-PTR  6189<<ASSIGN   6191>>IF       6194>>IF       6200>>CALL     6205>>ASSIGN
      6206>>ASSIGN   6209>>ASSIGN
OALLOC_FAILED
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:110  
      6247**LABEL    6200--CALLALT  6242--CALLALT
OFREE_FAILED
      6247**LABEL    6225--CALLALT
PREAD_FILE_CLOSE_FAILED
      6247**LABEL    6239--CALLALT
PREAD_FILE_OPEN_FAILED
      6247**LABEL    6249--CALLALT
READ$FID.BYTES
      5764**DCL      6220>>ASSIGN
READ$FID.LENGTH#
      5762**DCL      5764--IMP-SIZ  6219>>ASSIGN   6220>>ASSIGN
READ_CMD
      5482**DCL        68--PROC
READ_CMD.PARAM$
      5509**DCL      6188>>ASSIGN   6189>>ASSIGN   6218>>ASSIGN
READ_FID
      5698**DCL      6246>>ASSIGN
READ_FID.BYTES
      5702**DCL      6219--ASSIGN   6220<<ASSIGN
READ_FID.LENGTH#
      5702**DCL      6219<<ASSIGN
READ_FID$
      5561**DCL      5733--IMP-PTR  6188<<ASSIGN   6218<<ASSIGN   6219>>ASSIGN   6220>>ASSIGN   6220>>ASSIGN
RECORD$
      5563**DCL      5878--IMP-PTR  6192<<ASSIGN   6193>>IF       6194>>IF       6196>>CALL     6196>>CALL
      6197<<ASSIGN   6199>>IF       6203<<ASSIGN   6205>>ASSIGN   6206>>ASSIGN   6206>>ASSIGN   6206>>ASSIGN
      6209>>ASSIGN   6209>>ASSIGN
SINK$
      5705**DCL      6242<>CALL
VD$BUFFER_HEADER
      5919**DCL      6194--IF       6200--CALL
VD$IT_COMMAND
      6155**DCL      6225<>CALL
VDG$OALLOC
      5516**DCL-ENT  6200--CALL     6242--CALL
VDG$OFREE
PL6.E3A0      #005=VDI$CREAD File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:31 Page:111  
      5517**DCL-ENT  6196--CALL     6225--CALL
VDI$PREAD_FILE_CLOSE
      5514**DCL-ENT  6239--CALL
VDI$PREAD_FILE_OPEN
      5515**DCL-ENT  6249--CALL
VD_6E.CMD_STREAM$
      5552**DCL      5822--IMP-PTR  6192>>ASSIGN   6200>>CALL     6203>>ASSIGN   6210>>ASSIGN   6211>>ASSIGN
      6214>>ASSIGN   6223>>IF       6223>>IF       6225>>CALL     6227>>ASSIGN   6228>>ASSIGN   6238>>IF
      6245>>ASSIGN   6246>>ASSIGN   6247>>ASSIGN
VD_PCB.NCHARS
      6112**DCL      6194>>IF       6200>>CALL     6205>>ASSIGN
VD_PCB.TEXT$
      5966**DCL      6206>>ASSIGN
VD_RPAREN_POS
      5557**DCL      6208>>IF       6209>>ASSIGN

PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:112  
      761        1        /*T***********************************************************/
      762        2        /*T*                                                         */
      763        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      764        4        /*T*                                                         */
      765        5        /*T***********************************************************/
      766        6        /*
      767        7                VDI$CRESTORE
      768        8                Given a VD$IT_COMMAND node for a RESTORE command, will
      769        9                perform the command:  open the encoded workspace file, load it,
      770       10                and close it.
      771       11        */
      772       12
      773       13        /*D* NAME:  VDI$CRESTORE
      774       14            PARAMETERS:
      775       15                RESTORE_CMD - A VD$IT_COMMAND InTree node:
      776       16                    .CODE must be %T_RESTORE_CMD.
      777       17                    .PARAM$ (%CP_RESTORE_FID) must point to a VD$TEXTC_REMOTE containing
      778       18                        the fid to read.
      779       19            INPUT:
      780       20            OUTPUT:
      781       21                Nodes in the Equals, Keyins, Locations, Synonyms, and Windows files may
      782       22                    be replaced.  All current windows may have been removed and new
      783       23                    windows created.
      784       24            DESCRIPTION:
      785       25                If the current command stream is a READ-file, close it.
      786       26                Push a new VD$CMD_STREAM onto the command stream stack, and
      787       27                   fill it in to describe the SAVE-file named in the RESTORE command.
      788       28                Open the file, verifying its type is %CHR_ENCODED_TYPE.
      789       29                Call VDW$LOAD to load the file.
      790       30                Close the file, and free it's VD$CMD_STREAM.
      791       31                Reopen the former command stream, and reposition it.
      792       32        */
      793       33
      794       34        VDI$CRESTORE: PROC (RESTORE_CMD) ALTRET;
      795       35
      796       36
      797       37        %INCLUDE VD_MACROS_M;
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:113  
      798     2252        %INCLUDE VD_PERR_C;
      799     2400        %INCLUDE B$JIT;
      800     2690        %INCLUDE CP_6_SUBS;
      801     3230
      802     3231
      803     3232        %VD$IT_COMMAND (NAME=RESTORE_CMD, STCLASS=PARAM);
      804     3270
      805     3271
      806     3272    1   DCL VDI$PREAD_FILE_CLOSE ENTRY ALTRET;
      807     3273    1   DCL VDI$PREAD_FILE_OPEN ENTRY ALTRET;
      808     3274    1   DCL VDI$PREAD_FILE_POSITION ENTRY ALTRET;
      809     3275    1   DCL VDW$LOAD            ENTRY (1) ALTRET;
      810     3276    1   DCL VDG$ERRMSG          ENTRY (4) ALTRET;
      811     3277    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      812     3278    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
      813     3279
      814     3280
      815     3281        %VD_6E (STCLASS=SYMREF);
      816     3317    1   DCL B$JIT$ PTR SYMREF;
      817     3318
      818     3319
      819     3320
      820     3321    1   DCL RESTORE_FID$ PTR;
      821     3322    1   DCL SINK$ PTR;
      822     3323    1   DCL 1 LOAD_FLAGS ALIGNED,
      823     3324              %VD$PDFF (NAME=F, STCLASS=AUTO, LEV=2, LAST=YES);
      824     3338    1   DCL HAD_ERROR BIT(1) ALIGNED;
      825     3339
      826     3340
      827     3341        %VD$TEXTC_REMOTE (NAME=RESTORE$FID, STCLASS="BASED(RESTORE_FID$)");
      828     3402        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(VD_6E.CMD_STREAM$)");
      829     3441        %VD$ERR (NAME=FATAL$ERR, STCLASS="BASED(VD_6E.ERR_HEAD$)");
      830     3494
      831     3495
      832     3496
      833     3497    1           RESTORE_FID$ = RESTORE_CMD.PARAM$ (%CP_RESTORE_FID);
      834     3498    1           HAD_ERROR = %TRUE; /* Assume the worst */
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:114  
      835     3499
      836     3500    1           IF ((CMD$STREAM.TYPE# = %CS_FILE) OR (CMD$STREAM.TYPE# = %CS_DCB)) THEN
      837     3501    1              CALL VDI$PREAD_FILE_CLOSE
      838     3502    1                ALTRET (PREAD_FILE_CLOSE_FAILED);
      839     3503
      840     3504    1           CALL VDG$OALLOC (%CLS_CMD_STREAM, SINK$)
      841     3505    1             ALTRET (OALLOC_FAILED);
      842     3506
      843     3507    1           CMD$STREAM.TYPE# = %CS_FILE;
      844     3508    1           CMD$STREAM.FILE.LENGTH# = RESTORE$FID.LENGTH#;
      845     3509    1           CMD$STREAM.FILE.BYTES = RESTORE$FID.BYTES;
      846     3510    1           CMD$STREAM.ECHO = %TRUE;    /* Honor $ECHO flag */
      847     3511
      848     3512    1           CALL VDI$PREAD_FILE_OPEN
      849     3513    1             ALTRET (PREAD_FILE_OPEN_FAILED);
      850     3514    1           IF CMD$STREAM.FILE_TYPE ~= %CHR_ENCODED_TYPE THEN
      851     3515    1              GOTO WS_FILE_INVALID_FAILURE;
      852     3516
      853     3517    1           LOAD_FLAGS = %CLEAR;
      854     3518    1           LOAD_FLAGS.F (%PDFF_EQUALS) = %TRUE;
      855     3519    2           IF B$JIT.MODE = %M_INT# THEN DO;
      856     3520                   /* Can load keyins only if we're running in timesharing mode */
      857     3521    2              LOAD_FLAGS.F (%PDFF_KEYINS) = %TRUE;
      858     3522    2              END;
      859     3523    1           LOAD_FLAGS.F (%PDFF_LOCATIONS) = %TRUE;
      860     3524    1           LOAD_FLAGS.F (%PDFF_SYNONYMS) = %TRUE;
      861     3525        /*N*    LOAD_FLAGS.F (%PDFF_STRUCTURES) = %TRUE; VD_6E points at 'em */
      862     3526    1           LOAD_FLAGS.F (%PDFF_WINDOWS) = %TRUE;
      863     3527
      864     3528    1           HAD_ERROR = %FALSE;
      865     3529    1           CALL VDW$LOAD (LOAD_FLAGS)
      866     3530    2           WHENALTRETURN DO;
      867     3531    2              IF FATAL$ERR.ERR ~= %CLEAR THEN
      868     3532    2                 ALTRETURN;
      869     3533                   /* Continue in spite of error, to restore former command stream */
      870     3534    2              HAD_ERROR = %TRUE;
      871     3535    2              END;
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:115  
      872     3536
      873     3537    1   CLOSE_REOPEN_REPOSITION: ;
      874     3538    1           CALL VDI$PREAD_FILE_CLOSE
      875     3539    2           WHENALTRETURN DO;
      876     3540    2   PREAD_FILE_REOPEN_FAILED: ;
      877     3541    2   PREAD_FILE_REPOSITION_FAILED: ;
      878     3542    2              IF FATAL$ERR.ERR ~= %CLEAR THEN
      879     3543    2                 ALTRETURN;
      880     3544                   /* Continue in spite of error, to restore former command stream */
      881     3545    2              HAD_ERROR = %TRUE;
      882     3546    2              END;
      883     3547
      884     3548                /* Restore former command stream to top of stack */
      885     3549    1   PREAD_FILE_OPEN_FAILED: ;
      886     3550    1   FREE_REOPEN_REPOSITION:
      887     3551    1           CALL VDG$OFREE (CMD$STREAM)
      888     3552    1             ALTRET (OFREE_FAILED);
      889     3553    1           IF CMD$STREAM.TYPE# = %CS_FILE
      890     3554    2             OR CMD$STREAM.TYPE# = %CS_DCB THEN DO;
      891     3555    2              CMD$STREAM.REC_NUM# = CMD$STREAM.REC_NUM# + 1; /* This one's done */
      892     3556    2              CALL VDI$PREAD_FILE_OPEN
      893     3557    2                ALTRET (PREAD_FILE_REOPEN_FAILED);
      894     3558    2              CALL VDI$PREAD_FILE_POSITION
      895     3559    2                ALTRET (PREAD_FILE_REPOSITION_FAILED);
      896     3560    2              CMD$STREAM.REC_NUM# = CMD$STREAM.REC_NUM# - 1; /* PREAD dunno tho */
      897     3561    2              END;
      898     3562
      899     3563    1   PREAD_FILE_CLOSE_FAILED: ;
      900     3564    1   OFREE_FAILED: ;
      901     3565    1   OALLOC_FAILED: ;
      902     3566    1           IF HAD_ERROR THEN
      903     3567    1              ALTRETURN;
      904     3568    1           RETURN;
      905     3569
      906     3570
      907     3571
      908     3572    1   WS_FILE_INVALID_FAILURE:
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:116  
      909     3573    1           CALL VDG$ERRMSG (%E$BAD_WS_FILE);
      910     3574    1           GOTO CLOSE_REOPEN_REPOSITION;
      911     3575
      912     3576    1   END VDI$CRESTORE;
      913     3577        %EOD;

PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:117  
--  Include file information  --

   CP_6_SUBS.:LIBRARY  is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CRESTORE.

   Procedure VDI$CRESTORE requires 118 words for executable code.
   Procedure VDI$CRESTORE requires 10 words of local(AUTO) storage.

PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:118  

 Object Unit name= VDI$CRESTORE                               File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:32:04.68 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  VDI$CRESTORE
    1   Proc  even  none   118    166  VDI$CRESTORE
    2  RoData even  none     2      2  VDI$CRESTORE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  VDI$CRESTORE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 VDI$PREAD_FILE_CLOSE
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       0 VDI$PREAD_FILE_OPEN
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       1 VDW$LOAD
 yes     yes           Std       0 VDI$PREAD_FILE_POSITION
 yes     yes           Std       4 VDG$ERRMSG
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:119  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:120  


      761        1        /*T***********************************************************/
      762        2        /*T*                                                         */
      763        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      764        4        /*T*                                                         */
      765        5        /*T***********************************************************/
      766        6        /*
      767        7                VDI$CRESTORE
      768        8                Given a VD$IT_COMMAND node for a RESTORE command, will
      769        9                perform the command:  open the encoded workspace file, load it,
      770       10                and close it.
      771       11        */
      772       12
      773       13        /*D* NAME:  VDI$CRESTORE
      774       14            PARAMETERS:
      775       15                RESTORE_CMD - A VD$IT_COMMAND InTree node:
      776       16                    .CODE must be %T_RESTORE_CMD.
      777       17                    .PARAM$ (%CP_RESTORE_FID) must point to a VD$TEXTC_REMOTE containing
      778       18                        the fid to read.
      779       19            INPUT:
      780       20            OUTPUT:
      781       21                Nodes in the Equals, Keyins, Locations, Synonyms, and Windows files may
      782       22                    be replaced.  All current windows may have been removed and new
      783       23                    windows created.
      784       24            DESCRIPTION:
      785       25                If the current command stream is a READ-file, close it.
      786       26                Push a new VD$CMD_STREAM onto the command stream stack, and
      787       27                   fill it in to describe the SAVE-file named in the RESTORE command.
      788       28                Open the file, verifying its type is %CHR_ENCODED_TYPE.
      789       29                Call VDW$LOAD to load the file.
      790       30                Close the file, and free it's VD$CMD_STREAM.
      791       31                Reopen the former command stream, and reposition it.
      792       32        */
      793       33
      794       34        VDI$CRESTORE: PROC (RESTORE_CMD) ALTRET;

     34  1 000000   000000 700200 xent  VDI$CRESTORE TSX0  ! X66_AUTO_1
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:121  
         1 000001   000012 000001                    ZERO    10,1

      795       35
      796       36
      797       37        %INCLUDE VD_MACROS_M;
      798     2252        %INCLUDE VD_PERR_C;
      799     2400        %INCLUDE B$JIT;
      800     2690        %INCLUDE CP_6_SUBS;
      801     3230
      802     3231
      803     3232        %VD$IT_COMMAND (NAME=RESTORE_CMD, STCLASS=PARAM);
      804     3270
      805     3271
      806     3272    1   DCL VDI$PREAD_FILE_CLOSE ENTRY ALTRET;
      807     3273    1   DCL VDI$PREAD_FILE_OPEN ENTRY ALTRET;
      808     3274    1   DCL VDI$PREAD_FILE_POSITION ENTRY ALTRET;
      809     3275    1   DCL VDW$LOAD            ENTRY (1) ALTRET;
      810     3276    1   DCL VDG$ERRMSG          ENTRY (4) ALTRET;
      811     3277    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      812     3278    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
      813     3279
      814     3280
      815     3281        %VD_6E (STCLASS=SYMREF);
      816     3317    1   DCL B$JIT$ PTR SYMREF;
      817     3318
      818     3319
      819     3320
      820     3321    1   DCL RESTORE_FID$ PTR;
      821     3322    1   DCL SINK$ PTR;
      822     3323    1   DCL 1 LOAD_FLAGS ALIGNED,
      823     3324              %VD$PDFF (NAME=F, STCLASS=AUTO, LEV=2, LAST=YES);
      824     3338    1   DCL HAD_ERROR BIT(1) ALIGNED;
      825     3339
      826     3340
      827     3341        %VD$TEXTC_REMOTE (NAME=RESTORE$FID, STCLASS="BASED(RESTORE_FID$)");
      828     3402        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(VD_6E.CMD_STREAM$)");
      829     3441        %VD$ERR (NAME=FATAL$ERR, STCLASS="BASED(VD_6E.ERR_HEAD$)");
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:122  
      830     3494
      831     3495
      832     3496
      833     3497    1           RESTORE_FID$ = RESTORE_CMD.PARAM$ (%CP_RESTORE_FID);

   3497  1 000002   200003 470500                    LDP0    @RESTORE_CMD,,AUTO
         1 000003   000006 236100                    LDQ     6,,PR0
         1 000004   200004 756100                    STQ     RESTORE_FID$,,AUTO

      834     3498    1           HAD_ERROR = %TRUE; /* Assume the worst */

   3498  1 000005   400000 236003                    LDQ     -131072,DU
         1 000006   200007 756100                    STQ     HAD_ERROR,,AUTO

      835     3499
      836     3500    1           IF ((CMD$STREAM.TYPE# = %CS_FILE) OR (CMD$STREAM.TYPE# = %CS_DCB)) THEN

   3500  1 000007   000026 471400 xsym               LDP1    VD_6E+22
         1 000010   100002 220100                    LDX0    2,,PR1
         1 000011   000003 100003                    CMPX0   3,DU
         1 000012   000015 600000 1                  TZE     s:3501
         1 000013   000004 100003                    CMPX0   4,DU
         1 000014   000020 601000 1                  TNZ     s:3504

      837     3501    1              CALL VDI$PREAD_FILE_CLOSE

   3501  1 000015   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000016   000000 701000 xent               TSX1    VDI$PREAD_FILE_CLOSE
         1 000017   000155 702000 1                  TSX2    PREAD_FILE_CLOSE_FAILED

      838     3502    1                ALTRET (PREAD_FILE_CLOSE_FAILED);
      839     3503
      840     3504    1           CALL VDG$OALLOC (%CLS_CMD_STREAM, SINK$)

   3504  1 000020   200005 630500                    EPPR0   SINK$,,AUTO
         1 000021   200011 450500                    STP0    HAD_ERROR+2,,AUTO
         1 000022   000000 236000 2                  LDQ     0
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:123  
         1 000023   200010 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000024   200010 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000025   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000026   000000 701000 xent               TSX1    VDG$OALLOC
         1 000027   000155 702000 1                  TSX2    PREAD_FILE_CLOSE_FAILED

      841     3505    1             ALTRET (OALLOC_FAILED);
      842     3506
      843     3507    1           CMD$STREAM.TYPE# = %CS_FILE;

   3507  1 000030   000003 220003                    LDX0    3,DU
         1 000031   000026 470400 xsym               LDP0    VD_6E+22
         1 000032   000002 740100                    STX0    2,,PR0

      844     3508    1           CMD$STREAM.FILE.LENGTH# = RESTORE$FID.LENGTH#;

   3508  1 000033   200004 470500                    LDP0    RESTORE_FID$,,AUTO
         1 000034   000026 471400 xsym               LDP1    VD_6E+22
         1 000035   000002 236100                    LDQ     2,,PR0
         1 000036   000022 772000                    QRL     18
         1 000037   100002 552110                    STBQ    2,'10'O,PR1

      845     3509    1           CMD$STREAM.FILE.BYTES = RESTORE$FID.BYTES;

   3509  1 000040   000002 236100                    LDQ     2,,PR0
         1 000041   000033 772000                    QRL     27
         1 000042   000000 621006                    EAX1    0,QL
         1 000043   000026 471400 xsym               LDP1    VD_6E+22
         1 000044   040100 100540                    MLR     fill='040'O
         1 000045   000002 200011                    ADSC9   2,,PR0                   cn=1,n=*X1
         1 000046   100002 600104                    ADSC9   2,,PR1                   cn=3,n=68

      846     3510    1           CMD$STREAM.ECHO = %TRUE;    /* Honor $ECHO flag */

   3510  1 000047   000026 471400 xsym               LDP1    VD_6E+22
         1 000050   400000 236007                    LDQ     -131072,DL
         1 000051   100027 256100                    ORSQ    23,,PR1
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:124  

      847     3511
      848     3512    1           CALL VDI$PREAD_FILE_OPEN

   3512  1 000052   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000053   000000 701000 xent               TSX1    VDI$PREAD_FILE_OPEN
         1 000054   000131 702000 1                  TSX2    PREAD_FILE_OPEN_FAILED

      849     3513    1             ALTRET (PREAD_FILE_OPEN_FAILED);
      850     3514    1           IF CMD$STREAM.FILE_TYPE ~= %CHR_ENCODED_TYPE THEN

   3514  1 000055   000026 470400 xsym               LDP0    VD_6E+22
         1 000056   000024 720100                    LXL0    20,,PR0
         1 000057   000000 100000 0                  CMPX0   0
         1 000060   000161 601000 1                  TNZ     WS_FILE_INVALID_FAILURE

      851     3515    1              GOTO WS_FILE_INVALID_FAILURE;
      852     3516
      853     3517    1           LOAD_FLAGS = %CLEAR;

   3517  1 000061   200006 450100                    STZ     LOAD_FLAGS,,AUTO

      854     3518    1           LOAD_FLAGS.F (%PDFF_EQUALS) = %TRUE;

   3518  1 000062   200000 236003                    LDQ     65536,DU
         1 000063   200006 256100                    ORSQ    LOAD_FLAGS,,AUTO

      855     3519    2           IF B$JIT.MODE = %M_INT# THEN DO;

   3519  1 000064   000000 471400 xsym               LDP1    B$JIT$
         1 000065   100000 236100                    LDQ     0,,PR1
         1 000066   740000 376003                    ANQ     -16384,DU
         1 000067   140000 116003                    CMPQ    49152,DU
         1 000070   000073 601000 1                  TNZ     s:3523

      856     3520                   /* Can load keyins only if we're running in timesharing mode */
      857     3521    2              LOAD_FLAGS.F (%PDFF_KEYINS) = %TRUE;
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:125  

   3521  1 000071   100000 236003                    LDQ     32768,DU
         1 000072   200006 256100                    ORSQ    LOAD_FLAGS,,AUTO

      858     3522    2              END;

      859     3523    1           LOAD_FLAGS.F (%PDFF_LOCATIONS) = %TRUE;

   3523  1 000073   040000 236003                    LDQ     16384,DU
         1 000074   200006 256100                    ORSQ    LOAD_FLAGS,,AUTO

      860     3524    1           LOAD_FLAGS.F (%PDFF_SYNONYMS) = %TRUE;

   3524  1 000075   020000 236003                    LDQ     8192,DU
         1 000076   200006 256100                    ORSQ    LOAD_FLAGS,,AUTO

      861     3525        /*N*    LOAD_FLAGS.F (%PDFF_STRUCTURES) = %TRUE; VD_6E points at 'em */
      862     3526    1           LOAD_FLAGS.F (%PDFF_WINDOWS) = %TRUE;

   3526  1 000077   004000 236003                    LDQ     2048,DU
         1 000100   200006 256100                    ORSQ    LOAD_FLAGS,,AUTO

      863     3527
      864     3528    1           HAD_ERROR = %FALSE;

   3528  1 000101   200007 450100                    STZ     HAD_ERROR,,AUTO

      865     3529    1           CALL VDW$LOAD (LOAD_FLAGS)

   3529  1 000102   200006 633500                    EPPR3   LOAD_FLAGS,,AUTO
         1 000103   200010 453500                    STP3    HAD_ERROR+1,,AUTO
         1 000104   200010 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000105   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000106   000000 701000 xent               TSX1    VDW$LOAD
         1 000107   000111 702000 1                  TSX2    s:3531
         1 000110   000117 710000 1                  TRA     CLOSE_REOPEN_REPOSITION

PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:126  
      866     3530    2           WHENALTRETURN DO;

      867     3531    2              IF FATAL$ERR.ERR ~= %CLEAR THEN

   3531  1 000111   000031 470400 xsym               LDP0    VD_6E+25
         1 000112   000002 235100                    LDA     2,,PR0
         1 000113   000115 600000 1                  TZE     s:3534

      868     3532    2                 ALTRETURN;

   3532  1 000114   000000 702200 xent               TSX2  ! X66_AALT

      869     3533                   /* Continue in spite of error, to restore former command stream */
      870     3534    2              HAD_ERROR = %TRUE;

   3534  1 000115   400000 236003                    LDQ     -131072,DU
         1 000116   200007 756100                    STQ     HAD_ERROR,,AUTO

      871     3535    2              END;

   3528  1 000117                       CLOSE_REOPE* null
      872     3536
      873     3537    1   CLOSE_REOPEN_REPOSITION: ;
      874     3538    1           CALL VDI$PREAD_FILE_CLOSE

   3538  1 000117   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000120   000000 701000 xent               TSX1    VDI$PREAD_FILE_CLOSE
         1 000121   000123 702000 1                  TSX2    PREAD_FILE_REOPEN_FAILED
         1 000122   000131 710000 1                  TRA     PREAD_FILE_OPEN_FAILED

      875     3539    2           WHENALTRETURN DO;

   3534  1 000123                       PREAD_FILE_* null
   3534  1 000123                       PREAD_FILE_* null
      876     3540    2   PREAD_FILE_REOPEN_FAILED: ;
      877     3541    2   PREAD_FILE_REPOSITION_FAILED: ;
      878     3542    2              IF FATAL$ERR.ERR ~= %CLEAR THEN
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:127  

   3542  1 000123   000031 470400 xsym               LDP0    VD_6E+25
         1 000124   000002 235100                    LDA     2,,PR0
         1 000125   000127 600000 1                  TZE     s:3545

      879     3543    2                 ALTRETURN;

   3543  1 000126   000000 702200 xent               TSX2  ! X66_AALT

      880     3544                   /* Continue in spite of error, to restore former command stream */
      881     3545    2              HAD_ERROR = %TRUE;

   3545  1 000127   400000 236003                    LDQ     -131072,DU
         1 000130   200007 756100                    STQ     HAD_ERROR,,AUTO

      882     3546    2              END;

   3545  1 000131                       PREAD_FILE_* null
      883     3547
      884     3548                /* Restore former command stream to top of stack */
      885     3549    1   PREAD_FILE_OPEN_FAILED: ;
      886     3550    1   FREE_REOPEN_REPOSITION:
      887     3551    1           CALL VDG$OFREE (CMD$STREAM)

   3551  1 000131   000026 630400 xsym  FREE_REOPEN* EPPR0   VD_6E+22
         1 000132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000133   000000 701000 xent               TSX1    VDG$OFREE
         1 000134   000155 702000 1                  TSX2    PREAD_FILE_CLOSE_FAILED

      888     3552    1             ALTRET (OFREE_FAILED);
      889     3553    1           IF CMD$STREAM.TYPE# = %CS_FILE

   3553  1 000135   000026 470400 xsym               LDP0    VD_6E+22
         1 000136   000002 220100                    LDX0    2,,PR0
         1 000137   000003 100003                    CMPX0   3,DU
         1 000140   000143 600000 1                  TZE     s:3555
         1 000141   000004 100003                    CMPX0   4,DU
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:128  
         1 000142   000155 601000 1                  TNZ     PREAD_FILE_CLOSE_FAILED

      890     3554    2             OR CMD$STREAM.TYPE# = %CS_DCB THEN DO;

      891     3555    2              CMD$STREAM.REC_NUM# = CMD$STREAM.REC_NUM# + 1; /* This one's done */

   3555  1 000143   000030 054100                    AOS     24,,PR0

      892     3556    2              CALL VDI$PREAD_FILE_OPEN

   3556  1 000144   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000145   000000 701000 xent               TSX1    VDI$PREAD_FILE_OPEN
         1 000146   000123 702000 1                  TSX2    PREAD_FILE_REOPEN_FAILED

      893     3557    2                ALTRET (PREAD_FILE_REOPEN_FAILED);
      894     3558    2              CALL VDI$PREAD_FILE_POSITION

   3558  1 000147   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000150   000000 701000 xent               TSX1    VDI$PREAD_FILE_POSITION
         1 000151   000123 702000 1                  TSX2    PREAD_FILE_REOPEN_FAILED

      895     3559    2                ALTRET (PREAD_FILE_REPOSITION_FAILED);
      896     3560    2              CMD$STREAM.REC_NUM# = CMD$STREAM.REC_NUM# - 1; /* PREAD dunno tho */

   3560  1 000152   000026 470400 xsym               LDP0    VD_6E+22
         1 000153   000001 336007                    LCQ     1,DL
         1 000154   000030 056100                    ASQ     24,,PR0

      897     3561    2              END;

      898     3562
      899     3563    1   PREAD_FILE_CLOSE_FAILED: ;

   3563  1 000155                       PREAD_FILE_* null
   3563  1 000155                       OFREE_FAILED null
   3563  1 000155                       OALLOC_FAIL* null
      900     3564    1   OFREE_FAILED: ;
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:129  
      901     3565    1   OALLOC_FAILED: ;
      902     3566    1           IF HAD_ERROR THEN

   3566  1 000155   200007 234100                    SZN     HAD_ERROR,,AUTO
         1 000156   000160 605000 1                  TPL     s:3568

      903     3567    1              ALTRETURN;

   3567  1 000157   000000 702200 xent               TSX2  ! X66_AALT

      904     3568    1           RETURN;

   3568  1 000160   000000 702200 xent               TSX2  ! X66_ARET

      905     3569
      906     3570
      907     3571
      908     3572    1   WS_FILE_INVALID_FAILURE:
      909     3573    1           CALL VDG$ERRMSG (%E$BAD_WS_FILE);

   3573  1 000161   000001 630400 2     WS_FILE_INV* EPPR0   1
         1 000162   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000163   000000 701000 xent               TSX1    VDG$ERRMSG
         1 000164   000000 011000                    NOP     0

      910     3574    1           GOTO CLOSE_REOPEN_REPOSITION;

   3574  1 000165   000117 710000 1                  TRA     CLOSE_REOPEN_REPOSITION
      911     3575
      912     3576    1   END VDI$CRESTORE;
      913     3577        %EOD;

PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:130  
--  Include file information  --

   CP_6_SUBS.:LIBRARY  is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CRESTORE.
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:131  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @RESTORE_CMD               7-0-0/w BIT         r     1 HAD_ERROR
     6-0-0/w STRC(9)     r     1 LOAD_FLAGS                *0-0-0/w STRC(540)   r     1 RESTORE_CMD
     4-0-0/w PTR         r     1 RESTORE_FID$               5-0-0/w PTR         r     1 SINK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w STRC(22644) r     1 VD_6E

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(900)   r     1 CMD$STREAM
     0-0-0/w STRC(180)   r     1 FATAL$ERR                  0-0-0/w ASTR(81)    r     1 RESTORE$FID


   Procedure VDI$CRESTORE requires 118 words for executable code.
   Procedure VDI$CRESTORE requires 10 words of local(AUTO) storage.
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:132  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:133  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      2508**DCL      2508--REDEF
B$JIT.ERR.MID
      2415**DCL      2415--REDEF
B$JIT.JRESPEAK
      2576**DCL      2577--REDEF
B$JIT.MODE
      2409**DCL      3519>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      2685**DCL      2685--REDEF    2686--REDEF
B$JIT.PNR
      2589**DCL      2589--REDEF
B$JIT.TSLINE
      2683**DCL      2684--REDEF
B$JIT$
      3317**DCL      2409--IMP-PTR  3519>>IF
CLOSE_REOPEN_REPOSITION
      3528**LABEL    3574--GOTO
CMD$STREAM
      3410**DCL      3551<>CALL
CMD$STREAM.ECHO
      3438**DCL      3510<<ASSIGN
CMD$STREAM.FILE.BYTES
      3436**DCL      3509<<ASSIGN
CMD$STREAM.FILE.LENGTH#
      3436**DCL      3508<<ASSIGN
CMD$STREAM.FILE_TYPE
      3437**DCL      3514>>IF
CMD$STREAM.REC_NUM#
      3439**DCL      3555<<ASSIGN   3555>>ASSIGN   3560<<ASSIGN   3560>>ASSIGN
CMD$STREAM.TYPE#
      3436**DCL      3500>>IF       3500>>IF       3507<<ASSIGN   3553>>IF       3553>>IF
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:134  
FATAL$ERR.ERR
      3486**DCL      3531>>IF       3542>>IF
HAD_ERROR
      3338**DCL      3498<<ASSIGN   3528<<ASSIGN   3534<<ASSIGN   3545<<ASSIGN   3566>>IF
LOAD_FLAGS
      3323**DCL      3517<<ASSIGN   3529<>CALL
LOAD_FLAGS.F
      3335**DCL      3518<<ASSIGN   3521<<ASSIGN   3523<<ASSIGN   3524<<ASSIGN   3526<<ASSIGN
OALLOC_FAILED
      3563**LABEL    3504--CALLALT
OFREE_FAILED
      3563**LABEL    3551--CALLALT
PREAD_FILE_CLOSE_FAILED
      3563**LABEL    3501--CALLALT
PREAD_FILE_OPEN_FAILED
      3545**LABEL    3512--CALLALT
PREAD_FILE_REOPEN_FAILED
      3534**LABEL    3556--CALLALT
PREAD_FILE_REPOSITION_FAILED
      3534**LABEL    3558--CALLALT
RESTORE$FID.BYTES
      3397**DCL      3509>>ASSIGN
RESTORE$FID.LENGTH#
      3395**DCL      3397--IMP-SIZ  3508>>ASSIGN   3509>>ASSIGN
RESTORE_CMD
      3240**DCL        34--PROC
RESTORE_CMD.PARAM$
      3267**DCL      3497>>ASSIGN
RESTORE_FID$
      3321**DCL      3366--IMP-PTR  3497<<ASSIGN   3508>>ASSIGN   3509>>ASSIGN   3509>>ASSIGN
SINK$
      3322**DCL      3504<>CALL
VDG$ERRMSG
      3276**DCL-ENT  3573--CALL
VDG$OALLOC
      3277**DCL-ENT  3504--CALL
PL6.E3A0      #006=VDI$CRESTORE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:135  
VDG$OFREE
      3278**DCL-ENT  3551--CALL
VDI$PREAD_FILE_CLOSE
      3272**DCL-ENT  3501--CALL     3538--CALL
VDI$PREAD_FILE_OPEN
      3273**DCL-ENT  3512--CALL     3556--CALL
VDI$PREAD_FILE_POSITION
      3274**DCL-ENT  3558--CALL
VDW$LOAD
      3275**DCL-ENT  3529--CALL
VD_6E.CMD_STREAM$
      3312**DCL      3410--IMP-PTR  3500>>IF       3500>>IF       3507>>ASSIGN   3508>>ASSIGN   3509>>ASSIGN
      3510>>ASSIGN   3514>>IF       3551>>CALL     3553>>IF       3553>>IF       3555>>ASSIGN   3555>>ASSIGN
      3560>>ASSIGN   3560>>ASSIGN
VD_6E.ERR_HEAD$
      3313**DCL      3449--IMP-PTR  3531>>IF       3542>>IF
WS_FILE_INVALID_FAILURE
      3573**LABEL    3515--GOTO

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:136  
      914        1        /*M* VDI$CSAVE - Command Processor for SAVE command */
      915        2        /*T***********************************************************/
      916        3        /*T*                                                         */
      917        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      918        5        /*T*                                                         */
      919        6        /*T***********************************************************/
      920        7
      921        8        /*X* MCR=NO, DMC=YES */
      922        9        /*T*/
      923       10
      924       11        /*P* NAME:  VDI$CSAVE
      925       12            PURPOSE:
      926       13                Command Processor for SAVE command.
      927       14            DESCRIPTION:
      928       15                Given a VD$IT_COMMAND node for a SAVE command, will perform
      929       16                the command:  for each internal file SAVEd, write
      930       17                VD$ENCODED_NODEs for each record of these files to the
      931       18                specified context file.
      932       19        */
      933       20
      934       21        /*D* NAME:  VDI$CSAVE
      935       22            PARAMETERS:
      936       23                SAVE_CMD - The VD$IT_COMMAND InTree node for the command:
      937       24                    .CODE must be %T_SAVE_COMMAND.
      938       25                    .PARAM$ (%CP_SAVE_FID) must point to a VD$TEXTC_REMOTE containing
      939       26                        the fid to save to.
      940       27                    .FLAGS (%CF_SAVE_ALL) must be set for the ALL option.
      941       28                    .FLAGS (%CF_SAVE_SETUP) must be set for the SETUP option.
      942       29                    .FLAGS (%CF_SAVE_SESSION) must be set for the SESSION option.
      943       30                    .FLAGS (%CF_SAVE_TO) must be set for the TO or ON options.
      944       31                    .FLAGS (%CF_SAVE_OVER) must be set for the OVER option.
      945       32            INPUT:
      946       33            OUTPUT:
      947       34                The specified file is updated with the information from the specified
      948       35                internal files.
      949       36            DESCRIPTION:
      950       37        */
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:137  
      951       38
      952       39        VDI$CSAVE: PROC (SAVE_CMD) ALTRET;
      953       40
      954       41        %INCLUDE CP_6;
      955      122        %INCLUDE CP_6_SUBS;
      956      662        %INCLUDE VD_MACROS_M;
      957     2877        %INCLUDE VD_PERR_C;
      958     3025        %INCLUDE VD_NODES0_E;
      959     3117        %INCLUDE B$JIT;
      960     3407
      961     3408        %FPT_FID (FPTN=FPT_FID_CONTEXT_FILE,
      962     3409                  ACCT=VLP_ACCT_CONTEXT_FILE,
      963     3410                  ASN="FPT_OPEN_CONTEXT_FILE.V.ASN#",
      964     3411                  NAME=VLP_NAME_CONTEXT_FILE,
      965     3412                  PASS=VLP_PASS_CONTEXT_FILE,
      966     3413                  RES="FPT_OPEN_CONTEXT_FILE.V.RES#",
      967     3414                  SN=VLP_SN_CONTEXT_FILE,
      968     3415                  WSN=VLP_WSN_CONTEXT_FILE,
      969     3416                  RESULTS=VLR_FID_CONTEXT_FILE);
      970     3439        %VLR_FID (FPTN=VLR_FID_CONTEXT_FILE);
      971     3458        %FPT_OPEN (FPTN=FPT_OPEN_CONTEXT_FILE,
      972     3459                   ACCT=VLP_ACCT_CONTEXT_FILE,
      973     3460                   NAME=VLP_NAME_CONTEXT_FILE,
      974     3461                   PASS=VLP_PASS_CONTEXT_FILE,
      975     3462                   SN=VLP_SN_CONTEXT_FILE,
      976     3463                   WSN=VLP_WSN_CONTEXT_FILE,
      977     3464                   FUN=CREATE,
      978     3465                   ORG=CONSEC,
      979     3466                   SCRUB=YES,
      980     3467                   TYPE=%CHR_ENCODED_TYPE);
      981     3576        %VLP_ACCT (FPTN=VLP_ACCT_CONTEXT_FILE);
      982     3589        %VLP_NAME (FPTN=VLP_NAME_CONTEXT_FILE);
      983     3616        %VLP_PASS (FPTN=VLP_PASS_CONTEXT_FILE);
      984     3629        %VLP_SN (FPTN=VLP_SN_CONTEXT_FILE);
      985     3642        %VLP_WSN (FPTN=VLP_WSN_CONTEXT_FILE);
      986     3655        %FPT_CLOSE (FPTN=FPT_CLOSE_CONTEXT_FILE,
      987     3656                    DISP=SAVE);
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:138  
      988     3698
      989     3699        %VD$IT_COMMAND (NAME=SAVE_CMD, STCLASS=PARAM);
      990     3737
      991     3738    1   DCL VDG$EREPORT_ERROR           ENTRY (1);
      992     3739    1   DCL VDG$INFOMSG                 ENTRY (4) ALTRET;
      993     3740    1   DCL VDG$MONERR                  ENTRY ALTRET;
      994     3741    1   DCL VDG$ESCREECH                ENTRY (3);
      995     3742    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
      996     3743    1   DCL VDG$OALLOC_DCB              ENTRY (1) ALTRET;
      997     3744    1   DCL VDG$OFREE_DCB               ENTRY (1) ALTRET;
      998     3745    1   DCL VDW$SAVE                    ENTRY (3) ALTRET;
      999     3746    1   DCL VDW$STOW_NODE               ENTRY (5) ALTRET;
     1000     3747
     1001     3748        %VD_6E (STCLASS=SYMREF);
     1002     3784    1   DCL B$JIT$ PTR SYMREF;
     1003     3785    1   DCL M$ME DCB;
     1004     3786        %VD_BUFFER (NAME=VD_$CONTEXT, STCLASS=SYMREF, MXNB=%MXNB_FID);
     1005     3846
     1006     3847
     1007     3848        %FPT_TIME (STCLASS=STATIC, DEST=UTS);
     1008     3867        %FPT_GLINEATTR (STCLASS=CONSTANT, LINEATTR=VLP_LINEATTR);
     1009     3892
     1010     3893
     1011     3894    1   DCL SAVE_FID$ PTR;
     1012     3895    1   DCL 1 SAVE_FLAGS ALIGNED,
     1013     3896              %VD$PDFF (NAME=F, STCLASS=AUTO, LEV=2, LAST=YES);
     1014     3910    1   DCL SAVE_FILE_RECORD_NUMBER SBIN;
     1015     3911        %VD$ENCODED_FILE_SPEC (NAME=ENCODED_FILE_SPEC, STCLASS=AUTO);
     1016     3940        %VLP_LINEATTR (STCLASS=STATIC);
     1017     3962        %VD$FILE_NODE (NAME=HDR_FILE_NODE, STCLASS=AUTO);
     1018     4055        %VD$KEY (NAME=HDR_FILE_KEY, STCLASS=AUTO);
     1019     4069        %VD$LOCATION (NAME=HDR_LOCATION, STCLASS=AUTO);
     1020     4097
     1021     4098        %VD$TEXTC (NAME=SAVE$FID, STCLASS="BASED(SAVE_FID$)");
     1022     4121        %VD$STREAM (NAME=EQUALS$STREAM, STCLASS="BASED(VD_6E.EQUALS$)");
     1023     4227        %VD$STREAM (NAME=LOCATIONS$STREAM, STCLASS="BASED(VD_6E.LOCATIONS$)");
     1024     4333        %VD$STREAM (NAME=STRUCTURES$STREAM, STCLASS="BASED(VD_6E.STRUCTURES$)");
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:139  
     1025     4439        %VD$STREAM (NAME=WINDOWS$STREAM, STCLASS="BASED(VD_6E.WINDOWS$)");
     1026     4545        %VD$STREAM (NAME=KEYINS$STREAM, STCLASS="BASED(VD_6E.KEYINS$)");
     1027     4651        %VD$STREAM (NAME=SYNONYMS$STREAM, STCLASS="BASED(VD_6E.SYNONYMS$)");
     1028     4757        %VD$TEXTC_REMOTE;
     1029     4818        %EJECT;
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:140  
     1030     4819
     1031     4820                /*
     1032     4821                *  Determine what exactly the user wants us to save.
     1033     4822                */
     1034     4823
     1035     4824    1           SAVE_FLAGS = %CLEAR;
     1036     4825    2           IF SAVE_CMD.FLAGS (%CF_SAVE_ALL) THEN DO;
     1037     4826    2              SAVE_FLAGS.F (%PDFF_EQUALS) = %TRUE;
     1038     4827    2              SAVE_FLAGS.F (%PDFF_KEYINS) = %TRUE;
     1039     4828    2              SAVE_FLAGS.F (%PDFF_LOCATIONS) = %TRUE;
     1040     4829    2              SAVE_FLAGS.F (%PDFF_SYNONYMS) = %TRUE;
     1041     4830        /*N*       SAVE_FLAGS.F (%PDFF_STRUCTURES) = %TRUE; VD_6E points at 'em */
     1042     4831    2              SAVE_FLAGS.F (%PDFF_WINDOWS) = %TRUE;
     1043     4832    2              END;
     1044     4833    2           IF SAVE_CMD.FLAGS (%CF_SAVE_SETUP) THEN DO;
     1045     4834    2              SAVE_FLAGS.F (%PDFF_EQUALS) = %TRUE;
     1046     4835    2              SAVE_FLAGS.F (%PDFF_KEYINS) = %TRUE;
     1047     4836    2              SAVE_FLAGS.F (%PDFF_SYNONYMS) = %TRUE;
     1048     4837    2              END;
     1049     4838    2           IF SAVE_CMD.FLAGS (%CF_SAVE_SESSION) THEN DO;
     1050     4839    2              SAVE_FLAGS.F (%PDFF_LOCATIONS) = %TRUE;
     1051     4840        /*N*       SAVE_FLAGS.F (%PDFF_STRUCTURES) = %TRUE; VD_6E points at 'em */
     1052     4841    2              SAVE_FLAGS.F (%PDFF_WINDOWS) = %TRUE;
     1053     4842    2              END;
     1054     4843    2           IF B$JIT.MODE ~= %M_INT# THEN DO;
     1055     4844                   /* Can't do keyins if we're not running in timesharing mode */
     1056     4845    2              SAVE_FLAGS.F (%PDFF_KEYINS) = %FALSE;
     1057     4846    2              END;
     1058     4847
     1059     4848                /*
     1060     4849                *   Open the file we're saving to.
     1061     4850                */
     1062     4851
     1063     4852    2           IF SAVE_CMD.PARAM$ (%CP_SAVE_FID) = ADDR(NIL) THEN DO;
     1064     4853                   /* Use fid of context file read at invocation */
     1065     4854    2              SAVE_FID$ = PINCRC(ADDR(VD_$CONTEXT.LENGTH#), 1);
     1066     4855    2              CALL VDG$INFOMSG (%E$INFO_SAVING_OVER, VD_$CONTEXT.LENGTH#);
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:141  
     1067     4856    2              CALL VDG$EREPORT_ERROR;
     1068     4857    2              END;
     1069     4858    2           ELSE DO;
     1070     4859    2              SAVE_FID$ = ADDR(SAVE_CMD.PARAM$ (%CP_SAVE_FID) ->
     1071     4860    2                VD$TEXTC_REMOTE.LENGTH#);
     1072     4861    2              END;
     1073     4862
     1074     4863    1           IF SAVE_CMD.FLAGS (%CF_SAVE_TO) THEN
     1075     4864    1              FPT_OPEN_CONTEXT_FILE.V.EXIST# = %ERROR#;
     1076     4865    1           ELSE
     1077     4866    1              FPT_OPEN_CONTEXT_FILE.V.EXIST# = %NEWFILE#;
     1078     4867
     1079     4868    1           FPT_FID_CONTEXT_FILE.TEXTFID_ = VECTOR(SAVE$FID.BYTES);
     1080     4869    1           CALL M$FID (FPT_FID_CONTEXT_FILE) ALTRET (CONTEXT_FILE_FID_ERROR);
     1081     4870
     1082     4871    1           CALL VDG$OALLOC_DCB (FPT_OPEN_CONTEXT_FILE.V.DCB#)
     1083     4872    2           WHENALTRETURN DO; ALTRETURN; END;
     1084     4873
     1085     4874    1           FPT_CLOSE_CONTEXT_FILE.V.DCB# = FPT_OPEN_CONTEXT_FILE.V.DCB#;
     1086     4875    1           CALL M$OPEN (FPT_OPEN_CONTEXT_FILE) ALTRET (CONTEXT_FILE_OPEN_ERROR);
     1087     4876
     1088     4877                /*
     1089     4878                *   Build the header record, and write it to the SAVE-file.
     1090     4879                */
     1091     4880    1           SAVE_FILE_RECORD_NUMBER = 0;
     1092     4881
     1093     4882    1           ENCODED_FILE_SPEC = %CLEAR;
     1094     4883    1           ENCODED_FILE_SPEC.CONTENTS = SAVE_FLAGS;
     1095     4884
     1096     4885    1           FPT_TIME.TSTAMP_ = VECTOR(ENCODED_FILE_SPEC.LAST_MODIFIED.TIME#);
     1097     4886    1           CALL M$TIME (FPT_TIME)
     1098     4887    1             ALTRET (TIME_FAILED);
     1099     4888    1           ENCODED_FILE_SPEC.LAST_MODIFIED.USER_NAME = B$JIT.UNAME;
     1100     4889    1           IF B$JIT.MODE ~= %M_INT# THEN
     1101     4890    1              VLP_LINEATTR = %CLEAR;
     1102     4891    2           ELSE DO;
     1103     4892    2              CALL M$GLINEATTR (FPT_GLINEATTR)
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:142  
     1104     4893    2                ALTRET (GLINEATTR_FAILED);
     1105     4894    2              END;
     1106     4895    1           ENCODED_FILE_SPEC.LAST_MODIFIED.PROFILE = VLP_LINEATTR.PROTXTC;
     1107     4896
     1108     4897    1           HDR_FILE_KEY = %CLEAR;
     1109     4898    1           HDR_LOCATION = %CLEAR;
     1110     4899    1           HDR_FILE_NODE = %CLEAR;
     1111     4900    1           HDR_FILE_NODE.DESC.DATA$ = ADDR(NIL);
     1112     4901    1           HDR_FILE_NODE.DESC.SPEC.TYPE# = %SPT_ENCODED_FILE_SPEC;
     1113     4902    1           HDR_FILE_NODE.DESC.SPEC.REP# = %REP_REMOTE;
     1114     4903    1           HDR_FILE_NODE.DESC.SPEC.V$ = ADDR(ENCODED_FILE_SPEC);
     1115     4904    1           CALL VDW$STOW_NODE (HDR_FILE_KEY, HDR_LOCATION, HDR_FILE_NODE,
     1116     4905    1             FPT_OPEN_CONTEXT_FILE.V.DCB#, SAVE_FILE_RECORD_NUMBER)
     1117     4906    1             ALTRET (STOW_NODE_FAILED);
     1118     4907
     1119     4908                /*
     1120     4909                *  Now, save the files the user wants to save, in the order WE want
     1121     4910                *    to save them in.
     1122     4911                */
     1123     4912
     1124     4913    2           IF SAVE_FLAGS.F (%PDFF_EQUALS) THEN DO;
     1125     4914    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,
     1126     4915    2                SAVE_FILE_RECORD_NUMBER, EQUALS$STREAM)
     1127     4916    2                ALTRET (W$SAVE_FAILED);
     1128     4917    2              END;
     1129     4918
     1130     4919    2           IF SAVE_FLAGS.F (%PDFF_LOCATIONS) THEN DO;
     1131     4920    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,
     1132     4921    2                SAVE_FILE_RECORD_NUMBER, LOCATIONS$STREAM)
     1133     4922    2                ALTRET (W$SAVE_FAILED);
     1134     4923    2              END;
     1135     4924
     1136     4925    2           IF SAVE_FLAGS.F (%PDFF_STRUCTURES) THEN DO;
     1137     4926    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,
     1138     4927    2                SAVE_FILE_RECORD_NUMBER, STRUCTURES$STREAM)
     1139     4928    2                ALTRET (W$SAVE_FAILED);
     1140     4929    2              END;
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:143  
     1141     4930
     1142     4931    2           IF SAVE_FLAGS.F (%PDFF_WINDOWS) THEN DO;
     1143     4932    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,
     1144     4933    2                SAVE_FILE_RECORD_NUMBER, WINDOWS$STREAM)
     1145     4934    2                ALTRET (W$SAVE_FAILED);
     1146     4935    2              END;
     1147     4936
     1148     4937    2           IF SAVE_FLAGS.F (%PDFF_KEYINS) THEN DO;
     1149     4938    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,
     1150     4939    2                SAVE_FILE_RECORD_NUMBER, KEYINS$STREAM)
     1151     4940    2                ALTRET (W$SAVE_FAILED);
     1152     4941    2              END;
     1153     4942
     1154     4943    2           IF SAVE_FLAGS.F (%PDFF_SYNONYMS) THEN DO;
     1155     4944    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,
     1156     4945    2                SAVE_FILE_RECORD_NUMBER, SYNONYMS$STREAM)
     1157     4946    2                ALTRET (W$SAVE_FAILED);
     1158     4947    2              END;
     1159     4948
     1160     4949    1           CALL M$CLOSE (FPT_CLOSE_CONTEXT_FILE) ALTRET (CONTEXT_FILE_CLOSE_ERROR);
     1161     4950
     1162     4951    1           CALL VDG$OFREE_DCB (FPT_CLOSE_CONTEXT_FILE.V.DCB#)
     1163     4952    2           WHENALTRETURN DO; ALTRETURN; END;
     1164     4953
     1165     4954    1           RETURN;
     1166     4955
     1167     4956
     1168     4957
     1169     4958    1   CONTEXT_FILE_FID_ERROR:
     1170     4959    1           CALL VDG$MONERR;
     1171     4960    1           ALTRETURN;
     1172     4961
     1173     4962
     1174     4963    1   TIME_FAILED: ;
     1175     4964    1   GLINEATTR_FAILED: ;
     1176     4965    1           CALL VDG$MONERR;
     1177     4966        /*      GOTO CLOSE_CONTEXT_FILE_AND_ALTRET; */
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:144  
     1178     4967
     1179     4968
     1180     4969    1   STOW_NODE_FAILED: ;
     1181     4970    1   W$SAVE_FAILED: ;
     1182     4971    1   CLOSE_CONTEXT_FILE_AND_ALTRET:
     1183     4972    1           CALL M$CLOSE (FPT_CLOSE_CONTEXT_FILE)
     1184     4973    1             ALTRET (CONTEXT_FILE_CLOSE_ERROR);
     1185     4974    1           GOTO FREE_DCB_AND_ALTRET;
     1186     4975
     1187     4976
     1188     4977    1   CONTEXT_FILE_OPEN_ERROR: ;
     1189     4978    1   CONTEXT_FILE_CLOSE_ERROR: ;
     1190     4979    1           CALL VDG$MONERR;
     1191     4980    1   FREE_DCB_AND_ALTRET: ;
     1192     4981                /*    !!!!!!!!!!!!!!!!!   CAUTION   !!!!!!!!!!!!!!!!!!!
     1193     4982                *  We really shouldn't free the DCB at this point, because the
     1194     4983                *   error message refers to it; we should wait til after the error
     1195     4984                *   message is reported.  However, since we're altreturning, we assume
     1196     4985                *   we won't allocate any more DCBs til after the error message is
     1197     4986                *   reported.  So we fudge a little.
     1198     4987                */
     1199     4988    1           CALL VDG$OFREE_DCB (FPT_OPEN_CONTEXT_FILE.V.DCB#);  /* Ignore altret */
     1200     4989    1           ALTRETURN;
     1201     4990
     1202     4991    1   END VDI$CSAVE;
     1203     4992        %EOD;

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:145  
--  Include file information  --

   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDI$CSAVE.

   Procedure VDI$CSAVE requires 264 words for executable code.
   Procedure VDI$CSAVE requires 46 words of local(AUTO) storage.

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:146  

 Object Unit name= VDI$CSAVE                                  File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:32:14.48 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   168    250  VDI$CSAVE
    2   DCB   even  none     0      0  M$ME
    3  RoData even  UTS      8     10  VDI$CSAVE
    4   Proc  even  none   264    410  VDI$CSAVE
    5  RoData even  none     8     10  VDI$CSAVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        1  VDI$CSAVE
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:147  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 VDG$INFOMSG
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       1 VDG$OALLOC_DCB
 yes     yes           Std       3 VDW$SAVE
 yes     yes           Std       5 VDW$STOW_NODE
 yes     yes           Std       0 VDG$MONERR
 yes     yes           Std       1 VDG$OFREE_DCB
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VD_6E                                 B$JIT$
     M$ME                                  VD_$CONTEXT                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:148  


      914        1        /*M* VDI$CSAVE - Command Processor for SAVE command */
      915        2        /*T***********************************************************/
      916        3        /*T*                                                         */
      917        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      918        5        /*T*                                                         */
      919        6        /*T***********************************************************/
      920        7
      921        8        /*X* MCR=NO, DMC=YES */
      922        9        /*T*/
      923       10
      924       11        /*P* NAME:  VDI$CSAVE
      925       12            PURPOSE:
      926       13                Command Processor for SAVE command.
      927       14            DESCRIPTION:
      928       15                Given a VD$IT_COMMAND node for a SAVE command, will perform
      929       16                the command:  for each internal file SAVEd, write
      930       17                VD$ENCODED_NODEs for each record of these files to the
      931       18                specified context file.
      932       19        */
      933       20
      934       21        /*D* NAME:  VDI$CSAVE
      935       22            PARAMETERS:
      936       23                SAVE_CMD - The VD$IT_COMMAND InTree node for the command:
      937       24                    .CODE must be %T_SAVE_COMMAND.
      938       25                    .PARAM$ (%CP_SAVE_FID) must point to a VD$TEXTC_REMOTE containing
      939       26                        the fid to save to.
      940       27                    .FLAGS (%CF_SAVE_ALL) must be set for the ALL option.
      941       28                    .FLAGS (%CF_SAVE_SETUP) must be set for the SETUP option.
      942       29                    .FLAGS (%CF_SAVE_SESSION) must be set for the SESSION option.
      943       30                    .FLAGS (%CF_SAVE_TO) must be set for the TO or ON options.
      944       31                    .FLAGS (%CF_SAVE_OVER) must be set for the OVER option.
      945       32            INPUT:
      946       33            OUTPUT:
      947       34                The specified file is updated with the information from the specified
      948       35                internal files.
      949       36            DESCRIPTION:
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:149  
      950       37        */
      951       38
      952       39        VDI$CSAVE: PROC (SAVE_CMD) ALTRET;

     39  4 000000   000000 700200 xent  VDI$CSAVE    TSX0  ! X66_AUTO_1
         4 000001   000056 000001                    ZERO    46,1

      953       40
      954       41        %INCLUDE CP_6;
      955      122        %INCLUDE CP_6_SUBS;
      956      662        %INCLUDE VD_MACROS_M;
      957     2877        %INCLUDE VD_PERR_C;
      958     3025        %INCLUDE VD_NODES0_E;
      959     3117        %INCLUDE B$JIT;
      960     3407
      961     3408        %FPT_FID (FPTN=FPT_FID_CONTEXT_FILE,
      962     3409                  ACCT=VLP_ACCT_CONTEXT_FILE,
      963     3410                  ASN="FPT_OPEN_CONTEXT_FILE.V.ASN#",
      964     3411                  NAME=VLP_NAME_CONTEXT_FILE,
      965     3412                  PASS=VLP_PASS_CONTEXT_FILE,
      966     3413                  RES="FPT_OPEN_CONTEXT_FILE.V.RES#",
      967     3414                  SN=VLP_SN_CONTEXT_FILE,
      968     3415                  WSN=VLP_WSN_CONTEXT_FILE,
      969     3416                  RESULTS=VLR_FID_CONTEXT_FILE);
      970     3439        %VLR_FID (FPTN=VLR_FID_CONTEXT_FILE);
      971     3458        %FPT_OPEN (FPTN=FPT_OPEN_CONTEXT_FILE,
      972     3459                   ACCT=VLP_ACCT_CONTEXT_FILE,
      973     3460                   NAME=VLP_NAME_CONTEXT_FILE,
      974     3461                   PASS=VLP_PASS_CONTEXT_FILE,
      975     3462                   SN=VLP_SN_CONTEXT_FILE,
      976     3463                   WSN=VLP_WSN_CONTEXT_FILE,
      977     3464                   FUN=CREATE,
      978     3465                   ORG=CONSEC,
      979     3466                   SCRUB=YES,
      980     3467                   TYPE=%CHR_ENCODED_TYPE);
      981     3576        %VLP_ACCT (FPTN=VLP_ACCT_CONTEXT_FILE);
      982     3589        %VLP_NAME (FPTN=VLP_NAME_CONTEXT_FILE);
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:150  
      983     3616        %VLP_PASS (FPTN=VLP_PASS_CONTEXT_FILE);
      984     3629        %VLP_SN (FPTN=VLP_SN_CONTEXT_FILE);
      985     3642        %VLP_WSN (FPTN=VLP_WSN_CONTEXT_FILE);
      986     3655        %FPT_CLOSE (FPTN=FPT_CLOSE_CONTEXT_FILE,
      987     3656                    DISP=SAVE);
      988     3698
      989     3699        %VD$IT_COMMAND (NAME=SAVE_CMD, STCLASS=PARAM);
      990     3737
      991     3738    1   DCL VDG$EREPORT_ERROR           ENTRY (1);
      992     3739    1   DCL VDG$INFOMSG                 ENTRY (4) ALTRET;
      993     3740    1   DCL VDG$MONERR                  ENTRY ALTRET;
      994     3741    1   DCL VDG$ESCREECH                ENTRY (3);
      995     3742    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
      996     3743    1   DCL VDG$OALLOC_DCB              ENTRY (1) ALTRET;
      997     3744    1   DCL VDG$OFREE_DCB               ENTRY (1) ALTRET;
      998     3745    1   DCL VDW$SAVE                    ENTRY (3) ALTRET;
      999     3746    1   DCL VDW$STOW_NODE               ENTRY (5) ALTRET;
     1000     3747
     1001     3748        %VD_6E (STCLASS=SYMREF);
     1002     3784    1   DCL B$JIT$ PTR SYMREF;
     1003     3785    1   DCL M$ME DCB;
     1004     3786        %VD_BUFFER (NAME=VD_$CONTEXT, STCLASS=SYMREF, MXNB=%MXNB_FID);
     1005     3846
     1006     3847
     1007     3848        %FPT_TIME (STCLASS=STATIC, DEST=UTS);
     1008     3867        %FPT_GLINEATTR (STCLASS=CONSTANT, LINEATTR=VLP_LINEATTR);
     1009     3892
     1010     3893
     1011     3894    1   DCL SAVE_FID$ PTR;
     1012     3895    1   DCL 1 SAVE_FLAGS ALIGNED,
     1013     3896              %VD$PDFF (NAME=F, STCLASS=AUTO, LEV=2, LAST=YES);
     1014     3910    1   DCL SAVE_FILE_RECORD_NUMBER SBIN;
     1015     3911        %VD$ENCODED_FILE_SPEC (NAME=ENCODED_FILE_SPEC, STCLASS=AUTO);
     1016     3940        %VLP_LINEATTR (STCLASS=STATIC);
     1017     3962        %VD$FILE_NODE (NAME=HDR_FILE_NODE, STCLASS=AUTO);
     1018     4055        %VD$KEY (NAME=HDR_FILE_KEY, STCLASS=AUTO);
     1019     4069        %VD$LOCATION (NAME=HDR_LOCATION, STCLASS=AUTO);
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:151  
     1020     4097
     1021     4098        %VD$TEXTC (NAME=SAVE$FID, STCLASS="BASED(SAVE_FID$)");
     1022     4121        %VD$STREAM (NAME=EQUALS$STREAM, STCLASS="BASED(VD_6E.EQUALS$)");
     1023     4227        %VD$STREAM (NAME=LOCATIONS$STREAM, STCLASS="BASED(VD_6E.LOCATIONS$)");
     1024     4333        %VD$STREAM (NAME=STRUCTURES$STREAM, STCLASS="BASED(VD_6E.STRUCTURES$)");
     1025     4439        %VD$STREAM (NAME=WINDOWS$STREAM, STCLASS="BASED(VD_6E.WINDOWS$)");
     1026     4545        %VD$STREAM (NAME=KEYINS$STREAM, STCLASS="BASED(VD_6E.KEYINS$)");
     1027     4651        %VD$STREAM (NAME=SYNONYMS$STREAM, STCLASS="BASED(VD_6E.SYNONYMS$)");
     1028     4757        %VD$TEXTC_REMOTE;
     1029     4818        %EJECT;
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:152  
     1030     4819
     1031     4820                /*
     1032     4821                *  Determine what exactly the user wants us to save.
     1033     4822                */
     1034     4823
     1035     4824    1           SAVE_FLAGS = %CLEAR;

   4824  4 000002   200005 450100                    STZ     SAVE_FLAGS,,AUTO

     1036     4825    2           IF SAVE_CMD.FLAGS (%CF_SAVE_ALL) THEN DO;

   4825  4 000003   200003 470500                    LDP0    @SAVE_CMD,,AUTO
         4 000004   000005 234100                    SZN     5,,PR0
         4 000005   000020 605000 4                  TPL     s:4833

     1037     4826    2              SAVE_FLAGS.F (%PDFF_EQUALS) = %TRUE;

   4826  4 000006   200000 236003                    LDQ     65536,DU
         4 000007   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1038     4827    2              SAVE_FLAGS.F (%PDFF_KEYINS) = %TRUE;

   4827  4 000010   100000 236003                    LDQ     32768,DU
         4 000011   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1039     4828    2              SAVE_FLAGS.F (%PDFF_LOCATIONS) = %TRUE;

   4828  4 000012   040000 236003                    LDQ     16384,DU
         4 000013   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1040     4829    2              SAVE_FLAGS.F (%PDFF_SYNONYMS) = %TRUE;

   4829  4 000014   020000 236003                    LDQ     8192,DU
         4 000015   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1041     4830        /*N*       SAVE_FLAGS.F (%PDFF_STRUCTURES) = %TRUE; VD_6E points at 'em */
     1042     4831    2              SAVE_FLAGS.F (%PDFF_WINDOWS) = %TRUE;
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:153  

   4831  4 000016   004000 236003                    LDQ     2048,DU
         4 000017   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1043     4832    2              END;

     1044     4833    2           IF SAVE_CMD.FLAGS (%CF_SAVE_SETUP) THEN DO;

   4833  4 000020   000005 236100                    LDQ     5,,PR0
         4 000021   200000 316003                    CANQ    65536,DU
         4 000022   000031 600000 4                  TZE     s:4838

     1045     4834    2              SAVE_FLAGS.F (%PDFF_EQUALS) = %TRUE;

   4834  4 000023   200000 236003                    LDQ     65536,DU
         4 000024   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1046     4835    2              SAVE_FLAGS.F (%PDFF_KEYINS) = %TRUE;

   4835  4 000025   100000 236003                    LDQ     32768,DU
         4 000026   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1047     4836    2              SAVE_FLAGS.F (%PDFF_SYNONYMS) = %TRUE;

   4836  4 000027   020000 236003                    LDQ     8192,DU
         4 000030   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1048     4837    2              END;

     1049     4838    2           IF SAVE_CMD.FLAGS (%CF_SAVE_SESSION) THEN DO;

   4838  4 000031   000005 236100                    LDQ     5,,PR0
         4 000032   100000 316003                    CANQ    32768,DU
         4 000033   000040 600000 4                  TZE     s:4843

     1050     4839    2              SAVE_FLAGS.F (%PDFF_LOCATIONS) = %TRUE;

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:154  
   4839  4 000034   040000 236003                    LDQ     16384,DU
         4 000035   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1051     4840        /*N*       SAVE_FLAGS.F (%PDFF_STRUCTURES) = %TRUE; VD_6E points at 'em */
     1052     4841    2              SAVE_FLAGS.F (%PDFF_WINDOWS) = %TRUE;

   4841  4 000036   004000 236003                    LDQ     2048,DU
         4 000037   200005 256100                    ORSQ    SAVE_FLAGS,,AUTO

     1053     4842    2              END;

     1054     4843    2           IF B$JIT.MODE ~= %M_INT# THEN DO;

   4843  4 000040   000000 471400 xsym               LDP1    B$JIT$
         4 000041   100000 236100                    LDQ     0,,PR1
         4 000042   740000 376003                    ANQ     -16384,DU
         4 000043   140000 116003                    CMPQ    49152,DU
         4 000044   000047 600000 4                  TZE     s:4852

     1055     4844                   /* Can't do keyins if we're not running in timesharing mode */
     1056     4845    2              SAVE_FLAGS.F (%PDFF_KEYINS) = %FALSE;

   4845  4 000045   000000 236000 5                  LDQ     0
         4 000046   200005 356100                    ANSQ    SAVE_FLAGS,,AUTO

     1057     4846    2              END;

     1058     4847
     1059     4848                /*
     1060     4849                *   Open the file we're saving to.
     1061     4850                */
     1062     4851
     1063     4852    2           IF SAVE_CMD.PARAM$ (%CP_SAVE_FID) = ADDR(NIL) THEN DO;

   4852  4 000047   000006 236100                    LDQ     6,,PR0
         4 000050   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000051   000064 601000 4                  TNZ     s:4859
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:155  

     1064     4853                   /* Use fid of context file read at invocation */
     1065     4854    2              SAVE_FID$ = PINCRC(ADDR(VD_$CONTEXT.LENGTH#), 1);

   4854  4 000052   000001 236000 5                  LDQ     1
         4 000053   200004 756100                    STQ     SAVE_FID$,,AUTO

     1066     4855    2              CALL VDG$INFOMSG (%E$INFO_SAVING_OVER, VD_$CONTEXT.LENGTH#);

   4855  4 000054   000003 630400 5                  EPPR0   3
         4 000055   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000056   000000 701000 xent               TSX1    VDG$INFOMSG
         4 000057   000000 011000                    NOP     0

     1067     4856    2              CALL VDG$EREPORT_ERROR;

   4856  4 000060   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000061   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         4 000062   000000 011000                    NOP     0

     1068     4857    2              END;

   4857  4 000063   000067 710000 4                  TRA     s:4863

     1069     4858    2           ELSE DO;

     1070     4859    2              SAVE_FID$ = ADDR(SAVE_CMD.PARAM$ (%CP_SAVE_FID) ->

   4859  4 000064   000006 473500                    LDP3    6,,PR0
         4 000065   300002 634500                    EPPR4   2,,PR3
         4 000066   200004 454500                    STP4    SAVE_FID$,,AUTO

     1071     4860    2                VD$TEXTC_REMOTE.LENGTH#);
     1072     4861    2              END;

     1073     4862
     1074     4863    1           IF SAVE_CMD.FLAGS (%CF_SAVE_TO) THEN
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:156  

   4863  4 000067   200003 470500                    LDP0    @SAVE_CMD,,AUTO
         4 000070   000005 236100                    LDQ     5,,PR0
         4 000071   040000 316003                    CANQ    16384,DU
         4 000072   000100 600000 4                  TZE     s:4866

     1075     4864    1              FPT_OPEN_CONTEXT_FILE.V.EXIST# = %ERROR#;

   4864  4 000073   000106 236000 1                  LDQ     FPT_OPEN_CONTEXT_FILE+36
         4 000074   000005 376000 5                  ANQ     5
         4 000075   000200 276007                    ORQ     128,DL
         4 000076   000106 756000 1                  STQ     FPT_OPEN_CONTEXT_FILE+36
         4 000077   000102 710000 4                  TRA     s:4868

     1076     4865    1           ELSE
     1077     4866    1              FPT_OPEN_CONTEXT_FILE.V.EXIST# = %NEWFILE#;

   4866  4 000100   000600 236007                    LDQ     384,DL
         4 000101   000106 256000 1                  ORSQ    FPT_OPEN_CONTEXT_FILE+36

     1078     4867
     1079     4868    1           FPT_FID_CONTEXT_FILE.TEXTFID_ = VECTOR(SAVE$FID.BYTES);

   4868  4 000102   200004 471500                    LDP1    SAVE_FID$,,AUTO
         4 000103   100000 236100                    LDQ     0,,PR1
         4 000104   000033 772000                    QRL     27
         4 000105   000064 737000                    LLS     52
         4 000106   000140 135007                    SBLA    96,DL
         4 000107   200004 236100                    LDQ     SAVE_FID$,,AUTO
         4 000110   200000 036007                    ADLQ    65536,DL
         4 000111   000002 757000 1                  STAQ    FPT_FID_CONTEXT_FILE+2

     1080     4869    1           CALL M$FID (FPT_FID_CONTEXT_FILE) ALTRET (CONTEXT_FILE_FID_ERROR);

   4869  4 000112   000000 630400 1                  EPPR0   FPT_FID_CONTEXT_FILE
         4 000113   420001 713400                    CLIMB   alt,+8193
         4 000114   404400 401760                    pmme    nvectors=10
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:157  
         4 000115   000364 702000 4                  TSX2    CONTEXT_FILE_FID_ERROR

     1081     4870
     1082     4871    1           CALL VDG$OALLOC_DCB (FPT_OPEN_CONTEXT_FILE.V.DCB#)

   4871  4 000116   000006 630400 5                  EPPR0   6
         4 000117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000120   000000 701000 xent               TSX1    VDG$OALLOC_DCB
         4 000121   000123 702000 4                  TSX2    s:4872
         4 000122   000124 710000 4                  TRA     s:4874

     1083     4872    2           WHENALTRETURN DO; ALTRETURN; END;

   4872  4 000123   000000 702200 xent               TSX2  ! X66_AALT

     1084     4873
     1085     4874    1           FPT_CLOSE_CONTEXT_FILE.V.DCB# = FPT_OPEN_CONTEXT_FILE.V.DCB#;

   4874  4 000124   000106 220000 1                  LDX0    FPT_OPEN_CONTEXT_FILE+36
         4 000125   000210 740000 1                  STX0    FPT_CLOSE_CONTEXT_FILE+26

     1086     4875    1           CALL M$OPEN (FPT_OPEN_CONTEXT_FILE) ALTRET (CONTEXT_FILE_OPEN_ERROR);

   4875  4 000126   000042 630400 1                  EPPR0   FPT_OPEN_CONTEXT_FILE
         4 000127   450000 713400                    CLIMB   alt,open
         4 000130   410400 401760                    pmme    nvectors=18
         4 000131   000400 702000 4                  TSX2    CONTEXT_FILE_OPEN_ERROR

     1087     4876
     1088     4877                /*
     1089     4878                *   Build the header record, and write it to the SAVE-file.
     1090     4879                */
     1091     4880    1           SAVE_FILE_RECORD_NUMBER = 0;

   4880  4 000132   200006 450100                    STZ     SAVE_FILE_RECORD_NUMBER,,AUTO

     1092     4881
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:158  
     1093     4882    1           ENCODED_FILE_SPEC = %CLEAR;

   4882  4 000133   000100 100400                    MLR     fill='000'O
         4 000134   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000135   200007 000040                    ADSC9   ENCODED_FILE_SPEC,,AUTO  cn=0,n=32

     1094     4883    1           ENCODED_FILE_SPEC.CONTENTS = SAVE_FLAGS;

   4883  4 000136   200005 236100                    LDQ     SAVE_FLAGS,,AUTO
         4 000137   200007 552140                    STBQ    ENCODED_FILE_SPEC,'40'O,AUTO

     1095     4884
     1096     4885    1           FPT_TIME.TSTAMP_ = VECTOR(ENCODED_FILE_SPEC.LAST_MODIFIED.TIME#);

   4885  4 000140   777640 235007                    LDA     -96,DL
         4 000141   200050 452500                    STP2    HDR_LOCATION+10,,AUTO
         4 000142   200050 236100                    LDQ     HDR_LOCATION+10,,AUTO
         4 000143   000010 036003                    ADLQ    8,DU
         4 000144   000224 757000 1                  STAQ    FPT_TIME+8

     1097     4886    1           CALL M$TIME (FPT_TIME)

   4886  4 000145   000214 630400 1                  EPPR0   FPT_TIME
         4 000146   420004 713400                    CLIMB   alt,+8196
         4 000147   402000 401760                    pmme    nvectors=5
         4 000150   000370 702000 4                  TSX2    TIME_FAILED

     1098     4887    1             ALTRET (TIME_FAILED);
     1099     4888    1           ENCODED_FILE_SPEC.LAST_MODIFIED.USER_NAME = B$JIT.UNAME;

   4888  4 000151   000000 470400 xsym               LDP0    B$JIT$
         4 000152   040100 100500                    MLR     fill='040'O
         4 000153   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         4 000154   200011 000014                    ADSC9   ENCODED_FILE_SPEC+2,,AUTO cn=0,n=12

     1100     4889    1           IF B$JIT.MODE ~= %M_INT# THEN

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:159  
   4889  4 000155   000000 236100                    LDQ     0,,PR0
         4 000156   740000 376003                    ANQ     -16384,DU
         4 000157   140000 116003                    CMPQ    49152,DU
         4 000160   000165 600000 4                  TZE     s:4892

     1101     4890    1              VLP_LINEATTR = %CLEAR;

   4890  4 000161   000000 100400                    MLR     fill='000'O
         4 000162   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000163   000230 000100 1                  ADSC9   VLP_LINEATTR             cn=0,n=64
         4 000164   000171 710000 4                  TRA     s:4895

     1102     4891    2           ELSE DO;

     1103     4892    2              CALL M$GLINEATTR (FPT_GLINEATTR)

   4892  4 000165   000000 630400 3                  EPPR0   FPT_GLINEATTR
         4 000166   560005 713400                    CLIMB   alt,+57349
         4 000167   401000 401760                    pmme    nvectors=3
         4 000170   000370 702000 4                  TSX2    TIME_FAILED

     1104     4893    2                ALTRET (GLINEATTR_FAILED);
     1105     4894    2              END;

     1106     4895    1           ENCODED_FILE_SPEC.LAST_MODIFIED.PROFILE = VLP_LINEATTR.PROTXTC;

   4895  4 000171   000100 100400                    MLR     fill='000'O
         4 000172   000232 000014 1                  ADSC9   VLP_LINEATTR+2           cn=0,n=12
         4 000173   200014 000014                    ADSC9   ENCODED_FILE_SPEC+5,,AUTO cn=0,n=12

     1107     4896
     1108     4897    1           HDR_FILE_KEY = %CLEAR;

   4897  4 000174   000000 235003                    LDA     0,DU
         4 000175   000000 236003                    LDQ     0,DU
         4 000176   200034 757100                    STAQ    HDR_FILE_KEY,,AUTO

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:160  
     1109     4898    1           HDR_LOCATION = %CLEAR;

   4898  4 000177   000100 100400                    MLR     fill='000'O
         4 000200   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000201   200036 000044                    ADSC9   HDR_LOCATION,,AUTO       cn=0,n=36

     1110     4899    1           HDR_FILE_NODE = %CLEAR;

   4899  4 000202   000100 100400                    MLR     fill='000'O
         4 000203   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000204   200017 000064                    ADSC9   HDR_FILE_NODE,,AUTO      cn=0,n=52

     1111     4900    1           HDR_FILE_NODE.DESC.DATA$ = ADDR(NIL);

   4900  4 000205   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000206   200027 756100                    STQ     HDR_FILE_NODE+8,,AUTO

     1112     4901    1           HDR_FILE_NODE.DESC.SPEC.TYPE# = %SPT_ENCODED_FILE_SPEC;

   4901  4 000207   000010 220003                    LDX0    8,DU
         4 000210   200025 740100                    STX0    HDR_FILE_NODE+6,,AUTO

     1113     4902    1           HDR_FILE_NODE.DESC.SPEC.REP# = %REP_REMOTE;

   4902  4 000211   000002 221003                    LDX1    2,DU
         4 000212   200025 441100                    SXL1    HDR_FILE_NODE+6,,AUTO

     1114     4903    1           HDR_FILE_NODE.DESC.SPEC.V$ = ADDR(ENCODED_FILE_SPEC);

   4903  4 000213   200007 630500                    EPPR0   ENCODED_FILE_SPEC,,AUTO
         4 000214   200026 450500                    STP0    HDR_FILE_NODE+7,,AUTO

     1115     4904    1           CALL VDW$STOW_NODE (HDR_FILE_KEY, HDR_LOCATION, HDR_FILE_NODE,

   4904  4 000215   200006 631500                    EPPR1   SAVE_FILE_RECORD_NUMBER,,AUTO
         4 000216   200054 451500                    STP1    HDR_LOCATION+14,,AUTO
         4 000217   000006 236000 5                  LDQ     6
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:161  
         4 000220   200053 756100                    STQ     HDR_LOCATION+13,,AUTO
         4 000221   200017 633500                    EPPR3   HDR_FILE_NODE,,AUTO
         4 000222   200052 453500                    STP3    HDR_LOCATION+12,,AUTO
         4 000223   200036 634500                    EPPR4   HDR_LOCATION,,AUTO
         4 000224   200051 454500                    STP4    HDR_LOCATION+11,,AUTO
         4 000225   200034 635500                    EPPR5   HDR_FILE_KEY,,AUTO
         4 000226   200050 455500                    STP5    HDR_LOCATION+10,,AUTO
         4 000227   200050 630500                    EPPR0   HDR_LOCATION+10,,AUTO
         4 000230   000023 631400 xsym               EPPR1   B_VECTNIL+19
         4 000231   000000 701000 xent               TSX1    VDW$STOW_NODE
         4 000232   000373 702000 4                  TSX2    STOW_NODE_FAILED

     1116     4905    1             FPT_OPEN_CONTEXT_FILE.V.DCB#, SAVE_FILE_RECORD_NUMBER)
     1117     4906    1             ALTRET (STOW_NODE_FAILED);
     1118     4907
     1119     4908                /*
     1120     4909                *  Now, save the files the user wants to save, in the order WE want
     1121     4910                *    to save them in.
     1122     4911                */
     1123     4912
     1124     4913    2           IF SAVE_FLAGS.F (%PDFF_EQUALS) THEN DO;

   4913  4 000233   200005 236100                    LDQ     SAVE_FLAGS,,AUTO
         4 000234   200000 316003                    CANQ    65536,DU
         4 000235   000250 600000 4                  TZE     s:4919

     1125     4914    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,

   4914  4 000236   000001 236000 xsym               LDQ     VD_6E+1
         4 000237   200052 756100                    STQ     HDR_LOCATION+12,,AUTO
         4 000240   200006 630500                    EPPR0   SAVE_FILE_RECORD_NUMBER,,AUTO
         4 000241   200051 450500                    STP0    HDR_LOCATION+11,,AUTO
         4 000242   000006 236000 5                  LDQ     6
         4 000243   200050 756100                    STQ     HDR_LOCATION+10,,AUTO
         4 000244   200050 630500                    EPPR0   HDR_LOCATION+10,,AUTO
         4 000245   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000246   000000 701000 xent               TSX1    VDW$SAVE
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:162  
         4 000247   000373 702000 4                  TSX2    STOW_NODE_FAILED

     1126     4915    2                SAVE_FILE_RECORD_NUMBER, EQUALS$STREAM)
     1127     4916    2                ALTRET (W$SAVE_FAILED);
     1128     4917    2              END;

     1129     4918
     1130     4919    2           IF SAVE_FLAGS.F (%PDFF_LOCATIONS) THEN DO;

   4919  4 000250   200005 236100                    LDQ     SAVE_FLAGS,,AUTO
         4 000251   040000 316003                    CANQ    16384,DU
         4 000252   000265 600000 4                  TZE     s:4925

     1131     4920    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,

   4920  4 000253   000002 236000 xsym               LDQ     VD_6E+2
         4 000254   200052 756100                    STQ     HDR_LOCATION+12,,AUTO
         4 000255   200006 630500                    EPPR0   SAVE_FILE_RECORD_NUMBER,,AUTO
         4 000256   200051 450500                    STP0    HDR_LOCATION+11,,AUTO
         4 000257   000006 236000 5                  LDQ     6
         4 000260   200050 756100                    STQ     HDR_LOCATION+10,,AUTO
         4 000261   200050 630500                    EPPR0   HDR_LOCATION+10,,AUTO
         4 000262   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000263   000000 701000 xent               TSX1    VDW$SAVE
         4 000264   000373 702000 4                  TSX2    STOW_NODE_FAILED

     1132     4921    2                SAVE_FILE_RECORD_NUMBER, LOCATIONS$STREAM)
     1133     4922    2                ALTRET (W$SAVE_FAILED);
     1134     4923    2              END;

     1135     4924
     1136     4925    2           IF SAVE_FLAGS.F (%PDFF_STRUCTURES) THEN DO;

   4925  4 000265   200005 236100                    LDQ     SAVE_FLAGS,,AUTO
         4 000266   010000 316003                    CANQ    4096,DU
         4 000267   000302 600000 4                  TZE     s:4931

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:163  
     1137     4926    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,

   4926  4 000270   000005 236000 xsym               LDQ     VD_6E+5
         4 000271   200052 756100                    STQ     HDR_LOCATION+12,,AUTO
         4 000272   200006 630500                    EPPR0   SAVE_FILE_RECORD_NUMBER,,AUTO
         4 000273   200051 450500                    STP0    HDR_LOCATION+11,,AUTO
         4 000274   000006 236000 5                  LDQ     6
         4 000275   200050 756100                    STQ     HDR_LOCATION+10,,AUTO
         4 000276   200050 630500                    EPPR0   HDR_LOCATION+10,,AUTO
         4 000277   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000300   000000 701000 xent               TSX1    VDW$SAVE
         4 000301   000373 702000 4                  TSX2    STOW_NODE_FAILED

     1138     4927    2                SAVE_FILE_RECORD_NUMBER, STRUCTURES$STREAM)
     1139     4928    2                ALTRET (W$SAVE_FAILED);
     1140     4929    2              END;

     1141     4930
     1142     4931    2           IF SAVE_FLAGS.F (%PDFF_WINDOWS) THEN DO;

   4931  4 000302   200005 236100                    LDQ     SAVE_FLAGS,,AUTO
         4 000303   004000 316003                    CANQ    2048,DU
         4 000304   000317 600000 4                  TZE     s:4937

     1143     4932    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,

   4932  4 000305   000006 236000 xsym               LDQ     VD_6E+6
         4 000306   200052 756100                    STQ     HDR_LOCATION+12,,AUTO
         4 000307   200006 630500                    EPPR0   SAVE_FILE_RECORD_NUMBER,,AUTO
         4 000310   200051 450500                    STP0    HDR_LOCATION+11,,AUTO
         4 000311   000006 236000 5                  LDQ     6
         4 000312   200050 756100                    STQ     HDR_LOCATION+10,,AUTO
         4 000313   200050 630500                    EPPR0   HDR_LOCATION+10,,AUTO
         4 000314   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000315   000000 701000 xent               TSX1    VDW$SAVE
         4 000316   000373 702000 4                  TSX2    STOW_NODE_FAILED

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:164  
     1144     4933    2                SAVE_FILE_RECORD_NUMBER, WINDOWS$STREAM)
     1145     4934    2                ALTRET (W$SAVE_FAILED);
     1146     4935    2              END;

     1147     4936
     1148     4937    2           IF SAVE_FLAGS.F (%PDFF_KEYINS) THEN DO;

   4937  4 000317   200005 236100                    LDQ     SAVE_FLAGS,,AUTO
         4 000320   100000 316003                    CANQ    32768,DU
         4 000321   000334 600000 4                  TZE     s:4943

     1149     4938    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,

   4938  4 000322   000004 236000 xsym               LDQ     VD_6E+4
         4 000323   200052 756100                    STQ     HDR_LOCATION+12,,AUTO
         4 000324   200006 630500                    EPPR0   SAVE_FILE_RECORD_NUMBER,,AUTO
         4 000325   200051 450500                    STP0    HDR_LOCATION+11,,AUTO
         4 000326   000006 236000 5                  LDQ     6
         4 000327   200050 756100                    STQ     HDR_LOCATION+10,,AUTO
         4 000330   200050 630500                    EPPR0   HDR_LOCATION+10,,AUTO
         4 000331   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000332   000000 701000 xent               TSX1    VDW$SAVE
         4 000333   000373 702000 4                  TSX2    STOW_NODE_FAILED

     1150     4939    2                SAVE_FILE_RECORD_NUMBER, KEYINS$STREAM)
     1151     4940    2                ALTRET (W$SAVE_FAILED);
     1152     4941    2              END;

     1153     4942
     1154     4943    2           IF SAVE_FLAGS.F (%PDFF_SYNONYMS) THEN DO;

   4943  4 000334   200005 236100                    LDQ     SAVE_FLAGS,,AUTO
         4 000335   020000 316003                    CANQ    8192,DU
         4 000336   000351 600000 4                  TZE     s:4949

     1155     4944    2              CALL VDW$SAVE (FPT_OPEN_CONTEXT_FILE.V.DCB#,

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:165  
   4944  4 000337   000003 236000 xsym               LDQ     VD_6E+3
         4 000340   200052 756100                    STQ     HDR_LOCATION+12,,AUTO
         4 000341   200006 630500                    EPPR0   SAVE_FILE_RECORD_NUMBER,,AUTO
         4 000342   200051 450500                    STP0    HDR_LOCATION+11,,AUTO
         4 000343   000006 236000 5                  LDQ     6
         4 000344   200050 756100                    STQ     HDR_LOCATION+10,,AUTO
         4 000345   200050 630500                    EPPR0   HDR_LOCATION+10,,AUTO
         4 000346   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000347   000000 701000 xent               TSX1    VDW$SAVE
         4 000350   000373 702000 4                  TSX2    STOW_NODE_FAILED

     1156     4945    2                SAVE_FILE_RECORD_NUMBER, SYNONYMS$STREAM)
     1157     4946    2                ALTRET (W$SAVE_FAILED);
     1158     4947    2              END;

     1159     4948
     1160     4949    1           CALL M$CLOSE (FPT_CLOSE_CONTEXT_FILE) ALTRET (CONTEXT_FILE_CLOSE_ERROR);

   4949  4 000351   000156 630400 1                  EPPR0   FPT_CLOSE_CONTEXT_FILE
         4 000352   450001 713400                    CLIMB   alt,close
         4 000353   406000 401760                    pmme    nvectors=13
         4 000354   000400 702000 4                  TSX2    CONTEXT_FILE_OPEN_ERROR

     1161     4950
     1162     4951    1           CALL VDG$OFREE_DCB (FPT_CLOSE_CONTEXT_FILE.V.DCB#)

   4951  4 000355   000007 630400 5                  EPPR0   7
         4 000356   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000357   000000 701000 xent               TSX1    VDG$OFREE_DCB
         4 000360   000362 702000 4                  TSX2    s:4952
         4 000361   000363 710000 4                  TRA     s:4954

     1163     4952    2           WHENALTRETURN DO; ALTRETURN; END;

   4952  4 000362   000000 702200 xent               TSX2  ! X66_AALT

     1164     4953
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:166  
     1165     4954    1           RETURN;

   4954  4 000363   000000 702200 xent               TSX2  ! X66_ARET

     1166     4955
     1167     4956
     1168     4957
     1169     4958    1   CONTEXT_FILE_FID_ERROR:
     1170     4959    1           CALL VDG$MONERR;

   4959  4 000364   000002 631400 xsym  CONTEXT_FIL* EPPR1   B_VECTNIL+2
         4 000365   000000 701000 xent               TSX1    VDG$MONERR
         4 000366   000000 011000                    NOP     0

     1171     4960    1           ALTRETURN;

   4960  4 000367   000000 702200 xent               TSX2  ! X66_AALT

   4952  4 000370                       TIME_FAILED  null
   4952  4 000370                       GLINEATTR_F* null
     1172     4961
     1173     4962
     1174     4963    1   TIME_FAILED: ;
     1175     4964    1   GLINEATTR_FAILED: ;
     1176     4965    1           CALL VDG$MONERR;

   4965  4 000370   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000371   000000 701000 xent               TSX1    VDG$MONERR
         4 000372   000000 011000                    NOP     0

   4952  4 000373                       STOW_NODE_F* null
   4952  4 000373                       W$SAVE_FAIL* null
     1177     4966        /*      GOTO CLOSE_CONTEXT_FILE_AND_ALTRET; */
     1178     4967
     1179     4968
     1180     4969    1   STOW_NODE_FAILED: ;
     1181     4970    1   W$SAVE_FAILED: ;
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:167  
     1182     4971    1   CLOSE_CONTEXT_FILE_AND_ALTRET:
     1183     4972    1           CALL M$CLOSE (FPT_CLOSE_CONTEXT_FILE)

   4972  4 000373   000156 630400 1     CLOSE_CONTE* EPPR0   FPT_CLOSE_CONTEXT_FILE
         4 000374   450001 713400                    CLIMB   alt,close
         4 000375   406000 401760                    pmme    nvectors=13
         4 000376   000400 702000 4                  TSX2    CONTEXT_FILE_OPEN_ERROR

     1184     4973    1             ALTRET (CONTEXT_FILE_CLOSE_ERROR);
     1185     4974    1           GOTO FREE_DCB_AND_ALTRET;

   4974  4 000377   000403 710000 4                  TRA     FREE_DCB_AND_ALTRET

   4952  4 000400                       CONTEXT_FIL* null
   4952  4 000400                       CONTEXT_FIL* null
     1186     4975
     1187     4976
     1188     4977    1   CONTEXT_FILE_OPEN_ERROR: ;
     1189     4978    1   CONTEXT_FILE_CLOSE_ERROR: ;
     1190     4979    1           CALL VDG$MONERR;

   4979  4 000400   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000401   000000 701000 xent               TSX1    VDG$MONERR
         4 000402   000000 011000                    NOP     0

   4979  4 000403                       FREE_DCB_AN* null
     1191     4980    1   FREE_DCB_AND_ALTRET: ;
     1192     4981                /*    !!!!!!!!!!!!!!!!!   CAUTION   !!!!!!!!!!!!!!!!!!!
     1193     4982                *  We really shouldn't free the DCB at this point, because the
     1194     4983                *   error message refers to it; we should wait til after the error
     1195     4984                *   message is reported.  However, since we're altreturning, we assume
     1196     4985                *   we won't allocate any more DCBs til after the error message is
     1197     4986                *   reported.  So we fudge a little.
     1198     4987                */
     1199     4988    1           CALL VDG$OFREE_DCB (FPT_OPEN_CONTEXT_FILE.V.DCB#);  /* Ignore altret */

   4988  4 000403   000006 630400 5                  EPPR0   6
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:168  
         4 000404   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000405   000000 701000 xent               TSX1    VDG$OFREE_DCB
         4 000406   000000 011000                    NOP     0

     1200     4989    1           ALTRETURN;

   4989  4 000407   000000 702200 xent               TSX2  ! X66_AALT
     1201     4990
     1202     4991    1   END VDI$CSAVE;
     1203     4992        %EOD;

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:169  
--  Include file information  --

   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDI$CSAVE.
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:170  

 **** Variables and constants ****

  ****  Section 001  Data  VDI$CSAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   156-0-0/d STRC(1080)  r     1 FPT_CLOSE_CONTEXT_FILE
     0-0-0/d STRC(864)   r     1 FPT_FID_CONTEXT_FILE
    42-0-0/d STRC(2088)  r     1 FPT_OPEN_CONTEXT_FILE
   214-0-0/d STRC(432)   r     1 FPT_TIME
   134-0-0/c STRC(72)    r     1 VLP_ACCT_CONTEXT_FILE
   230-0-0/d STRC(576)   r     1 VLP_LINEATTR
   136-0-0/c STRC(288)   r     1 VLP_NAME_CONTEXT_FILE
   146-0-0/c STRC(72)    r     1 VLP_PASS_CONTEXT_FILE
   150-0-0/d STRC(90)    r     1 VLP_SN_CONTEXT_FILE      154-0-0/c STRC(72)    r     1 VLP_WSN_CONTEXT_FILE
    30-0-0/d STRC(324)   r     1 VLR_FID_CONTEXT_FILE

  ****  Section 003 RoData VDI$CSAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)   r     1 FPT_GLINEATTR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SAVE_CMD                  7-0-0/w STRC(288)   r     1 ENCODED_FILE_SPEC
    34-0-0/w STRC(72)    r     1 HDR_FILE_KEY              17-0-0/w STRC(468)   r     1 HDR_FILE_NODE
    36-0-0/w STRC(324)   r     1 HDR_LOCATION              *0-0-0/w STRC(540)   r     1 SAVE_CMD
     4-0-0/w PTR         r     1 SAVE_FID$
     6-0-0/w SBIN        r     1 SAVE_FILE_RECORD_NUMBER
     5-0-0/w STRC(9)     r     1 SAVE_FLAGS

PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:171  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w ASTR(90)    r     1 VD_$CONTEXT
     0-0-0/w STRC(22644) r     1 VD_6E

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(864)   r     1 EQUALS$STREAM
     0-0-0/w STRC(864)   r     1 KEYINS$STREAM              0-0-0/w STRC(864)   r     1 LOCATIONS$STREAM
     0-0-0N  NULL        r     1 M$UC                       0-0-0/w ASTR(9)     r     1 SAVE$FID
     0-0-0/w STRC(864)   r     1 STRUCTURES$STREAM          0-0-0/w STRC(864)   r     1 SYNONYMS$STREAM
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE            0-0-0/w STRC(864)   r     1 WINDOWS$STREAM


   Procedure VDI$CSAVE requires 264 words for executable code.
   Procedure VDI$CSAVE requires 46 words of local(AUTO) storage.
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:172  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:173  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      3225**DCL      3225--REDEF
B$JIT.ERR.MID
      3132**DCL      3132--REDEF
B$JIT.JRESPEAK
      3293**DCL      3294--REDEF
B$JIT.MODE
      3126**DCL      4843>>IF       4889>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      3402**DCL      3402--REDEF    3403--REDEF
B$JIT.PNR
      3306**DCL      3306--REDEF
B$JIT.TSLINE
      3400**DCL      3401--REDEF
B$JIT.UNAME
      3131**DCL      4888>>ASSIGN
B$JIT$
      3784**DCL      3126--IMP-PTR  4843>>IF       4888>>ASSIGN   4889>>IF
CONTEXT_FILE_CLOSE_ERROR
      4952**LABEL    4949--CALLALT  4972--CALLALT
CONTEXT_FILE_FID_ERROR
      4959**LABEL    4869--CALLALT
CONTEXT_FILE_OPEN_ERROR
      4952**LABEL    4875--CALLALT
ENCODED_FILE_SPEC
      3919**DCL      4882<<ASSIGN   4903--ASSIGN
ENCODED_FILE_SPEC.CONTENTS
      3934**DCL      4883<<ASSIGN
ENCODED_FILE_SPEC.LAST_MODIFIED.PROFILE
      3937**DCL      4895<<ASSIGN
ENCODED_FILE_SPEC.LAST_MODIFIED.TIME#
      3937**DCL      4885--ASSIGN
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:174  
ENCODED_FILE_SPEC.LAST_MODIFIED.USER_NAME
      3937**DCL      4888<<ASSIGN
EQUALS$STREAM
      4129**DCL      4914<>CALL
FPT_CLOSE_CONTEXT_FILE
      3679**DCL      4949<>CALL     4972<>CALL
FPT_CLOSE_CONTEXT_FILE.SN_
      3679**DCL      3679--REDEF
FPT_CLOSE_CONTEXT_FILE.UTL_
      3680**DCL      3680--REDEF
FPT_CLOSE_CONTEXT_FILE.V
      3684**DCL      3679--DCLINIT
FPT_CLOSE_CONTEXT_FILE.V.DCB#
      3685**DCL      4874<<ASSIGN   4951<>CALL
FPT_CLOSE_CONTEXT_FILE.V.EXPIRE#
      3694**DCL      3694--REDEF
FPT_CLOSE_CONTEXT_FILE.V.TYPE#
      3692**DCL      3692--REDEF
FPT_CLOSE_CONTEXT_FILE.V.XTNSIZE#
      3689**DCL      3689--REDEF    3691--REDEF
FPT_FID_CONTEXT_FILE
      3427**DCL      4869<>CALL
FPT_FID_CONTEXT_FILE.TEXTFID_
      3427**DCL      4868<<ASSIGN
FPT_FID_CONTEXT_FILE.V
      3431**DCL      3427--DCLINIT
FPT_GLINEATTR
      3882**DCL      4892<>CALL
FPT_GLINEATTR.V
      3890**DCL      3884--DCLINIT
FPT_OPEN_CONTEXT_FILE
      3532**DCL      4875<>CALL
FPT_OPEN_CONTEXT_FILE.ACSVEH_
      3534**DCL      3535--REDEF
FPT_OPEN_CONTEXT_FILE.ALTKEYS_
      3540**DCL      3541--REDEF    3541--REDEF
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:175  
FPT_OPEN_CONTEXT_FILE.HDR_
      3539**DCL      3540--REDEF
FPT_OPEN_CONTEXT_FILE.TAB_
      3538**DCL      3539--REDEF
FPT_OPEN_CONTEXT_FILE.UHL_
      3532**DCL      3533--REDEF    3533--REDEF
FPT_OPEN_CONTEXT_FILE.V
      3541**DCL      3532--DCLINIT
FPT_OPEN_CONTEXT_FILE.V.ASN#
      3551**DCL      3430--DCLINIT
FPT_OPEN_CONTEXT_FILE.V.DCB#
      3541**DCL      4871<>CALL     4874>>ASSIGN   4904<>CALL     4914<>CALL     4920<>CALL     4926<>CALL
      4932<>CALL     4938<>CALL     4944<>CALL     4988<>CALL
FPT_OPEN_CONTEXT_FILE.V.EXIST#
      3545**DCL      4864<<ASSIGN   4866<<ASSIGN
FPT_OPEN_CONTEXT_FILE.V.FSN#
      3572**DCL      3572--REDEF    3572--REDEF
FPT_OPEN_CONTEXT_FILE.V.RES#
      3556**DCL      3430--DCLINIT
FPT_OPEN_CONTEXT_FILE.WSN_
      3538**DCL      3538--REDEF
FPT_TIME
      3859**DCL      4886<>CALL
FPT_TIME.TSTAMP_
      3862**DCL      4885<<ASSIGN
FPT_TIME.V
      3863**DCL      3859--DCLINIT
FREE_DCB_AND_ALTRET
      4979**LABEL    4974--GOTO
GLINEATTR_FAILED
      4952**LABEL    4892--CALLALT
HDR_FILE_KEY
      4063**DCL      4897<<ASSIGN   4904<>CALL
HDR_FILE_NODE
      3970**DCL      4899<<ASSIGN   4904<>CALL
HDR_FILE_NODE.DESC.DATA$
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:176  
      4051**DCL      4900<<ASSIGN
HDR_FILE_NODE.DESC.SPEC.REP#
      4049**DCL      4902<<ASSIGN
HDR_FILE_NODE.DESC.SPEC.TYPE#
      4049**DCL      4901<<ASSIGN
HDR_FILE_NODE.DESC.SPEC.V$
      4049**DCL      4903<<ASSIGN
HDR_LOCATION
      4077**DCL      4898<<ASSIGN   4904<>CALL
KEYINS$STREAM
      4553**DCL      4938<>CALL
LOCATIONS$STREAM
      4235**DCL      4920<>CALL
M$CLOSE
        50**DCL-ENT  4949--CALL     4972--CALL
M$FID
       113**DCL-ENT  4869--CALL
M$GLINEATTR
        75**DCL-ENT  4892--CALL
M$OPEN
        50**DCL-ENT  4875--CALL
M$TIME
       117**DCL-ENT  4886--CALL
SAVE$FID.BYTES
      4116**DCL      4868--ASSIGN
SAVE$FID.LENGTH#
      4114**DCL      4116--IMP-SIZ  4868>>ASSIGN
SAVE_CMD
      3707**DCL        39--PROC
SAVE_CMD.FLAGS
      3734**DCL      4825>>IF       4833>>IF       4838>>IF       4863>>IF
SAVE_CMD.PARAM$
      3734**DCL      4852>>IF       4859>>ASSIGN
SAVE_FID$
      3894**DCL      4106--IMP-PTR  4854<<ASSIGN   4859<<ASSIGN   4868>>ASSIGN   4868>>ASSIGN
SAVE_FILE_RECORD_NUMBER
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:177  
      3910**DCL      4880<<ASSIGN   4904<>CALL     4914<>CALL     4920<>CALL     4926<>CALL     4932<>CALL
      4938<>CALL     4944<>CALL
SAVE_FLAGS
      3895**DCL      4824<<ASSIGN   4883>>ASSIGN
SAVE_FLAGS.F
      3907**DCL      4826<<ASSIGN   4827<<ASSIGN   4828<<ASSIGN   4829<<ASSIGN   4831<<ASSIGN   4834<<ASSIGN
      4835<<ASSIGN   4836<<ASSIGN   4839<<ASSIGN   4841<<ASSIGN   4845<<ASSIGN   4913>>IF       4919>>IF
      4925>>IF       4931>>IF       4937>>IF       4943>>IF
STOW_NODE_FAILED
      4952**LABEL    4904--CALLALT
STRUCTURES$STREAM
      4341**DCL      4926<>CALL
SYNONYMS$STREAM
      4659**DCL      4944<>CALL
TIME_FAILED
      4952**LABEL    4886--CALLALT
VD$TEXTC_REMOTE.LENGTH#
      4811**DCL      4813--IMP-SIZ  4859--ASSIGN
VDG$EREPORT_ERROR
      3738**DCL-ENT  4856--CALL
VDG$INFOMSG
      3739**DCL-ENT  4855--CALL
VDG$MONERR
      3740**DCL-ENT  4959--CALL     4965--CALL     4979--CALL
VDG$OALLOC_DCB
      3743**DCL-ENT  4871--CALL
VDG$OFREE_DCB
      3744**DCL-ENT  4951--CALL     4988--CALL
VDW$SAVE
      3745**DCL-ENT  4914--CALL     4920--CALL     4926--CALL     4932--CALL     4938--CALL     4944--CALL
VDW$STOW_NODE
      3746**DCL-ENT  4904--CALL
VD_$CONTEXT.LENGTH#
      3838**DCL      3840--IMP-SIZ  4854--ASSIGN   4855<>CALL
VD_6E.EQUALS$
      3761**DCL      4129--IMP-PTR  4914>>CALL
PL6.E3A0      #007=VDI$CSAVE File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:178  
VD_6E.KEYINS$
      3761**DCL      4553--IMP-PTR  4938>>CALL
VD_6E.LOCATIONS$
      3761**DCL      4235--IMP-PTR  4920>>CALL
VD_6E.STRUCTURES$
      3761**DCL      4341--IMP-PTR  4926>>CALL
VD_6E.SYNONYMS$
      3761**DCL      4659--IMP-PTR  4944>>CALL
VD_6E.WINDOWS$
      3762**DCL      4447--IMP-PTR  4932>>CALL
VLP_ACCT_CONTEXT_FILE
      3587**DCL      3428--DCLINIT  3537--DCLINIT
VLP_LINEATTR
      3956**DCL      3888--DCLINIT  4890<<ASSIGN
VLP_LINEATTR.PROFILE#
      3958**DCL      3958--REDEF
VLP_LINEATTR.PROTXTC
      3958**DCL      4895>>ASSIGN
VLP_NAME_CONTEXT_FILE
      3614**DCL      3428--DCLINIT  3533--DCLINIT
VLP_PASS_CONTEXT_FILE
      3627**DCL      3429--DCLINIT  3534--DCLINIT
VLP_SN_CONTEXT_FILE
      3640**DCL      3429--DCLINIT  3532--DCLINIT
VLP_WSN_CONTEXT_FILE
      3653**DCL      3429--DCLINIT  3538--DCLINIT
VLR_FID_CONTEXT_FILE
      3450**DCL      3431--DCLINIT
W$SAVE_FAILED
      4952**LABEL    4914--CALLALT  4920--CALLALT  4926--CALLALT  4932--CALLALT  4938--CALLALT  4944--CALLALT
WINDOWS$STREAM
      4447**DCL      4932<>CALL

PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:179  
     1204        1        /*T***********************************************************/
     1205        2        /*T*                                                         */
     1206        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1207        4        /*T*                                                         */
     1208        5        /*T***********************************************************/
     1209        6
     1210        7        /*D* NAME: VDI$CSHOW
     1211        8            PARAMETERS:
     1212        9                None.
     1213       10            OUTPUT:
     1214       11                Formatted display of the source operand.
     1215       12            EXT. INPUT:
     1216       13                VD_6E.SOURCE.OPERAND - The selected operand.
     1217       14        */
     1218       15
     1219       16        VDI$CSHOW: PROC ALTRET;
     1220       17
     1221       18
     1222       19        %INCLUDE VD_MACROS_M;
     1223     2234        %INCLUDE VD_PERR_C;
     1224     2382
     1225     2383    1   DCL VDA$FCLOSE        ENTRY (1) ALTRET;
     1226     2384    1   DCL VDA$FOPEN         ENTRY (4) ALTRET;
     1227     2385    1   DCL VDE$IRANGE        ENTRY (2) ALTRET;
     1228     2386    1   DCL VDG$EREPORT_ERROR ENTRY (1);
     1229     2387    1   DCL VDG$INFOMSG       ENTRY (4) ALTRET;
     1230     2388    1   DCL VDP$WWRITE        ENTRY (1) ALTRET;
     1231     2389
     1232     2390        %VD_6E (STCLASS=SYMREF);
     1233     2426
     1234     2427    1   DCL FOUND             BIT(1);
     1235     2428    1   DCL EVER_FOUND        BIT(1);
     1236     2429
     1237     2430                %VD$BLOCK_DESC
     1238     2431                  (NAME=SRC$BLK, STCLASS="BASED(VD_6E.SOURCE.OPERAND.EDIT_BLOCK$)");
     1239     2578        %VD$STREAM (NAME=SRC$STRM, STCLASS="BASED(VD_6E.SOURCE.OPERAND.STREAM$)");
     1240     2684
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:180  
     1241     2685    1           EVER_FOUND = %FALSE;
     1242     2686
     1243     2687    1           SRC$BLK.OPTIONS.PROTECT# = %PROTECT;
     1244     2688    1           CALL VDA$FOPEN (SRC$STRM, SRC$BLK.FILE_KEY, 0, SRC$BLK.OPTIONS)
     1245     2689    1             ALTRET (FOPEN_FAILED);
     1246     2690
     1247     2691    2           DO WHILE '1'B;
     1248     2692    2              CALL VDE$IRANGE (VD_6E.SOURCE.OPERAND, FOUND)
     1249     2693    2                ALTRET (IRANGE_FAILED);
     1250     2694    3              IF FOUND THEN DO;
     1251     2695    3                 CALL VDP$WWRITE (VD_6E.SOURCE.OPERAND) ALTRET (WWRITE_FAILED);
     1252     2696    3                 EVER_FOUND = %TRUE;
     1253     2697    3                 END;
     1254     2698    2              ELSE EXIT;
     1255     2699    2              END;
     1256     2700
     1257     2701    2           IF NOT EVER_FOUND THEN DO;
     1258     2702    2              CALL VDG$INFOMSG (%E$INFO_NONE);
     1259     2703    2              CALL VDG$EREPORT_ERROR;
     1260     2704    2              END;
     1261     2705
     1262     2706    1           CALL VDA$FCLOSE (SRC$STRM);
     1263     2707    1           RETURN;
     1264     2708
     1265     2709    1   FOPEN_FAILED:;
     1266     2710    1   IRANGE_FAILED:;
     1267     2711    1   WWRITE_FAILED:;
     1268     2712    1           ALTRETURN;
     1269     2713
     1270     2714    1   END VDI$CSHOW;
     1271     2715        %EOD;

PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:181  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CSHOW.

   Procedure VDI$CSHOW requires 50 words for executable code.
   Procedure VDI$CSHOW requires 10 words of local(AUTO) storage.

PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:182  

 Object Unit name= VDI$CSHOW                                  File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:32:33.48 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    50     62  VDI$CSHOW
    1  RoData even  none     3      3  VDI$CSHOW

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  VDI$CSHOW

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 VDA$FOPEN
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       2 VDE$IRANGE
 yes     yes           Std       1 VDP$WWRITE
 yes     yes           Std       1 VDA$FCLOSE
 yes     yes           Std       4 VDG$INFOMSG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:183  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:184  


     1204        1        /*T***********************************************************/
     1205        2        /*T*                                                         */
     1206        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1207        4        /*T*                                                         */
     1208        5        /*T***********************************************************/
     1209        6
     1210        7        /*D* NAME: VDI$CSHOW
     1211        8            PARAMETERS:
     1212        9                None.
     1213       10            OUTPUT:
     1214       11                Formatted display of the source operand.
     1215       12            EXT. INPUT:
     1216       13                VD_6E.SOURCE.OPERAND - The selected operand.
     1217       14        */
     1218       15
     1219       16        VDI$CSHOW: PROC ALTRET;

     16  0 000000   000000 700200 xent  VDI$CSHOW    TSX0  ! X66_AUTO_0
         0 000001   000012 000000                    ZERO    10,0

     1220       17
     1221       18
     1222       19        %INCLUDE VD_MACROS_M;
     1223     2234        %INCLUDE VD_PERR_C;
     1224     2382
     1225     2383    1   DCL VDA$FCLOSE        ENTRY (1) ALTRET;
     1226     2384    1   DCL VDA$FOPEN         ENTRY (4) ALTRET;
     1227     2385    1   DCL VDE$IRANGE        ENTRY (2) ALTRET;
     1228     2386    1   DCL VDG$EREPORT_ERROR ENTRY (1);
     1229     2387    1   DCL VDG$INFOMSG       ENTRY (4) ALTRET;
     1230     2388    1   DCL VDP$WWRITE        ENTRY (1) ALTRET;
     1231     2389
     1232     2390        %VD_6E (STCLASS=SYMREF);
     1233     2426
     1234     2427    1   DCL FOUND             BIT(1);
     1235     2428    1   DCL EVER_FOUND        BIT(1);
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:185  
     1236     2429
     1237     2430                %VD$BLOCK_DESC
     1238     2431                  (NAME=SRC$BLK, STCLASS="BASED(VD_6E.SOURCE.OPERAND.EDIT_BLOCK$)");
     1239     2578        %VD$STREAM (NAME=SRC$STRM, STCLASS="BASED(VD_6E.SOURCE.OPERAND.STREAM$)");
     1240     2684
     1241     2685    1           EVER_FOUND = %FALSE;

   2685  0 000002   200004 450100                    STZ     EVER_FOUND,,AUTO

     1242     2686
     1243     2687    1           SRC$BLK.OPTIONS.PROTECT# = %PROTECT;

   2687  0 000003   000001 220003                    LDX0    1,DU
         0 000004   000022 470400 xsym               LDP0    VD_6E+18
         0 000005   000027 740100                    STX0    23,,PR0

     1244     2688    1           CALL VDA$FOPEN (SRC$STRM, SRC$BLK.FILE_KEY, 0, SRC$BLK.OPTIONS)

   2688  0 000006   000022 236000 xsym               LDQ     VD_6E+18
         0 000007   000025 036003                    ADLQ    21,DU
         0 000010   000000 235000 1                  LDA     0
         0 000011   200010 757100                    STAQ    EVER_FOUND+4,,AUTO
         0 000012   000022 236000 xsym               LDQ     VD_6E+18
         0 000013   000001 036003                    ADLQ    1,DU
         0 000014   000020 235000 xsym               LDA     VD_6E+16
         0 000015   200006 757100                    STAQ    EVER_FOUND+2,,AUTO
         0 000016   200006 630500                    EPPR0   EVER_FOUND+2,,AUTO
         0 000017   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000020   000000 701000 xent               TSX1    VDA$FOPEN
         0 000021   000061 702000 0                  TSX2    FOPEN_FAILED

     1245     2689    1             ALTRET (FOPEN_FAILED);
     1246     2690
     1247     2691    2           DO WHILE '1'B;

     1248     2692    2              CALL VDE$IRANGE (VD_6E.SOURCE.OPERAND, FOUND)

PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:186  
   2692  0 000022   200003 630500                    EPPR0   FOUND,,AUTO
         0 000023   200007 450500                    STP0    EVER_FOUND+3,,AUTO
         0 000024   000001 236000 1                  LDQ     1
         0 000025   200006 756100                    STQ     EVER_FOUND+2,,AUTO
         0 000026   200006 630500                    EPPR0   EVER_FOUND+2,,AUTO
         0 000027   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000030   000000 701000 xent               TSX1    VDE$IRANGE
         0 000031   000061 702000 0                  TSX2    FOPEN_FAILED

     1249     2693    2                ALTRET (IRANGE_FAILED);
     1250     2694    3              IF FOUND THEN DO;

   2694  0 000032   200003 234100                    SZN     FOUND,,AUTO
         0 000033   000043 605000 0                  TPL     s:2701

     1251     2695    3                 CALL VDP$WWRITE (VD_6E.SOURCE.OPERAND) ALTRET (WWRITE_FAILED);

   2695  0 000034   000001 630400 1                  EPPR0   1
         0 000035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000036   000000 701000 xent               TSX1    VDP$WWRITE
         0 000037   000061 702000 0                  TSX2    FOPEN_FAILED

     1252     2696    3                 EVER_FOUND = %TRUE;

   2696  0 000040   400000 236003                    LDQ     -131072,DU
         0 000041   200004 756100                    STQ     EVER_FOUND,,AUTO

     1253     2697    3                 END;

   2697  0 000042   000022 710000 0                  TRA     s:2692

     1254     2698    2              ELSE EXIT;
     1255     2699    2              END;

     1256     2700
     1257     2701    2           IF NOT EVER_FOUND THEN DO;

PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:187  
   2701  0 000043   200004 234100                    SZN     EVER_FOUND,,AUTO
         0 000044   000054 604000 0                  TMI     s:2706

     1258     2702    2              CALL VDG$INFOMSG (%E$INFO_NONE);

   2702  0 000045   000002 630400 1                  EPPR0   2
         0 000046   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000047   000000 701000 xent               TSX1    VDG$INFOMSG
         0 000050   000000 011000                    NOP     0

     1259     2703    2              CALL VDG$EREPORT_ERROR;

   2703  0 000051   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000052   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         0 000053   000000 011000                    NOP     0

     1260     2704    2              END;

     1261     2705
     1262     2706    1           CALL VDA$FCLOSE (SRC$STRM);

   2706  0 000054   000020 630400 xsym               EPPR0   VD_6E+16
         0 000055   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000056   000000 701000 xent               TSX1    VDA$FCLOSE
         0 000057   000000 011000                    NOP     0

     1263     2707    1           RETURN;

   2707  0 000060   000000 702200 xent               TSX2  ! X66_ARET

   2701  0 000061                       FOPEN_FAILED null
   2701  0 000061                       IRANGE_FAIL* null
   2701  0 000061                       WWRITE_FAIL* null
     1264     2708
     1265     2709    1   FOPEN_FAILED:;
     1266     2710    1   IRANGE_FAILED:;
     1267     2711    1   WWRITE_FAILED:;
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:188  
     1268     2712    1           ALTRETURN;

   2712  0 000061   000000 702200 xent               TSX2  ! X66_AALT
     1269     2713
     1270     2714    1   END VDI$CSHOW;
     1271     2715        %EOD;

PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:189  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CSHOW.
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:190  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/b BIT         r     1 EVER_FOUND                 3-0-0/b BIT         r     1 FOUND

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(936)   r     1 SRC$BLK                    0-0-0/w STRC(864)   r     1 SRC$STRM


   Procedure VDI$CSHOW requires 50 words for executable code.
   Procedure VDI$CSHOW requires 10 words of local(AUTO) storage.
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:191  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:192  
          MINI XREF LISTING

EVER_FOUND
      2428**DCL      2685<<ASSIGN   2696<<ASSIGN   2701>>IF
FOPEN_FAILED
      2701**LABEL    2688--CALLALT
FOUND
      2427**DCL      2692<>CALL     2694>>IF
IRANGE_FAILED
      2701**LABEL    2692--CALLALT
SRC$BLK.FILE_KEY
      2475**DCL      2688<>CALL
SRC$BLK.OPTIONS
      2558**DCL      2688<>CALL
SRC$BLK.OPTIONS.PROTECT#
      2560**DCL      2687<<ASSIGN
SRC$STRM
      2586**DCL      2688<>CALL     2706<>CALL
VDA$FCLOSE
      2383**DCL-ENT  2706--CALL
VDA$FOPEN
      2384**DCL-ENT  2688--CALL
VDE$IRANGE
      2385**DCL-ENT  2692--CALL
VDG$EREPORT_ERROR
      2386**DCL-ENT  2703--CALL
VDG$INFOMSG
      2387**DCL-ENT  2702--CALL
VDP$WWRITE
      2388**DCL-ENT  2695--CALL
VD_6E.SOURCE.OPERAND
      2417**DCL      2692<>CALL     2695<>CALL
VD_6E.SOURCE.OPERAND.EDIT_BLOCK$
      2419**DCL      2439--IMP-PTR  2687>>ASSIGN   2688>>CALL     2688>>CALL
PL6.E3A0      #008=VDI$CSHOW File=VDI$COMMANDS_NON_EDITING.:VDA5TSI              FRI 07/04/97 11:32 Page:193  
VD_6E.SOURCE.OPERAND.STREAM$
      2419**DCL      2586--IMP-PTR  2688>>CALL     2706>>CALL
WWRITE_FAILED
      2701**LABEL    2695--CALLALT

PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:194  
     1272        1        /*M* VDI$CSYNONYM - Command Processor for SYNONYM command */
     1273        2        /*T***********************************************************/
     1274        3        /*T*                                                         */
     1275        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1276        5        /*T*                                                         */
     1277        6        /*T***********************************************************/
     1278        7
     1279        8        /*X* MCR=NO, DMC=YES */
     1280        9        /*T*/
     1281       10
     1282       11        /*P* NAME:  VDI$CSYNONYM
     1283       12            PURPOSE:
     1284       13                Command Processor for SYNONYM command.
     1285       14            DESCRIPTION:
     1286       15                Given a VD$IT_COMMAND node for a SYNONYM command, will perform
     1287       16                the command:  de-comment the right-side string, find/insert
     1288       17                the defined name in the Synonyms file, deleting it from
     1289       18                any other internal file it may have been defined in.
     1290       19        */
     1291       20
     1292       21        /*D* NAME:  VDI$CSYNONYM
     1293       22            PARAMETERS:
     1294       23                SYNONYM_CMD - The VD$IT_COMMAND InTree node for the command:
     1295       24                    .CODE must be %T_SYNONYM_CMD.
     1296       25                    .PARAM$ (%CP_SY_NAME) must point to a VD$TEXTC_REMOTE containing
     1297       26                        the name to assign.
     1298       27                    .PARAM$ (%CP_SY_VALUE) must point to a VD$BUFFER containing
     1299       28                        the value to assign to the name.  Note that this value is
     1300       29                        from an .ASYM PARTRGE node, so it may contain commentary
     1301       30                        which must be removed from the buffer before assigning the
     1302       31                        value to the name.
     1303       32            INPUT:
     1304       33                VD_$CONTROL and VD_$COMMENT - VD$BUFFER's for predefined names.
     1305       34                    The values of these names are strings which invoke lexical
     1306       35                    functions.  The name being defined by the SYNONYM command
     1307       36                    cannot have any of these two strings as a substring.
     1308       37            OUTPUT:
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:195  
     1309       38                SYNONYM_CMD.PARAM$ (%CP_SY_VALUE) will be NIL.
     1310       39            DESCRIPTION:
     1311       40                Verify that the name being defined doesn't start with a digit.
     1312       41                Verify that neither the $CONTROL nor $COMMENT strings are substrings
     1313       42                    of the name being defined.
     1314       43                Remove any commentary from the value buffer.
     1315       44                Find the name in the Synonyms file:  if not found, insert it into the
     1316       45                    file, deleting it from any other internal file it may be defined in.
     1317       46        */
     1318       47
     1319       48        VDI$CSYNONYM: PROC (SYNONYM_CMD) ALTRET;
     1320       49
     1321       50        %INCLUDE VD_MACROS_M;
     1322     2265        %INCLUDE VD_PERR_C;
     1323     2413        %INCLUDE VD_NODES0_E;
     1324     2505
     1325     2506        %VD$IT_COMMAND (NAME=SYNONYM_CMD, STCLASS=PARAM);
     1326     2544
     1327     2545    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
     1328     2546    1   DCL VDG$ESCREECH                ENTRY (3);
     1329     2547    1   DCL VDI$CUPDATE_NAME            ENTRY (4) ALTRET;
     1330     2548
     1331     2549        %VD_6E ( STCLASS = SYMREF );
     1332     2585        %VD_BUFFER ( NAME = VD_$CONTROL, STCLASS = SYMREF, MXNB=%MXNB_$CONTROL );
     1333     2645        %VD_BUFFER ( NAME = VD_$COMMENT, STCLASS = SYMREF, MXNB=%MXNB_$CONTROL );
     1334     2705        %VD_BUFFER (NAME=VD_STATIC_TEMP, STCLASS=SYMREF, MXNB=%MXNB_NAME_VALUE);
     1335     2765
     1336     2766    1   DCL SYNONYM_NAME$ PTR;
     1337     2767    1   DCL SYNONYM_VALUE$ PTR;
     1338     2768    1   DCL I UBIN;
     1339     2769    1   DCL J SBIN;
     1340     2770    1   DCL VD_ERR$ PTR;
     1341     2771
     1342     2772        %VD$TEXTC_REMOTE (NAME=SYNONYM$NAME, STCLASS="BASED(SYNONYM_NAME$)");
     1343     2833        %VD$BUFFER (NAME=SYNONYM$VALUE, STCLASS="BASED(SYNONYM_VALUE$)");
     1344     2891        %VD$STREAM;
     1345     2997        %VD$TEXTC;
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:196  
     1346     3020        %VD$ERR;
     1347     3073        %EJECT;
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:197  
     1348     3074    1           SYNONYM_NAME$ = SYNONYM_CMD.PARAM$ (%CP_SY_NAME);
     1349     3075    1           SYNONYM_VALUE$ = SYNONYM_CMD.PARAM$ (%CP_SY_VALUE);
     1350     3076
     1351     3077    1           IF SUBSTR(SYNONYM$NAME.BYTES, 0, 1) >= '0'
     1352     3078    1             AND SUBSTR(SYNONYM$NAME.BYTES, 0, 1) <= '9' THEN
     1353     3079    1              GOTO ILL_SY_NAME_FAILURE;
     1354     3080
     1355     3081    2           IF VD_$CONTROL.LENGTH# > 0 THEN DO;
     1356     3082    2              CALL INDEX (I, SUBSTR(VD_$CONTROL.BYTES, 0, VD_$CONTROL.LENGTH#),
     1357     3083    2                SYNONYM$NAME.BYTES);
     1358     3084    2              IF I < LENGTHC(SYNONYM$NAME.BYTES) THEN
     1359     3085    2                 GOTO ILL_SY_NAME_FAILURE;
     1360     3086    2              END;
     1361     3087    2           IF VD_$COMMENT.LENGTH# > 0 THEN DO;
     1362     3088    2              CALL INDEX (I, SUBSTR(VD_$COMMENT.BYTES, 0, VD_$COMMENT.LENGTH#),
     1363     3089    2                SYNONYM$NAME.BYTES);
     1364     3090    2              IF I < LENGTHC(SYNONYM$NAME.BYTES) THEN
     1365     3091    2                 GOTO ILL_SY_NAME_FAILURE;
     1366     3092    2              END;
     1367     3093
     1368     3094                /*
     1369     3095                *   Remove any comments in the value being assigned to the name.
     1370     3096                */
     1371     3097    2           IF VD_$COMMENT.LENGTH# > 0 THEN DO;
     1372     3098    2              I = 0;
     1373     3099    2   EACH_PAIR_OF_$COMMENTS:
     1374     3100    3              DO WHILE I < SYNONYM$VALUE.LENGTH#;
     1375     3101    3                 CALL INDEX (I, SUBSTR(VD_$COMMENT.BYTES, 0, VD_$COMMENT.LENGTH#),
     1376     3102    3                   SYNONYM$VALUE.BYTES, I);
     1377     3103    4                 IF I < SYNONYM$VALUE.LENGTH# THEN DO;
     1378     3104    4                    CALL INDEX (J, SUBSTR(VD_$COMMENT.BYTES, 0,
     1379     3105    4                      VD_$COMMENT.LENGTH#),
     1380     3106    4                      SYNONYM$VALUE.BYTES, I + 1)
     1381     3107    5                    WHENRETURN DO;
     1382     3108    5                       J = J + 1;  /* So J points to next char to keep */
     1383     3109    5                       END;
     1384     3110                         /* Remove the text from I to (J-1), inclusive */
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:198  
     1385     3111    4                    VD_STATIC_TEMP.LENGTH# = SYNONYM$VALUE.LENGTH# - (J - I);
     1386     3112    4                    VD_STATIC_TEMP.BYTES = SUBSTR(SYNONYM$VALUE.BYTES, 0, I);
     1387     3113    5                    IF J < SYNONYM$VALUE.LENGTH# THEN DO;
     1388     3114    5                       CALL INSERT (VD_STATIC_TEMP.BYTES, I,
     1389     3115    5                         VD_STATIC_TEMP.LENGTH#, SUBSTR(SYNONYM$VALUE.BYTES, J))
     1390     3116    6                       WHENALTRETURN DO;
     1391     3117    6                          CALL VDG$ESCREECH (I, J, SYNONYM$VALUE.LENGTH#);
     1392     3118    6                          END;
     1393     3119    5                       END;
     1394     3120    4                    SYNONYM$VALUE.LENGTH# = VD_STATIC_TEMP.LENGTH#;
     1395     3121    4                    SYNONYM$VALUE.BYTES = VD_STATIC_TEMP.BYTES;
     1396     3122    4                    END;
     1397     3123    3                 END EACH_PAIR_OF_$COMMENTS;
     1398     3124    2              END;
     1399     3125
     1400     3126
     1401     3127    1           CALL VDI$CUPDATE_NAME ( VD_6E.SYNONYMS$ -> VD$STREAM,
     1402     3128    1             ADDR ( SYNONYM$NAME.LENGTH# ) -> VD$TEXTC,
     1403     3129    1             SYNONYM_CMD.PARAM$ (%CP_SY_VALUE) )
     1404     3130    1           WHENALTRETURN
     1405     3131    2           DO;
     1406     3132    2              ALTRETURN;
     1407     3133    2              END;
     1408     3134                /* The Synonym file now owns the value VD$BUFFER object */
     1409     3135
     1410     3136    1           RETURN;
     1411     3137
     1412     3138    1   ILL_SY_NAME_FAILURE:
     1413     3139    1           CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )
     1414     3140    1           WHENALTRETURN
     1415     3141    2           DO;
     1416     3142    2              ALTRETURN;
     1417     3143    2              END;
     1418     3144    1           VD_ERR$ -> VD$ERR.ERR.CODE# = %E$BAD_SY_NAME;
     1419     3145    1           VD_ERR$ -> VD$ERR.FLAGLEV# = %FLV_SERIOUS;
     1420     3146    1           ALTRETURN;
     1421     3147
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:199  
     1422     3148    1   END VDI$CSYNONYM;
     1423     3149        %EOD;

PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:200  
--  Include file information  --

   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CSYNONYM.

   Procedure VDI$CSYNONYM requires 200 words for executable code.
   Procedure VDI$CSYNONYM requires 14 words of local(AUTO) storage.

PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:201  

 Object Unit name= VDI$CSYNONYM                               File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:32:39.20 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   200    310  VDI$CSYNONYM
    1  RoData even  none     2      2  VDI$CSYNONYM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  VDI$CSYNONYM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VDG$ESCREECH
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       4 VDI$CUPDATE_NAME
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_INDEX
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:202  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_$CONTROL                           VD_$COMMENT
     VD_STATIC_TEMP                        B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:203  


     1272        1        /*M* VDI$CSYNONYM - Command Processor for SYNONYM command */
     1273        2        /*T***********************************************************/
     1274        3        /*T*                                                         */
     1275        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1276        5        /*T*                                                         */
     1277        6        /*T***********************************************************/
     1278        7
     1279        8        /*X* MCR=NO, DMC=YES */
     1280        9        /*T*/
     1281       10
     1282       11        /*P* NAME:  VDI$CSYNONYM
     1283       12            PURPOSE:
     1284       13                Command Processor for SYNONYM command.
     1285       14            DESCRIPTION:
     1286       15                Given a VD$IT_COMMAND node for a SYNONYM command, will perform
     1287       16                the command:  de-comment the right-side string, find/insert
     1288       17                the defined name in the Synonyms file, deleting it from
     1289       18                any other internal file it may have been defined in.
     1290       19        */
     1291       20
     1292       21        /*D* NAME:  VDI$CSYNONYM
     1293       22            PARAMETERS:
     1294       23                SYNONYM_CMD - The VD$IT_COMMAND InTree node for the command:
     1295       24                    .CODE must be %T_SYNONYM_CMD.
     1296       25                    .PARAM$ (%CP_SY_NAME) must point to a VD$TEXTC_REMOTE containing
     1297       26                        the name to assign.
     1298       27                    .PARAM$ (%CP_SY_VALUE) must point to a VD$BUFFER containing
     1299       28                        the value to assign to the name.  Note that this value is
     1300       29                        from an .ASYM PARTRGE node, so it may contain commentary
     1301       30                        which must be removed from the buffer before assigning the
     1302       31                        value to the name.
     1303       32            INPUT:
     1304       33                VD_$CONTROL and VD_$COMMENT - VD$BUFFER's for predefined names.
     1305       34                    The values of these names are strings which invoke lexical
     1306       35                    functions.  The name being defined by the SYNONYM command
     1307       36                    cannot have any of these two strings as a substring.
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:204  
     1308       37            OUTPUT:
     1309       38                SYNONYM_CMD.PARAM$ (%CP_SY_VALUE) will be NIL.
     1310       39            DESCRIPTION:
     1311       40                Verify that the name being defined doesn't start with a digit.
     1312       41                Verify that neither the $CONTROL nor $COMMENT strings are substrings
     1313       42                    of the name being defined.
     1314       43                Remove any commentary from the value buffer.
     1315       44                Find the name in the Synonyms file:  if not found, insert it into the
     1316       45                    file, deleting it from any other internal file it may be defined in.
     1317       46        */
     1318       47
     1319       48        VDI$CSYNONYM: PROC (SYNONYM_CMD) ALTRET;

     48  0 000000   000000 700200 xent  VDI$CSYNONYM TSX0  ! X66_AUTO_1
         0 000001   000016 000001                    ZERO    14,1

     1320       49
     1321       50        %INCLUDE VD_MACROS_M;
     1322     2265        %INCLUDE VD_PERR_C;
     1323     2413        %INCLUDE VD_NODES0_E;
     1324     2505
     1325     2506        %VD$IT_COMMAND (NAME=SYNONYM_CMD, STCLASS=PARAM);
     1326     2544
     1327     2545    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
     1328     2546    1   DCL VDG$ESCREECH                ENTRY (3);
     1329     2547    1   DCL VDI$CUPDATE_NAME            ENTRY (4) ALTRET;
     1330     2548
     1331     2549        %VD_6E ( STCLASS = SYMREF );
     1332     2585        %VD_BUFFER ( NAME = VD_$CONTROL, STCLASS = SYMREF, MXNB=%MXNB_$CONTROL );
     1333     2645        %VD_BUFFER ( NAME = VD_$COMMENT, STCLASS = SYMREF, MXNB=%MXNB_$CONTROL );
     1334     2705        %VD_BUFFER (NAME=VD_STATIC_TEMP, STCLASS=SYMREF, MXNB=%MXNB_NAME_VALUE);
     1335     2765
     1336     2766    1   DCL SYNONYM_NAME$ PTR;
     1337     2767    1   DCL SYNONYM_VALUE$ PTR;
     1338     2768    1   DCL I UBIN;
     1339     2769    1   DCL J SBIN;
     1340     2770    1   DCL VD_ERR$ PTR;
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:205  
     1341     2771
     1342     2772        %VD$TEXTC_REMOTE (NAME=SYNONYM$NAME, STCLASS="BASED(SYNONYM_NAME$)");
     1343     2833        %VD$BUFFER (NAME=SYNONYM$VALUE, STCLASS="BASED(SYNONYM_VALUE$)");
     1344     2891        %VD$STREAM;
     1345     2997        %VD$TEXTC;
     1346     3020        %VD$ERR;
     1347     3073        %EJECT;
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:206  
     1348     3074    1           SYNONYM_NAME$ = SYNONYM_CMD.PARAM$ (%CP_SY_NAME);

   3074  0 000002   200003 470500                    LDP0    @SYNONYM_CMD,,AUTO
         0 000003   000006 236100                    LDQ     6,,PR0
         0 000004   200004 756100                    STQ     SYNONYM_NAME$,,AUTO

     1349     3075    1           SYNONYM_VALUE$ = SYNONYM_CMD.PARAM$ (%CP_SY_VALUE);

   3075  0 000005   000007 236100                    LDQ     7,,PR0
         0 000006   200005 756100                    STQ     SYNONYM_VALUE$,,AUTO

     1350     3076
     1351     3077    1           IF SUBSTR(SYNONYM$NAME.BYTES, 0, 1) >= '0'

   3077  0 000007   200004 471500                    LDP1    SYNONYM_NAME$,,AUTO
         0 000010   100002 236100                    LDQ     2,,PR1
         0 000011   000033 772000                    QRL     27
         0 000012   100002 236100                    LDQ     2,,PR1
         0 000013   000777 376003                    ANQ     511,DU
         0 000014   000060 116003                    CMPQ    48,DU
         0 000015   000025 602000 0                  TNC     s:3081
         0 000016   100002 236100                    LDQ     2,,PR1
         0 000017   000033 772000                    QRL     27
         0 000020   100002 236100                    LDQ     2,,PR1
         0 000021   000777 376003                    ANQ     511,DU
         0 000022   000071 116003                    CMPQ    57,DU
         0 000023   000265 602000 0                  TNC     ILL_SY_NAME_FAILURE
         0 000024   000265 600000 0                  TZE     ILL_SY_NAME_FAILURE

     1352     3078    1             AND SUBSTR(SYNONYM$NAME.BYTES, 0, 1) <= '9' THEN
     1353     3079    1              GOTO ILL_SY_NAME_FAILURE;
     1354     3080
     1355     3081    2           IF VD_$CONTROL.LENGTH# > 0 THEN DO;

   3081  0 000025   000002 220000 xsym               LDX0    VD_$CONTROL+2
         0 000026   000053 604400 0                  TMOZ    s:3087

PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:207  
     1356     3082    2              CALL INDEX (I, SUBSTR(VD_$CONTROL.BYTES, 0, VD_$CONTROL.LENGTH#),

   3082  0 000027   100002 236100                    LDQ     2,,PR1
         0 000030   000033 772000                    QRL     27
         0 000031   200006 631500                    EPPR1   I,,AUTO
         0 000032   000002 633400 xsym               EPPR3   VD_$CONTROL+2
         0 000033   000002 221003                    LDX1    2,DU
         0 000034   300000 500511                    A9BD    0,X1,PR3
         0 000035   000000 623010                    EAX3    0,X0
         0 000036   200004 470500                    LDP0    SYNONYM_NAME$,,AUTO
         0 000037   000011 222003                    LDX2    9,DU
         0 000040   000000 500512                    A9BD    0,X2,PR0
         0 000041   000000 620006                    EAX0    0,QL
         0 000042   000000 236003                    LDQ     0,DU
         0 000043   000000 701000 xent               TSX1    X66_INDEX
         0 000044   000000 011000                    NOP     0

     1357     3083    2                SYNONYM$NAME.BYTES);
     1358     3084    2              IF I < LENGTHC(SYNONYM$NAME.BYTES) THEN

   3084  0 000045   200004 470500                    LDP0    SYNONYM_NAME$,,AUTO
         0 000046   000002 236100                    LDQ     2,,PR0
         0 000047   000033 772000                    QRL     27
         0 000050   200006 116100                    CMPQ    I,,AUTO
         0 000051   000053 600000 0                  TZE     s:3087
         0 000052   000265 603000 0                  TRC     ILL_SY_NAME_FAILURE

     1359     3085    2                 GOTO ILL_SY_NAME_FAILURE;
     1360     3086    2              END;

     1361     3087    2           IF VD_$COMMENT.LENGTH# > 0 THEN DO;

   3087  0 000053   000002 220000 xsym               LDX0    VD_$COMMENT+2
         0 000054   000101 604400 0                  TMOZ    s:3097

     1362     3088    2              CALL INDEX (I, SUBSTR(VD_$COMMENT.BYTES, 0, VD_$COMMENT.LENGTH#),

PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:208  
   3088  0 000055   200004 470500                    LDP0    SYNONYM_NAME$,,AUTO
         0 000056   000002 236100                    LDQ     2,,PR0
         0 000057   000033 772000                    QRL     27
         0 000060   200006 631500                    EPPR1   I,,AUTO
         0 000061   000002 633400 xsym               EPPR3   VD_$COMMENT+2
         0 000062   000002 221003                    LDX1    2,DU
         0 000063   300000 500511                    A9BD    0,X1,PR3
         0 000064   000000 623010                    EAX3    0,X0
         0 000065   000011 222003                    LDX2    9,DU
         0 000066   000000 500512                    A9BD    0,X2,PR0
         0 000067   000000 620006                    EAX0    0,QL
         0 000070   000000 236003                    LDQ     0,DU
         0 000071   000000 701000 xent               TSX1    X66_INDEX
         0 000072   000000 011000                    NOP     0

     1363     3089    2                SYNONYM$NAME.BYTES);
     1364     3090    2              IF I < LENGTHC(SYNONYM$NAME.BYTES) THEN

   3090  0 000073   200004 470500                    LDP0    SYNONYM_NAME$,,AUTO
         0 000074   000002 236100                    LDQ     2,,PR0
         0 000075   000033 772000                    QRL     27
         0 000076   200006 116100                    CMPQ    I,,AUTO
         0 000077   000101 600000 0                  TZE     s:3097
         0 000100   000265 603000 0                  TRC     ILL_SY_NAME_FAILURE

     1365     3091    2                 GOTO ILL_SY_NAME_FAILURE;
     1366     3092    2              END;

     1367     3093
     1368     3094                /*
     1369     3095                *   Remove any comments in the value being assigned to the name.
     1370     3096                */
     1371     3097    2           IF VD_$COMMENT.LENGTH# > 0 THEN DO;

   3097  0 000101   000002 220000 xsym               LDX0    VD_$COMMENT+2
         0 000102   000247 604400 0                  TMOZ    s:3127

PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:209  
     1372     3098    2              I = 0;

   3098  0 000103   200006 450100                    STZ     I,,AUTO

     1373     3099    2   EACH_PAIR_OF_$COMMENTS:
     1374     3100    3              DO WHILE I < SYNONYM$VALUE.LENGTH#;

   3100  0 000104   200005 470500       EACH_PAIR_O* LDP0    SYNONYM_VALUE$,,AUTO
         0 000105   000002 236100                    LDQ     2,,PR0
         0 000106   000022 732000                    QRS     18
         0 000107   000247 604000 0                  TMI     s:3127
         0 000110   200006 116100                    CMPQ    I,,AUTO
         0 000111   000247 602000 0                  TNC     s:3127
         0 000112   000247 600000 0                  TZE     s:3127

     1375     3101    3                 CALL INDEX (I, SUBSTR(VD_$COMMENT.BYTES, 0, VD_$COMMENT.LENGTH#),

   3101  0 000113   200005 470500                    LDP0    SYNONYM_VALUE$,,AUTO
         0 000114   000002 220100                    LDX0    2,,PR0
         0 000115   200006 631500                    EPPR1   I,,AUTO
         0 000116   000002 633400 xsym               EPPR3   VD_$COMMENT+2
         0 000117   000002 221003                    LDX1    2,DU
         0 000120   300000 500511                    A9BD    0,X1,PR3
         0 000121   000002 223000 xsym               LDX3    VD_$COMMENT+2
         0 000122   000012 222003                    LDX2    10,DU
         0 000123   000000 500512                    A9BD    0,X2,PR0
         0 000124   200006 236100                    LDQ     I,,AUTO
         0 000125   000000 701000 xent               TSX1    X66_INDEX
         0 000126   000000 011000                    NOP     0

     1376     3102    3                   SYNONYM$VALUE.BYTES, I);
     1377     3103    4                 IF I < SYNONYM$VALUE.LENGTH# THEN DO;

   3103  0 000127   200005 470500                    LDP0    SYNONYM_VALUE$,,AUTO
         0 000130   000002 236100                    LDQ     2,,PR0
         0 000131   000022 732000                    QRS     18
         0 000132   000241 604000 0                  TMI     s:3123
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:210  
         0 000133   200006 116100                    CMPQ    I,,AUTO
         0 000134   000241 602000 0                  TNC     s:3123
         0 000135   000241 600000 0                  TZE     s:3123

     1378     3104    4                    CALL INDEX (J, SUBSTR(VD_$COMMENT.BYTES, 0,

   3104  0 000136   000002 220100                    LDX0    2,,PR0
         0 000137   200007 631500                    EPPR1   J,,AUTO
         0 000140   000002 633400 xsym               EPPR3   VD_$COMMENT+2
         0 000141   000002 221003                    LDX1    2,DU
         0 000142   300000 500511                    A9BD    0,X1,PR3
         0 000143   000000 500512                    A9BD    0,X2,PR0
         0 000144   200006 236100                    LDQ     I,,AUTO
         0 000145   000001 036007                    ADLQ    1,DL
         0 000146   000000 701000 xent               TSX1    X66_INDEX
         0 000147   000151 710000 0                  TRA     s:3111

     1379     3105    4                      VD_$COMMENT.LENGTH#),
     1380     3106    4                      SYNONYM$VALUE.BYTES, I + 1)
     1381     3107    5                    WHENRETURN DO;

     1382     3108    5                       J = J + 1;  /* So J points to next char to keep */

   3108  0 000150   200007 054100                    AOS     J,,AUTO

     1383     3109    5                       END;

     1384     3110                         /* Remove the text from I to (J-1), inclusive */
     1385     3111    4                    VD_STATIC_TEMP.LENGTH# = SYNONYM$VALUE.LENGTH# - (J - I);

   3111  0 000151   200007 236100                    LDQ     J,,AUTO
         0 000152   200006 136100                    SBLQ    I,,AUTO
         0 000153   200012 756100                    STQ     VD_ERR$+2,,AUTO
         0 000154   200005 470500                    LDP0    SYNONYM_VALUE$,,AUTO
         0 000155   000002 236100                    LDQ     2,,PR0
         0 000156   000022 732000                    QRS     18
         0 000157   200012 136100                    SBLQ    VD_ERR$+2,,AUTO
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:211  
         0 000160   000000 620006                    EAX0    0,QL
         0 000161   000002 740000 xsym               STX0    VD_STATIC_TEMP+2

     1386     3112    4                    VD_STATIC_TEMP.BYTES = SUBSTR(SYNONYM$VALUE.BYTES, 0, I);

   3112  0 000162   000002 221100                    LDX1    2,,PR0
         0 000163   200006 722100                    LXL2    I,,AUTO
         0 000164   040040 100540                    MLR     fill='040'O
         0 000165   000002 400012                    ADSC9   2,,PR0                   cn=2,n=*X2
         0 000166   000002 400010 xsym               ADSC9   VD_STATIC_TEMP+2         cn=2,n=*X0

     1387     3113    5                    IF J < SYNONYM$VALUE.LENGTH# THEN DO;

   3113  0 000167   000002 236100                    LDQ     2,,PR0
         0 000170   000022 732000                    QRS     18
         0 000171   200007 116100                    CMPQ    J,,AUTO
         0 000172   000232 604400 0                  TMOZ    s:3120

     1388     3114    5                       CALL INSERT (VD_STATIC_TEMP.BYTES, I,

   3114  0 000173   000002 221100                    LDX1    2,,PR0
         0 000174   000000 636011                    EAQ     0,X1
         0 000175   000022 732000                    QRS     18
         0 000176   200007 136100                    SBLQ    J,,AUTO
         0 000177   000000 623006                    EAX3    0,QL
         0 000200   200007 235100                    LDA     J,,AUTO
         0 000201   200012 756100                    STQ     VD_ERR$+2,,AUTO
         0 000202   200006 236100                    LDQ     I,,AUTO
         0 000203   040046 100545                    MLR     fill='040'O
         0 000204   000002 400013                    ADSC9   2,A,PR0                  cn=2,n=*X3
         0 000205   000002 400010 xsym               ADSC9   VD_STATIC_TEMP+2,Q       cn=2,n=*X0
         0 000206   200012 236100                    LDQ     VD_ERR$+2,,AUTO
         0 000207   000011 402007                    MPY     9,DL
         0 000210   200013 756100                    STQ     VD_ERR$+3,,AUTO
         0 000211   000002 236000 xsym               LDQ     VD_STATIC_TEMP+2
         0 000212   000022 732000                    QRS     18
         0 000213   000011 402007                    MPY     9,DL
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:212  
         0 000214   200013 116100                    CMPQ    VD_ERR$+3,,AUTO
         0 000215   000217 604000 0                  TMI     s:3117
         0 000216   000232 710000 0                  TRA     s:3120

     1389     3115    5                         VD_STATIC_TEMP.LENGTH#, SUBSTR(SYNONYM$VALUE.BYTES, J))
     1390     3116    6                       WHENALTRETURN DO;

     1391     3117    6                          CALL VDG$ESCREECH (I, J, SYNONYM$VALUE.LENGTH#);

   3117  0 000217   200005 236100                    LDQ     SYNONYM_VALUE$,,AUTO
         0 000220   000002 036003                    ADLQ    2,DU
         0 000221   200014 756100                    STQ     VD_ERR$+4,,AUTO
         0 000222   200007 630500                    EPPR0   J,,AUTO
         0 000223   200013 450500                    STP0    VD_ERR$+3,,AUTO
         0 000224   200006 631500                    EPPR1   I,,AUTO
         0 000225   200012 451500                    STP1    VD_ERR$+2,,AUTO
         0 000226   200012 630500                    EPPR0   VD_ERR$+2,,AUTO
         0 000227   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000230   000000 701000 xent               TSX1    VDG$ESCREECH
         0 000231   000000 011000                    NOP     0

     1392     3118    6                          END;

     1393     3119    5                       END;

     1394     3120    4                    SYNONYM$VALUE.LENGTH# = VD_STATIC_TEMP.LENGTH#;

   3120  0 000232   000002 220000 xsym               LDX0    VD_STATIC_TEMP+2
         0 000233   200005 470500                    LDP0    SYNONYM_VALUE$,,AUTO
         0 000234   000002 740100                    STX0    2,,PR0

     1395     3121    4                    SYNONYM$VALUE.BYTES = VD_STATIC_TEMP.BYTES;

   3121  0 000235   000002 221000 xsym               LDX1    VD_STATIC_TEMP+2
         0 000236   040140 100440                    MLR     fill='040'O
         0 000237   000002 400011 xsym               ADSC9   VD_STATIC_TEMP+2         cn=2,n=*X1
         0 000240   000002 400010                    ADSC9   2,,PR0                   cn=2,n=*X0
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:213  

     1396     3122    4                    END;

     1397     3123    3                 END EACH_PAIR_OF_$COMMENTS;

   3123  0 000241   000002 236100                    LDQ     2,,PR0
         0 000242   000022 732000                    QRS     18
         0 000243   000247 604000 0                  TMI     s:3127
         0 000244   200006 116100                    CMPQ    I,,AUTO
         0 000245   000247 600000 0                  TZE     s:3127
         0 000246   000113 603000 0                  TRC     s:3101

     1398     3124    2              END;

     1399     3125
     1400     3126
     1401     3127    1           CALL VDI$CUPDATE_NAME ( VD_6E.SYNONYMS$ -> VD$STREAM,

   3127  0 000247   200003 236100                    LDQ     @SYNONYM_CMD,,AUTO
         0 000250   000007 036003                    ADLQ    7,DU
         0 000251   200014 756100                    STQ     VD_ERR$+4,,AUTO
         0 000252   200004 236100                    LDQ     SYNONYM_NAME$,,AUTO
         0 000253   000002 036003                    ADLQ    2,DU
         0 000254   000003 235000 xsym               LDA     VD_6E+3
         0 000255   200012 757100                    STAQ    VD_ERR$+2,,AUTO
         0 000256   200012 630500                    EPPR0   VD_ERR$+2,,AUTO
         0 000257   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000260   000000 701000 xent               TSX1    VDI$CUPDATE_NAME
         0 000261   000263 702000 0                  TSX2    s:3132
         0 000262   000264 710000 0                  TRA     s:3136

     1402     3128    1             ADDR ( SYNONYM$NAME.LENGTH# ) -> VD$TEXTC,
     1403     3129    1             SYNONYM_CMD.PARAM$ (%CP_SY_VALUE) )
     1404     3130    1           WHENALTRETURN
     1405     3131    2           DO;

     1406     3132    2              ALTRETURN;
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:214  

   3132  0 000263   000000 702200 xent               TSX2  ! X66_AALT

     1407     3133    2              END;
     1408     3134                /* The Synonym file now owns the value VD$BUFFER object */
     1409     3135
     1410     3136    1           RETURN;

   3136  0 000264   000000 702200 xent               TSX2  ! X66_ARET

     1411     3137
     1412     3138    1   ILL_SY_NAME_FAILURE:
     1413     3139    1           CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )

   3139  0 000265   200010 630500       ILL_SY_NAME* EPPR0   VD_ERR$,,AUTO
         0 000266   200013 450500                    STP0    VD_ERR$+3,,AUTO
         0 000267   000000 236000 1                  LDQ     0
         0 000270   200012 756100                    STQ     VD_ERR$+2,,AUTO
         0 000271   200012 630500                    EPPR0   VD_ERR$+2,,AUTO
         0 000272   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000273   000000 701000 xent               TSX1    VDG$OALLOC
         0 000274   000276 702000 0                  TSX2    s:3142
         0 000275   000277 710000 0                  TRA     s:3144

     1414     3140    1           WHENALTRETURN
     1415     3141    2           DO;

     1416     3142    2              ALTRETURN;

   3142  0 000276   000000 702200 xent               TSX2  ! X66_AALT

     1417     3143    2              END;
     1418     3144    1           VD_ERR$ -> VD$ERR.ERR.CODE# = %E$BAD_SY_NAME;

   3144  0 000277   200010 470500                    LDP0    VD_ERR$,,AUTO
         0 000300   000002 236100                    LDQ     2,,PR0
         0 000301   000001 376000 1                  ANQ     1
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:215  
         0 000302   001760 276007                    ORQ     1008,DL
         0 000303   000002 756100                    STQ     2,,PR0

     1419     3145    1           VD_ERR$ -> VD$ERR.FLAGLEV# = %FLV_SERIOUS;

   3145  0 000304   000003 220003                    LDX0    3,DU
         0 000305   200010 470500                    LDP0    VD_ERR$,,AUTO
         0 000306   000003 740100                    STX0    3,,PR0

     1420     3146    1           ALTRETURN;

   3146  0 000307   000000 702200 xent               TSX2  ! X66_AALT
     1421     3147
     1422     3148    1   END VDI$CSYNONYM;
     1423     3149        %EOD;

PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:216  
--  Include file information  --

   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CSYNONYM.
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:217  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SYNONYM_CMD               6-0-0/w UBIN        r     1 I
     7-0-0/w SBIN        r     1 J                         *0-0-0/w STRC(540)   r     1 SYNONYM_CMD
     4-0-0/w PTR         r     1 SYNONYM_NAME$              5-0-0/w PTR         r     1 SYNONYM_VALUE$
    10-0-0/w PTR         r     1 VD_ERR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(90)    r     1 VD_$COMMENT                0-0-0/w ASTR(90)    r     1 VD_$CONTROL
     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w ASTR(90)    r     1 VD_STATIC_TEMP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(81)    r     1 SYNONYM$NAME               0-0-0/w ASTR(90)    r     1 SYNONYM$VALUE
     0-0-0/w STRC(180)   r     1 VD$ERR                     0-0-0/w STRC(864)   r     1 VD$STREAM
     0-0-0/w ASTR(9)     r     1 VD$TEXTC


   Procedure VDI$CSYNONYM requires 200 words for executable code.
   Procedure VDI$CSYNONYM requires 14 words of local(AUTO) storage.
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:218  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:219  
          MINI XREF LISTING

I
      2768**DCL      3082<<CALLBLT  3084>>IF       3088<<CALLBLT  3090>>IF       3098<<ASSIGN   3100>>DOWHILE
      3101<<CALLBLT  3101>>CALLBLT  3103>>IF       3104>>CALLBLT  3111>>ASSIGN   3112>>ASSIGN   3114>>CALLBLT
      3117<>CALL
ILL_SY_NAME_FAILURE
      3139**LABEL    3079--GOTO     3085--GOTO     3091--GOTO
J
      2769**DCL      3104<<CALLBLT  3108<<ASSIGN   3108>>ASSIGN   3111>>ASSIGN   3113>>IF       3114>>CALLBLT
      3117<>CALL
SYNONYM$NAME.BYTES
      2828**DCL      3077>>IF       3077>>IF       3082>>CALLBLT  3084--IF       3088>>CALLBLT  3090--IF
SYNONYM$NAME.LENGTH#
      2826**DCL      2828--IMP-SIZ  3077>>IF       3077>>IF       3082>>CALLBLT  3084>>IF       3088>>CALLBLT
      3090>>IF       3127--CALL     3127--CALL
SYNONYM$VALUE.BYTES
      2886**DCL      3101>>CALLBLT  3104>>CALLBLT  3112>>ASSIGN   3114>>CALLBLT  3121<<ASSIGN
SYNONYM$VALUE.LENGTH#
      2884**DCL      2886--IMP-SIZ  3100>>DOWHILE  3101>>CALLBLT  3103>>IF       3104>>CALLBLT  3111>>ASSIGN
      3112>>ASSIGN   3113>>IF       3114>>CALLBLT  3117<>CALL     3120<<ASSIGN   3121>>ASSIGN
SYNONYM_CMD
      2514**DCL        48--PROC
SYNONYM_CMD.PARAM$
      2541**DCL      3074>>ASSIGN   3075>>ASSIGN   3127<>CALL
SYNONYM_NAME$
      2766**DCL      2797--IMP-PTR  3074<<ASSIGN   3077>>IF       3077>>IF       3077>>IF       3077>>IF
      3082>>CALLBLT  3082>>CALLBLT  3084>>IF       3084>>IF       3088>>CALLBLT  3088>>CALLBLT  3090>>IF
      3090>>IF       3127>>CALL     3127>>CALL
SYNONYM_VALUE$
      2767**DCL      2858--IMP-PTR  3075<<ASSIGN   3100>>DOWHILE  3101>>CALLBLT  3101>>CALLBLT  3103>>IF
      3104>>CALLBLT  3104>>CALLBLT  3111>>ASSIGN   3112>>ASSIGN   3112>>ASSIGN   3113>>IF       3114>>CALLBLT
      3114>>CALLBLT  3117>>CALL     3120>>ASSIGN   3121>>ASSIGN   3121>>ASSIGN
VD$ERR.ERR.CODE#
PL6.E3A0      #009=VDI$CSYNONYM File=VDI$COMMANDS_NON_EDITING.:VDA5TSI           FRI 07/04/97 11:32 Page:220  
      3067**DCL      3144<<ASSIGN
VD$ERR.FLAGLEV#
      3070**DCL      3145<<ASSIGN
VD$STREAM
      2899**DCL      3127<>CALL
VD$TEXTC
      3005**DCL      3127<>CALL
VD$TEXTC.LENGTH#
      3013**DCL      3015--IMP-SIZ  3127>>CALL
VDG$ESCREECH
      2546**DCL-ENT  3117--CALL
VDG$OALLOC
      2545**DCL-ENT  3139--CALL
VDI$CUPDATE_NAME
      2547**DCL-ENT  3127--CALL
VD_$COMMENT.BYTES
      2699**DCL      3088>>CALLBLT  3101>>CALLBLT  3104>>CALLBLT
VD_$COMMENT.LENGTH#
      2697**DCL      2699--IMP-SIZ  3087>>IF       3088>>CALLBLT  3088>>CALLBLT  3097>>IF       3101>>CALLBLT
      3101>>CALLBLT  3104>>CALLBLT  3104>>CALLBLT
VD_$CONTROL.BYTES
      2639**DCL      3082>>CALLBLT
VD_$CONTROL.LENGTH#
      2637**DCL      2639--IMP-SIZ  3081>>IF       3082>>CALLBLT  3082>>CALLBLT
VD_6E.SYNONYMS$
      2562**DCL      3127>>CALL
VD_ERR$
      2770**DCL      3139<>CALL     3144>>ASSIGN   3145>>ASSIGN
VD_STATIC_TEMP.BYTES
      2759**DCL      3112<<ASSIGN   3114<<CALLBLT  3121>>ASSIGN
VD_STATIC_TEMP.LENGTH#
      2757**DCL      2759--IMP-SIZ  3111<<ASSIGN   3112>>ASSIGN   3114>>CALLBLT  3114>>CALLBLT  3120>>ASSIGN
      3121>>ASSIGN

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:221  
     1424        1        /*M* VDI$CUPDATE_NAME - Update a EQUALS/KEYIN/LOCATION/SYNONYM name */
     1425        2        /*T***********************************************************/
     1426        3        /*T*                                                         */
     1427        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1428        5        /*T*                                                         */
     1429        6        /*T***********************************************************/
     1430        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
     1431        8
     1432        9        /*P* NAME:  VDI$CUPDATE_NAME
     1433       10            PURPOSE:
     1434       11                Update a EQUALS/KEYIN/LOCATION/SYNONYM name.
     1435       12            DESCRIPTION:
     1436       13                Given a key, a value, and an optional subscript, update the name in
     1437       14                the appropriate Names file.
     1438       15        */
     1439       16
     1440       17        /*D* NAME:  VDI$CUPDATE_NAME
     1441       18            PARAMETERS:
     1442       19                NAME$STREAM - VD$STREAM for the file which the name is to be
     1443       20                    defined in.
     1444       21                NAME_KEY - A VD$TEXTC which is the name itself, to be used as a key
     1445       22                    at level 1 of the appropriate Names file.
     1446       23                NAME_VALUE$ - Ptr to a VD$BUFFER which contains the value to be
     1447       24                    assigned to the name in the appropriate file.  Must be a single
     1448       25                    VD$BUFFER, ie, NAME$VALUE.FLINK$ must be NIL.
     1449       26                NAME_SUBSCRIPT - Optional SBIN containing the subscript which
     1450       27                    NAME_VALUE represents:  0 is the first value, 1 is the 2nd, etc.
     1451       28                    If NAME_SUBSCRIPT is not passed, then the entire current value of
     1452       29                    the name will be replaced with the single NAME_VALUE$ element, even
     1453       30                    if the value of the name currently is an array (chain of
     1454       31                    VD$BUFFERs).
     1455       32            INPUT:
     1456       33                VD_6E.EQUALS$, .KEYINS$, .LOCATIONS$, and .SYNONYMS$ must point to
     1457       34                    VD$STREAMs which are open to the appropriate file.
     1458       35            OUTPUT:
     1459       36                Update one, or possibly two, Names files.
     1460       37                NAME_VALUE$ will be NIL, reflecting the fact that the VD$BUFFER it
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:222  
     1461       38                    pointed to has either been freed or is now owned by the Accessor.
     1462       39            DESCRIPTION:
     1463       40                If the name isn't found in the Names file it's destined for, search
     1464       41                    for it in the other Names files.  If it's found within any of them,
     1465       42                    VDA$LDELETE it.
     1466       43                Then, VDA$LWRITE its (new) value to the requested Names file.
     1467       44        */
     1468       45
     1469       46        VDI$CUPDATE_NAME: PROC ( NAME$STREAM,
     1470       47              NAME_KEY,
     1471       48              NAME_VALUE$,
     1472       49              NAME_SUBSCRIPT )
     1473       50              ALTRET;
     1474       51
     1475       52
     1476       53        %INCLUDE VD_MACROS_M;
     1477     2268
     1478     2269        %VD$STREAM (NAME=NAME$STREAM, STCLASS=PARAM);
     1479     2375        %VD$TEXTC ( NAME = NAME_KEY,
     1480     2376                    STCLASS = PARAM );
     1481     2399    1     DCL NAME_VALUE$ PTR PARAM;
     1482     2400    1     DCL NAME_SUBSCRIPT SBIN PARAM;
     1483     2401
     1484     2402        %VD_6E ( STCLASS = SYMREF );
     1485     2438
     1486     2439    1     DCL FOUND_FLAG BIT(1) ALIGNED;
     1487     2440        %VD$LOCATION ( NAME = NAME_LOCATION,
     1488     2441                       STCLASS = AUTO );
     1489     2469        %VD$RANGE ( NAME = NAME_DELETION_RANGE,
     1490     2470                    STCLASS = AUTO );
     1491     2539        %VD$SPEC ( NAME = SPEC,
     1492     2540                   STCLASS = AUTO );
     1493     2554    1     DCL NEW_CHAIN$ PTR;
     1494     2555    1     DCL CURRENT_DATA$ PTR;
     1495     2556    1     DCL PREV_ELEMENT$ PTR;
     1496     2557    1     DCL CURR_ELEMENT$ PTR;
     1497     2558    1     DCL I SBIN;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:223  
     1498     2559
     1499     2560
     1500     2561        %VD$NAME_SPEC (NAME=NAME$SPEC, STCLASS="BASED(SPEC.V$)");
     1501     2609        %VD$BUFFER (NAME=NAME$VALUE, STCLASS="BASED(NAME_VALUE$)");
     1502     2667        %VD$BUFFER (NAME=NEW$CHAIN, STCLASS="BASED(NEW_CHAIN$)");
     1503     2725        %VD$BUFFER (NAME=CURRENT$DATA, STCLASS="BASED(CURRENT_DATA$)");
     1504     2783        %VD$BUFFER (NAME=CURR$ELEMENT, STCLASS="BASED(CURR_ELEMENT$)");
     1505     2841        %VD$BUFFER (NAME=PREV$ELEMENT, STCLASS="BASED(PREV_ELEMENT$)");
     1506     2899        %VD$BUFFER_HEADER;
     1507     2935        %VD$PORT;
     1508     3033        %VD$STREAM;
     1509     3139        %VD$TEXTC;
     1510     3162        %VD$TEXTC_REMOTE;
     1511     3223        %VD$STRING_HEADER;
     1512     3259
     1513     3260    1     DCL VDA$LDELETE ENTRY (2) ALTRET;
     1514     3261    1     DCL VDA$LREAD ENTRY (4) ALTRET;
     1515     3262    1     DCL VDA$LWRITE ENTRY (4) ALTRET;
     1516     3263    1     DCL VDA$PFLUSH ENTRY (2) ALTRET;
     1517     3264    1     DCL VDG$ESCREECH ENTRY (3);
     1518     3265    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
     1519     3266    1     DCL VDG$OCOPY ENTRY (2) ALTRET;
     1520     3267    1     DCL VDG$OCLEAR_LOCATION ENTRY (1) ALTRET;
     1521     3268    1     DCL VDG$OFREE ENTRY (1) ALTRET;
     1522     3269        %EJECT;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:224  
     1523     3270    1       SPEC = %CLEAR;
     1524     3271
     1525     3272    1       NAME_LOCATION = %CLEAR;
     1526     3273    1       NAME_LOCATION.KEY.TYPE# (%(LVL_LOWER-1)) = %KT_STRING;
     1527     3274    1       NAME_LOCATION.KEY.REP# (%(LVL_LOWER-1)) = %REP_REMOTE;
     1528     3275
     1529     3276    1       CALL VDG$OALLOC ( %CLS_TEXTC_REMOTE,
     1530     3277    1         NAME_LOCATION.KEY.V$ (%(LVL_LOWER-1)),
     1531     3278    1         ( SIZEC ( VD$STRING_HEADER )
     1532     3279    1         + NAME_KEY.LENGTH#
     1533     3280    1         + ( %NB_PER_WORD - 1 ) )
     1534     3281    1         / %NB_PER_WORD )
     1535     3282    1       WHENALTRETURN
     1536     3283    2         DO;
     1537     3284    2           ALTRETURN;
     1538     3285    2         END;
     1539     3286
     1540     3287    1       NAME_LOCATION.KEY.V$ (%(LVL_LOWER-1)) -> VD$TEXTC_REMOTE.LENGTH# =
     1541     3288    1         NAME_KEY.LENGTH#;
     1542     3289    1       NAME_LOCATION.KEY.V$ (%(LVL_LOWER-1)) -> VD$TEXTC_REMOTE.BYTES =
     1543     3290    1         NAME_KEY.BYTES;
     1544     3291
     1545     3292    1       CALL CHECK_INTO_INTERNAL_FILE ( NAME$STREAM,
     1546     3293    1         FOUND_FLAG,
     1547     3294    1         SPEC )
     1548     3295    1         ALTRET ( SERIOUS_ERROR );
     1549     3296
     1550     3297    1       NAME_DELETION_RANGE = %CLEAR;
     1551     3298    1       NAME_DELETION_RANGE.START = NAME_LOCATION;
     1552     3299    1       NAME_DELETION_RANGE.ENDD = NAME_LOCATION;
     1553     3300
     1554     3301    2       IF NAME$VALUE.LENGTH# = 0 THEN DO;
     1555     3302    2           IF ADDR(NAME$STREAM) = VD_6E.EQUALS$ OR ADDR(NAME_SUBSCRIPT) ~= ADDR(NIL)
     1556     3303    2           THEN EXIT;
     1557     3304    2           IF FOUND_FLAG
     1558     3305    2           THEN
     1559     3306    3             DO;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:225  
     1560     3307    3               CALL VDA$LDELETE (NAME$STREAM,
     1561     3308    3                 NAME_DELETION_RANGE)
     1562     3309    3                 ALTRET (SERIOUS_ERROR);
     1563     3310    3             END;
     1564     3311    2           CALL VDG$OFREE (NAME$VALUE) ALTRET (SERIOUS_ERROR);
     1565     3312    2           NAME_VALUE$ = ADDR(NIL);
     1566     3313    2           RETURN;
     1567     3314    2         END;
     1568     3315
     1569     3316    1       IF FOUND_FLAG
     1570     3317    1       THEN
     1571     3318    2         DO;
     1572     3319    2           CURRENT_DATA$ = NAME$STREAM.PORT$ -> VD$PORT.LEVEL.DATA$ (%LVL_LOWER);
     1573     3320    2         END;
     1574     3321
     1575     3322    1       ELSE
     1576     3323    1   CHECK_OTHER_INTERNAL_FILES:
     1577     3324    2         DO;
     1578     3325    2           CURRENT_DATA$ = ADDR(NIL);
     1579     3326
     1580     3327                /*
     1581     3328                *   Allocate a new VD$NAME_SPEC for the name.
     1582     3329                */
     1583     3330    2           SPEC = %CLEAR;
     1584     3331    2           SPEC.TYPE# = %SPT_NAME_SPEC;
     1585     3332    2           SPEC.REP# = %REP_REMOTE;
     1586     3333    2           CALL VDG$OALLOC ( %CLS_NAME_SPEC,
     1587     3334    2             SPEC.V$ )
     1588     3335    2             ALTRET ( SERIOUS_ERROR );
     1589     3336
     1590     3337    2           IF ADDR(NAME$STREAM) ~= VD_6E.EQUALS$
     1591     3338    2           THEN
     1592     3339    2   CHECK_EQUALS_FILE:
     1593     3340    3             DO;
     1594     3341    3               CALL CHECK_INTO_INTERNAL_FILE ( VD_6E.EQUALS$ -> VD$STREAM,
     1595     3342    3                 FOUND_FLAG )
     1596     3343    3                 ALTRET ( SERIOUS_ERROR );
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:226  
     1597     3344    3               IF FOUND_FLAG
     1598     3345    3               THEN
     1599     3346    3   DELETE_FROM_EQUALS_FILE:
     1600     3347    4                 DO;
     1601     3348    4                   CALL VDA$LDELETE ( VD_6E.EQUALS$ -> VD$STREAM,
     1602     3349    4                     NAME_DELETION_RANGE )
     1603     3350    4                     ALTRET ( SERIOUS_ERROR );
     1604     3351    4                   EXIT CHECK_OTHER_INTERNAL_FILES;
     1605     3352    4                 END DELETE_FROM_EQUALS_FILE;
     1606     3353    3             END CHECK_EQUALS_FILE;
     1607     3354
     1608     3355    2           IF ADDR(NAME$STREAM) ~= VD_6E.KEYINS$
     1609     3356    2           THEN
     1610     3357    2   CHECK_KEYINS_FILE:
     1611     3358    3             DO;
     1612     3359    3               CALL CHECK_INTO_INTERNAL_FILE ( VD_6E.KEYINS$ -> VD$STREAM,
     1613     3360    3                 FOUND_FLAG )
     1614     3361    3                 ALTRET ( SERIOUS_ERROR );
     1615     3362    3               IF FOUND_FLAG
     1616     3363    3               THEN
     1617     3364    3   DELETE_FROM_KEYINS_FILE:
     1618     3365    4                 DO;
     1619     3366    4                   CALL VDA$LDELETE ( VD_6E.KEYINS$ -> VD$STREAM,
     1620     3367    4                     NAME_DELETION_RANGE )
     1621     3368    4                     ALTRET ( SERIOUS_ERROR );
     1622     3369    4                   EXIT CHECK_OTHER_INTERNAL_FILES;
     1623     3370    4                 END DELETE_FROM_KEYINS_FILE;
     1624     3371    3             END CHECK_KEYINS_FILE;
     1625     3372
     1626     3373    2           IF ADDR(NAME$STREAM) ~= VD_6E.LOCATIONS$
     1627     3374    2           THEN
     1628     3375    2   CHECK_LOCATIONS_FILE:
     1629     3376    3             DO;
     1630     3377    3               CALL CHECK_INTO_INTERNAL_FILE ( VD_6E.LOCATIONS$ -> VD$STREAM,
     1631     3378    3                 FOUND_FLAG )
     1632     3379    3                 ALTRET ( SERIOUS_ERROR );
     1633     3380    3               IF FOUND_FLAG
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:227  
     1634     3381    3               THEN
     1635     3382    3   DELETE_FROM_LOCATIONS_FILE:
     1636     3383    4                 DO;
     1637     3384    4                   CALL VDA$LDELETE ( VD_6E.LOCATIONS$ -> VD$STREAM,
     1638     3385    4                     NAME_DELETION_RANGE )
     1639     3386    4                     ALTRET ( SERIOUS_ERROR );
     1640     3387    4                   EXIT CHECK_OTHER_INTERNAL_FILES;
     1641     3388    4                 END DELETE_FROM_LOCATIONS_FILE;
     1642     3389    3             END CHECK_LOCATIONS_FILE;
     1643     3390
     1644     3391    2           IF ADDR(NAME$STREAM) ~= VD_6E.SYNONYMS$
     1645     3392    2           THEN
     1646     3393    2   CHECK_SYNONYMS_FILE:
     1647     3394    3             DO;
     1648     3395    3               CALL CHECK_INTO_INTERNAL_FILE ( VD_6E.SYNONYMS$ -> VD$STREAM,
     1649     3396    3                 FOUND_FLAG )
     1650     3397    3                 ALTRET ( SERIOUS_ERROR );
     1651     3398    3               IF FOUND_FLAG
     1652     3399    3               THEN
     1653     3400    3   DELETE_FROM_SYNONYMS_FILE:
     1654     3401    4                 DO;
     1655     3402    4                   CALL VDA$LDELETE ( VD_6E.SYNONYMS$ -> VD$STREAM,
     1656     3403    4                     NAME_DELETION_RANGE )
     1657     3404    4                     ALTRET ( SERIOUS_ERROR );
     1658     3405    4                   EXIT CHECK_OTHER_INTERNAL_FILES;
     1659     3406    4                 END DELETE_FROM_SYNONYMS_FILE;
     1660     3407    3             END CHECK_SYNONYMS_FILE;
     1661     3408
     1662     3409    2         END CHECK_OTHER_INTERNAL_FILES;
     1663     3410
     1664     3411    1       IF SPEC.V$ = ADDR (NIL)
     1665     3412    1       THEN
     1666     3413    1         CALL VDG$ESCREECH;
     1667     3414
     1668     3415            /*
     1669     3416            *  Either:
     1670     3417            *     We found the name in the NAME_STREAM file, in which case
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:228  
     1671     3418            *        SPEC contains the name's current Spec component; or
     1672     3419            *     The name isn't in the NAME_STREAM file, in which case
     1673     3420            *        we've created an initially %CLEAR VD$NAME_SPEC for it.
     1674     3421            *  Set the requested data type in the name's Spec.
     1675     3422            */
     1676     3423
     1677     3424    1       IF ADDR(NAME$STREAM) = VD_6E.EQUALS$
     1678     3425    1       THEN
     1679     3426    1         NAME$SPEC.DATA_TYPE# = %NDT_EQUALS;
     1680     3427    1       ELSE
     1681     3428    1         IF ADDR(NAME$STREAM) = VD_6E.KEYINS$
     1682     3429    1         THEN
     1683     3430    2           DO;
     1684     3431    2             NAME$SPEC.DATA_TYPE# = %NDT_KEYIN;
     1685     3432    2             NAME$SPEC.WINDOWABLE = %TRUE; /* All KEYINs can be window-specific */
     1686     3433    2           END;
     1687     3434    1         ELSE
     1688     3435    1           IF ADDR(NAME$STREAM) = VD_6E.LOCATIONS$
     1689     3436    1           THEN
     1690     3437    1             NAME$SPEC.DATA_TYPE# = %NDT_LOCATION;
     1691     3438    1           ELSE
     1692     3439    1             IF ADDR(NAME$STREAM) = VD_6E.SYNONYMS$
     1693     3440    1             THEN
     1694     3441    1               NAME$SPEC.DATA_TYPE# = %NDT_SYNONYM;
     1695     3442    1             ELSE
     1696     3443    1               CALL VDG$ESCREECH;
     1697     3444
     1698     3445            /*
     1699     3446            *   If NAME_SUBSCRIPT is passed, make a copy of the name's current Data
     1700     3447            *   component and insert NAME_VALUE into the appropriate place in the
     1701     3448            *   VD$BUFFER chain, possibly replacing an existing element.
     1702     3449            */
     1703     3450
     1704     3451    1       IF ADDR(NAME_SUBSCRIPT) ~= ADDR(NIL)
     1705     3452    1       THEN
     1706     3453    1   REPLACE_JUST_1_ELEMENT_IN_CHAIN:
     1707     3454    2         DO;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:229  
     1708     3455    2           IF NAME_SUBSCRIPT < 0
     1709     3456    2           THEN
     1710     3457    2             CALL VDG$ESCREECH (NAME_SUBSCRIPT);
     1711     3458
     1712     3459    2           IF CURRENT_DATA$ = ADDR(NIL)
     1713     3460    2           THEN
     1714     3461    3             DO;
     1715     3462    3               CALL VDG$OALLOC (%CLS_BUFFER,
     1716     3463    3                 NEW_CHAIN$,
     1717     3464    3                 SIZEW ( VD$BUFFER_HEADER ) )
     1718     3465    3                 ALTRET ( SERIOUS_ERROR );
     1719     3466    3               NEW$CHAIN.LENGTH# = 0;  /* 0-length buffer is place-holder */
     1720     3467    3             END;
     1721     3468    2           ELSE
     1722     3469    3             DO;
     1723     3470    3               CALL VDG$OCOPY ( CURRENT$DATA,
     1724     3471    3                 NEW_CHAIN$ )
     1725     3472    3                 ALTRET ( SERIOUS_ERROR );
     1726     3473    3             END;
     1727     3474
     1728     3475                /* Find the element to be replaced in the chain */
     1729     3476    2           PREV_ELEMENT$ = ADDR(NIL);
     1730     3477    2           CURR_ELEMENT$ = NEW_CHAIN$;
     1731     3478
     1732     3479    3           DO I = NAME_SUBSCRIPT - 1 DOWNTO 0;
     1733     3480    3             IF CURR$ELEMENT.FLINK$ = ADDR(NIL)
     1734     3481    3             THEN
     1735     3482    4               DO;
     1736     3483    4                 CALL VDG$OALLOC ( %CLS_BUFFER,
     1737     3484    4                   CURR$ELEMENT.FLINK$,
     1738     3485    4                   SIZEW ( VD$BUFFER_HEADER ) )
     1739     3486    4                   ALTRET ( SERIOUS_ERROR );
     1740     3487    4                 CURR$ELEMENT.FLINK$->CURR$ELEMENT.LENGTH# = 0;
     1741     3488    4               END;
     1742     3489    3             PREV_ELEMENT$ = CURR_ELEMENT$;
     1743     3490    3             CURR_ELEMENT$ = PREV$ELEMENT.FLINK$;
     1744     3491    3           END;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:230  
     1745     3492
     1746     3493    2           IF PREV_ELEMENT$ = ADDR(NIL)
     1747     3494    2           THEN
     1748     3495    2             NEW_CHAIN$ = NAME_VALUE$;
     1749     3496    2           ELSE
     1750     3497    2             PREV$ELEMENT.FLINK$ = NAME_VALUE$;
     1751     3498    2           NAME$VALUE.FLINK$ = CURR$ELEMENT.FLINK$;
     1752     3499    2           CURR$ELEMENT.FLINK$ = ADDR(NIL);
     1753     3500
     1754     3501    2           CALL VDG$OFREE ( CURR$ELEMENT )
     1755     3502    2             ALTRET ( SERIOUS_ERROR );
     1756     3503
     1757     3504    2           NAME_VALUE$ = NEW_CHAIN$;
     1758     3505    2         END REPLACE_JUST_1_ELEMENT_IN_CHAIN;
     1759     3506
     1760     3507
     1761     3508    1       CALL VDA$LWRITE ( NAME$STREAM,
     1762     3509    1         NAME_LOCATION,
     1763     3510    1         SPEC,
     1764     3511    1         NAME$VALUE )
     1765     3512    1       WHENALTRETURN
     1766     3513    2         DO;
     1767     3514                /*
     1768     3515                *  The Accessor hasn't taken ownership of NAME$VALUE or SPEC:  free
     1769     3516                *   NAME$VALUE now (SERIOUS_ERROR will clear SPEC).
     1770     3517                */
     1771     3518    2           CALL VDG$OFREE ( NAME$VALUE ); /* Ignore altreturn */
     1772     3519    2           NAME_VALUE$ = ADDR(NIL);
     1773     3520    2           GOTO SERIOUS_ERROR;
     1774     3521    2         END;
     1775     3522
     1776     3523            /*
     1777     3524            *  The Accessor has taken ownership of NAME$VALUE and SPEC:  inform the
     1778     3525            *   caller of the change in NAME$VALUE status; clear SPEC to remind myself.
     1779     3526            */
     1780     3527    1       NAME_VALUE$ = ADDR(NIL);
     1781     3528    1       SPEC = %CLEAR;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:231  
     1782     3529
     1783     3530    1       CALL VDA$PFLUSH ( NAME$STREAM.PORT$ -> VD$PORT,
     1784     3531    1         %TO_PRESENTER )
     1785     3532    1         ALTRET ( SERIOUS_ERROR );
     1786     3533
     1787     3534    1       CALL VDG$OCLEAR_LOCATION ( NAME_LOCATION )
     1788     3535    1       WHENALTRETURN
     1789     3536    2         DO;
     1790     3537    2           ALTRETURN;
     1791     3538    2         END;
     1792     3539
     1793     3540    1       RETURN;
     1794     3541
     1795     3542    1   SERIOUS_ERROR:
     1796     3543            %CLEARSPEC (SPEC=SPEC);
     1797     3553    1       CALL VDG$OCLEAR_LOCATION (NAME_LOCATION)
     1798     3554    2       WHENALTRETURN DO; ALTRETURN; END;
     1799     3555    1       ALTRETURN;
     1800     3556
     1801     3557        %BOX (TITLE=CHECK_INTO_INTERNAL_FILE, PAGE=YES);
              3565    1
              3569    1   /***************************************************************************
              3571    1    *                                                                         *
              3575    1            *                          CHECK_INTO_INTERNAL_FILE                       *
              3577    1            *                                                                         *
              3579    1           ***************************************************************************/

     1802     3583
     1803     3584        /*I* NAME: CHECK_INTO_INTERNAL_FILE
     1804     3585            PARAMETERS:
     1805     3586                STREAM - VD$STREAM open to the Names file to check into.
     1806     3587                FOUND_NAME - Uninitialized BIT(1) ALIGNED.
     1807     3588                CURRENT_SPEC - Optional uninitialized VD$SPEC.
     1808     3589            INPUT:
     1809     3590                NAME_KEY - VD$TEXTC containing the name to look for.
     1810     3591                NAME_LOCATION - VD$LOCATION specifying the name to look for as a
     1811     3592                    %LVL_LOWER key.
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:232  
     1812     3593            OUTPUT:
     1813     3594                FOUND_NAME will be set %TRUE if the name was found in STREAM; %FALSE
     1814     3595                    otherwise.
     1815     3596                If name is found:
     1816     3597                    CURRENT_SPEC, if passed, will contain a copy of the name's current
     1817     3598                        Spec component.
     1818     3599                    STREAM.PORT$ -> VD$PORT will be positioned to the name, and will
     1819     3600                        have the name's current value in its .LEVELs.
     1820     3601            DESCRIPTION:
     1821     3602                Look for the name in STREAM.  If found and CURRENT_SPEC is passed,
     1822     3603                copy its Spec component for the caller to use.
     1823     3604        */
     1824     3605
     1825     3606    1   CHECK_INTO_INTERNAL_FILE: PROC ( STREAM,
     1826     3607    1         FOUND_NAME,
     1827     3608    1         CURRENT_SPEC )
     1828     3609    1         ALTRET;
     1829     3610
     1830     3611            %VD$STREAM ( NAME = STREAM,
     1831     3612            STCLASS = PARAM );
     1832     3718    2     DCL FOUND_NAME BIT(1) ALIGNED PARAM;
     1833     3719            %VD$SPEC ( NAME = CURRENT_SPEC, STCLASS = PARAM );
     1834     3733
     1835     3734
     1836     3735    2     DCL CURRENT_KEY$ PTR;
     1837     3736
     1838     3737
     1839     3738
     1840     3739    2       FOUND_NAME = %FALSE;
     1841     3740
     1842     3741    2       CALL VDA$LREAD ( STREAM,
     1843     3742    2         NAME_LOCATION,
     1844     3743    2         0 /* Relative position = stay there */,
     1845     3744    2         %TRUE /* Read, not just position */ )
     1846     3745    2       WHENALTRETURN
     1847     3746    3         DO;
     1848     3747    3           ALTRETURN;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:233  
     1849     3748    3         END;
     1850     3749
     1851     3750    2       IF NOT STREAM.CURRENT.EOF
     1852     3751    2       THEN
     1853     3752    3         DO;
     1854     3753                %GETKEY ( KEY = "STREAM.CURRENT.KEY",
     1855     3754                INDX = "%LVL_LOWER - 1",
     1856     3755                PTR = CURRENT_KEY$ );
     1857     3765
     1858     3766    3           IF NAME_KEY.BYTES = CURRENT_KEY$ -> VD$TEXTC.BYTES
     1859     3767    3           THEN
     1860     3768    3             FOUND_NAME = %TRUE;
     1861     3769    3         END;
     1862     3770
     1863     3771    2       IF FOUND_NAME AND ADDR(CURRENT_SPEC) ~= ADDR(NIL)
     1864     3772    2       THEN
     1865     3773    3         DO;
     1866     3774                %COPYSPEC ( FSPEC = "STREAM.PORT$ -> VD$PORT.LEVEL.SPEC",
     1867     3775                FINDX = %LVL_LOWER,
     1868     3776                TSPEC = CURRENT_SPEC );
     1869     3792    3         END;
     1870     3793
     1871     3794    2       RETURN;
     1872     3795
     1873     3796    2   END CHECK_INTO_INTERNAL_FILE;
     1874     3797
     1875     3798    1   END VDI$CUPDATE_NAME;

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:234  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CUPDATE_NAME.

   Procedure VDI$CUPDATE_NAME requires 473 words for executable code.
   Procedure VDI$CUPDATE_NAME requires 52 words of local(AUTO) storage.

    No errors detected in file VDI$COMMANDS_NON_EDITING.:VDA5TSI .

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:235  

 Object Unit name= VDI$CUPDATE_NAME                           File name= VDI$COMMANDS_NON_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:32:47.80 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   473    731  VDI$CUPDATE_NAME
    1  RoData even  none    10     12  VDI$CUPDATE_NAME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        4  VDI$CUPDATE_NAME

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       4 VDA$LWRITE
 yes     yes           Std       2 VDA$LDELETE
 yes     yes           Std       1 VDG$OFREE
         yes           Std       3 VDG$ESCREECH
 yes     yes           Std       2 VDG$OCOPY
 yes     yes           Std       1 VDG$OCLEAR_LOCATION
 yes     yes           Std       2 VDA$PFLUSH
 yes     yes           Std       4 VDA$LREAD
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:236  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:237  


     1424        1        /*M* VDI$CUPDATE_NAME - Update a EQUALS/KEYIN/LOCATION/SYNONYM name */
     1425        2        /*T***********************************************************/
     1426        3        /*T*                                                         */
     1427        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1428        5        /*T*                                                         */
     1429        6        /*T***********************************************************/
     1430        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
     1431        8
     1432        9        /*P* NAME:  VDI$CUPDATE_NAME
     1433       10            PURPOSE:
     1434       11                Update a EQUALS/KEYIN/LOCATION/SYNONYM name.
     1435       12            DESCRIPTION:
     1436       13                Given a key, a value, and an optional subscript, update the name in
     1437       14                the appropriate Names file.
     1438       15        */
     1439       16
     1440       17        /*D* NAME:  VDI$CUPDATE_NAME
     1441       18            PARAMETERS:
     1442       19                NAME$STREAM - VD$STREAM for the file which the name is to be
     1443       20                    defined in.
     1444       21                NAME_KEY - A VD$TEXTC which is the name itself, to be used as a key
     1445       22                    at level 1 of the appropriate Names file.
     1446       23                NAME_VALUE$ - Ptr to a VD$BUFFER which contains the value to be
     1447       24                    assigned to the name in the appropriate file.  Must be a single
     1448       25                    VD$BUFFER, ie, NAME$VALUE.FLINK$ must be NIL.
     1449       26                NAME_SUBSCRIPT - Optional SBIN containing the subscript which
     1450       27                    NAME_VALUE represents:  0 is the first value, 1 is the 2nd, etc.
     1451       28                    If NAME_SUBSCRIPT is not passed, then the entire current value of
     1452       29                    the name will be replaced with the single NAME_VALUE$ element, even
     1453       30                    if the value of the name currently is an array (chain of
     1454       31                    VD$BUFFERs).
     1455       32            INPUT:
     1456       33                VD_6E.EQUALS$, .KEYINS$, .LOCATIONS$, and .SYNONYMS$ must point to
     1457       34                    VD$STREAMs which are open to the appropriate file.
     1458       35            OUTPUT:
     1459       36                Update one, or possibly two, Names files.
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:238  
     1460       37                NAME_VALUE$ will be NIL, reflecting the fact that the VD$BUFFER it
     1461       38                    pointed to has either been freed or is now owned by the Accessor.
     1462       39            DESCRIPTION:
     1463       40                If the name isn't found in the Names file it's destined for, search
     1464       41                    for it in the other Names files.  If it's found within any of them,
     1465       42                    VDA$LDELETE it.
     1466       43                Then, VDA$LWRITE its (new) value to the requested Names file.
     1467       44        */
     1468       45
     1469       46        VDI$CUPDATE_NAME: PROC ( NAME$STREAM,

     46  0 000000   000000 700200 xent  VDI$CUPDATE* TSX0  ! X66_AUTO_4
         0 000001   000064 000004                    ZERO    52,4

     1470       47              NAME_KEY,
     1471       48              NAME_VALUE$,
     1472       49              NAME_SUBSCRIPT )
     1473       50              ALTRET;
     1474       51
     1475       52
     1476       53        %INCLUDE VD_MACROS_M;
     1477     2268
     1478     2269        %VD$STREAM (NAME=NAME$STREAM, STCLASS=PARAM);
     1479     2375        %VD$TEXTC ( NAME = NAME_KEY,
     1480     2376                    STCLASS = PARAM );
     1481     2399    1     DCL NAME_VALUE$ PTR PARAM;
     1482     2400    1     DCL NAME_SUBSCRIPT SBIN PARAM;
     1483     2401
     1484     2402        %VD_6E ( STCLASS = SYMREF );
     1485     2438
     1486     2439    1     DCL FOUND_FLAG BIT(1) ALIGNED;
     1487     2440        %VD$LOCATION ( NAME = NAME_LOCATION,
     1488     2441                       STCLASS = AUTO );
     1489     2469        %VD$RANGE ( NAME = NAME_DELETION_RANGE,
     1490     2470                    STCLASS = AUTO );
     1491     2539        %VD$SPEC ( NAME = SPEC,
     1492     2540                   STCLASS = AUTO );
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:239  
     1493     2554    1     DCL NEW_CHAIN$ PTR;
     1494     2555    1     DCL CURRENT_DATA$ PTR;
     1495     2556    1     DCL PREV_ELEMENT$ PTR;
     1496     2557    1     DCL CURR_ELEMENT$ PTR;
     1497     2558    1     DCL I SBIN;
     1498     2559
     1499     2560
     1500     2561        %VD$NAME_SPEC (NAME=NAME$SPEC, STCLASS="BASED(SPEC.V$)");
     1501     2609        %VD$BUFFER (NAME=NAME$VALUE, STCLASS="BASED(NAME_VALUE$)");
     1502     2667        %VD$BUFFER (NAME=NEW$CHAIN, STCLASS="BASED(NEW_CHAIN$)");
     1503     2725        %VD$BUFFER (NAME=CURRENT$DATA, STCLASS="BASED(CURRENT_DATA$)");
     1504     2783        %VD$BUFFER (NAME=CURR$ELEMENT, STCLASS="BASED(CURR_ELEMENT$)");
     1505     2841        %VD$BUFFER (NAME=PREV$ELEMENT, STCLASS="BASED(PREV_ELEMENT$)");
     1506     2899        %VD$BUFFER_HEADER;
     1507     2935        %VD$PORT;
     1508     3033        %VD$STREAM;
     1509     3139        %VD$TEXTC;
     1510     3162        %VD$TEXTC_REMOTE;
     1511     3223        %VD$STRING_HEADER;
     1512     3259
     1513     3260    1     DCL VDA$LDELETE ENTRY (2) ALTRET;
     1514     3261    1     DCL VDA$LREAD ENTRY (4) ALTRET;
     1515     3262    1     DCL VDA$LWRITE ENTRY (4) ALTRET;
     1516     3263    1     DCL VDA$PFLUSH ENTRY (2) ALTRET;
     1517     3264    1     DCL VDG$ESCREECH ENTRY (3);
     1518     3265    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
     1519     3266    1     DCL VDG$OCOPY ENTRY (2) ALTRET;
     1520     3267    1     DCL VDG$OCLEAR_LOCATION ENTRY (1) ALTRET;
     1521     3268    1     DCL VDG$OFREE ENTRY (1) ALTRET;
     1522     3269        %EJECT;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:240  
     1523     3270    1       SPEC = %CLEAR;

   3270  0 000002   200043 450100                    STZ     SPEC,,AUTO
         0 000003   200044 450100                    STZ     SPEC+1,,AUTO

     1524     3271
     1525     3272    1       NAME_LOCATION = %CLEAR;

   3272  0 000004   000100 100400                    MLR     fill='000'O
         0 000005   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000006   200010 000044                    ADSC9   NAME_LOCATION,,AUTO      cn=0,n=36

     1526     3273    1       NAME_LOCATION.KEY.TYPE# (%(LVL_LOWER-1)) = %KT_STRING;

   3273  0 000007   000002 220003                    LDX0    2,DU
         0 000010   200010 740100                    STX0    NAME_LOCATION,,AUTO

     1527     3274    1       NAME_LOCATION.KEY.REP# (%(LVL_LOWER-1)) = %REP_REMOTE;

   3274  0 000011   200010 440100                    SXL0    NAME_LOCATION,,AUTO

     1528     3275
     1529     3276    1       CALL VDG$OALLOC ( %CLS_TEXTC_REMOTE,

   3276  0 000012   200004 470500                    LDP0    @NAME_KEY,,AUTO
         0 000013   000000 236100                    LDQ     0,,PR0
         0 000014   000033 772000                    QRL     27
         0 000015   000017 036007                    ADLQ    15,DL
         0 000016   000002 772000                    QRL     2
         0 000017   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000020   200060 631500                    EPPR1   CURRENT_KEY$+2,,AUTO
         0 000021   200063 451500                    STP1    CURRENT_KEY$+5,,AUTO
         0 000022   200011 633500                    EPPR3   NAME_LOCATION+1,,AUTO
         0 000023   200062 453500                    STP3    CURRENT_KEY$+4,,AUTO
         0 000024   000001 236000 1                  LDQ     1
         0 000025   200061 756100                    STQ     CURRENT_KEY$+3,,AUTO
         0 000026   200061 630500                    EPPR0   CURRENT_KEY$+3,,AUTO
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:241  
         0 000027   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000030   000000 701000 xent               TSX1    VDG$OALLOC
         0 000031   000033 702000 0                  TSX2    s:3284
         0 000032   000034 710000 0                  TRA     s:3287

     1530     3277    1         NAME_LOCATION.KEY.V$ (%(LVL_LOWER-1)),
     1531     3278    1         ( SIZEC ( VD$STRING_HEADER )
     1532     3279    1         + NAME_KEY.LENGTH#
     1533     3280    1         + ( %NB_PER_WORD - 1 ) )
     1534     3281    1         / %NB_PER_WORD )
     1535     3282    1       WHENALTRETURN
     1536     3283    2         DO;

     1537     3284    2           ALTRETURN;

   3284  0 000033   000000 702200 xent               TSX2  ! X66_AALT

     1538     3285    2         END;
     1539     3286
     1540     3287    1       NAME_LOCATION.KEY.V$ (%(LVL_LOWER-1)) -> VD$TEXTC_REMOTE.LENGTH# =

   3287  0 000034   200004 470500                    LDP0    @NAME_KEY,,AUTO
         0 000035   200011 471500                    LDP1    NAME_LOCATION+1,,AUTO
         0 000036   000000 236100                    LDQ     0,,PR0
         0 000037   100002 552140                    STBQ    2,'40'O,PR1

     1541     3288    1         NAME_KEY.LENGTH#;
     1542     3289    1       NAME_LOCATION.KEY.V$ (%(LVL_LOWER-1)) -> VD$TEXTC_REMOTE.BYTES =

   3289  0 000040   200011 471500                    LDP1    NAME_LOCATION+1,,AUTO
         0 000041   100002 236100                    LDQ     2,,PR1
         0 000042   000033 772000                    QRL     27
         0 000043   000000 620006                    EAX0    0,QL
         0 000044   000000 236100                    LDQ     0,,PR0
         0 000045   000033 772000                    QRL     27
         0 000046   000000 621006                    EAX1    0,QL
         0 000047   040140 100540                    MLR     fill='040'O
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:242  
         0 000050   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         0 000051   100002 200010                    ADSC9   2,,PR1                   cn=1,n=*X0

     1543     3290    1         NAME_KEY.BYTES;
     1544     3291
     1545     3292    1       CALL CHECK_INTO_INTERNAL_FILE ( NAME$STREAM,

   3292  0 000052   200043 631500                    EPPR1   SPEC,,AUTO
         0 000053   200055 451500                    STP1    @FOUND_NAME+1,,AUTO
         0 000054   200007 633500                    EPPR3   FOUND_FLAG,,AUTO
         0 000055   200054 453500                    STP3    @STREAM+1,,AUTO
         0 000056   200003 236100                    LDQ     @NAME$STREAM,,AUTO
         0 000057   200053 756100                    STQ     I+2,,AUTO
         0 000060   000620 701000 0                  TSX1    CHECK_INTO_INTERNAL_FILE
         0 000061   000574 702000 0                  TSX2    SERIOUS_ERROR

     1546     3293    1         FOUND_FLAG,
     1547     3294    1         SPEC )
     1548     3295    1         ALTRET ( SERIOUS_ERROR );
     1549     3296
     1550     3297    1       NAME_DELETION_RANGE = %CLEAR;

   3297  0 000062   000100 100400                    MLR     fill='000'O
         0 000063   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000064   200021 000110                    ADSC9   NAME_DELETION_RANGE,,AUTO cn=0,n=72

     1551     3298    1       NAME_DELETION_RANGE.START = NAME_LOCATION;

   3298  0 000065   000100 100500                    MLR     fill='000'O
         0 000066   200010 000044                    ADSC9   NAME_LOCATION,,AUTO      cn=0,n=36
         0 000067   200021 000044                    ADSC9   NAME_DELETION_RANGE,,AUTO cn=0,n=36

     1552     3299    1       NAME_DELETION_RANGE.ENDD = NAME_LOCATION;

   3299  0 000070   000100 100500                    MLR     fill='000'O
         0 000071   200010 000044                    ADSC9   NAME_LOCATION,,AUTO      cn=0,n=36
         0 000072   200032 000044                    ADSC9   NAME_DELETION_RANGE+9,,AUTO cn=0,n=36
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:243  

     1553     3300
     1554     3301    2       IF NAME$VALUE.LENGTH# = 0 THEN DO;

   3301  0 000073   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000074   000000 471500                    LDP1    0,,PR0
         0 000075   100002 220100                    LDX0    2,,PR1
         0 000076   000132 601000 0                  TNZ     s:3316

     1555     3302    2           IF ADDR(NAME$STREAM) = VD_6E.EQUALS$ OR ADDR(NAME_SUBSCRIPT) ~= ADDR(NIL)

   3302  0 000077   200003 236100                    LDQ     @NAME$STREAM,,AUTO
         0 000100   000001 116000 xsym               CMPQ    VD_6E+1
         0 000101   000132 600000 0                  TZE     s:3316
         0 000102   200006 236100                    LDQ     @NAME_SUBSCRIPT,,AUTO
         0 000103   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000104   000132 601000 0                  TNZ     s:3316

     1556     3303    2           THEN EXIT;
     1557     3304    2           IF FOUND_FLAG

   3304  0 000105   200007 234100                    SZN     FOUND_FLAG,,AUTO
         0 000106   000117 605000 0                  TPL     s:3311

     1558     3305    2           THEN
     1559     3306    3             DO;

     1560     3307    3               CALL VDA$LDELETE (NAME$STREAM,

   3307  0 000107   200021 633500                    EPPR3   NAME_DELETION_RANGE,,AUTO
         0 000110   200061 453500                    STP3    CURRENT_KEY$+3,,AUTO
         0 000111   200003 236100                    LDQ     @NAME$STREAM,,AUTO
         0 000112   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000113   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000114   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000115   000000 701000 xent               TSX1    VDA$LDELETE
         0 000116   000574 702000 0                  TSX2    SERIOUS_ERROR
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:244  

     1561     3308    3                 NAME_DELETION_RANGE)
     1562     3309    3                 ALTRET (SERIOUS_ERROR);
     1563     3310    3             END;

     1564     3311    2           CALL VDG$OFREE (NAME$VALUE) ALTRET (SERIOUS_ERROR);

   3311  0 000117   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000120   000000 471500                    LDP1    0,,PR0
         0 000121   200060 451500                    STP1    CURRENT_KEY$+2,,AUTO
         0 000122   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000124   000000 701000 xent               TSX1    VDG$OFREE
         0 000125   000574 702000 0                  TSX2    SERIOUS_ERROR

     1565     3312    2           NAME_VALUE$ = ADDR(NIL);

   3312  0 000126   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000127   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000130   000000 756100                    STQ     0,,PR0

     1566     3313    2           RETURN;

   3313  0 000131   000000 702200 xent               TSX2  ! X66_ARET

     1567     3314    2         END;
     1568     3315
     1569     3316    1       IF FOUND_FLAG

   3316  0 000132   200007 234100                    SZN     FOUND_FLAG,,AUTO
         0 000133   000141 605000 0                  TPL     CHECK_OTHER_INTERNAL_FILES

     1570     3317    1       THEN
     1571     3318    2         DO;

     1572     3319    2           CURRENT_DATA$ = NAME$STREAM.PORT$ -> VD$PORT.LEVEL.DATA$ (%LVL_LOWER);

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:245  
   3319  0 000134   200003 473500                    LDP3    @NAME$STREAM,,AUTO
         0 000135   300001 474500                    LDP4    1,,PR3
         0 000136   400036 236100                    LDQ     30,,PR4
         0 000137   200046 756100                    STQ     CURRENT_DATA$,,AUTO

     1573     3320    2         END;

   3320  0 000140   000311 710000 0                  TRA     s:3411

     1574     3321
     1575     3322    1       ELSE
     1576     3323    1   CHECK_OTHER_INTERNAL_FILES:
     1577     3324    2         DO;

   3324  0 000141                       CHECK_OTHER* null
     1578     3325    2           CURRENT_DATA$ = ADDR(NIL);

   3325  0 000141   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000142   200046 756100                    STQ     CURRENT_DATA$,,AUTO

     1579     3326
     1580     3327                /*
     1581     3328                *   Allocate a new VD$NAME_SPEC for the name.
     1582     3329                */
     1583     3330    2           SPEC = %CLEAR;

   3330  0 000143   200043 450100                    STZ     SPEC,,AUTO
         0 000144   200044 450100                    STZ     SPEC+1,,AUTO

     1584     3331    2           SPEC.TYPE# = %SPT_NAME_SPEC;

   3331  0 000145   000003 220003                    LDX0    3,DU
         0 000146   200043 740100                    STX0    SPEC,,AUTO

     1585     3332    2           SPEC.REP# = %REP_REMOTE;

   3332  0 000147   000002 221003                    LDX1    2,DU
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:246  
         0 000150   200043 441100                    SXL1    SPEC,,AUTO

     1586     3333    2           CALL VDG$OALLOC ( %CLS_NAME_SPEC,

   3333  0 000151   200044 631500                    EPPR1   SPEC+1,,AUTO
         0 000152   200061 451500                    STP1    CURRENT_KEY$+3,,AUTO
         0 000153   000003 236000 1                  LDQ     3
         0 000154   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000155   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000156   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000157   000000 701000 xent               TSX1    VDG$OALLOC
         0 000160   000574 702000 0                  TSX2    SERIOUS_ERROR

     1587     3334    2             SPEC.V$ )
     1588     3335    2             ALTRET ( SERIOUS_ERROR );
     1589     3336
     1590     3337    2           IF ADDR(NAME$STREAM) ~= VD_6E.EQUALS$

   3337  0 000161   200003 236100                    LDQ     @NAME$STREAM,,AUTO
         0 000162   000001 116000 xsym               CMPQ    VD_6E+1
         0 000163   000207 600000 0                  TZE     s:3355

     1591     3338    2           THEN
     1592     3339    2   CHECK_EQUALS_FILE:
     1593     3340    3             DO;

   3340  0 000164                       CHECK_EQUAL* null
     1594     3341    3               CALL CHECK_INTO_INTERNAL_FILE ( VD_6E.EQUALS$ -> VD$STREAM,

   3341  0 000164   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000165   200055 756100                    STQ     @FOUND_NAME+1,,AUTO
         0 000166   200007 630500                    EPPR0   FOUND_FLAG,,AUTO
         0 000167   200054 450500                    STP0    @STREAM+1,,AUTO
         0 000170   000001 236000 xsym               LDQ     VD_6E+1
         0 000171   200053 756100                    STQ     I+2,,AUTO
         0 000172   000620 701000 0                  TSX1    CHECK_INTO_INTERNAL_FILE
         0 000173   000574 702000 0                  TSX2    SERIOUS_ERROR
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:247  

     1595     3342    3                 FOUND_FLAG )
     1596     3343    3                 ALTRET ( SERIOUS_ERROR );
     1597     3344    3               IF FOUND_FLAG

   3344  0 000174   200007 234100                    SZN     FOUND_FLAG,,AUTO
         0 000175   000207 605000 0                  TPL     s:3355

     1598     3345    3               THEN
     1599     3346    3   DELETE_FROM_EQUALS_FILE:
     1600     3347    4                 DO;

   3347  0 000176                       DELETE_FROM* null
     1601     3348    4                   CALL VDA$LDELETE ( VD_6E.EQUALS$ -> VD$STREAM,

   3348  0 000176   200021 630500                    EPPR0   NAME_DELETION_RANGE,,AUTO
         0 000177   200061 450500                    STP0    CURRENT_KEY$+3,,AUTO
         0 000200   000001 236000 xsym               LDQ     VD_6E+1
         0 000201   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000202   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000203   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000204   000000 701000 xent               TSX1    VDA$LDELETE
         0 000205   000574 702000 0                  TSX2    SERIOUS_ERROR

     1602     3349    4                     NAME_DELETION_RANGE )
     1603     3350    4                     ALTRET ( SERIOUS_ERROR );
     1604     3351    4                   EXIT CHECK_OTHER_INTERNAL_FILES;

   3351  0 000206   000311 710000 0                  TRA     s:3411

     1605     3352    4                 END DELETE_FROM_EQUALS_FILE;
     1606     3353    3             END CHECK_EQUALS_FILE;
     1607     3354
     1608     3355    2           IF ADDR(NAME$STREAM) ~= VD_6E.KEYINS$

   3355  0 000207   200003 236100                    LDQ     @NAME$STREAM,,AUTO
         0 000210   000004 116000 xsym               CMPQ    VD_6E+4
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:248  
         0 000211   000235 600000 0                  TZE     s:3373

     1609     3356    2           THEN
     1610     3357    2   CHECK_KEYINS_FILE:
     1611     3358    3             DO;

   3358  0 000212                       CHECK_KEYIN* null
     1612     3359    3               CALL CHECK_INTO_INTERNAL_FILE ( VD_6E.KEYINS$ -> VD$STREAM,

   3359  0 000212   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000213   200055 756100                    STQ     @FOUND_NAME+1,,AUTO
         0 000214   200007 630500                    EPPR0   FOUND_FLAG,,AUTO
         0 000215   200054 450500                    STP0    @STREAM+1,,AUTO
         0 000216   000004 236000 xsym               LDQ     VD_6E+4
         0 000217   200053 756100                    STQ     I+2,,AUTO
         0 000220   000620 701000 0                  TSX1    CHECK_INTO_INTERNAL_FILE
         0 000221   000574 702000 0                  TSX2    SERIOUS_ERROR

     1613     3360    3                 FOUND_FLAG )
     1614     3361    3                 ALTRET ( SERIOUS_ERROR );
     1615     3362    3               IF FOUND_FLAG

   3362  0 000222   200007 234100                    SZN     FOUND_FLAG,,AUTO
         0 000223   000235 605000 0                  TPL     s:3373

     1616     3363    3               THEN
     1617     3364    3   DELETE_FROM_KEYINS_FILE:
     1618     3365    4                 DO;

   3365  0 000224                       DELETE_FROM* null
     1619     3366    4                   CALL VDA$LDELETE ( VD_6E.KEYINS$ -> VD$STREAM,

   3366  0 000224   200021 630500                    EPPR0   NAME_DELETION_RANGE,,AUTO
         0 000225   200061 450500                    STP0    CURRENT_KEY$+3,,AUTO
         0 000226   000004 236000 xsym               LDQ     VD_6E+4
         0 000227   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000230   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:249  
         0 000231   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000232   000000 701000 xent               TSX1    VDA$LDELETE
         0 000233   000574 702000 0                  TSX2    SERIOUS_ERROR

     1620     3367    4                     NAME_DELETION_RANGE )
     1621     3368    4                     ALTRET ( SERIOUS_ERROR );
     1622     3369    4                   EXIT CHECK_OTHER_INTERNAL_FILES;

   3369  0 000234   000311 710000 0                  TRA     s:3411

     1623     3370    4                 END DELETE_FROM_KEYINS_FILE;
     1624     3371    3             END CHECK_KEYINS_FILE;
     1625     3372
     1626     3373    2           IF ADDR(NAME$STREAM) ~= VD_6E.LOCATIONS$

   3373  0 000235   200003 236100                    LDQ     @NAME$STREAM,,AUTO
         0 000236   000002 116000 xsym               CMPQ    VD_6E+2
         0 000237   000263 600000 0                  TZE     s:3391

     1627     3374    2           THEN
     1628     3375    2   CHECK_LOCATIONS_FILE:
     1629     3376    3             DO;

   3376  0 000240                       CHECK_LOCAT* null
     1630     3377    3               CALL CHECK_INTO_INTERNAL_FILE ( VD_6E.LOCATIONS$ -> VD$STREAM,

   3377  0 000240   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000241   200055 756100                    STQ     @FOUND_NAME+1,,AUTO
         0 000242   200007 630500                    EPPR0   FOUND_FLAG,,AUTO
         0 000243   200054 450500                    STP0    @STREAM+1,,AUTO
         0 000244   000002 236000 xsym               LDQ     VD_6E+2
         0 000245   200053 756100                    STQ     I+2,,AUTO
         0 000246   000620 701000 0                  TSX1    CHECK_INTO_INTERNAL_FILE
         0 000247   000574 702000 0                  TSX2    SERIOUS_ERROR

     1631     3378    3                 FOUND_FLAG )
     1632     3379    3                 ALTRET ( SERIOUS_ERROR );
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:250  
     1633     3380    3               IF FOUND_FLAG

   3380  0 000250   200007 234100                    SZN     FOUND_FLAG,,AUTO
         0 000251   000263 605000 0                  TPL     s:3391

     1634     3381    3               THEN
     1635     3382    3   DELETE_FROM_LOCATIONS_FILE:
     1636     3383    4                 DO;

   3383  0 000252                       DELETE_FROM* null
     1637     3384    4                   CALL VDA$LDELETE ( VD_6E.LOCATIONS$ -> VD$STREAM,

   3384  0 000252   200021 630500                    EPPR0   NAME_DELETION_RANGE,,AUTO
         0 000253   200061 450500                    STP0    CURRENT_KEY$+3,,AUTO
         0 000254   000002 236000 xsym               LDQ     VD_6E+2
         0 000255   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000256   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000257   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000260   000000 701000 xent               TSX1    VDA$LDELETE
         0 000261   000574 702000 0                  TSX2    SERIOUS_ERROR

     1638     3385    4                     NAME_DELETION_RANGE )
     1639     3386    4                     ALTRET ( SERIOUS_ERROR );
     1640     3387    4                   EXIT CHECK_OTHER_INTERNAL_FILES;

   3387  0 000262   000311 710000 0                  TRA     s:3411

     1641     3388    4                 END DELETE_FROM_LOCATIONS_FILE;
     1642     3389    3             END CHECK_LOCATIONS_FILE;
     1643     3390
     1644     3391    2           IF ADDR(NAME$STREAM) ~= VD_6E.SYNONYMS$

   3391  0 000263   200003 236100                    LDQ     @NAME$STREAM,,AUTO
         0 000264   000003 116000 xsym               CMPQ    VD_6E+3
         0 000265   000311 600000 0                  TZE     s:3411

     1645     3392    2           THEN
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:251  
     1646     3393    2   CHECK_SYNONYMS_FILE:
     1647     3394    3             DO;

   3394  0 000266                       CHECK_SYNON* null
     1648     3395    3               CALL CHECK_INTO_INTERNAL_FILE ( VD_6E.SYNONYMS$ -> VD$STREAM,

   3395  0 000266   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000267   200055 756100                    STQ     @FOUND_NAME+1,,AUTO
         0 000270   200007 630500                    EPPR0   FOUND_FLAG,,AUTO
         0 000271   200054 450500                    STP0    @STREAM+1,,AUTO
         0 000272   000003 236000 xsym               LDQ     VD_6E+3
         0 000273   200053 756100                    STQ     I+2,,AUTO
         0 000274   000620 701000 0                  TSX1    CHECK_INTO_INTERNAL_FILE
         0 000275   000574 702000 0                  TSX2    SERIOUS_ERROR

     1649     3396    3                 FOUND_FLAG )
     1650     3397    3                 ALTRET ( SERIOUS_ERROR );
     1651     3398    3               IF FOUND_FLAG

   3398  0 000276   200007 234100                    SZN     FOUND_FLAG,,AUTO
         0 000277   000311 605000 0                  TPL     s:3411

     1652     3399    3               THEN
     1653     3400    3   DELETE_FROM_SYNONYMS_FILE:
     1654     3401    4                 DO;

   3401  0 000300                       DELETE_FROM* null
     1655     3402    4                   CALL VDA$LDELETE ( VD_6E.SYNONYMS$ -> VD$STREAM,

   3402  0 000300   200021 630500                    EPPR0   NAME_DELETION_RANGE,,AUTO
         0 000301   200061 450500                    STP0    CURRENT_KEY$+3,,AUTO
         0 000302   000003 236000 xsym               LDQ     VD_6E+3
         0 000303   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000304   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000305   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000306   000000 701000 xent               TSX1    VDA$LDELETE
         0 000307   000574 702000 0                  TSX2    SERIOUS_ERROR
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:252  

     1656     3403    4                     NAME_DELETION_RANGE )
     1657     3404    4                     ALTRET ( SERIOUS_ERROR );
     1658     3405    4                   EXIT CHECK_OTHER_INTERNAL_FILES;

   3405  0 000310   000311 710000 0                  TRA     s:3411

     1659     3406    4                 END DELETE_FROM_SYNONYMS_FILE;
     1660     3407    3             END CHECK_SYNONYMS_FILE;
     1661     3408
     1662     3409    2         END CHECK_OTHER_INTERNAL_FILES;
     1663     3410
     1664     3411    1       IF SPEC.V$ = ADDR (NIL)

   3411  0 000311   200044 236100                    LDQ     SPEC+1,,AUTO
         0 000312   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000313   000317 601000 0                  TNZ     s:3424

     1665     3412    1       THEN
     1666     3413    1         CALL VDG$ESCREECH;

   3413  0 000314   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000315   000000 701000 xent               TSX1    VDG$ESCREECH
         0 000316   000000 011000                    NOP     0

     1667     3414
     1668     3415            /*
     1669     3416            *  Either:
     1670     3417            *     We found the name in the NAME_STREAM file, in which case
     1671     3418            *        SPEC contains the name's current Spec component; or
     1672     3419            *     The name isn't in the NAME_STREAM file, in which case
     1673     3420            *        we've created an initially %CLEAR VD$NAME_SPEC for it.
     1674     3421            *  Set the requested data type in the name's Spec.
     1675     3422            */
     1676     3423
     1677     3424    1       IF ADDR(NAME$STREAM) = VD_6E.EQUALS$

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:253  
   3424  0 000317   200003 236100                    LDQ     @NAME$STREAM,,AUTO
         0 000320   000001 116000 xsym               CMPQ    VD_6E+1
         0 000321   000326 601000 0                  TNZ     s:3428

     1678     3425    1       THEN
     1679     3426    1         NAME$SPEC.DATA_TYPE# = %NDT_EQUALS;

   3426  0 000322   000001 220003                    LDX0    1,DU
         0 000323   200044 470500                    LDP0    SPEC+1,,AUTO
         0 000324   000002 440100                    SXL0    2,,PR0
         0 000325   000356 710000 0                  TRA     s:3451

     1680     3427    1       ELSE
     1681     3428    1         IF ADDR(NAME$STREAM) = VD_6E.KEYINS$

   3428  0 000326   000004 116000 xsym               CMPQ    VD_6E+4
         0 000327   000337 601000 0                  TNZ     s:3435

     1682     3429    1         THEN
     1683     3430    2           DO;

     1684     3431    2             NAME$SPEC.DATA_TYPE# = %NDT_KEYIN;

   3431  0 000330   000004 220003                    LDX0    4,DU
         0 000331   200044 470500                    LDP0    SPEC+1,,AUTO
         0 000332   000002 440100                    SXL0    2,,PR0

     1685     3432    2             NAME$SPEC.WINDOWABLE = %TRUE; /* All KEYINs can be window-specific */

   3432  0 000333   200044 470500                    LDP0    SPEC+1,,AUTO
         0 000334   400000 236007                    LDQ     -131072,DL
         0 000335   000003 256100                    ORSQ    3,,PR0

     1686     3433    2           END;

   3433  0 000336   000356 710000 0                  TRA     s:3451

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:254  
     1687     3434    1         ELSE
     1688     3435    1           IF ADDR(NAME$STREAM) = VD_6E.LOCATIONS$

   3435  0 000337   000002 116000 xsym               CMPQ    VD_6E+2
         0 000340   000345 601000 0                  TNZ     s:3439

     1689     3436    1           THEN
     1690     3437    1             NAME$SPEC.DATA_TYPE# = %NDT_LOCATION;

   3437  0 000341   000002 220003                    LDX0    2,DU
         0 000342   200044 470500                    LDP0    SPEC+1,,AUTO
         0 000343   000002 440100                    SXL0    2,,PR0
         0 000344   000356 710000 0                  TRA     s:3451

     1691     3438    1           ELSE
     1692     3439    1             IF ADDR(NAME$STREAM) = VD_6E.SYNONYMS$

   3439  0 000345   000003 116000 xsym               CMPQ    VD_6E+3
         0 000346   000353 601000 0                  TNZ     s:3443

     1693     3440    1             THEN
     1694     3441    1               NAME$SPEC.DATA_TYPE# = %NDT_SYNONYM;

   3441  0 000347   000003 220003                    LDX0    3,DU
         0 000350   200044 470500                    LDP0    SPEC+1,,AUTO
         0 000351   000002 440100                    SXL0    2,,PR0
         0 000352   000356 710000 0                  TRA     s:3451

     1695     3442    1             ELSE
     1696     3443    1               CALL VDG$ESCREECH;

   3443  0 000353   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000354   000000 701000 xent               TSX1    VDG$ESCREECH
         0 000355   000000 011000                    NOP     0

     1697     3444
     1698     3445            /*
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:255  
     1699     3446            *   If NAME_SUBSCRIPT is passed, make a copy of the name's current Data
     1700     3447            *   component and insert NAME_VALUE into the appropriate place in the
     1701     3448            *   VD$BUFFER chain, possibly replacing an existing element.
     1702     3449            */
     1703     3450
     1704     3451    1       IF ADDR(NAME_SUBSCRIPT) ~= ADDR(NIL)

   3451  0 000356   200006 236100                    LDQ     @NAME_SUBSCRIPT,,AUTO
         0 000357   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000360   000514 600000 0                  TZE     s:3508

     1705     3452    1       THEN
     1706     3453    1   REPLACE_JUST_1_ELEMENT_IN_CHAIN:
     1707     3454    2         DO;

   3454  0 000361                       REPLACE_JUS* null
     1708     3455    2           IF NAME_SUBSCRIPT < 0

   3455  0 000361   200006 470500                    LDP0    @NAME_SUBSCRIPT,,AUTO
         0 000362   000000 235100                    LDA     0,,PR0
         0 000363   000370 605000 0                  TPL     s:3459

     1709     3456    2           THEN
     1710     3457    2             CALL VDG$ESCREECH (NAME_SUBSCRIPT);

   3457  0 000364   200006 630500                    EPPR0   @NAME_SUBSCRIPT,,AUTO
         0 000365   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000366   000000 701000 xent               TSX1    VDG$ESCREECH
         0 000367   000000 011000                    NOP     0

     1711     3458
     1712     3459    2           IF CURRENT_DATA$ = ADDR(NIL)

   3459  0 000370   200046 236100                    LDQ     CURRENT_DATA$,,AUTO
         0 000371   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000372   000411 601000 0                  TNZ     s:3470

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:256  
     1713     3460    2           THEN
     1714     3461    3             DO;

     1715     3462    3               CALL VDG$OALLOC (%CLS_BUFFER,

   3462  0 000373   000004 236000 1                  LDQ     4
         0 000374   200062 756100                    STQ     CURRENT_KEY$+4,,AUTO
         0 000375   200045 630500                    EPPR0   NEW_CHAIN$,,AUTO
         0 000376   200061 450500                    STP0    CURRENT_KEY$+3,,AUTO
         0 000377   000005 236000 1                  LDQ     5
         0 000400   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000401   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000402   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000403   000000 701000 xent               TSX1    VDG$OALLOC
         0 000404   000574 702000 0                  TSX2    SERIOUS_ERROR

     1716     3463    3                 NEW_CHAIN$,
     1717     3464    3                 SIZEW ( VD$BUFFER_HEADER ) )
     1718     3465    3                 ALTRET ( SERIOUS_ERROR );
     1719     3466    3               NEW$CHAIN.LENGTH# = 0;  /* 0-length buffer is place-holder */

   3466  0 000405   000000 220003                    LDX0    0,DU
         0 000406   200045 470500                    LDP0    NEW_CHAIN$,,AUTO
         0 000407   000002 740100                    STX0    2,,PR0

     1720     3467    3             END;

   3467  0 000410   000420 710000 0                  TRA     s:3476

     1721     3468    2           ELSE
     1722     3469    3             DO;

     1723     3470    3               CALL VDG$OCOPY ( CURRENT$DATA,

   3470  0 000411   200045 630500                    EPPR0   NEW_CHAIN$,,AUTO
         0 000412   200061 450500                    STP0    CURRENT_KEY$+3,,AUTO
         0 000413   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:257  
         0 000414   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000415   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000416   000000 701000 xent               TSX1    VDG$OCOPY
         0 000417   000574 702000 0                  TSX2    SERIOUS_ERROR

     1724     3471    3                 NEW_CHAIN$ )
     1725     3472    3                 ALTRET ( SERIOUS_ERROR );
     1726     3473    3             END;

     1727     3474
     1728     3475                /* Find the element to be replaced in the chain */
     1729     3476    2           PREV_ELEMENT$ = ADDR(NIL);

   3476  0 000420   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000421   200047 756100                    STQ     PREV_ELEMENT$,,AUTO

     1730     3477    2           CURR_ELEMENT$ = NEW_CHAIN$;

   3477  0 000422   200045 236100                    LDQ     NEW_CHAIN$,,AUTO
         0 000423   200050 756100                    STQ     CURR_ELEMENT$,,AUTO

     1731     3478
     1732     3479    3           DO I = NAME_SUBSCRIPT - 1 DOWNTO 0;

   3479  0 000424   200006 470500                    LDP0    @NAME_SUBSCRIPT,,AUTO
         0 000425   000000 235100                    LDA     0,,PR0
         0 000426   000001 135007                    SBLA    1,DL
         0 000427   200051 755100                    STA     I,,AUTO
         0 000430   000462 710000 0                  TRA     s:3491+2

     1733     3480    3             IF CURR$ELEMENT.FLINK$ = ADDR(NIL)

   3480  0 000431   200050 470500                    LDP0    CURR_ELEMENT$,,AUTO
         0 000432   000001 236100                    LDQ     1,,PR0
         0 000433   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000434   000453 601000 0                  TNZ     s:3489

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:258  
     1734     3481    3             THEN
     1735     3482    4               DO;

     1736     3483    4                 CALL VDG$OALLOC ( %CLS_BUFFER,

   3483  0 000435   000004 236000 1                  LDQ     4
         0 000436   200062 756100                    STQ     CURRENT_KEY$+4,,AUTO
         0 000437   200050 236100                    LDQ     CURR_ELEMENT$,,AUTO
         0 000440   000001 036003                    ADLQ    1,DU
         0 000441   000005 235000 1                  LDA     5
         0 000442   200060 757100                    STAQ    CURRENT_KEY$+2,,AUTO
         0 000443   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000444   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000445   000000 701000 xent               TSX1    VDG$OALLOC
         0 000446   000574 702000 0                  TSX2    SERIOUS_ERROR

     1737     3484    4                   CURR$ELEMENT.FLINK$,
     1738     3485    4                   SIZEW ( VD$BUFFER_HEADER ) )
     1739     3486    4                   ALTRET ( SERIOUS_ERROR );
     1740     3487    4                 CURR$ELEMENT.FLINK$->CURR$ELEMENT.LENGTH# = 0;

   3487  0 000447   200050 470500                    LDP0    CURR_ELEMENT$,,AUTO
         0 000450   000001 471500                    LDP1    1,,PR0
         0 000451   000000 220003                    LDX0    0,DU
         0 000452   100002 740100                    STX0    2,,PR1

     1741     3488    4               END;

     1742     3489    3             PREV_ELEMENT$ = CURR_ELEMENT$;

   3489  0 000453   200050 236100                    LDQ     CURR_ELEMENT$,,AUTO
         0 000454   200047 756100                    STQ     PREV_ELEMENT$,,AUTO

     1743     3490    3             CURR_ELEMENT$ = PREV$ELEMENT.FLINK$;

   3490  0 000455   200047 471500                    LDP1    PREV_ELEMENT$,,AUTO
         0 000456   100001 236100                    LDQ     1,,PR1
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:259  
         0 000457   200050 756100                    STQ     CURR_ELEMENT$,,AUTO

     1744     3491    3           END;

   3491  0 000460   000001 336007                    LCQ     1,DL
         0 000461   200051 056100                    ASQ     I,,AUTO
         0 000462   200051 235100                    LDA     I,,AUTO
         0 000463   000431 605000 0                  TPL     s:3480

     1745     3492
     1746     3493    2           IF PREV_ELEMENT$ = ADDR(NIL)

   3493  0 000464   200047 236100                    LDQ     PREV_ELEMENT$,,AUTO
         0 000465   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000466   000473 601000 0                  TNZ     s:3497

     1747     3494    2           THEN
     1748     3495    2             NEW_CHAIN$ = NAME_VALUE$;

   3495  0 000467   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000470   000000 236100                    LDQ     0,,PR0
         0 000471   200045 756100                    STQ     NEW_CHAIN$,,AUTO
         0 000472   000477 710000 0                  TRA     s:3498

     1749     3496    2           ELSE
     1750     3497    2             PREV$ELEMENT.FLINK$ = NAME_VALUE$;

   3497  0 000473   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000474   000000 236100                    LDQ     0,,PR0
         0 000475   200047 471500                    LDP1    PREV_ELEMENT$,,AUTO
         0 000476   100001 756100                    STQ     1,,PR1

     1751     3498    2           NAME$VALUE.FLINK$ = CURR$ELEMENT.FLINK$;

   3498  0 000477   000000 471500                    LDP1    0,,PR0
         0 000500   200050 473500                    LDP3    CURR_ELEMENT$,,AUTO
         0 000501   300001 236100                    LDQ     1,,PR3
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:260  
         0 000502   100001 756100                    STQ     1,,PR1

     1752     3499    2           CURR$ELEMENT.FLINK$ = ADDR(NIL);

   3499  0 000503   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000504   300001 756100                    STQ     1,,PR3

     1753     3500
     1754     3501    2           CALL VDG$OFREE ( CURR$ELEMENT )

   3501  0 000505   200050 630500                    EPPR0   CURR_ELEMENT$,,AUTO
         0 000506   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000507   000000 701000 xent               TSX1    VDG$OFREE
         0 000510   000574 702000 0                  TSX2    SERIOUS_ERROR

     1755     3502    2             ALTRET ( SERIOUS_ERROR );
     1756     3503
     1757     3504    2           NAME_VALUE$ = NEW_CHAIN$;

   3504  0 000511   200045 236100                    LDQ     NEW_CHAIN$,,AUTO
         0 000512   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000513   000000 756100                    STQ     0,,PR0

     1758     3505    2         END REPLACE_JUST_1_ELEMENT_IN_CHAIN;

     1759     3506
     1760     3507
     1761     3508    1       CALL VDA$LWRITE ( NAME$STREAM,

   3508  0 000514   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000515   000000 471500                    LDP1    0,,PR0
         0 000516   200063 451500                    STP1    CURRENT_KEY$+5,,AUTO
         0 000517   200043 633500                    EPPR3   SPEC,,AUTO
         0 000520   200062 453500                    STP3    CURRENT_KEY$+4,,AUTO
         0 000521   200010 634500                    EPPR4   NAME_LOCATION,,AUTO
         0 000522   200061 454500                    STP4    CURRENT_KEY$+3,,AUTO
         0 000523   200003 236100                    LDQ     @NAME$STREAM,,AUTO
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:261  
         0 000524   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000525   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000526   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000527   000000 701000 xent               TSX1    VDA$LWRITE
         0 000530   000532 702000 0                  TSX2    s:3518
         0 000531   000545 710000 0                  TRA     s:3527

     1762     3509    1         NAME_LOCATION,
     1763     3510    1         SPEC,
     1764     3511    1         NAME$VALUE )
     1765     3512    1       WHENALTRETURN
     1766     3513    2         DO;

     1767     3514                /*
     1768     3515                *  The Accessor hasn't taken ownership of NAME$VALUE or SPEC:  free
     1769     3516                *   NAME$VALUE now (SERIOUS_ERROR will clear SPEC).
     1770     3517                */
     1771     3518    2           CALL VDG$OFREE ( NAME$VALUE ); /* Ignore altreturn */

   3518  0 000532   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000533   000000 471500                    LDP1    0,,PR0
         0 000534   200060 451500                    STP1    CURRENT_KEY$+2,,AUTO
         0 000535   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000536   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000537   000000 701000 xent               TSX1    VDG$OFREE
         0 000540   000000 011000                    NOP     0

     1772     3519    2           NAME_VALUE$ = ADDR(NIL);

   3519  0 000541   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000542   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000543   000000 756100                    STQ     0,,PR0

     1773     3520    2           GOTO SERIOUS_ERROR;

   3520  0 000544   000574 710000 0                  TRA     SERIOUS_ERROR

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:262  
     1774     3521    2         END;
     1775     3522
     1776     3523            /*
     1777     3524            *  The Accessor has taken ownership of NAME$VALUE and SPEC:  inform the
     1778     3525            *   caller of the change in NAME$VALUE status; clear SPEC to remind myself.
     1779     3526            */
     1780     3527    1       NAME_VALUE$ = ADDR(NIL);

   3527  0 000545   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000546   200005 470500                    LDP0    @NAME_VALUE$,,AUTO
         0 000547   000000 756100                    STQ     0,,PR0

     1781     3528    1       SPEC = %CLEAR;

   3528  0 000550   200043 450100                    STZ     SPEC,,AUTO
         0 000551   200044 450100                    STZ     SPEC+1,,AUTO

     1782     3529
     1783     3530    1       CALL VDA$PFLUSH ( NAME$STREAM.PORT$ -> VD$PORT,

   3530  0 000552   200003 471500                    LDP1    @NAME$STREAM,,AUTO
         0 000553   100001 473500                    LDP3    1,,PR1
         0 000554   000006 236000 1                  LDQ     6
         0 000555   200061 756100                    STQ     CURRENT_KEY$+3,,AUTO
         0 000556   200060 453500                    STP3    CURRENT_KEY$+2,,AUTO
         0 000557   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000560   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000561   000000 701000 xent               TSX1    VDA$PFLUSH
         0 000562   000574 702000 0                  TSX2    SERIOUS_ERROR

     1784     3531    1         %TO_PRESENTER )
     1785     3532    1         ALTRET ( SERIOUS_ERROR );
     1786     3533
     1787     3534    1       CALL VDG$OCLEAR_LOCATION ( NAME_LOCATION )

   3534  0 000563   200010 630500                    EPPR0   NAME_LOCATION,,AUTO
         0 000564   200060 450500                    STP0    CURRENT_KEY$+2,,AUTO
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:263  
         0 000565   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000566   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000567   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 000570   000572 702000 0                  TSX2    s:3537
         0 000571   000573 710000 0                  TRA     s:3540

     1788     3535    1       WHENALTRETURN
     1789     3536    2         DO;

     1790     3537    2           ALTRETURN;

   3537  0 000572   000000 702200 xent               TSX2  ! X66_AALT

     1791     3538    2         END;
     1792     3539
     1793     3540    1       RETURN;

   3540  0 000573   000000 702200 xent               TSX2  ! X66_ARET

     1794     3541
     1795     3542    1   SERIOUS_ERROR:
     1796     3543            %CLEARSPEC (SPEC=SPEC);

   3550  0 000574   200043 720100       SERIOUS_ERR* LXL0    SPEC,,AUTO
         0 000575   000002 100003                    CMPX0   2,DU
         0 000576   000605 601000 0                  TNZ     s:3551+1

   3550  0 000577   200044 630500                    EPPR0   SPEC+1,,AUTO
         0 000600   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000601   000000 701000 xent               TSX1    VDG$OFREE
         0 000602   000604 702000 0                  TSX2    s:3551
         0 000603   000605 710000 0                  TRA     s:3551+1

   3551  0 000604   000000 702200 xent               TSX2  ! X66_AALT

   3551  0 000605   200043 450100                    STZ     SPEC,,AUTO
         0 000606   200044 450100                    STZ     SPEC+1,,AUTO
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:264  

     1797     3553    1       CALL VDG$OCLEAR_LOCATION (NAME_LOCATION)

   3553  0 000607   200010 630500                    EPPR0   NAME_LOCATION,,AUTO
         0 000610   200060 450500                    STP0    CURRENT_KEY$+2,,AUTO
         0 000611   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000612   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000613   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 000614   000616 702000 0                  TSX2    s:3554
         0 000615   000617 710000 0                  TRA     s:3555

     1798     3554    2       WHENALTRETURN DO; ALTRETURN; END;

   3554  0 000616   000000 702200 xent               TSX2  ! X66_AALT

     1799     3555    1       ALTRETURN;

   3555  0 000617   000000 702200 xent               TSX2  ! X66_AALT

     1800     3556
     1801     3557        %BOX (TITLE=CHECK_INTO_INTERNAL_FILE, PAGE=YES);
              3565    1
              3569    1   /***************************************************************************
              3571    1    *                                                                         *
              3575    1            *                          CHECK_INTO_INTERNAL_FILE                      *
              3577    1            *                                                                        *
              3579    1          ***************************************************************************/

     1802     3583
     1803     3584        /*I* NAME: CHECK_INTO_INTERNAL_FILE
     1804     3585            PARAMETERS:
     1805     3586                STREAM - VD$STREAM open to the Names file to check into.
     1806     3587                FOUND_NAME - Uninitialized BIT(1) ALIGNED.
     1807     3588                CURRENT_SPEC - Optional uninitialized VD$SPEC.
     1808     3589            INPUT:
     1809     3590                NAME_KEY - VD$TEXTC containing the name to look for.
     1810     3591                NAME_LOCATION - VD$LOCATION specifying the name to look for as a
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:265  
     1811     3592                    %LVL_LOWER key.
     1812     3593            OUTPUT:
     1813     3594                FOUND_NAME will be set %TRUE if the name was found in STREAM; %FALSE
     1814     3595                    otherwise.
     1815     3596                If name is found:
     1816     3597                    CURRENT_SPEC, if passed, will contain a copy of the name's current
     1817     3598                        Spec component.
     1818     3599                    STREAM.PORT$ -> VD$PORT will be positioned to the name, and will
     1819     3600                        have the name's current value in its .LEVELs.
     1820     3601            DESCRIPTION:
     1821     3602                Look for the name in STREAM.  If found and CURRENT_SPEC is passed,
     1822     3603                copy its Spec component for the caller to use.
     1823     3604        */
     1824     3605
     1825     3606    1   CHECK_INTO_INTERNAL_FILE: PROC ( STREAM,

   3606  0 000620   200052 741300       CHECK_INTO_* STX1  ! I+1,,AUTO

     1826     3607    1         FOUND_NAME,
     1827     3608    1         CURRENT_SPEC )
     1828     3609    1         ALTRET;
     1829     3610
     1830     3611            %VD$STREAM ( NAME = STREAM,
     1831     3612            STCLASS = PARAM );
     1832     3718    2     DCL FOUND_NAME BIT(1) ALIGNED PARAM;
     1833     3719            %VD$SPEC ( NAME = CURRENT_SPEC, STCLASS = PARAM );
     1834     3733
     1835     3734
     1836     3735    2     DCL CURRENT_KEY$ PTR;
     1837     3736
     1838     3737
     1839     3738
     1840     3739    2       FOUND_NAME = %FALSE;

   3739  0 000621   200054 470500                    LDP0    @FOUND_NAME,,AUTO
         0 000622   000000 450100                    STZ     0,,PR0

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:266  
     1841     3740
     1842     3741    2       CALL VDA$LREAD ( STREAM,

   3741  0 000623   000010 237000 1                  LDAQ    8
         0 000624   200062 757100                    STAQ    CURRENT_KEY$+4,,AUTO
         0 000625   200010 631500                    EPPR1   NAME_LOCATION,,AUTO
         0 000626   200061 451500                    STP1    CURRENT_KEY$+3,,AUTO
         0 000627   200053 236100                    LDQ     @STREAM,,AUTO
         0 000630   200060 756100                    STQ     CURRENT_KEY$+2,,AUTO
         0 000631   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000632   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000633   000000 701000 xent               TSX1    VDA$LREAD
         0 000634   000636 702000 0                  TSX2    s:3747
         0 000635   000640 710000 0                  TRA     s:3750

     1843     3742    2         NAME_LOCATION,
     1844     3743    2         0 /* Relative position = stay there */,
     1845     3744    2         %TRUE /* Read, not just position */ )
     1846     3745    2       WHENALTRETURN
     1847     3746    3         DO;

     1848     3747    3           ALTRETURN;

   3747  0 000636   200052 221300                    LDX1  ! I+1,,AUTO
         0 000637   000000 702211                    TSX2  ! 0,X1

     1849     3748    3         END;
     1850     3749
     1851     3750    2       IF NOT STREAM.CURRENT.EOF

   3750  0 000640   200053 470500                    LDP0    @STREAM,,AUTO
         0 000641   000016 236100                    LDQ     14,,PR0
         0 000642   400000 316007                    CANQ    -131072,DL
         0 000643   000675 601000 0                  TNZ     s:3771

     1852     3751    2       THEN
     1853     3752    3         DO;
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:267  

     1854     3753                %GETKEY ( KEY = "STREAM.CURRENT.KEY",
     1855     3754                INDX = "%LVL_LOWER - 1",
     1856     3755                PTR = CURRENT_KEY$ );

   3762  0 000644   000006 720100                    LXL0    6,,PR0
         0 000645   000002 100003                    CMPX0   2,DU
         0 000646   000653 601000 0                  TNZ     s:3762+7

   3762  0 000647   000007 471500                    LDP1    7,,PR0
         0 000650   100002 633500                    EPPR3   2,,PR1
         0 000651   200056 453500                    STP3    CURRENT_KEY$,,AUTO
         0 000652   000656 710000 0                  TRA     s:3766

   3762  0 000653   200053 236100                    LDQ     @STREAM,,AUTO
         0 000654   000007 036003                    ADLQ    7,DU
         0 000655   200056 756100                    STQ     CURRENT_KEY$,,AUTO

     1857     3765
     1858     3766    3           IF NAME_KEY.BYTES = CURRENT_KEY$ -> VD$TEXTC.BYTES

   3766  0 000656   200004 471500                    LDP1    @NAME_KEY,,AUTO
         0 000657   100000 236100                    LDQ     0,,PR1
         0 000660   000033 772000                    QRL     27
         0 000661   200056 473500                    LDP3    CURRENT_KEY$,,AUTO
         0 000662   000000 621006                    EAX1    0,QL
         0 000663   300000 236100                    LDQ     0,,PR3
         0 000664   000033 772000                    QRL     27
         0 000665   000000 622006                    EAX2    0,QL
         0 000666   040140 106540                    CMPC    fill='040'O
         0 000667   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         0 000670   300000 200012                    ADSC9   0,,PR3                   cn=1,n=*X2
         0 000671   000675 601000 0                  TNZ     s:3771

     1859     3767    3           THEN
     1860     3768    3             FOUND_NAME = %TRUE;

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:268  
   3768  0 000672   400000 236003                    LDQ     -131072,DU
         0 000673   200054 474500                    LDP4    @FOUND_NAME,,AUTO
         0 000674   400000 756100                    STQ     0,,PR4

     1861     3769    3         END;

     1862     3770
     1863     3771    2       IF FOUND_NAME AND ADDR(CURRENT_SPEC) ~= ADDR(NIL)

   3771  0 000675   200054 471500                    LDP1    @FOUND_NAME,,AUTO
         0 000676   100000 234100                    SZN     0,,PR1
         0 000677   000727 605000 0                  TPL     s:3794
         0 000700   200055 236100                    LDQ     @CURRENT_SPEC,,AUTO
         0 000701   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000702   000727 600000 0                  TZE     s:3794

     1864     3772    2       THEN
     1865     3773    3         DO;

     1866     3774                %COPYSPEC ( FSPEC = "STREAM.PORT$ -> VD$PORT.LEVEL.SPEC",
     1867     3775                FINDX = %LVL_LOWER,
     1868     3776                TSPEC = CURRENT_SPEC );

   3789  0 000703   000001 473500                    LDP3    1,,PR0
         0 000704   200055 474500                    LDP4    @CURRENT_SPEC,,AUTO
         0 000705   000100 100500                    MLR     fill='000'O
         0 000706   300034 000010                    ADSC9   28,,PR3                  cn=0,n=8
         0 000707   400000 000010                    ADSC9   0,,PR4                   cn=0,n=8

   3789  0 000710   000001 473500                    LDP3    1,,PR0
         0 000711   300034 720100                    LXL0    28,,PR3
         0 000712   000002 100003                    CMPX0   2,DU
         0 000713   000727 601000 0                  TNZ     s:3794

   3789  0 000714   300035 475500                    LDP5    29,,PR3
         0 000715   000001 036003                    ADLQ    1,DU
         0 000716   200061 756100                    STQ     CURRENT_KEY$+3,,AUTO
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:269  
         0 000717   200060 455500                    STP5    CURRENT_KEY$+2,,AUTO
         0 000720   200060 630500                    EPPR0   CURRENT_KEY$+2,,AUTO
         0 000721   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000722   000000 701000 xent               TSX1    VDG$OCOPY
         0 000723   000725 702000 0                  TSX2    s:3790
         0 000724   000727 710000 0                  TRA     s:3794

   3790  0 000725   200052 221300                    LDX1  ! I+1,,AUTO
         0 000726   000000 702211                    TSX2  ! 0,X1

     1869     3792    3         END;

     1870     3793
     1871     3794    2       RETURN;

   3794  0 000727   200052 221300                    LDX1  ! I+1,,AUTO
         0 000730   000001 702211                    TSX2  ! 1,X1
     1872     3795
     1873     3796    2   END CHECK_INTO_INTERNAL_FILE;
     1874     3797
     1875     3798    1   END VDI$CUPDATE_NAME;

PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:270  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CUPDATE_NAME.
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:271  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    55-0-0/w PTR         r     1 @CURRENT_SPEC             54-0-0/w PTR         r     1 @FOUND_NAME
     3-0-0/w PTR         r     1 @NAME$STREAM               4-0-0/w PTR         r     1 @NAME_KEY
     6-0-0/w PTR         r     1 @NAME_SUBSCRIPT            5-0-0/w PTR         r     1 @NAME_VALUE$
    53-0-0/w PTR         r     1 @STREAM                   46-0-0/w PTR         r     1 CURRENT_DATA$
    56-0-0/w PTR         r     1 CURRENT_KEY$              *0-0-0/w STRC(72)    r     1 CURRENT_SPEC
    50-0-0/w PTR         r     1 CURR_ELEMENT$              7-0-0/w BIT         r     1 FOUND_FLAG
    *0-0-0/w BIT         r     1 FOUND_NAME                51-0-0/w SBIN        r     1 I
    *0-0-0/w STRC(864)   r     1 NAME$STREAM               21-0-0/w STRC(648)   r     1 NAME_DELETION_RANGE
    *0-0-0/w ASTR(9)     r     1 NAME_KEY                  10-0-0/w STRC(324)   r     1 NAME_LOCATION
    *0-0-0/w SBIN        r     1 NAME_SUBSCRIPT            *0-0-0/w PTR         r     1 NAME_VALUE$
    45-0-0/w PTR         r     1 NEW_CHAIN$                47-0-0/w PTR         r     1 PREV_ELEMENT$
    43-0-0/w STRC(72)    r     1 SPEC                      *0-0-0/w STRC(864)   r     1 STREAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(90)    r     1 CURR$ELEMENT               0-0-0/w ASTR(90)    r     1 CURRENT$DATA
     0-0-0/w STRC(252)   r     1 NAME$SPEC                  0-0-0/w ASTR(90)    r     1 NAME$VALUE
     0-0-0/w ASTR(90)    r     1 NEW$CHAIN                  0-0-0/w ASTR(90)    r     1 PREV$ELEMENT
     0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER           0-0-0/w STRC(1944)  r     1 VD$PORT
     0-0-0/w STRC(864)   r     1 VD$STREAM                  0-0-0/w STRC(81)    r     1 VD$STRING_HEADER
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:272  
     0-0-0/w ASTR(9)     r     1 VD$TEXTC                   0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE


   Procedure VDI$CUPDATE_NAME requires 473 words for executable code.
   Procedure VDI$CUPDATE_NAME requires 52 words of local(AUTO) storage.

    No errors detected in file VDI$COMMANDS_NON_EDITING.:VDA5TSI .
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:273  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:274  
          MINI XREF LISTING

CHECK_INTO_INTERNAL_FILE
      3606**PROC     3292--CALL     3341--CALL     3359--CALL     3377--CALL     3395--CALL
CHECK_OTHER_INTERNAL_FILES
      3324**LABEL    3351--EXIT     3369--EXIT     3387--EXIT     3405--EXIT
CURR$ELEMENT
      2808**DCL      3501<>CALL
CURR$ELEMENT.FLINK$
      2834**DCL      3480>>IF       3483<>CALL     3487>>ASSIGN   3498>>ASSIGN   3499<<ASSIGN
CURR$ELEMENT.LENGTH#
      2834**DCL      2836--IMP-SIZ  3487<<ASSIGN   3501>>CALL
CURRENT$DATA
      2750**DCL      3470<>CALL
CURRENT$DATA.LENGTH#
      2776**DCL      2778--IMP-SIZ  3470>>CALL
CURRENT_DATA$
      2555**DCL      2750--IMP-PTR  3319<<ASSIGN   3325<<ASSIGN   3459>>IF       3470>>CALL     3470>>CALL
CURRENT_KEY$ IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3735**DCL      3762<<ASSIGN   3762<<ASSIGN   3766>>IF       3766>>IF
CURRENT_SPEC IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3727**DCL      3606--PROC     3771--IF       3789<<ASSIGN
CURRENT_SPEC.V$ IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3731**DCL      3789<>CALL
CURR_ELEMENT$
      2557**DCL      2808--IMP-PTR  3477<<ASSIGN   3480>>IF       3483>>CALL     3487>>ASSIGN   3489>>ASSIGN
      3490<<ASSIGN   3498>>ASSIGN   3499>>ASSIGN   3501>>CALL     3501>>CALL
FOUND_FLAG
      2439**DCL      3292<>CALL     3304>>IF       3316>>IF       3341<>CALL     3344>>IF       3359<>CALL
      3362>>IF       3377<>CALL     3380>>IF       3395<>CALL     3398>>IF
FOUND_NAME IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3718**DCL      3606--PROC     3739<<ASSIGN   3768<<ASSIGN   3771>>IF
I
      2558**DCL      3479<<DOINDEX
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:275  
NAME$SPEC.DATA_TYPE#
      2604**DCL      3426<<ASSIGN   3431<<ASSIGN   3437<<ASSIGN   3441<<ASSIGN
NAME$SPEC.WINDOWABLE
      2605**DCL      3432<<ASSIGN
NAME$STREAM
      2277**DCL        46--PROC     3292<>CALL     3302--IF       3307<>CALL     3337--IF       3355--IF
      3373--IF       3391--IF       3424--IF       3428--IF       3435--IF       3439--IF       3508<>CALL
NAME$STREAM.PORT$
      2303**DCL      3319>>ASSIGN   3530>>CALL
NAME$VALUE
      2634**DCL      3311<>CALL     3508<>CALL     3518<>CALL
NAME$VALUE.FLINK$
      2660**DCL      3498<<ASSIGN
NAME$VALUE.LENGTH#
      2660**DCL      2662--IMP-SIZ  3301>>IF       3311>>CALL     3508>>CALL     3518>>CALL
NAME_DELETION_RANGE
      2478**DCL      3297<<ASSIGN   3307<>CALL     3348<>CALL     3366<>CALL     3384<>CALL     3402<>CALL
NAME_DELETION_RANGE.ENDD
      2520**DCL      3299<<ASSIGN
NAME_DELETION_RANGE.START
      2492**DCL      3298<<ASSIGN
NAME_KEY
      2384**DCL        46--PROC
NAME_KEY.BYTES
      2394**DCL      3289>>ASSIGN   3766>>IF
NAME_KEY.LENGTH#
      2392**DCL      2394--IMP-SIZ  3276>>CALL     3287>>ASSIGN   3289>>ASSIGN   3766>>IF
NAME_LOCATION
      2449**DCL      3272<<ASSIGN   3298>>ASSIGN   3299>>ASSIGN   3508<>CALL     3534<>CALL     3553<>CALL
      3741<>CALL
NAME_LOCATION.KEY.REP#
      2465**DCL      3274<<ASSIGN
NAME_LOCATION.KEY.TYPE#
      2465**DCL      3273<<ASSIGN
NAME_LOCATION.KEY.V$
      2465**DCL      3276<>CALL     3287>>ASSIGN   3289>>ASSIGN   3289>>ASSIGN
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:276  
NAME_SUBSCRIPT
      2400**DCL        46--PROC     3302--IF       3451--IF       3455>>IF       3457<>CALL     3479>>DOINDEX
NAME_VALUE$
      2399**DCL        46--PROC     2634--IMP-PTR  3301>>IF       3311>>CALL     3311>>CALL     3312<<ASSIGN
      3495>>ASSIGN   3497>>ASSIGN   3498>>ASSIGN   3504<<ASSIGN   3508>>CALL     3508>>CALL     3518>>CALL
      3518>>CALL     3519<<ASSIGN   3527<<ASSIGN
NEW$CHAIN.LENGTH#
      2718**DCL      2720--IMP-SIZ  3466<<ASSIGN
NEW_CHAIN$
      2554**DCL      2692--IMP-PTR  3462<>CALL     3466>>ASSIGN   3470<>CALL     3477>>ASSIGN   3495<<ASSIGN
      3504>>ASSIGN
PREV$ELEMENT.FLINK$
      2892**DCL      3490>>ASSIGN   3497<<ASSIGN
PREV$ELEMENT.LENGTH#
      2892**DCL      2894--IMP-SIZ
PREV_ELEMENT$
      2556**DCL      2866--IMP-PTR  3476<<ASSIGN   3489<<ASSIGN   3490>>ASSIGN   3493>>IF       3497>>ASSIGN
SERIOUS_ERROR
      3550**LABEL    3292--CALLALT  3307--CALLALT  3311--CALLALT  3333--CALLALT  3341--CALLALT  3348--CALLALT
      3359--CALLALT  3366--CALLALT  3377--CALLALT  3384--CALLALT  3395--CALLALT  3402--CALLALT  3462--CALLALT
      3470--CALLALT  3483--CALLALT  3501--CALLALT  3520--GOTO     3530--CALLALT
SPEC
      2548**DCL      3270<<ASSIGN   3292<>CALL     3330<<ASSIGN   3508<>CALL     3528<<ASSIGN   3551<<ASSIGN
SPEC.REP#
      2552**DCL      3332<<ASSIGN   3550>>IF
SPEC.TYPE#
      2552**DCL      3331<<ASSIGN
SPEC.V$
      2552**DCL      2577--IMP-PTR  3333<>CALL     3411>>IF       3426>>ASSIGN   3431>>ASSIGN   3432>>ASSIGN
      3437>>ASSIGN   3441>>ASSIGN   3550>>CALL     3550>>CALL
STREAM IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3620**DCL      3606--PROC     3741<>CALL
STREAM.CURRENT.EOF IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3687**DCL      3750>>IF
STREAM.CURRENT.KEY.REP# IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3685**DCL      3762>>IF
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:277  
STREAM.CURRENT.KEY.V$ IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3685**DCL      3762>>ASSIGN   3762--ASSIGN
STREAM.PORT$ IN PROCEDURE CHECK_INTO_INTERNAL_FILE
      3646**DCL      3789>>ASSIGN   3789>>IF       3789>>CALL     3789>>CALL
VD$BUFFER_HEADER
      2907**DCL      3462--CALL     3483--CALL
VD$PORT
      2943**DCL      3530<>CALL
VD$PORT.LEVEL.DATA$
      3030**DCL      3319>>ASSIGN
VD$PORT.LEVEL.SPEC
      3026**DCL      3789>>ASSIGN
VD$PORT.LEVEL.SPEC.REP#
      3028**DCL      3789>>IF
VD$PORT.LEVEL.SPEC.V$
      3028**DCL      3789>>CALL     3789>>CALL
VD$STREAM
      3041**DCL      3341<>CALL     3348<>CALL     3359<>CALL     3366<>CALL     3377<>CALL     3384<>CALL
      3395<>CALL     3402<>CALL
VD$STRING_HEADER
      3231**DCL      3276--CALL
VD$TEXTC.BYTES
      3157**DCL      3766>>IF
VD$TEXTC.LENGTH#
      3155**DCL      3157--IMP-SIZ  3766>>IF
VD$TEXTC_REMOTE
      3187**DCL      3550<>CALL     3789<>CALL
VD$TEXTC_REMOTE.BYTES
      3218**DCL      3289<<ASSIGN
VD$TEXTC_REMOTE.LENGTH#
      3216**DCL      3218--IMP-SIZ  3287<<ASSIGN   3289>>ASSIGN   3550>>CALL     3762--ASSIGN   3789>>CALL
VDA$LDELETE
      3260**DCL-ENT  3307--CALL     3348--CALL     3366--CALL     3384--CALL     3402--CALL
VDA$LREAD
      3261**DCL-ENT  3741--CALL
VDA$LWRITE
PL6.E3A0      #010=VDI$CUPDATE_NAME File=VDI$COMMANDS_NON_EDITING.:VDA5TSI       FRI 07/04/97 11:32 Page:278  
      3262**DCL-ENT  3508--CALL
VDA$PFLUSH
      3263**DCL-ENT  3530--CALL
VDG$ESCREECH
      3264**DCL-ENT  3413--CALL     3443--CALL     3457--CALL
VDG$OALLOC
      3265**DCL-ENT  3276--CALL     3333--CALL     3462--CALL     3483--CALL
VDG$OCLEAR_LOCATION
      3267**DCL-ENT  3534--CALL     3553--CALL
VDG$OCOPY
      3266**DCL-ENT  3470--CALL     3789--CALL
VDG$OFREE
      3268**DCL-ENT  3311--CALL     3501--CALL     3518--CALL     3550--CALL
VD_6E.EQUALS$
      2415**DCL      3302>>IF       3337>>IF       3341>>CALL     3348>>CALL     3424>>IF
VD_6E.KEYINS$
      2415**DCL      3355>>IF       3359>>CALL     3366>>CALL     3428>>IF
VD_6E.LOCATIONS$
      2415**DCL      3373>>IF       3377>>CALL     3384>>CALL     3435>>IF
VD_6E.SYNONYMS$
      2415**DCL      3391>>IF       3395>>CALL     3402>>CALL     3439>>IF
