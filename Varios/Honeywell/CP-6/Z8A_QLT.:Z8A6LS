

09:13 AUG 09 '97 Z8A_QLT.:Z8A6SI                                           1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      /* INCLUDE FILE "QLT" (QUALIFIER LINKS TABLE) */
    7
    8
    9      DCL   QLT$    PTR EXT ;
   10      DCL   PREV_01_QLT$ PTR EXT ;
   11
   12      DCL 1  QLT_    EXT ALIGNED,
   13           2 TOP     PTR INIT (ADDR(NIL)),
   14           2 FIRST   PTR,          /* FIRST ITEM IN PAGE  */
   15           2 BOTTOM  UBIN INIT(0), /* NEXT AVAILABLE WORD */
   16           2 FLOOR   UBIN INIT(0), /* LAST WORD IN PAGE   */
   17           2 SIZE    UBIN INIT(0); /* SIZE in #pages      */
   18
   19      DCL 1 QLT     BASED (QLT$) ALIGNED,
   20          2 ID      UBIN (18) UNAL, /* IDENTIFICATION CODE   */
   21          2 B       UNAL,           /* BITS                  */
   22          3 OCCURS  BIT (1) UNAL,   /* OCCURS CLAUSE USED    */
   23          3 SYNC    BIT (1) UNAL,   /* SYNCHRONIZED CLAUSE   */
   24          3 DIGIT   BIT (1) UNAL,   /* COMP4 OR COMP8        */
   25          3 RENAMES BIT (1) UNAL,   /* Item is a renames entry */
   26          3 ARRAY_VALUED BIT (1) UNAL,
   27          3 *       BIT (4) UNAL,  /* AVAILABLE FOR LEASE   */
   28          2 LEVEL_NO UBIN(9) UNAL, /* LEVEL_NO              */
   29          2 FATHER  PTR,
   30          2 BROTHER PTR,
   31          2 SON     PTR,
   32          2 RENAMES_LTS$ REDEF SON PTR,  /* Used for renames entries */
   33          2 ST$     PTR,
   34          2 DNT$    PTR ,
   35          2 ARRAY_VALUE$ REDEF DNT$ PTR; /* USED IN PHASE 4 & 5 */
   36
   37      %MACRO RESERVE_QLT (ITEM=%QUAL, POINTER=QLT$);
09:13 AUG 09 '97 Z8A_QLT.:Z8A6SI                                           2    
   38
   39             DO ;
   40               IF QLT_.BOTTOM + SIZEW(QLT) >= QLT_.FLOOR
   41               THEN CALL Z8AR$RESERVER(ADDR(QLT_));
   42               POINTER = PINCRW (QLT_.FIRST, QLT_.BOTTOM);
   43               QLT_.BOTTOM = QLT_.BOTTOM + SIZEW(QLT) ;
   44               POINTER->QLT.ID = ITEM ;
   45             END ;
   46
   47      %MEND ;
   48
   49      %MACRO TOP_QLT (POINTER=QLT$) ;
   50
   51             DO ;
   52               POINTER = QLT_.TOP ;
   53             END ;
   54
   55      %MEND ;
   56
   57      %MACRO STEP_QLT (POINTER=QLT$) ;
   58
   59             DO ;
   60               POINTER = PINCRW (POINTER, SIZEW(QLT)) ;
   61               IF POINTER = PINCRW (QLT_.FIRST, QLT_.BOTTOM)
   62               THEN POINTER = ADDR(NIL) ;
   63               ELSE
   64               IF POINTER->QLT.ID = %CONTINUE
   65               THEN POINTER = POINTER -> CONT.NEXT;
   66             END ;
   67
   68      %MEND ;
   69
   70      %MACRO NEW_QLT (@POINTER = QLT$,
   71                      @ID      = %QUAL,
   72                      @FATHER  = "ADDR(NIL)",
   73                      @BROTHER = "ADDR(NIL)",
   74                      @SON     = "ADDR(NIL)",
09:13 AUG 09 '97 Z8A_QLT.:Z8A6SI                                           3    
   75                      @ST$     = "ADDR(NIL)",
   76                      @DNT$    = "ADDR(NIL)",
   77                      @LEVEL#  = 01,
   78                      @OCCURS    = '0'B,
   79                      @SYNC      = '0'B,
   80                      @DIGIT     = '0'B,
   81                      @RENAMES   = '0'B);
   82
   83         DO;
   84           %RESERVE_QLT (ITEM    = @ID,
   85                         POINTER = @POINTER);
   86
   87           @POINTER -> QLT.FATHER  = @FATHER;
   88           @POINTER -> QLT.BROTHER = @BROTHER;
   89           @POINTER -> QLT.SON     = @SON;
   90           @POINTER -> QLT.ST$     = @ST$;
   91           @POINTER -> QLT.DNT$    = @DNT$;
   92           @POINTER -> QLT.LEVEL_NO= @LEVEL#;
   93           @POINTER -> QLT.B       = '0'B;
   94           @POINTER -> QLT.B.OCCURS  = @OCCURS;
   95           @POINTER -> QLT.B.SYNC    = @SYNC;
   96           @POINTER -> QLT.B.DIGIT   = @DIGIT;
   97           @POINTER -> QLT.B.RENAMES = @RENAMES;
   98         END;
   99
  100      %MEND;
  101
  102
  103
  104
  105      %EJECT;


