

15:05 JUL 28 '97 NI$TABLES.:E05SI                                          1    
    1      /*M* NI$TABLES - ALL INTERNAL TABLES FOR NEW I/O SYSTEM */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /**/
    8      /*
    9              EQUs for IO tables for new I/O system.
   10      */
   11      %EQU N_MAXCHANS = 128   /* Max number of channels per IOM       */ ;
   12      %EQU N_MAXCHANSM1 = N_MAXCHANS-1        /* minus one.           */ ;
   13      %EQU N_MAXIOMS = 4      /* Max number of IOMs allowed           */ ;
   14      %EQU N_MAXIOMSM1 = N_MAXIOMS-1          /* minus one.           */ ;
   15      %EQU N_MAXDVTS = 50     /* Max number of DVTS allowed           */ ;
   16      %EQU N_MAXDVTSM1 = N_MAXDVTS-1          /* minus one.           */ ;
   17      %EQU N_CHANSPERMPC = 16 /* Max number of channels per MPC       */ ;
   18      %EQU N_CHANSPERMPCM1 = N_CHANSPERMPC-1  /* minus one.           */ ;
   19      %EQU N_MPCSPERSQH = 2   /* Max number of MPCs per SQH           */ ;
   20      %EQU N_MPCSPERSQHM1 = N_MPCSPERSQH-1    /* minuse one.          */ ;
   21      /**/
   22      %MACRO NI$CHT(NAME=NI$CHT,STCLASS="(0:127) BASED(NI$CHT$)");
   23
   24      /*B* CHANNEL TABLE
   25
   26         ONE ENTRY PER CHANNEL
   27         INDEXED BY CHANNEL NUMBER + (IOM * 128)
   28            IOM/IOP SUPPORT 64 CHANNELS PER IO PROCESSOR;  IMX SUPPORTS 128
   29      */
   30
   31      DCL 1 NAME STCLASS ALIGNED,
   32            2 DQH$ PTR,                       /* -> DRIVER QUEUE HEADER             */
   33            2 POSTER EPTR;                    /* POSTER                             */
   34      %MEND;
   35      /**/
   36      %MACRO NI$CONNECT ( NAME=NI$CONNECT, STCLASS="BASED(NI$CONNECT$)" ) ;
   37
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          2    
   38      /*B*  NI$CONNECT structure -- One per system.
   39
   40            Contains gate to be locked before connect (CIOC) is done.
   41              Also contains the data words that could be used to do the connect.
   42      */
   43
   44      %LSET LISTDIR='0'B;
   45      %LSET LISTEXP='1'B;
   46      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   47      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   48      %LSET INIT=CHARTEXT('INIT');
   49      %ELSE;
   50      %LSET INIT=CHARTEXT('/*');
   51      %ENDIF;
   52
   53      DCL 1 NAME STCLASS ALIGNED,             /* Connect structure                  */
   54            2 GATE BIT(72) ALIGNED %INIT('1'B)%CHARTEXT('/**/'),
   55                                              /* Connect Gate                       */
   56            2 ADDRESS UBIN ALIGNED %INIT(0)%CHARTEXT('/**/'),
   57                                              /* IOM:  Connect Address              */
   58                                              /* IMX:  Mailbox Address              */
   59            2 CCW UBIN ALIGNED %INIT(0)%CHARTEXT('/**/') ;
   60                                              /* IMX:  Channel Connect Word         */
   61      %MEND ;
   62      /**/
   63      %MACRO NI$DCT(NAME=NI$DCT,STCLASS=BASED);
   64
   65      /*B*  NI$DCT - DEVICE CONTROL TABLE
   66
   67            ONE ENTRY FOR EACH DEVICE AND CONTROLLER
   68      */
   69
   70      %LSET LISTDIR='0'B;
   71      %LSET LISTEXP='1'B;
   72      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   73      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   74      %LSET INIT=CHARTEXT('INIT');
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          3    
   75      %ELSE;
   76      %LSET INIT=CHARTEXT('/*');
   77      %ENDIF;
   78
   79      DCL 1 NAME STCLASS ALIGNED,             /* DCT ENTRY                          */
   80            2 FL$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   81                                              /* FORWARD LINK FOR ASSIGN QUEUE      */
   82            2 SQ$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   83                                              /* HEAD OF SCHEDULER QUEUE            */
   84            2 DEVNM CHAR(8) ALIGNED  %INIT(' '*0)%CHARTEXT('/**/'),
   85                                              /* DEVICE NAME                        */
   86            2 DDT$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   87                                              /* -> DDT                             */
   88            2 RAT$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   89                                              /* -> RAT                             */
   90            2 DCTX UBIN(15) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
   91                                              /* DCT INDEX                          */
   92            2 * BIT(3)  %INIT('0'B)%CHARTEXT('/**/'),
   93
   94            2 DFLG,                           /* DEVICE FLAGS                       */
   95              3 INPUT BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
   96              3 OUTPUT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   97              3 CM BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
   98                                              /* COMMUNICATIONS DEVICE              */
   99              3 CONSOLE BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  100              3 SYMBIONT BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  101              3 PSIA BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  102                                              /* DEVICE ON PSIA CHANNEL             */
  103              3 RELOAD BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  104                                              /* MPC MUST BE RELOADED               */
  105              3 MPCSUSPENDED BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  106                                              /* MPC IS SUSPENDED                   */
  107              3 MPCSTOP BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  108                                              /* MPC IS STOPPED                     */
  109              3 MPCBUSY BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  110                                              /* MPC IS BUSY                        */
  111              3 MPCSTAT BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          4    
  112                                              /* MPC STATISTICS PENDING             */
  113              3 AUTORETRY BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  114                                              /* AUTOMATIC RETRY PENDING            */
  115              3 CHECKWRITE BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  116                                              /* ALL WRITES ARE CHECKWRITES         */
  117              3 AUTOERROR BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  118                                              /* REPORT TYC.OPER WITHOUT ERROR KEYIN*/
  119            2 RESCOD UBIN(4) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  120                                              /* WORD 6, BITS 32-35: RESOURCE CODE  */
  121            2 DEV0LGL BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  122                                              /* DEVICE NUMBER 0 LEGAL              */
  123            2 FIPS BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  124                                              /* FIPS TAPE OR DISK                  */
  125            2 * BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  126            2 CTYP UBIN(3) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  127                                              /* CONTROLLER TYPE (0=%C_MPC)         */
  128            2 DVN UBIN(6) UNAL  %INIT(0)%CHARTEXT('/**/'),
  129                                              /* DEVICE NUMBER                      */
  130            2 MODX UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  131                                              /* MODEL NUMBER INDEX                 */
  132            2 FX UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  133                                              /* FEATURE BOARD INDEX                */
  134            2 TYPE UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  135                                              /* DEVICE TYPE FROM DVT               */
  136                                              /* ACCESSED IN NIM$INTDIS - HARDCODED */
  137            2 STATE UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  138                                              /* SCHEDULING STATE                   */
  139            2 PM ALIGNED,                     /* PERFORMANCE MONITOR PACKET         */
  140              3 MODE UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  141                                              /* CURRENT MODE                       */
  142              3 CONNCT SBIN  %INIT(0*0)%CHARTEXT('/**/'),
  143                                              /* CONNECT COUNT                      */
  144              3 START_TIME UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  145                                              /* START TIME FOR THIS MODE           */
  146              3 ELAPSED_TIME(0:3) UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  147                                              /* ELAPSED TIME FOR EACH MODE         */
  148            2 SPSTAT,                         /* STATUS FROM LAST SP. INT.          */
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          5    
  149              3 PRESENCE BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  150              3 * BIT(2)  %INIT('0'B)%CHARTEXT('/**/'),
  151              3 CHANNEL UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  152                                              /* VALID ONLY FOR IOM AND IOP         */
  153              3 * BIT(3)  %INIT('0'B)%CHARTEXT('/**/'),
  154              3 DVN UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  155                                              /* DEVICE NUMBER                      */
  156              3 CODE,
  157                4 BYTE3 UBIN(9) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  158                4 BYTE4 UBIN(9) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  159            2 SPEC EPTR  %INIT(ENTADDR(NIL))%CHARTEXT('/**/'),
  160                                              /* SPECIAL INTRP ENTRY                */
  161            2 SPECINFO UBIN WORD  %INIT(0*0)%CHARTEXT('/**/'),
  162                                              /* SPECIAL INTRP INFORMATION          */
  163            2 SQH$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  164                                              /* -> SUBSYSTEM QUEUE HEADER          */
  165            2 DQH$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  166                                              /* CURRENTLY ASSIGNED DRIVER QUEUE HDR*/
  167            2 DVT$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  168                                              /* -> DVT                             */
  169            2 SPEVENT UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  170                                              /* SPECIAL INTERRUPT EVENT FOR T&D    */
  171            2 ERRCNCT UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  172                                              /* CONNECT COUNT AT LAST ERROR        */
  173            2 STATUS,                         /* DEVICE STATUS (UP, DOWN, T&D)      */
  174              3 DOWN BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  175                                              /* =1 IF DEVICE PARTITIONED           */
  176              3 TDOK BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  177                                              /* DEVICE AVAILABLE FOR T & D         */
  178              3 TND UBIN(4) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  179                                              /* CURRENT T&D FUNCTION               */
  180              3 SYSCON_PART BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  181                                              /* PARTITIONED BY SYSCON;             */
  182                                              /*  DELAYED PARTITION IF DOWN NOT SET */
  183              3 MSOS_PART BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  184                                              /* PARTITIONED BY MSOS CHAN RELEASE;  */
  185                                              /*  DELAYED PARTITION IF DOWN NOT SET */
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          6    
  186            2 * BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  187            2 TDUSER# UBIN(9) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  188                                              /* T&D USER OF THIS DEVICE            */
  189            2 MSG# UBIN HALF UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  190                                              /* MESSAGE NUMBER FOR TIMED MESSAGE   */
  191            2 DP ALIGNED,                     /* DISK:                              */
  192              3 BQ$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  193                                              /* BACKWARD QUEUE                     */
  194              3 SWP BIT(1) ALIGNED  %INIT('0'B)%CHARTEXT('/**/'),
  195                                              /* SWEEP DIRECTION (1=+)              */
  196              3 SETL$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  197                                              /* LINK TO NEXT PACK IN SET           */
  198              3 CSEEK UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  199                                              /* CURRENT SEEK ADDRESS               */
  200              3 RELCHAN BIT(1) ALIGNED  %INIT('0'B)%CHARTEXT('/**/'),
  201                                              /* RELEASE CHAN NEXT TIME THRU POSTER */
  202              3 LEAPERS UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  203                                /* NUMBER OF REQUESTS PUT ON SQ$ AFTER SWEEP BEGINS */
  204              3 MIRROR UNAL,                  /* Mirrored Disk info                 */
  205                4 FLAG BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  206                                              /* '1'B means Mirrored Disk           */
  207                4 WRITE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  208                                              /* '1'B means writes can be done      */
  209                4 READ BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  210                                              /* '1'B means reads can be done       */
  211                4 LOCK BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  212                                              /* '1'B means device is locked        */
  213                4 PRI BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  214                                              /* '1'B means primary device          */
  215                4 TOGGLE BIT(1) UNAL %INIT('1'B)%CHARTEXT('/**/'),
  216                                              /* '1'B means read this device        */
  217                4 STATE UBIN(6) UNAL %INIT(1)%CHARTEXT('/**/'),
  218                                              /* Mirrored disk state                */
  219                4 * BIT(15) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  220                4 USER# UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'),
  221                                              /* User number who locked device      */
  222                4 DCTX UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          7    
  223                                              /* DCTX of mirror of this device      */
  224                4 * BIT(18) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  225                4 UTS UBIN(36) UNAL %INIT(0)%CHARTEXT('/**/'),
  226                                              /* UTS of last change                 */
  227                4 DRZERO SBIN(36) UNAL %INIT(0)%CHARTEXT('/**/'),
  228                                              /* Minimum DRELADDR mirrored          */
  229                4 LQ$ PTR UNAL %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  230                                              /* Pointer to Locked Queue            */
  231              3 *(0:0) UBIN %INIT(0*0)%CHARTEXT('/**/'),
  232            2 MPC REDEF DP ALIGNED,           /* MPC:                               */
  233              3 FW$ PTR,                      /* -> FIRMWARE                        */
  234              3 IOCHANX(0:15) UBIN BYTE UNAL,  /* CHT INDEX, =0 MEANS UNUSED         */
  235              3 IOCHAN(0:15) REDEF IOCHANX,
  236                4 IOM UBIN(2) UNAL,           /* LOGICAL IOM NUMBER                 */
  237                4 CHAN UBIN(7) UNAL,          /* CHANNEL NUMBER ON IOM              */
  238              3 TYPE UBIN(9) CALIGNED,        /* TYPE OF MPC (UR=DV_LP,ETC.)        */
  239              3 LPCHANS BIT(9) CALIGNED,      /* CHANNEL BITS FOR LP FW             */
  240              3 CRPCHANS BIT(9) CALIGNED,     /* CHANNEL BITS FOR CRP FW            */
  241              3 ALTMPCX UBIN BYTE CALIGNED,   /* DCTX OF ALTERNATE MPC FOR URTAPE   */
  242              3 ERRCNCT UBIN,                 /* CONNECT COUNT AT LAST ERROR        */
  243              3 CONNCT SBIN,                  /* CONNECT COUNT (ALL DEVICES ON MPC) */
  244              3 REQ$ PTR,                     /* -> N$REQ PACKET FOR MPC F/W LOAD   */
  245              3 FWNAME CHAR(4) ALIGNED,       /* NAME OF FIRMWARE CS & MM OVERLAYS  */
  246              3 LPNAME CHAR(4) ALIGNED,       /* NAME OF LP FIRMWARE                */
  247              3 CRPNAME CHAR(4) ALIGNED,      /* NAME OF CRP FIRMWARE               */
  248            2 LP REDEF DP ALIGNED,            /* LINE PRINTER:                      */
  249              3 VFC$ PTR,                     /* -> VFC IMAGE                       */
  250              3 VFCL UBIN,                    /* VFC IMAGE LENGTH (WORDS)           */
  251              3 CHAIN$ PTR,                   /* -> CHAIN IMAGE (60 WORDS)          */
  252              3 *(0:8) UBIN,
  253            2 MT REDEF DP ALIGNED,            /* MAG TAPE:                          */
  254              3 RWC BIT(1) ALIGNED,           /* REWIND COMPLETE                    */
  255              3 FREPOS$ PTR,                  /* FULL REPOSITION PACKET             */
  256              3 REPOS BIT(1) ALIGNED,         /* FULL REPOSITION IN PROGRESS        */
  257              3 PLOST BIT(1) ALIGNED,         /* TAPE POSITION LOST                 */
  258              3 LVALID BIT(1) ALIGNED,        /* LRECCNT IS VALID                   */
  259              3 POS,                          /* CURRENT POS INFORMATION            */
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          8    
  260                4 CRECCNT UBIN,               /* CURRENT RECORD COUNT               */
  261                4 LRECCNT UBIN,               /* RECORD COUNT WITHIN LAST FILE      */
  262                4 FILECNT UBIN,               /* FILE MARKS SINCE BOT               */
  263                4 CURCNT UBIN,                /* A WORD OF TEMP                     */
  264              3 CURDENS UBIN BYTE CALIGNED,   /* CURRENT DENSITY FUNCTION CODE      */
  265              3 * BIT(27) CALIGNED,
  266              3 SETDENS$ PTR,                 /* SET DENSITY PACKET FOR FIPS TAPES  */
  267              3 * UBIN,
  268            2 CR REDEF DP ALIGNED,
  269              3 MODE BIT(1),                  /* 0 = ASCII, 1 = BINARY              */
  270              3 *(0:10) UBIN,
  271            2 SC REDEF DP ALIGNED,
  272              3 OCINFO$ PTR,                  /* POINTER TO OC$INFO                 */
  273              3 MSGUTS UBIN,                  /* UTS OF LAST NQPKTS MSG             */
  274              3 IOQ$ PTR,                     /* -> CONSOLE'S IOQ PACKET            */
  275              3 *(0:8) UBIN,
  276            2 AP REDEF DP ALIGNED,
  277              3 *(0:4) UBIN,                  /* DON'T CLOBBER MPC.IOCHAN INFO      */
  278              3 CHAN UBIN,                    /* LOGICAL CHANNEL NUMBER             */
  279              3 CDCTX UBIN,                   /* DCTX OF CONTROL CHANNEL DCT        */
  280              3 CONT,                         /* WRITE HCSR DATA                    */
  281                4 DC UBIN(9) CALIGNED,        /* DEVICE COMMAND                     */
  282                4 DD UBIN(9) CALIGNED,        /* DD NUMBER                          */
  283              3 * BIT(18),
  284              3 *(0:3) UBIN,
  285            2 MCA REDEF DP ALIGNED,           /* DPS8000 MCA                        */
  286              3 RESERVED BIT(1) ALIGNED,      /* Set if MCA channel is reserved     */
  287              3 USER# UBIN,                   /* USER# who reserved the MCA channel */
  288              3 MCA# UBIN,                    /* MCA# from READ CONFIG              */
  289              3 * (0:8) UBIN,
  290            2 OD REDEF DP ALIGNED,            /* Optical Disc device                */
  291              3 LDCT$ PTR,                    /* Ptr to controller LDCT             */
  292              3 OPCI$ PTR,                    /* Ptr to controller OD               */
  293              3 FEI$ PTR,                     /* Ptr to controller FEI              */
  294              3 USER# UBIN BYTE CALIGNED,     /* user of this od device   */
  295              3 THRTLD UBIN BYTE CALIGNED,
  296              3 * UBIN HALF UNAL,
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          9    
  297              3 IP$ PTR,                      /* input message pointer */
  298              3 *(0:6) UBIN,
  299            2 PMD$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/');
  300                                              /* -> PREVIOUS PM DATA                */
  301      %MEND;
  302      /**/
  303      %MACRO NI$DQH(NAME=NI$DQH,STCLASS=BASED);
  304
  305      /*B* NI$DQH - DRIVER QUEUE HEADER
  306
  307         ONE ENTRY PER CONFIGURED CHANNEL
  308         GROUPED BY SUBSYSTEM
  309      */
  310
  311      %LSET LISTDIR='0'B;
  312      %LSET LISTEXP='1'B;
  313      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  314      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  315      %LSET INIT=CHARTEXT('INIT');
  316      %ELSE;
  317      %LSET INIT=CHARTEXT('/*');
  318      %ENDIF;
  319
  320      DCL 1 NAME STCLASS ALIGNED,
  321            2 FL$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  322                                              /* LINK TO NEXT IDLE CHANNEL          */
  323            2 MREC BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  324                                              /* MULTI RECORD COMMAND ON CHANNEL    */
  325            2 STATUS,                         /* CHANNEL STATUS                     */
  326              3 DOWN BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  327                                              /* SET IF CHANNEL PARTITIONED         */
  328              3 TDOK BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  329                                              /* CHANNEL AVAILABLE FOR T & D        */
  330              3 TND UBIN(4) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  331                                              /* CURRENT T&D FUNCTION               */
  332              3 SYSCON_PART BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  333                                              /* PARTITIONED BY SYSCON              */
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          10   
  334              3 MSOS_PART BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  335                                              /* PARTITIONED BY MSOS CHAN RELEASE   */
  336            2 IOCHANX UBIN(9) CALIGNED  %INIT(0*0)%CHARTEXT('/**/'),
  337                                              /* CHT INDEX                          */
  338            2 IOCHAN REDEF IOCHANX,
  339              3 IOM UBIN(2) UNAL,             /* IOM NUMBER                         */
  340              3 CHANNEL UBIN(7) UNAL,         /* CHANNEL NUMBER                     */
  341            2 TIMOUT UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  342                                              /* TIME OUT COUNTER (5 SECOND UNITS)  */
  343            2 FEX UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  344                                              /* FEP INDEX (DIRECT CHANNEL ONLY)    */
  345            2 STATE UBIN(6) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  346                                              /* SCHEDULING STATE                   */
  347            2 PM ALIGNED,                     /* PERFORMANCE MONITOR PACKET         */
  348              3 MODE UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  349                                              /* CURRENT MODE                       */
  350              3 CONNCT SBIN  %INIT(0*0)%CHARTEXT('/**/'),
  351                                              /* CONNECT COUNT                      */
  352              3 START_TIME UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  353                                              /* START TIME FOR THIS MODE           */
  354              3 ELAPSED_TIME(0:3) UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  355                                              /* ELAPSED TIME FOR EACH MODE         */
  356            2 ERRCNCT UBIN  %INIT(0*0)%CHARTEXT('/**/'),
  357                                              /* CONNECT COUNT AT LAST ERROR        */
  358            2 SCHAN$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  359                                              /* -> OTHER DQH ON LA                 */
  360            2 SQH$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  361                                              /* -> SUBSYSTEM QUEUE HEADER          */
  362            2 IO$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  363                                              /* -> CURRENT IOQ PACKET              */
  364                                              /* ACCESSED IN NIM - HARDCODED        */
  365            2 MPC$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  366                                              /* -> MPC DCT ENTRY                   */
  367                                              /* ACCESSED IN NIM - HARDCODED        */
  368            2 IOSTATUS$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  369                                              /* -> IO STATUS BLOCK FOR CHANNEL     */
  370            2 EVENTINFO UBIN  %INIT(0*0)%CHARTEXT('/**/'),
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          11   
  371                                              /* EVENT CODE FOR T&D FEP OPEN        */
  372            2 CHANSTATE,                      /* INFO ABOUT CHANNEL'S AVAILABILITY  */
  373              3 STOP BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  374                                              /* MPC IS TO BE STOPPED               */
  375              3 SUSPEND BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  376                                              /* CHANNEL SUSPENDED BY MSOS          */
  377              3 MSTOP BIT(1) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  378                                              /* CHANNEL STOPPED BY MSOS            */
  379              3 DOWN BIT(1) UNAL   %INIT('0'B)%CHARTEXT('/**/'),
  380                                              /*  Chan or MPC is being marked DOWN  */
  381            2 * BIT(3) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  382            2 LA UBIN(2) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  383                                              /* WHICH MPC LA THIS CHANNEL IS ON    */
  384            2 USER# UBIN(9) CALIGNED  %INIT(0*0)%CHARTEXT('/**/'),
  385                                              /* T&D USER NO. FOR FEP               */
  386            2 * BIT(9) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  387            2 IPCNUM UBIN(9) CALIGNED  %INIT(0*0)%CHARTEXT('/**/'),
  388                                              /* IMX'S PHYSICAL ADAPTER NUMBER      */
  389            2 MBX$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  390                                              /* -> TO CURRENT IMX FLOATING MAILBOX */
  391            2 MBXADDR REDEF MBX$ UBIN;
  392      %MEND;
  393      /**/
  394      %MACRO NI$DVT(NAME=NI$DVT,STCLASS=BASED);
  395
  396      /*B* NI$DVT - DEVICE DESCRIPTION TABLE
  397
  398         ONE ENTRY FOR EACH TYPE OF DEVICE
  399         INDEXED BY DEVICE TYPE
  400      */
  401
  402      DCL 1 NAME STCLASS ALIGNED,
  403            2 SCHED EPTR,                     /* -> DEVICE SCHEDULER                */
  404            2 POSTER EPTR,                    /* -> DEVICE POSTER ENTRY             */
  405            2 DVSCH EPTR,                     /* DEVICE SCHEDULER ENTRY             */
  406            2 MODEL(0:9) CHAR(8) ALIGNED,     /* MODEL NUMBER (ASCII)               */
  407            2 FEATURE(0:9) CHAR(8) ALIGNED,   /* FEATURE NUMBERS                    */
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          12   
  408            2 TYPE UBIN(9) CALIGNED,          /* DEVICE TYPE                        */
  409            2 NT@DCYLS UBIN(9) CALIGNED,      /* (DISK) NUMBER OF T@D CYLINDERS     */
  410            2 SPT UBIN(9) CALIGNED,           /* SECTORS PER TRACK                  */
  411            2 GRANSIZE UBIN(9) CALIGNED,      /* (DISK) GRANULE SIZE (SECTORS)      */
  412            2 PACKSIZE UBIN(36) HALIGNED,     /* (DISK) PACK SIZE (GRANULES)        */
  413            2 CYLSIZE UBIN(18) HALIGNED,      /* (DISK) CYLINDER SIZE (SECTORS)     */
  414            2 T@DCYL UBIN(18) HALIGNED,       /* (DISK) FIRST T&D CYLINDER          */
  415            2 SECSIZE UBIN(18) HALIGNED,      /* (DISK) SECTOR SIZE (WORDS)         */
  416            2 ATTR BIT(18) HALIGNED,          /* DEV ATTRIBUTES                     */
  417            2 MPC ALIGNED,                    /* MPC SPECIFIC INFORMATION           */
  418              3 FWNAME CHAR(4),
  419              3 LPNAME CHAR(4),
  420              3 CRPNAME CHAR(4),
  421            2 LP REDEF MPC ALIGNED,           /* LP SPECIFIC INFORMATION            */
  422              3 CHAIN CHAR(4),
  423              3 *(0:1) UBIN,
  424            2 IDCW(0:28) ALIGNED,              /* IDCW INDEXED BY LOGICAL FUNCT CODE */
  425              3 DC UBIN(6) UNAL,              /* DEVICE COMMAND                     */
  426              3 RTN UBIN(6) UNAL,             /* IOQ ROUTINE NUMBER                 */
  427              3 DC2 UBIN(6) UNAL,             /* ALTERNATE DEVICE COMMAND           */
  428              3 TIMO UBIN(6) UNAL,            /* TIME OUT COUNT (5 SECOND UNITS)    */
  429              3 CC UBIN(6) UNAL,              /* CHANNEL COMMAND                    */
  430              3 RCT UBIN(6) UNAL;             /* RECORD COUNT                       */
  431      %MEND;
  432      /**/
  433      %MACRO NI$IOM(NAME=NI$IOM,STCLASS=BASED);
  434
  435      /*B* NI$IOM - IOM CONFIGURATION AND SCHEDULING DATA
  436
  437         ONE ENTRY PER IOM/IOP/IMX
  438         IMX DOES NOT USE:
  439            MBX$ - IMX MAILBOXES ARE NOT FIXED
  440            FLTBUF,NEXTF
  441            SPECBUF,NEXTS,MAXS
  442      */
  443
  444      DCL 1 NAME STCLASS ALIGNED,
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          13   
  445            2 GATE BIT(72),
  446            2 MBX$ PTR,                       /* -> MAILBOXES FOR IOM/IOP           */
  447            2 LASTCON UBIN(9) CALIGNED,       /* LAST CONNECTED CHANNEL             */
  448            2 IOM# UBIN(3) UNAL,              /* IOM NUMBER                         */
  449            2 NEXTF UBIN(6) UNAL,             /* INDEX TO NEXT WORD IN FAULT BUFFER */
  450            2 NEXTS UBIN(6) UNAL,             /* INDEX TO NEXT WORD IN SPEC INT BUF */
  451            2 MAXS UBIN(6) UNAL,              /* WORST CASE NEXTS                   */
  452            2 STATUS,                         /* IOM STATUS                         */
  453              3 DOWN BIT(1),                  /* SET IF IOM IS PARTITIONED          */
  454              3 SYSCON_PART BIT(1),           /* PARTITIONED BY SYSCON              */
  455              3 MSOS_PART BIT(1),             /* PARTITIONED BY MSOS                */
  456            2 ADDRESS UBIN(3) UNAL,           /* IOM PORT ADDRESS (FOR CIOC)        */
  457            2 FLTBUF UBIN(18) HALIGNED,       /* LOC. OF FAULT BUFFER (IN REAL)     */
  458            2 SPECBUF UBIN(18) HALIGNED,      /* LOC. OF SPEC INT BUFFER (IN REAL)  */
  459            2 CONNCT SBIN,                    /* CONNECT COUNT                      */
  460            2 ERRCNCT UBIN;                   /* CONNECT COUNT AT LAST ERROR        */
  461      %MEND;
  462      /**/
  463      %MACRO NI$IOSTAT(NAME=NI$IOSTAT,STCLASS=BASED);
  464
  465      /*B* NI$IOSTAT - STATUS BLOCK FOR NORMAL AND EXTENDED STATUS (EXTENDED MAILBOX)
  466
  467         ONE ENTRY PER CONFIGURED CHANNEL
  468         THIS BLOCK MUST BEGIN ON A MODULO 8 BOUNDARY.
  469      */
  470
  471      DCL 1 NAME STCLASS DALIGNED,
  472            2 STATUS DALIGNED,                /* TERMINATE STATUS WORDS             */
  473              3 PRESENCE BIT(1),              /* ALWAYS ONE                         */
  474              3 POWEROFF BIT(1),              /* POWER OFF STATUS                   */
  475              3 MAJOR UBIN(4) UNAL,           /* DEVICE MAJOR STATUS                */
  476              3 MINOR BIT(6),                 /* DEVICE MINOR STATUS                */
  477              3 ODD BIT(1),                   /* ODD WORD COUNT                     */
  478              3 MARKER BIT(1),                /* MARKER INTERRUPT                   */
  479              3 * BIT(2),
  480              3 ININT BIT(1),                 /* INITIATION INTERRUPT               */
  481              3 * BIT(1),
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          14   
  482              3 IOM,                          /* IOM STATUS:                        */
  483                4 CHANNEL UBIN(3) UNAL,       /*    CHANNEL-DETECTED                */
  484                4 CENTRAL UBIN(3) UNAL,       /*    CENTRAL-DETECTED                */
  485              3 * BIT(6),
  486              3 RCR UBIN(6) UNAL,             /* RECORD COUNT RESIDUE               */
  487              3 NWA UBIN(18) UNAL,            /* NEXT WORD ADDRESS                  */
  488              3 NCP UBIN(3) UNAL,             /* NEXT CHAR POSITION                 */
  489              3 READFLG BIT(1),               /* READ/WRITE FLAG                    */
  490              3 TYPE BIT(2),                  /* DCW TYPE                           */
  491              3 TALLYR UBIN(12) UNAL,         /* TALLY RESIDUE                      */
  492            2 LPW_LASTIDCW,                   /* IMX LPW IMAGE FOR LAST IDCW FETCH  */
  493              3 DCW_ADDR UBIN(18) HALIGNED,
  494              3 DATA UNAL,
  495                4 IBC BIT(1) UNAL,
  496                4 BASE UBIN(2) UNAL,
  497              3 * BIT(6) UNAL,
  498              3 DCWLIST UNAL,
  499                4 IBC BIT(1) UNAL,
  500                4 BASE UBIN(2) UNAL,
  501              3 * BIT(6) UNAL,
  502            2 LPW_RESIDUE,                    /* IMX LPW RESIDUE                    */
  503              3 DCW_ADDR UBIN(18) HALIGNED,
  504              3 DATA UNAL,
  505                4 IBC BIT(1) UNAL,
  506                4 BASE UBIN(2) UNAL,
  507              3 * BIT(6) UNAL,
  508              3 DCWLIST UNAL,
  509                4 IBC BIT(1) UNAL,
  510                4 BASE UBIN(2) UNAL,
  511              3 * BIT(6) UNAL,
  512            2 AESDCW ALIGNED,                 /* IOP AUTOMATIC EXTENDED STATUS DCW  */
  513              3 ADDRESS UBIN(18) UNAL,        /* ABSOLUTE ADDRESS                   */
  514              3 RFU UBIN(8) UNAL,             /* MUST BE ZERO                       */
  515              3 TALLY UBIN(10) UNAL,          /* WORD COUNT                         */
  516            2 LAST_IDCW REDEF AESDCW,         /* IMX DATA WORD COUNT SINCE LAST IDCW*/
  517              3 COUNT UBIN(26) UNAL,
  518              3 * BIT(10) UNAL,
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          15   
  519            2 ALL_IDCW ALIGNED,               /* IMX DATA WORD COUNT FOR TOTAL IO   */
  520              3 COUNT UBIN(26) UNAL,
  521              3 * BIT(10) UNAL,
  522            2 * (0:1) UBIN,
  523            2 EXTST DALIGNED,                 /* EXTENDED STATUS                    */
  524              3 BITE (0:35) BIT(8) UNAL;      /* SENSE BYTE FORMAT                  */
  525      %MEND;
  526      /**/
  527      %MACRO NI$MBX(NAME=NI$MBX,STCLASS="(0:63) BASED");
  528
  529      /*B* NI$MBX - IOM/IOP CHANNEL MAILBOX
  530
  531         THESE 4 WORD MAILBOXES ARE LOCATED AT FIXED ADDRESSES
  532         THE IOM 0 MAILBOXES BEGIN AT .3000;  IOM 1 MAILBOXES START AT
  533         .4400.  THE FIRST 8 CHANNELS (0-7) FOR EACH IOM ARE RESERVED
  534         AS OVERHEAD CHANNELS.
  535      */
  536
  537      %LSET LISTDIR='0'B ;
  538      %LSET LISTEXP='1'B ;
  539      %LSET STR = CONCAT(TEXTCHAR(STCLASS), '        ') ;
  540      %IF   ( SUBSTR(STR,0,6) = 'STATIC' )    OR
  541            ( SUBSTR(STR,0,8) = 'CONSTANT' )  OR
  542            ( SUBSTR(STR,0,3) = 'EXT' )       ;
  543            %LSET INIT = CHARTEXT('INIT') ;
  544            %LSET TINI = CHARTEXT('    ') ;
  545      %ELSE ;
  546            %LSET INIT = CHARTEXT('/*  ') ;
  547            %LSET TINI = CHARTEXT('  */') ;
  548      %ENDIF ;
  549
  550      DCL 1 NAME STCLASS DALIGNED,
  551            2 LPW ALIGNED,                    /* LIST POINTER WORD                  */
  552              3 ADDRESS       UBIN(18) UNAL %INIT(0) %TINI,
  553              3 CONTROL,
  554                4 RES         BIT(1) %INIT('0'B) %TINI,
  555                4 IREL        BIT(1) %INIT('0'B) %TINI,
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          16   
  556                4 AE          BIT(1) %INIT('0'B) %TINI,
  557                4 PDCW        REDEF AE
  558                              BIT(1),
  559                4 NC          BIT(1) %INIT('0'B) %TINI,
  560                4 TAL         BIT(1) %INIT('0'B) %TINI,
  561                4 REL         BIT(1) %INIT('0'B) %TINI,
  562              3 TALLY         UBIN(12) UNAL %INIT(0) %TINI,
  563            2 LPWX ALIGNED,                   /* LPW EXTENSION                      */
  564              3 BASE          UBIN(18) UNAL %INIT(0) %TINI,
  565              3 SIZE          UBIN(18) UNAL %INIT(0) %TINI,
  566            2 SCW ALIGNED,                    /* STATUS CONTROL WORD                */
  567              3 ADDRESS       UBIN(18) UNAL %INIT(0) %TINI,
  568              3 CONTROL,
  569                4 LQ          UBIN(2) UNAL %INIT(0) %TINI,
  570                4 AES         BIT(1)  UNAL %INIT('0'B) %TINI,
  571                4 *           BIT(3)  UNAL %INIT('0'B) %TINI,
  572              3 TALLY         UBIN(12) UNAL %INIT(0) %TINI,
  573            2 DCW ALIGNED,                    /* DATA CONTROL WORD                  */
  574              3 ADDRESS       UBIN(18) UNAL %INIT(0) %TINI,
  575              3 CONTROL,
  576                4 RES         BIT(1) %INIT('0'B) %TINI,
  577                4 IREL        BIT(1) %INIT('0'B) %TINI,
  578                4 AE          BIT(1) %INIT('0'B) %TINI,
  579                4 PDCW        REDEF AE
  580                              BIT(1),
  581                4 NC          BIT(1) %INIT('0'B) %TINI,
  582                4 TAL         BIT(1) %INIT('0'B) %TINI,
  583                4 REL         BIT(1) %INIT('0'B) %TINI,
  584              3 TALLY         UBIN(12) UNAL %INIT(0) %TINI ;
  585      %MEND;
  586      /**/
  587      %MACRO NI$IMXMBX(NAME=NI$IMXMBX,STCLASS=BASED);
  588
  589      /*B* IMX FLOATING MAILBOX STRUCTURE
  590
  591         THIS STRUCTURE IS ORGANIZED SUCH THAT ITS FIRST 6 WORDS MAY CO-RESIDE
  592         WITH THE LAST 6 WORDS OF NI$REQ FOR INDIRECT CHANNELS.
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          17   
  593         THEREFORE, ONLY BASES(2:3) AND SIZES(2:3) WILL BE USED FOR INDIRECT
  594         CHANNELS.
  595      */
  596
  597      %LSET LISTDIR='0'B;
  598      %LSET LISTEXP='1'B;
  599      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  600      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  601      %LSET INIT=CHARTEXT('INIT');
  602      %ELSE;
  603      %LSET INIT=CHARTEXT('/*');
  604      %ENDIF;
  605      DCL 1 NAME STCLASS DALIGNED,            /* IMX PAYLOAD CHANNEL MAILBOX        */
  606            2 PAGED_BASE (0:3) ALIGNED,       /* BASE WORDS FOR PAGED IO            */
  607              3 PTWADDR UBIN(26) UNAL %INIT(0*0)%CHARTEXT('/**/'),
  608                                              /* PT WORD ADDRESS (MOD 0)            */
  609              3 OFFSET UBIN(10) UNAL %INIT(0*0)%CHARTEXT('/**/'),
  610                                              /* OFFSET IN PAGE ADDRESSED BY PTWADDR*/
  611            2 NPAGED_IND (0:3) REDEF PAGED_BASE ALIGNED,
  612                                              /* BASE WORDS FOR NONPAGED IND CHAN IO*/
  613              3 * BIT(8) UNAL,
  614              3 PHYS UBIN(28) UNAL,           /* PHYSICAL ADDR                      */
  615            2 PAGED_NDIC (0:3) REDEF PAGED_BASE ALIGNED,          /* 1-3 UNUSED     */
  616                                              /* BASE WORDS FOR PAGED DIR CHAN IO   */
  617              3 PTWADDR UBIN(26) UNAL,        /* PT WORD ADDRESS (MOD 0)            */
  618              3 * BIT(1) UNAL,
  619              3 VALID BIT(1) UNAL,            /* PHYS ADDR IS VALID                 */
  620              3 * BIT(8) UNAL,
  621            2 SIZE (0:3) UBIN(18) HALIGNED %INIT(0*0)%CHARTEXT('/**/'),
  622                                              /* UPPER BOUND OF AREA                */
  623                                              /*  INIT TO SIZE OF LOW REAL          */
  624            2 NDIC_SIZE (0:3) REDEF SIZE,                         /* 1-3 UNUSED     */
  625              3 PAGES UBIN(16) UNAL,
  626              3 * BIT(2) UNAL,
  627            2 CLW ALIGNED,                    /* CHANNEL LINK WORD                  */
  628              3 LINK_MBX_ADDR UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
  629                                              /* ADDR OF NEXT MBX; CURRENTLY UNUSED */
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          18   
  630              3 * BIT(6) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  631              3 MARKER_LVL UBIN(3) UNAL %INIT(4)%CHARTEXT('/**/'),
  632                                              /* MARKER INT LEVEL;  MARKERS NOT USED*/
  633              3 SYNC BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  634                                              /* SET AS PART OF IO TERMINATION      */
  635              3 MBX_BASE UBIN(2) UNAL %INIT(2)%CHARTEXT('/**/'),
  636                                            /* BASE IDX FOR LINK_MBX_ADDR; NOT USED */
  637              3 TERM_LVL UBIN(3) UNAL %INIT(2)%CHARTEXT('/**/'),
  638                                              /* TERMINATE INT LEVEL                */
  639              3 STOP_ERR BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  640                                              /* STOP IO LINKING ON ERROR           */
  641              3 TERM_INHIBIT BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  642                                              /* INHIBIT TERMINATE INTERRUPT        */
  643              3 CONTINUE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  644                                              /* LINK NEXT MBX TO THIS IO; UNUSED   */
  645            2 LPW ALIGNED,                    /* LIST POINTER WORD                  */
  646              3 DCW_ADDR UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
  647                                              /* RELATIVE ADDR OF DCWLIST           */
  648              3 DATA UNAL,
  649                4 IBC BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  650                                              /* INHIBIT BASE CHANGE                */
  651                4 BASE UBIN(2) UNAL %INIT(2)%CHARTEXT('/**/'),
  652                                              /* BASE WORD INDEX FOR DATA - IOS     */
  653              3 * BIT(6) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  654              3 DCWLIST UNAL,
  655                4 IBC BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  656                                              /* INHIBIT BASE CHANGE                */
  657                4 BASE UBIN(2) UNAL %INIT(2)%CHARTEXT('/**/'),
  658                                              /* BASE WORD INDEX FOR DCWLIST - IOS  */
  659              3 * BIT(4) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  660              3 RESTRICT BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  661                                              /* PROHIBIT EXECUTION OF SLAVE IDCWS  */
  662              3 SECTION_PT BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  663                                   /* MUST BE ZERO!!! SECTION PT IO NOT DONE BY CP6 */
  664            2 IOSTATUS (0:15) BIT(36) ALIGNED %INIT('0'B*0)%CHARTEXT('/**/');
  665                                              /* SEE NI$IOSTAT STRUCTURE            */
  666      %MEND;
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          19   
  667      /**/
  668      %MACRO NI$REQ(NAME=NI$REQ,STCLASS=BASED,FLAGS#='600'O);
  669
  670      /*B* IOS REQUEST PACKET
  671
  672         THIS STRUCTURE IS ORGANIZED SUCH THAT ITS LAST 6 WORDS MAY CO-RESIDE
  673         WITH THE FIRST 6 WORDS OF NI$IMXMBX.
  674         THE PCW WORDS ARE NOT USED WITH THE IMX.
  675      */
  676
  677      %LSET LISTDIR='0'B;
  678      %LSET LISTEXP='1'B;
  679      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  680      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  681      %LSET INIT=CHARTEXT('INIT');
  682      %ELSE;
  683      %LSET INIT=CHARTEXT('/*');
  684      %ENDIF;
  685      DCL 1 NAME STCLASS DALIGNED,            /* I/O REQUEST PACKET (IOS)           */
  686            2 FL$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  687                                              /* LINK TO NEXT PACKET                */
  688            2 IOP_PTAW ALIGNED,               /* IOP PTP; MUST BE AT DCWLIST-1      */
  689              3 * BIT(7) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  690              3 PTA UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
  691                                              /* PAGE TABLE ADDRESS                 */
  692              3 * BIT(2) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  693              3 PHYSADDR BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  694                                              /* PHYSICAL ADDRESS                   */
  695              3 * BIT(6) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  696            2 DCW(0:7) ALIGNED,               /* DCW LIST                           */
  697              3 FWA UBIN(18) UNAL %INIT(0*0)%CHARTEXT('/**/'),
  698                                              /* FIRST WORD ADDRESS                 */
  699              3 ICP UBIN(3) UNAL %INIT(0*0)%CHARTEXT('/**/'),
  700                                              /* INITIAL CHARACTER POSITION         */
  701              3 TYPE UBIN(3) UNAL %INIT(0*0)%CHARTEXT('/**/'),
  702                                              /* DCW TYPE                           */
  703              3 TALLY UBIN(12) UNAL %INIT(0*0)%CHARTEXT('/**/'),
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          20   
  704                                              /* WORD COUNT                         */
  705              3 T REDEF TALLY UNAL,           /* TDCW INFORMATION                   */
  706                4 * BIT(3) UNAL,
  707                4 DCWLIST UNAL,
  708                  5 IBC BIT(1) UNAL,          /* IMX INHIBIT BASE CHANGE FOR DCWLIST*/
  709                  5 BASE UBIN(2) UNAL,        /* IMX; BASE FOR DCWLIST              */
  710                4 * BIT(1) UNAL,
  711                4 SEG BIT(1) UNAL,            /* IOM/IOP; ACCESS 2ND HALF OF 512W PT*/
  712                4 PD BIT(1) UNAL,             /* IOM/IOP; PAGED DATA                */
  713                4 PL BIT(1) UNAL,             /* IOM/IOP; PAGED DCW                 */
  714                4 RESTRICT BIT(1) UNAL,       /* SWITCH TO RESTRICTED OPERATION     */
  715                4 REL BIT(1) UNAL,            /* IOM/IOP; SWITCH TO RELATIVE MODE   */
  716            2 IDCW(0:7) REDEF DCW ALIGNED,
  717              3 DC UBIN(6) UNAL,              /* DEVICE COMMAND                     */
  718              3 DVN UBIN(6) UNAL,             /* DEVICE NUMBER                      */
  719              3 EXTA UBIN(6) UNAL,            /* IOM/IOP; ADDRESS EXTENSION         */
  720              3 DATA REDEF EXTA UNAL,
  721                4 IBC BIT(1) UNAL,            /* IMX; INHIBIT BASE CHANGE FOR DATA  */
  722                4 BASE UBIN(2) UNAL,          /* IMX; BASE FOR DATA                 */
  723                4 * BIT(3) UNAL,
  724              3 SVN UBIN(3) UNAL,             /* 7                                  */
  725              3 EC BIT(1),                    /* IN NON-PAGED MODE: LOAD AEX REG    */
  726              3 CONT BIT(1),                  /* CONTINUE                           */
  727              3 MARK BIT(1),                  /* MARKER INTERRUPT                   */
  728              3 CC,                           /* CHANNEL COMMAND                    */
  729                4 * BIT(4),
  730                4 NOBUF BIT(1),               /* NO DATA BUFFER REQUIRED            */
  731                4 * BIT(1),
  732              3 RCNT UBIN(6) UNAL,            /* RECORD COUNT                       */
  733            2 PCW DALIGNED,                   /* PERIPHERAL CONTROL WORD            */
  734              3 DC UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
  735                                              /* DEV COMMAND (CONS AND CPI DEV ONLY)*/
  736              3 DVN UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
  737                                              /* DEV NUMBER (CONS AND CPI DEV ONLY) */
  738              3 AEX UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
  739                                              /* ADDRESS EXTENSION (FOR REAL I/O)   */
  740              3 SVN BIT(3) %INIT('7'O)%CHARTEXT('/**/'),
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          21   
  741                                              /* MUST BE '7'O                       */
  742              3 MASK UNAL,
  743                4 M BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  744                                              /* MASK LOGICAL CHANNEL               */
  745                4 CONT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  746                                              /* CONTINUE (CONS AND CPI DEVS ONLY)  */
  747                                              /* MASK ALL LOGICAL CHANNELS ON PHYS  */
  748                4 MARK BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  749                                              /* MARKER INT (CONS AND CPI DEV ONLY) */
  750                                              /* MASK ALL LOGICALS AND ISSUE RSO    */
  751              3 CC,                           /* CHAN CMD (CONS AND CPI DEVS ONLY)  */
  752                4 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
  753                4 NOBUF BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  754                                              /* NO DATA BUF REQ (CONS & CPI DEVS)  */
  755                4 * BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  756              3 RCNT UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
  757                                              /* RECORD COUNT (CONS & CPI DEVS ONLY)*/
  758              3 CHANNEL UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'),
  759                                              /* CHANNEL NUMBER                     */
  760              3 PTP UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
  761                                              /* PAGE TABLE POINTER                 */
  762              3 FLAGS BIT(9) %INIT(FLAGS#)%CHARTEXT('/**/'),
  763                                              /* PTP, PGE                           */
  764            2 WACPCW REDEF PCW,               /* WRAPAROUND CHANNEL PCW             */
  765              3 SCRADDR UBIN(18) UNAL,        /* SCRATCHPAD ADDRESS                 */
  766              3 * BIT(54),
  767            2 SEEK ALIGNED,                   /* DISK SEEK ADDRESS WORD             */
  768              3 SCL UBIN(12) UNAL %INIT(0)%CHARTEXT('/**/'),
  769                                              /* SECTOR COUNT LIMIT                 */
  770              3 SSZ UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  771                                              /* SECTOR SIZE                        */
  772              3 SECTOR UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
  773                                              /* SEEK ADDRESS                       */
  774            2 MPCSEEK REDEF SEEK ALIGNED,     /* SEEK FOR READ/WRITE OF MPC MEMORY  */
  775              3 MEMADDR UBIN(16) UNAL,        /* 16 BIT MPC MEMADDR                 */
  776              3 COUNT UBIN(16) UNAL,          /* NUMBER OF WORDS TO READ/WRITE      */
  777              3 * UBIN(4) UNAL,
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          22   
  778            2 TAPEPOS REDEF SEEK ALIGNED,
  779              3 CRECCNT UBIN(18) UNAL,        /* CURRENT RECORD COUNT               */
  780              3 FILECNT UBIN(18) UNAL,        /* CURRENT FILE COUNT                 */
  781            2 * BIT(36) ALIGNED;
  782      %MEND;
  783      /**/
  784      %MACRO NI$SQH(NAME=NI$SQH,STCLASS=BASED);
  785
  786      /*B* SUBSYSTEM QUEUE HEADER
  787
  788         ONE PER CONFIGURED SUBSYSTEM
  789      */
  790
  791      %LSET LISTDIR='0'B;
  792      %LSET LISTEXP='1'B;
  793      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  794      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  795      %LSET INIT=CHARTEXT('INIT');
  796      %ELSE;
  797      %LSET INIT=CHARTEXT('/*');
  798      %ENDIF;
  799
  800      DCL 1 NAME STCLASS ALIGNED,
  801            2 DOOR BIT(72)  %INIT('1'B)%CHARTEXT('/**/'),
  802            2 GATE REDEF DOOR ALIGNED,        /* GATE ON SCHEDULING TABLES          */
  803              3 LOCK SBIN,
  804              3 WHO SBIN,
  805            2 FDCT UBIN(18) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  806                                              /* FIRST DCT INDEX                    */
  807            2 NDCT UBIN(18) UNAL  %INIT(0*0)%CHARTEXT('/**/'),
  808                                              /* NUMBER OF DEVICES                  */
  809            2 AQ$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  810                                              /* HEAD OF ASSIGN QUEUE               */
  811            2 CQ$ PTR  %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  812                                              /* HEAD OF IDLE CHANNEL QUE           */
  813            2 MPC$(0:1) PTR  %INIT(ADDR(NIL)*0)%CHARTEXT('/**/');
  814                                              /* -> MPC DCT ENTRIES                 */
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          23   
  815      %MEND;
  816      /**/
  817      %MACRO NI$FW (NAME=NI$FW,STCLASS=BASED);
  818
  819      /*B* FIRMWARE HEADER
  820      */
  821
  822      DCL 1 NAME STCLASS DALIGNED,
  823            2 FWDA UBIN,                      /* FIRMWARE DISK ADDRESS              */
  824            2 LPDA UBIN,                      /* LP FIRMWARE DISK ADDRESS           */
  825            2 CRPDA UBIN,                     /* READER/PUNCH FIRMWARE ADDRESS      */
  826            2 FWOL(0:3) UBIN HALF UNAL,       /* SIZE OF FIRMWARE OVERLAYS          */
  827            2 * UBIN,                         /* DCW LIST MUST BE ON DW BOUND       */
  828            2 IDCW,                           /* LOAD FW IDCW                       */
  829              3 DC UBIN(6) UNAL,
  830              3 DVN UBIN(6) UNAL,
  831              3 EXTA UBIN(6) UNAL,            /* IOM/IOP; ADDRESS EXTENSION         */
  832              3 DATA REDEF EXTA UNAL,
  833                4 IBC BIT(1) UNAL,            /* IMX; INHIBIT BASE CHANGE FOR DATA  */
  834                4 BASE UBIN(2) UNAL,          /* IMX; BASE FOR DATA                 */
  835                4 * BIT(3) UNAL,
  836              3 SVN UBIN(3) UNAL,
  837              3 EC BIT(1) UNAL,
  838              3 CONT BIT(1) UNAL,
  839              3 MARK UBIN(1) UNAL,
  840              3 CC,
  841                4 * BIT(4),
  842                4 NOBUF BIT(1),
  843                4 * BIT(1),
  844              3 RCNT UBIN(6) UNAL,
  845            2 DCW(0:3),                       /* DATA DCW LIST                      */
  846              3 FWA UBIN(18) UNAL,
  847              3 ICP UBIN(3) UNAL,
  848              3 TYPE UBIN(3) UNAL,
  849              3 TALLY UBIN(12) UNAL,
  850            2 FW(0:0) BIT(36) ALIGNED;        /* FIRMWARE STARTS HERE               */
  851      %MEND;
15:05 JUL 28 '97 NI$TABLES.:E05SI                                          24   
  852      /**/
  853      %MACRO NI$PARTITION (NAME=NI$PARTITION,STCLASS=BASED,LAST=";",LVL=1);
  854
  855      /*B* TABLE OF PARTITIONED DEVICES AND CHANNELS
  856      */
  857
  858      %IF LVL=1;
  859      DCL 1 NAME STCLASS ALIGNED,
  860      %ELSE;
  861      %(LVL) NAME,
  862      %ENDIF;
  863            %(LVL+1) DEVICE(0:359) BIT(1),    /* PARTITIONED DEVICES INDEXED BY DCTX*/
  864            %(LVL+1) IOCHAN(0:539) BIT(1),    /*PARTED CHANS INDEXED BY IOM*128+CHAN*/
  865            %(LVL+1) MSOS_DEVICE(0:359) BIT(1),
  866                                              /* PARTITIONED DEVS INDEXED BY DCTX   */
  867            %(LVL+1) MSOS_IOCHAN(0:539) BIT(1) LAST
  868                                              /*PARTED CHANS INDEXED BY IOM*128+CHAN*/
  869      %MEND;
  870      /* END NI$TABLES */

