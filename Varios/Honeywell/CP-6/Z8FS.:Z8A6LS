VERSION A06

PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:1    
        1        1        /*M*  Z8FS$SRCH_IF_DO_LBL  Reset the links for DOs, IFs, and DEFLBs */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*P*
       10       10               NAME:  Z8FS$SRCH_IF_DO_LBL
       11       11             AUTHOR:  Greg Myers
       12       12            PURPOSE:  This procedure is called when a Perform code group is moved in
       13       13                      line.  The IF, DO, and DEFLB chains are reorganized so that they
       14       14                      are correct, if an IF, DO, or DEFLB is in the code group.
       15       15        */
       16       16
       17       17        /*D*
       18       18               NAME:  Z8FS$SRCH_IF_DO_LBL
       19       19               CALL:  CALL Z8FS$SRCH_IF_DO_LBL (start_label, end_label);
       20       20
       21       21              INPUT:  COMCOM.H_DO  -- Ptr to last DO or DOEND.
       22       22                      ILL$    -- Ptr to PFORM.
       23       23                      start_label -- Starting label of PERFORM
       24       24                      end_label -- Ending label of PERFORM
       25       25             OUTPUT:  The IF, DO, and DEFLB linked chains may be reorganized.
       26       26
       27       27        DESCRIPTION:  The procedure loops thru the code group to be copied
       28       28                      and checks for IFs, DOs, or DEFLBs.  If there are any then
       29       29                      that link chain is reorganized by finding the links before
       30       30                      and after the code group and resetting them.  This is done because
       31       31                      when the code group is brought in-line, the items will be deleted
       32       32                      from their current position in the linked list.
       33       33        */
       34       34        %EJECT ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:2    
       35       35        Z8FS$SRCH_IF_DO_LBL: PROC (PFORM_START_LAB$, PFORM_END_LAB$) ;
       36       36
       37       37    1   DCL  PFORM_START_LAB$    PTR ;
       38       38    1   DCL  PFORM_END_LAB$      PTR ;
       39       39
       40       40        %EQU PHASE=2 ;
       41       41        %INCLUDE Z8A_DEFC ;
       42      109        %INCLUDE Z8A_SUPP_MAC ;
       43     2509        %INCLUDE Z8A_COMCOM ;
       44     3159        %INCLUDE Z8A_ILL ;
       45     3852        %INCLUDE Z8A_ILS ;
       46     3961        %INCLUDE Z8A_ST ;
       47     7620        %INCLUDE Z8F_O2COM ;
       48     7730
       49     7731    1   DCL   START_DO$    PTR STATIC ; /* Ptr to first DO in code group */
       50     7732    1   DCL   END_DO$      PTR STATIC ; /* Ptr to last DOEND in code */
       51     7733    1   DCL   LAST_REF$    PTR STATIC ; /* Ptr to last refd DEFLB    */
       52     7734    1   DCL   SEARCH$      PTR STATIC ; /* Ptr to ILS item being checked */
       53     7735    1   DCL   SEARCH_LBL$  PTR STATIC ; /* Ptr to DEFLB item during search */
       54     7736    1   DCL   SEARCH_DO$   PTR STATIC ; /* Ptr to DO item during search    */
       55     7737
       56     7738    1   DCL  PFORM_START_LAB_ILS$  PTR ;
       57     7739    1   DCL  PFORM_END_LAB_ILS$    PTR ;
       58     7740        %EJECT ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:3    
       59     7741        /*V*
       60     7742            SEARCH_CODE_GROUP -- Search the code group to see if there are any
       61     7743                                 IFs or DOs.  If there are, then set pointers to
       62     7744                                 the first and last of each.  The search starts at the
       63     7745                                 first ILS entry after the starting DEFLB.
       64     7746        */
       65     7747
       66     7748    1          START_DO$ = ADDR(NIL) ;
       67     7749    1          PFORM_START_LAB_ILS$ = PFORM_START_LAB$->LABEL.PREV_ILS$ ;
       68     7750    1          PFORM_END_LAB_ILS$ = PFORM_END_LAB$->LABEL.PREV_ILS$ ;
       69     7751               %NEXT_NON_SUPPORT (POINTER=PFORM_START_LAB_ILS$) ;
       70     7766               %NEXT_NON_SUPPORT (POINTER=PFORM_END_LAB_ILS$) ;
       71     7781
       72     7782    1          SEARCH$ = PFORM_START_LAB_ILS$ ;
       73     7783
       74     7784    2          DO WHILE SEARCH$ ~= PFORM_END_LAB_ILS$ ;
       75     7785
       76     7786    3            DO CASE (SEARCH$->ILS.ILL$->ILL.ID) ;
       77     7787
       78     7788    3              CASE (%DO1,%DO2,%DO3,%DO4,%DO5/*,%DO6*/,%DOEND) ;
       79     7789    3                END_DO$ = SEARCH$ ;
       80     7790    3                IF START_DO$ = ADDR(NIL) THEN
       81     7791    3                  START_DO$ = SEARCH$ ;
       82     7792
       83     7793    3            END ;
       84     7794
       85     7795        %NEXT_ILS (POINTER=SEARCH$) ;
       86     7800    2          END ;
       87     7801        %EJECT ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:4    
       88     7802        /*V*
       89     7803            RELINK_LBL -- Find the last referenced label before the code group.  This
       90     7804                          is used for reassigning DO_N.XLAB for DO items.  Also
       91     7805                          link the DEFLB before the code group with the DEFLB after the
       92     7806                          code group.
       93     7807        */
       94     7808
       95     7809    1          SEARCH_LBL$ = COMCOM.H_LBL ;
       96     7810
       97     7811    2          DO WHILE SEARCH_LBL$->ILS.ILL$->ILL.LBL ~= PFORM_START_LAB_ILS$ ;
       98     7812    2            IF SEARCH_LBL$->ILS.ILL$->ILL.LOP->LABEL.B.REFERENCED THEN
       99     7813    2              LAST_REF$ = SEARCH_LBL$ ;
      100     7814    2            SEARCH_LBL$ = SEARCH_LBL$->ILS.ILL$->ILL.LBL ;
      101     7815    2          END ;
      102     7816
      103     7817    1          SEARCH_LBL$->ILS.ILL$->ILL.LBL = PFORM_END_LAB_ILS$->ILS.ILL$->ILL.LBL ;
      104     7818        %EJECT ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:5    
      105     7819        /*V*
      106     7820            RELINK_DO -- Reset the DO_N.XLAB pointers for any DO items after the
      107     7821                         code group that point to the ending label.  If there
      108     7822                         is no DO in the code group then all DOs are searched
      109     7823                         to see if they point to the end label otherwise only the
      110     7824                         DOs after the code group are searched.  The DO item
      111     7825                         after the code group is linked to the DOEND before the code
      112     7826                         group also.
      113     7827        */
      114     7828
      115     7829    1          IF COMCOM.H_DO ~= ADDR(NIL) THEN
      116     7830    2            DO ;
      117     7831
      118     7832    2              IF START_DO$ = ADDR(NIL) THEN
      119     7833    3                DO ;
      120     7834    3                  SEARCH_DO$ = COMCOM.H_DO ;
      121     7835
      122     7836    4                  DO UNTIL SEARCH_DO$ = ADDR(NIL) ;
      123     7837    4                    IF SEARCH_DO$->ILS.ILL$->DO_N.XLAB = PFORM_END_LAB_ILS$ THEN
      124     7838    4                      SEARCH_DO$->ILS.ILL$->DO_N.XLAB = LAST_REF$ ;
      125     7839    4                    SEARCH_DO$ = SEARCH_DO$->ILS.ILL$->DO_N.ITP ;
      126     7840    4                  END ;
      127     7841
      128     7842    3                END ;
      129     7843    2              ELSE  /* START_DO$ ~= ADDR(NIL) */
      130     7844    3                DO ;
      131     7845
      132     7846    3                  IF COMCOM.H_DO = END_DO$ THEN
      133     7847    3                    COMCOM.H_DO = START_DO$->ILS.ILL$->DO_N.ITP ;
      134     7848    3                  ELSE
      135     7849    4                    DO ;
      136     7850    4                      SEARCH_DO$ = COMCOM.H_DO ;
      137     7851
      138     7852    5                      DO WHILE SEARCH_DO$->ILS.ILL$->DO_N.ITP ~= END_DO$ ;
      139     7853    5                        IF SEARCH_DO$->ILS.ILL$->DO_N.XLAB = PFORM_END_LAB_ILS$ THEN
      140     7854    5                          SEARCH_DO$->ILS.ILL$->DO_N.XLAB = LAST_REF$ ;
      141     7855    5                        SEARCH_DO$ = SEARCH_DO$->ILS.ILL$->DO_N.ITP ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:6    
      142     7856    5                      END ;
      143     7857
      144     7858    4                      SEARCH_DO$->ILS.ILL$->DO_N.ITP = START_DO$->ILS.ILL$->DO_N.ITP ;
      145     7859    4                    END ;
      146     7860
      147     7861    3                END ;
      148     7862
      149     7863    2            END ;
      150     7864    1   END Z8FS$SRCH_IF_DO_LBL ;

PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:7    
--  Include file information  --

   Z8F_O2COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ILS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ILL.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8FS$SRCH_IF_DO_LBL.

   Procedure Z8FS$SRCH_IF_DO_LBL requires 166 words for executable code.
   Procedure Z8FS$SRCH_IF_DO_LBL requires 8 words of local(AUTO) storage.

    No errors detected in file Z8FS.:Z8A6TSI    .

PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:8    

 Object Unit name= Z8FS$SRCH_IF_DO_LBL                        File name= Z8FS.:Z8A6TOU
 UTS= AUG 09 '97 13:13:15.76 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ILL$
    2  LblCom even  none     5      5  ILL_
    3  LblCom even  none     1      1  ILS$
    4  LblCom even  none     5      5  ILS_
    5  LblCom even  none     1      1  ST$
    6  LblCom even  none     5      5  ST_
    7  LblCom even  none    12     14  O2COM
    8   Data  even  none     6      6  Z8FS$SRCH_IF_DO_LBL
    9   Proc  even  none   166    246  Z8FS$SRCH_IF_DO_LBL
   10  RoData even  none     1      1  Z8FS$SRCH_IF_DO_LBL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     9      0   yes            yes      Std        2  Z8FS$SRCH_IF_DO_LBL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                           r    ILL_STEP                         r    ILS_STEP_TABLE

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:10   


        1        1        /*M*  Z8FS$SRCH_IF_DO_LBL  Reset the links for DOs, IFs, and DEFLBs */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*P*
       10       10               NAME:  Z8FS$SRCH_IF_DO_LBL
       11       11             AUTHOR:  Greg Myers
       12       12            PURPOSE:  This procedure is called when a Perform code group is moved in
       13       13                      line.  The IF, DO, and DEFLB chains are reorganized so that they
       14       14                      are correct, if an IF, DO, or DEFLB is in the code group.
       15       15        */
       16       16
       17       17        /*D*
       18       18               NAME:  Z8FS$SRCH_IF_DO_LBL
       19       19               CALL:  CALL Z8FS$SRCH_IF_DO_LBL (start_label, end_label);
       20       20
       21       21              INPUT:  COMCOM.H_DO  -- Ptr to last DO or DOEND.
       22       22                      ILL$    -- Ptr to PFORM.
       23       23                      start_label -- Starting label of PERFORM
       24       24                      end_label -- Ending label of PERFORM
       25       25             OUTPUT:  The IF, DO, and DEFLB linked chains may be reorganized.
       26       26
       27       27        DESCRIPTION:  The procedure loops thru the code group to be copied
       28       28                      and checks for IFs, DOs, or DEFLBs.  If there are any then
       29       29                      that link chain is reorganized by finding the links before
       30       30                      and after the code group and resetting them.  This is done because
       31       31                      when the code group is brought in-line, the items will be deleted
       32       32                      from their current position in the linked list.
       33       33        */
       34       34        %EJECT ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:11   
       35       35        Z8FS$SRCH_IF_DO_LBL: PROC (PFORM_START_LAB$, PFORM_END_LAB$) ;

     35  9 000000   000000 700200 xent  Z8FS$SRCH_I* TSX0  ! X66_AUTO_2
         9 000001   000010 000002                    ZERO    8,2

       36       36
       37       37    1   DCL  PFORM_START_LAB$    PTR ;
       38       38    1   DCL  PFORM_END_LAB$      PTR ;
       39       39
       40       40        %EQU PHASE=2 ;
       41       41        %INCLUDE Z8A_DEFC ;
       42      109        %INCLUDE Z8A_SUPP_MAC ;
       43     2509        %INCLUDE Z8A_COMCOM ;
       44     3159        %INCLUDE Z8A_ILL ;
       45     3852        %INCLUDE Z8A_ILS ;
       46     3961        %INCLUDE Z8A_ST ;
       47     7620        %INCLUDE Z8F_O2COM ;
       48     7730
       49     7731    1   DCL   START_DO$    PTR STATIC ; /* Ptr to first DO in code group */
       50     7732    1   DCL   END_DO$      PTR STATIC ; /* Ptr to last DOEND in code */
       51     7733    1   DCL   LAST_REF$    PTR STATIC ; /* Ptr to last refd DEFLB    */
       52     7734    1   DCL   SEARCH$      PTR STATIC ; /* Ptr to ILS item being checked */
       53     7735    1   DCL   SEARCH_LBL$  PTR STATIC ; /* Ptr to DEFLB item during search */
       54     7736    1   DCL   SEARCH_DO$   PTR STATIC ; /* Ptr to DO item during search    */
       55     7737
       56     7738    1   DCL  PFORM_START_LAB_ILS$  PTR ;
       57     7739    1   DCL  PFORM_END_LAB_ILS$    PTR ;
       58     7740        %EJECT ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:12   
       59     7741        /*V*
       60     7742            SEARCH_CODE_GROUP -- Search the code group to see if there are any
       61     7743                                 IFs or DOs.  If there are, then set pointers to
       62     7744                                 the first and last of each.  The search starts at the
       63     7745                                 first ILS entry after the starting DEFLB.
       64     7746        */
       65     7747
       66     7748    1          START_DO$ = ADDR(NIL) ;

   7748  9 000002   000000 236000 10                 LDQ     0
         9 000003   000000 756000 8                  STQ     START_DO$

       67     7749    1          PFORM_START_LAB_ILS$ = PFORM_START_LAB$->LABEL.PREV_ILS$ ;

   7749  9 000004   200003 470500                    LDP0    @PFORM_START_LAB$,,AUTO
         9 000005   000000 471500                    LDP1    0,,PR0
         9 000006   100010 236100                    LDQ     8,,PR1
         9 000007   200005 756100                    STQ     PFORM_START_LAB_ILS$,,AUTO

       68     7750    1          PFORM_END_LAB_ILS$ = PFORM_END_LAB$->LABEL.PREV_ILS$ ;

   7750  9 000010   200004 473500                    LDP3    @PFORM_END_LAB$,,AUTO
         9 000011   300000 474500                    LDP4    0,,PR3
         9 000012   400010 236100                    LDQ     8,,PR4
         9 000013   200006 756100                    STQ     PFORM_END_LAB_ILS$,,AUTO

       69     7751               %NEXT_NON_SUPPORT (POINTER=PFORM_START_LAB_ILS$) ;

   7761  9 000014   200005 470500                    LDP0    PFORM_START_LAB_ILS$,,AUTO
         9 000015   000002 236100                    LDQ     2,,PR0
         9 000016   200005 756100                    STQ     PFORM_START_LAB_ILS$,,AUTO

   7764  9 000017   200005 470500                    LDP0    PFORM_START_LAB_ILS$,,AUTO
         9 000020   000003 236100                    LDQ     3,,PR0
         9 000021   000000 116000 10                 CMPQ    0
         9 000022   000014 600000 9                  TZE     s:7761
         9 000023   000003 471500                    LDP1    3,,PR0
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:13   
         9 000024   100000 220100                    LDX0    0,,PR1
         9 000025   000343 100003                    CMPX0   227,DU
         9 000026   000014 600000 9                  TZE     s:7761
         9 000027   000422 100003                    CMPX0   274,DU
         9 000030   000014 600000 9                  TZE     s:7761
         9 000031   000446 100003                    CMPX0   294,DU
         9 000032   000014 600000 9                  TZE     s:7761
         9 000033   000336 100003                    CMPX0   222,DU
         9 000034   000014 600000 9                  TZE     s:7761
         9 000035   000420 100003                    CMPX0   272,DU
         9 000036   000014 600000 9                  TZE     s:7761
         9 000037   000373 100003                    CMPX0   251,DU
         9 000040   000014 600000 9                  TZE     s:7761

       70     7766               %NEXT_NON_SUPPORT (POINTER=PFORM_END_LAB_ILS$) ;

   7776  9 000041   200006 470500                    LDP0    PFORM_END_LAB_ILS$,,AUTO
         9 000042   000002 236100                    LDQ     2,,PR0
         9 000043   200006 756100                    STQ     PFORM_END_LAB_ILS$,,AUTO

   7779  9 000044   200006 470500                    LDP0    PFORM_END_LAB_ILS$,,AUTO
         9 000045   000003 236100                    LDQ     3,,PR0
         9 000046   000000 116000 10                 CMPQ    0
         9 000047   000041 600000 9                  TZE     s:7776
         9 000050   000003 471500                    LDP1    3,,PR0
         9 000051   100000 220100                    LDX0    0,,PR1
         9 000052   000343 100003                    CMPX0   227,DU
         9 000053   000041 600000 9                  TZE     s:7776
         9 000054   000422 100003                    CMPX0   274,DU
         9 000055   000041 600000 9                  TZE     s:7776
         9 000056   000446 100003                    CMPX0   294,DU
         9 000057   000041 600000 9                  TZE     s:7776
         9 000060   000336 100003                    CMPX0   222,DU
         9 000061   000041 600000 9                  TZE     s:7776
         9 000062   000420 100003                    CMPX0   272,DU
         9 000063   000041 600000 9                  TZE     s:7776
         9 000064   000373 100003                    CMPX0   251,DU
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:14   
         9 000065   000041 600000 9                  TZE     s:7776

       71     7781
       72     7782    1          SEARCH$ = PFORM_START_LAB_ILS$ ;

   7782  9 000066   200005 236100                    LDQ     PFORM_START_LAB_ILS$,,AUTO
         9 000067   000003 756000 8                  STQ     SEARCH$

       73     7783
       74     7784    2          DO WHILE SEARCH$ ~= PFORM_END_LAB_ILS$ ;

   7784  9 000070   200006 116100                    CMPQ    PFORM_END_LAB_ILS$,,AUTO
         9 000071   000124 600000 9                  TZE     s:7809

       75     7785
       76     7786    3            DO CASE (SEARCH$->ILS.ILL$->ILL.ID) ;

   7786  9 000072   000003 470400 8                  LDP0    SEARCH$
         9 000073   000003 471500                    LDP1    3,,PR0
         9 000074   100000 236100                    LDQ     0,,PR1
         9 000075   000022 772000                    QRL     18
         9 000076   000375 136007                    SBLQ    253,DL
         9 000077   000007 116007                    CMPQ    7,DL
         9 000100   000102 602006 9                  TNC     s:7786+8,QL
         9 000101   000120 710000 9                  TRA     s:7797
         9 000102   000111 710000 9                  TRA     s:7789
         9 000103   000111 710000 9                  TRA     s:7789
         9 000104   000111 710000 9                  TRA     s:7789
         9 000105   000111 710000 9                  TRA     s:7789
         9 000106   000111 710000 9                  TRA     s:7789
         9 000107   000120 710000 9                  TRA     s:7797
         9 000110   000111 710000 9                  TRA     s:7789

       77     7787
       78     7788    3              CASE (%DO1,%DO2,%DO3,%DO4,%DO5/*,%DO6*/,%DOEND) ;

       79     7789    3                END_DO$ = SEARCH$ ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:15   

   7789  9 000111   000003 236000 8                  LDQ     SEARCH$
         9 000112   000001 756000 8                  STQ     END_DO$

       80     7790    3                IF START_DO$ = ADDR(NIL) THEN

   7790  9 000113   000000 236000 8                  LDQ     START_DO$
         9 000114   000000 116000 10                 CMPQ    0
         9 000115   000120 601000 9                  TNZ     s:7797

       81     7791    3                  START_DO$ = SEARCH$ ;

   7791  9 000116   000003 236000 8                  LDQ     SEARCH$
         9 000117   000000 756000 8                  STQ     START_DO$

       82     7792
       83     7793    3            END ;

       84     7794
       85     7795        %NEXT_ILS (POINTER=SEARCH$) ;

   7797  9 000120   000002 236100                    LDQ     2,,PR0
         9 000121   000003 756000 8                  STQ     SEARCH$

       86     7800    2          END ;

   7800  9 000122   200006 116100                    CMPQ    PFORM_END_LAB_ILS$,,AUTO
         9 000123   000072 601000 9                  TNZ     s:7786

       87     7801        %EJECT ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:16   
       88     7802        /*V*
       89     7803            RELINK_LBL -- Find the last referenced label before the code group.  This
       90     7804                          is used for reassigning DO_N.XLAB for DO items.  Also
       91     7805                          link the DEFLB before the code group with the DEFLB after the
       92     7806                          code group.
       93     7807        */
       94     7808
       95     7809    1          SEARCH_LBL$ = COMCOM.H_LBL ;

   7809  9 000124   000321 236000 xsym               LDQ     COMCOM+209
         9 000125   000004 756000 8                  STQ     SEARCH_LBL$

       96     7810
       97     7811    2          DO WHILE SEARCH_LBL$->ILS.ILL$->ILL.LBL ~= PFORM_START_LAB_ILS$ ;

   7811  9 000126   000004 470400 8                  LDP0    SEARCH_LBL$
         9 000127   000003 471500                    LDP1    3,,PR0
         9 000130   100002 236100                    LDQ     2,,PR1
         9 000131   200005 116100                    CMPQ    PFORM_START_LAB_ILS$,,AUTO
         9 000132   000151 600000 9                  TZE     s:7817

       98     7812    2            IF SEARCH_LBL$->ILS.ILL$->ILL.LOP->LABEL.B.REFERENCED THEN

   7812  9 000133   000004 470400 8                  LDP0    SEARCH_LBL$
         9 000134   000003 471500                    LDP1    3,,PR0
         9 000135   100001 473500                    LDP3    1,,PR1
         9 000136   300003 234100                    SZN     3,,PR3
         9 000137   000142 605000 9                  TPL     s:7814

       99     7813    2              LAST_REF$ = SEARCH_LBL$ ;

   7813  9 000140   000004 236000 8                  LDQ     SEARCH_LBL$
         9 000141   000002 756000 8                  STQ     LAST_REF$

      100     7814    2            SEARCH_LBL$ = SEARCH_LBL$->ILS.ILL$->ILL.LBL ;

   7814  9 000142   100002 236100                    LDQ     2,,PR1
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:17   
         9 000143   000004 756000 8                  STQ     SEARCH_LBL$

      101     7815    2          END ;

   7815  9 000144   000004 470400 8                  LDP0    SEARCH_LBL$
         9 000145   000003 471500                    LDP1    3,,PR0
         9 000146   100002 236100                    LDQ     2,,PR1
         9 000147   200005 116100                    CMPQ    PFORM_START_LAB_ILS$,,AUTO
         9 000150   000133 601000 9                  TNZ     s:7812

      102     7816
      103     7817    1          SEARCH_LBL$->ILS.ILL$->ILL.LBL = PFORM_END_LAB_ILS$->ILS.ILL$->ILL.LBL ;

   7817  9 000151   200006 473500                    LDP3    PFORM_END_LAB_ILS$,,AUTO
         9 000152   300003 474500                    LDP4    3,,PR3
         9 000153   400002 236100                    LDQ     2,,PR4
         9 000154   100002 756100                    STQ     2,,PR1

      104     7818        %EJECT ;
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:18   
      105     7819        /*V*
      106     7820            RELINK_DO -- Reset the DO_N.XLAB pointers for any DO items after the
      107     7821                         code group that point to the ending label.  If there
      108     7822                         is no DO in the code group then all DOs are searched
      109     7823                         to see if they point to the end label otherwise only the
      110     7824                         DOs after the code group are searched.  The DO item
      111     7825                         after the code group is linked to the DOEND before the code
      112     7826                         group also.
      113     7827        */
      114     7828
      115     7829    1          IF COMCOM.H_DO ~= ADDR(NIL) THEN

   7829  9 000155   000332 236000 xsym               LDQ     COMCOM+218
         9 000156   000000 116000 10                 CMPQ    0
         9 000157   000245 600000 9                  TZE     s:7864

      116     7830    2            DO ;

      117     7831
      118     7832    2              IF START_DO$ = ADDR(NIL) THEN

   7832  9 000160   000000 236000 8                  LDQ     START_DO$
         9 000161   000000 116000 10                 CMPQ    0
         9 000162   000202 601000 9                  TNZ     s:7846

      119     7833    3                DO ;

      120     7834    3                  SEARCH_DO$ = COMCOM.H_DO ;

   7834  9 000163   000332 236000 xsym               LDQ     COMCOM+218
         9 000164   000005 756000 8                  STQ     SEARCH_DO$

      121     7835
      122     7836    4                  DO UNTIL SEARCH_DO$ = ADDR(NIL) ;

      123     7837    4                    IF SEARCH_DO$->ILS.ILL$->DO_N.XLAB = PFORM_END_LAB_ILS$ THEN

PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:19   
   7837  9 000165   000005 470400 8                  LDP0    SEARCH_DO$
         9 000166   000003 471500                    LDP1    3,,PR0
         9 000167   100006 236100                    LDQ     6,,PR1
         9 000170   200006 116100                    CMPQ    PFORM_END_LAB_ILS$,,AUTO
         9 000171   000174 601000 9                  TNZ     s:7839

      124     7838    4                      SEARCH_DO$->ILS.ILL$->DO_N.XLAB = LAST_REF$ ;

   7838  9 000172   000002 236000 8                  LDQ     LAST_REF$
         9 000173   100006 756100                    STQ     6,,PR1

      125     7839    4                    SEARCH_DO$ = SEARCH_DO$->ILS.ILL$->DO_N.ITP ;

   7839  9 000174   000003 471500                    LDP1    3,,PR0
         9 000175   100003 236100                    LDQ     3,,PR1
         9 000176   000005 756000 8                  STQ     SEARCH_DO$

      126     7840    4                  END ;

   7840  9 000177   000000 116000 10                 CMPQ    0
         9 000200   000165 601000 9                  TNZ     s:7837

      127     7841
      128     7842    3                END ;

   7842  9 000201   000245 710000 9                  TRA     s:7864

      129     7843    2              ELSE  /* START_DO$ ~= ADDR(NIL) */
      130     7844    3                DO ;

      131     7845
      132     7846    3                  IF COMCOM.H_DO = END_DO$ THEN

   7846  9 000202   000332 236000 xsym               LDQ     COMCOM+218
         9 000203   000001 116000 8                  CMPQ    END_DO$
         9 000204   000212 601000 9                  TNZ     s:7850

PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:20   
      133     7847    3                    COMCOM.H_DO = START_DO$->ILS.ILL$->DO_N.ITP ;

   7847  9 000205   000000 471400 8                  LDP1    START_DO$
         9 000206   100003 474500                    LDP4    3,,PR1
         9 000207   400003 236100                    LDQ     3,,PR4
         9 000210   000332 756000 xsym               STQ     COMCOM+218
         9 000211   000245 710000 9                  TRA     s:7864

      134     7848    3                  ELSE
      135     7849    4                    DO ;

      136     7850    4                      SEARCH_DO$ = COMCOM.H_DO ;

   7850  9 000212   000005 756000 8                  STQ     SEARCH_DO$

      137     7851
      138     7852    5                      DO WHILE SEARCH_DO$->ILS.ILL$->DO_N.ITP ~= END_DO$ ;

   7852  9 000213   000005 471400 8                  LDP1    SEARCH_DO$
         9 000214   100003 474500                    LDP4    3,,PR1
         9 000215   400003 236100                    LDQ     3,,PR4
         9 000216   000001 116000 8                  CMPQ    END_DO$
         9 000217   000237 600000 9                  TZE     s:7858

      139     7853    5                        IF SEARCH_DO$->ILS.ILL$->DO_N.XLAB = PFORM_END_LAB_ILS$ THEN

   7853  9 000220   000005 470400 8                  LDP0    SEARCH_DO$
         9 000221   000003 471500                    LDP1    3,,PR0
         9 000222   100006 236100                    LDQ     6,,PR1
         9 000223   200006 116100                    CMPQ    PFORM_END_LAB_ILS$,,AUTO
         9 000224   000227 601000 9                  TNZ     s:7855

      140     7854    5                          SEARCH_DO$->ILS.ILL$->DO_N.XLAB = LAST_REF$ ;

   7854  9 000225   000002 236000 8                  LDQ     LAST_REF$
         9 000226   100006 756100                    STQ     6,,PR1

PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:21   
      141     7855    5                        SEARCH_DO$ = SEARCH_DO$->ILS.ILL$->DO_N.ITP ;

   7855  9 000227   000003 471500                    LDP1    3,,PR0
         9 000230   100003 236100                    LDQ     3,,PR1
         9 000231   000005 756000 8                  STQ     SEARCH_DO$

      142     7856    5                      END ;

   7856  9 000232   000005 470400 8                  LDP0    SEARCH_DO$
         9 000233   000003 471500                    LDP1    3,,PR0
         9 000234   100003 236100                    LDQ     3,,PR1
         9 000235   000001 116000 8                  CMPQ    END_DO$
         9 000236   000220 601000 9                  TNZ     s:7853

      143     7857
      144     7858    4                      SEARCH_DO$->ILS.ILL$->DO_N.ITP = START_DO$->ILS.ILL$->DO_N.ITP ;

   7858  9 000237   000005 470400 8                  LDP0    SEARCH_DO$
         9 000240   000003 471500                    LDP1    3,,PR0
         9 000241   000000 473400 8                  LDP3    START_DO$
         9 000242   300003 474500                    LDP4    3,,PR3
         9 000243   400003 236100                    LDQ     3,,PR4
         9 000244   100003 756100                    STQ     3,,PR1

      145     7859    4                    END ;

      146     7860
      147     7861    3                END ;

      148     7862
      149     7863    2            END ;

      150     7864    1   END Z8FS$SRCH_IF_DO_LBL ;

   7864  9 000245   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:22   
--  Include file information  --

   Z8F_O2COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ILS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ILL.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8FS$SRCH_IF_DO_LBL.
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:23   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ILL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ILL$

  ****  Section 002 LblCom ILL_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ILL_

  ****  Section 003 LblCom ILS$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ILS$

  ****  Section 004 LblCom ILS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ILS_

PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:24   
  ****  Section 005 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 006 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 007 LblCom O2COM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(432)         1 O2COM

  ****  Section 008  Data  Z8FS$SRCH_IF_DO_LBL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w PTR         r     1 END_DO$                    2-0-0/w PTR         r     1 LAST_REF$
     3-0-0/w PTR         r     1 SEARCH$                    5-0-0/w PTR         r     1 SEARCH_DO$
     4-0-0/w PTR         r     1 SEARCH_LBL$                0-0-0/w PTR         r     1 START_DO$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PFORM_END_LAB$            3-0-0/w PTR         r     1 @PFORM_START_LAB$
    *0-0-0/w PTR         r     1 PFORM_END_LAB$             6-0-0/w PTR         r     1 PFORM_END_LAB_ILS$
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:25   
    *0-0-0/w PTR         r     1 PFORM_START_LAB$           5-0-0/w PTR         r     1 PFORM_START_LAB_ILS$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM                     0-0-0/w UBIN              1 ILL_STEP(0:144)
     0-0-0/w UBIN              1 ILS_STEP_TABLE(0:2)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)         1 ACCEPT_DISPLAY             0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w STRC(108)         1 BINARY_ILL
     0-0-0/w STRC(396)         1 BLOCK                      0-0-0/w STRC(144)         1 BRANCH_ILL
     0-0-0/w STRC(216)         1 CCOSU                      0-0-0/w STRC(396)         1 CD
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(108)         1 CODED_MOVE                 0-0-0/w STRC(396)         1 CONDITION
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(144)         1 DEFLB                      0-0-0/w STRC(396)         1 DML_ITEM
     0-0-0/w STRC(144)         1 DOEND                      0-0-0/w STRC(396)   r     1 DO_N
     0-0-0/w STRC(180)         1 DV4I                       0-0-0/w STRC(180)         1 ENTRY_ILL
     0-0-0/w STRC(108)         1 EVALU                      0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(144)         1 GO                         0-0-0/w STRC(180)   r     1 ILL
     0-0-0/w STRC              1 ILL_NO_OPS                 0-0-0/w STRC(180)   r     1 ILS
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(396)   r     1 LABEL
     0-0-0/w STRC(108)         1 LINOI                      0-0-0/w STRC(72)          1 MFILL
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(180)         1 MULTI_GO
     0-0-0/w STRC(180)         1 MVEAL                      0-0-0/w STRC(108)         1 MVFIL
     0-0-0/w STRC(72)          1 MVIIS                      0-0-0/w STRC(144)         1 OPN
     0-0-0/w STRC(180)         1 OS_CALL                    0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(216)         1 PFORM
     0-0-0/w STRC(144)         1 PINC                       0-0-0/w STRC(144)         1 PREOFF
PL6.E3A0      #001=Z8FS$SRCH_IF_DO_LBL File=Z8FS.:Z8A6TSI                        SAT 08/09/97 13:13 Page:26   
     0-0-0/w STRC(108)         1 PRESET                     0-0-0/w STRC(396)         1 PROC_
     0-0-0/w STRC(396)         1 PROC_DEF                   0-0-0/w STRC(144)         1 P_A_PRESET
     0-0-0/w STRC(144)         1 P_P_PRESET                 0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(144)         1 REMEM                      0-0-0/w STRC(396)         1 SCALAR
     0-0-0/w STRC(144)         1 SCOPE                      0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(216)         1 SEARCH_                    0-0-0/w STRC(396)         1 SECTION
     0-0-0/w STRC(396)         1 SEGMENT                    0-0-0/w STRC(396)         1 ST
     0-0-0/w STRC(72)          1 STP2                       0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(144)         1 TRINARY_ILL                0-0-0/w STRC(72)          1 UNARY_ILL
     0-0-0/w STRC(216)         1 USER_CALL                  0-0-0/w STRC(108)         1 VAL
     0-0-0/w STRC(108)         1 VAL_END                    0-0-0/w STRC(396)         1 VARIABLE
     0-0-0/w STRC(72)          1 WHEN


   Procedure Z8FS$SRCH_IF_DO_LBL requires 166 words for executable code.
   Procedure Z8FS$SRCH_IF_DO_LBL requires 8 words of local(AUTO) storage.

    No errors detected in file Z8FS.:Z8A6TSI    .
