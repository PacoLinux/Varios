VERSION E05

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:1    
        1        1        /*M* QBL$LOAD:  Execute a LOAD statement.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P*  NAME:         QBL$LOAD
       10       10              PURPOSE:      Load another FPL program.
       11       11              DESCRIPTION:  Execute a LOAD op-code, whose argument is
       12       12                            a COBOL-type DAD indicating what to LOAD.
       13       13        */
       14       14
       15       15        QBL$LOAD: PROC;
       16       16
       17       17        /*D*  NAME:         QBL$LOAD
       18       18              CALL:         CALL QBL$LOAD;
       19       19              PARAMETERS:   None.
       20       20              INTERFACE:    Called by QAT$TALLYHO when a LOAD op-code is
       21       21                            encountered.  Calls M$LDTRC if successful.
       22       22              ENVIRONMENT:  Nothing unusual.
       23       23              INPUT:        QI_1,
       24       24                            FPL rununit static data following the op-code.
       25       25              OUTPUT:       Ends up in a different FPL program, if successful.
       26       26              SCRATCH:      Various otter data.
       27       27              DESCRIPTION:  Two "types" exist:
       28       28                            1)  LOAD { dataname | "literal" } BY NAME.
       29       29                                In this case, the dataname or "literal" is parsed,
       30       30                                and M$LDTRC is called.
       31       31                            2)  LOAD { dataname | "literal" } BY TYPE.
       32       32                                In this case (which can only be honored if the
       33       33                                FPL program is running in "TP mode") a message
       34       34                                is sent to TPA, who figures out which FPL
       35       35                                program corresponds to the message TYPE contained
       36       36                                in dataname or "literal" and sends back a message
       37       37                                containing a broken-down fid, which is then
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:2    
       38       38                                M$LDTRC'ed to.
       39       39        */
       40       40
       41       41          %INCLUDE GM_VIRTUAL_E;
       42      251          %INCLUDE LCP_6;
       43      442          %FPT_CLOSE ( FPTN = FPT@CLOSE,
       44      443                       STCLASS = AUTO );
       45      463          %FPT_GDS ( FPTN = FPT@GDS,
       46      464                     STCLASS = AUTO );
       47      488          %FPT_LDTRC ( FPTN = FPT@LDTRC,
       48      489                       STCLASS = AUTO );
       49      513          %FPT_OPEN ( FPTN = FPT@OPEN,
       50      514                      STCLASS = AUTO );
       51      542          %FPT_READ ( FPTN = FPT@READ,
       52      543                      STCLASS = AUTO );
       53      569          %FPT_WRITE ( FPTN = FPT@WRITE,
       54      570                       STCLASS = AUTO );
       55      594          %VLP_CG ( FPTN = VLP@CG,
       56      595                    STCLASS = AUTO );
       57      615          %G$EXCFR;
       58      997          %G$TCB;
       59     1018    1     DCL G$TCB$ PTR SYMREF;
       60     1019
       61     1020          %INCLUDE QG_MACRO_M;
       62     1157          %INCLUDE QI_EQUATES_E;
       63     1516          %INCLUDE QI_PERR_C;
       64     1684          %INCLUDE QI_MACROS_M;
       65     6742          %QI$ALL;
       66    17855          %QI_FPTS;
       67    19900
       68    19901    1     DCL FID$ CPTR;
       69    19902    1     DCL FID_INDEX UBIN;
       70    19903    1     DCL INSTR$ PTR;
       71    19904    1     DCL VARIABLE_AUX$ CPTR;
       72    19905    1     DCL WERE_ALL_DONE BIT(1) ALIGNED;
       73    19906    1     DCL WHATEVER_INDEX UBIN;
       74    19907
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:3    
       75    19908    1     DCL QCE$ERROR ENTRY (4);
       76    19909    1     DCL QCE$ERROR_M$INTERNAL ENTRY (4);
       77    19910    1     DCL QCC$VRFY ENTRY (1) ALTRET;
       78    19911    1     DCL QCS$SETUP_AUX ENTRY;
       79    19912    1     DCL QCS$SETUP_SOURCE ENTRY;
       80    19913    1     DCL QCU$UPDATE_SCREEN ENTRY;
       81    19914
       82    19915          %SET LISTMAC = '1'B;
       83    19916
       84    19917          %QI@OTTER_SPACE ( NAME = QI@FID_OR_TYPE,
       85    19918                            BYTE_SIZE = 256 );
             19919            %BEGIN_MACRO ( STCLASS = STCLASS );
             19920            %SET LISTDIR = '0'B;
             19933    1       DCL 1 QI@FID_OR_TYPE AUTO ALIGNED,
             19934    1             2 *(0:255) UBIN BYTE UNAL /* Was INIT'ed to:  (0*0)/**/;
             19935    1       DCL 1 QI@FID_OR_TYPE_CA (0:255) REDEF QI@FID_OR_TYPE CHAR(1) UNAL;
             19936    1       DCL 1 QI@FID_OR_TYPE_BA (0:255) REDEF QI@FID_OR_TYPE UBIN BYTE UNAL;
             19943            %ENDIF;
       86    19946
       87    19947          %SET LISTINC = '1'B;
       88    19948          %INCLUDE Q_MACRO_C;
        1+   19949        /*T***********************************************************/
        2+   19950        /*T*                                                         */
        3+   19951        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+   19952        /*T*                                                         */
        5+   19953        /*T***********************************************************/
        6+   19954
        7+   19955        /******************************************************************************/
        8+   19956        /*  FPL interpreter-to-Transaction Processing Administrator communication.    */
        9+   19957        /*  The FPL interpreter communicates with TPA, or any other Transaction       */
       10+   19958        /*  Processing Administrator, through messages defined below.  These          */
       11+   19959        /*  messages are generated during:                                            */
       12+   19960        /*  1)  A "LOAD <type> BY TYPE" statement;                                    */
       13+   19961        /*  2)  an FPL interpreter abort condition.                                   */
       14+   19962        /******************************************************************************/
       15+   19963
       16+   19964                 /***************************************/
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:4    
       17+   19965                 /*          Q_LDBYTYP                  */
       18+   19966                 /***************************************/
       19+   19967
       20+   19968        /*F* NAME: Q_LDBYTYP
       21+   19969
       22+   19970        The FPL interpreter supports the "LOAD <type> BY TYPE" statement for
       23+   19971        comgroup-connected FPRGs by sending a Q_LDBYTYP message into the
       24+   19972        comgroup with a message type of '*FPRQ   '. This message will
       25+   19973        then be read by the AU of the comgroup. The AU of the comgroup,
       26+   19974        (TPA for CP-6 TP) should then respond by writing a Q_LDBYTYPRSP
       27+   19975        message back to the originating FPRG terminal station. This
       28+   19976        message must have message type '*FPRQRSP' since FPL is reading
       29+   19977        for that message type to complete the load-by-type protocol.
       30+   19978
       31+   19979        The LOAD <type> BY TYPE may be rejected by TPA setting Q_LDBYTYPRSP.ERR#
       32+   19980        to an appropriate LCP6 error code.
       33+   19981        */
       34+   19982
       35+   19983        %MACRO Q_LDBYTYP (FPTN=Q_LDBYTYP,
       36+   19984                          STCLASS=STATIC,
       37+   19985                          TYPE=' ');
       38+   19986
       39+   19987         %LSET LISTDIR='0'B;
       40+   19988         %LSET LISTEXP='1'B;
       41+   19989         %LSET LISTCOM='0'B;
       42+   19990         %LSET LISTSUB='1'B;
       43+   19991         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
       44+   19992         %IF (SUBSTR(STR,0,6)='STATIC') OR
       45+   19993         (SUBSTR(STR,0,8)='CONSTANT') OR
       46+   19994         (SUBSTR(STR,0,3)='EXT');
       47+   19995         %LSET INIT=CHARTEXT('INIT');
       48+   19996         %LSET EINIT=CHARTEXT('');
       49+   19997         %ELSE;
       50+   19998         %LSET INIT=CHARTEXT('/*');
       51+   19999         %LSET EINIT=CHARTEXT('*/');
       52+   20000         %ENDIF;
       53+   20001
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:5    
       54+   20002        DCL 1 FPTN STCLASS,
       55+   20003              2 TYPE# CHAR(8) %INIT(TYPE)%EINIT;
       56+   20004                    /*K* TYPE = VALUE-CHAR(8) specifies the <type> from the
       57+   20005                    originating FPL "LOAD <type> BY TYPE" statement.
       58+   20006                    */
       59+   20007        %MEND;
       60+   20008
       61+   20009
       62+   20010                 /***************************************/
       63+   20011                 /*          Q_LDBYTYPRSP               */
       64+   20012                 /***************************************/
       65+   20013
       66+   20014        %MACRO Q_LDBYTYPRSP (FPTN=Q_LDBYTYPRSP,
       67+   20015                             STCLASS=STATIC,
       68+   20016                             PSN=' ',
       69+   20017                             NAME=' ',
       70+   20018                             ACCT=' ',
       71+   20019                             PASS=' ');
       72+   20020
       73+   20021         %LSET LISTDIR='0'B;
       74+   20022         %LSET LISTEXP='1'B;
       75+   20023         %LSET LISTCOM='0'B;
       76+   20024         %LSET LISTSUB='1'B;
       77+   20025         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
       78+   20026         %IF (SUBSTR(STR,0,6)='STATIC') OR
       79+   20027         (SUBSTR(STR,0,8)='CONSTANT') OR
       80+   20028         (SUBSTR(STR,0,3)='EXT');
       81+   20029         %LSET INIT=CHARTEXT('INIT');
       82+   20030         %LSET EINIT=CHARTEXT('');
       83+   20031         %ELSE;
       84+   20032         %LSET INIT=CHARTEXT('/*');
       85+   20033         %LSET EINIT=CHARTEXT('*/');
       86+   20034         %ENDIF;
       87+   20035
       88+   20036        DCL 1 FPTN STCLASS,
       89+   20037              %VLP_ERRCODE ( FPTN=ERR, LVL=2, ALGN=CALIGNED, STCLASS="", LAST="," );
       90+   20038                    /*K* ERR = VLP_ERRCODE.  Contains the error code
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:6    
       91+   20039                    returned to the FPL interpreter.  If ERR is '0'B,
       92+   20040                    the rest of this structure defines the values which
       93+   20041                    the FPL interpreter uses to issue an M$LDTRC to
       94+   20042                    satisfy the "LOAD <type> BY TYPE" statement.
       95+   20043
       96+   20044                    ERR is a standard LCP6 error code.  Note that the
       97+   20045                    host program may need to convert its error code into
       98+   20046                    FEP format.
       99+   20047                    */
      100+   20048              2 PSN# CHAR(6) CALIGNED %INIT(PSN)%EINIT,
      101+   20049                    /*K* PSN = VALUE-CHAR(6).  Specifies the packset
      102+   20050                    containing the FEP rununit which the FPL interpreter
      103+   20051                    is to M$LDTRC to.
      104+   20052                    */
      105+   20053              2 %CHARTEXT('NAME') CALIGNED,
      106+   20054         3 LEN# UBIN BYTE UNAL %INIT(LENGTHC(%CHARTEXT(CONCAT(TEXTCHAR(FPTN),'.NAME.NAME#'))
             20054        ))%EINIT,
      107+   20055
      108+   20056                 3 NAME# CHAR(31) CALIGNED %INIT(NAME)%EINIT,
      109+   20057                    /*K* NAME = VALUE-CHAR.  Specifies, in TEXTC-format,
      110+   20058                    the name of the FEP rununit which the FPL interpreter
      111+   20059                    is to M$LDTRC to.
      112+   20060                    */
      113+   20061              2 ACCT# CHAR(8) CALIGNED %INIT(ACCT)%EINIT,
      114+   20062                    /*K* ACCT = VALUE-CHAR(8).  Specifies the account
      115+   20063                    of the FEP rununit which the FPL interpreter is to
      116+   20064                    M$LDTRC to.
      117+   20065                    */
      118+   20066              2 PASS# CHAR(8) CALIGNED %INIT(PASS)%EINIT;
      119+   20067                    /*K* PASS = VALUE-CHAR(8).  Specifies the password
      120+   20068                    of the FEP rununit which the FPL interpreter is to
      121+   20069                    M$LDTRC to.
      122+   20070                    */
      123+   20071        %MEND;
      124+   20072
      125+   20073
      126+   20074                 /***************************************/
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:7    
      127+   20075                 /*               Q_FPABT               */
      128+   20076                 /***************************************/
      129+   20077
      130+   20078        /*F* NAME: Q_FPABT
      131+   20079
      132+   20080        The FPL interpreter reports program aborts by writing a message
      133+   20081        to the host with a message type of '*FPABT  '.  This message
      134+   20082        will begin with the text '*FPABT  ' to identify it as such for
      135+   20083        readers who may not be connected through a comgroup.  The message
      136+   20084        contains the language of the fprg user and an array of error codes
      137+   20085        and substitutions.  These error codes and substitutions may then
      138+   20086        be passed directly to M$ERRMSG within the host to obtain their
      139+   20087        corresponding texts.
      140+   20088        */
      141+   20089
      142+   20090        %MACRO Q_FPABT (FPTN = Q_FPABT,
      143+   20091                        STCLASS = STATIC,
      144+   20092                        FPABTTXT = '*FPABT',
      145+   20093                        LANG = ' ',
      146+   20094                        MSGCNT = 3);
      147+   20095
      148+   20096         %LSET LISTDIR='0'B;
      149+   20097         %LSET LISTEXP='1'B;
      150+   20098         %LSET LISTCOM='0'B;
      151+   20099         %LSET LISTSUB='1'B;
      152+   20100         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
      153+   20101         %IF (SUBSTR(STR,0,6)='STATIC') OR
      154+   20102         (SUBSTR(STR,0,8)='CONSTANT') OR
      155+   20103         (SUBSTR(STR,0,3)='EXT');
      156+   20104         %LSET INIT=CHARTEXT('INIT');
      157+   20105         %LSET EINIT=CHARTEXT('');
      158+   20106         %ELSE;
      159+   20107         %LSET INIT=CHARTEXT('/*');
      160+   20108         %LSET EINIT=CHARTEXT('*/');
      161+   20109         %ENDIF;
      162+   20110
      163+   20111        DCL 1 FPTN STCLASS,
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:8    
      164+   20112              2 FPABTTXT# CHAR(6) %INIT(FPABTTXT)%EINIT,
      165+   20113                    /*K* FPABTTXT = VALUE-CHAR(6).  Contains '*FPABT'.
      166+   20114                     This is message type sent from the FPL interpreter,
      167+   20115                     duplicated within the record itself to identify
      168+   20116                     the record for non-TP connected readers.
      169+   20117                     */
      170+   20118              2 LANG# CHAR(1) CALIGNED %INIT(LANG)%EINIT,
      171+   20119                    /*K* LANG = VALUE-CHAR(1).  G$JIT.LANG.
      172+   20120                     */
      173+   20121              2 MSGCNT# UBIN BYTE UNAL %INIT(MSGCNT)%EINIT,
      174+   20122                    /*K* MSGCNT = VALUE-DEC(0-n).  Specifies the number of
      175+   20123                     elements in the MSGS array.
      176+   20124                     */
      177+   20125              2 MSGS(0:%(MSGCNT-1)) CALIGNED,
      178+   20126                    /*K* MSGS = ARRAY(0:%(MSGCNT-1)).  MSGS is an array
      179+   20127                     containing an L6 VLP_ERRCODE and three TEXTC
      180+   20128                     substitution strings per entry.  */
      181+   20129                %VLP_ERRCODE ( FPTN=ERR, LVL=3, ALGN=CALIGNED, STCLASS="", LAST="," );
      182+   20130                3 U1 CALIGNED,
      183+   20131                  4 LEN# UBIN BYTE UNAL,
      184+   20132                  4 NAME# CHAR(31) CALIGNED,
      185+   20133                3 U2 CALIGNED,
      186+   20134                  4 LEN# UBIN BYTE UNAL,
      187+   20135                  4 NAME# CHAR(31) CALIGNED,
      188+   20136                3 U3 CALIGNED,
      189+   20137                  4 LEN# UBIN BYTE UNAL,
      190+   20138                  4 NAME# CHAR(31) CALIGNED;
      191+   20139        %MEND;
      192+   20140
      193+   20141
      194+   20142        /******************************************************************************/
      195+   20143        /*  Command Forms Program-to-Transaction Processing Administrator             */
      196+   20144        /*  communication.                                                            */
      197+   20145        /*  The Command Forms Program communicates with TPA, or any other Transaction */
      198+   20146        /*  Processing Administrator, through messages defined below.  Similarly, any */
      199+   20147        /*  user-written Command Forms Program must communicate with CP6 TPA using    */
      200+   20148        /*  the following messages, which are generated during:                       */
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:9    
      201+   20149        /*  1)  Command Forms Program startup;                                        */
      202+   20150        /*  2)  the Transaction Processing Administrator's generation of messages to  */
      203+   20151        /*      the Command Forms Program which contain abort conditions, etc., and   */
      204+   20152        /*      which are to be formatted onto the screen by the Command Forms        */
      205+   20153        /*      program;                                                              */
      206+   20154        /*  3)  the Command Forms Program's generation of messages to the Transaction */
      207+   20155        /*      Processing Administrator which contain commands to be executed.       */
      208+   20156        /******************************************************************************/
      209+   20157
      210+   20158                 /***************************************/
      211+   20159                 /*              Q_MESSAGE              */
      212+   20160                 /***************************************/
      213+   20161
      214+   20162        /*F* NAME: Q_MESSAGE
      215+   20163
      216+   20164        The Command Forms Program receives two types of messages from TPA.
      217+   20165        Messages in the first category are REPORTs (not RESPONSEs), and have a
      218+   20166        message type of 'MSGG    '.   These generally contain information which
      219+   20167        was written into the TP comgroup when the Command Forms Program was not
      220+   20168        running (e.g., aborts of other TP stations destined for an MCT station).
      221+   20169        The Command Forms Program reads and formats any and all such messages
      222+   20170        immediately before reading the screen.
      223+   20171        Messages in the second category are RESPONSEs (message type '*RESP    ')
      224+   20172        to a previous write of message type '*TPCMD  ' (see Q_COMMAND).
      225+   20173        These RESPONSEs contain a "function" within the first three characters,
      226+   20174        which defines the action to be taken by the Command Forms Program.  These
      227+   20175        functions are:
      228+   20176        1)  FUNCTION = '001'.
      229+   20177            A "BEGIN <type>" or "DEBUG <type>" command was issued.  The Command Forms
      230+   20178            Program should exit the system (M$EXIT, STOP RUN).  When the TPA receives
      231+   20179            an event notifying it of the exit, it starts (M$SETFP) the new program.
      232+   20180        2)  FUNCTION = '002'.
      233+   20181            A command was issued which resulted in textual information to be formatted
      234+   20182            onto the screen.  The rest of this response contains such information.
      235+   20183        3)  FUNCTION = '003'.
      236+   20184            Either a command was issued which resulted in no textual response, or
      237+   20185            the last of such responses has already been formatted.  The Command
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:10   
      238+   20186            Forms Program should now read the screen.
      239+   20187        4)  FUNCTION = '004'.
      240+   20188            The STATIONMAX limit has been exceeded.  The Command Forms Program
      241+   20189            should report an appropriate error to the screen and exit.
      242+   20190        5)  FUNCTION = '005'.
      243+   20191            The command line should be cleared before the next command is
      244+   20192            accepted.  This is sent as the first message function.  All other
      245+   20193            message functions will still be a '002'.
      246+   20194        */
      247+   20195
      248+   20196        %MACRO Q_MESSAGE (FPTN=Q_MESSAGE,
      249+   20197                          STCLASS=STATIC,
      250+   20198                          FUNCTION='003',
      251+   20199                          TEXT=' ');
      252+   20200
      253+   20201         %LSET LISTDIR='0'B;
      254+   20202         %LSET LISTEXP='1'B;
      255+   20203         %LSET LISTCOM='0'B;
      256+   20204         %LSET LISTSUB='1'B;
      257+   20205         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
      258+   20206         %IF (SUBSTR(STR,0,6)='STATIC') OR
      259+   20207         (SUBSTR(STR,0,8)='CONSTANT') OR
      260+   20208         (SUBSTR(STR,0,3)='EXT');
      261+   20209         %LSET INIT=CHARTEXT('INIT');
      262+   20210         %LSET EINIT=CHARTEXT('');
      263+   20211         %ELSE;
      264+   20212         %LSET INIT=CHARTEXT('/*');
      265+   20213         %LSET EINIT=CHARTEXT('*/');
      266+   20214         %ENDIF;
      267+   20215
      268+   20216        DCL 1 FPTN STCLASS,
      269+   20217              2 FUNCTION# CHAR(3) CALIGNED %INIT(FUNCTION)%EINIT,
      270+   20218                    /*K* FUNCTION = VALUE-CHAR(3).  Specifies the action to be
      271+   20219                    taken by the Command Forms Program upon reading this
      272+   20220                    Q_MESSAGE as a RESPONSE to a '*TPCMD  ' write (see Q_COMMAND).
      273+   20221                    1)  FUNCTION = '001':  exit.
      274+   20222                    2)  FUNCTION = '002':  format TEXT# onto screen.
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:11   
      275+   20223                    3)  FUNCTION = '003':  read screen.
      276+   20224                    4)  FUNCTION = '004':  report "STATIONMAX exceeded" and exit.
      277+   20225                    5)  FUNCTION = '005':  clear the command line before next command.
      278+   20226                    */
      279+   20227              2 TEXT# CHAR(80) CALIGNED %INIT(TEXT)%EINIT;
      280+   20228                    /*K* TYPE = VALUE-CHAR(80) specifies the text which is to
      281+   20229                    be formatted onto the screen by the Command Forms Program.
      282+   20230                    The text is significant if the message type read was 'MSGG    ',
      283+   20231                    or if the message type was '*RESP   ', in RESPONSE to a message
      284+   20232                    type of '*TPCMD  ' (see Q_COMMAND), and FUNCTION# is '002'.
      285+   20233                    */
      286+   20234        %MEND;
      287+   20235
      288+   20236
      289+   20237                 /***************************************/
      290+   20238                 /*              Q_COMMAND              */
      291+   20239                 /***************************************/
      292+   20240
      293+   20241        /*F* NAME: Q_COMMAND
      294+   20242
      295+   20243        The Transaction Processing Administrator executes commands received from
      296+   20244        the Command Forms Program; these commands have a message type of '*TPCMD  '
      297+   20245        when written to the TPA.
      298+   20246        To initialize communication with the TPA, the Command Forms Program
      299+   20247        writes a command with a message type of '*IAMRDY ', and then reads for a
      300+   20248        RESPONSE.  In this case, the text of the command may contain the station's
      301+   20249        node/port/controller/device address, which the TPA supplied with CP-6 will
      302+   20250        use in creating a messages pertaining to that station.
      303+   20251        */
      304+   20252
      305+   20253        %MACRO Q_COMMAND (FPTN=Q_COMMAND,
      306+   20254                          STCLASS=STATIC,
      307+   20255                          TEXT=' ');
      308+   20256
      309+   20257         %LSET LISTDIR='0'B;
      310+   20258         %LSET LISTEXP='1'B;
      311+   20259         %LSET LISTCOM='0'B;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:12   
      312+   20260         %LSET LISTSUB='1'B;
      313+   20261         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
      314+   20262         %IF (SUBSTR(STR,0,6)='STATIC') OR
      315+   20263         (SUBSTR(STR,0,8)='CONSTANT') OR
      316+   20264         (SUBSTR(STR,0,3)='EXT');
      317+   20265         %LSET INIT=CHARTEXT('INIT');
      318+   20266         %LSET EINIT=CHARTEXT('');
      319+   20267         %ELSE;
      320+   20268         %LSET INIT=CHARTEXT('/*');
      321+   20269         %LSET EINIT=CHARTEXT('*/');
      322+   20270         %ENDIF;
      323+   20271
      324+   20272        DCL 1 FPTN STCLASS,
      325+   20273              2 TEXT# CHAR(80) CALIGNED %INIT(TEXT)%EINIT,
      326+   20274                    /*K* TEXT = VALUE-CHAR(80).  For a write from the Command
      327+   20275                    Forms Program, with a message type of '*TPCMD  ', contains
      328+   20276                    the command to be executed by the Transaction Processing
      329+   20277                    Administrator.
      330+   20278                    */
      331+   20279              2 IAMRDY_TEXT# REDEF TEXT#,
      332+   20280                    /*K* IAMRDY is a redefinition of TEXT#, containing four
      333+   20281                    fields which may be filled in by the Command Forms Program
      334+   20282                    before writing its initialization message (with a message
      335+   20283                    type of '*IAMRDY ').  The fields are compatible with the
      336+   20284                    FPL 'ACCEPT identifier FROM TERMINAL-ATTRIBUTES' statement,
      337+   20285                    and with the M$GLINEATTR FEP monitor service.
      338+   20286                    */
      339+   20287                3 CP_6_NODE CHAR(4),
      340+   20288                3 CP_6_PORT CHAR(4),
      341+   20289                3 CP_6_CONTROLLER CHAR(4),
      342+   20290                3 CP_6_DEVICE CHAR(4),
      343+   20291                3 * CHAR(64),
      344+   20292              2 * CHAR(3) CALIGNED;
      345+   20293        %MEND;
       89    20294          %SET LISTINC = '0'B;
       90    20295
       91    20296          %Q_LDBYTYP ( STCLASS = AUTO );
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:13   
             20297         %LSET LISTDIR='0'B;
             20311    1   DCL 1 Q_LDBYTYP AUTO,
             20312    1         2 TYPE# CHAR(8) /*(' ')*/;
       92    20317          %Q_LDBYTYPRSP ( STCLASS = AUTO );
             20318         %LSET LISTDIR='0'B;
             20332    1   DCL 1 Q_LDBYTYPRSP AUTO,
             20349    1   2 ERR CALIGNED,
             20363    1   3 FCG  BIT(10)/*('0'B)*/,
             20376    1   3 MID  BIT(5)/*('0'B)*/,3 MON  BIT(1)/*('0'B)*/,3 ERR#
             20377    1   UBIN(13)/*(0)*/ UNAL,3 SEV  UBIN(3)/*(0)*/ UNAL ,
             20388    1         2 PSN# CHAR(6) CALIGNED /*(' ')*/,
             20393    1         2 NAME CALIGNED,
             20394    1            3 LEN# UBIN BYTE UNAL /*(LENGTHC(Q_LDBYTYPRSP.NAME.NAME#))*/,
             20395    1            3 NAME# CHAR(31) CALIGNED /*(' ')*/,
             20400    1         2 ACCT# CHAR(8) CALIGNED /*(' ')*/,
             20405    1         2 PASS# CHAR(8) CALIGNED /*(' ')*/;
       93    20411          %Q_FPABT ( FPTN = Q$FPABT,
       94    20412                     STCLASS = BASED,
       95    20413                     MSGCNT = 3 );
             20414         %LSET LISTDIR='0'B;
             20428    1   DCL 1 Q$FPABT BASED,
             20429    1         2 FPABTTXT# CHAR(6) /*('*FPABT')*/,
             20435    1         2 LANG# CHAR(1) CALIGNED /*(' ')*/,
             20438    1         2 MSGCNT# UBIN BYTE UNAL /*(3)*/,
             20442    1         2 MSGS(0:2) CALIGNED,
             20462    1   3 ERR CALIGNED,
             20476    1   4 FCG  BIT(10)/*('0'B)*/,
             20489    1   4 MID  BIT(5)/*('0'B)*/,4 MON  BIT(1)/*('0'B)*/,4 ERR#
             20490    1   UBIN(13)/*(0)*/ UNAL,4 SEV  UBIN(3)/*(0)*/ UNAL ,
             20492    1           3 U1 CALIGNED,
             20493    1             4 LEN# UBIN BYTE UNAL,
             20494    1             4 NAME# CHAR(31) CALIGNED,
             20495    1           3 U2 CALIGNED,
             20496    1             4 LEN# UBIN BYTE UNAL,
             20497    1             4 NAME# CHAR(31) CALIGNED,
             20498    1           3 U3 CALIGNED,
             20499    1             4 LEN# UBIN BYTE UNAL,
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:14   
             20500    1             4 NAME# CHAR(31) CALIGNED;
       96    20502
       97    20503          %SET LISTMAC = '0'B;
       98    20504        %EJECT;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:15   
       99    20505    1       INSTR$ = QI_1.INSTR$;
      100    20506    1       QI_1.INSTR$ = ADDR ( INSTR$ -> QI$OP_LOAD.NEXT_CODE@P );
      101    20507
      102    20508    1       IF QI_1.SCREEN_UPDATE_FLAGS.WAS_APPLIED
      103    20509    1         OR QI_1.SCREEN_UPDATE_FLAGS.WAS_WRITTEN
      104    20510    1       THEN
      105    20511    1         CALL QCU$UPDATE_SCREEN;
      106    20512    1       QI_1.OP = QI_SRCH_VRFY;
      107    20513    1       QI_1.SOURCE$ = ADDR ( INSTR$ -> QI$OP_LOAD.NAME_OR_TYPE@P );
      108    20514    1       CALL QCS$SETUP_AUX;
      109    20515
      110    20516    1       QI_1.A_REG = 0;
      111    20517
      112    20518    1       FPT@LDTRC = QI_FPT_LDTRC;
      113    20519    1       FPT@LDTRC.PSN_ = VECTOR ( Q_LDBYTYPRSP.PSN# );
      114    20520    1       FPT@LDTRC.NAME_ = VECTOR ( Q_LDBYTYPRSP.NAME );
      115    20521    1       FPT@LDTRC.ACCT_ = VECTOR ( Q_LDBYTYPRSP.ACCT# );
      116    20522    1       FPT@LDTRC.PASS_ = VECTOR ( Q_LDBYTYPRSP.PASS# );
      117    20523    1       Q_LDBYTYPRSP.PSN# = ' ';
      118    20524    1       Q_LDBYTYPRSP.NAME.LEN# = 0;
      119    20525    1       Q_LDBYTYPRSP.NAME.NAME# = ' ';
      120    20526    1       Q_LDBYTYPRSP.ACCT# = ' ';
      121    20527    1       Q_LDBYTYPRSP.PASS# = ' ';
      122    20528
      123    20529    1       QI@FID_OR_TYPE_BA (0) = MINIMUM ( QI_1.OP.LEN.AUX,
      124    20530    1         SIZEC ( Q$FPABT.MSGS.U1.NAME# (0) ) );
      125    20531    1       ADDR ( QI@FID_OR_TYPE_CA (1) ) -> QI$VARIABLE_STRING_AUX.TEXT =
      126    20532    1         PINCRC ( QI_1.OP.DATA.AUX$, QI_1.OFFSET.AUX ) -> QI$VARIABLE_STRING_AUX.TEXT;
      127    20533
      128    20534    1       IF INSTR$ -> QI$OP_LOAD.IS_BY_NAME
      129    20535    1       THEN
      130    20536    1   LOAD_BY_NAME:
      131    20537    2         DO;
      132    20538
      133    20539    2           WERE_ALL_DONE = %NO;
      134    20540
      135    20541    2           QI_1.OP.DATA.S$ = ADDR ( QI_BLANK );
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:16   
      136    20542    2           QI_1.OP.DATA.T$ = ADDR ( QI_1.OP.SRCH_RESULT );
      137    20543    2           QI_1.OP.SRCH_VRFY_ELEMS.LIST_LEN = QI_1.OP.LEN.AUX;
      138    20544
      139    20545    2           CALL QCC$VRFY ( QI_1.OP )
      140    20546    2           WHENRETURN
      141    20547    3             DO;
      142    20548    3               GOTO BAD_FID_ON_LOAD_BY_NAME;
      143    20549    3             END;
      144    20550
      145    20551    2           FID$ = PINCRC ( QI_1.OP.DATA.AUX$,
      146    20552    2             QI_1.OFFSET.AUX );
      147    20553    2           FID_INDEX = QI_1.OP.VRFY_RESULT.DISP;
      148    20554
      149    20555    2           IF SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT, FID_INDEX, 3 ) = 'DP#'
      150    20556    2           THEN
      151    20557
      152    20558    2   WE_FOUND_A_PSN:
      153    20559    3             DO;
      154    20560    3               CALL INDEX ( WHATEVER_INDEX,
      155    20561    3                 '/',
      156    20562    3                 FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      157    20563    3                 FID_INDEX )
      158    20564    3               WHENALTRETURN
      159    20565    4                 DO;
      160    20566    4                   GOTO BAD_FID_ON_LOAD_BY_NAME;
      161    20567    4                 END;
      162    20568
      163    20569    3               Q_LDBYTYPRSP.PSN# = SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      164    20570    3                 FID_INDEX + 3,
      165    20571    3                 WHATEVER_INDEX - ( FID_INDEX + 3 ) );
      166    20572
      167    20573    3               FID_INDEX = WHATEVER_INDEX + 1;
      168    20574    3             END WE_FOUND_A_PSN;
      169    20575
      170    20576    2           CALL UNSTRING_NAME_ACCT_PASS;
      171    20577
      172    20578    2           Q_LDBYTYPRSP.NAME.LEN# = WHATEVER_INDEX - FID_INDEX;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:17   
      173    20579    2           Q_LDBYTYPRSP.NAME.NAME# = SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      174    20580    2             FID_INDEX,
      175    20581    2             WHATEVER_INDEX - FID_INDEX );
      176    20582
      177    20583    2           IF NOT WERE_ALL_DONE
      178    20584    2           THEN
      179    20585    2   WE_FOUND_A_ACCT:
      180    20586    3             DO;
      181    20587    3               FID_INDEX = WHATEVER_INDEX + 1;
      182    20588
      183    20589    3               CALL UNSTRING_NAME_ACCT_PASS;
      184    20590
      185    20591    3               Q_LDBYTYPRSP.ACCT# = SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      186    20592    3                 FID_INDEX,
      187    20593    3                 WHATEVER_INDEX - FID_INDEX );
      188    20594
      189    20595    3               IF NOT WERE_ALL_DONE
      190    20596    3               THEN
      191    20597    3   WE_FOUND_A_PASS:
      192    20598    4                 DO;
      193    20599    4                   FID_INDEX = WHATEVER_INDEX + 1;
      194    20600
      195    20601    4                   CALL UNSTRING_NAME_ACCT_PASS;
      196    20602
      197    20603    4                   Q_LDBYTYPRSP.PASS# = SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      198    20604    4                     FID_INDEX,
      199    20605    4                     WHATEVER_INDEX - FID_INDEX );
      200    20606
      201    20607    4                   IF NOT WERE_ALL_DONE
      202    20608    4                   THEN
      203    20609    4                     GOTO BAD_FID_ON_LOAD_BY_NAME;
      204    20610    4                 END WE_FOUND_A_PASS;
      205    20611    3             END WE_FOUND_A_ACCT;
      206    20612
      207    20613    2         END LOAD_BY_NAME;
      208    20614    1       ELSE
      209    20615    1   LOAD_BY_TYPE:
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:18   
      210    20616    2         DO;
      211    20617
      212    20618    2           FPT@OPEN = QI_FPT_OPEN;
      213    20619    2           VBASE ( FPT@OPEN.V_ ) = ADDR ( FPT@OPEN.V );
      214    20620    2           FPT@OPEN.V.DCB# = QI_1.INITIALIZATION_BLOCK$ -> QI$INITIALIZATION_BLOCK.
             20620                    VANILLA_HOST_DCB#;
      215    20621    2           FPT@OPEN.V.ORG = %G_ORG_CONSEC#;
      216    20622    2           FPT@OPEN.V.RES = 'HO';
      217    20623    2           FPT@OPEN.V.KEYTYPE = 3 /* MSGID */;
      218    20624
      219    20625    2           CALL M$OPEN ( FPT@OPEN )
      220    20626    2           WHENALTRETURN
      221    20627    3             DO;
      222    20628    3               CALL QCE$ERROR_M$INTERNAL ( %E$UNEXPECTED_ALTRET );
      223    20629    3             END;
      224    20630
      225    20631    2           FPT@WRITE = QI_FPT_WRITE;
      226    20632    2           VBASE ( FPT@WRITE.V_ ) = ADDR ( FPT@WRITE.V );
      227    20633    2           FPT@WRITE.V.DCB# = FPT@OPEN.V.DCB#;
      228    20634    2           FPT@WRITE.CG_ = VECTOR ( VLP@CG );
      229    20635    2           VLP@CG = QI_VLP_CG;
      230    20636    2           VLP@CG.MSGTYP# = '*FPRQ';
      231    20637    2           FPT@WRITE.BUF_ = VECTOR ( Q_LDBYTYP );
      232    20638
      233    20639    2           VARIABLE_AUX$ = PINCRC ( QI_1.OP.DATA.AUX$,
      234    20640    2             QI_1.OFFSET.AUX );
      235    20641    2           Q_LDBYTYP.TYPE# =
      236    20642    2             VARIABLE_AUX$ -> QI$VARIABLE_STRING_AUX.TEXT;
      237    20643
      238    20644    2           CALL M$WRITE ( FPT@WRITE )
      239    20645    2           WHENALTRETURN
      240    20646    3             DO;
      241    20647    3               CALL QCE$ERROR_M$INTERNAL ( %E$UNEXPECTED_ALTRET );
      242    20648    3             END;
      243    20649
      244    20650    2           FPT@READ = QI_FPT_READ;
      245    20651    2           VBASE ( FPT@READ.V_ ) = ADDR ( FPT@READ.V );
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:19   
      246    20652    2           FPT@READ.V.DCB# = FPT@WRITE.V.DCB#;
      247    20653    2           FPT@READ.CG_ = VECTOR ( VLP@CG );
      248    20654    2           VLP@CG = QI_VLP_CG;
      249    20655    2           VLP@CG.MSGTYP# = '*FPRQRSP';
      250    20656    2           FPT@READ.BUF_ = VECTOR ( Q_LDBYTYPRSP );
      251    20657
      252    20658    2           CALL M$READ ( FPT@READ )
      253    20659    2           WHENALTRETURN
      254    20660    3             DO;
      255    20661    3               CALL QCE$ERROR_M$INTERNAL ( %E$UNEXPECTED_ALTRET );
      256    20662    3             END;
      257    20663
      258    20664    2           FPT@CLOSE = QI_FPT_CLOSE;
      259    20665    2           VBASE ( FPT@CLOSE.V_ ) = ADDR ( FPT@CLOSE.V );
      260    20666    2           FPT@CLOSE.V.DCB# = FPT@READ.V.DCB#;
      261    20667
      262    20668    2           CALL M$CLOSE ( FPT@CLOSE )
      263    20669    2           WHENALTRETURN
      264    20670    3             DO;
      265    20671    3               CALL QCE$ERROR_M$INTERNAL ( %E$UNEXPECTED_ALTRET );
      266    20672    3             END;
      267    20673
      268    20674    2           IF Q_LDBYTYPRSP.ERR ~= '0'B
      269    20675    2           THEN
      270    20676    2             GOTO BAD_WHATEVER_ON_LOAD_BY_TYPE;
      271    20677
      272    20678    2         END LOAD_BY_TYPE;
      273    20679
      274    20680    1       IF INSTR$ -> QI$OP_LOAD.IS_ARGUMENT_PASSED
      275    20681    1       THEN
      276    20682    1   PREPARE_ARGUMENT:
      277    20683    2         DO;
      278    20684    2           QI_1.SOURCE$ = ADDR ( INSTR$ -> QI$OP_LOAD.ARGUMENT@P );
      279    20685    2           CALL QCS$SETUP_SOURCE;
      280    20686
      281    20687    2           FPT@GDS = QI_FPT_GDS_LOAD;
      282    20688    2           VBASE ( FPT@GDS.V_ ) = ADDR ( FPT@GDS.V );
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:20   
      283    20689
      284    20690    2           FPT@GDS.V.PAGES = ( ( QI_1.OP.LEN.S / 2 ) / 256 ) + 1;
      285    20691    2           QI_VLP_SEGMENT_LOAD.BASE = %GM_USRDS4_BASE;
      286    20692
      287    20693    2           CALL M$GDS ( FPT@GDS )
      288    20694    2           WHENALTRETURN
      289    20695    3             DO;
      290    20696    3               CALL QCE$ERROR ( %E$INSUFFICIENT_MEMORY );
      291    20697    3             END;
      292    20698
      293    20699    2           QI_1.OP.DATA.T$ = QI_VLP_SEGMENT_LOAD.BASE$;
      294    20700    2           QI_1.OP.DATA.T$ -> QI$UWORD_A (0) = QI_1.OP.LEN.S;
      295    20701
      296    20702    2           QI_1.OP.DATA.T$ = ADDR ( QI_1.OP.DATA.T$ -> QI$UWORD_A (1) );
      297    20703    2           QI_1.OP.LEN.T = QI_1.OP.LEN.S;
      298    20704    2           QI_1.OP.DATA.T$ -> QI$VARIABLE_STRING_TARGET.TEXT =
      299    20705    2             QI_1.OP.DATA.S$ -> QI$VARIABLE_STRING_SOURCE.TEXT;
      300    20706
      301    20707    2         END PREPARE_ARGUMENT;
      302    20708
      303    20709    1       CALL M$LDTRC ( FPT@LDTRC )
      304    20710    1         ALTRET ( LDTRC_ALTRET );
      305    20711
      306    20712    1   BAD_FID_ON_LOAD_BY_NAME:
      307    20713    1       IF QI_1.INSTR$ -> QI$OP_SEQUENCE.CODE = %QI#OP_JAZ
      308    20714    1       THEN
      309    20715    2         DO;
      310    20716    2           QI_1.A_REG = 1;
      311    20717    2           RETURN;
      312    20718    2         END;
      313    20719
      314    20720    1       CALL QCE$ERROR ( %E$LOAD_ILLEGAL_FID,
      315    20721    1         QI@FID_OR_TYPE );
      316    20722
      317    20723    1   BAD_WHATEVER_ON_LOAD_BY_TYPE:
      318    20724    1       IF QI_1.INSTR$ -> QI$OP_SEQUENCE.CODE = %QI#OP_JAZ
      319    20725    1       THEN
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:21   
      320    20726    2         DO;
      321    20727    2           QI_1.A_REG = 1;
      322    20728    2           RETURN;
      323    20729    2         END;
      324    20730
      325    20731    1       CALL QCE$ERROR ( %E$LOAD_ERROR,
      326    20732    1         QI@FID_OR_TYPE,
      327    20733    1         Q_LDBYTYPRSP.ERR );
      328    20734
      329    20735    1   LDTRC_ALTRET:
      330    20736    1       IF QI_1.INSTR$ -> QI$OP_SEQUENCE.CODE = %QI#OP_JAZ
      331    20737    1       THEN
      332    20738    2         DO;
      333    20739    2           QI_1.A_REG = 1;
      334    20740    2           RETURN;
      335    20741    2         END;
      336    20742
      337    20743    1       CALL QCE$ERROR ( %E$LOAD_ERROR,
      338    20744    1         QI@FID_OR_TYPE,
      339    20745    1         G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR );
      340    20746
      341    20747        %EJECT;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:22   
      342    20748    1   UNSTRING_NAME_ACCT_PASS: PROC;
      343    20749
      344    20750    2       CALL INDEX ( WHATEVER_INDEX,
      345    20751    2         '.',
      346    20752    2         FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      347    20753    2         FID_INDEX )
      348    20754    2       WHENALTRETURN
      349    20755    3         DO;
      350    20756    3           WERE_ALL_DONE = %YES;
      351    20757
      352    20758    3           CALL INDEX ( WHATEVER_INDEX,
      353    20759    3             ' ',
      354    20760    3             FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      355    20761    3             FID_INDEX );
      356    20762    3         END;
      357    20763
      358    20764    2       RETURN;
      359    20765
      360    20766    2   END UNSTRING_NAME_ACCT_PASS;
      361    20767
      362    20768    1   END QBL$LOAD;

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:23   
--  Include file information  --

   Q_MACRO_C.:E05TOU  is referenced.
   QI_MACROS_M.:E05TOU  is referenced.
   QI_PERR_C.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QBL$LOAD.

   Procedure QBL$LOAD requires 1113 words for executable code.
   Procedure QBL$LOAD requires 328 words of local(AUTO) storage.

    No errors detected in file QBL$LOAD.:E05TSI    .

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:24   

 Object Unit name= QBL$LOAD                                   File name= QBL$LOAD.:E05TOU
 UTS= JUL 30 '97 04:51:12.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     10      A  QBL$LOAD
    1   Proc  even  none  1113    459  QBL$LOAD
    2  RoData even  none    15      F  QBL$LOAD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  QBL$LOAD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 QCU$UPDATE_SCREEN
 yes     yes           Std       1 QCC$VRFY
         yes           Std       0 QCS$SETUP_SOURCE
         yes           Std       4 QCE$ERROR_M$INTERNAL
         yes           Std       0 QCS$SETUP_AUX
         yes           Std       4 QCE$ERROR
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6C_SRCH
                       nStd      0 X6C_ALR
                       nStd      0 X6A_ARET
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:25   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$TCB$                                QI_1                                  QI_BLANK
     QI_SRCH_VRFY                          QI_4_CHAR_ALPHANUMERIC                QI_31_DIGIT_SLS_DISPLAY
     QI_16_BIT_BINARY                      QI_32_BIT_BINARY                      QI_31_DIGIT_ST_PACKED
     QI_PICTURE_STRING                     QI_FPT_CLOSE                          QI_FPT_GDS_LOAD
     QI_VLP_SEGMENT_LOAD                   QI_FPT_LDTRC                          QI_FPT_OPEN
     QI_FPT_READ                           QI_VLP_CG                             QI_FPT_WRITE
r    G$ROS$
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:26   


        1        1        /*M* QBL$LOAD:  Execute a LOAD statement.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P*  NAME:         QBL$LOAD
       10       10              PURPOSE:      Load another FPL program.
       11       11              DESCRIPTION:  Execute a LOAD op-code, whose argument is
       12       12                            a COBOL-type DAD indicating what to LOAD.
       13       13        */
       14       14
       15       15        QBL$LOAD: PROC;

     15   1 000000  D380 0000 0000  xent QBL$LOAD        LNJ,B5   X6A_AUTO_0
          1 000003       0148 0000                       DC       328,0

       16       16
       17       17        /*D*  NAME:         QBL$LOAD
       18       18              CALL:         CALL QBL$LOAD;
       19       19              PARAMETERS:   None.
       20       20              INTERFACE:    Called by QAT$TALLYHO when a LOAD op-code is
       21       21                            encountered.  Calls M$LDTRC if successful.
       22       22              ENVIRONMENT:  Nothing unusual.
       23       23              INPUT:        QI_1,
       24       24                            FPL rununit static data following the op-code.
       25       25              OUTPUT:       Ends up in a different FPL program, if successful.
       26       26              SCRATCH:      Various otter data.
       27       27              DESCRIPTION:  Two "types" exist:
       28       28                            1)  LOAD { dataname | "literal" } BY NAME.
       29       29                                In this case, the dataname or "literal" is parsed,
       30       30                                and M$LDTRC is called.
       31       31                            2)  LOAD { dataname | "literal" } BY TYPE.
       32       32                                In this case (which can only be honored if the
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:27   
       33       33                                FPL program is running in "TP mode") a message
       34       34                                is sent to TPA, who figures out which FPL
       35       35                                program corresponds to the message TYPE contained
       36       36                                in dataname or "literal" and sends back a message
       37       37                                containing a broken-down fid, which is then
       38       38                                M$LDTRC'ed to.
       39       39        */
       40       40
       41       41          %INCLUDE GM_VIRTUAL_E;
       42      251          %INCLUDE LCP_6;
       43      442          %FPT_CLOSE ( FPTN = FPT@CLOSE,
       44      443                       STCLASS = AUTO );
       45      463          %FPT_GDS ( FPTN = FPT@GDS,
       46      464                     STCLASS = AUTO );
       47      488          %FPT_LDTRC ( FPTN = FPT@LDTRC,
       48      489                       STCLASS = AUTO );
       49      513          %FPT_OPEN ( FPTN = FPT@OPEN,
       50      514                      STCLASS = AUTO );
       51      542          %FPT_READ ( FPTN = FPT@READ,
       52      543                      STCLASS = AUTO );
       53      569          %FPT_WRITE ( FPTN = FPT@WRITE,
       54      570                       STCLASS = AUTO );
       55      594          %VLP_CG ( FPTN = VLP@CG,
       56      595                    STCLASS = AUTO );
       57      615          %G$EXCFR;
       58      997          %G$TCB;
       59     1018    1     DCL G$TCB$ PTR SYMREF;
       60     1019
       61     1020          %INCLUDE QG_MACRO_M;
       62     1157          %INCLUDE QI_EQUATES_E;
       63     1516          %INCLUDE QI_PERR_C;
       64     1684          %INCLUDE QI_MACROS_M;
       65     6742          %QI$ALL;
       66    17855          %QI_FPTS;
       67    19900
       68    19901    1     DCL FID$ CPTR;
       69    19902    1     DCL FID_INDEX UBIN;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:28   
       70    19903    1     DCL INSTR$ PTR;
       71    19904    1     DCL VARIABLE_AUX$ CPTR;
       72    19905    1     DCL WERE_ALL_DONE BIT(1) ALIGNED;
       73    19906    1     DCL WHATEVER_INDEX UBIN;
       74    19907
       75    19908    1     DCL QCE$ERROR ENTRY (4);
       76    19909    1     DCL QCE$ERROR_M$INTERNAL ENTRY (4);
       77    19910    1     DCL QCC$VRFY ENTRY (1) ALTRET;
       78    19911    1     DCL QCS$SETUP_AUX ENTRY;
       79    19912    1     DCL QCS$SETUP_SOURCE ENTRY;
       80    19913    1     DCL QCU$UPDATE_SCREEN ENTRY;
       81    19914
       82    19915          %SET LISTMAC = '1'B;
       83    19916
       84    19917          %QI@OTTER_SPACE ( NAME = QI@FID_OR_TYPE,
       85    19918                            BYTE_SIZE = 256 );
             19919            %BEGIN_MACRO ( STCLASS = STCLASS );
             19920            %SET LISTDIR = '0'B;
             19933    1       DCL 1 QI@FID_OR_TYPE AUTO ALIGNED,
             19934    1             2 *(0:255) UBIN BYTE UNAL /* Was INIT'ed to:  (0*0)/**/;
             19935    1       DCL 1 QI@FID_OR_TYPE_CA (0:255) REDEF QI@FID_OR_TYPE CHAR(1) UNAL;
             19936    1       DCL 1 QI@FID_OR_TYPE_BA (0:255) REDEF QI@FID_OR_TYPE UBIN BYTE UNAL;
             19943            %ENDIF;
       86    19946
       87    19947          %SET LISTINC = '1'B;
       88    19948          %INCLUDE Q_MACRO_C;
        1+   19949        /*T***********************************************************/
        2+   19950        /*T*                                                         */
        3+   19951        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+   19952        /*T*                                                         */
        5+   19953        /*T***********************************************************/
        6+   19954
        7+   19955        /******************************************************************************/
        8+   19956        /*  FPL interpreter-to-Transaction Processing Administrator communication.    */
        9+   19957        /*  The FPL interpreter communicates with TPA, or any other Transaction       */
       10+   19958        /*  Processing Administrator, through messages defined below.  These          */
       11+   19959        /*  messages are generated during:                                            */
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:29   
       12+   19960        /*  1)  A "LOAD <type> BY TYPE" statement;                                    */
       13+   19961        /*  2)  an FPL interpreter abort condition.                                   */
       14+   19962        /******************************************************************************/
       15+   19963
       16+   19964                 /***************************************/
       17+   19965                 /*          Q_LDBYTYP                  */
       18+   19966                 /***************************************/
       19+   19967
       20+   19968        /*F* NAME: Q_LDBYTYP
       21+   19969
       22+   19970        The FPL interpreter supports the "LOAD <type> BY TYPE" statement for
       23+   19971        comgroup-connected FPRGs by sending a Q_LDBYTYP message into the
       24+   19972        comgroup with a message type of '*FPRQ   '. This message will
       25+   19973        then be read by the AU of the comgroup. The AU of the comgroup,
       26+   19974        (TPA for CP-6 TP) should then respond by writing a Q_LDBYTYPRSP
       27+   19975        message back to the originating FPRG terminal station. This
       28+   19976        message must have message type '*FPRQRSP' since FPL is reading
       29+   19977        for that message type to complete the load-by-type protocol.
       30+   19978
       31+   19979        The LOAD <type> BY TYPE may be rejected by TPA setting Q_LDBYTYPRSP.ERR#
       32+   19980        to an appropriate LCP6 error code.
       33+   19981        */
       34+   19982
       35+   19983        %MACRO Q_LDBYTYP (FPTN=Q_LDBYTYP,
       36+   19984                          STCLASS=STATIC,
       37+   19985                          TYPE=' ');
       38+   19986
       39+   19987         %LSET LISTDIR='0'B;
       40+   19988         %LSET LISTEXP='1'B;
       41+   19989         %LSET LISTCOM='0'B;
       42+   19990         %LSET LISTSUB='1'B;
       43+   19991         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
       44+   19992         %IF (SUBSTR(STR,0,6)='STATIC') OR
       45+   19993         (SUBSTR(STR,0,8)='CONSTANT') OR
       46+   19994         (SUBSTR(STR,0,3)='EXT');
       47+   19995         %LSET INIT=CHARTEXT('INIT');
       48+   19996         %LSET EINIT=CHARTEXT('');
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:30   
       49+   19997         %ELSE;
       50+   19998         %LSET INIT=CHARTEXT('/*');
       51+   19999         %LSET EINIT=CHARTEXT('*/');
       52+   20000         %ENDIF;
       53+   20001
       54+   20002        DCL 1 FPTN STCLASS,
       55+   20003              2 TYPE# CHAR(8) %INIT(TYPE)%EINIT;
       56+   20004                    /*K* TYPE = VALUE-CHAR(8) specifies the <type> from the
       57+   20005                    originating FPL "LOAD <type> BY TYPE" statement.
       58+   20006                    */
       59+   20007        %MEND;
       60+   20008
       61+   20009
       62+   20010                 /***************************************/
       63+   20011                 /*          Q_LDBYTYPRSP               */
       64+   20012                 /***************************************/
       65+   20013
       66+   20014        %MACRO Q_LDBYTYPRSP (FPTN=Q_LDBYTYPRSP,
       67+   20015                             STCLASS=STATIC,
       68+   20016                             PSN=' ',
       69+   20017                             NAME=' ',
       70+   20018                             ACCT=' ',
       71+   20019                             PASS=' ');
       72+   20020
       73+   20021         %LSET LISTDIR='0'B;
       74+   20022         %LSET LISTEXP='1'B;
       75+   20023         %LSET LISTCOM='0'B;
       76+   20024         %LSET LISTSUB='1'B;
       77+   20025         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
       78+   20026         %IF (SUBSTR(STR,0,6)='STATIC') OR
       79+   20027         (SUBSTR(STR,0,8)='CONSTANT') OR
       80+   20028         (SUBSTR(STR,0,3)='EXT');
       81+   20029         %LSET INIT=CHARTEXT('INIT');
       82+   20030         %LSET EINIT=CHARTEXT('');
       83+   20031         %ELSE;
       84+   20032         %LSET INIT=CHARTEXT('/*');
       85+   20033         %LSET EINIT=CHARTEXT('*/');
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:31   
       86+   20034         %ENDIF;
       87+   20035
       88+   20036        DCL 1 FPTN STCLASS,
       89+   20037              %VLP_ERRCODE ( FPTN=ERR, LVL=2, ALGN=CALIGNED, STCLASS="", LAST="," );
       90+   20038                    /*K* ERR = VLP_ERRCODE.  Contains the error code
       91+   20039                    returned to the FPL interpreter.  If ERR is '0'B,
       92+   20040                    the rest of this structure defines the values which
       93+   20041                    the FPL interpreter uses to issue an M$LDTRC to
       94+   20042                    satisfy the "LOAD <type> BY TYPE" statement.
       95+   20043
       96+   20044                    ERR is a standard LCP6 error code.  Note that the
       97+   20045                    host program may need to convert its error code into
       98+   20046                    FEP format.
       99+   20047                    */
      100+   20048              2 PSN# CHAR(6) CALIGNED %INIT(PSN)%EINIT,
      101+   20049                    /*K* PSN = VALUE-CHAR(6).  Specifies the packset
      102+   20050                    containing the FEP rununit which the FPL interpreter
      103+   20051                    is to M$LDTRC to.
      104+   20052                    */
      105+   20053              2 %CHARTEXT('NAME') CALIGNED,
      106+   20054        3 LEN# UBIN BYTE UNAL %INIT(LENGTHC(%CHARTEXT(CONCAT(TEXTCHAR(FPTN),'.NAME.NAME#'))
             20054        ))%EINIT,
      107+   20055
      108+   20056                 3 NAME# CHAR(31) CALIGNED %INIT(NAME)%EINIT,
      109+   20057                    /*K* NAME = VALUE-CHAR.  Specifies, in TEXTC-format,
      110+   20058                    the name of the FEP rununit which the FPL interpreter
      111+   20059                    is to M$LDTRC to.
      112+   20060                    */
      113+   20061              2 ACCT# CHAR(8) CALIGNED %INIT(ACCT)%EINIT,
      114+   20062                    /*K* ACCT = VALUE-CHAR(8).  Specifies the account
      115+   20063                    of the FEP rununit which the FPL interpreter is to
      116+   20064                    M$LDTRC to.
      117+   20065                    */
      118+   20066              2 PASS# CHAR(8) CALIGNED %INIT(PASS)%EINIT;
      119+   20067                    /*K* PASS = VALUE-CHAR(8).  Specifies the password
      120+   20068                    of the FEP rununit which the FPL interpreter is to
      121+   20069                    M$LDTRC to.
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:32   
      122+   20070                    */
      123+   20071        %MEND;
      124+   20072
      125+   20073
      126+   20074                 /***************************************/
      127+   20075                 /*               Q_FPABT               */
      128+   20076                 /***************************************/
      129+   20077
      130+   20078        /*F* NAME: Q_FPABT
      131+   20079
      132+   20080        The FPL interpreter reports program aborts by writing a message
      133+   20081        to the host with a message type of '*FPABT  '.  This message
      134+   20082        will begin with the text '*FPABT  ' to identify it as such for
      135+   20083        readers who may not be connected through a comgroup.  The message
      136+   20084        contains the language of the fprg user and an array of error codes
      137+   20085        and substitutions.  These error codes and substitutions may then
      138+   20086        be passed directly to M$ERRMSG within the host to obtain their
      139+   20087        corresponding texts.
      140+   20088        */
      141+   20089
      142+   20090        %MACRO Q_FPABT (FPTN = Q_FPABT,
      143+   20091                        STCLASS = STATIC,
      144+   20092                        FPABTTXT = '*FPABT',
      145+   20093                        LANG = ' ',
      146+   20094                        MSGCNT = 3);
      147+   20095
      148+   20096         %LSET LISTDIR='0'B;
      149+   20097         %LSET LISTEXP='1'B;
      150+   20098         %LSET LISTCOM='0'B;
      151+   20099         %LSET LISTSUB='1'B;
      152+   20100         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
      153+   20101         %IF (SUBSTR(STR,0,6)='STATIC') OR
      154+   20102         (SUBSTR(STR,0,8)='CONSTANT') OR
      155+   20103         (SUBSTR(STR,0,3)='EXT');
      156+   20104         %LSET INIT=CHARTEXT('INIT');
      157+   20105         %LSET EINIT=CHARTEXT('');
      158+   20106         %ELSE;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:33   
      159+   20107         %LSET INIT=CHARTEXT('/*');
      160+   20108         %LSET EINIT=CHARTEXT('*/');
      161+   20109         %ENDIF;
      162+   20110
      163+   20111        DCL 1 FPTN STCLASS,
      164+   20112              2 FPABTTXT# CHAR(6) %INIT(FPABTTXT)%EINIT,
      165+   20113                    /*K* FPABTTXT = VALUE-CHAR(6).  Contains '*FPABT'.
      166+   20114                     This is message type sent from the FPL interpreter,
      167+   20115                     duplicated within the record itself to identify
      168+   20116                     the record for non-TP connected readers.
      169+   20117                     */
      170+   20118              2 LANG# CHAR(1) CALIGNED %INIT(LANG)%EINIT,
      171+   20119                    /*K* LANG = VALUE-CHAR(1).  G$JIT.LANG.
      172+   20120                     */
      173+   20121              2 MSGCNT# UBIN BYTE UNAL %INIT(MSGCNT)%EINIT,
      174+   20122                    /*K* MSGCNT = VALUE-DEC(0-n).  Specifies the number of
      175+   20123                     elements in the MSGS array.
      176+   20124                     */
      177+   20125              2 MSGS(0:%(MSGCNT-1)) CALIGNED,
      178+   20126                    /*K* MSGS = ARRAY(0:%(MSGCNT-1)).  MSGS is an array
      179+   20127                     containing an L6 VLP_ERRCODE and three TEXTC
      180+   20128                     substitution strings per entry.  */
      181+   20129                %VLP_ERRCODE ( FPTN=ERR, LVL=3, ALGN=CALIGNED, STCLASS="", LAST="," );
      182+   20130                3 U1 CALIGNED,
      183+   20131                  4 LEN# UBIN BYTE UNAL,
      184+   20132                  4 NAME# CHAR(31) CALIGNED,
      185+   20133                3 U2 CALIGNED,
      186+   20134                  4 LEN# UBIN BYTE UNAL,
      187+   20135                  4 NAME# CHAR(31) CALIGNED,
      188+   20136                3 U3 CALIGNED,
      189+   20137                  4 LEN# UBIN BYTE UNAL,
      190+   20138                  4 NAME# CHAR(31) CALIGNED;
      191+   20139        %MEND;
      192+   20140
      193+   20141
      194+   20142        /******************************************************************************/
      195+   20143        /*  Command Forms Program-to-Transaction Processing Administrator             */
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:34   
      196+   20144        /*  communication.                                                            */
      197+   20145        /*  The Command Forms Program communicates with TPA, or any other Transaction */
      198+   20146        /*  Processing Administrator, through messages defined below.  Similarly, any */
      199+   20147        /*  user-written Command Forms Program must communicate with CP6 TPA using    */
      200+   20148        /*  the following messages, which are generated during:                       */
      201+   20149        /*  1)  Command Forms Program startup;                                        */
      202+   20150        /*  2)  the Transaction Processing Administrator's generation of messages to  */
      203+   20151        /*      the Command Forms Program which contain abort conditions, etc., and   */
      204+   20152        /*      which are to be formatted onto the screen by the Command Forms        */
      205+   20153        /*      program;                                                              */
      206+   20154        /*  3)  the Command Forms Program's generation of messages to the Transaction */
      207+   20155        /*      Processing Administrator which contain commands to be executed.       */
      208+   20156        /******************************************************************************/
      209+   20157
      210+   20158                 /***************************************/
      211+   20159                 /*              Q_MESSAGE              */
      212+   20160                 /***************************************/
      213+   20161
      214+   20162        /*F* NAME: Q_MESSAGE
      215+   20163
      216+   20164        The Command Forms Program receives two types of messages from TPA.
      217+   20165        Messages in the first category are REPORTs (not RESPONSEs), and have a
      218+   20166        message type of 'MSGG    '.   These generally contain information which
      219+   20167        was written into the TP comgroup when the Command Forms Program was not
      220+   20168        running (e.g., aborts of other TP stations destined for an MCT station).
      221+   20169        The Command Forms Program reads and formats any and all such messages
      222+   20170        immediately before reading the screen.
      223+   20171        Messages in the second category are RESPONSEs (message type '*RESP    ')
      224+   20172        to a previous write of message type '*TPCMD  ' (see Q_COMMAND).
      225+   20173        These RESPONSEs contain a "function" within the first three characters,
      226+   20174        which defines the action to be taken by the Command Forms Program.  These
      227+   20175        functions are:
      228+   20176        1)  FUNCTION = '001'.
      229+   20177            A "BEGIN <type>" or "DEBUG <type>" command was issued.  The Command Forms
      230+   20178            Program should exit the system (M$EXIT, STOP RUN).  When the TPA receives
      231+   20179            an event notifying it of the exit, it starts (M$SETFP) the new program.
      232+   20180        2)  FUNCTION = '002'.
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:35   
      233+   20181            A command was issued which resulted in textual information to be formatted
      234+   20182            onto the screen.  The rest of this response contains such information.
      235+   20183        3)  FUNCTION = '003'.
      236+   20184            Either a command was issued which resulted in no textual response, or
      237+   20185            the last of such responses has already been formatted.  The Command
      238+   20186            Forms Program should now read the screen.
      239+   20187        4)  FUNCTION = '004'.
      240+   20188            The STATIONMAX limit has been exceeded.  The Command Forms Program
      241+   20189            should report an appropriate error to the screen and exit.
      242+   20190        5)  FUNCTION = '005'.
      243+   20191            The command line should be cleared before the next command is
      244+   20192            accepted.  This is sent as the first message function.  All other
      245+   20193            message functions will still be a '002'.
      246+   20194        */
      247+   20195
      248+   20196        %MACRO Q_MESSAGE (FPTN=Q_MESSAGE,
      249+   20197                          STCLASS=STATIC,
      250+   20198                          FUNCTION='003',
      251+   20199                          TEXT=' ');
      252+   20200
      253+   20201         %LSET LISTDIR='0'B;
      254+   20202         %LSET LISTEXP='1'B;
      255+   20203         %LSET LISTCOM='0'B;
      256+   20204         %LSET LISTSUB='1'B;
      257+   20205         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
      258+   20206         %IF (SUBSTR(STR,0,6)='STATIC') OR
      259+   20207         (SUBSTR(STR,0,8)='CONSTANT') OR
      260+   20208         (SUBSTR(STR,0,3)='EXT');
      261+   20209         %LSET INIT=CHARTEXT('INIT');
      262+   20210         %LSET EINIT=CHARTEXT('');
      263+   20211         %ELSE;
      264+   20212         %LSET INIT=CHARTEXT('/*');
      265+   20213         %LSET EINIT=CHARTEXT('*/');
      266+   20214         %ENDIF;
      267+   20215
      268+   20216        DCL 1 FPTN STCLASS,
      269+   20217              2 FUNCTION# CHAR(3) CALIGNED %INIT(FUNCTION)%EINIT,
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:36   
      270+   20218                    /*K* FUNCTION = VALUE-CHAR(3).  Specifies the action to be
      271+   20219                    taken by the Command Forms Program upon reading this
      272+   20220                    Q_MESSAGE as a RESPONSE to a '*TPCMD  ' write (see Q_COMMAND).
      273+   20221                    1)  FUNCTION = '001':  exit.
      274+   20222                    2)  FUNCTION = '002':  format TEXT# onto screen.
      275+   20223                    3)  FUNCTION = '003':  read screen.
      276+   20224                    4)  FUNCTION = '004':  report "STATIONMAX exceeded" and exit.
      277+   20225                    5)  FUNCTION = '005':  clear the command line before next command.
      278+   20226                    */
      279+   20227              2 TEXT# CHAR(80) CALIGNED %INIT(TEXT)%EINIT;
      280+   20228                    /*K* TYPE = VALUE-CHAR(80) specifies the text which is to
      281+   20229                    be formatted onto the screen by the Command Forms Program.
      282+   20230                    The text is significant if the message type read was 'MSGG    ',
      283+   20231                    or if the message type was '*RESP   ', in RESPONSE to a message
      284+   20232                    type of '*TPCMD  ' (see Q_COMMAND), and FUNCTION# is '002'.
      285+   20233                    */
      286+   20234        %MEND;
      287+   20235
      288+   20236
      289+   20237                 /***************************************/
      290+   20238                 /*              Q_COMMAND              */
      291+   20239                 /***************************************/
      292+   20240
      293+   20241        /*F* NAME: Q_COMMAND
      294+   20242
      295+   20243        The Transaction Processing Administrator executes commands received from
      296+   20244        the Command Forms Program; these commands have a message type of '*TPCMD  '
      297+   20245        when written to the TPA.
      298+   20246        To initialize communication with the TPA, the Command Forms Program
      299+   20247        writes a command with a message type of '*IAMRDY ', and then reads for a
      300+   20248        RESPONSE.  In this case, the text of the command may contain the station's
      301+   20249        node/port/controller/device address, which the TPA supplied with CP-6 will
      302+   20250        use in creating a messages pertaining to that station.
      303+   20251        */
      304+   20252
      305+   20253        %MACRO Q_COMMAND (FPTN=Q_COMMAND,
      306+   20254                          STCLASS=STATIC,
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:37   
      307+   20255                          TEXT=' ');
      308+   20256
      309+   20257         %LSET LISTDIR='0'B;
      310+   20258         %LSET LISTEXP='1'B;
      311+   20259         %LSET LISTCOM='0'B;
      312+   20260         %LSET LISTSUB='1'B;
      313+   20261         %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
      314+   20262         %IF (SUBSTR(STR,0,6)='STATIC') OR
      315+   20263         (SUBSTR(STR,0,8)='CONSTANT') OR
      316+   20264         (SUBSTR(STR,0,3)='EXT');
      317+   20265         %LSET INIT=CHARTEXT('INIT');
      318+   20266         %LSET EINIT=CHARTEXT('');
      319+   20267         %ELSE;
      320+   20268         %LSET INIT=CHARTEXT('/*');
      321+   20269         %LSET EINIT=CHARTEXT('*/');
      322+   20270         %ENDIF;
      323+   20271
      324+   20272        DCL 1 FPTN STCLASS,
      325+   20273              2 TEXT# CHAR(80) CALIGNED %INIT(TEXT)%EINIT,
      326+   20274                    /*K* TEXT = VALUE-CHAR(80).  For a write from the Command
      327+   20275                    Forms Program, with a message type of '*TPCMD  ', contains
      328+   20276                    the command to be executed by the Transaction Processing
      329+   20277                    Administrator.
      330+   20278                    */
      331+   20279              2 IAMRDY_TEXT# REDEF TEXT#,
      332+   20280                    /*K* IAMRDY is a redefinition of TEXT#, containing four
      333+   20281                    fields which may be filled in by the Command Forms Program
      334+   20282                    before writing its initialization message (with a message
      335+   20283                    type of '*IAMRDY ').  The fields are compatible with the
      336+   20284                    FPL 'ACCEPT identifier FROM TERMINAL-ATTRIBUTES' statement,
      337+   20285                    and with the M$GLINEATTR FEP monitor service.
      338+   20286                    */
      339+   20287                3 CP_6_NODE CHAR(4),
      340+   20288                3 CP_6_PORT CHAR(4),
      341+   20289                3 CP_6_CONTROLLER CHAR(4),
      342+   20290                3 CP_6_DEVICE CHAR(4),
      343+   20291                3 * CHAR(64),
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:38   
      344+   20292              2 * CHAR(3) CALIGNED;
      345+   20293        %MEND;
       89    20294          %SET LISTINC = '0'B;
       90    20295
       91    20296          %Q_LDBYTYP ( STCLASS = AUTO );
             20297         %LSET LISTDIR='0'B;
             20311    1   DCL 1 Q_LDBYTYP AUTO,
             20312    1         2 TYPE# CHAR(8) /*(' ')*/;
       92    20317          %Q_LDBYTYPRSP ( STCLASS = AUTO );
             20318         %LSET LISTDIR='0'B;
             20332    1   DCL 1 Q_LDBYTYPRSP AUTO,
             20349    1   2 ERR CALIGNED,
             20363    1   3 FCG  BIT(10)/*('0'B)*/,
             20376    1   3 MID  BIT(5)/*('0'B)*/,3 MON  BIT(1)/*('0'B)*/,3 ERR#
             20377    1   UBIN(13)/*(0)*/ UNAL,3 SEV  UBIN(3)/*(0)*/ UNAL ,
             20388    1         2 PSN# CHAR(6) CALIGNED /*(' ')*/,
             20393    1         2 NAME CALIGNED,
             20394    1            3 LEN# UBIN BYTE UNAL /*(LENGTHC(Q_LDBYTYPRSP.NAME.NAME#))*/,
             20395    1            3 NAME# CHAR(31) CALIGNED /*(' ')*/,
             20400    1         2 ACCT# CHAR(8) CALIGNED /*(' ')*/,
             20405    1         2 PASS# CHAR(8) CALIGNED /*(' ')*/;
       93    20411          %Q_FPABT ( FPTN = Q$FPABT,
       94    20412                     STCLASS = BASED,
       95    20413                     MSGCNT = 3 );
             20414         %LSET LISTDIR='0'B;
             20428    1   DCL 1 Q$FPABT BASED,
             20429    1         2 FPABTTXT# CHAR(6) /*('*FPABT')*/,
             20435    1         2 LANG# CHAR(1) CALIGNED /*(' ')*/,
             20438    1         2 MSGCNT# UBIN BYTE UNAL /*(3)*/,
             20442    1         2 MSGS(0:2) CALIGNED,
             20462    1   3 ERR CALIGNED,
             20476    1   4 FCG  BIT(10)/*('0'B)*/,
             20489    1   4 MID  BIT(5)/*('0'B)*/,4 MON  BIT(1)/*('0'B)*/,4 ERR#
             20490    1   UBIN(13)/*(0)*/ UNAL,4 SEV  UBIN(3)/*(0)*/ UNAL ,
             20492    1           3 U1 CALIGNED,
             20493    1             4 LEN# UBIN BYTE UNAL,
             20494    1             4 NAME# CHAR(31) CALIGNED,
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:39   
             20495    1           3 U2 CALIGNED,
             20496    1             4 LEN# UBIN BYTE UNAL,
             20497    1             4 NAME# CHAR(31) CALIGNED,
             20498    1           3 U3 CALIGNED,
             20499    1             4 LEN# UBIN BYTE UNAL,
             20500    1             4 NAME# CHAR(31) CALIGNED;
       96    20502
       97    20503          %SET LISTMAC = '0'B;
       98    20504        %EJECT;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:40   
       99    20505    1       INSTR$ = QI_1.INSTR$;

  20505   1 000005  EC80 0000 0006  xsym                 LDB,B6   QI_1+6
          1 000008  EFC7 0092                            STB,B6   INSTR$,AUTO

      100    20506    1       QI_1.INSTR$ = ADDR ( INSTR$ -> QI$OP_LOAD.NEXT_CODE@P );

  20506   1 00000A  DBC6 0004                            LAB,B5   4,B6
          1 00000C  DF80 0000 0006  xsym                 STB,B5   QI_1+6

      101    20507
      102    20508    1       IF QI_1.SCREEN_UPDATE_FLAGS.WAS_APPLIED

  20508   1 00000F  8980 0000 0016  xsym                 CMZ      QI_1+22
          1 000012  0801 0007                            BAL      s:20511,PREL
          1 000014  8280 0000 0016  xsym                 LB,'1000'X        QI_1+22
          1 000017       1000
          1 000018  0581 0007                            BBF      s:20512,PREL

      103    20509    1         OR QI_1.SCREEN_UPDATE_FLAGS.WAS_WRITTEN
      104    20510    1       THEN
      105    20511    1         CALL QCU$UPDATE_SCREEN;

  20511   1 00001A  CBF0 0000                            LAB,B4   0,IMO
          1 00001C  E380 0000 0000  xent                 LNJ,B6   QCU$UPDATE_SCREEN
          1 00001F       0001                            DC       s:20512,PREL

      106    20512    1       QI_1.OP = QI_SRCH_VRFY;

  20512   1 000020  AB80 0000 0000  xsym                 LAB,B2   QI_SRCH_VRFY
          1 000023  2C00                                 LDV,R2   0
          1 000024  6C30                                 LDV,R6   48
          1 000025  BB80 0000 0000  xsym                 LAB,B3   QI_1
          1 000028  3C34                                 LDV,R3   52
          1 000029  0008                                 MMM

      107    20513    1       QI_1.SOURCE$ = ADDR ( INSTR$ -> QI$OP_LOAD.NAME_OR_TYPE@P );
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:41   

  20513   1 00002A  ECC7 0092                            LDB,B6   INSTR$,AUTO
          1 00002C  DBC6 0002                            LAB,B5   2,B6
          1 00002E  DF80 0000 0018  xsym                 STB,B5   QI_1+24

      108    20514    1       CALL QCS$SETUP_AUX;

  20514   1 000031  CBF0 0000                            LAB,B4   0,IMO
          1 000033  E380 0000 0000  xent                 LNJ,B6   QCS$SETUP_AUX
          1 000036       0001                            DC       s:20516,PREL

      109    20515
      110    20516    1       QI_1.A_REG = 0;

  20516   1 000037  8700 0000 0054  xsym                 CL       QI_1+84

      111    20517
      112    20518    1       FPT@LDTRC = QI_FPT_LDTRC;

  20518   1 00003A  AB80 0000 0000  xsym                 LAB,B2   QI_FPT_LDTRC
          1 00003D  2C00                                 LDV,R2   0
          1 00003E  6C28                                 LDV,R6   40
          1 00003F  BB87                                 LAB,B3   ,AUTO
          1 000040  3C38                                 LDV,R3   56
          1 000041  0008                                 MMM

      113    20519    1       FPT@LDTRC.PSN_ = VECTOR ( Q_LDBYTYPRSP.PSN# );

  20519   1 000042  EBC7 011E                            LAB,B6   Q_LDBYTYPRSP+2,AUTO
          1 000044  EFC7 013D                            STB,B6   Q_LDBYTYPRSP+33,AUTO
          1 000046  6C05                                 LDV,R6   5
          1 000047  EF47 013C                            STR,R6   Q_LDBYTYPRSP+32,AUTO
          1 000049  ABC7 013C                            LAB,B2   Q_LDBYTYPRSP+32,AUTO
          1 00004B  2C00                                 LDV,R2   0
          1 00004C  6C06                                 LDV,R6   6
          1 00004D  BB87                                 LAB,B3   ,AUTO
          1 00004E  3C4A                                 LDV,R3   74
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:42   
          1 00004F  0008                                 MMM

      114    20520    1       FPT@LDTRC.NAME_ = VECTOR ( Q_LDBYTYPRSP.NAME );

  20520   1 000050  EBC7 0121                            LAB,B6   Q_LDBYTYPRSP+5,AUTO
          1 000052  EFC7 013D                            STB,B6   Q_LDBYTYPRSP+33,AUTO
          1 000054  6C1F                                 LDV,R6   31
          1 000055  EF47 013C                            STR,R6   Q_LDBYTYPRSP+32,AUTO
          1 000057  ABC7 013C                            LAB,B2   Q_LDBYTYPRSP+32,AUTO
          1 000059  2C00                                 LDV,R2   0
          1 00005A  6C06                                 LDV,R6   6
          1 00005B  BB87                                 LAB,B3   ,AUTO
          1 00005C  3C38                                 LDV,R3   56
          1 00005D  0008                                 MMM

      115    20521    1       FPT@LDTRC.ACCT_ = VECTOR ( Q_LDBYTYPRSP.ACCT# );

  20521   1 00005E  EBC7 0131                            LAB,B6   Q_LDBYTYPRSP+21,AUTO
          1 000060  EFC7 013D                            STB,B6   Q_LDBYTYPRSP+33,AUTO
          1 000062  6C07                                 LDV,R6   7
          1 000063  EF47 013C                            STR,R6   Q_LDBYTYPRSP+32,AUTO
          1 000065  ABC7 013C                            LAB,B2   Q_LDBYTYPRSP+32,AUTO
          1 000067  2C00                                 LDV,R2   0
          1 000068  6C06                                 LDV,R6   6
          1 000069  BB87                                 LAB,B3   ,AUTO
          1 00006A  3C3E                                 LDV,R3   62
          1 00006B  0008                                 MMM

      116    20522    1       FPT@LDTRC.PASS_ = VECTOR ( Q_LDBYTYPRSP.PASS# );

  20522   1 00006C  EBC7 0135                            LAB,B6   Q_LDBYTYPRSP+25,AUTO
          1 00006E  EFC7 013D                            STB,B6   Q_LDBYTYPRSP+33,AUTO
          1 000070  6C07                                 LDV,R6   7
          1 000071  EF47 013C                            STR,R6   Q_LDBYTYPRSP+32,AUTO
          1 000073  ABC7 013C                            LAB,B2   Q_LDBYTYPRSP+32,AUTO
          1 000075  2C00                                 LDV,R2   0
          1 000076  6C06                                 LDV,R6   6
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:43   
          1 000077  BB87                                 LAB,B3   ,AUTO
          1 000078  3C44                                 LDV,R3   68
          1 000079  0008                                 MMM

      117    20523    1       Q_LDBYTYPRSP.PSN# = ' ';

  20523   1 00007A  0021                                 ALR      ;
          1 00007B       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          1 00007D       4607 011E                                ALPHANUM(Q_LDBYTYPRSP+2,AUTO,,6,FILL)

      118    20524    1       Q_LDBYTYPRSP.NAME.LEN# = 0;

  20524   1 00007F  87C7 0121                            CLH      Q_LDBYTYPRSP+5,AUTO

      119    20525    1       Q_LDBYTYPRSP.NAME.NAME# = ' ';

  20525   1 000081  0021                                 ALR      ;
          1 000082       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          1 000084       DF07 0121                                ALPHANUM(Q_LDBYTYPRSP+5,AUTO,1,31,FILL)

      120    20526    1       Q_LDBYTYPRSP.ACCT# = ' ';

  20526   1 000086  0021                                 ALR      ;
          1 000087       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          1 000089       4807 0131                                ALPHANUM(Q_LDBYTYPRSP+21,AUTO,,8,FILL)

      121    20527    1       Q_LDBYTYPRSP.PASS# = ' ';

  20527   1 00008B  0021                                 ALR      ;
          1 00008C       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          1 00008E       4807 0135                                ALPHANUM(Q_LDBYTYPRSP+25,AUTO,,8,FILL)

      122    20528
      123    20529    1       QI@FID_OR_TYPE_BA (0) = MINIMUM ( QI_1.OP.LEN.AUX,

  20529   1 000090  6C1F                                 LDV,R6   31
          1 000091  E900 0000 0028  xsym                 CMR,R6   QI_1+40
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:44   
          1 000094  437F                                 CSYNC    s:20529+3,SPREL
          1 000095  0381 0004                            BLE      s:20529+10,PREL
          1 000097  E800 0000 0028  xsym                 LDR,R6   QI_1+40
          1 00009A  E7C7 0098                            STH,R6   QI@FID_OR_TYPE,AUTO

      124    20530    1         SIZEC ( Q$FPABT.MSGS.U1.NAME# (0) ) );
      125    20531    1       ADDR ( QI@FID_OR_TYPE_CA (1) ) -> QI$VARIABLE_STRING_AUX.TEXT =

  20531   1 00009C  8C80 0000 0024  xsym                 LDI      QI_1+36
          1 00009F  7031                                 DCL,R7   1
          1 0000A0  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 0000A2  F800 0000 0043  xsym                 LDR,R7   QI_1+67
          1 0000A5  6C00                                 LDV,R6   0
          1 0000A6  8447 013C                            AID      Q_LDBYTYPRSP+32,AUTO
          1 0000A8  7071                                 DCR,R7   1
          1 0000A9  B856                                 LDR,R3   R6
          1 0000AA  E570 7FFF                            AND,R6   32767,IMO
          1 0000AC  8D47 013E                            SDI      Q_LDBYTYPRSP+34,AUTO
          1 0000AE  ECC7 013E                            LDB,B6   Q_LDBYTYPRSP+34,AUTO
          1 0000B0  304F                                 SOR,R3   15
          1 0000B1  AB86                                 LAB,B2   ,B6
          1 0000B2  A853                                 LDR,R2   R3
          1 0000B3  E800 0000 0028  xsym                 LDR,R6   QI_1+40
          1 0000B6  BBC7 0098                            LAB,B3   QI@FID_OR_TYPE,AUTO
          1 0000B8  3C01                                 LDV,R3   1
          1 0000B9  0008                                 MMM

      126    20532    1         PINCRC ( QI_1.OP.DATA.AUX$, QI_1.OFFSET.AUX ) -> QI$VARIABLE_STRING_AUX.TEXT;
      127    20533
      128    20534    1       IF INSTR$ -> QI$OP_LOAD.IS_BY_NAME

  20534   1 0000BA  DCC7 0092                            LDB,B5   INSTR$,AUTO
          1 0000BC  82C5 0001                            LB,'2000'X        1,B5
          1 0000BE       2000
          1 0000BF  0581 012B                            BBF      s:20616,PREL

      129    20535    1       THEN
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:45   
      130    20536    1   LOAD_BY_NAME:
      131    20537    2         DO;

  20537   1                              LOAD_BY_NAME    null
      132    20538
      133    20539    2           WERE_ALL_DONE = %NO;

  20539   1 0000C1  8747 0096            LOAD_BY_NAME    CL       WERE_ALL_DONE,AUTO

      134    20540
      135    20541    2           QI_1.OP.DATA.S$ = ADDR ( QI_BLANK );

  20541   1 0000C3  CB80 0000 0000  xsym                 LAB,B4   QI_BLANK
          1 0000C6  CF80 0000 0020  xsym                 STB,B4   QI_1+32

      136    20542    2           QI_1.OP.DATA.T$ = ADDR ( QI_1.OP.SRCH_RESULT );

  20542   1 0000C9  BB80 0000 002E  xsym                 LAB,B3   QI_1+46
          1 0000CC  BF80 0000 0022  xsym                 STB,B3   QI_1+34

      137    20543    2           QI_1.OP.SRCH_VRFY_ELEMS.LIST_LEN = QI_1.OP.LEN.AUX;

  20543   1 0000CF  E800 0000 0028  xsym                 LDR,R6   QI_1+40
          1 0000D2  EF00 0000 002D  xsym                 STR,R6   QI_1+45

      138    20544
      139    20545    2           CALL QCC$VRFY ( QI_1.OP )

  20545   1 0000D5  BB80 0000 0000  02                   LAB,B3   0
          1 0000D8  CBF0 0100                            LAB,B4   256,IMO
          1 0000DA  E380 0000 0000  xent                 LNJ,B6   QCC$VRFY
          1 0000DD       0003                            DC       s:20551,PREL

      140    20546    2           WHENRETURN
      141    20547    3             DO;

      142    20548    3               GOTO BAD_FID_ON_LOAD_BY_NAME;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:46   

  20548   1 0000DE  0F81 029B                            B        s:20713,PREL

      143    20549    3             END;
      144    20550
      145    20551    2           FID$ = PINCRC ( QI_1.OP.DATA.AUX$,

  20551   1 0000E0  8C80 0000 0024  xsym                 LDI      QI_1+36
          1 0000E3  7031                                 DCL,R7   1
          1 0000E4  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 0000E6  F800 0000 0043  xsym                 LDR,R7   QI_1+67
          1 0000E9  6C00                                 LDV,R6   0
          1 0000EA  8447 013C                            AID      Q_LDBYTYPRSP+32,AUTO
          1 0000EC  7071                                 DCR,R7   1
          1 0000ED  8D47 008F                            SDI      FID$,AUTO

      146    20552    2             QI_1.OFFSET.AUX );
      147    20553    2           FID_INDEX = QI_1.OP.VRFY_RESULT.DISP;

  20553   1 0000EF  D800 0000 002E  xsym                 LDR,R5   QI_1+46
          1 0000F2  DF47 0091                            STR,R5   FID_INDEX,AUTO

      148    20554
      149    20555    2           IF SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT, FID_INDEX, 3 ) = 'DP#'

  20555   1 0000F4  B856                                 LDR,R3   R6
          1 0000F5  E570 7FFF                            AND,R6   32767,IMO
          1 0000F7  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 0000F9  ECC7 013C                            LDB,B6   Q_LDBYTYPRSP+32,AUTO
          1 0000FB  304F                                 SOR,R3   15
          1 0000FC  BA55                                 ADD,R3   R5
          1 0000FD  DB80 0000 0000  00                   LAB,B5   0
          1 000100  0022                                 ACM      ;
          1 000101       4336 0000                                ALPHANUM(0,B6,R3,,3,FILL),;
          1 000103       4305 0000                                ALPHANUM(0,B5,,3,FILL)
          1 000105  5301 005E                            CBNE     s:20576,PREL

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:47   
      150    20556    2           THEN
      151    20557
      152    20558    2   WE_FOUND_A_PSN:
      153    20559    3             DO;

  20559   1                              WE_FOUND_A_PSN  null
      154    20560    3               CALL INDEX ( WHATEVER_INDEX,

  20560   1 000107  8CC7 008F            WE_FOUND_A_PSN  LDI      FID$,AUTO
          1 000109  B856                                 LDR,R3   R6
          1 00010A  E570 7FFF                            AND,R6   32767,IMO
          1 00010C  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 00010E  ECC7 013C                            LDB,B6   Q_LDBYTYPRSP+32,AUTO
          1 000110  304F                                 SOR,R3   15
          1 000111  C800 0000 0028  xsym                 LDR,R4   QI_1+40
          1 000114  D254                                 SUB,R5   R4
          1 000115  BA47 0091                            ADD,R3   FID_INDEX,AUTO
          1 000117  CF47 0097                            STR,R4   WHATEVER_INDEX,AUTO
          1 000119  A800 0000 0002  02                   LDR,R2   +2
          1 00011C  EFC7 013E                            STB,B6   Q_LDBYTYPRSP+34,AUTO
          1 00011E  EBA0 0000 0000  01                   LAB,B6   s:15,R2
          1 000121  BF47 0140                            STR,R3   Q_LDBYTYPRSP+36,AUTO
          1 000123  DF47 0141                            STR,R5   Q_LDBYTYPRSP+37,AUTO
          1 000125  AB80 0000 0000  02                   LAB,B2   0
          1 000128  2C06                                 LDV,R2   6
          1 000129  6C01                                 LDV,R6   1
          1 00012A  BCC7 013E                            LDB,B3   Q_LDBYTYPRSP+34,AUTO
          1 00012C  F855                                 LDR,R7   R5
          1 00012D  8257                                 NEG      R7
          1 00012E  9BC7 013C                            LAB,B1   Q_LDBYTYPRSP+32,AUTO
          1 000130  1C0C                                 LDV,R1   12
          1 000131  5C0C                                 LDV,R5   12
          1 000132  D380 0000 0000  xent                 LNJ,B5   X6C_SRCH
          1 000135  EA47 0091                            ADD,R6   FID_INDEX,AUTO
          1 000137  EF47 0097                            STR,R6   WHATEVER_INDEX,AUTO
          1 000139  0F81 0003                            B        s:20569,PREL

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:48   
      155    20561    3                 '/',
      156    20562    3                 FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      157    20563    3                 FID_INDEX )
      158    20564    3               WHENALTRETURN
      159    20565    4                 DO;

      160    20566    4                   GOTO BAD_FID_ON_LOAD_BY_NAME;

  20566   1 00013B  0F81 023E                            B        s:20713,PREL

      161    20567    4                 END;
      162    20568
      163    20569    3               Q_LDBYTYPRSP.PSN# = SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT,

  20569   1 00013D  8CC7 008F                            LDI      FID$,AUTO
          1 00013F  B856                                 LDR,R3   R6
          1 000140  E570 7FFF                            AND,R6   32767,IMO
          1 000142  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 000144  ECC7 013C                            LDB,B6   Q_LDBYTYPRSP+32,AUTO
          1 000146  304F                                 SOR,R3   15
          1 000147  D847 0097                            LDR,R5   WHATEVER_INDEX,AUTO
          1 000149  D247 0091                            SUB,R5   FID_INDEX,AUTO
          1 00014B  BA47 0091                            ADD,R3   FID_INDEX,AUTO
          1 00014D  BF47 013E                            STR,R3   Q_LDBYTYPRSP+34,AUTO
          1 00014F  DF47 013F                            STR,R5   Q_LDBYTYPRSP+35,AUTO
          1 000151  EFC7 0140                            STB,B6   Q_LDBYTYPRSP+36,AUTO
          1 000153  AB86                                 LAB,B2   ,B6
          1 000154  A853                                 LDR,R2   R3
          1 000155  2E03                                 ADV,R2   3
          1 000156  E855                                 LDR,R6   R5
          1 000157  6EFD                                 ADV,R6   -3
          1 000158  BBC7 011E                            LAB,B3   Q_LDBYTYPRSP+2,AUTO
          1 00015A  3C00                                 LDV,R3   0
          1 00015B  7C06                                 LDV,R7   6
          1 00015C  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      164    20570    3                 FID_INDEX + 3,
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:49   
      165    20571    3                 WHATEVER_INDEX - ( FID_INDEX + 3 ) );
      166    20572
      167    20573    3               FID_INDEX = WHATEVER_INDEX + 1;

  20573   1 00015F  E847 0097                            LDR,R6   WHATEVER_INDEX,AUTO
          1 000161  6E01                                 ADV,R6   1
          1 000162  EF47 0091                            STR,R6   FID_INDEX,AUTO

      168    20574    3             END WE_FOUND_A_PSN;

      169    20575
      170    20576    2           CALL UNSTRING_NAME_ACCT_PASS;

  20576   1 000164  E3C0 027D                            LNJ,B6   s:0,PREL
          1 000166       0001                            DC       s:20578,PREL

      171    20577
      172    20578    2           Q_LDBYTYPRSP.NAME.LEN# = WHATEVER_INDEX - FID_INDEX;

  20578   1 000167  E847 0097                            LDR,R6   WHATEVER_INDEX,AUTO
          1 000169  E247 0091                            SUB,R6   FID_INDEX,AUTO
          1 00016B  E7C7 0121                            STH,R6   Q_LDBYTYPRSP+5,AUTO

      173    20579    2           Q_LDBYTYPRSP.NAME.NAME# = SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT,

  20579   1 00016D  8CC7 008F                            LDI      FID$,AUTO
          1 00016F  B856                                 LDR,R3   R6
          1 000170  E570 7FFF                            AND,R6   32767,IMO
          1 000172  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 000174  ECC7 013C                            LDB,B6   Q_LDBYTYPRSP+32,AUTO
          1 000176  304F                                 SOR,R3   15
          1 000177  D847 0097                            LDR,R5   WHATEVER_INDEX,AUTO
          1 000179  D247 0091                            SUB,R5   FID_INDEX,AUTO
          1 00017B  BA47 0091                            ADD,R3   FID_INDEX,AUTO
          1 00017D  BF47 013E                            STR,R3   Q_LDBYTYPRSP+34,AUTO
          1 00017F  DF47 013F                            STR,R5   Q_LDBYTYPRSP+35,AUTO
          1 000181  EFC7 0140                            STB,B6   Q_LDBYTYPRSP+36,AUTO
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:50   
          1 000183  AB86                                 LAB,B2   ,B6
          1 000184  A853                                 LDR,R2   R3
          1 000185  E855                                 LDR,R6   R5
          1 000186  BBC7 0121                            LAB,B3   Q_LDBYTYPRSP+5,AUTO
          1 000188  3C01                                 LDV,R3   1
          1 000189  7C1F                                 LDV,R7   31
          1 00018A  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      174    20580    2             FID_INDEX,
      175    20581    2             WHATEVER_INDEX - FID_INDEX );
      176    20582
      177    20583    2           IF NOT WERE_ALL_DONE

  20583   1 00018D  89C7 0096                            CMZ      WERE_ALL_DONE,AUTO
          1 00018F  0801 0186                            BAL      s:20680,PREL

      178    20584    2           THEN
      179    20585    2   WE_FOUND_A_ACCT:
      180    20586    3             DO;

  20586   1                              WE_FOUND_A_ACCT null
      181    20587    3               FID_INDEX = WHATEVER_INDEX + 1;

  20587   1 000191  E847 0097            WE_FOUND_A_ACCT LDR,R6   WHATEVER_INDEX,AUTO
          1 000193  6E01                                 ADV,R6   1
          1 000194  EF47 0091                            STR,R6   FID_INDEX,AUTO

      182    20588
      183    20589    3               CALL UNSTRING_NAME_ACCT_PASS;

  20589   1 000196  E3C0 024B                            LNJ,B6   s:0,PREL
          1 000198       0001                            DC       s:20591,PREL

      184    20590
      185    20591    3               Q_LDBYTYPRSP.ACCT# = SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT,

  20591   1 000199  8CC7 008F                            LDI      FID$,AUTO
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:51   
          1 00019B  B856                                 LDR,R3   R6
          1 00019C  E570 7FFF                            AND,R6   32767,IMO
          1 00019E  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 0001A0  ECC7 013C                            LDB,B6   Q_LDBYTYPRSP+32,AUTO
          1 0001A2  304F                                 SOR,R3   15
          1 0001A3  D847 0097                            LDR,R5   WHATEVER_INDEX,AUTO
          1 0001A5  D247 0091                            SUB,R5   FID_INDEX,AUTO
          1 0001A7  BA47 0091                            ADD,R3   FID_INDEX,AUTO
          1 0001A9  BF47 013E                            STR,R3   Q_LDBYTYPRSP+34,AUTO
          1 0001AB  DF47 013F                            STR,R5   Q_LDBYTYPRSP+35,AUTO
          1 0001AD  EFC7 0140                            STB,B6   Q_LDBYTYPRSP+36,AUTO
          1 0001AF  AB86                                 LAB,B2   ,B6
          1 0001B0  A853                                 LDR,R2   R3
          1 0001B1  E855                                 LDR,R6   R5
          1 0001B2  BBC7 0131                            LAB,B3   Q_LDBYTYPRSP+21,AUTO
          1 0001B4  3C00                                 LDV,R3   0
          1 0001B5  7C08                                 LDV,R7   8
          1 0001B6  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      186    20592    3                 FID_INDEX,
      187    20593    3                 WHATEVER_INDEX - FID_INDEX );
      188    20594
      189    20595    3               IF NOT WERE_ALL_DONE

  20595   1 0001B9  89C7 0096                            CMZ      WERE_ALL_DONE,AUTO
          1 0001BB  0801 015A                            BAL      s:20680,PREL

      190    20596    3               THEN
      191    20597    3   WE_FOUND_A_PASS:
      192    20598    4                 DO;

  20598   1                              WE_FOUND_A_PASS null
      193    20599    4                   FID_INDEX = WHATEVER_INDEX + 1;

  20599   1 0001BD  E847 0097            WE_FOUND_A_PASS LDR,R6   WHATEVER_INDEX,AUTO
          1 0001BF  6E01                                 ADV,R6   1
          1 0001C0  EF47 0091                            STR,R6   FID_INDEX,AUTO
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:52   

      194    20600
      195    20601    4                   CALL UNSTRING_NAME_ACCT_PASS;

  20601   1 0001C2  E3C0 021F                            LNJ,B6   s:0,PREL
          1 0001C4       0001                            DC       s:20603,PREL

      196    20602
      197    20603    4                   Q_LDBYTYPRSP.PASS# = SUBSTR ( FID$ -> QI$VARIABLE_STRING_AUX.TEXT,

  20603   1 0001C5  8CC7 008F                            LDI      FID$,AUTO
          1 0001C7  B856                                 LDR,R3   R6
          1 0001C8  E570 7FFF                            AND,R6   32767,IMO
          1 0001CA  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 0001CC  ECC7 013C                            LDB,B6   Q_LDBYTYPRSP+32,AUTO
          1 0001CE  304F                                 SOR,R3   15
          1 0001CF  D847 0097                            LDR,R5   WHATEVER_INDEX,AUTO
          1 0001D1  D247 0091                            SUB,R5   FID_INDEX,AUTO
          1 0001D3  BA47 0091                            ADD,R3   FID_INDEX,AUTO
          1 0001D5  BF47 013E                            STR,R3   Q_LDBYTYPRSP+34,AUTO
          1 0001D7  DF47 013F                            STR,R5   Q_LDBYTYPRSP+35,AUTO
          1 0001D9  EFC7 0140                            STB,B6   Q_LDBYTYPRSP+36,AUTO
          1 0001DB  AB86                                 LAB,B2   ,B6
          1 0001DC  A853                                 LDR,R2   R3
          1 0001DD  E855                                 LDR,R6   R5
          1 0001DE  BBC7 0135                            LAB,B3   Q_LDBYTYPRSP+25,AUTO
          1 0001E0  3C00                                 LDV,R3   0
          1 0001E1  7C08                                 LDV,R7   8
          1 0001E2  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      198    20604    4                     FID_INDEX,
      199    20605    4                     WHATEVER_INDEX - FID_INDEX );
      200    20606
      201    20607    4                   IF NOT WERE_ALL_DONE

  20607   1 0001E5  89C7 0096                            CMZ      WERE_ALL_DONE,AUTO
          1 0001E7  0881 0192                            BAGE     s:20713,PREL
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:53   

      202    20608    4                   THEN
      203    20609    4                     GOTO BAD_FID_ON_LOAD_BY_NAME;
      204    20610    4                 END WE_FOUND_A_PASS;

      205    20611    3             END WE_FOUND_A_ACCT;

      206    20612
      207    20613    2         END LOAD_BY_NAME;

  20613   1 0001E9  0F81 012C                            B        s:20680,PREL

      208    20614    1       ELSE
      209    20615    1   LOAD_BY_TYPE:
      210    20616    2         DO;

  20616   1                              LOAD_BY_TYPE    null
      211    20617
      212    20618    2           FPT@OPEN = QI_FPT_OPEN;

  20618   1 0001EB  AB80 0000 0000  xsym LOAD_BY_TYPE    LAB,B2   QI_FPT_OPEN
          1 0001EE  2C00                                 LDV,R2   0
          1 0001EF  6C5E                                 LDV,R6   94
          1 0001F0  BB87                                 LAB,B3   ,AUTO
          1 0001F1  3C60                                 LDV,R3   96
          1 0001F2  0008                                 MMM

      213    20619    2           VBASE ( FPT@OPEN.V_ ) = ADDR ( FPT@OPEN.V );

  20619   1 0001F3  DBC7 0057                            LAB,B5   FPT@OPEN+39,AUTO
          1 0001F5  DFC7 0031                            STB,B5   FPT@OPEN+1,AUTO

      214    20620    2           FPT@OPEN.V.DCB# = QI_1.INITIALIZATION_BLOCK$ -> QI$INITIALIZATION_BLOCK.
             20620                    VANILLA_HOST_DCB#;

  20620   1 0001F7  CC80 0000 000A  xsym                 LDB,B4   QI_1+10
          1 0001FA  E844 0013                            LDR,R6   19,B4
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:54   
          1 0001FC  E7C7 0057                            STH,R6   FPT@OPEN+39,AUTO

      215    20621    2           FPT@OPEN.V.ORG = %G_ORG_CONSEC#;

  20621   1 0001FE  6C01                                 LDV,R6   1
          1 0001FF  E7C7 0059                            STH,R6   FPT@OPEN+41,AUTO

      216    20622    2           FPT@OPEN.V.RES = 'HO';

  20622   1 000201  AB80 0000 0000  00                   LAB,B2   0
          1 000204  0021                                 ALR      ;
          1 000205       4202 0002                                ALPHANUM(2,B2,,2),;
          1 000207       4407 005A                                ALPHANUM(FPT@OPEN+42,AUTO,,4,FILL)

      217    20623    2           FPT@OPEN.V.KEYTYPE = 3 /* MSGID */;

  20623   1 000209  5C03                                 LDV,R5   3
          1 00020A  437F                                 CSYNC    s:20623,SPREL
          1 00020B  DAC7 0058                            SRM,R5,'00FF'X    FPT@OPEN+40,AUTO
          1 00020D       00FF

      218    20624
      219    20625    2           CALL M$OPEN ( FPT@OPEN )

  20625   1 00020E  BBC7 0030                            LAB,B3   FPT@OPEN,AUTO
          1 000210  B870 3540                            LDR,R3   13632,IMO
          1 000212  0001                                 MCL
          1 000213       0003                            DC       s:20628,PREL
          1 000214  0F81 000A                            B        s:20631,PREL

      220    20626    2           WHENALTRETURN
      221    20627    3             DO;

      222    20628    3               CALL QCE$ERROR_M$INTERNAL ( %E$UNEXPECTED_ALTRET );

  20628   1 000216  BB80 0000 0005  02                   LAB,B3   +5
          1 000219  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:55   
          1 00021B  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_M$INTERNAL
          1 00021E       0001                            DC       s:20631,PREL

      223    20629    3             END;

      224    20630
      225    20631    2           FPT@WRITE = QI_FPT_WRITE;

  20631   1 00021F  AB80 0000 0000  xsym                 LAB,B2   QI_FPT_WRITE
          1 000222  2C00                                 LDV,R2   0
          1 000223  6C24                                 LDV,R6   36
          1 000224  BBC7 0071                            LAB,B3   FPT@WRITE,AUTO
          1 000226  3C00                                 LDV,R3   0
          1 000227  0008                                 MMM

      226    20632    2           VBASE ( FPT@WRITE.V_ ) = ADDR ( FPT@WRITE.V );

  20632   1 000228  EBC7 0080                            LAB,B6   FPT@WRITE+15,AUTO
          1 00022A  EFC7 0072                            STB,B6   FPT@WRITE+1,AUTO

      227    20633    2           FPT@WRITE.V.DCB# = FPT@OPEN.V.DCB#;

  20633   1 00022C  E2C7 0057                            LLH,R6   FPT@OPEN+39,AUTO
          1 00022E  E7C7 0080                            STH,R6   FPT@WRITE+15,AUTO

      228    20634    2           FPT@WRITE.CG_ = VECTOR ( VLP@CG );

  20634   1 000230  DBC7 0083                            LAB,B5   VLP@CG,AUTO
          1 000232  DFC7 013D                            STB,B5   Q_LDBYTYPRSP+33,AUTO
          1 000234  5C17                                 LDV,R5   23
          1 000235  DF47 013C                            STR,R5   Q_LDBYTYPRSP+32,AUTO
          1 000237  ABC7 013C                            LAB,B2   Q_LDBYTYPRSP+32,AUTO
          1 000239  2C00                                 LDV,R2   0
          1 00023A  6C06                                 LDV,R6   6
          1 00023B  BBC7 007A                            LAB,B3   FPT@WRITE+9,AUTO
          1 00023D  3C00                                 LDV,R3   0
          1 00023E  0008                                 MMM
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:56   

      229    20635    2           VLP@CG = QI_VLP_CG;

  20635   1 00023F  AB80 0000 0000  xsym                 LAB,B2   QI_VLP_CG
          1 000242  2C00                                 LDV,R2   0
          1 000243  6C18                                 LDV,R6   24
          1 000244  BBC7 0083                            LAB,B3   VLP@CG,AUTO
          1 000246  3C00                                 LDV,R3   0
          1 000247  0008                                 MMM

      230    20636    2           VLP@CG.MSGTYP# = '*FPRQ';

  20636   1 000248  EB80 0000 0000  00                   LAB,B6   0
          1 00024B  0021                                 ALR      ;
          1 00024C       4506 0003                                ALPHANUM(3,B6,,5),;
          1 00024E       4807 0087                                ALPHANUM(VLP@CG+4,AUTO,,8,FILL)

      231    20637    2           FPT@WRITE.BUF_ = VECTOR ( Q_LDBYTYP );

  20637   1 000250  EBC7 0118                            LAB,B6   Q_LDBYTYP,AUTO
          1 000252  437F                                 CSYNC    s:20637+1,SPREL
          1 000253  EFC7 013D                            STB,B6   Q_LDBYTYPRSP+33,AUTO
          1 000255  6C07                                 LDV,R6   7
          1 000256  EF47 013C                            STR,R6   Q_LDBYTYPRSP+32,AUTO
          1 000258  ABC7 013C                            LAB,B2   Q_LDBYTYPRSP+32,AUTO
          1 00025A  2C00                                 LDV,R2   0
          1 00025B  6C06                                 LDV,R6   6
          1 00025C  BBC7 0077                            LAB,B3   FPT@WRITE+6,AUTO
          1 00025E  3C00                                 LDV,R3   0
          1 00025F  0008                                 MMM

      232    20638
      233    20639    2           VARIABLE_AUX$ = PINCRC ( QI_1.OP.DATA.AUX$,

  20639   1 000260  8C80 0000 0024  xsym                 LDI      QI_1+36
          1 000263  7031                                 DCL,R7   1
          1 000264  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:57   
          1 000266  F800 0000 0043  xsym                 LDR,R7   QI_1+67
          1 000269  6C00                                 LDV,R6   0
          1 00026A  8447 013C                            AID      Q_LDBYTYPRSP+32,AUTO
          1 00026C  7071                                 DCR,R7   1
          1 00026D  8D47 0094                            SDI      VARIABLE_AUX$,AUTO

      234    20640    2             QI_1.OFFSET.AUX );
      235    20641    2           Q_LDBYTYP.TYPE# =

  20641   1 00026F  B856                                 LDR,R3   R6
          1 000270  E570 7FFF                            AND,R6   32767,IMO
          1 000272  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 000274  ECC7 013C                            LDB,B6   Q_LDBYTYPRSP+32,AUTO
          1 000276  304F                                 SOR,R3   15
          1 000277  BF47 013E                            STR,R3   Q_LDBYTYPRSP+34,AUTO
          1 000279  EFC7 013F                            STB,B6   Q_LDBYTYPRSP+35,AUTO
          1 00027B  AB86                                 LAB,B2   ,B6
          1 00027C  A853                                 LDR,R2   R3
          1 00027D  E800 0000 0028  xsym                 LDR,R6   QI_1+40
          1 000280  BBC7 0118                            LAB,B3   Q_LDBYTYP,AUTO
          1 000282  3C00                                 LDV,R3   0
          1 000283  7C08                                 LDV,R7   8
          1 000284  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      236    20642    2             VARIABLE_AUX$ -> QI$VARIABLE_STRING_AUX.TEXT;
      237    20643
      238    20644    2           CALL M$WRITE ( FPT@WRITE )

  20644   1 000287  BBC7 0071                            LAB,B3   FPT@WRITE,AUTO
          1 000289  B870 1543                            LDR,R3   5443,IMO
          1 00028B  0001                                 MCL
          1 00028C       0003                            DC       s:20647,PREL
          1 00028D  0F81 000A                            B        s:20650,PREL

      239    20645    2           WHENALTRETURN
      240    20646    3             DO;

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:58   
      241    20647    3               CALL QCE$ERROR_M$INTERNAL ( %E$UNEXPECTED_ALTRET );

  20647   1 00028F  BB80 0000 0005  02                   LAB,B3   +5
          1 000292  CBF0 0100                            LAB,B4   256,IMO
          1 000294  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_M$INTERNAL
          1 000297       0001                            DC       s:20650,PREL

      242    20648    3             END;

      243    20649
      244    20650    2           FPT@READ = QI_FPT_READ;

  20650   1 000298  AB80 0000 0000  xsym                 LAB,B2   QI_FPT_READ
          1 00029B  2C00                                 LDV,R2   0
          1 00029C  6C24                                 LDV,R6   36
          1 00029D  BBC7 005F                            LAB,B3   FPT@READ,AUTO
          1 00029F  3C00                                 LDV,R3   0
          1 0002A0  0008                                 MMM

      245    20651    2           VBASE ( FPT@READ.V_ ) = ADDR ( FPT@READ.V );

  20651   1 0002A1  EBC7 006E                            LAB,B6   FPT@READ+15,AUTO
          1 0002A3  EFC7 0060                            STB,B6   FPT@READ+1,AUTO

      246    20652    2           FPT@READ.V.DCB# = FPT@WRITE.V.DCB#;

  20652   1 0002A5  E2C7 0080                            LLH,R6   FPT@WRITE+15,AUTO
          1 0002A7  E7C7 006E                            STH,R6   FPT@READ+15,AUTO

      247    20653    2           FPT@READ.CG_ = VECTOR ( VLP@CG );

  20653   1 0002A9  DBC7 0083                            LAB,B5   VLP@CG,AUTO
          1 0002AB  DFC7 013D                            STB,B5   Q_LDBYTYPRSP+33,AUTO
          1 0002AD  5C17                                 LDV,R5   23
          1 0002AE  DF47 013C                            STR,R5   Q_LDBYTYPRSP+32,AUTO
          1 0002B0  ABC7 013C                            LAB,B2   Q_LDBYTYPRSP+32,AUTO
          1 0002B2  2C00                                 LDV,R2   0
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:59   
          1 0002B3  6C06                                 LDV,R6   6
          1 0002B4  BBC7 0068                            LAB,B3   FPT@READ+9,AUTO
          1 0002B6  3C00                                 LDV,R3   0
          1 0002B7  0008                                 MMM

      248    20654    2           VLP@CG = QI_VLP_CG;

  20654   1 0002B8  AB80 0000 0000  xsym                 LAB,B2   QI_VLP_CG
          1 0002BB  2C00                                 LDV,R2   0
          1 0002BC  6C18                                 LDV,R6   24
          1 0002BD  BBC7 0083                            LAB,B3   VLP@CG,AUTO
          1 0002BF  3C00                                 LDV,R3   0
          1 0002C0  0008                                 MMM

      249    20655    2           VLP@CG.MSGTYP# = '*FPRQRSP';

  20655   1 0002C1  AB80 0000 0000  00                   LAB,B2   0
          1 0002C4  2C0C                                 LDV,R2   12
          1 0002C5  6C08                                 LDV,R6   8
          1 0002C6  BBC7 0087                            LAB,B3   VLP@CG+4,AUTO
          1 0002C8  3C00                                 LDV,R3   0
          1 0002C9  0008                                 MMM

      250    20656    2           FPT@READ.BUF_ = VECTOR ( Q_LDBYTYPRSP );

  20656   1 0002CA  EBC7 011C                            LAB,B6   Q_LDBYTYPRSP,AUTO
          1 0002CC  EFC7 013D                            STB,B6   Q_LDBYTYPRSP+33,AUTO
          1 0002CE  6C39                                 LDV,R6   57
          1 0002CF  EF47 013C                            STR,R6   Q_LDBYTYPRSP+32,AUTO
          1 0002D1  ABC7 013C                            LAB,B2   Q_LDBYTYPRSP+32,AUTO
          1 0002D3  2C00                                 LDV,R2   0
          1 0002D4  6C06                                 LDV,R6   6
          1 0002D5  BBC7 0065                            LAB,B3   FPT@READ+6,AUTO
          1 0002D7  3C00                                 LDV,R3   0
          1 0002D8  0008                                 MMM

      251    20657
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:60   
      252    20658    2           CALL M$READ ( FPT@READ )

  20658   1 0002D9  BBC7 005F                            LAB,B3   FPT@READ,AUTO
          1 0002DB  B870 1542                            LDR,R3   5442,IMO
          1 0002DD  0001                                 MCL
          1 0002DE       0003                            DC       s:20661,PREL
          1 0002DF  0F81 000A                            B        s:20664,PREL

      253    20659    2           WHENALTRETURN
      254    20660    3             DO;

      255    20661    3               CALL QCE$ERROR_M$INTERNAL ( %E$UNEXPECTED_ALTRET );

  20661   1 0002E1  BB80 0000 0005  02                   LAB,B3   +5
          1 0002E4  CBF0 0100                            LAB,B4   256,IMO
          1 0002E6  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_M$INTERNAL
          1 0002E9       0001                            DC       s:20664,PREL

      256    20662    3             END;

      257    20663
      258    20664    2           FPT@CLOSE = QI_FPT_CLOSE;

  20664   1 0002EA  AB80 0000 0000  xsym                 LAB,B2   QI_FPT_CLOSE
          1 0002ED  2C00                                 LDV,R2   0
          1 0002EE  6C20                                 LDV,R6   32
          1 0002EF  BB87                                 LAB,B3   ,AUTO
          1 0002F0  3C08                                 LDV,R3   8
          1 0002F1  0008                                 MMM

      259    20665    2           VBASE ( FPT@CLOSE.V_ ) = ADDR ( FPT@CLOSE.V );

  20665   1 0002F2  EBC7 0013                            LAB,B6   FPT@CLOSE+15,AUTO
          1 0002F4  EFC7 0005                            STB,B6   FPT@CLOSE+1,AUTO

      260    20666    2           FPT@CLOSE.V.DCB# = FPT@READ.V.DCB#;

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:61   
  20666   1 0002F6  E2C7 006E                            LLH,R6   FPT@READ+15,AUTO
          1 0002F8  E7C7 0013                            STH,R6   FPT@CLOSE+15,AUTO

      261    20667
      262    20668    2           CALL M$CLOSE ( FPT@CLOSE )

  20668   1 0002FA  BBC7 0004                            LAB,B3   FPT@CLOSE,AUTO
          1 0002FC  B870 1541                            LDR,R3   5441,IMO
          1 0002FE  0001                                 MCL
          1 0002FF       0003                            DC       s:20671,PREL
          1 000300  0F81 000A                            B        s:20674,PREL

      263    20669    2           WHENALTRETURN
      264    20670    3             DO;

      265    20671    3               CALL QCE$ERROR_M$INTERNAL ( %E$UNEXPECTED_ALTRET );

  20671   1 000302  BB80 0000 0005  02                   LAB,B3   +5
          1 000305  CBF0 0100                            LAB,B4   256,IMO
          1 000307  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_M$INTERNAL
          1 00030A       0001                            DC       s:20674,PREL

      266    20672    3             END;

      267    20673
      268    20674    2           IF Q_LDBYTYPRSP.ERR ~= '0'B

  20674   1 00030B  EB80 0000 0000  02                   LAB,B6   0
          1 00030E  5C01                                 LDV,R5   1
          1 00030F  0022                                 ACM      ;
          1 000310       4407 011C                                ALPHANUM(Q_LDBYTYPRSP,AUTO,,4,FILL),;
          1 000312       4006 0007                                ALPHANUM(7,B6,,R5,FILL)
          1 000314  5301 0083                            CBNE     s:20724,PREL

      269    20675    2           THEN
      270    20676    2             GOTO BAD_WHATEVER_ON_LOAD_BY_TYPE;
      271    20677
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:62   
      272    20678    2         END LOAD_BY_TYPE;

      273    20679
      274    20680    1       IF INSTR$ -> QI$OP_LOAD.IS_ARGUMENT_PASSED

  20680   1 000316  ECC7 0092                            LDB,B6   INSTR$,AUTO
          1 000318  89C6 0001                            CMZ      1,B6
          1 00031A  0881 0059                            BAGE     s:20709,PREL

      275    20681    1       THEN
      276    20682    1   PREPARE_ARGUMENT:
      277    20683    2         DO;

  20683   1                              PREPARE_ARGUMENTnull
      278    20684    2           QI_1.SOURCE$ = ADDR ( INSTR$ -> QI$OP_LOAD.ARGUMENT@P );

  20684   1 00031C  DBC6 0003            PREPARE_ARGUMENTLAB,B5   3,B6
          1 00031E  DF80 0000 0018  xsym                 STB,B5   QI_1+24

      279    20685    2           CALL QCS$SETUP_SOURCE;

  20685   1 000321  CBF0 0000                            LAB,B4   0,IMO
          1 000323  E380 0000 0000  xent                 LNJ,B6   QCS$SETUP_SOURCE
          1 000326       0001                            DC       s:20687,PREL

      280    20686
      281    20687    2           FPT@GDS = QI_FPT_GDS_LOAD;

  20687   1 000327  AB80 0000 0000  xsym                 LAB,B2   QI_FPT_GDS_LOAD
          1 00032A  2C00                                 LDV,R2   0
          1 00032B  6C10                                 LDV,R6   16
          1 00032C  BB87                                 LAB,B3   ,AUTO
          1 00032D  3C28                                 LDV,R3   40
          1 00032E  0008                                 MMM

      282    20688    2           VBASE ( FPT@GDS.V_ ) = ADDR ( FPT@GDS.V );

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:63   
  20688   1 00032F  EBC7 001A                            LAB,B6   FPT@GDS+6,AUTO
          1 000331  EFC7 0015                            STB,B6   FPT@GDS+1,AUTO

      283    20689
      284    20690    2           FPT@GDS.V.PAGES = ( ( QI_1.OP.LEN.S / 2 ) / 256 ) + 1;

  20690   1 000333  E800 0000 0026  xsym                 LDR,R6   QI_1+38
          1 000336  6041                                 SOR,R6   1
          1 000337  6048                                 SOR,R6   8
          1 000338  6E01                                 ADV,R6   1
          1 000339  EF47 001A                            STR,R6   FPT@GDS+6,AUTO

      285    20691    2           QI_VLP_SEGMENT_LOAD.BASE = %GM_USRDS4_BASE;

  20691   1 00033B  8CF0 000C 0000                       LDI      786432,IMO
          1 00033E  8D00 0000 0000  xsym                 SDI      QI_VLP_SEGMENT_LOAD

      286    20692
      287    20693    2           CALL M$GDS ( FPT@GDS )

  20693   1 000341  BBC7 0014                            LAB,B3   FPT@GDS,AUTO
          1 000343  B870 0902                            LDR,R3   2306,IMO
          1 000345  0001                                 MCL
          1 000346       0003                            DC       s:20696,PREL
          1 000347  0F81 000A                            B        s:20699,PREL

      288    20694    2           WHENALTRETURN
      289    20695    3             DO;

      290    20696    3               CALL QCE$ERROR ( %E$INSUFFICIENT_MEMORY );

  20696   1 000349  BB80 0000 0009  02                   LAB,B3   +9
          1 00034C  CBF0 0100                            LAB,B4   256,IMO
          1 00034E  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR
          1 000351       0001                            DC       s:20699,PREL

      291    20697    3             END;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:64   

      292    20698
      293    20699    2           QI_1.OP.DATA.T$ = QI_VLP_SEGMENT_LOAD.BASE$;

  20699   1 000352  EC80 0000 0000  xsym                 LDB,B6   QI_VLP_SEGMENT_LOAD
          1 000355  EF80 0000 0022  xsym                 STB,B6   QI_1+34

      294    20700    2           QI_1.OP.DATA.T$ -> QI$UWORD_A (0) = QI_1.OP.LEN.S;

  20700   1 000358  E800 0000 0026  xsym                 LDR,R6   QI_1+38
          1 00035B  EF06                                 STR,R6   ,B6

      295    20701
      296    20702    2           QI_1.OP.DATA.T$ = ADDR ( QI_1.OP.DATA.T$ -> QI$UWORD_A (1) );

  20702   1 00035C  EC80 0000 0022  xsym                 LDB,B6   QI_1+34
          1 00035F  DBC6 0001                            LAB,B5   1,B6
          1 000361  DF80 0000 0022  xsym                 STB,B5   QI_1+34

      297    20703    2           QI_1.OP.LEN.T = QI_1.OP.LEN.S;

  20703   1 000364  E800 0000 0026  xsym                 LDR,R6   QI_1+38
          1 000367  EF00 0000 0027  xsym                 STR,R6   QI_1+39

      298    20704    2           QI_1.OP.DATA.T$ -> QI$VARIABLE_STRING_TARGET.TEXT =

  20704   1 00036A  AC80 0000 0020  xsym                 LDB,B2   QI_1+32
          1 00036D  2C00                                 LDV,R2   0
          1 00036E  BB85                                 LAB,B3   ,B5
          1 00036F  3C00                                 LDV,R3   0
          1 000370  F856                                 LDR,R7   R6
          1 000371  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      299    20705    2             QI_1.OP.DATA.S$ -> QI$VARIABLE_STRING_SOURCE.TEXT;
      300    20706
      301    20707    2         END PREPARE_ARGUMENT;

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:65   
      302    20708
      303    20709    1       CALL M$LDTRC ( FPT@LDTRC )

  20709   1 000374  BBC7 001C                            LAB,B3   FPT@LDTRC,AUTO
          1 000376  B870 1483                            LDR,R3   5251,IMO
          1 000378  0001                                 MCL
          1 000379       0041                            DC       s:20736,PREL

      304    20710    1         ALTRET ( LDTRC_ALTRET );
      305    20711
      306    20712    1   BAD_FID_ON_LOAD_BY_NAME:
      307    20713    1       IF QI_1.INSTR$ -> QI$OP_SEQUENCE.CODE = %QI#OP_JAZ

  20713   1 00037A  EC80 0000 0006  xsym BAD_FID_ON_LOAD*LDB,B6   QI_1+6
          1 00037D  E806                                 LDR,R6   ,B6
          1 00037E  6D5B                                 CMV,R6   91
          1 00037F  0981 0008                            BNE      s:20720,PREL

      308    20714    1       THEN
      309    20715    2         DO;

      310    20716    2           QI_1.A_REG = 1;

  20716   1 000381  5C01                                 LDV,R5   1
          1 000382  DF00 0000 0054  xsym                 STR,R5   QI_1+84

      311    20717    2           RETURN;

  20717   1 000385  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      312    20718    2         END;
      313    20719
      314    20720    1       CALL QCE$ERROR ( %E$LOAD_ILLEGAL_FID,

  20720   1 000388  DBF0 001A                            LAB,B5   26,IMO
          1 00038A  CBC7 0098                            LAB,B4   QI@FID_OR_TYPE,AUTO
          1 00038C  CFC7 013E                            STB,B4   Q_LDBYTYPRSP+34,AUTO
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:66   
          1 00038E  DFC7 013C                            STB,B5   Q_LDBYTYPRSP+32,AUTO
          1 000390  BBC7 013C                            LAB,B3   Q_LDBYTYPRSP+32,AUTO
          1 000392  CBF0 0200                            LAB,B4   512,IMO
          1 000394  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR
          1 000397       0001                            DC       s:20724,PREL

      315    20721    1         QI@FID_OR_TYPE );
      316    20722
      317    20723    1   BAD_WHATEVER_ON_LOAD_BY_TYPE:
      318    20724    1       IF QI_1.INSTR$ -> QI$OP_SEQUENCE.CODE = %QI#OP_JAZ

  20724   1 000398  EC80 0000 0006  xsym BAD_WHATEVER_ON*LDB,B6   QI_1+6
          1 00039B  E806                                 LDR,R6   ,B6
          1 00039C  6D5B                                 CMV,R6   91
          1 00039D  0981 0008                            BNE      s:20731,PREL

      319    20725    1       THEN
      320    20726    2         DO;

      321    20727    2           QI_1.A_REG = 1;

  20727   1 00039F  5C01                                 LDV,R5   1
          1 0003A0  DF00 0000 0054  xsym                 STR,R5   QI_1+84

      322    20728    2           RETURN;

  20728   1 0003A3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      323    20729    2         END;
      324    20730
      325    20731    1       CALL QCE$ERROR ( %E$LOAD_ERROR,

  20731   1 0003A6  DBF0 001B                            LAB,B5   27,IMO
          1 0003A8  CBC7 011C                            LAB,B4   Q_LDBYTYPRSP,AUTO
          1 0003AA  CFC7 0140                            STB,B4   Q_LDBYTYPRSP+36,AUTO
          1 0003AC  BBC7 0098                            LAB,B3   QI@FID_OR_TYPE,AUTO
          1 0003AE  BFC7 013E                            STB,B3   Q_LDBYTYPRSP+34,AUTO
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:67   
          1 0003B0  DFC7 013C                            STB,B5   Q_LDBYTYPRSP+32,AUTO
          1 0003B2  BBC7 013C                            LAB,B3   Q_LDBYTYPRSP+32,AUTO
          1 0003B4  CBF0 0300                            LAB,B4   768,IMO
          1 0003B6  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR
          1 0003B9       0001                            DC       s:20736,PREL

      326    20732    1         QI@FID_OR_TYPE,
      327    20733    1         Q_LDBYTYPRSP.ERR );
      328    20734
      329    20735    1   LDTRC_ALTRET:
      330    20736    1       IF QI_1.INSTR$ -> QI$OP_SEQUENCE.CODE = %QI#OP_JAZ

  20736   1 0003BA  EC80 0000 0006  xsym LDTRC_ALTRET    LDB,B6   QI_1+6
          1 0003BD  E806                                 LDR,R6   ,B6
          1 0003BE  6D5B                                 CMV,R6   91
          1 0003BF  0981 0008                            BNE      s:20743,PREL

      331    20737    1       THEN
      332    20738    2         DO;

      333    20739    2           QI_1.A_REG = 1;

  20739   1 0003C1  5C01                                 LDV,R5   1
          1 0003C2  DF00 0000 0054  xsym                 STR,R5   QI_1+84

      334    20740    2           RETURN;

  20740   1 0003C5  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      335    20741    2         END;
      336    20742
      337    20743    1       CALL QCE$ERROR ( %E$LOAD_ERROR,

  20743   1 0003C8  DC80 0000 0000  xsym                 LDB,B5   G$TCB$
          1 0003CB  CC85                                 LDB,B4   ,B5
          1 0003CC  BBF0 001B                            LAB,B3   27,IMO
          1 0003CE  ABC4 002B                            LAB,B2   43,B4
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:68   
          1 0003D0  AFC7 0140                            STB,B2   Q_LDBYTYPRSP+36,AUTO
          1 0003D2  CBC7 0098                            LAB,B4   QI@FID_OR_TYPE,AUTO
          1 0003D4  CFC7 013E                            STB,B4   Q_LDBYTYPRSP+34,AUTO
          1 0003D6  BFC7 013C                            STB,B3   Q_LDBYTYPRSP+32,AUTO
          1 0003D8  BBC7 013C                            LAB,B3   Q_LDBYTYPRSP+32,AUTO
          1 0003DA  CBF0 0300                            LAB,B4   768,IMO
          1 0003DC  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR
          1 0003DF       0001                            DC       s:20743+24,PREL
          1 0003E0  0F81 0075                            B        s:20768,PREL

      338    20744    1         QI@FID_OR_TYPE,
      339    20745    1         G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR );
      340    20746
      341    20747        %EJECT;
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:69   
      342    20748    1   UNSTRING_NAME_ACCT_PASS: PROC;

  20748   1 0003E2  EFC7 013A            UNSTRING_NAME_A*STB,B6   Q_LDBYTYPRSP+30,AUTO

      343    20749
      344    20750    2       CALL INDEX ( WHATEVER_INDEX,

  20750   1 0003E4  8CC7 008F                            LDI      FID$,AUTO
          1 0003E6  B856                                 LDR,R3   R6
          1 0003E7  E570 7FFF                            AND,R6   32767,IMO
          1 0003E9  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 0003EB  DCC7 013C                            LDB,B5   Q_LDBYTYPRSP+32,AUTO
          1 0003ED  304F                                 SOR,R3   15
          1 0003EE  D800 0000 0028  xsym                 LDR,R5   QI_1+40
          1 0003F1  D247 0091                            SUB,R5   FID_INDEX,AUTO
          1 0003F3  BA47 0091                            ADD,R3   FID_INDEX,AUTO
          1 0003F5  C800 0000 0028  xsym                 LDR,R4   QI_1+40
          1 0003F8  CF47 0097                            STR,R4   WHATEVER_INDEX,AUTO
          1 0003FA  A800 0000 000B  02                   LDR,R2   +11
          1 0003FD  EBA0 0000 0000  01                   LAB,B6   s:15,R2
          1 000400  BF47 013E                            STR,R3   Q_LDBYTYPRSP+34,AUTO
          1 000402  DF47 013F                            STR,R5   Q_LDBYTYPRSP+35,AUTO
          1 000404  DFC7 0140                            STB,B5   Q_LDBYTYPRSP+36,AUTO
          1 000406  AB80 0000 0000  02                   LAB,B2   0
          1 000409  2C18                                 LDV,R2   24
          1 00040A  6C01                                 LDV,R6   1
          1 00040B  BB85                                 LAB,B3   ,B5
          1 00040C  F855                                 LDR,R7   R5
          1 00040D  9BC7 013C                            LAB,B1   Q_LDBYTYPRSP+32,AUTO
          1 00040F  1C0C                                 LDV,R1   12
          1 000410  5C0C                                 LDV,R5   12
          1 000411  D380 0000 0000  xent                 LNJ,B5   X6C_SRCH
          1 000414  EA47 0091                            ADD,R6   FID_INDEX,AUTO
          1 000416  EF47 0097                            STR,R6   WHATEVER_INDEX,AUTO
          1 000418  0F81 0039                            B        s:20764,PREL

      345    20751    2         '.',
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:70   
      346    20752    2         FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      347    20753    2         FID_INDEX )
      348    20754    2       WHENALTRETURN
      349    20755    3         DO;

      350    20756    3           WERE_ALL_DONE = %YES;

  20756   1 00041A  8947 0096                            LBT,'8000'X       WERE_ALL_DONE,AUTO
  20756   1 00041C       8000

      351    20757
      352    20758    3           CALL INDEX ( WHATEVER_INDEX,

  20758   1 00041D  8CC7 008F                            LDI      FID$,AUTO
          1 00041F  B856                                 LDR,R3   R6
          1 000420  E570 7FFF                            AND,R6   32767,IMO
          1 000422  8D47 013C                            SDI      Q_LDBYTYPRSP+32,AUTO
          1 000424  ECC7 013C                            LDB,B6   Q_LDBYTYPRSP+32,AUTO
          1 000426  304F                                 SOR,R3   15
          1 000427  D800 0000 0028  xsym                 LDR,R5   QI_1+40
          1 00042A  D247 0091                            SUB,R5   FID_INDEX,AUTO
          1 00042C  BA47 0091                            ADD,R3   FID_INDEX,AUTO
          1 00042E  C800 0000 0028  xsym                 LDR,R4   QI_1+40
          1 000431  CF47 0097                            STR,R4   WHATEVER_INDEX,AUTO
          1 000433  A800 0000 000D  02                   LDR,R2   +13
          1 000436  EFC7 013E                            STB,B6   Q_LDBYTYPRSP+34,AUTO
          1 000438  EBA0 0000 0000  01                   LAB,B6   s:15,R2
          1 00043B  BF47 0140                            STR,R3   Q_LDBYTYPRSP+36,AUTO
          1 00043D  DF47 0141                            STR,R5   Q_LDBYTYPRSP+37,AUTO
          1 00043F  AB80 0000 0000  02                   LAB,B2   0
          1 000442  2C1C                                 LDV,R2   28
          1 000443  6C01                                 LDV,R6   1
          1 000444  BCC7 013E                            LDB,B3   Q_LDBYTYPRSP+34,AUTO
          1 000446  F855                                 LDR,R7   R5
          1 000447  9BC7 013C                            LAB,B1   Q_LDBYTYPRSP+32,AUTO
          1 000449  1C0C                                 LDV,R1   12
          1 00044A  5C0C                                 LDV,R5   12
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:71   
          1 00044B  D380 0000 0000  xent                 LNJ,B5   X6C_SRCH
          1 00044E  EA47 0091                            ADD,R6   FID_INDEX,AUTO
          1 000450  EF47 0097                            STR,R6   WHATEVER_INDEX,AUTO

      353    20759    3             ' ',
      354    20760    3             FID$ -> QI$VARIABLE_STRING_AUX.TEXT,
      355    20761    3             FID_INDEX );
      356    20762    3         END;

      357    20763
      358    20764    2       RETURN;

  20764   1 000452  ECC7 013A                            LDB,B6   Q_LDBYTYPRSP+30,AUTO
          1 000454  C3C6 0001                            LNJ,B4   1,B6

      359    20765
      360    20766    2   END UNSTRING_NAME_ACCT_PASS;
      361    20767
      362    20768    1   END QBL$LOAD;

  20768   1 000456  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:72   
--  Include file information  --

   Q_MACRO_C.:E05TOU  is referenced.
   QI_MACROS_M.:E05TOU  is referenced.
   QI_PERR_C.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QBL$LOAD.
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:73   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    8F-0-0/w PTR         r     1 FID$                      91-0-0/w UBIN(16)    r     1 FID_INDEX
     4-0-0/w STRC(256)   r     1 FPT@CLOSE                 14-0-0/w STRC(128)   r     1 FPT@GDS
    1C-0-0/w STRC(320)   r     1 FPT@LDTRC                 30-0-0/w STRC(752)   r     1 FPT@OPEN
    5F-0-0/w STRC(288)   r     1 FPT@READ                  71-0-0/w STRC(288)   r     1 FPT@WRITE
    92-0-0/w PTR         r     1 INSTR$                    98-0-0/w STRC(2048)  r     1 QI@FID_OR_TYPE
    98-0-0/w UBIN(8)     r     1 QI@FID_OR_TYPE_BA(0:255)
    98-0-0/w CHAR        r     1 QI@FID_OR_TYPE_CA(0:255)
   118-0-0/c STRC(64)    r     1 Q_LDBYTYP                11C-0-0/c STRC(464)   r     1 Q_LDBYTYPRSP
    94-0-0/w PTR         r     1 VARIABLE_AUX$             83-0-0/w STRC(192)   r     1 VLP@CG
    96-0-0/w BIT         r     1 WERE_ALL_DONE             97-0-0/w UBIN(16)    r     1 WHATEVER_INDEX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$TCB$                     0-0-0/d STRC(2576)  r     1 QI_1
     0-0-0/w UBIN(8)     r     1 QI_BLANK                   0-0-0/w STRC(256)   r     1 QI_FPT_CLOSE
     0-0-0/w STRC(128)   r     1 QI_FPT_GDS_LOAD            0-0-0/w STRC(320)   r     1 QI_FPT_LDTRC
     0-0-0/w STRC(752)   r     1 QI_FPT_OPEN                0-0-0/w STRC(288)   r     1 QI_FPT_READ
     0-0-0/w STRC(288)   r     1 QI_FPT_WRITE               0-0-0/d STRC(384)   r     1 QI_SRCH_VRFY
     0-0-0/w STRC(192)   r     1 QI_VLP_CG                  0-0-0/w STRC(48)    r     1 QI_VLP_SEGMENT_LOAD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(736)   r     1 G$EXCFR                    0-0-0/w STRC(96)    r     1 G$TCB
     0-0-0/c STRC(2464)  r     1 Q$FPABT
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:74   
     0-0-0/w STRC(336)   r     1 QI$INITIALIZATION_BLOCK
     0-0-0/w STRC(80)    r     1 QI$OP_LOAD                 0-0-0/w STRC(32)    r     1 QI$OP_SEQUENCE
     0-0-0/w UBIN(16)    r     1 QI$UWORD_A(0:0)
     0-0-0/c ASTR(8)     r     1 QI$VARIABLE_IDENTIFIER
     0-0-0/c ASTR(0)     r     1 QI$VARIABLE_STRING_AUX
     0-0-0/c ASTR(0)     r     1 QI$VARIABLE_STRING_SOURCE
     0-0-0/c ASTR(0)     r     1 QI$VARIABLE_STRING_TARGET


   Procedure QBL$LOAD requires 1113 words for executable code.
   Procedure QBL$LOAD requires 328 words of local(AUTO) storage.

    No errors detected in file QBL$LOAD.:E05TSI    .
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:75   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:76   
          MINI XREF LISTING

BAD_FID_ON_LOAD_BY_NAME
     20713**LABEL   20548--GOTO    20566--GOTO    20609--GOTO
BAD_WHATEVER_ON_LOAD_BY_TYPE
     20724**LABEL   20676--GOTO
FID$
     19901**DCL     20551<<ASSIGN  20555>>IF      20560>>CALLBLT 20569>>ASSIGN  20579>>ASSIGN  20591>>ASSIGN
     20603>>ASSIGN  20750>>CALLBLT 20758>>CALLBLT
FID_INDEX
     19902**DCL     20553<<ASSIGN  20555>>IF      20560>>CALLBLT 20569>>ASSIGN  20569>>ASSIGN  20573<<ASSIGN
     20578>>ASSIGN  20579>>ASSIGN  20579>>ASSIGN  20587<<ASSIGN  20591>>ASSIGN  20591>>ASSIGN  20599<<ASSIGN
     20603>>ASSIGN  20603>>ASSIGN  20750>>CALLBLT 20758>>CALLBLT
FPT@CLOSE
       456**DCL     20664<<ASSIGN  20668<>CALL
FPT@CLOSE.V
       461**DCL     20665--ASSIGN
FPT@CLOSE.V.DCB#
       461**DCL     20666<<ASSIGN
FPT@CLOSE.V_
       458**DCL     20665<<ASSIGN
FPT@GDS
       477**DCL     20687<<ASSIGN  20693<>CALL
FPT@GDS.V
       480**DCL     20688--ASSIGN
FPT@GDS.V.PAGES
       484**DCL     20690<<ASSIGN
FPT@GDS.V_
       480**DCL     20688<<ASSIGN
FPT@LDTRC
       502**DCL     20518<<ASSIGN  20709<>CALL
FPT@LDTRC.ACCT_
       504**DCL     20521<<ASSIGN
FPT@LDTRC.NAME_
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:77   
       504**DCL     20520<<ASSIGN
FPT@LDTRC.PASS_
       504**DCL     20522<<ASSIGN
FPT@LDTRC.PSN_
       504**DCL     20519<<ASSIGN
FPT@OPEN
       527**DCL     20618<<ASSIGN  20625<>CALL
FPT@OPEN.V
       535**DCL     20619--ASSIGN
FPT@OPEN.V.DCB#
       535**DCL     20620<<ASSIGN  20633>>ASSIGN
FPT@OPEN.V.KEYTYPE
       537**DCL     20623<<ASSIGN
FPT@OPEN.V.ORG
       537**DCL     20621<<ASSIGN
FPT@OPEN.V.RES
       538**DCL     20622<<ASSIGN
FPT@OPEN.V_
       529**DCL     20619<<ASSIGN
FPT@READ
       556**DCL     20650<<ASSIGN  20658<>CALL
FPT@READ.BUF_
       558**DCL     20656<<ASSIGN
FPT@READ.CG_
       558**DCL     20653<<ASSIGN
FPT@READ.V
       561**DCL     20651--ASSIGN
FPT@READ.V.DCB#
       561**DCL     20652<<ASSIGN  20666>>ASSIGN
FPT@READ.V_
       558**DCL     20651<<ASSIGN
FPT@WRITE
       583**DCL     20631<<ASSIGN  20644<>CALL
FPT@WRITE.BUF_
       585**DCL     20637<<ASSIGN
FPT@WRITE.CG_
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:78   
       585**DCL     20634<<ASSIGN
FPT@WRITE.V
       588**DCL     20632--ASSIGN
FPT@WRITE.V.DCB#
       588**DCL     20633<<ASSIGN  20652>>ASSIGN
FPT@WRITE.V_
       585**DCL     20632<<ASSIGN
G$EXCFR.P$$
       684**DCL       684--REDEF     684--REDEF
G$EXCFR.PREVSZ
       634**DCL       634--REDEF
G$EXCFR.TRLR.ERR
       964**DCL     20743<>CALL
G$EXCFR.TRLR.EVID
       921**DCL       939--REDEF     947--REDEF     947--REDEF
G$EXCFR.TRLR.SUBC
       898**DCL       898--REDEF     916--REDEF     920--REDEF     920--REDEF
G$TCB.ALT$
      1015**DCL     20743>>CALL
G$TCB$
      1018**DCL     20743>>CALL
INSTR$
     19903**DCL     20505<<ASSIGN  20506>>ASSIGN  20513>>ASSIGN  20534>>IF      20680>>IF      20684>>ASSIGN
LDTRC_ALTRET
     20736**LABEL   20709--CALLALT
M$CLOSE
       423**DCL-ENT 20668--CALL
M$GDS
       418**DCL-ENT 20693--CALL
M$LDTRC
       402**DCL-ENT 20709--CALL
M$OPEN
       423**DCL-ENT 20625--CALL
M$READ
       423**DCL-ENT 20658--CALL
M$WRITE
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:79   
       424**DCL-ENT 20644--CALL
Q$FPABT.MSGS.U1.NAME#
     20494**DCL     20529--ASSIGN
QCC$VRFY
     19910**DCL-ENT 20545--CALL
QCE$ERROR
     19908**DCL-ENT 20696--CALL    20720--CALL    20731--CALL    20743--CALL
QCE$ERROR_M$INTERNAL
     19909**DCL-ENT 20628--CALL    20647--CALL    20661--CALL    20671--CALL
QCS$SETUP_AUX
     19911**DCL-ENT 20514--CALL
QCS$SETUP_SOURCE
     19912**DCL-ENT 20685--CALL
QCU$UPDATE_SCREEN
     19913**DCL-ENT 20511--CALL
QGB_PARAM.DVE.DVBYTE.VFC
     12339**DCL     12340--REDEF
QGB_PARAM.DVE.EOMCHAR
     12351**DCL     12352--REDEF
QGB_PARAM.MSG$
     12333**DCL     12334--REDEF
QGB_PARAM.UHDR$
     12358**DCL     12359--REDEF
QI$ACTIVATION_STATUS
     10097**DCL     10103--REDEF
QI$CIP
      8938**DCL      9008--REDEF
QI$CIP.CA
      8943**DCL      8947--REDEF    8950--REDEF    8953--REDEF
QI$COBOL_DAD.PSEUDO_CIP
      9182**DCL      9207--REDEF
QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC
      9184**DCL      9189--REDEF
QI$COBOL_DAD.PSEUDO_CIP.NUMERIC.CB
      9190**DCL      9193--REDEF    9196--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:80   
      9218**DCL      9234--REDEF    9242--REDEF    9250--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
      9219**DCL      9229--REDEF    9232--REDEF
QI$COBOL_DAD.WORD0
      9146**DCL      9147--REDEF    9161--REDEF
QI$COBOL_DAD_P_BITS.P
      9286**DCL      9292--REDEF
QI$CONDITION_CONTROL_BLOCK.LIST_A@P
      8772**DCL      8773--REDEF
QI$CONDITION_CONTROL_BLOCK.WORD0_FLAGS
      8768**DCL      8771--REDEF
QI$CONDITION_LEGAL_BLOCK.ARRAY@P
      8805**DCL      8806--REDEF    8807--REDEF
QI$DAD.PSEUDO_CIP
      9085**DCL      9110--REDEF
QI$DAD.PSEUDO_CIP.ALPHANUMERIC
      9087**DCL      9092--REDEF
QI$DAD.PSEUDO_CIP.NUMERIC.CB
      9093**DCL      9096--REDEF    9099--REDEF
QI$DAD.WORD0
      9054**DCL      9055--REDEF
QI$ERROR_MESSAGE_LINE
     12446**DCL     12448--REDEF
QI$ERROR_STATUS
     12443**DCL     12445--REDEF
QI$FIELD_DAD.ELEMENTARY_ITEM.P
      9500**DCL      9507--REDEF
QI$FIELD_DAD.ONE_DIMENSIONAL_ITEM.P
      9520**DCL      9527--REDEF
QI$FIELD_DAD.PSEUDO_CIP
      9427**DCL      9452--REDEF
QI$FIELD_DAD.PSEUDO_CIP.ALPHANUMERIC
      9429**DCL      9434--REDEF
QI$FIELD_DAD.PSEUDO_CIP.NUMERIC.CB
      9435**DCL      9438--REDEF    9441--REDEF
QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:81   
      9540**DCL      9547--REDEF
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS
      9483**DCL      9499--REDEF    9517--REDEF    9535--REDEF
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
      9484**DCL      9494--REDEF    9497--REDEF
QI$FIELD_DAD.WORD0
      9379**DCL      9380--REDEF
QI$FIELD_DAD.WORD0_FLAGS.IO_FLAGS
      9383**DCL      9388--REDEF
QI$FIELD_DAD_P.P
      9581**DCL      9588--REDEF
QI$FIELD_STATUS.INDICATORS
     10247**DCL     10279--REDEF
QI$FIELD_STATUS.INDICATORS.ENABLED_FLAGS
     10251**DCL     10256--REDEF
QI$FIELD_STATUS.INDICATORS.OPEN_FLAGS
     10263**DCL     10270--REDEF
QI$FIELD_STATUS.INDICATORS.STATE_FLAGS
     10257**DCL     10262--REDEF
QI$FILE.WORD0
      9703**DCL      9704--REDEF
QI$FILE_STATUS.INDICATORS
     10540**DCL     10572--REDEF
QI$FILE_STATUS.INDICATORS.ENABLED_FLAGS
     10544**DCL     10549--REDEF
QI$FILE_STATUS.INDICATORS.OPEN_FLAGS
     10556**DCL     10563--REDEF
QI$FILE_STATUS.INDICATORS.STATE_FLAGS
     10550**DCL     10555--REDEF
QI$FORM_FILE.USE_PROCEDURE
      9803**DCL      9810--REDEF
QI$FORM_FILE.WORD0
      9757**DCL      9758--REDEF
QI$FORM_STATUS.INDICATORS
     10661**DCL     10693--REDEF
QI$FORM_STATUS.INDICATORS.ENABLED_FLAGS
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:82   
     10665**DCL     10670--REDEF
QI$FORM_STATUS.INDICATORS.OPEN_FLAGS
     10677**DCL     10684--REDEF
QI$FORM_STATUS.INDICATORS.STATE_FLAGS
     10671**DCL     10676--REDEF
QI$FRAME.WORD0
      9918**DCL      9919--REDEF
QI$FRAME_STATUS.INDICATORS
     10890**DCL     10922--REDEF
QI$FRAME_STATUS.INDICATORS.ENABLED_FLAGS
     10894**DCL     10899--REDEF
QI$FRAME_STATUS.INDICATORS.OPEN_FLAGS
     10906**DCL     10913--REDEF
QI$FRAME_STATUS.INDICATORS.STATE_FLAGS
     10900**DCL     10905--REDEF
QI$GZ_FIELD.DESCRIPTION.IO_FLAGS
     17772**DCL     17777--REDEF
QI$IDENTIFIER
     12449**DCL     12451--REDEF
QI$INDICATORS
     10161**DCL     10191--REDEF
QI$INDICATORS.ENABLED_FLAGS
     10167**DCL     10172--REDEF
QI$INDICATORS.OPEN_FLAGS
     10179**DCL     10186--REDEF
QI$INDICATORS.STATE_FLAGS
     10173**DCL     10178--REDEF
QI$INITIALIZATION_BLOCK.VANILLA_HOST_DCB#
      8736**DCL     20620>>ASSIGN
QI$MAJOR_NODE.WORD0
      9617**DCL      9618--REDEF
QI$MAJOR_STATUS.INDICATORS
     10340**DCL     10372--REDEF
QI$MAJOR_STATUS.INDICATORS.ENABLED_FLAGS
     10344**DCL     10349--REDEF
QI$MAJOR_STATUS.INDICATORS.OPEN_FLAGS
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:83   
     10356**DCL     10363--REDEF
QI$MAJOR_STATUS.INDICATORS.STATE_FLAGS
     10350**DCL     10355--REDEF
QI$MESSAGE_TYPE
     12440**DCL     12442--REDEF
QI$MINOR_NODE.WORD0
      9660**DCL      9661--REDEF
QI$MINOR_STATUS.INDICATORS
     10433**DCL     10465--REDEF
QI$MINOR_STATUS.INDICATORS.ENABLED_FLAGS
     10437**DCL     10442--REDEF
QI$MINOR_STATUS.INDICATORS.OPEN_FLAGS
     10449**DCL     10456--REDEF
QI$MINOR_STATUS.INDICATORS.STATE_FLAGS
     10443**DCL     10448--REDEF
QI$OP_ACCEPT.DATANAME@P
      6848**DCL      6849--REDEF
QI$OP_CALL.EPTR$
      7020**DCL      7021--REDEF
QI$OP_CLEAR.IO_FLAGS
      7053**DCL      7056--REDEF
QI$OP_DISPLAY.FIELD_A@P
      7320**DCL      7321--REDEF
QI$OP_ENABLE.IO_FLAGS
      7407**DCL      7410--REDEF
QI$OP_IFCLS.ATTRIBUTE.TYPE
      7500**DCL      7505--REDEF
QI$OP_INSPECT.TALLYING_FOR_ITEM@P
      7734**DCL      7735--REDEF
QI$OP_INSPECT.TALLYING_INITIAL_ITEM@P
      7736**DCL      7737--REDEF
QI$OP_INSPECT.TALLYING_ITEM@P
      7732**DCL      7733--REDEF
QI$OP_LOAD.ARGUMENT@P
      7831**DCL     20684--ASSIGN
QI$OP_LOAD.IS_ARGUMENT_PASSED
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:84   
      7826**DCL     20680>>IF
QI$OP_LOAD.IS_BY_NAME
      7828**DCL     20534>>IF
QI$OP_LOAD.NAME_OR_TYPE@P
      7830**DCL     20513--ASSIGN
QI$OP_LOAD.NEXT_CODE@P
      7832**DCL     20506--ASSIGN
QI$OP_OPEN.IO_FLAGS
      8294**DCL      8297--REDEF
QI$OP_PERFM.BINARY_ITERATION_COUNT@P
      8332**DCL      8333--REDEF
QI$OP_SEQUENCE.CODE
      6788**DCL     20713>>IF      20724>>IF      20736>>IF
QI$PSEUDO_CIP
      8833**DCL      8857--REDEF
QI$PSEUDO_CIP.ALPHANUMERIC
      8837**DCL      8842--REDEF
QI$PSEUDO_CIP.NUMERIC.CB
      8843**DCL      8846--REDEF    8849--REDEF
QI$TERMINAL_ATTRIBUTES
     10054**DCL     10067--REDEF
QI$TRAN_FILE.WORD0
      9839**DCL      9840--REDEF
QI$TRAN_STATUS.INDICATORS
     10774**DCL     10806--REDEF
QI$TRAN_STATUS.INDICATORS.ENABLED_FLAGS
     10778**DCL     10783--REDEF
QI$TRAN_STATUS.INDICATORS.OPEN_FLAGS
     10790**DCL     10797--REDEF
QI$TRAN_STATUS.INDICATORS.STATE_FLAGS
     10784**DCL     10789--REDEF
QI$UWORD_A
     12436**DCL     20700<<ASSIGN  20702--ASSIGN
QI$VARIABLE_IDENTIFIER.LENGTH
     12453**DCL     12454--IMP-SIZ
QI$VARIABLE_STRING_AUX.TEXT
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:85   
     12464**DCL     20531<<ASSIGN  20531>>ASSIGN  20555>>IF      20560>>CALLBLT 20569>>ASSIGN  20579>>ASSIGN
     20591>>ASSIGN  20603>>ASSIGN  20641>>ASSIGN  20750>>CALLBLT 20758>>CALLBLT
QI$VARIABLE_STRING_SOURCE.TEXT
     12460**DCL     20704>>ASSIGN
QI$VARIABLE_STRING_TARGET.TEXT
     12462**DCL     20704<<ASSIGN
QI@FID_OR_TYPE
     19933**DCL     19935--REDEF   19936--REDEF   20720<>CALL    20731<>CALL    20743<>CALL
QI@FID_OR_TYPE_BA
     19936**DCL     20529<<ASSIGN
QI@FID_OR_TYPE_CA
     19935**DCL     20531--ASSIGN
QI_1.A_REG
     11727**DCL     20516<<ASSIGN  20716<<ASSIGN  20727<<ASSIGN  20739<<ASSIGN
QI_1.BASE
     10982**DCL     10989--REDEF
QI_1.CURRENT.FILE$
     11873**DCL     11875--REDEF   11877--REDEF
QI_1.CURRENT.FILE_STATUS$
     11879**DCL     11881--REDEF   11883--REDEF
QI_1.DAD
     11677**DCL     11682--REDEF
QI_1.FILE_HEAD
     11860**DCL     11867--REDEF
QI_1.INITIALIZATION_BLOCK$
     10994**DCL     20620>>ASSIGN
QI_1.INSTR$
     10990**DCL     20505>>ASSIGN  20506<<ASSIGN  20713>>IF      20724>>IF      20736>>IF
QI_1.IS_ALL_LIT
     11683**DCL     11688--REDEF
QI_1.IS_FORM_VARIABLE
     11689**DCL     11694--REDEF
QI_1.IS_TEMP
     11695**DCL     11700--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP
     11793**DCL     11818--REDEF
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:86   
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.ALPHANUMERIC
     11795**DCL     11800--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.NUMERIC.CB
     11801**DCL     11804--REDEF   11807--REDEF
QI_1.MESSAGE_LINE_DAD.WORD0
     11762**DCL     11763--REDEF
QI_1.OFFSET
     11701**DCL     11706--REDEF
QI_1.OFFSET.AUX
     11705**DCL     20531>>ASSIGN  20551>>ASSIGN  20639>>ASSIGN
QI_1.OP
     11060**DCL     20512<<ASSIGN  20545<>CALL
QI_1.OP.CIP
     11062**DCL     11513--REDEF
QI_1.OP.CIP.AUX
     11428**DCL     11499--REDEF
QI_1.OP.CIP.AUX.CD
     11473**DCL     11476--REDEF   11480--REDEF   11483--REDEF
QI_1.OP.CIP.S
     11132**DCL     11203--REDEF
QI_1.OP.CIP.S.CD
     11177**DCL     11180--REDEF   11184--REDEF   11187--REDEF
QI_1.OP.CIP.T
     11280**DCL     11351--REDEF
QI_1.OP.CIP.T.CD
     11325**DCL     11328--REDEF   11332--REDEF   11335--REDEF
QI_1.OP.DATA
     11520**DCL     11524--REDEF
QI_1.OP.DATA.AUX$
     11523**DCL     20531>>ASSIGN  20551>>ASSIGN  20639>>ASSIGN
QI_1.OP.DATA.S$
     11521**DCL     20541<<ASSIGN  20704>>ASSIGN
QI_1.OP.DATA.T$
     11522**DCL     20542<<ASSIGN  20699<<ASSIGN  20700>>ASSIGN  20702<<ASSIGN  20702>>ASSIGN  20704>>ASSIGN
QI_1.OP.FILL_CHAR
     11644**DCL     11647--REDEF
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:87   
QI_1.OP.INX
     11577**DCL     11581--REDEF   11582--REDEF   11586--REDEF
QI_1.OP.LEN
     11560**DCL     11564--REDEF   11565--REDEF   11569--REDEF   11570--REDEF   11574--REDEF
QI_1.OP.LEN.AUX
     11563**DCL     12464--IMP-SIZ 20529>>ASSIGN  20531>>ASSIGN  20531>>ASSIGN  20543>>ASSIGN  20555>>IF
     20560>>CALLBLT 20569>>ASSIGN  20579>>ASSIGN  20591>>ASSIGN  20603>>ASSIGN  20641>>ASSIGN  20750>>CALLBLT
     20758>>CALLBLT
QI_1.OP.LEN.S
     11561**DCL     12460--IMP-SIZ 20690>>ASSIGN  20700>>ASSIGN  20703>>ASSIGN  20704>>ASSIGN
QI_1.OP.LEN.T
     11562**DCL     12462--IMP-SIZ 20703<<ASSIGN  20704>>ASSIGN
QI_1.OP.PICTURE_STRING
     11630**DCL     11633--REDEF   11634--REDEF   11637--REDEF   11638--REDEF   11641--REDEF
QI_1.OP.ROUND
     11663**DCL     11664--REDEF   11665--REDEF
QI_1.OP.SRCH_RESULT
     11634**DCL     20542--ASSIGN
QI_1.OP.SRCH_VRFY_ELEMS
     11599**DCL     11602--REDEF
QI_1.OP.SRCH_VRFY_ELEMS.LIST_LEN
     11601**DCL     20543<<ASSIGN
QI_1.OP.VRFY_RESULT.DISP
     11639**DCL     20553>>ASSIGN
QI_1.OPENED_COUNT
     11868**DCL     11871--REDEF
QI_1.OTTER_SPACE
     11707**DCL     11712--REDEF
QI_1.PICTURE_STRING
     11713**DCL     11718--REDEF
QI_1.SCREEN_UPDATE_FLAGS.WAS_APPLIED
     11025**DCL     20508>>IF
QI_1.SCREEN_UPDATE_FLAGS.WAS_WRITTEN
     11031**DCL     20508>>IF
QI_1.SOURCE$
     11033**DCL     20513<<ASSIGN  20684<<ASSIGN
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:88   
QI_1.SPECIAL_NAMES
     11896**DCL     11905--REDEF
QI_1.TYPE
     11719**DCL     11724--REDEF
QI_16_BIT_BINARY
     16909**DCL     16979--REDEF
QI_16_BIT_BINARY.CB
     16928**DCL     16931--REDEF   16935--REDEF   16938--REDEF
QI_31_DIGIT_SLS_DISPLAY
     16742**DCL     16812--REDEF
QI_31_DIGIT_SLS_DISPLAY.CD
     16789**DCL     16792--REDEF   16796--REDEF   16799--REDEF
QI_31_DIGIT_ST_PACKED
     17244**DCL     17314--REDEF
QI_31_DIGIT_ST_PACKED.CP
     17277**DCL     17280--REDEF   17284--REDEF   17287--REDEF
QI_32_BIT_BINARY
     17076**DCL     17146--REDEF
QI_32_BIT_BINARY.CB
     17095**DCL     17098--REDEF   17102--REDEF   17105--REDEF
QI_4_CHAR_ALPHANUMERIC
     16574**DCL     16644--REDEF
QI_4_CHAR_ALPHANUMERIC.CA
     16579**DCL     16583--REDEF   16586--REDEF   16589--REDEF
QI_ACCUMULATOR_DAD.CIP
     17587**DCL     17658--REDEF
QI_ACCUMULATOR_DAD.CIP.CP
     17618**DCL     17621--REDEF   17625--REDEF   17628--REDEF
QI_ALR.CIP
     12539**DCL     12990--REDEF
QI_ALR.CIP.AUX
     12905**DCL     12976--REDEF
QI_ALR.CIP.AUX.CA
     12908**DCL     12912--REDEF   12915--REDEF   12918--REDEF
QI_ALR.CIP.S
     12609**DCL     12680--REDEF
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:89   
QI_ALR.CIP.S.CA
     12612**DCL     12616--REDEF   12619--REDEF   12622--REDEF
QI_ALR.CIP.T
     12757**DCL     12828--REDEF
QI_ALR.CIP.T.CA
     12760**DCL     12764--REDEF   12767--REDEF   12770--REDEF
QI_ALR.DATA
     12997**DCL     13001--REDEF
QI_ALR.FILL_CHAR
     13121**DCL     13124--REDEF
QI_ALR.INX
     13054**DCL     13058--REDEF   13059--REDEF   13063--REDEF
QI_ALR.LEN
     13037**DCL     13041--REDEF   13042--REDEF   13046--REDEF   13047--REDEF   13051--REDEF
QI_ALR.PICTURE_STRING
     13107**DCL     13110--REDEF   13111--REDEF   13114--REDEF   13115--REDEF   13118--REDEF
QI_ALR.ROUND
     13140**DCL     13141--REDEF   13142--REDEF
QI_ALR.SRCH_VRFY_ELEMS
     13076**DCL     13079--REDEF
QI_BLANK
     12001**DCL     20541--ASSIGN
QI_FPT_CLOSE
     17901**DCL     20664>>ASSIGN
QI_FPT_DBCONTROL.V_
     17959**DCL     17959--REDEF
QI_FPT_GDS_LOAD
     18638**DCL     20687>>ASSIGN
QI_FPT_INT.V_
     18797**DCL     18797--REDEF
QI_FPT_LDTRC
     18850**DCL     20518>>ASSIGN
QI_FPT_OPEN
     18962**DCL     20618>>ASSIGN
QI_FPT_READ
     19071**DCL     20650>>ASSIGN
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:90   
QI_FPT_WRITE
     19786**DCL     20631>>ASSIGN
QI_MAT.CIP
     15878**DCL     16329--REDEF
QI_MAT.CIP.AUX
     16244**DCL     16315--REDEF
QI_MAT.CIP.AUX.CA
     16247**DCL     16251--REDEF   16254--REDEF   16257--REDEF
QI_MAT.CIP.S
     15948**DCL     16019--REDEF
QI_MAT.CIP.S.CA
     15951**DCL     15955--REDEF   15958--REDEF   15961--REDEF
QI_MAT.CIP.T
     16096**DCL     16167--REDEF
QI_MAT.CIP.T.CA
     16099**DCL     16103--REDEF   16106--REDEF   16109--REDEF
QI_MAT.DATA
     16336**DCL     16340--REDEF
QI_MAT.DEC
     16404**DCL     16408--REDEF   16409--REDEF   16413--REDEF
QI_MAT.FILL_CHAR
     16460**DCL     16463--REDEF
QI_MAT.LEN
     16376**DCL     16380--REDEF   16381--REDEF   16385--REDEF   16386--REDEF   16390--REDEF
QI_MAT.PICTURE_STRING
     16446**DCL     16449--REDEF   16450--REDEF   16453--REDEF   16454--REDEF   16457--REDEF
QI_MAT.ROUND
     16479**DCL     16480--REDEF   16481--REDEF
QI_MAT.SRCH_VRFY_ELEMS
     16415**DCL     16418--REDEF
QI_PICTURE_STRING
     17412**DCL     17482--REDEF
QI_PICTURE_STRING.CA
     17417**DCL     17421--REDEF   17424--REDEF   17427--REDEF
QI_SRCH_VRFY
     15205**DCL     20512>>ASSIGN
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:91   
QI_SRCH_VRFY.CIP
     15209**DCL     15660--REDEF
QI_SRCH_VRFY.CIP.AUX
     15575**DCL     15646--REDEF
QI_SRCH_VRFY.CIP.AUX.CA
     15578**DCL     15582--REDEF   15585--REDEF   15588--REDEF
QI_SRCH_VRFY.CIP.S
     15279**DCL     15350--REDEF
QI_SRCH_VRFY.CIP.S.CA
     15282**DCL     15286--REDEF   15289--REDEF   15292--REDEF
QI_SRCH_VRFY.CIP.T
     15427**DCL     15498--REDEF
QI_SRCH_VRFY.CIP.T.CA
     15430**DCL     15434--REDEF   15437--REDEF   15440--REDEF
QI_SRCH_VRFY.DATA
     15667**DCL     15671--REDEF
QI_SRCH_VRFY.DEC
     15735**DCL     15739--REDEF   15740--REDEF   15744--REDEF
QI_SRCH_VRFY.FILL_CHAR
     15791**DCL     15794--REDEF
QI_SRCH_VRFY.ROUND
     15810**DCL     15811--REDEF   15812--REDEF
QI_SRCH_VRFY.SRCH_RESULT
     15751**DCL     15754--REDEF   15755--REDEF   15758--REDEF   15759--REDEF   15762--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ARGS
     15675**DCL     15679--REDEF   15680--REDEF   15684--REDEF   15685--REDEF   15689--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ELEMS
     15746**DCL     15749--REDEF
QI_TYPE_BINARY_TARGET.CIP
     14536**DCL     14987--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX
     14902**DCL     14973--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX.CA
     14905**DCL     14909--REDEF   14912--REDEF   14915--REDEF
QI_TYPE_BINARY_TARGET.CIP.S
     14606**DCL     14677--REDEF
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:92   
QI_TYPE_BINARY_TARGET.CIP.S.CA
     14609**DCL     14613--REDEF   14616--REDEF   14619--REDEF
QI_TYPE_BINARY_TARGET.CIP.T
     14754**DCL     14825--REDEF
QI_TYPE_BINARY_TARGET.CIP.T.CB
     14771**DCL     14774--REDEF   14778--REDEF   14781--REDEF
QI_TYPE_BINARY_TARGET.DATA
     14994**DCL     14998--REDEF
QI_TYPE_BINARY_TARGET.DEC
     15062**DCL     15066--REDEF   15067--REDEF   15071--REDEF
QI_TYPE_BINARY_TARGET.LEN
     15034**DCL     15038--REDEF   15039--REDEF   15043--REDEF   15044--REDEF   15048--REDEF
QI_TYPE_BINARY_TARGET.PICTURE_STRING
     15104**DCL     15107--REDEF   15108--REDEF   15111--REDEF   15112--REDEF   15115--REDEF
QI_TYPE_BINARY_TARGET.ROUND
     15137**DCL     15138--REDEF   15139--REDEF
QI_TYPE_BINARY_TARGET.SIZE_ERROR
     15123**DCL     15124--REDEF
QI_TYPE_BINARY_TARGET.SRCH_VRFY_ELEMS
     15073**DCL     15076--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP
     13204**DCL     13655--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX
     13570**DCL     13641--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX.CA
     13573**DCL     13577--REDEF   13580--REDEF   13583--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S
     13274**DCL     13345--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S.CD
     13319**DCL     13322--REDEF   13326--REDEF   13329--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T
     13422**DCL     13493--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T.CA
     13425**DCL     13429--REDEF   13432--REDEF   13435--REDEF
QI_TYPE_DISPLAY_SOURCE.DATA
     13662**DCL     13666--REDEF
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:93   
QI_TYPE_DISPLAY_SOURCE.DEC
     13730**DCL     13734--REDEF   13735--REDEF   13739--REDEF
QI_TYPE_DISPLAY_SOURCE.LEN
     13702**DCL     13706--REDEF   13707--REDEF   13711--REDEF   13712--REDEF   13716--REDEF
QI_TYPE_DISPLAY_SOURCE.PICTURE_STRING
     13772**DCL     13775--REDEF   13776--REDEF   13779--REDEF   13780--REDEF   13783--REDEF
QI_TYPE_DISPLAY_SOURCE.ROUND
     13805**DCL     13806--REDEF   13807--REDEF
QI_TYPE_DISPLAY_SOURCE.SIZE_ERROR
     13791**DCL     13792--REDEF
QI_TYPE_DISPLAY_SOURCE.SRCH_VRFY_ELEMS
     13741**DCL     13744--REDEF
QI_TYPE_DISPLAY_TARGET.CIP
     13870**DCL     14321--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX
     14236**DCL     14307--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX.CA
     14239**DCL     14243--REDEF   14246--REDEF   14249--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S
     13940**DCL     14011--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S.CA
     13943**DCL     13947--REDEF   13950--REDEF   13953--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T
     14088**DCL     14159--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T.CD
     14133**DCL     14136--REDEF   14140--REDEF   14143--REDEF
QI_TYPE_DISPLAY_TARGET.DATA
     14328**DCL     14332--REDEF
QI_TYPE_DISPLAY_TARGET.DEC
     14396**DCL     14400--REDEF   14401--REDEF   14405--REDEF
QI_TYPE_DISPLAY_TARGET.LEN
     14368**DCL     14372--REDEF   14373--REDEF   14377--REDEF   14378--REDEF   14382--REDEF
QI_TYPE_DISPLAY_TARGET.PICTURE_STRING
     14438**DCL     14441--REDEF   14442--REDEF   14445--REDEF   14446--REDEF   14449--REDEF
QI_TYPE_DISPLAY_TARGET.ROUND
     14471**DCL     14472--REDEF   14473--REDEF
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:94   
QI_TYPE_DISPLAY_TARGET.SIZE_ERROR
     14457**DCL     14458--REDEF
QI_TYPE_DISPLAY_TARGET.SRCH_VRFY_ELEMS
     14407**DCL     14410--REDEF
QI_VLP_CG
     19121**DCL     20635>>ASSIGN  20654>>ASSIGN
QI_VLP_SEGMENT.BASE
     18496**DCL     18496--REDEF
QI_VLP_SEGMENT_BUFFER.BASE
     18594**DCL     18594--REDEF
QI_VLP_SEGMENT_LOAD.BASE
     18692**DCL     18692--REDEF   20691<<ASSIGN
QI_VLP_SEGMENT_LOAD.BASE$
     18692**DCL     20699>>ASSIGN
QI_VLP_TRMCTL.BREAKCOUNT
     19686**DCL     19687--REDEF
QI_VLP_XBREAK.IC
     19876**DCL     19876--REDEF
QI_VLP_XBREAK.OLDIC
     19876**DCL     19877--REDEF   19877--REDEF
Q_LDBYTYP
     20311**DCL     20637--ASSIGN
Q_LDBYTYP.TYPE#
     20312**DCL     20641<<ASSIGN
Q_LDBYTYPRSP
     20332**DCL     20656--ASSIGN
Q_LDBYTYPRSP.ACCT#
     20400**DCL     20521--ASSIGN  20526<<ASSIGN  20591<<ASSIGN
Q_LDBYTYPRSP.ERR
     20349**DCL     20674>>IF      20731<>CALL
Q_LDBYTYPRSP.NAME
     20393**DCL     20520--ASSIGN
Q_LDBYTYPRSP.NAME.LEN#
     20394**DCL     20524<<ASSIGN  20578<<ASSIGN
Q_LDBYTYPRSP.NAME.NAME#
     20395**DCL     20525<<ASSIGN  20579<<ASSIGN
PL6.E3A0      #001=QBL$LOAD File=QBL$LOAD.:E05TSI                                WED 07/30/97 04:51 Page:95   
Q_LDBYTYPRSP.PASS#
     20405**DCL     20522--ASSIGN  20527<<ASSIGN  20603<<ASSIGN
Q_LDBYTYPRSP.PSN#
     20388**DCL     20519--ASSIGN  20523<<ASSIGN  20569<<ASSIGN
UNSTRING_NAME_ACCT_PASS
     20748**PROC    20576--CALL    20589--CALL    20601--CALL
VARIABLE_AUX$
     19904**DCL     20639<<ASSIGN  20641>>ASSIGN
VLP@CG
       607**DCL     20634--ASSIGN  20635<<ASSIGN  20653--ASSIGN  20654<<ASSIGN
VLP@CG.MSGTYP#
       611**DCL     20636<<ASSIGN  20655<<ASSIGN
WERE_ALL_DONE
     19905**DCL     20539<<ASSIGN  20583>>IF      20595>>IF      20607>>IF      20756<<ASSIGN
WHATEVER_INDEX
     19906**DCL     20560<<CALLBLT 20569>>ASSIGN  20573>>ASSIGN  20578>>ASSIGN  20579>>ASSIGN  20587>>ASSIGN
     20591>>ASSIGN  20599>>ASSIGN  20603>>ASSIGN  20750<<CALLBLT 20758<<CALLBLT
