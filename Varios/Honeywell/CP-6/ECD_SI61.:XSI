/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
ECD: PROC(SRCE,DEST,FLAG);
 
/****
*
*   Convert the SBIN WORD value SRCE to English (e.g., 2 -> two) in
*   DEST, a TEXTC character string which may be up to 134 characters
*   in length.  If FLAG is specified and TRUE, DEST is set to the
*   ordinal value of SRCE (2 -> second) otherwise it is set to the
*   cardinal value (2 -> two).  Negative values are preceded by the
*   word "minus".  The conversion is done to lower case; the user
*   may capitalize the first letter, if desired.
*
****/
 
    DCL SRCE                           SBIN;
 
    DCL 1 DEST UNAL,
          2 L UNAL                     UBIN BYTE,
          2 C UNAL                     CHAR(131);
 
    DCL FLAG                           BIT(1);
    DCL ORD                            BIT(1);
 
    DCL W                              SBIN;
    DCL I                              SBIN;
    DCL L                              SBIN;
    DCL M                              SBIN;
 
    DCL 1 UNTC(0:19) CONSTANT UNAL,
          2 L UNAL                     UBIN BYTE INIT(
             4, 3, 3, 5, 4, 4, 3, 5, 5, 4, 3, 6, 6, 8, 8, 7, 7, 9, 8, 8),
          2 C UNAL                     CHAR(9) INIT(
            'zero     ','one      ','two      ','three    ','four     ',
            'five     ','six      ','seven    ','eight    ','nine     ',
            'ten      ','eleven   ','twelve   ','thirteen ','fourteen ',
            'fifteen  ','sixteen  ','seventeen','eighteen ','nineteen ');
 
    DCL 1 UNTO(0:19) CONSTANT UNAL,
          2 L UNAL                     UBIN BYTE INIT(
             6, 5, 6, 5, 6, 5, 5, 7, 6, 5, 5, 8, 7,10,10, 9, 9,11,10,10),
          2 C UNAL                     CHAR(11) INIT(
            'zeroth     ','first      ','second     ','third      ',
            'fourth     ','fifth      ','sixth      ','seventh    ',
            'eighth     ','ninth      ','tenth      ','eleventh   ',
            'twelfth    ','thirteenth ','fourteenth ','fifteenth  ',
            'sixteenth  ','seventeenth','eighteenth ','nineteenth ');
 
    DCL 1 TENC(0:9) CONSTANT UNAL,
          2 L UNAL                     UBIN BYTE INIT(
             0, 0, 6, 6, 5, 5, 5, 7, 6, 6),
          2 C UNAL                     CHAR(7) INIT(
            '*******','*******','twenty ','thirty ','forty  ',
            'fifty  ','sixty  ','seventy','eighty ','ninety ');
 
    DCL 1 TENO(0:9) CONSTANT UNAL,
          2 L UNAL                     UBIN BYTE INIT(
             0, 0, 9, 9, 8, 8, 8,10, 9, 9),
          2 C UNAL                     CHAR(10) INIT(
            '**********','**********','twentieth ','thirtieth ','fortieth  ',
            'fiftieth  ','sixtieth  ','seventieth','eightieth ','ninetieth ');
 
    DCL 1 BIGO(0:3) CONSTANT UNAL,
          2 L UNAL                     UBIN BYTE INIT(9,10,9,9),
          2 C UNAL                     CHAR(10) INIT(
            'hundredth ','thousandth','millionth ','billionth ');
%EJECT;
/****
*
*   Set ORD based on the value (or absence) of FLAG.
*
****/
 
    ORD='0'B;
    IF ADDR(FLAG)~=ADDR(NIL) THEN
        ORD=FLAG;
 
/****
*
*   Check for zero SRCE.
*
****/
 
    IF SRCE=0 THEN DO;
        IF ORD THEN DO;
            SUBSTR(DEST.C,0,6)='zeroth';
            DEST.L=6;
        END;
        ELSE DO;
            SUBSTR(DEST.C,0,4)='zero';
            DEST.L=4;
        END;
        RETURN;
    END;
 
/****
*
*   Check for negative SRCE.
*
****/
 
    I=0;
    IF SRCE<0 THEN DO;
        SUBSTR(DEST.C,0,6)='minus';
        I=6;
    END;
 
/****
*
*   Do billions (Carl Sagen special).
*
****/
 
    W=SRCE/1000000000;
    IF W<0 THEN
        W=-W;
    IF W>0 THEN DO;
        CALL WOUT;
        SUBSTR(DEST.C,I,8)='billion';
        L=I;
        I=I+8;
        M=31;
    END;
 
/****
*
*   Do millions.
*
****/
 
    W=MOD(SRCE/1000000,1000);
    IF W<0 THEN
        W=-W;
    IF W>0 THEN DO;
        IF (SRCE>0 AND I>0) OR (SRCE<0 AND I>6) THEN DO;
            SUBSTR(DEST.C,I-1,2)=',';
            I=I+1;
        END;
        CALL WOUT;
        SUBSTR(DEST.C,I,8)='million';
        L=I;
        I=I+8;
        M=30;
    END;
 
/****
*
*   Do thousands.
*
****/
 
    W=MOD(SRCE/1000,1000);
    IF W<0 THEN
        W=-W;
    IF W>0 THEN DO;
        IF (SRCE>0 AND I>0) OR (SRCE<0 AND I>6) THEN DO;
            SUBSTR(DEST.C,I-1,2)=',';
            I=I+1;
        END;
        CALL WOUT;
        SUBSTR(DEST.C,I,9)='thousand';
        L=I;
        I=I+9;
        M=29;
    END;
 
/****
*
*   Do units.
*
****/
 
    W=MOD(SRCE,1000);
    IF W<0 THEN
        W=-W;
    IF W>0 THEN DO;
        IF W>99 AND ((SRCE>0 AND I>0) OR (SRCE<0 AND I>6)) THEN DO;
            SUBSTR(DEST.C,I-1,2)=',';
            I=I+1;
        END;
        CALL WOUT;
    END;
 
/****
*
*   Fix it up if ORD is set.
*
****/
 
    IF ORD THEN DO;
        I=L;
        IF M>27 THEN DO;
            SUBSTR(DEST.C,I,BIGO.L(M-28))=BIGO.C(M-28);
            I=I+BIGO.L(M-28)+1;
        END;
        ELSE IF M>19 THEN DO;
            SUBSTR(DEST.C,I,TENO.L(M-18))=TENO.C(M-18);
            I=I+TENO.L(M-18)+1;
        END;
        ELSE DO;
            SUBSTR(DEST.C,I,UNTO.L(M))=UNTO.C(M);
            I=I+UNTO.L(M)+1;
        END;
    END;
 
/****
*
*   Set up the length byte.
*
****/
 
    DEST.L=I-1;
    RETURN;
%EJECT;
/****
*
*   Convert W to hundreds, tens, units.
*
****/
 
WOUT: PROC;
 
    DCL W1                             SBIN;
    DCL W2                             SBIN;
 
/****
*
*   Do 100s.
*
****/
 
    W1=W/100;
    IF W1>0 THEN DO;
        SUBSTR(DEST.C,I,UNTC.L(W1)+1)=UNTC.C(W1);
        I=I+UNTC.L(W1)+1;
        SUBSTR(DEST.C,I,8)='hundred';
        L=I;
        I=I+8;
        M=28;
    END;
 
/****
*
*   Do 10s, units.
*
****/
 
    W1=MOD(W,100);
    IF W1>0 THEN DO;
        IF W1>19 THEN DO;
            W2=W1/10;
            W1=MOD(W1,10);
            SUBSTR(DEST.C,I,TENC.L(W2)+1)=TENC.C(W2);
            L=I;
            I=I+TENC.L(W2)+1;
            M=W2+18;
            IF W1>0 THEN
                SUBSTR(DEST.C,I-1,1)='-';
        END;
        IF W1>0 THEN DO;
            SUBSTR(DEST.C,I,UNTC.L(W1)+1)=UNTC.C(W1);
            L=I;
            I=I+UNTC.L(W1)+1;
            M=W1;
        END;
    END;
 
    RETURN;
 
END;
 
END;
