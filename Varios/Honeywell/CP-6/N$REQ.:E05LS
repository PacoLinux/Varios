

15:05 JUL 28 '97 N$REQ.:E05SI                                              1    
    1      /*M* IOQ REQUEST PACKET */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DMR */
    8      /*
    9         Subs for REQ.OPFLGS
   10      */
   11      %SUB OP_USER='400'O;                    /* USER ASSOCIATED I/O */
   12      %SUB OP_ARS='200'O;                     /* SET ARS IN DCB */
   13      %SUB OP_EVNT='100'O;                    /* EVNTINFO IS PTR TO DO-LIST */
   14      %SUB OP_EA='040'O;                      /* CALL END ACTION ROUTINE */
   15      %SUB OP_WAIT='020'O;                    /* DO I/O WITH WAIT */
   16      %SUB OP_BPF='010'O;                     /* BUF$ IS BUFFER POINTER */
   17      %SUB OP_HOLD='004'O;                    /* DO NOT RELEASE PACKET */
   18      %SUB OP_REQ='002'O;                     /* REQUEUE REQUEST */
   19      %SUB OP_CLR='001'O;                     /* CLEAR CACHE */
   20      /**/
   21      %MACRO N$REQ(NAME=N$REQ,STCLASS=BASED);
   22      %LSET LISTDIR='0'B;
   23      %LSET LISTEXP='1'B;
   24      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   25      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   26      %LSET INIT=CHARTEXT('INIT');
   27      %ELSE;
   28      %LSET INIT=CHARTEXT('/*');
   29      %ENDIF;
   30      DCL 1 NAME STCLASS DALIGNED,            /* I/O request packet */
   31            2 FL$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'), /* Link to next packet in queue */
   32            2 DLA ALIGNED,                    /* Device logical address */
   33              3 DCTX UBIN(15) UNAL %INIT(0)%CHARTEXT('/**/'), /* Device table index */
   34              3 DRELADDR UBIN(21) UNAL %INIT(0)%CHARTEXT('/**/'), /* Device-relative address */
   35              3 MPC REDEF DRELADDR,           /* Info for read/write of mpc memeory */
   36                4 * BIT(5) UNAL,
   37                4 MEMADDR UBIN(16) UNAL,      /* Location in mpc memory   */
15:05 JUL 28 '97 N$REQ.:E05SI                                              2    
   38            2 DCT$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   39            2 ERRCT UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
   40            2 TIMOUT UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
   41            2 STEP UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'), /* RESTART STEP */
   42            2 FC UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
   43            2 BUFSIZE UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'), /* Buffer size (bytes) */
   44            2 NOALT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   45            2 IOFLG,
   46              3 IOS BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* IOS$ PTS TO IOS PACKET */
   47              3 LPW23 BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* VALUE FOR LPW23 */
   48              3 MREC BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* MULTI-RECORD COMMAND */
   49              3 SUSP BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* REQUEST WILL SUSPEND MPC */
   50              3 REL BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* REQUEST WILL RELEASE MPC */
   51              3 STOPMPC BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* MPC MUST BE STOPPED FOR THIS REQUEST */
   52            2 OPFLG,                          /* Operation flags */
   53              3 USER BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* User-associated I/O */
   54              3 ARS BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Set ARS of DCB */
   55              3 EVNT BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* EVNTINFO is DOLIST ptr */
   56              3 EA BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Call end-action routine */
   57              3 WAIT BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Block associated user after queueing request */
   58              3 BPF BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* BUF$ contains ptr -> buffer */
   59              3 HOLD BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Do not release packet on completion */
   60              3 REQ BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Re-queue packet */
   61              3 CLR BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Clear cache */
   62            2 BUF$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'), /* -> buffer if BPF='1'B */
   63            2 BUFADDR SBIN %INIT(0)%CHARTEXT('/**/'), /* Buffer address */
   64            2 BUFVIRT REDEF BUFADDR,          /* Virtual buffer address if PTP~=0 */
   65              3 BASE SBIN(33) UNAL,
   66              3 BYT UBIN(3) UNAL,
   67            2 BUFREAL REDEF BUFADDR,          /* Real buffer address if PTP=0 */
   68              3 EXTA SBIN(16) UNAL,
   69              3 ADR UBIN(18) UNAL,
   70              3 BYT UBIN(2) UNAL,
   71            2 PTP SBIN %INIT(0)%CHARTEXT('/**/'), /* BPF=0: Page table pointer (0=real) */
   72            2 REQID UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'), /* ID assigned to packet by NIQ$GET */
   73            2 * BIT(9) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   74            2 POSTER UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'), /* INFO FOR POSTER */
15:05 JUL 28 '97 N$REQ.:E05SI                                              3    
   75            2 LPWX,                           /* LPW EXTENSION */
   76              3 BASE UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
   77              3 BOUND UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
   78            2 IOS$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'), /* -> IOS packet */
   79            2 STATION,
   80              3 LSTA$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'), /* POINTER TO VLP_STATION */
   81            2 STATUS,                         /* STATUS FOR LOCAL DEVICES */
   82              3 PRESENCE BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   83              3 POWEROFF BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   84              3 MAJOR UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
   85              3 MINOR BIT(6) %INIT('0'B)%CHARTEXT('/**/'),
   86              3 ODD BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   87              3 MARKER BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   88              3 * BIT(2) %INIT('0'B)%CHARTEXT('/**/'),
   89              3 ININT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   90              3 * BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   91              3 IOM,                          /* IOM status: */
   92                4 CHANNEL UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
   93                4 CENTRAL UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
   94              3 * BIT(6) %INIT('0'B)%CHARTEXT('/**/'),
   95              3 RCR UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
   96              3 NWA UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
   97              3 NCP UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
   98              3 READFLG BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   99              3 TYPE UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
  100              3 TALLYR UBIN(12) UNAL %INIT(0)%CHARTEXT('/**/'),
  101            2 FLTSTAT REDEF STATUS,           /* FAULT STATUS */
  102              3 PPMAJOR BIT(6),          /* PRESENCE, POWER OFF, AND MAJOR STATUS */
  103              3 * BIT(3),
  104              3 CHAN UBIN(9) UNAL,            /* CHANNEL NUMBER */
  105              3 SRQ UBIN(3) UNAL,             /* SERVICE REQUEST CODE */
  106              3 * BIT(5),
  107              3 SC UBIN(4) UNAL,              /* SYSTEM CONTROLLER FAULT */
  108              3 IO UBIN(6) UNAL,              /* IOM FAULT */
  109              3 DCW BIT(36) ALIGNED,          /* LAST DCW */
  110            2 FLPW,                           /* FINAL LIST POINTER WORD */
  111              3 NDCWA UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
15:05 JUL 28 '97 N$REQ.:E05SI                                              4    
  112              3 * UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
  113            2 ERR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  114            2 DQH$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  115            2 TYC ALIGNED,                    /* Type completion code */
  116              3 EGV BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Set on I/O completion */
  117              3 OPER BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Fatal I/O error */
  118              3 EOT BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* End of tape */
  119              3 BOT BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Beginning of tape */
  120              3 BOF BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Beginning of file */
  121              3 BLNKTP BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Blank tape on read */
  122              3 EOF BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* End of file */
  123              3 LD BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Lost data */
  124              3 IOERR BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Permanent I/O error */
  125              3 DI BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* File data inconsistency */
  126              3 EOD BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* End of data encountered */
  127              3 MTRAP BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Memory trap during I/O */
  128              3 LDISC BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Line disconnect */
  129              3 DACT BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Deactivated */
  130              3 TIMO BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Time - out */
  131              3 PROT BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Tape write protected */
  132              3 FRAW BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Forward read after write */
  133              3 LAST BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Indicated error on last operation */
  134              3 CDALRT BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Code alert */
  135              3 XTRARD BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* Read w/ read pending */
  136              3 CGKEYV BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* COMGROUP key violation. */
  137              3 CGLWRV BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* COMGROUP LATCH write err. */
  138              3 CGFULL BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* COMGROUP full */
  139              3 CGCRCW BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* COMGROUP LATCH read err. */
  140              3 CGCWRV BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* COMGROUP contd write/read error */
  141              3 * BIT(11) %INIT('0'B)%CHARTEXT('/**/'), /* Etc., 36 in all */
  142            2 DCB$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'), /* -> user's DCB */
  143            2 EAENTRY EPTR %INIT(ENTADDR(NIL))%CHARTEXT('/**/'), /* End-action procedure */
  144            2 EAINFO UBIN WORD %INIT(0)%CHARTEXT('/**/'), /* End-action parameter */
  145            2 EAINFOP$ REDEF EAINFO PTR,
  146            2 EAINFOX UBIN WORD %INIT(0)%CHARTEXT('/**/'), /* Extra EAINFO word */
  147            2 EAINFOXP$ REDEF EAINFOX PTR,
  148            2 EVNTINFO UBIN WORD %INIT(0)%CHARTEXT('/**/'), /* Event info */
15:05 JUL 28 '97 N$REQ.:E05SI                                              5    
  149            2 DOPTR$ REDEF EVNTINFO PTR,      /* Pointer to DOLIST entry */
  150            2 ARSIZE UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'), /* Actual record size */
  151            2 COMP UBIN(7) UNAL %INIT(0)%CHARTEXT('/**/'), /* COMPLETION TYPE */
  152            2 USER# UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'), /* User NO */
  153            2 ARCT SBIN HALF UNAL %INIT(0)%CHARTEXT('/**/'), /* Actual record count */
  154            2 RCT SBIN HALF UNAL %INIT(0)%CHARTEXT('/**/'), /* Record count */
  155            2 DVE UNAL,
  156              3 DVBYTE UNAL,                  /* Format control flags */
  157                4 TOP BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  158                4 BP BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  159                4 VFC BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  160                4 BIN BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  161                4 TRANS BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  162                4 RRR BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  163                4 NODAT BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  164                4 *  BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  165                4 CONT BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  166              3 EOMCHAR CHAR(1) UNAL %INIT(BITASC('501'O))%CHARTEXT('/**/'), /* Activation character */
  167              3 VFC REDEF EOMCHAR CHAR(1) UNAL, /* VFC character */
  168            2 NWIO UBIN(1) UNAL %INIT(1)%CHARTEXT('/**/'), /* 1 = no-wait I/O */
  169            2 STA BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* Set if station is valid */
  170            2 FIPS_DENS_DONE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* FIPS density set on 2nd chan */
  171            2 IOP_BUFREAL_CVRT BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* Indicates BUFREAL was converted to paged address */
  172            2 IMX_TDIO_MASK BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* Indicates NIS must do a mask or RSO connect */
  173            2 * BIT(4) UNAL  %INIT('0'B)%CHARTEXT('/**/'),
  174            2 WSR UBIN(9) UNAL %INIT(7)%CHARTEXT('/**/'), /* Working space register */
  175            2 BUFREAL_SV,                /* BUFREAL prior to conversion to paged IO */
  176              3 DIV64PG SBIN(18) HALIGNED %INIT(0)%CHARTEXT('/**/'), /* 64 page section */
  177              3 MOD64PG UBIN(18) HALIGNED %INIT(0)%CHARTEXT('/**/'), /* offset withing 64 page section */
  178            2 IOQFLG UNAL,                    /*  IOQ Checker flags.  */
  179              3 INUSE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* In Use flag.  */
  180              3 IOQUED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* IO scheduled.  */
  181            2 * BIT(7) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  182            2 GET UNAL,                       /*  Info about getter.  */
  183              3 UNO UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'), /*  User number.  */
  184              3 X1 UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'), /*  Calling addrress.  */
  185            2 DOMIR BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* Mirrored IO to be done */
15:05 JUL 28 '97 N$REQ.:E05SI                                              6    
  186            2 BPMIR BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* Bypass Mirrored IO */
  187            2 MIRDONE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* First Mirror IO done */
  188            2 * BIT(6) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  189            2 REL UNAL,                       /*  Info about releaser.  */
  190              3 UNO UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'), /* User number.  */
  191              3 X1 UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'), /* Calling address.  */
  192            2 * BIT(36) ALIGNED %INIT('0'B)%CHARTEXT('/**/') ;
  193      %MEND;

