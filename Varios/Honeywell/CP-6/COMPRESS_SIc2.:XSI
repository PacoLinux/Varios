/*M*    stat:c    --    system five function stat */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*F*    NAME:       stat(char *path, struct stat *buf);
        PURPOSE:    Gets file status information about a file (path)
        DESCRIPTION:
           The following information is returned about the file path
 
               struct stat {
                  short             st_dev;   - ID of device containin
                                                directory entry
                  unsigned long     st_ino;   - Inode number
                  unsigned short    st_mode;  - FILE mode
                  short             st_nlink; - Number of links
                  unsigned short    st_uid;   - User ID of owner
                  unsigned short    st_gid;   - Group ID of group
                  short             st_rdev;  - ID of device
                  int               st_size;  - File size in bytes
                  time_t            st_atime; - Time of last access
                  time_t            st_mtime; - Time of last mod
                  time_t            st_ctime; - Time last statuschange
               };
 
*/
 
#include <COMPRESS_Cc1>
#include <stdio.h>
#include <fileinfo.h>
 
int   stat(char *path, struct stat *buf) {
 
   FILE *fp = fopen (path, "r");
   FILE_SET file_info;
 
   if (!fp) {
      return -1;
   }
/*    Call finform and get all the info that we can                 */
 
   if (finform (fp, &file_info)) {
      return -1;
   }
 
   buf->st_mode = S_IFREG;
   buf->st_ino  = 0;
   buf->st_dev  = 0;
   buf->st_rdev = 0;
   buf->st_nlink = 1;
   buf->st_uid   = 0;
   buf->st_gid   = 0;
   buf->st_size  = file_info.file_asn.file.ixtnsize * 4096;
   buf->st_atime = fp->_mod_time;
   buf->st_mtime = fp->_mod_time;
   buf->st_ctime = fp->_mod_time;
 
   fclose(fp);
   return 0;
}
