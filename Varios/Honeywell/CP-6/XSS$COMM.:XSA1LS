VERSION A01

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:1    
        1        1        /*M*    XSS$COMM        Interface to/from lower layers from Session     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*F*    NAME:   XSS$TSEND
        9        9                PURPOSE:
       10       10                    This module provides direct access to the Transport layer from
       11       11                    the Session layer state machine.
       12       12                DESCRIPTION:
       13       13                    XSS$TSEND is called by XSS$MACHINE when an event is generated
       14       14                    that involves notification of the Transport layer.
       15       15        */
       16       16        XSS$TSEND: PROC( VBLK) ALTRET;
       17       17        %INCLUDE CP_6;
       18     5576            %B$ALT;
       19     5584            %B$TCB;
       20     5587            %FPT_WRITE( FPTN=AUWRT, STATION=NCSTA, TRANS=YES);
       21     5618            %FPT_WRITE( FPTN=NCWRT, STATION=XSS_AUSTA, TRANS=YES);
       22     5649            %VLP_ERRCODE( FPTN=ERRCODE);
       23     5694            %VLP_STATION( FPTN=XSS_AUSTA, STCLASS=SYMREF);
       24     5721            %VLP_STATION( FPTN=NCSTA, STCLASS=STATIC);
       25     5748        %INCLUDE K_ADDRESS_M;
       26     6251            %K$ADDRESS;
       27     6404        %INCLUDE K_INTERFACE_M;
       28     6813            %K$FPT_CONNECT_OSI( NAME=TCONFPT, STCLASS=AUTO);
       29     7150            %K$FPT_TERM_OSI( NAME=TDISFPT, STCLASS=AUTO);
       30     7368        %INCLUDE XSS_SESSION_E;
       31     7933        %INCLUDE XSS_SESSION_M;
       32    10576            %XSS$GENERIC( STCLASS="BASED( SFPT$)");
       33    10722            %XSS$CONNECT( STCLASS="BASED( SFPT$)");
       34    11045        %INCLUDE XSS_INTERNAL_E;
       35    11343        %INCLUDE XSS_INTERNAL_M;
       36    11932            %XSS$GLUE( NAME=GLUE, STCLASS="BASED( GLUE$)");
       37    11962            %XSS$SCTX( NAME=SCTX, STCLASS="BASED( SCTX$)");
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:2    
       38    12396            %XSS$VBLK( NAME=VBLK, STCLASS=);
       39    12501        %INCLUDE XSC_COMMON_M;
       40    13154            %XSC$ADDRESS;
       41    13437
       42    13438    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
       43    13439    1       DCL XSS$COMMWAITZ ENTRY(1) ALTRET;
       44    13440    1       DCL XSS$DUMPBYTES ENTRY(3) OPTIONAL;
       45    13441    1       DCL XSS$SCREECH ENTRY(1);
       46    13442    1       DCL XSS$EVLOG ENTRY(2);
       47    13443
       48    13444    1       DCL B$TCB$ PTR SYMREF;
       49    13445    1       DCL XSS_DEBUG UBIN SYMREF;
       50    13446    1       DCL XSS_OTRACE SBIN SYMREF;
       51    13447
       52    13448    1       DCL CREDITING BIT(1);
       53    13449    1       DCL GLUEBUF CHAR(2048) CALIGNED;
       54    13450    1       DCL GLUE_ VECTOR;
       55    13451    1       DCL GLUE$ PTR CALIGNED;
       56    13452    1       DCL SCTX$ PTR;
       57    13453    1       DCL SFPT$ PTR;
       58    13454    1       DCL UADR$ PTR;
       59    13455    1       DCL AUTITLE CHAR(0) CONSTANT INIT( '(XSS$TSEND) AU sent');
       60    13456    1       DCL AUTITLE_ VECTOR CONSTANT INIT( VECTOR( AUTITLE));
       61    13457    1       DCL NCTITLE CHAR(0) CONSTANT INIT( '(XSS$TSEND) NC sent');
       62    13458    1       DCL NCTITLE_ VECTOR CONSTANT INIT( VECTOR( NCTITLE));
       63    13459
       64    13460    1       CREDITING = %FALSE;
       65    13461    1       SCTX$ = VBLK.CTX$;
       66    13462    1   COMMON:
       67    13463    1       GLUE$ = ADDR( GLUEBUF);
       68    13464    1       GLUE_ = VECTOR( GLUEBUF);
       69    13465    1       VBOUND( GLUE_) = 3;  /* this is updated by MOVEBYTES later on */
       70    13466    1       GLUE = '0'B;
       71    13467    1       GLUE.MYSCID = SCTX.SCID;
       72    13468    1       GLUE.YRSCID = SCTX.PEERSCID;
       73    13469    1       GLUE.MAGIC = SCTX.MAGIC;
       74    13470    1       SFPT$ = VBLK.FPT$;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:3    
       75    13471    2       IF CREDITING THEN DO;
       76    13472                /* Send this credit message by a quicker path */
       77    13473    2   CREDIT:
       78    13474    3           IF SCTX.STATION = 'MONITOR ' THEN DO;
       79    13475    3               NCSTA.STATION# = SCTX.STATION;
       80    13476    3               SFPT$ = ADDR( NIL);
       81    13477    3               VBOUND( GLUE_) = 3;
       82    13478    3               GLUE.TRNFNC = %K_TCREDIT;
       83    13479    3               IF XSS_OTRACE ~= 0 THEN
       84    13480    3                   CALL XSS$DUMPBYTES( 0, GLUE_, AUTITLE_);
       85    13481    3               AUWRT.BUF_ = GLUE_;
       86    13482    3               AUWRT.V.DCB# = SCTX.DCB#;
       87    13483    3               CALL XSS$EVLOG( 'WR', %K_TCREDIT*512 + SCTX.SCID);
       88    13484    3               CALL M$WRITE( AUWRT) ALTRET( WRTERR);
       89    13485    3               END;
       90    13486    2           RETURN;
       91    13487    2           END;
       92    13488    2       DO SELECT( VBLK.EVENT);
       93    13489    2           SELECT( %XSS_SEV_TCONREQ);
       94    13490    2               SCTX.MODE = %CLIENT;
       95    13491    2               SCTX.STATION = XSS_AUSTA.STATION#;
       96    13492                    /* fill in params for T-CONNECT Request */
       97    13493    2               TCONFPT = '0'B;
       98    13494    2               TCONFPT.SCID = GLUE.MYSCID;
       99    13495    2               CALL ADDRSETUP;
      100    13496    2               GLUE.TRNFNC = %K_TCONNECT_REQ;
      101    13497    2               CALL MOVEBYTES( SIZEC( TCONFPT), ADDR( TCONFPT));
      102    13498    2           SELECT( %XSS_SEV_TCONRSP);
      103    13499                    /* fill in params for T-CONNECT Response */
      104    13500    2               TCONFPT = '0'B;
      105    13501                    /*N* Eventually this should echo the T-CONNECT Indication params
      106    13502                         found in the FPT_CONNECT_OSI framed by VBLK.PDU */
      107    13503    2               TCONFPT.SCID = GLUE.MYSCID;
      108    13504    2               CALL ADDRSETUP;
      109    13505    2               TCONFPT.TR_FLAGS.EXPEDITED = SCTX.FLAGS.TEXP;
      110    13506    2               GLUE.TRNFNC = %K_TCONNECT_RSP;
      111    13507    2               CALL MOVEBYTES( SIZEC( TCONFPT), ADDR( TCONFPT));
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:4    
      112    13508    2           SELECT( %XSS_SEV_TDISREQ);
      113    13509                    /* fill in params for T-DISCONNECT Request */
      114    13510    2               TDISFPT = '0'B;
      115    13511    2               TDISFPT.REASON = 0; /*N* ??? */
      116    13512    2               CALL XSS$BUFPTR( SCTX.SRCX, UADR$);
      117    13513    2               TDISFPT.SRC_TSAP = UADR$->XSC$ADDRESS.TSAP;
      118    13514    2               TDISFPT.SRC_NSAP = UADR$->XSC$ADDRESS.NSAP;
      119    13515    2               CALL XSS$BUFPTR( SCTX.DSTX, UADR$);
      120    13516    2               TDISFPT.DST_TSAP = UADR$->XSC$ADDRESS.TSAP;
      121    13517    2               TDISFPT.DST_NSAP = UADR$->XSC$ADDRESS.NSAP;
      122    13518    2               GLUE.TRNFNC = %K_TDISCONNECT_REQ;
      123    13519    2               CALL MOVEBYTES( SIZEC( TDISFPT), ADDR( TDISFPT));
      124    13520    2           SELECT( %XSS_SEV_AB_NR,
      125    13521    2                   %XSS_SEV_AB_R,
      126    13522    2                   %XSS_SEV_AA);
      127    13523    2               IF NOT SCTX.FLAGS.TEXP THEN
      128    13524    2                   GOTO NORMAL;
      129    13525    2   EXPEDITED:
      130    13526    2               GLUE.TRNFNC = %K_TEXPD_DATA_REQ;
      131    13527    2               CALL MOVEBYTES( VBLK.PDU.SIZE, VBLK.PDU.PTR$);
      132    13528    2               CALL MOVEBYTES( VBLK.DAT.SIZE, VBLK.DAT.PTR$);
      133    13529    2           SELECT( %XSS_SEV_EX,
      134    13530    2                   %XSS_SEV_PR_MAA,
      135    13531    2                   %XSS_SEV_PR_RA,
      136    13532    2                   %XSS_SEV_PR_RS);
      137    13533    2               IF SCTX.FLAGS.TEXP THEN
      138    13534    2                   GOTO EXPEDITED;
      139    13535    2               RETURN;  /* don't send this PDU! */
      140    13536    2           SELECT( ELSE);
      141    13537    2   NORMAL:
      142    13538    2               GLUE.TRNFNC = %K_TDATA_REQ;
      143    13539    2               CALL MOVEBYTES( VBLK.PDU.SIZE, VBLK.PDU.PTR$);
      144    13540    2               CALL MOVEBYTES( VBLK.DAT.SIZE, VBLK.DAT.PTR$);
      145    13541    2           END;
      146    13542            /* switch on whether AU or NC DCB */
      147    13543    2       DO CASE( SCTX.MODE);
      148    13544    2           CASE( %CLIENT);
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:5    
      149    13545    2               IF XSS_OTRACE ~= 0 THEN
      150    13546    2                   CALL XSS$DUMPBYTES( 0, GLUE_, NCTITLE_);
      151    13547    2               NCWRT.BUF_ = GLUE_;
      152    13548    2               IF XSS_DEBUG ~= 0 THEN
      153    13549    2                   NCWRT.STATION_ = VECTOR( XSS_AUSTA);
      154    13550    2               ELSE
      155    13551    2                   NCWRT.STATION_ = VECTOR( NIL);
      156    13552    2               NCWRT.V.DCB# = SCTX.DCB#;
      157    13553    2               CALL XSS$EVLOG( 'WR', GLUE.TRNFNC*512 + SCTX.SCID);
      158    13554    2               CALL M$WRITE( NCWRT) ALTRET( WRTERR);
      159    13555    2               IF SCTX.NEEDAREAD THEN
      160    13556    2                   CALL XSS$COMMWAITZ( SCTX);
      161    13557    2           CASE( %SERVER);
      162    13558    2               IF XSS_OTRACE ~= 0 THEN
      163    13559    2                   CALL XSS$DUMPBYTES( 0, GLUE_, AUTITLE_);
      164    13560    2               AUWRT.BUF_ = GLUE_;
      165    13561    2               NCSTA.STATION# = SCTX.STATION;
      166    13562    2               AUWRT.V.DCB# = SCTX.DCB#;
      167    13563    2               CALL XSS$EVLOG( 'WR', GLUE.TRNFNC*512 + SCTX.SCID);
      168    13564    2               CALL M$WRITE( AUWRT) ALTRET( WRTERR);
      169    13565    2               IF GLUE.TRNFNC = %K_TCONNECT_RSP THEN
      170    13566    2                   GOTO CREDIT;
      171    13567    2           END;
      172    13568    1       RETURN;
      173    13569    1   WRTERR:
      174    13570    1       ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      175    13571    1       CALL XSS$EVLOG( 'ER', SCTX.SCID);
      176    13572    1       CALL XSS$EVLOG( , ERRCODE);
      177    13573    2       IF SFPT$ = ADDR( NIL) THEN DO;
      178    13574    2           IF ERRCODE.SEV = 0 THEN
      179    13575    2               ERRCODE.SEV = 1;
      180    13576    2           CALL XSS$SCREECH( ERRCODE);
      181    13577    2           END;
      182    13578    1       ELSE
      183    13579    1           XSS$GENERIC.ERROR = ERRCODE;
      184    13580            /* Caller sets SCTX.ABORTING which simulates T-DISCONNECT Indication */
      185    13581    1       ALTRETURN;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:6    
      186    13582        %EJECT;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:7    
      187    13583    1   ADDRSETUP: PROC;
      188    13584
      189    13585        %XSC$CCB( NAME=CCB, STCLASS="BASED( CCB$)");
      190    13882
      191    13883    2       DCL XSS_CCB$$ PTR SYMREF;
      192    13884
      193    13885    2       DCL CCB$$(0:0) PTR BASED( XSS_CCB$$) ALIGNED;
      194    13886    2       DCL CCB$ PTR;
      195    13887
      196    13888    2       CCB$ = CCB$$( SCTX.SCID);
      197    13889    2       TCONFPT.TPDUSIZE = CCB.TPARMS.TPDUSIZE;
      198    13890    2       TCONFPT.WINDOWSZ = CCB.TPARMS.WINDOWSZ;
      199    13891    2       TCONFPT.TIMER1 = CCB.TPARMS.TIMER1;
      200    13892    2       TCONFPT.TIMER2 = CCB.TPARMS.TIMER2;
      201    13893    2       TCONFPT.QOS = CCB.TPARMS.QOS;
      202    13894    2       TCONFPT.CLASS = CCB.TPARMS.CLASS;
      203    13895    2       TCONFPT.TR_FLAGS = CCB.TPARMS.TR_FLAGS;
      204    13896    2       IF VBLK.EVENT = %XSS_SEV_TCONREQ THEN
      205    13897    2           TCONFPT.TR_FLAGS.EXPEDITED = XSS$CONNECT.SFU.EX | CCB.TPARMS.TR_FLAGS.
             13897                    EXPEDITED;
      206    13898    2       CALL XSS$BUFPTR( SCTX.SRCX, UADR$);
      207    13899    2       TCONFPT.SRC_TSAP = UADR$->XSC$ADDRESS.TSAP;
      208    13900    2       TCONFPT.SRC_NSAP = UADR$->XSC$ADDRESS.NSAP;
      209    13901    2       CALL XSS$BUFPTR( SCTX.DSTX, UADR$);
      210    13902    2       TCONFPT.DST_TSAP = UADR$->XSC$ADDRESS.TSAP;
      211    13903    2       TCONFPT.DST_NSAP = UADR$->XSC$ADDRESS.NSAP;
      212    13904    2       RETURN;
      213    13905
      214    13906    2       END ADDRSETUP;
      215    13907        %EJECT;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:8    
      216    13908    1   MOVEBYTES: PROC( LEN, S$);
      217    13909    2       DCL DESTINATION CHAR( LEN) BASED( D$) CALIGNED;
      218    13910    2       DCL D$ PTR CALIGNED;
      219    13911    2       DCL LEN SBIN;
      220    13912    2       DCL SOURCE CHAR( LEN) BASED( S$) CALIGNED;
      221    13913    2       DCL S$ PTR CALIGNED;
      222    13914
      223    13915    3       IF LEN > 0 THEN DO;
      224    13916    3           D$ = PINCRC( VBASE( GLUE_), 1 + VBOUND( GLUE_));
      225    13917    3           CALL INSERT( DESTINATION, 0, LEN, SOURCE);
      226    13918    3           VBOUND( GLUE_) = LEN + VBOUND( GLUE_);
      227    13919    3           END;
      228    13920    2       RETURN;
      229    13921
      230    13922    2       END MOVEBYTES;
      231    13923        %EJECT;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:9    
      232    13924        /*F*    NAME:   XSS$TCREDIT
      233    13925                PURPOSE:
      234    13926                    This routine is called whenever an M$READ is issued by a server
      235    13927                    endpoint.  It sends a short message to the Transport layer
      236    13928                    incrementing the credits for a particular connection.
      237    13929        */
      238    13930    1   XSS$TCREDIT: ENTRY( VBLK) ALTRET;
      239    13931
      240    13932    1       CREDITING = %TRUE;
      241    13933    1       SCTX$ = ADDR( VBLK);  /* SCTX is passed as param, not VBLK */
      242    13934    1       GOTO COMMON;
      243    13935
      244    13936    1       END XSS$TSEND;
      245    13937        %EOD;

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:10   
--  Include file information  --

   XSC_COMMON_M.:XSA1TOU  is referenced.
   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSS_INTERNAL_E.:XSA1TOU  is referenced.
   XSS_SESSION_M.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   K_INTERFACE_M.:E05OU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSS$TSEND.

   Procedure XSS$TSEND requires 524 words for executable code.
   Procedure XSS$TSEND requires 600 words of local(AUTO) storage.

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:11   

 Object Unit name= XSS$TSEND                                  File name= XSS$COMM.:XSA1TOU
 UTS= OCT 01 '97 12:08:33.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    33     41  XSS$TSEND
    2  RoData even  UTS     20     24  XSS$TSEND
    3   Proc  even  none   524   1014  XSS$TSEND
    4  RoData even  none    24     30  XSS$TSEND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  XSS$TSEND
     3   1005          yes     yes      Std        1  XSS$TCREDIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes    yes    Std       3 XSS$DUMPBYTES
         yes           Std       2 XSS$EVLOG
 yes     yes           Std       1 XSS$COMMWAITZ
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       2 XSS$BUFPTR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:12   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XSS_AUSTA                             B$TCB$
     XSS_DEBUG                             XSS_OTRACE                            XSS_CCB$$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:13   


        1        1        /*M*    XSS$COMM        Interface to/from lower layers from Session     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*F*    NAME:   XSS$TSEND
        9        9                PURPOSE:
       10       10                    This module provides direct access to the Transport layer from
       11       11                    the Session layer state machine.
       12       12                DESCRIPTION:
       13       13                    XSS$TSEND is called by XSS$MACHINE when an event is generated
       14       14                    that involves notification of the Transport layer.
       15       15        */
       16       16        XSS$TSEND: PROC( VBLK) ALTRET;

     16  3 000000   000000 700200 xent  XSS$TSEND    TSX0  ! X66_AUTO_1
         3 000001   001130 000001                    ZERO    600,1

       17       17        %INCLUDE CP_6;
       18     5576            %B$ALT;
       19     5584            %B$TCB;
       20     5587            %FPT_WRITE( FPTN=AUWRT, STATION=NCSTA, TRANS=YES);
       21     5618            %FPT_WRITE( FPTN=NCWRT, STATION=XSS_AUSTA, TRANS=YES);
       22     5649            %VLP_ERRCODE( FPTN=ERRCODE);
       23     5694            %VLP_STATION( FPTN=XSS_AUSTA, STCLASS=SYMREF);
       24     5721            %VLP_STATION( FPTN=NCSTA, STCLASS=STATIC);
       25     5748        %INCLUDE K_ADDRESS_M;
       26     6251            %K$ADDRESS;
       27     6404        %INCLUDE K_INTERFACE_M;
       28     6813            %K$FPT_CONNECT_OSI( NAME=TCONFPT, STCLASS=AUTO);
       29     7150            %K$FPT_TERM_OSI( NAME=TDISFPT, STCLASS=AUTO);
       30     7368        %INCLUDE XSS_SESSION_E;
       31     7933        %INCLUDE XSS_SESSION_M;
       32    10576            %XSS$GENERIC( STCLASS="BASED( SFPT$)");
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:14   
       33    10722            %XSS$CONNECT( STCLASS="BASED( SFPT$)");
       34    11045        %INCLUDE XSS_INTERNAL_E;
       35    11343        %INCLUDE XSS_INTERNAL_M;
       36    11932            %XSS$GLUE( NAME=GLUE, STCLASS="BASED( GLUE$)");
       37    11962            %XSS$SCTX( NAME=SCTX, STCLASS="BASED( SCTX$)");
       38    12396            %XSS$VBLK( NAME=VBLK, STCLASS=);
       39    12501        %INCLUDE XSC_COMMON_M;
       40    13154            %XSC$ADDRESS;
       41    13437
       42    13438    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
       43    13439    1       DCL XSS$COMMWAITZ ENTRY(1) ALTRET;
       44    13440    1       DCL XSS$DUMPBYTES ENTRY(3) OPTIONAL;
       45    13441    1       DCL XSS$SCREECH ENTRY(1);
       46    13442    1       DCL XSS$EVLOG ENTRY(2);
       47    13443
       48    13444    1       DCL B$TCB$ PTR SYMREF;
       49    13445    1       DCL XSS_DEBUG UBIN SYMREF;
       50    13446    1       DCL XSS_OTRACE SBIN SYMREF;
       51    13447
       52    13448    1       DCL CREDITING BIT(1);
       53    13449    1       DCL GLUEBUF CHAR(2048) CALIGNED;
       54    13450    1       DCL GLUE_ VECTOR;
       55    13451    1       DCL GLUE$ PTR CALIGNED;
       56    13452    1       DCL SCTX$ PTR;
       57    13453    1       DCL SFPT$ PTR;
       58    13454    1       DCL UADR$ PTR;
       59    13455    1       DCL AUTITLE CHAR(0) CONSTANT INIT( '(XSS$TSEND) AU sent');
       60    13456    1       DCL AUTITLE_ VECTOR CONSTANT INIT( VECTOR( AUTITLE));
       61    13457    1       DCL NCTITLE CHAR(0) CONSTANT INIT( '(XSS$TSEND) NC sent');
       62    13458    1       DCL NCTITLE_ VECTOR CONSTANT INIT( VECTOR( NCTITLE));
       63    13459
       64    13460    1       CREDITING = %FALSE;

  13460  3 000002   200105 450100                    STZ     CREDITING,,AUTO

       65    13461    1       SCTX$ = VBLK.CTX$;

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:15   
  13461  3 000003   200003 470500                    LDP0    @VBLK,,AUTO
         3 000004   000000 236100                    LDQ     0,,PR0
         3 000005   201111 756100                    STQ     SCTX$,,AUTO

       66    13462    1   COMMON:
       67    13463    1       GLUE$ = ADDR( GLUEBUF);

  13463  3 000006   200106 630500       COMMON       EPPR0   GLUEBUF,,AUTO
         3 000007   201110 450500                    STP0    GLUE$,,AUTO

       68    13464    1       GLUE_ = VECTOR( GLUEBUF);

  13464  3 000010   000000 235000 4                  LDA     0
         3 000011   201120 452500                    STP2    D$+1,,AUTO
         3 000012   201120 236100                    LDQ     D$+1,,AUTO
         3 000013   000106 036003                    ADLQ    70,DU
         3 000014   201106 757100                    STAQ    GLUE_,,AUTO

       69    13465    1       VBOUND( GLUE_) = 3;  /* this is updated by MOVEBYTES later on */

  13465  3 000015   201106 236100                    LDQ     GLUE_,,AUTO
         3 000016   177777 376007                    ANQ     65535,DL
         3 000017   600000 276007                    ORQ     -65536,DL
         3 000020   201106 756100                    STQ     GLUE_,,AUTO

       70    13466    1       GLUE = '0'B;

  13466  3 000021   000000 450100                    STZ     0,,PR0
         3 000022   000001 450100                    STZ     1,,PR0

       71    13467    1       GLUE.MYSCID = SCTX.SCID;

  13467  3 000023   201111 471500                    LDP1    SCTX$,,AUTO
         3 000024   100015 236100                    LDQ     13,,PR1
         3 000025   000011 736000                    QLS     9
         3 000026   000000 552140                    STBQ    0,'40'O,PR0

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:16   
       72    13468    1       GLUE.YRSCID = SCTX.PEERSCID;

  13468  3 000027   100015 236100                    LDQ     13,,PR1
         3 000030   000022 772000                    QRL     18
         3 000031   000000 552110                    STBQ    0,'10'O,PR0

       73    13469    1       GLUE.MAGIC = SCTX.MAGIC;

  13469  3 000032   100015 236100                    LDQ     13,,PR1
         3 000033   000000 552104                    STBQ    0,'04'O,PR0

       74    13470    1       SFPT$ = VBLK.FPT$;

  13470  3 000034   200003 473500                    LDP3    @VBLK,,AUTO
         3 000035   300002 236100                    LDQ     2,,PR3
         3 000036   201112 756100                    STQ     SFPT$,,AUTO

       75    13471    2       IF CREDITING THEN DO;

  13471  3 000037   200105 234100                    SZN     CREDITING,,AUTO
         3 000040   000125 605000 3                  TPL     s:13488

       76    13472                /* Send this credit message by a quicker path */
       77    13473    2   CREDIT:
       78    13474    3           IF SCTX.STATION = 'MONITOR ' THEN DO;

  13474  3 000041   201111 470500       CREDIT       LDP0    SCTX$,,AUTO
         3 000042   040000 106500                    CMPC    fill='040'O
         3 000043   000027 000010                    ADSC9   23,,PR0                  cn=0,n=8
         3 000044   000020 000010 2                  ADSC9   NCTITLE_+2               cn=0,n=8
         3 000045   000124 601000 3                  TNZ     s:13486

       79    13475    3               NCSTA.STATION# = SCTX.STATION;

  13475  3 000046   040000 100500                    MLR     fill='040'O
         3 000047   000027 000010                    ADSC9   23,,PR0                  cn=0,n=8
         3 000050   000031 000010 1                  ADSC9   NCSTA                    cn=0,n=8
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:17   

       80    13476    3               SFPT$ = ADDR( NIL);

  13476  3 000051   000001 236000 4                  LDQ     1
         3 000052   201112 756100                    STQ     SFPT$,,AUTO

       81    13477    3               VBOUND( GLUE_) = 3;

  13477  3 000053   201106 236100                    LDQ     GLUE_,,AUTO
         3 000054   177777 376007                    ANQ     65535,DL
         3 000055   600000 276007                    ORQ     -65536,DL
         3 000056   201106 756100                    STQ     GLUE_,,AUTO

       82    13478    3               GLUE.TRNFNC = %K_TCREDIT;

  13478  3 000057   201110 471500                    LDP1    GLUE$,,AUTO
         3 000060   000032 236003                    LDQ     26,DU
         3 000061   100000 552120                    STBQ    0,'20'O,PR1

       83    13479    3               IF XSS_OTRACE ~= 0 THEN

  13479  3 000062   000000 235000 xsym               LDA     XSS_OTRACE
         3 000063   000076 600000 3                  TZE     s:13481

       84    13480    3                   CALL XSS$DUMPBYTES( 0, GLUE_, AUTITLE_);

  13480  3 000064   000004 236000 4                  LDQ     4
         3 000065   201122 756100                    STQ     D$+3,,AUTO
         3 000066   201106 633500                    EPPR3   GLUE_,,AUTO
         3 000067   201121 453500                    STP3    D$+2,,AUTO
         3 000070   000005 236000 4                  LDQ     5
         3 000071   201120 756100                    STQ     D$+1,,AUTO
         3 000072   201120 630500                    EPPR0   D$+1,,AUTO
         3 000073   000002 631400 4                  EPPR1   2
         3 000074   000000 701000 xent               TSX1    XSS$DUMPBYTES
         3 000075   000000 011000                    NOP     0

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:18   
       85    13481    3               AUWRT.BUF_ = GLUE_;

  13481  3 000076   201106 237100                    LDAQ    GLUE_,,AUTO
         3 000077   000004 757000 1                  STAQ    AUWRT+4

       86    13482    3               AUWRT.V.DCB# = SCTX.DCB#;

  13482  3 000100   201111 470500                    LDP0    SCTX$,,AUTO
         3 000101   000033 720100                    LXL0    27,,PR0
         3 000102   000010 740000 1                  STX0    AUWRT+8

       87    13483    3               CALL XSS$EVLOG( 'WR', %K_TCREDIT*512 + SCTX.SCID);

  13483  3 000103   000015 236100                    LDQ     13,,PR0
         3 000104   000022 772000                    QRL     18
         3 000105   000777 376007                    ANQ     511,DL
         3 000106   032000 036007                    ADLQ    13312,DL
         3 000107   201120 756100                    STQ     D$+1,,AUTO
         3 000110   201120 631500                    EPPR1   D$+1,,AUTO
         3 000111   201123 451500                    STP1    D$+4,,AUTO
         3 000112   000007 236000 4                  LDQ     7
         3 000113   201122 756100                    STQ     D$+3,,AUTO
         3 000114   201122 630500                    EPPR0   D$+3,,AUTO
         3 000115   000006 631400 4                  EPPR1   6
         3 000116   000000 701000 xent               TSX1    XSS$EVLOG
         3 000117   000000 011000                    NOP     0

       88    13484    3               CALL M$WRITE( AUWRT) ALTRET( WRTERR);

  13484  3 000120   000000 630400 1                  EPPR0   AUWRT
         3 000121   440001 713400                    CLIMB   alt,write
         3 000122   401400 401760                    pmme    nvectors=4
         3 000123   000566 702000 3                  TSX2    WRTERR

       89    13485    3               END;

       90    13486    2           RETURN;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:19   

  13486  3 000124   000000 702200 xent               TSX2  ! X66_ARET

       91    13487    2           END;
       92    13488    2       DO SELECT( VBLK.EVENT);

  13488  3 000125   300001 236100                    LDQ     1,,PR3
         3 000126   000777 376007                    ANQ     511,DL
         3 000127   000037 116007                    CMPQ    31,DL
         3 000130   000151 602000 3                  TNC     s:13488+20
         3 000131   000360 600000 3                  TZE     s:13533
         3 000132   000060 116007                    CMPQ    48,DL
         3 000133   000143 602000 3                  TNC     s:13488+14
         3 000134   000166 600000 3                  TZE     s:13490
         3 000135   000062 116007                    CMPQ    50,DL
         3 000136   000364 602000 3                  TNC     NORMAL
         3 000137   000217 600000 3                  TZE     s:13500
         3 000140   000064 116007                    CMPQ    52,DL
         3 000141   000364 601000 3                  TNZ     NORMAL
         3 000142   000251 710000 3                  TRA     s:13510
         3 000143   000040 116007                    CMPQ    32,DL
         3 000144   000364 602000 3                  TNC     NORMAL
         3 000145   000360 600000 3                  TZE     s:13533
         3 000146   000041 116007                    CMPQ    33,DL
         3 000147   000364 601000 3                  TNZ     NORMAL
         3 000150   000360 710000 3                  TRA     s:13533
         3 000151   000003 116007                    CMPQ    3,DL
         3 000152   000157 602000 3                  TNC     s:13488+26
         3 000153   000331 600000 3                  TZE     s:13523
         3 000154   000024 116007                    CMPQ    20,DL
         3 000155   000364 601000 3                  TNZ     NORMAL
         3 000156   000360 710000 3                  TRA     s:13533
         3 000157   000002 116007                    CMPQ    2,DL
         3 000160   000163 602000 3                  TNC     s:13488+30
         3 000161   000331 600000 3                  TZE     s:13523
         3 000162   000364 710000 3                  TRA     NORMAL
         3 000163   000001 116007                    CMPQ    1,DL
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:20   
         3 000164   000364 601000 3                  TNZ     NORMAL
         3 000165   000331 710000 3                  TRA     s:13523

       93    13489    2           SELECT( %XSS_SEV_TCONREQ);

       94    13490    2               SCTX.MODE = %CLIENT;

  13490  3 000166   000001 236007                    LDQ     1,DL
         3 000167   100013 552104                    STBQ    11,'04'O,PR1

       95    13491    2               SCTX.STATION = XSS_AUSTA.STATION#;

  13491  3 000170   040100 100400                    MLR     fill='040'O
         3 000171   000000 000010 xsym               ADSC9   XSS_AUSTA                cn=0,n=8
         3 000172   100027 000010                    ADSC9   23,,PR1                  cn=0,n=8

       96    13492                    /* fill in params for T-CONNECT Request */
       97    13493    2               TCONFPT = '0'B;

  13493  3 000173   000100 100400                    MLR     fill='000'O
         3 000174   000003 000001 4                  ADSC9   3                        cn=0,n=1
         3 000175   200004 000214                    ADSC9   TCONFPT,,AUTO            cn=0,n=140

       98    13494    2               TCONFPT.SCID = GLUE.MYSCID;

  13494  3 000176   000000 236100                    LDQ     0,,PR0
         3 000177   000033 772000                    QRL     27
         3 000200   200011 756100                    STQ     TCONFPT+5,,AUTO

       99    13495    2               CALL ADDRSETUP;

  13495  3 000201   000633 701000 3                  TSX1    ADDRSETUP
         3 000202   000000 011000                    NOP     0

      100    13496    2               GLUE.TRNFNC = %K_TCONNECT_REQ;

  13496  3 000203   201110 470500                    LDP0    GLUE$,,AUTO
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:21   
         3 000204   000025 236003                    LDQ     21,DU
         3 000205   000000 552120                    STBQ    0,'20'O,PR0

      101    13497    2               CALL MOVEBYTES( SIZEC( TCONFPT), ADDR( TCONFPT));

  13497  3 000206   200004 631500                    EPPR1   TCONFPT,,AUTO
         3 000207   201124 451500                    STP1    D$+5,,AUTO
         3 000210   201124 633500                    EPPR3   D$+5,,AUTO
         3 000211   201116 453500                    STP3    @LEN+1,,AUTO
         3 000212   000011 236000 4                  LDQ     9
         3 000213   201115 756100                    STQ     UADR$+2,,AUTO
         3 000214   000745 701000 3                  TSX1    MOVEBYTES
         3 000215   000000 011000                    NOP     0
         3 000216   000406 710000 3                  TRA     s:13543

      102    13498    2           SELECT( %XSS_SEV_TCONRSP);

      103    13499                    /* fill in params for T-CONNECT Response */
      104    13500    2               TCONFPT = '0'B;

  13500  3 000217   000100 100400                    MLR     fill='000'O
         3 000220   000003 000001 4                  ADSC9   3                        cn=0,n=1
         3 000221   200004 000214                    ADSC9   TCONFPT,,AUTO            cn=0,n=140

      105    13501                    /*N* Eventually this should echo the T-CONNECT Indication params
      106    13502                         found in the FPT_CONNECT_OSI framed by VBLK.PDU */
      107    13503    2               TCONFPT.SCID = GLUE.MYSCID;

  13503  3 000222   000000 236100                    LDQ     0,,PR0
         3 000223   000033 772000                    QRL     27
         3 000224   200011 756100                    STQ     TCONFPT+5,,AUTO

      108    13504    2               CALL ADDRSETUP;

  13504  3 000225   000633 701000 3                  TSX1    ADDRSETUP
         3 000226   000000 011000                    NOP     0

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:22   
      109    13505    2               TCONFPT.TR_FLAGS.EXPEDITED = SCTX.FLAGS.TEXP;

  13505  3 000227   201111 470500                    LDP0    SCTX$,,AUTO
         3 000230   000006 236100                    LDQ     6,,PR0
         3 000231   000013 772000                    QRL     11
         3 000232   200010 676100                    ERQ     TCONFPT+4,,AUTO
         3 000233   000002 376007                    ANQ     2,DL
         3 000234   200010 656100                    ERSQ    TCONFPT+4,,AUTO

      110    13506    2               GLUE.TRNFNC = %K_TCONNECT_RSP;

  13506  3 000235   201110 471500                    LDP1    GLUE$,,AUTO
         3 000236   000026 236003                    LDQ     22,DU
         3 000237   100000 552120                    STBQ    0,'20'O,PR1

      111    13507    2               CALL MOVEBYTES( SIZEC( TCONFPT), ADDR( TCONFPT));

  13507  3 000240   200004 633500                    EPPR3   TCONFPT,,AUTO
         3 000241   201125 453500                    STP3    D$+6,,AUTO
         3 000242   201125 634500                    EPPR4   D$+6,,AUTO
         3 000243   201116 454500                    STP4    @LEN+1,,AUTO
         3 000244   000011 236000 4                  LDQ     9
         3 000245   201115 756100                    STQ     UADR$+2,,AUTO
         3 000246   000745 701000 3                  TSX1    MOVEBYTES
         3 000247   000000 011000                    NOP     0
         3 000250   000406 710000 3                  TRA     s:13543

      112    13508    2           SELECT( %XSS_SEV_TDISREQ);

      113    13509                    /* fill in params for T-DISCONNECT Request */
      114    13510    2               TDISFPT = '0'B;

  13510  3 000251   000100 100400                    MLR     fill='000'O
         3 000252   000003 000001 4                  ADSC9   3                        cn=0,n=1
         3 000253   200047 000170                    ADSC9   TDISFPT,,AUTO            cn=0,n=120

      115    13511    2               TDISFPT.REASON = 0; /*N* ??? */
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:23   

  13511  3 000254   200047 450100                    STZ     TDISFPT,,AUTO

      116    13512    2               CALL XSS$BUFPTR( SCTX.SRCX, UADR$);

  13512  3 000255   201113 634500                    EPPR4   UADR$,,AUTO
         3 000256   201121 454500                    STP4    D$+2,,AUTO
         3 000257   201111 236100                    LDQ     SCTX$,,AUTO
         3 000260   000003 036003                    ADLQ    3,DU
         3 000261   201120 756100                    STQ     D$+1,,AUTO
         3 000262   201120 630500                    EPPR0   D$+1,,AUTO
         3 000263   000006 631400 4                  EPPR1   6
         3 000264   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000265   000000 011000                    NOP     0

      117    13513    2               TDISFPT.SRC_TSAP = UADR$->XSC$ADDRESS.TSAP;

  13513  3 000266   201113 470500                    LDP0    UADR$,,AUTO
         3 000267   000100 100500                    MLR     fill='000'O
         3 000270   000075 000042                    ADSC9   61,,PR0                  cn=0,n=34
         3 000271   200050 000042                    ADSC9   TDISFPT+1,,AUTO          cn=0,n=34

      118    13514    2               TDISFPT.SRC_NSAP = UADR$->XSC$ADDRESS.NSAP;

  13514  3 000272   000100 100500                    MLR     fill='000'O
         3 000273   000106 000026                    ADSC9   70,,PR0                  cn=0,n=22
         3 000274   200072 000026                    ADSC9   TDISFPT+19,,AUTO         cn=0,n=22

      119    13515    2               CALL XSS$BUFPTR( SCTX.DSTX, UADR$);

  13515  3 000275   201113 631500                    EPPR1   UADR$,,AUTO
         3 000276   201121 451500                    STP1    D$+2,,AUTO
         3 000277   201111 236100                    LDQ     SCTX$,,AUTO
         3 000300   000012 036000 4                  ADLQ    10
         3 000301   201120 756100                    STQ     D$+1,,AUTO
         3 000302   201120 630500                    EPPR0   D$+1,,AUTO
         3 000303   000006 631400 4                  EPPR1   6
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:24   
         3 000304   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000305   000000 011000                    NOP     0

      120    13516    2               TDISFPT.DST_TSAP = UADR$->XSC$ADDRESS.TSAP;

  13516  3 000306   201113 470500                    LDP0    UADR$,,AUTO
         3 000307   000100 100500                    MLR     fill='000'O
         3 000310   000075 000042                    ADSC9   61,,PR0                  cn=0,n=34
         3 000311   200061 000042                    ADSC9   TDISFPT+10,,AUTO         cn=0,n=34

      121    13517    2               TDISFPT.DST_NSAP = UADR$->XSC$ADDRESS.NSAP;

  13517  3 000312   000100 100500                    MLR     fill='000'O
         3 000313   000106 000026                    ADSC9   70,,PR0                  cn=0,n=22
         3 000314   200077 400026                    ADSC9   TDISFPT+24,,AUTO         cn=2,n=22

      122    13518    2               GLUE.TRNFNC = %K_TDISCONNECT_REQ;

  13518  3 000315   201110 471500                    LDP1    GLUE$,,AUTO
         3 000316   000031 236003                    LDQ     25,DU
         3 000317   100000 552120                    STBQ    0,'20'O,PR1

      123    13519    2               CALL MOVEBYTES( SIZEC( TDISFPT), ADDR( TDISFPT));

  13519  3 000320   200047 630500                    EPPR0   TDISFPT,,AUTO
         3 000321   201126 450500                    STP0    D$+7,,AUTO
         3 000322   201126 633500                    EPPR3   D$+7,,AUTO
         3 000323   201116 453500                    STP3    @LEN+1,,AUTO
         3 000324   000014 236000 4                  LDQ     12
         3 000325   201115 756100                    STQ     UADR$+2,,AUTO
         3 000326   000745 701000 3                  TSX1    MOVEBYTES
         3 000327   000000 011000                    NOP     0
         3 000330   000406 710000 3                  TRA     s:13543

      124    13520    2           SELECT( %XSS_SEV_AB_NR,

      125    13521    2                   %XSS_SEV_AB_R,
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:25   
      126    13522    2                   %XSS_SEV_AA);
      127    13523    2               IF NOT SCTX.FLAGS.TEXP THEN

  13523  3 000331   100006 236100                    LDQ     6,,PR1
         3 000332   010000 316007                    CANQ    4096,DL
         3 000333   000364 600000 3                  TZE     NORMAL

      128    13524    2                   GOTO NORMAL;
      129    13525    2   EXPEDITED:
      130    13526    2               GLUE.TRNFNC = %K_TEXPD_DATA_REQ;

  13526  3 000334   201110 470500       EXPEDITED    LDP0    GLUE$,,AUTO
         3 000335   000030 236003                    LDQ     24,DU
         3 000336   000000 552120                    STBQ    0,'20'O,PR0

      131    13527    2               CALL MOVEBYTES( VBLK.PDU.SIZE, VBLK.PDU.PTR$);

  13527  3 000337   200003 236100                    LDQ     @VBLK,,AUTO
         3 000340   000004 036003                    ADLQ    4,DU
         3 000341   201116 756100                    STQ     @LEN+1,,AUTO
         3 000342   200003 236100                    LDQ     @VBLK,,AUTO
         3 000343   000005 036003                    ADLQ    5,DU
         3 000344   201115 756100                    STQ     UADR$+2,,AUTO
         3 000345   000745 701000 3                  TSX1    MOVEBYTES
         3 000346   000000 011000                    NOP     0

      132    13528    2               CALL MOVEBYTES( VBLK.DAT.SIZE, VBLK.DAT.PTR$);

  13528  3 000347   200003 236100                    LDQ     @VBLK,,AUTO
         3 000350   000006 036003                    ADLQ    6,DU
         3 000351   201116 756100                    STQ     @LEN+1,,AUTO
         3 000352   200003 236100                    LDQ     @VBLK,,AUTO
         3 000353   000007 036003                    ADLQ    7,DU
         3 000354   201115 756100                    STQ     UADR$+2,,AUTO
         3 000355   000745 701000 3                  TSX1    MOVEBYTES
         3 000356   000000 011000                    NOP     0
         3 000357   000406 710000 3                  TRA     s:13543
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:26   

      133    13529    2           SELECT( %XSS_SEV_EX,

      134    13530    2                   %XSS_SEV_PR_MAA,
      135    13531    2                   %XSS_SEV_PR_RA,
      136    13532    2                   %XSS_SEV_PR_RS);
      137    13533    2               IF SCTX.FLAGS.TEXP THEN

  13533  3 000360   100006 236100                    LDQ     6,,PR1
         3 000361   010000 316007                    CANQ    4096,DL
         3 000362   000334 601000 3                  TNZ     EXPEDITED

      138    13534    2                   GOTO EXPEDITED;
      139    13535    2               RETURN;  /* don't send this PDU! */

  13535  3 000363   000000 702200 xent               TSX2  ! X66_ARET

      140    13536    2           SELECT( ELSE);

      141    13537    2   NORMAL:
      142    13538    2               GLUE.TRNFNC = %K_TDATA_REQ;

  13538  3 000364   000027 236003       NORMAL       LDQ     23,DU
         3 000365   000000 552120                    STBQ    0,'20'O,PR0

      143    13539    2               CALL MOVEBYTES( VBLK.PDU.SIZE, VBLK.PDU.PTR$);

  13539  3 000366   200003 236100                    LDQ     @VBLK,,AUTO
         3 000367   000004 036003                    ADLQ    4,DU
         3 000370   201116 756100                    STQ     @LEN+1,,AUTO
         3 000371   200003 236100                    LDQ     @VBLK,,AUTO
         3 000372   000005 036003                    ADLQ    5,DU
         3 000373   201115 756100                    STQ     UADR$+2,,AUTO
         3 000374   000745 701000 3                  TSX1    MOVEBYTES
         3 000375   000000 011000                    NOP     0

      144    13540    2               CALL MOVEBYTES( VBLK.DAT.SIZE, VBLK.DAT.PTR$);
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:27   

  13540  3 000376   200003 236100                    LDQ     @VBLK,,AUTO
         3 000377   000006 036003                    ADLQ    6,DU
         3 000400   201116 756100                    STQ     @LEN+1,,AUTO
         3 000401   200003 236100                    LDQ     @VBLK,,AUTO
         3 000402   000007 036003                    ADLQ    7,DU
         3 000403   201115 756100                    STQ     UADR$+2,,AUTO
         3 000404   000745 701000 3                  TSX1    MOVEBYTES
         3 000405   000000 011000                    NOP     0

      145    13541    2           END;

      146    13542            /* switch on whether AU or NC DCB */
      147    13543    2       DO CASE( SCTX.MODE);

  13543  3 000406   201111 470500                    LDP0    SCTX$,,AUTO
         3 000407   000013 720100                    LXL0    11,,PR0
         3 000410   000777 360003                    ANX0    511,DU
         3 000411   000003 100003                    CMPX0   3,DU
         3 000412   000414 602010 3                  TNC     s:13543+6,X0
         3 000413   000565 710000 3                  TRA     s:13568
         3 000414   000565 710000 3                  TRA     s:13568
         3 000415   000417 710000 3                  TRA     s:13545
         3 000416   000506 710000 3                  TRA     s:13558

      148    13544    2           CASE( %CLIENT);

      149    13545    2               IF XSS_OTRACE ~= 0 THEN

  13545  3 000417   000000 235000 xsym               LDA     XSS_OTRACE
         3 000420   000433 600000 3                  TZE     s:13547

      150    13546    2                   CALL XSS$DUMPBYTES( 0, GLUE_, NCTITLE_);

  13546  3 000421   000015 236000 4                  LDQ     13
         3 000422   201122 756100                    STQ     D$+3,,AUTO
         3 000423   201106 631500                    EPPR1   GLUE_,,AUTO
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:28   
         3 000424   201121 451500                    STP1    D$+2,,AUTO
         3 000425   000005 236000 4                  LDQ     5
         3 000426   201120 756100                    STQ     D$+1,,AUTO
         3 000427   201120 630500                    EPPR0   D$+1,,AUTO
         3 000430   000002 631400 4                  EPPR1   2
         3 000431   000000 701000 xent               TSX1    XSS$DUMPBYTES
         3 000432   000000 011000                    NOP     0

      151    13547    2               NCWRT.BUF_ = GLUE_;

  13547  3 000433   201106 237100                    LDAQ    GLUE_,,AUTO
         3 000434   000020 757000 1                  STAQ    NCWRT+4

      152    13548    2               IF XSS_DEBUG ~= 0 THEN

  13548  3 000435   000000 235000 xsym               LDA     XSS_DEBUG
         3 000436   000442 600000 3                  TZE     s:13551

      153    13549    2                   NCWRT.STATION_ = VECTOR( XSS_AUSTA);

  13549  3 000437   000016 237000 4                  LDAQ    14
         3 000440   000022 757000 1                  STAQ    NCWRT+6
         3 000441   000444 710000 3                  TRA     s:13552

      154    13550    2               ELSE
      155    13551    2                   NCWRT.STATION_ = VECTOR( NIL);

  13551  3 000442   000020 237000 4                  LDAQ    16
         3 000443   000022 757000 1                  STAQ    NCWRT+6

      156    13552    2               NCWRT.V.DCB# = SCTX.DCB#;

  13552  3 000444   201111 470500                    LDP0    SCTX$,,AUTO
         3 000445   000033 720100                    LXL0    27,,PR0
         3 000446   000024 740000 1                  STX0    NCWRT+8

      157    13553    2               CALL XSS$EVLOG( 'WR', GLUE.TRNFNC*512 + SCTX.SCID);
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:29   

  13553  3 000447   000015 236100                    LDQ     13,,PR0
         3 000450   000022 772000                    QRL     18
         3 000451   000777 376007                    ANQ     511,DL
         3 000452   201120 756100                    STQ     D$+1,,AUTO
         3 000453   201110 471500                    LDP1    GLUE$,,AUTO
         3 000454   100000 236100                    LDQ     0,,PR1
         3 000455   000011 772000                    QRL     9
         3 000456   777000 376007                    ANQ     -512,DL
         3 000457   201120 036100                    ADLQ    D$+1,,AUTO
         3 000460   201121 756100                    STQ     D$+2,,AUTO
         3 000461   201121 633500                    EPPR3   D$+2,,AUTO
         3 000462   201123 453500                    STP3    D$+4,,AUTO
         3 000463   000007 236000 4                  LDQ     7
         3 000464   201122 756100                    STQ     D$+3,,AUTO
         3 000465   201122 630500                    EPPR0   D$+3,,AUTO
         3 000466   000006 631400 4                  EPPR1   6
         3 000467   000000 701000 xent               TSX1    XSS$EVLOG
         3 000470   000000 011000                    NOP     0

      158    13554    2               CALL M$WRITE( NCWRT) ALTRET( WRTERR);

  13554  3 000471   000014 630400 1                  EPPR0   NCWRT
         3 000472   440001 713400                    CLIMB   alt,write
         3 000473   401400 401760                    pmme    nvectors=4
         3 000474   000566 702000 3                  TSX2    WRTERR

      159    13555    2               IF SCTX.NEEDAREAD THEN

  13555  3 000475   201111 470500                    LDP0    SCTX$,,AUTO
         3 000476   000013 236100                    LDQ     11,,PR0
         3 000477   004000 316007                    CANQ    2048,DL
         3 000500   000565 600000 3                  TZE     s:13568

      160    13556    2                   CALL XSS$COMMWAITZ( SCTX);

  13556  3 000501   201111 630500                    EPPR0   SCTX$,,AUTO
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:30   
         3 000502   000022 631400 4                  EPPR1   18
         3 000503   000000 701000 xent               TSX1    XSS$COMMWAITZ
         3 000504   000000 011000                    NOP     0
         3 000505   000565 710000 3                  TRA     s:13568

      161    13557    2           CASE( %SERVER);

      162    13558    2               IF XSS_OTRACE ~= 0 THEN

  13558  3 000506   000000 235000 xsym               LDA     XSS_OTRACE
         3 000507   000522 600000 3                  TZE     s:13560

      163    13559    2                   CALL XSS$DUMPBYTES( 0, GLUE_, AUTITLE_);

  13559  3 000510   000004 236000 4                  LDQ     4
         3 000511   201122 756100                    STQ     D$+3,,AUTO
         3 000512   201106 631500                    EPPR1   GLUE_,,AUTO
         3 000513   201121 451500                    STP1    D$+2,,AUTO
         3 000514   000005 236000 4                  LDQ     5
         3 000515   201120 756100                    STQ     D$+1,,AUTO
         3 000516   201120 630500                    EPPR0   D$+1,,AUTO
         3 000517   000002 631400 4                  EPPR1   2
         3 000520   000000 701000 xent               TSX1    XSS$DUMPBYTES
         3 000521   000000 011000                    NOP     0

      164    13560    2               AUWRT.BUF_ = GLUE_;

  13560  3 000522   201106 237100                    LDAQ    GLUE_,,AUTO
         3 000523   000004 757000 1                  STAQ    AUWRT+4

      165    13561    2               NCSTA.STATION# = SCTX.STATION;

  13561  3 000524   201111 470500                    LDP0    SCTX$,,AUTO
         3 000525   040000 100500                    MLR     fill='040'O
         3 000526   000027 000010                    ADSC9   23,,PR0                  cn=0,n=8
         3 000527   000031 000010 1                  ADSC9   NCSTA                    cn=0,n=8

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:31   
      166    13562    2               AUWRT.V.DCB# = SCTX.DCB#;

  13562  3 000530   000033 720100                    LXL0    27,,PR0
         3 000531   000010 740000 1                  STX0    AUWRT+8

      167    13563    2               CALL XSS$EVLOG( 'WR', GLUE.TRNFNC*512 + SCTX.SCID);

  13563  3 000532   000015 236100                    LDQ     13,,PR0
         3 000533   000022 772000                    QRL     18
         3 000534   000777 376007                    ANQ     511,DL
         3 000535   201120 756100                    STQ     D$+1,,AUTO
         3 000536   201110 471500                    LDP1    GLUE$,,AUTO
         3 000537   100000 236100                    LDQ     0,,PR1
         3 000540   000011 772000                    QRL     9
         3 000541   777000 376007                    ANQ     -512,DL
         3 000542   201120 036100                    ADLQ    D$+1,,AUTO
         3 000543   201121 756100                    STQ     D$+2,,AUTO
         3 000544   201121 633500                    EPPR3   D$+2,,AUTO
         3 000545   201123 453500                    STP3    D$+4,,AUTO
         3 000546   000007 236000 4                  LDQ     7
         3 000547   201122 756100                    STQ     D$+3,,AUTO
         3 000550   201122 630500                    EPPR0   D$+3,,AUTO
         3 000551   000006 631400 4                  EPPR1   6
         3 000552   000000 701000 xent               TSX1    XSS$EVLOG
         3 000553   000000 011000                    NOP     0

      168    13564    2               CALL M$WRITE( AUWRT) ALTRET( WRTERR);

  13564  3 000554   000000 630400 1                  EPPR0   AUWRT
         3 000555   440001 713400                    CLIMB   alt,write
         3 000556   401400 401760                    pmme    nvectors=4
         3 000557   000566 702000 3                  TSX2    WRTERR

      169    13565    2               IF GLUE.TRNFNC = %K_TCONNECT_RSP THEN

  13565  3 000560   201110 470500                    LDP0    GLUE$,,AUTO
         3 000561   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:32   
         3 000562   000777 376003                    ANQ     511,DU
         3 000563   000026 116003                    CMPQ    22,DU
         3 000564   000041 600000 3                  TZE     CREDIT

      170    13566    2                   GOTO CREDIT;
      171    13567    2           END;

      172    13568    1       RETURN;

  13568  3 000565   000000 702200 xent               TSX2  ! X66_ARET

      173    13569    1   WRTERR:
      174    13570    1       ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  13570  3 000566   000000 470400 xsym  WRTERR       LDP0    B$TCB$
         3 000567   000000 471500                    LDP1    0,,PR0
         3 000570   100102 236100                    LDQ     66,,PR1
         3 000571   000030 756000 1                  STQ     ERRCODE

      175    13571    1       CALL XSS$EVLOG( 'ER', SCTX.SCID);

  13571  3 000572   201111 236100                    LDQ     SCTX$,,AUTO
         3 000573   000023 036000 4                  ADLQ    19
         3 000574   000024 235000 4                  LDA     20
         3 000575   201120 757100                    STAQ    D$+1,,AUTO
         3 000576   201120 630500                    EPPR0   D$+1,,AUTO
         3 000577   000006 631400 4                  EPPR1   6
         3 000600   000000 701000 xent               TSX1    XSS$EVLOG
         3 000601   000000 011000                    NOP     0

      176    13572    1       CALL XSS$EVLOG( , ERRCODE);

  13572  3 000602   000025 236000 4                  LDQ     21
         3 000603   000001 235000 4                  LDA     1
         3 000604   201120 757100                    STAQ    D$+1,,AUTO
         3 000605   201120 630500                    EPPR0   D$+1,,AUTO
         3 000606   000006 631400 4                  EPPR1   6
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:33   
         3 000607   000000 701000 xent               TSX1    XSS$EVLOG
         3 000610   000000 011000                    NOP     0

      177    13573    2       IF SFPT$ = ADDR( NIL) THEN DO;

  13573  3 000611   201112 236100                    LDQ     SFPT$,,AUTO
         3 000612   000001 116000 4                  CMPQ    1
         3 000613   000627 601000 3                  TNZ     s:13579

      178    13574    2           IF ERRCODE.SEV = 0 THEN

  13574  3 000614   000030 236000 1                  LDQ     ERRCODE
         3 000615   000007 316007                    CANQ    7,DL
         3 000616   000622 601000 3                  TNZ     s:13576

      179    13575    2               ERRCODE.SEV = 1;

  13575  3 000617   000026 376000 4                  ANQ     22
         3 000620   000001 276007                    ORQ     1,DL
         3 000621   000030 756000 1                  STQ     ERRCODE

      180    13576    2           CALL XSS$SCREECH( ERRCODE);

  13576  3 000622   000025 630400 4                  EPPR0   21
         3 000623   000022 631400 4                  EPPR1   18
         3 000624   000000 701000 xent               TSX1    XSS$SCREECH
         3 000625   000000 011000                    NOP     0

      181    13577    2           END;

  13577  3 000626   000632 710000 3                  TRA     s:13581

      182    13578    1       ELSE
      183    13579    1           XSS$GENERIC.ERROR = ERRCODE;

  13579  3 000627   000030 236000 1                  LDQ     ERRCODE
         3 000630   201112 470500                    LDP0    SFPT$,,AUTO
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:34   
         3 000631   000001 756100                    STQ     1,,PR0

      184    13580            /* Caller sets SCTX.ABORTING which simulates T-DISCONNECT Indication */
      185    13581    1       ALTRETURN;

  13581  3 000632   000000 702200 xent               TSX2  ! X66_AALT

      186    13582        %EJECT;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:35   
      187    13583    1   ADDRSETUP: PROC;

  13583  3 000633   201114 741300       ADDRSETUP    STX1  ! UADR$+1,,AUTO

      188    13584
      189    13585        %XSC$CCB( NAME=CCB, STCLASS="BASED( CCB$)");
      190    13882
      191    13883    2       DCL XSS_CCB$$ PTR SYMREF;
      192    13884
      193    13885    2       DCL CCB$$(0:0) PTR BASED( XSS_CCB$$) ALIGNED;
      194    13886    2       DCL CCB$ PTR;
      195    13887
      196    13888    2       CCB$ = CCB$$( SCTX.SCID);

  13888  3 000634   201111 470500                    LDP0    SCTX$,,AUTO
         3 000635   000015 220100                    LDX0    13,,PR0
         3 000636   000777 360003                    ANX0    511,DU
         3 000637   000000 471400 xsym               LDP1    XSS_CCB$$
         3 000640   100000 236110                    LDQ     0,X0,PR1
         3 000641   201115 756100                    STQ     CCB$,,AUTO

      197    13889    2       TCONFPT.TPDUSIZE = CCB.TPARMS.TPDUSIZE;

  13889  3 000642   201115 473500                    LDP3    CCB$,,AUTO
         3 000643   300002 222100                    LDX2    2,,PR3
         3 000644   200006 742100                    STX2    TCONFPT+2,,AUTO

      198    13890    2       TCONFPT.WINDOWSZ = CCB.TPARMS.WINDOWSZ;

  13890  3 000645   300002 723100                    LXL3    2,,PR3
         3 000646   200006 443100                    SXL3    TCONFPT+2,,AUTO

      199    13891    2       TCONFPT.TIMER1 = CCB.TPARMS.TIMER1;

  13891  3 000647   300003 224100                    LDX4    3,,PR3
         3 000650   200007 744100                    STX4    TCONFPT+3,,AUTO

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:36   
      200    13892    2       TCONFPT.TIMER2 = CCB.TPARMS.TIMER2;

  13892  3 000651   300003 725100                    LXL5    3,,PR3
         3 000652   200007 445100                    SXL5    TCONFPT+3,,AUTO

      201    13893    2       TCONFPT.QOS = CCB.TPARMS.QOS;

  13893  3 000653   300004 236100                    LDQ     4,,PR3
         3 000654   200010 552140                    STBQ    TCONFPT+4,'40'O,AUTO

      202    13894    2       TCONFPT.CLASS = CCB.TPARMS.CLASS;

  13894  3 000655   300004 236100                    LDQ     4,,PR3
         3 000656   200010 552120                    STBQ    TCONFPT+4,'20'O,AUTO

      203    13895    2       TCONFPT.TR_FLAGS = CCB.TPARMS.TR_FLAGS;

  13895  3 000657   300004 726100                    LXL6    4,,PR3
         3 000660   200010 446100                    SXL6    TCONFPT+4,,AUTO

      204    13896    2       IF VBLK.EVENT = %XSS_SEV_TCONREQ THEN

  13896  3 000661   200003 474500                    LDP4    @VBLK,,AUTO
         3 000662   400001 236100                    LDQ     1,,PR4
         3 000663   000777 376007                    ANQ     511,DL
         3 000664   000060 116007                    CMPQ    48,DL
         3 000665   000703 601000 3                  TNZ     s:13898

      205    13897    2           TCONFPT.TR_FLAGS.EXPEDITED = XSS$CONNECT.SFU.EX | CCB.TPARMS.TR_FLAGS.
             13897                    EXPEDITED;

  13897  3 000666   300004 236100                    LDQ     4,,PR3
         3 000667   000042 736000                    QLS     34
         3 000670   400000 376003                    ANQ     -131072,DU
         3 000671   201120 756100                    STQ     D$+1,,AUTO
         3 000672   201112 475500                    LDP5    SFPT$,,AUTO
         3 000673   500010 236100                    LDQ     8,,PR5
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:37   
         3 000674   000037 736000                    QLS     31
         3 000675   400000 376003                    ANQ     -131072,DU
         3 000676   201120 276100                    ORQ     D$+1,,AUTO
         3 000677   000042 772000                    QRL     34
         3 000700   200010 676100                    ERQ     TCONFPT+4,,AUTO
         3 000701   000002 376007                    ANQ     2,DL
         3 000702   200010 656100                    ERSQ    TCONFPT+4,,AUTO

      206    13898    2       CALL XSS$BUFPTR( SCTX.SRCX, UADR$);

  13898  3 000703   201113 635500                    EPPR5   UADR$,,AUTO
         3 000704   201121 455500                    STP5    D$+2,,AUTO
         3 000705   201111 236100                    LDQ     SCTX$,,AUTO
         3 000706   000003 036003                    ADLQ    3,DU
         3 000707   201120 756100                    STQ     D$+1,,AUTO
         3 000710   201120 630500                    EPPR0   D$+1,,AUTO
         3 000711   000006 631400 4                  EPPR1   6
         3 000712   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000713   000000 011000                    NOP     0

      207    13899    2       TCONFPT.SRC_TSAP = UADR$->XSC$ADDRESS.TSAP;

  13899  3 000714   201113 470500                    LDP0    UADR$,,AUTO
         3 000715   000100 100500                    MLR     fill='000'O
         3 000716   000075 000042                    ADSC9   61,,PR0                  cn=0,n=34
         3 000717   200012 000042                    ADSC9   TCONFPT+6,,AUTO          cn=0,n=34

      208    13900    2       TCONFPT.SRC_NSAP = UADR$->XSC$ADDRESS.NSAP;

  13900  3 000720   000100 100500                    MLR     fill='000'O
         3 000721   000106 000026                    ADSC9   70,,PR0                  cn=0,n=22
         3 000722   200034 000026                    ADSC9   TCONFPT+24,,AUTO         cn=0,n=22

      209    13901    2       CALL XSS$BUFPTR( SCTX.DSTX, UADR$);

  13901  3 000723   201113 631500                    EPPR1   UADR$,,AUTO
         3 000724   201121 451500                    STP1    D$+2,,AUTO
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:38   
         3 000725   201111 236100                    LDQ     SCTX$,,AUTO
         3 000726   000012 036000 4                  ADLQ    10
         3 000727   201120 756100                    STQ     D$+1,,AUTO
         3 000730   201120 630500                    EPPR0   D$+1,,AUTO
         3 000731   000006 631400 4                  EPPR1   6
         3 000732   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000733   000000 011000                    NOP     0

      210    13902    2       TCONFPT.DST_TSAP = UADR$->XSC$ADDRESS.TSAP;

  13902  3 000734   201113 470500                    LDP0    UADR$,,AUTO
         3 000735   000100 100500                    MLR     fill='000'O
         3 000736   000075 000042                    ADSC9   61,,PR0                  cn=0,n=34
         3 000737   200023 000042                    ADSC9   TCONFPT+15,,AUTO         cn=0,n=34

      211    13903    2       TCONFPT.DST_NSAP = UADR$->XSC$ADDRESS.NSAP;

  13903  3 000740   000100 100500                    MLR     fill='000'O
         3 000741   000106 000026                    ADSC9   70,,PR0                  cn=0,n=22
         3 000742   200041 400026                    ADSC9   TCONFPT+29,,AUTO         cn=2,n=22

      212    13904    2       RETURN;

  13904  3 000743   201114 221300                    LDX1  ! UADR$+1,,AUTO
         3 000744   000001 702211                    TSX2  ! 1,X1

      213    13905
      214    13906    2       END ADDRSETUP;
      215    13907        %EJECT;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:39   
      216    13908    1   MOVEBYTES: PROC( LEN, S$);

  13908  3 000745   201114 741300       MOVEBYTES    STX1  ! UADR$+1,,AUTO

      217    13909    2       DCL DESTINATION CHAR( LEN) BASED( D$) CALIGNED;
      218    13910    2       DCL D$ PTR CALIGNED;
      219    13911    2       DCL LEN SBIN;
      220    13912    2       DCL SOURCE CHAR( LEN) BASED( S$) CALIGNED;
      221    13913    2       DCL S$ PTR CALIGNED;
      222    13914
      223    13915    3       IF LEN > 0 THEN DO;

  13915  3 000746   201115 470500                    LDP0    @LEN,,AUTO
         3 000747   000000 235100                    LDA     0,,PR0
         3 000750   001003 604400 3                  TMOZ    s:13920

      224    13916    3           D$ = PINCRC( VBASE( GLUE_), 1 + VBOUND( GLUE_));

  13916  3 000751   201106 236100                    LDQ     GLUE_,,AUTO
         3 000752   000020 772000                    QRL     16
         3 000753   000020 736000                    QLS     16
         3 000754   200000 036007                    ADLQ    65536,DL
         3 000755   201107 036100                    ADLQ    GLUE_+1,,AUTO
         3 000756   201117 756100                    STQ     D$,,AUTO

      225    13917    3           CALL INSERT( DESTINATION, 0, LEN, SOURCE);

  13917  3 000757   000000 720100                    LXL0    0,,PR0
         3 000760   201116 471500                    LDP1    @S$,,AUTO
         3 000761   000100 100500                    MLR     fill='000'O
         3 000762   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         3 000763   201120 000004                    ADSC9   D$+1,,AUTO               cn=0,n=4
         3 000764   201120 473500                    LDP3    D$+1,,AUTO
         3 000765   000000 722100                    LXL2    0,,PR0
         3 000766   201121 742100                    STX2    D$+2,,AUTO
         3 000767   201121 220100                    LDX0    D$+2,,AUTO
         3 000770   201117 474500                    LDP4    D$,,AUTO
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:40   
         3 000771   040140 100540                    MLR     fill='040'O
         3 000772   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         3 000773   400000 000012                    ADSC9   0,,PR4                   cn=0,n=*X2

      226    13918    3           VBOUND( GLUE_) = LEN + VBOUND( GLUE_);

  13918  3 000774   201106 236100                    LDQ     GLUE_,,AUTO
         3 000775   000020 772000                    QRL     16
         3 000776   000000 036100                    ADLQ    0,,PR0
         3 000777   000020 736000                    QLS     16
         3 001000   201106 676100                    ERQ     GLUE_,,AUTO
         3 001001   000027 376000 4                  ANQ     23
         3 001002   201106 656100                    ERSQ    GLUE_,,AUTO

      227    13919    3           END;

      228    13920    2       RETURN;

  13920  3 001003   201114 221300                    LDX1  ! UADR$+1,,AUTO
         3 001004   000001 702211                    TSX2  ! 1,X1

      229    13921
      230    13922    2       END MOVEBYTES;
      231    13923        %EJECT;
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:41   
      232    13924        /*F*    NAME:   XSS$TCREDIT
      233    13925                PURPOSE:
      234    13926                    This routine is called whenever an M$READ is issued by a server
      235    13927                    endpoint.  It sends a short message to the Transport layer
      236    13928                    incrementing the credits for a particular connection.
      237    13929        */
      238    13930    1   XSS$TCREDIT: ENTRY( VBLK) ALTRET;

  13930  3 001005   000000 700200 xent  XSS$TCREDIT  TSX0  ! X66_AUTO_1
         3 001006   001130 000001                    ZERO    600,1

      239    13931
      240    13932    1       CREDITING = %TRUE;

  13932  3 001007   400000 236003                    LDQ     -131072,DU
         3 001010   200105 756100                    STQ     CREDITING,,AUTO

      241    13933    1       SCTX$ = ADDR( VBLK);  /* SCTX is passed as param, not VBLK */

  13933  3 001011   200003 236100                    LDQ     @VBLK,,AUTO
         3 001012   201111 756100                    STQ     SCTX$,,AUTO

      242    13934    1       GOTO COMMON;

  13934  3 001013   000006 710000 3                  TRA     COMMON

AUWRT
 Sect OctLoc
   1     000   000003 777640   000010 006000   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014   000007 777640   000031 006000    ................
   1     010   000000 400400   000000 000000   000000 000000   020000 000000    ................

NCWRT
 Sect OctLoc
   1     014   000003 777640   000024 006000   000000 177640   000000 006014    ................
   1     020   000000 177640   000000 006014   000007 777640   000000 006000    ................
   1     024   000000 400400   000000 000000   000000 000000   020000 000000    ................
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:42   

ERRCODE
 Sect OctLoc
   1     030   000000 000000                                                    ....

NCSTA
 Sect OctLoc
   1     031   040040 040040   040040 040040   040040 040040   040040 040040
   1     035   001000 000000   000000 000000   000000 000000   000000 000000    ................

AUTITLE
 Sect OctLoc
   2     000   050130 123123   044124 123105   116104 051040   101125 040163    (XSS$TSEND) AU s
   2     004   145156 164***                                                    ent.

(unnamed)
 Sect OctLoc
   2     006   000004 577640   000000 006000                                    ........

NCTITLE
 Sect OctLoc
   2     010   050130 123123   044124 123105   116104 051040   116103 040163    (XSS$TSEND) NC s
   2     014   145156 164***                                                    ent.

(unnamed)
 Sect OctLoc
   2     016   000004 577640   000010 006000   115117 116111   124117 122040    ........MONITOR
   2     022   127122 040040   105122 040040                                    WR  ER

(unnamed)
 Sect OctLoc
   4     000   000777 777640   000000 006014   000003 000000   000000 000000    ................
   4     004   000006 006000   000003 006000   000002 000000   000022 006000    ................
   4     010   000000 000214   000010 006000   000003 400000   000000 000170    ...............x
   4     014   000013 006000   000016 006000   000007 777640   000000 006000    ................
   4     020   000000 177640   000000 006014   000001 000000   000015 200000    ................
   4     024   000023 006000   000030 006000   777777 777770   777777 600000    ................
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:43   
      243    13935
      244    13936    1       END XSS$TSEND;
      245    13937        %EOD;

PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:44   
--  Include file information  --

   XSC_COMMON_M.:XSA1TOU  is referenced.
   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSS_INTERNAL_E.:XSA1TOU  is referenced.
   XSS_SESSION_M.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   K_INTERFACE_M.:E05OU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSS$TSEND.
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:45   

 **** Variables and constants ****

  ****  Section 001  Data  XSS$TSEND

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 AUWRT                     30-0-0/w STRC        r     1 ERRCODE
    31-0-0/w STRC(288)   r     1 NCSTA                     14-0-0/d STRC(432)   r     1 NCWRT

  ****  Section 002 RoData XSS$TSEND

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(19)    r     1 AUTITLE                    6-0-0/d VECT        r     1 AUTITLE_
    10-0-0/c CHAR(19)    r     1 NCTITLE                   16-0-0/d VECT        r     1 NCTITLE_

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  1115-0-0/w PTR         r     1 @LEN                    1116-0-0/w PTR         r     1 @S$
     3-0-0/w PTR         r     1 @VBLK                   1115-0-0/w PTR         r     1 CCB$
   105-0-0/b BIT         r     1 CREDITING               1117-0-0/c PTR         r     1 D$
  1110-0-0/c PTR         r     1 GLUE$                    106-0-0/c CHAR(2048)  r     1 GLUEBUF
  1106-0-0/d VECT        r     1 GLUE_                     *0-0-0/w SBIN        r     1 LEN
    *0-0-0/c PTR         r     1 S$                      1111-0-0/w PTR         r     1 SCTX$
  1112-0-0/w PTR         r     1 SFPT$                      4-0-0/w STRC(1260)  r     1 TCONFPT
    47-0-0/w STRC(1080)  r     1 TDISFPT                 1113-0-0/w PTR         r     1 UADR$
    *0-0-0/d STRC(288)   r     1 VBLK

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:46   

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(288)   r     1 XSS_AUSTA
     0-0-0/w PTR         r     1 XSS_CCB$$                  0-0-0/w UBIN        r     1 XSS_DEBUG
     0-0-0/w SBIN        r     1 XSS_OTRACE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(504)   r     1 CCB                        0-0-0/w PTR         r     1 CCB$$(0:0)
     0-0-0/c ACHR        r     1 DESTINATION                0-0-0/w STRC(72)    r     1 GLUE
     0-0-0/w STRC(1260)  r     1 SCTX                       0-0-0/c ACHR        r     1 SOURCE
     0-0-0/w STRC(2718)  r     1 XSC$ADDRESS                0-0-0/d STRC(396)   r     1 XSS$CONNECT
     0-0-0/d STRC(504)   r     1 XSS$GENERIC


   Procedure XSS$TSEND requires 524 words for executable code.
   Procedure XSS$TSEND requires 600 words of local(AUTO) storage.
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:47   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:48   
          MINI XREF LISTING

ADDRSETUP
     13583**PROC    13495--CALL    13504--CALL
AUTITLE
     13455**DCL     13456--DCLINIT
AUTITLE_
     13456**DCL     13480<>CALL    13559<>CALL
AUWRT
      5604**DCL     13484<>CALL    13564<>CALL
AUWRT.BUF_
      5604**DCL     13481<<ASSIGN  13560<<ASSIGN
AUWRT.STATION_
      5606**DCL      5606--REDEF
AUWRT.V
      5607**DCL      5604--DCLINIT
AUWRT.V.DCB#
      5607**DCL     13482<<ASSIGN  13562<<ASSIGN
AUWRT.V.DVBYTE.VFC#
      5613**DCL      5613--REDEF
B$ALT.CODE
      5578**DCL      5578--REDEF    5579--REDEF    5579--REDEF
B$ALT.ERR
      5579**DCL     13570>>ASSIGN
B$ALT.ERR.ERR#
      5580**DCL      5580--REDEF
B$ALT.EVID
      5579**DCL      5579--REDEF    5579--REDEF
B$TCB.ALT$
      5585**DCL     13570>>ASSIGN
B$TCB$
     13444**DCL     13570>>ASSIGN
CCB.ERRDEF IN PROCEDURE ADDRSETUP
     13709**DCL     13729--REDEF
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:49   
CCB.TPARMS.CLASS IN PROCEDURE ADDRSETUP
     13763**DCL     13894>>ASSIGN
CCB.TPARMS.QOS IN PROCEDURE ADDRSETUP
     13760**DCL     13893>>ASSIGN
CCB.TPARMS.TIMER1 IN PROCEDURE ADDRSETUP
     13754**DCL     13891>>ASSIGN
CCB.TPARMS.TIMER2 IN PROCEDURE ADDRSETUP
     13757**DCL     13892>>ASSIGN
CCB.TPARMS.TPDUSIZE IN PROCEDURE ADDRSETUP
     13748**DCL     13889>>ASSIGN
CCB.TPARMS.TR_FLAGS IN PROCEDURE ADDRSETUP
     13764**DCL     13895>>ASSIGN
CCB.TPARMS.TR_FLAGS.EXPEDITED IN PROCEDURE ADDRSETUP
     13789**DCL     13897>>ASSIGN
CCB.TPARMS.WINDOWSZ IN PROCEDURE ADDRSETUP
     13751**DCL     13890>>ASSIGN
CCB$ IN PROCEDURE ADDRSETUP
     13886**DCL     13602--IMP-PTR 13888<<ASSIGN  13889>>ASSIGN  13890>>ASSIGN  13891>>ASSIGN  13892>>ASSIGN
     13893>>ASSIGN  13894>>ASSIGN  13895>>ASSIGN  13897>>ASSIGN
CCB$$ IN PROCEDURE ADDRSETUP
     13885**DCL     13888>>ASSIGN
COMMON
     13463**LABEL   13934--GOTO
CREDIT
     13474**LABEL   13566--GOTO
CREDITING
     13448**DCL     13460<<ASSIGN  13471>>IF      13932<<ASSIGN
D$ IN PROCEDURE MOVEBYTES
     13910**DCL     13909--IMP-PTR 13916<<ASSIGN  13917>>CALLBLT
DESTINATION IN PROCEDURE MOVEBYTES
     13909**DCL     13917<<CALLBLT
ERRCODE
      5661**DCL     13570<<ASSIGN  13572<>CALL    13576<>CALL    13579>>ASSIGN
ERRCODE.SEV
      5691**DCL     13574>>IF      13575<<ASSIGN
EXPEDITED
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:50   
     13526**LABEL   13534--GOTO
GLUE
     11949**DCL     13466<<ASSIGN
GLUE.MAGIC
     11959**DCL     13469<<ASSIGN
GLUE.MYSCID
     11956**DCL     13467<<ASSIGN  13494>>ASSIGN  13503>>ASSIGN
GLUE.TRNFNC
     11957**DCL     13478<<ASSIGN  13496<<ASSIGN  13506<<ASSIGN  13518<<ASSIGN  13526<<ASSIGN  13538<<ASSIGN
     13553>>CALL    13563>>CALL    13565>>IF
GLUE.YRSCID
     11958**DCL     13468<<ASSIGN
GLUE$
     13451**DCL     11949--IMP-PTR 13463<<ASSIGN  13466>>ASSIGN  13467>>ASSIGN  13468>>ASSIGN  13469>>ASSIGN
     13478>>ASSIGN  13494>>ASSIGN  13496>>ASSIGN  13503>>ASSIGN  13506>>ASSIGN  13518>>ASSIGN  13526>>ASSIGN
     13538>>ASSIGN  13553>>CALL    13563>>CALL    13565>>IF
GLUEBUF
     13449**DCL     13463--ASSIGN  13464--ASSIGN
GLUE_
     13450**DCL     13464<<ASSIGN  13465<<ASSIGN  13477<<ASSIGN  13480<>CALL    13481>>ASSIGN  13546<>CALL
     13547>>ASSIGN  13559<>CALL    13560>>ASSIGN  13916>>ASSIGN  13916>>ASSIGN  13918<<ASSIGN  13918>>ASSIGN
K$ADDRESS.NSAP.ADDRESS_N
      6399**DCL      6400--REDEF
LEN IN PROCEDURE MOVEBYTES
     13911**DCL     13908--PROC    13909--IMP-SIZ 13912--IMP-SIZ 13915>>IF      13917>>CALLBLT 13917>>CALLBLT
     13917>>CALLBLT 13918>>ASSIGN
M$WRITE
      5505**DCL-ENT 13484--CALL    13554--CALL    13564--CALL
MOVEBYTES
     13908**PROC    13497--CALL    13507--CALL    13519--CALL    13527--CALL    13528--CALL    13539--CALL
     13540--CALL
NCSTA
      5733**DCL      5606--DCLINIT
NCSTA.MSGIDXT
      5743**DCL      5746--REDEF
NCSTA.STATION#
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:51   
      5737**DCL     13475<<ASSIGN  13561<<ASSIGN
NCTITLE
     13457**DCL     13458--DCLINIT
NCTITLE_
     13458**DCL     13546<>CALL
NCWRT
      5635**DCL     13554<>CALL
NCWRT.BUF_
      5635**DCL     13547<<ASSIGN
NCWRT.STATION_
      5637**DCL      5637--REDEF   13549<<ASSIGN  13551<<ASSIGN
NCWRT.V
      5638**DCL      5635--DCLINIT
NCWRT.V.DCB#
      5638**DCL     13552<<ASSIGN
NCWRT.V.DVBYTE.VFC#
      5644**DCL      5644--REDEF
NORMAL
     13538**LABEL   13524--GOTO
S$ IN PROCEDURE MOVEBYTES
     13913**DCL     13908--PROC    13912--IMP-PTR 13917>>CALLBLT
SCTX
     11980**DCL     13556<>CALL
SCTX.DCB#
     12309**DCL     13482>>ASSIGN  13552>>ASSIGN  13562>>ASSIGN
SCTX.DSTX
     12000**DCL     13515<>CALL    13901<>CALL
SCTX.FLAGS.TEXP
     12249**DCL     13505>>ASSIGN  13523>>IF      13533>>IF
SCTX.HISTZ
     12294**DCL     12295--REDEF
SCTX.MAGIC
     12291**DCL     13469>>ASSIGN
SCTX.MODE
     12276**DCL     13490<<ASSIGN  13543>>DOCASE
SCTX.NEEDAREAD
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:52   
     12273**DCL     13555>>IF
SCTX.PEERSCID
     12280**DCL     13468>>ASSIGN
SCTX.SCID
     12281**DCL     13467>>ASSIGN  13483>>CALL    13553>>CALL    13563>>CALL    13571<>CALL    13888>>ASSIGN
SCTX.SRCX
     11999**DCL     13512<>CALL    13898<>CALL
SCTX.STATION
     12304**DCL     13474>>IF      13475>>ASSIGN  13491<<ASSIGN  13561>>ASSIGN
SCTX$
     13452**DCL     11980--IMP-PTR 13461<<ASSIGN  13467>>ASSIGN  13468>>ASSIGN  13469>>ASSIGN  13474>>IF
     13475>>ASSIGN  13482>>ASSIGN  13483>>CALL    13490>>ASSIGN  13491>>ASSIGN  13505>>ASSIGN  13512>>CALL
     13515>>CALL    13523>>IF      13533>>IF      13543>>DOCASE  13552>>ASSIGN  13553>>CALL    13555>>IF
     13556>>CALL    13561>>ASSIGN  13562>>ASSIGN  13563>>CALL    13571>>CALL    13888>>ASSIGN  13898>>CALL
     13901>>CALL    13933<<ASSIGN
SFPT$
     13453**DCL     10593--IMP-PTR 10739--IMP-PTR 13470<<ASSIGN  13476<<ASSIGN  13573>>IF      13579>>ASSIGN
     13897>>ASSIGN
SOURCE IN PROCEDURE MOVEBYTES
     13912**DCL     13917>>CALLBLT
TCONFPT
      6830**DCL     13493<<ASSIGN  13497--CALL    13497--CALL    13500<<ASSIGN  13507--CALL    13507--CALL
TCONFPT.CLASS
      6869**DCL     13894<<ASSIGN
TCONFPT.DST_NSAP
      7106**DCL     13903<<ASSIGN
TCONFPT.DST_NSAP.ADDRESS_N
      7136**DCL      7137--REDEF
TCONFPT.DST_TSAP
      7004**DCL     13902<<ASSIGN
TCONFPT.QOS
      6863**DCL     13893<<ASSIGN
TCONFPT.SCID
      6940**DCL     13494<<ASSIGN  13503<<ASSIGN
TCONFPT.SRC_NSAP
      7046**DCL     13900<<ASSIGN
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:53   
TCONFPT.SRC_NSAP.ADDRESS_N
      7076**DCL      7077--REDEF
TCONFPT.SRC_TSAP
      6962**DCL     13899<<ASSIGN
TCONFPT.TIMER1
      6852**DCL     13891<<ASSIGN
TCONFPT.TIMER2
      6857**DCL     13892<<ASSIGN
TCONFPT.TPDUSIZE
      6839**DCL      6840--REDEF   13889<<ASSIGN
TCONFPT.TR_FLAGS
      6876**DCL     13895<<ASSIGN
TCONFPT.TR_FLAGS.EXPEDITED
      6921**DCL     13505<<ASSIGN  13897<<ASSIGN
TCONFPT.WINDOWSZ
      6847**DCL     13890<<ASSIGN
TDISFPT
      7166**DCL     13510<<ASSIGN  13519--CALL    13519--CALL
TDISFPT.DST_NSAP
      7328**DCL     13517<<ASSIGN
TDISFPT.DST_NSAP.ADDRESS_N
      7358**DCL      7359--REDEF
TDISFPT.DST_TSAP
      7231**DCL     13516<<ASSIGN
TDISFPT.REASON
      7167**DCL     13511<<ASSIGN
TDISFPT.SRC_NSAP
      7271**DCL     13514<<ASSIGN
TDISFPT.SRC_NSAP.ADDRESS_N
      7301**DCL      7302--REDEF
TDISFPT.SRC_TSAP
      7191**DCL     13513<<ASSIGN
UADR$
     13454**DCL     13512<>CALL    13513>>ASSIGN  13514>>ASSIGN  13515<>CALL    13516>>ASSIGN  13517>>ASSIGN
     13898<>CALL    13899>>ASSIGN  13900>>ASSIGN  13901<>CALL    13902>>ASSIGN  13903>>ASSIGN
VBLK
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:54   
     12413**DCL        16--PROC    13930--ENTRY   13933--ASSIGN
VBLK.CTX$
     12421**DCL     13461>>ASSIGN
VBLK.DAT.PTR$
     12497**DCL     13528<>CALL    13540<>CALL
VBLK.DAT.SIZE
     12498**DCL     13528<>CALL    13540<>CALL
VBLK.EVENT
     12431**DCL     13488>>DOSELCT 13896>>IF
VBLK.FPT$
     12432**DCL     13470>>ASSIGN
VBLK.PDU.PTR$
     12464**DCL     13527<>CALL    13539<>CALL
VBLK.PDU.SIZE
     12465**DCL     13527<>CALL    13539<>CALL
WRTERR
     13570**LABEL   13484--CALLALT 13554--CALLALT 13564--CALLALT
XSC$ADDRESS.NSAP
     13402**DCL     13514>>ASSIGN  13517>>ASSIGN  13900>>ASSIGN  13903>>ASSIGN
XSC$ADDRESS.NSAP.ADDRESS_N
     13432**DCL     13433--REDEF
XSC$ADDRESS.TSAP
     13328**DCL     13513>>ASSIGN  13516>>ASSIGN  13899>>ASSIGN  13902>>ASSIGN
XSS$BUFPTR
     13438**DCL-ENT 13512--CALL    13515--CALL    13898--CALL    13901--CALL
XSS$COMMWAITZ
     13439**DCL-ENT 13556--CALL
XSS$CONNECT.CALLED$
     10965**DCL     10966--REDEF
XSS$CONNECT.ERRDEF
     10833**DCL     10853--REDEF
XSS$CONNECT.SFU.EX
     11028**DCL     13897>>ASSIGN
XSS$DUMPBYTES
     13440**DCL-ENT 13480--CALL    13546--CALL    13559--CALL
XSS$EVLOG
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:55   
     13442**DCL-ENT 13483--CALL    13553--CALL    13563--CALL    13571--CALL    13572--CALL
XSS$GENERIC.ERRDEF
     10647**DCL     10667--REDEF
XSS$GENERIC.ERROR
     10667**DCL     13579<<ASSIGN
XSS$SCREECH
     13441**DCL-ENT 13576--CALL
XSS_AUSTA
      5706**DCL      5637--DCLINIT 13549--ASSIGN
XSS_AUSTA.MSGIDXT
      5716**DCL      5719--REDEF
XSS_AUSTA.STATION#
      5710**DCL     13491>>ASSIGN
XSS_CCB$$ IN PROCEDURE ADDRSETUP
     13883**DCL     13885--IMP-PTR 13888>>ASSIGN
XSS_DEBUG
     13445**DCL     13548>>IF
XSS_OTRACE
     13446**DCL     13479>>IF      13545>>IF      13558>>IF
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:56   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:57   
              MINI UREF LISTING

M$ACCT    5521**DCL-ENT
M$ACTIVATE    5524**DCL-ENT
M$ALIB    5517**DCL-ENT
M$ASUSER    5519**DCL-ENT
M$ATTACH    5526**DCL-ENT
M$BADPP    5544**DCL-ENT
M$CGCTL    5525**DCL-ENT
M$CGINFO    5525**DCL-ENT
M$CHECK    5506**DCL-ENT
M$CHGUNIT    5564**DCL-ENT
M$CLOSE    5504**DCL-ENT
M$CLRSTK    5562**DCL-ENT
M$CMDVAR    5573**DCL-ENT
M$CONFIG    5534**DCL-ENT
M$CORRES    5509**DCL-ENT
M$CPEXIT    5518**DCL-ENT
M$CVM    5542**DCL-ENT
M$CVOL    5507**DCL-ENT
M$DCLFLD    5534**DCL-ENT
M$DEACTIVATE    5524**DCL-ENT
M$DELREC    5506**DCL-ENT
M$DEQ    5571**DCL-ENT
M$DETACH    5526**DCL-ENT
M$DEVICE    5508**DCL-ENT
M$DISPLAY    5571**DCL-ENT
M$DISPRES    5511**DCL-ENT
M$DLIB    5517**DCL-ENT
M$DRIBBLE    5534**DCL-ENT
M$DRTN    5562**DCL-ENT
M$DSUSER    5519**DCL-ENT
M$ENQ    5570**DCL-ENT
M$EOM    5529**DCL-ENT
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:58   
M$ERASE    5535**DCL-ENT
M$ERR    5516**DCL-ENT
M$ERRMSG    5567**DCL-ENT
M$EVENT    5559**DCL-ENT
M$EXHUME    5568**DCL-ENT
M$EXIT    5516**DCL-ENT
M$EXTEND    5508**DCL-ENT
M$FDP    5540**DCL-ENT
M$FDS    5539**DCL-ENT
M$FEBOOT    5532**DCL-ENT
M$FECTL    5533**DCL-ENT
M$FEDUMP    5532**DCL-ENT
M$FID    5567**DCL-ENT
M$FINDPROC    5521**DCL-ENT
M$FSUSER    5519**DCL-ENT
M$FVP    5541**DCL-ENT
M$FWCG    5525**DCL-ENT
M$GBPL    5545**DCL-ENT
M$GDDL    5541**DCL-ENT
M$GDP    5540**DCL-ENT
M$GDS    5539**DCL-ENT
M$GETDCB    5510**DCL-ENT
M$GETMOUSE    5550**DCL-ENT
M$GETPM    5551**DCL-ENT
M$GJOB    5569**DCL-ENT
M$GLINEATTR    5529**DCL-ENT
M$GOODPP    5544**DCL-ENT
M$GPLATEN    5537**DCL-ENT
M$GPROMPT    5536**DCL-ENT
M$GTRMATTR    5530**DCL-ENT
M$GTRMCTL    5528**DCL-ENT
M$GTRMTAB    5531**DCL-ENT
M$GVP    5540**DCL-ENT
M$HELP    5567**DCL-ENT
M$INT    5559**DCL-ENT
M$INTRTN    5520**DCL-ENT
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:59   
M$IOQ    5555**DCL-ENT
M$JOBSTATS    5569**DCL-ENT
M$KEYIN    5509**DCL-ENT
M$LDEV    5504**DCL-ENT
M$LDTRC    5517**DCL-ENT
M$LIMIT    5510**DCL-ENT
M$LINES    5509**DCL-ENT
M$LINK    5516**DCL-ENT
M$MADMUCK    5512**DCL-ENT
M$MAKUSER    5543**DCL-ENT
M$MBS    5511**DCL-ENT
M$MDFFLD    5535**DCL-ENT
M$MERC    5560**DCL-ENT
M$MERCS    5561**DCL-ENT
M$MIRROR    5555**DCL-ENT
M$MONINFO    5572**DCL-ENT
M$MPL    5545**DCL-ENT
M$NODEINFO    5536**DCL-ENT
M$NXTUSR    5570**DCL-ENT
M$OCMSG    5568**DCL-ENT
M$OLAY    5516**DCL-ENT
M$OPEN    5504**DCL-ENT
M$PAS    5545**DCL-ENT
M$PATHCON    5568**DCL-ENT
M$PDS    5539**DCL-ENT
M$PFIL    5506**DCL-ENT
M$PLATEN    5530**DCL-ENT
M$PRECORD    5508**DCL-ENT
M$PROCNAME    5521**DCL-ENT
M$PROFILE    5532**DCL-ENT
M$PROMPT    5528**DCL-ENT
M$RACST    5512**DCL-ENT
M$RDSYSLOG    5553**DCL-ENT
M$READ    5505**DCL-ENT
M$RELDCB    5510**DCL-ENT
M$RELRES    5511**DCL-ENT
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:60   
M$RELSTARF    5513**DCL-ENT
M$REM    5513**DCL-ENT
M$RENV    5560**DCL-ENT
M$REQUIRE    5512**DCL-ENT
M$RETRY    5561**DCL-ENT
M$RETRYS    5561**DCL-ENT
M$REW    5507**DCL-ENT
M$RLSFLD    5535**DCL-ENT
M$RPRIV    5563**DCL-ENT
M$RSPP    5542**DCL-ENT
M$RSWITCH    5564**DCL-ENT
M$RUE    5570**DCL-ENT
M$SAD    5543**DCL-ENT
M$SAVE    5519**DCL-ENT
M$SCON    5520**DCL-ENT
M$SCREECH    5518**DCL-ENT
M$SENV    5560**DCL-ENT
M$SETFMA    5504**DCL-ENT
M$SETFP    5533**DCL-ENT
M$SINPUT    5531**DCL-ENT
M$SLCFLD    5536**DCL-ENT
M$SMOUSE    5550**DCL-ENT
M$SMPRT    5542**DCL-ENT
M$SPRIV    5563**DCL-ENT
M$SSC    5543**DCL-ENT
M$SSWITCH    5563**DCL-ENT
M$STATE    5572**DCL-ENT
M$STD    5544**DCL-ENT
M$STIMER    5558**DCL-ENT
M$STLPP    5541**DCL-ENT
M$STRAP    5558**DCL-ENT
M$STRMATTR    5530**DCL-ENT
M$STRMCTL    5528**DCL-ENT
M$STRMTAB    5531**DCL-ENT
M$SYMBIO    5569**DCL-ENT
M$SYSCON    5555**DCL-ENT
PL6.E3A0      #001=XSS$TSEND File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:08 Page:61   
M$SYSID    5573**DCL-ENT
M$TDCLOSE    5554**DCL-ENT
M$TDIO    5554**DCL-ENT
M$TDOPEN    5553**DCL-ENT
M$TDREQCPU    5554**DCL-ENT
M$TEMPWROC    5548**DCL-ENT
M$TIME    5571**DCL-ENT
M$TRAP    5558**DCL-ENT
M$TRMISC    5533**DCL-ENT
M$TRMPRG    5529**DCL-ENT
M$TRTN    5562**DCL-ENT
M$TRUNC    5505**DCL-ENT
M$TTIMER    5558**DCL-ENT
M$UC    5528**DCL
M$UMPL    5545**DCL-ENT
M$UNFID    5567**DCL-ENT
M$UNLATCH    5524**DCL-ENT
M$UNSHARE    5521**DCL-ENT
M$USRFIELD    5564**DCL-ENT
M$VIRTUAL    5539**DCL-ENT
M$WAIT    5562**DCL-ENT
M$WEOF    5507**DCL-ENT
M$WRSYSLOG    5553**DCL-ENT
M$XCON    5559**DCL-ENT
M$XCONRTN    5520**DCL-ENT
M$XEQTIME    5572**DCL-ENT
M$XFLUSH    5513**DCL-ENT
M$XMOUSE    5550**DCL-ENT
M$XXX    5516**DCL-ENT
M$YC    5518**DCL-ENT
XSS$TCREDIT   13930**ENTRY
XSS$TSEND      16**PROC

PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:62   
      246        1        /*T***********************************************************/
      247        2        /*T*                                                         */
      248        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      249        4        /*T*                                                         */
      250        5        /*T***********************************************************/
      251        6        /*F*
      252        7                NAME:   XSS$TRECV
      253        8                PURPOSE:
      254        9                    This module fields any asynchronous events reported to the
      255       10                    application, unless the application itself has indicated that
      256       11                    it wants to field them.
      257       12                DESCRIPTION:
      258       13                    When the XSS library is initialized, the application indicates
      259       14                    whether it wants the library to field async events or not.  If
      260       15                    the library is to field them, this routine is invoked when such
      261       16                    an event occurs.  If it is a Session event, XSS$EVENT is then
      262       17                    called to handle it.  Otherwise, an application routine is called.
      263       18        */
      264       19        XSS$TRECV: PROC ASYNC;
      265       20        %INCLUDE CP_6;
      266     5579            %B$EXCFR;
      267     5597            %B$TCB;
      268     5600        %INCLUDE XSS_SESSION_E;
      269     6165        %MACRO FATALDEF( NAME=XSS_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      270     6166                         ERR#=0, SEV=7);
      271     6167            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='S',
      272     6168                          MON='0'B, ERR#=ERR#, SEV=SEV);
      273     6169        %MEND;
      274     6170        %INCLUDE XSC_PERR_C;
      275     6247            %FATALDEF( NAME=XSS_F$NOEVNT, ERR#=%F$NOEVNT);
      276     6295            /*E*  ERROR:  XSS-F$NOEVNT-7
      277     6296                MESSAGE:  No handler for this asynchronous event.
      278     6297            */
      279     6298
      280     6299    1       DCL XSS$EVENT ENTRY(1) ALTRET;
      281     6300    1       DCL XSS$SCREECH ENTRY(1);
      282     6301
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:63   
      283     6302    1       DCL B$TCB$ PTR SYMREF;
      284     6303    1       DCL XSS_EVENT$ EPTR SYMREF;
      285     6304
      286     6305    1       DCL EVENT# SBIN;
      287     6306        %EJECT;
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:64   
      288     6307            /* this entire procedure is INHIBITED to avoid TCB overflow */
      289     6308    2       DO INHIBIT;
      290     6309    2           EVENT# = B$TCB$->B$TCB.STK$->B$EXCFR.EVID;
      291     6310    2           IF %XSS_EVID = EVENT# / 512 THEN
      292     6311                    /* this is a Session event */
      293     6312    2               CALL XSS$EVENT( B$TCB$->B$TCB.STK$->B$EXCFR);
      294     6313    2           ELSE
      295     6314                    /* not a Session event */
      296     6315    2               IF XSS_EVENT$ = ENTADDR( NIL) THEN
      297     6316                        /* user didn't specify EVNT$ on XSS$COMMINIT */
      298     6317    2                   CALL XSS$SCREECH( XSS_F$NOEVNT);
      299     6318    2               ELSE
      300     6319                        /* chain to application's event handler */
      301     6320    2                   CALL XSS_EVENT$( B$TCB$->B$TCB.STK$->B$EXCFR);
      302     6321    2           RETURN;
      303     6322    2           END;
      304     6323
      305     6324    1       END XSS$TRECV;
      306     6325        %EOD;

PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:65   
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSS$TRECV.

   Procedure XSS$TRECV requires 32 words for executable code.
   Procedure XSS$TRECV requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:66   

 Object Unit name= XSS$TRECV                                  File name= XSS$COMM.:XSA1TOU
 UTS= OCT 01 '97 12:09:07.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  XSS$TRECV
    2   Proc  even  none    32     40  XSS$TRECV
    3  RoData even  none     4      4  XSS$TRECV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     Async       0  XSS$TRECV

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  XSS_F$NOEVNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 XSS$EVENT
         yes           Std       1 XSS$SCREECH
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:67   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                XSS_EVENT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:68   


      246        1        /*T***********************************************************/
      247        2        /*T*                                                         */
      248        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      249        4        /*T*                                                         */
      250        5        /*T***********************************************************/
      251        6        /*F*
      252        7                NAME:   XSS$TRECV
      253        8                PURPOSE:
      254        9                    This module fields any asynchronous events reported to the
      255       10                    application, unless the application itself has indicated that
      256       11                    it wants to field them.
      257       12                DESCRIPTION:
      258       13                    When the XSS library is initialized, the application indicates
      259       14                    whether it wants the library to field async events or not.  If
      260       15                    the library is to field them, this routine is invoked when such
      261       16                    an event occurs.  If it is a Session event, XSS$EVENT is then
      262       17                    called to handle it.  Otherwise, an application routine is called.
      263       18        */
      264       19        XSS$TRECV: PROC ASYNC;

     19  2 000000   000000 700200 xent  XSS$TRECV    TSX0  ! X66_AAUTO
         2 000001   000006 000000                    ZERO    6,0

      265       20        %INCLUDE CP_6;
      266     5579            %B$EXCFR;
      267     5597            %B$TCB;
      268     5600        %INCLUDE XSS_SESSION_E;
      269     6165        %MACRO FATALDEF( NAME=XSS_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      270     6166                         ERR#=0, SEV=7);
      271     6167            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='S',
      272     6168                          MON='0'B, ERR#=ERR#, SEV=SEV);
      273     6169        %MEND;
      274     6170        %INCLUDE XSC_PERR_C;
      275     6247            %FATALDEF( NAME=XSS_F$NOEVNT, ERR#=%F$NOEVNT);
      276     6295            /*E*  ERROR:  XSS-F$NOEVNT-7
      277     6296                MESSAGE:  No handler for this asynchronous event.
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:69   
      278     6297            */
      279     6298
      280     6299    1       DCL XSS$EVENT ENTRY(1) ALTRET;
      281     6300    1       DCL XSS$SCREECH ENTRY(1);
      282     6301
      283     6302    1       DCL B$TCB$ PTR SYMREF;
      284     6303    1       DCL XSS_EVENT$ EPTR SYMREF;
      285     6304
      286     6305    1       DCL EVENT# SBIN;
      287     6306        %EJECT;
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:70   
      288     6307            /* this entire procedure is INHIBITED to avoid TCB overflow */
      289     6308    2       DO INHIBIT;

      290     6309    2           EVENT# = B$TCB$->B$TCB.STK$->B$EXCFR.EVID;

   6309  2 000002   000000 470600 xsym               LDP0  ! B$TCB$
         2 000003   000001 471700                    LDP1  ! 1,,PR0
         2 000004   100101 235300                    LDA   ! 65,,PR1
         2 000005   200003 755300                    STA   ! EVENT#,,AUTO

      291     6310    2           IF %XSS_EVID = EVENT# / 512 THEN

   6310  2 000006   200003 236300                    LDQ   ! EVENT#,,AUTO
         2 000007   001000 506207                    DIV   ! 512,DL
         2 000010   000000 116200 3                  CMPQ  ! 0
         2 000011   000020 601200 2                  TNZ   ! s:6315

      292     6311                    /* this is a Session event */
      293     6312    2               CALL XSS$EVENT( B$TCB$->B$TCB.STK$->B$EXCFR);

   6312  2 000012   200004 451700                    STP1  ! EVENT#+1,,AUTO
         2 000013   200004 630700                    EPPR0 ! EVENT#+1,,AUTO
         2 000014   000001 631600 3                  EPPR1 ! 1
         2 000015   000000 701200 xent               TSX1  ! XSS$EVENT
         2 000016   000000 011200                    NOP   ! 0
         2 000017   000036 710200 2                  TRA   ! s:6321

      294     6313    2           ELSE
      295     6314                    /* not a Session event */
      296     6315    2               IF XSS_EVENT$ = ENTADDR( NIL) THEN

   6315  2 000020   000000 236200 xsym               LDQ   ! XSS_EVENT$
         2 000021   000002 116200 3                  CMPQ  ! 2
         2 000022   000030 601200 2                  TNZ   ! s:6320

      297     6316                        /* user didn't specify EVNT$ on XSS$COMMINIT */
      298     6317    2                   CALL XSS$SCREECH( XSS_F$NOEVNT);
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:71   

   6317  2 000023   000003 630600 3                  EPPR0 ! 3
         2 000024   000001 631600 3                  EPPR1 ! 1
         2 000025   000000 701200 xent               TSX1  ! XSS$SCREECH
         2 000026   000000 011200                    NOP   ! 0
         2 000027   000036 710200 2                  TRA   ! s:6321

      299     6318    2               ELSE
      300     6319                        /* chain to application's event handler */
      301     6320    2                   CALL XSS_EVENT$( B$TCB$->B$TCB.STK$->B$EXCFR);

   6320  2 000030   200004 451700                    STP1  ! EVENT#+1,,AUTO
         2 000031   200004 630700                    EPPR0 ! EVENT#+1,,AUTO
         2 000032   000000 220200 xsym               LDX0  ! XSS_EVENT$
         2 000033   000001 631600 3                  EPPR1 ! 1
         2 000034   000000 701210                    TSX1  ! 0,X0
         2 000035   000000 011200                    NOP   ! 0

      302     6321    2           RETURN;

   6321  2 000036   000000 702200 xent               TSX2  ! X66_AARET

      303     6322    2           END;

      304     6323
      305     6324    1       END XSS$TRECV;

   6324  2 000037   000000 702200 xent               TSX2  ! X66_AARET

XSS_F$NOEVNT
 Sect OctLoc
   1     000   302323 001377                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000130 123123   000001 000000   000000 000000   000000 006000    .XSS............
      306     6325        %EOD;
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:72   

PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:73   
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSS$TRECV.
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:74   

 **** Variables and constants ****

  ****  Section 001 RoData XSS$TRECV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XSS_F$NOEVNT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN        r     1 EVENT#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w EPTR        r     1 XSS_EVENT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/w STRC(144)   r     1 B$TCB


   Procedure XSS$TRECV requires 32 words for executable code.
   Procedure XSS$TRECV requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:75   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:76   
          MINI XREF LISTING

B$EXCFR
      5580**DCL      6312<>CALL     6320<>CALL
B$EXCFR.ASL
      5580**DCL      5580--REDEF
B$EXCFR.ERR.ERR#
      5594**DCL      5594--REDEF
B$EXCFR.EVID
      5593**DCL      5593--REDEF    5594--REDEF    6309>>ASSIGN
B$EXCFR.IR
      5581**DCL      5581--REDEF
B$EXCFR.PREVSZ
      5580**DCL      5580--REDEF
B$EXCFR.SUBC
      5592**DCL      5592--REDEF    5593--REDEF    5593--REDEF
B$TCB.STK$
      5598**DCL      6309>>ASSIGN   6312>>CALL     6320>>CALL
B$TCB$
      6302**DCL      6309>>ASSIGN   6312>>CALL     6320>>CALL
EVENT#
      6305**DCL      6309<<ASSIGN   6310>>IF
XSS$EVENT
      6299**DCL-ENT  6312--CALL
XSS$SCREECH
      6300**DCL-ENT  6317--CALL
XSS_EVENT$
      6303**DCL      6315>>IF       6320>>CALL
XSS_F$NOEVNT
      6261**DCL      6317<>CALL
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:77   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:78   
              MINI UREF LISTING

M$ACCT    5524**DCL-ENT
M$ACTIVATE    5527**DCL-ENT
M$ALIB    5520**DCL-ENT
M$ASUSER    5522**DCL-ENT
M$ATTACH    5529**DCL-ENT
M$BADPP    5547**DCL-ENT
M$CGCTL    5528**DCL-ENT
M$CGINFO    5528**DCL-ENT
M$CHECK    5509**DCL-ENT
M$CHGUNIT    5567**DCL-ENT
M$CLOSE    5507**DCL-ENT
M$CLRSTK    5565**DCL-ENT
M$CMDVAR    5576**DCL-ENT
M$CONFIG    5537**DCL-ENT
M$CORRES    5512**DCL-ENT
M$CPEXIT    5521**DCL-ENT
M$CVM    5545**DCL-ENT
M$CVOL    5510**DCL-ENT
M$DCLFLD    5537**DCL-ENT
M$DEACTIVATE    5527**DCL-ENT
M$DELREC    5509**DCL-ENT
M$DEQ    5574**DCL-ENT
M$DETACH    5529**DCL-ENT
M$DEVICE    5511**DCL-ENT
M$DISPLAY    5574**DCL-ENT
M$DISPRES    5514**DCL-ENT
M$DLIB    5520**DCL-ENT
M$DRIBBLE    5537**DCL-ENT
M$DRTN    5565**DCL-ENT
M$DSUSER    5522**DCL-ENT
M$ENQ    5573**DCL-ENT
M$EOM    5532**DCL-ENT
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:79   
M$ERASE    5538**DCL-ENT
M$ERR    5519**DCL-ENT
M$ERRMSG    5570**DCL-ENT
M$EVENT    5562**DCL-ENT
M$EXHUME    5571**DCL-ENT
M$EXIT    5519**DCL-ENT
M$EXTEND    5511**DCL-ENT
M$FDP    5543**DCL-ENT
M$FDS    5542**DCL-ENT
M$FEBOOT    5535**DCL-ENT
M$FECTL    5536**DCL-ENT
M$FEDUMP    5535**DCL-ENT
M$FID    5570**DCL-ENT
M$FINDPROC    5524**DCL-ENT
M$FSUSER    5522**DCL-ENT
M$FVP    5544**DCL-ENT
M$FWCG    5528**DCL-ENT
M$GBPL    5548**DCL-ENT
M$GDDL    5544**DCL-ENT
M$GDP    5543**DCL-ENT
M$GDS    5542**DCL-ENT
M$GETDCB    5513**DCL-ENT
M$GETMOUSE    5553**DCL-ENT
M$GETPM    5554**DCL-ENT
M$GJOB    5572**DCL-ENT
M$GLINEATTR    5532**DCL-ENT
M$GOODPP    5547**DCL-ENT
M$GPLATEN    5540**DCL-ENT
M$GPROMPT    5539**DCL-ENT
M$GTRMATTR    5533**DCL-ENT
M$GTRMCTL    5531**DCL-ENT
M$GTRMTAB    5534**DCL-ENT
M$GVP    5543**DCL-ENT
M$HELP    5570**DCL-ENT
M$INT    5562**DCL-ENT
M$INTRTN    5523**DCL-ENT
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:80   
M$IOQ    5558**DCL-ENT
M$JOBSTATS    5572**DCL-ENT
M$KEYIN    5512**DCL-ENT
M$LDEV    5507**DCL-ENT
M$LDTRC    5520**DCL-ENT
M$LIMIT    5513**DCL-ENT
M$LINES    5512**DCL-ENT
M$LINK    5519**DCL-ENT
M$MADMUCK    5515**DCL-ENT
M$MAKUSER    5546**DCL-ENT
M$MBS    5514**DCL-ENT
M$MDFFLD    5538**DCL-ENT
M$MERC    5563**DCL-ENT
M$MERCS    5564**DCL-ENT
M$MIRROR    5558**DCL-ENT
M$MONINFO    5575**DCL-ENT
M$MPL    5548**DCL-ENT
M$NODEINFO    5539**DCL-ENT
M$NXTUSR    5573**DCL-ENT
M$OCMSG    5571**DCL-ENT
M$OLAY    5519**DCL-ENT
M$OPEN    5507**DCL-ENT
M$PAS    5548**DCL-ENT
M$PATHCON    5571**DCL-ENT
M$PDS    5542**DCL-ENT
M$PFIL    5509**DCL-ENT
M$PLATEN    5533**DCL-ENT
M$PRECORD    5511**DCL-ENT
M$PROCNAME    5524**DCL-ENT
M$PROFILE    5535**DCL-ENT
M$PROMPT    5531**DCL-ENT
M$RACST    5515**DCL-ENT
M$RDSYSLOG    5556**DCL-ENT
M$READ    5508**DCL-ENT
M$RELDCB    5513**DCL-ENT
M$RELRES    5514**DCL-ENT
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:81   
M$RELSTARF    5516**DCL-ENT
M$REM    5516**DCL-ENT
M$RENV    5563**DCL-ENT
M$REQUIRE    5515**DCL-ENT
M$RETRY    5564**DCL-ENT
M$RETRYS    5564**DCL-ENT
M$REW    5510**DCL-ENT
M$RLSFLD    5538**DCL-ENT
M$RPRIV    5566**DCL-ENT
M$RSPP    5545**DCL-ENT
M$RSWITCH    5567**DCL-ENT
M$RUE    5573**DCL-ENT
M$SAD    5546**DCL-ENT
M$SAVE    5522**DCL-ENT
M$SCON    5523**DCL-ENT
M$SCREECH    5521**DCL-ENT
M$SENV    5563**DCL-ENT
M$SETFMA    5507**DCL-ENT
M$SETFP    5536**DCL-ENT
M$SINPUT    5534**DCL-ENT
M$SLCFLD    5539**DCL-ENT
M$SMOUSE    5553**DCL-ENT
M$SMPRT    5545**DCL-ENT
M$SPRIV    5566**DCL-ENT
M$SSC    5546**DCL-ENT
M$SSWITCH    5566**DCL-ENT
M$STATE    5575**DCL-ENT
M$STD    5547**DCL-ENT
M$STIMER    5561**DCL-ENT
M$STLPP    5544**DCL-ENT
M$STRAP    5561**DCL-ENT
M$STRMATTR    5533**DCL-ENT
M$STRMCTL    5531**DCL-ENT
M$STRMTAB    5534**DCL-ENT
M$SYMBIO    5572**DCL-ENT
M$SYSCON    5558**DCL-ENT
PL6.E3A0      #002=XSS$TRECV File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:82   
M$SYSID    5576**DCL-ENT
M$TDCLOSE    5557**DCL-ENT
M$TDIO    5557**DCL-ENT
M$TDOPEN    5556**DCL-ENT
M$TDREQCPU    5557**DCL-ENT
M$TEMPWROC    5551**DCL-ENT
M$TIME    5574**DCL-ENT
M$TRAP    5561**DCL-ENT
M$TRMISC    5536**DCL-ENT
M$TRMPRG    5532**DCL-ENT
M$TRTN    5565**DCL-ENT
M$TRUNC    5508**DCL-ENT
M$TTIMER    5561**DCL-ENT
M$UC    5531**DCL
M$UMPL    5548**DCL-ENT
M$UNFID    5570**DCL-ENT
M$UNLATCH    5527**DCL-ENT
M$UNSHARE    5524**DCL-ENT
M$USRFIELD    5567**DCL-ENT
M$VIRTUAL    5542**DCL-ENT
M$WAIT    5565**DCL-ENT
M$WEOF    5510**DCL-ENT
M$WRITE    5508**DCL-ENT
M$WRSYSLOG    5556**DCL-ENT
M$XCON    5562**DCL-ENT
M$XCONRTN    5523**DCL-ENT
M$XEQTIME    5575**DCL-ENT
M$XFLUSH    5516**DCL-ENT
M$XMOUSE    5553**DCL-ENT
M$XXX    5519**DCL-ENT
M$YC    5521**DCL-ENT
XSS$TRECV      19**PROC

PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:83   
      307        1        /*T***********************************************************/
      308        2        /*T*                                                         */
      309        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      310        4        /*T*                                                         */
      311        5        /*T***********************************************************/
      312        6        /*F*
      313        7                NAME:   XSS$EVENT
      314        8                PURPOSE:
      315        9                    This routine saves information pertaining to a Session event for
      316       10                    later processing when the application calls XSS$COMMWAIT.
      317       11                DESCRIPTION:
      318       12                    This routine is called from either the XSS library event handler
      319       13                    XSS$TRECV or the application's event handler, depending on how
      320       14                    the application initialized Session.  Certain information about
      321       15                    the event is saved for later processing when the application calls
      322       16                    XSS$COMMWAIT.
      323       17        */
      324       18        XSS$EVENT: PROC( B$EXCFR) ALTRET;
      325       19        %INCLUDE CP_6;
      326     5578            %B$EXCFR( STCLASS=);
      327     5596            %F$DCB;
      328     5653            %VLP_STATION( FPTN=B$STATION, STCLASS="BASED( LASTSTA$)");
      329     5680        %INCLUDE K_ADDRESS_M;
      330     6183        %INCLUDE XSS_SESSION_E;
      331     6748        %INCLUDE XSS_INTERNAL_E;
      332     7046        %INCLUDE XSS_INTERNAL_M;
      333     7635            %XSS$SCTX( NAME=SCTX, STCLASS="BASED( CTX$)");
      334     8069        %MACRO FATALDEF( NAME=XSS_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      335     8070                         ERR#=0, SEV=7);
      336     8071            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='S',
      337     8072                          MON='0'B, ERR#=ERR#, SEV=SEV);
      338     8073        %MEND;
      339     8074        %INCLUDE XSC_PERR_C;
      340     8151            %FATALDEF( NAME=XSS_F$READDONE, ERR#=%F$READDONE);
      341     8199            /*E*  ERROR:  XSS-F$READDONE-7
      342     8200                MESSAGE:  Unexpected M$READ activation.
      343     8201            */
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:84   
      344     8202
      345     8203    1       DCL XSS$CTXPTR ENTRY(2) ALTRET;
      346     8204    1       DCL XSS$SCREECH ENTRY(1);
      347     8205    1       DCL XSS$EVLOG ENTRY(2);
      348     8206
      349     8207    1       DCL XSS_EVENTED BIT(1) SYMREF;
      350     8208    1       DCL XSS_EVHDX UBIN HALF HALIGNED SYMREF;
      351     8209    1       DCL XSS_EVTLX UBIN HALF HALIGNED SYMREF;
      352     8210
      353     8211    1       DCL CTX$ PTR;
      354     8212    1       DCL EVENT# SBIN;
      355     8213    1       DCL LASTSTA$ PTR;
      356     8214    1       DCL SCID SBIN;
      357     8215    1       DCL TEMP SBIN;
      358     8216
      359     8217            /* this entire procedure is INHIBITED to avoid TCB overflow */
      360     8218    2       DO INHIBIT;
      361     8219    2           EVENT# = B$EXCFR.EVID;
      362     8220    2           IF %XSS_EVID ~= EVENT# / 512 THEN
      363     8221                    /* application's event handler thought this event was ours */
      364     8222    2               ALTRETURN;
      365     8223    2           SCID = MOD( EVENT#, 512);
      366     8224    2           CALL XSS$EVLOG( 'EV', SCID);
      367     8225    2           CALL XSS$CTXPTR( SCID, CTX$) ALTRET( SKIPIT);  /* INHIBITED */
      368     8226    2           IF SCTX.TERMINATING THEN
      369     8227    2   SKIPIT:     /* just ignore this event */
      370     8228    2               RETURN;
      371     8229    2           IF SCTX.LATCH.PRESENT THEN
      372     8230    2               CALL XSS$SCREECH( XSS_F$READDONE);
      373     8231    2           XSS_EVENTED = %TRUE;
      374     8232    2           SCTX.LATCH.PRESENT = %TRUE;
      375     8233    2           SCTX.LATCH.ADMIN = %FALSE;
      376     8234    2           LASTSTA$ = DCBADDR( SCTX.DCB#)->F$DCB.LASTSTA$;
      377     8235    2           IF LASTSTA$ = ADDR( NIL) THEN
      378     8236    2               SCTX.LATCH.STATION = ' ';
      379     8237    3           ELSE DO;
      380     8238    3               SCTX.LATCH.STATION = B$STATION.STATION#;
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:85   
      381     8239    3               IF B$STATION.MSGTYP# = '*AUEV   ' THEN
      382     8240    3                   SCTX.LATCH.ADMIN = %TRUE;
      383     8241    3               END;
      384     8242    2           SCTX.LATCH.ERRCODE = B$EXCFR.ERR;
      385     8243    2           CALL XSS$EVLOG( , B$EXCFR.ERR);
      386     8244             /* SCTX.LATCH.MSG$ always the same */
      387     8245    2           SCTX.LATCH.MSGSZ = DCBADDR( SCTX.DCB#)->F$DCB.ARS#;
      388     8246                /* insert this context block onto the event queue */
      389     8247    2           IF XSS_EVTLX = %NULL THEN
      390     8248    2               XSS_EVHDX = SCID;
      391     8249    3           ELSE DO;
      392     8250    3               TEMP = XSS_EVTLX;
      393     8251    3               CALL XSS$CTXPTR( TEMP, CTX$);  /* Note change to CTX$ */
      394     8252    3               SCTX.LATCH.LNKX = SCID;
      395     8253    3               END;
      396     8254    2           XSS_EVTLX = SCID;
      397     8255                /* done with this event */
      398     8256    2           RETURN;
      399     8257    2           END;
      400     8258
      401     8259    1       END XSS$EVENT;
      402     8260        %EOD;

PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:86   
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSS_INTERNAL_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSS$EVENT.

   Procedure XSS$EVENT requires 111 words for executable code.
   Procedure XSS$EVENT requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:87   

 Object Unit name= XSS$EVENT                                  File name= XSS$COMM.:XSA1TOU
 UTS= OCT 01 '97 12:09:21.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      4      4  XSS$EVENT
    2   Proc  even  none   111    157  XSS$EVENT
    3  RoData even  none     9     11  XSS$EVENT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  XSS$EVENT

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  XSS_F$READDONE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 XSS$EVLOG
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       2 XSS$CTXPTR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:88   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XSS_EVENTED                           XSS_EVHDX
     XSS_EVTLX

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 NULLSID                               ISSID
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:89   


      307        1        /*T***********************************************************/
      308        2        /*T*                                                         */
      309        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      310        4        /*T*                                                         */
      311        5        /*T***********************************************************/
      312        6        /*F*
      313        7                NAME:   XSS$EVENT
      314        8                PURPOSE:
      315        9                    This routine saves information pertaining to a Session event for
      316       10                    later processing when the application calls XSS$COMMWAIT.
      317       11                DESCRIPTION:
      318       12                    This routine is called from either the XSS library event handler
      319       13                    XSS$TRECV or the application's event handler, depending on how
      320       14                    the application initialized Session.  Certain information about
      321       15                    the event is saved for later processing when the application calls
      322       16                    XSS$COMMWAIT.
      323       17        */
      324       18        XSS$EVENT: PROC( B$EXCFR) ALTRET;

     18  2 000000   000000 700200 xent  XSS$EVENT    TSX0  ! X66_AUTO_1
         2 000001   000014 000001                    ZERO    12,1

      325       19        %INCLUDE CP_6;
      326     5578            %B$EXCFR( STCLASS=);
      327     5596            %F$DCB;
      328     5653            %VLP_STATION( FPTN=B$STATION, STCLASS="BASED( LASTSTA$)");
      329     5680        %INCLUDE K_ADDRESS_M;
      330     6183        %INCLUDE XSS_SESSION_E;
      331     6748        %INCLUDE XSS_INTERNAL_E;
      332     7046        %INCLUDE XSS_INTERNAL_M;
      333     7635            %XSS$SCTX( NAME=SCTX, STCLASS="BASED( CTX$)");
      334     8069        %MACRO FATALDEF( NAME=XSS_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      335     8070                         ERR#=0, SEV=7);
      336     8071            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='S',
      337     8072                          MON='0'B, ERR#=ERR#, SEV=SEV);
      338     8073        %MEND;
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:90   
      339     8074        %INCLUDE XSC_PERR_C;
      340     8151            %FATALDEF( NAME=XSS_F$READDONE, ERR#=%F$READDONE);
      341     8199            /*E*  ERROR:  XSS-F$READDONE-7
      342     8200                MESSAGE:  Unexpected M$READ activation.
      343     8201            */
      344     8202
      345     8203    1       DCL XSS$CTXPTR ENTRY(2) ALTRET;
      346     8204    1       DCL XSS$SCREECH ENTRY(1);
      347     8205    1       DCL XSS$EVLOG ENTRY(2);
      348     8206
      349     8207    1       DCL XSS_EVENTED BIT(1) SYMREF;
      350     8208    1       DCL XSS_EVHDX UBIN HALF HALIGNED SYMREF;
      351     8209    1       DCL XSS_EVTLX UBIN HALF HALIGNED SYMREF;
      352     8210
      353     8211    1       DCL CTX$ PTR;
      354     8212    1       DCL EVENT# SBIN;
      355     8213    1       DCL LASTSTA$ PTR;
      356     8214    1       DCL SCID SBIN;
      357     8215    1       DCL TEMP SBIN;
      358     8216
      359     8217            /* this entire procedure is INHIBITED to avoid TCB overflow */
      360     8218    2       DO INHIBIT;

      361     8219    2           EVENT# = B$EXCFR.EVID;

   8219  2 000002   200003 470700                    LDP0  ! @B$EXCFR,,AUTO
         2 000003   000101 235300                    LDA   ! 65,,PR0
         2 000004   200005 755300                    STA   ! EVENT#,,AUTO

      362     8220    2           IF %XSS_EVID ~= EVENT# / 512 THEN

   8220  2 000005   200005 236300                    LDQ   ! EVENT#,,AUTO
         2 000006   001000 506207                    DIV   ! 512,DL
         2 000007   000000 116200 3                  CMPQ  ! 0
         2 000010   000012 600200 2                  TZE   ! s:8223

      363     8221                    /* application's event handler thought this event was ours */
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:91   
      364     8222    2               ALTRETURN;

   8222  2 000011   000000 702200 xent               TSX2  ! X66_AALT

      365     8223    2           SCID = MOD( EVENT#, 512);

   8223  2 000012   200005 236300                    LDQ   ! EVENT#,,AUTO
         2 000013   001000 506207                    DIV   ! 512,DL
         2 000014   200007 755300                    STA   ! SCID,,AUTO

      366     8224    2           CALL XSS$EVLOG( 'EV', SCID);

   8224  2 000015   200007 631700                    EPPR1 ! SCID,,AUTO
         2 000016   200013 451700                    STP1  ! TEMP+3,,AUTO
         2 000017   000002 236200 3                  LDQ   ! 2
         2 000020   200012 756300                    STQ   ! TEMP+2,,AUTO
         2 000021   200012 630700                    EPPR0 ! TEMP+2,,AUTO
         2 000022   000001 631600 3                  EPPR1 ! 1
         2 000023   000000 701200 xent               TSX1  ! XSS$EVLOG
         2 000024   000000 011200                    NOP   ! 0

      367     8225    2           CALL XSS$CTXPTR( SCID, CTX$) ALTRET( SKIPIT);  /* INHIBITED */

   8225  2 000025   200004 630700                    EPPR0 ! CTX$,,AUTO
         2 000026   200013 450700                    STP0  ! TEMP+3,,AUTO
         2 000027   200007 631700                    EPPR1 ! SCID,,AUTO
         2 000030   200012 451700                    STP1  ! TEMP+2,,AUTO
         2 000031   200012 630700                    EPPR0 ! TEMP+2,,AUTO
         2 000032   000001 631600 3                  EPPR1 ! 1
         2 000033   000000 701200 xent               TSX1  ! XSS$CTXPTR
         2 000034   000041 702200 2                  TSX2  ! SKIPIT

      368     8226    2           IF SCTX.TERMINATING THEN

   8226  2 000035   200004 470700                    LDP0  ! CTX$,,AUTO
         2 000036   000013 236300                    LDQ   ! 11,,PR0
         2 000037   002000 316207                    CANQ  ! 1024,DL
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:92   
         2 000040   000042 600200 2                  TZE   ! s:8229

      369     8227    2   SKIPIT:     /* just ignore this event */
      370     8228    2               RETURN;

   8228  2 000041   000000 702200 xent  SKIPIT       TSX2  ! X66_ARET

      371     8229    2           IF SCTX.LATCH.PRESENT THEN

   8229  2 000042   000035 234300                    SZN   ! 29,,PR0
         2 000043   000050 605200 2                  TPL   ! s:8231

      372     8230    2               CALL XSS$SCREECH( XSS_F$READDONE);

   8230  2 000044   000004 630600 3                  EPPR0 ! 4
         2 000045   000003 631600 3                  EPPR1 ! 3
         2 000046   000000 701200 xent               TSX1  ! XSS$SCREECH
         2 000047   000000 011200                    NOP   ! 0

      373     8231    2           XSS_EVENTED = %TRUE;

   8231  2 000050   400000 236203                    LDQ   ! -131072,DU
         2 000051   000000 756200 xsym               STQ   ! XSS_EVENTED

      374     8232    2           SCTX.LATCH.PRESENT = %TRUE;

   8232  2 000052   200004 470700                    LDP0  ! CTX$,,AUTO
         2 000053   000035 256300                    ORSQ  ! 29,,PR0

      375     8233    2           SCTX.LATCH.ADMIN = %FALSE;

   8233  2 000054   000005 236200 3                  LDQ   ! 5
         2 000055   000035 356300                    ANSQ  ! 29,,PR0

      376     8234    2           LASTSTA$ = DCBADDR( SCTX.DCB#)->F$DCB.LASTSTA$;

   8234  2 000056   000006 471600 3                  LDP1  ! 6
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:93   
         2 000057   100000 473700                    LDP3  ! 0,,PR1
         2 000060   000033 720300                    LXL0  ! 27,,PR0
         2 000061   300000 474710                    LDP4  ! 0,X0,PR3
         2 000062   400007 236300                    LDQ   ! 7,,PR4
         2 000063   200006 756300                    STQ   ! LASTSTA$,,AUTO

      377     8235    2           IF LASTSTA$ = ADDR( NIL) THEN

   8235  2 000064   000007 116200 3                  CMPQ  ! 7
         2 000065   000073 601200 2                  TNZ   ! s:8238

      378     8236    2               SCTX.LATCH.STATION = ' ';

   8236  2 000066   000010 235200 3                  LDA   ! 8
         2 000067   000010 236200 3                  LDQ   ! 8
         2 000070   000041 755300                    STA   ! 33,,PR0
         2 000071   000042 756300                    STQ   ! 34,,PR0
         2 000072   000105 710200 2                  TRA   ! s:8242

      379     8237    3           ELSE DO;

      380     8238    3               SCTX.LATCH.STATION = B$STATION.STATION#;

   8238  2 000073   200006 475700                    LDP5  ! LASTSTA$,,AUTO
         2 000074   040100 100700                    MLR   ! fill='040'O
         2 000075   500000 000010                    ADSC9   0,,PR5                   cn=0,n=8
         2 000076   000041 000010                    ADSC9   33,,PR0                  cn=0,n=8

      381     8239    3               IF B$STATION.MSGTYP# = '*AUEV   ' THEN

   8239  2 000077   040000 106700                    CMPC  ! fill='040'O
         2 000100   500002 000010                    ADSC9   2,,PR5                   cn=0,n=8
         2 000101   000002 000010 1                  ADSC9   XSS_F$READDONE+2         cn=0,n=8
         2 000102   000105 601200 2                  TNZ   ! s:8242

      382     8240    3                   SCTX.LATCH.ADMIN = %TRUE;

PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:94   
   8240  2 000103   200000 236203                    LDQ   ! 65536,DU
         2 000104   000035 256300                    ORSQ  ! 29,,PR0

      383     8241    3               END;

      384     8242    2           SCTX.LATCH.ERRCODE = B$EXCFR.ERR;

   8242  2 000105   200003 475700                    LDP5  ! @B$EXCFR,,AUTO
         2 000106   500102 236300                    LDQ   ! 66,,PR5
         2 000107   000040 756300                    STQ   ! 32,,PR0

      385     8243    2           CALL XSS$EVLOG( , B$EXCFR.ERR);

   8243  2 000110   200003 236300                    LDQ   ! @B$EXCFR,,AUTO
         2 000111   000102 036203                    ADLQ  ! 66,DU
         2 000112   000007 235200 3                  LDA   ! 7
         2 000113   200012 757300                    STAQ  ! TEMP+2,,AUTO
         2 000114   200012 630700                    EPPR0 ! TEMP+2,,AUTO
         2 000115   000001 631600 3                  EPPR1 ! 1
         2 000116   000000 701200 xent               TSX1  ! XSS$EVLOG
         2 000117   000000 011200                    NOP   ! 0

      386     8244             /* SCTX.LATCH.MSG$ always the same */
      387     8245    2           SCTX.LATCH.MSGSZ = DCBADDR( SCTX.DCB#)->F$DCB.ARS#;

   8245  2 000120   000006 470600 3                  LDP0  ! 6
         2 000121   000000 471700                    LDP1  ! 0,,PR0
         2 000122   200004 473700                    LDP3  ! CTX$,,AUTO
         2 000123   300033 720300                    LXL0  ! 27,,PR3
         2 000124   100000 474710                    LDP4  ! 0,X0,PR1
         2 000125   400000 235300                    LDA   ! 0,,PR4
         2 000126   300037 755300                    STA   ! 31,,PR3

      388     8246                /* insert this context block onto the event queue */
      389     8247    2           IF XSS_EVTLX = %NULL THEN

   8247  2 000127   000000 221200 xsym               LDX1  ! XSS_EVTLX
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:95   
         2 000130   777777 101203                    CMPX1 ! -1,DU
         2 000131   000135 601200 2                  TNZ   ! s:8250

      390     8248    2               XSS_EVHDX = SCID;

   8248  2 000132   200007 722300                    LXL2  ! SCID,,AUTO
         2 000133   000000 742200 xsym               STX2  ! XSS_EVHDX
         2 000134   000153 710200 2                  TRA   ! s:8254

      391     8249    3           ELSE DO;

      392     8250    3               TEMP = XSS_EVTLX;

   8250  2 000135   000000 236200 xsym               LDQ   ! XSS_EVTLX
         2 000136   000022 772200                    QRL   ! 18
         2 000137   200010 756300                    STQ   ! TEMP,,AUTO

      393     8251    3               CALL XSS$CTXPTR( TEMP, CTX$);  /* Note change to CTX$ */

   8251  2 000140   200004 635700                    EPPR5 ! CTX$,,AUTO
         2 000141   200013 455700                    STP5  ! TEMP+3,,AUTO
         2 000142   200010 636700                    EPPR6 ! TEMP,,AUTO
         2 000143   200012 456700                    STP6  ! TEMP+2,,AUTO
         2 000144   200012 630700                    EPPR0 ! TEMP+2,,AUTO
         2 000145   000001 631600 3                  EPPR1 ! 1
         2 000146   000000 701200 xent               TSX1  ! XSS$CTXPTR
         2 000147   000000 011200                    NOP   ! 0

      394     8252    3               SCTX.LATCH.LNKX = SCID;

   8252  2 000150   200007 720300                    LXL0  ! SCID,,AUTO
         2 000151   200004 470700                    LDP0  ! CTX$,,AUTO
         2 000152   000035 440300                    SXL0  ! 29,,PR0

      395     8253    3               END;

      396     8254    2           XSS_EVTLX = SCID;
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:96   

   8254  2 000153   200007 720300                    LXL0  ! SCID,,AUTO
         2 000154   000000 740200 xsym               STX0  ! XSS_EVTLX

      397     8255                /* done with this event */
      398     8256    2           RETURN;

   8256  2 000155   000000 702200 xent               TSX2  ! X66_ARET

      399     8257    2           END;

      400     8258
      401     8259    1       END XSS$EVENT;

   8259  2 000156   000000 702200 xent               TSX2  ! X66_ARET

XSS_F$READDONE
 Sect OctLoc
   1     000   302323 001447                                                    ....

(unnamed)
 Sect OctLoc
   1     001   105126 040040   052101 125105   126040 040040                    EV  *AUEV

(unnamed)
 Sect OctLoc
   3     000   000130 123123   000002 000000   000001 006000   000001 000000    .XSS............
   3     004   000000 006000   577777 777777   000000 006003   000000 006014    ................
   3     010   040040 040040
      402     8260        %EOD;

PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:97   
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSS_INTERNAL_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSS$EVENT.
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:98   

 **** Variables and constants ****

  ****  Section 001 RoData XSS$EVENT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XSS_F$READDONE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @B$EXCFR                  *0-0-0/w STRC(2448)  r     1 B$EXCFR
     4-0-0/w PTR         r     1 CTX$                       5-0-0/w SBIN        r     1 EVENT#
     6-0-0/w PTR         r     1 LASTSTA$                   7-0-0/w SBIN        r     1 SCID
    10-0-0/w SBIN        r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 XSS_EVENTED                0-0-0/h UBIN(18)    r     1 XSS_EVHDX
     0-0-0/h UBIN(18)    r     1 XSS_EVTLX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)   r     1 B$STATION                  0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(1260)  r     1 SCTX

PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:99   

   Procedure XSS$EVENT requires 111 words for executable code.
   Procedure XSS$EVENT requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:100  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:101  
          MINI XREF LISTING

B$EXCFR
      5579**DCL        18--PROC
B$EXCFR.ASL
      5579**DCL      5579--REDEF
B$EXCFR.ERR
      5593**DCL      8242>>ASSIGN   8243<>CALL
B$EXCFR.ERR.ERR#
      5593**DCL      5593--REDEF
B$EXCFR.EVID
      5592**DCL      5592--REDEF    5593--REDEF    8219>>ASSIGN
B$EXCFR.IR
      5580**DCL      5580--REDEF
B$EXCFR.PREVSZ
      5579**DCL      5579--REDEF
B$EXCFR.SUBC
      5591**DCL      5591--REDEF    5592--REDEF    5592--REDEF
B$STATION.MSGIDXT
      5675**DCL      5678--REDEF
B$STATION.MSGTYP#
      5669**DCL      8239>>IF
B$STATION.STATION#
      5669**DCL      8238>>ASSIGN
CTX$
      8211**DCL      7653--IMP-PTR  8225<>CALL     8226>>IF       8229>>IF       8232>>ASSIGN   8233>>ASSIGN
      8234>>ASSIGN   8236>>ASSIGN   8238>>ASSIGN   8240>>ASSIGN   8242>>ASSIGN   8245>>ASSIGN   8245>>ASSIGN
      8251<>CALL     8252>>ASSIGN
EVENT#
      8212**DCL      8219<<ASSIGN   8220>>IF       8223>>ASSIGN
F$DCB.ACTPOS
      5629**DCL      5629--REDEF
F$DCB.ARS#
      5603**DCL      5603--REDEF    8245>>ASSIGN
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:102  
F$DCB.ATTR
      5622**DCL      5623--REDEF
F$DCB.BORROW
      5637**DCL      5637--REDEF    5637--REDEF    5637--REDEF
F$DCB.DCBNAME.L
      5651**DCL      5651--IMP-SIZ
F$DCB.EOMCHAR#
      5607**DCL      5607--REDEF
F$DCB.FLDID
      5632**DCL      5632--REDEF
F$DCB.FORM$
      5626**DCL      5626--REDEF
F$DCB.FSECT
      5642**DCL      5642--REDEF
F$DCB.FSN#
      5619**DCL      5619--REDEF    5619--REDEF    5620--REDEF
F$DCB.HEADER$
      5625**DCL      5625--REDEF
F$DCB.IXTNSIZE#
      5623**DCL      5623--REDEF
F$DCB.LASTSTA$
      5612**DCL      5612--REDEF    8234>>ASSIGN
F$DCB.LVL
      5638**DCL      5638--REDEF
F$DCB.NAME#.C
      5613**DCL      5613--REDEF
F$DCB.NOEOF
      5635**DCL      5635--REDEF
F$DCB.NRECS#
      5624**DCL      5624--REDEF
F$DCB.NRECX
      5643**DCL      5643--REDEF
F$DCB.OHDR
      5635**DCL      5635--REDEF
F$DCB.ORG#
      5618**DCL      5618--REDEF
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:103  
F$DCB.PRECNO
      5641**DCL      5641--REDEF
F$DCB.RCSZ
      5647**DCL      5647--REDEF
F$DCB.RES#
      5614**DCL      5614--REDEF
F$DCB.SETX
      5626**DCL      5626--REDEF
F$DCB.TAB$
      5626**DCL      5626--REDEF
F$DCB.TDA
      5640**DCL      5641--REDEF
F$DCB.WSN#
      5614**DCL      5614--REDEF
LASTSTA$
      8213**DCL      5665--IMP-PTR  8234<<ASSIGN   8235>>IF       8238>>ASSIGN   8239>>IF
SCID
      8214**DCL      8223<<ASSIGN   8224<>CALL     8225<>CALL     8248>>ASSIGN   8252>>ASSIGN   8254>>ASSIGN
SCTX.DCB#
      7982**DCL      8234--ASSIGN   8245--ASSIGN
SCTX.HISTZ
      7967**DCL      7968--REDEF
SCTX.LATCH.ADMIN
      8016**DCL      8233<<ASSIGN   8240<<ASSIGN
SCTX.LATCH.ERRCODE
      8035**DCL      8242<<ASSIGN
SCTX.LATCH.LNKX
      8018**DCL      8252<<ASSIGN
SCTX.LATCH.MSGSZ
      8020**DCL      8245<<ASSIGN
SCTX.LATCH.PRESENT
      8015**DCL      8229>>IF       8232<<ASSIGN
SCTX.LATCH.STATION
      8066**DCL      8236<<ASSIGN   8238<<ASSIGN
SCTX.TERMINATING
      7947**DCL      8226>>IF
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:104  
SKIPIT
      8228**LABEL    8225--CALLALT
TEMP
      8215**DCL      8250<<ASSIGN   8251<>CALL
XSS$CTXPTR
      8203**DCL-ENT  8225--CALL     8251--CALL
XSS$EVLOG
      8205**DCL-ENT  8224--CALL     8243--CALL
XSS$SCREECH
      8204**DCL-ENT  8230--CALL
XSS_EVENTED
      8207**DCL      8231<<ASSIGN
XSS_EVHDX
      8208**DCL      8248<<ASSIGN
XSS_EVTLX
      8209**DCL      8247>>IF       8250>>ASSIGN   8254<<ASSIGN
XSS_F$READDONE
      8165**DCL      8230<>CALL
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:105  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:106  
              MINI UREF LISTING

M$ACCT    5523**DCL-ENT
M$ACTIVATE    5526**DCL-ENT
M$ALIB    5519**DCL-ENT
M$ASUSER    5521**DCL-ENT
M$ATTACH    5528**DCL-ENT
M$BADPP    5546**DCL-ENT
M$CGCTL    5527**DCL-ENT
M$CGINFO    5527**DCL-ENT
M$CHECK    5508**DCL-ENT
M$CHGUNIT    5566**DCL-ENT
M$CLOSE    5506**DCL-ENT
M$CLRSTK    5564**DCL-ENT
M$CMDVAR    5575**DCL-ENT
M$CONFIG    5536**DCL-ENT
M$CORRES    5511**DCL-ENT
M$CPEXIT    5520**DCL-ENT
M$CVM    5544**DCL-ENT
M$CVOL    5509**DCL-ENT
M$DCLFLD    5536**DCL-ENT
M$DEACTIVATE    5526**DCL-ENT
M$DELREC    5508**DCL-ENT
M$DEQ    5573**DCL-ENT
M$DETACH    5528**DCL-ENT
M$DEVICE    5510**DCL-ENT
M$DISPLAY    5573**DCL-ENT
M$DISPRES    5513**DCL-ENT
M$DLIB    5519**DCL-ENT
M$DRIBBLE    5536**DCL-ENT
M$DRTN    5564**DCL-ENT
M$DSUSER    5521**DCL-ENT
M$ENQ    5572**DCL-ENT
M$EOM    5531**DCL-ENT
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:107  
M$ERASE    5537**DCL-ENT
M$ERR    5518**DCL-ENT
M$ERRMSG    5569**DCL-ENT
M$EVENT    5561**DCL-ENT
M$EXHUME    5570**DCL-ENT
M$EXIT    5518**DCL-ENT
M$EXTEND    5510**DCL-ENT
M$FDP    5542**DCL-ENT
M$FDS    5541**DCL-ENT
M$FEBOOT    5534**DCL-ENT
M$FECTL    5535**DCL-ENT
M$FEDUMP    5534**DCL-ENT
M$FID    5569**DCL-ENT
M$FINDPROC    5523**DCL-ENT
M$FSUSER    5521**DCL-ENT
M$FVP    5543**DCL-ENT
M$FWCG    5527**DCL-ENT
M$GBPL    5547**DCL-ENT
M$GDDL    5543**DCL-ENT
M$GDP    5542**DCL-ENT
M$GDS    5541**DCL-ENT
M$GETDCB    5512**DCL-ENT
M$GETMOUSE    5552**DCL-ENT
M$GETPM    5553**DCL-ENT
M$GJOB    5571**DCL-ENT
M$GLINEATTR    5531**DCL-ENT
M$GOODPP    5546**DCL-ENT
M$GPLATEN    5539**DCL-ENT
M$GPROMPT    5538**DCL-ENT
M$GTRMATTR    5532**DCL-ENT
M$GTRMCTL    5530**DCL-ENT
M$GTRMTAB    5533**DCL-ENT
M$GVP    5542**DCL-ENT
M$HELP    5569**DCL-ENT
M$INT    5561**DCL-ENT
M$INTRTN    5522**DCL-ENT
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:108  
M$IOQ    5557**DCL-ENT
M$JOBSTATS    5571**DCL-ENT
M$KEYIN    5511**DCL-ENT
M$LDEV    5506**DCL-ENT
M$LDTRC    5519**DCL-ENT
M$LIMIT    5512**DCL-ENT
M$LINES    5511**DCL-ENT
M$LINK    5518**DCL-ENT
M$MADMUCK    5514**DCL-ENT
M$MAKUSER    5545**DCL-ENT
M$MBS    5513**DCL-ENT
M$MDFFLD    5537**DCL-ENT
M$MERC    5562**DCL-ENT
M$MERCS    5563**DCL-ENT
M$MIRROR    5557**DCL-ENT
M$MONINFO    5574**DCL-ENT
M$MPL    5547**DCL-ENT
M$NODEINFO    5538**DCL-ENT
M$NXTUSR    5572**DCL-ENT
M$OCMSG    5570**DCL-ENT
M$OLAY    5518**DCL-ENT
M$OPEN    5506**DCL-ENT
M$PAS    5547**DCL-ENT
M$PATHCON    5570**DCL-ENT
M$PDS    5541**DCL-ENT
M$PFIL    5508**DCL-ENT
M$PLATEN    5532**DCL-ENT
M$PRECORD    5510**DCL-ENT
M$PROCNAME    5523**DCL-ENT
M$PROFILE    5534**DCL-ENT
M$PROMPT    5530**DCL-ENT
M$RACST    5514**DCL-ENT
M$RDSYSLOG    5555**DCL-ENT
M$READ    5507**DCL-ENT
M$RELDCB    5512**DCL-ENT
M$RELRES    5513**DCL-ENT
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:109  
M$RELSTARF    5515**DCL-ENT
M$REM    5515**DCL-ENT
M$RENV    5562**DCL-ENT
M$REQUIRE    5514**DCL-ENT
M$RETRY    5563**DCL-ENT
M$RETRYS    5563**DCL-ENT
M$REW    5509**DCL-ENT
M$RLSFLD    5537**DCL-ENT
M$RPRIV    5565**DCL-ENT
M$RSPP    5544**DCL-ENT
M$RSWITCH    5566**DCL-ENT
M$RUE    5572**DCL-ENT
M$SAD    5545**DCL-ENT
M$SAVE    5521**DCL-ENT
M$SCON    5522**DCL-ENT
M$SCREECH    5520**DCL-ENT
M$SENV    5562**DCL-ENT
M$SETFMA    5506**DCL-ENT
M$SETFP    5535**DCL-ENT
M$SINPUT    5533**DCL-ENT
M$SLCFLD    5538**DCL-ENT
M$SMOUSE    5552**DCL-ENT
M$SMPRT    5544**DCL-ENT
M$SPRIV    5565**DCL-ENT
M$SSC    5545**DCL-ENT
M$SSWITCH    5565**DCL-ENT
M$STATE    5574**DCL-ENT
M$STD    5546**DCL-ENT
M$STIMER    5560**DCL-ENT
M$STLPP    5543**DCL-ENT
M$STRAP    5560**DCL-ENT
M$STRMATTR    5532**DCL-ENT
M$STRMCTL    5530**DCL-ENT
M$STRMTAB    5533**DCL-ENT
M$SYMBIO    5571**DCL-ENT
M$SYSCON    5557**DCL-ENT
PL6.E3A0      #003=XSS$EVENT File=XSS$COMM.:XSA1TSI                              WED 10/01/97 12:09 Page:110  
M$SYSID    5575**DCL-ENT
M$TDCLOSE    5556**DCL-ENT
M$TDIO    5556**DCL-ENT
M$TDOPEN    5555**DCL-ENT
M$TDREQCPU    5556**DCL-ENT
M$TEMPWROC    5550**DCL-ENT
M$TIME    5573**DCL-ENT
M$TRAP    5560**DCL-ENT
M$TRMISC    5535**DCL-ENT
M$TRMPRG    5531**DCL-ENT
M$TRTN    5564**DCL-ENT
M$TRUNC    5507**DCL-ENT
M$TTIMER    5560**DCL-ENT
M$UC    5530**DCL
M$UMPL    5547**DCL-ENT
M$UNFID    5569**DCL-ENT
M$UNLATCH    5526**DCL-ENT
M$UNSHARE    5523**DCL-ENT
M$USRFIELD    5566**DCL-ENT
M$VIRTUAL    5541**DCL-ENT
M$WAIT    5564**DCL-ENT
M$WEOF    5509**DCL-ENT
M$WRITE    5507**DCL-ENT
M$WRSYSLOG    5555**DCL-ENT
M$XCON    5561**DCL-ENT
M$XCONRTN    5522**DCL-ENT
M$XEQTIME    5574**DCL-ENT
M$XFLUSH    5515**DCL-ENT
M$XMOUSE    5552**DCL-ENT
M$XXX    5518**DCL-ENT
M$YC    5520**DCL-ENT
XSS$EVENT      18**PROC

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:111  
      403        1        /*T***********************************************************/
      404        2        /*T*                                                         */
      405        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      406        4        /*T*                                                         */
      407        5        /*T***********************************************************/
      408        6        /*F*
      409        7                NAME:   XSS$COMMWAIT
      410        8                PURPOSE:
      411        9                    The user application (client or server) calls this routine to wait
      412       10                    for incoming messages.
      413       11                DESCRIPTION:
      414       12                    The number of seconds to wait is passed in the parameter PARM1.
      415       13                    If the wait is interrupted (which usually means an incoming
      416       14                    message was received) the routine ALTRETURNs.  If the wait is not
      417       15                    interrupted the routine RETURNs.
      418       16
      419       17                    Before waiting, the event queue is checked to see if a message
      420       18                    arrived since the last call to XSS$COMMWAIT.  If so, it is
      421       19                    processed and the appropriate M$READ reissued.
      422       20
      423       21                    NOTE: At most one non-Admin message will be processed (i.e., the
      424       22                    application's handler will be called at most one time) for each
      425       23                    call to XSS$COMMWAIT.  However, Session timer expirations may
      426       24                    cause additional entries to the application's handler.
      427       25        */
      428       26        XSS$COMMWAIT: PROC( PARM1) ALTRET;
      429       27        %INCLUDE XSS_SESSION_E;
      430      592        %INCLUDE B_ERRORS_C;
      431     1719        %INCLUDE CP_6;
      432     7278            %B$ALT;
      433     7286            %B$CGAURD( STCLASS="BASED( BUF$)");
      434     7305            %B$TCB;
      435     7308            %EQU_CG;
      436     7356            %F$DCB;
      437     7413            %FPT_SCREECH( SCODE=VLP_SUA);
      438     7427            %VLP_SUA( SEV=5, LDCTS=YES, CWSPT=YES, FCG='XS', MID='S', CODE=9999);
      439     7497            %FPT_EXTEND;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:112  
      440     7511            %FPT_READ( FPTN=AURD, WAIT=NO, TRANS=YES);
      441     7550            %FPT_READ( FPTN=NCRD, WAIT=NO, TRANS=YES);
      442     7589            %FPT_WAIT( UETIME=UETIME, UNITS=10);
      443     7603            %VLP_ERRCODE( FPTN=ERRCODE);
      444     7648            %VLP_STATION( FPTN=XSS_AUSTA, STATION='SERVER', STCLASS="STATIC SYMDEF");
      445     7675            %VLP_STATION( FPTN=XSS_NCSTA, STCLASS="STATIC SYMDEF");
      446     7702        %INCLUDE K_ADDRESS_M;
      447     8205        %INCLUDE XSC_COMMON_M;
      448     8858            %XSC$CCB( NAME=CCB, STCLASS="BASED( CCB$)");
      449     9155        %INCLUDE XSS_INTERNAL_E;
      450     9453        %INCLUDE XSS_INTERNAL_M;
      451    10042            %XSS$SCTX( NAME=SCTX, STCLASS="BASED( CTX$)");
      452    10476            %XSS$SCTX( NAME=LCTX, STCLASS="BASED( LCTX$)");
      453    10910        %MACRO FATALDEF( NAME=XSS_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      454    10911                         ERR#=0, SEV=7);
      455    10912            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='S',
      456    10913                          MON='0'B, ERR#=ERR#, SEV=SEV);
      457    10914        %MEND;
      458    10915        %INCLUDE XSC_PERR_C;
      459    10992            %FATALDEF( NAME=XSS_F$CGEVNTOTHER, ERR#=%F$CGEVNTOTHER);
      460    11040            /*E*  ERROR:  XSS-F$CGEVNTOTHER-7
      461    11041                MESSAGE:  Unexpected CG Admin event received.
      462    11042            */
      463    11043            %FATALDEF( NAME=XSS_F$CGWARNDISK, ERR#=%F$CGWARNDISK);
      464    11091            /*E*  ERROR:  XSS-F$CGWARNDISK-7
      465    11092                MESSAGE:  CG Admin disk warning received.
      466    11093            */
      467    11094            %FATALDEF( NAME=XSS_F$CGWARNMEM, ERR#=%F$CGWARNMEM);
      468    11142            /*E*  ERROR:  XSS-F$CGWARNMEM-7
      469    11143                MESSAGE:  CG Admin memory warning received.
      470    11144            */
      471    11145            %FATALDEF( NAME=XSS_F$CGWARNOTHER, ERR#=%F$CGWARNOTHER);
      472    11193            /*E*  ERROR:  XSS-F$CGWARNOTHER-7
      473    11194                MESSAGE:  Unexpected CG Admin warning received.
      474    11195            */
      475    11196            %FATALDEF( NAME=XSS_F$DECODE, ERR#=%F$DECODE);
      476    11244            /*E*  ERROR:  XSS-F$DECODE-7
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:113  
      477    11245                MESSAGE:  Malformed PDU detected by decoder.
      478    11246            */
      479    11247            %FATALDEF( NAME=XSS_F$EVNTQUE, ERR#=%F$EVNTQUE);
      480    11295            /*E*  ERROR:  XSS-F$EVNTQUE-7
      481    11296                MESSAGE:  Session event queue has been corrupted.
      482    11297            */
      483    11298
      484    11299    1       DCL XSS$ALARMCHECK ENTRY;
      485    11300    1       DCL XSS$CTXPTR ENTRY(2) ALTRET;
      486    11301    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      487    11302    1       DCL XSS$DUMPBYTES ENTRY(3) OPTIONAL;
      488    11303    1       DCL XSS$SCREECH ENTRY(1);
      489    11304    1       DCL XSS$TCREDIT ENTRY(1) ALTRET;
      490    11305    1       DCL XSS$EVLOG ENTRY(2);
      491    11306
      492    11307    1       DCL B$TCB$ PTR SYMREF;
      493    11308    1       DCL XSS_DEBUG UBIN SYMREF;
      494    11309    1       DCL XSS_ITRACE SBIN SYMREF;
      495    11310
      496    11311    1       DCL BUF$ PTR;
      497    11312    1       DCL COUNTER SBIN;
      498    11313    1       DCL CTX$ PTR;
      499    11314    1       DCL LCTX$ PTR;
      500    11315    1       DCL CCB$ REDEF LCTX$ PTR;
      501    11316    1       DCL LEN SBIN;
      502    11317    1       DCL MSG CHAR( LEN) BASED( PTR$);
      503    11318    1       DCL NEEDCREDIT BIT(1) UNAL;
      504    11319    1       DCL PTR$ PTR;
      505    11320    1       DCL FPT$ REDEF PTR$ PTR;
      506    11321    1       DCL PARM1 SBIN;
      507    11322    1       DCL RDBUFFER CHAR(%BUFSIZE) BASED( BUF$) CALIGNED;
      508    11323    1       DCL SCID SBIN;
      509    11324    1       DCL SECONDS SBIN;
      510    11325    1       DCL UETIME SBIN STATIC;
      511    11326    1       DCL XSS_EVENTED BIT(1) STATIC SYMDEF;
      512    11327    1       DCL XSS_EVHDX UBIN HALF HALIGNED INIT( %NULL) STATIC SYMDEF;
      513    11328    1       DCL XSS_EVTLX UBIN HALF HALIGNED INIT( %NULL) STATIC SYMDEF;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:114  
      514    11329    1       DCL AUTITLE CHAR(0) CONSTANT INIT( '(XSS$TRECV) AU rcvd');
      515    11330    1       DCL AUTITLE_ VECTOR CONSTANT INIT( VECTOR( AUTITLE));
      516    11331    1       DCL NCTITLE CHAR(0) CONSTANT INIT( '(XSS$TRECV) NC rcvd');
      517    11332    1       DCL NCTITLE_ VECTOR CONSTANT INIT( VECTOR( NCTITLE));
      518    11333
      519    11334    1   COMMWAIT:
      520    11335    1       SECONDS = PARM1;
      521    11336    1       CALL XSS$EVLOG( 'KW', SECONDS);
      522    11337    1   JOINWAIT:
      523    11338            /* save number of seconds to wait */
      524    11339    1       FPT_WAIT.V.UNITS# = SECONDS;
      525    11340    1       UETIME = 0;
      526    11341    1       COUNTER = 0;
      527    11342        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:115  
      528    11343    1   CHECK4MSG:
      529    11344    2       DO WHILE( COUNTER = 0);
      530    11345    2           IF XSS_EVHDX = %NULL THEN
      531    11346                    /* no messages were latched since last time */
      532    11347    2               EXIT CHECK4MSG;
      533    11348                /* remove the first latched message from the event queue */
      534    11349    3           DO INHIBIT;
      535    11350    3               SCID = XSS_EVHDX;
      536    11351    3               CALL XSS$CTXPTR( SCID, CTX$);  /* this routine is INHIBITED too */
      537    11352    4               IF SCTX.LATCH.LNKX = %NULL THEN DO;
      538    11353    4                   XSS_EVHDX = %NULL;
      539    11354    4                   XSS_EVTLX = %NULL;
      540    11355    4                   END;
      541    11356    4               ELSE DO;
      542    11357    4                   XSS_EVHDX = SCTX.LATCH.LNKX;
      543    11358    4                   SCTX.LATCH.LNKX = %NULL;
      544    11359    4                   END;
      545    11360    3               SCTX.LATCH.PRESENT = %FALSE;
      546    11361    3               END;
      547    11362                /* o.k. now deal with it */
      548    11363    3           IF XSS_ITRACE ~= 0 THEN DO;
      549    11364    3               PTR$ = SCTX.LATCH.MSG$;
      550    11365    3               LEN = SCTX.LATCH.MSGSZ;
      551    11366    4               DO CASE( SCTX.MODE);
      552    11367    4                   CASE( %CLIENT);
      553    11368    4                       CALL XSS$DUMPBYTES( 1, VECTOR( MSG), NCTITLE_);
      554    11369    4                   CASE( %SERVER);
      555    11370    4                       CALL XSS$DUMPBYTES( 1, VECTOR( MSG), AUTITLE_);
      556    11371    4                   END;
      557    11372    3               END;
      558    11373    2           NEEDCREDIT = %FALSE;
      559    11374        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:116  
      560    11375                /* see if this was a CG ADMIN msg on an AU DCB */
      561    11376    3           IF SCTX.LATCH.ADMIN THEN DO;
      562    11377    3               BUF$ = SCTX.LATCH.MSG$;
      563    11378    3               CALL XSS$EVLOG( 'AU', B$CGAURD.EVENT*512 + B$CGAURD.INFO);
      564    11379    4               DO CASE( B$CGAURD.EVENT);
      565    11380    4                   CASE( %CG_DOPN#);
      566    11381    4                   CASE( %CG_DCLS#);
      567    11382                            /* DCB close.  Make sure Session is told. */
      568    11383    4                       CALL QUICKDISC;
      569    11384    4                   CASE( %CG_TCON#);
      570    11385    4                   CASE( %CG_TDRQ#);
      571    11386    4                   CASE( %CG_TDSC#);
      572    11387    4                   CASE( %CG_WARN#);
      573    11388    5                       DO CASE( B$CGAURD.INFO);
      574    11389    5                           CASE( %CG_WARN_MEM#);
      575    11390    5                               CALL XSS$SCREECH( XSS_F$CGWARNMEM);
      576    11391    5                           CASE( %CG_WARN_DISK#);
      577    11392    5                               FPT_EXTEND.V.DCB# = SCTX.DCB#;
      578    11393    5                               FPT_EXTEND.V.SIZ# = %XTNSIZE;
      579    11394    5                               CALL M$EXTEND( FPT_EXTEND) ALTRET( XTNERR);
      580    11395                                 /* CALL XSS$SCREECH( XSS_F$CGWARNDISK); */
      581    11396    5                           CASE( ELSE);
      582    11397    5                               CALL XSS$SCREECH( XSS_F$CGWARNOTHER);
      583    11398    5                           END;
      584    11399    4                   CASE( ELSE);
      585    11400    4                       CALL XSS$SCREECH( XSS_F$CGEVNTOTHER);
      586    11401    4                   END;
      587    11402    3               END;
      588    11403    2           ELSE
      589    11404                    /* Not a CG ADMIN message.  Error being reported? */
      590    11405    3               IF SCTX.LATCH.ERRCODE THEN DO;
      591    11406    3                   ERRCODE = SCTX.LATCH.ERRCODE;
      592    11407    3                   CALL XSS$EVLOG( 'ER', SCID);
      593    11408    3                   CALL XSS$EVLOG( , ERRCODE);
      594    11409    3                   IF ERRCODE.ERR# = %E$LDSC THEN
      595    11410    3                       CALL QUICKDISC;
      596    11411    3                   ELSE
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:117  
      597    11412    3                       GOTO BAILOUT;  /* assume fatal error */
      598    11413    3                   END;
      599    11414    2               ELSE
      600    11415                        /* Otherwise, just a normal message */
      601    11416    2                   CALL HANDLEIT;
      602    11417        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:118  
      603    11418    2           IF NOT SCTX.ABORTING THEN
      604    11419                    /* reissue the no-wait read for this DCB */
      605    11420    3               DO CASE( SCTX.MODE);
      606    11421    3                   CASE( %CLIENT);
      607    11422    3                       IF XSS_DEBUG = 0 THEN
      608    11423    3                           NCRD.STATION_ = VECTOR( NIL);
      609    11424    3                       ELSE
      610    11425    3                           NCRD.STATION_ = VECTOR( XSS_AUSTA);
      611    11426    3                       CALL XSS$BUFPTR( SCTX.BUFX, BUF$);
      612    11427    3                       NCRD.BUF_ = VECTOR( RDBUFFER);
      613    11428    3                       NCRD.V.EVENT# = SCTX.EVENT#;
      614    11429    3                       NCRD.V.DCB# = SCTX.DCB#;
      615    11430    3                       CALL XSS$EVLOG( 'NW', SCID);
      616    11431    3                       CALL M$READ( NCRD) ALTRET( RDERR);
      617    11432    3                   CASE( %SERVER);
      618    11433    3                       AURD.V.EVENT# = SCTX.EVENT#;
      619    11434    3                       AURD.V.DCB# = SCTX.DCB#;
      620    11435    3                       CALL XSS$EVLOG( 'NW', SCID);
      621    11436    3                       IF DCBADDR( SCTX.DCB#)->F$DCB.FCN.CNT(0) = 0 THEN
      622    11437    3                           CALL M$READ( AURD) ALTRET( RDERR);
      623    11438    3                       IF ( COUNTER > 0 AND NOT LCTX.ABORTING) OR NEEDCREDIT THEN
      624    11439    3                           CALL XSS$TCREDIT( LCTX);
      625    11440    3                   END;
      626    11441                /* ..and continue the DO WHILE( COUNTER = 0) loop */
      627    11442    2           END;
      628    11443        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:119  
      629    11444            /* O.k., done handling one or more latched message(s), or none latched */
      630    11445            /* see if any Session timers have expired */
      631    11446    1       CALL XSS$ALARMCHECK;
      632    11447    1       IF COUNTER ~= 0 THEN
      633    11448                /* a user message was handled already, so don't bother M$WAITing */
      634    11449    1           ALTRETURN;
      635    11450    2       DO INHIBIT;
      636    11451    2           XSS_EVENTED = %FALSE;
      637    11452                /* wait for some number of seconds */
      638    11453    3           IF FPT_WAIT.V.UNITS# > 0 THEN DO;
      639    11454    3               CALL XSS$EVLOG( 'WT', FPT_WAIT.V.UNITS#);
      640    11455    3               CALL M$WAIT( FPT_WAIT);
      641    11456    3               END;
      642    11457    3           IF UETIME ~= 0 THEN DO;
      643    11458                    /* user wait was interrupted */
      644    11459    3               IF NOT XSS_EVENTED THEN
      645    11460    3                   ALTRETURN;  /* user must have hit <Break> */
      646    11461    3               FPT_WAIT.V.UNITS# = UETIME;  /* set up for remaining wait time */
      647    11462    3               GOTO CHECK4MSG;
      648    11463    3               END;
      649    11464    2           END;
      650    11465            /* user wait was not interrupted */
      651    11466    1       IF SECONDS > 10 THEN
      652    11467                /* was 'long' wait so check timers again */
      653    11468    1           CALL XSS$ALARMCHECK;
      654    11469    1       RETURN;
      655    11470    1   RDERR:
      656    11471    1       ;
      657    11472    1   XTNERR:
      658    11473    1       ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      659    11474    1   BAILOUT:
      660    11475    1       IF ERRCODE.SEV = 0 THEN
      661    11476    1           ERRCODE.SEV = 1;
      662    11477    1       CALL XSS$SCREECH( ERRCODE);
      663    11478            /* won't return here */
      664    11479        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:120  
      665    11480        /*I*    NAME:   HANDLEIT
      666    11481                DESCRIPTION:
      667    11482                    Does whatever is necessary to handle an incoming SPDU or TPDU.
      668    11483                    Information about the message is in SCTX.LATCH.
      669    11484        */
      670    11485    1   HANDLEIT: PROC;
      671    11486        /* K_ADDRESS_M already %INCLUDEd above */
      672    11487        %INCLUDE K_INTERFACE_M;
      673    11896            %K$FPT_CONNECT_OSI( NAME=TCONFPT, STCLASS=BASED);
      674    12233        /* XSS_SESSION_E already %INCLUDEd above */
      675    12234        %INCLUDE XSS_SESSION_M;
      676    14877            %XSS$GENERIC( FPTN=XSS_GENERIC, STCLASS=SYMREF);
      677    15023            %XSS$GENERIC( STCLASS="BASED( VBLK.FPT$)");
      678    15169            %XSS$CONNECT( STCLASS="BASED( VBLK.FPT$)");
      679    15492        /* XSS_INTERNAL_E and _M already %INCLUDEd above */
      680    15493            %XSS$GLUE( NAME=GLUE, STCLASS="BASED( SPDU$)");
      681    15523            %XSS$VBLK( NAME=VBLK, STCLASS=AUTO);
      682    15628            %XSS$VBLK( NAME=XSS_VBLK, STCLASS=SYMREF);
      683    15733        /* XSC_COMMON_M already %INCLUDEd above */
      684    15734            %XSC$ADDRESS( NAME=UADR, STCLASS="BASED( UADR$)");
      685    16017            %XSC$ADDRESS;
      686    16300            %XSC$CCB;
      687    16597
      688    16598    2       DCL XSS$DECODE ENTRY(1) ALTRET;
      689    16599    2       DCL XSS$GETCTX ENTRY(2) ALTRET;
      690    16600    2       DCL XSS$MACHINE ENTRY(1) ALTRET;
      691    16601
      692    16602    2       DCL XSS_CCB$$ PTR SYMREF;
      693    16603    2       DCL XSS_MAX_LCID SBIN SYMREF;
      694    16604
      695    16605    2       DCL CCB$(0:0) PTR BASED( XSS_CCB$$) ALIGNED;
      696    16606    2       DCL DST$ PTR;
      697    16607    2       DCL SRC$ PTR;
      698    16608    2       DCL SCID SBIN;
      699    16609    2       DCL SPDU CHAR( SPDUSZ) BASED( SPDU$);
      700    16610    2       DCL SPDU$ PTR;
      701    16611    2       DCL SPDUSZ SBIN;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:121  
      702    16612    2       DCL UADR$ PTR;
      703    16613        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:122  
      704    16614    2       SPDU$ = SCTX.LATCH.MSG$;
      705    16615    2       CALL XSS$EVLOG( 'QE', GLUE.TRNFNC*512 + GLUE.YRSCID);
      706    16616    2       IF GLUE.TRNFNC = %K_TCREDIT THEN
      707    16617    2           RETURN;  /* ignore this bogosity */
      708    16618    2       SCTX.MAGIC = GLUE.MAGIC;  /* so TCREDIT works.. */
      709    16619    2       SPDUSZ = SCTX.LATCH.MSGSZ;
      710    16620    2       VBLK = XSS_VBLK;
      711    16621    2       VBLK.PDU.SIZE = SPDUSZ;
      712    16622    2       VBLK.PDU.PTR$ = SPDU$;
      713    16623    2       VBLK.CTX$ = CTX$;
      714    16624    2       LCTX$ = CTX$;
      715    16625    3       IF GLUE.TRNFNC ~= %K_TCONNECT_IND THEN DO;
      716    16626    3           SCID = GLUE.YRSCID;
      717    16627    3           CALL XSS$CTXPTR( SCID, LCTX$)
      718    16628    4           WHENALTRETURN DO;
      719    16629                    /* Connection must have aborted.  Well, fine. */
      720    16630    4               RETURN;
      721    16631    4               END;
      722    16632    3           VBLK.CTX$ = LCTX$;
      723    16633    3           LCTX.MAGIC = GLUE.MAGIC;
      724    16634    3           END;
      725    16635    2       CALL XSS$BUFPTR( CCB$( LCTX.SCID)->XSC$CCB.SFPTX, VBLK.FPT$);
      726    16636        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:123  
      727    16637    3       DO CASE( GLUE.TRNFNC);
      728    16638    3           CASE( %K_TCONNECT_IND);
      729    16639    3               VBLK.EVENT = %XSS_SEV_TCONIND;
      730    16640    3               CALL XSS$GETCTX( LCTX$)
      731    16641    4               WHENALTRETURN DO;
      732    16642                        /*N* ignore this for now.  Eventually do T-DISCONNECT */
      733    16643    4                   END;
      734    16644                    /* copy contents of original CCB to new one */
      735    16645    3               CCB$( LCTX.SCID)->XSC$CCB = CCB$( SCTX.SCID)->XSC$CCB;
      736    16646    3               CCB$( LCTX.SCID)->XSC$CCB.LCID = LCTX.SCID;
      737    16647                    /* copy contents of address buffers too */
      738    16648    3               CALL XSS$BUFPTR( SCTX.SRCX, SRC$);
      739    16649    3               CALL XSS$BUFPTR( LCTX.SRCX, DST$);
      740    16650    3               DST$->XSC$ADDRESS = SRC$->XSC$ADDRESS;
      741    16651    3               CALL XSS$BUFPTR( SCTX.DSTX, SRC$);
      742    16652    3               CALL XSS$BUFPTR( LCTX.DSTX, DST$);
      743    16653    3               DST$->XSC$ADDRESS = SRC$->XSC$ADDRESS;
      744    16654    3               VBLK.CTX$ = LCTX$;
      745    16655    3               SCID = LCTX.SCID;
      746    16656    3               XSS$GENERIC.SCID = LCTX.SCID;
      747    16657    3               LCTX.MAGIC = GLUE.MAGIC;
      748    16658    3               CALL ADDRSETUP;
      749    16659    3               LCTX.PEERSCID = GLUE.MYSCID;
      750    16660    3               LCTX.MODE = %SERVER;
      751    16661    3               LCTX.STATION = SCTX.LATCH.STATION;
      752    16662    3               LCTX.DCB# = SCTX.DCB#;
      753    16663    3               LCTX.EVENT# = SCTX.EVENT#;
      754    16664    3               LCTX.ENTRY$ = SCTX.ENTRY$;
      755    16665    3               LCTX.LATCH.MSG$ = SCTX.LATCH.MSG$;
      756    16666    3           CASE( %K_TCONNECT_CFM);
      757    16667    3               XSS$GENERIC.SCID = LCTX.SCID;
      758    16668    3               CALL ADDRSETUP;
      759    16669    3               LCTX.PEERSCID = GLUE.MYSCID;
      760    16670    3               VBLK.EVENT = %XSS_SEV_TCONCNF;
      761    16671    3               NEEDCREDIT = %TRUE;
      762    16672    3           CASE( %K_TDISCONNECT_IND);
      763    16673    3               XSS$GENERIC.SCID = LCTX.SCID;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:124  
      764    16674    3               CALL ADDRSETUP;
      765    16675    3               VBLK.EVENT = %XSS_SEV_TDISIND;
      766    16676    3           CASE( %K_TFLOW_STOP);
      767    16677    3               LCTX.FLOWSTOPPED = %TRUE;
      768    16678    3               COUNTER = COUNTER + 1;
      769    16679    3               RETURN;
      770    16680    3           CASE( %K_TFLOW_START);
      771    16681    3               LCTX.FLOWSTOPPED = %FALSE;
      772    16682    3               COUNTER = COUNTER + 1;
      773    16683    3               RETURN;
      774    16684    3           CASE( %K_TDATA_IND,
      775    16685    3                 %K_TEXPD_DATA_IND);
      776    16686    3               VBLK.EVENT = %XSS_SEV_NULL;
      777    16687    3               SPDU$ = ADDR( GLUE.DATA);
      778    16688    3               VBLK.PDU.PTR$ = SPDU$;
      779    16689    3               SPDUSZ = SPDUSZ - 4;
      780    16690    3               VBLK.PDU.SIZE = SPDUSZ;
      781    16691                    /* Decode the SPDU(s) and invoke state machine for each one */
      782    16692    3               CALL XSS$DECODE( VBLK)
      783    16693    4               WHENALTRETURN DO;
      784    16694                        /*N* fix this */
      785    16695    4                   CALL XSS$SCREECH( XSS_F$DECODE);
      786    16696    4                   END;
      787    16697    3               COUNTER = COUNTER + VBLK.USERCALL;  /* Session handler called? */
      788    16698    3               RETURN;
      789    16699    3           END;
      790    16700    2       CALL XSS$MACHINE( VBLK)
      791    16701    3       WHENALTRETURN DO;
      792    16702                /* Connection has aborted.  Fine with me. */
      793    16703    3           END;
      794    16704    2       COUNTER = COUNTER + VBLK.USERCALL;
      795    16705    2       RETURN;
      796    16706        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:125  
      797    16707        /*I*    NAME:   ADDRSETUP
      798    16708                DESCRIPTION:
      799    16709                    This internal routine picks apart the FPT_CONNECT_OSI or
      800    16710                    FPT_TERM_OSI and puts the source and destination TSAPs and
      801    16711                    NSAPs in AUTO structures, then frames these structures in
      802    16712                    the Session FPT that the state machine is entered with.
      803    16713        */
      804    16714    2   ADDRSETUP: PROC;
      805    16715
      806    16716    3       DCL PTR$ PTR;
      807    16717    3       DCL LEN SBIN;
      808    16718    3       DCL BYTES CHAR( LEN) BASED;
      809    16719
      810    16720    3       PTR$ = ADDR( GLUE.DATA);
      811    16721    3       IF GLUE.TRNFNC = %K_TDISCONNECT_IND THEN
      812    16722    3           PTR$ = PINCRW( PTR$, -5);  /*N* adjust ptr for TERM fpt grossly */
      813    16723    4       ELSE DO;
      814    16724    4           CALL XSS$BUFPTR( LCTX.SRCX, XSS$CONNECT.CALLING$);
      815    16725    4           CALL XSS$BUFPTR( LCTX.DSTX, XSS$CONNECT.CALLED$);
      816    16726    4           LCTX.FLAGS.TEXP = PTR$->TCONFPT.TR_FLAGS.EXPEDITED;
      817    16727    4           END;
      818    16728    3       CALL XSS$BUFPTR( LCTX.SRCX, UADR$);
      819    16729    3       UADR$->UADR.TSAP = PTR$->TCONFPT.SRC_TSAP;
      820    16730    3       UADR$->UADR.NSAP = PTR$->TCONFPT.SRC_NSAP;
      821    16731    3       CALL XSS$BUFPTR( LCTX.DSTX, UADR$);
      822    16732    3       UADR$->UADR.TSAP = PTR$->TCONFPT.DST_TSAP;
      823    16733    3       UADR$->UADR.NSAP = PTR$->TCONFPT.DST_NSAP;
      824    16734    3       RETURN;
      825    16735
      826    16736    3       END ADDRSETUP;
      827    16737        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:126  
      828    16738        /*I*    NAME:   QUICKDISC
      829    16739                DESCRIPTION:
      830    16740                    This internal routine deals with a disconnection reported by
      831    16741                    means other than the Session protocol.  This can only happen
      832    16742                    when a 'fast path' (comgroup-direct) link is involved.
      833    16743                    QUICKDISC is called in the following situations:
      834    16744                        E$LDSC on client no-wait read of server CG,
      835    16745                        CG_DCLS administrative message read by server.
      836    16746        */
      837    16747    2   QUICKDISC: ENTRY;
      838    16748
      839    16749    2       VBLK = XSS_VBLK;
      840    16750    2       VBLK.PDU.SIZE = 0;
      841    16751    2       VBLK.PDU.PTR$ = ADDR( NIL);
      842    16752    2       VBLK.EVENT = %XSS_SEV_TDISIND;
      843    16753    3       DO SCID = 1 TO XSS_MAX_LCID;
      844    16754    3           CALL XSS$CTXPTR( SCID, LCTX$) ALTRET( NXTSCID);
      845    16755    3           IF LCTX.STATE > %XSS_SST_01 AND
      846    16756    4                   LCTX.STATION = SCTX.LATCH.STATION THEN DO;
      847    16757    4               VBLK.CTX$ = LCTX$;
      848    16758    4               CALL XSS$BUFPTR( CCB$( LCTX.SCID)->XSC$CCB.SFPTX, VBLK.FPT$);
      849    16759    4               XSS$GENERIC.SCID = LCTX.SCID;
      850    16760    4               CALL XSS$MACHINE( VBLK)
      851    16761    5               WHENALTRETURN DO;
      852    16762                        /* Connection has aborted.  O.k. with me. */
      853    16763    5                   END;
      854    16764    4               COUNTER = COUNTER + 1;  /* because SS-user handler was entered */
      855    16765    4               LCTX.ABORTING = %TRUE;
      856    16766    4               END;
      857    16767    3   NXTSCID:
      858    16768    3           END;
      859    16769    2       RETURN;
      860    16770
      861    16771    2       END HANDLEIT;
      862    16772        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:127  
      863    16773        /*F*
      864    16774                NAME:   XSS$COMMWAITX
      865    16775                PURPOSE:
      866    16776                    This routine issues the first no-wait read to an AU or NC DCB.
      867    16777                    Subsequent reads are issued by XSS$COMMWAIT above.
      868    16778        */
      869    16779    1   XSS$COMMWAITX: ENTRY( PARM1) ALTRET;
      870    16780
      871    16781    1       CCB$ = ADDR( PARM1);
      872    16782            /* get ptrs to context and read buffer */
      873    16783    1       CALL XSS$BUFPTR( CCB.SFPTX, FPT$);
      874    16784    1       SCID = CCB.LCID;
      875    16785    1       CALL XSS$EVLOG( 'KX', SCID);
      876    16786    1       CALL XSS$CTXPTR( SCID, CTX$);
      877    16787    1   FIRSTREAD:
      878    16788    1       CALL XSS$BUFPTR( SCTX.BUFX, BUF$);
      879    16789            /* set up and then issue no-wait read */
      880    16790    2       DO CASE( SCTX.MODE);
      881    16791    2           CASE( %CLIENT);
      882    16792    2               IF XSS_DEBUG ~= 0 THEN
      883    16793    2                   NCRD.STATION_ = VECTOR( XSS_AUSTA);
      884    16794    2               ELSE
      885    16795    2                   NCRD.STATION_ = VECTOR( NIL);
      886    16796    2               NCRD.BUF_ = VECTOR( RDBUFFER);
      887    16797    2               NCRD.V.EVENT# = SCTX.EVENT#;
      888    16798    2               NCRD.V.DCB# = SCTX.DCB#;
      889    16799    2               CALL XSS$EVLOG( 'NW', SCID);
      890    16800    2               CALL M$READ( NCRD) ALTRET( RDERR);
      891    16801    2           CASE( %SERVER);
      892    16802    2               AURD.BUF_ = VECTOR( RDBUFFER);
      893    16803    2               AURD.V.EVENT# = SCTX.EVENT#;
      894    16804    2               AURD.V.DCB# = SCTX.DCB#;
      895    16805    2               CALL XSS$EVLOG( 'NW', SCID);
      896    16806    2               IF DCBADDR( SCTX.DCB#)->F$DCB.FCN.CNT(0) = 0 THEN
      897    16807    2                   CALL M$READ( AURD) ALTRET( RDERR);
      898    16808    2           END;
      899    16809            /* see if we got an error on the read */
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:128  
      900    16810    1       IF SCTX.LATCH.PRESENT THEN
      901    16811    2           IF SCTX.LATCH.ERRCODE THEN DO;
      902    16812    2               ERRCODE = SCTX.LATCH.ERRCODE;
      903    16813    2               GOTO BAILOUT;
      904    16814    2               END;
      905    16815    1       RETURN;
      906    16816
      907    16817    1   XSS$COMMWAITZ: ENTRY( PARM1) ALTRET;
      908    16818
      909    16819    1       CTX$ = ADDR( PARM1);
      910    16820    1       SCID = SCTX.SCID;
      911    16821    1       CALL XSS$EVLOG( 'KZ', SCID);
      912    16822    1       SCTX.NEEDAREAD = %FALSE;
      913    16823    1       GOTO FIRSTREAD;
      914    16824        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:129  
      915    16825        /*F*
      916    16826                NAME:   XSS$COMMPEND
      917    16827                PURPOSE:
      918    16828                    This routine checks to see if there is an incoming message for
      919    16829                    a specific connection, and if so processes it.
      920    16830                DESCRIPTION:
      921    16831                    This routine is called from XSS$SESSION in case a message has
      922    16832                    arrived for a particular connection since the application last
      923    16833                    polled for incoming messages.  This helps make the client/server
      924    16834                    interaction more predictable (i.e., helps prevent state errors).
      925    16835
      926    16836                    The event queue is searched for the message and it is moved to
      927    16837                    the front of the queue.  Then we jump to JOINWAIT to handle it.
      928    16838        */
      929    16839    1   XSS$COMMPEND: ENTRY( PARM1) ALTRET;
      930    16840
      931    16841    1       CALL XSS$EVLOG( 'KP', PARM1);
      932    16842    2       DO INHIBIT;
      933    16843    2           SCID = XSS_EVHDX;
      934    16844    2           IF SCID = PARM1 THEN
      935    16845                    /* first item in event queue is the one we want */
      936    16846    2               GOTO COMMON;
      937    16847    2   LOOP:
      938    16848    2           CALL XSS$CTXPTR( SCID, CTX$);  /* this routine is INHIBITED too */
      939    16849    3           IF SCTX.LATCH.LNKX = PARM1 THEN DO;
      940    16850                    /* this item in event queue points to the one we want */
      941    16851                    /* Move wanted one to head of event queue */
      942    16852    3               CALL XSS$CTXPTR( PARM1, LCTX$);
      943    16853    3               SCTX.LATCH.LNKX = LCTX.LATCH.LNKX;
      944    16854    3               LCTX.LATCH.LNKX = XSS_EVHDX;
      945    16855    3               IF XSS_EVTLX = PARM1 THEN
      946    16856    3                   XSS_EVTLX = SCTX.SCID;
      947    16857    3               XSS_EVHDX = PARM1;
      948    16858    3   COMMON:
      949    16859                    /* make sure we don't do an M$WAIT */
      950    16860    3               SECONDS = 0;
      951    16861                    /* Now go handle that message */
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:130  
      952    16862    3               GOTO JOINWAIT;
      953    16863    3               END;
      954    16864    2           IF SCTX.LATCH.LNKX = %NULL THEN
      955    16865                    /* Reached end of queue.  Something's wrong here */
      956    16866    2               CALL XSS$SCREECH( XSS_F$EVNTQUE);
      957    16867                /* Otherwise, check next item in queue */
      958    16868    2           SCID = SCTX.LATCH.LNKX;
      959    16869    2           GOTO LOOP;
      960    16870    2           END;
      961    16871            /* ..can't get here.. */
      962    16872        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:131  
      963    16873        /*F*
      964    16874                NAME:   XSP$COMMWAIT
      965    16875                PURPOSE:
      966    16876                    Provides a COMMWAIT ENTRY for Presentation applications.
      967    16877        */
      968    16878    1   XSP$COMMWAIT: ENTRY( PARM1) ALTRET;
      969    16879
      970    16880    1       GOTO COMMWAIT;
      971    16881
      972    16882        /*F*
      973    16883                NAME:   XSC$COMMWAIT
      974    16884                PURPOSE:
      975    16885                    Provides a COMMWAIT ENTRY for ACSE applications.
      976    16886        */
      977    16887    1   XSC$COMMWAIT: ENTRY( PARM1) ALTRET;
      978    16888
      979    16889    1       GOTO COMMWAIT;
      980    16890
      981    16891    1       END XSS$COMMWAIT;
      982    16892        %EOD;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:132  
--  Include file information  --

   XSS_SESSION_M.:XSA1TOU  is referenced.
   K_INTERFACE_M.:E05OU  is referenced.
   XSC_PERR_C.:XSA1TOU  is referenced.
   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSS_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSS$COMMWAIT.

   Procedure XSS$COMMWAIT requires 966 words for executable code.
   Procedure XSS$COMMWAIT requires 40 words of local(AUTO) storage.

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:133  

 Object Unit name= XSS$COMMWAIT                               File name= XSS$COMM.:XSA1TOU
 UTS= OCT 01 '97 12:09:54.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    67    103  XSS$COMMWAIT
    2  RoData even  UTS     31     37  XSS$COMMWAIT
    3   Proc  even  none   966   1706  XSS$COMMWAIT
    4  RoData even  none    37     45  XSS$COMMWAIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  XSS$COMMWAIT
     3   1365          yes     yes      Std        1  XSS$COMMWAITX
     3   1546          yes     yes      Std        1  XSS$COMMWAITZ
     3   1573          yes     yes      Std        1  XSS$COMMPEND
     3   1700          yes     yes      Std        1  XSP$COMMWAIT
     3   1703          yes     yes      Std        1  XSC$COMMWAIT
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:134  

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1     57  XSS_AUSTA                          1     67  XSS_NCSTA
    2      0  XSS_F$CGEVNTOTHER                  2      1  XSS_F$CGWARNDISK
    2      2  XSS_F$CGWARNMEM                    2      3  XSS_F$CGWARNOTHER
    2      4  XSS_F$DECODE                       2      5  XSS_F$EVNTQUE
    1    100  XSS_EVENTED                        1    101  XSS_EVHDX
    1    102  XSS_EVTLX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 XSS$EVLOG
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       1 XSS$TCREDIT
 yes     yes           Std       2 XSS$CTXPTR
         yes    yes    Std       3 XSS$DUMPBYTES
 yes     yes           Std       2 XSS$BUFPTR
         yes           Std       0 XSS$ALARMCHECK
 yes     yes           Std       1 XSS$DECODE
 yes     yes           Std       1 XSS$MACHINE
 yes     yes           Std       2 XSS$GETCTX
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                XSS_DEBUG
     XSS_ITRACE                            XSS_VBLK                              XSS_CCB$$
     XSS_MAX_LCID
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:135  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:136  


      403        1        /*T***********************************************************/
      404        2        /*T*                                                         */
      405        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      406        4        /*T*                                                         */
      407        5        /*T***********************************************************/
      408        6        /*F*
      409        7                NAME:   XSS$COMMWAIT
      410        8                PURPOSE:
      411        9                    The user application (client or server) calls this routine to wait
      412       10                    for incoming messages.
      413       11                DESCRIPTION:
      414       12                    The number of seconds to wait is passed in the parameter PARM1.
      415       13                    If the wait is interrupted (which usually means an incoming
      416       14                    message was received) the routine ALTRETURNs.  If the wait is not
      417       15                    interrupted the routine RETURNs.
      418       16
      419       17                    Before waiting, the event queue is checked to see if a message
      420       18                    arrived since the last call to XSS$COMMWAIT.  If so, it is
      421       19                    processed and the appropriate M$READ reissued.
      422       20
      423       21                    NOTE: At most one non-Admin message will be processed (i.e., the
      424       22                    application's handler will be called at most one time) for each
      425       23                    call to XSS$COMMWAIT.  However, Session timer expirations may
      426       24                    cause additional entries to the application's handler.
      427       25        */
      428       26        XSS$COMMWAIT: PROC( PARM1) ALTRET;

     26  3 000000   000000 700200 xent  XSS$COMMWAIT TSX0  ! X66_AUTO_1
         3 000001   000050 000001                    ZERO    40,1

      429       27        %INCLUDE XSS_SESSION_E;
      430      592        %INCLUDE B_ERRORS_C;
      431     1719        %INCLUDE CP_6;
      432     7278            %B$ALT;
      433     7286            %B$CGAURD( STCLASS="BASED( BUF$)");
      434     7305            %B$TCB;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:137  
      435     7308            %EQU_CG;
      436     7356            %F$DCB;
      437     7413            %FPT_SCREECH( SCODE=VLP_SUA);
      438     7427            %VLP_SUA( SEV=5, LDCTS=YES, CWSPT=YES, FCG='XS', MID='S', CODE=9999);
      439     7497            %FPT_EXTEND;
      440     7511            %FPT_READ( FPTN=AURD, WAIT=NO, TRANS=YES);
      441     7550            %FPT_READ( FPTN=NCRD, WAIT=NO, TRANS=YES);
      442     7589            %FPT_WAIT( UETIME=UETIME, UNITS=10);
      443     7603            %VLP_ERRCODE( FPTN=ERRCODE);
      444     7648            %VLP_STATION( FPTN=XSS_AUSTA, STATION='SERVER', STCLASS="STATIC SYMDEF");
      445     7675            %VLP_STATION( FPTN=XSS_NCSTA, STCLASS="STATIC SYMDEF");
      446     7702        %INCLUDE K_ADDRESS_M;
      447     8205        %INCLUDE XSC_COMMON_M;
      448     8858            %XSC$CCB( NAME=CCB, STCLASS="BASED( CCB$)");
      449     9155        %INCLUDE XSS_INTERNAL_E;
      450     9453        %INCLUDE XSS_INTERNAL_M;
      451    10042            %XSS$SCTX( NAME=SCTX, STCLASS="BASED( CTX$)");
      452    10476            %XSS$SCTX( NAME=LCTX, STCLASS="BASED( LCTX$)");
      453    10910        %MACRO FATALDEF( NAME=XSS_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      454    10911                         ERR#=0, SEV=7);
      455    10912            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='S',
      456    10913                          MON='0'B, ERR#=ERR#, SEV=SEV);
      457    10914        %MEND;
      458    10915        %INCLUDE XSC_PERR_C;
      459    10992            %FATALDEF( NAME=XSS_F$CGEVNTOTHER, ERR#=%F$CGEVNTOTHER);
      460    11040            /*E*  ERROR:  XSS-F$CGEVNTOTHER-7
      461    11041                MESSAGE:  Unexpected CG Admin event received.
      462    11042            */
      463    11043            %FATALDEF( NAME=XSS_F$CGWARNDISK, ERR#=%F$CGWARNDISK);
      464    11091            /*E*  ERROR:  XSS-F$CGWARNDISK-7
      465    11092                MESSAGE:  CG Admin disk warning received.
      466    11093            */
      467    11094            %FATALDEF( NAME=XSS_F$CGWARNMEM, ERR#=%F$CGWARNMEM);
      468    11142            /*E*  ERROR:  XSS-F$CGWARNMEM-7
      469    11143                MESSAGE:  CG Admin memory warning received.
      470    11144            */
      471    11145            %FATALDEF( NAME=XSS_F$CGWARNOTHER, ERR#=%F$CGWARNOTHER);
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:138  
      472    11193            /*E*  ERROR:  XSS-F$CGWARNOTHER-7
      473    11194                MESSAGE:  Unexpected CG Admin warning received.
      474    11195            */
      475    11196            %FATALDEF( NAME=XSS_F$DECODE, ERR#=%F$DECODE);
      476    11244            /*E*  ERROR:  XSS-F$DECODE-7
      477    11245                MESSAGE:  Malformed PDU detected by decoder.
      478    11246            */
      479    11247            %FATALDEF( NAME=XSS_F$EVNTQUE, ERR#=%F$EVNTQUE);
      480    11295            /*E*  ERROR:  XSS-F$EVNTQUE-7
      481    11296                MESSAGE:  Session event queue has been corrupted.
      482    11297            */
      483    11298
      484    11299    1       DCL XSS$ALARMCHECK ENTRY;
      485    11300    1       DCL XSS$CTXPTR ENTRY(2) ALTRET;
      486    11301    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      487    11302    1       DCL XSS$DUMPBYTES ENTRY(3) OPTIONAL;
      488    11303    1       DCL XSS$SCREECH ENTRY(1);
      489    11304    1       DCL XSS$TCREDIT ENTRY(1) ALTRET;
      490    11305    1       DCL XSS$EVLOG ENTRY(2);
      491    11306
      492    11307    1       DCL B$TCB$ PTR SYMREF;
      493    11308    1       DCL XSS_DEBUG UBIN SYMREF;
      494    11309    1       DCL XSS_ITRACE SBIN SYMREF;
      495    11310
      496    11311    1       DCL BUF$ PTR;
      497    11312    1       DCL COUNTER SBIN;
      498    11313    1       DCL CTX$ PTR;
      499    11314    1       DCL LCTX$ PTR;
      500    11315    1       DCL CCB$ REDEF LCTX$ PTR;
      501    11316    1       DCL LEN SBIN;
      502    11317    1       DCL MSG CHAR( LEN) BASED( PTR$);
      503    11318    1       DCL NEEDCREDIT BIT(1) UNAL;
      504    11319    1       DCL PTR$ PTR;
      505    11320    1       DCL FPT$ REDEF PTR$ PTR;
      506    11321    1       DCL PARM1 SBIN;
      507    11322    1       DCL RDBUFFER CHAR(%BUFSIZE) BASED( BUF$) CALIGNED;
      508    11323    1       DCL SCID SBIN;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:139  
      509    11324    1       DCL SECONDS SBIN;
      510    11325    1       DCL UETIME SBIN STATIC;
      511    11326    1       DCL XSS_EVENTED BIT(1) STATIC SYMDEF;
      512    11327    1       DCL XSS_EVHDX UBIN HALF HALIGNED INIT( %NULL) STATIC SYMDEF;
      513    11328    1       DCL XSS_EVTLX UBIN HALF HALIGNED INIT( %NULL) STATIC SYMDEF;
      514    11329    1       DCL AUTITLE CHAR(0) CONSTANT INIT( '(XSS$TRECV) AU rcvd');
      515    11330    1       DCL AUTITLE_ VECTOR CONSTANT INIT( VECTOR( AUTITLE));
      516    11331    1       DCL NCTITLE CHAR(0) CONSTANT INIT( '(XSS$TRECV) NC rcvd');
      517    11332    1       DCL NCTITLE_ VECTOR CONSTANT INIT( VECTOR( NCTITLE));
      518    11333
      519    11334    1   COMMWAIT:
      520    11335    1       SECONDS = PARM1;

  11335  3 000002   200003 470500       COMMWAIT     LDP0    @PARM1,,AUTO
         3 000003   000000 235100                    LDA     0,,PR0
         3 000004   200014 755100                    STA     SECONDS,,AUTO

      521    11336    1       CALL XSS$EVLOG( 'KW', SECONDS);

  11336  3 000005   200014 631500                    EPPR1   SECONDS,,AUTO
         3 000006   200043 451500                    STP1    LEN+3,,AUTO
         3 000007   000001 236000 4                  LDQ     1
         3 000010   200042 756100                    STQ     LEN+2,,AUTO
         3 000011   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000012   000000 631400 4                  EPPR1   0
         3 000013   000000 701000 xent               TSX1    XSS$EVLOG
         3 000014   000000 011000                    NOP     0

      522    11337    1   JOINWAIT:
      523    11338            /* save number of seconds to wait */
      524    11339    1       FPT_WAIT.V.UNITS# = SECONDS;

  11339  3 000015   200014 235100       JOINWAIT     LDA     SECONDS,,AUTO
         3 000016   000054 755000 1                  STA     FPT_WAIT+4

      525    11340    1       UETIME = 0;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:140  
  11340  3 000017   000077 450000 1                  STZ     UETIME

      526    11341    1       COUNTER = 0;

  11341  3 000020   200005 450100                    STZ     COUNTER,,AUTO

      527    11342        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:141  
      528    11343    1   CHECK4MSG:
      529    11344    2       DO WHILE( COUNTER = 0);

  11344  3 000021   200005 235100       CHECK4MSG    LDA     COUNTER,,AUTO
         3 000022   000435 601000 3                  TNZ     s:11446

      530    11345    2           IF XSS_EVHDX = %NULL THEN

  11345  3 000023   000101 220000 1                  LDX0    XSS_EVHDX
         3 000024   777777 100003                    CMPX0   -1,DU
         3 000025   000435 600000 3                  TZE     s:11446

      531    11346                    /* no messages were latched since last time */
      532    11347    2               EXIT CHECK4MSG;
      533    11348                /* remove the first latched message from the event queue */
      534    11349    3           DO INHIBIT;

      535    11350    3               SCID = XSS_EVHDX;

  11350  3 000026   000101 235200 1                  LDA   ! XSS_EVHDX
         3 000027   000022 771200                    ARL   ! 18
         3 000030   200013 755300                    STA   ! SCID,,AUTO

      536    11351    3               CALL XSS$CTXPTR( SCID, CTX$);  /* this routine is INHIBITED too */

  11351  3 000031   200006 630700                    EPPR0 ! CTX$,,AUTO
         3 000032   200043 450700                    STP0  ! LEN+3,,AUTO
         3 000033   200013 631700                    EPPR1 ! SCID,,AUTO
         3 000034   200042 451700                    STP1  ! LEN+2,,AUTO
         3 000035   200042 630700                    EPPR0 ! LEN+2,,AUTO
         3 000036   000000 631600 4                  EPPR1 ! 0
         3 000037   000000 701200 xent               TSX1  ! XSS$CTXPTR
         3 000040   000000 011200                    NOP   ! 0

      537    11352    4               IF SCTX.LATCH.LNKX = %NULL THEN DO;

  11352  3 000041   200006 470700                    LDP0  ! CTX$,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:142  
         3 000042   000035 720300                    LXL0  ! 29,,PR0
         3 000043   777777 100203                    CMPX0 ! -1,DU
         3 000044   000051 601200 3                  TNZ   ! s:11357

      538    11353    4                   XSS_EVHDX = %NULL;

  11353  3 000045   777777 221203                    LDX1  ! -1,DU
         3 000046   000101 741200 1                  STX1  ! XSS_EVHDX

      539    11354    4                   XSS_EVTLX = %NULL;

  11354  3 000047   000102 741200 1                  STX1  ! XSS_EVTLX

      540    11355    4                   END;

  11355  3 000050   000054 710200 3                  TRA   ! s:11360

      541    11356    4               ELSE DO;

      542    11357    4                   XSS_EVHDX = SCTX.LATCH.LNKX;

  11357  3 000051   000101 740200 1                  STX0  ! XSS_EVHDX

      543    11358    4                   SCTX.LATCH.LNKX = %NULL;

  11358  3 000052   777777 221203                    LDX1  ! -1,DU
         3 000053   000035 441300                    SXL1  ! 29,,PR0

      544    11359    4                   END;

      545    11360    3               SCTX.LATCH.PRESENT = %FALSE;

  11360  3 000054   000002 236200 4                  LDQ   ! 2
         3 000055   000035 356300                    ANSQ  ! 29,,PR0

      546    11361    3               END;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:143  
      547    11362                /* o.k. now deal with it */
      548    11363    3           IF XSS_ITRACE ~= 0 THEN DO;

  11363  3 000056   000000 235000 xsym               LDA     XSS_ITRACE
         3 000057   000127 600000 3                  TZE     s:11373

      549    11364    3               PTR$ = SCTX.LATCH.MSG$;

  11364  3 000060   000036 236100                    LDQ     30,,PR0
         3 000061   200012 756100                    STQ     PTR$,,AUTO

      550    11365    3               LEN = SCTX.LATCH.MSGSZ;

  11365  3 000062   000037 235100                    LDA     31,,PR0
         3 000063   200010 755100                    STA     LEN,,AUTO

      551    11366    4               DO CASE( SCTX.MODE);

  11366  3 000064   000013 720100                    LXL0    11,,PR0
         3 000065   000777 360003                    ANX0    511,DU
         3 000066   000003 100003                    CMPX0   3,DU
         3 000067   000071 602010 3                  TNC     s:11366+5,X0
         3 000070   000127 710000 3                  TRA     s:11373
         3 000071   000127 710000 3                  TRA     s:11373
         3 000072   000074 710000 3                  TRA     s:11368
         3 000073   000112 710000 3                  TRA     s:11370

      552    11367    4                   CASE( %CLIENT);

      553    11368    4                       CALL XSS$DUMPBYTES( 1, VECTOR( MSG), NCTITLE_);

  11368  3 000074   000020 735000                    ALS     16
         3 000075   000140 135007                    SBLA    96,DL
         3 000076   200042 757100                    STAQ    LEN+2,,AUTO
         3 000077   000005 236000 4                  LDQ     5
         3 000100   200046 756100                    STQ     LEN+6,,AUTO
         3 000101   200042 631500                    EPPR1   LEN+2,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:144  
         3 000102   200045 451500                    STP1    LEN+5,,AUTO
         3 000103   000006 236000 4                  LDQ     6
         3 000104   200044 756100                    STQ     LEN+4,,AUTO
         3 000105   200044 630500                    EPPR0   LEN+4,,AUTO
         3 000106   000003 631400 4                  EPPR1   3
         3 000107   000000 701000 xent               TSX1    XSS$DUMPBYTES
         3 000110   000000 011000                    NOP     0
         3 000111   000127 710000 3                  TRA     s:11373

      554    11369    4                   CASE( %SERVER);

      555    11370    4                       CALL XSS$DUMPBYTES( 1, VECTOR( MSG), AUTITLE_);

  11370  3 000112   000020 735000                    ALS     16
         3 000113   000140 135007                    SBLA    96,DL
         3 000114   200042 757100                    STAQ    LEN+2,,AUTO
         3 000115   000007 236000 4                  LDQ     7
         3 000116   200046 756100                    STQ     LEN+6,,AUTO
         3 000117   200042 631500                    EPPR1   LEN+2,,AUTO
         3 000120   200045 451500                    STP1    LEN+5,,AUTO
         3 000121   000006 236000 4                  LDQ     6
         3 000122   200044 756100                    STQ     LEN+4,,AUTO
         3 000123   200044 630500                    EPPR0   LEN+4,,AUTO
         3 000124   000003 631400 4                  EPPR1   3
         3 000125   000000 701000 xent               TSX1    XSS$DUMPBYTES
         3 000126   000000 011000                    NOP     0

      556    11371    4                   END;

      557    11372    3               END;

      558    11373    2           NEEDCREDIT = %FALSE;

  11373  3 000127   200011 450100                    STZ     NEEDCREDIT,,AUTO

      559    11374        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:145  
      560    11375                /* see if this was a CG ADMIN msg on an AU DCB */
      561    11376    3           IF SCTX.LATCH.ADMIN THEN DO;

  11376  3 000130   200006 470500                    LDP0    CTX$,,AUTO
         3 000131   000035 236100                    LDQ     29,,PR0
         3 000132   200000 316003                    CANQ    65536,DU
         3 000133   000252 600000 3                  TZE     s:11405

      562    11377    3               BUF$ = SCTX.LATCH.MSG$;

  11377  3 000134   000036 236100                    LDQ     30,,PR0
         3 000135   200004 756100                    STQ     BUF$,,AUTO

      563    11378    3               CALL XSS$EVLOG( 'AU', B$CGAURD.EVENT*512 + B$CGAURD.INFO);

  11378  3 000136   200004 471500                    LDP1    BUF$,,AUTO
         3 000137   100000 236100                    LDQ     0,,PR1
         3 000140   000011 736000                    QLS     9
         3 000141   100003 036100                    ADLQ    3,,PR1
         3 000142   200042 756100                    STQ     LEN+2,,AUTO
         3 000143   200042 633500                    EPPR3   LEN+2,,AUTO
         3 000144   200045 453500                    STP3    LEN+5,,AUTO
         3 000145   000010 236000 4                  LDQ     8
         3 000146   200044 756100                    STQ     LEN+4,,AUTO
         3 000147   200044 630500                    EPPR0   LEN+4,,AUTO
         3 000150   000000 631400 4                  EPPR1   0
         3 000151   000000 701000 xent               TSX1    XSS$EVLOG
         3 000152   000000 011000                    NOP     0

      564    11379    4               DO CASE( B$CGAURD.EVENT);

  11379  3 000153   200004 470500                    LDP0    BUF$,,AUTO
         3 000154   000000 235100                    LDA     0,,PR0
         3 000155   000027 115007                    CMPA    23,DL
         3 000156   000160 602005 3                  TNC     s:11379+5,AL
         3 000157   000245 710000 3                  TRA     s:11400
         3 000160   000251 710000 3                  TRA     s:11402
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:146  
         3 000161   000207 710000 3                  TRA     s:11383
         3 000162   000251 710000 3                  TRA     s:11402
         3 000163   000251 710000 3                  TRA     s:11402
         3 000164   000245 710000 3                  TRA     s:11400
         3 000165   000245 710000 3                  TRA     s:11400
         3 000166   000245 710000 3                  TRA     s:11400
         3 000167   000245 710000 3                  TRA     s:11400
         3 000170   000245 710000 3                  TRA     s:11400
         3 000171   000212 710000 3                  TRA     s:11388
         3 000172   000245 710000 3                  TRA     s:11400
         3 000173   000245 710000 3                  TRA     s:11400
         3 000174   000245 710000 3                  TRA     s:11400
         3 000175   000245 710000 3                  TRA     s:11400
         3 000176   000245 710000 3                  TRA     s:11400
         3 000177   000245 710000 3                  TRA     s:11400
         3 000200   000245 710000 3                  TRA     s:11400
         3 000201   000245 710000 3                  TRA     s:11400
         3 000202   000245 710000 3                  TRA     s:11400
         3 000203   000245 710000 3                  TRA     s:11400
         3 000204   000245 710000 3                  TRA     s:11400
         3 000205   000245 710000 3                  TRA     s:11400
         3 000206   000251 710000 3                  TRA     s:11402

      565    11380    4                   CASE( %CG_DOPN#);

      566    11381    4                   CASE( %CG_DCLS#);

      567    11382                            /* DCB close.  Make sure Session is told. */
      568    11383    4                       CALL QUICKDISC;

  11383  3 000207   001261 701000 3                  TSX1    QUICKDISC
         3 000210   000000 011000                    NOP     0
         3 000211   000306 710000 3                  TRA     s:11418

      569    11384    4                   CASE( %CG_TCON#);

      570    11385    4                   CASE( %CG_TDRQ#);
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:147  

      571    11386    4                   CASE( %CG_TDSC#);

      572    11387    4                   CASE( %CG_WARN#);

      573    11388    5                       DO CASE( B$CGAURD.INFO);

  11388  3 000212   000003 235100                    LDA     3,,PR0
         3 000213   000003 115007                    CMPA    3,DL
         3 000214   000216 602005 3                  TNC     s:11388+4,AL
         3 000215   000240 710000 3                  TRA     s:11397
         3 000216   000240 710000 3                  TRA     s:11397
         3 000217   000221 710000 3                  TRA     s:11390
         3 000220   000226 710000 3                  TRA     s:11392

      574    11389    5                           CASE( %CG_WARN_MEM#);

      575    11390    5                               CALL XSS$SCREECH( XSS_F$CGWARNMEM);

  11390  3 000221   000012 630400 4                  EPPR0   10
         3 000222   000011 631400 4                  EPPR1   9
         3 000223   000000 701000 xent               TSX1    XSS$SCREECH
         3 000224   000000 011000                    NOP     0
         3 000225   000306 710000 3                  TRA     s:11418

      576    11391    5                           CASE( %CG_WARN_DISK#);

      577    11392    5                               FPT_EXTEND.V.DCB# = SCTX.DCB#;

  11392  3 000226   200006 471500                    LDP1    CTX$,,AUTO
         3 000227   100033 720100                    LXL0    27,,PR1
         3 000230   000012 740000 1                  STX0    FPT_EXTEND+2

      578    11393    5                               FPT_EXTEND.V.SIZ# = %XTNSIZE;

  11393  3 000231   000036 221003                    LDX1    30,DU
         3 000232   000012 441000 1                  SXL1    FPT_EXTEND+2
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:148  

      579    11394    5                               CALL M$EXTEND( FPT_EXTEND) ALTRET( XTNERR);

  11394  3 000233   000010 630400 1                  EPPR0   FPT_EXTEND
         3 000234   440005 713400                    CLIMB   alt,+16389
         3 000235   400000 401760                    pmme    nvectors=1
         3 000236   000473 702000 3                  TSX2    RDERR
         3 000237   000306 710000 3                  TRA     s:11418

      580    11395                                 /* CALL XSS$SCREECH( XSS_F$CGWARNDISK); */
      581    11396    5                           CASE( ELSE);

      582    11397    5                               CALL XSS$SCREECH( XSS_F$CGWARNOTHER);

  11397  3 000240   000013 630400 4                  EPPR0   11
         3 000241   000011 631400 4                  EPPR1   9
         3 000242   000000 701000 xent               TSX1    XSS$SCREECH
         3 000243   000000 011000                    NOP     0

      583    11398    5                           END;

  11398  3 000244   000306 710000 3                  TRA     s:11418

      584    11399    4                   CASE( ELSE);

      585    11400    4                       CALL XSS$SCREECH( XSS_F$CGEVNTOTHER);

  11400  3 000245   000014 630400 4                  EPPR0   12
         3 000246   000011 631400 4                  EPPR1   9
         3 000247   000000 701000 xent               TSX1    XSS$SCREECH
         3 000250   000000 011000                    NOP     0

      586    11401    4                   END;

      587    11402    3               END;

  11402  3 000251   000306 710000 3                  TRA     s:11418
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:149  

      588    11403    2           ELSE
      589    11404                    /* Not a CG ADMIN message.  Error being reported? */
      590    11405    3               IF SCTX.LATCH.ERRCODE THEN DO;

  11405  3 000252   000040 235100                    LDA     32,,PR0
         3 000253   000304 600000 3                  TZE     s:11416

      591    11406    3                   ERRCODE = SCTX.LATCH.ERRCODE;

  11406  3 000254   000040 236100                    LDQ     32,,PR0
         3 000255   000056 756000 1                  STQ     ERRCODE

      592    11407    3                   CALL XSS$EVLOG( 'ER', SCID);

  11407  3 000256   200013 631500                    EPPR1   SCID,,AUTO
         3 000257   200043 451500                    STP1    LEN+3,,AUTO
         3 000260   000015 236000 4                  LDQ     13
         3 000261   200042 756100                    STQ     LEN+2,,AUTO
         3 000262   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000263   000000 631400 4                  EPPR1   0
         3 000264   000000 701000 xent               TSX1    XSS$EVLOG
         3 000265   000000 011000                    NOP     0

      593    11408    3                   CALL XSS$EVLOG( , ERRCODE);

  11408  3 000266   000017 236000 4                  LDQ     15
         3 000267   000016 235000 4                  LDA     14
         3 000270   200042 757100                    STAQ    LEN+2,,AUTO
         3 000271   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000272   000000 631400 4                  EPPR1   0
         3 000273   000000 701000 xent               TSX1    XSS$EVLOG
         3 000274   000000 011000                    NOP     0

      594    11409    3                   IF ERRCODE.ERR# = %E$LDSC THEN

  11409  3 000275   000056 236000 1                  LDQ     ERRCODE
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:150  
         3 000276   377770 376007                    ANQ     131064,DL
         3 000277   000140 116007                    CMPQ    96,DL
         3 000300   000477 601000 3                  TNZ     BAILOUT

      595    11410    3                       CALL QUICKDISC;

  11410  3 000301   001261 701000 3                  TSX1    QUICKDISC
         3 000302   000000 011000                    NOP     0
         3 000303   000306 710000 3                  TRA     s:11418

      596    11411    3                   ELSE
      597    11412    3                       GOTO BAILOUT;  /* assume fatal error */
      598    11413    3                   END;
      599    11414    2               ELSE
      600    11415                        /* Otherwise, just a normal message */
      601    11416    2                   CALL HANDLEIT;

  11416  3 000304   000512 701000 3                  TSX1    HANDLEIT
         3 000305   000000 011000                    NOP     0

      602    11417        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:151  
      603    11418    2           IF NOT SCTX.ABORTING THEN

  11418  3 000306   200006 470500                    LDP0    CTX$,,AUTO
         3 000307   000013 236100                    LDQ     11,,PR0
         3 000310   001000 316007                    CANQ    512,DL
         3 000311   000433 601000 3                  TNZ     s:11442

      604    11419                    /* reissue the no-wait read for this DCB */
      605    11420    3               DO CASE( SCTX.MODE);

  11420  3 000312   000013 720100                    LXL0    11,,PR0
         3 000313   000777 360003                    ANX0    511,DU
         3 000314   000003 100003                    CMPX0   3,DU
         3 000315   000317 602010 3                  TNC     s:11420+5,X0
         3 000316   000433 710000 3                  TRA     s:11442
         3 000317   000433 710000 3                  TRA     s:11442
         3 000320   000322 710000 3                  TRA     s:11422
         3 000321   000367 710000 3                  TRA     s:11433

      606    11421    3                   CASE( %CLIENT);

      607    11422    3                       IF XSS_DEBUG = 0 THEN

  11422  3 000322   000000 235000 xsym               LDA     XSS_DEBUG
         3 000323   000327 601000 3                  TNZ     s:11425

      608    11423    3                           NCRD.STATION_ = VECTOR( NIL);

  11423  3 000324   000020 237000 4                  LDAQ    16
         3 000325   000040 757000 1                  STAQ    NCRD+6
         3 000326   000331 710000 3                  TRA     s:11426

      609    11424    3                       ELSE
      610    11425    3                           NCRD.STATION_ = VECTOR( XSS_AUSTA);

  11425  3 000327   000022 237000 4                  LDAQ    18
         3 000330   000040 757000 1                  STAQ    NCRD+6
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:152  

      611    11426    3                       CALL XSS$BUFPTR( SCTX.BUFX, BUF$);

  11426  3 000331   200004 631500                    EPPR1   BUF$,,AUTO
         3 000332   200043 451500                    STP1    LEN+3,,AUTO
         3 000333   200006 236100                    LDQ     CTX$,,AUTO
         3 000334   000033 036003                    ADLQ    27,DU
         3 000335   200042 756100                    STQ     LEN+2,,AUTO
         3 000336   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000337   000000 631400 4                  EPPR1   0
         3 000340   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000341   000000 011000                    NOP     0

      612    11427    3                       NCRD.BUF_ = VECTOR( RDBUFFER);

  11427  3 000342   000024 235000 4                  LDA     20
         3 000343   200004 236100                    LDQ     BUF$,,AUTO
         3 000344   000036 757000 1                  STAQ    NCRD+4

      613    11428    3                       NCRD.V.EVENT# = SCTX.EVENT#;

  11428  3 000345   200006 470500                    LDP0    CTX$,,AUTO
         3 000346   000034 235100                    LDA     28,,PR0
         3 000347   000043 755000 1                  STA     NCRD+9

      614    11429    3                       NCRD.V.DCB# = SCTX.DCB#;

  11429  3 000350   000033 720100                    LXL0    27,,PR0
         3 000351   000042 740000 1                  STX0    NCRD+8

      615    11430    3                       CALL XSS$EVLOG( 'NW', SCID);

  11430  3 000352   200013 631500                    EPPR1   SCID,,AUTO
         3 000353   200043 451500                    STP1    LEN+3,,AUTO
         3 000354   000025 236000 4                  LDQ     21
         3 000355   200042 756100                    STQ     LEN+2,,AUTO
         3 000356   200042 630500                    EPPR0   LEN+2,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:153  
         3 000357   000000 631400 4                  EPPR1   0
         3 000360   000000 701000 xent               TSX1    XSS$EVLOG
         3 000361   000000 011000                    NOP     0

      616    11431    3                       CALL M$READ( NCRD) ALTRET( RDERR);

  11431  3 000362   000032 630400 1                  EPPR0   NCRD
         3 000363   440000 713400                    CLIMB   alt,read
         3 000364   401400 401760                    pmme    nvectors=4
         3 000365   000473 702000 3                  TSX2    RDERR
         3 000366   000433 710000 3                  TRA     s:11442

      617    11432    3                   CASE( %SERVER);

      618    11433    3                       AURD.V.EVENT# = SCTX.EVENT#;

  11433  3 000367   000034 235100                    LDA     28,,PR0
         3 000370   000025 755000 1                  STA     AURD+9

      619    11434    3                       AURD.V.DCB# = SCTX.DCB#;

  11434  3 000371   000033 720100                    LXL0    27,,PR0
         3 000372   000024 740000 1                  STX0    AURD+8

      620    11435    3                       CALL XSS$EVLOG( 'NW', SCID);

  11435  3 000373   200013 631500                    EPPR1   SCID,,AUTO
         3 000374   200043 451500                    STP1    LEN+3,,AUTO
         3 000375   000025 236000 4                  LDQ     21
         3 000376   200042 756100                    STQ     LEN+2,,AUTO
         3 000377   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000400   000000 631400 4                  EPPR1   0
         3 000401   000000 701000 xent               TSX1    XSS$EVLOG
         3 000402   000000 011000                    NOP     0

      621    11436    3                       IF DCBADDR( SCTX.DCB#)->F$DCB.FCN.CNT(0) = 0 THEN

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:154  
  11436  3 000403   000026 470400 4                  LDP0    22
         3 000404   000000 471500                    LDP1    0,,PR0
         3 000405   200006 473500                    LDP3    CTX$,,AUTO
         3 000406   300033 720100                    LXL0    27,,PR3
         3 000407   100000 474510                    LDP4    0,X0,PR1
         3 000410   400074 236100                    LDQ     60,,PR4
         3 000411   377000 316003                    CANQ    130560,DU
         3 000412   000417 601000 3                  TNZ     s:11438

      622    11437    3                           CALL M$READ( AURD) ALTRET( RDERR);

  11437  3 000413   000014 630400 1                  EPPR0   AURD
         3 000414   440000 713400                    CLIMB   alt,read
         3 000415   401400 401760                    pmme    nvectors=4
         3 000416   000473 702000 3                  TSX2    RDERR

      623    11438    3                       IF ( COUNTER > 0 AND NOT LCTX.ABORTING) OR NEEDCREDIT THEN

  11438  3 000417   200005 235100                    LDA     COUNTER,,AUTO
         3 000420   000425 604400 3                  TMOZ    s:11438+6
         3 000421   200007 470500                    LDP0    LCTX$,,AUTO
         3 000422   000013 236100                    LDQ     11,,PR0
         3 000423   001000 316007                    CANQ    512,DL
         3 000424   000427 600000 3                  TZE     s:11439
         3 000425   200011 234100                    SZN     NEEDCREDIT,,AUTO
         3 000426   000433 605000 3                  TPL     s:11442

      624    11439    3                           CALL XSS$TCREDIT( LCTX);

  11439  3 000427   200007 630500                    EPPR0   LCTX$,,AUTO
         3 000430   000011 631400 4                  EPPR1   9
         3 000431   000000 701000 xent               TSX1    XSS$TCREDIT
         3 000432   000000 011000                    NOP     0

      625    11440    3                   END;

      626    11441                /* ..and continue the DO WHILE( COUNTER = 0) loop */
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:155  
      627    11442    2           END;

  11442  3 000433   200005 235100                    LDA     COUNTER,,AUTO
         3 000434   000023 600000 3                  TZE     s:11345

      628    11443        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:156  
      629    11444            /* O.k., done handling one or more latched message(s), or none latched */
      630    11445            /* see if any Session timers have expired */
      631    11446    1       CALL XSS$ALARMCHECK;

  11446  3 000435   000027 631400 4                  EPPR1   23
         3 000436   000000 701000 xent               TSX1    XSS$ALARMCHECK
         3 000437   000000 011000                    NOP     0

      632    11447    1       IF COUNTER ~= 0 THEN

  11447  3 000440   200005 235100                    LDA     COUNTER,,AUTO
         3 000441   000443 600000 3                  TZE     s:11451

      633    11448                /* a user message was handled already, so don't bother M$WAITing */
      634    11449    1           ALTRETURN;

  11449  3 000442   000000 702200 xent               TSX2  ! X66_AALT

      635    11450    2       DO INHIBIT;

      636    11451    2           XSS_EVENTED = %FALSE;

  11451  3 000443   000100 450200 1                  STZ   ! XSS_EVENTED

      637    11452                /* wait for some number of seconds */
      638    11453    3           IF FPT_WAIT.V.UNITS# > 0 THEN DO;

  11453  3 000444   000054 236200 1                  LDQ   ! FPT_WAIT+4
         3 000445   000455 600200 3                  TZE   ! s:11457

      639    11454    3               CALL XSS$EVLOG( 'WT', FPT_WAIT.V.UNITS#);

  11454  3 000446   000030 630600 4                  EPPR0 ! 24
         3 000447   000000 631600 4                  EPPR1 ! 0
         3 000450   000000 701200 xent               TSX1  ! XSS$EVLOG
         3 000451   000000 011200                    NOP   ! 0

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:157  
      640    11455    3               CALL M$WAIT( FPT_WAIT);

  11455  3 000452   000050 630600 1                  EPPR0 ! FPT_WAIT
         3 000453   020006 713600                    CLIMB ! 8198
         3 000454   400400 401760                    pmme    nvectors=2

      641    11456    3               END;

      642    11457    3           IF UETIME ~= 0 THEN DO;

  11457  3 000455   000077 235200 1                  LDA   ! UETIME
         3 000456   000464 600200 3                  TZE   ! s:11466

      643    11458                    /* user wait was interrupted */
      644    11459    3               IF NOT XSS_EVENTED THEN

  11459  3 000457   000100 234200 1                  SZN   ! XSS_EVENTED
         3 000460   000462 604200 3                  TMI   ! s:11461

      645    11460    3                   ALTRETURN;  /* user must have hit <Break> */

  11460  3 000461   000000 702200 xent               TSX2  ! X66_AALT

      646    11461    3               FPT_WAIT.V.UNITS# = UETIME;  /* set up for remaining wait time */

  11461  3 000462   000054 755200 1                  STA   ! FPT_WAIT+4

      647    11462    3               GOTO CHECK4MSG;

  11462  3 000463   000021 710200 3                  TRA   ! CHECK4MSG

      648    11463    3               END;
      649    11464    2           END;

      650    11465            /* user wait was not interrupted */
      651    11466    1       IF SECONDS > 10 THEN

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:158  
  11466  3 000464   200014 236100                    LDQ     SECONDS,,AUTO
         3 000465   000012 116007                    CMPQ    10,DL
         3 000466   000472 604400 3                  TMOZ    s:11469

      652    11467                /* was 'long' wait so check timers again */
      653    11468    1           CALL XSS$ALARMCHECK;

  11468  3 000467   000027 631400 4                  EPPR1   23
         3 000470   000000 701000 xent               TSX1    XSS$ALARMCHECK
         3 000471   000000 011000                    NOP     0

      654    11469    1       RETURN;

  11469  3 000472   000000 702200 xent               TSX2  ! X66_ARET

  11466  3 000473                       RDERR        null
      655    11470    1   RDERR:
      656    11471    1       ;
      657    11472    1   XTNERR:
      658    11473    1       ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  11473  3 000473   000000 470400 xsym  XTNERR       LDP0    B$TCB$
         3 000474   000000 471500                    LDP1    0,,PR0
         3 000475   100102 236100                    LDQ     66,,PR1
         3 000476   000056 756000 1                  STQ     ERRCODE

      659    11474    1   BAILOUT:
      660    11475    1       IF ERRCODE.SEV = 0 THEN

  11475  3 000477   000056 236000 1     BAILOUT      LDQ     ERRCODE
         3 000500   000007 316007                    CANQ    7,DL
         3 000501   000505 601000 3                  TNZ     s:11477

      661    11476    1           ERRCODE.SEV = 1;

  11476  3 000502   000032 376000 4                  ANQ     26
         3 000503   000001 276007                    ORQ     1,DL
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:159  
         3 000504   000056 756000 1                  STQ     ERRCODE

      662    11477    1       CALL XSS$SCREECH( ERRCODE);

  11477  3 000505   000017 630400 4                  EPPR0   15
         3 000506   000011 631400 4                  EPPR1   9
         3 000507   000000 701000 xent               TSX1    XSS$SCREECH
         3 000510   000000 011000                    NOP     0
         3 000511   001364 710000 3                  TRA     s:16769+2

      663    11478            /* won't return here */
      664    11479        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:160  
      665    11480        /*I*    NAME:   HANDLEIT
      666    11481                DESCRIPTION:
      667    11482                    Does whatever is necessary to handle an incoming SPDU or TPDU.
      668    11483                    Information about the message is in SCTX.LATCH.
      669    11484        */
      670    11485    1   HANDLEIT: PROC;

  11485  3 000512   200016 741300       HANDLEIT     STX1  ! SECONDS+2,,AUTO

      671    11486        /* K_ADDRESS_M already %INCLUDEd above */
      672    11487        %INCLUDE K_INTERFACE_M;
      673    11896            %K$FPT_CONNECT_OSI( NAME=TCONFPT, STCLASS=BASED);
      674    12233        /* XSS_SESSION_E already %INCLUDEd above */
      675    12234        %INCLUDE XSS_SESSION_M;
      676    14877            %XSS$GENERIC( FPTN=XSS_GENERIC, STCLASS=SYMREF);
      677    15023            %XSS$GENERIC( STCLASS="BASED( VBLK.FPT$)");
      678    15169            %XSS$CONNECT( STCLASS="BASED( VBLK.FPT$)");
      679    15492        /* XSS_INTERNAL_E and _M already %INCLUDEd above */
      680    15493            %XSS$GLUE( NAME=GLUE, STCLASS="BASED( SPDU$)");
      681    15523            %XSS$VBLK( NAME=VBLK, STCLASS=AUTO);
      682    15628            %XSS$VBLK( NAME=XSS_VBLK, STCLASS=SYMREF);
      683    15733        /* XSC_COMMON_M already %INCLUDEd above */
      684    15734            %XSC$ADDRESS( NAME=UADR, STCLASS="BASED( UADR$)");
      685    16017            %XSC$ADDRESS;
      686    16300            %XSC$CCB;
      687    16597
      688    16598    2       DCL XSS$DECODE ENTRY(1) ALTRET;
      689    16599    2       DCL XSS$GETCTX ENTRY(2) ALTRET;
      690    16600    2       DCL XSS$MACHINE ENTRY(1) ALTRET;
      691    16601
      692    16602    2       DCL XSS_CCB$$ PTR SYMREF;
      693    16603    2       DCL XSS_MAX_LCID SBIN SYMREF;
      694    16604
      695    16605    2       DCL CCB$(0:0) PTR BASED( XSS_CCB$$) ALIGNED;
      696    16606    2       DCL DST$ PTR;
      697    16607    2       DCL SRC$ PTR;
      698    16608    2       DCL SCID SBIN;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:161  
      699    16609    2       DCL SPDU CHAR( SPDUSZ) BASED( SPDU$);
      700    16610    2       DCL SPDU$ PTR;
      701    16611    2       DCL SPDUSZ SBIN;
      702    16612    2       DCL UADR$ PTR;
      703    16613        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:162  
      704    16614    2       SPDU$ = SCTX.LATCH.MSG$;

  16614  3 000513   200006 470500                    LDP0    CTX$,,AUTO
         3 000514   000036 236100                    LDQ     30,,PR0
         3 000515   200033 756100                    STQ     SPDU$,,AUTO

      705    16615    2       CALL XSS$EVLOG( 'QE', GLUE.TRNFNC*512 + GLUE.YRSCID);

  16615  3 000516   200033 471500                    LDP1    SPDU$,,AUTO
         3 000517   100000 236100                    LDQ     0,,PR1
         3 000520   000011 772000                    QRL     9
         3 000521   000777 376007                    ANQ     511,DL
         3 000522   200042 756100                    STQ     LEN+2,,AUTO
         3 000523   100000 236100                    LDQ     0,,PR1
         3 000524   000011 772000                    QRL     9
         3 000525   777000 376007                    ANQ     -512,DL
         3 000526   200042 036100                    ADLQ    LEN+2,,AUTO
         3 000527   200043 756100                    STQ     LEN+3,,AUTO
         3 000530   200043 633500                    EPPR3   LEN+3,,AUTO
         3 000531   200045 453500                    STP3    LEN+5,,AUTO
         3 000532   000033 236000 4                  LDQ     27
         3 000533   200044 756100                    STQ     LEN+4,,AUTO
         3 000534   200044 630500                    EPPR0   LEN+4,,AUTO
         3 000535   000000 631400 4                  EPPR1   0
         3 000536   000000 701000 xent               TSX1    XSS$EVLOG
         3 000537   000000 011000                    NOP     0

      706    16616    2       IF GLUE.TRNFNC = %K_TCREDIT THEN

  16616  3 000540   200033 470500                    LDP0    SPDU$,,AUTO
         3 000541   000000 236100                    LDQ     0,,PR0
         3 000542   000777 376003                    ANQ     511,DU
         3 000543   000032 116003                    CMPQ    26,DU
         3 000544   000547 601000 3                  TNZ     s:16618

      707    16617    2           RETURN;  /* ignore this bogosity */

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:163  
  16617  3 000545   200016 221300                    LDX1  ! SECONDS+2,,AUTO
         3 000546   000001 702211                    TSX2  ! 1,X1

      708    16618    2       SCTX.MAGIC = GLUE.MAGIC;  /* so TCREDIT works.. */

  16618  3 000547   200006 471500                    LDP1    CTX$,,AUTO
         3 000550   000000 236100                    LDQ     0,,PR0
         3 000551   100015 552104                    STBQ    13,'04'O,PR1

      709    16619    2       SPDUSZ = SCTX.LATCH.MSGSZ;

  16619  3 000552   100037 235100                    LDA     31,,PR1
         3 000553   200034 755100                    STA     SPDUSZ,,AUTO

      710    16620    2       VBLK = XSS_VBLK;

  16620  3 000554   000100 100400                    MLR     fill='000'O
         3 000555   000000 000040 xsym               ADSC9   XSS_VBLK                 cn=0,n=32
         3 000556   200020 000040                    ADSC9   VBLK,,AUTO               cn=0,n=32

      711    16621    2       VBLK.PDU.SIZE = SPDUSZ;

  16621  3 000557   200025 755100                    STA     VBLK+5,,AUTO

      712    16622    2       VBLK.PDU.PTR$ = SPDU$;

  16622  3 000560   200033 236100                    LDQ     SPDU$,,AUTO
         3 000561   200024 756100                    STQ     VBLK+4,,AUTO

      713    16623    2       VBLK.CTX$ = CTX$;

  16623  3 000562   200006 236100                    LDQ     CTX$,,AUTO
         3 000563   200020 756100                    STQ     VBLK,,AUTO

      714    16624    2       LCTX$ = CTX$;

  16624  3 000564   200007 756100                    STQ     LCTX$,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:164  

      715    16625    3       IF GLUE.TRNFNC ~= %K_TCONNECT_IND THEN DO;

  16625  3 000565   000000 236100                    LDQ     0,,PR0
         3 000566   000777 376003                    ANQ     511,DU
         3 000567   000025 116003                    CMPQ    21,DU
         3 000570   000616 600000 3                  TZE     s:16635

      716    16626    3           SCID = GLUE.YRSCID;

  16626  3 000571   000000 236100                    LDQ     0,,PR0
         3 000572   000011 772000                    QRL     9
         3 000573   000777 376007                    ANQ     511,DL
         3 000574   200032 756100                    STQ     SCID,,AUTO

      717    16627    3           CALL XSS$CTXPTR( SCID, LCTX$)

  16627  3 000575   200007 633500                    EPPR3   LCTX$,,AUTO
         3 000576   200043 453500                    STP3    LEN+3,,AUTO
         3 000577   200032 634500                    EPPR4   SCID,,AUTO
         3 000600   200042 454500                    STP4    LEN+2,,AUTO
         3 000601   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000602   000000 631400 4                  EPPR1   0
         3 000603   000000 701000 xent               TSX1    XSS$CTXPTR
         3 000604   000606 702000 3                  TSX2    s:16630
         3 000605   000610 710000 3                  TRA     s:16632

      718    16628    4           WHENALTRETURN DO;

      719    16629                    /* Connection must have aborted.  Well, fine. */
      720    16630    4               RETURN;

  16630  3 000606   200016 221300                    LDX1  ! SECONDS+2,,AUTO
         3 000607   000001 702211                    TSX2  ! 1,X1

      721    16631    4               END;
      722    16632    3           VBLK.CTX$ = LCTX$;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:165  

  16632  3 000610   200007 236100                    LDQ     LCTX$,,AUTO
         3 000611   200020 756100                    STQ     VBLK,,AUTO

      723    16633    3           LCTX.MAGIC = GLUE.MAGIC;

  16633  3 000612   200033 470500                    LDP0    SPDU$,,AUTO
         3 000613   200007 471500                    LDP1    LCTX$,,AUTO
         3 000614   000000 236100                    LDQ     0,,PR0
         3 000615   100015 552104                    STBQ    13,'04'O,PR1

      724    16634    3           END;

      725    16635    2       CALL XSS$BUFPTR( CCB$( LCTX.SCID)->XSC$CCB.SFPTX, VBLK.FPT$);

  16635  3 000616   200007 471500                    LDP1    LCTX$,,AUTO
         3 000617   100015 220100                    LDX0    13,,PR1
         3 000620   000777 360003                    ANX0    511,DU
         3 000621   000000 473400 xsym               LDP3    XSS_CCB$$
         3 000622   300000 474510                    LDP4    0,X0,PR3
         3 000623   200022 635500                    EPPR5   VBLK+2,,AUTO
         3 000624   200043 455500                    STP5    LEN+3,,AUTO
         3 000625   200044 454500                    STP4    LEN+4,,AUTO
         3 000626   200044 236100                    LDQ     LEN+4,,AUTO
         3 000627   000034 036000 4                  ADLQ    28
         3 000630   200042 756100                    STQ     LEN+2,,AUTO
         3 000631   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000632   000000 631400 4                  EPPR1   0
         3 000633   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000634   000000 011000                    NOP     0

      726    16636        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:166  
      727    16637    3       DO CASE( GLUE.TRNFNC);

  16637  3 000635   200033 470500                    LDP0    SPDU$,,AUTO
         3 000636   000000 236100                    LDQ     0,,PR0
         3 000637   000022 772000                    QRL     18
         3 000640   000777 376007                    ANQ     511,DL
         3 000641   000025 136007                    SBLQ    21,DL
         3 000642   000010 116007                    CMPQ    8,DL
         3 000643   000645 602006 3                  TNC     s:16637+8,QL
         3 000644   001131 710000 3                  TRA     s:16700
         3 000645   000655 710000 3                  TRA     s:16639
         3 000646   001033 710000 3                  TRA     s:16667
         3 000647   001077 710000 3                  TRA     s:16686
         3 000650   001077 710000 3                  TRA     s:16686
         3 000651   001052 710000 3                  TRA     s:16673
         3 000652   001131 710000 3                  TRA     s:16700
         3 000653   001063 710000 3                  TRA     s:16677
         3 000654   001071 710000 3                  TRA     s:16681

      728    16638    3           CASE( %K_TCONNECT_IND);

      729    16639    3               VBLK.EVENT = %XSS_SEV_TCONIND;

  16639  3 000655   000061 236007                    LDQ     49,DL
         3 000656   200021 552104                    STBQ    VBLK+1,'04'O,AUTO

      730    16640    3               CALL XSS$GETCTX( LCTX$)

  16640  3 000657   200007 631500                    EPPR1   LCTX$,,AUTO
         3 000660   200042 451500                    STP1    LEN+2,,AUTO
         3 000661   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000662   000011 631400 4                  EPPR1   9
         3 000663   000000 701000 xent               TSX1    XSS$GETCTX
         3 000664   000666 702000 3                  TSX2    s:16645
         3 000665   000666 710000 3                  TRA     s:16645

      731    16641    4               WHENALTRETURN DO;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:167  

      732    16642                        /*N* ignore this for now.  Eventually do T-DISCONNECT */
      733    16643    4                   END;

      734    16644                    /* copy contents of original CCB to new one */
      735    16645    3               CCB$( LCTX.SCID)->XSC$CCB = CCB$( SCTX.SCID)->XSC$CCB;

  16645  3 000666   200007 470500                    LDP0    LCTX$,,AUTO
         3 000667   000015 220100                    LDX0    13,,PR0
         3 000670   000777 360003                    ANX0    511,DU
         3 000671   000000 471400 xsym               LDP1    XSS_CCB$$
         3 000672   100000 473510                    LDP3    0,X0,PR1
         3 000673   200006 474500                    LDP4    CTX$,,AUTO
         3 000674   400015 221100                    LDX1    13,,PR4
         3 000675   000777 361003                    ANX1    511,DU
         3 000676   100000 475511                    LDP5    0,X1,PR1
         3 000677   000100 100500                    MLR     fill='000'O
         3 000700   500000 000070                    ADSC9   0,,PR5                   cn=0,n=56
         3 000701   300000 000070                    ADSC9   0,,PR3                   cn=0,n=56

      736    16646    3               CCB$( LCTX.SCID)->XSC$CCB.LCID = LCTX.SCID;

  16646  3 000702   200007 470500                    LDP0    LCTX$,,AUTO
         3 000703   000015 220100                    LDX0    13,,PR0
         3 000704   000777 360003                    ANX0    511,DU
         3 000705   000000 471400 xsym               LDP1    XSS_CCB$$
         3 000706   100000 473510                    LDP3    0,X0,PR1
         3 000707   000015 236100                    LDQ     13,,PR0
         3 000710   000022 772000                    QRL     18
         3 000711   300000 552104                    STBQ    0,'04'O,PR3

      737    16647                    /* copy contents of address buffers too */
      738    16648    3               CALL XSS$BUFPTR( SCTX.SRCX, SRC$);

  16648  3 000712   200031 630500                    EPPR0   SRC$,,AUTO
         3 000713   200043 450500                    STP0    LEN+3,,AUTO
         3 000714   200006 236100                    LDQ     CTX$,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:168  
         3 000715   000003 036003                    ADLQ    3,DU
         3 000716   200042 756100                    STQ     LEN+2,,AUTO
         3 000717   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000720   000000 631400 4                  EPPR1   0
         3 000721   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000722   000000 011000                    NOP     0

      739    16649    3               CALL XSS$BUFPTR( LCTX.SRCX, DST$);

  16649  3 000723   200030 630500                    EPPR0   DST$,,AUTO
         3 000724   200043 450500                    STP0    LEN+3,,AUTO
         3 000725   200007 236100                    LDQ     LCTX$,,AUTO
         3 000726   000003 036003                    ADLQ    3,DU
         3 000727   200042 756100                    STQ     LEN+2,,AUTO
         3 000730   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000731   000000 631400 4                  EPPR1   0
         3 000732   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000733   000000 011000                    NOP     0

      740    16650    3               DST$->XSC$ADDRESS = SRC$->XSC$ADDRESS;

  16650  3 000734   200031 470500                    LDP0    SRC$,,AUTO
         3 000735   200030 471500                    LDP1    DST$,,AUTO
         3 000736   000100 100500                    MLR     fill='000'O
         3 000737   000000 000456                    ADSC9   0,,PR0                   cn=0,n=302
         3 000740   100000 000456                    ADSC9   0,,PR1                   cn=0,n=302

      741    16651    3               CALL XSS$BUFPTR( SCTX.DSTX, SRC$);

  16651  3 000741   200031 630500                    EPPR0   SRC$,,AUTO
         3 000742   200043 450500                    STP0    LEN+3,,AUTO
         3 000743   200006 236100                    LDQ     CTX$,,AUTO
         3 000744   000035 036000 4                  ADLQ    29
         3 000745   200042 756100                    STQ     LEN+2,,AUTO
         3 000746   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000747   000000 631400 4                  EPPR1   0
         3 000750   000000 701000 xent               TSX1    XSS$BUFPTR
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:169  
         3 000751   000000 011000                    NOP     0

      742    16652    3               CALL XSS$BUFPTR( LCTX.DSTX, DST$);

  16652  3 000752   200030 630500                    EPPR0   DST$,,AUTO
         3 000753   200043 450500                    STP0    LEN+3,,AUTO
         3 000754   200007 236100                    LDQ     LCTX$,,AUTO
         3 000755   000035 036000 4                  ADLQ    29
         3 000756   200042 756100                    STQ     LEN+2,,AUTO
         3 000757   200042 630500                    EPPR0   LEN+2,,AUTO
         3 000760   000000 631400 4                  EPPR1   0
         3 000761   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000762   000000 011000                    NOP     0

      743    16653    3               DST$->XSC$ADDRESS = SRC$->XSC$ADDRESS;

  16653  3 000763   200031 470500                    LDP0    SRC$,,AUTO
         3 000764   200030 471500                    LDP1    DST$,,AUTO
         3 000765   000100 100500                    MLR     fill='000'O
         3 000766   000000 000456                    ADSC9   0,,PR0                   cn=0,n=302
         3 000767   100000 000456                    ADSC9   0,,PR1                   cn=0,n=302

      744    16654    3               VBLK.CTX$ = LCTX$;

  16654  3 000770   200007 236100                    LDQ     LCTX$,,AUTO
         3 000771   200020 756100                    STQ     VBLK,,AUTO

      745    16655    3               SCID = LCTX.SCID;

  16655  3 000772   200007 470500                    LDP0    LCTX$,,AUTO
         3 000773   000015 236100                    LDQ     13,,PR0
         3 000774   000022 772000                    QRL     18
         3 000775   000777 376007                    ANQ     511,DL
         3 000776   200032 756100                    STQ     SCID,,AUTO

      746    16656    3               XSS$GENERIC.SCID = LCTX.SCID;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:170  
  16656  3 000777   200022 471500                    LDP1    VBLK+2,,AUTO
         3 001000   000015 236100                    LDQ     13,,PR0
         3 001001   100000 552120                    STBQ    0,'20'O,PR1

      747    16657    3               LCTX.MAGIC = GLUE.MAGIC;

  16657  3 001002   200033 470500                    LDP0    SPDU$,,AUTO
         3 001003   200007 471500                    LDP1    LCTX$,,AUTO
         3 001004   000000 236100                    LDQ     0,,PR0
         3 001005   100015 552104                    STBQ    13,'04'O,PR1

      748    16658    3               CALL ADDRSETUP;

  16658  3 001006   001145 701000 3                  TSX1    ADDRSETUP
         3 001007   000000 011000                    NOP     0

      749    16659    3               LCTX.PEERSCID = GLUE.MYSCID;

  16659  3 001010   200033 470500                    LDP0    SPDU$,,AUTO
         3 001011   200007 471500                    LDP1    LCTX$,,AUTO
         3 001012   000000 236100                    LDQ     0,,PR0
         3 001013   100015 552140                    STBQ    13,'40'O,PR1

      750    16660    3               LCTX.MODE = %SERVER;

  16660  3 001014   000002 236007                    LDQ     2,DL
         3 001015   100013 552104                    STBQ    11,'04'O,PR1

      751    16661    3               LCTX.STATION = SCTX.LATCH.STATION;

  16661  3 001016   200006 473500                    LDP3    CTX$,,AUTO
         3 001017   040100 100500                    MLR     fill='040'O
         3 001020   300041 000010                    ADSC9   33,,PR3                  cn=0,n=8
         3 001021   100027 000010                    ADSC9   23,,PR1                  cn=0,n=8

      752    16662    3               LCTX.DCB# = SCTX.DCB#;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:171  
  16662  3 001022   300033 720100                    LXL0    27,,PR3
         3 001023   100033 440100                    SXL0    27,,PR1

      753    16663    3               LCTX.EVENT# = SCTX.EVENT#;

  16663  3 001024   300034 235100                    LDA     28,,PR3
         3 001025   100034 755100                    STA     28,,PR1

      754    16664    3               LCTX.ENTRY$ = SCTX.ENTRY$;

  16664  3 001026   300016 236100                    LDQ     14,,PR3
         3 001027   100016 756100                    STQ     14,,PR1

      755    16665    3               LCTX.LATCH.MSG$ = SCTX.LATCH.MSG$;

  16665  3 001030   300036 236100                    LDQ     30,,PR3
         3 001031   100036 756100                    STQ     30,,PR1
         3 001032   001131 710000 3                  TRA     s:16700

      756    16666    3           CASE( %K_TCONNECT_CFM);

      757    16667    3               XSS$GENERIC.SCID = LCTX.SCID;

  16667  3 001033   200007 471500                    LDP1    LCTX$,,AUTO
         3 001034   200022 473500                    LDP3    VBLK+2,,AUTO
         3 001035   100015 236100                    LDQ     13,,PR1
         3 001036   300000 552120                    STBQ    0,'20'O,PR3

      758    16668    3               CALL ADDRSETUP;

  16668  3 001037   001145 701000 3                  TSX1    ADDRSETUP
         3 001040   000000 011000                    NOP     0

      759    16669    3               LCTX.PEERSCID = GLUE.MYSCID;

  16669  3 001041   200033 470500                    LDP0    SPDU$,,AUTO
         3 001042   200007 471500                    LDP1    LCTX$,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:172  
         3 001043   000000 236100                    LDQ     0,,PR0
         3 001044   100015 552140                    STBQ    13,'40'O,PR1

      760    16670    3               VBLK.EVENT = %XSS_SEV_TCONCNF;

  16670  3 001045   000063 236007                    LDQ     51,DL
         3 001046   200021 552104                    STBQ    VBLK+1,'04'O,AUTO

      761    16671    3               NEEDCREDIT = %TRUE;

  16671  3 001047   400000 236003                    LDQ     -131072,DU
         3 001050   200011 756100                    STQ     NEEDCREDIT,,AUTO
         3 001051   001131 710000 3                  TRA     s:16700

      762    16672    3           CASE( %K_TDISCONNECT_IND);

      763    16673    3               XSS$GENERIC.SCID = LCTX.SCID;

  16673  3 001052   200007 471500                    LDP1    LCTX$,,AUTO
         3 001053   200022 473500                    LDP3    VBLK+2,,AUTO
         3 001054   100015 236100                    LDQ     13,,PR1
         3 001055   300000 552120                    STBQ    0,'20'O,PR3

      764    16674    3               CALL ADDRSETUP;

  16674  3 001056   001145 701000 3                  TSX1    ADDRSETUP
         3 001057   000000 011000                    NOP     0

      765    16675    3               VBLK.EVENT = %XSS_SEV_TDISIND;

  16675  3 001060   000065 236007                    LDQ     53,DL
         3 001061   200021 552104                    STBQ    VBLK+1,'04'O,AUTO
         3 001062   001131 710000 3                  TRA     s:16700

      766    16676    3           CASE( %K_TFLOW_STOP);

      767    16677    3               LCTX.FLOWSTOPPED = %TRUE;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:173  

  16677  3 001063   200007 471500                    LDP1    LCTX$,,AUTO
         3 001064   040000 236007                    LDQ     16384,DL
         3 001065   100013 256100                    ORSQ    11,,PR1

      768    16678    3               COUNTER = COUNTER + 1;

  16678  3 001066   200005 054100                    AOS     COUNTER,,AUTO

      769    16679    3               RETURN;

  16679  3 001067   200016 221300                    LDX1  ! SECONDS+2,,AUTO
         3 001070   000001 702211                    TSX2  ! 1,X1

      770    16680    3           CASE( %K_TFLOW_START);

      771    16681    3               LCTX.FLOWSTOPPED = %FALSE;

  16681  3 001071   200007 471500                    LDP1    LCTX$,,AUTO
         3 001072   000036 236000 4                  LDQ     30
         3 001073   100013 356100                    ANSQ    11,,PR1

      772    16682    3               COUNTER = COUNTER + 1;

  16682  3 001074   200005 054100                    AOS     COUNTER,,AUTO

      773    16683    3               RETURN;

  16683  3 001075   200016 221300                    LDX1  ! SECONDS+2,,AUTO
         3 001076   000001 702211                    TSX2  ! 1,X1

      774    16684    3           CASE( %K_TDATA_IND,

      775    16685    3                 %K_TEXPD_DATA_IND);
      776    16686    3               VBLK.EVENT = %XSS_SEV_NULL;

  16686  3 001077   000000 236003                    LDQ     0,DU
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:174  
         3 001100   200021 552104                    STBQ    VBLK+1,'04'O,AUTO

      777    16687    3               SPDU$ = ADDR( GLUE.DATA);

  16687  3 001101   200033 236100                    LDQ     SPDU$,,AUTO
         3 001102   000001 036003                    ADLQ    1,DU
         3 001103   200033 756100                    STQ     SPDU$,,AUTO

      778    16688    3               VBLK.PDU.PTR$ = SPDU$;

  16688  3 001104   200024 756100                    STQ     VBLK+4,,AUTO

      779    16689    3               SPDUSZ = SPDUSZ - 4;

  16689  3 001105   000004 336007                    LCQ     4,DL
         3 001106   200034 056100                    ASQ     SPDUSZ,,AUTO

      780    16690    3               VBLK.PDU.SIZE = SPDUSZ;

  16690  3 001107   200034 235100                    LDA     SPDUSZ,,AUTO
         3 001110   200025 755100                    STA     VBLK+5,,AUTO

      781    16691                    /* Decode the SPDU(s) and invoke state machine for each one */
      782    16692    3               CALL XSS$DECODE( VBLK)

  16692  3 001111   200020 630500                    EPPR0   VBLK,,AUTO
         3 001112   200042 450500                    STP0    LEN+2,,AUTO
         3 001113   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001114   000011 631400 4                  EPPR1   9
         3 001115   000000 701000 xent               TSX1    XSS$DECODE
         3 001116   001120 702000 3                  TSX2    s:16695
         3 001117   001124 710000 3                  TRA     s:16697

      783    16693    4               WHENALTRETURN DO;

      784    16694                        /*N* fix this */
      785    16695    4                   CALL XSS$SCREECH( XSS_F$DECODE);
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:175  

  16695  3 001120   000037 630400 4                  EPPR0   31
         3 001121   000011 631400 4                  EPPR1   9
         3 001122   000000 701000 xent               TSX1    XSS$SCREECH
         3 001123   000000 011000                    NOP     0

      786    16696    4                   END;

      787    16697    3               COUNTER = COUNTER + VBLK.USERCALL;  /* Session handler called? */

  16697  3 001124   200005 236100                    LDQ     COUNTER,,AUTO
         3 001125   200023 036100                    ADLQ    VBLK+3,,AUTO
         3 001126   200005 756100                    STQ     COUNTER,,AUTO

      788    16698    3               RETURN;

  16698  3 001127   200016 221300                    LDX1  ! SECONDS+2,,AUTO
         3 001130   000001 702211                    TSX2  ! 1,X1

      789    16699    3           END;

      790    16700    2       CALL XSS$MACHINE( VBLK)

  16700  3 001131   200020 630500                    EPPR0   VBLK,,AUTO
         3 001132   200042 450500                    STP0    LEN+2,,AUTO
         3 001133   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001134   000011 631400 4                  EPPR1   9
         3 001135   000000 701000 xent               TSX1    XSS$MACHINE
         3 001136   001140 702000 3                  TSX2    s:16704
         3 001137   001140 710000 3                  TRA     s:16704

      791    16701    3       WHENALTRETURN DO;

      792    16702                /* Connection has aborted.  Fine with me. */
      793    16703    3           END;

      794    16704    2       COUNTER = COUNTER + VBLK.USERCALL;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:176  

  16704  3 001140   200005 236100                    LDQ     COUNTER,,AUTO
         3 001141   200023 036100                    ADLQ    VBLK+3,,AUTO
         3 001142   200005 756100                    STQ     COUNTER,,AUTO

      795    16705    2       RETURN;

  16705  3 001143   200016 221300                    LDX1  ! SECONDS+2,,AUTO
         3 001144   000001 702211                    TSX2  ! 1,X1

      796    16706        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:177  
      797    16707        /*I*    NAME:   ADDRSETUP
      798    16708                DESCRIPTION:
      799    16709                    This internal routine picks apart the FPT_CONNECT_OSI or
      800    16710                    FPT_TERM_OSI and puts the source and destination TSAPs and
      801    16711                    NSAPs in AUTO structures, then frames these structures in
      802    16712                    the Session FPT that the state machine is entered with.
      803    16713        */
      804    16714    2   ADDRSETUP: PROC;

  16714  3 001145   200036 741300       ADDRSETUP    STX1  ! UADR$+1,,AUTO

      805    16715
      806    16716    3       DCL PTR$ PTR;
      807    16717    3       DCL LEN SBIN;
      808    16718    3       DCL BYTES CHAR( LEN) BASED;
      809    16719
      810    16720    3       PTR$ = ADDR( GLUE.DATA);

  16720  3 001146   200033 236100                    LDQ     SPDU$,,AUTO
         3 001147   000001 036003                    ADLQ    1,DU
         3 001150   200037 756100                    STQ     PTR$,,AUTO

      811    16721    3       IF GLUE.TRNFNC = %K_TDISCONNECT_IND THEN

  16721  3 001151   200033 470500                    LDP0    SPDU$,,AUTO
         3 001152   000000 236100                    LDQ     0,,PR0
         3 001153   000777 376003                    ANQ     511,DU
         3 001154   000031 116003                    CMPQ    25,DU
         3 001155   001162 601000 3                  TNZ     s:16724

      812    16722    3           PTR$ = PINCRW( PTR$, -5);  /*N* adjust ptr for TERM fpt grossly */

  16722  3 001156   200037 236100                    LDQ     PTR$,,AUTO
         3 001157   777773 036003                    ADLQ    -5,DU
         3 001160   200037 756100                    STQ     PTR$,,AUTO
         3 001161   001215 710000 3                  TRA     s:16728

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:178  
      813    16723    4       ELSE DO;

      814    16724    4           CALL XSS$BUFPTR( LCTX.SRCX, XSS$CONNECT.CALLING$);

  16724  3 001162   200022 236100                    LDQ     VBLK+2,,AUTO
         3 001163   000006 036003                    ADLQ    6,DU
         3 001164   200043 756100                    STQ     LEN+3,,AUTO
         3 001165   200007 236100                    LDQ     LCTX$,,AUTO
         3 001166   000003 036003                    ADLQ    3,DU
         3 001167   200042 756100                    STQ     LEN+2,,AUTO
         3 001170   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001171   000000 631400 4                  EPPR1   0
         3 001172   000000 701000 xent               TSX1    XSS$BUFPTR
         3 001173   000000 011000                    NOP     0

      815    16725    4           CALL XSS$BUFPTR( LCTX.DSTX, XSS$CONNECT.CALLED$);

  16725  3 001174   200022 236100                    LDQ     VBLK+2,,AUTO
         3 001175   000007 036003                    ADLQ    7,DU
         3 001176   200043 756100                    STQ     LEN+3,,AUTO
         3 001177   200007 236100                    LDQ     LCTX$,,AUTO
         3 001200   000035 036000 4                  ADLQ    29
         3 001201   200042 756100                    STQ     LEN+2,,AUTO
         3 001202   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001203   000000 631400 4                  EPPR1   0
         3 001204   000000 701000 xent               TSX1    XSS$BUFPTR
         3 001205   000000 011000                    NOP     0

      816    16726    4           LCTX.FLAGS.TEXP = PTR$->TCONFPT.TR_FLAGS.EXPEDITED;

  16726  3 001206   200007 470500                    LDP0    LCTX$,,AUTO
         3 001207   200037 471500                    LDP1    PTR$,,AUTO
         3 001210   100004 236100                    LDQ     4,,PR1
         3 001211   000013 736000                    QLS     11
         3 001212   000006 676100                    ERQ     6,,PR0
         3 001213   010000 376007                    ANQ     4096,DL
         3 001214   000006 656100                    ERSQ    6,,PR0
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:179  

      817    16727    4           END;

      818    16728    3       CALL XSS$BUFPTR( LCTX.SRCX, UADR$);

  16728  3 001215   200035 630500                    EPPR0   UADR$,,AUTO
         3 001216   200043 450500                    STP0    LEN+3,,AUTO
         3 001217   200007 236100                    LDQ     LCTX$,,AUTO
         3 001220   000003 036003                    ADLQ    3,DU
         3 001221   200042 756100                    STQ     LEN+2,,AUTO
         3 001222   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001223   000000 631400 4                  EPPR1   0
         3 001224   000000 701000 xent               TSX1    XSS$BUFPTR
         3 001225   000000 011000                    NOP     0

      819    16729    3       UADR$->UADR.TSAP = PTR$->TCONFPT.SRC_TSAP;

  16729  3 001226   200037 470500                    LDP0    PTR$,,AUTO
         3 001227   200035 471500                    LDP1    UADR$,,AUTO
         3 001230   000100 100500                    MLR     fill='000'O
         3 001231   000006 000042                    ADSC9   6,,PR0                   cn=0,n=34
         3 001232   100075 000042                    ADSC9   61,,PR1                  cn=0,n=34

      820    16730    3       UADR$->UADR.NSAP = PTR$->TCONFPT.SRC_NSAP;

  16730  3 001233   000100 100500                    MLR     fill='000'O
         3 001234   000030 000026                    ADSC9   24,,PR0                  cn=0,n=22
         3 001235   100106 000026                    ADSC9   70,,PR1                  cn=0,n=22

      821    16731    3       CALL XSS$BUFPTR( LCTX.DSTX, UADR$);

  16731  3 001236   200035 633500                    EPPR3   UADR$,,AUTO
         3 001237   200043 453500                    STP3    LEN+3,,AUTO
         3 001240   200007 236100                    LDQ     LCTX$,,AUTO
         3 001241   000035 036000 4                  ADLQ    29
         3 001242   200042 756100                    STQ     LEN+2,,AUTO
         3 001243   200042 630500                    EPPR0   LEN+2,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:180  
         3 001244   000000 631400 4                  EPPR1   0
         3 001245   000000 701000 xent               TSX1    XSS$BUFPTR
         3 001246   000000 011000                    NOP     0

      822    16732    3       UADR$->UADR.TSAP = PTR$->TCONFPT.DST_TSAP;

  16732  3 001247   200037 470500                    LDP0    PTR$,,AUTO
         3 001250   200035 471500                    LDP1    UADR$,,AUTO
         3 001251   000100 100500                    MLR     fill='000'O
         3 001252   000017 000042                    ADSC9   15,,PR0                  cn=0,n=34
         3 001253   100075 000042                    ADSC9   61,,PR1                  cn=0,n=34

      823    16733    3       UADR$->UADR.NSAP = PTR$->TCONFPT.DST_NSAP;

  16733  3 001254   000100 100500                    MLR     fill='000'O
         3 001255   000035 400026                    ADSC9   29,,PR0                  cn=2,n=22
         3 001256   100106 000026                    ADSC9   70,,PR1                  cn=0,n=22

      824    16734    3       RETURN;

  16734  3 001257   200036 221300                    LDX1  ! UADR$+1,,AUTO
         3 001260   000001 702211                    TSX2  ! 1,X1

      825    16735
      826    16736    3       END ADDRSETUP;
      827    16737        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:181  
      828    16738        /*I*    NAME:   QUICKDISC
      829    16739                DESCRIPTION:
      830    16740                    This internal routine deals with a disconnection reported by
      831    16741                    means other than the Session protocol.  This can only happen
      832    16742                    when a 'fast path' (comgroup-direct) link is involved.
      833    16743                    QUICKDISC is called in the following situations:
      834    16744                        E$LDSC on client no-wait read of server CG,
      835    16745                        CG_DCLS administrative message read by server.
      836    16746        */
      837    16747    2   QUICKDISC: ENTRY;

  16747  3 001261   200016 741300       QUICKDISC    STX1  ! SECONDS+2,,AUTO

      838    16748
      839    16749    2       VBLK = XSS_VBLK;

  16749  3 001262   000100 100400                    MLR     fill='000'O
         3 001263   000000 000040 xsym               ADSC9   XSS_VBLK                 cn=0,n=32
         3 001264   200020 000040                    ADSC9   VBLK,,AUTO               cn=0,n=32

      840    16750    2       VBLK.PDU.SIZE = 0;

  16750  3 001265   200025 450100                    STZ     VBLK+5,,AUTO

      841    16751    2       VBLK.PDU.PTR$ = ADDR( NIL);

  16751  3 001266   000016 236000 4                  LDQ     14
         3 001267   200024 756100                    STQ     VBLK+4,,AUTO

      842    16752    2       VBLK.EVENT = %XSS_SEV_TDISIND;

  16752  3 001270   000065 236007                    LDQ     53,DL
         3 001271   200021 552104                    STBQ    VBLK+1,'04'O,AUTO

      843    16753    3       DO SCID = 1 TO XSS_MAX_LCID;

  16753  3 001272   000001 235007                    LDA     1,DL
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:182  
         3 001273   200032 755100                    STA     SCID,,AUTO
         3 001274   001357 710000 3                  TRA     NXTSCID+1

      844    16754    3           CALL XSS$CTXPTR( SCID, LCTX$) ALTRET( NXTSCID);

  16754  3 001275   200007 630500                    EPPR0   LCTX$,,AUTO
         3 001276   200043 450500                    STP0    LEN+3,,AUTO
         3 001277   200032 631500                    EPPR1   SCID,,AUTO
         3 001300   200042 451500                    STP1    LEN+2,,AUTO
         3 001301   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001302   000000 631400 4                  EPPR1   0
         3 001303   000000 701000 xent               TSX1    XSS$CTXPTR
         3 001304   001356 702000 3                  TSX2    NXTSCID

      845    16755    3           IF LCTX.STATE > %XSS_SST_01 AND

  16755  3 001305   200007 470500                    LDP0    LCTX$,,AUTO
         3 001306   000000 236100                    LDQ     0,,PR0
         3 001307   777000 376003                    ANQ     -512,DU
         3 001310   002000 116003                    CMPQ    1024,DU
         3 001311   001356 602000 3                  TNC     NXTSCID
         3 001312   200006 471500                    LDP1    CTX$,,AUTO
         3 001313   040100 106500                    CMPC    fill='040'O
         3 001314   000027 000010                    ADSC9   23,,PR0                  cn=0,n=8
         3 001315   100041 000010                    ADSC9   33,,PR1                  cn=0,n=8
         3 001316   001356 601000 3                  TNZ     NXTSCID

      846    16756    4                   LCTX.STATION = SCTX.LATCH.STATION THEN DO;

      847    16757    4               VBLK.CTX$ = LCTX$;

  16757  3 001317   200007 236100                    LDQ     LCTX$,,AUTO
         3 001320   200020 756100                    STQ     VBLK,,AUTO

      848    16758    4               CALL XSS$BUFPTR( CCB$( LCTX.SCID)->XSC$CCB.SFPTX, VBLK.FPT$);

  16758  3 001321   000015 220100                    LDX0    13,,PR0
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:183  
         3 001322   000777 360003                    ANX0    511,DU
         3 001323   000000 473400 xsym               LDP3    XSS_CCB$$
         3 001324   300000 474510                    LDP4    0,X0,PR3
         3 001325   200022 635500                    EPPR5   VBLK+2,,AUTO
         3 001326   200043 455500                    STP5    LEN+3,,AUTO
         3 001327   200044 454500                    STP4    LEN+4,,AUTO
         3 001330   200044 236100                    LDQ     LEN+4,,AUTO
         3 001331   000034 036000 4                  ADLQ    28
         3 001332   200042 756100                    STQ     LEN+2,,AUTO
         3 001333   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001334   000000 631400 4                  EPPR1   0
         3 001335   000000 701000 xent               TSX1    XSS$BUFPTR
         3 001336   000000 011000                    NOP     0

      849    16759    4               XSS$GENERIC.SCID = LCTX.SCID;

  16759  3 001337   200007 470500                    LDP0    LCTX$,,AUTO
         3 001340   200022 471500                    LDP1    VBLK+2,,AUTO
         3 001341   000015 236100                    LDQ     13,,PR0
         3 001342   100000 552120                    STBQ    0,'20'O,PR1

      850    16760    4               CALL XSS$MACHINE( VBLK)

  16760  3 001343   200020 630500                    EPPR0   VBLK,,AUTO
         3 001344   200042 450500                    STP0    LEN+2,,AUTO
         3 001345   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001346   000011 631400 4                  EPPR1   9
         3 001347   000000 701000 xent               TSX1    XSS$MACHINE
         3 001350   001352 702000 3                  TSX2    s:16764
         3 001351   001352 710000 3                  TRA     s:16764

      851    16761    5               WHENALTRETURN DO;

      852    16762                        /* Connection has aborted.  O.k. with me. */
      853    16763    5                   END;

      854    16764    4               COUNTER = COUNTER + 1;  /* because SS-user handler was entered */
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:184  

  16764  3 001352   200005 054100                    AOS     COUNTER,,AUTO

      855    16765    4               LCTX.ABORTING = %TRUE;

  16765  3 001353   200007 470500                    LDP0    LCTX$,,AUTO
         3 001354   001000 236007                    LDQ     512,DL
         3 001355   000013 256100                    ORSQ    11,,PR0

      856    16766    4               END;

      857    16767    3   NXTSCID:
      858    16768    3           END;

  16768  3 001356   200032 054100       NXTSCID      AOS     SCID,,AUTO
         3 001357   200032 236100                    LDQ     SCID,,AUTO
         3 001360   000000 116000 xsym               CMPQ    XSS_MAX_LCID
         3 001361   001275 604400 3                  TMOZ    s:16754

      859    16769    2       RETURN;

  16769  3 001362   200016 221300                    LDX1  ! SECONDS+2,,AUTO
         3 001363   000001 702211                    TSX2  ! 1,X1
         3 001364   001367 710000 3                  TRA     s:16781

      860    16770
      861    16771    2       END HANDLEIT;
      862    16772        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:185  
      863    16773        /*F*
      864    16774                NAME:   XSS$COMMWAITX
      865    16775                PURPOSE:
      866    16776                    This routine issues the first no-wait read to an AU or NC DCB.
      867    16777                    Subsequent reads are issued by XSS$COMMWAIT above.
      868    16778        */
      869    16779    1   XSS$COMMWAITX: ENTRY( PARM1) ALTRET;

  16779  3 001365   000000 700200 xent  XSS$COMMWAI* TSX0  ! X66_AUTO_1
         3 001366   000050 000001                    ZERO    40,1

      870    16780
      871    16781    1       CCB$ = ADDR( PARM1);

  16781  3 001367   200003 236100                    LDQ     @PARM1,,AUTO
         3 001370   200007 756100                    STQ     LCTX$,,AUTO

      872    16782            /* get ptrs to context and read buffer */
      873    16783    1       CALL XSS$BUFPTR( CCB.SFPTX, FPT$);

  16783  3 001371   200012 630500                    EPPR0   PTR$,,AUTO
         3 001372   200043 450500                    STP0    LEN+3,,AUTO
         3 001373   000034 036000 4                  ADLQ    28
         3 001374   200042 756100                    STQ     LEN+2,,AUTO
         3 001375   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001376   000000 631400 4                  EPPR1   0
         3 001377   000000 701000 xent               TSX1    XSS$BUFPTR
         3 001400   000000 011000                    NOP     0

      874    16784    1       SCID = CCB.LCID;

  16784  3 001401   200007 470500                    LDP0    LCTX$,,AUTO
         3 001402   000000 236100                    LDQ     0,,PR0
         3 001403   000777 376007                    ANQ     511,DL
         3 001404   200013 756100                    STQ     SCID,,AUTO

      875    16785    1       CALL XSS$EVLOG( 'KX', SCID);
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:186  

  16785  3 001405   200013 631500                    EPPR1   SCID,,AUTO
         3 001406   200043 451500                    STP1    LEN+3,,AUTO
         3 001407   000040 236000 4                  LDQ     32
         3 001410   200042 756100                    STQ     LEN+2,,AUTO
         3 001411   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001412   000000 631400 4                  EPPR1   0
         3 001413   000000 701000 xent               TSX1    XSS$EVLOG
         3 001414   000000 011000                    NOP     0

      876    16786    1       CALL XSS$CTXPTR( SCID, CTX$);

  16786  3 001415   200006 630500                    EPPR0   CTX$,,AUTO
         3 001416   200043 450500                    STP0    LEN+3,,AUTO
         3 001417   200013 631500                    EPPR1   SCID,,AUTO
         3 001420   200042 451500                    STP1    LEN+2,,AUTO
         3 001421   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001422   000000 631400 4                  EPPR1   0
         3 001423   000000 701000 xent               TSX1    XSS$CTXPTR
         3 001424   000000 011000                    NOP     0

      877    16787    1   FIRSTREAD:
      878    16788    1       CALL XSS$BUFPTR( SCTX.BUFX, BUF$);

  16788  3 001425   200004 630500       FIRSTREAD    EPPR0   BUF$,,AUTO
         3 001426   200043 450500                    STP0    LEN+3,,AUTO
         3 001427   200006 236100                    LDQ     CTX$,,AUTO
         3 001430   000033 036003                    ADLQ    27,DU
         3 001431   200042 756100                    STQ     LEN+2,,AUTO
         3 001432   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001433   000000 631400 4                  EPPR1   0
         3 001434   000000 701000 xent               TSX1    XSS$BUFPTR
         3 001435   000000 011000                    NOP     0

      879    16789            /* set up and then issue no-wait read */
      880    16790    2       DO CASE( SCTX.MODE);

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:187  
  16790  3 001436   200006 470500                    LDP0    CTX$,,AUTO
         3 001437   000013 720100                    LXL0    11,,PR0
         3 001440   000777 360003                    ANX0    511,DU
         3 001441   000003 100003                    CMPX0   3,DU
         3 001442   001444 602010 3                  TNC     s:16790+6,X0
         3 001443   001535 710000 3                  TRA     s:16810
         3 001444   001535 710000 3                  TRA     s:16810
         3 001445   001447 710000 3                  TRA     s:16792
         3 001446   001502 710000 3                  TRA     s:16802

      881    16791    2           CASE( %CLIENT);

      882    16792    2               IF XSS_DEBUG ~= 0 THEN

  16792  3 001447   000000 235000 xsym               LDA     XSS_DEBUG
         3 001450   001454 600000 3                  TZE     s:16795

      883    16793    2                   NCRD.STATION_ = VECTOR( XSS_AUSTA);

  16793  3 001451   000022 237000 4                  LDAQ    18
         3 001452   000040 757000 1                  STAQ    NCRD+6
         3 001453   001456 710000 3                  TRA     s:16796

      884    16794    2               ELSE
      885    16795    2                   NCRD.STATION_ = VECTOR( NIL);

  16795  3 001454   000020 237000 4                  LDAQ    16
         3 001455   000040 757000 1                  STAQ    NCRD+6

      886    16796    2               NCRD.BUF_ = VECTOR( RDBUFFER);

  16796  3 001456   000024 235000 4                  LDA     20
         3 001457   200004 236100                    LDQ     BUF$,,AUTO
         3 001460   000036 757000 1                  STAQ    NCRD+4

      887    16797    2               NCRD.V.EVENT# = SCTX.EVENT#;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:188  
  16797  3 001461   000034 235100                    LDA     28,,PR0
         3 001462   000043 755000 1                  STA     NCRD+9

      888    16798    2               NCRD.V.DCB# = SCTX.DCB#;

  16798  3 001463   000033 720100                    LXL0    27,,PR0
         3 001464   000042 740000 1                  STX0    NCRD+8

      889    16799    2               CALL XSS$EVLOG( 'NW', SCID);

  16799  3 001465   200013 631500                    EPPR1   SCID,,AUTO
         3 001466   200043 451500                    STP1    LEN+3,,AUTO
         3 001467   000025 236000 4                  LDQ     21
         3 001470   200042 756100                    STQ     LEN+2,,AUTO
         3 001471   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001472   000000 631400 4                  EPPR1   0
         3 001473   000000 701000 xent               TSX1    XSS$EVLOG
         3 001474   000000 011000                    NOP     0

      890    16800    2               CALL M$READ( NCRD) ALTRET( RDERR);

  16800  3 001475   000032 630400 1                  EPPR0   NCRD
         3 001476   440000 713400                    CLIMB   alt,read
         3 001477   401400 401760                    pmme    nvectors=4
         3 001500   000473 702000 3                  TSX2    RDERR
         3 001501   001535 710000 3                  TRA     s:16810

      891    16801    2           CASE( %SERVER);

      892    16802    2               AURD.BUF_ = VECTOR( RDBUFFER);

  16802  3 001502   000024 235000 4                  LDA     20
         3 001503   200004 236100                    LDQ     BUF$,,AUTO
         3 001504   000020 757000 1                  STAQ    AURD+4

      893    16803    2               AURD.V.EVENT# = SCTX.EVENT#;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:189  
  16803  3 001505   000034 235100                    LDA     28,,PR0
         3 001506   000025 755000 1                  STA     AURD+9

      894    16804    2               AURD.V.DCB# = SCTX.DCB#;

  16804  3 001507   000033 720100                    LXL0    27,,PR0
         3 001510   000024 740000 1                  STX0    AURD+8

      895    16805    2               CALL XSS$EVLOG( 'NW', SCID);

  16805  3 001511   200013 631500                    EPPR1   SCID,,AUTO
         3 001512   200043 451500                    STP1    LEN+3,,AUTO
         3 001513   000025 236000 4                  LDQ     21
         3 001514   200042 756100                    STQ     LEN+2,,AUTO
         3 001515   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001516   000000 631400 4                  EPPR1   0
         3 001517   000000 701000 xent               TSX1    XSS$EVLOG
         3 001520   000000 011000                    NOP     0

      896    16806    2               IF DCBADDR( SCTX.DCB#)->F$DCB.FCN.CNT(0) = 0 THEN

  16806  3 001521   000026 470400 4                  LDP0    22
         3 001522   000000 471500                    LDP1    0,,PR0
         3 001523   200006 473500                    LDP3    CTX$,,AUTO
         3 001524   300033 720100                    LXL0    27,,PR3
         3 001525   100000 474510                    LDP4    0,X0,PR1
         3 001526   400074 236100                    LDQ     60,,PR4
         3 001527   377000 316003                    CANQ    130560,DU
         3 001530   001535 601000 3                  TNZ     s:16810

      897    16807    2                   CALL M$READ( AURD) ALTRET( RDERR);

  16807  3 001531   000014 630400 1                  EPPR0   AURD
         3 001532   440000 713400                    CLIMB   alt,read
         3 001533   401400 401760                    pmme    nvectors=4
         3 001534   000473 702000 3                  TSX2    RDERR

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:190  
      898    16808    2           END;

      899    16809            /* see if we got an error on the read */
      900    16810    1       IF SCTX.LATCH.PRESENT THEN

  16810  3 001535   200006 470500                    LDP0    CTX$,,AUTO
         3 001536   000035 234100                    SZN     29,,PR0
         3 001537   001545 605000 3                  TPL     s:16815

      901    16811    2           IF SCTX.LATCH.ERRCODE THEN DO;

  16811  3 001540   000040 235100                    LDA     32,,PR0
         3 001541   001545 600000 3                  TZE     s:16815

      902    16812    2               ERRCODE = SCTX.LATCH.ERRCODE;

  16812  3 001542   000040 236100                    LDQ     32,,PR0
         3 001543   000056 756000 1                  STQ     ERRCODE

      903    16813    2               GOTO BAILOUT;

  16813  3 001544   000477 710000 3                  TRA     BAILOUT

      904    16814    2               END;
      905    16815    1       RETURN;

  16815  3 001545   000000 702200 xent               TSX2  ! X66_ARET

      906    16816
      907    16817    1   XSS$COMMWAITZ: ENTRY( PARM1) ALTRET;

  16817  3 001546   000000 700200 xent  XSS$COMMWAI* TSX0  ! X66_AUTO_1
         3 001547   000050 000001                    ZERO    40,1

      908    16818
      909    16819    1       CTX$ = ADDR( PARM1);

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:191  
  16819  3 001550   200003 236100                    LDQ     @PARM1,,AUTO
         3 001551   200006 756100                    STQ     CTX$,,AUTO

      910    16820    1       SCID = SCTX.SCID;

  16820  3 001552   200006 470500                    LDP0    CTX$,,AUTO
         3 001553   000015 236100                    LDQ     13,,PR0
         3 001554   000022 772000                    QRL     18
         3 001555   000777 376007                    ANQ     511,DL
         3 001556   200013 756100                    STQ     SCID,,AUTO

      911    16821    1       CALL XSS$EVLOG( 'KZ', SCID);

  16821  3 001557   200013 631500                    EPPR1   SCID,,AUTO
         3 001560   200043 451500                    STP1    LEN+3,,AUTO
         3 001561   000041 236000 4                  LDQ     33
         3 001562   200042 756100                    STQ     LEN+2,,AUTO
         3 001563   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001564   000000 631400 4                  EPPR1   0
         3 001565   000000 701000 xent               TSX1    XSS$EVLOG
         3 001566   000000 011000                    NOP     0

      912    16822    1       SCTX.NEEDAREAD = %FALSE;

  16822  3 001567   200006 470500                    LDP0    CTX$,,AUTO
         3 001570   000042 236000 4                  LDQ     34
         3 001571   000013 356100                    ANSQ    11,,PR0

      913    16823    1       GOTO FIRSTREAD;

  16823  3 001572   001425 710000 3                  TRA     FIRSTREAD

      914    16824        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:192  
      915    16825        /*F*
      916    16826                NAME:   XSS$COMMPEND
      917    16827                PURPOSE:
      918    16828                    This routine checks to see if there is an incoming message for
      919    16829                    a specific connection, and if so processes it.
      920    16830                DESCRIPTION:
      921    16831                    This routine is called from XSS$SESSION in case a message has
      922    16832                    arrived for a particular connection since the application last
      923    16833                    polled for incoming messages.  This helps make the client/server
      924    16834                    interaction more predictable (i.e., helps prevent state errors).
      925    16835
      926    16836                    The event queue is searched for the message and it is moved to
      927    16837                    the front of the queue.  Then we jump to JOINWAIT to handle it.
      928    16838        */
      929    16839    1   XSS$COMMPEND: ENTRY( PARM1) ALTRET;

  16839  3 001573   000000 700200 xent  XSS$COMMPEND TSX0  ! X66_AUTO_1
         3 001574   000050 000001                    ZERO    40,1

      930    16840
      931    16841    1       CALL XSS$EVLOG( 'KP', PARM1);

  16841  3 001575   200003 236100                    LDQ     @PARM1,,AUTO
         3 001576   000043 235000 4                  LDA     35
         3 001577   200042 757100                    STAQ    LEN+2,,AUTO
         3 001600   200042 630500                    EPPR0   LEN+2,,AUTO
         3 001601   000000 631400 4                  EPPR1   0
         3 001602   000000 701000 xent               TSX1    XSS$EVLOG
         3 001603   000000 011000                    NOP     0

      932    16842    2       DO INHIBIT;

      933    16843    2           SCID = XSS_EVHDX;

  16843  3 001604   000101 235200 1                  LDA   ! XSS_EVHDX
         3 001605   000022 771200                    ARL   ! 18
         3 001606   200013 755300                    STA   ! SCID,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:193  

      934    16844    2           IF SCID = PARM1 THEN

  16844  3 001607   200003 470700                    LDP0  ! @PARM1,,AUTO
         3 001610   200013 236300                    LDQ   ! SCID,,AUTO
         3 001611   000000 116300                    CMPQ  ! 0,,PR0
         3 001612   001661 600200 3                  TZE   ! COMMON

      935    16845                    /* first item in event queue is the one we want */
      936    16846    2               GOTO COMMON;
      937    16847    2   LOOP:
      938    16848    2           CALL XSS$CTXPTR( SCID, CTX$);  /* this routine is INHIBITED too */

  16848  3 001613   200006 630700       LOOP         EPPR0 ! CTX$,,AUTO
         3 001614   200043 450700                    STP0  ! LEN+3,,AUTO
         3 001615   200013 631700                    EPPR1 ! SCID,,AUTO
         3 001616   200042 451700                    STP1  ! LEN+2,,AUTO
         3 001617   200042 630700                    EPPR0 ! LEN+2,,AUTO
         3 001620   000000 631600 4                  EPPR1 ! 0
         3 001621   000000 701200 xent               TSX1  ! XSS$CTXPTR
         3 001622   000000 011200                    NOP   ! 0

      939    16849    3           IF SCTX.LATCH.LNKX = PARM1 THEN DO;

  16849  3 001623   200003 470700                    LDP0  ! @PARM1,,AUTO
         3 001624   200006 471700                    LDP1  ! CTX$,,AUTO
         3 001625   100035 236300                    LDQ   ! 29,,PR1
         3 001626   777777 376207                    ANQ   ! -1,DL
         3 001627   000000 116300                    CMPQ  ! 0,,PR0
         3 001630   001663 601200 3                  TNZ   ! s:16864

      940    16850                    /* this item in event queue points to the one we want */
      941    16851                    /* Move wanted one to head of event queue */
      942    16852    3               CALL XSS$CTXPTR( PARM1, LCTX$);

  16852  3 001631   200007 633700                    EPPR3 ! LCTX$,,AUTO
         3 001632   200043 453700                    STP3  ! LEN+3,,AUTO
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:194  
         3 001633   200003 236300                    LDQ   ! @PARM1,,AUTO
         3 001634   200042 756300                    STQ   ! LEN+2,,AUTO
         3 001635   200042 630700                    EPPR0 ! LEN+2,,AUTO
         3 001636   000000 631600 4                  EPPR1 ! 0
         3 001637   000000 701200 xent               TSX1  ! XSS$CTXPTR
         3 001640   000000 011200                    NOP   ! 0

      943    16853    3               SCTX.LATCH.LNKX = LCTX.LATCH.LNKX;

  16853  3 001641   200007 470700                    LDP0  ! LCTX$,,AUTO
         3 001642   000035 720300                    LXL0  ! 29,,PR0
         3 001643   200006 471700                    LDP1  ! CTX$,,AUTO
         3 001644   100035 440300                    SXL0  ! 29,,PR1

      944    16854    3               LCTX.LATCH.LNKX = XSS_EVHDX;

  16854  3 001645   000101 221200 1                  LDX1  ! XSS_EVHDX
         3 001646   000035 441300                    SXL1  ! 29,,PR0

      945    16855    3               IF XSS_EVTLX = PARM1 THEN

  16855  3 001647   200003 473700                    LDP3  ! @PARM1,,AUTO
         3 001650   000102 236200 1                  LDQ   ! XSS_EVTLX
         3 001651   000022 772200                    QRL   ! 18
         3 001652   300000 116300                    CMPQ  ! 0,,PR3
         3 001653   001657 601200 3                  TNZ   ! s:16857

      946    16856    3                   XSS_EVTLX = SCTX.SCID;

  16856  3 001654   100015 220300                    LDX0  ! 13,,PR1
         3 001655   000777 360203                    ANX0  ! 511,DU
         3 001656   000102 740200 1                  STX0  ! XSS_EVTLX

      947    16857    3               XSS_EVHDX = PARM1;

  16857  3 001657   300000 720300                    LXL0  ! 0,,PR3
         3 001660   000101 740200 1                  STX0  ! XSS_EVHDX
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:195  

      948    16858    3   COMMON:
      949    16859                    /* make sure we don't do an M$WAIT */
      950    16860    3               SECONDS = 0;

  16860  3 001661   200014 450300       COMMON       STZ   ! SECONDS,,AUTO

      951    16861                    /* Now go handle that message */
      952    16862    3               GOTO JOINWAIT;

  16862  3 001662   000015 710200 3                  TRA   ! JOINWAIT

      953    16863    3               END;
      954    16864    2           IF SCTX.LATCH.LNKX = %NULL THEN

  16864  3 001663   100035 720300                    LXL0  ! 29,,PR1
         3 001664   777777 100203                    CMPX0 ! -1,DU
         3 001665   001672 601200 3                  TNZ   ! s:16868

      955    16865                    /* Reached end of queue.  Something's wrong here */
      956    16866    2               CALL XSS$SCREECH( XSS_F$EVNTQUE);

  16866  3 001666   000044 630600 4                  EPPR0 ! 36
         3 001667   000011 631600 4                  EPPR1 ! 9
         3 001670   000000 701200 xent               TSX1  ! XSS$SCREECH
         3 001671   000000 011200                    NOP   ! 0

      957    16867                /* Otherwise, check next item in queue */
      958    16868    2           SCID = SCTX.LATCH.LNKX;

  16868  3 001672   200006 470700                    LDP0  ! CTX$,,AUTO
         3 001673   000035 236300                    LDQ   ! 29,,PR0
         3 001674   777777 376207                    ANQ   ! -1,DL
         3 001675   200013 756300                    STQ   ! SCID,,AUTO

      959    16869    2           GOTO LOOP;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:196  
  16869  3 001676   001613 710200 3                  TRA   ! LOOP

      960    16870    2           END;

  16870  3 001677   001702 710000 3                  TRA     s:16880

      961    16871            /* ..can't get here.. */
      962    16872        %EJECT;
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:197  
      963    16873        /*F*
      964    16874                NAME:   XSP$COMMWAIT
      965    16875                PURPOSE:
      966    16876                    Provides a COMMWAIT ENTRY for Presentation applications.
      967    16877        */
      968    16878    1   XSP$COMMWAIT: ENTRY( PARM1) ALTRET;

  16878  3 001700   000000 700200 xent  XSP$COMMWAIT TSX0  ! X66_AUTO_1
         3 001701   000050 000001                    ZERO    40,1

      969    16879
      970    16880    1       GOTO COMMWAIT;

  16880  3 001702   000002 710000 3                  TRA     COMMWAIT

      971    16881
      972    16882        /*F*
      973    16883                NAME:   XSC$COMMWAIT
      974    16884                PURPOSE:
      975    16885                    Provides a COMMWAIT ENTRY for ACSE applications.
      976    16886        */
      977    16887    1   XSC$COMMWAIT: ENTRY( PARM1) ALTRET;

  16887  3 001703   000000 700200 xent  XSC$COMMWAIT TSX0  ! X66_AUTO_1
         3 001704   000050 000001                    ZERO    40,1

      978    16888
      979    16889    1       GOTO COMMWAIT;

  16889  3 001705   000002 710000 3                  TRA     COMMWAIT

(unnamed)
 Sect OctLoc
   1     000   000001 777640   000006 006000   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014                                    ........

VLP_SUA
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:198  
 Sect OctLoc
   1     006   302323 634175   001160 107760                                    ...}.pG.

FPT_EXTEND
 Sect OctLoc
   1     010   000001 777640   000012 006000   000000 000000   000000 000000    ................

AURD
 Sect OctLoc
   1     014   000005 777640   000024 006000   000000 177640   000000 006014    ................
   1     020   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     024   000000 000000   000000 000000   000000 000000   020000 000000    ................
   1     030   000000 000000   000000 000000                                    ........

NCRD
 Sect OctLoc
   1     032   000005 777640   000042 006000   000000 177640   000000 006014    ....."..........
   1     036   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     042   000000 000000   000000 000000   000000 000000   020000 000000    ................
   1     046   000000 000000   000000 000000                                    ........

FPT_WAIT
 Sect OctLoc
   1     050   000001 777640   000054 006000   000000 777640   000077 006000    .....,.......?..
   1     054   000000 000012   000000 000001                                    ........

ERRCODE
 Sect OctLoc
   1     056   000000 000000                                                    ....

XSS_AUSTA
 Sect OctLoc
   1     057   123105 122126   105122 040040   040040 040040   040040 040040    SERVER
   1     063   001000 000000   000000 000000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:199  
   1     067   040040 040040   040040 040040   040040 040040   040040 040040
   1     073   001000 000000   000000 000000   000000 000000   000000 000000    ................

XSS_EVHDX
 Sect OctLoc
   1     101   777777 ******                                                    ....

XSS_EVTLX
 Sect OctLoc
   1     102   777777 ******                                                    ....

XSS_F$CGEVNTOTHER
 Sect OctLoc
   2     000   302323 001237                                                    ....

(unnamed)
 Sect OctLoc
   2     001   302323 001247                                                    ....

XSS_F$CGWARNMEM
 Sect OctLoc
   2     002   302323 001257                                                    ....

XSS_F$CGWARNOTHER
 Sect OctLoc
   2     003   302323 001267                                                    ....

XSS_F$DECODE
 Sect OctLoc
   2     004   302323 001317                                                    ....

XSS_F$EVNTQUE
 Sect OctLoc
   2     005   302323 001347                                                    ....

AUTITLE
 Sect OctLoc
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:200  
   2     006   050130 123123   044124 122105   103126 051040   101125 040162    (XSS$TRECV) AU r
   2     012   143166 144***                                                    cvd.

(unnamed)
 Sect OctLoc
   2     014   000004 577640   000006 006000                                    ........

NCTITLE
 Sect OctLoc
   2     016   050130 123123   044124 122105   103126 051040   116103 040162    (XSS$TRECV) NC r
   2     022   143166 144***                                                    cvd.

(unnamed)
 Sect OctLoc
   2     024   000004 577640   000016 006000   113127 040040   101125 040040    ........KW  AU
   2     030   105122 040040   116127 040040   127124 040040   121105 040040    ER  NW  WT  QE
   2     034   113130 040040   113132 040040   113120 040040                    KX  KZ  KP

(unnamed)
 Sect OctLoc
   4     000   000002 000000   000026 006000   377777 777777   000003 000000    ................
   4     004   000000 000001   000024 006000   000004 006000   000014 006000    ................
   4     010   000027 006000   000001 000000   000002 006000   000003 006000    ................
   4     014   000000 006000   000030 006000   000000 006014   000056 006000    ................
   4     020   000000 177640   000000 006014   000007 777640   000057 006000    ............./..
   4     024   000775 777640   000031 006000   000000 006003   000000 000000    ................
   4     030   000032 006000   000054 006000   777777 777770   000033 006000    .....,..........
   4     034   000005 400000   000003 400000   777777 737777   000004 006000    ................
   4     040   000034 006000   000035 006000   777777 773777   000036 006000    ................
   4     044   000005 006000                                                    ....
      980    16890
      981    16891    1       END XSS$COMMWAIT;
      982    16892        %EOD;

PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:201  
--  Include file information  --

   XSS_SESSION_M.:XSA1TOU  is referenced.
   K_INTERFACE_M.:E05OU  is referenced.
   XSC_PERR_C.:XSA1TOU  is referenced.
   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSS_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSS$COMMWAIT.
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:202  

 **** Variables and constants ****

  ****  Section 001  Data  XSS$COMMWAIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/d STRC(504)   r     1 AURD                      56-0-0/w STRC        r     1 ERRCODE
    10-0-0/d STRC(144)   r     1 FPT_EXTEND                50-0-0/d STRC(216)   r     1 FPT_WAIT
    32-0-0/d STRC(504)   r     1 NCRD                      77-0-0/w SBIN        r     1 UETIME
     6-0-0/d STRC(72)    r     1 VLP_SUA                   57-0-0/w STRC(288)   r     1 XSS_AUSTA
   100-0-0/b BIT         r     1 XSS_EVENTED              101-0-0/h UBIN(18)    r     1 XSS_EVHDX
   102-0-0/h UBIN(18)    r     1 XSS_EVTLX

  ****  Section 002 RoData XSS$COMMWAIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/c CHAR(19)    r     1 AUTITLE                   14-0-0/d VECT        r     1 AUTITLE_
    16-0-0/c CHAR(19)    r     1 NCTITLE                   24-0-0/d VECT        r     1 NCTITLE_
     0-0-0/w STRC        r     1 XSS_F$CGEVNTOTHER          2-0-0/w STRC        r     1 XSS_F$CGWARNMEM
     3-0-0/w STRC        r     1 XSS_F$CGWARNOTHER          4-0-0/w STRC        r     1 XSS_F$DECODE
     5-0-0/w STRC        r     1 XSS_F$EVNTQUE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARM1                     4-0-0/w PTR         r     1 BUF$
     7-0-0/w PTR         r     1 CCB$                       5-0-0/w SBIN        r     1 COUNTER
     6-0-0/w PTR         r     1 CTX$                      30-0-0/w PTR         r     1 DST$
    12-0-0/w PTR         r     1 FPT$                       7-0-0/w PTR         r     1 LCTX$
    10-0-0/w SBIN        r     1 LEN                       40-0-0/w SBIN        r     1 LEN
    11-0-0/b BIT         r     1 NEEDCREDIT                *0-0-0/w SBIN        r     1 PARM1
    12-0-0/w PTR         r     1 PTR$                      37-0-0/w PTR         r     1 PTR$
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:203  
    13-0-0/w SBIN        r     1 SCID                      32-0-0/w SBIN        r     1 SCID
    14-0-0/w SBIN        r     1 SECONDS                   33-0-0/w PTR         r     1 SPDU$
    34-0-0/w SBIN        r     1 SPDUSZ                    31-0-0/w PTR         r     1 SRC$
    35-0-0/w PTR         r     1 UADR$                     20-0-0/d STRC(288)   r     1 VBLK

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 XSS_CCB$$
     0-0-0/w UBIN        r     1 XSS_DEBUG                  0-0-0/w SBIN        r     1 XSS_ITRACE
     0-0-0/w SBIN        r     1 XSS_MAX_LCID               0-0-0/d STRC(288)   r     1 XSS_VBLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$CGAURD
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w STRC(504)   r     1 CCB
     0-0-0/w PTR         r     1 CCB$(0:0)                  0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(72)    r     1 GLUE                       0-0-0/w STRC(1260)  r     1 LCTX
     0-0-0/c ACHR        r     1 MSG                        0-0-0/c CHAR(2040)  r     1 RDBUFFER
     0-0-0/w STRC(1260)  r     1 SCTX                       0-0-0/w STRC(1260)  r     1 TCONFPT
     0-0-0/w STRC(2718)  r     1 UADR                       0-0-0/w STRC(2718)  r     1 XSC$ADDRESS
     0-0-0/w STRC(504)   r     1 XSC$CCB                    0-0-0/d STRC(396)   r     1 XSS$CONNECT
     0-0-0/d STRC(504)   r     1 XSS$GENERIC


   Procedure XSS$COMMWAIT requires 966 words for executable code.
   Procedure XSS$COMMWAIT requires 40 words of local(AUTO) storage.
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:204  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:205  
          MINI XREF LISTING

ADDRSETUP IN PROCEDURE HANDLEIT
     16714**PROC    16658--CALL    16668--CALL    16674--CALL
AURD
      7528**DCL     11437<>CALL    16807<>CALL
AURD.BUF_
      7530**DCL     16802<<ASSIGN
AURD.STATION_
      7531**DCL      7532--REDEF
AURD.V
      7532**DCL      7528--DCLINIT
AURD.V.DCB#
      7532**DCL     11434<<ASSIGN  16804<<ASSIGN
AURD.V.DVBYTE.REREAD#
      7543**DCL      7543--REDEF
AURD.V.EVENT#
      7541**DCL     11433<<ASSIGN  16803<<ASSIGN
AURD.V.INDX#
      7541**DCL      7541--REDEF
AUTITLE
     11329**DCL     11330--DCLINIT
AUTITLE_
     11330**DCL     11370<>CALL
B$ALT.CODE
      7280**DCL      7280--REDEF    7281--REDEF    7281--REDEF
B$ALT.ERR
      7281**DCL     11473>>ASSIGN
B$ALT.ERR.ERR#
      7282**DCL      7282--REDEF
B$ALT.EVID
      7281**DCL      7281--REDEF    7281--REDEF
B$CGAURD.EVENT
      7302**DCL     11378>>CALL    11379>>DOCASE
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:206  
B$CGAURD.INFO
      7303**DCL     11378>>CALL    11388>>DOCASE
B$CGAURD.STATION
      7302**DCL      7302--REDEF
B$TCB.ALT$
      7306**DCL     11473>>ASSIGN
B$TCB$
     11307**DCL     11473>>ASSIGN
BAILOUT
     11475**LABEL   11412--GOTO    16813--GOTO
BUF$
     11311**DCL      7298--IMP-PTR 11322--IMP-PTR 11377<<ASSIGN  11378>>CALL    11378>>CALL    11379>>DOCASE
     11388>>DOCASE  11426<>CALL    11427>>ASSIGN  16788<>CALL    16796>>ASSIGN  16802>>ASSIGN
CCB.ERRDEF
      8982**DCL      9002--REDEF
CCB.LCID
      8974**DCL     16784>>ASSIGN
CCB.SFPTX
      9072**DCL     16783<>CALL
CCB$
     11315**DCL      8875--IMP-PTR 16781<<ASSIGN  16783>>CALL    16784>>ASSIGN
CCB$ IN PROCEDURE HANDLEIT
     16605**DCL     16635>>CALL    16645>>ASSIGN  16645>>ASSIGN  16646>>ASSIGN  16758>>CALL
CHECK4MSG
     11344**LABEL   11347--EXIT    11462--GOTO
COMMON
     16860**LABEL   16846--GOTO
COMMWAIT
     11335**LABEL   16880--GOTO    16889--GOTO
COUNTER
     11312**DCL     11341<<ASSIGN  11344>>DOWHILE 11438>>IF      11447>>IF      16678<<ASSIGN  16678>>ASSIGN
     16682<<ASSIGN  16682>>ASSIGN  16697<<ASSIGN  16697>>ASSIGN  16704<<ASSIGN  16704>>ASSIGN  16764<<ASSIGN
     16764>>ASSIGN
CTX$
     11313**DCL     10060--IMP-PTR 11351<>CALL    11352>>IF      11357>>ASSIGN  11358>>ASSIGN  11360>>ASSIGN
     11364>>ASSIGN  11365>>ASSIGN  11366>>DOCASE  11376>>IF      11377>>ASSIGN  11392>>ASSIGN  11405>>IF
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:207  
     11406>>ASSIGN  11418>>IF      11420>>DOCASE  11426>>CALL    11428>>ASSIGN  11429>>ASSIGN  11433>>ASSIGN
     11434>>ASSIGN  11436>>IF      16614>>ASSIGN  16618>>ASSIGN  16619>>ASSIGN  16623>>ASSIGN  16624>>ASSIGN
     16645>>ASSIGN  16648>>CALL    16651>>CALL    16661>>ASSIGN  16662>>ASSIGN  16663>>ASSIGN  16664>>ASSIGN
     16665>>ASSIGN  16755>>IF      16786<>CALL    16788>>CALL    16790>>DOCASE  16797>>ASSIGN  16798>>ASSIGN
     16803>>ASSIGN  16804>>ASSIGN  16806>>IF      16810>>IF      16811>>IF      16812>>ASSIGN  16819<<ASSIGN
     16820>>ASSIGN  16822>>ASSIGN  16848<>CALL    16849>>IF      16853>>ASSIGN  16856>>ASSIGN  16864>>IF
     16868>>ASSIGN
DST$ IN PROCEDURE HANDLEIT
     16606**DCL     16649<>CALL    16650>>ASSIGN  16652<>CALL    16653>>ASSIGN
ERRCODE
      7615**DCL     11406<<ASSIGN  11408<>CALL    11473<<ASSIGN  11477<>CALL    16812<<ASSIGN
ERRCODE.ERR#
      7645**DCL     11409>>IF
ERRCODE.SEV
      7645**DCL     11475>>IF      11476<<ASSIGN
F$DCB.ACTPOS
      7389**DCL      7389--REDEF
F$DCB.ARS#
      7363**DCL      7363--REDEF
F$DCB.ATTR
      7382**DCL      7383--REDEF
F$DCB.BORROW
      7397**DCL      7397--REDEF    7397--REDEF    7397--REDEF
F$DCB.DCBNAME.L
      7411**DCL      7411--IMP-SIZ
F$DCB.EOMCHAR#
      7367**DCL      7367--REDEF
F$DCB.FCN.CNT
      7402**DCL     11436>>IF      16806>>IF
F$DCB.FLDID
      7392**DCL      7392--REDEF
F$DCB.FORM$
      7386**DCL      7386--REDEF
F$DCB.FSECT
      7402**DCL      7402--REDEF
F$DCB.FSN#
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:208  
      7379**DCL      7379--REDEF    7379--REDEF    7380--REDEF
F$DCB.HEADER$
      7385**DCL      7385--REDEF
F$DCB.IXTNSIZE#
      7383**DCL      7383--REDEF
F$DCB.LASTSTA$
      7372**DCL      7372--REDEF
F$DCB.LVL
      7398**DCL      7398--REDEF
F$DCB.NAME#.C
      7373**DCL      7373--REDEF
F$DCB.NOEOF
      7395**DCL      7395--REDEF
F$DCB.NRECS#
      7384**DCL      7384--REDEF
F$DCB.NRECX
      7403**DCL      7403--REDEF
F$DCB.OHDR
      7395**DCL      7395--REDEF
F$DCB.ORG#
      7378**DCL      7378--REDEF
F$DCB.PRECNO
      7401**DCL      7401--REDEF
F$DCB.RCSZ
      7407**DCL      7407--REDEF
F$DCB.RES#
      7374**DCL      7374--REDEF
F$DCB.SETX
      7386**DCL      7386--REDEF
F$DCB.TAB$
      7386**DCL      7386--REDEF
F$DCB.TDA
      7400**DCL      7401--REDEF
F$DCB.WSN#
      7374**DCL      7374--REDEF
FIRSTREAD
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:209  
     16788**LABEL   16823--GOTO
FPT$
     11320**DCL     16783<>CALL
FPT_EXTEND
      7508**DCL     11394<>CALL
FPT_EXTEND.V
      7508**DCL      7508--DCLINIT
FPT_EXTEND.V.DCB#
      7508**DCL     11392<<ASSIGN
FPT_EXTEND.V.SIZ#
      7509**DCL     11393<<ASSIGN
FPT_WAIT
      7600**DCL     11455<>CALL
FPT_WAIT.V
      7601**DCL      7600--DCLINIT
FPT_WAIT.V.UNITS#
      7601**DCL     11339<<ASSIGN  11453>>IF      11454<>CALL    11461<<ASSIGN
GLUE.DATA IN PROCEDURE HANDLEIT
     15521**DCL     16687--ASSIGN  16720--ASSIGN
GLUE.MAGIC IN PROCEDURE HANDLEIT
     15520**DCL     16618>>ASSIGN  16633>>ASSIGN  16657>>ASSIGN
GLUE.MYSCID IN PROCEDURE HANDLEIT
     15517**DCL     16659>>ASSIGN  16669>>ASSIGN
GLUE.TRNFNC IN PROCEDURE HANDLEIT
     15518**DCL     16615>>CALL    16616>>IF      16625>>IF      16637>>DOCASE  16721>>IF
GLUE.YRSCID IN PROCEDURE HANDLEIT
     15519**DCL     16615>>CALL    16626>>ASSIGN
HANDLEIT
     11485**PROC    11416--CALL
JOINWAIT
     11339**LABEL   16862--GOTO
LCTX
     10494**DCL     11439<>CALL
LCTX.ABORTING
     10789**DCL     11438>>IF      16765<<ASSIGN
LCTX.DCB#
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:210  
     10823**DCL     16662<<ASSIGN
LCTX.DSTX
     10514**DCL     16652<>CALL    16725<>CALL    16731<>CALL
LCTX.ENTRY$
     10806**DCL     16664<<ASSIGN
LCTX.EVENT#
     10824**DCL     16663<<ASSIGN
LCTX.FLAGS.TEXP
     10763**DCL     16726<<ASSIGN
LCTX.FLOWSTOPPED
     10784**DCL     16677<<ASSIGN  16681<<ASSIGN
LCTX.HISTZ
     10808**DCL     10809--REDEF
LCTX.LATCH.LNKX
     10859**DCL     16853>>ASSIGN  16854<<ASSIGN
LCTX.LATCH.MSG$
     10860**DCL     16665<<ASSIGN
LCTX.MAGIC
     10805**DCL     16633<<ASSIGN  16657<<ASSIGN
LCTX.MODE
     10790**DCL     16660<<ASSIGN
LCTX.PEERSCID
     10794**DCL     16659<<ASSIGN  16669<<ASSIGN
LCTX.SCID
     10795**DCL     16635>>CALL    16645>>ASSIGN  16646>>ASSIGN  16646>>ASSIGN  16655>>ASSIGN  16656>>ASSIGN
     16667>>ASSIGN  16673>>ASSIGN  16758>>CALL    16759>>ASSIGN
LCTX.SRCX
     10513**DCL     16649<>CALL    16724<>CALL    16728<>CALL
LCTX.STATE
     10508**DCL     16755>>IF
LCTX.STATION
     10818**DCL     16661<<ASSIGN  16755>>IF
LCTX$
     11314**DCL     10494--IMP-PTR 11315--REDEF   11438>>IF      11439>>CALL    16624<<ASSIGN  16627<>CALL
     16632>>ASSIGN  16633>>ASSIGN  16635>>CALL    16640<>CALL    16645>>ASSIGN  16646>>ASSIGN  16646>>ASSIGN
     16649>>CALL    16652>>CALL    16654>>ASSIGN  16655>>ASSIGN  16656>>ASSIGN  16657>>ASSIGN  16659>>ASSIGN
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:211  
     16660>>ASSIGN  16661>>ASSIGN  16662>>ASSIGN  16663>>ASSIGN  16664>>ASSIGN  16665>>ASSIGN  16667>>ASSIGN
     16669>>ASSIGN  16673>>ASSIGN  16677>>ASSIGN  16681>>ASSIGN  16724>>CALL    16725>>CALL    16726>>ASSIGN
     16728>>CALL    16731>>CALL    16754<>CALL    16755>>IF      16755>>IF      16757>>ASSIGN  16758>>CALL
     16759>>ASSIGN  16765>>ASSIGN  16852<>CALL    16853>>ASSIGN  16854>>ASSIGN
LEN
     11316**DCL     11317--IMP-SIZ 11365<<ASSIGN  11368>>CALL    11370>>CALL
LEN IN PROCEDURE ADDRSETUP
     16717**DCL     16718--IMP-SIZ
LOOP
     16848**LABEL   16869--GOTO
M$EXTEND
      7210**DCL-ENT 11394--CALL
M$READ
      7207**DCL-ENT 11431--CALL    11437--CALL    16800--CALL    16807--CALL
M$WAIT
      7264**DCL-ENT 11455--CALL
MSG
     11317**DCL     11368--CALL    11370--CALL
NCRD
      7567**DCL     11431<>CALL    16800<>CALL
NCRD.BUF_
      7569**DCL     11427<<ASSIGN  16796<<ASSIGN
NCRD.STATION_
      7570**DCL      7571--REDEF   11423<<ASSIGN  11425<<ASSIGN  16793<<ASSIGN  16795<<ASSIGN
NCRD.V
      7571**DCL      7567--DCLINIT
NCRD.V.DCB#
      7571**DCL     11429<<ASSIGN  16798<<ASSIGN
NCRD.V.DVBYTE.REREAD#
      7582**DCL      7582--REDEF
NCRD.V.EVENT#
      7580**DCL     11428<<ASSIGN  16797<<ASSIGN
NCRD.V.INDX#
      7580**DCL      7580--REDEF
NCTITLE
     11331**DCL     11332--DCLINIT
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:212  
NCTITLE_
     11332**DCL     11368<>CALL
NEEDCREDIT
     11318**DCL     11373<<ASSIGN  11438>>IF      16671<<ASSIGN
NXTSCID IN PROCEDURE HANDLEIT
     16768**LABEL   16754--CALLALT
PARM1
     11321**DCL        26--PROC    11335>>ASSIGN  16779--ENTRY   16781--ASSIGN  16817--ENTRY   16819--ASSIGN
     16839--ENTRY   16841<>CALL    16844>>IF      16849>>IF      16852<>CALL    16855>>IF      16857>>ASSIGN
     16878--ENTRY   16887--ENTRY
PTR$
     11319**DCL     11317--IMP-PTR 11320--REDEF   11364<<ASSIGN  11368>>CALL    11370>>CALL
PTR$ IN PROCEDURE ADDRSETUP
     16716**DCL     16720<<ASSIGN  16722<<ASSIGN  16722>>ASSIGN  16726>>ASSIGN  16729>>ASSIGN  16730>>ASSIGN
     16732>>ASSIGN  16733>>ASSIGN
QUICKDISC IN PROCEDURE HANDLEIT
     16747**ENTRY   11383--CALL    11410--CALL
RDBUFFER
     11322**DCL     11427--ASSIGN  16796--ASSIGN  16802--ASSIGN
RDERR
     11466**LABEL   11431--CALLALT 11437--CALLALT 16800--CALLALT 16807--CALLALT
SCID
     11323**DCL     11350<<ASSIGN  11351<>CALL    11407<>CALL    11430<>CALL    11435<>CALL    16784<<ASSIGN
     16785<>CALL    16786<>CALL    16799<>CALL    16805<>CALL    16820<<ASSIGN  16821<>CALL    16843<<ASSIGN
     16844>>IF      16848<>CALL    16868<<ASSIGN
SCID IN PROCEDURE HANDLEIT
     16608**DCL     16626<<ASSIGN  16627<>CALL    16655<<ASSIGN  16753<<DOINDEX 16754<>CALL
SCTX.ABORTING
     10355**DCL     11418>>IF
SCTX.BUFX
     10388**DCL     11426<>CALL    16788<>CALL
SCTX.DCB#
     10389**DCL     11392>>ASSIGN  11429>>ASSIGN  11434>>ASSIGN  11436--IF      16662>>ASSIGN  16798>>ASSIGN
     16804>>ASSIGN  16806--IF
SCTX.DSTX
     10080**DCL     16651<>CALL
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:213  
SCTX.ENTRY$
     10372**DCL     16664>>ASSIGN
SCTX.EVENT#
     10390**DCL     11428>>ASSIGN  11433>>ASSIGN  16663>>ASSIGN  16797>>ASSIGN  16803>>ASSIGN
SCTX.HISTZ
     10374**DCL     10375--REDEF
SCTX.LATCH.ADMIN
     10423**DCL     11376>>IF
SCTX.LATCH.ERRCODE
     10442**DCL     11405>>IF      11406>>ASSIGN  16811>>IF      16812>>ASSIGN
SCTX.LATCH.LNKX
     10425**DCL     11352>>IF      11357>>ASSIGN  11358<<ASSIGN  16849>>IF      16853<<ASSIGN  16864>>IF
     16868>>ASSIGN
SCTX.LATCH.MSG$
     10426**DCL     11364>>ASSIGN  11377>>ASSIGN  16614>>ASSIGN  16665>>ASSIGN
SCTX.LATCH.MSGSZ
     10427**DCL     11365>>ASSIGN  16619>>ASSIGN
SCTX.LATCH.PRESENT
     10422**DCL     11360<<ASSIGN  16810>>IF
SCTX.LATCH.STATION
     10473**DCL     16661>>ASSIGN  16755>>IF
SCTX.MAGIC
     10371**DCL     16618<<ASSIGN
SCTX.MODE
     10356**DCL     11366>>DOCASE  11420>>DOCASE  16790>>DOCASE
SCTX.NEEDAREAD
     10353**DCL     16822<<ASSIGN
SCTX.SCID
     10361**DCL     16645>>ASSIGN  16820>>ASSIGN  16856>>ASSIGN
SCTX.SRCX
     10079**DCL     16648<>CALL
SECONDS
     11324**DCL     11335<<ASSIGN  11336<>CALL    11339>>ASSIGN  11466>>IF      16860<<ASSIGN
SPDU$ IN PROCEDURE HANDLEIT
     16610**DCL     15510--IMP-PTR 16609--IMP-PTR 16614<<ASSIGN  16615>>CALL    16615>>CALL    16616>>IF
     16618>>ASSIGN  16622>>ASSIGN  16625>>IF      16626>>ASSIGN  16633>>ASSIGN  16637>>DOCASE  16657>>ASSIGN
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:214  
     16659>>ASSIGN  16669>>ASSIGN  16687<<ASSIGN  16687>>ASSIGN  16688>>ASSIGN  16720>>ASSIGN  16721>>IF
SPDUSZ IN PROCEDURE HANDLEIT
     16611**DCL     16609--IMP-SIZ 16619<<ASSIGN  16621>>ASSIGN  16689<<ASSIGN  16689>>ASSIGN  16690>>ASSIGN
SRC$ IN PROCEDURE HANDLEIT
     16607**DCL     16648<>CALL    16650>>ASSIGN  16651<>CALL    16653>>ASSIGN
TCONFPT.DST_NSAP IN PROCEDURE HANDLEIT
     12189**DCL     16733>>ASSIGN
TCONFPT.DST_NSAP.ADDRESS_N IN PROCEDURE HANDLEIT
     12219**DCL     12220--REDEF
TCONFPT.DST_TSAP IN PROCEDURE HANDLEIT
     12087**DCL     16732>>ASSIGN
TCONFPT.SRC_NSAP IN PROCEDURE HANDLEIT
     12129**DCL     16730>>ASSIGN
TCONFPT.SRC_NSAP.ADDRESS_N IN PROCEDURE HANDLEIT
     12159**DCL     12160--REDEF
TCONFPT.SRC_TSAP IN PROCEDURE HANDLEIT
     12045**DCL     16729>>ASSIGN
TCONFPT.TPDUSIZE IN PROCEDURE HANDLEIT
     11922**DCL     11923--REDEF
TCONFPT.TR_FLAGS.EXPEDITED IN PROCEDURE HANDLEIT
     12004**DCL     16726>>ASSIGN
UADR.NSAP IN PROCEDURE HANDLEIT
     15982**DCL     16730<<ASSIGN  16733<<ASSIGN
UADR.NSAP.ADDRESS_N IN PROCEDURE HANDLEIT
     16012**DCL     16013--REDEF
UADR.TSAP IN PROCEDURE HANDLEIT
     15908**DCL     16729<<ASSIGN  16732<<ASSIGN
UADR$ IN PROCEDURE HANDLEIT
     16612**DCL     15751--IMP-PTR 16728<>CALL    16729>>ASSIGN  16730>>ASSIGN  16731<>CALL    16732>>ASSIGN
     16733>>ASSIGN
UETIME
     11325**DCL      7600--DCLINIT 11340<<ASSIGN  11457>>IF      11461>>ASSIGN
VBLK IN PROCEDURE HANDLEIT
     15540**DCL     16620<<ASSIGN  16692<>CALL    16700<>CALL    16749<<ASSIGN  16760<>CALL
VBLK.CTX$ IN PROCEDURE HANDLEIT
     15548**DCL     16623<<ASSIGN  16632<<ASSIGN  16654<<ASSIGN  16757<<ASSIGN
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:215  
VBLK.EVENT IN PROCEDURE HANDLEIT
     15558**DCL     16639<<ASSIGN  16670<<ASSIGN  16675<<ASSIGN  16686<<ASSIGN  16752<<ASSIGN
VBLK.FPT$ IN PROCEDURE HANDLEIT
     15559**DCL     15040--IMP-PTR 15186--IMP-PTR 16635<>CALL    16656>>ASSIGN  16667>>ASSIGN  16673>>ASSIGN
     16724>>CALL    16725>>CALL    16758<>CALL    16759>>ASSIGN
VBLK.PDU.PTR$ IN PROCEDURE HANDLEIT
     15591**DCL     16622<<ASSIGN  16688<<ASSIGN  16751<<ASSIGN
VBLK.PDU.SIZE IN PROCEDURE HANDLEIT
     15592**DCL     16621<<ASSIGN  16690<<ASSIGN  16750<<ASSIGN
VBLK.USERCALL IN PROCEDURE HANDLEIT
     15560**DCL     16697>>ASSIGN  16704>>ASSIGN
VLP_SUA
      7450**DCL      7424--DCLINIT
XSC$ADDRESS IN PROCEDURE HANDLEIT
     16034**DCL     16650<<ASSIGN  16650>>ASSIGN  16653<<ASSIGN  16653>>ASSIGN
XSC$ADDRESS.NSAP.ADDRESS_N IN PROCEDURE HANDLEIT
     16295**DCL     16296--REDEF
XSC$CCB IN PROCEDURE HANDLEIT
     16317**DCL     16645<<ASSIGN  16645>>ASSIGN
XSC$CCB.ERRDEF IN PROCEDURE HANDLEIT
     16424**DCL     16444--REDEF
XSC$CCB.LCID IN PROCEDURE HANDLEIT
     16416**DCL     16646<<ASSIGN
XSC$CCB.SFPTX IN PROCEDURE HANDLEIT
     16514**DCL     16635<>CALL    16758<>CALL
XSS$ALARMCHECK
     11299**DCL-ENT 11446--CALL    11468--CALL
XSS$BUFPTR
     11301**DCL-ENT 11426--CALL    16635--CALL    16648--CALL    16649--CALL    16651--CALL    16652--CALL
     16724--CALL    16725--CALL    16728--CALL    16731--CALL    16758--CALL    16783--CALL    16788--CALL
XSS$CONNECT.CALLED$ IN PROCEDURE HANDLEIT
     15412**DCL     15413--REDEF   16725<>CALL
XSS$CONNECT.CALLING$ IN PROCEDURE HANDLEIT
     15395**DCL     16724<>CALL
XSS$CONNECT.ERRDEF IN PROCEDURE HANDLEIT
     15280**DCL     15300--REDEF
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:216  
XSS$CTXPTR
     11300**DCL-ENT 11351--CALL    16627--CALL    16754--CALL    16786--CALL    16848--CALL    16852--CALL
XSS$DECODE IN PROCEDURE HANDLEIT
     16598**DCL-ENT 16692--CALL
XSS$DUMPBYTES
     11302**DCL-ENT 11368--CALL    11370--CALL
XSS$EVLOG
     11305**DCL-ENT 11336--CALL    11378--CALL    11407--CALL    11408--CALL    11430--CALL    11435--CALL
     11454--CALL    16615--CALL    16785--CALL    16799--CALL    16805--CALL    16821--CALL    16841--CALL
XSS$GENERIC.ERRDEF IN PROCEDURE HANDLEIT
     15094**DCL     15114--REDEF
XSS$GENERIC.SCID IN PROCEDURE HANDLEIT
     15055**DCL     16656<<ASSIGN  16667<<ASSIGN  16673<<ASSIGN  16759<<ASSIGN
XSS$GETCTX IN PROCEDURE HANDLEIT
     16599**DCL-ENT 16640--CALL
XSS$MACHINE IN PROCEDURE HANDLEIT
     16600**DCL-ENT 16700--CALL    16760--CALL
XSS$SCREECH
     11303**DCL-ENT 11390--CALL    11397--CALL    11400--CALL    11477--CALL    16695--CALL    16866--CALL
XSS$TCREDIT
     11304**DCL-ENT 11439--CALL
XSS_AUSTA
      7660**DCL     11425--ASSIGN  16793--ASSIGN
XSS_AUSTA.MSGIDXT
      7670**DCL      7673--REDEF
XSS_CCB$$ IN PROCEDURE HANDLEIT
     16602**DCL     16605--IMP-PTR 16635>>CALL    16645>>ASSIGN  16645>>ASSIGN  16646>>ASSIGN  16758>>CALL
XSS_DEBUG
     11308**DCL     11422>>IF      16792>>IF
XSS_EVENTED
     11326**DCL     11451<<ASSIGN  11459>>IF
XSS_EVHDX
     11327**DCL     11345>>IF      11350>>ASSIGN  11353<<ASSIGN  11357<<ASSIGN  16843>>ASSIGN  16854>>ASSIGN
     16857<<ASSIGN
XSS_EVTLX
     11328**DCL     11354<<ASSIGN  16855>>IF      16856<<ASSIGN
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:217  
XSS_F$CGEVNTOTHER
     11006**DCL     11400<>CALL
XSS_F$CGWARNMEM
     11108**DCL     11390<>CALL
XSS_F$CGWARNOTHER
     11159**DCL     11397<>CALL
XSS_F$DECODE
     11210**DCL     16695<>CALL
XSS_F$EVNTQUE
     11261**DCL     16866<>CALL
XSS_GENERIC.ERRDEF IN PROCEDURE HANDLEIT
     14948**DCL     14968--REDEF
XSS_ITRACE
     11309**DCL     11363>>IF
XSS_MAX_LCID IN PROCEDURE HANDLEIT
     16603**DCL     16753>>DOINDEX
XSS_NCSTA.MSGIDXT
      7697**DCL      7700--REDEF
XSS_VBLK IN PROCEDURE HANDLEIT
     15645**DCL     16620>>ASSIGN  16749>>ASSIGN
XTNERR
     11473**LABEL   11394--CALLALT
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:218  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:219  
              MINI UREF LISTING

BYTES IN PROCEDURE ADDRSETUP  16718**DCL
FPT_SCREECH    7424**DCL
M$ACCT    7223**DCL-ENT
M$ACTIVATE    7226**DCL-ENT
M$ALIB    7219**DCL-ENT
M$ASUSER    7221**DCL-ENT
M$ATTACH    7228**DCL-ENT
M$BADPP    7246**DCL-ENT
M$CGCTL    7227**DCL-ENT
M$CGINFO    7227**DCL-ENT
M$CHECK    7208**DCL-ENT
M$CHGUNIT    7266**DCL-ENT
M$CLOSE    7206**DCL-ENT
M$CLRSTK    7264**DCL-ENT
M$CMDVAR    7275**DCL-ENT
M$CONFIG    7236**DCL-ENT
M$CORRES    7211**DCL-ENT
M$CPEXIT    7220**DCL-ENT
M$CVM    7244**DCL-ENT
M$CVOL    7209**DCL-ENT
M$DCLFLD    7236**DCL-ENT
M$DEACTIVATE    7226**DCL-ENT
M$DELREC    7208**DCL-ENT
M$DEQ    7273**DCL-ENT
M$DETACH    7228**DCL-ENT
M$DEVICE    7210**DCL-ENT
M$DISPLAY    7273**DCL-ENT
M$DISPRES    7213**DCL-ENT
M$DLIB    7219**DCL-ENT
M$DRIBBLE    7236**DCL-ENT
M$DRTN    7264**DCL-ENT
M$DSUSER    7221**DCL-ENT
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:220  
M$ENQ    7272**DCL-ENT
M$EOM    7231**DCL-ENT
M$ERASE    7237**DCL-ENT
M$ERR    7218**DCL-ENT
M$ERRMSG    7269**DCL-ENT
M$EVENT    7261**DCL-ENT
M$EXHUME    7270**DCL-ENT
M$EXIT    7218**DCL-ENT
M$FDP    7242**DCL-ENT
M$FDS    7241**DCL-ENT
M$FEBOOT    7234**DCL-ENT
M$FECTL    7235**DCL-ENT
M$FEDUMP    7234**DCL-ENT
M$FID    7269**DCL-ENT
M$FINDPROC    7223**DCL-ENT
M$FSUSER    7221**DCL-ENT
M$FVP    7243**DCL-ENT
M$FWCG    7227**DCL-ENT
M$GBPL    7247**DCL-ENT
M$GDDL    7243**DCL-ENT
M$GDP    7242**DCL-ENT
M$GDS    7241**DCL-ENT
M$GETDCB    7212**DCL-ENT
M$GETMOUSE    7252**DCL-ENT
M$GETPM    7253**DCL-ENT
M$GJOB    7271**DCL-ENT
M$GLINEATTR    7231**DCL-ENT
M$GOODPP    7246**DCL-ENT
M$GPLATEN    7239**DCL-ENT
M$GPROMPT    7238**DCL-ENT
M$GTRMATTR    7232**DCL-ENT
M$GTRMCTL    7230**DCL-ENT
M$GTRMTAB    7233**DCL-ENT
M$GVP    7242**DCL-ENT
M$HELP    7269**DCL-ENT
M$INT    7261**DCL-ENT
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:221  
M$INTRTN    7222**DCL-ENT
M$IOQ    7257**DCL-ENT
M$JOBSTATS    7271**DCL-ENT
M$KEYIN    7211**DCL-ENT
M$LDEV    7206**DCL-ENT
M$LDTRC    7219**DCL-ENT
M$LIMIT    7212**DCL-ENT
M$LINES    7211**DCL-ENT
M$LINK    7218**DCL-ENT
M$MADMUCK    7214**DCL-ENT
M$MAKUSER    7245**DCL-ENT
M$MBS    7213**DCL-ENT
M$MDFFLD    7237**DCL-ENT
M$MERC    7262**DCL-ENT
M$MERCS    7263**DCL-ENT
M$MIRROR    7257**DCL-ENT
M$MONINFO    7274**DCL-ENT
M$MPL    7247**DCL-ENT
M$NODEINFO    7238**DCL-ENT
M$NXTUSR    7272**DCL-ENT
M$OCMSG    7270**DCL-ENT
M$OLAY    7218**DCL-ENT
M$OPEN    7206**DCL-ENT
M$PAS    7247**DCL-ENT
M$PATHCON    7270**DCL-ENT
M$PDS    7241**DCL-ENT
M$PFIL    7208**DCL-ENT
M$PLATEN    7232**DCL-ENT
M$PRECORD    7210**DCL-ENT
M$PROCNAME    7223**DCL-ENT
M$PROFILE    7234**DCL-ENT
M$PROMPT    7230**DCL-ENT
M$RACST    7214**DCL-ENT
M$RDSYSLOG    7255**DCL-ENT
M$RELDCB    7212**DCL-ENT
M$RELRES    7213**DCL-ENT
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:222  
M$RELSTARF    7215**DCL-ENT
M$REM    7215**DCL-ENT
M$RENV    7262**DCL-ENT
M$REQUIRE    7214**DCL-ENT
M$RETRY    7263**DCL-ENT
M$RETRYS    7263**DCL-ENT
M$REW    7209**DCL-ENT
M$RLSFLD    7237**DCL-ENT
M$RPRIV    7265**DCL-ENT
M$RSPP    7244**DCL-ENT
M$RSWITCH    7266**DCL-ENT
M$RUE    7272**DCL-ENT
M$SAD    7245**DCL-ENT
M$SAVE    7221**DCL-ENT
M$SCON    7222**DCL-ENT
M$SCREECH    7220**DCL-ENT
M$SENV    7262**DCL-ENT
M$SETFMA    7206**DCL-ENT
M$SETFP    7235**DCL-ENT
M$SINPUT    7233**DCL-ENT
M$SLCFLD    7238**DCL-ENT
M$SMOUSE    7252**DCL-ENT
M$SMPRT    7244**DCL-ENT
M$SPRIV    7265**DCL-ENT
M$SSC    7245**DCL-ENT
M$SSWITCH    7265**DCL-ENT
M$STATE    7274**DCL-ENT
M$STD    7246**DCL-ENT
M$STIMER    7260**DCL-ENT
M$STLPP    7243**DCL-ENT
M$STRAP    7260**DCL-ENT
M$STRMATTR    7232**DCL-ENT
M$STRMCTL    7230**DCL-ENT
M$STRMTAB    7233**DCL-ENT
M$SYMBIO    7271**DCL-ENT
M$SYSCON    7257**DCL-ENT
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:223  
M$SYSID    7275**DCL-ENT
M$TDCLOSE    7256**DCL-ENT
M$TDIO    7256**DCL-ENT
M$TDOPEN    7255**DCL-ENT
M$TDREQCPU    7256**DCL-ENT
M$TEMPWROC    7250**DCL-ENT
M$TIME    7273**DCL-ENT
M$TRAP    7260**DCL-ENT
M$TRMISC    7235**DCL-ENT
M$TRMPRG    7231**DCL-ENT
M$TRTN    7264**DCL-ENT
M$TRUNC    7207**DCL-ENT
M$TTIMER    7260**DCL-ENT
M$UC    7230**DCL
M$UMPL    7247**DCL-ENT
M$UNFID    7269**DCL-ENT
M$UNLATCH    7226**DCL-ENT
M$UNSHARE    7223**DCL-ENT
M$USRFIELD    7266**DCL-ENT
M$VIRTUAL    7241**DCL-ENT
M$WEOF    7209**DCL-ENT
M$WRITE    7207**DCL-ENT
M$WRSYSLOG    7255**DCL-ENT
M$XCON    7261**DCL-ENT
M$XCONRTN    7222**DCL-ENT
M$XEQTIME    7274**DCL-ENT
M$XFLUSH    7215**DCL-ENT
M$XMOUSE    7252**DCL-ENT
M$XXX    7218**DCL-ENT
M$YC    7220**DCL-ENT
SPDU IN PROCEDURE HANDLEIT  16609**DCL
XSC$COMMWAIT   16887**ENTRY
XSP$COMMWAIT   16878**ENTRY
XSS$COMMPEND   16839**ENTRY
XSS$COMMWAIT      26**PROC
XSS$COMMWAITX   16779**ENTRY
PL6.E3A0      #004=XSS$COMMWAIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:09 Page:224  
XSS$COMMWAITZ   16817**ENTRY
XSS_F$CGWARNDISK   11057**DCL

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:225  
      983        1        /*T***********************************************************/
      984        2        /*T*                                                         */
      985        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      986        4        /*T*                                                         */
      987        5        /*T***********************************************************/
      988        6        /*F*
      989        7                NAME:   XSS$COMMINIT
      990        8                PURPOSE:
      991        9                    This module sets up a connection path (DCB plus context) for a
      992       10                    client or server application.
      993       11                DESCRIPTION:
      994       12                    The sole parameter to this routine is an XSS$CCB which
      995       13                    specifies various things about the path.
      996       14        */
      997       15        XSS$COMMINIT: PROC( CCB) ALTRET;
      998       16        %INCLUDE XSS_INTERNAL_E;
      999      314        %INCLUDE B_SEGIDS_C;
     1000      853        %INCLUDE B$JIT_C;
     1001     1167            %B$JIT0;
     1002     1256            %U$JIT1X;
     1003     1259            %M$JIT2;
     1004     1269            %F$JIT3X;
     1005     1272            %S$JIT4X;
     1006     1275            %J$JIT5;
     1007     1363            %A$JIT6X;
     1008     1366        %INCLUDE K_ADDRESS_M;
     1009     1869        %INCLUDE CP_6;
     1010     7428            %B$ALT;
     1011     7436            %B$TCB;
     1012     7439            %F$DCB;
     1013     7496            %FPT_ATTACH( FPTN=AUATT);
     1014     7511            %FPT_ATTACH( FPTN=AUDET);
     1015     7526            %FPT_CGCTL( FPTN=CGCTL, CGCP=CGCP);
     1016     7549            %FPT_CLOSE( FPTN=AUCLS, DISP=RELEASE);
     1017     7591            %FPT_CLOSE( FPTN=NCCLS, DISP=SAVE);
     1018     7633            %FPT_EVENT( UENTRY=XSS$TRECV);
     1019     7647            %FPT_GETDCB( DCBNAME=DCBNAME, DCBNUM=DCBN);
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:226  
     1020     7662            %VLP_NAME( FPTN=DCBNAME, NAME='M$XSS');
     1021     7689            %FPT_OPEN( FPTN=AUOPN, ACCT=ACCT, SETSTA=AUSETSTA, CTG=YES,
     1022     7690                       ASN=COMGROUP, AU=YES, SHARE=ALL, FUN=CREATE, EXIST=NEWFILE,
     1023     7691                       IXTNSIZE=%XTNSIZE, XTNSIZE=%XTNSIZE);
     1024     7800            %FPT_OPEN( FPTN=NCOPN, RES='NC', ASN=DEVICE);
     1025     7909            %FPT_OPEN( FPTN=NCOPNDBG, ACCT=ACCT, SETSTA=NCSETSTA,
     1026     7910                       ASN=COMGROUP, AU=NO, SHARE=ALL, FUN=UPDATE);
     1027     8019            %VLP_ACCT( FPTN=ACCT, ACCT=':OSICG');
     1028     8032        %EQU DWARN = %((%XTNSIZE+4)/4);
     1029     8033            %VLP_CGCP( FPTN=CGCP, MAXMC=%BUFSIZE, DISKWARN=%DWARN,
     1030     8034                       MAXPG=20, MEMWARN=4, MEMWARNP=YES);
     1031     8077            %VLP_ERRCODE( FPTN=ERRCODE);
     1032     8122            %VLP_SETSTA( FPTN=AUSETSTA, MYSTATION='SERVER');
     1033     8150            %VLP_SETSTA( FPTN=NCSETSTA);
     1034     8178        %INCLUDE XSC_COMMON_M;
     1035     8831            %XSC$CCB;
     1036     9128            %XSC$CCB( NAME=CCB, STCLASS="");
     1037     9425            %XSC$ADDRESS;
     1038     9708            %XSC$ADDRESS( NAME=UADR, STCLASS="BASED( CCB.ADDR$)");
     1039     9991        %INCLUDE XSS_SESSION_E;
     1040    10556        %INCLUDE XSS_SESSION_M;
     1041    13199            %XSS$GENERIC( STCLASS="BASED( FPT$)");
     1042    13345            %XSS$GENERIC( FPTN=XSS_GENERIC, STCLASS=SYMREF);
     1043    13491        %INCLUDE XSS_INTERNAL_M;
     1044    14080            %XSS$SCTX( NAME=SCTX, STCLASS="BASED( CTX$)");
     1045    14514        %MACRO ERRORDEF( NAME=XSS_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
     1046    14515                         ERR#=0, SEV=0);
     1047    14516            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='S',
     1048    14517                          MON='0'B, ERR#=ERR#, SEV=SEV);
     1049    14518        %MEND;
     1050    14519        %INCLUDE XSC_PERR_C;
     1051    14596            %ERRORDEF( NAME=XSS_E$ADDR, ERR#=%E$ADDR);
     1052    14644            /*E*  ERROR:  XSS-E$ADDR-0
     1053    14645                MESSAGE:  CCB.ADDR$ contains an illegal value.
     1054    14646            */
     1055    14647            %ERRORDEF( NAME=XSS_E$BADCID, STCLASS=SYMREF);
     1056    14695            %ERRORDEF( NAME=XSS_E$DEFAULTDCB, ERR#=%E$DEFAULTDCB);
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:227  
     1057    14743            /*E*  ERROR:  XSS-E$DEFAULTDCB-0
     1058    14744                MESSAGE:  CCB.DCB# unspecified and default DCB in use.
     1059    14745            */
     1060    14746            %ERRORDEF( NAME=XSS_E$NODYNMEM, ERR#=%E$NODYNMEM);
     1061    14794            /*E*  ERROR:  XSS-E$NODYNMEM-0
     1062    14795                MESSAGE:  Dynamic memory space has been exhausted.
     1063    14796            */
     1064    14797            %ERRORDEF( NAME=XSS_E$NOGETDCB, ERR#=%E$NOGETDCB);
     1065    14845            /*E*  ERROR:  XSS-E$NOGETDCB-0
     1066    14846                MESSAGE:  CCB.DCB# unspecified and can't get a DCB.
     1067    14847            */
     1068    14848            %ERRORDEF( NAME=XSS_E$RDONLYCCB, ERR#=%E$RDONLYCCB);
     1069    14896            /*E*  ERROR:  XSS-E$RDONLYCCB-0
     1070    14897                MESSAGE:  CCB is read-only; must be writeable.
     1071    14898            */
     1072    14899
     1073    14900    1       DCL XSS$CLOCK ENTRY(2);
     1074    14901    1       DCL XSS$COMMWAITX ENTRY(1) ALTRET;
     1075    14902    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
     1076    14903    1       DCL XSS$CTXPTR ENTRY(2) ALTRET;
     1077    14904    1       DCL XSS$EVENT ENTRY(1) ALTRET;
     1078    14905    1       DCL XSS$GETCTX ENTRY(2) ALTRET;
     1079    14906    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
     1080    14907    1       DCL XSS$RELCTX ENTRY(1) ALTRET;
     1081    14908    1       DCL XSS$RELMEM ENTRY(1) ALTRET;
     1082    14909    1       DCL XSS$SCREECH ENTRY(1);
     1083    14910    1       DCL XSS$TRECV ENTRY ASYNC;
     1084    14911    1       DCL XSS$EVLOG ENTRY(2);
     1085    14912
     1086    14913    1       DCL B$JIT$ PTR SYMREF;
     1087    14914    1       DCL B$TCB$ PTR SYMREF;
     1088    14915    1       DCL XSS_CCB$$ PTR SYMREF;
     1089    14916
     1090    14917    1       DCL BUF$ PTR;
     1091    14918    1       DCL CCB$(0:0) PTR BASED( XSS_CCB$$) ALIGNED;
     1092    14919    1       DCL CHAR8 CHAR(8) BASED CALIGNED;
     1093    14920    1       DCL CTX$ PTR;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:228  
     1094    14921    1       DCL DCBN SBIN STATIC INIT( DCBNUM( NIL));
     1095    14922    1       DCL EVENTINITED BIT(1) STATIC INIT( %FALSE);
     1096    14923    1       DCL FPT$ PTR;
     1097    14924    1       DCL P PTR;
     1098    14925    1       DCL 1 PX REDEF P,
     1099    14926    1            2 OFFSET UBIN(18) UNAL,
     1100    14927    1            2 * BIT(6) UNAL,
     1101    14928    1            2 SEGID BIT(12) UNAL;
     1102    14929    1       DCL SCID SBIN;
     1103    14930    1       DCL TEMP SBIN;
     1104    14931    1       DCL TSAPBYTES CHAR( TSAPLEN) BASED( TSAPPTR$) CALIGNED;
     1105    14932    1       DCL TSAPLEN SBIN;
     1106    14933    1       DCL TSAPPTR$ PTR;
     1107    14934    1       DCL 1 UNIQUE,
     1108    14935    1            2 DCB# CHAR(2) UNAL,
     1109    14936    1            2 LNKCNT CHAR(1) UNAL,
     1110    14937    1            2 SYSID CHAR(5) UNAL;
     1111    14938    1       DCL XSS_DEBUG UBIN STATIC SYMDEF INIT( 0);
     1112    14939    1       DCL XSS_EVENT$ EPTR STATIC SYMDEF INIT( ENTADDR( NIL));
     1113    14940    1       DCL XSS_ITRACE SBIN STATIC SYMDEF INIT( 0);
     1114    14941    1       DCL XSS_OTRACE SBIN STATIC SYMDEF INIT( 0);
     1115    14942    1       DCL XSS_TRACE SBIN STATIC SYMDEF INIT( 0);
     1116    14943
     1117    14944    1       SCID = 0;
     1118    14945    1       CALL XSS$EVLOG( 'KI', 262143);
     1119    14946    1       P = ADDR( CCB);
     1120    14947    2       IF PX.SEGID = %ISSID THEN DO;
     1121    14948    2           TEMP = 64 + PX.OFFSET / 1024;  /* page number of CCB's page */
     1122    14949    3           IF TEMP >= B$JIT.PLL AND TEMP <= B$JIT.PUL THEN DO;
     1123    14950                    /* user's CCB was allocated in CONSTANT storage */
     1124    14951    3               IF CCB.ERROR = XSS_E$RDONLYCCB THEN
     1125    14952    3                   ALTRETURN;
     1126    14953    3               CALL XSS$SCREECH( XSS_E$RDONLYCCB);
     1127    14954    3               END;
     1128    14955    2           END;
     1129    14956    1       CCB.ERROR = '0'B;
     1130    14957    2       IF CCB.FLAGS.ACTIVE THEN DO;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:229  
     1131    14958    2           ERRCODE = XSS_E$BADCID;
     1132    14959    2           GOTO NOTIFY;
     1133    14960    2           END;
     1134    14961            /* user must supply an XSC$ADDRESS structure */
     1135    14962    2       IF CCB.ADDR$ = ADDR( NIL) THEN DO;
     1136    14963    2           ERRCODE = XSS_E$ADDR;
     1137    14964    2           GOTO NOTIFY;
     1138    14965    2           END;
     1139    14966            /* figure out which DCB to use, default or specified */
     1140    14967    2       IF CCB.DCB# = DCBNUM( NIL) THEN DO;
     1141    14968    3           IF DCBN = DCBNUM( NIL) THEN DO;
     1142    14969    3               CALL XSS$EVLOG( 'GT', 262143);
     1143    14970    3               CALL M$GETDCB( FPT_GETDCB)
     1144    14971    4               WHENALTRETURN DO;
     1145    14972    4                   ERRCODE = XSS_E$NOGETDCB;
     1146    14973    4                   GOTO NOTIFY;
     1147    14974    4                   END;
     1148    14975    3               END;
     1149    14976    3           IF DCBADDR( DCBN)->F$DCB.FCD# THEN DO;
     1150    14977                    /* default DCB is already open */
     1151    14978    3               ERRCODE = XSS_E$DEFAULTDCB;
     1152    14979    3               GOTO NOTIFY;
     1153    14980    3               END;
     1154    14981    2           CCB.DCB# = DCBN;
     1155    14982    2           END;
     1156    14983            /* allocate space for Session parameter block */
     1157    14984    1       CALL XSS$GETMEM( CCB.SFPTX, FPT$, SIZEC( XSS$GENERIC)) ALTRET( NODYNMEM);
     1158    14985            /* allocate space for Session connection context and read buffer */
     1159    14986    1       CALL XSS$GETCTX( CTX$, BUF$)
     1160    14987    2       WHENALTRETURN DO;
     1161    14988                /* some kind of problem.. throw away Session param blk too */
     1162    14989    2           CALL XSS$RELMEM( CCB.SFPTX);
     1163    14990    2           CCB.SFPTX = %NULL;
     1164    14991    2   NODYNMEM:
     1165    14992    2           ERRCODE = XSS_E$NODYNMEM;
     1166    14993    2           GOTO NOTIFY;
     1167    14994    2           END;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:230  
     1168    14995            /* set up some stuff for Session */
     1169    14996    1       CCB.LCID = SCTX.SCID;
     1170    14997    1       XSS$GENERIC = XSS_GENERIC;
     1171    14998    1       XSS$GENERIC.SCID = SCTX.SCID;
     1172    14999    1       SCID = SCTX.SCID;
     1173    15000    1       SCTX.DCB# = CCB.DCB#;
     1174    15001    1       SCTX.MODE = 1 + BITBIN( CCB.FLAGS.MODE);
     1175    15002    1       SCTX.ENTRY$ = CCB.SESS$;
     1176    15003    1       SCTX.BLOCKING = CCB.FLAGS.BLOCKING;
     1177    15004        %EJECT;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:231  
     1178    15005            /* open the DCB */
     1179    15006    1       TSAPLEN = 1 + UADR.TSAP.LEN;
     1180    15007    1       TSAPPTR$ = PINCRC( ADDR( UADR.TSAP.TSAP), -1);  /* make TEXTC */
     1181    15008    2       DO CASE( SCTX.MODE);
     1182    15009    2           CASE( %CLIENT);
     1183    15010    3               IF XSS_DEBUG = 0 THEN DO;
     1184    15011    3                   NCOPN.NAME_ = VECTOR( TSAPBYTES);
     1185    15012    3                   NCOPN.V.DCB# = SCTX.DCB#;
     1186    15013    3                   CALL XSS$EVLOG( 'OP', SCID);
     1187    15014    3                   CALL M$OPEN( NCOPN) ALTRET( OPNERR);
     1188    15015    3                   END;
     1189    15016    3               ELSE DO;
     1190    15017                        /* figure out 'unique' station name */
     1191    15018    3                   CALL BINCHAR( UNIQUE.DCB#, SCTX.DCB#);
     1192    15019    3                   CALL BINCHAR( UNIQUE.LNKCNT, B$JIT.LNKCNT);
     1193    15020    3                   CALL BINCHAR( UNIQUE.SYSID, B$JIT.SYSID);
     1194    15021    3                   NCSETSTA.MYSTATION# = ADDR( UNIQUE)->CHAR8;
     1195    15022    3                   NCOPNDBG.NAME_ = VECTOR( TSAPBYTES);
     1196    15023    3                   NCOPNDBG.V.DCB# = SCTX.DCB#;
     1197    15024    3                   CALL XSS$EVLOG( 'OP', SCID);
     1198    15025    3                   CALL M$OPEN( NCOPNDBG) ALTRET( OPNERR);
     1199    15026    3                   END;
     1200    15027    2           CASE( %SERVER);
     1201    15028    2               AUOPN.NAME_ = VECTOR( TSAPBYTES);
     1202    15029    2               AUOPN.V.DCB# = SCTX.DCB#;
     1203    15030    2               CALL XSS$EVLOG( 'OP', SCID);
     1204    15031    2               CALL M$OPEN( AUOPN) ALTRET( OPNERR);
     1205    15032    2               CGCTL.V.DCB# = SCTX.DCB#;
     1206    15033    2               CALL M$CGCTL( CGCTL) ALTRET( CTLERR);
     1207    15034    3               IF XSS_DEBUG = 0 THEN DO;
     1208    15035                        /* attach the monitor terminal station */
     1209    15036    3                   AUATT.TSAP_ = VECTOR( UADR.TSAP);
     1210    15037    3                   AUATT.V.DCB# = SCTX.DCB#;
     1211    15038    3                   CALL M$ATTACH( AUATT) ALTRET( ATTERR);
     1212    15039    3                   SCTX.STATION = 'MONITOR ';
     1213    15040    3                   END;
     1214    15041    2           END;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:232  
     1215    15042        %EJECT;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:233  
     1216    15043            /* set up event handler linkage */
     1217    15044    1       IF CCB.FLAGS.EVALID AND CCB.EVNT$ = ENTADDR( NIL) THEN
     1218    15045                /* Appl will handle events; tell it our handler's address */
     1219    15046    1           CCB.EVNT$ = ENTADDR( XSS$EVENT);
     1220    15047    1       ELSE
     1221    15048                /* We will handle events; remember appl's handler too */
     1222    15049    2           IF NOT EVENTINITED THEN DO;
     1223    15050    2               CALL M$EVENT( FPT_EVENT);
     1224    15051    2               IF CCB.FLAGS.EVALID THEN
     1225    15052    2                   XSS_EVENT$ = CCB.EVNT$;  /* this might be NIL, o.k. */
     1226    15053    2               ELSE
     1227    15054    2                   XSS_EVENT$ = ENTADDR( NIL);
     1228    15055    2               EVENTINITED = %TRUE;
     1229    15056    2               END;
     1230    15057            /* issue no-wait read to the DCB */
     1231    15058    2       IF SCTX.MODE = %SERVER THEN DO;
     1232    15059    2           CALL XSS$COMMWAITX( CCB)
     1233    15060    3           WHENALTRETURN DO;
     1234    15061    3               IF SCTX.LATCH.PRESENT THEN
     1235    15062    4                   IF SCTX.LATCH.ERRCODE THEN DO;
     1236    15063    4                       ERRCODE = SCTX.LATCH.ERRCODE;
     1237    15064    4                       GOTO NOTIFY;
     1238    15065    4                       END;
     1239    15066    3               END;
     1240    15067    2           END;
     1241    15068    1       ELSE
     1242    15069    1           SCTX.NEEDAREAD = %TRUE;
     1243    15070    1       CCB.FLAGS.ACTIVE = %TRUE;
     1244    15071            /* copy user's version of address to internal slot */
     1245    15072    1       CALL XSS$BUFPTR( SCTX.SRCX, BUF$);
     1246    15073    1       BUF$->XSC$ADDRESS = UADR;
     1247    15074            /* save user's CCB in internal slot too */
     1248    15075    1       CCB$( CCB.LCID)->XSC$CCB = CCB;
     1249    15076    1       RETURN;
     1250    15077        %EJECT;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:234  
     1251    15078    1   OPNERR: ;
     1252    15079    1   CLSERR: ;
     1253    15080    1   ATTERR: ;
     1254    15081    1   DETERR: ;
     1255    15082    1   CTLERR:
     1256    15083    1       ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1257    15084    1   NOTIFY:
     1258    15085    1       CALL XSS$EVLOG( 'ER', SCID);
     1259    15086    1       CALL XSS$EVLOG( , ERRCODE);
     1260    15087    1       CCB.ERROR = ERRCODE;
     1261    15088    1       ALTRETURN;
     1262    15089        %EJECT;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:235  
     1263    15090        /*F*
     1264    15091                NAME:   XSS$COMMTERM
     1265    15092                PURPOSE:
     1266    15093                    Tear down a connection path (DCB plus context) for a client or
     1267    15094                    server application.
     1268    15095        */
     1269    15096    1   XSS$COMMTERM: ENTRY( CCB) ALTRET;
     1270    15097
     1271    15098    1       CTX$ = ADDR( NIL);
     1272    15099            /* point at Session connection context */
     1273    15100    1       SCID = CCB.LCID;
     1274    15101    1       CALL XSS$EVLOG( 'KT', SCID);
     1275    15102    1       CALL XSS$CTXPTR( SCID, CTX$)
     1276    15103    2       WHENRETURN DO;
     1277    15104                /* mark context as terminated */
     1278    15105    2           SCTX.TERMINATING = %TRUE;
     1279    15106    2           END;
     1280    15107    2       WHENALTRETURN DO;
     1281    15108                /* either connection was aborted by state machine, or user error */
     1282    15109    3           IF NOT CCB.FLAGS.ACTIVE THEN DO;
     1283    15110    3               ERRCODE = XSS_E$BADCID;
     1284    15111    3               GOTO NOTIFY;
     1285    15112    3               END;
     1286    15113    2           END;
     1287    15114            /* close the DCB */
     1288    15115    2       IF CCB.FLAGS.MODE THEN DO;
     1289    15116                /* this is a server endpoint */
     1290    15117    3           IF XSS_DEBUG = 0 THEN DO;
     1291    15118                    /* detach the monitor terminal station */
     1292    15119    3               AUDET.V.DCB# = CCB.DCB#;
     1293    15120                    /* CALL M$DETACH( AUDET) ALTRET( DETERR);
     1294    15121                       The above monitor call was commented out because of a
     1295    15122                       timing problem.  CG Terminal disconnect runs off the
     1296    15123                       clock, and sometimes the CG AU DCB close below gets
     1297    15124                       done before the MONITOR terminal station has been
     1298    15125                       closed, getting the application stuck SQA forever.
     1299    15126                       It turns out the CG AU DCB close will do everything
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:236  
     1300    15127                       necessary anyway.  Consistently too.                 */
     1301    15128    3               END;
     1302    15129    2           AUCLS.V.DCB# = CCB.DCB#;
     1303    15130    2           CALL XSS$EVLOG( 'CL', SCID);
     1304    15131    2           CALL M$CLOSE( AUCLS) ALTRET( CLSERR);
     1305    15132    2           END;
     1306    15133    2       ELSE DO;
     1307    15134                /* this is a client endpoint */
     1308    15135    2           NCCLS.V.DCB# = CCB.DCB#;
     1309    15136    2           CALL XSS$EVLOG( 'CL', SCID);
     1310    15137    2           CALL M$CLOSE( NCCLS) ALTRET( CLSERR);
     1311    15138    2           END;
     1312    15139            /* release Session connection context */
     1313    15140    2       IF CTX$ ~= ADDR( NIL) THEN DO;
     1314    15141    2           IF SCTX.ALARM THEN
     1315    15142    2               CALL XSS$CLOCK( %CANCLK, CCB.LCID);
     1316    15143    2           CALL XSS$RELCTX( CTX$);
     1317    15144    2           END;
     1318    15145            /* release Session parameter block */
     1319    15146    2       IF CCB.SFPTX ~= %NULL THEN DO;
     1320    15147    2           CALL XSS$RELMEM( CCB.SFPTX);
     1321    15148    2           CCB.SFPTX = %NULL;
     1322    15149    2           END;
     1323    15150    1       CCB.FLAGS.ACTIVE = %FALSE;
     1324    15151    1       RETURN;
     1325    15152
     1326    15153    1       END XSS$COMMINIT;

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:237  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSS_SESSION_M.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
   XSS_INTERNAL_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSS$COMMINIT.

   Procedure XSS$COMMINIT requires 477 words for executable code.
   Procedure XSS$COMMINIT requires 18 words of local(AUTO) storage.

    No errors detected in file XSS$COMM.:XSA1TSI    .

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:238  

 Object Unit name= XSS$COMMINIT                               File name= XSS$COMM.:XSA1TOU
 UTS= OCT 01 '97 12:11:24.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   366    556  XSS$COMMINIT
    2  RoData even  UTS     13     15  XSS$COMMINIT
    3   Proc  even  none   477    735  XSS$COMMINIT
    4  RoData even  none    25     31  XSS$COMMINIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  XSS$COMMINIT
     3    557          yes     yes      Std        1  XSS$COMMTERM

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2      0  XSS_E$ADDR                         2      1  XSS_E$DEFAULTDCB
    2      2  XSS_E$NODYNMEM                     2      3  XSS_E$NOGETDCB
    2      4  XSS_E$RDONLYCCB                    1    551  XSS_DEBUG
    1    552  XSS_EVENT$                         1    553  XSS_ITRACE
    1    554  XSS_OTRACE                         1    555  XSS_TRACE
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:239  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 XSS$TRECV
         yes           Std       2 XSS$EVLOG
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       3 XSS$GETMEM
 yes     yes           Std       1 XSS$COMMWAITX
 yes     yes           Std       2 XSS$GETCTX
 yes     yes           Std       1 XSS$EVENT
 yes     yes           Std       2 XSS$BUFPTR
         yes           Std       2 XSS$CLOCK
 yes     yes           Std       1 XSS$RELMEM
 yes     yes           Std       1 XSS$RELCTX
 yes     yes           Std       2 XSS$CTXPTR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XSS_GENERIC                           XSS_E$BADCID
     B$JIT$                                B$TCB$                                XSS_CCB$$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:240  


      983        1        /*T***********************************************************/
      984        2        /*T*                                                         */
      985        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      986        4        /*T*                                                         */
      987        5        /*T***********************************************************/
      988        6        /*F*
      989        7                NAME:   XSS$COMMINIT
      990        8                PURPOSE:
      991        9                    This module sets up a connection path (DCB plus context) for a
      992       10                    client or server application.
      993       11                DESCRIPTION:
      994       12                    The sole parameter to this routine is an XSS$CCB which
      995       13                    specifies various things about the path.
      996       14        */
      997       15        XSS$COMMINIT: PROC( CCB) ALTRET;

     15  3 000000   000000 700200 xent  XSS$COMMINIT TSX0  ! X66_AUTO_1
         3 000001   000022 000001                    ZERO    18,1

      998       16        %INCLUDE XSS_INTERNAL_E;
      999      314        %INCLUDE B_SEGIDS_C;
     1000      853        %INCLUDE B$JIT_C;
     1001     1167            %B$JIT0;
     1002     1256            %U$JIT1X;
     1003     1259            %M$JIT2;
     1004     1269            %F$JIT3X;
     1005     1272            %S$JIT4X;
     1006     1275            %J$JIT5;
     1007     1363            %A$JIT6X;
     1008     1366        %INCLUDE K_ADDRESS_M;
     1009     1869        %INCLUDE CP_6;
     1010     7428            %B$ALT;
     1011     7436            %B$TCB;
     1012     7439            %F$DCB;
     1013     7496            %FPT_ATTACH( FPTN=AUATT);
     1014     7511            %FPT_ATTACH( FPTN=AUDET);
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:241  
     1015     7526            %FPT_CGCTL( FPTN=CGCTL, CGCP=CGCP);
     1016     7549            %FPT_CLOSE( FPTN=AUCLS, DISP=RELEASE);
     1017     7591            %FPT_CLOSE( FPTN=NCCLS, DISP=SAVE);
     1018     7633            %FPT_EVENT( UENTRY=XSS$TRECV);
     1019     7647            %FPT_GETDCB( DCBNAME=DCBNAME, DCBNUM=DCBN);
     1020     7662            %VLP_NAME( FPTN=DCBNAME, NAME='M$XSS');
     1021     7689            %FPT_OPEN( FPTN=AUOPN, ACCT=ACCT, SETSTA=AUSETSTA, CTG=YES,
     1022     7690                       ASN=COMGROUP, AU=YES, SHARE=ALL, FUN=CREATE, EXIST=NEWFILE,
     1023     7691                       IXTNSIZE=%XTNSIZE, XTNSIZE=%XTNSIZE);
     1024     7800            %FPT_OPEN( FPTN=NCOPN, RES='NC', ASN=DEVICE);
     1025     7909            %FPT_OPEN( FPTN=NCOPNDBG, ACCT=ACCT, SETSTA=NCSETSTA,
     1026     7910                       ASN=COMGROUP, AU=NO, SHARE=ALL, FUN=UPDATE);
     1027     8019            %VLP_ACCT( FPTN=ACCT, ACCT=':OSICG');
     1028     8032        %EQU DWARN = %((%XTNSIZE+4)/4);
     1029     8033            %VLP_CGCP( FPTN=CGCP, MAXMC=%BUFSIZE, DISKWARN=%DWARN,
     1030     8034                       MAXPG=20, MEMWARN=4, MEMWARNP=YES);
     1031     8077            %VLP_ERRCODE( FPTN=ERRCODE);
     1032     8122            %VLP_SETSTA( FPTN=AUSETSTA, MYSTATION='SERVER');
     1033     8150            %VLP_SETSTA( FPTN=NCSETSTA);
     1034     8178        %INCLUDE XSC_COMMON_M;
     1035     8831            %XSC$CCB;
     1036     9128            %XSC$CCB( NAME=CCB, STCLASS="");
     1037     9425            %XSC$ADDRESS;
     1038     9708            %XSC$ADDRESS( NAME=UADR, STCLASS="BASED( CCB.ADDR$)");
     1039     9991        %INCLUDE XSS_SESSION_E;
     1040    10556        %INCLUDE XSS_SESSION_M;
     1041    13199            %XSS$GENERIC( STCLASS="BASED( FPT$)");
     1042    13345            %XSS$GENERIC( FPTN=XSS_GENERIC, STCLASS=SYMREF);
     1043    13491        %INCLUDE XSS_INTERNAL_M;
     1044    14080            %XSS$SCTX( NAME=SCTX, STCLASS="BASED( CTX$)");
     1045    14514        %MACRO ERRORDEF( NAME=XSS_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
     1046    14515                         ERR#=0, SEV=0);
     1047    14516            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='S',
     1048    14517                          MON='0'B, ERR#=ERR#, SEV=SEV);
     1049    14518        %MEND;
     1050    14519        %INCLUDE XSC_PERR_C;
     1051    14596            %ERRORDEF( NAME=XSS_E$ADDR, ERR#=%E$ADDR);
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:242  
     1052    14644            /*E*  ERROR:  XSS-E$ADDR-0
     1053    14645                MESSAGE:  CCB.ADDR$ contains an illegal value.
     1054    14646            */
     1055    14647            %ERRORDEF( NAME=XSS_E$BADCID, STCLASS=SYMREF);
     1056    14695            %ERRORDEF( NAME=XSS_E$DEFAULTDCB, ERR#=%E$DEFAULTDCB);
     1057    14743            /*E*  ERROR:  XSS-E$DEFAULTDCB-0
     1058    14744                MESSAGE:  CCB.DCB# unspecified and default DCB in use.
     1059    14745            */
     1060    14746            %ERRORDEF( NAME=XSS_E$NODYNMEM, ERR#=%E$NODYNMEM);
     1061    14794            /*E*  ERROR:  XSS-E$NODYNMEM-0
     1062    14795                MESSAGE:  Dynamic memory space has been exhausted.
     1063    14796            */
     1064    14797            %ERRORDEF( NAME=XSS_E$NOGETDCB, ERR#=%E$NOGETDCB);
     1065    14845            /*E*  ERROR:  XSS-E$NOGETDCB-0
     1066    14846                MESSAGE:  CCB.DCB# unspecified and can't get a DCB.
     1067    14847            */
     1068    14848            %ERRORDEF( NAME=XSS_E$RDONLYCCB, ERR#=%E$RDONLYCCB);
     1069    14896            /*E*  ERROR:  XSS-E$RDONLYCCB-0
     1070    14897                MESSAGE:  CCB is read-only; must be writeable.
     1071    14898            */
     1072    14899
     1073    14900    1       DCL XSS$CLOCK ENTRY(2);
     1074    14901    1       DCL XSS$COMMWAITX ENTRY(1) ALTRET;
     1075    14902    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
     1076    14903    1       DCL XSS$CTXPTR ENTRY(2) ALTRET;
     1077    14904    1       DCL XSS$EVENT ENTRY(1) ALTRET;
     1078    14905    1       DCL XSS$GETCTX ENTRY(2) ALTRET;
     1079    14906    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
     1080    14907    1       DCL XSS$RELCTX ENTRY(1) ALTRET;
     1081    14908    1       DCL XSS$RELMEM ENTRY(1) ALTRET;
     1082    14909    1       DCL XSS$SCREECH ENTRY(1);
     1083    14910    1       DCL XSS$TRECV ENTRY ASYNC;
     1084    14911    1       DCL XSS$EVLOG ENTRY(2);
     1085    14912
     1086    14913    1       DCL B$JIT$ PTR SYMREF;
     1087    14914    1       DCL B$TCB$ PTR SYMREF;
     1088    14915    1       DCL XSS_CCB$$ PTR SYMREF;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:243  
     1089    14916
     1090    14917    1       DCL BUF$ PTR;
     1091    14918    1       DCL CCB$(0:0) PTR BASED( XSS_CCB$$) ALIGNED;
     1092    14919    1       DCL CHAR8 CHAR(8) BASED CALIGNED;
     1093    14920    1       DCL CTX$ PTR;
     1094    14921    1       DCL DCBN SBIN STATIC INIT( DCBNUM( NIL));
     1095    14922    1       DCL EVENTINITED BIT(1) STATIC INIT( %FALSE);
     1096    14923    1       DCL FPT$ PTR;
     1097    14924    1       DCL P PTR;
     1098    14925    1       DCL 1 PX REDEF P,
     1099    14926    1            2 OFFSET UBIN(18) UNAL,
     1100    14927    1            2 * BIT(6) UNAL,
     1101    14928    1            2 SEGID BIT(12) UNAL;
     1102    14929    1       DCL SCID SBIN;
     1103    14930    1       DCL TEMP SBIN;
     1104    14931    1       DCL TSAPBYTES CHAR( TSAPLEN) BASED( TSAPPTR$) CALIGNED;
     1105    14932    1       DCL TSAPLEN SBIN;
     1106    14933    1       DCL TSAPPTR$ PTR;
     1107    14934    1       DCL 1 UNIQUE,
     1108    14935    1            2 DCB# CHAR(2) UNAL,
     1109    14936    1            2 LNKCNT CHAR(1) UNAL,
     1110    14937    1            2 SYSID CHAR(5) UNAL;
     1111    14938    1       DCL XSS_DEBUG UBIN STATIC SYMDEF INIT( 0);
     1112    14939    1       DCL XSS_EVENT$ EPTR STATIC SYMDEF INIT( ENTADDR( NIL));
     1113    14940    1       DCL XSS_ITRACE SBIN STATIC SYMDEF INIT( 0);
     1114    14941    1       DCL XSS_OTRACE SBIN STATIC SYMDEF INIT( 0);
     1115    14942    1       DCL XSS_TRACE SBIN STATIC SYMDEF INIT( 0);
     1116    14943
     1117    14944    1       SCID = 0;

  14944  3 000002   200010 450100                    STZ     SCID,,AUTO

     1118    14945    1       CALL XSS$EVLOG( 'KI', 262143);

  14945  3 000003   000002 630400 4                  EPPR0   2
         3 000004   000000 631400 4                  EPPR1   0
         3 000005   000000 701000 xent               TSX1    XSS$EVLOG
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:244  
         3 000006   000000 011000                    NOP     0

     1119    14946    1       P = ADDR( CCB);

  14946  3 000007   200003 236100                    LDQ     @CCB,,AUTO
         3 000010   200007 756100                    STQ     P,,AUTO

     1120    14947    2       IF PX.SEGID = %ISSID THEN DO;

  14947  3 000011   200007 236100                    LDQ     P,,AUTO
         3 000012   007777 376007                    ANQ     4095,DL
         3 000013   006000 116007                    CMPQ    3072,DL
         3 000014   000044 601000 3                  TNZ     s:14956

     1121    14948    2           TEMP = 64 + PX.OFFSET / 1024;  /* page number of CCB's page */

  14948  3 000015   200007 236100                    LDQ     P,,AUTO
         3 000016   000022 772000                    QRL     18
         3 000017   000012 772000                    QRL     10
         3 000020   000100 036007                    ADLQ    64,DL
         3 000021   200011 756100                    STQ     TEMP,,AUTO

     1122    14949    3           IF TEMP >= B$JIT.PLL AND TEMP <= B$JIT.PUL THEN DO;

  14949  3 000022   000000 470400 xsym               LDP0    B$JIT$
         3 000023   000176 236100                    LDQ     126,,PR0
         3 000024   000022 772000                    QRL     18
         3 000025   200011 116100                    CMPQ    TEMP,,AUTO
         3 000026   000044 605400 3                  TPNZ    s:14956
         3 000027   000176 236100                    LDQ     126,,PR0
         3 000030   777777 376007                    ANQ     -1,DL
         3 000031   200011 116100                    CMPQ    TEMP,,AUTO
         3 000032   000044 604000 3                  TMI     s:14956

     1123    14950                    /* user's CCB was allocated in CONSTANT storage */
     1124    14951    3               IF CCB.ERROR = XSS_E$RDONLYCCB THEN

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:245  
  14951  3 000033   200003 471500                    LDP1    @CCB,,AUTO
         3 000034   100001 236100                    LDQ     1,,PR1
         3 000035   000004 116000 2                  CMPQ    XSS_E$RDONLYCCB
         3 000036   000040 601000 3                  TNZ     s:14953

     1125    14952    3                   ALTRETURN;

  14952  3 000037   000000 702200 xent               TSX2  ! X66_AALT

     1126    14953    3               CALL XSS$SCREECH( XSS_E$RDONLYCCB);

  14953  3 000040   000005 630400 4                  EPPR0   5
         3 000041   000004 631400 4                  EPPR1   4
         3 000042   000000 701000 xent               TSX1    XSS$SCREECH
         3 000043   000000 011000                    NOP     0

     1127    14954    3               END;

     1128    14955    2           END;

     1129    14956    1       CCB.ERROR = '0'B;

  14956  3 000044   200003 470500                    LDP0    @CCB,,AUTO
         3 000045   000001 450100                    STZ     1,,PR0

     1130    14957    2       IF CCB.FLAGS.ACTIVE THEN DO;

  14957  3 000046   000000 236100                    LDQ     0,,PR0
         3 000047   002000 316007                    CANQ    1024,DL
         3 000050   000054 600000 3                  TZE     s:14962

     1131    14958    2           ERRCODE = XSS_E$BADCID;

  14958  3 000051   000000 236000 xsym               LDQ     XSS_E$BADCID
         3 000052   000516 756000 1                  STQ     ERRCODE

     1132    14959    2           GOTO NOTIFY;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:246  

  14959  3 000053   000534 710000 3                  TRA     NOTIFY

     1133    14960    2           END;
     1134    14961            /* user must supply an XSC$ADDRESS structure */
     1135    14962    2       IF CCB.ADDR$ = ADDR( NIL) THEN DO;

  14962  3 000054   000006 236100                    LDQ     6,,PR0
         3 000055   000006 116000 4                  CMPQ    6
         3 000056   000062 601000 3                  TNZ     s:14967

     1136    14963    2           ERRCODE = XSS_E$ADDR;

  14963  3 000057   000000 236000 2                  LDQ     XSS_E$ADDR
         3 000060   000516 756000 1                  STQ     ERRCODE

     1137    14964    2           GOTO NOTIFY;

  14964  3 000061   000534 710000 3                  TRA     NOTIFY

     1138    14965    2           END;
     1139    14966            /* figure out which DCB to use, default or specified */
     1140    14967    2       IF CCB.DCB# = DCBNUM( NIL) THEN DO;

  14967  3 000062   000000 220100                    LDX0    0,,PR0
         3 000063   000116 601000 3                  TNZ     s:14984

     1141    14968    3           IF DCBN = DCBNUM( NIL) THEN DO;

  14968  3 000064   000547 235000 1                  LDA     DCBN
         3 000065   000102 601000 3                  TNZ     s:14976

     1142    14969    3               CALL XSS$EVLOG( 'GT', 262143);

  14969  3 000066   000007 630400 4                  EPPR0   7
         3 000067   000000 631400 4                  EPPR1   0
         3 000070   000000 701000 xent               TSX1    XSS$EVLOG
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:247  
         3 000071   000000 011000                    NOP     0

     1143    14970    3               CALL M$GETDCB( FPT_GETDCB)

  14970  3 000072   000200 630400 1                  EPPR0   FPT_GETDCB
         3 000073   460002 713400                    CLIMB   alt,+24578
         3 000074   401000 401760                    pmme    nvectors=3
         3 000075   000077 702000 3                  TSX2    s:14972
         3 000076   000102 710000 3                  TRA     s:14976

     1144    14971    4               WHENALTRETURN DO;

     1145    14972    4                   ERRCODE = XSS_E$NOGETDCB;

  14972  3 000077   000003 236000 2                  LDQ     XSS_E$NOGETDCB
         3 000100   000516 756000 1                  STQ     ERRCODE

     1146    14973    4                   GOTO NOTIFY;

  14973  3 000101   000534 710000 3                  TRA     NOTIFY

     1147    14974    4                   END;
     1148    14975    3               END;

     1149    14976    3           IF DCBADDR( DCBN)->F$DCB.FCD# THEN DO;

  14976  3 000102   000011 470400 4                  LDP0    9
         3 000103   000000 471500                    LDP1    0,,PR0
         3 000104   000547 720000 1                  LXL0    DCBN
         3 000105   100000 473510                    LDP3    0,X0,PR1
         3 000106   300031 236100                    LDQ     25,,PR3
         3 000107   020000 316007                    CANQ    8192,DL
         3 000110   000114 600000 3                  TZE     s:14981

     1150    14977                    /* default DCB is already open */
     1151    14978    3               ERRCODE = XSS_E$DEFAULTDCB;

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:248  
  14978  3 000111   000001 236000 2                  LDQ     XSS_E$DEFAULTDCB
         3 000112   000516 756000 1                  STQ     ERRCODE

     1152    14979    3               GOTO NOTIFY;

  14979  3 000113   000534 710000 3                  TRA     NOTIFY

     1153    14980    3               END;
     1154    14981    2           CCB.DCB# = DCBN;

  14981  3 000114   200003 474500                    LDP4    @CCB,,AUTO
         3 000115   400000 740100                    STX0    0,,PR4

     1155    14982    2           END;

     1156    14983            /* allocate space for Session parameter block */
     1157    14984    1       CALL XSS$GETMEM( CCB.SFPTX, FPT$, SIZEC( XSS$GENERIC)) ALTRET( NODYNMEM);

  14984  3 000116   000014 236000 4                  LDQ     12
         3 000117   200020 756100                    STQ     UNIQUE+4,,AUTO
         3 000120   200006 630500                    EPPR0   FPT$,,AUTO
         3 000121   200017 450500                    STP0    UNIQUE+3,,AUTO
         3 000122   200003 236100                    LDQ     @CCB,,AUTO
         3 000123   000015 036000 4                  ADLQ    13
         3 000124   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000125   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000126   000012 631400 4                  EPPR1   10
         3 000127   000000 701000 xent               TSX1    XSS$GETMEM
         3 000130   000154 702000 3                  TSX2    NODYNMEM

     1158    14985            /* allocate space for Session connection context and read buffer */
     1159    14986    1       CALL XSS$GETCTX( CTX$, BUF$)

  14986  3 000131   200004 630500                    EPPR0   BUF$,,AUTO
         3 000132   200017 450500                    STP0    UNIQUE+3,,AUTO
         3 000133   200005 631500                    EPPR1   CTX$,,AUTO
         3 000134   200016 451500                    STP1    UNIQUE+2,,AUTO
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:249  
         3 000135   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000136   000000 631400 4                  EPPR1   0
         3 000137   000000 701000 xent               TSX1    XSS$GETCTX
         3 000140   000142 702000 3                  TSX2    s:14989
         3 000141   000157 710000 3                  TRA     s:14996

     1160    14987    2       WHENALTRETURN DO;

     1161    14988                /* some kind of problem.. throw away Session param blk too */
     1162    14989    2           CALL XSS$RELMEM( CCB.SFPTX);

  14989  3 000142   200003 236100                    LDQ     @CCB,,AUTO
         3 000143   000015 036000 4                  ADLQ    13
         3 000144   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000145   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000146   000004 631400 4                  EPPR1   4
         3 000147   000000 701000 xent               TSX1    XSS$RELMEM
         3 000150   000000 011000                    NOP     0

     1163    14990    2           CCB.SFPTX = %NULL;

  14990  3 000151   777777 220003                    LDX0    -1,DU
         3 000152   200003 470500                    LDP0    @CCB,,AUTO
         3 000153   000005 440100                    SXL0    5,,PR0

     1164    14991    2   NODYNMEM:
     1165    14992    2           ERRCODE = XSS_E$NODYNMEM;

  14992  3 000154   000002 236000 2     NODYNMEM     LDQ     XSS_E$NODYNMEM
         3 000155   000516 756000 1                  STQ     ERRCODE

     1166    14993    2           GOTO NOTIFY;

  14993  3 000156   000534 710000 3                  TRA     NOTIFY

     1167    14994    2           END;
     1168    14995            /* set up some stuff for Session */
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:250  
     1169    14996    1       CCB.LCID = SCTX.SCID;

  14996  3 000157   200005 470500                    LDP0    CTX$,,AUTO
         3 000160   200003 471500                    LDP1    @CCB,,AUTO
         3 000161   000015 236100                    LDQ     13,,PR0
         3 000162   000022 772000                    QRL     18
         3 000163   100000 552104                    STBQ    0,'04'O,PR1

     1170    14997    1       XSS$GENERIC = XSS_GENERIC;

  14997  3 000164   200006 470500                    LDP0    FPT$,,AUTO
         3 000165   000100 100400                    MLR     fill='000'O
         3 000166   000000 000070 xsym               ADSC9   XSS_GENERIC              cn=0,n=56
         3 000167   000000 000070                    ADSC9   0,,PR0                   cn=0,n=56

     1171    14998    1       XSS$GENERIC.SCID = SCTX.SCID;

  14998  3 000170   200005 470500                    LDP0    CTX$,,AUTO
         3 000171   200006 473500                    LDP3    FPT$,,AUTO
         3 000172   000015 236100                    LDQ     13,,PR0
         3 000173   300000 552120                    STBQ    0,'20'O,PR3

     1172    14999    1       SCID = SCTX.SCID;

  14999  3 000174   200005 470500                    LDP0    CTX$,,AUTO
         3 000175   000015 236100                    LDQ     13,,PR0
         3 000176   000022 772000                    QRL     18
         3 000177   000777 376007                    ANQ     511,DL
         3 000200   200010 756100                    STQ     SCID,,AUTO

     1173    15000    1       SCTX.DCB# = CCB.DCB#;

  15000  3 000201   100000 220100                    LDX0    0,,PR1
         3 000202   000033 440100                    SXL0    27,,PR0

     1174    15001    1       SCTX.MODE = 1 + BITBIN( CCB.FLAGS.MODE);

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:251  
  15001  3 000203   100000 236100                    LDQ     0,,PR1
         3 000204   000011 772000                    QRL     9
         3 000205   000001 376007                    ANQ     1,DL
         3 000206   000001 036007                    ADLQ    1,DL
         3 000207   000013 552104                    STBQ    11,'04'O,PR0

     1175    15002    1       SCTX.ENTRY$ = CCB.SESS$;

  15002  3 000210   100010 236100                    LDQ     8,,PR1
         3 000211   000016 756100                    STQ     14,,PR0

     1176    15003    1       SCTX.BLOCKING = CCB.FLAGS.BLOCKING;

  15003  3 000212   100000 236100                    LDQ     0,,PR1
         3 000213   000002 772000                    QRL     2
         3 000214   000013 676100                    ERQ     11,,PR0
         3 000215   020000 376007                    ANQ     8192,DL
         3 000216   000013 656100                    ERSQ    11,,PR0

     1177    15004        %EJECT;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:252  
     1178    15005            /* open the DCB */
     1179    15006    1       TSAPLEN = 1 + UADR.TSAP.LEN;

  15006  3 000217   100006 473500                    LDP3    6,,PR1
         3 000220   300075 236100                    LDQ     61,,PR3
         3 000221   000022 772000                    QRL     18
         3 000222   000001 036007                    ADLQ    1,DL
         3 000223   200012 756100                    STQ     TSAPLEN,,AUTO

     1180    15007    1       TSAPPTR$ = PINCRC( ADDR( UADR.TSAP.TSAP), -1);  /* make TEXTC */

  15007  3 000224   200016 453500                    STP3    UNIQUE+2,,AUTO
         3 000225   200016 236100                    LDQ     UNIQUE+2,,AUTO
         3 000226   000016 036000 4                  ADLQ    14
         3 000227   200013 756100                    STQ     TSAPPTR$,,AUTO

     1181    15008    2       DO CASE( SCTX.MODE);

  15008  3 000230   000013 721100                    LXL1    11,,PR0
         3 000231   000777 361003                    ANX1    511,DU
         3 000232   000003 101003                    CMPX1   3,DU
         3 000233   000235 602011 3                  TNC     s:15008+5,X1
         3 000234   000417 710000 3                  TRA     s:15044
         3 000235   000417 710000 3                  TRA     s:15044
         3 000236   000240 710000 3                  TRA     s:15010
         3 000237   000342 710000 3                  TRA     s:15028

     1182    15009    2           CASE( %CLIENT);

     1183    15010    3               IF XSS_DEBUG = 0 THEN DO;

  15010  3 000240   000551 235000 1                  LDA     XSS_DEBUG
         3 000241   000265 601000 3                  TNZ     s:15018

     1184    15011    3                   NCOPN.NAME_ = VECTOR( TSAPBYTES);

  15011  3 000242   200012 235100                    LDA     TSAPLEN,,AUTO
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:253  
         3 000243   000020 735000                    ALS     16
         3 000244   000140 135007                    SBLA    96,DL
         3 000245   000312 757000 1                  STAQ    NCOPN+6

     1185    15012    3                   NCOPN.V.DCB# = SCTX.DCB#;

  15012  3 000246   000033 720100                    LXL0    27,,PR0
         3 000247   000350 740000 1                  STX0    NCOPN+36

     1186    15013    3                   CALL XSS$EVLOG( 'OP', SCID);

  15013  3 000250   200010 633500                    EPPR3   SCID,,AUTO
         3 000251   200017 453500                    STP3    UNIQUE+3,,AUTO
         3 000252   000017 236000 4                  LDQ     15
         3 000253   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000254   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000255   000000 631400 4                  EPPR1   0
         3 000256   000000 701000 xent               TSX1    XSS$EVLOG
         3 000257   000000 011000                    NOP     0

     1187    15014    3                   CALL M$OPEN( NCOPN) ALTRET( OPNERR);

  15014  3 000260   000304 630400 1                  EPPR0   NCOPN
         3 000261   450000 713400                    CLIMB   alt,open
         3 000262   410400 401760                    pmme    nvectors=18
         3 000263   000530 702000 3                  TSX2    OPNERR

     1188    15015    3                   END;

  15015  3 000264   000417 710000 3                  TRA     s:15044

     1189    15016    3               ELSE DO;

     1190    15017                        /* figure out 'unique' station name */
     1191    15018    3                   CALL BINCHAR( UNIQUE.DCB#, SCTX.DCB#);

  15018  3 000265   000033 236100                    LDQ     27,,PR0
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:254  
         3 000266   777777 376007                    ANQ     -1,DL
         3 000267   000000 235003                    LDA     0,DU
         3 000270   200016 757100                    STAQ    UNIQUE+2,,AUTO
         3 000271   000100 301500                    BTD
         3 000272   200016 000010                    NDSC9   UNIQUE+2,,AUTO           cn=0,s=lsgnf,sf=0,n=8
         3 000273   200014 030002                    NDSC9   UNIQUE,,AUTO             cn=0,s=nosgn,sf=0,n=2

     1192    15019    3                   CALL BINCHAR( UNIQUE.LNKCNT, B$JIT.LNKCNT);

  15019  3 000274   000000 473400 xsym               LDP3    B$JIT$
         3 000275   300314 236100                    LDQ     204,,PR3
         3 000276   000777 376007                    ANQ     511,DL
         3 000277   000000 235003                    LDA     0,DU
         3 000300   200016 757100                    STAQ    UNIQUE+2,,AUTO
         3 000301   000100 301500                    BTD
         3 000302   200016 000010                    NDSC9   UNIQUE+2,,AUTO           cn=0,s=lsgnf,sf=0,n=8
         3 000303   200014 430001                    NDSC9   UNIQUE,,AUTO             cn=2,s=nosgn,sf=0,n=1

     1193    15020    3                   CALL BINCHAR( UNIQUE.SYSID, B$JIT.SYSID);

  15020  3 000304   300000 236100                    LDQ     0,,PR3
         3 000305   777777 376007                    ANQ     -1,DL
         3 000306   000000 235003                    LDA     0,DU
         3 000307   200016 757100                    STAQ    UNIQUE+2,,AUTO
         3 000310   000100 301500                    BTD
         3 000311   200016 000010                    NDSC9   UNIQUE+2,,AUTO           cn=0,s=lsgnf,sf=0,n=8
         3 000312   200014 630005                    NDSC9   UNIQUE,,AUTO             cn=3,s=nosgn,sf=0,n=5

     1194    15021    3                   NCSETSTA.MYSTATION# = ADDR( UNIQUE)->CHAR8;

  15021  3 000313   200014 237100                    LDAQ    UNIQUE,,AUTO
         3 000314   000533 755000 1                  STA     NCSETSTA
         3 000315   000534 756000 1                  STQ     NCSETSTA+1

     1195    15022    3                   NCOPNDBG.NAME_ = VECTOR( TSAPBYTES);

  15022  3 000316   200012 235100                    LDA     TSAPLEN,,AUTO
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:255  
         3 000317   000020 735000                    ALS     16
         3 000320   000140 135007                    SBLA    96,DL
         3 000321   200013 236100                    LDQ     TSAPPTR$,,AUTO
         3 000322   000404 757000 1                  STAQ    NCOPNDBG+6

     1196    15023    3                   NCOPNDBG.V.DCB# = SCTX.DCB#;

  15023  3 000323   000033 720100                    LXL0    27,,PR0
         3 000324   000442 740000 1                  STX0    NCOPNDBG+36

     1197    15024    3                   CALL XSS$EVLOG( 'OP', SCID);

  15024  3 000325   200010 634500                    EPPR4   SCID,,AUTO
         3 000326   200017 454500                    STP4    UNIQUE+3,,AUTO
         3 000327   000017 236000 4                  LDQ     15
         3 000330   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000331   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000332   000000 631400 4                  EPPR1   0
         3 000333   000000 701000 xent               TSX1    XSS$EVLOG
         3 000334   000000 011000                    NOP     0

     1198    15025    3                   CALL M$OPEN( NCOPNDBG) ALTRET( OPNERR);

  15025  3 000335   000376 630400 1                  EPPR0   NCOPNDBG
         3 000336   450000 713400                    CLIMB   alt,open
         3 000337   410400 401760                    pmme    nvectors=18
         3 000340   000530 702000 3                  TSX2    OPNERR

     1199    15026    3                   END;

  15026  3 000341   000417 710000 3                  TRA     s:15044

     1200    15027    2           CASE( %SERVER);

     1201    15028    2               AUOPN.NAME_ = VECTOR( TSAPBYTES);

  15028  3 000342   200012 235100                    LDA     TSAPLEN,,AUTO
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:256  
         3 000343   000020 735000                    ALS     16
         3 000344   000140 135007                    SBLA    96,DL
         3 000345   000220 757000 1                  STAQ    AUOPN+6

     1202    15029    2               AUOPN.V.DCB# = SCTX.DCB#;

  15029  3 000346   000033 720100                    LXL0    27,,PR0
         3 000347   000256 740000 1                  STX0    AUOPN+36

     1203    15030    2               CALL XSS$EVLOG( 'OP', SCID);

  15030  3 000350   200010 633500                    EPPR3   SCID,,AUTO
         3 000351   200017 453500                    STP3    UNIQUE+3,,AUTO
         3 000352   000017 236000 4                  LDQ     15
         3 000353   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000354   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000355   000000 631400 4                  EPPR1   0
         3 000356   000000 701000 xent               TSX1    XSS$EVLOG
         3 000357   000000 011000                    NOP     0

     1204    15031    2               CALL M$OPEN( AUOPN) ALTRET( OPNERR);

  15031  3 000360   000212 630400 1                  EPPR0   AUOPN
         3 000361   450000 713400                    CLIMB   alt,open
         3 000362   410400 401760                    pmme    nvectors=18
         3 000363   000530 702000 3                  TSX2    OPNERR

     1205    15032    2               CGCTL.V.DCB# = SCTX.DCB#;

  15032  3 000364   200005 470500                    LDP0    CTX$,,AUTO
         3 000365   000033 720100                    LXL0    27,,PR0
         3 000366   000064 740000 1                  STX0    CGCTL+40

     1206    15033    2               CALL M$CGCTL( CGCTL) ALTRET( CTLERR);

  15033  3 000367   000014 630400 1                  EPPR0   CGCTL
         3 000370   500003 713400                    CLIMB   alt,+32771
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:257  
         3 000371   411400 401760                    pmme    nvectors=20
         3 000372   000530 702000 3                  TSX2    OPNERR

     1207    15034    3               IF XSS_DEBUG = 0 THEN DO;

  15034  3 000373   000551 235000 1                  LDA     XSS_DEBUG
         3 000374   000417 601000 3                  TNZ     s:15044

     1208    15035                        /* attach the monitor terminal station */
     1209    15036    3                   AUATT.TSAP_ = VECTOR( UADR.TSAP);

  15036  3 000375   200003 470500                    LDP0    @CCB,,AUTO
         3 000376   000006 471500                    LDP1    6,,PR0
         3 000377   000020 235000 4                  LDA     16
         3 000400   200016 451500                    STP1    UNIQUE+2,,AUTO
         3 000401   200016 236100                    LDQ     UNIQUE+2,,AUTO
         3 000402   000075 036003                    ADLQ    61,DU
         3 000403   000002 757000 1                  STAQ    AUATT+2

     1210    15037    3                   AUATT.V.DCB# = SCTX.DCB#;

  15037  3 000404   200005 471500                    LDP1    CTX$,,AUTO
         3 000405   100033 720100                    LXL0    27,,PR1
         3 000406   000004 740000 1                  STX0    AUATT+4

     1211    15038    3                   CALL M$ATTACH( AUATT) ALTRET( ATTERR);

  15038  3 000407   000000 630400 1                  EPPR0   AUATT
         3 000410   500006 713400                    CLIMB   alt,+32774
         3 000411   400400 401760                    pmme    nvectors=2
         3 000412   000530 702000 3                  TSX2    OPNERR

     1212    15039    3                   SCTX.STATION = 'MONITOR ';

  15039  3 000413   200005 470500                    LDP0    CTX$,,AUTO
         3 000414   000010 237000 2                  LDAQ    XSS_E$RDONLYCCB+4
         3 000415   000027 755100                    STA     23,,PR0
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:258  
         3 000416   000030 756100                    STQ     24,,PR0

     1213    15040    3                   END;

     1214    15041    2           END;

     1215    15042        %EJECT;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:259  
     1216    15043            /* set up event handler linkage */
     1217    15044    1       IF CCB.FLAGS.EVALID AND CCB.EVNT$ = ENTADDR( NIL) THEN

  15044  3 000417   200003 470500                    LDP0    @CCB,,AUTO
         3 000420   000000 236100                    LDQ     0,,PR0
         3 000421   004000 316007                    CANQ    2048,DL
         3 000422   000431 600000 3                  TZE     s:15049
         3 000423   000007 236100                    LDQ     7,,PR0
         3 000424   000021 116000 4                  CMPQ    17
         3 000425   000431 601000 3                  TNZ     s:15049

     1218    15045                /* Appl will handle events; tell it our handler's address */
     1219    15046    1           CCB.EVNT$ = ENTADDR( XSS$EVENT);

  15046  3 000426   000000 636000 xent               EAQ     XSS$EVENT
         3 000427   000007 756100                    STQ     7,,PR0
         3 000430   000451 710000 3                  TRA     s:15058

     1220    15047    1       ELSE
     1221    15048                /* We will handle events; remember appl's handler too */
     1222    15049    2           IF NOT EVENTINITED THEN DO;

  15049  3 000431   000550 234000 1                  SZN     EVENTINITED
         3 000432   000451 604000 3                  TMI     s:15058

     1223    15050    2               CALL M$EVENT( FPT_EVENT);

  15050  3 000433   000174 630400 1                  EPPR0   FPT_EVENT
         3 000434   010001 713400                    CLIMB   4097
         3 000435   400000 401760                    pmme    nvectors=1

     1224    15051    2               IF CCB.FLAGS.EVALID THEN

  15051  3 000436   200003 470500                    LDP0    @CCB,,AUTO
         3 000437   000000 236100                    LDQ     0,,PR0
         3 000440   004000 316007                    CANQ    2048,DL
         3 000441   000445 600000 3                  TZE     s:15054
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:260  

     1225    15052    2                   XSS_EVENT$ = CCB.EVNT$;  /* this might be NIL, o.k. */

  15052  3 000442   000007 236100                    LDQ     7,,PR0
         3 000443   000552 756000 1                  STQ     XSS_EVENT$
         3 000444   000447 710000 3                  TRA     s:15055

     1226    15053    2               ELSE
     1227    15054    2                   XSS_EVENT$ = ENTADDR( NIL);

  15054  3 000445   000021 236000 4                  LDQ     17
         3 000446   000552 756000 1                  STQ     XSS_EVENT$

     1228    15055    2               EVENTINITED = %TRUE;

  15055  3 000447   400000 236003                    LDQ     -131072,DU
         3 000450   000550 756000 1                  STQ     EVENTINITED

     1229    15056    2               END;

     1230    15057            /* issue no-wait read to the DCB */
     1231    15058    2       IF SCTX.MODE = %SERVER THEN DO;

  15058  3 000451   200005 471500                    LDP1    CTX$,,AUTO
         3 000452   100013 236100                    LDQ     11,,PR1
         3 000453   000777 376007                    ANQ     511,DL
         3 000454   000002 116007                    CMPQ    2,DL
         3 000455   000474 601000 3                  TNZ     s:15069

     1232    15059    2           CALL XSS$COMMWAITX( CCB)

  15059  3 000456   200003 630500                    EPPR0   @CCB,,AUTO
         3 000457   000004 631400 4                  EPPR1   4
         3 000460   000000 701000 xent               TSX1    XSS$COMMWAITX
         3 000461   000463 702000 3                  TSX2    s:15061
         3 000462   000473 710000 3                  TRA     s:15067

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:261  
     1233    15060    3           WHENALTRETURN DO;

     1234    15061    3               IF SCTX.LATCH.PRESENT THEN

  15061  3 000463   200005 470500                    LDP0    CTX$,,AUTO
         3 000464   000035 234100                    SZN     29,,PR0
         3 000465   000473 605000 3                  TPL     s:15067

     1235    15062    4                   IF SCTX.LATCH.ERRCODE THEN DO;

  15062  3 000466   000040 235100                    LDA     32,,PR0
         3 000467   000473 600000 3                  TZE     s:15067

     1236    15063    4                       ERRCODE = SCTX.LATCH.ERRCODE;

  15063  3 000470   000040 236100                    LDQ     32,,PR0
         3 000471   000516 756000 1                  STQ     ERRCODE

     1237    15064    4                       GOTO NOTIFY;

  15064  3 000472   000534 710000 3                  TRA     NOTIFY

     1238    15065    4                       END;
     1239    15066    3               END;
     1240    15067    2           END;

  15067  3 000473   000476 710000 3                  TRA     s:15070

     1241    15068    1       ELSE
     1242    15069    1           SCTX.NEEDAREAD = %TRUE;

  15069  3 000474   004000 236007                    LDQ     2048,DL
         3 000475   100013 256100                    ORSQ    11,,PR1

     1243    15070    1       CCB.FLAGS.ACTIVE = %TRUE;

  15070  3 000476   200003 470500                    LDP0    @CCB,,AUTO
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:262  
         3 000477   002000 236007                    LDQ     1024,DL
         3 000500   000000 256100                    ORSQ    0,,PR0

     1244    15071            /* copy user's version of address to internal slot */
     1245    15072    1       CALL XSS$BUFPTR( SCTX.SRCX, BUF$);

  15072  3 000501   200004 631500                    EPPR1   BUF$,,AUTO
         3 000502   200017 451500                    STP1    UNIQUE+3,,AUTO
         3 000503   200005 236100                    LDQ     CTX$,,AUTO
         3 000504   000003 036003                    ADLQ    3,DU
         3 000505   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000506   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000507   000000 631400 4                  EPPR1   0
         3 000510   000000 701000 xent               TSX1    XSS$BUFPTR
         3 000511   000000 011000                    NOP     0

     1246    15073    1       BUF$->XSC$ADDRESS = UADR;

  15073  3 000512   200003 470500                    LDP0    @CCB,,AUTO
         3 000513   000006 471500                    LDP1    6,,PR0
         3 000514   200004 473500                    LDP3    BUF$,,AUTO
         3 000515   000100 100500                    MLR     fill='000'O
         3 000516   100000 000456                    ADSC9   0,,PR1                   cn=0,n=302
         3 000517   300000 000456                    ADSC9   0,,PR3                   cn=0,n=302

     1247    15074            /* save user's CCB in internal slot too */
     1248    15075    1       CCB$( CCB.LCID)->XSC$CCB = CCB;

  15075  3 000520   000000 720100                    LXL0    0,,PR0
         3 000521   000777 360003                    ANX0    511,DU
         3 000522   000000 471400 xsym               LDP1    XSS_CCB$$
         3 000523   100000 473510                    LDP3    0,X0,PR1
         3 000524   000100 100500                    MLR     fill='000'O
         3 000525   000000 000070                    ADSC9   0,,PR0                   cn=0,n=56
         3 000526   300000 000070                    ADSC9   0,,PR3                   cn=0,n=56

     1249    15076    1       RETURN;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:263  

  15076  3 000527   000000 702200 xent               TSX2  ! X66_ARET

  15075  3 000530                       OPNERR       null
  15075  3 000530                       CLSERR       null
  15075  3 000530                       ATTERR       null
  15075  3 000530                       DETERR       null
     1250    15077        %EJECT;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:264  
     1251    15078    1   OPNERR: ;
     1252    15079    1   CLSERR: ;
     1253    15080    1   ATTERR: ;
     1254    15081    1   DETERR: ;
     1255    15082    1   CTLERR:
     1256    15083    1       ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  15083  3 000530   000000 470400 xsym  CTLERR       LDP0    B$TCB$
         3 000531   000000 471500                    LDP1    0,,PR0
         3 000532   100102 236100                    LDQ     66,,PR1
         3 000533   000516 756000 1                  STQ     ERRCODE

     1257    15084    1   NOTIFY:
     1258    15085    1       CALL XSS$EVLOG( 'ER', SCID);

  15085  3 000534   200010 630500       NOTIFY       EPPR0   SCID,,AUTO
         3 000535   200017 450500                    STP0    UNIQUE+3,,AUTO
         3 000536   000022 236000 4                  LDQ     18
         3 000537   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000540   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000541   000000 631400 4                  EPPR1   0
         3 000542   000000 701000 xent               TSX1    XSS$EVLOG
         3 000543   000000 011000                    NOP     0

     1259    15086    1       CALL XSS$EVLOG( , ERRCODE);

  15086  3 000544   000023 236000 4                  LDQ     19
         3 000545   000006 235000 4                  LDA     6
         3 000546   200016 757100                    STAQ    UNIQUE+2,,AUTO
         3 000547   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000550   000000 631400 4                  EPPR1   0
         3 000551   000000 701000 xent               TSX1    XSS$EVLOG
         3 000552   000000 011000                    NOP     0

     1260    15087    1       CCB.ERROR = ERRCODE;

  15087  3 000553   000516 236000 1                  LDQ     ERRCODE
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:265  
         3 000554   200003 470500                    LDP0    @CCB,,AUTO
         3 000555   000001 756100                    STQ     1,,PR0

     1261    15088    1       ALTRETURN;

  15088  3 000556   000000 702200 xent               TSX2  ! X66_AALT

     1262    15089        %EJECT;
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:266  
     1263    15090        /*F*
     1264    15091                NAME:   XSS$COMMTERM
     1265    15092                PURPOSE:
     1266    15093                    Tear down a connection path (DCB plus context) for a client or
     1267    15094                    server application.
     1268    15095        */
     1269    15096    1   XSS$COMMTERM: ENTRY( CCB) ALTRET;

  15096  3 000557   000000 700200 xent  XSS$COMMTERM TSX0  ! X66_AUTO_1
         3 000560   000022 000001                    ZERO    18,1

     1270    15097
     1271    15098    1       CTX$ = ADDR( NIL);

  15098  3 000561   000006 236000 4                  LDQ     6
         3 000562   200005 756100                    STQ     CTX$,,AUTO

     1272    15099            /* point at Session connection context */
     1273    15100    1       SCID = CCB.LCID;

  15100  3 000563   200003 470500                    LDP0    @CCB,,AUTO
         3 000564   000000 236100                    LDQ     0,,PR0
         3 000565   000777 376007                    ANQ     511,DL
         3 000566   200010 756100                    STQ     SCID,,AUTO

     1274    15101    1       CALL XSS$EVLOG( 'KT', SCID);

  15101  3 000567   200010 631500                    EPPR1   SCID,,AUTO
         3 000570   200017 451500                    STP1    UNIQUE+3,,AUTO
         3 000571   000024 236000 4                  LDQ     20
         3 000572   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000573   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000574   000000 631400 4                  EPPR1   0
         3 000575   000000 701000 xent               TSX1    XSS$EVLOG
         3 000576   000000 011000                    NOP     0

     1275    15102    1       CALL XSS$CTXPTR( SCID, CTX$)
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:267  

  15102  3 000577   200005 630500                    EPPR0   CTX$,,AUTO
         3 000600   200017 450500                    STP0    UNIQUE+3,,AUTO
         3 000601   200010 631500                    EPPR1   SCID,,AUTO
         3 000602   200016 451500                    STP1    UNIQUE+2,,AUTO
         3 000603   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000604   000000 631400 4                  EPPR1   0
         3 000605   000000 701000 xent               TSX1    XSS$CTXPTR
         3 000606   000613 702000 3                  TSX2    s:15109

     1276    15103    2       WHENRETURN DO;

     1277    15104                /* mark context as terminated */
     1278    15105    2           SCTX.TERMINATING = %TRUE;

  15105  3 000607   200005 470500                    LDP0    CTX$,,AUTO
         3 000610   002000 236007                    LDQ     1024,DL
         3 000611   000013 256100                    ORSQ    11,,PR0

     1279    15106    2           END;

  15106  3 000612   000622 710000 3                  TRA     s:15115

     1280    15107    2       WHENALTRETURN DO;

     1281    15108                /* either connection was aborted by state machine, or user error */
     1282    15109    3           IF NOT CCB.FLAGS.ACTIVE THEN DO;

  15109  3 000613   200003 470500                    LDP0    @CCB,,AUTO
         3 000614   000000 236100                    LDQ     0,,PR0
         3 000615   002000 316007                    CANQ    1024,DL
         3 000616   000622 601000 3                  TNZ     s:15115

     1283    15110    3               ERRCODE = XSS_E$BADCID;

  15110  3 000617   000000 236000 xsym               LDQ     XSS_E$BADCID
         3 000620   000516 756000 1                  STQ     ERRCODE
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:268  

     1284    15111    3               GOTO NOTIFY;

  15111  3 000621   000534 710000 3                  TRA     NOTIFY

     1285    15112    3               END;
     1286    15113    2           END;
     1287    15114            /* close the DCB */
     1288    15115    2       IF CCB.FLAGS.MODE THEN DO;

  15115  3 000622   200003 470500                    LDP0    @CCB,,AUTO
         3 000623   000000 236100                    LDQ     0,,PR0
         3 000624   001000 316007                    CANQ    512,DL
         3 000625   000651 600000 3                  TZE     s:15135

     1289    15116                /* this is a server endpoint */
     1290    15117    3           IF XSS_DEBUG = 0 THEN DO;

  15117  3 000626   000551 235000 1                  LDA     XSS_DEBUG
         3 000627   000632 601000 3                  TNZ     s:15129

     1291    15118                    /* detach the monitor terminal station */
     1292    15119    3               AUDET.V.DCB# = CCB.DCB#;

  15119  3 000630   000000 220100                    LDX0    0,,PR0
         3 000631   000012 740000 1                  STX0    AUDET+4

     1293    15120                    /* CALL M$DETACH( AUDET) ALTRET( DETERR);
     1294    15121                       The above monitor call was commented out because of a
     1295    15122                       timing problem.  CG Terminal disconnect runs off the
     1296    15123                       clock, and sometimes the CG AU DCB close below gets
     1297    15124                       done before the MONITOR terminal station has been
     1298    15125                       closed, getting the application stuck SQA forever.
     1299    15126                       It turns out the CG AU DCB close will do everything
     1300    15127                       necessary anyway.  Consistently too.                 */
     1301    15128    3               END;

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:269  
     1302    15129    2           AUCLS.V.DCB# = CCB.DCB#;

  15129  3 000632   000000 220100                    LDX0    0,,PR0
         3 000633   000132 740000 1                  STX0    AUCLS+26

     1303    15130    2           CALL XSS$EVLOG( 'CL', SCID);

  15130  3 000634   200010 631500                    EPPR1   SCID,,AUTO
         3 000635   200017 451500                    STP1    UNIQUE+3,,AUTO
         3 000636   000025 236000 4                  LDQ     21
         3 000637   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000640   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000641   000000 631400 4                  EPPR1   0
         3 000642   000000 701000 xent               TSX1    XSS$EVLOG
         3 000643   000000 011000                    NOP     0

     1304    15131    2           CALL M$CLOSE( AUCLS) ALTRET( CLSERR);

  15131  3 000644   000100 630400 1                  EPPR0   AUCLS
         3 000645   450001 713400                    CLIMB   alt,close
         3 000646   406000 401760                    pmme    nvectors=13
         3 000647   000530 702000 3                  TSX2    OPNERR

     1305    15132    2           END;

  15132  3 000650   000667 710000 3                  TRA     s:15140

     1306    15133    2       ELSE DO;

     1307    15134                /* this is a client endpoint */
     1308    15135    2           NCCLS.V.DCB# = CCB.DCB#;

  15135  3 000651   000000 220100                    LDX0    0,,PR0
         3 000652   000170 740000 1                  STX0    NCCLS+26

     1309    15136    2           CALL XSS$EVLOG( 'CL', SCID);

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:270  
  15136  3 000653   200010 631500                    EPPR1   SCID,,AUTO
         3 000654   200017 451500                    STP1    UNIQUE+3,,AUTO
         3 000655   000025 236000 4                  LDQ     21
         3 000656   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000657   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000660   000000 631400 4                  EPPR1   0
         3 000661   000000 701000 xent               TSX1    XSS$EVLOG
         3 000662   000000 011000                    NOP     0

     1310    15137    2           CALL M$CLOSE( NCCLS) ALTRET( CLSERR);

  15137  3 000663   000136 630400 1                  EPPR0   NCCLS
         3 000664   450001 713400                    CLIMB   alt,close
         3 000665   406000 401760                    pmme    nvectors=13
         3 000666   000530 702000 3                  TSX2    OPNERR

     1311    15138    2           END;

     1312    15139            /* release Session connection context */
     1313    15140    2       IF CTX$ ~= ADDR( NIL) THEN DO;

  15140  3 000667   200005 236100                    LDQ     CTX$,,AUTO
         3 000670   000006 116000 4                  CMPQ    6
         3 000671   000714 600000 3                  TZE     s:15146

     1314    15141    2           IF SCTX.ALARM THEN

  15141  3 000672   200005 470500                    LDP0    CTX$,,AUTO
         3 000673   000013 236100                    LDQ     11,,PR0
         3 000674   010000 316007                    CANQ    4096,DL
         3 000675   000706 600000 3                  TZE     s:15143

     1315    15142    2               CALL XSS$CLOCK( %CANCLK, CCB.LCID);

  15142  3 000676   200003 236100                    LDQ     @CCB,,AUTO
         3 000677   600000 036007                    ADLQ    -65536,DL
         3 000700   000027 235000 4                  LDA     23
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:271  
         3 000701   200016 757100                    STAQ    UNIQUE+2,,AUTO
         3 000702   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000703   000000 631400 4                  EPPR1   0
         3 000704   000000 701000 xent               TSX1    XSS$CLOCK
         3 000705   000000 011000                    NOP     0

     1316    15143    2           CALL XSS$RELCTX( CTX$);

  15143  3 000706   200005 630500                    EPPR0   CTX$,,AUTO
         3 000707   200016 450500                    STP0    UNIQUE+2,,AUTO
         3 000710   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000711   000004 631400 4                  EPPR1   4
         3 000712   000000 701000 xent               TSX1    XSS$RELCTX
         3 000713   000000 011000                    NOP     0

     1317    15144    2           END;

     1318    15145            /* release Session parameter block */
     1319    15146    2       IF CCB.SFPTX ~= %NULL THEN DO;

  15146  3 000714   200003 470500                    LDP0    @CCB,,AUTO
         3 000715   000005 720100                    LXL0    5,,PR0
         3 000716   777777 100003                    CMPX0   -1,DU
         3 000717   000732 600000 3                  TZE     s:15150

     1320    15147    2           CALL XSS$RELMEM( CCB.SFPTX);

  15147  3 000720   200003 236100                    LDQ     @CCB,,AUTO
         3 000721   000015 036000 4                  ADLQ    13
         3 000722   200016 756100                    STQ     UNIQUE+2,,AUTO
         3 000723   200016 630500                    EPPR0   UNIQUE+2,,AUTO
         3 000724   000004 631400 4                  EPPR1   4
         3 000725   000000 701000 xent               TSX1    XSS$RELMEM
         3 000726   000000 011000                    NOP     0

     1321    15148    2           CCB.SFPTX = %NULL;

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:272  
  15148  3 000727   777777 220003                    LDX0    -1,DU
         3 000730   200003 470500                    LDP0    @CCB,,AUTO
         3 000731   000005 440100                    SXL0    5,,PR0

     1322    15149    2           END;

     1323    15150    1       CCB.FLAGS.ACTIVE = %FALSE;

  15150  3 000732   000030 236000 4                  LDQ     24
         3 000733   000000 356100                    ANSQ    0,,PR0

     1324    15151    1       RETURN;

  15151  3 000734   000000 702200 xent               TSX2  ! X66_ARET

AUATT
 Sect OctLoc
   1     000   000001 777640   000004 006000   000000 177640   000000 006014    ................
   1     004   000000 400000   ****** ******                                    ........

AUDET
 Sect OctLoc
   1     006   000001 777640   000012 006000   000000 177640   000000 006014    ................
   1     012   000000 400000   ****** ******                                    ........

CGCTL
 Sect OctLoc
   1     014   000013 777640   000064 006000   000000 177640   000000 006014    .....4..........
   1     020   000000 177640   000000 006014   000023 777640   000472 006000    ................
   1     024   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     064*  000000 000022   000000 000000   000000 0000**   000000 000000    ................
   1     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     074   000000 000000   000000 000000   000000 000000   ****** ******    ................

AUCLS
 Sect OctLoc
   1     100   000003 777640   000132 006000   000000 177640   000000 006014    .....Z..........
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:273  
   1     104   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     130*  000000 177640   000000 006014   000000 000001   000000 000040    ...............
   1     134   000220 000000   000000 000000                                    ........

NCCLS
 Sect OctLoc
   1     136   000003 777640   000170 006000   000000 177640   000000 006014    .....x..........
   1     142   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     166*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   1     172   000220 000000   000000 000000                                    ........

FPT_EVENT
 Sect OctLoc
   1     174   000001 777640   000176 006000   000000 000000   000000 000000    .....~..........

FPT_GETDCB
 Sect OctLoc
   1     200   000001 777640   000206 006000   000001 377640   000210 006000    ................
   1     204   000000 777640   000547 006000   000000 000000   000000 000000    ................

DCBNAME
 Sect OctLoc
   1     210   005115 044130   123123 ******                                    .M$XSS..

AUOPN
 Sect OctLoc
   1     212   000025 777640   000256 006000   000000 177640   000000 006014    ................
   1     216   000013 777640   000517 006000   000000 177640   000000 006014    ................
   1     222   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     236*  000001 777640   000470 006000   000000 177640   000000 006014    ................
   1     242   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     256*  000000 000712   000000 003004   252525 000000   000040 252520    ............. ..
   1     262   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   1     266   000000 000036   000000 000036   000000 000000   000000 000000    ................
   1     272   251000 622000   000000 000000   000000 000000   111310 000000    ............I...
   1     276   040040 040040   000000 000000   000000 000000   000000 000000        ............
   1     302   000000 000000   ****** ******                                    ........
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:274  

NCOPN
 Sect OctLoc
   1     304   000025 777640   000350 006000   000000 177640   000000 006014    ................
   1     310   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     350*  000000 000042   000000 000003   252525 000000   000040 252520    ..."......... ..
   1     354   116103 040040   000000 000000   000000 777777   000000 000000    NC  ............
   1     360   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     364   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   1     370   040040 040040   000000 000000   000000 000000   000000 000000        ............
   1     374   000000 000000   ****** ******                                    ........

NCOPNDBG
 Sect OctLoc
   1     376   000025 777640   000442 006000   000000 177640   000000 006014    ................
   1     402   000013 777640   000533 006000   000000 177640   000000 006014    ................
   1     406   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     422*  000001 777640   000470 006000   000000 177640   000000 006014    ................
   1     426   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     442*  000000 000052   000000 001004   252525 000000   000040 252520    ...*......... ..
   1     446   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   1     452   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     456   251000 622000   000000 000000   000000 000000   111210 000000    ............I...
   1     462   040040 040040   000000 000000   000000 000000   000000 000000        ............
   1     466   000000 000000   ****** ******                                    ........

ACCT
 Sect OctLoc
   1     470   072117 123111   103107 040040                                    :OSICG

CGCP
 Sect OctLoc
   1     472   040040 040040   040040 040040   040040 040040   040040 040040
   1     476   000002 001001   000046 113177   000024 760021   000000 003770    .....&K.........
   1     502   000024 062000   601036 000214   000010 000004   000012 000024    ..2.............
   1     506   000002 ******   000000 000000   000000 000000   000000 000000    ................
   1     512   000000 000000   000000 000000   000000 000000   000000 000000    ................
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:275  

ERRCODE
 Sect OctLoc
   1     516   000000 000000                                                    ....

AUSETSTA
 Sect OctLoc
   1     517   123105 122126   105122 040040   040040 040040   040040 040040    SERVER
   1     523   040040 040040   040040 040040   000000 000000   040040 040040            ....
   1     527   040040 040040   040040 040040   040040 040040   000000 000000                ....

NCSETSTA
 Sect OctLoc
   1     533   040040 040040   040040 040040   040040 040040   040040 040040
   1     537   040040 040040   040040 040040   000000 000000   040040 040040            ....
   1     543   040040 040040   040040 040040   040040 040040   000000 000000                ....

DCBN
 Sect OctLoc
   1     547   000000 000000                                                    ....

EVENTINITED
 Sect OctLoc
   1     550   0***** ******                                                    ....

XSS_DEBUG
 Sect OctLoc
   1     551   000000 000000                                                    ....

XSS_EVENT$
 Sect OctLoc
   1     552   000000 000000                                                    ....

(unnamed)
 Sect OctLoc
   1     553   000000 000000   000000 000000   000000 000000                    ............

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:276  
XSS_E$ADDR
 Sect OctLoc
   2     000   302323 000210                                                    ....

XSS_E$DEFAULTDCB
 Sect OctLoc
   2     001   302323 000120                                                    ...P

XSS_E$NODYNMEM
 Sect OctLoc
   2     002   302323 000160                                                    ...p

XSS_E$NOGETDCB
 Sect OctLoc
   2     003   302323 000220                                                    ....

XSS_E$RDONLYCCB
 Sect OctLoc
   2     004   302323 000170                                                    ...x

(unnamed)
 Sect OctLoc
   2     005   113111 040040   107124 040040   117120 040040   115117 116111    KI  GT  OP  MONI
   2     011   124117 122040   105122 040040   113124 040040   103114 040040    TOR ER  KT  CL

(unnamed)
 Sect OctLoc
   4     000   000002 000000   000000 777777   000005 006000   000001 006000    ................
   4     004   000001 000000   000004 006000   000000 006014   000006 006000    ................
   4     010   000001 006000   000000 006003   000003 000000   000000 000070    ...............8
   4     014   000013 006000   000005 400000   000075 200000   000007 006000    .........=......
   4     020   000010 777640   000000 000000   000012 006000   000516 006000    ................
   4     024   000013 006000   000014 006000   000000 000002   000026 006000    ................
   4     030   777777 775777                                                    ....
     1325    15152
     1326    15153    1       END XSS$COMMINIT;

PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:277  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSS_SESSION_M.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
   XSS_INTERNAL_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSS$COMMINIT.
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:278  

 **** Variables and constants ****

  ****  Section 001  Data  XSS$COMMINIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   470-0-0/c STRC(72)    r     1 ACCT                       0-0-0/d STRC(216)   r     1 AUATT
   100-0-0/d STRC(1080)  r     1 AUCLS                      6-0-0/d STRC(216)   r     1 AUDET
   212-0-0/d STRC(2088)  r     1 AUOPN                    517-0-0/w STRC(432)   r     1 AUSETSTA
   472-0-0/d STRC(720)   r     1 CGCP                      14-0-0/d STRC(1872)  r     1 CGCTL
   547-0-0/w SBIN        r     1 DCBN                     210-0-0/c STRC(54)    r     1 DCBNAME
   516-0-0/w STRC        r     1 ERRCODE                  550-0-0/b BIT         r     1 EVENTINITED
   174-0-0/d STRC(144)   r     1 FPT_EVENT                200-0-0/d STRC(288)   r     1 FPT_GETDCB
   136-0-0/d STRC(1080)  r     1 NCCLS                    304-0-0/d STRC(2088)  r     1 NCOPN
   376-0-0/d STRC(2088)  r     1 NCOPNDBG                 533-0-0/w STRC(432)   r     1 NCSETSTA
   551-0-0/w UBIN        r     1 XSS_DEBUG                552-0-0/w EPTR        r     1 XSS_EVENT$

  ****  Section 002 RoData XSS$COMMINIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XSS_E$ADDR                 1-0-0/w STRC        r     1 XSS_E$DEFAULTDCB
     2-0-0/w STRC        r     1 XSS_E$NODYNMEM             3-0-0/w STRC        r     1 XSS_E$NOGETDCB
     4-0-0/w STRC        r     1 XSS_E$RDONLYCCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CCB                       4-0-0/w PTR         r     1 BUF$
    *0-0-0/w STRC(504)   r     1 CCB                        5-0-0/w PTR         r     1 CTX$
     6-0-0/w PTR         r     1 FPT$                       7-0-0/w PTR         r     1 P
     7-0-0/w STRC        r     1 PX                        10-0-0/w SBIN        r     1 SCID
    11-0-0/w SBIN        r     1 TEMP                      12-0-0/w SBIN        r     1 TSAPLEN
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:279  
    13-0-0/w PTR         r     1 TSAPPTR$                  14-0-0/c STRC(72)    r     1 UNIQUE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 XSS_CCB$$                  0-0-0/w STRC        r     1 XSS_E$BADCID
     0-0-0/d STRC(504)   r     1 XSS_GENERIC

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w PTR         r     1 CCB$(0:0)
     0-0-0/c CHAR(8)     r     1 CHAR8                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(1260)  r     1 SCTX                       0-0-0/c ACHR        r     1 TSAPBYTES
     0-0-0/w STRC(2718)  r     1 UADR                       0-0-0/w STRC(2718)  r     1 XSC$ADDRESS
     0-0-0/w STRC(504)   r     1 XSC$CCB                    0-0-0/d STRC(504)   r     1 XSS$GENERIC


   Procedure XSS$COMMINIT requires 477 words for executable code.
   Procedure XSS$COMMINIT requires 18 words of local(AUTO) storage.

    No errors detected in file XSS$COMM.:XSA1TSI    .
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:280  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:281  
          MINI XREF LISTING

ACCT
      8030**DCL      7761--DCLINIT  7980--DCLINIT
ATTERR
     15075**LABEL   15038--CALLALT
AUATT
      7505**DCL     15038<>CALL
AUATT.TSAP_
      7508**DCL     15036<<ASSIGN
AUATT.V
      7508**DCL      7508--DCLINIT
AUATT.V.DCB#
      7508**DCL     15037<<ASSIGN
AUCLS
      7572**DCL     15131<>CALL
AUCLS.SN_
      7572**DCL      7572--REDEF
AUCLS.UTL_
      7573**DCL      7573--REDEF
AUCLS.V
      7577**DCL      7572--DCLINIT
AUCLS.V.DCB#
      7578**DCL     15129<<ASSIGN
AUCLS.V.EXPIRE#
      7587**DCL      7587--REDEF
AUCLS.V.TYPE#
      7585**DCL      7585--REDEF
AUCLS.V.XTNSIZE#
      7582**DCL      7582--REDEF    7584--REDEF
AUDET.V
      7523**DCL      7523--DCLINIT
AUDET.V.DCB#
      7523**DCL     15119<<ASSIGN
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:282  
AUOPN
      7756**DCL     15031<>CALL
AUOPN.ACSVEH_
      7758**DCL      7759--REDEF
AUOPN.ALTKEYS_
      7764**DCL      7765--REDEF    7765--REDEF
AUOPN.HDR_
      7763**DCL      7764--REDEF
AUOPN.NAME_
      7757**DCL     15028<<ASSIGN
AUOPN.TAB_
      7762**DCL      7763--REDEF
AUOPN.UHL_
      7756**DCL      7757--REDEF    7757--REDEF
AUOPN.V
      7765**DCL      7756--DCLINIT
AUOPN.V.DCB#
      7765**DCL     15029<<ASSIGN
AUOPN.V.FSN#
      7796**DCL      7796--REDEF    7796--REDEF
AUOPN.WSN_
      7762**DCL      7762--REDEF
AUSETSTA
      8134**DCL      7757--DCLINIT
B$ALT.CODE
      7430**DCL      7430--REDEF    7431--REDEF    7431--REDEF
B$ALT.ERR
      7431**DCL     15083>>ASSIGN
B$ALT.ERR.ERR#
      7432**DCL      7432--REDEF
B$ALT.EVID
      7431**DCL      7431--REDEF    7431--REDEF
B$JIT.ERR.MID
      1174**DCL      1174--REDEF
B$JIT.JRESPEAK
      1264**DCL      1265--REDEF
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:283  
B$JIT.LNKCNT
      1297**DCL     15019>>CALLBLT
B$JIT.PLL
      1260**DCL     14949>>IF
B$JIT.PUL
      1260**DCL     14949>>IF
B$JIT.SYSID
      1173**DCL     15020>>CALLBLT
B$JIT$
     14913**DCL      1168--IMP-PTR 14949>>IF      14949>>IF      15019>>CALLBLT 15020>>CALLBLT
B$TCB.ALT$
      7437**DCL     15083>>ASSIGN
B$TCB$
     14914**DCL     15083>>ASSIGN
BUF$
     14917**DCL     14986<>CALL    15072<>CALL    15073>>ASSIGN
CCB
      9145**DCL        15--PROC    14946--ASSIGN  15059<>CALL    15075>>ASSIGN  15096--ENTRY
CCB.ADDR$
      9349**DCL      9725--IMP-PTR 14962>>IF      15006>>ASSIGN  15007>>ASSIGN  15036>>ASSIGN  15073>>ASSIGN
CCB.DCB#
      9192**DCL     14967>>IF      14981<<ASSIGN  15000>>ASSIGN  15119>>ASSIGN  15129>>ASSIGN  15135>>ASSIGN
CCB.ERRDEF
      9252**DCL      9272--REDEF
CCB.ERROR
      9272**DCL     14951>>IF      14956<<ASSIGN  15087<<ASSIGN
CCB.EVNT$
      9367**DCL     15044>>IF      15046<<ASSIGN  15052>>ASSIGN
CCB.FLAGS.ACTIVE
      9225**DCL     14957>>IF      15070<<ASSIGN  15109>>IF      15150<<ASSIGN
CCB.FLAGS.BLOCKING
      9204**DCL     15003>>ASSIGN
CCB.FLAGS.EVALID
      9220**DCL     15044>>IF      15051>>IF
CCB.FLAGS.MODE
      9235**DCL     15001>>ASSIGN  15115>>IF
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:284  
CCB.LCID
      9244**DCL     14996<<ASSIGN  15075>>ASSIGN  15100>>ASSIGN  15142<>CALL
CCB.SESS$
      9381**DCL     15002>>ASSIGN
CCB.SFPTX
      9342**DCL     14984<>CALL    14989<>CALL    14990<<ASSIGN  15146>>IF      15147<>CALL    15148<<ASSIGN
CCB$
     14918**DCL     15075>>ASSIGN
CGCP
      8046**DCL      7538--DCLINIT
CGCP.DVBYTE.REREAD#
      8060**DCL      8061--REDEF
CGCTL
      7537**DCL     15033<>CALL
CGCTL.V
      7542**DCL      7537--DCLINIT
CGCTL.V.DCB#
      7542**DCL     15032<<ASSIGN
CHAR8
     14919**DCL     15021>>ASSIGN
CLSERR
     15075**LABEL   15131--CALLALT 15137--CALLALT
CTLERR
     15083**LABEL   15033--CALLALT
CTX$
     14920**DCL     14098--IMP-PTR 14986<>CALL    14996>>ASSIGN  14998>>ASSIGN  14999>>ASSIGN  15000>>ASSIGN
     15001>>ASSIGN  15002>>ASSIGN  15003>>ASSIGN  15008>>DOCASE  15012>>ASSIGN  15018>>CALLBLT 15023>>ASSIGN
     15029>>ASSIGN  15032>>ASSIGN  15037>>ASSIGN  15039>>ASSIGN  15058>>IF      15061>>IF      15062>>IF
     15063>>ASSIGN  15069>>ASSIGN  15072>>CALL    15098<<ASSIGN  15102<>CALL    15105>>ASSIGN  15140>>IF
     15141>>IF      15143<>CALL
DCBN
     14921**DCL      7659--DCLINIT 14968>>IF      14976--IF      14981>>ASSIGN
DCBNAME
      7687**DCL      7658--DCLINIT
ERRCODE
      8089**DCL     14958<<ASSIGN  14963<<ASSIGN  14972<<ASSIGN  14978<<ASSIGN  14992<<ASSIGN  15063<<ASSIGN
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:285  
     15083<<ASSIGN  15086<>CALL    15087>>ASSIGN  15110<<ASSIGN
EVENTINITED
     14922**DCL     15049>>IF      15055<<ASSIGN
F$DCB.ACTPOS
      7472**DCL      7472--REDEF
F$DCB.ARS#
      7446**DCL      7446--REDEF
F$DCB.ATTR
      7465**DCL      7466--REDEF
F$DCB.BORROW
      7480**DCL      7480--REDEF    7480--REDEF    7480--REDEF
F$DCB.DCBNAME.L
      7494**DCL      7494--IMP-SIZ
F$DCB.EOMCHAR#
      7450**DCL      7450--REDEF
F$DCB.FCD#
      7459**DCL     14976>>IF
F$DCB.FLDID
      7475**DCL      7475--REDEF
F$DCB.FORM$
      7469**DCL      7469--REDEF
F$DCB.FSECT
      7485**DCL      7485--REDEF
F$DCB.FSN#
      7462**DCL      7462--REDEF    7462--REDEF    7463--REDEF
F$DCB.HEADER$
      7468**DCL      7468--REDEF
F$DCB.IXTNSIZE#
      7466**DCL      7466--REDEF
F$DCB.LASTSTA$
      7455**DCL      7455--REDEF
F$DCB.LVL
      7481**DCL      7481--REDEF
F$DCB.NAME#.C
      7456**DCL      7456--REDEF
F$DCB.NOEOF
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:286  
      7478**DCL      7478--REDEF
F$DCB.NRECS#
      7467**DCL      7467--REDEF
F$DCB.NRECX
      7486**DCL      7486--REDEF
F$DCB.OHDR
      7478**DCL      7478--REDEF
F$DCB.ORG#
      7461**DCL      7461--REDEF
F$DCB.PRECNO
      7484**DCL      7484--REDEF
F$DCB.RCSZ
      7490**DCL      7490--REDEF
F$DCB.RES#
      7457**DCL      7457--REDEF
F$DCB.SETX
      7469**DCL      7469--REDEF
F$DCB.TAB$
      7469**DCL      7469--REDEF
F$DCB.TDA
      7483**DCL      7484--REDEF
F$DCB.WSN#
      7457**DCL      7457--REDEF
FPT$
     14923**DCL     13216--IMP-PTR 14984<>CALL    14997>>ASSIGN  14998>>ASSIGN
FPT_EVENT
      7644**DCL     15050<>CALL
FPT_EVENT.V
      7644**DCL      7644--DCLINIT
FPT_GETDCB
      7658**DCL     14970<>CALL
FPT_GETDCB.V
      7659**DCL      7658--DCLINIT
M$ATTACH
      7378**DCL-ENT 15038--CALL
M$CGCTL
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:287  
      7377**DCL-ENT 15033--CALL
M$CLOSE
      7356**DCL-ENT 15131--CALL    15137--CALL
M$EVENT
      7411**DCL-ENT 15050--CALL
M$GETDCB
      7362**DCL-ENT 14970--CALL
M$OPEN
      7356**DCL-ENT 15014--CALL    15025--CALL    15031--CALL
NCCLS
      7614**DCL     15137<>CALL
NCCLS.SN_
      7614**DCL      7614--REDEF
NCCLS.UTL_
      7615**DCL      7615--REDEF
NCCLS.V
      7619**DCL      7614--DCLINIT
NCCLS.V.DCB#
      7620**DCL     15135<<ASSIGN
NCCLS.V.EXPIRE#
      7629**DCL      7629--REDEF
NCCLS.V.TYPE#
      7627**DCL      7627--REDEF
NCCLS.V.XTNSIZE#
      7624**DCL      7624--REDEF    7626--REDEF
NCOPN
      7865**DCL     15014<>CALL
NCOPN.ACSVEH_
      7867**DCL      7868--REDEF
NCOPN.ALTKEYS_
      7873**DCL      7874--REDEF    7874--REDEF
NCOPN.HDR_
      7872**DCL      7873--REDEF
NCOPN.NAME_
      7866**DCL     15011<<ASSIGN
NCOPN.TAB_
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:288  
      7871**DCL      7872--REDEF
NCOPN.UHL_
      7865**DCL      7866--REDEF    7866--REDEF
NCOPN.V
      7874**DCL      7865--DCLINIT
NCOPN.V.DCB#
      7874**DCL     15012<<ASSIGN
NCOPN.V.FSN#
      7905**DCL      7905--REDEF    7905--REDEF
NCOPN.WSN_
      7871**DCL      7871--REDEF
NCOPNDBG
      7975**DCL     15025<>CALL
NCOPNDBG.ACSVEH_
      7977**DCL      7978--REDEF
NCOPNDBG.ALTKEYS_
      7983**DCL      7984--REDEF    7984--REDEF
NCOPNDBG.HDR_
      7982**DCL      7983--REDEF
NCOPNDBG.NAME_
      7976**DCL     15022<<ASSIGN
NCOPNDBG.TAB_
      7981**DCL      7982--REDEF
NCOPNDBG.UHL_
      7975**DCL      7976--REDEF    7976--REDEF
NCOPNDBG.V
      7984**DCL      7975--DCLINIT
NCOPNDBG.V.DCB#
      7984**DCL     15023<<ASSIGN
NCOPNDBG.V.FSN#
      8015**DCL      8015--REDEF    8015--REDEF
NCOPNDBG.WSN_
      7981**DCL      7981--REDEF
NCSETSTA
      8162**DCL      7976--DCLINIT
NCSETSTA.MYSTATION#
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:289  
      8166**DCL     15021<<ASSIGN
NODYNMEM
     14992**LABEL   14984--CALLALT
NOTIFY
     15085**LABEL   14959--GOTO    14964--GOTO    14973--GOTO    14979--GOTO    14993--GOTO    15064--GOTO
     15111--GOTO
OPNERR
     15075**LABEL   15014--CALLALT 15025--CALLALT 15031--CALLALT
P
     14924**DCL     14925--REDEF   14946<<ASSIGN
PX.OFFSET
     14926**DCL     14948>>ASSIGN
PX.SEGID
     14928**DCL     14947>>IF
SCID
     14929**DCL     14944<<ASSIGN  14999<<ASSIGN  15013<>CALL    15024<>CALL    15030<>CALL    15085<>CALL
     15100<<ASSIGN  15101<>CALL    15102<>CALL    15130<>CALL    15136<>CALL
SCTX.ALARM
     14390**DCL     15141>>IF
SCTX.BLOCKING
     14389**DCL     15003<<ASSIGN
SCTX.DCB#
     14427**DCL     15000<<ASSIGN  15012>>ASSIGN  15018>>CALLBLT 15023>>ASSIGN  15029>>ASSIGN  15032>>ASSIGN
     15037>>ASSIGN
SCTX.ENTRY$
     14410**DCL     15002<<ASSIGN
SCTX.HISTZ
     14412**DCL     14413--REDEF
SCTX.LATCH.ERRCODE
     14480**DCL     15062>>IF      15063>>ASSIGN
SCTX.LATCH.PRESENT
     14460**DCL     15061>>IF
SCTX.MODE
     14394**DCL     15001<<ASSIGN  15008>>DOCASE  15058>>IF
SCTX.NEEDAREAD
     14391**DCL     15069<<ASSIGN
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:290  
SCTX.SCID
     14399**DCL     14996>>ASSIGN  14998>>ASSIGN  14999>>ASSIGN
SCTX.SRCX
     14117**DCL     15072<>CALL
SCTX.STATION
     14422**DCL     15039<<ASSIGN
SCTX.TERMINATING
     14392**DCL     15105<<ASSIGN
TEMP
     14930**DCL     14948<<ASSIGN  14949>>IF      14949>>IF
TSAPBYTES
     14931**DCL     15011--ASSIGN  15022--ASSIGN  15028--ASSIGN
TSAPLEN
     14932**DCL     14931--IMP-SIZ 15006<<ASSIGN  15011>>ASSIGN  15022>>ASSIGN  15028>>ASSIGN
TSAPPTR$
     14933**DCL     14931--IMP-PTR 15007<<ASSIGN  15011>>ASSIGN  15022>>ASSIGN  15028>>ASSIGN
UADR
      9725**DCL     15073>>ASSIGN
UADR.NSAP.ADDRESS_N
      9986**DCL      9987--REDEF
UADR.TSAP
      9882**DCL     15036--ASSIGN
UADR.TSAP.LEN
      9884**DCL     15006>>ASSIGN
UADR.TSAP.TSAP
      9892**DCL     15007--ASSIGN
UNIQUE
     14934**DCL     15021--ASSIGN
UNIQUE.DCB#
     14935**DCL     15018<<CALLBLT
UNIQUE.LNKCNT
     14936**DCL     15019<<CALLBLT
UNIQUE.SYSID
     14937**DCL     15020<<CALLBLT
XSC$ADDRESS
      9442**DCL     15073<<ASSIGN
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:291  
XSC$ADDRESS.NSAP.ADDRESS_N
      9703**DCL      9704--REDEF
XSC$CCB
      8848**DCL     15075<<ASSIGN
XSC$CCB.ERRDEF
      8955**DCL      8975--REDEF
XSS$BUFPTR
     14902**DCL-ENT 15072--CALL
XSS$CLOCK
     14900**DCL-ENT 15142--CALL
XSS$COMMWAITX
     14901**DCL-ENT 15059--CALL
XSS$CTXPTR
     14903**DCL-ENT 15102--CALL
XSS$EVENT
     14904**DCL-ENT 15046--ASSIGN
XSS$EVLOG
     14911**DCL-ENT 14945--CALL    14969--CALL    15013--CALL    15024--CALL    15030--CALL    15085--CALL
     15086--CALL    15101--CALL    15130--CALL    15136--CALL
XSS$GENERIC
     13216**DCL     14984--CALL    14997<<ASSIGN
XSS$GENERIC.ERRDEF
     13270**DCL     13290--REDEF
XSS$GENERIC.SCID
     13231**DCL     14998<<ASSIGN
XSS$GETCTX
     14905**DCL-ENT 14986--CALL
XSS$GETMEM
     14906**DCL-ENT 14984--CALL
XSS$RELCTX
     14907**DCL-ENT 15143--CALL
XSS$RELMEM
     14908**DCL-ENT 14989--CALL    15147--CALL
XSS$SCREECH
     14909**DCL-ENT 14953--CALL
XSS$TRECV
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:292  
     14910**DCL-ENT  7644--DCLINIT
XSS_CCB$$
     14915**DCL     14918--IMP-PTR 15075>>ASSIGN
XSS_DEBUG
     14938**DCL     15010>>IF      15034>>IF      15117>>IF
XSS_E$ADDR
     14610**DCL     14963>>ASSIGN
XSS_E$BADCID
     14661**DCL     14958>>ASSIGN  15110>>ASSIGN
XSS_E$DEFAULTDCB
     14709**DCL     14978>>ASSIGN
XSS_E$NODYNMEM
     14760**DCL     14992>>ASSIGN
XSS_E$NOGETDCB
     14811**DCL     14972>>ASSIGN
XSS_E$RDONLYCCB
     14862**DCL     14951>>IF      14953<>CALL
XSS_EVENT$
     14939**DCL     15052<<ASSIGN  15054<<ASSIGN
XSS_GENERIC
     13362**DCL     14997>>ASSIGN
XSS_GENERIC.ERRDEF
     13416**DCL     13436--REDEF
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:293  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:294  
              MINI UREF LISTING

DETERR   15075**LABEL
M$ACCT    7373**DCL-ENT
M$ACTIVATE    7376**DCL-ENT
M$ALIB    7369**DCL-ENT
M$ASUSER    7371**DCL-ENT
M$BADPP    7396**DCL-ENT
M$CGINFO    7377**DCL-ENT
M$CHECK    7358**DCL-ENT
M$CHGUNIT    7416**DCL-ENT
M$CLRSTK    7414**DCL-ENT
M$CMDVAR    7425**DCL-ENT
M$CONFIG    7386**DCL-ENT
M$CORRES    7361**DCL-ENT
M$CPEXIT    7370**DCL-ENT
M$CVM    7394**DCL-ENT
M$CVOL    7359**DCL-ENT
M$DCLFLD    7386**DCL-ENT
M$DEACTIVATE    7376**DCL-ENT
M$DELREC    7358**DCL-ENT
M$DEQ    7423**DCL-ENT
M$DETACH    7378**DCL-ENT
M$DEVICE    7360**DCL-ENT
M$DISPLAY    7423**DCL-ENT
M$DISPRES    7363**DCL-ENT
M$DLIB    7369**DCL-ENT
M$DRIBBLE    7386**DCL-ENT
M$DRTN    7414**DCL-ENT
M$DSUSER    7371**DCL-ENT
M$ENQ    7422**DCL-ENT
M$EOM    7381**DCL-ENT
M$ERASE    7387**DCL-ENT
M$ERR    7368**DCL-ENT
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:295  
M$ERRMSG    7419**DCL-ENT
M$EXHUME    7420**DCL-ENT
M$EXIT    7368**DCL-ENT
M$EXTEND    7360**DCL-ENT
M$FDP    7392**DCL-ENT
M$FDS    7391**DCL-ENT
M$FEBOOT    7384**DCL-ENT
M$FECTL    7385**DCL-ENT
M$FEDUMP    7384**DCL-ENT
M$FID    7419**DCL-ENT
M$FINDPROC    7373**DCL-ENT
M$FSUSER    7371**DCL-ENT
M$FVP    7393**DCL-ENT
M$FWCG    7377**DCL-ENT
M$GBPL    7397**DCL-ENT
M$GDDL    7393**DCL-ENT
M$GDP    7392**DCL-ENT
M$GDS    7391**DCL-ENT
M$GETMOUSE    7402**DCL-ENT
M$GETPM    7403**DCL-ENT
M$GJOB    7421**DCL-ENT
M$GLINEATTR    7381**DCL-ENT
M$GOODPP    7396**DCL-ENT
M$GPLATEN    7389**DCL-ENT
M$GPROMPT    7388**DCL-ENT
M$GTRMATTR    7382**DCL-ENT
M$GTRMCTL    7380**DCL-ENT
M$GTRMTAB    7383**DCL-ENT
M$GVP    7392**DCL-ENT
M$HELP    7419**DCL-ENT
M$INT    7411**DCL-ENT
M$INTRTN    7372**DCL-ENT
M$IOQ    7407**DCL-ENT
M$JOBSTATS    7421**DCL-ENT
M$KEYIN    7361**DCL-ENT
M$LDEV    7356**DCL-ENT
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:296  
M$LDTRC    7369**DCL-ENT
M$LIMIT    7362**DCL-ENT
M$LINES    7361**DCL-ENT
M$LINK    7368**DCL-ENT
M$MADMUCK    7364**DCL-ENT
M$MAKUSER    7395**DCL-ENT
M$MBS    7363**DCL-ENT
M$MDFFLD    7387**DCL-ENT
M$MERC    7412**DCL-ENT
M$MERCS    7413**DCL-ENT
M$MIRROR    7407**DCL-ENT
M$MONINFO    7424**DCL-ENT
M$MPL    7397**DCL-ENT
M$NODEINFO    7388**DCL-ENT
M$NXTUSR    7422**DCL-ENT
M$OCMSG    7420**DCL-ENT
M$OLAY    7368**DCL-ENT
M$PAS    7397**DCL-ENT
M$PATHCON    7420**DCL-ENT
M$PDS    7391**DCL-ENT
M$PFIL    7358**DCL-ENT
M$PLATEN    7382**DCL-ENT
M$PRECORD    7360**DCL-ENT
M$PROCNAME    7373**DCL-ENT
M$PROFILE    7384**DCL-ENT
M$PROMPT    7380**DCL-ENT
M$RACST    7364**DCL-ENT
M$RDSYSLOG    7405**DCL-ENT
M$READ    7357**DCL-ENT
M$RELDCB    7362**DCL-ENT
M$RELRES    7363**DCL-ENT
M$RELSTARF    7365**DCL-ENT
M$REM    7365**DCL-ENT
M$RENV    7412**DCL-ENT
M$REQUIRE    7364**DCL-ENT
M$RETRY    7413**DCL-ENT
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:297  
M$RETRYS    7413**DCL-ENT
M$REW    7359**DCL-ENT
M$RLSFLD    7387**DCL-ENT
M$RPRIV    7415**DCL-ENT
M$RSPP    7394**DCL-ENT
M$RSWITCH    7416**DCL-ENT
M$RUE    7422**DCL-ENT
M$SAD    7395**DCL-ENT
M$SAVE    7371**DCL-ENT
M$SCON    7372**DCL-ENT
M$SCREECH    7370**DCL-ENT
M$SENV    7412**DCL-ENT
M$SETFMA    7356**DCL-ENT
M$SETFP    7385**DCL-ENT
M$SINPUT    7383**DCL-ENT
M$SLCFLD    7388**DCL-ENT
M$SMOUSE    7402**DCL-ENT
M$SMPRT    7394**DCL-ENT
M$SPRIV    7415**DCL-ENT
M$SSC    7395**DCL-ENT
M$SSWITCH    7415**DCL-ENT
M$STATE    7424**DCL-ENT
M$STD    7396**DCL-ENT
M$STIMER    7410**DCL-ENT
M$STLPP    7393**DCL-ENT
M$STRAP    7410**DCL-ENT
M$STRMATTR    7382**DCL-ENT
M$STRMCTL    7380**DCL-ENT
M$STRMTAB    7383**DCL-ENT
M$SYMBIO    7421**DCL-ENT
M$SYSCON    7407**DCL-ENT
M$SYSID    7425**DCL-ENT
M$TDCLOSE    7406**DCL-ENT
M$TDIO    7406**DCL-ENT
M$TDOPEN    7405**DCL-ENT
M$TDREQCPU    7406**DCL-ENT
PL6.E3A0      #005=XSS$COMMINIT File=XSS$COMM.:XSA1TSI                           WED 10/01/97 12:11 Page:298  
M$TEMPWROC    7400**DCL-ENT
M$TIME    7423**DCL-ENT
M$TRAP    7410**DCL-ENT
M$TRMISC    7385**DCL-ENT
M$TRMPRG    7381**DCL-ENT
M$TRTN    7414**DCL-ENT
M$TRUNC    7357**DCL-ENT
M$TTIMER    7410**DCL-ENT
M$UC    7380**DCL
M$UMPL    7397**DCL-ENT
M$UNFID    7419**DCL-ENT
M$UNLATCH    7376**DCL-ENT
M$UNSHARE    7373**DCL-ENT
M$USRFIELD    7416**DCL-ENT
M$VIRTUAL    7391**DCL-ENT
M$WAIT    7414**DCL-ENT
M$WEOF    7359**DCL-ENT
M$WRITE    7357**DCL-ENT
M$WRSYSLOG    7405**DCL-ENT
M$XCON    7411**DCL-ENT
M$XCONRTN    7372**DCL-ENT
M$XEQTIME    7424**DCL-ENT
M$XFLUSH    7365**DCL-ENT
M$XMOUSE    7402**DCL-ENT
M$XXX    7368**DCL-ENT
M$YC    7370**DCL-ENT
XSS$COMMINIT      15**PROC
XSS$COMMTERM   15096**ENTRY
XSS_ITRACE   14940**DCL
XSS_OTRACE   14941**DCL
XSS_TRACE   14942**DCL
