VERSION E05

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:1    
        1        1        /*M* ORES, ACQUIRE, RELEASE cmds */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /**/
        9        9        CPO$ORES: PROC (P$PCB) ALTRET;
       10       10        /**/
       11       11        /******************************************************************** */
       12       12        /*Include files   include files   include files   include files */
       13       13        /******************************************************************** */
       14       14        %INCLUDE AS_SUPER_C;
       15      449        %INCLUDE B$JIT;
       16      739        %INCLUDE B_ERRORS_C;
       17     1866        %INCLUDE B_MACROS_C;
       18     1977        %INCLUDE CP_6;
       19     2058        %INCLUDE CP_6_SUBS;
       20     2598        %INCLUDE CP_SUBS_C;
       21     3515        %INCLUDE CP_PERR_C;
       22     3853        %INCLUDE CP_MACROS_C;
       23     4605        %INCLUDE JM$STRUCT;
       24     5350        %INCLUDE JM_SUBS_C;
       25     5456        %INCLUDE XU_FORMAT_C;
       26     5618        %INCLUDE XU_MACRO_C;
       27     8724        /**/
       28     8725        %INCLUDE CP_DATA_R;
       29    11288        /**/
       30    11289        %SUB HDRTAB = 3;
       31    11290        %SUB DISPTAB = 6;
       32    11291        /***** Parameters *****/
       33    11292        %P$PCB (NAME=P$PCB,STCLASS="");
       34    11493        /**/
       35    11494        /***** Auto data *****/
       36    11495    1   DCL MEM_HIT BIT(1);
       37    11496    1   DCL TIME_HIT BIT(1);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:2    
       38    11497        /**/
       39    11498    1   DCL RELEASE_ALL# BIT(1) AUTO;   /* Used by IBEX, not by PRESCAN */
       40    11499    1   DCL NHPSN# BIT(1) AUTO;   /* Used by PRESCAN, not by IBEX */
       41    11500        /**/
       42    11501    1   DCL P$ PTR;
       43    11502    1   DCL IN$ PTR;
       44    11503    1   DCL OUT$ PTR;
       45    11504    1   DCL DEST$ PTR;
       46    11505        /**/
       47    11506    1   DCL NO_SHARED BIT(1);
       48    11507    1   DCL NO_EXCLUSIVE BIT(1);
       49    11508        /**/
       50    11509    1   DCL I SBIN WORD;
       51    11510    1   DCL J SBIN WORD;
       52    11511    1   DCL K SBIN WORD;
       53    11512        /**/
       54    11513        /**/
       55    11514        %VLP_NAME (FPTN=ERR_TEXT, LEN=11, STCLASS=AUTO);
       56    11541        /**/
       57    11542        %ERR_CODE (NAME=ERR_CODE,STCLASS=AUTO);
       58    11562        /**/
       59    11563    1   DCL INBUF CHAR(20);
       60    11564    1   DCL OUTBUF CHAR(120);
       61    11565        /**/
       62    11566        /**/
       63    11567        %VLP_PRES (FPTN = CUR_RES,STCLASS=AUTO,N=VIRT_SLOTS);
       64    11583        %VLP_PRES (FPTN = REQ_RES,STCLASS=AUTO,N=VIRT_SLOTS);
       65    11599        %VLP_PRES (FPTN = SAVE_RES,STCLASS=AUTO,N=VIRT_SLOTS);
       66    11615        %VLP_PRES (FPTN = ATTR_RES,STCLASS=AUTO,N=VIRT_SLOTS);
       67    11631        /**/
       68    11632        %VLP_PSEUDO (FPTN = CUR_PSEUDO,STCLASS=AUTO,N=PSEUDO_SLOTS);
       69    11648        %VLP_PSEUDO (FPTN = REQ_PSEUDO,STCLASS=AUTO,N=PSEUDO_SLOTS);
       70    11664        %VLP_PSEUDO (FPTN = SAVE_PSEUDO,STCLASS=AUTO,N=PSEUDO_SLOTS);
       71    11680        /**/
       72    11681        %VLP_RPSN (FPTN = CUR_PSN,STCLASS=AUTO,N=PSN_SLOTS);
       73    11696        %VLP_RPSN (FPTN = REQ_PSN,STCLASS=AUTO,N=PSN_SLOTS);
       74    11711        %VLP_RPSN (FPTN = SAVE_PSN,STCLASS=AUTO,N=PSN_SLOTS);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:3    
       75    11726        /**/
       76    11727        %JM_RESLIST (FPTN = VIRT_TBL,ARRAY="(0:VIRT_SLOTS)",FIT = YES,STCLASS = AUTO);
       77    11782        /**/
       78    11783        %JM_SN (FPTN = PSN,TYP = LIST,STCLASS = AUTO);
       79    11822        /**/
       80    11823        %JM_SNLIST (FPTN = PSN_TBL,ARRAY="(0:PSN_SLOTS)",FIT = YES,STCLASS = AUTO);
       81    11880        /**/
       82    11881        %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = AUTO);
       83    12039        /**/
       84    12040        %CP_LIMREC(NAME=CP_LIMREC,STCLASS=AUTO);
       85    12078        /**/
       86    12079        %FPT_RESCTL (FPTN = FPT_RESCTL,STCLASS = AUTO);
       87    12096        /**/
       88    12097        %F_FDS (NAME=FCB,STCLASS=AUTO);
       89    12210        /**/
       90    12211    1   DCL FMT_VECT (0:35) BIT(72) AUTO;
       91    12212        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:4    
       92    12213        /***** Based data *****/
       93    12214        %B$TCB (STCLASS="BASED(B$TCB$)");
       94    12217        %B$ALT;
       95    12225        %PARSE$OUT(NAME=P$B,STCLASS=BASED);
       96    12270        %PARSE$SYM(NAME=P$S,STCLASS=BASED);
       97    12308        /**/
       98    12309        %FPT_WRITE (FPTN=FPT$WRITE,STCLASS=BASED);
       99    12340        %FPT_CLOSE (FPTN=FPT$CLOSE,STCLASS=BASED);
      100    12382        /**/
      101    12383        %SEG$2;
      102    12443        %ERR_BLK (NAME=ERR$BLK, STCLASS=BASED) ;
      103    12468        /**/
      104    12469        %AS_USERS(STR_NAME=AS$USERS,STCLASS=BASED);
      105    12647        /**/
      106    12648        %VLP_PRES(FPTN=PHYS$LIST,STCLASS=BASED,N=99999);
      107    12664        %VLP_PSEUDO(FPTN=PSEUDO$LIST,STCLASS=BASED,N=PSEUDO_SLOTS);
      108    12680    1   DCL B$SBIN BASED ALIGNED SBIN;
      109    12681        /***** External routines *****/
      110    12682    1   DCL CPC$OPEN_LL ENTRY;
      111    12683    1   DCL CPC$OPEN_S ENTRY(1) ALTRET;
      112    12684    1   DCL CPC$WRITEMSGE ENTRY(6);
      113    12685    1   DCL CPJ$ESTLIM ENTRY(3);
      114    12686    1   DCL CPJ$READ_S ENTRY(3) ALTRET;
      115    12687    1   DCL CPJ$WRITE_S ENTRY(3) ALTRET;
      116    12688    1   DCL CPO$EXPAND ENTRY(2) ALTRET;
      117    12689    1   DCL CPO$PROCESS_VIRT_RES ENTRY(4) ALTRET;
      118    12690    1   DCL CPO$RESOURCE ENTRY(7) ALTRET;
      119    12691    1   DCL CPO$STORE_PSN ENTRY(3) ALTRET;
      120    12692    1   DCL CPO$VALIDATE ENTRY(7) ALTRET;
      121    12693    1   DCL CXP$POSTERR ENTRY(5) ;
      122    12694    1   DCL X$FORMAT ENTRY(1);
      123    12695    1   DCL CPK$FDS_OUTPUT ENTRY(2) ALTRET ;
      124    12696        /**/
      125    12697        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:5    
      126    12698        /***** Constant data *****/
      127    12699        %JM_IF (FPTN = JOB_TBL_INIT,FIT = YES,STCLASS = CONSTANT);
      128    12857          %F_FDS (NAME=C_FCB,TRUNC=NO,WRAPTAB=4,STCLASS=CONSTANT);
      129    12970        /**/
      130    12971    1     DCL ACQUIRE_HDR CHAR(0) CONSTANT INIT
      131    12972    1        ('Resources acquired:');
      132    12973    1     DCL CANTRELEASE_HDR CHAR(0) CONSTANT INIT
      133    12974    1        ('Couldn''t release these resources:');
      134    12975    1     DCL RELEASE_HDR CHAR(0) CONSTANT INIT
      135    12976    1        ('Resources released:');
      136    12977        /***** Error codes *****/
      137    12978        %ERR_CODE (NAME=E_LIMPSEUDO,MID#=CPO$IBEXMID,CODE#=E$CPO_LIMPSEUDO,STCLASS=CONSTANT)
             12978            ;
      138    12998        /*E*    ERROR:   CPO-E$CPO_LIMPSEUDO-0
      139    12999                MESSAGE: Error trying to get Pseudo resource %U1.
      140    13000        */
      141    13001        %ERR_CODE (NAME=E_LIMPSN,MID#=CPO$IBEXMID,CODE#=E$CPO_LIMPSN,STCLASS=CONSTANT);
      142    13021        /*E*    ERROR:   CPO-E$CPO_LIMPSN-0
      143    13022                MESSAGE: Error trying to get packset DP#%U1.
      144    13023        */
      145    13024        %ERR_CODE (NAME=E_LIMRES,MID#=CPO$IBEXMID,CODE#=E$CPO_LIMRES,STCLASS=CONSTANT);
      146    13044        /*E*    ERROR:   CPO-E$CPO_LIMRES-0
      147    13045                MESSAGE: Error trying to get physical resource %U1.
      148    13046        */
      149    13047        %ERR_CODE (NAME=E_ACQDUPRES,MID#=CPO$IBEXMID,CODE#=E$CPO_ACQDUPRES,STCLASS=CONSTANT)
             13047            ;
      150    13067        /*E*    ERROR: CPO-E$CPO_ACQDUPRES-0
      151    13068                MESSAGE: You already have resource %U1.
      152    13069        */
      153    13070        %ERR_CODE (NAME=E_ACQDUPPSN,MID#=CPO$IBEXMID,CODE#=E$CPO_ACQDUPPSN,STCLASS=CONSTANT)
             13070            ;
      154    13090        /*E*    ERROR: CPO-E$CPO_ACQDUPPSN-0
      155    13091                MESSAGE: You already have packset DP#%U1.
      156    13092        */
      157    13093        %ERR_CODE (NAME=E_BIGTIME,MID#=CPO$IBEXMID,CODE#=E$CPO_BIGTIME,STCLASS=CONSTANT);
      158    13113        /*E*    ERROR: CPO-E$CPO_BIGTIME-0
      159    13114                MESSAGE: TIME resource exceeds user maximum.
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:6    
      160    13115        */
      161    13116        %ERR_CODE (NAME=E_SMALLTIME,MID#=CPO$IBEXMID,CODE#=E$CPO_SMALLTIME,STCLASS=CONSTANT)
             13116            ;
      162    13136        /*E*    ERROR:   CPO-E$CPO_SMALLTIME-0
      163    13137                MESSAGE: TIME requested has already been used.
      164    13138        */
      165    13139        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:7    
      166    13140        /*
      167    13141             ***** Initialize some local variables ...
      168    13142        */
      169    13143    1     CALL INIT_LOCAL_VARIABLES;
      170    13144        /**/
      171    13145        /*
      172    13146           ***  If no options then display current resources.
      173    13147        */
      174    13148        /**/
      175    13149    1     IF P$PCB.OUT$ -> P$B.NSUBLKS = 0
      176    13150
      177    13151    1        THEN
      178    13152    2           DO;
      179    13153        /*
      180    13154           *** Get the list of resources currently reserved for this user
      181    13155        */
      182    13156    2              CALL GET_CUR_RESLIST ALTRET(DISP_ERR);
      183    13157        /*
      184    13158           ***  Delete any pseudo resources that we have none of from the list.
      185    13159                Then display the rest.
      186    13160        */
      187    13161    2              I = 0;
      188    13162    3              DO WHILE (I < CUR_PSEUDO.NN#);
      189    13163    3                 IF (CUR_PSEUDO.PSLIST.NUM#(I) = 0)
      190    13164
      191    13165    3                    THEN
      192    13166    4                       DO;
      193    13167    5                          DO J = I TO CUR_PSEUDO.NN# - 1;
      194    13168    5                             CUR_PSEUDO.PSLIST(J) = CUR_PSEUDO.PSLIST(J+1);
      195    13169    5                          END;
      196    13170    4                          CUR_PSEUDO.NN# = CUR_PSEUDO.NN# - 1;
      197    13171    4                       END;
      198    13172    3                    ELSE
      199    13173    3                       I = I + 1;
      200    13174    3              END;
      201    13175        /**/
      202    13176    2              CALL DI_RESOURCES (CUR_PSEUDO,CUR_RES,CUR_PSN) ALTRET(DISP_ERR);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:8    
      203    13177        /**/
      204    13178    2              RETURN;
      205    13179        /**/
      206    13180    2   DISP_ERR:
      207    13181    2              ALTRETURN;
      208    13182    2           END;
      209    13183        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:9    
      210    13184        /*
      211    13185             ***** Build the list of resources to acquire/release ...
      212    13186        */
      213    13187    1     CALL BUILD_RES_LIST ALTRET(E_ORES);
      214    13188        /*
      215    13189             ***** Get the list of resources currently owned ...
      216    13190        */
      217    13191    1     CALL GET_CUR_RESLIST ALTRET(E_ORES);
      218    13192        /*
      219    13193             ***** Determine which resources were not specified on
      220    13194                   the ORES command and set up to avoid releasing them.
      221    13195        */
      222    13196    2     DO J = 0 TO CUR_RES.NN#-1;
      223    13197    3        DO I = 0 TO VIRT_TBL.COUNT-1;
      224    13198    3           IF CUR_RES.PRLIST.RNME.TYP(J) = VIRT_TBL.RES.TYPE(I)
      225    13199    3              THEN
      226    13200    3                 GOTO SAVETHISRES;
      227    13201    3        END;
      228    13202        /*
      229    13203             ***** Delete this physical resource by compressing
      230    13204                   the table on top of this resource entry ...
      231    13205        */
      232    13206    3        DO I = J TO CUR_RES.NN#-1;
      233    13207    3           CUR_RES.PRLIST(I) = CUR_RES.PRLIST(I+1);
      234    13208    3        END;
      235    13209    2        CUR_RES.NN# = CUR_RES.NN# - 1;
      236    13210    3              DO NEVER;
      237    13211    3   SAVETHISRES:
      238    13212    3                 J = J+1;
      239    13213    3              END;
      240    13214    2     END;
      241    13215        /*
      242    13216             ***** PSEUDO resources ...
      243    13217        */
      244    13218    1     J = 0;
      245    13219    2     DO WHILE (J < CUR_PSEUDO.NN#);
      246    13220    3        DO I = 0 TO REQ_PSEUDO.NN#-1;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:10   
      247    13221    3           IF (CUR_PSEUDO.PSLIST.PSEUDO#(J) = REQ_PSEUDO.PSLIST.PSEUDO#(I))
      248    13222
      249    13223    3              THEN GOTO SAVETHISPSEUDO;
      250    13224    3        END;
      251    13225    3        DO I = J TO CUR_PSEUDO.NN#-1;
      252    13226    3           CUR_PSEUDO.PSLIST(I) = CUR_PSEUDO.PSLIST(I+1);
      253    13227    3        END;
      254    13228    2        CUR_PSEUDO.NN# = CUR_PSEUDO.NN# - 1;
      255    13229    2        IF (%NO#)
      256    13230
      257    13231    2           THEN
      258    13232    2   SAVETHISPSEUDO:
      259    13233    3              DO;
      260    13234    3                 J = J+1;
      261    13235    3              END;
      262    13236    2     END;
      263    13237        /*
      264    13238           *** If no shared packsets named on command then ignore all shared
      265    13239               packsets - and ditto for exclusive packsets
      266    13240        */
      267    13241        /**/
      268    13242    1     NO_SHARED = %YES#;
      269    13243    1     NO_EXCLUSIVE = %YES#;
      270    13244        /**/
      271    13245    2     DO I = 0 TO REQ_PSN.NN#-1;
      272    13246    2        IF REQ_PSN.RPLIST.USAGE#(I) = %EXCLUSIVE#
      273    13247
      274    13248    2           THEN
      275    13249    2              NO_EXCLUSIVE = %NO#;
      276    13250    2           ELSE
      277    13251    2              NO_SHARED = %NO#;
      278    13252    2     END;
      279    13253        /**/
      280    13254    1     IF (NO_SHARED)OR(NO_EXCLUSIVE)
      281    13255
      282    13256    1        THEN
      283    13257    2           DO;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:11   
      284    13258    2              J = 0;
      285    13259    3              DO WHILE (J < CUR_PSN.NN#);
      286    13260    3                 IF ((NO_SHARED)AND
      287    13261    3                      (CUR_PSN.RPLIST.USAGE#(J) = %SHARED#))OR
      288    13262    3                      ((NO_EXCLUSIVE)AND
      289    13263    3                      (CUR_PSN.RPLIST.USAGE#(J) = %EXCLUSIVE#))
      290    13264
      291    13265    3                    THEN
      292    13266    4                       DO;
      293    13267    5                          DO I = J TO CUR_PSN.NN#-1;
      294    13268    5                             CUR_PSN.RPLIST.PSN#(I) = CUR_PSN.RPLIST.PSN#(I+1);
      295    13269    5                          END;
      296    13270    4                          CUR_PSN.NN# = CUR_PSN.NN# - 1;
      297    13271    4                       END;
      298    13272    3                    ELSE
      299    13273    3                       J = J + 1;
      300    13274    3              END;
      301    13275    2           END;
      302    13276        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:12   
      303    13277        /*
      304    13278             ***** If the user already has a resource that he
      305    13279                   requested on the ORES command (and it has same attributes)
      306    13280                   then there is no need to acquire it. Delete this
      307    13281                   entry in the REQUEST list ...
      308    13282        */
      309    13283        /*
      310    13284             ***** Process PHYSICAL resources ...
      311    13285        */
      312    13286    1     I = 0;
      313    13287    2     DO WHILE (I < REQ_RES.NN#);
      314    13288    2        J = 0;
      315    13289    2        K = 0;
      316    13290    3        DO WHILE (J < CUR_RES.NN#);
      317    13291    3           IF (CUR_RES.PRLIST.RNAME#(J) = REQ_RES.PRLIST.RNAME#(J))
      318    13292    3           AND ((CUR_RES.PRLIST.ATTR#(J) = REQ_RES.PRLIST.ATTR#(I))
      319    13293    3           OR (REQ_RES.PRLIST.ATTR#(I) = '0'O))
      320    13294    3              THEN   /* This resource already exists */
      321    13295    4                 DO;   /* No need to ACQUIRE this resource */
      322    13296    5                    DO K = I TO REQ_RES.NN#-1;
      323    13297    5                       REQ_RES.PRLIST(K) = REQ_RES.PRLIST(K+1);
      324    13298    5                    END;
      325    13299    5                    DO K = J TO CUR_RES.NN#-1;
      326    13300    5                       CUR_RES.PRLIST(K) = CUR_RES.PRLIST(K+1);
      327    13301    5                    END;
      328    13302    4                    CUR_RES.NN# = CUR_RES.NN# - 1;
      329    13303    4                    REQ_RES.NN# = REQ_RES.NN# - 1;
      330    13304    4                    K = -1;                /* Flag */
      331    13305    4                    J = CUR_RES.NN#;       /* Stop this loop */
      332    13306    4                 END;
      333    13307    3              ELSE
      334    13308    3                 J = J + 1;
      335    13309    3        END;
      336    13310    2        IF (K ~= -1)
      337    13311
      338    13312    2           THEN
      339    13313    2              I = I + 1;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:13   
      340    13314    2     END;
      341    13315        /*
      342    13316             ***** PSEUDO resources ...
      343    13317        */
      344    13318    1     I = 0;
      345    13319    2     DO WHILE (I < REQ_PSEUDO.NN#);
      346    13320    2        J = 0;
      347    13321    2        K = 0;
      348    13322    3        DO WHILE (J < CUR_PSEUDO.NN#);
      349    13323    3           IF (REQ_PSEUDO.PSLIST.PSEUDO#(I) = CUR_PSEUDO.PSLIST.PSEUDO#(J))
      350    13324
      351    13325    3              THEN
      352    13326    4                 DO;
      353    13327    4                    IF (REQ_PSEUDO.PSLIST.NUM#(I) = CUR_PSEUDO.PSLIST.NUM#(J))
      354    13328
      355    13329    4                       THEN
      356    13330    5                          DO;
      357    13331    6                             DO K = I TO REQ_PSEUDO.NN#-1;
      358    13332    6                                REQ_PSEUDO.PSLIST(K) = REQ_PSEUDO.PSLIST(K+1);
      359    13333    6                             END;
      360    13334    6                             DO K = J TO CUR_PSEUDO.NN#-1;
      361    13335    6                                CUR_PSEUDO.PSLIST(K) = CUR_PSEUDO.PSLIST(K+1);
      362    13336    6                             END;
      363    13337    5                             CUR_PSEUDO.NN# = CUR_PSEUDO.NN# - 1;
      364    13338    5                             REQ_PSEUDO.NN# = REQ_PSEUDO.NN# - 1;
      365    13339    5                             K = -1;             /* Flag */
      366    13340    5                             J = CUR_PSEUDO.NN#;
      367    13341    5                          END;
      368    13342        /**/
      369    13343    4                       ELSE
      370    13344    4                          IF (REQ_PSEUDO.PSLIST.NUM#(I) > CUR_PSEUDO.PSLIST.NUM#(J))
      371    13345
      372    13346    4                             THEN
      373    13347    5                                DO;
      374    13348    5                                   REQ_PSEUDO.PSLIST.NUM#(I) =
      375    13349    5                                        REQ_PSEUDO.PSLIST.NUM#(I) - CUR_PSEUDO.PSLIST.
             13349                                                 NUM#(J);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:14   
      376    13350    6                                   DO K = J TO CUR_PSEUDO.NN#-1;
      377    13351    6                                      CUR_PSEUDO.PSLIST(K) = CUR_PSEUDO.PSLIST(K+1);
      378    13352    6                                   END;
      379    13353    5                                   CUR_PSEUDO.NN# = CUR_PSEUDO.NN# - 1;
      380    13354    5                                   K = -2;
      381    13355    5                                   J = CUR_PSEUDO.NN#;
      382    13356    5                                END;
      383    13357        /**/
      384    13358    4                             ELSE
      385    13359    5                                DO;            /* Cur > req - release */
      386    13360    5                                   CUR_PSEUDO.PSLIST.NUM#(J) =
      387    13361    5                                        CUR_PSEUDO.PSLIST.NUM#(J) - REQ_PSEUDO.PSLIST.
             13361                                                 NUM#(I);
      388    13362    6                                   DO K = I TO REQ_PSEUDO.NN#-1;
      389    13363    6                                      REQ_PSEUDO.PSLIST(K) = REQ_PSEUDO.PSLIST(K+1);
      390    13364    6                                   END;
      391    13365    5                                   REQ_PSEUDO.NN# = REQ_PSEUDO.NN# - 1;
      392    13366    5                                   K = -3;
      393    13367    5                                   J = CUR_PSEUDO.NN#;
      394    13368    5                                END;
      395    13369    4                 END;
      396    13370    3              ELSE
      397    13371    3                 J = J + 1;
      398    13372    3        END;
      399    13373    2        IF (K ~= -1)AND(K ~= -3)
      400    13374
      401    13375    2           THEN
      402    13376    2              I = I + 1; /* Didnt delete a slot */
      403    13377    2     END;
      404    13378        /*
      405    13379           ***  Delete duplicate packsets - already have them
      406    13380        */
      407    13381        /**/
      408    13382    1     I = 0;
      409    13383    2     DO WHILE (I < REQ_PSN.NN#);
      410    13384    2        J = 0;
      411    13385    2        K = 0;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:15   
      412    13386    3        DO WHILE (J < CUR_PSN.NN#);
      413    13387    3           IF (CUR_PSN.RPLIST.PSN#(J) = REQ_PSN.RPLIST.PSN#(I))AND
      414    13388    3                (CUR_PSN.RPLIST.USAGE#(J) = REQ_PSN.RPLIST.USAGE#(I))
      415    13389
      416    13390    3              THEN
      417    13391    4                 DO;
      418    13392    5                    DO K = I TO REQ_PSN.NN#-1;
      419    13393    5                       REQ_PSN.RPLIST(K) = REQ_PSN.RPLIST(K+1);
      420    13394    5                    END;
      421    13395    5                    DO K = J TO CUR_PSN.NN#-1;
      422    13396    5                       CUR_PSN.RPLIST(K) = CUR_PSN.RPLIST(K+1);
      423    13397    5                    END;
      424    13398    4                    CUR_PSN.NN# = CUR_PSN.NN# - 1;
      425    13399    4                    REQ_PSN.NN# = REQ_PSN.NN# - 1;
      426    13400    4                    K = -1;
      427    13401    4                    J = CUR_PSN.NN#;
      428    13402    4                 END;
      429    13403    3              ELSE
      430    13404    3                 J = J + 1;
      431    13405    3        END;
      432    13406    2        IF (K ~= -1)
      433    13407
      434    13408    2           THEN
      435    13409    2              I = I + 1;
      436    13410    2     END;
      437    13411        /**/
      438    13412        /*
      439    13413           ***  Validate the time and store it away.
      440    13414        */
      441    13415        /**/
      442    13416        /**/
      443    13417    1     IF JOB_TBL.TIM ~= 0
      444    13418
      445    13419    1        THEN
      446    13420    2           DO;
      447    13421    2              CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(OPENS_ERR);
      448    13422    2              CALL CPJ$READ_S(M$IBEX1_NUM,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:16   
      449    13423    2                   ALTRET(READS_ERR);
      450    13424    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TIME);
      451    13425        /**/
      452    13426    2              IF JOB_TBL.TIM < CP_LIMREC.CUMUL.MRT
      453    13427
      454    13428    2                 THEN
      455    13429    3                    DO;
      456    13430    3                       CALL CPC$WRITEMSGE(E_SMALLTIME,,,,,%YES#);
      457    13431    3                       GOTO CLOSE_S;
      458    13432    3                    END;
      459    13433        /**/
      460    13434    2              CP_LIMREC.CUR_MAX.MRT = JOB_TBL.TIM - CP_LIMREC.CUMUL.MRT;
      461    13435    2              CP_LIMREC.USER_MAX.MRT = JOB_TBL.TIM; /* Set for !LIMIT check */
      462    13436    2              B$JIT.MRT = JOB_TBL.TIM;
      463    13437        /**/
      464    13438    2              CALL CPJ$WRITE_S (M$IBEX1_NUM,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))
      465    13439    2                   ALTRET(WRITES_ERR);
      466    13440    2              SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP# = %SAVE#;
      467    13441    2              SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB# = M$IBEX1_NUM;
      468    13442    2              CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);
      469    13443    2              SEG$2.FPT_WRITE$ -> FPT$WRITE.BUF_.BUF$ = OUT$;
      470    13444    2           END;
      471    13445        /**/
      472    13446        /*
      473    13447           ***  Calculate whether to get or release memory.
      474    13448        */
      475    13449        /**/
      476    13450    1     IF JOB_TBL.RRT(JM_RX$MEM) ~= 0
      477    13451
      478    13452    1        THEN
      479    13453    2           DO;
      480    13454    2              IF JOB_TBL.RRT(JM_RX$MEM) > CUR_PSEUDO.MEMORY#
      481    13455
      482    13456    2                 THEN
      483    13457    3                    DO;
      484    13458    3                       REQ_PSEUDO.MEMORY# = JOB_TBL.RRT(JM_RX$MEM) - CUR_PSEUDO.MEMORY#
             13458                                ;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:17   
      485    13459    3                       CUR_PSEUDO.MEMORY# = 0;
      486    13460    3                    END;
      487    13461    2                 ELSE
      488    13462    3                    DO;
      489    13463    3                       CUR_PSEUDO.MEMORY# = CUR_PSEUDO.MEMORY# - JOB_TBL.RRT(JM_RX$MEM)
             13463                                ;
      490    13464    3                       REQ_PSEUDO.MEMORY# = 0;
      491    13465    3                    END;
      492    13466    2           END;
      493    13467    1        ELSE
      494    13468    2           DO;
      495    13469    2              CUR_PSEUDO.MEMORY# = 0;
      496    13470    2              REQ_PSEUDO.MEMORY# = 0;
      497    13471    2           END;
      498    13472        /**/
      499    13473    1     CALL PROCESS_RES_LISTS ALTRET(E_ORES);
      500    13474    1     RETURN;
      501    13475        /**/
      502    13476    1   E_ORES:
      503    13477    1     ALTRETURN;
      504    13478        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:18   
      505    13479        /*F*    NAME: CPO$ACQUIRE
      506    13480                PURPOSE: To acquire specified resources. Valid only ONLINE.
      507    13481        */
      508    13482    1   CPO$ACQUIRE: ENTRY (P$PCB) ALTRET;
      509    13483        /*
      510    13484             ***** Initialize some local variables ...
      511    13485        */
      512    13486    1     CALL INIT_LOCAL_VARIABLES;
      513    13487        /*
      514    13488             ***** Build the list of resources to acquire ...
      515    13489        */
      516    13490    1     CALL BUILD_RES_LIST ALTRET(E_ACQUIRE);
      517    13491        /*
      518    13492             ***** Get the list of resources currently owned ...
      519    13493        */
      520    13494    1     CALL GET_CUR_RESLIST ALTRET(E_ACQUIRE);
      521    13495        /*
      522    13496             ***** Build the ACQUIRE LIST ...
      523    13497        */
      524    13498    1     IF JOB_TBL.RRT(JM_RX$MEM) ~= 0
      525    13499
      526    13500    1        THEN
      527    13501    1           REQ_PSEUDO.MEMORY# = JOB_TBL.RRT(JM_RX$MEM);
      528    13502    1        ELSE
      529    13503    1           REQ_PSEUDO.MEMORY# = 0;
      530    13504        /**/
      531    13505    1     IF JOB_TBL.TIM ~= 0
      532    13506
      533    13507    1        THEN
      534    13508    2           DO;
      535    13509        /**/
      536    13510    2              CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(OPENS_ERR);
      537    13511    2              CALL CPJ$READ_S(M$IBEX1_NUM,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))
      538    13512    2                   ALTRET(READS_ERR);
      539    13513        /**/
      540    13514    2              IF (SEG$2.USERS$ -> AS$USERS.MTIME(B$JIT.MODE-1) <
      541    13515    2                   CP_LIMREC.USER_MAX.MRT + JOB_TBL.TIM)
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:19   
      542    13516
      543    13517    2                 THEN
      544    13518    3                    DO;
      545    13519    3                       CALL CPC$WRITEMSGE(E_BIGTIME,,,,%YES#);
      546    13520    3                       GOTO CLOSE_S;
      547    13521    3                    END;
      548    13522        /**/
      549    13523    2              CP_LIMREC.CUR_MAX.MRT = CP_LIMREC.CUR_MAX.MRT + JOB_TBL.TIM;
      550    13524    2              CP_LIMREC.USER_MAX.MRT = CP_LIMREC.USER_MAX.MRT + JOB_TBL.TIM;
      551    13525    2              B$JIT.MRT = B$JIT.MRT + JOB_TBL.TIM;
      552    13526        /**/
      553    13527    2              CALL CPJ$WRITE_S (M$IBEX1_NUM,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))
      554    13528    2                   ALTRET(WRITES_ERR);
      555    13529    2              SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP# = %SAVE#;
      556    13530    2              SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB# = M$IBEX1_NUM;
      557    13531    2              CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);
      558    13532    2              SEG$2.FPT_WRITE$ -> FPT$WRITE.BUF_.BUF$ = OUT$;
      559    13533    2           END;
      560    13534        /**/
      561    13535        /*
      562    13536           ***  Search the requested list for resources with the same name as
      563    13537                existing resources - these are illegal.  At the same time, adjust
      564    13538                non-explicit resourcename numbers to avoid existing resources.
      565    13539        */
      566    13540        /**/
      567    13541    1     I = 0;
      568    13542    1     J = 0;
      569    13543    2   ACQ_1:  DO WHILE '1'B;
      570    13544        /*
      571    13545             ***** Both tables are sorted, so just look forward until one ends.
      572    13546        */
      573    13547    3        DO WHILE '1'B; /* skip to the next problem */
      574    13548    3           IF J>=CUR_RES.NN# OR I>=REQ_RES.NN# THEN EXIT ACQ_1; /* all done */
      575    13549    3           IF CUR_RES.PRLIST.RNAME#(J)=REQ_RES.PRLIST.RNAME#(I) THEN EXIT;
      576    13550    3           IF CUR_RES.PRLIST.RNAME#(J)>REQ_RES.PRLIST.RNAME#(I)
      577    13551
      578    13552    3              THEN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:20   
      579    13553    3                 I = I+1;
      580    13554    3              ELSE
      581    13555    3                 J = J+1;
      582    13556    3        END;
      583    13557    2        IF REQ_RES.PRLIST.RAT$(I)=ADDR(NIL) /* if explicit name, it's an error */
      584    13558
      585    13559    2              THEN
      586    13560    3                 DO;
      587    13561    3                    ERR_TEXT.L# = SIZEC(REQ_RES.PRLIST.RNAME#(I));
      588    13562    3                    ERR_TEXT.NAME# = REQ_RES.PRLIST.RNAME#(I);
      589    13563    3                    CALL CPC$WRITEMSGE(E_ACQDUPRES,,ERR_TEXT,,,%YES#);
      590    13564    3                    ALTRETURN;
      591    13565    3                 END;
      592    13566        /*
      593    13567             ***** Otherwise, increment the nn part until it doesn't conflict.
      594    13568        */
      595    13569    2        K = I;
      596    13570    3        DO WHILE '1'B;
      597    13571    3           IF SUBSTR(REQ_RES.PRLIST.RNME.NUM(K),1,1)<'9'
      598    13572
      599    13573    3              THEN
      600    13574    3                 ADDR(REQ_RES.PRLIST(K))->B$SBIN =
      601    13575    3                      ADDR(REQ_RES.PRLIST(K))->B$SBIN + 1;
      602    13576    3              ELSE
      603    13577    3                 ADDR(REQ_RES.PRLIST(K))->B$SBIN =
      604    13578    3                      ADDR(REQ_RES.PRLIST(K))->B$SBIN + 503;
      605    13579    3           IF REQ_RES.PRLIST.RNAME#(K)=REQ_RES.PRLIST.RNAME#(K+1)
      606    13580
      607    13581    3              THEN
      608    13582    3                 IF REQ_RES.PRLIST.RAT$(K+1)=ADDR(NIL)
      609    13583
      610    13584    3                    THEN      /* ran into an explicit one ... */
      611    13585    4                       DO;    /* move past it, and increment again */
      612    13586    4                          CUR_RES.PRLIST(0) = REQ_RES.PRLIST(K);
      613    13587    4                          REQ_RES.PRLIST(K) = REQ_RES.PRLIST(K+1);
      614    13588    4                          REQ_RES.PRLIST(K+1) = CUR_RES.PRLIST(0);
      615    13589    4                       END;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:21   
      616    13590    3                    ELSE      /* ran into an adjustable one ... */
      617    13591    3                       K = K+1; /* take its place, and increment it. */
      618    13592    3              ELSE
      619    13593    3                 EXIT;  /* Found a free one, check it against what we have */
      620    13594    3        END;
      621    13595    2     END;
      622    13596        /**/
      623    13597        /*
      624    13598           ***  Search the requested list for packsets with the same name as
      625    13599                existing packsets - these are illegal.
      626    13600        */
      627    13601        /**/
      628    13602    2     DO I = 0 TO REQ_PSN.NN#-1;
      629    13603    3        DO J = 0 TO CUR_PSN.NN#-1;
      630    13604    3           IF (CUR_PSN.RPLIST.PSN#(J) = REQ_PSN.RPLIST.PSN#(I))
      631    13605
      632    13606    3              THEN
      633    13607    4                 DO;
      634    13608    4                    ERR_TEXT.L# = SIZEC(REQ_PSN.RPLIST.PSN#(I));
      635    13609    4                    ERR_TEXT.NAME# = REQ_PSN.RPLIST.PSN#(I);
      636    13610    4                    CALL CPC$WRITEMSGE(E_ACQDUPPSN,,ERR_TEXT,,,%YES#);
      637    13611    4                    ALTRETURN;
      638    13612    4                 END;
      639    13613    3        END;
      640    13614    2     END;
      641    13615        /*
      642    13616             ***** Since this is a ACQUIRE command, we do not want
      643    13617                   to release any current resources ...
      644    13618        */
      645    13619    1     CUR_RES.NN# = 0;
      646    13620    1     CUR_PSEUDO.NN# = 0;
      647    13621    1     CUR_PSN.NN# = 0;
      648    13622    1     CUR_PSEUDO.MEMORY# = 0;
      649    13623        /**/
      650    13624    1     CALL PROCESS_RES_LISTS ALTRET(E_ACQUIRE);
      651    13625    1     RETURN;
      652    13626        /**/
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:22   
      653    13627    1   E_ACQUIRE:
      654    13628    1     ALTRETURN;
      655    13629        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:23   
      656    13630        /*F*    NAME: CPO$RELEASE
      657    13631                PURPOSE: To release specified resources back to the system.
      658    13632        */
      659    13633    1   CPO$RELEASE: ENTRY (P$PCB) ALTRET;
      660    13634        /*
      661    13635             ***** Initialize some local variables ...
      662    13636        */
      663    13637    1     CALL INIT_LOCAL_VARIABLES;
      664    13638        /*
      665    13639             ***** Build the list of resources to release ...
      666    13640        */
      667    13641    1     CALL BUILD_RES_LIST ALTRET(E_RELEASE);
      668    13642        /*
      669    13643             ***** Get the list of resources currently owned ...
      670    13644        */
      671    13645    1     CALL GET_CUR_RESLIST ALTRET(E_RELEASE);
      672    13646        /**/
      673    13647    1     IF JOB_TBL.RRT(JM_RX$MEM) ~= 0
      674    13648
      675    13649    1        THEN
      676    13650    1           REQ_PSEUDO.MEMORY# = JOB_TBL.RRT(JM_RX$MEM);
      677    13651    1        ELSE
      678    13652    1           REQ_PSEUDO.MEMORY# = 0;
      679    13653        /**/
      680    13654    1     IF NOT RELEASE_ALL#
      681    13655    1        THEN
      682    13656    2           DO;   /* Setup which ones to RELEASE */
      683    13657        /*
      684    13658             First, for things like MT=2, use the highest dd values instead of
      685    13659             the lowest.  The initial pass eliminates explicitly specified ones from
      686    13660             the list of current resources.
      687    13661        */
      688    13662    3              DO I=0 TO REQ_RES.NN#-1;
      689    13663    4                 DO J=0 TO CUR_RES.NN#-1;
      690    13664    4                    IF REQ_RES.PRLIST.RNAME#(I)=CUR_RES.PRLIST.RNAME#(J)
      691    13665    4                         AND REQ_RES.PRLIST.RAT$(I)=ADDR(NIL) /* Explicit RRnn */
      692    13666
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:24   
      693    13667    4                       THEN
      694    13668    5                          DO;
      695    13669
      696    13670    5                             CUR_RES.PRLIST(J)=CUR_RES.PRLIST(J+1);
      697    13671    5                             CUR_RES.PRLIST(J+1)=REQ_RES.PRLIST(I);
      698    13672    5                             IF J=CUR_RES.NN#-1
      699    13673    5                                THEN
      700    13674
      701    13675    5                                   CUR_RES.NN# = J;
      702    13676    5                          END;
      703    13677    4                 END;
      704    13678    3              END;
      705    13679        /*
      706    13680             Then go through assigning real names to the implicit ones.
      707    13681        */
      708    13682    3              DO WHILE I>0;
      709    13683    3                 I = I-1;
      710    13684    3                 J = CUR_RES.NN#;
      711    13685    4                 DO WHILE '1'B;
      712    13686    4                    IF REQ_RES.PRLIST.RAT$(I)=ADDR(NIL)
      713    13687
      714    13688    4                       THEN
      715    13689    4                          J = 0;
      716    13690    4                    J = J-1;
      717    13691    4                    IF J<0 THEN EXIT;
      718    13692    4                    IF REQ_RES.PRLIST.RNME.TYP(I)=CUR_RES.PRLIST.RNME.TYP(J)
      719    13693    4                         AND (REQ_RES.PRLIST.ATTR#(I)=CUR_RES.PRLIST.ATTR#(J)
      720    13694    4                         OR REQ_RES.PRLIST.ATTR#(I)='0'B)
      721    13695
      722    13696    4                       THEN
      723    13697    5                          DO;
      724    13698    5                             REQ_RES.PRLIST(I) = CUR_RES.PRLIST(J);
      725    13699    5                             CUR_RES.PRLIST.RNME.TYP(J) = 'B';
      726    13700    5                             J=0;
      727    13701    5                          END;
      728    13702    4                 END;
      729    13703    3              END;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:25   
      730    13704        /*
      731    13705             Build the RELASE list ...
      732    13706             If the number of each resource to release was
      733    13707             was not specified, then BUILD_RES_LIST assumed all
      734    13708             and filed in 99999. Determine the real number ...
      735    13709        */
      736    13710    3              DO I=0 TO VIRT_TBL.COUNT - 1;
      737    13711    3                 IF VIRT_TBL.RES.NUM(I) = 99999
      738    13712
      739    13713    3                    THEN
      740    13714    4                       DO J = 0 TO CUR_RES.NN#-1;
      741    13715    4                          IF CUR_RES.PRLIST.RNME.TYP(J)=VIRT_TBL.RES.TYPE(I) AND
      742    13716    4                              (VIRT_TBL.RES.ATTRS(I)='0'B
      743    13717    4                              OR CUR_RES.PRLIST.ATTR#(J)=VIRT_TBL.RES.ATTRS(I))
      744    13718
      745    13719    4                             THEN
      746    13720    5                                DO;
      747    13721    5                                   REQ_RES.PRLIST(REQ_RES.NN#) = CUR_RES.PRLIST(J);
      748    13722    5                                   REQ_RES.NN# = REQ_RES.NN# + 1;
      749    13723    5                                END;
      750    13724    4                       END;
      751    13725    3              END;
      752    13726        /*
      753    13727             Now copy the actual packset usages to the requests, so that the display
      754    13728             tells the truth.
      755    13729        */
      756    13730    3              DO I=0 TO REQ_PSN.NN#-1;
      757    13731    4                 DO J=0 TO CUR_PSN.NN#-1;
      758    13732    4                    IF REQ_PSN.RPLIST.PSN#(I)=CUR_PSN.RPLIST.PSN#(J)
      759    13733
      760    13734    4                       THEN
      761    13735    4                          REQ_PSN.RPLIST.USAGE#(I)=CUR_PSN.RPLIST.USAGE#(J);
      762    13736    4                 END;
      763    13737    3              END;
      764    13738    2              CUR_RES = REQ_RES;
      765    13739    2              CUR_PSEUDO = REQ_PSEUDO;
      766    13740    2              CUR_PSN = REQ_PSN;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:26   
      767    13741    2           END;
      768    13742        /*
      769    13743             ***** Since this is a RELEASE command, we do not want
      770    13744                   to GET any new resources ...
      771    13745        */
      772    13746    1     REQ_RES.NN# = 0;
      773    13747    1     REQ_PSEUDO.NN# = 0;
      774    13748    1     REQ_PSN.NN# = 0;
      775    13749    1     REQ_PSEUDO.MEMORY# = 0;
      776    13750        /*
      777    13751             ***** Now that we have all these lists built,
      778    13752                   do something with them ...
      779    13753        */
      780    13754    1     CALL PROCESS_RES_LISTS ALTRET(E_RELEASE);
      781    13755    1     RETURN;
      782    13756        /**/
      783    13757    1   E_RELEASE:
      784    13758    1     ALTRETURN;
      785    13759        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:27   
      786    13760        /*
      787    13761          ***** Common labels ...
      788    13762        */
      789    13763        /**/
      790    13764    1   OPENS_ERR:
      791    13765    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;
      792    13766    1     ALTRETURN;
      793    13767    1   READS_ERR: ;
      794    13768    1   WRITES_ERR: ;
      795    13769    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;
      796    13770    1   CLOSE_S:
      797    13771    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP# = %SAVE#;
      798    13772    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB# = M$IBEX1_NUM;
      799    13773    1     CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);
      800    13774    1     ALTRETURN;
      801    13775        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:28   
      802    13776    1   PROCESS_RES_LISTS: PROC ALTRET;
      803    13777        /**/
      804    13778        /*
      805    13779          *** Release leftover resources
      806    13780        */
      807    13781        /*
      808    13782             ***** If there is something to release
      809    13783                   then RELEASE IT! ...
      810    13784        */
      811    13785    2     IF (CUR_RES.NN# ~= 0)OR
      812    13786    2          (CUR_PSEUDO.NN# ~= 0)OR
      813    13787    2          (CUR_PSN.NN# ~= 0)OR
      814    13788    2          (CUR_PSEUDO.MEMORY# ~= 0)OR
      815    13789    2          (RELEASE_ALL#)
      816    13790    2        THEN
      817    13791    3           DO;
      818    13792        /*
      819    13793             ***** Save a list of what is to be released ...
      820    13794        */
      821    13795    3              SAVE_PSN = CUR_PSN;
      822    13796    3              SAVE_PSEUDO = CUR_PSEUDO;
      823    13797    3              SAVE_RES = CUR_RES;
      824    13798        /*
      825    13799             ***** Release the resources ...
      826    13800        */
      827    13801    3              FPT_RESCTL = CFPT_RESCTL;
      828    13802    3              FPT_RESCTL.V_ =
      829    13803    3                   VECTOR(FPT_RESCTL.V);
      830    13804    3              FPT_RESCTL.PRES_ = VECTOR(CUR_RES);
      831    13805    3              FPT_RESCTL.PSEUDO_ = VECTOR(CUR_PSEUDO);
      832    13806    3              FPT_RESCTL.RPSN_ = VECTOR(CUR_PSN);
      833    13807    3              IF (RELEASE_ALL#)
      834    13808    3                 THEN
      835    13809    3                    FPT_RESCTL.V.RELALL# = %YES#;
      836    13810        /**/
      837    13811    3              CALL M$RELRES(FPT_RESCTL) ALTRET (RELRES_ERR);
      838    13812        /**/
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:29   
      839    13813        /*
      840    13814           ***  Tell the user what resources got released. Set JIT.OLTA if
      841    13815                either MT01 or MT02 got released.
      842    13816        */
      843    13817        /**/
      844    13818    3   RELRESINFO:
      845    13819        /**/
      846    13820    4              DO I = 0 TO SAVE_RES.NN#-1;
      847    13821    4                 IF (SAVE_RES.PRLIST.RNAME#(I) = 'MT01')
      848    13822    4                    THEN
      849    13823    4                       B$JIT.OLTA(0) = %YES#;
      850    13824    4                 IF (SAVE_RES.PRLIST.RNAME#(I) = 'MT02')
      851    13825    4                    THEN
      852    13826    4                       B$JIT.OLTA(1) = %YES#;
      853    13827    4              END;
      854    13828        /*
      855    13829             ***** Match up ATTR# for released physical resources ...
      856    13830        */
      857    13831    4              DO J = 0 TO SAVE_RES.NN# -1;
      858    13832    5                 DO I = 0 TO ATTR_RES.NN# -1;
      859    13833    5                    IF SAVE_RES.PRLIST.RNAME#(J) = ATTR_RES.PRLIST.RNAME#(I)
      860    13834    5                       THEN
      861    13835    5                          SAVE_RES.PRLIST.ATTR#(J) = ATTR_RES.PRLIST.ATTR#(I);
      862    13836    5                 END; /* do i= ... end */
      863    13837    4              END; /* do j= ... end */
      864    13838        /*
      865    13839             ***** Print RESOURCES RELEASED hdr ...
      866    13840        */
      867    13841    3              OUTBUF = ' ';
      868    13842    3              FCB.FMT_ = VECTOR(RELEASE_HDR);
      869    13843    3              FCB.NVECS# = 0;
      870    13844    3              CALL X$FORMAT (FCB);
      871    13845        /*
      872    13846             ***** Format what resources were released ...
      873    13847        */
      874    13848    3              CALL DI_RESOURCES(SAVE_PSEUDO,SAVE_RES,SAVE_PSN) ALTRET(E_SUBR);
      875    13849    3           END;   /* Release resources */
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:30   
      876    13850        /*
      877    13851          *** Get requested resources
      878    13852        */
      879    13853        /**/
      880    13854    2   GET_RES:
      881    13855    2     IF (REQ_RES.NN# ~= 0)OR
      882    13856    2          (REQ_PSEUDO.NN# ~= 0)OR
      883    13857    2          (REQ_PSN.NN# ~= 0)OR
      884    13858    2          (REQ_PSEUDO.MEMORY# ~= 0)
      885    13859    2        THEN
      886    13860    3           DO;   /* Get resources */
      887    13861    3              FPT_RESCTL = CFPT_RESCTL;
      888    13862    3              FPT_RESCTL.V_ =
      889    13863    3                   VECTOR(FPT_RESCTL.V);
      890    13864    3              FPT_RESCTL.PRES_ = VECTOR(REQ_RES);
      891    13865    3              FPT_RESCTL.PSEUDO_ = VECTOR(REQ_PSEUDO);
      892    13866    3              FPT_RESCTL.RPSN_ = VECTOR(REQ_PSN);
      893    13867        /**/
      894    13868    3              CALL M$LIMIT(FPT_RESCTL) ALTRET (LIMIT_ERR);
      895    13869        /**/
      896    13870        /*
      897    13871           ***  Tell the user what we acquired. Reset JIT.OLTA bits.
      898    13872        */
      899    13873        /**/
      900    13874    4              DO I = 0 TO REQ_RES.NN#-1;
      901    13875    4                 IF (REQ_RES.PRLIST.RNAME#(I) = 'MT01')
      902    13876    4                    THEN
      903    13877    4                       B$JIT.OLTA(0) = %NO#;
      904    13878    4                 IF (REQ_RES.PRLIST.RNAME#(I) = 'MT02')
      905    13879    4                    THEN
      906    13880    4                       B$JIT.OLTA(1) = %NO#;
      907    13881    4              END;
      908    13882        /*
      909    13883             ***** Get the ATTR# for physical resources...
      910    13884        */
      911    13885    3              FPT_RESCTL.PRES_ = VECTOR(ATTR_RES);
      912    13886    3              FPT_RESCTL.PSEUDO_ = VECTOR(NIL);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:31   
      913    13887    3              FPT_RESCTL.RPSN_ = VECTOR(NIL);
      914    13888    3              CALL M$DISPRES (FPT_RESCTL) ALTRET(E_PMME);
      915    13889        /**/
      916    13890    4              DO J = 0 TO REQ_RES.NN# -1;
      917    13891    5                 DO I = 0 TO ATTR_RES.NN# -1;
      918    13892    5                    IF REQ_RES.PRLIST.RNAME#(J) = ATTR_RES.PRLIST.RNAME#(I)
      919    13893    5                       THEN
      920    13894    5                          REQ_RES.PRLIST.ATTR#(J) = ATTR_RES.PRLIST.ATTR#(I);
      921    13895    5                 END; /* do i= ... end */
      922    13896    4              END; /* do j= ... end */
      923    13897        /*
      924    13898             ***** Print RESOURCES ACQUIRED hdr ...
      925    13899        */
      926    13900    3              OUTBUF = ' ';
      927    13901    3              FCB.FMT_ = VECTOR(ACQUIRE_HDR);
      928    13902    3              FCB.NVECS# = 0;
      929    13903    3              CALL X$FORMAT (FCB);
      930    13904        /*
      931    13905             ***** Format what resources were acquired ...
      932    13906        */
      933    13907    3              CALL DI_RESOURCES(REQ_PSEUDO,REQ_RES,REQ_PSN) ALTRET (E_SUBR);
      934    13908    3           END;   /* Get resources */
      935    13909        /**/
      936    13910    2     RETURN;
      937    13911        /**/
      938    13912    2   RELRES_ERR:
      939    13913    2     CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$ALT.ERR);
      940    13914        /**/
      941    13915        /*
      942    13916             ***** Print CANT RELEASE THESE RESOURCES hdr ...
      943    13917        */
      944    13918    2     OUTBUF = ' ';
      945    13919    2     FCB.FMT_ = VECTOR(CANTRELEASE_HDR);
      946    13920    2     FCB.NVECS# = 0;
      947    13921    2     CALL X$FORMAT (FCB);
      948    13922        /*
      949    13923             ***** Format what resources couldn't be released ...
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:32   
      950    13924        */
      951    13925    2     CALL DI_RESOURCES(CUR_PSEUDO,CUR_RES,CUR_PSN) ALTRET (E_SUBR);
      952    13926        /**/
      953    13927        /*
      954    13928           ***  Delete the resources that we couldn't release from the
      955    13929                list of what we tried to release and display what we did.
      956    13930        */
      957    13931        /**/
      958    13932    3     DO I=0 TO CUR_RES.NN#-1;
      959    13933    3        J = 0;
      960    13934    4        DO WHILE (J < SAVE_RES.NN#);
      961    13935    4           IF (SAVE_RES.PRLIST.RNAME#(J) = CUR_RES.PRLIST.RNAME#(I))
      962    13936
      963    13937    4              THEN
      964    13938    5                 DO;
      965    13939    5                    SAVE_RES.NN# = SAVE_RES.NN# - 1;
      966    13940    6                    DO K = J TO SAVE_RES.NN#-1;
      967    13941    6                       SAVE_RES.PRLIST(K) = SAVE_RES.PRLIST(K+1);
      968    13942    6                    END;
      969    13943    5                    J = SAVE_RES.NN#;
      970    13944    5                 END;
      971    13945    4              J = J + 1;
      972    13946    4        END;
      973    13947    3     END;
      974    13948        /**/
      975    13949    3     DO I=0 TO CUR_PSEUDO.NN#-1;
      976    13950    3        J = 0;
      977    13951    4        DO WHILE (J < SAVE_PSEUDO.NN#);
      978    13952    4           IF (CUR_PSEUDO.PSLIST.PSEUDO#(I) = SAVE_PSEUDO.PSLIST.PSEUDO#(J))
      979    13953    4              THEN
      980    13954    5                 DO;
      981    13955    5                    IF (CUR_PSEUDO.PSLIST.NUM#(I) >= SAVE_PSEUDO.PSLIST.NUM#(J))
      982    13956    5                       THEN
      983    13957    6                          DO;
      984    13958    6                             SAVE_PSEUDO.NN# = SAVE_PSEUDO.NN# - 1;
      985    13959    7                             DO K = J TO SAVE_PSEUDO.NN#-1;
      986    13960    7                                SAVE_PSEUDO.PSLIST(K) = SAVE_PSEUDO.PSLIST(K+1);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:33   
      987    13961    7                             END;
      988    13962    6                          END;
      989    13963        /**/
      990    13964    5                             ELSE
      991    13965    6                                DO;            /* Cur > req - release */
      992    13966    6                                   SAVE_PSEUDO.PSLIST.NUM#(J) =
      993    13967    6                                        SAVE_PSEUDO.PSLIST.NUM#(J) - CUR_PSEUDO.PSLIST.
             13967                                                 NUM#(I);
      994    13968    6                                END;
      995    13969    5                       J = SAVE_PSEUDO.NN#;
      996    13970    5                 END;
      997    13971    4                 J = J + 1;
      998    13972    4        END;
      999    13973    3     END;
     1000    13974        /**/
     1001    13975    3     DO I=0 TO CUR_PSN.NN#-1;
     1002    13976    3        J = 0;
     1003    13977    4        DO WHILE (J < SAVE_PSN.NN#);
     1004    13978    4           IF (SAVE_PSN.RPLIST.PSN#(J) = CUR_PSN.RPLIST.PSN#(I))
     1005    13979    4              THEN
     1006    13980    5                 DO;
     1007    13981    5                    SAVE_PSN.NN# = SAVE_PSN.NN# - 1;
     1008    13982    6                    DO K = J TO SAVE_PSN.NN#-1;
     1009    13983    6                       SAVE_PSN.RPLIST(K) = SAVE_PSN.RPLIST(K+1);
     1010    13984    6                    END;
     1011    13985    5                    J = SAVE_PSN.NN#;
     1012    13986    5                 END;
     1013    13987    4                 J = J + 1;
     1014    13988    4        END;
     1015    13989    3     END;
     1016    13990        /**/
     1017    13991    2     SAVE_PSEUDO.MEMORY# = SAVE_PSEUDO.MEMORY# - CUR_PSEUDO.MEMORY#;
     1018    13992        /**/
     1019    13993    2     IF (SAVE_PSEUDO.MEMORY# ~= 0)OR
     1020    13994    2          (SAVE_PSEUDO.NN# ~= 0)OR
     1021    13995    2          (SAVE_PSN.NN# ~= 0)OR
     1022    13996    2          (SAVE_RES.NN# ~= 0)
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:34   
     1023    13997
     1024    13998    2        THEN
     1025    13999    2           GOTO RELRESINFO;
     1026    14000    2        ELSE
     1027    14001    2           GOTO GET_RES;
     1028    14002        /**/
     1029    14003    2   LIMIT_ERR:
     1030    14004    2     ERR_CODE = B$TCB.ALT$ -> B$ALT.ERR;
     1031    14005    2     CALL CPC$WRITEMSGE (ERR_CODE);
     1032    14006        /**/
     1033    14007    2     IF (ERR_CODE.CODE = %E$BSUNM)OR
     1034    14008    2          (ERR_CODE.CODE = %E$SUOUT)
     1035    14009
     1036    14010    2        THEN
     1037    14011    3           DO; /* Bad pseudo */
     1038    14012    3              ERR_TEXT.NAME# = REQ_PSEUDO.PSLIST.PSEUDO#(REQ_PSEUDO.FAILX);
     1039    14013    3              CALL INDEX (I,' ',ERR_TEXT.NAME#);
     1040    14014    3              ERR_TEXT.L# = I;
     1041    14015    3              CALL CPC$WRITEMSGE(E_LIMPSEUDO,,ERR_TEXT,,,%YES#);
     1042    14016    3           END;
     1043    14017    2        ELSE
     1044    14018    2           IF ERR_CODE.CODE = %E$LESMEM
     1045    14019
     1046    14020    2              THEN
     1047    14021    3                 DO;
     1048    14022    3                 END;
     1049    14023        /**/
     1050    14024    2              ELSE
     1051    14025    2                 IF ERR_CODE.CODE = %E$NODP
     1052    14026
     1053    14027    2                    THEN
     1054    14028    3                       DO; /* Bad psn */
     1055    14029    3                          ERR_TEXT.NAME# = REQ_PSN.RPLIST.PSN#(REQ_PSN.FAILX);
     1056    14030    3                          CALL INDEX (I,' ',ERR_TEXT.NAME#);
     1057    14031    3                          ERR_TEXT.L# = I;
     1058    14032    3                          CALL CPC$WRITEMSGE(E_LIMPSN,,ERR_TEXT,,,%YES#);
     1059    14033    3                       END;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:35   
     1060    14034    2                    ELSE
     1061    14035    3                       DO;
     1062    14036    3                          ERR_TEXT.L# = SIZEC(REQ_RES.PRLIST.RNAME#(0));
     1063    14037    3                          ERR_TEXT.NAME# = REQ_RES.PRLIST.RNAME#(REQ_RES.FAILX);
     1064    14038    3                          CALL CPC$WRITEMSGE(E_LIMRES,,ERR_TEXT,,,%YES#);
     1065    14039    3                       END;
     1066    14040    2     ALTRETURN;
     1067    14041        /**/
     1068    14042    2   E_PMME:;
     1069    14043    2     ERR_CODE = B$TCB.ALT$ -> B$ALT.ERR;
     1070    14044    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,ERR_CODE) ;
     1071    14045        /**/
     1072    14046    2   E_SUBR:
     1073    14047    2     ALTRETURN;
     1074    14048    2   END PROCESS_RES_LISTS;
     1075    14049        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:36   
     1076    14050        /**/
     1077    14051    1   DI_RESOURCES: PROC(DISP_PSEUDO,DISP_RES,DISP_PSN) ALTRET;
     1078    14052        /***** Parameters *****/
     1079    14053        %VLP_PRES (FPTN=DISP_RES,N=VIRT_SLOTS,STCLASS="");
     1080    14069        %VLP_PSEUDO (FPTN=DISP_PSEUDO,N=PSEUDO_SLOTS,STCLASS="");
     1081    14085        %VLP_RPSN (FPTN=DISP_PSN,N=PSN_SLOTS,STCLASS="");
     1082    14100        /***** Formats *****/
     1083    14101    2     DCL PSEUDO_HDR CHAR(0) CONSTANT INIT
     1084    14102    2        ('%3XPseudo resources:');
     1085    14103    2     DCL RES_HDR CHAR(0) CONSTANT INIT
     1086    14104    2        ('%3XPhysical resources:');
     1087    14105    2     DCL PSN_HDR CHAR(0) CONSTANT INIT
     1088    14106    2        ('%3XPackSet resources:');
     1089    14107    2     DCL RES_FMT1 CHAR(0) CONSTANT INIT
     1090    14108    2        ('%5X%>A%S');
     1091    14109    2     DCL RES_FMT2 CHAR(0) CONSTANT INIT
     1092    14110    2        ('%5X%>A(%N(%A,%)%A)');
     1093    14111    2     DCL PSEUDO_FMT CHAR(0) CONSTANT INIT
     1094    14112    2        ('%5X%>A=%D');
     1095    14113    2     DCL PSN_FMT CHAR(0) CONSTANT INIT
     1096    14114    2        ('%5XDP#%>A(%>A)');
     1097    14115    2     DCL ENQ_FMT CHAR(0) CONSTANT INIT
     1098    14116    2        ('%5XEnqBlocks=%D');
     1099    14117    2     DCL MEM_FMT CHAR(0) CONSTANT INIT
     1100    14118    2        ('%5XMemory=%D');
     1101    14119        /***** Attribute constants *****/
     1102    14120          %EQU NUM_ATTRS# = 14;
     1103    14121    2     DCL ATTR_ARRAY (0:%NUM_ATTRS#) BIT(36) CONSTANT INIT
     1104    14122    2   /* MT */ (%ATTR_D800#, %ATTR_D1600#, %ATTR_D6250#, %ATTR_D38000#,
     1105    14123    2   /* DP */ %ATTR_DD200#, %ATTR_DD600#, %ATTR_DD500#,
     1106    14124    2            %ATTR_DD1000#, %ATTR_DD1500#, %ATTR_DD400#, %ATTR_DD1100#,
     1107    14125    2   /* LP */ %ATTR_LOWERCASE#, %ATTR_BIN#, %ATTR_APL#, %ATTR_TRUOVRPRT#);
     1108    14126
     1109    14127        /* ** the following constants DEPEND on the size, and order of the */
     1110    14128        /*    ATTR_ARRAY above.  They are the MIN and MAX index values     */
     1111    14129        %SUB MT_MIN =  0;
     1112    14130        %SUB MT_MAX =  3;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:37   
     1113    14131        %SUB DP_MIN =  4;
     1114    14132        %SUB DP_MAX = 10;
     1115    14133        %SUB LP_MIN = 11;
     1116    14134        %SUB LP_MAX = 14;    /* this should be NUM_ATTRS# !! */
     1117    14135        %SUB TRUE = '1'B;
     1118    14136        %SUB FALSE = '0'B;
     1119    14137
     1120    14138    2     DCL ATTR_VECT (0:%NUM_ATTRS#) BIT(72) CONSTANT INIT
     1121    14139    2   /* MT*/ (VECTOR(ATTR_800), VECTOR(ATTR_1600), VECTOR(ATTR_6250),
     1122    14140    2            VECTOR(ATTR_38000),
     1123    14141    2   /* DP */ VECTOR(ATTR_200), VECTOR(ATTR_600), VECTOR(ATTR_500),
     1124    14142    2            VECTOR(ATTR_1000),
     1125    14143    2            VECTOR(ATTR_1500), VECTOR(ATTR_400), VECTOR(ATTR_1100),
     1126    14144    2   /* LP */ VECTOR(ATTR_LC), VECTOR(ATTR_BIN), VECTOR(ATTR_APL),
     1127    14145    2            VECTOR(ATTR_TRUOVRPRT) );
     1128    14146        /**/
     1129    14147    2     DCL ATTR_800 CHAR(0) CONSTANT INIT('800BPI');
     1130    14148    2     DCL ATTR_1600 CHAR(0) CONSTANT INIT('1600BPI');
     1131    14149    2     DCL ATTR_6250 CHAR(0) CONSTANT INIT('6250BPI');
     1132    14150    2     DCL ATTR_38000 CHAR(0) CONSTANT INIT('38000BPI');
     1133    14151    2     DCL ATTR_200 CHAR(0) CONSTANT INIT('200Meg');
     1134    14152    2     DCL ATTR_600 CHAR(0) CONSTANT INIT('600Meg');
     1135    14153    2     DCL ATTR_500 CHAR(0) CONSTANT INIT('500Meg');
     1136    14154    2     DCL ATTR_1000 CHAR(0) CONSTANT INIT('1000Meg');
     1137    14155    2     DCL ATTR_1500 CHAR(0) CONSTANT INIT('1500Meg');   /*FIPS K*/
     1138    14156    2     DCL ATTR_400 CHAR(0) CONSTANT INIT('400Meg');     /*MDS I*/
     1139    14157    2     DCL ATTR_1100 CHAR(0) CONSTANT INIT('1100Meg');   /*MDS II*/
     1140    14158    2     DCL ATTR_LC CHAR(0) CONSTANT INIT('LC');
     1141    14159    2     DCL ATTR_BIN CHAR(0) CONSTANT INIT('Bin');
     1142    14160    2     DCL ATTR_APL CHAR(0) CONSTANT INIT('APL');
     1143    14161    2     DCL ATTR_TRUOVRPRT CHAR(0) CONSTANT INIT('OverPrint');
     1144    14162    2     DCL ATTR_SHARED CHAR(0) CONSTANT INIT('Shared');
     1145    14163    2     DCL ATTR_EXCLUSIVE CHAR(0) CONSTANT INIT('Exclusive');
     1146    14164        /***** Auto data *****/
     1147    14165    2     DCL HDR_PRINTED# BIT(1) AUTO;
     1148    14166    2     DCL I SBIN WORD AUTO;
     1149    14167    2     DCL J SBIN WORD AUTO;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:38   
     1150    14168    2     DCL ATTR# BIT(36) ALIGNED AUTO;
     1151    14169    2     DCL ADD_IT BIT(1);
     1152    14170        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:39   
     1153    14171        /*
     1154    14172             ***** Display PSEUDO resources ...
     1155    14173        */
     1156    14174    2     IF DISP_PSEUDO.NN# ~= 0
     1157    14175    2        THEN
     1158    14176    3           DO;   /* Some pseudo resources */
     1159    14177    3              HDR_PRINTED# = %NO#;
     1160    14178    4              DO I = 0 TO DISP_PSEUDO.NN# -1;
     1161    14179    4                 IF DISP_PSEUDO.PSLIST.NUM#(I) ~= 0
     1162    14180    4                    THEN
     1163    14181    5                       DO;   /* Something to print */
     1164    14182    5                          IF HDR_PRINTED# = %NO#
     1165    14183    5                             THEN
     1166    14184    6                                DO;   /* Print header first */
     1167    14185    6                                   HDR_PRINTED# = %YES#;
     1168    14186    6                                   OUTBUF = ' ';
     1169    14187    6                                   FCB.FMT_ = VECTOR(PSEUDO_HDR);
     1170    14188    6                                   FCB.NVECS# = 0;
     1171    14189    6                                   CALL X$FORMAT (FCB);
     1172    14190    6                                END;   /* Print header */
     1173    14191    5                          FCB.FMT_ = VECTOR(PSEUDO_FMT);
     1174    14192    5                          FMT_VECT(0) = VECTOR(DISP_PSEUDO.PSLIST.PSEUDO#(I));
     1175    14193    5                          FMT_VECT(1) = VECTOR(DISP_PSEUDO.PSLIST.NUM#(I));
     1176    14194    5                          OUTBUF = ' ';
     1177    14195    5                          FCB.NVECS# = 2;
     1178    14196    5                          CALL X$FORMAT (FCB);
     1179    14197    5                       END;   /* Something to print */
     1180    14198    4              END;   /* Do i = ... end */
     1181    14199    3           END;   /* Some pseudo resources */
     1182    14200        %IF '0'B;   /* ENQBLOCKS not yet implemented */
     1192    14210        %ENDIF;
     1193    14211    2     IF DISP_PSEUDO.MEMORY# ~= 0
     1194    14212    2        THEN
     1195    14213    3           DO;   /* Something to display */
     1196    14214    3              OUTBUF = ' ';
     1197    14215    3              FCB.FMT_ = VECTOR(MEM_FMT);
     1198    14216    3              FCB.NVECS# = 1;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:40   
     1199    14217    3              FMT_VECT(0) = VECTOR(DISP_PSEUDO.MEMORY#);
     1200    14218    3              CALL X$FORMAT (FCB);
     1201    14219    3           END;   /* Something to display */
     1202    14220        /*
     1203    14221             ***** Display PACKSET resources ...
     1204    14222        */
     1205    14223    2     IF DISP_PSN.NN# ~= 0
     1206    14224    2        THEN
     1207    14225    3           DO;   /* Something to display */
     1208    14226    3              OUTBUF = ' ';
     1209    14227    3              FCB.NVECS# = 0;
     1210    14228    3              FCB.FMT_ = VECTOR(PSN_HDR);
     1211    14229    3              CALL X$FORMAT (FCB);
     1212    14230        /**/
     1213    14231    3              FCB.FMT_ = VECTOR(PSN_FMT);
     1214    14232    3              FCB.NVECS# = 2;
     1215    14233    4              DO I = 0 TO DISP_PSN.NN# -1;
     1216    14234    4                 OUTBUF = ' ';
     1217    14235    4                 FMT_VECT(0) = VECTOR(DISP_PSN.RPLIST.PSN#(I));
     1218    14236    4                 IF DISP_PSN.RPLIST.USAGE#(I) = %EXCLUSIVE#
     1219    14237    4                    THEN
     1220    14238    4                       FMT_VECT(1) = VECTOR(ATTR_EXCLUSIVE);
     1221    14239    4                    ELSE
     1222    14240    4                       FMT_VECT(1) = VECTOR(ATTR_SHARED);
     1223    14241    4                    CALL X$FORMAT (FCB);
     1224    14242    4              END;   /* Do i = ... end */
     1225    14243    3           END;   /* Something to display */
     1226    14244        /*
     1227    14245             ***** Display PHYSICAL resources ...
     1228    14246        */
     1229    14247    2     IF DISP_RES.NN# ~= 0
     1230    14248    2        THEN
     1231    14249    3           DO;   /* Something to display */
     1232    14250    3              OUTBUF = ' ';
     1233    14251    3              FCB.NVECS# = 0;
     1234    14252    3              FCB.FMT_ = VECTOR(RES_HDR);
     1235    14253    3              CALL X$FORMAT (FCB);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:41   
     1236    14254        /**/
     1237    14255    4              DO I = 0 TO DISP_RES.NN# -1;
     1238    14256    4                 OUTBUF = ' ';
     1239    14257    4                 FCB.NVECS# = 2;
     1240    14258    4                 FMT_VECT(0) = VECTOR(DISP_RES.PRLIST.RNAME#(I));
     1241    14259    4                 ATTR# = DISP_RES.PRLIST.ATTR#(I);
     1242    14260    4                 IF ATTR# = %NO#
     1243    14261    4                    THEN   /* No attributes */
     1244    14262    4                       FCB.FMT_ = VECTOR(RES_FMT1);
     1245    14263    4                    ELSE   /* Attributes to display too */
     1246    14264    5                       DO;
     1247    14265    5                          FCB.FMT_ = VECTOR(RES_FMT2);
     1248    14266    6                          DO J = 0 TO %NUM_ATTRS#;
     1249    14267    6                             ADD_IT = FALSE;
     1250    14268    6                             IF ATTR# & ATTR_ARRAY(J) THEN
     1251    14269    7                               DO SELECT(SUBSTR(DISP_RES.PRLIST.RNAME#(I),0,2));
     1252    14270    7                                 SELECT('MT');
     1253    14271    7                                    IF (J >= MT_MIN) AND (J <= MT_MAX) THEN
     1254    14272    7                                       ADD_IT = TRUE;
     1255    14273    7                                 SELECT('DP');
     1256    14274    7                                    IF (J >= DP_MIN) AND (J <= DP_MAX) THEN
     1257    14275    7                                       ADD_IT = TRUE;
     1258    14276    7                                 SELECT('LP');
     1259    14277    7                                    IF (J >= LP_MIN) AND (J <= LP_MAX) THEN
     1260    14278    7                                       ADD_IT = TRUE;
     1261    14279    7                               END;  /*SELECT*/
     1262    14280
     1263    14281    6                             IF  ADD_IT  THEN
     1264    14282                                     /* Add another attribute */
     1265    14283    7                                DO;
     1266    14284    7                                   FMT_VECT(FCB.NVECS#) = ATTR_VECT(J);
     1267    14285    7                                   FCB.NVECS# = FCB.NVECS# + 1;
     1268    14286    7                                END;
     1269    14287    6                          END;   /* Do j = ... end */
     1270    14288    5                       END;   /* If ... else ... end */
     1271    14289        /**/
     1272    14290    4                          FMT_VECT(1) = VECTOR(J);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:42   
     1273    14291    4                          J = FCB.NVECS# -3;
     1274    14292    4                          CALL X$FORMAT (FCB);
     1275    14293    4              END;   /* Do i = ... end */
     1276    14294    3           END;   /* Something to display */
     1277    14295    2   RETURN;
     1278    14296    2   END DI_RESOURCES;
     1279    14297        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:43   
     1280    14298    1   GET_CUR_RESLIST: PROC ALTRET;
     1281    14299        /*
     1282    14300             ***** This routine gets a list of all resources that
     1283    14301                   this user currently has allocated ...
     1284    14302        */
     1285    14303    2     FPT_RESCTL = CFPT_RESCTL;
     1286    14304    2     FPT_RESCTL.V_ = VECTOR(FPT_RESCTL.V);
     1287    14305    2     FPT_RESCTL.PRES_ = VECTOR(CUR_RES);
     1288    14306    2     FPT_RESCTL.PSEUDO_ = VECTOR(CUR_PSEUDO);
     1289    14307    2     FPT_RESCTL.RPSN_ = VECTOR(CUR_PSN);
     1290    14308        /**/
     1291    14309    2     CALL M$DISPRES(FPT_RESCTL) ALTRET (E_DISPRES);
     1292    14310        /*
     1293    14311             ***** Sort by RNAME for easier manipulation
     1294    14312        */
     1295    14313    3     DO I=0 TO CUR_RES.NN#-1;
     1296    14314    3        K = I; /* Switch the next entry with the smallest one */
     1297    14315    4        DO J=I+1 TO CUR_RES.NN#-1;
     1298    14316    4           IF CUR_RES.PRLIST.RNAME#(K)>CUR_RES.PRLIST.RNAME#(J)
     1299    14317
     1300    14318    4              THEN
     1301    14319    4                 K = J;
     1302    14320    4        END;
     1303    14321    3        IF K>I
     1304    14322
     1305    14323    3           THEN
     1306    14324    4              DO;
     1307    14325    4                 ATTR_RES.PRLIST(0) = CUR_RES.PRLIST(I);
     1308    14326    4                 CUR_RES.PRLIST(I) = CUR_RES.PRLIST(K);
     1309    14327    4                 CUR_RES.PRLIST(K) = ATTR_RES.PRLIST(0);
     1310    14328    4              END;
     1311    14329    3     END;
     1312    14330        /*
     1313    14331             ***** Save another copy of the ATTRS for PHYSICAL RESOURCES ...
     1314    14332        */
     1315    14333    2     ATTR_RES = CUR_RES;
     1316    14334    2     RETURN;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:44   
     1317    14335        /**/
     1318    14336    2   E_DISPRES:
     1319    14337    2     ERR_CODE = B$TCB.ALT$ -> B$ALT.ERR;
     1320    14338    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,ERR_CODE) ;
     1321    14339    2     ALTRETURN;
     1322    14340    2   END GET_CUR_RESLIST;
     1323    14341        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:45   
     1324    14342    1   BUILD_RES_LIST: PROC ALTRET;
     1325    14343        /*
     1326    14344             ***** Initialize tables ...
     1327    14345        */
     1328    14346    2     JOB_TBL = JOB_TBL_INIT;
     1329    14347    2     PSN_TBL.COUNT = 0;
     1330    14348    2     VIRT_TBL.COUNT = 0;
     1331    14349        /*
     1332    14350             ***** Build the list of requested resources ...
     1333    14351        */
     1334    14352    2     CALL CPO$RESOURCE (P$PCB, JOB_TBL, PSN_TBL, VIRT_TBL, SEG$2.ERRBUF,
     1335    14353    2                        NHPSN#, RELEASE_ALL#) ALTRET(E_GET_RESLIST);
     1336    14354    3     IF SEG$2.ERRBUF(1)~=0 THEN DO;
     1337    14355    3   E_GET_RESLIST:
     1338    14356    3        ALTRETURN;
     1339    14357    3     END;
     1340    14358        /*
     1341    14359             ***** Expand the VIRT_TBL list.
     1342    14360                   If too many PHYSICAL RESOURCES were requested
     1343    14361                   then abort processing of the RESOURCE cmd ...
     1344    14362        */
     1345    14363    2     CALL CPO$EXPAND (VIRT_TBL, ERR_CODE) ALTRET(E_EXPAND);
     1346    14364        /*
     1347    14365             ***** Validate this list against :USERS and actual
     1348    14366                   system resources available ...
     1349    14367        */
     1350    14368    2     I = 0;
     1351    14369    3     DO WHILE (I < VIRT_TBL.COUNT);
     1352    14370    3        K = B$JIT.MODE;
     1353    14371    3        CALL CPO$VALIDATE (I, K, VIRT_TBL, SEG$2.PHYS$ -> PHYS$LIST,
     1354    14372    3           SEG$2.USERS$ -> AS$USERS, ERR_CODE, ERR_TEXT) ALTRET(E_VALIDATE);
     1355    14373    4        DO NEVER;
     1356    14374    4   E_VALIDATE:
     1357    14375    4           CALL CPC$WRITEMSGE (ERR_CODE,,ERR_TEXT,,,%YES#);
     1358    14376    4           ALTRETURN;
     1359    14377    4        END;
     1360    14378    3     END;   /* Validate loop */
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:46   
     1361    14379        /**/
     1362    14380    3     DO NEVER;
     1363    14381    3   E_EXPAND:
     1364    14382    3        CALL CPC$WRITEMSGE (ERR_CODE,,,,,%NO#);
     1365    14383    3        ALTRETURN;
     1366    14384    3     END;
     1367    14385        /**/
     1368    14386        /*
     1369    14387           ***  Setup the list of requested physical resources.
     1370    14388        */
     1371    14389    2     K = 0;
     1372    14390    3     DO I = 0 TO VIRT_TBL.COUNT - 1;
     1373    14391    3        REQ_RES.PRLIST(K) = %NO#;
     1374    14392    3        REQ_RES.PRLIST.RNME.TYP(K) = VIRT_TBL.RES.TYPE(I);
     1375    14393    3        REQ_RES.PRLIST.RNME.NUM(K) = VIRT_TBL.RES.VNUM(I);
     1376    14394    3        REQ_RES.PRLIST.ATTR#(K) = VIRT_TBL.RES.ATTRS(I);
     1377    14395    3        IF VIRT_TBL.RES.NUM(I)~=99999 THEN K = K+1;
     1378    14396    3        IF VIRT_TBL.RES.NUM(I)=0 THEN REQ_RES.PRLIST.RAT$(K-1)=ADDR(NIL);
     1379    14397    3     END;
     1380    14398    2     REQ_RES.NN# = K;
     1381    14399        /*
     1382    14400           *** Set up the list of requested pseudo resources.
     1383    14401        */
     1384    14402    2     REQ_PSEUDO.NN# = 0;
     1385    14403        /**/
     1386    14404    3     DO I = JM_RX$PR1 TO JM_RX$PR1 + PSEUDO_SLOTS - 1;
     1387    14405    3        IF JOB_TBL.RRT(I) ~= 0
     1388    14406
     1389    14407    3           THEN
     1390    14408    4              DO;
     1391    14409    4                 REQ_PSEUDO.PSLIST.PSEUDO#(REQ_PSEUDO.NN#) =
     1392    14410    4                      SEG$2.PSEUDO$ -> PSEUDO$LIST.PSLIST.PSEUDO#(I-JM_RX$PR1);
     1393    14411    4                 IF JOB_TBL.RRT(I) < 99999
     1394    14412
     1395    14413    4                    THEN
     1396    14414    4                       REQ_PSEUDO.PSLIST.NUM#(REQ_PSEUDO.NN#) = JOB_TBL.RRT(I);
     1397    14415    4                    ELSE
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:47   
     1398    14416    4                       REQ_PSEUDO.PSLIST.NUM#(REQ_PSEUDO.NN#) = 0;
     1399    14417    4                 REQ_PSEUDO.NN# = REQ_PSEUDO.NN# + 1;
     1400    14418    4              END;
     1401    14419    3     END;
     1402    14420        /*
     1403    14421             ***** Setup the list of requested packset names ...
     1404    14422        */
     1405    14423        /**/
     1406    14424    3     DO I = 0 TO PSN_TBL.COUNT -1;
     1407    14425    3        REQ_PSN.RPLIST.PSN#(I) = PSN_TBL.SN.TXT(I);
     1408    14426    3        REQ_PSN.RPLIST.DISP#(I) = PSN_TBL.SN.DISP(I);
     1409    14427    3        IF PSN_TBL.SN.FLGS.EXCL(I)
     1410    14428    3           THEN
     1411    14429    3              REQ_PSN.RPLIST.USAGE#(I) = %EXCLUSIVE#;
     1412    14430    3           ELSE
     1413    14431    3              REQ_PSN.RPLIST.USAGE#(I) = %SHARED#;
     1414    14432    3     END;
     1415    14433    2     REQ_PSN.NN# = PSN_TBL.COUNT;
     1416    14434    2   END BUILD_RES_LIST;
     1417    14435        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:48   
     1418    14436    1   INIT_LOCAL_VARIABLES: PROC;
     1419    14437        /*
     1420    14438             ***** Initialize local variables that are used by
     1421    14439                   all commands in this module ...
     1422    14440        */
     1423    14441    2     IN$ = ADDR(INBUF);
     1424    14442    2     OUT$ = ADDR(OUTBUF);
     1425    14443    2     SEG$2.FPT_WRITE$ -> FPT$WRITE.BUF_.BUF$ = OUT$;
     1426    14444        /**/
     1427    14445    2     CUR_PSEUDO.NN# = PSEUDO_SLOTS;
     1428    14446    2     CUR_PSN.NN# = PSN_SLOTS;
     1429    14447    2     CUR_RES.NN# = VIRT_SLOTS;
     1430    14448        /**/
     1431    14449    2     SAVE_PSEUDO.NN# = PSEUDO_SLOTS;
     1432    14450    2     SAVE_PSN.NN# = PSN_SLOTS;
     1433    14451    2     SAVE_RES.NN# = VIRT_SLOTS;
     1434    14452        /**/
     1435    14453    2     FCB = C_FCB;
     1436    14454    2     FCB.BUF_ = VECTOR(OUTBUF);
     1437    14455    2     FCB.VECTR$ = ADDR(FMT_VECT(0));
     1438    14456    2     CALL CPC$OPEN_LL;
     1439    14457    2     FCB.OUTPUT# = ENTADDR(CPK$FDS_OUTPUT) ;
     1440    14458
     1441    14459    2     ADDR(SEG$2.ERRBUF)->ERR$BLK.FIRST = 0 ;
     1442    14460    2     ADDR(SEG$2.ERRBUF)->ERR$BLK.NEXT = 0 ;
     1443    14461
     1444    14462    2     RETURN;
     1445    14463    2   END INIT_LOCAL_VARIABLES;
     1446    14464    1   END CPO$ORES;

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:49   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$ORES.

   Procedure CPO$ORES requires 2185 words for executable code.
   Procedure CPO$ORES requires 1524 words of local(AUTO) storage.

    No errors detected in file CPO$ORES.:E05TSI    .

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:50   

 Object Unit name= CPO$ORES                                   File name= CPO$ORES.:E05TOU
 UTS= JUL 29 '97 11:58:59.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    231    347  CPO$ORES
    2   Proc  even  none  2185   4211  CPO$ORES
    3  RoData even  none    57     71  CPO$ORES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  CPO$ORES
     2   1107          yes     yes      Std        1  CPO$ACQUIRE
     2   1456          yes     yes      Std        1  CPO$RELEASE
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:51   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 CPC$OPEN_S
 yes     yes           Std       3 CPJ$WRITE_S
 yes     yes           Std       3 CPJ$READ_S
         yes           Std       6 CPC$WRITEMSGE
         yes           Std       3 CPJ$ESTLIM
         yes           Std       1 X$FORMAT
         yes           Std       5 CXP$POSTERR
 yes     yes           Std       7 CPO$RESOURCE
 yes     yes           Std       7 CPO$VALIDATE
 yes     yes           Std       2 CPO$EXPAND
         yes           Std       0 CPC$OPEN_LL
 yes     yes           Std       2 CPK$FDS_OUTPUT
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_RESCTL                      r    SEG2$
r    B$JIT$                           r    B$TCB$                                M$IBEX1_NUM
     K_LIMIT                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:52   


        1        1        /*M* ORES, ACQUIRE, RELEASE cmds */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /**/
        9        9        CPO$ORES: PROC (P$PCB) ALTRET;

      9  2 000000   000000 700200 xent  CPO$ORES     TSX0  ! X66_AUTO_1
         2 000001   002764 000001                    ZERO    1524,1

       10       10        /**/
       11       11        /******************************************************************** */
       12       12        /*Include files   include files   include files   include files */
       13       13        /******************************************************************** */
       14       14        %INCLUDE AS_SUPER_C;
       15      449        %INCLUDE B$JIT;
       16      739        %INCLUDE B_ERRORS_C;
       17     1866        %INCLUDE B_MACROS_C;
       18     1977        %INCLUDE CP_6;
       19     2058        %INCLUDE CP_6_SUBS;
       20     2598        %INCLUDE CP_SUBS_C;
       21     3515        %INCLUDE CP_PERR_C;
       22     3853        %INCLUDE CP_MACROS_C;
       23     4605        %INCLUDE JM$STRUCT;
       24     5350        %INCLUDE JM_SUBS_C;
       25     5456        %INCLUDE XU_FORMAT_C;
       26     5618        %INCLUDE XU_MACRO_C;
       27     8724        /**/
       28     8725        %INCLUDE CP_DATA_R;
       29    11288        /**/
       30    11289        %SUB HDRTAB = 3;
       31    11290        %SUB DISPTAB = 6;
       32    11291        /***** Parameters *****/
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:53   
       33    11292        %P$PCB (NAME=P$PCB,STCLASS="");
       34    11493        /**/
       35    11494        /***** Auto data *****/
       36    11495    1   DCL MEM_HIT BIT(1);
       37    11496    1   DCL TIME_HIT BIT(1);
       38    11497        /**/
       39    11498    1   DCL RELEASE_ALL# BIT(1) AUTO;   /* Used by IBEX, not by PRESCAN */
       40    11499    1   DCL NHPSN# BIT(1) AUTO;   /* Used by PRESCAN, not by IBEX */
       41    11500        /**/
       42    11501    1   DCL P$ PTR;
       43    11502    1   DCL IN$ PTR;
       44    11503    1   DCL OUT$ PTR;
       45    11504    1   DCL DEST$ PTR;
       46    11505        /**/
       47    11506    1   DCL NO_SHARED BIT(1);
       48    11507    1   DCL NO_EXCLUSIVE BIT(1);
       49    11508        /**/
       50    11509    1   DCL I SBIN WORD;
       51    11510    1   DCL J SBIN WORD;
       52    11511    1   DCL K SBIN WORD;
       53    11512        /**/
       54    11513        /**/
       55    11514        %VLP_NAME (FPTN=ERR_TEXT, LEN=11, STCLASS=AUTO);
       56    11541        /**/
       57    11542        %ERR_CODE (NAME=ERR_CODE,STCLASS=AUTO);
       58    11562        /**/
       59    11563    1   DCL INBUF CHAR(20);
       60    11564    1   DCL OUTBUF CHAR(120);
       61    11565        /**/
       62    11566        /**/
       63    11567        %VLP_PRES (FPTN = CUR_RES,STCLASS=AUTO,N=VIRT_SLOTS);
       64    11583        %VLP_PRES (FPTN = REQ_RES,STCLASS=AUTO,N=VIRT_SLOTS);
       65    11599        %VLP_PRES (FPTN = SAVE_RES,STCLASS=AUTO,N=VIRT_SLOTS);
       66    11615        %VLP_PRES (FPTN = ATTR_RES,STCLASS=AUTO,N=VIRT_SLOTS);
       67    11631        /**/
       68    11632        %VLP_PSEUDO (FPTN = CUR_PSEUDO,STCLASS=AUTO,N=PSEUDO_SLOTS);
       69    11648        %VLP_PSEUDO (FPTN = REQ_PSEUDO,STCLASS=AUTO,N=PSEUDO_SLOTS);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:54   
       70    11664        %VLP_PSEUDO (FPTN = SAVE_PSEUDO,STCLASS=AUTO,N=PSEUDO_SLOTS);
       71    11680        /**/
       72    11681        %VLP_RPSN (FPTN = CUR_PSN,STCLASS=AUTO,N=PSN_SLOTS);
       73    11696        %VLP_RPSN (FPTN = REQ_PSN,STCLASS=AUTO,N=PSN_SLOTS);
       74    11711        %VLP_RPSN (FPTN = SAVE_PSN,STCLASS=AUTO,N=PSN_SLOTS);
       75    11726        /**/
       76    11727        %JM_RESLIST (FPTN = VIRT_TBL,ARRAY="(0:VIRT_SLOTS)",FIT = YES,STCLASS = AUTO);
       77    11782        /**/
       78    11783        %JM_SN (FPTN = PSN,TYP = LIST,STCLASS = AUTO);
       79    11822        /**/
       80    11823        %JM_SNLIST (FPTN = PSN_TBL,ARRAY="(0:PSN_SLOTS)",FIT = YES,STCLASS = AUTO);
       81    11880        /**/
       82    11881        %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = AUTO);
       83    12039        /**/
       84    12040        %CP_LIMREC(NAME=CP_LIMREC,STCLASS=AUTO);
       85    12078        /**/
       86    12079        %FPT_RESCTL (FPTN = FPT_RESCTL,STCLASS = AUTO);
       87    12096        /**/
       88    12097        %F_FDS (NAME=FCB,STCLASS=AUTO);
       89    12210        /**/
       90    12211    1   DCL FMT_VECT (0:35) BIT(72) AUTO;
       91    12212        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:55   
       92    12213        /***** Based data *****/
       93    12214        %B$TCB (STCLASS="BASED(B$TCB$)");
       94    12217        %B$ALT;
       95    12225        %PARSE$OUT(NAME=P$B,STCLASS=BASED);
       96    12270        %PARSE$SYM(NAME=P$S,STCLASS=BASED);
       97    12308        /**/
       98    12309        %FPT_WRITE (FPTN=FPT$WRITE,STCLASS=BASED);
       99    12340        %FPT_CLOSE (FPTN=FPT$CLOSE,STCLASS=BASED);
      100    12382        /**/
      101    12383        %SEG$2;
      102    12443        %ERR_BLK (NAME=ERR$BLK, STCLASS=BASED) ;
      103    12468        /**/
      104    12469        %AS_USERS(STR_NAME=AS$USERS,STCLASS=BASED);
      105    12647        /**/
      106    12648        %VLP_PRES(FPTN=PHYS$LIST,STCLASS=BASED,N=99999);
      107    12664        %VLP_PSEUDO(FPTN=PSEUDO$LIST,STCLASS=BASED,N=PSEUDO_SLOTS);
      108    12680    1   DCL B$SBIN BASED ALIGNED SBIN;
      109    12681        /***** External routines *****/
      110    12682    1   DCL CPC$OPEN_LL ENTRY;
      111    12683    1   DCL CPC$OPEN_S ENTRY(1) ALTRET;
      112    12684    1   DCL CPC$WRITEMSGE ENTRY(6);
      113    12685    1   DCL CPJ$ESTLIM ENTRY(3);
      114    12686    1   DCL CPJ$READ_S ENTRY(3) ALTRET;
      115    12687    1   DCL CPJ$WRITE_S ENTRY(3) ALTRET;
      116    12688    1   DCL CPO$EXPAND ENTRY(2) ALTRET;
      117    12689    1   DCL CPO$PROCESS_VIRT_RES ENTRY(4) ALTRET;
      118    12690    1   DCL CPO$RESOURCE ENTRY(7) ALTRET;
      119    12691    1   DCL CPO$STORE_PSN ENTRY(3) ALTRET;
      120    12692    1   DCL CPO$VALIDATE ENTRY(7) ALTRET;
      121    12693    1   DCL CXP$POSTERR ENTRY(5) ;
      122    12694    1   DCL X$FORMAT ENTRY(1);
      123    12695    1   DCL CPK$FDS_OUTPUT ENTRY(2) ALTRET ;
      124    12696        /**/
      125    12697        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:56   
      126    12698        /***** Constant data *****/
      127    12699        %JM_IF (FPTN = JOB_TBL_INIT,FIT = YES,STCLASS = CONSTANT);
      128    12857          %F_FDS (NAME=C_FCB,TRUNC=NO,WRAPTAB=4,STCLASS=CONSTANT);
      129    12970        /**/
      130    12971    1     DCL ACQUIRE_HDR CHAR(0) CONSTANT INIT
      131    12972    1        ('Resources acquired:');
      132    12973    1     DCL CANTRELEASE_HDR CHAR(0) CONSTANT INIT
      133    12974    1        ('Couldn''t release these resources:');
      134    12975    1     DCL RELEASE_HDR CHAR(0) CONSTANT INIT
      135    12976    1        ('Resources released:');
      136    12977        /***** Error codes *****/
      137    12978       %ERR_CODE (NAME=E_LIMPSEUDO,MID#=CPO$IBEXMID,CODE#=E$CPO_LIMPSEUDO,STCLASS=CONSTANT)
             12978            ;
      138    12998        /*E*    ERROR:   CPO-E$CPO_LIMPSEUDO-0
      139    12999                MESSAGE: Error trying to get Pseudo resource %U1.
      140    13000        */
      141    13001        %ERR_CODE (NAME=E_LIMPSN,MID#=CPO$IBEXMID,CODE#=E$CPO_LIMPSN,STCLASS=CONSTANT);
      142    13021        /*E*    ERROR:   CPO-E$CPO_LIMPSN-0
      143    13022                MESSAGE: Error trying to get packset DP#%U1.
      144    13023        */
      145    13024        %ERR_CODE (NAME=E_LIMRES,MID#=CPO$IBEXMID,CODE#=E$CPO_LIMRES,STCLASS=CONSTANT);
      146    13044        /*E*    ERROR:   CPO-E$CPO_LIMRES-0
      147    13045                MESSAGE: Error trying to get physical resource %U1.
      148    13046        */
      149    13047       %ERR_CODE (NAME=E_ACQDUPRES,MID#=CPO$IBEXMID,CODE#=E$CPO_ACQDUPRES,STCLASS=CONSTANT)
             13047            ;
      150    13067        /*E*    ERROR: CPO-E$CPO_ACQDUPRES-0
      151    13068                MESSAGE: You already have resource %U1.
      152    13069        */
      153    13070       %ERR_CODE (NAME=E_ACQDUPPSN,MID#=CPO$IBEXMID,CODE#=E$CPO_ACQDUPPSN,STCLASS=CONSTANT)
             13070            ;
      154    13090        /*E*    ERROR: CPO-E$CPO_ACQDUPPSN-0
      155    13091                MESSAGE: You already have packset DP#%U1.
      156    13092        */
      157    13093        %ERR_CODE (NAME=E_BIGTIME,MID#=CPO$IBEXMID,CODE#=E$CPO_BIGTIME,STCLASS=CONSTANT);
      158    13113        /*E*    ERROR: CPO-E$CPO_BIGTIME-0
      159    13114                MESSAGE: TIME resource exceeds user maximum.
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:57   
      160    13115        */
      161    13116       %ERR_CODE (NAME=E_SMALLTIME,MID#=CPO$IBEXMID,CODE#=E$CPO_SMALLTIME,STCLASS=CONSTANT)
             13116            ;
      162    13136        /*E*    ERROR:   CPO-E$CPO_SMALLTIME-0
      163    13137                MESSAGE: TIME requested has already been used.
      164    13138        */
      165    13139        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:58   
      166    13140        /*
      167    13141             ***** Initialize some local variables ...
      168    13142        */
      169    13143    1     CALL INIT_LOCAL_VARIABLES;

  13143  2 000002   004137 701000 2                  TSX1    INIT_LOCAL_VARIABLES
         2 000003   000000 011000                    NOP     0

      170    13144        /**/
      171    13145        /*
      172    13146           ***  If no options then display current resources.
      173    13147        */
      174    13148        /**/
      175    13149    1     IF P$PCB.OUT$ -> P$B.NSUBLKS = 0

  13149  2 000004   200003 470500                    LDP0    @P$PCB,,AUTO
         2 000005   000003 471500                    LDP1    3,,PR0
         2 000006   100001 220100                    LDX0    1,,PR1
         2 000007   000060 601000 2                  TNZ     s:13187

      176    13150
      177    13151    1        THEN
      178    13152    2           DO;

      179    13153        /*
      180    13154           *** Get the list of resources currently reserved for this user
      181    13155        */
      182    13156    2              CALL GET_CUR_RESLIST ALTRET(DISP_ERR);

  13156  2 000010   003407 701000 2                  TSX1    GET_CUR_RESLIST
         2 000011   000057 702000 2                  TSX2    DISP_ERR

      183    13157        /*
      184    13158           ***  Delete any pseudo resources that we have none of from the list.
      185    13159                Then display the rest.
      186    13160        */
      187    13161    2              I = 0;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:59   

  13161  2 000012   200016 450100                    STZ     I,,AUTO

      188    13162    3              DO WHILE (I < CUR_PSEUDO.NN#);

  13162  2 000013   200016 236100                    LDQ     I,,AUTO
         2 000014   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000015   000046 605000 2                  TPL     s:13176

      189    13163    3                 IF (CUR_PSEUDO.PSLIST.NUM#(I) = 0)

  13163  2 000016   200016 236100                    LDQ     I,,AUTO
         2 000017   000003 402007                    MPY     3,DL
         2 000020   201066 236106                    LDQ     CUR_PSEUDO+6,QL,AUTO
         2 000021   777000 316003                    CANQ    -512,DU
         2 000022   000042 601000 2                  TNZ     s:13173

      190    13164
      191    13165    3                    THEN
      192    13166    4                       DO;

      193    13167    5                          DO J = I TO CUR_PSEUDO.NN# - 1;

  13167  2 000023   200016 235100                    LDA     I,,AUTO
         2 000024   200017 755100                    STA     J,,AUTO
         2 000025   000034 710000 2                  TRA     s:13169+1

      194    13168    5                             CUR_PSEUDO.PSLIST(J) = CUR_PSEUDO.PSLIST(J+1);

  13168  2 000026   200017 236100                    LDQ     J,,AUTO
         2 000027   000014 402007                    MPY     12,DL
         2 000030   000106 100506                    MLR     fill='000'O
         2 000031   201067 000014                    ADSC9   CUR_PSEUDO+7,Q,AUTO      cn=0,n=12
         2 000032   201064 000014                    ADSC9   CUR_PSEUDO+4,Q,AUTO      cn=0,n=12

      195    13169    5                          END;

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:60   
  13169  2 000033   200017 054100                    AOS     J,,AUTO
         2 000034   200017 236100                    LDQ     J,,AUTO
         2 000035   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000036   000026 604000 2                  TMI     s:13168

      196    13170    4                          CUR_PSEUDO.NN# = CUR_PSEUDO.NN# - 1;

  13170  2 000037   000001 336007                    LCQ     1,DL
         2 000040   201060 056100                    ASQ     CUR_PSEUDO,,AUTO

      197    13171    4                       END;

  13171  2 000041   000043 710000 2                  TRA     s:13174

      198    13172    3                    ELSE
      199    13173    3                       I = I + 1;

  13173  2 000042   200016 054100                    AOS     I,,AUTO

      200    13174    3              END;

  13174  2 000043   200016 236100                    LDQ     I,,AUTO
         2 000044   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000045   000016 604000 2                  TMI     s:13163

      201    13175        /**/
      202    13176    2              CALL DI_RESOURCES (CUR_PSEUDO,CUR_RES,CUR_PSN) ALTRET(DISP_ERR);

  13176  2 000046   201220 630500                    EPPR0   CUR_PSN,,AUTO
         2 000047   202745 450500                    STP0    @DISP_RES+1,,AUTO
         2 000050   200070 631500                    EPPR1   CUR_RES,,AUTO
         2 000051   202744 451500                    STP1    @DISP_PSEUDO+1,,AUTO
         2 000052   201060 633500                    EPPR3   CUR_PSEUDO,,AUTO
         2 000053   202743 453500                    STP3    FMT_VECT+75,,AUTO
         2 000054   003014 701000 2                  TSX1    DI_RESOURCES
         2 000055   000057 702000 2                  TSX2    DISP_ERR

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:61   
      203    13177        /**/
      204    13178    2              RETURN;

  13178  2 000056   000000 702200 xent               TSX2  ! X66_ARET

      205    13179        /**/
      206    13180    2   DISP_ERR:
      207    13181    2              ALTRETURN;

  13181  2 000057   000000 702200 xent  DISP_ERR     TSX2  ! X66_AALT

      208    13182    2           END;
      209    13183        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:62   
      210    13184        /*
      211    13185             ***** Build the list of resources to acquire/release ...
      212    13186        */
      213    13187    1     CALL BUILD_RES_LIST ALTRET(E_ORES);

  13187  2 000060   003547 701000 2                  TSX1    BUILD_RES_LIST
         2 000061   001106 702000 2                  TSX2    E_ORES

      214    13188        /*
      215    13189             ***** Get the list of resources currently owned ...
      216    13190        */
      217    13191    1     CALL GET_CUR_RESLIST ALTRET(E_ORES);

  13191  2 000062   003407 701000 2                  TSX1    GET_CUR_RESLIST
         2 000063   001106 702000 2                  TSX2    E_ORES

      218    13192        /*
      219    13193             ***** Determine which resources were not specified on
      220    13194                   the ORES command and set up to avoid releasing them.
      221    13195        */
      222    13196    2     DO J = 0 TO CUR_RES.NN#-1;

  13196  2 000064   200017 450100                    STZ     J,,AUTO
         2 000065   000125 710000 2                  TRA     s:13214+1

      223    13197    3        DO I = 0 TO VIRT_TBL.COUNT-1;

  13197  2 000066   200016 450100                    STZ     I,,AUTO
         2 000067   000100 710000 2                  TRA     s:13201+1

      224    13198    3           IF CUR_RES.PRLIST.RNME.TYP(J) = VIRT_TBL.RES.TYPE(I)

  13198  2 000070   200017 235100                    LDA     J,,AUTO
         2 000071   000002 735000                    ALS     2
         2 000072   200072 220105                    LDX0    CUR_RES+2,AL,AUTO
         2 000073   200016 236100                    LDQ     I,,AUTO
         2 000074   000001 736000                    QLS     1
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:63   
         2 000075   202203 100106                    CMPX0   VIRT_TBL+1,QL,AUTO
         2 000076   000123 600000 2                  TZE     SAVETHISRES

      225    13199    3              THEN
      226    13200    3                 GOTO SAVETHISRES;
      227    13201    3        END;

  13201  2 000077   200016 054100                    AOS     I,,AUTO
         2 000100   200016 236100                    LDQ     I,,AUTO
         2 000101   000070 604000 2                  TMI     s:13198
         2 000102   202202 116100                    CMPQ    VIRT_TBL,,AUTO
         2 000103   000070 602000 2                  TNC     s:13198

      228    13202        /*
      229    13203             ***** Delete this physical resource by compressing
      230    13204                   the table on top of this resource entry ...
      231    13205        */
      232    13206    3        DO I = J TO CUR_RES.NN#-1;

  13206  2 000104   200017 235100                    LDA     J,,AUTO
         2 000105   200016 755100                    STA     I,,AUTO
         2 000106   000115 710000 2                  TRA     s:13208+1

      233    13207    3           CUR_RES.PRLIST(I) = CUR_RES.PRLIST(I+1);

  13207  2 000107   200016 235100                    LDA     I,,AUTO
         2 000110   000004 735000                    ALS     4
         2 000111   000105 100505                    MLR     fill='000'O
         2 000112   200076 000020                    ADSC9   CUR_RES+6,A,AUTO         cn=0,n=16
         2 000113   200072 000020                    ADSC9   CUR_RES+2,A,AUTO         cn=0,n=16

      234    13208    3        END;

  13208  2 000114   200016 054100                    AOS     I,,AUTO
         2 000115   200016 236100                    LDQ     I,,AUTO
         2 000116   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 000117   000107 604000 2                  TMI     s:13207
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:64   

      235    13209    2        CUR_RES.NN# = CUR_RES.NN# - 1;

  13209  2 000120   000001 336007                    LCQ     1,DL
         2 000121   200070 056100                    ASQ     CUR_RES,,AUTO

      236    13210    3              DO NEVER;

  13210  2 000122   000124 710000 2                  TRA     s:13214

      237    13211    3   SAVETHISRES:
      238    13212    3                 J = J+1;

  13212  2 000123   200017 054100       SAVETHISRES  AOS     J,,AUTO

      239    13213    3              END;

      240    13214    2     END;

  13214  2 000124   200017 054100                    AOS     J,,AUTO
         2 000125   200017 236100                    LDQ     J,,AUTO
         2 000126   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 000127   000066 604000 2                  TMI     s:13197

      241    13215        /*
      242    13216             ***** PSEUDO resources ...
      243    13217        */
      244    13218    1     J = 0;

  13218  2 000130   200017 450100                    STZ     J,,AUTO

      245    13219    2     DO WHILE (J < CUR_PSEUDO.NN#);

  13219  2 000131   200017 236100                    LDQ     J,,AUTO
         2 000132   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000133   000177 605000 2                  TPL     s:13242

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:65   
      246    13220    3        DO I = 0 TO REQ_PSEUDO.NN#-1;

  13220  2 000134   200016 450100                    STZ     I,,AUTO
         2 000135   000151 710000 2                  TRA     s:13224+1

      247    13221    3           IF (CUR_PSEUDO.PSLIST.PSEUDO#(J) = REQ_PSEUDO.PSLIST.PSEUDO#(I))

  13221  2 000136   200017 236100                    LDQ     J,,AUTO
         2 000137   000014 402007                    MPY     12,DL
         2 000140   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 000141   200016 236100                    LDQ     I,,AUTO
         2 000142   000014 402007                    MPY     12,DL
         2 000143   202754 235100                    LDA     ADD_IT+2,,AUTO
         2 000144   040106 106505                    CMPC    fill='040'O
         2 000145   201064 000010                    ADSC9   CUR_PSEUDO+4,A,AUTO      cn=0,n=8
         2 000146   201124 000010                    ADSC9   REQ_PSEUDO+4,Q,AUTO      cn=0,n=8
         2 000147   000173 600000 2                  TZE     SAVETHISPSEUDO

      248    13222
      249    13223    3              THEN GOTO SAVETHISPSEUDO;
      250    13224    3        END;

  13224  2 000150   200016 054100                    AOS     I,,AUTO
         2 000151   200016 236100                    LDQ     I,,AUTO
         2 000152   201120 116100                    CMPQ    REQ_PSEUDO,,AUTO
         2 000153   000136 604000 2                  TMI     s:13221

      251    13225    3        DO I = J TO CUR_PSEUDO.NN#-1;

  13225  2 000154   200017 235100                    LDA     J,,AUTO
         2 000155   200016 755100                    STA     I,,AUTO
         2 000156   000165 710000 2                  TRA     s:13227+1

      252    13226    3           CUR_PSEUDO.PSLIST(I) = CUR_PSEUDO.PSLIST(I+1);

  13226  2 000157   200016 236100                    LDQ     I,,AUTO
         2 000160   000014 402007                    MPY     12,DL
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:66   
         2 000161   000106 100506                    MLR     fill='000'O
         2 000162   201067 000014                    ADSC9   CUR_PSEUDO+7,Q,AUTO      cn=0,n=12
         2 000163   201064 000014                    ADSC9   CUR_PSEUDO+4,Q,AUTO      cn=0,n=12

      253    13227    3        END;

  13227  2 000164   200016 054100                    AOS     I,,AUTO
         2 000165   200016 236100                    LDQ     I,,AUTO
         2 000166   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000167   000157 604000 2                  TMI     s:13226

      254    13228    2        CUR_PSEUDO.NN# = CUR_PSEUDO.NN# - 1;

  13228  2 000170   000001 336007                    LCQ     1,DL
         2 000171   201060 056100                    ASQ     CUR_PSEUDO,,AUTO

      255    13229    2        IF (%NO#)

  13229  2 000172   000174 710000 2                  TRA     s:13236

      256    13230
      257    13231    2           THEN
      258    13232    2   SAVETHISPSEUDO:
      259    13233    3              DO;

  13233  2 000173                       SAVETHISPSE* null
      260    13234    3                 J = J+1;

  13234  2 000173   200017 054100                    AOS     J,,AUTO

      261    13235    3              END;

      262    13236    2     END;

  13236  2 000174   200017 236100                    LDQ     J,,AUTO
         2 000175   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000176   000134 604000 2                  TMI     s:13220
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:67   

      263    13237        /*
      264    13238           *** If no shared packsets named on command then ignore all shared
      265    13239               packsets - and ditto for exclusive packsets
      266    13240        */
      267    13241        /**/
      268    13242    1     NO_SHARED = %YES#;

  13242  2 000177   400000 236003                    LDQ     -131072,DU
         2 000200   200014 756100                    STQ     NO_SHARED,,AUTO

      269    13243    1     NO_EXCLUSIVE = %YES#;

  13243  2 000201   200015 756100                    STQ     NO_EXCLUSIVE,,AUTO

      270    13244        /**/
      271    13245    2     DO I = 0 TO REQ_PSN.NN#-1;

  13245  2 000202   200016 450100                    STZ     I,,AUTO
         2 000203   000216 710000 2                  TRA     s:13252+1

      272    13246    2        IF REQ_PSN.RPLIST.USAGE#(I) = %EXCLUSIVE#

  13246  2 000204   200016 235100                    LDA     I,,AUTO
         2 000205   000002 735000                    ALS     2
         2 000206   201471 236105                    LDQ     REQ_PSN+3,AL,AUTO
         2 000207   777000 376007                    ANQ     -512,DL
         2 000210   002000 116007                    CMPQ    1024,DL
         2 000211   000214 601000 2                  TNZ     s:13251

      273    13247
      274    13248    2           THEN
      275    13249    2              NO_EXCLUSIVE = %NO#;

  13249  2 000212   200015 450100                    STZ     NO_EXCLUSIVE,,AUTO
         2 000213   000215 710000 2                  TRA     s:13252

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:68   
      276    13250    2           ELSE
      277    13251    2              NO_SHARED = %NO#;

  13251  2 000214   200014 450100                    STZ     NO_SHARED,,AUTO

      278    13252    2     END;

  13252  2 000215   200016 054100                    AOS     I,,AUTO
         2 000216   200016 236100                    LDQ     I,,AUTO
         2 000217   201466 116100                    CMPQ    REQ_PSN,,AUTO
         2 000220   000204 604000 2                  TMI     s:13246

      279    13253        /**/
      280    13254    1     IF (NO_SHARED)OR(NO_EXCLUSIVE)

  13254  2 000221   200014 234100                    SZN     NO_SHARED,,AUTO
         2 000222   000225 604000 2                  TMI     s:13258
         2 000223   200015 234100                    SZN     NO_EXCLUSIVE,,AUTO
         2 000224   000277 605000 2                  TPL     s:13286

      281    13255
      282    13256    1        THEN
      283    13257    2           DO;

      284    13258    2              J = 0;

  13258  2 000225   200017 450100                    STZ     J,,AUTO

      285    13259    3              DO WHILE (J < CUR_PSN.NN#);

  13259  2 000226   200017 236100                    LDQ     J,,AUTO
         2 000227   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 000230   000277 605000 2                  TPL     s:13286

      286    13260    3                 IF ((NO_SHARED)AND

  13260  2 000231   200014 234100                    SZN     NO_SHARED,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:69   
         2 000232   000241 605000 2                  TPL     s:13260+8
         2 000233   200017 235100                    LDA     J,,AUTO
         2 000234   000002 735000                    ALS     2
         2 000235   201223 236105                    LDQ     CUR_PSN+3,AL,AUTO
         2 000236   777000 376007                    ANQ     -512,DL
         2 000237   001000 116007                    CMPQ    512,DL
         2 000240   000251 600000 2                  TZE     s:13267
         2 000241   200015 234100                    SZN     NO_EXCLUSIVE,,AUTO
         2 000242   000273 605000 2                  TPL     s:13273
         2 000243   200017 235100                    LDA     J,,AUTO
         2 000244   000002 735000                    ALS     2
         2 000245   201223 236105                    LDQ     CUR_PSN+3,AL,AUTO
         2 000246   777000 376007                    ANQ     -512,DL
         2 000247   002000 116007                    CMPQ    1024,DL
         2 000250   000273 601000 2                  TNZ     s:13273

      287    13261    3                      (CUR_PSN.RPLIST.USAGE#(J) = %SHARED#))OR
      288    13262    3                      ((NO_EXCLUSIVE)AND
      289    13263    3                      (CUR_PSN.RPLIST.USAGE#(J) = %EXCLUSIVE#))
      290    13264
      291    13265    3                    THEN
      292    13266    4                       DO;

      293    13267    5                          DO I = J TO CUR_PSN.NN#-1;

  13267  2 000251   200017 235100                    LDA     J,,AUTO
         2 000252   200016 755100                    STA     I,,AUTO
         2 000253   000265 710000 2                  TRA     s:13269+1

      294    13268    5                             CUR_PSN.RPLIST.PSN#(I) = CUR_PSN.RPLIST.PSN#(I+1);

  13268  2 000254   200016 235100                    LDA     I,,AUTO
         2 000255   000002 735000                    ALS     2
         2 000256   200016 236100                    LDQ     I,,AUTO
         2 000257   000004 736000                    QLS     4
         2 000260   000002 735000                    ALS     2
         2 000261   040105 100506                    MLR     fill='040'O
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:70   
         2 000262   201226 000006                    ADSC9   CUR_PSN+6,Q,AUTO         cn=0,n=6
         2 000263   201222 000006                    ADSC9   CUR_PSN+2,A,AUTO         cn=0,n=6

      295    13269    5                          END;

  13269  2 000264   200016 054100                    AOS     I,,AUTO
         2 000265   200016 236100                    LDQ     I,,AUTO
         2 000266   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 000267   000254 604000 2                  TMI     s:13268

      296    13270    4                          CUR_PSN.NN# = CUR_PSN.NN# - 1;

  13270  2 000270   000001 336007                    LCQ     1,DL
         2 000271   201220 056100                    ASQ     CUR_PSN,,AUTO

      297    13271    4                       END;

  13271  2 000272   000274 710000 2                  TRA     s:13274

      298    13272    3                    ELSE
      299    13273    3                       J = J + 1;

  13273  2 000273   200017 054100                    AOS     J,,AUTO

      300    13274    3              END;

  13274  2 000274   200017 236100                    LDQ     J,,AUTO
         2 000275   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 000276   000231 604000 2                  TMI     s:13260

      301    13275    2           END;

      302    13276        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:71   
      303    13277        /*
      304    13278             ***** If the user already has a resource that he
      305    13279                   requested on the ORES command (and it has same attributes)
      306    13280                   then there is no need to acquire it. Delete this
      307    13281                   entry in the REQUEST list ...
      308    13282        */
      309    13283        /*
      310    13284             ***** Process PHYSICAL resources ...
      311    13285        */
      312    13286    1     I = 0;

  13286  2 000277   200016 450100                    STZ     I,,AUTO

      313    13287    2     DO WHILE (I < REQ_RES.NN#);

  13287  2 000300   200016 236100                    LDQ     I,,AUTO
         2 000301   200266 116100                    CMPQ    REQ_RES,,AUTO
         2 000302   000402 605000 2                  TPL     s:13318

      314    13288    2        J = 0;

  13288  2 000303   200017 450100                    STZ     J,,AUTO

      315    13289    2        K = 0;

  13289  2 000304   200020 450100                    STZ     K,,AUTO

      316    13290    3        DO WHILE (J < CUR_RES.NN#);

  13290  2 000305   200017 236100                    LDQ     J,,AUTO
         2 000306   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 000307   000373 605000 2                  TPL     s:13310

      317    13291    3           IF (CUR_RES.PRLIST.RNAME#(J) = REQ_RES.PRLIST.RNAME#(J))

  13291  2 000310   200017 235100                    LDA     J,,AUTO
         2 000311   000002 735000                    ALS     2
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:72   
         2 000312   200072 236105                    LDQ     CUR_RES+2,AL,AUTO
         2 000313   200270 116105                    CMPQ    REQ_RES+2,AL,AUTO
         2 000314   000367 601000 2                  TNZ     s:13308
         2 000315   200016 235100                    LDA     I,,AUTO
         2 000316   000002 735000                    ALS     2
         2 000317   000000 620005                    EAX0    0,AL
         2 000320   200017 236100                    LDQ     J,,AUTO
         2 000321   000002 736000                    QLS     2
         2 000322   200073 236106                    LDQ     CUR_RES+3,QL,AUTO
         2 000323   200271 676110                    ERQ     REQ_RES+3,X0,AUTO
         2 000324   777777 376007                    ANQ     -1,DL
         2 000325   000330 600000 2                  TZE     s:13296
         2 000326   200271 721110                    LXL1    REQ_RES+3,X0,AUTO
         2 000327   000367 601000 2                  TNZ     s:13308

      318    13292    3           AND ((CUR_RES.PRLIST.ATTR#(J) = REQ_RES.PRLIST.ATTR#(I))
      319    13293    3           OR (REQ_RES.PRLIST.ATTR#(I) = '0'O))
      320    13294    3              THEN   /* This resource already exists */
      321    13295    4                 DO;   /* No need to ACQUIRE this resource */

      322    13296    5                    DO K = I TO REQ_RES.NN#-1;

  13296  2 000330   200016 236100                    LDQ     I,,AUTO
         2 000331   200020 756100                    STQ     K,,AUTO
         2 000332   000341 710000 2                  TRA     s:13298+1

      323    13297    5                       REQ_RES.PRLIST(K) = REQ_RES.PRLIST(K+1);

  13297  2 000333   200020 235100                    LDA     K,,AUTO
         2 000334   000004 735000                    ALS     4
         2 000335   000105 100505                    MLR     fill='000'O
         2 000336   200274 000020                    ADSC9   REQ_RES+6,A,AUTO         cn=0,n=16
         2 000337   200270 000020                    ADSC9   REQ_RES+2,A,AUTO         cn=0,n=16

      324    13298    5                    END;

  13298  2 000340   200020 054100                    AOS     K,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:73   
         2 000341   200020 236100                    LDQ     K,,AUTO
         2 000342   200266 116100                    CMPQ    REQ_RES,,AUTO
         2 000343   000333 604000 2                  TMI     s:13297

      325    13299    5                    DO K = J TO CUR_RES.NN#-1;

  13299  2 000344   200017 235100                    LDA     J,,AUTO
         2 000345   200020 755100                    STA     K,,AUTO
         2 000346   000355 710000 2                  TRA     s:13301+1

      326    13300    5                       CUR_RES.PRLIST(K) = CUR_RES.PRLIST(K+1);

  13300  2 000347   200020 235100                    LDA     K,,AUTO
         2 000350   000004 735000                    ALS     4
         2 000351   000105 100505                    MLR     fill='000'O
         2 000352   200076 000020                    ADSC9   CUR_RES+6,A,AUTO         cn=0,n=16
         2 000353   200072 000020                    ADSC9   CUR_RES+2,A,AUTO         cn=0,n=16

      327    13301    5                    END;

  13301  2 000354   200020 054100                    AOS     K,,AUTO
         2 000355   200020 236100                    LDQ     K,,AUTO
         2 000356   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 000357   000347 604000 2                  TMI     s:13300

      328    13302    4                    CUR_RES.NN# = CUR_RES.NN# - 1;

  13302  2 000360   000001 336007                    LCQ     1,DL
         2 000361   200070 056100                    ASQ     CUR_RES,,AUTO

      329    13303    4                    REQ_RES.NN# = REQ_RES.NN# - 1;

  13303  2 000362   200266 056100                    ASQ     REQ_RES,,AUTO

      330    13304    4                    K = -1;                /* Flag */

  13304  2 000363   200020 756100                    STQ     K,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:74   

      331    13305    4                    J = CUR_RES.NN#;       /* Stop this loop */

  13305  2 000364   200070 235100                    LDA     CUR_RES,,AUTO
         2 000365   200017 755100                    STA     J,,AUTO

      332    13306    4                 END;

  13306  2 000366   000370 710000 2                  TRA     s:13309

      333    13307    3              ELSE
      334    13308    3                 J = J + 1;

  13308  2 000367   200017 054100                    AOS     J,,AUTO

      335    13309    3        END;

  13309  2 000370   200017 236100                    LDQ     J,,AUTO
         2 000371   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 000372   000310 604000 2                  TMI     s:13291

      336    13310    2        IF (K ~= -1)

  13310  2 000373   200020 235100                    LDA     K,,AUTO
         2 000374   000027 115000 xsym               CMPA    B_VECTNIL+23
         2 000375   000377 600000 2                  TZE     s:13314

      337    13311
      338    13312    2           THEN
      339    13313    2              I = I + 1;

  13313  2 000376   200016 054100                    AOS     I,,AUTO

      340    13314    2     END;

  13314  2 000377   200016 236100                    LDQ     I,,AUTO
         2 000400   200266 116100                    CMPQ    REQ_RES,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:75   
         2 000401   000303 604000 2                  TMI     s:13288

      341    13315        /*
      342    13316             ***** PSEUDO resources ...
      343    13317        */
      344    13318    1     I = 0;

  13318  2 000402   200016 450100                    STZ     I,,AUTO

      345    13319    2     DO WHILE (I < REQ_PSEUDO.NN#);

  13319  2 000403   200016 236100                    LDQ     I,,AUTO
         2 000404   201120 116100                    CMPQ    REQ_PSEUDO,,AUTO
         2 000405   000622 605000 2                  TPL     s:13382

      346    13320    2        J = 0;

  13320  2 000406   200017 450100                    STZ     J,,AUTO

      347    13321    2        K = 0;

  13321  2 000407   200020 450100                    STZ     K,,AUTO

      348    13322    3        DO WHILE (J < CUR_PSEUDO.NN#);

  13322  2 000410   200017 236100                    LDQ     J,,AUTO
         2 000411   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000412   000611 605000 2                  TPL     s:13373

      349    13323    3           IF (REQ_PSEUDO.PSLIST.PSEUDO#(I) = CUR_PSEUDO.PSLIST.PSEUDO#(J))

  13323  2 000413   200016 236100                    LDQ     I,,AUTO
         2 000414   000014 402007                    MPY     12,DL
         2 000415   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 000416   200017 236100                    LDQ     J,,AUTO
         2 000417   000014 402007                    MPY     12,DL
         2 000420   202754 235100                    LDA     ADD_IT+2,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:76   
         2 000421   040106 106505                    CMPC    fill='040'O
         2 000422   201124 000010                    ADSC9   REQ_PSEUDO+4,A,AUTO      cn=0,n=8
         2 000423   201064 000010                    ADSC9   CUR_PSEUDO+4,Q,AUTO      cn=0,n=8
         2 000424   000605 601000 2                  TNZ     s:13371

      350    13324
      351    13325    3              THEN
      352    13326    4                 DO;

      353    13327    4                    IF (REQ_PSEUDO.PSLIST.NUM#(I) = CUR_PSEUDO.PSLIST.NUM#(J))

  13327  2 000425   200017 236100                    LDQ     J,,AUTO
         2 000426   000003 402007                    MPY     3,DL
         2 000427   000000 620006                    EAX0    0,QL
         2 000430   200016 236100                    LDQ     I,,AUTO
         2 000431   000003 402007                    MPY     3,DL
         2 000432   201126 236106                    LDQ     REQ_PSEUDO+6,QL,AUTO
         2 000433   201066 676110                    ERQ     CUR_PSEUDO+6,X0,AUTO
         2 000434   777000 376003                    ANQ     -512,DU
         2 000435   000475 601000 2                  TNZ     s:13344

      354    13328
      355    13329    4                       THEN
      356    13330    5                          DO;

      357    13331    6                             DO K = I TO REQ_PSEUDO.NN#-1;

  13331  2 000436   200016 235100                    LDA     I,,AUTO
         2 000437   200020 755100                    STA     K,,AUTO
         2 000440   000447 710000 2                  TRA     s:13333+1

      358    13332    6                                REQ_PSEUDO.PSLIST(K) = REQ_PSEUDO.PSLIST(K+1);

  13332  2 000441   200020 236100                    LDQ     K,,AUTO
         2 000442   000014 402007                    MPY     12,DL
         2 000443   000106 100506                    MLR     fill='000'O
         2 000444   201127 000014                    ADSC9   REQ_PSEUDO+7,Q,AUTO      cn=0,n=12
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:77   
         2 000445   201124 000014                    ADSC9   REQ_PSEUDO+4,Q,AUTO      cn=0,n=12

      359    13333    6                             END;

  13333  2 000446   200020 054100                    AOS     K,,AUTO
         2 000447   200020 236100                    LDQ     K,,AUTO
         2 000450   201120 116100                    CMPQ    REQ_PSEUDO,,AUTO
         2 000451   000441 604000 2                  TMI     s:13332

      360    13334    6                             DO K = J TO CUR_PSEUDO.NN#-1;

  13334  2 000452   200017 235100                    LDA     J,,AUTO
         2 000453   200020 755100                    STA     K,,AUTO
         2 000454   000463 710000 2                  TRA     s:13336+1

      361    13335    6                                CUR_PSEUDO.PSLIST(K) = CUR_PSEUDO.PSLIST(K+1);

  13335  2 000455   200020 236100                    LDQ     K,,AUTO
         2 000456   000014 402007                    MPY     12,DL
         2 000457   000106 100506                    MLR     fill='000'O
         2 000460   201067 000014                    ADSC9   CUR_PSEUDO+7,Q,AUTO      cn=0,n=12
         2 000461   201064 000014                    ADSC9   CUR_PSEUDO+4,Q,AUTO      cn=0,n=12

      362    13336    6                             END;

  13336  2 000462   200020 054100                    AOS     K,,AUTO
         2 000463   200020 236100                    LDQ     K,,AUTO
         2 000464   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000465   000455 604000 2                  TMI     s:13335

      363    13337    5                             CUR_PSEUDO.NN# = CUR_PSEUDO.NN# - 1;

  13337  2 000466   000001 336007                    LCQ     1,DL
         2 000467   201060 056100                    ASQ     CUR_PSEUDO,,AUTO

      364    13338    5                             REQ_PSEUDO.NN# = REQ_PSEUDO.NN# - 1;

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:78   
  13338  2 000470   201120 056100                    ASQ     REQ_PSEUDO,,AUTO

      365    13339    5                             K = -1;             /* Flag */

  13339  2 000471   200020 756100                    STQ     K,,AUTO

      366    13340    5                             J = CUR_PSEUDO.NN#;

  13340  2 000472   201060 235100                    LDA     CUR_PSEUDO,,AUTO
         2 000473   200017 755100                    STA     J,,AUTO

      367    13341    5                          END;

  13341  2 000474   000606 710000 2                  TRA     s:13372

      368    13342        /**/
      369    13343    4                       ELSE
      370    13344    4                          IF (REQ_PSEUDO.PSLIST.NUM#(I) > CUR_PSEUDO.PSLIST.NUM#(J))

  13344  2 000475   200016 236100                    LDQ     I,,AUTO
         2 000476   000003 402007                    MPY     3,DL
         2 000477   201126 236106                    LDQ     REQ_PSEUDO+6,QL,AUTO
         2 000500   000033 772000                    QRL     27
         2 000501   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 000502   201066 236110                    LDQ     CUR_PSEUDO+6,X0,AUTO
         2 000503   000033 772000                    QRL     27
         2 000504   202754 116100                    CMPQ    ADD_IT+2,,AUTO
         2 000505   000546 605000 2                  TPL     s:13360

      371    13345
      372    13346    4                             THEN
      373    13347    5                                DO;

      374    13348    5                                   REQ_PSEUDO.PSLIST.NUM#(I) =

  13348  2 000506   200016 236100                    LDQ     I,,AUTO
         2 000507   000003 402007                    MPY     3,DL
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:79   
         2 000510   000000 621006                    EAX1    0,QL
         2 000511   201066 236110                    LDQ     CUR_PSEUDO+6,X0,AUTO
         2 000512   000033 772000                    QRL     27
         2 000513   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 000514   201126 236111                    LDQ     REQ_PSEUDO+6,X1,AUTO
         2 000515   000033 772000                    QRL     27
         2 000516   202754 136100                    SBLQ    ADD_IT+2,,AUTO
         2 000517   000033 736000                    QLS     27
         2 000520   201126 676111                    ERQ     REQ_PSEUDO+6,X1,AUTO
         2 000521   777000 376003                    ANQ     -512,DU
         2 000522   201126 656111                    ERSQ    REQ_PSEUDO+6,X1,AUTO

      375    13349    5                                        REQ_PSEUDO.PSLIST.NUM#(I) - CUR_PSEUDO.PSLIST.
             13349                                                 NUM#(J);
      376    13350    6                                   DO K = J TO CUR_PSEUDO.NN#-1;

  13350  2 000523   200017 235100                    LDA     J,,AUTO
         2 000524   200020 755100                    STA     K,,AUTO
         2 000525   000534 710000 2                  TRA     s:13352+1

      377    13351    6                                      CUR_PSEUDO.PSLIST(K) = CUR_PSEUDO.PSLIST(K+1);

  13351  2 000526   200020 236100                    LDQ     K,,AUTO
         2 000527   000014 402007                    MPY     12,DL
         2 000530   000106 100506                    MLR     fill='000'O
         2 000531   201067 000014                    ADSC9   CUR_PSEUDO+7,Q,AUTO      cn=0,n=12
         2 000532   201064 000014                    ADSC9   CUR_PSEUDO+4,Q,AUTO      cn=0,n=12

      378    13352    6                                   END;

  13352  2 000533   200020 054100                    AOS     K,,AUTO
         2 000534   200020 236100                    LDQ     K,,AUTO
         2 000535   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000536   000526 604000 2                  TMI     s:13351

      379    13353    5                                   CUR_PSEUDO.NN# = CUR_PSEUDO.NN# - 1;

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:80   
  13353  2 000537   000001 336007                    LCQ     1,DL
         2 000540   201060 056100                    ASQ     CUR_PSEUDO,,AUTO

      380    13354    5                                   K = -2;

  13354  2 000541   000002 335007                    LCA     2,DL
         2 000542   200020 755100                    STA     K,,AUTO

      381    13355    5                                   J = CUR_PSEUDO.NN#;

  13355  2 000543   201060 235100                    LDA     CUR_PSEUDO,,AUTO
         2 000544   200017 755100                    STA     J,,AUTO

      382    13356    5                                END;

  13356  2 000545   000606 710000 2                  TRA     s:13372

      383    13357        /**/
      384    13358    4                             ELSE
      385    13359    5                                DO;            /* Cur > req - release */

      386    13360    5                                   CUR_PSEUDO.PSLIST.NUM#(J) =

  13360  2 000546   200016 236100                    LDQ     I,,AUTO
         2 000547   000003 402007                    MPY     3,DL
         2 000550   201126 236106                    LDQ     REQ_PSEUDO+6,QL,AUTO
         2 000551   000033 772000                    QRL     27
         2 000552   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 000553   201066 236110                    LDQ     CUR_PSEUDO+6,X0,AUTO
         2 000554   000033 772000                    QRL     27
         2 000555   202754 136100                    SBLQ    ADD_IT+2,,AUTO
         2 000556   000033 736000                    QLS     27
         2 000557   201066 676110                    ERQ     CUR_PSEUDO+6,X0,AUTO
         2 000560   777000 376003                    ANQ     -512,DU
         2 000561   201066 656110                    ERSQ    CUR_PSEUDO+6,X0,AUTO

      387    13361    5                                        CUR_PSEUDO.PSLIST.NUM#(J) - REQ_PSEUDO.PSLIST.
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:81   
             13361                                                 NUM#(I);
      388    13362    6                                   DO K = I TO REQ_PSEUDO.NN#-1;

  13362  2 000562   200016 235100                    LDA     I,,AUTO
         2 000563   200020 755100                    STA     K,,AUTO
         2 000564   000573 710000 2                  TRA     s:13364+1

      389    13363    6                                      REQ_PSEUDO.PSLIST(K) = REQ_PSEUDO.PSLIST(K+1);

  13363  2 000565   200020 236100                    LDQ     K,,AUTO
         2 000566   000014 402007                    MPY     12,DL
         2 000567   000106 100506                    MLR     fill='000'O
         2 000570   201127 000014                    ADSC9   REQ_PSEUDO+7,Q,AUTO      cn=0,n=12
         2 000571   201124 000014                    ADSC9   REQ_PSEUDO+4,Q,AUTO      cn=0,n=12

      390    13364    6                                   END;

  13364  2 000572   200020 054100                    AOS     K,,AUTO
         2 000573   200020 236100                    LDQ     K,,AUTO
         2 000574   201120 116100                    CMPQ    REQ_PSEUDO,,AUTO
         2 000575   000565 604000 2                  TMI     s:13363

      391    13365    5                                   REQ_PSEUDO.NN# = REQ_PSEUDO.NN# - 1;

  13365  2 000576   000001 336007                    LCQ     1,DL
         2 000577   201120 056100                    ASQ     REQ_PSEUDO,,AUTO

      392    13366    5                                   K = -3;

  13366  2 000600   000003 335007                    LCA     3,DL
         2 000601   200020 755100                    STA     K,,AUTO

      393    13367    5                                   J = CUR_PSEUDO.NN#;

  13367  2 000602   201060 235100                    LDA     CUR_PSEUDO,,AUTO
         2 000603   200017 755100                    STA     J,,AUTO

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:82   
      394    13368    5                                END;

      395    13369    4                 END;

  13369  2 000604   000606 710000 2                  TRA     s:13372

      396    13370    3              ELSE
      397    13371    3                 J = J + 1;

  13371  2 000605   200017 054100                    AOS     J,,AUTO

      398    13372    3        END;

  13372  2 000606   200017 236100                    LDQ     J,,AUTO
         2 000607   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000610   000413 604000 2                  TMI     s:13323

      399    13373    2        IF (K ~= -1)AND(K ~= -3)

  13373  2 000611   200020 235100                    LDA     K,,AUTO
         2 000612   000027 115000 xsym               CMPA    B_VECTNIL+23
         2 000613   000617 600000 2                  TZE     s:13377
         2 000614   000000 115000 3                  CMPA    0
         2 000615   000617 600000 2                  TZE     s:13377

      400    13374
      401    13375    2           THEN
      402    13376    2              I = I + 1; /* Didnt delete a slot */

  13376  2 000616   200016 054100                    AOS     I,,AUTO

      403    13377    2     END;

  13377  2 000617   200016 236100                    LDQ     I,,AUTO
         2 000620   201120 116100                    CMPQ    REQ_PSEUDO,,AUTO
         2 000621   000406 604000 2                  TMI     s:13320

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:83   
      404    13378        /*
      405    13379           ***  Delete duplicate packsets - already have them
      406    13380        */
      407    13381        /**/
      408    13382    1     I = 0;

  13382  2 000622   200016 450100                    STZ     I,,AUTO

      409    13383    2     DO WHILE (I < REQ_PSN.NN#);

  13383  2 000623   200016 236100                    LDQ     I,,AUTO
         2 000624   201466 116100                    CMPQ    REQ_PSN,,AUTO
         2 000625   000726 605000 2                  TPL     s:13417

      410    13384    2        J = 0;

  13384  2 000626   200017 450100                    STZ     J,,AUTO

      411    13385    2        K = 0;

  13385  2 000627   200020 450100                    STZ     K,,AUTO

      412    13386    3        DO WHILE (J < CUR_PSN.NN#);

  13386  2 000630   200017 236100                    LDQ     J,,AUTO
         2 000631   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 000632   000717 605000 2                  TPL     s:13406

      413    13387    3           IF (CUR_PSN.RPLIST.PSN#(J) = REQ_PSN.RPLIST.PSN#(I))AND

  13387  2 000633   200017 235100                    LDA     J,,AUTO
         2 000634   000004 735000                    ALS     4
         2 000635   200016 236100                    LDQ     I,,AUTO
         2 000636   000004 736000                    QLS     4
         2 000637   040106 106505                    CMPC    fill='040'O
         2 000640   201222 000006                    ADSC9   CUR_PSN+2,A,AUTO         cn=0,n=6
         2 000641   201470 000006                    ADSC9   REQ_PSN+2,Q,AUTO         cn=0,n=6
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:84   
         2 000642   000713 601000 2                  TNZ     s:13404
         2 000643   200016 235100                    LDA     I,,AUTO
         2 000644   000002 735000                    ALS     2
         2 000645   000000 620005                    EAX0    0,AL
         2 000646   200017 235100                    LDA     J,,AUTO
         2 000647   000002 735000                    ALS     2
         2 000650   201223 236105                    LDQ     CUR_PSN+3,AL,AUTO
         2 000651   201471 676110                    ERQ     REQ_PSN+3,X0,AUTO
         2 000652   777000 376007                    ANQ     -512,DL
         2 000653   000713 601000 2                  TNZ     s:13404

      414    13388    3                (CUR_PSN.RPLIST.USAGE#(J) = REQ_PSN.RPLIST.USAGE#(I))
      415    13389
      416    13390    3              THEN
      417    13391    4                 DO;

      418    13392    5                    DO K = I TO REQ_PSN.NN#-1;

  13392  2 000654   200016 236100                    LDQ     I,,AUTO
         2 000655   200020 756100                    STQ     K,,AUTO
         2 000656   000665 710000 2                  TRA     s:13394+1

      419    13393    5                       REQ_PSN.RPLIST(K) = REQ_PSN.RPLIST(K+1);

  13393  2 000657   200020 235100                    LDA     K,,AUTO
         2 000660   000004 735000                    ALS     4
         2 000661   000105 100505                    MLR     fill='000'O
         2 000662   201474 000020                    ADSC9   REQ_PSN+6,A,AUTO         cn=0,n=16
         2 000663   201470 000020                    ADSC9   REQ_PSN+2,A,AUTO         cn=0,n=16

      420    13394    5                    END;

  13394  2 000664   200020 054100                    AOS     K,,AUTO
         2 000665   200020 236100                    LDQ     K,,AUTO
         2 000666   201466 116100                    CMPQ    REQ_PSN,,AUTO
         2 000667   000657 604000 2                  TMI     s:13393

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:85   
      421    13395    5                    DO K = J TO CUR_PSN.NN#-1;

  13395  2 000670   200017 235100                    LDA     J,,AUTO
         2 000671   200020 755100                    STA     K,,AUTO
         2 000672   000701 710000 2                  TRA     s:13397+1

      422    13396    5                       CUR_PSN.RPLIST(K) = CUR_PSN.RPLIST(K+1);

  13396  2 000673   200020 235100                    LDA     K,,AUTO
         2 000674   000004 735000                    ALS     4
         2 000675   000105 100505                    MLR     fill='000'O
         2 000676   201226 000020                    ADSC9   CUR_PSN+6,A,AUTO         cn=0,n=16
         2 000677   201222 000020                    ADSC9   CUR_PSN+2,A,AUTO         cn=0,n=16

      423    13397    5                    END;

  13397  2 000700   200020 054100                    AOS     K,,AUTO
         2 000701   200020 236100                    LDQ     K,,AUTO
         2 000702   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 000703   000673 604000 2                  TMI     s:13396

      424    13398    4                    CUR_PSN.NN# = CUR_PSN.NN# - 1;

  13398  2 000704   000001 336007                    LCQ     1,DL
         2 000705   201220 056100                    ASQ     CUR_PSN,,AUTO

      425    13399    4                    REQ_PSN.NN# = REQ_PSN.NN# - 1;

  13399  2 000706   201466 056100                    ASQ     REQ_PSN,,AUTO

      426    13400    4                    K = -1;

  13400  2 000707   200020 756100                    STQ     K,,AUTO

      427    13401    4                    J = CUR_PSN.NN#;

  13401  2 000710   201220 235100                    LDA     CUR_PSN,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:86   
         2 000711   200017 755100                    STA     J,,AUTO

      428    13402    4                 END;

  13402  2 000712   000714 710000 2                  TRA     s:13405

      429    13403    3              ELSE
      430    13404    3                 J = J + 1;

  13404  2 000713   200017 054100                    AOS     J,,AUTO

      431    13405    3        END;

  13405  2 000714   200017 236100                    LDQ     J,,AUTO
         2 000715   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 000716   000633 604000 2                  TMI     s:13387

      432    13406    2        IF (K ~= -1)

  13406  2 000717   200020 235100                    LDA     K,,AUTO
         2 000720   000027 115000 xsym               CMPA    B_VECTNIL+23
         2 000721   000723 600000 2                  TZE     s:13410

      433    13407
      434    13408    2           THEN
      435    13409    2              I = I + 1;

  13409  2 000722   200016 054100                    AOS     I,,AUTO

      436    13410    2     END;

  13410  2 000723   200016 236100                    LDQ     I,,AUTO
         2 000724   201466 116100                    CMPQ    REQ_PSN,,AUTO
         2 000725   000626 604000 2                  TMI     s:13384

      437    13411        /**/
      438    13412        /*
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:87   
      439    13413           ***  Validate the time and store it away.
      440    13414        */
      441    13415        /**/
      442    13416        /**/
      443    13417    1     IF JOB_TBL.TIM ~= 0

  13417  2 000726   202441 235100                    LDA     JOB_TBL+11,,AUTO
         2 000727   001045 600000 2                  TZE     s:13450

      444    13418
      445    13419    1        THEN
      446    13420    2           DO;

      447    13421    2              CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(OPENS_ERR);

  13421  2 000730   000001 630400 3                  EPPR0   1
         2 000731   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000732   000000 701000 xent               TSX1    CPC$OPEN_S
         2 000733   001746 702000 2                  TSX2    OPENS_ERR

      448    13422    2              CALL CPJ$READ_S(M$IBEX1_NUM,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))

  13422  2 000734   000004 235000 3                  LDA     4
         2 000735   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 000736   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 000737   002515 036003                    ADLQ    1357,DU
         2 000740   202756 757100                    STAQ    ADD_IT+4,,AUTO
         2 000741   202756 630500                    EPPR0   ADD_IT+4,,AUTO
         2 000742   202762 450500                    STP0    ADD_IT+8,,AUTO
         2 000743   000006 237000 3                  LDAQ    6
         2 000744   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 000745   202760 630500                    EPPR0   ADD_IT+6,,AUTO
         2 000746   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000747   000000 701000 xent               TSX1    CPJ$READ_S
         2 000750   001754 702000 2                  TSX2    READS_ERR

      449    13423    2                   ALTRET(READS_ERR);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:88   
      450    13424    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TIME);

  13424  2 000751   000010 236000 3                  LDQ     8
         2 000752   202755 756100                    STQ     ADD_IT+3,,AUTO
         2 000753   202515 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000754   202754 450500                    STP0    ADD_IT+2,,AUTO
         2 000755   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 000756   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000757   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000760   000000 011000                    NOP     0

      451    13425        /**/
      452    13426    2              IF JOB_TBL.TIM < CP_LIMREC.CUMUL.MRT

  13426  2 000761   202441 236100                    LDQ     JOB_TBL+11,,AUTO
         2 000762   001003 604000 2                  TMI     s:13434
         2 000763   202547 116100                    CMPQ    CP_LIMREC+26,,AUTO
         2 000764   001003 605000 2                  TPL     s:13434

      453    13427
      454    13428    2                 THEN
      455    13429    3                    DO;

      456    13430    3                       CALL CPC$WRITEMSGE(E_SMALLTIME,,,,,%YES#);

  13430  2 000765   000011 236000 3                  LDQ     9
         2 000766   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000767   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 000770   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000771   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000772   202756 757100                    STAQ    ADD_IT+4,,AUTO
         2 000773   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000774   000012 235000 3                  LDA     10
         2 000775   202754 757100                    STAQ    ADD_IT+2,,AUTO
         2 000776   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 000777   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001000   000000 701000 xent               TSX1    CPC$WRITEMSGE
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:89   
         2 001001   000000 011000                    NOP     0

      457    13431    3                       GOTO CLOSE_S;

  13431  2 001002   001761 710000 2                  TRA     CLOSE_S

      458    13432    3                    END;
      459    13433        /**/
      460    13434    2              CP_LIMREC.CUR_MAX.MRT = JOB_TBL.TIM - CP_LIMREC.CUMUL.MRT;

  13434  2 001003   202547 136100                    SBLQ    CP_LIMREC+26,,AUTO
         2 001004   202532 756100                    STQ     CP_LIMREC+13,,AUTO

      461    13435    2              CP_LIMREC.USER_MAX.MRT = JOB_TBL.TIM; /* Set for !LIMIT check */

  13435  2 001005   202441 235100                    LDA     JOB_TBL+11,,AUTO
         2 001006   202523 755100                    STA     CP_LIMREC+6,,AUTO

      462    13436    2              B$JIT.MRT = JOB_TBL.TIM;

  13436  2 001007   000000 470400 xsym               LDP0    B$JIT$
         2 001010   000276 755100                    STA     190,,PR0

      463    13437        /**/
      464    13438    2              CALL CPJ$WRITE_S (M$IBEX1_NUM,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))

  13438  2 001011   000004 235000 3                  LDA     4
         2 001012   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 001013   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 001014   002515 036003                    ADLQ    1357,DU
         2 001015   202756 757100                    STAQ    ADD_IT+4,,AUTO
         2 001016   202756 631500                    EPPR1   ADD_IT+4,,AUTO
         2 001017   202762 451500                    STP1    ADD_IT+8,,AUTO
         2 001020   000006 237000 3                  LDAQ    6
         2 001021   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 001022   202760 630500                    EPPR0   ADD_IT+6,,AUTO
         2 001023   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:90   
         2 001024   000000 701000 xent               TSX1    CPJ$WRITE_S
         2 001025   001754 702000 2                  TSX2    READS_ERR

      465    13439    2                   ALTRET(WRITES_ERR);
      466    13440    2              SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP# = %SAVE#;

  13440  2 001026   000000 470400 xsym               LDP0    SEG2$
         2 001027   000163 471500                    LDP1    115,,PR0
         2 001030   000002 236007                    LDQ     2,DL
         2 001031   100032 552104                    STBQ    26,'04'O,PR1

      467    13441    2              SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB# = M$IBEX1_NUM;

  13441  2 001032   000163 471500                    LDP1    115,,PR0
         2 001033   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 001034   100032 740100                    STX0    26,,PR1

      468    13442    2              CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);

  13442  2 001035   000163 471500                    LDP1    115,,PR0
         2 001036   100000 630500                    EPPR0   0,,PR1
         2 001037   050001 713400                    CLIMB   close
         2 001040   406000 401760                    pmme    nvectors=13

      469    13443    2              SEG$2.FPT_WRITE$ -> FPT$WRITE.BUF_.BUF$ = OUT$;

  13443  2 001041   000000 470400 xsym               LDP0    SEG2$
         2 001042   000165 471500                    LDP1    117,,PR0
         2 001043   200012 236100                    LDQ     OUT$,,AUTO
         2 001044   100005 756100                    STQ     5,,PR1

      470    13444    2           END;

      471    13445        /**/
      472    13446        /*
      473    13447           ***  Calculate whether to get or release memory.
      474    13448        */
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:91   
      475    13449        /**/
      476    13450    1     IF JOB_TBL.RRT(JM_RX$MEM) ~= 0

  13450  2 001045   202470 220100                    LDX0    JOB_TBL+34,,AUTO
         2 001046   001100 600000 2                  TZE     s:13469

      477    13451
      478    13452    1        THEN
      479    13453    2           DO;

      480    13454    2              IF JOB_TBL.RRT(JM_RX$MEM) > CUR_PSEUDO.MEMORY#

  13454  2 001047   201062 221100                    LDX1    CUR_PSEUDO+2,,AUTO
         2 001050   202470 101100                    CMPX1   JOB_TBL+34,,AUTO
         2 001051   001065 603000 2                  TRC     s:13463

      481    13455
      482    13456    2                 THEN
      483    13457    3                    DO;

      484    13458    3                      REQ_PSEUDO.MEMORY# = JOB_TBL.RRT(JM_RX$MEM) - CUR_PSEUDO.MEMORY#
             13458                                ;

  13458  2 001052   201062 235100                    LDA     CUR_PSEUDO+2,,AUTO
         2 001053   000022 771000                    ARL     18
         2 001054   202754 755100                    STA     ADD_IT+2,,AUTO
         2 001055   202470 236100                    LDQ     JOB_TBL+34,,AUTO
         2 001056   000022 772000                    QRL     18
         2 001057   202754 136100                    SBLQ    ADD_IT+2,,AUTO
         2 001060   000000 622006                    EAX2    0,QL
         2 001061   201122 742100                    STX2    REQ_PSEUDO+2,,AUTO

      485    13459    3                       CUR_PSEUDO.MEMORY# = 0;

  13459  2 001062   000000 223003                    LDX3    0,DU
         2 001063   201062 743100                    STX3    CUR_PSEUDO+2,,AUTO

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:92   
      486    13460    3                    END;

  13460  2 001064   001103 710000 2                  TRA     s:13473

      487    13461    2                 ELSE
      488    13462    3                    DO;

      489    13463    3                      CUR_PSEUDO.MEMORY# = CUR_PSEUDO.MEMORY# - JOB_TBL.RRT(JM_RX$MEM)
             13463                                ;

  13463  2 001065   202470 235100                    LDA     JOB_TBL+34,,AUTO
         2 001066   000022 771000                    ARL     18
         2 001067   202754 755100                    STA     ADD_IT+2,,AUTO
         2 001070   201062 236100                    LDQ     CUR_PSEUDO+2,,AUTO
         2 001071   000022 772000                    QRL     18
         2 001072   202754 136100                    SBLQ    ADD_IT+2,,AUTO
         2 001073   000000 622006                    EAX2    0,QL
         2 001074   201062 742100                    STX2    CUR_PSEUDO+2,,AUTO

      490    13464    3                       REQ_PSEUDO.MEMORY# = 0;

  13464  2 001075   000000 221003                    LDX1    0,DU
         2 001076   201122 741100                    STX1    REQ_PSEUDO+2,,AUTO

      491    13465    3                    END;

      492    13466    2           END;

  13466  2 001077   001103 710000 2                  TRA     s:13473

      493    13467    1        ELSE
      494    13468    2           DO;

      495    13469    2              CUR_PSEUDO.MEMORY# = 0;

  13469  2 001100   000000 221003                    LDX1    0,DU
         2 001101   201062 741100                    STX1    CUR_PSEUDO+2,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:93   

      496    13470    2              REQ_PSEUDO.MEMORY# = 0;

  13470  2 001102   201122 741100                    STX1    REQ_PSEUDO+2,,AUTO

      497    13471    2           END;

      498    13472        /**/
      499    13473    1     CALL PROCESS_RES_LISTS ALTRET(E_ORES);

  13473  2 001103   001775 701000 2                  TSX1    PROCESS_RES_LISTS
         2 001104   001106 702000 2                  TSX2    E_ORES

      500    13474    1     RETURN;

  13474  2 001105   000000 702200 xent               TSX2  ! X66_ARET

      501    13475        /**/
      502    13476    1   E_ORES:
      503    13477    1     ALTRETURN;

  13477  2 001106   000000 702200 xent  E_ORES       TSX2  ! X66_AALT

      504    13478        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:94   
      505    13479        /*F*    NAME: CPO$ACQUIRE
      506    13480                PURPOSE: To acquire specified resources. Valid only ONLINE.
      507    13481        */
      508    13482    1   CPO$ACQUIRE: ENTRY (P$PCB) ALTRET;

  13482  2 001107   000000 700200 xent  CPO$ACQUIRE  TSX0  ! X66_AUTO_1
         2 001110   002764 000001                    ZERO    1524,1

      509    13483        /*
      510    13484             ***** Initialize some local variables ...
      511    13485        */
      512    13486    1     CALL INIT_LOCAL_VARIABLES;

  13486  2 001111   004137 701000 2                  TSX1    INIT_LOCAL_VARIABLES
         2 001112   000000 011000                    NOP     0

      513    13487        /*
      514    13488             ***** Build the list of resources to acquire ...
      515    13489        */
      516    13490    1     CALL BUILD_RES_LIST ALTRET(E_ACQUIRE);

  13490  2 001113   003547 701000 2                  TSX1    BUILD_RES_LIST
         2 001114   001455 702000 2                  TSX2    E_ACQUIRE

      517    13491        /*
      518    13492             ***** Get the list of resources currently owned ...
      519    13493        */
      520    13494    1     CALL GET_CUR_RESLIST ALTRET(E_ACQUIRE);

  13494  2 001115   003407 701000 2                  TSX1    GET_CUR_RESLIST
         2 001116   001455 702000 2                  TSX2    E_ACQUIRE

      521    13495        /*
      522    13496             ***** Build the ACQUIRE LIST ...
      523    13497        */
      524    13498    1     IF JOB_TBL.RRT(JM_RX$MEM) ~= 0

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:95   
  13498  2 001117   202470 220100                    LDX0    JOB_TBL+34,,AUTO
         2 001120   001123 600000 2                  TZE     s:13503

      525    13499
      526    13500    1        THEN
      527    13501    1           REQ_PSEUDO.MEMORY# = JOB_TBL.RRT(JM_RX$MEM);

  13501  2 001121   201122 740100                    STX0    REQ_PSEUDO+2,,AUTO
         2 001122   001125 710000 2                  TRA     s:13505

      528    13502    1        ELSE
      529    13503    1           REQ_PSEUDO.MEMORY# = 0;

  13503  2 001123   000000 221003                    LDX1    0,DU
         2 001124   201122 741100                    STX1    REQ_PSEUDO+2,,AUTO

      530    13504        /**/
      531    13505    1     IF JOB_TBL.TIM ~= 0

  13505  2 001125   202441 235100                    LDA     JOB_TBL+11,,AUTO
         2 001126   001246 600000 2                  TZE     s:13541

      532    13506
      533    13507    1        THEN
      534    13508    2           DO;

      535    13509        /**/
      536    13510    2              CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(OPENS_ERR);

  13510  2 001127   000001 630400 3                  EPPR0   1
         2 001130   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001131   000000 701000 xent               TSX1    CPC$OPEN_S
         2 001132   001746 702000 2                  TSX2    OPENS_ERR

      537    13511    2              CALL CPJ$READ_S(M$IBEX1_NUM,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))

  13511  2 001133   000004 235000 3                  LDA     4
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:96   
         2 001134   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 001135   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 001136   002515 036003                    ADLQ    1357,DU
         2 001137   202756 757100                    STAQ    ADD_IT+4,,AUTO
         2 001140   202756 630500                    EPPR0   ADD_IT+4,,AUTO
         2 001141   202762 450500                    STP0    ADD_IT+8,,AUTO
         2 001142   000006 237000 3                  LDAQ    6
         2 001143   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 001144   202760 630500                    EPPR0   ADD_IT+6,,AUTO
         2 001145   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001146   000000 701000 xent               TSX1    CPJ$READ_S
         2 001147   001754 702000 2                  TSX2    READS_ERR

      538    13512    2                   ALTRET(READS_ERR);
      539    13513        /**/
      540    13514    2              IF (SEG$2.USERS$ -> AS$USERS.MTIME(B$JIT.MODE-1) <

  13514  2 001150   000000 470400 xsym               LDP0    SEG2$
         2 001151   000152 471500                    LDP1    106,,PR0
         2 001152   000000 473400 xsym               LDP3    B$JIT$
         2 001153   300000 236100                    LDQ     0,,PR3
         2 001154   000040 772000                    QRL     32
         2 001155   000000 620006                    EAX0    0,QL
         2 001156   202523 236100                    LDQ     CP_LIMREC+6,,AUTO
         2 001157   202441 036100                    ADLQ    JOB_TBL+11,,AUTO
         2 001160   001201 604000 2                  TMI     s:13523
         2 001161   100250 116110                    CMPQ    168,X0,PR1
         2 001162   001201 602000 2                  TNC     s:13523
         2 001163   001201 600000 2                  TZE     s:13523

      541    13515    2                   CP_LIMREC.USER_MAX.MRT + JOB_TBL.TIM)
      542    13516
      543    13517    2                 THEN
      544    13518    3                    DO;

      545    13519    3                       CALL CPC$WRITEMSGE(E_BIGTIME,,,,%YES#);

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:97   
  13519  2 001164   000011 236000 3                  LDQ     9
         2 001165   202760 756100                    STQ     ADD_IT+6,,AUTO
         2 001166   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001167   000001 235000 xsym               LDA     B_VECTNIL+1
         2 001170   202756 757100                    STAQ    ADD_IT+4,,AUTO
         2 001171   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001172   000013 235000 3                  LDA     11
         2 001173   202754 757100                    STAQ    ADD_IT+2,,AUTO
         2 001174   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 001175   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 001176   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 001177   000000 011000                    NOP     0

      546    13520    3                       GOTO CLOSE_S;

  13520  2 001200   001761 710000 2                  TRA     CLOSE_S

      547    13521    3                    END;
      548    13522        /**/
      549    13523    2              CP_LIMREC.CUR_MAX.MRT = CP_LIMREC.CUR_MAX.MRT + JOB_TBL.TIM;

  13523  2 001201   202532 236100                    LDQ     CP_LIMREC+13,,AUTO
         2 001202   202441 036100                    ADLQ    JOB_TBL+11,,AUTO
         2 001203   202532 756100                    STQ     CP_LIMREC+13,,AUTO

      550    13524    2              CP_LIMREC.USER_MAX.MRT = CP_LIMREC.USER_MAX.MRT + JOB_TBL.TIM;

  13524  2 001204   202523 236100                    LDQ     CP_LIMREC+6,,AUTO
         2 001205   202441 036100                    ADLQ    JOB_TBL+11,,AUTO
         2 001206   202523 756100                    STQ     CP_LIMREC+6,,AUTO

      551    13525    2              B$JIT.MRT = B$JIT.MRT + JOB_TBL.TIM;

  13525  2 001207   300276 236100                    LDQ     190,,PR3
         2 001210   202441 036100                    ADLQ    JOB_TBL+11,,AUTO
         2 001211   300276 756100                    STQ     190,,PR3

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:98   
      552    13526        /**/
      553    13527    2              CALL CPJ$WRITE_S (M$IBEX1_NUM,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))

  13527  2 001212   000004 235000 3                  LDA     4
         2 001213   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 001214   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 001215   002515 036003                    ADLQ    1357,DU
         2 001216   202756 757100                    STAQ    ADD_IT+4,,AUTO
         2 001217   202756 631500                    EPPR1   ADD_IT+4,,AUTO
         2 001220   202762 451500                    STP1    ADD_IT+8,,AUTO
         2 001221   000006 237000 3                  LDAQ    6
         2 001222   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 001223   202760 630500                    EPPR0   ADD_IT+6,,AUTO
         2 001224   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001225   000000 701000 xent               TSX1    CPJ$WRITE_S
         2 001226   001754 702000 2                  TSX2    READS_ERR

      554    13528    2                   ALTRET(WRITES_ERR);
      555    13529    2              SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP# = %SAVE#;

  13529  2 001227   000000 470400 xsym               LDP0    SEG2$
         2 001230   000163 471500                    LDP1    115,,PR0
         2 001231   000002 236007                    LDQ     2,DL
         2 001232   100032 552104                    STBQ    26,'04'O,PR1

      556    13530    2              SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB# = M$IBEX1_NUM;

  13530  2 001233   000163 471500                    LDP1    115,,PR0
         2 001234   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 001235   100032 740100                    STX0    26,,PR1

      557    13531    2              CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);

  13531  2 001236   000163 471500                    LDP1    115,,PR0
         2 001237   100000 630500                    EPPR0   0,,PR1
         2 001240   050001 713400                    CLIMB   close
         2 001241   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:99   

      558    13532    2              SEG$2.FPT_WRITE$ -> FPT$WRITE.BUF_.BUF$ = OUT$;

  13532  2 001242   000000 470400 xsym               LDP0    SEG2$
         2 001243   000165 471500                    LDP1    117,,PR0
         2 001244   200012 236100                    LDQ     OUT$,,AUTO
         2 001245   100005 756100                    STQ     5,,PR1

      559    13533    2           END;

      560    13534        /**/
      561    13535        /*
      562    13536           ***  Search the requested list for resources with the same name as
      563    13537                existing resources - these are illegal.  At the same time, adjust
      564    13538                non-explicit resourcename numbers to avoid existing resources.
      565    13539        */
      566    13540        /**/
      567    13541    1     I = 0;

  13541  2 001246   200016 450100                    STZ     I,,AUTO

      568    13542    1     J = 0;

  13542  2 001247   200017 450100                    STZ     J,,AUTO

      569    13543    2   ACQ_1:  DO WHILE '1'B;

  13543  2 001250                       ACQ_1        null
      570    13544        /*
      571    13545             ***** Both tables are sorted, so just look forward until one ends.
      572    13546        */
      573    13547    3        DO WHILE '1'B; /* skip to the next problem */

      574    13548    3           IF J>=CUR_RES.NN# OR I>=REQ_RES.NN# THEN EXIT ACQ_1; /* all done */

  13548  2 001250   200017 236100                    LDQ     J,,AUTO
         2 001251   200070 116100                    CMPQ    CUR_RES,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:100  
         2 001252   001374 605000 2                  TPL     s:13602
         2 001253   200016 236100                    LDQ     I,,AUTO
         2 001254   200266 116100                    CMPQ    REQ_RES,,AUTO
         2 001255   001374 605000 2                  TPL     s:13602

      575    13549    3           IF CUR_RES.PRLIST.RNAME#(J)=REQ_RES.PRLIST.RNAME#(I) THEN EXIT;

  13549  2 001256   200016 235100                    LDA     I,,AUTO
         2 001257   000002 735000                    ALS     2
         2 001260   200017 236100                    LDQ     J,,AUTO
         2 001261   000002 736000                    QLS     2
         2 001262   200072 236106                    LDQ     CUR_RES+2,QL,AUTO
         2 001263   200270 116105                    CMPQ    REQ_RES+2,AL,AUTO
         2 001264   001277 600000 2                  TZE     s:13557

      576    13550    3           IF CUR_RES.PRLIST.RNAME#(J)>REQ_RES.PRLIST.RNAME#(I)

  13550  2 001265   200017 236100                    LDQ     J,,AUTO
         2 001266   000002 736000                    QLS     2
         2 001267   000000 620006                    EAX0    0,QL
         2 001270   200270 236105                    LDQ     REQ_RES+2,AL,AUTO
         2 001271   200072 116110                    CMPQ    CUR_RES+2,X0,AUTO
         2 001272   001275 603000 2                  TRC     s:13555

      577    13551
      578    13552    3              THEN
      579    13553    3                 I = I+1;

  13553  2 001273   200016 054100                    AOS     I,,AUTO
         2 001274   001250 710000 2                  TRA     ACQ_1

      580    13554    3              ELSE
      581    13555    3                 J = J+1;

  13555  2 001275   200017 054100                    AOS     J,,AUTO

      582    13556    3        END;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:101  

  13556  2 001276   001250 710000 2                  TRA     ACQ_1

      583    13557    2        IF REQ_RES.PRLIST.RAT$(I)=ADDR(NIL) /* if explicit name, it's an error */

  13557  2 001277   200272 236105                    LDQ     REQ_RES+4,AL,AUTO
         2 001300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001301   001327 601000 2                  TNZ     s:13569

      584    13558
      585    13559    2              THEN
      586    13560    3                 DO;

      587    13561    3                    ERR_TEXT.L# = SIZEC(REQ_RES.PRLIST.RNAME#(I));

  13561  2 001302   004000 236003                    LDQ     2048,DU
         2 001303   200021 552140                    STBQ    ERR_TEXT,'40'O,AUTO

      588    13562    3                    ERR_TEXT.NAME# = REQ_RES.PRLIST.RNAME#(I);

  13562  2 001304   200016 235100                    LDA     I,,AUTO
         2 001305   000004 735000                    ALS     4
         2 001306   040100 100505                    MLR     fill='040'O
         2 001307   200270 000004                    ADSC9   REQ_RES+2,A,AUTO         cn=0,n=4
         2 001310   200021 200013                    ADSC9   ERR_TEXT,,AUTO           cn=1,n=11

      589    13563    3                    CALL CPC$WRITEMSGE(E_ACQDUPRES,,ERR_TEXT,,,%YES#);

  13563  2 001311   000011 236000 3                  LDQ     9
         2 001312   000001 235000 xsym               LDA     B_VECTNIL+1
         2 001313   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 001314   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001315   202757 756100                    STQ     ADD_IT+5,,AUTO
         2 001316   200021 630500                    EPPR0   ERR_TEXT,,AUTO
         2 001317   202756 450500                    STP0    ADD_IT+4,,AUTO
         2 001320   000014 235000 3                  LDA     12
         2 001321   202754 757100                    STAQ    ADD_IT+2,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:102  
         2 001322   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 001323   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001324   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 001325   000000 011000                    NOP     0

      590    13564    3                    ALTRETURN;

  13564  2 001326   000000 702200 xent               TSX2  ! X66_AALT

      591    13565    3                 END;
      592    13566        /*
      593    13567             ***** Otherwise, increment the nn part until it doesn't conflict.
      594    13568        */
      595    13569    2        K = I;

  13569  2 001327   200016 235100                    LDA     I,,AUTO
         2 001330   200020 755100                    STA     K,,AUTO

      596    13570    3        DO WHILE '1'B;

      597    13571    3           IF SUBSTR(REQ_RES.PRLIST.RNME.NUM(K),1,1)<'9'

  13571  2 001331   200020 235100                    LDA     K,,AUTO
         2 001332   000002 735000                    ALS     2
         2 001333   200270 236105                    LDQ     REQ_RES+2,AL,AUTO
         2 001334   000777 376007                    ANQ     511,DL
         2 001335   000071 116007                    CMPQ    57,DL
         2 001336   001341 603000 2                  TRC     s:13577

      598    13572
      599    13573    3              THEN
      600    13574    3                 ADDR(REQ_RES.PRLIST(K))->B$SBIN =

  13574  2 001337   200270 054105                    AOS     REQ_RES+2,AL,AUTO
         2 001340   001343 710000 2                  TRA     s:13579

      601    13575    3                      ADDR(REQ_RES.PRLIST(K))->B$SBIN + 1;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:103  
      602    13576    3              ELSE
      603    13577    3                 ADDR(REQ_RES.PRLIST(K))->B$SBIN =

  13577  2 001341   000767 236007                    LDQ     503,DL
         2 001342   200270 056105                    ASQ     REQ_RES+2,AL,AUTO

      604    13578    3                      ADDR(REQ_RES.PRLIST(K))->B$SBIN + 503;
      605    13579    3           IF REQ_RES.PRLIST.RNAME#(K)=REQ_RES.PRLIST.RNAME#(K+1)

  13579  2 001343   200020 235100                    LDA     K,,AUTO
         2 001344   000002 735000                    ALS     2
         2 001345   200270 236105                    LDQ     REQ_RES+2,AL,AUTO
         2 001346   200274 116105                    CMPQ    REQ_RES+6,AL,AUTO
         2 001347   001373 601000 2                  TNZ     s:13595

      606    13580
      607    13581    3              THEN
      608    13582    3                 IF REQ_RES.PRLIST.RAT$(K+1)=ADDR(NIL)

  13582  2 001350   200276 236105                    LDQ     REQ_RES+8,AL,AUTO
         2 001351   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001352   001371 601000 2                  TNZ     s:13591

      609    13583
      610    13584    3                    THEN      /* ran into an explicit one ... */
      611    13585    4                       DO;    /* move past it, and increment again */

      612    13586    4                          CUR_RES.PRLIST(0) = REQ_RES.PRLIST(K);

  13586  2 001353   200020 235100                    LDA     K,,AUTO
         2 001354   000004 735000                    ALS     4
         2 001355   000100 100505                    MLR     fill='000'O
         2 001356   200270 000020                    ADSC9   REQ_RES+2,A,AUTO         cn=0,n=16
         2 001357   200072 000020                    ADSC9   CUR_RES+2,,AUTO          cn=0,n=16

      613    13587    4                          REQ_RES.PRLIST(K) = REQ_RES.PRLIST(K+1);

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:104  
  13587  2 001360   000105 100505                    MLR     fill='000'O
         2 001361   200274 000020                    ADSC9   REQ_RES+6,A,AUTO         cn=0,n=16
         2 001362   200270 000020                    ADSC9   REQ_RES+2,A,AUTO         cn=0,n=16

      614    13588    4                          REQ_RES.PRLIST(K+1) = CUR_RES.PRLIST(0);

  13588  2 001363   200020 235100                    LDA     K,,AUTO
         2 001364   000004 735000                    ALS     4
         2 001365   000105 100500                    MLR     fill='000'O
         2 001366   200072 000020                    ADSC9   CUR_RES+2,,AUTO          cn=0,n=16
         2 001367   200274 000020                    ADSC9   REQ_RES+6,A,AUTO         cn=0,n=16

      615    13589    4                       END;

  13589  2 001370   001331 710000 2                  TRA     s:13571

      616    13590    3                    ELSE      /* ran into an adjustable one ... */
      617    13591    3                       K = K+1; /* take its place, and increment it. */

  13591  2 001371   200020 054100                    AOS     K,,AUTO
         2 001372   001331 710000 2                  TRA     s:13571

      618    13592    3              ELSE
      619    13593    3                 EXIT;  /* Found a free one, check it against what we have */
      620    13594    3        END;

      621    13595    2     END;

  13595  2 001373   001250 710000 2                  TRA     ACQ_1

      622    13596        /**/
      623    13597        /*
      624    13598           ***  Search the requested list for packsets with the same name as
      625    13599                existing packsets - these are illegal.
      626    13600        */
      627    13601        /**/
      628    13602    2     DO I = 0 TO REQ_PSN.NN#-1;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:105  

  13602  2 001374   200016 450100                    STZ     I,,AUTO
         2 001375   001442 710000 2                  TRA     s:13614+1

      629    13603    3        DO J = 0 TO CUR_PSN.NN#-1;

  13603  2 001376   200017 450100                    STZ     J,,AUTO
         2 001377   001436 710000 2                  TRA     s:13613+1

      630    13604    3           IF (CUR_PSN.RPLIST.PSN#(J) = REQ_PSN.RPLIST.PSN#(I))

  13604  2 001400   200017 235100                    LDA     J,,AUTO
         2 001401   000004 735000                    ALS     4
         2 001402   200016 236100                    LDQ     I,,AUTO
         2 001403   000004 736000                    QLS     4
         2 001404   040106 106505                    CMPC    fill='040'O
         2 001405   201222 000006                    ADSC9   CUR_PSN+2,A,AUTO         cn=0,n=6
         2 001406   201470 000006                    ADSC9   REQ_PSN+2,Q,AUTO         cn=0,n=6
         2 001407   001435 601000 2                  TNZ     s:13613

      631    13605
      632    13606    3              THEN
      633    13607    4                 DO;

      634    13608    4                    ERR_TEXT.L# = SIZEC(REQ_PSN.RPLIST.PSN#(I));

  13608  2 001410   006000 236003                    LDQ     3072,DU
         2 001411   200021 552140                    STBQ    ERR_TEXT,'40'O,AUTO

      635    13609    4                    ERR_TEXT.NAME# = REQ_PSN.RPLIST.PSN#(I);

  13609  2 001412   200016 235100                    LDA     I,,AUTO
         2 001413   000004 735000                    ALS     4
         2 001414   040100 100505                    MLR     fill='040'O
         2 001415   201470 000006                    ADSC9   REQ_PSN+2,A,AUTO         cn=0,n=6
         2 001416   200021 200013                    ADSC9   ERR_TEXT,,AUTO           cn=1,n=11

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:106  
      636    13610    4                    CALL CPC$WRITEMSGE(E_ACQDUPPSN,,ERR_TEXT,,,%YES#);

  13610  2 001417   000011 236000 3                  LDQ     9
         2 001420   000001 235000 xsym               LDA     B_VECTNIL+1
         2 001421   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 001422   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001423   202757 756100                    STQ     ADD_IT+5,,AUTO
         2 001424   200021 630500                    EPPR0   ERR_TEXT,,AUTO
         2 001425   202756 450500                    STP0    ADD_IT+4,,AUTO
         2 001426   000015 235000 3                  LDA     13
         2 001427   202754 757100                    STAQ    ADD_IT+2,,AUTO
         2 001430   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 001431   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001432   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 001433   000000 011000                    NOP     0

      637    13611    4                    ALTRETURN;

  13611  2 001434   000000 702200 xent               TSX2  ! X66_AALT

      638    13612    4                 END;
      639    13613    3        END;

  13613  2 001435   200017 054100                    AOS     J,,AUTO
         2 001436   200017 236100                    LDQ     J,,AUTO
         2 001437   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 001440   001400 604000 2                  TMI     s:13604

      640    13614    2     END;

  13614  2 001441   200016 054100                    AOS     I,,AUTO
         2 001442   200016 236100                    LDQ     I,,AUTO
         2 001443   201466 116100                    CMPQ    REQ_PSN,,AUTO
         2 001444   001376 604000 2                  TMI     s:13603

      641    13615        /*
      642    13616             ***** Since this is a ACQUIRE command, we do not want
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:107  
      643    13617                   to release any current resources ...
      644    13618        */
      645    13619    1     CUR_RES.NN# = 0;

  13619  2 001445   200070 450100                    STZ     CUR_RES,,AUTO

      646    13620    1     CUR_PSEUDO.NN# = 0;

  13620  2 001446   201060 450100                    STZ     CUR_PSEUDO,,AUTO

      647    13621    1     CUR_PSN.NN# = 0;

  13621  2 001447   201220 450100                    STZ     CUR_PSN,,AUTO

      648    13622    1     CUR_PSEUDO.MEMORY# = 0;

  13622  2 001450   000000 220003                    LDX0    0,DU
         2 001451   201062 740100                    STX0    CUR_PSEUDO+2,,AUTO

      649    13623        /**/
      650    13624    1     CALL PROCESS_RES_LISTS ALTRET(E_ACQUIRE);

  13624  2 001452   001775 701000 2                  TSX1    PROCESS_RES_LISTS
         2 001453   001455 702000 2                  TSX2    E_ACQUIRE

      651    13625    1     RETURN;

  13625  2 001454   000000 702200 xent               TSX2  ! X66_ARET

      652    13626        /**/
      653    13627    1   E_ACQUIRE:
      654    13628    1     ALTRETURN;

  13628  2 001455   000000 702200 xent  E_ACQUIRE    TSX2  ! X66_AALT

      655    13629        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:108  
      656    13630        /*F*    NAME: CPO$RELEASE
      657    13631                PURPOSE: To release specified resources back to the system.
      658    13632        */
      659    13633    1   CPO$RELEASE: ENTRY (P$PCB) ALTRET;

  13633  2 001456   000000 700200 xent  CPO$RELEASE  TSX0  ! X66_AUTO_1
         2 001457   002764 000001                    ZERO    1524,1

      660    13634        /*
      661    13635             ***** Initialize some local variables ...
      662    13636        */
      663    13637    1     CALL INIT_LOCAL_VARIABLES;

  13637  2 001460   004137 701000 2                  TSX1    INIT_LOCAL_VARIABLES
         2 001461   000000 011000                    NOP     0

      664    13638        /*
      665    13639             ***** Build the list of resources to release ...
      666    13640        */
      667    13641    1     CALL BUILD_RES_LIST ALTRET(E_RELEASE);

  13641  2 001462   003547 701000 2                  TSX1    BUILD_RES_LIST
         2 001463   001745 702000 2                  TSX2    E_RELEASE

      668    13642        /*
      669    13643             ***** Get the list of resources currently owned ...
      670    13644        */
      671    13645    1     CALL GET_CUR_RESLIST ALTRET(E_RELEASE);

  13645  2 001464   003407 701000 2                  TSX1    GET_CUR_RESLIST
         2 001465   001745 702000 2                  TSX2    E_RELEASE

      672    13646        /**/
      673    13647    1     IF JOB_TBL.RRT(JM_RX$MEM) ~= 0

  13647  2 001466   202470 220100                    LDX0    JOB_TBL+34,,AUTO
         2 001467   001472 600000 2                  TZE     s:13652
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:109  

      674    13648
      675    13649    1        THEN
      676    13650    1           REQ_PSEUDO.MEMORY# = JOB_TBL.RRT(JM_RX$MEM);

  13650  2 001470   201122 740100                    STX0    REQ_PSEUDO+2,,AUTO
         2 001471   001474 710000 2                  TRA     s:13654

      677    13651    1        ELSE
      678    13652    1           REQ_PSEUDO.MEMORY# = 0;

  13652  2 001472   000000 221003                    LDX1    0,DU
         2 001473   201122 741100                    STX1    REQ_PSEUDO+2,,AUTO

      679    13653        /**/
      680    13654    1     IF NOT RELEASE_ALL#

  13654  2 001474   200006 234100                    SZN     RELEASE_ALL#,,AUTO
         2 001475   001735 604000 2                  TMI     s:13746

      681    13655    1        THEN
      682    13656    2           DO;   /* Setup which ones to RELEASE */

      683    13657        /*
      684    13658             First, for things like MT=2, use the highest dd values instead of
      685    13659             the lowest.  The initial pass eliminates explicitly specified ones from
      686    13660             the list of current resources.
      687    13661        */
      688    13662    3              DO I=0 TO REQ_RES.NN#-1;

  13662  2 001476   200016 450100                    STZ     I,,AUTO
         2 001477   001543 710000 2                  TRA     s:13678+1

      689    13663    4                 DO J=0 TO CUR_RES.NN#-1;

  13663  2 001500   200017 450100                    STZ     J,,AUTO
         2 001501   001537 710000 2                  TRA     s:13677+1
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:110  

      690    13664    4                    IF REQ_RES.PRLIST.RNAME#(I)=CUR_RES.PRLIST.RNAME#(J)

  13664  2 001502   200017 235100                    LDA     J,,AUTO
         2 001503   000002 735000                    ALS     2
         2 001504   200016 236100                    LDQ     I,,AUTO
         2 001505   000002 736000                    QLS     2
         2 001506   200270 236106                    LDQ     REQ_RES+2,QL,AUTO
         2 001507   200072 116105                    CMPQ    CUR_RES+2,AL,AUTO
         2 001510   001536 601000 2                  TNZ     s:13677
         2 001511   200016 236100                    LDQ     I,,AUTO
         2 001512   000002 736000                    QLS     2
         2 001513   200272 236106                    LDQ     REQ_RES+4,QL,AUTO
         2 001514   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001515   001536 601000 2                  TNZ     s:13677

      691    13665    4                         AND REQ_RES.PRLIST.RAT$(I)=ADDR(NIL) /* Explicit RRnn */
      692    13666
      693    13667    4                       THEN
      694    13668    5                          DO;

      695    13669
      696    13670    5                             CUR_RES.PRLIST(J)=CUR_RES.PRLIST(J+1);

  13670  2 001516   200017 236100                    LDQ     J,,AUTO
         2 001517   000004 736000                    QLS     4
         2 001520   000106 100506                    MLR     fill='000'O
         2 001521   200076 000020                    ADSC9   CUR_RES+6,Q,AUTO         cn=0,n=16
         2 001522   200072 000020                    ADSC9   CUR_RES+2,Q,AUTO         cn=0,n=16

      697    13671    5                             CUR_RES.PRLIST(J+1)=REQ_RES.PRLIST(I);

  13671  2 001523   200016 235100                    LDA     I,,AUTO
         2 001524   000004 735000                    ALS     4
         2 001525   000106 100505                    MLR     fill='000'O
         2 001526   200270 000020                    ADSC9   REQ_RES+2,A,AUTO         cn=0,n=16
         2 001527   200076 000020                    ADSC9   CUR_RES+6,Q,AUTO         cn=0,n=16
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:111  

      698    13672    5                             IF J=CUR_RES.NN#-1

  13672  2 001530   200070 236100                    LDQ     CUR_RES,,AUTO
         2 001531   000001 136007                    SBLQ    1,DL
         2 001532   200017 116100                    CMPQ    J,,AUTO
         2 001533   001536 601000 2                  TNZ     s:13677

      699    13673    5                                THEN
      700    13674
      701    13675    5                                   CUR_RES.NN# = J;

  13675  2 001534   200017 235100                    LDA     J,,AUTO
         2 001535   200070 755100                    STA     CUR_RES,,AUTO

      702    13676    5                          END;

      703    13677    4                 END;

  13677  2 001536   200017 054100                    AOS     J,,AUTO
         2 001537   200017 236100                    LDQ     J,,AUTO
         2 001540   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 001541   001502 604000 2                  TMI     s:13664

      704    13678    3              END;

  13678  2 001542   200016 054100                    AOS     I,,AUTO
         2 001543   200016 236100                    LDQ     I,,AUTO
         2 001544   200266 116100                    CMPQ    REQ_RES,,AUTO
         2 001545   001500 604000 2                  TMI     s:13663

      705    13679        /*
      706    13680             Then go through assigning real names to the implicit ones.
      707    13681        */
      708    13682    3              DO WHILE I>0;

  13682  2 001546   000000 116003                    CMPQ    0,DU
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:112  
         2 001547   001622 604400 2                  TMOZ    s:13710

      709    13683    3                 I = I-1;

  13683  2 001550   000001 336007                    LCQ     1,DL
         2 001551   200016 056100                    ASQ     I,,AUTO

      710    13684    3                 J = CUR_RES.NN#;

  13684  2 001552   200070 235100                    LDA     CUR_RES,,AUTO
         2 001553   200017 755100                    STA     J,,AUTO

      711    13685    4                 DO WHILE '1'B;

      712    13686    4                    IF REQ_RES.PRLIST.RAT$(I)=ADDR(NIL)

  13686  2 001554   200016 235100                    LDA     I,,AUTO
         2 001555   000002 735000                    ALS     2
         2 001556   200272 236105                    LDQ     REQ_RES+4,AL,AUTO
         2 001557   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001560   001562 601000 2                  TNZ     s:13690

      713    13687
      714    13688    4                       THEN
      715    13689    4                          J = 0;

  13689  2 001561   200017 450100                    STZ     J,,AUTO

      716    13690    4                    J = J-1;

  13690  2 001562   000001 336007                    LCQ     1,DL
         2 001563   200017 056100                    ASQ     J,,AUTO

      717    13691    4                    IF J<0 THEN EXIT;

  13691  2 001564   001620 604000 2                  TMI     s:13703

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:113  
      718    13692    4                    IF REQ_RES.PRLIST.RNME.TYP(I)=CUR_RES.PRLIST.RNME.TYP(J)

  13692  2 001565   200270 220105                    LDX0    REQ_RES+2,AL,AUTO
         2 001566   200017 235100                    LDA     J,,AUTO
         2 001567   000002 735000                    ALS     2
         2 001570   200072 100105                    CMPX0   CUR_RES+2,AL,AUTO
         2 001571   001554 601000 2                  TNZ     s:13686
         2 001572   000000 620005                    EAX0    0,AL
         2 001573   200016 235100                    LDA     I,,AUTO
         2 001574   000002 735000                    ALS     2
         2 001575   200271 236105                    LDQ     REQ_RES+3,AL,AUTO
         2 001576   200073 676110                    ERQ     CUR_RES+3,X0,AUTO
         2 001577   777777 376007                    ANQ     -1,DL
         2 001600   001603 600000 2                  TZE     s:13698
         2 001601   200271 720105                    LXL0    REQ_RES+3,AL,AUTO
         2 001602   001554 601000 2                  TNZ     s:13686

      719    13693    4                         AND (REQ_RES.PRLIST.ATTR#(I)=CUR_RES.PRLIST.ATTR#(J)
      720    13694    4                         OR REQ_RES.PRLIST.ATTR#(I)='0'B)
      721    13695
      722    13696    4                       THEN
      723    13697    5                          DO;

      724    13698    5                             REQ_RES.PRLIST(I) = CUR_RES.PRLIST(J);

  13698  2 001603   200017 236100                    LDQ     J,,AUTO
         2 001604   000004 736000                    QLS     4
         2 001605   200016 235100                    LDA     I,,AUTO
         2 001606   000004 735000                    ALS     4
         2 001607   000105 100506                    MLR     fill='000'O
         2 001610   200072 000020                    ADSC9   CUR_RES+2,Q,AUTO         cn=0,n=16
         2 001611   200270 000020                    ADSC9   REQ_RES+2,A,AUTO         cn=0,n=16

      725    13699    5                             CUR_RES.PRLIST.RNME.TYP(J) = 'B';

  13699  2 001612   200017 235100                    LDA     J,,AUTO
         2 001613   000002 735000                    ALS     2
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:114  
         2 001614   102040 220003                    LDX0    33824,DU
         2 001615   200072 740105                    STX0    CUR_RES+2,AL,AUTO

      726    13700    5                             J=0;

  13700  2 001616   200017 450100                    STZ     J,,AUTO

      727    13701    5                          END;

      728    13702    4                 END;

  13702  2 001617   001554 710000 2                  TRA     s:13686

      729    13703    3              END;

  13703  2 001620   200016 235100                    LDA     I,,AUTO
         2 001621   001550 605400 2                  TPNZ    s:13683

      730    13704        /*
      731    13705             Build the RELASE list ...
      732    13706             If the number of each resource to release was
      733    13707             was not specified, then BUILD_RES_LIST assumed all
      734    13708             and filed in 99999. Determine the real number ...
      735    13709        */
      736    13710    3              DO I=0 TO VIRT_TBL.COUNT - 1;

  13710  2 001622   200016 450100                    STZ     I,,AUTO
         2 001623   001664 710000 2                  TRA     s:13725+1

      737    13711    3                 IF VIRT_TBL.RES.NUM(I) = 99999

  13711  2 001624   200016 235100                    LDA     I,,AUTO
         2 001625   000001 735000                    ALS     1
         2 001626   202204 720105                    LXL0    VIRT_TBL+2,AL,AUTO
         2 001627   303237 100003                    CMPX0   99999,DU
         2 001630   001663 601000 2                  TNZ     s:13725

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:115  
      738    13712
      739    13713    3                    THEN
      740    13714    4                       DO J = 0 TO CUR_RES.NN#-1;

  13714  2 001631   200017 450100                    STZ     J,,AUTO
         2 001632   001660 710000 2                  TRA     s:13724+1

      741    13715    4                          IF CUR_RES.PRLIST.RNME.TYP(J)=VIRT_TBL.RES.TYPE(I) AND

  13715  2 001633   200017 235100                    LDA     J,,AUTO
         2 001634   000002 735000                    ALS     2
         2 001635   200072 220105                    LDX0    CUR_RES+2,AL,AUTO
         2 001636   200016 236100                    LDQ     I,,AUTO
         2 001637   000001 736000                    QLS     1
         2 001640   202203 100106                    CMPX0   VIRT_TBL+1,QL,AUTO
         2 001641   001657 601000 2                  TNZ     s:13724
         2 001642   202204 221106                    LDX1    VIRT_TBL+2,QL,AUTO
         2 001643   001647 600000 2                  TZE     s:13721
         2 001644   200073 722105                    LXL2    CUR_RES+3,AL,AUTO
         2 001645   202204 102106                    CMPX2   VIRT_TBL+2,QL,AUTO
         2 001646   001657 601000 2                  TNZ     s:13724

      742    13716    4                              (VIRT_TBL.RES.ATTRS(I)='0'B
      743    13717    4                              OR CUR_RES.PRLIST.ATTR#(J)=VIRT_TBL.RES.ATTRS(I))
      744    13718
      745    13719    4                             THEN
      746    13720    5                                DO;

      747    13721    5                                   REQ_RES.PRLIST(REQ_RES.NN#) = CUR_RES.PRLIST(J);

  13721  2 001647   200017 235100                    LDA     J,,AUTO
         2 001650   000004 735000                    ALS     4
         2 001651   200266 236100                    LDQ     REQ_RES,,AUTO
         2 001652   000004 736000                    QLS     4
         2 001653   000106 100505                    MLR     fill='000'O
         2 001654   200072 000020                    ADSC9   CUR_RES+2,A,AUTO         cn=0,n=16
         2 001655   200270 000020                    ADSC9   REQ_RES+2,Q,AUTO         cn=0,n=16
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:116  

      748    13722    5                                   REQ_RES.NN# = REQ_RES.NN# + 1;

  13722  2 001656   200266 054100                    AOS     REQ_RES,,AUTO

      749    13723    5                                END;

      750    13724    4                       END;

  13724  2 001657   200017 054100                    AOS     J,,AUTO
         2 001660   200017 236100                    LDQ     J,,AUTO
         2 001661   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 001662   001633 604000 2                  TMI     s:13715

      751    13725    3              END;

  13725  2 001663   200016 054100                    AOS     I,,AUTO
         2 001664   200016 236100                    LDQ     I,,AUTO
         2 001665   001624 604000 2                  TMI     s:13711
         2 001666   202202 116100                    CMPQ    VIRT_TBL,,AUTO
         2 001667   001624 602000 2                  TNC     s:13711

      752    13726        /*
      753    13727             Now copy the actual packset usages to the requests, so that the display
      754    13728             tells the truth.
      755    13729        */
      756    13730    3              DO I=0 TO REQ_PSN.NN#-1;

  13730  2 001670   200016 450100                    STZ     I,,AUTO
         2 001671   001721 710000 2                  TRA     s:13737+1

      757    13731    4                 DO J=0 TO CUR_PSN.NN#-1;

  13731  2 001672   200017 450100                    STZ     J,,AUTO
         2 001673   001715 710000 2                  TRA     s:13736+1

      758    13732    4                    IF REQ_PSN.RPLIST.PSN#(I)=CUR_PSN.RPLIST.PSN#(J)
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:117  

  13732  2 001674   200016 235100                    LDA     I,,AUTO
         2 001675   000004 735000                    ALS     4
         2 001676   200017 236100                    LDQ     J,,AUTO
         2 001677   000004 736000                    QLS     4
         2 001700   040106 106505                    CMPC    fill='040'O
         2 001701   201470 000006                    ADSC9   REQ_PSN+2,A,AUTO         cn=0,n=6
         2 001702   201222 000006                    ADSC9   CUR_PSN+2,Q,AUTO         cn=0,n=6
         2 001703   001714 601000 2                  TNZ     s:13736

      759    13733
      760    13734    4                       THEN
      761    13735    4                          REQ_PSN.RPLIST.USAGE#(I)=CUR_PSN.RPLIST.USAGE#(J);

  13735  2 001704   200016 235100                    LDA     I,,AUTO
         2 001705   000002 735000                    ALS     2
         2 001706   200017 236100                    LDQ     J,,AUTO
         2 001707   000002 736000                    QLS     2
         2 001710   201223 236106                    LDQ     CUR_PSN+3,QL,AUTO
         2 001711   201471 676105                    ERQ     REQ_PSN+3,AL,AUTO
         2 001712   777000 376007                    ANQ     -512,DL
         2 001713   201471 656105                    ERSQ    REQ_PSN+3,AL,AUTO

      762    13736    4                 END;

  13736  2 001714   200017 054100                    AOS     J,,AUTO
         2 001715   200017 236100                    LDQ     J,,AUTO
         2 001716   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 001717   001674 604000 2                  TMI     s:13732

      763    13737    3              END;

  13737  2 001720   200016 054100                    AOS     I,,AUTO
         2 001721   200016 236100                    LDQ     I,,AUTO
         2 001722   201466 116100                    CMPQ    REQ_PSN,,AUTO
         2 001723   001672 604000 2                  TMI     s:13731

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:118  
      764    13738    2              CUR_RES = REQ_RES;

  13738  2 001724   000100 100500                    MLR     fill='000'O
         2 001725   200266 000770                    ADSC9   REQ_RES,,AUTO            cn=0,n=504
         2 001726   200070 000770                    ADSC9   CUR_RES,,AUTO            cn=0,n=504

      765    13739    2              CUR_PSEUDO = REQ_PSEUDO;

  13739  2 001727   000100 100500                    MLR     fill='000'O
         2 001730   201120 000174                    ADSC9   REQ_PSEUDO,,AUTO         cn=0,n=124
         2 001731   201060 000174                    ADSC9   CUR_PSEUDO,,AUTO         cn=0,n=124

      766    13740    2              CUR_PSN = REQ_PSN;

  13740  2 001732   000100 100500                    MLR     fill='000'O
         2 001733   201466 001230                    ADSC9   REQ_PSN,,AUTO            cn=0,n=664
         2 001734   201220 001230                    ADSC9   CUR_PSN,,AUTO            cn=0,n=664

      767    13741    2           END;

      768    13742        /*
      769    13743             ***** Since this is a RELEASE command, we do not want
      770    13744                   to GET any new resources ...
      771    13745        */
      772    13746    1     REQ_RES.NN# = 0;

  13746  2 001735   200266 450100                    STZ     REQ_RES,,AUTO

      773    13747    1     REQ_PSEUDO.NN# = 0;

  13747  2 001736   201120 450100                    STZ     REQ_PSEUDO,,AUTO

      774    13748    1     REQ_PSN.NN# = 0;

  13748  2 001737   201466 450100                    STZ     REQ_PSN,,AUTO

      775    13749    1     REQ_PSEUDO.MEMORY# = 0;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:119  

  13749  2 001740   000000 220003                    LDX0    0,DU
         2 001741   201122 740100                    STX0    REQ_PSEUDO+2,,AUTO

      776    13750        /*
      777    13751             ***** Now that we have all these lists built,
      778    13752                   do something with them ...
      779    13753        */
      780    13754    1     CALL PROCESS_RES_LISTS ALTRET(E_RELEASE);

  13754  2 001742   001775 701000 2                  TSX1    PROCESS_RES_LISTS
         2 001743   001745 702000 2                  TSX2    E_RELEASE

      781    13755    1     RETURN;

  13755  2 001744   000000 702200 xent               TSX2  ! X66_ARET

      782    13756        /**/
      783    13757    1   E_RELEASE:
      784    13758    1     ALTRETURN;

  13758  2 001745   000000 702200 xent  E_RELEASE    TSX2  ! X66_AALT

      785    13759        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:120  
      786    13760        /*
      787    13761          ***** Common labels ...
      788    13762        */
      789    13763        /**/
      790    13764    1   OPENS_ERR:
      791    13765    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;

  13765  2 001746   000000 470400 xsym  OPENS_ERR    LDP0    B$TCB$
         2 001747   000000 471500                    LDP1    0,,PR0
         2 001750   100102 236100                    LDQ     66,,PR1
         2 001751   000000 473400 xsym               LDP3    B$JIT$
         2 001752   300144 756100                    STQ     100,,PR3

      792    13766    1     ALTRETURN;

  13766  2 001753   000000 702200 xent               TSX2  ! X66_AALT

  13749  2 001754                       READS_ERR    null
  13749  2 001754                       WRITES_ERR   null
      793    13767    1   READS_ERR: ;
      794    13768    1   WRITES_ERR: ;
      795    13769    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;

  13769  2 001754   000000 470400 xsym               LDP0    B$TCB$
         2 001755   000000 471500                    LDP1    0,,PR0
         2 001756   100102 236100                    LDQ     66,,PR1
         2 001757   000000 473400 xsym               LDP3    B$JIT$
         2 001760   300144 756100                    STQ     100,,PR3

      796    13770    1   CLOSE_S:
      797    13771    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP# = %SAVE#;

  13771  2 001761   000000 470400 xsym  CLOSE_S      LDP0    SEG2$
         2 001762   000163 471500                    LDP1    115,,PR0
         2 001763   000002 236007                    LDQ     2,DL
         2 001764   100032 552104                    STBQ    26,'04'O,PR1

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:121  
      798    13772    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB# = M$IBEX1_NUM;

  13772  2 001765   000163 471500                    LDP1    115,,PR0
         2 001766   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 001767   100032 740100                    STX0    26,,PR1

      799    13773    1     CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);

  13773  2 001770   000163 471500                    LDP1    115,,PR0
         2 001771   100000 630500                    EPPR0   0,,PR1
         2 001772   050001 713400                    CLIMB   close
         2 001773   406000 401760                    pmme    nvectors=13

      800    13774    1     ALTRETURN;

  13774  2 001774   000000 702200 xent               TSX2  ! X66_AALT

      801    13775        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:122  
      802    13776    1   PROCESS_RES_LISTS: PROC ALTRET;

  13776  2 001775   202740 741300       PROCESS_RES* STX1  ! FMT_VECT+72,,AUTO

      803    13777        /**/
      804    13778        /*
      805    13779          *** Release leftover resources
      806    13780        */
      807    13781        /*
      808    13782             ***** If there is something to release
      809    13783                   then RELEASE IT! ...
      810    13784        */
      811    13785    2     IF (CUR_RES.NN# ~= 0)OR

  13785  2 001776   200070 235100                    LDA     CUR_RES,,AUTO
         2 001777   002010 601000 2                  TNZ     s:13795
         2 002000   201060 236100                    LDQ     CUR_PSEUDO,,AUTO
         2 002001   002010 601000 2                  TNZ     s:13795
         2 002002   201220 235100                    LDA     CUR_PSN,,AUTO
         2 002003   002010 601000 2                  TNZ     s:13795
         2 002004   201062 220100                    LDX0    CUR_PSEUDO+2,,AUTO
         2 002005   002010 601000 2                  TNZ     s:13795
         2 002006   200006 234100                    SZN     RELEASE_ALL#,,AUTO
         2 002007   002157 605000 2                  TPL     GET_RES

      812    13786    2          (CUR_PSEUDO.NN# ~= 0)OR
      813    13787    2          (CUR_PSN.NN# ~= 0)OR
      814    13788    2          (CUR_PSEUDO.MEMORY# ~= 0)OR
      815    13789    2          (RELEASE_ALL#)
      816    13790    2        THEN
      817    13791    3           DO;

      818    13792        /*
      819    13793             ***** Save a list of what is to be released ...
      820    13794        */
      821    13795    3              SAVE_PSN = CUR_PSN;

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:123  
  13795  2 002010   000100 100500                    MLR     fill='000'O
         2 002011   201220 001230                    ADSC9   CUR_PSN,,AUTO            cn=0,n=664
         2 002012   201734 001230                    ADSC9   SAVE_PSN,,AUTO           cn=0,n=664

      822    13796    3              SAVE_PSEUDO = CUR_PSEUDO;

  13796  2 002013   000100 100500                    MLR     fill='000'O
         2 002014   201060 000174                    ADSC9   CUR_PSEUDO,,AUTO         cn=0,n=124
         2 002015   201160 000174                    ADSC9   SAVE_PSEUDO,,AUTO        cn=0,n=124

      823    13797    3              SAVE_RES = CUR_RES;

  13797  2 002016   000100 100500                    MLR     fill='000'O
         2 002017   200070 000770                    ADSC9   CUR_RES,,AUTO            cn=0,n=504
         2 002020   200464 000770                    ADSC9   SAVE_RES,,AUTO           cn=0,n=504

      824    13798        /*
      825    13799             ***** Release the resources ...
      826    13800        */
      827    13801    3              FPT_RESCTL = CFPT_RESCTL;

  13801  2 002021   000100 100400                    MLR     fill='000'O
         2 002022   000000 000110 xsym               ADSC9   CFPT_RESCTL              cn=0,n=72
         2 002023   202550 000110                    ADSC9   FPT_RESCTL,,AUTO         cn=0,n=72

      828    13802    3              FPT_RESCTL.V_ =

  13802  2 002024   000016 235000 3                  LDA     14
         2 002025   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002026   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002027   002564 036003                    ADLQ    1396,DU
         2 002030   202550 757100                    STAQ    FPT_RESCTL,,AUTO

      829    13803    3                   VECTOR(FPT_RESCTL.V);
      830    13804    3              FPT_RESCTL.PRES_ = VECTOR(CUR_RES);

  13804  2 002031   000017 235000 3                  LDA     15
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:124  
         2 002032   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002033   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002034   000070 036003                    ADLQ    56,DU
         2 002035   202554 757100                    STAQ    FPT_RESCTL+4,,AUTO

      831    13805    3              FPT_RESCTL.PSEUDO_ = VECTOR(CUR_PSEUDO);

  13805  2 002036   000020 235000 3                  LDA     16
         2 002037   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002040   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002041   001060 036003                    ADLQ    560,DU
         2 002042   202552 757100                    STAQ    FPT_RESCTL+2,,AUTO

      832    13806    3              FPT_RESCTL.RPSN_ = VECTOR(CUR_PSN);

  13806  2 002043   000021 235000 3                  LDA     17
         2 002044   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002045   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002046   001220 036003                    ADLQ    656,DU
         2 002047   202556 757100                    STAQ    FPT_RESCTL+6,,AUTO

      833    13807    3              IF (RELEASE_ALL#)

  13807  2 002050   200006 234100                    SZN     RELEASE_ALL#,,AUTO
         2 002051   002054 605000 2                  TPL     s:13811

      834    13808    3                 THEN
      835    13809    3                    FPT_RESCTL.V.RELALL# = %YES#;

  13809  2 002052   400000 236003                    LDQ     -131072,DU
         2 002053   202565 256100                    ORSQ    FPT_RESCTL+13,,AUTO

      836    13810        /**/
      837    13811    3              CALL M$RELRES(FPT_RESCTL) ALTRET (RELRES_ERR);

  13811  2 002054   202550 630500                    EPPR0   FPT_RESCTL,,AUTO
         2 002055   550003 713400                    CLIMB   alt,+53251
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:125  
         2 002056   402400 401760                    pmme    nvectors=6
         2 002057   002340 702000 2                  TSX2    RELRES_ERR

      838    13812        /**/
      839    13813        /*
      840    13814           ***  Tell the user what resources got released. Set JIT.OLTA if
      841    13815                either MT01 or MT02 got released.
      842    13816        */
      843    13817        /**/
      844    13818    3   RELRESINFO:
      845    13819        /**/
      846    13820    4              DO I = 0 TO SAVE_RES.NN#-1;

  13820  2 002060   200016 450100       RELRESINFO   STZ     I,,AUTO
         2 002061   002101 710000 2                  TRA     s:13827+1

      847    13821    4                 IF (SAVE_RES.PRLIST.RNAME#(I) = 'MT01')

  13821  2 002062   200016 235100                    LDA     I,,AUTO
         2 002063   000002 735000                    ALS     2
         2 002064   200466 236105                    LDQ     SAVE_RES+2,AL,AUTO
         2 002065   000343 116000 1                  CMPQ    ATTR_EXCLUSIVE+3
         2 002066   002072 601000 2                  TNZ     s:13824

      848    13822    4                    THEN
      849    13823    4                       B$JIT.OLTA(0) = %YES#;

  13823  2 002067   000000 470400 xsym               LDP0    B$JIT$
         2 002070   400000 236007                    LDQ     -131072,DL
         2 002071   000333 256100                    ORSQ    219,,PR0

      850    13824    4                 IF (SAVE_RES.PRLIST.RNAME#(I) = 'MT02')

  13824  2 002072   200466 236105                    LDQ     SAVE_RES+2,AL,AUTO
         2 002073   000344 116000 1                  CMPQ    ATTR_EXCLUSIVE+4
         2 002074   002100 601000 2                  TNZ     s:13827

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:126  
      851    13825    4                    THEN
      852    13826    4                       B$JIT.OLTA(1) = %YES#;

  13826  2 002075   000000 470400 xsym               LDP0    B$JIT$
         2 002076   200000 236007                    LDQ     65536,DL
         2 002077   000333 256100                    ORSQ    219,,PR0

      853    13827    4              END;

  13827  2 002100   200016 054100                    AOS     I,,AUTO
         2 002101   200016 236100                    LDQ     I,,AUTO
         2 002102   200464 116100                    CMPQ    SAVE_RES,,AUTO
         2 002103   002062 604000 2                  TMI     s:13821

      854    13828        /*
      855    13829             ***** Match up ATTR# for released physical resources ...
      856    13830        */
      857    13831    4              DO J = 0 TO SAVE_RES.NN# -1;

  13831  2 002104   200017 450100                    STZ     J,,AUTO
         2 002105   002130 710000 2                  TRA     s:13837+1

      858    13832    5                 DO I = 0 TO ATTR_RES.NN# -1;

  13832  2 002106   200016 450100                    STZ     I,,AUTO
         2 002107   002124 710000 2                  TRA     s:13836+1

      859    13833    5                    IF SAVE_RES.PRLIST.RNAME#(J) = ATTR_RES.PRLIST.RNAME#(I)

  13833  2 002110   200016 235100                    LDA     I,,AUTO
         2 002111   000002 735000                    ALS     2
         2 002112   200017 236100                    LDQ     J,,AUTO
         2 002113   000002 736000                    QLS     2
         2 002114   200466 236106                    LDQ     SAVE_RES+2,QL,AUTO
         2 002115   200664 116105                    CMPQ    ATTR_RES+2,AL,AUTO
         2 002116   002123 601000 2                  TNZ     s:13836

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:127  
      860    13834    5                       THEN
      861    13835    5                          SAVE_RES.PRLIST.ATTR#(J) = ATTR_RES.PRLIST.ATTR#(I);

  13835  2 002117   200017 236100                    LDQ     J,,AUTO
         2 002120   000002 736000                    QLS     2
         2 002121   200665 720105                    LXL0    ATTR_RES+3,AL,AUTO
         2 002122   200467 440106                    SXL0    SAVE_RES+3,QL,AUTO

      862    13836    5                 END; /* do i= ... end */

  13836  2 002123   200016 054100                    AOS     I,,AUTO
         2 002124   200016 236100                    LDQ     I,,AUTO
         2 002125   200662 116100                    CMPQ    ATTR_RES,,AUTO
         2 002126   002110 604000 2                  TMI     s:13833

      863    13837    4              END; /* do j= ... end */

  13837  2 002127   200017 054100                    AOS     J,,AUTO
         2 002130   200017 236100                    LDQ     J,,AUTO
         2 002131   200464 116100                    CMPQ    SAVE_RES,,AUTO
         2 002132   002106 604000 2                  TMI     s:13832

      864    13838        /*
      865    13839             ***** Print RESOURCES RELEASED hdr ...
      866    13840        */
      867    13841    3              OUTBUF = ' ';

  13841  2 002133   040100 100400                    MLR     fill='040'O
         2 002134   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002135   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

      868    13842    3              FCB.FMT_ = VECTOR(RELEASE_HDR);

  13842  2 002136   000022 237000 3                  LDAQ    18
         2 002137   202572 757100                    STAQ    FCB,,AUTO

      869    13843    3              FCB.NVECS# = 0;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:128  

  13843  2 002140   202603 450100                    STZ     FCB+9,,AUTO

      870    13844    3              CALL X$FORMAT (FCB);

  13844  2 002141   202572 630500                    EPPR0   FCB,,AUTO
         2 002142   202754 450500                    STP0    ADD_IT+2,,AUTO
         2 002143   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 002144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002145   000000 701000 xent               TSX1    X$FORMAT
         2 002146   000000 011000                    NOP     0

      871    13845        /*
      872    13846             ***** Format what resources were released ...
      873    13847        */
      874    13848    3              CALL DI_RESOURCES(SAVE_PSEUDO,SAVE_RES,SAVE_PSN) ALTRET(E_SUBR);

  13848  2 002147   201734 630500                    EPPR0   SAVE_PSN,,AUTO
         2 002150   202745 450500                    STP0    @DISP_RES+1,,AUTO
         2 002151   200464 631500                    EPPR1   SAVE_RES,,AUTO
         2 002152   202744 451500                    STP1    @DISP_PSEUDO+1,,AUTO
         2 002153   201160 633500                    EPPR3   SAVE_PSEUDO,,AUTO
         2 002154   202743 453500                    STP3    FMT_VECT+75,,AUTO
         2 002155   003014 701000 2                  TSX1    DI_RESOURCES
         2 002156   003012 702000 2                  TSX2    E_SUBR

      875    13849    3           END;   /* Release resources */

      876    13850        /*
      877    13851          *** Get requested resources
      878    13852        */
      879    13853        /**/
      880    13854    2   GET_RES:
      881    13855    2     IF (REQ_RES.NN# ~= 0)OR

  13855  2 002157   200266 235100       GET_RES      LDA     REQ_RES,,AUTO
         2 002160   002167 601000 2                  TNZ     s:13861
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:129  
         2 002161   201120 236100                    LDQ     REQ_PSEUDO,,AUTO
         2 002162   002167 601000 2                  TNZ     s:13861
         2 002163   201466 235100                    LDA     REQ_PSN,,AUTO
         2 002164   002167 601000 2                  TNZ     s:13861
         2 002165   201122 220100                    LDX0    REQ_PSEUDO+2,,AUTO
         2 002166   002336 600000 2                  TZE     s:13910

      882    13856    2          (REQ_PSEUDO.NN# ~= 0)OR
      883    13857    2          (REQ_PSN.NN# ~= 0)OR
      884    13858    2          (REQ_PSEUDO.MEMORY# ~= 0)
      885    13859    2        THEN
      886    13860    3           DO;   /* Get resources */

      887    13861    3              FPT_RESCTL = CFPT_RESCTL;

  13861  2 002167   000100 100400                    MLR     fill='000'O
         2 002170   000000 000110 xsym               ADSC9   CFPT_RESCTL              cn=0,n=72
         2 002171   202550 000110                    ADSC9   FPT_RESCTL,,AUTO         cn=0,n=72

      888    13862    3              FPT_RESCTL.V_ =

  13862  2 002172   000016 235000 3                  LDA     14
         2 002173   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002174   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002175   002564 036003                    ADLQ    1396,DU
         2 002176   202550 757100                    STAQ    FPT_RESCTL,,AUTO

      889    13863    3                   VECTOR(FPT_RESCTL.V);
      890    13864    3              FPT_RESCTL.PRES_ = VECTOR(REQ_RES);

  13864  2 002177   000017 235000 3                  LDA     15
         2 002200   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002201   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002202   000266 036003                    ADLQ    182,DU
         2 002203   202554 757100                    STAQ    FPT_RESCTL+4,,AUTO

      891    13865    3              FPT_RESCTL.PSEUDO_ = VECTOR(REQ_PSEUDO);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:130  

  13865  2 002204   000020 235000 3                  LDA     16
         2 002205   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002206   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002207   001120 036003                    ADLQ    592,DU
         2 002210   202552 757100                    STAQ    FPT_RESCTL+2,,AUTO

      892    13866    3              FPT_RESCTL.RPSN_ = VECTOR(REQ_PSN);

  13866  2 002211   000021 235000 3                  LDA     17
         2 002212   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002213   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002214   001466 036003                    ADLQ    822,DU
         2 002215   202556 757100                    STAQ    FPT_RESCTL+6,,AUTO

      893    13867        /**/
      894    13868    3              CALL M$LIMIT(FPT_RESCTL) ALTRET (LIMIT_ERR);

  13868  2 002216   202550 630500                    EPPR0   FPT_RESCTL,,AUTO
         2 002217   550000 713400                    CLIMB   alt,+53248
         2 002220   402400 401760                    pmme    nvectors=6
         2 002221   002632 702000 2                  TSX2    LIMIT_ERR

      895    13869        /**/
      896    13870        /*
      897    13871           ***  Tell the user what we acquired. Reset JIT.OLTA bits.
      898    13872        */
      899    13873        /**/
      900    13874    4              DO I = 0 TO REQ_RES.NN#-1;

  13874  2 002222   200016 450100                    STZ     I,,AUTO
         2 002223   002243 710000 2                  TRA     s:13881+1

      901    13875    4                 IF (REQ_RES.PRLIST.RNAME#(I) = 'MT01')

  13875  2 002224   200016 235100                    LDA     I,,AUTO
         2 002225   000002 735000                    ALS     2
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:131  
         2 002226   200270 236105                    LDQ     REQ_RES+2,AL,AUTO
         2 002227   000343 116000 1                  CMPQ    ATTR_EXCLUSIVE+3
         2 002230   002234 601000 2                  TNZ     s:13878

      902    13876    4                    THEN
      903    13877    4                       B$JIT.OLTA(0) = %NO#;

  13877  2 002231   000000 470400 xsym               LDP0    B$JIT$
         2 002232   000024 236000 3                  LDQ     20
         2 002233   000333 356100                    ANSQ    219,,PR0

      904    13878    4                 IF (REQ_RES.PRLIST.RNAME#(I) = 'MT02')

  13878  2 002234   200270 236105                    LDQ     REQ_RES+2,AL,AUTO
         2 002235   000344 116000 1                  CMPQ    ATTR_EXCLUSIVE+4
         2 002236   002242 601000 2                  TNZ     s:13881

      905    13879    4                    THEN
      906    13880    4                       B$JIT.OLTA(1) = %NO#;

  13880  2 002237   000000 470400 xsym               LDP0    B$JIT$
         2 002240   000025 236000 3                  LDQ     21
         2 002241   000333 356100                    ANSQ    219,,PR0

      907    13881    4              END;

  13881  2 002242   200016 054100                    AOS     I,,AUTO
         2 002243   200016 236100                    LDQ     I,,AUTO
         2 002244   200266 116100                    CMPQ    REQ_RES,,AUTO
         2 002245   002224 604000 2                  TMI     s:13875

      908    13882        /*
      909    13883             ***** Get the ATTR# for physical resources...
      910    13884        */
      911    13885    3              FPT_RESCTL.PRES_ = VECTOR(ATTR_RES);

  13885  2 002246   000017 235000 3                  LDA     15
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:132  
         2 002247   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 002250   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 002251   000662 036003                    ADLQ    434,DU
         2 002252   202554 757100                    STAQ    FPT_RESCTL+4,,AUTO

      912    13886    3              FPT_RESCTL.PSEUDO_ = VECTOR(NIL);

  13886  2 002253   000026 237000 3                  LDAQ    22
         2 002254   202552 757100                    STAQ    FPT_RESCTL+2,,AUTO

      913    13887    3              FPT_RESCTL.RPSN_ = VECTOR(NIL);

  13887  2 002255   000026 237000 3                  LDAQ    22
         2 002256   202556 757100                    STAQ    FPT_RESCTL+6,,AUTO

      914    13888    3              CALL M$DISPRES (FPT_RESCTL) ALTRET(E_PMME);

  13888  2 002257   202550 630500                    EPPR0   FPT_RESCTL,,AUTO
         2 002260   550002 713400                    CLIMB   alt,+53250
         2 002261   402400 401760                    pmme    nvectors=6
         2 002262   002771 702000 2                  TSX2    E_PMME

      915    13889        /**/
      916    13890    4              DO J = 0 TO REQ_RES.NN# -1;

  13890  2 002263   200017 450100                    STZ     J,,AUTO
         2 002264   002307 710000 2                  TRA     s:13896+1

      917    13891    5                 DO I = 0 TO ATTR_RES.NN# -1;

  13891  2 002265   200016 450100                    STZ     I,,AUTO
         2 002266   002303 710000 2                  TRA     s:13895+1

      918    13892    5                    IF REQ_RES.PRLIST.RNAME#(J) = ATTR_RES.PRLIST.RNAME#(I)

  13892  2 002267   200016 235100                    LDA     I,,AUTO
         2 002270   000002 735000                    ALS     2
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:133  
         2 002271   200017 236100                    LDQ     J,,AUTO
         2 002272   000002 736000                    QLS     2
         2 002273   200270 236106                    LDQ     REQ_RES+2,QL,AUTO
         2 002274   200664 116105                    CMPQ    ATTR_RES+2,AL,AUTO
         2 002275   002302 601000 2                  TNZ     s:13895

      919    13893    5                       THEN
      920    13894    5                          REQ_RES.PRLIST.ATTR#(J) = ATTR_RES.PRLIST.ATTR#(I);

  13894  2 002276   200017 236100                    LDQ     J,,AUTO
         2 002277   000002 736000                    QLS     2
         2 002300   200665 720105                    LXL0    ATTR_RES+3,AL,AUTO
         2 002301   200271 440106                    SXL0    REQ_RES+3,QL,AUTO

      921    13895    5                 END; /* do i= ... end */

  13895  2 002302   200016 054100                    AOS     I,,AUTO
         2 002303   200016 236100                    LDQ     I,,AUTO
         2 002304   200662 116100                    CMPQ    ATTR_RES,,AUTO
         2 002305   002267 604000 2                  TMI     s:13892

      922    13896    4              END; /* do j= ... end */

  13896  2 002306   200017 054100                    AOS     J,,AUTO
         2 002307   200017 236100                    LDQ     J,,AUTO
         2 002310   200266 116100                    CMPQ    REQ_RES,,AUTO
         2 002311   002265 604000 2                  TMI     s:13891

      923    13897        /*
      924    13898             ***** Print RESOURCES ACQUIRED hdr ...
      925    13899        */
      926    13900    3              OUTBUF = ' ';

  13900  2 002312   040100 100400                    MLR     fill='040'O
         2 002313   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002314   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:134  
      927    13901    3              FCB.FMT_ = VECTOR(ACQUIRE_HDR);

  13901  2 002315   000030 237000 3                  LDAQ    24
         2 002316   202572 757100                    STAQ    FCB,,AUTO

      928    13902    3              FCB.NVECS# = 0;

  13902  2 002317   202603 450100                    STZ     FCB+9,,AUTO

      929    13903    3              CALL X$FORMAT (FCB);

  13903  2 002320   202572 630500                    EPPR0   FCB,,AUTO
         2 002321   202754 450500                    STP0    ADD_IT+2,,AUTO
         2 002322   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 002323   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002324   000000 701000 xent               TSX1    X$FORMAT
         2 002325   000000 011000                    NOP     0

      930    13904        /*
      931    13905             ***** Format what resources were acquired ...
      932    13906        */
      933    13907    3              CALL DI_RESOURCES(REQ_PSEUDO,REQ_RES,REQ_PSN) ALTRET (E_SUBR);

  13907  2 002326   201466 630500                    EPPR0   REQ_PSN,,AUTO
         2 002327   202745 450500                    STP0    @DISP_RES+1,,AUTO
         2 002330   200266 631500                    EPPR1   REQ_RES,,AUTO
         2 002331   202744 451500                    STP1    @DISP_PSEUDO+1,,AUTO
         2 002332   201120 633500                    EPPR3   REQ_PSEUDO,,AUTO
         2 002333   202743 453500                    STP3    FMT_VECT+75,,AUTO
         2 002334   003014 701000 2                  TSX1    DI_RESOURCES
         2 002335   003012 702000 2                  TSX2    E_SUBR

      934    13908    3           END;   /* Get resources */

      935    13909        /**/
      936    13910    2     RETURN;

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:135  
  13910  2 002336   202740 221300                    LDX1  ! FMT_VECT+72,,AUTO
         2 002337   000001 702211                    TSX2  ! 1,X1

      937    13911        /**/
      938    13912    2   RELRES_ERR:
      939    13913    2     CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$ALT.ERR);

  13913  2 002340   000000 470400 xsym  RELRES_ERR   LDP0    B$TCB$
         2 002341   000000 471500                    LDP1    0,,PR0
         2 002342   100102 633500                    EPPR3   66,,PR1
         2 002343   202754 453500                    STP3    ADD_IT+2,,AUTO
         2 002344   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 002345   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002346   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 002347   000000 011000                    NOP     0

      940    13914        /**/
      941    13915        /*
      942    13916             ***** Print CANT RELEASE THESE RESOURCES hdr ...
      943    13917        */
      944    13918    2     OUTBUF = ' ';

  13918  2 002350   040100 100400                    MLR     fill='040'O
         2 002351   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002352   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

      945    13919    2     FCB.FMT_ = VECTOR(CANTRELEASE_HDR);

  13919  2 002353   000032 237000 3                  LDAQ    26
         2 002354   202572 757100                    STAQ    FCB,,AUTO

      946    13920    2     FCB.NVECS# = 0;

  13920  2 002355   202603 450100                    STZ     FCB+9,,AUTO

      947    13921    2     CALL X$FORMAT (FCB);

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:136  
  13921  2 002356   202572 630500                    EPPR0   FCB,,AUTO
         2 002357   202754 450500                    STP0    ADD_IT+2,,AUTO
         2 002360   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 002361   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002362   000000 701000 xent               TSX1    X$FORMAT
         2 002363   000000 011000                    NOP     0

      948    13922        /*
      949    13923             ***** Format what resources couldn't be released ...
      950    13924        */
      951    13925    2     CALL DI_RESOURCES(CUR_PSEUDO,CUR_RES,CUR_PSN) ALTRET (E_SUBR);

  13925  2 002364   201220 630500                    EPPR0   CUR_PSN,,AUTO
         2 002365   202745 450500                    STP0    @DISP_RES+1,,AUTO
         2 002366   200070 631500                    EPPR1   CUR_RES,,AUTO
         2 002367   202744 451500                    STP1    @DISP_PSEUDO+1,,AUTO
         2 002370   201060 633500                    EPPR3   CUR_PSEUDO,,AUTO
         2 002371   202743 453500                    STP3    FMT_VECT+75,,AUTO
         2 002372   003014 701000 2                  TSX1    DI_RESOURCES
         2 002373   003012 702000 2                  TSX2    E_SUBR

      952    13926        /**/
      953    13927        /*
      954    13928           ***  Delete the resources that we couldn't release from the
      955    13929                list of what we tried to release and display what we did.
      956    13930        */
      957    13931        /**/
      958    13932    3     DO I=0 TO CUR_RES.NN#-1;

  13932  2 002374   200016 450100                    STZ     I,,AUTO
         2 002375   002436 710000 2                  TRA     s:13947+1

      959    13933    3        J = 0;

  13933  2 002376   200017 450100                    STZ     J,,AUTO

      960    13934    4        DO WHILE (J < SAVE_RES.NN#);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:137  

  13934  2 002377   200017 236100                    LDQ     J,,AUTO
         2 002400   200464 116100                    CMPQ    SAVE_RES,,AUTO
         2 002401   002435 605000 2                  TPL     s:13947

      961    13935    4           IF (SAVE_RES.PRLIST.RNAME#(J) = CUR_RES.PRLIST.RNAME#(I))

  13935  2 002402   200016 235100                    LDA     I,,AUTO
         2 002403   000002 735000                    ALS     2
         2 002404   200017 236100                    LDQ     J,,AUTO
         2 002405   000002 736000                    QLS     2
         2 002406   200466 236106                    LDQ     SAVE_RES+2,QL,AUTO
         2 002407   200072 116105                    CMPQ    CUR_RES+2,AL,AUTO
         2 002410   002431 601000 2                  TNZ     s:13945

      962    13936
      963    13937    4              THEN
      964    13938    5                 DO;

      965    13939    5                    SAVE_RES.NN# = SAVE_RES.NN# - 1;

  13939  2 002411   000001 336007                    LCQ     1,DL
         2 002412   200464 056100                    ASQ     SAVE_RES,,AUTO

      966    13940    6                    DO K = J TO SAVE_RES.NN#-1;

  13940  2 002413   200017 235100                    LDA     J,,AUTO
         2 002414   200020 755100                    STA     K,,AUTO
         2 002415   002424 710000 2                  TRA     s:13942+1

      967    13941    6                       SAVE_RES.PRLIST(K) = SAVE_RES.PRLIST(K+1);

  13941  2 002416   200020 235100                    LDA     K,,AUTO
         2 002417   000004 735000                    ALS     4
         2 002420   000105 100505                    MLR     fill='000'O
         2 002421   200472 000020                    ADSC9   SAVE_RES+6,A,AUTO        cn=0,n=16
         2 002422   200466 000020                    ADSC9   SAVE_RES+2,A,AUTO        cn=0,n=16
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:138  

      968    13942    6                    END;

  13942  2 002423   200020 054100                    AOS     K,,AUTO
         2 002424   200020 236100                    LDQ     K,,AUTO
         2 002425   200464 116100                    CMPQ    SAVE_RES,,AUTO
         2 002426   002416 604000 2                  TMI     s:13941

      969    13943    5                    J = SAVE_RES.NN#;

  13943  2 002427   200464 235100                    LDA     SAVE_RES,,AUTO
         2 002430   200017 755100                    STA     J,,AUTO

      970    13944    5                 END;

      971    13945    4              J = J + 1;

  13945  2 002431   200017 054100                    AOS     J,,AUTO

      972    13946    4        END;

  13946  2 002432   200017 236100                    LDQ     J,,AUTO
         2 002433   200464 116100                    CMPQ    SAVE_RES,,AUTO
         2 002434   002402 604000 2                  TMI     s:13935

      973    13947    3     END;

  13947  2 002435   200016 054100                    AOS     I,,AUTO
         2 002436   200016 236100                    LDQ     I,,AUTO
         2 002437   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 002440   002376 604000 2                  TMI     s:13933

      974    13948        /**/
      975    13949    3     DO I=0 TO CUR_PSEUDO.NN#-1;

  13949  2 002441   200016 450100                    STZ     I,,AUTO
         2 002442   002541 710000 2                  TRA     s:13973+1
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:139  

      976    13950    3        J = 0;

  13950  2 002443   200017 450100                    STZ     J,,AUTO

      977    13951    4        DO WHILE (J < SAVE_PSEUDO.NN#);

  13951  2 002444   200017 236100                    LDQ     J,,AUTO
         2 002445   201160 116100                    CMPQ    SAVE_PSEUDO,,AUTO
         2 002446   002540 605000 2                  TPL     s:13973

      978    13952    4           IF (CUR_PSEUDO.PSLIST.PSEUDO#(I) = SAVE_PSEUDO.PSLIST.PSEUDO#(J))

  13952  2 002447   200016 236100                    LDQ     I,,AUTO
         2 002450   000014 402007                    MPY     12,DL
         2 002451   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 002452   200017 236100                    LDQ     J,,AUTO
         2 002453   000014 402007                    MPY     12,DL
         2 002454   202754 235100                    LDA     ADD_IT+2,,AUTO
         2 002455   040106 106505                    CMPC    fill='040'O
         2 002456   201064 000010                    ADSC9   CUR_PSEUDO+4,A,AUTO      cn=0,n=8
         2 002457   201164 000010                    ADSC9   SAVE_PSEUDO+4,Q,AUTO     cn=0,n=8
         2 002460   002534 601000 2                  TNZ     s:13971

      979    13953    4              THEN
      980    13954    5                 DO;

      981    13955    5                    IF (CUR_PSEUDO.PSLIST.NUM#(I) >= SAVE_PSEUDO.PSLIST.NUM#(J))

  13955  2 002461   200017 236100                    LDQ     J,,AUTO
         2 002462   000003 402007                    MPY     3,DL
         2 002463   201166 236106                    LDQ     SAVE_PSEUDO+6,QL,AUTO
         2 002464   000033 772000                    QRL     27
         2 002465   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 002466   200016 236100                    LDQ     I,,AUTO
         2 002467   000003 402007                    MPY     3,DL
         2 002470   201066 236106                    LDQ     CUR_PSEUDO+6,QL,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:140  
         2 002471   000033 772000                    QRL     27
         2 002472   202754 116100                    CMPQ    ADD_IT+2,,AUTO
         2 002473   002513 604000 2                  TMI     s:13966

      982    13956    5                       THEN
      983    13957    6                          DO;

      984    13958    6                             SAVE_PSEUDO.NN# = SAVE_PSEUDO.NN# - 1;

  13958  2 002474   000001 336007                    LCQ     1,DL
         2 002475   201160 056100                    ASQ     SAVE_PSEUDO,,AUTO

      985    13959    7                             DO K = J TO SAVE_PSEUDO.NN#-1;

  13959  2 002476   200017 235100                    LDA     J,,AUTO
         2 002477   200020 755100                    STA     K,,AUTO
         2 002500   002507 710000 2                  TRA     s:13961+1

      986    13960    7                                SAVE_PSEUDO.PSLIST(K) = SAVE_PSEUDO.PSLIST(K+1);

  13960  2 002501   200020 236100                    LDQ     K,,AUTO
         2 002502   000014 402007                    MPY     12,DL
         2 002503   000106 100506                    MLR     fill='000'O
         2 002504   201167 000014                    ADSC9   SAVE_PSEUDO+7,Q,AUTO     cn=0,n=12
         2 002505   201164 000014                    ADSC9   SAVE_PSEUDO+4,Q,AUTO     cn=0,n=12

      987    13961    7                             END;

  13961  2 002506   200020 054100                    AOS     K,,AUTO
         2 002507   200020 236100                    LDQ     K,,AUTO
         2 002510   201160 116100                    CMPQ    SAVE_PSEUDO,,AUTO
         2 002511   002501 604000 2                  TMI     s:13960

      988    13962    6                          END;

  13962  2 002512   002532 710000 2                  TRA     s:13969

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:141  
      989    13963        /**/
      990    13964    5                             ELSE
      991    13965    6                                DO;            /* Cur > req - release */

      992    13966    6                                   SAVE_PSEUDO.PSLIST.NUM#(J) =

  13966  2 002513   200017 236100                    LDQ     J,,AUTO
         2 002514   000003 402007                    MPY     3,DL
         2 002515   000000 620006                    EAX0    0,QL
         2 002516   200016 236100                    LDQ     I,,AUTO
         2 002517   000003 402007                    MPY     3,DL
         2 002520   201066 236106                    LDQ     CUR_PSEUDO+6,QL,AUTO
         2 002521   000033 772000                    QRL     27
         2 002522   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 002523   201166 236110                    LDQ     SAVE_PSEUDO+6,X0,AUTO
         2 002524   000033 772000                    QRL     27
         2 002525   202754 136100                    SBLQ    ADD_IT+2,,AUTO
         2 002526   000033 736000                    QLS     27
         2 002527   201166 676110                    ERQ     SAVE_PSEUDO+6,X0,AUTO
         2 002530   777000 376003                    ANQ     -512,DU
         2 002531   201166 656110                    ERSQ    SAVE_PSEUDO+6,X0,AUTO

      993    13967    6                                       SAVE_PSEUDO.PSLIST.NUM#(J) - CUR_PSEUDO.PSLIST.
             13967                                                 NUM#(I);
      994    13968    6                                END;

      995    13969    5                       J = SAVE_PSEUDO.NN#;

  13969  2 002532   201160 235100                    LDA     SAVE_PSEUDO,,AUTO
         2 002533   200017 755100                    STA     J,,AUTO

      996    13970    5                 END;

      997    13971    4                 J = J + 1;

  13971  2 002534   200017 054100                    AOS     J,,AUTO

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:142  
      998    13972    4        END;

  13972  2 002535   200017 236100                    LDQ     J,,AUTO
         2 002536   201160 116100                    CMPQ    SAVE_PSEUDO,,AUTO
         2 002537   002447 604000 2                  TMI     s:13952

      999    13973    3     END;

  13973  2 002540   200016 054100                    AOS     I,,AUTO
         2 002541   200016 236100                    LDQ     I,,AUTO
         2 002542   201060 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 002543   002443 604000 2                  TMI     s:13950

     1000    13974        /**/
     1001    13975    3     DO I=0 TO CUR_PSN.NN#-1;

  13975  2 002544   200016 450100                    STZ     I,,AUTO
         2 002545   002607 710000 2                  TRA     s:13989+1

     1002    13976    3        J = 0;

  13976  2 002546   200017 450100                    STZ     J,,AUTO

     1003    13977    4        DO WHILE (J < SAVE_PSN.NN#);

  13977  2 002547   200017 236100                    LDQ     J,,AUTO
         2 002550   201734 116100                    CMPQ    SAVE_PSN,,AUTO
         2 002551   002606 605000 2                  TPL     s:13989

     1004    13978    4           IF (SAVE_PSN.RPLIST.PSN#(J) = CUR_PSN.RPLIST.PSN#(I))

  13978  2 002552   200017 235100                    LDA     J,,AUTO
         2 002553   000004 735000                    ALS     4
         2 002554   200016 236100                    LDQ     I,,AUTO
         2 002555   000004 736000                    QLS     4
         2 002556   040106 106505                    CMPC    fill='040'O
         2 002557   201736 000006                    ADSC9   SAVE_PSN+2,A,AUTO        cn=0,n=6
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:143  
         2 002560   201222 000006                    ADSC9   CUR_PSN+2,Q,AUTO         cn=0,n=6
         2 002561   002602 601000 2                  TNZ     s:13987

     1005    13979    4              THEN
     1006    13980    5                 DO;

     1007    13981    5                    SAVE_PSN.NN# = SAVE_PSN.NN# - 1;

  13981  2 002562   000001 336007                    LCQ     1,DL
         2 002563   201734 056100                    ASQ     SAVE_PSN,,AUTO

     1008    13982    6                    DO K = J TO SAVE_PSN.NN#-1;

  13982  2 002564   200017 235100                    LDA     J,,AUTO
         2 002565   200020 755100                    STA     K,,AUTO
         2 002566   002575 710000 2                  TRA     s:13984+1

     1009    13983    6                       SAVE_PSN.RPLIST(K) = SAVE_PSN.RPLIST(K+1);

  13983  2 002567   200020 235100                    LDA     K,,AUTO
         2 002570   000004 735000                    ALS     4
         2 002571   000105 100505                    MLR     fill='000'O
         2 002572   201742 000020                    ADSC9   SAVE_PSN+6,A,AUTO        cn=0,n=16
         2 002573   201736 000020                    ADSC9   SAVE_PSN+2,A,AUTO        cn=0,n=16

     1010    13984    6                    END;

  13984  2 002574   200020 054100                    AOS     K,,AUTO
         2 002575   200020 236100                    LDQ     K,,AUTO
         2 002576   201734 116100                    CMPQ    SAVE_PSN,,AUTO
         2 002577   002567 604000 2                  TMI     s:13983

     1011    13985    5                    J = SAVE_PSN.NN#;

  13985  2 002600   201734 235100                    LDA     SAVE_PSN,,AUTO
         2 002601   200017 755100                    STA     J,,AUTO

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:144  
     1012    13986    5                 END;

     1013    13987    4                 J = J + 1;

  13987  2 002602   200017 054100                    AOS     J,,AUTO

     1014    13988    4        END;

  13988  2 002603   200017 236100                    LDQ     J,,AUTO
         2 002604   201734 116100                    CMPQ    SAVE_PSN,,AUTO
         2 002605   002552 604000 2                  TMI     s:13978

     1015    13989    3     END;

  13989  2 002606   200016 054100                    AOS     I,,AUTO
         2 002607   200016 236100                    LDQ     I,,AUTO
         2 002610   201220 116100                    CMPQ    CUR_PSN,,AUTO
         2 002611   002546 604000 2                  TMI     s:13976

     1016    13990        /**/
     1017    13991    2     SAVE_PSEUDO.MEMORY# = SAVE_PSEUDO.MEMORY# - CUR_PSEUDO.MEMORY#;

  13991  2 002612   201062 235100                    LDA     CUR_PSEUDO+2,,AUTO
         2 002613   000022 771000                    ARL     18
         2 002614   202754 755100                    STA     ADD_IT+2,,AUTO
         2 002615   201162 236100                    LDQ     SAVE_PSEUDO+2,,AUTO
         2 002616   000022 772000                    QRL     18
         2 002617   202754 136100                    SBLQ    ADD_IT+2,,AUTO
         2 002620   000000 620006                    EAX0    0,QL
         2 002621   201162 740100                    STX0    SAVE_PSEUDO+2,,AUTO

     1018    13992        /**/
     1019    13993    2     IF (SAVE_PSEUDO.MEMORY# ~= 0)OR

  13993  2 002622   002060 601000 2                  TNZ     RELRESINFO
         2 002623   201160 236100                    LDQ     SAVE_PSEUDO,,AUTO
         2 002624   002060 601000 2                  TNZ     RELRESINFO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:145  
         2 002625   201734 235100                    LDA     SAVE_PSN,,AUTO
         2 002626   002060 601000 2                  TNZ     RELRESINFO
         2 002627   200464 235100                    LDA     SAVE_RES,,AUTO
         2 002630   002060 601000 2                  TNZ     RELRESINFO

     1020    13994    2          (SAVE_PSEUDO.NN# ~= 0)OR
     1021    13995    2          (SAVE_PSN.NN# ~= 0)OR
     1022    13996    2          (SAVE_RES.NN# ~= 0)
     1023    13997
     1024    13998    2        THEN
     1025    13999    2           GOTO RELRESINFO;
     1026    14000    2        ELSE
     1027    14001    2           GOTO GET_RES;

  14001  2 002631   002157 710000 2                  TRA     GET_RES

     1028    14002        /**/
     1029    14003    2   LIMIT_ERR:
     1030    14004    2     ERR_CODE = B$TCB.ALT$ -> B$ALT.ERR;

  14004  2 002632   000000 470400 xsym  LIMIT_ERR    LDP0    B$TCB$
         2 002633   000000 471500                    LDP1    0,,PR0
         2 002634   100102 236100                    LDQ     66,,PR1
         2 002635   200024 756100                    STQ     ERR_CODE,,AUTO

     1031    14005    2     CALL CPC$WRITEMSGE (ERR_CODE);

  14005  2 002636   200024 631500                    EPPR1   ERR_CODE,,AUTO
         2 002637   202754 451500                    STP1    ADD_IT+2,,AUTO
         2 002640   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 002641   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002642   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 002643   000000 011000                    NOP     0

     1032    14006        /**/
     1033    14007    2     IF (ERR_CODE.CODE = %E$BSUNM)OR

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:146  
  14007  2 002644   200024 236100                    LDQ     ERR_CODE,,AUTO
         2 002645   377770 376007                    ANQ     131064,DL
         2 002646   012260 116007                    CMPQ    5296,DL
         2 002647   002652 600000 2                  TZE     s:14012
         2 002650   012240 116007                    CMPQ    5280,DL
         2 002651   002704 601000 2                  TNZ     s:14018

     1034    14008    2          (ERR_CODE.CODE = %E$SUOUT)
     1035    14009
     1036    14010    2        THEN
     1037    14011    3           DO; /* Bad pseudo */

     1038    14012    3              ERR_TEXT.NAME# = REQ_PSEUDO.PSLIST.PSEUDO#(REQ_PSEUDO.FAILX);

  14012  2 002652   201121 236100                    LDQ     REQ_PSEUDO+1,,AUTO
         2 002653   000014 402007                    MPY     12,DL
         2 002654   040100 100506                    MLR     fill='040'O
         2 002655   201124 000010                    ADSC9   REQ_PSEUDO+4,Q,AUTO      cn=0,n=8
         2 002656   200021 200013                    ADSC9   ERR_TEXT,,AUTO           cn=1,n=11

     1039    14013    3              CALL INDEX (I,' ',ERR_TEXT.NAME#);

  14013  2 002657   000000 124500                    SCM     mask='000'O
         2 002660   200021 200013                    ADSC9   ERR_TEXT,,AUTO           cn=1,n=11
         2 002661   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002662   200016 000100                    ARG     I,,AUTO

     1040    14014    3              ERR_TEXT.L# = I;

  14014  2 002663   200016 236100                    LDQ     I,,AUTO
         2 002664   000033 736000                    QLS     27
         2 002665   200021 552140                    STBQ    ERR_TEXT,'40'O,AUTO

     1041    14015    3              CALL CPC$WRITEMSGE(E_LIMPSEUDO,,ERR_TEXT,,,%YES#);

  14015  2 002666   000011 236000 3                  LDQ     9
         2 002667   000001 235000 xsym               LDA     B_VECTNIL+1
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:147  
         2 002670   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 002671   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002672   202757 756100                    STQ     ADD_IT+5,,AUTO
         2 002673   200021 630500                    EPPR0   ERR_TEXT,,AUTO
         2 002674   202756 450500                    STP0    ADD_IT+4,,AUTO
         2 002675   000034 235000 3                  LDA     28
         2 002676   202754 757100                    STAQ    ADD_IT+2,,AUTO
         2 002677   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 002700   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 002701   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 002702   000000 011000                    NOP     0

     1042    14016    3           END;

  14016  2 002703   002767 710000 2                  TRA     s:14040

     1043    14017    2        ELSE
     1044    14018    2           IF ERR_CODE.CODE = %E$LESMEM

  14018  2 002704   012340 116007                    CMPQ    5344,DL
         2 002705   002707 601000 2                  TNZ     s:14025

     1045    14019
     1046    14020    2              THEN
     1047    14021    3                 DO;

     1048    14022    3                 END;

  14022  2 002706   002767 710000 2                  TRA     s:14040

     1049    14023        /**/
     1050    14024    2              ELSE
     1051    14025    2                 IF ERR_CODE.CODE = %E$NODP

  14025  2 002707   012170 116007                    CMPQ    5240,DL
         2 002710   002743 601000 2                  TNZ     s:14036

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:148  
     1052    14026
     1053    14027    2                    THEN
     1054    14028    3                       DO; /* Bad psn */

     1055    14029    3                          ERR_TEXT.NAME# = REQ_PSN.RPLIST.PSN#(REQ_PSN.FAILX);

  14029  2 002711   201467 235100                    LDA     REQ_PSN+1,,AUTO
         2 002712   000004 735000                    ALS     4
         2 002713   040100 100505                    MLR     fill='040'O
         2 002714   201470 000006                    ADSC9   REQ_PSN+2,A,AUTO         cn=0,n=6
         2 002715   200021 200013                    ADSC9   ERR_TEXT,,AUTO           cn=1,n=11

     1056    14030    3                          CALL INDEX (I,' ',ERR_TEXT.NAME#);

  14030  2 002716   000000 124500                    SCM     mask='000'O
         2 002717   200021 200013                    ADSC9   ERR_TEXT,,AUTO           cn=1,n=11
         2 002720   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002721   200016 000100                    ARG     I,,AUTO

     1057    14031    3                          ERR_TEXT.L# = I;

  14031  2 002722   200016 236100                    LDQ     I,,AUTO
         2 002723   000033 736000                    QLS     27
         2 002724   200021 552140                    STBQ    ERR_TEXT,'40'O,AUTO

     1058    14032    3                          CALL CPC$WRITEMSGE(E_LIMPSN,,ERR_TEXT,,,%YES#);

  14032  2 002725   000011 236000 3                  LDQ     9
         2 002726   000001 235000 xsym               LDA     B_VECTNIL+1
         2 002727   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 002730   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002731   202757 756100                    STQ     ADD_IT+5,,AUTO
         2 002732   200021 630500                    EPPR0   ERR_TEXT,,AUTO
         2 002733   202756 450500                    STP0    ADD_IT+4,,AUTO
         2 002734   000035 235000 3                  LDA     29
         2 002735   202754 757100                    STAQ    ADD_IT+2,,AUTO
         2 002736   202754 630500                    EPPR0   ADD_IT+2,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:149  
         2 002737   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 002740   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 002741   000000 011000                    NOP     0

     1059    14033    3                       END;

  14033  2 002742   002767 710000 2                  TRA     s:14040

     1060    14034    2                    ELSE
     1061    14035    3                       DO;

     1062    14036    3                          ERR_TEXT.L# = SIZEC(REQ_RES.PRLIST.RNAME#(0));

  14036  2 002743   004000 236003                    LDQ     2048,DU
         2 002744   200021 552140                    STBQ    ERR_TEXT,'40'O,AUTO

     1063    14037    3                          ERR_TEXT.NAME# = REQ_RES.PRLIST.RNAME#(REQ_RES.FAILX);

  14037  2 002745   200267 235100                    LDA     REQ_RES+1,,AUTO
         2 002746   000004 735000                    ALS     4
         2 002747   040100 100505                    MLR     fill='040'O
         2 002750   200270 000004                    ADSC9   REQ_RES+2,A,AUTO         cn=0,n=4
         2 002751   200021 200013                    ADSC9   ERR_TEXT,,AUTO           cn=1,n=11

     1064    14038    3                          CALL CPC$WRITEMSGE(E_LIMRES,,ERR_TEXT,,,%YES#);

  14038  2 002752   000011 236000 3                  LDQ     9
         2 002753   000001 235000 xsym               LDA     B_VECTNIL+1
         2 002754   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 002755   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002756   202757 756100                    STQ     ADD_IT+5,,AUTO
         2 002757   200021 630500                    EPPR0   ERR_TEXT,,AUTO
         2 002760   202756 450500                    STP0    ADD_IT+4,,AUTO
         2 002761   000036 235000 3                  LDA     30
         2 002762   202754 757100                    STAQ    ADD_IT+2,,AUTO
         2 002763   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 002764   000024 631400 xsym               EPPR1   B_VECTNIL+20
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:150  
         2 002765   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 002766   000000 011000                    NOP     0

     1065    14039    3                       END;

     1066    14040    2     ALTRETURN;

  14040  2 002767   202740 221300                    LDX1  ! FMT_VECT+72,,AUTO
         2 002770   000000 702211                    TSX2  ! 0,X1

  14036  2 002771                       E_PMME       null
     1067    14041        /**/
     1068    14042    2   E_PMME:;
     1069    14043    2     ERR_CODE = B$TCB.ALT$ -> B$ALT.ERR;

  14043  2 002771   000000 470400 xsym               LDP0    B$TCB$
         2 002772   000000 471500                    LDP1    0,,PR0
         2 002773   100102 236100                    LDQ     66,,PR1
         2 002774   200024 756100                    STQ     ERR_CODE,,AUTO

     1070    14044    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,ERR_CODE) ;

  14044  2 002775   000000 236000 xsym               LDQ     SEG2$
         2 002776   000003 036003                    ADLQ    3,DU
         2 002777   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 003000   200024 631500                    EPPR1   ERR_CODE,,AUTO
         2 003001   202757 451500                    STP1    ADD_IT+5,,AUTO
         2 003002   000040 236000 3                  LDQ     32
         2 003003   202756 756100                    STQ     ADD_IT+4,,AUTO
         2 003004   202754 633500                    EPPR3   ADD_IT+2,,AUTO
         2 003005   202755 453500                    STP3    ADD_IT+3,,AUTO
         2 003006   202755 630500                    EPPR0   ADD_IT+3,,AUTO
         2 003007   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003010   000000 701000 xent               TSX1    CXP$POSTERR
         2 003011   000000 011000                    NOP     0

     1071    14045        /**/
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:151  
     1072    14046    2   E_SUBR:
     1073    14047    2     ALTRETURN;

  14047  2 003012   202740 221300       E_SUBR       LDX1  ! FMT_VECT+72,,AUTO
         2 003013   000000 702211                    TSX2  ! 0,X1

     1074    14048    2   END PROCESS_RES_LISTS;
     1075    14049        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:152  
     1076    14050        /**/
     1077    14051    1   DI_RESOURCES: PROC(DISP_PSEUDO,DISP_RES,DISP_PSN) ALTRET;

  14051  2 003014   202742 741300       DI_RESOURCES STX1  ! FMT_VECT+74,,AUTO

     1078    14052        /***** Parameters *****/
     1079    14053        %VLP_PRES (FPTN=DISP_RES,N=VIRT_SLOTS,STCLASS="");
     1080    14069        %VLP_PSEUDO (FPTN=DISP_PSEUDO,N=PSEUDO_SLOTS,STCLASS="");
     1081    14085        %VLP_RPSN (FPTN=DISP_PSN,N=PSN_SLOTS,STCLASS="");
     1082    14100        /***** Formats *****/
     1083    14101    2     DCL PSEUDO_HDR CHAR(0) CONSTANT INIT
     1084    14102    2        ('%3XPseudo resources:');
     1085    14103    2     DCL RES_HDR CHAR(0) CONSTANT INIT
     1086    14104    2        ('%3XPhysical resources:');
     1087    14105    2     DCL PSN_HDR CHAR(0) CONSTANT INIT
     1088    14106    2        ('%3XPackSet resources:');
     1089    14107    2     DCL RES_FMT1 CHAR(0) CONSTANT INIT
     1090    14108    2        ('%5X%>A%S');
     1091    14109    2     DCL RES_FMT2 CHAR(0) CONSTANT INIT
     1092    14110    2        ('%5X%>A(%N(%A,%)%A)');
     1093    14111    2     DCL PSEUDO_FMT CHAR(0) CONSTANT INIT
     1094    14112    2        ('%5X%>A=%D');
     1095    14113    2     DCL PSN_FMT CHAR(0) CONSTANT INIT
     1096    14114    2        ('%5XDP#%>A(%>A)');
     1097    14115    2     DCL ENQ_FMT CHAR(0) CONSTANT INIT
     1098    14116    2        ('%5XEnqBlocks=%D');
     1099    14117    2     DCL MEM_FMT CHAR(0) CONSTANT INIT
     1100    14118    2        ('%5XMemory=%D');
     1101    14119        /***** Attribute constants *****/
     1102    14120          %EQU NUM_ATTRS# = 14;
     1103    14121    2     DCL ATTR_ARRAY (0:%NUM_ATTRS#) BIT(36) CONSTANT INIT
     1104    14122    2   /* MT */ (%ATTR_D800#, %ATTR_D1600#, %ATTR_D6250#, %ATTR_D38000#,
     1105    14123    2   /* DP */ %ATTR_DD200#, %ATTR_DD600#, %ATTR_DD500#,
     1106    14124    2            %ATTR_DD1000#, %ATTR_DD1500#, %ATTR_DD400#, %ATTR_DD1100#,
     1107    14125    2   /* LP */ %ATTR_LOWERCASE#, %ATTR_BIN#, %ATTR_APL#, %ATTR_TRUOVRPRT#);
     1108    14126
     1109    14127        /* ** the following constants DEPEND on the size, and order of the */
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:153  
     1110    14128        /*    ATTR_ARRAY above.  They are the MIN and MAX index values     */
     1111    14129        %SUB MT_MIN =  0;
     1112    14130        %SUB MT_MAX =  3;
     1113    14131        %SUB DP_MIN =  4;
     1114    14132        %SUB DP_MAX = 10;
     1115    14133        %SUB LP_MIN = 11;
     1116    14134        %SUB LP_MAX = 14;    /* this should be NUM_ATTRS# !! */
     1117    14135        %SUB TRUE = '1'B;
     1118    14136        %SUB FALSE = '0'B;
     1119    14137
     1120    14138    2     DCL ATTR_VECT (0:%NUM_ATTRS#) BIT(72) CONSTANT INIT
     1121    14139    2   /* MT*/ (VECTOR(ATTR_800), VECTOR(ATTR_1600), VECTOR(ATTR_6250),
     1122    14140    2            VECTOR(ATTR_38000),
     1123    14141    2   /* DP */ VECTOR(ATTR_200), VECTOR(ATTR_600), VECTOR(ATTR_500),
     1124    14142    2            VECTOR(ATTR_1000),
     1125    14143    2            VECTOR(ATTR_1500), VECTOR(ATTR_400), VECTOR(ATTR_1100),
     1126    14144    2   /* LP */ VECTOR(ATTR_LC), VECTOR(ATTR_BIN), VECTOR(ATTR_APL),
     1127    14145    2            VECTOR(ATTR_TRUOVRPRT) );
     1128    14146        /**/
     1129    14147    2     DCL ATTR_800 CHAR(0) CONSTANT INIT('800BPI');
     1130    14148    2     DCL ATTR_1600 CHAR(0) CONSTANT INIT('1600BPI');
     1131    14149    2     DCL ATTR_6250 CHAR(0) CONSTANT INIT('6250BPI');
     1132    14150    2     DCL ATTR_38000 CHAR(0) CONSTANT INIT('38000BPI');
     1133    14151    2     DCL ATTR_200 CHAR(0) CONSTANT INIT('200Meg');
     1134    14152    2     DCL ATTR_600 CHAR(0) CONSTANT INIT('600Meg');
     1135    14153    2     DCL ATTR_500 CHAR(0) CONSTANT INIT('500Meg');
     1136    14154    2     DCL ATTR_1000 CHAR(0) CONSTANT INIT('1000Meg');
     1137    14155    2     DCL ATTR_1500 CHAR(0) CONSTANT INIT('1500Meg');   /*FIPS K*/
     1138    14156    2     DCL ATTR_400 CHAR(0) CONSTANT INIT('400Meg');     /*MDS I*/
     1139    14157    2     DCL ATTR_1100 CHAR(0) CONSTANT INIT('1100Meg');   /*MDS II*/
     1140    14158    2     DCL ATTR_LC CHAR(0) CONSTANT INIT('LC');
     1141    14159    2     DCL ATTR_BIN CHAR(0) CONSTANT INIT('Bin');
     1142    14160    2     DCL ATTR_APL CHAR(0) CONSTANT INIT('APL');
     1143    14161    2     DCL ATTR_TRUOVRPRT CHAR(0) CONSTANT INIT('OverPrint');
     1144    14162    2     DCL ATTR_SHARED CHAR(0) CONSTANT INIT('Shared');
     1145    14163    2     DCL ATTR_EXCLUSIVE CHAR(0) CONSTANT INIT('Exclusive');
     1146    14164        /***** Auto data *****/
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:154  
     1147    14165    2     DCL HDR_PRINTED# BIT(1) AUTO;
     1148    14166    2     DCL I SBIN WORD AUTO;
     1149    14167    2     DCL J SBIN WORD AUTO;
     1150    14168    2     DCL ATTR# BIT(36) ALIGNED AUTO;
     1151    14169    2     DCL ADD_IT BIT(1);
     1152    14170        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:155  
     1153    14171        /*
     1154    14172             ***** Display PSEUDO resources ...
     1155    14173        */
     1156    14174    2     IF DISP_PSEUDO.NN# ~= 0

  14174  2 003015   202743 470500                    LDP0    @DISP_PSEUDO,,AUTO
         2 003016   000000 235100                    LDA     0,,PR0
         2 003017   003113 600000 2                  TZE     s:14211

     1157    14175    2        THEN
     1158    14176    3           DO;   /* Some pseudo resources */

     1159    14177    3              HDR_PRINTED# = %NO#;

  14177  2 003020   202746 450100                    STZ     HDR_PRINTED#,,AUTO

     1160    14178    4              DO I = 0 TO DISP_PSEUDO.NN# -1;

  14178  2 003021   202747 450100                    STZ     I,,AUTO
         2 003022   003107 710000 2                  TRA     s:14198+1

     1161    14179    4                 IF DISP_PSEUDO.PSLIST.NUM#(I) ~= 0

  14179  2 003023   202747 236100                    LDQ     I,,AUTO
         2 003024   000003 402007                    MPY     3,DL
         2 003025   202743 470500                    LDP0    @DISP_PSEUDO,,AUTO
         2 003026   000006 236106                    LDQ     6,QL,PR0
         2 003027   777000 316003                    CANQ    -512,DU
         2 003030   003106 600000 2                  TZE     s:14198

     1162    14180    4                    THEN
     1163    14181    5                       DO;   /* Something to print */

     1164    14182    5                          IF HDR_PRINTED# = %NO#

  14182  2 003031   202746 234100                    SZN     HDR_PRINTED#,,AUTO
         2 003032   003051 604000 2                  TMI     s:14191
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:156  

     1165    14183    5                             THEN
     1166    14184    6                                DO;   /* Print header first */

     1167    14185    6                                   HDR_PRINTED# = %YES#;

  14185  2 003033   400000 236003                    LDQ     -131072,DU
         2 003034   202746 756100                    STQ     HDR_PRINTED#,,AUTO

     1168    14186    6                                   OUTBUF = ' ';

  14186  2 003035   040100 100400                    MLR     fill='040'O
         2 003036   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003037   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

     1169    14187    6                                   FCB.FMT_ = VECTOR(PSEUDO_HDR);

  14187  2 003040   000042 237000 3                  LDAQ    34
         2 003041   202572 757100                    STAQ    FCB,,AUTO

     1170    14188    6                                   FCB.NVECS# = 0;

  14188  2 003042   202603 450100                    STZ     FCB+9,,AUTO

     1171    14189    6                                   CALL X$FORMAT (FCB);

  14189  2 003043   202572 631500                    EPPR1   FCB,,AUTO
         2 003044   202754 451500                    STP1    ADD_IT+2,,AUTO
         2 003045   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003046   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003047   000000 701000 xent               TSX1    X$FORMAT
         2 003050   000000 011000                    NOP     0

     1172    14190    6                                END;   /* Print header */

     1173    14191    5                          FCB.FMT_ = VECTOR(PSEUDO_FMT);

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:157  
  14191  2 003051   000044 237000 3                  LDAQ    36
         2 003052   202572 757100                    STAQ    FCB,,AUTO

     1174    14192    5                          FMT_VECT(0) = VECTOR(DISP_PSEUDO.PSLIST.PSEUDO#(I));

  14192  2 003053   000046 235000 3                  LDA     38
         2 003054   202747 236100                    LDQ     I,,AUTO
         2 003055   202754 755100                    STA     ADD_IT+2,,AUTO
         2 003056   000003 402003                    MPY     3,DU
         2 003057   000004 036003                    ADLQ    4,DU
         2 003060   202743 036100                    ADLQ    @DISP_PSEUDO,,AUTO
         2 003061   202754 235100                    LDA     ADD_IT+2,,AUTO
         2 003062   202630 757100                    STAQ    FMT_VECT,,AUTO

     1175    14193    5                          FMT_VECT(1) = VECTOR(DISP_PSEUDO.PSLIST.NUM#(I));

  14193  2 003063   177640 235007                    LDA     65440,DL
         2 003064   202747 236100                    LDQ     I,,AUTO
         2 003065   202754 755100                    STA     ADD_IT+2,,AUTO
         2 003066   000003 402003                    MPY     3,DU
         2 003067   000006 036003                    ADLQ    6,DU
         2 003070   202743 036100                    ADLQ    @DISP_PSEUDO,,AUTO
         2 003071   202754 235100                    LDA     ADD_IT+2,,AUTO
         2 003072   202632 757100                    STAQ    FMT_VECT+2,,AUTO

     1176    14194    5                          OUTBUF = ' ';

  14194  2 003073   040100 100400                    MLR     fill='040'O
         2 003074   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003075   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

     1177    14195    5                          FCB.NVECS# = 2;

  14195  2 003076   000002 235007                    LDA     2,DL
         2 003077   202603 755100                    STA     FCB+9,,AUTO

     1178    14196    5                          CALL X$FORMAT (FCB);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:158  

  14196  2 003100   202572 630500                    EPPR0   FCB,,AUTO
         2 003101   202754 450500                    STP0    ADD_IT+2,,AUTO
         2 003102   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003104   000000 701000 xent               TSX1    X$FORMAT
         2 003105   000000 011000                    NOP     0

     1179    14197    5                       END;   /* Something to print */

     1180    14198    4              END;   /* Do i = ... end */

  14198  2 003106   202747 054100                    AOS     I,,AUTO
         2 003107   202743 470500                    LDP0    @DISP_PSEUDO,,AUTO
         2 003110   202747 236100                    LDQ     I,,AUTO
         2 003111   000000 116100                    CMPQ    0,,PR0
         2 003112   003023 604000 2                  TMI     s:14179

     1181    14199    3           END;   /* Some pseudo resources */

     1182    14200        %IF '0'B;   /* ENQBLOCKS not yet implemented */
     1192    14210        %ENDIF;
     1193    14211    2     IF DISP_PSEUDO.MEMORY# ~= 0

  14211  2 003113   000002 220100                    LDX0    2,,PR0
         2 003114   003136 600000 2                  TZE     s:14223

     1194    14212    2        THEN
     1195    14213    3           DO;   /* Something to display */

     1196    14214    3              OUTBUF = ' ';

  14214  2 003115   040100 100400                    MLR     fill='040'O
         2 003116   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003117   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

     1197    14215    3              FCB.FMT_ = VECTOR(MEM_FMT);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:159  

  14215  2 003120   000050 237000 3                  LDAQ    40
         2 003121   202572 757100                    STAQ    FCB,,AUTO

     1198    14216    3              FCB.NVECS# = 1;

  14216  2 003122   000001 235007                    LDA     1,DL
         2 003123   202603 755100                    STA     FCB+9,,AUTO

     1199    14217    3              FMT_VECT(0) = VECTOR(DISP_PSEUDO.MEMORY#);

  14217  2 003124   377640 235007                    LDA     130976,DL
         2 003125   202743 236100                    LDQ     @DISP_PSEUDO,,AUTO
         2 003126   000002 036003                    ADLQ    2,DU
         2 003127   202630 757100                    STAQ    FMT_VECT,,AUTO

     1200    14218    3              CALL X$FORMAT (FCB);

  14218  2 003130   202572 631500                    EPPR1   FCB,,AUTO
         2 003131   202754 451500                    STP1    ADD_IT+2,,AUTO
         2 003132   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003134   000000 701000 xent               TSX1    X$FORMAT
         2 003135   000000 011000                    NOP     0

     1201    14219    3           END;   /* Something to display */

     1202    14220        /*
     1203    14221             ***** Display PACKSET resources ...
     1204    14222        */
     1205    14223    2     IF DISP_PSN.NN# ~= 0

  14223  2 003136   202745 470500                    LDP0    @DISP_PSN,,AUTO
         2 003137   000000 235100                    LDA     0,,PR0
         2 003140   003223 600000 2                  TZE     s:14247

     1206    14224    2        THEN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:160  
     1207    14225    3           DO;   /* Something to display */

     1208    14226    3              OUTBUF = ' ';

  14226  2 003141   040100 100400                    MLR     fill='040'O
         2 003142   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003143   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

     1209    14227    3              FCB.NVECS# = 0;

  14227  2 003144   202603 450100                    STZ     FCB+9,,AUTO

     1210    14228    3              FCB.FMT_ = VECTOR(PSN_HDR);

  14228  2 003145   000052 237000 3                  LDAQ    42
         2 003146   202572 757100                    STAQ    FCB,,AUTO

     1211    14229    3              CALL X$FORMAT (FCB);

  14229  2 003147   202572 631500                    EPPR1   FCB,,AUTO
         2 003150   202754 451500                    STP1    ADD_IT+2,,AUTO
         2 003151   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003152   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003153   000000 701000 xent               TSX1    X$FORMAT
         2 003154   000000 011000                    NOP     0

     1212    14230        /**/
     1213    14231    3              FCB.FMT_ = VECTOR(PSN_FMT);

  14231  2 003155   000054 237000 3                  LDAQ    44
         2 003156   202572 757100                    STAQ    FCB,,AUTO

     1214    14232    3              FCB.NVECS# = 2;

  14232  2 003157   000002 235007                    LDA     2,DL
         2 003160   202603 755100                    STA     FCB+9,,AUTO

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:161  
     1215    14233    4              DO I = 0 TO DISP_PSN.NN# -1;

  14233  2 003161   202747 450100                    STZ     I,,AUTO
         2 003162   003217 710000 2                  TRA     s:14242+1

     1216    14234    4                 OUTBUF = ' ';

  14234  2 003163   040100 100400                    MLR     fill='040'O
         2 003164   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003165   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

     1217    14235    4                 FMT_VECT(0) = VECTOR(DISP_PSN.RPLIST.PSN#(I));

  14235  2 003166   000002 235000 3                  LDA     2
         2 003167   202747 236100                    LDQ     I,,AUTO
         2 003170   000024 736000                    QLS     20
         2 003171   000002 036003                    ADLQ    2,DU
         2 003172   202745 036100                    ADLQ    @DISP_PSN,,AUTO
         2 003173   202630 757100                    STAQ    FMT_VECT,,AUTO

     1218    14236    4                 IF DISP_PSN.RPLIST.USAGE#(I) = %EXCLUSIVE#

  14236  2 003174   202747 235100                    LDA     I,,AUTO
         2 003175   000002 735000                    ALS     2
         2 003176   202745 470500                    LDP0    @DISP_PSN,,AUTO
         2 003177   000003 236105                    LDQ     3,AL,PR0
         2 003200   777000 376007                    ANQ     -512,DL
         2 003201   002000 116007                    CMPQ    1024,DL
         2 003202   003206 601000 2                  TNZ     s:14240

     1219    14237    4                    THEN
     1220    14238    4                       FMT_VECT(1) = VECTOR(ATTR_EXCLUSIVE);

  14238  2 003203   000056 237000 3                  LDAQ    46
         2 003204   202632 757100                    STAQ    FMT_VECT+2,,AUTO
         2 003205   003210 710000 2                  TRA     s:14241

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:162  
     1221    14239    4                    ELSE
     1222    14240    4                       FMT_VECT(1) = VECTOR(ATTR_SHARED);

  14240  2 003206   000060 237000 3                  LDAQ    48
         2 003207   202632 757100                    STAQ    FMT_VECT+2,,AUTO

     1223    14241    4                    CALL X$FORMAT (FCB);

  14241  2 003210   202572 631500                    EPPR1   FCB,,AUTO
         2 003211   202754 451500                    STP1    ADD_IT+2,,AUTO
         2 003212   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003214   000000 701000 xent               TSX1    X$FORMAT
         2 003215   000000 011000                    NOP     0

     1224    14242    4              END;   /* Do i = ... end */

  14242  2 003216   202747 054100                    AOS     I,,AUTO
         2 003217   202745 470500                    LDP0    @DISP_PSN,,AUTO
         2 003220   202747 236100                    LDQ     I,,AUTO
         2 003221   000000 116100                    CMPQ    0,,PR0
         2 003222   003163 604000 2                  TMI     s:14234

     1225    14243    3           END;   /* Something to display */

     1226    14244        /*
     1227    14245             ***** Display PHYSICAL resources ...
     1228    14246        */
     1229    14247    2     IF DISP_RES.NN# ~= 0

  14247  2 003223   202744 471500                    LDP1    @DISP_RES,,AUTO
         2 003224   100000 235100                    LDA     0,,PR1
         2 003225   003405 600000 2                  TZE     s:14295

     1230    14248    2        THEN
     1231    14249    3           DO;   /* Something to display */

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:163  
     1232    14250    3              OUTBUF = ' ';

  14250  2 003226   040100 100400                    MLR     fill='040'O
         2 003227   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003230   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

     1233    14251    3              FCB.NVECS# = 0;

  14251  2 003231   202603 450100                    STZ     FCB+9,,AUTO

     1234    14252    3              FCB.FMT_ = VECTOR(RES_HDR);

  14252  2 003232   000062 237000 3                  LDAQ    50
         2 003233   202572 757100                    STAQ    FCB,,AUTO

     1235    14253    3              CALL X$FORMAT (FCB);

  14253  2 003234   202572 633500                    EPPR3   FCB,,AUTO
         2 003235   202754 453500                    STP3    ADD_IT+2,,AUTO
         2 003236   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003237   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003240   000000 701000 xent               TSX1    X$FORMAT
         2 003241   000000 011000                    NOP     0

     1236    14254        /**/
     1237    14255    4              DO I = 0 TO DISP_RES.NN# -1;

  14255  2 003242   202747 450100                    STZ     I,,AUTO
         2 003243   003401 710000 2                  TRA     s:14293+1

     1238    14256    4                 OUTBUF = ' ';

  14256  2 003244   040100 100400                    MLR     fill='040'O
         2 003245   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003246   200032 000170                    ADSC9   OUTBUF,,AUTO             cn=0,n=120

     1239    14257    4                 FCB.NVECS# = 2;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:164  

  14257  2 003247   000002 235007                    LDA     2,DL
         2 003250   202603 755100                    STA     FCB+9,,AUTO

     1240    14258    4                 FMT_VECT(0) = VECTOR(DISP_RES.PRLIST.RNAME#(I));

  14258  2 003251   777640 235007                    LDA     -96,DL
         2 003252   202747 236100                    LDQ     I,,AUTO
         2 003253   000024 736000                    QLS     20
         2 003254   000002 036003                    ADLQ    2,DU
         2 003255   202744 036100                    ADLQ    @DISP_RES,,AUTO
         2 003256   202630 757100                    STAQ    FMT_VECT,,AUTO

     1241    14259    4                 ATTR# = DISP_RES.PRLIST.ATTR#(I);

  14259  2 003257   202747 235100                    LDA     I,,AUTO
         2 003260   000002 735000                    ALS     2
         2 003261   202744 470500                    LDP0    @DISP_RES,,AUTO
         2 003262   000003 236105                    LDQ     3,AL,PR0
         2 003263   000022 736000                    QLS     18
         2 003264   202751 756100                    STQ     ATTR#,,AUTO

     1242    14260    4                 IF ATTR# = %NO#

  14260  2 003265   003271 601000 2                  TNZ     s:14265

     1243    14261    4                    THEN   /* No attributes */
     1244    14262    4                       FCB.FMT_ = VECTOR(RES_FMT1);

  14262  2 003266   000046 237000 3                  LDAQ    38
         2 003267   202572 757100                    STAQ    FCB,,AUTO
         2 003270   003362 710000 2                  TRA     s:14290

     1245    14263    4                    ELSE   /* Attributes to display too */
     1246    14264    5                       DO;

     1247    14265    5                          FCB.FMT_ = VECTOR(RES_FMT2);
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:165  

  14265  2 003271   000064 237000 3                  LDAQ    52
         2 003272   202572 757100                    STAQ    FCB,,AUTO

     1248    14266    6                          DO J = 0 TO %NUM_ATTRS#;

  14266  2 003273   202750 450100                    STZ     J,,AUTO

     1249    14267    6                             ADD_IT = FALSE;

  14267  2 003274   202752 450100                    STZ     ADD_IT,,AUTO

     1250    14268    6                             IF ATTR# & ATTR_ARRAY(J) THEN

  14268  2 003275   202750 720100                    LXL0    J,,AUTO
         2 003276   202751 236100                    LDQ     ATTR#,,AUTO
         2 003277   000225 376010 1                  ANQ     ATTR_ARRAY,X0
         2 003300   003344 600000 2                  TZE     s:14281

     1251    14269    7                               DO SELECT(SUBSTR(DISP_RES.PRLIST.RNAME#(I),0,2));

  14269  2 003301   202747 235100                    LDA     I,,AUTO
         2 003302   000002 735000                    ALS     2
         2 003303   202744 470500                    LDP0    @DISP_RES,,AUTO
         2 003304   000002 221105                    LDX1    2,AL,PR0
         2 003305   000345 101000 1                  CMPX1   ATTR_EXCLUSIVE+5
         2 003306   003313 602000 2                  TNC     s:14269+10
         2 003307   003335 600000 2                  TZE     s:14277
         2 003310   000343 101000 1                  CMPX1   ATTR_EXCLUSIVE+3
         2 003311   003344 601000 2                  TNZ     s:14281
         2 003312   003316 710000 2                  TRA     s:14271
         2 003313   000346 101000 1                  CMPX1   ATTR_EXCLUSIVE+6
         2 003314   003344 601000 2                  TNZ     s:14281
         2 003315   003325 710000 2                  TRA     s:14274

     1252    14270    7                                 SELECT('MT');

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:166  
     1253    14271    7                                    IF (J >= MT_MIN) AND (J <= MT_MAX) THEN

  14271  2 003316   202750 236100                    LDQ     J,,AUTO
         2 003317   003344 604000 2                  TMI     s:14281
         2 003320   000003 116007                    CMPQ    3,DL
         2 003321   003344 605400 2                  TPNZ    s:14281

     1254    14272    7                                       ADD_IT = TRUE;

  14272  2 003322   400000 236003                    LDQ     -131072,DU
         2 003323   202752 756100                    STQ     ADD_IT,,AUTO
         2 003324   003344 710000 2                  TRA     s:14281

     1255    14273    7                                 SELECT('DP');

     1256    14274    7                                    IF (J >= DP_MIN) AND (J <= DP_MAX) THEN

  14274  2 003325   202750 236100                    LDQ     J,,AUTO
         2 003326   000004 116007                    CMPQ    4,DL
         2 003327   003344 604000 2                  TMI     s:14281
         2 003330   000012 116007                    CMPQ    10,DL
         2 003331   003344 605400 2                  TPNZ    s:14281

     1257    14275    7                                       ADD_IT = TRUE;

  14275  2 003332   400000 236003                    LDQ     -131072,DU
         2 003333   202752 756100                    STQ     ADD_IT,,AUTO
         2 003334   003344 710000 2                  TRA     s:14281

     1258    14276    7                                 SELECT('LP');

     1259    14277    7                                    IF (J >= LP_MIN) AND (J <= LP_MAX) THEN

  14277  2 003335   202750 236100                    LDQ     J,,AUTO
         2 003336   000013 116007                    CMPQ    11,DL
         2 003337   003344 604000 2                  TMI     s:14281
         2 003340   000016 116007                    CMPQ    14,DL
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:167  
         2 003341   003344 605400 2                  TPNZ    s:14281

     1260    14278    7                                       ADD_IT = TRUE;

  14278  2 003342   400000 236003                    LDQ     -131072,DU
         2 003343   202752 756100                    STQ     ADD_IT,,AUTO

     1261    14279    7                               END;  /*SELECT*/

     1262    14280
     1263    14281    6                             IF  ADD_IT  THEN

  14281  2 003344   202752 234100                    SZN     ADD_IT,,AUTO
         2 003345   003356 605000 2                  TPL     s:14287

     1264    14282                                     /* Add another attribute */
     1265    14283    7                                DO;

     1266    14284    7                                   FMT_VECT(FCB.NVECS#) = ATTR_VECT(J);

  14284  2 003346   202603 235100                    LDA     FCB+9,,AUTO
         2 003347   000001 735000                    ALS     1
         2 003350   202750 236100                    LDQ     J,,AUTO
         2 003351   000001 736000                    QLS     1
         2 003352   000000 621005                    EAX1    0,AL
         2 003353   000244 237006 1                  LDAQ    ATTR_VECT,QL
         2 003354   202630 757111                    STAQ    FMT_VECT,X1,AUTO

     1267    14285    7                                   FCB.NVECS# = FCB.NVECS# + 1;

  14285  2 003355   202603 054100                    AOS     FCB+9,,AUTO

     1268    14286    7                                END;

     1269    14287    6                          END;   /* Do j = ... end */

  14287  2 003356   202750 054100                    AOS     J,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:168  
         2 003357   202750 235100                    LDA     J,,AUTO
         2 003360   000016 115007                    CMPA    14,DL
         2 003361   003274 604400 2                  TMOZ    s:14267

     1270    14288    5                       END;   /* If ... else ... end */

     1271    14289        /**/
     1272    14290    4                          FMT_VECT(1) = VECTOR(J);

  14290  2 003362   777640 235007                    LDA     -96,DL
         2 003363   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 003364   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 003365   002750 036003                    ADLQ    1512,DU
         2 003366   202632 757100                    STAQ    FMT_VECT+2,,AUTO

     1273    14291    4                          J = FCB.NVECS# -3;

  14291  2 003367   202603 235100                    LDA     FCB+9,,AUTO
         2 003370   000003 135007                    SBLA    3,DL
         2 003371   202750 755100                    STA     J,,AUTO

     1274    14292    4                          CALL X$FORMAT (FCB);

  14292  2 003372   202572 630500                    EPPR0   FCB,,AUTO
         2 003373   202754 450500                    STP0    ADD_IT+2,,AUTO
         2 003374   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003375   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003376   000000 701000 xent               TSX1    X$FORMAT
         2 003377   000000 011000                    NOP     0

     1275    14293    4              END;   /* Do i = ... end */

  14293  2 003400   202747 054100                    AOS     I,,AUTO
         2 003401   202744 470500                    LDP0    @DISP_RES,,AUTO
         2 003402   202747 236100                    LDQ     I,,AUTO
         2 003403   000000 116100                    CMPQ    0,,PR0
         2 003404   003244 604000 2                  TMI     s:14256
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:169  

     1276    14294    3           END;   /* Something to display */

     1277    14295    2   RETURN;

  14295  2 003405   202742 221300                    LDX1  ! FMT_VECT+74,,AUTO
         2 003406   000001 702211                    TSX2  ! 1,X1

     1278    14296    2   END DI_RESOURCES;
     1279    14297        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:170  
     1280    14298    1   GET_CUR_RESLIST: PROC ALTRET;

  14298  2 003407   202740 741300       GET_CUR_RES* STX1  ! FMT_VECT+72,,AUTO

     1281    14299        /*
     1282    14300             ***** This routine gets a list of all resources that
     1283    14301                   this user currently has allocated ...
     1284    14302        */
     1285    14303    2     FPT_RESCTL = CFPT_RESCTL;

  14303  2 003410   000100 100400                    MLR     fill='000'O
         2 003411   000000 000110 xsym               ADSC9   CFPT_RESCTL              cn=0,n=72
         2 003412   202550 000110                    ADSC9   FPT_RESCTL,,AUTO         cn=0,n=72

     1286    14304    2     FPT_RESCTL.V_ = VECTOR(FPT_RESCTL.V);

  14304  2 003413   000016 235000 3                  LDA     14
         2 003414   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 003415   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 003416   002564 036003                    ADLQ    1396,DU
         2 003417   202550 757100                    STAQ    FPT_RESCTL,,AUTO

     1287    14305    2     FPT_RESCTL.PRES_ = VECTOR(CUR_RES);

  14305  2 003420   000017 235000 3                  LDA     15
         2 003421   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 003422   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 003423   000070 036003                    ADLQ    56,DU
         2 003424   202554 757100                    STAQ    FPT_RESCTL+4,,AUTO

     1288    14306    2     FPT_RESCTL.PSEUDO_ = VECTOR(CUR_PSEUDO);

  14306  2 003425   000020 235000 3                  LDA     16
         2 003426   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 003427   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 003430   001060 036003                    ADLQ    560,DU
         2 003431   202552 757100                    STAQ    FPT_RESCTL+2,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:171  

     1289    14307    2     FPT_RESCTL.RPSN_ = VECTOR(CUR_PSN);

  14307  2 003432   000021 235000 3                  LDA     17
         2 003433   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 003434   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 003435   001220 036003                    ADLQ    656,DU
         2 003436   202556 757100                    STAQ    FPT_RESCTL+6,,AUTO

     1290    14308        /**/
     1291    14309    2     CALL M$DISPRES(FPT_RESCTL) ALTRET (E_DISPRES);

  14309  2 003437   202550 630500                    EPPR0   FPT_RESCTL,,AUTO
         2 003440   550002 713400                    CLIMB   alt,+53250
         2 003441   402400 401760                    pmme    nvectors=6
         2 003442   003524 702000 2                  TSX2    E_DISPRES

     1292    14310        /*
     1293    14311             ***** Sort by RNAME for easier manipulation
     1294    14312        */
     1295    14313    3     DO I=0 TO CUR_RES.NN#-1;

  14313  2 003443   200016 450100                    STZ     I,,AUTO
         2 003444   003514 710000 2                  TRA     s:14329+1

     1296    14314    3        K = I; /* Switch the next entry with the smallest one */

  14314  2 003445   200016 235100                    LDA     I,,AUTO
         2 003446   200020 755100                    STA     K,,AUTO

     1297    14315    4        DO J=I+1 TO CUR_RES.NN#-1;

  14315  2 003447   000001 035007                    ADLA    1,DL
         2 003450   200017 755100                    STA     J,,AUTO
         2 003451   003464 710000 2                  TRA     s:14320+1

     1298    14316    4           IF CUR_RES.PRLIST.RNAME#(K)>CUR_RES.PRLIST.RNAME#(J)
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:172  

  14316  2 003452   200020 235100                    LDA     K,,AUTO
         2 003453   000002 735000                    ALS     2
         2 003454   200017 236100                    LDQ     J,,AUTO
         2 003455   000002 736000                    QLS     2
         2 003456   200072 236106                    LDQ     CUR_RES+2,QL,AUTO
         2 003457   200072 116105                    CMPQ    CUR_RES+2,AL,AUTO
         2 003460   003463 603000 2                  TRC     s:14320

     1299    14317
     1300    14318    4              THEN
     1301    14319    4                 K = J;

  14319  2 003461   200017 236100                    LDQ     J,,AUTO
         2 003462   200020 756100                    STQ     K,,AUTO

     1302    14320    4        END;

  14320  2 003463   200017 054100                    AOS     J,,AUTO
         2 003464   200017 236100                    LDQ     J,,AUTO
         2 003465   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 003466   003452 604000 2                  TMI     s:14316

     1303    14321    3        IF K>I

  14321  2 003467   200020 236100                    LDQ     K,,AUTO
         2 003470   200016 116100                    CMPQ    I,,AUTO
         2 003471   003513 604400 2                  TMOZ    s:14329

     1304    14322
     1305    14323    3           THEN
     1306    14324    4              DO;

     1307    14325    4                 ATTR_RES.PRLIST(0) = CUR_RES.PRLIST(I);

  14325  2 003472   200016 235100                    LDA     I,,AUTO
         2 003473   000004 735000                    ALS     4
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:173  
         2 003474   000100 100505                    MLR     fill='000'O
         2 003475   200072 000020                    ADSC9   CUR_RES+2,A,AUTO         cn=0,n=16
         2 003476   200664 000020                    ADSC9   ATTR_RES+2,,AUTO         cn=0,n=16

     1308    14326    4                 CUR_RES.PRLIST(I) = CUR_RES.PRLIST(K);

  14326  2 003477   200020 235100                    LDA     K,,AUTO
         2 003500   000004 735000                    ALS     4
         2 003501   200016 236100                    LDQ     I,,AUTO
         2 003502   000004 736000                    QLS     4
         2 003503   000106 100505                    MLR     fill='000'O
         2 003504   200072 000020                    ADSC9   CUR_RES+2,A,AUTO         cn=0,n=16
         2 003505   200072 000020                    ADSC9   CUR_RES+2,Q,AUTO         cn=0,n=16

     1309    14327    4                 CUR_RES.PRLIST(K) = ATTR_RES.PRLIST(0);

  14327  2 003506   200020 235100                    LDA     K,,AUTO
         2 003507   000004 735000                    ALS     4
         2 003510   000105 100500                    MLR     fill='000'O
         2 003511   200664 000020                    ADSC9   ATTR_RES+2,,AUTO         cn=0,n=16
         2 003512   200072 000020                    ADSC9   CUR_RES+2,A,AUTO         cn=0,n=16

     1310    14328    4              END;

     1311    14329    3     END;

  14329  2 003513   200016 054100                    AOS     I,,AUTO
         2 003514   200016 236100                    LDQ     I,,AUTO
         2 003515   200070 116100                    CMPQ    CUR_RES,,AUTO
         2 003516   003445 604000 2                  TMI     s:14314

     1312    14330        /*
     1313    14331             ***** Save another copy of the ATTRS for PHYSICAL RESOURCES ...
     1314    14332        */
     1315    14333    2     ATTR_RES = CUR_RES;

  14333  2 003517   000100 100500                    MLR     fill='000'O
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:174  
         2 003520   200070 000770                    ADSC9   CUR_RES,,AUTO            cn=0,n=504
         2 003521   200662 000770                    ADSC9   ATTR_RES,,AUTO           cn=0,n=504

     1316    14334    2     RETURN;

  14334  2 003522   202740 221300                    LDX1  ! FMT_VECT+72,,AUTO
         2 003523   000001 702211                    TSX2  ! 1,X1

     1317    14335        /**/
     1318    14336    2   E_DISPRES:
     1319    14337    2     ERR_CODE = B$TCB.ALT$ -> B$ALT.ERR;

  14337  2 003524   000000 470400 xsym  E_DISPRES    LDP0    B$TCB$
         2 003525   000000 471500                    LDP1    0,,PR0
         2 003526   100102 236100                    LDQ     66,,PR1
         2 003527   200024 756100                    STQ     ERR_CODE,,AUTO

     1320    14338    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,ERR_CODE) ;

  14338  2 003530   000000 236000 xsym               LDQ     SEG2$
         2 003531   000003 036003                    ADLQ    3,DU
         2 003532   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 003533   200024 631500                    EPPR1   ERR_CODE,,AUTO
         2 003534   202757 451500                    STP1    ADD_IT+5,,AUTO
         2 003535   000040 236000 3                  LDQ     32
         2 003536   202756 756100                    STQ     ADD_IT+4,,AUTO
         2 003537   202754 633500                    EPPR3   ADD_IT+2,,AUTO
         2 003540   202755 453500                    STP3    ADD_IT+3,,AUTO
         2 003541   202755 630500                    EPPR0   ADD_IT+3,,AUTO
         2 003542   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003543   000000 701000 xent               TSX1    CXP$POSTERR
         2 003544   000000 011000                    NOP     0

     1321    14339    2     ALTRETURN;

  14339  2 003545   202740 221300                    LDX1  ! FMT_VECT+72,,AUTO
         2 003546   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:175  

     1322    14340    2   END GET_CUR_RESLIST;
     1323    14341        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:176  
     1324    14342    1   BUILD_RES_LIST: PROC ALTRET;

  14342  2 003547   202740 741300       BUILD_RES_L* STX1  ! FMT_VECT+72,,AUTO

     1325    14343        /*
     1326    14344             ***** Initialize tables ...
     1327    14345        */
     1328    14346    2     JOB_TBL = JOB_TBL_INIT;

  14346  2 003550   000100 100400                    MLR     fill='000'O
         2 003551   000000 000334 1                  ADSC9   JOB_TBL_INIT             cn=0,n=220
         2 003552   202426 000334                    ADSC9   JOB_TBL,,AUTO            cn=0,n=220

     1329    14347    2     PSN_TBL.COUNT = 0;

  14347  2 003553   202303 450100                    STZ     PSN_TBL,,AUTO

     1330    14348    2     VIRT_TBL.COUNT = 0;

  14348  2 003554   202202 450100                    STZ     VIRT_TBL,,AUTO

     1331    14349        /*
     1332    14350             ***** Build the list of requested resources ...
     1333    14351        */
     1334    14352    2     CALL CPO$RESOURCE (P$PCB, JOB_TBL, PSN_TBL, VIRT_TBL, SEG$2.ERRBUF,

  14352  2 003555   200006 630500                    EPPR0   RELEASE_ALL#,,AUTO
         2 003556   202762 450500                    STP0    ADD_IT+8,,AUTO
         2 003557   200007 631500                    EPPR1   NHPSN#,,AUTO
         2 003560   202761 451500                    STP1    ADD_IT+7,,AUTO
         2 003561   000000 236000 xsym               LDQ     SEG2$
         2 003562   000003 036003                    ADLQ    3,DU
         2 003563   202760 756100                    STQ     ADD_IT+6,,AUTO
         2 003564   202202 633500                    EPPR3   VIRT_TBL,,AUTO
         2 003565   202757 453500                    STP3    ADD_IT+5,,AUTO
         2 003566   202303 634500                    EPPR4   PSN_TBL,,AUTO
         2 003567   202756 454500                    STP4    ADD_IT+4,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:177  
         2 003570   202426 635500                    EPPR5   JOB_TBL,,AUTO
         2 003571   202755 455500                    STP5    ADD_IT+3,,AUTO
         2 003572   200003 236100                    LDQ     @P$PCB,,AUTO
         2 003573   202754 756100                    STQ     ADD_IT+2,,AUTO
         2 003574   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003575   000025 631400 xsym               EPPR1   B_VECTNIL+21
         2 003576   000000 701000 xent               TSX1    CPO$RESOURCE
         2 003577   003603 702000 2                  TSX2    E_GET_RESLIST

     1335    14353    2                        NHPSN#, RELEASE_ALL#) ALTRET(E_GET_RESLIST);
     1336    14354    3     IF SEG$2.ERRBUF(1)~=0 THEN DO;

  14354  2 003600   000000 470400 xsym               LDP0    SEG2$
         2 003601   000004 235100                    LDA     4,,PR0
         2 003602   003605 600000 2                  TZE     s:14363

     1337    14355    3   E_GET_RESLIST:
     1338    14356    3        ALTRETURN;

  14356  2 003603   202740 221300       E_GET_RESLI* LDX1  ! FMT_VECT+72,,AUTO
         2 003604   000000 702211                    TSX2  ! 0,X1

     1339    14357    3     END;
     1340    14358        /*
     1341    14359             ***** Expand the VIRT_TBL list.
     1342    14360                   If too many PHYSICAL RESOURCES were requested
     1343    14361                   then abort processing of the RESOURCE cmd ...
     1344    14362        */
     1345    14363    2     CALL CPO$EXPAND (VIRT_TBL, ERR_CODE) ALTRET(E_EXPAND);

  14363  2 003605   200024 631500                    EPPR1   ERR_CODE,,AUTO
         2 003606   202755 451500                    STP1    ADD_IT+3,,AUTO
         2 003607   202202 633500                    EPPR3   VIRT_TBL,,AUTO
         2 003610   202754 453500                    STP3    ADD_IT+2,,AUTO
         2 003611   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003612   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 003613   000000 701000 xent               TSX1    CPO$EXPAND
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:178  
         2 003614   003677 702000 2                  TSX2    E_EXPAND

     1346    14364        /*
     1347    14365             ***** Validate this list against :USERS and actual
     1348    14366                   system resources available ...
     1349    14367        */
     1350    14368    2     I = 0;

  14368  2 003615   200016 450100                    STZ     I,,AUTO

     1351    14369    3     DO WHILE (I < VIRT_TBL.COUNT);

  14369  2 003616   200016 236100                    LDQ     I,,AUTO
         2 003617   003622 604000 2                  TMI     s:14370
         2 003620   202202 116100                    CMPQ    VIRT_TBL,,AUTO
         2 003621   003676 603000 2                  TRC     s:14380

     1352    14370    3        K = B$JIT.MODE;

  14370  2 003622   000000 470400 xsym               LDP0    B$JIT$
         2 003623   000000 236100                    LDQ     0,,PR0
         2 003624   000040 772000                    QRL     32
         2 003625   200020 756100                    STQ     K,,AUTO

     1353    14371    3        CALL CPO$VALIDATE (I, K, VIRT_TBL, SEG$2.PHYS$ -> PHYS$LIST,

  14371  2 003626   000000 471400 xsym               LDP1    SEG2$
         2 003627   100155 473500                    LDP3    109,,PR1
         2 003630   100152 474500                    LDP4    106,,PR1
         2 003631   200021 635500                    EPPR5   ERR_TEXT,,AUTO
         2 003632   202762 455500                    STP5    ADD_IT+8,,AUTO
         2 003633   200024 636500                    EPPR6   ERR_CODE,,AUTO
         2 003634   202761 456500                    STP6    ADD_IT+7,,AUTO
         2 003635   202760 454500                    STP4    ADD_IT+6,,AUTO
         2 003636   202757 453500                    STP3    ADD_IT+5,,AUTO
         2 003637   202202 637500                    EPPR7   VIRT_TBL,,AUTO
         2 003640   202756 457500                    STP7    ADD_IT+4,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:179  
         2 003641   200020 630500                    EPPR0   K,,AUTO
         2 003642   202755 450500                    STP0    ADD_IT+3,,AUTO
         2 003643   200016 630500                    EPPR0   I,,AUTO
         2 003644   202754 450500                    STP0    ADD_IT+2,,AUTO
         2 003645   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003646   000025 631400 xsym               EPPR1   B_VECTNIL+21
         2 003647   000000 701000 xent               TSX1    CPO$VALIDATE
         2 003650   003652 702000 2                  TSX2    E_VALIDATE

     1354    14372    3           SEG$2.USERS$ -> AS$USERS, ERR_CODE, ERR_TEXT) ALTRET(E_VALIDATE);
     1355    14373    4        DO NEVER;

  14373  2 003651   003672 710000 2                  TRA     s:14378

     1356    14374    4   E_VALIDATE:
     1357    14375    4           CALL CPC$WRITEMSGE (ERR_CODE,,ERR_TEXT,,,%YES#);

  14375  2 003652   000011 236000 3     E_VALIDATE   LDQ     9
         2 003653   000001 235000 xsym               LDA     B_VECTNIL+1
         2 003654   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 003655   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 003656   202757 756100                    STQ     ADD_IT+5,,AUTO
         2 003657   200021 630500                    EPPR0   ERR_TEXT,,AUTO
         2 003660   202756 450500                    STP0    ADD_IT+4,,AUTO
         2 003661   202755 756100                    STQ     ADD_IT+3,,AUTO
         2 003662   200024 631500                    EPPR1   ERR_CODE,,AUTO
         2 003663   202754 451500                    STP1    ADD_IT+2,,AUTO
         2 003664   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003665   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 003666   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 003667   000000 011000                    NOP     0

     1358    14376    4           ALTRETURN;

  14376  2 003670   202740 221300                    LDX1  ! FMT_VECT+72,,AUTO
         2 003671   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:180  
     1359    14377    4        END;

     1360    14378    3     END;   /* Validate loop */

  14378  2 003672   200016 236100                    LDQ     I,,AUTO
         2 003673   003622 604000 2                  TMI     s:14370
         2 003674   202202 116100                    CMPQ    VIRT_TBL,,AUTO
         2 003675   003622 602000 2                  TNC     s:14370

     1361    14379        /**/
     1362    14380    3     DO NEVER;

  14380  2 003676   003717 710000 2                  TRA     s:14389

     1363    14381    3   E_EXPAND:
     1364    14382    3        CALL CPC$WRITEMSGE (ERR_CODE,,,,,%NO#);

  14382  2 003677   000066 236000 3     E_EXPAND     LDQ     54
         2 003700   000001 235000 xsym               LDA     B_VECTNIL+1
         2 003701   202760 757100                    STAQ    ADD_IT+6,,AUTO
         2 003702   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 003703   000001 235000 xsym               LDA     B_VECTNIL+1
         2 003704   202756 757100                    STAQ    ADD_IT+4,,AUTO
         2 003705   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 003706   202755 756100                    STQ     ADD_IT+3,,AUTO
         2 003707   200024 630500                    EPPR0   ERR_CODE,,AUTO
         2 003710   202754 450500                    STP0    ADD_IT+2,,AUTO
         2 003711   202754 630500                    EPPR0   ADD_IT+2,,AUTO
         2 003712   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 003713   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 003714   000000 011000                    NOP     0

     1365    14383    3        ALTRETURN;

  14383  2 003715   202740 221300                    LDX1  ! FMT_VECT+72,,AUTO
         2 003716   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:181  
     1366    14384    3     END;

     1367    14385        /**/
     1368    14386        /*
     1369    14387           ***  Setup the list of requested physical resources.
     1370    14388        */
     1371    14389    2     K = 0;

  14389  2 003717   200020 450100                    STZ     K,,AUTO

     1372    14390    3     DO I = 0 TO VIRT_TBL.COUNT - 1;

  14390  2 003720   200016 450100                    STZ     I,,AUTO
         2 003721   003767 710000 2                  TRA     s:14397+1

     1373    14391    3        REQ_RES.PRLIST(K) = %NO#;

  14391  2 003722   200020 235100                    LDA     K,,AUTO
         2 003723   000004 735000                    ALS     4
         2 003724   000105 100400                    MLR     fill='000'O
         2 003725   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 003726   200270 000020                    ADSC9   REQ_RES+2,A,AUTO         cn=0,n=16

     1374    14392    3        REQ_RES.PRLIST.RNME.TYP(K) = VIRT_TBL.RES.TYPE(I);

  14392  2 003727   200020 235100                    LDA     K,,AUTO
         2 003730   000002 735000                    ALS     2
         2 003731   200016 236100                    LDQ     I,,AUTO
         2 003732   000001 736000                    QLS     1
         2 003733   202203 220106                    LDX0    VIRT_TBL+1,QL,AUTO
         2 003734   200270 740105                    STX0    REQ_RES+2,AL,AUTO

     1375    14393    3        REQ_RES.PRLIST.RNME.NUM(K) = VIRT_TBL.RES.VNUM(I);

  14393  2 003735   200020 235100                    LDA     K,,AUTO
         2 003736   000002 735000                    ALS     2
         2 003737   200016 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:182  
         2 003740   000001 736000                    QLS     1
         2 003741   202203 720106                    LXL0    VIRT_TBL+1,QL,AUTO
         2 003742   200270 440105                    SXL0    REQ_RES+2,AL,AUTO

     1376    14394    3        REQ_RES.PRLIST.ATTR#(K) = VIRT_TBL.RES.ATTRS(I);

  14394  2 003743   200020 235100                    LDA     K,,AUTO
         2 003744   000002 735000                    ALS     2
         2 003745   200016 236100                    LDQ     I,,AUTO
         2 003746   000001 736000                    QLS     1
         2 003747   202204 220106                    LDX0    VIRT_TBL+2,QL,AUTO
         2 003750   200271 440105                    SXL0    REQ_RES+3,AL,AUTO

     1377    14395    3        IF VIRT_TBL.RES.NUM(I)~=99999 THEN K = K+1;

  14395  2 003751   200016 235100                    LDA     I,,AUTO
         2 003752   000001 735000                    ALS     1
         2 003753   202204 720105                    LXL0    VIRT_TBL+2,AL,AUTO
         2 003754   303237 100003                    CMPX0   99999,DU
         2 003755   003757 600000 2                  TZE     s:14396

  14395  2 003756   200020 054100                    AOS     K,,AUTO

     1378    14396    3        IF VIRT_TBL.RES.NUM(I)=0 THEN REQ_RES.PRLIST.RAT$(K-1)=ADDR(NIL);

  14396  2 003757   202204 720105                    LXL0    VIRT_TBL+2,AL,AUTO
         2 003760   003766 601000 2                  TNZ     s:14397

  14396  2 003761   200020 236100                    LDQ     K,,AUTO
         2 003762   000002 736000                    QLS     2
         2 003763   000000 621006                    EAX1    0,QL
         2 003764   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 003765   200266 756111                    STQ     REQ_RES,X1,AUTO

     1379    14397    3     END;

  14397  2 003766   200016 054100                    AOS     I,,AUTO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:183  
         2 003767   200016 236100                    LDQ     I,,AUTO
         2 003770   003722 604000 2                  TMI     s:14391
         2 003771   202202 116100                    CMPQ    VIRT_TBL,,AUTO
         2 003772   003722 602000 2                  TNC     s:14391

     1380    14398    2     REQ_RES.NN# = K;

  14398  2 003773   200020 235100                    LDA     K,,AUTO
         2 003774   200266 755100                    STA     REQ_RES,,AUTO

     1381    14399        /*
     1382    14400           *** Set up the list of requested pseudo resources.
     1383    14401        */
     1384    14402    2     REQ_PSEUDO.NN# = 0;

  14402  2 003775   201120 450100                    STZ     REQ_PSEUDO,,AUTO

     1385    14403        /**/
     1386    14404    3     DO I = JM_RX$PR1 TO JM_RX$PR1 + PSEUDO_SLOTS - 1;

  14404  2 003776   000004 235007                    LDA     4,DL
         2 003777   200016 755100                    STA     I,,AUTO
         2 004000   004055 710000 2                  TRA     s:14419+1

     1387    14405    3        IF JOB_TBL.RRT(I) ~= 0

  14405  2 004001   200016 235100                    LDA     I,,AUTO
         2 004002   000001 735000                    ALS     1
         2 004003   000100 101505                    MRL     fill='000'O
         2 004004   202470 000002                    ADSC9   JOB_TBL+34,A,AUTO        cn=0,n=2
         2 004005   202754 000004                    ADSC9   ADD_IT+2,,AUTO           cn=0,n=4
         2 004006   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 004007   000000 116003                    CMPQ    0,DU
         2 004010   004054 600000 2                  TZE     s:14419

     1388    14406
     1389    14407    3           THEN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:184  
     1390    14408    4              DO;

     1391    14409    4                 REQ_PSEUDO.PSLIST.PSEUDO#(REQ_PSEUDO.NN#) =

  14409  2 004011   201120 236100                    LDQ     REQ_PSEUDO,,AUTO
         2 004012   000003 402007                    MPY     3,DL
         2 004013   000000 470400 xsym               LDP0    SEG2$
         2 004014   000154 471500                    LDP1    108,,PR0
         2 004015   000000 620006                    EAX0    0,QL
         2 004016   200016 236100                    LDQ     I,,AUTO
         2 004017   000014 402007                    MPY     12,DL
         2 004020   000000 635010                    EAA     0,X0
         2 004021   000020 731000                    ARS     16
         2 004022   040105 100506                    MLR     fill='040'O
         2 004023   177770 000010                    ADSC9   -8,Q,PR1                 cn=0,n=8
         2 004024   201124 000010                    ADSC9   REQ_PSEUDO+4,A,AUTO      cn=0,n=8

     1392    14410    4                      SEG$2.PSEUDO$ -> PSEUDO$LIST.PSLIST.PSEUDO#(I-JM_RX$PR1);
     1393    14411    4                 IF JOB_TBL.RRT(I) < 99999

  14411  2 004025   200016 235100                    LDA     I,,AUTO
         2 004026   000001 735000                    ALS     1
         2 004027   000100 101505                    MRL     fill='000'O
         2 004030   202470 000002                    ADSC9   JOB_TBL+34,A,AUTO        cn=0,n=2
         2 004031   202754 000004                    ADSC9   ADD_IT+2,,AUTO           cn=0,n=4
         2 004032   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 004033   303237 116007                    CMPQ    99999,DL
         2 004034   004046 605000 2                  TPL     s:14416

     1394    14412
     1395    14413    4                    THEN
     1396    14414    4                       REQ_PSEUDO.PSLIST.NUM#(REQ_PSEUDO.NN#) = JOB_TBL.RRT(I);

  14414  2 004035   201120 236100                    LDQ     REQ_PSEUDO,,AUTO
         2 004036   000003 402007                    MPY     3,DL
         2 004037   200016 235100                    LDA     I,,AUTO
         2 004040   000001 735000                    ALS     1
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:185  
         2 004041   000002 736000                    QLS     2
         2 004042   000106 101505                    MRL     fill='000'O
         2 004043   202470 000002                    ADSC9   JOB_TBL+34,A,AUTO        cn=0,n=2
         2 004044   201126 000001                    ADSC9   REQ_PSEUDO+6,Q,AUTO      cn=0,n=1
         2 004045   004053 710000 2                  TRA     s:14417

     1397    14415    4                    ELSE
     1398    14416    4                       REQ_PSEUDO.PSLIST.NUM#(REQ_PSEUDO.NN#) = 0;

  14416  2 004046   201120 236100                    LDQ     REQ_PSEUDO,,AUTO
         2 004047   000003 402007                    MPY     3,DL
         2 004050   000000 620006                    EAX0    0,QL
         2 004051   000032 236000 xsym               LDQ     B_VECTNIL+26
         2 004052   201126 356110                    ANSQ    REQ_PSEUDO+6,X0,AUTO

     1399    14417    4                 REQ_PSEUDO.NN# = REQ_PSEUDO.NN# + 1;

  14417  2 004053   201120 054100                    AOS     REQ_PSEUDO,,AUTO

     1400    14418    4              END;

     1401    14419    3     END;

  14419  2 004054   200016 054100                    AOS     I,,AUTO
         2 004055   200016 235100                    LDA     I,,AUTO
         2 004056   000013 115007                    CMPA    11,DL
         2 004057   004001 604400 2                  TMOZ    s:14405

     1402    14420        /*
     1403    14421             ***** Setup the list of requested packset names ...
     1404    14422        */
     1405    14423        /**/
     1406    14424    3     DO I = 0 TO PSN_TBL.COUNT -1;

  14424  2 004060   200016 450100                    STZ     I,,AUTO
         2 004061   004127 710000 2                  TRA     s:14432+1

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:186  
     1407    14425    3        REQ_PSN.RPLIST.PSN#(I) = PSN_TBL.SN.TXT(I);

  14425  2 004062   200016 235100                    LDA     I,,AUTO
         2 004063   000002 735000                    ALS     2
         2 004064   200016 236100                    LDQ     I,,AUTO
         2 004065   000003 736000                    QLS     3
         2 004066   000002 735000                    ALS     2
         2 004067   040105 100506                    MLR     fill='040'O
         2 004070   202304 000006                    ADSC9   PSN_TBL+1,Q,AUTO         cn=0,n=6
         2 004071   201470 000006                    ADSC9   REQ_PSN+2,A,AUTO         cn=0,n=6

     1408    14426    3        REQ_PSN.RPLIST.DISP#(I) = PSN_TBL.SN.DISP(I);

  14426  2 004072   200016 235100                    LDA     I,,AUTO
         2 004073   000002 735000                    ALS     2
         2 004074   200016 236100                    LDQ     I,,AUTO
         2 004075   000001 736000                    QLS     1
         2 004076   202305 236106                    LDQ     PSN_TBL+2,QL,AUTO
         2 004077   007000 376007                    ANQ     3584,DL
         2 004100   000011 772000                    QRL     9
         2 004101   201471 676105                    ERQ     REQ_PSN+3,AL,AUTO
         2 004102   000777 376007                    ANQ     511,DL
         2 004103   201471 656105                    ERSQ    REQ_PSN+3,AL,AUTO

     1409    14427    3        IF PSN_TBL.SN.FLGS.EXCL(I)

  14427  2 004104   200016 235100                    LDA     I,,AUTO
         2 004105   000001 735000                    ALS     1
         2 004106   202305 236105                    LDQ     PSN_TBL+2,AL,AUTO
         2 004107   200000 316007                    CANQ    65536,DL
         2 004110   004120 600000 2                  TZE     s:14431

     1410    14428    3           THEN
     1411    14429    3              REQ_PSN.RPLIST.USAGE#(I) = %EXCLUSIVE#;

  14429  2 004111   200016 235100                    LDA     I,,AUTO
         2 004112   000002 735000                    ALS     2
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:187  
         2 004113   201471 236105                    LDQ     REQ_PSN+3,AL,AUTO
         2 004114   000067 376000 3                  ANQ     55
         2 004115   002000 276007                    ORQ     1024,DL
         2 004116   201471 756105                    STQ     REQ_PSN+3,AL,AUTO
         2 004117   004126 710000 2                  TRA     s:14432

     1412    14430    3           ELSE
     1413    14431    3              REQ_PSN.RPLIST.USAGE#(I) = %SHARED#;

  14431  2 004120   200016 235100                    LDA     I,,AUTO
         2 004121   000002 735000                    ALS     2
         2 004122   201471 236105                    LDQ     REQ_PSN+3,AL,AUTO
         2 004123   000067 376000 3                  ANQ     55
         2 004124   001000 276007                    ORQ     512,DL
         2 004125   201471 756105                    STQ     REQ_PSN+3,AL,AUTO

     1414    14432    3     END;

  14432  2 004126   200016 054100                    AOS     I,,AUTO
         2 004127   200016 236100                    LDQ     I,,AUTO
         2 004130   004062 604000 2                  TMI     s:14425
         2 004131   202303 116100                    CMPQ    PSN_TBL,,AUTO
         2 004132   004062 602000 2                  TNC     s:14425

     1415    14433    2     REQ_PSN.NN# = PSN_TBL.COUNT;

  14433  2 004133   202303 235100                    LDA     PSN_TBL,,AUTO
         2 004134   201466 755100                    STA     REQ_PSN,,AUTO

     1416    14434    2   END BUILD_RES_LIST;

  14434  2 004135   202740 221300                    LDX1  ! FMT_VECT+72,,AUTO
         2 004136   000001 702211                    TSX2  ! 1,X1

     1417    14435        %EJECT;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:188  
     1418    14436    1   INIT_LOCAL_VARIABLES: PROC;

  14436  2 004137   202740 741300       INIT_LOCAL_* STX1  ! FMT_VECT+72,,AUTO

     1419    14437        /*
     1420    14438             ***** Initialize local variables that are used by
     1421    14439                   all commands in this module ...
     1422    14440        */
     1423    14441    2     IN$ = ADDR(INBUF);

  14441  2 004140   200025 630500                    EPPR0   INBUF,,AUTO
         2 004141   200011 450500                    STP0    IN$,,AUTO

     1424    14442    2     OUT$ = ADDR(OUTBUF);

  14442  2 004142   200032 631500                    EPPR1   OUTBUF,,AUTO
         2 004143   200012 451500                    STP1    OUT$,,AUTO

     1425    14443    2     SEG$2.FPT_WRITE$ -> FPT$WRITE.BUF_.BUF$ = OUT$;

  14443  2 004144   000000 473400 xsym               LDP3    SEG2$
         2 004145   300165 474500                    LDP4    117,,PR3
         2 004146   200012 236100                    LDQ     OUT$,,AUTO
         2 004147   400005 756100                    STQ     5,,PR4

     1426    14444        /**/
     1427    14445    2     CUR_PSEUDO.NN# = PSEUDO_SLOTS;

  14445  2 004150   000010 235007                    LDA     8,DL
         2 004151   201060 755100                    STA     CUR_PSEUDO,,AUTO

     1428    14446    2     CUR_PSN.NN# = PSN_SLOTS;

  14446  2 004152   000050 235007                    LDA     40,DL
         2 004153   201220 755100                    STA     CUR_PSN,,AUTO

     1429    14447    2     CUR_RES.NN# = VIRT_SLOTS;
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:189  

  14447  2 004154   000036 235007                    LDA     30,DL
         2 004155   200070 755100                    STA     CUR_RES,,AUTO

     1430    14448        /**/
     1431    14449    2     SAVE_PSEUDO.NN# = PSEUDO_SLOTS;

  14449  2 004156   000010 235007                    LDA     8,DL
         2 004157   201160 755100                    STA     SAVE_PSEUDO,,AUTO

     1432    14450    2     SAVE_PSN.NN# = PSN_SLOTS;

  14450  2 004160   000050 235007                    LDA     40,DL
         2 004161   201734 755100                    STA     SAVE_PSN,,AUTO

     1433    14451    2     SAVE_RES.NN# = VIRT_SLOTS;

  14451  2 004162   000036 235007                    LDA     30,DL
         2 004163   200464 755100                    STA     SAVE_RES,,AUTO

     1434    14452        /**/
     1435    14453    2     FCB = C_FCB;

  14453  2 004164   000100 100400                    MLR     fill='000'O
         2 004165   000067 000170 1                  ADSC9   C_FCB                    cn=0,n=120
         2 004166   202572 000170                    ADSC9   FCB,,AUTO                cn=0,n=120

     1436    14454    2     FCB.BUF_ = VECTOR(OUTBUF);

  14454  2 004167   000070 235000 3                  LDA     56
         2 004170   202754 452500                    STP2    ADD_IT+2,,AUTO
         2 004171   202754 236100                    LDQ     ADD_IT+2,,AUTO
         2 004172   000032 036003                    ADLQ    26,DU
         2 004173   202577 755100                    STA     FCB+5,,AUTO
         2 004174   202600 756100                    STQ     FCB+6,,AUTO

     1437    14455    2     FCB.VECTR$ = ADDR(FMT_VECT(0));
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:190  

  14455  2 004175   202630 634500                    EPPR4   FMT_VECT,,AUTO
         2 004176   202604 454500                    STP4    FCB+10,,AUTO

     1438    14456    2     CALL CPC$OPEN_LL;

  14456  2 004177   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004200   000000 701000 xent               TSX1    CPC$OPEN_LL
         2 004201   000000 011000                    NOP     0

     1439    14457    2     FCB.OUTPUT# = ENTADDR(CPK$FDS_OUTPUT) ;

  14457  2 004202   000000 636000 xent               EAQ     CPK$FDS_OUTPUT
         2 004203   202606 756100                    STQ     FCB+12,,AUTO

     1440    14458
     1441    14459    2     ADDR(SEG$2.ERRBUF)->ERR$BLK.FIRST = 0 ;

  14459  2 004204   000000 470400 xsym               LDP0    SEG2$
         2 004205   000004 450100                    STZ     4,,PR0

     1442    14460    2     ADDR(SEG$2.ERRBUF)->ERR$BLK.NEXT = 0 ;

  14460  2 004206   000005 450100                    STZ     5,,PR0

     1443    14461
     1444    14462    2     RETURN;

  14462  2 004207   202740 221300                    LDX1  ! FMT_VECT+72,,AUTO
         2 004210   000001 702211                    TSX2  ! 1,X1
     1445    14463    2   END INIT_LOCAL_VARIABLES;
     1446    14464    1   END CPO$ORES;

PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:191  
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$ORES.
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:192  

 **** Variables and constants ****

  ****  Section 001 RoData CPO$ORES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   125-0-0/c CHAR(19)    r     1 ACQUIRE_HDR              320-0-0/c CHAR(7)     r     1 ATTR_1000
   326-0-0/c CHAR(7)     r     1 ATTR_1100                322-0-0/c CHAR(7)     r     1 ATTR_1500
   304-0-0/c CHAR(7)     r     1 ATTR_1600                312-0-0/c CHAR(6)     r     1 ATTR_200
   310-0-0/c CHAR(8)     r     1 ATTR_38000               324-0-0/c CHAR(6)     r     1 ATTR_400
   316-0-0/c CHAR(6)     r     1 ATTR_500                 314-0-0/c CHAR(6)     r     1 ATTR_600
   306-0-0/c CHAR(7)     r     1 ATTR_6250                302-0-0/c CHAR(6)     r     1 ATTR_800
   332-0-0/c CHAR(3)     r     1 ATTR_APL
   225-0-0/b BIT         r     1 ATTR_ARRAY(0:14)
   331-0-0/c CHAR(3)     r     1 ATTR_BIN                 340-0-0/c CHAR(9)     r     1 ATTR_EXCLUSIVE
   330-0-0/c CHAR(2)     r     1 ATTR_LC                  336-0-0/c CHAR(6)     r     1 ATTR_SHARED
   333-0-0/c CHAR(9)     r     1 ATTR_TRUOVRPRT
   244-0-0/b BIT (72)    r     1 ATTR_VECT(0:14)
   132-0-0/c CHAR(33)    r     1 CANTRELEASE_HDR           67-0-0/w STRC(1080)  r     1 C_FCB
   154-0-0/w STRC        r     1 E_ACQDUPPSN              153-0-0/w STRC        r     1 E_ACQDUPRES
   155-0-0/w STRC        r     1 E_BIGTIME                150-0-0/w STRC        r     1 E_LIMPSEUDO
   151-0-0/w STRC        r     1 E_LIMPSN                 152-0-0/w STRC        r     1 E_LIMRES
   156-0-0/w STRC        r     1 E_SMALLTIME                0-0-0/w STRC(1980)  r     1 JOB_TBL_INIT
   222-0-0/c CHAR(12)    r     1 MEM_FMT                  207-0-0/c CHAR(9)     r     1 PSEUDO_FMT
   157-0-0/c CHAR(20)    r     1 PSEUDO_HDR               212-0-0/c CHAR(14)    r     1 PSN_FMT
   172-0-0/c CHAR(21)    r     1 PSN_HDR                  143-0-0/c CHAR(19)    r     1 RELEASE_HDR
   200-0-0/c CHAR(8)     r     1 RES_FMT1                 202-0-0/c CHAR(18)    r     1 RES_FMT2
   164-0-0/c CHAR(22)    r     1 RES_HDR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  2743-0-0/w PTR         r     1 @DISP_PSEUDO            2745-0-0/w PTR         r     1 @DISP_PSN
  2744-0-0/w PTR         r     1 @DISP_RES                  3-0-0/w PTR         r     1 @P$PCB
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:193  
  2752-0-0/b BIT         r     1 ADD_IT                  2751-0-0/w BIT         r     1 ATTR#
   662-0-0/d STRC(4536)  r     1 ATTR_RES                2515-0-0/w STRC(972)   r     1 CP_LIMREC
  1060-0-0/d STRC(1116)  r     1 CUR_PSEUDO              1220-0-0/d STRC(5976)  r     1 CUR_PSN
    70-0-0/d STRC(4536)  r     1 CUR_RES                   *0-0-0/d STRC(1116)  r     1 DISP_PSEUDO
    *0-0-0/d STRC(5976)  r     1 DISP_PSN                  *0-0-0/d STRC(4536)  r     1 DISP_RES
    24-0-0/w STRC        r     1 ERR_CODE                  21-0-0/c STRC(108)   r     1 ERR_TEXT
  2572-0-0/w STRC(1080)  r     1 FCB
  2630-0-0/b BIT (72)    r     1 FMT_VECT(0:35)
  2550-0-0/d STRC(648)   r     1 FPT_RESCTL              2746-0-0/b BIT         r     1 HDR_PRINTED#
    16-0-0/w SBIN        r     1 I                       2747-0-0/w SBIN        r     1 I
    11-0-0/w PTR         r     1 IN$                       25-0-0/c CHAR(20)    r     1 INBUF
    17-0-0/w SBIN        r     1 J                       2750-0-0/w SBIN        r     1 J
  2426-0-0/w STRC(1980)  r     1 JOB_TBL                   20-0-0/w SBIN        r     1 K
     7-0-0/b BIT         r     1 NHPSN#                    15-0-0/b BIT         r     1 NO_EXCLUSIVE
    14-0-0/b BIT         r     1 NO_SHARED                 12-0-0/w PTR         r     1 OUT$
    32-0-0/c CHAR(120)   r     1 OUTBUF                    *0-0-0/w STRC(504)   r     1 P$PCB
  2303-0-0/w STRC(2988)  r     1 PSN_TBL                    6-0-0/b BIT         r     1 RELEASE_ALL#
  1120-0-0/d STRC(1116)  r     1 REQ_PSEUDO              1466-0-0/d STRC(5976)  r     1 REQ_PSN
   266-0-0/d STRC(4536)  r     1 REQ_RES                 1160-0-0/d STRC(1116)  r     1 SAVE_PSEUDO
  1734-0-0/d STRC(5976)  r     1 SAVE_PSN                 464-0-0/d STRC(4536)  r     1 SAVE_RES
  2202-0-0/w STRC(2268)  r     1 VIRT_TBL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(648)   r     1 CFPT_RESCTL                0-0-0/c STRC(54)    r     1 K_LIMIT
     0-0-0/w UBIN        r     1 M$IBEX1_NUM                0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18576) r     1 AS$USERS                   0-0-0/w STRC(2448)  r     1 B$ALT
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:194  
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w SBIN        r     1 B$SBIN
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w STRC(828)   r     1 ERR$BLK
     0-0-0/d STRC(1080)  r     1 FPT$CLOSE                  0-0-0/d STRC(432)   r     1 FPT$WRITE
     0-0-0/w STRC(144)   r     1 P$B                        0-0-0/w ASTR(153)   r     1 P$S
     0-0-0/d STRC)       r     1 PHYS$LIST                  0-0-0/d STRC(1116)  r     1 PSEUDO$LIST
     0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPO$ORES requires 2185 words for executable code.
   Procedure CPO$ORES requires 1524 words of local(AUTO) storage.

    No errors detected in file CPO$ORES.:E05TSI    .
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:195  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:196  
          MINI XREF LISTING

ACQUIRE_HDR
     12971**DCL     13901--ASSIGN
ACQ_1
     13543**LABEL   13548--EXIT
ADD_IT IN PROCEDURE DI_RESOURCES
     14169**DCL     14267<<ASSIGN  14272<<ASSIGN  14275<<ASSIGN  14278<<ASSIGN  14281>>IF
AS$USERS
     12482**DCL     14371<>CALL
AS$USERS.BANNER_PERM
     12597**DCL     12598--REDEF
AS$USERS.BUDGET.MACCT
     12502**DCL     12506--REDEF
AS$USERS.BUDGET.MAX_PROJECTS
     12515**DCL     12518--REDEF
AS$USERS.BUDGET.PACCUM
     12498**DCL     12500--REDEF
AS$USERS.BUDGET.PMAXC
     12493**DCL     12495--REDEF
AS$USERS.MTIME
     12578**DCL     13514>>IF
AS$USERS.SETUP_CHRA.TXT
     12613**DCL     12614--REDEF   12615--REDEF
ATTR# IN PROCEDURE DI_RESOURCES
     14168**DCL     14259<<ASSIGN  14260>>IF      14268>>IF
ATTR_1000 IN PROCEDURE DI_RESOURCES
     14154**DCL     14142--DCLINIT
ATTR_1100 IN PROCEDURE DI_RESOURCES
     14157**DCL     14143--DCLINIT
ATTR_1500 IN PROCEDURE DI_RESOURCES
     14155**DCL     14143--DCLINIT
ATTR_1600 IN PROCEDURE DI_RESOURCES
     14148**DCL     14139--DCLINIT
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:197  
ATTR_200 IN PROCEDURE DI_RESOURCES
     14151**DCL     14141--DCLINIT
ATTR_38000 IN PROCEDURE DI_RESOURCES
     14150**DCL     14140--DCLINIT
ATTR_400 IN PROCEDURE DI_RESOURCES
     14156**DCL     14143--DCLINIT
ATTR_500 IN PROCEDURE DI_RESOURCES
     14153**DCL     14141--DCLINIT
ATTR_600 IN PROCEDURE DI_RESOURCES
     14152**DCL     14141--DCLINIT
ATTR_6250 IN PROCEDURE DI_RESOURCES
     14149**DCL     14139--DCLINIT
ATTR_800 IN PROCEDURE DI_RESOURCES
     14147**DCL     14139--DCLINIT
ATTR_APL IN PROCEDURE DI_RESOURCES
     14160**DCL     14144--DCLINIT
ATTR_ARRAY IN PROCEDURE DI_RESOURCES
     14121**DCL     14268>>IF
ATTR_BIN IN PROCEDURE DI_RESOURCES
     14159**DCL     14144--DCLINIT
ATTR_EXCLUSIVE IN PROCEDURE DI_RESOURCES
     14163**DCL     14238--ASSIGN
ATTR_LC IN PROCEDURE DI_RESOURCES
     14158**DCL     14144--DCLINIT
ATTR_RES
     11626**DCL     13885--ASSIGN  14333<<ASSIGN
ATTR_RES.NN#
     11626**DCL     13832>>DOINDEX 13891>>DOINDEX
ATTR_RES.PRLIST
     11626**DCL     14325<<ASSIGN  14327>>ASSIGN
ATTR_RES.PRLIST.ATTR#
     11628**DCL     13835>>ASSIGN  13894>>ASSIGN
ATTR_RES.PRLIST.RNAME#
     11626**DCL     11627--REDEF   13833>>IF      13892>>IF
ATTR_SHARED IN PROCEDURE DI_RESOURCES
     14162**DCL     14240--ASSIGN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:198  
ATTR_TRUOVRPRT IN PROCEDURE DI_RESOURCES
     14161**DCL     14145--DCLINIT
ATTR_VECT IN PROCEDURE DI_RESOURCES
     14138**DCL     14284>>ASSIGN
B$ALT.CODE
     12219**DCL     12219--REDEF   12220--REDEF   12220--REDEF
B$ALT.ERR
     12220**DCL     13765>>ASSIGN  13769>>ASSIGN  13913<>CALL    14004>>ASSIGN  14043>>ASSIGN  14337>>ASSIGN
B$ALT.ERR.ERR#
     12221**DCL     12221--REDEF
B$ALT.EVID
     12220**DCL     12220--REDEF   12220--REDEF
B$JIT.CPFLAGS1.SLEAZE
       557**DCL       557--REDEF
B$JIT.ERR.MID
       464**DCL       464--REDEF
B$JIT.JRESPEAK
       625**DCL       626--REDEF
B$JIT.MODE
       458**DCL     13514>>IF      14370>>ASSIGN
B$JIT.MRT
       637**DCL     13436<<ASSIGN  13525<<ASSIGN  13525>>ASSIGN
B$JIT.OLTA
       731**DCL     13823<<ASSIGN  13826<<ASSIGN  13877<<ASSIGN  13880<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
       734**DCL       734--REDEF     735--REDEF
B$JIT.PNR
       638**DCL       638--REDEF
B$JIT.TSLINE
       732**DCL       733--REDEF
B$JIT.USRERR
       599**DCL     13765<<ASSIGN  13769<<ASSIGN
B$JIT$
     11221**DCL       458--IMP-PTR 13436>>ASSIGN  13514>>IF      13525>>ASSIGN  13525>>ASSIGN  13765>>ASSIGN
     13769>>ASSIGN  13823>>ASSIGN  13826>>ASSIGN  13877>>ASSIGN  13880>>ASSIGN  14370>>ASSIGN
B$SBIN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:199  
     12680**DCL     13574<<ASSIGN  13574>>ASSIGN  13577<<ASSIGN  13577>>ASSIGN
B$TCB.ALT$
     12215**DCL     13765>>ASSIGN  13769>>ASSIGN  13913>>CALL    14004>>ASSIGN  14043>>ASSIGN  14337>>ASSIGN
B$TCB$
     11223**DCL     12215--IMP-PTR 13765>>ASSIGN  13769>>ASSIGN  13913>>CALL    14004>>ASSIGN  14043>>ASSIGN
     14337>>ASSIGN
BUILD_RES_LIST
     14342**PROC    13187--CALL    13490--CALL    13641--CALL
CAMR_REC.ACSVEH_
     10260**DCL     10261--REDEF
CAMR_REC.ALTKEYS_
     10266**DCL     10267--REDEF   10267--REDEF
CAMR_REC.HDR_
     10265**DCL     10266--REDEF
CAMR_REC.TAB_
     10264**DCL     10265--REDEF
CAMR_REC.UHL_
     10258**DCL     10259--REDEF   10259--REDEF
CAMR_REC.V.FSN#
     10298**DCL     10298--REDEF   10298--REDEF
CAMR_REC.WSN_
     10264**DCL     10264--REDEF
CANTRELEASE_HDR
     12973**DCL     13919--ASSIGN
CFPT_CLOSE.SN_
      9102**DCL      9102--REDEF
CFPT_CLOSE.UTL_
      9103**DCL      9103--REDEF
CFPT_CLOSE.V.EXPIRE#
      9117**DCL      9117--REDEF
CFPT_CLOSE.V.TYPE#
      9115**DCL      9115--REDEF
CFPT_CLOSE.V.XTNSIZE#
      9112**DCL      9112--REDEF    9114--REDEF
CFPT_OPEN.ACSVEH_
      9037**DCL      9038--REDEF
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:200  
CFPT_OPEN.ALTKEYS_
      9043**DCL      9044--REDEF    9044--REDEF
CFPT_OPEN.HDR_
      9042**DCL      9043--REDEF
CFPT_OPEN.TAB_
      9041**DCL      9042--REDEF
CFPT_OPEN.UHL_
      9035**DCL      9036--REDEF    9036--REDEF
CFPT_OPEN.V.FSN#
      9075**DCL      9075--REDEF    9075--REDEF
CFPT_OPEN.WSN_
      9041**DCL      9041--REDEF
CFPT_READ.STATION_
      9141**DCL      9142--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      9153**DCL      9153--REDEF
CFPT_READ.V.INDX#
      9151**DCL      9151--REDEF
CFPT_READUC.STATION_
      9511**DCL      9512--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      9523**DCL      9523--REDEF
CFPT_READUC.V.INDX#
      9521**DCL      9521--REDEF
CFPT_RESCTL
     10370**DCL     13801>>ASSIGN  13861>>ASSIGN  14303>>ASSIGN
CFPT_TRTN.V.IR#
      9747**DCL      9748--REDEF
CFPT_WRITE.STATION_
      9179**DCL      9179--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      9186**DCL      9186--REDEF
CFPT_WRITEUC.STATION_
      9479**DCL      9479--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      9486**DCL      9486--REDEF
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:201  
CFPT_XXX.V.STEPCC#
     10459**DCL     10459--REDEF
CGETCMD.OUT$
     10480**DCL     10486--REDEF
CLOSE_S
     13771**LABEL   13431--GOTO    13520--GOTO
CPC$OPEN_LL
     12682**DCL-ENT 14456--CALL
CPC$OPEN_S
     12683**DCL-ENT 13421--CALL    13510--CALL
CPC$WRITEMSGE
     12684**DCL-ENT 13430--CALL    13519--CALL    13563--CALL    13610--CALL    13913--CALL    14005--CALL
     14015--CALL    14032--CALL    14038--CALL    14375--CALL    14382--CALL
CPJ$ESTLIM
     12685**DCL-ENT 13424--CALL
CPJ$READ_S
     12686**DCL-ENT 13422--CALL    13511--CALL
CPJ$WRITE_S
     12687**DCL-ENT 13438--CALL    13527--CALL
CPK$FDS_OUTPUT
     12695**DCL-ENT 14457--ASSIGN
CPO$EXPAND
     12688**DCL-ENT 14363--CALL
CPO$RESOURCE
     12690**DCL-ENT 14352--CALL
CPO$VALIDATE
     12692**DCL-ENT 14371--CALL
CP_LIMREC
     12041**DCL     13422--CALL    13424<>CALL    13438--CALL    13511--CALL    13527--CALL
CP_LIMREC.CUMUL.MRT
     12076**DCL     13426>>IF      13434>>ASSIGN
CP_LIMREC.CUR_MAX.MRT
     12060**DCL     13434<<ASSIGN  13523<<ASSIGN  13523>>ASSIGN
CP_LIMREC.USER_MAX.MRT
     12050**DCL     13435<<ASSIGN  13514>>IF      13524<<ASSIGN  13524>>ASSIGN
CUR_PSEUDO
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:202  
     11643**DCL     13176<>CALL    13739<<ASSIGN  13796>>ASSIGN  13805--ASSIGN  13925<>CALL    14306--ASSIGN
CUR_PSEUDO.MEMORY#
     11643**DCL     13454>>IF      13458>>ASSIGN  13459<<ASSIGN  13463<<ASSIGN  13463>>ASSIGN  13469<<ASSIGN
     13622<<ASSIGN  13785>>IF      13991>>ASSIGN
CUR_PSEUDO.NN#
     11643**DCL     13162>>DOWHILE 13167>>DOINDEX 13170<<ASSIGN  13170>>ASSIGN  13219>>DOWHILE 13225>>DOINDEX
     13228<<ASSIGN  13228>>ASSIGN  13322>>DOWHILE 13334>>DOINDEX 13337<<ASSIGN  13337>>ASSIGN  13340>>ASSIGN
     13350>>DOINDEX 13353<<ASSIGN  13353>>ASSIGN  13355>>ASSIGN  13367>>ASSIGN  13620<<ASSIGN  13785>>IF
     13949>>DOINDEX 14445<<ASSIGN
CUR_PSEUDO.PSLIST
     11645**DCL     13168<<ASSIGN  13168>>ASSIGN  13226<<ASSIGN  13226>>ASSIGN  13335<<ASSIGN  13335>>ASSIGN
     13351<<ASSIGN  13351>>ASSIGN
CUR_PSEUDO.PSLIST.NUM#
     11645**DCL     13163>>IF      13327>>IF      13344>>IF      13348>>ASSIGN  13360<<ASSIGN  13360>>ASSIGN
     13955>>IF      13966>>ASSIGN
CUR_PSEUDO.PSLIST.PSEUDO#
     11645**DCL     13221>>IF      13323>>IF      13952>>IF
CUR_PSN
     11692**DCL     13176<>CALL    13740<<ASSIGN  13795>>ASSIGN  13806--ASSIGN  13925<>CALL    14307--ASSIGN
CUR_PSN.NN#
     11692**DCL     13259>>DOWHILE 13267>>DOINDEX 13270<<ASSIGN  13270>>ASSIGN  13386>>DOWHILE 13395>>DOINDEX
     13398<<ASSIGN  13398>>ASSIGN  13401>>ASSIGN  13603>>DOINDEX 13621<<ASSIGN  13731>>DOINDEX 13785>>IF
     13975>>DOINDEX 14446<<ASSIGN
CUR_PSN.RPLIST
     11692**DCL     13396<<ASSIGN  13396>>ASSIGN
CUR_PSN.RPLIST.PSN#
     11692**DCL     13268<<ASSIGN  13268>>ASSIGN  13387>>IF      13604>>IF      13732>>IF      13978>>IF
CUR_PSN.RPLIST.USAGE#
     11693**DCL     13260>>IF      13260>>IF      13387>>IF      13735>>ASSIGN
CUR_RES
     11578**DCL     13176<>CALL    13738<<ASSIGN  13797>>ASSIGN  13804--ASSIGN  13925<>CALL    14305--ASSIGN
     14333>>ASSIGN
CUR_RES.NN#
     11578**DCL     13196>>DOINDEX 13206>>DOINDEX 13209<<ASSIGN  13209>>ASSIGN  13290>>DOWHILE 13299>>DOINDEX
     13302<<ASSIGN  13302>>ASSIGN  13305>>ASSIGN  13548>>IF      13619<<ASSIGN  13663>>DOINDEX 13672>>IF
     13675<<ASSIGN  13684>>ASSIGN  13714>>DOINDEX 13785>>IF      13932>>DOINDEX 14313>>DOINDEX 14315>>DOINDEX
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:203  
     14447<<ASSIGN
CUR_RES.PRLIST
     11578**DCL     13207<<ASSIGN  13207>>ASSIGN  13300<<ASSIGN  13300>>ASSIGN  13586<<ASSIGN  13588>>ASSIGN
     13670<<ASSIGN  13670>>ASSIGN  13671<<ASSIGN  13698>>ASSIGN  13721>>ASSIGN  14325>>ASSIGN  14326<<ASSIGN
     14326>>ASSIGN  14327<<ASSIGN
CUR_RES.PRLIST.ATTR#
     11580**DCL     13291>>IF      13692>>IF      13715>>IF
CUR_RES.PRLIST.RNAME#
     11578**DCL     11579--REDEF   13291>>IF      13549>>IF      13550>>IF      13664>>IF      13935>>IF
     14316>>IF      14316>>IF
CUR_RES.PRLIST.RNME.TYP
     11579**DCL     13198>>IF      13692>>IF      13699<<ASSIGN  13715>>IF
CVLP_TRMCTL.BREAKCOUNT
     10071**DCL     10072--REDEF
CVLP_WINDOW.FWINDOW#
     10167**DCL     10167--REDEF   10168--REDEF
CXP$POSTERR
     12693**DCL-ENT 14044--CALL    14338--CALL
C_FCB
     12871**DCL     14453>>ASSIGN
DISP_ERR
     13181**LABEL   13156--CALLALT 13176--CALLALT
DISP_PSEUDO IN PROCEDURE DI_RESOURCES
     14080**DCL     14051--PROC
DISP_PSEUDO.MEMORY# IN PROCEDURE DI_RESOURCES
     14080**DCL     14211>>IF      14217--ASSIGN
DISP_PSEUDO.NN# IN PROCEDURE DI_RESOURCES
     14080**DCL     14174>>IF      14178>>DOINDEX
DISP_PSEUDO.PSLIST.NUM# IN PROCEDURE DI_RESOURCES
     14082**DCL     14179>>IF      14193--ASSIGN
DISP_PSEUDO.PSLIST.PSEUDO# IN PROCEDURE DI_RESOURCES
     14082**DCL     14192--ASSIGN
DISP_PSN IN PROCEDURE DI_RESOURCES
     14096**DCL     14051--PROC
DISP_PSN.NN# IN PROCEDURE DI_RESOURCES
     14096**DCL     14223>>IF      14233>>DOINDEX
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:204  
DISP_PSN.RPLIST.PSN# IN PROCEDURE DI_RESOURCES
     14096**DCL     14235--ASSIGN
DISP_PSN.RPLIST.USAGE# IN PROCEDURE DI_RESOURCES
     14097**DCL     14236>>IF
DISP_RES IN PROCEDURE DI_RESOURCES
     14064**DCL     14051--PROC
DISP_RES.NN# IN PROCEDURE DI_RESOURCES
     14064**DCL     14247>>IF      14255>>DOINDEX
DISP_RES.PRLIST.ATTR# IN PROCEDURE DI_RESOURCES
     14066**DCL     14259>>ASSIGN
DISP_RES.PRLIST.RNAME# IN PROCEDURE DI_RESOURCES
     14064**DCL     14065--REDEF   14258--ASSIGN  14269>>DOSELCT
DI_RESOURCES
     14051**PROC    13176--CALL    13848--CALL    13907--CALL    13925--CALL
ERR$BLK.FIRST
     12459**DCL     14459<<ASSIGN
ERR$BLK.NEXT
     12460**DCL     14460<<ASSIGN
ERR_CODE
     11555**DCL     14004<<ASSIGN  14005<>CALL    14043<<ASSIGN  14044<>CALL    14337<<ASSIGN  14338<>CALL
     14363<>CALL    14371<>CALL    14375<>CALL    14382<>CALL
ERR_CODE.CODE
     11559**DCL     14007>>IF      14007>>IF      14018>>IF      14025>>IF
ERR_TEXT
     11539**DCL     13563<>CALL    13610<>CALL    14015<>CALL    14032<>CALL    14038<>CALL    14371<>CALL
     14375<>CALL
ERR_TEXT.L#
     11539**DCL     13561<<ASSIGN  13608<<ASSIGN  14014<<ASSIGN  14031<<ASSIGN  14036<<ASSIGN
ERR_TEXT.NAME#
     11539**DCL     13562<<ASSIGN  13609<<ASSIGN  14012<<ASSIGN  14013>>CALLBLT 14029<<ASSIGN  14030>>CALLBLT
     14037<<ASSIGN
E_ACQDUPPSN
     13083**DCL     13610<>CALL
E_ACQDUPRES
     13060**DCL     13563<>CALL
E_ACQUIRE
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:205  
     13628**LABEL   13490--CALLALT 13494--CALLALT 13624--CALLALT
E_BIGTIME
     13106**DCL     13519<>CALL
E_DISPRES IN PROCEDURE GET_CUR_RESLIST
     14337**LABEL   14309--CALLALT
E_EXPAND IN PROCEDURE BUILD_RES_LIST
     14382**LABEL   14363--CALLALT
E_GET_RESLIST IN PROCEDURE BUILD_RES_LIST
     14356**LABEL   14352--CALLALT
E_LIMPSEUDO
     12991**DCL     14015<>CALL
E_LIMPSN
     13014**DCL     14032<>CALL
E_LIMRES
     13037**DCL     14038<>CALL
E_ORES
     13477**LABEL   13187--CALLALT 13191--CALLALT 13473--CALLALT
E_PMME IN PROCEDURE PROCESS_RES_LISTS
     14036**LABEL   13888--CALLALT
E_RELEASE
     13758**LABEL   13641--CALLALT 13645--CALLALT 13754--CALLALT
E_SMALLTIME
     13129**DCL     13430<>CALL
E_SUBR IN PROCEDURE PROCESS_RES_LISTS
     14047**LABEL   13848--CALLALT 13907--CALLALT 13925--CALLALT
E_VALIDATE IN PROCEDURE BUILD_RES_LIST
     14375**LABEL   14371--CALLALT
FCB
     12111**DCL     13844<>CALL    13903<>CALL    13921<>CALL    14189<>CALL    14196<>CALL    14218<>CALL
     14229<>CALL    14241<>CALL    14253<>CALL    14292<>CALL    14453<<ASSIGN
FCB.BUF_
     12128**DCL     14454<<ASSIGN
FCB.FMT_
     12115**DCL     13842<<ASSIGN  13901<<ASSIGN  13919<<ASSIGN  14187<<ASSIGN  14191<<ASSIGN  14215<<ASSIGN
     14228<<ASSIGN  14231<<ASSIGN  14252<<ASSIGN  14262<<ASSIGN  14265<<ASSIGN
FCB.NVECS#
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:206  
     12139**DCL     13843<<ASSIGN  13902<<ASSIGN  13920<<ASSIGN  14188<<ASSIGN  14195<<ASSIGN  14216<<ASSIGN
     14227<<ASSIGN  14232<<ASSIGN  14251<<ASSIGN  14257<<ASSIGN  14284>>ASSIGN  14285<<ASSIGN  14285>>ASSIGN
     14291>>ASSIGN
FCB.OUTPUT#
     12165**DCL     14457<<ASSIGN
FCB.VECTR$
     12141**DCL     14455<<ASSIGN
FMT_VECT
     12211**DCL     14192<<ASSIGN  14193<<ASSIGN  14217<<ASSIGN  14235<<ASSIGN  14238<<ASSIGN  14240<<ASSIGN
     14258<<ASSIGN  14284<<ASSIGN  14290<<ASSIGN  14455--ASSIGN
FPT$CLOSE
     12363**DCL     13442<>CALL    13531<>CALL    13773<>CALL
FPT$CLOSE.SN_
     12363**DCL     12363--REDEF
FPT$CLOSE.UTL_
     12364**DCL     12364--REDEF
FPT$CLOSE.V.DCB#
     12369**DCL     13441<<ASSIGN  13530<<ASSIGN  13772<<ASSIGN
FPT$CLOSE.V.DISP#
     12372**DCL     13440<<ASSIGN  13529<<ASSIGN  13771<<ASSIGN
FPT$CLOSE.V.EXPIRE#
     12378**DCL     12378--REDEF
FPT$CLOSE.V.TYPE#
     12376**DCL     12376--REDEF
FPT$CLOSE.V.XTNSIZE#
     12373**DCL     12373--REDEF   12375--REDEF
FPT$WRITE.BUF_.BUF$
     12328**DCL     13443<<ASSIGN  13532<<ASSIGN  14443<<ASSIGN
FPT$WRITE.STATION_
     12328**DCL     12328--REDEF
FPT$WRITE.V.DVBYTE.VFC#
     12335**DCL     12335--REDEF
FPT_RESCTL
     12090**DCL     13801<<ASSIGN  13811<>CALL    13861<<ASSIGN  13868<>CALL    13888<>CALL    14303<<ASSIGN
     14309<>CALL
FPT_RESCTL.PRES_
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:207  
     12090**DCL     13804<<ASSIGN  13864<<ASSIGN  13885<<ASSIGN  14305<<ASSIGN
FPT_RESCTL.PSEUDO_
     12090**DCL     13805<<ASSIGN  13865<<ASSIGN  13886<<ASSIGN  14306<<ASSIGN
FPT_RESCTL.RPSN_
     12091**DCL     13806<<ASSIGN  13866<<ASSIGN  13887<<ASSIGN  14307<<ASSIGN
FPT_RESCTL.V
     12092**DCL     13802--ASSIGN  13862--ASSIGN  14304--ASSIGN
FPT_RESCTL.V.RELALL#
     12092**DCL     13809<<ASSIGN
FPT_RESCTL.V_
     12090**DCL     13802<<ASSIGN  13862<<ASSIGN  14304<<ASSIGN
GET_CUR_RESLIST
     14298**PROC    13156--CALL    13191--CALL    13494--CALL    13645--CALL
GET_RES IN PROCEDURE PROCESS_RES_LISTS
     13855**LABEL   14001--GOTO
HDR_PRINTED# IN PROCEDURE DI_RESOURCES
     14165**DCL     14177<<ASSIGN  14182>>IF      14185<<ASSIGN
I
     11509**DCL     13161<<ASSIGN  13162>>DOWHILE 13163>>IF      13167>>DOINDEX 13173<<ASSIGN  13173>>ASSIGN
     13197<<DOINDEX 13198>>IF      13206<<DOINDEX 13207>>ASSIGN  13207>>ASSIGN  13220<<DOINDEX 13221>>IF
     13225<<DOINDEX 13226>>ASSIGN  13226>>ASSIGN  13245<<DOINDEX 13246>>IF      13267<<DOINDEX 13268>>ASSIGN
     13268>>ASSIGN  13286<<ASSIGN  13287>>DOWHILE 13291>>IF      13291>>IF      13296>>DOINDEX 13313<<ASSIGN
     13313>>ASSIGN  13318<<ASSIGN  13319>>DOWHILE 13323>>IF      13327>>IF      13331>>DOINDEX 13344>>IF
     13348>>ASSIGN  13348>>ASSIGN  13360>>ASSIGN  13362>>DOINDEX 13376<<ASSIGN  13376>>ASSIGN  13382<<ASSIGN
     13383>>DOWHILE 13387>>IF      13387>>IF      13392>>DOINDEX 13409<<ASSIGN  13409>>ASSIGN  13541<<ASSIGN
     13548>>IF      13549>>IF      13550>>IF      13553<<ASSIGN  13553>>ASSIGN  13557>>IF      13561>>ASSIGN
     13562>>ASSIGN  13569>>ASSIGN  13602<<DOINDEX 13604>>IF      13608>>ASSIGN  13609>>ASSIGN  13662<<DOINDEX
     13664>>IF      13664>>IF      13671>>ASSIGN  13682>>DOWHILE 13683<<ASSIGN  13683>>ASSIGN  13686>>IF
     13692>>IF      13692>>IF      13692>>IF      13698>>ASSIGN  13710<<DOINDEX 13711>>IF      13715>>IF
     13715>>IF      13715>>IF      13730<<DOINDEX 13732>>IF      13735>>ASSIGN  13820<<DOINDEX 13821>>IF
     13824>>IF      13832<<DOINDEX 13833>>IF      13835>>ASSIGN  13874<<DOINDEX 13875>>IF      13878>>IF
     13891<<DOINDEX 13892>>IF      13894>>ASSIGN  13932<<DOINDEX 13935>>IF      13949<<DOINDEX 13952>>IF
     13955>>IF      13966>>ASSIGN  13975<<DOINDEX 13978>>IF      14013<<CALLBLT 14014>>ASSIGN  14030<<CALLBLT
     14031>>ASSIGN  14313<<DOINDEX 14314>>ASSIGN  14315>>DOINDEX 14321>>IF      14325>>ASSIGN  14326>>ASSIGN
     14368<<ASSIGN  14369>>DOWHILE 14371<>CALL    14390<<DOINDEX 14392>>ASSIGN  14393>>ASSIGN  14394>>ASSIGN
     14395>>IF      14396>>IF      14404<<DOINDEX 14405>>IF      14409>>ASSIGN  14411>>IF      14414>>ASSIGN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:208  
     14424<<DOINDEX 14425>>ASSIGN  14425>>ASSIGN  14426>>ASSIGN  14426>>ASSIGN  14427>>IF      14429>>ASSIGN
     14431>>ASSIGN
I IN PROCEDURE DI_RESOURCES
     14166**DCL     14178<<DOINDEX 14179>>IF      14192>>ASSIGN  14193>>ASSIGN  14233<<DOINDEX 14235>>ASSIGN
     14236>>IF      14255<<DOINDEX 14258>>ASSIGN  14259>>ASSIGN  14269>>DOSELCT
IN$
     11502**DCL     14441<<ASSIGN
INBUF
     11563**DCL     14441--ASSIGN
INIT_LOCAL_VARIABLES
     14436**PROC    13143--CALL    13486--CALL    13637--CALL
J
     11510**DCL     13167<<DOINDEX 13168>>ASSIGN  13168>>ASSIGN  13196<<DOINDEX 13198>>IF      13206>>DOINDEX
     13212<<ASSIGN  13212>>ASSIGN  13218<<ASSIGN  13219>>DOWHILE 13221>>IF      13225>>DOINDEX 13234<<ASSIGN
     13234>>ASSIGN  13258<<ASSIGN  13259>>DOWHILE 13260>>IF      13260>>IF      13267>>DOINDEX 13273<<ASSIGN
     13273>>ASSIGN  13288<<ASSIGN  13290>>DOWHILE 13291>>IF      13291>>IF      13291>>IF      13299>>DOINDEX
     13305<<ASSIGN  13308<<ASSIGN  13308>>ASSIGN  13320<<ASSIGN  13322>>DOWHILE 13323>>IF      13327>>IF
     13334>>DOINDEX 13340<<ASSIGN  13344>>IF      13348>>ASSIGN  13350>>DOINDEX 13355<<ASSIGN  13360>>ASSIGN
     13360>>ASSIGN  13367<<ASSIGN  13371<<ASSIGN  13371>>ASSIGN  13384<<ASSIGN  13386>>DOWHILE 13387>>IF
     13387>>IF      13395>>DOINDEX 13401<<ASSIGN  13404<<ASSIGN  13404>>ASSIGN  13542<<ASSIGN  13548>>IF
     13549>>IF      13550>>IF      13555<<ASSIGN  13555>>ASSIGN  13603<<DOINDEX 13604>>IF      13663<<DOINDEX
     13664>>IF      13670>>ASSIGN  13670>>ASSIGN  13671>>ASSIGN  13672>>IF      13675>>ASSIGN  13684<<ASSIGN
     13689<<ASSIGN  13690<<ASSIGN  13690>>ASSIGN  13691>>IF      13692>>IF      13692>>IF      13698>>ASSIGN
     13699>>ASSIGN  13700<<ASSIGN  13714<<DOINDEX 13715>>IF      13715>>IF      13721>>ASSIGN  13731<<DOINDEX
     13732>>IF      13735>>ASSIGN  13831<<DOINDEX 13833>>IF      13835>>ASSIGN  13890<<DOINDEX 13892>>IF
     13894>>ASSIGN  13933<<ASSIGN  13934>>DOWHILE 13935>>IF      13940>>DOINDEX 13943<<ASSIGN  13945<<ASSIGN
     13945>>ASSIGN  13950<<ASSIGN  13951>>DOWHILE 13952>>IF      13955>>IF      13959>>DOINDEX 13966>>ASSIGN
     13966>>ASSIGN  13969<<ASSIGN  13971<<ASSIGN  13971>>ASSIGN  13976<<ASSIGN  13977>>DOWHILE 13978>>IF
     13982>>DOINDEX 13985<<ASSIGN  13987<<ASSIGN  13987>>ASSIGN  14315<<DOINDEX 14316>>IF      14319>>ASSIGN
J IN PROCEDURE DI_RESOURCES
     14167**DCL     14266<<DOINDEX 14268>>IF      14271>>IF      14271>>IF      14274>>IF      14274>>IF
     14277>>IF      14277>>IF      14284>>ASSIGN  14290--ASSIGN  14291<<ASSIGN
JOB_TBL
     11894**DCL     14346<<ASSIGN  14352<>CALL
JOB_TBL.RRT
     12010**DCL     13450>>IF      13454>>IF      13458>>ASSIGN  13463>>ASSIGN  13498>>IF      13501>>ASSIGN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:209  
     13647>>IF      13650>>ASSIGN  14405>>IF      14411>>IF      14414>>ASSIGN
JOB_TBL.TIM
     11932**DCL     13417>>IF      13426>>IF      13434>>ASSIGN  13435>>ASSIGN  13436>>ASSIGN  13505>>IF
     13514>>IF      13523>>ASSIGN  13524>>ASSIGN  13525>>ASSIGN
JOB_TBL_INIT
     12712**DCL     12714--DCLINIT 14346>>ASSIGN
K
     11511**DCL     13289<<ASSIGN  13296<<DOINDEX 13297>>ASSIGN  13297>>ASSIGN  13299<<DOINDEX 13300>>ASSIGN
     13300>>ASSIGN  13304<<ASSIGN  13310>>IF      13321<<ASSIGN  13331<<DOINDEX 13332>>ASSIGN  13332>>ASSIGN
     13334<<DOINDEX 13335>>ASSIGN  13335>>ASSIGN  13339<<ASSIGN  13350<<DOINDEX 13351>>ASSIGN  13351>>ASSIGN
     13354<<ASSIGN  13362<<DOINDEX 13363>>ASSIGN  13363>>ASSIGN  13366<<ASSIGN  13373>>IF      13373>>IF
     13385<<ASSIGN  13392<<DOINDEX 13393>>ASSIGN  13393>>ASSIGN  13395<<DOINDEX 13396>>ASSIGN  13396>>ASSIGN
     13400<<ASSIGN  13406>>IF      13569<<ASSIGN  13571>>IF      13574>>ASSIGN  13574>>ASSIGN  13577>>ASSIGN
     13577>>ASSIGN  13579>>IF      13579>>IF      13582>>IF      13586>>ASSIGN  13587>>ASSIGN  13587>>ASSIGN
     13588>>ASSIGN  13591<<ASSIGN  13591>>ASSIGN  13940<<DOINDEX 13941>>ASSIGN  13941>>ASSIGN  13959<<DOINDEX
     13960>>ASSIGN  13960>>ASSIGN  13982<<DOINDEX 13983>>ASSIGN  13983>>ASSIGN  14314<<ASSIGN  14316>>IF
     14319<<ASSIGN  14321>>IF      14326>>ASSIGN  14327>>ASSIGN  14370<<ASSIGN  14371<>CALL    14389<<ASSIGN
     14391>>ASSIGN  14392>>ASSIGN  14393>>ASSIGN  14394>>ASSIGN  14395<<ASSIGN  14395>>ASSIGN  14396>>ASSIGN
     14398>>ASSIGN
K_LIMIT
     11261**DCL     13422--CALL    13438--CALL    13511--CALL    13527--CALL
LIMIT_ERR IN PROCEDURE PROCESS_RES_LISTS
     14004**LABEL   13868--CALLALT
M$CLOSE
      1986**DCL-ENT 13442--CALL    13531--CALL    13773--CALL
M$DISPRES
      1993**DCL-ENT 13888--CALL    14309--CALL
M$IBEX1_NUM
     11227**DCL     13421<>CALL    13422<>CALL    13438<>CALL    13441>>ASSIGN  13510<>CALL    13511<>CALL
     13527<>CALL    13530>>ASSIGN  13772>>ASSIGN
M$LIMIT
      1992**DCL-ENT 13868--CALL
M$RELRES
      1993**DCL-ENT 13811--CALL
MEM_FMT IN PROCEDURE DI_RESOURCES
     14117**DCL     14215--ASSIGN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:210  
NHPSN#
     11499**DCL     14352<>CALL
NO_EXCLUSIVE
     11507**DCL     13243<<ASSIGN  13249<<ASSIGN  13254>>IF      13260>>IF
NO_SHARED
     11506**DCL     13242<<ASSIGN  13251<<ASSIGN  13254>>IF      13260>>IF
OPENS_ERR
     13765**LABEL   13421--CALLALT 13510--CALLALT
OUT$
     11503**DCL     13443>>ASSIGN  13532>>ASSIGN  14442<<ASSIGN  14443>>ASSIGN
OUTBUF
     11564**DCL     13841<<ASSIGN  13900<<ASSIGN  13918<<ASSIGN  14186<<ASSIGN  14194<<ASSIGN  14214<<ASSIGN
     14226<<ASSIGN  14234<<ASSIGN  14250<<ASSIGN  14256<<ASSIGN  14442--ASSIGN  14454--ASSIGN
P$B.NSUBLKS
     12243**DCL     13149>>IF
P$PCB
     11311**DCL         9--PROC    13482--ENTRY   13633--ENTRY   14352<>CALL
P$PCB.OUT$
     11324**DCL     13149>>IF
P$S.COUNT
     12300**DCL     12303--IMP-SIZ
PHYS$LIST
     12659**DCL     14371<>CALL
PHYS$LIST.PRLIST.RNAME#
     12659**DCL     12660--REDEF
PROCESS_RES_LISTS
     13776**PROC    13473--CALL    13624--CALL    13754--CALL
PSEUDO$LIST.PSLIST.PSEUDO#
     12677**DCL     14409>>ASSIGN
PSEUDO_FMT IN PROCEDURE DI_RESOURCES
     14111**DCL     14191--ASSIGN
PSEUDO_HDR IN PROCEDURE DI_RESOURCES
     14101**DCL     14187--ASSIGN
PSN_FMT IN PROCEDURE DI_RESOURCES
     14113**DCL     14231--ASSIGN
PSN_HDR IN PROCEDURE DI_RESOURCES
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:211  
     14105**DCL     14228--ASSIGN
PSN_TBL
     11836**DCL     14352<>CALL
PSN_TBL.COUNT
     11838**DCL     14347<<ASSIGN  14424>>DOINDEX 14433>>ASSIGN
PSN_TBL.SN.DISP
     11875**DCL     14426>>ASSIGN
PSN_TBL.SN.FLGS.EXCL
     11866**DCL     14427>>IF
PSN_TBL.SN.TXT
     11860**DCL     14425>>ASSIGN
READS_ERR
     13749**LABEL   13422--CALLALT 13511--CALLALT
RELEASE_ALL#
     11498**DCL     13654>>IF      13785>>IF      13807>>IF      14352<>CALL
RELEASE_HDR
     12975**DCL     13842--ASSIGN
RELRESINFO IN PROCEDURE PROCESS_RES_LISTS
     13820**LABEL   13999--GOTO
RELRES_ERR IN PROCEDURE PROCESS_RES_LISTS
     13913**LABEL   13811--CALLALT
REQ_PSEUDO
     11659**DCL     13739>>ASSIGN  13865--ASSIGN  13907<>CALL
REQ_PSEUDO.FAILX
     11659**DCL     14012>>ASSIGN
REQ_PSEUDO.MEMORY#
     11659**DCL     13458<<ASSIGN  13464<<ASSIGN  13470<<ASSIGN  13501<<ASSIGN  13503<<ASSIGN  13650<<ASSIGN
     13652<<ASSIGN  13749<<ASSIGN  13855>>IF
REQ_PSEUDO.NN#
     11659**DCL     13220>>DOINDEX 13319>>DOWHILE 13331>>DOINDEX 13338<<ASSIGN  13338>>ASSIGN  13362>>DOINDEX
     13365<<ASSIGN  13365>>ASSIGN  13747<<ASSIGN  13855>>IF      14402<<ASSIGN  14409>>ASSIGN  14414>>ASSIGN
     14416>>ASSIGN  14417<<ASSIGN  14417>>ASSIGN
REQ_PSEUDO.PSLIST
     11661**DCL     13332<<ASSIGN  13332>>ASSIGN  13363<<ASSIGN  13363>>ASSIGN
REQ_PSEUDO.PSLIST.NUM#
     11661**DCL     13327>>IF      13344>>IF      13348<<ASSIGN  13348>>ASSIGN  13360>>ASSIGN  14414<<ASSIGN
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:212  
     14416<<ASSIGN
REQ_PSEUDO.PSLIST.PSEUDO#
     11661**DCL     13221>>IF      13323>>IF      14012>>ASSIGN  14409<<ASSIGN
REQ_PSN
     11707**DCL     13740>>ASSIGN  13866--ASSIGN  13907<>CALL
REQ_PSN.FAILX
     11707**DCL     14029>>ASSIGN
REQ_PSN.NN#
     11707**DCL     13245>>DOINDEX 13383>>DOWHILE 13392>>DOINDEX 13399<<ASSIGN  13399>>ASSIGN  13602>>DOINDEX
     13730>>DOINDEX 13748<<ASSIGN  13855>>IF      14433<<ASSIGN
REQ_PSN.RPLIST
     11707**DCL     13393<<ASSIGN  13393>>ASSIGN
REQ_PSN.RPLIST.DISP#
     11708**DCL     14426<<ASSIGN
REQ_PSN.RPLIST.PSN#
     11707**DCL     13387>>IF      13604>>IF      13608--ASSIGN  13609>>ASSIGN  13732>>IF      14029>>ASSIGN
     14425<<ASSIGN
REQ_PSN.RPLIST.USAGE#
     11708**DCL     13246>>IF      13387>>IF      13735<<ASSIGN  14429<<ASSIGN  14431<<ASSIGN
REQ_RES
     11594**DCL     13738>>ASSIGN  13864--ASSIGN  13907<>CALL
REQ_RES.FAILX
     11594**DCL     14037>>ASSIGN
REQ_RES.NN#
     11594**DCL     13287>>DOWHILE 13296>>DOINDEX 13303<<ASSIGN  13303>>ASSIGN  13548>>IF      13662>>DOINDEX
     13721>>ASSIGN  13722<<ASSIGN  13722>>ASSIGN  13746<<ASSIGN  13855>>IF      13874>>DOINDEX 13890>>DOINDEX
     14398<<ASSIGN
REQ_RES.PRLIST
     11594**DCL     13297<<ASSIGN  13297>>ASSIGN  13574--ASSIGN  13574--ASSIGN  13577--ASSIGN  13577--ASSIGN
     13586>>ASSIGN  13587<<ASSIGN  13587>>ASSIGN  13588<<ASSIGN  13671>>ASSIGN  13698<<ASSIGN  13721<<ASSIGN
     14391<<ASSIGN
REQ_RES.PRLIST.ATTR#
     11596**DCL     13291>>IF      13291>>IF      13692>>IF      13692>>IF      13894<<ASSIGN  14394<<ASSIGN
REQ_RES.PRLIST.RAT$
     11596**DCL     13557>>IF      13582>>IF      13664>>IF      13686>>IF      14396<<ASSIGN
REQ_RES.PRLIST.RNAME#
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:213  
     11594**DCL     11595--REDEF   13291>>IF      13549>>IF      13550>>IF      13561--ASSIGN  13562>>ASSIGN
     13579>>IF      13579>>IF      13664>>IF      13875>>IF      13878>>IF      13892>>IF      14036--ASSIGN
     14037>>ASSIGN
REQ_RES.PRLIST.RNME.NUM
     11595**DCL     13571>>IF      14393<<ASSIGN
REQ_RES.PRLIST.RNME.TYP
     11595**DCL     13692>>IF      14392<<ASSIGN
RES_FMT1 IN PROCEDURE DI_RESOURCES
     14107**DCL     14262--ASSIGN
RES_FMT2 IN PROCEDURE DI_RESOURCES
     14109**DCL     14265--ASSIGN
RES_HDR IN PROCEDURE DI_RESOURCES
     14103**DCL     14252--ASSIGN
SAVETHISPSEUDO
     13233**LABEL   13223--GOTO
SAVETHISRES
     13212**LABEL   13200--GOTO
SAVE_PSEUDO
     11675**DCL     13796<<ASSIGN  13848<>CALL
SAVE_PSEUDO.MEMORY#
     11675**DCL     13991<<ASSIGN  13991>>ASSIGN  13993>>IF
SAVE_PSEUDO.NN#
     11675**DCL     13951>>DOWHILE 13958<<ASSIGN  13958>>ASSIGN  13959>>DOINDEX 13969>>ASSIGN  13993>>IF
     14449<<ASSIGN
SAVE_PSEUDO.PSLIST
     11677**DCL     13960<<ASSIGN  13960>>ASSIGN
SAVE_PSEUDO.PSLIST.NUM#
     11677**DCL     13955>>IF      13966<<ASSIGN  13966>>ASSIGN
SAVE_PSEUDO.PSLIST.PSEUDO#
     11677**DCL     13952>>IF
SAVE_PSN
     11722**DCL     13795<<ASSIGN  13848<>CALL
SAVE_PSN.NN#
     11722**DCL     13977>>DOWHILE 13981<<ASSIGN  13981>>ASSIGN  13982>>DOINDEX 13985>>ASSIGN  13993>>IF
     14450<<ASSIGN
SAVE_PSN.RPLIST
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:214  
     11722**DCL     13983<<ASSIGN  13983>>ASSIGN
SAVE_PSN.RPLIST.PSN#
     11722**DCL     13978>>IF
SAVE_RES
     11610**DCL     13797<<ASSIGN  13848<>CALL
SAVE_RES.NN#
     11610**DCL     13820>>DOINDEX 13831>>DOINDEX 13934>>DOWHILE 13939<<ASSIGN  13939>>ASSIGN  13940>>DOINDEX
     13943>>ASSIGN  13993>>IF      14451<<ASSIGN
SAVE_RES.PRLIST
     11610**DCL     13941<<ASSIGN  13941>>ASSIGN
SAVE_RES.PRLIST.ATTR#
     11612**DCL     13835<<ASSIGN
SAVE_RES.PRLIST.RNAME#
     11610**DCL     11611--REDEF   13821>>IF      13824>>IF      13833>>IF      13935>>IF
SEG$2.ERRBUF
     12409**DCL     14044--CALL    14338--CALL    14352<>CALL    14354>>IF      14459--ASSIGN  14460--ASSIGN
SEG$2.FPT_CLOSE$
     12422**DCL     13440>>ASSIGN  13441>>ASSIGN  13442>>CALL    13529>>ASSIGN  13530>>ASSIGN  13531>>CALL
     13771>>ASSIGN  13772>>ASSIGN  13773>>CALL
SEG$2.FPT_WRITE$
     12424**DCL     13443>>ASSIGN  13532>>ASSIGN  14443>>ASSIGN
SEG$2.PHYS$
     12416**DCL     14371>>CALL
SEG$2.PSEUDO$
     12415**DCL     14409>>ASSIGN
SEG$2.USERS$
     12413**DCL     13514>>IF      14371>>CALL
SEG2$
     11214**DCL     12384--IMP-PTR 13440>>ASSIGN  13441>>ASSIGN  13442>>CALL    13443>>ASSIGN  13514>>IF
     13529>>ASSIGN  13530>>ASSIGN  13531>>CALL    13532>>ASSIGN  13771>>ASSIGN  13772>>ASSIGN  13773>>CALL
     14044>>CALL    14338>>CALL    14352>>CALL    14354>>IF      14371>>CALL    14371>>CALL    14409>>ASSIGN
     14443>>ASSIGN  14459>>ASSIGN  14460>>ASSIGN
VIRT_TBL
     11740**DCL     14352<>CALL    14363<>CALL    14371<>CALL
VIRT_TBL.COUNT
     11742**DCL     13197>>DOINDEX 13710>>DOINDEX 14348<<ASSIGN  14369>>DOWHILE 14390>>DOINDEX
PL6.E3A0      #001=CPO$ORES File=CPO$ORES.:E05TSI                                TUE 07/29/97 11:58 Page:215  
VIRT_TBL.RES.ATTRS
     11770**DCL     13715>>IF      13715>>IF      14394>>ASSIGN
VIRT_TBL.RES.NUM
     11778**DCL     13711>>IF      14395>>IF      14396>>IF
VIRT_TBL.RES.TYPE
     11764**DCL     13198>>IF      13715>>IF      14392>>ASSIGN
VIRT_TBL.RES.VNUM
     11766**DCL     11768--REDEF   14393>>ASSIGN
WRITES_ERR
     13749**LABEL   13438--CALLALT 13527--CALLALT
X$FORMAT
     12694**DCL-ENT 13844--CALL    13903--CALL    13921--CALL    14189--CALL    14196--CALL    14218--CALL
     14229--CALL    14241--CALL    14253--CALL    14292--CALL
