

14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          1    
    1      /*M*   IR_DATA_M   MACROS USED TO GENERATE RECOVERY DATA  */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X*  MEC,MOC,EXM=20,CLM=30,CRM=80                 */
    8
    9      /*F* NAME: Recovery Dump Files
   10
   11      Files built by the recovery process reside in the :SYSTAC
   12      account.  Each file is a keyed file containing records of
   13      variable length.  The IR_DATA_M.:LIBRARY file contains macros that
   14      may be used to generate a structure for the various records
   15      in the dump files.  A description of the dump files and the
   16      records within these files follows.
   17      */
   18
   19
   20                          /*F* NAME: D_RV_BUFF
   21                          .IBL D:RV_BUFF
   22                          */
   23                          /*F* NAME: Host Recovery Buffer
   24
   25                          The buffer contains information
   26                          concerning the NSA environment at the time of the
   27                          call to Recovery, vital portions of monitor data
   28                          that must be restored following a full Recovery, and
   29                          a directory to the remainder of the dump file.
   30
   31
   32                          The RV_BUFF macro may be used to generate the
   33                          structure for the Recovery Buffer.  The NAME
   34                          keyword may be used to supply a unique
   35                          label to this structure.  Default is 'RV_BUFF'.
   36                          The STCLASS keyword allows specification of the
   37                          storage class.  Default is 'STATIC'.
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          2    
   38
   39                          The contents of the Recovery Buffer are as follows:
   40                          */
   41      %MACRO RV_BUFF (NAME=RV_BUFF,
   42                    STCLASS=STATIC);
   43      DCL 1 NAME STCLASS DALIGNED,
   44            2 BUSY UBIN(36),
   45                          /*K* BUSY = VALUE-UBIN WORD.  Set non-zero by Recovery
   46                          and reset by RCVR2 to indicate to Recovery that the
   47                          granules used by this dump file may be reused for
   48                          other dumps on the next entry to Recovery.
   49                          */
   50            2 SCOUNT UBIN(36),
   51                          /*K* SCOUNT = VALUE-UBIN WORD.  Contains a running count
   52                          of the calls to Recovery.
   53                          */
   54            2 SIZE UBIN(36),
   55                          /*K* SIZE = VALUE-UBIN WORD.  Contains the number of
   56                          granules used in the system area for this dump.
   57                          */
   58            2 ANLZ1 BIT(1) UNAL,
   59                          /*K* ANLZ1 = VALUE-BIT(1).  Set if ANLZ has begun
   60                          to produce the crash analysis report.
   61                          */
   62            2 ANLZ2 BIT(1) UNAL,
   63                          /*K* ANLZ2 = VALUE-BIT(1).  Set if ANLZ has completed
   64                          the crash analysis report.
   65                          */
   66            2 * BIT(24) UNAL,
   67       /* Change EL$SCREECH and EL$SCREECH_MASK in EL$TABLES if more trap bits are added. */
   68            2 RCVR2TR BIT(1) UNAL,
   69                          /*K* RCVR2TR = VALUE-BIT(1).  Set in RCVR2 if trapped
   70                          while converting the system dump to a keyed file.
   71                          */
   72            2 CGQTRAP BIT(1) UNAL,
   73                          /*K* CGQTRAP = VALUE-BIT(1).  Set if Recovery trapped
   74                          in RVF$CGQ while closing the Comgroup on this Screech.
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          3    
   75                          */
   76            2 CLSFTRAP BIT(1) UNAL,
   77                          /*K* CFTRAP = VALUE-BIT(1).
   78                          Set if the RVF$CLSF routine ALTRETed.  Also set if
   79                          Recovery trapped while in RVF$CLSF.
   80                          Note that if this bit is set because of an ALTRET
   81                          from RVF$CLSF, the RCVRTRAP area of the recovery
   82                          buffer will not contain the RVF$CLSF environment.
   83                          */
   84            2 CFUTRAP BIT(1) UNAL,
   85                          /*K* CFUTRAP = VALUE-BIT(1).  Set if Recovery trapped
   86                          in RVF$CFUS.                                              */
   87            2 AJITSU BIT(1) UNAL,
   88                          /*K* AJITUPD = VALUE-BIT(1).  Set in GHOST1 after updating
   89                          the accounting information for this dump.  This bit is
   90                          used to prevent multiple updating of the accounting
   91                          information should the system crash while in GHOST1.
   92                          */
   93            2 NIOTRAP BIT(1) UNAL,
   94                          /*K* NIOTRAP = VALUE-BIT(1).  Set if Recovery trapped
   95                          in IRN$RECOVERIO.
   96                          */
   97            2 MONDTRAP BIT(1) UNAL,
   98                          /*K* MONDTRAP = VALUE-BIT(1).  Set if Recovery trapped in
   99                          IRR$RECOVER while accessing Monitor or TIGR data.  If this
  100                          bit is set the rest of the dump may not be
  101                          useful.
  102                          */
  103            2 AJITTR BIT(1) UNAL,
  104                          /*K* AJITTR = VALUE-BIT(1).  Set in GHOST1 if trapped
  105                          while updating the accounting information from the
  106                          user's JITs.  The AJITRAP bit will be set in the user's
  107                          entry in the User Directory.
  108                          */
  109            2 MONJITBAD BIT(1) UNAL,
  110                          /*K* MONJITBAD = VALUE-BIT(1).  Set if Recovery checks
  111                          on the Monitor's Page Table entry for Page 0 failed.
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          4    
  112                          Either the PGINMEM bit was not set, or the physical page
  113                          number was <4 or > HIPAGE.
  114                          */
  115            2 MONPG0BAD BIT(1) UNAL,
  116                          /*K* MONPAGE0BAD = VALUE-BIT(1).  Set by Recovery if
  117                          consistency checks on processor dependent data failed.
  118                          */
  119                                    /* SOME TIMING DATA                             */
  120            2 UTS1 UBIN WORD,
  121                          /*K* UTS1 = VALUE-UBIN WORD.  Contains the UTS on
  122                          entry to the AARDVARK portion of Recovery.
  123                          */
  124            2 UTS2 UBIN WORD,
  125                          /*K* UTS2 = VALUE-UBIN WORD.  Contains the UTS on
  126                          completion of the AARDVARK portion of Recovery.
  127                          */
  128            2 UTS3 UBIN WORD,
  129                          /*K* UTS3 = VALUE-UBIN WORD.  Contains the UTS on
  130                          initiation of RCVR2 to convert this dump file.
  131                          */
  132            2 UTS4 UBIN WORD,
  133                          /*K* UTS4 = VALUE-UBIN WORD.  Contains the UTS when
  134                          RCVR2 has completed converting the system area dump
  135                          to a keyed file.
  136                          */
  137            2 SCODE,
  138                          /*K* SCODE = VALUE-BIT(72).  Contains the Screech
  139                          code that was used to initiate the call to Recovery.
  140                          This field contains the following sub-fields:
  141                          */
  142              3 ID BIT(18) UNAL,
  143                          /*K* SCODE.ID = VALUE-BIT(18).  Contains the octal
  144                          FCG-MID of the Recovery caller.
  145                          */
  146              3 MON BIT(1) UNAL,
  147                          /*K* SCODE.MON = VALUE-BIT(1).  Set if the call to
  148                          Recovery was initiated by the Monitor.  Reset if initiated
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          5    
  149                          by a System Ghost, Special Shared Processor or a
  150                          privileged user.
  151                          */
  152              3 CODE UBIN(14) UNAL,
  153                          /*K* SCODE.CODE = VALUE-UBIN(14).  Contains the code that
  154                          identifies the reason for the call to Recovery.
  155                          A listing of these codes is included in Appendix D of
  156                          this manual.
  157                          */
  158              3 SEV UBIN(3) UNAL,
  159                          /*K* SCODE.SEV = VALUE-UBIN(3).  Contains the severity of
  160                          the Screech.  This is set as follows:
  161                          } 7 - Full Screech
  162                          } 6 - Single User Abort
  163                          } 5 - Snapshot Dump
  164                          } 4 - Zap
  165                          */
  166              3 DUMPBITS BIT(36),
  167                          /*K* SCODE.DUMPBITS = VALUE-BIT(36).  Contains the bit
  168                          settings that indicate what portions of the operating
  169                          system and of the users are to be written to the dump
  170                          file.
  171                          */
  172            2 SNAPU# UBIN(9) UNAL,
  173                          /*K* SNAPU# = VALUE-UBIN(9).  Contains the User Number
  174                          of the user that is to be dumped on a Snapshot Dump.
  175                          */
  176            2 * BIT(27) UNAL,
  177            2 SDOMAIN UBIN WORD,
  178                          /*K* SDOMAIN = VALUE-UBIN WORD.  Contains the
  179                          Working Space Register from the ISR of the entity
  180                          that called M$SCREECH.
  181                          */
  182            2 RCODE,
  183                          /*K* RCODE= VALUE-BIT(72).  Contains a copy of SCODE as
  184                          modified by Recovery.  The SEV field may have been changed
  185                          from 6 to 7 if using the last dump slot.  The DUMPBITS
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          6    
  186                          field may be modified if traps occur in Recovery.
  187                          The RCODE field contains the same sub-fields as does the
  188                          SCODE field.
  189                          */
  190              3 ID BIT(18) UNAL,
  191              3 MON BIT(1) UNAL,
  192              3 CODE UBIN(14) UNAL,
  193              3 SEV UBIN(3) UNAL,
  194              3 DUMPBITS BIT(36),
  195            2 * BIT(72) UNAL,
  196                                    /* HARDWARE ENVIRONMENT                         */
  197            2 SSR,
  198                          /*K* SSR = VALUE-BIT(72).  Contains the Safe-Store
  199                          Register at entry to Recovery.  Recovery reloads the SSR
  200                          on entry and restores it when returning to the
  201                          monitor following a Single User Abort or Snapshot Dump.
  202                          */
  203              3 BOUND UBIN(20) UNAL,
  204              3 FLGS BIT(9) UNAL,
  205              3 WSR UBIN(3) UNAL,
  206              3 TYP UBIN(4) UNAL,
  207              3 BASE UBIN(36),
  208            2 PSR,
  209                          /*K* PSR = VALUE-BIT(72).  Contains the Parameter Stack
  210                          Register at entry to Recovery.  Recovery reloads the PSR
  211                          on entry and restores it when returning to the
  212                          monitor following a Single User Abort or Snapshot Dump.
  213                          */
  214              3 BOUND UBIN(20) UNAL,
  215              3 FLGS BIT(9) UNAL,
  216              3 WSR UBIN(3) UNAL,
  217              3 TYP UBIN(4) UNAL,
  218              3 BASE UBIN(36),
  219            2 ASR,
  220                          /*K* ASR = VALUE-BIT(72).  Contains the Argument Stack
  221                          Register at entry to Recovery.  Recovery reloads the ASR
  222                          on entry and restores it when returning to the
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          7    
  223                          monitor following a Single User Abort or Snapshot Dump.
  224                          */
  225              3 BOUND UBIN(20) UNAL,
  226              3 FLGS BIT(9) UNAL,
  227              3 WSR UBIN(3) UNAL,
  228              3 TYP UBIN(4) UNAL,
  229              3 BASE UBIN(36),
  230            2 FLTLOC,
  231                          /*K* FLTLOC = VALUE-BIT(72).  Contains the contents of
  232                          real locations 32-33 (Octal) at entry to Recovery.
  233                          Recovery sets the system Fault Entry Descriptor to
  234                          the Recovery fault handler while Recovery is in
  235                          progress and restores it to the Monitor Fault Handler
  236                          when returning to the monitor following a Single User
  237                          Abort or Snapshot Dump.
  238                          */
  239              3 ENTLOC UBIN(18)  UNAL,
  240              3 SAV BIT(1) UNAL,
  241              3 ISEGNO UBIN(10) UNAL,
  242              3 WSR UBIN(3) UNAL,
  243              3 TYP UBIN(4) UNAL,
  244              3 LSIZE UBIN(10) UNAL,
  245              3 LBASE UBIN(26) UNAL,
  246            2 AFLTLC,
  247                          /*K* AFLTLC = VALUE-BIT(72).  Contains the contents of
  248                          real locations 40-41 (Octal) at entry to Recovery.
  249                          Recovery sets the system backup Fault Entry Descriptor to
  250                          the Recovery fault handler while Recovery is in
  251                          progress and restores it to the Monitor Fault Handler
  252                          when returning to the monitor following a Single User
  253                          Abort or Snapshot Dump.
  254                          */
  255              3 ENTLOC UBIN(18)  UNAL,
  256              3 SAV BIT(1) UNAL,
  257              3 ISEGNO UBIN(10) UNAL,
  258              3 WSR UBIN(3) UNAL,
  259              3 TYP UBIN(4) UNAL,
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          8    
  260              3 LSIZE UBIN(10) UNAL,
  261              3 LBASE UBIN(26) UNAL,
  262            2 INTLOC,
  263                          /*K* INTLOC = VALUE-BIT(72).  Contains the contents of the
  264                          Interrupt Entry Descriptor from real memory locations
  265                          30-31 (octal) at entry to Recovery.  These
  266                          words in real memory are used by MINIQ while Recovery is
  267                          in progress and are restored before returning to the
  268                          monitor following a Single User Abort or Snapshot Dump.
  269                          */
  270              3 ENTLOC UBIN(18)  UNAL,
  271              3 SAV BIT(1) UNAL,
  272              3 ISEGNO UBIN(10) UNAL,
  273              3 WSR UBIN(3) UNAL,
  274              3 TYP UBIN(4) UNAL,
  275              3 LSIZE UBIN(10) UNAL,
  276              3 LBASE UBIN(26) UNAL,
  277            2 IMASK BIT(72),
  278                          /*K* IMASK = VALUE-BIT(72).  Contains the contents
  279                          of the Memory Controller Interrupt Mask Register
  280                          on entry to Recovery.
  281                          */
  282            2 WSR(0:7) BIT(9) UNAL,
  283                          /*K* WSR = ARRAY(0:7) BIT(9).  Contains the values of
  284                          the Working Space Registers at entry to Recovery.
  285                          */
  286            2 SSFRAME,
  287                          /*K* SSFRAME = ARRAY(0:63)-BIT(36).  Contains the
  288                          contents of the top Safe-Store Stack frame at entry
  289                          to Recovery.
  290                          */
  291              3 *(0:3) BIT(36) UNAL,
  292              3 IC UBIN(18) UNAL,
  293              3 * BIT(18) UNAL,
  294              3 *(0:58) BIT(36) UNAL,
  295                                    /* FROM MON DATA PAGE 0                         */
  296            2 CUN UBIN WORD,
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          9    
  297                          /*K* CUN = VALUE-UBIN WORD.  Contains the value from
  298                          S_CUN in Monitor's data page 0.
  299                          */
  300            2 S$CU$ PTR,
  301                          /*K* S$CU$ = PTR.  Contains the value from S$CU$ in
  302                          the monitor's data page 0.
  303                          */
  304            2 S_PNO UBIN WORD,
  305                          /*K* S_PNO = VALUE-UBIN WORD.  Contains the value
  306                          from S_PNO in the monitor's data page 0.
  307                          */
  308                                    /* FROM MONITOR DATA                            */
  309            2 MM_CGQCXT_END UBIN WORD,
  310                          /*K* MM_CGQCXT_END = VALUE-UBIN WORD.  Contains the
  311                          number of the last page in the comgroup area
  312                          reserved for addressing and context blocks.
  313                          */
  314            2 S_CUN(0:7) UBIN(36),
  315                          /*K* S_CUN = ARRAY(0:7)-UBIN WORD.  Contains the values
  316                          from S_PCU in monitor data.
  317                          */
  318            2 B$USRT$ PTR,
  319                          /*K* B$USRT$ = PTR.  Contains the Pointer to the User Table
  320                          which is in TIGR data.
  321                          */
  322            2 B$P$ PTR,
  323                          /*K* B$P$ = PTR.  Contains the Pointer to the Processor
  324                          Table which is in TIGR data.
  325                          */
  326            2 S_DL$ PTR,
  327                          /*K* S_DL$ = PTR.  Contains the pointer to the DO LIST
  328                          entries.
  329                          */
  330            2 P_NPROCS UBIN WORD,
  331                          /*K* P_NPROCS = VALUE-UBIN WORD.  Contains the number
  332                          of used entries in the Shared Processor Tables.
  333                          */
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          10   
  334            2 P_MAXPROCS UBIN WORD,
  335                          /*K* P_MAXPROCS = VALUE-UBIN WORD.  Contains the maximum
  336                          number of entries in the Shared Processor Tables.
  337                          */
  338            2 B_MUAIS UBIN WORD,
  339                          /*K* B_MUAIS = VALUE-UBIN WORD.  Contains the
  340                          maximum number users allowed on the system.
  341                          */
  342            2 PDBR BIT(36),
  343                          /*K* PDBR = VALUE-BIT(36).  Contains the contents of
  344                          the Page Table Directory Base Register at entry to Recovery.
  345                          Recovery reloads the PDBR on entry and restores it when
  346                          returning to the monitor following a Single User Abort
  347                          or Snapshot Dump.
  348                          */
  349            2 * BIT(36),
  350            2 C_USRTBL(0:15) UBIN WORD,
  351                          /*K* C_USRTBL = ARRAY(0:15)-UBIN WORD.  Contains the
  352                          User Table entry for the current user.  The based
  353                          structure B$U should be used to access the data from
  354                          this field.
  355                          */
  356                                    /* THINGS TO RESTORE                            */
  357            2 KI_RCVPB(0:15) UBIN WORD,
  358                          /*K* KI_RCVPB = ARRAY(0:15) UBIN WORD.  Contains the current
  359                     state of each FEP.  Used by SLUG to restart the FEPs following
  360                     a Recovery.
  361                     */
  362            2 MPSTATE(0:7) UBIN,
  363                          /*N* MPSTATE = ARRAY(0:7)-UBIN.  Contains the current
  364                          state of each CPU.  Used by ITZ$RECOVER to set a CPU in
  365                          the paused state if it was running when the system
  366                          crashed.
  367                          */
  368            2 PORTNR(0:7) UBIN,
  369                /*N* PORTNR = ARRAY(0:7)-UBIN.  Contains the port number of each CPU.
  370           The port number may have been changed from the original TIGR assignments
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          11   
  371           by MAKE CPU keyins.
  372           */
  373            2 SYSID SBIN,
  374                          /*K* SYSID = VALUE-SBIN.  Contains the value from
  375                          S_SYSID.  This value is restored by ITZ$RECOVER following
  376                          a full Screech.
  377                          */
  378            2 STREAMFILEID CHAR(3) ALIGNED,
  379                          /*K* STREAMFILEID = VALUE-CHAR(3).  Contains the value
  380                          from S_STREAMFILEID.  This value is restored by
  381                          ITZ$RECOVER following a full Screech.
  382                          */
  383            2 * BIT(72),
  384            2 S_TUIS UBIN WORD,
  385                          /*K* S_TUIS = VALUE-UBIN WORD.  Contains the
  386                          maximum number of users allowed on the system.
  387                          This value is restored by ITZ$RECOVER following
  388                          a full Screech.
  389                          */
  390            2 S_CTUIS UBIN WORD,
  391                          /*K* S_CTUIS = VALUE-UBIN WORD.  Contains the
  392                          number of users currently on the system.
  393                          */
  394            2 S_CNODE UBIN WORD,
  395                          /*K* S_CNODE = VALUE-UBIN WORD.  Contains the value
  396                          from S_CNODE in the monitor's data page 0.
  397                          */
  398            2 S_MUIS(0:4) UBIN WORD,
  399                          /*K* S_MUIS = ARRAY(0:4)-UBIN WORD.  Contains the
  400                          maximum number of users allowed on the system for
  401                          each mode.  These values are restored by ITZ$RECOVER
  402                          following a full Screech.
  403                          */
  404            2 EL_BUSY SBIN WORD,
  405                          /*K* EL_ .  The following words in the Recovery
  406                          Buffer are used by TIGR in restoring the Error Log
  407                          Buffers following a full Screech:
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          12   
  408                          */
  409                          /*K* EL_BUSY = VALUE-SBIN WORD.  Contains the
  410                          gate used by the monitor error logging routine.
  411                          */
  412            2 EL_NUMPGS SBIN WORD,
  413                          /*K* EL_NUMPGS = VALUE-SBIN WORD.  Contains the current
  414                          number of pages that are allocated for Error Log Buffers.
  415                          */
  416            2 EL_FULLBUFS SBIN WORD,
  417                          /*K* EL_FULLBUFS = VALUE-SBIN WORD.  Contains the
  418                          number of Error Log Buffers currently in use.
  419                          */
  420            2 EL_MAXPGS SBIN WORD,
  421                          /*K* EL_MAXPGS = VALUE-SBIN WORD.  Contains the maximum
  422                          number of pages that may be allocated for Error Log Buffers.
  423                          */
  424            2 EL_FIRSTBUF UBIN(36),
  425                          /*K* EL_FIRSTBUF = VALUE-UBIN WORD.  Contains the page
  426                          number of the first physical page containing an Error
  427                          Log Buffer.
  428                          */
  429            2 EL_CURBUF UBIN(36),
  430                          /*K* EL_CURBUF = VALUE-UBIN WORD.  Contains the page
  431                          number of the physical page containing the
  432                          Error Log Buffer currently in use.
  433                          */
  434            2 EL_ERRCT SBIN WORD,
  435                          /*K* EL_ERRCNT = VALUE-SBIN WORD.  Contains the Error
  436                          Log error count.
  437                          */
  438            2 * BIT(36),
  439                                    /* FROM AARDVARK DATA                           */
  440            2 AMONID,
  441                          /*K* AMONID = VALUE-BIT(36).  Contains the Monitor ID
  442                          as stored in AARDVARK's data.
  443                          */
  444              3 VER CHAR(3) UNAL,
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          13   
  445              3 BOOTC UBIN(9) UNAL,
  446            2 DMONID,
  447                          /*K* DMONID = CHAR(4).  Contains the Monitor ID plus
  448                          the boot count that is to be used to build the
  449                          dump file name.
  450                          */
  451              3 VER CHAR(3) UNAL,
  452              3 BOOTC CHAR(1) UNAL,
  453            2 INSTID UBIN,
  454                          /*K* INSTID = VALUE-UBIN WORD.  Contains the Installation
  455                          ID.  This word is placed in the Recovery buffer by RCVR2
  456                          from FM$VID.INSTID.
  457                          */
  458            2 IDCOUNT UBIN WORD,
  459                          /*K* IDCOUNT = VALUE-UBIN WORD.  Contains the Screech count
  460                     that is to be used to build the dump file name.  This differs
  461                     from SCOUNT in that it is reset to zero after reaching 99.
  462                     */
  463            2 MONPLL UBIN(36),
  464                          /*K* MONPLL = VALUE-UBIN WORD.  Contains the page
  465                          number of the first virtual page of monitor data.
  466                          This field is used by RCVR2 in building the keys
  467                          for the monitor's working space records.
  468                          */
  469            2 DINDEX UBIN,
  470                          /*K* DINDEX = VALUE-UBIN WORD.  Contains the number
  471                          of the dump slot in the System Dump Area that was
  472                          used for this dump.
  473                          */
  474            2 NXTGRAN UBIN(36),
  475                          /*K* NXTGRAN = VALUE-UBIN WORD.  Contains the granule
  476                          number +1 of the last granule actually used for this
  477                          dump file.  This value is used by RCVR2 to validate
  478                          the dump file.
  479                          */
  480            2 MAXGRAN UBIN(36),
  481                          /*K* MAXGRAN = VALUE-UBIN WORD.  Contains the last
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          14   
  482                          granule number of the last granule in The System
  483                          Dump Area available for this dump.  This value is used
  484                          by RCVR2 to validate the dump file.
  485                          */
  486            2 TAPE_ID CHAR(28),
  487                     /*K* TAPE_ID = CHAR(28).  Contains the PO Tape Identification.
  488                     */
  489            2 PPUT,
  490              3 FP UBIN HALF HALIGNED,
  491                          /*K* PPUT.FP = VALUE-UBIN HALF.  Contains the page
  492                          number of the first page of PPUT.
  493                          */
  494              3 LP UBIN HALF HALIGNED,
  495                          /*K* PPUT.LP = VALUE-UBIN HALF.  Contains the page
  496                          number of the last page of PPUT.
  497                          */
  498                                    /* DUMP DIRECTORY                               */
  499            2 USRDR DALIGNED,
  500                          /*K* USRDR = VALUE-BIT(72).  Contains the information
  501                          required by RCVR2 to locate the Dump File User Directory
  502                          in the System Dump Area as follows:
  503                          */
  504              3 DA UBIN(36),
  505                          /*K* USRDR.DA = VALUE-UBIN WORD.  Contains the granule
  506                          number of the Dump File User Directory.
  507                          */
  508              3 TRAP BIT(1) UNAL,
  509              3 * BIT(17) UNAL,
  510              3 SZ UBIN(18) UNAL,
  511                          /*K* USRDR.SZ = VALUE-UBIN(18).  Contains the size of
  512                          the Dump File User Directory.  This value will always
  513                          be set to 1.
  514                          */
  515            2 JITS,
  516                          /*K* JITS = VALUE-BIT(72).  Contains the information
  517                          required by GHOST1 to locate the user's accounting JITs
  518                          in the System Dump area as follows:
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          15   
  519                          */
  520              3 DA UBIN(36),
  521                          /*K* JITS.DA = VALUE-UBIN WORD.  Contains the granule
  522                          number of the first granule that contains the accounting
  523                          JITs.
  524                          */
  525              3 TRAP BIT(1) UNAL,
  526                          /*K* JITS.TRAP = VALUE-BIT(1).  Set if Recovery trapped
  527                          while accessing the accounting JITS.
  528                          */
  529              3 * BIT(17) UNAL,
  530              3 SZ UBIN(18) UNAL,
  531                          /*K* JITS.SZ = VALUE-UBIN(18).  Contains the number
  532                          of granules that contain accounting JITs.  Each granule
  533                          will contain up to 3 JITs.
  534                          */
  535            2 ERRLOG,
  536                          /*K* ERRLOG = VALUE-BIT(72).  Contains the information
  537                          required by TIGR to locate the Error Log Buffers in
  538                          the System Dump Area as follows:
  539                          */
  540              3 DA UBIN(36),
  541                          /*K* ERRLOG.DA = VALUE-UBIN WORD.  Contains the granule
  542                          number of the first granule that contains the Error Log
  543                          Buffers.
  544                          */
  545              3 TRAP BIT(1) UNAL,
  546                          /*K* ERRLOG.TRAP = VALUE-BIT(1).  Set if Recovery trapped
  547                          while accessing the Error Log Buffers.
  548                          */
  549              3 * BIT(17) UNAL,
  550              3 SZ UBIN(18) UNAL,
  551                          /*K* ERRLOG.SZ = VALUE-UBIN(18).  Contains the number of
  552                          granules that contain Error Log Buffers.
  553                          */
  554            2 MONWSQD,
  555                          /*K* MONWSQD = VALUE-BIT(72).  Contains the information
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          16   
  556                          required by RCVR2 to locate the granules that contain
  557                          the portions of the Monitor's Working Space Quarter
  558                          that have been dumped as follows:
  559                          */
  560              3 DA UBIN(36),
  561                          /*K* MONWSQD.DA = VALUE-UBIN WORD.  Contains the granule
  562                          number of the first granule containing a dump of the
  563                          Monitor Working Space Quarter.  Words 0-511 of this
  564                          granule will contain the the Working Space Quarter
  565                          Directory for the monitor.
  566                          */
  567              3 TRAP BIT(1) UNAL,
  568                          /*K* MONWSQD.TRAP = VALUE-BIT(1).  Set if Recovery trapped
  569                          while attempting to dump the Monitor Working Space Quarter.
  570                          */
  571              3 * BIT(1) UNAL,
  572              3 BADPT BIT(1) UNAL,
  573              3 * BIT(15) UNAL,
  574              3 SZ UBIN(18) UNAL,
  575                          /*K* MONWSQD.SZ = VALUE-UBIN(18).  Contains the number of
  576                          granules that contain a dump of the Monitor Working Space
  577                          Quarter.
  578                          */
  579            2 LRMEM,
  580                          /*K* LRMEM = VALUE-BIT(72).  Contains the information
  581                          required by RCVR2 to locate the dump of low real memory
  582                          as follows:
  583                          */
  584              3 DA UBIN(36),
  585                          /*K* LRMEM.DA = VALUE-UBIN WORD.  Contains the granule
  586                          number of the first granule that contains the dump of
  587                          low real memory.
  588                          */
  589              3 TRAP BIT(1) UNAL,
  590                          /*K* LRMEM.TRAP = VALUE-BIT(1).  Set if Recovery trapped
  591                          while attempting to dump low real memory.
  592                          */
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          17   
  593              3 * BIT(17) UNAL,
  594              3 SZ UBIN(18) UNAL,
  595                          /*K* LRMEM.SZ = VALUE-UBIN(18) Contains the number of
  596                          granules that contain a dump of low real memory.
  597                          */
  598            2 MONJITS(0:7),
  599                          /*N* MONJITS = ARRAY(0:7)-BIT(72).  Contains the
  600                          information required by RCVR2 to locate the granules
  601                          that contain monitor data that is processor dependent;
  602                          the Page Table, JIT, TSTACK, HJIT and data page 0,
  603                          as follows:
  604                          */
  605              3 DA UBIN(36),
  606                          /*N* MONJITS.DA = VALUE-UBIN WORD.  Contains the granule
  607                          number of the first granule containing processor dependent
  608                          data.
  609                          */
  610              3 TRAP BIT(1) UNAL,
  611                          /*N* MONJITS.TRAP = VALUE-BIT(1).  Set if Recovery trapped
  612                          while attempting to dump processor dependent data.
  613                          */
  614              3 * BIT(1) UNAL,
  615              3 BADPT BIT(1) UNAL,
  616              3 * BIT(15) UNAL,
  617              3 SZ UBIN(18) UNAL,
  618                          /*N* MONJITS.SZ = VALUE-UBIN(18).  Contains the number of
  619                          granules that contain processor dependent data.
  620                          */
  621            2 MONPROC,
  622                          /*K* MONPROC = VALUE-BIT(72).  Contains the information
  623                          required by RCVR2 to locate the monitor procedure that
  624                          has been written to the System Dump Area as follows:
  625                          */
  626              3 DA UBIN(36),
  627                          /*K* MONPROC.DA = VALUE-UBIN WORD.  Contains the granule
  628                          number of the first granule that contains a dump of
  629                          the monitor procedure.
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          18   
  630                          */
  631              3 TRAP BIT(1) UNAL,
  632                          /*K* MONPROC.TRAP = VALUE-BIT(1).  Set if Recovery trapped
  633                          while attempting to dump the monitor procedure.
  634                          */
  635              3 * BIT(17) UNAL,
  636              3 SZ UBIN(18) UNAL,
  637                          /*K* MONPROC.SZ = VALUE-UBIN(18).  Contains the number of
  638                          granules that contain a dump of monitor procedure.
  639                          */
  640            2 CWSQ(0:31),
  641                          /*K* CWSQ = ARRAY(0:31)-BIT(72).  Contains the information
  642                          required by RCVR2 to locate the contents of the
  643                          Communications Working Space Quarters that have been
  644                          dumped as follows:
  645                          */
  646              3 DA UBIN(36),
  647                          /*K* CWSQ.DA = VALUE-UBIN WORD.  Contains the granule
  648                          number of the first granule containing data from this
  649                          Communications WSQ.  This first granule will contain
  650                          a directory to the virtual pages dumped for this WSQ.
  651                          */
  652              3 TRAP BIT(1) UNAL,
  653                          /*K* CWSQ.TRAP = VALUE-BIT(1).  Set if Recovery trapped
  654                          while attempting to dump the pages of this Communications
  655                          WSQ.
  656                          */
  657              3 * BIT(17) UNAL,
  658              3 SZ UBIN(18) UNAL,
  659                          /*K* CWSQ.SZ = VALUE-UBIN(18).  Contains the number
  660                          of granules that have been dumped for this Communications
  661                          WSQ.
  662                          */
  663            2 CGRWSQ(0:9),
  664                          /*K* CGRWSQ = ARRAY(0:9)-BIT(72).  Contains the information
  665                          required by RCVR2 to locate the contents of the
  666                          Comgroup Working Space Quarter that has been
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          19   
  667                          dumped as follows:
  668                          */
  669              3 DA UBIN(36),
  670                          /*K* CGRWSQ.DA = VALUE-UBIN WORD.  Contains the granule
  671                          number of the first granule containing data from this
  672                          Comgroup WSQ.  This first granule will contain
  673                          a directory to the virtual pages dumped for this WSQ.
  674                          */
  675              3 TRAP BIT(1) UNAL,
  676                          /*K* CGRWSQ.TRAP = VALUE-BIT(1).  Set if Recovery trapped
  677                          while attempting to dump the pages of this Comgroup
  678                          WSQ.
  679                          */
  680              3 * BIT(17) UNAL,
  681              3 SZ UBIN(18) UNAL,
  682                          /*K* CGRWSQ.SZ = VALUE-UBIN(18).  Contains the number
  683                          of granules that has been dumped for this Comgroup
  684                          WSQ.
  685                          */
  686            2 CURCG,
  687                          /*K* CURCG.  Describes the comgroup that was associated with
  688                          the user causing the crash.
  689                          */
  690              3 DA UBIN,
  691                     /*K* CURCG.DA = VALUE-UBIN WORD.  Contains the granule number
  692                     of the first granule containing a page from this comgroup.
  693                     */
  694              3 TRAP BIT(1),
  695                     /*K* CURCG.TRAP = VALUE-BIT(1).  Set if a trap occurred while
  696                     dumping this comgroup.
  697                     */
  698              3 ERR BIT(1),
  699                /*K* CURCG.ERR = VALUE-BIT(1).  Set if an error occurred while trying
  700                to dump this comgroup.
  701                */
  702              3 * BIT(16),
  703              3 SZ UBIN(18) UNAL,
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          20   
  704                          /*K* CURCG.SZ = VALUE-UBIN(18).  Contains the number of
  705                          granules dumped.
  706                          */
  707              3 CG$ PTR,
  708                          /*K* CURCG.CG$ = VALUE-PTR.  Contains the pointer to the
  709                          context block of this comgroup.
  710                          */
  711            %NI$PARTITION (NAME=IT_PARTITION, LAST=",", LVL=2);
  712            2 OCMSG CHAR(120),
  713            2 DPS8000_CI_TABLE(0:3) UBIN ,
  714                          /*K* DP8000_CI_TABLE = ARRAY(0:3). Contains the
  715                          connect index table for the DPS8000.                      */
  716            2 HEADER CHAR(124),
  717                          /*K* HEADER = VALUE-CHAR(124).  Contains the
  718                          administrative message from a BROADCAST keyin
  719                          that is saved across recoveries.
  720                          */
  721            2 SPACE_LEFT(0:393) SBIN,
  722            2 RCVR2TRAP,
  723                          /*K* RCVR2TRAP = ARRAY(0:67) BIT(36).  Contains the
  724                          copy of the TCB frame at the time of a trap
  725                          in RCVR2.  This frame is overlaid  each time
  726                          RCVR2 traps.  This field is included in the buffer
  727                          to provide information to the CP-6 analyst in isolating
  728                          the causes of Recovery failures.
  729                          */
  730              3 *(0:67) BIT(36) UNAL,
  731            2 AJITTRAP,
  732                          /*K* AJITTRAP = ARRAY(0:67) BIT(36).  Contains the
  733                          copy of the TCB frame at the time of a trap
  734                          in IGR$RECOVER.  This frame is overlaid  each time
  735                          IGR$RECOVER traps.  This field is included in the buffer
  736                          to provide information to the CP-6 analyst in isolating
  737                          the causes of Recovery failures.
  738                          */
  739              3 *(0:67) BIT(36) UNAL,
  740            2 RCVRTRAP,
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          21   
  741                          /*K* RCVRTRAP = ARRAY(0:63) BIT(36).  Contains the
  742                          copy of the Safe-Store frame at the time of a trap
  743                          in Recovery.  This frame is overlaid  each time
  744                          Recovery traps.  This field is included in the buffer
  745                          to provide information to the CP-6 analyst in isolating
  746                          the causes of Recovery failures.
  747                          */
  748              3 *(0:63) BIT(36) UNAL;
  749
  750      %MEND;
  751
  752
  753
  754
  755                          /*F* NAME: D_RV_FEP_BUFF
  756                          .IBL D:RV_FEP_BUFF
  757                          */
  758                          /*F* NAME: FEP Recovery Buffer
  759
  760                          The RV_FEP_BUFF macro generates the structure for the
  761                          LCP6 recovery buffer.  The recovery buffer resides
  762                          at a known location in real memory.  The contents of
  763                          the recovery buffer are set up by the recovery process.
  764                          When the LCP6 system is rebooted following a full
  765                          screech the contents of the recovery buffer are restored
  766                          to the values set by recovery as part of the boot process.
  767
  768                          The FEP recovery buffer contains the following:
  769                          */
  770
  771      %MACRO RV_FEP_BUFF (FPTN=RV_FEP_BUFF,
  772                       STCLASS=BASED,
  773                       BITMAP(YES='1'B,NO='0'B)='1'B);
  774
  775      %LSET L6=BITBIN(MODE_FEP);
  776      %IF (MODE_FEP);
  777      %LSET WORD16=CHARTEXT('(16)');
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          22   
  778      %LSET WORD32=CHARTEXT('(32)');
  779      %LSET WALGN=CHARTEXT('ALIGNED');
  780      %LSET DALGN=CHARTEXT('DALIGNED');
  781      %ELSE;
  782      %LSET WORD16=CHARTEXT('(18)');
  783      %LSET WORD32=CHARTEXT('(36)');
  784      %LSET WALGN=CHARTEXT('HALIGNED');
  785      %LSET DALGN=CHARTEXT('ALIGNED');
  786      %ENDIF;
  787
  788      DCL 1 FPTN STCLASS %WALGN,
  789      %IF (BITMAP);
  790            %IF MODE_FEP;
  791            2 DUMPMAP(0:4095) BIT(1),
  792                          /*K* DUMPMAP = ARRAY-BIT(1).  Specifies the physical pages
  793                          to be dumped.  Each bit corresponds to a 1K (4 page) segment
  794                          of memory to be dumped.  For example, if bit 100 is set then
  795                          pages 400-403 of FEP memory are to be included in the dump.
  796                          The item generated for DUMPMAP in a DPS8 compilation is not
  797                          useful other than to generate the proper offset for the rest
  798                          of the recovery buffer.
  799                          */
  800            %ELSE;
  801            2 DUMPMAP(0:255) UBIN HALF HALIGNED, /* DPS8 COMPILATION                */
  802            %ENDIF;
  803      %ENDIF;
  804            2 BUSY SBIN %WORD16 %WALGN,
  805                          /*K* BUSY = VALUE-SBIN WORD.  Set non-zero if the recovery
  806                          buffer is in use.  Set to zero when system initialization
  807                          is complete on a full screech or when the dump has been
  808                          completed on a snap or SUA.
  809                          */
  810            2 FLAGS %WALGN,
  811                          /*K* FLAGS = UPPER LEVEL.  Various recovery flags.  Flags
  812                          are defined at the next structure level.
  813                          */
  814              %IF %MODE_FEP='0'B;
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          23   
  815              3 * BIT(1),           /* MAKE IT WORK ON THE HOST                     */
  816              %ENDIF;
  817              3 BADPPUT BIT(1),
  818                          /*K* FLAGS.BADPPUT = BIT(1).  Set if Physical Page Usage
  819                          Table (PPUT) was found to be inconsistent.
  820                          */
  821            2 SCREECHUTS UBIN %WORD32,
  822                          /*K* SCREECHUTS = VALUE-UTS.  The UTS at the time of entry
  823                          to the monitor screech routine.
  824                          */
  825            %IF MODE_FEP;
  826            %VLP_SCODE (FPTN=SCODE,LVL=2,STCLASS=STCLASS,LAST=NO);
  827                          /*K* SCODE.  Screech code generated by VLP_SCODE.
  828                          */
  829            %ELSE;
  830            2 SCODE,                /* IF DPS8                                      */
  831              3 ERRCODE BIT(36),    /* ERROR CODE                                   */
  832              3 DUMPBITS BIT(18),   /* DUMP BITS                                    */
  833            %ENDIF;
  834            2 MHJITPP UBIN %WORD16 %WALGN,
  835                          /*K* MHJITPP = VALUE-UBIN WORD.  Monitor HJIT physical
  836                          page.                                                     */
  837            2 CUN UBIN(16) CALIGNED,
  838                          /*K* CUN - Current user number on screeching CPU          */
  839            2 TSA$ PTR CALIGNED,
  840                          /*K* TSA$ - Pointer to TSA passed to GIR$SCREECH          */
  841            2 BADPPX UBIN(16) CALIGNED;
  842                          /*K* BADPPX - Index at which bad PPUT detected.           */
  843      %MEND;
  844
  845                          /*F* NAME: D_RV_USRDIR
  846                          .IBL D:RV_USRDIR
  847                          */
  848                          /*F* NAME: User Directory
  849
  850                          The User Dump Directory contains an entry for each
  851                          Host user that may be logged onto the system at
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          24   
  852                          the time of a call to Recovery.  There are
  853                          512 double word entries in this structure, which
  854                          is indexed by user number.
  855
  856                          The RV_USRDIR macro may be used to generate the
  857                          structure for the User Directory.
  858                          The NAME keyword may be used to supply a unique
  859                          label to this structure. Default is 'RV_USRDIR'.
  860                          The STCLASS keyword allows specification of the
  861                          storage class.  Default is STATIC.
  862
  863                          Each entry is a double-word
  864                          and contains the following fields:
  865                          */
  866      %MACRO RV_USRDIR (NAME=RV_USRDIR,
  867                      STCLASS=STATIC);
  868      DCL 1 NAME STCLASS DALIGNED,
  869            2 USER(0:511),
  870              3 DA UBIN(36),
  871                          /*K* DA = VALUE-UBIN(36).  Contains the Disk Address
  872                          of the first granule that contains the dump for this
  873                          user.  The Working Space Directory is in this granule.
  874                          If no portion of this user was dumped the
  875                          DA field is set to zero.  This field is used by
  876                          RCVR2 when converting the System Dump Area to a
  877                          keyed Dump file.
  878                          */
  879              3 DTRAP BIT(1) UNAL,
  880                          /*K* DTRAP = VALUE-BIT(1).  Set in IRR$RECOVER if Recovery
  881                          trapped while dumping this user.
  882                          */
  883              3 CFTRAP BIT(1) UNAL,
  884                          /*K* CFTRAP = VALUE-BIT(1).
  885                          Set if the RVF$CLSF routine ALTRETed.  Also set if
  886                          Recovery trapped while in RVF$CLSF for this user.
  887                          Note that if this bit is set because of an ALTRET
  888                          from RVF$CLSF, the RCVRTRAP area of the recovery
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          25   
  889                          buffer will not contain the RVF$CLSF environment.
  890                          */
  891              3 AJITRAP BIT(1) UNAL,
  892                          /*K* AJITRAP = VALUE-BIT(1). Set in GHOST1 if trapped in
  893                          AZA$LOGOFF while updating the accounting information for
  894                          this user.
  895                          */
  896              3 AJITUPD BIT(1) UNAL,
  897                          /*K* AJITUPD = VALUE-BIT(1).  Set in GHOST1 after updating
  898                          the accounting information for this user.  This bit is
  899                          used to prevent multiple updating of the accounting
  900                          information should the system crash while in GHOST1.
  901                          */
  902              3 RELSFD BIT(1) UNAL,
  903                          /*K* RELSFD = VALUE-BIT(1).  Set in GHOST1 after releasing
  904                          the Star-files for this user following a crash.  This bit
  905                     prevents multiple calls to M$RELSTARF for the same user should
  906                     the system crash while in GHOST1.
  907                     */
  908              3 RELSFT BIT(1) UNAL,
  909                          /*K* RELSFT = VALUE-BIT(1).  Set in GHOST1 on an ALTRET
  910                          from M$RELSTARF for this user.
  911                          */
  912              3 ASLT BIT(1) UNAL,
  913                          /*K* ASLT = VALUE-BIT(1).  Set in GHOST1 if trapped in
  914                          ASL Recovery while recovering the *I files.
  915                          */
  916              3 ASLD BIT(1) UNAL,
  917                          /*K* ASLD = VALUE-BIT(1).  Set in GHOST1 after calling
  918                          ASL Recovery for this user.  This bit prevents multiple
  919                          calls to ASL Recovery for this user should the system crash
  920                          while in GHOST1.
  921                          */
  922              3 PGTBL BIT(1) UNAL,
  923                          /*K* PGTBL = VALUE-BIT(1).  Set if the Page Table for this
  924                          user is bad (PGINMEM not set in the Page Table Flags or the
  925                          Real Page # is > real memory).
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          26   
  926                          */
  927              3 TYP UBIN(9)  UNAL,
  928                          /*K* TYP = VALUE-UBIN(9).  Contains a code indicating
  929                          the type of user that has been dumped.  The values for
  930                          this code are as follows:
  931
  932                          }  0   Current user on the Screeching CPU.
  933                            1   Current user on another CPU.
  934                            2   User with Master Function Count > 0.
  935                            3   All other users dumped for ALLUSR request.
  936                            4   User dumped for Snap request (not CUN).
  937                            5   User dumped because of a trap in recovery.
  938
  939
  940                          */
  941              3 SZ UBIN(18) UNAL;
  942                          /*K* SZ = VALUE-UBIN(18).  Contains the number of granules
  943                          in the dump for this user.
  944                          */
  945
  946      %MEND;
  947
  948
  949
  950
  951
  952
  953
  954                          /*F* NAME: D_RV_WSQD
  955                          .IBL D:RV_WSQD
  956                          */
  957                          /*F* NAME: Working Space Directory
  958
  959                          A Working Space Quarter Directory is written for
  960                          the Monitor WSQ, for each user WSQ
  961                          and for each Communications WSQ
  962                          that has been dumped to the System Area Dump.  This
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          27   
  963                          directory is then used by RCVR2 to convert the
  964                          System Dump Area to a keyed dump file.
  965
  966                          The directory for the Monitor or for a user is 1024 words
  967                          and is in the first record written for that WSQ (virtual
  968                          page 0).  The directory for a Communications
  969                          WSQ is a separate record that is 256 words long.
  970                          In either case the directory is simply a copy of
  971                          the Page Table for the WSQ with bit 19 set (a bit
  972                          reserved for software use) in the table entry for
  973                          each virtual page that has been dumped.
  974
  975                          The RV_WSQD macro may be used to generate the
  976                          structure of a Working Space Directory.  The NAME
  977                          keyword may be used to supply a unique label to
  978                          this structure.  Default is 'RV_WSQD'.  The
  979                          STCLASS keyword allows specification of the
  980                          storage class.  Default is 'STATIC'.
  981
  982                          Each entry in the directory contains the following:
  983                          */
  984      %MACRO RV_WSQD (NAME=RV_WSQD,
  985                    STCLASS=STATIC);
  986      DCL 1 NAME STCLASS DALIGNED,
  987            2 PG(0:1023),
  988              3 RPN UBIN(18) UNAL,  /* REAL PAGE NUMBER                             */
  989                          /*K* RPN = VALUE-UBIN(14).  Contains the number of
  990                          the real physical page that was allocated to the
  991                          virtual page at the time of entry to Recovery.
  992                          */
  993              3 SFLG BIT(10) UNAL,  /* SOFTWARE CONTROL FLAGS                       */
  994                          /*K* SFLG = VALUE-BIT(10).  Contains the Software
  995                          Control flags for this page.
  996                          */
  997              3 VLINK REDEF SFLG UBIN(10) UNAL, /* ALTERNATE DEFINITION             */
  998              3 Z2 BIT(2) UNAL,     /* MUST BE ZERO                                 */
  999              3 HFLG BIT(6) UNAL;   /* HARDWARE CONTROL BITS                        */
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          28   
 1000                          /*K* HFLG = VALUE-BIT(6).  Contains the Hardware
 1001                          Control flags for this page.
 1002                          */
 1003
 1004      %MEND;
 1005
 1006
 1007
 1008                          /*F* NAME: Dump File Name
 1009
 1010                          The keyed dump files are created by the RCVR2 ghost
 1011                          by converting a slot in the System Dump Area to a
 1012                          keyed file in the :SYSTAC account.  The file name
 1013                          is of the form :DFabc, where:
 1014
 1015                          a   is the 3-character monitor ID from the
 1016                                           PO Tape.
 1017
 1018                          b   is the 1-character boot count,
 1019                              which is incremented every time
 1020                                           the same PO Tape is booted.
 1021                                           Values are A-Z, a-z, 0-9.
 1022
 1023                          c   is the 3-digit Recovery count, which is
 1024                                           incremented on every call to
 1025                                           Recovery.  This count wraps
 1026                                           around after reaching 999.
 1027
 1028                          The RV_DFNAME macro may be used to generate
 1029                          a structure that will contain the dump file name.
 1030                          The NAME keyword may be used to supply a unique
 1031                          label to the structure.  Default is 'DF_NAME'.  The
 1032                          STCLASS keyword allows specification of the storage
 1033                          class.  Default is 'STATIC'.  There is no provision
 1034                          for initial values.
 1035                          */
 1036      %MACRO RV_DFNAME (NAME=DF_NAME,
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          29   
 1037                      STCLASS=STATIC);
 1038
 1039      DCL 1 NAME STCLASS DALIGNED,
 1040            2 L UBIN(9) UNAL,
 1041                          /*B* L = VALUE-UBIN(9).  This the length field,
 1042                          which should be set to 10.
 1043                          */
 1044            2 N1 CHAR(3) UNAL,
 1045                          /*B* N1 = CHAR(3).  This is to contain the fixed
 1046                          part of the dump file name and should be set to
 1047                          ':DF'.
 1048                          */
 1049            2 MONID,
 1050              3 VER CHAR(3) UNAL,
 1051                          /*B* MONID.VER = CHAR(3).  This is to contain the
 1052                          Monitor ID from the PO Tape, i.e. 'A00'.
 1053                          */
 1054              3 BOOTC CHAR(1) UNAL,
 1055                          /*B* MONID.BOOTC = CHAR(1).  This is to contain the
 1056                          boot count which is incremented each time the same
 1057                          PO Tape is booted.
 1058                          */
 1059            2 MONID4 REDEF MONID CHAR(4),
 1060            2 DUMPC CHAR(3) UNAL;
 1061                          /*B* DUMPC = CHAR(3).  This field is to contain
 1062                          the Screech count ID.
 1063                          */
 1064
 1065      %MEND;
 1066
 1067
 1068
 1069                          /*F* NAME: D_RV_DFKEY
 1070                          .IBL D:RV_DFKEY
 1071                          */
 1072                          /*F* NAME: DUMP_FILE_KEYS
 1073
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          30   
 1074                          The keys of the records in a dump file contain 8
 1075                          significant bytes.  The first byte contains the key
 1076                          length.  The remainder of the bytes contain a code
 1077                          that uniquely identifies the contents of the record.
 1078                          The elements of this key are as follows:
 1079
 1080
 1081                     }Type of Record   Byte 1    Byte 2    Byte 3    Byte 4    By 5-7
 1082                     }                 NODIDX     TYP       STYP      USR#      VP#
 1083                }--------------  --------  --------  --------  -------  -----------
 1084                }Node Directory    .000       0         0         0         0
 1085                }
 1086                }Copyright         .000       1         0         0         0
 1087                }  Record
 1088                }
 1089                }Recovery         nodidx      0         0         0         0
 1090                }  Buffer
 1091                }
 1092                }User             nodidx      0         1         0         0
 1093                }  Directory
 1094                }
 1095                }User's JITs      nodidx      0         2       User#       0
 1096                }
 1097                }Error Log        nodidx      0         3          0     Vir. pg#
 1098                }  Buffers
 1099                }
 1100                }Physical Memory  nodidx      1         0         0      Real Pg#
 1101                }
 1102                }Monitor WSQ      nodidx      2        Type      CPU#    Vir. pg#
 1103                }
 1104                }Communications   nodidx      3        WSQ#       0      Dir.
 1105                }  WSQ                                            1      Vir. pg#
 1106                }
 1107                }User WSQ         nodidx      4        Type     User#    Vir. pg#
 1108                }
 1109                }Comgroup         nodidx      5        WSQ#       0      Dir. VP#
 1110                }  WSQ                                            1      Data VP#
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          31   
 1111                }                                                 2      KQ_DSB
 1112                }
 1113                }MLCP             nodidx      6         0         0      channel#
 1114                }
 1115                The Monitor WSQ Type has the following meaning:
 1116                }  0   Screeching CPU
 1117                }  1   Reserved for use with multiprocessing systems
 1118
 1119                The User WSQ Type has the following meaning:
 1120                }  0   Current user on the Screeching CPU.
 1121                1   Current user on another CPU.
 1122                2   User with Master Function Count > 0.
 1123                3   All other users dumped for ALLUSR request.
 1124                4   User dumped for Snap request (not CUN).
 1125                5   User dumped because of a trap in recovery.
 1126
 1127                The RV_DFKEYS macro is used to generate the
 1128                structure for the dump file key.  The NAME
 1129                keyword may be used to assign a name to the
 1130                structure other than the default DF_KEY.
 1131                The STCLASS keyword may be used to set the storage
 1132                class to other than the default of STATIC.
 1133                */
 1134      %MACRO RV_DFKEY (NAME=DF_KEY,
 1135                       LVL=1,
 1136                       LAST=NIL,
 1137                       STCLASS=STATIC);
 1138      %IF TEXTCHAR(LAST)='NIL';
 1139           %IF LVL=1;
 1140                %LSET TERM=';';
 1141           %ELSE;
 1142                %LSET TERM=',';
 1143           %ENDIF;
 1144      %ELSE;
 1145           %LSET TERM=TEXTCHAR(LAST);
 1146      %ENDIF;
 1147      %IF LVL=1;
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          32   
 1148      DCL 1 NAME STCLASS DALIGNED,
 1149      %ELSE;
 1150              %LVL NAME DALIGNED,
 1151      %ENDIF;
 1152                %(LVL+1) L UBIN(9) UNAL,
 1153                %(LVL+1) K,
 1154                %(LVL+2) NODEIDX UBIN(9) UNAL,
 1155                %(LVL+2) TYP UBIN(9) UNAL,
 1156                %(LVL+2) STYP UBIN(9) UNAL,
 1157                %(LVL+2) USR# UBIN(9) UNAL,
 1158                %(LVL+2) VP# UBIN(27) UNAL %CHARTEXT(TERM)
 1159      %MEND;
 1160
 1161
 1162                          /*F* NAME: D_RV_NODEDIR
 1163                          .IBL D:RV_NODEDIR
 1164                          */
 1165                          /*F* NAME: Node Directory
 1166
 1167                          The node directory contains the names of all nodes
 1168                          contained in the dump file.  The node directory is
 1169                          the first record in the dump file, it's key being
 1170                          seven bytes of zero.  The first (zero'th) entry in
 1171                          the node name array is unused.  The index of each
 1172                          of the other entries in the array is used as the
 1173                          first byte of the key for all records in the dump
 1174                          file corresponding to that node.
 1175
 1176                          The RV_NODEDIR macro is used to generate the
 1177                          structure for the node directory.  The FPTN
 1178                          keyword may be used to assign a name to the
 1179                          structure other than the default RV_NODEDIR.  The
 1180                          STCLASS keyword may be used to set the storage
 1181                          class to other than the default of STATIC.
 1182
 1183                          The node directory contains the following:
 1184                          */
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          33   
 1185      %MACRO RV_NODEDIR (FPTN=RV_NODEDIR, /* NODE DIRECTORY                         */
 1186                         STCLASS=STATIC,
 1187                         N=10,
 1188                         NODENAME="' '*0",
 1189                         TYPE="0*0",
 1190                         CODE="0*0");
 1191      %LSET LISTDIR='0'B;
 1192      %LSET LISTEXP='1'B;
 1193      %LSET LISTCOM='0'B;
 1194      %LSET LISTSUB='1'B;
 1195      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
 1196      %IF (STR='STA') OR (STR='CON') OR (STR='EXT');
 1197      %LSET INIT=CHARTEXT(' INIT');
 1198      %LSET EINIT=CHARTEXT('');
 1199      %ELSE;
 1200      %LSET INIT=CHARTEXT('/*');
 1201      %LSET EINIT=CHARTEXT('*/');
 1202      %ENDIF;
 1203      DCL 1 FPTN STCLASS ALIGNED,
 1204            2 %CHARTEXT('N ') UBIN WORD %INIT(N)%EINIT,
 1205
 1206                          /*K* N = VALUE-UBIN(36).  Contains the number of
 1207                          entries in the node directory.  When the
 1208                          RV_NODEDIR macro is invoked this parameter will
 1209                          also determine the number of entries allocated in
 1210                          the node directory structure.
 1211                          */
 1212            2 NODE(0:N),
 1213
 1214                          /*K* NODE.  This is the arrayed item in the node
 1215                          directory.  Lower level items are NODENAME, TYPE
 1216                          and CODE.
 1217                          */
 1218              3 %CHARTEXT('NODENAME ') CHAR(8) %INIT('NULL',NODENAME)%EINIT,
 1219
 1220                          /*K* NODENAME = VALUE-CHAR(8).  The name of the
 1221                          node corresponding to this node index.
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          34   
 1222                          */
 1223              3 %CHARTEXT('TYPE ') UBIN BYTE UNAL %INIT(0,TYPE)%EINIT,
 1224
 1225                          /*K* TYPE = VALUE-UBIN BYTE.  The node type,
 1226                          either host or FEP.  The equates for this item are
 1227                          R_HOSTNODE# and R_FEPNODE# as defined in
 1228                          RV_DFSUBS.
 1229                          */
 1230              3 %CHARTEXT('CODE ') UBIN BYTE UNAL %INIT(0,CODE)%EINIT,
 1231
 1232                          /*K* CODE = VALUE-UBIN BYTE.  This item is not
 1233                          currently used.
 1234                          */
 1235              3 * UBIN HALF UNAL %INIT(0*0)%EINIT;
 1236      %MEND;
 1237
 1238
 1239
 1240
 1241
 1242      /*P* NAME: RV_PFNAME
 1243           PURPOSE: Generates a structure for the patch file name.
 1244      */
 1245      %MACRO RV_PFNAME (NAME=PF_NAME,
 1246                      STCLASS=STATIC);
 1247
 1248      DCL 1 NAME STCLASS DALIGNED,
 1249            2 L UBIN(9) UNAL,
 1250            2 N1 CHAR(3) UNAL,
 1251            2 MONID,
 1252              3 VER CHAR(3) UNAL,
 1253              3 BOOTC CHAR(1) UNAL;
 1254
 1255      %MEND;
 1256
 1257
 1258
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          35   
 1259
 1260
 1261
 1262      /*P* NAME: RV_BOOTID
 1263      */
 1264      %MACRO RV_BOOTID (NAME=RV_BOOTID,
 1265                      STCLASS=CONSTANT);
 1266
 1267      DCL 1 NAME STCLASS,
 1268            2 C(0:62) CHAR(1) UNAL INIT(
 1269              'A','B','C','D','E','F','G','H','I','J',
 1270              'K','L','M','N','O','P','Q','R','S','T',
 1271              'U','V','W','X','Y','Z','a','b','c','d',
 1272              'e','f','g','h','i','j','k','l','m','n',
 1273              'o','p','q','r','s','t','u','v','w','x',
 1274              'y','z','0','1','2','3','4','5','6','7',
 1275              '8','9','*');
 1276
 1277      %MEND;
 1278
 1279
 1280
 1281
 1282      /*P* NAME: GI_RCVR_EQU
 1283           PURPOSE:  Equates for LCP6 recovery
 1284      */
 1285
 1286      %MACRO GI_RCVR_EQU;
 1287
 1288      %EQU GI_RVBUF_LOC=%BITBIN('200'X); /* LOCATION OF RECOVERY BUFFER*/
 1289                                    /* IN LOW REAL MEMORY                           */
 1290      %EQU GI_BITMAP_SIZE=4096;     /* SIZE OF DUMP BITMAP IN BITS                  */
 1291      %EQU GI_PGS_PER_BIT=4;        /* PAGES PER BIT OF THE DUMP BITMAP             */
 1292
 1293                                    /* Message codes for RFEP dumps and             */
 1294                                    /* Snaps                                        */
 1295      %EQU GI_DUMP_RQST=1;          /* NA->FROG  Request to send dump               */
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          36   
 1296      %EQU GI_DUMP_GRANT=2;         /* FROG->NA  Request granted                    */
 1297      %EQU GI_DUMP_RVBUF=3;         /* NA->FROG  Recovery Buffer                    */
 1298      %EQU GI_DUMP_PAGE=4;          /* NA->FROG  Memory page                        */
 1299      %EQU GI_DUMP_ACK=5;           /* FROG->NA  Ack for page                       */
 1300      %EQU GI_DUMP_EOD=6;           /* NA->FROG  End of dump                        */
 1301      %EQU GI_DUMP_ABORT=7;         /* SLUG->FROG Abort dump                        */
 1302      %MEND;
 1303
 1304
 1305
 1306
 1307
 1308
 1309
 1310
 1311
 1312      /*P* NAME: RV_DFSUBS
 1313           PURPOSE:  Equates for Host recovery
 1314      */
 1315
 1316      %MACRO RV_DFSUBS;
 1317      %EQU R_DINFO#=0/*R_DINFO#*/;
 1318         %EQU R_BUFF#=0/*R_BUFF#*/;
 1319         %EQU R_USRD#=1/*R_USRDR#*/;
 1320         %EQU R_AJITS#=2/*R_AJITS#*/;
 1321         %EQU R_ERRLOG#=3/*R_ERRLOG#*/;
 1322         %EQU R_COPYRIGHT#=1/*R_COPYRIGHT#*/;
 1323      %EQU R_LRMEM#=1/*R_LRMEM#*/;
 1324      %EQU R_MWSQ#=2/*R_MWSQ#*/;
 1325         %EQU R_MCPU#=0/*R_MCPU#*/;
 1326         %EQU R_SCPU#=1/*R_SCPU#*/;
 1327      %EQU R_CWSQPGS#=3/*R_CWSQPGS#*/;
 1328         %EQU R_DIRECTORY#=0;
 1329         %EQU R_DATA#=1;
 1330      %EQU R_UWSQ#=4/*R_UWSQ#*/;
 1331         %EQU R_CU#=0/*R_CU#*/;
 1332         %EQU R_SCU#=1/*R_SCU#*/;
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          37   
 1333         %EQU R_IOUSR#=2/*R_IOUSR#*/;
 1334         %EQU R_OUSR#=3/*R_OUSR#*/;
 1335         %EQU R_SNAPU#=4/*R_SNAPU#*/;
 1336         %EQU R_TRAPU#=5/*R_TRAPU#*/;
 1337      %EQU R_CGPGS#=5/*R_CGPGS#*/;
 1338         %EQU R_CGDSB#=2;
 1339      %EQU R_MLCP#=6;
 1340      /* NODE TYPES IN NODE DIRECTORY */
 1341      %EQU R_HOSTNODE#=1;
 1342      %EQU R_FEPNODE#=2;
 1343
 1344      %MEND;
 1345                                    /* DONT BOTHER TO MACROIZE THIS ONE             */
 1346                               /* Number of dump files allowed on the system disk   */
 1347      %EQU RV_SYSDDUMP#=4/*RV_SYSDDUMP#*/;
 1348
 1349
 1350
 1351                /* THIS COMMENTARY IS TO BE EXTRACTED FOR THE SYSTEM SUPPORT MANUAL */
 1352
 1353                          /*F* NAME: CP-6_RECOVERY.
 1354
 1355                          TU
 1356                          RECOVERY OF SYSTEM FAILURES
 1357                          ---------------------------
 1358
 1359                          TF
 1360
 1361                          CP-6 initiates the automatic recovery process
 1362                          every time it detects a software or hardware
 1363                          failure that could have an adverse effect on
 1364                          the system.  The recovery procedure provides
 1365                          for preserving information relating to the
 1366                          failure, and when necessary, re-initialization
 1367                          of the operating system.
 1368
 1369                          There are three levels of automatic recovery
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          38   
 1370                          in CP-6, as follows:
 1371
 1372                             o  Screech - When it is determined that the operating
 1373                                system is too damaged to continue normal operations,
 1374                                a full recovery will ensue.  All users will be
 1375                                removed from the system and the monitor will be
 1376                                reinitialized.
 1377
 1378                             o  Single User Abort - If the system failure can be
 1379                                safely isolated to one user, that user is aborted
 1380                                and all others continue.  If an attempt to abort
 1381                                a single user produces a second failure, a full
 1382                                system recovery will be initiated.
 1383
 1384                             o  Snapshot Dump - When a potential software failure
 1385                                is detected, the operating system may initiate an
 1386                                automatic recovery to provide information for the
 1387                                Honeywell analyst.  No users are affected.
 1388
 1389                          Provision is also made for operator initiation
 1390                          of the recovery process.  The operator may wish to
 1391                          initiate a recovery, for example, when
 1392                          the system appears to be in a loop or when there is
 1393                          reason to suspect that the operating system is not
 1394                running properly.  Procedures for initiating the operator recovery
 1395                are described in detail in the CP-6 Operator's Manual.
 1396
 1397                TU
 1398
 1399                RECOVERY FUNCTIONS
 1400                ------------------
 1401
 1402                TF
 1403
 1404                The recovery routine executes independently of
 1405                all monitor services and functions.  It requires only that
 1406                the recovery routine in real memory be intact.
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          39   
 1407                The recovery routine performs the following functions:
 1408
 1409                o  Displays the cause of the failure and assigns an
 1410                identification code to the failure.
 1411
 1412                o  Takes a memory dump for later analysis.
 1413
 1414                When a full recovery has been initiated, the following
 1415                additional sequence of events then takes place:
 1416
 1417                o  Users are notified by the FEP that Host Recovery
 1418                is in progress.
 1419
 1420                o  The current accounting information for each user
 1421                is written to the System Dump Area.
 1422
 1423                o  All files are checked for consistency and, whenever
 1424                possible, user files are closed and saved so that
 1425                they are accessable to the user.
 1426
 1427                o  All input and output symbiont files are preserved.
 1428
 1429                o  Vital data from the running system is written to
 1430                the System Dump area.  This includes the Error Log
 1431                Buffers, the status of each FEP, and the number of
 1432                users currently allowed on the system.
 1433
 1434                o  A fresh copy of the monitor and the TIGR built tables
 1435                is read into memory from disk storage.  The previously
 1436                saved information is inserted into the refreshed copy
 1437                of CP-6, bringing it up to date.
 1438
 1439                o  Internal monitor tables are updated to reflect the
 1440                current SYSCON and CONTROL values.
 1441
 1442                o  The :ACCTLG is updated from the user accounting
 1443                data that has been preserved on the System Dump
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          40   
 1444                Area.
 1445
 1446                o  The SLUG System Ghost is initiated and the system
 1447                is up.
 1448
 1449                o  Batch jobs that allow RERUN that were in execution
 1450                at the time of the Recovery are restarted.
 1451
 1452           When functions cannot be performed, the omitted functions are noted on the
 1453           operators console.  If the functions are considered minor,
 1454           recovery continues.  If the failure is connected with
 1455           file operations, the file identification is noted and
 1456           recovery proceeds.
 1457
 1458           Certain monitor system tables are required to be intact for
 1459           successful memory dumping.  The recovery routine will
 1460           always attempt to re-initialize the system after being
 1461           entered for a full Screech, even if a valid dump
 1462           cannot be produced.  If the recovery process cannot be
 1463           successfully completed, the operator is instructed to
 1464           perform a disk boot in order to re-initialize the system.
 1465
 1466           A complete list of recovery error messages and the
 1467           procedures to be followed should recovery fail may
 1468           be found in the CP-6 Operator's Manual.
 1469
 1470           A listing of the CP-6 Recovery Codes is included as
 1471           Appendix C of this manual.
 1472
 1473           TU
 1474
 1475           THE SYSTEM DUMP AREA
 1476           --------------------
 1477           TF
 1478
 1479           The System Dump Area is created on the system pack
 1480           by TIGR when the PO Tape is booted.  The size of
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          41   
 1481           this area is specified by the DUMPSIZE command.
 1482           The System Dump Area is used by recovery to contain
 1483           the memory dump and to contain the information required to
 1484           re-initialize the system following a full Screech.
 1485
 1486
 1487           Recovery allows up to four recovery dumps to
 1488           exist on the System Dump Area at any one time.
 1489           One of these four dump slots and enough granules
 1490           to contain the data required to re-initialize
 1491           the system are always held in reserve for a
 1492           full Screech.  If three of the dump slots are
 1493           in use when a call is made to recovery for a
 1494           Snapshot Dump, a message informing the operator
 1495           that no space is available is output on the
 1496           operator console and the dump is skipped.  If
 1497           three of the dump slots are in use when a call
 1498           is made to recovery for a Single User Abort, the
 1499           Single User Abort is converted to a full Screech
 1500           and the last dump slot is used for the dump.
 1501
 1502           After the RCVR2 Ghost has run to convert the dump in the
 1503           System Dump Area to a keyed file both the dump
 1504           slot and the granules used for the system area
 1505           dump may be reused on the next call to recovery.
 1506
 1507           TU
 1508
 1509           THE RCVR2 GHOST
 1510           ---------------
 1511           TF
 1512
 1513           After the system has been re-initialized following a
 1514           full Screech, or following a Single User Abort or a
 1515           Snapshot Dump, the RCVR2 ghost is automatically
 1516           initiated to convert the dump on the System Dump Area
 1517           to a keyed file.
14:38 JUL 28 '97 IR_DATA_M.:E05SI                                          42   
 1518
 1519           In the event that the last dump slot or all
 1520           available granules in the System Dump Area are
 1521           used for a full Screech recovery dump, GHOST1
 1522           will cause the RCVR2 Ghost to be initiated to
 1523           convert the system area dumps to keyed files
 1524           prior to allowing any other users to log on to
 1525           the system.
 1526
 1527           A description of this dump file is included
 1528           as Appendix D of this manual.
 1529
 1530           */

