VERSION E05

PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:1    
        1        1        /*M* FLI$DISK - EFT I/O routines - disk I/O */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        FLI$DISK_READ_INIT: PROC( NBR_GRANS );
        9        9        /*F*  NAME: FLI$DISK_READ_INIT
       10       10              PURPOSE: Initialize for no-wait I/O.
       11       11         */
       12       12
       13       13    1   DCL NBR_GRANS SBIN ALIGNED;             /* Number of granules per buffer      */
       14       14
       15       15         /***
       16       16          *** INCLUDE
       17       17          ***/
       18       18
       19       19        %INCLUDE CP_6;
       20     5578        %INCLUDE FLI_DATA_R;
       21     6992
       22     6993         /***
       23     6994          *** ENTRY
       24     6995          ***/
       25     6996
       26     6997    1   DCL FLI$ALLOC_BUF ENTRY(2);
       27     6998
       28     6999         /***
       29     7000          *** AUTO
       30     7001          ***/
       31     7002
       32     7003    1   DCL I SBIN AUTO;
       33     7004    1   DCL BUF_ BIT(72) DALIGNED AUTO;
       34     7005
       35     7006        /****************************************/
       36     7007
       37     7008    2      DO I=1 TO MAX_IOS;
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:2    
       38     7009    2         CALL FLI$ALLOC_BUF( BUF_, NBR_GRANS );
       39     7010    2         OUTSTANDING_IO.BUF_(I) = BUF_;
       40     7011    2         OUTSTANDING_IO.NOT_READY(I) = '0'B;
       41     7012    2         END;
       42     7013
       43     7014    1      NBR_GRANS_PER_DISK_BUF = NBR_GRANS;
       44     7015    1      NBR_OUTSTANDING_IOS = 0;
       45     7016
       46     7017    1      RETURN;
       47     7018
       48     7019    1   END FLI$DISK_READ_INIT;
       49     7020        %EOD;

PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:3    
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_READ_INIT.

   Procedure FLI$DISK_READ_INIT requires 29 words for executable code.
   Procedure FLI$DISK_READ_INIT requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:4    

 Object Unit name= FLI$DISK_READ_INIT                         File name= FLI$DISK.:E05TOU
 UTS= JUL 29 '97 15:49:36.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none     6      6  FLI$DISK_READ_INIT
    3   Proc  even  none    29     35  FLI$DISK_READ_INIT
    4  RoData even  none     1      1  FLI$DISK_READ_INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        1  FLI$DISK_READ_INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 FLI$ALLOC_BUF
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:5    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     NBR_OUTSTANDING_IOS                   NBR_GRANS_PER_DISK_BUF                MAX_IOS
     OUTSTANDING_IO                        DPLIST$                               DPRESLIST$
     DISK_FILE_SPEC$                       SPECCHARS                             EFTWORD
     M$PRE_RET                             RET_CMDS_NAME                         B_VECTNIL
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:6    


        1        1        /*M* FLI$DISK - EFT I/O routines - disk I/O */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        FLI$DISK_READ_INIT: PROC( NBR_GRANS );

      8  3 000000   000000 700200 xent  FLI$DISK_RE* TSX0  ! X66_AUTO_1
         3 000001   000012 000001                    ZERO    10,1

        9        9        /*F*  NAME: FLI$DISK_READ_INIT
       10       10              PURPOSE: Initialize for no-wait I/O.
       11       11         */
       12       12
       13       13    1   DCL NBR_GRANS SBIN ALIGNED;             /* Number of granules per buffer      */
       14       14
       15       15         /***
       16       16          *** INCLUDE
       17       17          ***/
       18       18
       19       19        %INCLUDE CP_6;
       20     5578        %INCLUDE FLI_DATA_R;
       21     6992
       22     6993         /***
       23     6994          *** ENTRY
       24     6995          ***/
       25     6996
       26     6997    1   DCL FLI$ALLOC_BUF ENTRY(2);
       27     6998
       28     6999         /***
       29     7000          *** AUTO
       30     7001          ***/
       31     7002
       32     7003    1   DCL I SBIN AUTO;
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:7    
       33     7004    1   DCL BUF_ BIT(72) DALIGNED AUTO;
       34     7005
       35     7006        /****************************************/
       36     7007
       37     7008    2      DO I=1 TO MAX_IOS;

   7008  3 000002   000001 235007                    LDA     1,DL
         3 000003   200004 755100                    STA     I,,AUTO
         3 000004   000025 710000 3                  TRA     s:7012+1

       38     7009    2         CALL FLI$ALLOC_BUF( BUF_, NBR_GRANS );

   7009  3 000005   200003 236100                    LDQ     @NBR_GRANS,,AUTO
         3 000006   200011 756100                    STQ     BUF_+3,,AUTO
         3 000007   200006 630500                    EPPR0   BUF_,,AUTO
         3 000010   200010 450500                    STP0    BUF_+2,,AUTO
         3 000011   200010 630500                    EPPR0   BUF_+2,,AUTO
         3 000012   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000013   000000 701000 xent               TSX1    FLI$ALLOC_BUF
         3 000014   000000 011000                    NOP     0

       39     7010    2         OUTSTANDING_IO.BUF_(I) = BUF_;

   7010  3 000015   200004 236100                    LDQ     I,,AUTO
         3 000016   000006 402007                    MPY     6,DL
         3 000017   000000 620006                    EAX0    0,QL
         3 000020   200006 237100                    LDAQ    BUF_,,AUTO
         3 000021   000000 757010 xsym               STAQ    OUTSTANDING_IO,X0

       40     7011    2         OUTSTANDING_IO.NOT_READY(I) = '0'B;

   7011  3 000022   000000 236000 4                  LDQ     0
         3 000023   000002 356010 xsym               ANSQ    OUTSTANDING_IO+2,X0

       41     7012    2         END;

   7012  3 000024   200004 054100                    AOS     I,,AUTO
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:8    
         3 000025   200004 236100                    LDQ     I,,AUTO
         3 000026   000000 116000 xsym               CMPQ    MAX_IOS
         3 000027   000005 604400 3                  TMOZ    s:7009

       42     7013
       43     7014    1      NBR_GRANS_PER_DISK_BUF = NBR_GRANS;

   7014  3 000030   200003 470500                    LDP0    @NBR_GRANS,,AUTO
         3 000031   000000 235100                    LDA     0,,PR0
         3 000032   000000 755000 xsym               STA     NBR_GRANS_PER_DISK_BUF

       44     7015    1      NBR_OUTSTANDING_IOS = 0;

   7015  3 000033   000000 450000 xsym               STZ     NBR_OUTSTANDING_IOS

       45     7016
       46     7017    1      RETURN;

   7017  3 000034   000000 702200 xent               TSX2  ! X66_ARET
       47     7018
       48     7019    1   END FLI$DISK_READ_INIT;
       49     7020        %EOD;

PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:9    
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_READ_INIT.
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:10   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NBR_GRANS                 6-0-0/d BIT (72)    r     1 BUF_
     4-0-0/w SBIN        r     1 I                         *0-0-0/w SBIN        r     1 NBR_GRANS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/w SBIN        r     1 MAX_IOS
     0-0-0/w SBIN        r     1 NBR_GRANS_PER_DISK_BUF
     0-0-0/w SBIN        r     1 NBR_OUTSTANDING_IOS
     0-0-0/d STRC(216)   r     1 OUTSTANDING_IO(0:8191)
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$


   Procedure FLI$DISK_READ_INIT requires 29 words for executable code.
   Procedure FLI$DISK_READ_INIT requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:12   
          MINI XREF LISTING

BUF_
      7004**DCL      7009<>CALL     7010>>ASSIGN
DISK_CLOSE.SN_
      6189**DCL      6189--REDEF
DISK_CLOSE.UTL_
      6190**DCL      6190--REDEF
DISK_CLOSE.V.EXPIRE#
      6204**DCL      6204--REDEF
DISK_CLOSE.V.TYPE#
      6202**DCL      6202--REDEF
DISK_CLOSE.V.XTNSIZE#
      6199**DCL      6199--REDEF    6201--REDEF
DISK_FILE_SPEC.SPEC
      6554**DCL      6556--REDEF
DISK_FILE_SPEC.SPEC.START
      6555**DCL      6555--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6556**DCL      6556--REDEF
DISK_FILE_SPEC$
      6553**DCL      6554--IMP-PTR
DISK_OPEN.ACSVEH_
      6054**DCL      6055--REDEF
DISK_OPEN.ALTKEYS_
      6060**DCL      6061--REDEF    6061--REDEF
DISK_OPEN.HDR_
      6059**DCL      6060--REDEF
DISK_OPEN.TAB_
      6058**DCL      6059--REDEF
DISK_OPEN.UHL_
      6052**DCL      6053--REDEF    6053--REDEF
DISK_OPEN.V.FSN#
      6092**DCL      6092--REDEF    6092--REDEF
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:13   
DISK_OPEN.WSN_
      6058**DCL      6058--REDEF
DISK_READ.STATION_
      6116**DCL      6117--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6128**DCL      6128--REDEF
DISK_READ.V.INDX#
      6126**DCL      6126--REDEF
DISK_WRITE.STATION_
      6154**DCL      6154--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6161**DCL      6161--REDEF
DPLIST$
      6539**DCL      6551--IMP-PTR
DPRESLIST$
      6553**DCL      6553--IMP-PTR
EFTWORD
      6674**DCL      6674--REDEF
FLI$ALLOC_BUF
      6997**DCL-ENT  7009--CALL
FPT_EXIT.V.STEPCC#
      5979**DCL      5979--REDEF
I
      7003**DCL      7008<<DOINDEX  7010>>ASSIGN   7011>>ASSIGN
MAX_IOS
      6516**DCL      7008>>DOINDEX
NBR_GRANS
        13**DCL         8--PROC     7009<>CALL     7014>>ASSIGN
NBR_GRANS_PER_DISK_BUF
      6511**DCL      7014<<ASSIGN
NBR_OUTSTANDING_IOS
      6510**DCL      7015<<ASSIGN
OUTSTANDING_IO.BUF_
      6516**DCL      7010<<ASSIGN
OUTSTANDING_IO.NOT_READY
      6517**DCL      7011<<ASSIGN
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:14   
PRE_RET_CLOSE.SN_
      6917**DCL      6917--REDEF
PRE_RET_CLOSE.UTL_
      6918**DCL      6918--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6932**DCL      6932--REDEF
PRE_RET_CLOSE.V.TYPE#
      6930**DCL      6930--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6927**DCL      6927--REDEF    6929--REDEF
PRE_RET_OPEN.ACSVEH_
      6852**DCL      6853--REDEF
PRE_RET_OPEN.ALTKEYS_
      6858**DCL      6859--REDEF    6859--REDEF
PRE_RET_OPEN.HDR_
      6857**DCL      6858--REDEF
PRE_RET_OPEN.TAB_
      6856**DCL      6857--REDEF
PRE_RET_OPEN.UHL_
      6850**DCL      6851--REDEF    6851--REDEF
PRE_RET_OPEN.V.FSN#
      6890**DCL      6890--REDEF    6890--REDEF
PRE_RET_OPEN.WSN_
      6856**DCL      6856--REDEF
PRE_RET_READ.STATION_
      6707**DCL      6708--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6719**DCL      6719--REDEF
PRE_RET_READ.V.INDX#
      6717**DCL      6717--REDEF
PRE_RET_WRITE.STATION_
      6745**DCL      6745--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6752**DCL      6752--REDEF
RET_CMDS_NAME.L#
      6961**DCL      6961--IMP-SIZ
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:15   
SNVECLIST$
      6493**DCL      6493--IMP-PTR
SPEC.START
      6557**DCL      6558--REDEF
SPEC.STOP
      6558**DCL      6559--REDEF
SPECCHARS
      6557**DCL      6557--REDEF
TAPE_CLOSE.SN_
      6410**DCL      6410--REDEF
TAPE_CLOSE.UTL_
      6411**DCL      6411--REDEF
TAPE_CLOSE.V.EXPIRE#
      6425**DCL      6425--REDEF
TAPE_CLOSE.V.TYPE#
      6423**DCL      6423--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6420**DCL      6420--REDEF    6422--REDEF
TAPE_DCBLIST$
      5966**DCL      5966--IMP-PTR
TAPE_OPEN.ACSVEH_
      6275**DCL      6276--REDEF
TAPE_OPEN.ALTKEYS_
      6281**DCL      6282--REDEF    6282--REDEF
TAPE_OPEN.HDR_
      6280**DCL      6281--REDEF
TAPE_OPEN.TAB_
      6279**DCL      6280--REDEF
TAPE_OPEN.UHL_
      6273**DCL      6274--REDEF    6274--REDEF
TAPE_OPEN.V.FSN#
      6313**DCL      6313--REDEF    6313--REDEF
TAPE_OPEN.WSN_
      6279**DCL      6279--REDEF
TAPE_READ.STATION_
      6337**DCL      6338--REDEF
PL6.E3A0      #001=FLI$DISK_READ_INIT File=FLI$DISK.:E05TSI                      TUE 07/29/97 15:49 Page:16   
TAPE_READ.V.DVBYTE.REREAD#
      6349**DCL      6349--REDEF
TAPE_READ.V.INDX#
      6347**DCL      6347--REDEF
TAPE_WRITE.STATION_
      6375**DCL      6375--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6382**DCL      6382--REDEF
TVECTOR.W2
      6506**DCL      6507--REDEF

PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:17   
       50        1        /*T***********************************************************/
       51        2        /*T*                                                         */
       52        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       53        4        /*T*                                                         */
       54        5        /*T***********************************************************/
       55        6        FLI$DISK_READ_FILE_INIT: PROC( NBR_GRANS_TO_READ );
       56        7        /*F*  NAME: FLI$DISK_READ_FILE_INIT
       57        8              PURPOSE: Initialize for reading new file.
       58        9         */
       59       10
       60       11    1   DCL NBR_GRANS_TO_READ SBIN ALIGNED;     /* Number of grans in file            */
       61       12
       62       13         /***
       63       14          *** INCLUDE
       64       15          ***/
       65       16
       66       17        %INCLUDE CP_6;
       67     5576        %INCLUDE FLI_DATA_R;
       68     6990
       69     6991         /***
       70     6992          *** AUTO
       71     6993          ***/
       72     6994
       73     6995    1   DCL I SBIN AUTO;
       74     6996
       75     6997         /***
       76     6998          *** FPT
       77     6999          ***/
       78     7000
       79     7001        %FPT_CHECK( FPTN=CHECK_IOS );
       80     7015
       81     7016        /****************************************/
       82     7017
       83     7018         /***
       84     7019          *** Wait for all I/Os to complete.
       85     7020          ***/
       86     7021
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:18   
       87     7022    1      IF NBR_OUTSTANDING_IOS > 0
       88     7023    2       THEN DO;
       89     7024    3         DO I=1 TO MAX_IOS;
       90     7025    3            IF OUTSTANDING_IO.NOT_READY(I)
       91     7026    4             THEN DO;
       92     7027    4               CHECK_IOS.V.DCB# = OUTSTANDING_IO.DCB#(I);
       93     7028    4               CALL M$CHECK( CHECK_IOS )
       94     7029    5                WHENALTRETURN DO;
       95     7030                                                /* Don't care about these I/Os anyway */
       96     7031    5                  END;
       97     7032    4               IF OUTSTANDING_IO.NOT_READY(I)
       98     7033    4                THEN CALL M$XXX;           /* Must be finished now               */
       99     7034    4               END;
      100     7035    3            END;
      101     7036    2         IF NBR_OUTSTANDING_IOS > 0
      102     7037    2          THEN CALL M$XXX;                 /* None should be outstanding         */
      103     7038    2         END;
      104     7039
      105     7040         /***
      106     7041          *** Reset each entry.
      107     7042          ***/
      108     7043
      109     7044    2      DO I=1 TO MAX_IOS;
      110     7045    2         IF OUTSTANDING_IO.NOT_READY(I)
      111     7046    2          THEN CALL M$XXX;                 /* All should be ready                */
      112     7047    2         OUTSTANDING_IO.NOT_READY(I) = '0'B;
      113     7048    2         OUTSTANDING_IO.RELEASED(I) = '0'B;
      114     7049    2         OUTSTANDING_IO.ERR(I) = '0'B;
      115     7050    2         OUTSTANDING_IO.NEXT_IX(I) = I - 1; /* Link together (free)              */
      116     7051    2         OUTSTANDING_IO.ARS(I) = 0;
      117     7052    2         END;
      118     7053                                           /* 1 is end of list; its NEXT_IX will be 0 */
      119     7054
      120     7055    1      LAST_FREE_IX = MAX_IOS;              /* All are currently free             */
      121     7056
      122     7057    1      LAST_USED_IX = 0;                    /* None used                          */
      123     7058    1      FIRST_USED_IX = 0;
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:19   
      124     7059
      125     7060    1      NBR_OUTSTANDING_IOS = 0;
      126     7061    1      USED_BUF_ERR = '0'B;
      127     7062
      128     7063    1      NBR_GRANS_REMAINING = NBR_GRANS_TO_READ;
      129     7064
      130     7065    1      RETURN;
      131     7066
      132     7067    1   END FLI$DISK_READ_FILE_INIT;
      133     7068        %EOD;

PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:20   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_READ_FILE_INIT.

   Procedure FLI$DISK_READ_FILE_INIT requires 72 words for executable code.
   Procedure FLI$DISK_READ_FILE_INIT requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:21   

 Object Unit name= FLI$DISK_READ_FILE_INIT                    File name= FLI$DISK.:E05TOU
 UTS= JUL 29 '97 15:49:54.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none    10     12  FLI$DISK_READ_FILE_INIT
    3   Proc  even  none    72    110  FLI$DISK_READ_FILE_INIT
    4  RoData even  none     2      2  FLI$DISK_READ_FILE_INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        1  FLI$DISK_READ_FILE_INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:22   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     NBR_OUTSTANDING_IOS                   LAST_FREE_IX                          LAST_USED_IX
     FIRST_USED_IX                         USED_BUF_ERR                          NBR_GRANS_REMAINING
     MAX_IOS                               OUTSTANDING_IO                        DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     EFTWORD                               M$PRE_RET                             RET_CMDS_NAME

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:23   


       50        1        /*T***********************************************************/
       51        2        /*T*                                                         */
       52        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       53        4        /*T*                                                         */
       54        5        /*T***********************************************************/
       55        6        FLI$DISK_READ_FILE_INIT: PROC( NBR_GRANS_TO_READ );

      6  3 000000   000000 700200 xent  FLI$DISK_RE* TSX0  ! X66_AUTO_1
         3 000001   000006 000001                    ZERO    6,1

       56        7        /*F*  NAME: FLI$DISK_READ_FILE_INIT
       57        8              PURPOSE: Initialize for reading new file.
       58        9         */
       59       10
       60       11    1   DCL NBR_GRANS_TO_READ SBIN ALIGNED;     /* Number of grans in file            */
       61       12
       62       13         /***
       63       14          *** INCLUDE
       64       15          ***/
       65       16
       66       17        %INCLUDE CP_6;
       67     5576        %INCLUDE FLI_DATA_R;
       68     6990
       69     6991         /***
       70     6992          *** AUTO
       71     6993          ***/
       72     6994
       73     6995    1   DCL I SBIN AUTO;
       74     6996
       75     6997         /***
       76     6998          *** FPT
       77     6999          ***/
       78     7000
       79     7001        %FPT_CHECK( FPTN=CHECK_IOS );
       80     7015
       81     7016        /****************************************/
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:24   
       82     7017
       83     7018         /***
       84     7019          *** Wait for all I/Os to complete.
       85     7020          ***/
       86     7021
       87     7022    1      IF NBR_OUTSTANDING_IOS > 0

   7022  3 000002   000000 235000 xsym               LDA     NBR_OUTSTANDING_IOS
         3 000003   000044 604400 3                  TMOZ    s:7044

       88     7023    2       THEN DO;

       89     7024    3         DO I=1 TO MAX_IOS;

   7024  3 000004   000001 236007                    LDQ     1,DL
         3 000005   200004 756100                    STQ     I,,AUTO
         3 000006   000035 710000 3                  TRA     s:7035+1

       90     7025    3            IF OUTSTANDING_IO.NOT_READY(I)

   7025  3 000007   200004 236100                    LDQ     I,,AUTO
         3 000010   000006 402007                    MPY     6,DL
         3 000011   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000012   000001 316007                    CANQ    1,DL
         3 000013   000034 600000 3                  TZE     s:7035

       91     7026    4             THEN DO;

       92     7027    4               CHECK_IOS.V.DCB# = OUTSTANDING_IO.DCB#(I);

   7027  3 000014   200004 236100                    LDQ     I,,AUTO
         3 000015   000006 402007                    MPY     6,DL
         3 000016   000002 220006 xsym               LDX0    OUTSTANDING_IO+2,QL
         3 000017   000010 740000 2                  STX0    CHECK_IOS+2

       93     7028    4               CALL M$CHECK( CHECK_IOS )

PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:25   
   7028  3 000020   000006 630400 2                  EPPR0   CHECK_IOS
         3 000021   450002 713400                    CLIMB   alt,+20482
         3 000022   400000 401760                    pmme    nvectors=1
         3 000023   000025 702000 3                  TSX2    s:7032
         3 000024   000025 710000 3                  TRA     s:7032

       94     7029    5                WHENALTRETURN DO;

       95     7030                                                /* Don't care about these I/Os anyway */
       96     7031    5                  END;

       97     7032    4               IF OUTSTANDING_IO.NOT_READY(I)

   7032  3 000025   200004 236100                    LDQ     I,,AUTO
         3 000026   000006 402007                    MPY     6,DL
         3 000027   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000030   000001 316007                    CANQ    1,DL
         3 000031   000034 600000 3                  TZE     s:7035

       98     7033    4                THEN CALL M$XXX;           /* Must be finished now               */

   7033  3 000032   000003 713400                    CLIMB   3
         3 000033   000000 401760                    pmme    nvectors=0

       99     7034    4               END;

      100     7035    3            END;

   7035  3 000034   200004 054100                    AOS     I,,AUTO
         3 000035   200004 236100                    LDQ     I,,AUTO
         3 000036   000000 116000 xsym               CMPQ    MAX_IOS
         3 000037   000007 604400 3                  TMOZ    s:7025

      101     7036    2         IF NBR_OUTSTANDING_IOS > 0

   7036  3 000040   000000 235000 xsym               LDA     NBR_OUTSTANDING_IOS
         3 000041   000044 604400 3                  TMOZ    s:7044
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:26   

      102     7037    2          THEN CALL M$XXX;                 /* None should be outstanding         */

   7037  3 000042   000003 713400                    CLIMB   3
         3 000043   000000 401760                    pmme    nvectors=0

      103     7038    2         END;

      104     7039
      105     7040         /***
      106     7041          *** Reset each entry.
      107     7042          ***/
      108     7043
      109     7044    2      DO I=1 TO MAX_IOS;

   7044  3 000044   000001 235007                    LDA     1,DL
         3 000045   200004 755100                    STA     I,,AUTO
         3 000046   000073 710000 3                  TRA     s:7052+1

      110     7045    2         IF OUTSTANDING_IO.NOT_READY(I)

   7045  3 000047   200004 236100                    LDQ     I,,AUTO
         3 000050   000006 402007                    MPY     6,DL
         3 000051   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000052   000001 316007                    CANQ    1,DL
         3 000053   000056 600000 3                  TZE     s:7047

      111     7046    2          THEN CALL M$XXX;                 /* All should be ready                */

   7046  3 000054   000003 713400                    CLIMB   3
         3 000055   000000 401760                    pmme    nvectors=0

      112     7047    2         OUTSTANDING_IO.NOT_READY(I) = '0'B;

   7047  3 000056   200004 236100                    LDQ     I,,AUTO
         3 000057   000006 402007                    MPY     6,DL
         3 000060   000000 620006                    EAX0    0,QL
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:27   
         3 000061   000000 236000 4                  LDQ     0
         3 000062   000002 356010 xsym               ANSQ    OUTSTANDING_IO+2,X0

      113     7048    2         OUTSTANDING_IO.RELEASED(I) = '0'B;

   7048  3 000063   000001 236000 4                  LDQ     1
         3 000064   000002 356010 xsym               ANSQ    OUTSTANDING_IO+2,X0

      114     7049    2         OUTSTANDING_IO.ERR(I) = '0'B;

   7049  3 000065   000003 450010 xsym               STZ     OUTSTANDING_IO+3,X0

      115     7050    2         OUTSTANDING_IO.NEXT_IX(I) = I - 1; /* Link together (free)              */

   7050  3 000066   200004 235100                    LDA     I,,AUTO
         3 000067   000001 135007                    SBLA    1,DL
         3 000070   000004 755010 xsym               STA     OUTSTANDING_IO+4,X0

      116     7051    2         OUTSTANDING_IO.ARS(I) = 0;

   7051  3 000071   000005 450010 xsym               STZ     OUTSTANDING_IO+5,X0

      117     7052    2         END;

   7052  3 000072   200004 054100                    AOS     I,,AUTO
         3 000073   200004 236100                    LDQ     I,,AUTO
         3 000074   000000 116000 xsym               CMPQ    MAX_IOS
         3 000075   000047 604400 3                  TMOZ    s:7045

      118     7053                                           /* 1 is end of list; its NEXT_IX will be 0 */
      119     7054
      120     7055    1      LAST_FREE_IX = MAX_IOS;              /* All are currently free             */

   7055  3 000076   000000 235000 xsym               LDA     MAX_IOS
         3 000077   000000 755000 xsym               STA     LAST_FREE_IX

      121     7056
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:28   
      122     7057    1      LAST_USED_IX = 0;                    /* None used                          */

   7057  3 000100   000000 450000 xsym               STZ     LAST_USED_IX

      123     7058    1      FIRST_USED_IX = 0;

   7058  3 000101   000000 450000 xsym               STZ     FIRST_USED_IX

      124     7059
      125     7060    1      NBR_OUTSTANDING_IOS = 0;

   7060  3 000102   000000 450000 xsym               STZ     NBR_OUTSTANDING_IOS

      126     7061    1      USED_BUF_ERR = '0'B;

   7061  3 000103   000000 450000 xsym               STZ     USED_BUF_ERR

      127     7062
      128     7063    1      NBR_GRANS_REMAINING = NBR_GRANS_TO_READ;

   7063  3 000104   200003 470500                    LDP0    @NBR_GRANS_TO_READ,,AUTO
         3 000105   000000 235100                    LDA     0,,PR0
         3 000106   000000 755000 xsym               STA     NBR_GRANS_REMAINING

      129     7064
      130     7065    1      RETURN;

   7065  3 000107   000000 702200 xent               TSX2  ! X66_ARET
      131     7066
      132     7067    1   END FLI$DISK_READ_FILE_INIT;
      133     7068        %EOD;

PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:29   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_READ_FILE_INIT.
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:30   

 **** Variables and constants ****

  ****  Section 002  Data  FLI$DISK_READ_FILE_INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(144)   r     1 CHECK_IOS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NBR_GRANS_TO_READ         4-0-0/w SBIN        r     1 I
    *0-0-0/w SBIN        r     1 NBR_GRANS_TO_READ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/w SBIN        r     1 FIRST_USED_IX
     0-0-0/w SBIN        r     1 LAST_FREE_IX               0-0-0/w SBIN        r     1 LAST_USED_IX
     0-0-0/w SBIN        r     1 MAX_IOS                    0-0-0/w SBIN        r     1 NBR_GRANS_REMAINING
     0-0-0/w SBIN        r     1 NBR_OUTSTANDING_IOS
     0-0-0/d STRC(216)   r     1 OUTSTANDING_IO(0:8191)
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$              0-0-0/b BIT         r     1 USED_BUF_ERR


   Procedure FLI$DISK_READ_FILE_INIT requires 72 words for executable code.
   Procedure FLI$DISK_READ_FILE_INIT requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:32   
          MINI XREF LISTING

CHECK_IOS
      7012**DCL      7028<>CALL
CHECK_IOS.V
      7012**DCL      7012--DCLINIT
CHECK_IOS.V.DCB#
      7012**DCL      7027<<ASSIGN
DISK_CLOSE.SN_
      6187**DCL      6187--REDEF
DISK_CLOSE.UTL_
      6188**DCL      6188--REDEF
DISK_CLOSE.V.EXPIRE#
      6202**DCL      6202--REDEF
DISK_CLOSE.V.TYPE#
      6200**DCL      6200--REDEF
DISK_CLOSE.V.XTNSIZE#
      6197**DCL      6197--REDEF    6199--REDEF
DISK_FILE_SPEC.SPEC
      6552**DCL      6554--REDEF
DISK_FILE_SPEC.SPEC.START
      6553**DCL      6553--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6554**DCL      6554--REDEF
DISK_FILE_SPEC$
      6551**DCL      6552--IMP-PTR
DISK_OPEN.ACSVEH_
      6052**DCL      6053--REDEF
DISK_OPEN.ALTKEYS_
      6058**DCL      6059--REDEF    6059--REDEF
DISK_OPEN.HDR_
      6057**DCL      6058--REDEF
DISK_OPEN.TAB_
      6056**DCL      6057--REDEF
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:33   
DISK_OPEN.UHL_
      6050**DCL      6051--REDEF    6051--REDEF
DISK_OPEN.V.FSN#
      6090**DCL      6090--REDEF    6090--REDEF
DISK_OPEN.WSN_
      6056**DCL      6056--REDEF
DISK_READ.STATION_
      6114**DCL      6115--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6126**DCL      6126--REDEF
DISK_READ.V.INDX#
      6124**DCL      6124--REDEF
DISK_WRITE.STATION_
      6152**DCL      6152--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6159**DCL      6159--REDEF
DPLIST$
      6537**DCL      6549--IMP-PTR
DPRESLIST$
      6551**DCL      6551--IMP-PTR
EFTWORD
      6672**DCL      6672--REDEF
FIRST_USED_IX
      6508**DCL      7058<<ASSIGN
FPT_EXIT.V.STEPCC#
      5977**DCL      5977--REDEF
I
      6995**DCL      7024<<DOINDEX  7025>>IF       7027>>ASSIGN   7032>>IF       7044<<DOINDEX  7045>>IF
      7047>>ASSIGN   7048>>ASSIGN   7049>>ASSIGN   7050>>ASSIGN   7050>>ASSIGN   7051>>ASSIGN
LAST_FREE_IX
      6508**DCL      7055<<ASSIGN
LAST_USED_IX
      6508**DCL      7057<<ASSIGN
M$CHECK
      5506**DCL-ENT  7028--CALL
M$XXX
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:34   
      5516**DCL-ENT  7033--CALL     7037--CALL     7046--CALL
MAX_IOS
      6514**DCL      7024>>DOINDEX  7044>>DOINDEX  7055>>ASSIGN
NBR_GRANS_REMAINING
      6509**DCL      7063<<ASSIGN
NBR_GRANS_TO_READ
        11**DCL         6--PROC     7063>>ASSIGN
NBR_OUTSTANDING_IOS
      6508**DCL      7022>>IF       7036>>IF       7060<<ASSIGN
OUTSTANDING_IO.ARS
      6515**DCL      7051<<ASSIGN
OUTSTANDING_IO.DCB#
      6514**DCL      7027>>ASSIGN
OUTSTANDING_IO.ERR
      6515**DCL      7049<<ASSIGN
OUTSTANDING_IO.NEXT_IX
      6515**DCL      7050<<ASSIGN
OUTSTANDING_IO.NOT_READY
      6515**DCL      7025>>IF       7032>>IF       7045>>IF       7047<<ASSIGN
OUTSTANDING_IO.RELEASED
      6514**DCL      7048<<ASSIGN
PRE_RET_CLOSE.SN_
      6915**DCL      6915--REDEF
PRE_RET_CLOSE.UTL_
      6916**DCL      6916--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6930**DCL      6930--REDEF
PRE_RET_CLOSE.V.TYPE#
      6928**DCL      6928--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6925**DCL      6925--REDEF    6927--REDEF
PRE_RET_OPEN.ACSVEH_
      6850**DCL      6851--REDEF
PRE_RET_OPEN.ALTKEYS_
      6856**DCL      6857--REDEF    6857--REDEF
PRE_RET_OPEN.HDR_
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:35   
      6855**DCL      6856--REDEF
PRE_RET_OPEN.TAB_
      6854**DCL      6855--REDEF
PRE_RET_OPEN.UHL_
      6848**DCL      6849--REDEF    6849--REDEF
PRE_RET_OPEN.V.FSN#
      6888**DCL      6888--REDEF    6888--REDEF
PRE_RET_OPEN.WSN_
      6854**DCL      6854--REDEF
PRE_RET_READ.STATION_
      6705**DCL      6706--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6717**DCL      6717--REDEF
PRE_RET_READ.V.INDX#
      6715**DCL      6715--REDEF
PRE_RET_WRITE.STATION_
      6743**DCL      6743--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6750**DCL      6750--REDEF
RET_CMDS_NAME.L#
      6959**DCL      6959--IMP-SIZ
SNVECLIST$
      6491**DCL      6491--IMP-PTR
SPEC.START
      6555**DCL      6556--REDEF
SPEC.STOP
      6556**DCL      6557--REDEF
SPECCHARS
      6555**DCL      6555--REDEF
TAPE_CLOSE.SN_
      6408**DCL      6408--REDEF
TAPE_CLOSE.UTL_
      6409**DCL      6409--REDEF
TAPE_CLOSE.V.EXPIRE#
      6423**DCL      6423--REDEF
TAPE_CLOSE.V.TYPE#
PL6.E3A0      #002=FLI$DISK_READ_FILE_INIT File=FLI$DISK.:E05TSI                 TUE 07/29/97 15:49 Page:36   
      6421**DCL      6421--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6418**DCL      6418--REDEF    6420--REDEF
TAPE_DCBLIST$
      5964**DCL      5964--IMP-PTR
TAPE_OPEN.ACSVEH_
      6273**DCL      6274--REDEF
TAPE_OPEN.ALTKEYS_
      6279**DCL      6280--REDEF    6280--REDEF
TAPE_OPEN.HDR_
      6278**DCL      6279--REDEF
TAPE_OPEN.TAB_
      6277**DCL      6278--REDEF
TAPE_OPEN.UHL_
      6271**DCL      6272--REDEF    6272--REDEF
TAPE_OPEN.V.FSN#
      6311**DCL      6311--REDEF    6311--REDEF
TAPE_OPEN.WSN_
      6277**DCL      6277--REDEF
TAPE_READ.STATION_
      6335**DCL      6336--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6347**DCL      6347--REDEF
TAPE_READ.V.INDX#
      6345**DCL      6345--REDEF
TAPE_WRITE.STATION_
      6373**DCL      6373--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6380**DCL      6380--REDEF
TVECTOR.W2
      6504**DCL      6505--REDEF
USED_BUF_ERR
      6509**DCL      7061<<ASSIGN

PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:37   
      134        1        /*T***********************************************************/
      135        2        /*T*                                                         */
      136        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      137        4        /*T*                                                         */
      138        5        /*T***********************************************************/
      139        6        FLI$DISK_WRITE_FILE_INIT: PROC;
      140        7        /*F*  NAME: FLI$DISK_WRITE_FILE_INIT
      141        8              PURPOSE: Initialization for disk writes.
      142        9         */
      143       10
      144       11         /***
      145       12          *** INCLUDE
      146       13          ***/
      147       14
      148       15        %INCLUDE CP_6;
      149     5574        %INCLUDE FLI_DATA_R;
      150     6988
      151     6989         /***
      152     6990          *** ENTRY
      153     6991          ***/
      154     6992
      155     6993    1   DCL FLI$RPT_ERR ENTRY(5);
      156     6994
      157     6995        /****************************************/
      158     6996
      159     6997    1      RELEASED_BUF_ERR = '0'B;
      160     6998    1      NBR_OUTSTANDING_IOS = 0;
      161     6999    1      RETURN;
      162     7000
      163     7001    1   END FLI$DISK_WRITE_FILE_INIT;
      164     7002        %EOD;

PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:38   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_WRITE_FILE_INIT.

   Procedure FLI$DISK_WRITE_FILE_INIT requires 5 words for executable code.
   Procedure FLI$DISK_WRITE_FILE_INIT requires 4 words of local(AUTO) storage.

PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:39   

 Object Unit name= FLI$DISK_WRITE_FILE_INIT                   File name= FLI$DISK.:E05TOU
 UTS= JUL 29 '97 15:50:14.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none     6      6  FLI$DISK_WRITE_FILE_INIT
    3   Proc  even  none     5      5  FLI$DISK_WRITE_FILE_INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  FLI$DISK_WRITE_FILE_INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     NBR_OUTSTANDING_IOS                   RELEASED_BUF_ERR                      DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     EFTWORD                               M$PRE_RET                             RET_CMDS_NAME
PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:40   


      134        1        /*T***********************************************************/
      135        2        /*T*                                                         */
      136        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      137        4        /*T*                                                         */
      138        5        /*T***********************************************************/
      139        6        FLI$DISK_WRITE_FILE_INIT: PROC;

      6  3 000000   000000 700200 xent  FLI$DISK_WR* TSX0  ! X66_AUTO_0
         3 000001   000004 000000                    ZERO    4,0

      140        7        /*F*  NAME: FLI$DISK_WRITE_FILE_INIT
      141        8              PURPOSE: Initialization for disk writes.
      142        9         */
      143       10
      144       11         /***
      145       12          *** INCLUDE
      146       13          ***/
      147       14
      148       15        %INCLUDE CP_6;
      149     5574        %INCLUDE FLI_DATA_R;
      150     6988
      151     6989         /***
      152     6990          *** ENTRY
      153     6991          ***/
      154     6992
      155     6993    1   DCL FLI$RPT_ERR ENTRY(5);
      156     6994
      157     6995        /****************************************/
      158     6996
      159     6997    1      RELEASED_BUF_ERR = '0'B;

   6997  3 000002   000000 450000 xsym               STZ     RELEASED_BUF_ERR

      160     6998    1      NBR_OUTSTANDING_IOS = 0;

   6998  3 000003   000000 450000 xsym               STZ     NBR_OUTSTANDING_IOS
PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:41   

      161     6999    1      RETURN;

   6999  3 000004   000000 702200 xent               TSX2  ! X66_ARET
      162     7000
      163     7001    1   END FLI$DISK_WRITE_FILE_INIT;
      164     7002        %EOD;

PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:42   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_WRITE_FILE_INIT.
PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:43   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/w SBIN        r     1 NBR_OUTSTANDING_IOS
     0-0-0/b BIT         r     1 RELEASED_BUF_ERR           0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w PTR         r     1 SNVECLIST$                 0-0-0/w PTR         r     1 TAPE_DCBLIST$


   Procedure FLI$DISK_WRITE_FILE_INIT requires 5 words for executable code.
   Procedure FLI$DISK_WRITE_FILE_INIT requires 4 words of local(AUTO) storage.
PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:44   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:45   
          MINI XREF LISTING

DISK_CLOSE.SN_
      6185**DCL      6185--REDEF
DISK_CLOSE.UTL_
      6186**DCL      6186--REDEF
DISK_CLOSE.V.EXPIRE#
      6200**DCL      6200--REDEF
DISK_CLOSE.V.TYPE#
      6198**DCL      6198--REDEF
DISK_CLOSE.V.XTNSIZE#
      6195**DCL      6195--REDEF    6197--REDEF
DISK_FILE_SPEC.SPEC
      6550**DCL      6552--REDEF
DISK_FILE_SPEC.SPEC.START
      6551**DCL      6551--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6552**DCL      6552--REDEF
DISK_FILE_SPEC$
      6549**DCL      6550--IMP-PTR
DISK_OPEN.ACSVEH_
      6050**DCL      6051--REDEF
DISK_OPEN.ALTKEYS_
      6056**DCL      6057--REDEF    6057--REDEF
DISK_OPEN.HDR_
      6055**DCL      6056--REDEF
DISK_OPEN.TAB_
      6054**DCL      6055--REDEF
DISK_OPEN.UHL_
      6048**DCL      6049--REDEF    6049--REDEF
DISK_OPEN.V.FSN#
      6088**DCL      6088--REDEF    6088--REDEF
DISK_OPEN.WSN_
      6054**DCL      6054--REDEF
PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:46   
DISK_READ.STATION_
      6112**DCL      6113--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6124**DCL      6124--REDEF
DISK_READ.V.INDX#
      6122**DCL      6122--REDEF
DISK_WRITE.STATION_
      6150**DCL      6150--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6157**DCL      6157--REDEF
DPLIST$
      6535**DCL      6547--IMP-PTR
DPRESLIST$
      6549**DCL      6549--IMP-PTR
EFTWORD
      6670**DCL      6670--REDEF
FPT_EXIT.V.STEPCC#
      5975**DCL      5975--REDEF
NBR_OUTSTANDING_IOS
      6506**DCL      6998<<ASSIGN
PRE_RET_CLOSE.SN_
      6913**DCL      6913--REDEF
PRE_RET_CLOSE.UTL_
      6914**DCL      6914--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6928**DCL      6928--REDEF
PRE_RET_CLOSE.V.TYPE#
      6926**DCL      6926--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6923**DCL      6923--REDEF    6925--REDEF
PRE_RET_OPEN.ACSVEH_
      6848**DCL      6849--REDEF
PRE_RET_OPEN.ALTKEYS_
      6854**DCL      6855--REDEF    6855--REDEF
PRE_RET_OPEN.HDR_
      6853**DCL      6854--REDEF
PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:47   
PRE_RET_OPEN.TAB_
      6852**DCL      6853--REDEF
PRE_RET_OPEN.UHL_
      6846**DCL      6847--REDEF    6847--REDEF
PRE_RET_OPEN.V.FSN#
      6886**DCL      6886--REDEF    6886--REDEF
PRE_RET_OPEN.WSN_
      6852**DCL      6852--REDEF
PRE_RET_READ.STATION_
      6703**DCL      6704--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6715**DCL      6715--REDEF
PRE_RET_READ.V.INDX#
      6713**DCL      6713--REDEF
PRE_RET_WRITE.STATION_
      6741**DCL      6741--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6748**DCL      6748--REDEF
RELEASED_BUF_ERR
      6507**DCL      6997<<ASSIGN
RET_CMDS_NAME.L#
      6957**DCL      6957--IMP-SIZ
SNVECLIST$
      6489**DCL      6489--IMP-PTR
SPEC.START
      6553**DCL      6554--REDEF
SPEC.STOP
      6554**DCL      6555--REDEF
SPECCHARS
      6553**DCL      6553--REDEF
TAPE_CLOSE.SN_
      6406**DCL      6406--REDEF
TAPE_CLOSE.UTL_
      6407**DCL      6407--REDEF
TAPE_CLOSE.V.EXPIRE#
      6421**DCL      6421--REDEF
PL6.E3A0      #003=FLI$DISK_WRITE_FILE_INIT File=FLI$DISK.:E05TSI                TUE 07/29/97 15:50 Page:48   
TAPE_CLOSE.V.TYPE#
      6419**DCL      6419--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6416**DCL      6416--REDEF    6418--REDEF
TAPE_DCBLIST$
      5962**DCL      5962--IMP-PTR
TAPE_OPEN.ACSVEH_
      6271**DCL      6272--REDEF
TAPE_OPEN.ALTKEYS_
      6277**DCL      6278--REDEF    6278--REDEF
TAPE_OPEN.HDR_
      6276**DCL      6277--REDEF
TAPE_OPEN.TAB_
      6275**DCL      6276--REDEF
TAPE_OPEN.UHL_
      6269**DCL      6270--REDEF    6270--REDEF
TAPE_OPEN.V.FSN#
      6309**DCL      6309--REDEF    6309--REDEF
TAPE_OPEN.WSN_
      6275**DCL      6275--REDEF
TAPE_READ.STATION_
      6333**DCL      6334--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6345**DCL      6345--REDEF
TAPE_READ.V.INDX#
      6343**DCL      6343--REDEF
TAPE_WRITE.STATION_
      6371**DCL      6371--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6378**DCL      6378--REDEF
TVECTOR.W2
      6502**DCL      6503--REDEF

PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:49   
      165        1        /*T***********************************************************/
      166        2        /*T*                                                         */
      167        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      168        4        /*T*                                                         */
      169        5        /*T***********************************************************/
      170        6        FLI$DISK_WRITE_CLOSE: PROC ALTRET;
      171        7        /*F*  NAME: FLI$DISK_WRITE_CLOSE
      172        8              PURPOSE: Return final error from disk writes.
      173        9         */
      174       10
      175       11    1   DCL ERR BIT(36) ALIGNED;                /* Returned error code if altret      */
      176       12    1   DCL DCB# SBIN ALIGNED;                  /* Passed number of disk DCB          */
      177       13
      178       14         /***
      179       15          *** INCLUDE
      180       16          ***/
      181       17
      182       18        %INCLUDE CP_6;
      183     5577        %INCLUDE FLI_DATA_R;
      184     6991
      185     6992        /****************************************/
      186     6993
      187     6994    1      ERR = RELEASED_BUF_ERR;
      188     6995    1      CALL M$CLOSE( DISK_CLOSE )
      189     6996    2       WHENALTRETURN DO;
      190     6997    2         ALTRETURN;
      191     6998    2         END;
      192     6999
      193     7000    1      RETURN;
      194     7001
      195     7002    1   END FLI$DISK_WRITE_CLOSE;
      196     7003        %EOD;

PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:50   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_WRITE_CLOSE.

   Procedure FLI$DISK_WRITE_CLOSE requires 11 words for executable code.
   Procedure FLI$DISK_WRITE_CLOSE requires 6 words of local(AUTO) storage.

PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:51   

 Object Unit name= FLI$DISK_WRITE_CLOSE                       File name= FLI$DISK.:E05TOU
 UTS= JUL 29 '97 15:50:32.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none     6      6  FLI$DISK_WRITE_CLOSE
    3   Proc  even  none    11     13  FLI$DISK_WRITE_CLOSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        0  FLI$DISK_WRITE_CLOSE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:52   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         DISK_CLOSE
     SNVECLIST$                            RELEASED_BUF_ERR                      DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     EFTWORD                               M$PRE_RET                             RET_CMDS_NAME
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:53   


      165        1        /*T***********************************************************/
      166        2        /*T*                                                         */
      167        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      168        4        /*T*                                                         */
      169        5        /*T***********************************************************/
      170        6        FLI$DISK_WRITE_CLOSE: PROC ALTRET;

      6  3 000000   000000 700200 xent  FLI$DISK_WR* TSX0  ! X66_AUTO_0
         3 000001   000006 000000                    ZERO    6,0

      171        7        /*F*  NAME: FLI$DISK_WRITE_CLOSE
      172        8              PURPOSE: Return final error from disk writes.
      173        9         */
      174       10
      175       11    1   DCL ERR BIT(36) ALIGNED;                /* Returned error code if altret      */
      176       12    1   DCL DCB# SBIN ALIGNED;                  /* Passed number of disk DCB          */
      177       13
      178       14         /***
      179       15          *** INCLUDE
      180       16          ***/
      181       17
      182       18        %INCLUDE CP_6;
      183     5577        %INCLUDE FLI_DATA_R;
      184     6991
      185     6992        /****************************************/
      186     6993
      187     6994    1      ERR = RELEASED_BUF_ERR;

   6994  3 000002   000000 236000 xsym               LDQ     RELEASED_BUF_ERR
         3 000003   200003 756100                    STQ     ERR,,AUTO

      188     6995    1      CALL M$CLOSE( DISK_CLOSE )

   6995  3 000004   000000 630400 xsym               EPPR0   DISK_CLOSE
         3 000005   450001 713400                    CLIMB   alt,close
         3 000006   406000 401760                    pmme    nvectors=13
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:54   
         3 000007   000011 702000 3                  TSX2    s:6997
         3 000010   000012 710000 3                  TRA     s:7000

      189     6996    2       WHENALTRETURN DO;

      190     6997    2         ALTRETURN;

   6997  3 000011   000000 702200 xent               TSX2  ! X66_AALT

      191     6998    2         END;
      192     6999
      193     7000    1      RETURN;

   7000  3 000012   000000 702200 xent               TSX2  ! X66_ARET
      194     7001
      195     7002    1   END FLI$DISK_WRITE_CLOSE;
      196     7003        %EOD;

PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:55   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_WRITE_CLOSE.
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:56   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w BIT         r     1 ERR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 DISK_CLOSE                 0-0-0/w PTR         r     1 DISK_FILE_SPEC$
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/b BIT         r     1 RELEASED_BUF_ERR           0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w PTR         r     1 SNVECLIST$                 0-0-0/w PTR         r     1 TAPE_DCBLIST$


   Procedure FLI$DISK_WRITE_CLOSE requires 11 words for executable code.
   Procedure FLI$DISK_WRITE_CLOSE requires 6 words of local(AUTO) storage.
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:57   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:58   
          MINI XREF LISTING

DISK_CLOSE
      6188**DCL      6995<>CALL
DISK_CLOSE.SN_
      6188**DCL      6188--REDEF
DISK_CLOSE.UTL_
      6189**DCL      6189--REDEF
DISK_CLOSE.V.EXPIRE#
      6203**DCL      6203--REDEF
DISK_CLOSE.V.TYPE#
      6201**DCL      6201--REDEF
DISK_CLOSE.V.XTNSIZE#
      6198**DCL      6198--REDEF    6200--REDEF
DISK_FILE_SPEC.SPEC
      6553**DCL      6555--REDEF
DISK_FILE_SPEC.SPEC.START
      6554**DCL      6554--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6555**DCL      6555--REDEF
DISK_FILE_SPEC$
      6552**DCL      6553--IMP-PTR
DISK_OPEN.ACSVEH_
      6053**DCL      6054--REDEF
DISK_OPEN.ALTKEYS_
      6059**DCL      6060--REDEF    6060--REDEF
DISK_OPEN.HDR_
      6058**DCL      6059--REDEF
DISK_OPEN.TAB_
      6057**DCL      6058--REDEF
DISK_OPEN.UHL_
      6051**DCL      6052--REDEF    6052--REDEF
DISK_OPEN.V.FSN#
      6091**DCL      6091--REDEF    6091--REDEF
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:59   
DISK_OPEN.WSN_
      6057**DCL      6057--REDEF
DISK_READ.STATION_
      6115**DCL      6116--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6127**DCL      6127--REDEF
DISK_READ.V.INDX#
      6125**DCL      6125--REDEF
DISK_WRITE.STATION_
      6153**DCL      6153--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6160**DCL      6160--REDEF
DPLIST$
      6538**DCL      6550--IMP-PTR
DPRESLIST$
      6552**DCL      6552--IMP-PTR
EFTWORD
      6673**DCL      6673--REDEF
ERR
        11**DCL      6994<<ASSIGN
FPT_EXIT.V.STEPCC#
      5978**DCL      5978--REDEF
M$CLOSE
      5505**DCL-ENT  6995--CALL
PRE_RET_CLOSE.SN_
      6916**DCL      6916--REDEF
PRE_RET_CLOSE.UTL_
      6917**DCL      6917--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6931**DCL      6931--REDEF
PRE_RET_CLOSE.V.TYPE#
      6929**DCL      6929--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6926**DCL      6926--REDEF    6928--REDEF
PRE_RET_OPEN.ACSVEH_
      6851**DCL      6852--REDEF
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:60   
PRE_RET_OPEN.ALTKEYS_
      6857**DCL      6858--REDEF    6858--REDEF
PRE_RET_OPEN.HDR_
      6856**DCL      6857--REDEF
PRE_RET_OPEN.TAB_
      6855**DCL      6856--REDEF
PRE_RET_OPEN.UHL_
      6849**DCL      6850--REDEF    6850--REDEF
PRE_RET_OPEN.V.FSN#
      6889**DCL      6889--REDEF    6889--REDEF
PRE_RET_OPEN.WSN_
      6855**DCL      6855--REDEF
PRE_RET_READ.STATION_
      6706**DCL      6707--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6718**DCL      6718--REDEF
PRE_RET_READ.V.INDX#
      6716**DCL      6716--REDEF
PRE_RET_WRITE.STATION_
      6744**DCL      6744--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6751**DCL      6751--REDEF
RELEASED_BUF_ERR
      6510**DCL      6994>>ASSIGN
RET_CMDS_NAME.L#
      6960**DCL      6960--IMP-SIZ
SNVECLIST$
      6492**DCL      6492--IMP-PTR
SPEC.START
      6556**DCL      6557--REDEF
SPEC.STOP
      6557**DCL      6558--REDEF
SPECCHARS
      6556**DCL      6556--REDEF
TAPE_CLOSE.SN_
      6409**DCL      6409--REDEF
PL6.E3A0      #004=FLI$DISK_WRITE_CLOSE File=FLI$DISK.:E05TSI                    TUE 07/29/97 15:50 Page:61   
TAPE_CLOSE.UTL_
      6410**DCL      6410--REDEF
TAPE_CLOSE.V.EXPIRE#
      6424**DCL      6424--REDEF
TAPE_CLOSE.V.TYPE#
      6422**DCL      6422--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6419**DCL      6419--REDEF    6421--REDEF
TAPE_DCBLIST$
      5965**DCL      5965--IMP-PTR
TAPE_OPEN.ACSVEH_
      6274**DCL      6275--REDEF
TAPE_OPEN.ALTKEYS_
      6280**DCL      6281--REDEF    6281--REDEF
TAPE_OPEN.HDR_
      6279**DCL      6280--REDEF
TAPE_OPEN.TAB_
      6278**DCL      6279--REDEF
TAPE_OPEN.UHL_
      6272**DCL      6273--REDEF    6273--REDEF
TAPE_OPEN.V.FSN#
      6312**DCL      6312--REDEF    6312--REDEF
TAPE_OPEN.WSN_
      6278**DCL      6278--REDEF
TAPE_READ.STATION_
      6336**DCL      6337--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6348**DCL      6348--REDEF
TAPE_READ.V.INDX#
      6346**DCL      6346--REDEF
TAPE_WRITE.STATION_
      6374**DCL      6374--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6381**DCL      6381--REDEF
TVECTOR.W2
      6505**DCL      6506--REDEF

PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:62   
      197        1        /*T***********************************************************/
      198        2        /*T*                                                         */
      199        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      200        4        /*T*                                                         */
      201        5        /*T***********************************************************/
      202        6        FLI$DISK_READ: PROC( BUF_, BIX, ARS, ERR, DCB# ) ALTRET;
      203        7        /*F*  NAME: FLI$DISK_READ
      204        8              PURPOSE: Reads next bufferfull of current disk file.
      205        9         */
      206       10
      207       11    1   DCL BUF_ BIT(72) DALIGNED;              /* Returned buffer vector             */
      208       12    1   DCL BIX SBIN ALIGNED;                   /* Returned buffer index              */
      209       13    1   DCL ARS SBIN ALIGNED;                   /* Returned number of bytes read      */
      210       14    1   DCL 1 ERR ALIGNED,                      /* Returned error word                */
      211       15    1         2 FCG BIT(12) UNAL,
      212       16    1         2 MID BIT(6) UNAL,
      213       17    1         2 MON BIT(1) UNAL,
      214       18    1         2 CODE UBIN(14) UNAL,
      215       19    1         2 SEV UBIN(3) UNAL;
      216       20    1   DCL DCB# SBIN ALIGNED;                  /* Returned DCB# if ERR               */
      217       21
      218       22         /***
      219       23          *** INCLUDE
      220       24          ***/
      221       25
      222       26        %INCLUDE B_ERRORS_C;
      223     1153        %INCLUDE CP_6;
      224     6712        %INCLUDE FLI_DATA_R;
      225     8126        %INCLUDE XUD_UTS_M;
      226     8208
      227     8209         /***
      228     8210          *** ENTRY
      229     8211          ***/
      230     8212
      231     8213    1   DCL FLI$IO_CHURN ENTRY(1);
      232     8214    1   DCL FLI$RPT_ERR ENTRY(5);
      233     8215    1   DCL FLI$FREE_SPIN ENTRY;
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:63   
      234     8216    1   DCL FLI$SPIN_CHK ENTRY(2);
      235     8217    1   DCL FLN$DISK_OPEN_NEXT ENTRY(5) ALTRET;
      236     8218        %XUD$UTS_ENTRIES;
      237     8250
      238     8251         /***
      239     8252          *** AUTO
      240     8253          ***/
      241     8254
      242     8255    1   DCL IO_WAIT_UTS UBIN WORD AUTO;         /* Time when I/O wait began           */
      243     8256    1   DCL SPIN UBIN WORD AUTO;                /* Spin counter                       */
      244     8257
      245     8258    1   DCL GRAN_KEY SBIN STATIC;               /* Key of granule to read             */
      246     8259
      247     8260        /****************************************/
      248     8261
      249     8262    1      ERR = '0'B;
      250     8263    1      DISK_READ.V.DCB# = DCB#;
      251     8264
      252     8265         /***
      253     8266          *** FIRST_USED_IX is the index of the first buffer entry in the
      254     8267          *** used list.  As such, it also indicates the next buffer that
      255     8268          *** must be returned to the caller.
      256     8269          ***
      257     8270          *** If there are no buffers currently in use, there can be no
      258     8271          *** outstanding I/Os.  We start by getting a free buffer and firing
      259     8272          *** off the first no-wait read.
      260     8273          ***/
      261     8274
      262     8275    1      IF FIRST_USED_IX = 0
      263     8276    2       THEN DO;                       /* No I/Os outstanding; no buffers in use  */
      264     8277    3         DO INHIBIT;             /* The I/O handler may also get free buffers    */
      265     8278    3            IF NBR_GRANS_REMAINING <= 0
      266     8279    4             THEN DO;                      /* Simulate end of file               */
      267     8280    4               ERR.CODE = %E$EOF;
      268     8281    4               ALTRETURN;
      269     8282    4               END;
      270     8283    4            DO WHILE( LAST_FREE_IX = 0 );
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:64   
      271     8284                  /*** FLI$FREE_SPIN not inhibited, but effect same in this loop ***/
      272     8285    4               CALL FLI$FREE_SPIN;
      273     8286    4               END;
      274     8287    3            IF LAST_USED_IX > 0            /* If none are used, none are used    */
      275     8288    3              OR NBR_OUTSTANDING_IOS > 0   /* No I/Os can be outstanding         */
      276     8289    3             THEN CALL M$XXX;
      277     8290                 /***
      278     8291                  *** Note that the following code is almost identical to
      279     8292                  *** code in FLI$IO_CHURN except that the new outstanding
      280     8293                  *** I/O is the only item in the outstanding I/O used chain.
      281     8294                  ***/
      282     8295                                                /*** Unlink from free chain ***/
      283     8296    3            BIX = LAST_FREE_IX;
      284     8297    3            LAST_FREE_IX = OUTSTANDING_IO.NEXT_IX(LAST_FREE_IX);
      285     8298                                                /*** Make into used chain ***/
      286     8299    3            FIRST_USED_IX = BIX;
      287     8300    3            LAST_USED_IX = BIX;
      288     8301    3            OUTSTANDING_IO.NEXT_IX(BIX) = 0;
      289     8302                                                /*** Get ready for I/O ***/
      290     8303    3            OUTSTANDING_IO.NOT_READY(BIX) = '1'B;
      291     8304    3            OUTSTANDING_IO.DCB#(BIX) = DCB#;
      292     8305    3            NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS + 1;
      293     8306    3            NBR_GRANS_REMAINING = NBR_GRANS_REMAINING - NBR_GRANS_PER_DISK_BUF;
      294     8307                                                /*** Set up FPT correctly             */
      295     8308    3            DISK_READ.V.EVENT# = BIX;
      296     8309    3            DISK_READ.BUF_ = OUTSTANDING_IO.BUF_(BIX);
      297     8310    3            CALL M$READ( DISK_READ )
      298     8311    4             WHENALTRETURN DO;
      299     8312    4               NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS - 1;
      300     8313    4               OUTSTANDING_IO.NOT_READY(BIX) = '0'B;
      301     8314    4               CALL FLI$RPT_ERR;
      302     8315    4               CALL M$XXX;
      303     8316    4               END;
      304     8317    3            END;
      305     8318    2         END;
      306     8319
      307     8320         /***
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:65   
      308     8321          *** (Now that the first I/O is already outstanding), fire off a
      309     8322          *** few more just to keep things moving.
      310     8323          ***/
      311     8324
      312     8325    1      CALL FLI$IO_CHURN( DCB# );
      313     8326
      314     8327         /***
      315     8328          *** We must return the next buffer.  Spin until read is complete.
      316     8329          ***/
      317     8330
      318     8331    1      IF OUTSTANDING_IO.NOT_READY(FIRST_USED_IX)
      319     8332    1       THEN CALL FLI_IO_SPIN;
      320     8333
      321     8334         /***
      322     8335          *** Return read completion information.
      323     8336          ***/
      324     8337
      325     8338    1      BUF_ = OUTSTANDING_IO.BUF_(FIRST_USED_IX);
      326     8339    1      ARS = OUTSTANDING_IO.ARS(FIRST_USED_IX);
      327     8340    1      ERR = OUTSTANDING_IO.ERR(FIRST_USED_IX);
      328     8341    1      BIX = FIRST_USED_IX;
      329     8342
      330     8343         /***
      331     8344          *** Buffer is now not free and is not in use by the I/O routines.
      332     8345          *** The calling routines are responsible for returning this buffer
      333     8346          *** to the I/O routines, otherwise we'll run out of buffers.  The
      334     8347          *** buffer must be taken out of the used chain.
      335     8348          ***/
      336     8349
      337     8350    2      DO INHIBIT;
      338     8351    2         FIRST_USED_IX = OUTSTANDING_IO.NEXT_IX(FIRST_USED_IX);
      339     8352    2         IF FIRST_USED_IX = 0
      340     8353    3          THEN DO;     /* First must be last; this was the only outstanding I/O  */
      341     8354    3            IF LAST_USED_IX ~= BIX
      342     8355    3             THEN CALL M$XXX;
      343     8356    3            LAST_USED_IX = FIRST_USED_IX;
      344     8357    3            OUTSTANDING_IO.NEXT_IX(BIX) = 0;
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:66   
      345     8358    3            END;
      346     8359    2         OUTSTANDING_IO.RELEASED(BIX) = '1'B;
      347     8360    2         END;
      348     8361
      349     8362    1      IF ERR.CODE = 0 OR ERR.CODE = %E$DI
      350     8363    1       THEN RETURN;
      351     8364    1       ELSE IF ERR.CODE = %E$EOF
      352     8365    1          THEN ALTRETURN;
      353     8366
      354     8367        /***
      355     8368         *** Serious error that we can't handle.
      356     8369         ***/
      357     8370
      358     8371    1      CALL FLI$RPT_ERR( ERR, DCB# );
      359     8372    1      ALTRETURN;
      360     8373
      361     8374        /****************************************/
      362     8375
      363     8376    1   FLI_IO_SPIN: PROC;
      364     8377        /*F*  NAME: FLI_IO_SPIN
      365     8378              PURPOSE: Wait until first I/O (the one which is now needed)
      366     8379                 is complete.
      367     8380         */
      368     8381
      369     8382        /******************************/
      370     8383
      371     8384    2   DCL TEMP SBIN AUTO;
      372     8385
      373     8386         /***
      374     8387          *** Get the current time so we'll be able to tell when we've
      375     8388          *** spun too long.
      376     8389          ***/
      377     8390
      378     8391    2      IO_WAIT_UTS = 0;
      379     8392
      380     8393    2      SPIN = 0;
      381     8394    3      DO WHILE( OUTSTANDING_IO.NOT_READY(FIRST_USED_IX) );
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:67   
      382     8395    3         SPIN = SPIN + 1;
      383     8396    3         CALL FLN$DISK_OPEN_NEXT
              8396                  /* Open the next file in sequence while we're waiting */
      384     8397    4          WHENALTRETURN DO;
      385     8398    4            IF IO_WAIT_UTS = 0
      386     8399    5             THEN DO;                      /* Enjoy (but remember) the wait      */
      387     8400    5               CALL M$TIME( GET_NOW_UTS );
      388     8401    5               IO_WAIT_UTS = NOW_UTS;
      389     8402    5               END;
      390     8403    5            DO INHIBIT;     /* To keep I/O from completing just before M$TIME    */
      391     8404    5               IF OUTSTANDING_IO.NOT_READY(FIRST_USED_IX)
      392     8405    5                THEN CALL M$WAIT( WAIT_1 );
      393     8406    5               END;
      394     8407    4            END;
      395     8408    3         IF SPIN >= 1000         /* Just to keep from doing too many M$TIMEs     */
      396     8409    4          THEN DO;
      397     8410    4            SPIN = 0;
      398     8411    4            CALL FLI$SPIN_CHK( IO_WAIT_UTS, FIRST_USED_IX );
      399     8412    4            END;
      400     8413    3         END;
      401     8414
      402     8415    2      IF IO_WAIT_UTS > 0
      403     8416    3       THEN DO;
      404     8417    3         CALL M$TIME( GET_NOW_UTS );
      405     8418    3         CALL XUD$UTS_DIFF(TEMP,NOW_UTS,IO_WAIT_UTS);
      406     8419    3         ACCUMULATED_SPIN_TIME = ACCUMULATED_SPIN_TIME + TEMP;
      407     8420    3         END;
      408     8421
      409     8422    2      RETURN;
      410     8423
      411     8424    2   END FLI_IO_SPIN;
      412     8425
      413     8426    1   END FLI$DISK_READ;
      414     8427        %EOD;

PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:68   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLI$DISK_READ.

   Procedure FLI$DISK_READ requires 223 words for executable code.
   Procedure FLI$DISK_READ requires 16 words of local(AUTO) storage.

PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:69   

 Object Unit name= FLI$DISK_READ                              File name= FLI$DISK.:E05TOU
 UTS= JUL 29 '97 15:50:50.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none     7      7  FLI$DISK_READ
    3   Proc  even  none   223    337  FLI$DISK_READ
    4  RoData even  none     4      4  FLI$DISK_READ

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        5  FLI$DISK_READ

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FLI$FREE_SPIN
         yes           Std       1 FLI$IO_CHURN
         yes           Std       5 FLI$RPT_ERR
 yes     yes           Std       5 FLN$DISK_OPEN_NEXT
         yes           Std       2 FLI$SPIN_CHK
 yes     yes           Std       3 XUD$UTS_DIFF
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:70   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         DISK_READ
     SNVECLIST$                            NBR_OUTSTANDING_IOS                   LAST_FREE_IX
     LAST_USED_IX                          FIRST_USED_IX                         NBR_GRANS_REMAINING
     NBR_GRANS_PER_DISK_BUF                OUTSTANDING_IO                        NOW_UTS
     GET_NOW_UTS                           ACCUMULATED_SPIN_TIME                 DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
r    WAIT_1                                EFTWORD                               M$PRE_RET
     RET_CMDS_NAME                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:71   


      197        1        /*T***********************************************************/
      198        2        /*T*                                                         */
      199        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      200        4        /*T*                                                         */
      201        5        /*T***********************************************************/
      202        6        FLI$DISK_READ: PROC( BUF_, BIX, ARS, ERR, DCB# ) ALTRET;

      6  3 000000   000000 700200 xent  FLI$DISK_RE* TSX0  ! X66_AUTO_5
         3 000001   000020 000005                    ZERO    16,5

      203        7        /*F*  NAME: FLI$DISK_READ
      204        8              PURPOSE: Reads next bufferfull of current disk file.
      205        9         */
      206       10
      207       11    1   DCL BUF_ BIT(72) DALIGNED;              /* Returned buffer vector             */
      208       12    1   DCL BIX SBIN ALIGNED;                   /* Returned buffer index              */
      209       13    1   DCL ARS SBIN ALIGNED;                   /* Returned number of bytes read      */
      210       14    1   DCL 1 ERR ALIGNED,                      /* Returned error word                */
      211       15    1         2 FCG BIT(12) UNAL,
      212       16    1         2 MID BIT(6) UNAL,
      213       17    1         2 MON BIT(1) UNAL,
      214       18    1         2 CODE UBIN(14) UNAL,
      215       19    1         2 SEV UBIN(3) UNAL;
      216       20    1   DCL DCB# SBIN ALIGNED;                  /* Returned DCB# if ERR               */
      217       21
      218       22         /***
      219       23          *** INCLUDE
      220       24          ***/
      221       25
      222       26        %INCLUDE B_ERRORS_C;
      223     1153        %INCLUDE CP_6;
      224     6712        %INCLUDE FLI_DATA_R;
      225     8126        %INCLUDE XUD_UTS_M;
      226     8208
      227     8209         /***
      228     8210          *** ENTRY
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:72   
      229     8211          ***/
      230     8212
      231     8213    1   DCL FLI$IO_CHURN ENTRY(1);
      232     8214    1   DCL FLI$RPT_ERR ENTRY(5);
      233     8215    1   DCL FLI$FREE_SPIN ENTRY;
      234     8216    1   DCL FLI$SPIN_CHK ENTRY(2);
      235     8217    1   DCL FLN$DISK_OPEN_NEXT ENTRY(5) ALTRET;
      236     8218        %XUD$UTS_ENTRIES;
      237     8250
      238     8251         /***
      239     8252          *** AUTO
      240     8253          ***/
      241     8254
      242     8255    1   DCL IO_WAIT_UTS UBIN WORD AUTO;         /* Time when I/O wait began           */
      243     8256    1   DCL SPIN UBIN WORD AUTO;                /* Spin counter                       */
      244     8257
      245     8258    1   DCL GRAN_KEY SBIN STATIC;               /* Key of granule to read             */
      246     8259
      247     8260        /****************************************/
      248     8261
      249     8262    1      ERR = '0'B;

   8262  3 000002   200006 470500                    LDP0    @ERR,,AUTO
         3 000003   000000 450100                    STZ     0,,PR0

      250     8263    1      DISK_READ.V.DCB# = DCB#;

   8263  3 000004   200007 471500                    LDP1    @DCB#,,AUTO
         3 000005   100000 720100                    LXL0    0,,PR1
         3 000006   000010 740000 xsym               STX0    DISK_READ+8

      251     8264
      252     8265         /***
      253     8266          *** FIRST_USED_IX is the index of the first buffer entry in the
      254     8267          *** used list.  As such, it also indicates the next buffer that
      255     8268          *** must be returned to the caller.
      256     8269          ***
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:73   
      257     8270          *** If there are no buffers currently in use, there can be no
      258     8271          *** outstanding I/Os.  We start by getting a free buffer and firing
      259     8272          *** off the first no-wait read.
      260     8273          ***/
      261     8274
      262     8275    1      IF FIRST_USED_IX = 0

   8275  3 000007   000000 235000 xsym               LDA     FIRST_USED_IX
         3 000010   000126 601000 3                  TNZ     s:8325

      263     8276    2       THEN DO;                       /* No I/Os outstanding; no buffers in use  */

      264     8277    3         DO INHIBIT;             /* The I/O handler may also get free buffers    */

      265     8278    3            IF NBR_GRANS_REMAINING <= 0

   8278  3 000011   000000 236200 xsym               LDQ   ! NBR_GRANS_REMAINING
         3 000012   000020 605600 3                  TPNZ  ! s:8283

      266     8279    4             THEN DO;                      /* Simulate end of file               */

      267     8280    4               ERR.CODE = %E$EOF;

   8280  3 000013   000000 236300                    LDQ   ! 0,,PR0
         3 000014   000000 376200 4                  ANQ   ! 0
         3 000015   000060 276207                    ORQ   ! 48,DL
         3 000016   000000 756300                    STQ   ! 0,,PR0

      268     8281    4               ALTRETURN;

   8281  3 000017   000000 702200 xent               TSX2  ! X66_AALT

      269     8282    4               END;
      270     8283    4            DO WHILE( LAST_FREE_IX = 0 );

   8283  3 000020   000000 235200 xsym               LDA   ! LAST_FREE_IX
         3 000021   000027 601200 3                  TNZ   ! s:8287
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:74   

      271     8284                  /*** FLI$FREE_SPIN not inhibited, but effect same in this loop ***/
      272     8285    4               CALL FLI$FREE_SPIN;

   8285  3 000022   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         3 000023   000000 701200 xent               TSX1  ! FLI$FREE_SPIN
         3 000024   000000 011200                    NOP   ! 0

      273     8286    4               END;

   8286  3 000025   000000 235200 xsym               LDA   ! LAST_FREE_IX
         3 000026   000022 600200 3                  TZE   ! s:8285

      274     8287    3            IF LAST_USED_IX > 0            /* If none are used, none are used    */

   8287  3 000027   000000 236200 xsym               LDQ   ! LAST_USED_IX
         3 000030   000033 605600 3                  TPNZ  ! s:8289
         3 000031   000000 235200 xsym               LDA   ! NBR_OUTSTANDING_IOS
         3 000032   000035 604600 3                  TMOZ  ! s:8296

      275     8288    3              OR NBR_OUTSTANDING_IOS > 0   /* No I/Os can be outstanding         */
      276     8289    3             THEN CALL M$XXX;

   8289  3 000033   000003 713600                    CLIMB ! 3
         3 000034   000000 401760                    pmme    nvectors=0

      277     8290                 /***
      278     8291                  *** Note that the following code is almost identical to
      279     8292                  *** code in FLI$IO_CHURN except that the new outstanding
      280     8293                  *** I/O is the only item in the outstanding I/O used chain.
      281     8294                  ***/
      282     8295                                                /*** Unlink from free chain ***/
      283     8296    3            BIX = LAST_FREE_IX;

   8296  3 000035   200004 470700                    LDP0  ! @BIX,,AUTO
         3 000036   000000 235200 xsym               LDA   ! LAST_FREE_IX
         3 000037   000000 755300                    STA   ! 0,,PR0
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:75   

      284     8297    3            LAST_FREE_IX = OUTSTANDING_IO.NEXT_IX(LAST_FREE_IX);

   8297  3 000040   000000 236200 xsym               LDQ   ! LAST_FREE_IX
         3 000041   000006 402207                    MPY   ! 6,DL
         3 000042   000004 235206 xsym               LDA   ! OUTSTANDING_IO+4,QL
         3 000043   000000 755200 xsym               STA   ! LAST_FREE_IX

      285     8298                                                /*** Make into used chain ***/
      286     8299    3            FIRST_USED_IX = BIX;

   8299  3 000044   000000 235300                    LDA   ! 0,,PR0
         3 000045   000000 755200 xsym               STA   ! FIRST_USED_IX

      287     8300    3            LAST_USED_IX = BIX;

   8300  3 000046   000000 235300                    LDA   ! 0,,PR0
         3 000047   000000 755200 xsym               STA   ! LAST_USED_IX

      288     8301    3            OUTSTANDING_IO.NEXT_IX(BIX) = 0;

   8301  3 000050   000000 236300                    LDQ   ! 0,,PR0
         3 000051   000003 402207                    MPY   ! 3,DL
         3 000052   000001 736200                    QLS   ! 1
         3 000053   000004 450206 xsym               STZ   ! OUTSTANDING_IO+4,QL

      289     8302                                                /*** Get ready for I/O ***/
      290     8303    3            OUTSTANDING_IO.NOT_READY(BIX) = '1'B;

   8303  3 000054   000000 236300                    LDQ   ! 0,,PR0
         3 000055   000003 402207                    MPY   ! 3,DL
         3 000056   000001 736200                    QLS   ! 1
         3 000057   000000 620206                    EAX0  ! 0,QL
         3 000060   000001 236207                    LDQ   ! 1,DL
         3 000061   000002 256210 xsym               ORSQ  ! OUTSTANDING_IO+2,X0

      291     8304    3            OUTSTANDING_IO.DCB#(BIX) = DCB#;
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:76   

   8304  3 000062   000000 236300                    LDQ   ! 0,,PR0
         3 000063   000003 402207                    MPY   ! 3,DL
         3 000064   000001 736200                    QLS   ! 1
         3 000065   200007 471700                    LDP1  ! @DCB#,,AUTO
         3 000066   100000 720300                    LXL0  ! 0,,PR1
         3 000067   000002 740206 xsym               STX0  ! OUTSTANDING_IO+2,QL

      292     8305    3            NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS + 1;

   8305  3 000070   000000 054200 xsym               AOS   ! NBR_OUTSTANDING_IOS

      293     8306    3            NBR_GRANS_REMAINING = NBR_GRANS_REMAINING - NBR_GRANS_PER_DISK_BUF;

   8306  3 000071   000000 236200 xsym               LDQ   ! NBR_GRANS_REMAINING
         3 000072   000000 136200 xsym               SBLQ  ! NBR_GRANS_PER_DISK_BUF
         3 000073   000000 756200 xsym               STQ   ! NBR_GRANS_REMAINING

      294     8307                                                /*** Set up FPT correctly             */
      295     8308    3            DISK_READ.V.EVENT# = BIX;

   8308  3 000074   000000 235300                    LDA   ! 0,,PR0
         3 000075   000011 755200 xsym               STA   ! DISK_READ+9

      296     8309    3            DISK_READ.BUF_ = OUTSTANDING_IO.BUF_(BIX);

   8309  3 000076   000000 236300                    LDQ   ! 0,,PR0
         3 000077   000003 402207                    MPY   ! 3,DL
         3 000100   000001 736200                    QLS   ! 1
         3 000101   000000 237206 xsym               LDAQ  ! OUTSTANDING_IO,QL
         3 000102   000004 757200 xsym               STAQ  ! DISK_READ+4

      297     8310    3            CALL M$READ( DISK_READ )

   8310  3 000103   000000 630600 xsym               EPPR0 ! DISK_READ
         3 000104   440000 713600                    CLIMB ! alt,read
         3 000105   401400 401760                    pmme    nvectors=4
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:77   
         3 000106   000110 702200 3                  TSX2  ! s:8312
         3 000107   000126 710200 3                  TRA   ! s:8325

      298     8311    4             WHENALTRETURN DO;

      299     8312    4               NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS - 1;

   8312  3 000110   000001 336207                    LCQ   ! 1,DL
         3 000111   000000 056200 xsym               ASQ   ! NBR_OUTSTANDING_IOS

      300     8313    4               OUTSTANDING_IO.NOT_READY(BIX) = '0'B;

   8313  3 000112   200004 470700                    LDP0  ! @BIX,,AUTO
         3 000113   000000 236300                    LDQ   ! 0,,PR0
         3 000114   000003 402207                    MPY   ! 3,DL
         3 000115   000001 736200                    QLS   ! 1
         3 000116   000000 620206                    EAX0  ! 0,QL
         3 000117   000001 236200 4                  LDQ   ! 1
         3 000120   000002 356210 xsym               ANSQ  ! OUTSTANDING_IO+2,X0

      301     8314    4               CALL FLI$RPT_ERR;

   8314  3 000121   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         3 000122   000000 701200 xent               TSX1  ! FLI$RPT_ERR
         3 000123   000000 011200                    NOP   ! 0

      302     8315    4               CALL M$XXX;

   8315  3 000124   000003 713600                    CLIMB ! 3
         3 000125   000000 401760                    pmme    nvectors=0

      303     8316    4               END;

      304     8317    3            END;

      305     8318    2         END;

PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:78   
      306     8319
      307     8320         /***
      308     8321          *** (Now that the first I/O is already outstanding), fire off a
      309     8322          *** few more just to keep things moving.
      310     8323          ***/
      311     8324
      312     8325    1      CALL FLI$IO_CHURN( DCB# );

   8325  3 000126   200007 630500                    EPPR0   @DCB#,,AUTO
         3 000127   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000130   000000 701000 xent               TSX1    FLI$IO_CHURN
         3 000131   000000 011000                    NOP     0

      313     8326
      314     8327         /***
      315     8328          *** We must return the next buffer.  Spin until read is complete.
      316     8329          ***/
      317     8330
      318     8331    1      IF OUTSTANDING_IO.NOT_READY(FIRST_USED_IX)

   8331  3 000132   000000 236000 xsym               LDQ     FIRST_USED_IX
         3 000133   000006 402007                    MPY     6,DL
         3 000134   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000135   000001 316007                    CANQ    1,DL
         3 000136   000141 600000 3                  TZE     s:8338

      319     8332    1       THEN CALL FLI_IO_SPIN;

   8332  3 000137   000234 701000 3                  TSX1    FLI_IO_SPIN
         3 000140   000000 011000                    NOP     0

      320     8333
      321     8334         /***
      322     8335          *** Return read completion information.
      323     8336          ***/
      324     8337
      325     8338    1      BUF_ = OUTSTANDING_IO.BUF_(FIRST_USED_IX);
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:79   

   8338  3 000141   000000 236000 xsym               LDQ     FIRST_USED_IX
         3 000142   000006 402007                    MPY     6,DL
         3 000143   000000 237006 xsym               LDAQ    OUTSTANDING_IO,QL
         3 000144   200003 470500                    LDP0    @BUF_,,AUTO
         3 000145   000000 757100                    STAQ    0,,PR0

      326     8339    1      ARS = OUTSTANDING_IO.ARS(FIRST_USED_IX);

   8339  3 000146   000000 236000 xsym               LDQ     FIRST_USED_IX
         3 000147   000006 402007                    MPY     6,DL
         3 000150   200005 471500                    LDP1    @ARS,,AUTO
         3 000151   000005 235006 xsym               LDA     OUTSTANDING_IO+5,QL
         3 000152   100000 755100                    STA     0,,PR1

      327     8340    1      ERR = OUTSTANDING_IO.ERR(FIRST_USED_IX);

   8340  3 000153   000000 236000 xsym               LDQ     FIRST_USED_IX
         3 000154   000006 402007                    MPY     6,DL
         3 000155   000003 236006 xsym               LDQ     OUTSTANDING_IO+3,QL
         3 000156   200006 473500                    LDP3    @ERR,,AUTO
         3 000157   300000 756100                    STQ     0,,PR3

      328     8341    1      BIX = FIRST_USED_IX;

   8341  3 000160   200004 474500                    LDP4    @BIX,,AUTO
         3 000161   000000 235000 xsym               LDA     FIRST_USED_IX
         3 000162   400000 755100                    STA     0,,PR4

      329     8342
      330     8343         /***
      331     8344          *** Buffer is now not free and is not in use by the I/O routines.
      332     8345          *** The calling routines are responsible for returning this buffer
      333     8346          *** to the I/O routines, otherwise we'll run out of buffers.  The
      334     8347          *** buffer must be taken out of the used chain.
      335     8348          ***/
      336     8349
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:80   
      337     8350    2      DO INHIBIT;

      338     8351    2         FIRST_USED_IX = OUTSTANDING_IO.NEXT_IX(FIRST_USED_IX);

   8351  3 000163   000000 236200 xsym               LDQ   ! FIRST_USED_IX
         3 000164   000006 402207                    MPY   ! 6,DL
         3 000165   000004 235206 xsym               LDA   ! OUTSTANDING_IO+4,QL
         3 000166   000000 755200 xsym               STA   ! FIRST_USED_IX

      339     8352    2         IF FIRST_USED_IX = 0

   8352  3 000167   000204 601200 3                  TNZ   ! s:8359

      340     8353    3          THEN DO;     /* First must be last; this was the only outstanding I/O  */

      341     8354    3            IF LAST_USED_IX ~= BIX

   8354  3 000170   000000 236200 xsym               LDQ   ! LAST_USED_IX
         3 000171   400000 116300                    CMPQ  ! 0,,PR4
         3 000172   000175 600200 3                  TZE   ! s:8356

      342     8355    3             THEN CALL M$XXX;

   8355  3 000173   000003 713600                    CLIMB ! 3
         3 000174   000000 401760                    pmme    nvectors=0

      343     8356    3            LAST_USED_IX = FIRST_USED_IX;

   8356  3 000175   000000 235200 xsym               LDA   ! FIRST_USED_IX
         3 000176   000000 755200 xsym               STA   ! LAST_USED_IX

      344     8357    3            OUTSTANDING_IO.NEXT_IX(BIX) = 0;

   8357  3 000177   200004 470700                    LDP0  ! @BIX,,AUTO
         3 000200   000000 236300                    LDQ   ! 0,,PR0
         3 000201   000003 402207                    MPY   ! 3,DL
         3 000202   000001 736200                    QLS   ! 1
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:81   
         3 000203   000004 450206 xsym               STZ   ! OUTSTANDING_IO+4,QL

      345     8358    3            END;

      346     8359    2         OUTSTANDING_IO.RELEASED(BIX) = '1'B;

   8359  3 000204   200004 470700                    LDP0  ! @BIX,,AUTO
         3 000205   000000 236300                    LDQ   ! 0,,PR0
         3 000206   000003 402207                    MPY   ! 3,DL
         3 000207   000001 736200                    QLS   ! 1
         3 000210   000000 620206                    EAX0  ! 0,QL
         3 000211   000002 236207                    LDQ   ! 2,DL
         3 000212   000002 256210 xsym               ORSQ  ! OUTSTANDING_IO+2,X0

      347     8360    2         END;

      348     8361
      349     8362    1      IF ERR.CODE = 0 OR ERR.CODE = %E$DI

   8362  3 000213   200006 471500                    LDP1    @ERR,,AUTO
         3 000214   100000 236100                    LDQ     0,,PR1
         3 000215   377770 316007                    CANQ    131064,DL
         3 000216   000223 600000 3                  TZE     s:8363
         3 000217   100000 236100                    LDQ     0,,PR1
         3 000220   377770 376007                    ANQ     131064,DL
         3 000221   000110 116007                    CMPQ    72,DL
         3 000222   000224 601000 3                  TNZ     s:8364

      350     8363    1       THEN RETURN;

   8363  3 000223   000000 702200 xent               TSX2  ! X66_ARET

      351     8364    1       ELSE IF ERR.CODE = %E$EOF

   8364  3 000224   000060 116007                    CMPQ    48,DL
         3 000225   000227 601000 3                  TNZ     s:8371

PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:82   
      352     8365    1          THEN ALTRETURN;

   8365  3 000226   000000 702200 xent               TSX2  ! X66_AALT

      353     8366
      354     8367        /***
      355     8368         *** Serious error that we can't handle.
      356     8369         ***/
      357     8370
      358     8371    1      CALL FLI$RPT_ERR( ERR, DCB# );

   8371  3 000227   200006 630500                    EPPR0   @ERR,,AUTO
         3 000230   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000231   000000 701000 xent               TSX1    FLI$RPT_ERR
         3 000232   000000 011000                    NOP     0

      359     8372    1      ALTRETURN;

   8372  3 000233   000000 702200 xent               TSX2  ! X66_AALT

      360     8373
      361     8374        /****************************************/
      362     8375
      363     8376    1   FLI_IO_SPIN: PROC;

   8376  3 000234   200012 741300       FLI_IO_SPIN  STX1  ! SPIN+1,,AUTO

      364     8377        /*F*  NAME: FLI_IO_SPIN
      365     8378              PURPOSE: Wait until first I/O (the one which is now needed)
      366     8379                 is complete.
      367     8380         */
      368     8381
      369     8382        /******************************/
      370     8383
      371     8384    2   DCL TEMP SBIN AUTO;
      372     8385
      373     8386         /***
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:83   
      374     8387          *** Get the current time so we'll be able to tell when we've
      375     8388          *** spun too long.
      376     8389          ***/
      377     8390
      378     8391    2      IO_WAIT_UTS = 0;

   8391  3 000235   200010 450100                    STZ     IO_WAIT_UTS,,AUTO

      379     8392
      380     8393    2      SPIN = 0;

   8393  3 000236   200011 450100                    STZ     SPIN,,AUTO

      381     8394    3      DO WHILE( OUTSTANDING_IO.NOT_READY(FIRST_USED_IX) );

   8394  3 000237   000000 236000 xsym               LDQ     FIRST_USED_IX
         3 000240   000006 402007                    MPY     6,DL
         3 000241   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000242   000001 316007                    CANQ    1,DL
         3 000243   000313 600000 3                  TZE     s:8415

      382     8395    3         SPIN = SPIN + 1;

   8395  3 000244   200011 235100                    LDA     SPIN,,AUTO
         3 000245   000001 035007                    ADLA    1,DL
         3 000246   200011 755100                    STA     SPIN,,AUTO

      383     8396    3         CALL FLN$DISK_OPEN_NEXT
              8396                  /* Open the next file in sequence while we're waiting */

   8396  3 000247   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000250   000000 701000 xent               TSX1    FLN$DISK_OPEN_NEXT
         3 000251   000253 702000 3                  TSX2    s:8398
         3 000252   000272 710000 3                  TRA     s:8408

      384     8397    4          WHENALTRETURN DO;

PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:84   
      385     8398    4            IF IO_WAIT_UTS = 0

   8398  3 000253   200010 235100                    LDA     IO_WAIT_UTS,,AUTO
         3 000254   000262 601000 3                  TNZ     s:8404

      386     8399    5             THEN DO;                      /* Enjoy (but remember) the wait      */

      387     8400    5               CALL M$TIME( GET_NOW_UTS );

   8400  3 000255   000000 630400 xsym               EPPR0   GET_NOW_UTS
         3 000256   020004 713400                    CLIMB   8196
         3 000257   402000 401760                    pmme    nvectors=5

      388     8401    5               IO_WAIT_UTS = NOW_UTS;

   8401  3 000260   000000 235000 xsym               LDA     NOW_UTS
         3 000261   200010 755100                    STA     IO_WAIT_UTS,,AUTO

      389     8402    5               END;

      390     8403    5            DO INHIBIT;     /* To keep I/O from completing just before M$TIME    */

      391     8404    5               IF OUTSTANDING_IO.NOT_READY(FIRST_USED_IX)

   8404  3 000262   000000 236200 xsym               LDQ   ! FIRST_USED_IX
         3 000263   000006 402207                    MPY   ! 6,DL
         3 000264   000002 236206 xsym               LDQ   ! OUTSTANDING_IO+2,QL
         3 000265   000001 316207                    CANQ  ! 1,DL
         3 000266   000272 600200 3                  TZE   ! s:8408

      392     8405    5                THEN CALL M$WAIT( WAIT_1 );

   8405  3 000267   000000 630600 xsym               EPPR0 ! WAIT_1
         3 000270   020006 713600                    CLIMB ! 8198
         3 000271   400400 401760                    pmme    nvectors=2

      393     8406    5               END;
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:85   

      394     8407    4            END;

      395     8408    3         IF SPIN >= 1000         /* Just to keep from doing too many M$TIMEs     */

   8408  3 000272   200011 235100                    LDA     SPIN,,AUTO
         3 000273   001750 115007                    CMPA    1000,DL
         3 000274   000306 602000 3                  TNC     s:8413

      396     8409    4          THEN DO;

      397     8410    4            SPIN = 0;

   8410  3 000275   200011 450100                    STZ     SPIN,,AUTO

      398     8411    4            CALL FLI$SPIN_CHK( IO_WAIT_UTS, FIRST_USED_IX );

   8411  3 000276   000002 236000 4                  LDQ     2
         3 000277   200015 756100                    STQ     TEMP+2,,AUTO
         3 000300   200010 630500                    EPPR0   IO_WAIT_UTS,,AUTO
         3 000301   200014 450500                    STP0    TEMP+1,,AUTO
         3 000302   200014 630500                    EPPR0   TEMP+1,,AUTO
         3 000303   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000304   000000 701000 xent               TSX1    FLI$SPIN_CHK
         3 000305   000000 011000                    NOP     0

      399     8412    4            END;

      400     8413    3         END;

   8413  3 000306   000000 236000 xsym               LDQ     FIRST_USED_IX
         3 000307   000006 402007                    MPY     6,DL
         3 000310   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000311   000001 316007                    CANQ    1,DL
         3 000312   000244 601000 3                  TNZ     s:8395

      401     8414
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:86   
      402     8415    2      IF IO_WAIT_UTS > 0

   8415  3 000313   200010 235100                    LDA     IO_WAIT_UTS,,AUTO
         3 000314   000335 600000 3                  TZE     s:8422

      403     8416    3       THEN DO;

      404     8417    3         CALL M$TIME( GET_NOW_UTS );

   8417  3 000315   000000 630400 xsym               EPPR0   GET_NOW_UTS
         3 000316   020004 713400                    CLIMB   8196
         3 000317   402000 401760                    pmme    nvectors=5

      405     8418    3         CALL XUD$UTS_DIFF(TEMP,NOW_UTS,IO_WAIT_UTS);

   8418  3 000320   200010 630500                    EPPR0   IO_WAIT_UTS,,AUTO
         3 000321   200016 450500                    STP0    TEMP+3,,AUTO
         3 000322   000003 236000 4                  LDQ     3
         3 000323   200015 756100                    STQ     TEMP+2,,AUTO
         3 000324   200013 631500                    EPPR1   TEMP,,AUTO
         3 000325   200014 451500                    STP1    TEMP+1,,AUTO
         3 000326   200014 630500                    EPPR0   TEMP+1,,AUTO
         3 000327   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000330   000000 701000 xent               TSX1    XUD$UTS_DIFF
         3 000331   000000 011000                    NOP     0

      406     8419    3         ACCUMULATED_SPIN_TIME = ACCUMULATED_SPIN_TIME + TEMP;

   8419  3 000332   000000 236000 xsym               LDQ     ACCUMULATED_SPIN_TIME
         3 000333   200013 036100                    ADLQ    TEMP,,AUTO
         3 000334   000000 756000 xsym               STQ     ACCUMULATED_SPIN_TIME

      407     8420    3         END;

      408     8421
      409     8422    2      RETURN;

PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:87   
   8422  3 000335   200012 221300                    LDX1  ! SPIN+1,,AUTO
         3 000336   000001 702211                    TSX2  ! 1,X1
      410     8423
      411     8424    2   END FLI_IO_SPIN;
      412     8425
      413     8426    1   END FLI$DISK_READ;
      414     8427        %EOD;

PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:88   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLI$DISK_READ.
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:89   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ARS                       4-0-0/w PTR         r     1 @BIX
     3-0-0/w PTR         r     1 @BUF_                      7-0-0/w PTR         r     1 @DCB#
     6-0-0/w PTR         r     1 @ERR                      *0-0-0/w SBIN        r     1 ARS
    *0-0-0/w SBIN        r     1 BIX                       *0-0-0/d BIT (72)    r     1 BUF_
    *0-0-0/w SBIN        r     1 DCB#                      *0-0-0/w STRC        r     1 ERR
    10-0-0/w UBIN        r     1 IO_WAIT_UTS               11-0-0/w UBIN        r     1 SPIN
    13-0-0/w SBIN        r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 ACCUMULATED_SPIN_TIME
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/d STRC(504)   r     1 DISK_READ
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/w SBIN        r     1 FIRST_USED_IX              0-0-0/d STRC(432)   r     1 GET_NOW_UTS
     0-0-0/w SBIN        r     1 LAST_FREE_IX               0-0-0/w SBIN        r     1 LAST_USED_IX
     0-0-0/w SBIN        r     1 NBR_GRANS_PER_DISK_BUF
     0-0-0/w SBIN        r     1 NBR_GRANS_REMAINING        0-0-0/w SBIN        r     1 NBR_OUTSTANDING_IOS
     0-0-0/w UBIN        r     1 NOW_UTS
     0-0-0/d STRC(216)   r     1 OUTSTANDING_IO(0:8191)
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$              0-0-0/d STRC(216)   r     1 WAIT_1


   Procedure FLI$DISK_READ requires 223 words for executable code.
   Procedure FLI$DISK_READ requires 16 words of local(AUTO) storage.
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:90   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:91   
          MINI XREF LISTING

ACCUMULATED_SPIN_TIME
      7672**DCL      8419<<ASSIGN   8419>>ASSIGN
ARS
        13**DCL         6--PROC     8339<<ASSIGN
BIX
        12**DCL         6--PROC     8296<<ASSIGN   8299>>ASSIGN   8300>>ASSIGN   8301>>ASSIGN   8303>>ASSIGN
      8304>>ASSIGN   8308>>ASSIGN   8309>>ASSIGN   8313>>ASSIGN   8341<<ASSIGN   8354>>IF       8357>>ASSIGN
      8359>>ASSIGN
BUF_
        11**DCL         6--PROC     8338<<ASSIGN
DCB#
        20**DCL         6--PROC     8263>>ASSIGN   8304>>ASSIGN   8325<>CALL     8371<>CALL
DISK_CLOSE.SN_
      7323**DCL      7323--REDEF
DISK_CLOSE.UTL_
      7324**DCL      7324--REDEF
DISK_CLOSE.V.EXPIRE#
      7338**DCL      7338--REDEF
DISK_CLOSE.V.TYPE#
      7336**DCL      7336--REDEF
DISK_CLOSE.V.XTNSIZE#
      7333**DCL      7333--REDEF    7335--REDEF
DISK_FILE_SPEC.SPEC
      7688**DCL      7690--REDEF
DISK_FILE_SPEC.SPEC.START
      7689**DCL      7689--REDEF
DISK_FILE_SPEC.SPEC.STOP
      7690**DCL      7690--REDEF
DISK_FILE_SPEC$
      7687**DCL      7688--IMP-PTR
DISK_OPEN.ACSVEH_
      7188**DCL      7189--REDEF
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:92   
DISK_OPEN.ALTKEYS_
      7194**DCL      7195--REDEF    7195--REDEF
DISK_OPEN.HDR_
      7193**DCL      7194--REDEF
DISK_OPEN.TAB_
      7192**DCL      7193--REDEF
DISK_OPEN.UHL_
      7186**DCL      7187--REDEF    7187--REDEF
DISK_OPEN.V.FSN#
      7226**DCL      7226--REDEF    7226--REDEF
DISK_OPEN.WSN_
      7192**DCL      7192--REDEF
DISK_READ
      7247**DCL      8310<>CALL
DISK_READ.BUF_
      7249**DCL      8309<<ASSIGN
DISK_READ.STATION_
      7250**DCL      7251--REDEF
DISK_READ.V.DCB#
      7251**DCL      8263<<ASSIGN
DISK_READ.V.DVBYTE.REREAD#
      7262**DCL      7262--REDEF
DISK_READ.V.EVENT#
      7260**DCL      8308<<ASSIGN
DISK_READ.V.INDX#
      7260**DCL      7260--REDEF
DISK_WRITE.STATION_
      7288**DCL      7288--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      7295**DCL      7295--REDEF
DPLIST$
      7673**DCL      7685--IMP-PTR
DPRESLIST$
      7687**DCL      7687--IMP-PTR
EFTWORD
      7808**DCL      7808--REDEF
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:93   
ERR
        14**DCL         6--PROC     8262<<ASSIGN   8340<<ASSIGN   8371<>CALL
ERR.CODE
        18**DCL      8280<<ASSIGN   8362>>IF       8362>>IF       8364>>IF
FIRST_USED_IX
      7644**DCL      8275>>IF       8299<<ASSIGN   8331>>IF       8338>>ASSIGN   8339>>ASSIGN   8340>>ASSIGN
      8341>>ASSIGN   8351<<ASSIGN   8351>>ASSIGN   8352>>IF       8356>>ASSIGN   8394>>DOWHILE  8404>>IF
      8411<>CALL
FLI$FREE_SPIN
      8215**DCL-ENT  8285--CALL
FLI$IO_CHURN
      8213**DCL-ENT  8325--CALL
FLI$RPT_ERR
      8214**DCL-ENT  8314--CALL     8371--CALL
FLI$SPIN_CHK
      8216**DCL-ENT  8411--CALL
FLI_IO_SPIN
      8376**PROC     8332--CALL
FLN$DISK_OPEN_NEXT
      8217**DCL-ENT  8396--CALL
FPT_EXIT.V.STEPCC#
      7113**DCL      7113--REDEF
GET_NOW_UTS
      7664**DCL      8400<>CALL     8417<>CALL
IO_WAIT_UTS
      8255**DCL      8391<<ASSIGN   8398>>IF       8401<<ASSIGN   8411<>CALL     8415>>IF       8418<>CALL
LAST_FREE_IX
      7644**DCL      8283>>DOWHILE  8296>>ASSIGN   8297<<ASSIGN   8297>>ASSIGN
LAST_USED_IX
      7644**DCL      8287>>IF       8300<<ASSIGN   8354>>IF       8356<<ASSIGN
M$READ
      6641**DCL-ENT  8310--CALL
M$TIME
      6707**DCL-ENT  8400--CALL     8417--CALL
M$WAIT
      6698**DCL-ENT  8405--CALL
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:94   
M$XXX
      6652**DCL-ENT  8289--CALL     8315--CALL     8355--CALL
NBR_GRANS_PER_DISK_BUF
      7645**DCL      8306>>ASSIGN
NBR_GRANS_REMAINING
      7645**DCL      8278>>IF       8306<<ASSIGN   8306>>ASSIGN
NBR_OUTSTANDING_IOS
      7644**DCL      8287>>IF       8305<<ASSIGN   8305>>ASSIGN   8312<<ASSIGN   8312>>ASSIGN
NOW_UTS
      7652**DCL      8401>>ASSIGN   8418<>CALL
OUTSTANDING_IO.ARS
      7651**DCL      8339>>ASSIGN
OUTSTANDING_IO.BUF_
      7650**DCL      8309>>ASSIGN   8338>>ASSIGN
OUTSTANDING_IO.DCB#
      7650**DCL      8304<<ASSIGN
OUTSTANDING_IO.ERR
      7651**DCL      8340>>ASSIGN
OUTSTANDING_IO.NEXT_IX
      7651**DCL      8297>>ASSIGN   8301<<ASSIGN   8351>>ASSIGN   8357<<ASSIGN
OUTSTANDING_IO.NOT_READY
      7651**DCL      8303<<ASSIGN   8313<<ASSIGN   8331>>IF       8394>>DOWHILE  8404>>IF
OUTSTANDING_IO.RELEASED
      7650**DCL      8359<<ASSIGN
PRE_RET_CLOSE.SN_
      8051**DCL      8051--REDEF
PRE_RET_CLOSE.UTL_
      8052**DCL      8052--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      8066**DCL      8066--REDEF
PRE_RET_CLOSE.V.TYPE#
      8064**DCL      8064--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      8061**DCL      8061--REDEF    8063--REDEF
PRE_RET_OPEN.ACSVEH_
      7986**DCL      7987--REDEF
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:95   
PRE_RET_OPEN.ALTKEYS_
      7992**DCL      7993--REDEF    7993--REDEF
PRE_RET_OPEN.HDR_
      7991**DCL      7992--REDEF
PRE_RET_OPEN.TAB_
      7990**DCL      7991--REDEF
PRE_RET_OPEN.UHL_
      7984**DCL      7985--REDEF    7985--REDEF
PRE_RET_OPEN.V.FSN#
      8024**DCL      8024--REDEF    8024--REDEF
PRE_RET_OPEN.WSN_
      7990**DCL      7990--REDEF
PRE_RET_READ.STATION_
      7841**DCL      7842--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      7853**DCL      7853--REDEF
PRE_RET_READ.V.INDX#
      7851**DCL      7851--REDEF
PRE_RET_WRITE.STATION_
      7879**DCL      7879--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      7886**DCL      7886--REDEF
RET_CMDS_NAME.L#
      8095**DCL      8095--IMP-SIZ
SNVECLIST$
      7627**DCL      7627--IMP-PTR
SPEC.START
      7691**DCL      7692--REDEF
SPEC.STOP
      7692**DCL      7693--REDEF
SPECCHARS
      7691**DCL      7691--REDEF
SPIN
      8256**DCL      8393<<ASSIGN   8395<<ASSIGN   8395>>ASSIGN   8408>>IF       8410<<ASSIGN
TAPE_CLOSE.SN_
      7544**DCL      7544--REDEF
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:96   
TAPE_CLOSE.UTL_
      7545**DCL      7545--REDEF
TAPE_CLOSE.V.EXPIRE#
      7559**DCL      7559--REDEF
TAPE_CLOSE.V.TYPE#
      7557**DCL      7557--REDEF
TAPE_CLOSE.V.XTNSIZE#
      7554**DCL      7554--REDEF    7556--REDEF
TAPE_DCBLIST$
      7100**DCL      7100--IMP-PTR
TAPE_OPEN.ACSVEH_
      7409**DCL      7410--REDEF
TAPE_OPEN.ALTKEYS_
      7415**DCL      7416--REDEF    7416--REDEF
TAPE_OPEN.HDR_
      7414**DCL      7415--REDEF
TAPE_OPEN.TAB_
      7413**DCL      7414--REDEF
TAPE_OPEN.UHL_
      7407**DCL      7408--REDEF    7408--REDEF
TAPE_OPEN.V.FSN#
      7447**DCL      7447--REDEF    7447--REDEF
TAPE_OPEN.WSN_
      7413**DCL      7413--REDEF
TAPE_READ.STATION_
      7471**DCL      7472--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      7483**DCL      7483--REDEF
TAPE_READ.V.INDX#
      7481**DCL      7481--REDEF
TAPE_WRITE.STATION_
      7509**DCL      7509--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      7516**DCL      7516--REDEF
TEMP IN PROCEDURE FLI_IO_SPIN
      8384**DCL      8418<>CALL     8419>>ASSIGN
PL6.E3A0      #005=FLI$DISK_READ File=FLI$DISK.:E05TSI                           TUE 07/29/97 15:50 Page:97   
TVECTOR.W2
      7640**DCL      7641--REDEF
WAIT_1
      7778**DCL      8405<>CALL
XUD$UTS_DIFF
      8219**DCL-ENT  8418--CALL

PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:98   
      415        1        /*T***********************************************************/
      416        2        /*T*                                                         */
      417        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      418        4        /*T*                                                         */
      419        5        /*T***********************************************************/
      420        6        FLI$IO_CHURN: PROC( DCB# );
      421        7        /*F*  NAME: FLI$IO_CHURN
      422        8              PURPOSE: Keeps the disk I/Os moving as long as buffers are
      423        9                 available.
      424       10         */
      425       11
      426       12    1   DCL DCB# SBIN ALIGNED;                  /* DCB to start I/Os through          */
      427       13
      428       14         /***
      429       15          *** INCLUDE
      430       16          ***/
      431       17
      432       18        %INCLUDE CP_6;
      433     5577        %INCLUDE FLI_DATA_R;
      434     6991
      435     6992         /***
      436     6993          *** ENTRY
      437     6994          ***/
      438     6995
      439     6996    1   DCL FLI$RPT_ERR ENTRY(5);
      440     6997
      441     6998         /***
      442     6999          *** AUTO
      443     7000          ***/
      444     7001
      445     7002    1   DCL BIX SBIN AUTO;
      446     7003
      447     7004        /****************************************/
      448     7005
      449     7006    1      DISK_READ.V.DCB# = DCB#;
      450     7007
      451     7008         /***
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:99   
      452     7009          *** Start an I/O for each free buffer.
      453     7010          ***/
      454     7011
      455     7012    2      DO WHILE('1'B);
      456     7013    3         DO INHIBIT;
      457     7014    3            IF LAST_FREE_IX = 0 OR USED_BUF_ERR OR NBR_GRANS_REMAINING <= 0
      458     7015    3             THEN RETURN;                  /* No buffers available               */
      459     7016                 /***
      460     7017                  *** Note that the following code is almost identical to
      461     7018                  *** code in FLI$DISK_READ except that the new outstanding
      462     7019                  *** I/O is linked onto the end of the outstanding I/O
      463     7020                  *** used chain.
      464     7021                  ***/
      465     7022                                                /*** Unlink from free chain ***/
      466     7023    3            BIX = LAST_FREE_IX;
      467     7024    3            LAST_FREE_IX = OUTSTANDING_IO.NEXT_IX(LAST_FREE_IX);
      468     7025                                                /*** Link onto used chain ***/
      469     7026    3            OUTSTANDING_IO.NEXT_IX(LAST_USED_IX) = BIX;
      470     7027    3            LAST_USED_IX = BIX;
      471     7028    3            OUTSTANDING_IO.NEXT_IX(BIX) = 0;
      472     7029                                                /*** Get ready for I/O ***/
      473     7030    3            OUTSTANDING_IO.NOT_READY(BIX) = '1'B;
      474     7031    3            OUTSTANDING_IO.DCB#(BIX) = DCB#;
      475     7032    3            NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS + 1;
      476     7033    3            NBR_GRANS_REMAINING = NBR_GRANS_REMAINING - NBR_GRANS_PER_DISK_BUF;
      477     7034                                                /*** Set up FPT correctly             */
      478     7035    3            DISK_READ.V.EVENT# = BIX;
      479     7036    3            DISK_READ.BUF_ = OUTSTANDING_IO.BUF_(BIX);
      480     7037    3            CALL M$READ( DISK_READ )
      481     7038    4             WHENALTRETURN DO;
      482     7039    4               NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS - 1;
      483     7040    4               OUTSTANDING_IO.NOT_READY(BIX) = '0'B;
      484     7041    4               CALL FLI$RPT_ERR;
      485     7042    4               CALL M$XXX;
      486     7043    4               END;
      487     7044    3            END;
      488     7045    2         END;
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:100  
      489     7046
      490     7047    1   END FLI$IO_CHURN;
      491     7048        %EOD;

PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:101  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$IO_CHURN.

   Procedure FLI$IO_CHURN requires 58 words for executable code.
   Procedure FLI$IO_CHURN requires 6 words of local(AUTO) storage.

PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:102  

 Object Unit name= FLI$IO_CHURN                               File name= FLI$DISK.:E05TOU
 UTS= JUL 29 '97 15:51:14.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none     6      6  FLI$IO_CHURN
    3   Proc  even  none    58     72  FLI$IO_CHURN
    4  RoData even  none     1      1  FLI$IO_CHURN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        1  FLI$IO_CHURN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 FLI$RPT_ERR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:103  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         DISK_READ
     SNVECLIST$                            NBR_OUTSTANDING_IOS                   LAST_FREE_IX
     LAST_USED_IX                          USED_BUF_ERR                          NBR_GRANS_REMAINING
     NBR_GRANS_PER_DISK_BUF                OUTSTANDING_IO                        DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     EFTWORD                               M$PRE_RET                             RET_CMDS_NAME
     B_VECTNIL
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:104  


      415        1        /*T***********************************************************/
      416        2        /*T*                                                         */
      417        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      418        4        /*T*                                                         */
      419        5        /*T***********************************************************/
      420        6        FLI$IO_CHURN: PROC( DCB# );

      6  3 000000   000000 700200 xent  FLI$IO_CHURN TSX0  ! X66_AUTO_1
         3 000001   000006 000001                    ZERO    6,1

      421        7        /*F*  NAME: FLI$IO_CHURN
      422        8              PURPOSE: Keeps the disk I/Os moving as long as buffers are
      423        9                 available.
      424       10         */
      425       11
      426       12    1   DCL DCB# SBIN ALIGNED;                  /* DCB to start I/Os through          */
      427       13
      428       14         /***
      429       15          *** INCLUDE
      430       16          ***/
      431       17
      432       18        %INCLUDE CP_6;
      433     5577        %INCLUDE FLI_DATA_R;
      434     6991
      435     6992         /***
      436     6993          *** ENTRY
      437     6994          ***/
      438     6995
      439     6996    1   DCL FLI$RPT_ERR ENTRY(5);
      440     6997
      441     6998         /***
      442     6999          *** AUTO
      443     7000          ***/
      444     7001
      445     7002    1   DCL BIX SBIN AUTO;
      446     7003
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:105  
      447     7004        /****************************************/
      448     7005
      449     7006    1      DISK_READ.V.DCB# = DCB#;

   7006  3 000002   200003 470500                    LDP0    @DCB#,,AUTO
         3 000003   000000 720100                    LXL0    0,,PR0
         3 000004   000010 740000 xsym               STX0    DISK_READ+8

      450     7007
      451     7008         /***
      452     7009          *** Start an I/O for each free buffer.
      453     7010          ***/
      454     7011
      455     7012    2      DO WHILE('1'B);

      456     7013    3         DO INHIBIT;

      457     7014    3            IF LAST_FREE_IX = 0 OR USED_BUF_ERR OR NBR_GRANS_REMAINING <= 0

   7014  3 000005   000000 235200 xsym               LDA   ! LAST_FREE_IX
         3 000006   000013 600200 3                  TZE   ! s:7015
         3 000007   000000 236200 xsym               LDQ   ! USED_BUF_ERR
         3 000010   000013 601200 3                  TNZ   ! s:7015
         3 000011   000000 235200 xsym               LDA   ! NBR_GRANS_REMAINING
         3 000012   000014 605600 3                  TPNZ  ! s:7023

      458     7015    3             THEN RETURN;                  /* No buffers available               */

   7015  3 000013   000000 702200 xent               TSX2  ! X66_ARET

      459     7016                 /***
      460     7017                  *** Note that the following code is almost identical to
      461     7018                  *** code in FLI$DISK_READ except that the new outstanding
      462     7019                  *** I/O is linked onto the end of the outstanding I/O
      463     7020                  *** used chain.
      464     7021                  ***/
      465     7022                                                /*** Unlink from free chain ***/
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:106  
      466     7023    3            BIX = LAST_FREE_IX;

   7023  3 000014   000000 235200 xsym               LDA   ! LAST_FREE_IX
         3 000015   200004 755300                    STA   ! BIX,,AUTO

      467     7024    3            LAST_FREE_IX = OUTSTANDING_IO.NEXT_IX(LAST_FREE_IX);

   7024  3 000016   000000 236200 xsym               LDQ   ! LAST_FREE_IX
         3 000017   000006 402207                    MPY   ! 6,DL
         3 000020   000004 235206 xsym               LDA   ! OUTSTANDING_IO+4,QL
         3 000021   000000 755200 xsym               STA   ! LAST_FREE_IX

      468     7025                                                /*** Link onto used chain ***/
      469     7026    3            OUTSTANDING_IO.NEXT_IX(LAST_USED_IX) = BIX;

   7026  3 000022   000000 236200 xsym               LDQ   ! LAST_USED_IX
         3 000023   000006 402207                    MPY   ! 6,DL
         3 000024   200004 235300                    LDA   ! BIX,,AUTO
         3 000025   000004 755206 xsym               STA   ! OUTSTANDING_IO+4,QL

      470     7027    3            LAST_USED_IX = BIX;

   7027  3 000026   000000 755200 xsym               STA   ! LAST_USED_IX

      471     7028    3            OUTSTANDING_IO.NEXT_IX(BIX) = 0;

   7028  3 000027   200004 236300                    LDQ   ! BIX,,AUTO
         3 000030   000006 402207                    MPY   ! 6,DL
         3 000031   000004 450206 xsym               STZ   ! OUTSTANDING_IO+4,QL

      472     7029                                                /*** Get ready for I/O ***/
      473     7030    3            OUTSTANDING_IO.NOT_READY(BIX) = '1'B;

   7030  3 000032   000000 620206                    EAX0  ! 0,QL
         3 000033   000001 236207                    LDQ   ! 1,DL
         3 000034   000002 256210 xsym               ORSQ  ! OUTSTANDING_IO+2,X0

PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:107  
      474     7031    3            OUTSTANDING_IO.DCB#(BIX) = DCB#;

   7031  3 000035   200003 470700                    LDP0  ! @DCB#,,AUTO
         3 000036   000000 721300                    LXL1  ! 0,,PR0
         3 000037   000002 741210 xsym               STX1  ! OUTSTANDING_IO+2,X0

      475     7032    3            NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS + 1;

   7032  3 000040   000000 054200 xsym               AOS   ! NBR_OUTSTANDING_IOS

      476     7033    3            NBR_GRANS_REMAINING = NBR_GRANS_REMAINING - NBR_GRANS_PER_DISK_BUF;

   7033  3 000041   000000 236200 xsym               LDQ   ! NBR_GRANS_REMAINING
         3 000042   000000 136200 xsym               SBLQ  ! NBR_GRANS_PER_DISK_BUF
         3 000043   000000 756200 xsym               STQ   ! NBR_GRANS_REMAINING

      477     7034                                                /*** Set up FPT correctly             */
      478     7035    3            DISK_READ.V.EVENT# = BIX;

   7035  3 000044   200004 235300                    LDA   ! BIX,,AUTO
         3 000045   000011 755200 xsym               STA   ! DISK_READ+9

      479     7036    3            DISK_READ.BUF_ = OUTSTANDING_IO.BUF_(BIX);

   7036  3 000046   000000 237210 xsym               LDAQ  ! OUTSTANDING_IO,X0
         3 000047   000004 757200 xsym               STAQ  ! DISK_READ+4

      480     7037    3            CALL M$READ( DISK_READ )

   7037  3 000050   000000 630600 xsym               EPPR0 ! DISK_READ
         3 000051   440000 713600                    CLIMB ! alt,read
         3 000052   401400 401760                    pmme    nvectors=4
         3 000053   000055 702200 3                  TSX2  ! s:7039
         3 000054   000071 710200 3                  TRA   ! s:7045

      481     7038    4             WHENALTRETURN DO;

PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:108  
      482     7039    4               NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS - 1;

   7039  3 000055   000001 336207                    LCQ   ! 1,DL
         3 000056   000000 056200 xsym               ASQ   ! NBR_OUTSTANDING_IOS

      483     7040    4               OUTSTANDING_IO.NOT_READY(BIX) = '0'B;

   7040  3 000057   200004 236300                    LDQ   ! BIX,,AUTO
         3 000060   000006 402207                    MPY   ! 6,DL
         3 000061   000000 620206                    EAX0  ! 0,QL
         3 000062   000000 236200 4                  LDQ   ! 0
         3 000063   000002 356210 xsym               ANSQ  ! OUTSTANDING_IO+2,X0

      484     7041    4               CALL FLI$RPT_ERR;

   7041  3 000064   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         3 000065   000000 701200 xent               TSX1  ! FLI$RPT_ERR
         3 000066   000000 011200                    NOP   ! 0

      485     7042    4               CALL M$XXX;

   7042  3 000067   000003 713600                    CLIMB ! 3
         3 000070   000000 401760                    pmme    nvectors=0

      486     7043    4               END;

      487     7044    3            END;

      488     7045    2         END;

   7045  3 000071   000005 710000 3                  TRA     s:7014
      489     7046
      490     7047    1   END FLI$IO_CHURN;
      491     7048        %EOD;

PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:109  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$IO_CHURN.
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:110  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCB#                      4-0-0/w SBIN        r     1 BIX
    *0-0-0/w SBIN        r     1 DCB#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/d STRC(504)   r     1 DISK_READ
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/w SBIN        r     1 LAST_FREE_IX               0-0-0/w SBIN        r     1 LAST_USED_IX
     0-0-0/w SBIN        r     1 NBR_GRANS_PER_DISK_BUF
     0-0-0/w SBIN        r     1 NBR_GRANS_REMAINING        0-0-0/w SBIN        r     1 NBR_OUTSTANDING_IOS
     0-0-0/d STRC(216)   r     1 OUTSTANDING_IO(0:8191)
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$              0-0-0/b BIT         r     1 USED_BUF_ERR


   Procedure FLI$IO_CHURN requires 58 words for executable code.
   Procedure FLI$IO_CHURN requires 6 words of local(AUTO) storage.
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:111  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:112  
          MINI XREF LISTING

BIX
      7002**DCL      7023<<ASSIGN   7026>>ASSIGN   7027>>ASSIGN   7028>>ASSIGN   7030>>ASSIGN   7031>>ASSIGN
      7035>>ASSIGN   7036>>ASSIGN   7040>>ASSIGN
DCB#
        12**DCL         6--PROC     7006>>ASSIGN   7031>>ASSIGN
DISK_CLOSE.SN_
      6188**DCL      6188--REDEF
DISK_CLOSE.UTL_
      6189**DCL      6189--REDEF
DISK_CLOSE.V.EXPIRE#
      6203**DCL      6203--REDEF
DISK_CLOSE.V.TYPE#
      6201**DCL      6201--REDEF
DISK_CLOSE.V.XTNSIZE#
      6198**DCL      6198--REDEF    6200--REDEF
DISK_FILE_SPEC.SPEC
      6553**DCL      6555--REDEF
DISK_FILE_SPEC.SPEC.START
      6554**DCL      6554--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6555**DCL      6555--REDEF
DISK_FILE_SPEC$
      6552**DCL      6553--IMP-PTR
DISK_OPEN.ACSVEH_
      6053**DCL      6054--REDEF
DISK_OPEN.ALTKEYS_
      6059**DCL      6060--REDEF    6060--REDEF
DISK_OPEN.HDR_
      6058**DCL      6059--REDEF
DISK_OPEN.TAB_
      6057**DCL      6058--REDEF
DISK_OPEN.UHL_
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:113  
      6051**DCL      6052--REDEF    6052--REDEF
DISK_OPEN.V.FSN#
      6091**DCL      6091--REDEF    6091--REDEF
DISK_OPEN.WSN_
      6057**DCL      6057--REDEF
DISK_READ
      6112**DCL      7037<>CALL
DISK_READ.BUF_
      6114**DCL      7036<<ASSIGN
DISK_READ.STATION_
      6115**DCL      6116--REDEF
DISK_READ.V.DCB#
      6116**DCL      7006<<ASSIGN
DISK_READ.V.DVBYTE.REREAD#
      6127**DCL      6127--REDEF
DISK_READ.V.EVENT#
      6125**DCL      7035<<ASSIGN
DISK_READ.V.INDX#
      6125**DCL      6125--REDEF
DISK_WRITE.STATION_
      6153**DCL      6153--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6160**DCL      6160--REDEF
DPLIST$
      6538**DCL      6550--IMP-PTR
DPRESLIST$
      6552**DCL      6552--IMP-PTR
EFTWORD
      6673**DCL      6673--REDEF
FLI$RPT_ERR
      6996**DCL-ENT  7041--CALL
FPT_EXIT.V.STEPCC#
      5978**DCL      5978--REDEF
LAST_FREE_IX
      6509**DCL      7014>>IF       7023>>ASSIGN   7024<<ASSIGN   7024>>ASSIGN
LAST_USED_IX
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:114  
      6509**DCL      7026>>ASSIGN   7027<<ASSIGN
M$READ
      5506**DCL-ENT  7037--CALL
M$XXX
      5517**DCL-ENT  7042--CALL
NBR_GRANS_PER_DISK_BUF
      6510**DCL      7033>>ASSIGN
NBR_GRANS_REMAINING
      6510**DCL      7014>>IF       7033<<ASSIGN   7033>>ASSIGN
NBR_OUTSTANDING_IOS
      6509**DCL      7032<<ASSIGN   7032>>ASSIGN   7039<<ASSIGN   7039>>ASSIGN
OUTSTANDING_IO.BUF_
      6515**DCL      7036>>ASSIGN
OUTSTANDING_IO.DCB#
      6515**DCL      7031<<ASSIGN
OUTSTANDING_IO.NEXT_IX
      6516**DCL      7024>>ASSIGN   7026<<ASSIGN   7028<<ASSIGN
OUTSTANDING_IO.NOT_READY
      6516**DCL      7030<<ASSIGN   7040<<ASSIGN
PRE_RET_CLOSE.SN_
      6916**DCL      6916--REDEF
PRE_RET_CLOSE.UTL_
      6917**DCL      6917--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6931**DCL      6931--REDEF
PRE_RET_CLOSE.V.TYPE#
      6929**DCL      6929--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6926**DCL      6926--REDEF    6928--REDEF
PRE_RET_OPEN.ACSVEH_
      6851**DCL      6852--REDEF
PRE_RET_OPEN.ALTKEYS_
      6857**DCL      6858--REDEF    6858--REDEF
PRE_RET_OPEN.HDR_
      6856**DCL      6857--REDEF
PRE_RET_OPEN.TAB_
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:115  
      6855**DCL      6856--REDEF
PRE_RET_OPEN.UHL_
      6849**DCL      6850--REDEF    6850--REDEF
PRE_RET_OPEN.V.FSN#
      6889**DCL      6889--REDEF    6889--REDEF
PRE_RET_OPEN.WSN_
      6855**DCL      6855--REDEF
PRE_RET_READ.STATION_
      6706**DCL      6707--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6718**DCL      6718--REDEF
PRE_RET_READ.V.INDX#
      6716**DCL      6716--REDEF
PRE_RET_WRITE.STATION_
      6744**DCL      6744--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6751**DCL      6751--REDEF
RET_CMDS_NAME.L#
      6960**DCL      6960--IMP-SIZ
SNVECLIST$
      6492**DCL      6492--IMP-PTR
SPEC.START
      6556**DCL      6557--REDEF
SPEC.STOP
      6557**DCL      6558--REDEF
SPECCHARS
      6556**DCL      6556--REDEF
TAPE_CLOSE.SN_
      6409**DCL      6409--REDEF
TAPE_CLOSE.UTL_
      6410**DCL      6410--REDEF
TAPE_CLOSE.V.EXPIRE#
      6424**DCL      6424--REDEF
TAPE_CLOSE.V.TYPE#
      6422**DCL      6422--REDEF
TAPE_CLOSE.V.XTNSIZE#
PL6.E3A0      #006=FLI$IO_CHURN File=FLI$DISK.:E05TSI                            TUE 07/29/97 15:51 Page:116  
      6419**DCL      6419--REDEF    6421--REDEF
TAPE_DCBLIST$
      5965**DCL      5965--IMP-PTR
TAPE_OPEN.ACSVEH_
      6274**DCL      6275--REDEF
TAPE_OPEN.ALTKEYS_
      6280**DCL      6281--REDEF    6281--REDEF
TAPE_OPEN.HDR_
      6279**DCL      6280--REDEF
TAPE_OPEN.TAB_
      6278**DCL      6279--REDEF
TAPE_OPEN.UHL_
      6272**DCL      6273--REDEF    6273--REDEF
TAPE_OPEN.V.FSN#
      6312**DCL      6312--REDEF    6312--REDEF
TAPE_OPEN.WSN_
      6278**DCL      6278--REDEF
TAPE_READ.STATION_
      6336**DCL      6337--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6348**DCL      6348--REDEF
TAPE_READ.V.INDX#
      6346**DCL      6346--REDEF
TAPE_WRITE.STATION_
      6374**DCL      6374--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6381**DCL      6381--REDEF
TVECTOR.W2
      6505**DCL      6506--REDEF
USED_BUF_ERR
      6510**DCL      7014>>IF

PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:117  
      492        1        /*T***********************************************************/
      493        2        /*T*                                                         */
      494        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      495        4        /*T*                                                         */
      496        5        /*T***********************************************************/
      497        6        FLI$DISK_WRITE: PROC( BUF_, BIX, ARS, ERR, DCB# ) ALTRET;
      498        7        /*F*  NAME: FLI$DISK_WRITE
      499        8              PURPOSE: No wait writes to disk.
      500        9         */
      501       10
      502       11    1   DCL BUF_ BIT(72) DALIGNED;              /* Buffer to write if BIX unspecified */
      503       12    1   DCL BIX SBIN ALIGNED;                   /* Index of buffer to write           */
      504       13    1   DCL ARS SBIN ALIGNED;                   /* Number of bytes to write           */
      505       14    1   DCL ERR BIT(36) ALIGNED;           /* Returned error code if BIX unspecified  */
      506       15    1   DCL DCB# SBIN ALIGNED;             /* DCB to write through for no-wait I/O    */
      507       16
      508       17         /***
      509       18          *** INCLUDE
      510       19          ***/
      511       20
      512       21        %INCLUDE CP_6;
      513     5580        %INCLUDE FLI_DATA_R;
      514     6994
      515     6995         /***
      516     6996          *** ENTRY
      517     6997          ***/
      518     6998
      519     6999    1   DCL FLI$RPT_ERR ENTRY(5);
      520     7000    1   DCL FLI$RETURN_BUF ENTRY(1);
      521     7001
      522     7002         /***
      523     7003          *** BASED
      524     7004          ***/
      525     7005
      526     7006        %B$TCB;
      527     7009        %B$ALT;
      528     7017
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:118  
      529     7018        /****************************************/
      530     7019
      531     7020         /***
      532     7021          *** If not using a standard buffer, use wait I/O.
      533     7022          ***/
      534     7023
      535     7024    1      IF ADDR(BIX) = ADDR(NIL)
      536     7025    2       THEN DO;
      537     7026    2         DISK_WRITE.BUF_ = BUF_;
      538     7027    2         DISK_WRITE.V.WAIT# = '1'B;
      539     7028    2         DISK_WRITE.V.EVENT# = 0;
      540     7029    2         END;
      541     7030    2       ELSE DO;
      542     7031    2         IF NOT OUTSTANDING_IO.RELEASED(BIX)
      543     7032    2          THEN CALL M$XXX;                 /* Must be a released buffer          */
      544     7033    2         DISK_WRITE.BUF_ = OUTSTANDING_IO.BUF_(BIX);
      545     7034    2         DISK_WRITE.V.WAIT# = '0'B;
      546     7035    2         DISK_WRITE.V.EVENT# = BIX;
      547     7036    2         OUTSTANDING_IO.NOT_READY(BIX) = '1'B;
      548     7037    2         OUTSTANDING_IO.DCB#(BIX) = DCB#;
      549     7038    2         DISK_WRITE.V.DCB# = DCB#;
      550     7039    3         DO INHIBIT;
      551     7040    3            NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS + 1;
      552     7041    3            END;
      553     7042    2         END;
      554     7043
      555     7044    1      DISK_WRITE.BUF_.BOUND = ARS - 1;
      556     7045
      557     7046    1      CALL M$WRITE( DISK_WRITE )
      558     7047    2       WHENALTRETURN DO;
      559     7048    2         CALL FLI$RPT_ERR;
      560     7049    2         IF ADDR(BIX) ~= ADDR(NIL)
      561     7050    3          THEN DO;
      562     7051    3            NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS - 1;
      563     7052    3            CALL M$XXX;
      564     7053    3            END;
      565     7054    2         ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:119  
      566     7055    2         ALTRETURN;
      567     7056    2         END;
      568     7057
      569     7058         /***
      570     7059          *** If no-wait I/O, return info.
      571     7060          ***/
      572     7061
      573     7062    1      IF ADDR(BIX) = ADDR(NIL)
      574     7063    1       THEN ERR = '0'B;
      575     7064
      576     7065    1      RETURN;
      577     7066
      578     7067    1   END FLI$DISK_WRITE;

PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:120  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_WRITE.

   Procedure FLI$DISK_WRITE requires 80 words for executable code.
   Procedure FLI$DISK_WRITE requires 8 words of local(AUTO) storage.

    No errors detected in file FLI$DISK.:E05TSI    .

PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:121  

 Object Unit name= FLI$DISK_WRITE                             File name= FLI$DISK.:E05TOU
 UTS= JUL 29 '97 15:51:33.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none     6      6  FLI$DISK_WRITE
    3   Proc  even  none    80    120  FLI$DISK_WRITE
    4  RoData even  none     1      1  FLI$DISK_WRITE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        5  FLI$DISK_WRITE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 FLI$RPT_ERR
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:122  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         DISK_WRITE
     SNVECLIST$                            B$TCB$                                NBR_OUTSTANDING_IOS
     OUTSTANDING_IO                        DPLIST$                               DPRESLIST$
     DISK_FILE_SPEC$                       SPECCHARS                             EFTWORD
     M$PRE_RET                             RET_CMDS_NAME                         B_VECTNIL
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:123  


      492        1        /*T***********************************************************/
      493        2        /*T*                                                         */
      494        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      495        4        /*T*                                                         */
      496        5        /*T***********************************************************/
      497        6        FLI$DISK_WRITE: PROC( BUF_, BIX, ARS, ERR, DCB# ) ALTRET;

      6  3 000000   000000 700200 xent  FLI$DISK_WR* TSX0  ! X66_AUTO_5
         3 000001   000010 000005                    ZERO    8,5

      498        7        /*F*  NAME: FLI$DISK_WRITE
      499        8              PURPOSE: No wait writes to disk.
      500        9         */
      501       10
      502       11    1   DCL BUF_ BIT(72) DALIGNED;              /* Buffer to write if BIX unspecified */
      503       12    1   DCL BIX SBIN ALIGNED;                   /* Index of buffer to write           */
      504       13    1   DCL ARS SBIN ALIGNED;                   /* Number of bytes to write           */
      505       14    1   DCL ERR BIT(36) ALIGNED;           /* Returned error code if BIX unspecified  */
      506       15    1   DCL DCB# SBIN ALIGNED;             /* DCB to write through for no-wait I/O    */
      507       16
      508       17         /***
      509       18          *** INCLUDE
      510       19          ***/
      511       20
      512       21        %INCLUDE CP_6;
      513     5580        %INCLUDE FLI_DATA_R;
      514     6994
      515     6995         /***
      516     6996          *** ENTRY
      517     6997          ***/
      518     6998
      519     6999    1   DCL FLI$RPT_ERR ENTRY(5);
      520     7000    1   DCL FLI$RETURN_BUF ENTRY(1);
      521     7001
      522     7002         /***
      523     7003          *** BASED
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:124  
      524     7004          ***/
      525     7005
      526     7006        %B$TCB;
      527     7009        %B$ALT;
      528     7017
      529     7018        /****************************************/
      530     7019
      531     7020         /***
      532     7021          *** If not using a standard buffer, use wait I/O.
      533     7022          ***/
      534     7023
      535     7024    1      IF ADDR(BIX) = ADDR(NIL)

   7024  3 000002   200004 236100                    LDQ     @BIX,,AUTO
         3 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000004   000014 601000 3                  TNZ     s:7031

      536     7025    2       THEN DO;

      537     7026    2         DISK_WRITE.BUF_ = BUF_;

   7026  3 000005   200003 470500                    LDP0    @BUF_,,AUTO
         3 000006   000000 237100                    LDAQ    0,,PR0
         3 000007   000004 757000 xsym               STAQ    DISK_WRITE+4

      538     7027    2         DISK_WRITE.V.WAIT# = '1'B;

   7027  3 000010   400000 236007                    LDQ     -131072,DL
         3 000011   000010 256000 xsym               ORSQ    DISK_WRITE+8

      539     7028    2         DISK_WRITE.V.EVENT# = 0;

   7028  3 000012   000011 450000 xsym               STZ     DISK_WRITE+9

      540     7029    2         END;

   7029  3 000013   000056 710000 3                  TRA     s:7044
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:125  

      541     7030    2       ELSE DO;

      542     7031    2         IF NOT OUTSTANDING_IO.RELEASED(BIX)

   7031  3 000014   200004 470500                    LDP0    @BIX,,AUTO
         3 000015   000000 236100                    LDQ     0,,PR0
         3 000016   000003 402007                    MPY     3,DL
         3 000017   000001 736000                    QLS     1
         3 000020   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000021   000002 316007                    CANQ    2,DL
         3 000022   000025 601000 3                  TNZ     s:7033

      543     7032    2          THEN CALL M$XXX;                 /* Must be a released buffer          */

   7032  3 000023   000003 713400                    CLIMB   3
         3 000024   000000 401760                    pmme    nvectors=0

      544     7033    2         DISK_WRITE.BUF_ = OUTSTANDING_IO.BUF_(BIX);

   7033  3 000025   200004 470500                    LDP0    @BIX,,AUTO
         3 000026   000000 236100                    LDQ     0,,PR0
         3 000027   000003 402007                    MPY     3,DL
         3 000030   000001 736000                    QLS     1
         3 000031   000000 237006 xsym               LDAQ    OUTSTANDING_IO,QL
         3 000032   000004 757000 xsym               STAQ    DISK_WRITE+4

      545     7034    2         DISK_WRITE.V.WAIT# = '0'B;

   7034  3 000033   000000 236000 4                  LDQ     0
         3 000034   000010 356000 xsym               ANSQ    DISK_WRITE+8

      546     7035    2         DISK_WRITE.V.EVENT# = BIX;

   7035  3 000035   000000 235100                    LDA     0,,PR0
         3 000036   000011 755000 xsym               STA     DISK_WRITE+9

PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:126  
      547     7036    2         OUTSTANDING_IO.NOT_READY(BIX) = '1'B;

   7036  3 000037   000000 236100                    LDQ     0,,PR0
         3 000040   000003 402007                    MPY     3,DL
         3 000041   000001 736000                    QLS     1
         3 000042   000000 620006                    EAX0    0,QL
         3 000043   000001 236007                    LDQ     1,DL
         3 000044   000002 256010 xsym               ORSQ    OUTSTANDING_IO+2,X0

      548     7037    2         OUTSTANDING_IO.DCB#(BIX) = DCB#;

   7037  3 000045   000000 236100                    LDQ     0,,PR0
         3 000046   000003 402007                    MPY     3,DL
         3 000047   000001 736000                    QLS     1
         3 000050   200007 471500                    LDP1    @DCB#,,AUTO
         3 000051   100000 720100                    LXL0    0,,PR1
         3 000052   000002 740006 xsym               STX0    OUTSTANDING_IO+2,QL

      549     7038    2         DISK_WRITE.V.DCB# = DCB#;

   7038  3 000053   100000 720100                    LXL0    0,,PR1
         3 000054   000010 740000 xsym               STX0    DISK_WRITE+8

      550     7039    3         DO INHIBIT;

      551     7040    3            NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS + 1;

   7040  3 000055   000000 054200 xsym               AOS   ! NBR_OUTSTANDING_IOS

      552     7041    3            END;

      553     7042    2         END;

      554     7043
      555     7044    1      DISK_WRITE.BUF_.BOUND = ARS - 1;

   7044  3 000056   200005 470500                    LDP0    @ARS,,AUTO
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:127  
         3 000057   000000 236100                    LDQ     0,,PR0
         3 000060   000001 136007                    SBLQ    1,DL
         3 000061   000020 736000                    QLS     16
         3 000062   000004 676000 xsym               ERQ     DISK_WRITE+4
         3 000063   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000064   000004 656000 xsym               ERSQ    DISK_WRITE+4

      556     7045
      557     7046    1      CALL M$WRITE( DISK_WRITE )

   7046  3 000065   000000 630400 xsym               EPPR0   DISK_WRITE
         3 000066   440001 713400                    CLIMB   alt,write
         3 000067   401400 401760                    pmme    nvectors=4
         3 000070   000072 702000 3                  TSX2    s:7048
         3 000071   000112 710000 3                  TRA     s:7062

      558     7047    2       WHENALTRETURN DO;

      559     7048    2         CALL FLI$RPT_ERR;

   7048  3 000072   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000073   000000 701000 xent               TSX1    FLI$RPT_ERR
         3 000074   000000 011000                    NOP     0

      560     7049    2         IF ADDR(BIX) ~= ADDR(NIL)

   7049  3 000075   200004 236100                    LDQ     @BIX,,AUTO
         3 000076   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000077   000104 600000 3                  TZE     s:7054

      561     7050    3          THEN DO;

      562     7051    3            NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS - 1;

   7051  3 000100   000001 336007                    LCQ     1,DL
         3 000101   000000 056000 xsym               ASQ     NBR_OUTSTANDING_IOS

PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:128  
      563     7052    3            CALL M$XXX;

   7052  3 000102   000003 713400                    CLIMB   3
         3 000103   000000 401760                    pmme    nvectors=0

      564     7053    3            END;

      565     7054    2         ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   7054  3 000104   000000 470400 xsym               LDP0    B$TCB$
         3 000105   000000 471500                    LDP1    0,,PR0
         3 000106   100102 236100                    LDQ     66,,PR1
         3 000107   200006 473500                    LDP3    @ERR,,AUTO
         3 000110   300000 756100                    STQ     0,,PR3

      566     7055    2         ALTRETURN;

   7055  3 000111   000000 702200 xent               TSX2  ! X66_AALT

      567     7056    2         END;
      568     7057
      569     7058         /***
      570     7059          *** If no-wait I/O, return info.
      571     7060          ***/
      572     7061
      573     7062    1      IF ADDR(BIX) = ADDR(NIL)

   7062  3 000112   200004 236100                    LDQ     @BIX,,AUTO
         3 000113   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000114   000117 601000 3                  TNZ     s:7065

      574     7063    1       THEN ERR = '0'B;

   7063  3 000115   200006 470500                    LDP0    @ERR,,AUTO
         3 000116   000000 450100                    STZ     0,,PR0

      575     7064
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:129  
      576     7065    1      RETURN;

   7065  3 000117   000000 702200 xent               TSX2  ! X66_ARET
      577     7066
      578     7067    1   END FLI$DISK_WRITE;

PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:130  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISK_WRITE.
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:131  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ARS                       4-0-0/w PTR         r     1 @BIX
     3-0-0/w PTR         r     1 @BUF_                      7-0-0/w PTR         r     1 @DCB#
     6-0-0/w PTR         r     1 @ERR                      *0-0-0/w SBIN        r     1 ARS
    *0-0-0/w SBIN        r     1 BIX                       *0-0-0/d BIT (72)    r     1 BUF_
    *0-0-0/w SBIN        r     1 DCB#                      *0-0-0/w BIT         r     1 ERR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 DISK_FILE_SPEC$
     0-0-0/d STRC(432)   r     1 DISK_WRITE                 0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/w SBIN        r     1 NBR_OUTSTANDING_IOS
     0-0-0/d STRC(216)   r     1 OUTSTANDING_IO(0:8191)
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB


   Procedure FLI$DISK_WRITE requires 80 words for executable code.
   Procedure FLI$DISK_WRITE requires 8 words of local(AUTO) storage.
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:132  

    No errors detected in file FLI$DISK.:E05TSI    .
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:133  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:134  
          MINI XREF LISTING

ARS
        13**DCL         6--PROC     7044>>ASSIGN
B$ALT.CODE
      7011**DCL      7011--REDEF    7012--REDEF    7012--REDEF
B$ALT.ERR
      7012**DCL      7054>>ASSIGN
B$ALT.ERR.ERR#
      7013**DCL      7013--REDEF
B$ALT.EVID
      7012**DCL      7012--REDEF    7012--REDEF
B$TCB.ALT$
      7007**DCL      7054>>ASSIGN
B$TCB$
      6511**DCL      7054>>ASSIGN
BIX
        12**DCL         6--PROC     7024--IF       7031>>IF       7033>>ASSIGN   7035>>ASSIGN   7036>>ASSIGN
      7037>>ASSIGN   7049--IF       7062--IF
BUF_
        11**DCL         6--PROC     7026>>ASSIGN
DCB#
        15**DCL         6--PROC     7037>>ASSIGN   7038>>ASSIGN
DISK_CLOSE.SN_
      6191**DCL      6191--REDEF
DISK_CLOSE.UTL_
      6192**DCL      6192--REDEF
DISK_CLOSE.V.EXPIRE#
      6206**DCL      6206--REDEF
DISK_CLOSE.V.TYPE#
      6204**DCL      6204--REDEF
DISK_CLOSE.V.XTNSIZE#
      6201**DCL      6201--REDEF    6203--REDEF
DISK_FILE_SPEC.SPEC
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:135  
      6556**DCL      6558--REDEF
DISK_FILE_SPEC.SPEC.START
      6557**DCL      6557--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6558**DCL      6558--REDEF
DISK_FILE_SPEC$
      6555**DCL      6556--IMP-PTR
DISK_OPEN.ACSVEH_
      6056**DCL      6057--REDEF
DISK_OPEN.ALTKEYS_
      6062**DCL      6063--REDEF    6063--REDEF
DISK_OPEN.HDR_
      6061**DCL      6062--REDEF
DISK_OPEN.TAB_
      6060**DCL      6061--REDEF
DISK_OPEN.UHL_
      6054**DCL      6055--REDEF    6055--REDEF
DISK_OPEN.V.FSN#
      6094**DCL      6094--REDEF    6094--REDEF
DISK_OPEN.WSN_
      6060**DCL      6060--REDEF
DISK_READ.STATION_
      6118**DCL      6119--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6130**DCL      6130--REDEF
DISK_READ.V.INDX#
      6128**DCL      6128--REDEF
DISK_WRITE
      6154**DCL      7046<>CALL
DISK_WRITE.BUF_
      6154**DCL      7026<<ASSIGN   7033<<ASSIGN
DISK_WRITE.BUF_.BOUND
      6154**DCL      7044<<ASSIGN
DISK_WRITE.STATION_
      6156**DCL      6156--REDEF
DISK_WRITE.V.DCB#
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:136  
      6157**DCL      7038<<ASSIGN
DISK_WRITE.V.DVBYTE.VFC#
      6163**DCL      6163--REDEF
DISK_WRITE.V.EVENT#
      6162**DCL      7028<<ASSIGN   7035<<ASSIGN
DISK_WRITE.V.WAIT#
      6157**DCL      7027<<ASSIGN   7034<<ASSIGN
DPLIST$
      6541**DCL      6553--IMP-PTR
DPRESLIST$
      6555**DCL      6555--IMP-PTR
EFTWORD
      6676**DCL      6676--REDEF
ERR
        14**DCL         6--PROC     7054<<ASSIGN   7063<<ASSIGN
FLI$RPT_ERR
      6999**DCL-ENT  7048--CALL
FPT_EXIT.V.STEPCC#
      5981**DCL      5981--REDEF
M$WRITE
      5509**DCL-ENT  7046--CALL
M$XXX
      5520**DCL-ENT  7032--CALL     7052--CALL
NBR_OUTSTANDING_IOS
      6512**DCL      7040<<ASSIGN   7040>>ASSIGN   7051<<ASSIGN   7051>>ASSIGN
OUTSTANDING_IO.BUF_
      6518**DCL      7033>>ASSIGN
OUTSTANDING_IO.DCB#
      6518**DCL      7037<<ASSIGN
OUTSTANDING_IO.NOT_READY
      6519**DCL      7036<<ASSIGN
OUTSTANDING_IO.RELEASED
      6518**DCL      7031>>IF
PRE_RET_CLOSE.SN_
      6919**DCL      6919--REDEF
PRE_RET_CLOSE.UTL_
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:137  
      6920**DCL      6920--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6934**DCL      6934--REDEF
PRE_RET_CLOSE.V.TYPE#
      6932**DCL      6932--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6929**DCL      6929--REDEF    6931--REDEF
PRE_RET_OPEN.ACSVEH_
      6854**DCL      6855--REDEF
PRE_RET_OPEN.ALTKEYS_
      6860**DCL      6861--REDEF    6861--REDEF
PRE_RET_OPEN.HDR_
      6859**DCL      6860--REDEF
PRE_RET_OPEN.TAB_
      6858**DCL      6859--REDEF
PRE_RET_OPEN.UHL_
      6852**DCL      6853--REDEF    6853--REDEF
PRE_RET_OPEN.V.FSN#
      6892**DCL      6892--REDEF    6892--REDEF
PRE_RET_OPEN.WSN_
      6858**DCL      6858--REDEF
PRE_RET_READ.STATION_
      6709**DCL      6710--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6721**DCL      6721--REDEF
PRE_RET_READ.V.INDX#
      6719**DCL      6719--REDEF
PRE_RET_WRITE.STATION_
      6747**DCL      6747--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6754**DCL      6754--REDEF
RET_CMDS_NAME.L#
      6963**DCL      6963--IMP-SIZ
SNVECLIST$
      6495**DCL      6495--IMP-PTR
SPEC.START
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:138  
      6559**DCL      6560--REDEF
SPEC.STOP
      6560**DCL      6561--REDEF
SPECCHARS
      6559**DCL      6559--REDEF
TAPE_CLOSE.SN_
      6412**DCL      6412--REDEF
TAPE_CLOSE.UTL_
      6413**DCL      6413--REDEF
TAPE_CLOSE.V.EXPIRE#
      6427**DCL      6427--REDEF
TAPE_CLOSE.V.TYPE#
      6425**DCL      6425--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6422**DCL      6422--REDEF    6424--REDEF
TAPE_DCBLIST$
      5968**DCL      5968--IMP-PTR
TAPE_OPEN.ACSVEH_
      6277**DCL      6278--REDEF
TAPE_OPEN.ALTKEYS_
      6283**DCL      6284--REDEF    6284--REDEF
TAPE_OPEN.HDR_
      6282**DCL      6283--REDEF
TAPE_OPEN.TAB_
      6281**DCL      6282--REDEF
TAPE_OPEN.UHL_
      6275**DCL      6276--REDEF    6276--REDEF
TAPE_OPEN.V.FSN#
      6315**DCL      6315--REDEF    6315--REDEF
TAPE_OPEN.WSN_
      6281**DCL      6281--REDEF
TAPE_READ.STATION_
      6339**DCL      6340--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6351**DCL      6351--REDEF
TAPE_READ.V.INDX#
PL6.E3A0      #007=FLI$DISK_WRITE File=FLI$DISK.:E05TSI                          TUE 07/29/97 15:51 Page:139  
      6349**DCL      6349--REDEF
TAPE_WRITE.STATION_
      6377**DCL      6377--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6384**DCL      6384--REDEF
TVECTOR.W2
      6508**DCL      6509--REDEF
