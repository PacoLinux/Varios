VERSION E05

PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:1    
        1        1        /*M* KOI$INIT - Code to initialize & terminate PIGLET                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        KOI$INIT: PROC ALTRET;
        8        8        /**/
        9        9        /*  KOI$INIT                                                                  */
       10       10        /*   This routine is used to initialize PIGLET.  It initializes               */
       11       11        /*   structures, get resources, and generally sets things up.                 */
       12       12        /*                                                                            */
       13       13        /*  A note about the order of initialization...                               */
       14       14        /*    o First, set up everything necessary to talk to the host.  We           */
       15       15        /*      shouldn't need it, but in the event of deep problems in the           */
       16       16        /*      initialization sequence, it helps to tell the host what's broken!     */
       17       17        /*    o Interrupt levels must be generated and set AFTER asking Node          */
       18       18        /*      Admin what base level to use.                                         */
       19       19        /**/
       20       20        /*  INCLUDE FILES  */
       21       21        /**/
       22       22        %INCLUDE KO_DATA_R;
       23     3769        %INCLUDE GH_HARDWARE_M;                 /* Physical I/O macros                */
       24     3867        %INCLUDE KP_PERR_C;
       25     3932        %INCLUDE KH$CHN;                        /* Channel context                    */
       26     4054        %INCLUDE G_JIT_M;                       /* PRIV EQUS                          */
       27     4319        /**/
       28     4320        /*  EQUS  */
       29     4321        /**/
       30     4322        %G$JIT_E;
       31     4384        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:2    
       32     4385        /**/
       33     4386        /*  STATIC DATA  */
       34     4387        /**/
       35     4388        %FPT_INTCON (FPTN = FPT_INTCON,
       36     4389                     IENTRY = KOP$INTERRUPT,
       37     4390                     PRIVILEGED = YES,
       38     4391                     STCLASS = STATIC);
       39     4412        %FPT_GDS (FPTN = FPT_GDS,
       40     4413                  FREE = YES,                   /* Don't get any if not all available */
       41     4414                  IOBUF = YES,                  /* Memory is to be used for IO buffer */
       42     4415                  PARK = NO,                    /* Don't wait if mem not available    */
       43     4416                  STCLASS = STATIC);
       44     4440    1   DCL I SBIN WORD STATIC;
       45     4441    1   DCL CHN SBIN WORD;
       46     4442    1   DCL CHN$ PTR;
       47     4443        %KO_DEVICE_STATUS (NAME = DEVICE_STATUS,STCLASS = STATIC);
       48     4493    1   DCL PHASE SBIN;                         /* Stuff EQU here if init error       */
       49     4494        /**/
       50     4495        /*  ENTRY DCLS  */
       51     4496        /**/
       52     4497        %KO_ENTRIES (OMIT=KOI$INIT);
       53     4553        %KH_ENTDEFS;
       54     4560        /**/
       55     4561        /*  BASED  */
       56     4562        /**/
       57     4563        %KH$CHN;
       58     4687        %M$DCB (DCBN=M$DCB,STCLASS=BASED);
       59     4738        /**/
       60     4739        /*  CONSTANTS  */
       61     4740        /**/
       62     4741        %FPT_EVENT (FPTN = FPT_EVENT,
       63     4742                    EVENT$ = KOA$MAIN_EVENT,
       64     4743                    STCLASS = CONSTANT);
       65     4783        %FPT_SPRIV (PRIV=PRIVS, STCLASS=CONSTANT, AUTH=YES, PRC=YES);
       66     4806    1   DCL PRIVS BIT(32) CONSTANT INIT(%(G_PR_MSYS#|G_PR_EXMM#|G_PR_SPCLMM#));
       67     4807        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:3    
       68     4808        /**/
       69     4809        /*  Connect handler for EVENTS  */
       70     4810        /**/
       71     4811    1             CALL M$EVENT (FPT_EVENT) ALTRET(WERE_DOOMED);
       72     4812        /**/
       73     4813        /*  OPEN PATH TO THE HOST  */
       74     4814        /**/
       75     4815    1             CALL KOH$HOST_IO (%KOH_OPEN_HOST#) ALTRET(WERE_DOOMED);
       76     4816        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:4    
       77     4817        /**/
       78     4818        /*  Talk to NODE-ADMIN to find out various control parameters.                */
       79     4819        /*  In case this fails, the control cells have already been initialized       */
       80     4820        /*  to reasonable defaults in KO_DATA_D.                                      */
       81     4821        /**/
       82     4822    1             PHASE = %E$KP_CANT_NA_INIT;
       83     4823    1             IF NOT NA_LIVES THEN
       84     4824    1                GOTO NA_DONE;
       85     4825    1             CALL KHA$INIT (%EVENT_NA_INTERFACE#) ALTRET(WERE_DOOMED); /* Open   */
       86     4826    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_INTLVL) = ADDR(KO_INHIBIT_LEVEL);
       87     4827    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_MEM) = ADDR(KO_MEM);
       88     4828    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_IOMEM) = ADDR(KO_MEM);
       89     4829    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_RES) = ADDR(KO_RES);
       90     4830    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_ATTR) = ADDR(KO_ATTR);
       91     4831    1             CALL KHA$INIT_CONTROL(KH_CTLTBL) ALTRET(WERE_DOOMED);
       92     4832    1   NA_DONE:  ;
       93     4833        /**/
       94     4834        /*  Set up assorted more-or-less constant stuff.  */
       95     4835        /**/
       96     4836    1             KO_INTERRUPT_LEVEL = KO_INHIBIT_LEVEL +1;
       97     4837    1             KO_RUNNING_LEVEL = KO_INTERRUPT_LEVEL +1;
       98     4838    1             BUFFER_BYTES = SIZEC(KP_MSG);
       99     4839    1             DATA_BYTES = %KP_BLOCK_SIZE#;
      100     4840        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:5    
      101     4841        /**/
      102     4842        /*  Get any privileges that we will need.  */
      103     4843        /**/
      104     4844    1             PHASE = %E$KP_CANT_PRIVS;
      105     4845    1             CALL M$SPRIV (FPT_SPRIV) ALTRET(WERE_DOOMED);
      106     4846    1             CALL M$SYS ALTRET(WERE_DOOMED); /* Enter RING 1 for physical I/O    */
      107     4847        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:6    
      108     4848        /**/
      109     4849        /*  Allocate all necessary buffers.                                           */
      110     4850        /*  NOTE:  we already have a temporary host buffer in STATIC SYMDEF.          */
      111     4851        /**/
      112     4852        /*  Start by figuring out how large each buffer is, rounded to the next       */
      113     4853        /*  page.  Total required memory is the sum of page lengths.                  */
      114     4854        /**/
      115     4855    1             PHASE = %E$KP_CANT_MEMORY;
      116     4856    1             CALL KOU$BOUND(HOST_LEN,SIZEC(KP_MSG),%BYTES_PER_PAGE#);
      117     4857    1             OUT_DISK_LEN = %KP_MAX_BYTES_PHYSIO#-%KP_BLOCK_SIZE#+40;
      118     4858    1             CALL KOU$BOUND(IN_DISK_LEN,OUT_DISK_LEN,%BYTES_PER_PAGE#);
      119     4859    1             CALL KOU$BOUND(OUT_DISK_LEN,%KP_MAX_BYTES_PHYSIO#,%BYTES_PER_PAGE#);
      120     4860    1             KO_MEM = (HOST_LEN + IN_DISK_LEN) / %BYTES_PER_PAGE#;
      121     4861        /**/
      122     4862        /*  Get a large area for use as buffer space.                                 */
      123     4863        /**/
      124     4864    1             FPT_GDS.V.PAGES = KO_MEM;
      125     4865    1             FPT_GDS.RESULTS_ = VECTOR (PIGLET_SEGMENT);
      126     4866    1             PIGLET_SEGMENT.BASE$ = ADDR(NIL);
      127     4867    1             CALL M$GDS(FPT_GDS) ALTRET(WERE_DOOMED);
      128     4868        /**/
      129     4869        /*  Allocate the big buffer area amongst the individual buffers we need.      */
      130     4870        /**/
      131     4871    1             HOST_BUF$ = PIGLET_SEGMENT.BASE$;
      132     4872    1             IN_DISK_BUF$ = PINCRW(HOST_BUF$,HOST_LEN/%BYTES_PER_WORD#);
      133     4873    1             OUT_DISK_BUF$ = PINCRW(IN_DISK_BUF$,(IN_DISK_LEN-OUT_DISK_LEN)/%
              4873                      BYTES_PER_WORD#);
      134     4874        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:7    
      135     4875        /**/
      136     4876        /*  Ask NODE-ADMIN for all his diskette drives.  */
      137     4877        /**/
      138     4878    1             PHASE = %E$KP_CANT_NA_REQUEST;
      139     4879    1             IF NOT NA_LIVES THEN
      140     4880    2                DO;
      141     4881    2                  CALL DEFAULT_TABLE;
      142     4882    2                  GOTO GOT_TABLE;
      143     4883    2                  END;
      144     4884    1             CALL KHA$INIT_CHANTBL (KO_RES, /* Resource name                     */
      145     4885    1                  KO_ATTR,                 /* Special atributes of resource      */
      146     4886    1                  ENTADDR(KOE$NA_EVENT))   /* Events for these devices           */
      147     4887    1                  ALTRET (WERE_DOOMED);
      148     4888        /**/
      149     4889        /*  Make our own table of device information  */
      150     4890        /**/
      151     4891    1             TOP_DEVICE = -1;
      152     4892    2             DO CHN = (KH_CHNLOW/128) TO (KH_CHNHI/128);
      153     4893    2                IF TOP_DEVICE > %KP_MAX_DRIVE#
      154     4894    2                 THEN
      155     4895    2                   GOTO CHN_FULL;
      156     4896    2                CHN$ = PINCRW (KH_CHNLOW$, SIZEW(KH$CHN) * (CHN-(KH_CHNLOW/128)));
      157     4897    2                IF CHN$ -> KH$CHN.RESOURCE ~= KO_RES
      158     4898    2                 THEN
      159     4899    2                   GOTO NEXT_CHN;
      160     4900    2                TOP_DEVICE = TOP_DEVICE +1;
      161     4901    2                DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR(TOP_DEVICE) = CHN*2; /* CHAN/64 */
      162     4902    2                DEVICE_TABLE.DEV_ENTRY.DRIVE_NO(TOP_DEVICE) = TOP_DEVICE;
      163     4903    2   NEXT_CHN:    END;
      164     4904    1   CHN_FULL: ;
      165     4905    1   GOT_TABLE: ;
      166     4906        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:8    
      167     4907        /**/
      168     4908        /*  Initialize each drive and get its device code.  */
      169     4909        /**/
      170     4910    1             PHASE = %E$KP_CANT_DEVINIT;
      171     4911    2             DO I = 0 TO TOP_DEVICE;
      172     4912    2                CALL KOP$INITIALIZE(DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR(I),
      173     4913    2                                    DEVICE_TABLE.DEV_ENTRY.DEVICE_TYPE(I))
      174     4914    2                                    ALTRET (NEXT_DEVICE);
      175     4915    2   NEXT_DEVICE: ;
      176     4916    2                END;
      177     4917        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:9    
      178     4918        /**/
      179     4919        /*  Connect handler for IO interrupts  */
      180     4920        /**/
      181     4921    1             PHASE = %E$KP_CANT_INTCON;
      182     4922    1             FPT_INTCON.V.LEVEL = KO_INTERRUPT_LEVEL;
      183     4923        /*N*      CALL M$INTCON (FPT_INTCON) ALTRET(WERE_DOOMED);  */
      184     4924        /**/
      185     4925        /*  Let Node-Admin know that our initialization is done.  */
      186     4926        /**/
      187     4927    1             PHASE = %E$KP_CANT_NA_INIDONE;
      188     4928    1             IF NA_LIVES THEN
      189     4929    1                CALL KHA$INIT_DONE ALTRET(WERE_DOOMED);
      190     4930        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:10   
      191     4931        /**/
      192     4932        /*  Initialization is all over!  */
      193     4933        /**/
      194     4934    1             RETURN;
      195     4935        /**/
      196     4936    1   WERE_DOOMED: ;
      197     4937    1             IF DCBADDR(DCBNUM(M$HOST)) -> M$DCB.FCD THEN
      198     4938    2                DO;
      199     4939    2                  KP_MSG.HEAD = '0'B;
      200     4940    2                  KP_MSG.HEAD.MSG_TYPE = %KP_INITED_MSG#;
      201     4941    2                  KP_MSG.HEAD.OPERATION_STATUS = PHASE;
      202     4942    2                  HOST_MES_LEN = SIZEC(KP_MSG.HEAD);
      203     4943    2                  CALL KOH$HOST_IO (%KOH_WRITE_HOST#) ALTRET(FRAMMIT);
      204     4944    2   FRAMMIT:       ;
      205     4945    2                  THINGS_ARE_ROSY = '0'B;
      206     4946    2                  END;
      207     4947    1             CALL KOI$CLEANUP;
      208     4948    1             ALTRETURN;
      209     4949        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:11   
      210     4950    1   DEFAULT_TABLE: PROC;
      211     4951        /**/
      212     4952        /*  This routine is called if PIGLET is unable to communicate with Node-      */
      213     4953        /*  Admin.  Although we would never want to make assumptions about our        */
      214     4954        /*  environment under battle conditions, this is OK to do during testing.     */
      215     4955        /**/
      216     4956    2             TOP_DEVICE = 1;
      217     4957    2             DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR(0) = BITBIN('0600'X)/64;
      218     4958    2             DEVICE_TABLE.DEV_ENTRY.DRIVE_NO(0) = 0;
      219     4959    2             DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR(1) = BITBIN('0680'X)/64;
      220     4960    2             DEVICE_TABLE.DEV_ENTRY.DRIVE_NO(1) = 1;
      221     4961    2             RETURN;
      222     4962        /**/
      223     4963    2             END DEFAULT_TABLE;
      224     4964        /**/
      225     4965    1             END KOI$INIT;
      226     4966        %EOD;

PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:12   
--  Include file information  --

   G_JIT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KP_MSG.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KO_SUBS.:E05TOU  is referenced.
   KO_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KOI$INIT.

   Procedure KOI$INIT requires 519 words for executable code.
   Procedure KOI$INIT requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:13   

 Object Unit name= KOI$INIT                                   File name= KOI$INIT.:E05TOU
 UTS= JUL 30 '97 01:15:22.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   DCB   even  none     0      0  M$HOST
    1   Data  even  none    19     13  KOI$INIT
    2  RoData even  UTS     20     14  KOI$INIT
    3   Proc  even  none   519    207  KOI$INIT
    4  RoData even  none    16     10  KOI$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        0  KOI$INIT
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:14   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 KOP$INTERRUPT
 yes     yes           Std       1 KOE$NA_EVENT
 yes     yes           Std       3 KHA$INIT_DONE
 yes     yes           Std       3 KHA$INIT_CHANTBL
         yes          Async      0 KOA$MAIN_EVENT
 yes     yes           Std       2 KOP$INITIALIZE
 yes     yes           Std       1 KOH$HOST_IO
 yes     yes           Std       3 KHA$INIT
         yes           Std       3 KOU$BOUND
         yes           Std       0 KOI$CLEANUP
 yes     yes           Std       3 KHA$INIT_CONTROL
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KO_MEM                                KO_RES                                KO_ATTR
     KO_INTERRUPT_LEVEL                    KO_RUNNING_LEVEL                      KO_INHIBIT_LEVEL
     NA_LIVES                              KH_CHNLOW$                            KH_CHNHI
     KH_CHNLOW                             KH_CTLTBL                             HOST_LEN
     HOST_MES_LEN                          HOST_BUF$                             IN_DISK_LEN
     IN_DISK_BUF$                          OUT_DISK_LEN                          OUT_DISK_BUF$
     THINGS_ARE_ROSY                       PIGLET_SEGMENT                        BUFFER_BYTES
     DATA_BYTES                            DEVICE_TABLE                          TOP_DEVICE
     M$HOST                           r    G$ROS$
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:15   


        1        1        /*M* KOI$INIT - Code to initialize & terminate PIGLET                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        KOI$INIT: PROC ALTRET;

      7   3 000000  D380 0000 0000  xent KOI$INIT        LNJ,B5   X6A_AUTO_0
          3 000003       0012 0000                       DC       18,0

        8        8        /**/
        9        9        /*  KOI$INIT                                                                  */
       10       10        /*   This routine is used to initialize PIGLET.  It initializes               */
       11       11        /*   structures, get resources, and generally sets things up.                 */
       12       12        /*                                                                            */
       13       13        /*  A note about the order of initialization...                               */
       14       14        /*    o First, set up everything necessary to talk to the host.  We           */
       15       15        /*      shouldn't need it, but in the event of deep problems in the           */
       16       16        /*      initialization sequence, it helps to tell the host what's broken!     */
       17       17        /*    o Interrupt levels must be generated and set AFTER asking Node          */
       18       18        /*      Admin what base level to use.                                         */
       19       19        /**/
       20       20        /*  INCLUDE FILES  */
       21       21        /**/
       22       22        %INCLUDE KO_DATA_R;
       23     3769        %INCLUDE GH_HARDWARE_M;                 /* Physical I/O macros                */
       24     3867        %INCLUDE KP_PERR_C;
       25     3932        %INCLUDE KH$CHN;                        /* Channel context                    */
       26     4054        %INCLUDE G_JIT_M;                       /* PRIV EQUS                          */
       27     4319        /**/
       28     4320        /*  EQUS  */
       29     4321        /**/
       30     4322        %G$JIT_E;
       31     4384        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:16   
       32     4385        /**/
       33     4386        /*  STATIC DATA  */
       34     4387        /**/
       35     4388        %FPT_INTCON (FPTN = FPT_INTCON,
       36     4389                     IENTRY = KOP$INTERRUPT,
       37     4390                     PRIVILEGED = YES,
       38     4391                     STCLASS = STATIC);
       39     4412        %FPT_GDS (FPTN = FPT_GDS,
       40     4413                  FREE = YES,                   /* Don't get any if not all available */
       41     4414                  IOBUF = YES,                  /* Memory is to be used for IO buffer */
       42     4415                  PARK = NO,                    /* Don't wait if mem not available    */
       43     4416                  STCLASS = STATIC);
       44     4440    1   DCL I SBIN WORD STATIC;
       45     4441    1   DCL CHN SBIN WORD;
       46     4442    1   DCL CHN$ PTR;
       47     4443        %KO_DEVICE_STATUS (NAME = DEVICE_STATUS,STCLASS = STATIC);
       48     4493    1   DCL PHASE SBIN;                         /* Stuff EQU here if init error       */
       49     4494        /**/
       50     4495        /*  ENTRY DCLS  */
       51     4496        /**/
       52     4497        %KO_ENTRIES (OMIT=KOI$INIT);
       53     4553        %KH_ENTDEFS;
       54     4560        /**/
       55     4561        /*  BASED  */
       56     4562        /**/
       57     4563        %KH$CHN;
       58     4687        %M$DCB (DCBN=M$DCB,STCLASS=BASED);
       59     4738        /**/
       60     4739        /*  CONSTANTS  */
       61     4740        /**/
       62     4741        %FPT_EVENT (FPTN = FPT_EVENT,
       63     4742                    EVENT$ = KOA$MAIN_EVENT,
       64     4743                    STCLASS = CONSTANT);
       65     4783        %FPT_SPRIV (PRIV=PRIVS, STCLASS=CONSTANT, AUTH=YES, PRC=YES);
       66     4806    1   DCL PRIVS BIT(32) CONSTANT INIT(%(G_PR_MSYS#|G_PR_EXMM#|G_PR_SPCLMM#));
       67     4807        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:17   
       68     4808        /**/
       69     4809        /*  Connect handler for EVENTS  */
       70     4810        /**/
       71     4811    1             CALL M$EVENT (FPT_EVENT) ALTRET(WERE_DOOMED);

   4811   3 000005  BB80 0000 0000  02                   LAB,B3   FPT_EVENT
          3 000008  B870 08C0                            LDR,R3   2240,IMO
          3 00000A  0001                                 MCL
          3 00000B       01A7                            DC       s:4928,PREL

       72     4812        /**/
       73     4813        /*  OPEN PATH TO THE HOST  */
       74     4814        /**/
       75     4815    1             CALL KOH$HOST_IO (%KOH_OPEN_HOST#) ALTRET(WERE_DOOMED);

   4815   3 00000C  BB80 0000 0001  04                   LAB,B3   +1
          3 00000F  CBF0 0100                            LAB,B4   256,IMO
          3 000011  E380 0000 0000  xent                 LNJ,B6   KOH$HOST_IO
          3 000014       019E                            DC       s:4928,PREL

       76     4816        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:18   
       77     4817        /**/
       78     4818        /*  Talk to NODE-ADMIN to find out various control parameters.                */
       79     4819        /*  In case this fails, the control cells have already been initialized       */
       80     4820        /*  to reasonable defaults in KO_DATA_D.                                      */
       81     4821        /**/
       82     4822    1             PHASE = %E$KP_CANT_NA_INIT;

   4822   3 000015  6C5B                                 LDV,R6   91
          3 000016  EF47 0007                            STR,R6   PHASE,AUTO

       83     4823    1             IF NOT NA_LIVES THEN

   4823   3 000018  8980 0000 0000  xsym                 CMZ      NA_LIVES
          3 00001B  0881 0031                            BAGE     s:4830,PREL

       84     4824    1                GOTO NA_DONE;
       85     4825    1             CALL KHA$INIT (%EVENT_NA_INTERFACE#) ALTRET(WERE_DOOMED); /* Open   */

   4825   3 00001D  BB80 0000 0004  04                   LAB,B3   +4
          3 000020  CBF0 0100                            LAB,B4   256,IMO
          3 000022  E380 0000 0000  xent                 LNJ,B6   KHA$INIT
          3 000025       018D                            DC       s:4928,PREL

       86     4826    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_INTLVL) = ADDR(KO_INHIBIT_LEVEL);

   4826   3 000026  EB80 0000 0000  xsym                 LAB,B6   KO_INHIBIT_LEVEL
          3 000029  EF80 0000 0002  xsym                 STB,B6   KH_CTLTBL+2

       87     4827    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_MEM) = ADDR(KO_MEM);

   4827   3 00002C  DB80 0000 0000  xsym                 LAB,B5   KO_MEM
          3 00002F  DF80 0000 0005  xsym                 STB,B5   KH_CTLTBL+5

       88     4828    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_IOMEM) = ADDR(KO_MEM);

   4828   3 000032  CB80 0000 0000  xsym                 LAB,B4   KO_MEM
          3 000035  CF80 0000 0008  xsym                 STB,B4   KH_CTLTBL+8
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:19   

       89     4829    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_RES) = ADDR(KO_RES);

   4829   3 000038  BB80 0000 0000  xsym                 LAB,B3   KO_RES
          3 00003B  BF80 0000 000B  xsym                 STB,B3   KH_CTLTBL+11

       90     4830    1             KH_CTLTBL.PARM.PTR$(%KL_HNDLRPARM_ATTR) = ADDR(KO_ATTR);

   4830   3 00003E  AB80 0000 0000  xsym                 LAB,B2   KO_ATTR
          3 000041  AF80 0000 000E  xsym                 STB,B2   KH_CTLTBL+14

       91     4831    1             CALL KHA$INIT_CONTROL(KH_CTLTBL) ALTRET(WERE_DOOMED);

   4831   3 000044  BB80 0000 0006  04                   LAB,B3   +6
          3 000047  CBF0 0100                            LAB,B4   256,IMO
          3 000049  E380 0000 0000  xent                 LNJ,B6   KHA$INIT_CONTROL
          3 00004C       0166                            DC       s:4928,PREL

   4830   3                              NA_DONE         null
       92     4832    1   NA_DONE:  ;
       93     4833        /**/
       94     4834        /*  Set up assorted more-or-less constant stuff.  */
       95     4835        /**/
       96     4836    1             KO_INTERRUPT_LEVEL = KO_INHIBIT_LEVEL +1;

   4836   3 00004D  E800 0000 0000  xsym NA_DONE         LDR,R6   KO_INHIBIT_LEVEL
          3 000050  6E01                                 ADV,R6   1
          3 000051  EF00 0000 0000  xsym                 STR,R6   KO_INTERRUPT_LEVEL

       97     4837    1             KO_RUNNING_LEVEL = KO_INTERRUPT_LEVEL +1;

   4837   3 000054  6E01                                 ADV,R6   1
          3 000055  EF00 0000 0000  xsym                 STR,R6   KO_RUNNING_LEVEL

       98     4838    1             BUFFER_BYTES = SIZEC(KP_MSG);

   4838   3 000058  D870 0812                            LDR,R5   2066,IMO
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:20   
          3 00005A  DF00 0000 0000  xsym                 STR,R5   BUFFER_BYTES

       99     4839    1             DATA_BYTES = %KP_BLOCK_SIZE#;

   4839   3 00005D  C870 0800                            LDR,R4   2048,IMO
          3 00005F  CF00 0000 0000  xsym                 STR,R4   DATA_BYTES

      100     4840        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:21   
      101     4841        /**/
      102     4842        /*  Get any privileges that we will need.  */
      103     4843        /**/
      104     4844    1             PHASE = %E$KP_CANT_PRIVS;

   4844   3 000062  3C5C                                 LDV,R3   92
          3 000063  BF47 0007                            STR,R3   PHASE,AUTO

      105     4845    1             CALL M$SPRIV (FPT_SPRIV) ALTRET(WERE_DOOMED);

   4845   3 000065  BB80 0000 0008  02                   LAB,B3   FPT_SPRIV
          3 000068  B870 0CD0                            LDR,R3   3280,IMO
          3 00006A  0001                                 MCL
          3 00006B       0147                            DC       s:4928,PREL

      106     4846    1             CALL M$SYS ALTRET(WERE_DOOMED); /* Enter RING 1 for physical I/O    */

   4846   3 00006C  3C43                                 LDV,R3   67
          3 00006D  0001                                 MCL
          3 00006E       0144                            DC       s:4928,PREL

      107     4847        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:22   
      108     4848        /**/
      109     4849        /*  Allocate all necessary buffers.                                           */
      110     4850        /*  NOTE:  we already have a temporary host buffer in STATIC SYMDEF.          */
      111     4851        /**/
      112     4852        /*  Start by figuring out how large each buffer is, rounded to the next       */
      113     4853        /*  page.  Total required memory is the sum of page lengths.                  */
      114     4854        /**/
      115     4855    1             PHASE = %E$KP_CANT_MEMORY;

   4855   3 00006F  6C5D                                 LDV,R6   93
          3 000070  EF47 0007                            STR,R6   PHASE,AUTO

      116     4856    1             CALL KOU$BOUND(HOST_LEN,SIZEC(KP_MSG),%BYTES_PER_PAGE#);

   4856   3 000072  EBF0 0812                            LAB,B6   2066,IMO
          3 000074  DBF0 0200                            LAB,B5   512,IMO
          3 000076  DFC7 000E                            STB,B5   PHASE+7,AUTO
          3 000078  EFC7 000C                            STB,B6   PHASE+5,AUTO
          3 00007A  CB80 0000 0000  xsym                 LAB,B4   HOST_LEN
          3 00007D  CFC7 000A                            STB,B4   PHASE+3,AUTO
          3 00007F  BBC7 000A                            LAB,B3   PHASE+3,AUTO
          3 000081  CBF0 0300                            LAB,B4   768,IMO
          3 000083  E380 0000 0000  xent                 LNJ,B6   KOU$BOUND
          3 000086       0001                            DC       s:4857,PREL

      117     4857    1             OUT_DISK_LEN = %KP_MAX_BYTES_PHYSIO#-%KP_BLOCK_SIZE#+40;

   4857   3 000087  E870 0C37                            LDR,R6   3127,IMO
          3 000089  EF00 0000 0000  xsym                 STR,R6   OUT_DISK_LEN

      118     4858    1             CALL KOU$BOUND(IN_DISK_LEN,OUT_DISK_LEN,%BYTES_PER_PAGE#);

   4858   3 00008C  EBF0 0200                            LAB,B6   512,IMO
          3 00008E  EFC7 000E                            STB,B6   PHASE+7,AUTO
          3 000090  DB80 0000 0000  xsym                 LAB,B5   OUT_DISK_LEN
          3 000093  DFC7 000C                            STB,B5   PHASE+5,AUTO
          3 000095  CB80 0000 0000  xsym                 LAB,B4   IN_DISK_LEN
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:23   
          3 000098  CFC7 000A                            STB,B4   PHASE+3,AUTO
          3 00009A  BBC7 000A                            LAB,B3   PHASE+3,AUTO
          3 00009C  CBF0 0300                            LAB,B4   768,IMO
          3 00009E  E380 0000 0000  xent                 LNJ,B6   KOU$BOUND
          3 0000A1       0001                            DC       s:4859,PREL

      119     4859    1             CALL KOU$BOUND(OUT_DISK_LEN,%KP_MAX_BYTES_PHYSIO#,%BYTES_PER_PAGE#);

   4859   3 0000A2  EBF0 140F                            LAB,B6   5135,IMO
          3 0000A4  DBF0 0200                            LAB,B5   512,IMO
          3 0000A6  DFC7 000E                            STB,B5   PHASE+7,AUTO
          3 0000A8  EFC7 000C                            STB,B6   PHASE+5,AUTO
          3 0000AA  CB80 0000 0000  xsym                 LAB,B4   OUT_DISK_LEN
          3 0000AD  CFC7 000A                            STB,B4   PHASE+3,AUTO
          3 0000AF  BBC7 000A                            LAB,B3   PHASE+3,AUTO
          3 0000B1  CBF0 0300                            LAB,B4   768,IMO
          3 0000B3  E380 0000 0000  xent                 LNJ,B6   KOU$BOUND
          3 0000B6       0001                            DC       s:4860,PREL

      120     4860    1             KO_MEM = (HOST_LEN + IN_DISK_LEN) / %BYTES_PER_PAGE#;

   4860   3 0000B7  E800 0000 0000  xsym                 LDR,R6   HOST_LEN
          3 0000BA  EA00 0000 0000  xsym                 ADD,R6   IN_DISK_LEN
          3 0000BD  E370 0200                            DIV,R6   512,IMO
          3 0000BF  EF00 0000 0000  xsym                 STR,R6   KO_MEM

      121     4861        /**/
      122     4862        /*  Get a large area for use as buffer space.                                 */
      123     4863        /**/
      124     4864    1             FPT_GDS.V.PAGES = KO_MEM;

   4864   3 0000C2  EF00 0000 000F  01                   STR,R6   FPT_GDS+6

      125     4865    1             FPT_GDS.RESULTS_ = VECTOR (PIGLET_SEGMENT);

   4865   3 0000C5  AB80 0000 0000  04                   LAB,B2   0
          3 0000C8  2C10                                 LDV,R2   16
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:24   
          3 0000C9  6C06                                 LDV,R6   6
          3 0000CA  BB80 0000 0000  01                   LAB,B3   FPT_INTCON
          3 0000CD  3C18                                 LDV,R3   24
          3 0000CE  0008                                 MMM

      126     4866    1             PIGLET_SEGMENT.BASE$ = ADDR(NIL);

   4866   3 0000CF  EB80 0000 0000                       LAB,B6   0
          3 0000D2  EF80 0000 0000  xsym                 STB,B6   PIGLET_SEGMENT

      127     4867    1             CALL M$GDS(FPT_GDS) ALTRET(WERE_DOOMED);

   4867   3 0000D5  BB80 0000 0009  01                   LAB,B3   FPT_GDS
          3 0000D8  B870 0902                            LDR,R3   2306,IMO
          3 0000DA  0001                                 MCL
          3 0000DB       00D7                            DC       s:4928,PREL

      128     4868        /**/
      129     4869        /*  Allocate the big buffer area amongst the individual buffers we need.      */
      130     4870        /**/
      131     4871    1             HOST_BUF$ = PIGLET_SEGMENT.BASE$;

   4871   3 0000DC  EC80 0000 0000  xsym                 LDB,B6   PIGLET_SEGMENT
          3 0000DF  EF80 0000 0000  xsym                 STB,B6   HOST_BUF$

      132     4872    1             IN_DISK_BUF$ = PINCRW(HOST_BUF$,HOST_LEN/%BYTES_PER_WORD#);

   4872   3 0000E2  E800 0000 0000  xsym                 LDR,R6   HOST_LEN
          3 0000E5  E370 0002                            DIV,R6   2,IMO
          3 0000E7  B856                                 LDR,R3   R6
          3 0000E8  DBB6                                 LAB,B5   ,B6,R3
          3 0000E9  DF80 0000 0000  xsym                 STB,B5   IN_DISK_BUF$

      133     4873    1             OUT_DISK_BUF$ = PINCRW(IN_DISK_BUF$,(IN_DISK_LEN-OUT_DISK_LEN)/%
              4873                      BYTES_PER_WORD#);

   4873   3 0000EC  E800 0000 0000  xsym                 LDR,R6   IN_DISK_LEN
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:25   
          3 0000EF  E200 0000 0000  xsym                 SUB,R6   OUT_DISK_LEN
          3 0000F2  E370 0002                            DIV,R6   2,IMO
          3 0000F4  B856                                 LDR,R3   R6
          3 0000F5  CBB5                                 LAB,B4   ,B5,R3
          3 0000F6  CF80 0000 0000  xsym                 STB,B4   OUT_DISK_BUF$

      134     4874        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:26   
      135     4875        /**/
      136     4876        /*  Ask NODE-ADMIN for all his diskette drives.  */
      137     4877        /**/
      138     4878    1             PHASE = %E$KP_CANT_NA_REQUEST;

   4878   3 0000F9  6C5F                                 LDV,R6   95
          3 0000FA  EF47 0007                            STR,R6   PHASE,AUTO

      139     4879    1             IF NOT NA_LIVES THEN

   4879   3 0000FC  8980 0000 0000  xsym                 CMZ      NA_LIVES
          3 0000FF  0801 0006                            BAL      s:4884,PREL

      140     4880    2                DO;

      141     4881    2                  CALL DEFAULT_TABLE;

   4881   3 000101  E3C0 00ED                            LNJ,B6   s:0,PREL
          3 000103       0001                            DC       s:4882,PREL

      142     4882    2                  GOTO GOT_TABLE;

   4882   3 000104  0F81 006B                            B        s:4898,PREL

      143     4883    2                  END;
      144     4884    1             CALL KHA$INIT_CHANTBL (KO_RES, /* Resource name                     */

   4884   3 000106  BB80 0000 0000  xent                 LAB,B3   KOE$NA_EVENT
          3 000109  BFC7 000A                            STB,B3   PHASE+3,AUTO
          3 00010B  ABC7 000A                            LAB,B2   PHASE+3,AUTO
          3 00010D  AFC7 0010                            STB,B2   PHASE+9,AUTO
          3 00010F  9B80 0000 0000  xsym                 LAB,B1   KO_ATTR
          3 000112  9FC7 000E                            STB,B1   PHASE+7,AUTO
          3 000114  EB80 0000 0000  xsym                 LAB,B6   KO_RES
          3 000117  EFC7 000C                            STB,B6   PHASE+5,AUTO
          3 000119  BBC7 000C                            LAB,B3   PHASE+5,AUTO
          3 00011B  CBF0 0300                            LAB,B4   768,IMO
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:27   
          3 00011D  E380 0000 0000  xent                 LNJ,B6   KHA$INIT_CHANTBL
          3 000120       0092                            DC       s:4928,PREL

      145     4885    1                  KO_ATTR,                 /* Special atributes of resource      */
      146     4886    1                  ENTADDR(KOE$NA_EVENT))   /* Events for these devices           */
      147     4887    1                  ALTRET (WERE_DOOMED);
      148     4888        /**/
      149     4889        /*  Make our own table of device information  */
      150     4890        /**/
      151     4891    1             TOP_DEVICE = -1;

   4891   3 000121  8900 0000 0000  xsym                 LBT,'FFFF'X       TOP_DEVICE
   4891   3 000124       FFFF

      152     4892    2             DO CHN = (KH_CHNLOW/128) TO (KH_CHNHI/128);

   4892   3 000125  E800 0000 0000  xsym                 LDR,R6   KH_CHNLOW
          3 000128  6047                                 SOR,R6   7
          3 000129  EF47 0004                            STR,R6   CHN,AUTO
          3 00012B  0F81 003B                            B        s:4903+2,PREL

      153     4893    2                IF TOP_DEVICE > %KP_MAX_DRIVE#

   4893   3 00012D  E800 0000 0000  xsym                 LDR,R6   TOP_DEVICE
          3 000130  6D05                                 CMV,R6   5
          3 000131  0A01 003E                            BAG      s:4898,PREL

      154     4894    2                 THEN
      155     4895    2                   GOTO CHN_FULL;
      156     4896    2                CHN$ = PINCRW (KH_CHNLOW$, SIZEW(KH$CHN) * (CHN-(KH_CHNLOW/128)));

   4896   3 000133  D800 0000 0000  xsym                 LDR,R5   KH_CHNLOW
          3 000136  5047                                 SOR,R5   7
          3 000137  D247 0004                            SUB,R5   CHN,AUTO
          3 000139  E855                                 LDR,R6   R5
          3 00013A  70F0                                 DAR,R7   16
          3 00013B  7085                                 DOL,R7   5
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:28   
          3 00013C  8656                                 CPL      R6
          3 00013D  8657                                 CPL      R7
          3 00013E  8470 0000 0001                       AID      1,IMO
          3 000141  8400 0000 0000  xsym                 AID      KH_CHNLOW$
          3 000144  8D47 0005                            SDI      CHN$,AUTO

      157     4897    2                IF CHN$ -> KH$CHN.RESOURCE ~= KO_RES

   4897   3 000146  ECC7 0005                            LDB,B6   CHN$,AUTO
          3 000148  DB80 0000 0000  xsym                 LAB,B5   KO_RES
          3 00014B  0022                                 ACM      ;
          3 00014C       4206 0004                                ALPHANUM(4,B6,,2,FILL),;
          3 00014E       4205 0000                                ALPHANUM(0,B5,,2,FILL)
          3 000150  5301 0014                            CBNE     s:4903,PREL

      158     4898    2                 THEN
      159     4899    2                   GOTO NEXT_CHN;
      160     4900    2                TOP_DEVICE = TOP_DEVICE +1;

   4900   3 000152  8A80 0000 0000  xsym                 INC      TOP_DEVICE

      161     4901    2                DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR(TOP_DEVICE) = CHN*2; /* CHAN/64 */

   4901   3 000155  B800 0000 0000  xsym                 LDR,R3   TOP_DEVICE
          3 000158  3F09                                 MLV,R3   9
          3 000159  D847 0004                            LDR,R5   CHN,AUTO
          3 00015B  5001                                 SOL,R5   1
          3 00015C  DF30 0000 0000  xsym                 STR,R5   DEVICE_TABLE,R3

      162     4902    2                DEVICE_TABLE.DEV_ENTRY.DRIVE_NO(TOP_DEVICE) = TOP_DEVICE;

   4902   3 00015F  C800 0000 0000  xsym                 LDR,R4   TOP_DEVICE
          3 000162  CF30 0000 0004  xsym                 STR,R4   DEVICE_TABLE+4,R3

      163     4903    2   NEXT_CHN:    END;

   4903   3 000165  8AC7 0004            NEXT_CHN        INC      CHN,AUTO
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:29   
          3 000167  E800 0000 0000  xsym                 LDR,R6   KH_CHNHI
          3 00016A  6047                                 SOR,R6   7
          3 00016B  6842                                 BLZ,R6   s:4893,SPREL
          3 00016C  E947 0004                            CMR,R6   CHN,AUTO
          3 00016E  0881 FFBE                            BAGE     s:4893,PREL

   4898   3                              CHN_FULL        null
   4898   3                              GOT_TABLE       null
      164     4904    1   CHN_FULL: ;
      165     4905    1   GOT_TABLE: ;
      166     4906        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:30   
      167     4907        /**/
      168     4908        /*  Initialize each drive and get its device code.  */
      169     4909        /**/
      170     4910    1             PHASE = %E$KP_CANT_DEVINIT;

   4910   3 000170  6C5E                 GOT_TABLE       LDV,R6   94
          3 000171  EF47 0007                            STR,R6   PHASE,AUTO

      171     4911    2             DO I = 0 TO TOP_DEVICE;

   4911   3 000173  8700 0000 0011  01                   CL       I
          3 000176  0F81 001A                            B        s:4914+3,PREL

      172     4912    2                CALL KOP$INITIALIZE(DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR(I),

   4912   3 000178  B800 0000 0011  01                   LDR,R3   I
          3 00017B  3F09                                 MLV,R3   9
          3 00017C  EBB0 0000 0001  xsym                 LAB,B6   DEVICE_TABLE+1,R3
          3 00017F  EFC7 000C                            STB,B6   PHASE+5,AUTO
          3 000181  DBB0 0000 0000  xsym                 LAB,B5   DEVICE_TABLE,R3
          3 000184  DFC7 000A                            STB,B5   PHASE+3,AUTO
          3 000186  BBC7 000A                            LAB,B3   PHASE+3,AUTO
          3 000188  CBF0 0200                            LAB,B4   512,IMO
          3 00018A  E380 0000 0000  xent                 LNJ,B6   KOP$INITIALIZE
          3 00018D       0001                            DC       s:4914,PREL

      173     4913    2                                    DEVICE_TABLE.DEV_ENTRY.DEVICE_TYPE(I))
      174     4914    2                                    ALTRET (NEXT_DEVICE);

   4914   3                              NEXT_DEVICE     null
      175     4915    2   NEXT_DEVICE: ;
      176     4916    2                END;

   4916   3 00018E  8A80 0000 0011  01   NEXT_DEVICE     INC      I
          3 000191  E800 0000 0011  01                   LDR,R6   I
          3 000194  E900 0000 0000  xsym                 CMR,R6   TOP_DEVICE
          3 000197  0AE1                                 BALE     s:4912,SPREL
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:31   

      177     4917        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:32   
      178     4918        /**/
      179     4919        /*  Connect handler for IO interrupts  */
      180     4920        /**/
      181     4921    1             PHASE = %E$KP_CANT_INTCON;

   4921   3 000198  5C60                                 LDV,R5   96
          3 000199  DF47 0007                            STR,R5   PHASE,AUTO

      182     4922    1             FPT_INTCON.V.LEVEL = KO_INTERRUPT_LEVEL;

   4922   3 00019B  C800 0000 0000  xsym                 LDR,R4   KO_INTERRUPT_LEVEL
          3 00019E  CF00 0000 0005  01                   STR,R4   FPT_INTCON+5

      183     4923        /*N*      CALL M$INTCON (FPT_INTCON) ALTRET(WERE_DOOMED);  */
      184     4924        /**/
      185     4925        /*  Let Node-Admin know that our initialization is done.  */
      186     4926        /**/
      187     4927    1             PHASE = %E$KP_CANT_NA_INIDONE;

   4927   3 0001A1  5C61                                 LDV,R5   97
          3 0001A2  DF47 0007                            STR,R5   PHASE,AUTO

      188     4928    1             IF NA_LIVES THEN

   4928   3 0001A4  8980 0000 0000  xsym                 CMZ      NA_LIVES
          3 0001A7  0881 0007                            BAGE     s:4934,PREL

      189     4929    1                CALL KHA$INIT_DONE ALTRET(WERE_DOOMED);

   4929   3 0001A9  CBF0 0000                            LAB,B4   0,IMO
          3 0001AB  E380 0000 0000  xent                 LNJ,B6   KHA$INIT_DONE
          3 0001AE       0004                            DC       s:4928,PREL

      190     4930        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:33   
      191     4931        /**/
      192     4932        /*  Initialization is all over!  */
      193     4933        /**/
      194     4934    1             RETURN;

   4934   3 0001AF  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   4928   3                              WERE_DOOMED     null
      195     4935        /**/
      196     4936    1   WERE_DOOMED: ;
      197     4937    1             IF DCBADDR(DCBNUM(M$HOST)) -> M$DCB.FCD THEN

   4937   3 0001B2  EC80 0000 0000  xsym WERE_DOOMED     LDB,B6   G$ROS$
          3 0001B5  DC86                                 LDB,B5   ,B6
          3 0001B6  8C80 0000 000B  04                   LDI      +11
          3 0001B9  B857                                 LDR,R3   R7
          3 0001BA  CCB5                                 LDB,B4   ,B5,R3
          3 0001BB  82C4 001F                            LB,'4000'X        31,B4
          3 0001BD       4000
          3 0001BE  0581 0027                            BBF      s:4947,PREL

      198     4938    2                DO;

      199     4939    2                  KP_MSG.HEAD = '0'B;

   4939   3 0001C0  CC80 0000 0000  xsym                 LDB,B4   HOST_BUF$
          3 0001C3  5C12                                 LDV,R5   18
          3 0001C4  0021                                 ALR      ;
          3 0001C5       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          3 0001C7       4004 0000                                ALPHANUM(0,B4,,R5,FILL)

      200     4940    2                  KP_MSG.HEAD.MSG_TYPE = %KP_INITED_MSG#;

   4940   3 0001C9  6C0C                                 LDV,R6   12
          3 0001CA  437F                                 CSYNC    s:4940,SPREL
          3 0001CB  EC80 0000 0000  xsym                 LDB,B6   HOST_BUF$
          3 0001CE  E786                                 STH,R6   ,B6
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:34   

      201     4941    2                  KP_MSG.HEAD.OPERATION_STATUS = PHASE;

   4941   3 0001CF  C847 0007                            LDR,R4   PHASE,AUTO
          3 0001D1  EC80 0000 0000  xsym                 LDB,B6   HOST_BUF$
          3 0001D4  CAC6 0001                            SRM,R4,'00FF'X    1,B6
          3 0001D6       00FF

      202     4942    2                  HOST_MES_LEN = SIZEC(KP_MSG.HEAD);

   4942   3 0001D7  DF00 0000 0000  xsym                 STR,R5   HOST_MES_LEN

      203     4943    2                  CALL KOH$HOST_IO (%KOH_WRITE_HOST#) ALTRET(FRAMMIT);

   4943   3 0001DA  BB80 0000 000E  04                   LAB,B3   +14
          3 0001DD  CBF0 0100                            LAB,B4   256,IMO
          3 0001DF  E380 0000 0000  xent                 LNJ,B6   KOH$HOST_IO
          3 0001E2       0001                            DC       s:4942,PREL

   4942   3                              FRAMMIT         null
      204     4944    2   FRAMMIT:       ;
      205     4945    2                  THINGS_ARE_ROSY = '0'B;

   4945   3 0001E3  8700 0000 0000  xsym FRAMMIT         CL       THINGS_ARE_ROSY

      206     4946    2                  END;

      207     4947    1             CALL KOI$CLEANUP;

   4947   3 0001E6  CBF0 0000                            LAB,B4   0,IMO
          3 0001E8  E380 0000 0000  xent                 LNJ,B6   KOI$CLEANUP
          3 0001EB       0001                            DC       s:4948,PREL

      208     4948    1             ALTRETURN;

   4948   3 0001EC  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:35   
      209     4949        %EJECT;
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:36   
      210     4950    1   DEFAULT_TABLE: PROC;

   4950   3 0001EF  EFC7 0008            DEFAULT_TABLE   STB,B6   PHASE+1,AUTO

      211     4951        /**/
      212     4952        /*  This routine is called if PIGLET is unable to communicate with Node-      */
      213     4953        /*  Admin.  Although we would never want to make assumptions about our        */
      214     4954        /*  environment under battle conditions, this is OK to do during testing.     */
      215     4955        /**/
      216     4956    2             TOP_DEVICE = 1;

   4956   3 0001F1  6C01                                 LDV,R6   1
          3 0001F2  EF00 0000 0000  xsym                 STR,R6   TOP_DEVICE

      217     4957    2             DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR(0) = BITBIN('0600'X)/64;

   4957   3 0001F5  5C18                                 LDV,R5   24
          3 0001F6  DF00 0000 0000  xsym                 STR,R5   DEVICE_TABLE

      218     4958    2             DEVICE_TABLE.DEV_ENTRY.DRIVE_NO(0) = 0;

   4958   3 0001F9  8700 0000 0004  xsym                 CL       DEVICE_TABLE+4

      219     4959    2             DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR(1) = BITBIN('0680'X)/64;

   4959   3 0001FC  4C1A                                 LDV,R4   26
          3 0001FD  CF00 0000 0009  xsym                 STR,R4   DEVICE_TABLE+9

      220     4960    2             DEVICE_TABLE.DEV_ENTRY.DRIVE_NO(1) = 1;

   4960   3 000200  EF00 0000 000D  xsym                 STR,R6   DEVICE_TABLE+13

      221     4961    2             RETURN;

   4961   3 000203  ECC7 0008                            LDB,B6   PHASE+1,AUTO
          3 000205  C3C6 0001                            LNJ,B4   1,B6
      222     4962        /**/
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:37   
      223     4963    2             END DEFAULT_TABLE;
      224     4964        /**/
      225     4965    1             END KOI$INIT;
      226     4966        %EOD;

PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:38   
--  Include file information  --

   G_JIT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KP_MSG.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KO_SUBS.:E05TOU  is referenced.
   KO_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KOI$INIT.
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:39   

 **** Variables and constants ****

  ****  Section 001  Data  KOI$INIT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     9-0-0/w STRC(128)   r     1 FPT_GDS                    0-0-0/w STRC(144)   r     1 FPT_INTCON
    11-0-0/w SBIN(16)    r     1 I

  ****  Section 002 RoData KOI$INIT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(128)   r     1 FPT_EVENT                  8-0-0/w STRC(160)   r     1 FPT_SPRIV
    12-0-0/b BIT (32)    r     1 PRIVS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w SBIN(16)    r     1 CHN                        5-0-0/w PTR         r     1 CHN$
     7-0-0/w SBIN(16)    r     1 PHASE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN(16)    r     1 BUFFER_BYTES               0-0-0/w SBIN(16)    r     1 DATA_BYTES
     0-0-0/w STRC(896)   r     1 DEVICE_TABLE               0-0-0/w PTR         r     1 HOST_BUF$
     0-0-0/w SBIN(16)    r     1 HOST_LEN                   0-0-0/w SBIN(16)    r     1 HOST_MES_LEN
     0-0-0/w PTR         r     1 IN_DISK_BUF$               0-0-0/w SBIN(16)    r     1 IN_DISK_LEN
     0-0-0/w UBIN(16)    r     1 KH_CHNHI                   0-0-0/w UBIN(16)    r     1 KH_CHNLOW
     0-0-0/w PTR         r     1 KH_CHNLOW$                 0-0-0/w STRC(784)   r     1 KH_CTLTBL
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:40   
     0-0-0/b BIT (16)    r     1 KO_ATTR                    0-0-0/w SBIN(16)    r     1 KO_INHIBIT_LEVEL
     0-0-0/w SBIN(16)    r     1 KO_INTERRUPT_LEVEL         0-0-0/w UBIN(16)    r     1 KO_MEM
     0-0-0/w CHAR(2)     r     1 KO_RES                     0-0-0/w SBIN(16)    r     1 KO_RUNNING_LEVEL
     0-0-0/b BIT         r     1 NA_LIVES                   0-0-0/w PTR         r     1 OUT_DISK_BUF$
     0-0-0/w SBIN(16)    r     1 OUT_DISK_LEN               0-0-0/w STRC(48)    r     1 PIGLET_SEGMENT
     0-0-0/b BIT         r     1 THINGS_ARE_ROSY            0-0-0/w SBIN(16)    r     1 TOP_DEVICE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(16528) r     1 KP_MSG
     0-0-0/w ASTR(808)   r     1 M$DCB                      0-0-0N  NULL        r     1 M$HOST


   Procedure KOI$INIT requires 519 words for executable code.
   Procedure KOI$INIT requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:41   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:42   
          MINI XREF LISTING

BUFFER_BYTES
      3670**DCL      4838<<ASSIGN
CHN
      4441**DCL      4892<<DOINDEX  4896>>ASSIGN   4901>>ASSIGN
CHN$
      4442**DCL      4896<<ASSIGN   4897>>IF
CHN_FULL
      4898**LABEL    4895--GOTO
DATA_BYTES
      3670**DCL      4839<<ASSIGN
DEFAULT_TABLE
      4950**PROC     4881--CALL
DEVICE_TABLE.DEV_ENTRY.CHAN_ADDR
      3702**DCL      4901<<ASSIGN   4912<>CALL     4957<<ASSIGN   4959<<ASSIGN
DEVICE_TABLE.DEV_ENTRY.DEVICE_TYPE
      3704**DCL      4912<>CALL
DEVICE_TABLE.DEV_ENTRY.DRIVE_NO
      3762**DCL      4902<<ASSIGN   4958<<ASSIGN   4960<<ASSIGN
FPT_EVENT
      4765**DCL      4811<>CALL
FPT_EVENT.V
      4778**DCL      4769--DCLINIT
FPT_EVENT.V_
      4769**DCL      4769--REDEF
FPT_GDS
      4429**DCL      4867<>CALL
FPT_GDS.RESULTS_
      4432**DCL      4865<<ASSIGN
FPT_GDS.V
      4432**DCL      4432--DCLINIT
FPT_GDS.V.PAGES
      4436**DCL      4864<<ASSIGN
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:43   
FPT_INTCON.V
      4408**DCL      4406--DCLINIT
FPT_INTCON.V.LEVEL
      4408**DCL      4922<<ASSIGN
FPT_SPRIV
      4796**DCL      4845<>CALL
FPT_SPRIV.V
      4798**DCL      4798--DCLINIT
FRAMMIT
      4942**LABEL    4943--CALLALT
GOT_TABLE
      4898**LABEL    4882--GOTO
HOST_BUF$
      3395**DCL      3595--IMP-PTR  4871<<ASSIGN   4872>>ASSIGN   4939>>ASSIGN   4940>>ASSIGN   4941>>ASSIGN
HOST_LEN
      3395**DCL      4856<>CALL     4860>>ASSIGN   4872>>ASSIGN
HOST_MES_LEN
      3395**DCL      4942<<ASSIGN
I
      4440**DCL      4911<<DOINDEX  4912>>CALL     4912>>CALL
IN_DISK_BUF$
      3397**DCL      4872<<ASSIGN   4873>>ASSIGN
IN_DISK_LEN
      3397**DCL      4858<>CALL     4860>>ASSIGN   4873>>ASSIGN
KH$CHN
      4578**DCL      4896--ASSIGN
KH$CHN.RESOURCE
      4606**DCL      4897>>IF
KH$CHN.TERMID.TERM
      4674**DCL      4683--REDEF
KHA$INIT
      4555**DCL-ENT  4825--CALL
KHA$INIT_CHANTBL
      4557**DCL-ENT  4884--CALL
KHA$INIT_CONTROL
      4556**DCL-ENT  4831--CALL
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:44   
KHA$INIT_DONE
      4558**DCL-ENT  4929--CALL
KH_CHNHI
      3178**DCL      3179--REDEF    4892>>DOINDEX
KH_CHNLOW
      3179**DCL      3180--REDEF    4892>>DOINDEX  4896>>ASSIGN
KH_CHNLOW$
      3178**DCL      4896>>ASSIGN
KH_CTLTBL
      3200**DCL      4831<>CALL
KH_CTLTBL.PARM.PTR$
      3326**DCL      4826<<ASSIGN   4827<<ASSIGN   4828<<ASSIGN   4829<<ASSIGN   4830<<ASSIGN
KOA$MAIN_EVENT
      4503**DCL-ENT  4780--DCLINIT
KOE$NA_EVENT
      4512**DCL-ENT  4884--CALL
KOH$HOST_IO
      4515**DCL-ENT  4815--CALL     4943--CALL
KOI$CLEANUP
      4518**DCL-ENT  4947--CALL
KOP$INITIALIZE
      4533**DCL-ENT  4912--CALL
KOP$INTERRUPT
      4530**DCL-ENT  4408--DCLINIT
KOU$BOUND
      4539**DCL-ENT  4856--CALL     4858--CALL     4859--CALL
KO_ATTR
      3161**DCL      4830--ASSIGN   4884<>CALL
KO_INHIBIT_LEVEL
      3162**DCL      4826--ASSIGN   4836>>ASSIGN
KO_INTERRUPT_LEVEL
      3161**DCL      4836<<ASSIGN   4837>>ASSIGN   4922>>ASSIGN
KO_MEM
      3161**DCL      4827--ASSIGN   4828--ASSIGN   4860<<ASSIGN   4864>>ASSIGN
KO_RES
      3161**DCL      4829--ASSIGN   4884<>CALL     4897>>IF
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:45   
KO_RUNNING_LEVEL
      3162**DCL      4837<<ASSIGN
KP_MSG
      3595**DCL      4838--ASSIGN   4856--CALL
KP_MSG.HEAD
      3596**DCL      4939<<ASSIGN   4942--ASSIGN
KP_MSG.HEAD.MSG_TYPE
      3597**DCL      4940<<ASSIGN
KP_MSG.HEAD.OPERATION_STATUS
      3600**DCL      4941<<ASSIGN
KP_MSG.TDATA
      3621**DCL      3622--REDEF    3623--REDEF    3628--REDEF    3642--REDEF    3647--REDEF    3651--REDEF
      3657--REDEF    3660--REDEF
M$DCB.DCBNAME.L
      4734**DCL      4734--IMP-SIZ
M$DCB.EOMCHAR
      4725**DCL      4725--REDEF    4726--REDEF
M$DCB.FCD
      4721**DCL      4937>>IF
M$DCB.FLDID
      4724**DCL      4724--REDEF
M$DCB.RES
      4719**DCL      4720--REDEF
M$EVENT
       185**DCL-ENT  4811--CALL
M$GDS
       197**DCL-ENT  4867--CALL
M$HOST
      3768**DCL      4937--IF
M$SPRIV
       191**DCL-ENT  4845--CALL
M$SYS
       177**DCL-ENT  4846--CALL
NA_DONE
      4830**LABEL    4824--GOTO
NA_LIVES
PL6.E3A0      #001=KOI$INIT File=KOI$INIT.:E05TSI                                WED 07/30/97 01:15 Page:46   
      3163**DCL      4823>>IF       4879>>IF       4928>>IF
NEXT_CHN
      4903**LABEL    4899--GOTO
NEXT_DEVICE
      4914**LABEL    4912--CALLALT
OUT_DISK_BUF$
      3398**DCL      4873<<ASSIGN
OUT_DISK_LEN
      3397**DCL      4857<<ASSIGN   4858<>CALL     4859<>CALL     4873>>ASSIGN
PHASE
      4493**DCL      4822<<ASSIGN   4844<<ASSIGN   4855<<ASSIGN   4878<<ASSIGN   4910<<ASSIGN   4921<<ASSIGN
      4927<<ASSIGN   4941>>ASSIGN
PIGLET_SEGMENT
      3511**DCL      4865--ASSIGN
PIGLET_SEGMENT.BASE
      3515**DCL      3515--REDEF
PIGLET_SEGMENT.BASE$
      3515**DCL      4866<<ASSIGN   4871>>ASSIGN
PRIVS
      4806**DCL      4798--DCLINIT
THINGS_ARE_ROSY
      3450**DCL      4945<<ASSIGN
TOP_DEVICE
      3768**DCL      4891<<ASSIGN   4893>>IF       4900<<ASSIGN   4900>>ASSIGN   4901>>ASSIGN   4902>>ASSIGN
      4902>>ASSIGN   4911>>DOINDEX  4956<<ASSIGN
WERE_DOOMED
      4928**LABEL    4811--CALLALT  4815--CALLALT  4825--CALLALT  4831--CALLALT  4845--CALLALT  4846--CALLALT
      4867--CALLALT  4884--CALLALT  4929--CALLALT

PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:47   
      227        1        /*T***********************************************************/
      228        2        /*T*                                                         */
      229        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      230        4        /*T*                                                         */
      231        5        /*T***********************************************************/
      232        6        KOI$CLEANUP: PROC;
      233        7        /**/
      234        8        /*  KOI$CLEANUP                                                               */
      235        9        /*   This routine is used when PIGLET wants to fold up his tents and          */
      236       10        /*   vanish silently into the darkness.                                       */
      237       11        /**/
      238       12        /*  INCLUDE FILES  */
      239       13        /**/
      240       14        %INCLUDE KO_DATA_R;
      241     3761        /**/
      242     3762        /*  STATIC DATA  */
      243     3763        /**/
      244     3764        %FPT_INTREL (FPTN = FPT_INTREL,
      245     3765                     STCLASS = STATIC);
      246     3784        %FPT_FDS (FPTN = FPT_FDS,
      247     3785                  STCLASS = STATIC);
      248     3807        /**/
      249     3808        /*  ENTRY DCLS  */
      250     3809        /**/
      251     3810        %KO_ENTRIES (OMIT=KOI$CLEANUP);
      252     3866        %KH_ENTDEFS;
      253     3873        /**/
      254     3874        /*  THE CODE  */
      255     3875        /**/
      256     3876        %EJECT;
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:48   
      257     3877        /**/
      258     3878        /*  RELEASE INTERRUPT LEVEL THAT WE HAD  */
      259     3879        /**/
      260     3880    1             FPT_INTREL.V.LEVEL = KO_INTERRUPT_LEVEL;
      261     3881    1             CALL M$INTREL (FPT_INTREL) ALTRET(INTLEV_OK);
      262     3882    1   INTLEV_OK:   ;
      263     3883        %EJECT;
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:49   
      264     3884        /**/
      265     3885        /*  Release any acquired buffer space.  */
      266     3886        /**/
      267     3887    1             IF PIGLET_SEGMENT.BASE$ ~= ADDR(NIL)
      268     3888    1              THEN                         /* Gotta release                      */
      269     3889    2                DO;
      270     3890    2                  FPT_FDS.V.PAGES = PIGLET_SEGMENT.PAGES;
      271     3891    2                  FPT_FDS.RESULTS_ = VECTOR(PIGLET_SEGMENT);
      272     3892    2                  CALL M$FDS (FPT_FDS) ALTRET(BUF_BURP);
      273     3893    2   BUF_BURP:     ;
      274     3894    2                  END;
      275     3895        /**/
      276     3896        /*  CLOSE PATH TO HOST  */
      277     3897        /**/
      278     3898    1             CALL KOH$HOST_IO (%KOH_CLOSE_HOST#) ALTRET(HCLOSE_DONE);
      279     3899    1   HCLOSE_DONE: ;
      280     3900        /**/
      281     3901    1             RETURN;
      282     3902        /**/
      283     3903    1   END KOI$CLEANUP;

PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:50   
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KP_MSG.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KO_SUBS.:E05TOU  is referenced.
   KO_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KOI$CLEANUP.

   Procedure KOI$CLEANUP requires 58 words for executable code.
   Procedure KOI$CLEANUP requires 4 words of local(AUTO) storage.

    No errors detected in file KOI$INIT.:E05TSI    .

PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:51   

 Object Unit name= KOI$CLEANUP                                File name= KOI$INIT.:E05TOU
 UTS= JUL 30 '97 01:15:58.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   DCB   even  none     0      0  M$HOST
    1   Data  even  none    12      C  KOI$CLEANUP
    2   Proc  even  none    58     3A  KOI$CLEANUP
    3  RoData even  none     6      6  KOI$CLEANUP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  KOI$CLEANUP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KOH$HOST_IO
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KO_INTERRUPT_LEVEL                    KH_CHNHI                              KH_CHNLOW
     HOST_BUF$                             PIGLET_SEGMENT                        M$HOST
r    G$ROS$
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:52   


      227        1        /*T***********************************************************/
      228        2        /*T*                                                         */
      229        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      230        4        /*T*                                                         */
      231        5        /*T***********************************************************/
      232        6        KOI$CLEANUP: PROC;

      6   2 000000  D380 0000 0000  xent KOI$CLEANUP     LNJ,B5   X6A_AUTO_0
          2 000003       0004 0000                       DC       4,0

      233        7        /**/
      234        8        /*  KOI$CLEANUP                                                               */
      235        9        /*   This routine is used when PIGLET wants to fold up his tents and          */
      236       10        /*   vanish silently into the darkness.                                       */
      237       11        /**/
      238       12        /*  INCLUDE FILES  */
      239       13        /**/
      240       14        %INCLUDE KO_DATA_R;
      241     3761        /**/
      242     3762        /*  STATIC DATA  */
      243     3763        /**/
      244     3764        %FPT_INTREL (FPTN = FPT_INTREL,
      245     3765                     STCLASS = STATIC);
      246     3784        %FPT_FDS (FPTN = FPT_FDS,
      247     3785                  STCLASS = STATIC);
      248     3807        /**/
      249     3808        /*  ENTRY DCLS  */
      250     3809        /**/
      251     3810        %KO_ENTRIES (OMIT=KOI$CLEANUP);
      252     3866        %KH_ENTDEFS;
      253     3873        /**/
      254     3874        /*  THE CODE  */
      255     3875        /**/
      256     3876        %EJECT;
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:53   
      257     3877        /**/
      258     3878        /*  RELEASE INTERRUPT LEVEL THAT WE HAD  */
      259     3879        /**/
      260     3880    1             FPT_INTREL.V.LEVEL = KO_INTERRUPT_LEVEL;

   3880   2 000005  E800 0000 0000  xsym                 LDR,R6   KO_INTERRUPT_LEVEL
          2 000008  EF00 0000 0003  01                   STR,R6   FPT_INTREL+3

      261     3881    1             CALL M$INTREL (FPT_INTREL) ALTRET(INTLEV_OK);

   3881   2 00000B  BB80 0000 0000  01                   LAB,B3   FPT_INTREL
          2 00000E  B870 0442                            LDR,R3   1090,IMO
          2 000010  0001                                 MCL
          2 000011       0001                            DC       s:3880,PREL

   3880   2                              INTLEV_OK       null
      262     3882    1   INTLEV_OK:   ;
      263     3883        %EJECT;
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:54   
      264     3884        /**/
      265     3885        /*  Release any acquired buffer space.  */
      266     3886        /**/
      267     3887    1             IF PIGLET_SEGMENT.BASE$ ~= ADDR(NIL)

   3887   2 000012  8D80 0000 0000  xsym INTLEV_OK       CMN      PIGLET_SEGMENT
          2 000015  0901 0018                            BE       s:3891,PREL

      268     3888    1              THEN                         /* Gotta release                      */
      269     3889    2                DO;

      270     3890    2                  FPT_FDS.V.PAGES = PIGLET_SEGMENT.PAGES;

   3890   2 000017  E800 0000 0002  xsym                 LDR,R6   PIGLET_SEGMENT+2
          2 00001A  EF00 0000 000A  01                   STR,R6   FPT_FDS+6

      271     3891    2                  FPT_FDS.RESULTS_ = VECTOR(PIGLET_SEGMENT);

   3891   2 00001D  AB80 0000 0000  03                   LAB,B2   0
          2 000020  2C00                                 LDV,R2   0
          2 000021  6C06                                 LDV,R6   6
          2 000022  BB80 0000 0000  01                   LAB,B3   FPT_INTREL
          2 000025  3C0E                                 LDV,R3   14
          2 000026  0008                                 MMM

      272     3892    2                  CALL M$FDS (FPT_FDS) ALTRET(BUF_BURP);

   3892   2 000027  BB80 0000 0004  01                   LAB,B3   FPT_FDS
          2 00002A  B870 0903                            LDR,R3   2307,IMO
          2 00002C  0001                                 MCL
          2 00002D       0001                            DC       s:3891,PREL

   3891   2                              BUF_BURP        null
      273     3893    2   BUF_BURP:     ;
      274     3894    2                  END;

      275     3895        /**/
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:55   
      276     3896        /*  CLOSE PATH TO HOST  */
      277     3897        /**/
      278     3898    1             CALL KOH$HOST_IO (%KOH_CLOSE_HOST#) ALTRET(HCLOSE_DONE);

   3898   2 00002E  BB80 0000 0004  03   BUF_BURP        LAB,B3   +4
          2 000031  CBF0 0100                            LAB,B4   256,IMO
          2 000033  E380 0000 0000  xent                 LNJ,B6   KOH$HOST_IO
          2 000036       0001                            DC       s:3898,PREL

   3898   2                              HCLOSE_DONE     null
      279     3899    1   HCLOSE_DONE: ;
      280     3900        /**/
      281     3901    1             RETURN;

   3901   2 000037  C380 0000 0000  xent HCLOSE_DONE     LNJ,B4   X6A_ARET
      282     3902        /**/
      283     3903    1   END KOI$CLEANUP;

PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:56   
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KP_MSG.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KO_SUBS.:E05TOU  is referenced.
   KO_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KOI$CLEANUP.
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:57   

 **** Variables and constants ****

  ****  Section 001  Data  KOI$CLEANUP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC(128)   r     1 FPT_FDS                    0-0-0/w STRC(64)    r     1 FPT_INTREL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 HOST_BUF$                  0-0-0/w SBIN(16)    r     1 KO_INTERRUPT_LEVEL
     0-0-0/w STRC(48)    r     1 PIGLET_SEGMENT


   Procedure KOI$CLEANUP requires 58 words for executable code.
   Procedure KOI$CLEANUP requires 4 words of local(AUTO) storage.

    No errors detected in file KOI$INIT.:E05TSI    .
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:58   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:59   
          MINI XREF LISTING

BUF_BURP
      3891**LABEL    3892--CALLALT
FPT_FDS
      3798**DCL      3892<>CALL
FPT_FDS.RESULTS_
      3801**DCL      3891<<ASSIGN
FPT_FDS.V
      3801**DCL      3801--DCLINIT
FPT_FDS.V.PAGES
      3805**DCL      3890<<ASSIGN
FPT_INTREL
      3778**DCL      3881<>CALL
FPT_INTREL.V
      3782**DCL      3780--DCLINIT
FPT_INTREL.V.LEVEL
      3782**DCL      3880<<ASSIGN
HCLOSE_DONE
      3898**LABEL    3898--CALLALT
HOST_BUF$
      3387**DCL      3587--IMP-PTR
INTLEV_OK
      3880**LABEL    3881--CALLALT
KH_CHNHI
      3170**DCL      3171--REDEF
KH_CHNLOW
      3171**DCL      3172--REDEF
KOH$HOST_IO
      3828**DCL-ENT  3898--CALL
KO_INTERRUPT_LEVEL
      3153**DCL      3880>>ASSIGN
KP_MSG.TDATA
      3613**DCL      3614--REDEF    3615--REDEF    3620--REDEF    3634--REDEF    3639--REDEF    3643--REDEF
PL6.E3A0      #002=KOI$CLEANUP File=KOI$INIT.:E05TSI                             WED 07/30/97 01:15 Page:60   
      3649--REDEF    3652--REDEF
M$FDS
       189**DCL-ENT  3892--CALL
M$INTREL
       168**DCL-ENT  3881--CALL
PIGLET_SEGMENT
      3503**DCL      3891--ASSIGN
PIGLET_SEGMENT.BASE
      3507**DCL      3507--REDEF
PIGLET_SEGMENT.BASE$
      3507**DCL      3887>>IF
PIGLET_SEGMENT.PAGES
      3507**DCL      3890>>ASSIGN
