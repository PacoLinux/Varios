VERSION E05

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI                                                                   1    BMAP - B00     
                                         1  *M* HFC$UTIL - GATE LOCK/UNLOCK AND MISC BMAP MP SUBROUTINES
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7  *
                                         8  *P* NAME:        HFC$UTIL
                                         9  *P*
                                        10  *P* PURPOSE:     Utility BMAP subroutines.  Contains subroutines
                                        11  *P*              for locking and unlocking gates, starting slave
                                        12  *P*              CPUs, pausing CPUs, changing master CPU,
                                        13  *P*              washing memory chips, and various subroutines
                                        14  *P*              used during initialization to read
                                        15  *P*              configuration registers in the CPU, system
                                        16  *P*              control unit, and memory.

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UTIL                                                   2    BMAP - B00     
                                        17         TTL     HFC$UTIL
                                        18         ENTDEF  HFC$UTIL
                                        19         ENTDEF  HFC$DIS
                                        20         ENTDEF  HFC$CACHECLR
                                        21         ENTDEF  HFC$ASSOCCLR
                                        22         ENTDEF  HFC$STWS
                                        23         ENTDEF  HFC$STCPU
                                        24         ENTDEF  HFC$MAKECPU
                                        25         ENTDEF  HFC$LOCK
                                        26         ENTDEF  HFC$UNLOCK
                                        27         ENTDEF  HFC$RMCM
                                        28         ENTDEF  HFC$SMCM
                                        29         ENTDEF  HFC$RSCR
                                        30         ENTDEF  HFC$SSCR
                                        31         ENTDEF  HFC$CPUTYPE
                                        32         ENTDEF  HFC$WASH
                                        33         ENTDEF  HFC$LSWITCH
                                        34         SYMDEF  HFC$ULSWITCH
                                        35         ENTDEF  HFC$MPLK
                                        36         SYMDEF  HFC$MPUNLK
                                        37         ENTDEF  HFC$LDIAG
                                        38         ENTDEF  HFC$ULDIAG
                                        39         ENTDEF  HFC$RTIME
                                        40         ENTDEF  HFC$UPDTIME
                                        41         ENTDEF  HFC$RCONF
                                        42         ENTDEF  HFC$LCON
                                        43         ENTDEF  HFC$BMAP_CLOCK
                                        44         ENTDEF  HFC$BMAP_CLOCK7
                                        45         ENTDEF  HFC$RCW
                                        46         ENTDEF  HFC$RCON
                                        47         ENTDEF  HFC$RCONF_8000
                                        48         ENTDEF  HFC$SCONF_8000
                                        49         ENTDEF  HFC$RELIEF
                                        50         ENTREF  SSS$STOP
                                        51         ENTREF  X66_AUTO_1
                                        52         ENTREF  X66_ARET
                                        53         SYMREF  H_GATECNT
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UTIL                                                   3    BMAP - B00     
                                        54         SYMREF  H_LUFREG
                                        55         SYMREF  H_S1000_FLG
                                        56         SYMREF  HW_TYPE
                                        57         SYMREF  HW_PERF
                                        58         SYMREF  HW_PERF_SUB
                                        59         SYMREF  H_RPM_FLG
                                        60         SYMREF  H_RPM_CONNECT_TABLE
                                        61         SYMREF  H_DPS8000_CI_TABLE
                                        62         SYMREF  H_DPS8000_CPU_CONF_REG
                                        63         SYMREF  H_TIME_CORR
                                        64         SYMREF  H_NURSE
                                        65         SYMREF  H_FAIL_NUM
                                        66         SYMREF  H_RELIEF
                                        67         SYMREF  S_RLF_SSR
                                        68         SYMREF  B$WSQ0PT$
                                        69         SEGREF  ISBSID
                                        70         SEGREF  SCUSID
                                        71         SEGREF  REALSID
                                        72         SEGREF  SCRCHENTSID
                                        73         SEGREF  LSSID
                                        74         SEGREF  MISCSID
                                        75         SYMREF  IT_AAFAULT
                                        76         SYMREF  IT_MONFAULT
                                        77         SYMREF  IT_SCPUWSPTD
                                        78         SYMREF  IT_CLOFF
                                        79         SYMREF  S_XASR
                                        80         SYMREF  S_XPSR
                                        81         SYMREF  S_XSSR
                                        82         SYMREF  S_XPR2
                                        83         SYMREF  S_X1
                                        84         SYMREF  S_XX
                                        85         SYMREF  H_CNNCTMLBX
                                        86         SYMREF  S_CUN
                                        87         SYMREF  S_PORTNR
                                        88         SYMREF  S_PNO
                                        89         SYMREF  S_MPSTATE
                                        90         SYMREF  S_TIMR
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UTIL                                                   4    BMAP - B00     
                                        91         SYMREF  H_RSW1
                                        92         SYMREF  H_RSW2
                                        93         SYMREF  H_DUMMY
                                        94         SYMREF  H_MIXED_MP
                                        95         SYMREF  S_PTYPE
                                        96         SYMREF  S_SSPTYPE
                                        97         SYMREF  S_THIS_PTYPE
                                        98         SYMREF  H_LUFREG
                                        99         SYMREF  NI$DS
                                       100         SYMREF  S_NSCPUA
                                       101         SYMREF  SC_TOOLONG
                                       102         SYMREF  SC_NEGDIS
                                       103         SYMREF  SC_NOTLOCKED
                                       104         SYMREF  SC_WRONGUSER
                                       105         SYMREF  SC_NEGGATECNT
                                       106         SYMREF  SC_BADSTIMR
                                       107         SYMREF  H_ENMASK
                                       108         SYMREF  H_DSMASK
                                       109         SYMREF  H_PERF_DATA
                                       110         SYMREF  H_MAX_PERF
                                       111         SYMREF  S_PMUSECTIME
                                       112         SYMREF  S_MIN_HUNG
                                       113         SYMREF  S_THIS_PERF
                                       114         SYMREF  H_PERF
                                       115         SYMREF  EPU_MASK
                                       116         SYMREF  IT_CLOFF
                                       117         SYMREF  SS_MS_COOKIE
                                       118         SYMREF SS_UTS_COOKIE
                                       119         SYMREF  S_UPTIME

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UTIL                                                   5    BMAP - B00     
                                       120         EJECT
                                       121  *      ALIGN macro is used to reserve space up to the desired
                                       122  *      place within a four word block. The containing section
                                       123  *      must have the attribute EIGHT for ALIGN to work properly.
                                       124  *      Invoked as follows:
                                       125  *      ALIGN   {1,2,3,4}
                                       126  *
                                       127  ALIGN  MACRO
                                       128  _1     SET     *-HFC$UTIL
                                       129  _2     SET     _1/4*4
                                       130  _2     SET     _1-_2
                                       131  _2     SET     4+#1-_2
                                       132         IFE     _2,1
                                       133         NOP
                                       134         IFE     _2,2,2
                                       135         TRA     2,IC
                                       136         NOP
                                       137         IFE     _2,3,3
                                       138         TRA     3,IC
                                       139         NOP
                                       140         NOP
                                       141         IFE     _2,5
                                       142         NOP
                                       143         IFE     _2,6,2
                                       144         TRA     2,IC
                                       145         NOP
                                       146         IFE     _2,7,3
                                       147         TRA     3,IC
                                       148         NOP
                                       149         NOP
                                       150         ENDM    ALIGN
                                       151  *
                                       152         LODM    B_BMACROS_C
                                       153         DETAIL  OFF
             000000000000              154         MONLS
                                       155         DETAIL  ON

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UTIL                                                   6    BMAP - B00     
                                       156         EJECT
                                       157                 *******************************************************
                                       158                 *
                                       159                 * ASSEMBLY TIME DATA DECLARATIONS
                                       160                 *
                                       161                 *******************************************************
                                       162                 *******************************************************
                                       163                 * REGISTER EQUIVALENCIES
                                       164                 *******************************************************
             000000000001              165  AP1    EQU     1               PTR TO ARG1 (6PREGS)
             000000000003              166  AP2    EQU     3               PTR TO ARG2 (6PREGS)
             000000000004              167  AP3    EQU     4               PTR TO ARG3 (6PREGS)
                                       168                 ***************************************************
                                       169                 *  REAL MEMORY ADDRESS
                                       170                 ***************************************************
             000000000032              171  FLTLOC BOOL    32
             000000000040              172  AFLTLOC BOOL   40
             000000000100              173  SCPUPG BOOL    100
             000000001430              174  CONF_8000 BOOL 1430
                                       175                 ***************************************************
                                       176                 *  RESERVED MEMORY ADDRESSES (DPS90)
                                       177                 ***************************************************
             000000001130              178  UPD_D  BOOL    1130            MSOS DATE AT DATE/TIME CORRECTION
             000000001131              179  UPD_T  BOOL    1131            MSOS TIME AT DATE/TIME CORRECTION
             000000001132              180  UPD_CL1 BOOL   1132            CP6 CCL(0-35) AT DATE/TIME CORR
             000000001133              181  UPD_CL2 BOOL   1133            CP6 CCL(36-72) AT DATE/TIME CORR
                                       182                 *************************************************
                                       183                 * LCPR TAGS
                                       184                 *************************************************
             000000000002              185  LUTAGL EQU     2               LCPR TAG FOR LOCKUP REGISTER
                                       186                 *************************************************
                                       187                 * CPU TYPE DEFINITIONS
                                       188                 *************************************************
             000000000000              189  L66    EQU     0
             000000000001              190  DPSE   EQU     1
             000000000002              191  ELS1   EQU     2
             000000000003              192  ADP    EQU     3
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UTIL                                                   7    BMAP - B00     
             000000000004              193  DPS90  EQU     4
             000000000005              194  DPS90XA EQU    5
             000000000006              195  RPM    EQU    6
                                       196                 *************************************************
                                       197                 * NEW OP CODES (DPS90)
                                       198                 *************************************************
             6120 00 2 00 02 03        199  DIAG   OPD     O12/6120,6/,O2/2,6/,O6/2,O4/3

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$DIS - SLAVE PAUSE PROCEDURE                            8    BMAP - B00     
                                       200         TTLS    HFC$DIS - SLAVE PAUSE PROCEDURE
                                       201                 *************************************************
                                       202                 * HFC$DIS - CPU PAUSE PROCEDURE
                                       203                 *************************************************
                                       204  *
                                       205  *F* NAME:        HFC$DIS
                                       206  *F*
                                       207  *F* PURPOSE:     CPU pause procedure
                                       208  *
                                       209  *D* NAME:        HFC$DIS
                                       210  *D*
                                       211  *D* DESCRIPTION: Entered as a result of a connect fault with the
                                       212  *D*              connect mailbox set to pause.  CPU's are paused
                                       213  *D*              while a slave CPU is started or when any CPU is
                                       214  *D*              in XDELTA or SCREECH.
                                       215  *
 0 000000                              216         USE     HFC$UTIL,1
                                       217         EIGHT
   000000                              218  HFC$UTIL NULL
   000000                              219  HFC$DIS NULL
                                       220         INHIB   ON              INHIBIT INTERRUPTS
   000000  X 000000 7232 00            221         LXL3    S_PNO           DON'T TRY TO DISABLE ON SLAVES
   000001 (0)000005 6012 00            222         TNZ     DISSLV
   000002  X 000000 4716 07            223         LDP1    SCUSID,DL       MASTER CPU -> DISABLE INTS
   000003  X 000000 2372 00            224         LDAQ    H_DSMASK
   000004    1 00000 5533 00           225         SMCM    0,,1
   000005    000001 2352 07            226  DISSLV LDA     1,DL
   000006  X 000000 7552 13            227         STA     S_MPSTATE,3     EITHER WAY, SET STATE TO PAUSED
                                       228         INHIB   OFF
                                       229  *
                                       230  *      AFTER DISABLE, UNINHIBIT TO ALLOW ANY POSSIBLY OUTSTAND-
                                       231  *      ING CONNECT FAULTS FROM OTHER CPUS TRYING TO PAUSE US.
                                       232  *      WITHOUT THIS WINDOW, THESE CONNECT FAULTS WOULD PULL US
                                       233  *      OUT OF THE DIS PREMATURELY.  THE DELAY IS LONGER THAN
                                       234  *      THE TIME IT TAKES TO TEST S_MPSTATE AND ISSUE THE CIOC
                                       235  *      IN THE OTHER CPU.
                                       236  *
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$DIS - SLAVE PAUSE PROCEDURE                            9    BMAP - B00     
   000007    000000 2350 07            237         LDA     0,DL
   000010    000001 0350 07            238         ADLA    1,DL
   000011    000062 1150 07            239         CMPA    50,DL
   000012 (0)000010 6040 00            240         TMI     *-2
                                       241  *
                                       242         INHIB   ON
   000013    000076 6162 00            243         DIS     62                  DELAY UNTIL CONNECT
   000014    000000 0116 00            244         CCAC                    CLEAR CACHE
   000015    000002 5326 00            245         CAMP    2                 AND ASSOCIATIVE MEMORY
   000016    000002 2352 07            246         LDA     2,DL
   000017  X 000000 7552 13            247         STA     S_MPSTATE,3         THEN SET STATE TO RUNNING.
   000020  X 000000 2342 00            248         SZN     S_PNO           MASTER CPU?
   000021    000001 6012 11            249         TNZ     1,X1            NO -> RETURN
   000022    000000 2352 07            250         LDA     0,DL            FOR ENABL2D
   000023 (0)000647 7102 00            251         TRA     ENABL2D         ENABLE IF COUNT ZERO AND RETURN
                                       252         INHIB   OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$CACHECLR - HFC$ASSOCCLR                                10   BMAP - B00     
                                       253         TTLS    HFC$CACHECLR - HFC$ASSOCCLR
                                       254                 *************************************************
                                       255                 * HFC$CACHECLR - CLEAR CACHE
                                       256                 *************************************************
                                       257  *P* NAME:        HFC$CACHECLR
                                       258  *P* PURPOSE:     Clear cache.
   000024                              259  HFC$CACHECLR NULL
                                       260         INHIB   ON
   000024    000000 0116 00            261         CCAC                    CLEAR THE CACHE
   000025    000001 7102 11            262         TRA     1,X1            RETURN
                                       263                 *************************************************
                                       264                 * HFC$ASSOCCLR - CLEAR ASSOCIATIVE MEMORY (PTWAM)
                                       265                 *************************************************
                                       266  *P* NAME:        HFC$ASSOCCLR
                                       267  *P* PURPOSE:     Clear associative memory (PTWAM).
   000026                              268  HFC$ASSOCCLR NULL
   000026    1 00000 2343 00           269         SZN       0,,1
   000027 (0)000056 6002 00            270         TZE       CLRALL                NO PARAMS, ALWAYS CLEAR IT ALL.
   000030  X 000000 2352 00            271         LDA       HW_TYPE
   000031 (0)000032 7102 05            272         TRA       *+1,AL
   000032 (0)000041 7102 00            273         TRA       CLR0                  0, CLEAR ALL
   000033    000000000000              274         OCT     0                       1, ILLEGAL
   000034    000000000000              275         OCT     0                       2, ILLEGAL
   000035    000000000000              276         OCT     0                       3, ILLEGAL
   000036 (0)000043 7102 00            277         TRA       CLR90                 4, DPS90 (BASIC)
   000037 (0)000043 7102 00            278         TRA       CLR90                 5, DPS90 (XA)
   000040 (0)000060 7102 00            279         TRA       CLR8000               6,RPM
   000041    000002 5326 00            280  CLR0   CAMP    2               CLEAR AND ENABLE PTWAM
   000042    000001 7102 11            281         TRA     1,X1            RETURN
                                       282  *
                                       283  *P* NAME:        CLR90
                                       284  *P* PURPOSE:     Clear all or part of assoc. memory on a DPS-90.
                                       285  *
   000043                              286  CLR90         NULL
   000043    0 00000 4717 00           287         LDP1    0,,0
   000044    1 00000 2353 00           288         LDA     0,,1        Get WSQ into A
   000045    0 00001 4717 00           289         LDP1    1,,0
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$CACHECLR - HFC$ASSOCCLR                                11   BMAP - B00     
   000046    000030 7352 00            290         ALS     24          Move WSQ into place for CAMP
   000047    1 00000 2753 00           291         ORA     0,,1        OR in the virtual address
   000050    0 00002 4717 00           292         LDP1    2,,0        Get pointer to third arg.
   000051    1 00000 2363 00           293         LDQ     0,,1        Count is now in Q
   000052    777000 3152 03            294         CANA    =O0777000,DU Is WSQ zero?
   000053 (0)000056 6002 00            295         TZE     CLRALL
   000054    000000 5326 01            296         CAMP    0,AU        AU is just to set the tag field to 01
   000055    000001 7102 11            297         TRA     1,X1
   000056                              298  CLRALL NULL
   000056    000000 5326 00            299         CAMP    0
   000057    000001 7102 11            300         TRA     1,X1
                                       301  *
                                       302  *P* NAME:       CLR8000
                                       303  *P* PURPOSE:    Clear all or part of the assoc. memory on a DPS-8000
                                       304  *
   000060                              305  CLR8000 NULL
   000060    0 00002 4717 00           306        LDP1  2,,0        GET COUNT PTR
   000061    1 00000 2363 00           307        LDQ   0,,1        GOT COUUNT
   000062    000001 1162 07            308        CMPQ  1,DL        IS IT JUST A SINGLE PAGE?
   000063 (0)000056 6012 00            309        TNZ   CLRALL      NOPE, CLEAR THE WHOLE THING (STUPID RPM!)
   000064    0 00001 4717 00           310        LDP1  1,,0        GET VPNO PTR
   000065    1 00000 2353 00           311        LDA   0,,1        VPNO IN A.  (JUST LOW 6 BITS LOOKED AT)
   000066    000000 5326 01            312        CAMP  0,AU        AU TO SET TAG=01
   000067    000001 7102 11            313        TRA   1,X1

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$STWS - STORE WORKING SPACE REGS                        12   BMAP - B00     
                                       314        TTLS     HFC$STWS - STORE WORKING SPACE REGS
                                       315                 *************************************************
                                       316                 * HFC$STWS - STORE WORKING SPACE REGISTERS
                                       317                 *************************************************
                                       318  *P* NAME:        HFC$STWS
                                       319  *P* PURPOSE:     Returns contents of working space registers.
   000070                              320  HFC$STWS NULL
   000070    0 00000 4717 00           321         LDP1    0,,0            GET POINTER TO ARGUMENT
   000071    1 00000 7527 00           322         STWS    0,,1            STORE WSR'S 0-3 IN PARAM #1
   000072    1 00001 7527 00           323         STWS    1,,1            STORE WSR'S 4-7 IN PARAM #1
   000073    000001 7102 11            324         TRA     1,X1            RETURN
                                       325         INHIB   OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$STCPU - START SLAVE CPU                                13   BMAP - B00     
                                       326         TTLS    HFC$STCPU - START SLAVE CPU
                                       327                 ***************************************************
                                       328                 * HFC$STCPU    START SLAVE CPU
                                       329                 ***************************************************
                                       330  *
                                       331  *P* NAME:        HFC$STCPU
                                       332  *P*
                                       333  *P* PURPOSE:     Cause a slave CPU to go from stop to paused.
                                       334  *
                                       335  *D* NAME:        HFC$STCPU
                                       336  *D*
                                       337  *D* DESCRIPTION: HFC$STCPU is always entered on the master CPU
                                       338  *D*              with any active slave CPU's in the pause state.
                                       339  *D*              HFC$STCPU returns if the port on which the
                                       340  *D*              slave CPU is attached is not enabled.  If the
                                       341  *D*              port is enabled, the fault entry descriptor in
                                       342  *D*              location 32 is changed to point at the AARDVARK
                                       343  *D*              initialize slave CPU routine and a connect is
                                       344  *D*              sent to the slave CPU.  After a 20 msec. delay
                                       345  *D*              to give the slave time to respond, the fault
                                       346  *D*              entry descriptor is changed back to point to
                                       347  *D*              the monitor's fault handler, and HFC$STCPU
                                       348  *D*              returns to the calling program.
                                       349  *
          (0)000000000074              350  HFC$STCPU  EQU *
                                       351         INHIB   ON
   000074    0 00000 4717 00           352         LDP1    0,,0            GET POINTER TO ARGUMENT
   000075    1 00000 7233 00           353         LXL3    0,,1            LOGICAL PROCESSOR NUMBER
   000076  X 000000 7242 13            354         LXL4    S_PORTNR,3      CPU PORT NUMBER
   000077  X 000000 2342 00            355         SZN     H_S1000_FLG     Check if an S1000
   000100 (0)000141 6012 00            356         TNZ     S_STCPU         Yes
   000101  X 000000 4706 07            357         LDP0    SCUSID,DL
   000102    0 00010 4133 00           358         RSCR    8,,0            READ CONFIGURATION SWITCHES
   000103  X 000000 2342 00            359         SZN     H_RPM_FLG       Check if an RPM
   000104 (0)000147 6042 00            360         TMI     S_STCPURPM      Yes
   000105    000004 1042 03            361         CMPX4   4,DU            CHECK PORT NUMBER
   000106 (0)000111 6052 00            362         TPL     *+3             BRANCH IF PORT 4-7
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$STCPU - START SLAVE CPU                                14   BMAP - B00     
   000107    000040 7352 14            363         ALS     32,X4           GET PORT MASK BIT FOR PORT 0-3
   000110 (0)000112 7102 00            364         TRA     *+2
   000111    000034 7362 14            365         QLS     28,X4           GET PORT MASK BIT FOR PORT 4-7
   000112    000001 6052 11            366         TPL     1,X1            RETURN IF PORT NOT ENABLED
   000113                              367  COM_STCPU NULL
   000113  X 000000 2372 00            368         LDAQ    IT_AAFAULT
   000114  X 000000 4736 07            369         LDP3    REALSID,DL      REAL MEMORY PG0-3, BYPASS CACHE
   000115    3 00032 7573 00           370         STAQ    FLTLOC,,3
   000116    3 00040 7573 00           371         STAQ    AFLTLOC,,3
   000117  X 000000 2362 13            372         LDQ     IT_SCPUWSPTD,3      PUT PAGE ADDRESS OF WSPTD IN
   000120    3 00100 7563 00           373         STQ     SCPUPG,,3           REAL LOC O'100'.
   000121  X 000000 2342 00            374         SZN     H_RPM_FLG           IS THIS RPM
   000122 (0)000126 6002 00            375         TZE     NON_RPM_CIOC        NO IT ISN'T
   000123  X 000000 2352 13            376         LDA     H_DPS8000_CI_TABLE,X3
   000124    000000 0152 00            377         CIOC                        DO THE CONNECT
   000125 (0)000127 7102 00            378         TRA     *+2
   000126                              379  NON_RPM_CIOC   NULL                NON RPM CONNECT
   000126  X 000000 0152 13            380         CIOC    S_PORTNR,3          DO THE CONNECT
   000127    0 00040 4133 00           381         RSCR    32,,0
   000130    072460 0362 07            382         ADLQ    30000,DL
   000131  X 000000 7562 00            383         STQ     S_XX
   000132    0 00040 4133 00           384         RSCR    32,,0
   000133  X 000000 1162 00            385         CMPQ    S_XX
   000134    777776 6022 04            386         TNC     -2,IC
                                       387  *
   000135  X 000000 2372 00            388         LDAQ    IT_MONFAULT         RESET FAULT DSCR
   000136    3 00032 7573 00           389         STAQ    FLTLOC,,3
   000137    3 00040 7573 00           390         STAQ    AFLTLOC,,3
   000140    000001 7102 11            391         TRA     1,X1            RETURN
                                       392  *
   000141                              393  S_STCPU NULL                   Check config on S1000
   000141    000004 1042 03            394         CMPX4   4,DU
   000142    000001 6052 11            395         TPL     1,X1            Port# > 3 , Return
   000143    000000 6122 07            396         DIAG    0,07            Read config register
   000144  X 000000 3752 14            397         ANA     EPU_MASK,X4
   000145    000001 6002 11            398         TZE     1,X1            The port is not configured
   000146 (0)000113 7102 00            399         TRA     COM_STCPU
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$STCPU - START SLAVE CPU                                15   BMAP - B00     
                                       400  *
   000147                              401  S_STCPURPM NULL                   Check config on RPM
   000147    000034 7352 14            402         ALS     28,X4
   000150    000001 6052 11            403         TPL     1,X1
   000151 (0)000113 7102 00            404         TRA     COM_STCPU
                                       405         INHIB OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$MAKECPU - SWITCH MASTER CPUS                           16   BMAP - B00     
                                       406         TTLS    HFC$MAKECPU - SWITCH MASTER CPUS
                                       407                 *************************************************
                                       408                 * HFC$MAKECPU - MAKE CPU ON PORT N THE MASTER
                                       409                 *************************************************
                                       410  *
                                       411  *F* NAME:        HFC$MAKECPU
                                       412  *F*
                                       413  *F* PURPOSE:     Make a slave CPU become the master CPU.
                                       414  *
                                       415  *D* NAME:        HFC$MAKECPU
                                       416  *D*
                                       417  *D* DESCRIPTION: If entered from SSW$MAKECPU on master, switch
                                       418  *D*              the port number table around, fix system
                                       419  *D*              control unit interrupt mask register assignment
                                       420  *D*              and start up the slave with a connect fault.
                                       421  *D*              After slave is running, map onto the slave
                                       422  *D*              monitor with a LPDBR, load up with the other
                                       423  *D*              guy's environment and go to SSS$STOP.  When
                                       424  *D*              entered on the slave as a result of the MAKECPU
                                       425  *D*              connect fault, map onto the master monitor and
                                       426  *D*              load up his environment (that he left behind
                                       427  *D*              when he went to SSS$STOP), then return to
                                       428  *D*              SSW$MAKECPU to finish what the other CPU
                                       429  *D*              started.
                                       430  *
          (0)000000000152              431  HFC$MAKECPU EQU  *
                                       432         INHIB   ON              ENTERED DISABLED
   000152    0 00000 4717 00           433         LDP1    0,,0            GET POINTER TO ARGUMENT
   000153  X 000000 7536 00            434         STSS    S_XSSR          SAVE ENVIRONMENT
   000154  X 000000 7516 00            435         STPS    S_XPSR
   000155  X 000000 7506 00            436         STAS    S_XASR
   000156  X 000000 4526 00            437         STP2    S_XPR2
   000157  X 000000 7412 00            438         STX1    S_X1
   000160  X 000000 7252 00            439         LXL5    S_PNO
   000161    1 00000 7243 00           440         LXL4    0,,1            CPU TO SWITCH WITH
   000162 (0)000230 6002 00            441         TZE     SXM
   000163  X 000000 4502 00            442         STZ     S_MPSTATE       ENTERED ON MASTER FROM SSW$MAKE
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$MAKECPU - SWITCH MASTER CPUS                           17   BMAP - B00     
   000164  X 000000 2362 00            443         LDQ     S_PORTNR
   000165  X 000000 7262 14            444         LXL6    S_PORTNR,4
   000166  X 000000 4462 00            445         SXL6    S_PORTNR        SWITCH PORT NUMBERS
   000167  X 000000 7562 14            446         STQ     S_PORTNR,4
   000170  X 000000 2342 00            447         SZN     H_S1000_FLG
   000171    000003 6002 04            448         TZE     3,IC            Not an S1000
   000172    000000 6122 05            449         DIAG    0,05            Reset master on S1000
   000173 (0)000214 7102 00            450         TRA     COM_MAKE
   000174  X 000000 2342 00            451         SZN     H_RPM_FLG
   000175 (0)000203 6002 00            452         TZE     NON_RPM
   000176  X 000000 2362 00            453         LDQ     H_DPS8000_CI_TABLE     PICK UP DATA FOR MASTER
   000177  X 000000 7262 14            454         LXL6    H_DPS8000_CI_TABLE,4   PICK UP DATA FOR NEW MASTER
   000200  X 000000 4462 00            455         SXL6    H_DPS8000_CI_TABLE     STORE NUMBER MASTER CONNECT INDEX
   000201  X 000000 7562 14            456         STQ     H_DPS8000_CI_TABLE,4   STORE NEW SLAVE CONNECT INDEX
   000202 (0)000214 7102 00            457         TRA     COM_MAKE
   000203                              458  NON_RPM NULL
   000203  X 000000 4706 07            459         LDP0    SCUSID,DL
   000204    0 00010 4133 00           460         RSCR    8,,0
   000205  X 000000 7562 00            461         STQ     S_XX
   000206    000011 7352 00            462         ALS     9
   000207    000400 2362 07            463         LDQ     =O400,DL
   000210    000000 7322 16            464         QRS     0,6             SET MASK A PORT TO NEW MASTER
   000211    000077 7772 00            465         LLR     63
   000212  X 000000 2362 00            466         LDQ     S_XX
   000213    0 00010 0573 00           467         SSCR    8,,0
   000214                              468  COM_MAKE NULL
   000214    000010 2352 07            469         LDA     =O10,DL
   000215  X 000000 7552 14            470         STA     H_CNNCTMLBX,4
   000216  X 000000 2342 00            471         SZN     H_RPM_FLG           IS THIS RPM
   000217 (0)000223 6002 00            472         TZE     NOT_RPM_CIOC        NO IT ISN'T
   000220  X 000000 2352 00            473         LDA     H_DPS8000_CI_TABLE
   000221    000000 0152 00            474         CIOC                        DO THE CONNECT
   000222 (0)000224 7102 00            475         TRA     *+2
   000223                              476  NOT_RPM_CIOC   NULL                NON RPM CONNECT
   000223  X 000000 0152 00            477         CIOC   S_PORTNR             DO THE CONNECT
   000224    000002 2352 07            478         LDA     2,DL
   000225  X 000000 4736 07            479         LDP3    ISBSID,DL
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$MAKECPU - SWITCH MASTER CPUS                           18   BMAP - B00     
   000226    3 X 00000 1153 00         480         CMPA    S_MPSTATE,,3    WAIT FOR HIM TO RESPOND
   000227    777777 6012 04            481         TNZ     -1,IC
                                       482  *                              NEW MASTER NOW RUNNING, WE ARE
   000230  X 000000 2352 14            483  SXM    LDA     IT_SCPUWSPTD,4  NOW SLAVE.  MAP ONTO OTHER MONITOR.
   000231  X 000000 2342 00            484         SZN     H_S1000_FLG
   000232 (0)000250 6042 00            485         TMI     D90LDPDBR
   000233  X 000000 2342 00            486         SZN     H_RPM_FLG
   000234 (0)000243 6042 00            487         TMI     D8000LDPDBR
   000235    000026 7352 00            488         ALS     22
   000236  X 000000 7552 00            489         STA     S_XX
   000237  X 000000 1716 00            490         LPDBR   S_XX
   000240    000002 5326 00            491         CAMP    2               CLEAR PTWAM, JUST IN CASE
   000241    000000 0116 00            492         CCAC                    CLEAR CACHE, JUST IN CASE.
   000242 (0)000256 7102 00            493         TRA     CMNLDPDBR
   000243                              494  D8000LDPDBR NULL
   000243    000022 7352 00            495         ALS     18
   000244  X 000000 7552 00            496         STA     S_XX
   000245  X 000000 1716 00            497         LPDBR   S_XX
   000246    000002 5326 00            498         CAMP    2
   000247 (0)000256 7102 00            499         TRA     CMNLDPDBR
   000250                              500  D90LDPDBR NULL
   000250  X 000000 4706 00            501         LDP0    B$WSQ0PT$       GET POINTER TO WSQ0 PT
   000251    0 00000 2353 05           502         LDA     0,AL,0          GET PHYSICAL PAGE OF REAL PAGE
   000252    000002 7352 00            503         ALS     2               JUSTIFY AND MAKE MOD 512
   000253  X 000000 7552 00            504         STA     S_XX
   000254  X 000000 1716 00            505         LPDBR   S_XX
   000255    000000 5326 00            506         CAMP    0
   000256                              507  CMNLDPDBR NULL
   000256  X 000000 4726 00            508         LDP2    S_XPR2          RETRIEVE ENVIRONMENT
   000257  X 000000 7736 00            509         LDSS    S_XSSR
   000260  X 000000 7706 00            510         LDAS    S_XASR
   000261  X 000000 7716 00            511         LDPS    S_XPSR
   000262 (0)000737 7012 00            512         TSX1    HFC$CPUTYPE     READ PROC ID AND SET S_PTYPE
   000263    000000 0112 00            513         NOP
   000264  X 000000 2212 00            514         LDX1    S_X1            RETRIEVE X1
   000265    000000 1042 03            515         CMPX4   0,DU
   000266 (0)000272 6002 00            516         TZE     MASTER          B IF RUNNING ON NEW MASTER
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$MAKECPU - SWITCH MASTER CPUS                           19   BMAP - B00     
   000267  X 000000 2342 00            517         SZN     H_MIXED_MP      OLD MASTER - TEST MIXED MP MODE
   000270    000001 6012 11            518         TNZ     1,X1            MIXED MODE - RETURN TO HFB$CONNECT
   000271  X 000000 7102 00            519         TRA     SSS$STOP        NOT MIXED MODE - STOP OLD SLAVE
                                       520  *
   000272                              521  MASTER NULL
   000272  X 000000 2342 00            522         SZN     H_S1000_FLG
   000273    000002 6002 04            523         TZE     2,IC            Not an S1000
   000274    000000 6122 04            524         DIAG    0,04            Set master on S1000
   000275  X 000000 4736 07            525         LDP3    ISBSID,DL
                                       526  *
                                       527  *      WAIT FOR SLAVE TO GO TO EITHER PAUSE OR STOP
                                       528  *
   000276    000000 2352 07            529         LDA     0,DL            ASSUME SLAVE IS STOPPING
   000277  X 000000 2342 00            530         SZN     H_MIXED_MP      TEST MIXED MODE FLAG
   000300    000002 6002 04            531         TZE     2,IC            B IF NOT MIXED MODE
   000301    000001 2352 07            532         LDA     1,DL            SLAVE IS PAUSING
   000302  X 000000 7412 15            533         STX1    S_MPSTATE,5     SET MPSTATE SO WE CAN SEE CHANGE
                                       534  *
   000303    000002 2362 07            535         LDQ     2,DL            SET NEW MASTER RUNNING
   000304  X 000000 7562 00            536         STQ     S_MPSTATE
   000305    3 X 00000 1153 15         537         CMPA    S_MPSTATE,5,3   WAIT FOR SLAVE TO PAUSE OR STOP
   000306    777777 6012 04            538         TNZ     -1,IC
                                       539  *
                                       540  *      GIVE SLAVE ENOUGH TIME TO REALLY PAUSE OR STOP
                                       541  *
   000307    000001 0352 07            542         ADLA    1,DL
   000310    001750 1152 07            543         CMPA    1000,DL
   000311 (0)000307 6042 00            544         TMI     *-2
   000312    000001 7102 11            545         TRA     1,X1            RETURN TO SSW$MAKE
                                       546         INHIB   OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RELIEF - PROVIDE RELIEF FOR A DEAD CPU                 20   BMAP - B00     
                                       547         TTLS    HFC$RELIEF - PROVIDE RELIEF FOR A DEAD CPU
                                       548                 *************************************************
                                       549                 * HFC$RELIEF - PROVIDE RELIEF FOR A DEAD CPU
                                       550                 *************************************************
                                       551  *
                                       552  *F* NAME:        HFC$RELIEF
                                       553  *F*
                                       554  *F* PURPOSE:     To start relief on a CPU that has experienced a
                                       555  *      shutdown fault.  Only used for the DPS8000.
                                       556  *
                                       557  *D* NAME:        HFC$RELIEF
                                       558  *D*
                                       559  *D* DESCRIPTION: This routine determines if a CPU is already providing
                                       560  *D*    relief for a failed cpu.  If so it justs returns, it is not
                                       561  *D*    needed.  If no other CPU is providing relief, set H_NURSE to
                                       562  *D*    S_PNO, load up the environment of the the failed CPU and go
                                       563  *D*    for it. The routine is required for the DPS8000.
          (0)000000000313              564  HFC$RELIEF EQU *
                                       565         INHIB   ON                     ENTER DISABLED
   000313  X 000000 2342 00            566         SZN     H_NURSE                IS SOMEONE ELSE PROVIDING RELIEF
   000314    000001 6052 11            567         TPL     1,X1                   YEP, GET OUT
   000315  X 000000 2362 00            568         LDQ     S_PNO                  NOPE, I'LL DO IT
   000316  X 000000 7562 00            569         STQ     H_NURSE
   000317    400000 2352 03            570         LDA     =O400000,DU
   000320  X 000000 7552 00            571         STA     H_RELIEF
   000321  X 000000 7536 00            572         STSS    S_RLF_SSR           SAVE RLF ENVIRONMENT
   000322  X 000000 2352 00            573         LDA     H_FAIL_NUM             WHO FAILED
   000323  X 000000 2352 05            574         LDA     IT_SCPUWSPTD,AL        GET FAILED CPUS PDBR
   000324    000022 7352 00            575         ALS     18                     SHIFT IT
   000325  X 000000 7552 00            576         STA     S_XX                   SAVE HIS PDBR
   000326  X 000000 4502 06            577         STZ     S_MPSTATE,QL           SET RELIEF CPU STATE NOT RUNNING
   000327  X 000000 1716 00            578         LPDBR   S_XX                   LOAD THE PDBR
   000330  X 000000 7736 00            579         LDSS    S_RLF_SSR              LOAD FAILED CPUS SSR
   000331    000000 7134 00            580         EXIT                           GO FOR IT
   000332    0 000 000 01 0000

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LOCK - LOCK TWO WORD GATE                              21   BMAP - B00     
                                       581         TTLS    HFC$LOCK - LOCK TWO WORD GATE
                                       582                 *************************************************
                                       583                 * HFC$LOCK - LOCK TWO WORD GATE
                                       584                 *************************************************
                                       585  *
                                       586  *F* NAME:        HFC$LOCK
                                       587  *F*
                                       588  *F* PURPOSE:     To lock a two-word gate.
                                       589  *
                                       590  *D* NAME:        HFC$LOCK
                                       591  *D*
                                       592  *D* DESCRIPTION: In non-diagnostic mode, HFC$LOCK just disables
                                       593  *D*    interrups on a monoprocessing system.  On a
                                       594  *D*    multiprocessing system, HFC$LOCK disables interrupts
                                       595  *D*    (master CPU only) and locks the desired gate.  In
                                       596  *D*    diagnostic mode, HFC$LOCK always locks the desired gate.
                                       597  *D* *
                                       598  *D*    The format of the two-word gate is as follows:
                                       599  *D* *
                                       600  *D*    -----------------------------------------
                                       601  *D*    |                                       |
                                       602  *D*    |     GATE WORD - ZERO WHEN LOCKED      |
                                       603  *D*    -----------------------------------------
                                       604  *D*    |                   |                   |
                                       605  *D*    |       S_PNO       |  LOCKORS ADDRESS  |
                                       606  *D*    -----------------------------------------
                                       607  *D* *
                                       608  *D*    Doubleword alignment is not required for two-word
                                       609  *D*    gates.  The gate word is zero when the gate is locked.
                                       610  *D*    When the gate is unlocked, the gate word contains
                                       611  *D*    the address of the call to HFC$UNLOCK in bits 18-35.
                                       612  *D*    Bits 36-53 contain the logical processor number (from
                                       613  *D*    S_PNO) of the cpu on which this gate was last locked.
                                       614  *D*    Bits 54-71 contain the address of the last call to
                                       615  *D*    HFC$LOCK to lock this gate.
                                       616  *
   000333    000000 0112 00            617         ALIGN   4
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LOCK - LOCK TWO WORD GATE                              22   BMAP - B00     
                                       618         ALIGN   4
   000334                              619  HFC$LOCK NULL
                                       620         INHIB   ON
   000334  X 000000 2352 00            621         LDA     S_NSCPUA        ANY ACTIVE SLAVES?
                                       622  *
   000335                              623  HFC$LSWITCH NULL
   000335 (0)000344 6012 00            624         TNZ     HFC$MPLK        YES -> LOCK GATE
   000336  X 000000 4716 07            625         LDP1    SCUSID,DL       MONOPROCESSOR - JUST DISABLE
   000337  X 000000 0542 00            626         AOS     NI$DS           INCREMENT DISABLE COUNT
   000340  X 000000 2372 00            627         LDAQ    H_DSMASK
   000341    1 00000 5533 00           628         SMCM    0,,1            DISABLE INTERRUPTS
   000342    000001 7102 11            629         TRA     1,X1            RETURN
                                       630  *
   000343    000000 0112 00            631         ALIGN   4
   000344                              632  HFC$MPLK NULL
   000344    0 00000 4717 00           633         LDP1    0,,0            GET POINTER TO GATE
   000345  X 000000 7222 00            634         LXL2    S_PNO           ARE WE ON MASTER CPU?
   000346 (0)000354 6012 00            635         TNZ     LOCK2           NO -> DONT DISABLE
   000347  X 000000 4736 07            636         LDP3    SCUSID,DL       MASTER CPU
   000350  X 000000 0542 00            637         AOS     NI$DS           INCREMENT DISABLE COUNT
   000351  X 000000 2372 00            638         LDAQ    H_DSMASK
   000352    3 00000 5533 00           639         SMCM    0,,3            DISABLE INTERRUPTS
   000353    000000 2352 07            640         LDA     0,DL
                                       641  *
   000354                              642  LOCK2  NULL
   000354    1 00000 2143 00           643         SZNC    0,,1            IS GATE ALREADY LOCKED?
   000355 (0)000362 6002 00            644         TZE     CHKRLF          YES -> OPEN CONNECT WINDOW
   000356    1 00001 7423 00           645         STX2    1,,1            CPU NUMBER IN BITS 36-53
   000357    1 00001 4413 00           646         SXL1    1,,1            LOCKORS ADDRESS IN BITS 54-71
   000360  X 000000 0542 00            647         AOS     H_GATECNT       # GATES LOCKED ON THIS CPU
   000361    000001 7102 11            648         TRA     1,X1            RETURN
                                       649  *
   000362  X 000000 2342 00            650  CHKRLF SZN     H_RELIEF        DO WE HAVE TO WARP?
   000363 (0)000443 6052 00            651         TPL     WAIT2           NO
   000364  X 000000 2352 00            652         LDA     S_PNO           CHECK IF WE ARE ON NURSE
   000365  X 000000 1152 00            653         CMPA    H_NURSE
   000366 (0)000414 6012 00            654         TNZ     CHKFL           NO, BUT MAYBE ON FAILING CPU
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LOCK - LOCK TWO WORD GATE                              23   BMAP - B00     
   000367    1 00001 2273 00           655         LDX7    1,,1            YES, CHECK IF LOCKER IS FAILING
   000370  X 000000 1072 00            656         CMPX7   H_FAIL_NUM
   000371 (0)000443 6012 00            657         TNZ     WAIT2           NO, JUST WAIT FOR GATE
                                       658  *      WARP    FAILER
   000372 (0)000375 7134 00            659         ENTER   =O6000,,WF
   000373    0 000 000 60 6000
   000374 (0)000354 7102 00            660         TRA     LOCK2
   000375  X 000000 7536 00            661  WF     STSS    S_RLF_SSR
   000376  X 000000 2352 00            662         LDA     H_FAIL_NUM
   000377  X 000000 2352 05            663         LDA     IT_SCPUWSPTD,AL
   000400  X 000000 2342 00            664         SZN     H_RPM_FLG
   000401    000003 6052 04            665         TPL     3,IC
   000402    000022 7352 00            666         ALS     18
   000403    000004 7102 04            667         TRA     4,IC
   000404  X 000000 4776 00            668         LDP7    B$WSQ0PT$
   000405    7 00000 2353 05           669         LDA     0,AL,7
   000406    000002 7352 00            670         ALS     2
   000407  X 000000 7552 00            671         STA     S_XX
   000410  X 000000 1716 00            672         LPDBR   S_XX
   000411  X 000000 7736 00            673         LDSS    S_RLF_SSR
   000412    000000 7134 00            674         EXIT
   000413    0 000 000 01 0000
   000414  X 000000 1152 00            675  CHKFL  CMPA    H_FAIL_NUM      CHECK IF WE ARE ON FAILING CPU
   000415 (0)000443 6012 00            676         TNZ     WAIT2           NO, JUST WAIT FOR GATE
   000416    1 00001 2273 00           677         LDX7    1,,1            YES, CHECK IF LOCKER IS NURSE
   000417  X 000000 1072 00            678         CMPX7   H_NURSE
   000420 (0)000443 6012 00            679         TNZ     WAIT2           NO, JUST WAIT FOR GATE
                                       680  *      WARP    NURSE
   000421 (0)000424 7134 00            681         ENTER   =O6000,,WN
   000422    0 000 000 60 6000
   000423 (0)000354 7102 00            682         TRA     LOCK2
   000424  X 000000 7536 00            683  WN     STSS    S_RLF_SSR
   000425  X 000000 2352 00            684         LDA     H_NURSE
   000426  X 000000 2352 05            685         LDA     IT_SCPUWSPTD,AL
   000427  X 000000 2342 00            686         SZN     H_RPM_FLG
   000430    000003 6052 04            687         TPL     3,IC
   000431    000022 7352 00            688         ALS     18
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LOCK - LOCK TWO WORD GATE                              24   BMAP - B00     
   000432    000004 7102 04            689         TRA     4,IC
   000433  X 000000 4776 00            690         LDP7    B$WSQ0PT$
   000434    7 00000 2353 05           691         LDA     0,AL,7
   000435    000002 7352 00            692         ALS     2
   000436  X 000000 7552 00            693         STA     S_XX
   000437  X 000000 1716 00            694         LPDBR   S_XX
   000440  X 000000 7736 00            695         LDSS    S_RLF_SSR
   000441    000000 7134 00            696         EXIT
   000442    0 000 000 01 0000
                                       697  *
   000443                              698  WAIT2  NULL                    OPEN WINDOW FOR CONNECTS
                                       699         INHIB   OFF
   000443    000001 0350 07            700         ADLA    1,DL            KEEP COUNT OF WAIT TIME
   000444    000040 1150 03            701         CMPA    32,DU           WAIT APPROX 32 SECOND
   000445 (0)000354 6040 00            702         TMI     LOCK2           TEST LOCK AGAIN
   000446  X 000000 7134 00            703         ENTER   SCRCHENTSID,,SC_TOOLONG   WAITED TOO LONG
   000447    0 000 000 60 X 0000
   000450    000000 2350 07            704         LDA     0,DL            IF SCREECH RETURNS, TRY AGAIN
   000451 (0)000354 7100 00            705         TRA     LOCK2
                                       706         INHIB   ON

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LOCK - LOCK TWO WORD GATE                              25   BMAP - B00     
                                       707         EJECT
                                       708  *D* NAME:        HFC$LOCK
                                       709  *D*
                                       710  *D* DESCRIPTION:
                                       711  *D*    A diagnostic mode is provided for debugging problems
                                       712  *D*    with locks.  To enable the diagnostic mode, install
                                       713  *D*    the following monitor patches with XDELTA during a
                                       714  *D*    tape boot:
                                       715  *D* *
                                       716  *D*        M HFC$LSWITCH TRA HFC$LDIAG (TNZ! HFC$MPLK)
                                       717  *D* *
                                       718  *D*        M HFC$ULSWITCH TRA HFC$ULDIAG (TNZ! HFC$MPUNLK)
                                       719  *D* *
                                       720  *D*    When running in diagnostic mode, the format of the
                                       721  *D*    two-word gate is as follows:
                                       722  *D* *
                                       723  *D*    -----------------------------------------
                                       724  *D*    |                                       |
                                       725  *D*    |     GATE WORD - ZERO WHEN LOCKED      |
                                       726  *D*    -----------------------------------------
                                       727  *D*    |                   |                   |
                                       728  *D*    |  S_CUN  |  S_PNO  |  LOCKORS ADDRESS  |
                                       729  *D*    -----------------------------------------
                                       730  *D* *
                                       731  *D*    Bits 0-35 and 54-71 are the same as the non-diagnostic
                                       732  *D*    mode format.  If the current mode is monitor execution,
                                       733  *D*    Bits 36-44 contain zero.  If the current mode is not
                                       734  *D*    monitor execution, bits 36-44 contain the last lockors
                                       735  *D*    user number (from S_CUN).  Bits 45-53 contain the
                                       736  *D*    logical processor number (from S_PNO) of the CPU on
                                       737  *D*    which this gate was last locked.
                                       738  *
   000452    000002 7102 04            739         ALIGN   4
   000453    000000 0112 00
   000454                              740  HFC$LDIAG NULL
   000454    0 00000 4717 00           741         LDP1    0,,0            GET POINTER TO GATE
   000455  X 000000 2342 00            742         SZN     S_PNO           ARE WE ON MASTER CPU?
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LOCK - LOCK TWO WORD GATE                              26   BMAP - B00     
   000456 (0)000464 6012 00            743         TNZ     LOCK2D          NO -> DONT DISABLE
   000457  X 000000 4736 07            744         LDP3    SCUSID,DL
   000460  X 000000 0542 00            745         AOS     NI$DS           INCREMENT DISABLE COUNT
   000461  X 000000 2372 00            746         LDAQ    H_DSMASK
   000462    3 00000 5533 00           747         SMCM    0,,3            DISABLE INTERRUPTS
   000463    000000 2352 07            748         LDA     0,DL
                                       749  *
   000464                              750  LOCK2D NULL
   000464    1 00000 2143 00           751         SZNC    0,,1            IS GATE ALREADY LOCKED?
   000465 (0)000564 6002 00            752         TZE     WAIT2D          YES -> OPEN CONNECT WINDOW
   000466  X 000000 2352 00            753         LDA     S_PNO           S_PNO IN BITS 45-53
   000467    000033 7352 00            754         ALS     27
   000470  X 000000 2362 00            755         LDQ     S_TIMR
   000471    000002 1162 07            756         CMPQ    2,DL            MONITOR EXECUTION?
   000472 (0)000474 6052 00            757         TPL     *+2             YES -> DO NOT USE S_CUN
   000473  X 000000 2752 00            758         ORA     S_CUN           NO -> S_CUN IN BITS 36-44
   000474    000033 7752 00            759         ALR     27
   000475    1 00001 7553 00           760         STA     1,,1            STORE S_CUN AND S_PNO
   000476    1 00001 4413 00           761         SXL1    1,,1            LOCKORS ADDRESS IN BITS 54-71
   000477  X 000000 0542 00            762         AOS     H_GATECNT       # GATES LOCKED ON THIS CPU
   000500    000001 7102 11            763         TRA     1,X1            RETURN
                                       764  *
   000501  X 000000 2342 00            765  CHKRFD SZN     H_RELIEF        DO WE HAVE TO WARP?
   000502 (0)000564 6052 00            766         TPL     WAIT2D          NO
   000503  X 000000 2352 00            767         LDA     S_PNO           CHECK IF WE ARE ON NURSE
   000504  X 000000 1152 00            768         CMPA    H_NURSE
   000505 (0)000534 6012 00            769         TNZ     CHKFLD          NO, BUT MAYBE ON FAILING CPU
   000506    1 00001 2273 00           770         LDX7    1,,1            YES, CHECK IF LOCKER IS FAILING
   000507    000777 3672 03            771         ANX7    =O777,DU
   000510  X 000000 1072 00            772         CMPX7   H_FAIL_NUM
   000511 (0)000564 6012 00            773         TNZ     WAIT2D          NO, JUST WAIT FOR GATE
                                       774  *      WARP    FAILER
   000512 (0)000515 7134 00            775         ENTER   =O6000,,WFD
   000513    0 000 000 60 6000
   000514 (0)000464 7102 00            776         TRA     LOCK2D
   000515  X 000000 7536 00            777  WFD    STSS    S_RLF_SSR
   000516  X 000000 2352 00            778         LDA     H_FAIL_NUM
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LOCK - LOCK TWO WORD GATE                              27   BMAP - B00     
   000517  X 000000 2352 05            779         LDA     IT_SCPUWSPTD,AL
   000520  X 000000 2342 00            780         SZN     H_RPM_FLG
   000521    000003 6052 04            781         TPL     3,IC
   000522    000022 7352 00            782         ALS     18
   000523    000004 7102 04            783         TRA     4,IC
   000524  X 000000 4776 00            784         LDP7    B$WSQ0PT$
   000525    7 00000 2353 05           785         LDA     0,AL,7
   000526    000002 7352 00            786         ALS     2
   000527  X 000000 7552 00            787         STA     S_XX
   000530  X 000000 1716 00            788         LPDBR   S_XX
   000531  X 000000 7736 00            789         LDSS    S_RLF_SSR
   000532    000000 7134 00            790         EXIT
   000533    0 000 000 01 0000
   000534  X 000000 1152 00            791  CHKFLD CMPA    H_FAIL_NUM      CHECK IF WE ARE ON FAILING CPU
   000535 (0)000564 6012 00            792         TNZ     WAIT2D          NO, JUST WAIT FOR GATE
   000536    1 00001 2273 00           793         LDX7    1,,1            YES, CHECK IF LOCKER IS NURSE
   000537  X 000000 1072 00            794         CMPX7   H_NURSE
   000540    000777 3672 03            795         ANX7    =O777,DU
   000541 (0)000564 6012 00            796         TNZ     WAIT2D          NO, JUST WAIT FOR GATE
                                       797  *      WARP    NURSE
   000542 (0)000545 7134 00            798         ENTER   =O6000,,WND
   000543    0 000 000 60 6000
   000544 (0)000464 7102 00            799         TRA     LOCK2D
   000545  X 000000 7536 00            800  WND    STSS    S_RLF_SSR
   000546  X 000000 2352 00            801         LDA     H_NURSE
   000547  X 000000 2352 05            802         LDA     IT_SCPUWSPTD,AL
   000550  X 000000 2342 00            803         SZN     H_RPM_FLG
   000551    000003 6052 04            804         TPL     3,IC
   000552    000022 7352 00            805         ALS     18
   000553    000004 7102 04            806         TRA     4,IC
   000554  X 000000 4776 00            807         LDP7    B$WSQ0PT$
   000555    7 00000 2353 05           808         LDA     0,AL,7
   000556    000002 7352 00            809         ALS     2
   000557  X 000000 7552 00            810         STA     S_XX
   000560  X 000000 1716 00            811         LPDBR   S_XX
   000561  X 000000 7736 00            812         LDSS    S_RLF_SSR
   000562    000000 7134 00            813         EXIT
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LOCK - LOCK TWO WORD GATE                              28   BMAP - B00     
   000563    0 000 000 01 0000
                                       814  *
   000564                              815  WAIT2D NULL                    OPEN WINDOW FOR CONNECTS
                                       816         INHIB   OFF
   000564    000001 0350 07            817         ADLA    1,DL            KEEP COUNT OF WAIT TIME
   000565    000040 1150 03            818         CMPA    32,DU           WAIT APPROX 32 SECOND
   000566 (0)000464 6040 00            819         TMI     LOCK2D          TEST LOCK AGAIN
   000567  X 000000 7134 00            820         ENTER   SCRCHENTSID,,SC_TOOLONG   WAITED TOO LONG
   000570    0 000 000 60 X 0000
   000571    000000 2350 07            821         LDA     0,DL            IF SCREECH RETURNS, TRY AGAIN
   000572 (0)000464 7100 00            822         TRA     LOCK2D

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UNLOCK - UNLOCK TWO WORD GATE                          29   BMAP - B00     
                                       823         TTLS    HFC$UNLOCK - UNLOCK TWO WORD GATE
                                       824                 *************************************************
                                       825                 * HFC$UNLOCK - UNLOCK TWO WORD GATE
                                       826                 *************************************************
                                       827  *
                                       828  *F* NAME:        HFC$UNLOCK
                                       829  *F*
                                       830  *F* PURPOSE:     To unlock a two-word gate.
                                       831  *
   000573    000000 0110 00            832         ALIGN   4
   000574                              833  HFC$UNLOCK NULL
                                       834         INHIB ON
   000574    000001 3352 07            835         LCA     1,DL
   000575  X 000000 2342 00            836         SZN     S_NSCPUA        ANY ACTIVE SLAVES?
                                       837  *
   000576                              838  HFC$ULSWITCH NULL
   000576 (0)000610 6012 00            839         TNZ     HFC$MPUNLK      YES -> UNLOCK GATE
   000577  X 000000 0552 00            840         ASA     NI$DS           MONOPROCESSOR - JUST ENABLE
   000600 (0)000662 6042 00            841         TMI     NOTLOCKED       NEGATIVE IS A NONO
   000601    000001 6012 11            842         TNZ     1,X1            RETURN IF COUNT NOT ZERO
   000602  X 000000 4716 07            843         LDP1    SCUSID,DL
   000603  X 000000 2372 00            844         LDAQ    H_ENMASK
   000604    1 00000 5533 00           845         SMCM    0,,1            ENABLE INTERRUPTS
   000605    000001 7102 11            846         TRA     1,X1            RETURN
                                       847  *
   000606    000002 7102 04            848         ALIGN   4
   000607    000000 0112 00
   000610                              849  HFC$MPUNLK NULL
   000610    0 00000 4717 00           850         LDP1    0,,0            GET POINTER TO GATE
   000611  X 000000 0552 00            851         ASA     H_GATECNT       # GATES LOCKED ON THIS CPU
                                       852  *
                                       853  *      STC2    H_DUMMY         MAY BE REQUIRED FOR DPSE
                                       854  *
   000612    1 00000 4413 00           855         SXL1    0,,1            UNLOCK GATE WITH UNLOCKORS ADDR
   000613  X 000000 2342 00            856         SZN     S_PNO           ARE WE ON MASTER CPU?
   000614    000001 6012 11            857         TNZ     1,X1            NO -> RETURN
   000615  X 000000 0552 00            858         ASA     NI$DS           YES -> TEST DISABLE COUNT
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UNLOCK - UNLOCK TWO WORD GATE                          30   BMAP - B00     
   000616    000001 6012 11            859         TNZ     1,X1            RETURN IF COUNT NOT ZERO
   000617  X 000000 4716 07            860         LDP1    SCUSID,DL
   000620  X 000000 2372 00            861         LDAQ    H_ENMASK
   000621    1 00000 5533 00           862         SMCM    0,,1            ENABLE INTERRUPTS
   000622    000001 7102 11            863         TRA     1,X1            RETURN
                                       864  *
   000623                              865  HFC$ULDIAG NULL                DIAGNOSTIC MODE
   000623    0 00000 4717 00           866         LDP1    0,,0            GET POINTER TO GATE
   000624    1 00000 2353 00           867         LDA     0,,1            IS GATE LOCKED?
   000625 (0)000662 6012 00            868         TNZ     NOTLOCKED       NO -> SCREECH
   000626  X 000000 2352 00            869         LDA     S_PNO           TEST S_PNO IN BITS 45-53
   000627    000033 7352 00            870         ALS     27
   000630                              871  TESTTIMR NULL
   000630  X 000000 2362 00            872         LDQ     S_TIMR          TIMER MODE
   000631    000002 1162 07            873         CMPQ    2,DL
   000632 (0)000634 6052 00            874         TPL     *+2             MON EXECUTION -> DO NOT USE S_CUN
   000633  X 000000 2752 00            875         ORA     S_CUN           SERV -> TEST S_CUN IN BITS 36-44
   000634    000033 7752 00            876         ALR     27
   000635    777777 2362 07            877         LDQ     =O777777,DL     ONLY LOOK AT BITS 36-53
   000636    1 00001 2113 00           878         CMK     1,,1            LOCKED BY RIGHT S_CUN AND S_PNO?
   000637 (0)000670 6012 00            879         TNZ     WRONGUSER       NO -> SCREECH
   000640    000001 3352 07            880         LCA     1,DL
   000641  X 000000 0552 00            881         ASA     H_GATECNT       # GATES LOCKED ON THIS CPU
   000642                              882  TESTGATECNT NULL
   000642 (0)000673 6042 00            883         TMI     NEGGATECNT      SCREECH IF GATE COUNT NEGATIVE
   000643  X 000000 7502 00            884         STC2    H_DUMMY         DPSE GATE UNLOCKING PROTOCOL
   000644    1 00000 4413 00           885         SXL1    0,,1            UNLOCK GATE WITH UNLOCKORS ADDR
   000645  X 000000 2342 00            886         SZN     S_PNO           ARE WE ON MASTER CPU?
   000646    000001 6012 11            887         TNZ     1,X1            NO -> RETURN
                                       888  *
   000647                              889  ENABL2D NULL                   DECREMENT NI$DS IF C(A)=-1
                                       890  *                              JUST TEST NI$DS IF C(A)=0
   000647  X 000000 0552 00            891         ASA     NI$DS
   000650 (0)000655 6012 00            892         TNZ     NOTNOWD         DONT ENABLE IS COUNT NOT ZERO
   000651  X 000000 4716 07            893         LDP1    SCUSID,DL
   000652  X 000000 2372 00            894         LDAQ    H_ENMASK
   000653    1 00000 5533 00           895         SMCM    0,,1            ENABLE INTERRUPTS
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UNLOCK - UNLOCK TWO WORD GATE                          31   BMAP - B00     
   000654    000001 7102 11            896         TRA     1,X1            RETURN
                                       897  *
   000655                              898  NOTNOWD NULL
   000655    000001 6052 11            899         TPL     1,X1            RETURN IF DISABLE COUNT NOT NEG
   000656  X 000000 7134 00            900         ENTER   SCRCHENTSID,,SC_NEGDIS   DISABLE COUNT NEGATIVE
   000657    0 000 000 60 X 0000
   000660    000000 2352 07            901         LDA     0,DL            IF SCREECH RETURNS, TRY AGAIN
   000661 (0)000647 7102 00            902         TRA     ENABL2D
                                       903  *
   000662                              904  NOTLOCKED NULL
   000662  X 000000 7134 00            905         ENTER   SCRCHENTSID,,SC_NOTLOCKED   GATE NOT LOCKED
   000663    0 000 000 60 X 0000
   000664 (0)000623 7102 00            906         TRA     HFC$ULDIAG      IF SCREECH RETURNS, TRY AGAIN
                                       907  *
   000665                              908  BADSTIMR NULL
   000665  X 000000 7134 00            909         ENTER SCRCHENTSID,,SC_BADSTIMR  INVALID TIMER MODE
   000666    0 000 000 60 X 0000
   000667 (0)000630 7102 00            910         TRA     TESTTIMR        IF SCREECH RETURNS, TRY AGAIN
                                       911  *
   000670                              912  WRONGUSER NULL
   000670  X 000000 7134 00            913         ENTER   SCRCHENTSID,,SC_WRONGUSER   LOCKED BY WRONG USER
   000671    0 000 000 60 X 0000
   000672 (0)000623 7102 00            914         TRA     HFC$ULDIAG      IF SCREECH RETURNS, TRY AGAIN
                                       915  *
   000673                              916  NEGGATECNT NULL
   000673  X 000000 7134 00            917         ENTER   SCRCHENTSID,,SC_NEGGATECNT   GATE COUNT NEGATIVE
   000674    0 000 000 60 X 0000
   000675  X 000000 2342 00            918         SZN     H_GATECNT       IF SCREECH RETURNS, TRY AGAIN
   000676 (0)000642 7102 00            919         TRA     TESTGATECNT
                                       920         INHIB   OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RSCR/HFC$SSCR - READ/SET SCU REGISTER                  32   BMAP - B00     
                                       921         TTLS    HFC$RSCR/HFC$SSCR - READ/SET SCU REGISTER
                                       922                 ***************************************************
                                       923                 * HFC$RSCR/HFC$SSCR - READ/SET SCU REGISTERS
                                       924                 ***************************************************
                                       925  *
                                       926  *F* NAME:        HFC$RSCR
                                       927  *F*
                                       928  *F* PURPOSE:     To read the system control unit (SCU) registers.
                                       929  *
                                       930  *D* NAME:        HFC$RSCR
                                       931  *D*
                                       932  *D* DESCRIPTION:
                                       933  *D*    Subroutines for reading and setting SCU registers.  First
                                       934  *D*    argument is pointer to desired system control unit. Second
                                       935  *D*    argument is pointer to desired RSCR/SSCR effective address.
                                       936  *D*    Third argument is pointer to data location where RSCR data
                                       937  *D*    is stored or SSCR data is obtained.
                                       938  *
   000677                              939  HFC$RSCR NULL
                                       940         INHIB   ON
   000677    0 00000 4717 00           941         LDP1    0,,0            GET POINTER TO 1ST ARGUMENT
   000700    0 00001 4737 00           942         LDP3    1,,0            GET POINTER TO 2ND ARGUMENT
   000701    0 00002 4747 00           943         LDP4    2,,0            GET POINTER TO 3RD ARGUMENT
   000702    1 00000 4717 00           944         LDP1    0,,1
   000703    3 00000 7243 00           945         LXL4    0,,3            ADDR FOR RSCR IS 2ND PARAM
   000704    1 00000 4133 14           946         RSCR    0,X4,1
   000705    4 00000 7553 00           947         STA     0,,4
   000706    4 00001 7563 00           948         STQ     1,,4
   000707    000001 7102 11            949         TRA     1,X1            RETURN
                                       950  *
                                       951  *F* NAME:        HFC$SSCR
                                       952  *F*
                                       953  *F* PURPOSE      To set the system control unit (SCU) registers.
                                       954  *
   000710                              955  HFC$SSCR NULL
   000710    0 00000 4717 00           956         LDP1    0,,0            GET POINTER TO 1ST ARGUMENT
   000711    0 00001 4737 00           957         LDP3    1,,0            GET POINTER TO 2ND ARGUMENT
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RSCR/HFC$SSCR - READ/SET SCU REGISTER                  33   BMAP - B00     
   000712    0 00002 4747 00           958         LDP4    2,,0            GET POINTER TO 3RD ARGUMENT
   000713    1 00000 4717 00           959         LDP1    0,,1
   000714    3 00000 7243 00           960         LXL4    0,,3            ADDR FOR RSCR IS 2ND PARAM
   000715    4 00000 2353 00           961         LDA     0,,4
   000716    4 00001 2363 00           962         LDQ     1,,4
   000717    1 00000 0573 14           963         SSCR    0,X4,1
   000720    000001 7102 11            964         TRA     1,X1            RETURN
                                       965         INHIB   OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RMCM/HFC$SMCM - READ/SET INTERRUPT MASKS               34   BMAP - B00     
                                       966         TTLS    HFC$RMCM/HFC$SMCM - READ/SET INTERRUPT MASKS
                                       967                 *************************************************
                                       968                 * HFC$RMCM/HFC$SMCM - READ/SET INTERRUPT MASKS
                                       969                 *************************************************
                                       970  *
                                       971  *F* NAME:        HFC$RMCM
                                       972  *F*
                                       973  *F* PURPOSE:     To read the interrupt mask register and port
                                       974  *F*              access mask register.
                                       975  *
                                       976  *D* NAME:        HFC$RMCM
                                       977  *D*
                                       978  *D* DESCRIPTION:
                                       979  *D*    Subroutines for reading and loading interrupt mask
                                       980  *D*    registers and port access mask registers.  First
                                       981  *D*    argument is pointer to desired system control unit.
                                       982  *D*    Second argument is data location where RMCM result is
                                       983  *D*    stored or SMCM data is obtained.
                                       984  *
                                       985         INHIB   ON
   000721                              986  HFC$RMCM NULL
   000721    0 00000 4717 00           987         LDP1    0,,0            POINTER TO 1ST ARGUMENT
   000722    1 00000 4737 00           988         LDP3    0,,1            POINTER TO DESIRED SCU
   000723    0 00001 4747 00           989         LDP4    1,,0            POINTER TO 2ND ARGUMENT
   000724    3 00000 2333 00           990         RMCM    0,,3            READ INTERRUPT MASK REGISTER
   000725    4 00000 7553 00           991         STA     0,,4            RETURN RESULT IN 2ND ARG
   000726    4 00001 7563 00           992         STQ     1,,4
   000727    000001 7102 11            993         TRA     1,X1            RETURN
                                       994  *
                                       995  *F* NAME:        HFC$SMCM
                                       996  *F*
                                       997  *F* PURPOSE:     To set interrupt mask register and port access
                                       998  *F*              mask register.
                                       999  *
   000730                             1000  HFC$SMCM
   000730    0 00000 4717 00          1001         LDP1    0,,0            POINTER TO 1ST ARGUMENT
   000731    1 00000 4737 00          1002         LDP3    0,,1            POINTER TO DESIRED SCU
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RMCM/HFC$SMCM - READ/SET INTERRUPT MASKS               35   BMAP - B00     
   000732    0 00001 4747 00          1003         LDP4    1,,0            POINTER TO 2ND ARGUMENT
   000733    4 00000 2353 00          1004         LDA     0,,4            SMCM DATA IS 2ND ARG
   000734    4 00001 2363 00          1005         LDQ     1,,4
   000735    3 00000 5533 00          1006         SMCM    0,,3            SET INTERRUPT MASK REGISTER
   000736    000001 7102 11           1007         TRA     1,X1            RETURN
                                      1008         INHIB   OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$CPUTYPE - DETERMINE CPU TYPE                           36   BMAP - B00     
                                      1009         TTLS    HFC$CPUTYPE - DETERMINE CPU TYPE
                                      1010                 *************************************************
                                      1011                 * HFC$CPUTYPE - DETERMINE CPU TYPE
                                      1012                 *************************************************
                                      1013  *
                                      1014  *F* NAME:        HFC$CPUTYPE
                                      1015  *F*
                                      1016  *F* PURPOSE:     Determine CPU type.
                                      1017  *
                                      1018  *D* NAME:        HFC$CPUTYPE
                                      1019  *D*
                                      1020  *D* DESCRIPTION:
                                      1021  *D*    Subroutine to read processor switches and setup H_RSW1,
                                      1022  *D*    H_RSW2, and S_PTYPE arrays.  Will also possibly
                                      1023  *D*    modify H_LUFREG array based on processor speed.
                                      1024  *
                                      1025         INHIB   ON
   000737                             1026  HFC$CPUTYPE NULL
   000737  X 000000 2362 00           1027         LDQ     S_PNO           PROCESSOR NUMBER
   000740  X 000000 2352 00           1028         LDA     HW_TYPE
   000741 (0)000756 6002 00           1029         TZE     NORMAL
   000742  X 000000 6356 00           1030         EPPR5   HW_PERF      NORMAL PERFORMANCE VALUES
   000743  X 000000 7552 00           1031         STA     S_THIS_PTYPE
   000744    000006 1152 07           1032         CMPA    =6,DL        DPS8000?
   000745 (0)000752 6012 00           1033         TNZ     NOTSUB
   000746    000000 2312 00           1034         RSW
   000747    000010 3152 07           1035         CANA    =O10,DL      CHECKING FOR SUBMODEL
   000750 (0)000752 6002 00           1036         TZE     NOTSUB
   000751  X 000000 6356 00           1037         EPPR5   HW_PERF_SUB  GET PERFORMANCE VALUE FROM SUBMODEL TABLE
   000752  X 000000 2352 00           1038  NOTSUB LDA     S_THIS_PTYPE
   000753    5 00000 2353 05          1039         LDA     0,AL,5       SET UP FROM CONSTANT DATA IN HF_DATA_D
   000754  X 000000 7552 00           1040         STA     S_THIS_PERF
   000755 (0)001011 7102 00           1041         TRA     CHKPERF
   000756                             1042  NORMAL NULL
   000756    000001 2312 00           1043         RSW     1               CPU PORT CONFIG SWITCHES -> A
   000757  X 000000 7552 06           1044         STA     H_RSW1,QL       SAVE CPU CONFIG DATA
   000760    000002 2312 00           1045         RSW     2               PROCESSOR ID DATA -> A
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$CPUTYPE - DETERMINE CPU TYPE                           37   BMAP - B00     
   000761  X 000000 7552 06           1046         STA     H_RSW2,QL       SAVE PROCESSOR ID DATA
   000762    000006 7752 00           1047         ALR     6               RIGHT ALIGN CPU TYPE
   000763    000003 3752 07           1048         ANA     =3,DL           CPU TYPE (0=L66, 1=DPSE, 2=ELS1)
   000764  X 000000 7552 00           1049         STA     S_THIS_PTYPE    SAVE CPU TYPE
   000765  X 000000 4502 06           1050         STZ     S_PMUSECTIME,QL RESET HUNG CPU COUNTERS
   000766  X 000000 4502 06           1051         STZ     S_MIN_HUNG,QL
   000767    000004 7352 00           1052         ALS     4
   000770  X 000000 7552 00           1053         STA     S_THIS_PERF
   000771    000040 1152 07           1054         CMPA    32,DL
   000772 (0)001002 6012 00           1055         TNZ     *+8
   000773  X 000000 2352 06           1056         LDA     H_RSW2,QL
   000774    000015 7712 00           1057         ARL     13
   000775    000004 3752 07           1058         ANA     4,DL
   000776  X 000000 2752 06           1059         ORA     H_RSW2,QL
   000777    000002 7712 00           1060         ARL     2
   001000    000003 3752 07           1061         ANA     3,DL
   001001 (0)001005 7102 00           1062         TRA     *+4
   001002  X 000000 2352 06           1063         LDA     H_RSW2,QL
   001003    000003 7712 00           1064         ARL     3
   001004    000017 3752 07           1065         ANA     =O17,DL
   001005  X 000000 0752 00           1066         ADA     S_THIS_PERF
   001006    000 0 000 1016 05        1067         MRL     (,,,AL)
   001007  X 000000 0 0 0 0001        1068         ADSC9   H_PERF_DATA,,1
   001010  X 000000 0 0 0 0004        1069         ADSC9   S_THIS_PERF,,4
   001011                             1070  CHKPERF NULL
   001011  X 000000 2352 00           1071         LDA     S_THIS_PTYPE
   001012  X 000000 7552 06           1072         STA     S_PTYPE,QL
   001013  X 000000 2352 00           1073         LDA     S_THIS_PERF
   001014  X 000000 7552 06           1074         STA     H_PERF,QL
   001015  X 000000 1152 00           1075         CMPA    H_MAX_PERF
   001016 (0)001052 6056 00           1076         TPNZ    STOP
   001017  X 000000 2342 00           1077         SZN     HW_TYPE      0 IS NOT(DPS90, RPM, ET.AL.)
   001020    000001 6012 11           1078         TNZ     1,X1         WE'RE DONE IF WE ARE ON "STRANGE" CPU
   001021  X 000000 2352 06           1079         LDA     S_PTYPE,QL
   001022    000001 1152 07           1080         CMPA    DPSE,DL         IS THIS DPSE?
   001023 (0)001025 6012 00           1081         TNZ     *+2             NO
   001024    000000 2352 07           1082         LDA     L66,DL          YES -> SAFE STORE TYPE IS L66
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$CPUTYPE - DETERMINE CPU TYPE                           38   BMAP - B00     
   001025  X 000000 7552 06           1083         STA     S_SSPTYPE,QL    SAVE CPU SAFE STORE TYPE
   001026  X 000000 7552 00           1084         STA     S_THIS_PTYPE    SAVE SS TYPE IN PRIVATE PAGE
   001027  X 000000 2352 06           1085         LDA     S_PTYPE,QL
   001030 (0)001031 7102 05           1086         TRA     *+1,AL          DISPATCH ON CPU TYPE
   001031 (0)001035 7102 00           1087         TRA     TYPEL66         L66
   001032 (0)001043 7102 00           1088         TRA     TYPEDPSE        DPSE
   001033    000001 7102 11           1089         TRA     1,X1            ELS
   001034    000001 7102 11           1090         TRA     1,X1
                                      1091  *
   001035                             1092  TYPEL66 NULL
   001035  X 000000 2362 06           1093         LDQ     H_RSW2,QL       PROCESSOR ID DATA
   001036    000010 3162 07           1094         CANQ    =O10,DL         SPEED OPTION BIT
   001037    000001 6002 11           1095         TZE     1,X1            RETURN IF FAST CPU
   001040    000001 2362 07           1096         LDQ     =1,DL           SLOW CPU
   001041  X 000000 2562 05           1097         ORSQ    H_LUFREG,AL     INCREASE LUF TIME
   001042    000001 7102 11           1098         TRA     1,X1            RETURN
   001043                             1099  TYPEDPSE NULL
   001043  X 000000 2362 06           1100         LDQ     H_RSW2,QL       PROCESSOR ID DATA
   001044    000170 3762 07           1101         ANQ     =O170,DL        GET SPEED OPTIONS
   001045    000140 1162 07           1102         CMPQ    =O140,DL        CHECK FOR 8/50
   001046    000001 6012 11           1103         TNZ     1,X1            RETURN IF NOT 8/50
   001047    000001 2362 07           1104         LDQ     =1,DL           SLOW CPU
   001050  X 000000 2562 05           1105         ORSQ    H_LUFREG,AL     INCREASE LUF TIME
   001051    000001 7102 11           1106         TRA     1,X1            RETURN
                                      1107  *
   001052                             1108  STOP   NULL
   001052  X 000000 2362 00           1109         LDQ     H_MAX_PERF
   001053    000075 6162 00           1110         DIS     61
   001054 (0)001053 7102 00           1111         TRA     *-1
   001055 (0)001053 7102 00           1112         TRA     *-2
                                      1113         INHIB   OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$WASH - WASH MEMORY CHIP AFTER EDAC ERROR               39   BMAP - B00     
                                      1114         TTLS    HFC$WASH - WASH MEMORY CHIP AFTER EDAC ERROR
                                      1115                 ***************************************************
                                      1116                 * HFC$WASH - WASH MEMORY CHIP AFTER EDAC ERROR
                                      1117                 ***************************************************
                                      1118  *
                                      1119  *F* NAME:        HFC$WASH
                                      1120  *F*
                                      1121  *F* PURPOSE:     To wash memory chip after an EDAC error.
                                      1122  *
                                      1123  *D* NAME:        HFC$WASH
                                      1124  *D*
                                      1125  *D* DESCRIPTION:
                                      1126  *D*    Subroutine to accomplish actual washing of a memory
                                      1127  *D*    chip after an EDAC error.  Calling program passes a
                                      1128  *D*    type 2 descriptor using WSQ 0 (real
                                      1129  *D*    memory) whose base is the first address on the chip.
                                      1130  *D*    two loop increments and two loop counts supplied by
                                      1131  *D*    the calling program allow the same wash routine to
                                      1132  *D*    handle all interlace cases.  After completion of
                                      1133  *D*    the wash, the MOS memory MODE register is read
                                      1134  *D*    again to clear it and the result returned to the
                                      1135  *D*    calling program.
                                      1136  *
                                      1137  *      Must not be interrupted: uses MISC descr in MON LS.
                                      1138  *
                                      1139                 ***************************************************
                                      1140                 * LOOP PARAM OFFSETS FROM 2ND PARAM BASE
                                      1141                 ***************************************************
             000000000000             1142  INLOOP EQU     0               INNER LOOP COUNT
             000000000001             1143  ININC  EQU     1               INNER LOOP INCREMENT
             000000000002             1144  OTLOOP EQU     2               OUTER LOOP COUNT
             000000000003             1145  OTINC  EQU     3               OUTER LOOP INCREMENT
                                      1146  *
                                      1147         INHIB   ON
   001056                             1148  HFC$WASH NULL
   001056    0 00000 4717 00          1149         LDP     AP1,0,,0        GET POINTER TO 1ST ARGUMENT
   001057  X 000000 4766 07           1150         LDP6    LSSID,DL        MONITOR LINKAGE SEGMENT
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$WASH - WASH MEMORY CHIP AFTER EDAC ERROR               40   BMAP - B00     
   001060    1 00000 2373 00          1151         LDAQ    0,,AP1          TYPE2 DESCR TO CHIP START ADDR
   001061    6 00130 7573 00          1152         STAQ    LS.MISC*2,,6
   001062  X 000000 4756 07           1153         LDP5    MISCSID,DL      SAVE ORIGINAL CHIP START ADDR
   001063    0 00001 4737 00          1154         LDP     AP2,1,,0        GET POINTER TO 2ND ARGUMENT
   001064    0 00002 4747 00          1155         LDP     AP3,2,,0        GET POINTER TO 3RD ARGUMENT
   001065    3 00002 7223 00          1156         LXL2    OTLOOP,,AP2     OUTER LOOP COUNT
   001066    3 00000 7233 00          1157         LXL3    INLOOP,,AP2     INNER LOOP COUNT
   001067    3 00001 7243 00          1158         LXL4    ININC,,AP2      INNER LOOP INCREMENT
   001070  X 000000 4776 07           1159         LDP7    SCUSID,DL
   001071  X 000000 2372 00           1160         LDAQ    H_DSMASK
   001072    7 00000 5533 00          1161         SMCM    0,,7            DISABLE INTERRUPTS
   001073 (0)001123 6742 02           1162         LCPR    CACHEOFF,LUTAGL TURN CACHE OFF
                                      1163         INHIB   OFF
   001074    3 00003 2351 00          1164         LDA     OTINC,,AP2      OUTER LOOP INCREMENT
   001075    000002 7350 00           1165         ALS     2               CONVERT TO BYTE INCREMENT
                                      1166  *
   001076                             1167  OUTER  NULL
   001076  X 000000 4714 07           1168         LDP     AP1,MISCSID,DL  TYPE2 DESCRIPTOR
   001077    000000 6260 13           1169         EAX6    0,3             RELOAD INNER LOOP COUNT
                                      1170         ALIGN   4
   001100                             1171  INNER  NULL
   001100    1 00000 5521 00          1172         STBQ    0,,AP1          TYPE 2 DESCR TO REAL MEM IN AP1
   001101    1 00010 5521 00          1173         STBQ    8,,AP1
   001102    777777 6260 16           1174         EAX6    -1,6            DECREMENT INNER LOOP COUNT
   001103    1 00020 5521 00          1175         STBQ    16,,AP1
   001104    1 00030 5521 00          1176         STBQ    24,,AP1
   001105    1 00000 5075 14          1177         AWD     0,4,AP1         ADD INNER LOOP INCREMENT TO AR
   001106 (0)001100 6054 00           1178         TPNZ    INNER
   001107    6 00131 0551 00          1179         ASA     LS.MISC*2+1,,6  ADD OUTER LOOP INC TO MISC BASE
   001110    777777 6220 12           1180         EAX2    -1,2            DECREMENT OUTER LOOP COUNT
   001111 (0)001076 6054 00           1181         TPNZ    OUTER
                                      1182  *                              WASH COMPLETED
   001112  X 000000 2350 00           1183         LDA     S_PTYPE         PROCESSOR TYPE FOR MASTER CPU
   001113  X 000000 2360 05           1184         LDQ     H_LUFREG,AL     DATA TO TURN CACHE ON
   001114    4 00000 7561 00          1185         STQ     0,,AP3          BORROW TEMP LOCATION
   001115    4 00000 6741 02          1186         LCPR    0,LUTAGL,AP3    TURN CACHE ON
   001116    5 00060 4131 00          1187         RSCR    48,,5           READ MOS STORE MODE REGISTER
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$WASH - WASH MEMORY CHIP AFTER EDAC ERROR               41   BMAP - B00     
   001117    4 00000 7551 00          1188         STA     0,,AP3          RETURN STORE MODE TO 3RD PARAM
   001120    4 00001 7561 00          1189         STQ     1,,AP3
   001121    000000 2350 07           1190         LDA     0,DL            FOR ENABL2D
   001122 (0)000647 7100 00           1191         TRA     ENABL2D         ENABLE IF COUNT ZERO AND RETURN
                                      1192  *
   001123    000000000000             1193  CACHEOFF OCT   0               TURN CACHE OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RTIME-READ RESERVED MEMORY AFTER DATE/TIME CORR        42   BMAP - B00     
                                      1194         TTLS    HFC$RTIME-READ RESERVED MEMORY AFTER DATE/TIME CORR
                                      1195                 ***************************************************
                                      1196                 * HFC$RTIME-READ RES MEM AFTER MSOS DATE/TIME CORR
                                      1197                 ***************************************************
                                      1198  *
                                      1199  *F* NAME:        HFC$RTIME
                                      1200  *F*
                                      1201  *F* PURPOSE:     To read reserved memory .1130-.1133
                                      1202  *
                                      1203  *D* NAME:        HFC$RTIME
                                      1204  *D*
                                      1205  *D* DESCRIPTION:
                                      1206  *D*    Subroutine to read reserved memory addresses .1130-.1133
                                      1207  *D*    after DATE/TIME commands to MSOS.
                                      1208  *D*    These cells contain the MSOS updated date and time
                                      1209  *D*    and the value of the CCL at that moment.
                                      1210  *
                                      1211  *
                                      1212  *
   001124                             1213  HFC$RTIME NULL
   001124    0 00000 4715 00          1214         LDP1    0,,0            Get arg
   001125    001130 2310 00           1215         RRES    UPD_D
   001126    1 00000 7551 00          1216         STA     0,,1
   001127    001131 2310 00           1217         RRES    UPD_T
   001130    1 00001 7551 00          1218         STA     1,,1
   001131    001132 2310 00           1219         RRES    UPD_CL1
   001132    1 00002 7551 00          1220         STA     2,,1
   001133    001133 2310 00           1221         RRES    UPD_CL2
   001134    1 00003 7551 00          1222         STA     3,,1
   001135    000000 7100 11           1223         TRA     0,X1

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UPDTIME-UPDATE CCL AFTER A DATE/TIME MSOS COMMAND      43   BMAP - B00     
                                      1224         TTLS    HFC$UPDTIME-UPDATE CCL AFTER A DATE/TIME MSOS COMMAND
                                      1225                 ***************************************************
                                      1226                 * HFC$UPDTIME UPDATE CCL AFTER MSOS DATE/TIME CORR
                                      1227                 ***************************************************
                                      1228  *
                                      1229  *F* NAME:        HFC$UPDTIME
                                      1230  *F*
                                      1231  *F* PURPOSE:     To update the CCL and IT_CLOFF after a DATE/TIME MSOS
                                      1232  *F*              command.
                                      1233  *
                                      1234  *D* NAME:        HFC$UPDTIME
                                      1235  *D*
                                      1236  *D* DESCRIPTION:
                                      1237  *D*    Subroutine to read the CCL and apply a correction
                                      1238  *D*    computed from the MSOS communicated data, and then
                                      1239  *D*    reload the new CCL.  IT_CLOFF also is adjusted to
                                      1240  *D*    reflect 00:00 of the new date.
                                      1241  *D*    The passed structure contains :
                                      1242  *D*           -a UTS date value (for IT_CLOFF),
                                      1243  *D*           -an IOP time which is the time offset in units of 10
                                      1244  *D*            microseconds
                                      1245  *D*           -the value of the CCL at the time of DATE/TIME command
                                      1246  *D*           -a portion of the new CCL initialized with year, month,
                                      1247  *D*            and date values (the time offset must be filled in)
                                      1248  *
                                      1249  *
                                      1250  *
   001136                             1251  HFC$UPDTIME NULL
   001136  X 000000 7000 00           1252         TSX0    X66_AUTO_1
   001137    000010 000001            1253         ZERO    8,1
   001140    2 00003 4715 00          1254         LDP1    3,,2            Get structure address
   001141    1 00001 2361 00          1255         LDQ     1,,1            Get IOP time (unit=10 microseconds)
   001142    000012 4020 07           1256         MPY     10,DL           Make it microseconds
   001143  X 000000 7570 00           1257         STAQ    H_TIME_CORR     Microseconds since 00:00 at time of cmd
   001144    000000 4130 00           1258         RCCL                    Get current CCL
   001145    2 00004 7571 00          1259         STAQ    4,,2            save the time
   001146    1 00002 1771 00          1260         SBAQ    2,,1            Subtract CCL at time of cmd
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$UPDTIME-UPDATE CCL AFTER A DATE/TIME MSOS COMMAND      44   BMAP - B00     
   001147  X 000000 0770 00           1261         ADAQ    H_TIME_CORR     Current time offset
   001150    1 00004 0771 00          1262         ADAQ    4,,1            Add current date
   001151    000000 0570 00           1263         LCCL                    Set new CCL
   001152    2 00006 7571 00          1264         STAQ     6,,2           Save the new time
   001153 (0)001206 2350 00           1265         LDA      DATEMASK       mask for the yymmdd (24 bits)
   001154    2 00004 3551 00          1266         ANSA     4,,2           mask off date of old time
   001155    2 00006 3551 00          1267         ANSA     6,,2           mask off date of new time
   001156    2 00006 2371 00          1268         LDAQ     6,,2           get new date
   001157    2 00004 1771 00          1269         SBAQ     4,,2           subtract old date
   001160  X 000000 7570 00           1270         STAQ     S_UPTIME       save the difference in S_UPTIME
   001161  X 000000 2370 00           1271         LDAQ    IT_CLOFF       get the old clock offset
   001162    2 00004 7571 00          1272         STAQ    4,,2           SAVE OLD OFFSET
   001163    1 00000 2361 00          1273         LDQ     0,,1            Get UTS_DATE (unit=1/10 seconds)
   001164  X 000000 1160 00           1274         CMPQ   SS_UTS_COOKIE
   001165 (0)001175 6030 00           1275         TRC     *+8            PAST THE COOKIE DATE
   001166    000001 7720 00           1276         QRL     1              SHIFT FOR MPY
   001167    047040 4020 07           1277         MPY     20000,DL       MAKE MICROSECOND
   001170  X 000000 7570 00           1278         STAQ    IT_CLOFF         SAVE TIME
   001171    2 00004 1771 00          1279         SBAQ    4,,2             SUBTRACT THE OLD OFFSET
   001172  X 000000 0770 00           1280         ADAQ    S_UPTIME         ADD IN PREVIOUS UP TIME
   001173  X 000000 7570 00           1281         STAQ    S_UPTIME         STORE UP TIME
   001174  X 000000 7100 00           1282         TRA     X66_ARET         RETURN
   001175  X 000000 1760 00           1283         SBQ     SS_UTS_COOKIE
   001176    000001 7720 00           1284         QRL     1              SHIFT FOR MPY
   001177    234200 4020 07           1285         MPY     80000,DL       MAKE MICROSECOND
   001200  X 000000 0370 00           1286         ADLAQ   SS_MS_COOKIE     ADD IN MICROSECONDS OF COOKIE
   001201  X 000000 7570 00           1287         STAQ    IT_CLOFF         SAVE TIME
   001202    2 00004 1771 00          1288         SBAQ    4,,2             SUBTRACT OLD OFFSET
   001203  X 000000 0770 00           1289         ADAQ    S_UPTIME         ADD IN PREVIOUS UP TIME
   001204  X 000000 7570 00           1290         STAQ    S_UPTIME         STORE UP TIME
   001205  X 000000 7100 00           1291         TRA     X66_ARET
   001206    000000007777             1292  DATEMASK OCT   000000007777

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$LCON - Load the connect table on an RPM.               45   BMAP - B00     
                                      1293         TTLS    HFC$LCON - Load the connect table on an RPM.
                                      1294                 ***************************************************
                                      1295                 * HFC$LCON - Load the connect table on an RPM.
                                      1296                 ***************************************************
                                      1297  *
                                      1298  *F* NAME:        HFC$LCON
                                      1299  *F*
                                      1300  *F* PURPOSE:     Load the connect table on an RPM.
                                      1301  *
                                      1302  *D* NAME:        HFC$LCON
                                      1303  *D*
                                      1304  *D* DESCRIPTION:
                                      1305  *D*    Just do an LCON instruction referencing H_RPM_CONNECT_TABLE,
                                      1306  *D*    if not on an RPM, altret.
                                      1307         INHIB     ON
   001207                             1308  HFC$LCON NULL
   001207  X 000000 2342 00           1309         SZN       H_RPM_FLG
   001210    000000 6052 11           1310         TPL       0,X1
   001211  X 000000 0162 00           1311         LCON      H_RPM_CONNECT_TABLE
   001212    000001 7102 11           1312         TRA       1,X1
                                      1313         INHIB     OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RCON - Read the connect table on an RPM.               46   BMAP - B00     
                                      1314         TTLS    HFC$RCON - Read the connect table on an RPM.
                                      1315                 ***************************************************
                                      1316                 * HFC$READ - Read the connect table on an RPM.
                                      1317                 ***************************************************
                                      1318  *
                                      1319  *F* NAME:        HFC$RCON
                                      1320  *F*
                                      1321  *F* PURPOSE:     Read the connect table on an RPM.
                                      1322  *
                                      1323  *D* NAME:        HFC$RCON
                                      1324  *D*
                                      1325  *D* DESCRIPTION:
                                      1326  *D*    Just do an SCPR 07 instruction referencing H_RPM_CONNECT_TABLE,
                                      1327  *D*    if not on an RPM, altret.
                                      1328         INHIB     ON
   001213                             1329  HFC$RCON NULL
   001213  X 000000 2342 00           1330         SZN       H_RPM_FLG
   001214    000000 6052 11           1331         TPL       0,X1
   001215  X 000000 4522 07           1332         SCPR      H_RPM_CONNECT_TABLE,7
   001216    000001 7102 11           1333         TRA       1,X1
                                      1334         INHIB     OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RCONF_8000 - Return the cpu configuration register e   47   BMAP - B00     
                                      1335         TTLS    HFC$RCONF_8000 - Return the cpu configuration register e
                                      1336                 ***************************************************
                                      1337                 * HFC$RCONF_8000 - Read the CPU configuration register.
                                      1338                 ***************************************************
                                      1339  *
                                      1340  *F* NAME:        HFC$RCONF_8000
                                      1341  *F*
                                      1342  *F* PURPOSE:     To read cpu configuration register into H_DPS8000_CPU_CONF_REG
                                      1343  *
                                      1344  *D* NAME:        HFC$RCONF_8000
                                      1345  *D*
                                      1346  *D* DESCRIPTION:
                                      1347  *D*    Do an LCPR H_DPS8000_CPU_CONF_REG,11 reading the CPU configuration
                                      1348  *D*    into H_DPS8000_CPU_CONF_REG
                                      1349  *D*    return 1,X1.
   001217                             1350  HFC$RCONF_8000 NULL
   001217  X 000000 4520 11           1351         SCPR    H_DPS8000_CPU_CONF_REG,11 READ THE CONFIGURATION REGISTER
   001220    000001 7100 11           1352         TRA     1,X1                   RETURN

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$SCONF_8000 - Update the cpu configuration register e   48   BMAP - B00     
                                      1353         TTLS    HFC$SCONF_8000 - Update the cpu configuration register e
                                      1354                 ***************************************************
                                      1355                 * HFC$SCONF_8000 - Update the CPU configuration register.
                                      1356                 ***************************************************
                                      1357  *
                                      1358  *F* NAME:        HFC$SCONF_8000
                                      1359  *F*
                                      1360  *F* PURPOSE:     To update a the cpu configuration register
                                      1361  *
                                      1362  *D* NAME:        HFC$SCONF_8000
                                      1363  *D*
                                      1364  *D* DESCRIPTION:
                                      1365  *D*    Do an SCPR H_DPS800_CPU_CONF_REG updating the CPU configuration
                                      1366  *D*   register
                                      1367  *D*    return 1,X1.
   001221                             1368  HFC$SCONF_8000 NULL
   001221  X 000000 6740 11           1369         LCPR    H_DPS8000_CPU_CONF_REG,11   LOAD THE CONFIGURATION REGISTER
   001222  X 000000 2350 00           1370         LDA     H_DPS8000_CPU_CONF_REG
   001223  X 000000 4734 07           1371         LDP3    REALSID,DL             LOAD POINTER TO REAL
   001224    3 01430 7551 00          1372         STA     CONF_8000,,3           STORE NEW CONF REG
   001225    000001 7100 11           1373         TRA     1,X1                   RETURN

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$RCONF - Read configuration reg on a DPS90.             49   BMAP - B00     
                                      1374         TTLS    HFC$RCONF - Read configuration reg on a DPS90.
                                      1375                 ***************************************************
                                      1376                 * HFC$RCONF - Read configuration register on a DPS90.
                                      1377                 ***************************************************
                                      1378  *
                                      1379  *F* NAME:        HFC$RCONF
                                      1380  *F*
                                      1381  *F* PURPOSE:     To return the configuration register on a DPS90.
                                      1382  *
                                      1383  *D* NAME:        HFC$RCONF
                                      1384  *D*
                                      1385  *D* DESCRIPTION:
                                      1386  *D*    Just issues a DIAG ,=O07, then STA in 1st arg.
                                      1387  *D*    Altret if not a DPS90.
   001226                             1388  HFC$RCONF NULL
   001226  X 000000 2340 00           1389         SZN     H_S1000_FLG
   001227    000000 6050 11           1390         TPL     0,X1
   001230    000000 6120 07           1391         DIAG    ,=O07
   001231    0 00000 4715 00          1392         LDP1    0,,0
   001232    1 00000 7551 00          1393         STA     0,,1
   001233    000001 7100 11           1394         TRA     1,X1

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        HFC$BMAP_CLOCK - Return a "normal" clock for any machine   50   BMAP - B00     
                                      1395         TTLS    HFC$BMAP_CLOCK - Return a "normal" clock for any machine
                                      1396                 ***************************************************
                                      1397                 * HFC$BMAP_CLOCK - Return normal clock to bmap routine.
                                      1398                 ***************************************************
                                      1399  *
                                      1400  *F* NAME:        HFC$BMAP_CLOCK
                                      1401  *F*
                                      1402  *F* PURPOSE:     To return a "normal" clock in $AQ to a bmap driver.
                                      1403  *
                                      1404  *D* NAME:        HFC$BMAP_CLOCK
                                      1405  *D*
                                      1406  *D* DESCRIPTION:
                                      1407  *D*    Do an RSCR 32, if DPS90 then convert.  In any case
                                      1408  *D*    return 0,X4.
                                      1409         INHIB     ON
   001234                             1410  HFC$BMAP_CLOCK7
   001234    7 00040 4133 00          1411         RSCR      32,,7
   001235 (0)001237 7102 00           1412         TRA       CLKCOM
   001236                             1413  HFC$BMAP_CLOCK NULL        MAKE IT FASTER FOR MOST OF THE CALLS.
   001236    0 00040 4133 00          1414         RSCR      32,,0
   001237                             1415  CLKCOM NULL
   001237  X 000000 2342 00           1416         SZN       H_S1000_FLG
   001240    000000 6052 14           1417         TPL       0,X4
   001241    007777 3752 07           1418         ANA       =O007777,DL
   001242  X 000000 0372 00           1419         ADLAQ     IT_CLOFF
   001243    000000 7102 14           1420         TRA       0,X4
                                      1421         INHIB     OFF

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI          HFC$RCW - READ CONNECT QUEUE                             51   BMAP - B00     
                                      1422         TTLS      HFC$RCW - READ CONNECT QUEUE
                                      1423  *                ***************************************************:
                                      1424  *                *  HFC$RCW - Read the connect queue for DPS8000
                                      1425  *                ***************************************************
                                      1426  *F* NAME:        HFC$RCW
                                      1427  *F*
                                      1428  *F* PURPOSE:     Read the connect queue
                                      1429  *
                                      1430  *D* NAME:        HFC$RCW
                                      1431  *D*
                                      1432  *D* DESCRIPTION:
                                      1433  *D*
                                      1434  *D*
                                      1435         INHIB     ON
   001244                             1436  HFC$RCW NULL
   001244  X 000000 2342 00           1437         SZN       H_RPM_FLG
   001245    000001 6002 11           1438         TZE       1,X1
   001246    000000 2502 00           1439         RCW
   001247    000001 7102 11           1440         TRA       1,X1
                                      1441         INHIB     OFF
                                      1442         END

  CONTROL SECTION TABLE

   0 CODE   EIGHT 001250 HFC$UTIL
   1 RODATA EVEN  000000 LITERALS

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        SYMBOL TABLE                                               52   BMAP - B00     
 40000000 000000000003 ADP           *192
 41000000 000000000040 AFLTLOC       *172       371       390
 41000000 000000000001 AP1           *165      1149      1151      1168      1172      1173      1175
                                     1176      1177
 41000000 000000000003 AP2           *166      1154      1156      1157      1158      1164
 41000000 000000000004 AP3           *167      1155      1185      1186      1188      1189
 03301015 000000000000 B$WSQ0PT$      *68       501       668       690       784       807
 00101000 000000000665 BADSTIMR      *908
 01101000 000000001123 CACHEOFF      1162     *1193
 01101000 000000000414 CHKFL          654      *675
 01101000 000000000534 CHKFLD         769      *791
 01101000 000000001011 CHKPERF       1041     *1070
 00101000 000000000501 CHKRFD        *765
 01101000 000000000362 CHKRLF         644      *650
 01101000 000000001237 CLKCOM        1412     *1415
 01101000 000000000041 CLR0           273      *280
 01101000 000000000060 CLR8000        279      *305
 01101000 000000000043 CLR90          277       278      *286
 01101000 000000000056 CLRALL         270       295      *298       309
 01101000 000000000256 CMNLDPDBR      493       499      *507
 01101000 000000000214 COM_MAKE       450       457      *468
 01101000 000000000113 COM_STCPU     *367       399       404
 41000000 000000001430 CONF_8000     *174      1372
 01101000 000000000243 D8000LDPDBR    487      *494
 01101000 000000000250 D90LDPDBR      485      *500
 01101000 000000001206 DATEMASK      1265     *1292
 01101000 000000000005 DISSLV         222      *226
 40000000 000000000004 DPS90         *193
 40000000 000000000005 DPS90XA       *194
 41000000 000000000001 DPSE          *190      1080
 40000000 000000000002 ELS1          *191
 01101000 000000000647 ENABL2D        251      *889       902      1191
 03301055 000000000000 EPU_MASK      *115       397
 41000000 000000000032 FLTLOC        *171       370       389
 12101000 000000000026 HFC$ASSOCCLR    21      *268
 12101000 000000001236 HFC$BMAP_CLOCK            43     *1413
 12101000 000000001234 HFC$BMAP_CLOCK7           44     *1410
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        SYMBOL TABLE                                               53   BMAP - B00     
 12101000 000000000024 HFC$CACHECLR    20      *259
 13101000 000000000737 HFC$CPUTYPE     31       512     *1026
 12101000 000000000000 HFC$DIS         19      *219
 12101000 000000001207 HFC$LCON        42     *1308
 12101000 000000000454 HFC$LDIAG       37      *740
 12101000 000000000334 HFC$LOCK        25      *619
 12101000 000000000335 HFC$LSWITCH     33      *623
 52101000 000000000152 HFC$MAKECPU     24      *431
 13101000 000000000344 HFC$MPLK        35       624      *632
 07101000 000000000610 HFC$MPUNLK      36       839      *849
 12101000 000000001213 HFC$RCON        46     *1329
 12101000 000000001226 HFC$RCONF       41     *1388
 12101000 000000001217 HFC$RCONF_8000            47     *1350
 12101000 000000001244 HFC$RCW         45     *1436
 52101000 000000000313 HFC$RELIEF      49      *564
 12101000 000000000721 HFC$RMCM        27      *986
 12101000 000000000677 HFC$RSCR        29      *939
 12101000 000000001124 HFC$RTIME       39     *1213
 12101000 000000001221 HFC$SCONF_8000            48     *1368
 12101000 000000000730 HFC$SMCM        28     *1000
 12101000 000000000710 HFC$SSCR        30      *955
 52101000 000000000074 HFC$STCPU       23      *350
 12101000 000000000070 HFC$STWS        22      *320
 13101000 000000000623 HFC$ULDIAG      38      *865       906       914
 06101000 000000000576 HFC$ULSWITCH    34      *838
 12101000 000000000574 HFC$UNLOCK      26      *833
 12101000 000000001136 HFC$UPDTIME     40     *1251
 13101000 000000000000 HFC$UTIL        18      *218       617       618       631       739       832
                                      848      1170
 12101000 000000001056 HFC$WASH        32     *1148
 03301004 000000000000 HW_PERF        *57      1030
 03301005 000000000000 HW_PERF_SUB    *58      1037
 03301003 000000000000 HW_TYPE        *56       271      1028      1077
 03301026 000000000000 H_CNNCTMLBX    *85       470
 03301008 000000000000 H_DPS8000_CI_TABLE       *61       376       453       454       455       456
                                      473
 03301009 000000000000 H_DPS8000_CPU_CONF_REG   *62      1351      1369      1370
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        SYMBOL TABLE                                               54   BMAP - B00     
 03301048 000000000000 H_DSMASK      *108       224       627       638       746      1160
 03301034 000000000000 H_DUMMY        *93       884
 03301047 000000000000 H_ENMASK      *107       844       861       894
 03301012 000000000000 H_FAIL_NUM     *65       573       656       662       675       772       778
                                      791
 03301000 000000000000 H_GATECNT      *53       647       762       851       881       918
 03301001 000000000000 H_LUFREG       *54       *98      1097      1105      1184
 03301050 000000000000 H_MAX_PERF    *110      1075      1109
 03301035 000000000000 H_MIXED_MP     *94       517       530
 03301011 000000000000 H_NURSE        *64       566       569       653       678       684       768
                                      794       801
 03301054 000000000000 H_PERF        *114      1074
 03301049 000000000000 H_PERF_DATA   *109      1068
 03301013 000000000000 H_RELIEF       *66       571       650       765
 03301007 000000000000 H_RPM_CONNECT_TABLE      *60      1311      1332
 03301006 000000000000 H_RPM_FLG      *59       359       374       451       471       486       664
                                      686       780       803      1309      1330      1437
 03301032 000000000000 H_RSW1         *91      1044
 03301033 000000000000 H_RSW2         *92      1046      1056      1059      1063      1093      1100
 03301002 000000000000 H_S1000_FLG    *55       355       447       484       522      1389      1416
 03301010 000000000000 H_TIME_CORR    *63      1257      1261
 41000000 000000000001 ININC        *1143      1158
 41000000 000000000000 INLOOP       *1142      1157
 01101000 000000001100 INNER        *1171      1178
 03601000 000000000000 ISBSID         *69       479       525
 03301016 000000000000 IT_AAFAULT     *75       368
 03301019 000000000000 IT_CLOFF       *78      *116      1271      1278      1287      1419
 03301017 000000000000 IT_MONFAULT    *76       388
 03301018 000000000000 IT_SCPUWSPTD   *77       372       483       574       663       685       779
                                      802
 41000000 000000000000 L66           *189      1082
 01101000 000000000354 LOCK2          635      *642       660       682       702       705
 01101000 000000000464 LOCK2D         743      *750       776       799       819       822
 41000000 000000000155 LS.AARDV      *154
 41000000 000000000156 LS.AARDV2     *154
 41000000 000000000033 LS.ASLLS      *154
 41000000 000000000053 LS.ASR        *154
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        SYMBOL TABLE                                               55   BMAP - B00     
 41000000 000000000002 LS.BUF        *154
 41000000 000000000161 LS.BUFCACH    *154
 40000000 000000000004 LS.CFU        *154
 41000000 000000000164 LS.CGCTXT     *154
 41000000 000000000163 LS.CGPT       *154
 41000000 000000000075 LS.CPGT1      *154
 41000000 000000000034 LS.CPLS       *154
 41000000 000000000055 LS.CWSQ1      *154
 41000000 000000000032 LS.DBLS       *154
 41000000 000000000004 LS.DS1        *154
 41000000 000000000005 LS.DS2        *154
 41000000 000000000006 LS.DS3        *154
 41000000 000000000007 LS.DS4        *154
 41000000 000000000010 LS.DS5        *154
 41000000 000000000011 LS.DS6        *154
 41000000 000000000012 LS.DS7        *154
 41000000 000000000013 LS.DS8        *154
 40000000 000000000202 LS.DVT        *154
 41000000 000000000016 LS.ECCB       *154
 41000000 000000000157 LS.FIRM       *154
 40000000 000000000155 LS.FLT        *154
 41000000 000000000045 LS.HJITU      *154
 41000000 000000000162 LS.IMX        *154
 41000000 000000000122 LS.IOEND      *154
 41000000 000000000176 LS.IPHY_MAP   *154
 41000000 000000000000 LS.IS         *154
 41000000 000000000050 LS.ISB        *154
 41000000 000000000115 LS.JITPG      *154
 41000000 000000000001 LS.JITU       *154
 40000000 000000000013 LS.LDCT       *154
 41000000 000000000134 LS.LDCTNC     *154
 41000000 000000000121 LS.LOWMEM     *154
 41000000 000000000167 LS.MAGAS      *154
 41000000 000000000172 LS.MAGECCB    *154
 41000000 000000000166 LS.MAGLS      *154
 41000000 000000000170 LS.MAGPS      *154
 41000000 000000000165 LS.MAGSS      *154
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        SYMBOL TABLE                                               56   BMAP - B00     
 41000000 000000000171 LS.MAGTCB     *154
 41000000 000000000043 LS.MHJIT      *154
 41000000 000000000177 LS.MINIQ_ENT  *154
 41000000 000000000054 LS.MISC       *154      1152      1179
 41000000 000000000130 LS.MISC2      *154
 41000000 000000000042 LS.MJIT       *154
 41000000 000000000035 LS.MLS        *154
 41000000 000000000132 LS.MLS1       *154
 41000000 000000000173 LS.MLSREAD    *154
 40000000 000000000156 LS.MONRL      *154
 41000000 000000000044 LS.MONSSS     *154
 41000000 000000000120 LS.MOUSE      *154
 41000000 000000000037 LS.MPT        *154
 41000000 000000000145 LS.MSTRHJ     *154
 41000000 000000000135 LS.MSTRPT     *154
 41000000 000000000041 LS.MTSTACK    *154
 41000000 000000000014 LS.NULL       *154
 41000000 000000000027 LS.PMME       *154
 41000000 000000000116 LS.PPUT       *154
 41000000 000000000131 LS.RCVENT     *154
 41000000 000000000127 LS.RCVRTN     *154
 41000000 000000000021 LS.REAL       *154
 41000000 000000000030 LS.REG        *154
 41000000 000000000124 LS.RONC       *154
 41000000 000000000003 LS.ROSEG      *154
 41000000 000000000125 LS.ROSEG8     *154
 41000000 000000000046 LS.SBUF1      *154
 41000000 000000000047 LS.SBUF2      *154
 41000000 000000000025 LS.SCR        *154
 41000000 000000000051 LS.SCU        *154
 41000000 000000000174 LS.SEGTBL     *154
 41000000 000000000146 LS.SLV1HJ     *154
 41000000 000000000136 LS.SLV1PT     *154
 41000000 000000000147 LS.SLV2HJ     *154
 41000000 000000000137 LS.SLV2PT     *154
 41000000 000000000150 LS.SLV3HJ     *154
 41000000 000000000140 LS.SLV3PT     *154
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        SYMBOL TABLE                                               57   BMAP - B00     
 41000000 000000000151 LS.SLV4HJ     *154
 41000000 000000000141 LS.SLV4PT     *154
 41000000 000000000152 LS.SLV5HJ     *154
 41000000 000000000142 LS.SLV5PT     *154
 41000000 000000000153 LS.SLV6HJ     *154
 41000000 000000000143 LS.SLV6PT     *154
 41000000 000000000154 LS.SLV7HJ     *154
 41000000 000000000144 LS.SLV7PT     *154
 41000000 000000000017 LS.TCB        *154
 41000000 000000000123 LS.TIGR       *154
 41000000 000000000020 LS.TSTACK     *154
 41000000 000000000031 LS.ULS        *154
 41000000 000000000036 LS.UPT        *154
 41000000 000000000023 LS.USDS0      *154
 41000000 000000000024 LS.USDS1      *154
 41000000 000000000040 LS.USRIS      *154
 41000000 000000000022 LS.USSS       *154
 41000000 000000000117 LS.VPT        *154
 41000000 000000000052 LS.WINDOW     *154
 41000000 000000000133 LS.WS3MLS     *154
 41000000 000000000160 LS.WS3MLSNW   *154
 41000000 000000000175 LS.WSQ0PT     *154
 41000000 000000000026 LS.XD         *154
 41000000 000000000126 LS.XDRTN      *154
 41000000 000000000201 LS.XLALT      *154
 41000000 000000000015 LS.XLAT       *154
 41000000 000000000200 LS.XLNORM     *154
 03601004 000000000000 LSSID          *73      1150
 41000000 000000000002 LUTAGL        *185      1162      1186
 01101000 000000000272 MASTER         516      *521
 03601005 000000000000 MISCSID        *74      1153      1168
 01101000 000000000673 NEGGATECNT     883      *916
 03301039 000000000000 NI$DS          *99       626       637       745       840       858       891
 01101000 000000000203 NON_RPM        452      *458
 01101000 000000000126 NON_RPM_CIOC   375      *379
 01101000 000000000756 NORMAL        1029     *1042
 01101000 000000000662 NOTLOCKED      841       868      *904
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        SYMBOL TABLE                                               58   BMAP - B00     
 01101000 000000000655 NOTNOWD        892      *898
 01101000 000000000752 NOTSUB        1033      1036     *1038
 01101000 000000000223 NOT_RPM_CIOC   472      *476
 41000000 000000000003 OTINC        *1145      1164
 41000000 000000000002 OTLOOP       *1144      1156
 01101000 000000001076 OUTER        *1167      1181
 03601002 000000000000 REALSID        *71       369      1371
 40000000 000000000006 RPM           *195
 41000000 000000000100 SCPUPG        *173       373
 03601003 000000000000 SCRCHENTSID    *72       703       820       900       905       909       913
                                      917
 03601001 000000000000 SCUSID         *70       223       357       459       625       636       744
                                      843       860       893      1159
 03301046 000000000000 SC_BADSTIMR   *106       909
 03301042 000000000000 SC_NEGDIS     *102       900
 03301045 000000000000 SC_NEGGATECNT *105       917
 03301043 000000000000 SC_NOTLOCKED  *103       905
 03301041 000000000000 SC_TOOLONG    *101       703       820
 03301044 000000000000 SC_WRONGUSER  *104       913
 03201000 000000000000 SSS$STOP       *50       519
 03301056 000000000000 SS_MS_COOKIE  *117      1286
 03301057 000000000000 SS_UTS_COOKIE *118      1274      1283
 01101000 000000001052 STOP          1076     *1108
 01101000 000000000230 SXM            441      *483
 03301027 000000000000 S_CUN          *86       758       875
 03301052 000000000000 S_MIN_HUNG    *112      1051
 03301030 000000000000 S_MPSTATE      *89       227       247       442       480       533       536
                                      537       577
 03301040 000000000000 S_NSCPUA      *100       621       836
 03301051 000000000000 S_PMUSECTIME  *111      1050
 03301029 000000000000 S_PNO          *88       221       248       439       568       634       652
                                      742       753       767       856       869       886      1027
 03301028 000000000000 S_PORTNR       *87       354       380       443       444       445       446
                                      477
 03301036 000000000000 S_PTYPE        *95      1072      1079      1085      1183
 03301014 000000000000 S_RLF_SSR      *67       572       579       661       673       683       695
                                      777       789       800       812
 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        SYMBOL TABLE                                               59   BMAP - B00     
 03301037 000000000000 S_SSPTYPE      *96      1083
 01101000 000000000141 S_STCPU        356      *393
 01101000 000000000147 S_STCPURPM     360      *401
 03301053 000000000000 S_THIS_PERF   *113      1040      1053      1066      1069      1073
 03301038 000000000000 S_THIS_PTYPE   *97      1031      1038      1049      1071      1084
 03301031 000000000000 S_TIMR         *90       755       872
 03301058 000000000000 S_UPTIME      *119      1270      1280      1281      1289      1290
 03301024 000000000000 S_X1           *83       438       514
 03301020 000000000000 S_XASR         *79       436       510
 03301023 000000000000 S_XPR2         *82       437       508
 03301021 000000000000 S_XPSR         *80       435       511
 03301022 000000000000 S_XSSR         *81       434       509
 03301025 000000000000 S_XX           *84       383       385       461       466       489       490
                                      496       497       504       505       576       578       671
                                      672       693       694       787       788       810       811
 01101000 000000000642 TESTGATECNT   *882       919
 01101000 000000000630 TESTTIMR      *871       910
 01101000 000000001043 TYPEDPSE      1088     *1099
 01101000 000000001035 TYPEL66       1087     *1092
 41000000 000000001132 UPD_CL1       *180      1219
 41000000 000000001133 UPD_CL2       *181      1221
 41000000 000000001130 UPD_D         *178      1215
 41000000 000000001131 UPD_T         *179      1217
 01101000 000000000443 WAIT2          651       657       676       679      *698
 01101000 000000000564 WAIT2D         752       766       773       792       796      *815
 01101000 000000000375 WF             659      *661
 01101000 000000000515 WFD            775      *777
 01101000 000000000424 WN             681      *683
 01101000 000000000545 WND            798      *800
 01101000 000000000670 WRONGUSER      879      *912
 03201002 000000000000 X66_ARET       *52      1282      1291
 03201001 000000000000 X66_AUTO_1     *51      1252
 61000000 000000001100 _1            *617      *618      *631      *739      *832      *848     *1170
 61000000 000000000010 _2            *617      *618      *631      *739      *832      *848     *1170

     278 SYMBOLS

 22:23 07/29/97  FILE=HFC$UTIL.:E05TSI        MACRO TABLE                                                60   BMAP - B00     
 ALIGN          617       618       631       739       832       848      1170
 MONLS          154

      17 MACROS

    SYMBOL SPACE USED  3600 WORDS
     MACRO SPACE USED  3390 WORDS
   INPUT RECORDS READ  3339
 STATEMENTS PROCESSED  1580
         ELAPSED TIME  0:38.12
             CPU TIME    10.94 SEC.
        ASSEMBLY RATE  8665 STATEMENTS/CPU MIN.

      NO ERRORS

