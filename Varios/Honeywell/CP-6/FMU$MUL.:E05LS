VERSION E05

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:1    
        1        1        /*M*  FMU$MUL - Routines to mainipulate upper level and alternate indices */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*P*     NAME:     FMU$MUL
        9        9                 PURPOSE:  To rebuild upper levels and alternate indexes
       10       10                           during a close.
       11       11        */
       12       12        /*F*     NAME:     FMU$BLD
       13       13                 PURPOSE:  To rebuild upper levels during a close
       14       14        */
       15       15        /*D*     NAME:     FMU$BLD
       16       16                 ENTRY:    FMU$BLDALT
       17       17                 CALL:     CALL FMU$BLD
       18       18                 DESCRIPTION:
       19       19                      First, make sure that there we want to rebuild this
       20       20                 upper level.
       21       21
       22       22                      If a user came in while we were locking the CFU, then
       23       23                 we don't want to rebuild.  We will only rebuild if we are
       24       24                 the only user.
       25       25
       26       26                      Add 4 to FM$CFU.FUN.  This prevents anyone from getting
       27       27                 in our way.
       28       28
       29       29                      If the file has alternate indexes, then we want to
       30       30                 rebuild the upper level for each index.
       31       31        */
       32       32        /*F*     NAME:     FMU$BLDALT
       33       33                 CALL:     CALL FMU$BLDALT
       34       34                 DESCRIPTION:
       35       35
       36       36                      FMU$BLDALT is a special entry to rebuild only the
       37       37                 alternate indexes for a file.  This is done because of
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:2    
       38       38                 way close works when LOAD=YES is specified.  Normal close
       39       39                 is done up to the point of releasing the CFUs for the
       40       40                 file.  So, at this point, the upper level for the primary
       41       41                 index should have been built.  Then a load and link is
       42       42                 done to ALTKEY_MON.  When ALTKEY_MON finishes, we
       43       43                 rebuild all of the alternate indexes.
       44       44        */
       45       45                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:3    
       46       46        FMU$BLD:  PROC;
       47       47               %INCLUDE FM$MACROS;
       48      422               %INCLUDE FM_FIELD_C;
       49      463               %INCLUDE CP_6_SUBS;
       50     1003               %INCLUDE B$JIT;
       51     1606               %MACRO F$DCB(BASED=BASED);
       52     1607               %INCLUDE F$DCB;
       53     1656               %MEND;
       54     1657        /* */
       55     1658               %F$DCB(BASED="BASED(JDCB$)");
       56     1708               %FITALTKEYS(FITALTKEYS=ALTKEYS, BASED="BASED(ALTKEY$)");
       57     1714               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
       58     1721               %FM$GRAN(BASED="BASED(CURUP$)");
       59     1725               %FM$CFU(BASED="BASED(CFU$)");
       60     1731               %FM$ULSEG;
       61     1734               %FM$KEYENT;
       62     1737               %FM$IRENT;
       63     1740               %FM$KEYTBL(BASED="BASED(KTPTR$)");
       64     1743        /* */
       65     1744    1          DCL B$JIT$ PTR SYMREF READONLY;
       66     1745    1          DCL B$ROSEG$ PTR SYMREF READONLY;
       67     1746    1          DCL FM_FRZERO UBIN SYMREF;
       68     1747        /* */
       69     1748    1          DCL FMC$CLR1 ENTRY(1);
       70     1749    1          DCL FMD$GETBUF ENTRY(3);
       71     1750    1          DCL FMD$FLSHBUF ENTRY(1);
       72     1751    1          DCL FMD$RELBUF ENTRY(1);
       73     1752    1          DCL FMD$REDBUF ENTRY(6) ALTRET;
       74     1753    1          DCL FMD$WRTBUF ENTRY(1);
       75     1754    1          DCL FMD$WRTSV ENTRY(1);
       76     1755    1          DCL FMR$L8 ENTRY;
       77     1756    1          DCL FMR$U8 ENTRY;
       78     1757    1          DCL FMR$SLIDE ENTRY(3);
       79     1758    1          DCL FAF$GETGRAN ENTRY(1) ALTRET;
       80     1759        /* */
       81     1760    1          DCL JDCB$ PTR;
       82     1761    1          DCL CFU$ PTR;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:4    
       83     1762    1          DCL ORG SBIN;
       84     1763    1          DCL TDA UBIN;
       85     1764    1          DCL LVL SBIN;
       86     1765    1          DCL CURUP$ PTR;
       87     1766    1          DCL OLDTDA UBIN;
       88     1767    1          DCL ALTKEY$ PTR;
       89     1768    1          DCL DA UBIN;
       90     1769    1          DCL CURLOW$ PTR;
       91     1770    1          DCL NGRANS SBIN;
       92     1771    1          DCL AVAIL SBIN;
       93     1772    1          DCL PRLAST$ PTR;
       94     1773    1          DCL TEMPTDA UBIN;
       95     1774    1          DCL KEYCNT SBIN;
       96     1775    1          DCL KEYCNTUP SBIN;
       97     1776    1          DCL KEYTBLSIZE SBIN;
       98     1777    1          DCL LCDA UBIN;
       99     1778    1          DCL KTPTR$ PTR;
      100     1779    1          DCL BOUND SBIN;
      101     1780    1          DCL PRLEN SBIN;
      102     1781    1          DCL LAST$ PTR;
      103     1782    1          DCL LEN SBIN;
      104     1783    1          DCL SIZE SBIN;
      105     1784    1          DCL NAVX$ PTR;
      106     1785    1          DCL I SBIN;
      107     1786    1          DCL SIZEUP SBIN;
      108     1787    1          DCL INDEX# SBIN;
      109     1788    1          DCL THISLVLFDA UBIN;
      110     1789    1          DCL FIRST$ PTR;
      111     1790    1          DCL BOUNDUP SBIN;
      112     1791    1          DCL KTPTRUP$ PTR;
      113     1792    1          DCL OLDLVL$ PTR;
      114     1793    1          DCL OLDNXTFDA UBIN;
      115     1794    1          DCL PREVDA UBIN;
      116     1795    1          DCL ALTONLY BIT(1);
      117     1796    1          DCL KLB SBIN;
      118     1797        /* */
      119     1798    1          DCL 1 KEY BASED,
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:5    
      120     1799    1               2 SIZE UBIN(9) CALIGNED,
      121     1800    1               2 TEXT CHAR(LEN) CALIGNED;
      122     1801    1          DCL WRD UBIN BASED;
      123     1802        /* */
      124     1803               %FM_GRAN(HDR=1);
      125     1807    1          DCL 1 INITKEYTBL CONSTANT,
      126     1808    1               2 * UBIN(9) UNAL INIT(280);
      127     1809        /* */
      128     1810               %EQU ANY=0;
      129     1811               %EQU ULONLY=1;
      130     1812        /* */
      131     1813    1          ALTONLY=%NO#;
      132     1814    1          GOTO COMMON;
      133     1815
      134     1816    1   FMU$BLDALT: ENTRY;
      135     1817    1          ALTONLY=%YES#;
      136     1818
      137     1819    1   COMMON: JDCB$=B$JIT.DCB$;
      138     1820
      139     1821    1          IF B$JIT.FRS & %RS_XKEY# THEN
      140     1822    1             RETURN;
      141     1823    1          IF F$DCB.IORG ~= %KEYED# THEN
      142     1824    1             RETURN;
      143     1825
      144     1826    1          CFU$=F$DCB.CFU$;
      145     1827    1          IF NOT FM$CFU.SHARED OR
      146     1828    1             FM$CFU.USECNT > 1 OR
      147     1829    1             (FM$CFU.ULBLD = 0 AND
      148     1830    1             ((F$DCB.TDALVL > 0 AND FM$CFU.SLIDE <= F$DCB.LSLIDE) OR
      149     1831    1             (F$DCB.TDALVL = 0 AND FM$CFU.SLIDE <= 3))) THEN
      150     1832    1             RETURN;
      151     1833
      152     1834    1          CALL FMR$L8;
      153     1835    1          IF FM$CFU.USECNT > 1 THEN
      154     1836    2             DO;   /* ANOTHER USER SNUCK IN */
      155     1837    2             CALL FMR$U8;
      156     1838    2             RETURN;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:6    
      157     1839    2             END;  /* ANOTHER USE SNUCK IN */
      158     1840
      159     1841    1          FM$CFU.FUN=MOD(FM$CFU.FUN,4)+4; /* It may be locked, but be sure */
      160     1842    1          CALL FMR$U8;
      161     1843    1          CALL FMD$FLSHBUF(0);
      162     1844               /* Get rid of all out of date buffers. */
      163     1845    1          IF FM$CFU.MODCNT ~= F$DCB.MODCNT THEN
      164     1846    2             DO I=0 TO 4;
      165     1847    2                IF F$DCB.BFR1.CX(I)=0 THEN
      166     1848    2                   CALL FMD$RELBUF(I);
      167     1849    2             END;
      168     1850    1          ORG=F$DCB.ORG;
      169     1851    1          ALTKEY$=ADDR(NIL);
      170     1852
      171     1853    1          IF F$DCB.ALTKEYX ~= 0 THEN
      172     1854    1             CALL BLD_ALTKEY ALTRET(ERR);
      173     1855    1          ELSE
      174     1856    1             CALL BLDUL ALTRET(ERR);
      175     1857
      176     1858    2          DO WHILE('0'B);
      177     1859    2   ERR:      B$JIT.ERR='0'B;
      178     1860    2             CALL CLEANUP;
      179     1861    2          END;
      180     1862
      181     1863    1          FM$CFU.SLIDE=0;
      182     1864    1          FM$CFU.ULBLD=0;
      183     1865    1          F$DCB.SLIDE=0;
      184     1866    1          RETURN;
      185     1867               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:7    
      186     1868        /*I*     NAME:     BLD_ALTKEY
      187     1869                 PURPOSE:  To build upper levels for alternate indexes
      188     1870                 DESCRIPTION:
      189     1871                      There is no real difference between irel and indexed
      190     1872                 files, except for the structures.  In each case, the
      191     1873                 ALTBLD flag is checked to determine the end of the loop
      192     1874                 (whether to build the alternate indexes).  The ALTONLY
      193     1875                 flag indicates where we start.  Then, we just set the
      194     1876                 proper variables, and go build the upper level.
      195     1877        */
      196     1878                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:8    
      197     1879    1   BLD_ALTKEY: PROC ALTRET;
      198     1880    2          DCL STARTLOOP SBIN;
      199     1881    2          DCL ENDLOOP SBIN;
      200     1882        /* */
      201     1883    2          ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);
      202     1884    2          IF ORG = %IREL# THEN
      203     1885    3             DO;   /* IRKEYS */
      204     1886    3             IF IRKEYS.UNIQUEBLD THEN
      205     1887    3                ENDLOOP=0;
      206     1888    3             ELSE
      207     1889    3                ENDLOOP=IRKEYS.NKEYS-1;
      208     1890
      209     1891    3             IF ALTONLY = %YES# THEN
      210     1892    3                STARTLOOP=1;
      211     1893    3             ELSE
      212     1894    3                STARTLOOP=0;
      213     1895
      214     1896    4             DO INDEX#=STARTLOOP TO ENDLOOP;
      215     1897    4                IF INDEX# = 0 OR
      216     1898    4                   NOT FM$CFU.ALTBLD OR
      217     1899    4                   IRKEYS.K.UNIQUE(INDEX#) THEN
      218     1900    5                   DO;   /* BUILD UPPER LEVEL */
      219     1901    5                   F$DCB.TDA=IRKEYS.K.TDA(INDEX#);
      220     1902    5                   F$DCB.TDALVL=IRKEYS.K.TDALVL(INDEX#);
      221     1903    5                   CALL BLDUL ALTRET(ERR);
      222     1904    5                   IRKEYS.K.TDA(INDEX#)=F$DCB.TDA;
      223     1905    5                   IRKEYS.K.TDALVL(INDEX#)=F$DCB.TDALVL;
      224     1906    5                   END;  /* BUILD UPPER LEVEL */
      225     1907    4             END;  /* DO I */
      226     1908    3             F$DCB.TDA=IRKEYS.K.TDA(0);
      227     1909    3             F$DCB.TDALVL=IRKEYS.K.TDALVL(0);
      228     1910    3             END;  /* IRKEYS */
      229     1911    2          ELSE
      230     1912    3             DO;   /* INDEX */
      231     1913    3             IF ALTKEYS.UNIQUEBLD THEN
      232     1914    3                ENDLOOP=0;
      233     1915    3             ELSE
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:9    
      234     1916    3                ENDLOOP=ALTKEYS.NUMENTS-1;
      235     1917
      236     1918    3             IF ALTONLY = %YES# THEN
      237     1919    3                STARTLOOP=1;
      238     1920    3             ELSE
      239     1921    3                STARTLOOP=0;
      240     1922
      241     1923    4             DO INDEX#=STARTLOOP TO ENDLOOP;
      242     1924    4                IF INDEX# = 0 OR
      243     1925    4                   NOT FM$CFU.ALTBLD OR
      244     1926    4                   ALTKEYS.K.UNIQUE(INDEX#) THEN
      245     1927    5                   DO;   /* BUILD UPPER LEVEL */
      246     1928    5                   F$DCB.TDA=ALTKEYS.K.TDA(INDEX#);
      247     1929    5                   F$DCB.TDALVL=ALTKEYS.K.TDALVL(INDEX#);
      248     1930    5                   F$DCB.KEYL=ALTKEYS.K.KEYL(INDEX#);
      249     1931    5                   CALL BLDUL ALTRET(ERR);
      250     1932    5                   ALTKEYS.K.TDA(INDEX#)=F$DCB.TDA;
      251     1933    5                   ALTKEYS.K.TDALVL(INDEX#)=F$DCB.TDALVL;
      252     1934    5                   END;  /* BUILD UPPER LEVEL */
      253     1935    4             END;  /* DO INDEX# */
      254     1936    3             F$DCB.TDA=ALTKEYS.K.TDA(0);
      255     1937    3             F$DCB.TDALVL=ALTKEYS.K.TDALVL(0);
      256     1938    3             END;  /* INDEX */
      257     1939
      258     1940    2          RETURN;
      259     1941    2   ERR:   ALTRETURN;
      260     1942    2          END BLD_ALTKEY;
      261     1943               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:10   
      262     1944        /*I*     NAME:     BLDLVL
      263     1945                 PURPOSE:  To build one level in the upper level
      264     1946                 DESCRIPTION:
      265     1947                      We start off pointing to the beginning of a
      266     1948                 level.  We loop until we hit the end of the level.
      267     1949
      268     1950                      We can't make an entry in the upper level if there
      269     1951                 are no keys, so loop until we find a granule with keys.
      270     1952
      271     1953                      Build pointers to the first and last keys in this
      272     1954                 granule.  We call MINCHECK to check the first key of
      273     1955                 this granule against the last key of both this granule
      274     1956                 and the previous granule.  This is done to make sure that
      275     1957                 we have the minimum size key that uniquely distinguishes
      276     1958                 this granule from both the preceeding and following
      277     1959                 granules.
      278     1960
      279     1961                      Get space, if necessary.
      280     1962
      281     1963                      Zero out the first word, we don't want any odd
      282     1964                 bits left on.  Then set the size and text of the key.
      283     1965                 Increment the counter of keys at this level.
      284     1966
      285     1967                      Check the key count against the current BOUND.
      286     1968
      287     1969                      Store the DA of the granule that this key points to.
      288     1970                 Decrement the available space.  Set the bound and key
      289     1971                 count.  Set SIZEUP to the size of this granule.
      290     1972
      291     1973                      Now move buffer 1 to buffer 0.  The current granule
      292     1974                 becomes the previous granule.
      293     1975        */
      294     1976                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:11   
      295     1977    1   BLDLVL: PROC ALTRET;
      296     1978        /* */
      297     1979    2          KEYCNTUP=0;
      298     1980    2          KEYTBLSIZE=0;
      299     1981    2          AVAIL=0;
      300     1982
      301     1983    3   LOOP:  DO UNTIL(CURLOW$->FM$GRAN.FLINK = 0);
      302     1984    3             LCDA=F$DCB.BFR.DA(0);
      303     1985    4             DO WHILE(KEYCNT = 0);
      304     1986    4                DA=CURLOW$->FM$GRAN.FLINK;
      305     1987
      306     1988    4                IF DA = 0 THEN
      307     1989    4                   EXIT LOOP;
      308     1990
      309     1991    4                F$DCB.LVL=LVL-1;
      310     1992    4                CALL FMD$REDBUF(CURLOW$, 1, DA, 0, LCDA) ALTRET(ERR);
      311     1993    4                KEYCNT=CURLOW$->FM$GRAN.KEYCNT;
      312     1994    4                LCDA=F$DCB.BFR.DA(1);
      313     1995    4             END;
      314     1996
      315     1997    3             KTPTR$=PINCRW(CURLOW$, CURLOW$->FM$GRAN.FCEX);
      316     1998    3             BOUND=FM$KEYTBL(0);
      317     1999    3             IF BOUND > 1 THEN
      318     2000    3                FIRST$=PINCRW(CURLOW$, FM$KEYTBL(1));
      319     2001    3             ELSE
      320     2002    3                FIRST$=PINCRW(CURLOW$, FM$KEYTBL(1)+512);
      321     2003
      322     2004    3             IF KEYCNT < BOUND THEN
      323     2005    3                LAST$=PINCRW(CURLOW$, FM$KEYTBL(KEYCNT));
      324     2006    3             ELSE
      325     2007    3                LAST$=PINCRW(CURLOW$, FM$KEYTBL(KEYCNT)+512);
      326     2008
      327     2009    3             IF PRLAST$ ~= ADDR(NIL) THEN
      328     2010    3                CALL MINCHECK(PRLAST$, PRLEN);
      329     2011    3             ELSE
      330     2012    3                PRLEN=0;
      331     2013    3             CALL MINCHECK(LAST$, LEN);
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:12   
      332     2014
      333     2015    3             IF PRLEN > LEN THEN
      334     2016    3                LEN=PRLEN;
      335     2017    3             SIZE=(LEN+8)/4;
      336     2018
      337     2019    3             IF SIZE > AVAIL OR KEYCNTUP >= KEYTBLSIZE-1 THEN
      338     2020    3                CALL GETSPACE ALTRET(ERR);
      339     2021
      340     2022    3             NAVX$->WRD=0;
      341     2023    3             IF ORG = %IREL# THEN
      342     2024    3                NAVX$->FM$IRENT.KLB=LEN;
      343     2025    3             ELSE
      344     2026    3                NAVX$->FM$KEYENT.KLB=LEN;
      345     2027    3             NAVX$->KEY.TEXT=FIRST$->KEY.TEXT;
      346     2028    3             KEYCNTUP=KEYCNTUP+1;
      347     2029
      348     2030    3             I=POFFW(NAVX$, CURUP$);
      349     2031    3             IF I > 511 AND KEYCNTUP < BOUNDUP THEN
      350     2032    3                BOUNDUP=KEYCNTUP;
      351     2033    3             KTPTRUP$->FM$KEYTBL(KEYCNTUP)=I;
      352     2034
      353     2035    3             NAVX$=PINCRW(NAVX$, SIZE-1);
      354     2036    3             NAVX$->FM$ULSEG.DA=F$DCB.BFR.DA(1);
      355     2037    3             NAVX$=PINCRW(NAVX$, 1);
      356     2038    3             AVAIL=AVAIL-SIZE;
      357     2039    3             FM$GRAN.KEYCNT=KEYCNTUP;
      358     2040    3             KTPTRUP$->FM$KEYTBL(0)=BOUNDUP;
      359     2041    3             FM$GRAN.NAVX=POFFW(NAVX$, CURUP$);
      360     2042    3             FM$GRAN.AVAIL=AVAIL;
      361     2043    3             SIZEUP=SIZEUP+SIZE;
      362     2044
      363     2045    3             CALL FMD$FLSHBUF(0);
      364     2046    3             F$DCB.BFR(0)=F$DCB.BFR(1);
      365     2047    3             F$DCB.BFR1(0)=F$DCB.BFR1(1);
      366     2048    3             F$DCB.BFR(1)='0'B;
      367     2049    3             F$DCB.BFR1(1)='0'B;
      368     2050    3             PRLAST$=LAST$;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:13   
      369     2051    3             KEYCNT=0;
      370     2052    3          END;  /* WHILE */
      371     2053
      372     2054    2          RETURN;
      373     2055    2   ERR:   ALTRETURN;
      374     2056    2          END BLDLVL;
      375     2057               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:14   
      376     2058        /*I*     NAME:     BLDUL
      377     2059                 PURPOSE:  To build the upper level
      378     2060                 DESCRIPTION:
      379     2061                      Initialize some local variables.  If there is an
      380     2062                 old upper level, remember that.  We will try to reuse
      381     2063                 that granule space.
      382     2064
      383     2065                      Get the disk address of the first granule here, and
      384     2066                 read it in.
      385     2067
      386     2068                      Now, loop until we are done.  Build a single level.
      387     2069                 If the number of granules at the level just built is
      388     2070                 greater than 3, and we aren't up to level 4 yet (I wonder
      389     2071                 if a file will ever be built with 3 upper levels), then
      390     2072                 build another level.
      391     2073
      392     2074                      If we have 3 granules for the upper level, then
      393     2075                 set the TDA to the granule in the middle.
      394     2076        */
      395     2077                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:15   
      396     2078    1   BLDUL: PROC ALTRET;
      397     2079        /* */
      398     2080    2          TDA=0;
      399     2081    2          LVL=1;
      400     2082    2          TEMPTDA=0;
      401     2083    2          CURUP$=ADDR(NIL);
      402     2084    2          F$DCB.GTYP=FMGTFILE;
      403     2085    2          IF F$DCB.TDALVL > 0 THEN
      404     2086    2             OLDTDA=F$DCB.TDA;
      405     2087    2          ELSE
      406     2088    2             OLDTDA=0;
      407     2089
      408     2090    2          IF OLDTDA ~= 0 THEN
      409     2091    2             CALL INITUL;
      410     2092
      411     2093    2          F$DCB.LVL=0;
      412     2094    2          IF ALTKEY$ ~= ADDR(NIL) THEN
      413     2095    3             DO;   /* ALTKEYS */
      414     2096    3             IF F$DCB.ORG = %INDEXED# THEN
      415     2097    3                DA=ALTKEYS.K.FDA(INDEX#);
      416     2098    3             ELSE
      417     2099    3                DA=IRKEYS.K.FDA(INDEX#);
      418     2100    3             END;  /* ALTKEYS */
      419     2101    2          ELSE
      420     2102    2             DA=FM_FRZERO;
      421     2103    2          IF DA = 0 THEN
      422     2104    2             GOTO DONE;
      423     2105    2          CALL FMD$REDBUF(CURLOW$, 0, DA, 0, 0) ALTRET(ERR);
      424     2106
      425     2107    2          KEYCNT=0;
      426     2108    2          NGRANS=0;
      427     2109    2          AVAIL=0;
      428     2110    2          PRLAST$=ADDR(NIL);
      429     2111
      430     2112    3   LOOP:  DO WHILE('1'B);
      431     2113    3             CALL BLDLVL ALTRET(ERR);
      432     2114
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:16   
      433     2115    3             CALL FMD$FLSHBUF(0);
      434     2116    3             CALL FMD$FLSHBUF(1);
      435     2117
      436     2118    3             IF NGRANS > 3 AND LVL < 4 THEN
      437     2119    4                DO;   /* NEED ANOTHER LEVEL */
      438     2120    4                CALL FMD$FLSHBUF(3);
      439     2121    4                CURUP$=ADDR(NIL);
      440     2122    4                LVL=LVL+1;
      441     2123    4                F$DCB.LVL=LVL-1;
      442     2124    4                CALL FMD$REDBUF(CURLOW$, 1, THISLVLFDA, 0, 0) ALTRET(ERR);
      443     2125    4                AVAIL=0;
      444     2126    4                NGRANS=0;
      445     2127    4                PRLAST$=ADDR(NIL);
      446     2128    4                KEYCNT=CURLOW$->FM$GRAN.KEYCNT;
      447     2129    4                END;  /* NEED ANOTHER LEVEL */
      448     2130    3             ELSE
      449     2131    3                EXIT LOOP;
      450     2132    3          END;  /* UNTIL */
      451     2133
      452     2134    2          IF NGRANS = 3 THEN
      453     2135    2             TEMPTDA=FM$GRAN.BLINK;
      454     2136
      455     2137    2   DONE:  CALL CLEANUP;
      456     2138
      457     2139    2          F$DCB.TDA=TEMPTDA;
      458     2140    2          IF TEMPTDA = 0 THEN
      459     2141    2             F$DCB.TDALVL=0;
      460     2142    2          ELSE
      461     2143    2             F$DCB.TDALVL=LVL;
      462     2144    2          RETURN;
      463     2145    2   ERR:   ALTRETURN;
      464     2146    2          END BLDUL;
      465     2147               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:17   
      466     2148        /*I*     NAME:     CLEANUP
      467     2149                 PURPOSE:  To clean up after building an upper level
      468     2150                 DESCRIPTION:
      469     2151                      If CURUP$ is nil, then we never built an upper
      470     2152                 level for this file.  If there was an upper level, then
      471     2153                 wipe out the granule, so it isn't used as an upper level.
      472     2154
      473     2155                      If we did build an upper level, then set the ENDLVL
      474     2156                 bit to signify the end of this level.  Then get any old
      475     2157                 granules and tack them on the end.  This way we may be
      476     2158                 able to use them later.
      477     2159        */
      478     2160                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:18   
      479     2161    1   CLEANUP: PROC;
      480     2162        /* */
      481     2163    2          IF CURUP$ = ADDR(NIL) THEN
      482     2164    3             DO;   /* NO UPPER LEVEL EVER BUILT */
      483     2165    3             CALL GETGRAN(%ULONLY) WHENALTRETURN
      484     2166    4                DO;
      485     2167    4                B$JIT.ERR='0'B;
      486     2168    4                GOTO DONE;
      487     2169    4                END;
      488     2170    3             CALL FMD$FLSHBUF(3);
      489     2171    3             CALL FMD$GETBUF(3, 1, CURUP$);
      490     2172    3             FM$GRAN=FM_GRAN;
      491     2173    3             FM$GRAN.STAMP.HASH=F$DCB.HASH;
      492     2174    3             FM$GRAN.STAMP.GMOD=DA;
      493     2175    3             FM$GRAN.ORG=ORG;
      494     2176    3             FM$GRAN.LVL=1;
      495     2177    3             FM$GRAN.FCEX=SIZEW(FM$GRAN);
      496     2178    3             FM$GRAN.NAVX=SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL);
      497     2179    3             FM$GRAN.AVAIL=1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL);
      498     2180    3             KTPTR$=PINCRW(CURUP$, SIZEW(FM$GRAN));
      499     2181    3             FM$KEYTBL=INITKEYTBL;
      500     2182    3             F$DCB.BFR.DA(3)=DA;
      501     2183    3             CALL FMC$CLR1(DA);
      502     2184    3             F$DCB.BFR.BUFUP(3)='1'B;
      503     2185    3             F$DCB.BFR.SCRUB(3)='1'B;
      504     2186    3             END;  /* NO UPPER LEVEL EVER BUILT */
      505     2187    2          ELSE
      506     2188    3             DO;   /* Link on any left-over grans */
      507     2189    3             FM$GRAN.ENDLVL='1'B;
      508     2190    4             DO UNTIL(DA = 0);
      509     2191    4                CALL GETGRAN(%ULONLY) WHENALTRETURN
      510     2192    5                   DO;
      511     2193    5                   B$JIT.ERR='0'B;
      512     2194    5                   END;
      513     2195    4                FM$GRAN.FLINK=DA;
      514     2196    4                PREVDA=F$DCB.BFR.DA(3);
      515     2197    4                CALL FMD$WRTBUF(3);
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:19   
      516     2198    4                IF DA ~= 0 THEN
      517     2199    5                   DO;   /* Got an old gran */
      518     2200    5                   CALL FMD$GETBUF(3, 1, CURUP$);
      519     2201    5                   FM$GRAN=FM_GRAN;
      520     2202    5                   FM$GRAN.STAMP.HASH=F$DCB.HASH;
      521     2203    5                   FM$GRAN.STAMP.GMOD=DA;
      522     2204    5                   FM$GRAN.ORG=ORG;
      523     2205    5                   FM$GRAN.LVL=LVL;
      524     2206    5                   FM$GRAN.BLINK=PREVDA;
      525     2207    5                   FM$GRAN.NAVX=SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL);
      526     2208    5                   FM$GRAN.AVAIL=1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL);
      527     2209    5                   FM$GRAN.FCEX=SIZEW(FM$GRAN);
      528     2210    5                   KTPTR$=PINCRW(CURUP$, SIZEW(FM$GRAN));
      529     2211    5                   FM$KEYTBL=INITKEYTBL;
      530     2212    5                   F$DCB.BFR.DA(3)=DA;
      531     2213    5                   CALL FMC$CLR1(DA);
      532     2214    5                   F$DCB.BFR.SCRUB(3)='1'B;
      533     2215    5                   END;  /* Got an old gran */
      534     2216    4             END;  /* UNTIL */
      535     2217    3             END;  /* Link on any left-over grans */
      536     2218
      537     2219    3   DONE:  DO I=0 TO 4;
      538     2220    3             CALL FMD$FLSHBUF(I);
      539     2221    3          END;
      540     2222
      541     2223    2          RETURN;
      542     2224    2          END CLEANUP;
      543     2225               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:20   
      544     2226        /*I*     NAME:     GETGRAN
      545     2227                 PURPOSE:  To get a granule for the upper level
      546     2228                 DESCRIPTION:
      547     2229                      If there is an old upper level, then try to get
      548     2230                 space from that first.  OLDTDA is actually the next
      549     2231                 available granule to use.  Set OLDTDA to the flink
      550     2232                 at this level, and read in the granule.  If there
      551     2233                 isn't a flink, then try to go to the next lower level.
      552     2234
      553     2235                      OLDNXTFDA is the first entry in the first granule
      554     2236                 of the previous level.  This will be the FDA of the
      555     2237                 next lower level.  Read in that granule.  Get the next
      556     2238                 OLDNXTFDA.
      557     2239
      558     2240                      If there isn't any old space to use anymore, then
      559     2241                 try to get a new granule.  Only do that if it's okay.
      560     2242        */
      561     2243                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:21   
      562     2244    1   GETGRAN: PROC(FLAG) ALTRET;
      563     2245    2          DCL FLAG SBIN;
      564     2246    2          DCL T$ PTR;
      565     2247        /* */
      566     2248    2          IF OLDTDA ~= 0 THEN
      567     2249    3             DO;   /* GET FROM OLD TDA */
      568     2250    3             DA=OLDTDA;
      569     2251    3             OLDTDA=OLDLVL$->FM$GRAN.FLINK;
      570     2252    3             IF OLDTDA ~= 0 THEN
      571     2253    4                DO;   /* READ GRAN */
      572     2254    4                F$DCB.LVL=OLDLVL$->FM$GRAN.LVL;
      573     2255    4                CALL FMD$REDBUF(OLDLVL$, 4, OLDTDA, 0, DA) ALTRET(ERR);
      574     2256    4                END;  /* READ GRAN */
      575     2257    3             ELSE
      576     2258    4                DO;   /* GET FROM NEXT LEVEL */
      577     2259    4                IF OLDLVL$->FM$GRAN.LVL = 1 THEN
      578     2260    5                   DO;   /* NO MORE */
      579     2261    5                   CALL FMD$FLSHBUF(4);
      580     2262    5                   RETURN;
      581     2263    5                   END;  /* NO MORE */
      582     2264
      583     2265    4                OLDTDA=OLDNXTFDA;
      584     2266    4                F$DCB.LVL=OLDLVL$->FM$GRAN.LVL-1;
      585     2267    4                CALL FMD$REDBUF(OLDLVL$, 4, OLDTDA, 0, 0) ALTRET(ERR);
      586     2268
      587     2269    4                IF OLDLVL$->FM$GRAN.KEYCNT ~= 0 THEN
      588     2270    5                   DO;   /* LOWER LEVEL */
      589     2271    5                   T$=PINCRW(OLDLVL$, OLDLVL$->FM$GRAN.FCEX);
      590     2272    5                   T$=PINCRW(OLDLVL$, T$->FM$KEYTBL(1));
      591     2273    5                   IF ORG = %IREL# THEN
      592     2274    5                      KLB=T$->FM$IRENT.KLB+1;
      593     2275    5                   ELSE
      594     2276    5                      KLB=T$->FM$KEYENT.KLB;
      595     2277    5                   T$=PINCRW(T$, (KLB+4)/4);
      596     2278    5                   OLDNXTFDA=T$->FM$ULSEG.DA;
      597     2279    5                   END;  /* LOWER LEVEL */
      598     2280    4                ELSE
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:22   
      599     2281    4                   OLDNXTFDA=0;
      600     2282    4                END;  /* GET FROM LOWER LEVEL */
      601     2283    3                RETURN;
      602     2284    3             END;  /* GET FROM OLD TDA */
      603     2285    2          ELSE
      604     2286    3             DO;   /* GET NEW GRAN */
      605     2287    3   ERR:      OLDTDA=0;
      606     2288    3             IF FLAG = %ULONLY THEN
      607     2289    3                DA=0;
      608     2290    3             ELSE
      609     2291    3                CALL FAF$GETGRAN(DA) ALTRET(ERR1);
      610     2292    3             END;
      611     2293
      612     2294    2          IF DA = 0 THEN
      613     2295    2             ALTRETURN;
      614     2296
      615     2297    2          RETURN;
      616     2298    2   ERR1:  ALTRETURN;
      617     2299    2          END GETGRAN;
      618     2300               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:23   
      619     2301        /*I*     NAME:     GETSPACE
      620     2302                 PURPOSE:  To make space for a new key
      621     2303                 DESCRIPTION:
      622     2304                      If we ran out of room in the key table, and there
      623     2305                 is still space available, then try expanding the key
      624     2306                 table.  "I" is the amount that we will try to expand
      625     2307                 the key table by.  We make our first guess based on
      626     2308                 the amount of space available, and the current density
      627     2309                 of keys.  After some adjustment, slide the keys back.
      628     2310
      629     2311                      Now, loop through the key table, adding in the
      630     2312                 number of words we slide the keys back.  Adjust bound
      631     2313                 as necessary.  Adjust the space, and size of the key
      632     2314                 table.
      633     2315
      634     2316                      If there is empty space in the key table, and it
      635     2317                 is enough for the key to fit, then make the key table
      636     2318                 smaller.  "I" is the amount to decrease the key table
      637     2319                 by.  We decrease it by just enough to get the key in.
      638     2320                 Loop through the key table, subtracting the amount
      639     2321                 that the keys were slid back by.  Adjust the key
      640     2322                 table size, and amount of space.
      641     2323
      642     2324                      If there isn't enough room here, then get another
      643     2325                 granule.  If CURUP$ isn't nil, then we have already
      644     2326                 started, set the flink, and previous DA.  Initialize
      645     2327                 the granule header.  Initialize the granule and auto
      646     2328                 variables to indicate an empty granule.
      647     2329        */
      648     2330                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:24   
      649     2331    1   GETSPACE: PROC ALTRET;
      650     2332    2          DCL T$ PTR;
      651     2333    2          DCL I SBIN;
      652     2334    2          DCL J SBIN;
      653     2335    2          DCL DISP SBIN;
      654     2336        /* */
      655     2337    2          IF KEYCNTUP >= KEYTBLSIZE-1 AND SIZE < AVAIL AND
      656     2338    2             KEYTBLSIZE < 2044 THEN
      657     2339    3             DO;   /* INCREASE SIZE OF KEYTBL */
      658     2340    3             I=((AVAIL*4)/(4*SIZEUP/KEYCNTUP+1)+3)/4;
      659     2341    3             IF I = 0 THEN
      660     2342    3                I=1;
      661     2343    3             IF SIZE+I > AVAIL THEN
      662     2344    3                I=AVAIL-SIZE;
      663     2345
      664     2346    3             T$=PINCRW(KTPTRUP$, KEYTBLSIZE/4);
      665     2347    3             CALL FMR$SLIDE(T$, I, SIZEUP);
      666     2348
      667     2349    3             IF BOUNDUP = KEYTBLSIZE THEN
      668     2350    3                BOUNDUP=BOUNDUP+I*4;
      669     2351
      670     2352    4             DO J=1 TO KEYCNTUP;
      671     2353    4                DISP=KTPTRUP$->FM$KEYTBL(J)+I;
      672     2354    4                IF J < BOUNDUP AND DISP > 511 THEN
      673     2355    4                   BOUNDUP=J;
      674     2356    4                KTPTRUP$->FM$KEYTBL(J)=DISP;
      675     2357    4             END;  /* DO J */
      676     2358
      677     2359    3             KTPTRUP$->FM$KEYTBL(0)=BOUNDUP;
      678     2360    3             AVAIL=AVAIL-I;
      679     2361    3             NAVX$=PINCRW(NAVX$, I);
      680     2362    3             FM$GRAN.NAVX=FM$GRAN.NAVX+I;
      681     2363    3             KEYTBLSIZE=KEYTBLSIZE+I*4;
      682     2364    3             END;  /* INCREASE KEYTBL */
      683     2365    2          ELSE
      684     2366    2             IF (KEYTBLSIZE-KEYCNTUP-2)/4 > 0 AND
      685     2367    2                SIZE <= (KEYTBLSIZE-KEYCNTUP-2)/4+AVAIL THEN
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:25   
      686     2368    3                DO;   /* DECREASE KEYTBL */
      687     2369    3                I=SIZE-AVAIL;
      688     2370    3                T$=PINCRW(KTPTRUP$, (KEYTBLSIZE/4)-I);
      689     2371
      690     2372    3                CALL FMR$SLIDE(T$, -I, SIZEUP);
      691     2373
      692     2374    4                DO J=1 TO KEYCNTUP;
      693     2375    4                   DISP=KTPTRUP$->FM$KEYTBL(J)-I;
      694     2376    4                   KTPTRUP$->FM$KEYTBL(J)=DISP;
      695     2377    4                   IF DISP < 0 THEN
      696     2378    4                      BOUNDUP=J+1;
      697     2379    4                END;
      698     2380
      699     2381    3                KEYTBLSIZE=KEYTBLSIZE-4*I;
      700     2382    3                IF BOUNDUP > KEYCNTUP THEN
      701     2383    3                   BOUNDUP=KEYTBLSIZE;
      702     2384    3                KTPTRUP$->FM$KEYTBL(0)=BOUNDUP;
      703     2385    3                AVAIL=AVAIL+I;
      704     2386    3                FM$GRAN.AVAIL=AVAIL;
      705     2387    3                NAVX$=PINCRW(NAVX$, -I);
      706     2388    3                FM$GRAN.NAVX=FM$GRAN.NAVX-I;
      707     2389    3                END;  /* DECREASE KEYTBL */
      708     2390    2             ELSE
      709     2391    3                DO;   /* GET ANOTHER GRANULE */
      710     2392    3                CALL GETGRAN(%ANY) ALTRET(ERR);
      711     2393    3                IF CURUP$ ~= ADDR(NIL) THEN
      712     2394    4                   DO;   /* ALREADY HAVE A GRAN */
      713     2395    4                   FM$GRAN.FLINK=DA;
      714     2396    4                   PREVDA=F$DCB.BFR.DA(3);
      715     2397    4                   CALL FMD$WRTBUF(3);
      716     2398    4                   END;  /* ALREADY HAVE A GRAN */
      717     2399    3                ELSE
      718     2400    4                   DO;   /* NO PREV GRAN */
      719     2401    4                   PREVDA=0;
      720     2402    4                   CALL FMD$FLSHBUF(3);
      721     2403    4                   END;  /* NO PREV GRAN */
      722     2404
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:26   
      723     2405    3                CALL FMD$GETBUF(3, 1, CURUP$);
      724     2406    3                FM$GRAN=FM_GRAN;
      725     2407    3                FM$GRAN.STAMP.HASH=F$DCB.HASH;
      726     2408    3                FM$GRAN.STAMP.GMOD=DA;
      727     2409    3                FM$GRAN.BLINK=PREVDA;
      728     2410    3                FM$GRAN.LVL=LVL;
      729     2411    3                FM$GRAN.ORG=ORG;
      730     2412
      731     2413    3                IF PREVDA = 0 THEN
      732     2414    4                   DO;   /* FIRST GRAN */
      733     2415    4                   THISLVLFDA=DA;
      734     2416    4                   TEMPTDA=DA;
      735     2417    4                   END;  /* FIRST GRAN */
      736     2418
      737     2419    3                NAVX$=PINCRW(CURUP$, SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL));
      738     2420    3                FM$GRAN.FCEX=SIZEW(FM$GRAN);
      739     2421    3                KTPTRUP$=PINCRW(CURUP$, SIZEW(FM$GRAN));
      740     2422    3                KTPTRUP$->FM$KEYTBL=INITKEYTBL;
      741     2423    3                KEYCNTUP=0;
      742     2424    3                KEYTBLSIZE=SIZEC(FM$KEYTBL);
      743     2425    3                BOUNDUP=KEYTBLSIZE;
      744     2426    3                SIZEUP=0;
      745     2427    3                AVAIL=1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL);
      746     2428    3                F$DCB.BFR.DA(3)=DA;
      747     2429    3                CALL FMC$CLR1(DA);
      748     2430    3                F$DCB.BFR.BUFUP(3)='1'B;
      749     2431    3                F$DCB.BFR.SCRUB(3)='1'B;
      750     2432    3                NGRANS=NGRANS+1;
      751     2433    3                END;   /* GET A GRAN */
      752     2434
      753     2435    2          RETURN;
      754     2436    2   ERR:   ALTRETURN;
      755     2437    2          END GETSPACE;
      756     2438               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:27   
      757     2439        /*I*     NAME:     INITUL
      758     2440                 PURPOSE:  To do some basic initialization
      759     2441                 DESCRIPTION:
      760     2442                      First, blink to the start of this upper level.
      761     2443                 We want to start getting granules from the beginning of
      762     2444                 the upper level.  Next, if this is higher than level 1,
      763     2445                 then there is another upper level below this.  Set
      764     2446                 OLDNXTFDA to the first granule at the next level.
      765     2447        */
      766     2448                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:28   
      767     2449    1   INITUL: PROC ALTRET;
      768     2450    2          DCL T$ PTR;
      769     2451        /* */
      770     2452    2          F$DCB.LVL=F$DCB.TDALVL;
      771     2453    2          CALL FMD$REDBUF(OLDLVL$, 4, OLDTDA, 0, -1) ALTRET(ERR);
      772     2454
      773     2455    3          DO WHILE(OLDLVL$->FM$GRAN.BLINK ~= 0);
      774     2456    3             LCDA=OLDTDA;
      775     2457    3             OLDTDA=OLDLVL$->FM$GRAN.BLINK;
      776     2458    3             CALL FMD$REDBUF(OLDLVL$, 4, OLDTDA, 0, LCDA) ALTRET(ERR);
      777     2459    3          END;  /* WHILE */
      778     2460
      779     2461    2          IF F$DCB.LVL ~= 1 THEN
      780     2462    2             IF OLDLVL$->FM$GRAN.KEYCNT ~= 0 THEN
      781     2463    3                DO;   /* GET FIRST KEY */
      782     2464    3                T$=PINCRW(OLDLVL$, OLDLVL$->FM$GRAN.FCEX);
      783     2465    3                T$=PINCRW(OLDLVL$, T$->FM$KEYTBL(1));
      784     2466    3                IF ORG = %IREL# THEN
      785     2467    3                   KLB=T$->FM$IRENT.KLB+1;
      786     2468    3                ELSE
      787     2469    3                   KLB=T$->FM$KEYENT.KLB;
      788     2470    3                T$=PINCRW(T$, (KLB+4)/4);
      789     2471    3                OLDNXTFDA=T$->FM$ULSEG.DA;
      790     2472    3                END;
      791     2473    2             ELSE
      792     2474    2                OLDNXTFDA=0;
      793     2475    2          ELSE
      794     2476    2             OLDNXTFDA=0;
      795     2477
      796     2478    2          RETURN;
      797     2479    2   ERR:   CALL FMD$FLSHBUF(4);
      798     2480    2          OLDTDA=0;
      799     2481    2          RETURN;
      800     2482    2          END INITUL;
      801     2483               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:29   
      802     2484        /*I*     NAME:     MINCHECK
      803     2485                 PURPOSE:  To check for the minimal key
      804     2486                 DESCRIPTION:
      805     2487                      In order to conserve space, we try to get the minimum
      806     2488                 key that distinguishes granules.
      807     2489
      808     2490                      If this is an irel file, then don't even try.  The
      809     2491                 comparison routines are a real pain.
      810     2492
      811     2493                      Get the lengths of the two keys we are comparing.
      812     2494
      813     2495                      Next, loop until we can tell the two keys apart,
      814     2496                 comparing 1 word at a time.  If the two keys are still
      815     2497                 indistinguishable, then use the length of the first key
      816     2498                 in this granule.  If LEN is larger then the size of the
      817     2499                 first key in this granule, then set it to the size of
      818     2500                 the first key in this granule.
      819     2501        */
      820     2502                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:30   
      821     2503    1   MINCHECK: PROC(KEY$, LEN);
      822     2504    2          DCL KEY$ PTR;
      823     2505    2          DCL LEN UBIN;
      824     2506    2          DCL LEN1 SBIN;
      825     2507    2          DCL LEN2 SBIN;
      826     2508    2          DCL 1 KEY BASED,
      827     2509    2               2 SIZE UBIN(9) CALIGNED,
      828     2510    2               2 TEXT CHAR(LEN) CALIGNED;
      829     2511        /* */
      830     2512    2          IF ORG = %IREL# THEN
      831     2513    3             DO;   /* USE WHOLE KEY */
      832     2514    3             LEN=KEY$->FM$IRENT.KLB+1;
      833     2515    3             RETURN;
      834     2516    3             END;  /* USE WHOLE KEY */
      835     2517
      836     2518    2          IF ORG = %INDEXED# THEN
      837     2519    3             DO;   /* INDEXED */
      838     2520    3             LEN1=F$DCB.KEYL;
      839     2521    3             LEN2=LEN1;
      840     2522    3             END;  /* INDEXED */
      841     2523    2          ELSE
      842     2524    3             DO;   /* KEYED */
      843     2525    3             LEN1=FIRST$->FM$KEYENT.KLB;
      844     2526    3             LEN2=KEY$->FM$KEYENT.KLB;
      845     2527    3             END;  /* KEYED */
      846     2528
      847     2529    2          LEN=3;
      848     2530    3   LOOP:  DO WHILE(LEN1 > LEN AND LEN2 > LEN);
      849     2531    3             IF FIRST$->KEY.TEXT ~= KEY$->KEY.TEXT THEN
      850     2532    3                EXIT LOOP;
      851     2533
      852     2534    3             LEN=LEN+4;
      853     2535    3          END;
      854     2536
      855     2537    2          IF FIRST$->KEY.TEXT = KEY$->KEY.TEXT THEN
      856     2538    2             LEN=LEN1;
      857     2539
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:31   
      858     2540    2          IF LEN > LEN1 THEN
      859     2541    2             LEN=LEN1;
      860     2542
      861     2543    2          RETURN;
      862     2544    2          END MINCHECK;
      863     2545               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:32   
      864     2546    1          END FMU$BLD;
      865     2547        %EOD;

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:33   
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
      No diagnostics issued in procedure FMU$BLD.

   Procedure FMU$BLD requires 1436 words for executable code.
   Procedure FMU$BLD requires 64 words of local(AUTO) storage.

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:34   

 Object Unit name= FMU$BLD                                    File name= FMU$MUL.:E05TOU
 UTS= JUL 29 '97 17:03:21.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      6      6  FMU$BLD
    1   Proc  even  none  1436   2634  FMU$BLD
    2  RoData even  none    13     15  FMU$BLD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  FMU$BLD
     1      4                  yes      Std        0  FMU$BLDALT
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:35   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FMR$L8
         yes           Std       1 FMD$FLSHBUF
         yes           Std       1 FMD$RELBUF
         yes           Std       0 FMR$U8
 yes     yes           Std       6 FMD$REDBUF
         yes           Std       3 FMD$GETBUF
         yes           Std       1 FMD$WRTBUF
         yes           Std       1 FMC$CLR1
 yes     yes           Std       1 FAF$GETGRAN
         yes           Std       3 FMR$SLIDE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                           r    B$ROSEG$                              FM_FRZERO
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:36   


        1        1        /*M*  FMU$MUL - Routines to mainipulate upper level and alternate indices */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*P*     NAME:     FMU$MUL
        9        9                 PURPOSE:  To rebuild upper levels and alternate indexes
       10       10                           during a close.
       11       11        */
       12       12        /*F*     NAME:     FMU$BLD
       13       13                 PURPOSE:  To rebuild upper levels during a close
       14       14        */
       15       15        /*D*     NAME:     FMU$BLD
       16       16                 ENTRY:    FMU$BLDALT
       17       17                 CALL:     CALL FMU$BLD
       18       18                 DESCRIPTION:
       19       19                      First, make sure that there we want to rebuild this
       20       20                 upper level.
       21       21
       22       22                      If a user came in while we were locking the CFU, then
       23       23                 we don't want to rebuild.  We will only rebuild if we are
       24       24                 the only user.
       25       25
       26       26                      Add 4 to FM$CFU.FUN.  This prevents anyone from getting
       27       27                 in our way.
       28       28
       29       29                      If the file has alternate indexes, then we want to
       30       30                 rebuild the upper level for each index.
       31       31        */
       32       32        /*F*     NAME:     FMU$BLDALT
       33       33                 CALL:     CALL FMU$BLDALT
       34       34                 DESCRIPTION:
       35       35
       36       36                      FMU$BLDALT is a special entry to rebuild only the
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:37   
       37       37                 alternate indexes for a file.  This is done because of
       38       38                 way close works when LOAD=YES is specified.  Normal close
       39       39                 is done up to the point of releasing the CFUs for the
       40       40                 file.  So, at this point, the upper level for the primary
       41       41                 index should have been built.  Then a load and link is
       42       42                 done to ALTKEY_MON.  When ALTKEY_MON finishes, we
       43       43                 rebuild all of the alternate indexes.
       44       44        */
       45       45                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:38   
       46       46        FMU$BLD:  PROC;

     46  1 000000   000000 700200 xent  FMU$BLD      TSX0  ! X66_AUTO_0
         1 000001   000100 000000                    ZERO    64,0

       47       47               %INCLUDE FM$MACROS;
       48      422               %INCLUDE FM_FIELD_C;
       49      463               %INCLUDE CP_6_SUBS;
       50     1003               %INCLUDE B$JIT;
       51     1606               %MACRO F$DCB(BASED=BASED);
       52     1607               %INCLUDE F$DCB;
       53     1656               %MEND;
       54     1657        /* */
       55     1658               %F$DCB(BASED="BASED(JDCB$)");
       56     1708               %FITALTKEYS(FITALTKEYS=ALTKEYS, BASED="BASED(ALTKEY$)");
       57     1714               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
       58     1721               %FM$GRAN(BASED="BASED(CURUP$)");
       59     1725               %FM$CFU(BASED="BASED(CFU$)");
       60     1731               %FM$ULSEG;
       61     1734               %FM$KEYENT;
       62     1737               %FM$IRENT;
       63     1740               %FM$KEYTBL(BASED="BASED(KTPTR$)");
       64     1743        /* */
       65     1744    1          DCL B$JIT$ PTR SYMREF READONLY;
       66     1745    1          DCL B$ROSEG$ PTR SYMREF READONLY;
       67     1746    1          DCL FM_FRZERO UBIN SYMREF;
       68     1747        /* */
       69     1748    1          DCL FMC$CLR1 ENTRY(1);
       70     1749    1          DCL FMD$GETBUF ENTRY(3);
       71     1750    1          DCL FMD$FLSHBUF ENTRY(1);
       72     1751    1          DCL FMD$RELBUF ENTRY(1);
       73     1752    1          DCL FMD$REDBUF ENTRY(6) ALTRET;
       74     1753    1          DCL FMD$WRTBUF ENTRY(1);
       75     1754    1          DCL FMD$WRTSV ENTRY(1);
       76     1755    1          DCL FMR$L8 ENTRY;
       77     1756    1          DCL FMR$U8 ENTRY;
       78     1757    1          DCL FMR$SLIDE ENTRY(3);
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:39   
       79     1758    1          DCL FAF$GETGRAN ENTRY(1) ALTRET;
       80     1759        /* */
       81     1760    1          DCL JDCB$ PTR;
       82     1761    1          DCL CFU$ PTR;
       83     1762    1          DCL ORG SBIN;
       84     1763    1          DCL TDA UBIN;
       85     1764    1          DCL LVL SBIN;
       86     1765    1          DCL CURUP$ PTR;
       87     1766    1          DCL OLDTDA UBIN;
       88     1767    1          DCL ALTKEY$ PTR;
       89     1768    1          DCL DA UBIN;
       90     1769    1          DCL CURLOW$ PTR;
       91     1770    1          DCL NGRANS SBIN;
       92     1771    1          DCL AVAIL SBIN;
       93     1772    1          DCL PRLAST$ PTR;
       94     1773    1          DCL TEMPTDA UBIN;
       95     1774    1          DCL KEYCNT SBIN;
       96     1775    1          DCL KEYCNTUP SBIN;
       97     1776    1          DCL KEYTBLSIZE SBIN;
       98     1777    1          DCL LCDA UBIN;
       99     1778    1          DCL KTPTR$ PTR;
      100     1779    1          DCL BOUND SBIN;
      101     1780    1          DCL PRLEN SBIN;
      102     1781    1          DCL LAST$ PTR;
      103     1782    1          DCL LEN SBIN;
      104     1783    1          DCL SIZE SBIN;
      105     1784    1          DCL NAVX$ PTR;
      106     1785    1          DCL I SBIN;
      107     1786    1          DCL SIZEUP SBIN;
      108     1787    1          DCL INDEX# SBIN;
      109     1788    1          DCL THISLVLFDA UBIN;
      110     1789    1          DCL FIRST$ PTR;
      111     1790    1          DCL BOUNDUP SBIN;
      112     1791    1          DCL KTPTRUP$ PTR;
      113     1792    1          DCL OLDLVL$ PTR;
      114     1793    1          DCL OLDNXTFDA UBIN;
      115     1794    1          DCL PREVDA UBIN;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:40   
      116     1795    1          DCL ALTONLY BIT(1);
      117     1796    1          DCL KLB SBIN;
      118     1797        /* */
      119     1798    1          DCL 1 KEY BASED,
      120     1799    1               2 SIZE UBIN(9) CALIGNED,
      121     1800    1               2 TEXT CHAR(LEN) CALIGNED;
      122     1801    1          DCL WRD UBIN BASED;
      123     1802        /* */
      124     1803               %FM_GRAN(HDR=1);
      125     1807    1          DCL 1 INITKEYTBL CONSTANT,
      126     1808    1               2 * UBIN(9) UNAL INIT(280);
      127     1809        /* */
      128     1810               %EQU ANY=0;
      129     1811               %EQU ULONLY=1;
      130     1812        /* */
      131     1813    1          ALTONLY=%NO#;

   1813  1 000002   200046 450100                    STZ     ALTONLY,,AUTO

      132     1814    1          GOTO COMMON;

   1814  1 000003   000010 710000 1                  TRA     COMMON

      133     1815
      134     1816    1   FMU$BLDALT: ENTRY;

   1816  1 000004   000000 700200 xent  FMU$BLDALT   TSX0  ! X66_AUTO_0
         1 000005   000100 000000                    ZERO    64,0

      135     1817    1          ALTONLY=%YES#;

   1817  1 000006   400000 236003                    LDQ     -131072,DU
         1 000007   200046 756100                    STQ     ALTONLY,,AUTO

      136     1818
      137     1819    1   COMMON: JDCB$=B$JIT.DCB$;

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:41   
   1819  1 000010   000000 470400 xsym  COMMON       LDP0    B$JIT$
         1 000011   000232 236100                    LDQ     154,,PR0
         1 000012   200003 756100                    STQ     JDCB$,,AUTO

      138     1820
      139     1821    1          IF B$JIT.FRS & %RS_XKEY# THEN

   1821  1 000013   000314 236100                    LDQ     204,,PR0
         1 000014   000011 736000                    QLS     9
         1 000015   777000 376003                    ANQ     -512,DU
         1 000016   400000 376003                    ANQ     -131072,DU
         1 000017   000021 600000 1                  TZE     s:1823

      140     1822    1             RETURN;

   1822  1 000020   000000 702200 xent               TSX2  ! X66_ARET

      141     1823    1          IF F$DCB.IORG ~= %KEYED# THEN

   1823  1 000021   200003 471500                    LDP1    JDCB$,,AUTO
         1 000022   100070 236100                    LDQ     56,,PR1
         1 000023   077000 376003                    ANQ     32256,DU
         1 000024   002000 116003                    CMPQ    1024,DU
         1 000025   000027 600000 1                  TZE     s:1826

      142     1824    1             RETURN;

   1824  1 000026   000000 702200 xent               TSX2  ! X66_ARET

      143     1825
      144     1826    1          CFU$=F$DCB.CFU$;

   1826  1 000027   100066 236100                    LDQ     54,,PR1
         1 000030   200004 756100                    STQ     CFU$,,AUTO

      145     1827    1          IF NOT FM$CFU.SHARED OR

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:42   
   1827  1 000031   200004 473500                    LDP3    CFU$,,AUTO
         1 000032   300000 236100                    LDQ     0,,PR3
         1 000033   002000 316003                    CANQ    1024,DU
         1 000034   000065 600000 1                  TZE     s:1832
         1 000035   300003 720100                    LXL0    3,,PR3
         1 000036   000002 100003                    CMPX0   2,DU
         1 000037   000065 603000 1                  TRC     s:1832
         1 000040   300006 236100                    LDQ     6,,PR3
         1 000041   000001 316003                    CANQ    1,DU
         1 000042   000066 601000 1                  TNZ     s:1834
         1 000043   100067 236100                    LDQ     55,,PR1
         1 000044   700000 316003                    CANQ    -32768,DU
         1 000045   000056 600000 1                  TZE     s:1827+21
         1 000046   300005 236100                    LDQ     5,,PR3
         1 000047   000033 772000                    QRL     27
         1 000050   200072 756100                    STQ     T$+2,,AUTO
         1 000051   100037 236100                    LDQ     31,,PR1
         1 000052   000011 772000                    QRL     9
         1 000053   000777 376007                    ANQ     511,DL
         1 000054   200072 116100                    CMPQ    T$+2,,AUTO
         1 000055   000065 605000 1                  TPL     s:1832
         1 000056   100067 236100                    LDQ     55,,PR1
         1 000057   700000 316003                    CANQ    -32768,DU
         1 000060   000066 601000 1                  TNZ     s:1834
         1 000061   300005 236100                    LDQ     5,,PR3
         1 000062   777000 376003                    ANQ     -512,DU
         1 000063   004000 116003                    CMPQ    2048,DU
         1 000064   000066 603000 1                  TRC     s:1834

      146     1828    1             FM$CFU.USECNT > 1 OR
      147     1829    1             (FM$CFU.ULBLD = 0 AND
      148     1830    1             ((F$DCB.TDALVL > 0 AND FM$CFU.SLIDE <= F$DCB.LSLIDE) OR
      149     1831    1             (F$DCB.TDALVL = 0 AND FM$CFU.SLIDE <= 3))) THEN
      150     1832    1             RETURN;

   1832  1 000065   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:43   
      151     1833
      152     1834    1          CALL FMR$L8;

   1834  1 000066   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000067   000000 701000 xent               TSX1    FMR$L8
         1 000070   000000 011000                    NOP     0

      153     1835    1          IF FM$CFU.USECNT > 1 THEN

   1835  1 000071   200004 470500                    LDP0    CFU$,,AUTO
         1 000072   000003 720100                    LXL0    3,,PR0
         1 000073   000002 100003                    CMPX0   2,DU
         1 000074   000101 602000 1                  TNC     s:1841

      154     1836    2             DO;   /* ANOTHER USER SNUCK IN */

      155     1837    2             CALL FMR$U8;

   1837  1 000075   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000076   000000 701000 xent               TSX1    FMR$U8
         1 000077   000000 011000                    NOP     0

      156     1838    2             RETURN;

   1838  1 000100   000000 702200 xent               TSX2  ! X66_ARET

      157     1839    2             END;  /* ANOTHER USE SNUCK IN */
      158     1840
      159     1841    1          FM$CFU.FUN=MOD(FM$CFU.FUN,4)+4; /* It may be locked, but be sure */

   1841  1 000101   000000 236100                    LDQ     0,,PR0
         1 000102   000041 772000                    QRL     33
         1 000103   000003 376007                    ANQ     3,DL
         1 000104   000004 036007                    ADLQ    4,DL
         1 000105   000041 736000                    QLS     33
         1 000106   000000 676100                    ERQ     0,,PR0
         1 000107   700000 376003                    ANQ     -32768,DU
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:44   
         1 000110   000000 656100                    ERSQ    0,,PR0

      160     1842    1          CALL FMR$U8;

   1842  1 000111   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000112   000000 701000 xent               TSX1    FMR$U8
         1 000113   000000 011000                    NOP     0

      161     1843    1          CALL FMD$FLSHBUF(0);

   1843  1 000114   000000 630400 2                  EPPR0   0
         1 000115   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000116   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000117   000000 011000                    NOP     0

      162     1844               /* Get rid of all out of date buffers. */
      163     1845    1          IF FM$CFU.MODCNT ~= F$DCB.MODCNT THEN

   1845  1 000120   200003 470500                    LDP0    JDCB$,,AUTO
         1 000121   000100 236100                    LDQ     64,,PR0
         1 000122   000022 772000                    QRL     18
         1 000123   200072 756100                    STQ     T$+2,,AUTO
         1 000124   200004 471500                    LDP1    CFU$,,AUTO
         1 000125   100006 236100                    LDQ     6,,PR1
         1 000126   000025 772000                    QRL     21
         1 000127   200072 116100                    CMPQ    T$+2,,AUTO
         1 000130   000150 600000 1                  TZE     s:1850

      164     1846    2             DO I=0 TO 4;

   1846  1 000131   200034 450100                    STZ     I,,AUTO

      165     1847    2                IF F$DCB.BFR1.CX(I)=0 THEN

   1847  1 000132   200003 470500                    LDP0    JDCB$,,AUTO
         1 000133   200034 720100                    LXL0    I,,AUTO
         1 000134   000122 721110                    LXL1    82,X0,PR0
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:45   
         1 000135   000144 601000 1                  TNZ     s:1849

      166     1848    2                   CALL FMD$RELBUF(I);

   1848  1 000136   200034 631500                    EPPR1   I,,AUTO
         1 000137   200072 451500                    STP1    T$+2,,AUTO
         1 000140   200072 630500                    EPPR0   T$+2,,AUTO
         1 000141   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000142   000000 701000 xent               TSX1    FMD$RELBUF
         1 000143   000000 011000                    NOP     0

      167     1849    2             END;

   1849  1 000144   200034 054100                    AOS     I,,AUTO
         1 000145   200034 235100                    LDA     I,,AUTO
         1 000146   000004 115007                    CMPA    4,DL
         1 000147   000132 604400 1                  TMOZ    s:1847

      168     1850    1          ORG=F$DCB.ORG;

   1850  1 000150   200003 470500                    LDP0    JDCB$,,AUTO
         1 000151   000032 236100                    LDQ     26,,PR0
         1 000152   000033 772000                    QRL     27
         1 000153   200005 756100                    STQ     ORG,,AUTO

      169     1851    1          ALTKEY$=ADDR(NIL);

   1851  1 000154   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000155   200012 756100                    STQ     ALTKEY$,,AUTO

      170     1852
      171     1853    1          IF F$DCB.ALTKEYX ~= 0 THEN

   1853  1 000156   000052 720100                    LXL0    42,,PR0
         1 000157   000163 600000 1                  TZE     s:1856

      172     1854    1             CALL BLD_ALTKEY ALTRET(ERR);
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:46   

   1854  1 000160   000203 701000 1                  TSX1    BLD_ALTKEY
         1 000161   000166 702000 1                  TSX2    ERR
         1 000162   000165 710000 1                  TRA     s:1858

      173     1855    1          ELSE
      174     1856    1             CALL BLDUL ALTRET(ERR);

   1856  1 000163   001013 701000 1                  TSX1    BLDUL
         1 000164   000166 702000 1                  TSX2    ERR

      175     1857
      176     1858    2          DO WHILE('0'B);

   1858  1 000165   000172 710000 1                  TRA     s:1863

      177     1859    2   ERR:      B$JIT.ERR='0'B;

   1859  1 000166   000000 470400 xsym  ERR          LDP0    B$JIT$
         1 000167   000012 450100                    STZ     10,,PR0

      178     1860    2             CALL CLEANUP;

   1860  1 000170   001233 701000 1                  TSX1    CLEANUP
         1 000171   000000 011000                    NOP     0

      179     1861    2          END;

      180     1862
      181     1863    1          FM$CFU.SLIDE=0;

   1863  1 000172   200004 470500                    LDP0    CFU$,,AUTO
         1 000173   000000 236003                    LDQ     0,DU
         1 000174   000005 552140                    STBQ    5,'40'O,PR0

      182     1864    1          FM$CFU.ULBLD=0;

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:47   
   1864  1 000175   000001 236000 2                  LDQ     1
         1 000176   000006 356100                    ANSQ    6,,PR0

      183     1865    1          F$DCB.SLIDE=0;

   1865  1 000177   200003 471500                    LDP1    JDCB$,,AUTO
         1 000200   000000 236003                    LDQ     0,DU
         1 000201   100003 552110                    STBQ    3,'10'O,PR1

      184     1866    1          RETURN;

   1866  1 000202   000000 702200 xent               TSX2  ! X66_ARET

      185     1867               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:48   
      186     1868        /*I*     NAME:     BLD_ALTKEY
      187     1869                 PURPOSE:  To build upper levels for alternate indexes
      188     1870                 DESCRIPTION:
      189     1871                      There is no real difference between irel and indexed
      190     1872                 files, except for the structures.  In each case, the
      191     1873                 ALTBLD flag is checked to determine the end of the loop
      192     1874                 (whether to build the alternate indexes).  The ALTONLY
      193     1875                 flag indicates where we start.  Then, we just set the
      194     1876                 proper variables, and go build the upper level.
      195     1877        */
      196     1878                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:49   
      197     1879    1   BLD_ALTKEY: PROC ALTRET;

   1879  1 000203   200050 741300       BLD_ALTKEY   STX1  ! KLB+1,,AUTO

      198     1880    2          DCL STARTLOOP SBIN;
      199     1881    2          DCL ENDLOOP SBIN;
      200     1882        /* */
      201     1883    2          ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);

   1883  1 000204   200003 470500                    LDP0    JDCB$,,AUTO
         1 000205   000052 720100                    LXL0    42,,PR0
         1 000206   000000 636010                    EAQ     0,X0
         1 000207   000000 036000 xsym               ADLQ    B$ROSEG$
         1 000210   200012 756100                    STQ     ALTKEY$,,AUTO

      202     1884    2          IF ORG = %IREL# THEN

   1884  1 000211   200005 235100                    LDA     ORG,,AUTO
         1 000212   000015 115007                    CMPA    13,DL
         1 000213   000326 601000 1                  TNZ     s:1913

      203     1885    3             DO;   /* IRKEYS */

      204     1886    3             IF IRKEYS.UNIQUEBLD THEN

   1886  1 000214   200012 471500                    LDP1    ALTKEY$,,AUTO
         1 000215   100002 236100                    LDQ     2,,PR1
         1 000216   200000 316003                    CANQ    65536,DU
         1 000217   000222 600000 1                  TZE     s:1889

      205     1887    3                ENDLOOP=0;

   1887  1 000220   200052 450100                    STZ     ENDLOOP,,AUTO
         1 000221   000226 710000 1                  TRA     s:1891

      206     1888    3             ELSE
      207     1889    3                ENDLOOP=IRKEYS.NKEYS-1;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:50   

   1889  1 000222   100000 236100                    LDQ     0,,PR1
         1 000223   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000224   000001 136007                    SBLQ    1,DL
         1 000225   200052 756100                    STQ     ENDLOOP,,AUTO

      208     1890
      209     1891    3             IF ALTONLY = %YES# THEN

   1891  1 000226   200046 234100                    SZN     ALTONLY,,AUTO
         1 000227   000233 605000 1                  TPL     s:1894

      210     1892    3                STARTLOOP=1;

   1892  1 000230   000001 236007                    LDQ     1,DL
         1 000231   200051 756100                    STQ     STARTLOOP,,AUTO
         1 000232   000234 710000 1                  TRA     s:1896

      211     1893    3             ELSE
      212     1894    3                STARTLOOP=0;

   1894  1 000233   200051 450100                    STZ     STARTLOOP,,AUTO

      213     1895
      214     1896    4             DO INDEX#=STARTLOOP TO ENDLOOP;

   1896  1 000234   200051 236100                    LDQ     STARTLOOP,,AUTO
         1 000235   200036 756100                    STQ     INDEX#,,AUTO
         1 000236   000312 710000 1                  TRA     s:1907+1

      215     1897    4                IF INDEX# = 0 OR

   1897  1 000237   200036 235100                    LDA     INDEX#,,AUTO
         1 000240   000253 600000 1                  TZE     s:1901
         1 000241   200004 470500                    LDP0    CFU$,,AUTO
         1 000242   000006 236100                    LDQ     6,,PR0
         1 000243   000004 316003                    CANQ    4,DU
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:51   
         1 000244   000253 600000 1                  TZE     s:1901
         1 000245   200036 236100                    LDQ     INDEX#,,AUTO
         1 000246   000007 402007                    MPY     7,DL
         1 000247   200012 471500                    LDP1    ALTKEY$,,AUTO
         1 000250   100006 236106                    LDQ     6,QL,PR1
         1 000251   400000 316007                    CANQ    -131072,DL
         1 000252   000311 600000 1                  TZE     s:1907

      216     1898    4                   NOT FM$CFU.ALTBLD OR
      217     1899    4                   IRKEYS.K.UNIQUE(INDEX#) THEN
      218     1900    5                   DO;   /* BUILD UPPER LEVEL */

      219     1901    5                   F$DCB.TDA=IRKEYS.K.TDA(INDEX#);

   1901  1 000253   200036 236100                    LDQ     INDEX#,,AUTO
         1 000254   000007 402007                    MPY     7,DL
         1 000255   200012 470500                    LDP0    ALTKEY$,,AUTO
         1 000256   200003 471500                    LDP1    JDCB$,,AUTO
         1 000257   000003 236106                    LDQ     3,QL,PR0
         1 000260   100070 552134                    STBQ    56,'34'O,PR1

      220     1902    5                   F$DCB.TDALVL=IRKEYS.K.TDALVL(INDEX#);

   1902  1 000261   200036 236100                    LDQ     INDEX#,,AUTO
         1 000262   000007 402007                    MPY     7,DL
         1 000263   000003 236106                    LDQ     3,QL,PR0
         1 000264   000006 736000                    QLS     6
         1 000265   100067 676100                    ERQ     55,,PR1
         1 000266   700000 376003                    ANQ     -32768,DU
         1 000267   100067 656100                    ERSQ    55,,PR1

      221     1903    5                   CALL BLDUL ALTRET(ERR);

   1903  1 000270   001013 701000 1                  TSX1    BLDUL
         1 000271   000457 702000 1                  TSX2    ERR

      222     1904    5                   IRKEYS.K.TDA(INDEX#)=F$DCB.TDA;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:52   

   1904  1 000272   200036 236100                    LDQ     INDEX#,,AUTO
         1 000273   000007 402007                    MPY     7,DL
         1 000274   200003 470500                    LDP0    JDCB$,,AUTO
         1 000275   200012 471500                    LDP1    ALTKEY$,,AUTO
         1 000276   000000 620006                    EAX0    0,QL
         1 000277   000070 236100                    LDQ     56,,PR0
         1 000300   100003 676110                    ERQ     3,X0,PR1
         1 000301   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000302   100003 656110                    ERSQ    3,X0,PR1

      223     1905    5                   IRKEYS.K.TDALVL(INDEX#)=F$DCB.TDALVL;

   1905  1 000303   000067 236100                    LDQ     55,,PR0
         1 000304   700000 376003                    ANQ     -32768,DU
         1 000305   000006 772000                    QRL     6
         1 000306   100003 676110                    ERQ     3,X0,PR1
         1 000307   777000 376003                    ANQ     -512,DU
         1 000310   100003 656110                    ERSQ    3,X0,PR1

      224     1906    5                   END;  /* BUILD UPPER LEVEL */

      225     1907    4             END;  /* DO I */

   1907  1 000311   200036 054100                    AOS     INDEX#,,AUTO
         1 000312   200036 236100                    LDQ     INDEX#,,AUTO
         1 000313   200052 116100                    CMPQ    ENDLOOP,,AUTO
         1 000314   000237 604400 1                  TMOZ    s:1897

      226     1908    3             F$DCB.TDA=IRKEYS.K.TDA(0);

   1908  1 000315   200003 470500                    LDP0    JDCB$,,AUTO
         1 000316   100003 236100                    LDQ     3,,PR1
         1 000317   000070 552134                    STBQ    56,'34'O,PR0

      227     1909    3             F$DCB.TDALVL=IRKEYS.K.TDALVL(0);

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:53   
   1909  1 000320   100003 236100                    LDQ     3,,PR1
         1 000321   000006 736000                    QLS     6
         1 000322   000067 676100                    ERQ     55,,PR0
         1 000323   700000 376003                    ANQ     -32768,DU
         1 000324   000067 656100                    ERSQ    55,,PR0

      228     1910    3             END;  /* IRKEYS */

   1910  1 000325   000455 710000 1                  TRA     s:1940

      229     1911    2          ELSE
      230     1912    3             DO;   /* INDEX */

      231     1913    3             IF ALTKEYS.UNIQUEBLD THEN

   1913  1 000326   200012 471500                    LDP1    ALTKEY$,,AUTO
         1 000327   100000 236100                    LDQ     0,,PR1
         1 000330   400000 316007                    CANQ    -131072,DL
         1 000331   000334 600000 1                  TZE     s:1916

      232     1914    3                ENDLOOP=0;

   1914  1 000332   200052 450100                    STZ     ENDLOOP,,AUTO
         1 000333   000341 710000 1                  TRA     s:1918

      233     1915    3             ELSE
      234     1916    3                ENDLOOP=ALTKEYS.NUMENTS-1;

   1916  1 000334   100000 236100                    LDQ     0,,PR1
         1 000335   000022 772000                    QRL     18
         1 000336   000377 376007                    ANQ     255,DL
         1 000337   000001 136007                    SBLQ    1,DL
         1 000340   200052 756100                    STQ     ENDLOOP,,AUTO

      235     1917
      236     1918    3             IF ALTONLY = %YES# THEN

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:54   
   1918  1 000341   200046 234100                    SZN     ALTONLY,,AUTO
         1 000342   000346 605000 1                  TPL     s:1921

      237     1919    3                STARTLOOP=1;

   1919  1 000343   000001 236007                    LDQ     1,DL
         1 000344   200051 756100                    STQ     STARTLOOP,,AUTO
         1 000345   000347 710000 1                  TRA     s:1923

      238     1920    3             ELSE
      239     1921    3                STARTLOOP=0;

   1921  1 000346   200051 450100                    STZ     STARTLOOP,,AUTO

      240     1922
      241     1923    4             DO INDEX#=STARTLOOP TO ENDLOOP;

   1923  1 000347   200051 236100                    LDQ     STARTLOOP,,AUTO
         1 000350   200036 756100                    STQ     INDEX#,,AUTO
         1 000351   000437 710000 1                  TRA     s:1935+1

      242     1924    4                IF INDEX# = 0 OR

   1924  1 000352   200036 235100                    LDA     INDEX#,,AUTO
         1 000353   000366 600000 1                  TZE     s:1928
         1 000354   200004 470500                    LDP0    CFU$,,AUTO
         1 000355   000006 236100                    LDQ     6,,PR0
         1 000356   000004 316003                    CANQ    4,DU
         1 000357   000366 600000 1                  TZE     s:1928
         1 000360   200036 236100                    LDQ     INDEX#,,AUTO
         1 000361   000006 402007                    MPY     6,DL
         1 000362   200012 471500                    LDP1    ALTKEY$,,AUTO
         1 000363   100004 236106                    LDQ     4,QL,PR1
         1 000364   000400 316003                    CANQ    256,DU
         1 000365   000436 600000 1                  TZE     s:1935

      243     1925    4                   NOT FM$CFU.ALTBLD OR
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:55   
      244     1926    4                   ALTKEYS.K.UNIQUE(INDEX#) THEN
      245     1927    5                   DO;   /* BUILD UPPER LEVEL */

      246     1928    5                   F$DCB.TDA=ALTKEYS.K.TDA(INDEX#);

   1928  1 000366   200036 236100                    LDQ     INDEX#,,AUTO
         1 000367   000006 402007                    MPY     6,DL
         1 000370   200012 470500                    LDP0    ALTKEY$,,AUTO
         1 000371   200003 471500                    LDP1    JDCB$,,AUTO
         1 000372   000002 235106                    LDA     2,QL,PR0
         1 000373   000003 236106                    LDQ     3,QL,PR0
         1 000374   000022 773000                    LRL     18
         1 000375   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000376   100070 552134                    STBQ    56,'34'O,PR1

      247     1929    5                   F$DCB.TDALVL=ALTKEYS.K.TDALVL(INDEX#);

   1929  1 000377   200036 236100                    LDQ     INDEX#,,AUTO
         1 000400   000006 402007                    MPY     6,DL
         1 000401   000004 236106                    LDQ     4,QL,PR0
         1 000402   000006 736000                    QLS     6
         1 000403   100067 676100                    ERQ     55,,PR1
         1 000404   700000 376003                    ANQ     -32768,DU
         1 000405   100067 656100                    ERSQ    55,,PR1

      248     1930    5                   F$DCB.KEYL=ALTKEYS.K.KEYL(INDEX#);

   1930  1 000406   200036 236100                    LDQ     INDEX#,,AUTO
         1 000407   000006 402007                    MPY     6,DL
         1 000410   000001 236106                    LDQ     1,QL,PR0
         1 000411   000022 772000                    QRL     18
         1 000412   100036 552110                    STBQ    30,'10'O,PR1

      249     1931    5                   CALL BLDUL ALTRET(ERR);

   1931  1 000413   001013 701000 1                  TSX1    BLDUL
         1 000414   000457 702000 1                  TSX2    ERR
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:56   

      250     1932    5                   ALTKEYS.K.TDA(INDEX#)=F$DCB.TDA;

   1932  1 000415   200036 236100                    LDQ     INDEX#,,AUTO
         1 000416   000006 402007                    MPY     6,DL
         1 000417   200003 470500                    LDP0    JDCB$,,AUTO
         1 000420   200012 471500                    LDP1    ALTKEY$,,AUTO
         1 000421   000002 736000                    QLS     2
         1 000422   000106 100500                    MLR     fill='000'O
         1 000423   000070 200003                    ADSC9   56,,PR0                  cn=1,n=3
         1 000424   100002 600003                    ADSC9   2,Q,PR1                  cn=3,n=3

      251     1933    5                   ALTKEYS.K.TDALVL(INDEX#)=F$DCB.TDALVL;

   1933  1 000425   200036 236100                    LDQ     INDEX#,,AUTO
         1 000426   000006 402007                    MPY     6,DL
         1 000427   000000 620006                    EAX0    0,QL
         1 000430   000067 236100                    LDQ     55,,PR0
         1 000431   700000 376003                    ANQ     -32768,DU
         1 000432   000006 772000                    QRL     6
         1 000433   100004 676110                    ERQ     4,X0,PR1
         1 000434   777000 376003                    ANQ     -512,DU
         1 000435   100004 656110                    ERSQ    4,X0,PR1

      252     1934    5                   END;  /* BUILD UPPER LEVEL */

      253     1935    4             END;  /* DO INDEX# */

   1935  1 000436   200036 054100                    AOS     INDEX#,,AUTO
         1 000437   200036 236100                    LDQ     INDEX#,,AUTO
         1 000440   200052 116100                    CMPQ    ENDLOOP,,AUTO
         1 000441   000352 604400 1                  TMOZ    s:1924

      254     1936    3             F$DCB.TDA=ALTKEYS.K.TDA(0);

   1936  1 000442   200003 470500                    LDP0    JDCB$,,AUTO
         1 000443   100002 235100                    LDA     2,,PR1
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:57   
         1 000444   100003 236100                    LDQ     3,,PR1
         1 000445   000022 773000                    LRL     18
         1 000446   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000447   000070 552134                    STBQ    56,'34'O,PR0

      255     1937    3             F$DCB.TDALVL=ALTKEYS.K.TDALVL(0);

   1937  1 000450   100004 236100                    LDQ     4,,PR1
         1 000451   000006 736000                    QLS     6
         1 000452   000067 676100                    ERQ     55,,PR0
         1 000453   700000 376003                    ANQ     -32768,DU
         1 000454   000067 656100                    ERSQ    55,,PR0

      256     1938    3             END;  /* INDEX */

      257     1939
      258     1940    2          RETURN;

   1940  1 000455   200050 221300                    LDX1  ! KLB+1,,AUTO
         1 000456   000001 702211                    TSX2  ! 1,X1

      259     1941    2   ERR:   ALTRETURN;

   1941  1 000457   200050 221300       ERR          LDX1  ! KLB+1,,AUTO
         1 000460   000000 702211                    TSX2  ! 0,X1

      260     1942    2          END BLD_ALTKEY;
      261     1943               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:58   
      262     1944        /*I*     NAME:     BLDLVL
      263     1945                 PURPOSE:  To build one level in the upper level
      264     1946                 DESCRIPTION:
      265     1947                      We start off pointing to the beginning of a
      266     1948                 level.  We loop until we hit the end of the level.
      267     1949
      268     1950                      We can't make an entry in the upper level if there
      269     1951                 are no keys, so loop until we find a granule with keys.
      270     1952
      271     1953                      Build pointers to the first and last keys in this
      272     1954                 granule.  We call MINCHECK to check the first key of
      273     1955                 this granule against the last key of both this granule
      274     1956                 and the previous granule.  This is done to make sure that
      275     1957                 we have the minimum size key that uniquely distinguishes
      276     1958                 this granule from both the preceeding and following
      277     1959                 granules.
      278     1960
      279     1961                      Get space, if necessary.
      280     1962
      281     1963                      Zero out the first word, we don't want any odd
      282     1964                 bits left on.  Then set the size and text of the key.
      283     1965                 Increment the counter of keys at this level.
      284     1966
      285     1967                      Check the key count against the current BOUND.
      286     1968
      287     1969                      Store the DA of the granule that this key points to.
      288     1970                 Decrement the available space.  Set the bound and key
      289     1971                 count.  Set SIZEUP to the size of this granule.
      290     1972
      291     1973                      Now move buffer 1 to buffer 0.  The current granule
      292     1974                 becomes the previous granule.
      293     1975        */
      294     1976                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:59   
      295     1977    1   BLDLVL: PROC ALTRET;

   1977  1 000461   200056 741300       BLDLVL       STX1  ! ENDLOOP+4,,AUTO

      296     1978        /* */
      297     1979    2          KEYCNTUP=0;

   1979  1 000462   200022 450100                    STZ     KEYCNTUP,,AUTO

      298     1980    2          KEYTBLSIZE=0;

   1980  1 000463   200023 450100                    STZ     KEYTBLSIZE,,AUTO

      299     1981    2          AVAIL=0;

   1981  1 000464   200016 450100                    STZ     AVAIL,,AUTO

      300     1982
      301     1983    3   LOOP:  DO UNTIL(CURLOW$->FM$GRAN.FLINK = 0);

   1983  1 000465                       LOOP         null
      302     1984    3             LCDA=F$DCB.BFR.DA(0);

   1984  1 000465   200003 470500                    LDP0    JDCB$,,AUTO
         1 000466   000115 236100                    LDQ     77,,PR0
         1 000467   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000470   200024 756100                    STQ     LCDA,,AUTO

      303     1985    4             DO WHILE(KEYCNT = 0);

   1985  1 000471   200021 235100                    LDA     KEYCNT,,AUTO
         1 000472   000536 601000 1                  TNZ     s:1997

      304     1986    4                DA=CURLOW$->FM$GRAN.FLINK;

   1986  1 000473   200014 470500                    LDP0    CURLOW$,,AUTO
         1 000474   000004 235100                    LDA     4,,PR0
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:60   
         1 000475   200013 755100                    STA     DA,,AUTO

      305     1987
      306     1988    4                IF DA = 0 THEN

   1988  1 000476   001007 600000 1                  TZE     s:2054

      307     1989    4                   EXIT LOOP;
      308     1990
      309     1991    4                F$DCB.LVL=LVL-1;

   1991  1 000477   200003 471500                    LDP1    JDCB$,,AUTO
         1 000500   200007 236100                    LDQ     LVL,,AUTO
         1 000501   000001 136007                    SBLQ    1,DL
         1 000502   000036 736000                    QLS     30
         1 000503   100067 676100                    ERQ     55,,PR1
         1 000504   070000 376003                    ANQ     28672,DU
         1 000505   100067 656100                    ERSQ    55,,PR1

      310     1992    4                CALL FMD$REDBUF(CURLOW$, 1, DA, 0, LCDA) ALTRET(ERR);

   1992  1 000506   200024 633500                    EPPR3   LCDA,,AUTO
         1 000507   200076 453500                    STP3    T$+6,,AUTO
         1 000510   000000 236000 2                  LDQ     0
         1 000511   200075 756100                    STQ     T$+5,,AUTO
         1 000512   200013 634500                    EPPR4   DA,,AUTO
         1 000513   200074 454500                    STP4    T$+4,,AUTO
         1 000514   000002 236000 2                  LDQ     2
         1 000515   200073 756100                    STQ     T$+3,,AUTO
         1 000516   200014 635500                    EPPR5   CURLOW$,,AUTO
         1 000517   200072 455500                    STP5    T$+2,,AUTO
         1 000520   200072 630500                    EPPR0   T$+2,,AUTO
         1 000521   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000522   000000 701000 xent               TSX1    FMD$REDBUF
         1 000523   001011 702000 1                  TSX2    ERR

      311     1993    4                KEYCNT=CURLOW$->FM$GRAN.KEYCNT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:61   

   1993  1 000524   200014 470500                    LDP0    CURLOW$,,AUTO
         1 000525   000002 236100                    LDQ     2,,PR0
         1 000526   000777 376007                    ANQ     511,DL
         1 000527   200021 756100                    STQ     KEYCNT,,AUTO

      312     1994    4                LCDA=F$DCB.BFR.DA(1);

   1994  1 000530   200003 471500                    LDP1    JDCB$,,AUTO
         1 000531   100116 236100                    LDQ     78,,PR1
         1 000532   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000533   200024 756100                    STQ     LCDA,,AUTO

      313     1995    4             END;

   1995  1 000534   200021 235100                    LDA     KEYCNT,,AUTO
         1 000535   000473 600000 1                  TZE     s:1986

      314     1996
      315     1997    3             KTPTR$=PINCRW(CURLOW$, CURLOW$->FM$GRAN.FCEX);

   1997  1 000536   200014 470500                    LDP0    CURLOW$,,AUTO
         1 000537   000002 220100                    LDX0    2,,PR0
         1 000540   000000 636010                    EAQ     0,X0
         1 000541   200014 036100                    ADLQ    CURLOW$,,AUTO
         1 000542   200025 756100                    STQ     KTPTR$,,AUTO

      316     1998    3             BOUND=FM$KEYTBL(0);

   1998  1 000543   200025 471500                    LDP1    KTPTR$,,AUTO
         1 000544   100000 236100                    LDQ     0,,PR1
         1 000545   000033 772000                    QRL     27
         1 000546   200026 756100                    STQ     BOUND,,AUTO

      317     1999    3             IF BOUND > 1 THEN

   1999  1 000547   000001 116007                    CMPQ    1,DL
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:62   
         1 000550   000557 604400 1                  TMOZ    s:2002

      318     2000    3                FIRST$=PINCRW(CURLOW$, FM$KEYTBL(1));

   2000  1 000551   100000 221100                    LDX1    0,,PR1
         1 000552   000777 361003                    ANX1    511,DU
         1 000553   000000 636011                    EAQ     0,X1
         1 000554   200014 036100                    ADLQ    CURLOW$,,AUTO
         1 000555   200040 756100                    STQ     FIRST$,,AUTO
         1 000556   000564 710000 1                  TRA     s:2004

      319     2001    3             ELSE
      320     2002    3                FIRST$=PINCRW(CURLOW$, FM$KEYTBL(1)+512);

   2002  1 000557   100000 221100                    LDX1    0,,PR1
         1 000560   000777 361003                    ANX1    511,DU
         1 000561   001000 636011                    EAQ     512,X1
         1 000562   200014 036100                    ADLQ    CURLOW$,,AUTO
         1 000563   200040 756100                    STQ     FIRST$,,AUTO

      321     2003
      322     2004    3             IF KEYCNT < BOUND THEN

   2004  1 000564   200021 236100                    LDQ     KEYCNT,,AUTO
         1 000565   200026 116100                    CMPQ    BOUND,,AUTO
         1 000566   000577 605000 1                  TPL     s:2007

      323     2005    3                LAST$=PINCRW(CURLOW$, FM$KEYTBL(KEYCNT));

   2005  1 000567   000100 101506                    MRL     fill='000'O
         1 000570   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 000571   200072 000002                    ADSC9   T$+2,,AUTO               cn=0,n=2
         1 000572   200072 220100                    LDX0    T$+2,,AUTO
         1 000573   000000 636010                    EAQ     0,X0
         1 000574   200014 036100                    ADLQ    CURLOW$,,AUTO
         1 000575   200030 756100                    STQ     LAST$,,AUTO
         1 000576   000606 710000 1                  TRA     s:2009
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:63   

      324     2006    3             ELSE
      325     2007    3                LAST$=PINCRW(CURLOW$, FM$KEYTBL(KEYCNT)+512);

   2007  1 000577   000100 101506                    MRL     fill='000'O
         1 000600   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 000601   200072 000002                    ADSC9   T$+2,,AUTO               cn=0,n=2
         1 000602   200072 220100                    LDX0    T$+2,,AUTO
         1 000603   001000 636010                    EAQ     512,X0
         1 000604   200014 036100                    ADLQ    CURLOW$,,AUTO
         1 000605   200030 756100                    STQ     LAST$,,AUTO

      326     2008
      327     2009    3             IF PRLAST$ ~= ADDR(NIL) THEN

   2009  1 000606   200017 236100                    LDQ     PRLAST$,,AUTO
         1 000607   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000610   000620 600000 1                  TZE     s:2012

      328     2010    3                CALL MINCHECK(PRLAST$, PRLEN);

   2010  1 000611   200027 633500                    EPPR3   PRLEN,,AUTO
         1 000612   200062 453500                    STP3    @KEY$+1,,AUTO
         1 000613   200017 634500                    EPPR4   PRLAST$,,AUTO
         1 000614   200061 454500                    STP4    T$+2,,AUTO
         1 000615   002520 701000 1                  TSX1    MINCHECK
         1 000616   000000 011000                    NOP     0
         1 000617   000621 710000 1                  TRA     s:2013

      329     2011    3             ELSE
      330     2012    3                PRLEN=0;

   2012  1 000620   200027 450100                    STZ     PRLEN,,AUTO

      331     2013    3             CALL MINCHECK(LAST$, LEN);

   2013  1 000621   200031 630500                    EPPR0   LEN,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:64   
         1 000622   200062 450500                    STP0    @KEY$+1,,AUTO
         1 000623   200030 631500                    EPPR1   LAST$,,AUTO
         1 000624   200061 451500                    STP1    T$+2,,AUTO
         1 000625   002520 701000 1                  TSX1    MINCHECK
         1 000626   000000 011000                    NOP     0

      332     2014
      333     2015    3             IF PRLEN > LEN THEN

   2015  1 000627   200027 236100                    LDQ     PRLEN,,AUTO
         1 000630   200031 116100                    CMPQ    LEN,,AUTO
         1 000631   000633 604400 1                  TMOZ    s:2017

      334     2016    3                LEN=PRLEN;

   2016  1 000632   200031 756100                    STQ     LEN,,AUTO

      335     2017    3             SIZE=(LEN+8)/4;

   2017  1 000633   200031 236100                    LDQ     LEN,,AUTO
         1 000634   000010 036007                    ADLQ    8,DL
         1 000635   000004 506007                    DIV     4,DL
         1 000636   200032 756100                    STQ     SIZE,,AUTO

      336     2018
      337     2019    3             IF SIZE > AVAIL OR KEYCNTUP >= KEYTBLSIZE-1 THEN

   2019  1 000637   200016 116100                    CMPQ    AVAIL,,AUTO
         1 000640   000645 605400 1                  TPNZ    s:2020
         1 000641   200023 236100                    LDQ     KEYTBLSIZE,,AUTO
         1 000642   000001 136007                    SBLQ    1,DL
         1 000643   200022 116100                    CMPQ    KEYCNTUP,,AUTO
         1 000644   000647 605400 1                  TPNZ    s:2022

      338     2020    3                CALL GETSPACE ALTRET(ERR);

   2020  1 000645   001713 701000 1                  TSX1    GETSPACE
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:65   
         1 000646   001011 702000 1                  TSX2    ERR

      339     2021
      340     2022    3             NAVX$->WRD=0;

   2022  1 000647   200033 470500                    LDP0    NAVX$,,AUTO
         1 000650   000000 450100                    STZ     0,,PR0

      341     2023    3             IF ORG = %IREL# THEN

   2023  1 000651   200005 235100                    LDA     ORG,,AUTO
         1 000652   000015 115007                    CMPA    13,DL
         1 000653   000662 601000 1                  TNZ     s:2026

      342     2024    3                NAVX$->FM$IRENT.KLB=LEN;

   2024  1 000654   200031 236100                    LDQ     LEN,,AUTO
         1 000655   000022 736000                    QLS     18
         1 000656   000000 676100                    ERQ     0,,PR0
         1 000657   377777 376003                    ANQ     131071,DU
         1 000660   000000 656100                    ERSQ    0,,PR0
         1 000661   000667 710000 1                  TRA     s:2027

      343     2025    3             ELSE
      344     2026    3                NAVX$->FM$KEYENT.KLB=LEN;

   2026  1 000662   200031 236100                    LDQ     LEN,,AUTO
         1 000663   000033 736000                    QLS     27
         1 000664   000000 676100                    ERQ     0,,PR0
         1 000665   377000 376003                    ANQ     130560,DU
         1 000666   000000 656100                    ERSQ    0,,PR0

      345     2027    3             NAVX$->KEY.TEXT=FIRST$->KEY.TEXT;

   2027  1 000667   200040 471500                    LDP1    FIRST$,,AUTO
         1 000670   200031 720100                    LXL0    LEN,,AUTO
         1 000671   040140 100540                    MLR     fill='040'O
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:66   
         1 000672   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000673   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0

      346     2028    3             KEYCNTUP=KEYCNTUP+1;

   2028  1 000674   200022 054100                    AOS     KEYCNTUP,,AUTO

      347     2029
      348     2030    3             I=POFFW(NAVX$, CURUP$);

   2030  1 000675   200010 236100                    LDQ     CURUP$,,AUTO
         1 000676   000022 772000                    QRL     18
         1 000677   200072 756100                    STQ     T$+2,,AUTO
         1 000700   200033 236100                    LDQ     NAVX$,,AUTO
         1 000701   000022 772000                    QRL     18
         1 000702   200072 136100                    SBLQ    T$+2,,AUTO
         1 000703   200034 756100                    STQ     I,,AUTO

      349     2031    3             IF I > 511 AND KEYCNTUP < BOUNDUP THEN

   2031  1 000704   000777 116007                    CMPQ    511,DL
         1 000705   000712 604400 1                  TMOZ    s:2033
         1 000706   200022 236100                    LDQ     KEYCNTUP,,AUTO
         1 000707   200041 116100                    CMPQ    BOUNDUP,,AUTO
         1 000710   000712 605000 1                  TPL     s:2033

      350     2032    3                BOUNDUP=KEYCNTUP;

   2032  1 000711   200041 756100                    STQ     BOUNDUP,,AUTO

      351     2033    3             KTPTRUP$->FM$KEYTBL(KEYCNTUP)=I;

   2033  1 000712   200042 473500                    LDP3    KTPTRUP$,,AUTO
         1 000713   200022 236100                    LDQ     KEYCNTUP,,AUTO
         1 000714   000106 101500                    MRL     fill='000'O
         1 000715   200034 000004                    ADSC9   I,,AUTO                  cn=0,n=4
         1 000716   300000 000001                    ADSC9   0,Q,PR3                  cn=0,n=1
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:67   

      352     2034
      353     2035    3             NAVX$=PINCRW(NAVX$, SIZE-1);

   2035  1 000717   200032 236100                    LDQ     SIZE,,AUTO
         1 000720   000022 736000                    QLS     18
         1 000721   000001 136003                    SBLQ    1,DU
         1 000722   200033 036100                    ADLQ    NAVX$,,AUTO
         1 000723   200033 756100                    STQ     NAVX$,,AUTO

      354     2036    3             NAVX$->FM$ULSEG.DA=F$DCB.BFR.DA(1);

   2036  1 000724   200003 470500                    LDP0    JDCB$,,AUTO
         1 000725   200033 474500                    LDP4    NAVX$,,AUTO
         1 000726   000116 236100                    LDQ     78,,PR0
         1 000727   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000730   400000 756100                    STQ     0,,PR4

      355     2037    3             NAVX$=PINCRW(NAVX$, 1);

   2037  1 000731   200033 236100                    LDQ     NAVX$,,AUTO
         1 000732   000001 036003                    ADLQ    1,DU
         1 000733   200033 756100                    STQ     NAVX$,,AUTO

      356     2038    3             AVAIL=AVAIL-SIZE;

   2038  1 000734   200016 236100                    LDQ     AVAIL,,AUTO
         1 000735   200032 136100                    SBLQ    SIZE,,AUTO
         1 000736   200016 756100                    STQ     AVAIL,,AUTO

      357     2039    3             FM$GRAN.KEYCNT=KEYCNTUP;

   2039  1 000737   200010 474500                    LDP4    CURUP$,,AUTO
         1 000740   200022 236100                    LDQ     KEYCNTUP,,AUTO
         1 000741   400002 552104                    STBQ    2,'04'O,PR4

      358     2040    3             KTPTRUP$->FM$KEYTBL(0)=BOUNDUP;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:68   

   2040  1 000742   200041 236100                    LDQ     BOUNDUP,,AUTO
         1 000743   000033 736000                    QLS     27
         1 000744   300000 552140                    STBQ    0,'40'O,PR3

      359     2041    3             FM$GRAN.NAVX=POFFW(NAVX$, CURUP$);

   2041  1 000745   200010 236100                    LDQ     CURUP$,,AUTO
         1 000746   000022 772000                    QRL     18
         1 000747   200072 756100                    STQ     T$+2,,AUTO
         1 000750   200033 236100                    LDQ     NAVX$,,AUTO
         1 000751   000022 772000                    QRL     18
         1 000752   200072 136100                    SBLQ    T$+2,,AUTO
         1 000753   000000 620006                    EAX0    0,QL
         1 000754   200010 474500                    LDP4    CURUP$,,AUTO
         1 000755   400001 740100                    STX0    1,,PR4

      360     2042    3             FM$GRAN.AVAIL=AVAIL;

   2042  1 000756   200010 474500                    LDP4    CURUP$,,AUTO
         1 000757   200016 236100                    LDQ     AVAIL,,AUTO
         1 000760   400001 676100                    ERQ     1,,PR4
         1 000761   001777 376007                    ANQ     1023,DL
         1 000762   400001 656100                    ERSQ    1,,PR4

      361     2043    3             SIZEUP=SIZEUP+SIZE;

   2043  1 000763   200035 236100                    LDQ     SIZEUP,,AUTO
         1 000764   200032 036100                    ADLQ    SIZE,,AUTO
         1 000765   200035 756100                    STQ     SIZEUP,,AUTO

      362     2044
      363     2045    3             CALL FMD$FLSHBUF(0);

   2045  1 000766   000000 630400 2                  EPPR0   0
         1 000767   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000770   000000 701000 xent               TSX1    FMD$FLSHBUF
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:69   
         1 000771   000000 011000                    NOP     0

      364     2046    3             F$DCB.BFR(0)=F$DCB.BFR(1);

   2046  1 000772   200003 470500                    LDP0    JDCB$,,AUTO
         1 000773   000116 236100                    LDQ     78,,PR0
         1 000774   000115 756100                    STQ     77,,PR0

      365     2047    3             F$DCB.BFR1(0)=F$DCB.BFR1(1);

   2047  1 000775   000123 236100                    LDQ     83,,PR0
         1 000776   000122 756100                    STQ     82,,PR0

      366     2048    3             F$DCB.BFR(1)='0'B;

   2048  1 000777   000116 450100                    STZ     78,,PR0

      367     2049    3             F$DCB.BFR1(1)='0'B;

   2049  1 001000   000123 450100                    STZ     83,,PR0

      368     2050    3             PRLAST$=LAST$;

   2050  1 001001   200030 236100                    LDQ     LAST$,,AUTO
         1 001002   200017 756100                    STQ     PRLAST$,,AUTO

      369     2051    3             KEYCNT=0;

   2051  1 001003   200021 450100                    STZ     KEYCNT,,AUTO

      370     2052    3          END;  /* WHILE */

   2052  1 001004   200014 471500                    LDP1    CURLOW$,,AUTO
         1 001005   100004 235100                    LDA     4,,PR1
         1 001006   000465 601000 1                  TNZ     LOOP

      371     2053
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:70   
      372     2054    2          RETURN;

   2054  1 001007   200056 221300                    LDX1  ! ENDLOOP+4,,AUTO
         1 001010   000001 702211                    TSX2  ! 1,X1

      373     2055    2   ERR:   ALTRETURN;

   2055  1 001011   200056 221300       ERR          LDX1  ! ENDLOOP+4,,AUTO
         1 001012   000000 702211                    TSX2  ! 0,X1

      374     2056    2          END BLDLVL;
      375     2057               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:71   
      376     2058        /*I*     NAME:     BLDUL
      377     2059                 PURPOSE:  To build the upper level
      378     2060                 DESCRIPTION:
      379     2061                      Initialize some local variables.  If there is an
      380     2062                 old upper level, remember that.  We will try to reuse
      381     2063                 that granule space.
      382     2064
      383     2065                      Get the disk address of the first granule here, and
      384     2066                 read it in.
      385     2067
      386     2068                      Now, loop until we are done.  Build a single level.
      387     2069                 If the number of granules at the level just built is
      388     2070                 greater than 3, and we aren't up to level 4 yet (I wonder
      389     2071                 if a file will ever be built with 3 upper levels), then
      390     2072                 build another level.
      391     2073
      392     2074                      If we have 3 granules for the upper level, then
      393     2075                 set the TDA to the granule in the middle.
      394     2076        */
      395     2077                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:72   
      396     2078    1   BLDUL: PROC ALTRET;

   2078  1 001013   200054 741300       BLDUL        STX1  ! ENDLOOP+2,,AUTO

      397     2079        /* */
      398     2080    2          TDA=0;

   2080  1 001014   200006 450100                    STZ     TDA,,AUTO

      399     2081    2          LVL=1;

   2081  1 001015   000001 235007                    LDA     1,DL
         1 001016   200007 755100                    STA     LVL,,AUTO

      400     2082    2          TEMPTDA=0;

   2082  1 001017   200020 450100                    STZ     TEMPTDA,,AUTO

      401     2083    2          CURUP$=ADDR(NIL);

   2083  1 001020   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001021   200010 756100                    STQ     CURUP$,,AUTO

      402     2084    2          F$DCB.GTYP=FMGTFILE;

   2084  1 001022   200003 470500                    LDP0    JDCB$,,AUTO
         1 001023   000064 236100                    LDQ     52,,PR0
         1 001024   000003 376000 2                  ANQ     3
         1 001025   030000 276003                    ORQ     12288,DU
         1 001026   000064 756100                    STQ     52,,PR0

      403     2085    2          IF F$DCB.TDALVL > 0 THEN

   2085  1 001027   000067 236100                    LDQ     55,,PR0
         1 001030   700000 316003                    CANQ    -32768,DU
         1 001031   001036 600000 1                  TZE     s:2088

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:73   
      404     2086    2             OLDTDA=F$DCB.TDA;

   2086  1 001032   000070 236100                    LDQ     56,,PR0
         1 001033   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001034   200011 756100                    STQ     OLDTDA,,AUTO
         1 001035   001037 710000 1                  TRA     s:2090

      405     2087    2          ELSE
      406     2088    2             OLDTDA=0;

   2088  1 001036   200011 450100                    STZ     OLDTDA,,AUTO

      407     2089
      408     2090    2          IF OLDTDA ~= 0 THEN

   2090  1 001037   200011 236100                    LDQ     OLDTDA,,AUTO
         1 001040   001043 600000 1                  TZE     s:2093

      409     2091    2             CALL INITUL;

   2091  1 001041   002354 701000 1                  TSX1    INITUL
         1 001042   000000 011000                    NOP     0

      410     2092
      411     2093    2          F$DCB.LVL=0;

   2093  1 001043   200003 470500                    LDP0    JDCB$,,AUTO
         1 001044   000004 236000 2                  LDQ     4
         1 001045   000067 356100                    ANSQ    55,,PR0

      412     2094    2          IF ALTKEY$ ~= ADDR(NIL) THEN

   2094  1 001046   200012 236100                    LDQ     ALTKEY$,,AUTO
         1 001047   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001050   001073 600000 1                  TZE     s:2102

      413     2095    3             DO;   /* ALTKEYS */
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:74   

      414     2096    3             IF F$DCB.ORG = %INDEXED# THEN

   2096  1 001051   000032 236100                    LDQ     26,,PR0
         1 001052   777000 376003                    ANQ     -512,DU
         1 001053   006000 116003                    CMPQ    3072,DU
         1 001054   001064 601000 1                  TNZ     s:2099

      415     2097    3                DA=ALTKEYS.K.FDA(INDEX#);

   2097  1 001055   200036 236100                    LDQ     INDEX#,,AUTO
         1 001056   000006 402007                    MPY     6,DL
         1 001057   200012 471500                    LDP1    ALTKEY$,,AUTO
         1 001060   100001 236106                    LDQ     1,QL,PR1
         1 001061   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001062   200013 756100                    STQ     DA,,AUTO
         1 001063   001075 710000 1                  TRA     s:2103

      416     2098    3             ELSE
      417     2099    3                DA=IRKEYS.K.FDA(INDEX#);

   2099  1 001064   200036 236100                    LDQ     INDEX#,,AUTO
         1 001065   000007 402007                    MPY     7,DL
         1 001066   200012 471500                    LDP1    ALTKEY$,,AUTO
         1 001067   100007 236106                    LDQ     7,QL,PR1
         1 001070   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001071   200013 756100                    STQ     DA,,AUTO

      418     2100    3             END;  /* ALTKEYS */

   2100  1 001072   001075 710000 1                  TRA     s:2103

      419     2101    2          ELSE
      420     2102    2             DA=FM_FRZERO;

   2102  1 001073   000000 235000 xsym               LDA     FM_FRZERO
         1 001074   200013 755100                    STA     DA,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:75   

      421     2103    2          IF DA = 0 THEN

   2103  1 001075   200013 235100                    LDA     DA,,AUTO
         1 001076   001211 600000 1                  TZE     DONE

      422     2104    2             GOTO DONE;
      423     2105    2          CALL FMD$REDBUF(CURLOW$, 0, DA, 0, 0) ALTRET(ERR);

   2105  1 001077   000000 236000 2                  LDQ     0
         1 001100   200076 756100                    STQ     T$+6,,AUTO
         1 001101   200075 756100                    STQ     T$+5,,AUTO
         1 001102   200013 631500                    EPPR1   DA,,AUTO
         1 001103   200074 451500                    STP1    T$+4,,AUTO
         1 001104   200073 756100                    STQ     T$+3,,AUTO
         1 001105   200014 633500                    EPPR3   CURLOW$,,AUTO
         1 001106   200072 453500                    STP3    T$+2,,AUTO
         1 001107   200072 630500                    EPPR0   T$+2,,AUTO
         1 001110   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001111   000000 701000 xent               TSX1    FMD$REDBUF
         1 001112   001231 702000 1                  TSX2    ERR

      424     2106
      425     2107    2          KEYCNT=0;

   2107  1 001113   200021 450100                    STZ     KEYCNT,,AUTO

      426     2108    2          NGRANS=0;

   2108  1 001114   200015 450100                    STZ     NGRANS,,AUTO

      427     2109    2          AVAIL=0;

   2109  1 001115   200016 450100                    STZ     AVAIL,,AUTO

      428     2110    2          PRLAST$=ADDR(NIL);

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:76   
   2110  1 001116   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001117   200017 756100                    STQ     PRLAST$,,AUTO

      429     2111
      430     2112    3   LOOP:  DO WHILE('1'B);

   2112  1 001120                       LOOP         null
      431     2113    3             CALL BLDLVL ALTRET(ERR);

   2113  1 001120   000461 701000 1                  TSX1    BLDLVL
         1 001121   001231 702000 1                  TSX2    ERR

      432     2114
      433     2115    3             CALL FMD$FLSHBUF(0);

   2115  1 001122   000000 630400 2                  EPPR0   0
         1 001123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001124   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001125   000000 011000                    NOP     0

      434     2116    3             CALL FMD$FLSHBUF(1);

   2116  1 001126   000002 630400 2                  EPPR0   2
         1 001127   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001130   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001131   000000 011000                    NOP     0

      435     2117
      436     2118    3             IF NGRANS > 3 AND LVL < 4 THEN

   2118  1 001132   200015 235100                    LDA     NGRANS,,AUTO
         1 001133   000003 115007                    CMPA    3,DL
         1 001134   001204 604400 1                  TMOZ    s:2134
         1 001135   200007 236100                    LDQ     LVL,,AUTO
         1 001136   000004 116007                    CMPQ    4,DL
         1 001137   001204 605000 1                  TPL     s:2134

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:77   
      437     2119    4                DO;   /* NEED ANOTHER LEVEL */

      438     2120    4                CALL FMD$FLSHBUF(3);

   2120  1 001140   000005 630400 2                  EPPR0   5
         1 001141   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001142   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001143   000000 011000                    NOP     0

      439     2121    4                CURUP$=ADDR(NIL);

   2121  1 001144   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001145   200010 756100                    STQ     CURUP$,,AUTO

      440     2122    4                LVL=LVL+1;

   2122  1 001146   200007 054100                    AOS     LVL,,AUTO

      441     2123    4                F$DCB.LVL=LVL-1;

   2123  1 001147   200003 470500                    LDP0    JDCB$,,AUTO
         1 001150   200007 236100                    LDQ     LVL,,AUTO
         1 001151   000001 136007                    SBLQ    1,DL
         1 001152   000036 736000                    QLS     30
         1 001153   000067 676100                    ERQ     55,,PR0
         1 001154   070000 376003                    ANQ     28672,DU
         1 001155   000067 656100                    ERSQ    55,,PR0

      442     2124    4                CALL FMD$REDBUF(CURLOW$, 1, THISLVLFDA, 0, 0) ALTRET(ERR);

   2124  1 001156   000000 236000 2                  LDQ     0
         1 001157   200076 756100                    STQ     T$+6,,AUTO
         1 001160   200075 756100                    STQ     T$+5,,AUTO
         1 001161   200037 631500                    EPPR1   THISLVLFDA,,AUTO
         1 001162   200074 451500                    STP1    T$+4,,AUTO
         1 001163   000002 236000 2                  LDQ     2
         1 001164   200073 756100                    STQ     T$+3,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:78   
         1 001165   200014 633500                    EPPR3   CURLOW$,,AUTO
         1 001166   200072 453500                    STP3    T$+2,,AUTO
         1 001167   200072 630500                    EPPR0   T$+2,,AUTO
         1 001170   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001171   000000 701000 xent               TSX1    FMD$REDBUF
         1 001172   001231 702000 1                  TSX2    ERR

      443     2125    4                AVAIL=0;

   2125  1 001173   200016 450100                    STZ     AVAIL,,AUTO

      444     2126    4                NGRANS=0;

   2126  1 001174   200015 450100                    STZ     NGRANS,,AUTO

      445     2127    4                PRLAST$=ADDR(NIL);

   2127  1 001175   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001176   200017 756100                    STQ     PRLAST$,,AUTO

      446     2128    4                KEYCNT=CURLOW$->FM$GRAN.KEYCNT;

   2128  1 001177   200014 470500                    LDP0    CURLOW$,,AUTO
         1 001200   000002 236100                    LDQ     2,,PR0
         1 001201   000777 376007                    ANQ     511,DL
         1 001202   200021 756100                    STQ     KEYCNT,,AUTO

      447     2129    4                END;  /* NEED ANOTHER LEVEL */

   2129  1 001203   001120 710000 1                  TRA     LOOP

      448     2130    3             ELSE
      449     2131    3                EXIT LOOP;
      450     2132    3          END;  /* UNTIL */

      451     2133
      452     2134    2          IF NGRANS = 3 THEN
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:79   

   2134  1 001204   000003 115007                    CMPA    3,DL
         1 001205   001211 601000 1                  TNZ     DONE

      453     2135    2             TEMPTDA=FM$GRAN.BLINK;

   2135  1 001206   200010 470500                    LDP0    CURUP$,,AUTO
         1 001207   000003 235100                    LDA     3,,PR0
         1 001210   200020 755100                    STA     TEMPTDA,,AUTO

      454     2136
      455     2137    2   DONE:  CALL CLEANUP;

   2137  1 001211   001233 701000 1     DONE         TSX1    CLEANUP
         1 001212   000000 011000                    NOP     0

      456     2138
      457     2139    2          F$DCB.TDA=TEMPTDA;

   2139  1 001213   200003 470500                    LDP0    JDCB$,,AUTO
         1 001214   200020 236100                    LDQ     TEMPTDA,,AUTO
         1 001215   000070 552134                    STBQ    56,'34'O,PR0

      458     2140    2          IF TEMPTDA = 0 THEN

   2140  1 001216   001222 601000 1                  TNZ     s:2143

      459     2141    2             F$DCB.TDALVL=0;

   2141  1 001217   000006 236000 2                  LDQ     6
         1 001220   000067 356100                    ANSQ    55,,PR0
         1 001221   001227 710000 1                  TRA     s:2144

      460     2142    2          ELSE
      461     2143    2             F$DCB.TDALVL=LVL;

   2143  1 001222   200007 236100                    LDQ     LVL,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:80   
         1 001223   000041 736000                    QLS     33
         1 001224   000067 676100                    ERQ     55,,PR0
         1 001225   700000 376003                    ANQ     -32768,DU
         1 001226   000067 656100                    ERSQ    55,,PR0

      462     2144    2          RETURN;

   2144  1 001227   200054 221300                    LDX1  ! ENDLOOP+2,,AUTO
         1 001230   000001 702211                    TSX2  ! 1,X1

      463     2145    2   ERR:   ALTRETURN;

   2145  1 001231   200054 221300       ERR          LDX1  ! ENDLOOP+2,,AUTO
         1 001232   000000 702211                    TSX2  ! 0,X1

      464     2146    2          END BLDUL;
      465     2147               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:81   
      466     2148        /*I*     NAME:     CLEANUP
      467     2149                 PURPOSE:  To clean up after building an upper level
      468     2150                 DESCRIPTION:
      469     2151                      If CURUP$ is nil, then we never built an upper
      470     2152                 level for this file.  If there was an upper level, then
      471     2153                 wipe out the granule, so it isn't used as an upper level.
      472     2154
      473     2155                      If we did build an upper level, then set the ENDLVL
      474     2156                 bit to signify the end of this level.  Then get any old
      475     2157                 granules and tack them on the end.  This way we may be
      476     2158                 able to use them later.
      477     2159        */
      478     2160                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:82   
      479     2161    1   CLEANUP: PROC;

   2161  1 001233   200056 741300       CLEANUP      STX1  ! ENDLOOP+4,,AUTO

      480     2162        /* */
      481     2163    2          IF CURUP$ = ADDR(NIL) THEN

   2163  1 001234   200010 236100                    LDQ     CURUP$,,AUTO
         1 001235   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001236   001351 601000 1                  TNZ     s:2189

      482     2164    3             DO;   /* NO UPPER LEVEL EVER BUILT */

      483     2165    3             CALL GETGRAN(%ULONLY) WHENALTRETURN

   2165  1 001237   000002 236000 2                  LDQ     2
         1 001240   200067 756100                    STQ     LEN2+3,,AUTO
         1 001241   001516 701000 1                  TSX1    GETGRAN
         1 001242   001244 702000 1                  TSX2    s:2167
         1 001243   001247 710000 1                  TRA     s:2170

      484     2166    4                DO;

      485     2167    4                B$JIT.ERR='0'B;

   2167  1 001244   000000 470400 xsym               LDP0    B$JIT$
         1 001245   000012 450100                    STZ     10,,PR0

      486     2168    4                GOTO DONE;

   2168  1 001246   001501 710000 1                  TRA     DONE

      487     2169    4                END;
      488     2170    3             CALL FMD$FLSHBUF(3);

   2170  1 001247   000005 630400 2                  EPPR0   5
         1 001250   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:83   
         1 001251   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001252   000000 011000                    NOP     0

      489     2171    3             CALL FMD$GETBUF(3, 1, CURUP$);

   2171  1 001253   200010 630500                    EPPR0   CURUP$,,AUTO
         1 001254   200074 450500                    STP0    T$+4,,AUTO
         1 001255   000010 237000 2                  LDAQ    8
         1 001256   200072 757100                    STAQ    T$+2,,AUTO
         1 001257   200072 630500                    EPPR0   T$+2,,AUTO
         1 001260   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001261   000000 701000 xent               TSX1    FMD$GETBUF
         1 001262   000000 011000                    NOP     0

      490     2172    3             FM$GRAN=FM_GRAN;

   2172  1 001263   200010 470500                    LDP0    CURUP$,,AUTO
         1 001264   000100 100400                    MLR     fill='000'O
         1 001265   000000 000024 0                  ADSC9   FM_GRAN                  cn=0,n=20
         1 001266   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

      491     2173    3             FM$GRAN.STAMP.HASH=F$DCB.HASH;

   2173  1 001267   200003 470500                    LDP0    JDCB$,,AUTO
         1 001270   200010 471500                    LDP1    CURUP$,,AUTO
         1 001271   000073 236100                    LDQ     59,,PR0
         1 001272   100000 552170                    STBQ    0,'70'O,PR1

      492     2174    3             FM$GRAN.STAMP.GMOD=DA;

   2174  1 001273   200010 471500                    LDP1    CURUP$,,AUTO
         1 001274   200013 236100                    LDQ     DA,,AUTO
         1 001275   100000 552104                    STBQ    0,'04'O,PR1

      493     2175    3             FM$GRAN.ORG=ORG;

   2175  1 001276   200010 471500                    LDP1    CURUP$,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:84   
         1 001277   200005 236100                    LDQ     ORG,,AUTO
         1 001300   000012 736000                    QLS     10
         1 001301   100001 676100                    ERQ     1,,PR1
         1 001302   036000 376007                    ANQ     15360,DL
         1 001303   100001 656100                    ERSQ    1,,PR1

      494     2176    3             FM$GRAN.LVL=1;

   2176  1 001304   200010 471500                    LDP1    CURUP$,,AUTO
         1 001305   100001 236100                    LDQ     1,,PR1
         1 001306   000007 376000 2                  ANQ     7
         1 001307   040000 276007                    ORQ     16384,DL
         1 001310   100001 756100                    STQ     1,,PR1

      495     2177    3             FM$GRAN.FCEX=SIZEW(FM$GRAN);

   2177  1 001311   000005 220003                    LDX0    5,DU
         1 001312   200010 471500                    LDP1    CURUP$,,AUTO
         1 001313   100002 740100                    STX0    2,,PR1

      496     2178    3             FM$GRAN.NAVX=SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL);

   2178  1 001314   000113 221003                    LDX1    75,DU
         1 001315   200010 471500                    LDP1    CURUP$,,AUTO
         1 001316   100001 741100                    STX1    1,,PR1

      497     2179    3             FM$GRAN.AVAIL=1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL);

   2179  1 001317   200010 471500                    LDP1    CURUP$,,AUTO
         1 001320   100001 236100                    LDQ     1,,PR1
         1 001321   000012 376000 2                  ANQ     10
         1 001322   001665 276007                    ORQ     949,DL
         1 001323   100001 756100                    STQ     1,,PR1

      498     2180    3             KTPTR$=PINCRW(CURUP$, SIZEW(FM$GRAN));

   2180  1 001324   200010 236100                    LDQ     CURUP$,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:85   
         1 001325   000005 036003                    ADLQ    5,DU
         1 001326   200025 756100                    STQ     KTPTR$,,AUTO

      499     2181    3             FM$KEYTBL=INITKEYTBL;

   2181  1 001327   200025 471500                    LDP1    KTPTR$,,AUTO
         1 001330   000100 100400                    MLR     fill='000'O
         1 001331   000005 000001 0                  ADSC9   INITKEYTBL               cn=0,n=1
         1 001332   100000 000430                    ADSC9   0,,PR1                   cn=0,n=280

      500     2182    3             F$DCB.BFR.DA(3)=DA;

   2182  1 001333   200013 236100                    LDQ     DA,,AUTO
         1 001334   000120 552134                    STBQ    80,'34'O,PR0

      501     2183    3             CALL FMC$CLR1(DA);

   2183  1 001335   200013 633500                    EPPR3   DA,,AUTO
         1 001336   200072 453500                    STP3    T$+2,,AUTO
         1 001337   200072 630500                    EPPR0   T$+2,,AUTO
         1 001340   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001341   000000 701000 xent               TSX1    FMC$CLR1
         1 001342   000000 011000                    NOP     0

      502     2184    3             F$DCB.BFR.BUFUP(3)='1'B;

   2184  1 001343   200003 470500                    LDP0    JDCB$,,AUTO
         1 001344   400000 236003                    LDQ     -131072,DU
         1 001345   000120 256100                    ORSQ    80,,PR0

      503     2185    3             F$DCB.BFR.SCRUB(3)='1'B;

   2185  1 001346   200000 236003                    LDQ     65536,DU
         1 001347   000120 256100                    ORSQ    80,,PR0

      504     2186    3             END;  /* NO UPPER LEVEL EVER BUILT */

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:86   
   2186  1 001350   001501 710000 1                  TRA     DONE

      505     2187    2          ELSE
      506     2188    3             DO;   /* Link on any left-over grans */

      507     2189    3             FM$GRAN.ENDLVL='1'B;

   2189  1 001351   200010 470500                    LDP0    CURUP$,,AUTO
         1 001352   400000 236007                    LDQ     -131072,DL
         1 001353   000002 256100                    ORSQ    2,,PR0

      508     2190    4             DO UNTIL(DA = 0);

      509     2191    4                CALL GETGRAN(%ULONLY) WHENALTRETURN

   2191  1 001354   000002 236000 2                  LDQ     2
         1 001355   200067 756100                    STQ     LEN2+3,,AUTO
         1 001356   001516 701000 1                  TSX1    GETGRAN
         1 001357   001361 702000 1                  TSX2    s:2193
         1 001360   001363 710000 1                  TRA     s:2195

      510     2192    5                   DO;

      511     2193    5                   B$JIT.ERR='0'B;

   2193  1 001361   000000 470400 xsym               LDP0    B$JIT$
         1 001362   000012 450100                    STZ     10,,PR0

      512     2194    5                   END;

      513     2195    4                FM$GRAN.FLINK=DA;

   2195  1 001363   200013 235100                    LDA     DA,,AUTO
         1 001364   200010 470500                    LDP0    CURUP$,,AUTO
         1 001365   000004 755100                    STA     4,,PR0

      514     2196    4                PREVDA=F$DCB.BFR.DA(3);
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:87   

   2196  1 001366   200003 470500                    LDP0    JDCB$,,AUTO
         1 001367   000120 236100                    LDQ     80,,PR0
         1 001370   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001371   200045 756100                    STQ     PREVDA,,AUTO

      515     2197    4                CALL FMD$WRTBUF(3);

   2197  1 001372   000005 630400 2                  EPPR0   5
         1 001373   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001374   000000 701000 xent               TSX1    FMD$WRTBUF
         1 001375   000000 011000                    NOP     0

      516     2198    4                IF DA ~= 0 THEN

   2198  1 001376   200013 235100                    LDA     DA,,AUTO
         1 001377   001477 600000 1                  TZE     s:2216

      517     2199    5                   DO;   /* Got an old gran */

      518     2200    5                   CALL FMD$GETBUF(3, 1, CURUP$);

   2200  1 001400   200010 630500                    EPPR0   CURUP$,,AUTO
         1 001401   200074 450500                    STP0    T$+4,,AUTO
         1 001402   000010 237000 2                  LDAQ    8
         1 001403   200072 757100                    STAQ    T$+2,,AUTO
         1 001404   200072 630500                    EPPR0   T$+2,,AUTO
         1 001405   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001406   000000 701000 xent               TSX1    FMD$GETBUF
         1 001407   000000 011000                    NOP     0

      519     2201    5                   FM$GRAN=FM_GRAN;

   2201  1 001410   200010 470500                    LDP0    CURUP$,,AUTO
         1 001411   000100 100400                    MLR     fill='000'O
         1 001412   000000 000024 0                  ADSC9   FM_GRAN                  cn=0,n=20
         1 001413   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:88   

      520     2202    5                   FM$GRAN.STAMP.HASH=F$DCB.HASH;

   2202  1 001414   200003 470500                    LDP0    JDCB$,,AUTO
         1 001415   200010 471500                    LDP1    CURUP$,,AUTO
         1 001416   000073 236100                    LDQ     59,,PR0
         1 001417   100000 552170                    STBQ    0,'70'O,PR1

      521     2203    5                   FM$GRAN.STAMP.GMOD=DA;

   2203  1 001420   200010 471500                    LDP1    CURUP$,,AUTO
         1 001421   200013 236100                    LDQ     DA,,AUTO
         1 001422   100000 552104                    STBQ    0,'04'O,PR1

      522     2204    5                   FM$GRAN.ORG=ORG;

   2204  1 001423   200010 471500                    LDP1    CURUP$,,AUTO
         1 001424   200005 236100                    LDQ     ORG,,AUTO
         1 001425   000012 736000                    QLS     10
         1 001426   100001 676100                    ERQ     1,,PR1
         1 001427   036000 376007                    ANQ     15360,DL
         1 001430   100001 656100                    ERSQ    1,,PR1

      523     2205    5                   FM$GRAN.LVL=LVL;

   2205  1 001431   200010 471500                    LDP1    CURUP$,,AUTO
         1 001432   200007 236100                    LDQ     LVL,,AUTO
         1 001433   000016 736000                    QLS     14
         1 001434   100001 676100                    ERQ     1,,PR1
         1 001435   340000 376007                    ANQ     114688,DL
         1 001436   100001 656100                    ERSQ    1,,PR1

      524     2206    5                   FM$GRAN.BLINK=PREVDA;

   2206  1 001437   200045 235100                    LDA     PREVDA,,AUTO
         1 001440   200010 471500                    LDP1    CURUP$,,AUTO
         1 001441   100003 755100                    STA     3,,PR1
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:89   

      525     2207    5                   FM$GRAN.NAVX=SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL);

   2207  1 001442   000113 220003                    LDX0    75,DU
         1 001443   200010 471500                    LDP1    CURUP$,,AUTO
         1 001444   100001 740100                    STX0    1,,PR1

      526     2208    5                   FM$GRAN.AVAIL=1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL);

   2208  1 001445   200010 471500                    LDP1    CURUP$,,AUTO
         1 001446   100001 236100                    LDQ     1,,PR1
         1 001447   000012 376000 2                  ANQ     10
         1 001450   001665 276007                    ORQ     949,DL
         1 001451   100001 756100                    STQ     1,,PR1

      527     2209    5                   FM$GRAN.FCEX=SIZEW(FM$GRAN);

   2209  1 001452   000005 221003                    LDX1    5,DU
         1 001453   200010 471500                    LDP1    CURUP$,,AUTO
         1 001454   100002 741100                    STX1    2,,PR1

      528     2210    5                   KTPTR$=PINCRW(CURUP$, SIZEW(FM$GRAN));

   2210  1 001455   200010 236100                    LDQ     CURUP$,,AUTO
         1 001456   000005 036003                    ADLQ    5,DU
         1 001457   200025 756100                    STQ     KTPTR$,,AUTO

      529     2211    5                   FM$KEYTBL=INITKEYTBL;

   2211  1 001460   200025 471500                    LDP1    KTPTR$,,AUTO
         1 001461   000100 100400                    MLR     fill='000'O
         1 001462   000005 000001 0                  ADSC9   INITKEYTBL               cn=0,n=1
         1 001463   100000 000430                    ADSC9   0,,PR1                   cn=0,n=280

      530     2212    5                   F$DCB.BFR.DA(3)=DA;

   2212  1 001464   200013 236100                    LDQ     DA,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:90   
         1 001465   000120 552134                    STBQ    80,'34'O,PR0

      531     2213    5                   CALL FMC$CLR1(DA);

   2213  1 001466   200013 633500                    EPPR3   DA,,AUTO
         1 001467   200072 453500                    STP3    T$+2,,AUTO
         1 001470   200072 630500                    EPPR0   T$+2,,AUTO
         1 001471   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001472   000000 701000 xent               TSX1    FMC$CLR1
         1 001473   000000 011000                    NOP     0

      532     2214    5                   F$DCB.BFR.SCRUB(3)='1'B;

   2214  1 001474   200003 470500                    LDP0    JDCB$,,AUTO
         1 001475   200000 236003                    LDQ     65536,DU
         1 001476   000120 256100                    ORSQ    80,,PR0

      533     2215    5                   END;  /* Got an old gran */

      534     2216    4             END;  /* UNTIL */

   2216  1 001477   200013 235100                    LDA     DA,,AUTO
         1 001500   001354 601000 1                  TNZ     s:2191

      535     2217    3             END;  /* Link on any left-over grans */

      536     2218
      537     2219    3   DONE:  DO I=0 TO 4;

   2219  1 001501   200034 450100       DONE         STZ     I,,AUTO

      538     2220    3             CALL FMD$FLSHBUF(I);

   2220  1 001502   200034 630500                    EPPR0   I,,AUTO
         1 001503   200072 450500                    STP0    T$+2,,AUTO
         1 001504   200072 630500                    EPPR0   T$+2,,AUTO
         1 001505   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:91   
         1 001506   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001507   000000 011000                    NOP     0

      539     2221    3          END;

   2221  1 001510   200034 054100                    AOS     I,,AUTO
         1 001511   200034 235100                    LDA     I,,AUTO
         1 001512   000004 115007                    CMPA    4,DL
         1 001513   001502 604400 1                  TMOZ    s:2220

      540     2222
      541     2223    2          RETURN;

   2223  1 001514   200056 221300                    LDX1  ! ENDLOOP+4,,AUTO
         1 001515   000001 702211                    TSX2  ! 1,X1

      542     2224    2          END CLEANUP;
      543     2225               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:92   
      544     2226        /*I*     NAME:     GETGRAN
      545     2227                 PURPOSE:  To get a granule for the upper level
      546     2228                 DESCRIPTION:
      547     2229                      If there is an old upper level, then try to get
      548     2230                 space from that first.  OLDTDA is actually the next
      549     2231                 available granule to use.  Set OLDTDA to the flink
      550     2232                 at this level, and read in the granule.  If there
      551     2233                 isn't a flink, then try to go to the next lower level.
      552     2234
      553     2235                      OLDNXTFDA is the first entry in the first granule
      554     2236                 of the previous level.  This will be the FDA of the
      555     2237                 next lower level.  Read in that granule.  Get the next
      556     2238                 OLDNXTFDA.
      557     2239
      558     2240                      If there isn't any old space to use anymore, then
      559     2241                 try to get a new granule.  Only do that if it's okay.
      560     2242        */
      561     2243                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:93   
      562     2244    1   GETGRAN: PROC(FLAG) ALTRET;

   2244  1 001516   200066 741300       GETGRAN      STX1  ! LEN2+2,,AUTO

      563     2245    2          DCL FLAG SBIN;
      564     2246    2          DCL T$ PTR;
      565     2247        /* */
      566     2248    2          IF OLDTDA ~= 0 THEN

   2248  1 001517   200011 235100                    LDA     OLDTDA,,AUTO
         1 001520   001666 600000 1                  TZE     ERR

      567     2249    3             DO;   /* GET FROM OLD TDA */

      568     2250    3             DA=OLDTDA;

   2250  1 001521   200013 755100                    STA     DA,,AUTO

      569     2251    3             OLDTDA=OLDLVL$->FM$GRAN.FLINK;

   2251  1 001522   200043 470500                    LDP0    OLDLVL$,,AUTO
         1 001523   000004 235100                    LDA     4,,PR0
         1 001524   200011 755100                    STA     OLDTDA,,AUTO

      570     2252    3             IF OLDTDA ~= 0 THEN

   2252  1 001525   001553 600000 1                  TZE     s:2259

      571     2253    4                DO;   /* READ GRAN */

      572     2254    4                F$DCB.LVL=OLDLVL$->FM$GRAN.LVL;

   2254  1 001526   200003 471500                    LDP1    JDCB$,,AUTO
         1 001527   000001 236100                    LDQ     1,,PR0
         1 001530   000020 736000                    QLS     16
         1 001531   100067 676100                    ERQ     55,,PR1
         1 001532   070000 376003                    ANQ     28672,DU
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:94   
         1 001533   100067 656100                    ERSQ    55,,PR1

      573     2255    4                CALL FMD$REDBUF(OLDLVL$, 4, OLDTDA, 0, DA) ALTRET(ERR);

   2255  1 001534   200013 633500                    EPPR3   DA,,AUTO
         1 001535   200076 453500                    STP3    T$+6,,AUTO
         1 001536   000000 236000 2                  LDQ     0
         1 001537   200075 756100                    STQ     T$+5,,AUTO
         1 001540   200011 634500                    EPPR4   OLDTDA,,AUTO
         1 001541   200074 454500                    STP4    T$+4,,AUTO
         1 001542   000013 236000 2                  LDQ     11
         1 001543   200073 756100                    STQ     T$+3,,AUTO
         1 001544   200043 635500                    EPPR5   OLDLVL$,,AUTO
         1 001545   200072 455500                    STP5    T$+2,,AUTO
         1 001546   200072 630500                    EPPR0   T$+2,,AUTO
         1 001547   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001550   000000 701000 xent               TSX1    FMD$REDBUF
         1 001551   001666 702000 1                  TSX2    ERR

      574     2256    4                END;  /* READ GRAN */

   2256  1 001552   001664 710000 1                  TRA     s:2283

      575     2257    3             ELSE
      576     2258    4                DO;   /* GET FROM NEXT LEVEL */

      577     2259    4                IF OLDLVL$->FM$GRAN.LVL = 1 THEN

   2259  1 001553   000001 236100                    LDQ     1,,PR0
         1 001554   340000 376007                    ANQ     114688,DL
         1 001555   040000 116007                    CMPQ    16384,DL
         1 001556   001565 601000 1                  TNZ     s:2265

      578     2260    5                   DO;   /* NO MORE */

      579     2261    5                   CALL FMD$FLSHBUF(4);

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:95   
   2261  1 001557   000013 630400 2                  EPPR0   11
         1 001560   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001561   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001562   000000 011000                    NOP     0

      580     2262    5                   RETURN;

   2262  1 001563   200066 221300                    LDX1  ! LEN2+2,,AUTO
         1 001564   000001 702211                    TSX2  ! 1,X1

      581     2263    5                   END;  /* NO MORE */
      582     2264
      583     2265    4                OLDTDA=OLDNXTFDA;

   2265  1 001565   200044 235100                    LDA     OLDNXTFDA,,AUTO
         1 001566   200011 755100                    STA     OLDTDA,,AUTO

      584     2266    4                F$DCB.LVL=OLDLVL$->FM$GRAN.LVL-1;

   2266  1 001567   200003 471500                    LDP1    JDCB$,,AUTO
         1 001570   000001 236100                    LDQ     1,,PR0
         1 001571   000016 772000                    QRL     14
         1 001572   000007 376007                    ANQ     7,DL
         1 001573   000001 136007                    SBLQ    1,DL
         1 001574   000036 736000                    QLS     30
         1 001575   100067 676100                    ERQ     55,,PR1
         1 001576   070000 376003                    ANQ     28672,DU
         1 001577   100067 656100                    ERSQ    55,,PR1

      585     2267    4                CALL FMD$REDBUF(OLDLVL$, 4, OLDTDA, 0, 0) ALTRET(ERR);

   2267  1 001600   000000 236000 2                  LDQ     0
         1 001601   200076 756100                    STQ     T$+6,,AUTO
         1 001602   200075 756100                    STQ     T$+5,,AUTO
         1 001603   200011 633500                    EPPR3   OLDTDA,,AUTO
         1 001604   200074 453500                    STP3    T$+4,,AUTO
         1 001605   000013 236000 2                  LDQ     11
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:96   
         1 001606   200073 756100                    STQ     T$+3,,AUTO
         1 001607   200043 634500                    EPPR4   OLDLVL$,,AUTO
         1 001610   200072 454500                    STP4    T$+2,,AUTO
         1 001611   200072 630500                    EPPR0   T$+2,,AUTO
         1 001612   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001613   000000 701000 xent               TSX1    FMD$REDBUF
         1 001614   001666 702000 1                  TSX2    ERR

      586     2268
      587     2269    4                IF OLDLVL$->FM$GRAN.KEYCNT ~= 0 THEN

   2269  1 001615   200043 470500                    LDP0    OLDLVL$,,AUTO
         1 001616   000002 236100                    LDQ     2,,PR0
         1 001617   000777 316007                    CANQ    511,DL
         1 001620   001663 600000 1                  TZE     s:2281

      588     2270    5                   DO;   /* LOWER LEVEL */

      589     2271    5                   T$=PINCRW(OLDLVL$, OLDLVL$->FM$GRAN.FCEX);

   2271  1 001621   000002 220100                    LDX0    2,,PR0
         1 001622   000000 636010                    EAQ     0,X0
         1 001623   200043 036100                    ADLQ    OLDLVL$,,AUTO
         1 001624   200070 756100                    STQ     T$,,AUTO

      590     2272    5                   T$=PINCRW(OLDLVL$, T$->FM$KEYTBL(1));

   2272  1 001625   200070 471500                    LDP1    T$,,AUTO
         1 001626   100000 221100                    LDX1    0,,PR1
         1 001627   000777 361003                    ANX1    511,DU
         1 001630   000000 636011                    EAQ     0,X1
         1 001631   200043 036100                    ADLQ    OLDLVL$,,AUTO
         1 001632   200070 756100                    STQ     T$,,AUTO

      591     2273    5                   IF ORG = %IREL# THEN

   2273  1 001633   200005 235100                    LDA     ORG,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:97   
         1 001634   000015 115007                    CMPA    13,DL
         1 001635   001645 601000 1                  TNZ     s:2276

      592     2274    5                      KLB=T$->FM$IRENT.KLB+1;

   2274  1 001636   200070 471500                    LDP1    T$,,AUTO
         1 001637   100000 236100                    LDQ     0,,PR1
         1 001640   000022 772000                    QRL     18
         1 001641   377777 376007                    ANQ     131071,DL
         1 001642   000001 036007                    ADLQ    1,DL
         1 001643   200047 756100                    STQ     KLB,,AUTO
         1 001644   001652 710000 1                  TRA     s:2277

      593     2275    5                   ELSE
      594     2276    5                      KLB=T$->FM$KEYENT.KLB;

   2276  1 001645   200070 471500                    LDP1    T$,,AUTO
         1 001646   100000 236100                    LDQ     0,,PR1
         1 001647   000033 772000                    QRL     27
         1 001650   000377 376007                    ANQ     255,DL
         1 001651   200047 756100                    STQ     KLB,,AUTO

      595     2277    5                   T$=PINCRW(T$, (KLB+4)/4);

   2277  1 001652   000004 036007                    ADLQ    4,DL
         1 001653   000004 506007                    DIV     4,DL
         1 001654   000022 736000                    QLS     18
         1 001655   200070 036100                    ADLQ    T$,,AUTO
         1 001656   200070 756100                    STQ     T$,,AUTO

      596     2278    5                   OLDNXTFDA=T$->FM$ULSEG.DA;

   2278  1 001657   200070 471500                    LDP1    T$,,AUTO
         1 001660   100000 235100                    LDA     0,,PR1
         1 001661   200044 755100                    STA     OLDNXTFDA,,AUTO

      597     2279    5                   END;  /* LOWER LEVEL */
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:98   

   2279  1 001662   001664 710000 1                  TRA     s:2283

      598     2280    4                ELSE
      599     2281    4                   OLDNXTFDA=0;

   2281  1 001663   200044 450100                    STZ     OLDNXTFDA,,AUTO

      600     2282    4                END;  /* GET FROM LOWER LEVEL */

      601     2283    3                RETURN;

   2283  1 001664   200066 221300                    LDX1  ! LEN2+2,,AUTO
         1 001665   000001 702211                    TSX2  ! 1,X1

      602     2284    3             END;  /* GET FROM OLD TDA */
      603     2285    2          ELSE
      604     2286    3             DO;   /* GET NEW GRAN */

      605     2287    3   ERR:      OLDTDA=0;

   2287  1 001666   200011 450100       ERR          STZ     OLDTDA,,AUTO

      606     2288    3             IF FLAG = %ULONLY THEN

   2288  1 001667   200067 470500                    LDP0    @FLAG,,AUTO
         1 001670   000000 235100                    LDA     0,,PR0
         1 001671   000001 115007                    CMPA    1,DL
         1 001672   001675 601000 1                  TNZ     s:2291

      607     2289    3                DA=0;

   2289  1 001673   200013 450100                    STZ     DA,,AUTO
         1 001674   001703 710000 1                  TRA     s:2294

      608     2290    3             ELSE
      609     2291    3                CALL FAF$GETGRAN(DA) ALTRET(ERR1);
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:99   

   2291  1 001675   200013 631500                    EPPR1   DA,,AUTO
         1 001676   200072 451500                    STP1    T$+2,,AUTO
         1 001677   200072 630500                    EPPR0   T$+2,,AUTO
         1 001700   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001701   000000 701000 xent               TSX1    FAF$GETGRAN
         1 001702   001711 702000 1                  TSX2    ERR1

      610     2292    3             END;

      611     2293
      612     2294    2          IF DA = 0 THEN

   2294  1 001703   200013 235100                    LDA     DA,,AUTO
         1 001704   001707 601000 1                  TNZ     s:2297

      613     2295    2             ALTRETURN;

   2295  1 001705   200066 221300                    LDX1  ! LEN2+2,,AUTO
         1 001706   000000 702211                    TSX2  ! 0,X1

      614     2296
      615     2297    2          RETURN;

   2297  1 001707   200066 221300                    LDX1  ! LEN2+2,,AUTO
         1 001710   000001 702211                    TSX2  ! 1,X1

      616     2298    2   ERR1:  ALTRETURN;

   2298  1 001711   200066 221300       ERR1         LDX1  ! LEN2+2,,AUTO
         1 001712   000000 702211                    TSX2  ! 0,X1

      617     2299    2          END GETGRAN;
      618     2300               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:100  
      619     2301        /*I*     NAME:     GETSPACE
      620     2302                 PURPOSE:  To make space for a new key
      621     2303                 DESCRIPTION:
      622     2304                      If we ran out of room in the key table, and there
      623     2305                 is still space available, then try expanding the key
      624     2306                 table.  "I" is the amount that we will try to expand
      625     2307                 the key table by.  We make our first guess based on
      626     2308                 the amount of space available, and the current density
      627     2309                 of keys.  After some adjustment, slide the keys back.
      628     2310
      629     2311                      Now, loop through the key table, adding in the
      630     2312                 number of words we slide the keys back.  Adjust bound
      631     2313                 as necessary.  Adjust the space, and size of the key
      632     2314                 table.
      633     2315
      634     2316                      If there is empty space in the key table, and it
      635     2317                 is enough for the key to fit, then make the key table
      636     2318                 smaller.  "I" is the amount to decrease the key table
      637     2319                 by.  We decrease it by just enough to get the key in.
      638     2320                 Loop through the key table, subtracting the amount
      639     2321                 that the keys were slid back by.  Adjust the key
      640     2322                 table size, and amount of space.
      641     2323
      642     2324                      If there isn't enough room here, then get another
      643     2325                 granule.  If CURUP$ isn't nil, then we have already
      644     2326                 started, set the flink, and previous DA.  Initialize
      645     2327                 the granule header.  Initialize the granule and auto
      646     2328                 variables to indicate an empty granule.
      647     2329        */
      648     2330                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:101  
      649     2331    1   GETSPACE: PROC ALTRET;

   2331  1 001713   200060 741300       GETSPACE     STX1  ! T$+1,,AUTO

      650     2332    2          DCL T$ PTR;
      651     2333    2          DCL I SBIN;
      652     2334    2          DCL J SBIN;
      653     2335    2          DCL DISP SBIN;
      654     2336        /* */
      655     2337    2          IF KEYCNTUP >= KEYTBLSIZE-1 AND SIZE < AVAIL AND

   2337  1 001714   200023 236100                    LDQ     KEYTBLSIZE,,AUTO
         1 001715   000001 136007                    SBLQ    1,DL
         1 001716   200022 116100                    CMPQ    KEYCNTUP,,AUTO
         1 001717   002061 605400 1                  TPNZ    s:2366
         1 001720   200032 236100                    LDQ     SIZE,,AUTO
         1 001721   200016 116100                    CMPQ    AVAIL,,AUTO
         1 001722   002061 605000 1                  TPL     s:2366
         1 001723   200023 235100                    LDA     KEYTBLSIZE,,AUTO
         1 001724   003774 115007                    CMPA    2044,DL
         1 001725   002061 605000 1                  TPL     s:2366

      656     2338    2             KEYTBLSIZE < 2044 THEN
      657     2339    3             DO;   /* INCREASE SIZE OF KEYTBL */

      658     2340    3             I=((AVAIL*4)/(4*SIZEUP/KEYCNTUP+1)+3)/4;

   2340  1 001726   200035 236100                    LDQ     SIZEUP,,AUTO
         1 001727   000002 736000                    QLS     2
         1 001730   200022 506100                    DIV     KEYCNTUP,,AUTO
         1 001731   000001 036007                    ADLQ    1,DL
         1 001732   200072 756100                    STQ     T$+2,,AUTO
         1 001733   200016 236100                    LDQ     AVAIL,,AUTO
         1 001734   000002 736000                    QLS     2
         1 001735   200072 506100                    DIV     T$+2,,AUTO
         1 001736   000003 036007                    ADLQ    3,DL
         1 001737   000004 506007                    DIV     4,DL
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:102  
         1 001740   200062 756100                    STQ     I,,AUTO

      659     2341    3             IF I = 0 THEN

   2341  1 001741   000000 116003                    CMPQ    0,DU
         1 001742   001745 601000 1                  TNZ     s:2343

      660     2342    3                I=1;

   2342  1 001743   000001 235007                    LDA     1,DL
         1 001744   200062 755100                    STA     I,,AUTO

      661     2343    3             IF SIZE+I > AVAIL THEN

   2343  1 001745   200032 236100                    LDQ     SIZE,,AUTO
         1 001746   200062 036100                    ADLQ    I,,AUTO
         1 001747   200016 116100                    CMPQ    AVAIL,,AUTO
         1 001750   001754 604400 1                  TMOZ    s:2346

      662     2344    3                I=AVAIL-SIZE;

   2344  1 001751   200016 236100                    LDQ     AVAIL,,AUTO
         1 001752   200032 136100                    SBLQ    SIZE,,AUTO
         1 001753   200062 756100                    STQ     I,,AUTO

      663     2345
      664     2346    3             T$=PINCRW(KTPTRUP$, KEYTBLSIZE/4);

   2346  1 001754   200023 236100                    LDQ     KEYTBLSIZE,,AUTO
         1 001755   000004 506007                    DIV     4,DL
         1 001756   000022 736000                    QLS     18
         1 001757   200042 036100                    ADLQ    KTPTRUP$,,AUTO
         1 001760   200061 756100                    STQ     T$,,AUTO

      665     2347    3             CALL FMR$SLIDE(T$, I, SIZEUP);

   2347  1 001761   200035 630500                    EPPR0   SIZEUP,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:103  
         1 001762   200074 450500                    STP0    T$+4,,AUTO
         1 001763   200062 631500                    EPPR1   I,,AUTO
         1 001764   200073 451500                    STP1    T$+3,,AUTO
         1 001765   200061 633500                    EPPR3   T$,,AUTO
         1 001766   200072 453500                    STP3    T$+2,,AUTO
         1 001767   200072 630500                    EPPR0   T$+2,,AUTO
         1 001770   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001771   000000 701000 xent               TSX1    FMR$SLIDE
         1 001772   000000 011000                    NOP     0

      666     2348
      667     2349    3             IF BOUNDUP = KEYTBLSIZE THEN

   2349  1 001773   200041 236100                    LDQ     BOUNDUP,,AUTO
         1 001774   200023 116100                    CMPQ    KEYTBLSIZE,,AUTO
         1 001775   002002 601000 1                  TNZ     s:2352

      668     2350    3                BOUNDUP=BOUNDUP+I*4;

   2350  1 001776   200062 236100                    LDQ     I,,AUTO
         1 001777   000002 736000                    QLS     2
         1 002000   200041 036100                    ADLQ    BOUNDUP,,AUTO
         1 002001   200041 756100                    STQ     BOUNDUP,,AUTO

      669     2351
      670     2352    4             DO J=1 TO KEYCNTUP;

   2352  1 002002   000001 235007                    LDA     1,DL
         1 002003   200063 755100                    STA     J,,AUTO
         1 002004   002030 710000 1                  TRA     s:2357+1

      671     2353    4                DISP=KTPTRUP$->FM$KEYTBL(J)+I;

   2353  1 002005   200042 470500                    LDP0    KTPTRUP$,,AUTO
         1 002006   200063 235100                    LDA     J,,AUTO
         1 002007   000100 101505                    MRL     fill='000'O
         1 002010   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:104  
         1 002011   200072 000004                    ADSC9   T$+2,,AUTO               cn=0,n=4
         1 002012   200072 236100                    LDQ     T$+2,,AUTO
         1 002013   200062 036100                    ADLQ    I,,AUTO
         1 002014   200064 756100                    STQ     DISP,,AUTO

      672     2354    4                IF J < BOUNDUP AND DISP > 511 THEN

   2354  1 002015   200063 236100                    LDQ     J,,AUTO
         1 002016   200041 116100                    CMPQ    BOUNDUP,,AUTO
         1 002017   002024 605000 1                  TPL     s:2356
         1 002020   200064 235100                    LDA     DISP,,AUTO
         1 002021   000777 115007                    CMPA    511,DL
         1 002022   002024 604400 1                  TMOZ    s:2356

      673     2355    4                   BOUNDUP=J;

   2355  1 002023   200041 756100                    STQ     BOUNDUP,,AUTO

      674     2356    4                KTPTRUP$->FM$KEYTBL(J)=DISP;

   2356  1 002024   000106 101500                    MRL     fill='000'O
         1 002025   200064 000004                    ADSC9   DISP,,AUTO               cn=0,n=4
         1 002026   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

      675     2357    4             END;  /* DO J */

   2357  1 002027   200063 054100                    AOS     J,,AUTO
         1 002030   200063 236100                    LDQ     J,,AUTO
         1 002031   200022 116100                    CMPQ    KEYCNTUP,,AUTO
         1 002032   002005 604400 1                  TMOZ    s:2353

      676     2358
      677     2359    3             KTPTRUP$->FM$KEYTBL(0)=BOUNDUP;

   2359  1 002033   200042 470500                    LDP0    KTPTRUP$,,AUTO
         1 002034   200041 236100                    LDQ     BOUNDUP,,AUTO
         1 002035   000033 736000                    QLS     27
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:105  
         1 002036   000000 552140                    STBQ    0,'40'O,PR0

      678     2360    3             AVAIL=AVAIL-I;

   2360  1 002037   200016 236100                    LDQ     AVAIL,,AUTO
         1 002040   200062 136100                    SBLQ    I,,AUTO
         1 002041   200016 756100                    STQ     AVAIL,,AUTO

      679     2361    3             NAVX$=PINCRW(NAVX$, I);

   2361  1 002042   200062 236100                    LDQ     I,,AUTO
         1 002043   000022 736000                    QLS     18
         1 002044   200033 036100                    ADLQ    NAVX$,,AUTO
         1 002045   200033 756100                    STQ     NAVX$,,AUTO

      680     2362    3             FM$GRAN.NAVX=FM$GRAN.NAVX+I;

   2362  1 002046   200010 471500                    LDP1    CURUP$,,AUTO
         1 002047   100001 236100                    LDQ     1,,PR1
         1 002050   000022 772000                    QRL     18
         1 002051   200062 036100                    ADLQ    I,,AUTO
         1 002052   000000 620006                    EAX0    0,QL
         1 002053   100001 740100                    STX0    1,,PR1

      681     2363    3             KEYTBLSIZE=KEYTBLSIZE+I*4;

   2363  1 002054   200062 236100                    LDQ     I,,AUTO
         1 002055   000002 736000                    QLS     2
         1 002056   200023 036100                    ADLQ    KEYTBLSIZE,,AUTO
         1 002057   200023 756100                    STQ     KEYTBLSIZE,,AUTO

      682     2364    3             END;  /* INCREASE KEYTBL */

   2364  1 002060   002350 710000 1                  TRA     s:2435

      683     2365    2          ELSE
      684     2366    2             IF (KEYTBLSIZE-KEYCNTUP-2)/4 > 0 AND
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:106  

   2366  1 002061   200023 236100                    LDQ     KEYTBLSIZE,,AUTO
         1 002062   200022 136100                    SBLQ    KEYCNTUP,,AUTO
         1 002063   000002 136007                    SBLQ    2,DL
         1 002064   000004 506007                    DIV     4,DL
         1 002065   000000 116003                    CMPQ    0,DU
         1 002066   002207 604400 1                  TMOZ    s:2392
         1 002067   200023 236100                    LDQ     KEYTBLSIZE,,AUTO
         1 002070   200022 136100                    SBLQ    KEYCNTUP,,AUTO
         1 002071   000002 136007                    SBLQ    2,DL
         1 002072   000004 506007                    DIV     4,DL
         1 002073   200016 036100                    ADLQ    AVAIL,,AUTO
         1 002074   200032 116100                    CMPQ    SIZE,,AUTO
         1 002075   002207 604000 1                  TMI     s:2392

      685     2367    2                SIZE <= (KEYTBLSIZE-KEYCNTUP-2)/4+AVAIL THEN
      686     2368    3                DO;   /* DECREASE KEYTBL */

      687     2369    3                I=SIZE-AVAIL;

   2369  1 002076   200032 236100                    LDQ     SIZE,,AUTO
         1 002077   200016 136100                    SBLQ    AVAIL,,AUTO
         1 002100   200062 756100                    STQ     I,,AUTO

      688     2370    3                T$=PINCRW(KTPTRUP$, (KEYTBLSIZE/4)-I);

   2370  1 002101   200023 236100                    LDQ     KEYTBLSIZE,,AUTO
         1 002102   000004 506007                    DIV     4,DL
         1 002103   200062 136100                    SBLQ    I,,AUTO
         1 002104   000022 736000                    QLS     18
         1 002105   200042 036100                    ADLQ    KTPTRUP$,,AUTO
         1 002106   200061 756100                    STQ     T$,,AUTO

      689     2371
      690     2372    3                CALL FMR$SLIDE(T$, -I, SIZEUP);

   2372  1 002107   200062 335100                    LCA     I,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:107  
         1 002110   200072 755100                    STA     T$+2,,AUTO
         1 002111   200035 630500                    EPPR0   SIZEUP,,AUTO
         1 002112   200075 450500                    STP0    T$+5,,AUTO
         1 002113   200072 631500                    EPPR1   T$+2,,AUTO
         1 002114   200074 451500                    STP1    T$+4,,AUTO
         1 002115   200061 633500                    EPPR3   T$,,AUTO
         1 002116   200073 453500                    STP3    T$+3,,AUTO
         1 002117   200073 630500                    EPPR0   T$+3,,AUTO
         1 002120   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 002121   000000 701000 xent               TSX1    FMR$SLIDE
         1 002122   000000 011000                    NOP     0

      691     2373
      692     2374    4                DO J=1 TO KEYCNTUP;

   2374  1 002123   000001 235007                    LDA     1,DL
         1 002124   200063 755100                    STA     J,,AUTO
         1 002125   002145 710000 1                  TRA     s:2379+1

      693     2375    4                   DISP=KTPTRUP$->FM$KEYTBL(J)-I;

   2375  1 002126   200042 470500                    LDP0    KTPTRUP$,,AUTO
         1 002127   200063 235100                    LDA     J,,AUTO
         1 002130   000100 101505                    MRL     fill='000'O
         1 002131   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 002132   200072 000004                    ADSC9   T$+2,,AUTO               cn=0,n=4
         1 002133   200072 236100                    LDQ     T$+2,,AUTO
         1 002134   200062 136100                    SBLQ    I,,AUTO
         1 002135   200064 756100                    STQ     DISP,,AUTO

      694     2376    4                   KTPTRUP$->FM$KEYTBL(J)=DISP;

   2376  1 002136   000105 101500                    MRL     fill='000'O
         1 002137   200064 000004                    ADSC9   DISP,,AUTO               cn=0,n=4
         1 002140   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

      695     2377    4                   IF DISP < 0 THEN
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:108  

   2377  1 002141   002144 605000 1                  TPL     s:2379

      696     2378    4                      BOUNDUP=J+1;

   2378  1 002142   000001 035007                    ADLA    1,DL
         1 002143   200041 755100                    STA     BOUNDUP,,AUTO

      697     2379    4                END;

   2379  1 002144   200063 054100                    AOS     J,,AUTO
         1 002145   200063 236100                    LDQ     J,,AUTO
         1 002146   200022 116100                    CMPQ    KEYCNTUP,,AUTO
         1 002147   002126 604400 1                  TMOZ    s:2375

      698     2380
      699     2381    3                KEYTBLSIZE=KEYTBLSIZE-4*I;

   2381  1 002150   200062 336100                    LCQ     I,,AUTO
         1 002151   000002 736000                    QLS     2
         1 002152   200023 036100                    ADLQ    KEYTBLSIZE,,AUTO
         1 002153   200023 756100                    STQ     KEYTBLSIZE,,AUTO

      700     2382    3                IF BOUNDUP > KEYCNTUP THEN

   2382  1 002154   200041 236100                    LDQ     BOUNDUP,,AUTO
         1 002155   200022 116100                    CMPQ    KEYCNTUP,,AUTO
         1 002156   002161 604400 1                  TMOZ    s:2384

      701     2383    3                   BOUNDUP=KEYTBLSIZE;

   2383  1 002157   200023 235100                    LDA     KEYTBLSIZE,,AUTO
         1 002160   200041 755100                    STA     BOUNDUP,,AUTO

      702     2384    3                KTPTRUP$->FM$KEYTBL(0)=BOUNDUP;

   2384  1 002161   200042 470500                    LDP0    KTPTRUP$,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:109  
         1 002162   200041 236100                    LDQ     BOUNDUP,,AUTO
         1 002163   000033 736000                    QLS     27
         1 002164   000000 552140                    STBQ    0,'40'O,PR0

      703     2385    3                AVAIL=AVAIL+I;

   2385  1 002165   200016 236100                    LDQ     AVAIL,,AUTO
         1 002166   200062 036100                    ADLQ    I,,AUTO
         1 002167   200016 756100                    STQ     AVAIL,,AUTO

      704     2386    3                FM$GRAN.AVAIL=AVAIL;

   2386  1 002170   200010 471500                    LDP1    CURUP$,,AUTO
         1 002171   100001 676100                    ERQ     1,,PR1
         1 002172   001777 376007                    ANQ     1023,DL
         1 002173   100001 656100                    ERSQ    1,,PR1

      705     2387    3                NAVX$=PINCRW(NAVX$, -I);

   2387  1 002174   200062 336100                    LCQ     I,,AUTO
         1 002175   000022 736000                    QLS     18
         1 002176   200033 036100                    ADLQ    NAVX$,,AUTO
         1 002177   200033 756100                    STQ     NAVX$,,AUTO

      706     2388    3                FM$GRAN.NAVX=FM$GRAN.NAVX-I;

   2388  1 002200   200010 471500                    LDP1    CURUP$,,AUTO
         1 002201   100001 236100                    LDQ     1,,PR1
         1 002202   000022 772000                    QRL     18
         1 002203   200062 136100                    SBLQ    I,,AUTO
         1 002204   000000 620006                    EAX0    0,QL
         1 002205   100001 740100                    STX0    1,,PR1

      707     2389    3                END;  /* DECREASE KEYTBL */

   2389  1 002206   002350 710000 1                  TRA     s:2435

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:110  
      708     2390    2             ELSE
      709     2391    3                DO;   /* GET ANOTHER GRANULE */

      710     2392    3                CALL GETGRAN(%ANY) ALTRET(ERR);

   2392  1 002207   000000 236000 2                  LDQ     0
         1 002210   200067 756100                    STQ     @FLAG,,AUTO
         1 002211   001516 701000 1                  TSX1    GETGRAN
         1 002212   002352 702000 1                  TSX2    ERR

      711     2393    3                IF CURUP$ ~= ADDR(NIL) THEN

   2393  1 002213   200010 236100                    LDQ     CURUP$,,AUTO
         1 002214   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002215   002232 600000 1                  TZE     s:2401

      712     2394    4                   DO;   /* ALREADY HAVE A GRAN */

      713     2395    4                   FM$GRAN.FLINK=DA;

   2395  1 002216   200013 235100                    LDA     DA,,AUTO
         1 002217   200010 470500                    LDP0    CURUP$,,AUTO
         1 002220   000004 755100                    STA     4,,PR0

      714     2396    4                   PREVDA=F$DCB.BFR.DA(3);

   2396  1 002221   200003 470500                    LDP0    JDCB$,,AUTO
         1 002222   000120 236100                    LDQ     80,,PR0
         1 002223   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002224   200045 756100                    STQ     PREVDA,,AUTO

      715     2397    4                   CALL FMD$WRTBUF(3);

   2397  1 002225   000005 630400 2                  EPPR0   5
         1 002226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002227   000000 701000 xent               TSX1    FMD$WRTBUF
         1 002230   000000 011000                    NOP     0
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:111  

      716     2398    4                   END;  /* ALREADY HAVE A GRAN */

   2398  1 002231   002237 710000 1                  TRA     s:2405

      717     2399    3                ELSE
      718     2400    4                   DO;   /* NO PREV GRAN */

      719     2401    4                   PREVDA=0;

   2401  1 002232   200045 450100                    STZ     PREVDA,,AUTO

      720     2402    4                   CALL FMD$FLSHBUF(3);

   2402  1 002233   000005 630400 2                  EPPR0   5
         1 002234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002235   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 002236   000000 011000                    NOP     0

      721     2403    4                   END;  /* NO PREV GRAN */

      722     2404
      723     2405    3                CALL FMD$GETBUF(3, 1, CURUP$);

   2405  1 002237   200010 630500                    EPPR0   CURUP$,,AUTO
         1 002240   200074 450500                    STP0    T$+4,,AUTO
         1 002241   000010 237000 2                  LDAQ    8
         1 002242   200072 757100                    STAQ    T$+2,,AUTO
         1 002243   200072 630500                    EPPR0   T$+2,,AUTO
         1 002244   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 002245   000000 701000 xent               TSX1    FMD$GETBUF
         1 002246   000000 011000                    NOP     0

      724     2406    3                FM$GRAN=FM_GRAN;

   2406  1 002247   200010 470500                    LDP0    CURUP$,,AUTO
         1 002250   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:112  
         1 002251   000000 000024 0                  ADSC9   FM_GRAN                  cn=0,n=20
         1 002252   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

      725     2407    3                FM$GRAN.STAMP.HASH=F$DCB.HASH;

   2407  1 002253   200003 470500                    LDP0    JDCB$,,AUTO
         1 002254   200010 471500                    LDP1    CURUP$,,AUTO
         1 002255   000073 236100                    LDQ     59,,PR0
         1 002256   100000 552170                    STBQ    0,'70'O,PR1

      726     2408    3                FM$GRAN.STAMP.GMOD=DA;

   2408  1 002257   200010 471500                    LDP1    CURUP$,,AUTO
         1 002260   200013 236100                    LDQ     DA,,AUTO
         1 002261   100000 552104                    STBQ    0,'04'O,PR1

      727     2409    3                FM$GRAN.BLINK=PREVDA;

   2409  1 002262   200045 235100                    LDA     PREVDA,,AUTO
         1 002263   200010 471500                    LDP1    CURUP$,,AUTO
         1 002264   100003 755100                    STA     3,,PR1

      728     2410    3                FM$GRAN.LVL=LVL;

   2410  1 002265   200010 471500                    LDP1    CURUP$,,AUTO
         1 002266   200007 236100                    LDQ     LVL,,AUTO
         1 002267   000016 736000                    QLS     14
         1 002270   100001 676100                    ERQ     1,,PR1
         1 002271   340000 376007                    ANQ     114688,DL
         1 002272   100001 656100                    ERSQ    1,,PR1

      729     2411    3                FM$GRAN.ORG=ORG;

   2411  1 002273   200010 471500                    LDP1    CURUP$,,AUTO
         1 002274   200005 236100                    LDQ     ORG,,AUTO
         1 002275   000012 736000                    QLS     10
         1 002276   100001 676100                    ERQ     1,,PR1
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:113  
         1 002277   036000 376007                    ANQ     15360,DL
         1 002300   100001 656100                    ERSQ    1,,PR1

      730     2412
      731     2413    3                IF PREVDA = 0 THEN

   2413  1 002301   000000 115003                    CMPA    0,DU
         1 002302   002306 601000 1                  TNZ     s:2419

      732     2414    4                   DO;   /* FIRST GRAN */

      733     2415    4                   THISLVLFDA=DA;

   2415  1 002303   200013 236100                    LDQ     DA,,AUTO
         1 002304   200037 756100                    STQ     THISLVLFDA,,AUTO

      734     2416    4                   TEMPTDA=DA;

   2416  1 002305   200020 756100                    STQ     TEMPTDA,,AUTO

      735     2417    4                   END;  /* FIRST GRAN */

      736     2418
      737     2419    3                NAVX$=PINCRW(CURUP$, SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL));

   2419  1 002306   200010 236100                    LDQ     CURUP$,,AUTO
         1 002307   000113 036003                    ADLQ    75,DU
         1 002310   200033 756100                    STQ     NAVX$,,AUTO

      738     2420    3                FM$GRAN.FCEX=SIZEW(FM$GRAN);

   2420  1 002311   000005 220003                    LDX0    5,DU
         1 002312   200010 471500                    LDP1    CURUP$,,AUTO
         1 002313   100002 740100                    STX0    2,,PR1

      739     2421    3                KTPTRUP$=PINCRW(CURUP$, SIZEW(FM$GRAN));

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:114  
   2421  1 002314   200010 236100                    LDQ     CURUP$,,AUTO
         1 002315   000005 036003                    ADLQ    5,DU
         1 002316   200042 756100                    STQ     KTPTRUP$,,AUTO

      740     2422    3                KTPTRUP$->FM$KEYTBL=INITKEYTBL;

   2422  1 002317   200042 471500                    LDP1    KTPTRUP$,,AUTO
         1 002320   000100 100400                    MLR     fill='000'O
         1 002321   000005 000001 0                  ADSC9   INITKEYTBL               cn=0,n=1
         1 002322   100000 000430                    ADSC9   0,,PR1                   cn=0,n=280

      741     2423    3                KEYCNTUP=0;

   2423  1 002323   200022 450100                    STZ     KEYCNTUP,,AUTO

      742     2424    3                KEYTBLSIZE=SIZEC(FM$KEYTBL);

   2424  1 002324   000430 235007                    LDA     280,DL
         1 002325   200023 755100                    STA     KEYTBLSIZE,,AUTO

      743     2425    3                BOUNDUP=KEYTBLSIZE;

   2425  1 002326   200041 755100                    STA     BOUNDUP,,AUTO

      744     2426    3                SIZEUP=0;

   2426  1 002327   200035 450100                    STZ     SIZEUP,,AUTO

      745     2427    3                AVAIL=1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL);

   2427  1 002330   001665 235007                    LDA     949,DL
         1 002331   200016 755100                    STA     AVAIL,,AUTO

      746     2428    3                F$DCB.BFR.DA(3)=DA;

   2428  1 002332   200013 236100                    LDQ     DA,,AUTO
         1 002333   000120 552134                    STBQ    80,'34'O,PR0
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:115  

      747     2429    3                CALL FMC$CLR1(DA);

   2429  1 002334   200013 633500                    EPPR3   DA,,AUTO
         1 002335   200072 453500                    STP3    T$+2,,AUTO
         1 002336   200072 630500                    EPPR0   T$+2,,AUTO
         1 002337   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002340   000000 701000 xent               TSX1    FMC$CLR1
         1 002341   000000 011000                    NOP     0

      748     2430    3                F$DCB.BFR.BUFUP(3)='1'B;

   2430  1 002342   200003 470500                    LDP0    JDCB$,,AUTO
         1 002343   400000 236003                    LDQ     -131072,DU
         1 002344   000120 256100                    ORSQ    80,,PR0

      749     2431    3                F$DCB.BFR.SCRUB(3)='1'B;

   2431  1 002345   200000 236003                    LDQ     65536,DU
         1 002346   000120 256100                    ORSQ    80,,PR0

      750     2432    3                NGRANS=NGRANS+1;

   2432  1 002347   200015 054100                    AOS     NGRANS,,AUTO

      751     2433    3                END;   /* GET A GRAN */

      752     2434
      753     2435    2          RETURN;

   2435  1 002350   200060 221300                    LDX1  ! T$+1,,AUTO
         1 002351   000001 702211                    TSX2  ! 1,X1

      754     2436    2   ERR:   ALTRETURN;

   2436  1 002352   200060 221300       ERR          LDX1  ! T$+1,,AUTO
         1 002353   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:116  

      755     2437    2          END GETSPACE;
      756     2438               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:117  
      757     2439        /*I*     NAME:     INITUL
      758     2440                 PURPOSE:  To do some basic initialization
      759     2441                 DESCRIPTION:
      760     2442                      First, blink to the start of this upper level.
      761     2443                 We want to start getting granules from the beginning of
      762     2444                 the upper level.  Next, if this is higher than level 1,
      763     2445                 then there is another upper level below this.  Set
      764     2446                 OLDNXTFDA to the first granule at the next level.
      765     2447        */
      766     2448                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:118  
      767     2449    1   INITUL: PROC ALTRET;

   2449  1 002354   200056 741300       INITUL       STX1  ! ENDLOOP+4,,AUTO

      768     2450    2          DCL T$ PTR;
      769     2451        /* */
      770     2452    2          F$DCB.LVL=F$DCB.TDALVL;

   2452  1 002355   200003 470500                    LDP0    JDCB$,,AUTO
         1 002356   000067 236100                    LDQ     55,,PR0
         1 002357   000003 772000                    QRL     3
         1 002360   000067 676100                    ERQ     55,,PR0
         1 002361   070000 376003                    ANQ     28672,DU
         1 002362   000067 656100                    ERSQ    55,,PR0

      771     2453    2          CALL FMD$REDBUF(OLDLVL$, 4, OLDTDA, 0, -1) ALTRET(ERR);

   2453  1 002363   000014 236000 2                  LDQ     12
         1 002364   200076 756100                    STQ     T$+6,,AUTO
         1 002365   000000 236000 2                  LDQ     0
         1 002366   200075 756100                    STQ     T$+5,,AUTO
         1 002367   200011 631500                    EPPR1   OLDTDA,,AUTO
         1 002370   200074 451500                    STP1    T$+4,,AUTO
         1 002371   000013 236000 2                  LDQ     11
         1 002372   200073 756100                    STQ     T$+3,,AUTO
         1 002373   200043 633500                    EPPR3   OLDLVL$,,AUTO
         1 002374   200072 453500                    STP3    T$+2,,AUTO
         1 002375   200072 630500                    EPPR0   T$+2,,AUTO
         1 002376   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 002377   000000 701000 xent               TSX1    FMD$REDBUF
         1 002400   002511 702000 1                  TSX2    ERR

      772     2454
      773     2455    3          DO WHILE(OLDLVL$->FM$GRAN.BLINK ~= 0);

   2455  1 002401   200043 470500                    LDP0    OLDLVL$,,AUTO
         1 002402   000003 235100                    LDA     3,,PR0
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:119  
         1 002403   002432 600000 1                  TZE     s:2461

      774     2456    3             LCDA=OLDTDA;

   2456  1 002404   200011 235100                    LDA     OLDTDA,,AUTO
         1 002405   200024 755100                    STA     LCDA,,AUTO

      775     2457    3             OLDTDA=OLDLVL$->FM$GRAN.BLINK;

   2457  1 002406   200043 470500                    LDP0    OLDLVL$,,AUTO
         1 002407   000003 235100                    LDA     3,,PR0
         1 002410   200011 755100                    STA     OLDTDA,,AUTO

      776     2458    3             CALL FMD$REDBUF(OLDLVL$, 4, OLDTDA, 0, LCDA) ALTRET(ERR);

   2458  1 002411   200024 631500                    EPPR1   LCDA,,AUTO
         1 002412   200076 451500                    STP1    T$+6,,AUTO
         1 002413   000000 236000 2                  LDQ     0
         1 002414   200075 756100                    STQ     T$+5,,AUTO
         1 002415   200011 633500                    EPPR3   OLDTDA,,AUTO
         1 002416   200074 453500                    STP3    T$+4,,AUTO
         1 002417   000013 236000 2                  LDQ     11
         1 002420   200073 756100                    STQ     T$+3,,AUTO
         1 002421   200043 634500                    EPPR4   OLDLVL$,,AUTO
         1 002422   200072 454500                    STP4    T$+2,,AUTO
         1 002423   200072 630500                    EPPR0   T$+2,,AUTO
         1 002424   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 002425   000000 701000 xent               TSX1    FMD$REDBUF
         1 002426   002511 702000 1                  TSX2    ERR

      777     2459    3          END;  /* WHILE */

   2459  1 002427   200043 470500                    LDP0    OLDLVL$,,AUTO
         1 002430   000003 235100                    LDA     3,,PR0
         1 002431   002404 601000 1                  TNZ     s:2456

      778     2460
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:120  
      779     2461    2          IF F$DCB.LVL ~= 1 THEN

   2461  1 002432   200003 471500                    LDP1    JDCB$,,AUTO
         1 002433   100067 236100                    LDQ     55,,PR1
         1 002434   070000 376003                    ANQ     28672,DU
         1 002435   010000 116003                    CMPQ    4096,DU
         1 002436   002506 600000 1                  TZE     s:2476

      780     2462    2             IF OLDLVL$->FM$GRAN.KEYCNT ~= 0 THEN

   2462  1 002437   000002 236100                    LDQ     2,,PR0
         1 002440   000777 316007                    CANQ    511,DL
         1 002441   002504 600000 1                  TZE     s:2474

      781     2463    3                DO;   /* GET FIRST KEY */

      782     2464    3                T$=PINCRW(OLDLVL$, OLDLVL$->FM$GRAN.FCEX);

   2464  1 002442   000002 220100                    LDX0    2,,PR0
         1 002443   000000 636010                    EAQ     0,X0
         1 002444   200043 036100                    ADLQ    OLDLVL$,,AUTO
         1 002445   200057 756100                    STQ     T$,,AUTO

      783     2465    3                T$=PINCRW(OLDLVL$, T$->FM$KEYTBL(1));

   2465  1 002446   200057 473500                    LDP3    T$,,AUTO
         1 002447   300000 221100                    LDX1    0,,PR3
         1 002450   000777 361003                    ANX1    511,DU
         1 002451   000000 636011                    EAQ     0,X1
         1 002452   200043 036100                    ADLQ    OLDLVL$,,AUTO
         1 002453   200057 756100                    STQ     T$,,AUTO

      784     2466    3                IF ORG = %IREL# THEN

   2466  1 002454   200005 235100                    LDA     ORG,,AUTO
         1 002455   000015 115007                    CMPA    13,DL
         1 002456   002466 601000 1                  TNZ     s:2469
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:121  

      785     2467    3                   KLB=T$->FM$IRENT.KLB+1;

   2467  1 002457   200057 473500                    LDP3    T$,,AUTO
         1 002460   300000 236100                    LDQ     0,,PR3
         1 002461   000022 772000                    QRL     18
         1 002462   377777 376007                    ANQ     131071,DL
         1 002463   000001 036007                    ADLQ    1,DL
         1 002464   200047 756100                    STQ     KLB,,AUTO
         1 002465   002473 710000 1                  TRA     s:2470

      786     2468    3                ELSE
      787     2469    3                   KLB=T$->FM$KEYENT.KLB;

   2469  1 002466   200057 473500                    LDP3    T$,,AUTO
         1 002467   300000 236100                    LDQ     0,,PR3
         1 002470   000033 772000                    QRL     27
         1 002471   000377 376007                    ANQ     255,DL
         1 002472   200047 756100                    STQ     KLB,,AUTO

      788     2470    3                T$=PINCRW(T$, (KLB+4)/4);

   2470  1 002473   000004 036007                    ADLQ    4,DL
         1 002474   000004 506007                    DIV     4,DL
         1 002475   000022 736000                    QLS     18
         1 002476   200057 036100                    ADLQ    T$,,AUTO
         1 002477   200057 756100                    STQ     T$,,AUTO

      789     2471    3                OLDNXTFDA=T$->FM$ULSEG.DA;

   2471  1 002500   200057 473500                    LDP3    T$,,AUTO
         1 002501   300000 235100                    LDA     0,,PR3
         1 002502   200044 755100                    STA     OLDNXTFDA,,AUTO

      790     2472    3                END;

   2472  1 002503   002507 710000 1                  TRA     s:2478
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:122  

      791     2473    2             ELSE
      792     2474    2                OLDNXTFDA=0;

   2474  1 002504   200044 450100                    STZ     OLDNXTFDA,,AUTO
         1 002505   002507 710000 1                  TRA     s:2478

      793     2475    2          ELSE
      794     2476    2             OLDNXTFDA=0;

   2476  1 002506   200044 450100                    STZ     OLDNXTFDA,,AUTO

      795     2477
      796     2478    2          RETURN;

   2478  1 002507   200056 221300                    LDX1  ! ENDLOOP+4,,AUTO
         1 002510   000001 702211                    TSX2  ! 1,X1

      797     2479    2   ERR:   CALL FMD$FLSHBUF(4);

   2479  1 002511   000013 630400 2     ERR          EPPR0   11
         1 002512   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002513   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 002514   000000 011000                    NOP     0

      798     2480    2          OLDTDA=0;

   2480  1 002515   200011 450100                    STZ     OLDTDA,,AUTO

      799     2481    2          RETURN;

   2481  1 002516   200056 221300                    LDX1  ! ENDLOOP+4,,AUTO
         1 002517   000001 702211                    TSX2  ! 1,X1

      800     2482    2          END INITUL;
      801     2483               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:123  
      802     2484        /*I*     NAME:     MINCHECK
      803     2485                 PURPOSE:  To check for the minimal key
      804     2486                 DESCRIPTION:
      805     2487                      In order to conserve space, we try to get the minimum
      806     2488                 key that distinguishes granules.
      807     2489
      808     2490                      If this is an irel file, then don't even try.  The
      809     2491                 comparison routines are a real pain.
      810     2492
      811     2493                      Get the lengths of the two keys we are comparing.
      812     2494
      813     2495                      Next, loop until we can tell the two keys apart,
      814     2496                 comparing 1 word at a time.  If the two keys are still
      815     2497                 indistinguishable, then use the length of the first key
      816     2498                 in this granule.  If LEN is larger then the size of the
      817     2499                 first key in this granule, then set it to the size of
      818     2500                 the first key in this granule.
      819     2501        */
      820     2502                 %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:124  
      821     2503    1   MINCHECK: PROC(KEY$, LEN);

   2503  1 002520   200060 741300       MINCHECK     STX1  ! T$+1,,AUTO

      822     2504    2          DCL KEY$ PTR;
      823     2505    2          DCL LEN UBIN;
      824     2506    2          DCL LEN1 SBIN;
      825     2507    2          DCL LEN2 SBIN;
      826     2508    2          DCL 1 KEY BASED,
      827     2509    2               2 SIZE UBIN(9) CALIGNED,
      828     2510    2               2 TEXT CHAR(LEN) CALIGNED;
      829     2511        /* */
      830     2512    2          IF ORG = %IREL# THEN

   2512  1 002521   200005 235100                    LDA     ORG,,AUTO
         1 002522   000015 115007                    CMPA    13,DL
         1 002523   002536 601000 1                  TNZ     s:2518

      831     2513    3             DO;   /* USE WHOLE KEY */

      832     2514    3             LEN=KEY$->FM$IRENT.KLB+1;

   2514  1 002524   200061 470500                    LDP0    @KEY$,,AUTO
         1 002525   000000 471500                    LDP1    0,,PR0
         1 002526   200062 473500                    LDP3    @LEN,,AUTO
         1 002527   100000 236100                    LDQ     0,,PR1
         1 002530   000022 772000                    QRL     18
         1 002531   377777 376007                    ANQ     131071,DL
         1 002532   000001 036007                    ADLQ    1,DL
         1 002533   300000 756100                    STQ     0,,PR3

      833     2515    3             RETURN;

   2515  1 002534   200060 221300                    LDX1  ! T$+1,,AUTO
         1 002535   000001 702211                    TSX2  ! 1,X1

      834     2516    3             END;  /* USE WHOLE KEY */
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:125  
      835     2517
      836     2518    2          IF ORG = %INDEXED# THEN

   2518  1 002536   000006 115007                    CMPA    6,DL
         1 002537   002547 601000 1                  TNZ     s:2525

      837     2519    3             DO;   /* INDEXED */

      838     2520    3             LEN1=F$DCB.KEYL;

   2520  1 002540   200003 470500                    LDP0    JDCB$,,AUTO
         1 002541   000036 236100                    LDQ     30,,PR0
         1 002542   000011 772000                    QRL     9
         1 002543   000777 376007                    ANQ     511,DL
         1 002544   200063 756100                    STQ     LEN1,,AUTO

      839     2521    3             LEN2=LEN1;

   2521  1 002545   200064 756100                    STQ     LEN2,,AUTO

      840     2522    3             END;  /* INDEXED */

   2522  1 002546   002562 710000 1                  TRA     s:2529

      841     2523    2          ELSE
      842     2524    3             DO;   /* KEYED */

      843     2525    3             LEN1=FIRST$->FM$KEYENT.KLB;

   2525  1 002547   200040 470500                    LDP0    FIRST$,,AUTO
         1 002550   000000 236100                    LDQ     0,,PR0
         1 002551   000033 772000                    QRL     27
         1 002552   000377 376007                    ANQ     255,DL
         1 002553   200063 756100                    STQ     LEN1,,AUTO

      844     2526    3             LEN2=KEY$->FM$KEYENT.KLB;

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:126  
   2526  1 002554   200061 471500                    LDP1    @KEY$,,AUTO
         1 002555   100000 473500                    LDP3    0,,PR1
         1 002556   300000 236100                    LDQ     0,,PR3
         1 002557   000033 772000                    QRL     27
         1 002560   000377 376007                    ANQ     255,DL
         1 002561   200064 756100                    STQ     LEN2,,AUTO

      845     2527    3             END;  /* KEYED */

      846     2528
      847     2529    2          LEN=3;

   2529  1 002562   000003 235007                    LDA     3,DL
         1 002563   200062 470500                    LDP0    @LEN,,AUTO
         1 002564   000000 755100                    STA     0,,PR0

      848     2530    3   LOOP:  DO WHILE(LEN1 > LEN AND LEN2 > LEN);

   2530  1 002565   002602 710000 1     LOOP         TRA     s:2535

      849     2531    3             IF FIRST$->KEY.TEXT ~= KEY$->KEY.TEXT THEN

   2531  1 002566   200062 470500                    LDP0    @LEN,,AUTO
         1 002567   000000 720100                    LXL0    0,,PR0
         1 002570   200061 471500                    LDP1    @KEY$,,AUTO
         1 002571   100000 473500                    LDP3    0,,PR1
         1 002572   200040 474500                    LDP4    FIRST$,,AUTO
         1 002573   040140 106540                    CMPC    fill='040'O
         1 002574   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0
         1 002575   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 002576   002612 601000 1                  TNZ     s:2537

      850     2532    3                EXIT LOOP;
      851     2533
      852     2534    3             LEN=LEN+4;

   2534  1 002577   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:127  
         1 002600   000004 035007                    ADLA    4,DL
         1 002601   000000 755100                    STA     0,,PR0

      853     2535    3          END;

   2535  1 002602   000000 236100                    LDQ     0,,PR0
         1 002603   002612 604000 1                  TMI     s:2537
         1 002604   200063 116100                    CMPQ    LEN1,,AUTO
         1 002605   002612 605000 1                  TPL     s:2537
         1 002606   000000 116003                    CMPQ    0,DU
         1 002607   002612 604000 1                  TMI     s:2537
         1 002610   200064 116100                    CMPQ    LEN2,,AUTO
         1 002611   002566 604000 1                  TMI     s:2531

      854     2536
      855     2537    2          IF FIRST$->KEY.TEXT = KEY$->KEY.TEXT THEN

   2537  1 002612   000000 720100                    LXL0    0,,PR0
         1 002613   200061 471500                    LDP1    @KEY$,,AUTO
         1 002614   100000 473500                    LDP3    0,,PR1
         1 002615   200040 474500                    LDP4    FIRST$,,AUTO
         1 002616   040140 106540                    CMPC    fill='040'O
         1 002617   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0
         1 002620   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 002621   002624 601000 1                  TNZ     s:2540

      856     2538    2             LEN=LEN1;

   2538  1 002622   200063 235100                    LDA     LEN1,,AUTO
         1 002623   000000 755100                    STA     0,,PR0

      857     2539
      858     2540    2          IF LEN > LEN1 THEN

   2540  1 002624   000000 236100                    LDQ     0,,PR0
         1 002625   002630 604000 1                  TMI     s:2541
         1 002626   200063 116100                    CMPQ    LEN1,,AUTO
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:128  
         1 002627   002632 604400 1                  TMOZ    s:2543

      859     2541    2             LEN=LEN1;

   2541  1 002630   200063 235100                    LDA     LEN1,,AUTO
         1 002631   000000 755100                    STA     0,,PR0

      860     2542
      861     2543    2          RETURN;

   2543  1 002632   200060 221300                    LDX1  ! T$+1,,AUTO
         1 002633   000001 702211                    TSX2  ! 1,X1

FM_GRAN
 Sect OctLoc
   0     000   000000 000000   000000 400000   000000 000000   000000 000000    ................
   0     004   000000 000000                                                    ....

INITKEYTBL
 Sect OctLoc
   0     005   430*** ******                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000002 006000   777776 777777   000003 006000   743777 777777    ................
   2     004   707777 777777   000005 006000   077777 777777   777777 437777    ........?.......
   2     010   000005 006000   000003 006000   777777 776000   000006 006000    ................
   2     014   000027 006000                                                    ....
      862     2544    2          END MINCHECK;
      863     2545               %EJECT;
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:129  
      864     2546    1          END FMU$BLD;
      865     2547        %EOD;

PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:130  
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
      No diagnostics issued in procedure FMU$BLD.
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:131  

 **** Variables and constants ****

  ****  Section 000 RoData FMU$BLD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 FM_GRAN                    5-0-0/b STRC(9)     r     1 INITKEYTBL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    67-0-0/w PTR         r     1 @FLAG                     61-0-0/w PTR         r     1 @KEY$
    62-0-0/w PTR         r     1 @LEN                      12-0-0/w PTR         r     1 ALTKEY$
    46-0-0/b BIT         r     1 ALTONLY                   16-0-0/w SBIN        r     1 AVAIL
    26-0-0/w SBIN        r     1 BOUND                     41-0-0/w SBIN        r     1 BOUNDUP
     4-0-0/w PTR         r     1 CFU$                      14-0-0/w PTR         r     1 CURLOW$
    10-0-0/w PTR         r     1 CURUP$                    13-0-0/w UBIN        r     1 DA
    64-0-0/w SBIN        r     1 DISP                      52-0-0/w SBIN        r     1 ENDLOOP
    40-0-0/w PTR         r     1 FIRST$                    *0-0-0/w SBIN        r     1 FLAG
    34-0-0/w SBIN        r     1 I                         62-0-0/w SBIN        r     1 I
    36-0-0/w SBIN        r     1 INDEX#                    63-0-0/w SBIN        r     1 J
     3-0-0/w PTR         r     1 JDCB$                     *0-0-0/w PTR         r     1 KEY$
    21-0-0/w SBIN        r     1 KEYCNT                    22-0-0/w SBIN        r     1 KEYCNTUP
    23-0-0/w SBIN        r     1 KEYTBLSIZE                47-0-0/w SBIN        r     1 KLB
    25-0-0/w PTR         r     1 KTPTR$                    42-0-0/w PTR         r     1 KTPTRUP$
    30-0-0/w PTR         r     1 LAST$                     24-0-0/w UBIN        r     1 LCDA
    31-0-0/w SBIN        r     1 LEN                       *0-0-0/w UBIN        r     1 LEN
    63-0-0/w SBIN        r     1 LEN1                      64-0-0/w SBIN        r     1 LEN2
     7-0-0/w SBIN        r     1 LVL                       33-0-0/w PTR         r     1 NAVX$
    15-0-0/w SBIN        r     1 NGRANS                    43-0-0/w PTR         r     1 OLDLVL$
    44-0-0/w UBIN        r     1 OLDNXTFDA                 11-0-0/w UBIN        r     1 OLDTDA
     5-0-0/w SBIN        r     1 ORG                       45-0-0/w UBIN        r     1 PREVDA
    17-0-0/w PTR         r     1 PRLAST$                   27-0-0/w SBIN        r     1 PRLEN
    32-0-0/w SBIN        r     1 SIZE                      35-0-0/w SBIN        r     1 SIZEUP
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:132  
    51-0-0/w SBIN        r     1 STARTLOOP                 70-0-0/w PTR         r     1 T$
    61-0-0/w PTR         r     1 T$                        57-0-0/w PTR         r     1 T$
     6-0-0/w UBIN        r     1 TDA                       20-0-0/w UBIN        r     1 TEMPTDA
    37-0-0/w UBIN        r     1 THISLVLFDA

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w UBIN        r     1 FM_FRZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4572)  r     1 ALTKEYS                    0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(288)   r     1 FM$CFU
     0-0-0/w STRC(180)   r     1 FM$GRAN                    0-0-0/w ASTR(18)    r     1 FM$IRENT
     0-0-0/w ASTR(9)     r     1 FM$KEYENT
     0-0-0/w UBIN(9)     r     1 FM$KEYTBL(0:279)
     0-0-0/w UBIN        r     1 FM$KT(0:69)                0-0-0/w STRC        r     1 FM$ULSEG
     0-0-0/w STRC(360)   r     1 IRKEYS                     0-0-0/c ASTR(9)     r     1 KEY
     0-0-0/c ASTR(9)     r     1 KEY                        0-0-0/w UBIN        r     1 WRD


   Procedure FMU$BLD requires 1436 words for executable code.
   Procedure FMU$BLD requires 64 words of local(AUTO) storage.
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:133  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:134  
          MINI XREF LISTING

ALTKEY$
      1767**DCL      1709--IMP-PTR  1715--IMP-PTR  1851<<ASSIGN   1883<<ASSIGN   1886>>IF       1889>>ASSIGN
      1897>>IF       1901>>ASSIGN   1902>>ASSIGN   1904>>ASSIGN   1905>>ASSIGN   1908>>ASSIGN   1909>>ASSIGN
      1913>>IF       1916>>ASSIGN   1924>>IF       1928>>ASSIGN   1929>>ASSIGN   1930>>ASSIGN   1932>>ASSIGN
      1933>>ASSIGN   1936>>ASSIGN   1937>>ASSIGN   2094>>IF       2097>>ASSIGN   2099>>ASSIGN
ALTKEYS.K.FDA
      1710**DCL      2097>>ASSIGN
ALTKEYS.K.KEYL
      1710**DCL      1930>>ASSIGN
ALTKEYS.K.TDA
      1710**DCL      1928>>ASSIGN   1932<<ASSIGN   1936>>ASSIGN
ALTKEYS.K.TDALVL
      1710**DCL      1929>>ASSIGN   1933<<ASSIGN   1937>>ASSIGN
ALTKEYS.K.UNIQUE
      1711**DCL      1924>>IF
ALTKEYS.NUMENTS
      1709**DCL      1916>>ASSIGN
ALTKEYS.UNIQUEBLD
      1709**DCL      1913>>IF
ALTONLY
      1795**DCL      1813<<ASSIGN   1817<<ASSIGN   1891>>IF       1918>>IF
AVAIL
      1771**DCL      1981<<ASSIGN   2019>>IF       2038<<ASSIGN   2038>>ASSIGN   2042>>ASSIGN   2109<<ASSIGN
      2125<<ASSIGN   2337>>IF       2340>>ASSIGN   2343>>IF       2344>>ASSIGN   2360<<ASSIGN   2360>>ASSIGN
      2366>>IF       2369>>ASSIGN   2385<<ASSIGN   2385>>ASSIGN   2386>>ASSIGN   2427<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      1424**DCL      1424--REDEF
B$JIT.DCB$
      1498**DCL      1819>>ASSIGN
B$JIT.ERR
      1330**DCL      1859<<ASSIGN   2167<<ASSIGN   2193<<ASSIGN
B$JIT.ERR.MID
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:135  
      1331**DCL      1331--REDEF
B$JIT.FRS
      1526**DCL      1821>>IF
B$JIT.JRESPEAK
      1492**DCL      1493--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1601**DCL      1601--REDEF    1602--REDEF
B$JIT.PNR
      1505**DCL      1505--REDEF
B$JIT.TSLINE
      1599**DCL      1600--REDEF
B$JIT$
      1744**DCL      1325--IMP-PTR  1819>>ASSIGN   1821>>IF       1859>>ASSIGN   2167>>ASSIGN   2193>>ASSIGN
B$ROSEG$
      1745**DCL      1883>>ASSIGN
BLDLVL
      1977**PROC     2113--CALL
BLDUL
      2078**PROC     1856--CALL     1903--CALL     1931--CALL
BLD_ALTKEY
      1879**PROC     1854--CALL
BOUND
      1779**DCL      1998<<ASSIGN   1999>>IF       2004>>IF
BOUNDUP
      1790**DCL      2031>>IF       2032<<ASSIGN   2040>>ASSIGN   2349>>IF       2350<<ASSIGN   2350>>ASSIGN
      2354>>IF       2355<<ASSIGN   2359>>ASSIGN   2378<<ASSIGN   2382>>IF       2383<<ASSIGN   2384>>ASSIGN
      2425<<ASSIGN
CFU$
      1761**DCL      1726--IMP-PTR  1826<<ASSIGN   1827>>IF       1827>>IF       1827>>IF       1827>>IF
      1827>>IF       1835>>IF       1841>>ASSIGN   1841>>ASSIGN   1845>>IF       1863>>ASSIGN   1864>>ASSIGN
      1897>>IF       1924>>IF
CLEANUP
      2161**PROC     1860--CALL     2137--CALL
COMMON
      1819**LABEL    1814--GOTO
CURLOW$
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:136  
      1769**DCL      1983>>DOUNTIL  1986>>ASSIGN   1992<>CALL     1993>>ASSIGN   1997>>ASSIGN   1997>>ASSIGN
      2000>>ASSIGN   2002>>ASSIGN   2005>>ASSIGN   2007>>ASSIGN   2105<>CALL     2124<>CALL     2128>>ASSIGN
CURUP$
      1765**DCL      1722--IMP-PTR  2030>>ASSIGN   2039>>ASSIGN   2041>>ASSIGN   2041>>ASSIGN   2042>>ASSIGN
      2083<<ASSIGN   2121<<ASSIGN   2135>>ASSIGN   2163>>IF       2171<>CALL     2172>>ASSIGN   2173>>ASSIGN
      2174>>ASSIGN   2175>>ASSIGN   2176>>ASSIGN   2177>>ASSIGN   2178>>ASSIGN   2179>>ASSIGN   2180>>ASSIGN
      2189>>ASSIGN   2195>>ASSIGN   2200<>CALL     2201>>ASSIGN   2202>>ASSIGN   2203>>ASSIGN   2204>>ASSIGN
      2205>>ASSIGN   2206>>ASSIGN   2207>>ASSIGN   2208>>ASSIGN   2209>>ASSIGN   2210>>ASSIGN   2362>>ASSIGN
      2362>>ASSIGN   2386>>ASSIGN   2388>>ASSIGN   2388>>ASSIGN   2393>>IF       2395>>ASSIGN   2405<>CALL
      2406>>ASSIGN   2407>>ASSIGN   2408>>ASSIGN   2409>>ASSIGN   2410>>ASSIGN   2411>>ASSIGN   2419>>ASSIGN
      2420>>ASSIGN   2421>>ASSIGN
DA
      1768**DCL      1986<<ASSIGN   1988>>IF       1992<>CALL     2097<<ASSIGN   2099<<ASSIGN   2102<<ASSIGN
      2103>>IF       2105<>CALL     2174>>ASSIGN   2182>>ASSIGN   2183<>CALL     2190>>DOUNTIL  2195>>ASSIGN
      2198>>IF       2203>>ASSIGN   2212>>ASSIGN   2213<>CALL     2250<<ASSIGN   2255<>CALL     2289<<ASSIGN
      2291<>CALL     2294>>IF       2395>>ASSIGN   2408>>ASSIGN   2415>>ASSIGN   2416>>ASSIGN   2428>>ASSIGN
      2429<>CALL
DISP IN PROCEDURE GETSPACE
      2335**DCL      2353<<ASSIGN   2354>>IF       2356>>ASSIGN   2375<<ASSIGN   2376>>ASSIGN   2377>>IF
DONE IN PROCEDURE BLDUL
      2137**LABEL    2104--GOTO
DONE IN PROCEDURE CLEANUP
      2219**LABEL    2168--GOTO
ENDLOOP IN PROCEDURE BLD_ALTKEY
      1881**DCL      1887<<ASSIGN   1889<<ASSIGN   1896>>DOINDEX  1914<<ASSIGN   1916<<ASSIGN   1923>>DOINDEX
ERR
      1859**LABEL    1854--CALLALT  1856--CALLALT
ERR IN PROCEDURE BLDLVL
      2055**LABEL    1992--CALLALT  2020--CALLALT
ERR IN PROCEDURE BLDUL
      2145**LABEL    2105--CALLALT  2113--CALLALT  2124--CALLALT
ERR IN PROCEDURE BLD_ALTKEY
      1941**LABEL    1903--CALLALT  1931--CALLALT
ERR IN PROCEDURE GETGRAN
      2287**LABEL    2255--CALLALT  2267--CALLALT
ERR IN PROCEDURE GETSPACE
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:137  
      2436**LABEL    2392--CALLALT
ERR IN PROCEDURE INITUL
      2479**LABEL    2453--CALLALT  2458--CALLALT
ERR1 IN PROCEDURE GETGRAN
      2298**LABEL    2291--CALLALT
F$DCB.ACTPOS
      1684**DCL      1684--REDEF
F$DCB.ALTKEYX
      1682**DCL      1853>>IF       1883>>ASSIGN
F$DCB.ARS
      1659**DCL      1659--REDEF
F$DCB.ATTR
      1677**DCL      1678--REDEF
F$DCB.BFR
      1703**DCL      2046<<ASSIGN   2046>>ASSIGN   2048<<ASSIGN
F$DCB.BFR.BUFUP
      1703**DCL      2184<<ASSIGN   2430<<ASSIGN
F$DCB.BFR.DA
      1704**DCL      1984>>ASSIGN   1994>>ASSIGN   2036>>ASSIGN   2182<<ASSIGN   2196>>ASSIGN   2212<<ASSIGN
      2396>>ASSIGN   2428<<ASSIGN
F$DCB.BFR.SCRUB
      1703**DCL      2185<<ASSIGN   2214<<ASSIGN   2431<<ASSIGN
F$DCB.BFR1
      1704**DCL      2047<<ASSIGN   2047>>ASSIGN   2049<<ASSIGN
F$DCB.BFR1.CX
      1705**DCL      1847>>IF
F$DCB.BORROW
      1692**DCL      1692--REDEF    1692--REDEF    1692--REDEF
F$DCB.CFU$
      1693**DCL      1826>>ASSIGN
F$DCB.DCBNAME.L
      1706**DCL      1706--IMP-SIZ
F$DCB.EOMCHAR
      1663**DCL      1663--REDEF
F$DCB.FLDID
      1687**DCL      1687--REDEF
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:138  
F$DCB.FORM$
      1681**DCL      1681--REDEF
F$DCB.FSECT
      1697**DCL      1697--REDEF
F$DCB.FSN
      1674**DCL      1674--REDEF    1674--REDEF    1675--REDEF
F$DCB.GTYP
      1688**DCL      2084<<ASSIGN
F$DCB.HASH
      1696**DCL      2173>>ASSIGN   2202>>ASSIGN   2407>>ASSIGN
F$DCB.HEADER$
      1680**DCL      1680--REDEF
F$DCB.IORG
      1695**DCL      1823>>IF
F$DCB.IXTNSIZE
      1678**DCL      1678--REDEF
F$DCB.KEYL
      1676**DCL      1930<<ASSIGN   2520>>ASSIGN
F$DCB.LASTSTA$
      1668**DCL      1668--REDEF
F$DCB.LSLIDE
      1676**DCL      1827>>IF
F$DCB.LVL
      1693**DCL      1693--REDEF    1991<<ASSIGN   2093<<ASSIGN   2123<<ASSIGN   2254<<ASSIGN   2266<<ASSIGN
      2452<<ASSIGN   2461>>IF
F$DCB.MODCNT
      1698**DCL      1845>>IF
F$DCB.NAME.C
      1668**DCL      1668--REDEF
F$DCB.NOEOF
      1689**DCL      1689--REDEF
F$DCB.NRECS
      1679**DCL      1679--REDEF
F$DCB.NRECX
      1698**DCL      1698--REDEF
F$DCB.OHDR
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:139  
      1690**DCL      1690--REDEF
F$DCB.ORG
      1673**DCL      1673--REDEF    1850>>ASSIGN   2096>>IF
F$DCB.PRECNO
      1696**DCL      1696--REDEF
F$DCB.RCSZ
      1701**DCL      1701--REDEF
F$DCB.RES
      1669**DCL      1669--REDEF
F$DCB.SETX
      1681**DCL      1681--REDEF
F$DCB.SLIDE
      1663**DCL      1865<<ASSIGN
F$DCB.TAB$
      1680**DCL      1681--REDEF
F$DCB.TDA
      1695**DCL      1695--REDEF    1901<<ASSIGN   1904>>ASSIGN   1908<<ASSIGN   1928<<ASSIGN   1932>>ASSIGN
      1936<<ASSIGN   2086>>ASSIGN   2139<<ASSIGN
F$DCB.TDALVL
      1693**DCL      1827>>IF       1827>>IF       1902<<ASSIGN   1905>>ASSIGN   1909<<ASSIGN   1929<<ASSIGN
      1933>>ASSIGN   1937<<ASSIGN   2085>>IF       2141<<ASSIGN   2143<<ASSIGN   2452>>ASSIGN
F$DCB.WSN
      1670**DCL      1670--REDEF
FAF$GETGRAN
      1758**DCL-ENT  2291--CALL
FIRST$
      1789**DCL      2000<<ASSIGN   2002<<ASSIGN   2027>>ASSIGN   2525>>ASSIGN   2531>>IF       2537>>IF
FLAG IN PROCEDURE GETGRAN
      2245**DCL      2244--PROC     2288>>IF
FM$CFU.ACCTX
      1727**DCL      1727--REDEF
FM$CFU.ALTBLD
      1729**DCL      1897>>IF       1924>>IF
FM$CFU.FUN
      1726**DCL      1841<<ASSIGN   1841>>ASSIGN
FM$CFU.MODCNT
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:140  
      1728**DCL      1845>>IF
FM$CFU.SHARED
      1726**DCL      1827>>IF
FM$CFU.SLIDE
      1728**DCL      1827>>IF       1827>>IF       1863<<ASSIGN
FM$CFU.ULBLD
      1729**DCL      1827>>IF       1864<<ASSIGN
FM$CFU.USECNT
      1728**DCL      1827>>IF       1835>>IF
FM$GRAN
      1722**DCL      2172<<ASSIGN   2177--ASSIGN   2178--ASSIGN   2179--ASSIGN   2180--ASSIGN   2201<<ASSIGN
      2207--ASSIGN   2208--ASSIGN   2209--ASSIGN   2210--ASSIGN   2406<<ASSIGN   2419--ASSIGN   2420--ASSIGN
      2421--ASSIGN   2427--ASSIGN
FM$GRAN.AVAIL
      1723**DCL      2042<<ASSIGN   2179<<ASSIGN   2208<<ASSIGN   2386<<ASSIGN
FM$GRAN.BLINK
      1723**DCL      2135>>ASSIGN   2206<<ASSIGN   2409<<ASSIGN   2455>>DOWHILE  2457>>ASSIGN
FM$GRAN.ENDLVL
      1723**DCL      2189<<ASSIGN
FM$GRAN.FCEX
      1723**DCL      1997>>ASSIGN   2177<<ASSIGN   2209<<ASSIGN   2271>>ASSIGN   2420<<ASSIGN   2464>>ASSIGN
FM$GRAN.FLINK
      1723**DCL      1983>>DOUNTIL  1986>>ASSIGN   2195<<ASSIGN   2251>>ASSIGN   2395<<ASSIGN
FM$GRAN.KEYCNT
      1723**DCL      1993>>ASSIGN   2039<<ASSIGN   2128>>ASSIGN   2269>>IF       2462>>IF
FM$GRAN.LVL
      1722**DCL      2176<<ASSIGN   2205<<ASSIGN   2254>>ASSIGN   2259>>IF       2266>>ASSIGN   2410<<ASSIGN
FM$GRAN.NAVX
      1722**DCL      2041<<ASSIGN   2178<<ASSIGN   2207<<ASSIGN   2362<<ASSIGN   2362>>ASSIGN   2388<<ASSIGN
      2388>>ASSIGN
FM$GRAN.ORG
      1722**DCL      2175<<ASSIGN   2204<<ASSIGN   2411<<ASSIGN
FM$GRAN.STAMP.GMOD
      1722**DCL      2174<<ASSIGN   2203<<ASSIGN   2408<<ASSIGN
FM$GRAN.STAMP.HASH
      1722**DCL      2173<<ASSIGN   2202<<ASSIGN   2407<<ASSIGN
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:141  
FM$IRENT.KLB
      1738**DCL      1738--IMP-SIZ  2024<<ASSIGN   2274>>ASSIGN   2467>>ASSIGN   2514>>ASSIGN
FM$KEYENT.KLB
      1735**DCL      1735--IMP-SIZ  2026<<ASSIGN   2276>>ASSIGN   2469>>ASSIGN   2525>>ASSIGN   2526>>ASSIGN
FM$KEYTBL
      1741**DCL      1998>>ASSIGN   2000>>ASSIGN   2002>>ASSIGN   2005>>ASSIGN   2007>>ASSIGN   2033<<ASSIGN
      2040<<ASSIGN   2178--ASSIGN   2179--ASSIGN   2181<<ASSIGN   2207--ASSIGN   2208--ASSIGN   2211<<ASSIGN
      2272>>ASSIGN   2353>>ASSIGN   2356<<ASSIGN   2359<<ASSIGN   2375>>ASSIGN   2376<<ASSIGN   2384<<ASSIGN
      2419--ASSIGN   2422<<ASSIGN   2424--ASSIGN   2427--ASSIGN   2465>>ASSIGN
FM$KT
      1741**DCL      1741--REDEF
FM$ULSEG.DA
      1732**DCL      2036<<ASSIGN   2278>>ASSIGN   2471>>ASSIGN
FMC$CLR1
      1748**DCL-ENT  2183--CALL     2213--CALL     2429--CALL
FMD$FLSHBUF
      1750**DCL-ENT  1843--CALL     2045--CALL     2115--CALL     2116--CALL     2120--CALL     2170--CALL
      2220--CALL     2261--CALL     2402--CALL     2479--CALL
FMD$GETBUF
      1749**DCL-ENT  2171--CALL     2200--CALL     2405--CALL
FMD$REDBUF
      1752**DCL-ENT  1992--CALL     2105--CALL     2124--CALL     2255--CALL     2267--CALL     2453--CALL
      2458--CALL
FMD$RELBUF
      1751**DCL-ENT  1848--CALL
FMD$WRTBUF
      1753**DCL-ENT  2197--CALL     2397--CALL
FMR$L8
      1755**DCL-ENT  1834--CALL
FMR$SLIDE
      1757**DCL-ENT  2347--CALL     2372--CALL
FMR$U8
      1756**DCL-ENT  1837--CALL     1842--CALL
FM_FRZERO
      1746**DCL      2102>>ASSIGN
FM_GRAN
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:142  
      1804**DCL      2172>>ASSIGN   2201>>ASSIGN   2406>>ASSIGN
GETGRAN
      2244**PROC     2165--CALL     2191--CALL     2392--CALL
GETSPACE
      2331**PROC     2020--CALL
I
      1785**DCL      1846<<DOINDEX  1847>>IF       1848<>CALL     2030<<ASSIGN   2031>>IF       2033>>ASSIGN
      2219<<DOINDEX  2220<>CALL
I IN PROCEDURE GETSPACE
      2333**DCL      2340<<ASSIGN   2341>>IF       2342<<ASSIGN   2343>>IF       2344<<ASSIGN   2347<>CALL
      2350>>ASSIGN   2353>>ASSIGN   2360>>ASSIGN   2361>>ASSIGN   2362>>ASSIGN   2363>>ASSIGN   2369<<ASSIGN
      2370>>ASSIGN   2372<>CALL     2375>>ASSIGN   2381>>ASSIGN   2385>>ASSIGN   2387>>ASSIGN   2388>>ASSIGN
INDEX#
      1787**DCL      1896<<DOINDEX  1897>>IF       1897>>IF       1901>>ASSIGN   1902>>ASSIGN   1904>>ASSIGN
      1905>>ASSIGN   1923<<DOINDEX  1924>>IF       1924>>IF       1928>>ASSIGN   1929>>ASSIGN   1930>>ASSIGN
      1932>>ASSIGN   1933>>ASSIGN   2097>>ASSIGN   2099>>ASSIGN
INITKEYTBL
      1807**DCL      2181>>ASSIGN   2211>>ASSIGN   2422>>ASSIGN
INITUL
      2449**PROC     2091--CALL
IRKEYS.K.FDA
      1718**DCL      2099>>ASSIGN
IRKEYS.K.TDA
      1716**DCL      1901>>ASSIGN   1904<<ASSIGN   1908>>ASSIGN
IRKEYS.K.TDALVL
      1716**DCL      1902>>ASSIGN   1905<<ASSIGN   1909>>ASSIGN
IRKEYS.K.UNIQUE
      1717**DCL      1897>>IF
IRKEYS.NKEYS
      1715**DCL      1889>>ASSIGN
IRKEYS.UNIQUEBLD
      1715**DCL      1886>>IF
J IN PROCEDURE GETSPACE
      2334**DCL      2352<<DOINDEX  2353>>ASSIGN   2354>>IF       2355>>ASSIGN   2356>>ASSIGN   2374<<DOINDEX
      2375>>ASSIGN   2376>>ASSIGN   2378>>ASSIGN
JDCB$
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:143  
      1760**DCL      1659--IMP-PTR  1819<<ASSIGN   1823>>IF       1826>>ASSIGN   1827>>IF       1827>>IF
      1827>>IF       1845>>IF       1847>>IF       1850>>ASSIGN   1853>>IF       1865>>ASSIGN   1883>>ASSIGN
      1901>>ASSIGN   1902>>ASSIGN   1904>>ASSIGN   1905>>ASSIGN   1908>>ASSIGN   1909>>ASSIGN   1928>>ASSIGN
      1929>>ASSIGN   1930>>ASSIGN   1932>>ASSIGN   1933>>ASSIGN   1936>>ASSIGN   1937>>ASSIGN   1984>>ASSIGN
      1991>>ASSIGN   1994>>ASSIGN   2036>>ASSIGN   2046>>ASSIGN   2046>>ASSIGN   2047>>ASSIGN   2047>>ASSIGN
      2048>>ASSIGN   2049>>ASSIGN   2084>>ASSIGN   2085>>IF       2086>>ASSIGN   2093>>ASSIGN   2096>>IF
      2123>>ASSIGN   2139>>ASSIGN   2141>>ASSIGN   2143>>ASSIGN   2173>>ASSIGN   2182>>ASSIGN   2184>>ASSIGN
      2185>>ASSIGN   2196>>ASSIGN   2202>>ASSIGN   2212>>ASSIGN   2214>>ASSIGN   2254>>ASSIGN   2266>>ASSIGN
      2396>>ASSIGN   2407>>ASSIGN   2428>>ASSIGN   2430>>ASSIGN   2431>>ASSIGN   2452>>ASSIGN   2452>>ASSIGN
      2461>>IF       2520>>ASSIGN
KEY.TEXT
      1800**DCL      2027<<ASSIGN   2027>>ASSIGN
KEY.TEXT IN PROCEDURE MINCHECK
      2510**DCL      2531>>IF       2531>>IF       2537>>IF       2537>>IF
KEY$ IN PROCEDURE MINCHECK
      2504**DCL      2503--PROC     2514>>ASSIGN   2526>>ASSIGN   2531>>IF       2537>>IF
KEYCNT
      1774**DCL      1985>>DOWHILE  1993<<ASSIGN   2004>>IF       2005>>ASSIGN   2007>>ASSIGN   2051<<ASSIGN
      2107<<ASSIGN   2128<<ASSIGN
KEYCNTUP
      1775**DCL      1979<<ASSIGN   2019>>IF       2028<<ASSIGN   2028>>ASSIGN   2031>>IF       2032>>ASSIGN
      2033>>ASSIGN   2039>>ASSIGN   2337>>IF       2340>>ASSIGN   2352>>DOINDEX  2366>>IF       2366>>IF
      2374>>DOINDEX  2382>>IF       2423<<ASSIGN
KEYTBLSIZE
      1776**DCL      1980<<ASSIGN   2019>>IF       2337>>IF       2337>>IF       2346>>ASSIGN   2349>>IF
      2363<<ASSIGN   2363>>ASSIGN   2366>>IF       2366>>IF       2370>>ASSIGN   2381<<ASSIGN   2381>>ASSIGN
      2383>>ASSIGN   2424<<ASSIGN   2425>>ASSIGN
KLB
      1796**DCL      2274<<ASSIGN   2276<<ASSIGN   2277>>ASSIGN   2467<<ASSIGN   2469<<ASSIGN   2470>>ASSIGN
KTPTR$
      1778**DCL      1741--IMP-PTR  1741--IMP-PTR  1997<<ASSIGN   1998>>ASSIGN   2000>>ASSIGN   2002>>ASSIGN
      2005>>ASSIGN   2007>>ASSIGN   2180<<ASSIGN   2181>>ASSIGN   2210<<ASSIGN   2211>>ASSIGN
KTPTRUP$
      1791**DCL      2033>>ASSIGN   2040>>ASSIGN   2346>>ASSIGN   2353>>ASSIGN   2356>>ASSIGN   2359>>ASSIGN
      2370>>ASSIGN   2375>>ASSIGN   2376>>ASSIGN   2384>>ASSIGN   2421<<ASSIGN   2422>>ASSIGN
LAST$
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:144  
      1781**DCL      2005<<ASSIGN   2007<<ASSIGN   2013<>CALL     2050>>ASSIGN
LCDA
      1777**DCL      1984<<ASSIGN   1992<>CALL     1994<<ASSIGN   2456<<ASSIGN   2458<>CALL
LEN
      1782**DCL      1800--IMP-SIZ  2013<>CALL     2015>>IF       2016<<ASSIGN   2017>>ASSIGN   2024>>ASSIGN
      2026>>ASSIGN   2027>>ASSIGN   2027>>ASSIGN
LEN IN PROCEDURE MINCHECK
      2505**DCL      2503--PROC     2510--IMP-SIZ  2514<<ASSIGN   2529<<ASSIGN   2530>>DOWHILE  2530>>DOWHILE
      2531>>IF       2531>>IF       2534<<ASSIGN   2534>>ASSIGN   2537>>IF       2537>>IF       2538<<ASSIGN
      2540>>IF       2541<<ASSIGN
LEN1 IN PROCEDURE MINCHECK
      2506**DCL      2520<<ASSIGN   2521>>ASSIGN   2525<<ASSIGN   2530>>DOWHILE  2538>>ASSIGN   2540>>IF
      2541>>ASSIGN
LEN2 IN PROCEDURE MINCHECK
      2507**DCL      2521<<ASSIGN   2526<<ASSIGN   2530>>DOWHILE
LOOP IN PROCEDURE BLDLVL
      1983**LABEL    1989--EXIT
LOOP IN PROCEDURE BLDUL
      2112**LABEL    2131--EXIT
LOOP IN PROCEDURE MINCHECK
      2530**LABEL    2532--EXIT
LVL
      1764**DCL      1991>>ASSIGN   2081<<ASSIGN   2118>>IF       2122<<ASSIGN   2122>>ASSIGN   2123>>ASSIGN
      2143>>ASSIGN   2205>>ASSIGN   2410>>ASSIGN
MINCHECK
      2503**PROC     2010--CALL     2013--CALL
NAVX$
      1784**DCL      2022>>ASSIGN   2024>>ASSIGN   2026>>ASSIGN   2027>>ASSIGN   2030>>ASSIGN   2035<<ASSIGN
      2035>>ASSIGN   2036>>ASSIGN   2037<<ASSIGN   2037>>ASSIGN   2041>>ASSIGN   2361<<ASSIGN   2361>>ASSIGN
      2387<<ASSIGN   2387>>ASSIGN   2419<<ASSIGN
NGRANS
      1770**DCL      2108<<ASSIGN   2118>>IF       2126<<ASSIGN   2134>>IF       2432<<ASSIGN   2432>>ASSIGN
OLDLVL$
      1792**DCL      2251>>ASSIGN   2254>>ASSIGN   2255<>CALL     2259>>IF       2266>>ASSIGN   2267<>CALL
      2269>>IF       2271>>ASSIGN   2271>>ASSIGN   2272>>ASSIGN   2453<>CALL     2455>>DOWHILE  2457>>ASSIGN
      2458<>CALL     2462>>IF       2464>>ASSIGN   2464>>ASSIGN   2465>>ASSIGN
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:145  
OLDNXTFDA
      1793**DCL      2265>>ASSIGN   2278<<ASSIGN   2281<<ASSIGN   2471<<ASSIGN   2474<<ASSIGN   2476<<ASSIGN
OLDTDA
      1766**DCL      2086<<ASSIGN   2088<<ASSIGN   2090>>IF       2248>>IF       2250>>ASSIGN   2251<<ASSIGN
      2252>>IF       2255<>CALL     2265<<ASSIGN   2267<>CALL     2287<<ASSIGN   2453<>CALL     2456>>ASSIGN
      2457<<ASSIGN   2458<>CALL     2480<<ASSIGN
ORG
      1762**DCL      1850<<ASSIGN   1884>>IF       2023>>IF       2175>>ASSIGN   2204>>ASSIGN   2273>>IF
      2411>>ASSIGN   2466>>IF       2512>>IF       2518>>IF
PREVDA
      1794**DCL      2196<<ASSIGN   2206>>ASSIGN   2396<<ASSIGN   2401<<ASSIGN   2409>>ASSIGN   2413>>IF
PRLAST$
      1772**DCL      2009>>IF       2010<>CALL     2050<<ASSIGN   2110<<ASSIGN   2127<<ASSIGN
PRLEN
      1780**DCL      2010<>CALL     2012<<ASSIGN   2015>>IF       2016>>ASSIGN
SIZE
      1783**DCL      2017<<ASSIGN   2019>>IF       2035>>ASSIGN   2038>>ASSIGN   2043>>ASSIGN   2337>>IF
      2343>>IF       2344>>ASSIGN   2366>>IF       2369>>ASSIGN
SIZEUP
      1786**DCL      2043<<ASSIGN   2043>>ASSIGN   2340>>ASSIGN   2347<>CALL     2372<>CALL     2426<<ASSIGN
STARTLOOP IN PROCEDURE BLD_ALTKEY
      1880**DCL      1892<<ASSIGN   1894<<ASSIGN   1896>>DOINDEX  1919<<ASSIGN   1921<<ASSIGN   1923>>DOINDEX
T$ IN PROCEDURE GETGRAN
      2246**DCL      2271<<ASSIGN   2272<<ASSIGN   2272>>ASSIGN   2274>>ASSIGN   2276>>ASSIGN   2277<<ASSIGN
      2277>>ASSIGN   2278>>ASSIGN
T$ IN PROCEDURE GETSPACE
      2332**DCL      2346<<ASSIGN   2347<>CALL     2370<<ASSIGN   2372<>CALL
T$ IN PROCEDURE INITUL
      2450**DCL      2464<<ASSIGN   2465<<ASSIGN   2465>>ASSIGN   2467>>ASSIGN   2469>>ASSIGN   2470<<ASSIGN
      2470>>ASSIGN   2471>>ASSIGN
TDA
      1763**DCL      2080<<ASSIGN
TEMPTDA
      1773**DCL      2082<<ASSIGN   2135<<ASSIGN   2139>>ASSIGN   2140>>IF       2416<<ASSIGN
THISLVLFDA
      1788**DCL      2124<>CALL     2415<<ASSIGN
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:146  
WRD
      1801**DCL      2022<<ASSIGN
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:147  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMU$BLD File=FMU$MUL.:E05TSI                                  TUE 07/29/97 17:03 Page:148  
              MINI UREF LISTING

FMD$WRTSV    1754**DCL-ENT
FMU$BLD      46**PROC
FMU$BLDALT    1816**ENTRY

PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:149  
      866        1        /*T***********************************************************/
      867        2        /*T*                                                         */
      868        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      869        4        /*T*                                                         */
      870        5        /*T***********************************************************/
      871        6        /*F*     NAME:     FMU$ALTBLD
      872        7                 PURPOSE:  To rebuild alternate indexes on a close
      873        8        */
      874        9        /*D*     NAME:     FMU$ALTBLD
      875       10                 CALL:     CALL FMU$ALTBLD(CLOSEFPT);
      876       11                 INPUT:    CLOSEFPT
      877       12                 DESCRIPTION:
      878       13
      879       14                      If a user specifies LOAD=YES on a file with alternate
      880       15                 indexes when creating or updating a file, then the alternate
      881       16                 indexes are not built until the file is closed.  How this
      882       17                 is done is rather interesting.
      883       18
      884       19                      First, we wait until the file is almost, but not
      885       20                 quite closed.  About the only thing left to do is set
      886       21                 the bit saying we closed the file, and release the CFUS.
      887       22
      888       23                      Next, we check to make sure that we really want to
      889       24                 build the alternate indexes.  We don't build the alternate
      890       25                 indexes if we got here because of an "X" keyin, or if
      891       26                 someone else is using the file.  Next we store some
      892       27                 information in the CCBUF for later use, and save the DCB
      893       28                 pointer in the JIT.
      894       29
      895       30                      Now, JLU$MLINK is called to initiate a load and link
      896       31                 to ALTKEY.:SYS.  ALTKEY will rebuild the indexes using
      897       32                 the information stuffed into the CCBUF.  It will then
      898       33                 call FMQ$RELSTARF to update the information in the file's
      899       34                 FIT, and rebuild the upper levels.  As ALTKEY is run
      900       35                 down, the CFUS associated with this file will be
      901       36                 released.  Finally, the monitor LOAD and LINK process
      902       37                 will call FMP$ALTCLEANUP to reset the DCB bit that says
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:150  
      903       38                 the the DCB is open.
      904       39        */
      905       40                 %EJECT;
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:151  
      906       41        FMU$ALTBLD: PROC(CLOSEFPT);
      907       42               %INCLUDE CP_6_SUBS;
      908      582               %INCLUDE B$JIT;
      909     1185               %MACRO F$DCB(BASED=BASED);
      910     1186               %INCLUDE F$DCB;
      911     1235               %MEND;
      912     1236               %INCLUDE FM$MACROS;
      913     1611               %INCLUDE FK_DATA_C;
      914     1688               %INCLUDE F$CP6P_C;
      915     1699               %INCLUDE F$CP6V_C;
      916     1925        /* */
      917     1926               %FPT$CLOSE_P(FPTN=CLOSEFPT,STCLASS=,PFMT=PTR);
      918     1930               %FPT$CLOSE_V(BASED="BASED(CLOSEFPT.V_)");
      919     1939               %F$DCB(BASED="BASED(JDCB$)");
      920     1989               %FM$CFU(BASED="BASED(CFU$)");
      921     1995               %FK$CCBUF(STCLASS=" ");
      922     2017        /* */
      923     2018    1          DCL FMD$FLSHBUF ENTRY(1);
      924     2019    1          DCL JLU$MLINK ENTRY(3) ALTRET;
      925     2020    1          DCL FMR$L8 ENTRY;
      926     2021    1          DCL FMR$U8 ENTRY;
      927     2022    1          DCL FMP$ALTCLEANUP ENTRY;
      928     2023        /* */
      929     2024    1          DCL JDCB$ PTR;
      930     2025    1          DCL I SBIN;
      931     2026    1          DCL CFU$ PTR;
      932     2027        /* */
      933     2028    1          DCL B$JIT$ PTR SYMREF;
      934     2029    1          DCL OCI_BOOT UBIN SYMREF;
      935     2030        /* */
      936     2031    1          DCL NAME$ PTR CONSTANT INIT(ADDR(ALTKEY));
      937     2032    1          DCL 1 ALTKEY CONSTANT,
      938     2033    1               2 * UBIN(9) CALIGNED INIT(6),
      939     2034    1               2 * CHAR(0) CALIGNED INIT('ALTKEY');
      940     2035    1          DCL CLEANUP$ EPTR CONSTANT INIT(ENTADDR(FMP$ALTCLEANUP));
      941     2036        /* */
      942     2037    1          JDCB$=B$JIT.DCB$;
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:152  
      943     2038    1          CFU$=F$DCB.CFU$;
      944     2039    1          IF JDCB$ = DCBADDR(%M$STAR#) OR OCI_BOOT ~= 0 THEN
      945     2040    1             RETURN;
      946     2041
      947     2042    1          IF B$JIT.FRS & %RS_XKEY# THEN
      948     2043    1             RETURN;
      949     2044
      950     2045    1          IF F$DCB.FUN = %IN# OR FM$CFU.USECNT > 1 THEN
      951     2046    1             RETURN;
      952     2047
      953     2048    1          IF NOT FM$CFU.ALTBLD THEN
      954     2049    1             RETURN;
      955     2050
      956     2051    1          CALL FMR$L8;
      957     2052    1          IF FM$CFU.USECNT > 1 THEN
      958     2053    2             DO;   /* ONLY ONE USER ALLOWED */
      959     2054    2             CALL FMR$U8;
      960     2055    2             RETURN;
      961     2056    2             END;  /* ONLY ONE USER ALLOWED */
      962     2057    1          FM$CFU.FUN=FM$CFU.FUN+4;
      963     2058    1          CALL FMR$U8;
      964     2059
      965     2060    2          DO I=0 TO 4;
      966     2061    2             CALL FMD$FLSHBUF(I);
      967     2062    2          END;
      968     2063
      969     2064    1          CCBUF='0'B;
      970     2065    1          CCBUF.ALTKEY='ALTKEY (';
      971     2066    1          CCBUF.PAREN=')';
      972     2067    1          CCBUF.SIZE=SIZEC(CCBUF)-1;
      973     2068    1          CCBUF.CFU$=CFU$;
      974     2069    1          CCBUF.SETX=F$DCB.SETX;
      975     2070    1          IF B$JIT.ERR~='0'B THEN
      976     2071    1             CCBUF.CLOSERR=B$JIT.ERR | '000000400000'O; /* set MON bit */
      977     2072    1          CCBUF.RELG=FPT$CLOSE_V.OPER.RELG;
      978     2073    1          CCBUF.DELF=F$DCB.FFLG.DELF;
      979     2074    1          B$JIT.SAVEDCB$=JDCB$;
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:153  
      980     2075    1          B$JIT.CHECK_CFU = '1'B;
      981     2076
      982     2077    1          CALL JLU$MLINK(NAME$, ADDR(CCBUF), CLEANUP$);
      983     2078    1          RETURN;
      984     2079
      985     2080               /* This error is reported from ALTKEY, but it's extracted here
      986     2081                  so it will look like a monitor error and appear in the
      987     2082                  Monitor Services manual.                              */
      988     2083
      989     2084               /*E* ERROR:   FKA-E$DUPKEY2-E
      990     2085                    MESSAGE: Duplicates found on a key specified to be unique.
      991     2086                             Unique indicator for the key has been reset.
      992     2087               */
      993     2088
      994     2089    1          END FMU$ALTBLD;

PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:154  
--  Include file information  --

   F$CP6V_C.:E05TOU  is referenced.
   F$CP6P_C.:E05TOU  is referenced.
   FK_DATA_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure FMU$ALTBLD.

   Procedure FMU$ALTBLD requires 122 words for executable code.
   Procedure FMU$ALTBLD requires 18 words of local(AUTO) storage.

    No errors detected in file FMU$MUL.:E05TSI    .

PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:155  

 Object Unit name= FMU$ALTBLD                                 File name= FMU$MUL.:E05TOU
 UTS= JUL 29 '97 17:03:48.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      7      7  FMU$ALTBLD
    1   Proc  even  none   122    172  FMU$ALTBLD
    2  RoData even  none     3      3  FMU$ALTBLD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  FMU$ALTBLD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FMP$ALTCLEANUP
         yes           Std       0 FMR$L8
         yes           Std       1 FMD$FLSHBUF
 yes     yes           Std       3 JLU$MLINK
         yes           Std       0 FMR$U8
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:156  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                OCI_BOOT                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 ROSID
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:157  


      866        1        /*T***********************************************************/
      867        2        /*T*                                                         */
      868        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      869        4        /*T*                                                         */
      870        5        /*T***********************************************************/
      871        6        /*F*     NAME:     FMU$ALTBLD
      872        7                 PURPOSE:  To rebuild alternate indexes on a close
      873        8        */
      874        9        /*D*     NAME:     FMU$ALTBLD
      875       10                 CALL:     CALL FMU$ALTBLD(CLOSEFPT);
      876       11                 INPUT:    CLOSEFPT
      877       12                 DESCRIPTION:
      878       13
      879       14                      If a user specifies LOAD=YES on a file with alternate
      880       15                 indexes when creating or updating a file, then the alternate
      881       16                 indexes are not built until the file is closed.  How this
      882       17                 is done is rather interesting.
      883       18
      884       19                      First, we wait until the file is almost, but not
      885       20                 quite closed.  About the only thing left to do is set
      886       21                 the bit saying we closed the file, and release the CFUS.
      887       22
      888       23                      Next, we check to make sure that we really want to
      889       24                 build the alternate indexes.  We don't build the alternate
      890       25                 indexes if we got here because of an "X" keyin, or if
      891       26                 someone else is using the file.  Next we store some
      892       27                 information in the CCBUF for later use, and save the DCB
      893       28                 pointer in the JIT.
      894       29
      895       30                      Now, JLU$MLINK is called to initiate a load and link
      896       31                 to ALTKEY.:SYS.  ALTKEY will rebuild the indexes using
      897       32                 the information stuffed into the CCBUF.  It will then
      898       33                 call FMQ$RELSTARF to update the information in the file's
      899       34                 FIT, and rebuild the upper levels.  As ALTKEY is run
      900       35                 down, the CFUS associated with this file will be
      901       36                 released.  Finally, the monitor LOAD and LINK process
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:158  
      902       37                 will call FMP$ALTCLEANUP to reset the DCB bit that says
      903       38                 the the DCB is open.
      904       39        */
      905       40                 %EJECT;
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:159  
      906       41        FMU$ALTBLD: PROC(CLOSEFPT);

     41  1 000000   000000 700200 xent  FMU$ALTBLD   TSX0  ! X66_AUTO_1
         1 000001   000022 000001                    ZERO    18,1

      907       42               %INCLUDE CP_6_SUBS;
      908      582               %INCLUDE B$JIT;
      909     1185               %MACRO F$DCB(BASED=BASED);
      910     1186               %INCLUDE F$DCB;
      911     1235               %MEND;
      912     1236               %INCLUDE FM$MACROS;
      913     1611               %INCLUDE FK_DATA_C;
      914     1688               %INCLUDE F$CP6P_C;
      915     1699               %INCLUDE F$CP6V_C;
      916     1925        /* */
      917     1926               %FPT$CLOSE_P(FPTN=CLOSEFPT,STCLASS=,PFMT=PTR);
      918     1930               %FPT$CLOSE_V(BASED="BASED(CLOSEFPT.V_)");
      919     1939               %F$DCB(BASED="BASED(JDCB$)");
      920     1989               %FM$CFU(BASED="BASED(CFU$)");
      921     1995               %FK$CCBUF(STCLASS=" ");
      922     2017        /* */
      923     2018    1          DCL FMD$FLSHBUF ENTRY(1);
      924     2019    1          DCL JLU$MLINK ENTRY(3) ALTRET;
      925     2020    1          DCL FMR$L8 ENTRY;
      926     2021    1          DCL FMR$U8 ENTRY;
      927     2022    1          DCL FMP$ALTCLEANUP ENTRY;
      928     2023        /* */
      929     2024    1          DCL JDCB$ PTR;
      930     2025    1          DCL I SBIN;
      931     2026    1          DCL CFU$ PTR;
      932     2027        /* */
      933     2028    1          DCL B$JIT$ PTR SYMREF;
      934     2029    1          DCL OCI_BOOT UBIN SYMREF;
      935     2030        /* */
      936     2031    1          DCL NAME$ PTR CONSTANT INIT(ADDR(ALTKEY));
      937     2032    1          DCL 1 ALTKEY CONSTANT,
      938     2033    1               2 * UBIN(9) CALIGNED INIT(6),
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:160  
      939     2034    1               2 * CHAR(0) CALIGNED INIT('ALTKEY');
      940     2035    1          DCL CLEANUP$ EPTR CONSTANT INIT(ENTADDR(FMP$ALTCLEANUP));
      941     2036        /* */
      942     2037    1          JDCB$=B$JIT.DCB$;

   2037  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000232 236100                    LDQ     154,,PR0
         1 000004   200012 756100                    STQ     JDCB$,,AUTO

      943     2038    1          CFU$=F$DCB.CFU$;

   2038  1 000005   200012 471500                    LDP1    JDCB$,,AUTO
         1 000006   100066 236100                    LDQ     54,,PR1
         1 000007   200014 756100                    STQ     CFU$,,AUTO

      944     2039    1          IF JDCB$ = DCBADDR(%M$STAR#) OR OCI_BOOT ~= 0 THEN

   2039  1 000010   000000 473400 2                  LDP3    0
         1 000011   300000 474500                    LDP4    0,,PR3
         1 000012   200012 236100                    LDQ     JDCB$,,AUTO
         1 000013   400001 116100                    CMPQ    1,,PR4
         1 000014   000017 600000 1                  TZE     s:2040
         1 000015   000000 235000 xsym               LDA     OCI_BOOT
         1 000016   000020 600000 1                  TZE     s:2042

      945     2040    1             RETURN;

   2040  1 000017   000000 702200 xent               TSX2  ! X66_ARET

      946     2041
      947     2042    1          IF B$JIT.FRS & %RS_XKEY# THEN

   2042  1 000020   000314 236100                    LDQ     204,,PR0
         1 000021   000011 736000                    QLS     9
         1 000022   777000 376003                    ANQ     -512,DU
         1 000023   400000 376003                    ANQ     -131072,DU
         1 000024   000026 600000 1                  TZE     s:2045
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:161  

      948     2043    1             RETURN;

   2043  1 000025   000000 702200 xent               TSX2  ! X66_ARET

      949     2044
      950     2045    1          IF F$DCB.FUN = %IN# OR FM$CFU.USECNT > 1 THEN

   2045  1 000026   100032 236100                    LDQ     26,,PR1
         1 000027   000777 376003                    ANQ     511,DU
         1 000030   000002 116003                    CMPQ    2,DU
         1 000031   000036 600000 1                  TZE     s:2046
         1 000032   200014 475500                    LDP5    CFU$,,AUTO
         1 000033   500003 720100                    LXL0    3,,PR5
         1 000034   000002 100003                    CMPX0   2,DU
         1 000035   000037 602000 1                  TNC     s:2048

      951     2046    1             RETURN;

   2046  1 000036   000000 702200 xent               TSX2  ! X66_ARET

      952     2047
      953     2048    1          IF NOT FM$CFU.ALTBLD THEN

   2048  1 000037   500006 236100                    LDQ     6,,PR5
         1 000040   000004 316003                    CANQ    4,DU
         1 000041   000043 601000 1                  TNZ     s:2051

      954     2049    1             RETURN;

   2049  1 000042   000000 702200 xent               TSX2  ! X66_ARET

      955     2050
      956     2051    1          CALL FMR$L8;

   2051  1 000043   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000044   000000 701000 xent               TSX1    FMR$L8
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:162  
         1 000045   000000 011000                    NOP     0

      957     2052    1          IF FM$CFU.USECNT > 1 THEN

   2052  1 000046   200014 470500                    LDP0    CFU$,,AUTO
         1 000047   000003 720100                    LXL0    3,,PR0
         1 000050   000002 100003                    CMPX0   2,DU
         1 000051   000056 602000 1                  TNC     s:2057

      958     2053    2             DO;   /* ONLY ONE USER ALLOWED */

      959     2054    2             CALL FMR$U8;

   2054  1 000052   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000053   000000 701000 xent               TSX1    FMR$U8
         1 000054   000000 011000                    NOP     0

      960     2055    2             RETURN;

   2055  1 000055   000000 702200 xent               TSX2  ! X66_ARET

      961     2056    2             END;  /* ONLY ONE USER ALLOWED */
      962     2057    1          FM$CFU.FUN=FM$CFU.FUN+4;

   2057  1 000056   000000 236100                    LDQ     0,,PR0
         1 000057   000041 772000                    QRL     33
         1 000060   000004 036007                    ADLQ    4,DL
         1 000061   000041 736000                    QLS     33
         1 000062   000000 676100                    ERQ     0,,PR0
         1 000063   700000 376003                    ANQ     -32768,DU
         1 000064   000000 656100                    ERSQ    0,,PR0

      963     2058    1          CALL FMR$U8;

   2058  1 000065   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000066   000000 701000 xent               TSX1    FMR$U8
         1 000067   000000 011000                    NOP     0
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:163  

      964     2059
      965     2060    2          DO I=0 TO 4;

   2060  1 000070   200013 450100                    STZ     I,,AUTO

      966     2061    2             CALL FMD$FLSHBUF(I);

   2061  1 000071   200013 630500                    EPPR0   I,,AUTO
         1 000072   200016 450500                    STP0    CFU$+2,,AUTO
         1 000073   200016 630500                    EPPR0   CFU$+2,,AUTO
         1 000074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000075   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000076   000000 011000                    NOP     0

      967     2062    2          END;

   2062  1 000077   200013 054100                    AOS     I,,AUTO
         1 000100   200013 235100                    LDA     I,,AUTO
         1 000101   000004 115007                    CMPA    4,DL
         1 000102   000071 604400 1                  TMOZ    s:2061

      968     2063
      969     2064    1          CCBUF='0'B;

   2064  1 000103   000100 100400                    MLR     fill='000'O
         1 000104   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000105   200004 000027                    ADSC9   CCBUF,,AUTO              cn=0,n=23

      970     2065    1          CCBUF.ALTKEY='ALTKEY (';

   2065  1 000106   040100 100400                    MLR     fill='040'O
         1 000107   000004 000010 0                  ADSC9   CLEANUP$+1               cn=0,n=8
         1 000110   200004 200010                    ADSC9   CCBUF,,AUTO              cn=1,n=8

      971     2066    1          CCBUF.PAREN=')';

PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:164  
   2066  1 000111   051000 236007                    LDQ     20992,DL
         1 000112   200011 552110                    STBQ    CCBUF+5,'10'O,AUTO

      972     2067    1          CCBUF.SIZE=SIZEC(CCBUF)-1;

   2067  1 000113   026000 236003                    LDQ     11264,DU
         1 000114   200004 552140                    STBQ    CCBUF,'40'O,AUTO

      973     2068    1          CCBUF.CFU$=CFU$;

   2068  1 000115   000100 100500                    MLR     fill='000'O
         1 000116   200014 000004                    ADSC9   CFU$,,AUTO               cn=0,n=4
         1 000117   200006 200004                    ADSC9   CCBUF+2,,AUTO            cn=1,n=4

      974     2069    1          CCBUF.SETX=F$DCB.SETX;

   2069  1 000120   200012 470500                    LDP0    JDCB$,,AUTO
         1 000121   000100 101500                    MRL     fill='000'O
         1 000122   000051 400002                    ADSC9   41,,PR0                  cn=2,n=2
         1 000123   200007 200004                    ADSC9   CCBUF+3,,AUTO            cn=1,n=4

      975     2070    1          IF B$JIT.ERR~='0'B THEN

   2070  1 000124   000000 471400 xsym               LDP1    B$JIT$
         1 000125   100012 235100                    LDA     10,,PR1
         1 000126   000135 600000 1                  TZE     s:2072

      976     2071    1             CCBUF.CLOSERR=B$JIT.ERR | '000000400000'O; /* set MON bit */

   2071  1 000127   100012 236100                    LDQ     10,,PR1
         1 000130   000006 276000 0                  ORQ     CLEANUP$+3
         1 000131   200016 756100                    STQ     CFU$+2,,AUTO
         1 000132   000100 100500                    MLR     fill='000'O
         1 000133   200016 000004                    ADSC9   CFU$+2,,AUTO             cn=0,n=4
         1 000134   200010 200004                    ADSC9   CCBUF+4,,AUTO            cn=1,n=4

      977     2072    1          CCBUF.RELG=FPT$CLOSE_V.OPER.RELG;
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:165  

   2072  1 000135   200003 473500                    LDP3    @CLOSEFPT,,AUTO
         1 000136   300000 474500                    LDP4    0,,PR3
         1 000137   400000 236100                    LDQ     0,,PR4
         1 000140   000012 736000                    QLS     10
         1 000141   200011 676100                    ERQ     CCBUF+5,,AUTO
         1 000142   000400 376003                    ANQ     256,DU
         1 000143   200011 656100                    ERSQ    CCBUF+5,,AUTO

      978     2073    1          CCBUF.DELF=F$DCB.FFLG.DELF;

   2073  1 000144   000004 236100                    LDQ     4,,PR0
         1 000145   000006 772000                    QRL     6
         1 000146   200011 676100                    ERQ     CCBUF+5,,AUTO
         1 000147   000200 376003                    ANQ     128,DU
         1 000150   200011 656100                    ERSQ    CCBUF+5,,AUTO

      979     2074    1          B$JIT.SAVEDCB$=JDCB$;

   2074  1 000151   200012 236100                    LDQ     JDCB$,,AUTO
         1 000152   100251 756100                    STQ     169,,PR1

      980     2075    1          B$JIT.CHECK_CFU = '1'B;

   2075  1 000153   000400 236003                    LDQ     256,DU
         1 000154   100250 256100                    ORSQ    168,,PR1

      981     2076
      982     2077    1          CALL JLU$MLINK(NAME$, ADDR(CCBUF), CLEANUP$);

   2077  1 000155   200004 634500                    EPPR4   CCBUF,,AUTO
         1 000156   200016 454500                    STP4    CFU$+2,,AUTO
         1 000157   000001 236000 2                  LDQ     1
         1 000160   200021 756100                    STQ     CFU$+5,,AUTO
         1 000161   200016 635500                    EPPR5   CFU$+2,,AUTO
         1 000162   200020 455500                    STP5    CFU$+4,,AUTO
         1 000163   000002 236000 2                  LDQ     2
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:166  
         1 000164   200017 756100                    STQ     CFU$+3,,AUTO
         1 000165   200017 630500                    EPPR0   CFU$+3,,AUTO
         1 000166   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000167   000000 701000 xent               TSX1    JLU$MLINK
         1 000170   000000 011000                    NOP     0

      983     2078    1          RETURN;

   2078  1 000171   000000 702200 xent               TSX2  ! X66_ARET

NAME$
 Sect OctLoc
   0     000   000001 006000                                                    ....

ALTKEY
 Sect OctLoc
   0     001   006101 114124   113105 131***                                    .ALTKEY.

CLEANUP$
 Sect OctLoc
   0     003   000000 000000                                                    ....

(unnamed)
 Sect OctLoc
   0     004   101114 124113   105131 040050   000000 400000                    ALTKEY (....

(unnamed)
 Sect OctLoc
   2     000   000000 006003   000003 006000   000000 006000                    ............
      984     2079
      985     2080               /* This error is reported from ALTKEY, but it's extracted here
      986     2081                  so it will look like a monitor error and appear in the
      987     2082                  Monitor Services manual.                              */
      988     2083
      989     2084               /*E* ERROR:   FKA-E$DUPKEY2-E
      990     2085                    MESSAGE: Duplicates found on a key specified to be unique.
      991     2086                             Unique indicator for the key has been reset.
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:167  
      992     2087               */
      993     2088
      994     2089    1          END FMU$ALTBLD;

PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:168  
--  Include file information  --

   F$CP6V_C.:E05TOU  is referenced.
   F$CP6P_C.:E05TOU  is referenced.
   FK_DATA_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure FMU$ALTBLD.
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:169  

 **** Variables and constants ****

  ****  Section 000 RoData FMU$ALTBLD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c STRC(63)    r     1 ALTKEY                     3-0-0/w EPTR        r     1 CLEANUP$
     0-0-0/w PTR         r     1 NAME$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CLOSEFPT                  4-0-0/c STRC(207)   r     1 CCBUF
    14-0-0/w PTR         r     1 CFU$                      *0-0-0/w STRC(504)   r     1 CLOSEFPT
    13-0-0/w SBIN        r     1 I                         12-0-0/w PTR         r     1 JDCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 OCI_BOOT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/d STRC(144)   r     1 FPT$CLOSE_V


   Procedure FMU$ALTBLD requires 122 words for executable code.
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:170  
   Procedure FMU$ALTBLD requires 18 words of local(AUTO) storage.

    No errors detected in file FMU$MUL.:E05TSI    .
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:171  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:172  
          MINI XREF LISTING

ALTKEY
      2032**DCL      2031--DCLINIT
B$JIT.CHECK_CFU
      1079**DCL      2075<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      1003**DCL      1003--REDEF
B$JIT.DCB$
      1077**DCL      2037>>ASSIGN
B$JIT.ERR
       909**DCL      2070>>IF       2071>>ASSIGN
B$JIT.ERR.MID
       910**DCL       910--REDEF
B$JIT.FRS
      1105**DCL      2042>>IF
B$JIT.JRESPEAK
      1071**DCL      1072--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1180**DCL      1180--REDEF    1181--REDEF
B$JIT.PNR
      1084**DCL      1084--REDEF
B$JIT.SAVEDCB$
      1079**DCL      2074<<ASSIGN
B$JIT.TSLINE
      1178**DCL      1179--REDEF
B$JIT$
      2028**DCL       904--IMP-PTR  2037>>ASSIGN   2042>>IF       2070>>IF       2071>>ASSIGN   2074>>ASSIGN
      2075>>ASSIGN
CCBUF
      1996**DCL      2064<<ASSIGN   2067--ASSIGN   2077--CALL
CCBUF.ALTKEY
      1999**DCL      2065<<ASSIGN
CCBUF.CFU$
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:173  
      2001**DCL      2068<<ASSIGN
CCBUF.CLOSERR
      2005**DCL      2071<<ASSIGN
CCBUF.DELF
      2011**DCL      2073<<ASSIGN
CCBUF.PAREN
      2014**DCL      2066<<ASSIGN
CCBUF.RELG
      2009**DCL      2072<<ASSIGN
CCBUF.SETX
      2003**DCL      2069<<ASSIGN
CCBUF.SIZE
      1997**DCL      2067<<ASSIGN
CFU$
      2026**DCL      1990--IMP-PTR  2038<<ASSIGN   2045>>IF       2048>>IF       2052>>IF       2057>>ASSIGN
      2057>>ASSIGN   2068>>ASSIGN
CLEANUP$
      2035**DCL      2077<>CALL
CLOSEFPT
      1927**DCL        41--PROC
CLOSEFPT.SN_
      1927**DCL      1927--REDEF
CLOSEFPT.UTL_
      1927**DCL      1927--REDEF
CLOSEFPT.V_
      1927**DCL      1931--IMP-PTR  2072>>ASSIGN
F$DCB.ACTPOS
      1965**DCL      1965--REDEF
F$DCB.ARS
      1940**DCL      1940--REDEF
F$DCB.ATTR
      1958**DCL      1959--REDEF
F$DCB.BORROW
      1973**DCL      1973--REDEF    1973--REDEF    1973--REDEF
F$DCB.CFU$
      1974**DCL      2038>>ASSIGN
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:174  
F$DCB.DCBNAME.L
      1987**DCL      1987--IMP-SIZ
F$DCB.EOMCHAR
      1944**DCL      1944--REDEF
F$DCB.FFLG.DELF
      1945**DCL      2073>>ASSIGN
F$DCB.FLDID
      1968**DCL      1968--REDEF
F$DCB.FORM$
      1962**DCL      1962--REDEF
F$DCB.FSECT
      1978**DCL      1978--REDEF
F$DCB.FSN
      1955**DCL      1955--REDEF    1955--REDEF    1956--REDEF
F$DCB.FUN
      1954**DCL      2045>>IF
F$DCB.HEADER$
      1961**DCL      1961--REDEF
F$DCB.IXTNSIZE
      1959**DCL      1959--REDEF
F$DCB.LASTSTA$
      1949**DCL      1949--REDEF
F$DCB.LVL
      1974**DCL      1974--REDEF
F$DCB.NAME.C
      1949**DCL      1949--REDEF
F$DCB.NOEOF
      1970**DCL      1970--REDEF
F$DCB.NRECS
      1960**DCL      1960--REDEF
F$DCB.NRECX
      1979**DCL      1979--REDEF
F$DCB.OHDR
      1971**DCL      1971--REDEF
F$DCB.ORG
      1954**DCL      1954--REDEF
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:175  
F$DCB.PRECNO
      1977**DCL      1977--REDEF
F$DCB.RCSZ
      1982**DCL      1982--REDEF
F$DCB.RES
      1950**DCL      1950--REDEF
F$DCB.SETX
      1962**DCL      1962--REDEF    2069>>ASSIGN
F$DCB.TAB$
      1961**DCL      1962--REDEF
F$DCB.TDA
      1976**DCL      1976--REDEF
F$DCB.WSN
      1951**DCL      1951--REDEF
FM$CFU.ACCTX
      1991**DCL      1991--REDEF
FM$CFU.ALTBLD
      1993**DCL      2048>>IF
FM$CFU.FUN
      1990**DCL      2057<<ASSIGN   2057>>ASSIGN
FM$CFU.USECNT
      1992**DCL      2045>>IF       2052>>IF
FMD$FLSHBUF
      2018**DCL-ENT  2061--CALL
FMP$ALTCLEANUP
      2022**DCL-ENT  2035--DCLINIT
FMR$L8
      2020**DCL-ENT  2051--CALL
FMR$U8
      2021**DCL-ENT  2054--CALL     2058--CALL
FPT$CLOSE_V.EXPIRE
      1936**DCL      1936--REDEF
FPT$CLOSE_V.OPER.RELG
      1931**DCL      2072>>ASSIGN
FPT$CLOSE_V.TYPE
      1935**DCL      1935--REDEF
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:176  
FPT$CLOSE_V.XTNSIZE
      1932**DCL      1932--REDEF    1934--REDEF
I
      2025**DCL      2060<<DOINDEX  2061<>CALL
JDCB$
      2024**DCL      1940--IMP-PTR  2037<<ASSIGN   2038>>ASSIGN   2039>>IF       2045>>IF       2069>>ASSIGN
      2073>>ASSIGN   2074>>ASSIGN
JLU$MLINK
      2019**DCL-ENT  2077--CALL
NAME$
      2031**DCL      2077<>CALL
OCI_BOOT
      2029**DCL      2039>>IF
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:177  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMU$ALTBLD File=FMU$MUL.:E05TSI                               TUE 07/29/97 17:03 Page:178  
              MINI UREF LISTING

FMU$ALTBLD      41**PROC
