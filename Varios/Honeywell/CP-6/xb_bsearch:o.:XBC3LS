
 11:16 01/06/95  FILE=xb_bsearch:a.:XBC3TSI                                                              1    BMAP - B00     
                                         1  *T***********************************************************
                                         2  *T*                                                         *
                                         3  *T* Copyright (c) Bull HN Information Systems Inc., 1989    *
                                         4  *T*                                                         *
                                         5  *T***********************************************************
                                         6            LODM      xbi_std_ig
                                         7
                                         8            ENTDEF    bsearch
                                         9
                                        10            ENTREF    X66_AUTO_N
                                        11            ENTREF    X66_FARET
                                        12
                                        13  *D* PROTOTYPE: char *bsearch (char *key, *base; unsigned count, size; int (*compare)
                                        14  *,* DESCRIPTION: searches an array of count elements whose first element
                                        15  *,*              is pointed to by base, the size of each element (in
                                        16  *,*              characters) is specified by size. compare is a function
                                        17  *,*              that takes as arguements pointers to 2 elements and returns
                                        18  *,*              -1 if the first elements is less than the second, 1 if the
                                        19  *,*              first is greater than the second and 0 if they are equal.
                                        20  *,*              The array is assumed to be sorted in ascending order.
                                        21  *,*              bsearch() returns a pointer to the element of the array
                                        22  *,*              that matches teh element pointed to by key, or NULL if
                                        23  *,*              no match is found.
                                        24  *,*
                                        25  *,* If it was written in C it would look like this ...
                                        26  *,*
                                        27  *,* --> char *bsearch(  char *key, *base; unsigned count, size; int (*compare)() )
                                        28  *,* -->
                                        29  *,* --> {
                                        30  *,* -->
                                        31  *,* --> unsigned lwr, half;
                                        32  *,* --> int cmp;
                                        33  *,* -->
                                        34  *,* --> lwr = 0;
                                        35  *,* --> --count;
                                        36  *,* -->
                                        37  *,* --> for(;;)
 11:16 01/06/95  FILE=xb_bsearch:a.:XBC3TSI                                                              2    BMAP - B00     
                                        38  *,* -->         {
                                        39  *,* -->         half = lwr + ( (count - lwr) >> 1 );
                                        40  *,* -->         cmp = (*compare)( key, base + half * size
                                        41  *,* -->         if( cmp == 0 ) return( base + half * size );
                                        42  *,* -->         if( cmp < 0 )
                                        43  *,* -->                 {
                                        44  *,* -->                 if( half == lwr ) break;
                                        45  *,* -->                 count = half - 1;
                                        46  *,* -->                 }
                                        47  *,* -->         else
                                        48  *,* -->                 {
                                        49  *,* -->                 if( half == count ) break;
                                        50  *,* -->                 lwr = half + 1;
                                        51  *,* -->                 }
                                        52  *,* -->         }
                                        53  *,* -->
                                        54  *,* --> return( (char *) 0 );     /* not found */
                                        55  *,* --> }
                                        56  */
                                        57
          (0)000000000000               58  bsearch   EQU     *
                                        59
 0 000000  X 000000 7000 00             60            TSX0    X66_AUTO_N
   000001    000022 000005              61            ZERO    18,5
                                        62
             000000000003               63  key       EQU     3
             000000000004               64  base      EQU     4
             000000000005               65  count     EQU     5
             000000000006               66  size      EQU     6
             000000000007               67  compare   EQU     7
             000000000010               68  lwr       EQU     8
             000000000011               69  half      EQU     9
             000000000012               70  cmp       EQU     10
                                        71
   000002    2 00010 4501 00            72            STZ     lwr,,AUTO             lwr = 0
                                        73
   000003    000001 3350 07             74            LCA     1,DL                  --count
 11:16 01/06/95  FILE=xb_bsearch:a.:XBC3TSI                                                              3    BMAP - B00     
   000004    2 00005 0551 00            75            ASA     count,,AUTO
                                        76
          (0)000000000005               77  index     EQU     *                     for (;;) {
                                        78
   000005    2 00005 2351 00            79            LDA     count,,AUTO           half = lwr + ( (count-lwr) >> 1 )
   000006    2 00010 1351 00            80            SBLA    lwr,,AUTO
   000007    000001 7710 00             81            ARL     1
   000010    2 00010 0351 00            82            ADLA    lwr,,AUTO
   000011    2 00011 7551 00            83            STA     half,,AUTO
                                        84
   000012    2 00003 2351 00            85            LDA     key,,AUTO             cmp = (*compare)(key, base+(half*size))
   000013    2 00017 7551 00            86            STA     cmp+5,,AUTO
   000014    2 00011 2361 00            87            LDQ     half,,AUTO
   000015    2 00006 4021 00            88            MPY     size,,AUTO
   000016    000020 7360 00             89            QLS     16
   000017    2 00004 0361 00            90            ADLQ    base,,AUTO
   000020    2 00020 7561 00            91            STQ     cmp+6,,AUTO
   000021    2 00017 6305 00            92            EPPR0   cmp+5,,AUTO
   000022 (1)000000 6314 00             93            EPPR1   =524288
   000023    2 00007 4775 00            94            LDP7    compare,,AUTO
   000024    7 00000 7011 00            95            TSX1    0,,PR7
   000025    000000 2360 07             96            LDQ     0,DL
   000026    2 00012 7561 00            97            STQ     cmp,,AUTO
                                        98
   000027    000000 1160 07             99            CMPQ    0,DL                  if (cmp==0)
   000030 (0)000036 6010 00            100            TNZ     PT1
                                       101
   000031    2 00011 2361 00           102            LDQ     half,,AUTO            return( base+(half*size))
   000032    2 00006 4021 00           103            MPY     size,,AUTO
   000033    000020 7360 00            104            QLS     16
   000034    2 00004 0361 00           105            ADLQ    base,,AUTO
   000035  X 000000 7020 00            106            TSX2    X66_FARET
                                       107
          (0)000000000036              108  PT1       EQU     *
                                       109
   000036    2 00012 2341 00           110            SZN     cmp,,AUTO             if (cmp<0)
   000037 (0)000047 6050 00            111            TPL     PT2
 11:16 01/06/95  FILE=xb_bsearch:a.:XBC3TSI                                                              4    BMAP - B00     
                                       112
   000040    2 00011 2351 00           113            LDA     half,,AUTO            if (half==lwr) break
   000041    2 00010 1151 00           114            CMPA    lwr,,AUTO
   000042 (0)000056 6000 00            115            TZE     PT3
                                       116
   000043    2 00011 2351 00           117            LDA     half,,AUTO            count = half - 1
   000044    000001 1350 07            118            SBLA    1,DL
   000045    2 00005 7551 00           119            STA     count,,AUTO
   000046 (0)000005 7100 00            120            TRA     index
                                       121
          (0)000000000047              122  PT2       EQU     *
                                       123
   000047    2 00011 2351 00           124            LDA     half,,AUTO            if (half==count) break
   000050    2 00005 1151 00           125            CMPA    count,,AUTO
   000051 (0)000056 6000 00            126            TZE     PT3
                                       127
   000052    2 00011 2351 00           128            LDA     half,,AUTO            lwr = half + 1
   000053    000001 0350 07            129            ADLA    1,DL
   000054    2 00010 7551 00           130            STA     lwr,,AUTO
                                       131
   000055 (0)000005 7100 00            132            TRA     index
                                       133
          (0)000000000056              134  PT3       EQU     *
                                       135
   000056    006014 2360 07            136            LDQ     3084,DL               return ( (char *) 0 )
   000057  X 000000 7020 00            137            TSX2    X66_FARET
                                       138
                                       139            END
 1 000000    000002000000

  CONTROL SECTION TABLE

   0 CODE   EVEN  000060
   1 RODATA EVEN  000001 LITERALS

 11:16 01/06/95  FILE=xb_bsearch:a.:XBC3TSI   SYMBOL TABLE                                               5    BMAP - B00     
 00101000 000000000000 /*T*            *6
 00101000 000000000000 /*T***************************      *6
 41000000 000000000102 AUTO            *6        72        75        79        80        82        83
                                       85        86        87        88        90        91        92
                                       94        97       102       103       105       110       113
                                      114       117       119       124       125       128       130
 41000000 000000000004 BASE           *64        90       105
 52101000 000000000000 BSEARCH          8       *58
 41000000 000000000012 CMP            *70        86        91        92        97       110
 41000000 000000000007 COMPARE        *67        94
 41000000 000000000005 COUNT          *65        75        79       119       125
 41000000 000000000011 HALF           *69        83        87       102       113       117       124
                                      128
 41101000 000000000005 INDEX          *77       120       132
 41000000 000000000003 KEY            *63        85
 41000000 000000000010 LWR            *68        72        80        82       114       130
 41000000 000000000100 PR0             *6
 41000000 000000000101 PR1             *6
 41000000 000000000102 PR2             *6
 41000000 000000000103 PR3             *6
 41000000 000000000104 PR4             *6
 41000000 000000000105 PR5             *6
 41000000 000000000106 PR6             *6
 41000000 000000000107 PR7             *6        95
 41101000 000000000036 PT1            100      *108
 41101000 000000000047 PT2            111      *122
 41101000 000000000056 PT3            115       126      *134
 41000000 000000000006 SIZE           *66        88       103
 03201000 000000000000 X66_AUTO_N     *10        60
 03201001 000000000000 X66_FARET      *11       106       137

      26 SYMBOLS

       0 MACROS

    SYMBOL SPACE USED   375 WORDS
     MACRO SPACE USED     0 WORDS
 11:16 01/06/95  FILE=xb_bsearch:a.:XBC3TSI   SYMBOL TABLE                                               6    BMAP - B00     
   INPUT RECORDS READ   294
 STATEMENTS PROCESSED    94
         ELAPSED TIME  0:00.80
             CPU TIME     0.65 SEC.
        ASSEMBLY RATE  8677 STATEMENTS/CPU MIN.

      NO ERRORS

