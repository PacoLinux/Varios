

14:01 NOV 16 '97 xsl_select:h.:TCA2SI                                      1    
    1      /*M*    xsl_select:h    CP-6 version of select.h header file            */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DDA */
    8      #ifndef __xsl_select
    9      #define __xsl_select
   10
   11      struct timeval {
   12          long tv_sec;    /* seconds */
   13          long tv_usec;   /* and microseconds */
   14          };
   15
   16      /*
   17       * Select uses bit masks of file descriptors in longs.
   18       * These macros manipulate such bit fields (the filesystem macros use chars).
   19       * FD_SETSIZE may be defined by the user, but the default here
   20       * should be >= NOFILE (param.h).
   21       */
   22
   23      #define NBBY 9          /* number of bits in a byte */
   24      #ifndef FD_SETSIZE
   25      #define FD_SETSIZE 144
   26      #endif
   27
   28      typedef long fd_mask;
   29
   30      #define NFDBITS (sizeof(fd_mask) * NBBY)/* bits per mask */
   31      #ifndef howmany
   32      #define howmany(x,y)  (((x)+((y)-1))/(y))
   33      #endif
   34
   35      typedef struct fd_set {
   36          fd_mask fds_bits[howmany (FD_SETSIZE, NFDBITS)];
   37          } fd_set;
14:01 NOV 16 '97 xsl_select:h.:TCA2SI                                      2    
   38
   39      #define FD_SET(n,p)  ((p)->fds_bits[(n)/NFDBITS] |= (1<<(35-((n)%NFDBITS))))
   40      #define FD_CLR(n,p)  ((p)->fds_bits[(n)/NFDBITS] &= ~(1<<(35-((n)%NFDBITS))))
   41      #define FD_ISSET(n,p)  ((p)->fds_bits[(n)/NFDBITS] & (1<<(35-((n)%NFDBITS))))
   42      #define FD_ZERO(p)  ((void)(memset((char *)(p), (char)0, sizeof(*(p)))))
   43
   44      struct sel {
   45          int nfds;
   46          fd_set *rfds;
   47          fd_set *wfds;
   48          fd_set *xfds;
   49          struct timeval *timeout;
   50          };
   51
   52      #define MAXTFDS         3
   53      #define RFDS            0
   54      #define WFDS            1
   55      #define XFDS            2
   56
   57      extern int select( int numfds, fd_set *rdmask, fd_set *wrtmask, \
   58                      fd_set *excmask, struct timeval *timeout);
   59
   60      #endif

