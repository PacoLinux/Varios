VERSION E05

PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:1    
        1        1        /*M* FOT$CHK Access-checking subroutines for device FORMS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FOT$CHK
       10       10             PURPOSE:      To provide common access checking for device
       11       11                           forms to OUTSYM and the COOP.
       12       12             DESCRIPTION:  See the *F* comments for individual entries. */
       13       13        /**/
       14       14        /**/
       15       15        /* FOT$CHK: PROC (FS$FORM,WSN) ALTRET; */
       16       16
       17       17        FOT$DCHK: PROC (FS$FORM,WSN) ALTRET;
       18       18
       19       19
       20       20
       21       21
       22       22
       23       23        /**/
       24       24        /* INCLUDES */
       25       25        /**/
       26       26        %INCLUDE FS_SUPER_C;
       27      789        %INCLUDE FM$FIT;
       28     1010
       29     1011
       30     1012
       31     1013        /**/
       32     1014        /* PARAMETERS */
       33     1015        /**/
       34     1016        %FS$FORMREC (NAME=FS$FORM,STCLASS="");
       35     1087    1   DCL WSN CHAR(8) CALIGNED;
       36     1088
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:2    
       37     1089
       38     1090
       39     1091        /**/
       40     1092        /* BASED STRUCTURES */
       41     1093        /**/
       42     1094        %FS$ACC_INIT (NAME=FS$ACCESS,STCLASS=BASED);
       43     1108
       44     1109
       45     1110
       46     1111        /**/
       47     1112        /* AUTO */
       48     1113        /**/
       49     1114    1   DCL I UBIN WORD;
       50     1115    1   DCL IR REDEF I SBIN;
       51     1116    1   DCL DEVTYP CHAR(2) CALIGNED;
       52     1117    1   DCL WILD_CHARS CHAR(8) ALIGNED;
       53     1118    1   DCL WILD_X UBIN WORD;
       54     1119    1   DCL WILD_XC REDEF WILD_X CHAR(4);
       55     1120    1   DCL ACCS$ PTR;
       56     1121    1   DCL WILD_XP UBIN WORD;
       57     1122    1   DCL COMPARE_X UBIN WORD;
       58     1123    1   DCL COMPARE_XP UBIN WORD;
       59     1124        %EJECT;
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:3    
       60     1125        /**/
       61     1126        /*F* NAME:         FOT$DCHK
       62     1127             PURPOSE:      To see if a device type can use a specific FORM
       63     1128             DESCRIPTION:  TNAME is a 2-character device type, left-justified.
       64     1129                           FS$FORM is the forms record for the desired form.
       65     1130                           The routine returns if the device type can use
       66     1131                           that form, ALTRETs else. */
       67     1132        /**/
       68     1133        /* FOT$DCHK: ENTRY (FS$FORM,WSN) ALTRET; */
       69     1134        /**/
       70     1135    1         DEVTYP=WSN;
       71     1136    1         IF DEVTYP = 'LP' THEN
       72     1137    2           DO;
       73     1138    2           IF FS$FORM.LGLTYPS.LPOK = '0'B THEN ALTRETURN;
       74     1139    2           RETURN;
       75     1140    2           END;
       76     1141    1         ELSE
       77     1142    2           DO;
       78     1143    2           IF FS$FORM.LGLTYPS.ELSOK THEN RETURN;
       79     1144    2           IF FS$FORM.LGLTYPS.ONEOK
       80     1145    2           AND DEVTYP = FS$FORM.LGLTYPS.LTYP THEN RETURN;
       81     1146    2           ALTRETURN;
       82     1147    2           END;
       83     1148        %EJECT;
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:4    
       84     1149        /**/
       85     1150        /*F* NAME:         FOT$TCHK
       86     1151             PURPOSE:      To check legality of a device FORM at a TERMINAL
       87     1152             DESCRIPTION:  TNAME is the terminal name, FS$FORM is the forms
       88     1153                           record for the desired form.  The routine returns
       89     1154                           if that form is legal at terminal TNAME, and
       90     1155                           ALTRETs else. */
       91     1156        /**/
       92     1157    1   FOT$TCHK: ENTRY (FS$FORM,WSN) ALTRET;
       93     1158        /**/
       94     1159    1         IF FS$FORM.ACCSDISP = 0 THEN RETURN;
       95     1160    1         ACCS$=PINCRW(ADDR(FS$FORM),FS$FORM.ACCSDISP);
       96     1161    1         IF ACCS$->FS$ACCESS.TNAMES = 0 THEN RETURN;
       97     1162    2           DO IR = 0 TO ACCS$->FS$ACCESS.TNAMES-1;
       98     1163    2           WILD_CHARS=ACCS$->FS$ACCESS.LIST(I);
       99     1164                %WILD_COMPARE (NO_MATCH="GOTO NOTIT",COMPARE_CHARS=WSN);
      100     1235    2           RETURN;
      101     1236    2   NOTIT:  ;
      102     1237    2           END;
      103     1238    1         ALTRETURN;
      104     1239        /**/
      105     1240        /**/
      106     1241    1   END FOT$DCHK;

PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:5    
--  Include file information  --

   FM$FIT.:E05TOU  is referenced.
   FS_SUPER_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FOT$DCHK.

   Procedure FOT$DCHK requires 137 words for executable code.
   Procedure FOT$DCHK requires 16 words of local(AUTO) storage.

    No errors detected in file FOT$CHK.:E05TSI    .

PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:6    

 Object Unit name= FOT$DCHK                                   File name= FOT$CHK.:E05TOU
 UTS= JUL 29 '97 17:15:36.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  FOT$DCHK
    1   Proc  even  none   137    211  FOT$DCHK
    2  RoData even  none     1      1  FOT$DCHK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  FOT$DCHK
     1     33          yes     yes      Std        2  FOT$TCHK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:7    


        1        1        /*M* FOT$CHK Access-checking subroutines for device FORMS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FOT$CHK
       10       10             PURPOSE:      To provide common access checking for device
       11       11                           forms to OUTSYM and the COOP.
       12       12             DESCRIPTION:  See the *F* comments for individual entries. */
       13       13        /**/
       14       14        /**/
       15       15        /* FOT$CHK: PROC (FS$FORM,WSN) ALTRET; */
       16       16
       17       17        FOT$DCHK: PROC (FS$FORM,WSN) ALTRET;

     17  1 000000   000000 700200 xent  FOT$DCHK     TSX0  ! X66_AUTO_2
         1 000001   000020 000002                    ZERO    16,2

       18       18
       19       19
       20       20
       21       21
       22       22
       23       23        /**/
       24       24        /* INCLUDES */
       25       25        /**/
       26       26        %INCLUDE FS_SUPER_C;
       27      789        %INCLUDE FM$FIT;
       28     1010
       29     1011
       30     1012
       31     1013        /**/
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:8    
       32     1014        /* PARAMETERS */
       33     1015        /**/
       34     1016        %FS$FORMREC (NAME=FS$FORM,STCLASS="");
       35     1087    1   DCL WSN CHAR(8) CALIGNED;
       36     1088
       37     1089
       38     1090
       39     1091        /**/
       40     1092        /* BASED STRUCTURES */
       41     1093        /**/
       42     1094        %FS$ACC_INIT (NAME=FS$ACCESS,STCLASS=BASED);
       43     1108
       44     1109
       45     1110
       46     1111        /**/
       47     1112        /* AUTO */
       48     1113        /**/
       49     1114    1   DCL I UBIN WORD;
       50     1115    1   DCL IR REDEF I SBIN;
       51     1116    1   DCL DEVTYP CHAR(2) CALIGNED;
       52     1117    1   DCL WILD_CHARS CHAR(8) ALIGNED;
       53     1118    1   DCL WILD_X UBIN WORD;
       54     1119    1   DCL WILD_XC REDEF WILD_X CHAR(4);
       55     1120    1   DCL ACCS$ PTR;
       56     1121    1   DCL WILD_XP UBIN WORD;
       57     1122    1   DCL COMPARE_X UBIN WORD;
       58     1123    1   DCL COMPARE_XP UBIN WORD;
       59     1124        %EJECT;
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:9    
       60     1125        /**/
       61     1126        /*F* NAME:         FOT$DCHK
       62     1127             PURPOSE:      To see if a device type can use a specific FORM
       63     1128             DESCRIPTION:  TNAME is a 2-character device type, left-justified.
       64     1129                           FS$FORM is the forms record for the desired form.
       65     1130                           The routine returns if the device type can use
       66     1131                           that form, ALTRETs else. */
       67     1132        /**/
       68     1133        /* FOT$DCHK: ENTRY (FS$FORM,WSN) ALTRET; */
       69     1134        /**/
       70     1135    1         DEVTYP=WSN;

   1135  1 000002   200004 470500                    LDP0    @WSN,,AUTO
         1 000003   040100 100500                    MLR     fill='040'O
         1 000004   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         1 000005   200006 000002                    ADSC9   DEVTYP,,AUTO             cn=0,n=2

       71     1136    1         IF DEVTYP = 'LP' THEN

   1136  1 000006   200006 220100                    LDX0    DEVTYP,,AUTO
         1 000007   000000 100000 0                  CMPX0   0
         1 000010   000017 601000 1                  TNZ     s:1143

       72     1137    2           DO;

       73     1138    2           IF FS$FORM.LGLTYPS.LPOK = '0'B THEN ALTRETURN;

   1138  1 000011   200003 471500                    LDP1    @FS$FORM,,AUTO
         1 000012   100004 236100                    LDQ     4,,PR1
         1 000013   000400 316003                    CANQ    256,DU
         1 000014   000016 601000 1                  TNZ     s:1139

   1138  1 000015   000000 702200 xent               TSX2  ! X66_AALT

       74     1139    2           RETURN;

   1139  1 000016   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:10   

       75     1140    2           END;
       76     1141    1         ELSE
       77     1142    2           DO;

       78     1143    2           IF FS$FORM.LGLTYPS.ELSOK THEN RETURN;

   1143  1 000017   200003 471500                    LDP1    @FS$FORM,,AUTO
         1 000020   100004 236100                    LDQ     4,,PR1
         1 000021   000100 316003                    CANQ    64,DU
         1 000022   000024 600000 1                  TZE     s:1144

   1143  1 000023   000000 702200 xent               TSX2  ! X66_ARET

       79     1144    2           IF FS$FORM.LGLTYPS.ONEOK

   1144  1 000024   000040 316003                    CANQ    32,DU
         1 000025   000032 600000 1                  TZE     s:1146
         1 000026   100004 721100                    LXL1    4,,PR1
         1 000027   200006 101100                    CMPX1   DEVTYP,,AUTO
         1 000030   000032 601000 1                  TNZ     s:1146

       80     1145    2           AND DEVTYP = FS$FORM.LGLTYPS.LTYP THEN RETURN;

   1145  1 000031   000000 702200 xent               TSX2  ! X66_ARET

       81     1146    2           ALTRETURN;

   1146  1 000032   000000 702200 xent               TSX2  ! X66_AALT

       82     1147    2           END;
       83     1148        %EJECT;
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:11   
       84     1149        /**/
       85     1150        /*F* NAME:         FOT$TCHK
       86     1151             PURPOSE:      To check legality of a device FORM at a TERMINAL
       87     1152             DESCRIPTION:  TNAME is the terminal name, FS$FORM is the forms
       88     1153                           record for the desired form.  The routine returns
       89     1154                           if that form is legal at terminal TNAME, and
       90     1155                           ALTRETs else. */
       91     1156        /**/
       92     1157    1   FOT$TCHK: ENTRY (FS$FORM,WSN) ALTRET;

   1157  1 000033   000000 700200 xent  FOT$TCHK     TSX0  ! X66_AUTO_2
         1 000034   000020 000002                    ZERO    16,2

       93     1158        /**/
       94     1159    1         IF FS$FORM.ACCSDISP = 0 THEN RETURN;

   1159  1 000035   200003 470500                    LDP0    @FS$FORM,,AUTO
         1 000036   000002 720100                    LXL0    2,,PR0
         1 000037   000041 601000 1                  TNZ     s:1160

   1159  1 000040   000000 702200 xent               TSX2  ! X66_ARET

       95     1160    1         ACCS$=PINCRW(ADDR(FS$FORM),FS$FORM.ACCSDISP);

   1160  1 000041   000000 636010                    EAQ     0,X0
         1 000042   200003 036100                    ADLQ    @FS$FORM,,AUTO
         1 000043   200012 756100                    STQ     ACCS$,,AUTO

       96     1161    1         IF ACCS$->FS$ACCESS.TNAMES = 0 THEN RETURN;

   1161  1 000044   200012 471500                    LDP1    ACCS$,,AUTO
         1 000045   000100 100500                    MLR     fill='000'O
         1 000046   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 000047   200016 000004                    ADSC9   COMPARE_XP+1,,AUTO       cn=0,n=4
         1 000050   200016 236100                    LDQ     COMPARE_XP+1,,AUTO
         1 000051   000000 116003                    CMPQ    0,DU
         1 000052   000054 601000 1                  TNZ     s:1162
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:12   

   1161  1 000053   000000 702200 xent               TSX2  ! X66_ARET

       97     1162    2           DO IR = 0 TO ACCS$->FS$ACCESS.TNAMES-1;

   1162  1 000054   200005 450100                    STZ     I,,AUTO
         1 000055   000200 710000 1                  TRA     NOTIT+1

       98     1163    2           WILD_CHARS=ACCS$->FS$ACCESS.LIST(I);

   1163  1 000056   200005 235100                    LDA     I,,AUTO
         1 000057   000003 735000                    ALS     3
         1 000060   200012 470500                    LDP0    ACCS$,,AUTO
         1 000061   040100 100505                    MLR     fill='040'O
         1 000062   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8
         1 000063   200007 000010                    ADSC9   WILD_CHARS,,AUTO         cn=0,n=8

       99     1164                %WILD_COMPARE (NO_MATCH="GOTO NOTIT",COMPARE_CHARS=WSN);

   1182  1 000064   200007 236100                    LDQ     WILD_CHARS,,AUTO
         1 000065   200011 756100                    STQ     WILD_X,,AUTO

   1183  1 000066   200011 236100                    LDQ     WILD_X,,AUTO
         1 000067   000001 376000 0                  ANQ     1
         1 000070   000002 116000 0                  CMPQ    2
         1 000071   000077 601000 1                  TNZ     s:1197

   1184  1 000072   000003 236007                    LDQ     3,DL
         1 000073   200011 756100                    STQ     WILD_X,,AUTO

   1185  1 000074   000002 235007                    LDA     2,DL
         1 000075   200013 755100                    STA     WILD_XP,,AUTO

   1186  1 000076   000102 710000 1                  TRA     s:1200

   1197  1 000077   200011 450100                    STZ     WILD_X,,AUTO

PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:13   
   1198  1 000100   000010 236007                    LDQ     8,DL
         1 000101   200013 756100                    STQ     WILD_XP,,AUTO

   1200  1 000102   200014 450100                    STZ     COMPARE_X,,AUTO

   1201  1 000103   200015 450100                    STZ     COMPARE_XP,,AUTO

   1205  1 000104   000157 710000 1                  TRA     s:1230

   1207  1 000105   200011 235100                    LDA     WILD_X,,AUTO
         1 000106   000010 115007                    CMPA    8,DL
         1 000107   000116 603000 1                  TRC     s:1211
         1 000110   040000 106505                    CMPC    fill='040'O
         1 000111   200007 000001                    ADSC9   WILD_CHARS,A,AUTO        cn=0,n=1
         1 000112   000000 000001 2                  ADSC9   0                        cn=0,n=1
         1 000113   000116 601000 1                  TNZ     s:1211

   1208  1 000114   200013 755100                    STA     WILD_XP,,AUTO

   1209  1 000115   000153 710000 1                  TRA     s:1229

   1211  1 000116   200013 236100                    LDQ     WILD_XP,,AUTO
         1 000117   000001 036007                    ADLQ    1,DL
         1 000120   200011 116100                    CMPQ    WILD_X,,AUTO
         1 000121   000124 601000 1                  TNZ     s:1212

   1211  1 000122   200014 235100                    LDA     COMPARE_X,,AUTO
         1 000123   200015 755100                    STA     COMPARE_XP,,AUTO

   1212  1 000124   200011 235100                    LDA     WILD_X,,AUTO
         1 000125   000010 115007                    CMPA    8,DL
         1 000126   000141 603000 1                  TRC     s:1216
         1 000127   200014 235100                    LDA     COMPARE_X,,AUTO
         1 000130   000010 115007                    CMPA    8,DL
         1 000131   000141 603000 1                  TRC     s:1216
         1 000132   200011 235100                    LDA     WILD_X,,AUTO
         1 000133   200004 470500                    LDP0    @WSN,,AUTO
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:14   
         1 000134   200014 236100                    LDQ     COMPARE_X,,AUTO
         1 000135   040106 106505                    CMPC    fill='040'O
         1 000136   200007 000001                    ADSC9   WILD_CHARS,A,AUTO        cn=0,n=1
         1 000137   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 000140   000151 600000 1                  TZE     s:1227

   1216  1 000141   200013 235100                    LDA     WILD_XP,,AUTO
         1 000142   000010 115007                    CMPA    8,DL
         1 000143   000177 600000 1                  TZE     NOTIT
         1 000144   200015 236100                    LDQ     COMPARE_XP,,AUTO
         1 000145   000010 116007                    CMPQ    8,DL
         1 000146   000177 600000 1                  TZE     NOTIT

   1218  1 000147   200011 755100                    STA     WILD_X,,AUTO

   1222  1 000150   200014 756100                    STQ     COMPARE_X,,AUTO

   1227  1 000151   000001 036007                    ADLQ    1,DL
         1 000152   200014 756100                    STQ     COMPARE_X,,AUTO

   1229  1 000153   000010 115007                    CMPA    8,DL
         1 000154   000157 603000 1                  TRC     s:1230

   1229  1 000155   000001 035007                    ADLA    1,DL
         1 000156   200011 755100                    STA     WILD_X,,AUTO

   1230  1 000157   200011 235100                    LDA     WILD_X,,AUTO
         1 000160   000010 115007                    CMPA    8,DL
         1 000161   000166 603000 1                  TRC     s:1230+7
         1 000162   040000 106505                    CMPC    fill='040'O
         1 000163   200007 000001                    ADSC9   WILD_CHARS,A,AUTO        cn=0,n=1
         1 000164   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000165   000105 601000 1                  TNZ     s:1207
         1 000166   200014 236100                    LDQ     COMPARE_X,,AUTO
         1 000167   000010 116007                    CMPQ    8,DL
         1 000170   000176 603000 1                  TRC     s:1235
         1 000171   200004 470500                    LDP0    @WSN,,AUTO
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:15   
         1 000172   040000 106506                    CMPC    fill='040'O
         1 000173   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 000174   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000175   000105 601000 1                  TNZ     s:1207

      100     1235    2           RETURN;

   1235  1 000176   000000 702200 xent               TSX2  ! X66_ARET

   1229  1 000177                       NOTIT        null
      101     1236    2   NOTIT:  ;
      102     1237    2           END;

   1237  1 000177   200005 054100                    AOS     I,,AUTO
         1 000200   200012 470500                    LDP0    ACCS$,,AUTO
         1 000201   000100 100500                    MLR     fill='000'O
         1 000202   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 000203   200016 000004                    ADSC9   COMPARE_XP+1,,AUTO       cn=0,n=4
         1 000204   200016 236100                    LDQ     COMPARE_XP+1,,AUTO
         1 000205   000056 604000 1                  TMI     s:1163
         1 000206   200005 116100                    CMPQ    I,,AUTO
         1 000207   000056 605400 1                  TPNZ    s:1163

      103     1238    1         ALTRETURN;

   1238  1 000210   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   0     000   114120 040040   737737 737777   101114 114040                    LP  ....ALL

(unnamed)
 Sect OctLoc
   2     000   077040 040040                                                    ?
      104     1239        /**/
      105     1240        /**/
      106     1241    1   END FOT$DCHK;
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:16   

PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:17   
--  Include file information  --

   FM$FIT.:E05TOU  is referenced.
   FS_SUPER_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FOT$DCHK.
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:18   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FS$FORM                   4-0-0/w PTR         r     1 @WSN
    12-0-0/w PTR         r     1 ACCS$                     14-0-0/w UBIN        r     1 COMPARE_X
    15-0-0/w UBIN        r     1 COMPARE_XP                 6-0-0/c CHAR(2)     r     1 DEVTYP
    *0-0-0/w STRC(3186)  r     1 FS$FORM                    5-0-0/w UBIN        r     1 I
     5-0-0/w SBIN        r     1 IR                         7-0-0/w CHAR(8)     r     1 WILD_CHARS
    11-0-0/w UBIN        r     1 WILD_X                    11-0-0/w CHAR(4)     r     1 WILD_XC
    13-0-0/w UBIN        r     1 WILD_XP                   *0-0-0/c CHAR(8)     r     1 WSN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(108)   r     1 FS$ACCESS


   Procedure FOT$DCHK requires 137 words for executable code.
   Procedure FOT$DCHK requires 16 words of local(AUTO) storage.

    No errors detected in file FOT$CHK.:E05TSI    .
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:20   
          MINI XREF LISTING

ACCS$
      1120**DCL      1160<<ASSIGN   1161>>IF       1162>>DOINDEX  1163>>ASSIGN
COMPARE_X
      1122**DCL      1200<<ASSIGN   1205>>DOWHILE  1205>>DOWHILE  1211>>ASSIGN   1212>>IF       1212>>IF
      1222<<ASSIGN   1227<<ASSIGN   1227>>ASSIGN
COMPARE_XP
      1123**DCL      1201<<ASSIGN   1211<<ASSIGN   1216>>IF       1222>>ASSIGN
DEVTYP
      1116**DCL      1135<<ASSIGN   1136>>IF       1144>>IF
FS$ACCESS.LIST
      1100**DCL      1163>>ASSIGN
FS$ACCESS.TNAMES
      1099**DCL      1161>>IF       1162>>DOINDEX
FS$FORM
      1027**DCL        17--PROC     1157--ENTRY    1160--ASSIGN
FS$FORM.ACCSDISP
      1031**DCL      1159>>IF       1160>>ASSIGN
FS$FORM.CHAINS
      1075**DCL      1085--REDEF
FS$FORM.LGLTYPS.ELSOK
      1046**DCL      1143>>IF
FS$FORM.LGLTYPS.LPOK
      1044**DCL      1138>>IF
FS$FORM.LGLTYPS.LTYP
      1049**DCL      1144>>IF
FS$FORM.LGLTYPS.ONEOK
      1047**DCL      1144>>IF
I
      1114**DCL      1115--REDEF    1163>>ASSIGN
IR
      1115**DCL      1162<<DOINDEX
NOTIT
PL6.E3A0      #001=FOT$DCHK File=FOT$CHK.:E05TSI                                 TUE 07/29/97 17:15 Page:21   
      1229**LABEL    1217--GOTO
WILD_CHARS
      1117**DCL      1163<<ASSIGN   1182>>ASSIGN   1198--ASSIGN   1205--DOWHILE  1205>>DOWHILE  1207--IF
      1207>>IF       1212--IF       1212>>IF       1216--IF       1229--IF
WILD_X
      1118**DCL      1119--REDEF    1183>>IF       1184<<ASSIGN   1197<<ASSIGN   1205>>DOWHILE  1205>>DOWHILE
      1207>>IF       1207>>IF       1208>>ASSIGN   1211>>IF       1212>>IF       1212>>IF       1218<<ASSIGN
      1229>>IF       1229<<ASSIGN   1229>>ASSIGN
WILD_XC
      1119**DCL      1182<<ASSIGN
WILD_XP
      1121**DCL      1185<<ASSIGN   1198<<ASSIGN   1208<<ASSIGN   1211>>IF       1216>>IF       1218>>ASSIGN
WSN
      1087**DCL        17--PROC     1135>>ASSIGN   1157--ENTRY    1205--DOWHILE  1205>>DOWHILE  1212--IF
      1212>>IF       1216--IF
