VERSION E05

PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:1    
        1        1        /*M* JPT$SUBR Contains modules concerned with error reporting */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8        JPT$REPORT: PROC (ERR_MSG);
        9        9        /*P*    NAME:       JPT$REPORT
       10       10                PURPOSE: To report errors to the operator.
       11       11        */
       12       12        /***** Include files *****/
       13       13          %INCLUDE CP_6;
       14       94          %INCLUDE CP_6_SUBS;
       15      634          %INCLUDE AS_SUPER_C;
       16     1069          %INCLUDE JP_SUBS_C;
       17     1094          %INCLUDE KL_SUPER_C;
       18     3996          %INCLUDE OC_MESSHD_C;
       19     4049          %INCLUDE OC_SUBS_C;
       20     4780          %INCLUDE JP_DATA_R;
       21     5325        /***** Fpts *****/
       22     5326          %FPT_WRITE (FPTN=OC_MSG,STCLASS=SYMREF);
       23     5357          %FPT_UNFID (TEXTFID = OC_TEXT_ERROR.TEXT,LEN = FID_LEN,STCLASS = STATIC);
       24     5375        /***** Keyin msgs *****/
       25     5376          /* Submessages for code JP_ERRMSG# ...
       26     5377             1) PRESCAN error : ERRORMESSAGE
       27     5378             2) PRESCAN error on TEXTCFIELD : ERRORMESSAGE
       28     5379          */
       29     5380          %OC_MESSHD_W (NAME=OC_ERROR,STCLASS=STATIC,
       30     5381                         NPARMS=2,MSG=JP_ERR_MSG#,FUNC=WR,ATR=M_ADMIN);
       31     5394    1       2  *(0:1) UBIN BYTE UNAL INIT(1,4),
       32     5395    1         2 MSGNUM UBIN BYTE UNAL INIT(JPKE_ALTRT#),
       33     5396    1         2 ERRCODE BIT(36) UNAL;
       34     5397        /**/
       35     5398          %OC_MESSHD_W (NAME=OC_TEXT_ERROR,STCLASS=STATIC,
       36     5399                         NPARMS=3,MSG=JP_ERR_MSG#,FUNC=WR,ATR=M_ADMIN);
       37     5412    1       2  SIZE(0:2) UBIN BYTE UNAL INIT(1,4,80),
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:2    
       38     5413    1         2 MSGNUM UBIN BYTE UNAL INIT(JPKE_FILERR#),
       39     5414    1         2 ERRCODE BIT(36) UNAL,
       40     5415    1         2 TEXT CHAR(80) UNAL;
       41     5416        /***** Parameters *****/
       42     5417    1     DCL ERR_MSG BIT(36);
       43     5418        /***** SBIN/UBIN words *****/
       44     5419    1     DCL FID_LEN UBIN WORD STATIC;
       45     5420        /***** Symref data *****/
       46     5421        /***** External routines *****/
       47     5422    1     DCL JPA$GET_VAR ENTRY(2);
       48     5423        %EJECT;
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:3    
       49     5424        /*
       50     5425             ***** If an error message was passed then print it ...
       51     5426        */
       52     5427    1       IF ADDR(ERR_MSG) ~= ADDR(NIL)
       53     5428    1       THEN
       54     5429    2         DO;   /* Print it */
       55     5430    2           OC_MSG.BUF_ = VECTOR(OC_ERROR);
       56     5431    2           OC_ERROR.ERRCODE = ERR_MSG;
       57     5432    2           CALL M$WRITE (OC_MSG) ALTRET(E_PMME);
       58     5433    2         END;
       59     5434        /*
       60     5435             ***** If the error was on a file,
       61     5436                   then keep track of the file name ...
       62     5437        */
       63     5438    1       IF B$TCB.ALT$ -> B$ALT.DCB# ~= 0
       64     5439    1       THEN   /* File mgt. error */
       65     5440    2         DO;
       66     5441        /*
       67     5442             ***** Suck the information out of the dcb (via M$UNFID)
       68     5443                   to show the operator what screwed up ...
       69     5444        */
       70     5445    2           FPT_UNFID.V.DCB# = B$TCB.ALT$ -> B$ALT.DCB#;
       71     5446    2           CALL M$UNFID (FPT_UNFID) ALTRET(E_PMME);
       72     5447        /*
       73     5448             ***** Report the error to the operator ...
       74     5449        */
       75     5450    2           OC_TEXT_ERROR.SIZE(2) = FID_LEN;   /* Length of fid */
       76     5451    2           OC_TEXT_ERROR.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;
       77     5452    2           OC_MSG.BUF_ = VECTOR(OC_TEXT_ERROR);
       78     5453    2         END;
       79     5454    1       ELSE   /* Some other error */
       80     5455    2         DO;
       81     5456    2           OC_ERROR.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;
       82     5457    2           OC_MSG.BUF_ = VECTOR(OC_ERROR);
       83     5458    2         END;
       84     5459        /*
       85     5460             ***** Write the error message thru CSCG to OC ...
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:4    
       86     5461        */
       87     5462    1       CALL M$WRITE (OC_MSG) ALTRET(E_PMME);
       88     5463    1   E_PMME:   /* Ignore altrets */
       89     5464    1       RETURN;
       90     5465    1   END JPT$REPORT;

PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:5    
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   JP_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPT$REPORT.

   Procedure JPT$REPORT requires 45 words for executable code.
   Procedure JPT$REPORT requires 4 words of local(AUTO) storage.

    No errors detected in file JPT$SUBR.:E05TSI    .

PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:6    

 Object Unit name= JPT$REPORT                                 File name= JPT$SUBR.:E05TOU
 UTS= JUL 29 '97 23:39:27.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$CG
    2   DCB   even  none     0      0  M$EI
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$JOBSTAT
    5   DCB   even  none     0      0  M$HLP
    6   DCB   even  none     0      0  M$USERS
    7   Data  even  none    57     71  JPT$REPORT
    8   Proc  even  none    45     55  JPT$REPORT
    9  RoData even  none     4      4  JPT$REPORT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Std        1  JPT$REPORT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$TCB$                                M$CG
     M$EI                                  M$LO                                  M$JOBSTAT
     M$HLP                                 M$USERS                               ES$
     OC_MSG                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:8    


        1        1        /*M* JPT$SUBR Contains modules concerned with error reporting */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8        JPT$REPORT: PROC (ERR_MSG);

      8  8 000000   000000 700200 xent  JPT$REPORT   TSX0  ! X66_AUTO_1
         8 000001   000004 000001                    ZERO    4,1

        9        9        /*P*    NAME:       JPT$REPORT
       10       10                PURPOSE: To report errors to the operator.
       11       11        */
       12       12        /***** Include files *****/
       13       13          %INCLUDE CP_6;
       14       94          %INCLUDE CP_6_SUBS;
       15      634          %INCLUDE AS_SUPER_C;
       16     1069          %INCLUDE JP_SUBS_C;
       17     1094          %INCLUDE KL_SUPER_C;
       18     3996          %INCLUDE OC_MESSHD_C;
       19     4049          %INCLUDE OC_SUBS_C;
       20     4780          %INCLUDE JP_DATA_R;
       21     5325        /***** Fpts *****/
       22     5326          %FPT_WRITE (FPTN=OC_MSG,STCLASS=SYMREF);
       23     5357          %FPT_UNFID (TEXTFID = OC_TEXT_ERROR.TEXT,LEN = FID_LEN,STCLASS = STATIC);
       24     5375        /***** Keyin msgs *****/
       25     5376          /* Submessages for code JP_ERRMSG# ...
       26     5377             1) PRESCAN error : ERRORMESSAGE
       27     5378             2) PRESCAN error on TEXTCFIELD : ERRORMESSAGE
       28     5379          */
       29     5380          %OC_MESSHD_W (NAME=OC_ERROR,STCLASS=STATIC,
       30     5381                         NPARMS=2,MSG=JP_ERR_MSG#,FUNC=WR,ATR=M_ADMIN);
       31     5394    1       2  *(0:1) UBIN BYTE UNAL INIT(1,4),
       32     5395    1         2 MSGNUM UBIN BYTE UNAL INIT(JPKE_ALTRT#),
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:9    
       33     5396    1         2 ERRCODE BIT(36) UNAL;
       34     5397        /**/
       35     5398          %OC_MESSHD_W (NAME=OC_TEXT_ERROR,STCLASS=STATIC,
       36     5399                         NPARMS=3,MSG=JP_ERR_MSG#,FUNC=WR,ATR=M_ADMIN);
       37     5412    1       2  SIZE(0:2) UBIN BYTE UNAL INIT(1,4,80),
       38     5413    1         2 MSGNUM UBIN BYTE UNAL INIT(JPKE_FILERR#),
       39     5414    1         2 ERRCODE BIT(36) UNAL,
       40     5415    1         2 TEXT CHAR(80) UNAL;
       41     5416        /***** Parameters *****/
       42     5417    1     DCL ERR_MSG BIT(36);
       43     5418        /***** SBIN/UBIN words *****/
       44     5419    1     DCL FID_LEN UBIN WORD STATIC;
       45     5420        /***** Symref data *****/
       46     5421        /***** External routines *****/
       47     5422    1     DCL JPA$GET_VAR ENTRY(2);
       48     5423        %EJECT;
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:10   
       49     5424        /*
       50     5425             ***** If an error message was passed then print it ...
       51     5426        */
       52     5427    1       IF ADDR(ERR_MSG) ~= ADDR(NIL)

   5427  8 000002   200003 236100                    LDQ     @ERR_MSG,,AUTO
         8 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000004   000017 600000 8                  TZE     s:5438

       53     5428    1       THEN
       54     5429    2         DO;   /* Print it */

       55     5430    2           OC_MSG.BUF_ = VECTOR(OC_ERROR);

   5430  8 000005   000000 237000 9                  LDAQ    0
         8 000006   000004 757000 xsym               STAQ    OC_MSG+4

       56     5431    2           OC_ERROR.ERRCODE = ERR_MSG;

   5431  8 000007   200003 470500                    LDP0    @ERR_MSG,,AUTO
         8 000010   003000 060500                    CSL     bolr='003'O
         8 000011   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36
         8 000012   000033 600044 7                  BDSC    OC_ERROR+5               by=3,bit=0,n=36

       57     5432    2           CALL M$WRITE (OC_MSG) ALTRET(E_PMME);

   5432  8 000013   000000 630400 xsym               EPPR0   OC_MSG
         8 000014   440001 713400                    CLIMB   alt,write
         8 000015   401400 401760                    pmme    nvectors=4
         8 000016   000054 702000 8                  TSX2    E_PMME

       58     5433    2         END;

       59     5434        /*
       60     5435             ***** If the error was on a file,
       61     5436                   then keep track of the file name ...
       62     5437        */
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:11   
       63     5438    1       IF B$TCB.ALT$ -> B$ALT.DCB# ~= 0

   5438  8 000017   000000 470400 xsym               LDP0    B$TCB$
         8 000020   000000 471500                    LDP1    0,,PR0
         8 000021   100101 235100                    LDA     65,,PR1
         8 000022   000043 600000 8                  TZE     s:5456

       64     5439    1       THEN   /* File mgt. error */
       65     5440    2         DO;

       66     5441        /*
       67     5442             ***** Suck the information out of the dcb (via M$UNFID)
       68     5443                   to show the operator what screwed up ...
       69     5444        */
       70     5445    2           FPT_UNFID.V.DCB# = B$TCB.ALT$ -> B$ALT.DCB#;

   5445  8 000023   100101 720100                    LXL0    65,,PR1
         8 000024   000024 740000 7                  STX0    FPT_UNFID+20

       71     5446    2           CALL M$UNFID (FPT_UNFID) ALTRET(E_PMME);

   5446  8 000025   000000 630400 7                  EPPR0   FPT_UNFID
         8 000026   420021 713400                    CLIMB   alt,+8209
         8 000027   404400 401760                    pmme    nvectors=10
         8 000030   000054 702000 8                  TSX2    E_PMME

       72     5447        /*
       73     5448             ***** Report the error to the operator ...
       74     5449        */
       75     5450    2           OC_TEXT_ERROR.SIZE(2) = FID_LEN;   /* Length of fid */

   5450  8 000031   000070 236000 7                  LDQ     FID_LEN
         8 000032   000011 736000                    QLS     9
         8 000033   000042 552010 7                  STBQ    OC_TEXT_ERROR+5,'10'O

       76     5451    2           OC_TEXT_ERROR.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;

PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:12   
   5451  8 000034   000000 470400 xsym               LDP0    B$TCB$
         8 000035   000000 471500                    LDP1    0,,PR0
         8 000036   100102 236100                    LDQ     66,,PR1
         8 000037   000043 756000 7                  STQ     OC_TEXT_ERROR+6

       77     5452    2           OC_MSG.BUF_ = VECTOR(OC_TEXT_ERROR);

   5452  8 000040   000002 237000 9                  LDAQ    2
         8 000041   000004 757000 xsym               STAQ    OC_MSG+4

       78     5453    2         END;

   5453  8 000042   000050 710000 8                  TRA     s:5462

       79     5454    1       ELSE   /* Some other error */
       80     5455    2         DO;

       81     5456    2           OC_ERROR.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;

   5456  8 000043   000000 100500                    MLR     fill='000'O
         8 000044   100102 000004                    ADSC9   66,,PR1                  cn=0,n=4
         8 000045   000033 600004 7                  ADSC9   OC_ERROR+5               cn=3,n=4

       82     5457    2           OC_MSG.BUF_ = VECTOR(OC_ERROR);

   5457  8 000046   000000 237000 9                  LDAQ    0
         8 000047   000004 757000 xsym               STAQ    OC_MSG+4

       83     5458    2         END;

       84     5459        /*
       85     5460             ***** Write the error message thru CSCG to OC ...
       86     5461        */
       87     5462    1       CALL M$WRITE (OC_MSG) ALTRET(E_PMME);

   5462  8 000050   000000 630400 xsym               EPPR0   OC_MSG
         8 000051   440001 713400                    CLIMB   alt,write
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:13   
         8 000052   401400 401760                    pmme    nvectors=4
         8 000053   000054 702000 8                  TSX2    E_PMME

       88     5463    1   E_PMME:   /* Ignore altrets */
       89     5464    1       RETURN;

   5464  8 000054   000000 702200 xent  E_PMME       TSX2  ! X66_ARET
       90     5465    1   END JPT$REPORT;

PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:14   
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   JP_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPT$REPORT.
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:15   

 **** Variables and constants ****

  ****  Section 007  Data  JPT$REPORT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    70-0-0/w UBIN        r     1 FID_LEN                    0-0-0/d STRC(792)   r     1 FPT_UNFID
    26-0-0/c STRC(243)   r     1 OC_ERROR                  35-0-0/c STRC(972)   r     1 OC_TEXT_ERROR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERR_MSG                  *0-0-0/b BIT         r     1 ERR_MSG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 ES$
     0-0-0/d STRC(432)   r     1 OC_MSG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure JPT$REPORT requires 45 words for executable code.
   Procedure JPT$REPORT requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:16   

    No errors detected in file JPT$SUBR.:E05TSI    .
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:18   
          MINI XREF LISTING

AS_USERS.BANNER_PERM
      5084**DCL      5085--REDEF
AS_USERS.BUDGET.MACCT
      4989**DCL      4993--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      5002**DCL      5005--REDEF
AS_USERS.BUDGET.PACCUM
      4985**DCL      4987--REDEF
AS_USERS.BUDGET.PMAXC
      4980**DCL      4982--REDEF
AS_USERS.SETUP_CHRA.TXT
      5100**DCL      5101--REDEF    5102--REDEF
B$ALT.CODE
      4893**DCL      4893--REDEF    4894--REDEF    4894--REDEF
B$ALT.DCB#
      4894**DCL      5438>>IF       5445>>ASSIGN
B$ALT.ERR
      4894**DCL      5451>>ASSIGN   5456>>ASSIGN
B$ALT.ERR.ERR#
      4895**DCL      4895--REDEF
B$ALT.EVID
      4894**DCL      4894--REDEF    4894--REDEF
B$TCB.ALT$
      4889**DCL      5438>>IF       5445>>ASSIGN   5451>>ASSIGN   5456>>ASSIGN
B$TCB$
      4883**DCL      4889--IMP-PTR  5438>>IF       5445>>ASSIGN   5451>>ASSIGN   5456>>ASSIGN
ERR_MSG
      5417**DCL         8--PROC     5427--IF       5431>>ASSIGN
ES$
      5318**DCL      5319--REDEF    5322--IMP-PTR
E_PMME
      5464**LABEL    5432--CALLALT  5446--CALLALT  5462--CALLALT
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:19   
F$DCB.ACTPOS
      4932**DCL      4932--REDEF
F$DCB.ARS#
      4906**DCL      4906--REDEF
F$DCB.ATTR
      4925**DCL      4926--REDEF
F$DCB.BORROW
      4940**DCL      4940--REDEF    4940--REDEF    4940--REDEF
F$DCB.DCBNAME.L
      4954**DCL      4954--IMP-SIZ
F$DCB.EOMCHAR#
      4910**DCL      4910--REDEF
F$DCB.FLDID
      4935**DCL      4935--REDEF
F$DCB.FORM$
      4929**DCL      4929--REDEF
F$DCB.FSECT
      4945**DCL      4945--REDEF
F$DCB.FSN#
      4922**DCL      4922--REDEF    4922--REDEF    4923--REDEF
F$DCB.HEADER$
      4928**DCL      4928--REDEF
F$DCB.IXTNSIZE#
      4926**DCL      4926--REDEF
F$DCB.LASTSTA$
      4915**DCL      4915--REDEF
F$DCB.LVL
      4941**DCL      4941--REDEF
F$DCB.NAME#.C
      4916**DCL      4916--REDEF
F$DCB.NOEOF
      4938**DCL      4938--REDEF
F$DCB.NRECS#
      4927**DCL      4927--REDEF
F$DCB.NRECX
      4946**DCL      4946--REDEF
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:20   
F$DCB.OHDR
      4938**DCL      4938--REDEF
F$DCB.ORG#
      4921**DCL      4921--REDEF
F$DCB.PRECNO
      4944**DCL      4944--REDEF
F$DCB.RCSZ
      4950**DCL      4950--REDEF
F$DCB.RES#
      4917**DCL      4917--REDEF
F$DCB.SETX
      4929**DCL      4929--REDEF
F$DCB.TAB$
      4929**DCL      4929--REDEF
F$DCB.TDA
      4943**DCL      4944--REDEF
F$DCB.WSN#
      4917**DCL      4917--REDEF
FID_LEN
      5419**DCL      5372--DCLINIT  5450>>ASSIGN
FPT_UNFID
      5368**DCL      5446<>CALL
FPT_UNFID.V
      5372**DCL      5368--DCLINIT
FPT_UNFID.V.DCB#
      5372**DCL      5445<<ASSIGN
KL_DREC.PASSWORD
      5205**DCL      5209--REDEF
KL_DREC.RENAME
      5228**DCL      5229--REDEF
M$UNFID
        85**DCL-ENT  5446--CALL
M$WRITE
        23**DCL-ENT  5432--CALL     5462--CALL
OC_ERROR
      5382**DCL      5430--ASSIGN   5457--ASSIGN
PL6.E3A0      #001=JPT$REPORT File=JPT$SUBR.:E05TSI                              TUE 07/29/97 23:39 Page:21   
OC_ERROR.ERRCODE
      5396**DCL      5431<<ASSIGN   5456<<ASSIGN
OC_ERROR.FLAGS
      5389**DCL      5390--REDEF
OC_ERROR.MSGID
      5385**DCL      5386--REDEF
OC_MSG
      5343**DCL      5432<>CALL     5462<>CALL
OC_MSG.BUF_
      5343**DCL      5430<<ASSIGN   5452<<ASSIGN   5457<<ASSIGN
OC_MSG.STATION_
      5345**DCL      5345--REDEF
OC_MSG.V.DVBYTE.VFC#
      5352**DCL      5352--REDEF
OC_TEXT_ERROR
      5400**DCL      5452--ASSIGN
OC_TEXT_ERROR.ERRCODE
      5414**DCL      5451<<ASSIGN
OC_TEXT_ERROR.FLAGS
      5407**DCL      5408--REDEF
OC_TEXT_ERROR.MSGID
      5403**DCL      5404--REDEF
OC_TEXT_ERROR.SIZE
      5412**DCL      5450<<ASSIGN
OC_TEXT_ERROR.TEXT
      5415**DCL      5368--DCLINIT
READ_CARD.STATION_
      4854**DCL      4855--REDEF
READ_CARD.V.DVBYTE.REREAD#
      4866**DCL      4866--REDEF
READ_CARD.V.INDX#
      4864**DCL      4864--REDEF
