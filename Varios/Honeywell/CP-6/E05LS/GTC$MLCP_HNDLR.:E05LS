VERSION E05

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:1    
        1        1        /*M* GTC$MLCP_HNDLR     Front End T&D COLTS Message and I/O Handler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        GTC$MLCP_HNDLR
       12       12              AUTHOR:      R. D. Vogler
       13       13              PURPOSE:     Colts Message Handler and I/O Handler
       14       14              DESCRIPTION: This module handles Colts intercomputer messages
       15       15                           (ICM's) between the FEP and the Host, and also
       16       16                           performs necessary I/O on behalf of the Colts
       17       17                           test pages.
       18       18              REFERENCE:   CP-6 Release C01
       19       19              LAST UPDATE: 02/07/85
       20       20        */
       21       21        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:2    
       22       22        /*F*  NAME:        GTC$MLCP_HNDLR
       23       23              PURPOSE:     Handle COLTS ICM's and test I/O's
       24       24              DESCRIPTION: This procedure is entered as a consequence of
       25       25                           downline-loading this module into the front-end
       26       26                           processor(FEP).  This routine opens a path to
       27       27                           host COLTS, processes incoming COLTS messages
       28       28                           (ICM's), performs specified test I/O's, and sends
       29       29                           the test results back to host COLTS.  As the
       30       30                           result of an ALTRET on either M$READ or M$WRITE,
       31       31                           this procedure does an orderly cleanup and
       32       32                           exits.
       33       33        */
       34       34        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:3    
       35       35        /*D*  NAME:        GTC$MLCP_HNDLR
       36       36              INTERFACE:   This routine calls the following:
       37       37                            M$OPEN
       38       38                            M$READ
       39       39                            PROCESS_ICM
       40       40                            M$WRITE
       41       41                            WRAP_UP
       42       42                            M$CLOSE
       43       43                            M$EXIT
       44       44        */
       45       45        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:4    
       46       46        GTC$MLCP_HNDLR: PROC MAIN;
       47       47
       48       48        /*   INCLUDE FILES   */
       49       49        %INCLUDE GT_MACROS_M;
       50      132        %INCLUDE GT_CMN_E;
       51      238        %INCLUDE GH_IOFNC_E;
       52      307        %INCLUDE GH_HARDWARE_M;
       53      405        %INCLUDE LCP_6;
       54     4684        %INCLUDE G_JIT_M;
       55     4949        %G$JIT_E;
       56     5011
       57     5012        /*   MACROS   */
       58     5013        %Y_CLTICM (STCLASS = "BASED (ICM$)");
       59     5058        %GH_IO (FPTN  = GT_IO, STCLASS =  STATIC);
       60     5074        %GH_IOLD (FPTN = GT_IOLD, STCLASS = STATIC);
       61     5089        %VLR_GCHAN (FPTN = CHAN_DATA);
       62     5108
       63     5109        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:5    
       64     5110        /*   FPT'S   */
       65     5111        %FPT_OPEN  (FPTN    = OPEN_COLTS,
       66     5112                    DCB     = M$COLTC,
       67     5113                    ORG     = CONSEC,
       68     5114                    RES     ='HO');
       69     5142
       70     5143        %FPT_READ  (FPTN    = GET_ICM,
       71     5144                    DCB     = M$COLTC,
       72     5145                    BUF     = ICMDATA,
       73     5146                    WAIT    = YES);
       74     5172
       75     5173        %FPT_WRITE (FPTN    = SEND_ICM,
       76     5174                    BP      = YES,
       77     5175                    DCB     = M$COLTC,
       78     5176                    BUF     = ICMDATA);
       79     5200
       80     5201        %FPT_WAIT  (FPTN    = WAIT_IO,
       81     5202                    UNITS   = SECS_DELAY);
       82     5226
       83     5227        %FPT_CLOSE (FPTN    = END_COLTS,
       84     5228                    DCB     = M$COLTC);
       85     5248
       86     5249        %FPT_GCHAN (FPTN       = GET_CHAN,
       87     5250                    GCHAN      = CHAN_DATA,
       88     5251                    DIAG       = YES);
       89     5274
       90     5275        %FPT_RCHAN (FPTN       = RELEASE_CHAN);
       91     5296
       92     5297        %FPT_SPRIV (FPTN = ACTIVATE_PRIV,
       93     5298                    AUTH = YES,
       94     5299                    PRIV = MSYS_PRIV);
       95     5322
       96     5323        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:6    
       97     5324        /*   DCL'S   */
       98     5325    1      DCL 1 Y_FLAGS STATIC ALIGNED,
       99     5326    1            2 NOSUCHTST BIT(1) UNAL INIT('0'B),
      100     5327    1            2 CKRDY BIT(1) UNAL INIT('0'B),
      101     5328    1            2 NOATE BIT(1) UNAL INIT('0'B),
      102     5329    1            2 RCH BIT(1) UNAL INIT('0'B),
      103     5330    1            2 XCH BIT(1) UNAL INIT('0'B),
      104     5331    1            2 * BIT(3) UNAL INIT('0'B);
      105     5332
      106     5333    1      DCL Y_TCOUNT UBIN BYTE STATIC UNAL INIT(0);
      107     5334
      108     5335    1      DCL 1 Y_TENTRY(0:7) STATIC ALIGNED,
      109     5336    1            2 CHN,
      110     5337    1              3 C BIT(10) UNAL INIT('0'B*8),
      111     5338    1              3 F BIT(6) UNAL INIT('0'B*8),
      112     5339    1            2 RFU UBIN BYTE UNAL INIT(0*8),
      113     5340    1            2 TYP UBIN BYTE UNAL INIT(0*8);
      114     5341
      115     5342    1      DCL ICM$ PTR STATIC INIT(ADDR(NIL));
      116     5343
      117     5344    1      DCL SECS_DELAY UBIN(16) STATIC INIT(1);
      118     5345
      119     5346    1      DCL M$COLTC DCB;
      120     5347
      121     5348    1      DCL GHH$IOLD ENTRY(1) ALTRET ;
      122     5349    1      DCL GHH$IO_IN ENTRY(1) ALTRET ;
      123     5350
      124     5351    1      DCL Y_DBUFSZ(0:7) UBIN WORD STATIC INIT(0*8);
      125     5352    1      DCL Y_DBUF(0:447) UBIN WORD STATIC ALIGNED INIT(0*448);
      126     5353
      127     5354    1      DCL ICMDATA CHAR(512) STATIC ALIGNED INIT(' ');
      128     5355
      129     5356    1      DCL MSYS_PRIV BIT (32) STATIC ALIGNED INIT('0'B);
      130     5357
      131     5358        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:7    
      132     5359
      133     5360        /*   THIS IS THE TOP-LEVEL CODING FOR THIS PROCEDURE   */
      134     5361
      135     5362        /* Note that it does M$READ(with WAIT) and M$WRITE(no WAIT) */
      136     5363
      137     5364    1      MSYS_PRIV = %G_PR_TND#;
      138     5365    1      CALL M$SPRIV (ACTIVATE_PRIV) ALTRET (SOLONG);
      139     5366    1      CALL M$SYS ALTRET (SOLONG);
      140     5367
      141     5368    1      CALL M$OPEN (OPEN_COLTS) ALTRET (SOLONG);
      142     5369
      143     5370    1      ICM$ = ADDR (ICMDATA);
      144     5371
      145     5372    2      DO WHILE (%G_YES#);
      146     5373    2         VBOUND(GET_ICM.BUF_) = 139;
      147     5374    2         CALL M$READ (GET_ICM) ALTRET (BEGONE);
      148     5375    2         CALL PROCESS_ICM;
      149     5376    2         VBOUND(SEND_ICM.BUF_) = 2 * Y_CLTICM.T1.R1.ICMWDS - 1;
      150     5377    2         CALL M$WRITE (SEND_ICM) ALTRET (BEGONE);
      151     5378    2      END;
      152     5379
      153     5380    1   BEGONE:
      154     5381    1      CALL WRAP_UP;
      155     5382    1      CALL M$CLOSE (END_COLTS);
      156     5383
      157     5384    1   SOLONG:
      158     5385    1      CALL M$EXIT;
      159     5386
      160     5387        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:8    
      161     5388        /*I*  NAME:        PROCESS_ICM
      162     5389              PURPOSE:     Process all COLTS ICM's
      163     5390              CALL:        CALL PROCESS_ICM;
      164     5391                           Never altreturns.
      165     5392              INTERFACE:   This routine calls the following:
      166     5393                            Y$CKSUM
      167     5394                            START_TEST
      168     5395                            EXECUTE_TEST
      169     5396                            TERMINATE_TEST
      170     5397              DATA:        This routine analyzes and modifies the data
      171     5398                           in the ICM buffer using the pointer ICM$.
      172     5399              DESCRIPTION: This procedure validates the checksum of the
      173     5400                           incoming ICM data, decodes and executes the
      174     5401                           ICM command, collects the test results and
      175     5402                           formats them into the outgoing ICM reply data.
      176     5403        */
      177     5404        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:9    
      178     5405    1   PROCESS_ICM: PROC;
      179     5406
      180     5407    2      DCL CKS BIT(16) ALIGNED;
      181     5408
      182     5409    2      CALL Y$CKSUM (CKS);
      183     5410
      184     5411    2      IF Y_CLTICM.T1.R1.ICMCKS ~= CKS
      185     5412
      186     5413    3      THEN DO;
      187     5414    3              Y_CLTICM.T1.IFLAGS.BADCKS = %G_ON#;
      188     5415    3              Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;
      189     5416    3           END;
      190     5417
      191     5418    3      ELSE DO;
      192     5419    4              DO CASE (Y_CLTICM.T1.R1.ICMCOM);
      193     5420    4                 CASE (%Y#STARTT);
      194     5421    4                    CALL START_TEST;
      195     5422
      196     5423    4                 CASE (%Y#EXECUT);
      197     5424    4                    CALL EXECUTE_TEST;
      198     5425
      199     5426    4                 CASE (%Y#TERMNT);
      200     5427    4                    CALL TERMINATE_TEST;
      201     5428
      202     5429    4                 CASE (ELSE);
      203     5430    4                    Y_CLTICM.T1.IFLAGS.BADCOM = %G_ON#;
      204     5431    4                    Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;
      205     5432    4              END;
      206     5433    3           END;
      207     5434
      208     5435    2      CALL Y$CKSUM (CKS);
      209     5436
      210     5437    2      Y_CLTICM.T1.R1.ICMCKS = CKS;
      211     5438
      212     5439    2      RETURN;
      213     5440
      214     5441        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:10   
      215     5442        /*I*  NAME:        Y$CKSUM
      216     5443              PURPOSE:     Compute checksum for COLTS ICM
      217     5444              CALL:        CALL Y$CKSUM (CS);
      218     5445                           Does not altreturn.
      219     5446              PARAMETERS:  CS is an OUTPUT parameter containing the
      220     5447                           computed checksum of the ICM data.
      221     5448              INTERFACE:   None.
      222     5449              DATA:        Examines data in ICM buffer using pointer ICM$.
      223     5450              DESCRIPTION: Computes checksum by successively exclusive-or'ing
      224     5451                           the words in the ICM data buffer, starting with
      225     5452                           word 3 of the ICM.
      226     5453        */
      227     5454        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:11   
      228     5455    2   Y$CKSUM: PROC (CS);
      229     5456
      230     5457    3      DCL ITEM UBIN BYTE;
      231     5458    3      DCL CS BIT(16) ALIGNED;
      232     5459
      233     5460    3      CS = '0'B;
      234     5461
      235     5462    3      IF Y_CLTICM.T1.R1.ICMWDS > 9
      236     5463    3      THEN
      237     5464
      238     5465    4           DO ITEM = 0 TO Y_CLTICM.T1.R1.ICMWDS - 4;
      239     5466    4              CS = CS \ Y_CLTICM.T2.ICMTXT (ITEM);
      240     5467    4           END;
      241     5468
      242     5469    3      RETURN;
      243     5470
      244     5471    3   END Y$CKSUM;
      245     5472
      246     5473        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:12   
      247     5474        /*I*  NAME:        START_TEST
      248     5475              PURPOSE:     Allocate resources for COLTS testing
      249     5476              CALL:        CALL START_TEST;
      250     5477                           Does not altreturn.
      251     5478              INTERFACE:   This routine calls the following:
      252     5479                            Y$GETLIN
      253     5480                            Y$ALLOC
      254     5481              DATA:        Uses data in ICM buffer (pointer ICM$).
      255     5482              DESCRIPTION: Places entry in Active Test Table and allocates
      256     5483                           channel/device for COLTS testing.
      257     5484        */
      258     5485        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:13   
      259     5486    2   START_TEST: PROC;
      260     5487
      261     5488    3      DCL CHAD BIT(16) ALIGNED;
      262     5489
      263     5490    3      CHAD = Y_CLTICM.T1.R1.CHNLNR;
      264     5491
      265     5492    3      CALL Y$GETLIN WHENRETURN
      266     5493    4           DO;
      267     5494    4              CALL Y$ALLOC;
      268     5495    4           END;
      269     5496
      270     5497    3      IF Y_CLTICM.T1.IFLAGS.DVBUSY = %G_OFF#
      271     5498    3      THEN
      272     5499    3         Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      273     5500    3      ELSE
      274     5501    4           DO;
      275     5502    4              Y_CLTICM.T1.R1.ICMRPY = %Y#ALLOCN;
      276     5503    4              IF Y_FLAGS.NOATE
      277     5504    4              THEN
      278     5505    4                 Y_FLAGS.NOATE = %G_OFF#;
      279     5506    4              ELSE
      280     5507    5                   DO;
      281     5508    5                      Y_TENTRY(Y_CLTICM.T1.R1.TSTIND) = '0'B;
      282     5509    5                      Y_TCOUNT = Y_TCOUNT - 1;
      283     5510    5                   END;
      284     5511    4           END;
      285     5512
      286     5513    3      RETURN;
      287     5514
      288     5515        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:14   
      289     5516        /*I*  NAME:        Y$GETLIN
      290     5517              PURPOSE:     Put entry in Active Test Table
      291     5518              CALL:        CALL Y$GETLIN ALTRET;
      292     5519                           This routine altreturns if the table is full.
      293     5520              INTERFACE:   None.
      294     5521              DATA:        Uses data in ICM buffer (pointer ICM$).
      295     5522              DESCRIPTION: This routine places the channel number and
      296     5523                           test type code of the requested test in the
      297     5524                           next available entry in the Active Test Table.
      298     5525                           The table can hold a maximum of 8 entries.
      299     5526        */
      300     5527        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:15   
      301     5528    3   Y$GETLIN: PROC ALTRET;
      302     5529
      303     5530    4      DCL ITEM UBIN BYTE;
      304     5531
      305     5532    4      IF Y_TCOUNT < 8
      306     5533    5      THEN DO ITEM = 0 TO 7;
      307     5534
      308     5535    5              IF Y_TENTRY(ITEM) = '0'B
      309     5536    6              THEN DO;
      310     5537    6                      Y_CLTICM.T1.R1.TSTIND = ITEM;
      311     5538    6                      Y_TENTRY.CHN(ITEM) = CHAD;
      312     5539    6                      Y_TENTRY.TYP(ITEM) = Y_CLTICM.T1.TSTYPE;
      313     5540    6                      Y_TCOUNT = Y_TCOUNT + 1;
      314     5541    6                      RETURN;
      315     5542    6                   END;
      316     5543
      317     5544    5           END;
      318     5545
      319     5546    4      Y_FLAGS.NOATE = %G_ON#;
      320     5547    4      Y_CLTICM.T1.IFLAGS.DVBUSY = %G_ON#;
      321     5548    4      ALTRETURN;
      322     5549
      323     5550    4   END Y$GETLIN;
      324     5551
      325     5552        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:16   
      326     5553        /*I*  NAME:        Y$ALLOC
      327     5554              PURPOSE:     Allocate channel or device to COLTS for testing
      328     5555              CALL:        CALL Y$ALLOC;
      329     5556                           Does not altreturn.
      330     5557              INTERFACE:   This routine calls the following:
      331     5558                            M$GCHAN
      332     5559              DATA:        Uses data in ICM buffer (pointer ICM$).
      333     5560              DESCRIPTION: This routine obtains a channel or device for
      334     5561                           testing.
      335     5562        */
      336     5563        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:17   
      337     5564    3   Y$ALLOC: PROC;
      338     5565
      339     5566    4      IF Y_CLTICM.T1.TSTYPE = 12
      340     5567    4      THEN
      341     5568    4         GET_CHAN.V.FLAGS.CONTROLLER = '1'B;
      342     5569    4      ELSE
      343     5570    4         GET_CHAN.V.FLAGS.CONTROLLER = '0'B;
      344     5571
      345     5572    4      GET_CHAN.V.CHANNEL = Y_CLTICM.T1.R1.CHAN;
      346     5573
      347     5574    4      CALL M$GCHAN (GET_CHAN)
      348     5575    5      WHENALTRETURN DO;
      349     5576    5              Y_CLTICM.T1.IFLAGS.DVBUSY = %G_ON#;
      350     5577    5           END;
      351     5578
      352     5579    4      RETURN;
      353     5580
      354     5581    4   END Y$ALLOC;
      355     5582
      356     5583    3   END START_TEST;
      357     5584
      358     5585        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:18   
      359     5586        /*I*  NAME:        EXECUTE_TEST
      360     5587              PURPOSE:     Execute test I/O per ICM
      361     5588              CALL:        CALL EXECUTE_TEST;
      362     5589                           Does not altreturn.
      363     5590              INTERFACE:   This routine calls the following:
      364     5591                            Y$RCCP
      365     5592                            Y$XCCP
      366     5593                            Y$IOSTR
      367     5594                            Y$XDATA
      368     5595                            Y$SWRDS
      369     5596                            Y$BMWUP
      370     5597                            Y$XEDAT
      371     5598                            Y$PRCCP
      372     5599                            Y$PXCCP
      373     5600              DATA:        Uses data in ICM buffer (pointer ICM$).
      374     5601              DESCRIPTION: Interprets ICM function code and calls
      375     5602                           corresponding routine to execute appropriate
      376     5603                           test I/O.
      377     5604        */
      378     5605        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:19   
      379     5606    2   EXECUTE_TEST: PROC;
      380     5607
      381     5608    4      DO CASE (Y_CLTICM.T1.EXTCFG);
      382     5609    4         CASE (%Y#RCCP);
      383     5610    4            CALL Y$RCCP;
      384     5611
      385     5612    4         CASE (%Y#XCCP);
      386     5613    4            CALL Y$XCCP;
      387     5614
      388     5615    4         CASE (%Y#IOSTR);
      389     5616    4            CALL Y$IOSTR;
      390     5617
      391     5618    4         CASE (%Y#XDATA);
      392     5619    4            CALL Y$XDATA;
      393     5620
      394     5621    4         CASE (%Y#SWRDS);
      395     5622    4            CALL Y$SWRDS;
      396     5623
      397     5624    4         CASE (%Y#BMWUP);
      398     5625    4            CALL Y$BMWUP;
      399     5626
      400     5627    4         CASE (%Y#XEDAT);
      401     5628    4            CALL Y$XEDAT;
      402     5629
      403     5630    4         CASE (%Y#PRCCP);
      404     5631    4            CALL Y$PRCCP;
      405     5632
      406     5633    4         CASE (%Y#PXCCP);
      407     5634    4            CALL Y$PXCCP;
      408     5635
      409     5636    4         CASE (ELSE);
      410     5637    4            Y_CLTICM.T1.IFLAGS.BADCOM = %G_ON#;
      411     5638    4            Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;
      412     5639    4      END;
      413     5640    3      RETURN;
      414     5641
      415     5642        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:20   
      416     5643        /*I*  NAME:        Y$RCCP
      417     5644              PURPOSE:     Implement receive channel control program (CCP)
      418     5645              CALL:        CALL Y$RCCP;
      419     5646                           Does not altreturn.
      420     5647              INTERFACE:   This routine calls the following:
      421     5648                            Y$WRBLK
      422     5649                            Y$WRLCT
      423     5650              DATA:        Uses data in ICM buffer (pointer ICM$).
      424     5651              DESCRIPTION: This routine moves the data for the receive
      425     5652                           channel control program from the ICM to the
      426     5653                           MLCP RAM.  It then stores the pointer to the
      427     5654                           CCP into LCT bytes 6 and 7 in the RAM.
      428     5655        */
      429     5656        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:21   
      430     5657    3   Y$RCCP: PROC;
      431     5658
      432     5659    4      DCL RAMAD UBIN WORD;
      433     5660    4      DCL CH UBIN(10) ALIGNED;
      434     5661
      435     5662    4      RAMAD = %Y#RCVRAM + Y_CLTICM.T2.TEXT(9);
      436     5663
      437     5664    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (GOOF);
      438     5665
      439     5666    4      CALL Y$WRLCT ALTRET (GOOF);
      440     5667
      441     5668    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      442     5669
      443     5670    4   GOOF:
      444     5671    4      RETURN;
      445     5672
      446     5673        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:22   
      447     5674        /*I*  NAME:        Y$WRLCT
      448     5675              PURPOSE:     Set pointer to receive CCP
      449     5676              CALL:        CALL Y$WRLCT ALTRET;
      450     5677                           Altreturns if an I/O error occurs.
      451     5678              INTERFACE:   This routine calls the following:
      452     5679                            Y$DOIO
      453     5680              DATA:        Sets up the GT_IO FPT.
      454     5681              DESCRIPTION: Stores the pointer to the receive CCP in
      455     5682                           LCT6 and LCT7 in the MLCP RAM.
      456     5683        */
      457     5684        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:23   
      458     5685    4   Y$WRLCT: PROC ALTRET;
      459     5686
      460     5687    5      DCL 1 CONX ALIGNED,
      461     5688    5            2 L UBIN BYTE UNAL,
      462     5689    5            2 R UBIN BYTE UNAL;
      463     5690    5      DCL CONW REDEF CONX UBIN WORD;
      464     5691    5      DCL FC UBIN(6) ALIGNED;
      465     5692
      466     5693    5      FC = %GH#IO_OTPLCTBYT;
      467     5694
      468     5695    5      CONW = %Y#RCVRAM;
      469     5696    5      CONX.R = 6;
      470     5697
      471     5698    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);
      472     5699
      473     5700    5      CONW = %Y#RCVRAM;
      474     5701    5      CONX.L = CONX.R;
      475     5702    5      CONX.R = 7;
      476     5703
      477     5704    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);
      478     5705
      479     5706    5      RETURN;
      480     5707
      481     5708    5   ERRIO:
      482     5709    5      ALTRETURN;
      483     5710
      484     5711    5   END Y$WRLCT;
      485     5712
      486     5713    4   END Y$RCCP;
      487     5714
      488     5715        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:24   
      489     5716        /*I*  NAME:        Y$XCCP
      490     5717              PURPOSE:     Implement transmit channel control program
      491     5718              CALL:        CALL Y$XCCP;
      492     5719                           Does not altreturn.
      493     5720              INTERFACE:   This routine calls the following:
      494     5721                            Y$WRBLK
      495     5722                            Y$WXLCT
      496     5723              DATA:        Uses data in ICM buffer (pointer ICM$).
      497     5724              DESCRIPTION: This routine moves the data for the transmit
      498     5725                           CCP from the ICM to the MLCP RAM.  It then
      499     5726                           stores the pointer to the CCP into LCT bytes
      500     5727                           38 and 39 in the RAM.
      501     5728        */
      502     5729        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:25   
      503     5730    3   Y$XCCP: PROC;
      504     5731
      505     5732    4      DCL RAMAD UBIN WORD;
      506     5733    4      DCL CH UBIN(10) ALIGNED;
      507     5734
      508     5735    4      RAMAD = %Y#XMTRAM + Y_CLTICM.T2.TEXT(9);
      509     5736
      510     5737    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (GOOF);
      511     5738
      512     5739    4      CALL Y$WXLCT ALTRET (GOOF);
      513     5740
      514     5741    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      515     5742
      516     5743    4   GOOF:
      517     5744    4      RETURN;
      518     5745
      519     5746        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:26   
      520     5747        /*I*  NAME:        Y$WXLCT
      521     5748              PURPOSE:     Set pointer to transmit CCP
      522     5749              CALL:        CALL Y$WXLCT ALTRET;
      523     5750                           Altreturns if an I/O error occurs.
      524     5751              INTERFACE:   This routine calls the following:
      525     5752                            Y$DOIO
      526     5753              DATA:        Sets up the GT_IO FPT.
      527     5754              DESCRIPTION: Stores the pointer to the transmit CCP
      528     5755                           in LCT38 and LCT39 in the MLCP RAM.
      529     5756        */
      530     5757        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:27   
      531     5758    4   Y$WXLCT: PROC ALTRET;
      532     5759
      533     5760    5      DCL 1 CONX ALIGNED,
      534     5761    5            2 L UBIN BYTE UNAL,
      535     5762    5            2 R UBIN BYTE UNAL;
      536     5763    5      DCL CONW REDEF CONX UBIN WORD;
      537     5764    5      DCL FC UBIN(6) ALIGNED;
      538     5765
      539     5766    5      FC = %GH#IO_OTPLCTBYT;
      540     5767
      541     5768    5      CONW = %Y#XMTRAM;
      542     5769    5      CONX.R = 38;
      543     5770
      544     5771    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);
      545     5772
      546     5773    5      CONW = %Y#XMTRAM;
      547     5774    5      CONX.L = CONX.R;
      548     5775    5      CONX.R = 39;
      549     5776
      550     5777    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);
      551     5778
      552     5779    5      RETURN;
      553     5780
      554     5781    5   ERRIO:
      555     5782    5      ALTRETURN;
      556     5783
      557     5784    5   END Y$WXLCT;
      558     5785
      559     5786    4   END Y$XCCP;
      560     5787
      561     5788        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:28   
      562     5789        /*I*  NAME:        Y$IOSTR
      563     5790              PURPOSE:     Execute a string of I/O commands
      564     5791              CALL:        CALL Y$IOSTR;
      565     5792                           Does not altreturn.
      566     5793              INTERFACE:   This routine calls the following:
      567     5794                            Y$XECIO
      568     5795                            M$WAIT
      569     5796                            Y$STATUS
      570     5797                            Y$CKSTAT
      571     5798              DATA:        Uses data in ICM buffer (pointer ICM$).
      572     5799              DESCRIPTION: Sequentially executes a string of I/O
      573     5800                           instructions which it obtains from the
      574     5801                           ICM.
      575     5802        */
      576     5803        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:29   
      577     5804    3   Y$IOSTR: PROC;
      578     5805
      579     5806    4      DCL COUNT UBIN WORD;
      580     5807    4      DCL INX UBIN WORD;
      581     5808    4      DCL NUMIO UBIN WORD;
      582     5809    4      DCL STAT BIT(16) ALIGNED;
      583     5810    4      DCL XCHAN UBIN(10) ALIGNED;
      584     5811    4      DCL RCHAN UBIN(10) ALIGNED;
      585     5812
      586     5813    4      Y_FLAGS.XCH = %G_OFF#;
      587     5814    4      Y_FLAGS.RCH = %G_OFF#;
      588     5815    4      XCHAN = 0;
      589     5816    4      RCHAN = 0;
      590     5817    4      INX = %GT_STRDATOFS#;
      591     5818    4      NUMIO = Y_CLTICM.T1.TSTDAT(3);
      592     5819    4      CALL Y$XECIO ALTRET (PLOP);
      593     5820
      594     5821    4      IF Y_FLAGS.CKRDY
      595     5822    4      THEN
      596     5823    5           DO;
      597     5824    5              Y_FLAGS.CKRDY = %G_OFF#;
      598     5825    5              CALL M$WAIT (WAIT_IO);
      599     5826
      600     5827    5              IF Y_FLAGS.XCH
      601     5828    5              THEN
      602     5829    6                   DO;
      603     5830    6                      Y_FLAGS.XCH = %G_OFF#;
      604     5831    6                      CALL Y$STATUS (XCHAN, STAT) ALTRET (PLOP);
      605     5832    6                      CALL Y$CKSTAT (XCHAN, STAT) ALTRET (PLOP);
      606     5833    6                   END;
      607     5834
      608     5835    5              IF Y_FLAGS.RCH
      609     5836    5              THEN
      610     5837    6                   DO;
      611     5838    6                      Y_FLAGS.RCH = %G_OFF#;
      612     5839    6                      CALL Y$STATUS (RCHAN, STAT) ALTRET (PLOP);
      613     5840    6                      CALL Y$CKSTAT (RCHAN, STAT) ALTRET (PLOP);
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:30   
      614     5841    6                   END;
      615     5842    5           END;
      616     5843
      617     5844    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      618     5845
      619     5846    4   PLOP:
      620     5847    4      RETURN;
      621     5848
      622     5849        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:31   
      623     5850        /*I*  NAME:        Y$XECIO
      624     5851              PURPOSE:     Execute I/O
      625     5852              CALL:        CALL Y$XECIO ALTRET;
      626     5853                           Altreturns if an I/O error occurs.
      627     5854              INTERFACE:   This routine calls the following:
      628     5855                            Y$XIOLD
      629     5856                            Y$DOIO
      630     5857              DATA:        Uses data in ICM buffer (pointer ICM$).
      631     5858              DESCRIPTION: Obtains each I/O command in turn from ICM
      632     5859                           data, determines type of I/O required, and
      633     5860                           then executes that I/O command.
      634     5861        */
      635     5862        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:32   
      636     5863    4   Y$XECIO: PROC ALTRET;
      637     5864
      638     5865    5      DCL ITEM UBIN WORD;
      639     5866    5      DCL CHCON UBIN WORD;
      640     5867    5      DCL 1 CHN ALIGNED,
      641     5868    5            2 CH UBIN(10) UNAL,
      642     5869    5            2 C REDEF CH,
      643     5870    5              3 * UBIN(9) UNAL,
      644     5871    5              3 X BIT(1) UNAL,
      645     5872    5            2 F UBIN(6) UNAL;
      646     5873    5      DCL CHN_CH UBIN(10) ALIGNED;
      647     5874    5      DCL CHN_F UBIN(6) ALIGNED;
      648     5875
      649     5876    6      DO ITEM = 0 TO 2*(NUMIO - 1) BY 2;
      650     5877
      651     5878    6         CHCON = Y_CLTICM.T2.TEXT(INX + ITEM);
      652     5879    6         CHN = Y_CLTICM.T2.ICMTXT(INX + ITEM + 1);
      653     5880    6         CHN_CH = CHN.CH;
      654     5881    6         CHN_F = CHN.F;
      655     5882
      656     5883    6         IF CHN.F = %GH#IO_IOLD
      657     5884    6         THEN
      658     5885    6            CALL Y$XIOLD ALTRET (GOOP);
      659     5886    6         ELSE
      660     5887    7              DO;
      661     5888    7                 CALL Y$DOIO (CHN_CH, CHN_F, CHCON) ALTRET (GOOP);
      662     5889
      663     5890    7                 IF CHN.F = %GH#IO_INPNXTCCBSTT
      664     5891    7                 THEN
      665     5892    7                    IF CHN.C.X
      666     5893    7                    THEN
      667     5894    8                         DO;
      668     5895    8                            Y_FLAGS.XCH = %G_ON#;
      669     5896    8                            XCHAN = CHN_CH;
      670     5897    8                         END;
      671     5898    7                    ELSE
      672     5899    8                         DO;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:33   
      673     5900    8                            Y_FLAGS.RCH = %G_ON#;
      674     5901    8                            RCHAN = CHN_CH;
      675     5902    8                         END;
      676     5903
      677     5904    7              END;
      678     5905
      679     5906    6      END;
      680     5907
      681     5908    5      IF CHN.F = %GH#IO_INPNXTCCBSTT
      682     5909    5      THEN
      683     5910    5         Y_FLAGS.CKRDY = %G_ON#;
      684     5911
      685     5912    5      RETURN;
      686     5913
      687     5914    5   GOOP:
      688     5915    5      ALTRETURN;
      689     5916
      690     5917        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:34   
      691     5918        /*I*  NAME:        Y$XIOLD
      692     5919              PURPOSE:     Execute IOLD's in string I/O
      693     5920              CALL:        CALL Y$XIOLD ALTRET;
      694     5921                           Altreturns if I/O error occurs.
      695     5922              INTERFACE:   This routine calls the following:
      696     5923                            Y$IOLD
      697     5924              DATA:        Uses data in ICM buffer.
      698     5925              DESCRIPTION: Executes IOLD's when they occur in a string
      699     5926                           of I/O commands in the ICM test data.
      700     5927        */
      701     5928        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:35   
      702     5929    5   Y$XIOLD: PROC ALTRET;
      703     5930
      704     5931    6      DCL DP$ PTR;
      705     5932    6      DCL BOFS UBIN WORD;
      706     5933
      707     5934    6      IF CHN.C.X AND (Y_DBUFSZ(Y_CLTICM.T1.R1.TSTIND) ~= 0)
      708     5935    7      THEN DO;
      709     5936    7              DP$ = ADDR(Y_DBUF(Y_CLTICM.T1.R1.TSTIND * 56));
      710     5937    7              BOFS = 0;
      711     5938    7           END;
      712     5939    7      ELSE DO;
      713     5940    7              DP$ = ICM$;
      714     5941    7              BOFS = %GT_ICMDATOFF#;
      715     5942    7           END;
      716     5943
      717     5944    6      CALL Y$IOLD (CHN_CH, DP$, BOFS, CHCON) WHENALTRETURN
      718     5945    7           DO;
      719     5946    7              ALTRETURN;
      720     5947    7           END;
      721     5948
      722     5949    6      RETURN;
      723     5950
      724     5951    6   END Y$XIOLD;
      725     5952
      726     5953    5   END Y$XECIO;
      727     5954
      728     5955    4   END Y$IOSTR;
      729     5956
      730     5957        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:36   
      731     5958        /*I*  NAME:        Y$XDATA
      732     5959              PURPOSE:     Save transmit data
      733     5960              CALL:        CALL Y$XDATA;
      734     5961                           Does not altreturn.
      735     5962              INTERFACE:   None.
      736     5963              DATA:        Uses data in ICM buffer (pointer ICM$).
      737     5964              DESCRIPTION: Moves transmit data from ICM buffer to
      738     5965                           temporary storage area.
      739     5966        */
      740     5967        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:37   
      741     5968    3   Y$XDATA: PROC;
      742     5969
      743     5970    4      DCL 1 Y_BUFTMP BASED ALIGNED,
      744     5971    4            2 BUFBYT (0:111) UBIN BYTE UNAL;
      745     5972
      746     5973    4      DCL BUF1$ PTR;
      747     5974
      748     5975    4      DCL BUF2$ PTR;
      749     5976
      750     5977    4      Y_DBUFSZ (Y_CLTICM.T1.R1.TSTIND) = 56;
      751     5978
      752     5979    4      BUF1$ = PINCRW (ICM$, %Y#ICMOFS);
      753     5980
      754     5981    4      BUF2$ = ADDR(Y_DBUF (Y_CLTICM.T1.R1.TSTIND * 56) );
      755     5982
      756     5983    4      BUF2$ -> Y_BUFTMP = BUF1$ -> Y_BUFTMP;
      757     5984
      758     5985    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      759     5986
      760     5987    4      RETURN;
      761     5988
      762     5989    4   END Y$XDATA;
      763     5990
      764     5991        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:38   
      765     5992        /*I*  NAME:        Y$SWRDS
      766     5993              PURPOSE:     Execute string of single-word reads
      767     5994              CALL:        CALL Y$SWRDS;
      768     5995                           Does not altreturn.
      769     5996              INTERFACE:   This routine calls the following:
      770     5997                            Y$IOREAD
      771     5998              DATA:        Uses data in ICM buffer (pointer ICM$).
      772     5999              DESCRIPTION: Executes a string of single-word read I/O's
      773     6000                           when they appear in the ICM test data.
      774     6001        */
      775     6002        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:39   
      776     6003    3   Y$SWRDS: PROC;
      777     6004
      778     6005    4      DCL INX UBIN WORD;
      779     6006    4      DCL NUMIO UBIN WORD;
      780     6007
      781     6008    4      INX = %GT_STRDATOFS#;
      782     6009
      783     6010    4      NUMIO = Y_CLTICM.T1.TSTDAT(3);
      784     6011
      785     6012    4      CALL Y$IOREAD ALTRET (BAMO);
      786     6013
      787     6014    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      788     6015
      789     6016    4   BAMO:
      790     6017    4      RETURN;
      791     6018
      792     6019        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:40   
      793     6020        /*I*  NAME:        Y$IOREAD
      794     6021              PURPOSE:     Perform single-word read I/O's
      795     6022              CALL:        CALL Y$IOREAD ALTRET;
      796     6023                           Altreturns if an I/O error occurs.
      797     6024              INTERFACE:   This routine calls the following:
      798     6025                            Y$DOIO
      799     6026              DATA:        Uses data in ICM buffer.
      800     6027              DESCRIPTION: Performs multiple reads of specified MLCP
      801     6028                           RAM bytes as per ICM test data.  The bytes
      802     6029                           read are placed in the corresponding CF data
      803     6030                           words of the ICM (a single byte, left justified,
      804     6031                           in each CF word).  The corresponding ML data
      805     6032                           words in the ICM are zeroed.
      806     6033        */
      807     6034        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:41   
      808     6035    4   Y$IOREAD: PROC ALTRET;
      809     6036
      810     6037    5      DCL ITEM UBIN WORD;
      811     6038    5      DCL CON UBIN WORD;
      812     6039    5      DCL 1 CHN ALIGNED,
      813     6040    5            2 C UBIN(10) UNAL,
      814     6041    5            2 F UBIN(6) UNAL;
      815     6042    5      DCL CHN_C UBIN(10) ALIGNED;
      816     6043    5      DCL CHN_F UBIN(6) ALIGNED;
      817     6044
      818     6045    6      DO ITEM = 0 TO 2*(NUMIO - 1) BY 2;
      819     6046
      820     6047    6         CON = Y_CLTICM.T2.TEXT(INX + ITEM);
      821     6048    6         CHN = Y_CLTICM.T2.ICMTXT(INX + ITEM + 1);
      822     6049    6         CHN_C = CHN.C;
      823     6050    6         CHN_F = CHN.F;
      824     6051
      825     6052    6         CALL Y$DOIO (CHN_C, CHN_F, CON) WHENALTRETURN
      826     6053    7              DO;
      827     6054    7                 ALTRETURN;
      828     6055    7              END;
      829     6056
      830     6057    6         Y_CLTICM.T2.TEXT(INX + ITEM) = 0;
      831     6058    6         Y_CLTICM.T2.TEXT(INX + ITEM + 1) = CON;
      832     6059
      833     6060    6      END;
      834     6061
      835     6062    5      RETURN;
      836     6063
      837     6064    5   END Y$IOREAD;
      838     6065
      839     6066    4   END Y$SWRDS;
      840     6067
      841     6068        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:42   
      842     6069        /*I*  NAME:        Y$BMWUP
      843     6070              PURPOSE:     Block mode write using supplied pointer
      844     6071              CALL:        CALL Y$BMWUP;
      845     6072                           Does not altreturn.
      846     6073              INTERFACE:   This routine calls the following:
      847     6074                            Y$WRBLK
      848     6075              DATA:        Uses data in ICM buffer (pointer ICM$).
      849     6076              DESCRIPTION: This routine moves a block of data from the
      850     6077                           ICM buffer into the MLCP RAM using the RAM
      851     6078                           address supplied in the ICM.
      852     6079        */
      853     6080        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:43   
      854     6081    3   Y$BMWUP: PROC;
      855     6082
      856     6083    4      DCL RAMAD UBIN WORD;
      857     6084    4      DCL CH UBIN(10) ALIGNED;
      858     6085
      859     6086    4      RAMAD = Y_CLTICM.T2.TEXT(9);
      860     6087
      861     6088    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (SHAZAM);
      862     6089
      863     6090    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      864     6091
      865     6092    4   SHAZAM:
      866     6093    4      RETURN;
      867     6094
      868     6095    4   END Y$BMWUP;
      869     6096
      870     6097        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:44   
      871     6098        /*I*  NAME:        Y$XEDAT
      872     6099              PURPOSE:     Implement transmit CCP (even line)
      873     6100              CALL:        CALL Y$XEDAT;
      874     6101                           Does not altreturn.
      875     6102              INTERFACE:   This routine calls the following:
      876     6103                            Y$XCCP
      877     6104              DATA:        Uses data in ICM buffer (pointer ICM$).
      878     6105              DESCRIPTION: This routine changes the odd line address to
      879     6106                           even line and moves the data for the transmit
      880     6107                           CCP from the ICM to the MLCP RAM (even line).
      881     6108                           It then stores the pointer to the CCP into
      882     6109                           LCT bytes 38 and 39 in the RAM.
      883     6110        */
      884     6111        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:45   
      885     6112    3   Y$XEDAT: PROC;
      886     6113
      887     6114    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR | %GT_ODDLINBIT#;
      888     6115    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR \ %GT_ODDLINBIT#;
      889     6116
      890     6117    4      CALL Y$XCCP;
      891     6118
      892     6119    4      RETURN;
      893     6120
      894     6121    4   END Y$XEDAT;
      895     6122
      896     6123        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:46   
      897     6124        /*I*  NAME:        Y$PRCCP
      898     6125              PURPOSE:     Implement partial receive CCP
      899     6126              CALL:        CALL Y$PRCCP;
      900     6127                           Does not altreturn.
      901     6128              INTERFACE:   This routine calls the following:
      902     6129                            Y$WRBLK
      903     6130              DATA:        Uses data in ICM buffer (pointer ICM$).
      904     6131              DESCRIPTION: Moves first part of receive CCP data from
      905     6132                           the ICM buffer into the MLCP RAM.
      906     6133        */
      907     6134        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:47   
      908     6135    3   Y$PRCCP: PROC;
      909     6136
      910     6137    4      DCL RAMAD UBIN WORD;
      911     6138    4      DCL CH UBIN(10) ALIGNED;
      912     6139
      913     6140    4      RAMAD = %Y#RCVRAM;
      914     6141
      915     6142    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (EGAD);
      916     6143
      917     6144    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      918     6145
      919     6146    4   EGAD:
      920     6147    4      RETURN;
      921     6148
      922     6149    4   END Y$PRCCP;
      923     6150
      924     6151        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:48   
      925     6152        /*I*  NAME:        Y$PXCCP;
      926     6153              PURPOSE:     Implement partial transmit CCP
      927     6154              CALL:        CALL Y$PXCCP;
      928     6155                           Does not altreturn.
      929     6156              INTERFACE:   This routine calls the following:
      930     6157                            Y$WRBLK
      931     6158              DATA:        Uses data in ICM buffer (pointer ICM$).
      932     6159              DESCRIPTION: Moves first part of transmit CCP data from
      933     6160                           the ICM buffer into the MLCP RAM.
      934     6161        */
      935     6162        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:49   
      936     6163    3   Y$PXCCP: PROC;
      937     6164
      938     6165    4      DCL RAMAD UBIN WORD;
      939     6166    4      DCL CH UBIN(10) ALIGNED;
      940     6167
      941     6168    4      RAMAD = %Y#XMTRAM;
      942     6169
      943     6170    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (ZOUNDS);
      944     6171
      945     6172    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
      946     6173
      947     6174    4   ZOUNDS:
      948     6175    4      RETURN;
      949     6176
      950     6177    4   END Y$PXCCP;
      951     6178
      952     6179        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:50   
      953     6180        /*I*  NAME:        Y$WRBLK
      954     6181              PURPOSE:     Move ICM data to MLCP RAM
      955     6182              CALL:        CALL Y$WRBLK (CH, RAMAD) ALTRET;
      956     6183                           Altreturns if an I/O error occurs.
      957     6184              PARAMETERS:  RAMAD is an input parameter containing the RAM
      958     6185                           address.
      959     6186                           CH is an output parameter containing the
      960     6187                           channel address.
      961     6188              INTERFACE:   This routine calls the following:
      962     6189                            Y$BMW
      963     6190                            M$WAIT
      964     6191                            Y$STATUS
      965     6192                            Y$CKSTAT
      966     6193              DATA:        Uses data in ICM buffer.
      967     6194              DESCRIPTION: Moves a block of ICM data using the ICM buffer
      968     6195                           (starting at word 14) into the MLCP RAM at the
      969     6196                           previously set-up Ram address.
      970     6197        */
      971     6198        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:51   
      972     6199    3   Y$WRBLK: PROC (CH, RAMAD) ALTRET;
      973     6200
      974     6201    4      DCL RAMAD UBIN WORD;
      975     6202    4      DCL STAT BIT(16) ALIGNED;
      976     6203    4      DCL CH UBIN(10) ALIGNED;
      977     6204
      978     6205    4      CALL Y$BMW (CH, RAMAD) ALTRET (BADUN);
      979     6206
      980     6207    4      CALL M$WAIT (WAIT_IO);
      981     6208
      982     6209    4      CALL Y$STATUS (CH, STAT) ALTRET (BADUN);
      983     6210
      984     6211    4      CALL Y$CKSTAT (CH, STAT) ALTRET (BADUN);
      985     6212
      986     6213    4   BADUN:
      987     6214    4      RETURN;
      988     6215
      989     6216    4   END Y$WRBLK;
      990     6217
      991     6218        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:52   
      992     6219        /*I*  NAME:        Y$BMW
      993     6220              PURPOSE:     Move ICM data to MLCP RAM
      994     6221              CALL:        CALL Y$BMW (CH, RAD) ALTRET;
      995     6222                           Altreturns if an I/O error occurs.
      996     6223              PARAMETERS:  RAD is an input parameter containing the RAM
      997     6224                           address.
      998     6225                           CH is an output parameter containing the
      999     6226                           channel address.
     1000     6227              INTERFACE:   This routine calls the following:
     1001     6228                            Y$IOLD
     1002     6229                            Y$DOIO
     1003     6230              DATA:        Uses data in ICM buffer.
     1004     6231              DESCRIPTION: Moves a block of ICM data using the ICM buffer
     1005     6232                           (starting at word 14) into the MLCP RAM at the
     1006     6233                           previously set-up Ram address.
     1007     6234        */
     1008     6235        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:53   
     1009     6236    3   Y$BMW: PROC (CH, RAD) ALTRET;
     1010     6237
     1011     6238    4      DCL RAD UBIN WORD;
     1012     6239    4      DCL CH UBIN(10) ALIGNED;
     1013     6240    4      DCL FC UBIN(6) ALIGNED;
     1014     6241    4      DCL STAT BIT(16) ALIGNED;
     1015     6242    4      DCL BOFS UBIN WORD;
     1016     6243    4      DCL BSIZ UBIN WORD;
     1017     6244
     1018     6245    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR | %GT_OTPCHNBIT#;
     1019     6246    4      CH = Y_CLTICM.T1.R1.CHNLNR.CH;
     1020     6247    4      BOFS = %GT_ICMDATOFF#;
     1021     6248    4      BSIZ = Y_CLTICM.T1.TSTDAT(1) * 2;
     1022     6249    4      CALL Y$IOLD (CH, ICM$, BOFS, BSIZ) ALTRET (ZONK);
     1023     6250
     1024     6251    4      FC = %GH#IO_OTPCCBCTR;
     1025     6252    4      CALL Y$DOIO (CH, FC, RAD) ALTRET (ZONK);
     1026     6253
     1027     6254    4      FC = %GH#IO_OTPCHNCTR;
     1028     6255    4      STAT = %GT_STTBLMWRT#;
     1029     6256    4      CALL Y$DOIO (CH, FC, STAT) ALTRET (ZONK);
     1030     6257
     1031     6258    4      FC = %GH#IO_INPNXTCCBSTT;
     1032     6259    4      STAT = '0'B;
     1033     6260    4      CALL Y$DOIO (CH, FC, STAT) ALTRET (ZONK);
     1034     6261
     1035     6262    4      RETURN;
     1036     6263
     1037     6264    4   ZONK:
     1038     6265    4      ALTRETURN;
     1039     6266
     1040     6267    4   END Y$BMW;
     1041     6268
     1042     6269        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:54   
     1043     6270        /*I*  NAME:        Y$STATUS
     1044     6271              PURPOSE:     Obtain and save status word
     1045     6272              CALL:        CALL Y$STATUS (CH, STAT) ALTRET;
     1046     6273                           Altreturns if an I/O error occurs.
     1047     6274              PARAMETERS:  CH is an INPUT parameter containing the
     1048     6275                           channel address.
     1049     6276                           STAT is an output parameter containing the
     1050     6277                           status.
     1051     6278              INTERFACE:   This routine calls the following:
     1052     6279                            Y$DOIO
     1053     6280                            Y$SAVSTT
     1054     6281              DATA:        Saves status in ICM buffer (pointer ICM$).
     1055     6282              DESCRIPTION: Executes I/O to obtain status word per
     1056     6283                           given channel address and saves status
     1057     6284                           in reply ICM.
     1058     6285        */
     1059     6286        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:55   
     1060     6287    3   Y$STATUS: PROC (CH, STAT) ALTRET;
     1061     6288
     1062     6289    4      DCL STAT BIT(16) ALIGNED;
     1063     6290    4      DCL 1 CH ALIGNED,
     1064     6291    4            2 M UBIN(9) UNAL,
     1065     6292    4            2 X BIT(1) UNAL;
     1066     6293    4      DCL FC UBIN(6) ALIGNED;
     1067     6294
     1068     6295    4      STAT = '0'B;
     1069     6296    4      FC = %GH#IO_INPCCBSTT;
     1070     6297
     1071     6298    4      CALL Y$DOIO (CH, FC, STAT) WHENALTRETURN
     1072     6299    5           DO;
     1073     6300    5              CALL Y$SAVSTT;
     1074     6301    5              ALTRETURN;
     1075     6302    5           END;
     1076     6303
     1077     6304    4      CALL Y$SAVSTT;
     1078     6305
     1079     6306    4      RETURN;
     1080     6307
     1081     6308        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:56   
     1082     6309        /*I*  NAME:        Y$SAVSTT
     1083     6310              PURPOSE:     Save status word
     1084     6311              CALL:        CALL Y$SAVSTT;
     1085     6312                           Does not altreturn.
     1086     6313              INTERFACE:   None.
     1087     6314              DATA:        ICM buffer (pointer ICM$).
     1088     6315              DESCRIPTION: Determines location in ICM buffer
     1089     6316                           to save status, and saves it there.
     1090     6317                           An output status is saved in word 13 of
     1091     6318                           the ICM.  An input status is saved in
     1092     6319                           word 12.
     1093     6320        */
     1094     6321        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:57   
     1095     6322    4   Y$SAVSTT: PROC;
     1096     6323
     1097     6324    5      IF CH.X
     1098     6325    5      THEN
     1099     6326    5         Y_CLTICM.T2.ICMTXT(10) = STAT;
     1100     6327    5      ELSE
     1101     6328    5         Y_CLTICM.T2.ICMTXT(9) = STAT;
     1102     6329
     1103     6330    5      RETURN;
     1104     6331
     1105     6332    5   END Y$SAVSTT;
     1106     6333
     1107     6334    4   END Y$STATUS;
     1108     6335
     1109     6336        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:58   
     1110     6337        /*I*  NAME:        Y$CKSTAT
     1111     6338              PURPOSE:     Check for valid status
     1112     6339              CALL:        CALL Y$CKSTAT (CH, STAT) ALTRET;
     1113     6340                           Altreturns if an I/O error occurs or
     1114     6341                           if timer runout occurs before a valid
     1115     6342                           status.
     1116     6343              PARAMETERS:  CH is an INPUT parameter containing the
     1117     6344                           pertinent channel address.
     1118     6345                           STAT is an input and output parameter
     1119     6346                           containing the status.
     1120     6347              INTERFACE:   This routine calls the following:
     1121     6348                            M$WAIT
     1122     6349                            Y$STATUS
     1123     6350                            Y$IOER
     1124     6351              DATA:        ICM buffer (pointer ICM$).
     1125     6352              DESCRIPTION: Checks status word in the FPT for device
     1126     6353                           ready.  If status is not ready, routine
     1127     6354                           then waits a short time and issues a new
     1128     6355                           status request.  This status is then
     1129     6356                           checked for ready.  Cycle continues until
     1130     6357                           either a valid status is obtained or a
     1131     6358                           timeout occurs.
     1132     6359        */
     1133     6360        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:59   
     1134     6361    3   Y$CKSTAT: PROC (CH, STAT) ALTRET;
     1135     6362
     1136     6363    4      DCL ITEM UBIN WORD;
     1137     6364    4      DCL STAT BIT(16) ALIGNED;
     1138     6365    4      DCL CH UBIN(10) ALIGNED;
     1139     6366    4      DCL FC UBIN(6) ALIGNED;
     1140     6367
     1141     6368    5      DO ITEM = 1 TO 9;
     1142     6369
     1143     6370    5         IF (STAT & %GT_STATUSCMP#)
     1144     6371    5         THEN
     1145     6372    5            RETURN;
     1146     6373    5         ELSE
     1147     6374    6              DO;
     1148     6375    6                 CALL M$WAIT (WAIT_IO);
     1149     6376    6                 CALL Y$STATUS (CH, STAT) ALTRET (BOP);
     1150     6377    6              END;
     1151     6378
     1152     6379    5      END;
     1153     6380    4      RETURN;
     1154     6381
     1155     6382    4   BOP:
     1156     6383    4      ALTRETURN;
     1157     6384
     1158     6385    4   END Y$CKSTAT;
     1159     6386
     1160     6387        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:60   
     1161     6388        /*I*  NAME:        Y$IOLD
     1162     6389              PURPOSE:     Perform IOLD using ICM data
     1163     6390              CALL:        CALL Y$IOLD (CH, DP$, BOFS, BSIZ) ALTRET;
     1164     6391                           Altreturns if an I/O error occurs
     1165     6392              PARAMETERS:  CH is an input parameter containing the
     1166     6393                           channel number.
     1167     6394                           DP$ is an input parameter containing a
     1168     6395                           pointer to the source data buffer.
     1169     6396                           BOFS is an input parameter containing
     1170     6397                           the byte offset value to the data buffer.
     1171     6398                           BSIZ is an input parameter containing
     1172     6399                           the size (bytes) of the data.
     1173     6400              INTERFACE:   This routine calls the following:
     1174     6401                            GHH$IOLD
     1175     6402                            Y$IOER
     1176     6403              DATA:        Sets up GT_IOLD FPT and uses ICM data.
     1177     6404              DESCRIPTION: Places channel, function code, size(bytes),
     1178     6405                           and buffer pointer (points to ICM word 14)
     1179     6406                           into GT_IOLD FPT.  Then it executes IOLD
     1180     6407                           using the GHH$IOLD routine.
     1181     6408        */
     1182     6409        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:61   
     1183     6410    3   Y$IOLD: PROC (CH, DP$, BOFS, BSIZ) ALTRET;
     1184     6411
     1185     6412    4      DCL CH UBIN(10) ALIGNED;
     1186     6413    4      DCL FC UBIN(6) ALIGNED;
     1187     6414    4      DCL DP$ PTR;
     1188     6415    4      DCL BOFS UBIN WORD;
     1189     6416    4      DCL BSIZ UBIN WORD;
     1190     6417
     1191     6418    4      FC = GT_IOLD.FNC;
     1192     6419
     1193     6420    4      GT_IOLD.CHN = CH;
     1194     6421    4      GT_IOLD.BYTX = BOFS;
     1195     6422    4      GT_IOLD.BUFSIZE = BSIZ;
     1196     6423    4      GT_IOLD.BUF$ = DP$;
     1197     6424
     1198     6425    4      CALL GHH$IOLD (GT_IOLD) WHENALTRETURN
     1199     6426    5           DO;
     1200     6427    5              Y_CLTICM.T1.IFLAGS.IONAK = %G_ON#;
     1201     6428    5              CALL Y$IOER (FC);
     1202     6429    5              ALTRETURN;
     1203     6430    5           END;
     1204     6431
     1205     6432    4      RETURN;
     1206     6433
     1207     6434    4   END Y$IOLD;
     1208     6435
     1209     6436        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:62   
     1210     6437        /*I*  NAME:        Y$DOIO
     1211     6438              PURPOSE:     Perform IO using ICM data
     1212     6439              CALL:        CALL Y$DOIO (CH, FC, CON) ALTRET;
     1213     6440                           Altreturns if an I/O error occurs.
     1214     6441              PARAMETERS:  CH is an input parameter containing the
     1215     6442                           channel number.
     1216     6443                           FC is an input parameter containing the
     1217     6444                           function code.
     1218     6445                           CON is an input or output parameter
     1219     6446                           containing control information.
     1220     6447              INTERFACE:   This routine calls the following:
     1221     6448                            GHH$IO_IN
     1222     6449                            Y$IOER
     1223     6450              DATA:        Sets up GT_IO FPT and uses ICM data.
     1224     6451              DESCRIPTION: Places channel address, function code, and
     1225     6452                           control word into the GT_IO FPT.  Then it
     1226     6453                           executes the I/O using the GHH$IO_IN
     1227     6454                           routine.
     1228     6455        */
     1229     6456        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:63   
     1230     6457    3   Y$DOIO: PROC (CH, FC, CON) ALTRET;
     1231     6458
     1232     6459    4      DCL CH UBIN(10) ALIGNED;
     1233     6460    4      DCL FC UBIN(6) ALIGNED;
     1234     6461    4      DCL CON UBIN WORD;
     1235     6462
     1236     6463    4      GT_IO.CAS.FNC = FC;
     1237     6464    4      GT_IO.RANGE = CON;
     1238     6465    4      GT_IO.CAS.CHN = CH;
     1239     6466
     1240     6467    4      CALL GHH$IO_IN (GT_IO) WHENALTRETURN
     1241     6468    5           DO;
     1242     6469    5              Y_CLTICM.T1.IFLAGS.IONAK = %G_ON#;
     1243     6470    5              CALL Y$IOER (FC);
     1244     6471    5              ALTRETURN;
     1245     6472    5           END;
     1246     6473
     1247     6474    4      CON = GT_IO.RANGE;
     1248     6475
     1249     6476    4      RETURN;
     1250     6477
     1251     6478    4   END Y$DOIO;
     1252     6479
     1253     6480        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:64   
     1254     6481        /*I*  NAME:        Y$IOER
     1255     6482              PURPOSE:     Process common error data on bad IO returns
     1256     6483              CALL:        CALL Y$IOER (FC);
     1257     6484                           Does not altreturn.
     1258     6485              PARAMETERS:  FC is an input parameter containing the
     1259     6486                           function code.
     1260     6487              INTERFACE:   None.
     1261     6488              DATA:        Uses data in ICM buffer (pointer ICM$).
     1262     6489              DESCRIPTION: Places common IO error data in ICM.
     1263     6490        */
     1264     6491        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:65   
     1265     6492    3   Y$IOER: PROC (FC);
     1266     6493
     1267     6494    4      DCL FC UBIN(6) ALIGNED;
     1268     6495
     1269     6496    4      Y_CLTICM.T1.TSTDAT(0) = FC;
     1270     6497    4      Y_CLTICM.T1.R1.ICMRPY = %Y#NORESP;
     1271     6498
     1272     6499    4      RETURN;
     1273     6500
     1274     6501    4   END Y$IOER;
     1275     6502
     1276     6503    3   END EXECUTE_TEST;
     1277     6504
     1278     6505        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:66   
     1279     6506        /*I*  NAME:        TERMINATE_TEST
     1280     6507              PURPOSE:     Terminate specified FEP COLTS test
     1281     6508              CALL:        CALL TERMINATE_TEST;
     1282     6509                           Does not altreturn.
     1283     6510              INTERFACE:   This routine calls the following:
     1284     6511                            Y$TRMTST
     1285     6512              DATA:        Uses data in ICM buffer (pointer ICM$).
     1286     6513              DESCRIPTION: Extracts the channel number and test
     1287     6514                           number from the ICM data and then calls
     1288     6515                           Y$TRMTST to terminate this test.
     1289     6516                           Places proper reply code in ICM data.
     1290     6517        */
     1291     6518        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:67   
     1292     6519    2   TERMINATE_TEST: PROC ALTRET;
     1293     6520
     1294     6521    3      DCL TNUM UBIN BYTE ALIGNED;
     1295     6522    3      DCL CHAD BIT(16) ALIGNED;
     1296     6523
     1297     6524    3      TNUM = Y_CLTICM.T1.R1.TSTIND;
     1298     6525    3      CHAD = Y_CLTICM.T1.R1.CHNLNR;
     1299     6526
     1300     6527    3      CALL Y$TRMTST (TNUM,CHAD);
     1301     6528
     1302     6529    3      IF Y_FLAGS.NOSUCHTST = %G_OFF#
     1303     6530    3      THEN
     1304     6531    3         Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
     1305     6532
     1306     6533    4      ELSE DO;
     1307     6534    4              Y_CLTICM.T1.IFLAGS.NOTEST = %G_ON#;
     1308     6535    4              Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;
     1309     6536    4              Y_FLAGS.NOSUCHTST = %G_OFF#;
     1310     6537    4           END;
     1311     6538
     1312     6539    3      RETURN;
     1313     6540
     1314     6541    3   END TERMINATE_TEST;
     1315     6542
     1316     6543    2   END PROCESS_ICM;
     1317     6544
     1318     6545        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:68   
     1319     6546        /*I*  NAME:        WRAP_UP
     1320     6547              PURPOSE:     Terminate all FEP COLTS tests
     1321     6548              CALL:        CALL WRAP_UP;
     1322     6549                           Does not altreturn.
     1323     6550              INTERFACE:   This routine calls the following:
     1324     6551                            Y$TRMTST
     1325     6552              DATA:        Uses data in Active Test Table.
     1326     6553              DESCRIPTION: This routine successively extracts channel
     1327     6554                           number and test number information on each
     1328     6555                           active test from the Active Test Table.
     1329     6556                           It successively calls Y$TRMTST to terminate
     1330     6557                           each active test.
     1331     6558        */
     1332     6559        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:69   
     1333     6560    1   WRAP_UP: PROC ALTRET;
     1334     6561
     1335     6562    2      DCL TNUM UBIN BYTE ALIGNED;
     1336     6563    2      DCL CHAD BIT(16) ALIGNED;
     1337     6564
     1338     6565    2      IF Y_TCOUNT > 0
     1339     6566    3      THEN DO TNUM = 0 TO 7;
     1340     6567
     1341     6568    3              IF Y_TENTRY (TNUM)
     1342     6569    4              THEN DO;
     1343     6570    4                      CHAD = Y_TENTRY.CHN(TNUM);
     1344     6571    4                      CALL Y$TRMTST (TNUM,CHAD);
     1345     6572    4                      IF Y_TCOUNT = 0 THEN RETURN;
     1346     6573    4                   END;
     1347     6574
     1348     6575    3           END;
     1349     6576
     1350     6577    2      RETURN;
     1351     6578
     1352     6579    2   END WRAP_UP;
     1353     6580
     1354     6581        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:70   
     1355     6582        /*I*  NAME:        Y$TRMTST
     1356     6583              PURPOSE:     Terminate specified FEP COLTS test
     1357     6584              CALL:        CALL Y$TRMTST (TNUM, CHAD);
     1358     6585                           Does not altreturn.
     1359     6586              PARAMETERS:  TNUM is an INPUT parameter containing the index
     1360     6587                           number to the test's entry in the Active Test
     1361     6588                           Table.
     1362     6589                           CHAD is an INPUT parameter containing the channel
     1363     6590                           address for the test.
     1364     6591              INTERFACE:   This routine calls the following:
     1365     6592                            M$RCHAN
     1366     6593              DATA:        Operates on Active Test Table.
     1367     6594              DESCRIPTION: This routine clears the entry for the specified
     1368     6595                           test in the Active Test Table, clears the contents
     1369     6596                           of the associated temporary storage area, and
     1370     6597                           releases the MLCP line(s) from COLTS control.
     1371     6598                           The routine also sets a flag if there is an
     1372     6599                           altreturn from M$RCHAN.
     1373     6600        */
     1374     6601        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:71   
     1375     6602    1   Y$TRMTST: PROC (TNUM,CHAD) ALTRET;
     1376     6603
     1377     6604    2      DCL TNUM UBIN BYTE ALIGNED;
     1378     6605    2      DCL ITEM UBIN WORD;
     1379     6606    2      DCL CHAD UBIN(16) ALIGNED;
     1380     6607
     1381     6608    2      IF Y_TENTRY.TYP(TNUM) = 12
     1382     6609    2      THEN
     1383     6610    2         RELEASE_CHAN.V.CONTROLLER = '1'B;
     1384     6611    2      ELSE
     1385     6612    2         RELEASE_CHAN.V.CONTROLLER = '0'B;
     1386     6613
     1387     6614    2      Y_TENTRY(TNUM) = '0'B;
     1388     6615
     1389     6616    2      Y_DBUFSZ(TNUM) = 0;
     1390     6617
     1391     6618    3      DO ITEM = 0 TO 55;
     1392     6619    3         Y_DBUF(TNUM * 56 + ITEM) = 0;
     1393     6620    3      END;
     1394     6621
     1395     6622    2      Y_TCOUNT = Y_TCOUNT - 1;
     1396     6623
     1397     6624    2      Y_FLAGS.NOSUCHTST = %G_OFF#;
     1398     6625
     1399     6626    2      RELEASE_CHAN.V.CHANNEL = CHAD;
     1400     6627
     1401     6628    2      CALL M$RCHAN (RELEASE_CHAN)
     1402     6629    3      WHENALTRETURN DO;
     1403     6630    3              Y_FLAGS.NOSUCHTST = %G_ON#;
     1404     6631    3           END;
     1405     6632
     1406     6633    2      RETURN;
     1407     6634
     1408     6635    2   END Y$TRMTST;
     1409     6636
     1410     6637    1   END GTC$MLCP_HNDLR;
     1411     6638
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:72   
     1412     6639        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:73   

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:74   
--  Include file information  --

   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GT_CMN_E.:E05TOU  is referenced.
   GT_MACROS_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GTC$MLCP_HNDLR.

   Procedure GTC$MLCP_HNDLR requires 1976 words for executable code.
   Procedure GTC$MLCP_HNDLR requires 53 words of local(AUTO) storage.

    No errors detected in file GTC$MLCP_HNDLR.:E05TSI    .

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:75   

 Object Unit name= GTC$MLCP_HNDLR                             File name= GTC$MLCP_HNDLR.:E05TOU
 UTS= JUL 29 '97 22:12:22.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none   886    376  GTC$MLCP_HNDLR
    1   DCB   even  none     0      0  M$COLTC
    2  RoData even  UTS      4      4  GTC$MLCP_HNDLR
    3   Proc  even  none  1976    7B8  GTC$MLCP_HNDLR
    4  RoData even  none     5      5  GTC$MLCP_HNDLR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Main       0  GTC$MLCP_HNDLR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$IOLD
 yes     yes           Std       1 GHH$IO_IN
                       nStd      0 X6A_MAUTO
                       nStd      0 X6A_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$COLTC                          r    G$ROS$
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:76   


        1        1        /*M* GTC$MLCP_HNDLR     Front End T&D COLTS Message and I/O Handler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        GTC$MLCP_HNDLR
       12       12              AUTHOR:      R. D. Vogler
       13       13              PURPOSE:     Colts Message Handler and I/O Handler
       14       14              DESCRIPTION: This module handles Colts intercomputer messages
       15       15                           (ICM's) between the FEP and the Host, and also
       16       16                           performs necessary I/O on behalf of the Colts
       17       17                           test pages.
       18       18              REFERENCE:   CP-6 Release C01
       19       19              LAST UPDATE: 02/07/85
       20       20        */
       21       21        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:77   
       22       22        /*F*  NAME:        GTC$MLCP_HNDLR
       23       23              PURPOSE:     Handle COLTS ICM's and test I/O's
       24       24              DESCRIPTION: This procedure is entered as a consequence of
       25       25                           downline-loading this module into the front-end
       26       26                           processor(FEP).  This routine opens a path to
       27       27                           host COLTS, processes incoming COLTS messages
       28       28                           (ICM's), performs specified test I/O's, and sends
       29       29                           the test results back to host COLTS.  As the
       30       30                           result of an ALTRET on either M$READ or M$WRITE,
       31       31                           this procedure does an orderly cleanup and
       32       32                           exits.
       33       33        */
       34       34        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:78   
       35       35        /*D*  NAME:        GTC$MLCP_HNDLR
       36       36              INTERFACE:   This routine calls the following:
       37       37                            M$OPEN
       38       38                            M$READ
       39       39                            PROCESS_ICM
       40       40                            M$WRITE
       41       41                            WRAP_UP
       42       42                            M$CLOSE
       43       43                            M$EXIT
       44       44        */
       45       45        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:79   
       46       46        GTC$MLCP_HNDLR: PROC MAIN;

     46   3 000000  D380 0000 0000  xent GTC$MLCP_HNDLR  LNJ,B5   X6A_MAUTO
          3 000003       0035 0000                       DC       53,0

       47       47
       48       48        /*   INCLUDE FILES   */
       49       49        %INCLUDE GT_MACROS_M;
       50      132        %INCLUDE GT_CMN_E;
       51      238        %INCLUDE GH_IOFNC_E;
       52      307        %INCLUDE GH_HARDWARE_M;
       53      405        %INCLUDE LCP_6;
       54     4684        %INCLUDE G_JIT_M;
       55     4949        %G$JIT_E;
       56     5011
       57     5012        /*   MACROS   */
       58     5013        %Y_CLTICM (STCLASS = "BASED (ICM$)");
       59     5058        %GH_IO (FPTN  = GT_IO, STCLASS =  STATIC);
       60     5074        %GH_IOLD (FPTN = GT_IOLD, STCLASS = STATIC);
       61     5089        %VLR_GCHAN (FPTN = CHAN_DATA);
       62     5108
       63     5109        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:80   
       64     5110        /*   FPT'S   */
       65     5111        %FPT_OPEN  (FPTN    = OPEN_COLTS,
       66     5112                    DCB     = M$COLTC,
       67     5113                    ORG     = CONSEC,
       68     5114                    RES     ='HO');
       69     5142
       70     5143        %FPT_READ  (FPTN    = GET_ICM,
       71     5144                    DCB     = M$COLTC,
       72     5145                    BUF     = ICMDATA,
       73     5146                    WAIT    = YES);
       74     5172
       75     5173        %FPT_WRITE (FPTN    = SEND_ICM,
       76     5174                    BP      = YES,
       77     5175                    DCB     = M$COLTC,
       78     5176                    BUF     = ICMDATA);
       79     5200
       80     5201        %FPT_WAIT  (FPTN    = WAIT_IO,
       81     5202                    UNITS   = SECS_DELAY);
       82     5226
       83     5227        %FPT_CLOSE (FPTN    = END_COLTS,
       84     5228                    DCB     = M$COLTC);
       85     5248
       86     5249        %FPT_GCHAN (FPTN       = GET_CHAN,
       87     5250                    GCHAN      = CHAN_DATA,
       88     5251                    DIAG       = YES);
       89     5274
       90     5275        %FPT_RCHAN (FPTN       = RELEASE_CHAN);
       91     5296
       92     5297        %FPT_SPRIV (FPTN = ACTIVATE_PRIV,
       93     5298                    AUTH = YES,
       94     5299                    PRIV = MSYS_PRIV);
       95     5322
       96     5323        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:81   
       97     5324        /*   DCL'S   */
       98     5325    1      DCL 1 Y_FLAGS STATIC ALIGNED,
       99     5326    1            2 NOSUCHTST BIT(1) UNAL INIT('0'B),
      100     5327    1            2 CKRDY BIT(1) UNAL INIT('0'B),
      101     5328    1            2 NOATE BIT(1) UNAL INIT('0'B),
      102     5329    1            2 RCH BIT(1) UNAL INIT('0'B),
      103     5330    1            2 XCH BIT(1) UNAL INIT('0'B),
      104     5331    1            2 * BIT(3) UNAL INIT('0'B);
      105     5332
      106     5333    1      DCL Y_TCOUNT UBIN BYTE STATIC UNAL INIT(0);
      107     5334
      108     5335    1      DCL 1 Y_TENTRY(0:7) STATIC ALIGNED,
      109     5336    1            2 CHN,
      110     5337    1              3 C BIT(10) UNAL INIT('0'B*8),
      111     5338    1              3 F BIT(6) UNAL INIT('0'B*8),
      112     5339    1            2 RFU UBIN BYTE UNAL INIT(0*8),
      113     5340    1            2 TYP UBIN BYTE UNAL INIT(0*8);
      114     5341
      115     5342    1      DCL ICM$ PTR STATIC INIT(ADDR(NIL));
      116     5343
      117     5344    1      DCL SECS_DELAY UBIN(16) STATIC INIT(1);
      118     5345
      119     5346    1      DCL M$COLTC DCB;
      120     5347
      121     5348    1      DCL GHH$IOLD ENTRY(1) ALTRET ;
      122     5349    1      DCL GHH$IO_IN ENTRY(1) ALTRET ;
      123     5350
      124     5351    1      DCL Y_DBUFSZ(0:7) UBIN WORD STATIC INIT(0*8);
      125     5352    1      DCL Y_DBUF(0:447) UBIN WORD STATIC ALIGNED INIT(0*448);
      126     5353
      127     5354    1      DCL ICMDATA CHAR(512) STATIC ALIGNED INIT(' ');
      128     5355
      129     5356    1      DCL MSYS_PRIV BIT (32) STATIC ALIGNED INIT('0'B);
      130     5357
      131     5358        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:82   
      132     5359
      133     5360        /*   THIS IS THE TOP-LEVEL CODING FOR THIS PROCEDURE   */
      134     5361
      135     5362        /* Note that it does M$READ(with WAIT) and M$WRITE(no WAIT) */
      136     5363
      137     5364    1      MSYS_PRIV = %G_PR_TND#;

   5364   3 000005  8C80 0000 0000  02                   LDI      0
          3 000008  8D00 0000 0374  00                   SDI      MSYS_PRIV

      138     5365    1      CALL M$SPRIV (ACTIVATE_PRIV) ALTRET (SOLONG);

   5365   3 00000B  BB80 0000 008D  00                   LAB,B3   ACTIVATE_PRIV
          3 00000E  B870 0CD0                            LDR,R3   3280,IMO
          3 000010  0001                                 MCL
          3 000011       003E                            DC       s:5385,PREL

      139     5366    1      CALL M$SYS ALTRET (SOLONG);

   5366   3 000012  3C43                                 LDV,R3   67
          3 000013  0001                                 MCL
          3 000014       003B                            DC       s:5385,PREL

      140     5367
      141     5368    1      CALL M$OPEN (OPEN_COLTS) ALTRET (SOLONG);

   5368   3 000015  BB80 0000 000F  00                   LAB,B3   OPEN_COLTS
          3 000018  B870 3540                            LDR,R3   13632,IMO
          3 00001A  0001                                 MCL
          3 00001B       0034                            DC       s:5385,PREL

      142     5369
      143     5370    1      ICM$ = ADDR (ICMDATA);

   5370   3 00001C  EB80 0000 0274  00                   LAB,B6   ICMDATA
          3 00001F  EF80 0000 00A9  00                   STB,B6   ICM$

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:83   
      144     5371
      145     5372    2      DO WHILE (%G_YES#);

      146     5373    2         VBOUND(GET_ICM.BUF_) = 139;

   5373   3 000022  E870 008B                            LDR,R6   139,IMO
          3 000024  EF00 0000 0044  00                   STR,R6   GET_ICM+6

      147     5374    2         CALL M$READ (GET_ICM) ALTRET (BEGONE);

   5374   3 000027  BB80 0000 003E  00                   LAB,B3   GET_ICM
          3 00002A  B870 1542                            LDR,R3   5442,IMO
          3 00002C  0001                                 MCL
          3 00002D       0018                            DC       s:5381,PREL

      148     5375    2         CALL PROCESS_ICM;

   5375   3 00002E  E3C0 0026                            LNJ,B6   s:0,PREL
          3 000030       0001                            DC       s:5376,PREL

      149     5376    2         VBOUND(SEND_ICM.BUF_) = 2 * Y_CLTICM.T1.R1.ICMWDS - 1;

   5376   3 000031  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000034  E846 0003                            LDR,R6   3,B6
          3 000036  6001                                 SOL,R6   1
          3 000037  E570 01FE                            AND,R6   510,IMO
          3 000039  6EFF                                 ADV,R6   -1
          3 00003A  EF00 0000 0056  00                   STR,R6   SEND_ICM+6

      150     5377    2         CALL M$WRITE (SEND_ICM) ALTRET (BEGONE);

   5377   3 00003D  BB80 0000 0050  00                   LAB,B3   SEND_ICM
          3 000040  B870 1543                            LDR,R3   5443,IMO
          3 000042  0001                                 MCL
          3 000043       0002                            DC       s:5381,PREL

      151     5378    2      END;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:84   

   5378   3 000044  0FDE                                 B        s:5373,SPREL

      152     5379
      153     5380    1   BEGONE:
      154     5381    1      CALL WRAP_UP;

   5381   3 000045  E3C0 06D0            BEGONE          LNJ,B6   s:0,PREL
          3 000047       0001                            DC       s:5382,PREL

      155     5382    1      CALL M$CLOSE (END_COLTS);

   5382   3 000048  BB80 0000 006C  00                   LAB,B3   END_COLTS
          3 00004B  B870 1541                            LDR,R3   5441,IMO
          3 00004D  0001                                 MCL
          3 00004E       0000                            DC       s:5382+6,PREL

      156     5383
      157     5384    1   SOLONG:
      158     5385    1      CALL M$EXIT;

   5385   3 00004F  B870 0080            SOLONG          LDR,R3   128,IMO
          3 000051  0001                                 MCL
          3 000052       0000                            DC       s:5385+3,PREL
          3 000053  0F81 0761                            B        s:6637,PREL

      159     5386
      160     5387        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:85   
      161     5388        /*I*  NAME:        PROCESS_ICM
      162     5389              PURPOSE:     Process all COLTS ICM's
      163     5390              CALL:        CALL PROCESS_ICM;
      164     5391                           Never altreturns.
      165     5392              INTERFACE:   This routine calls the following:
      166     5393                            Y$CKSUM
      167     5394                            START_TEST
      168     5395                            EXECUTE_TEST
      169     5396                            TERMINATE_TEST
      170     5397              DATA:        This routine analyzes and modifies the data
      171     5398                           in the ICM buffer using the pointer ICM$.
      172     5399              DESCRIPTION: This procedure validates the checksum of the
      173     5400                           incoming ICM data, decodes and executes the
      174     5401                           ICM command, collects the test results and
      175     5402                           formats them into the outgoing ICM reply data.
      176     5403        */
      177     5404        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:86   
      178     5405    1   PROCESS_ICM: PROC;

   5405   3 000055  EFC7 0004            PROCESS_ICM     STB,B6   +4,AUTO

      179     5406
      180     5407    2      DCL CKS BIT(16) ALIGNED;
      181     5408
      182     5409    2      CALL Y$CKSUM (CKS);

   5409   3 000057  DBC7 0006                            LAB,B5   CKS,AUTO
          3 000059  DFC7 000A                            STB,B5   CHAD+3,AUTO
          3 00005B  E3C0 0053                            LNJ,B6   s:0,PREL
          3 00005D       0001                            DC       s:5411,PREL

      183     5410
      184     5411    2      IF Y_CLTICM.T1.R1.ICMCKS ~= CKS

   5411   3 00005E  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000061  E846 0002                            LDR,R6   2,B6
          3 000063  E947 0006                            CMR,R6   CKS,AUTO
          3 000065  0901 000D                            BE       s:5419,PREL

      185     5412
      186     5413    3      THEN DO;

      187     5414    3              Y_CLTICM.T1.IFLAGS.BADCKS = %G_ON#;

   5414   3 000067  8946 0008                            LBT,'0080'X       8,B6
   5414   3 000069       0080

      188     5415    3              Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;

   5415   3 00006A  6C22                                 LDV,R6   34
          3 00006B  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00006E  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000070       00FF

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:87   
      189     5416    3           END;

   5416   3 000071  0F81 002B                            B        s:5435,PREL

      190     5417
      191     5418    3      ELSE DO;

      192     5419    4              DO CASE (Y_CLTICM.T1.R1.ICMCOM);

   5419   3 000073  B2C6 0004                            LLH,R3   4,B6
          3 000075  3D06                                 CMV,R3   6
          3 000076  0281 001C                            BGE      s:5430,PREL
          3 000078  A830 0000 007E  03                   LDR,R2   s:5419+11,R3
          3 00007B  83A0 0000 0084  03                   JMP      s:5421,R2
          3 00007E       000F                            DC       s:5430,PREL
          3 00007F       000F                            DC       s:5430,PREL
          3 000080       000F                            DC       s:5430,PREL
          3 000081       0000                            DC       s:5421,PREL
          3 000082       0005                            DC       s:5424,PREL
          3 000083       000A                            DC       s:5427,PREL

      193     5420    4                 CASE (%Y#STARTT);

      194     5421    4                    CALL START_TEST;

   5421   3 000084  E3C0 005D                            LNJ,B6   s:0,PREL
          3 000086       0001                            DC       s:5421+3,PREL
          3 000087  0F81 0015                            B        s:5435,PREL

      195     5422
      196     5423    4                 CASE (%Y#EXECUT);

      197     5424    4                    CALL EXECUTE_TEST;

   5424   3 000089  E3C0 0121                            LNJ,B6   s:0,PREL
          3 00008B       0001                            DC       s:5424+3,PREL
          3 00008C  0F81 0010                            B        s:5435,PREL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:88   

      198     5425
      199     5426    4                 CASE (%Y#TERMNT);

      200     5427    4                    CALL TERMINATE_TEST;

   5427   3 00008E  E3C0 064C                            LNJ,B6   s:0,PREL
          3 000090       0001                            DC       s:5427+3,PREL
          3 000091  0F81 000B                            B        s:5435,PREL

      201     5428
      202     5429    4                 CASE (ELSE);

      203     5430    4                    Y_CLTICM.T1.IFLAGS.BADCOM = %G_ON#;

   5430   3 000093  8946 0008                            LBT,'0040'X       8,B6
   5430   3 000095       0040

      204     5431    4                    Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;

   5431   3 000096  6C22                                 LDV,R6   34
          3 000097  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00009A  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 00009C       00FF

      205     5432    4              END;

      206     5433    3           END;

      207     5434
      208     5435    2      CALL Y$CKSUM (CKS);

   5435   3 00009D  EBC7 0006                            LAB,B6   CKS,AUTO
          3 00009F  EFC7 000A                            STB,B6   CHAD+3,AUTO
          3 0000A1  E3C0 000D                            LNJ,B6   s:0,PREL
          3 0000A3       0001                            DC       s:5437,PREL

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:89   
      209     5436
      210     5437    2      Y_CLTICM.T1.R1.ICMCKS = CKS;

   5437   3 0000A4  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0000A7  E847 0006                            LDR,R6   CKS,AUTO
          3 0000A9  EF46 0002                            STR,R6   2,B6

      211     5438
      212     5439    2      RETURN;

   5439   3 0000AB  ECC7 0004                            LDB,B6   +4,AUTO
          3 0000AD  C3C6 0001                            LNJ,B4   1,B6

      213     5440
      214     5441        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:90   
      215     5442        /*I*  NAME:        Y$CKSUM
      216     5443              PURPOSE:     Compute checksum for COLTS ICM
      217     5444              CALL:        CALL Y$CKSUM (CS);
      218     5445                           Does not altreturn.
      219     5446              PARAMETERS:  CS is an OUTPUT parameter containing the
      220     5447                           computed checksum of the ICM data.
      221     5448              INTERFACE:   None.
      222     5449              DATA:        Examines data in ICM buffer using pointer ICM$.
      223     5450              DESCRIPTION: Computes checksum by successively exclusive-or'ing
      224     5451                           the words in the ICM data buffer, starting with
      225     5452                           word 3 of the ICM.
      226     5453        */
      227     5454        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:91   
      228     5455    2   Y$CKSUM: PROC (CS);

   5455   3 0000AF  EFC7 0008            Y$CKSUM         STB,B6   CHAD+1,AUTO

      229     5456
      230     5457    3      DCL ITEM UBIN BYTE;
      231     5458    3      DCL CS BIT(16) ALIGNED;
      232     5459
      233     5460    3      CS = '0'B;

   5460   3 0000B1  DCC7 000A                            LDB,B5   @CS,AUTO
          3 0000B3  8705                                 CL       ,B5

      234     5461
      235     5462    3      IF Y_CLTICM.T1.R1.ICMWDS > 9

   5462   3 0000B4  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0000B7  E846 0003                            LDR,R6   3,B6
          3 0000B9  E570 00FF                            AND,R6   255,IMO
          3 0000BB  6D09                                 CMV,R6   9
          3 0000BC  0381 0021                            BLE      s:5469,PREL

      236     5463    3      THEN
      237     5464
      238     5465    4           DO ITEM = 0 TO Y_CLTICM.T1.R1.ICMWDS - 4;

   5465   3 0000BE  87C7 000C                            CLH      ITEM,AUTO
          3 0000C0  0F81 0011                            B        s:5467+5,PREL

      239     5466    4              CS = CS \ Y_CLTICM.T2.ICMTXT (ITEM);

   5466   3 0000C2  ECC7 000A                            LDB,B6   @CS,AUTO
          3 0000C4  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0000C7  B2C7 000C                            LLH,R3   ITEM,AUTO
          3 0000C9  3E03                                 ADV,R3   3
          3 0000CA  E806                                 LDR,R6   ,B6
          3 0000CB  E635                                 XOR,R6   ,B5,R3
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:92   
          3 0000CC  EF06                                 STR,R6   ,B6

      240     5467    4           END;

   5467   3 0000CD  D2C7 000C                            LLH,R5   ITEM,AUTO
          3 0000CF  5E01                                 ADV,R5   1
          3 0000D0  D7C7 000C                            STH,R5   ITEM,AUTO
          3 0000D2  E2C7 000C                            LLH,R6   ITEM,AUTO
          3 0000D4  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0000D7  D846 0003                            LDR,R5   3,B6
          3 0000D9  D570 00FF                            AND,R5   255,IMO
          3 0000DB  5EFC                                 ADV,R5   -4
          3 0000DC  E955                                 CMR,R6   R5
          3 0000DD  0AE5                                 BALE     s:5466,SPREL

      241     5468
      242     5469    3      RETURN;

   5469   3 0000DE  ECC7 0008                            LDB,B6   CHAD+1,AUTO
          3 0000E0  C3C6 0001                            LNJ,B4   1,B6

      243     5470
      244     5471    3   END Y$CKSUM;
      245     5472
      246     5473        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:93   
      247     5474        /*I*  NAME:        START_TEST
      248     5475              PURPOSE:     Allocate resources for COLTS testing
      249     5476              CALL:        CALL START_TEST;
      250     5477                           Does not altreturn.
      251     5478              INTERFACE:   This routine calls the following:
      252     5479                            Y$GETLIN
      253     5480                            Y$ALLOC
      254     5481              DATA:        Uses data in ICM buffer (pointer ICM$).
      255     5482              DESCRIPTION: Places entry in Active Test Table and allocates
      256     5483                           channel/device for COLTS testing.
      257     5484        */
      258     5485        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:94   
      259     5486    2   START_TEST: PROC;

   5486   3 0000E2  EFC7 0008            START_TEST      STB,B6   CHAD+1,AUTO

      260     5487
      261     5488    3      DCL CHAD BIT(16) ALIGNED;
      262     5489
      263     5490    3      CHAD = Y_CLTICM.T1.R1.CHNLNR;

   5490   3 0000E4  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0000E7  E845 0005                            LDR,R6   5,B5
          3 0000E9  EF47 000A                            STR,R6   CHAD,AUTO

      264     5491
      265     5492    3      CALL Y$GETLIN WHENRETURN

   5492   3 0000EB  E3C0 003F                            LNJ,B6   s:0,PREL
          3 0000ED       0004                            DC       s:5497,PREL

      266     5493    4           DO;

      267     5494    4              CALL Y$ALLOC;

   5494   3 0000EE  E3C0 0090                            LNJ,B6   s:0,PREL
          3 0000F0       0001                            DC       s:5497,PREL

      268     5495    4           END;

      269     5496
      270     5497    3      IF Y_CLTICM.T1.IFLAGS.DVBUSY = %G_OFF#

   5497   3 0000F1  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0000F4  82C6 0008                            LB,'0010'X        8,B6
          3 0000F6       0010
          3 0000F7  0501 0007                            BBT      s:5502,PREL

      271     5498    3      THEN
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:95   
      272     5499    3         Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5499   3 0000F9  6C21                                 LDV,R6   33
          3 0000FA  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 0000FC       00FF
          3 0000FD  0F81 0029                            B        s:5513,PREL

      273     5500    3      ELSE
      274     5501    4           DO;

      275     5502    4              Y_CLTICM.T1.R1.ICMRPY = %Y#ALLOCN;

   5502   3 0000FF  6C29                                 LDV,R6   41
          3 000100  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000102       00FF

      276     5503    4              IF Y_FLAGS.NOATE

   5503   3 000103  8280 0000 0097  00                   LB,'2000'X        Y_FLAGS
   5503   3 000106       2000
          3 000107  0581 0007                            BBF      s:5508,PREL

      277     5504    4              THEN
      278     5505    4                 Y_FLAGS.NOATE = %G_OFF#;

   5505   3 000109  8800 0000 0097  00                   LBF,'2000'X       Y_FLAGS
   5505   3 00010C       2000
          3 00010D  0F81 0019                            B        s:5513,PREL

      279     5506    4              ELSE
      280     5507    5                   DO;

      281     5508    5                      Y_TENTRY(Y_CLTICM.T1.R1.TSTIND) = '0'B;

   5508   3 00010F  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000112  B2C6 0003                            LLH,R3   3,B6
          3 000114  BF47 0034                            STR,R3   @FC+2,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:96   
          3 000116  3001                                 SOL,R3   1
          3 000117  8730 0000 0099  00                   CL       Y_TENTRY,R3
          3 00011A  B847 0034                            LDR,R3   @FC+2,AUTO
          3 00011C  3001                                 SOL,R3   1
          3 00011D  8730 0000 009A  00                   CL       Y_TENTRY+1,R3

      282     5509    5                      Y_TCOUNT = Y_TCOUNT - 1;

   5509   3 000120  D280 0000 0098  00                   LLH,R5   Y_TCOUNT
          3 000123  5EFF                                 ADV,R5   -1
          3 000124  D780 0000 0098  00                   STH,R5   Y_TCOUNT

      283     5510    5                   END;

      284     5511    4           END;

      285     5512
      286     5513    3      RETURN;

   5513   3 000127  ECC7 0008                            LDB,B6   CHAD+1,AUTO
          3 000129  C3C6 0001                            LNJ,B4   1,B6

      287     5514
      288     5515        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:97   
      289     5516        /*I*  NAME:        Y$GETLIN
      290     5517              PURPOSE:     Put entry in Active Test Table
      291     5518              CALL:        CALL Y$GETLIN ALTRET;
      292     5519                           This routine altreturns if the table is full.
      293     5520              INTERFACE:   None.
      294     5521              DATA:        Uses data in ICM buffer (pointer ICM$).
      295     5522              DESCRIPTION: This routine places the channel number and
      296     5523                           test type code of the requested test in the
      297     5524                           next available entry in the Active Test Table.
      298     5525                           The table can hold a maximum of 8 entries.
      299     5526        */
      300     5527        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:98   
      301     5528    3   Y$GETLIN: PROC ALTRET;

   5528   3 00012B  EFC7 000C            Y$GETLIN        STB,B6   ITEM,AUTO

      302     5529
      303     5530    4      DCL ITEM UBIN BYTE;
      304     5531
      305     5532    4      IF Y_TCOUNT < 8

   5532   3 00012D  E280 0000 0098  00                   LLH,R6   Y_TCOUNT
          3 000130  6D08                                 CMV,R6   8
          3 000131  0281 003F                            BGE      s:5546,PREL

      306     5533    5      THEN DO ITEM = 0 TO 7;

   5533   3 000133  87C7 000E                            CLH      ITEM,AUTO

      307     5534
      308     5535    5              IF Y_TENTRY(ITEM) = '0'B

   5535   3 000135  EB80 0000 0000  00                   LAB,B6   GT_IO
          3 000138  B2C7 000E                            LLH,R3   ITEM,AUTO
          3 00013A  3002                                 SOL,R3   2
          3 00013B  DB80 0000 0000  04                   LAB,B5   0
          3 00013E  5C01                                 LDV,R5   1
          3 00013F  0022                                 ACM      ;
          3 000140       4436 0099                                ALPHANUM(153,B6,R3,,4,FILL),;
          3 000142       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          3 000144  5301 0023                            CBNE     s:5544,PREL

      309     5536    6              THEN DO;

      310     5537    6                      Y_CLTICM.T1.R1.TSTIND = ITEM;

   5537   3 000146  E2C7 000E                            LLH,R6   ITEM,AUTO
          3 000148  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00014B  E7C6 0003                            STH,R6   3,B6
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:99   

      311     5538    6                      Y_TENTRY.CHN(ITEM) = CHAD;

   5538   3 00014D  A856                                 LDR,R2   R6
          3 00014E  2001                                 SOL,R2   1
          3 00014F  C847 000A                            LDR,R4   CHAD,AUTO
          3 000151  CF20 0000 0099  00                   STR,R4   Y_TENTRY,R2

      312     5539    6                      Y_TENTRY.TYP(ITEM) = Y_CLTICM.T1.TSTYPE;

   5539   3 000154  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000157  92C6 0008                            LLH,R1   8,B6
          3 000159  3E01                                 ADV,R3   1
          3 00015A  97B0 0000 009A  00                   STH,R1   Y_TENTRY+1,R3

      313     5540    6                      Y_TCOUNT = Y_TCOUNT + 1;

   5540   3 00015D  E280 0000 0098  00                   LLH,R6   Y_TCOUNT
          3 000160  6E01                                 ADV,R6   1
          3 000161  E780 0000 0098  00                   STH,R6   Y_TCOUNT

      314     5541    6                      RETURN;

   5541   3 000164  ECC7 000C                            LDB,B6   ITEM,AUTO
          3 000166  C3C6 0001                            LNJ,B4   1,B6

      315     5542    6                   END;
      316     5543
      317     5544    5           END;

   5544   3 000168  E2C7 000E                            LLH,R6   ITEM,AUTO
          3 00016A  6E01                                 ADV,R6   1
          3 00016B  E7C7 000E                            STH,R6   ITEM,AUTO
          3 00016D  E2C7 000E                            LLH,R6   ITEM,AUTO
          3 00016F  6D07                                 CMV,R6   7
          3 000170  03C5                                 BLE      s:5535,SPREL

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:100  
      318     5545
      319     5546    4      Y_FLAGS.NOATE = %G_ON#;

   5546   3 000171  8900 0000 0097  00                   LBT,'2000'X       Y_FLAGS
   5546   3 000174       2000

      320     5547    4      Y_CLTICM.T1.IFLAGS.DVBUSY = %G_ON#;

   5547   3 000175  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000178  8946 0008                            LBT,'0010'X       8,B6
          3 00017A       0010

      321     5548    4      ALTRETURN;

   5548   3 00017B  ECC7 000C                            LDB,B6   ITEM,AUTO
          3 00017D  B806                                 LDR,R3   ,B6
          3 00017E  C3B6                                 LNJ,B4   ,B6,R3

      322     5549
      323     5550    4   END Y$GETLIN;
      324     5551
      325     5552        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:101  
      326     5553        /*I*  NAME:        Y$ALLOC
      327     5554              PURPOSE:     Allocate channel or device to COLTS for testing
      328     5555              CALL:        CALL Y$ALLOC;
      329     5556                           Does not altreturn.
      330     5557              INTERFACE:   This routine calls the following:
      331     5558                            M$GCHAN
      332     5559              DATA:        Uses data in ICM buffer (pointer ICM$).
      333     5560              DESCRIPTION: This routine obtains a channel or device for
      334     5561                           testing.
      335     5562        */
      336     5563        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:102  
      337     5564    3   Y$ALLOC: PROC;

   5564   3 00017F  EFC7 000C            Y$ALLOC         STB,B6   ITEM,AUTO

      338     5565
      339     5566    4      IF Y_CLTICM.T1.TSTYPE = 12

   5566   3 000181  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000184  E2C5 0008                            LLH,R6   8,B5
          3 000186  6D0C                                 CMV,R6   12
          3 000187  0981 0007                            BNE      s:5570,PREL

      340     5567    4      THEN
      341     5568    4         GET_CHAN.V.FLAGS.CONTROLLER = '1'B;

   5568   3 000189  8900 0000 0085  00                   LBT,'4000'X       GET_CHAN+9
   5568   3 00018C       4000
          3 00018D  0F81 0005                            B        s:5572,PREL

      342     5569    4      ELSE
      343     5570    4         GET_CHAN.V.FLAGS.CONTROLLER = '0'B;

   5570   3 00018F  8800 0000 0085  00                   LBF,'4000'X       GET_CHAN+9
   5570   3 000192       4000

      344     5571
      345     5572    4      GET_CHAN.V.CHANNEL = Y_CLTICM.T1.R1.CHAN;

   5572   3 000193  E845 0005                            LDR,R6   5,B5
          3 000195  EF00 0000 0082  00                   STR,R6   GET_CHAN+6

      346     5573
      347     5574    4      CALL M$GCHAN (GET_CHAN)

   5574   3 000198  BB80 0000 007C  00                   LAB,B3   GET_CHAN
          3 00019B  B870 0993                            LDR,R3   2451,IMO
          3 00019D  0001                                 MCL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:103  
          3 00019E       0003                            DC       s:5576,PREL
          3 00019F  0F81 0007                            B        s:5579,PREL

      348     5575    5      WHENALTRETURN DO;

      349     5576    5              Y_CLTICM.T1.IFLAGS.DVBUSY = %G_ON#;

   5576   3 0001A1  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0001A4  8946 0008                            LBT,'0010'X       8,B6
          3 0001A6       0010

      350     5577    5           END;

      351     5578
      352     5579    4      RETURN;

   5579   3 0001A7  ECC7 000C                            LDB,B6   ITEM,AUTO
          3 0001A9  C3C6 0001                            LNJ,B4   1,B6

      353     5580
      354     5581    4   END Y$ALLOC;
      355     5582
      356     5583    3   END START_TEST;
      357     5584
      358     5585        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:104  
      359     5586        /*I*  NAME:        EXECUTE_TEST
      360     5587              PURPOSE:     Execute test I/O per ICM
      361     5588              CALL:        CALL EXECUTE_TEST;
      362     5589                           Does not altreturn.
      363     5590              INTERFACE:   This routine calls the following:
      364     5591                            Y$RCCP
      365     5592                            Y$XCCP
      366     5593                            Y$IOSTR
      367     5594                            Y$XDATA
      368     5595                            Y$SWRDS
      369     5596                            Y$BMWUP
      370     5597                            Y$XEDAT
      371     5598                            Y$PRCCP
      372     5599                            Y$PXCCP
      373     5600              DATA:        Uses data in ICM buffer (pointer ICM$).
      374     5601              DESCRIPTION: Interprets ICM function code and calls
      375     5602                           corresponding routine to execute appropriate
      376     5603                           test I/O.
      377     5604        */
      378     5605        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:105  
      379     5606    2   EXECUTE_TEST: PROC;

   5606   3 0001AB  EFC7 0008            EXECUTE_TEST    STB,B6   CHAD+1,AUTO

      380     5607
      381     5608    4      DO CASE (Y_CLTICM.T1.EXTCFG);

   5608   3 0001AD  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0001B0  B845 0007                            LDR,R3   7,B5
          3 0001B2  3D0D                                 CMV,R3   13
          3 0001B3  0281 0041                            BGE      s:5637,PREL
          3 0001B5  A830 0000 01BB  03                   LDR,R2   s:5608+14,R3
          3 0001B8  83A0 0000 01C8  03                   JMP      s:5610,R2
          3 0001BB       002D                            DC       s:5637,PREL
          3 0001BC       0000                            DC       s:5610,PREL
          3 0001BD       0005                            DC       s:5613,PREL
          3 0001BE       000A                            DC       s:5616,PREL
          3 0001BF       000F                            DC       s:5619,PREL
          3 0001C0       0014                            DC       s:5622,PREL
          3 0001C1       002D                            DC       s:5637,PREL
          3 0001C2       002D                            DC       s:5637,PREL
          3 0001C3       0019                            DC       s:5625,PREL
          3 0001C4       001E                            DC       s:5628,PREL
          3 0001C5       002D                            DC       s:5637,PREL
          3 0001C6       0023                            DC       s:5631,PREL
          3 0001C7       0028                            DC       s:5634,PREL

      382     5609    4         CASE (%Y#RCCP);

      383     5610    4            CALL Y$RCCP;

   5610   3 0001C8  E3C0 003A                            LNJ,B6   s:0,PREL
          3 0001CA       0001                            DC       s:5610+3,PREL
          3 0001CB  0F81 0033                            B        s:5640,PREL

      384     5611
      385     5612    4         CASE (%Y#XCCP);
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:106  

      386     5613    4            CALL Y$XCCP;

   5613   3 0001CD  E3C0 009B                            LNJ,B6   s:0,PREL
          3 0001CF       0001                            DC       s:5613+3,PREL
          3 0001D0  0F81 002E                            B        s:5640,PREL

      387     5614
      388     5615    4         CASE (%Y#IOSTR);

      389     5616    4            CALL Y$IOSTR;

   5616   3 0001D2  E3C0 00FC                            LNJ,B6   s:0,PREL
          3 0001D4       0001                            DC       s:5616+3,PREL
          3 0001D5  0F81 0029                            B        s:5640,PREL

      390     5617
      391     5618    4         CASE (%Y#XDATA);

      392     5619    4            CALL Y$XDATA;

   5619   3 0001D7  E3C0 0237                            LNJ,B6   s:0,PREL
          3 0001D9       0001                            DC       s:5619+3,PREL
          3 0001DA  0F81 0024                            B        s:5640,PREL

      393     5620
      394     5621    4         CASE (%Y#SWRDS);

      395     5622    4            CALL Y$SWRDS;

   5622   3 0001DC  E3C0 0257                            LNJ,B6   s:0,PREL
          3 0001DE       0001                            DC       s:5622+3,PREL
          3 0001DF  0F81 001F                            B        s:5640,PREL

      396     5623
      397     5624    4         CASE (%Y#BMWUP);

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:107  
      398     5625    4            CALL Y$BMWUP;

   5625   3 0001E1  E3C0 02D4                            LNJ,B6   s:0,PREL
          3 0001E3       0001                            DC       s:5625+3,PREL
          3 0001E4  0F81 001A                            B        s:5640,PREL

      399     5626
      400     5627    4         CASE (%Y#XEDAT);

      401     5628    4            CALL Y$XEDAT;

   5628   3 0001E6  E3C0 02EE                            LNJ,B6   s:0,PREL
          3 0001E8       0001                            DC       s:5628+3,PREL
          3 0001E9  0F81 0015                            B        s:5640,PREL

      402     5629
      403     5630    4         CASE (%Y#PRCCP);

      404     5631    4            CALL Y$PRCCP;

   5631   3 0001EB  E3C0 0304                            LNJ,B6   s:0,PREL
          3 0001ED       0001                            DC       s:5631+3,PREL
          3 0001EE  0F81 0010                            B        s:5640,PREL

      405     5632
      406     5633    4         CASE (%Y#PXCCP);

      407     5634    4            CALL Y$PXCCP;

   5634   3 0001F0  E3C0 031B                            LNJ,B6   s:0,PREL
          3 0001F2       0001                            DC       s:5634+3,PREL
          3 0001F3  0F81 000B                            B        s:5640,PREL

      408     5635
      409     5636    4         CASE (ELSE);

      410     5637    4            Y_CLTICM.T1.IFLAGS.BADCOM = %G_ON#;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:108  

   5637   3 0001F5  8945 0008                            LBT,'0040'X       8,B5
   5637   3 0001F7       0040

      411     5638    4            Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;

   5638   3 0001F8  6C22                                 LDV,R6   34
          3 0001F9  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0001FC  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 0001FE       00FF

      412     5639    4      END;

      413     5640    3      RETURN;

   5640   3 0001FF  ECC7 0008                            LDB,B6   CHAD+1,AUTO
          3 000201  C3C6 0001                            LNJ,B4   1,B6

      414     5641
      415     5642        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:109  
      416     5643        /*I*  NAME:        Y$RCCP
      417     5644              PURPOSE:     Implement receive channel control program (CCP)
      418     5645              CALL:        CALL Y$RCCP;
      419     5646                           Does not altreturn.
      420     5647              INTERFACE:   This routine calls the following:
      421     5648                            Y$WRBLK
      422     5649                            Y$WRLCT
      423     5650              DATA:        Uses data in ICM buffer (pointer ICM$).
      424     5651              DESCRIPTION: This routine moves the data for the receive
      425     5652                           channel control program from the ICM to the
      426     5653                           MLCP RAM.  It then stores the pointer to the
      427     5654                           CCP into LCT bytes 6 and 7 in the RAM.
      428     5655        */
      429     5656        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:110  
      430     5657    3   Y$RCCP: PROC;

   5657   3 000203  EFC7 000A            Y$RCCP          STB,B6   CHAD,AUTO

      431     5658
      432     5659    4      DCL RAMAD UBIN WORD;
      433     5660    4      DCL CH UBIN(10) ALIGNED;
      434     5661
      435     5662    4      RAMAD = %Y#RCVRAM + Y_CLTICM.T2.TEXT(9);

   5662   3 000205  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000208  E845 000C                            LDR,R6   12,B5
          3 00020A  EA70 0CD4                            ADD,R6   3284,IMO
          3 00020C  EF47 000C                            STR,R6   RAMAD,AUTO

      436     5663
      437     5664    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (GOOF);

   5664   3 00020E  CBC7 000C                            LAB,B4   RAMAD,AUTO
          3 000210  CFC7 0014                            STB,B4   CHN_C+1,AUTO
          3 000212  BBC7 000D                            LAB,B3   CH,AUTO
          3 000214  BFC7 0012                            STB,B3   CON+1,AUTO
          3 000216  E3C0 0311                            LNJ,B6   s:0,PREL
          3 000218       000B                            DC       s:5671,PREL

      438     5665
      439     5666    4      CALL Y$WRLCT ALTRET (GOOF);

   5666   3 000219  E3C0 000D                            LNJ,B6   s:0,PREL
          3 00021B       0008                            DC       s:5671,PREL

      440     5667
      441     5668    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5668   3 00021C  6C21                                 LDV,R6   33
          3 00021D  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000220  EAC6 0004                            SRM,R6,'00FF'X    4,B6
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:111  
          3 000222       00FF

      442     5669
      443     5670    4   GOOF:
      444     5671    4      RETURN;

   5671   3 000223  ECC7 000A            GOOF            LDB,B6   CHAD,AUTO
          3 000225  C3C6 0001                            LNJ,B4   1,B6

      445     5672
      446     5673        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:112  
      447     5674        /*I*  NAME:        Y$WRLCT
      448     5675              PURPOSE:     Set pointer to receive CCP
      449     5676              CALL:        CALL Y$WRLCT ALTRET;
      450     5677                           Altreturns if an I/O error occurs.
      451     5678              INTERFACE:   This routine calls the following:
      452     5679                            Y$DOIO
      453     5680              DATA:        Sets up the GT_IO FPT.
      454     5681              DESCRIPTION: Stores the pointer to the receive CCP in
      455     5682                           LCT6 and LCT7 in the MLCP RAM.
      456     5683        */
      457     5684        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:113  
      458     5685    4   Y$WRLCT: PROC ALTRET;

   5685   3 000227  EFC7 000E            Y$WRLCT         STB,B6   ITEM,AUTO

      459     5686
      460     5687    5      DCL 1 CONX ALIGNED,
      461     5688    5            2 L UBIN BYTE UNAL,
      462     5689    5            2 R UBIN BYTE UNAL;
      463     5690    5      DCL CONW REDEF CONX UBIN WORD;
      464     5691    5      DCL FC UBIN(6) ALIGNED;
      465     5692
      466     5693    5      FC = %GH#IO_OTPLCTBYT;

   5693   3 000229  E870 2C00                            LDR,R6   11264,IMO
          3 00022B  EF47 0011                            STR,R6   FC,AUTO

      467     5694
      468     5695    5      CONW = %Y#RCVRAM;

   5695   3 00022D  D870 0CD4                            LDR,R5   3284,IMO
          3 00022F  DF47 0010                            STR,R5   CONX,AUTO

      469     5696    5      CONX.R = 6;

   5696   3 000231  4C06                                 LDV,R4   6
          3 000232  CAC7 0010                            SRM,R4,'00FF'X    CONX,AUTO
          3 000234       00FF

      470     5697
      471     5698    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);

   5698   3 000235  DBC7 0010                            LAB,B5   CONX,AUTO
          3 000237  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 000239  CBC7 0011                            LAB,B4   FC,AUTO
          3 00023B  CFC7 002C                            STB,B4   @CH+2,AUTO
          3 00023D  BBC7 000D                            LAB,B3   CH,AUTO
          3 00023F  BFC7 002A                            STB,B3   @BOFS+2,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:114  
          3 000241  E3C0 0446                            LNJ,B6   s:0,PREL
          3 000243       0022                            DC       s:5709,PREL

      472     5699
      473     5700    5      CONW = %Y#RCVRAM;

   5700   3 000244  E870 0CD4                            LDR,R6   3284,IMO
          3 000246  EF47 0010                            STR,R6   CONX,AUTO

      474     5701    5      CONX.L = CONX.R;

   5701   3 000248  D847 0010                            LDR,R5   CONX,AUTO
          3 00024A  D570 00FF                            AND,R5   255,IMO
          3 00024C  D7C7 0010                            STH,R5   CONX,AUTO

      475     5702    5      CONX.R = 7;

   5702   3 00024E  4C07                                 LDV,R4   7
          3 00024F  CAC7 0010                            SRM,R4,'00FF'X    CONX,AUTO
          3 000251       00FF

      476     5703
      477     5704    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);

   5704   3 000252  EBC7 0010                            LAB,B6   CONX,AUTO
          3 000254  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 000256  DBC7 0011                            LAB,B5   FC,AUTO
          3 000258  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 00025A  CBC7 000D                            LAB,B4   CH,AUTO
          3 00025C  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 00025E  E3C0 0429                            LNJ,B6   s:0,PREL
          3 000260       0005                            DC       s:5709,PREL

      478     5705
      479     5706    5      RETURN;

   5706   3 000261  ECC7 000E                            LDB,B6   ITEM,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:115  
          3 000263  C3C6 0001                            LNJ,B4   1,B6

      480     5707
      481     5708    5   ERRIO:
      482     5709    5      ALTRETURN;

   5709   3 000265  ECC7 000E            ERRIO           LDB,B6   ITEM,AUTO
          3 000267  B806                                 LDR,R3   ,B6
          3 000268  C3B6                                 LNJ,B4   ,B6,R3

      483     5710
      484     5711    5   END Y$WRLCT;
      485     5712
      486     5713    4   END Y$RCCP;
      487     5714
      488     5715        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:116  
      489     5716        /*I*  NAME:        Y$XCCP
      490     5717              PURPOSE:     Implement transmit channel control program
      491     5718              CALL:        CALL Y$XCCP;
      492     5719                           Does not altreturn.
      493     5720              INTERFACE:   This routine calls the following:
      494     5721                            Y$WRBLK
      495     5722                            Y$WXLCT
      496     5723              DATA:        Uses data in ICM buffer (pointer ICM$).
      497     5724              DESCRIPTION: This routine moves the data for the transmit
      498     5725                           CCP from the ICM to the MLCP RAM.  It then
      499     5726                           stores the pointer to the CCP into LCT bytes
      500     5727                           38 and 39 in the RAM.
      501     5728        */
      502     5729        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:117  
      503     5730    3   Y$XCCP: PROC;

   5730   3 000269  EFC7 000C            Y$XCCP          STB,B6   RAMAD,AUTO

      504     5731
      505     5732    4      DCL RAMAD UBIN WORD;
      506     5733    4      DCL CH UBIN(10) ALIGNED;
      507     5734
      508     5735    4      RAMAD = %Y#XMTRAM + Y_CLTICM.T2.TEXT(9);

   5735   3 00026B  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 00026E  E845 000C                            LDR,R6   12,B5
          3 000270  EA70 0D6A                            ADD,R6   3434,IMO
          3 000272  EF47 000E                            STR,R6   RAMAD,AUTO

      509     5736
      510     5737    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (GOOF);

   5737   3 000274  CBC7 000E                            LAB,B4   RAMAD,AUTO
          3 000276  CFC7 0014                            STB,B4   CHN_C+1,AUTO
          3 000278  BBC7 000F                            LAB,B3   CH,AUTO
          3 00027A  BFC7 0012                            STB,B3   CON+1,AUTO
          3 00027C  E3C0 02AB                            LNJ,B6   s:0,PREL
          3 00027E       000B                            DC       s:5744,PREL

      511     5738
      512     5739    4      CALL Y$WXLCT ALTRET (GOOF);

   5739   3 00027F  E3C0 000D                            LNJ,B6   s:0,PREL
          3 000281       0008                            DC       s:5744,PREL

      513     5740
      514     5741    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5741   3 000282  6C21                                 LDV,R6   33
          3 000283  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000286  EAC6 0004                            SRM,R6,'00FF'X    4,B6
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:118  
          3 000288       00FF

      515     5742
      516     5743    4   GOOF:
      517     5744    4      RETURN;

   5744   3 000289  ECC7 000C            GOOF            LDB,B6   RAMAD,AUTO
          3 00028B  C3C6 0001                            LNJ,B4   1,B6

      518     5745
      519     5746        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:119  
      520     5747        /*I*  NAME:        Y$WXLCT
      521     5748              PURPOSE:     Set pointer to transmit CCP
      522     5749              CALL:        CALL Y$WXLCT ALTRET;
      523     5750                           Altreturns if an I/O error occurs.
      524     5751              INTERFACE:   This routine calls the following:
      525     5752                            Y$DOIO
      526     5753              DATA:        Sets up the GT_IO FPT.
      527     5754              DESCRIPTION: Stores the pointer to the transmit CCP
      528     5755                           in LCT38 and LCT39 in the MLCP RAM.
      529     5756        */
      530     5757        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:120  
      531     5758    4   Y$WXLCT: PROC ALTRET;

   5758   3 00028D  EFC7 0010            Y$WXLCT         STB,B6   CONX,AUTO

      532     5759
      533     5760    5      DCL 1 CONX ALIGNED,
      534     5761    5            2 L UBIN BYTE UNAL,
      535     5762    5            2 R UBIN BYTE UNAL;
      536     5763    5      DCL CONW REDEF CONX UBIN WORD;
      537     5764    5      DCL FC UBIN(6) ALIGNED;
      538     5765
      539     5766    5      FC = %GH#IO_OTPLCTBYT;

   5766   3 00028F  E870 2C00                            LDR,R6   11264,IMO
          3 000291  EF47 0013                            STR,R6   FC,AUTO

      540     5767
      541     5768    5      CONW = %Y#XMTRAM;

   5768   3 000293  D870 0D6A                            LDR,R5   3434,IMO
          3 000295  DF47 0012                            STR,R5   CONX,AUTO

      542     5769    5      CONX.R = 38;

   5769   3 000297  4C26                                 LDV,R4   38
          3 000298  CAC7 0012                            SRM,R4,'00FF'X    CONX,AUTO
          3 00029A       00FF

      543     5770
      544     5771    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);

   5771   3 00029B  DBC7 0012                            LAB,B5   CONX,AUTO
          3 00029D  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 00029F  CBC7 0013                            LAB,B4   FC,AUTO
          3 0002A1  CFC7 002C                            STB,B4   @CH+2,AUTO
          3 0002A3  BBC7 000F                            LAB,B3   CH,AUTO
          3 0002A5  BFC7 002A                            STB,B3   @BOFS+2,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:121  
          3 0002A7  E3C0 03E0                            LNJ,B6   s:0,PREL
          3 0002A9       0022                            DC       s:5782,PREL

      545     5772
      546     5773    5      CONW = %Y#XMTRAM;

   5773   3 0002AA  E870 0D6A                            LDR,R6   3434,IMO
          3 0002AC  EF47 0012                            STR,R6   CONX,AUTO

      547     5774    5      CONX.L = CONX.R;

   5774   3 0002AE  D847 0012                            LDR,R5   CONX,AUTO
          3 0002B0  D570 00FF                            AND,R5   255,IMO
          3 0002B2  D7C7 0012                            STH,R5   CONX,AUTO

      548     5775    5      CONX.R = 39;

   5775   3 0002B4  4C27                                 LDV,R4   39
          3 0002B5  CAC7 0012                            SRM,R4,'00FF'X    CONX,AUTO
          3 0002B7       00FF

      549     5776
      550     5777    5      CALL Y$DOIO (CH, FC, CONW) ALTRET (ERRIO);

   5777   3 0002B8  EBC7 0012                            LAB,B6   CONX,AUTO
          3 0002BA  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 0002BC  DBC7 0013                            LAB,B5   FC,AUTO
          3 0002BE  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 0002C0  CBC7 000F                            LAB,B4   CH,AUTO
          3 0002C2  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0002C4  E3C0 03C3                            LNJ,B6   s:0,PREL
          3 0002C6       0005                            DC       s:5782,PREL

      551     5778
      552     5779    5      RETURN;

   5779   3 0002C7  ECC7 0010                            LDB,B6   CONX,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:122  
          3 0002C9  C3C6 0001                            LNJ,B4   1,B6

      553     5780
      554     5781    5   ERRIO:
      555     5782    5      ALTRETURN;

   5782   3 0002CB  ECC7 0010            ERRIO           LDB,B6   CONX,AUTO
          3 0002CD  B806                                 LDR,R3   ,B6
          3 0002CE  C3B6                                 LNJ,B4   ,B6,R3

      556     5783
      557     5784    5   END Y$WXLCT;
      558     5785
      559     5786    4   END Y$XCCP;
      560     5787
      561     5788        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:123  
      562     5789        /*I*  NAME:        Y$IOSTR
      563     5790              PURPOSE:     Execute a string of I/O commands
      564     5791              CALL:        CALL Y$IOSTR;
      565     5792                           Does not altreturn.
      566     5793              INTERFACE:   This routine calls the following:
      567     5794                            Y$XECIO
      568     5795                            M$WAIT
      569     5796                            Y$STATUS
      570     5797                            Y$CKSTAT
      571     5798              DATA:        Uses data in ICM buffer (pointer ICM$).
      572     5799              DESCRIPTION: Sequentially executes a string of I/O
      573     5800                           instructions which it obtains from the
      574     5801                           ICM.
      575     5802        */
      576     5803        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:124  
      577     5804    3   Y$IOSTR: PROC;

   5804   3 0002CF  EFC7 000A            Y$IOSTR         STB,B6   CHAD,AUTO

      578     5805
      579     5806    4      DCL COUNT UBIN WORD;
      580     5807    4      DCL INX UBIN WORD;
      581     5808    4      DCL NUMIO UBIN WORD;
      582     5809    4      DCL STAT BIT(16) ALIGNED;
      583     5810    4      DCL XCHAN UBIN(10) ALIGNED;
      584     5811    4      DCL RCHAN UBIN(10) ALIGNED;
      585     5812
      586     5813    4      Y_FLAGS.XCH = %G_OFF#;

   5813   3 0002D1  8800 0000 0097  00                   LBF,'0800'X       Y_FLAGS
   5813   3 0002D4       0800

      587     5814    4      Y_FLAGS.RCH = %G_OFF#;

   5814   3 0002D5  8800 0000 0097  00                   LBF,'1000'X       Y_FLAGS
   5814   3 0002D8       1000

      588     5815    4      XCHAN = 0;

   5815   3 0002D9  8747 0010                            CL       XCHAN,AUTO

      589     5816    4      RCHAN = 0;

   5816   3 0002DB  8747 0011                            CL       RCHAN,AUTO

      590     5817    4      INX = %GT_STRDATOFS#;

   5817   3 0002DD  6C0B                                 LDV,R6   11
          3 0002DE  EF47 000D                            STR,R6   INX,AUTO

      591     5818    4      NUMIO = Y_CLTICM.T1.TSTDAT(3);

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:125  
   5818   3 0002E0  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0002E3  D845 000B                            LDR,R5   11,B5
          3 0002E5  D570 00FF                            AND,R5   255,IMO
          3 0002E7  DF47 000E                            STR,R5   NUMIO,AUTO

      592     5819    4      CALL Y$XECIO ALTRET (PLOP);

   5819   3 0002E9  E3C0 005E                            LNJ,B6   s:0,PREL
          3 0002EB       0059                            DC       s:5847,PREL

      593     5820
      594     5821    4      IF Y_FLAGS.CKRDY

   5821   3 0002EC  8280 0000 0097  00                   LB,'4000'X        Y_FLAGS
   5821   3 0002EF       4000
          3 0002F0  0581 004C                            BBF      s:5844,PREL

      595     5822    4      THEN
      596     5823    5           DO;

      597     5824    5              Y_FLAGS.CKRDY = %G_OFF#;

   5824   3 0002F2  8800 0000 0097  00                   LBF,'4000'X       Y_FLAGS
   5824   3 0002F5       4000

      598     5825    5              CALL M$WAIT (WAIT_IO);

   5825   3 0002F6  BB80 0000 0062  00                   LAB,B3   WAIT_IO
          3 0002F9  B870 0CC5                            LDR,R3   3269,IMO
          3 0002FB  0001                                 MCL
          3 0002FC       0000                            DC       s:5825+6,PREL

      599     5826
      600     5827    5              IF Y_FLAGS.XCH

   5827   3 0002FD  8280 0000 0097  00                   LB,'0800'X        Y_FLAGS
   5827   3 000300       0800
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:126  
          3 000301  0581 001B                            BBF      s:5835,PREL

      601     5828    5              THEN
      602     5829    6                   DO;

      603     5830    6                      Y_FLAGS.XCH = %G_OFF#;

   5830   3 000303  8800 0000 0097  00                   LBF,'0800'X       Y_FLAGS
   5830   3 000306       0800

      604     5831    6                      CALL Y$STATUS (XCHAN, STAT) ALTRET (PLOP);

   5831   3 000307  EBC7 000F                            LAB,B6   STAT,AUTO
          3 000309  EFC7 0024                            STB,B6   @CH+2,AUTO
          3 00030B  DBC7 0010                            LAB,B5   XCHAN,AUTO
          3 00030D  DFC7 0022                            STB,B5   BSIZ+1,AUTO
          3 00030F  E3C0 02C1                            LNJ,B6   s:0,PREL
          3 000311       0033                            DC       s:5847,PREL

      605     5832    6                      CALL Y$CKSTAT (XCHAN, STAT) ALTRET (PLOP);

   5832   3 000312  EBC7 000F                            LAB,B6   STAT,AUTO
          3 000314  EFC7 001C                            STB,B6   @CH+2,AUTO
          3 000316  DBC7 0010                            LAB,B5   XCHAN,AUTO
          3 000318  DFC7 001A                            STB,B5   CHN_F+2,AUTO
          3 00031A  E3C0 02FA                            LNJ,B6   s:0,PREL
          3 00031C       0028                            DC       s:5847,PREL

      606     5833    6                   END;

      607     5834
      608     5835    5              IF Y_FLAGS.RCH

   5835   3 00031D  8280 0000 0097  00                   LB,'1000'X        Y_FLAGS
   5835   3 000320       1000
          3 000321  0581 001B                            BBF      s:5844,PREL

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:127  
      609     5836    5              THEN
      610     5837    6                   DO;

      611     5838    6                      Y_FLAGS.RCH = %G_OFF#;

   5838   3 000323  8800 0000 0097  00                   LBF,'1000'X       Y_FLAGS
   5838   3 000326       1000

      612     5839    6                      CALL Y$STATUS (RCHAN, STAT) ALTRET (PLOP);

   5839   3 000327  EBC7 000F                            LAB,B6   STAT,AUTO
          3 000329  EFC7 0024                            STB,B6   @CH+2,AUTO
          3 00032B  DBC7 0011                            LAB,B5   RCHAN,AUTO
          3 00032D  DFC7 0022                            STB,B5   BSIZ+1,AUTO
          3 00032F  E3C0 02A1                            LNJ,B6   s:0,PREL
          3 000331       0013                            DC       s:5847,PREL

      613     5840    6                      CALL Y$CKSTAT (RCHAN, STAT) ALTRET (PLOP);

   5840   3 000332  EBC7 000F                            LAB,B6   STAT,AUTO
          3 000334  EFC7 001C                            STB,B6   @CH+2,AUTO
          3 000336  DBC7 0011                            LAB,B5   RCHAN,AUTO
          3 000338  DFC7 001A                            STB,B5   CHN_F+2,AUTO
          3 00033A  E3C0 02DA                            LNJ,B6   s:0,PREL
          3 00033C       0008                            DC       s:5847,PREL

      614     5841    6                   END;

      615     5842    5           END;

      616     5843
      617     5844    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5844   3 00033D  6C21                                 LDV,R6   33
          3 00033E  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000341  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000343       00FF
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:128  

      618     5845
      619     5846    4   PLOP:
      620     5847    4      RETURN;

   5847   3 000344  ECC7 000A            PLOP            LDB,B6   CHAD,AUTO
          3 000346  C3C6 0001                            LNJ,B4   1,B6

      621     5848
      622     5849        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:129  
      623     5850        /*I*  NAME:        Y$XECIO
      624     5851              PURPOSE:     Execute I/O
      625     5852              CALL:        CALL Y$XECIO ALTRET;
      626     5853                           Altreturns if an I/O error occurs.
      627     5854              INTERFACE:   This routine calls the following:
      628     5855                            Y$XIOLD
      629     5856                            Y$DOIO
      630     5857              DATA:        Uses data in ICM buffer (pointer ICM$).
      631     5858              DESCRIPTION: Obtains each I/O command in turn from ICM
      632     5859                           data, determines type of I/O required, and
      633     5860                           then executes that I/O command.
      634     5861        */
      635     5862        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:130  
      636     5863    4   Y$XECIO: PROC ALTRET;

   5863   3 000348  EFC7 0012            Y$XECIO         STB,B6   CONX,AUTO

      637     5864
      638     5865    5      DCL ITEM UBIN WORD;
      639     5866    5      DCL CHCON UBIN WORD;
      640     5867    5      DCL 1 CHN ALIGNED,
      641     5868    5            2 CH UBIN(10) UNAL,
      642     5869    5            2 C REDEF CH,
      643     5870    5              3 * UBIN(9) UNAL,
      644     5871    5              3 X BIT(1) UNAL,
      645     5872    5            2 F UBIN(6) UNAL;
      646     5873    5      DCL CHN_CH UBIN(10) ALIGNED;
      647     5874    5      DCL CHN_F UBIN(6) ALIGNED;
      648     5875
      649     5876    6      DO ITEM = 0 TO 2*(NUMIO - 1) BY 2;

   5876   3 00034A  8747 0014                            CL       ITEM,AUTO
          3 00034C  0F81 0065                            B        s:5906+5,PREL

      650     5877
      651     5878    6         CHCON = Y_CLTICM.T2.TEXT(INX + ITEM);

   5878   3 00034E  E847 000D                            LDR,R6   INX,AUTO
          3 000350  EA47 0014                            ADD,R6   ITEM,AUTO
          3 000352  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000355  B856                                 LDR,R3   R6
          3 000356  3E03                                 ADV,R3   3
          3 000357  E836                                 LDR,R6   ,B6,R3
          3 000358  EF47 0015                            STR,R6   CHCON,AUTO

      652     5879    6         CHN = Y_CLTICM.T2.ICMTXT(INX + ITEM + 1);

   5879   3 00035A  D847 000D                            LDR,R5   INX,AUTO
          3 00035C  DA47 0014                            ADD,R5   ITEM,AUTO
          3 00035E  B855                                 LDR,R3   R5
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:131  
          3 00035F  3E04                                 ADV,R3   4
          3 000360  D836                                 LDR,R5   ,B6,R3
          3 000361  DF47 0016                            STR,R5   CHN,AUTO

      653     5880    6         CHN_CH = CHN.CH;

   5880   3 000363  C847 0016                            LDR,R4   CHN,AUTO
          3 000365  4046                                 SOR,R4   6
          3 000366  4006                                 SOL,R4   6
          3 000367  CF47 0017                            STR,R4   CHN_CH,AUTO

      654     5881    6         CHN_F = CHN.F;

   5881   3 000369  C847 0016                            LDR,R4   CHN,AUTO
          3 00036B  C570 003F                            AND,R4   63,IMO
          3 00036D  400A                                 SOL,R4   10
          3 00036E  CF47 0018                            STR,R4   CHN_F,AUTO

      655     5882
      656     5883    6         IF CHN.F = %GH#IO_IOLD

   5883   3 000370  C847 0016                            LDR,R4   CHN,AUTO
          3 000372  C570 003F                            AND,R4   63,IMO
          3 000374  4D09                                 CMV,R4   9
          3 000375  0981 0006                            BNE      s:5888,PREL

      657     5884    6         THEN
      658     5885    6            CALL Y$XIOLD ALTRET (GOOP);

   5885   3 000377  E3C0 0057                            LNJ,B6   s:0,PREL
          3 000379       0052                            DC       s:5915,PREL
          3 00037A  0F81 0032                            B        s:5906,PREL

      659     5886    6         ELSE
      660     5887    7              DO;

      661     5888    7                 CALL Y$DOIO (CHN_CH, CHN_F, CHCON) ALTRET (GOOP);
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:132  

   5888   3 00037C  DBC7 0015                            LAB,B5   CHCON,AUTO
          3 00037E  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 000380  CBC7 0018                            LAB,B4   CHN_F,AUTO
          3 000382  CFC7 002C                            STB,B4   @CH+2,AUTO
          3 000384  BBC7 0017                            LAB,B3   CHN_CH,AUTO
          3 000386  BFC7 002A                            STB,B3   @BOFS+2,AUTO
          3 000388  E3C0 02FF                            LNJ,B6   s:0,PREL
          3 00038A       0041                            DC       s:5915,PREL

      662     5889
      663     5890    7                 IF CHN.F = %GH#IO_INPNXTCCBSTT

   5890   3 00038B  E847 0016                            LDR,R6   CHN,AUTO
          3 00038D  E570 003F                            AND,R6   63,IMO
          3 00038F  6D1A                                 CMV,R6   26
          3 000390  0981 001C                            BNE      s:5906,PREL

      664     5891    7                 THEN
      665     5892    7                    IF CHN.C.X

   5892   3 000392  82C7 0016                            LB,'0040'X        CHN,AUTO
   5892   3 000394       0040
          3 000395  0581 000D                            BBF      s:5900,PREL

      666     5893    7                    THEN
      667     5894    8                         DO;

      668     5895    8                            Y_FLAGS.XCH = %G_ON#;

   5895   3 000397  8900 0000 0097  00                   LBT,'0800'X       Y_FLAGS
   5895   3 00039A       0800

      669     5896    8                            XCHAN = CHN_CH;

   5896   3 00039B  D847 0017                            LDR,R5   CHN_CH,AUTO
          3 00039D  5046                                 SOR,R5   6
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:133  
          3 00039E  5006                                 SOL,R5   6
          3 00039F  DF47 0010                            STR,R5   XCHAN,AUTO

      670     5897    8                         END;

   5897   3 0003A1  0F81 000B                            B        s:5906,PREL

      671     5898    7                    ELSE
      672     5899    8                         DO;

      673     5900    8                            Y_FLAGS.RCH = %G_ON#;

   5900   3 0003A3  8900 0000 0097  00                   LBT,'1000'X       Y_FLAGS
   5900   3 0003A6       1000

      674     5901    8                            RCHAN = CHN_CH;

   5901   3 0003A7  D847 0017                            LDR,R5   CHN_CH,AUTO
          3 0003A9  5046                                 SOR,R5   6
          3 0003AA  5006                                 SOL,R5   6
          3 0003AB  DF47 0011                            STR,R5   RCHAN,AUTO

      675     5902    8                         END;

      676     5903
      677     5904    7              END;

      678     5905
      679     5906    6      END;

   5906   3 0003AD  E847 0014                            LDR,R6   ITEM,AUTO
          3 0003AF  6E02                                 ADV,R6   2
          3 0003B0  EF47 0014                            STR,R6   ITEM,AUTO
          3 0003B2  E847 000E                            LDR,R6   NUMIO,AUTO
          3 0003B4  6001                                 SOL,R6   1
          3 0003B5  6EFE                                 ADV,R6   -2
          3 0003B6  6801 0005                            BLZ,R6   s:5908,PREL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:134  
          3 0003B8  E947 0014                            CMR,R6   ITEM,AUTO
          3 0003BA  0281 FF93                            BGE      s:5878,PREL

      680     5907
      681     5908    5      IF CHN.F = %GH#IO_INPNXTCCBSTT

   5908   3 0003BC  D847 0016                            LDR,R5   CHN,AUTO
          3 0003BE  D570 003F                            AND,R5   63,IMO
          3 0003C0  5D1A                                 CMV,R5   26
          3 0003C1  0981 0005                            BNE      s:5912,PREL

      682     5909    5      THEN
      683     5910    5         Y_FLAGS.CKRDY = %G_ON#;

   5910   3 0003C3  8900 0000 0097  00                   LBT,'4000'X       Y_FLAGS
   5910   3 0003C6       4000

      684     5911
      685     5912    5      RETURN;

   5912   3 0003C7  ECC7 0012                            LDB,B6   CONX,AUTO
          3 0003C9  C3C6 0001                            LNJ,B4   1,B6

      686     5913
      687     5914    5   GOOP:
      688     5915    5      ALTRETURN;

   5915   3 0003CB  ECC7 0012            GOOP            LDB,B6   CONX,AUTO
          3 0003CD  B806                                 LDR,R3   ,B6
          3 0003CE  C3B6                                 LNJ,B4   ,B6,R3

      689     5916
      690     5917        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:135  
      691     5918        /*I*  NAME:        Y$XIOLD
      692     5919              PURPOSE:     Execute IOLD's in string I/O
      693     5920              CALL:        CALL Y$XIOLD ALTRET;
      694     5921                           Altreturns if I/O error occurs.
      695     5922              INTERFACE:   This routine calls the following:
      696     5923                            Y$IOLD
      697     5924              DATA:        Uses data in ICM buffer.
      698     5925              DESCRIPTION: Executes IOLD's when they occur in a string
      699     5926                           of I/O commands in the ICM test data.
      700     5927        */
      701     5928        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:136  
      702     5929    5   Y$XIOLD: PROC ALTRET;

   5929   3 0003CF  EFC7 001A            Y$XIOLD         STB,B6   CHN_F+2,AUTO

      703     5930
      704     5931    6      DCL DP$ PTR;
      705     5932    6      DCL BOFS UBIN WORD;
      706     5933
      707     5934    6      IF CHN.C.X AND (Y_DBUFSZ(Y_CLTICM.T1.R1.TSTIND) ~= 0)

   5934   3 0003D1  82C7 0016                            LB,'0040'X        CHN,AUTO
   5934   3 0003D3       0040
          3 0003D4  0581 0015                            BBF      s:5940,PREL
          3 0003D6  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0003D9  B2C5 0003                            LLH,R3   3,B5
          3 0003DB  E830 0000 00AC  00                   LDR,R6   Y_DBUFSZ,R3
          3 0003DE  6901 000B                            BEZ,R6   s:5940,PREL

      708     5935    7      THEN DO;

      709     5936    7              DP$ = ADDR(Y_DBUF(Y_CLTICM.T1.R1.TSTIND * 56));

   5936   3 0003E0  3F38                                 MLV,R3   56
          3 0003E1  CBB0 0000 00B4  00                   LAB,B4   Y_DBUF,R3
          3 0003E4  CFC7 001C                            STB,B4   DP$,AUTO

      710     5937    7              BOFS = 0;

   5937   3 0003E6  8747 001E                            CL       BOFS,AUTO

      711     5938    7           END;

   5938   3 0003E8  0F81 0009                            B        s:5944,PREL

      712     5939    7      ELSE DO;

      713     5940    7              DP$ = ICM$;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:137  

   5940   3 0003EA  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0003ED  DFC7 001C                            STB,B5   DP$,AUTO

      714     5941    7              BOFS = %GT_ICMDATOFF#;

   5941   3 0003EF  6C1C                                 LDV,R6   28
          3 0003F0  EF47 001E                            STR,R6   BOFS,AUTO

      715     5942    7           END;

      716     5943
      717     5944    6      CALL Y$IOLD (CHN_CH, DP$, BOFS, CHCON) WHENALTRETURN

   5944   3 0003F2  CBC7 0015                            LAB,B4   CHCON,AUTO
          3 0003F4  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0003F6  BBC7 001E                            LAB,B3   BOFS,AUTO
          3 0003F8  BFC7 0028                            STB,B3   @DP$+2,AUTO
          3 0003FA  ABC7 001C                            LAB,B2   DP$,AUTO
          3 0003FC  AFC7 0026                            STB,B2   @CH+2,AUTO
          3 0003FE  9BC7 0017                            LAB,B1   CHN_CH,AUTO
          3 000400  9FC7 0024                            STB,B1   @CH+2,AUTO
          3 000402  E3C0 0242                            LNJ,B6   s:0,PREL
          3 000404       0003                            DC       s:5946,PREL
          3 000405  0F81 0005                            B        s:5949,PREL

      718     5945    7           DO;

      719     5946    7              ALTRETURN;

   5946   3 000407  ECC7 001A                            LDB,B6   CHN_F+2,AUTO
          3 000409  B806                                 LDR,R3   ,B6
          3 00040A  C3B6                                 LNJ,B4   ,B6,R3

      720     5947    7           END;
      721     5948
      722     5949    6      RETURN;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:138  

   5949   3 00040B  ECC7 001A                            LDB,B6   CHN_F+2,AUTO
          3 00040D  C3C6 0001                            LNJ,B4   1,B6

      723     5950
      724     5951    6   END Y$XIOLD;
      725     5952
      726     5953    5   END Y$XECIO;
      727     5954
      728     5955    4   END Y$IOSTR;
      729     5956
      730     5957        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:139  
      731     5958        /*I*  NAME:        Y$XDATA
      732     5959              PURPOSE:     Save transmit data
      733     5960              CALL:        CALL Y$XDATA;
      734     5961                           Does not altreturn.
      735     5962              INTERFACE:   None.
      736     5963              DATA:        Uses data in ICM buffer (pointer ICM$).
      737     5964              DESCRIPTION: Moves transmit data from ICM buffer to
      738     5965                           temporary storage area.
      739     5966        */
      740     5967        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:140  
      741     5968    3   Y$XDATA: PROC;

   5968   3 00040F  EFC7 000A            Y$XDATA         STB,B6   CHAD,AUTO

      742     5969
      743     5970    4      DCL 1 Y_BUFTMP BASED ALIGNED,
      744     5971    4            2 BUFBYT (0:111) UBIN BYTE UNAL;
      745     5972
      746     5973    4      DCL BUF1$ PTR;
      747     5974
      748     5975    4      DCL BUF2$ PTR;
      749     5976
      750     5977    4      Y_DBUFSZ (Y_CLTICM.T1.R1.TSTIND) = 56;

   5977   3 000411  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 000414  B2C5 0003                            LLH,R3   3,B5
          3 000416  6C38                                 LDV,R6   56
          3 000417  EF30 0000 00AC  00                   STR,R6   Y_DBUFSZ,R3

      751     5978
      752     5979    4      BUF1$ = PINCRW (ICM$, %Y#ICMOFS);

   5979   3 00041A  CBC5 000E                            LAB,B4   14,B5
          3 00041C  CFC7 000C                            STB,B4   BUF1$,AUTO

      753     5980
      754     5981    4      BUF2$ = ADDR(Y_DBUF (Y_CLTICM.T1.R1.TSTIND * 56) );

   5981   3 00041E  3F38                                 MLV,R3   56
          3 00041F  BBB0 0000 00B4  00                   LAB,B3   Y_DBUF,R3
          3 000422  BFC7 000E                            STB,B3   BUF2$,AUTO

      755     5982
      756     5983    4      BUF2$ -> Y_BUFTMP = BUF1$ -> Y_BUFTMP;

   5983   3 000424  AB84                                 LAB,B2   ,B4
          3 000425  2C00                                 LDV,R2   0
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:141  
          3 000426  6C70                                 LDV,R6   112
          3 000427  3C00                                 LDV,R3   0
          3 000428  0008                                 MMM

      757     5984
      758     5985    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   5985   3 000429  6C21                                 LDV,R6   33
          3 00042A  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00042D  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 00042F       00FF

      759     5986
      760     5987    4      RETURN;

   5987   3 000430  ECC7 000A                            LDB,B6   CHAD,AUTO
          3 000432  C3C6 0001                            LNJ,B4   1,B6

      761     5988
      762     5989    4   END Y$XDATA;
      763     5990
      764     5991        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:142  
      765     5992        /*I*  NAME:        Y$SWRDS
      766     5993              PURPOSE:     Execute string of single-word reads
      767     5994              CALL:        CALL Y$SWRDS;
      768     5995                           Does not altreturn.
      769     5996              INTERFACE:   This routine calls the following:
      770     5997                            Y$IOREAD
      771     5998              DATA:        Uses data in ICM buffer (pointer ICM$).
      772     5999              DESCRIPTION: Executes a string of single-word read I/O's
      773     6000                           when they appear in the ICM test data.
      774     6001        */
      775     6002        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:143  
      776     6003    3   Y$SWRDS: PROC;

   6003   3 000434  EFC7 000A            Y$SWRDS         STB,B6   CHAD,AUTO

      777     6004
      778     6005    4      DCL INX UBIN WORD;
      779     6006    4      DCL NUMIO UBIN WORD;
      780     6007
      781     6008    4      INX = %GT_STRDATOFS#;

   6008   3 000436  6C0B                                 LDV,R6   11
          3 000437  EF47 000C                            STR,R6   INX,AUTO

      782     6009
      783     6010    4      NUMIO = Y_CLTICM.T1.TSTDAT(3);

   6010   3 000439  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 00043C  D845 000B                            LDR,R5   11,B5
          3 00043E  D570 00FF                            AND,R5   255,IMO
          3 000440  DF47 000D                            STR,R5   NUMIO,AUTO

      784     6011
      785     6012    4      CALL Y$IOREAD ALTRET (BAMO);

   6012   3 000442  E3C0 000D                            LNJ,B6   s:0,PREL
          3 000444       0008                            DC       s:6017,PREL

      786     6013
      787     6014    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6014   3 000445  6C21                                 LDV,R6   33
          3 000446  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000449  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 00044B       00FF

      788     6015
      789     6016    4   BAMO:
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:144  
      790     6017    4      RETURN;

   6017   3 00044C  ECC7 000A            BAMO            LDB,B6   CHAD,AUTO
          3 00044E  C3C6 0001                            LNJ,B4   1,B6

      791     6018
      792     6019        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:145  
      793     6020        /*I*  NAME:        Y$IOREAD
      794     6021              PURPOSE:     Perform single-word read I/O's
      795     6022              CALL:        CALL Y$IOREAD ALTRET;
      796     6023                           Altreturns if an I/O error occurs.
      797     6024              INTERFACE:   This routine calls the following:
      798     6025                            Y$DOIO
      799     6026              DATA:        Uses data in ICM buffer.
      800     6027              DESCRIPTION: Performs multiple reads of specified MLCP
      801     6028                           RAM bytes as per ICM test data.  The bytes
      802     6029                           read are placed in the corresponding CF data
      803     6030                           words of the ICM (a single byte, left justified,
      804     6031                           in each CF word).  The corresponding ML data
      805     6032                           words in the ICM are zeroed.
      806     6033        */
      807     6034        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:146  
      808     6035    4   Y$IOREAD: PROC ALTRET;

   6035   3 000450  EFC7 000E            Y$IOREAD        STB,B6   BUF2$,AUTO

      809     6036
      810     6037    5      DCL ITEM UBIN WORD;
      811     6038    5      DCL CON UBIN WORD;
      812     6039    5      DCL 1 CHN ALIGNED,
      813     6040    5            2 C UBIN(10) UNAL,
      814     6041    5            2 F UBIN(6) UNAL;
      815     6042    5      DCL CHN_C UBIN(10) ALIGNED;
      816     6043    5      DCL CHN_F UBIN(6) ALIGNED;
      817     6044
      818     6045    6      DO ITEM = 0 TO 2*(NUMIO - 1) BY 2;

   6045   3 000452  8747 0010                            CL       ITEM,AUTO
          3 000454  0F81 0053                            B        s:6060+5,PREL

      819     6046
      820     6047    6         CON = Y_CLTICM.T2.TEXT(INX + ITEM);

   6047   3 000456  E847 000C                            LDR,R6   INX,AUTO
          3 000458  EA47 0010                            ADD,R6   ITEM,AUTO
          3 00045A  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00045D  B856                                 LDR,R3   R6
          3 00045E  3E03                                 ADV,R3   3
          3 00045F  E836                                 LDR,R6   ,B6,R3
          3 000460  EF47 0011                            STR,R6   CON,AUTO

      821     6048    6         CHN = Y_CLTICM.T2.ICMTXT(INX + ITEM + 1);

   6048   3 000462  D847 000C                            LDR,R5   INX,AUTO
          3 000464  DA47 0010                            ADD,R5   ITEM,AUTO
          3 000466  B855                                 LDR,R3   R5
          3 000467  3E04                                 ADV,R3   4
          3 000468  D836                                 LDR,R5   ,B6,R3
          3 000469  DF47 0012                            STR,R5   CHN,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:147  

      822     6049    6         CHN_C = CHN.C;

   6049   3 00046B  C847 0012                            LDR,R4   CHN,AUTO
          3 00046D  4046                                 SOR,R4   6
          3 00046E  4006                                 SOL,R4   6
          3 00046F  CF47 0013                            STR,R4   CHN_C,AUTO

      823     6050    6         CHN_F = CHN.F;

   6050   3 000471  C847 0012                            LDR,R4   CHN,AUTO
          3 000473  C570 003F                            AND,R4   63,IMO
          3 000475  400A                                 SOL,R4   10
          3 000476  CF47 0014                            STR,R4   CHN_F,AUTO

      824     6051
      825     6052    6         CALL Y$DOIO (CHN_C, CHN_F, CON) WHENALTRETURN

   6052   3 000478  DBC7 0011                            LAB,B5   CON,AUTO
          3 00047A  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 00047C  CBC7 0014                            LAB,B4   CHN_F,AUTO
          3 00047E  CFC7 002C                            STB,B4   @CH+2,AUTO
          3 000480  BBC7 0013                            LAB,B3   CHN_C,AUTO
          3 000482  BFC7 002A                            STB,B3   @BOFS+2,AUTO
          3 000484  E3C0 0203                            LNJ,B6   s:0,PREL
          3 000486       0003                            DC       s:6054,PREL
          3 000487  0F81 0005                            B        s:6057,PREL

      826     6053    7              DO;

      827     6054    7                 ALTRETURN;

   6054   3 000489  ECC7 000E                            LDB,B6   BUF2$,AUTO
          3 00048B  B806                                 LDR,R3   ,B6
          3 00048C  C3B6                                 LNJ,B4   ,B6,R3

      828     6055    7              END;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:148  
      829     6056
      830     6057    6         Y_CLTICM.T2.TEXT(INX + ITEM) = 0;

   6057   3 00048D  E847 000C                            LDR,R6   INX,AUTO
          3 00048F  EA47 0010                            ADD,R6   ITEM,AUTO
          3 000491  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000494  B856                                 LDR,R3   R6
          3 000495  3E03                                 ADV,R3   3
          3 000496  8736                                 CL       ,B6,R3

      831     6058    6         Y_CLTICM.T2.TEXT(INX + ITEM + 1) = CON;

   6058   3 000497  E847 000C                            LDR,R6   INX,AUTO
          3 000499  EA47 0010                            ADD,R6   ITEM,AUTO
          3 00049B  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00049E  B856                                 LDR,R3   R6
          3 00049F  3E04                                 ADV,R3   4
          3 0004A0  E847 0011                            LDR,R6   CON,AUTO
          3 0004A2  EF36                                 STR,R6   ,B6,R3

      832     6059
      833     6060    6      END;

   6060   3 0004A3  E847 0010                            LDR,R6   ITEM,AUTO
          3 0004A5  6E02                                 ADV,R6   2
          3 0004A6  EF47 0010                            STR,R6   ITEM,AUTO
          3 0004A8  E847 000D                            LDR,R6   NUMIO,AUTO
          3 0004AA  6001                                 SOL,R6   1
          3 0004AB  6EFE                                 ADV,R6   -2
          3 0004AC  6801 0005                            BLZ,R6   s:6062,PREL
          3 0004AE  E947 0010                            CMR,R6   ITEM,AUTO
          3 0004B0  0281 FFA5                            BGE      s:6047,PREL

      834     6061
      835     6062    5      RETURN;

   6062   3 0004B2  ECC7 000E                            LDB,B6   BUF2$,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:149  
          3 0004B4  C3C6 0001                            LNJ,B4   1,B6

      836     6063
      837     6064    5   END Y$IOREAD;
      838     6065
      839     6066    4   END Y$SWRDS;
      840     6067
      841     6068        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:150  
      842     6069        /*I*  NAME:        Y$BMWUP
      843     6070              PURPOSE:     Block mode write using supplied pointer
      844     6071              CALL:        CALL Y$BMWUP;
      845     6072                           Does not altreturn.
      846     6073              INTERFACE:   This routine calls the following:
      847     6074                            Y$WRBLK
      848     6075              DATA:        Uses data in ICM buffer (pointer ICM$).
      849     6076              DESCRIPTION: This routine moves a block of data from the
      850     6077                           ICM buffer into the MLCP RAM using the RAM
      851     6078                           address supplied in the ICM.
      852     6079        */
      853     6080        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:151  
      854     6081    3   Y$BMWUP: PROC;

   6081   3 0004B6  EFC7 000A            Y$BMWUP         STB,B6   CHAD,AUTO

      855     6082
      856     6083    4      DCL RAMAD UBIN WORD;
      857     6084    4      DCL CH UBIN(10) ALIGNED;
      858     6085
      859     6086    4      RAMAD = Y_CLTICM.T2.TEXT(9);

   6086   3 0004B8  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0004BB  E845 000C                            LDR,R6   12,B5
          3 0004BD  EF47 000C                            STR,R6   RAMAD,AUTO

      860     6087
      861     6088    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (SHAZAM);

   6088   3 0004BF  CBC7 000C                            LAB,B4   RAMAD,AUTO
          3 0004C1  CFC7 0014                            STB,B4   CHN_F,AUTO
          3 0004C3  BBC7 000D                            LAB,B3   CH,AUTO
          3 0004C5  BFC7 0012                            STB,B3   CHN,AUTO
          3 0004C7  E3C0 0060                            LNJ,B6   s:0,PREL
          3 0004C9       0008                            DC       s:6093,PREL

      862     6089
      863     6090    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6090   3 0004CA  6C21                                 LDV,R6   33
          3 0004CB  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0004CE  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 0004D0       00FF

      864     6091
      865     6092    4   SHAZAM:
      866     6093    4      RETURN;

   6093   3 0004D1  ECC7 000A            SHAZAM          LDB,B6   CHAD,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:152  
          3 0004D3  C3C6 0001                            LNJ,B4   1,B6

      867     6094
      868     6095    4   END Y$BMWUP;
      869     6096
      870     6097        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:153  
      871     6098        /*I*  NAME:        Y$XEDAT
      872     6099              PURPOSE:     Implement transmit CCP (even line)
      873     6100              CALL:        CALL Y$XEDAT;
      874     6101                           Does not altreturn.
      875     6102              INTERFACE:   This routine calls the following:
      876     6103                            Y$XCCP
      877     6104              DATA:        Uses data in ICM buffer (pointer ICM$).
      878     6105              DESCRIPTION: This routine changes the odd line address to
      879     6106                           even line and moves the data for the transmit
      880     6107                           CCP from the ICM to the MLCP RAM (even line).
      881     6108                           It then stores the pointer to the CCP into
      882     6109                           LCT bytes 38 and 39 in the RAM.
      883     6110        */
      884     6111        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:154  
      885     6112    3   Y$XEDAT: PROC;

   6112   3 0004D5  EFC7 000A            Y$XEDAT         STB,B6   CHAD,AUTO

      886     6113
      887     6114    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR | %GT_ODDLINBIT#;

   6114   3 0004D7  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0004DA  E845 0005                            LDR,R6   5,B5
          3 0004DC  E470 0080                            OR,R6    128,IMO
          3 0004DE  EF45 0005                            STR,R6   5,B5

      888     6115    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR \ %GT_ODDLINBIT#;

   6115   3 0004E0  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0004E3  E846 0005                            LDR,R6   5,B6
          3 0004E5  E670 0080                            XOR,R6   128,IMO
          3 0004E7  EF46 0005                            STR,R6   5,B6

      889     6116
      890     6117    4      CALL Y$XCCP;

   6117   3 0004E9  E3C0 FD7F                            LNJ,B6   s:0,PREL
          3 0004EB       0001                            DC       s:6119,PREL

      891     6118
      892     6119    4      RETURN;

   6119   3 0004EC  ECC7 000A                            LDB,B6   CHAD,AUTO
          3 0004EE  C3C6 0001                            LNJ,B4   1,B6

      893     6120
      894     6121    4   END Y$XEDAT;
      895     6122
      896     6123        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:155  
      897     6124        /*I*  NAME:        Y$PRCCP
      898     6125              PURPOSE:     Implement partial receive CCP
      899     6126              CALL:        CALL Y$PRCCP;
      900     6127                           Does not altreturn.
      901     6128              INTERFACE:   This routine calls the following:
      902     6129                            Y$WRBLK
      903     6130              DATA:        Uses data in ICM buffer (pointer ICM$).
      904     6131              DESCRIPTION: Moves first part of receive CCP data from
      905     6132                           the ICM buffer into the MLCP RAM.
      906     6133        */
      907     6134        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:156  
      908     6135    3   Y$PRCCP: PROC;

   6135   3 0004F0  EFC7 000A            Y$PRCCP         STB,B6   CHAD,AUTO

      909     6136
      910     6137    4      DCL RAMAD UBIN WORD;
      911     6138    4      DCL CH UBIN(10) ALIGNED;
      912     6139
      913     6140    4      RAMAD = %Y#RCVRAM;

   6140   3 0004F2  E870 0CD4                            LDR,R6   3284,IMO
          3 0004F4  EF47 000C                            STR,R6   RAMAD,AUTO

      914     6141
      915     6142    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (EGAD);

   6142   3 0004F6  DBC7 000C                            LAB,B5   RAMAD,AUTO
          3 0004F8  DFC7 0014                            STB,B5   CHN_F,AUTO
          3 0004FA  CBC7 000D                            LAB,B4   CH,AUTO
          3 0004FC  CFC7 0012                            STB,B4   CHN,AUTO
          3 0004FE  E3C0 0029                            LNJ,B6   s:0,PREL
          3 000500       0008                            DC       s:6147,PREL

      916     6143
      917     6144    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6144   3 000501  6C21                                 LDV,R6   33
          3 000502  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000505  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000507       00FF

      918     6145
      919     6146    4   EGAD:
      920     6147    4      RETURN;

   6147   3 000508  ECC7 000A            EGAD            LDB,B6   CHAD,AUTO
          3 00050A  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:157  

      921     6148
      922     6149    4   END Y$PRCCP;
      923     6150
      924     6151        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:158  
      925     6152        /*I*  NAME:        Y$PXCCP;
      926     6153              PURPOSE:     Implement partial transmit CCP
      927     6154              CALL:        CALL Y$PXCCP;
      928     6155                           Does not altreturn.
      929     6156              INTERFACE:   This routine calls the following:
      930     6157                            Y$WRBLK
      931     6158              DATA:        Uses data in ICM buffer (pointer ICM$).
      932     6159              DESCRIPTION: Moves first part of transmit CCP data from
      933     6160                           the ICM buffer into the MLCP RAM.
      934     6161        */
      935     6162        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:159  
      936     6163    3   Y$PXCCP: PROC;

   6163   3 00050C  EFC7 000A            Y$PXCCP         STB,B6   CHAD,AUTO

      937     6164
      938     6165    4      DCL RAMAD UBIN WORD;
      939     6166    4      DCL CH UBIN(10) ALIGNED;
      940     6167
      941     6168    4      RAMAD = %Y#XMTRAM;

   6168   3 00050E  E870 0D6A                            LDR,R6   3434,IMO
          3 000510  EF47 000C                            STR,R6   RAMAD,AUTO

      942     6169
      943     6170    4      CALL Y$WRBLK (CH, RAMAD) ALTRET (ZOUNDS);

   6170   3 000512  DBC7 000C                            LAB,B5   RAMAD,AUTO
          3 000514  DFC7 0014                            STB,B5   CHN_F,AUTO
          3 000516  CBC7 000D                            LAB,B4   CH,AUTO
          3 000518  CFC7 0012                            STB,B4   CHN,AUTO
          3 00051A  E3C0 000D                            LNJ,B6   s:0,PREL
          3 00051C       0008                            DC       s:6175,PREL

      944     6171
      945     6172    4      Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;

   6172   3 00051D  6C21                                 LDV,R6   33
          3 00051E  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000521  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 000523       00FF

      946     6173
      947     6174    4   ZOUNDS:
      948     6175    4      RETURN;

   6175   3 000524  ECC7 000A            ZOUNDS          LDB,B6   CHAD,AUTO
          3 000526  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:160  

      949     6176
      950     6177    4   END Y$PXCCP;
      951     6178
      952     6179        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:161  
      953     6180        /*I*  NAME:        Y$WRBLK
      954     6181              PURPOSE:     Move ICM data to MLCP RAM
      955     6182              CALL:        CALL Y$WRBLK (CH, RAMAD) ALTRET;
      956     6183                           Altreturns if an I/O error occurs.
      957     6184              PARAMETERS:  RAMAD is an input parameter containing the RAM
      958     6185                           address.
      959     6186                           CH is an output parameter containing the
      960     6187                           channel address.
      961     6188              INTERFACE:   This routine calls the following:
      962     6189                            Y$BMW
      963     6190                            M$WAIT
      964     6191                            Y$STATUS
      965     6192                            Y$CKSTAT
      966     6193              DATA:        Uses data in ICM buffer.
      967     6194              DESCRIPTION: Moves a block of ICM data using the ICM buffer
      968     6195                           (starting at word 14) into the MLCP RAM at the
      969     6196                           previously set-up Ram address.
      970     6197        */
      971     6198        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:162  
      972     6199    3   Y$WRBLK: PROC (CH, RAMAD) ALTRET;

   6199   3 000528  EFC7 0010            Y$WRBLK         STB,B6   ITEM,AUTO

      973     6200
      974     6201    4      DCL RAMAD UBIN WORD;
      975     6202    4      DCL STAT BIT(16) ALIGNED;
      976     6203    4      DCL CH UBIN(10) ALIGNED;
      977     6204
      978     6205    4      CALL Y$BMW (CH, RAMAD) ALTRET (BADUN);

   6205   3 00052A  DCC7 0014                            LDB,B5   @RAMAD,AUTO
          3 00052C  DFC7 001C                            STB,B5   DP$,AUTO
          3 00052E  CCC7 0012                            LDB,B4   @CH,AUTO
          3 000530  CFC7 001A                            STB,B4   CHN_F+2,AUTO
          3 000532  E3C0 0023                            LNJ,B6   s:0,PREL
          3 000534       001E                            DC       s:6214,PREL

      979     6206
      980     6207    4      CALL M$WAIT (WAIT_IO);

   6207   3 000535  BB80 0000 0062  00                   LAB,B3   WAIT_IO
          3 000538  B870 0CC5                            LDR,R3   3269,IMO
          3 00053A  0001                                 MCL
          3 00053B       0000                            DC       s:6207+6,PREL

      981     6208
      982     6209    4      CALL Y$STATUS (CH, STAT) ALTRET (BADUN);

   6209   3 00053C  EBC7 0016                            LAB,B6   STAT,AUTO
          3 00053E  EFC7 0024                            STB,B6   @CH+2,AUTO
          3 000540  DCC7 0012                            LDB,B5   @CH,AUTO
          3 000542  DFC7 0022                            STB,B5   BSIZ+1,AUTO
          3 000544  E3C0 008C                            LNJ,B6   s:0,PREL
          3 000546       000C                            DC       s:6214,PREL

      983     6210
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:163  
      984     6211    4      CALL Y$CKSTAT (CH, STAT) ALTRET (BADUN);

   6211   3 000547  EBC7 0016                            LAB,B6   STAT,AUTO
          3 000549  EFC7 001C                            STB,B6   DP$,AUTO
          3 00054B  DCC7 0012                            LDB,B5   @CH,AUTO
          3 00054D  DFC7 001A                            STB,B5   CHN_F+2,AUTO
          3 00054F  E3C0 00C5                            LNJ,B6   s:0,PREL
          3 000551       0001                            DC       s:6214,PREL

      985     6212
      986     6213    4   BADUN:
      987     6214    4      RETURN;

   6214   3 000552  ECC7 0010            BADUN           LDB,B6   ITEM,AUTO
          3 000554  C3C6 0001                            LNJ,B4   1,B6

      988     6215
      989     6216    4   END Y$WRBLK;
      990     6217
      991     6218        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:164  
      992     6219        /*I*  NAME:        Y$BMW
      993     6220              PURPOSE:     Move ICM data to MLCP RAM
      994     6221              CALL:        CALL Y$BMW (CH, RAD) ALTRET;
      995     6222                           Altreturns if an I/O error occurs.
      996     6223              PARAMETERS:  RAD is an input parameter containing the RAM
      997     6224                           address.
      998     6225                           CH is an output parameter containing the
      999     6226                           channel address.
     1000     6227              INTERFACE:   This routine calls the following:
     1001     6228                            Y$IOLD
     1002     6229                            Y$DOIO
     1003     6230              DATA:        Uses data in ICM buffer.
     1004     6231              DESCRIPTION: Moves a block of ICM data using the ICM buffer
     1005     6232                           (starting at word 14) into the MLCP RAM at the
     1006     6233                           previously set-up Ram address.
     1007     6234        */
     1008     6235        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:165  
     1009     6236    3   Y$BMW: PROC (CH, RAD) ALTRET;

   6236   3 000556  EFC7 0018            Y$BMW           STB,B6   CHN_F,AUTO

     1010     6237
     1011     6238    4      DCL RAD UBIN WORD;
     1012     6239    4      DCL CH UBIN(10) ALIGNED;
     1013     6240    4      DCL FC UBIN(6) ALIGNED;
     1014     6241    4      DCL STAT BIT(16) ALIGNED;
     1015     6242    4      DCL BOFS UBIN WORD;
     1016     6243    4      DCL BSIZ UBIN WORD;
     1017     6244
     1018     6245    4      Y_CLTICM.T1.R1.CHNLNR = Y_CLTICM.T1.R1.CHNLNR | %GT_OTPCHNBIT#;

   6245   3 000558  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 00055B  E845 0005                            LDR,R6   5,B5
          3 00055D  E470 0040                            OR,R6    64,IMO
          3 00055F  EF45 0005                            STR,R6   5,B5

     1019     6246    4      CH = Y_CLTICM.T1.R1.CHNLNR.CH;

   6246   3 000561  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000564  DCC7 001A                            LDB,B5   @CH,AUTO
          3 000566  E846 0005                            LDR,R6   5,B6
          3 000568  6046                                 SOR,R6   6
          3 000569  6006                                 SOL,R6   6
          3 00056A  EF05                                 STR,R6   ,B5

     1020     6247    4      BOFS = %GT_ICMDATOFF#;

   6247   3 00056B  6C1C                                 LDV,R6   28
          3 00056C  EF47 0020                            STR,R6   BOFS,AUTO

     1021     6248    4      BSIZ = Y_CLTICM.T1.TSTDAT(1) * 2;

   6248   3 00056E  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000571  D846 000A                            LDR,R5   10,B6
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:166  
          3 000573  5001                                 SOL,R5   1
          3 000574  D570 01FE                            AND,R5   510,IMO
          3 000576  DF47 0021                            STR,R5   BSIZ,AUTO

     1022     6249    4      CALL Y$IOLD (CH, ICM$, BOFS, BSIZ) ALTRET (ZONK);

   6249   3 000578  CBC7 0021                            LAB,B4   BSIZ,AUTO
          3 00057A  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 00057C  BBC7 0020                            LAB,B3   BOFS,AUTO
          3 00057E  BFC7 0028                            STB,B3   @DP$+2,AUTO
          3 000580  AB80 0000 00A9  00                   LAB,B2   ICM$
          3 000583  AFC7 0026                            STB,B2   @CH+2,AUTO
          3 000585  DFC7 0024                            STB,B5   @CH+2,AUTO
          3 000587  E3C0 00BD                            LNJ,B6   s:0,PREL
          3 000589       0044                            DC       s:6265,PREL

     1023     6250
     1024     6251    4      FC = %GH#IO_OTPCCBCTR;

   6251   3 00058A  E870 3C00                            LDR,R6   15360,IMO
          3 00058C  EF47 001E                            STR,R6   FC,AUTO

     1025     6252    4      CALL Y$DOIO (CH, FC, RAD) ALTRET (ZONK);

   6252   3 00058E  ECC7 001C                            LDB,B6   @RAD,AUTO
          3 000590  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 000592  DBC7 001E                            LAB,B5   FC,AUTO
          3 000594  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 000596  CCC7 001A                            LDB,B4   @CH,AUTO
          3 000598  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 00059A  E3C0 00ED                            LNJ,B6   s:0,PREL
          3 00059C       0031                            DC       s:6265,PREL

     1026     6253
     1027     6254    4      FC = %GH#IO_OTPCHNCTR;

   6254   3 00059D  E870 1400                            LDR,R6   5120,IMO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:167  
          3 00059F  EF47 001E                            STR,R6   FC,AUTO

     1028     6255    4      STAT = %GT_STTBLMWRT#;

   6255   3 0005A1  D870 0400                            LDR,R5   1024,IMO
          3 0005A3  DF47 001F                            STR,R5   STAT,AUTO

     1029     6256    4      CALL Y$DOIO (CH, FC, STAT) ALTRET (ZONK);

   6256   3 0005A5  EBC7 001F                            LAB,B6   STAT,AUTO
          3 0005A7  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 0005A9  DBC7 001E                            LAB,B5   FC,AUTO
          3 0005AB  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 0005AD  CCC7 001A                            LDB,B4   @CH,AUTO
          3 0005AF  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0005B1  E3C0 00D6                            LNJ,B6   s:0,PREL
          3 0005B3       001A                            DC       s:6265,PREL

     1030     6257
     1031     6258    4      FC = %GH#IO_INPNXTCCBSTT;

   6258   3 0005B4  E870 6800                            LDR,R6   26624,IMO
          3 0005B6  EF47 001E                            STR,R6   FC,AUTO

     1032     6259    4      STAT = '0'B;

   6259   3 0005B8  8747 001F                            CL       STAT,AUTO

     1033     6260    4      CALL Y$DOIO (CH, FC, STAT) ALTRET (ZONK);

   6260   3 0005BA  EBC7 001F                            LAB,B6   STAT,AUTO
          3 0005BC  EFC7 002E                            STB,B6   @FC+2,AUTO
          3 0005BE  DBC7 001E                            LAB,B5   FC,AUTO
          3 0005C0  DFC7 002C                            STB,B5   @CH+2,AUTO
          3 0005C2  CCC7 001A                            LDB,B4   @CH,AUTO
          3 0005C4  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0005C6  E3C0 00C1                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:168  
          3 0005C8       0005                            DC       s:6265,PREL

     1034     6261
     1035     6262    4      RETURN;

   6262   3 0005C9  ECC7 0018                            LDB,B6   CHN_F,AUTO
          3 0005CB  C3C6 0001                            LNJ,B4   1,B6

     1036     6263
     1037     6264    4   ZONK:
     1038     6265    4      ALTRETURN;

   6265   3 0005CD  ECC7 0018            ZONK            LDB,B6   CHN_F,AUTO
          3 0005CF  B806                                 LDR,R3   ,B6
          3 0005D0  C3B6                                 LNJ,B4   ,B6,R3

     1039     6266
     1040     6267    4   END Y$BMW;
     1041     6268
     1042     6269        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:169  
     1043     6270        /*I*  NAME:        Y$STATUS
     1044     6271              PURPOSE:     Obtain and save status word
     1045     6272              CALL:        CALL Y$STATUS (CH, STAT) ALTRET;
     1046     6273                           Altreturns if an I/O error occurs.
     1047     6274              PARAMETERS:  CH is an INPUT parameter containing the
     1048     6275                           channel address.
     1049     6276                           STAT is an output parameter containing the
     1050     6277                           status.
     1051     6278              INTERFACE:   This routine calls the following:
     1052     6279                            Y$DOIO
     1053     6280                            Y$SAVSTT
     1054     6281              DATA:        Saves status in ICM buffer (pointer ICM$).
     1055     6282              DESCRIPTION: Executes I/O to obtain status word per
     1056     6283                           given channel address and saves status
     1057     6284                           in reply ICM.
     1058     6285        */
     1059     6286        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:170  
     1060     6287    3   Y$STATUS: PROC (CH, STAT) ALTRET;

   6287   3 0005D1  EFC7 0020            Y$STATUS        STB,B6   BOFS,AUTO

     1061     6288
     1062     6289    4      DCL STAT BIT(16) ALIGNED;
     1063     6290    4      DCL 1 CH ALIGNED,
     1064     6291    4            2 M UBIN(9) UNAL,
     1065     6292    4            2 X BIT(1) UNAL;
     1066     6293    4      DCL FC UBIN(6) ALIGNED;
     1067     6294
     1068     6295    4      STAT = '0'B;

   6295   3 0005D3  DCC7 0024                            LDB,B5   @STAT,AUTO
          3 0005D5  8705                                 CL       ,B5

     1069     6296    4      FC = %GH#IO_INPCCBSTT;

   6296   3 0005D6  E870 6000                            LDR,R6   24576,IMO
          3 0005D8  EF47 0026                            STR,R6   FC,AUTO

     1070     6297
     1071     6298    4      CALL Y$DOIO (CH, FC, STAT) WHENALTRETURN

   6298   3 0005DA  DFC7 002E                            STB,B5   @FC+2,AUTO
          3 0005DC  EBC7 0026                            LAB,B6   FC,AUTO
          3 0005DE  EFC7 002C                            STB,B6   @CH+2,AUTO
          3 0005E0  CCC7 0022                            LDB,B4   @CH,AUTO
          3 0005E2  CFC7 002A                            STB,B4   @BOFS+2,AUTO
          3 0005E4  E3C0 00A3                            LNJ,B6   s:0,PREL
          3 0005E6       0003                            DC       s:6300,PREL
          3 0005E7  0F81 0008                            B        s:6304,PREL

     1072     6299    5           DO;

     1073     6300    5              CALL Y$SAVSTT;

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:171  
   6300   3 0005E9  E3C0 000D                            LNJ,B6   s:0,PREL
          3 0005EB       0001                            DC       s:6301,PREL

     1074     6301    5              ALTRETURN;

   6301   3 0005EC  ECC7 0020                            LDB,B6   BOFS,AUTO
          3 0005EE  B806                                 LDR,R3   ,B6
          3 0005EF  C3B6                                 LNJ,B4   ,B6,R3

     1075     6302    5           END;
     1076     6303
     1077     6304    4      CALL Y$SAVSTT;

   6304   3 0005F0  E3C0 0006                            LNJ,B6   s:0,PREL
          3 0005F2       0001                            DC       s:6306,PREL

     1078     6305
     1079     6306    4      RETURN;

   6306   3 0005F3  ECC7 0020                            LDB,B6   BOFS,AUTO
          3 0005F5  C3C6 0001                            LNJ,B4   1,B6

     1080     6307
     1081     6308        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:172  
     1082     6309        /*I*  NAME:        Y$SAVSTT
     1083     6310              PURPOSE:     Save status word
     1084     6311              CALL:        CALL Y$SAVSTT;
     1085     6312                           Does not altreturn.
     1086     6313              INTERFACE:   None.
     1087     6314              DATA:        ICM buffer (pointer ICM$).
     1088     6315              DESCRIPTION: Determines location in ICM buffer
     1089     6316                           to save status, and saves it there.
     1090     6317                           An output status is saved in word 13 of
     1091     6318                           the ICM.  An input status is saved in
     1092     6319                           word 12.
     1093     6320        */
     1094     6321        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:173  
     1095     6322    4   Y$SAVSTT: PROC;

   6322   3 0005F7  EFC7 0028            Y$SAVSTT        STB,B6   @DP$+2,AUTO

     1096     6323
     1097     6324    5      IF CH.X

   6324   3 0005F9  DCC7 0022                            LDB,B5   @CH,AUTO
          3 0005FB  8285                                 LB,'0040'X        ,B5
          3 0005FC       0040
          3 0005FD  0581 000B                            BBF      s:6328,PREL

     1098     6325    5      THEN
     1099     6326    5         Y_CLTICM.T2.ICMTXT(10) = STAT;

   6326   3 0005FF  CC80 0000 00A9  00                   LDB,B4   ICM$
          3 000602  BCC7 0024                            LDB,B3   @STAT,AUTO
          3 000604  E803                                 LDR,R6   ,B3
          3 000605  EF44 000D                            STR,R6   13,B4
          3 000607  0F81 0009                            B        s:6330,PREL

     1100     6327    5      ELSE
     1101     6328    5         Y_CLTICM.T2.ICMTXT(9) = STAT;

   6328   3 000609  CC80 0000 00A9  00                   LDB,B4   ICM$
          3 00060C  BCC7 0024                            LDB,B3   @STAT,AUTO
          3 00060E  E803                                 LDR,R6   ,B3
          3 00060F  EF44 000C                            STR,R6   12,B4

     1102     6329
     1103     6330    5      RETURN;

   6330   3 000611  ECC7 0028                            LDB,B6   @DP$+2,AUTO
          3 000613  C3C6 0001                            LNJ,B4   1,B6

     1104     6331
     1105     6332    5   END Y$SAVSTT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:174  
     1106     6333
     1107     6334    4   END Y$STATUS;
     1108     6335
     1109     6336        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:175  
     1110     6337        /*I*  NAME:        Y$CKSTAT
     1111     6338              PURPOSE:     Check for valid status
     1112     6339              CALL:        CALL Y$CKSTAT (CH, STAT) ALTRET;
     1113     6340                           Altreturns if an I/O error occurs or
     1114     6341                           if timer runout occurs before a valid
     1115     6342                           status.
     1116     6343              PARAMETERS:  CH is an INPUT parameter containing the
     1117     6344                           pertinent channel address.
     1118     6345                           STAT is an input and output parameter
     1119     6346                           containing the status.
     1120     6347              INTERFACE:   This routine calls the following:
     1121     6348                            M$WAIT
     1122     6349                            Y$STATUS
     1123     6350                            Y$IOER
     1124     6351              DATA:        ICM buffer (pointer ICM$).
     1125     6352              DESCRIPTION: Checks status word in the FPT for device
     1126     6353                           ready.  If status is not ready, routine
     1127     6354                           then waits a short time and issues a new
     1128     6355                           status request.  This status is then
     1129     6356                           checked for ready.  Cycle continues until
     1130     6357                           either a valid status is obtained or a
     1131     6358                           timeout occurs.
     1132     6359        */
     1133     6360        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:176  
     1134     6361    3   Y$CKSTAT: PROC (CH, STAT) ALTRET;

   6361   3 000615  EFC7 0018            Y$CKSTAT        STB,B6   CHN_F,AUTO

     1135     6362
     1136     6363    4      DCL ITEM UBIN WORD;
     1137     6364    4      DCL STAT BIT(16) ALIGNED;
     1138     6365    4      DCL CH UBIN(10) ALIGNED;
     1139     6366    4      DCL FC UBIN(6) ALIGNED;
     1140     6367
     1141     6368    5      DO ITEM = 1 TO 9;

   6368   3 000617  6C01                                 LDV,R6   1
          3 000618  EF47 001E                            STR,R6   ITEM,AUTO

     1142     6369
     1143     6370    5         IF (STAT & %GT_STATUSCMP#)

   6370   3 00061A  ECC7 001C                            LDB,B6   @STAT,AUTO
          3 00061C  E806                                 LDR,R6   ,B6
          3 00061D  E570 1000                            AND,R6   4096,IMO
          3 00061F  6901 0005                            BEZ,R6   s:6375,PREL

     1144     6371    5         THEN
     1145     6372    5            RETURN;

   6372   3 000621  ECC7 0018                            LDB,B6   CHN_F,AUTO
          3 000623  C3C6 0001                            LNJ,B4   1,B6

     1146     6373    5         ELSE
     1147     6374    6              DO;

     1148     6375    6                 CALL M$WAIT (WAIT_IO);

   6375   3 000625  BB80 0000 0062  00                   LAB,B3   WAIT_IO
          3 000628  B870 0CC5                            LDR,R3   3269,IMO
          3 00062A  0001                                 MCL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:177  
          3 00062B       0000                            DC       s:6375+6,PREL

     1149     6376    6                 CALL Y$STATUS (CH, STAT) ALTRET (BOP);

   6376   3 00062C  ECC7 001C                            LDB,B6   @STAT,AUTO
          3 00062E  EFC7 0024                            STB,B6   @STAT,AUTO
          3 000630  DCC7 001A                            LDB,B5   @CH,AUTO
          3 000632  DFC7 0022                            STB,B5   @CH,AUTO
          3 000634  E3C0 FF9C                            LNJ,B6   s:0,PREL
          3 000636       000B                            DC       s:6383,PREL

     1150     6377    6              END;

     1151     6378
     1152     6379    5      END;

   6379   3 000637  8AC7 001E                            INC      ITEM,AUTO
          3 000639  E847 001E                            LDR,R6   ITEM,AUTO
          3 00063B  6D09                                 CMV,R6   9
          3 00063C  03DE                                 BLE      s:6370,SPREL

     1153     6380    4      RETURN;

   6380   3 00063D  ECC7 0018                            LDB,B6   CHN_F,AUTO
          3 00063F  C3C6 0001                            LNJ,B4   1,B6

     1154     6381
     1155     6382    4   BOP:
     1156     6383    4      ALTRETURN;

   6383   3 000641  ECC7 0018            BOP             LDB,B6   CHN_F,AUTO
          3 000643  B806                                 LDR,R3   ,B6
          3 000644  C3B6                                 LNJ,B4   ,B6,R3

     1157     6384
     1158     6385    4   END Y$CKSTAT;
     1159     6386
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:178  
     1160     6387        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:179  
     1161     6388        /*I*  NAME:        Y$IOLD
     1162     6389              PURPOSE:     Perform IOLD using ICM data
     1163     6390              CALL:        CALL Y$IOLD (CH, DP$, BOFS, BSIZ) ALTRET;
     1164     6391                           Altreturns if an I/O error occurs
     1165     6392              PARAMETERS:  CH is an input parameter containing the
     1166     6393                           channel number.
     1167     6394                           DP$ is an input parameter containing a
     1168     6395                           pointer to the source data buffer.
     1169     6396                           BOFS is an input parameter containing
     1170     6397                           the byte offset value to the data buffer.
     1171     6398                           BSIZ is an input parameter containing
     1172     6399                           the size (bytes) of the data.
     1173     6400              INTERFACE:   This routine calls the following:
     1174     6401                            GHH$IOLD
     1175     6402                            Y$IOER
     1176     6403              DATA:        Sets up GT_IOLD FPT and uses ICM data.
     1177     6404              DESCRIPTION: Places channel, function code, size(bytes),
     1178     6405                           and buffer pointer (points to ICM word 14)
     1179     6406                           into GT_IOLD FPT.  Then it executes IOLD
     1180     6407                           using the GHH$IOLD routine.
     1181     6408        */
     1182     6409        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:180  
     1183     6410    3   Y$IOLD: PROC (CH, DP$, BOFS, BSIZ) ALTRET;

   6410   3 000645  EFC7 0022            Y$IOLD          STB,B6   @CH,AUTO

     1184     6411
     1185     6412    4      DCL CH UBIN(10) ALIGNED;
     1186     6413    4      DCL FC UBIN(6) ALIGNED;
     1187     6414    4      DCL DP$ PTR;
     1188     6415    4      DCL BOFS UBIN WORD;
     1189     6416    4      DCL BSIZ UBIN WORD;
     1190     6417
     1191     6418    4      FC = GT_IOLD.FNC;

   6418   3 000647  E800 0000 0002  00                   LDR,R6   GT_IOLD
          3 00064A  E570 003F                            AND,R6   63,IMO
          3 00064C  600A                                 SOL,R6   10
          3 00064D  EF47 002C                            STR,R6   FC,AUTO

     1192     6419
     1193     6420    4      GT_IOLD.CHN = CH;

   6420   3 00064F  DCC7 0024                            LDB,B5   @CH,AUTO
          3 000651  E805                                 LDR,R6   ,B5
          3 000652  EA80 0000 0002  00                   SRM,R6,'FFC0'X    GT_IOLD
          3 000655       FFC0

     1194     6421    4      GT_IOLD.BYTX = BOFS;

   6421   3 000656  CCC7 0028                            LDB,B4   @BOFS,AUTO
          3 000658  E804                                 LDR,R6   ,B4
          3 000659  EF00 0000 0005  00                   STR,R6   GT_IOLD+3

     1195     6422    4      GT_IOLD.BUFSIZE = BSIZ;

   6422   3 00065C  BCC7 002A                            LDB,B3   @BSIZ,AUTO
          3 00065E  D803                                 LDR,R5   ,B3
          3 00065F  DF00 0000 0006  00                   STR,R5   GT_IOLD+4
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:181  

     1196     6423    4      GT_IOLD.BUF$ = DP$;

   6423   3 000662  ACC7 0026                            LDB,B2   @DP$,AUTO
          3 000664  9C82                                 LDB,B1   ,B2
          3 000665  9F80 0000 0003  00                   STB,B1   GT_IOLD+1

     1197     6424
     1198     6425    4      CALL GHH$IOLD (GT_IOLD) WHENALTRETURN

   6425   3 000668  BB80 0000 0001  04                   LAB,B3   +1
          3 00066B  CBF0 0100                            LAB,B4   256,IMO
          3 00066D  E380 0000 0000  xent                 LNJ,B6   GHH$IOLD
          3 000670       0003                            DC       s:6427,PREL
          3 000671  0F81 0012                            B        s:6432,PREL

     1199     6426    5           DO;

     1200     6427    5              Y_CLTICM.T1.IFLAGS.IONAK = %G_ON#;

   6427   3 000673  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000676  8946 0008                            LBT,'0001'X       8,B6
          3 000678       0001

     1201     6428    5              CALL Y$IOER (FC);

   6428   3 000679  EBC7 002C                            LAB,B6   FC,AUTO
          3 00067B  EFC7 0032                            STB,B6   @CON+4,AUTO
          3 00067D  E3C0 0047                            LNJ,B6   s:0,PREL
          3 00067F       0001                            DC       s:6429,PREL

     1202     6429    5              ALTRETURN;

   6429   3 000680  ECC7 0022                            LDB,B6   @CH,AUTO
          3 000682  B806                                 LDR,R3   ,B6
          3 000683  C3B6                                 LNJ,B4   ,B6,R3

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:182  
     1203     6430    5           END;
     1204     6431
     1205     6432    4      RETURN;

   6432   3 000684  ECC7 0022                            LDB,B6   @CH,AUTO
          3 000686  C3C6 0001                            LNJ,B4   1,B6

     1206     6433
     1207     6434    4   END Y$IOLD;
     1208     6435
     1209     6436        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:183  
     1210     6437        /*I*  NAME:        Y$DOIO
     1211     6438              PURPOSE:     Perform IO using ICM data
     1212     6439              CALL:        CALL Y$DOIO (CH, FC, CON) ALTRET;
     1213     6440                           Altreturns if an I/O error occurs.
     1214     6441              PARAMETERS:  CH is an input parameter containing the
     1215     6442                           channel number.
     1216     6443                           FC is an input parameter containing the
     1217     6444                           function code.
     1218     6445                           CON is an input or output parameter
     1219     6446                           containing control information.
     1220     6447              INTERFACE:   This routine calls the following:
     1221     6448                            GHH$IO_IN
     1222     6449                            Y$IOER
     1223     6450              DATA:        Sets up GT_IO FPT and uses ICM data.
     1224     6451              DESCRIPTION: Places channel address, function code, and
     1225     6452                           control word into the GT_IO FPT.  Then it
     1226     6453                           executes the I/O using the GHH$IO_IN
     1227     6454                           routine.
     1228     6455        */
     1229     6456        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:184  
     1230     6457    3   Y$DOIO: PROC (CH, FC, CON) ALTRET;

   6457   3 000688  EFC7 0028            Y$DOIO          STB,B6   @BOFS,AUTO

     1231     6458
     1232     6459    4      DCL CH UBIN(10) ALIGNED;
     1233     6460    4      DCL FC UBIN(6) ALIGNED;
     1234     6461    4      DCL CON UBIN WORD;
     1235     6462
     1236     6463    4      GT_IO.CAS.FNC = FC;

   6463   3 00068A  DCC7 002C                            LDB,B5   @FC,AUTO
          3 00068C  E805                                 LDR,R6   ,B5
          3 00068D  604A                                 SOR,R6   10
          3 00068E  EA80 0000 0000  00                   SRM,R6,'003F'X    GT_IO
          3 000691       003F

     1237     6464    4      GT_IO.RANGE = CON;

   6464   3 000692  CCC7 002E                            LDB,B4   @CON,AUTO
          3 000694  E804                                 LDR,R6   ,B4
          3 000695  EF00 0000 0001  00                   STR,R6   GT_IO+1

     1238     6465    4      GT_IO.CAS.CHN = CH;

   6465   3 000698  BCC7 002A                            LDB,B3   @CH,AUTO
          3 00069A  D803                                 LDR,R5   ,B3
          3 00069B  DA80 0000 0000  00                   SRM,R5,'FFC0'X    GT_IO
          3 00069E       FFC0

     1239     6466
     1240     6467    4      CALL GHH$IO_IN (GT_IO) WHENALTRETURN

   6467   3 00069F  BB80 0000 0003  04                   LAB,B3   +3
          3 0006A2  CBF0 0100                            LAB,B4   256,IMO
          3 0006A4  E380 0000 0000  xent                 LNJ,B6   GHH$IO_IN
          3 0006A7       0003                            DC       s:6469,PREL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:185  
          3 0006A8  0F81 0012                            B        s:6474,PREL

     1241     6468    5           DO;

     1242     6469    5              Y_CLTICM.T1.IFLAGS.IONAK = %G_ON#;

   6469   3 0006AA  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0006AD  8946 0008                            LBT,'0001'X       8,B6
          3 0006AF       0001

     1243     6470    5              CALL Y$IOER (FC);

   6470   3 0006B0  ECC7 002C                            LDB,B6   @FC,AUTO
          3 0006B2  EFC7 0032                            STB,B6   @CON+4,AUTO
          3 0006B4  E3C0 0010                            LNJ,B6   s:0,PREL
          3 0006B6       0001                            DC       s:6471,PREL

     1244     6471    5              ALTRETURN;

   6471   3 0006B7  ECC7 0028                            LDB,B6   @BOFS,AUTO
          3 0006B9  B806                                 LDR,R3   ,B6
          3 0006BA  C3B6                                 LNJ,B4   ,B6,R3

     1245     6472    5           END;
     1246     6473
     1247     6474    4      CON = GT_IO.RANGE;

   6474   3 0006BB  ECC7 002E                            LDB,B6   @CON,AUTO
          3 0006BD  E800 0000 0001  00                   LDR,R6   GT_IO+1
          3 0006C0  EF06                                 STR,R6   ,B6

     1248     6475
     1249     6476    4      RETURN;

   6476   3 0006C1  ECC7 0028                            LDB,B6   @BOFS,AUTO
          3 0006C3  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:186  
     1250     6477
     1251     6478    4   END Y$DOIO;
     1252     6479
     1253     6480        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:187  
     1254     6481        /*I*  NAME:        Y$IOER
     1255     6482              PURPOSE:     Process common error data on bad IO returns
     1256     6483              CALL:        CALL Y$IOER (FC);
     1257     6484                           Does not altreturn.
     1258     6485              PARAMETERS:  FC is an input parameter containing the
     1259     6486                           function code.
     1260     6487              INTERFACE:   None.
     1261     6488              DATA:        Uses data in ICM buffer (pointer ICM$).
     1262     6489              DESCRIPTION: Places common IO error data in ICM.
     1263     6490        */
     1264     6491        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:188  
     1265     6492    3   Y$IOER: PROC (FC);

   6492   3 0006C5  EFC7 0030            Y$IOER          STB,B6   @CON+2,AUTO

     1266     6493
     1267     6494    4      DCL FC UBIN(6) ALIGNED;
     1268     6495
     1269     6496    4      Y_CLTICM.T1.TSTDAT(0) = FC;

   6496   3 0006C7  DCC7 0032                            LDB,B5   @FC,AUTO
          3 0006C9  E805                                 LDR,R6   ,B5
          3 0006CA  604A                                 SOR,R6   10
          3 0006CB  CC80 0000 00A9  00                   LDB,B4   ICM$
          3 0006CE  E7C4 000A                            STH,R6   10,B4

     1270     6497    4      Y_CLTICM.T1.R1.ICMRPY = %Y#NORESP;

   6497   3 0006D0  6C26                                 LDV,R6   38
          3 0006D1  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0006D4  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 0006D6       00FF

     1271     6498
     1272     6499    4      RETURN;

   6499   3 0006D7  ECC7 0030                            LDB,B6   @CON+2,AUTO
          3 0006D9  C3C6 0001                            LNJ,B4   1,B6

     1273     6500
     1274     6501    4   END Y$IOER;
     1275     6502
     1276     6503    3   END EXECUTE_TEST;
     1277     6504
     1278     6505        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:189  
     1279     6506        /*I*  NAME:        TERMINATE_TEST
     1280     6507              PURPOSE:     Terminate specified FEP COLTS test
     1281     6508              CALL:        CALL TERMINATE_TEST;
     1282     6509                           Does not altreturn.
     1283     6510              INTERFACE:   This routine calls the following:
     1284     6511                            Y$TRMTST
     1285     6512              DATA:        Uses data in ICM buffer (pointer ICM$).
     1286     6513              DESCRIPTION: Extracts the channel number and test
     1287     6514                           number from the ICM data and then calls
     1288     6515                           Y$TRMTST to terminate this test.
     1289     6516                           Places proper reply code in ICM data.
     1290     6517        */
     1291     6518        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:190  
     1292     6519    2   TERMINATE_TEST: PROC ALTRET;

   6519   3 0006DB  EFC7 0008            TERMINATE_TEST  STB,B6   CHAD+1,AUTO

     1293     6520
     1294     6521    3      DCL TNUM UBIN BYTE ALIGNED;
     1295     6522    3      DCL CHAD BIT(16) ALIGNED;
     1296     6523
     1297     6524    3      TNUM = Y_CLTICM.T1.R1.TSTIND;

   6524   3 0006DD  DC80 0000 00A9  00                   LDB,B5   ICM$
          3 0006E0  E2C5 0003                            LLH,R6   3,B5
          3 0006E2  E7C7 000A                            STH,R6   TNUM,AUTO

     1298     6525    3      CHAD = Y_CLTICM.T1.R1.CHNLNR;

   6525   3 0006E4  E845 0005                            LDR,R6   5,B5
          3 0006E6  EF47 000B                            STR,R6   CHAD,AUTO

     1299     6526
     1300     6527    3      CALL Y$TRMTST (TNUM,CHAD);

   6527   3 0006E8  CBC7 000B                            LAB,B4   CHAD,AUTO
          3 0006EA  CFC7 0010                            STB,B4   ITEM,AUTO
          3 0006EC  BBC7 000A                            LAB,B3   TNUM,AUTO
          3 0006EE  BFC7 000E                            STB,B3   BUF2$,AUTO
          3 0006F0  E3C0 0068                            LNJ,B6   s:0,PREL
          3 0006F2       0001                            DC       s:6529,PREL

     1301     6528
     1302     6529    3      IF Y_FLAGS.NOSUCHTST = %G_OFF#

   6529   3 0006F3  8980 0000 0097  00                   CMZ      Y_FLAGS
          3 0006F6  0801 000A                            BAL      s:6534,PREL

     1303     6530    3      THEN
     1304     6531    3         Y_CLTICM.T1.R1.ICMRPY = %Y#OPCOMP;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:191  

   6531   3 0006F8  6C21                                 LDV,R6   33
          3 0006F9  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 0006FC  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 0006FE       00FF
          3 0006FF  0F81 0012                            B        s:6539,PREL

     1305     6532
     1306     6533    4      ELSE DO;

     1307     6534    4              Y_CLTICM.T1.IFLAGS.NOTEST = %G_ON#;

   6534   3 000701  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 000704  8946 0008                            LBT,'0020'X       8,B6
          3 000706       0020

     1308     6535    4              Y_CLTICM.T1.R1.ICMRPY = %Y#INVICM;

   6535   3 000707  6C22                                 LDV,R6   34
          3 000708  EC80 0000 00A9  00                   LDB,B6   ICM$
          3 00070B  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          3 00070D       00FF

     1309     6536    4              Y_FLAGS.NOSUCHTST = %G_OFF#;

   6536   3 00070E  8800 0000 0097  00                   LBF,'8000'X       Y_FLAGS
   6536   3 000711       8000

     1310     6537    4           END;

     1311     6538
     1312     6539    3      RETURN;

   6539   3 000712  ECC7 0008                            LDB,B6   CHAD+1,AUTO
          3 000714  C3C6 0001                            LNJ,B4   1,B6

     1313     6540
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:192  
     1314     6541    3   END TERMINATE_TEST;
     1315     6542
     1316     6543    2   END PROCESS_ICM;
     1317     6544
     1318     6545        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:193  
     1319     6546        /*I*  NAME:        WRAP_UP
     1320     6547              PURPOSE:     Terminate all FEP COLTS tests
     1321     6548              CALL:        CALL WRAP_UP;
     1322     6549                           Does not altreturn.
     1323     6550              INTERFACE:   This routine calls the following:
     1324     6551                            Y$TRMTST
     1325     6552              DATA:        Uses data in Active Test Table.
     1326     6553              DESCRIPTION: This routine successively extracts channel
     1327     6554                           number and test number information on each
     1328     6555                           active test from the Active Test Table.
     1329     6556                           It successively calls Y$TRMTST to terminate
     1330     6557                           each active test.
     1331     6558        */
     1332     6559        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:194  
     1333     6560    1   WRAP_UP: PROC ALTRET;

   6560   3 000716  EFC7 0004            WRAP_UP         STB,B6   +4,AUTO

     1334     6561
     1335     6562    2      DCL TNUM UBIN BYTE ALIGNED;
     1336     6563    2      DCL CHAD BIT(16) ALIGNED;
     1337     6564
     1338     6565    2      IF Y_TCOUNT > 0

   6565   3 000718  E280 0000 0098  00                   LLH,R6   Y_TCOUNT
          3 00071B  6901 0039                            BEZ,R6   s:6577,PREL

     1339     6566    3      THEN DO TNUM = 0 TO 7;

   6566   3 00071D  87C7 0006                            CLH      TNUM,AUTO

     1340     6567
     1341     6568    3              IF Y_TENTRY (TNUM)

   6568   3 00071F  EB80 0000 0000  00                   LAB,B6   GT_IO
          3 000722  B2C7 0006                            LLH,R3   TNUM,AUTO
          3 000724  3002                                 SOL,R3   2
          3 000725  DB80 0000 0000  04                   LAB,B5   0
          3 000728  5C01                                 LDV,R5   1
          3 000729  0022                                 ACM      ;
          3 00072A       4436 0099                                ALPHANUM(153,B6,R3,,4,FILL),;
          3 00072C       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          3 00072E  5381 001D                            CBE      s:6575,PREL

     1342     6569    4              THEN DO;

     1343     6570    4                      CHAD = Y_TENTRY.CHN(TNUM);

   6570   3 000730  A2C7 0006                            LLH,R2   TNUM,AUTO
          3 000732  2001                                 SOL,R2   1
          3 000733  E820 0000 0099  00                   LDR,R6   Y_TENTRY,R2
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:195  
          3 000736  EF47 0007                            STR,R6   CHAD,AUTO

     1344     6571    4                      CALL Y$TRMTST (TNUM,CHAD);

   6571   3 000738  EBC7 0007                            LAB,B6   CHAD,AUTO
          3 00073A  EFC7 0010                            STB,B6   ITEM,AUTO
          3 00073C  DBC7 0006                            LAB,B5   TNUM,AUTO
          3 00073E  DFC7 000E                            STB,B5   BUF2$,AUTO
          3 000740  E3C0 0018                            LNJ,B6   s:0,PREL
          3 000742       0001                            DC       s:6572,PREL

     1345     6572    4                      IF Y_TCOUNT = 0 THEN RETURN;

   6572   3 000743  E280 0000 0098  00                   LLH,R6   Y_TCOUNT
          3 000746  6981 0005                            BNEZ,R6  s:6575,PREL

   6572   3 000748  ECC7 0004                            LDB,B6   +4,AUTO
          3 00074A  C3C6 0001                            LNJ,B4   1,B6

     1346     6573    4                   END;
     1347     6574
     1348     6575    3           END;

   6575   3 00074C  E2C7 0006                            LLH,R6   TNUM,AUTO
          3 00074E  6E01                                 ADV,R6   1
          3 00074F  E7C7 0006                            STH,R6   TNUM,AUTO
          3 000751  E2C7 0006                            LLH,R6   TNUM,AUTO
          3 000753  6D07                                 CMV,R6   7
          3 000754  03CB                                 BLE      s:6568,SPREL

     1349     6576
     1350     6577    2      RETURN;

   6577   3 000755  ECC7 0004                            LDB,B6   +4,AUTO
          3 000757  C3C6 0001                            LNJ,B4   1,B6

     1351     6578
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:196  
     1352     6579    2   END WRAP_UP;
     1353     6580
     1354     6581        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:197  
     1355     6582        /*I*  NAME:        Y$TRMTST
     1356     6583              PURPOSE:     Terminate specified FEP COLTS test
     1357     6584              CALL:        CALL Y$TRMTST (TNUM, CHAD);
     1358     6585                           Does not altreturn.
     1359     6586              PARAMETERS:  TNUM is an INPUT parameter containing the index
     1360     6587                           number to the test's entry in the Active Test
     1361     6588                           Table.
     1362     6589                           CHAD is an INPUT parameter containing the channel
     1363     6590                           address for the test.
     1364     6591              INTERFACE:   This routine calls the following:
     1365     6592                            M$RCHAN
     1366     6593              DATA:        Operates on Active Test Table.
     1367     6594              DESCRIPTION: This routine clears the entry for the specified
     1368     6595                           test in the Active Test Table, clears the contents
     1369     6596                           of the associated temporary storage area, and
     1370     6597                           releases the MLCP line(s) from COLTS control.
     1371     6598                           The routine also sets a flag if there is an
     1372     6599                           altreturn from M$RCHAN.
     1373     6600        */
     1374     6601        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:198  
     1375     6602    1   Y$TRMTST: PROC (TNUM,CHAD) ALTRET;

   6602   3 000759  EFC7 000C            Y$TRMTST        STB,B6   RAMAD,AUTO

     1376     6603
     1377     6604    2      DCL TNUM UBIN BYTE ALIGNED;
     1378     6605    2      DCL ITEM UBIN WORD;
     1379     6606    2      DCL CHAD UBIN(16) ALIGNED;
     1380     6607
     1381     6608    2      IF Y_TENTRY.TYP(TNUM) = 12

   6608   3 00075B  DCC7 000E                            LDB,B5   @TNUM,AUTO
          3 00075D  B285                                 LLH,R3   ,B5
          3 00075E  3002                                 SOL,R3   2
          3 00075F  3E01                                 ADV,R3   1
          3 000760  E2B0 0000 009A  00                   LLH,R6   Y_TENTRY+1,R3
          3 000763  6D0C                                 CMV,R6   12
          3 000764  0981 0007                            BNE      s:6612,PREL

     1382     6609    2      THEN
     1383     6610    2         RELEASE_CHAN.V.CONTROLLER = '1'B;

   6610   3 000766  8900 0000 008B  00                   LBT,'8000'X       RELEASE_CHAN+4
   6610   3 000769       8000
          3 00076A  0F81 0005                            B        s:6614,PREL

     1384     6611    2      ELSE
     1385     6612    2         RELEASE_CHAN.V.CONTROLLER = '0'B;

   6612   3 00076C  8800 0000 008B  00                   LBF,'8000'X       RELEASE_CHAN+4
   6612   3 00076F       8000

     1386     6613
     1387     6614    2      Y_TENTRY(TNUM) = '0'B;

   6614   3 000770  B285                                 LLH,R3   ,B5
          3 000771  BF47 0034                            STR,R3   @FC+2,AUTO
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:199  
          3 000773  3001                                 SOL,R3   1
          3 000774  8730 0000 0099  00                   CL       Y_TENTRY,R3
          3 000777  B847 0034                            LDR,R3   @FC+2,AUTO
          3 000779  3001                                 SOL,R3   1
          3 00077A  8730 0000 009A  00                   CL       Y_TENTRY+1,R3

     1388     6615
     1389     6616    2      Y_DBUFSZ(TNUM) = 0;

   6616   3 00077D  A285                                 LLH,R2   ,B5
          3 00077E  8720 0000 00AC  00                   CL       Y_DBUFSZ,R2

     1390     6617
     1391     6618    3      DO ITEM = 0 TO 55;

   6618   3 000781  8747 0012                            CL       ITEM,AUTO

     1392     6619    3         Y_DBUF(TNUM * 56 + ITEM) = 0;

   6619   3 000783  ECC7 000E                            LDB,B6   @TNUM,AUTO
          3 000785  E286                                 LLH,R6   ,B6
          3 000786  6F38                                 MLV,R6   56
          3 000787  EA47 0012                            ADD,R6   ITEM,AUTO
          3 000789  B856                                 LDR,R3   R6
          3 00078A  8730 0000 00B4  00                   CL       Y_DBUF,R3

     1393     6620    3      END;

   6620   3 00078D  8AC7 0012                            INC      ITEM,AUTO
          3 00078F  E847 0012                            LDR,R6   ITEM,AUTO
          3 000791  6D37                                 CMV,R6   55
          3 000792  03F1                                 BLE      s:6619,SPREL

     1394     6621
     1395     6622    2      Y_TCOUNT = Y_TCOUNT - 1;

   6622   3 000793  D280 0000 0098  00                   LLH,R5   Y_TCOUNT
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:200  
          3 000796  5EFF                                 ADV,R5   -1
          3 000797  D780 0000 0098  00                   STH,R5   Y_TCOUNT

     1396     6623
     1397     6624    2      Y_FLAGS.NOSUCHTST = %G_OFF#;

   6624   3 00079A  8800 0000 0097  00                   LBF,'8000'X       Y_FLAGS
   6624   3 00079D       8000

     1398     6625
     1399     6626    2      RELEASE_CHAN.V.CHANNEL = CHAD;

   6626   3 00079E  DCC7 0010                            LDB,B5   @CHAD,AUTO
          3 0007A0  D805                                 LDR,R5   ,B5
          3 0007A1  DF00 0000 008A  00                   STR,R5   RELEASE_CHAN+3

     1400     6627
     1401     6628    2      CALL M$RCHAN (RELEASE_CHAN)

   6628   3 0007A4  BB80 0000 0087  00                   LAB,B3   RELEASE_CHAN
          3 0007A7  B870 0594                            LDR,R3   1428,IMO
          3 0007A9  0001                                 MCL
          3 0007AA       0003                            DC       s:6630,PREL
          3 0007AB  0F81 0005                            B        s:6633,PREL

     1402     6629    3      WHENALTRETURN DO;

     1403     6630    3              Y_FLAGS.NOSUCHTST = %G_ON#;

   6630   3 0007AD  8900 0000 0097  00                   LBT,'8000'X       Y_FLAGS
   6630   3 0007B0       8000

     1404     6631    3           END;

     1405     6632
     1406     6633    2      RETURN;

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:201  
   6633   3 0007B1  ECC7 000C                            LDB,B6   RAMAD,AUTO
          3 0007B3  C3C6 0001                            LNJ,B4   1,B6

     1407     6634
     1408     6635    2   END Y$TRMTST;
     1409     6636
     1410     6637    1   END GTC$MLCP_HNDLR;

   6637   3 0007B5  C380 0000 0000  xent                 LNJ,B4   X6A_MARET
     1411     6638
     1412     6639        %EJECT;
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:202  

PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:203  
--  Include file information  --

   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GT_CMN_E.:E05TOU  is referenced.
   GT_MACROS_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GTC$MLCP_HNDLR.
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:204  

 **** Variables and constants ****

  ****  Section 000  Data  GTC$MLCP_HNDLR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    8D-0-0/w STRC(160)   r     1 ACTIVATE_PRIV              7-0-0/w STRC(128)   r     1 CHAN_DATA
    6C-0-0/w STRC(256)   r     1 END_COLTS                 7C-0-0/w STRC(176)   r     1 GET_CHAN
    3E-0-0/w STRC(288)   r     1 GET_ICM                    0-0-0/w STRC(32)    r     1 GT_IO
     2-0-0/w STRC(80)    r     1 GT_IOLD                   A9-0-0/w PTR         r     1 ICM$
   274-0-0/w CHAR(512)   r     1 ICMDATA                  374-0-0/w BIT (32)    r     1 MSYS_PRIV
     F-0-0/w STRC(752)   r     1 OPEN_COLTS                87-0-0/w STRC(96)    r     1 RELEASE_CHAN
    AB-0-0/w UBIN(16)    r     1 SECS_DELAY                50-0-0/w STRC(288)   r     1 SEND_ICM
    62-0-0/w STRC(160)   r     1 WAIT_IO                   B4-0-0/w UBIN(16)    r     1 Y_DBUF(0:447)
    AC-0-0/w UBIN(16)    r     1 Y_DBUFSZ(0:7)
    97-0-0/w STRC(8)     r     1 Y_FLAGS                   98-0-0/b UBIN(8)     r     1 Y_TCOUNT
    99-0-0/w STRC(32)    r     1 Y_TENTRY(0:7)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    28-0-0/w PTR         r     1 @BOFS                     2A-0-0/w PTR         r     1 @BSIZ
    12-0-0/w PTR         r     1 @CH                       1A-0-0/w PTR         r     1 @CH
    22-0-0/w PTR         r     1 @CH                       1A-0-0/w PTR         r     1 @CH
    24-0-0/w PTR         r     1 @CH                       2A-0-0/w PTR         r     1 @CH
    10-0-0/w PTR         r     1 @CHAD                     2E-0-0/w PTR         r     1 @CON
     A-0-0/w PTR         r     1 @CS                       26-0-0/w PTR         r     1 @DP$
    2C-0-0/w PTR         r     1 @FC                       32-0-0/w PTR         r     1 @FC
    1C-0-0/w PTR         r     1 @RAD                      14-0-0/w PTR         r     1 @RAMAD
    24-0-0/w PTR         r     1 @STAT                     1C-0-0/w PTR         r     1 @STAT
     E-0-0/w PTR         r     1 @TNUM                     1E-0-0/w UBIN(16)    r     1 BOFS
    20-0-0/w UBIN(16)    r     1 BOFS                      *0-0-0/w UBIN(16)    r     1 BOFS
    21-0-0/w UBIN(16)    r     1 BSIZ                      *0-0-0/w UBIN(16)    r     1 BSIZ
     C-0-0/w PTR         r     1 BUF1$                      E-0-0/w PTR         r     1 BUF2$
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:205  
     D-0-0/w UBIN(10)    r     1 CH                         F-0-0/w UBIN(10)    r     1 CH
     D-0-0/w UBIN(10)    r     1 CH                         D-0-0/w UBIN(10)    r     1 CH
     D-0-0/w UBIN(10)    r     1 CH                        *0-0-0/w UBIN(10)    r     1 CH
    *0-0-0/w UBIN(10)    r     1 CH                        *0-0-0/w STRC(10)    r     1 CH
    *0-0-0/w UBIN(10)    r     1 CH                        *0-0-0/w UBIN(10)    r     1 CH
    *0-0-0/w UBIN(10)    r     1 CH                         A-0-0/w BIT (16)    r     1 CHAD
     B-0-0/w BIT (16)    r     1 CHAD                       7-0-0/w BIT (16)    r     1 CHAD
    *0-0-0/w UBIN(16)    r     1 CHAD                      15-0-0/w UBIN(16)    r     1 CHCON
    16-0-0/w STRC(16)    r     1 CHN                       12-0-0/w STRC(16)    r     1 CHN
    13-0-0/w UBIN(10)    r     1 CHN_C                     17-0-0/w UBIN(10)    r     1 CHN_CH
    18-0-0/w UBIN(6)     r     1 CHN_F                     14-0-0/w UBIN(6)     r     1 CHN_F
     6-0-0/w BIT (16)    r     1 CKS                       11-0-0/w UBIN(16)    r     1 CON
    *0-0-0/w UBIN(16)    r     1 CON                       10-0-0/w UBIN(16)    r     1 CONW
    12-0-0/w UBIN(16)    r     1 CONW                      10-0-0/w STRC(16)    r     1 CONX
    12-0-0/w STRC(16)    r     1 CONX                      *0-0-0/w BIT (16)    r     1 CS
    1C-0-0/w PTR         r     1 DP$                       *0-0-0/w PTR         r     1 DP$
    11-0-0/w UBIN(6)     r     1 FC                        13-0-0/w UBIN(6)     r     1 FC
    1E-0-0/w UBIN(6)     r     1 FC                        26-0-0/w UBIN(6)     r     1 FC
    2C-0-0/w UBIN(6)     r     1 FC                        *0-0-0/w UBIN(6)     r     1 FC
    *0-0-0/w UBIN(6)     r     1 FC                         D-0-0/w UBIN(16)    r     1 INX
     C-0-0/w UBIN(16)    r     1 INX                        C-0-0/w UBIN(8)     r     1 ITEM
     E-0-0/w UBIN(8)     r     1 ITEM                      14-0-0/w UBIN(16)    r     1 ITEM
    10-0-0/w UBIN(16)    r     1 ITEM                      1E-0-0/w UBIN(16)    r     1 ITEM
    12-0-0/w UBIN(16)    r     1 ITEM                       E-0-0/w UBIN(16)    r     1 NUMIO
     D-0-0/w UBIN(16)    r     1 NUMIO                     *0-0-0/w UBIN(16)    r     1 RAD
     C-0-0/w UBIN(16)    r     1 RAMAD                      E-0-0/w UBIN(16)    r     1 RAMAD
     C-0-0/w UBIN(16)    r     1 RAMAD                      C-0-0/w UBIN(16)    r     1 RAMAD
     C-0-0/w UBIN(16)    r     1 RAMAD                     *0-0-0/w UBIN(16)    r     1 RAMAD
    11-0-0/w UBIN(10)    r     1 RCHAN                      F-0-0/w BIT (16)    r     1 STAT
    16-0-0/w BIT (16)    r     1 STAT                      1F-0-0/w BIT (16)    r     1 STAT
    *0-0-0/w BIT (16)    r     1 STAT                      *0-0-0/w BIT (16)    r     1 STAT
     A-0-0/w UBIN(8)     r     1 TNUM                       6-0-0/w UBIN(8)     r     1 TNUM
    *0-0-0/w UBIN(8)     r     1 TNUM                      10-0-0/w UBIN(10)    r     1 XCHAN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:206  
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$COLTC                    0-0-0/w STRC(896)   r     1 Y_BUFTMP
     0-0-0/w STRC(4096)  r     1 Y_CLTICM


   Procedure GTC$MLCP_HNDLR requires 1976 words for executable code.
   Procedure GTC$MLCP_HNDLR requires 53 words of local(AUTO) storage.

    No errors detected in file GTC$MLCP_HNDLR.:E05TSI    .
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:207  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:208  
          MINI XREF LISTING

ACTIVATE_PRIV
      5312**DCL      5365<>CALL
ACTIVATE_PRIV.V
      5314**DCL      5314--DCLINIT
BADUN IN PROCEDURE Y$WRBLK
      6214**LABEL    6205--CALLALT  6209--CALLALT  6211--CALLALT
BAMO IN PROCEDURE Y$SWRDS
      6017**LABEL    6012--CALLALT
BEGONE
      5381**LABEL    5374--CALLALT  5377--CALLALT
BOFS IN PROCEDURE Y$BMW
      6242**DCL      6247<<ASSIGN   6249<>CALL
BOFS IN PROCEDURE Y$IOLD
      6415**DCL      6410--PROC     6421>>ASSIGN
BOFS IN PROCEDURE Y$XIOLD
      5932**DCL      5937<<ASSIGN   5941<<ASSIGN   5944<>CALL
BOP IN PROCEDURE Y$CKSTAT
      6383**LABEL    6376--CALLALT
BSIZ IN PROCEDURE Y$BMW
      6243**DCL      6248<<ASSIGN   6249<>CALL
BSIZ IN PROCEDURE Y$IOLD
      6416**DCL      6410--PROC     6422>>ASSIGN
BUF1$ IN PROCEDURE Y$XDATA
      5973**DCL      5979<<ASSIGN   5983>>ASSIGN
BUF2$ IN PROCEDURE Y$XDATA
      5975**DCL      5981<<ASSIGN   5983>>ASSIGN
CH IN PROCEDURE Y$BMW
      6239**DCL      6236--PROC     6246<<ASSIGN   6249<>CALL     6252<>CALL     6256<>CALL     6260<>CALL
CH IN PROCEDURE Y$BMWUP
      6084**DCL      6088<>CALL
CH IN PROCEDURE Y$CKSTAT
      6365**DCL      6361--PROC     6376<>CALL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:209  
CH IN PROCEDURE Y$DOIO
      6459**DCL      6457--PROC     6465>>ASSIGN
CH IN PROCEDURE Y$IOLD
      6412**DCL      6410--PROC     6420>>ASSIGN
CH IN PROCEDURE Y$PRCCP
      6138**DCL      6142<>CALL
CH IN PROCEDURE Y$PXCCP
      6166**DCL      6170<>CALL
CH IN PROCEDURE Y$RCCP
      5660**DCL      5664<>CALL     5698<>CALL     5704<>CALL
CH IN PROCEDURE Y$STATUS
      6290**DCL      6287--PROC     6298<>CALL
CH.X IN PROCEDURE Y$STATUS
      6292**DCL      6324>>IF
CH IN PROCEDURE Y$WRBLK
      6203**DCL      6199--PROC     6205<>CALL     6209<>CALL     6211<>CALL
CH IN PROCEDURE Y$XCCP
      5733**DCL      5737<>CALL     5771<>CALL     5777<>CALL
CHAD IN PROCEDURE START_TEST
      5488**DCL      5490<<ASSIGN   5538>>ASSIGN
CHAD IN PROCEDURE TERMINATE_TEST
      6522**DCL      6525<<ASSIGN   6527<>CALL
CHAD IN PROCEDURE WRAP_UP
      6563**DCL      6570<<ASSIGN   6571<>CALL
CHAD IN PROCEDURE Y$TRMTST
      6606**DCL      6602--PROC     6626>>ASSIGN
CHAN_DATA
      5103**DCL      5267--DCLINIT
CHCON IN PROCEDURE Y$XECIO
      5866**DCL      5878<<ASSIGN   5888<>CALL     5944<>CALL
CHN IN PROCEDURE Y$IOREAD
      6039**DCL      6048<<ASSIGN
CHN.C IN PROCEDURE Y$IOREAD
      6040**DCL      6049>>ASSIGN
CHN.F IN PROCEDURE Y$IOREAD
      6041**DCL      6050>>ASSIGN
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:210  
CHN IN PROCEDURE Y$XECIO
      5867**DCL      5879<<ASSIGN
CHN.C.X IN PROCEDURE Y$XECIO
      5871**DCL      5892>>IF       5934>>IF
CHN.CH IN PROCEDURE Y$XECIO
      5868**DCL      5869--REDEF    5880>>ASSIGN
CHN.F IN PROCEDURE Y$XECIO
      5872**DCL      5881>>ASSIGN   5883>>IF       5890>>IF       5908>>IF
CHN_C IN PROCEDURE Y$IOREAD
      6042**DCL      6049<<ASSIGN   6052<>CALL
CHN_CH IN PROCEDURE Y$XECIO
      5873**DCL      5880<<ASSIGN   5888<>CALL     5896>>ASSIGN   5901>>ASSIGN   5944<>CALL
CHN_F IN PROCEDURE Y$IOREAD
      6043**DCL      6050<<ASSIGN   6052<>CALL
CHN_F IN PROCEDURE Y$XECIO
      5874**DCL      5881<<ASSIGN   5888<>CALL
CKS IN PROCEDURE PROCESS_ICM
      5407**DCL      5409<>CALL     5411>>IF       5435<>CALL     5437>>ASSIGN
CON IN PROCEDURE Y$DOIO
      6461**DCL      6457--PROC     6464>>ASSIGN   6474<<ASSIGN
CON IN PROCEDURE Y$IOREAD
      6038**DCL      6047<<ASSIGN   6052<>CALL     6058>>ASSIGN
CONW IN PROCEDURE Y$WRLCT
      5690**DCL      5695<<ASSIGN   5698<>CALL     5700<<ASSIGN   5704<>CALL
CONW IN PROCEDURE Y$WXLCT
      5763**DCL      5768<<ASSIGN   5771<>CALL     5773<<ASSIGN   5777<>CALL
CONX IN PROCEDURE Y$WRLCT
      5687**DCL      5690--REDEF
CONX.L IN PROCEDURE Y$WRLCT
      5688**DCL      5701<<ASSIGN
CONX.R IN PROCEDURE Y$WRLCT
      5689**DCL      5696<<ASSIGN   5701>>ASSIGN   5702<<ASSIGN
CONX IN PROCEDURE Y$WXLCT
      5760**DCL      5763--REDEF
CONX.L IN PROCEDURE Y$WXLCT
      5761**DCL      5774<<ASSIGN
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:211  
CONX.R IN PROCEDURE Y$WXLCT
      5762**DCL      5769<<ASSIGN   5774>>ASSIGN   5775<<ASSIGN
CS IN PROCEDURE Y$CKSUM
      5458**DCL      5455--PROC     5460<<ASSIGN   5466<<ASSIGN   5466>>ASSIGN
DP$ IN PROCEDURE Y$IOLD
      6414**DCL      6410--PROC     6423>>ASSIGN
DP$ IN PROCEDURE Y$XIOLD
      5931**DCL      5936<<ASSIGN   5940<<ASSIGN   5944<>CALL
EGAD IN PROCEDURE Y$PRCCP
      6147**LABEL    6142--CALLALT
END_COLTS
      5241**DCL      5382<>CALL
END_COLTS.V
      5246**DCL      5243--DCLINIT
ERRIO IN PROCEDURE Y$WRLCT
      5709**LABEL    5698--CALLALT  5704--CALLALT
ERRIO IN PROCEDURE Y$WXLCT
      5782**LABEL    5771--CALLALT  5777--CALLALT
EXECUTE_TEST IN PROCEDURE PROCESS_ICM
      5606**PROC     5424--CALL
FC IN PROCEDURE Y$BMW
      6240**DCL      6251<<ASSIGN   6252<>CALL     6254<<ASSIGN   6256<>CALL     6258<<ASSIGN   6260<>CALL
FC IN PROCEDURE Y$DOIO
      6460**DCL      6457--PROC     6463>>ASSIGN   6470<>CALL
FC IN PROCEDURE Y$IOER
      6494**DCL      6492--PROC     6496>>ASSIGN
FC IN PROCEDURE Y$IOLD
      6413**DCL      6418<<ASSIGN   6428<>CALL
FC IN PROCEDURE Y$STATUS
      6293**DCL      6296<<ASSIGN   6298<>CALL
FC IN PROCEDURE Y$WRLCT
      5691**DCL      5693<<ASSIGN   5698<>CALL     5704<>CALL
FC IN PROCEDURE Y$WXLCT
      5764**DCL      5766<<ASSIGN   5771<>CALL     5777<>CALL
GET_CHAN
      5265**DCL      5574<>CALL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:212  
GET_CHAN.V
      5269**DCL      5267--DCLINIT
GET_CHAN.V.CHANNEL
      5269**DCL      5572<<ASSIGN
GET_CHAN.V.FLAGS.CONTROLLER
      5270**DCL      5568<<ASSIGN   5570<<ASSIGN
GET_ICM
      5159**DCL      5374<>CALL
GET_ICM.BUF_
      5161**DCL      5373<<ASSIGN
GET_ICM.V
      5164**DCL      5161--DCLINIT
GHH$IOLD
      5348**DCL-ENT  6425--CALL
GHH$IO_IN
      5349**DCL-ENT  6467--CALL
GOOF IN PROCEDURE Y$RCCP
      5671**LABEL    5664--CALLALT  5666--CALLALT
GOOF IN PROCEDURE Y$XCCP
      5744**LABEL    5737--CALLALT  5739--CALLALT
GOOP IN PROCEDURE Y$XECIO
      5915**LABEL    5885--CALLALT  5888--CALLALT
GT_IO
      5069**DCL      6467<>CALL
GT_IO.CAS.CHN
      5069**DCL      5069--REDEF    6465<<ASSIGN
GT_IO.CAS.FNC
      5070**DCL      6463<<ASSIGN
GT_IO.DAS
      5070**DCL      5071--REDEF    5072--REDEF
GT_IO.RANGE
      5071**DCL      6464<<ASSIGN   6474>>ASSIGN
GT_IOLD
      5085**DCL      6425<>CALL
GT_IOLD.BUF$
      5086**DCL      6423<<ASSIGN
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:213  
GT_IOLD.BUFSIZE
      5087**DCL      6422<<ASSIGN
GT_IOLD.BYTX
      5086**DCL      6421<<ASSIGN
GT_IOLD.CHN
      5085**DCL      5085--REDEF    6420<<ASSIGN
GT_IOLD.FNC
      5086**DCL      6418>>ASSIGN
ICM$
      5342**DCL      5022--IMP-PTR  5370<<ASSIGN   5376>>ASSIGN   5411>>IF       5414>>ASSIGN   5415>>ASSIGN
      5419>>DOCASE   5430>>ASSIGN   5431>>ASSIGN   5437>>ASSIGN   5462>>IF       5465>>DOINDEX  5466>>ASSIGN
      5490>>ASSIGN   5497>>IF       5499>>ASSIGN   5502>>ASSIGN   5508>>ASSIGN   5537>>ASSIGN   5539>>ASSIGN
      5547>>ASSIGN   5566>>IF       5572>>ASSIGN   5576>>ASSIGN   5608>>DOCASE   5637>>ASSIGN   5638>>ASSIGN
      5662>>ASSIGN   5668>>ASSIGN   5735>>ASSIGN   5741>>ASSIGN   5818>>ASSIGN   5844>>ASSIGN   5878>>ASSIGN
      5879>>ASSIGN   5934>>IF       5936>>ASSIGN   5940>>ASSIGN   5977>>ASSIGN   5979>>ASSIGN   5981>>ASSIGN
      5985>>ASSIGN   6010>>ASSIGN   6014>>ASSIGN   6047>>ASSIGN   6048>>ASSIGN   6057>>ASSIGN   6058>>ASSIGN
      6086>>ASSIGN   6090>>ASSIGN   6114>>ASSIGN   6114>>ASSIGN   6115>>ASSIGN   6115>>ASSIGN   6144>>ASSIGN
      6172>>ASSIGN   6245>>ASSIGN   6245>>ASSIGN   6246>>ASSIGN   6248>>ASSIGN   6249<>CALL     6326>>ASSIGN
      6328>>ASSIGN   6427>>ASSIGN   6469>>ASSIGN   6496>>ASSIGN   6497>>ASSIGN   6524>>ASSIGN   6525>>ASSIGN
      6531>>ASSIGN   6534>>ASSIGN   6535>>ASSIGN
ICMDATA
      5354**DCL      5161--DCLINIT  5191--DCLINIT  5370--ASSIGN
INX IN PROCEDURE Y$IOSTR
      5807**DCL      5817<<ASSIGN   5878>>ASSIGN   5879>>ASSIGN
INX IN PROCEDURE Y$SWRDS
      6005**DCL      6008<<ASSIGN   6047>>ASSIGN   6048>>ASSIGN   6057>>ASSIGN   6058>>ASSIGN
ITEM IN PROCEDURE Y$CKSTAT
      6363**DCL      6368<<DOINDEX
ITEM IN PROCEDURE Y$CKSUM
      5457**DCL      5465<<DOINDEX  5466>>ASSIGN
ITEM IN PROCEDURE Y$GETLIN
      5530**DCL      5533<<DOINDEX  5535>>IF       5537>>ASSIGN   5538>>ASSIGN   5539>>ASSIGN
ITEM IN PROCEDURE Y$IOREAD
      6037**DCL      6045<<DOINDEX  6047>>ASSIGN   6048>>ASSIGN   6057>>ASSIGN   6058>>ASSIGN
ITEM IN PROCEDURE Y$TRMTST
      6605**DCL      6618<<DOINDEX  6619>>ASSIGN
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:214  
ITEM IN PROCEDURE Y$XECIO
      5865**DCL      5876<<DOINDEX  5878>>ASSIGN   5879>>ASSIGN
M$CLOSE
      4665**DCL-ENT  5382--CALL
M$EXIT
      4643**DCL-ENT  5385--CALL
M$GCHAN
      4677**DCL-ENT  5574--CALL
M$OPEN
      4665**DCL-ENT  5368--CALL
M$RCHAN
      4678**DCL-ENT  6628--CALL
M$READ
      4665**DCL-ENT  5374--CALL
M$SPRIV
      4654**DCL-ENT  5365--CALL
M$SYS
      4640**DCL-ENT  5366--CALL
M$WAIT
      4649**DCL-ENT  5825--CALL     6207--CALL     6375--CALL
M$WRITE
      4666**DCL-ENT  5377--CALL
MSYS_PRIV
      5356**DCL      5314--DCLINIT  5364<<ASSIGN
NUMIO IN PROCEDURE Y$IOSTR
      5808**DCL      5818<<ASSIGN   5876>>DOINDEX
NUMIO IN PROCEDURE Y$SWRDS
      6006**DCL      6010<<ASSIGN   6045>>DOINDEX
OPEN_COLTS
      5127**DCL      5368<>CALL
OPEN_COLTS.V
      5135**DCL      5129--DCLINIT
PLOP IN PROCEDURE Y$IOSTR
      5847**LABEL    5819--CALLALT  5831--CALLALT  5832--CALLALT  5839--CALLALT  5840--CALLALT
PROCESS_ICM
      5405**PROC     5375--CALL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:215  
RAD IN PROCEDURE Y$BMW
      6238**DCL      6236--PROC     6252<>CALL
RAMAD IN PROCEDURE Y$BMWUP
      6083**DCL      6086<<ASSIGN   6088<>CALL
RAMAD IN PROCEDURE Y$PRCCP
      6137**DCL      6140<<ASSIGN   6142<>CALL
RAMAD IN PROCEDURE Y$PXCCP
      6165**DCL      6168<<ASSIGN   6170<>CALL
RAMAD IN PROCEDURE Y$RCCP
      5659**DCL      5662<<ASSIGN   5664<>CALL
RAMAD IN PROCEDURE Y$WRBLK
      6201**DCL      6199--PROC     6205<>CALL
RAMAD IN PROCEDURE Y$XCCP
      5732**DCL      5735<<ASSIGN   5737<>CALL
RCHAN IN PROCEDURE Y$IOSTR
      5811**DCL      5816<<ASSIGN   5839<>CALL     5840<>CALL     5901<<ASSIGN
RELEASE_CHAN
      5289**DCL      6628<>CALL
RELEASE_CHAN.V
      5293**DCL      5291--DCLINIT
RELEASE_CHAN.V.CHANNEL
      5293**DCL      6626<<ASSIGN
RELEASE_CHAN.V.CONTROLLER
      5293**DCL      6610<<ASSIGN   6612<<ASSIGN
SECS_DELAY
      5344**DCL      5218--DCLINIT
SEND_ICM
      5189**DCL      5377<>CALL
SEND_ICM.BUF_
      5191**DCL      5376<<ASSIGN
SEND_ICM.V
      5194**DCL      5191--DCLINIT
SHAZAM IN PROCEDURE Y$BMWUP
      6093**LABEL    6088--CALLALT
SOLONG
      5385**LABEL    5365--CALLALT  5366--CALLALT  5368--CALLALT
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:216  
START_TEST IN PROCEDURE PROCESS_ICM
      5486**PROC     5421--CALL
STAT IN PROCEDURE Y$BMW
      6241**DCL      6255<<ASSIGN   6256<>CALL     6259<<ASSIGN   6260<>CALL
STAT IN PROCEDURE Y$CKSTAT
      6364**DCL      6361--PROC     6370>>IF       6376<>CALL
STAT IN PROCEDURE Y$IOSTR
      5809**DCL      5831<>CALL     5832<>CALL     5839<>CALL     5840<>CALL
STAT IN PROCEDURE Y$STATUS
      6289**DCL      6287--PROC     6295<<ASSIGN   6298<>CALL     6326>>ASSIGN   6328>>ASSIGN
STAT IN PROCEDURE Y$WRBLK
      6202**DCL      6209<>CALL     6211<>CALL
TERMINATE_TEST IN PROCEDURE PROCESS_ICM
      6519**PROC     5427--CALL
TNUM IN PROCEDURE TERMINATE_TEST
      6521**DCL      6524<<ASSIGN   6527<>CALL
TNUM IN PROCEDURE WRAP_UP
      6562**DCL      6566<<DOINDEX  6568>>IF       6570>>ASSIGN   6571<>CALL
TNUM IN PROCEDURE Y$TRMTST
      6604**DCL      6602--PROC     6608>>IF       6614>>ASSIGN   6616>>ASSIGN   6619>>ASSIGN
WAIT_IO
      5215**DCL      5825<>CALL     6207<>CALL     6375<>CALL
WAIT_IO.V
      5219**DCL      5218--DCLINIT
WRAP_UP
      6560**PROC     5381--CALL
XCHAN IN PROCEDURE Y$IOSTR
      5810**DCL      5815<<ASSIGN   5831<>CALL     5832<>CALL     5896<<ASSIGN
Y$ALLOC IN PROCEDURE START_TEST
      5564**PROC     5494--CALL
Y$BMW IN PROCEDURE EXECUTE_TEST
      6236**PROC     6205--CALL
Y$BMWUP IN PROCEDURE EXECUTE_TEST
      6081**PROC     5625--CALL
Y$CKSTAT IN PROCEDURE EXECUTE_TEST
      6361**PROC     5832--CALL     5840--CALL     6211--CALL
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:217  
Y$CKSUM IN PROCEDURE PROCESS_ICM
      5455**PROC     5409--CALL     5435--CALL
Y$DOIO IN PROCEDURE EXECUTE_TEST
      6457**PROC     5698--CALL     5704--CALL     5771--CALL     5777--CALL     5888--CALL     6052--CALL
      6252--CALL     6256--CALL     6260--CALL     6298--CALL
Y$GETLIN IN PROCEDURE START_TEST
      5528**PROC     5492--CALL
Y$IOER IN PROCEDURE EXECUTE_TEST
      6492**PROC     6428--CALL     6470--CALL
Y$IOLD IN PROCEDURE EXECUTE_TEST
      6410**PROC     5944--CALL     6249--CALL
Y$IOREAD IN PROCEDURE Y$SWRDS
      6035**PROC     6012--CALL
Y$IOSTR IN PROCEDURE EXECUTE_TEST
      5804**PROC     5616--CALL
Y$PRCCP IN PROCEDURE EXECUTE_TEST
      6135**PROC     5631--CALL
Y$PXCCP IN PROCEDURE EXECUTE_TEST
      6163**PROC     5634--CALL
Y$RCCP IN PROCEDURE EXECUTE_TEST
      5657**PROC     5610--CALL
Y$SAVSTT IN PROCEDURE Y$STATUS
      6322**PROC     6300--CALL     6304--CALL
Y$STATUS IN PROCEDURE EXECUTE_TEST
      6287**PROC     5831--CALL     5839--CALL     6209--CALL     6376--CALL
Y$SWRDS IN PROCEDURE EXECUTE_TEST
      6003**PROC     5622--CALL
Y$TRMTST
      6602**PROC     6527--CALL     6571--CALL
Y$WRBLK IN PROCEDURE EXECUTE_TEST
      6199**PROC     5664--CALL     5737--CALL     6088--CALL     6142--CALL     6170--CALL
Y$WRLCT IN PROCEDURE Y$RCCP
      5685**PROC     5666--CALL
Y$WXLCT IN PROCEDURE Y$XCCP
      5758**PROC     5739--CALL
Y$XCCP IN PROCEDURE EXECUTE_TEST
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:218  
      5730**PROC     5613--CALL     6117--CALL
Y$XDATA IN PROCEDURE EXECUTE_TEST
      5968**PROC     5619--CALL
Y$XECIO IN PROCEDURE Y$IOSTR
      5863**PROC     5819--CALL
Y$XEDAT IN PROCEDURE EXECUTE_TEST
      6112**PROC     5628--CALL
Y$XIOLD IN PROCEDURE Y$XECIO
      5929**PROC     5885--CALL
Y_BUFTMP IN PROCEDURE Y$XDATA
      5970**DCL      5983<<ASSIGN   5983>>ASSIGN
Y_CLTICM.T1
      5026**DCL      5053--REDEF
Y_CLTICM.T1.DISCID
      5027**DCL      5029--REDEF
Y_CLTICM.T1.EXTCFG
      5040**DCL      5608>>DOCASE
Y_CLTICM.T1.IFLAGS.BADCKS
      5043**DCL      5414<<ASSIGN
Y_CLTICM.T1.IFLAGS.BADCOM
      5044**DCL      5430<<ASSIGN   5637<<ASSIGN
Y_CLTICM.T1.IFLAGS.DVBUSY
      5046**DCL      5497>>IF       5547<<ASSIGN   5576<<ASSIGN
Y_CLTICM.T1.IFLAGS.IONAK
      5050**DCL      6427<<ASSIGN   6469<<ASSIGN
Y_CLTICM.T1.IFLAGS.NOTEST
      5045**DCL      6534<<ASSIGN
Y_CLTICM.T1.R1.CHAN
      5038**DCL      5572>>ASSIGN
Y_CLTICM.T1.R1.CHNLNR
      5035**DCL      5038--REDEF    5490>>ASSIGN   6114<<ASSIGN   6114>>ASSIGN   6115<<ASSIGN   6115>>ASSIGN
      6245<<ASSIGN   6245>>ASSIGN   6525>>ASSIGN
Y_CLTICM.T1.R1.CHNLNR.CH
      5036**DCL      6246>>ASSIGN
Y_CLTICM.T1.R1.ICMCKS
      5030**DCL      5411>>IF       5437<<ASSIGN
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:219  
Y_CLTICM.T1.R1.ICMCOM
      5033**DCL      5419>>DOCASE
Y_CLTICM.T1.R1.ICMRPY
      5034**DCL      5415<<ASSIGN   5431<<ASSIGN   5499<<ASSIGN   5502<<ASSIGN   5638<<ASSIGN   5668<<ASSIGN
      5741<<ASSIGN   5844<<ASSIGN   5985<<ASSIGN   6014<<ASSIGN   6090<<ASSIGN   6144<<ASSIGN   6172<<ASSIGN
      6497<<ASSIGN   6531<<ASSIGN   6535<<ASSIGN
Y_CLTICM.T1.R1.ICMWDS
      5032**DCL      5376>>ASSIGN   5462>>IF       5465>>DOINDEX
Y_CLTICM.T1.R1.TSTIND
      5031**DCL      5508>>ASSIGN   5537<<ASSIGN   5934>>IF       5936>>ASSIGN   5977>>ASSIGN   5981>>ASSIGN
      6524>>ASSIGN
Y_CLTICM.T1.TSTDAT
      5052**DCL      5818>>ASSIGN   6010>>ASSIGN   6248>>ASSIGN   6496<<ASSIGN
Y_CLTICM.T1.TSTYPE
      5041**DCL      5539>>ASSIGN   5566>>IF
Y_CLTICM.T2.ICMTXT
      5055**DCL      5056--REDEF    5466>>ASSIGN   5879>>ASSIGN   6048>>ASSIGN   6326<<ASSIGN   6328<<ASSIGN
Y_CLTICM.T2.TEXT
      5056**DCL      5662>>ASSIGN   5735>>ASSIGN   5878>>ASSIGN   6047>>ASSIGN   6057<<ASSIGN   6058<<ASSIGN
      6086>>ASSIGN
Y_DBUF
      5352**DCL      5936--ASSIGN   5981--ASSIGN   6619<<ASSIGN
Y_DBUFSZ
      5351**DCL      5934>>IF       5977<<ASSIGN   6616<<ASSIGN
Y_FLAGS.CKRDY
      5327**DCL      5821>>IF       5824<<ASSIGN   5910<<ASSIGN
Y_FLAGS.NOATE
      5328**DCL      5503>>IF       5505<<ASSIGN   5546<<ASSIGN
Y_FLAGS.NOSUCHTST
      5326**DCL      6529>>IF       6536<<ASSIGN   6624<<ASSIGN   6630<<ASSIGN
Y_FLAGS.RCH
      5329**DCL      5814<<ASSIGN   5835>>IF       5838<<ASSIGN   5900<<ASSIGN
Y_FLAGS.XCH
      5330**DCL      5813<<ASSIGN   5827>>IF       5830<<ASSIGN   5895<<ASSIGN
Y_TCOUNT
      5333**DCL      5509<<ASSIGN   5509>>ASSIGN   5532>>IF       5540<<ASSIGN   5540>>ASSIGN   6565>>IF
PL6.E3A0      #001=GTC$MLCP_HNDLR File=GTC$MLCP_HNDLR.:E05TSI                    TUE 07/29/97 22:12 Page:220  
      6572>>IF       6622<<ASSIGN   6622>>ASSIGN
Y_TENTRY
      5335**DCL      5508<<ASSIGN   5535>>IF       6568>>IF       6614<<ASSIGN
Y_TENTRY.CHN
      5336**DCL      5538<<ASSIGN   6570>>ASSIGN
Y_TENTRY.TYP
      5340**DCL      5539<<ASSIGN   6608>>IF
ZONK IN PROCEDURE Y$BMW
      6265**LABEL    6249--CALLALT  6252--CALLALT  6256--CALLALT  6260--CALLALT
ZOUNDS IN PROCEDURE Y$PXCCP
      6175**LABEL    6170--CALLALT
