VERSION E05

PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:1    
        1        1        /*M* VXT$PASS2 - driver for LINKs second pass.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC  */
        8        8        VXT$PASS2: PROC;
        9        9
       10       10        %INCLUDE VX_INC_C;
       11    10726        %VX$NODE;

             10738    1   /*******************************************************************************
             10739    1   *                                                                              *
             10740    1   *                          VX$NODE                                                 *
             10741    1   *                                                                              *
             10742    1   *******************************************************************************/

             10758    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10759    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10760    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10761    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10762    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10763    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10764                              to list of file nodes for this node            */
             10765    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10766    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10766                  /* Head pointer to shared library list */
             10767    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10767                  /* Head pointer to list of shared libraries
             10768                                          which have been mapped to included libraries */
             10769    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10770    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10771    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10772    1         2 ADDR_START REDEF  ADDR_START_A,
             10773    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10774    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:2    
             10775    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10776    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10777    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10778    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10779    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10780    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10781    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10782    1         2 START_PAGE# REDEF START_PAGE#_A,
             10783    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10784    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10785    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10786    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10787    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10788    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10789    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10790    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10791    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10791                  /* Starting pointer for common sections for this node */
             10792    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10792                  /* Stopping pointer for common sections for this node */
             10793    1         2 L_START,
             10794    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10795    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10796    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10797    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10798    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10799    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10800    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10801    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10802    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10803    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10804    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10805    1         2 L_STOP,
             10806    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10807    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10808    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10809    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:3    
             10810    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10811    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10812    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10813    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10814    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10815    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10816    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10817    1         2 L_SIZE,
             10818    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10819    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10820    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10821    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10822    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10823    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10824    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10825    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10826    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10827    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10828    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10829    1         2 L_PREV_SIZE,
             10830    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10831    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10832    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10833    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10834    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10835    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10836    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10837    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10838    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10839    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10840    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10841    1         2 BIT_MAP                ALIGNED,
             10842    1           3 DATA                  ALIGNED,
             10843    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10844    1           3 RPROC                 ALIGNED,
             10845    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10846    1           3 ROS                   ALIGNED,
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:4    
             10847    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10848    1         2 L_SC_START,
             10849    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10850    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10851    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10852    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10853    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10854    1         2 L_SC_STOP,
             10855    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10856    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10857    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10858    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10859    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10860    1         2 PROMOTE_HEAD,
             10861    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10862    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10863    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10864    1         2 PROMOTE_TAIL,
             10865    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10866    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10867    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10868    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10869    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10870    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10871    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10872    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       12    10876        %SET LISTMAC='1'B;
       13    10877        %SET LISTEXP='1'B;
       14    10878        %SET LISTSUB='1'B;
       15    10879        %B$TREE_TABLE(HDR_NAME=VX$TREE_HEADER,NODE_NAME=VX$TREE_NODE);
             10880    1   DCL 1 VX$TREE_HEADER BASED ALIGNED,
             10881              /*K*  HDR_NAME is the Tree table header.  */
             10882    1         2 NODES UBIN HALF UNAL,
             10883                /*K*  NODES is the number of nodes in the tree table.  */
             10884    1         2 SIZE UBIN HALF UNAL,
             10885                /*K*  SIZE is the total word size of the tree table
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:5    
             10886                      (HDR + NODES + TEST pool).   */
             10887    1         2 LIB$ PTR,
             10888                /*K*  LIB$ is the pointer to the name of the shared library
             10889                      currently associated.  */
             10890    1         2 PRECSIZE UBIN HALF UNAL,
             10891                /*K*  PRECSIZE  is the maximum program record size in the
             10892                      Run Unit (from the Head record).  */
             10893    1         2 MAX_LIB_DATA UBIN HALF UNAL;
             10894                /*K*  MAX_LIB_DATA is the maximum reserved in the program
             10895                      image for the shared library data.  */
             10896    1   DCL 1 VX$TREE_NODE BASED ALIGNED,
             10897              /*K*  NODE_NAME is the node specification.  */
             10898    1         2 NAME$ PTR,
             10899                /*K*  NAME$ is the pointer to the name of the node.  */
             10900    1         2 FLGS,
             10901                /*K*  FLGS are control flags used by M$OLAY.  */
             10902    1           3 NOW_IN BIT(1) UNAL,
             10903                  /*K*  NOW_IN is set if this node is now in memory.  */
             10904    1           3 WAS_IN BIT(1) UNAL,
             10905                  /*K*  WAS_IN is set if this node was in memory.  */
             10906    1           3 * BIT(7) UNAL,
             10907                  /*K*  * is reserved for future use and must be zero.  */
             10908    1         2 AFLGS,
             10909                /*K*  AFLGS are access flags.  */
             10910    1           3 * BIT(6) UNAL,
             10911                  /*K*  * is reserved for future use and must be zero.  */
             10912    1           3 NOPATH BIT(1) UNAL,
             10913                  /*K*  NOPATH is set if this node is independently loaded
             10914                        (no backward path).  */
             10915    1           3 ENTER BIT(1) UNAL,
             10916                  /*K*  ENTER is set if ENTRY$ is valid.  */
             10917    1           3 CANCEL BIT(1) UNAL,
             10918                  /*K*  CANCEL is set if the overlay was removed by
             10919                        "CANCEL=YES".   */
             10920    1         2 BACK# SBIN HALF UNAL,
             10921                /*K*  BACK# is the backward link (parent).  */
             10922    1         2 FORWARD# SBIN HALF UNAL,
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:6    
             10923                /*K*  FORWARD# is the forward link (daughter).  */
             10924    1         2 OVERLAY# SBIN HALF UNAL,
             10925                /*K*  OVERLAY# is the overlay link (same level).   */
             10926    1         2 PADDR UBIN HALF UNAL,
             10927                /*K*  PADDR is the address of procedure.  */
             10928    1         2 PSIZE UBIN HALF UNAL,
             10929                /*K*  PSIZE is the size of procedure.  */
             10930    1         2 DADDR UBIN HALF UNAL,
             10931                /*K*  DADDR is the address of data.  */
             10932    1         2 DSIZE UBIN HALF UNAL,
             10933                /*K*  DSIZE is the size of data.  */
             10934    1         2 ENTRY$ EPTR;
             10935                /*K*  ENTRY$ is the overlay entry point (see ENTER).  */
       16    10937        %VX$DCB;
             10938        %BANNER( ARG=VX$DCB );
             10939        %LSET LISTDIR='0'B;

             10946    1   /*******************************************************************************
             10947    1   *                                                                              *
             10948    1   *                          VX$DCB                                                 *
             10949    1   *                                                                              *
             10950    1   *******************************************************************************/

             10954        %LIST;
             10955    1   DCL 1 VX$DCB                       ALIGNED   BASED,
             10956    1         2 * CHAR( VX_DCB_SIZEC);
             10957        /* End of actual DCB; now for NAME: Just one word in this description */
             10958        /* Dcb name description */
             10959    1   DCL 1 VX$DCB$T$C                   ALIGNED   BASED,
             10960    1         2 LOGICAL_DCB_NUM             UBIN(3)   UNAL,
             10961    1         2 INT                         BIT(1)    UNAL,      /* '1'=> no relocation
             10962                                                                        '0' => relocation */
             10963    1         2 COUNT                       UBIN(5)   UNAL,
             10964    1         2 CHARS                       CHAR( VX$DCB$T$C.COUNT ) UNAL;
       17    10966        %E;
             10967        %LSET LISTDIR='0'B;

PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:7    
             10974    1   /*******************************************************************************
             10975    1   *                                                                              *
             10976    1   *                          ENTRY                                                 *
             10977    1   *                                                                              *
             10978    1   *******************************************************************************/

       18    10982        %ENTRIES;
             10983    1   DCL VXE$ERROR       ENTRY(4);
             10984    1   DCL VXE$ERR         ENTRY(3);
             10985    1   DCL VXE$MERC        ENTRY;
             10986    1   DCL VXE$ERRMSG      ENTRY(3);
             10987    1   DCL VXR$READ        ENTRY( 3 );
             10988    1   DCL VXW$WRITE       ENTRY( 3 );
             10989    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             10990    1   DCL VXD$B2C         ENTRY( 5 );
             10991    1   DCL VXD$C2B         ENTRY( 3 );
             10992    1   DCL VXA$GET         ENTRY( 3 );
             10993    1   DCL VXF$FREE        ENTRY( 3 );
             10994    1   DCL VXQ$SORT        ENTRY( 7 );
             10995    1   DCL VXY$YESNO       ENTRY( 1 );
       19    10997    1   DCL VXT$PROC             ENTRY;
       20    10998    1   DCL VXU$UNSAT            ENTRY;
       21    10999        %PTR;
             11000        %LSET LISTDIR='0'B;

             11007    1   /*******************************************************************************
             11008    1   *                                                                              *
             11009    1   *                          PTR                                                 *
             11010    1   *                                                                              *
             11011    1   *******************************************************************************/

       22    11015    1   DCL PATH_CURR$           PTR       ALIGNED   AUTO;
       23    11016        %U;
             11017        %LSET LISTDIR='0'B;

             11024    1   /*******************************************************************************
             11025    1   *                                                                              *
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:8    
             11026    1   *                          UBIN                                                 *
             11027    1   *                                                                              *
             11028    1   *******************************************************************************/

       24    11032        %INDEX;
             11033    1   DCL I          UBIN(36) ALIGNED AUTO;
             11034    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11035    1   DCL J          UBIN(36) ALIGNED AUTO;
             11036    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11037    1   DCL K          UBIN(36) ALIGNED AUTO;
             11038    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11039    1   DCL L          UBIN(36) ALIGNED AUTO;
             11040    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       25    11042        %PLIST;
       26    11043        %EJECT;
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:9    
       27    11044    1         VX_STATE# = 2/*@ALLOCATING*/;
       28    11045    1         VX_CURR$ = VX_ROOT$;
       29    11046    1   DEPTH:;
       30    11047    2         DO WHILE( VX_CURR$ -> VX$NODE.SON$ ~= ADDR(NIL) );
       31    11048    2             VX_CURR$ = VX_CURR$ -> VX$NODE.SON$;
       32    11049    2            END;
       33    11050    1   PROCESS:;                               /* Process the node */
       34    11051    2         DO I = 0 TO SIZEW( VX_PASS2_REF.UNSAT.PAGE#_A ) - 1;
       35    11052    2             VX_PASS2_REF.UNSAT.PAGE#_A(I) = 0;
       36    11053    2            END;
       37    11054    1         VX_PASS2_REF.UNSAT.PREV_RN_SIZE = 0;
       38    11055    1         VX_REF_EXPONENTIAL_SWITCH = '0'B/*@FALSE_B*/;
       39    11056    1         PATH_CURR$ = VX_CURR$;
       40    11057    1         PATH_CURR$ -> VX$NODE.PATH$ = ADDR(NIL);
       41    11058    2         DO WHILE( PATH_CURR$ -> VX$NODE.FATHER$ ~= ADDR(NIL) );
       42    11059    2             PATH_CURR$ -> VX$NODE.FATHER$ -> VX$NODE.PATH$ = PATH_CURR$;
       43    11060    2             PATH_CURR$ = PATH_CURR$ -> VX$NODE.FATHER$;
       44    11061    2            END;
       45    11062    1         CALL VXT$PROC;
       46    11063    1         IF VX_PASS2_REF.UNSAT.L_START.ER$ ~= ADDR(NIL)
       47    11064    1                 OR
       48    11065    1                 VX_PASS2_REF.UNSAT.L_START.DR$ ~= ADDR(NIL)
       49    11066    1                 OR
       50    11067    1                 VX_PASS2_REF.UNSAT.L_START.SR$ ~= ADDR(NIL)
       51    11068    1         THEN CALL VXU$UNSAT;
       52    11069    2         IF VX_CURR$ -> VX$NODE.BROTHER$ ~= ADDR(NIL) THEN DO; /* Move horizontially */
       53    11070    2             VX_CURR$ = VX_CURR$ -> VX$NODE.BROTHER$;
       54    11071    2             GOTO DEPTH;
       55    11072    2            END;
       56    11073    2         ELSE DO;                          /* Move back up */
       57    11074    2             VX_CURR$ = VX_CURR$ -> VX$NODE.FATHER$;
       58    11075    2             IF VX_CURR$ ~= ADDR(NIL) THEN GOTO PROCESS;
       59    11076    2            END;
       60    11077    1         VX_STATE# = 0;    /* This is the no state. Break routine does nothing */
       61    11078    1   END VXT$PASS2;

PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:10   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXT$PASS2.

   Procedure VXT$PASS2 requires 69 words for executable code.
   Procedure VXT$PASS2 requires 8 words of local(AUTO) storage.

    No errors detected in file VXT$PASS2.:E05TSI    .

PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:11   

 Object Unit name= VXT$PASS2                                  File name= VXT$PASS2.:E05TOU
 UTS= JUL 30 '97 08:40:23.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Proc  even  none    69    105  VXT$PASS2

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  VXT$PASS2

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 VXT$PROC
         yes           Std       0 VXU$UNSAT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:12   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_OU_HEAD                            VX_ROOT$
     VX_CURR$                              VX_ERRORS                             VX_PASS2_REF
     VX_REF_EXPONENTIAL_SWITCH             VX_STATE#                             VX_DCB_SIZEC
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:13   


        1        1        /*M* VXT$PASS2 - driver for LINKs second pass.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC  */
        8        8        VXT$PASS2: PROC;

      8  2 000000   000000 700200 xent  VXT$PASS2    TSX0  ! X66_AUTO_0
         2 000001   000010 000000                    ZERO    8,0

        9        9
       10       10        %INCLUDE VX_INC_C;
       11    10726        %VX$NODE;

             10738    1   /*******************************************************************************
             10739    1   *                                                                              *
             10740    1   *                          VX$NODE                                                *
             10741    1   *                                                                              *
             10742    1   *******************************************************************************/

             10758    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10759    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10760    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10761    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10762    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10763    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10764                              to list of file nodes for this node            */
             10765    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10766    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10766                  /* Head pointer to shared library list */
             10767    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10767                  /* Head pointer to list of shared libraries
             10768                                          which have been mapped to included libraries */
             10769    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:14   
             10770    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10771    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10772    1         2 ADDR_START REDEF  ADDR_START_A,
             10773    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10774    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10775    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10776    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10777    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10778    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10779    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10780    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10781    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10782    1         2 START_PAGE# REDEF START_PAGE#_A,
             10783    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10784    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10785    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10786    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10787    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10788    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10789    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10790    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10791    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10791                  /* Starting pointer for common sections for this node */
             10792    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10792                  /* Stopping pointer for common sections for this node */
             10793    1         2 L_START,
             10794    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10795    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10796    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10797    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10798    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10799    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10800    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10801    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10802    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10803    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10804    1         2 L_START_A$(0:9)     REDEF L_START PTR,
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:15   
             10805    1         2 L_STOP,
             10806    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10807    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10808    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10809    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10810    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10811    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10812    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10813    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10814    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10815    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10816    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10817    1         2 L_SIZE,
             10818    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10819    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10820    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10821    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10822    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10823    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10824    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10825    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10826    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10827    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10828    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10829    1         2 L_PREV_SIZE,
             10830    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10831    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10832    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10833    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10834    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10835    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10836    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10837    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10838    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10839    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10840    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10841    1         2 BIT_MAP                ALIGNED,
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:16   
             10842    1           3 DATA                  ALIGNED,
             10843    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10844    1           3 RPROC                 ALIGNED,
             10845    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10846    1           3 ROS                   ALIGNED,
             10847    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10848    1         2 L_SC_START,
             10849    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10850    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10851    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10852    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10853    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10854    1         2 L_SC_STOP,
             10855    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10856    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10857    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10858    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10859    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10860    1         2 PROMOTE_HEAD,
             10861    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10862    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10863    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10864    1         2 PROMOTE_TAIL,
             10865    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10866    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10867    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10868    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10869    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10870    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10871    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10872    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       12    10876        %SET LISTMAC='1'B;
       13    10877        %SET LISTEXP='1'B;
       14    10878        %SET LISTSUB='1'B;
       15    10879        %B$TREE_TABLE(HDR_NAME=VX$TREE_HEADER,NODE_NAME=VX$TREE_NODE);
             10880    1   DCL 1 VX$TREE_HEADER BASED ALIGNED,
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:17   
             10881              /*K*  HDR_NAME is the Tree table header.  */
             10882    1         2 NODES UBIN HALF UNAL,
             10883                /*K*  NODES is the number of nodes in the tree table.  */
             10884    1         2 SIZE UBIN HALF UNAL,
             10885                /*K*  SIZE is the total word size of the tree table
             10886                      (HDR + NODES + TEST pool).   */
             10887    1         2 LIB$ PTR,
             10888                /*K*  LIB$ is the pointer to the name of the shared library
             10889                      currently associated.  */
             10890    1         2 PRECSIZE UBIN HALF UNAL,
             10891                /*K*  PRECSIZE  is the maximum program record size in the
             10892                      Run Unit (from the Head record).  */
             10893    1         2 MAX_LIB_DATA UBIN HALF UNAL;
             10894                /*K*  MAX_LIB_DATA is the maximum reserved in the program
             10895                      image for the shared library data.  */
             10896    1   DCL 1 VX$TREE_NODE BASED ALIGNED,
             10897              /*K*  NODE_NAME is the node specification.  */
             10898    1         2 NAME$ PTR,
             10899                /*K*  NAME$ is the pointer to the name of the node.  */
             10900    1         2 FLGS,
             10901                /*K*  FLGS are control flags used by M$OLAY.  */
             10902    1           3 NOW_IN BIT(1) UNAL,
             10903                  /*K*  NOW_IN is set if this node is now in memory.  */
             10904    1           3 WAS_IN BIT(1) UNAL,
             10905                  /*K*  WAS_IN is set if this node was in memory.  */
             10906    1           3 * BIT(7) UNAL,
             10907                  /*K*  * is reserved for future use and must be zero.  */
             10908    1         2 AFLGS,
             10909                /*K*  AFLGS are access flags.  */
             10910    1           3 * BIT(6) UNAL,
             10911                  /*K*  * is reserved for future use and must be zero.  */
             10912    1           3 NOPATH BIT(1) UNAL,
             10913                  /*K*  NOPATH is set if this node is independently loaded
             10914                        (no backward path).  */
             10915    1           3 ENTER BIT(1) UNAL,
             10916                  /*K*  ENTER is set if ENTRY$ is valid.  */
             10917    1           3 CANCEL BIT(1) UNAL,
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:18   
             10918                  /*K*  CANCEL is set if the overlay was removed by
             10919                        "CANCEL=YES".   */
             10920    1         2 BACK# SBIN HALF UNAL,
             10921                /*K*  BACK# is the backward link (parent).  */
             10922    1         2 FORWARD# SBIN HALF UNAL,
             10923                /*K*  FORWARD# is the forward link (daughter).  */
             10924    1         2 OVERLAY# SBIN HALF UNAL,
             10925                /*K*  OVERLAY# is the overlay link (same level).   */
             10926    1         2 PADDR UBIN HALF UNAL,
             10927                /*K*  PADDR is the address of procedure.  */
             10928    1         2 PSIZE UBIN HALF UNAL,
             10929                /*K*  PSIZE is the size of procedure.  */
             10930    1         2 DADDR UBIN HALF UNAL,
             10931                /*K*  DADDR is the address of data.  */
             10932    1         2 DSIZE UBIN HALF UNAL,
             10933                /*K*  DSIZE is the size of data.  */
             10934    1         2 ENTRY$ EPTR;
             10935                /*K*  ENTRY$ is the overlay entry point (see ENTER).  */
       16    10937        %VX$DCB;
             10938        %BANNER( ARG=VX$DCB );
             10939        %LSET LISTDIR='0'B;

             10946    1   /*******************************************************************************
             10947    1   *                                                                              *
             10948    1   *                          VX$DCB                                                 *
             10949    1   *                                                                              *
             10950    1   *******************************************************************************/

             10954        %LIST;
             10955    1   DCL 1 VX$DCB                       ALIGNED   BASED,
             10956    1         2 * CHAR( VX_DCB_SIZEC);
             10957        /* End of actual DCB; now for NAME: Just one word in this description */
             10958        /* Dcb name description */
             10959    1   DCL 1 VX$DCB$T$C                   ALIGNED   BASED,
             10960    1         2 LOGICAL_DCB_NUM             UBIN(3)   UNAL,
             10961    1         2 INT                         BIT(1)    UNAL,      /* '1'=> no relocation
             10962                                                                       '0' => relocation */
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:19   
             10963    1         2 COUNT                       UBIN(5)   UNAL,
             10964    1         2 CHARS                       CHAR( VX$DCB$T$C.COUNT ) UNAL;
       17    10966        %E;
             10967        %LSET LISTDIR='0'B;

             10974    1   /*******************************************************************************
             10975    1   *                                                                              *
             10976    1   *                          ENTRY                                                 *
             10977    1   *                                                                              *
             10978    1   *******************************************************************************/

       18    10982        %ENTRIES;
             10983    1   DCL VXE$ERROR       ENTRY(4);
             10984    1   DCL VXE$ERR         ENTRY(3);
             10985    1   DCL VXE$MERC        ENTRY;
             10986    1   DCL VXE$ERRMSG      ENTRY(3);
             10987    1   DCL VXR$READ        ENTRY( 3 );
             10988    1   DCL VXW$WRITE       ENTRY( 3 );
             10989    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             10990    1   DCL VXD$B2C         ENTRY( 5 );
             10991    1   DCL VXD$C2B         ENTRY( 3 );
             10992    1   DCL VXA$GET         ENTRY( 3 );
             10993    1   DCL VXF$FREE        ENTRY( 3 );
             10994    1   DCL VXQ$SORT        ENTRY( 7 );
             10995    1   DCL VXY$YESNO       ENTRY( 1 );
       19    10997    1   DCL VXT$PROC             ENTRY;
       20    10998    1   DCL VXU$UNSAT            ENTRY;
       21    10999        %PTR;
             11000        %LSET LISTDIR='0'B;

             11007    1   /*******************************************************************************
             11008    1   *                                                                              *
             11009    1   *                          PTR                                                 *
             11010    1   *                                                                              *
             11011    1   *******************************************************************************/

       22    11015    1   DCL PATH_CURR$           PTR       ALIGNED   AUTO;
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:20   
       23    11016        %U;
             11017        %LSET LISTDIR='0'B;

             11024    1   /*******************************************************************************
             11025    1   *                                                                              *
             11026    1   *                          UBIN                                                 *
             11027    1   *                                                                              *
             11028    1   *******************************************************************************/

       24    11032        %INDEX;
             11033    1   DCL I          UBIN(36) ALIGNED AUTO;
             11034    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11035    1   DCL J          UBIN(36) ALIGNED AUTO;
             11036    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11037    1   DCL K          UBIN(36) ALIGNED AUTO;
             11038    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11039    1   DCL L          UBIN(36) ALIGNED AUTO;
             11040    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       25    11042        %PLIST;
       26    11043        %EJECT;
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:21   
       27    11044    1         VX_STATE# = 2/*@ALLOCATING*/;

  11044  2 000002   000002 235007                    LDA     2,DL
         2 000003   000000 755000 xsym               STA     VX_STATE#

       28    11045    1         VX_CURR$ = VX_ROOT$;

  11045  2 000004   000000 236000 xsym               LDQ     VX_ROOT$
         2 000005   000000 756000 xsym               STQ     VX_CURR$

  11045  2 000006                       DEPTH        null
       29    11046    1   DEPTH:;
       30    11047    2         DO WHILE( VX_CURR$ -> VX$NODE.SON$ ~= ADDR(NIL) );

  11047  2 000006   000012 710000 2                  TRA     s:11049

       31    11048    2             VX_CURR$ = VX_CURR$ -> VX$NODE.SON$;

  11048  2 000007   000000 470400 xsym               LDP0    VX_CURR$
         2 000010   000000 236100                    LDQ     0,,PR0
         2 000011   000000 756000 xsym               STQ     VX_CURR$

       32    11049    2            END;

  11049  2 000012   000000 470400 xsym               LDP0    VX_CURR$
         2 000013   000000 236100                    LDQ     0,,PR0
         2 000014   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000015   000007 601000 2                  TNZ     s:11048

  11048  2 000016                       PROCESS      null
       33    11050    1   PROCESS:;                               /* Process the node */
       34    11051    2         DO I = 0 TO SIZEW( VX_PASS2_REF.UNSAT.PAGE#_A ) - 1;

  11051  2 000016   200004 450100                    STZ     I,,AUTO
         2 000017   000025 710000 2                  TRA     s:11053+3

       35    11052    2             VX_PASS2_REF.UNSAT.PAGE#_A(I) = 0;
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:22   

  11052  2 000020   200004 720100                    LXL0    I,,AUTO
         2 000021   000074 450010 xsym               STZ     VX_PASS2_REF+60,X0

       36    11053    2            END;

  11053  2 000022   200004 235100                    LDA     I,,AUTO
         2 000023   000001 035007                    ADLA    1,DL
         2 000024   200004 755100                    STA     I,,AUTO
         2 000025   200004 235100                    LDA     I,,AUTO
         2 000026   000004 115007                    CMPA    4,DL
         2 000027   000020 602000 2                  TNC     s:11052

       37    11054    1         VX_PASS2_REF.UNSAT.PREV_RN_SIZE = 0;

  11054  2 000030   000100 450000 xsym               STZ     VX_PASS2_REF+64

       38    11055    1         VX_REF_EXPONENTIAL_SWITCH = '0'B/*@FALSE_B*/;

  11055  2 000031   000000 450000 xsym               STZ     VX_REF_EXPONENTIAL_SWITCH

       39    11056    1         PATH_CURR$ = VX_CURR$;

  11056  2 000032   000000 236000 xsym               LDQ     VX_CURR$
         2 000033   200003 756100                    STQ     PATH_CURR$,,AUTO

       40    11057    1         PATH_CURR$ -> VX$NODE.PATH$ = ADDR(NIL);

  11057  2 000034   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000035   200003 470500                    LDP0    PATH_CURR$,,AUTO
         2 000036   000003 756100                    STQ     3,,PR0

       41    11058    2         DO WHILE( PATH_CURR$ -> VX$NODE.FATHER$ ~= ADDR(NIL) );

  11058  2 000037   000046 710000 2                  TRA     s:11061

       42    11059    2             PATH_CURR$ -> VX$NODE.FATHER$ -> VX$NODE.PATH$ = PATH_CURR$;
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:23   

  11059  2 000040   200003 470500                    LDP0    PATH_CURR$,,AUTO
         2 000041   000002 471500                    LDP1    2,,PR0
         2 000042   200003 236100                    LDQ     PATH_CURR$,,AUTO
         2 000043   100003 756100                    STQ     3,,PR1

       43    11060    2             PATH_CURR$ = PATH_CURR$ -> VX$NODE.FATHER$;

  11060  2 000044   000002 236100                    LDQ     2,,PR0
         2 000045   200003 756100                    STQ     PATH_CURR$,,AUTO

       44    11061    2            END;

  11061  2 000046   200003 470500                    LDP0    PATH_CURR$,,AUTO
         2 000047   000002 236100                    LDQ     2,,PR0
         2 000050   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000051   000040 601000 2                  TNZ     s:11059

       45    11062    1         CALL VXT$PROC;

  11062  2 000052   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000053   000000 701000 xent               TSX1    VXT$PROC
         2 000054   000000 011000                    NOP     0

       46    11063    1         IF VX_PASS2_REF.UNSAT.L_START.ER$ ~= ADDR(NIL)

  11063  2 000055   000055 236000 xsym               LDQ     VX_PASS2_REF+45
         2 000056   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000057   000066 601000 2                  TNZ     s:11068
         2 000060   000056 236000 xsym               LDQ     VX_PASS2_REF+46
         2 000061   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000062   000066 601000 2                  TNZ     s:11068
         2 000063   000057 236000 xsym               LDQ     VX_PASS2_REF+47
         2 000064   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000065   000071 600000 2                  TZE     s:11069

       47    11064    1                 OR
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:24   
       48    11065    1                 VX_PASS2_REF.UNSAT.L_START.DR$ ~= ADDR(NIL)
       49    11066    1                 OR
       50    11067    1                 VX_PASS2_REF.UNSAT.L_START.SR$ ~= ADDR(NIL)
       51    11068    1         THEN CALL VXU$UNSAT;

  11068  2 000066   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000067   000000 701000 xent               TSX1    VXU$UNSAT
         2 000070   000000 011000                    NOP     0

       52    11069    2        IF VX_CURR$ -> VX$NODE.BROTHER$ ~= ADDR(NIL) THEN DO; /* Move horizontially */

  11069  2 000071   000000 470400 xsym               LDP0    VX_CURR$
         2 000072   000001 236100                    LDQ     1,,PR0
         2 000073   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000074   000077 600000 2                  TZE     s:11074

       53    11070    2             VX_CURR$ = VX_CURR$ -> VX$NODE.BROTHER$;

  11070  2 000075   000000 756000 xsym               STQ     VX_CURR$

       54    11071    2             GOTO DEPTH;

  11071  2 000076   000006 710000 2                  TRA     DEPTH

       55    11072    2            END;
       56    11073    2         ELSE DO;                          /* Move back up */

       57    11074    2             VX_CURR$ = VX_CURR$ -> VX$NODE.FATHER$;

  11074  2 000077   000002 236100                    LDQ     2,,PR0
         2 000100   000000 756000 xsym               STQ     VX_CURR$

       58    11075    2             IF VX_CURR$ ~= ADDR(NIL) THEN GOTO PROCESS;

  11075  2 000101   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000102   000016 601000 2                  TNZ     PROCESS

PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:25   
       59    11076    2            END;

       60    11077    1         VX_STATE# = 0;    /* This is the no state. Break routine does nothing */

  11077  2 000103   000000 450000 xsym               STZ     VX_STATE#

       61    11078    1   END VXT$PASS2;

  11078  2 000104   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:26   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXT$PASS2.
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:27   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w UBIN        r     1 I                          3-0-0/w PTR         r     1 PATH_CURR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 VX_CURR$                   0-0-0/w UBIN        r     1 VX_DCB_SIZEC
     0-0-0/w STRC(2340)  r     1 VX_PASS2_REF
     0-0-0/w BIT         r     1 VX_REF_EXPONENTIAL_SWITCH
     0-0-0/w PTR         r     1 VX_ROOT$                   0-0-0/w UBIN        r     1 VX_STATE#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(9)     r     1 VX$DCB$T$C                 0-0-0/w STRC(3672)  r     1 VX$NODE


   Procedure VXT$PASS2 requires 69 words for executable code.
   Procedure VXT$PASS2 requires 8 words of local(AUTO) storage.

    No errors detected in file VXT$PASS2.:E05TSI    .
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:29   
          MINI XREF LISTING

DEPTH
     11045**LABEL   11071--GOTO
I
     11033**DCL     11034--REDEF   11051<<DOINDEX 11052>>ASSIGN
J
     11035**DCL     11036--REDEF
K
     11037**DCL     11038--REDEF
L
     11039**DCL     11040--REDEF
PATH_CURR$
     11015**DCL     11056<<ASSIGN  11057>>ASSIGN  11058>>DOWHILE 11059>>ASSIGN  11059>>ASSIGN  11060<<ASSIGN
     11060>>ASSIGN
PROCESS
     11048**LABEL   11075--GOTO
VX$DCB$T$C.COUNT
     10963**DCL     10964--IMP-SIZ
VX$NODE.ADDR_START_A
     10771**DCL     10772--REDEF
VX$NODE.ADDR_STOP_A
     10776**DCL     10777--REDEF
VX$NODE.BROTHER$
     10760**DCL     11069>>IF      11070>>ASSIGN
VX$NODE.FATHER$
     10761**DCL     11058>>DOWHILE 11059>>ASSIGN  11060>>ASSIGN  11074>>ASSIGN
VX$NODE.L_PREV_SIZE
     10829**DCL     10840--REDEF
VX$NODE.L_SC_START
     10848**DCL     10853--REDEF
VX$NODE.L_SC_STOP
     10854**DCL     10859--REDEF
VX$NODE.L_SIZE
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:30   
     10817**DCL     10828--REDEF
VX$NODE.L_START
     10793**DCL     10804--REDEF
VX$NODE.L_STOP
     10805**DCL     10816--REDEF
VX$NODE.PATH$
     10762**DCL     11057<<ASSIGN  11059<<ASSIGN
VX$NODE.PROMOTE_HEAD
     10860**DCL     10863--REDEF
VX$NODE.PROMOTE_TAIL
     10864**DCL     10867--REDEF
VX$NODE.SON$
     10759**DCL     11047>>DOWHILE 11048>>ASSIGN
VX$NODE.START_PAGE#_A
     10781**DCL     10782--REDEF
VX$NODE.STOP_PAGE#_A
     10786**DCL     10787--REDEF
VXT$PROC
     10997**DCL-ENT 11062--CALL
VXU$UNSAT
     10998**DCL-ENT 11068--CALL
VX_BIAS.A
      9576**DCL      9577--REDEF
VX_CBUF.CHARS_A
      9510**DCL      9511--REDEF
VX_CONST_DCB.ACTPOS
     10692**DCL     10692--REDEF
VX_CONST_DCB.ARS#
     10651**DCL     10651--REDEF
VX_CONST_DCB.ATTR#
     10681**DCL     10681--REDEF   10683--REDEF
VX_CONST_DCB.BORROW
     10703**DCL     10703--REDEF   10703--REDEF   10703--REDEF
VX_CONST_DCB.EOMCHAR#
     10658**DCL     10659--REDEF
VX_CONST_DCB.FLDID
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:31   
     10695**DCL     10696--REDEF
VX_CONST_DCB.FORM$
     10687**DCL     10687--REDEF
VX_CONST_DCB.FSECT
     10710**DCL     10710--REDEF
VX_CONST_DCB.FSN#
     10677**DCL     10677--REDEF   10677--REDEF   10678--REDEF
VX_CONST_DCB.HEADER$
     10686**DCL     10687--REDEF
VX_CONST_DCB.IXTNSIZE#
     10683**DCL     10684--REDEF
VX_CONST_DCB.LASTSTA$
     10667**DCL     10667--REDEF
VX_CONST_DCB.LVL
     10704**DCL     10704--REDEF
VX_CONST_DCB.NAME#.C
     10667**DCL     10668--REDEF
VX_CONST_DCB.NOEOF
     10699**DCL     10699--REDEF
VX_CONST_DCB.NRECS#
     10684**DCL     10684--REDEF
VX_CONST_DCB.NRECX
     10711**DCL     10711--REDEF
VX_CONST_DCB.OHDR
     10700**DCL     10700--REDEF
VX_CONST_DCB.ORG#
     10675**DCL     10676--REDEF
VX_CONST_DCB.PRECNO
     10708**DCL     10708--REDEF
VX_CONST_DCB.RCSZ
     10716**DCL     10716--REDEF
VX_CONST_DCB.RES#
     10669**DCL     10669--REDEF
VX_CONST_DCB.SETX
     10688**DCL     10688--REDEF
VX_CONST_DCB.TAB$
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:32   
     10687**DCL     10687--REDEF
VX_CONST_DCB.TDA
     10707**DCL     10708--REDEF
VX_CONST_DCB.WSN#
     10669**DCL     10670--REDEF
VX_CURR$
      9545**DCL     11045<<ASSIGN  11047>>DOWHILE 11048<<ASSIGN  11048>>ASSIGN  11056>>ASSIGN  11069>>IF
     11070<<ASSIGN  11070>>ASSIGN  11074<<ASSIGN  11074>>ASSIGN  11075>>IF
VX_DCB_SIZEC
     10725**DCL     10956--IMP-SIZ
VX_EBUF.CHARS_A
     10099**DCL     10100--REDEF
VX_EFIELD1.CHARS
     10108**DCL     10109--REDEF
VX_EFIELD2.CHARS
     10112**DCL     10113--REDEF
VX_EFIELD3.CHARS
     10116**DCL     10117--REDEF
VX_EI_KEY_BUF.KEY
     10492**DCL     10493--REDEF
VX_ERRORS
      9553**DCL      9564--REDEF
VX_ERRORS.CONFLICT_A
      9559**DCL      9560--REDEF
VX_ERRORS.UNSAT_A
      9555**DCL      9556--REDEF
VX_IMAGE_DATA.CPAGE#_A
      8690**DCL      8691--REDEF
VX_IMAGE_DATA.NODE_A$
      8702**DCL      8703--REDEF
VX_IMAGE_DATA.START_A$
      8694**DCL      8695--REDEF
VX_IMAGE_DATA.STOP_A$
      8698**DCL      8699--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8759**DCL      8760--REDEF
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:33   
VX_IMAGE_DS3.NODE_A$
      8771**DCL      8772--REDEF
VX_IMAGE_DS3.START_A$
      8763**DCL      8764--REDEF
VX_IMAGE_DS3.STOP_A$
      8767**DCL      8768--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8782**DCL      8783--REDEF
VX_IMAGE_DS4.NODE_A$
      8794**DCL      8795--REDEF
VX_IMAGE_DS4.START_A$
      8786**DCL      8787--REDEF
VX_IMAGE_DS4.STOP_A$
      8790**DCL      8791--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8805**DCL      8806--REDEF
VX_IMAGE_DS5.NODE_A$
      8817**DCL      8818--REDEF
VX_IMAGE_DS5.START_A$
      8809**DCL      8810--REDEF
VX_IMAGE_DS5.STOP_A$
      8813**DCL      8814--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8828**DCL      8829--REDEF
VX_IMAGE_DS6.NODE_A$
      8840**DCL      8841--REDEF
VX_IMAGE_DS6.START_A$
      8832**DCL      8833--REDEF
VX_IMAGE_DS6.STOP_A$
      8836**DCL      8837--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8851**DCL      8852--REDEF
VX_IMAGE_DS7.NODE_A$
      8863**DCL      8864--REDEF
VX_IMAGE_DS7.START_A$
      8855**DCL      8856--REDEF
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:34   
VX_IMAGE_DS7.STOP_A$
      8859**DCL      8860--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8874**DCL      8875--REDEF
VX_IMAGE_DS8.NODE_A$
      8886**DCL      8887--REDEF
VX_IMAGE_DS8.START_A$
      8878**DCL      8879--REDEF
VX_IMAGE_DS8.STOP_A$
      8882**DCL      8883--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8713**DCL      8714--REDEF
VX_IMAGE_PROC.NODE_A$
      8725**DCL      8726--REDEF
VX_IMAGE_PROC.START_A$
      8717**DCL      8718--REDEF
VX_IMAGE_PROC.STOP_A$
      8721**DCL      8722--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8736**DCL      8737--REDEF
VX_IMAGE_ROS.NODE_A$
      8748**DCL      8749--REDEF
VX_IMAGE_ROS.START_A$
      8740**DCL      8741--REDEF
VX_IMAGE_ROS.STOP_A$
      8744**DCL      8745--REDEF
VX_M_VECTOR.F
      8541**DCL      8545--REDEF
VX_M_VECTOR_DP.F
      8576**DCL      8580--REDEF
VX_O.ACCTN_A$
      9705**DCL      9706--REDEF
VX_O.DCB_MATCH_A$
      9714**DCL      9715--REDEF
VX_O.DCB_MATCH_HIT_A
      9720**DCL      9721--REDEF
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:35   
VX_O.FIDN_A$
      9699**DCL      9700--REDEF
VX_O.FID_A$
      9691**DCL      9692--REDEF
VX_O.INCLUDE_A$
      9711**DCL      9712--REDEF
VX_O.MAP_A
      9685**DCL      9686--REDEF
VX_O.NODCB_A
      9742**DCL      9743--REDEF
VX_O.NUM_A
      9630**DCL      9632--REDEF
VX_O.OPT_A
      9730**DCL      9731--REDEF
VX_O.PRIV_A
      9646**DCL      9648--REDEF
VX_O.SIN_A
      9599**DCL      9600--REDEF
VX_O.TCB_A
      9726**DCL      9727--REDEF
VX_OD.ACCTN_A$
      9903**DCL      9904--REDEF
VX_OD.DCB_MATCH_A$
      9912**DCL      9913--REDEF
VX_OD.FIDN_A$
      9897**DCL      9898--REDEF
VX_OD.FID_A$
      9889**DCL      9890--REDEF
VX_OD.INCLUDE_A$
      9909**DCL      9910--REDEF
VX_OD.MAP_A
      9883**DCL      9884--REDEF
VX_OD.NODCB_A
      9927**DCL      9928--REDEF
VX_OD.NUM_A
      9830**DCL      9831--REDEF
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:36   
VX_OD.PRIV_A
      9845**DCL      9846--REDEF
VX_OD.SIN_A
      9799**DCL      9800--REDEF
VX_OD.VECTOR_A$
      9918**DCL      9919--REDEF
VX_OL.MAX_A
      9774**DCL      9776--REDEF
VX_OL.MIN_A
      9759**DCL      9760--REDEF
VX_ON.ACCTN_A$
     10048**DCL     10050--REDEF
VX_ON.DCB_MATCH_A$
     10059**DCL     10061--REDEF
VX_ON.FIDN_A$
     10041**DCL     10043--REDEF
VX_ON.FID_A$
     10032**DCL     10034--REDEF
VX_ON.INCLUDE_A$
     10055**DCL     10057--REDEF
VX_ON.MAP_A
     10025**DCL     10027--REDEF
VX_ON.NODCB_A$
     10075**DCL     10076--REDEF
VX_ON.NUM_A
      9970**DCL      9972--REDEF
VX_ON.PRIV_A
      9986**DCL      9988--REDEF
VX_ON.SIN_A
      9938**DCL      9940--REDEF
VX_ON.VECTOR_A$
     10066**DCL     10067--REDEF
VX_OUHEAD.VERSION
      9385**DCL      9387--REDEF
VX_OU_HEAD
      9328**DCL      9367--REDEF
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:37   
VX_OU_HEAD.REC_A
      9340**DCL      9343--REDEF
VX_O_KEY_BUF.FORM0
      8589**DCL      8592--REDEF    8599--REDEF
VX_O_KEY_BUF_L.FORM0
      8612**DCL      8615--REDEF    8622--REDEF
VX_PASS2_REF.OU.L_START
     10278**DCL     10283--REDEF
VX_PASS2_REF.OU.L_STOP
     10284**DCL     10289--REDEF
VX_PASS2_REF.OU.MAX
     10272**DCL     10277--REDEF
VX_PASS2_REF.OU.SIZE
     10290**DCL     10295--REDEF
VX_PASS2_REF.SAT.COUNT
     10317**DCL     10323--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10324**DCL     10330--REDEF
VX_PASS2_REF.SAT.L_START
     10303**DCL     10309--REDEF
VX_PASS2_REF.SAT.L_STOP
     10310**DCL     10316--REDEF
VX_PASS2_REF.SAT.MAX
     10297**DCL     10302--REDEF
VX_PASS2_REF.UNSAT.L_START
     10365**DCL     10370--REDEF
VX_PASS2_REF.UNSAT.L_START.DR$
     10368**DCL     11063>>IF
VX_PASS2_REF.UNSAT.L_START.ER$
     10367**DCL     11063>>IF
VX_PASS2_REF.UNSAT.L_START.SR$
     10369**DCL     11063>>IF
VX_PASS2_REF.UNSAT.L_STOP
     10371**DCL     10376--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10377**DCL     10382--REDEF
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:38   
VX_PASS2_REF.UNSAT.MAX
     10359**DCL     10364--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10389**DCL     10394--REDEF
VX_PASS2_REF.UNSAT.PAGE#_A
     10394**DCL     11051--DOINDEX 11052<<ASSIGN
VX_PASS2_REF.UNSAT.PREV_RN_SIZE
     10395**DCL     11054<<ASSIGN
VX_PASS2_REF.UNSAT.SIZE
     10383**DCL     10388--REDEF
VX_PHRASE.PHRASE
      9791**DCL      9793--REDEF
VX_PROGRAM_BIAS.A
      9569**DCL      9570--REDEF
VX_REF_EXPONENTIAL_SWITCH
     10509**DCL     11055<<ASSIGN
VX_ROOT$
      9542**DCL     11045>>ASSIGN
VX_R_KEY_BUF.FORM0
      8638**DCL      8642--REDEF    8648--REDEF
VX_SD.A
      8266**DCL      8267--REDEF
VX_SPC.B$.MINE
     10460**DCL     10466--REDEF
VX_SPC.B$.NAME
     10439**DCL     10445--REDEF
VX_SPC.B$.SKIP
     10453**DCL     10459--REDEF
VX_SPC.B$.VALUE
     10446**DCL     10452--REDEF
VX_SPC.SEG.NAME
     10408**DCL     10414--REDEF
VX_SPC.SEG.VALUE
     10415**DCL     10421--REDEF
VX_STATE#
     10531**DCL     11044<<ASSIGN  11077<<ASSIGN
PL6.E3A0      #001=VXT$PASS2 File=VXT$PASS2.:E05TSI                              WED 07/30/97 08:40 Page:39   
VX_TSX0_OVERLAY.H
     10183**DCL     10186--REDEF
