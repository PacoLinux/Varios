VERSION E05

PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:1    
        1        1        /*M* DXS$ND_SRCH Overlay node utility routines for XDELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DXS$ND_SRCH
        9        9             PURPOSE: This module contains the routines used to manipulate
       10       10             DESCRIPTION: This module contains various entry points that are
       11       11                          used by XDELTA to handle the overlaid monitor. */
       12       12        %EJECT;
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:2    
       13       13        DDS$ND_SRCH: PROC(SYM$,N#) ALTRET;
       14       14    1   DCL SYM$ PTR;
       15       15    1   DCL N# UBIN;
       16       16    1   DCL DEFDIR$ PTR SYMREF;
       17       17        %INCLUDE DD$BASED;
       18     1320        %B$DEF;
       19     1332        %TEXT$C;
       20     1337    1   DCL I UBIN;
       21     1338        %INCLUDE DD_ERR_C;
       22     1735        %INCLUDE XUH_MACRO_C;
       23     1819        %INCLUDE DD_SD_M;
       24     3155        %S_D;
       25     4473        /* */
       26     4474    2        DO I = 0 TO B$DEF.NODES-1;
       27     4475    2             IF ADDR(B$DEF.NINFO.NODE_NAME(I)) -> TEXT$C = SYM$ -> TEXT$C
       28     4476    3             THEN DO;
       29     4477    3                  N# = I;
       30     4478    3                  RETURN;
       31     4479    3                END;
       32     4480    2           END;
       33     4481    1        S_D.ERROR = E@BADNODE;             /* E@BADNODE */
       34     4482    1        ALTRETURN;
       35     4483    1   END DDS$ND_SRCH;
       36     4484        %EOD;

PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:3    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$ND_SRCH.

   Procedure DDS$ND_SRCH requires 36 words for executable code.
   Procedure DDS$ND_SRCH requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:4    

 Object Unit name= DDS$ND_SRCH                                File name= DXS$ND_SRCH.:E05TOU
 UTS= JUL 29 '97 15:13:46.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    36     44  DDS$ND_SRCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$ND_SRCH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DEFDIR$                          r    S_D$
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:5    


        1        1        /*M* DXS$ND_SRCH Overlay node utility routines for XDELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DXS$ND_SRCH
        9        9             PURPOSE: This module contains the routines used to manipulate
       10       10             DESCRIPTION: This module contains various entry points that are
       11       11                          used by XDELTA to handle the overlaid monitor. */
       12       12        %EJECT;
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:6    
       13       13        DDS$ND_SRCH: PROC(SYM$,N#) ALTRET;

     13  0 000000   000000 700200 xent  DDS$ND_SRCH  TSX0  ! X66_AUTO_2
         0 000001   000006 000002                    ZERO    6,2

       14       14    1   DCL SYM$ PTR;
       15       15    1   DCL N# UBIN;
       16       16    1   DCL DEFDIR$ PTR SYMREF;
       17       17        %INCLUDE DD$BASED;
       18     1320        %B$DEF;
       19     1332        %TEXT$C;
       20     1337    1   DCL I UBIN;
       21     1338        %INCLUDE DD_ERR_C;
       22     1735        %INCLUDE XUH_MACRO_C;
       23     1819        %INCLUDE DD_SD_M;
       24     3155        %S_D;
       25     4473        /* */
       26     4474    2        DO I = 0 TO B$DEF.NODES-1;

   4474  0 000002   200005 450100                    STZ     I,,AUTO
         0 000003   000034 710000 0                  TRA     s:4480+3

       27     4475    2             IF ADDR(B$DEF.NINFO.NODE_NAME(I)) -> TEXT$C = SYM$ -> TEXT$C

   4475  0 000004   200005 236100                    LDQ     I,,AUTO
         0 000005   000013 402007                    MPY     11,DL
         0 000006   000000 470400 xsym               LDP0    DEFDIR$
         0 000007   000002 236106                    LDQ     2,QL,PR0
         0 000010   000033 772000                    QRL     27
         0 000011   000001 620006                    EAX0    1,QL
         0 000012   200003 471500                    LDP1    @SYM$,,AUTO
         0 000013   100000 473500                    LDP3    0,,PR1
         0 000014   300000 236100                    LDQ     0,,PR3
         0 000015   000033 772000                    QRL     27
         0 000016   000001 621006                    EAX1    1,QL
         0 000017   200005 236100                    LDQ     I,,AUTO
         0 000020   000054 402007                    MPY     44,DL
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:7    
         0 000021   000140 106546                    CMPC    fill='000'O
         0 000022   000002 000010                    ADSC9   2,Q,PR0                  cn=0,n=*X0
         0 000023   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         0 000024   000031 601000 0                  TNZ     s:4480

       28     4476    3             THEN DO;

       29     4477    3                  N# = I;

   4477  0 000025   200004 474500                    LDP4    @N#,,AUTO
         0 000026   200005 235100                    LDA     I,,AUTO
         0 000027   400000 755100                    STA     0,,PR4

       30     4478    3                  RETURN;

   4478  0 000030   000000 702200 xent               TSX2  ! X66_ARET

       31     4479    3                END;
       32     4480    2           END;

   4480  0 000031   200005 235100                    LDA     I,,AUTO
         0 000032   000001 035007                    ADLA    1,DL
         0 000033   200005 755100                    STA     I,,AUTO
         0 000034   000000 470400 xsym               LDP0    DEFDIR$
         0 000035   200005 236100                    LDQ     I,,AUTO
         0 000036   000000 116100                    CMPQ    0,,PR0
         0 000037   000004 602000 0                  TNC     s:4475

       33     4481    1        S_D.ERROR = E@BADNODE;             /* E@BADNODE */

   4481  0 000040   000170 235007                    LDA     120,DL
         0 000041   000000 471400 xsym               LDP1    S_D$
         0 000042   100013 755100                    STA     11,,PR1

       34     4482    1        ALTRETURN;

   4482  0 000043   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:8    
       35     4483    1   END DDS$ND_SRCH;
       36     4484        %EOD;

PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:9    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$ND_SRCH.

   Procedure DDS$ND_SRCH requires 36 words for executable code.
   Procedure DDS$ND_SRCH requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:11   
          MINI XREF LISTING

B$DEF.NINFO.NODE_NAME
      1325**DCL      4475--IF       4475--IF
B$DEF.NODES
      1322**DCL      4474>>DOINDEX
DEFDIR$
        16**DCL      1321--IMP-PTR  4474>>DOINDEX  4475>>IF       4475>>IF
I
      1337**DCL      4474<<DOINDEX  4475>>IF       4475>>IF       4477>>ASSIGN
N#
        15**DCL        13--PROC     4477<<ASSIGN
SYM$
        14**DCL        13--PROC     4475>>IF       4475>>IF
S_D.CURRENT_CHANNEL
      4107**DCL      4109--REDEF
S_D.DEBUGA
      3259**DCL      3261--REDEF
S_D.EIS
      4217**DCL      4246--REDEF
S_D.ERROR
      3188**DCL      4481<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      4150**DCL      4151--REDEF    4165--REDEF
S_D.JDE
      3764**DCL      3765--REDEF
S_D.L$.VALUE
      3317**DCL      3323--REDEF    3331--REDEF    3334--REDEF    3337--REDEF    3340--REDEF
S_D.L$.VALUE.L
      3318**DCL      3319--REDEF    3320--REDEF
S_D.L6_MESSAGE_BUF
      4171**DCL      4173--REDEF
S_D.OUTPUT
      4137**DCL      4139--REDEF
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:12   
S_D.REMOTE_MSG.FNCC
      4156**DCL      4157--REDEF
S_D.REMOTE_MSG.STXC
      4152**DCL      4153--REDEF
S_D.REMOTE_MSG.SUBFNCC
      4160**DCL      4161--REDEF
S_D.SV
      3216**DCL      3237--REDEF
S_D$
      4468**DCL      3164--IMP-PTR  4481>>ASSIGN
TEXT$C
      1333**DCL      4475>>IF       4475>>IF
TEXT$C.SIZE
      1334**DCL      1335--IMP-SIZ  4475>>IF       4475>>IF
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:13   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$ND_SRCH File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:14   
              MINI UREF LISTING

DDS$ND_SRCH      13**PROC

PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:15   
       37        1        /*T***********************************************************/
       38        2        /*T*                                                         */
       39        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       40        4        /*T*                                                         */
       41        5        /*T***********************************************************/
       42        6        /*F* NAME: DCS$IC2NODE
       43        7             PURPOSE: To find the node associated with the given IC value.
       44        8             DESCRIPTION: Searches the tree table in the read-only-segment for
       45        9                          the node containing the given IC value. */
       46       10        /*D* NAME: DDS$IC2NODE
       47       11             ENTRY: DDS$IC2NODE
       48       12             CALL: CALL DDS$IC2NODE( IC ) ALTRET( program bug );
       49       13                   CALL DDS$IC2NODE( IC, N# ) ALTRET( program bug );
       50       14             INPUT: IC - Address in IS.
       51       15             OUTPUT: S_D.NODE - Node containing IC.
       52       16                     S_D.EDEF$ - Ptr to entdefs.
       53       17                     S_D.EDEF_END$ - Ptr beyond entdefs end.
       54       18                     S_D.SDEF$ - Ptr to symdefs.
       55       19                     S_D.SDEF_END$ - Ptr beyond symdefs end.
       56       20                     S_D.DNAME$ - Ptr to def names.
       57       21                     N# - Returned only if called with 2 args.
       58       22             DESCRIPTION: Sets up either the current 'USE' overlay DEFs or the
       59       23                          root DEFs depending on whether the IC is above the
       60       24                          top of the root.  ALTRETs only is a
       61       25                          programming error is detected. */
       62       26        /*D* Current Program Defs are left alone if called with 2 arguments. */
       63       27                                                /**/
       64       28        DDS$IC2NODE: PROC( IC, N# ) ALTRET;
       65       29    1   DCL IC UBIN;
       66       30    1   DCL N# UBIN;
       67       31        %INCLUDE XUH_MACRO_C;
       68      115        %INCLUDE DD$BASED;
       69     1418        %INCLUDE DD_SD_M;
       70     2754        %S_D;
       71     4072    1   DCL DEFDIR$ PTR SYMREF;
       72     4073        %B$DEF;
       73     4085        %INCLUDE B$OBJECT_C;
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:16   
       74     7515        %B$EDEF;
       75     7585        %B$SDEF;
       76     7639                                                /**/
       77     7640    1        IF IC < B$DEF.PADDR
       78     7641    2        THEN DO;
       79     7642    2             IF ADDR(N#) ~= ADDR(NIL)
       80     7643    2             THEN N# = 0;
       81     7644    3             ELSE DO;
       82     7645    3                  S_D.NODE = 0;
       83     7646    3                  S_D.EDEF$ = B$DEF.NINFO.EDEF$(0);
       84     7647    3                  S_D.EDEF_END$ = PINCRW(B$DEF.NINFO.EDEF$(1),-SIZEW(B$EDEF));
       85     7648    3                  S_D.SDEF$ = B$DEF.NINFO.SDEF$(0);
       86     7649    3                  S_D.SDEF_END$ = PINCRW(B$DEF.NINFO.SDEF$(1),-SIZEW(B$SDEF));
       87     7650    3                END;
       88     7651    2           END;
       89     7652    2        ELSE DO;
       90     7653    2             IF ADDR(N#) ~= ADDR(NIL)
       91     7654    2             THEN N# = S_D.NODE;
       92     7655    3             ELSE DO;
       93     7656    3                  S_D.NODE = S_D.UNODE.USENODE;
       94     7657    3                  S_D.EDEF$ = B$DEF.NINFO.EDEF$(S_D.NODE);
       95     7658    3                  S_D.SDEF$ = B$DEF.NINFO.SDEF$(S_D.NODE);
       96     7659    3                  S_D.EDEF_END$ = PINCRW(B$DEF.NINFO.EDEF$(S_D.NODE+1),-SIZEW(B$EDEF));
       97     7660    3                  S_D.SDEF_END$ = PINCRW(B$DEF.NINFO.SDEF$(S_D.NODE+1),-SIZEW(B$SDEF));
       98     7661    3                END;
       99     7662    2           END;
      100     7663    1        RETURN;
      101     7664    1   END DDS$IC2NODE;

PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:17   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$IC2NODE.

   Procedure DDS$IC2NODE requires 56 words for executable code.
   Procedure DDS$IC2NODE requires 6 words of local(AUTO) storage.

    No errors detected in file DXS$ND_SRCH.:E05TSI    .

PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:18   

 Object Unit name= DDS$IC2NODE                                File name= DXS$ND_SRCH.:E05TOU
 UTS= JUL 29 '97 15:13:54.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    56     70  DDS$IC2NODE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$IC2NODE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  DEFDIR$                               B_VECTNIL
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:19   


       37        1        /*T***********************************************************/
       38        2        /*T*                                                         */
       39        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       40        4        /*T*                                                         */
       41        5        /*T***********************************************************/
       42        6        /*F* NAME: DCS$IC2NODE
       43        7             PURPOSE: To find the node associated with the given IC value.
       44        8             DESCRIPTION: Searches the tree table in the read-only-segment for
       45        9                          the node containing the given IC value. */
       46       10        /*D* NAME: DDS$IC2NODE
       47       11             ENTRY: DDS$IC2NODE
       48       12             CALL: CALL DDS$IC2NODE( IC ) ALTRET( program bug );
       49       13                   CALL DDS$IC2NODE( IC, N# ) ALTRET( program bug );
       50       14             INPUT: IC - Address in IS.
       51       15             OUTPUT: S_D.NODE - Node containing IC.
       52       16                     S_D.EDEF$ - Ptr to entdefs.
       53       17                     S_D.EDEF_END$ - Ptr beyond entdefs end.
       54       18                     S_D.SDEF$ - Ptr to symdefs.
       55       19                     S_D.SDEF_END$ - Ptr beyond symdefs end.
       56       20                     S_D.DNAME$ - Ptr to def names.
       57       21                     N# - Returned only if called with 2 args.
       58       22             DESCRIPTION: Sets up either the current 'USE' overlay DEFs or the
       59       23                          root DEFs depending on whether the IC is above the
       60       24                          top of the root.  ALTRETs only is a
       61       25                          programming error is detected. */
       62       26        /*D* Current Program Defs are left alone if called with 2 arguments. */
       63       27                                                /**/
       64       28        DDS$IC2NODE: PROC( IC, N# ) ALTRET;

     28  0 000000   000000 700200 xent  DDS$IC2NODE  TSX0  ! X66_AUTO_2
         0 000001   000006 000002                    ZERO    6,2

       65       29    1   DCL IC UBIN;
       66       30    1   DCL N# UBIN;
       67       31        %INCLUDE XUH_MACRO_C;
       68      115        %INCLUDE DD$BASED;
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:20   
       69     1418        %INCLUDE DD_SD_M;
       70     2754        %S_D;
       71     4072    1   DCL DEFDIR$ PTR SYMREF;
       72     4073        %B$DEF;
       73     4085        %INCLUDE B$OBJECT_C;
       74     7515        %B$EDEF;
       75     7585        %B$SDEF;
       76     7639                                                /**/
       77     7640    1        IF IC < B$DEF.PADDR

   7640  0 000002   200003 470500                    LDP0    @IC,,AUTO
         0 000003   000000 471400 xsym               LDP1    DEFDIR$
         0 000004   000000 236100                    LDQ     0,,PR0
         0 000005   100001 116100                    CMPQ    1,,PR1
         0 000006   000032 603000 0                  TRC     s:7653

       78     7641    2        THEN DO;

       79     7642    2             IF ADDR(N#) ~= ADDR(NIL)

   7642  0 000007   200004 236100                    LDQ     @N#,,AUTO
         0 000010   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000011   000015 600000 0                  TZE     s:7645

       80     7643    2             THEN N# = 0;

   7643  0 000012   200004 473500                    LDP3    @N#,,AUTO
         0 000013   300000 450100                    STZ     0,,PR3
         0 000014   000067 710000 0                  TRA     s:7663

       81     7644    3             ELSE DO;

       82     7645    3                  S_D.NODE = 0;

   7645  0 000015   000000 473400 xsym               LDP3    S_D$
         0 000016   304706 450100                    STZ     2502,,PR3

PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:21   
       83     7646    3                  S_D.EDEF$ = B$DEF.NINFO.EDEF$(0);

   7646  0 000017   100012 236100                    LDQ     10,,PR1
         0 000020   301042 756100                    STQ     546,,PR3

       84     7647    3                  S_D.EDEF_END$ = PINCRW(B$DEF.NINFO.EDEF$(1),-SIZEW(B$EDEF));

   7647  0 000021   100025 236100                    LDQ     21,,PR1
         0 000022   777776 036003                    ADLQ    -2,DU
         0 000023   301044 756100                    STQ     548,,PR3

       85     7648    3                  S_D.SDEF$ = B$DEF.NINFO.SDEF$(0);

   7648  0 000024   100013 236100                    LDQ     11,,PR1
         0 000025   301043 756100                    STQ     547,,PR3

       86     7649    3                  S_D.SDEF_END$ = PINCRW(B$DEF.NINFO.SDEF$(1),-SIZEW(B$SDEF));

   7649  0 000026   100026 236100                    LDQ     22,,PR1
         0 000027   777776 036003                    ADLQ    -2,DU
         0 000030   301045 756100                    STQ     549,,PR3

       87     7650    3                END;

       88     7651    2           END;

   7651  0 000031   000067 710000 0                  TRA     s:7663

       89     7652    2        ELSE DO;

       90     7653    2             IF ADDR(N#) ~= ADDR(NIL)

   7653  0 000032   200004 236100                    LDQ     @N#,,AUTO
         0 000033   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000034   000042 600000 0                  TZE     s:7656

       91     7654    2             THEN N# = S_D.NODE;
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:22   

   7654  0 000035   000000 473400 xsym               LDP3    S_D$
         0 000036   200004 474500                    LDP4    @N#,,AUTO
         0 000037   304706 235100                    LDA     2502,,PR3
         0 000040   400000 755100                    STA     0,,PR4
         0 000041   000067 710000 0                  TRA     s:7663

       92     7655    3             ELSE DO;

       93     7656    3                  S_D.NODE = S_D.UNODE.USENODE;

   7656  0 000042   000000 473400 xsym               LDP3    S_D$
         0 000043   304760 235100                    LDA     2544,,PR3
         0 000044   304706 755100                    STA     2502,,PR3

       94     7657    3                  S_D.EDEF$ = B$DEF.NINFO.EDEF$(S_D.NODE);

   7657  0 000045   304706 236100                    LDQ     2502,,PR3
         0 000046   000013 402007                    MPY     11,DL
         0 000047   100012 236106                    LDQ     10,QL,PR1
         0 000050   301042 756100                    STQ     546,,PR3

       95     7658    3                  S_D.SDEF$ = B$DEF.NINFO.SDEF$(S_D.NODE);

   7658  0 000051   304706 236100                    LDQ     2502,,PR3
         0 000052   000013 402007                    MPY     11,DL
         0 000053   100013 236106                    LDQ     11,QL,PR1
         0 000054   301043 756100                    STQ     547,,PR3

       96     7659    3                 S_D.EDEF_END$ = PINCRW(B$DEF.NINFO.EDEF$(S_D.NODE+1),-SIZEW(B$EDEF));

   7659  0 000055   304706 236100                    LDQ     2502,,PR3
         0 000056   000013 402007                    MPY     11,DL
         0 000057   100025 236106                    LDQ     21,QL,PR1
         0 000060   777776 036003                    ADLQ    -2,DU
         0 000061   301044 756100                    STQ     548,,PR3

PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:23   
       97     7660    3                 S_D.SDEF_END$ = PINCRW(B$DEF.NINFO.SDEF$(S_D.NODE+1),-SIZEW(B$SDEF));

   7660  0 000062   304706 236100                    LDQ     2502,,PR3
         0 000063   000013 402007                    MPY     11,DL
         0 000064   100026 236106                    LDQ     22,QL,PR1
         0 000065   777776 036003                    ADLQ    -2,DU
         0 000066   301045 756100                    STQ     549,,PR3

       98     7661    3                END;

       99     7662    2           END;

      100     7663    1        RETURN;

   7663  0 000067   000000 702200 xent               TSX2  ! X66_ARET
      101     7664    1   END DDS$IC2NODE;

PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:24   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$IC2NODE.

   Procedure DDS$IC2NODE requires 56 words for executable code.
   Procedure DDS$IC2NODE requires 6 words of local(AUTO) storage.

    No errors detected in file DXS$ND_SRCH.:E05TSI    .
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:26   
          MINI XREF LISTING

B$DEF.NINFO.EDEF$
      4081**DCL      7646>>ASSIGN   7647>>ASSIGN   7657>>ASSIGN   7659>>ASSIGN
B$DEF.NINFO.SDEF$
      4082**DCL      7648>>ASSIGN   7649>>ASSIGN   7658>>ASSIGN   7660>>ASSIGN
B$DEF.PADDR
      4076**DCL      7640>>IF
B$EDEF
      7516**DCL      7647--ASSIGN   7659--ASSIGN
B$EDEF.OU
      7533**DCL      7539--REDEF
B$SDEF
      7586**DCL      7649--ASSIGN   7660--ASSIGN
B$SDEF.AD.OU
      7606**DCL      7612--REDEF
B$SDEF.VALUE
      7587**DCL      7590--REDEF
DEFDIR$
      4072**DCL      4074--IMP-PTR  7640>>IF       7646>>ASSIGN   7647>>ASSIGN   7648>>ASSIGN   7649>>ASSIGN
      7657>>ASSIGN   7658>>ASSIGN   7659>>ASSIGN   7660>>ASSIGN
IC
        29**DCL        28--PROC     7640>>IF
N#
        30**DCL        28--PROC     7642--IF       7643<<ASSIGN   7653--IF       7654<<ASSIGN
S_D.CURRENT_CHANNEL
      3706**DCL      3708--REDEF
S_D.DEBUGA
      2858**DCL      2860--REDEF
S_D.EDEF$
      3202**DCL      7646<<ASSIGN   7657<<ASSIGN
S_D.EDEF_END$
      3206**DCL      7647<<ASSIGN   7659<<ASSIGN
S_D.EIS
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:27   
      3816**DCL      3845--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      3749**DCL      3750--REDEF    3764--REDEF
S_D.JDE
      3363**DCL      3364--REDEF
S_D.L$.VALUE
      2916**DCL      2922--REDEF    2930--REDEF    2933--REDEF    2936--REDEF    2939--REDEF
S_D.L$.VALUE.L
      2917**DCL      2918--REDEF    2919--REDEF
S_D.L6_MESSAGE_BUF
      3770**DCL      3772--REDEF
S_D.NODE
      3315**DCL      7645<<ASSIGN   7654>>ASSIGN   7656<<ASSIGN   7657>>ASSIGN   7658>>ASSIGN   7659>>ASSIGN
      7660>>ASSIGN
S_D.OUTPUT
      3736**DCL      3738--REDEF
S_D.REMOTE_MSG.FNCC
      3755**DCL      3756--REDEF
S_D.REMOTE_MSG.STXC
      3751**DCL      3752--REDEF
S_D.REMOTE_MSG.SUBFNCC
      3759**DCL      3760--REDEF
S_D.SDEF$
      3204**DCL      7648<<ASSIGN   7658<<ASSIGN
S_D.SDEF_END$
      3208**DCL      7649<<ASSIGN   7660<<ASSIGN
S_D.SV
      2815**DCL      2836--REDEF
S_D.UNODE.USENODE
      3412**DCL      7656>>ASSIGN
S_D$
      4067**DCL      2763--IMP-PTR  7645>>ASSIGN   7646>>ASSIGN   7647>>ASSIGN   7648>>ASSIGN   7649>>ASSIGN
      7654>>ASSIGN   7656>>ASSIGN   7656>>ASSIGN   7657>>ASSIGN   7657>>ASSIGN   7658>>ASSIGN   7658>>ASSIGN
      7659>>ASSIGN   7659>>ASSIGN   7660>>ASSIGN   7660>>ASSIGN
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:28   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDS$IC2NODE File=DXS$ND_SRCH.:E05TSI                          TUE 07/29/97 15:13 Page:29   
              MINI UREF LISTING

DDS$IC2NODE      28**PROC
