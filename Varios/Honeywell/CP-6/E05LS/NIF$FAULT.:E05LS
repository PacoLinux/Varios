VERSION E05

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:1    
        1        1        /*M* I/O Fault Handler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        /**/
        9        9        /*P*
       10       10              NAME:          NIF$FAULT
       11       11
       12       12              PURPOSE:       Post I/O system faults/specials to the appropriate handler.
       13       13
       14       14              REFERENCE:     IOM:  43A239854  (6000B IOM CENTRAL)
       15       15                             IOP:  G-22-0397  (IOPSW AND OS I/O INTERFACE FUNCT SPEC)
       16       16                             IMX:  58014273   (RPM/DIPPER IO)
       17       17        */
       18       18        /**/
       19       19        /*F*
       20       20              NAME:          NIF$FAULT
       21       21              PURPOSE:       NIF$FAULT packages appropriate info to report system
       22       22                             faults and special interrupts for the IOM/IOP.
       23       23              DESCRIPTION:   The IOM/IOP central reserves two channels on which system
       24       24                             faults (channel 1) and specials (channel 6) are reported.
       25       25                             This module accesses the FLTBUF and SPECBUF IOM structures
       26       26                             to obtain the information for the interrupt being
       27       27                             reported.  It then calls the appropriate poster with this
       28       28                             information.
       29       29        */
       30       30        /**/
       31       31        NIF$FAULT: PROC (IOM,INTLVL);
       32       32        /*D*
       33       33              NAME:          NIF$FAULT
       34       34              CALL:          CALL NIF$FAULT (IOM, INTLVL)
       35       35              INPUT:         IOM:  structure for IOM reporting this interrupt
       36       36                             INTLVL:  0 - system fault
       37       37              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:2    
       38       38              DESCRIPTION:   The FLTBUF is scanned for any new system faults.  When
       39       39                             a new fault is found, scratchpad access may be performed
       40       40                             to find the DCW that was being processed, if the status
       41       41                             indicates that a memory access failure occurred.  If this
       42       42                             is the case, processing of this particular fault will be
       43       43                             continued when the scratchpad access completion is
       44       44                             reported (via a level 0 interrupt on the wraparound
       45       45                             channel - processed by NIF$SAC).
       46       46                             In either case, the fault is reported to the appropriate
       47       47                             poster for additional handling if the indicated channel
       48       48                             was currently performing an IO.
       49       49        */
       50       50        /*
       51       51                Includes
       52       52        */
       53       53        %INCLUDE                EL_SUBS_C ;
       54      137        %INCLUDE                HF_LOCK_C ;
       55      151        %INCLUDE                HF_DATA_R ;
       56      194        %INCLUDE                NI_DATA_C ;
       57      307        %INCLUDE                NI_DATA_R ;
       58      744        %INCLUDE                NI_MACROS_C ;
       59     1011        /*
       60     1012                Parameters
       61     1013        */
       62     1014    1   DCL 1 INTLVL            UBIN(18) PARAM ;
       63     1015        %NI$IOM                 ( NAME=IOM, STCLASS=PARAM ) ;
       64     1020        /*
       65     1021                Entries
       66     1022        */
       67     1023    1   DCL 1 NIA$SPURINT       ENTRY(4) ;
       68     1024    1   DCL 1 NIB$SPEC          ENTRY(2) ;
       69     1025    1   DCL 1 NIQ$GETS          ENTRY(1) ALTRET ;
       70     1026    1   DCL 1 NIQ$RELS          ENTRY(1) ALTRET ;
       71     1027    1   DCL 1 NIS$SCRACC        ENTRY(1) ;
       72     1028    1   DCL 1 NIW$POSTER        ENTRY(3) ;
       73     1029        /*
       74     1030                Symrefs
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:3    
       75     1031        */
       76     1032    1   DCL 1 B$REAL$           PTR SYMREF ;
       77     1033    1   DCL 1 B_SCDCTX          UBIN WORD SYMREF ;
       78     1034        /*
       79     1035                Auto
       80     1036        */
       81     1037    1   DCL 1 I                 SBIN WORD ALIGNED AUTO ;
       82     1038    1   DCL 1 CHAN              SBIN WORD ALIGNED AUTO ;
       83     1039    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
       84     1040    1   DCL 1 FAULT$            PTR ALIGNED AUTO ;
       85     1041    1   DCL 1 IOS$              PTR ALIGNED AUTO ;
       86     1042    1   DCL 1 MBX$              PTR ALIGNED AUTO ;
       87     1043    1   DCL 1 POSTER            EPTR ALIGNED AUTO ;
       88     1044    1   DCL 1 SPEC$             PTR ALIGNED AUTO ;
       89     1045        %STATUS                 ( NAME=STATUS, STCLASS=AUTO ) ;
       90     1112        /*
       91     1113                Based
       92     1114        */
       93     1115        %NI$CHT                 ( NAME="CHT(0:%(N_MAXCHANS-1))", STCLASS="BASED(NI$CHT$)" )
              1115            ;
       94     1118        %NI$DCT                 ( NAME=DCT,          STCLASS=BASED ) ;
       95     1166        %NI$DQH                 ( NAME=DQH,          STCLASS="BASED(DQH$)" ) ;
       96     1189        %NI$DVT                 ( NAME=DVT,          STCLASS=BASED ) ;
       97     1196    1   DCL 1 FAULT             BASED(FAULT$) ALIGNED,
       98     1197    1         2 PROCESSED       BIT(1),
       99     1198    1         2 *               BIT(35) ;
      100     1199        %NI$REQ                 ( NAME=IOS,          STCLASS="BASED(IOS$)" ) ;
      101     1224        %N$REQ                  ( NAME=IOQ,          STCLASS=BASED ) ;
      102     1282        %NI$MBX                 ( NAME="MBX(0:63)",  STCLASS="BASED(MBX$)" ) ;
      103     1301    1   DCL 1 SPEC(0:0)         BASED(SPEC$) ALIGNED,
      104     1302    1         2 PRESENCE        BIT(1),
      105     1303    1         2 *               BIT(35) ;
      106     1304    1   DCL STAT                BIT(72) ALIGNED BASED  ;
      107     1305        /*
      108     1306                Constants
      109     1307        */
      110     1308    1   DCL MEMFLTS(0:63)       BIT(1) UNAL CONSTANT
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:4    
      111     1309    1                           INIT('0'B*4,'1'B,'0'B*4,'1'B*2,'0'B*2,'1'B,'0'B,'1'B,'0'B*0)
              1309                                    ;
      112     1310    1   DCL WACPCW              BIT(36) CONSTANT INIT('000000752007'O) ;
      113     1311                                                /*  Ind store,  SCR ACC Chan */
      114     1312        /**/
      115     1313        %SUB NEVER="WHILE('0'B)";
      116     1314        %SUB FOREVER="WHILE('1'B)";
      117     1315        %EJECT;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:5    
      118     1316    2           IF INTLVL~=0 THEN DO;
      119     1317    2              CHAN=IOM.IOM#*%N_MAXCHANS+1; /* FAULT CHANNEL */
      120     1318    2              STATUS='1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));
      121     1319    2              CALL SPURIOUS;
      122     1320    2              RETURN;
      123     1321    2              END;
      124     1322    1           MBX$=IOM.MBX$;
      125     1323    1   FLTLOOP:
      126     1324                %LOCK(G#=IOM.GATE);
      127     1327    1           FAULT$=PINCRW(B$REAL$,IOM.FLTBUF+IOM.NEXTF);
      128     1328    2           IF FAULT.PROCESSED THEN DO;
      129     1329                   %UNLOCK(G#=IOM.GATE);
      130     1332    2              RETURN;
      131     1333    2              END;
      132     1334    1           FAULT.PROCESSED='1'B;
      133     1335    1           STATUS=FAULT;
      134     1336    1           IOM.NEXTF=MOD(IOM.NEXTF+1,4);
      135     1337                %UNLOCK(G#=IOM.GATE);
      136     1340    1           FLTSTAT.PPMAJOR='1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));
      137     1341    1           CHAN=FLTSTAT.CHAN;
      138     1342    1           FLTSTAT.DCW=MBX.DCW(CHAN);
      139     1343    2           IF CHAN=2 THEN DO;
      140     1344    2              FLTSTAT.DCW=MBX.LPW(2);      /* CONNECT CHANNEL FAULT */
      141     1345    2              MBX.LPW(2)='0'B;
      142     1346    2              CHAN=IOM.LASTCON;
      143     1347    2              END;
      144     1348        /*N* DOESN'T LOOK LIKELY THAT WE'LL EVER GET TO DO SCRATCHPAD ACCESS??? */
      145     1349    1           IF HW_IOP OR FLTSTAT.SC=0 OR NOT MEMFLTS(FLTSTAT.IO) OR CHAN<8 THEN
      146     1350    1              GOTO NOSCRACC;
      147     1351
      148     1352                /*
      149     1353                   PREPARE FOR SCRATCHPAD ACCESS TO RETRIEVE PAYLOAD CHANNEL'S DCW:
      150     1354                      - GET IOS PACKET
      151     1355                      - SET IOS.WACPCW TO INDICATE AN INDIRECT DATA STORE USING
      152     1356                        THE SCRATCHPAD CHANNEL (7) AND INDICATE ADDRESS OF PAYLOAD
      153     1357                        CHANNEL'S MAILBOX DCW
      154     1358                      - TEMPORARILY STORE FLTSTAT IN IOS PACKET
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:6    
      155     1359                      - QUEUE THIS IO ON THE WRAPAROUND CHANNEL'S (4) QUEUE
      156     1360                */
      157     1361    1           CALL NIQ$GETS(IOS$) ALTRET(NOSCRACC);
      158     1362    1           IOS.WACPCW=WACPCW;
      159     1363    1           IOS.WACPCW.SCRADDR=4*CHAN+3;    /* ADDR OF PAYLOAD CHANNEL'S DCW */
      160     1364    1           ADDR(IOS.DCW(0))->STAT=STATUS;
      161     1365    1           DQH$=CHT.DQH$(IOM.IOM#*%N_MAXCHANS+4); /* WRAPAROUND CHANNEL DQH */
      162     1366                %LOCK(G#=IOM.GATE);
      163     1369                %ENQUEUE(P#=IOS,Q#=DQH.IO$);
      164     1372    1           IF DQH.STATE~=%BUSY THEN CALL NIS$SCRACC(DQH);
      165     1373                %UNLOCK(G#=IOM.GATE);
      166     1376    1           GOTO FLTLOOP;
      167     1377
      168     1378        /*D*
      169     1379           NAME:          NIF$SAC
      170     1380           CALL:          CALL NIF$SAC (IOM, INTLVL)
      171     1381           INPUT:         IOM:  structure for IOM reporting this interrupt
      172     1382                          INTLVL:  wraparound channel completion reported at level 0
      173     1383           ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
      174     1384           DESCRIPTION:   This routine performs end action functions for scratchpad
      175     1385                          access.  IOS packet is removed from the wraparound channel's
      176     1386                          queue and the next IO, if any, is started.
      177     1387                          The now-complete status (DCW is present in second word)
      178     1388                          is retrieved from the IOS packet.
      179     1389        */
      180     1390        /**/
      181     1391    1   NIF$SAC: ENTRY (IOM,INTLVL);
      182     1392
      183     1393    2           IF INTLVL~=0 THEN DO;
      184     1394    3              DO NEVER;
      185     1395    3   NOREQ:        ;
      186     1396                      %UNLOCK (G#=IOM.GATE);
      187     1399    3                 END;
      188     1400    2              CHAN=IOM.IOM#*%N_MAXCHANS+7; /* SCRATCHPAD CHANNEL */
      189     1401    2              STATUS='1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));
      190     1402    2              CALL SPURIOUS;
      191     1403    2              RETURN;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:7    
      192     1404    2              END;
      193     1405    1           DQH$=CHT.DQH$(IOM.IOM#*%N_MAXCHANS+4); /* WRAPAROUND CHANNEL */
      194     1406                %LOCK(G#=IOM.GATE);
      195     1409                %DEQUEUE(P#=IOS$,Q#=DQH.IO$,A#=NOREQ);
      196     1416    1           IF DQH.IO$~=ADDR(NIL) THEN CALL NIS$SCRACC(DQH);
      197     1417    1           ELSE DQH.STATE=%IDLE;
      198     1418                %UNLOCK(G#=IOM.GATE);
      199     1421    1           STATUS=ADDR(IOS.DCW(0))->STAT;  /* RETRIEVE STATUS FROM TEMP STORAGE */
      200     1422    1           CHAN=FLTSTAT.CHAN;
      201     1423    1           CALL NIQ$RELS(IOS$);
      202     1424                /*
      203     1425                   END NIF$SAC;
      204     1426                */
      205     1427
      206     1428    1   NOSCRACC:
      207     1429    1           CHAN=IOM.IOM#*%N_MAXCHANS+CHAN;
      208     1430    1           DQH$=CHT.DQH$(CHAN);
      209     1431    2           IF DQH$=ADDR(NIL) OR DQH.STATE~=%BUSY THEN DO;
      210     1432    2              CALL SPURIOUS;
      211     1433    2              GOTO FLTLOOP;
      212     1434    2              END;
      213     1435    1           POSTER=CHT.POSTER(CHAN);
      214     1436    1           IF DQH.IO$~=ADDR(NIL) THEN
      215     1437    1              IF DQH.IO$->IOQ.DCT$->DCT.TYPE =  %DV_MPC  AND
      216     1438    1                DQH.IO$->IOQ.DCT$->DCT.CTYP ~= %C_APC THEN
      217     1439    1                 POSTER = ENTADDR(NIW$POSTER) ;
      218     1440    1           IF POSTER~=ENTADDR(NIL) THEN CALL POSTER(DQH,INTLVL,STATUS);
      219     1441    1           GOTO FLTLOOP;
      220     1442        %EJECT;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:8    
      221     1443        /*D*
      222     1444              NAME:          NIF$SPEC
      223     1445              CALL:          CALL NIF$SPEC (IOM, INTLVL)
      224     1446              INPUT:         IOM:  structure for IOM reporting this interrupt
      225     1447                             INTLVL:  3 - special
      226     1448              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
      227     1449              DESCRIPTION:   The SPECBUF is scanned for any new special interrupts.
      228     1450                             Any special interrupts are reported to the appropriate
      229     1451                             poster for additional handling if the indicated channel
      230     1452                             is configured.
      231     1453                             Some checks are made for specials on the IOP which are
      232     1454                             intended for MSOS.  Also, device number 0 indicates
      233     1455                             the MPC unless the interrupt has occurred on a FIPS
      234     1456                             subsystem, where device 0 indicates a legal device number.
      235     1457        */
      236     1458        /**/
      237     1459    1   NIF$SPEC: ENTRY (IOM,INTLVL);
      238     1460
      239     1461    2           IF INTLVL~=3 THEN DO;
      240     1462    2              CHAN=IOM.IOM#*%N_MAXCHANS+6; /* SPECIAL STATUS */
      241     1463    2              STATUS='1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));
      242     1464    2              CALL SPURIOUS;
      243     1465    2              RETURN;
      244     1466    2              END;
      245     1467    1           MBX$=IOM.MBX$;
      246     1468    1   SPECLOOP:
      247     1469                %LOCK(G#=IOM.GATE);
      248     1472    1           SPEC$=PINCRW(B$REAL$,IOM.SPECBUF);
      249     1473    2           DO I=0 TO 15;
      250     1474    3              IF SPEC.PRESENCE(I) THEN DO;
      251     1475    3                 SPEC.PRESENCE(I)='0'B;
      252     1476    3                 STATUS=SPEC(I);
      253     1477    3                 IF I>IOM.MAXS THEN IOM.MAXS=I;
      254     1478                      %UNLOCK (G#=IOM.GATE);
      255     1481    3                 CHAN=IOM.IOM#*%N_MAXCHANS+SPSTAT.CHAN;
      256     1482    3                 DQH$=CHT.DQH$(CHAN);
      257     1483    4                 IF DQH$=ADDR(NIL) THEN DO;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:9    
      258     1484    4                    CALL SPURIOUS;
      259     1485    4                    GOTO CONT;
      260     1486    4                    END;
      261     1487    3                 IF HW_IOP THEN            /* MSOS */
      262     1488    4                 DO CASE(SPSTAT.CODE.BYTE3);
      263     1489    4                  CASE(%CHAN_SUSPEND,%CHAN_RELEASED,%CHAN_STOPPED,%CHAN_AVAILABLE);
      264     1490    4                    CALL NIB$SPEC(DQH,SPSTAT);
      265     1491    4                    GOTO CONT;
      266     1492    4                  CASE(ELSE);
      267     1493    4                  END;                     /* CASE */
      268     1494    3                 IF SPSTAT.DVN~=0 OR DQH.MPC$=ADDR(NIL) THEN
      269     1495    3                    GOTO DEVICE;
      270     1496    4                 ELSE DO;
      271     1497    4                    IF DQH.MPC$->DCT.DEV0LGL THEN
      272     1498    4   DEVICE:             POSTER=CHT.POSTER(CHAN);
      273     1499    4                    ELSE
      274     1500    4                       POSTER=ENTADDR(NIW$POSTER);
      275     1501    4                    END;
      276     1502    3                 CALL POSTER(DQH$->DQH,INTLVL,STATUS);
      277     1503    3   CONT:
      278     1504                      %LOCK (G#=IOM.GATE);
      279     1507    3                 END;
      280     1508    2              END;
      281     1509    1           IF MBX.DCW.ADDRESS(6)>IOM.SPECBUF+8 THEN MBX.DCW(6)=MBX.SCW(6);
      282     1510                %UNLOCK (G#=IOM.GATE);
      283     1513    1           RETURN;
      284     1514        %EJECT;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:10   
      285     1515        /*
      286     1516           LOG SPURIOUS INTERRUPTS
      287     1517        */
      288     1518    1   SPURIOUS: PROC;
      289     1519        /**/
      290     1520        %NI$DQH(NAME=DDQH,STCLASS=AUTO);
      291     1543        /**/
      292     1544    2           DDQH.IOCHAN=BINBIT(CHAN,SIZEB(DDQH.IOCHAN));
      293     1545    2           DDQH.STATE=%IDLE;
      294     1546    2           DDQH.STATUS.DOWN='1'B;
      295     1547    2           DDQH.STATUS.TND=0;
      296     1548    2           CALL NIA$SPURINT(DDQH,EL_SPURINT,INTLVL,STATUS);
      297     1549    2           RETURN;
      298     1550    2   END SPURIOUS;
      299     1551    1   END NIF$FAULT;
      300     1552        %EOD;

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:11   
--  Include file information  --

   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NIF$FAULT.

   Procedure NIF$FAULT requires 443 words for executable code.
   Procedure NIF$FAULT requires 40 words of local(AUTO) storage.

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:12   

 Object Unit name= NIF$FAULT                                  File name= NIF$FAULT.:E05TOU
 UTS= JUL 30 '97 03:31:15.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  NIF$FAULT
    1   Proc  even  none   443    673  NIF$FAULT
    2  RoData even  none     3      3  NIF$FAULT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  NIF$FAULT
     1    217                  yes      Std        2  NIF$SAC
     1    411                  yes      Std        2  NIF$SPEC
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:13   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 NIB$SPEC
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       2 NIM$DEQUEUE
 yes     yes           Std       1 NIQ$RELS
         yes           Std       3 NIW$POSTER
 yes     yes           Std       1 NIQ$GETS
         yes           Std       1 NIS$SCRACC
         yes           Std       2 NIM$ENQUEUE
         yes           Std       4 NIA$SPURINT
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     HW_IOP                                N$DCT$$                               N$FQ$
     NI$CHT$                               NI$FQ$                                NI$IBUF$
     NI$RP$                                B$REAL$                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:14   


        1        1        /*M* I/O Fault Handler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        /**/
        9        9        /*P*
       10       10              NAME:          NIF$FAULT
       11       11
       12       12              PURPOSE:       Post I/O system faults/specials to the appropriate handler.
       13       13
       14       14              REFERENCE:     IOM:  43A239854  (6000B IOM CENTRAL)
       15       15                             IOP:  G-22-0397  (IOPSW AND OS I/O INTERFACE FUNCT SPEC)
       16       16                             IMX:  58014273   (RPM/DIPPER IO)
       17       17        */
       18       18        /**/
       19       19        /*F*
       20       20              NAME:          NIF$FAULT
       21       21              PURPOSE:       NIF$FAULT packages appropriate info to report system
       22       22                             faults and special interrupts for the IOM/IOP.
       23       23              DESCRIPTION:   The IOM/IOP central reserves two channels on which system
       24       24                             faults (channel 1) and specials (channel 6) are reported.
       25       25                             This module accesses the FLTBUF and SPECBUF IOM structures
       26       26                             to obtain the information for the interrupt being
       27       27                             reported.  It then calls the appropriate poster with this
       28       28                             information.
       29       29        */
       30       30        /**/
       31       31        NIF$FAULT: PROC (IOM,INTLVL);

     31  1 000000   000000 700200 xent  NIF$FAULT    TSX0  ! X66_AUTO_2
         1 000001   000050 000002                    ZERO    40,2

       32       32        /*D*
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:15   
       33       33              NAME:          NIF$FAULT
       34       34              CALL:          CALL NIF$FAULT (IOM, INTLVL)
       35       35              INPUT:         IOM:  structure for IOM reporting this interrupt
       36       36                             INTLVL:  0 - system fault
       37       37              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
       38       38              DESCRIPTION:   The FLTBUF is scanned for any new system faults.  When
       39       39                             a new fault is found, scratchpad access may be performed
       40       40                             to find the DCW that was being processed, if the status
       41       41                             indicates that a memory access failure occurred.  If this
       42       42                             is the case, processing of this particular fault will be
       43       43                             continued when the scratchpad access completion is
       44       44                             reported (via a level 0 interrupt on the wraparound
       45       45                             channel - processed by NIF$SAC).
       46       46                             In either case, the fault is reported to the appropriate
       47       47                             poster for additional handling if the indicated channel
       48       48                             was currently performing an IO.
       49       49        */
       50       50        /*
       51       51                Includes
       52       52        */
       53       53        %INCLUDE                EL_SUBS_C ;
       54      137        %INCLUDE                HF_LOCK_C ;
       55      151        %INCLUDE                HF_DATA_R ;
       56      194        %INCLUDE                NI_DATA_C ;
       57      307        %INCLUDE                NI_DATA_R ;
       58      744        %INCLUDE                NI_MACROS_C ;
       59     1011        /*
       60     1012                Parameters
       61     1013        */
       62     1014    1   DCL 1 INTLVL            UBIN(18) PARAM ;
       63     1015        %NI$IOM                 ( NAME=IOM, STCLASS=PARAM ) ;
       64     1020        /*
       65     1021                Entries
       66     1022        */
       67     1023    1   DCL 1 NIA$SPURINT       ENTRY(4) ;
       68     1024    1   DCL 1 NIB$SPEC          ENTRY(2) ;
       69     1025    1   DCL 1 NIQ$GETS          ENTRY(1) ALTRET ;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:16   
       70     1026    1   DCL 1 NIQ$RELS          ENTRY(1) ALTRET ;
       71     1027    1   DCL 1 NIS$SCRACC        ENTRY(1) ;
       72     1028    1   DCL 1 NIW$POSTER        ENTRY(3) ;
       73     1029        /*
       74     1030                Symrefs
       75     1031        */
       76     1032    1   DCL 1 B$REAL$           PTR SYMREF ;
       77     1033    1   DCL 1 B_SCDCTX          UBIN WORD SYMREF ;
       78     1034        /*
       79     1035                Auto
       80     1036        */
       81     1037    1   DCL 1 I                 SBIN WORD ALIGNED AUTO ;
       82     1038    1   DCL 1 CHAN              SBIN WORD ALIGNED AUTO ;
       83     1039    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
       84     1040    1   DCL 1 FAULT$            PTR ALIGNED AUTO ;
       85     1041    1   DCL 1 IOS$              PTR ALIGNED AUTO ;
       86     1042    1   DCL 1 MBX$              PTR ALIGNED AUTO ;
       87     1043    1   DCL 1 POSTER            EPTR ALIGNED AUTO ;
       88     1044    1   DCL 1 SPEC$             PTR ALIGNED AUTO ;
       89     1045        %STATUS                 ( NAME=STATUS, STCLASS=AUTO ) ;
       90     1112        /*
       91     1113                Based
       92     1114        */
       93     1115        %NI$CHT                 ( NAME="CHT(0:%(N_MAXCHANS-1))", STCLASS="BASED(NI$CHT$)" )
              1115            ;
       94     1118        %NI$DCT                 ( NAME=DCT,          STCLASS=BASED ) ;
       95     1166        %NI$DQH                 ( NAME=DQH,          STCLASS="BASED(DQH$)" ) ;
       96     1189        %NI$DVT                 ( NAME=DVT,          STCLASS=BASED ) ;
       97     1196    1   DCL 1 FAULT             BASED(FAULT$) ALIGNED,
       98     1197    1         2 PROCESSED       BIT(1),
       99     1198    1         2 *               BIT(35) ;
      100     1199        %NI$REQ                 ( NAME=IOS,          STCLASS="BASED(IOS$)" ) ;
      101     1224        %N$REQ                  ( NAME=IOQ,          STCLASS=BASED ) ;
      102     1282        %NI$MBX                 ( NAME="MBX(0:63)",  STCLASS="BASED(MBX$)" ) ;
      103     1301    1   DCL 1 SPEC(0:0)         BASED(SPEC$) ALIGNED,
      104     1302    1         2 PRESENCE        BIT(1),
      105     1303    1         2 *               BIT(35) ;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:17   
      106     1304    1   DCL STAT                BIT(72) ALIGNED BASED  ;
      107     1305        /*
      108     1306                Constants
      109     1307        */
      110     1308    1   DCL MEMFLTS(0:63)       BIT(1) UNAL CONSTANT
      111     1309    1                          INIT('0'B*4,'1'B,'0'B*4,'1'B*2,'0'B*2,'1'B,'0'B,'1'B,'0'B*0)
              1309                                    ;
      112     1310    1   DCL WACPCW              BIT(36) CONSTANT INIT('000000752007'O) ;
      113     1311                                                /*  Ind store,  SCR ACC Chan */
      114     1312        /**/
      115     1313        %SUB NEVER="WHILE('0'B)";
      116     1314        %SUB FOREVER="WHILE('1'B)";
      117     1315        %EJECT;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:18   
      118     1316    2           IF INTLVL~=0 THEN DO;

   1316  1 000002   200004 470500                    LDP0    @INTLVL,,AUTO
         1 000003   000000 220100                    LDX0    0,,PR0
         1 000004   000021 600000 1                  TZE     s:1322

      119     1317    2              CHAN=IOM.IOM#*%N_MAXCHANS+1; /* FAULT CHANNEL */

   1317  1 000005   200003 471500                    LDP1    @IOM,,AUTO
         1 000006   100003 236100                    LDQ     3,,PR1
         1 000007   000021 772000                    QRL     17
         1 000010   001600 376007                    ANQ     896,DL
         1 000011   000001 036007                    ADLQ    1,DL
         1 000012   200006 756100                    STQ     CHAN,,AUTO

      120     1318    2              STATUS='1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));

   1318  1 000013   570000 235003                    LDA     -69632,DU
         1 000014   000000 236003                    LDQ     0,DU
         1 000015   200016 757100                    STAQ    STATUS,,AUTO

      121     1319    2              CALL SPURIOUS;

   1319  1 000016   000642 701000 1                  TSX1    SPURIOUS
         1 000017   000000 011000                    NOP     0

      122     1320    2              RETURN;

   1320  1 000020   000000 702200 xent               TSX2  ! X66_ARET

      123     1321    2              END;
      124     1322    1           MBX$=IOM.MBX$;

   1322  1 000021   200003 471500                    LDP1    @IOM,,AUTO
         1 000022   100002 236100                    LDQ     2,,PR1
         1 000023   200012 756100                    STQ     MBX$,,AUTO

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:19   
      125     1323    1   FLTLOOP:
      126     1324                %LOCK(G#=IOM.GATE);

   1325  1 000024   200003 630500       FLTLOOP      EPPR0   @IOM,,AUTO
         1 000025   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000026   000000 701000 xent               TSX1    HFC$LOCK
         1 000027   000000 011000                    NOP     0

      127     1327    1           FAULT$=PINCRW(B$REAL$,IOM.FLTBUF+IOM.NEXTF);

   1327  1 000030   200003 470500                    LDP0    @IOM,,AUTO
         1 000031   000003 236100                    LDQ     3,,PR0
         1 000032   000022 772000                    QRL     18
         1 000033   000077 376007                    ANQ     63,DL
         1 000034   200044 756100                    STQ     DDQH+19,,AUTO
         1 000035   000004 236100                    LDQ     4,,PR0
         1 000036   000022 772000                    QRL     18
         1 000037   200044 036100                    ADLQ    DDQH+19,,AUTO
         1 000040   000022 736000                    QLS     18
         1 000041   000000 036000 xsym               ADLQ    B$REAL$
         1 000042   200010 756100                    STQ     FAULT$,,AUTO

      128     1328    2           IF FAULT.PROCESSED THEN DO;

   1328  1 000043   200010 471500                    LDP1    FAULT$,,AUTO
         1 000044   100000 234100                    SZN     0,,PR1
         1 000045   000053 605000 1                  TPL     s:1334

      129     1329                   %UNLOCK(G#=IOM.GATE);

   1330  1 000046   200003 630500                    EPPR0   @IOM,,AUTO
         1 000047   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000050   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000051   000000 011000                    NOP     0

      130     1332    2              RETURN;

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:20   
   1332  1 000052   000000 702200 xent               TSX2  ! X66_ARET

      131     1333    2              END;
      132     1334    1           FAULT.PROCESSED='1'B;

   1334  1 000053   400000 236003                    LDQ     -131072,DU
         1 000054   100000 256100                    ORSQ    0,,PR1

      133     1335    1           STATUS=FAULT;

   1335  1 000055   100000 235100                    LDA     0,,PR1
         1 000056   000000 236003                    LDQ     0,DU
         1 000057   200016 757100                    STAQ    STATUS,,AUTO

      134     1336    1           IOM.NEXTF=MOD(IOM.NEXTF+1,4);

   1336  1 000060   000003 236100                    LDQ     3,,PR0
         1 000061   000022 772000                    QRL     18
         1 000062   000077 376007                    ANQ     63,DL
         1 000063   000001 036007                    ADLQ    1,DL
         1 000064   000003 376007                    ANQ     3,DL
         1 000065   000022 736000                    QLS     18
         1 000066   000003 752110                    STCQ    3,'10'O,PR0

      135     1337                %UNLOCK(G#=IOM.GATE);

   1338  1 000067   200003 630500                    EPPR0   @IOM,,AUTO
         1 000070   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000071   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000072   000000 011000                    NOP     0

      136     1340    1           FLTSTAT.PPMAJOR='1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));

   1340  1 000073   570000 236003                    LDQ     -69632,DU
         1 000074   200016 752140                    STCQ    STATUS,'40'O,AUTO

      137     1341    1           CHAN=FLTSTAT.CHAN;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:21   

   1341  1 000075   200016 236100                    LDQ     STATUS,,AUTO
         1 000076   000022 772000                    QRL     18
         1 000077   000777 376007                    ANQ     511,DL
         1 000100   200006 756100                    STQ     CHAN,,AUTO

      138     1342    1           FLTSTAT.DCW=MBX.DCW(CHAN);

   1342  1 000101   200006 235100                    LDA     CHAN,,AUTO
         1 000102   000002 735000                    ALS     2
         1 000103   200012 470500                    LDP0    MBX$,,AUTO
         1 000104   000003 236105                    LDQ     3,AL,PR0
         1 000105   200017 756100                    STQ     STATUS+1,,AUTO

      139     1343    2           IF CHAN=2 THEN DO;

   1343  1 000106   200006 235100                    LDA     CHAN,,AUTO
         1 000107   000002 115007                    CMPA    2,DL
         1 000110   000120 601000 1                  TNZ     s:1349

      140     1344    2              FLTSTAT.DCW=MBX.LPW(2);      /* CONNECT CHANNEL FAULT */

   1344  1 000111   000010 236100                    LDQ     8,,PR0
         1 000112   200017 756100                    STQ     STATUS+1,,AUTO

      141     1345    2              MBX.LPW(2)='0'B;

   1345  1 000113   000010 450100                    STZ     8,,PR0

      142     1346    2              CHAN=IOM.LASTCON;

   1346  1 000114   200003 471500                    LDP1    @IOM,,AUTO
         1 000115   100003 236100                    LDQ     3,,PR1
         1 000116   000033 772000                    QRL     27
         1 000117   200006 756100                    STQ     CHAN,,AUTO

      143     1347    2              END;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:22   

      144     1348        /*N* DOESN'T LOOK LIKELY THAT WE'LL EVER GET TO DO SCRATCHPAD ACCESS??? */
      145     1349    1           IF HW_IOP OR FLTSTAT.SC=0 OR NOT MEMFLTS(FLTSTAT.IO) OR CHAN<8 THEN

   1349  1 000120   000000 234000 xsym               SZN     HW_IOP
         1 000121   000325 604000 1                  TMI     NOSCRACC
         1 000122   200016 236100                    LDQ     STATUS,,AUTO
         1 000123   001700 316007                    CANQ    960,DL
         1 000124   000325 600000 1                  TZE     NOSCRACC
         1 000125   200016 236100                    LDQ     STATUS,,AUTO
         1 000126   000077 376007                    ANQ     63,DL
         1 000127   000000 066406                    CMPB    filb='0'B
         1 000130   000000 000001 0                  BDSC    MEMFLTS,Q                by=0,bit=0,n=1
         1 000131   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000132   000325 600000 1                  TZE     NOSCRACC
         1 000133   200006 235100                    LDA     CHAN,,AUTO
         1 000134   000010 115007                    CMPA    8,DL
         1 000135   000325 604000 1                  TMI     NOSCRACC

      146     1350    1              GOTO NOSCRACC;
      147     1351
      148     1352                /*
      149     1353                   PREPARE FOR SCRATCHPAD ACCESS TO RETRIEVE PAYLOAD CHANNEL'S DCW:
      150     1354                      - GET IOS PACKET
      151     1355                      - SET IOS.WACPCW TO INDICATE AN INDIRECT DATA STORE USING
      152     1356                        THE SCRATCHPAD CHANNEL (7) AND INDICATE ADDRESS OF PAYLOAD
      153     1357                        CHANNEL'S MAILBOX DCW
      154     1358                      - TEMPORARILY STORE FLTSTAT IN IOS PACKET
      155     1359                      - QUEUE THIS IO ON THE WRAPAROUND CHANNEL'S (4) QUEUE
      156     1360                */
      157     1361    1           CALL NIQ$GETS(IOS$) ALTRET(NOSCRACC);

   1361  1 000136   200011 631500                    EPPR1   IOS$,,AUTO
         1 000137   200044 451500                    STP1    DDQH+19,,AUTO
         1 000140   200044 630500                    EPPR0   DDQH+19,,AUTO
         1 000141   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000142   000000 701000 xent               TSX1    NIQ$GETS
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:23   
         1 000143   000325 702000 1                  TSX2    NOSCRACC

      158     1362    1           IOS.WACPCW=WACPCW;

   1362  1 000144   000002 235000 0                  LDA     WACPCW
         1 000145   000000 236003                    LDQ     0,DU
         1 000146   200011 470500                    LDP0    IOS$,,AUTO
         1 000147   000012 757100                    STAQ    10,,PR0

      159     1363    1           IOS.WACPCW.SCRADDR=4*CHAN+3;    /* ADDR OF PAYLOAD CHANNEL'S DCW */

   1363  1 000150   200006 235100                    LDA     CHAN,,AUTO
         1 000151   000002 735000                    ALS     2
         1 000152   000003 620005                    EAX0    3,AL
         1 000153   000012 740100                    STX0    10,,PR0

      160     1364    1           ADDR(IOS.DCW(0))->STAT=STATUS;

   1364  1 000154   200016 237100                    LDAQ    STATUS,,AUTO
         1 000155   000002 757100                    STAQ    2,,PR0

      161     1365    1           DQH$=CHT.DQH$(IOM.IOM#*%N_MAXCHANS+4); /* WRAPAROUND CHANNEL DQH */

   1365  1 000156   200003 470500                    LDP0    @IOM,,AUTO
         1 000157   000003 236100                    LDQ     3,,PR0
         1 000160   000020 772000                    QRL     16
         1 000161   003400 376007                    ANQ     1792,DL
         1 000162   000000 471400 xsym               LDP1    NI$CHT$
         1 000163   100010 236106                    LDQ     8,QL,PR1
         1 000164   200007 756100                    STQ     DQH$,,AUTO

      162     1366                %LOCK(G#=IOM.GATE);

   1367  1 000165   200003 630500                    EPPR0   @IOM,,AUTO
         1 000166   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000167   000000 701000 xent               TSX1    HFC$LOCK
         1 000170   000000 011000                    NOP     0
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:24   

      163     1369                %ENQUEUE(P#=IOS,Q#=DQH.IO$);

   1370  1 000171   200007 236100                    LDQ     DQH$,,AUTO
         1 000172   000014 036003                    ADLQ    12,DU
         1 000173   200011 235100                    LDA     IOS$,,AUTO
         1 000174   200044 757100                    STAQ    DDQH+19,,AUTO
         1 000175   200044 630500                    EPPR0   DDQH+19,,AUTO
         1 000176   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000177   000000 701000 xent               TSX1    NIM$ENQUEUE
         1 000200   000000 011000                    NOP     0

      164     1372    1           IF DQH.STATE~=%BUSY THEN CALL NIS$SCRACC(DQH);

   1372  1 000201   200007 470500                    LDP0    DQH$,,AUTO
         1 000202   000001 236100                    LDQ     1,,PR0
         1 000203   000077 376007                    ANQ     63,DL
         1 000204   000005 116007                    CMPQ    5,DL
         1 000205   000212 600000 1                  TZE     s:1374

   1372  1 000206   200007 630500                    EPPR0   DQH$,,AUTO
         1 000207   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000210   000000 701000 xent               TSX1    NIS$SCRACC
         1 000211   000000 011000                    NOP     0

      165     1373                %UNLOCK(G#=IOM.GATE);

   1374  1 000212   200003 630500                    EPPR0   @IOM,,AUTO
         1 000213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000214   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000215   000000 011000                    NOP     0

      166     1376    1           GOTO FLTLOOP;

   1376  1 000216   000024 710000 1                  TRA     FLTLOOP

      167     1377
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:25   
      168     1378        /*D*
      169     1379           NAME:          NIF$SAC
      170     1380           CALL:          CALL NIF$SAC (IOM, INTLVL)
      171     1381           INPUT:         IOM:  structure for IOM reporting this interrupt
      172     1382                          INTLVL:  wraparound channel completion reported at level 0
      173     1383           ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
      174     1384           DESCRIPTION:   This routine performs end action functions for scratchpad
      175     1385                          access.  IOS packet is removed from the wraparound channel's
      176     1386                          queue and the next IO, if any, is started.
      177     1387                          The now-complete status (DCW is present in second word)
      178     1388                          is retrieved from the IOS packet.
      179     1389        */
      180     1390        /**/
      181     1391    1   NIF$SAC: ENTRY (IOM,INTLVL);

   1391  1 000217   000000 700200 xent  NIF$SAC      TSX0  ! X66_AUTO_2
         1 000220   000050 000002                    ZERO    40,2

      182     1392
      183     1393    2           IF INTLVL~=0 THEN DO;

   1393  1 000221   200004 470500                    LDP0    @INTLVL,,AUTO
         1 000222   000000 220100                    LDX0    0,,PR0
         1 000223   000245 600000 1                  TZE     s:1405

      184     1394    3              DO NEVER;

   1394  1 000224   000231 710000 1                  TRA     s:1400

   1370  1 000225                       NOREQ        null
      185     1395    3   NOREQ:        ;
      186     1396                      %UNLOCK (G#=IOM.GATE);

   1397  1 000225   200003 630500                    EPPR0   @IOM,,AUTO
         1 000226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000227   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000230   000000 011000                    NOP     0
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:26   

      187     1399    3                 END;

      188     1400    2              CHAN=IOM.IOM#*%N_MAXCHANS+7; /* SCRATCHPAD CHANNEL */

   1400  1 000231   200003 470500                    LDP0    @IOM,,AUTO
         1 000232   000003 236100                    LDQ     3,,PR0
         1 000233   000021 772000                    QRL     17
         1 000234   001600 376007                    ANQ     896,DL
         1 000235   000007 036007                    ADLQ    7,DL
         1 000236   200006 756100                    STQ     CHAN,,AUTO

      189     1401    2              STATUS='1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));

   1401  1 000237   570000 235003                    LDA     -69632,DU
         1 000240   000000 236003                    LDQ     0,DU
         1 000241   200016 757100                    STAQ    STATUS,,AUTO

      190     1402    2              CALL SPURIOUS;

   1402  1 000242   000642 701000 1                  TSX1    SPURIOUS
         1 000243   000000 011000                    NOP     0

      191     1403    2              RETURN;

   1403  1 000244   000000 702200 xent               TSX2  ! X66_ARET

      192     1404    2              END;
      193     1405    1           DQH$=CHT.DQH$(IOM.IOM#*%N_MAXCHANS+4); /* WRAPAROUND CHANNEL */

   1405  1 000245   200003 471500                    LDP1    @IOM,,AUTO
         1 000246   100003 236100                    LDQ     3,,PR1
         1 000247   000020 772000                    QRL     16
         1 000250   003400 376007                    ANQ     1792,DL
         1 000251   000000 473400 xsym               LDP3    NI$CHT$
         1 000252   300010 236106                    LDQ     8,QL,PR3
         1 000253   200007 756100                    STQ     DQH$,,AUTO
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:27   

      194     1406                %LOCK(G#=IOM.GATE);

   1407  1 000254   200003 630500                    EPPR0   @IOM,,AUTO
         1 000255   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000256   000000 701000 xent               TSX1    HFC$LOCK
         1 000257   000000 011000                    NOP     0

      195     1409                %DEQUEUE(P#=IOS$,Q#=DQH.IO$,A#=NOREQ);

   1411  1 000260   200007 236100                    LDQ     DQH$,,AUTO
         1 000261   000014 036003                    ADLQ    12,DU
         1 000262   200045 756100                    STQ     DDQH+20,,AUTO
         1 000263   200011 630500                    EPPR0   IOS$,,AUTO
         1 000264   200044 450500                    STP0    DDQH+19,,AUTO
         1 000265   200044 630500                    EPPR0   DDQH+19,,AUTO
         1 000266   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000267   000000 701000 xent               TSX1    NIM$DEQUEUE
         1 000270   000225 702000 1                  TSX2    NOREQ

      196     1416    1           IF DQH.IO$~=ADDR(NIL) THEN CALL NIS$SCRACC(DQH);

   1416  1 000271   200007 470500                    LDP0    DQH$,,AUTO
         1 000272   000014 236100                    LDQ     12,,PR0
         1 000273   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000274   000302 600000 1                  TZE     s:1417

   1416  1 000275   200007 630500                    EPPR0   DQH$,,AUTO
         1 000276   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000277   000000 701000 xent               TSX1    NIS$SCRACC
         1 000300   000000 011000                    NOP     0
         1 000301   000304 710000 1                  TRA     s:1419

      197     1417    1           ELSE DQH.STATE=%IDLE;

   1417  1 000302   000000 236003                    LDQ     0,DU
         1 000303   000001 752101                    STCQ    1,'01'O,PR0
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:28   

      198     1418                %UNLOCK(G#=IOM.GATE);

   1419  1 000304   200003 630500                    EPPR0   @IOM,,AUTO
         1 000305   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000306   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000307   000000 011000                    NOP     0

      199     1421    1           STATUS=ADDR(IOS.DCW(0))->STAT;  /* RETRIEVE STATUS FROM TEMP STORAGE */

   1421  1 000310   200011 470500                    LDP0    IOS$,,AUTO
         1 000311   000002 237100                    LDAQ    2,,PR0
         1 000312   200016 757100                    STAQ    STATUS,,AUTO

      200     1422    1           CHAN=FLTSTAT.CHAN;

   1422  1 000313   200016 236100                    LDQ     STATUS,,AUTO
         1 000314   000022 772000                    QRL     18
         1 000315   000777 376007                    ANQ     511,DL
         1 000316   200006 756100                    STQ     CHAN,,AUTO

      201     1423    1           CALL NIQ$RELS(IOS$);

   1423  1 000317   200011 631500                    EPPR1   IOS$,,AUTO
         1 000320   200044 451500                    STP1    DDQH+19,,AUTO
         1 000321   200044 630500                    EPPR0   DDQH+19,,AUTO
         1 000322   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000323   000000 701000 xent               TSX1    NIQ$RELS
         1 000324   000000 011000                    NOP     0

      202     1424                /*
      203     1425                   END NIF$SAC;
      204     1426                */
      205     1427
      206     1428    1   NOSCRACC:
      207     1429    1           CHAN=IOM.IOM#*%N_MAXCHANS+CHAN;

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:29   
   1429  1 000325   200003 470500       NOSCRACC     LDP0    @IOM,,AUTO
         1 000326   000003 236100                    LDQ     3,,PR0
         1 000327   000021 772000                    QRL     17
         1 000330   001600 376007                    ANQ     896,DL
         1 000331   200006 036100                    ADLQ    CHAN,,AUTO
         1 000332   200006 756100                    STQ     CHAN,,AUTO

      208     1430    1           DQH$=CHT.DQH$(CHAN);

   1430  1 000333   200006 235100                    LDA     CHAN,,AUTO
         1 000334   000001 735000                    ALS     1
         1 000335   000000 471400 xsym               LDP1    NI$CHT$
         1 000336   100000 236105                    LDQ     0,AL,PR1
         1 000337   200007 756100                    STQ     DQH$,,AUTO

      209     1431    2           IF DQH$=ADDR(NIL) OR DQH.STATE~=%BUSY THEN DO;

   1431  1 000340   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000341   000347 600000 1                  TZE     s:1432
         1 000342   200007 473500                    LDP3    DQH$,,AUTO
         1 000343   300001 236100                    LDQ     1,,PR3
         1 000344   000077 376007                    ANQ     63,DL
         1 000345   000005 116007                    CMPQ    5,DL
         1 000346   000352 600000 1                  TZE     s:1435

      210     1432    2              CALL SPURIOUS;

   1432  1 000347   000642 701000 1                  TSX1    SPURIOUS
         1 000350   000000 011000                    NOP     0

      211     1433    2              GOTO FLTLOOP;

   1433  1 000351   000024 710000 1                  TRA     FLTLOOP

      212     1434    2              END;
      213     1435    1           POSTER=CHT.POSTER(CHAN);

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:30   
   1435  1 000352   100001 236105                    LDQ     1,AL,PR1
         1 000353   200013 756100                    STQ     POSTER,,AUTO

      214     1436    1           IF DQH.IO$~=ADDR(NIL) THEN

   1436  1 000354   300014 236100                    LDQ     12,,PR3
         1 000355   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000356   000373 600000 1                  TZE     s:1440

      215     1437    1              IF DQH.IO$->IOQ.DCT$->DCT.TYPE =  %DV_MPC  AND

   1437  1 000357   300014 474500                    LDP4    12,,PR3
         1 000360   400002 475500                    LDP5    2,,PR4
         1 000361   500007 236100                    LDQ     7,,PR5
         1 000362   007700 376007                    ANQ     4032,DL
         1 000363   000700 116007                    CMPQ    448,DL
         1 000364   000373 601000 1                  TNZ     s:1440
         1 000365   500007 236100                    LDQ     7,,PR5
         1 000366   070000 376003                    ANQ     28672,DU
         1 000367   030000 116003                    CMPQ    12288,DU
         1 000370   000373 600000 1                  TZE     s:1440

      216     1438    1                DQH.IO$->IOQ.DCT$->DCT.CTYP ~= %C_APC THEN
      217     1439    1                 POSTER = ENTADDR(NIW$POSTER) ;

   1439  1 000371   000000 636000 xent               EAQ     NIW$POSTER
         1 000372   200013 756100                    STQ     POSTER,,AUTO

      218     1440    1           IF POSTER~=ENTADDR(NIL) THEN CALL POSTER(DQH,INTLVL,STATUS);

   1440  1 000373   200013 236100                    LDQ     POSTER,,AUTO
         1 000374   000002 116000 xsym               CMPQ    B_VECTNIL+2
         1 000375   000410 600000 1                  TZE     s:1441

   1440  1 000376   200016 634500                    EPPR4   STATUS,,AUTO
         1 000377   200046 454500                    STP4    DDQH+21,,AUTO
         1 000400   200004 236100                    LDQ     @INTLVL,,AUTO
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:31   
         1 000401   200007 235100                    LDA     DQH$,,AUTO
         1 000402   200044 757100                    STAQ    DDQH+19,,AUTO
         1 000403   200044 630500                    EPPR0   DDQH+19,,AUTO
         1 000404   200013 220100                    LDX0    POSTER,,AUTO
         1 000405   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000406   000000 701010                    TSX1    0,X0
         1 000407   000000 011000                    NOP     0

      219     1441    1           GOTO FLTLOOP;

   1441  1 000410   000024 710000 1                  TRA     FLTLOOP

      220     1442        %EJECT;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:32   
      221     1443        /*D*
      222     1444              NAME:          NIF$SPEC
      223     1445              CALL:          CALL NIF$SPEC (IOM, INTLVL)
      224     1446              INPUT:         IOM:  structure for IOM reporting this interrupt
      225     1447                             INTLVL:  3 - special
      226     1448              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
      227     1449              DESCRIPTION:   The SPECBUF is scanned for any new special interrupts.
      228     1450                             Any special interrupts are reported to the appropriate
      229     1451                             poster for additional handling if the indicated channel
      230     1452                             is configured.
      231     1453                             Some checks are made for specials on the IOP which are
      232     1454                             intended for MSOS.  Also, device number 0 indicates
      233     1455                             the MPC unless the interrupt has occurred on a FIPS
      234     1456                             subsystem, where device 0 indicates a legal device number.
      235     1457        */
      236     1458        /**/
      237     1459    1   NIF$SPEC: ENTRY (IOM,INTLVL);

   1459  1 000411   000000 700200 xent  NIF$SPEC     TSX0  ! X66_AUTO_2
         1 000412   000050 000002                    ZERO    40,2

      238     1460
      239     1461    2           IF INTLVL~=3 THEN DO;

   1461  1 000413   200004 470500                    LDP0    @INTLVL,,AUTO
         1 000414   000000 220100                    LDX0    0,,PR0
         1 000415   000003 100003                    CMPX0   3,DU
         1 000416   000433 600000 1                  TZE     s:1467

      240     1462    2              CHAN=IOM.IOM#*%N_MAXCHANS+6; /* SPECIAL STATUS */

   1462  1 000417   200003 471500                    LDP1    @IOM,,AUTO
         1 000420   100003 236100                    LDQ     3,,PR1
         1 000421   000021 772000                    QRL     17
         1 000422   001600 376007                    ANQ     896,DL
         1 000423   000006 036007                    ADLQ    6,DL
         1 000424   200006 756100                    STQ     CHAN,,AUTO
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:33   

      241     1463    2              STATUS='1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));

   1463  1 000425   570000 235003                    LDA     -69632,DU
         1 000426   000000 236003                    LDQ     0,DU
         1 000427   200016 757100                    STAQ    STATUS,,AUTO

      242     1464    2              CALL SPURIOUS;

   1464  1 000430   000642 701000 1                  TSX1    SPURIOUS
         1 000431   000000 011000                    NOP     0

      243     1465    2              RETURN;

   1465  1 000432   000000 702200 xent               TSX2  ! X66_ARET

      244     1466    2              END;
      245     1467    1           MBX$=IOM.MBX$;

   1467  1 000433   200003 471500                    LDP1    @IOM,,AUTO
         1 000434   100002 236100                    LDQ     2,,PR1
         1 000435   200012 756100                    STQ     MBX$,,AUTO

      246     1468    1   SPECLOOP:
      247     1469                %LOCK(G#=IOM.GATE);

   1470  1 000436   200003 630500       SPECLOOP     EPPR0   @IOM,,AUTO
         1 000437   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000440   000000 701000 xent               TSX1    HFC$LOCK
         1 000441   000000 011000                    NOP     0

      248     1472    1           SPEC$=PINCRW(B$REAL$,IOM.SPECBUF);

   1472  1 000442   200003 470500                    LDP0    @IOM,,AUTO
         1 000443   000004 720100                    LXL0    4,,PR0
         1 000444   000000 636010                    EAQ     0,X0
         1 000445   000000 036000 xsym               ADLQ    B$REAL$
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:34   
         1 000446   200014 756100                    STQ     SPEC$,,AUTO

      249     1473    2           DO I=0 TO 15;

   1473  1 000447   200005 450100                    STZ     I,,AUTO

      250     1474    3              IF SPEC.PRESENCE(I) THEN DO;

   1474  1 000450   200014 470500                    LDP0    SPEC$,,AUTO
         1 000451   200005 720100                    LXL0    I,,AUTO
         1 000452   000000 234110                    SZN     0,X0,PR0
         1 000453   000621 605000 1                  TPL     s:1508

      251     1475    3                 SPEC.PRESENCE(I)='0'B;

   1475  1 000454   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000455   000000 356110                    ANSQ    0,X0,PR0

      252     1476    3                 STATUS=SPEC(I);

   1476  1 000456   000000 235110                    LDA     0,X0,PR0
         1 000457   000000 236003                    LDQ     0,DU
         1 000460   200016 757100                    STAQ    STATUS,,AUTO

      253     1477    3                 IF I>IOM.MAXS THEN IOM.MAXS=I;

   1477  1 000461   200003 471500                    LDP1    @IOM,,AUTO
         1 000462   100003 236100                    LDQ     3,,PR1
         1 000463   000006 772000                    QRL     6
         1 000464   000077 376007                    ANQ     63,DL
         1 000465   200005 116100                    CMPQ    I,,AUTO
         1 000466   000472 605000 1                  TPL     s:1479

   1477  1 000467   200005 236100                    LDQ     I,,AUTO
         1 000470   000006 736000                    QLS     6
         1 000471   100003 752102                    STCQ    3,'02'O,PR1

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:35   
      254     1478                      %UNLOCK (G#=IOM.GATE);

   1479  1 000472   200003 630500                    EPPR0   @IOM,,AUTO
         1 000473   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000474   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000475   000000 011000                    NOP     0

      255     1481    3                 CHAN=IOM.IOM#*%N_MAXCHANS+SPSTAT.CHAN;

   1481  1 000476   200016 236100                    LDQ     STATUS,,AUTO
         1 000477   000033 772000                    QRL     27
         1 000500   000077 376007                    ANQ     63,DL
         1 000501   200044 756100                    STQ     DDQH+19,,AUTO
         1 000502   200003 470500                    LDP0    @IOM,,AUTO
         1 000503   000003 236100                    LDQ     3,,PR0
         1 000504   000021 772000                    QRL     17
         1 000505   001600 376007                    ANQ     896,DL
         1 000506   200044 036100                    ADLQ    DDQH+19,,AUTO
         1 000507   200006 756100                    STQ     CHAN,,AUTO

      256     1482    3                 DQH$=CHT.DQH$(CHAN);

   1482  1 000510   200006 235100                    LDA     CHAN,,AUTO
         1 000511   000001 735000                    ALS     1
         1 000512   000000 471400 xsym               LDP1    NI$CHT$
         1 000513   100000 236105                    LDQ     0,AL,PR1
         1 000514   200007 756100                    STQ     DQH$,,AUTO

      257     1483    4                 IF DQH$=ADDR(NIL) THEN DO;

   1483  1 000515   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000516   000522 601000 1                  TNZ     s:1487

      258     1484    4                    CALL SPURIOUS;

   1484  1 000517   000642 701000 1                  TSX1    SPURIOUS
         1 000520   000000 011000                    NOP     0
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:36   

      259     1485    4                    GOTO CONT;

   1485  1 000521   000615 710000 1                  TRA     CONT

      260     1486    4                    END;
      261     1487    3                 IF HW_IOP THEN            /* MSOS */

   1487  1 000522   000000 234000 xsym               SZN     HW_IOP
         1 000523   000564 605000 1                  TPL     s:1494

      262     1488    4                 DO CASE(SPSTAT.CODE.BYTE3);

   1488  1 000524   200016 236100                    LDQ     STATUS,,AUTO
         1 000525   000011 772000                    QRL     9
         1 000526   000777 376007                    ANQ     511,DL
         1 000527   000021 116007                    CMPQ    17,DL
         1 000530   000532 602006 1                  TNC     s:1488+6,QL
         1 000531   000564 710000 1                  TRA     s:1494
         1 000532   000564 710000 1                  TRA     s:1494
         1 000533   000553 710000 1                  TRA     s:1490
         1 000534   000553 710000 1                  TRA     s:1490
         1 000535   000564 710000 1                  TRA     s:1494
         1 000536   000564 710000 1                  TRA     s:1494
         1 000537   000564 710000 1                  TRA     s:1494
         1 000540   000564 710000 1                  TRA     s:1494
         1 000541   000564 710000 1                  TRA     s:1494
         1 000542   000553 710000 1                  TRA     s:1490
         1 000543   000564 710000 1                  TRA     s:1494
         1 000544   000564 710000 1                  TRA     s:1494
         1 000545   000564 710000 1                  TRA     s:1494
         1 000546   000564 710000 1                  TRA     s:1494
         1 000547   000564 710000 1                  TRA     s:1494
         1 000550   000564 710000 1                  TRA     s:1494
         1 000551   000564 710000 1                  TRA     s:1494
         1 000552   000553 710000 1                  TRA     s:1490

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:37   
      263     1489    4                  CASE(%CHAN_SUSPEND,%CHAN_RELEASED,%CHAN_STOPPED,%CHAN_AVAILABLE);

      264     1490    4                    CALL NIB$SPEC(DQH,SPSTAT);

   1490  1 000553   200016 633500                    EPPR3   STATUS,,AUTO
         1 000554   200045 453500                    STP3    DDQH+20,,AUTO
         1 000555   200007 236100                    LDQ     DQH$,,AUTO
         1 000556   200044 756100                    STQ     DDQH+19,,AUTO
         1 000557   200044 630500                    EPPR0   DDQH+19,,AUTO
         1 000560   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000561   000000 701000 xent               TSX1    NIB$SPEC
         1 000562   000000 011000                    NOP     0

      265     1491    4                    GOTO CONT;

   1491  1 000563   000615 710000 1                  TRA     CONT

      266     1492    4                  CASE(ELSE);

      267     1493    4                  END;                     /* CASE */

      268     1494    3                 IF SPSTAT.DVN~=0 OR DQH.MPC$=ADDR(NIL) THEN

   1494  1 000564   200016 236100                    LDQ     STATUS,,AUTO
         1 000565   000077 316003                    CANQ    63,DU
         1 000566   000576 601000 1                  TNZ     DEVICE
         1 000567   200007 473500                    LDP3    DQH$,,AUTO
         1 000570   300015 236100                    LDQ     13,,PR3
         1 000571   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000572   000576 600000 1                  TZE     DEVICE

      269     1495    3                    GOTO DEVICE;
      270     1496    4                 ELSE DO;

      271     1497    4                    IF DQH.MPC$->DCT.DEV0LGL THEN

   1497  1 000573   300015 474500                    LDP4    13,,PR3
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:38   
         1 000574   400007 234100                    SZN     7,,PR4
         1 000575   000601 605000 1                  TPL     s:1500

      272     1498    4   DEVICE:             POSTER=CHT.POSTER(CHAN);

   1498  1 000576   100001 236105       DEVICE       LDQ     1,AL,PR1
         1 000577   200013 756100                    STQ     POSTER,,AUTO
         1 000600   000603 710000 1                  TRA     s:1502

      273     1499    4                    ELSE
      274     1500    4                       POSTER=ENTADDR(NIW$POSTER);

   1500  1 000601   000000 636000 xent               EAQ     NIW$POSTER
         1 000602   200013 756100                    STQ     POSTER,,AUTO

      275     1501    4                    END;

      276     1502    3                 CALL POSTER(DQH$->DQH,INTLVL,STATUS);

   1502  1 000603   200016 633500                    EPPR3   STATUS,,AUTO
         1 000604   200046 453500                    STP3    DDQH+21,,AUTO
         1 000605   200004 236100                    LDQ     @INTLVL,,AUTO
         1 000606   200007 235100                    LDA     DQH$,,AUTO
         1 000607   200044 757100                    STAQ    DDQH+19,,AUTO
         1 000610   200044 630500                    EPPR0   DDQH+19,,AUTO
         1 000611   200013 220100                    LDX0    POSTER,,AUTO
         1 000612   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000613   000000 701010                    TSX1    0,X0
         1 000614   000000 011000                    NOP     0

      277     1503    3   CONT:
      278     1504                      %LOCK (G#=IOM.GATE);

   1505  1 000615   200003 630500       CONT         EPPR0   @IOM,,AUTO
         1 000616   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000617   000000 701000 xent               TSX1    HFC$LOCK
         1 000620   000000 011000                    NOP     0
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:39   

      279     1507    3                 END;

      280     1508    2              END;

   1508  1 000621   200005 054100                    AOS     I,,AUTO
         1 000622   200005 235100                    LDA     I,,AUTO
         1 000623   000017 115007                    CMPA    15,DL
         1 000624   000450 604400 1                  TMOZ    s:1474

      281     1509    1           IF MBX.DCW.ADDRESS(6)>IOM.SPECBUF+8 THEN MBX.DCW(6)=MBX.SCW(6);

   1509  1 000625   200003 470500                    LDP0    @IOM,,AUTO
         1 000626   000004 720100                    LXL0    4,,PR0
         1 000627   000010 621010                    EAX1    8,X0
         1 000630   200012 471500                    LDP1    MBX$,,AUTO
         1 000631   100033 101100                    CMPX1   27,,PR1
         1 000632   000635 603000 1                  TRC     s:1511

   1509  1 000633   100032 236100                    LDQ     26,,PR1
         1 000634   100033 756100                    STQ     27,,PR1

      282     1510                %UNLOCK (G#=IOM.GATE);

   1511  1 000635   200003 630500                    EPPR0   @IOM,,AUTO
         1 000636   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000637   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000640   000000 011000                    NOP     0

      283     1513    1           RETURN;

   1513  1 000641   000000 702200 xent               TSX2  ! X66_ARET

      284     1514        %EJECT;
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:40   
      285     1515        /*
      286     1516           LOG SPURIOUS INTERRUPTS
      287     1517        */
      288     1518    1   SPURIOUS: PROC;

   1518  1 000642   200020 741300       SPURIOUS     STX1  ! STATUS+2,,AUTO

      289     1519        /**/
      290     1520        %NI$DQH(NAME=DDQH,STCLASS=AUTO);
      291     1543        /**/
      292     1544    2           DDQH.IOCHAN=BINBIT(CHAN,SIZEB(DDQH.IOCHAN));

   1544  1 000643   200006 236100                    LDQ     CHAN,,AUTO
         1 000644   000033 736000                    QLS     27
         1 000645   000011 772000                    QRL     9
         1 000646   200022 552120                    STBQ    DDQH+1,'20'O,AUTO

      293     1545    2           DDQH.STATE=%IDLE;

   1545  1 000647   000000 236003                    LDQ     0,DU
         1 000650   200022 752101                    STCQ    DDQH+1,'01'O,AUTO

      294     1546    2           DDQH.STATUS.DOWN='1'B;

   1546  1 000651   200000 236003                    LDQ     65536,DU
         1 000652   200022 256100                    ORSQ    DDQH+1,,AUTO

      295     1547    2           DDQH.STATUS.TND=0;

   1547  1 000653   000000 236000 2                  LDQ     0
         1 000654   200022 356100                    ANSQ    DDQH+1,,AUTO

      296     1548    2           CALL NIA$SPURINT(DDQH,EL_SPURINT,INTLVL,STATUS);

   1548  1 000655   200016 630500                    EPPR0   STATUS,,AUTO
         1 000656   200047 450500                    STP0    DDQH+22,,AUTO
         1 000657   200004 236100                    LDQ     @INTLVL,,AUTO
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:41   
         1 000660   200046 756100                    STQ     DDQH+21,,AUTO
         1 000661   000002 236000 2                  LDQ     2
         1 000662   200045 756100                    STQ     DDQH+20,,AUTO
         1 000663   200021 631500                    EPPR1   DDQH,,AUTO
         1 000664   200044 451500                    STP1    DDQH+19,,AUTO
         1 000665   200044 630500                    EPPR0   DDQH+19,,AUTO
         1 000666   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000667   000000 701000 xent               TSX1    NIA$SPURINT
         1 000670   000000 011000                    NOP     0

      297     1549    2           RETURN;

   1549  1 000671   200020 221300                    LDX1  ! STATUS+2,,AUTO
         1 000672   000001 702211                    TSX2  ! 1,X1

MEMFLTS
 Sect OctLoc
   0     000   020624 000000   000000 0000**                                    ........

WACPCW
 Sect OctLoc
   0     002   000000 752007                                                    ....

(unnamed)
 Sect OctLoc
   2     000   703777 777777   000000 000315   000001 006000                    ............
      298     1550    2   END SPURIOUS;
      299     1551    1   END NIF$FAULT;
      300     1552        %EOD;

PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:42   
--  Include file information  --

   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NIF$FAULT.
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:43   

 **** Variables and constants ****

  ****  Section 000 RoData NIF$FAULT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 MEMFLTS(0:63)              2-0-0/b BIT         r     1 WACPCW

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @INTLVL                    3-0-0/w PTR         r     1 @IOM
     6-0-0/w SBIN        r     1 CHAN                      21-0-0/w STRC(648)   r     1 DDQH
     7-0-0/w PTR         r     1 DQH$                      10-0-0/w PTR         r     1 FAULT$
    16-0-0/d STRC(72)    r     1 FLTSTAT                    5-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN(18)    r     1 INTLVL                    *0-0-0/w STRC(252)   r     1 IOM
    11-0-0/w PTR         r     1 IOS$                      12-0-0/w PTR         r     1 MBX$
    13-0-0/w EPTR        r     1 POSTER                    14-0-0/w PTR         r     1 SPEC$
    16-0-0/d STRC(72)    r     1 SPSTAT                    16-0-0/d STRC(72)    r     1 STATUS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$REAL$                    0-0-0/w BIT         r     1 HW_IOP
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$CHT$                    0-0-0/w PTR         r     1 NI$FQ$
     0-0-0/w PTR         r     1 NI$IBUF$                   0-0-0/w PTR         r     1 NI$RP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:44   

     0-0-0/w STRC(72)    r     1 CHT(0:127)                 0-0-0/w STRC(1332)  r     1 DCT
     0-0-0/w STRC(648)   r     1 DQH                        0-0-0/w STRC        r     1 FAULT
     0-0-0/d STRC(1080)  r     1 IOQ                        0-0-0/d STRC(504)   r     1 IOS
     0-0-0/d STRC(144)   r     1 MBX(0:63)                  0-0-0/w STRC        r     1 SPEC(0:0)
     0-0-0/w BIT (72)    r     1 STAT


   Procedure NIF$FAULT requires 443 words for executable code.
   Procedure NIF$FAULT requires 40 words of local(AUTO) storage.
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:45   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:46   
          MINI XREF LISTING

B$REAL$
      1032**DCL      1327>>ASSIGN   1472>>ASSIGN
CHAN
      1038**DCL      1317<<ASSIGN   1341<<ASSIGN   1342>>ASSIGN   1343>>IF       1346<<ASSIGN   1349>>IF
      1363>>ASSIGN   1400<<ASSIGN   1422<<ASSIGN   1429<<ASSIGN   1429>>ASSIGN   1430>>ASSIGN   1435>>ASSIGN
      1462<<ASSIGN   1481<<ASSIGN   1482>>ASSIGN   1498>>ASSIGN   1544>>ASSIGN
CHT.DQH$
      1116**DCL      1365>>ASSIGN   1405>>ASSIGN   1430>>ASSIGN   1482>>ASSIGN
CHT.POSTER
      1116**DCL      1435>>ASSIGN   1498>>ASSIGN
CONT
      1505**LABEL    1485--GOTO     1491--GOTO
DCT.CTYP
      1135**DCL      1437>>IF
DCT.DEV0LGL
      1134**DCL      1497>>IF
DCT.DP
      1147**DCL      1154--REDEF    1157--REDEF    1158--REDEF    1160--REDEF    1160--REDEF    1161--REDEF
      1162--REDEF    1162--REDEF
DCT.MPC.IOCHANX
      1155**DCL      1155--REDEF
DCT.TYPE
      1137**DCL      1437>>IF
DDQH IN PROCEDURE SPURIOUS
      1529**DCL      1548<>CALL
DDQH.IOCHAN IN PROCEDURE SPURIOUS
      1532**DCL      1544<<ASSIGN   1544--ASSIGN
DDQH.IOCHANX IN PROCEDURE SPURIOUS
      1531**DCL      1532--REDEF
DDQH.MBX$ IN PROCEDURE SPURIOUS
      1540**DCL      1541--REDEF
DDQH.STATE IN PROCEDURE SPURIOUS
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:47   
      1533**DCL      1545<<ASSIGN
DDQH.STATUS.DOWN IN PROCEDURE SPURIOUS
      1529**DCL      1546<<ASSIGN
DDQH.STATUS.TND IN PROCEDURE SPURIOUS
      1530**DCL      1547<<ASSIGN
DEVICE
      1498**LABEL    1495--GOTO
DQH
      1175**DCL      1372<>CALL     1416<>CALL     1440<>CALL     1490<>CALL     1502<>CALL
DQH.IO$
      1182**DCL      1370<>CALL     1411<>CALL     1416>>IF       1436>>IF       1437>>IF       1437>>IF
DQH.IOCHANX
      1177**DCL      1178--REDEF
DQH.MBX$
      1186**DCL      1187--REDEF
DQH.MPC$
      1182**DCL      1494>>IF       1497>>IF
DQH.STATE
      1179**DCL      1372>>IF       1417<<ASSIGN   1431>>IF
DQH$
      1039**DCL      1175--IMP-PTR  1365<<ASSIGN   1370>>CALL     1372>>IF       1372>>CALL     1405<<ASSIGN
      1411>>CALL     1416>>IF       1416>>CALL     1417>>ASSIGN   1430<<ASSIGN   1431>>IF       1431>>IF
      1436>>IF       1437>>IF       1437>>IF       1440>>CALL     1482<<ASSIGN   1483>>IF       1490>>CALL
      1494>>IF       1497>>IF       1502>>CALL
DVT.MPC
      1192**DCL      1193--REDEF
FAULT
      1196**DCL      1335>>ASSIGN
FAULT.PROCESSED
      1197**DCL      1328>>IF       1334<<ASSIGN
FAULT$
      1040**DCL      1196--IMP-PTR  1327<<ASSIGN   1328>>IF       1334>>ASSIGN   1335>>ASSIGN
FLTLOOP
      1325**LABEL    1376--GOTO     1433--GOTO     1441--GOTO
FLTSTAT.CHAN
      1083**DCL      1341>>ASSIGN   1422>>ASSIGN
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:48   
FLTSTAT.DCW
      1088**DCL      1342<<ASSIGN   1344<<ASSIGN
FLTSTAT.IO
      1087**DCL      1349>>IF
FLTSTAT.PPMAJOR
      1081**DCL      1318--ASSIGN   1340<<ASSIGN   1340--ASSIGN   1401--ASSIGN   1463--ASSIGN
FLTSTAT.SC
      1086**DCL      1349>>IF
HFC$LOCK
       150**DCL-ENT  1325--CALL     1367--CALL     1407--CALL     1470--CALL     1505--CALL
HFC$UNLOCK
       150**DCL-ENT  1330--CALL     1338--CALL     1374--CALL     1397--CALL     1419--CALL     1479--CALL
      1511--CALL
HW_IOP
       190**DCL      1349>>IF       1487>>IF
I
      1037**DCL      1473<<DOINDEX  1474>>IF       1475>>ASSIGN   1476>>ASSIGN   1477>>IF       1477>>ASSIGN
INTLVL
      1014**DCL        31--PROC     1316>>IF       1391--ENTRY    1393>>IF       1440<>CALL     1459--ENTRY
      1461>>IF       1502<>CALL     1548<>CALL
IOM
      1016**DCL        31--PROC     1391--ENTRY    1459--ENTRY
IOM.FLTBUF
      1017**DCL      1327>>ASSIGN
IOM.GATE
      1016**DCL      1325<>CALL     1330<>CALL     1338<>CALL     1367<>CALL     1374<>CALL     1397<>CALL
      1407<>CALL     1419<>CALL     1470<>CALL     1479<>CALL     1505<>CALL     1511<>CALL
IOM.IOM#
      1016**DCL      1317>>ASSIGN   1365>>ASSIGN   1400>>ASSIGN   1405>>ASSIGN   1429>>ASSIGN   1462>>ASSIGN
      1481>>ASSIGN
IOM.LASTCON
      1016**DCL      1346>>ASSIGN
IOM.MAXS
      1017**DCL      1477>>IF       1477<<ASSIGN
IOM.MBX$
      1016**DCL      1322>>ASSIGN   1467>>ASSIGN
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:49   
IOM.NEXTF
      1016**DCL      1327>>ASSIGN   1336<<ASSIGN   1336>>ASSIGN
IOM.SPECBUF
      1018**DCL      1472>>ASSIGN   1509>>IF
IOQ.BUFADDR
      1242**DCL      1243--REDEF    1243--REDEF
IOQ.DCT$
      1234**DCL      1437>>IF       1437>>IF
IOQ.DLA.DRELADDR
      1234**DCL      1234--REDEF
IOQ.DVE.EOMCHAR
      1271**DCL      1272--REDEF
IOQ.EAINFO
      1265**DCL      1265--REDEF
IOQ.EAINFOX
      1265**DCL      1266--REDEF
IOQ.EVNTINFO
      1266**DCL      1266--REDEF
IOQ.STATUS
      1247**DCL      1253--REDEF
IOS
      1208**DCL      1370<>CALL
IOS.DCW
      1210**DCL      1213--REDEF    1364--ASSIGN   1421--ASSIGN
IOS.DCW.TALLY
      1211**DCL      1211--REDEF
IOS.IDCW.EXTA
      1213**DCL      1213--REDEF
IOS.PCW
      1215**DCL      1219--REDEF
IOS.SEEK
      1220**DCL      1221--REDEF    1222--REDEF
IOS.WACPCW
      1219**DCL      1362<<ASSIGN
IOS.WACPCW.SCRADDR
      1220**DCL      1363<<ASSIGN
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:50   
IOS$
      1041**DCL      1208--IMP-PTR  1361<>CALL     1362>>ASSIGN   1363>>ASSIGN   1364>>ASSIGN   1370>>CALL
      1411<>CALL     1421>>ASSIGN   1423<>CALL
MBX.DCW
      1297**DCL      1342>>ASSIGN   1509<<ASSIGN
MBX.DCW.ADDRESS
      1297**DCL      1509>>IF
MBX.DCW.CONTROL.AE
      1298**DCL      1298--REDEF
MBX.LPW
      1293**DCL      1344>>ASSIGN   1345<<ASSIGN
MBX.LPW.CONTROL.AE
      1294**DCL      1294--REDEF
MBX.SCW
      1296**DCL      1509>>ASSIGN
MBX$
      1042**DCL      1293--IMP-PTR  1322<<ASSIGN   1342>>ASSIGN   1344>>ASSIGN   1345>>ASSIGN   1467<<ASSIGN
      1509>>IF       1509>>ASSIGN   1509>>ASSIGN
MEMFLTS
      1308**DCL      1349>>IF
N$DCT$$
       605**DCL       739--IMP-PTR
N$FQ$
       605**DCL       740--IMP-PTR
N$REQ_INIT.BUFADDR
       624**DCL       625--REDEF     625--REDEF
N$REQ_INIT.DLA.DRELADDR
       616**DCL       616--REDEF
N$REQ_INIT.DVE.EOMCHAR
       653**DCL       654--REDEF
N$REQ_INIT.EAINFO
       647**DCL       647--REDEF
N$REQ_INIT.EAINFOX
       647**DCL       648--REDEF
N$REQ_INIT.EVNTINFO
       648**DCL       648--REDEF
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:51   
N$REQ_INIT.STATUS
       629**DCL       635--REDEF
NI$CHT$
       664**DCL      1116--IMP-PTR  1365>>ASSIGN   1405>>ASSIGN   1430>>ASSIGN   1435>>ASSIGN   1482>>ASSIGN
      1498>>ASSIGN
NI$FQ$
       665**DCL       741--IMP-PTR
NI$IBUF$
       665**DCL       741--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
       675**DCL       676--REDEF     676--REDEF
NI$IMXMBX_INIT.SIZE
       677**DCL       677--REDEF
NI$REQ_INIT.DCW
       699**DCL       702--REDEF
NI$REQ_INIT.DCW.TALLY
       700**DCL       700--REDEF
NI$REQ_INIT.IDCW.EXTA
       702**DCL       702--REDEF
NI$REQ_INIT.PCW
       704**DCL       708--REDEF
NI$REQ_INIT.SEEK
       709**DCL       710--REDEF     711--REDEF
NI$RP$
       713**DCL       743--IMP-PTR
NIA$SPURINT
      1023**DCL-ENT  1548--CALL
NIB$SPEC
      1024**DCL-ENT  1490--CALL
NIM$DEQUEUE
       768**DCL-ENT  1411--CALL
NIM$ENQUEUE
       769**DCL-ENT  1370--CALL
NIQ$GETS
      1025**DCL-ENT  1361--CALL
NIQ$RELS
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:52   
      1026**DCL-ENT  1423--CALL
NIS$SCRACC
      1027**DCL-ENT  1372--CALL     1416--CALL
NIW$POSTER
      1028**DCL-ENT  1439--ASSIGN   1500--ASSIGN
NI_MBX_INIT.DCW.CONTROL.AE
       735**DCL       735--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
       731**DCL       731--REDEF
NOREQ
      1370**LABEL    1411--CALLALT
NOSCRACC
      1429**LABEL    1350--GOTO     1361--CALLALT
POSTER
      1043**DCL      1435<<ASSIGN   1439<<ASSIGN   1440>>IF       1440>>CALL     1498<<ASSIGN   1500<<ASSIGN
      1502>>CALL
SPEC
      1301**DCL      1476>>ASSIGN
SPEC.PRESENCE
      1302**DCL      1474>>IF       1475<<ASSIGN
SPEC$
      1044**DCL      1301--IMP-PTR  1472<<ASSIGN   1474>>IF       1475>>ASSIGN   1476>>ASSIGN
SPSTAT
      1091**DCL      1490<>CALL
SPSTAT.CHAN
      1099**DCL      1481>>ASSIGN
SPSTAT.CODE.BYTE3
      1103**DCL      1488>>DOCASE
SPSTAT.DVN
      1101**DCL      1494>>IF
SPURIOUS
      1518**PROC     1319--CALL     1402--CALL     1432--CALL     1464--CALL     1484--CALL
STAT
      1304**DCL      1364<<ASSIGN   1421>>ASSIGN
STATUS
      1050**DCL      1075--REDEF    1091--REDEF    1318<<ASSIGN   1335<<ASSIGN   1364>>ASSIGN   1401<<ASSIGN
PL6.E3A0      #001=NIF$FAULT File=NIF$FAULT.:E05TSI                              WED 07/30/97 03:31 Page:53   
      1421<<ASSIGN   1440<>CALL     1463<<ASSIGN   1476<<ASSIGN   1502<>CALL     1548<>CALL
WACPCW
      1310**DCL      1362>>ASSIGN

PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:54   
      301        1        /*T***********************************************************/
      302        2        /*T*                                                         */
      303        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      304        4        /*T*                                                         */
      305        5        /*T***********************************************************/
      306        6        /*T*/
      307        7        /*F*
      308        8              NAME:          NIF$IMXFAULT
      309        9              PURPOSE:       NIF$IMXFAULT packages appropriate info to report system
      310       10                             faults and special interrupts for the IMX.
      311       11              DESCRIPTION:   The IMX reports system faults and specials on the payload
      312       12                             channel for which that interrupt occurred.  No FLTBUFs or
      313       13                             SPECBUFs exist for the IMX.
      314       14                             This module translates the IMX interrupt words into the
      315       15                             expected status information and then calls the appropriate
      316       16                             poster.
      317       17        */
      318       18        /**/
      319       19        NIF$IMXFAULT: PROC (INTWORD0,INTWORD1);
      320       20
      321       21        /*D*
      322       22              NAME:          NIF$IMXFAULT
      323       23              CALL:          CALL NIF$IMXFAULT (INTWORD0, INTWORD1)
      324       24              INPUT:         INTWORD0 - common interrupt word
      325       25                             INTWORD1 - system fault interrupt word
      326       26              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
      327       27              DESCRIPTION:   Posts IMX IO system faults to the appropriate handler.
      328       28        */
      329       29        /*
      330       30                Includes
      331       31        */
      332       32        %INCLUDE EL$TABLES;
      333      355        %INCLUDE EL_SUBS_C;
      334      439        %INCLUDE HF_LOCK_C;
      335      453        %INCLUDE NI_DATA_C;
      336      566        %INCLUDE NI_DATA_R;
      337     1003        %INCLUDE NI_MACROS_C;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:55   
      338     1270        /*
      339     1271                Parameters
      340     1272        */
      341     1273    1   DCL 1 INTWORD0          ALIGNED PARAM,
      342     1274    1         2 *               BIT(11) UNAL,
      343     1275    1         2 CHAN            UBIN(7) UNAL,   /* CHANNEL NUMBER */
      344     1276    1         2 *               BIT(7) UNAL,
      345     1277    1         2 IMXID           UBIN(2) UNAL,   /* IOM NUMBER */
      346     1278    1         2 *               BIT(2) UNAL,
      347     1279    1         2 INTLEVEL        UBIN(3) UNAL,   /* INTLVL=INTLEVEL/2 */
      348     1280    1         2 SYSID           UBIN(4) UNAL;   /* CURRENTLY UNUSED */
      349     1281    1   DCL INTWORD1            BIT(36) ALIGNED PARAM ;
      350     1282    1   DCL 1 SYSFAULT          REDEF INTWORD1 ALIGNED,
      351     1283    1         2 *               BIT(1) UNAL,
      352     1284    1         2 DETID           UBIN(5) UNAL,
      353     1285    1         2 LR              BIT(1) UNAL,
      354     1286    1         2 *               BIT(1) UNAL,
      355     1287    1         2 TYPE            BIT(1) UNAL,
      356     1288    1         2 *               BIT(2) UNAL,
      357     1289    1         2 CHAN            UBIN(7) UNAL,   /* CHANNEL NUMBER */
      358     1290    1         2 FLT             UBIN(8) UNAL,   /* FAULT STATUS */
      359     1291    1         2 MEMFLT          UBIN(4) UNAL,   /* MEMORY FAULT CODE */
      360     1292    1         2 IOFLT           UBIN(6) UNAL;   /* IO FAULT CODE */
      361     1293    1   DCL 1 SPECINT           REDEF INTWORD1 ALIGNED,
      362     1294    1         2 PRESENCE        BIT(1) UNAL,
      363     1295    1         2 *               BIT(9) UNAL,
      364     1296    1         2 DVN             UBIN(8) UNAL,
      365     1297    1         2 BYTE3           UBIN(9) CALIGNED,
      366     1298    1         2 BYTE4           UBIN(9) CALIGNED;
      367     1299        /*
      368     1300                Entries
      369     1301        */
      370     1302    1   DCL 1 NIA$SPURINT       ENTRY(4) ;
      371     1303    1   DCL 1 NIW$POSTER        ENTRY(3) ;
      372     1304        /*
      373     1305                Auto
      374     1306        */
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:56   
      375     1307    1   DCL 1 CHAN              SBIN ALIGNED AUTO ;
      376     1308    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
      377     1309    1   DCL 1 INTLVL            UBIN(18) ALIGNED AUTO ;
      378     1310    1   DCL 1 IOSTAT$           PTR ALIGNED AUTO ;
      379     1311    1   DCL 1 POSTER            EPTR ALIGNED AUTO ;
      380     1312    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
      381     1313        %STATUS                 ( NAME=STATUS, STCLASS=AUTO ) ;
      382     1380    1   DCL 1 TEMP              BIT(36) ALIGNED AUTO ;
      383     1381        /*
      384     1382                Based
      385     1383        */
      386     1384    1   DCL 1 B$WORD            BIT(36) ALIGNED BASED ;
      387     1385        %NI$CHT                 ( NAME="CHT(0:%(N_MAXCHANS-1))", STCLASS="BASED(NI$CHT$)" )
              1385            ;
      388     1388        %NI$DCT                 ( NAME=DCT,          STCLASS=BASED ) ;
      389     1436        %NI$DQH                 ( NAME=DQH,          STCLASS="BASED(DQH$)" ) ;
      390     1459        %N$REQ                  ( NAME=IOQ,          STCLASS=BASED ) ;
      391     1517        %NI$IOSTAT              ( NAME=IOSTAT,       STCLASS="BASED(IOSTAT$)" ) ;
      392     1526        %NI$SQH                 ( NAME=SQH,          STCLASS="BASED(SQH$)" ) ;
      393     1539        /**/
      394     1540        %EJECT ;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:57   
      395     1541    2           DO INHIBIT ;
      396     1542    2              INTLVL = INTWORD0.INTLEVEL/2;
      397     1543    2              STATUS = SYSFAULT;
      398     1544    2              FLTSTAT.PPMAJOR = '1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));
      399     1545    2              FLTSTAT.DCW = SYSFAULT; /* preserve orignal fault word for logging */
      400     1546    2              CHAN = INTWORD0.IMXID*%N_MAXCHANS + SYSFAULT.CHAN;
      401     1547    2              DQH$ = CHT.DQH$(CHAN);
      402     1548    2              IF  DQH$ = ADDR(NIL)
      403     1549    3              THEN DO ;
      404     1550    3   SPURINT:      CALL SPURIOUS ;
      405     1551    3                 RETURN ;
      406     1552    3                 END ;
      407     1553
      408     1554        /* swap mbx words 9 and 11, which IMX stores as LPW and DCW residue, respectively */
      409     1555    2              IOSTAT$ = DQH.IOSTATUS$;
      410     1556    2              TEMP = ADDR(IOSTAT.STATUS.NWA)->B$WORD;
      411     1557    2              ADDR(IOSTAT.STATUS.NWA)->B$WORD = IOSTAT.LPW_RESIDUE;
      412     1558    2              IOSTAT.LPW_RESIDUE = TEMP;
      413     1559
      414     1560    2              POSTER = CHT.POSTER(CHAN);
      415     1561    2              IF DQH.IO$~=ADDR(NIL) THEN
      416     1562    2                 IF DQH.IO$->IOQ.DCT$->DCT.TYPE = %DV_MPC AND
      417     1563    2                   DQH.IO$->IOQ.DCT$->DCT.CTYP ~= %C_APC THEN
      418     1564    2                    POSTER = ENTADDR(NIW$POSTER) ;
      419     1565    2              CALL POSTER(DQH,INTLVL,STATUS);
      420     1566    2              RETURN;
      421     1567    2              END ;
      422     1568        %EJECT;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:58   
      423     1569        /*D*
      424     1570              NAME:          NIF$IMXSPEC
      425     1571              CALL:          CALL NIF$IMXSPEC (INTWORD0, INTWORD1)
      426     1572              INPUT:         INTWORD0 - common interrupt word
      427     1573                             INTWORD1 - special interrupt word
      428     1574              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
      429     1575              DESCRIPTION:   Post IMX IO special interrupts to the appropriate handler.
      430     1576        */
      431     1577
      432     1578    1   NIF$IMXSPEC: ENTRY (INTWORD0,INTWORD1);
      433     1579
      434     1580    2           DO INHIBIT ;
      435     1581    2              INTLVL = INTWORD0.INTLEVEL/2;
      436     1582    2              CHAN = INTWORD0.IMXID*%N_MAXCHANS + INTWORD0.CHAN;
      437     1583    2              DQH$ = CHT.DQH$(CHAN);
      438     1584    2              SPSTAT = SPECINT;
      439     1585    2              IF DQH$ = ADDR(NIL) OR NOT SPSTAT.PRESENCE THEN
      440     1586    2                 CALL SPURIOUS;
      441     1587    3              ELSE DO;
      442     1588    3                 SPSTAT.PRESENCE = '0'B;
      443     1589    3                 IF SPSTAT.DVN ~= 0 OR DQH.MPC$ = ADDR(NIL) THEN
      444     1590    3                    GOTO DEVICE;
      445     1591    4                 ELSE DO;
      446     1592    4                    IF DQH.MPC$->DCT.DEV0LGL THEN
      447     1593    4   DEVICE:             POSTER = CHT.POSTER(CHAN);
      448     1594    4                    ELSE
      449     1595    4                       POSTER = ENTADDR (NIW$POSTER);
      450     1596    4                    END;
      451     1597    3                 CALL POSTER (DQH,INTLVL,STATUS);
      452     1598    3                 END;
      453     1599    2              RETURN;
      454     1600    2              END ;
      455     1601        %EJECT;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:59   
      456     1602        /*
      457     1603           LOG SPURIOUS INTERRUPTS
      458     1604        */
      459     1605    1   SPURIOUS: PROC;
      460     1606        /**/
      461     1607        %NI$DQH (NAME=DDQH,STCLASS=AUTO);
      462     1630        /**/
      463     1631    3           IF DQH$=ADDR(NIL) THEN DO;
      464     1632    3              DQH$=ADDR(DDQH);
      465     1633    3              DDQH.IOCHAN=BINBIT(CHAN,SIZEB(DDQH.IOCHAN));
      466     1634    3              DDQH.STATE=%IDLE;
      467     1635    3              DDQH.STATUS.DOWN='1'B;
      468     1636    3              DDQH.STATUS.TND=0;
      469     1637    3              END;
      470     1638    2           CALL NIA$SPURINT(DQH$->DQH,EL_SPURINT,INTLVL,STATUS);
      471     1639    2           RETURN;
      472     1640    2   END SPURIOUS;
      473     1641
      474     1642    1   END NIF$IMXFAULT;
      475     1643        %EOD;

PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:60   
--  Include file information  --

   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
      No diagnostics issued in procedure NIF$IMXFAULT.

   Procedure NIF$IMXFAULT requires 173 words for executable code.
   Procedure NIF$IMXFAULT requires 40 words of local(AUTO) storage.

PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:61   

 Object Unit name= NIF$IMXFAULT                               File name= NIF$FAULT.:E05TOU
 UTS= JUL 30 '97 03:32:08.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   173    255  NIF$IMXFAULT
    1  RoData even  none     3      3  NIF$IMXFAULT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  NIF$IMXFAULT
     0    114                  yes      Std        2  NIF$IMXSPEC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 NIW$POSTER
         yes           Std       4 NIA$SPURINT
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:62   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               N$FQ$                                 NI$CHT$
     NI$FQ$                                NI$IBUF$                              NI$RP$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:63   


      301        1        /*T***********************************************************/
      302        2        /*T*                                                         */
      303        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      304        4        /*T*                                                         */
      305        5        /*T***********************************************************/
      306        6        /*T*/
      307        7        /*F*
      308        8              NAME:          NIF$IMXFAULT
      309        9              PURPOSE:       NIF$IMXFAULT packages appropriate info to report system
      310       10                             faults and special interrupts for the IMX.
      311       11              DESCRIPTION:   The IMX reports system faults and specials on the payload
      312       12                             channel for which that interrupt occurred.  No FLTBUFs or
      313       13                             SPECBUFs exist for the IMX.
      314       14                             This module translates the IMX interrupt words into the
      315       15                             expected status information and then calls the appropriate
      316       16                             poster.
      317       17        */
      318       18        /**/
      319       19        NIF$IMXFAULT: PROC (INTWORD0,INTWORD1);

     19  0 000000   000000 700200 xent  NIF$IMXFAULT TSX0  ! X66_AUTO_2
         0 000001   000050 000002                    ZERO    40,2

      320       20
      321       21        /*D*
      322       22              NAME:          NIF$IMXFAULT
      323       23              CALL:          CALL NIF$IMXFAULT (INTWORD0, INTWORD1)
      324       24              INPUT:         INTWORD0 - common interrupt word
      325       25                             INTWORD1 - system fault interrupt word
      326       26              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
      327       27              DESCRIPTION:   Posts IMX IO system faults to the appropriate handler.
      328       28        */
      329       29        /*
      330       30                Includes
      331       31        */
      332       32        %INCLUDE EL$TABLES;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:64   
      333      355        %INCLUDE EL_SUBS_C;
      334      439        %INCLUDE HF_LOCK_C;
      335      453        %INCLUDE NI_DATA_C;
      336      566        %INCLUDE NI_DATA_R;
      337     1003        %INCLUDE NI_MACROS_C;
      338     1270        /*
      339     1271                Parameters
      340     1272        */
      341     1273    1   DCL 1 INTWORD0          ALIGNED PARAM,
      342     1274    1         2 *               BIT(11) UNAL,
      343     1275    1         2 CHAN            UBIN(7) UNAL,   /* CHANNEL NUMBER */
      344     1276    1         2 *               BIT(7) UNAL,
      345     1277    1         2 IMXID           UBIN(2) UNAL,   /* IOM NUMBER */
      346     1278    1         2 *               BIT(2) UNAL,
      347     1279    1         2 INTLEVEL        UBIN(3) UNAL,   /* INTLVL=INTLEVEL/2 */
      348     1280    1         2 SYSID           UBIN(4) UNAL;   /* CURRENTLY UNUSED */
      349     1281    1   DCL INTWORD1            BIT(36) ALIGNED PARAM ;
      350     1282    1   DCL 1 SYSFAULT          REDEF INTWORD1 ALIGNED,
      351     1283    1         2 *               BIT(1) UNAL,
      352     1284    1         2 DETID           UBIN(5) UNAL,
      353     1285    1         2 LR              BIT(1) UNAL,
      354     1286    1         2 *               BIT(1) UNAL,
      355     1287    1         2 TYPE            BIT(1) UNAL,
      356     1288    1         2 *               BIT(2) UNAL,
      357     1289    1         2 CHAN            UBIN(7) UNAL,   /* CHANNEL NUMBER */
      358     1290    1         2 FLT             UBIN(8) UNAL,   /* FAULT STATUS */
      359     1291    1         2 MEMFLT          UBIN(4) UNAL,   /* MEMORY FAULT CODE */
      360     1292    1         2 IOFLT           UBIN(6) UNAL;   /* IO FAULT CODE */
      361     1293    1   DCL 1 SPECINT           REDEF INTWORD1 ALIGNED,
      362     1294    1         2 PRESENCE        BIT(1) UNAL,
      363     1295    1         2 *               BIT(9) UNAL,
      364     1296    1         2 DVN             UBIN(8) UNAL,
      365     1297    1         2 BYTE3           UBIN(9) CALIGNED,
      366     1298    1         2 BYTE4           UBIN(9) CALIGNED;
      367     1299        /*
      368     1300                Entries
      369     1301        */
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:65   
      370     1302    1   DCL 1 NIA$SPURINT       ENTRY(4) ;
      371     1303    1   DCL 1 NIW$POSTER        ENTRY(3) ;
      372     1304        /*
      373     1305                Auto
      374     1306        */
      375     1307    1   DCL 1 CHAN              SBIN ALIGNED AUTO ;
      376     1308    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
      377     1309    1   DCL 1 INTLVL            UBIN(18) ALIGNED AUTO ;
      378     1310    1   DCL 1 IOSTAT$           PTR ALIGNED AUTO ;
      379     1311    1   DCL 1 POSTER            EPTR ALIGNED AUTO ;
      380     1312    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
      381     1313        %STATUS                 ( NAME=STATUS, STCLASS=AUTO ) ;
      382     1380    1   DCL 1 TEMP              BIT(36) ALIGNED AUTO ;
      383     1381        /*
      384     1382                Based
      385     1383        */
      386     1384    1   DCL 1 B$WORD            BIT(36) ALIGNED BASED ;
      387     1385        %NI$CHT                 ( NAME="CHT(0:%(N_MAXCHANS-1))", STCLASS="BASED(NI$CHT$)" )
              1385            ;
      388     1388        %NI$DCT                 ( NAME=DCT,          STCLASS=BASED ) ;
      389     1436        %NI$DQH                 ( NAME=DQH,          STCLASS="BASED(DQH$)" ) ;
      390     1459        %N$REQ                  ( NAME=IOQ,          STCLASS=BASED ) ;
      391     1517        %NI$IOSTAT              ( NAME=IOSTAT,       STCLASS="BASED(IOSTAT$)" ) ;
      392     1526        %NI$SQH                 ( NAME=SQH,          STCLASS="BASED(SQH$)" ) ;
      393     1539        /**/
      394     1540        %EJECT ;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:66   
      395     1541    2           DO INHIBIT ;

      396     1542    2              INTLVL = INTWORD0.INTLEVEL/2;

   1542  0 000002   200003 470700                    LDP0  ! @INTWORD0,,AUTO
         0 000003   000000 236300                    LDQ   ! 0,,PR0
         0 000004   000004 772200                    QRL   ! 4
         0 000005   000007 376207                    ANQ   ! 7,DL
         0 000006   000001 772200                    QRL   ! 1
         0 000007   000000 620206                    EAX0  ! 0,QL
         0 000010   200007 740300                    STX0  ! INTLVL,,AUTO

      397     1543    2              STATUS = SYSFAULT;

   1543  0 000011   200004 471700                    LDP1  ! @INTWORD1,,AUTO
         0 000012   100000 235300                    LDA   ! 0,,PR1
         0 000013   000000 236203                    LDQ   ! 0,DU
         0 000014   200014 757300                    STAQ  ! STATUS,,AUTO

      398     1544    2              FLTSTAT.PPMAJOR = '1'B|BINBIT(%SYSTEM_FAULT,SIZEB(FLTSTAT.PPMAJOR));

   1544  0 000015   570000 236203                    LDQ   ! -69632,DU
         0 000016   200014 752340                    STCQ  ! STATUS,'40'O,AUTO

      399     1545    2              FLTSTAT.DCW = SYSFAULT; /* preserve orignal fault word for logging */

   1545  0 000017   100000 236300                    LDQ   ! 0,,PR1
         0 000020   200015 756300                    STQ   ! STATUS+1,,AUTO

      400     1546    2              CHAN = INTWORD0.IMXID*%N_MAXCHANS + SYSFAULT.CHAN;

   1546  0 000021   100000 236300                    LDQ   ! 0,,PR1
         0 000022   000022 772200                    QRL   ! 18
         0 000023   000177 376207                    ANQ   ! 127,DL
         0 000024   200044 756300                    STQ   ! DDQH+19,,AUTO
         0 000025   000000 236300                    LDQ   ! 0,,PR0
         0 000026   000002 772200                    QRL   ! 2
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:67   
         0 000027   000600 376207                    ANQ   ! 384,DL
         0 000030   200044 036300                    ADLQ  ! DDQH+19,,AUTO
         0 000031   200005 756300                    STQ   ! CHAN,,AUTO

      401     1547    2              DQH$ = CHT.DQH$(CHAN);

   1547  0 000032   200005 235300                    LDA   ! CHAN,,AUTO
         0 000033   000001 735200                    ALS   ! 1
         0 000034   000000 473600 xsym               LDP3  ! NI$CHT$
         0 000035   300000 236305                    LDQ   ! 0,AL,PR3
         0 000036   200006 756300                    STQ   ! DQH$,,AUTO

      402     1548    2              IF  DQH$ = ADDR(NIL)

   1548  0 000037   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000040   000044 601200 0                  TNZ   ! s:1555

      403     1549    3              THEN DO ;

      404     1550    3   SPURINT:      CALL SPURIOUS ;

   1550  0 000041   000217 701200 0     SPURINT      TSX1  ! SPURIOUS
         0 000042   000000 011200                    NOP   ! 0

      405     1551    3                 RETURN ;

   1551  0 000043   000000 702200 xent               TSX2  ! X66_ARET

      406     1552    3                 END ;
      407     1553
      408     1554       /* swap mbx words 9 and 11, which IMX stores as LPW and DCW residue, respectively */
      409     1555    2              IOSTAT$ = DQH.IOSTATUS$;

   1555  0 000044   200006 474700                    LDP4  ! DQH$,,AUTO
         0 000045   400016 236300                    LDQ   ! 14,,PR4
         0 000046   200010 756300                    STQ   ! IOSTAT$,,AUTO

PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:68   
      410     1556    2              TEMP = ADDR(IOSTAT.STATUS.NWA)->B$WORD;

   1556  0 000047   200010 475700                    LDP5  ! IOSTAT$,,AUTO
         0 000050   500001 236300                    LDQ   ! 1,,PR5
         0 000051   200016 756300                    STQ   ! TEMP,,AUTO

      411     1557    2              ADDR(IOSTAT.STATUS.NWA)->B$WORD = IOSTAT.LPW_RESIDUE;

   1557  0 000052   500003 236300                    LDQ   ! 3,,PR5
         0 000053   500001 756300                    STQ   ! 1,,PR5

      412     1558    2              IOSTAT.LPW_RESIDUE = TEMP;

   1558  0 000054   200016 236300                    LDQ   ! TEMP,,AUTO
         0 000055   500003 756300                    STQ   ! 3,,PR5

      413     1559
      414     1560    2              POSTER = CHT.POSTER(CHAN);

   1560  0 000056   300001 236305                    LDQ   ! 1,AL,PR3
         0 000057   200011 756300                    STQ   ! POSTER,,AUTO

      415     1561    2              IF DQH.IO$~=ADDR(NIL) THEN

   1561  0 000060   400014 236300                    LDQ   ! 12,,PR4
         0 000061   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000062   000077 600200 0                  TZE   ! s:1565

      416     1562    2                 IF DQH.IO$->IOQ.DCT$->DCT.TYPE = %DV_MPC AND

   1562  0 000063   400014 476700                    LDP6  ! 12,,PR4
         0 000064   600002 477700                    LDP7  ! 2,,PR6
         0 000065   700007 236300                    LDQ   ! 7,,PR7
         0 000066   007700 376207                    ANQ   ! 4032,DL
         0 000067   000700 116207                    CMPQ  ! 448,DL
         0 000070   000077 601200 0                  TNZ   ! s:1565
         0 000071   700007 236300                    LDQ   ! 7,,PR7
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:69   
         0 000072   070000 376203                    ANQ   ! 28672,DU
         0 000073   030000 116203                    CMPQ  ! 12288,DU
         0 000074   000077 600200 0                  TZE   ! s:1565

      417     1563    2                   DQH.IO$->IOQ.DCT$->DCT.CTYP ~= %C_APC THEN
      418     1564    2                    POSTER = ENTADDR(NIW$POSTER) ;

   1564  0 000075   000000 636200 xent               EAQ   ! NIW$POSTER
         0 000076   200011 756300                    STQ   ! POSTER,,AUTO

      419     1565    2              CALL POSTER(DQH,INTLVL,STATUS);

   1565  0 000077   200014 636700                    EPPR6 ! STATUS,,AUTO
         0 000100   200046 456700                    STP6  ! DDQH+21,,AUTO
         0 000101   200007 637700                    EPPR7 ! INTLVL,,AUTO
         0 000102   200045 457700                    STP7  ! DDQH+20,,AUTO
         0 000103   200006 236300                    LDQ   ! DQH$,,AUTO
         0 000104   200044 756300                    STQ   ! DDQH+19,,AUTO
         0 000105   200044 630700                    EPPR0 ! DDQH+19,,AUTO
         0 000106   200011 220300                    LDX0  ! POSTER,,AUTO
         0 000107   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000110   000000 701210                    TSX1  ! 0,X0
         0 000111   000000 011200                    NOP   ! 0

      420     1566    2              RETURN;

   1566  0 000112   000000 702200 xent               TSX2  ! X66_ARET

      421     1567    2              END ;

   1567  0 000113   000116 710000 0                  TRA     s:1581

      422     1568        %EJECT;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:70   
      423     1569        /*D*
      424     1570              NAME:          NIF$IMXSPEC
      425     1571              CALL:          CALL NIF$IMXSPEC (INTWORD0, INTWORD1)
      426     1572              INPUT:         INTWORD0 - common interrupt word
      427     1573                             INTWORD1 - special interrupt word
      428     1574              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
      429     1575              DESCRIPTION:   Post IMX IO special interrupts to the appropriate handler.
      430     1576        */
      431     1577
      432     1578    1   NIF$IMXSPEC: ENTRY (INTWORD0,INTWORD1);

   1578  0 000114   000000 700200 xent  NIF$IMXSPEC  TSX0  ! X66_AUTO_2
         0 000115   000050 000002                    ZERO    40,2

      433     1579
      434     1580    2           DO INHIBIT ;

      435     1581    2              INTLVL = INTWORD0.INTLEVEL/2;

   1581  0 000116   200003 470700                    LDP0  ! @INTWORD0,,AUTO
         0 000117   000000 236300                    LDQ   ! 0,,PR0
         0 000120   000004 772200                    QRL   ! 4
         0 000121   000007 376207                    ANQ   ! 7,DL
         0 000122   000001 772200                    QRL   ! 1
         0 000123   000000 620206                    EAX0  ! 0,QL
         0 000124   200007 740300                    STX0  ! INTLVL,,AUTO

      436     1582    2              CHAN = INTWORD0.IMXID*%N_MAXCHANS + INTWORD0.CHAN;

   1582  0 000125   000000 236300                    LDQ   ! 0,,PR0
         0 000126   000022 772200                    QRL   ! 18
         0 000127   000177 376207                    ANQ   ! 127,DL
         0 000130   200044 756300                    STQ   ! DDQH+19,,AUTO
         0 000131   000000 236300                    LDQ   ! 0,,PR0
         0 000132   000002 772200                    QRL   ! 2
         0 000133   000600 376207                    ANQ   ! 384,DL
         0 000134   200044 036300                    ADLQ  ! DDQH+19,,AUTO
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:71   
         0 000135   200005 756300                    STQ   ! CHAN,,AUTO

      437     1583    2              DQH$ = CHT.DQH$(CHAN);

   1583  0 000136   200005 235300                    LDA   ! CHAN,,AUTO
         0 000137   000001 735200                    ALS   ! 1
         0 000140   000000 471600 xsym               LDP1  ! NI$CHT$
         0 000141   100000 236305                    LDQ   ! 0,AL,PR1
         0 000142   200006 756300                    STQ   ! DQH$,,AUTO

      438     1584    2              SPSTAT = SPECINT;

   1584  0 000143   200004 473700                    LDP3  ! @INTWORD1,,AUTO
         0 000144   300000 235300                    LDA   ! 0,,PR3
         0 000145   000000 236203                    LDQ   ! 0,DU
         0 000146   200014 757300                    STAQ  ! STATUS,,AUTO

      439     1585    2              IF DQH$ = ADDR(NIL) OR NOT SPSTAT.PRESENCE THEN

   1585  0 000147   200006 236300                    LDQ   ! DQH$,,AUTO
         0 000150   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000151   000154 600200 0                  TZE   ! s:1586
         0 000152   200014 234300                    SZN   ! STATUS,,AUTO
         0 000153   000157 604200 0                  TMI   ! s:1588

      440     1586    2                 CALL SPURIOUS;

   1586  0 000154   000217 701200 0                  TSX1  ! SPURIOUS
         0 000155   000000 011200                    NOP   ! 0
         0 000156   000215 710200 0                  TRA   ! s:1599

      441     1587    3              ELSE DO;

      442     1588    3                 SPSTAT.PRESENCE = '0'B;

   1588  0 000157   000031 236200 xsym               LDQ   ! B_VECTNIL+25
         0 000160   200014 356300                    ANSQ  ! STATUS,,AUTO
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:72   

      443     1589    3                 IF SPSTAT.DVN ~= 0 OR DQH.MPC$ = ADDR(NIL) THEN

   1589  0 000161   200014 236300                    LDQ   ! STATUS,,AUTO
         0 000162   000077 316203                    CANQ  ! 63,DU
         0 000163   000173 601200 0                  TNZ   ! DEVICE
         0 000164   200006 474700                    LDP4  ! DQH$,,AUTO
         0 000165   400015 236300                    LDQ   ! 13,,PR4
         0 000166   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000167   000173 600200 0                  TZE   ! DEVICE

      444     1590    3                    GOTO DEVICE;
      445     1591    4                 ELSE DO;

      446     1592    4                    IF DQH.MPC$->DCT.DEV0LGL THEN

   1592  0 000170   400015 475700                    LDP5  ! 13,,PR4
         0 000171   500007 234300                    SZN   ! 7,,PR5
         0 000172   000200 605200 0                  TPL   ! s:1595

      447     1593    4   DEVICE:             POSTER = CHT.POSTER(CHAN);

   1593  0 000173   200005 235300       DEVICE       LDA   ! CHAN,,AUTO
         0 000174   000001 735200                    ALS   ! 1
         0 000175   100001 236305                    LDQ   ! 1,AL,PR1
         0 000176   200011 756300                    STQ   ! POSTER,,AUTO
         0 000177   000202 710200 0                  TRA   ! s:1597

      448     1594    4                    ELSE
      449     1595    4                       POSTER = ENTADDR (NIW$POSTER);

   1595  0 000200   000000 636200 xent               EAQ   ! NIW$POSTER
         0 000201   200011 756300                    STQ   ! POSTER,,AUTO

      450     1596    4                    END;

      451     1597    3                 CALL POSTER (DQH,INTLVL,STATUS);
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:73   

   1597  0 000202   200014 634700                    EPPR4 ! STATUS,,AUTO
         0 000203   200046 454700                    STP4  ! DDQH+21,,AUTO
         0 000204   200007 635700                    EPPR5 ! INTLVL,,AUTO
         0 000205   200045 455700                    STP5  ! DDQH+20,,AUTO
         0 000206   200006 236300                    LDQ   ! DQH$,,AUTO
         0 000207   200044 756300                    STQ   ! DDQH+19,,AUTO
         0 000210   200044 630700                    EPPR0 ! DDQH+19,,AUTO
         0 000211   200011 221300                    LDX1  ! POSTER,,AUTO
         0 000212   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000213   000000 701211                    TSX1  ! 0,X1
         0 000214   000000 011200                    NOP   ! 0

      452     1598    3                 END;

      453     1599    2              RETURN;

   1599  0 000215   000000 702200 xent               TSX2  ! X66_ARET

      454     1600    2              END ;

   1600  0 000216   000254 710000 0                  TRA     s:1642

      455     1601        %EJECT;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:74   
      456     1602        /*
      457     1603           LOG SPURIOUS INTERRUPTS
      458     1604        */
      459     1605    1   SPURIOUS: PROC;

   1605  0 000217   200020 741300       SPURIOUS     STX1  ! TEMP+2,,AUTO

      460     1606        /**/
      461     1607        %NI$DQH (NAME=DDQH,STCLASS=AUTO);
      462     1630        /**/
      463     1631    3           IF DQH$=ADDR(NIL) THEN DO;

   1631  0 000220   200006 236100                    LDQ     DQH$,,AUTO
         0 000221   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000222   000237 601000 0                  TNZ     s:1638

      464     1632    3              DQH$=ADDR(DDQH);

   1632  0 000223   200021 630500                    EPPR0   DDQH,,AUTO
         0 000224   200006 450500                    STP0    DQH$,,AUTO

      465     1633    3              DDQH.IOCHAN=BINBIT(CHAN,SIZEB(DDQH.IOCHAN));

   1633  0 000225   200005 236100                    LDQ     CHAN,,AUTO
         0 000226   000033 736000                    QLS     27
         0 000227   000011 772000                    QRL     9
         0 000230   200022 552120                    STBQ    DDQH+1,'20'O,AUTO

      466     1634    3              DDQH.STATE=%IDLE;

   1634  0 000231   000000 236003                    LDQ     0,DU
         0 000232   200022 752101                    STCQ    DDQH+1,'01'O,AUTO

      467     1635    3              DDQH.STATUS.DOWN='1'B;

   1635  0 000233   200000 236003                    LDQ     65536,DU
         0 000234   200022 256100                    ORSQ    DDQH+1,,AUTO
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:75   

      468     1636    3              DDQH.STATUS.TND=0;

   1636  0 000235   000000 236000 1                  LDQ     0
         0 000236   200022 356100                    ANSQ    DDQH+1,,AUTO

      469     1637    3              END;

      470     1638    2           CALL NIA$SPURINT(DQH$->DQH,EL_SPURINT,INTLVL,STATUS);

   1638  0 000237   200014 630500                    EPPR0   STATUS,,AUTO
         0 000240   200047 450500                    STP0    DDQH+22,,AUTO
         0 000241   200007 631500                    EPPR1   INTLVL,,AUTO
         0 000242   200046 451500                    STP1    DDQH+21,,AUTO
         0 000243   000002 236000 1                  LDQ     2
         0 000244   200006 235100                    LDA     DQH$,,AUTO
         0 000245   200044 757100                    STAQ    DDQH+19,,AUTO
         0 000246   200044 630500                    EPPR0   DDQH+19,,AUTO
         0 000247   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000250   000000 701000 xent               TSX1    NIA$SPURINT
         0 000251   000000 011000                    NOP     0

      471     1639    2           RETURN;

   1639  0 000252   200020 221300                    LDX1  ! TEMP+2,,AUTO
         0 000253   000001 702211                    TSX2  ! 1,X1

      472     1640    2   END SPURIOUS;
      473     1641
      474     1642    1   END NIF$IMXFAULT;

   1642  0 000254   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   703777 777777   000000 000315   000001 006000                    ............
      475     1643        %EOD;
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:76   

PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:77   
--  Include file information  --

   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
      No diagnostics issued in procedure NIF$IMXFAULT.
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:78   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INTWORD0                  4-0-0/w PTR         r     1 @INTWORD1
     5-0-0/w SBIN        r     1 CHAN                      21-0-0/w STRC(648)   r     1 DDQH
     6-0-0/w PTR         r     1 DQH$                      14-0-0/d STRC(72)    r     1 FLTSTAT
     7-0-0/w UBIN(18)    r     1 INTLVL                    *0-0-0/w STRC        r     1 INTWORD0
    *0-0-0/w BIT         r     1 INTWORD1                  10-0-0/w PTR         r     1 IOSTAT$
    11-0-0/w EPTR        r     1 POSTER                    *0-0-0/w STRC        r     1 SPECINT
    14-0-0/d STRC(72)    r     1 SPSTAT                    12-0-0/w PTR         r     1 SQH$
    14-0-0/d STRC(72)    r     1 STATUS                    *0-0-0/w STRC        r     1 SYSFAULT
    16-0-0/w BIT         r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$CHT$                    0-0-0/w PTR         r     1 NI$FQ$
     0-0-0/w PTR         r     1 NI$IBUF$                   0-0-0/w PTR         r     1 NI$RP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 B$WORD                     0-0-0/w STRC(72)    r     1 CHT(0:127)
     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/w STRC(648)   r     1 DQH
     0-0-0/d STRC(1080)  r     1 IOQ                        0-0-0/d STRC(576)   r     1 IOSTAT

PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:79   

   Procedure NIF$IMXFAULT requires 173 words for executable code.
   Procedure NIF$IMXFAULT requires 40 words of local(AUTO) storage.
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:81   
          MINI XREF LISTING

B$WORD
      1384**DCL      1556>>ASSIGN   1557<<ASSIGN
CHAN
      1307**DCL      1546<<ASSIGN   1547>>ASSIGN   1560>>ASSIGN   1582<<ASSIGN   1583>>ASSIGN   1593>>ASSIGN
      1633>>ASSIGN
CHT.DQH$
      1386**DCL      1547>>ASSIGN   1583>>ASSIGN
CHT.POSTER
      1386**DCL      1560>>ASSIGN   1593>>ASSIGN
DCT.CTYP
      1405**DCL      1562>>IF
DCT.DEV0LGL
      1404**DCL      1592>>IF
DCT.DP
      1417**DCL      1424--REDEF    1427--REDEF    1428--REDEF    1430--REDEF    1430--REDEF    1431--REDEF
      1432--REDEF    1432--REDEF
DCT.MPC.IOCHANX
      1425**DCL      1425--REDEF
DCT.TYPE
      1407**DCL      1562>>IF
DDQH IN PROCEDURE SPURIOUS
      1616**DCL      1632--ASSIGN
DDQH.IOCHAN IN PROCEDURE SPURIOUS
      1619**DCL      1633<<ASSIGN   1633--ASSIGN
DDQH.IOCHANX IN PROCEDURE SPURIOUS
      1618**DCL      1619--REDEF
DDQH.MBX$ IN PROCEDURE SPURIOUS
      1627**DCL      1628--REDEF
DDQH.STATE IN PROCEDURE SPURIOUS
      1620**DCL      1634<<ASSIGN
DDQH.STATUS.DOWN IN PROCEDURE SPURIOUS
      1616**DCL      1635<<ASSIGN
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:82   
DDQH.STATUS.TND IN PROCEDURE SPURIOUS
      1617**DCL      1636<<ASSIGN
DEVICE
      1593**LABEL    1590--GOTO
DQH
      1445**DCL      1565<>CALL     1597<>CALL     1638<>CALL
DQH.IO$
      1452**DCL      1561>>IF       1562>>IF       1562>>IF
DQH.IOCHANX
      1447**DCL      1448--REDEF
DQH.IOSTATUS$
      1452**DCL      1555>>ASSIGN
DQH.MBX$
      1456**DCL      1457--REDEF
DQH.MPC$
      1452**DCL      1589>>IF       1592>>IF
DQH$
      1308**DCL      1445--IMP-PTR  1547<<ASSIGN   1548>>IF       1555>>ASSIGN   1561>>IF       1562>>IF
      1562>>IF       1565>>CALL     1583<<ASSIGN   1585>>IF       1589>>IF       1592>>IF       1597>>CALL
      1631>>IF       1632<<ASSIGN   1638>>CALL
FLTSTAT.DCW
      1356**DCL      1545<<ASSIGN
FLTSTAT.PPMAJOR
      1349**DCL      1544<<ASSIGN   1544--ASSIGN
INTLVL
      1309**DCL      1542<<ASSIGN   1565<>CALL     1581<<ASSIGN   1597<>CALL     1638<>CALL
INTWORD0
      1273**DCL        19--PROC     1578--ENTRY
INTWORD0.CHAN
      1275**DCL      1582>>ASSIGN
INTWORD0.IMXID
      1277**DCL      1546>>ASSIGN   1582>>ASSIGN
INTWORD0.INTLEVEL
      1279**DCL      1542>>ASSIGN   1581>>ASSIGN
INTWORD1
      1281**DCL        19--PROC     1282--REDEF    1293--REDEF    1578--ENTRY
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:83   
IOQ.BUFADDR
      1477**DCL      1478--REDEF    1478--REDEF
IOQ.DCT$
      1469**DCL      1562>>IF       1562>>IF
IOQ.DLA.DRELADDR
      1469**DCL      1469--REDEF
IOQ.DVE.EOMCHAR
      1506**DCL      1507--REDEF
IOQ.EAINFO
      1500**DCL      1500--REDEF
IOQ.EAINFOX
      1500**DCL      1501--REDEF
IOQ.EVNTINFO
      1501**DCL      1501--REDEF
IOQ.STATUS
      1482**DCL      1488--REDEF
IOSTAT.AESDCW
      1523**DCL      1523--REDEF
IOSTAT.LPW_RESIDUE
      1521**DCL      1557>>ASSIGN   1558<<ASSIGN
IOSTAT.STATUS.NWA
      1519**DCL      1556--ASSIGN   1557--ASSIGN
IOSTAT$
      1310**DCL      1518--IMP-PTR  1555<<ASSIGN   1556>>ASSIGN   1557>>ASSIGN   1557>>ASSIGN   1558>>ASSIGN
N$DCT$$
       864**DCL       998--IMP-PTR
N$FQ$
       864**DCL       999--IMP-PTR
N$REQ_INIT.BUFADDR
       883**DCL       884--REDEF     884--REDEF
N$REQ_INIT.DLA.DRELADDR
       875**DCL       875--REDEF
N$REQ_INIT.DVE.EOMCHAR
       912**DCL       913--REDEF
N$REQ_INIT.EAINFO
       906**DCL       906--REDEF
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:84   
N$REQ_INIT.EAINFOX
       906**DCL       907--REDEF
N$REQ_INIT.EVNTINFO
       907**DCL       907--REDEF
N$REQ_INIT.STATUS
       888**DCL       894--REDEF
NI$CHT$
       923**DCL      1386--IMP-PTR  1547>>ASSIGN   1560>>ASSIGN   1583>>ASSIGN   1593>>ASSIGN
NI$FQ$
       924**DCL      1000--IMP-PTR
NI$IBUF$
       924**DCL      1000--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
       934**DCL       935--REDEF     935--REDEF
NI$IMXMBX_INIT.SIZE
       936**DCL       936--REDEF
NI$REQ_INIT.DCW
       958**DCL       961--REDEF
NI$REQ_INIT.DCW.TALLY
       959**DCL       959--REDEF
NI$REQ_INIT.IDCW.EXTA
       961**DCL       961--REDEF
NI$REQ_INIT.PCW
       963**DCL       967--REDEF
NI$REQ_INIT.SEEK
       968**DCL       969--REDEF     970--REDEF
NI$RP$
       972**DCL      1002--IMP-PTR
NIA$SPURINT
      1302**DCL-ENT  1638--CALL
NIW$POSTER
      1303**DCL-ENT  1564--ASSIGN   1595--ASSIGN
NI_MBX_INIT.DCW.CONTROL.AE
       994**DCL       994--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
       990**DCL       990--REDEF
PL6.E3A0      #002=NIF$IMXFAULT File=NIF$FAULT.:E05TSI                           WED 07/30/97 03:32 Page:85   
POSTER
      1311**DCL      1560<<ASSIGN   1564<<ASSIGN   1565>>CALL     1593<<ASSIGN   1595<<ASSIGN   1597>>CALL
SPECINT
      1293**DCL      1584>>ASSIGN
SPSTAT
      1359**DCL      1584<<ASSIGN
SPSTAT.DVN
      1369**DCL      1589>>IF
SPSTAT.PRESENCE
      1365**DCL      1585>>IF       1588<<ASSIGN
SPURIOUS
      1605**PROC     1550--CALL     1586--CALL
SQH.DOOR
      1535**DCL      1535--REDEF
SQH$
      1312**DCL      1535--IMP-PTR
STATUS
      1318**DCL      1343--REDEF    1359--REDEF    1543<<ASSIGN   1565<>CALL     1597<>CALL     1638<>CALL
SYSFAULT
      1282**DCL      1543>>ASSIGN   1545>>ASSIGN
SYSFAULT.CHAN
      1289**DCL      1546>>ASSIGN
TEMP
      1380**DCL      1556<<ASSIGN   1558>>ASSIGN

PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:86   
      476        1        /*T***********************************************************/
      477        2        /*T*                                                         */
      478        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      479        4        /*T*                                                         */
      480        5        /*T***********************************************************/
      481        6        /*F*
      482        7              NAME:          NIF$ANFAULT
      483        8              PURPOSE:       Analyze system and user faults.
      484        9              DESCRIPTION:   System faults are abnormal conditions caused by hardware
      485       10                             or OS error;  user faults are errors caused by software
      486       11                             and are associated with a specific channel.  User faults
      487       12                             are reported in the terminate interrupt status.
      488       13        */
      489       14        /**/
      490       15        /*D*
      491       16              NAME:          NIF$ANFAULT
      492       17              CALL:          CALL NIF$ANFAULT (REQ, RETRY, FREPOS)
      493       18              INPUT:         REQ:  IOQ packet
      494       19              OUTPUT:        RETRY:  if set, retry IO
      495       20                             FREPOS:  optional;  if set, scratchpad access error
      496       21                                has occurred
      497       22              DESCRIPTION:   Analyzes the system fault, checking both the SCU-detected
      498       23                             error status and the IO-Central-detected status codes.
      499       24                             If either of these are non-zero, sets REQ.TYC and
      500       25                             writes message to system console if memory problem
      501       26                             exists.
      502       27        */
      503       28        %EJECT;
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:87   
      504       29        NIF$ANFAULT: PROC (REQ,RETRY,FREPOS) ALTRET;
      505       30        /*
      506       31                Includes
      507       32        */
      508       33        %INCLUDE CP_6_SUBS;
      509      573        %INCLUDE EL_SUBS_C;
      510      657        %INCLUDE HF_DATA_R;
      511      700        %INCLUDE NI_DATA_C;
      512      813        %INCLUDE NI_DATA_R;
      513     1250        %INCLUDE NI_MACROS_C;
      514     1517        %INCLUDE OC_SUBS_C;
      515     2248        /*
      516     2249                Parameters
      517     2250        */
      518     2251    1   DCL 1 FREPOS            BIT(1) UNAL PARAM ;
      519     2252        %N$REQ                  ( NAME=REQ, STCLASS=PARAM ) ;
      520     2310    1   DCL 1 RETRY             BIT(1) UNAL PARAM ;
      521     2311        /*
      522     2312                Entries
      523     2313        */
      524     2314    1   DCL 1 NIF$DCWLIST       ENTRY(4) ;
      525     2315    1   DCL 1 OCI$MK_WR         ENTRY(7) ;
      526     2316        /*
      527     2317                Auto
      528     2318        */
      529     2319    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
      530     2320    1   DCL 1 CODE              SBIN ALIGNED AUTO ;
      531     2321    1   DCL 1 PARM              ALIGNED AUTO,   /* PARAMETERS FOR OCI$MK_WRTM */
      532     2322    1         2 IOM             UBIN,           /* IOM # */
      533     2323    1         2 MEMADDR         UBIN;           /* REAL MEMORY ADDRESS */
      534     2324    1   DCL 1 STCODE            SBIN ALIGNED AUTO ;
      535     2325        /*
      536     2326                Based
      537     2327        */
      538     2328        %NI$DCT                 ( NAME=DCT, STCLASS="BASED(DCT$)" ) ;
      539     2376        %NI$DQH                 ( NAME=DQH, STCLASS=BASED ) ;
      540     2399        /*
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:88   
      541     2400                Constants
      542     2401        */
      543     2402    1   DCL LEN(0:1) UBIN BYTE CONSTANT INIT(4,4); /* LENGTHS OF FIELDS OF PARM */
      544     2403        /**/
      545     2404        /* TYC AND CODE VALUES FOR NIF$ANFAULT */
      546     2405        /*
      547     2406           STATUS CODE:
      548     2407               0   NO ERROR
      549     2408               1   RETRY
      550     2409               2   RETRY ON DIFFERENT CHANNEL
      551     2410               3   OPERATOR MESSAGE ISSUED, WAIT FOR KEYIN
      552     2411        */
      553     2412        /* SCU DETECTED FAULTS - BITS 26-29 OF SYSTEM FAULT WORD */
      554     2413    1   DCL SCCODE(0:15) UBIN(2) UNAL CONSTANT INIT(1*2,3,1*6,2*2,3,2*2,1*2);
      555     2414    1   DCL SCTYC(0:15) BIT(36) CONSTANT INIT('0'B,%TYC_IOERR,%TYC_MTRAP,%TYC_IOERR*13);
      556     2415        /* IO CENTRAL DETECTED FAULTS - BITS 30-35 OF SYSTEM FAULT WORD */
      557     2416    1   DCL IOCODE(0:16) UBIN(2) UNAL CONSTANT INIT(1,3,2*7,3,2,3*2,2,3,2*2);
      558     2417    1   DCL IOTYC(0:16) BIT(36) CONSTANT INIT('0'B,%TYC_IOERR*3,%TYC_MTRAP,%TYC_IOERR*8,
      559     2418    1          %TYC_MTRAP,%TYC_IOERR*3);
      560     2419        /**/
      561     2420        /* TYC VALUES FOR NIF$ANIOM */
      562     2421        /* CHANNEL DETECTED ERRORS - BITS 18-20 OF STATUS WORD */
      563     2422    1   DCL CHTYC(0:7) BIT(36) CONSTANT INIT('0'B,%TYC_IOERR*4,%TYC_MTRAP,%TYC_IOERR*2);
      564     2423        /* IO PROCESSOR DETECTED ERRORS - BITS 21-23 OF STATUS WORD */
      565     2424    1   DCL CENTYC(0:7) BIT(36) CONSTANT INIT('0'B,%TYC_IOERR*2,%TYC_MTRAP,%TYC_IOERR*4);
      566     2425        /**/
      567     2426        %EJECT;
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:89   
      568     2427    1           CODE=0;
      569     2428    1           PARM='0'B;
      570     2429    1           STCODE=REQ.FLTSTAT.SC;
      571     2430    2           IF STCODE~=0 THEN DO;           /* SCU-DETECTED FAULTS */
      572     2431    2              REQ.TYC=REQ.TYC|SCTYC(STCODE);
      573     2432    2              CODE=SCCODE(STCODE);
      574     2433    2              END;
      575     2434    1           STCODE=REQ.FLTSTAT.IO;
      576     2435    2           IF STCODE~=0 THEN DO;           /* IOM-DETECTED FAULTS */
      577     2436    2              REQ.TYC=REQ.TYC|IOTYC(STCODE);
      578     2437    2              IF CODE=0 THEN CODE=IOCODE(STCODE);
      579     2438    2              IF STCODE=3 AND NOT (HW_IMX OR HW_IOP) AND ADDR(FREPOS)~=ADDR(NIL) THEN
      580     2439    2                 FREPOS='1'B;              /* IOM SCRATCH PAD ACCESS ERROR */
      581     2440    2              END;
      582     2441    1           RETRY='1'B;                     /* ALWAYS DO A RETRY, EVEN IF CODE=0 */
      583     2442    2           IF CODE=3 THEN DO;              /* NOTIFY OPERATOR OF MEMORY PROBLEM */
      584     2443    2              DCT$=REQ.DCT$;
      585     2444    2              PARM.IOM=DCT.DQH$->DQH.IOCHAN.IOM;
      586     2445    2              CALL NIF$DCWLIST(REQ,,,PARM.MEMADDR);
      587     2446    2              CALL OCI$MK_WR(M_DEVC,IOMEMERR_MSG#,2,LEN,PARM,BINBIT(DCT.DCTX,36));
      588     2447    2              ALTRETURN;
      589     2448    2              END/* IF CODE */;
      590     2449    1           RETURN;
      591     2450        %EJECT;
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:90   
      592     2451        /*D*
      593     2452              NAME:          NIF$ANIOM
      594     2453              CALL:          CALL NIF$ANIOM (REQ, RETRY)
      595     2454              INPUT:         REQ:  IOQ packet
      596     2455              OUTPUT:        RETRY:  if set, retry IO
      597     2456              DESCRIPTION:   Analyzes the user fault portion of the status word,
      598     2457                             which contains channel-detected and IO-Central-detected
      599     2458                             errors.  If either of these are non-zero, sets REQ.TYC and
      600     2459                             the retry bit.
      601     2460        */
      602     2461
      603     2462    1   NIF$ANIOM: ENTRY (REQ,RETRY) ALTRET;
      604     2463    1           STCODE=REQ.STATUS.IOM.CENTRAL;
      605     2464    2           IF STCODE~=0 THEN DO;           /* IOM CENTRAL ERRORS */
      606     2465    2              REQ.TYC=REQ.TYC|CENTYC(STCODE);
      607     2466    2              RETRY='1'B;
      608     2467    2              END;
      609     2468    1           STCODE=REQ.STATUS.IOM.CHANNEL;
      610     2469    2           IF STCODE~=0 THEN DO;           /* IOM CHANNEL ERRORS */
      611     2470    2              REQ.TYC=REQ.TYC|CHTYC(STCODE);
      612     2471    2              RETRY='1'B;
      613     2472    2              END;
      614     2473    1           REQ.STATUS.NCP=7;               /* INDICATE IO NEVER GOT STARTED */
      615     2474    1           RETURN;
      616     2475    1   END NIF$ANFAULT;
      617     2476        %EOD;

PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:91   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure NIF$ANFAULT.

   Procedure NIF$ANFAULT requires 129 words for executable code.
   Procedure NIF$ANFAULT requires 20 words of local(AUTO) storage.

PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:92   

 Object Unit name= NIF$ANFAULT                                File name= NIF$FAULT.:E05TOU
 UTS= JUL 30 '97 03:32:32.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     53     65  NIF$ANFAULT
    1   Proc  even  none   129    201  NIF$ANFAULT
    2  RoData even  none     6      6  NIF$ANFAULT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  NIF$ANFAULT
     1    141          yes     yes      Std        2  NIF$ANIOM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 NIF$DCWLIST
         yes           Std       7 OCI$MK_WR
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:93   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     HW_IOP                                HW_IMX                                N$DCT$$
     N$FQ$                                 NI$FQ$                                NI$IBUF$
     NI$RP$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:94   


      476        1        /*T***********************************************************/
      477        2        /*T*                                                         */
      478        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      479        4        /*T*                                                         */
      480        5        /*T***********************************************************/
      481        6        /*F*
      482        7              NAME:          NIF$ANFAULT
      483        8              PURPOSE:       Analyze system and user faults.
      484        9              DESCRIPTION:   System faults are abnormal conditions caused by hardware
      485       10                             or OS error;  user faults are errors caused by software
      486       11                             and are associated with a specific channel.  User faults
      487       12                             are reported in the terminate interrupt status.
      488       13        */
      489       14        /**/
      490       15        /*D*
      491       16              NAME:          NIF$ANFAULT
      492       17              CALL:          CALL NIF$ANFAULT (REQ, RETRY, FREPOS)
      493       18              INPUT:         REQ:  IOQ packet
      494       19              OUTPUT:        RETRY:  if set, retry IO
      495       20                             FREPOS:  optional;  if set, scratchpad access error
      496       21                                has occurred
      497       22              DESCRIPTION:   Analyzes the system fault, checking both the SCU-detected
      498       23                             error status and the IO-Central-detected status codes.
      499       24                             If either of these are non-zero, sets REQ.TYC and
      500       25                             writes message to system console if memory problem
      501       26                             exists.
      502       27        */
      503       28        %EJECT;
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:95   
      504       29        NIF$ANFAULT: PROC (REQ,RETRY,FREPOS) ALTRET;

     29  1 000000   000000 700200 xent  NIF$ANFAULT  TSX0  ! X66_AUTO_3
         1 000001   000024 000003                    ZERO    20,3

      505       30        /*
      506       31                Includes
      507       32        */
      508       33        %INCLUDE CP_6_SUBS;
      509      573        %INCLUDE EL_SUBS_C;
      510      657        %INCLUDE HF_DATA_R;
      511      700        %INCLUDE NI_DATA_C;
      512      813        %INCLUDE NI_DATA_R;
      513     1250        %INCLUDE NI_MACROS_C;
      514     1517        %INCLUDE OC_SUBS_C;
      515     2248        /*
      516     2249                Parameters
      517     2250        */
      518     2251    1   DCL 1 FREPOS            BIT(1) UNAL PARAM ;
      519     2252        %N$REQ                  ( NAME=REQ, STCLASS=PARAM ) ;
      520     2310    1   DCL 1 RETRY             BIT(1) UNAL PARAM ;
      521     2311        /*
      522     2312                Entries
      523     2313        */
      524     2314    1   DCL 1 NIF$DCWLIST       ENTRY(4) ;
      525     2315    1   DCL 1 OCI$MK_WR         ENTRY(7) ;
      526     2316        /*
      527     2317                Auto
      528     2318        */
      529     2319    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
      530     2320    1   DCL 1 CODE              SBIN ALIGNED AUTO ;
      531     2321    1   DCL 1 PARM              ALIGNED AUTO,   /* PARAMETERS FOR OCI$MK_WRTM */
      532     2322    1         2 IOM             UBIN,           /* IOM # */
      533     2323    1         2 MEMADDR         UBIN;           /* REAL MEMORY ADDRESS */
      534     2324    1   DCL 1 STCODE            SBIN ALIGNED AUTO ;
      535     2325        /*
      536     2326                Based
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:96   
      537     2327        */
      538     2328        %NI$DCT                 ( NAME=DCT, STCLASS="BASED(DCT$)" ) ;
      539     2376        %NI$DQH                 ( NAME=DQH, STCLASS=BASED ) ;
      540     2399        /*
      541     2400                Constants
      542     2401        */
      543     2402    1   DCL LEN(0:1) UBIN BYTE CONSTANT INIT(4,4); /* LENGTHS OF FIELDS OF PARM */
      544     2403        /**/
      545     2404        /* TYC AND CODE VALUES FOR NIF$ANFAULT */
      546     2405        /*
      547     2406           STATUS CODE:
      548     2407               0   NO ERROR
      549     2408               1   RETRY
      550     2409               2   RETRY ON DIFFERENT CHANNEL
      551     2410               3   OPERATOR MESSAGE ISSUED, WAIT FOR KEYIN
      552     2411        */
      553     2412        /* SCU DETECTED FAULTS - BITS 26-29 OF SYSTEM FAULT WORD */
      554     2413    1   DCL SCCODE(0:15) UBIN(2) UNAL CONSTANT INIT(1*2,3,1*6,2*2,3,2*2,1*2);
      555     2414    1   DCL SCTYC(0:15) BIT(36) CONSTANT INIT('0'B,%TYC_IOERR,%TYC_MTRAP,%TYC_IOERR*13);
      556     2415        /* IO CENTRAL DETECTED FAULTS - BITS 30-35 OF SYSTEM FAULT WORD */
      557     2416    1   DCL IOCODE(0:16) UBIN(2) UNAL CONSTANT INIT(1,3,2*7,3,2,3*2,2,3,2*2);
      558     2417    1   DCL IOTYC(0:16) BIT(36) CONSTANT INIT('0'B,%TYC_IOERR*3,%TYC_MTRAP,%TYC_IOERR*8,
      559     2418    1          %TYC_MTRAP,%TYC_IOERR*3);
      560     2419        /**/
      561     2420        /* TYC VALUES FOR NIF$ANIOM */
      562     2421        /* CHANNEL DETECTED ERRORS - BITS 18-20 OF STATUS WORD */
      563     2422    1   DCL CHTYC(0:7) BIT(36) CONSTANT INIT('0'B,%TYC_IOERR*4,%TYC_MTRAP,%TYC_IOERR*2);
      564     2423        /* IO PROCESSOR DETECTED ERRORS - BITS 21-23 OF STATUS WORD */
      565     2424    1   DCL CENTYC(0:7) BIT(36) CONSTANT INIT('0'B,%TYC_IOERR*2,%TYC_MTRAP,%TYC_IOERR*4);
      566     2425        /**/
      567     2426        %EJECT;
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:97   
      568     2427    1           CODE=0;

   2427  1 000002   200007 450100                    STZ     CODE,,AUTO

      569     2428    1           PARM='0'B;

   2428  1 000003   000000 235003                    LDA     0,DU
         1 000004   000000 236003                    LDQ     0,DU
         1 000005   200010 757100                    STAQ    PARM,,AUTO

      570     2429    1           STCODE=REQ.FLTSTAT.SC;

   2429  1 000006   200003 470500                    LDP0    @REQ,,AUTO
         1 000007   000014 236100                    LDQ     12,,PR0
         1 000010   000006 772000                    QRL     6
         1 000011   000017 376007                    ANQ     15,DL
         1 000012   200012 756100                    STQ     STCODE,,AUTO

      571     2430    2           IF STCODE~=0 THEN DO;           /* SCU-DETECTED FAULTS */

   2430  1 000013   000027 600000 1                  TZE     s:2434

      572     2431    2              REQ.TYC=REQ.TYC|SCTYC(STCODE);

   2431  1 000014   000000 620006                    EAX0    0,QL
         1 000015   000021 236100                    LDQ     17,,PR0
         1 000016   000003 276010 0                  ORQ     SCTYC,X0
         1 000017   000021 756100                    STQ     17,,PR0

      573     2432    2              CODE=SCCODE(STCODE);

   2432  1 000020   200012 235100                    LDA     STCODE,,AUTO
         1 000021   000001 735000                    ALS     1
         1 000022   000024 605000 1                  TPL     s:2432+4
         1 000023   000044 035003                    ADLA    36,DU
         1 000024   003100 061405                    CSR     bolr='003'O
         1 000025   000002 000002 0                  BDSC    SCCODE,A                 by=0,bit=0,n=2
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:98   
         1 000026   200007 000044                    BDSC    CODE,,AUTO               by=0,bit=0,n=36

      574     2433    2              END;

      575     2434    1           STCODE=REQ.FLTSTAT.IO;

   2434  1 000027   000014 236100                    LDQ     12,,PR0
         1 000030   000077 376007                    ANQ     63,DL
         1 000031   200012 756100                    STQ     STCODE,,AUTO

      576     2435    2           IF STCODE~=0 THEN DO;           /* IOM-DETECTED FAULTS */

   2435  1 000032   000066 600000 1                  TZE     s:2441

      577     2436    2              REQ.TYC=REQ.TYC|IOTYC(STCODE);

   2436  1 000033   000000 620006                    EAX0    0,QL
         1 000034   000021 236100                    LDQ     17,,PR0
         1 000035   000024 276010 0                  ORQ     IOTYC,X0
         1 000036   000021 756100                    STQ     17,,PR0

      578     2437    2              IF CODE=0 THEN CODE=IOCODE(STCODE);

   2437  1 000037   200007 235100                    LDA     CODE,,AUTO
         1 000040   000050 601000 1                  TNZ     s:2438

   2437  1 000041   200012 235100                    LDA     STCODE,,AUTO
         1 000042   000001 735000                    ALS     1
         1 000043   000045 605000 1                  TPL     s:2437+6
         1 000044   000044 035003                    ADLA    36,DU
         1 000045   003100 061405                    CSR     bolr='003'O
         1 000046   000023 000002 0                  BDSC    IOCODE,A                 by=0,bit=0,n=2
         1 000047   200007 000044                    BDSC    CODE,,AUTO               by=0,bit=0,n=36

      579     2438    2              IF STCODE=3 AND NOT (HW_IMX OR HW_IOP) AND ADDR(FREPOS)~=ADDR(NIL) THEN

   2438  1 000050   200012 235100                    LDA     STCODE,,AUTO
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:99   
         1 000051   000003 115007                    CMPA    3,DL
         1 000052   000066 601000 1                  TNZ     s:2441
         1 000053   000000 234000 xsym               SZN     HW_IMX
         1 000054   000066 604000 1                  TMI     s:2441
         1 000055   000000 234000 xsym               SZN     HW_IOP
         1 000056   000066 604000 1                  TMI     s:2441
         1 000057   200005 236100                    LDQ     @FREPOS,,AUTO
         1 000060   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000061   000066 600000 1                  TZE     s:2441

      580     2439    2                 FREPOS='1'B;              /* IOM SCRATCH PAD ACCESS ERROR */

   2439  1 000062   200005 471500                    LDP1    @FREPOS,,AUTO
         1 000063   003100 060400                    CSL     bolr='003'O
         1 000064   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         1 000065   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

      581     2440    2              END;

      582     2441    1           RETRY='1'B;                     /* ALWAYS DO A RETRY, EVEN IF CODE=0 */

   2441  1 000066   200004 471500                    LDP1    @RETRY,,AUTO
         1 000067   003100 060400                    CSL     bolr='003'O
         1 000070   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         1 000071   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

      583     2442    2           IF CODE=3 THEN DO;              /* NOTIFY OPERATOR OF MEMORY PROBLEM */

   2442  1 000072   200007 235100                    LDA     CODE,,AUTO
         1 000073   000003 115007                    CMPA    3,DL
         1 000074   000140 601000 1                  TNZ     s:2449

      584     2443    2              DCT$=REQ.DCT$;

   2443  1 000075   000002 236100                    LDQ     2,,PR0
         1 000076   200006 756100                    STQ     DCT$,,AUTO

PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:100  
      585     2444    2              PARM.IOM=DCT.DQH$->DQH.IOCHAN.IOM;

   2444  1 000077   200006 473500                    LDP3    DCT$,,AUTO
         1 000100   300023 474500                    LDP4    19,,PR3
         1 000101   400001 236100                    LDQ     1,,PR4
         1 000102   000031 772000                    QRL     25
         1 000103   000003 376007                    ANQ     3,DL
         1 000104   200010 756100                    STQ     PARM,,AUTO

      586     2445    2              CALL NIF$DCWLIST(REQ,,,PARM.MEMADDR);

   2445  1 000105   200011 635500                    EPPR5   PARM+1,,AUTO
         1 000106   200017 455500                    STP5    STCODE+5,,AUTO
         1 000107   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000110   200016 756100                    STQ     STCODE+4,,AUTO
         1 000111   200003 235100                    LDA     @REQ,,AUTO
         1 000112   200014 757100                    STAQ    STCODE+2,,AUTO
         1 000113   200014 630500                    EPPR0   STCODE+2,,AUTO
         1 000114   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000115   000000 701000 xent               TSX1    NIF$DCWLIST
         1 000116   000000 011000                    NOP     0

      587     2446    2              CALL OCI$MK_WR(M_DEVC,IOMEMERR_MSG#,2,LEN,PARM,BINBIT(DCT.DCTX,36));

   2446  1 000117   200006 470500                    LDP0    DCT$,,AUTO
         1 000120   000006 236100                    LDQ     6,,PR0
         1 000121   000025 772000                    QRL     21
         1 000122   200014 756100                    STQ     STCODE+2,,AUTO
         1 000123   200014 631500                    EPPR1   STCODE+2,,AUTO
         1 000124   200023 451500                    STP1    STCODE+9,,AUTO
         1 000125   200010 633500                    EPPR3   PARM,,AUTO
         1 000126   200022 453500                    STP3    STCODE+8,,AUTO
         1 000127   000002 237000 2                  LDAQ    2
         1 000130   200020 757100                    STAQ    STCODE+6,,AUTO
         1 000131   000004 237000 2                  LDAQ    4
         1 000132   200016 757100                    STAQ    STCODE+4,,AUTO
         1 000133   200016 630500                    EPPR0   STCODE+4,,AUTO
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:101  
         1 000134   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000135   000000 701000 xent               TSX1    OCI$MK_WR
         1 000136   000000 011000                    NOP     0

      588     2447    2              ALTRETURN;

   2447  1 000137   000000 702200 xent               TSX2  ! X66_AALT

      589     2448    2              END/* IF CODE */;
      590     2449    1           RETURN;

   2449  1 000140   000000 702200 xent               TSX2  ! X66_ARET

      591     2450        %EJECT;
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:102  
      592     2451        /*D*
      593     2452              NAME:          NIF$ANIOM
      594     2453              CALL:          CALL NIF$ANIOM (REQ, RETRY)
      595     2454              INPUT:         REQ:  IOQ packet
      596     2455              OUTPUT:        RETRY:  if set, retry IO
      597     2456              DESCRIPTION:   Analyzes the user fault portion of the status word,
      598     2457                             which contains channel-detected and IO-Central-detected
      599     2458                             errors.  If either of these are non-zero, sets REQ.TYC and
      600     2459                             the retry bit.
      601     2460        */
      602     2461
      603     2462    1   NIF$ANIOM: ENTRY (REQ,RETRY) ALTRET;

   2462  1 000141   000000 700200 xent  NIF$ANIOM    TSX0  ! X66_AUTO_3
         1 000142   000024 000003                    ZERO    20,3

      604     2463    1           STCODE=REQ.STATUS.IOM.CENTRAL;

   2463  1 000143   200003 470500                    LDP0    @REQ,,AUTO
         1 000144   000014 236100                    LDQ     12,,PR0
         1 000145   000014 772000                    QRL     12
         1 000146   000007 376007                    ANQ     7,DL
         1 000147   200012 756100                    STQ     STCODE,,AUTO

      605     2464    2           IF STCODE~=0 THEN DO;           /* IOM CENTRAL ERRORS */

   2464  1 000150   000161 600000 1                  TZE     s:2468

      606     2465    2              REQ.TYC=REQ.TYC|CENTYC(STCODE);

   2465  1 000151   000000 620006                    EAX0    0,QL
         1 000152   000021 236100                    LDQ     17,,PR0
         1 000153   000055 276010 0                  ORQ     CENTYC,X0
         1 000154   000021 756100                    STQ     17,,PR0

      607     2466    2              RETRY='1'B;

PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:103  
   2466  1 000155   200004 471500                    LDP1    @RETRY,,AUTO
         1 000156   003100 060400                    CSL     bolr='003'O
         1 000157   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         1 000160   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

      608     2467    2              END;

      609     2468    1           STCODE=REQ.STATUS.IOM.CHANNEL;

   2468  1 000161   000014 236100                    LDQ     12,,PR0
         1 000162   000017 772000                    QRL     15
         1 000163   000007 376007                    ANQ     7,DL
         1 000164   200012 756100                    STQ     STCODE,,AUTO

      610     2469    2           IF STCODE~=0 THEN DO;           /* IOM CHANNEL ERRORS */

   2469  1 000165   000176 600000 1                  TZE     s:2473

      611     2470    2              REQ.TYC=REQ.TYC|CHTYC(STCODE);

   2470  1 000166   000000 620006                    EAX0    0,QL
         1 000167   000021 236100                    LDQ     17,,PR0
         1 000170   000045 276010 0                  ORQ     CHTYC,X0
         1 000171   000021 756100                    STQ     17,,PR0

      612     2471    2              RETRY='1'B;

   2471  1 000172   200004 471500                    LDP1    @RETRY,,AUTO
         1 000173   003100 060400                    CSL     bolr='003'O
         1 000174   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         1 000175   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

      613     2472    2              END;

      614     2473    1           REQ.STATUS.NCP=7;               /* INDICATE IO NEVER GOT STARTED */

   2473  1 000176   700000 236007                    LDQ     -32768,DL
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:104  
         1 000177   000015 256100                    ORSQ    13,,PR0

      615     2474    1           RETURN;

   2474  1 000200   000000 702200 xent               TSX2  ! X66_ARET

LEN
 Sect OctLoc
   0     000   004*** ******   004*** ******                                    ........

SCCODE
 Sect OctLoc
   0     002   272525 535120                                                    ...P

SCTYC
 Sect OctLoc
   0     003   000000 000000   001000 000000   000100 000000   001000 000000    .........@......
   0     007   001000 000000   001000 000000   001000 000000   001000 000000    ................
   0     017*  001000 000000   001000 000000   001000 000000   001000 000000    ................

IOCODE
 Sect OctLoc
   0     023   365252 737350                                                    ....

IOTYC
 Sect OctLoc
   0     024   000000 000000   001000 000000   001000 000000   001000 000000    ................
   0     030   000100 000000   001000 000000   001000 000000   001000 000000    .@..............
   0     034   001000 000000   001000 000000   001000 000000   001000 000000    ................
   0     040   001000 000000   000100 000000   001000 000000   001000 000000    .....@..........
   0     044   001000 000000                                                    ....

CHTYC
 Sect OctLoc
   0     045   000000 000000   001000 000000   001000 000000   001000 000000    ................
   0     051   001000 000000   000100 000000   001000 000000   001000 000000    .....@..........

PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:105  
CENTYC
 Sect OctLoc
   0     055   000000 000000   001000 000000   001000 000000   000100 000000    .............@..
   0     061   001000 000000   001000 000000   001000 000000   001000 000000    ................

(unnamed)
 Sect OctLoc
   2     000   100000 000000   000000 000226   000004 006000   000000 006000    @...............
   2     004   000000 006000   000001 006000                                    ........
      616     2475    1   END NIF$ANFAULT;
      617     2476        %EOD;

PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:106  
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure NIF$ANFAULT.
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:107  

 **** Variables and constants ****

  ****  Section 000 RoData NIF$ANFAULT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    55-0-0/b BIT         r     1 CENTYC(0:7)               45-0-0/b BIT         r     1 CHTYC(0:7)
    23-0-0/b UBIN(2)     r     1 IOCODE(0:16)              24-0-0/b BIT         r     1 IOTYC(0:16)
     0-0-0/w UBIN(9)     r     1 LEN(0:1)                   2-0-0/b UBIN(2)     r     1 SCCODE(0:15)
     3-0-0/b BIT         r     1 SCTYC(0:15)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @FREPOS                    3-0-0/w PTR         r     1 @REQ
     4-0-0/w PTR         r     1 @RETRY                     7-0-0/w SBIN        r     1 CODE
     6-0-0/w PTR         r     1 DCT$                      *0-0-0/b BIT         r     1 FREPOS
    10-0-0/w STRC(72)    r     1 PARM                      *0-0-0/d STRC(1080)  r     1 REQ
    *0-0-0/b BIT         r     1 RETRY                     12-0-0/w SBIN        r     1 STCODE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 HW_IMX                     0-0-0/w BIT         r     1 HW_IOP
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$FQ$                     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$RP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:108  

     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/w STRC(648)   r     1 DQH


   Procedure NIF$ANFAULT requires 129 words for executable code.
   Procedure NIF$ANFAULT requires 20 words of local(AUTO) storage.
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:109  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:110  
          MINI XREF LISTING

CENTYC
      2424**DCL      2465>>ASSIGN
CHTYC
      2422**DCL      2470>>ASSIGN
CODE
      2320**DCL      2427<<ASSIGN   2432<<ASSIGN   2437>>IF       2437<<ASSIGN   2442>>IF
DCT.DCTX
      2338**DCL      2446>>CALL
DCT.DP
      2357**DCL      2364--REDEF    2367--REDEF    2368--REDEF    2370--REDEF    2370--REDEF    2371--REDEF
      2372--REDEF    2372--REDEF
DCT.DQH$
      2353**DCL      2444>>ASSIGN
DCT.MPC.IOCHANX
      2365**DCL      2365--REDEF
DCT$
      2319**DCL      2337--IMP-PTR  2443<<ASSIGN   2444>>ASSIGN   2446>>CALL
DQH.IOCHAN.IOM
      2388**DCL      2444>>ASSIGN
DQH.IOCHANX
      2387**DCL      2388--REDEF
DQH.MBX$
      2396**DCL      2397--REDEF
FREPOS
      2251**DCL        29--PROC     2438--IF       2439<<ASSIGN
HW_IMX
       699**DCL      2438>>IF
HW_IOP
       696**DCL      2438>>IF
IOCODE
      2416**DCL      2437>>ASSIGN
IOTYC
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:111  
      2417**DCL      2436>>ASSIGN
LEN
      2402**DCL      2446<>CALL
N$DCT$$
      1111**DCL      1245--IMP-PTR
N$FQ$
      1111**DCL      1246--IMP-PTR
N$REQ_INIT.BUFADDR
      1130**DCL      1131--REDEF    1131--REDEF
N$REQ_INIT.DLA.DRELADDR
      1122**DCL      1122--REDEF
N$REQ_INIT.DVE.EOMCHAR
      1159**DCL      1160--REDEF
N$REQ_INIT.EAINFO
      1153**DCL      1153--REDEF
N$REQ_INIT.EAINFOX
      1153**DCL      1154--REDEF
N$REQ_INIT.EVNTINFO
      1154**DCL      1154--REDEF
N$REQ_INIT.STATUS
      1135**DCL      1141--REDEF
NI$FQ$
      1171**DCL      1247--IMP-PTR
NI$IBUF$
      1171**DCL      1247--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
      1181**DCL      1182--REDEF    1182--REDEF
NI$IMXMBX_INIT.SIZE
      1183**DCL      1183--REDEF
NI$REQ_INIT.DCW
      1205**DCL      1208--REDEF
NI$REQ_INIT.DCW.TALLY
      1206**DCL      1206--REDEF
NI$REQ_INIT.IDCW.EXTA
      1208**DCL      1208--REDEF
NI$REQ_INIT.PCW
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:112  
      1210**DCL      1214--REDEF
NI$REQ_INIT.SEEK
      1215**DCL      1216--REDEF    1217--REDEF
NI$RP$
      1219**DCL      1249--IMP-PTR
NIF$DCWLIST
      2314**DCL-ENT  2445--CALL
NI_MBX_INIT.DCW.CONTROL.AE
      1241**DCL      1241--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
      1237**DCL      1237--REDEF
OCI$MK_WR
      2315**DCL-ENT  2446--CALL
PARM
      2321**DCL      2428<<ASSIGN   2446<>CALL
PARM.IOM
      2322**DCL      2444<<ASSIGN
PARM.MEMADDR
      2323**DCL      2445<>CALL
REQ
      2261**DCL        29--PROC     2445<>CALL     2462--ENTRY
REQ.BUFADDR
      2270**DCL      2271--REDEF    2271--REDEF
REQ.DCT$
      2262**DCL      2443>>ASSIGN
REQ.DLA.DRELADDR
      2262**DCL      2262--REDEF
REQ.DVE.EOMCHAR
      2299**DCL      2300--REDEF
REQ.EAINFO
      2293**DCL      2293--REDEF
REQ.EAINFOX
      2293**DCL      2294--REDEF
REQ.EVNTINFO
      2294**DCL      2294--REDEF
REQ.FLTSTAT.IO
PL6.E3A0      #003=NIF$ANFAULT File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:32 Page:113  
      2282**DCL      2434>>ASSIGN
REQ.FLTSTAT.SC
      2282**DCL      2429>>ASSIGN
REQ.STATUS
      2275**DCL      2281--REDEF
REQ.STATUS.IOM.CENTRAL
      2278**DCL      2463>>ASSIGN
REQ.STATUS.IOM.CHANNEL
      2278**DCL      2468>>ASSIGN
REQ.STATUS.NCP
      2279**DCL      2473<<ASSIGN
REQ.TYC
      2283**DCL      2431<<ASSIGN   2431>>ASSIGN   2436<<ASSIGN   2436>>ASSIGN   2465<<ASSIGN   2465>>ASSIGN
      2470<<ASSIGN   2470>>ASSIGN
RETRY
      2310**DCL        29--PROC     2441<<ASSIGN   2462--ENTRY    2466<<ASSIGN   2471<<ASSIGN
SCCODE
      2413**DCL      2432>>ASSIGN
SCTYC
      2414**DCL      2431>>ASSIGN
STCODE
      2324**DCL      2429<<ASSIGN   2430>>IF       2431>>ASSIGN   2432>>ASSIGN   2434<<ASSIGN   2435>>IF
      2436>>ASSIGN   2437>>ASSIGN   2438>>IF       2463<<ASSIGN   2464>>IF       2465>>ASSIGN   2468<<ASSIGN
      2469>>IF       2470>>ASSIGN

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:114  
      618        1        /*T***********************************************************/
      619        2        /*T*                                                         */
      620        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      621        4        /*T*                                                         */
      622        5        /*T***********************************************************/
      623        6        /*F*
      624        7              NAME:          NIF$DCWLIST
      625        8              PURPOSE:       Trace the DCWLIST.
      626        9              DESCRIPTION:   Reports process of IO at occurrence of error.
      627       10        */
      628       11        /**/
      629       12        /*D*
      630       13              NAME:          NIF$DCWLIST
      631       14              CALL:          CALL NIF$ANFAULT (REQ, LIDCW, LDCW, MEMA)
      632       15              INPUT:         REQ:  IOQ packet
      633       16              OUTPUT:        LIDCW:  last IDCW (optional)
      634       17                             LDCW:  last DCW (optional)
      635       18                             MEMA:  last absolute memory address referenced (optional)
      636       19              DESCRIPTION:   Traces through the DCWLIST, using the LPW and DCW
      637       20                             residue provided in the channel mailbox and/or scratchpad
      638       21                             access.
      639       22        */
      640       23        %EJECT;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:115  
      641       24        NIF$DCWLIST: PROC (REQ,LIDCW,LDCW,MEMA);
      642       25        %INCLUDE N$REQ;
      643       99        %N$REQ (NAME=REQ,STCLASS="");
      644      157    1   DCL LIDCW BIT(36) ALIGNED;              /* LAST IDCW */
      645      158    1   DCL LDCW BIT(36) ALIGNED;               /* LAST DCW */
      646      159    1   DCL MEMA UBIN;
      647      160    1   DCL 1 MEM REDEF MEMA,
      648      161    1         2 AEXT UBIN(18) UNAL,             /* ADDRESS EXTENSION */
      649      162    1         2 ADR UBIN(18) UNAL;              /* ADDRESS */
      650      163    1   DCL 1 MEMP REDEF MEMA,
      651      164    1         2 PNO UBIN(26) UNAL,              /* PAGE NUMBER */
      652      165    1         2 OFFSET UBIN(10) UNAL;           /* OFFSET WITHIN PAGE */
      653      166        /**/
      654      167        %INCLUDE B$MAP;
      655      266        %INCLUDE B_MLSMAC_C;
      656     1208        %INCLUDE B_STRINGS_C;
      657     1337        %INCLUDE HF_DATA_R;
      658     1380        %INCLUDE NI_DATA_C;
      659     1493        %INCLUDE NI$TABLES;
      660     1709        %INCLUDE NI_MACROS_C;
      661     1976        %INCLUDE S_WSPTD_R;
      662     1992        /**/
      663     1993        /**/
      664     1994        %EQU LISTSRVC=1;                        /* LIST SERVICE */
      665     1995    1   DCL B$REAL$ PTR SYMREF;
      666     1996    1   DCL B$LS$ PTR SYMREF;
      667     1997    1   DCL B$MISC$ PTR SYMREF;
      668     1998    1   DCL IOS$ PTR;
      669     1999    1   DCL CONT BIT(1);
      670     2000        %DCW(STCLASS="BASED(DCW$)");
      671     2030        %IDCW(STCLASS="BASED(DCW$)");
      672     2062        %TDCW(STCLASS="BASED(DCW$)");
      673     2087        %NI$REQ (NAME=IOS,STCLASS="BASED(IOS$)");
      674     2112        %NI$IMXMBX (NAME=IMXMBX,STCLASS="BASED(MBX$)");
      675     2133        %NI$IOSTAT (NAME=IOSTAT,STCLASS="BASED(IOSTAT$)");
      676     2142        %B_MLS (FPTN=B$MLNK,STCLASS=BASED);
      677     2957    1   DCL DCW$ PTR;                           /* -> CURRENT DCW */
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:116  
      678     2958    1   DCL DCWA SBIN;                          /* (RELATIVE) ADDRESS OF LAST DCW */
      679     2959    1   DCL 1 DCWL REDEF DCWA,
      680     2960    1         2 AEXT UBIN(18) UNAL,
      681     2961    1         2 ADR UBIN(18) UNAL;
      682     2962    1   DCL AEXT UBIN;
      683     2963    1   DCL PTP REDEF AEXT SBIN;                /* USED FOR IMX */
      684     2964    1   DCL MODE SBIN;                          /* CURRENT ADDRESSING MODE */
      685     2965    1   DCL OFFSET REDEF MODE SBIN;             /* USED FOR IMX */
      686     2966    1   DCL MBX$ PTR;                           /* USED FOR IMX */
      687     2967    1   DCL IOSTAT$ PTR;                        /* USED FOR IMX */
      688     2968    1   DCL 1 PTW,                              /* USED FOR IMX */
      689     2969    1         2 RPN UBIN(18) HALIGNED,
      690     2970    1         2 * BIT(12) UNAL,
      691     2971    1         2 PGPRES BIT(1) UNAL,
      692     2972    1         2 * BIT(5) UNAL;
      693     2973    1   DCL BASE SBIN;                          /* USED FOR IMX */
      694     2974    1   DCL 1 PNTR BASED ALIGNED,
      695     2975    1         2 W UBIN(18) UNAL,
      696     2976    1         2 * BIT(18);
      697     2977    1   DCL B$WORD UBIN BASED;
      698     2978        %EJECT;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:117  
      699     2979    1           IOS$=REQ.IOS$;
      700     2980    2           IF NOT HW_IMX THEN DO;
      701     2981    2              IF IOS.PCW.FLAGS AND REQ.IOFLG.LPW23 THEN MODE=3;
      702     2982    2              ELSE MODE=1;
      703     2983    2              DCW$=ADDR(IOS.DCW(0));
      704     2984    2              DCWA=ADDR(DCW$)->PNTR.W;
      705     2985    2              IF ADDR(LIDCW)~=ADDR(NIL) THEN LIDCW=IOS.PCW;
      706     2986    2              CONT=IOS.PCW.MASK.CONT;
      707     2987    3   NEXTDCW:   DO WHILE('1'B);
      708     2988    3                 IF DCWL.ADR=REQ.FLPW.NDCWA THEN GOTO DCWFOUND;
      709     2989    4                 IF DCW.ICP=7 THEN DO;     /* IDCW */
      710     2990    4                    IF ADDR(LIDCW)~=ADDR(NIL) THEN LIDCW=IDCW;
      711     2991    4                    IF MODE=1 AND IDCW.EC THEN AEXT=IDCW.EXTA;
      712     2992    4                    CONT=IDCW.CONT;
      713     2993    4                    END;
      714     2994    4                 ELSE DO CASE(DCW.TYPE);
      715     2995    4                  CASE(0);                 /* IOTD */
      716     2996    4                    IF NOT CONT THEN GOTO DCWFOUND;
      717     2997    4                  CASE(2);                 /* TDCW */
      718     2998    5                    DO CASE(MODE);
      719     2999    5                     CASE(1);
      720     3000    5                       IF TDCW.FLAGS.PDCW THEN GOTO DCWFOUND;
      721     3001    5                       IF TDCW.FLAGS.REL THEN MODE=3;
      722     3002    5                       ELSE MODE=2;
      723     3003    5                       DCW$=PINCRW(B$REAL$,DCW.FWA);
      724     3004    5                     CASE(2);
      725     3005    5                       IF TDCW.FLAGS.PDCW THEN GOTO DCWFOUND;
      726     3006    5                       IF TDCW.FLAGS.REL THEN MODE=3;
      727     3007    5                       ELSE GOTO DCWFOUND;
      728     3008    5                       DCW$=PINCRW(B$REAL$,DCW.FWA);
      729     3009    5                     CASE(3);
      730     3010    5                       IF TDCW.FLAGS.PDCW THEN GOTO DCWFOUND;
      731     3011    5                       DCW$=PINCRW(B$REAL$,DCW.FWA);
      732     3012    5                     CASE(ELSE);
      733     3013    5                       GOTO DCWFOUND;
      734     3014    5                     END;
      735     3015    4                    GOTO NEXTDCW;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:118  
      736     3016    4                  END/* CASE DCW.TYPE */;
      737     3017    3                 DCW$=PINCRW(DCW$,1);
      738     3018    3                 DCWA=DCWA+1;
      739     3019    3                 END NEXTDCW;
      740     3020    2   DCWFOUND:  IF ADDR(LDCW)~=ADDR(NIL) THEN LDCW=DCW;
      741     3021    3              IF ADDR(MEMA)~=ADDR(NIL) THEN DO;
      742     3022    3                 IF REQ.STATUS.MAJOR=%SYSTEM_FAULT AND REQ.FLTSTAT.SRQ=%LISTSRVC
      743     3023    4                   OR REQ.STATUS.NCP=7 THEN DO;
      744     3024    4                    MEMA=DCWA;
      745     3025    4                    IF MODE=3 THEN MODE=1;
      746     3026    4                    END;
      747     3027    4                 ELSE DO;
      748     3028    4                    MEMA=REQ.STATUS.NWA;
      749     3029    4                    IF MODE<3 THEN MEM.AEXT=AEXT;
      750     3030    4                    ELSE IF MEMA<REQ.LPWX.BASE*2+DCW.FWA THEN MEM.AEXT=1;
      751     3031    4                    END;
      752     3032    3                 END/* IF ADDR(MEMA) */;
      753     3033    2              END;
      754     3034
      755     3035    2           ELSE DO;                        /* HW_IMX */
      756     3036    2              MBX$ = PINCRW (IOS$, %IMX_MBX_OFFSET);
      757     3037    2              IOSTAT$ = PINCRW (IOS$, %IMX_STATUS_OFFSET);
      758     3038    2              IF (IOSTAT.LPW_LASTIDCW = '0'B) OR (IOSTAT.LPW_RESIDUE = '0'B) THEN
      759     3039    2                 RETURN;
      760     3040    2              IF ADDR(LIDCW)~=ADDR(NIL) THEN
      761     3041    2                 CALL READDCW (IOSTAT.LPW_LASTIDCW, LIDCW);
      762     3042    2              IF ADDR(LDCW)~=ADDR(NIL) THEN
      763     3043    2                 CALL READDCW (IOSTAT.LPW_RESIDUE, LDCW);
      764     3044    3              IF ADDR(MEMA)~=ADDR(NIL) THEN DO;
      765     3045    4                 IF REQ.STATUS.NCP=7 THEN DO;
      766     3046    5                    CALL READDCW (IOSTAT.LPW_RESIDUE, MEMA) WHENRETURN DO;
      767     3047                                                /* READDCW CALL SETS UP PTW */
      768     3048    5                       MEMA = PTW.RPN*1024 + OFFSET;
      769     3049    5                       END;
      770     3050    4                    END;
      771     3051    4                 ELSE DO;
      772     3052    4                    BASE = IOSTAT.LPW_RESIDUE.DATA.BASE;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:119  
      773     3053    5                    IF REQ.PTP~=0 THEN DO;
      774     3054    5                       OFFSET = IMXMBX.PAGED_BASE.OFFSET(BASE) + IOSTAT.STATUS.NWA;
      775     3055    5                       PTP = IMXMBX.PAGED_BASE.PTWADDR(BASE) + OFFSET/1024;
      776     3056    5                       OFFSET = MOD (OFFSET, 1024);
      777     3057    6                       DO INHIBIT;
      778     3058    6                          B$LS$->B$MLNK.MISC = B$LS$->B$MLNK.LOWMEM;
      779     3059    6                          B$LS$->B$MLNK.MISC.BOUND = 3;
      780     3060    6                          B$LS$->B$MLNK.MISC.BASE = PTP*4;
      781     3061    6                          PTW = B$MISC$->PNTR;
      782     3062    6                          END;
      783     3063    5                       MEMA = PTW.RPN*1024 + OFFSET;
      784     3064    5                       END;
      785     3065    4                    ELSE
      786     3066    4                       MEMA = IMXMBX.NPAGED_IND.PHYS(BASE) + REQ.STATUS.NWA;
      787     3067    4                    END;
      788     3068    3                 END;
      789     3069    2              END;
      790     3070    1           RETURN;
      791     3071        %EJECT;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:120  
      792     3072        /*
      793     3073           RETURN DCW INDICATED BY LPW
      794     3074        */
      795     3075
      796     3076    1   READDCW: PROC (LPW, DCW) ALTRET;
      797     3077
      798     3078    2   DCL 1 LPW,
      799     3079    2         2 DCW_ADDR UBIN(18) HALIGNED,
      800     3080    2         2 DATA UNAL,
      801     3081    2           3 IBC BIT(1) UNAL,
      802     3082    2           3 BASE UBIN(2) UNAL,
      803     3083    2         2 * BIT(6),
      804     3084    2         2 DCWLIST UNAL,
      805     3085    2           3 IBC BIT(1) UNAL,
      806     3086    2           3 BASE UBIN(2) UNAL,
      807     3087    2         2 * BIT(6) UNAL;
      808     3088    2   DCL DCW UBIN;
      809     3089
      810     3090    3           DO INHIBIT;
      811     3091    3              B$LS$->B$MLNK.MISC = B$LS$->B$MLNK.LOWMEM;
      812     3092    3              B$LS$->B$MLNK.MISC.BOUND = 3;
      813     3093    3              BASE = LPW.DCWLIST.BASE;
      814     3094    4              IF REQ.PTP~=0 THEN DO;
      815     3095    4                 OFFSET = IMXMBX.PAGED_BASE.OFFSET(BASE) + LPW.DCW_ADDR;
      816     3096    4                 PTP = IMXMBX.PAGED_BASE.PTWADDR(BASE) + OFFSET/1024;
      817     3097    4                 OFFSET = MOD (OFFSET, 1024);
      818     3098    4                 B$LS$->B$MLNK.MISC.BASE = PTP*4;
      819     3099    4                 PTW = B$MISC$->PNTR;
      820     3100    5                 IF NOT PTW.PGPRES THEN DO;
      821     3101    5                    DCW = 0;
      822     3102    5                    ALTRETURN;
      823     3103    5                    END;
      824     3104    4                 B$LS$->B$MLNK.MISC.BASE = PTW.RPN*4096 + OFFSET*4;
      825     3105    4                 END;
      826     3106    4              ELSE DO;
      827     3107    4                 OFFSET = IMXMBX.NPAGED_IND.PHYS(BASE) + LPW.DCW_ADDR;
      828     3108    4                 B$LS$->B$MLNK.MISC.BASE = OFFSET*4;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:121  
      829     3109    4                 END;
      830     3110    3              DCW = B$MISC$->B$WORD;
      831     3111    3              END;
      832     3112    2           RETURN;
      833     3113    2   END READDCW;
      834     3114    1   END NIF$DCWLIST;

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:122  
--  Include file information  --

   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure NIF$DCWLIST.

   Procedure NIF$DCWLIST requires 366 words for executable code.
   Procedure NIF$DCWLIST requires 24 words of local(AUTO) storage.

    No errors detected in file NIF$FAULT.:E05TSI    .

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:123  

 Object Unit name= NIF$DCWLIST                                File name= NIF$FAULT.:E05TOU
 UTS= JUL 30 '97 03:33:00.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   366    556  NIF$DCWLIST
    1  RoData even  none     2      2  NIF$DCWLIST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        4  NIF$DCWLIST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     HW_IMX                                B$REAL$                               B$LS$
     B$MISC$                               B_VECTNIL
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:124  


      618        1        /*T***********************************************************/
      619        2        /*T*                                                         */
      620        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      621        4        /*T*                                                         */
      622        5        /*T***********************************************************/
      623        6        /*F*
      624        7              NAME:          NIF$DCWLIST
      625        8              PURPOSE:       Trace the DCWLIST.
      626        9              DESCRIPTION:   Reports process of IO at occurrence of error.
      627       10        */
      628       11        /**/
      629       12        /*D*
      630       13              NAME:          NIF$DCWLIST
      631       14              CALL:          CALL NIF$ANFAULT (REQ, LIDCW, LDCW, MEMA)
      632       15              INPUT:         REQ:  IOQ packet
      633       16              OUTPUT:        LIDCW:  last IDCW (optional)
      634       17                             LDCW:  last DCW (optional)
      635       18                             MEMA:  last absolute memory address referenced (optional)
      636       19              DESCRIPTION:   Traces through the DCWLIST, using the LPW and DCW
      637       20                             residue provided in the channel mailbox and/or scratchpad
      638       21                             access.
      639       22        */
      640       23        %EJECT;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:125  
      641       24        NIF$DCWLIST: PROC (REQ,LIDCW,LDCW,MEMA);

     24  0 000000   000000 700200 xent  NIF$DCWLIST  TSX0  ! X66_AUTO_4
         0 000001   000030 000004                    ZERO    24,4

      642       25        %INCLUDE N$REQ;
      643       99        %N$REQ (NAME=REQ,STCLASS="");
      644      157    1   DCL LIDCW BIT(36) ALIGNED;              /* LAST IDCW */
      645      158    1   DCL LDCW BIT(36) ALIGNED;               /* LAST DCW */
      646      159    1   DCL MEMA UBIN;
      647      160    1   DCL 1 MEM REDEF MEMA,
      648      161    1         2 AEXT UBIN(18) UNAL,             /* ADDRESS EXTENSION */
      649      162    1         2 ADR UBIN(18) UNAL;              /* ADDRESS */
      650      163    1   DCL 1 MEMP REDEF MEMA,
      651      164    1         2 PNO UBIN(26) UNAL,              /* PAGE NUMBER */
      652      165    1         2 OFFSET UBIN(10) UNAL;           /* OFFSET WITHIN PAGE */
      653      166        /**/
      654      167        %INCLUDE B$MAP;
      655      266        %INCLUDE B_MLSMAC_C;
      656     1208        %INCLUDE B_STRINGS_C;
      657     1337        %INCLUDE HF_DATA_R;
      658     1380        %INCLUDE NI_DATA_C;
      659     1493        %INCLUDE NI$TABLES;
      660     1709        %INCLUDE NI_MACROS_C;
      661     1976        %INCLUDE S_WSPTD_R;
      662     1992        /**/
      663     1993        /**/
      664     1994        %EQU LISTSRVC=1;                        /* LIST SERVICE */
      665     1995    1   DCL B$REAL$ PTR SYMREF;
      666     1996    1   DCL B$LS$ PTR SYMREF;
      667     1997    1   DCL B$MISC$ PTR SYMREF;
      668     1998    1   DCL IOS$ PTR;
      669     1999    1   DCL CONT BIT(1);
      670     2000        %DCW(STCLASS="BASED(DCW$)");
      671     2030        %IDCW(STCLASS="BASED(DCW$)");
      672     2062        %TDCW(STCLASS="BASED(DCW$)");
      673     2087        %NI$REQ (NAME=IOS,STCLASS="BASED(IOS$)");
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:126  
      674     2112        %NI$IMXMBX (NAME=IMXMBX,STCLASS="BASED(MBX$)");
      675     2133        %NI$IOSTAT (NAME=IOSTAT,STCLASS="BASED(IOSTAT$)");
      676     2142        %B_MLS (FPTN=B$MLNK,STCLASS=BASED);
      677     2957    1   DCL DCW$ PTR;                           /* -> CURRENT DCW */
      678     2958    1   DCL DCWA SBIN;                          /* (RELATIVE) ADDRESS OF LAST DCW */
      679     2959    1   DCL 1 DCWL REDEF DCWA,
      680     2960    1         2 AEXT UBIN(18) UNAL,
      681     2961    1         2 ADR UBIN(18) UNAL;
      682     2962    1   DCL AEXT UBIN;
      683     2963    1   DCL PTP REDEF AEXT SBIN;                /* USED FOR IMX */
      684     2964    1   DCL MODE SBIN;                          /* CURRENT ADDRESSING MODE */
      685     2965    1   DCL OFFSET REDEF MODE SBIN;             /* USED FOR IMX */
      686     2966    1   DCL MBX$ PTR;                           /* USED FOR IMX */
      687     2967    1   DCL IOSTAT$ PTR;                        /* USED FOR IMX */
      688     2968    1   DCL 1 PTW,                              /* USED FOR IMX */
      689     2969    1         2 RPN UBIN(18) HALIGNED,
      690     2970    1         2 * BIT(12) UNAL,
      691     2971    1         2 PGPRES BIT(1) UNAL,
      692     2972    1         2 * BIT(5) UNAL;
      693     2973    1   DCL BASE SBIN;                          /* USED FOR IMX */
      694     2974    1   DCL 1 PNTR BASED ALIGNED,
      695     2975    1         2 W UBIN(18) UNAL,
      696     2976    1         2 * BIT(18);
      697     2977    1   DCL B$WORD UBIN BASED;
      698     2978        %EJECT;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:127  
      699     2979    1           IOS$=REQ.IOS$;

   2979  0 000002   200003 470500                    LDP0    @REQ,,AUTO
         0 000003   000012 236100                    LDQ     10,,PR0
         0 000004   200007 756100                    STQ     IOS$,,AUTO

      700     2980    2           IF NOT HW_IMX THEN DO;

   2980  0 000005   000000 234000 xsym               SZN     HW_IMX
         0 000006   000271 604000 0                  TMI     s:3036

      701     2981    2              IF IOS.PCW.FLAGS AND REQ.IOFLG.LPW23 THEN MODE=3;

   2981  0 000007   200007 471500                    LDP1    IOS$,,AUTO
         0 000010   100013 236100                    LDQ     11,,PR1
         0 000011   000777 316007                    CANQ    511,DL
         0 000012   000021 600000 0                  TZE     s:2982
         0 000013   000004 236100                    LDQ     4,,PR0
         0 000014   020000 316007                    CANQ    8192,DL
         0 000015   000021 600000 0                  TZE     s:2982

   2981  0 000016   000003 235007                    LDA     3,DL
         0 000017   200014 755100                    STA     MODE,,AUTO
         0 000020   000023 710000 0                  TRA     s:2983

      702     2982    2              ELSE MODE=1;

   2982  0 000021   000001 235007                    LDA     1,DL
         0 000022   200014 755100                    STA     MODE,,AUTO

      703     2983    2              DCW$=ADDR(IOS.DCW(0));

   2983  0 000023   200007 236100                    LDQ     IOS$,,AUTO
         0 000024   000002 036003                    ADLQ    2,DU
         0 000025   200011 756100                    STQ     DCW$,,AUTO

      704     2984    2              DCWA=ADDR(DCW$)->PNTR.W;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:128  

   2984  0 000026   200011 235100                    LDA     DCW$,,AUTO
         0 000027   000022 771000                    ARL     18
         0 000030   200012 755100                    STA     DCWA,,AUTO

      705     2985    2              IF ADDR(LIDCW)~=ADDR(NIL) THEN LIDCW=IOS.PCW;

   2985  0 000031   200004 236100                    LDQ     @LIDCW,,AUTO
         0 000032   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000033   000037 600000 0                  TZE     s:2986

   2985  0 000034   100012 236100                    LDQ     10,,PR1
         0 000035   200004 473500                    LDP3    @LIDCW,,AUTO
         0 000036   300000 756100                    STQ     0,,PR3

      706     2986    2              CONT=IOS.PCW.MASK.CONT;

   2986  0 000037   100012 236100                    LDQ     10,,PR1
         0 000040   000026 736000                    QLS     22
         0 000041   400000 376003                    ANQ     -131072,DU
         0 000042   200010 756100                    STQ     CONT,,AUTO

      707     2987    3   NEXTDCW:   DO WHILE('1'B);

   2987  0 000043                       NEXTDCW      null
      708     2988    3                 IF DCWL.ADR=REQ.FLPW.NDCWA THEN GOTO DCWFOUND;

   2988  0 000043   200012 720100                    LXL0    DCWA,,AUTO
         0 000044   200003 470500                    LDP0    @REQ,,AUTO
         0 000045   000016 100100                    CMPX0   14,,PR0
         0 000046   000202 600000 0                  TZE     DCWFOUND

      709     2989    4                 IF DCW.ICP=7 THEN DO;     /* IDCW */

   2989  0 000047   200011 471500                    LDP1    DCW$,,AUTO
         0 000050   100000 236100                    LDQ     0,,PR1
         0 000051   700000 376007                    ANQ     -32768,DL
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:129  
         0 000052   700000 116007                    CMPQ    -32768,DL
         0 000053   000103 601000 0                  TNZ     s:2994

      710     2990    4                    IF ADDR(LIDCW)~=ADDR(NIL) THEN LIDCW=IDCW;

   2990  0 000054   200004 236100                    LDQ     @LIDCW,,AUTO
         0 000055   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000056   000062 600000 0                  TZE     s:2991

   2990  0 000057   100000 236100                    LDQ     0,,PR1
         0 000060   200004 473500                    LDP3    @LIDCW,,AUTO
         0 000061   300000 756100                    STQ     0,,PR3

      711     2991    4                    IF MODE=1 AND IDCW.EC THEN AEXT=IDCW.EXTA;

   2991  0 000062   200014 235100                    LDA     MODE,,AUTO
         0 000063   000001 115007                    CMPA    1,DL
         0 000064   000075 601000 0                  TNZ     s:2992
         0 000065   200011 471500                    LDP1    DCW$,,AUTO
         0 000066   100000 236100                    LDQ     0,,PR1
         0 000067   040000 316007                    CANQ    16384,DL
         0 000070   000075 600000 0                  TZE     s:2992

   2991  0 000071   100000 236100                    LDQ     0,,PR1
         0 000072   000022 772000                    QRL     18
         0 000073   000077 376007                    ANQ     63,DL
         0 000074   200013 756100                    STQ     AEXT,,AUTO

      712     2992    4                    CONT=IDCW.CONT;

   2992  0 000075   200011 471500                    LDP1    DCW$,,AUTO
         0 000076   100000 236100                    LDQ     0,,PR1
         0 000077   000026 736000                    QLS     22
         0 000100   400000 376003                    ANQ     -131072,DU
         0 000101   200010 756100                    STQ     CONT,,AUTO

      713     2993    4                    END;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:130  

   2993  0 000102   000175 710000 0                  TRA     s:3017

      714     2994    4                 ELSE DO CASE(DCW.TYPE);

   2994  0 000103   100000 236100                    LDQ     0,,PR1
         0 000104   000014 772000                    QRL     12
         0 000105   000007 376007                    ANQ     7,DL
         0 000106   000003 116007                    CMPQ    3,DL
         0 000107   000111 602006 0                  TNC     s:2994+6,QL
         0 000110   000175 710000 0                  TRA     s:3017
         0 000111   000114 710000 0                  TRA     s:2996
         0 000112   000175 710000 0                  TRA     s:3017
         0 000113   000117 710000 0                  TRA     s:2998

      715     2995    4                  CASE(0);                 /* IOTD */

      716     2996    4                    IF NOT CONT THEN GOTO DCWFOUND;

   2996  0 000114   200010 234100                    SZN     CONT,,AUTO
         0 000115   000202 605000 0                  TPL     DCWFOUND
         0 000116   000175 710000 0                  TRA     s:3017

      717     2997    4                  CASE(2);                 /* TDCW */

      718     2998    5                    DO CASE(MODE);

   2998  0 000117   200014 235100                    LDA     MODE,,AUTO
         0 000120   000004 115007                    CMPA    4,DL
         0 000121   000123 602005 0                  TNC     s:2998+4,AL
         0 000122   000173 710000 0                  TRA     s:3013
         0 000123   000173 710000 0                  TRA     s:3013
         0 000124   000127 710000 0                  TRA     s:3000
         0 000125   000146 710000 0                  TRA     s:3005
         0 000126   000163 710000 0                  TRA     s:3010

      719     2999    5                     CASE(1);
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:131  

      720     3000    5                       IF TDCW.FLAGS.PDCW THEN GOTO DCWFOUND;

   3000  0 000127   100000 236100                    LDQ     0,,PR1
         0 000130   000004 316007                    CANQ    4,DL
         0 000131   000202 601000 0                  TNZ     DCWFOUND

      721     3001    5                       IF TDCW.FLAGS.REL THEN MODE=3;

   3001  0 000132   000001 316007                    CANQ    1,DL
         0 000133   000137 600000 0                  TZE     s:3002

   3001  0 000134   000003 235007                    LDA     3,DL
         0 000135   200014 755100                    STA     MODE,,AUTO
         0 000136   000141 710000 0                  TRA     s:3003

      722     3002    5                       ELSE MODE=2;

   3002  0 000137   000002 235007                    LDA     2,DL
         0 000140   200014 755100                    STA     MODE,,AUTO

      723     3003    5                       DCW$=PINCRW(B$REAL$,DCW.FWA);

   3003  0 000141   100000 221100                    LDX1    0,,PR1
         0 000142   000000 636011                    EAQ     0,X1
         0 000143   000000 036000 xsym               ADLQ    B$REAL$
         0 000144   200011 756100                    STQ     DCW$,,AUTO
         0 000145   000174 710000 0                  TRA     s:3015

      724     3004    5                     CASE(2);

      725     3005    5                       IF TDCW.FLAGS.PDCW THEN GOTO DCWFOUND;

   3005  0 000146   100000 236100                    LDQ     0,,PR1
         0 000147   000004 316007                    CANQ    4,DL
         0 000150   000202 601000 0                  TNZ     DCWFOUND

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:132  
      726     3006    5                       IF TDCW.FLAGS.REL THEN MODE=3;

   3006  0 000151   000001 316007                    CANQ    1,DL
         0 000152   000202 600000 0                  TZE     DCWFOUND

   3006  0 000153   000003 235007                    LDA     3,DL
         0 000154   200014 755100                    STA     MODE,,AUTO
         0 000155   000156 710000 0                  TRA     s:3008

      727     3007    5                       ELSE GOTO DCWFOUND;
      728     3008    5                       DCW$=PINCRW(B$REAL$,DCW.FWA);

   3008  0 000156   100000 221100                    LDX1    0,,PR1
         0 000157   000000 636011                    EAQ     0,X1
         0 000160   000000 036000 xsym               ADLQ    B$REAL$
         0 000161   200011 756100                    STQ     DCW$,,AUTO
         0 000162   000174 710000 0                  TRA     s:3015

      729     3009    5                     CASE(3);

      730     3010    5                       IF TDCW.FLAGS.PDCW THEN GOTO DCWFOUND;

   3010  0 000163   100000 236100                    LDQ     0,,PR1
         0 000164   000004 316007                    CANQ    4,DL
         0 000165   000202 601000 0                  TNZ     DCWFOUND

      731     3011    5                       DCW$=PINCRW(B$REAL$,DCW.FWA);

   3011  0 000166   100000 221100                    LDX1    0,,PR1
         0 000167   000000 636011                    EAQ     0,X1
         0 000170   000000 036000 xsym               ADLQ    B$REAL$
         0 000171   200011 756100                    STQ     DCW$,,AUTO
         0 000172   000174 710000 0                  TRA     s:3015

      732     3012    5                     CASE(ELSE);

      733     3013    5                       GOTO DCWFOUND;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:133  

   3013  0 000173   000202 710000 0                  TRA     DCWFOUND

      734     3014    5                     END;

      735     3015    4                    GOTO NEXTDCW;

   3015  0 000174   000043 710000 0                  TRA     NEXTDCW

      736     3016    4                  END/* CASE DCW.TYPE */;

      737     3017    3                 DCW$=PINCRW(DCW$,1);

   3017  0 000175   200011 236100                    LDQ     DCW$,,AUTO
         0 000176   000001 036003                    ADLQ    1,DU
         0 000177   200011 756100                    STQ     DCW$,,AUTO

      738     3018    3                 DCWA=DCWA+1;

   3018  0 000200   200012 054100                    AOS     DCWA,,AUTO

      739     3019    3                 END NEXTDCW;

   3019  0 000201   000043 710000 0                  TRA     NEXTDCW

      740     3020    2   DCWFOUND:  IF ADDR(LDCW)~=ADDR(NIL) THEN LDCW=DCW;

   3020  0 000202   200005 236100       DCWFOUND     LDQ     @LDCW,,AUTO
         0 000203   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000204   000211 600000 0                  TZE     s:3021

   3020  0 000205   200011 471500                    LDP1    DCW$,,AUTO
         0 000206   100000 236100                    LDQ     0,,PR1
         0 000207   200005 473500                    LDP3    @LDCW,,AUTO
         0 000210   300000 756100                    STQ     0,,PR3

      741     3021    3              IF ADDR(MEMA)~=ADDR(NIL) THEN DO;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:134  

   3021  0 000211   200006 236100                    LDQ     @MEMA,,AUTO
         0 000212   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000213   000445 600000 0                  TZE     s:3070

      742     3022    3                 IF REQ.STATUS.MAJOR=%SYSTEM_FAULT AND REQ.FLTSTAT.SRQ=%LISTSRVC

   3022  0 000214   000014 236100                    LDQ     12,,PR0
         0 000215   170000 376003                    ANQ     61440,DU
         0 000216   170000 116003                    CMPQ    61440,DU
         0 000217   000224 601000 0                  TNZ     s:3022+8
         0 000220   000014 236100                    LDQ     12,,PR0
         0 000221   700000 376007                    ANQ     -32768,DL
         0 000222   100000 116007                    CMPQ    32768,DL
         0 000223   000230 600000 0                  TZE     s:3024
         0 000224   000015 236100                    LDQ     13,,PR0
         0 000225   700000 376007                    ANQ     -32768,DL
         0 000226   700000 116007                    CMPQ    -32768,DL
         0 000227   000241 601000 0                  TNZ     s:3028

      743     3023    4                   OR REQ.STATUS.NCP=7 THEN DO;

      744     3024    4                    MEMA=DCWA;

   3024  0 000230   200012 235100                    LDA     DCWA,,AUTO
         0 000231   200006 471500                    LDP1    @MEMA,,AUTO
         0 000232   100000 755100                    STA     0,,PR1

      745     3025    4                    IF MODE=3 THEN MODE=1;

   3025  0 000233   200014 236100                    LDQ     MODE,,AUTO
         0 000234   000003 116007                    CMPQ    3,DL
         0 000235   000445 601000 0                  TNZ     s:3070

   3025  0 000236   000001 235007                    LDA     1,DL
         0 000237   200014 755100                    STA     MODE,,AUTO

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:135  
      746     3026    4                    END;

   3026  0 000240   000445 710000 0                  TRA     s:3070

      747     3027    4                 ELSE DO;

      748     3028    4                    MEMA=REQ.STATUS.NWA;

   3028  0 000241   000015 236100                    LDQ     13,,PR0
         0 000242   000022 772000                    QRL     18
         0 000243   200006 471500                    LDP1    @MEMA,,AUTO
         0 000244   100000 756100                    STQ     0,,PR1

      749     3029    4                    IF MODE<3 THEN MEM.AEXT=AEXT;

   3029  0 000245   200014 235100                    LDA     MODE,,AUTO
         0 000246   000003 115007                    CMPA    3,DL
         0 000247   000253 605000 0                  TPL     s:3030

   3029  0 000250   200013 721100                    LXL1    AEXT,,AUTO
         0 000251   100000 741100                    STX1    0,,PR1
         0 000252   000445 710000 0                  TRA     s:3070

      750     3030    4                    ELSE IF MEMA<REQ.LPWX.BASE*2+DCW.FWA THEN MEM.AEXT=1;

   3030  0 000253   200011 473500                    LDP3    DCW$,,AUTO
         0 000254   300000 236100                    LDQ     0,,PR3
         0 000255   000022 772000                    QRL     18
         0 000256   200026 756100                    STQ     @DCW+2,,AUTO
         0 000257   000011 236100                    LDQ     9,,PR0
         0 000260   000021 772000                    QRL     17
         0 000261   000000 376000 1                  ANQ     0
         0 000262   200026 036100                    ADLQ    @DCW+2,,AUTO
         0 000263   100000 116100                    CMPQ    0,,PR1
         0 000264   000445 602000 0                  TNC     s:3070
         0 000265   000445 600000 0                  TZE     s:3070

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:136  
   3030  0 000266   000001 221003                    LDX1    1,DU
         0 000267   100000 741100                    STX1    0,,PR1

      751     3031    4                    END;

      752     3032    3                 END/* IF ADDR(MEMA) */;

      753     3033    2              END;

   3033  0 000270   000445 710000 0                  TRA     s:3070

      754     3034
      755     3035    2           ELSE DO;                        /* HW_IMX */

      756     3036    2              MBX$ = PINCRW (IOS$, %IMX_MBX_OFFSET);

   3036  0 000271   000010 036003                    ADLQ    8,DU
         0 000272   200015 756100                    STQ     MBX$,,AUTO

      757     3037    2              IOSTAT$ = PINCRW (IOS$, %IMX_STATUS_OFFSET);

   3037  0 000273   200007 236100                    LDQ     IOS$,,AUTO
         0 000274   000020 036003                    ADLQ    16,DU
         0 000275   200016 756100                    STQ     IOSTAT$,,AUTO

      758     3038    2              IF (IOSTAT.LPW_LASTIDCW = '0'B) OR (IOSTAT.LPW_RESIDUE = '0'B) THEN

   3038  0 000276   200016 471500                    LDP1    IOSTAT$,,AUTO
         0 000277   100002 235100                    LDA     2,,PR1
         0 000300   000303 600000 0                  TZE     s:3039
         0 000301   100003 235100                    LDA     3,,PR1
         0 000302   000304 601000 0                  TNZ     s:3040

      759     3039    2                 RETURN;

   3039  0 000303   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:137  
      760     3040    2              IF ADDR(LIDCW)~=ADDR(NIL) THEN

   3040  0 000304   200004 236100                    LDQ     @LIDCW,,AUTO
         0 000305   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000306   000315 600000 0                  TZE     s:3042

      761     3041    2                 CALL READDCW (IOSTAT.LPW_LASTIDCW, LIDCW);

   3041  0 000307   200024 756100                    STQ     @LPW+1,,AUTO
         0 000310   200016 236100                    LDQ     IOSTAT$,,AUTO
         0 000311   000002 036003                    ADLQ    2,DU
         0 000312   200023 756100                    STQ     BASE+3,,AUTO
         0 000313   000446 701000 0                  TSX1    READDCW
         0 000314   000000 011000                    NOP     0

      762     3042    2              IF ADDR(LDCW)~=ADDR(NIL) THEN

   3042  0 000315   200005 236100                    LDQ     @LDCW,,AUTO
         0 000316   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000317   000326 600000 0                  TZE     s:3044

      763     3043    2                 CALL READDCW (IOSTAT.LPW_RESIDUE, LDCW);

   3043  0 000320   200024 756100                    STQ     @LPW+1,,AUTO
         0 000321   200016 236100                    LDQ     IOSTAT$,,AUTO
         0 000322   000003 036003                    ADLQ    3,DU
         0 000323   200023 756100                    STQ     BASE+3,,AUTO
         0 000324   000446 701000 0                  TSX1    READDCW
         0 000325   000000 011000                    NOP     0

      764     3044    3              IF ADDR(MEMA)~=ADDR(NIL) THEN DO;

   3044  0 000326   200006 236100                    LDQ     @MEMA,,AUTO
         0 000327   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000330   000445 600000 0                  TZE     s:3070

      765     3045    4                 IF REQ.STATUS.NCP=7 THEN DO;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:138  

   3045  0 000331   200003 470500                    LDP0    @REQ,,AUTO
         0 000332   000015 236100                    LDQ     13,,PR0
         0 000333   700000 376007                    ANQ     -32768,DL
         0 000334   700000 116007                    CMPQ    -32768,DL
         0 000335   000354 601000 0                  TNZ     s:3052

      766     3046    5                    CALL READDCW (IOSTAT.LPW_RESIDUE, MEMA) WHENRETURN DO;

   3046  0 000336   200006 236100                    LDQ     @MEMA,,AUTO
         0 000337   200024 756100                    STQ     @LPW+1,,AUTO
         0 000340   200016 236100                    LDQ     IOSTAT$,,AUTO
         0 000341   000003 036003                    ADLQ    3,DU
         0 000342   200023 756100                    STQ     BASE+3,,AUTO
         0 000343   000446 701000 0                  TSX1    READDCW
         0 000344   000353 702000 0                  TSX2    s:3050

      767     3047                                                /* READDCW CALL SETS UP PTW */
      768     3048    5                       MEMA = PTW.RPN*1024 + OFFSET;

   3048  0 000345   200017 236100                    LDQ     PTW,,AUTO
         0 000346   777777 376003                    ANQ     -1,DU
         0 000347   000010 772000                    QRL     8
         0 000350   200014 036100                    ADLQ    MODE,,AUTO
         0 000351   200006 470500                    LDP0    @MEMA,,AUTO
         0 000352   000000 756100                    STQ     0,,PR0

      769     3049    5                       END;

      770     3050    4                    END;

   3050  0 000353   000445 710000 0                  TRA     s:3070

      771     3051    4                 ELSE DO;

      772     3052    4                    BASE = IOSTAT.LPW_RESIDUE.DATA.BASE;

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:139  
   3052  0 000354   200016 471500                    LDP1    IOSTAT$,,AUTO
         0 000355   100003 236100                    LDQ     3,,PR1
         0 000356   000017 772000                    QRL     15
         0 000357   000003 376007                    ANQ     3,DL
         0 000360   200020 756100                    STQ     BASE,,AUTO

      773     3053    5                    IF REQ.PTP~=0 THEN DO;

   3053  0 000361   000007 235100                    LDA     7,,PR0
         0 000362   000433 600000 0                  TZE     s:3066

      774     3054    5                       OFFSET = IMXMBX.PAGED_BASE.OFFSET(BASE) + IOSTAT.STATUS.NWA;

   3054  0 000363   100001 236100                    LDQ     1,,PR1
         0 000364   000022 772000                    QRL     18
         0 000365   200026 756100                    STQ     @DCW+2,,AUTO
         0 000366   200015 473500                    LDP3    MBX$,,AUTO
         0 000367   200020 720100                    LXL0    BASE,,AUTO
         0 000370   300000 236110                    LDQ     0,X0,PR3
         0 000371   001777 376007                    ANQ     1023,DL
         0 000372   200026 036100                    ADLQ    @DCW+2,,AUTO
         0 000373   200014 756100                    STQ     MODE,,AUTO

      775     3055    5                       PTP = IMXMBX.PAGED_BASE.PTWADDR(BASE) + OFFSET/1024;

   3055  0 000374   002000 506007                    DIV     1024,DL
         0 000375   200026 756100                    STQ     @DCW+2,,AUTO
         0 000376   300000 236110                    LDQ     0,X0,PR3
         0 000377   000012 772000                    QRL     10
         0 000400   200027 756100                    STQ     @DCW+3,,AUTO
         0 000401   200026 236100                    LDQ     @DCW+2,,AUTO
         0 000402   200027 036100                    ADLQ    @DCW+3,,AUTO
         0 000403   200013 756100                    STQ     AEXT,,AUTO

      776     3056    5                       OFFSET = MOD (OFFSET, 1024);

   3056  0 000404   200014 236100                    LDQ     MODE,,AUTO
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:140  
         0 000405   002000 506007                    DIV     1024,DL
         0 000406   200014 755100                    STA     MODE,,AUTO

      777     3057    6                       DO INHIBIT;

      778     3058    6                          B$LS$->B$MLNK.MISC = B$LS$->B$MLNK.LOWMEM;

   3058  0 000407   000000 474600 xsym               LDP4  ! B$LS$
         0 000410   400242 237300                    LDAQ  ! 162,,PR4
         0 000411   400130 757300                    STAQ  ! 88,,PR4

      779     3059    6                          B$LS$->B$MLNK.MISC.BOUND = 3;

   3059  0 000412   400130 236300                    LDQ   ! 88,,PR4
         0 000413   177777 376207                    ANQ   ! 65535,DL
         0 000414   600000 276207                    ORQ   ! -65536,DL
         0 000415   400130 756300                    STQ   ! 88,,PR4

      780     3060    6                          B$LS$->B$MLNK.MISC.BASE = PTP*4;

   3060  0 000416   200013 235300                    LDA   ! AEXT,,AUTO
         0 000417   000002 735200                    ALS   ! 2
         0 000420   400131 755300                    STA   ! 89,,PR4

      781     3061    6                          PTW = B$MISC$->PNTR;

   3061  0 000421   000000 475600 xsym               LDP5  ! B$MISC$
         0 000422   500000 236300                    LDQ   ! 0,,PR5
         0 000423   200017 756300                    STQ   ! PTW,,AUTO

      782     3062    6                          END;

      783     3063    5                       MEMA = PTW.RPN*1024 + OFFSET;

   3063  0 000424   200017 236100                    LDQ     PTW,,AUTO
         0 000425   777777 376003                    ANQ     -1,DU
         0 000426   000010 772000                    QRL     8
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:141  
         0 000427   200014 036100                    ADLQ    MODE,,AUTO
         0 000430   200006 476500                    LDP6    @MEMA,,AUTO
         0 000431   600000 756100                    STQ     0,,PR6

      784     3064    5                       END;

   3064  0 000432   000445 710000 0                  TRA     s:3070

      785     3065    4                    ELSE
      786     3066    4                       MEMA = IMXMBX.NPAGED_IND.PHYS(BASE) + REQ.STATUS.NWA;

   3066  0 000433   000015 236100                    LDQ     13,,PR0
         0 000434   000022 772000                    QRL     18
         0 000435   200026 756100                    STQ     @DCW+2,,AUTO
         0 000436   200015 473500                    LDP3    MBX$,,AUTO
         0 000437   200020 720100                    LXL0    BASE,,AUTO
         0 000440   300000 236110                    LDQ     0,X0,PR3
         0 000441   000001 376000 1                  ANQ     1
         0 000442   200026 036100                    ADLQ    @DCW+2,,AUTO
         0 000443   200006 474500                    LDP4    @MEMA,,AUTO
         0 000444   400000 756100                    STQ     0,,PR4

      787     3067    4                    END;

      788     3068    3                 END;

      789     3069    2              END;

      790     3070    1           RETURN;

   3070  0 000445   000000 702200 xent               TSX2  ! X66_ARET

      791     3071        %EJECT;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:142  
      792     3072        /*
      793     3073           RETURN DCW INDICATED BY LPW
      794     3074        */
      795     3075
      796     3076    1   READDCW: PROC (LPW, DCW) ALTRET;

   3076  0 000446   200022 741300       READDCW      STX1  ! BASE+2,,AUTO

      797     3077
      798     3078    2   DCL 1 LPW,
      799     3079    2         2 DCW_ADDR UBIN(18) HALIGNED,
      800     3080    2         2 DATA UNAL,
      801     3081    2           3 IBC BIT(1) UNAL,
      802     3082    2           3 BASE UBIN(2) UNAL,
      803     3083    2         2 * BIT(6),
      804     3084    2         2 DCWLIST UNAL,
      805     3085    2           3 IBC BIT(1) UNAL,
      806     3086    2           3 BASE UBIN(2) UNAL,
      807     3087    2         2 * BIT(6) UNAL;
      808     3088    2   DCL DCW UBIN;
      809     3089
      810     3090    3           DO INHIBIT;

      811     3091    3              B$LS$->B$MLNK.MISC = B$LS$->B$MLNK.LOWMEM;

   3091  0 000447   000000 470600 xsym               LDP0  ! B$LS$
         0 000450   000242 237300                    LDAQ  ! 162,,PR0
         0 000451   000130 757300                    STAQ  ! 88,,PR0

      812     3092    3              B$LS$->B$MLNK.MISC.BOUND = 3;

   3092  0 000452   000130 236300                    LDQ   ! 88,,PR0
         0 000453   177777 376207                    ANQ   ! 65535,DL
         0 000454   600000 276207                    ORQ   ! -65536,DL
         0 000455   000130 756300                    STQ   ! 88,,PR0

      813     3093    3              BASE = LPW.DCWLIST.BASE;
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:143  

   3093  0 000456   200023 471700                    LDP1  ! @LPW,,AUTO
         0 000457   003100 061700                    CSR   ! bolr='003'O
         0 000460   100000 610002                    BDSC    0,,PR1                   by=3,bit=1,n=2
         0 000461   200020 000044                    BDSC    BASE,,AUTO               by=0,bit=0,n=36

      814     3094    4              IF REQ.PTP~=0 THEN DO;

   3094  0 000462   200003 473700                    LDP3  ! @REQ,,AUTO
         0 000463   300007 235300                    LDA   ! 7,,PR3
         0 000464   000534 600200 0                  TZE   ! s:3107

      815     3095    4                 OFFSET = IMXMBX.PAGED_BASE.OFFSET(BASE) + LPW.DCW_ADDR;

   3095  0 000465   000100 101700                    MRL   ! fill='000'O
         0 000466   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         0 000467   200026 000004                    ADSC9   @DCW+2,,AUTO             cn=0,n=4
         0 000470   200015 474700                    LDP4  ! MBX$,,AUTO
         0 000471   200020 720300                    LXL0  ! BASE,,AUTO
         0 000472   400000 236310                    LDQ   ! 0,X0,PR4
         0 000473   001777 376207                    ANQ   ! 1023,DL
         0 000474   200026 036300                    ADLQ  ! @DCW+2,,AUTO
         0 000475   200014 756300                    STQ   ! MODE,,AUTO

      816     3096    4                 PTP = IMXMBX.PAGED_BASE.PTWADDR(BASE) + OFFSET/1024;

   3096  0 000476   002000 506207                    DIV   ! 1024,DL
         0 000477   200026 756300                    STQ   ! @DCW+2,,AUTO
         0 000500   400000 236310                    LDQ   ! 0,X0,PR4
         0 000501   000012 772200                    QRL   ! 10
         0 000502   200027 756300                    STQ   ! @DCW+3,,AUTO
         0 000503   200026 236300                    LDQ   ! @DCW+2,,AUTO
         0 000504   200027 036300                    ADLQ  ! @DCW+3,,AUTO
         0 000505   200013 756300                    STQ   ! AEXT,,AUTO

      817     3097    4                 OFFSET = MOD (OFFSET, 1024);

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:144  
   3097  0 000506   200014 236300                    LDQ   ! MODE,,AUTO
         0 000507   002000 506207                    DIV   ! 1024,DL
         0 000510   200014 755300                    STA   ! MODE,,AUTO

      818     3098    4                 B$LS$->B$MLNK.MISC.BASE = PTP*4;

   3098  0 000511   200013 236300                    LDQ   ! AEXT,,AUTO
         0 000512   000002 736200                    QLS   ! 2
         0 000513   000131 756300                    STQ   ! 89,,PR0

      819     3099    4                 PTW = B$MISC$->PNTR;

   3099  0 000514   000000 475600 xsym               LDP5  ! B$MISC$
         0 000515   500000 236300                    LDQ   ! 0,,PR5
         0 000516   200017 756300                    STQ   ! PTW,,AUTO

      820     3100    5                 IF NOT PTW.PGPRES THEN DO;

   3100  0 000517   000040 316207                    CANQ  ! 32,DL
         0 000520   000525 601200 0                  TNZ   ! s:3104

      821     3101    5                    DCW = 0;

   3101  0 000521   200024 476700                    LDP6  ! @DCW,,AUTO
         0 000522   600000 450300                    STZ   ! 0,,PR6

      822     3102    5                    ALTRETURN;

   3102  0 000523   200022 221300                    LDX1  ! BASE+2,,AUTO
         0 000524   000000 702211                    TSX2  ! 0,X1

      823     3103    5                    END;
      824     3104    4                 B$LS$->B$MLNK.MISC.BASE = PTW.RPN*4096 + OFFSET*4;

   3104  0 000525   200017 236300                    LDQ   ! PTW,,AUTO
         0 000526   777777 376203                    ANQ   ! -1,DU
         0 000527   000010 772200                    QRL   ! 8
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:145  
         0 000530   200014 036300                    ADLQ  ! MODE,,AUTO
         0 000531   000002 736200                    QLS   ! 2
         0 000532   000131 756300                    STQ   ! 89,,PR0

      825     3105    4                 END;

   3105  0 000533   000550 710200 0                  TRA   ! s:3110

      826     3106    4              ELSE DO;

      827     3107    4                 OFFSET = IMXMBX.NPAGED_IND.PHYS(BASE) + LPW.DCW_ADDR;

   3107  0 000534   000100 101700                    MRL   ! fill='000'O
         0 000535   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         0 000536   200026 000004                    ADSC9   @DCW+2,,AUTO             cn=0,n=4
         0 000537   200015 474700                    LDP4  ! MBX$,,AUTO
         0 000540   200020 720300                    LXL0  ! BASE,,AUTO
         0 000541   400000 236310                    LDQ   ! 0,X0,PR4
         0 000542   000001 376200 1                  ANQ   ! 1
         0 000543   200026 036300                    ADLQ  ! @DCW+2,,AUTO
         0 000544   200014 756300                    STQ   ! MODE,,AUTO

      828     3108    4                 B$LS$->B$MLNK.MISC.BASE = OFFSET*4;

   3108  0 000545   200014 235300                    LDA   ! MODE,,AUTO
         0 000546   000002 735200                    ALS   ! 2
         0 000547   000131 755300                    STA   ! 89,,PR0

      829     3109    4                 END;

      830     3110    3              DCW = B$MISC$->B$WORD;

   3110  0 000550   000000 475600 xsym               LDP5  ! B$MISC$
         0 000551   200024 476700                    LDP6  ! @DCW,,AUTO
         0 000552   500000 235300                    LDA   ! 0,,PR5
         0 000553   600000 755300                    STA   ! 0,,PR6

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:146  
      831     3111    3              END;

      832     3112    2           RETURN;

   3112  0 000554   200022 221300                    LDX1  ! BASE+2,,AUTO
         0 000555   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   000001 777776   001777 777777                                    ........
      833     3113    2   END READDCW;
      834     3114    1   END NIF$DCWLIST;

PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:147  
--  Include file information  --

   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure NIF$DCWLIST.
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:148  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    24-0-0/w PTR         r     1 @DCW                       5-0-0/w PTR         r     1 @LDCW
     4-0-0/w PTR         r     1 @LIDCW                    23-0-0/w PTR         r     1 @LPW
     6-0-0/w PTR         r     1 @MEMA                      3-0-0/w PTR         r     1 @REQ
    13-0-0/w UBIN        r     1 AEXT                      20-0-0/w SBIN        r     1 BASE
    10-0-0/b BIT         r     1 CONT                      *0-0-0/w UBIN        r     1 DCW
    11-0-0/w PTR         r     1 DCW$                      12-0-0/w SBIN        r     1 DCWA
    12-0-0/w STRC        r     1 DCWL                       7-0-0/w PTR         r     1 IOS$
    16-0-0/w PTR         r     1 IOSTAT$                   *0-0-0/w BIT         r     1 LDCW
    *0-0-0/w BIT         r     1 LIDCW                     *0-0-0/h STRC        r     1 LPW
    15-0-0/w PTR         r     1 MBX$                      *0-0-0/w STRC        r     1 MEM
    *0-0-0/w UBIN        r     1 MEMA                      14-0-0/w SBIN        r     1 MODE
    14-0-0/w SBIN        r     1 OFFSET                    13-0-0/w SBIN        r     1 PTP
    17-0-0/h STRC        r     1 PTW                       *0-0-0/d STRC(1080)  r     1 REQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$LS$                      0-0-0/w PTR         r     1 B$MISC$
     0-0-0/w PTR         r     1 B$REAL$                    0-0-0/w BIT         r     1 HW_IMX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(10368) r     1 B$MLNK                     0-0-0/w UBIN        r     1 B$WORD
     0-0-0/w STRC        r     1 DCW                        0-0-0/w STRC        r     1 IDCW
     0-0-0/d STRC(864)   r     1 IMXMBX                     0-0-0/d STRC(504)   r     1 IOS
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:149  
     0-0-0/d STRC(576)   r     1 IOSTAT                     0-0-0/w STRC        r     1 PNTR
     0-0-0/w STRC        r     1 TDCW


   Procedure NIF$DCWLIST requires 366 words for executable code.
   Procedure NIF$DCWLIST requires 24 words of local(AUTO) storage.

    No errors detected in file NIF$FAULT.:E05TSI    .
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:150  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:151  
          MINI XREF LISTING

AEXT
      2962**DCL      2963--REDEF    2991<<ASSIGN   3029>>ASSIGN
B$LS$
      1996**DCL      3058>>ASSIGN   3058>>ASSIGN   3059>>ASSIGN   3060>>ASSIGN   3091>>ASSIGN   3091>>ASSIGN
      3092>>ASSIGN   3098>>ASSIGN   3104>>ASSIGN   3108>>ASSIGN
B$MAP.SCTRL
       210**DCL       211--REDEF
B$MISC$
      1997**DCL      3061>>ASSIGN   3099>>ASSIGN   3110>>ASSIGN
B$MLNK.LOWMEM
      2676**DCL      3058>>ASSIGN   3091>>ASSIGN
B$MLNK.MISC
      2454**DCL      3058<<ASSIGN   3091<<ASSIGN
B$MLNK.MISC.BASE
      2459**DCL      3060<<ASSIGN   3098<<ASSIGN   3104<<ASSIGN   3108<<ASSIGN
B$MLNK.MISC.BOUND
      2455**DCL      3059<<ASSIGN   3092<<ASSIGN
B$REAL$
      1995**DCL      3003>>ASSIGN   3008>>ASSIGN   3011>>ASSIGN
B$WORD
      2977**DCL      3110>>ASSIGN
BASE
      2973**DCL      3052<<ASSIGN   3054>>ASSIGN   3055>>ASSIGN   3066>>ASSIGN   3093<<ASSIGN   3095>>ASSIGN
      3096>>ASSIGN   3107>>ASSIGN
CONT
      1999**DCL      2986<<ASSIGN   2992<<ASSIGN   2996>>IF
DCW
      2005**DCL      3020>>ASSIGN
DCW.FWA
      2009**DCL      3003>>ASSIGN   3008>>ASSIGN   3011>>ASSIGN   3030>>IF
DCW.ICP
      2010**DCL      2989>>IF
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:152  
DCW.TALLY
      2012**DCL      2013--REDEF
DCW.TYPE
      2011**DCL      2994>>DOCASE
DCW IN PROCEDURE READDCW
      3088**DCL      3076--PROC     3101<<ASSIGN   3110<<ASSIGN
DCW$
      2957**DCL      2005--IMP-PTR  2035--IMP-PTR  2067--IMP-PTR  2983<<ASSIGN   2984--ASSIGN   2989>>IF
      2990>>ASSIGN   2991>>IF       2991>>ASSIGN   2992>>ASSIGN   2994>>DOCASE   3000>>IF       3001>>IF
      3003<<ASSIGN   3003>>ASSIGN   3005>>IF       3006>>IF       3008<<ASSIGN   3008>>ASSIGN   3010>>IF
      3011<<ASSIGN   3011>>ASSIGN   3017<<ASSIGN   3017>>ASSIGN   3020>>ASSIGN   3030>>IF
DCWA
      2958**DCL      2959--REDEF    2984<<ASSIGN   3018<<ASSIGN   3018>>ASSIGN   3024>>ASSIGN
DCWFOUND
      3020**LABEL    2988--GOTO     2996--GOTO     3000--GOTO     3005--GOTO     3007--GOTO     3010--GOTO
      3013--GOTO
DCWL.ADR
      2961**DCL      2988>>IF
HW_IMX
      1379**DCL      2980>>IF
IDCW
      2035**DCL      2990>>ASSIGN
IDCW.CC
      2050**DCL      2051--REDEF
IDCW.CONT
      2048**DCL      2992>>ASSIGN
IDCW.EC
      2047**DCL      2991>>IF
IDCW.EXTA
      2041**DCL      2042--REDEF    2991>>ASSIGN
IMXMBX.NPAGED_IND.PHYS
      2122**DCL      3066>>ASSIGN   3107>>ASSIGN
IMXMBX.PAGED_BASE
      2121**DCL      2122--REDEF    2122--REDEF
IMXMBX.PAGED_BASE.OFFSET
      2121**DCL      3054>>ASSIGN   3095>>ASSIGN
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:153  
IMXMBX.PAGED_BASE.PTWADDR
      2121**DCL      3055>>ASSIGN   3096>>ASSIGN
IMXMBX.SIZE
      2123**DCL      2123--REDEF
IOS.DCW
      2098**DCL      2101--REDEF    2983--ASSIGN
IOS.DCW.TALLY
      2099**DCL      2099--REDEF
IOS.IDCW.EXTA
      2101**DCL      2101--REDEF
IOS.PCW
      2103**DCL      2107--REDEF    2985>>ASSIGN
IOS.PCW.FLAGS
      2107**DCL      2981>>IF
IOS.PCW.MASK.CONT
      2104**DCL      2986>>ASSIGN
IOS.SEEK
      2108**DCL      2109--REDEF    2110--REDEF
IOS$
      1998**DCL      2096--IMP-PTR  2979<<ASSIGN   2981>>IF       2983>>ASSIGN   2985>>ASSIGN   2986>>ASSIGN
      3036>>ASSIGN   3037>>ASSIGN
IOSTAT.AESDCW
      2139**DCL      2139--REDEF
IOSTAT.LPW_LASTIDCW
      2136**DCL      3038>>IF       3041<>CALL
IOSTAT.LPW_RESIDUE
      2137**DCL      3038>>IF       3043<>CALL     3046<>CALL
IOSTAT.LPW_RESIDUE.DATA.BASE
      2138**DCL      3052>>ASSIGN
IOSTAT.STATUS.NWA
      2135**DCL      3054>>ASSIGN
IOSTAT$
      2967**DCL      2134--IMP-PTR  3037<<ASSIGN   3038>>IF       3038>>IF       3041>>CALL     3043>>CALL
      3046>>CALL     3052>>ASSIGN   3054>>ASSIGN
LDCW
       158**DCL        24--PROC     3020--IF       3020<<ASSIGN   3042--IF       3043<>CALL
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:154  
LIDCW
       157**DCL        24--PROC     2985--IF       2985<<ASSIGN   2990--IF       2990<<ASSIGN   3040--IF
      3041<>CALL
LPW IN PROCEDURE READDCW
      3078**DCL      3076--PROC
LPW.DCWLIST.BASE IN PROCEDURE READDCW
      3086**DCL      3093>>ASSIGN
LPW.DCW_ADDR IN PROCEDURE READDCW
      3079**DCL      3095>>ASSIGN   3107>>ASSIGN
MBX$
      2966**DCL      2121--IMP-PTR  3036<<ASSIGN   3054>>ASSIGN   3055>>ASSIGN   3066>>ASSIGN   3095>>ASSIGN
      3096>>ASSIGN   3107>>ASSIGN
MEM.AEXT
       161**DCL      3029<<ASSIGN   3030<<ASSIGN
MEMA
       159**DCL        24--PROC      160--REDEF     163--REDEF    3021--IF       3024<<ASSIGN   3028<<ASSIGN
      3030>>IF       3044--IF       3046<>CALL     3048<<ASSIGN   3063<<ASSIGN   3066<<ASSIGN
MODE
      2964**DCL      2965--REDEF    2981<<ASSIGN   2982<<ASSIGN   2991>>IF       2998>>DOCASE   3001<<ASSIGN
      3002<<ASSIGN   3006<<ASSIGN   3025>>IF       3025<<ASSIGN   3029>>IF
NEXTDCW
      2987**LABEL    3015--GOTO
OFFSET
      2965**DCL      3048>>ASSIGN   3054<<ASSIGN   3055>>ASSIGN   3056<<ASSIGN   3056>>ASSIGN   3063>>ASSIGN
      3095<<ASSIGN   3096>>ASSIGN   3097<<ASSIGN   3097>>ASSIGN   3104>>ASSIGN   3107<<ASSIGN   3108>>ASSIGN
PNTR
      2974**DCL      3061>>ASSIGN   3099>>ASSIGN
PNTR.W
      2975**DCL      2984>>ASSIGN
PTP
      2963**DCL      3055<<ASSIGN   3060>>ASSIGN   3096<<ASSIGN   3098>>ASSIGN
PTW
      2968**DCL      3061<<ASSIGN   3099<<ASSIGN
PTW.PGPRES
      2971**DCL      3100>>IF
PTW.RPN
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:155  
      2969**DCL      3048>>ASSIGN   3063>>ASSIGN   3104>>ASSIGN
READDCW
      3076**PROC     3041--CALL     3043--CALL     3046--CALL
REQ
       108**DCL        24--PROC
REQ.BUFADDR
       117**DCL       118--REDEF     118--REDEF
REQ.DLA.DRELADDR
       109**DCL       109--REDEF
REQ.DVE.EOMCHAR
       146**DCL       147--REDEF
REQ.EAINFO
       140**DCL       140--REDEF
REQ.EAINFOX
       140**DCL       141--REDEF
REQ.EVNTINFO
       141**DCL       141--REDEF
REQ.FLPW.NDCWA
       129**DCL      2988>>IF
REQ.FLTSTAT.SRQ
       128**DCL      3022>>IF
REQ.IOFLG.LPW23
       112**DCL      2981>>IF
REQ.IOS$
       121**DCL      2979>>ASSIGN
REQ.LPWX.BASE
       120**DCL      3030>>IF
REQ.PTP
       119**DCL      3053>>IF       3094>>IF
REQ.STATUS
       122**DCL       128--REDEF
REQ.STATUS.MAJOR
       122**DCL      3022>>IF
REQ.STATUS.NCP
       126**DCL      3022>>IF       3045>>IF
REQ.STATUS.NWA
PL6.E3A0      #004=NIF$DCWLIST File=NIF$FAULT.:E05TSI                            WED 07/30/97 03:33 Page:156  
       126**DCL      3028>>ASSIGN   3066>>ASSIGN
TDCW.FLAGS.PDCW
      2078**DCL      3000>>IF       3005>>IF       3010>>IF
TDCW.FLAGS.REL
      2080**DCL      3001>>IF       3006>>IF
