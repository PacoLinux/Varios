VERSION E05

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:1    
        1        1        /*M* KAS$CNC ASYNC HANDLER INITIALIZATION SERVICE ROUTINES                    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
        8        8        KAS$RQSCNC: PROC(BCHN$);
        9        9 S      %INCLUDE KV_GLBCNS_E;                   /*  VDH Constants                     */
       10       10
       11       11        %INCLUDE LCP_6;
       12      202        %INCLUDE CP_6_SUBS;
       13      742        %INCLUDE KL_SUPER_C;          /* KL_TERMINAL_ID TTYP values for KV$VDH_CNC    */
       14     3644        %INCLUDE KL_MACRO_C;                    /* For KA_STT/KV$STT                  */
       15     6996        %INCLUDE KL_AFCN_C;                     /* For KA_STT/KV$STT                  */
       16     7097        %INCLUDE K_ID_E;                        /* For KA_STT/KV$STT                  */
       17     7147        %K#LYRID_E;                             /* For KA_STT/KV$STT                  */
       18     7154        %K#ENTID_E;                             /* For KA_STT/KV$STT                  */
       19     7173
       20     7174        %KV_USR_EVT_ID_E;
       21     7194        %KV_PRTTYP_E;
       22     7201        %KV_VDH_EVT_ID_E;
       23     7207        %KV_INPUNT_E;
       24     7212        %INCLUDE KV_GLBASM_E;                   /* FONT CLASS EQU'S                   */
       25     7230        %INCLUDE KV$BPC;
       26     7259 S      %INCLUDE KV$GLB;
       27     7260 S      %INCLUDE KV$GLBCTX;
       28     7261        %KV$MRD;                                /*  VDH Master real device            */
       29     7308        %KV$MVD;                                /*  VDH Master virtual device         */
       30     7352        %KV$PTR;                                /*  VDH Pointers, status              */
       31     7395        %KV$SSN;                                /*  VDH Session                       */
       32     7474        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       33     7545        %KV$USRPRM(NAME=KA_USRPRM,STCLASS=SYMREF);
       34     7596    1   DCL KA_INT_LEV UBIN SYMREF;
       35     7597        %INCLUDE KV_ASCCHR_E;                   /*  EQU'S FOR ASCII CHR'S             */
       36     7734 S      %INCLUDE KV$INT;
       37     7735        %KV$TRNTBL;                             /*  TRANSLATE TABLES                  */
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:2    
       38     7793        %KV$SHRBFR;                             /*  ASYNC MISCELLANEOUS BUFFER        */
       39     7825        %INCLUDE KH$CHN;
       40     7947        %INCLUDE KH_CHN;
       41     7987        %INCLUDE KH$STT;
       42     8017        %KH$CHN(STCLASS = "BASED(BCHN$)");      /*  CHANNEL TABLES ITEM DEFINITONS    */
       43     8141        %EQU KH_CHN=CHARTEXT('KH$CHN');
       44     8142        %KH_CHNDAT;                             /*  CHANNEL TABLES ITEM DEFINITONS    */
       45     8160        %INCLUDE KHA_FNC_E;
       46     8260        %INCLUDE GH_IOFNC_E;                    /*  IO FUNCTION CODES                 */
       47     8329
       48     8330 S      %INCLUDE KV$VDH;
       49     8331        %INCLUDE KA$GLB;
       50     8472        %INCLUDE KA_GLB;
       51     8549        %INCLUDE KA_GLBASM_E;
       52     8631        %INCLUDE KA_GLB_E;
       53     8709        %KA_HLTOTP_E;
       54     8718        %KA_MSC;
       55     8740        %KA$CTX(NAME=KA_CTX,STCLASS = SYMREF);
       56     8864        %KA$CTX(STCLASS = "BASED(BCTX$)"); /*  ASYNC CONTEXT BLOCK ITEM DEFINITIONS   */
       57     8988        %KA_TRNTBL_MSC;                         /*  TRANSLATE TABLES                  */
       58     9009        %KA$INPBFR;                             /*  ASYNC INPUT BUFFER DESCRIPTION    */
       59     9034        %KA_STT;                                /*  STATISTICS                        */
       60     9397        %INCLUDE KW_ALCT_E;                     /*  LCT ITEMS                         */
       61     9587        %INCLUDE KW_LCT_E;                      /*  ASYNC LCT ITEMS                   */
       62     9942        %INCLUDE KA_LCT_E;                      /*  ASYNC LCT ITEMS                   */
       63    10066        %INCLUDE KA_PERR_C;
       64    10085        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_IO_ERR, STCLASS = CONSTANT, FCG = KA, MID = S,
             10085            ERR = %E$ASN_IO_ERR, SEV = 3);
       65    10180
       66    10181        /* INITIALIZE A LINE, AND REQUEST A CONNECTION.                               */
       67    10182
       68    10183
       69    10184
       70    10185        %KV$VDH_INT(NAME = KV@VDH_INT, STCLASS = AUTO);
       71    10222        %KV$VDH_CNC(NAME = KV@VDH_CNC, STCLASS = AUTO);
       72    10314        %KV$VDH_INT(NAME = KV_VDH_INT, STCLASS = SYMREF READONLY);
       73    10351        %KV$VDH_CNC(NAME = KV_VDH_CNC, STCLASS = SYMREF READONLY);
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:3    
       74    10443        %KV$VDH_EVT (NAME=KV_VDH_EVT_RLSVDI, STCLASS=SYMREF READONLY);
       75    10478
       76    10479        /*  IO macros and FPTs  */
       77    10480
       78    10481        %INCLUDE KH$IO;
       79    10728        %KH$IO(FPTN=KH_IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=CONSTANT);
       80    10842        %KH$IO(FPTN=KH_IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=CONSTANT);
       81    10956        %KH$IO(FPTN=KH_IO_OTPCHNCTR,FNC=%GH#IO_OTPCHNCTR,STCLASS=CONSTANT);
       82    11070        %KH$IO(FPTN=KH_IO_INPNXTCCBSTT,FNC=%GH#IO_INPNXTCCBSTT,STCLASS=CONSTANT);
       83    11184        %KH$IOLD(FPTN=KH_IOLD,STCLASS=CONSTANT,INTCPU=YES,VLDCCB=YES);
       84    11235        %KH$IO(FPTN=KH@IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=AUTO);
       85    11349        %KH$IO(FPTN=KH@IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=AUTO);
       86    11463        %KH$IO(FPTN=KH@IO_OTPCHNCTR,FNC=%GH#IO_OTPCHNCTR,STCLASS=AUTO);
       87    11577        %KH$IO(FPTN=KH@IO_INPNXTCCBSTT,FNC=%GH#IO_INPNXTCCBSTT,STCLASS=AUTO);
       88    11691        %KH$IOLD(FPTN=KH@IOLD,STCLASS=AUTO);
       89    11742
       90    11743        /* Clock macros. */
       91    11744
       92    11745        %INCLUDE KH$CLK;
       93    12115        %INCLUDE KH_CLKFNC_E;
       94    12160        %KH$CLK (FPTN=KH@CLK, STCLASS=AUTO);
       95    12309        %KH$CLK (FPTN=KH_CLK_LGNTIMOUT, STCLASS=CONSTANT, SBR=KAS$LGNTIMOUT,
       96    12310         PRDUNT=KH#C_MIN, FNC=%KH#CLK_RESET, NO_CTB=YES, EXPINH=YES);
       97    12459        %KH$EXP;
       98    12522        %EQU KH_EXP=CHARTEXT('ADDR(BCHN$)->KH$EXP');
       99    12523
      100    12524        /* entry points */
      101    12525
      102    12526    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      103    12527    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      104    12528    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
      105    12529    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      106    12530    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      107    12531    1   DCL KAO$ASNRQS ENTRY(3) ALTRET;
      108    12532    1   DCL KAO$ASNRQSNO_CTX ENTRY(3) ALTRET;
      109    12533    1   DCL KVV$INT ENTRY(1) ALTRET;
      110    12534    1   DCL KVV$VDI ENTRY(1) ALTRET;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:4    
      111    12535    1   DCL KAS$DSC ENTRY(1);
      112    12536    1   DCL KAS$DSCNO_VDI ENTRY(1);
      113    12537    1   DCL KHI$IO_INP ENTRY(2) ALTRET;
      114    12538    1   DCL KHI$IO_OTP ENTRY(2) ALTRET;
      115    12539    1   DCL KHI$IO_OTPLCTBYT ENTRY(2) ALTRET;
      116    12540    1   DCL KHI$IO_INPLCTBYT ENTRY(2) ALTRET;
      117    12541    1   DCL KHI$IOLD ENTRY(2) ALTRET;
      118    12542    1   DCL KHI$DISABLE ENTRY(1);
      119    12543    1   DCL KHI$ENABLE ENTRY;
      120    12544
      121    12545        /* symref item */
      122    12546
      123    12547    1   DCL 1 BVECTOR BASED ALIGNED,
      124    12548    1          2 BOUND UBIN,
      125    12549    1          2 ADR$ PTR;
      126    12550
      127    12551
      128    12552
      129    12553        /* local variables */
      130    12554
      131    12555    1   DCL LVL UBIN;
      132    12556    1   DCL Y@DUMMY UBIN BYTE UNAL;
      133    12557    1   DCL 1 Y@CRTCNF REDEF Y@DUMMY,
      134    12558    1          2 PRT_NON BIT(1) UNAL,
      135    12559    1          2 PRT UBIN(2) UNAL,
      136    12560    1          2 * BIT(1) UNAL,
      137    12561    1          2 LINSPD UBIN(4) UNAL;
      138    12562    1   DCL Y@BYTSIZ UBIN;
      139    12563    1   DCL Y@BFR$ PTR;
      140    12564    1   DCL Y@FNTCLS UBIN;
      141    12565    1   DCL Y@ERROR UBIN(32);
      142    12566
      143    12567    1   DCL BCHN$ PTR;
      144    12568    1   DCL BCTX$ PTR;
      145    12569
      146    12570
      147    12571    1      KH@IO_INPLCTBYT = KH_IO_INPLCTBYT;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:5    
      148    12572    1      KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_CNCSTT;
      149    12573    1      CALL KHI$IO_INPLCTBYT (KH$CHN,KH@IO_INPLCTBYT);
      150    12574    2      IF NOT KH@IO_INPLCTBYT.LCTBYT&(~%KA_LCT_CNCSTT_DSCARM@S) THEN DO;
      151    12575
      152    12576        /* THIS IS THE INITIAL CONNECT.  SET THE LOGON TIMER. */
      153    12577    3         IF KH$CHN.LGNTIMOUTPRD~=0 THEN DO;
      154    12578    3            KH@CLK = KH_CLK_LGNTIMOUT;
      155    12579    3            KH@CLK.UID$ = BCHN$;
      156    12580    3            KH@CLK.PRD = KH$CHN.LGNTIMOUTPRD;
      157    12581    4            CALL KHC$CLOCK (KH@CLK) WHENALTRETURN DO;
      158    12582    4               KH@CLK.FNC = %KH#CLK_SETCLK;
      159    12583    4               CALL KHC$CLOCK (KH@CLK);
      160    12584    4            END;
      161    12585    3            KH$CHN.CLK = '1'B;
      162    12586    3         END;
      163    12587    2         RETURN;
      164    12588    2      END;
      165    12589    2      ELSE IF NOT KH@IO_INPLCTBYT.LCTBYT&%KA_LCT_CNCSTT_WATFORINT@S THEN DO;
      166    12590
      167    12591        /* DISCONNECTED WITHOUT CONNECTING, SET THE DROPDTR CLOCK */
      168    12592
      169    12593    2         CALL KAS$DSCNO_VDI (KH$CHN);
      170    12594    2         RETURN;
      171    12595    2      END;
      172    12596        /* REPORT THE CONNECT ATTEMPT TO HANDLER ADMINISTRATION.                      */
      173    12597
      174    12598    1      CALL KHA$DVCADM(%KHA_FNC_CONNECT,Y@ERROR,KH$CHN.TERMID)
      175    12599    2      WHENALTRETURN DO;
      176    12600
      177    12601        /* HANDLER ADMINISTRATION RETURNED ERROR STATUS.                              */
      178    12602
      179    12603    2         CALL KAO$ASNRQSNO_CTX(%KA#OTPASNRQS_LINDSB,,KH$CHN);
      180    12604    2         RETURN;
      181    12605    2      END ;
      182    12606
      183    12607        /* GET MEMORY FROM THE CENTRAL MEMORY MANAGER FOR THE ASYNC                   */
      184    12608        /* LINE CONTEXT BLOCK.                                                        */
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:6    
      185    12609
      186    12610    1      KH$CHN.TERMID.TTYP = %KLTY_TTY#;
      187    12611    1      KH$CHN.TERMID.LEV = %TERMINAL_ID_LEV_CHAN#;
      188    12612
      189    12613    1      LVL = KA_INT_LEV;
      190    12614        /*
      191    12615          If the current level is below the async inhibit level,
      192    12616          go to the async inhibit level.
      193    12617        */
      194    12618    1      CALL KHI$DISABLE (LVL);
      195    12619
      196    12620    1      CALL KVB$GETSYS(SIZEW(KA$CTX),BCTX$) ALTRET(NO_GETSYS);
      197    12621
      198    12622    1      KA_STT.KHSTT.CTXBYTUTL = SIZEC(KA$CTX) + KA_STT.KHSTT.CTXBYTUTL;
      199    12623
      200    12624
      201    12625        /* WE GOT THE MEMORY FOR THE ASYNC LINE CONTEXT BLOCK*                        */
      202    12626    1      KH$CHN.CTX$ = BCTX$;
      203    12627    1      KA$CTX = KA_CTX;
      204    12628
      205    12629        /* GET MEMORY FROM THE CENTRAL MEMORY MANAGER FOR THE ASYNC                   */
      206    12630        /* LINE INPUT BUFFER.                                                         */
      207    12631
      208    12632        /* NOTE THAT OUR USING KVB$GET2NSYS CAUSES THE INPUT BUFFER SIZE              */
      209    12633        /* GO BE ROUNDED UP TO THE NEXT POWER-OF-2 SIZE.                              */
      210    12634
      211    12635    1      Y@BYTSIZ = KH$CHN.INPBFRBYTSIZ;
      212    12636    2      IF Y@BYTSIZ=0 OR NOT KH$CHN.INP THEN DO;
      213    12637
      214    12638        /* The specified size is 0 or little input is expected. Use something small.  */
      215    12639
      216    12640    2         Y@BYTSIZ = 1;                     /* Use the minimum size.              */
      217    12641    2      END /* IF */;
      218    12642
      219    12643        /*  BYTES -> WORDS */
      220    12644    1      Y@BYTSIZ = (Y@BYTSIZ + 1)/2;
      221    12645    2      CALL KVB$GET2NSYS(Y@BYTSIZ, Y@BFR$) WHENALTRETURN DO;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:7    
      222    12646    2   NO_GETSYS: ;
      223    12647    2         IF (LVL > KA_INT_LEV) THEN CALL KHI$ENABLE;
      224    12648        /* DIDN'T GET THE ASYNC INPUT BUFFER.                                         */
      225    12649
      226    12650    2         CALL KAO$ASNRQSNO_CTX (%KA#OTPASNRQS_NO_CTX,,KH$CHN);
      227    12651    2         CALL KAS$DSCNO_VDI (KH$CHN);
      228    12652    2         RETURN;
      229    12653    2      END; /* DO WHENALTRETURN */
      230    12654
      231    12655        /* Go back to the level we were at */
      232    12656
      233    12657    1      IF (LVL > KA_INT_LEV) THEN CALL KHI$ENABLE;
      234    12658
      235    12659        /* WE GOT THE MEMORY FOR THE ASYNC LINE INPUT BUFFER*                         */
      236    12660    1      KA$CTX.VDH_DAT.DAT__.ADR$ = Y@BFR$;
      237    12661
      238    12662        /* GET2NSYS has converted Y@BYTSIZ to a power-of-2 word count,
      239    12663           so we have to convert it back to bytes. */
      240    12664
      241    12665    1      Y@BYTSIZ = Y@BYTSIZ * 2;
      242    12666    1      KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ = Y@BYTSIZ;
      243    12667    1      KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL + Y@BYTSIZ;
      244    12668    1      KV@VDH_INT = KV_VDH_INT;
      245    12669    1      KV@VDH_INT.CHN$ = BCHN$;
      246    12670    1      KV@VDH_INT.USRCTX$ = BCTX$;
      247    12671    1      KV@VDH_INT.USRPRM$ = ADDR(KA_USRPRM);
      248    12672    1      KV@VDH_INT.TRCBFRBYTSIZ = KA_VDHTRCBFRBYTSIZ;
      249    12673
      250    12674        /* GET THE CURRENT CONFIGURATION FROM THE CONTROLLER.                         */
      251    12675
      252    12676    1      KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_CRTCNF;
      253    12677    1      CALL KHI$IO_INPLCTBYT(KH$CHN,KH@IO_INPLCTBYT) ;
      254    12678    1      Y@DUMMY = KH@IO_INPLCTBYT.LCTBYT.DAT;
      255    12679    1      KA_STT.LINSPDDST(Y@CRTCNF.LINSPD) = KA_STT.LINSPDDST(Y@CRTCNF.LINSPD) +1;
      256    12680    1      KV@VDH_INT.RCVFLWCTRMAXCRD = KA_OTPBLKLMT(Y@CRTCNF.LINSPD);
      257    12681
      258    12682        /* CALL VDI TO GET THE KV$VDI BLOCK                                           */
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:8    
      259    12683
      260    12684    1      CALL KVV$INT (KV@VDH_INT)
      261    12685    2      WHENALTRETURN DO;
      262    12686    2         CALL KAO$ASNRQSNO_CTX(%KA#OTPASNRQS_NO_CTX,,KH$CHN);
      263    12687    2         CALL KAS$DSCNO_VDI (KH$CHN);
      264    12688    2         RETURN;
      265    12689    2      END /* IF */;
      266    12690    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_DLTOTP) = '1'B;
      267    12691    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_DSC) = '1'B;
      268    12692    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_GETSTR) = '1'B;
      269    12693    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_HLTOTP) = '1'B;
      270    12694    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_INHDLTOTP) = '1'B;
      271    12695    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_OTP1_CHR) = '1'B;
      272    12696    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_RLSSTR) = '1'B;
      273    12697    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_RLSVDI) = '1'B;
      274    12698    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_SCH) = '1'B;
      275    12699    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_VDHEXT) = '1'B;
      276    12700    1      KV@VDH_INT.VDI$->KV$VDI.VDHEVTENB(%KV_VDH_EVT_ID_CMPOTP) = '1'B;
      277    12701    1      KV@VDH_INT.VDI$->KV$VDI.VDHEVTENB(%KV_VDH_EVT_ID_RQSOTP) = '1'B;
      278    12702    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_CLKEXP) = '1'B;
      279    12703
      280    12704        /* SAVE POINTER TO VDI BLOCK                                                  */
      281    12705
      282    12706    1      KA$CTX.VDI$ = KV@VDH_INT.VDI$;
      283    12707
      284    12708    2      IF Y@CRTCNF.PRT_NON THEN DO;
      285    12709
      286    12710        /* THE PARITY IS NOT KNOWN. DON'T DO PARITY CHECKING.                         */
      287    12711
      288    12712    2         KV@VDH_INT.VDI$->KV$VDI.PRTTYP = %KV_PRTTYP_NONE;
      289    12713    2      END; ELSE DO;
      290    12714
      291    12715        /* THE PARITY IS KNOWN. DO PARITY CHECKING.                                   */
      292    12716
      293    12717    2         KV@VDH_INT.VDI$->KV$VDI.PRTTYP = 4 - Y@CRTCNF.PRT;
      294    12718    2         KV@VDH_INT.VDI$->KV$VDI.PRTCHK = '1'B;
      295    12719    2      END /* IF */;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:9    
      296    12720        /* INPUT UNIT IS CHARACTER */
      297    12721    1      KV@VDH_INT.VDI$->KV$VDI.INPUNT = %KV_INPUNT_CHR;
      298    12722
      299    12723        /* CALL KVV$VDI TO DO ACTUAL CONNECT                                          */
      300    12724
      301    12725    1      KV@VDH_CNC = KV_VDH_CNC;
      302    12726    1      KV@VDH_CNC.PRF_.ADR$ = ADDR(KH_PROFILE_)->BVECTOR.ADR$;
      303    12727    1      KV@VDH_CNC.PRF_.BYTSIZ = ADDR(KH_PROFILE_)->BVECTOR.BOUND+1;
      304    12728    1      KV@VDH_CNC.LINSPD = Y@CRTCNF.LINSPD;
      305    12729    1      KV@VDH_CNC.LCLENDPNTID = KH$CHN.TERMID;
      306    12730    1      CALL KVV$VDI (KV@VDH_CNC)
      307    12731    2      WHENALTRETURN DO;
      308    12732    2         CALL KAO$ASNRQS (%KA#OTPASNRQS_NO_CTX);
      309    12733        /* ASNRQSNO_CTX include BGNPHSDSC, so note that. */
      310    12734    2         KH$CHN.CLK = '1'B;
      311    12735    2         CALL KAS$DSC (KA$CTX);
      312    12736    2         CALL KVV$VDI (KV_VDH_EVT_RLSVDI);
      313    12737    2         RETURN;
      314    12738    2      END /* IF */;
      315    12739    1      %KV_MRD.INPUT = KH$CHN.INP;
      316    12740    1      %KV_MRD.OUTPUT = KH$CHN.OTP;
      317    12741
      318    12742        /* GET THE CURRENT FONT CLASS FROM THE CONTROLLER.                            */
      319    12743
      320    12744    1      KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_FNTCLS;
      321    12745    1      CALL KHI$IO_INPLCTBYT(KH$CHN,KH@IO_INPLCTBYT);
      322    12746
      323    12747        /* SET UP THE TRANSLATE TABLES. IF WE SOLICITED A                             */
      324    12748        /* LEFT PARENTHESIS, THE FONT CLASS MAY HAVE BEEN SET TO AN APL TRANSLATE TABL*/
      325    12749
      326    12750        /*N* FNTCLS is the lower 2 bits of the LCT byte */
      327    12751    1      Y@FNTCLS = MOD(KH@IO_INPLCTBYT.LCTBYT.DAT,4);
      328    12752    2      IF Y@FNTCLS>0 THEN IF %KV_MVD.APLLCNRM THEN DO;
      329    12753
      330    12754        /* IF WE ARE GOING TO AN APL TRANSLATE TABLE, GO TO THE PARTIAL (PRINT 'LOWERC*/
      331    12755        /* CHARACTERS AS UPPERCASE) VERSION.                                          */
      332    12756
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:10   
      333    12757    2         %KV_MVD.TRNTBL$ = KA_TRNTBL_PRT$(Y@FNTCLS);
      334    12758    2      END; ELSE DO;
      335    12759
      336    12760        /* IF WE ARE GOING TO AN APL TRANSLATE TABLE, GO TO THE FULL (UNDERSCORED     */
      337    12761        /* 'LOWERCASE' CHARACTERS) VERSION.                                           */
      338    12762
      339    12763    2         %KV_MVD.TRNTBL$ = KA_TRNTBL_FUL$(Y@FNTCLS);
      340    12764    2      END /* IF */;
      341    12765
      342    12766        /* IOLD BOTH HALVES OF THE INPUT BUFFER. THE INPUT BUFFER                     */
      343    12767        /* IS A CIRCULAR BUFFER.                                                      */
      344    12768
      345    12769
      346    12770
      347    12771    1      KH@IOLD = KH_IOLD;
      348    12772    1      KH@IOLD.BFR_.BYTSIZ = KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;
      349    12773    1      KH@IOLD.BFR_.ADR$ = Y@BFR$;
      350    12774    1      CALL KHI$IOLD(KH$CHN,KH@IOLD) ALTRET(Y@IO_FAIL);
      351    12775
      352    12776        /* THE IOLD AND IO (OUTPUT CCB CONTROL) WERE SUCCESSFUL.                      */
      353    12777
      354    12778    1      KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT+1;
      355    12779
      356    12780        /* WE'LL DO THE IO (INPUT NEXT CCB STATUS), WHICH                             */
      357    12781        /* INCREMENTS THE STATUS CCB POINTER AND DECREMENTS                           */
      358    12782        /* THE CCB COUNTER IN THE HARDWARE, NOW.                                      */
      359    12783
      360    12784    1      KH@IO_INPNXTCCBSTT = KH_IO_INPNXTCCBSTT;
      361    12785    1      CALL KHI$IO_INP (KH$CHN,KH@IO_INPNXTCCBSTT) ALTRET (Y@IO_FAIL);
      362    12786
      363    12787        /* THE IO (INPUT NEXT CCB STATUS) WAS SUCCESSFUL,                             */
      364    12788        /* SO SET THE CCB-STATUS-IS-VALID FLAG.                                       */
      365    12789
      366    12790    1      KH$CHN.INPCCBSTTPTRVLD = '1'B;
      367    12791        /*E* ERROR:         KAS-E$ASN_IO_ERR */
      368    12792        /*E* MESSAGE:       IO error (bad CCB status) */
      369    12793        /*E* DESCRIPTION:   The CCB status indicated an IO error occurred. */
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:11   
      370    12794           %KAC$CLCERRCHK(CCBSTT=KH@IO_INPNXTCCBSTT.CCBSTT,
      371    12795           CCBSRVERR=YES,
      372    12796           DATCHKERR=YES,
      373    12797           INVMMRADR=YES,
      374    12798           BUSPRTERR=YES,
      375    12799           UN_CRCMMRERR=YES);
      376    12805    1      KH@IOLD.BFR_.BYTX = KH@IOLD.BFR_.BYTSIZ;
      377    12806    1      CALL KHI$IOLD(KH$CHN,KH@IOLD) ALTRET (Y@IO_FAIL);
      378    12807
      379    12808        /* THE IOLD AND IO (OUTPUT CCB CONTROL) WERE SUCCESSFUL.                      */
      380    12809
      381    12810    1      KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT+1;
      382    12811
      383    12812        /* DO AN IO (OUTPUT CHANNEL CONTROL, START IO) TO GET THE                     */
      384    12813        /* RECEIVE CCP GOING AGAIN.                                                   */
      385    12814
      386    12815    1      KH@IO_OTPCHNCTR = KH_IO_OTPCHNCTR;
      387    12816    1      KH@IO_OTPCHNCTR.CHNCTR.STRIO = '1'B;
      388    12817    1      CALL KHI$IO_OTP(KH$CHN,KH@IO_OTPCHNCTR)
      389    12818    2      WHENRETURN DO;
      390    12819    2         GOTO Y@IO_OK;
      391    12820    2      END;
      392    12821    2   Y@IO_FAIL: DO; END;
      393    12822        /*N* **** > THROW IN SOME ERROR RECOVERY < ****                                 */
      394    12823    1   Y@IO_OK: RETURN;
      395    12824        %EJECT;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:12   
      396    12825        /* LOGON-TIMEOUT CLOCK EXPIRY */
      397    12826
      398    12827    1   KAS$LGNTIMOUT: ENTRY(BCHN$);
      399    12828
      400    12829    1      BCTX$ = %KH_EXP.UID$->KH$CHN.CTX$;
      401    12830    2      IF BCTX$=ADDR(NIL) THEN DO;
      402    12831
      403    12832        /* No context yet.  Just disconnect the line. */
      404    12833
      405    12834    2         CALL KAO$ASNRQSNO_CTX (%KA#OTPASNRQS_BGNPHSDSC,,%KH_EXP.UID$->KH$CHN);
      406    12835    2         CALL KAS$DSCNO_VDI (%KH_EXP.UID$->KH$CHN);
      407    12836    2      END;
      408    12837    1      ELSE %KH_EXP.UID$->KH$CHN.CLK = '0'B;
      409    12838    1      RETURN;
      410    12839    1   END KAS$RQSCNC;
      411    12840
      412    12841
      413    12842        %EOD;

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:13   
--  Include file information  --

   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KA_PERR_C.:E05TOU  is referenced.
   KA_LCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KW_ALCT_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLBASM_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:14   
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAS$RQSCNC.

   Procedure KAS$RQSCNC requires 934 words for executable code.
   Procedure KAS$RQSCNC requires 82 words of local(AUTO) storage.

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:15   

 Object Unit name= KAS$RQSCNC                                 File name= KAS$CNC.:E05TOU
 UTS= JUL 30 '97 00:01:58.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     45     2D  KAS$RQSCNC
    1   Proc  even  none   934    3A6  KAS$RQSCNC
    2  RoData even  none     5      5  KAS$RQSCNC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KAS$RQSCNC
     1    36D                  yes      Std        1  KAS$LGNTIMOUT
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:16   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KHI$IO_INPLCTBYT
 yes     yes           Std       1 KHC$CLOCK
 yes     yes           Std       3 KAO$ASNRQSNO_CTX
 yes     yes           Std       2 KVB$GETSYS
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       3 KAO$ASNRQS
 yes     yes           Std       2 KHD$ERRLOG_SETTERMID_CHN
         yes           Std       1 KAS$DSCNO_VDI
 yes     yes           Std       6 KHA$DVCADM
         yes           Std       1 KHI$DISABLE
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       1 KVV$INT
 yes     yes           Std       2 KHI$IO_INP
 yes     yes           Std       1 KVV$VDI
 yes     yes           Std       2 KHI$IO_OTP
 yes     yes           Std       2 KHI$IOLD
         yes           Std       1 KAS$DSC
         yes           Std       1 KAS$LGNTIMOUT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KA_USRPRM                             KA_INT_LEV
r    KH_CHNHI                         r    KH_CHNLOW                        r    KH_PROFILE_
     KA_OTPBLKLMT                          KA_VDHTRCBFRBYTSIZ                    KA_CTX
r    KA_TRNTBL_FUL$                   r    KA_TRNTBL_PRT$                        KA_STT
r    KV_VDH_INT                       r    KV_VDH_CNC                       r    KV_VDH_EVT_RLSVDI
r    G$ROS$
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:17   


        1        1        /*M* KAS$CNC ASYNC HANDLER INITIALIZATION SERVICE ROUTINES                    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
        8        8        KAS$RQSCNC: PROC(BCHN$);

      8   1 000000  D380 0000 0000  xent KAS$RQSCNC      LNJ,B5   X6A_AUTO_1
          1 000003       0052 0001                       DC       82,1

        9        9 S      %INCLUDE KV_GLBCNS_E;                   /*  VDH Constants                     */
       10       10
       11       11        %INCLUDE LCP_6;
       12      202        %INCLUDE CP_6_SUBS;
       13      742        %INCLUDE KL_SUPER_C;          /* KL_TERMINAL_ID TTYP values for KV$VDH_CNC    */
       14     3644        %INCLUDE KL_MACRO_C;                    /* For KA_STT/KV$STT                  */
       15     6996        %INCLUDE KL_AFCN_C;                     /* For KA_STT/KV$STT                  */
       16     7097        %INCLUDE K_ID_E;                        /* For KA_STT/KV$STT                  */
       17     7147        %K#LYRID_E;                             /* For KA_STT/KV$STT                  */
       18     7154        %K#ENTID_E;                             /* For KA_STT/KV$STT                  */
       19     7173
       20     7174        %KV_USR_EVT_ID_E;
       21     7194        %KV_PRTTYP_E;
       22     7201        %KV_VDH_EVT_ID_E;
       23     7207        %KV_INPUNT_E;
       24     7212        %INCLUDE KV_GLBASM_E;                   /* FONT CLASS EQU'S                   */
       25     7230        %INCLUDE KV$BPC;
       26     7259 S      %INCLUDE KV$GLB;
       27     7260 S      %INCLUDE KV$GLBCTX;
       28     7261        %KV$MRD;                                /*  VDH Master real device            */
       29     7308        %KV$MVD;                                /*  VDH Master virtual device         */
       30     7352        %KV$PTR;                                /*  VDH Pointers, status              */
       31     7395        %KV$SSN;                                /*  VDH Session                       */
       32     7474        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:18   
       33     7545        %KV$USRPRM(NAME=KA_USRPRM,STCLASS=SYMREF);
       34     7596    1   DCL KA_INT_LEV UBIN SYMREF;
       35     7597        %INCLUDE KV_ASCCHR_E;                   /*  EQU'S FOR ASCII CHR'S             */
       36     7734 S      %INCLUDE KV$INT;
       37     7735        %KV$TRNTBL;                             /*  TRANSLATE TABLES                  */
       38     7793        %KV$SHRBFR;                             /*  ASYNC MISCELLANEOUS BUFFER        */
       39     7825        %INCLUDE KH$CHN;
       40     7947        %INCLUDE KH_CHN;
       41     7987        %INCLUDE KH$STT;
       42     8017        %KH$CHN(STCLASS = "BASED(BCHN$)");      /*  CHANNEL TABLES ITEM DEFINITONS    */
       43     8141        %EQU KH_CHN=CHARTEXT('KH$CHN');
       44     8142        %KH_CHNDAT;                             /*  CHANNEL TABLES ITEM DEFINITONS    */
       45     8160        %INCLUDE KHA_FNC_E;
       46     8260        %INCLUDE GH_IOFNC_E;                    /*  IO FUNCTION CODES                 */
       47     8329
       48     8330 S      %INCLUDE KV$VDH;
       49     8331        %INCLUDE KA$GLB;
       50     8472        %INCLUDE KA_GLB;
       51     8549        %INCLUDE KA_GLBASM_E;
       52     8631        %INCLUDE KA_GLB_E;
       53     8709        %KA_HLTOTP_E;
       54     8718        %KA_MSC;
       55     8740        %KA$CTX(NAME=KA_CTX,STCLASS = SYMREF);
       56     8864        %KA$CTX(STCLASS = "BASED(BCTX$)"); /*  ASYNC CONTEXT BLOCK ITEM DEFINITIONS   */
       57     8988        %KA_TRNTBL_MSC;                         /*  TRANSLATE TABLES                  */
       58     9009        %KA$INPBFR;                             /*  ASYNC INPUT BUFFER DESCRIPTION    */
       59     9034        %KA_STT;                                /*  STATISTICS                        */
       60     9397        %INCLUDE KW_ALCT_E;                     /*  LCT ITEMS                         */
       61     9587        %INCLUDE KW_LCT_E;                      /*  ASYNC LCT ITEMS                   */
       62     9942        %INCLUDE KA_LCT_E;                      /*  ASYNC LCT ITEMS                   */
       63    10066        %INCLUDE KA_PERR_C;
       64    10085        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_IO_ERR, STCLASS = CONSTANT, FCG = KA, MID = S,
             10085            ERR = %E$ASN_IO_ERR, SEV = 3);
       65    10180
       66    10181        /* INITIALIZE A LINE, AND REQUEST A CONNECTION.                               */
       67    10182
       68    10183
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:19   
       69    10184
       70    10185        %KV$VDH_INT(NAME = KV@VDH_INT, STCLASS = AUTO);
       71    10222        %KV$VDH_CNC(NAME = KV@VDH_CNC, STCLASS = AUTO);
       72    10314        %KV$VDH_INT(NAME = KV_VDH_INT, STCLASS = SYMREF READONLY);
       73    10351        %KV$VDH_CNC(NAME = KV_VDH_CNC, STCLASS = SYMREF READONLY);
       74    10443        %KV$VDH_EVT (NAME=KV_VDH_EVT_RLSVDI, STCLASS=SYMREF READONLY);
       75    10478
       76    10479        /*  IO macros and FPTs  */
       77    10480
       78    10481        %INCLUDE KH$IO;
       79    10728        %KH$IO(FPTN=KH_IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=CONSTANT);
       80    10842        %KH$IO(FPTN=KH_IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=CONSTANT);
       81    10956        %KH$IO(FPTN=KH_IO_OTPCHNCTR,FNC=%GH#IO_OTPCHNCTR,STCLASS=CONSTANT);
       82    11070        %KH$IO(FPTN=KH_IO_INPNXTCCBSTT,FNC=%GH#IO_INPNXTCCBSTT,STCLASS=CONSTANT);
       83    11184        %KH$IOLD(FPTN=KH_IOLD,STCLASS=CONSTANT,INTCPU=YES,VLDCCB=YES);
       84    11235        %KH$IO(FPTN=KH@IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=AUTO);
       85    11349        %KH$IO(FPTN=KH@IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=AUTO);
       86    11463        %KH$IO(FPTN=KH@IO_OTPCHNCTR,FNC=%GH#IO_OTPCHNCTR,STCLASS=AUTO);
       87    11577        %KH$IO(FPTN=KH@IO_INPNXTCCBSTT,FNC=%GH#IO_INPNXTCCBSTT,STCLASS=AUTO);
       88    11691        %KH$IOLD(FPTN=KH@IOLD,STCLASS=AUTO);
       89    11742
       90    11743        /* Clock macros. */
       91    11744
       92    11745        %INCLUDE KH$CLK;
       93    12115        %INCLUDE KH_CLKFNC_E;
       94    12160        %KH$CLK (FPTN=KH@CLK, STCLASS=AUTO);
       95    12309        %KH$CLK (FPTN=KH_CLK_LGNTIMOUT, STCLASS=CONSTANT, SBR=KAS$LGNTIMOUT,
       96    12310         PRDUNT=KH#C_MIN, FNC=%KH#CLK_RESET, NO_CTB=YES, EXPINH=YES);
       97    12459        %KH$EXP;
       98    12522        %EQU KH_EXP=CHARTEXT('ADDR(BCHN$)->KH$EXP');
       99    12523
      100    12524        /* entry points */
      101    12525
      102    12526    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      103    12527    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      104    12528    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
      105    12529    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:20   
      106    12530    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      107    12531    1   DCL KAO$ASNRQS ENTRY(3) ALTRET;
      108    12532    1   DCL KAO$ASNRQSNO_CTX ENTRY(3) ALTRET;
      109    12533    1   DCL KVV$INT ENTRY(1) ALTRET;
      110    12534    1   DCL KVV$VDI ENTRY(1) ALTRET;
      111    12535    1   DCL KAS$DSC ENTRY(1);
      112    12536    1   DCL KAS$DSCNO_VDI ENTRY(1);
      113    12537    1   DCL KHI$IO_INP ENTRY(2) ALTRET;
      114    12538    1   DCL KHI$IO_OTP ENTRY(2) ALTRET;
      115    12539    1   DCL KHI$IO_OTPLCTBYT ENTRY(2) ALTRET;
      116    12540    1   DCL KHI$IO_INPLCTBYT ENTRY(2) ALTRET;
      117    12541    1   DCL KHI$IOLD ENTRY(2) ALTRET;
      118    12542    1   DCL KHI$DISABLE ENTRY(1);
      119    12543    1   DCL KHI$ENABLE ENTRY;
      120    12544
      121    12545        /* symref item */
      122    12546
      123    12547    1   DCL 1 BVECTOR BASED ALIGNED,
      124    12548    1          2 BOUND UBIN,
      125    12549    1          2 ADR$ PTR;
      126    12550
      127    12551
      128    12552
      129    12553        /* local variables */
      130    12554
      131    12555    1   DCL LVL UBIN;
      132    12556    1   DCL Y@DUMMY UBIN BYTE UNAL;
      133    12557    1   DCL 1 Y@CRTCNF REDEF Y@DUMMY,
      134    12558    1          2 PRT_NON BIT(1) UNAL,
      135    12559    1          2 PRT UBIN(2) UNAL,
      136    12560    1          2 * BIT(1) UNAL,
      137    12561    1          2 LINSPD UBIN(4) UNAL;
      138    12562    1   DCL Y@BYTSIZ UBIN;
      139    12563    1   DCL Y@BFR$ PTR;
      140    12564    1   DCL Y@FNTCLS UBIN;
      141    12565    1   DCL Y@ERROR UBIN(32);
      142    12566
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:21   
      143    12567    1   DCL BCHN$ PTR;
      144    12568    1   DCL BCTX$ PTR;
      145    12569
      146    12570
      147    12571    1      KH@IO_INPLCTBYT = KH_IO_INPLCTBYT;

  12571   1 000005  8C80 0000 0015  00                   LDI      KH_IO_INPLCTBYT
          1 000008  8D47 002A                            SDI      KH@IO_INPLCTBYT,AUTO

      148    12572    1      KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_CNCSTT;

  12572   1 00000A  5C1A                                 LDV,R5   26
          1 00000B  DAC7 002B                            SRM,R5,'00FF'X    KH@IO_INPLCTBYT+1,AUTO
          1 00000D       00FF

      149    12573    1      CALL KHI$IO_INPLCTBYT (KH$CHN,KH@IO_INPLCTBYT);

  12573   1 00000E  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000010  DC86                                 LDB,B5   ,B6
          1 000011  CBC7 002A                            LAB,B4   KH@IO_INPLCTBYT,AUTO
          1 000013  CFC7 004E                            STB,B4   BCTX$+4,AUTO
          1 000015  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 000017  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000019  CBF0 0200                            LAB,B4   512,IMO
          1 00001B  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          1 00001E       0001                            DC       s:12574,PREL

      150    12574    2      IF NOT KH@IO_INPLCTBYT.LCTBYT&(~%KA_LCT_CNCSTT_DSCARM@S) THEN DO;

  12574   1 00001F  E847 002B                            LDR,R6   KH@IO_INPLCTBYT+1,AUTO
          1 000021  E570 DF00                            AND,R6   -8448,IMO
          1 000023  6981 003E                            BNEZ,R6  s:12589,PREL

      151    12575
      152    12576        /* THIS IS THE INITIAL CONNECT.  SET THE LOGON TIMER. */
      153    12577    3         IF KH$CHN.LGNTIMOUTPRD~=0 THEN DO;

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:22   
  12577   1 000025  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000027  DC86                                 LDB,B5   ,B6
          1 000028  E2C5 000A                            LLH,R6   10,B5
          1 00002A  6901 0034                            BEZ,R6   s:12587,PREL

      154    12578    3            KH@CLK = KH_CLK_LGNTIMOUT;

  12578   1 00002C  AB80 0000 0000  00                   LAB,B2   FPT_WRSYSLOG_IO_ERR
          1 00002F  2C44                                 LDV,R2   68
          1 000030  6C16                                 LDV,R6   22
          1 000031  BB87                                 LAB,B3   ,AUTO
          1 000032  3C6E                                 LDV,R3   110
          1 000033  0008                                 MMM

      155    12579    3            KH@CLK.UID$ = BCHN$;

  12579   1 000034  DC86                                 LDB,B5   ,B6
          1 000035  DFC7 0039                            STB,B5   KH@CLK+2,AUTO

      156    12580    3            KH@CLK.PRD = KH$CHN.LGNTIMOUTPRD;

  12580   1 000037  CC86                                 LDB,B4   ,B6
          1 000038  E2C4 000A                            LLH,R6   10,B4
          1 00003A  EF47 0041                            STR,R6   KH@CLK+10,AUTO

      157    12581    4            CALL KHC$CLOCK (KH@CLK) WHENALTRETURN DO;

  12581   1 00003C  CBC7 0037                            LAB,B4   KH@CLK,AUTO
          1 00003E  CFC7 004C                            STB,B4   BCTX$+2,AUTO
          1 000040  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000042  CBF0 0100                            LAB,B4   256,IMO
          1 000044  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          1 000047       0003                            DC       s:12582,PREL
          1 000048  0F81 0011                            B        s:12585,PREL

      158    12582    4               KH@CLK.FNC = %KH#CLK_SETCLK;

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:23   
  12582   1 00004A  6C01                                 LDV,R6   1
          1 00004B  EAC7 003C                            SRM,R6,'00FF'X    KH@CLK+5,AUTO
          1 00004D       00FF

      159    12583    4               CALL KHC$CLOCK (KH@CLK);

  12583   1 00004E  EBC7 0037                            LAB,B6   KH@CLK,AUTO
          1 000050  EFC7 004C                            STB,B6   BCTX$+2,AUTO
          1 000052  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000054  CBF0 0100                            LAB,B4   256,IMO
          1 000056  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          1 000059       0001                            DC       s:12585,PREL

      160    12584    4            END;

      161    12585    3            KH$CHN.CLK = '1'B;

  12585   1 00005A  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 00005C  DC86                                 LDB,B5   ,B6
          1 00005D  8905                                 LBT,'0020'X       ,B5
          1 00005E       0020

      162    12586    3         END;

      163    12587    2         RETURN;

  12587   1 00005F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      164    12588    2      END;
      165    12589    2      ELSE IF NOT KH@IO_INPLCTBYT.LCTBYT&%KA_LCT_CNCSTT_WATFORINT@S THEN DO;

  12589   1 000062  E847 002B                            LDR,R6   KH@IO_INPLCTBYT+1,AUTO
          1 000064  E570 0800                            AND,R6   2048,IMO
          1 000066  6981 0011                            BNEZ,R6  s:12598,PREL

      166    12590
      167    12591        /* DISCONNECTED WITHOUT CONNECTING, SET THE DROPDTR CLOCK */
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:24   
      168    12592
      169    12593    2         CALL KAS$DSCNO_VDI (KH$CHN);

  12593   1 000068  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 00006A  DC86                                 LDB,B5   ,B6
          1 00006B  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 00006D  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 00006F  CBF0 0100                            LAB,B4   256,IMO
          1 000071  E380 0000 0000  xent                 LNJ,B6   KAS$DSCNO_VDI
          1 000074       0001                            DC       s:12594,PREL

      170    12594    2         RETURN;

  12594   1 000075  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      171    12595    2      END;
      172    12596        /* REPORT THE CONNECT ATTEMPT TO HANDLER ADMINISTRATION.                      */
      173    12597
      174    12598    1      CALL KHA$DVCADM(%KHA_FNC_CONNECT,Y@ERROR,KH$CHN.TERMID)

  12598   1 000078  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 00007A  DC86                                 LDB,B5   ,B6
          1 00007B  CBF0 000E                            LAB,B4   14,IMO
          1 00007D  BBC5 0012                            LAB,B3   18,B5
          1 00007F  BFC7 0050                            STB,B3   BCTX$+6,AUTO
          1 000081  DBC7 0048                            LAB,B5   Y@ERROR,AUTO
          1 000083  DFC7 004E                            STB,B5   BCTX$+4,AUTO
          1 000085  CFC7 004C                            STB,B4   BCTX$+2,AUTO
          1 000087  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000089  CBF0 0300                            LAB,B4   768,IMO
          1 00008B  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          1 00008E       0003                            DC       s:12603,PREL
          1 00008F  0F81 001A                            B        s:12610,PREL

      175    12599    2      WHENALTRETURN DO;

      176    12600
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:25   
      177    12601        /* HANDLER ADMINISTRATION RETURNED ERROR STATUS.                              */
      178    12602
      179    12603    2         CALL KAO$ASNRQSNO_CTX(%KA#OTPASNRQS_LINDSB,,KH$CHN);

  12603   1 000091  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000093  DC86                                 LDB,B5   ,B6
          1 000094  CBF0 000E                            LAB,B4   14,IMO
          1 000096  DFC7 0050                            STB,B5   BCTX$+6,AUTO
          1 000098  BB80 0000 0000                       LAB,B3   0
          1 00009B  BFC7 004E                            STB,B3   BCTX$+4,AUTO
          1 00009D  CFC7 004C                            STB,B4   BCTX$+2,AUTO
          1 00009F  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 0000A1  CBF0 0300                            LAB,B4   768,IMO
          1 0000A3  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSNO_CTX
          1 0000A6       0001                            DC       s:12604,PREL

      180    12604    2         RETURN;

  12604   1 0000A7  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      181    12605    2      END ;
      182    12606
      183    12607        /* GET MEMORY FROM THE CENTRAL MEMORY MANAGER FOR THE ASYNC                   */
      184    12608        /* LINE CONTEXT BLOCK.                                                        */
      185    12609
      186    12610    1      KH$CHN.TERMID.TTYP = %KLTY_TTY#;

  12610   1 0000AA  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 0000AC  DC86                                 LDB,B5   ,B6
          1 0000AD  6C02                                 LDV,R6   2
          1 0000AE  E7C5 0012                            STH,R6   18,B5

      187    12611    1      KH$CHN.TERMID.LEV = %TERMINAL_ID_LEV_CHAN#;

  12611   1 0000B0  DC86                                 LDB,B5   ,B6
          1 0000B1  5C01                                 LDV,R5   1
          1 0000B2  DAC5 0012                            SRM,R5,'00FF'X    18,B5
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:26   
          1 0000B4       00FF

      188    12612
      189    12613    1      LVL = KA_INT_LEV;

  12613   1 0000B5  C800 0000 0000  xsym                 LDR,R4   KA_INT_LEV
          1 0000B8  CF47 0042                            STR,R4   LVL,AUTO

      190    12614        /*
      191    12615          If the current level is below the async inhibit level,
      192    12616          go to the async inhibit level.
      193    12617        */
      194    12618    1      CALL KHI$DISABLE (LVL);

  12618   1 0000BA  DBC7 0042                            LAB,B5   LVL,AUTO
          1 0000BC  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 0000BE  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 0000C0  CBF0 0100                            LAB,B4   256,IMO
          1 0000C2  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 0000C5       0001                            DC       s:12620,PREL

      195    12619
      196    12620    1      CALL KVB$GETSYS(SIZEW(KA$CTX),BCTX$) ALTRET(NO_GETSYS);

  12620   1 0000C6  EBF0 0020                            LAB,B6   32,IMO
          1 0000C8  DBC7 004A                            LAB,B5   BCTX$,AUTO
          1 0000CA  DFC7 004E                            STB,B5   BCTX$+4,AUTO
          1 0000CC  EFC7 004C                            STB,B6   BCTX$+2,AUTO
          1 0000CE  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 0000D0  CBF0 0200                            LAB,B4   512,IMO
          1 0000D2  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 0000D5       0040                            DC       s:12640,PREL

      197    12621
      198    12622    1      KA_STT.KHSTT.CTXBYTUTL = SIZEC(KA$CTX) + KA_STT.KHSTT.CTXBYTUTL;

  12622   1 0000D6  8C80 0000 0020  xsym                 LDI      KA_STT+32
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:27   
          1 0000D9  8470 0000 0040                       AID      64,IMO
          1 0000DC  8D00 0000 0020  xsym                 SDI      KA_STT+32

      199    12623
      200    12624
      201    12625        /* WE GOT THE MEMORY FOR THE ASYNC LINE CONTEXT BLOCK*                        */
      202    12626    1      KH$CHN.CTX$ = BCTX$;

  12626   1 0000DF  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 0000E1  DC86                                 LDB,B5   ,B6
          1 0000E2  CCC7 004A                            LDB,B4   BCTX$,AUTO
          1 0000E4  CFC5 000C                            STB,B4   12,B5

      203    12627    1      KA$CTX = KA_CTX;

  12627   1 0000E6  AB80 0000 0000  xsym                 LAB,B2   KA_CTX
          1 0000E9  2C00                                 LDV,R2   0
          1 0000EA  6C40                                 LDV,R6   64
          1 0000EB  BCC7 004A                            LDB,B3   BCTX$,AUTO
          1 0000ED  3C00                                 LDV,R3   0
          1 0000EE  0008                                 MMM

      204    12628
      205    12629        /* GET MEMORY FROM THE CENTRAL MEMORY MANAGER FOR THE ASYNC                   */
      206    12630        /* LINE INPUT BUFFER.                                                         */
      207    12631
      208    12632        /* NOTE THAT OUR USING KVB$GET2NSYS CAUSES THE INPUT BUFFER SIZE              */
      209    12633        /* GO BE ROUNDED UP TO THE NEXT POWER-OF-2 SIZE.                              */
      210    12634
      211    12635    1      Y@BYTSIZ = KH$CHN.INPBFRBYTSIZ;

  12635   1 0000EF  DC86                                 LDB,B5   ,B6
          1 0000F0  E845 000B                            LDR,R6   11,B5
          1 0000F2  EF47 0044                            STR,R6   Y@BYTSIZ,AUTO

      212    12636    2      IF Y@BYTSIZ=0 OR NOT KH$CHN.INP THEN DO;

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:28   
  12636   1 0000F4  6901 0007                            BEZ,R6   s:12640,PREL
          1 0000F6  DC86                                 LDB,B5   ,B6
          1 0000F7  82C5 0007                            LB,'4000'X        7,B5
          1 0000F9       4000
          1 0000FA  0501 0004                            BBT      s:12644,PREL

      213    12637
      214    12638        /* The specified size is 0 or little input is expected. Use something small.  */
      215    12639
      216    12640    2         Y@BYTSIZ = 1;                     /* Use the minimum size.              */

  12640   1 0000FC  6C01                                 LDV,R6   1
          1 0000FD  EF47 0044                            STR,R6   Y@BYTSIZ,AUTO

      217    12641    2      END /* IF */;

      218    12642
      219    12643        /*  BYTES -> WORDS */
      220    12644    1      Y@BYTSIZ = (Y@BYTSIZ + 1)/2;

  12644   1 0000FF  6E01                                 ADV,R6   1
          1 000100  6041                                 SOR,R6   1
          1 000101  EF47 0044                            STR,R6   Y@BYTSIZ,AUTO

      221    12645    2      CALL KVB$GET2NSYS(Y@BYTSIZ, Y@BFR$) WHENALTRETURN DO;

  12645   1 000103  DBC7 0045                            LAB,B5   Y@BFR$,AUTO
          1 000105  DFC7 004E                            STB,B5   BCTX$+4,AUTO
          1 000107  CBC7 0044                            LAB,B4   Y@BYTSIZ,AUTO
          1 000109  CFC7 004C                            STB,B4   BCTX$+2,AUTO
          1 00010B  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 00010D  CBF0 0200                            LAB,B4   512,IMO
          1 00010F  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 000112       0003                            DC       s:12640,PREL
          1 000113  0F81 0034                            B        s:12657,PREL

  12640   1                              NO_GETSYS       null
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:29   
      222    12646    2   NO_GETSYS: ;
      223    12647    2         IF (LVL > KA_INT_LEV) THEN CALL KHI$ENABLE;

  12647   1 000115  E847 0042            NO_GETSYS       LDR,R6   LVL,AUTO
          1 000117  E900 0000 0000  xsym                 CMR,R6   KA_INT_LEV
          1 00011A  0381 0007                            BLE      s:12650,PREL

  12647   1 00011C  CBF0 0000                            LAB,B4   0,IMO
          1 00011E  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000121       0001                            DC       s:12650,PREL

      224    12648        /* DIDN'T GET THE ASYNC INPUT BUFFER.                                         */
      225    12649
      226    12650    2         CALL KAO$ASNRQSNO_CTX (%KA#OTPASNRQS_NO_CTX,,KH$CHN);

  12650   1 000122  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000124  DC86                                 LDB,B5   ,B6
          1 000125  CBF0 000D                            LAB,B4   13,IMO
          1 000127  DFC7 0050                            STB,B5   BCTX$+6,AUTO
          1 000129  BB80 0000 0000                       LAB,B3   0
          1 00012C  BFC7 004E                            STB,B3   BCTX$+4,AUTO
          1 00012E  CFC7 004C                            STB,B4   BCTX$+2,AUTO
          1 000130  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000132  CBF0 0300                            LAB,B4   768,IMO
          1 000134  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSNO_CTX
          1 000137       0001                            DC       s:12651,PREL

      227    12651    2         CALL KAS$DSCNO_VDI (KH$CHN);

  12651   1 000138  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 00013A  DC86                                 LDB,B5   ,B6
          1 00013B  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 00013D  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 00013F  CBF0 0100                            LAB,B4   256,IMO
          1 000141  E380 0000 0000  xent                 LNJ,B6   KAS$DSCNO_VDI
          1 000144       0001                            DC       s:12652,PREL

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:30   
      228    12652    2         RETURN;

  12652   1 000145  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      229    12653    2      END; /* DO WHENALTRETURN */
      230    12654
      231    12655        /* Go back to the level we were at */
      232    12656
      233    12657    1      IF (LVL > KA_INT_LEV) THEN CALL KHI$ENABLE;

  12657   1 000148  E847 0042                            LDR,R6   LVL,AUTO
          1 00014A  E900 0000 0000  xsym                 CMR,R6   KA_INT_LEV
          1 00014D  0381 0007                            BLE      s:12660,PREL

  12657   1 00014F  CBF0 0000                            LAB,B4   0,IMO
          1 000151  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000154       0001                            DC       s:12660,PREL

      234    12658
      235    12659        /* WE GOT THE MEMORY FOR THE ASYNC LINE INPUT BUFFER*                         */
      236    12660    1      KA$CTX.VDH_DAT.DAT__.ADR$ = Y@BFR$;

  12660   1 000155  ECC7 0045                            LDB,B6   Y@BFR$,AUTO
          1 000157  DCC7 004A                            LDB,B5   BCTX$,AUTO
          1 000159  EFC5 0011                            STB,B6   17,B5

      237    12661
      238    12662        /* GET2NSYS has converted Y@BYTSIZ to a power-of-2 word count,
      239    12663           so we have to convert it back to bytes. */
      240    12664
      241    12665    1      Y@BYTSIZ = Y@BYTSIZ * 2;

  12665   1 00015B  E847 0044                            LDR,R6   Y@BYTSIZ,AUTO
          1 00015D  6001                                 SOL,R6   1
          1 00015E  EF47 0044                            STR,R6   Y@BYTSIZ,AUTO

      242    12666    1      KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ = Y@BYTSIZ;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:31   

  12666   1 000160  ECC7 004A                            LDB,B6   BCTX$,AUTO
          1 000162  EF46 0015                            STR,R6   21,B6

      243    12667    1      KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL + Y@BYTSIZ;

  12667   1 000164  F847 0044                            LDR,R7   Y@BYTSIZ,AUTO
          1 000166  6C00                                 LDV,R6   0
          1 000167  8400 0000 001C  xsym                 AID      KA_STT+28
          1 00016A  8D00 0000 001C  xsym                 SDI      KA_STT+28

      244    12668    1      KV@VDH_INT = KV_VDH_INT;

  12668   1 00016D  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_INT
          1 000170  2C00                                 LDV,R2   0
          1 000171  6C16                                 LDV,R6   22
          1 000172  BB87                                 LAB,B3   ,AUTO
          1 000173  3C0C                                 LDV,R3   12
          1 000174  0008                                 MMM

      245    12669    1      KV@VDH_INT.CHN$ = BCHN$;

  12669   1 000175  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000177  DC86                                 LDB,B5   ,B6
          1 000178  DFC7 0007                            STB,B5   KV@VDH_INT+1,AUTO

      246    12670    1      KV@VDH_INT.USRCTX$ = BCTX$;

  12670   1 00017A  CCC7 004A                            LDB,B4   BCTX$,AUTO
          1 00017C  CFC7 0009                            STB,B4   KV@VDH_INT+3,AUTO

      247    12671    1      KV@VDH_INT.USRPRM$ = ADDR(KA_USRPRM);

  12671   1 00017E  AB80 0000 0000  xsym                 LAB,B2   KA_USRPRM
          1 000181  AFC7 000D                            STB,B2   KV@VDH_INT+7,AUTO

      248    12672    1      KV@VDH_INT.TRCBFRBYTSIZ = KA_VDHTRCBFRBYTSIZ;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:32   

  12672   1 000183  E800 0000 0000  xsym                 LDR,R6   KA_VDHTRCBFRBYTSIZ
          1 000186  EF47 0010                            STR,R6   KV@VDH_INT+10,AUTO

      249    12673
      250    12674        /* GET THE CURRENT CONFIGURATION FROM THE CONTROLLER.                         */
      251    12675
      252    12676    1      KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_CRTCNF;

  12676   1 000188  5C3B                                 LDV,R5   59
          1 000189  DAC7 002B                            SRM,R5,'00FF'X    KH@IO_INPLCTBYT+1,AUTO
          1 00018B       00FF

      253    12677    1      CALL KHI$IO_INPLCTBYT(KH$CHN,KH@IO_INPLCTBYT) ;

  12677   1 00018C  9C86                                 LDB,B1   ,B6
          1 00018D  EBC7 002A                            LAB,B6   KH@IO_INPLCTBYT,AUTO
          1 00018F  EFC7 004E                            STB,B6   BCTX$+4,AUTO
          1 000191  9FC7 004C                            STB,B1   BCTX$+2,AUTO
          1 000193  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000195  CBF0 0200                            LAB,B4   512,IMO
          1 000197  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          1 00019A       0001                            DC       s:12678,PREL

      254    12678    1      Y@DUMMY = KH@IO_INPLCTBYT.LCTBYT.DAT;

  12678   1 00019B  E2C7 002B                            LLH,R6   KH@IO_INPLCTBYT+1,AUTO
          1 00019D  E7C7 0043                            STH,R6   Y@DUMMY,AUTO

      255    12679    1      KA_STT.LINSPDDST(Y@CRTCNF.LINSPD) = KA_STT.LINSPDDST(Y@CRTCNF.LINSPD) +1;

  12679   1 00019F  B847 0043                            LDR,R3   Y@DUMMY,AUTO
          1 0001A1  3048                                 SOR,R3   8
          1 0001A2  B570 000F                            AND,R3   15,IMO
          1 0001A4  BF47 004C                            STR,R3   BCTX$+2,AUTO
          1 0001A6  3001                                 SOL,R3   1
          1 0001A7  A847 004C                            LDR,R2   BCTX$+2,AUTO
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:33   
          1 0001A9  2001                                 SOL,R2   1
          1 0001AA  8AB0 0000 0025  xsym                 INC      KA_STT+37,R3
          1 0001AD  8EA0 0000 0024  xsym                 CAD      KA_STT+36,R2

      256    12680    1      KV@VDH_INT.RCVFLWCTRMAXCRD = KA_OTPBLKLMT(Y@CRTCNF.LINSPD);

  12680   1 0001B0  B847 0043                            LDR,R3   Y@DUMMY,AUTO
          1 0001B2  3048                                 SOR,R3   8
          1 0001B3  B570 000F                            AND,R3   15,IMO
          1 0001B5  D830 0000 0000  xsym                 LDR,R5   KA_OTPBLKLMT,R3
          1 0001B8  DF47 000F                            STR,R5   KV@VDH_INT+9,AUTO

      257    12681
      258    12682        /* CALL VDI TO GET THE KV$VDI BLOCK                                           */
      259    12683
      260    12684    1      CALL KVV$INT (KV@VDH_INT)

  12684   1 0001BA  EBC7 0006                            LAB,B6   KV@VDH_INT,AUTO
          1 0001BC  EFC7 004C                            STB,B6   BCTX$+2,AUTO
          1 0001BE  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 0001C0  CBF0 0100                            LAB,B4   256,IMO
          1 0001C2  E380 0000 0000  xent                 LNJ,B6   KVV$INT
          1 0001C5       0003                            DC       s:12686,PREL
          1 0001C6  0F81 0027                            B        s:12690,PREL

      261    12685    2      WHENALTRETURN DO;

      262    12686    2         CALL KAO$ASNRQSNO_CTX(%KA#OTPASNRQS_NO_CTX,,KH$CHN);

  12686   1 0001C8  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 0001CA  DC86                                 LDB,B5   ,B6
          1 0001CB  CBF0 000D                            LAB,B4   13,IMO
          1 0001CD  DFC7 0050                            STB,B5   BCTX$+6,AUTO
          1 0001CF  BB80 0000 0000                       LAB,B3   0
          1 0001D2  BFC7 004E                            STB,B3   BCTX$+4,AUTO
          1 0001D4  CFC7 004C                            STB,B4   BCTX$+2,AUTO
          1 0001D6  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:34   
          1 0001D8  CBF0 0300                            LAB,B4   768,IMO
          1 0001DA  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSNO_CTX
          1 0001DD       0001                            DC       s:12687,PREL

      263    12687    2         CALL KAS$DSCNO_VDI (KH$CHN);

  12687   1 0001DE  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 0001E0  DC86                                 LDB,B5   ,B6
          1 0001E1  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 0001E3  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 0001E5  CBF0 0100                            LAB,B4   256,IMO
          1 0001E7  E380 0000 0000  xent                 LNJ,B6   KAS$DSCNO_VDI
          1 0001EA       0001                            DC       s:12688,PREL

      264    12688    2         RETURN;

  12688   1 0001EB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      265    12689    2      END /* IF */;
      266    12690    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_DLTOTP) = '1'B;

  12690   1 0001EE  ECC7 000B                            LDB,B6   KV@VDH_INT+5,AUTO
          1 0001F0  8946 001E                            LBT,'0010'X       30,B6
          1 0001F2       0010

      267    12691    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_DSC) = '1'B;

  12691   1 0001F3  8946 001E                            LBT,'0008'X       30,B6
  12691   1 0001F5       0008

      268    12692    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_GETSTR) = '1'B;

  12692   1 0001F6  8946 001E                            LBT,'0002'X       30,B6
  12692   1 0001F8       0002

      269    12693    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_HLTOTP) = '1'B;

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:35   
  12693   1 0001F9  8946 001E                            LBT,'0001'X       30,B6
  12693   1 0001FB       0001

      270    12694    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_INHDLTOTP) = '1'B;

  12694   1 0001FC  8946 001F                            LBT,'0040'X       31,B6
  12694   1 0001FE       0040

      271    12695    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_OTP1_CHR) = '1'B;

  12695   1 0001FF  8946 001F                            LBT,'0020'X       31,B6
  12695   1 000201       0020

      272    12696    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_RLSSTR) = '1'B;

  12696   1 000202  8946 001F                            LBT,'1000'X       31,B6
  12696   1 000204       1000

      273    12697    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_RLSVDI) = '1'B;

  12697   1 000205  8946 001F                            LBT,'0100'X       31,B6
  12697   1 000207       0100

      274    12698    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_SCH) = '1'B;

  12698   1 000208  8946 001F                            LBT,'0800'X       31,B6
  12698   1 00020A       0800

      275    12699    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_VDHEXT) = '1'B;

  12699   1 00020B  8946 001F                            LBT,'0200'X       31,B6
  12699   1 00020D       0200

      276    12700    1      KV@VDH_INT.VDI$->KV$VDI.VDHEVTENB(%KV_VDH_EVT_ID_CMPOTP) = '1'B;

  12700   1 00020E  8946 001F                            LBT,'0008'X       31,B6
  12700   1 000210       0008
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:36   

      277    12701    1      KV@VDH_INT.VDI$->KV$VDI.VDHEVTENB(%KV_VDH_EVT_ID_RQSOTP) = '1'B;

  12701   1 000211  8946 001F                            LBT,'0004'X       31,B6
  12701   1 000213       0004

      278    12702    1      KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_CLKEXP) = '1'B;

  12702   1 000214  8946 001F                            LBT,'0080'X       31,B6
  12702   1 000216       0080

      279    12703
      280    12704        /* SAVE POINTER TO VDI BLOCK                                                  */
      281    12705
      282    12706    1      KA$CTX.VDI$ = KV@VDH_INT.VDI$;

  12706   1 000217  DCC7 004A                            LDB,B5   BCTX$,AUTO
          1 000219  EF85                                 STB,B6   ,B5

      283    12707
      284    12708    2      IF Y@CRTCNF.PRT_NON THEN DO;

  12708   1 00021A  89C7 0043                            CMZ      Y@DUMMY,AUTO
          1 00021C  0881 0007                            BAGE     s:12717,PREL

      285    12709
      286    12710        /* THE PARITY IS NOT KNOWN. DON'T DO PARITY CHECKING.                         */
      287    12711
      288    12712    2         KV@VDH_INT.VDI$->KV$VDI.PRTTYP = %KV_PRTTYP_NONE;

  12712   1 00021E  ECC7 000B                            LDB,B6   KV@VDH_INT+5,AUTO
          1 000220  87C6 0019                            CLH      25,B6

      289    12713    2      END; ELSE DO;

  12713   1 000222  0F81 000F                            B        s:12721,PREL

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:37   
      290    12714
      291    12715        /* THE PARITY IS KNOWN. DO PARITY CHECKING.                                   */
      292    12716
      293    12717    2         KV@VDH_INT.VDI$->KV$VDI.PRTTYP = 4 - Y@CRTCNF.PRT;

  12717   1 000224  E847 0043                            LDR,R6   Y@DUMMY,AUTO
          1 000226  604D                                 SOR,R6   13
          1 000227  E570 0003                            AND,R6   3,IMO
          1 000229  8256                                 NEG      R6
          1 00022A  6E04                                 ADV,R6   4
          1 00022B  ECC7 000B                            LDB,B6   KV@VDH_INT+5,AUTO
          1 00022D  E7C6 0019                            STH,R6   25,B6

      294    12718    2         KV@VDH_INT.VDI$->KV$VDI.PRTCHK = '1'B;

  12718   1 00022F  8946 001D                            LBT,'4000'X       29,B6
  12718   1 000231       4000

      295    12719    2      END /* IF */;

      296    12720        /* INPUT UNIT IS CHARACTER */
      297    12721    1      KV@VDH_INT.VDI$->KV$VDI.INPUNT = %KV_INPUNT_CHR;

  12721   1 000232  6C20                                 LDV,R6   32
          1 000233  EAC6 001D                            SRM,R6,'0060'X    29,B6
          1 000235       0060

      298    12722
      299    12723        /* CALL KVV$VDI TO DO ACTUAL CONNECT                                          */
      300    12724
      301    12725    1      KV@VDH_CNC = KV_VDH_CNC;

  12725   1 000236  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_CNC
          1 000239  2C00                                 LDV,R2   0
          1 00023A  6C32                                 LDV,R6   50
          1 00023B  BB87                                 LAB,B3   ,AUTO
          1 00023C  3C22                                 LDV,R3   34
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:38   
          1 00023D  0008                                 MMM

      302    12726    1      KV@VDH_CNC.PRF_.ADR$ = ADDR(KH_PROFILE_)->BVECTOR.ADR$;

  12726   1 00023E  EC80 0000 0001  xsym                 LDB,B6   KH_PROFILE_+1
          1 000241  EFC7 0012                            STB,B6   KV@VDH_CNC+1,AUTO

      303    12727    1      KV@VDH_CNC.PRF_.BYTSIZ = ADDR(KH_PROFILE_)->BVECTOR.BOUND+1;

  12727   1 000243  E800 0000 0000  xsym                 LDR,R6   KH_PROFILE_
          1 000246  6E01                                 ADV,R6   1
          1 000247  EF47 0015                            STR,R6   KV@VDH_CNC+4,AUTO

      304    12728    1      KV@VDH_CNC.LINSPD = Y@CRTCNF.LINSPD;

  12728   1 000249  D847 0043                            LDR,R5   Y@DUMMY,AUTO
          1 00024B  D570 0F00                            AND,R5   3840,IMO
          1 00024D  5048                                 SOR,R5   8
          1 00024E  DAC7 001B                            SRM,R5,'00FF'X    KV@VDH_CNC+10,AUTO
          1 000250       00FF

      305    12729    1      KV@VDH_CNC.LCLENDPNTID = KH$CHN.TERMID;

  12729   1 000251  DCC7 0004                            LDB,B5   @BCHN$,AUTO
          1 000253  CC85                                 LDB,B4   ,B5
          1 000254  AB84                                 LAB,B2   ,B4
          1 000255  2C24                                 LDV,R2   36
          1 000256  6C10                                 LDV,R6   16
          1 000257  BB87                                 LAB,B3   ,AUTO
          1 000258  3C38                                 LDV,R3   56
          1 000259  0008                                 MMM

      306    12730    1      CALL KVV$VDI (KV@VDH_CNC)

  12730   1 00025A  EBC7 0011                            LAB,B6   KV@VDH_CNC,AUTO
          1 00025C  EFC7 004C                            STB,B6   BCTX$+2,AUTO
          1 00025E  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:39   
          1 000260  CBF0 0100                            LAB,B4   256,IMO
          1 000262  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000265       0003                            DC       s:12732,PREL
          1 000266  0F81 0023                            B        s:12739,PREL

      307    12731    2      WHENALTRETURN DO;

      308    12732    2         CALL KAO$ASNRQS (%KA#OTPASNRQS_NO_CTX);

  12732   1 000268  BB80 0000 0001  02                   LAB,B3   +1
          1 00026B  CBF0 0100                            LAB,B4   256,IMO
          1 00026D  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQS
          1 000270       0001                            DC       s:12734,PREL

      309    12733        /* ASNRQSNO_CTX include BGNPHSDSC, so note that. */
      310    12734    2         KH$CHN.CLK = '1'B;

  12734   1 000271  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000273  DC86                                 LDB,B5   ,B6
          1 000274  8905                                 LBT,'0020'X       ,B5
          1 000275       0020

      311    12735    2         CALL KAS$DSC (KA$CTX);

  12735   1 000276  BBC7 004A                            LAB,B3   BCTX$,AUTO
          1 000278  CBF0 0100                            LAB,B4   256,IMO
          1 00027A  E380 0000 0000  xent                 LNJ,B6   KAS$DSC
          1 00027D       0001                            DC       s:12736,PREL

      312    12736    2         CALL KVV$VDI (KV_VDH_EVT_RLSVDI);

  12736   1 00027E  BB80 0000 0003  02                   LAB,B3   +3
          1 000281  CBF0 0100                            LAB,B4   256,IMO
          1 000283  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000286       0001                            DC       s:12737,PREL

      313    12737    2         RETURN;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:40   

  12737   1 000287  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      314    12738    2      END /* IF */;
      315    12739    1      %KV_MRD.INPUT = KH$CHN.INP;

  12739   1 00028A  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00028D  DCC6 0008                            LDB,B5   8,B6
          1 00028F  CCC7 0004                            LDB,B4   @BCHN$,AUTO
          1 000291  BC84                                 LDB,B3   ,B4
          1 000292  E843 0007                            LDR,R6   7,B3
          1 000294  604A                                 SOR,R6   10
          1 000295  EAC5 0016                            SRM,R6,'0010'X    22,B5
          1 000297       0010

      316    12740    1      %KV_MRD.OUTPUT = KH$CHN.OTP;

  12740   1 000298  DCC6 0008                            LDB,B5   8,B6
          1 00029A  BC84                                 LDB,B3   ,B4
          1 00029B  E843 0007                            LDR,R6   7,B3
          1 00029D  604A                                 SOR,R6   10
          1 00029E  EAC5 0016                            SRM,R6,'0008'X    22,B5
          1 0002A0       0008

      317    12741
      318    12742        /* GET THE CURRENT FONT CLASS FROM THE CONTROLLER.                            */
      319    12743
      320    12744    1      KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_FNTCLS;

  12744   1 0002A1  6C3E                                 LDV,R6   62
          1 0002A2  EAC7 002B                            SRM,R6,'00FF'X    KH@IO_INPLCTBYT+1,AUTO
          1 0002A4       00FF

      321    12745    1      CALL KHI$IO_INPLCTBYT(KH$CHN,KH@IO_INPLCTBYT);

  12745   1 0002A5  DC84                                 LDB,B5   ,B4
          1 0002A6  BBC7 002A                            LAB,B3   KH@IO_INPLCTBYT,AUTO
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:41   
          1 0002A8  BFC7 004E                            STB,B3   BCTX$+4,AUTO
          1 0002AA  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 0002AC  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 0002AE  CBF0 0200                            LAB,B4   512,IMO
          1 0002B0  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          1 0002B3       0001                            DC       s:12751,PREL

      322    12746
      323    12747        /* SET UP THE TRANSLATE TABLES. IF WE SOLICITED A                             */
      324    12748        /* LEFT PARENTHESIS, THE FONT CLASS MAY HAVE BEEN SET TO AN APL TRANSLATE TABL*/
      325    12749
      326    12750        /*N* FNTCLS is the lower 2 bits of the LCT byte */
      327    12751    1      Y@FNTCLS = MOD(KH@IO_INPLCTBYT.LCTBYT.DAT,4);

  12751   1 0002B4  E2C7 002B                            LLH,R6   KH@IO_INPLCTBYT+1,AUTO
          1 0002B6  E570 0003                            AND,R6   3,IMO
          1 0002B8  EF47 0047                            STR,R6   Y@FNTCLS,AUTO

      328    12752    2      IF Y@FNTCLS>0 THEN IF %KV_MVD.APLLCNRM THEN DO;

  12752   1 0002BA  6901 0019                            BEZ,R6   s:12771,PREL

  12752   1 0002BC  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0002BF  DCC6 0006                            LDB,B5   6,B6
          1 0002C1  82C5 0016                            LB,'0020'X        22,B5
          1 0002C3       0020
          1 0002C4  0581 0009                            BBF      s:12763,PREL

      329    12753
      330    12754        /* IF WE ARE GOING TO AN APL TRANSLATE TABLE, GO TO THE PARTIAL (PRINT 'LOWERC*/
      331    12755        /* CHARACTERS AS UPPERCASE) VERSION.                                          */
      332    12756
      333    12757    2         %KV_MVD.TRNTBL$ = KA_TRNTBL_PRT$(Y@FNTCLS);

  12757   1 0002C6  B856                                 LDR,R3   R6
          1 0002C7  CCB0 0000 0000  xsym                 LDB,B4   KA_TRNTBL_PRT$,R3
          1 0002CA  CFC5 000E                            STB,B4   14,B5
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:42   

      334    12758    2      END; ELSE DO;

  12758   1 0002CC  0F81 0007                            B        s:12771,PREL

      335    12759
      336    12760        /* IF WE ARE GOING TO AN APL TRANSLATE TABLE, GO TO THE FULL (UNDERSCORED     */
      337    12761        /* 'LOWERCASE' CHARACTERS) VERSION.                                           */
      338    12762
      339    12763    2         %KV_MVD.TRNTBL$ = KA_TRNTBL_FUL$(Y@FNTCLS);

  12763   1 0002CE  B856                                 LDR,R3   R6
          1 0002CF  CCB0 0000 0000  xsym                 LDB,B4   KA_TRNTBL_FUL$,R3
          1 0002D2  CFC5 000E                            STB,B4   14,B5

      340    12764    2      END /* IF */;

      341    12765
      342    12766        /* IOLD BOTH HALVES OF THE INPUT BUFFER. THE INPUT BUFFER                     */
      343    12767        /* IS A CIRCULAR BUFFER.                                                      */
      344    12768
      345    12769
      346    12770
      347    12771    1      KH@IOLD = KH_IOLD;

  12771   1 0002D4  AB80 0000 0000  00                   LAB,B2   FPT_WRSYSLOG_IO_ERR
          1 0002D7  2C3A                                 LDV,R2   58
          1 0002D8  6C0A                                 LDV,R6   10
          1 0002D9  BB87                                 LAB,B3   ,AUTO
          1 0002DA  3C64                                 LDV,R3   100
          1 0002DB  0008                                 MMM

      348    12772    1      KH@IOLD.BFR_.BYTSIZ = KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;

  12772   1 0002DC  ECC7 004A                            LDB,B6   BCTX$,AUTO
          1 0002DE  E846 0015                            LDR,R6   21,B6
          1 0002E0  6041                                 SOR,R6   1
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:43   
          1 0002E1  EF47 0036                            STR,R6   KH@IOLD+4,AUTO

      349    12773    1      KH@IOLD.BFR_.ADR$ = Y@BFR$;

  12773   1 0002E3  DCC7 0045                            LDB,B5   Y@BFR$,AUTO
          1 0002E5  DFC7 0033                            STB,B5   KH@IOLD+1,AUTO

      350    12774    1      CALL KHI$IOLD(KH$CHN,KH@IOLD) ALTRET(Y@IO_FAIL);

  12774   1 0002E7  CCC7 0004                            LDB,B4   @BCHN$,AUTO
          1 0002E9  AC84                                 LDB,B2   ,B4
          1 0002EA  9BC7 0032                            LAB,B1   KH@IOLD,AUTO
          1 0002EC  9FC7 004E                            STB,B1   BCTX$+4,AUTO
          1 0002EE  AFC7 004C                            STB,B2   BCTX$+2,AUTO
          1 0002F0  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 0002F2  CBF0 0200                            LAB,B4   512,IMO
          1 0002F4  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          1 0002F7       0073                            DC       s:12821,PREL

      351    12775
      352    12776        /* THE IOLD AND IO (OUTPUT CCB CONTROL) WERE SUCCESSFUL.                      */
      353    12777
      354    12778    1      KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT+1;

  12778   1 0002F8  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 0002FA  DC86                                 LDB,B5   ,B6
          1 0002FB  E845 0007                            LDR,R6   7,B5
          1 0002FD  EA70 0100                            ADD,R6   256,IMO
          1 0002FF  EAC5 0007                            SRM,R6,'0F00'X    7,B5
          1 000301       0F00

      355    12779
      356    12780        /* WE'LL DO THE IO (INPUT NEXT CCB STATUS), WHICH                             */
      357    12781        /* INCREMENTS THE STATUS CCB POINTER AND DECREMENTS                           */
      358    12782        /* THE CCB COUNTER IN THE HARDWARE, NOW.                                      */
      359    12783
      360    12784    1      KH@IO_INPNXTCCBSTT = KH_IO_INPNXTCCBSTT;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:44   

  12784   1 000302  8C80 0000 001B  00                   LDI      KH_IO_INPNXTCCBSTT
          1 000305  8D47 0030                            SDI      KH@IO_INPNXTCCBSTT,AUTO

      361    12785    1      CALL KHI$IO_INP (KH$CHN,KH@IO_INPNXTCCBSTT) ALTRET (Y@IO_FAIL);

  12785   1 000307  DC86                                 LDB,B5   ,B6
          1 000308  CBC7 0030                            LAB,B4   KH@IO_INPNXTCCBSTT,AUTO
          1 00030A  CFC7 004E                            STB,B4   BCTX$+4,AUTO
          1 00030C  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 00030E  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000310  CBF0 0200                            LAB,B4   512,IMO
          1 000312  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          1 000315       0055                            DC       s:12821,PREL

      362    12786
      363    12787        /* THE IO (INPUT NEXT CCB STATUS) WAS SUCCESSFUL,                             */
      364    12788        /* SO SET THE CCB-STATUS-IS-VALID FLAG.                                       */
      365    12789
      366    12790    1      KH$CHN.INPCCBSTTPTRVLD = '1'B;

  12790   1 000316  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000318  DC86                                 LDB,B5   ,B6
          1 000319  8945 0008                            LBT,'0080'X       8,B5
          1 00031B       0080

      367    12791        /*E* ERROR:         KAS-E$ASN_IO_ERR */
      368    12792        /*E* MESSAGE:       IO error (bad CCB status) */
      369    12793        /*E* DESCRIPTION:   The CCB status indicated an IO error occurred. */
      370    12794           %KAC$CLCERRCHK(CCBSTT=KH@IO_INPNXTCCBSTT.CCBSTT,
      371    12795           CCBSRVERR=YES,
      372    12796           DATCHKERR=YES,
      373    12797           INVMMRADR=YES,
      374    12798           BUSPRTERR=YES,
      375    12799           UN_CRCMMRERR=YES);

  12803   1 00031C  E847 0031                            LDR,R6   KH@IO_INPNXTCCBSTT+1,AUTO
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:45   
          1 00031E  E570 0847                            AND,R6   2119,IMO
          1 000320  6901 0011                            BEZ,R6   s:12805,PREL

  12803   1 000322  DC86                                 LDB,B5   ,B6
          1 000323  DFC7 004E                            STB,B5   BCTX$+4,AUTO
          1 000325  CB80 0000 0000  00                   LAB,B4   FPT_WRSYSLOG_IO_ERR
          1 000328  CFC7 004C                            STB,B4   BCTX$+2,AUTO
          1 00032A  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 00032C  CBF0 0200                            LAB,B4   512,IMO
          1 00032E  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          1 000331       0001                            DC       s:12805,PREL

      376    12805    1      KH@IOLD.BFR_.BYTX = KH@IOLD.BFR_.BYTSIZ;

  12805   1 000332  E847 0036                            LDR,R6   KH@IOLD+4,AUTO
          1 000334  EF47 0035                            STR,R6   KH@IOLD+3,AUTO

      377    12806    1      CALL KHI$IOLD(KH$CHN,KH@IOLD) ALTRET (Y@IO_FAIL);

  12806   1 000336  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000338  DC86                                 LDB,B5   ,B6
          1 000339  CBC7 0032                            LAB,B4   KH@IOLD,AUTO
          1 00033B  CFC7 004E                            STB,B4   BCTX$+4,AUTO
          1 00033D  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 00033F  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000341  CBF0 0200                            LAB,B4   512,IMO
          1 000343  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          1 000346       0024                            DC       s:12821,PREL

      378    12807
      379    12808        /* THE IOLD AND IO (OUTPUT CCB CONTROL) WERE SUCCESSFUL.                      */
      380    12809
      381    12810    1      KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT+1;

  12810   1 000347  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000349  DC86                                 LDB,B5   ,B6
          1 00034A  E845 0007                            LDR,R6   7,B5
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:46   
          1 00034C  EA70 0100                            ADD,R6   256,IMO
          1 00034E  EAC5 0007                            SRM,R6,'0F00'X    7,B5
          1 000350       0F00

      382    12811
      383    12812        /* DO AN IO (OUTPUT CHANNEL CONTROL, START IO) TO GET THE                     */
      384    12813        /* RECEIVE CCP GOING AGAIN.                                                   */
      385    12814
      386    12815    1      KH@IO_OTPCHNCTR = KH_IO_OTPCHNCTR;

  12815   1 000351  8C80 0000 0019  00                   LDI      KH_IO_OTPCHNCTR
          1 000354  8D47 002E                            SDI      KH@IO_OTPCHNCTR,AUTO

      387    12816    1      KH@IO_OTPCHNCTR.CHNCTR.STRIO = '1'B;

  12816   1 000356  8947 002F                            LBT,'4000'X       KH@IO_OTPCHNCTR+1,AUTO
  12816   1 000358       4000

      388    12817    1      CALL KHI$IO_OTP(KH$CHN,KH@IO_OTPCHNCTR)

  12817   1 000359  DC86                                 LDB,B5   ,B6
          1 00035A  CBC7 002E                            LAB,B4   KH@IO_OTPCHNCTR,AUTO
          1 00035C  CFC7 004E                            STB,B4   BCTX$+4,AUTO
          1 00035E  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 000360  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000362  CBF0 0200                            LAB,B4   512,IMO
          1 000364  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          1 000367       0003                            DC       s:12821,PREL

      389    12818    2      WHENRETURN DO;

      390    12819    2         GOTO Y@IO_OK;

  12819   1 000368  0F81 0001                            B        s:12821,PREL

      391    12820    2      END;
      392    12821    2   Y@IO_FAIL: DO; END;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:47   

  12821   1                              Y@IO_FAIL       null
      393    12822        /*N* **** > THROW IN SOME ERROR RECOVERY < ****                                 */
      394    12823    1   Y@IO_OK: RETURN;

  12823   1 00036A  C380 0000 0000  xent Y@IO_OK         LNJ,B4   X6A_ARET

      395    12824        %EJECT;
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:48   
      396    12825        /* LOGON-TIMEOUT CLOCK EXPIRY */
      397    12826
      398    12827    1   KAS$LGNTIMOUT: ENTRY(BCHN$);

  12827   1 00036D  D380 0000 0000  xent KAS$LGNTIMOUT   LNJ,B5   X6A_AUTO_1
          1 000370       0052 0001                       DC       82,1

      399    12828
      400    12829    1      BCTX$ = %KH_EXP.UID$->KH$CHN.CTX$;

  12829   1 000372  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000374  DC86                                 LDB,B5   ,B6
          1 000375  CCC5 000C                            LDB,B4   12,B5
          1 000377  CFC7 004A                            STB,B4   BCTX$,AUTO

      401    12830    2      IF BCTX$=ADDR(NIL) THEN DO;

  12830   1 000379  8DC7 004A                            CMN      BCTX$,AUTO
          1 00037B  0981 0024                            BNE      s:12837,PREL

      402    12831
      403    12832        /* No context yet.  Just disconnect the line. */
      404    12833
      405    12834    2         CALL KAO$ASNRQSNO_CTX (%KA#OTPASNRQS_BGNPHSDSC,,%KH_EXP.UID$->KH$CHN);

  12834   1 00037D  DC86                                 LDB,B5   ,B6
          1 00037E  BBF0 0007                            LAB,B3   7,IMO
          1 000380  DFC7 0050                            STB,B5   BCTX$+6,AUTO
          1 000382  AB80 0000 0000                       LAB,B2   0
          1 000385  AFC7 004E                            STB,B2   BCTX$+4,AUTO
          1 000387  BFC7 004C                            STB,B3   BCTX$+2,AUTO
          1 000389  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 00038B  CBF0 0300                            LAB,B4   768,IMO
          1 00038D  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSNO_CTX
          1 000390       0001                            DC       s:12835,PREL

      406    12835    2         CALL KAS$DSCNO_VDI (%KH_EXP.UID$->KH$CHN);
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:49   

  12835   1 000391  ECC7 0004                            LDB,B6   @BCHN$,AUTO
          1 000393  DC86                                 LDB,B5   ,B6
          1 000394  DFC7 004C                            STB,B5   BCTX$+2,AUTO
          1 000396  BBC7 004C                            LAB,B3   BCTX$+2,AUTO
          1 000398  CBF0 0100                            LAB,B4   256,IMO
          1 00039A  E380 0000 0000  xent                 LNJ,B6   KAS$DSCNO_VDI
          1 00039D       0001                            DC       s:12836,PREL

      407    12836    2      END;

  12836   1 00039E  0F81 0004                            B        s:12838,PREL

      408    12837    1      ELSE %KH_EXP.UID$->KH$CHN.CLK = '0'B;

  12837   1 0003A0  DC86                                 LDB,B5   ,B6
          1 0003A1  8805                                 LBF,'0020'X       ,B5
          1 0003A2       0020

      409    12838    1      RETURN;

  12838   1 0003A3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      410    12839    1   END KAS$RQSCNC;
      411    12840
      412    12841
      413    12842        %EOD;

PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:50   
--  Include file information  --

   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KA_PERR_C.:E05TOU  is referenced.
   KA_LCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KW_ALCT_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLBASM_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:51   
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAS$RQSCNC.
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:52   

 **** Variables and constants ****

  ****  Section 000 RoData KAS$RQSCNC

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_IO_ERR       22-0-0/w STRC(176)   r     1 KH_CLK_LGNTIMOUT
    1D-0-0/w STRC(80)    r     1 KH_IOLD                   15-0-0/w STRC(32)    r     1 KH_IO_INPLCTBYT
    1B-0-0/w STRC(32)    r     1 KH_IO_INPNXTCCBSTT        19-0-0/w STRC(32)    r     1 KH_IO_OTPCHNCTR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BCHN$                    *0-0-0/w PTR         r     1 BCHN$
    4A-0-0/w PTR         r     1 BCTX$                     37-0-0/w STRC(176)   r     1 KH@CLK
    32-0-0/w STRC(80)    r     1 KH@IOLD                   2A-0-0/w STRC(32)    r     1 KH@IO_INPLCTBYT
    30-0-0/w STRC(32)    r     1 KH@IO_INPNXTCCBSTT        2E-0-0/w STRC(32)    r     1 KH@IO_OTPCHNCTR
    11-0-0/w STRC(400)   r     1 KV@VDH_CNC                 6-0-0/w STRC(176)   r     1 KV@VDH_INT
    42-0-0/w UBIN(16)    r     1 LVL                       45-0-0/w PTR         r     1 Y@BFR$
    44-0-0/w UBIN(16)    r     1 Y@BYTSIZ                  43-0-0/b STRC(8)     r     1 Y@CRTCNF
    43-0-0/b UBIN(8)     r     1 Y@DUMMY                   48-0-0/w UBIN(32)    r     1 Y@ERROR
    47-0-0/w UBIN(16)    r     1 Y@FNTCLS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KA_CTX                     0-0-0/w UBIN(16)    r     1 KA_INT_LEV
     0-0-0/w UBIN(16)    r     1 KA_OTPBLKLMT(0:15)
     0-0-0/w STRC(2528)  r     1 KA_STT
     0-0-0/b PTR         r     1 KA_TRNTBL_FUL$(0:3)
     0-0-0/b PTR         r     1 KA_TRNTBL_PRT$(0:3)
     0-0-0/w STRC(912)   r     1 KA_USRPRM                  0-0-0/w UBIN(16)    r     1 KA_VDHTRCBFRBYTSIZ
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:53   
     0-0-0/w VECT        r     1 KH_PROFILE_                0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w STRC(400)   r     1 KV_VDH_CNC                 0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RLSVDI
     0-0-0/w STRC(176)   r     1 KV_VDH_INT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 BVECTOR                    0-0-0/w STRC(512)   r     1 KA$CTX
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(96)    r     1 KH$EXP
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KAS$RQSCNC requires 934 words for executable code.
   Procedure KAS$RQSCNC requires 82 words of local(AUTO) storage.
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:54   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:55   
          MINI XREF LISTING

BCHN$
     12567**DCL         8--PROC     8032--IMP-PTR 12573>>CALL    12577>>IF      12579>>ASSIGN  12580>>ASSIGN
     12585>>ASSIGN  12593>>CALL    12598>>CALL    12603>>CALL    12610>>ASSIGN  12611>>ASSIGN  12626>>ASSIGN
     12635>>ASSIGN  12636>>IF      12650>>CALL    12651>>CALL    12669>>ASSIGN  12677>>CALL    12686>>CALL
     12687>>CALL    12729>>ASSIGN  12734>>ASSIGN  12739>>ASSIGN  12740>>ASSIGN  12745>>CALL    12774>>CALL
     12778>>ASSIGN  12778>>ASSIGN  12785>>CALL    12790>>ASSIGN  12803>>CALL    12806>>CALL    12810>>ASSIGN
     12810>>ASSIGN  12817>>CALL    12827--ENTRY   12829--ASSIGN  12834--CALL    12835--CALL    12837--ASSIGN
BCTX$
     12568**DCL      8883--IMP-PTR 12620<>CALL    12626>>ASSIGN  12627>>ASSIGN  12660>>ASSIGN  12666>>ASSIGN
     12670>>ASSIGN  12706>>ASSIGN  12735>>CALL    12772>>ASSIGN  12829<<ASSIGN  12830>>IF
BVECTOR.ADR$
     12549**DCL     12726>>ASSIGN
BVECTOR.BOUND
     12548**DCL     12727>>ASSIGN
FPT_WRSYSLOG_IO_ERR
     10098**DCL     12803<>CALL
FPT_WRSYSLOG_IO_ERR.V
     10102**DCL     10100--DCLINIT
FPT_WRSYSLOG_IO_ERR.V.TERMID.TERM
     10167**DCL     10176--REDEF
KA$CTX
      8883**DCL     12620--CALL    12622--ASSIGN  12627<<ASSIGN  12735<>CALL
KA$CTX.HLTOTP
      8978**DCL      8980--REDEF
KA$CTX.HLTOTPNXTBFR
      8982**DCL      8983--REDEF
KA$CTX.VDH_DAT.DAT__.ADR$
      8966**DCL     12660<<ASSIGN
KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ
      8967**DCL     12666<<ASSIGN  12772>>ASSIGN
KA$CTX.VDI$
      8890**DCL     12706<<ASSIGN
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:56   
KAO$ASNRQS
     12531**DCL-ENT 12732--CALL
KAO$ASNRQSNO_CTX
     12532**DCL-ENT 12603--CALL    12650--CALL    12686--CALL    12834--CALL
KAS$DSC
     12535**DCL-ENT 12735--CALL
KAS$DSCNO_VDI
     12536**DCL-ENT 12593--CALL    12651--CALL    12687--CALL    12835--CALL
KAS$LGNTIMOUT
     12827**ENTRY   12441--DCLINIT
KA_CTX
      8759**DCL     12627>>ASSIGN
KA_CTX.HLTOTP
      8854**DCL      8856--REDEF
KA_CTX.HLTOTPNXTBFR
      8858**DCL      8859--REDEF
KA_INT_LEV
      7596**DCL     12613>>ASSIGN  12647>>IF      12657>>IF
KA_OTPBLKLMT
      8733**DCL     12680>>ASSIGN
KA_STT.KHSTT.CTXBYTUTL
      9368**DCL     12622<<ASSIGN  12622>>ASSIGN
KA_STT.KHSTT.INPBFRBYTUTL
      9367**DCL     12667<<ASSIGN  12667>>ASSIGN
KA_STT.LINSPDDST
      9370**DCL     12679<<ASSIGN  12679>>ASSIGN
KA_STT.REQSTATS.DSPMSK
      9295**DCL      9301--REDEF
KA_STT.REQSTATS.SLCMSK
      9336**DCL      9343--REDEF
KA_TRNTBL_FUL$
      9005**DCL     12763>>ASSIGN
KA_TRNTBL_PRT$
      9006**DCL     12757>>ASSIGN
KA_USRPRM
      7566**DCL     12671--ASSIGN
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:57   
KA_VDHTRCBFRBYTSIZ
      8736**DCL     12672>>ASSIGN
KH$CHN
      8032**DCL     12573<>CALL    12593<>CALL    12603<>CALL    12650<>CALL    12651<>CALL    12677<>CALL
     12686<>CALL    12687<>CALL    12745<>CALL    12774<>CALL    12785<>CALL    12803<>CALL    12806<>CALL
     12817<>CALL    12834<>CALL    12835<>CALL
KH$CHN.CLK
      8043**DCL     12585<<ASSIGN  12734<<ASSIGN  12837<<ASSIGN
KH$CHN.CTX$
      8102**DCL     12626<<ASSIGN  12829>>ASSIGN
KH$CHN.INP
      8070**DCL     12636>>IF      12739>>ASSIGN
KH$CHN.INPBFRBYTSIZ
      8100**DCL     12635>>ASSIGN
KH$CHN.INPCCBCNT
      8071**DCL     12778<<ASSIGN  12778>>ASSIGN  12810<<ASSIGN  12810>>ASSIGN
KH$CHN.INPCCBSTTPTRVLD
      8085**DCL     12790<<ASSIGN
KH$CHN.LGNTIMOUTPRD
      8099**DCL     12577>>IF      12580>>ASSIGN
KH$CHN.OTP
      8070**DCL     12740>>ASSIGN
KH$CHN.TERMID
      8126**DCL     12598<>CALL    12729>>ASSIGN
KH$CHN.TERMID.LEV
      8128**DCL     12611<<ASSIGN
KH$CHN.TERMID.TERM
      8128**DCL      8137--REDEF
KH$CHN.TERMID.TTYP
      8128**DCL     12610<<ASSIGN
KH$EXP.UID
     12479**DCL     12480--REDEF
KH$EXP.UID$
     12480**DCL     12829>>ASSIGN  12834>>CALL    12835>>CALL    12837>>ASSIGN
KH@CLK
     12174**DCL     12578<<ASSIGN  12581<>CALL    12583<>CALL
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:58   
KH@CLK.FNC
     12216**DCL     12582<<ASSIGN
KH@CLK.PRD
     12295**DCL     12580<<ASSIGN
KH@CLK.UID
     12190**DCL     12191--REDEF   12192--REDEF
KH@CLK.UID$
     12191**DCL     12579<<ASSIGN
KH@IOLD
     11705**DCL     12771<<ASSIGN  12774<>CALL    12806<>CALL
KH@IOLD.BFR_.ADR$
     11738**DCL     12773<<ASSIGN
KH@IOLD.BFR_.BYTSIZ
     11738**DCL     12772<<ASSIGN  12805>>ASSIGN
KH@IOLD.BFR_.BYTX
     11738**DCL     12805<<ASSIGN
KH@IO_INPLCTBYT
     11247**DCL     12571<<ASSIGN  12573<>CALL    12677<>CALL    12745<>CALL
KH@IO_INPLCTBYT.ASNSTT
     11256**DCL     11257--REDEF   11263--REDEF   11268--REDEF   11272--REDEF   11276--REDEF   11280--REDEF
     11287--REDEF   11293--REDEF   11299--REDEF   11304--REDEF   11311--REDEF   11314--REDEF   11318--REDEF
     11325--REDEF   11329--REDEF   11333--REDEF   11337--REDEF   11342--REDEF   11346--REDEF
KH@IO_INPLCTBYT.LCTBYT
     11263**DCL     12574>>IF      12589>>IF
KH@IO_INPLCTBYT.LCTBYT.ADR
     11263**DCL     12572<<ASSIGN  12676<<ASSIGN  12744<<ASSIGN
KH@IO_INPLCTBYT.LCTBYT.DAT
     11263**DCL     12678>>ASSIGN  12751>>ASSIGN
KH@IO_INPNXTCCBSTT
     11589**DCL     12784<<ASSIGN  12785<>CALL
KH@IO_INPNXTCCBSTT.ASNSTT
     11598**DCL     11599--REDEF   11605--REDEF   11610--REDEF   11614--REDEF   11618--REDEF   11622--REDEF
     11629--REDEF   11635--REDEF   11641--REDEF   11646--REDEF   11653--REDEF   11656--REDEF   11660--REDEF
     11667--REDEF   11671--REDEF   11675--REDEF   11679--REDEF   11684--REDEF   11688--REDEF
KH@IO_INPNXTCCBSTT.CCBSTT
     11660**DCL     12803>>IF
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:59   
KH@IO_OTPCHNCTR
     11475**DCL     12815<<ASSIGN  12817<>CALL
KH@IO_OTPCHNCTR.ASNSTT
     11484**DCL     11485--REDEF   11491--REDEF   11496--REDEF   11500--REDEF   11504--REDEF   11508--REDEF
     11515--REDEF   11521--REDEF   11527--REDEF   11532--REDEF   11539--REDEF   11542--REDEF   11546--REDEF
     11553--REDEF   11557--REDEF   11561--REDEF   11565--REDEF   11570--REDEF   11574--REDEF
KH@IO_OTPCHNCTR.CHNCTR.STRIO
     11508**DCL     12816<<ASSIGN
KH@IO_OTPLCTBYT.ASNSTT
     11370**DCL     11371--REDEF   11377--REDEF   11382--REDEF   11386--REDEF   11390--REDEF   11394--REDEF
     11401--REDEF   11407--REDEF   11413--REDEF   11418--REDEF   11425--REDEF   11428--REDEF   11432--REDEF
     11439--REDEF   11443--REDEF   11447--REDEF   11451--REDEF   11456--REDEF   11460--REDEF
KHA$DVCADM
     12526**DCL-ENT 12598--CALL
KHC$CLOCK
     12527**DCL-ENT 12581--CALL    12583--CALL
KHD$ERRLOG_SETTERMID_CHN
     12528**DCL-ENT 12803--CALL
KHI$DISABLE
     12542**DCL-ENT 12618--CALL
KHI$ENABLE
     12543**DCL-ENT 12647--CALL    12657--CALL
KHI$IOLD
     12541**DCL-ENT 12774--CALL    12806--CALL
KHI$IO_INP
     12537**DCL-ENT 12785--CALL
KHI$IO_INPLCTBYT
     12540**DCL-ENT 12573--CALL    12677--CALL    12745--CALL
KHI$IO_OTP
     12538**DCL-ENT 12817--CALL
KH_CHNHI
      8155**DCL      8156--REDEF
KH_CHNLOW
      8156**DCL      8157--REDEF
KH_CLK_LGNTIMOUT
     12324**DCL     12578>>ASSIGN
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:60   
KH_CLK_LGNTIMOUT.UID
     12340**DCL     12341--REDEF   12342--REDEF
KH_IOLD
     11198**DCL     12771>>ASSIGN
KH_IO_INPLCTBYT
     10740**DCL     12571>>ASSIGN
KH_IO_INPNXTCCBSTT
     11082**DCL     12784>>ASSIGN
KH_IO_OTPCHNCTR
     10968**DCL     12815>>ASSIGN
KH_PROFILE_
      8157**DCL     12726--ASSIGN  12727--ASSIGN
KV$MRD.INPUT
      7289**DCL     12739<<ASSIGN
KV$MRD.OUTPUT
      7289**DCL     12740<<ASSIGN
KV$MVD.APLLCNRM
      7338**DCL     12752>>IF
KV$MVD.TRNTBL$
      7332**DCL     12757<<ASSIGN  12763<<ASSIGN
KV$PTR.INPCNDPND
      7379**DCL      7388--REDEF    7392--REDEF
KV$PTR.LINLST$
      7375**DCL      7376--REDEF
KV$PTR.MRD$
      7374**DCL     12739>>ASSIGN  12740>>ASSIGN
KV$PTR.MVD$
      7374**DCL     12752>>IF      12757>>ASSIGN  12763>>ASSIGN
KV$PTR$
      7367**DCL      7373--IMP-PTR 12739>>ASSIGN  12740>>ASSIGN  12752>>IF      12757>>ASSIGN  12763>>ASSIGN
KV$SSN.REDRSPCNT
      7424**DCL      7425--REDEF
KV$TRNTBL.OTPESCCHR
      7786**DCL      7786--REDEF
KV$VDI.INPUNT
      7536**DCL     12721<<ASSIGN
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:61   
KV$VDI.PRTCHK
      7534**DCL     12718<<ASSIGN
KV$VDI.PRTTYP
      7529**DCL     12712<<ASSIGN  12717<<ASSIGN
KV$VDI.USREVTENB
      7538**DCL     12690<<ASSIGN  12691<<ASSIGN  12692<<ASSIGN  12693<<ASSIGN  12694<<ASSIGN  12695<<ASSIGN
     12696<<ASSIGN  12697<<ASSIGN  12698<<ASSIGN  12699<<ASSIGN  12702<<ASSIGN
KV$VDI.VDHEVTENB
      7543**DCL     12700<<ASSIGN  12701<<ASSIGN
KV@VDH_CNC
     10249**DCL     12725<<ASSIGN  12730<>CALL
KV@VDH_CNC.LCLENDPNTID
     10299**DCL     12729<<ASSIGN
KV@VDH_CNC.LCLENDPNTID.TERM
     10301**DCL     10310--REDEF
KV@VDH_CNC.LINSPD
     10282**DCL     12728<<ASSIGN
KV@VDH_CNC.PRF_.ADR$
     10278**DCL     12726<<ASSIGN
KV@VDH_CNC.PRF_.BYTSIZ
     10278**DCL     12727<<ASSIGN
KV@VDH_INT
     10212**DCL     12668<<ASSIGN  12684<>CALL
KV@VDH_INT.CHN$
     10218**DCL     12669<<ASSIGN
KV@VDH_INT.RCVFLWCTRMAXCRD
     10219**DCL     12680<<ASSIGN
KV@VDH_INT.TRCBFRBYTSIZ
     10220**DCL     12672<<ASSIGN
KV@VDH_INT.USRCTX$
     10218**DCL     12670<<ASSIGN
KV@VDH_INT.USRPRM$
     10219**DCL     12671<<ASSIGN
KV@VDH_INT.VDI$
     10219**DCL     12690>>ASSIGN  12691>>ASSIGN  12692>>ASSIGN  12693>>ASSIGN  12694>>ASSIGN  12695>>ASSIGN
     12696>>ASSIGN  12697>>ASSIGN  12698>>ASSIGN  12699>>ASSIGN  12700>>ASSIGN  12701>>ASSIGN  12702>>ASSIGN
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:62   
     12706>>ASSIGN  12712>>ASSIGN  12717>>ASSIGN  12718>>ASSIGN  12721>>ASSIGN
KVB$GET2NSYS
     12530**DCL-ENT 12645--CALL
KVB$GETSYS
     12529**DCL-ENT 12620--CALL
KVV$INT
     12533**DCL-ENT 12684--CALL
KVV$VDI
     12534**DCL-ENT 12730--CALL    12736--CALL
KV_VDH_CNC
     10378**DCL     12725>>ASSIGN
KV_VDH_CNC.LCLENDPNTID.TERM
     10430**DCL     10439--REDEF
KV_VDH_EVT_RLSVDI
     10470**DCL     12736<>CALL
KV_VDH_INT
     10341**DCL     12668>>ASSIGN
LVL
     12555**DCL     12613<<ASSIGN  12618<>CALL    12647>>IF      12657>>IF
NO_GETSYS
     12640**LABEL   12620--CALLALT
Y@BFR$
     12563**DCL     12645<>CALL    12660>>ASSIGN  12773>>ASSIGN
Y@BYTSIZ
     12562**DCL     12635<<ASSIGN  12636>>IF      12640<<ASSIGN  12644<<ASSIGN  12644>>ASSIGN  12645<>CALL
     12665<<ASSIGN  12665>>ASSIGN  12666>>ASSIGN  12667>>ASSIGN
Y@CRTCNF.LINSPD
     12561**DCL     12679>>ASSIGN  12679>>ASSIGN  12680>>ASSIGN  12728>>ASSIGN
Y@CRTCNF.PRT
     12559**DCL     12717>>ASSIGN
Y@CRTCNF.PRT_NON
     12558**DCL     12708>>IF
Y@DUMMY
     12556**DCL     12557--REDEF   12678<<ASSIGN
Y@ERROR
     12565**DCL     12598<>CALL
PL6.E3A0      #001=KAS$RQSCNC File=KAS$CNC.:E05TSI                               WED 07/30/97 00:01 Page:63   
Y@FNTCLS
     12564**DCL     12751<<ASSIGN  12752>>IF      12757>>ASSIGN  12763>>ASSIGN
Y@IO_FAIL
     12821**LABEL   12774--CALLALT 12785--CALLALT 12806--CALLALT
Y@IO_OK
     12823**LABEL   12819--GOTO

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:64   
      414        1        /*T***********************************************************/
      415        2        /*T*                                                         */
      416        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      417        4        /*T*                                                         */
      418        5        /*T***********************************************************/
      419        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
      420        7
      421        8
      422        9        KAS$DSC: PROC (PARM);
      423       10
      424       11
      425       12        %INCLUDE KV$BPC;
      426       41        /* VDH constants and macros */
      427       42
      428       43 S      %INCLUDE KV_GLBCNS_E;
      429       44 S      %INCLUDE KV$GLB;
      430       45 S      %INCLUDE KV$GLBCTX;
      431       46    1   DCL KA_INT_LEV UBIN SYMREF;
      432       47        %KV$VDI (STCLASS="BASED(BCTX$)");
      433      118        %EQU KV_VDI=CHARTEXT('KA$CTX.VDI$->KV$VDI');
      434      119
      435      120        /* Statistics */
      436      121
      437      122        %INCLUDE KH$STT;                        /* For KA_STT                         */
      438      152
      439      153        /* channel table items */
      440      154
      441      155        %INCLUDE LCP_6;
      442      346        %INCLUDE KH$CHN;
      443      468        %INCLUDE KH_CHN;
      444      508        %INCLUDE KHA_FNC_E;
      445      608        %KH$CHN (STCLASS="BASED(BCHN$)");
      446      732        %EQU KH_CHN=CHARTEXT('KH$CHN');
      447      733        %KH_CHNDAT;
      448      751
      449      752        /* async macros and equs */
      450      753
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:65   
      451      754 S      %INCLUDE KV$VDH;
      452      755        %INCLUDE KA_GLBASM_E;
      453      837        %INCLUDE KA_GLB_E;
      454      915        %KA_HLTOTP_E;
      455      924        %INCLUDE KA$GLB;
      456     1065        %INCLUDE KA_GLB;
      457     1142        %INCLUDE KL_MACRO_C;
      458     4494        %INCLUDE KL_SUPER_C;
      459     7396        %INCLUDE KL_AFCN_C;
      460     7497        %INCLUDE K_ID_E;
      461     7547        %K#ENTID_E;
      462     7566        %K#LYRID_E;
      463     7573        %KA$CTX(STCLASS = "BASED(BCTX$)");
      464     7697        %KA_STT;
      465     8060
      466     8061        /* LCT definitions */
      467     8062
      468     8063        %INCLUDE KW_ALCT_E;
      469     8253        %INCLUDE KW_LCT_E;
      470     8608        %INCLUDE KA_LCT_E;
      471     8732
      472     8733        /* IO macros */
      473     8734
      474     8735        %INCLUDE KH$IO;
      475     8982        %INCLUDE GH_IOFNC_E;
      476     9051        %KH$IO(FPTN=KH_IO_OTPCHNCTR,FNC=%GH#IO_OTPCHNCTR,STCLASS=CONSTANT);
      477     9165        %KH$IO(FPTN=KH@IO_OTPCHNCTR,FNC=GH#IO_OTPCHNCTR,STCLASS=AUTO);
      478     9279
      479     9280        /* Clock macros. */
      480     9281
      481     9282        %INCLUDE KH$CLK;
      482     9652        %INCLUDE KH_CLKFNC_E;
      483     9697        %KH$CLK (FPTN=KH@CLK, STCLASS=AUTO);
      484     9846        %KH$CLK (FPTN=KH_CLK_DRPDTR, STCLASS=CONSTANT, SBR=KAS$ENDPHSDSC,
      485     9847         PRD=200, FNC=%KH#CLK_RESET, NO_CTB=YES);
      486     9996        %KH$EXP;
      487    10059        %EQU KH_EXP=CHARTEXT('ADDR(PARM)->KH$EXP');
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:66   
      488    10060
      489    10061        /* entry points */
      490    10062
      491    10063    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      492    10064    1   DCL KHI$DISABLE ENTRY(1);
      493    10065    1   DCL KHI$ENABLE ENTRY;
      494    10066    1   DCL KHI$IO_OTP ENTRY(2) ALTRET;
      495    10067    1   DCL KHI$IO_OTPLCTBYT ENTRY(2) ALTRET;
      496    10068    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      497    10069    1   DCL KAO$ASNRQSNO_CTX ENTRY(3) ALTRET;
      498    10070    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
      499    10071    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      500    10072
      501    10073        /* local variables */
      502    10074
      503    10075    1   DCL LVL UBIN;
      504    10076    1   DCL BCTX$ PTR;
      505    10077    1   DCL BCHN$ PTR;
      506    10078    1   DCL PTR$ PTR;
      507    10079    1   DCL KA_POLHED$ PTR SYMREF;
      508    10080    1   DCL Y$U UBIN BASED ALIGNED;
      509    10081    1   DCL Y$PTR$ PTR BASED ALIGNED;
      510    10082    1   DCL PARM UBIN;
      511    10083    1   DCL Y@ERROR UBIN(32);
      512    10084
      513    10085    1      BCTX$ = ADDR(PARM);
      514    10086    1      BCHN$ = KA$CTX.VDI$->KV$VDI.CHN$;
      515    10087    1      KA_STT.LINSPDDST(%KV_VDI.LINSPD) = KA_STT.LINSPDDST(%KV_VDI.LINSPD) -1;
      516    10088    1      GOTO SUB_COMMON;
      517    10089
      518    10090    1   KAS$DSCNO_VDI: ENTRY (PARM);
      519    10091
      520    10092    1      BCHN$ = ADDR(PARM);
      521    10093    1      BCTX$ = %KH_CHN.CTX$;
      522    10094    1      KH$CHN.CLK = '1'B;         /* However we got here, BGNPHSDSC has occurred. */
      523    10095    1      GOTO SUB_COMMON;
      524    10096
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:67   
      525    10097    1   KAS$ENDPHSDSC: ENTRY (PARM);
      526    10098
      527    10099        /* Clock entry.  The 2-second DROPDTR clock has expired. */
      528    10100    1      BCHN$ = %KH_EXP.UID$;
      529    10101    1      BCTX$ = ADDR(NIL);
      530    10102        /* Mark the clock off. That'l get the ENDPHSDSC ASNRQS sent. */
      531    10103
      532    10104    1      KH$CHN.CLK = '0'B;
      533    10105
      534    10106    1   SUB_COMMON:;
      535    10107        /* IF THE CURRENT LEVEL IS BELOW THE ASYNC INHIBIT LEVEL.                     */
      536    10108        /* GO TO THE ASYNC INHIBIT LEVEL.                                             */
      537    10109    1      LVL = KA_INT_LEV;
      538    10110    1      CALL KHI$DISABLE(LVL);
      539    10111
      540    10112        /* THIS ROUTINE FOR THE CALL TO REPORT GN#ADM_OPR_DSC.                        */
      541    10113
      542    10114    2      IF BCTX$~=ADDR(NIL) THEN DO;
      543    10115
      544    10116        /* RELEASE THE CONTEXT BLOCK AND ITS APPENDAGES IF THERE IS ONE. */
      545    10117
      546    10118    3         IF KA$CTX.LCTSTT.PLD THEN DO;
      547    10119
      548    10120        /* If polled, remove us from the chain of pollees.  No need to cancel the
      549    10121           clock or reset polling in the LCTs, they get fixed elsewhere automatically */
      550    10122
      551    10123    3            PTR$ = KA_POLHED$;
      552    10124    3            IF PTR$=BCTX$ THEN KA_POLHED$ = KA$CTX.POLLNK$;
      553    10125    4            ELSE POLLOOP: DO WHILE '1'B;
      554    10126    5               IF PTR$->KA$CTX.POLLNK$=BCTX$ THEN DO;
      555    10127    5                  PTR$->KA$CTX.POLLNK$ = KA$CTX.POLLNK$;
      556    10128    5                  EXIT POLLOOP;
      557    10129    5               END;
      558    10130    4               PTR$ = PTR$->KA$CTX.POLLNK$;
      559    10131    4            END;
      560    10132    3         END;
      561    10133    3         IF (KA$CTX.VDH_DAT.DAT__.ADR$ ~= ADDR(NIL)) THEN DO;
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:68   
      562    10134
      563    10135        /* THERE IS AN INPUT BUFFER TO RELEASE. ALSO KILL THE IO ON IT.               */
      564    10136
      565    10137    3            KH@IO_OTPCHNCTR = KH_IO_OTPCHNCTR;
      566    10138    3            KH@IO_OTPCHNCTR.CHNCTR.CCBLSTRST = '1'B;
      567    10139    3            CALL KHI$IO_OTP(%KH_CHN,KH@IO_OTPCHNCTR);
      568    10140    3            %KH_CHN.INPCCBCNT = 0;
      569    10141    3            %KH_CHN.INPCCBSTTPTRVLD = '0'B;
      570    10142    4            IF KA$CTX.BFRGRWPND THEN DO;
      571    10143
      572    10144        /* There's actually two buffers right now.  Release the other one, too. */
      573    10145
      574    10146    4               IF KA$CTX.VDH_DAT.DAT__.BYTX<KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ/2
      575    10147    4               THEN KA$CTX.VDH_DAT.DAT__.BYTX = KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ/4;
      576    10148    4               ELSE KA$CTX.VDH_DAT.DAT__.BYTX = 0;
      577    10149    4               PTR$ = PINCRW(KA$CTX.VDH_DAT.DAT__.ADR$,
      578    10150    4                 KA$CTX.VDH_DAT.DAT__.BYTX)->Y$PTR$;
      579    10151    4               PTR$->Y$U = KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ;
      580    10152    4               CALL KVB$RLS2NSYS (PTR$->Y$U);
      581    10153    4               KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL -
      582    10154    4                 KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ*2;
      583    10155    4            END;
      584    10156    3            KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL - KA$CTX.VDH_DAT.
             10156                     DAT__.BFRBYTSIZ;
      585    10157    3            KA$CTX.VDH_DAT.DAT__.ADR$->Y$U = KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;
      586    10158    3            CALL KVB$RLS2NSYS (KA$CTX.VDH_DAT.DAT__.ADR$->Y$U);
      587    10159    3         END /* IF */;
      588    10160
      589    10161        /* UPDATE A FEW STATS                                                         */
      590    10162
      591    10163    2         KA_STT.KHSTT.CTXBYTUTL = KA_STT.KHSTT.CTXBYTUTL - SIZEW(KA$CTX)*2;
      592    10164
      593    10165        /* RELEASE THE ASYNC CONTEXT BLOCK (BCTX$).                                   */
      594    10166
      595    10167    2         CALL KVB$RLSSYS(SIZEW(KA$CTX), BCTX$);
      596    10168    2         %KH_CHN.CTX$ = ADDR(NIL);
      597    10169    2         CALL KHA$DVCADM(%KHA_FNC_DISCONNECT_EVT,Y@ERROR,KH$CHN.TERMID);
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:69   
      598    10170    2         %KH_CHN.TERMID.TTYP = 0;
      599    10171    2      END /* IF BCTX$~=ADDR(NIL) */;
      600    10172
      601    10173    2      IF NOT %KH_CHN.CLK THEN DO;
      602    10174
      603    10175        /* We are not currently dropping DTR, so the clock won't reinitialize for us. */
      604    10176        /* Or, we've just finished dropping DTR. In any case, ENDPHSDSC is needed. */
      605    10177
      606    10178    2   ENDPHSDSC:;
      607    10179    2         CALL KAO$ASNRQSNO_CTX (%KA#OTPASNRQS_ENDPHSDSC,,KH$CHN)
      608    10180    2           ALTRET (SETDSCCLK);        /* Try again in a while if it didn't work  */
      609    10181    2      END /* IF */;
      610    10182    2      ELSE DO;         /* We've done a BGNPHSDSC, start the timer to finish it.  */
      611    10183    2   SETDSCCLK: ;
      612    10184    2         KH@CLK = KH_CLK_DRPDTR;
      613    10185    2         KH@CLK.UID$ = BCHN$;
      614    10186    3         CALL KHC$CLOCK (KH@CLK) WHENALTRETURN DO;
      615    10187        /* Tried a RESET first, in case there was a logon-timeout clock running. */
      616    10188        /* It didn't work, so try a SETCLK. */
      617    10189    3            KH@CLK.FNC = %KH#CLK_SETCLK;
      618    10190    3            CALL KHC$CLOCK (KH@CLK) ALTRET (ENDPHSDSC);
      619    10191    3         END;
      620    10192    2      END;
      621    10193    2      IF (LVL > KA_INT_LEV) THEN DO;
      622    10194
      623    10195        /* WE WERE CALLED FROM BELOW THE ASYNC INHIBIT LEVEL, SO WE                   */
      624    10196        /* SHOULD DO AN ENABLE TO GO BACK TO THE LEVEL WE WERE                        */
      625    10197        /* CALLED AT.                                                                 */
      626    10198
      627    10199    2         CALL KHI$ENABLE;
      628    10200    2      END /* IF */;
      629    10201    1   END KAS$DSC;
      630    10202
      631    10203
      632    10204        %IF ('0'B);
      643    10215        %ENDIF;

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:70   
--  Include file information  --

   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KA_LCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KW_ALCT_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLBASM_E.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:71   
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAS$DSC.

   Procedure KAS$DSC requires 410 words for executable code.
   Procedure KAS$DSC requires 34 words of local(AUTO) storage.

    No errors detected in file KAS$CNC.:E05TSI    .

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:72   

 Object Unit name= KAS$DSC                                    File name= KAS$CNC.:E05TOU
 UTS= JUL 30 '97 00:03:58.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     13      D  KAS$DSC
    1   Proc  even  none   410    19A  KAS$DSC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KAS$DSC
     1     1A                  yes      Std        1  KAS$DSCNO_VDI
     1     2B                  yes      Std        1  KAS$ENDPHSDSC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHI$DISABLE
 yes     yes           Std       2 KVB$RLS2NSYS
 yes     yes           Std       6 KHA$DVCADM
 yes     yes           Std       3 KAO$ASNRQSNO_CTX
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       2 KHI$IO_OTP
 yes     yes           Std       2 KVB$RLSSYS
         yes           Std       1 KAS$ENDPHSDSC
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:73   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KA_INT_LEV                       r    KH_CHNHI                         r    KH_CHNLOW
     KA_STT                                KA_POLHED$                       r    G$ROS$
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:74   


      414        1        /*T***********************************************************/
      415        2        /*T*                                                         */
      416        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      417        4        /*T*                                                         */
      418        5        /*T***********************************************************/
      419        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
      420        7
      421        8
      422        9        KAS$DSC: PROC (PARM);

      9   1 000000  D380 0000 0000  xent KAS$DSC         LNJ,B5   X6A_AUTO_1
          1 000003       0022 0001                       DC       34,1

      423       10
      424       11
      425       12        %INCLUDE KV$BPC;
      426       41        /* VDH constants and macros */
      427       42
      428       43 S      %INCLUDE KV_GLBCNS_E;
      429       44 S      %INCLUDE KV$GLB;
      430       45 S      %INCLUDE KV$GLBCTX;
      431       46    1   DCL KA_INT_LEV UBIN SYMREF;
      432       47        %KV$VDI (STCLASS="BASED(BCTX$)");
      433      118        %EQU KV_VDI=CHARTEXT('KA$CTX.VDI$->KV$VDI');
      434      119
      435      120        /* Statistics */
      436      121
      437      122        %INCLUDE KH$STT;                        /* For KA_STT                         */
      438      152
      439      153        /* channel table items */
      440      154
      441      155        %INCLUDE LCP_6;
      442      346        %INCLUDE KH$CHN;
      443      468        %INCLUDE KH_CHN;
      444      508        %INCLUDE KHA_FNC_E;
      445      608        %KH$CHN (STCLASS="BASED(BCHN$)");
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:75   
      446      732        %EQU KH_CHN=CHARTEXT('KH$CHN');
      447      733        %KH_CHNDAT;
      448      751
      449      752        /* async macros and equs */
      450      753
      451      754 S      %INCLUDE KV$VDH;
      452      755        %INCLUDE KA_GLBASM_E;
      453      837        %INCLUDE KA_GLB_E;
      454      915        %KA_HLTOTP_E;
      455      924        %INCLUDE KA$GLB;
      456     1065        %INCLUDE KA_GLB;
      457     1142        %INCLUDE KL_MACRO_C;
      458     4494        %INCLUDE KL_SUPER_C;
      459     7396        %INCLUDE KL_AFCN_C;
      460     7497        %INCLUDE K_ID_E;
      461     7547        %K#ENTID_E;
      462     7566        %K#LYRID_E;
      463     7573        %KA$CTX(STCLASS = "BASED(BCTX$)");
      464     7697        %KA_STT;
      465     8060
      466     8061        /* LCT definitions */
      467     8062
      468     8063        %INCLUDE KW_ALCT_E;
      469     8253        %INCLUDE KW_LCT_E;
      470     8608        %INCLUDE KA_LCT_E;
      471     8732
      472     8733        /* IO macros */
      473     8734
      474     8735        %INCLUDE KH$IO;
      475     8982        %INCLUDE GH_IOFNC_E;
      476     9051        %KH$IO(FPTN=KH_IO_OTPCHNCTR,FNC=%GH#IO_OTPCHNCTR,STCLASS=CONSTANT);
      477     9165        %KH$IO(FPTN=KH@IO_OTPCHNCTR,FNC=GH#IO_OTPCHNCTR,STCLASS=AUTO);
      478     9279
      479     9280        /* Clock macros. */
      480     9281
      481     9282        %INCLUDE KH$CLK;
      482     9652        %INCLUDE KH_CLKFNC_E;
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:76   
      483     9697        %KH$CLK (FPTN=KH@CLK, STCLASS=AUTO);
      484     9846        %KH$CLK (FPTN=KH_CLK_DRPDTR, STCLASS=CONSTANT, SBR=KAS$ENDPHSDSC,
      485     9847         PRD=200, FNC=%KH#CLK_RESET, NO_CTB=YES);
      486     9996        %KH$EXP;
      487    10059        %EQU KH_EXP=CHARTEXT('ADDR(PARM)->KH$EXP');
      488    10060
      489    10061        /* entry points */
      490    10062
      491    10063    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      492    10064    1   DCL KHI$DISABLE ENTRY(1);
      493    10065    1   DCL KHI$ENABLE ENTRY;
      494    10066    1   DCL KHI$IO_OTP ENTRY(2) ALTRET;
      495    10067    1   DCL KHI$IO_OTPLCTBYT ENTRY(2) ALTRET;
      496    10068    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      497    10069    1   DCL KAO$ASNRQSNO_CTX ENTRY(3) ALTRET;
      498    10070    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
      499    10071    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      500    10072
      501    10073        /* local variables */
      502    10074
      503    10075    1   DCL LVL UBIN;
      504    10076    1   DCL BCTX$ PTR;
      505    10077    1   DCL BCHN$ PTR;
      506    10078    1   DCL PTR$ PTR;
      507    10079    1   DCL KA_POLHED$ PTR SYMREF;
      508    10080    1   DCL Y$U UBIN BASED ALIGNED;
      509    10081    1   DCL Y$PTR$ PTR BASED ALIGNED;
      510    10082    1   DCL PARM UBIN;
      511    10083    1   DCL Y@ERROR UBIN(32);
      512    10084
      513    10085    1      BCTX$ = ADDR(PARM);

  10085   1 000005  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 000007  EFC7 0014                            STB,B6   BCTX$,AUTO

      514    10086    1      BCHN$ = KA$CTX.VDI$->KV$VDI.CHN$;

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:77   
  10086   1 000009  DC86                                 LDB,B5   ,B6
          1 00000A  CC85                                 LDB,B4   ,B5
          1 00000B  CFC7 0016                            STB,B4   BCHN$,AUTO

      515    10087    1      KA_STT.LINSPDDST(%KV_VDI.LINSPD) = KA_STT.LINSPDDST(%KV_VDI.LINSPD) -1;

  10087   1 00000D  B2C5 001E                            LLH,R3   30,B5
          1 00000F  8CB0 0000 0024  xsym                 LDI      KA_STT+36,R3
          1 000012  8470 FFFF FFFF                       AID      -1,IMO
          1 000015  8D30 0000 0024  xsym                 SDI      KA_STT+36,R3

      516    10088    1      GOTO SUB_COMMON;

  10088   1 000018  0F81 0023                            B        s:10104,PREL

      517    10089
      518    10090    1   KAS$DSCNO_VDI: ENTRY (PARM);

  10090   1 00001A  D380 0000 0000  xent KAS$DSCNO_VDI   LNJ,B5   X6A_AUTO_1
          1 00001D       0022 0001                       DC       34,1

      519    10091
      520    10092    1      BCHN$ = ADDR(PARM);

  10092   1 00001F  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 000021  EFC7 0016                            STB,B6   BCHN$,AUTO

      521    10093    1      BCTX$ = %KH_CHN.CTX$;

  10093   1 000023  DCC6 000C                            LDB,B5   12,B6
          1 000025  DFC7 0014                            STB,B5   BCTX$,AUTO

      522    10094    1      KH$CHN.CLK = '1'B;         /* However we got here, BGNPHSDSC has occurred. */

  10094   1 000027  8906                                 LBT,'0020'X       ,B6
  10094   1 000028       0020

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:78   
      523    10095    1      GOTO SUB_COMMON;

  10095   1 000029  0F81 0012                            B        s:10104,PREL

      524    10096
      525    10097    1   KAS$ENDPHSDSC: ENTRY (PARM);

  10097   1 00002B  D380 0000 0000  xent KAS$ENDPHSDSC   LNJ,B5   X6A_AUTO_1
          1 00002E       0022 0001                       DC       34,1

      526    10098
      527    10099        /* Clock entry.  The 2-second DROPDTR clock has expired. */
      528    10100    1      BCHN$ = %KH_EXP.UID$;

  10100   1 000030  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 000032  DC86                                 LDB,B5   ,B6
          1 000033  DFC7 0016                            STB,B5   BCHN$,AUTO

      529    10101    1      BCTX$ = ADDR(NIL);

  10101   1 000035  CB80 0000 0000                       LAB,B4   0
          1 000038  CFC7 0014                            STB,B4   BCTX$,AUTO

      530    10102        /* Mark the clock off. That'l get the ENDPHSDSC ASNRQS sent. */
      531    10103
      532    10104    1      KH$CHN.CLK = '0'B;

  10104   1 00003A  8805                                 LBF,'0020'X       ,B5
  10104   1 00003B       0020

  10104   1                              SUB_COMMON      null
      533    10105
      534    10106    1   SUB_COMMON:;
      535    10107        /* IF THE CURRENT LEVEL IS BELOW THE ASYNC INHIBIT LEVEL.                     */
      536    10108        /* GO TO THE ASYNC INHIBIT LEVEL.                                             */
      537    10109    1      LVL = KA_INT_LEV;

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:79   
  10109   1 00003C  E800 0000 0000  xsym SUB_COMMON      LDR,R6   KA_INT_LEV
          1 00003F  EF47 0013                            STR,R6   LVL,AUTO

      538    10110    1      CALL KHI$DISABLE(LVL);

  10110   1 000041  DBC7 0013                            LAB,B5   LVL,AUTO
          1 000043  DFC7 001C                            STB,B5   Y@ERROR+2,AUTO
          1 000045  BBC7 001C                            LAB,B3   Y@ERROR+2,AUTO
          1 000047  CBF0 0100                            LAB,B4   256,IMO
          1 000049  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 00004C       0001                            DC       s:10114,PREL

      539    10111
      540    10112        /* THIS ROUTINE FOR THE CALL TO REPORT GN#ADM_OPR_DSC.                        */
      541    10113
      542    10114    2      IF BCTX$~=ADDR(NIL) THEN DO;

  10114   1 00004D  8DC7 0014                            CMN      BCTX$,AUTO
          1 00004F  0901 00F3                            BE       s:10173,PREL

      543    10115
      544    10116        /* RELEASE THE CONTEXT BLOCK AND ITS APPENDAGES IF THERE IS ONE. */
      545    10117
      546    10118    3         IF KA$CTX.LCTSTT.PLD THEN DO;

  10118   1 000051  ECC7 0014                            LDB,B6   BCTX$,AUTO
          1 000053  82C6 001C                            LB,'0080'X        28,B6
          1 000055       0080
          1 000056  0581 0024                            BBF      s:10133,PREL

      547    10119
      548    10120        /* If polled, remove us from the chain of pollees.  No need to cancel the
      549    10121           clock or reset polling in the LCTs, they get fixed elsewhere automatically */
      550    10122
      551    10123    3            PTR$ = KA_POLHED$;

  10123   1 000058  DC80 0000 0000  xsym                 LDB,B5   KA_POLHED$
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:80   
          1 00005B  DFC7 0018                            STB,B5   PTR$,AUTO

      552    10124    3            IF PTR$=BCTX$ THEN KA_POLHED$ = KA$CTX.POLLNK$;

  10124   1 00005D  DDC7 0014                            CMB,B5   BCTX$,AUTO
          1 00005F  0981 0008                            BNE      s:10125,PREL

  10124   1 000061  CCC6 001A                            LDB,B4   26,B6
          1 000063  CF80 0000 0000  xsym                 STB,B4   KA_POLHED$
          1 000066  0F81 0014                            B        s:10133,PREL

      553    10125    4            ELSE POLLOOP: DO WHILE '1'B;

  10125   1                              POLLOOP         null
      554    10126    5               IF PTR$->KA$CTX.POLLNK$=BCTX$ THEN DO;

  10126   1 000068  ECC7 0018            POLLOOP         LDB,B6   PTR$,AUTO
          1 00006A  DCC6 001A                            LDB,B5   26,B6
          1 00006C  DDC7 0014                            CMB,B5   BCTX$,AUTO
          1 00006E  0981 0009                            BNE      s:10130,PREL

      555    10127    5                  PTR$->KA$CTX.POLLNK$ = KA$CTX.POLLNK$;

  10127   1 000070  CCC7 0014                            LDB,B4   BCTX$,AUTO
          1 000072  BCC4 001A                            LDB,B3   26,B4
          1 000074  BFC6 001A                            STB,B3   26,B6

      556    10128    5                  EXIT POLLOOP;

  10128   1 000076  0F81 0004                            B        s:10133,PREL

      557    10129    5               END;
      558    10130    4               PTR$ = PTR$->KA$CTX.POLLNK$;

  10130   1 000078  DFC7 0018                            STB,B5   PTR$,AUTO

      559    10131    4            END;
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:81   

  10131   1 00007A  0FEE                                 B        s:10125,SPREL

      560    10132    3         END;

      561    10133    3         IF (KA$CTX.VDH_DAT.DAT__.ADR$ ~= ADDR(NIL)) THEN DO;

  10133   1 00007B  ECC7 0014                            LDB,B6   BCTX$,AUTO
          1 00007D  8DC6 0011                            CMN      17,B6
          1 00007F  0901 008B                            BE       s:10163,PREL

      562    10134
      563    10135        /* THERE IS AN INPUT BUFFER TO RELEASE. ALSO KILL THE IO ON IT.               */
      564    10136
      565    10137    3            KH@IO_OTPCHNCTR = KH_IO_OTPCHNCTR;

  10137   1 000081  8C80 0000 0000  00                   LDI      KH_IO_OTPCHNCTR
          1 000084  8D47 0006                            SDI      KH@IO_OTPCHNCTR,AUTO

      566    10138    3            KH@IO_OTPCHNCTR.CHNCTR.CCBLSTRST = '1'B;

  10138   1 000086  8947 0007                            LBT,'0100'X       KH@IO_OTPCHNCTR+1,AUTO
  10138   1 000088       0100

      567    10139    3            CALL KHI$IO_OTP(%KH_CHN,KH@IO_OTPCHNCTR);

  10139   1 000089  DBC7 0006                            LAB,B5   KH@IO_OTPCHNCTR,AUTO
          1 00008B  DFC7 001E                            STB,B5   Y@ERROR+4,AUTO
          1 00008D  CCC7 0016                            LDB,B4   BCHN$,AUTO
          1 00008F  CFC7 001C                            STB,B4   Y@ERROR+2,AUTO
          1 000091  BBC7 001C                            LAB,B3   Y@ERROR+2,AUTO
          1 000093  CBF0 0200                            LAB,B4   512,IMO
          1 000095  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          1 000098       0001                            DC       s:10140,PREL

      568    10140    3            %KH_CHN.INPCCBCNT = 0;

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:82   
  10140   1 000099  ECC7 0016                            LDB,B6   BCHN$,AUTO
          1 00009B  8846 0007                            LBF,'0F00'X       7,B6
          1 00009D       0F00

      569    10141    3            %KH_CHN.INPCCBSTTPTRVLD = '0'B;

  10141   1 00009E  8846 0008                            LBF,'0080'X       8,B6
  10141   1 0000A0       0080

      570    10142    4            IF KA$CTX.BFRGRWPND THEN DO;

  10142   1 0000A1  DCC7 0014                            LDB,B5   BCTX$,AUTO
          1 0000A3  82C5 001D                            LB,'0100'X        29,B5
          1 0000A5       0100
          1 0000A6  0581 0040                            BBF      s:10156,PREL

      571    10143
      572    10144        /* There's actually two buffers right now.  Release the other one, too. */
      573    10145
      574    10146    4               IF KA$CTX.VDH_DAT.DAT__.BYTX<KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ/2

  10146   1 0000A8  E845 0015                            LDR,R6   21,B5
          1 0000AA  6041                                 SOR,R6   1
          1 0000AB  6801 0005                            BLZ,R6   s:10147,PREL
          1 0000AD  E945 0013                            CMR,R6   19,B5
          1 0000AF  0A81 0008                            BALE     s:10148,PREL

      575    10147    4               THEN KA$CTX.VDH_DAT.DAT__.BYTX = KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ/4;

  10147   1 0000B1  E845 0015                            LDR,R6   21,B5
          1 0000B3  6042                                 SOR,R6   2
          1 0000B4  EF45 0013                            STR,R6   19,B5
          1 0000B6  0F81 0003                            B        s:10149,PREL

      576    10148    4               ELSE KA$CTX.VDH_DAT.DAT__.BYTX = 0;

  10148   1 0000B8  8745 0013                            CL       19,B5
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:83   

      577    10149    4               PTR$ = PINCRW(KA$CTX.VDH_DAT.DAT__.ADR$,

  10149   1 0000BA  DCC7 0014                            LDB,B5   BCTX$,AUTO
          1 0000BC  B845 0013                            LDR,R3   19,B5
          1 0000BE  CCC5 0011                            LDB,B4   17,B5
          1 0000C0  AB84                                 LAB,B2   ,B4
          1 0000C1  A853                                 LDR,R2   R3
          1 0000C2  2001                                 SOL,R2   1
          1 0000C3  6C04                                 LDV,R6   4
          1 0000C4  BB87                                 LAB,B3   ,AUTO
          1 0000C5  3C30                                 LDV,R3   48
          1 0000C6  0008                                 MMM

      578    10150    4                 KA$CTX.VDH_DAT.DAT__.BYTX)->Y$PTR$;
      579    10151    4               PTR$->Y$U = KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ;

  10151   1 0000C7  ECC7 0018                            LDB,B6   PTR$,AUTO
          1 0000C9  DCC7 0014                            LDB,B5   BCTX$,AUTO
          1 0000CB  E845 0015                            LDR,R6   21,B5
          1 0000CD  EF06                                 STR,R6   ,B6

      580    10152    4               CALL KVB$RLS2NSYS (PTR$->Y$U);

  10152   1 0000CE  BBC7 0018                            LAB,B3   PTR$,AUTO
          1 0000D0  CBF0 0100                            LAB,B4   256,IMO
          1 0000D2  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          1 0000D5       0001                            DC       s:10153,PREL

      581    10153    4               KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL -

  10153   1 0000D6  ECC7 0014                            LDB,B6   BCTX$,AUTO
          1 0000D8  F846 0015                            LDR,R7   21,B6
          1 0000DA  6C00                                 LDV,R6   0
          1 0000DB  7081                                 DOL,R7   1
          1 0000DC  8656                                 CPL      R6
          1 0000DD  8657                                 CPL      R7
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:84   
          1 0000DE  8470 0000 0001                       AID      1,IMO
          1 0000E1  8400 0000 001C  xsym                 AID      KA_STT+28
          1 0000E4  8D00 0000 001C  xsym                 SDI      KA_STT+28

      582    10154    4                 KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ*2;
      583    10155    4            END;

      584    10156    3            KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL - KA$CTX.VDH_DAT.
             10156                     DAT__.BFRBYTSIZ;

  10156   1 0000E7  ECC7 0014                            LDB,B6   BCTX$,AUTO
          1 0000E9  F846 0015                            LDR,R7   21,B6
          1 0000EB  6C00                                 LDV,R6   0
          1 0000EC  8480 0000 001C  xsym                 SID      KA_STT+28
          1 0000EF  8656                                 CPL      R6
          1 0000F0  8657                                 CPL      R7
          1 0000F1  8470 0000 0001                       AID      1,IMO
          1 0000F4  8D00 0000 001C  xsym                 SDI      KA_STT+28

      585    10157    3            KA$CTX.VDH_DAT.DAT__.ADR$->Y$U = KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;

  10157   1 0000F7  DCC6 0011                            LDB,B5   17,B6
          1 0000F9  D846 0015                            LDR,R5   21,B6
          1 0000FB  5041                                 SOR,R5   1
          1 0000FC  DF05                                 STR,R5   ,B5

      586    10158    3            CALL KVB$RLS2NSYS (KA$CTX.VDH_DAT.DAT__.ADR$->Y$U);

  10158   1 0000FD  ECC7 0014                            LDB,B6   BCTX$,AUTO
          1 0000FF  DCC6 0011                            LDB,B5   17,B6
          1 000101  DFC7 001C                            STB,B5   Y@ERROR+2,AUTO
          1 000103  BBC7 001C                            LAB,B3   Y@ERROR+2,AUTO
          1 000105  CBF0 0100                            LAB,B4   256,IMO
          1 000107  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          1 00010A       0001                            DC       s:10163,PREL

      587    10159    3         END /* IF */;
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:85   

      588    10160
      589    10161        /* UPDATE A FEW STATS                                                         */
      590    10162
      591    10163    2         KA_STT.KHSTT.CTXBYTUTL = KA_STT.KHSTT.CTXBYTUTL - SIZEW(KA$CTX)*2;

  10163   1 00010B  8C80 0000 0020  xsym                 LDI      KA_STT+32
          1 00010E  8470 FFFF FFC0                       AID      -64,IMO
          1 000111  8D00 0000 0020  xsym                 SDI      KA_STT+32

      592    10164
      593    10165        /* RELEASE THE ASYNC CONTEXT BLOCK (BCTX$).                                   */
      594    10166
      595    10167    2         CALL KVB$RLSSYS(SIZEW(KA$CTX), BCTX$);

  10167   1 000114  EBF0 0020                            LAB,B6   32,IMO
          1 000116  DBC7 0014                            LAB,B5   BCTX$,AUTO
          1 000118  DFC7 001E                            STB,B5   Y@ERROR+4,AUTO
          1 00011A  EFC7 001C                            STB,B6   Y@ERROR+2,AUTO
          1 00011C  BBC7 001C                            LAB,B3   Y@ERROR+2,AUTO
          1 00011E  CBF0 0200                            LAB,B4   512,IMO
          1 000120  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 000123       0001                            DC       s:10168,PREL

      596    10168    2         %KH_CHN.CTX$ = ADDR(NIL);

  10168   1 000124  EB80 0000 0000                       LAB,B6   0
          1 000127  DCC7 0016                            LDB,B5   BCHN$,AUTO
          1 000129  EFC5 000C                            STB,B6   12,B5

      597    10169    2         CALL KHA$DVCADM(%KHA_FNC_DISCONNECT_EVT,Y@ERROR,KH$CHN.TERMID);

  10169   1 00012B  CBF0 000C                            LAB,B4   12,IMO
          1 00012D  BBC5 0012                            LAB,B3   18,B5
          1 00012F  BFC7 0020                            STB,B3   Y@ERROR+6,AUTO
          1 000131  EBC7 001A                            LAB,B6   Y@ERROR,AUTO
          1 000133  EFC7 001E                            STB,B6   Y@ERROR+4,AUTO
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:86   
          1 000135  CFC7 001C                            STB,B4   Y@ERROR+2,AUTO
          1 000137  BBC7 001C                            LAB,B3   Y@ERROR+2,AUTO
          1 000139  CBF0 0300                            LAB,B4   768,IMO
          1 00013B  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          1 00013E       0001                            DC       s:10170,PREL

      598    10170    2         %KH_CHN.TERMID.TTYP = 0;

  10170   1 00013F  ECC7 0016                            LDB,B6   BCHN$,AUTO
          1 000141  87C6 0012                            CLH      18,B6

      599    10171    2      END /* IF BCTX$~=ADDR(NIL) */;

      600    10172
      601    10173    2      IF NOT %KH_CHN.CLK THEN DO;

  10173   1 000143  ECC7 0016                            LDB,B6   BCHN$,AUTO
          1 000145  8286                                 LB,'0020'X        ,B6
          1 000146       0020
          1 000147  0501 0018                            BBT      s:10182,PREL

  10170   1                              ENDPHSDSC       null
      602    10174
      603    10175        /* We are not currently dropping DTR, so the clock won't reinitialize for us. */
      604    10176        /* Or, we've just finished dropping DTR. In any case, ENDPHSDSC is needed. */
      605    10177
      606    10178    2   ENDPHSDSC:;
      607    10179    2         CALL KAO$ASNRQSNO_CTX (%KA#OTPASNRQS_ENDPHSDSC,,KH$CHN)

  10179   1 000149  EBF0 0008            ENDPHSDSC       LAB,B6   8,IMO
          1 00014B  DCC7 0016                            LDB,B5   BCHN$,AUTO
          1 00014D  DFC7 0020                            STB,B5   Y@ERROR+6,AUTO
          1 00014F  CB80 0000 0000                       LAB,B4   0
          1 000152  CFC7 001E                            STB,B4   Y@ERROR+4,AUTO
          1 000154  EFC7 001C                            STB,B6   Y@ERROR+2,AUTO
          1 000156  BBC7 001C                            LAB,B3   Y@ERROR+2,AUTO
          1 000158  CBF0 0300                            LAB,B4   768,IMO
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:87   
          1 00015A  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSNO_CTX
          1 00015D       0003                            DC       s:10182,PREL

      608    10180    2           ALTRET (SETDSCCLK);        /* Try again in a while if it didn't work  */
      609    10181    2      END /* IF */;

  10181   1 00015E  0F81 002B                            B        s:10193,PREL

      610    10182    2      ELSE DO;         /* We've done a BGNPHSDSC, start the timer to finish it.  */

  10180   1                              SETDSCCLK       null
      611    10183    2   SETDSCCLK: ;
      612    10184    2         KH@CLK = KH_CLK_DRPDTR;

  10184   1 000160  AB80 0000 0000  00   SETDSCCLK       LAB,B2   KH_IO_OTPCHNCTR
          1 000163  2C04                                 LDV,R2   4
          1 000164  6C16                                 LDV,R6   22
          1 000165  BB87                                 LAB,B3   ,AUTO
          1 000166  3C10                                 LDV,R3   16
          1 000167  0008                                 MMM

      613    10185    2         KH@CLK.UID$ = BCHN$;

  10185   1 000168  ECC7 0016                            LDB,B6   BCHN$,AUTO
          1 00016A  EFC7 000A                            STB,B6   KH@CLK+2,AUTO

      614    10186    3         CALL KHC$CLOCK (KH@CLK) WHENALTRETURN DO;

  10186   1 00016C  DBC7 0008                            LAB,B5   KH@CLK,AUTO
          1 00016E  DFC7 001C                            STB,B5   Y@ERROR+2,AUTO
          1 000170  BBC7 001C                            LAB,B3   Y@ERROR+2,AUTO
          1 000172  CBF0 0100                            LAB,B4   256,IMO
          1 000174  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          1 000177       0003                            DC       s:10189,PREL
          1 000178  0F81 0011                            B        s:10193,PREL

      615    10187        /* Tried a RESET first, in case there was a logon-timeout clock running. */
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:88   
      616    10188        /* It didn't work, so try a SETCLK. */
      617    10189    3            KH@CLK.FNC = %KH#CLK_SETCLK;

  10189   1 00017A  6C01                                 LDV,R6   1
          1 00017B  EAC7 000D                            SRM,R6,'00FF'X    KH@CLK+5,AUTO
          1 00017D       00FF

      618    10190    3            CALL KHC$CLOCK (KH@CLK) ALTRET (ENDPHSDSC);

  10190   1 00017E  EBC7 0008                            LAB,B6   KH@CLK,AUTO
          1 000180  EFC7 001C                            STB,B6   Y@ERROR+2,AUTO
          1 000182  BBC7 001C                            LAB,B3   Y@ERROR+2,AUTO
          1 000184  CBF0 0100                            LAB,B4   256,IMO
          1 000186  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          1 000189       FFC0                            DC       s:10170,PREL

      619    10191    3         END;

      620    10192    2      END;

      621    10193    2      IF (LVL > KA_INT_LEV) THEN DO;

  10193   1 00018A  E847 0013                            LDR,R6   LVL,AUTO
          1 00018C  E900 0000 0000  xsym                 CMR,R6   KA_INT_LEV
          1 00018F  0381 0007                            BLE      s:10201,PREL

      622    10194
      623    10195        /* WE WERE CALLED FROM BELOW THE ASYNC INHIBIT LEVEL, SO WE                   */
      624    10196        /* SHOULD DO AN ENABLE TO GO BACK TO THE LEVEL WE WERE                        */
      625    10197        /* CALLED AT.                                                                 */
      626    10198
      627    10199    2         CALL KHI$ENABLE;

  10199   1 000191  CBF0 0000                            LAB,B4   0,IMO
          1 000193  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000196       0001                            DC       s:10201,PREL

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:89   
      628    10200    2      END /* IF */;

      629    10201    1   END KAS$DSC;

  10201   1 000197  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      630    10202
      631    10203
      632    10204        %IF ('0'B);
      643    10215        %ENDIF;

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:90   
--  Include file information  --

   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KA_LCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KW_ALCT_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLBASM_E.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:91   
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAS$DSC.
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:92   

 **** Variables and constants ****

  ****  Section 000 RoData KAS$DSC

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w STRC(176)   r     1 KH_CLK_DRPDTR              0-0-0/w STRC(32)    r     1 KH_IO_OTPCHNCTR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PARM                     16-0-0/w PTR         r     1 BCHN$
    14-0-0/w PTR         r     1 BCTX$                      8-0-0/w STRC(176)   r     1 KH@CLK
     6-0-0/w STRC(32)    r     1 KH@IO_OTPCHNCTR           13-0-0/w UBIN(16)    r     1 LVL
    *0-0-0/w UBIN(16)    r     1 PARM                      18-0-0/w PTR         r     1 PTR$
    1A-0-0/w UBIN(32)    r     1 Y@ERROR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KA_INT_LEV                 0-0-0/w PTR         r     1 KA_POLHED$
     0-0-0/w STRC(2528)  r     1 KA_STT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KA$CTX                     0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(96)    r     1 KH$EXP                     0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w PTR         r     1 Y$PTR$                     0-0-0/w UBIN(16)    r     1 Y$U

PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:93   

   Procedure KAS$DSC requires 410 words for executable code.
   Procedure KAS$DSC requires 34 words of local(AUTO) storage.

    No errors detected in file KAS$CNC.:E05TSI    .
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:94   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:95   
          MINI XREF LISTING

BCHN$
     10077**DCL       623--IMP-PTR 10086<<ASSIGN  10092<<ASSIGN  10093>>ASSIGN  10094>>ASSIGN  10100<<ASSIGN
     10104>>ASSIGN  10139>>CALL    10140>>ASSIGN  10141>>ASSIGN  10168>>ASSIGN  10169>>CALL    10170>>ASSIGN
     10173>>IF      10179>>CALL    10185>>ASSIGN
BCTX$
     10076**DCL        68--IMP-PTR  7592--IMP-PTR 10085<<ASSIGN  10086>>ASSIGN  10087>>ASSIGN  10087>>ASSIGN
     10093<<ASSIGN  10101<<ASSIGN  10114>>IF      10118>>IF      10124>>IF      10124>>ASSIGN  10126>>IF
     10127>>ASSIGN  10133>>IF      10142>>IF      10146>>IF      10146>>IF      10147>>ASSIGN  10147>>ASSIGN
     10148>>ASSIGN  10149>>ASSIGN  10149>>ASSIGN  10151>>ASSIGN  10153>>ASSIGN  10156>>ASSIGN  10157>>ASSIGN
     10157>>ASSIGN  10158>>CALL    10167<>CALL
ENDPHSDSC
     10170**LABEL   10190--CALLALT
KA$CTX
      7592**DCL     10163--ASSIGN  10167--CALL
KA$CTX.BFRGRWPND
      7694**DCL     10142>>IF
KA$CTX.HLTOTP
      7687**DCL      7689--REDEF
KA$CTX.HLTOTPNXTBFR
      7691**DCL      7692--REDEF
KA$CTX.LCTSTT.PLD
      7691**DCL     10118>>IF
KA$CTX.POLLNK$
      7687**DCL     10124>>ASSIGN  10126>>IF      10127<<ASSIGN  10127>>ASSIGN  10130>>ASSIGN
KA$CTX.VDH_DAT.DAT__.ADR$
      7675**DCL     10133>>IF      10149>>ASSIGN  10157>>ASSIGN  10158>>CALL
KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ
      7676**DCL     10146>>IF      10147>>ASSIGN  10151>>ASSIGN  10153>>ASSIGN  10156>>ASSIGN  10157>>ASSIGN
KA$CTX.VDH_DAT.DAT__.BYTX
      7675**DCL     10146>>IF      10147<<ASSIGN  10148<<ASSIGN  10149>>ASSIGN
KA$CTX.VDI$
      7599**DCL     10086>>ASSIGN  10087>>ASSIGN  10087>>ASSIGN
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:96   
KAO$ASNRQSNO_CTX
     10069**DCL-ENT 10179--CALL
KAS$ENDPHSDSC
     10097**ENTRY    9978--DCLINIT
KA_INT_LEV
        46**DCL     10109>>ASSIGN  10193>>IF
KA_POLHED$
     10079**DCL     10123>>ASSIGN  10124<<ASSIGN
KA_STT.KHSTT.CTXBYTUTL
      8031**DCL     10163<<ASSIGN  10163>>ASSIGN
KA_STT.KHSTT.INPBFRBYTUTL
      8030**DCL     10153<<ASSIGN  10153>>ASSIGN  10156<<ASSIGN  10156>>ASSIGN
KA_STT.LINSPDDST
      8033**DCL     10087<<ASSIGN  10087>>ASSIGN
KA_STT.REQSTATS.DSPMSK
      7958**DCL      7964--REDEF
KA_STT.REQSTATS.SLCMSK
      7999**DCL      8006--REDEF
KH$CHN
       623**DCL     10139<>CALL    10179<>CALL
KH$CHN.CLK
       634**DCL     10094<<ASSIGN  10104<<ASSIGN  10173>>IF
KH$CHN.CTX$
       693**DCL     10093>>ASSIGN  10168<<ASSIGN
KH$CHN.INPCCBCNT
       662**DCL     10140<<ASSIGN
KH$CHN.INPCCBSTTPTRVLD
       676**DCL     10141<<ASSIGN
KH$CHN.TERMID
       717**DCL     10169<>CALL
KH$CHN.TERMID.TERM
       719**DCL       728--REDEF
KH$CHN.TERMID.TTYP
       719**DCL     10170<<ASSIGN
KH$EXP.UID
     10016**DCL     10017--REDEF
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:97   
KH$EXP.UID$
     10017**DCL     10100>>ASSIGN
KH@CLK
      9711**DCL     10184<<ASSIGN  10186<>CALL    10190<>CALL
KH@CLK.FNC
      9753**DCL     10189<<ASSIGN
KH@CLK.UID
      9727**DCL      9728--REDEF    9729--REDEF
KH@CLK.UID$
      9728**DCL     10185<<ASSIGN
KH@IO_OTPCHNCTR
      9177**DCL     10137<<ASSIGN  10139<>CALL
KH@IO_OTPCHNCTR.ASNSTT
      9186**DCL      9187--REDEF    9193--REDEF    9198--REDEF    9202--REDEF    9206--REDEF    9210--REDEF
      9217--REDEF    9223--REDEF    9229--REDEF    9234--REDEF    9241--REDEF    9244--REDEF    9248--REDEF
      9255--REDEF    9259--REDEF    9263--REDEF    9267--REDEF    9272--REDEF    9276--REDEF
KH@IO_OTPCHNCTR.CHNCTR.CCBLSTRST
      9212**DCL     10138<<ASSIGN
KHA$DVCADM
     10063**DCL-ENT 10169--CALL
KHC$CLOCK
     10068**DCL-ENT 10186--CALL    10190--CALL
KHI$DISABLE
     10064**DCL-ENT 10110--CALL
KHI$ENABLE
     10065**DCL-ENT 10199--CALL
KHI$IO_OTP
     10066**DCL-ENT 10139--CALL
KH_CHNHI
       746**DCL       747--REDEF
KH_CHNLOW
       747**DCL       748--REDEF
KH_CLK_DRPDTR
      9861**DCL     10184>>ASSIGN
KH_CLK_DRPDTR.UID
      9877**DCL      9878--REDEF    9879--REDEF
PL6.E3A0      #002=KAS$DSC File=KAS$CNC.:E05TSI                                  WED 07/30/97 00:03 Page:98   
KH_IO_OTPCHNCTR
      9063**DCL     10137>>ASSIGN
KV$VDI.CHN$
        68**DCL     10086>>ASSIGN
KV$VDI.LINSPD
       110**DCL     10087>>ASSIGN  10087>>ASSIGN
KVB$RLS2NSYS
     10071**DCL-ENT 10152--CALL    10158--CALL
KVB$RLSSYS
     10070**DCL-ENT 10167--CALL
LVL
     10075**DCL     10109<<ASSIGN  10110<>CALL    10193>>IF
PARM
     10082**DCL         9--PROC    10085--ASSIGN  10090--ENTRY   10092--ASSIGN  10097--ENTRY   10100--ASSIGN
POLLOOP
     10125**LABEL   10128--EXIT
PTR$
     10078**DCL     10123<<ASSIGN  10124>>IF      10126>>IF      10127>>ASSIGN  10130<<ASSIGN  10130>>ASSIGN
     10149<<ASSIGN  10151>>ASSIGN  10152>>CALL
SETDSCCLK
     10180**LABEL   10179--CALLALT
SUB_COMMON
     10104**LABEL   10088--GOTO    10095--GOTO
Y$PTR$
     10081**DCL     10149>>ASSIGN
Y$U
     10080**DCL     10151<<ASSIGN  10152<>CALL    10157<<ASSIGN  10158<>CALL
Y@ERROR
     10083**DCL     10169<>CALL
