VERSION E05

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:1    
        1        1        /*M* TMB$MCA - Monitor interface to MCA for DPS8000 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        /*F*  NAME:  TMB$MCA
        9        9
       10       10              PURPOSE:  MCA IO interface routines.
       11       11        */
       12       12
       13       13        /*D*  NAME:  TMB$MCA
       14       14              CALL:  CALL TMB$MCA(DQH, CMD, BUFX,CMD_NUM) ALTRET(ERR);
       15       15              ENVIRONMENT: Monitor Linkage Segment - Used only on DPS8000
       16       16              INPUT: DQH structure, Command to MCA, data to be supplied to MCA/SP
       17       17                     MCA buffer pool index, SCU or CPU number for SWITCH/STATE,
       18       18              OUTPUT: data read by MCA
       19       19              DESCRIPTION:
       20       20                 This routine is called to do one of the following commands to
       21       21                 the MCA/SP:
       22       22                    READ CONFIG
       23       23                    RLOAD IPC xx to load firmware
       24       24                    SP CCINIT CP6 FETCH to get the time from the CSP
       25       25                    SP CCINIT CP6 UPDATE to set the time in the CSP
       26       26                    SP SWITCH SCU/CPU xx PORT yy ON/OFF switches port off or on
       27       27                    SP STATE SCU/CPU xx returns state of the SCU or CPU
       28       28                    MCA STATE IMX xx returns state of the IMX
       29       29                 The UTS value supplied to and returned by this routine is in CP-6
       30       30                 UTS format.  Therefore, this routine must convert the UTS value to
       31       31                 and from the required SP format which is as described here:
       32       32                   -value supplied by SP is the number of seconds since Jan 1, 1978
       33       33                    in a pseudo representation (32 bit value stored in 2 words)
       34       34                   -each byte of the 2 words contains a hex digit of the value
       35       35                    with 30h added to it
       36       36                        -----------------------------------------------
       37       37                       | hd0 + 30h | hd1 + 30h | hd2 + 30h | hd3 + 30h |
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:2    
       38       38                        -----------------------------------------------
       39       39                       | hd4 + 30h | hd5 + 30h | hd6 + 30h | hd7 + 30h |
       40       40                        -----------------------------------------------
       41       41                   -the hex digits must be stuffed into a single word, with 0 being
       42       42                    stored in the leftmost 4 bits
       43       43                        ----------------------------------------------------
       44       44                       | 0  | hd0 | hd1 | hd2 | hd3 | hd4 | hd5 | hd6 | hd7 |
       45       45                        ----------------------------------------------------
       46       46                   -then, number of seconds must be converted to 1/100 of seconds
       47       47                 It is possible for the RLOAD IPC nn command to fail.  Unfortunately
       48       48                 extranneous information is returned in either case, so the data must
       49       49                 be carefully scanned (the header doesn't give any indication of
       50       50                 whether or not the command was successful).  The following example
       51       51                 shows a successful RLOAD IPC 07:
       52       52                    STATE   :Firmware read from Production Diskette 0 IMX0
       53       53                    FAULT IPC 13   "powered off,non-operational"
       54       54
       55       55
       56       56                    Monday    October   31, 1988.     10/31/88  (16:53:07)
       57       57                 while this is an unsuccessful RLOAD IPC 07:
       58       58                    STATE   :ic0020 ipc07=iftp state=012 d=asr e032=smi target dcode err
       59       59                    FAULT IPC 13   "powered off,non-operation"
       60       60
       61       61
       62       62                    Monday    October   31, 1988.     10/31/88  (16:53:07)
       63       63                 The code scans for "STATE   :ic" as an indication of a failure, but
       64       64                 in either case always completes the MCA dialog.
       65       65                 It is possible for the STATE commands to fail.  Unfortunately
       66       66                 extranneous information is returned in either case, so the data must
       67       67                 be carefully scanned (the header doesn't give any indication of
       68       68                 whether or not the command was successful).  The following example
       69       69                 shows a successful STATE SCU 1:
       70       70                    SCU1:   PORT SMI00
       71       71
       72       72                            alarm mask is force set
       73       73
       74       74                            alarm mask is set
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:3    
       75       75
       76       76                            port used since reset
       77       77
       78       78                            performance model is WCLK086A
       79       79
       80       80                    S1TANDH    is the currently configured file
       81       81
       82       82        <<0000>> State - Normal Termination
       83       83             FINISH THIS DOCUMENTATIONN
       84       84        */
       85       85        TMB$MCA:PROC (DQH, CMD, BUFX, CMD_NUM) ALTRET;
       86       86        %EJECT;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:4    
       87       87        /**/
       88       88        /* PARAMETERS */
       89       89        /**/
       90       90        %INCLUDE NI_DATA_R;
       91      527        %NI$DQH(NAME=DQH,STCLASS="");
       92      550    1   DCL CMD UBIN;
       93      551    1   DCL BUFX SBIN;
       94      552    1   DCL CMD_NUM SBIN;
       95      553        /**/
       96      554        /* INCLUDE FILES */
       97      555        /**/
       98      556        %INCLUDE CP_6_SUBS;
       99     1096        %INCLUDE HF_LOCK_C;
      100     1110        %INCLUDE IS$MACROS;
      101     2385        %INCLUDE N_FC_C;
      102     2422        %INCLUDE OC_SUBS_C;
      103     3153        %INCLUDE TM_DATA_M;
      104     3255        %INCLUDE TM_DATA_R;
      105     3264        %INCLUDE HF_DATA_R;
      106     3307        %INCLUDE XUD_UTS_M;
      107     3389        %XUD$UTS_ENTRIES;
      108     3421        %XUD_UTS_EQU;
      109     3432        /**/
      110     3433        /* ENTRY DCLS */
      111     3434        /**/
      112     3435    1   DCL NIQ$GET ENTRY(1) ALTRET;
      113     3436    1   DCL NIO$IOSPIN ENTRY(1);
      114     3437    1   DCL NIO$QUE ENTRY(1) ALTRET;
      115     3438    1   DCL NIQ$REL ENTRY(1) ALTRET;
      116     3439    1   DCL OCI$MK_WR ENTRY(7);
      117     3440        /**/
      118     3441        /* SYMDEF */
      119     3442        /**/
      120     3443        /**/
      121     3444        /* AUTO */
      122     3445        /**/
      123     3446    1   DCL BUF$ PTR;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:5    
      124     3447    1   DCL BUF_CMD$ PTR;
      125     3448    1   DCL DCTX UBIN;
      126     3449    1   DCL DCT$ PTR;
      127     3450    1   DCL I SBIN;
      128     3451    1   DCL IMX# UBIN;
      129     3452    1   DCL IPCNUM CHAR(2);
      130     3453    1   DCL REQ$ PTR;
      131     3454    1   DCL SQH$ PTR;
      132     3455    1   DCL DEFINER UBIN;
      133     3456    1   DCL 1 OC_PARAM_LENS UNAL,
      134     3457    1         2 LEN(0:1) UBIN BYTE UNAL;
      135     3458    1   DCL 1 OC_PARAMS UNAL,
      136     3459    1         2 MCA# UBIN BYTE UNAL,
      137     3460    1         2 CMD UBIN BYTE UNAL;
      138     3461    1   DCL OC_MSG SBIN;
      139     3462    1   DCL CMD_SIZE SBIN;
      140     3463    1   DCL UTS UBIN;
      141     3464    1   DCL 1 UTS1 REDEF UTS,
      142     3465    1         2 * BIT(4) UNAL,
      143     3466    1         2 HEX_DIGIT(0:7) UBIN(4) UNAL;
      144     3467    1   DCL FIRM_POS REDEF UTS UBIN;
      145     3468    1   DCL 1 UTS_SP,
      146     3469    1         2 BITE(0:7) CALIGNED,
      147     3470    1           3 * BIT(5) UNAL,
      148     3471    1           3 HEX_DIGIT UBIN(4) UNAL;
      149     3472    1   DCL FIRMLOAD_FAILED BIT(1) ALIGNED;
      150     3473    1   DCL SWITCH_STATE_FAILED BIT(1) ALIGNED;
      151     3474    1   DCL VARLEN UBIN;
      152     3475    1   DCL LOW_SCUX UBIN WORD;
      153     3476        /**/
      154     3477        /* BASED */
      155     3478        /**/
      156     3479        %MCA_HDR(NAME=MCA_HDR,STCLASS="BASED(BUF$)");
      157     3513        %MCA_HDR(NAME=INIT_HDR,STCLASS=CONSTANT);
      158     3547        %N$REQ(NAME=REQ,STCLASS="BASED(REQ$)");
      159     3605        %NI$DCT(NAME=DCT,STCLASS="BASED(DCT$)");
      160     3653        %NI$SQH(NAME=SQH,STCLASS="BASED(SQH$)");
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:6    
      161     3666    1   DCL CHAR1 CHAR(1) BASED;
      162     3667    1   DCL CHAR2 CHAR(2) BASED;
      163     3668    1   DCL CHAR3 CHAR(3) BASED;
      164     3669    1   DCL CHAR32 CHAR(32) BASED;
      165     3670    1   DCL CHARVAR CHAR(VARLEN) BASED;
      166     3671    1   DCL UTS_B UBIN BASED;
      167     3672    1   DCL UTS_SP_B BIT(72) ALIGNED BASED;
      168     3673        /**/
      169     3674        /* SYMREFS */
      170     3675        /**/
      171     3676    1   DCL S_CUN UBIN SYMREF;
      172     3677    1   DCL S_TIMR UBIN SYMREF;
      173     3678        /**/
      174     3679        /* CONSTANT */
      175     3680        /**/
      176     3681    1   DCL BORA(0:1) CHAR(1) CONSTANT INIT('B','A');
      177     3682    1   DCL LOAD_CMD CHAR(10) CONSTANT INIT('RLOAD IPC ');
      178     3683    1   DCL LOAD_CMD_SIZE UBIN CONSTANT INIT(13);
      179     3684    1   DCL CFG_CMD CHAR(11) CONSTANT INIT('READ CONFIG');
      180     3685    1   DCL CFG_CMD_SIZE UBIN CONSTANT INIT(12);
      181     3686    1   DCL SW_SCU_OFF_CMD CHAR(0) CONSTANT INIT('SP SWITCH SCU X PORT Y OFF');
      182     3687    1   DCL SW_SCU_OFF_CMD_SIZE UBIN CONSTANT INIT(27);
      183     3688    1   DCL SW_SCU_ON_CMD CHAR(0) CONSTANT INIT('SP SWITCH SCU X PORT Y ON');
      184     3689    1   DCL SW_SCU_ON_CMD_SIZE UBIN CONSTANT INIT(26);
      185     3690    1   DCL STATE_SCU_CMD CHAR(0) CONSTANT INIT('SP STATE SCU X');
      186     3691    1   DCL STATE_SCU_CMD_SIZE UBIN CONSTANT INIT(15);
      187     3692    1   DCL STATE_IMX_CMD CHAR(0) CONSTANT INIT('MCA X STATE');
      188     3693    1   DCL STATE_IMX_CMD_SIZE UBIN CONSTANT INIT(12);
      189     3694    1   DCL TIME_FETCH_CMD CHAR(19) CONSTANT INIT('SP CCINIT CP6 FETCH');
      190     3695    1   DCL TIME_FETCH_CMD_SIZE UBIN CONSTANT INIT(20);
      191     3696    1   DCL TIME_UPDATE_CMD CHAR(20) CONSTANT INIT('SP CCINIT CP6 UPDATE');
      192     3697    1   DCL TIME_UPDATE_CMD_SIZE UBIN CONSTANT INIT(21);
      193     3698    1   DCL TIME_UPDATE_DATA_SIZE UBIN CONSTANT INIT(8);
      194     3699        /**/
      195     3700        %EJECT;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:7    
      196     3701    1      IF BUFX >= 0 AND BUFX <= 3 THEN
      197     3702    1         BUF$ = NI$IBUF.ENT.BUF$(BUFX);
      198     3703    1       ELSE
      199     3704    1         ALTRETURN;
      200     3705    1      BUF_CMD$ = PINCRW(BUF$, SIZEW(INIT_HDR));
      201     3706    1      LOW_SCUX = 0;
      202     3707    1      IF ~H_DPS8000_SCU_INFO.SCU_STATUS.LOW_MEM(0) THEN
      203     3708    1         LOW_SCUX = 1;
      204     3709                                      /* Use MCA on IMX specified by provided DQH     */
      205     3710    1      IMX# = DQH.IOCHAN.IOM;
      206     3711    1      DCTX = NI_MAINT_DCTX(IMX#);
      207     3712    1      DCT$ = N$DCT$(DCTX);
      208     3713    1      SQH$ = DCT.SQH$;
      209     3714    1      OC_PARAM_LENS.LEN(0) = 1;
      210     3715    1      OC_PARAM_LENS.LEN(1) = 1;
      211     3716    1      OC_PARAMS.MCA# = IMX#;
      212     3717    1      OC_PARAMS.CMD = CMD;
      213     3718    1      OC_MSG = 0;
      214     3719                                      /* Retrieve and convert data to be sent to SP   */
      215     3720    2      IF CMD = TM_OC_TIME_WRITE# THEN DO;
      216     3721        /* Convert current uts into seconds in order to update the
      217     3722            DPS8000 service processor clock, using XUD$UTS_DIFF_SEC.
      218     3723        */
      219     3724    2         CALL XUD$UTS_DIFF_SEC (UTS, BUF_CMD$ -> UTS_B, 0);
      220     3725    3         DO I = 0 TO 7;
      221     3726    3            UTS_SP.BITE(I) = BINBIT((UTS1.HEX_DIGIT(I) + 48),9);
      222     3727    3            END;
      223     3728    2         END;
      224     3729                                                /* Reserve the MCA                    */
      225     3730           %LOCK(G#=SQH.GATE);
      226     3733    2      IF DCT.MCA.RESERVED THEN DO;
      227     3734    2         OC_MSG = TM_RESERVED_MSG#;
      228     3735    2         GOTO ERR_UNL;
      229     3736    2         END;
      230     3737    1      DCT.MCA.RESERVED = '1'B;
      231     3738    1      IF S_TIMR ~= 2 AND S_CUN ~= 0 THEN
      232     3739    1         DCT.MCA.USER# = S_CUN;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:8    
      233     3740    1       ELSE
      234     3741    1         DCT.MCA.USER# = 0;
      235     3742           %UNLOCK(G#=SQH.GATE);
      236     3745    2      CALL NIQ$GET(REQ$) WHENALTRETURN DO;
      237     3746    2         OC_MSG = TM_FAILED_MSG#;
      238     3747    2         GOTO ERR_NOREQ;
      239     3748    2         END;
      240     3749    1      I=1;
      241     3750    1   TRY_AGAIN:
      242     3751    1      FIRMLOAD_FAILED = '0'B;
      243     3752    1      SWITCH_STATE_FAILED = '0'B;
      244     3753                                                /* Do a RESET STATUS on channel 3     */
      245     3754    1      MCA_HDR = INIT_HDR;
      246     3755    1      MCA_HDR.DEFINER = %MCA_DEFINER_STATUS;
      247     3756    1      MCA_HDR.TBYTES = 0;
      248     3757    1      REQ.FC = %N_RESET;
      249     3758    1      REQ.BUFSIZE = SIZEC(INIT_HDR);
      250     3759    1      REQ.OPFLG.BPF = '1'B;
      251     3760    1      REQ.OPFLG.HOLD = '1'B;
      252     3761    2      IF DCT.MCA.USER# ~= 0 THEN DO;
      253     3762    2         REQ.OPFLG.USER = '1'B;
      254     3763    2         REQ.OPFLG.WAIT = '1'B;
      255     3764    2         END;
      256     3765    1      REQ.BUF$ = BUF$;
      257     3766    1      REQ.DLA.DCTX = DCTX;
      258     3767                                                /* Do the IO                          */
      259     3768    1      CALL NIO$QUE(REQ) ALTRET(ERR);
      260     3769                                                /* WAIT FOR I/O TO COMPLETE           */
      261     3770    1      CALL NIO$IOSPIN(REQ);
      262     3771    1      IF REQ.TYC ~= %TYC_EGV
      263     3772    1       THEN GOTO ERR;
      264     3773                                                /* Perform the specified command      */
      265     3774    1      MCA_HDR = INIT_HDR;
      266     3775    1      MCA_HDR.DEFINER = %MCA_DEFINER_DATA;
      267     3776    2      DO CASE (CMD);
      268     3777    2       CASE (TM_OC_LOADFW#);
      269     3778    2         CMD_SIZE = LOAD_CMD_SIZE;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:9    
      270     3779    2         BUF_CMD$ -> CHAR32 = LOAD_CMD;
      271     3780    2         CALL BINCHAR(IPCNUM,DQH.IPCNUM);
      272     3781    2         PINCRC(BUF_CMD$, 10) -> CHAR2 = IPCNUM;
      273     3782    2       CASE (TM_OC_CONFIG#);
      274     3783    2         CMD_SIZE = CFG_CMD_SIZE;
      275     3784    2         BUF_CMD$ -> CHAR32 = CFG_CMD;
      276     3785    2       CASE (TM_OC_SWITCH_CPU_OFF#);
      277     3786    2         CMD_SIZE = SW_SCU_OFF_CMD_SIZE;
      278     3787    2         BUF_CMD$->CHAR32 = SW_SCU_OFF_CMD;
      279     3788    2         PINCRC(BUF_CMD$,10)->CHAR3 = 'CPU';
      280     3789    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,14,1),CMD_NUM);
      281     3790    2         PINCRC(BUF_CMD$,21)->CHAR1 = BORA(0);
      282     3791    2       CASE (TM_OC_SWITCH_CPU_ON#);
      283     3792    2         CMD_SIZE = SW_SCU_ON_CMD_SIZE;
      284     3793    2         BUF_CMD$->CHAR32 = SW_SCU_ON_CMD;
      285     3794    2         PINCRC(BUF_CMD$,10)->CHAR3 = 'CPU';
      286     3795    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,14,1),CMD_NUM);
      287     3796    2         PINCRC(BUF_CMD$,21)->CHAR1 = BORA(0);
      288     3797    2       CASE (TM_OC_SWITCH_SCU_OFF#);
      289     3798    2         CMD_SIZE = SW_SCU_OFF_CMD_SIZE;
      290     3799    2         BUF_CMD$->CHAR32 = SW_SCU_OFF_CMD;
      291     3800    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,14,1),LOW_SCUX);
      292     3801    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,21,1),CMD_NUM);
      293     3802    2       CASE (TM_OC_SWITCH_SCU_ON#);
      294     3803    2         CMD_SIZE = SW_SCU_ON_CMD_SIZE;
      295     3804    2         BUF_CMD$->CHAR32 = SW_SCU_ON_CMD;
      296     3805    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,14,1),LOW_SCUX);
      297     3806    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,21,1),CMD_NUM);
      298     3807    2       CASE (TM_OC_STATE_SCU#);
      299     3808    2         CMD_SIZE = STATE_SCU_CMD_SIZE;
      300     3809    2         BUF_CMD$->CHAR32 = STATE_SCU_CMD;
      301     3810    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,13,1),CMD_NUM);
      302     3811    2       CASE (TM_OC_STATE_CPU#);
      303     3812    2         CMD_SIZE = STATE_SCU_CMD_SIZE;
      304     3813    2         BUF_CMD$->CHAR32 = STATE_SCU_CMD;
      305     3814    2         PINCRC(BUF_CMD$,9)->CHAR3 = 'CPU';
      306     3815    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,13,1),CMD_NUM);
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:10   
      307     3816    2       CASE (TM_OC_STATE_IMX#);
      308     3817    2         CMD_SIZE = STATE_IMX_CMD_SIZE;
      309     3818    2         BUF_CMD$->CHAR32 = STATE_IMX_CMD;
      310     3819    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,4,1),CMD_NUM);
      311     3820    2       CASE (TM_OC_TIME_READ#);
      312     3821    2         CMD_SIZE = TIME_FETCH_CMD_SIZE;
      313     3822    2         BUF_CMD$ -> CHAR32 = TIME_FETCH_CMD;
      314     3823    2       CASE (TM_OC_TIME_WRITE#);
      315     3824    2         CMD_SIZE = TIME_UPDATE_CMD_SIZE;
      316     3825    2         BUF_CMD$ -> CHAR32 = TIME_UPDATE_CMD;
      317     3826    2       END;
      318     3827    1      MCA_HDR.TBYTES = CMD_SIZE;
      319     3828    1      PINCRC(BUF_CMD$, CMD_SIZE-1) -> CHAR1 = BITASC('015'O); /* CARRIAGE RETURN */
      320     3829    1      REQ.BUFSIZE = SIZEC(INIT_HDR) + CMD_SIZE;
      321     3830    1      REQ.FC = %N_WRASC;
      322     3831                                                /* Perform the IO                     */
      323     3832    1      CALL NIO$QUE(REQ) ALTRET(ERR);
      324     3833    1      CALL NIO$IOSPIN(REQ);
      325     3834    1      IF REQ.TYC ~= %TYC_EGV
      326     3835    1       THEN GOTO ERR;
      327     3836    1   STATUS_LOOP:
      328     3837    2      DO SELECT (BINBIT(REQ.STATUS.MAJOR,4));
      329     3838    2         SELECT ('0'O);
      330     3839    3         DO SELECT (REQ.STATUS.MINOR);
      331     3840    3            SELECT ('40'O);
      332     3841    3            IF MCA_HDR.DEFINER = %MCA_DEFINER_READ
      333     3842    3             THEN DEFINER = %MCA_DEFINER_STATUS;
      334     3843    3             ELSE IF MCA_HDR.DEFINER = %MCA_DEFINER_READDATA
      335     3844    3                THEN DEFINER = %MCA_DEFINER_DATA;
      336     3845    3                ELSE GOTO BAD_STATUS;
      337     3846    4            IF (CMD=TM_OC_LOADFW#) THEN DO;
      338     3847    4               VARLEN = MCA_HDR.SRCLEN;
      339     3848    4               CALL INDEX (FIRM_POS,'STATE   :ic',BUF_CMD$->CHARVAR);
      340     3849    4               IF (FIRM_POS<VARLEN) THEN
      341     3850    4                  FIRMLOAD_FAILED = '1'B;
      342     3851    4               END;
      343     3852    3             ELSE
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:11   
      344     3853    4               IF (CMD >= TM_OC_SWITCH_CPU_OFF#) THEN DO;
      345     3854    4                  VARLEN = MCA_HDR.SRCLEN;
      346     3855    4                  CALL INDEX(FIRM_POS,'<<',BUF_CMD$->CHARVAR);
      347     3856    5                  IF (FIRM_POS < VARLEN) THEN DO;
      348     3857    5                     IF SUBSTR(BUF_CMD$->CHARVAR,FIRM_POS+2,4) = '8000' THEN
      349     3858    5                        SWITCH_STATE_FAILED = '1'B;
      350     3859    5                     END;
      351     3860    5                   ELSE DO;
      352     3861    5                     CALL INDEX(FIRM_POS,'CONFIGURED',BUF_CMD$->CHARVAR);
      353     3862    6                     IF (FIRM_POS < VARLEN) THEN DO;
      354     3863    6                        CALL INDEX(FIRM_POS,'S',BUF_CMD$->CHARVAR);
      355     3864    6                        H_DPS8000_CONFIG_NAME = SUBSTR(BUF_CMD$->CHARVAR,FIRM_POS,12);
      356     3865    6                        END;
      357     3866    5                     END;
      358     3867    4                  END;
      359     3868    3            MCA_HDR = INIT_HDR;
      360     3869    3            MCA_HDR.DEFINER = DEFINER;
      361     3870    3            REQ.FC = %N_WRBIN;
      362     3871    4            IF (CMD=TM_OC_TIME_WRITE#) AND (DEFINER=%MCA_DEFINER_DATA) THEN DO;
      363     3872    4               BUF_CMD$ -> UTS_SP_B = UTS_SP;
      364     3873    4               REQ.BUFSIZE = SIZEC(INIT_HDR) + TIME_UPDATE_DATA_SIZE;
      365     3874    4               MCA_HDR.TBYTES = TIME_UPDATE_DATA_SIZE;
      366     3875    4               END;
      367     3876    3             ELSE
      368     3877    3               IF ((CMD >= TM_OC_STATE_SCU#) AND (CMD <= TM_OC_STATE_CPU#))
      369     3878    4                 AND (DEFINER=%MCA_DEFINER_DATA) THEN DO;
      370     3879    4                  BUF_CMD$->CHAR1 = BITASC('015'O);
      371     3880    4                  REQ.BUFSIZE = SIZEC(INIT_HDR) +1;
      372     3881    4                  MCA_HDR.TBYTES = 1;
      373     3882    4                  END;
      374     3883    4                ELSE DO;
      375     3884    4                  REQ.BUFSIZE = SIZEC(INIT_HDR);
      376     3885    4                  MCA_HDR.TBYTES = 0;
      377     3886    4                  END;
      378     3887                                                /* Do the IO                          */
      379     3888    3            CALL NIO$QUE(REQ) ALTRET(ERR);
      380     3889                                                /* WAIT FOR THE I/O TO COMPLETE       */
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:12   
      381     3890    3            CALL NIO$IOSPIN(REQ);
      382     3891    3            IF REQ.TYC ~= %TYC_EGV
      383     3892    3             THEN GOTO ERR;
      384     3893    3            SELECT ('02'O);
      385     3894    3            IF FIRMLOAD_FAILED OR SWITCH_STATE_FAILED THEN
      386     3895    3               GOTO ERR_REQ;
      387     3896    3             ELSE
      388     3897    3               GOTO DONE;
      389     3898    3            SELECT ('03'O);
      390     3899    3            OC_MSG = TM_TASK_ABORTED_MSG#;
      391     3900    3            GOTO ERR_REQ;
      392     3901    3            SELECT (ELSE);
      393     3902    3         GOTO BAD_STATUS;
      394     3903    3            END;
      395     3904    2      SELECT ('15'O);
      396     3905    2      IF REQ.STATUS.MINOR = '1'O
      397     3906    3       THEN DO;
      398     3907    3         OC_MSG = TM_ILLEGAL_CMD_MSG#;
      399     3908    3         GOTO ERR_REQ;
      400     3909    3         END;
      401     3910    2       ELSE GOTO BAD_STATUS;
      402     3911    2      SELECT (ELSE);
      403     3912    2   BAD_STATUS:
      404     3913    2      OC_MSG = TM_BAD_STATUS_MSG#;
      405     3914    2      GOTO ERR_REQ;
      406     3915    2         END;
      407     3916    1      GOTO STATUS_LOOP;
      408     3917                                                /**/
      409     3918    1   DONE:
      410     3919                                                /* Release request packet             */
      411     3920    1      CALL NIQ$REL(REQ$);
      412     3921                                                /* Release channel 3                  */
      413     3922           %LOCK(G#=SQH.GATE);
      414     3925    1      DCT.MCA.RESERVED = '0'B;
      415     3926           %UNLOCK(G#=SQH.GATE);
      416     3929                                           /* Convert the data supplied by the SP     */
      417     3930    2      IF CMD = TM_OC_TIME_READ# THEN DO;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:13   
      418     3931    2         UTS_SP = BUF_CMD$ -> UTS_SP_B;
      419     3932    2         UTS = 0;
      420     3933    3         DO I = 0 TO 7;
      421     3934    3            UTS1.HEX_DIGIT(I) = UTS_SP.BITE.HEX_DIGIT(I);
      422     3935    3            END;
      423     3936        /* convert time from the DPS8000 Service processor into UTS
      424     3937           The time in the service processor is number of seconds from
      425     3938            Jan 1, 1978.  Convert to 25th sec and pass to XUD$UTS_ADJ_25TH.
      426     3939        */
      427     3940    2         CALL XUD$UTS_ADJ_25TH (BUF_CMD$->UTS_B, 0, UTS * %UTS_25TH_SEC#);
      428     3941    2         END;
      429     3942    1      RETURN;
      430     3943        /**/
      431     3944    1   ERR:
      432     3945    1      I = I + 1;
      433     3946    2      IF I > 3 THEN DO;
      434     3947    2         OC_MSG = TM_FAILED_MSG#;
      435     3948    2   ERR_REQ:
      436     3949    2         CALL NIQ$REL(REQ$);
      437     3950    2   ERR_NOREQ:
      438     3951              %LOCK(G#=SQH.GATE);
      439     3954    2         DCT.MCA.RESERVED = '0'B;
      440     3955    2   ERR_UNL:
      441     3956              %UNLOCK(G#=SQH.GATE);
      442     3959    2         IF OC_MSG ~= 0 THEN
      443     3960    2            CALL OCI$MK_WR(M_SYS,OC_MSG,2,OC_PARAM_LENS,OC_PARAMS,DCTX);
      444     3961    2         ALTRETURN;
      445     3962    2         END;
      446     3963    1       ELSE GOTO TRY_AGAIN;
      447     3964    1   END TMB$MCA;
      448     3965        %EOD;

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:14   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   TM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   TM_DATA_M.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   IS$MACROS.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TMB$MCA.

   Procedure TMB$MCA requires 663 words for executable code.
   Procedure TMB$MCA requires 34 words of local(AUTO) storage.

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:15   

 Object Unit name= TMB$MCA                                    File name= TMB$MCA.:E05TOU
 UTS= JUL 30 '97 06:20:33.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     64    100  TMB$MCA
    1   Proc  even  none   663   1227  TMB$MCA
    2  RoData even  none     7      7  TMB$MCA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  TMB$MCA
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:16   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 XUD$UTS_DIFF_SEC
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       1 NIO$QUE
         yes           Std       1 HFC$LOCK
 yes     yes           Std       1 NIQ$GET
 yes     yes           Std       1 NIQ$REL
 yes     yes           Std       3 XUD$UTS_ADJ_25TH
         yes           Std       1 NIO$IOSPIN
         yes           Std       7 OCI$MK_WR
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_AALT
                       nStd      0 X66_INDEX
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               N$FQ$                                 NI$FQ$
     NI$IBUF$                              NI$RP$                                NI_MAINT_DCTX
     H_DPS8000_SCU_INFO                    H_DPS8000_CONFIG_NAME                 S_CUN
     S_TIMR                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:17   


        1        1        /*M* TMB$MCA - Monitor interface to MCA for DPS8000 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        /*F*  NAME:  TMB$MCA
        9        9
       10       10              PURPOSE:  MCA IO interface routines.
       11       11        */
       12       12
       13       13        /*D*  NAME:  TMB$MCA
       14       14              CALL:  CALL TMB$MCA(DQH, CMD, BUFX,CMD_NUM) ALTRET(ERR);
       15       15              ENVIRONMENT: Monitor Linkage Segment - Used only on DPS8000
       16       16              INPUT: DQH structure, Command to MCA, data to be supplied to MCA/SP
       17       17                     MCA buffer pool index, SCU or CPU number for SWITCH/STATE,
       18       18              OUTPUT: data read by MCA
       19       19              DESCRIPTION:
       20       20                 This routine is called to do one of the following commands to
       21       21                 the MCA/SP:
       22       22                    READ CONFIG
       23       23                    RLOAD IPC xx to load firmware
       24       24                    SP CCINIT CP6 FETCH to get the time from the CSP
       25       25                    SP CCINIT CP6 UPDATE to set the time in the CSP
       26       26                    SP SWITCH SCU/CPU xx PORT yy ON/OFF switches port off or on
       27       27                    SP STATE SCU/CPU xx returns state of the SCU or CPU
       28       28                    MCA STATE IMX xx returns state of the IMX
       29       29                 The UTS value supplied to and returned by this routine is in CP-6
       30       30                 UTS format.  Therefore, this routine must convert the UTS value to
       31       31                 and from the required SP format which is as described here:
       32       32                   -value supplied by SP is the number of seconds since Jan 1, 1978
       33       33                    in a pseudo representation (32 bit value stored in 2 words)
       34       34                   -each byte of the 2 words contains a hex digit of the value
       35       35                    with 30h added to it
       36       36                        -----------------------------------------------
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:18   
       37       37                       | hd0 + 30h | hd1 + 30h | hd2 + 30h | hd3 + 30h |
       38       38                        -----------------------------------------------
       39       39                       | hd4 + 30h | hd5 + 30h | hd6 + 30h | hd7 + 30h |
       40       40                        -----------------------------------------------
       41       41                   -the hex digits must be stuffed into a single word, with 0 being
       42       42                    stored in the leftmost 4 bits
       43       43                        ----------------------------------------------------
       44       44                       | 0  | hd0 | hd1 | hd2 | hd3 | hd4 | hd5 | hd6 | hd7 |
       45       45                        ----------------------------------------------------
       46       46                   -then, number of seconds must be converted to 1/100 of seconds
       47       47                 It is possible for the RLOAD IPC nn command to fail.  Unfortunately
       48       48                 extranneous information is returned in either case, so the data must
       49       49                 be carefully scanned (the header doesn't give any indication of
       50       50                 whether or not the command was successful).  The following example
       51       51                 shows a successful RLOAD IPC 07:
       52       52                    STATE   :Firmware read from Production Diskette 0 IMX0
       53       53                    FAULT IPC 13   "powered off,non-operational"
       54       54
       55       55
       56       56                    Monday    October   31, 1988.     10/31/88  (16:53:07)
       57       57                 while this is an unsuccessful RLOAD IPC 07:
       58       58                    STATE   :ic0020 ipc07=iftp state=012 d=asr e032=smi target dcode err
       59       59                    FAULT IPC 13   "powered off,non-operation"
       60       60
       61       61
       62       62                    Monday    October   31, 1988.     10/31/88  (16:53:07)
       63       63                 The code scans for "STATE   :ic" as an indication of a failure, but
       64       64                 in either case always completes the MCA dialog.
       65       65                 It is possible for the STATE commands to fail.  Unfortunately
       66       66                 extranneous information is returned in either case, so the data must
       67       67                 be carefully scanned (the header doesn't give any indication of
       68       68                 whether or not the command was successful).  The following example
       69       69                 shows a successful STATE SCU 1:
       70       70                    SCU1:   PORT SMI00
       71       71
       72       72                            alarm mask is force set
       73       73
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:19   
       74       74                            alarm mask is set
       75       75
       76       76                            port used since reset
       77       77
       78       78                            performance model is WCLK086A
       79       79
       80       80                    S1TANDH    is the currently configured file
       81       81
       82       82        <<0000>> State - Normal Termination
       83       83             FINISH THIS DOCUMENTATIONN
       84       84        */
       85       85        TMB$MCA:PROC (DQH, CMD, BUFX, CMD_NUM) ALTRET;

     85  1 000000   000000 700200 xent  TMB$MCA      TSX0  ! X66_AUTO_4
         1 000001   000042 000004                    ZERO    34,4

       86       86        %EJECT;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:20   
       87       87        /**/
       88       88        /* PARAMETERS */
       89       89        /**/
       90       90        %INCLUDE NI_DATA_R;
       91      527        %NI$DQH(NAME=DQH,STCLASS="");
       92      550    1   DCL CMD UBIN;
       93      551    1   DCL BUFX SBIN;
       94      552    1   DCL CMD_NUM SBIN;
       95      553        /**/
       96      554        /* INCLUDE FILES */
       97      555        /**/
       98      556        %INCLUDE CP_6_SUBS;
       99     1096        %INCLUDE HF_LOCK_C;
      100     1110        %INCLUDE IS$MACROS;
      101     2385        %INCLUDE N_FC_C;
      102     2422        %INCLUDE OC_SUBS_C;
      103     3153        %INCLUDE TM_DATA_M;
      104     3255        %INCLUDE TM_DATA_R;
      105     3264        %INCLUDE HF_DATA_R;
      106     3307        %INCLUDE XUD_UTS_M;
      107     3389        %XUD$UTS_ENTRIES;
      108     3421        %XUD_UTS_EQU;
      109     3432        /**/
      110     3433        /* ENTRY DCLS */
      111     3434        /**/
      112     3435    1   DCL NIQ$GET ENTRY(1) ALTRET;
      113     3436    1   DCL NIO$IOSPIN ENTRY(1);
      114     3437    1   DCL NIO$QUE ENTRY(1) ALTRET;
      115     3438    1   DCL NIQ$REL ENTRY(1) ALTRET;
      116     3439    1   DCL OCI$MK_WR ENTRY(7);
      117     3440        /**/
      118     3441        /* SYMDEF */
      119     3442        /**/
      120     3443        /**/
      121     3444        /* AUTO */
      122     3445        /**/
      123     3446    1   DCL BUF$ PTR;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:21   
      124     3447    1   DCL BUF_CMD$ PTR;
      125     3448    1   DCL DCTX UBIN;
      126     3449    1   DCL DCT$ PTR;
      127     3450    1   DCL I SBIN;
      128     3451    1   DCL IMX# UBIN;
      129     3452    1   DCL IPCNUM CHAR(2);
      130     3453    1   DCL REQ$ PTR;
      131     3454    1   DCL SQH$ PTR;
      132     3455    1   DCL DEFINER UBIN;
      133     3456    1   DCL 1 OC_PARAM_LENS UNAL,
      134     3457    1         2 LEN(0:1) UBIN BYTE UNAL;
      135     3458    1   DCL 1 OC_PARAMS UNAL,
      136     3459    1         2 MCA# UBIN BYTE UNAL,
      137     3460    1         2 CMD UBIN BYTE UNAL;
      138     3461    1   DCL OC_MSG SBIN;
      139     3462    1   DCL CMD_SIZE SBIN;
      140     3463    1   DCL UTS UBIN;
      141     3464    1   DCL 1 UTS1 REDEF UTS,
      142     3465    1         2 * BIT(4) UNAL,
      143     3466    1         2 HEX_DIGIT(0:7) UBIN(4) UNAL;
      144     3467    1   DCL FIRM_POS REDEF UTS UBIN;
      145     3468    1   DCL 1 UTS_SP,
      146     3469    1         2 BITE(0:7) CALIGNED,
      147     3470    1           3 * BIT(5) UNAL,
      148     3471    1           3 HEX_DIGIT UBIN(4) UNAL;
      149     3472    1   DCL FIRMLOAD_FAILED BIT(1) ALIGNED;
      150     3473    1   DCL SWITCH_STATE_FAILED BIT(1) ALIGNED;
      151     3474    1   DCL VARLEN UBIN;
      152     3475    1   DCL LOW_SCUX UBIN WORD;
      153     3476        /**/
      154     3477        /* BASED */
      155     3478        /**/
      156     3479        %MCA_HDR(NAME=MCA_HDR,STCLASS="BASED(BUF$)");
      157     3513        %MCA_HDR(NAME=INIT_HDR,STCLASS=CONSTANT);
      158     3547        %N$REQ(NAME=REQ,STCLASS="BASED(REQ$)");
      159     3605        %NI$DCT(NAME=DCT,STCLASS="BASED(DCT$)");
      160     3653        %NI$SQH(NAME=SQH,STCLASS="BASED(SQH$)");
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:22   
      161     3666    1   DCL CHAR1 CHAR(1) BASED;
      162     3667    1   DCL CHAR2 CHAR(2) BASED;
      163     3668    1   DCL CHAR3 CHAR(3) BASED;
      164     3669    1   DCL CHAR32 CHAR(32) BASED;
      165     3670    1   DCL CHARVAR CHAR(VARLEN) BASED;
      166     3671    1   DCL UTS_B UBIN BASED;
      167     3672    1   DCL UTS_SP_B BIT(72) ALIGNED BASED;
      168     3673        /**/
      169     3674        /* SYMREFS */
      170     3675        /**/
      171     3676    1   DCL S_CUN UBIN SYMREF;
      172     3677    1   DCL S_TIMR UBIN SYMREF;
      173     3678        /**/
      174     3679        /* CONSTANT */
      175     3680        /**/
      176     3681    1   DCL BORA(0:1) CHAR(1) CONSTANT INIT('B','A');
      177     3682    1   DCL LOAD_CMD CHAR(10) CONSTANT INIT('RLOAD IPC ');
      178     3683    1   DCL LOAD_CMD_SIZE UBIN CONSTANT INIT(13);
      179     3684    1   DCL CFG_CMD CHAR(11) CONSTANT INIT('READ CONFIG');
      180     3685    1   DCL CFG_CMD_SIZE UBIN CONSTANT INIT(12);
      181     3686    1   DCL SW_SCU_OFF_CMD CHAR(0) CONSTANT INIT('SP SWITCH SCU X PORT Y OFF');
      182     3687    1   DCL SW_SCU_OFF_CMD_SIZE UBIN CONSTANT INIT(27);
      183     3688    1   DCL SW_SCU_ON_CMD CHAR(0) CONSTANT INIT('SP SWITCH SCU X PORT Y ON');
      184     3689    1   DCL SW_SCU_ON_CMD_SIZE UBIN CONSTANT INIT(26);
      185     3690    1   DCL STATE_SCU_CMD CHAR(0) CONSTANT INIT('SP STATE SCU X');
      186     3691    1   DCL STATE_SCU_CMD_SIZE UBIN CONSTANT INIT(15);
      187     3692    1   DCL STATE_IMX_CMD CHAR(0) CONSTANT INIT('MCA X STATE');
      188     3693    1   DCL STATE_IMX_CMD_SIZE UBIN CONSTANT INIT(12);
      189     3694    1   DCL TIME_FETCH_CMD CHAR(19) CONSTANT INIT('SP CCINIT CP6 FETCH');
      190     3695    1   DCL TIME_FETCH_CMD_SIZE UBIN CONSTANT INIT(20);
      191     3696    1   DCL TIME_UPDATE_CMD CHAR(20) CONSTANT INIT('SP CCINIT CP6 UPDATE');
      192     3697    1   DCL TIME_UPDATE_CMD_SIZE UBIN CONSTANT INIT(21);
      193     3698    1   DCL TIME_UPDATE_DATA_SIZE UBIN CONSTANT INIT(8);
      194     3699        /**/
      195     3700        %EJECT;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:23   
      196     3701    1      IF BUFX >= 0 AND BUFX <= 3 THEN

   3701  1 000002   200005 470500                    LDP0    @BUFX,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000015 604000 1                  TMI     s:3704
         1 000005   000003 115007                    CMPA    3,DL
         1 000006   000015 605400 1                  TPNZ    s:3704

      197     3702    1         BUF$ = NI$IBUF.ENT.BUF$(BUFX);

   3702  1 000007   000000 235100                    LDA     0,,PR0
         1 000010   000001 735000                    ALS     1
         1 000011   000000 471400 xsym               LDP1    NI$IBUF$
         1 000012   100002 236105                    LDQ     2,AL,PR1
         1 000013   200007 756100                    STQ     BUF$,,AUTO
         1 000014   000016 710000 1                  TRA     s:3705

      198     3703    1       ELSE
      199     3704    1         ALTRETURN;

   3704  1 000015   000000 702200 xent               TSX2  ! X66_AALT

      200     3705    1      BUF_CMD$ = PINCRW(BUF$, SIZEW(INIT_HDR));

   3705  1 000016   000010 036003                    ADLQ    8,DU
         1 000017   200010 756100                    STQ     BUF_CMD$,,AUTO

      201     3706    1      LOW_SCUX = 0;

   3706  1 000020   200033 450100                    STZ     LOW_SCUX,,AUTO

      202     3707    1      IF ~H_DPS8000_SCU_INFO.SCU_STATUS.LOW_MEM(0) THEN

   3707  1 000021   000001 236000 xsym               LDQ     H_DPS8000_SCU_INFO+1
         1 000022   000026 736000                    QLS     22
         1 000023   400000 376003                    ANQ     -131072,DU
         1 000024   400000 676003                    ERQ     -131072,DU
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:24   
         1 000025   000030 600000 1                  TZE     s:3710

      203     3708    1         LOW_SCUX = 1;

   3708  1 000026   000001 235007                    LDA     1,DL
         1 000027   200033 755100                    STA     LOW_SCUX,,AUTO

      204     3709                                      /* Use MCA on IMX specified by provided DQH     */
      205     3710    1      IMX# = DQH.IOCHAN.IOM;

   3710  1 000030   200003 473500                    LDP3    @DQH,,AUTO
         1 000031   300001 236100                    LDQ     1,,PR3
         1 000032   000031 772000                    QRL     25
         1 000033   000003 376007                    ANQ     3,DL
         1 000034   200014 756100                    STQ     IMX#,,AUTO

      206     3711    1      DCTX = NI_MAINT_DCTX(IMX#);

   3711  1 000035   000000 235006 xsym               LDA     NI_MAINT_DCTX,QL
         1 000036   200011 755100                    STA     DCTX,,AUTO

      207     3712    1      DCT$ = N$DCT$(DCTX);

   3712  1 000037   000000 474400 xsym               LDP4    N$DCT$$
         1 000040   400000 236105                    LDQ     0,AL,PR4
         1 000041   200012 756100                    STQ     DCT$,,AUTO

      208     3713    1      SQH$ = DCT.SQH$;

   3713  1 000042   200012 475500                    LDP5    DCT$,,AUTO
         1 000043   500022 236100                    LDQ     18,,PR5
         1 000044   200017 756100                    STQ     SQH$,,AUTO

      209     3714    1      OC_PARAM_LENS.LEN(0) = 1;

   3714  1 000045   001000 236003                    LDQ     512,DU
         1 000046   200021 552140                    STBQ    OC_PARAM_LENS,'40'O,AUTO
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:25   

      210     3715    1      OC_PARAM_LENS.LEN(1) = 1;

   3715  1 000047   000001 236003                    LDQ     1,DU
         1 000050   200021 552120                    STBQ    OC_PARAM_LENS,'20'O,AUTO

      211     3716    1      OC_PARAMS.MCA# = IMX#;

   3716  1 000051   200014 236100                    LDQ     IMX#,,AUTO
         1 000052   000033 736000                    QLS     27
         1 000053   200022 552140                    STBQ    OC_PARAMS,'40'O,AUTO

      212     3717    1      OC_PARAMS.CMD = CMD;

   3717  1 000054   200004 476500                    LDP6    @CMD,,AUTO
         1 000055   600000 236100                    LDQ     0,,PR6
         1 000056   000022 736000                    QLS     18
         1 000057   200022 552120                    STBQ    OC_PARAMS,'20'O,AUTO

      213     3718    1      OC_MSG = 0;

   3718  1 000060   200023 450100                    STZ     OC_MSG,,AUTO

      214     3719                                      /* Retrieve and convert data to be sent to SP   */
      215     3720    2      IF CMD = TM_OC_TIME_WRITE# THEN DO;

   3720  1 000061   600000 235100                    LDA     0,,PR6
         1 000062   000004 115007                    CMPA    4,DL
         1 000063   000122 601000 1                  TNZ     s:3731

      216     3721        /* Convert current uts into seconds in order to update the
      217     3722            DPS8000 service processor clock, using XUD$UTS_DIFF_SEC.
      218     3723        */
      219     3724    2         CALL XUD$UTS_DIFF_SEC (UTS, BUF_CMD$ -> UTS_B, 0);

   3724  1 000064   000000 236000 2                  LDQ     0
         1 000065   200036 756100                    STQ     LOW_SCUX+3,,AUTO
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:26   
         1 000066   200010 236100                    LDQ     BUF_CMD$,,AUTO
         1 000067   200035 756100                    STQ     LOW_SCUX+2,,AUTO
         1 000070   200025 637500                    EPPR7   UTS,,AUTO
         1 000071   200034 457500                    STP7    LOW_SCUX+1,,AUTO
         1 000072   200034 630500                    EPPR0   LOW_SCUX+1,,AUTO
         1 000073   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000074   000000 701000 xent               TSX1    XUD$UTS_DIFF_SEC
         1 000075   000000 011000                    NOP     0

      220     3725    3         DO I = 0 TO 7;

   3725  1 000076   200013 450100                    STZ     I,,AUTO

      221     3726    3            UTS_SP.BITE(I) = BINBIT((UTS1.HEX_DIGIT(I) + 48),9);

   3726  1 000077   200013 235100                    LDA     I,,AUTO
         1 000100   000002 735000                    ALS     2
         1 000101   000103 605000 1                  TPL     s:3726+4
         1 000102   000044 035003                    ADLA    36,DU
         1 000103   003100 061505                    CSR     bolr='003'O
         1 000104   200025 040004                    BDSC    UTS,A,AUTO               by=0,bit=4,n=4
         1 000105   200034 000044                    BDSC    LOW_SCUX+1,,AUTO         by=0,bit=0,n=36
         1 000106   200034 236100                    LDQ     LOW_SCUX+1,,AUTO
         1 000107   000060 036007                    ADLQ    48,DL
         1 000110   000033 736000                    QLS     27
         1 000111   200035 756100                    STQ     LOW_SCUX+2,,AUTO
         1 000112   200013 235100                    LDA     I,,AUTO
         1 000113   000105 100500                    MLR     fill='000'O
         1 000114   200035 000004                    ADSC9   LOW_SCUX+2,,AUTO         cn=0,n=4
         1 000115   200026 000001                    ADSC9   UTS_SP,A,AUTO            cn=0,n=1

      222     3727    3            END;

   3727  1 000116   200013 054100                    AOS     I,,AUTO
         1 000117   200013 235100                    LDA     I,,AUTO
         1 000120   000007 115007                    CMPA    7,DL
         1 000121   000077 604400 1                  TMOZ    s:3726
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:27   

      223     3728    2         END;

      224     3729                                                /* Reserve the MCA                    */
      225     3730           %LOCK(G#=SQH.GATE);

   3731  1 000122   200017 630500                    EPPR0   SQH$,,AUTO
         1 000123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000124   000000 701000 xent               TSX1    HFC$LOCK
         1 000125   000000 011000                    NOP     0

      226     3733    2      IF DCT.MCA.RESERVED THEN DO;

   3733  1 000126   200012 470500                    LDP0    DCT$,,AUTO
         1 000127   000030 234100                    SZN     24,,PR0
         1 000130   000134 605000 1                  TPL     s:3737

      227     3734    2         OC_MSG = TM_RESERVED_MSG#;

   3734  1 000131   001162 235007                    LDA     626,DL
         1 000132   200023 755100                    STA     OC_MSG,,AUTO

      228     3735    2         GOTO ERR_UNL;

   3735  1 000133   001200 710000 1                  TRA     ERR_UNL

      229     3736    2         END;
      230     3737    1      DCT.MCA.RESERVED = '1'B;

   3737  1 000134   400000 236003                    LDQ     -131072,DU
         1 000135   000030 256100                    ORSQ    24,,PR0

      231     3738    1      IF S_TIMR ~= 2 AND S_CUN ~= 0 THEN

   3738  1 000136   000000 235000 xsym               LDA     S_TIMR
         1 000137   000002 115007                    CMPA    2,DL
         1 000140   000145 600000 1                  TZE     s:3741
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:28   
         1 000141   000000 235000 xsym               LDA     S_CUN
         1 000142   000145 600000 1                  TZE     s:3741

      232     3739    1         DCT.MCA.USER# = S_CUN;

   3739  1 000143   000031 755100                    STA     25,,PR0
         1 000144   000146 710000 1                  TRA     s:3743

      233     3740    1       ELSE
      234     3741    1         DCT.MCA.USER# = 0;

   3741  1 000145   000031 450100                    STZ     25,,PR0

      235     3742           %UNLOCK(G#=SQH.GATE);

   3743  1 000146   200017 630500                    EPPR0   SQH$,,AUTO
         1 000147   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000150   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000151   000000 011000                    NOP     0

      236     3745    2      CALL NIQ$GET(REQ$) WHENALTRETURN DO;

   3745  1 000152   200016 630500                    EPPR0   REQ$,,AUTO
         1 000153   200034 450500                    STP0    LOW_SCUX+1,,AUTO
         1 000154   200034 630500                    EPPR0   LOW_SCUX+1,,AUTO
         1 000155   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000156   000000 701000 xent               TSX1    NIQ$GET
         1 000157   000161 702000 1                  TSX2    s:3746
         1 000160   000164 710000 1                  TRA     s:3749

      237     3746    2         OC_MSG = TM_FAILED_MSG#;

   3746  1 000161   001165 235007                    LDA     629,DL
         1 000162   200023 755100                    STA     OC_MSG,,AUTO

      238     3747    2         GOTO ERR_NOREQ;

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:29   
   3747  1 000163   001171 710000 1                  TRA     ERR_NOREQ

      239     3748    2         END;
      240     3749    1      I=1;

   3749  1 000164   000001 235007                    LDA     1,DL
         1 000165   200013 755100                    STA     I,,AUTO

      241     3750    1   TRY_AGAIN:
      242     3751    1      FIRMLOAD_FAILED = '0'B;

   3751  1 000166   200030 450100       TRY_AGAIN    STZ     FIRMLOAD_FAILED,,AUTO

      243     3752    1      SWITCH_STATE_FAILED = '0'B;

   3752  1 000167   200031 450100                    STZ     SWITCH_STATE_FAILED,,AUTO

      244     3753                                                /* Do a RESET STATUS on channel 3     */
      245     3754    1      MCA_HDR = INIT_HDR;

   3754  1 000170   200007 470500                    LDP0    BUF$,,AUTO
         1 000171   000100 100400                    MLR     fill='000'O
         1 000172   000000 000040 0                  ADSC9   INIT_HDR                 cn=0,n=32
         1 000173   000000 000040                    ADSC9   0,,PR0                   cn=0,n=32

      246     3755    1      MCA_HDR.DEFINER = %MCA_DEFINER_STATUS;

   3755  1 000174   000011 236003                    LDQ     9,DU
         1 000175   000000 552120                    STBQ    0,'20'O,PR0

      247     3756    1      MCA_HDR.TBYTES = 0;

   3756  1 000176   000000 220003                    LDX0    0,DU
         1 000177   000007 440100                    SXL0    7,,PR0

      248     3757    1      REQ.FC = %N_RESET;

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:30   
   3757  1 000200   200016 471500                    LDP1    REQ$,,AUTO
         1 000201   000022 236007                    LDQ     18,DL
         1 000202   100003 552104                    STBQ    3,'04'O,PR1

      249     3758    1      REQ.BUFSIZE = SIZEC(INIT_HDR);

   3758  1 000203   200016 471500                    LDP1    REQ$,,AUTO
         1 000204   100004 236100                    LDQ     4,,PR1
         1 000205   177777 376007                    ANQ     65535,DL
         1 000206   000010 276003                    ORQ     8,DU
         1 000207   100004 756100                    STQ     4,,PR1

      250     3759    1      REQ.OPFLG.BPF = '1'B;

   3759  1 000210   200016 471500                    LDP1    REQ$,,AUTO
         1 000211   000010 236007                    LDQ     8,DL
         1 000212   100004 256100                    ORSQ    4,,PR1

      251     3760    1      REQ.OPFLG.HOLD = '1'B;

   3760  1 000213   200016 471500                    LDP1    REQ$,,AUTO
         1 000214   000004 236007                    LDQ     4,DL
         1 000215   100004 256100                    ORSQ    4,,PR1

      252     3761    2      IF DCT.MCA.USER# ~= 0 THEN DO;

   3761  1 000216   200012 471500                    LDP1    DCT$,,AUTO
         1 000217   100031 235100                    LDA     25,,PR1
         1 000220   000227 600000 1                  TZE     s:3765

      253     3762    2         REQ.OPFLG.USER = '1'B;

   3762  1 000221   200016 473500                    LDP3    REQ$,,AUTO
         1 000222   000400 236007                    LDQ     256,DL
         1 000223   300004 256100                    ORSQ    4,,PR3

      254     3763    2         REQ.OPFLG.WAIT = '1'B;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:31   

   3763  1 000224   200016 473500                    LDP3    REQ$,,AUTO
         1 000225   000020 236007                    LDQ     16,DL
         1 000226   300004 256100                    ORSQ    4,,PR3

      255     3764    2         END;

      256     3765    1      REQ.BUF$ = BUF$;

   3765  1 000227   200007 236100                    LDQ     BUF$,,AUTO
         1 000230   200016 473500                    LDP3    REQ$,,AUTO
         1 000231   300005 756100                    STQ     5,,PR3

      257     3766    1      REQ.DLA.DCTX = DCTX;

   3766  1 000232   200016 473500                    LDP3    REQ$,,AUTO
         1 000233   200011 236100                    LDQ     DCTX,,AUTO
         1 000234   000025 736000                    QLS     21
         1 000235   300001 676100                    ERQ     1,,PR3
         1 000236   777770 376003                    ANQ     -8,DU
         1 000237   300001 656100                    ERSQ    1,,PR3

      258     3767                                                /* Do the IO                          */
      259     3768    1      CALL NIO$QUE(REQ) ALTRET(ERR);

   3768  1 000240   200016 630500                    EPPR0   REQ$,,AUTO
         1 000241   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000242   000000 701000 xent               TSX1    NIO$QUE
         1 000243   001155 702000 1                  TSX2    ERR

      260     3769                                                /* WAIT FOR I/O TO COMPLETE           */
      261     3770    1      CALL NIO$IOSPIN(REQ);

   3770  1 000244   200016 630500                    EPPR0   REQ$,,AUTO
         1 000245   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000246   000000 701000 xent               TSX1    NIO$IOSPIN
         1 000247   000000 011000                    NOP     0
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:32   

      262     3771    1      IF REQ.TYC ~= %TYC_EGV

   3771  1 000250   200016 470500                    LDP0    REQ$,,AUTO
         1 000251   000021 236100                    LDQ     17,,PR0
         1 000252   000030 116000 xsym               CMPQ    B_VECTNIL+24
         1 000253   001155 601000 1                  TNZ     ERR

      263     3772    1       THEN GOTO ERR;
      264     3773                                                /* Perform the specified command      */
      265     3774    1      MCA_HDR = INIT_HDR;

   3774  1 000254   200007 471500                    LDP1    BUF$,,AUTO
         1 000255   000100 100400                    MLR     fill='000'O
         1 000256   000000 000040 0                  ADSC9   INIT_HDR                 cn=0,n=32
         1 000257   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32

      266     3775    1      MCA_HDR.DEFINER = %MCA_DEFINER_DATA;

   3775  1 000260   000007 236003                    LDQ     7,DU
         1 000261   100000 552120                    STBQ    0,'20'O,PR1

      267     3776    2      DO CASE (CMD);

   3776  1 000262   200004 470500                    LDP0    @CMD,,AUTO
         1 000263   000000 235100                    LDA     0,,PR0
         1 000264   000014 115007                    CMPA    12,DL
         1 000265   000267 602005 1                  TNC     s:3776+5,AL
         1 000266   000521 710000 1                  TRA     s:3827
         1 000267   000521 710000 1                  TRA     s:3827
         1 000270   000325 710000 1                  TRA     s:3783
         1 000271   000303 710000 1                  TRA     s:3778
         1 000272   000504 710000 1                  TRA     s:3821
         1 000273   000513 710000 1                  TRA     s:3824
         1 000274   000334 710000 1                  TRA     s:3786
         1 000275   000355 710000 1                  TRA     s:3792
         1 000276   000376 710000 1                  TRA     s:3798
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:33   
         1 000277   000417 710000 1                  TRA     s:3803
         1 000300   000440 710000 1                  TRA     s:3808
         1 000301   000453 710000 1                  TRA     s:3812
         1 000302   000471 710000 1                  TRA     s:3817

      268     3777    2       CASE (TM_OC_LOADFW#);

      269     3778    2         CMD_SIZE = LOAD_CMD_SIZE;

   3778  1 000303   000014 235000 0                  LDA     LOAD_CMD_SIZE
         1 000304   200024 755100                    STA     CMD_SIZE,,AUTO

      270     3779    2         BUF_CMD$ -> CHAR32 = LOAD_CMD;

   3779  1 000305   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000306   040100 100400                    MLR     fill='040'O
         1 000307   000011 000012 0                  ADSC9   LOAD_CMD                 cn=0,n=10
         1 000310   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      271     3780    2         CALL BINCHAR(IPCNUM,DQH.IPCNUM);

   3780  1 000311   200003 474500                    LDP4    @DQH,,AUTO
         1 000312   400020 236100                    LDQ     16,,PR4
         1 000313   000777 376007                    ANQ     511,DL
         1 000314   000000 235003                    LDA     0,DU
         1 000315   200034 757100                    STAQ    LOW_SCUX+1,,AUTO
         1 000316   000100 301500                    BTD
         1 000317   200034 000010                    NDSC9   LOW_SCUX+1,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         1 000320   200015 030002                    NDSC9   IPCNUM,,AUTO             cn=0,s=nosgn,sf=0,n=2

      272     3781    2         PINCRC(BUF_CMD$, 10) -> CHAR2 = IPCNUM;

   3781  1 000321   040100 100500                    MLR     fill='040'O
         1 000322   200015 000002                    ADSC9   IPCNUM,,AUTO             cn=0,n=2
         1 000323   300002 400002                    ADSC9   2,,PR3                   cn=2,n=2
         1 000324   000521 710000 1                  TRA     s:3827

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:34   
      273     3782    2       CASE (TM_OC_CONFIG#);

      274     3783    2         CMD_SIZE = CFG_CMD_SIZE;

   3783  1 000325   000020 235000 0                  LDA     CFG_CMD_SIZE
         1 000326   200024 755100                    STA     CMD_SIZE,,AUTO

      275     3784    2         BUF_CMD$ -> CHAR32 = CFG_CMD;

   3784  1 000327   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000330   040100 100400                    MLR     fill='040'O
         1 000331   000015 000013 0                  ADSC9   CFG_CMD                  cn=0,n=11
         1 000332   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32
         1 000333   000521 710000 1                  TRA     s:3827

      276     3785    2       CASE (TM_OC_SWITCH_CPU_OFF#);

      277     3786    2         CMD_SIZE = SW_SCU_OFF_CMD_SIZE;

   3786  1 000334   000030 235000 0                  LDA     SW_SCU_OFF_CMD_SIZE
         1 000335   200024 755100                    STA     CMD_SIZE,,AUTO

      278     3787    2         BUF_CMD$->CHAR32 = SW_SCU_OFF_CMD;

   3787  1 000336   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000337   040100 100400                    MLR     fill='040'O
         1 000340   000021 000032 0                  ADSC9   SW_SCU_OFF_CMD           cn=0,n=26
         1 000341   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      279     3788    2         PINCRC(BUF_CMD$,10)->CHAR3 = 'CPU';

   3788  1 000342   040100 100400                    MLR     fill='040'O
         1 000343   000067 000003 0                  ADSC9   TIME_UPDATE_DATA_SIZE+1  cn=0,n=3
         1 000344   300002 400003                    ADSC9   2,,PR3                   cn=2,n=3

      280     3789    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,14,1),CMD_NUM);

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:35   
   3789  1 000345   200006 474500                    LDP4    @CMD_NUM,,AUTO
         1 000346   000100 301500                    BTD
         1 000347   400000 000004                    NDSC9   0,,PR4                   cn=0,s=lsgnf,sf=0,n=4
         1 000350   300003 430001                    NDSC9   3,,PR3                   cn=2,s=nosgn,sf=0,n=1

      281     3790    2         PINCRC(BUF_CMD$,21)->CHAR1 = BORA(0);

   3790  1 000351   040100 100400                    MLR     fill='040'O
         1 000352   000010 000001 0                  ADSC9   BORA                     cn=0,n=1
         1 000353   300005 200001                    ADSC9   5,,PR3                   cn=1,n=1
         1 000354   000521 710000 1                  TRA     s:3827

      282     3791    2       CASE (TM_OC_SWITCH_CPU_ON#);

      283     3792    2         CMD_SIZE = SW_SCU_ON_CMD_SIZE;

   3792  1 000355   000040 235000 0                  LDA     SW_SCU_ON_CMD_SIZE
         1 000356   200024 755100                    STA     CMD_SIZE,,AUTO

      284     3793    2         BUF_CMD$->CHAR32 = SW_SCU_ON_CMD;

   3793  1 000357   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000360   040100 100400                    MLR     fill='040'O
         1 000361   000031 000031 0                  ADSC9   SW_SCU_ON_CMD            cn=0,n=25
         1 000362   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      285     3794    2         PINCRC(BUF_CMD$,10)->CHAR3 = 'CPU';

   3794  1 000363   040100 100400                    MLR     fill='040'O
         1 000364   000067 000003 0                  ADSC9   TIME_UPDATE_DATA_SIZE+1  cn=0,n=3
         1 000365   300002 400003                    ADSC9   2,,PR3                   cn=2,n=3

      286     3795    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,14,1),CMD_NUM);

   3795  1 000366   200006 474500                    LDP4    @CMD_NUM,,AUTO
         1 000367   000100 301500                    BTD
         1 000370   400000 000004                    NDSC9   0,,PR4                   cn=0,s=lsgnf,sf=0,n=4
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:36   
         1 000371   300003 430001                    NDSC9   3,,PR3                   cn=2,s=nosgn,sf=0,n=1

      287     3796    2         PINCRC(BUF_CMD$,21)->CHAR1 = BORA(0);

   3796  1 000372   040100 100400                    MLR     fill='040'O
         1 000373   000010 000001 0                  ADSC9   BORA                     cn=0,n=1
         1 000374   300005 200001                    ADSC9   5,,PR3                   cn=1,n=1
         1 000375   000521 710000 1                  TRA     s:3827

      288     3797    2       CASE (TM_OC_SWITCH_SCU_OFF#);

      289     3798    2         CMD_SIZE = SW_SCU_OFF_CMD_SIZE;

   3798  1 000376   000030 235000 0                  LDA     SW_SCU_OFF_CMD_SIZE
         1 000377   200024 755100                    STA     CMD_SIZE,,AUTO

      290     3799    2         BUF_CMD$->CHAR32 = SW_SCU_OFF_CMD;

   3799  1 000400   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000401   040100 100400                    MLR     fill='040'O
         1 000402   000021 000032 0                  ADSC9   SW_SCU_OFF_CMD           cn=0,n=26
         1 000403   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      291     3800    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,14,1),LOW_SCUX);

   3800  1 000404   200033 235100                    LDA     LOW_SCUX,,AUTO
         1 000405   000044 773000                    LRL     36
         1 000406   200034 757100                    STAQ    LOW_SCUX+1,,AUTO
         1 000407   000100 301500                    BTD
         1 000410   200034 000010                    NDSC9   LOW_SCUX+1,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         1 000411   300003 430001                    NDSC9   3,,PR3                   cn=2,s=nosgn,sf=0,n=1

      292     3801    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,21,1),CMD_NUM);

   3801  1 000412   200006 474500                    LDP4    @CMD_NUM,,AUTO
         1 000413   000100 301500                    BTD
         1 000414   400000 000004                    NDSC9   0,,PR4                   cn=0,s=lsgnf,sf=0,n=4
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:37   
         1 000415   300005 230001                    NDSC9   5,,PR3                   cn=1,s=nosgn,sf=0,n=1
         1 000416   000521 710000 1                  TRA     s:3827

      293     3802    2       CASE (TM_OC_SWITCH_SCU_ON#);

      294     3803    2         CMD_SIZE = SW_SCU_ON_CMD_SIZE;

   3803  1 000417   000040 235000 0                  LDA     SW_SCU_ON_CMD_SIZE
         1 000420   200024 755100                    STA     CMD_SIZE,,AUTO

      295     3804    2         BUF_CMD$->CHAR32 = SW_SCU_ON_CMD;

   3804  1 000421   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000422   040100 100400                    MLR     fill='040'O
         1 000423   000031 000031 0                  ADSC9   SW_SCU_ON_CMD            cn=0,n=25
         1 000424   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      296     3805    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,14,1),LOW_SCUX);

   3805  1 000425   200033 235100                    LDA     LOW_SCUX,,AUTO
         1 000426   000044 773000                    LRL     36
         1 000427   200034 757100                    STAQ    LOW_SCUX+1,,AUTO
         1 000430   000100 301500                    BTD
         1 000431   200034 000010                    NDSC9   LOW_SCUX+1,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         1 000432   300003 430001                    NDSC9   3,,PR3                   cn=2,s=nosgn,sf=0,n=1

      297     3806    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,21,1),CMD_NUM);

   3806  1 000433   200006 474500                    LDP4    @CMD_NUM,,AUTO
         1 000434   000100 301500                    BTD
         1 000435   400000 000004                    NDSC9   0,,PR4                   cn=0,s=lsgnf,sf=0,n=4
         1 000436   300005 230001                    NDSC9   5,,PR3                   cn=1,s=nosgn,sf=0,n=1
         1 000437   000521 710000 1                  TRA     s:3827

      298     3807    2       CASE (TM_OC_STATE_SCU#);

      299     3808    2         CMD_SIZE = STATE_SCU_CMD_SIZE;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:38   

   3808  1 000440   000045 235000 0                  LDA     STATE_SCU_CMD_SIZE
         1 000441   200024 755100                    STA     CMD_SIZE,,AUTO

      300     3809    2         BUF_CMD$->CHAR32 = STATE_SCU_CMD;

   3809  1 000442   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000443   040100 100400                    MLR     fill='040'O
         1 000444   000041 000016 0                  ADSC9   STATE_SCU_CMD            cn=0,n=14
         1 000445   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      301     3810    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,13,1),CMD_NUM);

   3810  1 000446   200006 474500                    LDP4    @CMD_NUM,,AUTO
         1 000447   000100 301500                    BTD
         1 000450   400000 000004                    NDSC9   0,,PR4                   cn=0,s=lsgnf,sf=0,n=4
         1 000451   300003 230001                    NDSC9   3,,PR3                   cn=1,s=nosgn,sf=0,n=1
         1 000452   000521 710000 1                  TRA     s:3827

      302     3811    2       CASE (TM_OC_STATE_CPU#);

      303     3812    2         CMD_SIZE = STATE_SCU_CMD_SIZE;

   3812  1 000453   000045 235000 0                  LDA     STATE_SCU_CMD_SIZE
         1 000454   200024 755100                    STA     CMD_SIZE,,AUTO

      304     3813    2         BUF_CMD$->CHAR32 = STATE_SCU_CMD;

   3813  1 000455   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000456   040100 100400                    MLR     fill='040'O
         1 000457   000041 000016 0                  ADSC9   STATE_SCU_CMD            cn=0,n=14
         1 000460   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      305     3814    2         PINCRC(BUF_CMD$,9)->CHAR3 = 'CPU';

   3814  1 000461   040100 100400                    MLR     fill='040'O
         1 000462   000067 000003 0                  ADSC9   TIME_UPDATE_DATA_SIZE+1  cn=0,n=3
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:39   
         1 000463   300002 200003                    ADSC9   2,,PR3                   cn=1,n=3

      306     3815    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,13,1),CMD_NUM);

   3815  1 000464   200006 474500                    LDP4    @CMD_NUM,,AUTO
         1 000465   000100 301500                    BTD
         1 000466   400000 000004                    NDSC9   0,,PR4                   cn=0,s=lsgnf,sf=0,n=4
         1 000467   300003 230001                    NDSC9   3,,PR3                   cn=1,s=nosgn,sf=0,n=1
         1 000470   000521 710000 1                  TRA     s:3827

      307     3816    2       CASE (TM_OC_STATE_IMX#);

      308     3817    2         CMD_SIZE = STATE_IMX_CMD_SIZE;

   3817  1 000471   000051 235000 0                  LDA     STATE_IMX_CMD_SIZE
         1 000472   200024 755100                    STA     CMD_SIZE,,AUTO

      309     3818    2         BUF_CMD$->CHAR32 = STATE_IMX_CMD;

   3818  1 000473   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000474   040100 100400                    MLR     fill='040'O
         1 000475   000046 000013 0                  ADSC9   STATE_IMX_CMD            cn=0,n=11
         1 000476   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      310     3819    2         CALL BINCHAR(SUBSTR(BUF_CMD$->CHAR32,4,1),CMD_NUM);

   3819  1 000477   200006 474500                    LDP4    @CMD_NUM,,AUTO
         1 000500   000100 301500                    BTD
         1 000501   400000 000004                    NDSC9   0,,PR4                   cn=0,s=lsgnf,sf=0,n=4
         1 000502   300001 030001                    NDSC9   1,,PR3                   cn=0,s=nosgn,sf=0,n=1
         1 000503   000521 710000 1                  TRA     s:3827

      311     3820    2       CASE (TM_OC_TIME_READ#);

      312     3821    2         CMD_SIZE = TIME_FETCH_CMD_SIZE;

   3821  1 000504   000057 235000 0                  LDA     TIME_FETCH_CMD_SIZE
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:40   
         1 000505   200024 755100                    STA     CMD_SIZE,,AUTO

      313     3822    2         BUF_CMD$ -> CHAR32 = TIME_FETCH_CMD;

   3822  1 000506   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000507   040100 100400                    MLR     fill='040'O
         1 000510   000052 000023 0                  ADSC9   TIME_FETCH_CMD           cn=0,n=19
         1 000511   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32
         1 000512   000521 710000 1                  TRA     s:3827

      314     3823    2       CASE (TM_OC_TIME_WRITE#);

      315     3824    2         CMD_SIZE = TIME_UPDATE_CMD_SIZE;

   3824  1 000513   000065 235000 0                  LDA     TIME_UPDATE_CMD_SIZE
         1 000514   200024 755100                    STA     CMD_SIZE,,AUTO

      316     3825    2         BUF_CMD$ -> CHAR32 = TIME_UPDATE_CMD;

   3825  1 000515   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000516   040100 100400                    MLR     fill='040'O
         1 000517   000060 000024 0                  ADSC9   TIME_UPDATE_CMD          cn=0,n=20
         1 000520   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32

      317     3826    2       END;

      318     3827    1      MCA_HDR.TBYTES = CMD_SIZE;

   3827  1 000521   200024 720100                    LXL0    CMD_SIZE,,AUTO
         1 000522   100007 440100                    SXL0    7,,PR1

      319     3828    1      PINCRC(BUF_CMD$, CMD_SIZE-1) -> CHAR1 = BITASC('015'O); /* CARRIAGE RETURN */

   3828  1 000523   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000524   200024 235100                    LDA     CMD_SIZE,,AUTO
         1 000525   040105 100400                    MLR     fill='040'O
         1 000526   000001 000001 2                  ADSC9   1                        cn=0,n=1
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:41   
         1 000527   377777 600001                    ADSC9   -1,A,PR3                 cn=3,n=1

      320     3829    1      REQ.BUFSIZE = SIZEC(INIT_HDR) + CMD_SIZE;

   3829  1 000530   200016 474500                    LDP4    REQ$,,AUTO
         1 000531   200024 236100                    LDQ     CMD_SIZE,,AUTO
         1 000532   000040 036007                    ADLQ    32,DL
         1 000533   000020 736000                    QLS     16
         1 000534   400004 676100                    ERQ     4,,PR4
         1 000535   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000536   400004 656100                    ERSQ    4,,PR4

      321     3830    1      REQ.FC = %N_WRASC;

   3830  1 000537   200016 474500                    LDP4    REQ$,,AUTO
         1 000540   000005 236007                    LDQ     5,DL
         1 000541   400003 552104                    STBQ    3,'04'O,PR4

      322     3831                                                /* Perform the IO                     */
      323     3832    1      CALL NIO$QUE(REQ) ALTRET(ERR);

   3832  1 000542   200016 630500                    EPPR0   REQ$,,AUTO
         1 000543   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000544   000000 701000 xent               TSX1    NIO$QUE
         1 000545   001155 702000 1                  TSX2    ERR

      324     3833    1      CALL NIO$IOSPIN(REQ);

   3833  1 000546   200016 630500                    EPPR0   REQ$,,AUTO
         1 000547   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000550   000000 701000 xent               TSX1    NIO$IOSPIN
         1 000551   000000 011000                    NOP     0

      325     3834    1      IF REQ.TYC ~= %TYC_EGV

   3834  1 000552   200016 470500                    LDP0    REQ$,,AUTO
         1 000553   000021 236100                    LDQ     17,,PR0
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:42   
         1 000554   000030 116000 xsym               CMPQ    B_VECTNIL+24
         1 000555   001155 601000 1                  TNZ     ERR

      326     3835    1       THEN GOTO ERR;
      327     3836    1   STATUS_LOOP:
      328     3837    2      DO SELECT (BINBIT(REQ.STATUS.MAJOR,4));

   3837  1 000556   200016 470500       STATUS_LOOP  LDP0    REQ$,,AUTO
         1 000557   000014 236100                    LDQ     12,,PR0
         1 000560   000036 772000                    QRL     30
         1 000561   000017 376007                    ANQ     15,DL
         1 000562   000040 736000                    QLS     32
         1 000563   000000 116003                    CMPQ    0,DU
         1 000564   000571 602000 1                  TNC     s:3839
         1 000565   000571 600000 1                  TZE     s:3839
         1 000566   150000 116003                    CMPQ    53248,DU
         1 000567   001060 601000 1                  TNZ     BAD_STATUS
         1 000570   001051 710000 1                  TRA     s:3905

      329     3838    2         SELECT ('0'O);

      330     3839    3         DO SELECT (REQ.STATUS.MINOR);

   3839  1 000571   000014 236100                    LDQ     12,,PR0
         1 000572   007700 376003                    ANQ     4032,DU
         1 000573   000300 116003                    CMPQ    192,DU
         1 000574   000606 602000 1                  TNC     s:3839+13
         1 000575   000014 236100                    LDQ     12,,PR0
         1 000576   007700 376003                    ANQ     4032,DU
         1 000577   000300 116003                    CMPQ    192,DU
         1 000600   001045 600000 1                  TZE     s:3899
         1 000601   000014 236100                    LDQ     12,,PR0
         1 000602   007700 376003                    ANQ     4032,DU
         1 000603   004000 116003                    CMPQ    2048,DU
         1 000604   001050 601000 1                  TNZ     s:3902
         1 000605   000613 710000 1                  TRA     s:3841
         1 000606   000014 236100                    LDQ     12,,PR0
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:43   
         1 000607   007700 376003                    ANQ     4032,DU
         1 000610   000200 116003                    CMPQ    128,DU
         1 000611   001050 601000 1                  TNZ     s:3902
         1 000612   001040 710000 1                  TRA     s:3894

      331     3840    3            SELECT ('40'O);

      332     3841    3            IF MCA_HDR.DEFINER = %MCA_DEFINER_READ

   3841  1 000613   200007 471500                    LDP1    BUF$,,AUTO
         1 000614   100000 236100                    LDQ     0,,PR1
         1 000615   000777 376003                    ANQ     511,DU
         1 000616   000001 116003                    CMPQ    1,DU
         1 000617   000623 601000 1                  TNZ     s:3843

      333     3842    3             THEN DEFINER = %MCA_DEFINER_STATUS;

   3842  1 000620   000011 235007                    LDA     9,DL
         1 000621   200020 755100                    STA     DEFINER,,AUTO
         1 000622   000632 710000 1                  TRA     s:3846

      334     3843    3             ELSE IF MCA_HDR.DEFINER = %MCA_DEFINER_READDATA

   3843  1 000623   100000 236100                    LDQ     0,,PR1
         1 000624   000777 376003                    ANQ     511,DU
         1 000625   000002 116003                    CMPQ    2,DU
         1 000626   001060 601000 1                  TNZ     BAD_STATUS

      335     3844    3                THEN DEFINER = %MCA_DEFINER_DATA;

   3844  1 000627   000007 235007                    LDA     7,DL
         1 000630   200020 755100                    STA     DEFINER,,AUTO
         1 000631   000632 710000 1                  TRA     s:3846

      336     3845    3                ELSE GOTO BAD_STATUS;
      337     3846    4            IF (CMD=TM_OC_LOADFW#) THEN DO;

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:44   
   3846  1 000632   200004 473500                    LDP3    @CMD,,AUTO
         1 000633   300000 235100                    LDA     0,,PR3
         1 000634   000002 115007                    CMPA    2,DL
         1 000635   000657 601000 1                  TNZ     s:3853

      338     3847    4               VARLEN = MCA_HDR.SRCLEN;

   3847  1 000636   100006 236100                    LDQ     6,,PR1
         1 000637   000022 732000                    QRS     18
         1 000640   200032 756100                    STQ     VARLEN,,AUTO

      339     3848    4               CALL INDEX (FIRM_POS,'STATE   :ic',BUF_CMD$->CHARVAR);

   3848  1 000641   200025 631500                    EPPR1   UTS,,AUTO
         1 000642   000070 633400 0                  EPPR3   TIME_UPDATE_DATA_SIZE+2
         1 000643   000013 223003                    LDX3    11,DU
         1 000644   200010 470500                    LDP0    BUF_CMD$,,AUTO
         1 000645   000000 620006                    EAX0    0,QL
         1 000646   000000 236003                    LDQ     0,DU
         1 000647   000000 701000 xent               TSX1    X66_INDEX
         1 000650   000000 011000                    NOP     0

      340     3849    4               IF (FIRM_POS<VARLEN) THEN

   3849  1 000651   200025 236100                    LDQ     UTS,,AUTO
         1 000652   200032 116100                    CMPQ    VARLEN,,AUTO
         1 000653   000731 603000 1                  TRC     s:3868

      341     3850    4                  FIRMLOAD_FAILED = '1'B;

   3850  1 000654   400000 236003                    LDQ     -131072,DU
         1 000655   200030 756100                    STQ     FIRMLOAD_FAILED,,AUTO

      342     3851    4               END;

   3851  1 000656   000731 710000 1                  TRA     s:3868

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:45   
      343     3852    3             ELSE
      344     3853    4               IF (CMD >= TM_OC_SWITCH_CPU_OFF#) THEN DO;

   3853  1 000657   000005 115007                    CMPA    5,DL
         1 000660   000731 602000 1                  TNC     s:3868

      345     3854    4                  VARLEN = MCA_HDR.SRCLEN;

   3854  1 000661   100006 236100                    LDQ     6,,PR1
         1 000662   000022 732000                    QRS     18
         1 000663   200032 756100                    STQ     VARLEN,,AUTO

      346     3855    4                  CALL INDEX(FIRM_POS,'<<',BUF_CMD$->CHARVAR);

   3855  1 000664   200010 474500                    LDP4    BUF_CMD$,,AUTO
         1 000665   000000 620006                    EAX0    0,QL
         1 000666   000000 120540                    SCD
         1 000667   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 000670   000073 000002 0                  ADSC9   TIME_UPDATE_DATA_SIZE+5  cn=0,n=2
         1 000671   200025 000100                    ARG     UTS,,AUTO
         1 000672   000674 607000 1                  TTF     s:3856
         1 000673   200025 054100                    AOS     UTS,,AUTO

      347     3856    5                  IF (FIRM_POS < VARLEN) THEN DO;

   3856  1 000674   200025 236100                    LDQ     UTS,,AUTO
         1 000675   200032 116100                    CMPQ    VARLEN,,AUTO
         1 000676   000706 603000 1                  TRC     s:3861

      348     3857    5                     IF SUBSTR(BUF_CMD$->CHARVAR,FIRM_POS+2,4) = '8000' THEN

   3857  1 000677   040000 106506                    CMPC    fill='040'O
         1 000700   400000 400004                    ADSC9   0,Q,PR4                  cn=2,n=4
         1 000701   000074 000004 0                  ADSC9   TIME_UPDATE_DATA_SIZE+6  cn=0,n=4
         1 000702   000731 601000 1                  TNZ     s:3868

      349     3858    5                        SWITCH_STATE_FAILED = '1'B;
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:46   

   3858  1 000703   400000 236003                    LDQ     -131072,DU
         1 000704   200031 756100                    STQ     SWITCH_STATE_FAILED,,AUTO

      350     3859    5                     END;

   3859  1 000705   000731 710000 1                  TRA     s:3868

      351     3860    5                   ELSE DO;

      352     3861    5                     CALL INDEX(FIRM_POS,'CONFIGURED',BUF_CMD$->CHARVAR);

   3861  1 000706   200025 631500                    EPPR1   UTS,,AUTO
         1 000707   000075 633400 0                  EPPR3   TIME_UPDATE_DATA_SIZE+7
         1 000710   000012 223003                    LDX3    10,DU
         1 000711   400000 630500                    EPPR0   0,,PR4
         1 000712   200032 720100                    LXL0    VARLEN,,AUTO
         1 000713   000000 236003                    LDQ     0,DU
         1 000714   000000 701000 xent               TSX1    X66_INDEX
         1 000715   000000 011000                    NOP     0

      353     3862    6                     IF (FIRM_POS < VARLEN) THEN DO;

   3862  1 000716   200025 236100                    LDQ     UTS,,AUTO
         1 000717   200032 116100                    CMPQ    VARLEN,,AUTO
         1 000720   000731 603000 1                  TRC     s:3868

      354     3863    6                        CALL INDEX(FIRM_POS,'S',BUF_CMD$->CHARVAR);

   3863  1 000721   000000 124540                    SCM     mask='000'O
         1 000722   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 000723   000002 000001 2                  ADSC9   2                        cn=0,n=1
         1 000724   200025 000100                    ARG     UTS,,AUTO

      355     3864    6                        H_DPS8000_CONFIG_NAME = SUBSTR(BUF_CMD$->CHARVAR,FIRM_POS,12);

   3864  1 000725   200025 235100                    LDA     UTS,,AUTO
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:47   
         1 000726   040000 100505                    MLR     fill='040'O
         1 000727   400000 000014                    ADSC9   0,A,PR4                  cn=0,n=12
         1 000730   000000 000014 xsym               ADSC9   H_DPS8000_CONFIG_NAME    cn=0,n=12

      356     3865    6                        END;

      357     3866    5                     END;

      358     3867    4                  END;

      359     3868    3            MCA_HDR = INIT_HDR;

   3868  1 000731   200007 470500                    LDP0    BUF$,,AUTO
         1 000732   000100 100400                    MLR     fill='000'O
         1 000733   000000 000040 0                  ADSC9   INIT_HDR                 cn=0,n=32
         1 000734   000000 000040                    ADSC9   0,,PR0                   cn=0,n=32

      360     3869    3            MCA_HDR.DEFINER = DEFINER;

   3869  1 000735   200020 236100                    LDQ     DEFINER,,AUTO
         1 000736   000022 736000                    QLS     18
         1 000737   000000 552120                    STBQ    0,'20'O,PR0

      361     3870    3            REQ.FC = %N_WRBIN;

   3870  1 000740   200016 471500                    LDP1    REQ$,,AUTO
         1 000741   000003 236007                    LDQ     3,DL
         1 000742   100003 552104                    STBQ    3,'04'O,PR1

      362     3871    4            IF (CMD=TM_OC_TIME_WRITE#) AND (DEFINER=%MCA_DEFINER_DATA) THEN DO;

   3871  1 000743   200004 471500                    LDP1    @CMD,,AUTO
         1 000744   100000 235100                    LDA     0,,PR1
         1 000745   000004 115007                    CMPA    4,DL
         1 000746   000770 601000 1                  TNZ     s:3877
         1 000747   200020 235100                    LDA     DEFINER,,AUTO
         1 000750   000007 115007                    CMPA    7,DL
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:48   
         1 000751   000770 601000 1                  TNZ     s:3877

      363     3872    4               BUF_CMD$ -> UTS_SP_B = UTS_SP;

   3872  1 000752   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 000753   200026 237100                    LDAQ    UTS_SP,,AUTO
         1 000754   300000 755100                    STA     0,,PR3
         1 000755   300001 756100                    STQ     1,,PR3

      364     3873    4               REQ.BUFSIZE = SIZEC(INIT_HDR) + TIME_UPDATE_DATA_SIZE;

   3873  1 000756   200016 474500                    LDP4    REQ$,,AUTO
         1 000757   000066 236000 0                  LDQ     TIME_UPDATE_DATA_SIZE
         1 000760   000040 036007                    ADLQ    32,DL
         1 000761   000020 736000                    QLS     16
         1 000762   400004 676100                    ERQ     4,,PR4
         1 000763   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000764   400004 656100                    ERSQ    4,,PR4

      365     3874    4               MCA_HDR.TBYTES = TIME_UPDATE_DATA_SIZE;

   3874  1 000765   000066 720000 0                  LXL0    TIME_UPDATE_DATA_SIZE
         1 000766   000007 440100                    SXL0    7,,PR0

      366     3875    4               END;

   3875  1 000767   001023 710000 1                  TRA     s:3888

      367     3876    3             ELSE
      368     3877    3               IF ((CMD >= TM_OC_STATE_SCU#) AND (CMD <= TM_OC_STATE_CPU#))

   3877  1 000770   100000 235100                    LDA     0,,PR1
         1 000771   000011 115007                    CMPA    9,DL
         1 000772   001014 602000 1                  TNC     s:3884
         1 000773   000013 115007                    CMPA    11,DL
         1 000774   001014 603000 1                  TRC     s:3884
         1 000775   200020 235100                    LDA     DEFINER,,AUTO
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:49   
         1 000776   000007 115007                    CMPA    7,DL
         1 000777   001014 601000 1                  TNZ     s:3884

      369     3878    4                 AND (DEFINER=%MCA_DEFINER_DATA) THEN DO;

      370     3879    4                  BUF_CMD$->CHAR1 = BITASC('015'O);

   3879  1 001000   200010 473500                    LDP3    BUF_CMD$,,AUTO
         1 001001   040100 100400                    MLR     fill='040'O
         1 001002   000001 000001 2                  ADSC9   1                        cn=0,n=1
         1 001003   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      371     3880    4                  REQ.BUFSIZE = SIZEC(INIT_HDR) +1;

   3880  1 001004   200016 474500                    LDP4    REQ$,,AUTO
         1 001005   400004 236100                    LDQ     4,,PR4
         1 001006   177777 376007                    ANQ     65535,DL
         1 001007   000003 276000 2                  ORQ     3
         1 001010   400004 756100                    STQ     4,,PR4

      372     3881    4                  MCA_HDR.TBYTES = 1;

   3881  1 001011   000001 220003                    LDX0    1,DU
         1 001012   000007 440100                    SXL0    7,,PR0

      373     3882    4                  END;

   3882  1 001013   001023 710000 1                  TRA     s:3888

      374     3883    4                ELSE DO;

      375     3884    4                  REQ.BUFSIZE = SIZEC(INIT_HDR);

   3884  1 001014   200016 473500                    LDP3    REQ$,,AUTO
         1 001015   300004 236100                    LDQ     4,,PR3
         1 001016   177777 376007                    ANQ     65535,DL
         1 001017   000010 276003                    ORQ     8,DU
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:50   
         1 001020   300004 756100                    STQ     4,,PR3

      376     3885    4                  MCA_HDR.TBYTES = 0;

   3885  1 001021   000000 220003                    LDX0    0,DU
         1 001022   000007 440100                    SXL0    7,,PR0

      377     3886    4                  END;

      378     3887                                                /* Do the IO                          */
      379     3888    3            CALL NIO$QUE(REQ) ALTRET(ERR);

   3888  1 001023   200016 630500                    EPPR0   REQ$,,AUTO
         1 001024   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001025   000000 701000 xent               TSX1    NIO$QUE
         1 001026   001155 702000 1                  TSX2    ERR

      380     3889                                                /* WAIT FOR THE I/O TO COMPLETE       */
      381     3890    3            CALL NIO$IOSPIN(REQ);

   3890  1 001027   200016 630500                    EPPR0   REQ$,,AUTO
         1 001030   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001031   000000 701000 xent               TSX1    NIO$IOSPIN
         1 001032   000000 011000                    NOP     0

      382     3891    3            IF REQ.TYC ~= %TYC_EGV

   3891  1 001033   200016 470500                    LDP0    REQ$,,AUTO
         1 001034   000021 236100                    LDQ     17,,PR0
         1 001035   000030 116000 xsym               CMPQ    B_VECTNIL+24
         1 001036   001155 601000 1                  TNZ     ERR
         1 001037   001063 710000 1                  TRA     s:3916

      383     3892    3             THEN GOTO ERR;
      384     3893    3            SELECT ('02'O);

      385     3894    3            IF FIRMLOAD_FAILED OR SWITCH_STATE_FAILED THEN
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:51   

   3894  1 001040   200030 234100                    SZN     FIRMLOAD_FAILED,,AUTO
         1 001041   001163 604000 1                  TMI     ERR_REQ
         1 001042   200031 234100                    SZN     SWITCH_STATE_FAILED,,AUTO
         1 001043   001163 604000 1                  TMI     ERR_REQ

      386     3895    3               GOTO ERR_REQ;
      387     3896    3             ELSE
      388     3897    3               GOTO DONE;

   3897  1 001044   001064 710000 1                  TRA     DONE

      389     3898    3            SELECT ('03'O);

      390     3899    3            OC_MSG = TM_TASK_ABORTED_MSG#;

   3899  1 001045   001163 235007                    LDA     627,DL
         1 001046   200023 755100                    STA     OC_MSG,,AUTO

      391     3900    3            GOTO ERR_REQ;

   3900  1 001047   001163 710000 1                  TRA     ERR_REQ

      392     3901    3            SELECT (ELSE);

      393     3902    3         GOTO BAD_STATUS;

   3902  1 001050   001060 710000 1                  TRA     BAD_STATUS

      394     3903    3            END;

      395     3904    2      SELECT ('15'O);

      396     3905    2      IF REQ.STATUS.MINOR = '1'O

   3905  1 001051   000014 236100                    LDQ     12,,PR0
         1 001052   007700 376003                    ANQ     4032,DU
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:52   
         1 001053   001000 116003                    CMPQ    512,DU
         1 001054   001060 601000 1                  TNZ     BAD_STATUS

      397     3906    3       THEN DO;

      398     3907    3         OC_MSG = TM_ILLEGAL_CMD_MSG#;

   3907  1 001055   001164 235007                    LDA     628,DL
         1 001056   200023 755100                    STA     OC_MSG,,AUTO

      399     3908    3         GOTO ERR_REQ;

   3908  1 001057   001163 710000 1                  TRA     ERR_REQ

      400     3909    3         END;
      401     3910    2       ELSE GOTO BAD_STATUS;
      402     3911    2      SELECT (ELSE);

      403     3912    2   BAD_STATUS:
      404     3913    2      OC_MSG = TM_BAD_STATUS_MSG#;

   3913  1 001060   001166 235007       BAD_STATUS   LDA     630,DL
         1 001061   200023 755100                    STA     OC_MSG,,AUTO

      405     3914    2      GOTO ERR_REQ;

   3914  1 001062   001163 710000 1                  TRA     ERR_REQ

      406     3915    2         END;

      407     3916    1      GOTO STATUS_LOOP;

   3916  1 001063   000556 710000 1                  TRA     STATUS_LOOP

      408     3917                                                /**/
      409     3918    1   DONE:
      410     3919                                                /* Release request packet             */
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:53   
      411     3920    1      CALL NIQ$REL(REQ$);

   3920  1 001064   200016 631500       DONE         EPPR1   REQ$,,AUTO
         1 001065   200034 451500                    STP1    LOW_SCUX+1,,AUTO
         1 001066   200034 630500                    EPPR0   LOW_SCUX+1,,AUTO
         1 001067   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001070   000000 701000 xent               TSX1    NIQ$REL
         1 001071   000000 011000                    NOP     0

      412     3921                                                /* Release channel 3                  */
      413     3922           %LOCK(G#=SQH.GATE);

   3923  1 001072   200017 630500                    EPPR0   SQH$,,AUTO
         1 001073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001074   000000 701000 xent               TSX1    HFC$LOCK
         1 001075   000000 011000                    NOP     0

      414     3925    1      DCT.MCA.RESERVED = '0'B;

   3925  1 001076   200012 470500                    LDP0    DCT$,,AUTO
         1 001077   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 001100   000030 356100                    ANSQ    24,,PR0

      415     3926           %UNLOCK(G#=SQH.GATE);

   3927  1 001101   200017 630500                    EPPR0   SQH$,,AUTO
         1 001102   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001103   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001104   000000 011000                    NOP     0

      416     3929                                           /* Convert the data supplied by the SP     */
      417     3930    2      IF CMD = TM_OC_TIME_READ# THEN DO;

   3930  1 001105   200004 470500                    LDP0    @CMD,,AUTO
         1 001106   000000 235100                    LDA     0,,PR0
         1 001107   000003 115007                    CMPA    3,DL
         1 001110   001154 601000 1                  TNZ     s:3942
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:54   

      418     3931    2         UTS_SP = BUF_CMD$ -> UTS_SP_B;

   3931  1 001111   200010 471500                    LDP1    BUF_CMD$,,AUTO
         1 001112   000100 100500                    MLR     fill='000'O
         1 001113   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 001114   200026 000010                    ADSC9   UTS_SP,,AUTO             cn=0,n=8

      419     3932    2         UTS = 0;

   3932  1 001115   200025 450100                    STZ     UTS,,AUTO

      420     3933    3         DO I = 0 TO 7;

   3933  1 001116   200013 450100                    STZ     I,,AUTO

      421     3934    3            UTS1.HEX_DIGIT(I) = UTS_SP.BITE.HEX_DIGIT(I);

   3934  1 001117   200013 236100                    LDQ     I,,AUTO
         1 001120   000011 402007                    MPY     9,DL
         1 001121   000000 116003                    CMPQ    0,DU
         1 001122   001124 605000 1                  TPL     s:3934+5
         1 001123   000044 036003                    ADLQ    36,DU
         1 001124   200013 235100                    LDA     I,,AUTO
         1 001125   000002 735000                    ALS     2
         1 001126   001130 605000 1                  TPL     s:3934+9
         1 001127   000044 035003                    ADLA    36,DU
         1 001130   003105 060506                    CSL     bolr='003'O
         1 001131   200026 050004                    BDSC    UTS_SP,Q,AUTO            by=0,bit=5,n=4
         1 001132   200025 040004                    BDSC    UTS,A,AUTO               by=0,bit=4,n=4

      422     3935    3            END;

   3935  1 001133   200013 054100                    AOS     I,,AUTO
         1 001134   200013 235100                    LDA     I,,AUTO
         1 001135   000007 115007                    CMPA    7,DL
         1 001136   001117 604400 1                  TMOZ    s:3934
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:55   

      423     3936        /* convert time from the DPS8000 Service processor into UTS
      424     3937           The time in the service processor is number of seconds from
      425     3938            Jan 1, 1978.  Convert to 25th sec and pass to XUD$UTS_ADJ_25TH.
      426     3939        */
      427     3940    2         CALL XUD$UTS_ADJ_25TH (BUF_CMD$->UTS_B, 0, UTS * %UTS_25TH_SEC#);

   3940  1 001137   200025 236100                    LDQ     UTS,,AUTO
         1 001140   000031 402007                    MPY     25,DL
         1 001141   200034 756100                    STQ     LOW_SCUX+1,,AUTO
         1 001142   200034 630500                    EPPR0   LOW_SCUX+1,,AUTO
         1 001143   200037 450500                    STP0    LOW_SCUX+4,,AUTO
         1 001144   000000 236000 2                  LDQ     0
         1 001145   200036 756100                    STQ     LOW_SCUX+3,,AUTO
         1 001146   200010 236100                    LDQ     BUF_CMD$,,AUTO
         1 001147   200035 756100                    STQ     LOW_SCUX+2,,AUTO
         1 001150   200035 630500                    EPPR0   LOW_SCUX+2,,AUTO
         1 001151   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001152   000000 701000 xent               TSX1    XUD$UTS_ADJ_25TH
         1 001153   000000 011000                    NOP     0

      428     3941    2         END;

      429     3942    1      RETURN;

   3942  1 001154   000000 702200 xent               TSX2  ! X66_ARET

      430     3943        /**/
      431     3944    1   ERR:
      432     3945    1      I = I + 1;

   3945  1 001155   200013 054100       ERR          AOS     I,,AUTO

      433     3946    2      IF I > 3 THEN DO;

   3946  1 001156   200013 235100                    LDA     I,,AUTO
         1 001157   000003 115007                    CMPA    3,DL
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:56   
         1 001160   000166 604400 1                  TMOZ    TRY_AGAIN

      434     3947    2         OC_MSG = TM_FAILED_MSG#;

   3947  1 001161   001165 236007                    LDQ     629,DL
         1 001162   200023 756100                    STQ     OC_MSG,,AUTO

      435     3948    2   ERR_REQ:
      436     3949    2         CALL NIQ$REL(REQ$);

   3949  1 001163   200016 630500       ERR_REQ      EPPR0   REQ$,,AUTO
         1 001164   200034 450500                    STP0    LOW_SCUX+1,,AUTO
         1 001165   200034 630500                    EPPR0   LOW_SCUX+1,,AUTO
         1 001166   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001167   000000 701000 xent               TSX1    NIQ$REL
         1 001170   000000 011000                    NOP     0

      437     3950    2   ERR_NOREQ:
      438     3951              %LOCK(G#=SQH.GATE);

   3952  1 001171   200017 630500       ERR_NOREQ    EPPR0   SQH$,,AUTO
         1 001172   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001173   000000 701000 xent               TSX1    HFC$LOCK
         1 001174   000000 011000                    NOP     0

      439     3954    2         DCT.MCA.RESERVED = '0'B;

   3954  1 001175   200012 470500                    LDP0    DCT$,,AUTO
         1 001176   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 001177   000030 356100                    ANSQ    24,,PR0

      440     3955    2   ERR_UNL:
      441     3956              %UNLOCK(G#=SQH.GATE);

   3957  1 001200   200017 630500       ERR_UNL      EPPR0   SQH$,,AUTO
         1 001201   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001202   000000 701000 xent               TSX1    HFC$UNLOCK
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:57   
         1 001203   000000 011000                    NOP     0

      442     3959    2         IF OC_MSG ~= 0 THEN

   3959  1 001204   200023 235100                    LDA     OC_MSG,,AUTO
         1 001205   001226 600000 1                  TZE     s:3961

      443     3960    2            CALL OCI$MK_WR(M_SYS,OC_MSG,2,OC_PARAM_LENS,OC_PARAMS,DCTX);

   3960  1 001206   200011 630500                    EPPR0   DCTX,,AUTO
         1 001207   200041 450500                    STP0    LOW_SCUX+6,,AUTO
         1 001210   200022 631500                    EPPR1   OC_PARAMS,,AUTO
         1 001211   200040 451500                    STP1    LOW_SCUX+5,,AUTO
         1 001212   200021 633500                    EPPR3   OC_PARAM_LENS,,AUTO
         1 001213   200037 453500                    STP3    LOW_SCUX+4,,AUTO
         1 001214   000005 236000 2                  LDQ     5
         1 001215   200036 756100                    STQ     LOW_SCUX+3,,AUTO
         1 001216   200023 634500                    EPPR4   OC_MSG,,AUTO
         1 001217   200035 454500                    STP4    LOW_SCUX+2,,AUTO
         1 001220   000006 236000 2                  LDQ     6
         1 001221   200034 756100                    STQ     LOW_SCUX+1,,AUTO
         1 001222   200034 630500                    EPPR0   LOW_SCUX+1,,AUTO
         1 001223   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 001224   000000 701000 xent               TSX1    OCI$MK_WR
         1 001225   000000 011000                    NOP     0

      444     3961    2         ALTRETURN;

   3961  1 001226   000000 702200 xent               TSX2  ! X66_AALT

INIT_HDR
 Sect OctLoc
   0     000   000000 000000   000000 001000   000000 000000   040040 040040    ............
   0     004   040040 040040   000000 000000   000000 000000   000000 000000        ............

BORA
 Sect OctLoc
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:58   
   0     010   102101 ******                                                    BA..

LOAD_CMD
 Sect OctLoc
   0     011   122114 117101   104040 111120   103040 ******                    RLOAD IPC ..

LOAD_CMD_SIZE
 Sect OctLoc
   0     014   000000 000015                                                    ....

CFG_CMD
 Sect OctLoc
   0     015   122105 101104   040103 117116   106111 107***                    READ CONFIG.

CFG_CMD_SIZE
 Sect OctLoc
   0     020   000000 000014                                                    ....

SW_SCU_OFF_CMD
 Sect OctLoc
   0     021   123120 040123   127111 124103   110040 123103   125040 130040    SP SWITCH SCU X
   0     025   120117 122124   040131 040117   106106 ******                    PORT Y OFF..

SW_SCU_OFF_CMD_SIZE
 Sect OctLoc
   0     030   000000 000033                                                    ....

SW_SCU_ON_CMD
 Sect OctLoc
   0     031   123120 040123   127111 124103   110040 123103   125040 130040    SP SWITCH SCU X
   0     035   120117 122124   040131 040117   116*** ******                    PORT Y ON...

SW_SCU_ON_CMD_SIZE
 Sect OctLoc
   0     040   000000 000032                                                    ....

STATE_SCU_CMD
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:59   
 Sect OctLoc
   0     041   123120 040123   124101 124105   040123 103125   040130 ******    SP STATE SCU X..

STATE_SCU_CMD_SIZE
 Sect OctLoc
   0     045   000000 000017                                                    ....

STATE_IMX_CMD
 Sect OctLoc
   0     046   115103 101040   130040 123124   101124 105***                    MCA X STATE.

STATE_IMX_CMD_SIZE
 Sect OctLoc
   0     051   000000 000014                                                    ....

TIME_FETCH_CMD
 Sect OctLoc
   0     052   123120 040103   103111 116111   124040 103120   066040 106105    SP CCINIT CP6 FE
   0     056   124103 110***                                                    TCH.

TIME_FETCH_CMD_SIZE
 Sect OctLoc
   0     057   000000 000024                                                    ....

TIME_UPDATE_CMD
 Sect OctLoc
   0     060   123120 040103   103111 116111   124040 103120   066040 125120    SP CCINIT CP6 UP
   0     064   104101 124105                                                    DATE

TIME_UPDATE_CMD_SIZE
 Sect OctLoc
   0     065   000000 000025                                                    ....

TIME_UPDATE_DATA_SIZE
 Sect OctLoc
   0     066   000000 000010                                                    ....

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:60   
(unnamed)
 Sect OctLoc
   0     067   103120 125040   123124 101124   105040 040040   072151 143040    CPU STATE   :ic
   0     073   074074 040040   070060 060060   103117 116106   111107 125122    <<  8000CONFIGUR
   0     077   105104 040040                                                    ED

(unnamed)
 Sect OctLoc
   2     000   000002 006000   015040 040040   123040 040040   000010 200000    .....   S   ....
   2     004   200000 000000   000004 006000   000004 006000                    ............
      445     3962    2         END;
      446     3963    1       ELSE GOTO TRY_AGAIN;
      447     3964    1   END TMB$MCA;
      448     3965        %EOD;

PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:61   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   TM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   TM_DATA_M.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   IS$MACROS.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TMB$MCA.
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:62   

 **** Variables and constants ****

  ****  Section 000 RoData TMB$MCA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/c CHAR        r     1 BORA(0:1)                 15-0-0/c CHAR(11)    r     1 CFG_CMD
    20-0-0/w UBIN        r     1 CFG_CMD_SIZE               0-0-0/w STRC(288)   r     1 INIT_HDR
    11-0-0/c CHAR(10)    r     1 LOAD_CMD                  14-0-0/w UBIN        r     1 LOAD_CMD_SIZE
    46-0-0/c CHAR(11)    r     1 STATE_IMX_CMD             51-0-0/w UBIN        r     1 STATE_IMX_CMD_SIZE
    41-0-0/c CHAR(14)    r     1 STATE_SCU_CMD             45-0-0/w UBIN        r     1 STATE_SCU_CMD_SIZE
    21-0-0/c CHAR(26)    r     1 SW_SCU_OFF_CMD            30-0-0/w UBIN        r     1 SW_SCU_OFF_CMD_SIZE
    31-0-0/c CHAR(25)    r     1 SW_SCU_ON_CMD             40-0-0/w UBIN        r     1 SW_SCU_ON_CMD_SIZE
    52-0-0/c CHAR(19)    r     1 TIME_FETCH_CMD            57-0-0/w UBIN        r     1 TIME_FETCH_CMD_SIZE
    60-0-0/c CHAR(20)    r     1 TIME_UPDATE_CMD           65-0-0/w UBIN        r     1 TIME_UPDATE_CMD_SIZE
    66-0-0/w UBIN        r     1 TIME_UPDATE_DATA_SIZE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @BUFX                      4-0-0/w PTR         r     1 @CMD
     6-0-0/w PTR         r     1 @CMD_NUM                   3-0-0/w PTR         r     1 @DQH
     7-0-0/w PTR         r     1 BUF$                      *0-0-0/w SBIN        r     1 BUFX
    10-0-0/w PTR         r     1 BUF_CMD$                  *0-0-0/w UBIN        r     1 CMD
    *0-0-0/w SBIN        r     1 CMD_NUM                   24-0-0/w SBIN        r     1 CMD_SIZE
    12-0-0/w PTR         r     1 DCT$                      11-0-0/w UBIN        r     1 DCTX
    20-0-0/w UBIN        r     1 DEFINER                   *0-0-0/w STRC(648)   r     1 DQH
    30-0-0/w BIT         r     1 FIRMLOAD_FAILED           25-0-0/w UBIN        r     1 FIRM_POS
    13-0-0/w SBIN        r     1 I                         14-0-0/w UBIN        r     1 IMX#
    15-0-0/c CHAR(2)     r     1 IPCNUM                    33-0-0/w UBIN        r     1 LOW_SCUX
    23-0-0/w SBIN        r     1 OC_MSG                    22-0-0/b STRC(18)    r     1 OC_PARAMS
    21-0-0/b STRC(18)    r     1 OC_PARAM_LENS             16-0-0/w PTR         r     1 REQ$
    17-0-0/w PTR         r     1 SQH$                      31-0-0/w BIT         r     1 SWITCH_STATE_FAILED
    25-0-0/w UBIN        r     1 UTS                       25-0-0/w STRC        r     1 UTS1
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:63   
    26-0-0/c STRC(72)    r     1 UTS_SP                    32-0-0/w UBIN        r     1 VARLEN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(12)    r     1 H_DPS8000_CONFIG_NAME
     0-0-0/w STRC(72)    r     1 H_DPS8000_SCU_INFO(0:1)
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$FQ$                     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$RP$
     0-0-0/w UBIN        r     1 NI_MAINT_DCTX(0:3)
     0-0-0/w UBIN        r     1 S_CUN                      0-0-0/w UBIN        r     1 S_TIMR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 CHAR1                      0-0-0/c CHAR(2)     r     1 CHAR2
     0-0-0/c CHAR(3)     r     1 CHAR3                      0-0-0/c CHAR(32)    r     1 CHAR32
     0-0-0/c ACHR        r     1 CHARVAR                    0-0-0/w STRC(1332)  r     1 DCT
     0-0-0/w STRC(288)   r     1 MCA_HDR                    0-0-0/w PTR         r     1 N$DCT$(0:0)
     0-0-0/w STRC(360)   r     1 NI$IBUF                    0-0-0/d STRC(1080)  r     1 REQ
     0-0-0/w STRC(252)   r     1 SQH                        0-0-0/w UBIN        r     1 UTS_B
     0-0-0/w BIT (72)    r     1 UTS_SP_B


   Procedure TMB$MCA requires 663 words for executable code.
   Procedure TMB$MCA requires 34 words of local(AUTO) storage.
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:65   
          MINI XREF LISTING

BAD_STATUS
      3913**LABEL    3845--GOTO     3902--GOTO     3910--GOTO
BORA
      3681**DCL      3790>>ASSIGN   3796>>ASSIGN
BUF$
      3446**DCL      3489--IMP-PTR  3702<<ASSIGN   3705>>ASSIGN   3754>>ASSIGN   3755>>ASSIGN   3756>>ASSIGN
      3765>>ASSIGN   3774>>ASSIGN   3775>>ASSIGN   3827>>ASSIGN   3841>>IF       3843>>IF       3847>>ASSIGN
      3854>>ASSIGN   3868>>ASSIGN   3869>>ASSIGN   3874>>ASSIGN   3881>>ASSIGN   3885>>ASSIGN
BUFX
       551**DCL        85--PROC     3701>>IF       3701>>IF       3702>>ASSIGN
BUF_CMD$
      3447**DCL      3705<<ASSIGN   3724>>CALL     3779>>ASSIGN   3781>>ASSIGN   3784>>ASSIGN   3787>>ASSIGN
      3788>>ASSIGN   3789>>CALLBLT  3790>>ASSIGN   3793>>ASSIGN   3794>>ASSIGN   3795>>CALLBLT  3796>>ASSIGN
      3799>>ASSIGN   3800>>CALLBLT  3801>>CALLBLT  3804>>ASSIGN   3805>>CALLBLT  3806>>CALLBLT  3809>>ASSIGN
      3810>>CALLBLT  3813>>ASSIGN   3814>>ASSIGN   3815>>CALLBLT  3818>>ASSIGN   3819>>CALLBLT  3822>>ASSIGN
      3825>>ASSIGN   3828>>ASSIGN   3848>>CALLBLT  3855>>CALLBLT  3857>>IF       3861>>CALLBLT  3863>>CALLBLT
      3864>>ASSIGN   3872>>ASSIGN   3879>>ASSIGN   3931>>ASSIGN   3940>>CALL
CFG_CMD
      3684**DCL      3784>>ASSIGN
CFG_CMD_SIZE
      3685**DCL      3783>>ASSIGN
CHAR1
      3666**DCL      3790<<ASSIGN   3796<<ASSIGN   3828<<ASSIGN   3879<<ASSIGN
CHAR2
      3667**DCL      3781<<ASSIGN
CHAR3
      3668**DCL      3788<<ASSIGN   3794<<ASSIGN   3814<<ASSIGN
CHAR32
      3669**DCL      3779<<ASSIGN   3784<<ASSIGN   3787<<ASSIGN   3789<<CALLBLT  3793<<ASSIGN   3795<<CALLBLT
      3799<<ASSIGN   3800<<CALLBLT  3801<<CALLBLT  3804<<ASSIGN   3805<<CALLBLT  3806<<CALLBLT  3809<<ASSIGN
      3810<<CALLBLT  3813<<ASSIGN   3815<<CALLBLT  3818<<ASSIGN   3819<<CALLBLT  3822<<ASSIGN   3825<<ASSIGN
CHARVAR
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:66   
      3670**DCL      3848>>CALLBLT  3855>>CALLBLT  3857>>IF       3861>>CALLBLT  3863>>CALLBLT  3864>>ASSIGN
CMD
       550**DCL        85--PROC     3717>>ASSIGN   3720>>IF       3776>>DOCASE   3846>>IF       3853>>IF
      3871>>IF       3877>>IF       3877>>IF       3930>>IF
CMD_NUM
       552**DCL        85--PROC     3789>>CALLBLT  3795>>CALLBLT  3801>>CALLBLT  3806>>CALLBLT  3810>>CALLBLT
      3815>>CALLBLT  3819>>CALLBLT
CMD_SIZE
      3462**DCL      3778<<ASSIGN   3783<<ASSIGN   3786<<ASSIGN   3792<<ASSIGN   3798<<ASSIGN   3803<<ASSIGN
      3808<<ASSIGN   3812<<ASSIGN   3817<<ASSIGN   3821<<ASSIGN   3824<<ASSIGN   3827>>ASSIGN   3828>>ASSIGN
      3829>>ASSIGN
DCT.DP
      3634**DCL      3641--REDEF    3644--REDEF    3645--REDEF    3647--REDEF    3647--REDEF    3648--REDEF
      3649--REDEF    3649--REDEF
DCT.MCA.RESERVED
      3649**DCL      3733>>IF       3737<<ASSIGN   3925<<ASSIGN   3954<<ASSIGN
DCT.MCA.USER#
      3649**DCL      3739<<ASSIGN   3741<<ASSIGN   3761>>IF
DCT.MPC.IOCHANX
      3642**DCL      3642--REDEF
DCT.SQH$
      3629**DCL      3713>>ASSIGN
DCT$
      3449**DCL      3614--IMP-PTR  3712<<ASSIGN   3713>>ASSIGN   3733>>IF       3737>>ASSIGN   3739>>ASSIGN
      3741>>ASSIGN   3761>>IF       3925>>ASSIGN   3954>>ASSIGN
DCTX
      3448**DCL      3711<<ASSIGN   3712>>ASSIGN   3766>>ASSIGN   3960<>CALL
DEFINER
      3455**DCL      3842<<ASSIGN   3844<<ASSIGN   3869>>ASSIGN   3871>>IF       3877>>IF
DONE
      3920**LABEL    3897--GOTO
DQH
       536**DCL        85--PROC
DQH.IOCHAN.IOM
       539**DCL      3710>>ASSIGN
DQH.IOCHANX
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:67   
       538**DCL       539--REDEF
DQH.IPCNUM
       547**DCL      3780>>CALLBLT
DQH.MBX$
       547**DCL       548--REDEF
ERR
      3945**LABEL    3768--CALLALT  3772--GOTO     3832--CALLALT  3835--GOTO     3888--CALLALT  3892--GOTO
ERR_NOREQ
      3952**LABEL    3747--GOTO
ERR_REQ
      3949**LABEL    3895--GOTO     3900--GOTO     3908--GOTO     3914--GOTO
ERR_UNL
      3957**LABEL    3735--GOTO
FIRMLOAD_FAILED
      3472**DCL      3751<<ASSIGN   3850<<ASSIGN   3894>>IF
FIRM_POS
      3467**DCL      3848<<CALLBLT  3849>>IF       3855<<CALLBLT  3856>>IF       3857>>IF       3861<<CALLBLT
      3862>>IF       3863<<CALLBLT  3864>>ASSIGN
HFC$LOCK
      1109**DCL-ENT  3731--CALL     3923--CALL     3952--CALL
HFC$UNLOCK
      1109**DCL-ENT  3743--CALL     3927--CALL     3957--CALL
H_DPS8000_CONFIG_NAME
      3297**DCL      3864<<ASSIGN
H_DPS8000_SCU_INFO.SCU_STATUS.LOW_MEM
      3297**DCL      3707>>IF
I
      3450**DCL      3725<<DOINDEX  3726>>ASSIGN   3726>>ASSIGN   3749<<ASSIGN   3933<<DOINDEX  3934>>ASSIGN
      3934>>ASSIGN   3945<<ASSIGN   3945>>ASSIGN   3946>>IF
IMX#
      3451**DCL      3710<<ASSIGN   3711>>ASSIGN   3716>>ASSIGN
INIT_HDR
      3523**DCL      3705--ASSIGN   3754>>ASSIGN   3758--ASSIGN   3774>>ASSIGN   3829--ASSIGN   3868>>ASSIGN
      3873--ASSIGN   3880--ASSIGN   3884--ASSIGN
IPCNUM
      3452**DCL      3780<<CALLBLT  3781>>ASSIGN
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:68   
LOAD_CMD
      3682**DCL      3779>>ASSIGN
LOAD_CMD_SIZE
      3683**DCL      3778>>ASSIGN
LOW_SCUX
      3475**DCL      3706<<ASSIGN   3708<<ASSIGN   3800>>CALLBLT  3805>>CALLBLT
MCA_HDR
      3489**DCL      3754<<ASSIGN   3774<<ASSIGN   3868<<ASSIGN
MCA_HDR.DEFINER
      3491**DCL      3755<<ASSIGN   3775<<ASSIGN   3841>>IF       3843>>IF       3869<<ASSIGN
MCA_HDR.SRCLEN
      3507**DCL      3847>>ASSIGN   3854>>ASSIGN
MCA_HDR.TBYTES
      3510**DCL      3756<<ASSIGN   3827<<ASSIGN   3874<<ASSIGN   3881<<ASSIGN   3885<<ASSIGN
N$DCT$
       522**DCL      3712>>ASSIGN
N$DCT$$
       388**DCL       522--IMP-PTR  3712>>ASSIGN
N$FQ$
       388**DCL       523--IMP-PTR
N$REQ_INIT.BUFADDR
       407**DCL       408--REDEF     408--REDEF
N$REQ_INIT.DLA.DRELADDR
       399**DCL       399--REDEF
N$REQ_INIT.DVE.EOMCHAR
       436**DCL       437--REDEF
N$REQ_INIT.EAINFO
       430**DCL       430--REDEF
N$REQ_INIT.EAINFOX
       430**DCL       431--REDEF
N$REQ_INIT.EVNTINFO
       431**DCL       431--REDEF
N$REQ_INIT.STATUS
       412**DCL       418--REDEF
NI$FQ$
       448**DCL       524--IMP-PTR
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:69   
NI$IBUF.ENT.BUF$
       525**DCL      3702>>ASSIGN
NI$IBUF$
       448**DCL       524--IMP-PTR  3702>>ASSIGN
NI$IMXMBX_INIT.PAGED_BASE
       458**DCL       459--REDEF     459--REDEF
NI$IMXMBX_INIT.SIZE
       460**DCL       460--REDEF
NI$REQ_INIT.DCW
       482**DCL       485--REDEF
NI$REQ_INIT.DCW.TALLY
       483**DCL       483--REDEF
NI$REQ_INIT.IDCW.EXTA
       485**DCL       485--REDEF
NI$REQ_INIT.PCW
       487**DCL       491--REDEF
NI$REQ_INIT.SEEK
       492**DCL       493--REDEF     494--REDEF
NI$RP$
       496**DCL       526--IMP-PTR
NIO$IOSPIN
      3436**DCL-ENT  3770--CALL     3833--CALL     3890--CALL
NIO$QUE
      3437**DCL-ENT  3768--CALL     3832--CALL     3888--CALL
NIQ$GET
      3435**DCL-ENT  3745--CALL
NIQ$REL
      3438**DCL-ENT  3920--CALL     3949--CALL
NI_MAINT_DCTX
       500**DCL      3711>>ASSIGN
NI_MBX_INIT.DCW.CONTROL.AE
       518**DCL       518--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
       514**DCL       514--REDEF
OCI$MK_WR
      3439**DCL-ENT  3960--CALL
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:70   
OC_MSG
      3461**DCL      3718<<ASSIGN   3734<<ASSIGN   3746<<ASSIGN   3899<<ASSIGN   3907<<ASSIGN   3913<<ASSIGN
      3947<<ASSIGN   3959>>IF       3960<>CALL
OC_PARAMS
      3458**DCL      3960<>CALL
OC_PARAMS.CMD
      3460**DCL      3717<<ASSIGN
OC_PARAMS.MCA#
      3459**DCL      3716<<ASSIGN
OC_PARAM_LENS
      3456**DCL      3960<>CALL
OC_PARAM_LENS.LEN
      3457**DCL      3714<<ASSIGN   3715<<ASSIGN
REQ
      3556**DCL      3768<>CALL     3770<>CALL     3832<>CALL     3833<>CALL     3888<>CALL     3890<>CALL
REQ.BUF$
      3565**DCL      3765<<ASSIGN
REQ.BUFADDR
      3565**DCL      3566--REDEF    3566--REDEF
REQ.BUFSIZE
      3559**DCL      3758<<ASSIGN   3829<<ASSIGN   3873<<ASSIGN   3880<<ASSIGN   3884<<ASSIGN
REQ.DLA.DCTX
      3556**DCL      3766<<ASSIGN
REQ.DLA.DRELADDR
      3557**DCL      3557--REDEF
REQ.DVE.EOMCHAR
      3594**DCL      3595--REDEF
REQ.EAINFO
      3588**DCL      3588--REDEF
REQ.EAINFOX
      3588**DCL      3589--REDEF
REQ.EVNTINFO
      3589**DCL      3589--REDEF
REQ.FC
      3559**DCL      3757<<ASSIGN   3830<<ASSIGN   3870<<ASSIGN
REQ.OPFLG.BPF
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:71   
      3564**DCL      3759<<ASSIGN
REQ.OPFLG.HOLD
      3564**DCL      3760<<ASSIGN
REQ.OPFLG.USER
      3562**DCL      3762<<ASSIGN
REQ.OPFLG.WAIT
      3563**DCL      3763<<ASSIGN
REQ.STATUS
      3570**DCL      3576--REDEF
REQ.STATUS.MAJOR
      3570**DCL      3837>>DOSELCT
REQ.STATUS.MINOR
      3571**DCL      3839>>DOSELCT  3905>>IF
REQ.TYC
      3578**DCL      3771>>IF       3834>>IF       3891>>IF
REQ$
      3453**DCL      3556--IMP-PTR  3745<>CALL     3757>>ASSIGN   3758>>ASSIGN   3759>>ASSIGN   3760>>ASSIGN
      3762>>ASSIGN   3763>>ASSIGN   3765>>ASSIGN   3766>>ASSIGN   3768>>CALL     3770>>CALL     3771>>IF
      3829>>ASSIGN   3830>>ASSIGN   3832>>CALL     3833>>CALL     3834>>IF       3837>>DOSELCT  3839>>DOSELCT
      3870>>ASSIGN   3873>>ASSIGN   3880>>ASSIGN   3884>>ASSIGN   3888>>CALL     3890>>CALL     3891>>IF
      3905>>IF       3920<>CALL     3949<>CALL
SQH.DOOR
      3662**DCL      3662--REDEF
SQH.GATE
      3662**DCL      3731<>CALL     3743<>CALL     3923<>CALL     3927<>CALL     3952<>CALL     3957<>CALL
SQH$
      3454**DCL      3662--IMP-PTR  3713<<ASSIGN   3731>>CALL     3743>>CALL     3923>>CALL     3927>>CALL
      3952>>CALL     3957>>CALL
STATE_IMX_CMD
      3692**DCL      3818>>ASSIGN
STATE_IMX_CMD_SIZE
      3693**DCL      3817>>ASSIGN
STATE_SCU_CMD
      3690**DCL      3809>>ASSIGN   3813>>ASSIGN
STATE_SCU_CMD_SIZE
      3691**DCL      3808>>ASSIGN   3812>>ASSIGN
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:72   
STATUS_LOOP
      3837**LABEL    3916--GOTO
SWITCH_STATE_FAILED
      3473**DCL      3752<<ASSIGN   3858<<ASSIGN   3894>>IF
SW_SCU_OFF_CMD
      3686**DCL      3787>>ASSIGN   3799>>ASSIGN
SW_SCU_OFF_CMD_SIZE
      3687**DCL      3786>>ASSIGN   3798>>ASSIGN
SW_SCU_ON_CMD
      3688**DCL      3793>>ASSIGN   3804>>ASSIGN
SW_SCU_ON_CMD_SIZE
      3689**DCL      3792>>ASSIGN   3803>>ASSIGN
S_CUN
      3676**DCL      3738>>IF       3739>>ASSIGN
S_TIMR
      3677**DCL      3738>>IF
TIME_FETCH_CMD
      3694**DCL      3822>>ASSIGN
TIME_FETCH_CMD_SIZE
      3695**DCL      3821>>ASSIGN
TIME_UPDATE_CMD
      3696**DCL      3825>>ASSIGN
TIME_UPDATE_CMD_SIZE
      3697**DCL      3824>>ASSIGN
TIME_UPDATE_DATA_SIZE
      3698**DCL      3873>>ASSIGN   3874>>ASSIGN
TRY_AGAIN
      3751**LABEL    3963--GOTO
UTS
      3463**DCL      3464--REDEF    3467--REDEF    3724<>CALL     3932<<ASSIGN   3940>>CALL
UTS1.HEX_DIGIT
      3466**DCL      3726>>ASSIGN   3934<<ASSIGN
UTS_B
      3671**DCL      3724<>CALL     3940<>CALL
UTS_SP
      3468**DCL      3872>>ASSIGN   3931<<ASSIGN
PL6.E3A0      #001=TMB$MCA File=TMB$MCA.:E05TSI                                  WED 07/30/97 06:20 Page:73   
UTS_SP.BITE
      3469**DCL      3726<<ASSIGN
UTS_SP.BITE.HEX_DIGIT
      3471**DCL      3934>>ASSIGN
UTS_SP_B
      3672**DCL      3872<<ASSIGN   3931>>ASSIGN
VARLEN
      3474**DCL      3670--IMP-SIZ  3847<<ASSIGN   3848>>CALLBLT  3849>>IF       3854<<ASSIGN   3855>>CALLBLT
      3856>>IF       3857>>IF       3861>>CALLBLT  3862>>IF       3863>>CALLBLT  3864>>ASSIGN
XUD$UTS_ADJ_25TH
      3414**DCL-ENT  3940--CALL
XUD$UTS_DIFF_SEC
      3396**DCL-ENT  3724--CALL

PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:74   
      449        1        /*T***********************************************************/
      450        2        /*T*                                                         */
      451        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      452        4        /*T*                                                         */
      453        5        /*T***********************************************************/
      454        6        /*X* THI=1,PLM=3 */
      455        7        /*F*  NAME:  TMB$BUF
      456        8
      457        9              PURPOSE: Buffer allocation routines for MCA IO.
      458       10        */
      459       11        TMB$BUF_ALLOC : PROC (BUF$, BUFX, DQH$) ALTRET;
      460       12        /**/
      461       13        /*D*  NAME:  TMB$BUF_ALLOC
      462       14              CALL:  CALL TMB$BUF_ALLOC(BUF$,BUFX,DQH$) ALTRET(ERR)
      463       15              ENVIRONMENT:  MONITOR'S LINKAGE SEGMENT;  USED ONLY ON DPS8000
      464       16              OUTPUT:  BUF$ - PTR TO WORD .10 OF SEGMENT (PAST MCA_HDR)
      465       17                       BUFX - MCA BUFFER TABLE INDEX
      466       18                       DQH$ -  OF AVAILABLE MCA, IF POSSIBLE (OPTIONAL)
      467       19              DESCRIPTION:
      468       20                 Allocates an available buffer from the MCA buffer pool, located
      469       21                 in $LS114.  Provides the index into the MCA buffer pool table which
      470       22                 is passed to TMB$MCA.  Optionally provides the first available,
      471       23                 non-partitioned MCA DQH$.
      472       24        */
      473       25        /**/
      474       26        /* PARAMETERS */
      475       27        /**/
      476       28    1   DCL BUF$ PTR;
      477       29    1   DCL BUFX SBIN;
      478       30    1   DCL DQH$ PTR;
      479       31        /**/
      480       32        /* INCLUDE FILES */
      481       33        /**/
      482       34        %INCLUDE HF_LOCK_C;
      483       48        %INCLUDE IS$MACROS;
      484     1323        %INCLUDE NI_DATA_R;
      485     1760        /**/
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:75   
      486     1761        /* AUTO */
      487     1762        /**/
      488     1763    1   DCL I SBIN;
      489     1764    1   DCL DCT$ PTR;
      490     1765    1   DCL RESDCT$ PTR;
      491     1766        /**/
      492     1767        /* BASED */
      493     1768        /**/
      494     1769        %MCA_HDR(NAME=INIT_HDR,STCLASS=BASED);
      495     1803        %NI$IOM;
      496     1808        %NI$DCT;
      497     1856        %EJECT;
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:76   
      498     1857
      499     1858    1      BUFX = -1;
      500     1859    1      BUF$ = ADDR(NIL);
      501     1860           %LOCK (G#=NI$IBUF.GATE);
      502     1863    2      DO I = 0 TO 3;
      503     1864    3         IF NOT NI$IBUF.ENT.RESERVED(I) THEN DO;
      504     1865    3            BUF$ = PINCRW (NI$IBUF.ENT.BUF$(I), SIZEW(INIT_HDR));
      505     1866    3            NI$IBUF.ENT.RESERVED(I) = '1'B;
      506     1867    3            BUFX = I;
      507     1868    3            GOTO HAVE_BUF;
      508     1869    3            END;
      509     1870    2         END;
      510     1871    1   HAVE_BUF:
      511     1872           %UNLOCK (G#=NI$IBUF.GATE);
      512     1875    1      IF BUF$ = ADDR(NIL) THEN
      513     1876    1         ALTRETURN;
      514     1877    2      IF ADDR(DQH$) ~= ADDR(NIL) THEN DO;
      515     1878    2         DQH$ = ADDR(NIL);
      516     1879    3         DO I = 0 TO NI_IOMS-1;
      517     1880    4            IF NOT NI$IOM$(I) -> NI$IOM.STATUS.DOWN THEN DO;
      518     1881    4               DCT$ = N$DCT$(NI_MAINT_DCTX(I));
      519     1882    4               IF DCT$->NI$DCT.MCA.RESERVED THEN
      520     1883    4                  RESDCT$ = DCT$;
      521     1884    5                ELSE DO;
      522     1885    5                  DQH$ = DCT$->NI$DCT.DQH$;
      523     1886    5                  GOTO HAVE_DQH;
      524     1887    5                  END;
      525     1888    4               END;
      526     1889    3            END;
      527     1890    2   HAVE_DQH:
      528     1891    2         IF DQH$ = ADDR(NIL) THEN
      529     1892    2            DQH$ = RESDCT$->NI$DCT.DQH$;
      530     1893    2         END;
      531     1894    1      RETURN;
      532     1895        %EJECT;
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:77   
      533     1896    1   TMB$BUF_DEALLOC : ENTRY (BUF$, BUFX) ALTRET;
      534     1897        /**/
      535     1898        /*D*  NAME:  TMB$BUF_DEALLOC
      536     1899              CALL:  CALL TMB$BUF_ALLOC(BUF$,BUFX) ALTRET(ERR)
      537     1900              INPUT:   BUF$ - PTR TO BUFFER TO BE RELEASED - WILL BE NIL'ED
      538     1901                       BUFX - MCA BUFFER TABLE INDEX OF BUFFER TO BE RELEASE
      539     1902              DESCRIPTION:
      540     1903                 Release a buffer back to the MCA buffer pool, located
      541     1904                 in $LS114.  NILs the callers BUF$ to prevent further access.
      542     1905        */
      543     1906        %EJECT;
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:78   
      544     1907    1      BUF$ = ADDR(NIL);
      545     1908    2      IF BUFX >= 0 AND BUFX <= 3 THEN DO;
      546     1909              %LOCK (G#=NI$IBUF.GATE);
      547     1912    2         NI$IBUF.ENT.RESERVED(BUFX) = '0'B;
      548     1913              %UNLOCK (G#=NI$IBUF.GATE);
      549     1916    2         BUFX = -1;
      550     1917    2         END;
      551     1918    1       ELSE
      552     1919    1         ALTRETURN;
      553     1920    1      RETURN;
      554     1921    1   END TMB$BUF_ALLOC ;

PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:79   
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   IS$MACROS.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TMB$BUF_ALLOC.

   Procedure TMB$BUF_ALLOC requires 109 words for executable code.
   Procedure TMB$BUF_ALLOC requires 10 words of local(AUTO) storage.

    No errors detected in file TMB$MCA.:E05TSI    .

PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:80   

 Object Unit name= TMB$BUF_ALLOC                              File name= TMB$MCA.:E05TOU
 UTS= JUL 30 '97 06:21:18.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   109    155  TMB$BUF_ALLOC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  TMB$BUF_ALLOC
     0    120          yes     yes      Std        2  TMB$BUF_DEALLOC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:81   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               N$FQ$                                 NI$FQ$
     NI$IBUF$                              NI$IOM$                               NI$RP$
     NI_IOMS                               NI_MAINT_DCTX                         B_VECTNIL
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:82   


      449        1        /*T***********************************************************/
      450        2        /*T*                                                         */
      451        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      452        4        /*T*                                                         */
      453        5        /*T***********************************************************/
      454        6        /*X* THI=1,PLM=3 */
      455        7        /*F*  NAME:  TMB$BUF
      456        8
      457        9              PURPOSE: Buffer allocation routines for MCA IO.
      458       10        */
      459       11        TMB$BUF_ALLOC : PROC (BUF$, BUFX, DQH$) ALTRET;

     11  0 000000   000000 700200 xent  TMB$BUF_ALL* TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

      460       12        /**/
      461       13        /*D*  NAME:  TMB$BUF_ALLOC
      462       14              CALL:  CALL TMB$BUF_ALLOC(BUF$,BUFX,DQH$) ALTRET(ERR)
      463       15              ENVIRONMENT:  MONITOR'S LINKAGE SEGMENT;  USED ONLY ON DPS8000
      464       16              OUTPUT:  BUF$ - PTR TO WORD .10 OF SEGMENT (PAST MCA_HDR)
      465       17                       BUFX - MCA BUFFER TABLE INDEX
      466       18                       DQH$ -  OF AVAILABLE MCA, IF POSSIBLE (OPTIONAL)
      467       19              DESCRIPTION:
      468       20                 Allocates an available buffer from the MCA buffer pool, located
      469       21                 in $LS114.  Provides the index into the MCA buffer pool table which
      470       22                 is passed to TMB$MCA.  Optionally provides the first available,
      471       23                 non-partitioned MCA DQH$.
      472       24        */
      473       25        /**/
      474       26        /* PARAMETERS */
      475       27        /**/
      476       28    1   DCL BUF$ PTR;
      477       29    1   DCL BUFX SBIN;
      478       30    1   DCL DQH$ PTR;
      479       31        /**/
      480       32        /* INCLUDE FILES */
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:83   
      481       33        /**/
      482       34        %INCLUDE HF_LOCK_C;
      483       48        %INCLUDE IS$MACROS;
      484     1323        %INCLUDE NI_DATA_R;
      485     1760        /**/
      486     1761        /* AUTO */
      487     1762        /**/
      488     1763    1   DCL I SBIN;
      489     1764    1   DCL DCT$ PTR;
      490     1765    1   DCL RESDCT$ PTR;
      491     1766        /**/
      492     1767        /* BASED */
      493     1768        /**/
      494     1769        %MCA_HDR(NAME=INIT_HDR,STCLASS=BASED);
      495     1803        %NI$IOM;
      496     1808        %NI$DCT;
      497     1856        %EJECT;
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:84   
      498     1857
      499     1858    1      BUFX = -1;

   1858  0 000002   000001 335007                    LCA     1,DL
         0 000003   200004 470500                    LDP0    @BUFX,,AUTO
         0 000004   000000 755100                    STA     0,,PR0

      500     1859    1      BUF$ = ADDR(NIL);

   1859  0 000005   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000006   200003 471500                    LDP1    @BUF$,,AUTO
         0 000007   100000 756100                    STQ     0,,PR1

      501     1860           %LOCK (G#=NI$IBUF.GATE);

   1861  0 000010   000000 630400 xsym               EPPR0   NI$IBUF$
         0 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000012   000000 701000 xent               TSX1    HFC$LOCK
         0 000013   000000 011000                    NOP     0

      502     1863    2      DO I = 0 TO 3;

   1863  0 000014   200006 450100                    STZ     I,,AUTO

      503     1864    3         IF NOT NI$IBUF.ENT.RESERVED(I) THEN DO;

   1864  0 000015   200006 235100                    LDA     I,,AUTO
         0 000016   000001 735000                    ALS     1
         0 000017   000000 470400 xsym               LDP0    NI$IBUF$
         0 000020   000003 234105                    SZN     3,AL,PR0
         0 000021   000035 604000 0                  TMI     s:1870

      504     1865    3            BUF$ = PINCRW (NI$IBUF.ENT.BUF$(I), SIZEW(INIT_HDR));

   1865  0 000022   000002 236105                    LDQ     2,AL,PR0
         0 000023   000010 036003                    ADLQ    8,DU
         0 000024   200003 471500                    LDP1    @BUF$,,AUTO
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:85   
         0 000025   100000 756100                    STQ     0,,PR1

      505     1866    3            NI$IBUF.ENT.RESERVED(I) = '1'B;

   1866  0 000026   400000 236003                    LDQ     -131072,DU
         0 000027   000000 470400 xsym               LDP0    NI$IBUF$
         0 000030   000003 756105                    STQ     3,AL,PR0

      506     1867    3            BUFX = I;

   1867  0 000031   200004 470500                    LDP0    @BUFX,,AUTO
         0 000032   200006 235100                    LDA     I,,AUTO
         0 000033   000000 755100                    STA     0,,PR0

      507     1868    3            GOTO HAVE_BUF;

   1868  0 000034   000041 710000 0                  TRA     HAVE_BUF

      508     1869    3            END;
      509     1870    2         END;

   1870  0 000035   200006 054100                    AOS     I,,AUTO
         0 000036   200006 235100                    LDA     I,,AUTO
         0 000037   000003 115007                    CMPA    3,DL
         0 000040   000015 604400 0                  TMOZ    s:1864

      510     1871    1   HAVE_BUF:
      511     1872           %UNLOCK (G#=NI$IBUF.GATE);

   1873  0 000041   000000 630400 xsym  HAVE_BUF     EPPR0   NI$IBUF$
         0 000042   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000043   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000044   000000 011000                    NOP     0

      512     1875    1      IF BUF$ = ADDR(NIL) THEN

   1875  0 000045   200003 470500                    LDP0    @BUF$,,AUTO
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:86   
         0 000046   000000 236100                    LDQ     0,,PR0
         0 000047   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000050   000052 601000 0                  TNZ     s:1877

      513     1876    1         ALTRETURN;

   1876  0 000051   000000 702200 xent               TSX2  ! X66_AALT

      514     1877    2      IF ADDR(DQH$) ~= ADDR(NIL) THEN DO;

   1877  0 000052   200005 236100                    LDQ     @DQH$,,AUTO
         0 000053   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000054   000117 600000 0                  TZE     s:1894

      515     1878    2         DQH$ = ADDR(NIL);

   1878  0 000055   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000056   200005 471500                    LDP1    @DQH$,,AUTO
         0 000057   100000 756100                    STQ     0,,PR1

      516     1879    3         DO I = 0 TO NI_IOMS-1;

   1879  0 000060   200006 450100                    STZ     I,,AUTO
         0 000061   000105 710000 0                  TRA     s:1889+1

      517     1880    4            IF NOT NI$IOM$(I) -> NI$IOM.STATUS.DOWN THEN DO;

   1880  0 000062   200006 720100                    LXL0    I,,AUTO
         0 000063   000000 470410 xsym               LDP0    NI$IOM$,X0
         0 000064   000003 236100                    LDQ     3,,PR0
         0 000065   000040 316007                    CANQ    32,DL
         0 000066   000104 601000 0                  TNZ     s:1889

      518     1881    4               DCT$ = N$DCT$(NI_MAINT_DCTX(I));

   1881  0 000067   000000 721010 xsym               LXL1    NI_MAINT_DCTX,X0
         0 000070   000000 471400 xsym               LDP1    N$DCT$$
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:87   
         0 000071   100000 236111                    LDQ     0,X1,PR1
         0 000072   200007 756100                    STQ     DCT$,,AUTO

      519     1882    4               IF DCT$->NI$DCT.MCA.RESERVED THEN

   1882  0 000073   200007 473500                    LDP3    DCT$,,AUTO
         0 000074   300030 234100                    SZN     24,,PR3
         0 000075   000100 605000 0                  TPL     s:1885

      520     1883    4                  RESDCT$ = DCT$;

   1883  0 000076   200010 756100                    STQ     RESDCT$,,AUTO
         0 000077   000104 710000 0                  TRA     s:1889

      521     1884    5                ELSE DO;

      522     1885    5                  DQH$ = DCT$->NI$DCT.DQH$;

   1885  0 000100   300023 236100                    LDQ     19,,PR3
         0 000101   200005 474500                    LDP4    @DQH$,,AUTO
         0 000102   400000 756100                    STQ     0,,PR4

      523     1886    5                  GOTO HAVE_DQH;

   1886  0 000103   000110 710000 0                  TRA     HAVE_DQH

      524     1887    5                  END;
      525     1888    4               END;
      526     1889    3            END;

   1889  0 000104   200006 054100                    AOS     I,,AUTO
         0 000105   200006 236100                    LDQ     I,,AUTO
         0 000106   000000 116000 xsym               CMPQ    NI_IOMS
         0 000107   000062 604000 0                  TMI     s:1880

      527     1890    2   HAVE_DQH:
      528     1891    2         IF DQH$ = ADDR(NIL) THEN
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:88   

   1891  0 000110   200005 470500       HAVE_DQH     LDP0    @DQH$,,AUTO
         0 000111   000000 236100                    LDQ     0,,PR0
         0 000112   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000113   000117 601000 0                  TNZ     s:1894

      529     1892    2            DQH$ = RESDCT$->NI$DCT.DQH$;

   1892  0 000114   200010 471500                    LDP1    RESDCT$,,AUTO
         0 000115   100023 236100                    LDQ     19,,PR1
         0 000116   000000 756100                    STQ     0,,PR0

      530     1893    2         END;

      531     1894    1      RETURN;

   1894  0 000117   000000 702200 xent               TSX2  ! X66_ARET

      532     1895        %EJECT;
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:89   
      533     1896    1   TMB$BUF_DEALLOC : ENTRY (BUF$, BUFX) ALTRET;

   1896  0 000120   000000 700200 xent  TMB$BUF_DEA* TSX0  ! X66_AUTO_3
         0 000121   000012 000003                    ZERO    10,3

      534     1897        /**/
      535     1898        /*D*  NAME:  TMB$BUF_DEALLOC
      536     1899              CALL:  CALL TMB$BUF_ALLOC(BUF$,BUFX) ALTRET(ERR)
      537     1900              INPUT:   BUF$ - PTR TO BUFFER TO BE RELEASED - WILL BE NIL'ED
      538     1901                       BUFX - MCA BUFFER TABLE INDEX OF BUFFER TO BE RELEASE
      539     1902              DESCRIPTION:
      540     1903                 Release a buffer back to the MCA buffer pool, located
      541     1904                 in $LS114.  NILs the callers BUF$ to prevent further access.
      542     1905        */
      543     1906        %EJECT;
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:90   
      544     1907    1      BUF$ = ADDR(NIL);

   1907  0 000122   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000123   200003 470500                    LDP0    @BUF$,,AUTO
         0 000124   000000 756100                    STQ     0,,PR0

      545     1908    2      IF BUFX >= 0 AND BUFX <= 3 THEN DO;

   1908  0 000125   200004 471500                    LDP1    @BUFX,,AUTO
         0 000126   100000 235100                    LDA     0,,PR1
         0 000127   000153 604000 0                  TMI     s:1919
         0 000130   000003 115007                    CMPA    3,DL
         0 000131   000153 605400 0                  TPNZ    s:1919

      546     1909              %LOCK (G#=NI$IBUF.GATE);

   1910  0 000132   000000 630400 xsym               EPPR0   NI$IBUF$
         0 000133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000134   000000 701000 xent               TSX1    HFC$LOCK
         0 000135   000000 011000                    NOP     0

      547     1912    2         NI$IBUF.ENT.RESERVED(BUFX) = '0'B;

   1912  0 000136   200004 470500                    LDP0    @BUFX,,AUTO
         0 000137   000000 235100                    LDA     0,,PR0
         0 000140   000001 735000                    ALS     1
         0 000141   000000 471400 xsym               LDP1    NI$IBUF$
         0 000142   100003 450105                    STZ     3,AL,PR1

      548     1913              %UNLOCK (G#=NI$IBUF.GATE);

   1914  0 000143   000000 630400 xsym               EPPR0   NI$IBUF$
         0 000144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000145   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000146   000000 011000                    NOP     0

      549     1916    2         BUFX = -1;
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:91   

   1916  0 000147   000001 335007                    LCA     1,DL
         0 000150   200004 470500                    LDP0    @BUFX,,AUTO
         0 000151   000000 755100                    STA     0,,PR0

      550     1917    2         END;

   1917  0 000152   000154 710000 0                  TRA     s:1920

      551     1918    1       ELSE
      552     1919    1         ALTRETURN;

   1919  0 000153   000000 702200 xent               TSX2  ! X66_AALT

      553     1920    1      RETURN;

   1920  0 000154   000000 702200 xent               TSX2  ! X66_ARET
      554     1921    1   END TMB$BUF_ALLOC ;

PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:92   
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   IS$MACROS.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TMB$BUF_ALLOC.
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:93   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF$                      4-0-0/w PTR         r     1 @BUFX
     5-0-0/w PTR         r     1 @DQH$                     *0-0-0/w PTR         r     1 BUF$
    *0-0-0/w SBIN        r     1 BUFX                       7-0-0/w PTR         r     1 DCT$
    *0-0-0/w PTR         r     1 DQH$                       6-0-0/w SBIN        r     1 I
    10-0-0/w PTR         r     1 RESDCT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$FQ$                     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$IOM$(0:3)
     0-0-0/w PTR         r     1 NI$RP$                     0-0-0/w SBIN        r     1 NI_IOMS
     0-0-0/w UBIN        r     1 NI_MAINT_DCTX(0:3)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)   r     1 INIT_HDR                   0-0-0/w PTR         r     1 N$DCT$(0:0)
     0-0-0/w STRC(1332)  r     1 NI$DCT                     0-0-0/w STRC(360)   r     1 NI$IBUF
     0-0-0/w STRC(252)   r     1 NI$IOM


   Procedure TMB$BUF_ALLOC requires 109 words for executable code.
   Procedure TMB$BUF_ALLOC requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:94   

    No errors detected in file TMB$MCA.:E05TSI    .
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:95   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:96   
          MINI XREF LISTING

BUF$
        28**DCL        11--PROC     1859<<ASSIGN   1865<<ASSIGN   1875>>IF       1896--ENTRY    1907<<ASSIGN
BUFX
        29**DCL        11--PROC     1858<<ASSIGN   1867<<ASSIGN   1896--ENTRY    1908>>IF       1908>>IF
      1912>>ASSIGN   1916<<ASSIGN
DCT$
      1764**DCL      1881<<ASSIGN   1882>>IF       1883>>ASSIGN   1885>>ASSIGN
DQH$
        30**DCL        11--PROC     1877--IF       1878<<ASSIGN   1885<<ASSIGN   1891>>IF       1892<<ASSIGN
HAVE_BUF
      1873**LABEL    1868--GOTO
HAVE_DQH
      1891**LABEL    1886--GOTO
HFC$LOCK
        47**DCL-ENT  1861--CALL     1910--CALL
HFC$UNLOCK
        47**DCL-ENT  1873--CALL     1914--CALL
I
      1763**DCL      1863<<DOINDEX  1864>>IF       1865>>ASSIGN   1866>>ASSIGN   1867>>ASSIGN   1879<<DOINDEX
      1880>>IF       1881>>ASSIGN
INIT_HDR
      1779**DCL      1865--ASSIGN
N$DCT$
      1755**DCL      1881>>ASSIGN
N$DCT$$
      1621**DCL      1755--IMP-PTR  1881>>ASSIGN
N$FQ$
      1621**DCL      1756--IMP-PTR
N$REQ_INIT.BUFADDR
      1640**DCL      1641--REDEF    1641--REDEF
N$REQ_INIT.DLA.DRELADDR
      1632**DCL      1632--REDEF
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:97   
N$REQ_INIT.DVE.EOMCHAR
      1669**DCL      1670--REDEF
N$REQ_INIT.EAINFO
      1663**DCL      1663--REDEF
N$REQ_INIT.EAINFOX
      1663**DCL      1664--REDEF
N$REQ_INIT.EVNTINFO
      1664**DCL      1664--REDEF
N$REQ_INIT.STATUS
      1645**DCL      1651--REDEF
NI$DCT.DP
      1837**DCL      1844--REDEF    1847--REDEF    1848--REDEF    1850--REDEF    1850--REDEF    1851--REDEF
      1852--REDEF    1852--REDEF
NI$DCT.DQH$
      1833**DCL      1885>>ASSIGN   1892>>ASSIGN
NI$DCT.MCA.RESERVED
      1852**DCL      1882>>IF
NI$DCT.MPC.IOCHANX
      1845**DCL      1845--REDEF
NI$FQ$
      1681**DCL      1757--IMP-PTR
NI$IBUF.ENT.BUF$
      1758**DCL      1865>>ASSIGN
NI$IBUF.ENT.RESERVED
      1758**DCL      1864>>IF       1866<<ASSIGN   1912<<ASSIGN
NI$IBUF.GATE
      1758**DCL      1861<>CALL     1873<>CALL     1910<>CALL     1914<>CALL
NI$IBUF$
      1681**DCL      1757--IMP-PTR  1861>>CALL     1864>>IF       1865>>ASSIGN   1866>>ASSIGN   1873>>CALL
      1910>>CALL     1912>>ASSIGN   1914>>CALL
NI$IMXMBX_INIT.PAGED_BASE
      1691**DCL      1692--REDEF    1692--REDEF
NI$IMXMBX_INIT.SIZE
      1693**DCL      1693--REDEF
NI$IOM.STATUS.DOWN
      1805**DCL      1880>>IF
PL6.E3A0      #002=TMB$BUF_ALLOC File=TMB$MCA.:E05TSI                            WED 07/30/97 06:21 Page:98   
NI$IOM$
      1703**DCL      1880>>IF
NI$REQ_INIT.DCW
      1715**DCL      1718--REDEF
NI$REQ_INIT.DCW.TALLY
      1716**DCL      1716--REDEF
NI$REQ_INIT.IDCW.EXTA
      1718**DCL      1718--REDEF
NI$REQ_INIT.PCW
      1720**DCL      1724--REDEF
NI$REQ_INIT.SEEK
      1725**DCL      1726--REDEF    1727--REDEF
NI$RP$
      1729**DCL      1759--IMP-PTR
NI_IOMS
      1733**DCL      1879>>DOINDEX
NI_MAINT_DCTX
      1733**DCL      1881>>ASSIGN
NI_MBX_INIT.DCW.CONTROL.AE
      1751**DCL      1751--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
      1747**DCL      1747--REDEF
RESDCT$
      1765**DCL      1883<<ASSIGN   1892>>ASSIGN
