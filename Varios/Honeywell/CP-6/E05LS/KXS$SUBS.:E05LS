VERSION E05

PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:1    
        1        1        /*M* KXS$SUBS - X.25 handler subroutines  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                 7         */
        8        8        /*P* NAME: KXS$SUBS
        9        9             PURPOSE: This module contains miscellaneous routines
       10       10                      for the X.25 handler.
       11       11                        KXS$EXPAUT
       12       12                        KXS$GETBFR
       13       13                        KXS$GETCNTX
       14       14                        KXS$GETL3
       15       15                        KXS$RLSBFR
       16       16                        KXS$RLSCNTX
       17       17                        KXS$RLSL3
       18       18                        KXS$TMR
       19       19                        KXS$Q_SYSLOG
       20       20        */
       21       21
       22       22        %EJECT;
PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:2    
       23       23        /*F* NAME: KXS$EXPAUT
       24       24             PURPOSE: Pumps up the auto segment so an interrupt doesn't have to do it.
       25       25        */
       26       26        KXS$EXPAUT: PROC;
       27       27    1   DCL XXX(0:%(9*256)) UBIN WORD;   /* We already have one page, so get 9 more */
       28       28    1       RETURN;
       29       29    1   END KXS$EXPAUT;
       30       30        %EOD;

PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:3    
      No diagnostics issued in procedure KXS$EXPAUT.

   Procedure KXS$EXPAUT requires 8 words for executable code.
   Procedure KXS$EXPAUT requires 2310 words of local(AUTO) storage.

PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:4    

 Object Unit name= KXS$EXPAUT                                 File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:25:47.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none     8      8  KXS$EXPAUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  KXS$EXPAUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:5    


        1        1        /*M* KXS$SUBS - X.25 handler subroutines  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                 7         */
        8        8        /*P* NAME: KXS$SUBS
        9        9             PURPOSE: This module contains miscellaneous routines
       10       10                      for the X.25 handler.
       11       11                        KXS$EXPAUT
       12       12                        KXS$GETBFR
       13       13                        KXS$GETCNTX
       14       14                        KXS$GETL3
       15       15                        KXS$RLSBFR
       16       16                        KXS$RLSCNTX
       17       17                        KXS$RLSL3
       18       18                        KXS$TMR
       19       19                        KXS$Q_SYSLOG
       20       20        */
       21       21
       22       22        %EJECT;
PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:6    
       23       23        /*F* NAME: KXS$EXPAUT
       24       24             PURPOSE: Pumps up the auto segment so an interrupt doesn't have to do it.
       25       25        */
       26       26        KXS$EXPAUT: PROC;

     26   0 000000  D380 0000 0000  xent KXS$EXPAUT      LNJ,B5   X6A_AUTO_0
          0 000003       0906 0000                       DC       2310,0

       27       27    1   DCL XXX(0:%(9*256)) UBIN WORD;   /* We already have one page, so get 9 more */
       28       28    1       RETURN;

     28   0 000005  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       29       29    1   END KXS$EXPAUT;
       30       30        %EOD;

PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:7    
      No diagnostics issued in procedure KXS$EXPAUT.
PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:8    

 **** Variables and constants ****


   Procedure KXS$EXPAUT requires 8 words for executable code.
   Procedure KXS$EXPAUT requires 2310 words of local(AUTO) storage.
PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:9    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KXS$EXPAUT File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:10   
          MINI XREF LISTING


PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:11   
       31        1        /*T***********************************************************/
       32        2        /*T*                                                         */
       33        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       34        4        /*T*                                                         */
       35        5        /*T***********************************************************/
       36        6        /*F* NAME: KXS$GETBFR                */
       37        7        /*F* PURPOSE: Allocate an I/O buffer */
       38        8
       39        9        /*D* NAME: KXS$GETBFR                */
       40       10        /*D* PURPOSE: Allocate an I/O buffer of the
       41       11                      appropriate size from the pool
       42       12                      of I/O buffers.        */
       43       13        /*D* CALL: CALL KXS$GETBFR ( SIZ, PTR$ )  */
       44       14        /*D* INPUT: SIZ - The size in bytes of just the
       45       15                          data portion of the X.25 packet
       46       16                          to be sent.        */
       47       17        /*D* OUTPUT: PTR$ - The returned pointer to the buffer  */
       48       18
       49       19        KXS$GETBFR: PROC ( SIZ, PTR_PRM$,DNT_SCREECH ) ALTRET;
       50       20
       51       21        /*****************************************************************
       52       22        *                                                                *
       53       23        *                           Include files                        *
       54       24        *                                                                *
       55       25        *****************************************************************/
       56       26
       57       27        %INCLUDE K_ID_E;
       58       77        %K#ENTID_E;
       59       96        %K#LYRID_E;
       60      103        %INCLUDE LCP_6;
       61     4382        %INCLUDE KL_MACRO_C;
       62     7734        %INCLUDE KL_AFCN_C;
       63     7835        %INCLUDE KX_EQUS_E;
       64     8274        %INCLUDE KX_PERR_C;
       65     8403        %INCLUDE KX_SCODE_C;
       66     8469        %INCLUDE KX_DATA_C;
       67     8537        %INCLUDE KX_MACROS_M;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:12   
       68     9308        %INCLUDE KV_GLBCNS_E;
       69     9649        %KV#CQ_HNDID_E;
       70     9654        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:13   
       71     9655        /*****************************************************************
       72     9656        *                                                                *
       73     9657        *                           External References                  *
       74     9658        *                                                                *
       75     9659        *****************************************************************/
       76     9660
       77     9661    1   DCL KVB$GET ENTRY (2) ALTRET;
       78     9662    1   DCL KVB$RLS ENTRY (2) ALTRET;
       79     9663    1   DCL KXX$X29 ENTRY (1);
       80     9664    1   DCL KHD$SCREECH ENTRY (1);
       81     9665    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
       82     9666        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:14   
       83     9667        /*****************************************************************
       84     9668        *                                                                *
       85     9669        *                           Auto                                 *
       86     9670        *                                                                *
       87     9671        *****************************************************************/
       88     9672
       89     9673    1   DCL SIZ UBIN;
       90     9674    1   DCL PTR$ PTR;
       91     9675    1   DCL DNT_SCREECH ALIGNED BIT(1);
       92     9676    1   DCL PTR_PRM$ PTR;
       93     9677    1   DCL T$ PTR;
       94     9678    1   DCL KVBSIZ UBIN;
       95     9679    1   DCL BFRX UBIN;
       96     9680    1   DCL RLSBFRX UBIN;
       97     9681        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:15   
       98     9682        /*****************************************************************
       99     9683        *                                                                *
      100     9684        *                           Based                                *
      101     9685        *                                                                *
      102     9686        *****************************************************************/
      103     9687
      104     9688        %KX$DATA ( STCLASS = "BASED ( PTR$ )" );
      105     9708        %KX$FRAME ( STCLASS = "BASED ( PTR$ )" );
      106     9740        %KX$PACKET ( STCLASS = "BASED ( PTR$ )" );
      107     9806        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:16   
      108     9807        /*****************************************************************
      109     9808        *                                                                *
      110     9809        *                           Static                               *
      111     9810        *                                                                *
      112     9811        *****************************************************************/
      113     9812
      114     9813        %KX_DATA;
      115    10503        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:17   
      116    10504        /*****************************************************************
      117    10505        *                                                                *
      118    10506        *                           Constant                             *
      119    10507        *                                                                *
      120    10508        *****************************************************************/
      121    10509
      122    10510        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_RLS#);
      123    10571        %VLP_SCODE (FPTN=Y_TOOBIGBFR,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_TOOBIGBFR#);
      124    10632        %VLP_SCODE (FPTN=Y_NO_GET,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_GET#);
      125    10693        /*****************************************************************
      126    10694        *                                                                *
      127    10695        *                           Procedure                            *
      128    10696        *                                                                *
      129    10697        *****************************************************************/
      130    10698
      131    10699        /*
      132    10700                                             First find the index for the
      133    10701                                             smallest buffer that satisfies
      134    10702                                             this request.
      135    10703        */
      136    10704    1       BFRX = 0;
      137    10705    2       DO WHILE (( SIZ > KX_BUF.SIZ ( BFRX )) AND ( BFRX <= %KX_S_BUF_MAX# ));
      138    10706    2          BFRX = BFRX + 1;
      139    10707    2       END;
      140    10708    1       IF BFRX > %KX_S_BUF_MAX#
      141    10709    1          THEN
      142    10710    2             DO;
      143    10711        /*S* SCREECH_CODE: KXS-S$KX_TOOBIGBFR#
      144    10712             MESSAGE: The buffer is larger than is allowed.
      145    10713        */
      146    10714    2                IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN
      147    10715    2                      IF DNT_SCREECH = '1'B THEN
      148    10716    2                            ALTRETURN;
      149    10717    2                         ELSE
      150    10718    2                            CALL KHD$SCREECH ( Y_TOOBIGBFR );
      151    10719    2                   ELSE
      152    10720    2                      CALL KHD$SCREECH (Y_TOOBIGBFR);
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:18   
      153    10721    2             END;
      154    10722    1       KX_STATS_X25.KXSGET = KX_STATS_X25.KXSGET + 1;
      155    10723        /*
      156    10724                                             If a buffer of this size is
      157    10725                                             available, then everything is
      158    10726                                             easy.  If not, then hopefully
      159    10727                                             KVB can supply one.  If that
      160    10728                                             also is not true, then try
      161    10729                                             releasing buffers until KVB can
      162    10730                                             allocate one.
      163    10731        */
      164    10732    1       IF KX_BUF.HEAD$ ( BFRX ) ~= ADDR(NIL)
      165    10733    1          THEN
      166    10734    2             DO;
      167    10735    2                PTR$ = KX_BUF.HEAD$ ( BFRX );
      168    10736    2                KX_BUF.CNT ( BFRX ) = KX_BUF.CNT ( BFRX ) - 1;
      169    10737    2                KX_BUF.HEAD$ ( BFRX ) = KX$DATA.NEXT$;
      170    10738    2             END;
      171    10739    1          ELSE
      172    10740    2             DO;
      173    10741    2                KX_STATS_X25.KVBGET = KX_STATS_X25.KVBGET + 1;
      174    10742    2                KVBSIZ = ( KX_BUF.SIZ(BFRX) + LENGTHC(KX$PACKET) + 1 ) / 2;
      175    10743    2                CALL KVB$GET ( KVBSIZ, PTR$ )
      176    10744    2                   WHENALTRETURN
      177    10745    3                      DO;
      178    10746        /*
      179    10747                                             Try giving back a larger buffer.
      180    10748        */
      181    10749    3                         RLSBFRX = BFRX + 1;
      182    10750    4                         DO WHILE (( RLSBFRX <= %KX_S_BUF_MAX# ) AND
      183    10751    4                            ( KX_BUF.HEAD$ ( RLSBFRX ) = ADDR(NIL)));
      184    10752    4                            RLSBFRX = RLSBFRX + 1;
      185    10753    4                         END;
      186    10754    3                         IF RLSBFRX <= %KX_S_BUF_MAX#
      187    10755    3                            THEN
      188    10756    4                               DO;
      189    10757    4                                  PTR$ = KX_BUF.HEAD$ ( RLSBFRX );
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:19   
      190    10758    4                                  KX_BUF.HEAD$ ( RLSBFRX ) = KX$DATA.NEXT$;
      191    10759    4                                  KX_BUF.CNT ( RLSBFRX ) = KX_BUF.CNT ( RLSBFRX ) - 1;
      192    10760    4                                  IF KX_BUF.HEAD$ ( RLSBFRX ) = ADDR(NIL)
      193    10761    4                                     THEN
      194    10762    4                                        KX_BUF.TAIL$ ( RLSBFRX ) = ADDR(NIL);
      195    10763    4                                  KVBSIZ = ( KX_BUF.SIZ ( RLSBFRX ) + LENGTHC(KX$PACKET
             10763                                           ) + 1 ) / 2;
      196    10764    4                                  CALL KVB$RLS ( KVBSIZ, PTR$ )
      197    10765    4                                     WHENALTRETURN
      198    10766    5                                        DO;
      199    10767    5                                           IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN
      200    10768    5                                                 IF DNT_SCREECH = '1'B THEN
      201    10769    5                                                       ALTRETURN;
      202    10770    5                                                    ELSE
      203    10771    5                                                       CALL KHD$SCREECH ( Y_NO_RLS );
      204    10772    5                                              ELSE
      205    10773    5                                                 CALL KHD$SCREECH (Y_NO_RLS);
      206    10774    5                                        END;
      207    10775    4                                  KVBSIZ = ( KX_BUF.SIZ(BFRX) + LENGTHC(KX$PACKET) + 1
             10775                                           ) / 2;
      208    10776    4                                  CALL KVB$GET ( KVBSIZ, PTR$ )
      209    10777    4                                     WHENALTRETURN
      210    10778    5                                        DO;
      211    10779        /*S* SCREECH_CODE: KXS-S$KX_NO_GET#
      212    10780             MESSAGE: KVB$GET(SYS) altreturned.
      213    10781        */
      214    10782    5                                           IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN
      215    10783    5                                                 IF DNT_SCREECH = '1'B THEN
      216    10784    5                                                       ALTRETURN;
      217    10785    5                                                    ELSE
      218    10786    5                                                       CALL KHD$SCREECH ( Y_NO_GET );
      219    10787    5                                              ELSE
      220    10788    5                                                 CALL KHD$SCREECH (Y_NO_GET);
      221    10789    5                                        END;
      222    10790    4                               END;
      223    10791    3                            ELSE
      224    10792    4                               DO;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:20   
      225    10793        /*
      226    10794                                             There weren't any larger buffers
      227    10795                                             to return, so return every one
      228    10796                                             of the smaller buffers and hope
      229    10797                                             for the best.
      230    10798        */
      231    10799    4                                  RLSBFRX = 0;
      232    10800    5                                  DO WHILE ( RLSBFRX <= %KX_S_BUF_MAX# );
      233    10801    5                                     PTR$ = KX_BUF.HEAD$ ( RLSBFRX );
      234    10802    6                                     DO WHILE ( PTR$ ~= ADDR(NIL) );
      235    10803    6                                        T$ = KX$DATA.NEXT$;
      236    10804    6                                        KVBSIZ = ( KX_BUF.SIZ ( RLSBFRX ) + LENGTHC(
             10804                                                 KX$PACKET) + 1 ) / 2;
      237    10805    6                                        CALL KVB$RLS ( KVBSIZ, PTR$ )
      238    10806    6                                           WHENALTRETURN
      239    10807    7                                              DO;
      240    10808    7                                                 IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN
      241    10809    7                                                       IF DNT_SCREECH = '1'B THEN
      242    10810    7                                                             ALTRETURN;
      243    10811    7                                                          ELSE
      244    10812    7                                                             CALL KHD$SCREECH (
             10812                                                                      Y_NO_RLS );
      245    10813    7                                                    ELSE
      246    10814    7                                                       CALL KHD$SCREECH (Y_NO_RLS);
      247    10815    7                                              END;
      248    10816    6                                        PTR$ = T$;
      249    10817    6                                     END;
      250    10818    5                                     KX_BUF.CNT ( RLSBFRX ) = 0;
      251    10819    5                                     KX_BUF.HEAD$ ( RLSBFRX ) = ADDR(NIL);
      252    10820    5                                     RLSBFRX = RLSBFRX + 1;
      253    10821    5                                  END;
      254    10822    4                                  KVBSIZ = ( KX_BUF.SIZ(BFRX) + LENGTHC(KX$PACKET) + 1
             10822                                           ) / 2;
      255    10823    4                                  CALL KVB$GET ( KVBSIZ, PTR$ )
      256    10824    4                                     WHENALTRETURN
      257    10825    5                                        DO;
      258    10826        /*
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:21   
      259    10827                                             There really isn't any memory.
      260    10828        */
      261    10829    5                                           IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN
      262    10830    5                                                 IF DNT_SCREECH = '1'B THEN
      263    10831    5                                                       ALTRETURN;
      264    10832    5                                                    ELSE
      265    10833    5                                                       CALL KHD$SCREECH ( Y_NO_GET );
      266    10834    5                                              ELSE
      267    10835    5                                                 CALL KHD$SCREECH (Y_NO_GET);
      268    10836    5                                        END;
      269    10837    4                               END;
      270    10838    3                      END;
      271    10839    2             END;
      272    10840        /*
      273    10841                                             Initialize the buffer.
      274    10842        */
      275    10843    1       KX$PACKET = '0'B;
      276    10844    1       KX$DATA.BFRSIZ = BFRX;
      277    10845    1       PTR_PRM$ = PTR$;
      278    10846
      279    10847    1       RETURN;
      280    10848
      281    10849    1   END KXS$GETBFR;
      282    10850        %EOD;

PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:22   
--  Include file information  --

   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$GETBFR.

   Procedure KXS$GETBFR requires 464 words for executable code.
   Procedure KXS$GETBFR requires 22 words of local(AUTO) storage.

PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:23   

 Object Unit name= KXS$GETBFR                                 File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:25:49.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      9      9  KXS$GETBFR
    1   Proc  even  none   464    1D0  KXS$GETBFR
    2  RoData even  none     6      6  KXS$GETBFR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  KXS$GETBFR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHD$SCREECH
 yes     yes           Std       2 KVB$GET
 yes     yes           Std       2 KVB$RLS
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:24   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_BUF                                KX_STATS_X25                          KX_PM$
r    G$ROS$
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:25   


       31        1        /*T***********************************************************/
       32        2        /*T*                                                         */
       33        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       34        4        /*T*                                                         */
       35        5        /*T***********************************************************/
       36        6        /*F* NAME: KXS$GETBFR                */
       37        7        /*F* PURPOSE: Allocate an I/O buffer */
       38        8
       39        9        /*D* NAME: KXS$GETBFR                */
       40       10        /*D* PURPOSE: Allocate an I/O buffer of the
       41       11                      appropriate size from the pool
       42       12                      of I/O buffers.        */
       43       13        /*D* CALL: CALL KXS$GETBFR ( SIZ, PTR$ )  */
       44       14        /*D* INPUT: SIZ - The size in bytes of just the
       45       15                          data portion of the X.25 packet
       46       16                          to be sent.        */
       47       17        /*D* OUTPUT: PTR$ - The returned pointer to the buffer  */
       48       18
       49       19        KXS$GETBFR: PROC ( SIZ, PTR_PRM$,DNT_SCREECH ) ALTRET;

     19   1 000000  D380 0000 0000  xent KXS$GETBFR      LNJ,B5   X6A_AUTO_3
          1 000003       0016 0003                       DC       22,3

       50       20
       51       21        /*****************************************************************
       52       22        *                                                                *
       53       23        *                           Include files                        *
       54       24        *                                                                *
       55       25        *****************************************************************/
       56       26
       57       27        %INCLUDE K_ID_E;
       58       77        %K#ENTID_E;
       59       96        %K#LYRID_E;
       60      103        %INCLUDE LCP_6;
       61     4382        %INCLUDE KL_MACRO_C;
       62     7734        %INCLUDE KL_AFCN_C;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:26   
       63     7835        %INCLUDE KX_EQUS_E;
       64     8274        %INCLUDE KX_PERR_C;
       65     8403        %INCLUDE KX_SCODE_C;
       66     8469        %INCLUDE KX_DATA_C;
       67     8537        %INCLUDE KX_MACROS_M;
       68     9308        %INCLUDE KV_GLBCNS_E;
       69     9649        %KV#CQ_HNDID_E;
       70     9654        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:27   
       71     9655        /*****************************************************************
       72     9656        *                                                                *
       73     9657        *                           External References                  *
       74     9658        *                                                                *
       75     9659        *****************************************************************/
       76     9660
       77     9661    1   DCL KVB$GET ENTRY (2) ALTRET;
       78     9662    1   DCL KVB$RLS ENTRY (2) ALTRET;
       79     9663    1   DCL KXX$X29 ENTRY (1);
       80     9664    1   DCL KHD$SCREECH ENTRY (1);
       81     9665    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
       82     9666        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:28   
       83     9667        /*****************************************************************
       84     9668        *                                                                *
       85     9669        *                           Auto                                 *
       86     9670        *                                                                *
       87     9671        *****************************************************************/
       88     9672
       89     9673    1   DCL SIZ UBIN;
       90     9674    1   DCL PTR$ PTR;
       91     9675    1   DCL DNT_SCREECH ALIGNED BIT(1);
       92     9676    1   DCL PTR_PRM$ PTR;
       93     9677    1   DCL T$ PTR;
       94     9678    1   DCL KVBSIZ UBIN;
       95     9679    1   DCL BFRX UBIN;
       96     9680    1   DCL RLSBFRX UBIN;
       97     9681        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:29   
       98     9682        /*****************************************************************
       99     9683        *                                                                *
      100     9684        *                           Based                                *
      101     9685        *                                                                *
      102     9686        *****************************************************************/
      103     9687
      104     9688        %KX$DATA ( STCLASS = "BASED ( PTR$ )" );
      105     9708        %KX$FRAME ( STCLASS = "BASED ( PTR$ )" );
      106     9740        %KX$PACKET ( STCLASS = "BASED ( PTR$ )" );
      107     9806        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:30   
      108     9807        /*****************************************************************
      109     9808        *                                                                *
      110     9809        *                           Static                               *
      111     9810        *                                                                *
      112     9811        *****************************************************************/
      113     9812
      114     9813        %KX_DATA;
      115    10503        %EJECT;
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:31   
      116    10504        /*****************************************************************
      117    10505        *                                                                *
      118    10506        *                           Constant                             *
      119    10507        *                                                                *
      120    10508        *****************************************************************/
      121    10509
      122    10510        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_RLS#);
      123    10571        %VLP_SCODE (FPTN=Y_TOOBIGBFR,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_TOOBIGBFR#);
      124    10632        %VLP_SCODE (FPTN=Y_NO_GET,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_GET#);
      125    10693        /*****************************************************************
      126    10694        *                                                                *
      127    10695        *                           Procedure                            *
      128    10696        *                                                                *
      129    10697        *****************************************************************/
      130    10698
      131    10699        /*
      132    10700                                             First find the index for the
      133    10701                                             smallest buffer that satisfies
      134    10702                                             this request.
      135    10703        */
      136    10704    1       BFRX = 0;

  10704   1 000005  8747 000F                            CL       BFRX,AUTO

      137    10705    2       DO WHILE (( SIZ > KX_BUF.SIZ ( BFRX )) AND ( BFRX <= %KX_S_BUF_MAX# ));

  10705   1 000007  0F81 0003                            B        s:10707,PREL

      138    10706    2          BFRX = BFRX + 1;

  10706   1 000009  8AC7 000F                            INC      BFRX,AUTO

      139    10707    2       END;

  10707   1 00000B  ECC7 0004                            LDB,B6   @SIZ,AUTO
          1 00000D  B847 000F                            LDR,R3   BFRX,AUTO
          1 00000F  E806                                 LDR,R6   ,B6
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:32   
          1 000010  E930 0000 001E  xsym                 CMR,R6   KX_BUF+30,R3
          1 000013  0381 0003                            BLE      s:10708,PREL
          1 000015  3D05                                 CMV,R3   5
          1 000016  03F3                                 BLE      s:10706,SPREL

      140    10708    1       IF BFRX > %KX_S_BUF_MAX#

  10708   1 000017  3D05                                 CMV,R3   5
          1 000018  0381 0020                            BLE      s:10722,PREL

      141    10709    1          THEN
      142    10710    2             DO;

      143    10711        /*S* SCREECH_CODE: KXS-S$KX_TOOBIGBFR#
      144    10712             MESSAGE: The buffer is larger than is allowed.
      145    10713        */
      146    10714    2                IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN

  10714   1 00001A  DCC7 0008                            LDB,B5   @DNT_SCREECH,AUTO
          1 00001C  8DD5                                 CMN      B5
          1 00001D  0901 0012                            BE       s:10720,PREL

      147    10715    2                      IF DNT_SCREECH = '1'B THEN

  10715   1 00001F  8985                                 CMZ      ,B5
          1 000020  0881 0004                            BAGE     s:10718,PREL

      148    10716    2                            ALTRETURN;

  10716   1 000022  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      149    10717    2                         ELSE
      150    10718    2                            CALL KHD$SCREECH ( Y_TOOBIGBFR );

  10718   1 000025  BB80 0000 0000  02                   LAB,B3   0
          1 000028  CBF0 0100                            LAB,B4   256,IMO
          1 00002A  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:33   
          1 00002D       0001                            DC       s:10718+9,PREL
          1 00002E  0F81 000A                            B        s:10722,PREL

      151    10719    2                   ELSE
      152    10720    2                      CALL KHD$SCREECH (Y_TOOBIGBFR);

  10720   1 000030  BB80 0000 0000  02                   LAB,B3   0
          1 000033  CBF0 0100                            LAB,B4   256,IMO
          1 000035  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000038       0001                            DC       s:10722,PREL

      153    10721    2             END;

      154    10722    1       KX_STATS_X25.KXSGET = KX_STATS_X25.KXSGET + 1;

  10722   1 000039  8A80 0000 0045  xsym                 INC      KX_STATS_X25+69
          1 00003C  8E80 0000 0044  xsym                 CAD      KX_STATS_X25+68

      155    10723        /*
      156    10724                                             If a buffer of this size is
      157    10725                                             available, then everything is
      158    10726                                             easy.  If not, then hopefully
      159    10727                                             KVB can supply one.  If that
      160    10728                                             also is not true, then try
      161    10729                                             releasing buffers until KVB can
      162    10730                                             allocate one.
      163    10731        */
      164    10732    1       IF KX_BUF.HEAD$ ( BFRX ) ~= ADDR(NIL)

  10732   1 00003F  B847 000F                            LDR,R3   BFRX,AUTO
          1 000041  8DB0 0000 0000  xsym                 CMN      KX_BUF,R3
          1 000044  0901 000F                            BE       s:10741,PREL

      165    10733    1          THEN
      166    10734    2             DO;

      167    10735    2                PTR$ = KX_BUF.HEAD$ ( BFRX );
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:34   

  10735   1 000046  ECB0 0000 0000  xsym                 LDB,B6   KX_BUF,R3
          1 000049  EFC7 000A                            STB,B6   PTR$,AUTO

      168    10736    2                KX_BUF.CNT ( BFRX ) = KX_BUF.CNT ( BFRX ) - 1;

  10736   1 00004B  88B0 0000 0018  xsym                 DEC      KX_BUF+24,R3

      169    10737    2                KX_BUF.HEAD$ ( BFRX ) = KX$DATA.NEXT$;

  10737   1 00004E  DC86                                 LDB,B5   ,B6
          1 00004F  DFB0 0000 0000  xsym                 STB,B5   KX_BUF,R3

      170    10738    2             END;

  10738   1 000052  0F81 0165                            B        s:10843,PREL

      171    10739    1          ELSE
      172    10740    2             DO;

      173    10741    2                KX_STATS_X25.KVBGET = KX_STATS_X25.KVBGET + 1;

  10741   1 000054  8A80 0000 0047  xsym                 INC      KX_STATS_X25+71
          1 000057  8E80 0000 0046  xsym                 CAD      KX_STATS_X25+70

      174    10742    2                KVBSIZ = ( KX_BUF.SIZ(BFRX) + LENGTHC(KX$PACKET) + 1 ) / 2;

  10742   1 00005A  E830 0000 001E  xsym                 LDR,R6   KX_BUF+30,R3
          1 00005D  6E16                                 ADV,R6   22
          1 00005E  6041                                 SOR,R6   1
          1 00005F  EF47 000E                            STR,R6   KVBSIZ,AUTO

      175    10743    2                CALL KVB$GET ( KVBSIZ, PTR$ )

  10743   1 000061  EBC7 000A                            LAB,B6   PTR$,AUTO
          1 000063  EFC7 0014                            STB,B6   RLSBFRX+4,AUTO
          1 000065  DBC7 000E                            LAB,B5   KVBSIZ,AUTO
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:35   
          1 000067  DFC7 0012                            STB,B5   RLSBFRX+2,AUTO
          1 000069  BBC7 0012                            LAB,B3   RLSBFRX+2,AUTO
          1 00006B  CBF0 0200                            LAB,B4   512,IMO
          1 00006D  E380 0000 0000  xent                 LNJ,B6   KVB$GET
          1 000070       0003                            DC       s:10749,PREL
          1 000071  0F81 0146                            B        s:10843,PREL

      176    10744    2                   WHENALTRETURN
      177    10745    3                      DO;

      178    10746        /*
      179    10747                                             Try giving back a larger buffer.
      180    10748        */
      181    10749    3                         RLSBFRX = BFRX + 1;

  10749   1 000073  E847 000F                            LDR,R6   BFRX,AUTO
          1 000075  6E01                                 ADV,R6   1
          1 000076  EF47 0010                            STR,R6   RLSBFRX,AUTO

      182    10750    4                         DO WHILE (( RLSBFRX <= %KX_S_BUF_MAX# ) AND

  10750   1 000078  0F81 0003                            B        s:10753,PREL

      183    10751    4                            ( KX_BUF.HEAD$ ( RLSBFRX ) = ADDR(NIL)));
      184    10752    4                            RLSBFRX = RLSBFRX + 1;

  10752   1 00007A  8AC7 0010                            INC      RLSBFRX,AUTO

      185    10753    4                         END;

  10753   1 00007C  E847 0010                            LDR,R6   RLSBFRX,AUTO
          1 00007E  6D05                                 CMV,R6   5
          1 00007F  0301 0006                            BG       s:10754,PREL
          1 000081  B856                                 LDR,R3   R6
          1 000082  8DB0 0000 0000  xsym                 CMN      KX_BUF,R3
          1 000085  0975                                 BE       s:10752,SPREL

PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:36   
      186    10754    3                         IF RLSBFRX <= %KX_S_BUF_MAX#

  10754   1 000086  6D05                                 CMV,R6   5
          1 000087  0301 008D                            BG       s:10799,PREL

      187    10755    3                            THEN
      188    10756    4                               DO;

      189    10757    4                                  PTR$ = KX_BUF.HEAD$ ( RLSBFRX );

  10757   1 000089  B856                                 LDR,R3   R6
          1 00008A  ECB0 0000 0000  xsym                 LDB,B6   KX_BUF,R3
          1 00008D  EFC7 000A                            STB,B6   PTR$,AUTO

      190    10758    4                                  KX_BUF.HEAD$ ( RLSBFRX ) = KX$DATA.NEXT$;

  10758   1 00008F  DC86                                 LDB,B5   ,B6
          1 000090  DFB0 0000 0000  xsym                 STB,B5   KX_BUF,R3

      191    10759    4                                  KX_BUF.CNT ( RLSBFRX ) = KX_BUF.CNT ( RLSBFRX ) - 1;

  10759   1 000093  88B0 0000 0018  xsym                 DEC      KX_BUF+24,R3

      192    10760    4                                  IF KX_BUF.HEAD$ ( RLSBFRX ) = ADDR(NIL)

  10760   1 000096  8DB0 0000 0000  xsym                 CMN      KX_BUF,R3
          1 000099  0981 0007                            BNE      s:10763,PREL

      193    10761    4                                     THEN
      194    10762    4                                        KX_BUF.TAIL$ ( RLSBFRX ) = ADDR(NIL);

  10762   1 00009B  DB80 0000 0000                       LAB,B5   0
          1 00009E  DFB0 0000 000C  xsym                 STB,B5   KX_BUF+12,R3

      195    10763    4                                 KVBSIZ = ( KX_BUF.SIZ ( RLSBFRX ) + LENGTHC(KX$PACKET
             10763                                           ) + 1 ) / 2;

PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:37   
  10763   1 0000A1  D830 0000 001E  xsym                 LDR,R5   KX_BUF+30,R3
          1 0000A4  5E16                                 ADV,R5   22
          1 0000A5  5041                                 SOR,R5   1
          1 0000A6  DF47 000E                            STR,R5   KVBSIZ,AUTO

      196    10764    4                                  CALL KVB$RLS ( KVBSIZ, PTR$ )

  10764   1 0000A8  DBC7 000A                            LAB,B5   PTR$,AUTO
          1 0000AA  DFC7 0014                            STB,B5   RLSBFRX+4,AUTO
          1 0000AC  CBC7 000E                            LAB,B4   KVBSIZ,AUTO
          1 0000AE  CFC7 0012                            STB,B4   RLSBFRX+2,AUTO
          1 0000B0  BBC7 0012                            LAB,B3   RLSBFRX+2,AUTO
          1 0000B2  CBF0 0200                            LAB,B4   512,IMO
          1 0000B4  E380 0000 0000  xent                 LNJ,B6   KVB$RLS
          1 0000B7       0003                            DC       s:10767,PREL
          1 0000B8  0F81 0020                            B        s:10775,PREL

      197    10765    4                                     WHENALTRETURN
      198    10766    5                                        DO;

      199    10767    5                                           IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN

  10767   1 0000BA  ECC7 0008                            LDB,B6   @DNT_SCREECH,AUTO
          1 0000BC  8DD6                                 CMN      B6
          1 0000BD  0901 0012                            BE       s:10773,PREL

      200    10768    5                                                 IF DNT_SCREECH = '1'B THEN

  10768   1 0000BF  8986                                 CMZ      ,B6
          1 0000C0  0881 0004                            BAGE     s:10771,PREL

      201    10769    5                                                       ALTRETURN;

  10769   1 0000C2  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      202    10770    5                                                    ELSE
      203    10771    5                                                       CALL KHD$SCREECH ( Y_NO_RLS );
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:38   

  10771   1 0000C5  BB80 0000 0002  02                   LAB,B3   +2
          1 0000C8  CBF0 0100                            LAB,B4   256,IMO
          1 0000CA  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 0000CD       0001                            DC       s:10771+9,PREL
          1 0000CE  0F81 000A                            B        s:10775,PREL

      204    10772    5                                              ELSE
      205    10773    5                                                 CALL KHD$SCREECH (Y_NO_RLS);

  10773   1 0000D0  BB80 0000 0002  02                   LAB,B3   +2
          1 0000D3  CBF0 0100                            LAB,B4   256,IMO
          1 0000D5  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 0000D8       0001                            DC       s:10775,PREL

      206    10774    5                                        END;

      207    10775    4                                  KVBSIZ = ( KX_BUF.SIZ(BFRX) + LENGTHC(KX$PACKET) + 1
             10775                                           ) / 2;

  10775   1 0000D9  B847 000F                            LDR,R3   BFRX,AUTO
          1 0000DB  E830 0000 001E  xsym                 LDR,R6   KX_BUF+30,R3
          1 0000DE  6E16                                 ADV,R6   22
          1 0000DF  6041                                 SOR,R6   1
          1 0000E0  EF47 000E                            STR,R6   KVBSIZ,AUTO

      208    10776    4                                  CALL KVB$GET ( KVBSIZ, PTR$ )

  10776   1 0000E2  EBC7 000A                            LAB,B6   PTR$,AUTO
          1 0000E4  EFC7 0014                            STB,B6   RLSBFRX+4,AUTO
          1 0000E6  DBC7 000E                            LAB,B5   KVBSIZ,AUTO
          1 0000E8  DFC7 0012                            STB,B5   RLSBFRX+2,AUTO
          1 0000EA  BBC7 0012                            LAB,B3   RLSBFRX+2,AUTO
          1 0000EC  CBF0 0200                            LAB,B4   512,IMO
          1 0000EE  E380 0000 0000  xent                 LNJ,B6   KVB$GET
          1 0000F1       0003                            DC       s:10782,PREL
          1 0000F2  0F81 0020                            B        s:10790,PREL
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:39   

      209    10777    4                                     WHENALTRETURN
      210    10778    5                                        DO;

      211    10779        /*S* SCREECH_CODE: KXS-S$KX_NO_GET#
      212    10780             MESSAGE: KVB$GET(SYS) altreturned.
      213    10781        */
      214    10782    5                                           IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN

  10782   1 0000F4  ECC7 0008                            LDB,B6   @DNT_SCREECH,AUTO
          1 0000F6  8DD6                                 CMN      B6
          1 0000F7  0901 0012                            BE       s:10788,PREL

      215    10783    5                                                 IF DNT_SCREECH = '1'B THEN

  10783   1 0000F9  8986                                 CMZ      ,B6
          1 0000FA  0881 0004                            BAGE     s:10786,PREL

      216    10784    5                                                       ALTRETURN;

  10784   1 0000FC  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      217    10785    5                                                    ELSE
      218    10786    5                                                       CALL KHD$SCREECH ( Y_NO_GET );

  10786   1 0000FF  BB80 0000 0004  02                   LAB,B3   +4
          1 000102  CBF0 0100                            LAB,B4   256,IMO
          1 000104  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000107       0001                            DC       s:10786+9,PREL
          1 000108  0F81 000A                            B        s:10790,PREL

      219    10787    5                                              ELSE
      220    10788    5                                                 CALL KHD$SCREECH (Y_NO_GET);

  10788   1 00010A  BB80 0000 0004  02                   LAB,B3   +4
          1 00010D  CBF0 0100                            LAB,B4   256,IMO
          1 00010F  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:40   
          1 000112       0001                            DC       s:10790,PREL

      221    10789    5                                        END;

      222    10790    4                               END;

  10790   1 000113  0F81 00A4                            B        s:10843,PREL

      223    10791    3                            ELSE
      224    10792    4                               DO;

      225    10793        /*
      226    10794                                             There weren't any larger buffers
      227    10795                                             to return, so return every one
      228    10796                                             of the smaller buffers and hope
      229    10797                                             for the best.
      230    10798        */
      231    10799    4                                  RLSBFRX = 0;

  10799   1 000115  8747 0010                            CL       RLSBFRX,AUTO

      232    10800    5                                  DO WHILE ( RLSBFRX <= %KX_S_BUF_MAX# );

  10800   1 000117  E847 0010                            LDR,R6   RLSBFRX,AUTO
          1 000119  6D05                                 CMV,R6   5
          1 00011A  0301 0063                            BG       s:10822,PREL

      233    10801    5                                     PTR$ = KX_BUF.HEAD$ ( RLSBFRX );

  10801   1 00011C  B847 0010                            LDR,R3   RLSBFRX,AUTO
          1 00011E  ECB0 0000 0000  xsym                 LDB,B6   KX_BUF,R3
          1 000121  EFC7 000A                            STB,B6   PTR$,AUTO

      234    10802    6                                     DO WHILE ( PTR$ ~= ADDR(NIL) );

  10802   1 000123  0F81 0044                            B        s:10817,PREL

PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:41   
      235    10803    6                                        T$ = KX$DATA.NEXT$;

  10803   1 000125  ECC7 000A                            LDB,B6   PTR$,AUTO
          1 000127  DC86                                 LDB,B5   ,B6
          1 000128  DFC7 000C                            STB,B5   T$,AUTO

      236    10804    6                                        KVBSIZ = ( KX_BUF.SIZ ( RLSBFRX ) + LENGTHC(
             10804                                                 KX$PACKET) + 1 ) / 2;

  10804   1 00012A  B847 0010                            LDR,R3   RLSBFRX,AUTO
          1 00012C  E830 0000 001E  xsym                 LDR,R6   KX_BUF+30,R3
          1 00012F  6E16                                 ADV,R6   22
          1 000130  6041                                 SOR,R6   1
          1 000131  EF47 000E                            STR,R6   KVBSIZ,AUTO

      237    10805    6                                        CALL KVB$RLS ( KVBSIZ, PTR$ )

  10805   1 000133  CBC7 000A                            LAB,B4   PTR$,AUTO
          1 000135  CFC7 0014                            STB,B4   RLSBFRX+4,AUTO
          1 000137  BBC7 000E                            LAB,B3   KVBSIZ,AUTO
          1 000139  BFC7 0012                            STB,B3   RLSBFRX+2,AUTO
          1 00013B  BBC7 0012                            LAB,B3   RLSBFRX+2,AUTO
          1 00013D  CBF0 0200                            LAB,B4   512,IMO
          1 00013F  E380 0000 0000  xent                 LNJ,B6   KVB$RLS
          1 000142       0003                            DC       s:10808,PREL
          1 000143  0F81 0020                            B        s:10816,PREL

      238    10806    6                                           WHENALTRETURN
      239    10807    7                                              DO;

      240    10808    7                                                IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN

  10808   1 000145  ECC7 0008                            LDB,B6   @DNT_SCREECH,AUTO
          1 000147  8DD6                                 CMN      B6
          1 000148  0901 0012                            BE       s:10814,PREL

      241    10809    7                                                       IF DNT_SCREECH = '1'B THEN
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:42   

  10809   1 00014A  8986                                 CMZ      ,B6
          1 00014B  0881 0004                            BAGE     s:10812,PREL

      242    10810    7                                                             ALTRETURN;

  10810   1 00014D  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      243    10811    7                                                          ELSE
      244    10812    7                                                             CALL KHD$SCREECH (
             10812                                                                      Y_NO_RLS );

  10812   1 000150  BB80 0000 0002  02                   LAB,B3   +2
          1 000153  CBF0 0100                            LAB,B4   256,IMO
          1 000155  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000158       0001                            DC       s:10812+9,PREL
          1 000159  0F81 000A                            B        s:10816,PREL

      245    10813    7                                                    ELSE
      246    10814    7                                                       CALL KHD$SCREECH (Y_NO_RLS);

  10814   1 00015B  BB80 0000 0002  02                   LAB,B3   +2
          1 00015E  CBF0 0100                            LAB,B4   256,IMO
          1 000160  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000163       0001                            DC       s:10816,PREL

      247    10815    7                                              END;

      248    10816    6                                        PTR$ = T$;

  10816   1 000164  ECC7 000C                            LDB,B6   T$,AUTO
          1 000166  EFC7 000A                            STB,B6   PTR$,AUTO

      249    10817    6                                     END;

  10817   1 000168  8DC7 000A                            CMN      PTR$,AUTO
          1 00016A  0981 FFBA                            BNE      s:10803,PREL
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:43   

      250    10818    5                                     KX_BUF.CNT ( RLSBFRX ) = 0;

  10818   1 00016C  B847 0010                            LDR,R3   RLSBFRX,AUTO
          1 00016E  8730 0000 0018  xsym                 CL       KX_BUF+24,R3

      251    10819    5                                     KX_BUF.HEAD$ ( RLSBFRX ) = ADDR(NIL);

  10819   1 000171  DB80 0000 0000                       LAB,B5   0
          1 000174  DFB0 0000 0000  xsym                 STB,B5   KX_BUF,R3

      252    10820    5                                     RLSBFRX = RLSBFRX + 1;

  10820   1 000177  8AC7 0010                            INC      RLSBFRX,AUTO

      253    10821    5                                  END;

  10821   1 000179  E847 0010                            LDR,R6   RLSBFRX,AUTO
          1 00017B  6D05                                 CMV,R6   5
          1 00017C  0381 FF9F                            BLE      s:10801,PREL

      254    10822    4                                  KVBSIZ = ( KX_BUF.SIZ(BFRX) + LENGTHC(KX$PACKET) + 1
             10822                                           ) / 2;

  10822   1 00017E  B847 000F                            LDR,R3   BFRX,AUTO
          1 000180  D830 0000 001E  xsym                 LDR,R5   KX_BUF+30,R3
          1 000183  5E16                                 ADV,R5   22
          1 000184  5041                                 SOR,R5   1
          1 000185  DF47 000E                            STR,R5   KVBSIZ,AUTO

      255    10823    4                                  CALL KVB$GET ( KVBSIZ, PTR$ )

  10823   1 000187  EBC7 000A                            LAB,B6   PTR$,AUTO
          1 000189  EFC7 0014                            STB,B6   RLSBFRX+4,AUTO
          1 00018B  DBC7 000E                            LAB,B5   KVBSIZ,AUTO
          1 00018D  DFC7 0012                            STB,B5   RLSBFRX+2,AUTO
          1 00018F  BBC7 0012                            LAB,B3   RLSBFRX+2,AUTO
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:44   
          1 000191  CBF0 0200                            LAB,B4   512,IMO
          1 000193  E380 0000 0000  xent                 LNJ,B6   KVB$GET
          1 000196       0003                            DC       s:10829,PREL
          1 000197  0F81 0020                            B        s:10843,PREL

      256    10824    4                                     WHENALTRETURN
      257    10825    5                                        DO;

      258    10826        /*
      259    10827                                             There really isn't any memory.
      260    10828        */
      261    10829    5                                           IF ADDR(DNT_SCREECH) ~= ADDR(NIL) THEN

  10829   1 000199  ECC7 0008                            LDB,B6   @DNT_SCREECH,AUTO
          1 00019B  8DD6                                 CMN      B6
          1 00019C  0901 0012                            BE       s:10835,PREL

      262    10830    5                                                 IF DNT_SCREECH = '1'B THEN

  10830   1 00019E  8986                                 CMZ      ,B6
          1 00019F  0881 0004                            BAGE     s:10833,PREL

      263    10831    5                                                       ALTRETURN;

  10831   1 0001A1  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      264    10832    5                                                    ELSE
      265    10833    5                                                       CALL KHD$SCREECH ( Y_NO_GET );

  10833   1 0001A4  BB80 0000 0004  02                   LAB,B3   +4
          1 0001A7  CBF0 0100                            LAB,B4   256,IMO
          1 0001A9  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 0001AC       0001                            DC       s:10833+9,PREL
          1 0001AD  0F81 000A                            B        s:10843,PREL

      266    10834    5                                              ELSE
      267    10835    5                                                 CALL KHD$SCREECH (Y_NO_GET);
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:45   

  10835   1 0001AF  BB80 0000 0004  02                   LAB,B3   +4
          1 0001B2  CBF0 0100                            LAB,B4   256,IMO
          1 0001B4  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 0001B7       0001                            DC       s:10843,PREL

      268    10836    5                                        END;

      269    10837    4                               END;

      270    10838    3                      END;

      271    10839    2             END;

      272    10840        /*
      273    10841                                             Initialize the buffer.
      274    10842        */
      275    10843    1       KX$PACKET = '0'B;

  10843   1 0001B8  ECC7 000A                            LDB,B6   PTR$,AUTO
          1 0001BA  5C15                                 LDV,R5   21
          1 0001BB  0021                                 ALR      ;
          1 0001BC       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0001BE       4006 0000                                ALPHANUM(0,B6,,R5,FILL)

      276    10844    1       KX$DATA.BFRSIZ = BFRX;

  10844   1 0001C0  437F                                 CSYNC    s:10843+7,SPREL
          1 0001C1  E847 000F                            LDR,R6   BFRX,AUTO
          1 0001C3  ECC7 000A                            LDB,B6   PTR$,AUTO
          1 0001C5  EAC6 0006                            SRM,R6,'1FFF'X    6,B6
          1 0001C7       1FFF

      277    10845    1       PTR_PRM$ = PTR$;

  10845   1 0001C8  ECC7 000A                            LDB,B6   PTR$,AUTO
          1 0001CA  DCC7 0006                            LDB,B5   @PTR_PRM$,AUTO
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:46   
          1 0001CC  EF85                                 STB,B6   ,B5

      278    10846
      279    10847    1       RETURN;

  10847   1 0001CD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      280    10848
      281    10849    1   END KXS$GETBFR;
      282    10850        %EOD;

PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:47   
--  Include file information  --

   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$GETBFR.
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:48   

 **** Variables and constants ****

  ****  Section 000 RoData KXS$GETBFR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w STRC(48)    r     1 Y_NO_GET                   0-0-0/w STRC(48)    r     1 Y_NO_RLS
     3-0-0/w STRC(48)    r     1 Y_TOOBIGBFR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/w PTR         r     1 @DNT_SCREECH               6-0-0/w PTR         r     1 @PTR_PRM$
     4-0-0/w PTR         r     1 @SIZ                       F-0-0/w UBIN(16)    r     1 BFRX
    *0-0-0/w BIT         r     1 DNT_SCREECH                E-0-0/w UBIN(16)    r     1 KVBSIZ
     A-0-0/w PTR         r     1 PTR$                      *0-0-0/w PTR         r     1 PTR_PRM$
    10-0-0/w UBIN(16)    r     1 RLSBFRX                   *0-0-0/w UBIN(16)    r     1 SIZ
     C-0-0/w PTR         r     1 T$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(672)   r     1 KX_BUF                     0-0-0/b EPTR        r     1 KX_PM$(0:2)
     0-0-0/w STRC(1248)  r     1 KX_STATS_X25

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(128)   r     1 KX$DATA                    0-0-0/w STRC(168)   r     1 KX$PACKET

PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:49   

   Procedure KXS$GETBFR requires 464 words for executable code.
   Procedure KXS$GETBFR requires 22 words of local(AUTO) storage.
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:51   
          MINI XREF LISTING

BFRX
      9679**DCL     10704<<ASSIGN  10705>>DOWHILE 10705>>DOWHILE 10706<<ASSIGN  10706>>ASSIGN  10708>>IF
     10732>>IF      10735>>ASSIGN  10736>>ASSIGN  10736>>ASSIGN  10737>>ASSIGN  10742>>ASSIGN  10749>>ASSIGN
     10775>>ASSIGN  10822>>ASSIGN  10844>>ASSIGN
DNT_SCREECH
      9675**DCL        19--PROC    10714--IF      10715>>IF      10767--IF      10768>>IF      10782--IF
     10783>>IF      10808--IF      10809>>IF      10829--IF      10830>>IF
KHD$SCREECH
      9664**DCL-ENT 10718--CALL    10720--CALL    10771--CALL    10773--CALL    10786--CALL    10788--CALL
     10812--CALL    10814--CALL    10833--CALL    10835--CALL
KVB$GET
      9661**DCL-ENT 10743--CALL    10776--CALL    10823--CALL
KVB$RLS
      9662**DCL-ENT 10764--CALL    10805--CALL
KVBSIZ
      9678**DCL     10742<<ASSIGN  10743<>CALL    10763<<ASSIGN  10764<>CALL    10775<<ASSIGN  10776<>CALL
     10804<<ASSIGN  10805<>CALL    10822<<ASSIGN  10823<>CALL
KX$DATA.BFRSIZ
      9704**DCL     10844<<ASSIGN
KX$DATA.NEXT$
      9703**DCL     10737>>ASSIGN  10758>>ASSIGN  10803>>ASSIGN
KX$DATA.RLS_STAT
      9703**DCL      9704--REDEF
KX$FRAME.CTL
      9728**DCL      9728--REDEF
KX$FRAME.RLS_STAT
      9723**DCL      9724--REDEF
KX$PACKET
      9753**DCL     10742--ASSIGN  10763--ASSIGN  10775--ASSIGN  10804--ASSIGN  10822--ASSIGN  10843<<ASSIGN
KX$PACKET.CTL
      9760**DCL      9760--REDEF
KX$PACKET.LCN#
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:52   
      9789**DCL      9790--REDEF
KX$PACKET.RLS_STAT
      9755**DCL      9756--REDEF
KX$PACKET.TYPE
      9790**DCL      9790--REDEF    9802--REDEF
KX$PACKET.TYPE_BITS.PS
      9794**DCL      9794--REDEF
KX_BUF.CNT
      9829**DCL     10736<<ASSIGN  10736>>ASSIGN  10759<<ASSIGN  10759>>ASSIGN  10818<<ASSIGN
KX_BUF.HEAD$
      9828**DCL     10732>>IF      10735>>ASSIGN  10737<<ASSIGN  10750>>DOWHILE 10757>>ASSIGN  10758<<ASSIGN
     10760>>IF      10801>>ASSIGN  10819<<ASSIGN
KX_BUF.SIZ
      9829**DCL     10705>>DOWHILE 10742>>ASSIGN  10763>>ASSIGN  10775>>ASSIGN  10804>>ASSIGN  10822>>ASSIGN
KX_BUF.TAIL$
      9829**DCL     10762<<ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     10100**DCL     10106--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     10141**DCL     10148--REDEF
KX_STATS_X25.KVBGET
     10486**DCL     10741<<ASSIGN  10741>>ASSIGN
KX_STATS_X25.KXSGET
     10486**DCL     10722<<ASSIGN  10722>>ASSIGN
KX_STATS_X25.REQSTATS.DSPMSK
     10425**DCL     10431--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     10466**DCL     10473--REDEF
PTR$
      9674**DCL      9701--IMP-PTR  9721--IMP-PTR  9753--IMP-PTR 10735<<ASSIGN  10737>>ASSIGN  10743<>CALL
     10757<<ASSIGN  10758>>ASSIGN  10764<>CALL    10776<>CALL    10801<<ASSIGN  10802>>DOWHILE 10803>>ASSIGN
     10805<>CALL    10816<<ASSIGN  10823<>CALL    10843>>ASSIGN  10844>>ASSIGN  10845>>ASSIGN
PTR_PRM$
      9676**DCL        19--PROC    10845<<ASSIGN
RLSBFRX
      9680**DCL     10749<<ASSIGN  10750>>DOWHILE 10750>>DOWHILE 10752<<ASSIGN  10752>>ASSIGN  10754>>IF
PL6.E3A0      #002=KXS$GETBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:25 Page:53   
     10757>>ASSIGN  10758>>ASSIGN  10759>>ASSIGN  10759>>ASSIGN  10760>>IF      10762>>ASSIGN  10763>>ASSIGN
     10799<<ASSIGN  10800>>DOWHILE 10801>>ASSIGN  10804>>ASSIGN  10818>>ASSIGN  10819>>ASSIGN  10820<<ASSIGN
     10820>>ASSIGN
SIZ
      9673**DCL        19--PROC    10705>>DOWHILE
T$
      9677**DCL     10803<<ASSIGN  10816>>ASSIGN
Y_NO_GET
     10659**DCL     10786<>CALL    10788<>CALL    10833<>CALL    10835<>CALL
Y_NO_RLS
     10537**DCL     10771<>CALL    10773<>CALL    10812<>CALL    10814<>CALL
Y_TOOBIGBFR
     10598**DCL     10718<>CALL    10720<>CALL

PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:54   
      283        1        /*T***********************************************************/
      284        2        /*T*                                                         */
      285        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      286        4        /*T*                                                         */
      287        5        /*T***********************************************************/
      288        6        /*F* NAME: KXS$GETCNTX               */
      289        7        /*F* PURPOSE: Allocate and initialize an L1/L2 context block  */
      290        8
      291        9        /*D* NAME: KXS$GETCNTX               */
      292       10        /*D* PURPOSE: Allocate and initialize an L1/L2 context
      293       11                      block, including the parsing of the SUPER
      294       12                      definitions.           */
      295       13        /*D* CALL: CALL KXS$GETCNTX ( ADMIN_FPT, CNTX$ ) ALTRET ( label )  */
      296       14        /*D* INPUT: ADMIN_FPT - the fpt supplied by handler common  */
      297       15        /*D* OUTPUT: CNTX$ - pointer to the new context block  */
      298       16
      299       17        KXS$GETCNTX: PROC ( ADMIN_FPT, CTX$ ) ALTRET;
      300       18
      301       19        /*****************************************************************
      302       20        *                                                                *
      303       21        *                           Include files                        *
      304       22        *                                                                *
      305       23        *****************************************************************/
      306       24
      307       25        %INCLUDE K_ID_E;
      308       75        %K#ENTID_E;
      309       94        %K#LYRID_E;
      310      101        %INCLUDE KL_MACRO_C;
      311     3453        %INCLUDE KL_AFCN_C;
      312     3554        %INCLUDE LCP_6;
      313     7833        %INCLUDE CP_6_SUBS;
      314     8373        %INCLUDE KH$CHN;
      315     8495        %INCLUDE KH_MACRO_C;
      316     9238        %INCLUDE KL_SUPER_C;
      317    12140        %INCLUDE KX_EQUS_E;
      318    12579        %INCLUDE KX_L2_E;
      319    12747        %INCLUDE KX_PERR_C;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:55   
      320    12876        %INCLUDE KX_SCODE_C;
      321    12942        %INCLUDE KX_DATA_C;
      322    13010        %INCLUDE KX_MACROS_M;
      323    13781        %INCLUDE KV_GLBCNS_E;
      324    14122        %KV#CQ_HNDID_E;
      325    14127        %INCLUDE K_ADDRESS_M;
      326    14630        %INCLUDE KNH_MACRO_C;
      327    14913        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:56   
      328    14914        /*****************************************************************
      329    14915        *                                                                *
      330    14916        *                           External References                  *
      331    14917        *                                                                *
      332    14918        *****************************************************************/
      333    14919
      334    14920    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
      335    14921    1   DCL KVB$GET ENTRY(2) ALTRET;
      336    14922    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      337    14923    1   DCL KXF$FRAME ENTRY (1) ALTRET;
      338    14924    1   DCL KXX$X29 ENTRY (1);
      339    14925    1   DCL KHD$SCREECH ENTRY (1);
      340    14926    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      341    14927    1   DCL KXS$SYSLOG ENTRY(7);
      342    14928    1   DCL KXS$Q_SYSLOG ENTRY(1);
      343    14929        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:57   
      344    14930        /*****************************************************************
      345    14931        *                                                                *
      346    14932        *                           Auto                                 *
      347    14933        *                                                                *
      348    14934        *****************************************************************/
      349    14935
      350    14936        %KH$ADMIN_FPT ( FPTN = ADMIN_FPT, STCLASS = );
      351    15147    1   DCL CTX$ PTR;
      352    15148    1   DCL CTXW REDEF CTX$ UBIN(32);
      353    15149    1   DCL C$ PTR;
      354    15150    1   DCL CW REDEF C$ UBIN(32);
      355    15151
      356    15152    1   DCL SIZ UBIN;
      357    15153    1   DCL T$ PTR;
      358    15154    1   DCL T1$ PTR;
      359    15155        %KL_LINK (NAME=LINKPRF , STCLASS=AUTO);
      360    15251        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:58   
      361    15252        /*****************************************************************
      362    15253        *                                                                *
      363    15254        *                           Based                                *
      364    15255        *                                                                *
      365    15256        *****************************************************************/
      366    15257
      367    15258        %KH$CHN ( STCLASS = BASED );
      368    15382        %KL_BLKHDR ( NAME = BLKHDR, STCLASS = "BASED ( T$ )" );
      369    15477        %KL_LNK ( NAME = LNK, STCLASS = "BASED ( T$ )" );
      370    15701        %KL_LINK ( NAME = LNKPRF, STCLASS = "BASED ( T$ )" );
      371    15797        %KL_VIRCIR ( NAME=DFLVCPRF, STCLASS=BASED );
      372    16006
      373    16007        %KX$L1 ( STCLASS = "BASED ( CTX$ )" );
      374    16047        %KX$L2 ( STCLASS = "BASED ( CTX$ )" );
      375    16414        %KX$L2 ( FPTN = KX$L2S, SLCC = YES, STCLASS = "BASED (CTX$)" );
      376    16811        %KX$CCB (STCLASS = BASED);
      377    16842
      378    16843        %KX$L1 ( FPTN = KX$TL1, STCLASS = BASED );
      379    16883    1   DCL BCHR CHAR(200) BASED;
      380    16884        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:59   
      381    16885        /*****************************************************************
      382    16886        *                                                                *
      383    16887        *                           Constant                             *
      384    16888        *                                                                *
      385    16889        *****************************************************************/
      386    16890
      387    16891        %KX$L2 ( FPTN = KX_L2, STCLASS = CONSTANT );
      388    17258        %KX$L2 ( FPTN = KX_L2S, SLCC = YES, STCLASS = CONSTANT );
      389    17655    1   DCL KX_SLCCRCVCCBS SBIN SYMREF;
      390    17656
      391    17657        %VLP_ERRCODE (FPTN=NO_L2CTX_MEM,STCLASS=CONSTANT,FCG=KX,MID=S,
      392    17658                      SEV=%G_WRSYSLOG_SEV_SOFT#,
      393    17659                      ERR#=%E_KXF_NO_L2CTX_MEM#);
      394    17705        /*E*    ERROR:      KXF-E_KXF_NO_L2CTX_MEM#-3
      395    17706                MESSAGE:    No more memory to start new link.
      396    17707        */
      397    17708        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:60   
      398    17709        /*****************************************************************
      399    17710        *                                                                *
      400    17711        *                           Static                               *
      401    17712        *                                                                *
      402    17713        *****************************************************************/
      403    17714
      404    17715        %KX_DATA;
      405    18405        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:61   
      406    18406        /*****************************************************************
      407    18407        *                                                                *
      408    18408        *                           Procedure                            *
      409    18409        *                                                                *
      410    18410        *****************************************************************/
      411    18411
      412    18412    1       T$ = ADMIN_FPT.CTX$;
      413    18413
      414    18414        /*
      415    18415                                            Move the profile information into
      416    18416                                            auto for easier access.
      417    18417        */
      418    18418    1       LINKPRF = PINCRW (T$, (BLKHDR.PROOFFSET+16)/2) -> LNKPRF;
      419    18419    1       T1$ = PINCRW ( T$, BLKHDR.PROOFFSET/2+16+SIZEW(LNKPRF) );
      420    18420    1       IF ADMIN_FPT.CHN$ -> KH$CHN.ATTR&%G_ATTR_CL_SLCC
      421    18421    1          THEN
      422    18422    2             DO;
      423    18423    2                SIZ = 8 * (LINKPRF.WND# + MINIMUM(LINKPRF.WND#,KX_SLCCRCVCCBS)) +
      424    18424    2                   SIZEW (KX_L2S)+7;
      425    18425    2                CALL KVB$GET (SIZ, CTX$) ALTRET (NO_GET);
      426    18426    2                C$ = CTX$;
      427    18427        /*
      428    18428                                            Make sure CTX is at a half_page bound
      429    18429        */
      430    18430    2                CTXW = (CTXW+127)/128*128;
      431    18431    2                KX$L2S = KX_L2S;
      432    18432    2                KX$L2S.P_CCB.DATA_ADR = %KX_L2_P_FRAME#/8+CTXW*2;
      433    18433    2                KX$L2S.L2$ = C$;
      434    18434    2                KX$L2S.L2SIZ = SIZ;
      435    18435    2                KX$L2S.T1S = LINKPRF.TMT#*60; /* The poor SLCC can't multiply. */
      436    18436    2                CW = (CW+7)/8*8;    /* Put CCBs on 8-word bound. */
      437    18437    2                KX$L2S.MAXCCB = MINIMUM(LINKPRF.WND#,KX_SLCCRCVCCBS,31);
      438    18438    3                DO WHILE C$<PINCRW (KX$L2S.L2$,KX$L2S.L2SIZ);
      439    18439    4                   IF C$=CTX$ THEN DO;
      440    18440    4                            C$ = PINCRW(C$,(SIZEW(KX$L2S)+7)/8*8);
      441    18441    4                            IF KX$L2S.CCBHD$=ADDR(NIL)
      442    18442    4                               THEN EXIT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:62   
      443    18443    4                            PINCRW(CTX$,-8)->KX$CCB.LNK$ = C$;
      444    18444    4                         END;
      445    18445    3                   IF KX$L2S.CCBHD$ = ADDR(NIL)
      446    18446    3                      THEN
      447    18447    3                         KX$L2S.CCBHD$ = C$;
      448    18448    3                   C$->KX$CCB.LNK$ = PINCRW(C$,8);
      449    18449    3                   C$ = C$->KX$CCB.LNK$;
      450    18450    3                END;
      451    18451    2                PINCRW(C$,-8)->KX$CCB.LNK$ = ADDR(NIL);
      452    18452    2             END;
      453    18453    2          ELSE DO;
      454    18454    2                SIZ = SIZEW(KX$L2);
      455    18455    2                CALL KVB$GETSYS ( SIZ, CTX$ )
      456    18456    2                   WHENALTRETURN
      457    18457    3                      DO;
      458    18458    3   NO_GET:               ;
      459    18459                              %WRSYSLOG ( ERRCOD = NO_L2CTX_MEM,
      460    18460                              TRMID = "ADMIN_FPT.CHN$->KH$CHN.TERMID" );
      461    18478    3                         ALTRETURN;
      462    18479    3                      END;
      463    18480    2                KX$L2 = KX_L2;
      464    18481    2                KX$L2.TMRBLK.CTX$ = CTX$;
      465    18482    2                IF ADMIN_FPT.CHN$->KH$CHN.DVCID = '2978'X
      466    18483    2                   THEN
      467    18484    2                      KX$L2.MAXCCB = 8;
      468    18485    2             END;
      469    18486    1       KX$L2.T20TMR.CTX$ = CTX$;
      470    18487    1       KX$L2.T20 = LINKPRF.RESTIM#;
      471    18488    1       KX$L2.R20 = LINKPRF.RESRTY#;
      472    18489    1       KX$L2.IDL_PRD = LINKPRF.IDLTIM#;
      473    18490         /*
      474    18491                                             Move the information from
      475    18492                                             ADMIN_FPT into the context.
      476    18493        */
      477    18494    1       KX$L1.CHN$ = ADMIN_FPT.CHN$;
      478    18495        /*
      479    18496                                             Move the information from the
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:63   
      480    18497                                             LNK definition into the context.
      481    18498        */
      482    18499    1       KX$L2.NTWADR = LNK.ADR;
      483    18500        /*
      484    18501                                             Move the information from the
      485    18502                                             profile into the context.
      486    18503        */
      487    18504    1       IF ( LINKPRF.CLS# = %KLX25_CLS_X25# ) OR ( LINKPRF.CLS# = %KLX25_CLS_ALL# )
      488    18505    1          THEN
      489    18506    1             KX$L2.FLG.ACPX25 = '1'B;
      490    18507    1          ELSE
      491    18508    1             KX$L2.FLG.ACPX25 = '0'B;
      492    18509    1       IF ( LINKPRF.CLS# = %KLX25_CLS_X29# ) OR ( LINKPRF.CLS# = %KLX25_CLS_ALL# )
      493    18510    1          THEN
      494    18511    1             KX$L2.FLG.ACPX29 = '1'B;
      495    18512    1          ELSE
      496    18513    1             KX$L2.FLG.ACPX29 = '0'B;
      497    18514    1       KX$L2.LIC = LNK.LIC;
      498    18515    1       KX$L2.HIC = LNK.HIC;
      499    18516    1       KX$L2.LOC = LNK.LOC;
      500    18517    1       KX$L2.HOC = LNK.HOC;
      501    18518    1       KX$L2.FLG.FSTSLCACP = LINKPRF.FSA#;
      502    18519    1       KX$L2.FLG.CHRINF = LINKPRF.CHARGE#;
      503    18520    1       KX$L2.FLG.EXTSEQ = LINKPRF.EXTSEQ#;
      504    18521    1       KX$L2.T1 = LINKPRF.TMT#;
      505    18522    1       KX$L2.N2 = LINKPRF.RTR#;
      506    18523    1       KX$L1.BUF_SIZE = LINKPRF.FRMSIZ#;
      507    18524    1       KX$L2.MAXWND = LINKPRF.MAXWND#;
      508    18525    1       IF LNK.MODE# = %KLX25_MOD_DTE#
      509    18526    1          THEN
      510    18527    2             DO;
      511    18528    2                KX$L2.FLG.DCE = '0'B;
      512    18529    2                KX$L2.ADR_CMND = 1;
      513    18530    2                KX$L2.ADR_RESP = 3;
      514    18531    2                IF KX$L2.IDL_PRD ~= 0 THEN
      515    18532    2                      KX$L2.IDL_PRD = MAXIMUM(KX$L2.T1+2, KX$L2.IDL_PRD + 2);
      516    18533    2             END;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:64   
      517    18534    1          ELSE
      518    18535    2             DO;
      519    18536    2                KX$L2.FLG.DCE = '1'B;
      520    18537    2                KX$L2.ADR_CMND = 3;
      521    18538    2                KX$L2.ADR_RESP = 1;
      522    18539    2                IF KX$L2.IDL_PRD ~= 0 THEN
      523    18540    2                      KX$L2.IDL_PRD = MAXIMUM ( KX$L2.T1+1, KX$L2.IDL_PRD );
      524    18541    2             END;
      525    18542    1       KX$L2.IDL_CLK = KX$L2.IDL_PRD;
      526    18543    1       KX$L2.RSPDLY = LINKPRF.RSPDLY#;
      527    18544    1       KX$L2.FLG.REV_CH = LINKPRF.RVR#;
      528    18545    1       KX$L2.K = LINKPRF.WND#;
      529    18546    1       KX$L2.DFLVCPRF = T1$ -> DFLVCPRF;
      530    18547    1       KX$L2.DSTSNPA = LNK.DEST;
      531    18548    1       KX$L2.QOS = LNK.QOS#;
      532    18549        /*
      533    18550                                             Add this context to the list.
      534    18551        */
      535    18552    1       IF KX_CNTX.HD$ = ADDR(NIL)
      536    18553    1          THEN
      537    18554    2             DO;
      538    18555    2                KX_CNTX.HD$ = CTX$;
      539    18556    2             END;
      540    18557    1          ELSE
      541    18558    2             DO;
      542    18559    2                KX_CNTX.TL$ -> KX$TL1.NEXT$ = CTX$;
      543    18560    2             END;
      544    18561    1       KX_CNTX.TL$ = CTX$;
      545    18562        /*
      546    18563                                             Stuff the context pointer into
      547    18564                                             the channel table.
      548    18565        */
      549    18566    1       ADMIN_FPT.CHN$ -> KH$CHN.CTX$ = CTX$;
      550    18567
      551    18568        /*
      552    18569           Update available MEM and IOMEM according to formula
      553    18570        */
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:65   
      554    18571    1       KX_AVL_MEM = KX_AVL_MEM - 400;
      555    18572    1       KX_AVL_IOMEM = KX_AVL_IOMEM -
      556    18573    1          (KX$L2.MAXCCB + KX$L2.K) * KX_BUF.SIZ(KX$L2.BUF_SIZE);
      557    18574    1       RETURN;
      558    18575
      559    18576    1   END KXS$GETCNTX;
      560    18577        %EOD;

PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:66   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_L2_E.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$GETCNTX.

   Procedure KXS$GETCNTX requires 654 words for executable code.
   Procedure KXS$GETCNTX requires 26 words of local(AUTO) storage.

PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:67   

 Object Unit name= KXS$GETCNTX                                File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:26:26.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS    441    1B9  KXS$GETCNTX
    1   Proc  even  none   654    28E  KXS$GETCNTX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  KXS$GETCNTX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KXF$FRAME
 yes     yes           Std       2 KVB$GETSYS
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       2 KVB$GET
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:68   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_SLCCRCVCCBS                        KX_CNTX                               KX_BUF
     KX_AVL_MEM                            KX_AVL_IOMEM                          KX_PM$
r    G$ROS$
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:69   


      283        1        /*T***********************************************************/
      284        2        /*T*                                                         */
      285        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      286        4        /*T*                                                         */
      287        5        /*T***********************************************************/
      288        6        /*F* NAME: KXS$GETCNTX               */
      289        7        /*F* PURPOSE: Allocate and initialize an L1/L2 context block  */
      290        8
      291        9        /*D* NAME: KXS$GETCNTX               */
      292       10        /*D* PURPOSE: Allocate and initialize an L1/L2 context
      293       11                      block, including the parsing of the SUPER
      294       12                      definitions.           */
      295       13        /*D* CALL: CALL KXS$GETCNTX ( ADMIN_FPT, CNTX$ ) ALTRET ( label )  */
      296       14        /*D* INPUT: ADMIN_FPT - the fpt supplied by handler common  */
      297       15        /*D* OUTPUT: CNTX$ - pointer to the new context block  */
      298       16
      299       17        KXS$GETCNTX: PROC ( ADMIN_FPT, CTX$ ) ALTRET;

     17   1 000000  D380 0000 0000  xent KXS$GETCNTX     LNJ,B5   X6A_AUTO_2
          1 000003       001A 0002                       DC       26,2

      300       18
      301       19        /*****************************************************************
      302       20        *                                                                *
      303       21        *                           Include files                        *
      304       22        *                                                                *
      305       23        *****************************************************************/
      306       24
      307       25        %INCLUDE K_ID_E;
      308       75        %K#ENTID_E;
      309       94        %K#LYRID_E;
      310      101        %INCLUDE KL_MACRO_C;
      311     3453        %INCLUDE KL_AFCN_C;
      312     3554        %INCLUDE LCP_6;
      313     7833        %INCLUDE CP_6_SUBS;
      314     8373        %INCLUDE KH$CHN;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:70   
      315     8495        %INCLUDE KH_MACRO_C;
      316     9238        %INCLUDE KL_SUPER_C;
      317    12140        %INCLUDE KX_EQUS_E;
      318    12579        %INCLUDE KX_L2_E;
      319    12747        %INCLUDE KX_PERR_C;
      320    12876        %INCLUDE KX_SCODE_C;
      321    12942        %INCLUDE KX_DATA_C;
      322    13010        %INCLUDE KX_MACROS_M;
      323    13781        %INCLUDE KV_GLBCNS_E;
      324    14122        %KV#CQ_HNDID_E;
      325    14127        %INCLUDE K_ADDRESS_M;
      326    14630        %INCLUDE KNH_MACRO_C;
      327    14913        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:71   
      328    14914        /*****************************************************************
      329    14915        *                                                                *
      330    14916        *                           External References                  *
      331    14917        *                                                                *
      332    14918        *****************************************************************/
      333    14919
      334    14920    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
      335    14921    1   DCL KVB$GET ENTRY(2) ALTRET;
      336    14922    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      337    14923    1   DCL KXF$FRAME ENTRY (1) ALTRET;
      338    14924    1   DCL KXX$X29 ENTRY (1);
      339    14925    1   DCL KHD$SCREECH ENTRY (1);
      340    14926    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      341    14927    1   DCL KXS$SYSLOG ENTRY(7);
      342    14928    1   DCL KXS$Q_SYSLOG ENTRY(1);
      343    14929        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:72   
      344    14930        /*****************************************************************
      345    14931        *                                                                *
      346    14932        *                           Auto                                 *
      347    14933        *                                                                *
      348    14934        *****************************************************************/
      349    14935
      350    14936        %KH$ADMIN_FPT ( FPTN = ADMIN_FPT, STCLASS = );
      351    15147    1   DCL CTX$ PTR;
      352    15148    1   DCL CTXW REDEF CTX$ UBIN(32);
      353    15149    1   DCL C$ PTR;
      354    15150    1   DCL CW REDEF C$ UBIN(32);
      355    15151
      356    15152    1   DCL SIZ UBIN;
      357    15153    1   DCL T$ PTR;
      358    15154    1   DCL T1$ PTR;
      359    15155        %KL_LINK (NAME=LINKPRF , STCLASS=AUTO);
      360    15251        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:73   
      361    15252        /*****************************************************************
      362    15253        *                                                                *
      363    15254        *                           Based                                *
      364    15255        *                                                                *
      365    15256        *****************************************************************/
      366    15257
      367    15258        %KH$CHN ( STCLASS = BASED );
      368    15382        %KL_BLKHDR ( NAME = BLKHDR, STCLASS = "BASED ( T$ )" );
      369    15477        %KL_LNK ( NAME = LNK, STCLASS = "BASED ( T$ )" );
      370    15701        %KL_LINK ( NAME = LNKPRF, STCLASS = "BASED ( T$ )" );
      371    15797        %KL_VIRCIR ( NAME=DFLVCPRF, STCLASS=BASED );
      372    16006
      373    16007        %KX$L1 ( STCLASS = "BASED ( CTX$ )" );
      374    16047        %KX$L2 ( STCLASS = "BASED ( CTX$ )" );
      375    16414        %KX$L2 ( FPTN = KX$L2S, SLCC = YES, STCLASS = "BASED (CTX$)" );
      376    16811        %KX$CCB (STCLASS = BASED);
      377    16842
      378    16843        %KX$L1 ( FPTN = KX$TL1, STCLASS = BASED );
      379    16883    1   DCL BCHR CHAR(200) BASED;
      380    16884        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:74   
      381    16885        /*****************************************************************
      382    16886        *                                                                *
      383    16887        *                           Constant                             *
      384    16888        *                                                                *
      385    16889        *****************************************************************/
      386    16890
      387    16891        %KX$L2 ( FPTN = KX_L2, STCLASS = CONSTANT );
      388    17258        %KX$L2 ( FPTN = KX_L2S, SLCC = YES, STCLASS = CONSTANT );
      389    17655    1   DCL KX_SLCCRCVCCBS SBIN SYMREF;
      390    17656
      391    17657        %VLP_ERRCODE (FPTN=NO_L2CTX_MEM,STCLASS=CONSTANT,FCG=KX,MID=S,
      392    17658                      SEV=%G_WRSYSLOG_SEV_SOFT#,
      393    17659                      ERR#=%E_KXF_NO_L2CTX_MEM#);
      394    17705        /*E*    ERROR:      KXF-E_KXF_NO_L2CTX_MEM#-3
      395    17706                MESSAGE:    No more memory to start new link.
      396    17707        */
      397    17708        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:75   
      398    17709        /*****************************************************************
      399    17710        *                                                                *
      400    17711        *                           Static                               *
      401    17712        *                                                                *
      402    17713        *****************************************************************/
      403    17714
      404    17715        %KX_DATA;
      405    18405        %EJECT;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:76   
      406    18406        /*****************************************************************
      407    18407        *                                                                *
      408    18408        *                           Procedure                            *
      409    18409        *                                                                *
      410    18410        *****************************************************************/
      411    18411
      412    18412    1       T$ = ADMIN_FPT.CTX$;

  18412   1 000005  ECC7 0004                            LDB,B6   @ADMIN_FPT,AUTO
          1 000007  DCC6 0009                            LDB,B5   9,B6
          1 000009  DFC7 000B                            STB,B5   T$,AUTO

      413    18413
      414    18414        /*
      415    18415                                            Move the profile information into
      416    18416                                            auto for easier access.
      417    18417        */
      418    18418    1       LINKPRF = PINCRW (T$, (BLKHDR.PROOFFSET+16)/2) -> LNKPRF;

  18418   1 00000B  E845 0002                            LDR,R6   2,B5
          1 00000D  E570 00FF                            AND,R6   255,IMO
          1 00000F  6E10                                 ADV,R6   16
          1 000010  6041                                 SOR,R6   1
          1 000011  F856                                 LDR,R7   R6
          1 000012  6C00                                 LDV,R6   0
          1 000013  8447 000B                            AID      T$,AUTO
          1 000015  8D47 0014                            SDI      LINKPRF+5,AUTO
          1 000017  ACC7 0014                            LDB,B2   LINKPRF+5,AUTO
          1 000019  2C00                                 LDV,R2   0
          1 00001A  6C0A                                 LDV,R6   10
          1 00001B  BB87                                 LAB,B3   ,AUTO
          1 00001C  3C1E                                 LDV,R3   30
          1 00001D  0008                                 MMM

      419    18419    1       T1$ = PINCRW ( T$, BLKHDR.PROOFFSET/2+16+SIZEW(LNKPRF) );

  18419   1 00001E  DCC7 000B                            LDB,B5   T$,AUTO
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:77   
          1 000020  E845 0002                            LDR,R6   2,B5
          1 000022  E570 00FF                            AND,R6   255,IMO
          1 000024  6041                                 SOR,R6   1
          1 000025  F856                                 LDR,R7   R6
          1 000026  6C00                                 LDV,R6   0
          1 000027  8447 000B                            AID      T$,AUTO
          1 000029  8470 0000 0015                       AID      21,IMO
          1 00002C  8D47 000D                            SDI      T1$,AUTO

      420    18420    1       IF ADMIN_FPT.CHN$ -> KH$CHN.ATTR&%G_ATTR_CL_SLCC

  18420   1 00002E  CCC6 000B                            LDB,B4   11,B6
          1 000030  D844 0005                            LDR,R5   5,B4
          1 000032  D570 0200                            AND,R5   512,IMO
          1 000034  5901 00B3                            BEZ,R5   s:18454,PREL

      421    18421    1          THEN
      422    18422    2             DO;

      423    18423    2                SIZ = 8 * (LINKPRF.WND# + MINIMUM(LINKPRF.WND#,KX_SLCCRCVCCBS)) +

  18423   1 000036  D800 0000 0000  xsym                 LDR,R5   KX_SLCCRCVCCBS
          1 000039  C847 0011                            LDR,R4   LINKPRF+2,AUTO
          1 00003B  C570 00FF                            AND,R4   255,IMO
          1 00003D  C955                                 CMR,R4   R5
          1 00003E  0881 0002                            BAGE     s:18423+11,PREL
          1 000040  D854                                 LDR,R5   R4
          1 000041  CA55                                 ADD,R4   R5
          1 000042  4003                                 SOL,R4   3
          1 000043  CA70 0086                            ADD,R4   134,IMO
          1 000045  CF47 000A                            STR,R4   SIZ,AUTO

      424    18424    2                   SIZEW (KX_L2S)+7;
      425    18425    2                CALL KVB$GET (SIZ, CTX$) ALTRET (NO_GET);

  18425   1 000047  ACC7 0006                            LDB,B2   @CTX$,AUTO
          1 000049  AFC7 0016                            STB,B2   LINKPRF+7,AUTO
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:78   
          1 00004B  CBC7 000A                            LAB,B4   SIZ,AUTO
          1 00004D  CFC7 0014                            STB,B4   LINKPRF+5,AUTO
          1 00004F  BBC7 0014                            LAB,B3   LINKPRF+5,AUTO
          1 000051  CBF0 0200                            LAB,B4   512,IMO
          1 000053  E380 0000 0000  xent                 LNJ,B6   KVB$GET
          1 000056       00A8                            DC       s:18457,PREL

      426    18426    2                C$ = CTX$;

  18426   1 000057  ECC7 0006                            LDB,B6   @CTX$,AUTO
          1 000059  DC86                                 LDB,B5   ,B6
          1 00005A  DFC7 0008                            STB,B5   C$,AUTO

      427    18427        /*
      428    18428                                            Make sure CTX is at a half_page bound
      429    18429        */
      430    18430    2                CTXW = (CTXW+127)/128*128;

  18430   1 00005C  8C86                                 LDI      ,B6
          1 00005D  8470 0000 007F                       AID      127,IMO
          1 000060  70C7                                 DOR,R7   7
          1 000061  7087                                 DOL,R7   7
          1 000062  8D06                                 SDI      ,B6

      431    18431    2                KX$L2S = KX_L2S;

  18431   1 000063  CC86                                 LDB,B4   ,B6
          1 000064  AB80 0000 0138  00                   LAB,B2   KX_L2S
          1 000067  2C00                                 LDV,R2   0
          1 000068  E870 00FE                            LDR,R6   254,IMO
          1 00006A  BB84                                 LAB,B3   ,B4
          1 00006B  3C00                                 LDV,R3   0
          1 00006C  0008                                 MMM

      432    18432    2                KX$L2S.P_CCB.DATA_ADR = %KX_L2_P_FRAME#/8+CTXW*2;

  18432   1 00006D  DC86                                 LDB,B5   ,B6
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:79   
          1 00006E  8C86                                 LDI      ,B6
          1 00006F  7081                                 DOL,R7   1
          1 000070  8470 0000 004E                       AID      78,IMO
          1 000073  E857                                 LDR,R6   R7
          1 000074  EF45 0021                            STR,R6   33,B5

      433    18433    2                KX$L2S.L2$ = C$;

  18433   1 000076  DC86                                 LDB,B5   ,B6
          1 000077  ACC7 0008                            LDB,B2   C$,AUTO
          1 000079  AFC5 006F                            STB,B2   111,B5

      434    18434    2                KX$L2S.L2SIZ = SIZ;

  18434   1 00007B  DC86                                 LDB,B5   ,B6
          1 00007C  E847 000A                            LDR,R6   SIZ,AUTO
          1 00007E  EF45 0071                            STR,R6   113,B5

      435    18435    2                KX$L2S.T1S = LINKPRF.TMT#*60; /* The poor SLCC can't multiply. */

  18435   1 000080  DC86                                 LDB,B5   ,B6
          1 000081  D2C7 0011                            LLH,R5   LINKPRF+2,AUTO
          1 000083  5F3C                                 MLV,R5   60
          1 000084  DF45 002B                            STR,R5   43,B5

      436    18436    2                CW = (CW+7)/8*8;    /* Put CCBs on 8-word bound. */

  18436   1 000086  8CC7 0008                            LDI      C$,AUTO
          1 000088  8470 0000 0007                       AID      7,IMO
          1 00008B  70C3                                 DOR,R7   3
          1 00008C  7083                                 DOL,R7   3
          1 00008D  8D47 0008                            SDI      C$,AUTO

      437    18437    2                KX$L2S.MAXCCB = MINIMUM(LINKPRF.WND#,KX_SLCCRCVCCBS,31);

  18437   1 00008F  DC86                                 LDB,B5   ,B6
          1 000090  4C1F                                 LDV,R4   31
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:80   
          1 000091  C900 0000 0000  xsym                 CMR,R4   KX_SLCCRCVCCBS
          1 000094  0A81 0004                            BALE     s:18437+10,PREL
          1 000096  C800 0000 0000  xsym                 LDR,R4   KX_SLCCRCVCCBS
          1 000099  B847 0011                            LDR,R3   LINKPRF+2,AUTO
          1 00009B  B570 00FF                            AND,R3   255,IMO
          1 00009D  B954                                 CMR,R3   R4
          1 00009E  0881 0002                            BAGE     s:18437+18,PREL
          1 0000A0  C853                                 LDR,R4   R3
          1 0000A1  4008                                 SOL,R4   8
          1 0000A2  CAC5 002F                            SRM,R4,'1F00'X    47,B5
          1 0000A4       1F00

      438    18438    3                DO WHILE C$<PINCRW (KX$L2S.L2$,KX$L2S.L2SIZ);

  18438   1 0000A5  0F81 0023                            B        s:18450,PREL

      439    18439    4                   IF C$=CTX$ THEN DO;

  18439   1 0000A7  ECC7 0008                            LDB,B6   C$,AUTO
          1 0000A9  DCC7 0006                            LDB,B5   @CTX$,AUTO
          1 0000AB  ED85                                 CMB,B6   ,B5
          1 0000AC  0981 000C                            BNE      s:18445,PREL

      440    18440    4                            C$ = PINCRW(C$,(SIZEW(KX$L2S)+7)/8*8);

  18440   1 0000AE  CBC6 0080                            LAB,B4   128,B6
          1 0000B0  CFC7 0008                            STB,B4   C$,AUTO

      441    18441    4                            IF KX$L2S.CCBHD$=ADDR(NIL)

  18441   1 0000B2  EC85                                 LDB,B6   ,B5
          1 0000B3  8DC6 002C                            CMN      44,B6
          1 0000B5  0901 0003                            BE       s:18445,PREL

      442    18442    4                               THEN EXIT;
      443    18443    4                            PINCRW(CTX$,-8)->KX$CCB.LNK$ = C$;

PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:81   
  18443   1 0000B7  CFC6 FFF8                            STB,B4   -8,B6

      444    18444    4                         END;

      445    18445    3                   IF KX$L2S.CCBHD$ = ADDR(NIL)

  18445   1 0000B9  EC85                                 LDB,B6   ,B5
          1 0000BA  8DC6 002C                            CMN      44,B6
          1 0000BC  0981 0005                            BNE      s:18448,PREL

      446    18446    3                      THEN
      447    18447    3                         KX$L2S.CCBHD$ = C$;

  18447   1 0000BE  CCC7 0008                            LDB,B4   C$,AUTO
          1 0000C0  CFC6 002C                            STB,B4   44,B6

      448    18448    3                   C$->KX$CCB.LNK$ = PINCRW(C$,8);

  18448   1 0000C2  ECC7 0008                            LDB,B6   C$,AUTO
          1 0000C4  CBC6 0008                            LAB,B4   8,B6
          1 0000C6  CF86                                 STB,B4   ,B6

      449    18449    3                   C$ = C$->KX$CCB.LNK$;

  18449   1 0000C7  CFC7 0008                            STB,B4   C$,AUTO

      450    18450    3                END;

  18450   1 0000C9  ECC7 0006                            LDB,B6   @CTX$,AUTO
          1 0000CB  DC86                                 LDB,B5   ,B6
          1 0000CC  B845 0071                            LDR,R3   113,B5
          1 0000CE  CCC5 006F                            LDB,B4   111,B5
          1 0000D0  CFC7 0014                            STB,B4   LINKPRF+5,AUTO
          1 0000D2  F853                                 LDR,R7   R3
          1 0000D3  6C00                                 LDV,R6   0
          1 0000D4  8447 0014                            AID      LINKPRF+5,AUTO
          1 0000D6  DCC7 0008                            LDB,B5   C$,AUTO
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:82   
          1 0000D8  8D47 0016                            SDI      LINKPRF+7,AUTO
          1 0000DA  BCC7 0016                            LDB,B3   LINKPRF+7,AUTO
          1 0000DC  BFC7 0018                            STB,B3   LINKPRF+9,AUTO
          1 0000DE  DDC7 0018                            CMB,B5   LINKPRF+9,AUTO
          1 0000E0  0247                                 BL       s:18439,SPREL

      451    18451    2                PINCRW(C$,-8)->KX$CCB.LNK$ = ADDR(NIL);

  18451   1 0000E1  AB80 0000 0000                       LAB,B2   0
          1 0000E4  AFC5 FFF8                            STB,B2   -8,B5

      452    18452    2             END;

  18452   1 0000E6  0F81 0053                            B        s:18486,PREL

      453    18453    2          ELSE DO;

      454    18454    2                SIZ = SIZEW(KX$L2);

  18454   1 0000E8  D870 0138                            LDR,R5   312,IMO
          1 0000EA  DF47 000A                            STR,R5   SIZ,AUTO

      455    18455    2                CALL KVB$GETSYS ( SIZ, CTX$ )

  18455   1 0000EC  ACC7 0006                            LDB,B2   @CTX$,AUTO
          1 0000EE  AFC7 0016                            STB,B2   LINKPRF+7,AUTO
          1 0000F0  CBC7 000A                            LAB,B4   SIZ,AUTO
          1 0000F2  CFC7 0014                            STB,B4   LINKPRF+5,AUTO
          1 0000F4  BBC7 0014                            LAB,B3   LINKPRF+5,AUTO
          1 0000F6  CBF0 0200                            LAB,B4   512,IMO
          1 0000F8  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 0000FB       0003                            DC       s:18457,PREL
          1 0000FC  0F81 001E                            B        s:18480,PREL

      456    18456    2                   WHENALTRETURN
      457    18457    3                      DO;

PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:83   
  18451   1                              NO_GET          null
      458    18458    3   NO_GET:               ;
      459    18459                              %WRSYSLOG ( ERRCOD = NO_L2CTX_MEM,
      460    18460                              TRMID = "ADMIN_FPT.CHN$->KH$CHN.TERMID" );

  18476   1 0000FE  ECC7 0004            NO_GET          LDB,B6   @ADMIN_FPT,AUTO
          1 000100  DCC6 000B                            LDB,B5   11,B6
          1 000102  CB80 0000 0000                       LAB,B4   0
          1 000105  CFC7 0018                            STB,B4   LINKPRF+9,AUTO
          1 000107  BBC5 0012                            LAB,B3   18,B5
          1 000109  BFC7 0016                            STB,B3   LINKPRF+7,AUTO
          1 00010B  DB80 0000 01B7  00                   LAB,B5   NO_L2CTX_MEM
          1 00010E  DFC7 0014                            STB,B5   LINKPRF+5,AUTO
          1 000110  BBC7 0014                            LAB,B3   LINKPRF+5,AUTO
          1 000112  CBF0 0300                            LAB,B4   768,IMO
          1 000114  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 000117       0001                            DC       s:18478,PREL

      461    18478    3                         ALTRETURN;

  18478   1 000118  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      462    18479    3                      END;
      463    18480    2                KX$L2 = KX_L2;

  18480   1 00011B  ECC7 0006                            LDB,B6   @CTX$,AUTO
          1 00011D  DC86                                 LDB,B5   ,B6
          1 00011E  AB80 0000 0000  00                   LAB,B2   KX_L2
          1 000121  2C00                                 LDV,R2   0
          1 000122  E870 0270                            LDR,R6   624,IMO
          1 000124  BB85                                 LAB,B3   ,B5
          1 000125  3C00                                 LDV,R3   0
          1 000126  0008                                 MMM

      464    18481    2                KX$L2.TMRBLK.CTX$ = CTX$;

  18481   1 000127  CC86                                 LDB,B4   ,B6
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:84   
          1 000128  CFC4 0042                            STB,B4   66,B4

      465    18482    2                IF ADMIN_FPT.CHN$->KH$CHN.DVCID = '2978'X

  18482   1 00012A  CCC7 0004                            LDB,B4   @ADMIN_FPT,AUTO
          1 00012C  ACC4 000B                            LDB,B2   11,B4
          1 00012E  E842 0002                            LDR,R6   2,B2
          1 000130  E970 2978                            CMR,R6   10616,IMO
          1 000132  0981 0007                            BNE      s:18486,PREL

      466    18483    2                   THEN
      467    18484    2                      KX$L2.MAXCCB = 8;

  18484   1 000134  9C86                                 LDB,B1   ,B6
          1 000135  D870 0800                            LDR,R5   2048,IMO
          1 000137  DAC1 002F                            SRM,R5,'1F00'X    47,B1
          1 000139       1F00

      468    18485    2             END;

      469    18486    1       KX$L2.T20TMR.CTX$ = CTX$;

  18486   1 00013A  DC86                                 LDB,B5   ,B6
          1 00013B  DFC5 004C                            STB,B5   76,B5

      470    18487    1       KX$L2.T20 = LINKPRF.RESTIM#;

  18487   1 00013D  DC86                                 LDB,B5   ,B6
          1 00013E  E2C7 0012                            LLH,R6   LINKPRF+3,AUTO
          1 000140  E7C5 0055                            STH,R6   85,B5

      471    18488    1       KX$L2.R20 = LINKPRF.RESRTY#;

  18488   1 000142  DC86                                 LDB,B5   ,B6
          1 000143  D847 0012                            LDR,R5   LINKPRF+3,AUTO
          1 000145  DAC5 0054                            SRM,R5,'00FF'X    84,B5
          1 000147       00FF
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:85   

      472    18489    1       KX$L2.IDL_PRD = LINKPRF.IDLTIM#;

  18489   1 000148  DC86                                 LDB,B5   ,B6
          1 000149  C2C7 0013                            LLH,R4   LINKPRF+4,AUTO
          1 00014B  CAC5 0055                            SRM,R4,'00FF'X    85,B5
          1 00014D       00FF

      473    18490         /*
      474    18491                                             Move the information from
      475    18492                                             ADMIN_FPT into the context.
      476    18493        */
      477    18494    1       KX$L1.CHN$ = ADMIN_FPT.CHN$;

  18494   1 00014E  DC86                                 LDB,B5   ,B6
          1 00014F  CCC7 0004                            LDB,B4   @ADMIN_FPT,AUTO
          1 000151  BCC4 000B                            LDB,B3   11,B4
          1 000153  BFC5 0002                            STB,B3   2,B5

      478    18495        /*
      479    18496                                             Move the information from the
      480    18497                                             LNK definition into the context.
      481    18498        */
      482    18499    1       KX$L2.NTWADR = LNK.ADR;

  18499   1 000155  DC86                                 LDB,B5   ,B6
          1 000156  ACC7 000B                            LDB,B2   T$,AUTO
          1 000158  2C08                                 LDV,R2   8
          1 000159  6C08                                 LDV,R6   8
          1 00015A  BB85                                 LAB,B3   ,B5
          1 00015B  3C73                                 LDV,R3   115
          1 00015C  0008                                 MMM

      483    18500        /*
      484    18501                                             Move the information from the
      485    18502                                             profile into the context.
      486    18503        */
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:86   
      487    18504    1       IF ( LINKPRF.CLS# = %KLX25_CLS_X25# ) OR ( LINKPRF.CLS# = %KLX25_CLS_ALL# )

  18504   1 00015D  E847 000F                            LDR,R6   LINKPRF,AUTO
          1 00015F  604E                                 SOR,R6   14
          1 000160  6D01                                 CMV,R6   1
          1 000161  0901 0004                            BE       s:18506,PREL
          1 000163  6D03                                 CMV,R6   3
          1 000164  0981 0007                            BNE      s:18508,PREL

      488    18505    1          THEN
      489    18506    1             KX$L2.FLG.ACPX25 = '1'B;

  18506   1 000166  AC86                                 LDB,B2   ,B6
          1 000167  8942 002E                            LBT,'0020'X       46,B2
          1 000169       0020
          1 00016A  0F81 0005                            B        s:18509,PREL

      490    18507    1          ELSE
      491    18508    1             KX$L2.FLG.ACPX25 = '0'B;

  18508   1 00016C  AC86                                 LDB,B2   ,B6
          1 00016D  8842 002E                            LBF,'0020'X       46,B2
          1 00016F       0020

      492    18509    1       IF ( LINKPRF.CLS# = %KLX25_CLS_X29# ) OR ( LINKPRF.CLS# = %KLX25_CLS_ALL# )

  18509   1 000170  6D02                                 CMV,R6   2
          1 000171  0901 0004                            BE       s:18511,PREL
          1 000173  6D03                                 CMV,R6   3
          1 000174  0981 0007                            BNE      s:18513,PREL

      493    18510    1          THEN
      494    18511    1             KX$L2.FLG.ACPX29 = '1'B;

  18511   1 000176  AC86                                 LDB,B2   ,B6
          1 000177  8942 002E                            LBT,'0010'X       46,B2
          1 000179       0010
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:87   
          1 00017A  0F81 0005                            B        s:18514,PREL

      495    18512    1          ELSE
      496    18513    1             KX$L2.FLG.ACPX29 = '0'B;

  18513   1 00017C  AC86                                 LDB,B2   ,B6
          1 00017D  8842 002E                            LBF,'0010'X       46,B2
          1 00017F       0010

      497    18514    1       KX$L2.LIC = LNK.LIC;

  18514   1 000180  AC86                                 LDB,B2   ,B6
          1 000181  9CC7 000B                            LDB,B1   T$,AUTO
          1 000183  D841 0008                            LDR,R5   8,B1
          1 000185  DF42 0018                            STR,R5   24,B2

      498    18515    1       KX$L2.HIC = LNK.HIC;

  18515   1 000187  AC86                                 LDB,B2   ,B6
          1 000188  D841 0009                            LDR,R5   9,B1
          1 00018A  DF42 0019                            STR,R5   25,B2

      499    18516    1       KX$L2.LOC = LNK.LOC;

  18516   1 00018C  AC86                                 LDB,B2   ,B6
          1 00018D  D841 000A                            LDR,R5   10,B1
          1 00018F  DF42 001B                            STR,R5   27,B2

      500    18517    1       KX$L2.HOC = LNK.HOC;

  18517   1 000191  AC86                                 LDB,B2   ,B6
          1 000192  D841 000B                            LDR,R5   11,B1
          1 000194  DF42 001C                            STR,R5   28,B2

      501    18518    1       KX$L2.FLG.FSTSLCACP = LINKPRF.FSA#;

  18518   1 000196  AC86                                 LDB,B2   ,B6
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:88   
          1 000197  D847 000F                            LDR,R5   LINKPRF,AUTO
          1 000199  5006                                 SOL,R5   6
          1 00019A  DAC2 002F                            SRM,R5,'4000'X    47,B2
          1 00019C       4000

      502    18519    1       KX$L2.FLG.CHRINF = LINKPRF.CHARGE#;

  18519   1 00019D  AC86                                 LDB,B2   ,B6
          1 00019E  D847 000F                            LDR,R5   LINKPRF,AUTO
          1 0001A0  5006                                 SOL,R5   6
          1 0001A1  DAC2 002F                            SRM,R5,'2000'X    47,B2
          1 0001A3       2000

      503    18520    1       KX$L2.FLG.EXTSEQ = LINKPRF.EXTSEQ#;

  18520   1 0001A4  AC86                                 LDB,B2   ,B6
          1 0001A5  D847 0010                            LDR,R5   LINKPRF+1,AUTO
          1 0001A7  DAC2 002F                            SRM,R5,'8000'X    47,B2
          1 0001A9       8000

      504    18521    1       KX$L2.T1 = LINKPRF.TMT#;

  18521   1 0001AA  AC86                                 LDB,B2   ,B6
          1 0001AB  C2C7 0011                            LLH,R4   LINKPRF+2,AUTO
          1 0001AD  CAC2 0016                            SRM,R4,'00FF'X    22,B2
          1 0001AF       00FF

      505    18522    1       KX$L2.N2 = LINKPRF.RTR#;

  18522   1 0001B0  AC86                                 LDB,B2   ,B6
          1 0001B1  B847 0010                            LDR,R3   LINKPRF+1,AUTO
          1 0001B3  B570 00FF                            AND,R3   255,IMO
          1 0001B5  B7C2 0017                            STH,R3   23,B2

      506    18523    1       KX$L1.BUF_SIZE = LINKPRF.FRMSIZ#;

  18523   1 0001B7  AC86                                 LDB,B2   ,B6
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:89   
          1 0001B8  A847 000F                            LDR,R2   LINKPRF,AUTO
          1 0001BA  204A                                 SOR,R2   10
          1 0001BB  A570 000F                            AND,R2   15,IMO
          1 0001BD  A7C2 0004                            STH,R2   4,B2

      507    18524    1       KX$L2.MAXWND = LINKPRF.MAXWND#;

  18524   1 0001BF  AC86                                 LDB,B2   ,B6
          1 0001C0  9847 0010                            LDR,R1   LINKPRF+1,AUTO
          1 0001C2  1048                                 SOR,R1   8
          1 0001C3  9570 007F                            AND,R1   127,IMO
          1 0001C5  97C2 001A                            STH,R1   26,B2

      508    18525    1       IF LNK.MODE# = %KLX25_MOD_DTE#

  18525   1 0001C7  89C1 000C                            CMZ      12,B1
          1 0001C9  0801 0027                            BAL      s:18536,PREL

      509    18526    1          THEN
      510    18527    2             DO;

      511    18528    2                KX$L2.FLG.DCE = '0'B;

  18528   1 0001CB  AC86                                 LDB,B2   ,B6
          1 0001CC  8842 002E                            LBF,'1000'X       46,B2
          1 0001CE       1000

      512    18529    2                KX$L2.ADR_CMND = 1;

  18529   1 0001CF  AC86                                 LDB,B2   ,B6
          1 0001D0  6C01                                 LDV,R6   1
          1 0001D1  E7C2 001E                            STH,R6   30,B2

      513    18530    2                KX$L2.ADR_RESP = 3;

  18530   1 0001D3  AC86                                 LDB,B2   ,B6
          1 0001D4  6C03                                 LDV,R6   3
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:90   
          1 0001D5  EAC2 001E                            SRM,R6,'00FF'X    30,B2
          1 0001D7       00FF

      514    18531    2                IF KX$L2.IDL_PRD ~= 0 THEN

  18531   1 0001D8  AC86                                 LDB,B2   ,B6
          1 0001D9  82C2 0055                            LB,'00FF'X        85,B2
          1 0001DB       00FF
          1 0001DC  0581 0037                            BBF      s:18542,PREL

      515    18532    2                      KX$L2.IDL_PRD = MAXIMUM(KX$L2.T1+2, KX$L2.IDL_PRD + 2);

  18532   1 0001DE  E842 0055                            LDR,R6   85,B2
          1 0001E0  E570 00FF                            AND,R6   255,IMO
          1 0001E2  6E02                                 ADV,R6   2
          1 0001E3  D842 0016                            LDR,R5   22,B2
          1 0001E5  D570 00FF                            AND,R5   255,IMO
          1 0001E7  5E02                                 ADV,R5   2
          1 0001E8  D956                                 CMR,R5   R6
          1 0001E9  0381 0002                            BLE      s:18532+14,PREL
          1 0001EB  E855                                 LDR,R6   R5
          1 0001EC  EAC2 0055                            SRM,R6,'00FF'X    85,B2
          1 0001EE       00FF

      516    18533    2             END;

  18533   1 0001EF  0F81 0024                            B        s:18542,PREL

      517    18534    1          ELSE
      518    18535    2             DO;

      519    18536    2                KX$L2.FLG.DCE = '1'B;

  18536   1 0001F1  AC86                                 LDB,B2   ,B6
          1 0001F2  8942 002E                            LBT,'1000'X       46,B2
          1 0001F4       1000

PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:91   
      520    18537    2                KX$L2.ADR_CMND = 3;

  18537   1 0001F5  AC86                                 LDB,B2   ,B6
          1 0001F6  6C03                                 LDV,R6   3
          1 0001F7  E7C2 001E                            STH,R6   30,B2

      521    18538    2                KX$L2.ADR_RESP = 1;

  18538   1 0001F9  AC86                                 LDB,B2   ,B6
          1 0001FA  6C01                                 LDV,R6   1
          1 0001FB  EAC2 001E                            SRM,R6,'00FF'X    30,B2
          1 0001FD       00FF

      522    18539    2                IF KX$L2.IDL_PRD ~= 0 THEN

  18539   1 0001FE  AC86                                 LDB,B2   ,B6
          1 0001FF  82C2 0055                            LB,'00FF'X        85,B2
          1 000201       00FF
          1 000202  0581 0011                            BBF      s:18542,PREL

      523    18540    2                      KX$L2.IDL_PRD = MAXIMUM ( KX$L2.T1+1, KX$L2.IDL_PRD );

  18540   1 000204  E842 0055                            LDR,R6   85,B2
          1 000206  E570 00FF                            AND,R6   255,IMO
          1 000208  D842 0016                            LDR,R5   22,B2
          1 00020A  D570 00FF                            AND,R5   255,IMO
          1 00020C  5E01                                 ADV,R5   1
          1 00020D  D956                                 CMR,R5   R6
          1 00020E  0381 0002                            BLE      s:18540+13,PREL
          1 000210  E855                                 LDR,R6   R5
          1 000211  EAC2 0055                            SRM,R6,'00FF'X    85,B2
          1 000213       00FF

      524    18541    2             END;

      525    18542    1       KX$L2.IDL_CLK = KX$L2.IDL_PRD;

PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:92   
  18542   1 000214  AC86                                 LDB,B2   ,B6
          1 000215  E842 0055                            LDR,R6   85,B2
          1 000217  E570 00FF                            AND,R6   255,IMO
          1 000219  E7C2 0056                            STH,R6   86,B2

      526    18543    1       KX$L2.RSPDLY = LINKPRF.RSPDLY#;

  18543   1 00021B  AC86                                 LDB,B2   ,B6
          1 00021C  E847 000F                            LDR,R6   LINKPRF,AUTO
          1 00021E  E570 007F                            AND,R6   127,IMO
          1 000220  EAC2 001A                            SRM,R6,'00FF'X    26,B2
          1 000222       00FF

      527    18544    1       KX$L2.FLG.REV_CH = LINKPRF.RVR#;

  18544   1 000223  AC86                                 LDB,B2   ,B6
          1 000224  E847 000F                            LDR,R6   LINKPRF,AUTO
          1 000226  6004                                 SOL,R6   4
          1 000227  EAC2 002E                            SRM,R6,'2000'X    46,B2
          1 000229       2000

      528    18545    1       KX$L2.K = LINKPRF.WND#;

  18545   1 00022A  AC86                                 LDB,B2   ,B6
          1 00022B  E847 0011                            LDR,R6   LINKPRF+2,AUTO
          1 00022D  E570 00FF                            AND,R6   255,IMO
          1 00022F  E7C2 0016                            STH,R6   22,B2

      529    18546    1       KX$L2.DFLVCPRF = T1$ -> DFLVCPRF;

  18546   1 000231  AC86                                 LDB,B2   ,B6
          1 000232  AFC7 0014                            STB,B2   LINKPRF+5,AUTO
          1 000234  ACC7 000D                            LDB,B2   T1$,AUTO
          1 000236  2C00                                 LDV,R2   0
          1 000237  6C14                                 LDV,R6   20
          1 000238  BCC7 0014                            LDB,B3   LINKPRF+5,AUTO
          1 00023A  BBC3 0058                            LAB,B3   88,B3
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:93   
          1 00023C  3C00                                 LDV,R3   0
          1 00023D  0008                                 MMM

      530    18547    1       KX$L2.DSTSNPA = LNK.DEST;

  18547   1 00023E  BC86                                 LDB,B3   ,B6
          1 00023F  ACC7 000B                            LDB,B2   T$,AUTO
          1 000241  2C26                                 LDV,R2   38
          1 000242  6C08                                 LDV,R6   8
          1 000243  BBC3 0062                            LAB,B3   98,B3
          1 000245  3C00                                 LDV,R3   0
          1 000246  0008                                 MMM

      531    18548    1       KX$L2.QOS = LNK.QOS#;

  18548   1 000247  BC86                                 LDB,B3   ,B6
          1 000248  ACC7 000B                            LDB,B2   T$,AUTO
          1 00024A  E2C2 0017                            LLH,R6   23,B2
          1 00024C  E7C3 0067                            STH,R6   103,B3

      532    18549        /*
      533    18550                                             Add this context to the list.
      534    18551        */
      535    18552    1       IF KX_CNTX.HD$ = ADDR(NIL)

  18552   1 00024E  8D80 0000 0000  xsym                 CMN      KX_CNTX
          1 000251  0981 0007                            BNE      s:18559,PREL

      536    18553    1          THEN
      537    18554    2             DO;

      538    18555    2                KX_CNTX.HD$ = CTX$;

  18555   1 000253  BC86                                 LDB,B3   ,B6
          1 000254  BF80 0000 0000  xsym                 STB,B3   KX_CNTX

      539    18556    2             END;
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:94   

  18556   1 000257  0F81 0006                            B        s:18561,PREL

      540    18557    1          ELSE
      541    18558    2             DO;

      542    18559    2                KX_CNTX.TL$ -> KX$TL1.NEXT$ = CTX$;

  18559   1 000259  BC86                                 LDB,B3   ,B6
          1 00025A  9C80 0000 0002  xsym                 LDB,B1   KX_CNTX+2
          1 00025D  BF81                                 STB,B3   ,B1

      543    18560    2             END;

      544    18561    1       KX_CNTX.TL$ = CTX$;

  18561   1 00025E  BC86                                 LDB,B3   ,B6
          1 00025F  BF80 0000 0002  xsym                 STB,B3   KX_CNTX+2

      545    18562        /*
      546    18563                                             Stuff the context pointer into
      547    18564                                             the channel table.
      548    18565        */
      549    18566    1       ADMIN_FPT.CHN$ -> KH$CHN.CTX$ = CTX$;

  18566   1 000262  9CC4 000B                            LDB,B1   11,B4
          1 000264  DC86                                 LDB,B5   ,B6
          1 000265  DFC1 000C                            STB,B5   12,B1

      550    18567
      551    18568        /*
      552    18569           Update available MEM and IOMEM according to formula
      553    18570        */
      554    18571    1       KX_AVL_MEM = KX_AVL_MEM - 400;

  18571   1 000267  8C80 0000 0000  xsym                 LDI      KX_AVL_MEM
          1 00026A  8470 FFFF FE70                       AID      -400,IMO
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:95   
          1 00026D  8D00 0000 0000  xsym                 SDI      KX_AVL_MEM

      555    18572    1       KX_AVL_IOMEM = KX_AVL_IOMEM -

  18572   1 000270  DC86                                 LDB,B5   ,B6
          1 000271  D845 002F                            LDR,R5   47,B5
          1 000273  5048                                 SOR,R5   8
          1 000274  D570 001F                            AND,R5   31,IMO
          1 000276  C2C5 0016                            LLH,R4   22,B5
          1 000278  DA54                                 ADD,R5   R4
          1 000279  B2C5 0004                            LLH,R3   4,B5
          1 00027B  F855                                 LDR,R7   R5
          1 00027C  FB30 0000 001E  xsym                 MUL,R7   KX_BUF+30,R3
          1 00027F  6C00                                 LDV,R6   0
          1 000280  8480 0000 0000  xsym                 SID      KX_AVL_IOMEM
          1 000283  8656                                 CPL      R6
          1 000284  8657                                 CPL      R7
          1 000285  8470 0000 0001                       AID      1,IMO
          1 000288  8D00 0000 0000  xsym                 SDI      KX_AVL_IOMEM

      556    18573    1          (KX$L2.MAXCCB + KX$L2.K) * KX_BUF.SIZ(KX$L2.BUF_SIZE);
      557    18574    1       RETURN;

  18574   1 00028B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      558    18575
      559    18576    1   END KXS$GETCNTX;
      560    18577        %EOD;

PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:96   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_L2_E.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$GETCNTX.
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:97   

 **** Variables and constants ****

  ****  Section 000 RoData KXS$GETCNTX

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4992)  r     1 KX_L2                    138-0-0/w STRC(2032)  r     1 KX_L2S
   1B7-0-0/w STRC(32)    r     1 NO_L2CTX_MEM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ADMIN_FPT                 6-0-0/w PTR         r     1 @CTX$
    *0-0-0/w STRC(288)   r     1 ADMIN_FPT                  8-0-0/w PTR         r     1 C$
    *0-0-0/w PTR         r     1 CTX$                      *0-0-0/w UBIN(32)    r     1 CTXW
     8-0-0/w UBIN(32)    r     1 CW                         F-0-0/c STRC(80)    r     1 LINKPRF
     A-0-0/w UBIN(16)    r     1 SIZ                        B-0-0/w PTR         r     1 T$
     D-0-0/w PTR         r     1 T1$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN(32)    r     1 KX_AVL_IOMEM               0-0-0/w SBIN(32)    r     1 KX_AVL_MEM
     0-0-0/w STRC(672)   r     1 KX_BUF                     0-0-0/w STRC(64)    r     1 KX_CNTX
     0-0-0/b EPTR        r     1 KX_PM$(0:2)                0-0-0/w SBIN(16)    r     1 KX_SLCCRCVCCBS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(64)    r     1 BLKHDR                     0-0-0/w STRC(160)   r     1 DFLVCPRF
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:98   
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(128)   r     1 KX$CCB
     0-0-0/w STRC(352)   r     1 KX$L1                      0-0-0/w STRC(4992)  r     1 KX$L2
     0-0-0/w STRC(2032)  r     1 KX$L2S                     0-0-0/w STRC(352)   r     1 KX$TL1
     0-0-0/w STRC(384)   r     1 LNK                        0-0-0/c STRC(80)    r     1 LNKPRF


   Procedure KXS$GETCNTX requires 654 words for executable code.
   Procedure KXS$GETCNTX requires 26 words of local(AUTO) storage.
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:99   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:100  
          MINI XREF LISTING

ADMIN_FPT
     14951**DCL        17--PROC
ADMIN_FPT.CHN$
     15078**DCL     18420>>IF      18476>>CALL    18482>>IF      18494>>ASSIGN  18566>>ASSIGN
ADMIN_FPT.CTX$
     15007**DCL     18412>>ASSIGN
ADMIN_FPT.TERMID.TERM
     14975**DCL     14984--REDEF
BLKHDR.PROOFFSET
     15447**DCL     18418>>ASSIGN  18419>>ASSIGN
C$
     15149**DCL     15150--REDEF   18426<<ASSIGN  18433>>ASSIGN  18438>>DOWHILE 18439>>IF      18440<<ASSIGN
     18440>>ASSIGN  18443>>ASSIGN  18447>>ASSIGN  18448>>ASSIGN  18448>>ASSIGN  18449<<ASSIGN  18449>>ASSIGN
     18451>>ASSIGN
CTX$
     15147**DCL        17--PROC    15148--REDEF   16020--IMP-PTR 16065--IMP-PTR 16432--IMP-PTR 18425<>CALL
     18426>>ASSIGN  18431>>ASSIGN  18432>>ASSIGN  18433>>ASSIGN  18434>>ASSIGN  18435>>ASSIGN  18437>>ASSIGN
     18438>>DOWHILE 18438>>DOWHILE 18439>>IF      18441>>IF      18443>>ASSIGN  18445>>IF      18447>>ASSIGN
     18455<>CALL    18480>>ASSIGN  18481>>ASSIGN  18481>>ASSIGN  18484>>ASSIGN  18486>>ASSIGN  18486>>ASSIGN
     18487>>ASSIGN  18488>>ASSIGN  18489>>ASSIGN  18494>>ASSIGN  18499>>ASSIGN  18506>>ASSIGN  18508>>ASSIGN
     18511>>ASSIGN  18513>>ASSIGN  18514>>ASSIGN  18515>>ASSIGN  18516>>ASSIGN  18517>>ASSIGN  18518>>ASSIGN
     18519>>ASSIGN  18520>>ASSIGN  18521>>ASSIGN  18522>>ASSIGN  18523>>ASSIGN  18524>>ASSIGN  18528>>ASSIGN
     18529>>ASSIGN  18530>>ASSIGN  18531>>IF      18532>>ASSIGN  18532>>ASSIGN  18532>>ASSIGN  18536>>ASSIGN
     18537>>ASSIGN  18538>>ASSIGN  18539>>IF      18540>>ASSIGN  18540>>ASSIGN  18540>>ASSIGN  18542>>ASSIGN
     18542>>ASSIGN  18543>>ASSIGN  18544>>ASSIGN  18545>>ASSIGN  18546>>ASSIGN  18547>>ASSIGN  18548>>ASSIGN
     18555>>ASSIGN  18559>>ASSIGN  18561>>ASSIGN  18566>>ASSIGN  18572>>ASSIGN  18572>>ASSIGN  18572>>ASSIGN
CTXW
     15148**DCL     18430<<ASSIGN  18430>>ASSIGN  18432>>ASSIGN
CW
     15150**DCL     18436<<ASSIGN  18436>>ASSIGN
DFLVCPRF
     15811**DCL     18546>>ASSIGN
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:101  
DFLVCPRF.TRADEL
     15815**DCL     15825--REDEF
KH$CHN.ATTR
     15306**DCL     18420>>IF
KH$CHN.CTX$
     15343**DCL     18566<<ASSIGN
KH$CHN.DVCID
     15299**DCL     18482>>IF
KH$CHN.TERMID
     15367**DCL     18476<>CALL
KH$CHN.TERMID.TERM
     15369**DCL     15378--REDEF
KVB$GET
     14921**DCL-ENT 18425--CALL
KVB$GETSYS
     14922**DCL-ENT 18455--CALL
KX$CCB.LNK$
     16835**DCL     16835--REDEF   18443<<ASSIGN  18448<<ASSIGN  18449>>ASSIGN  18451<<ASSIGN
KX$L1.BUF_SIZE
     16039**DCL     18523<<ASSIGN
KX$L1.CHN$
     16039**DCL     18494<<ASSIGN
KX$L2
     16065**DCL     18454--ASSIGN  18480<<ASSIGN
KX$L2.ADR_CMND
     16095**DCL     18529<<ASSIGN  18537<<ASSIGN
KX$L2.ADR_RESP
     16095**DCL     18530<<ASSIGN  18538<<ASSIGN
KX$L2.BUF_SIZE
     16084**DCL     18572>>ASSIGN
KX$L2.DFLVCPRF
     16203**DCL     18546<<ASSIGN
KX$L2.DFLVCPRF.TRADEL
     16205**DCL     16215--REDEF
KX$L2.DSTSNPA
     16396**DCL     18547<<ASSIGN
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:102  
KX$L2.DSTSNPA.ADR_STRING
     16396**DCL     16396--REDEF
KX$L2.FLG.ACPX25
     16110**DCL     18506<<ASSIGN  18508<<ASSIGN
KX$L2.FLG.ACPX29
     16110**DCL     18511<<ASSIGN  18513<<ASSIGN
KX$L2.FLG.CHRINF
     16112**DCL     18519<<ASSIGN
KX$L2.FLG.DCE
     16108**DCL     18528<<ASSIGN  18536<<ASSIGN
KX$L2.FLG.EXTSEQ
     16112**DCL     18520<<ASSIGN
KX$L2.FLG.FSTSLCACP
     16112**DCL     18518<<ASSIGN
KX$L2.FLG.REV_CH
     16108**DCL     18544<<ASSIGN
KX$L2.FRMR_NSNR
     16182**DCL     16183--REDEF
KX$L2.HIC
     16092**DCL     18515<<ASSIGN
KX$L2.HOC
     16093**DCL     18517<<ASSIGN
KX$L2.IDL_CLK
     16185**DCL     18542<<ASSIGN
KX$L2.IDL_PRD
     16184**DCL     18489<<ASSIGN  18531>>IF      18532<<ASSIGN  18532>>ASSIGN  18539>>IF      18540<<ASSIGN
     18540>>ASSIGN  18542>>ASSIGN
KX$L2.K
     16091**DCL     18545<<ASSIGN  18572>>ASSIGN
KX$L2.LIC
     16092**DCL     18514<<ASSIGN
KX$L2.LOC
     16093**DCL     18516<<ASSIGN
KX$L2.MAXCCB
     16113**DCL     18484<<ASSIGN  18572>>ASSIGN
KX$L2.MAXWND
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:103  
     16092**DCL     18524<<ASSIGN
KX$L2.N2
     16091**DCL     18522<<ASSIGN
KX$L2.NTWADR
     16116**DCL     18499<<ASSIGN
KX$L2.NTWADR.ADR_STRING
     16116**DCL     16116--REDEF
KX$L2.QOS
     16397**DCL     18548<<ASSIGN
KX$L2.R20
     16183**DCL     18488<<ASSIGN
KX$L2.RSPDLY
     16093**DCL     18543<<ASSIGN
KX$L2.STATES
     16094**DCL     16094--REDEF
KX$L2.T1
     16091**DCL     18521<<ASSIGN  18532>>ASSIGN  18540>>ASSIGN
KX$L2.T20
     16184**DCL     18487<<ASSIGN
KX$L2.T20TMR.CTX$
     16177**DCL     18486<<ASSIGN
KX$L2.TMRBLK.CTX$
     16145**DCL     18481<<ASSIGN
KX$L2S
     16432**DCL     18431<<ASSIGN  18440--ASSIGN
KX$L2S.CCBHD$
     16503**DCL     18441>>IF      18445>>IF      18447<<ASSIGN
KX$L2S.DFLVCPRF.TRADEL
     16602**DCL     16612--REDEF
KX$L2S.DSTSNPA.ADR_STRING
     16793**DCL     16793--REDEF
KX$L2S.FRMR_NSNR
     16579**DCL     16580--REDEF
KX$L2S.L2$
     16804**DCL     18433<<ASSIGN  18438>>DOWHILE
KX$L2S.L2SIZ
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:104  
     16804**DCL     18434<<ASSIGN  18438>>DOWHILE
KX$L2S.MAXCCB
     16510**DCL     18437<<ASSIGN
KX$L2S.NTWADR.ADR_STRING
     16513**DCL     16513--REDEF
KX$L2S.P_CCB.DATA_ADR
     16494**DCL     18432<<ASSIGN
KX$L2S.P_CCB.LNK$
     16493**DCL     16493--REDEF
KX$L2S.STATES
     16461**DCL     16461--REDEF
KX$L2S.T1S
     16502**DCL     18435<<ASSIGN
KX$TL1.NEXT$
     16875**DCL     18559<<ASSIGN
KXF$FRAME
     14923**DCL-ENT 16990--DCLINIT 17022--DCLINIT 17387--DCLINIT 17419--DCLINIT
KXS$SYSLOG
     14927**DCL-ENT 18476--CALL
KX_AVL_IOMEM
     18400**DCL     18572<<ASSIGN  18572>>ASSIGN
KX_AVL_MEM
     18400**DCL     18571<<ASSIGN  18571>>ASSIGN
KX_BUF.SIZ
     17731**DCL     18572>>ASSIGN
KX_CNTX.HD$
     17728**DCL     18552>>IF      18555<<ASSIGN
KX_CNTX.TL$
     17728**DCL     18559>>ASSIGN  18561<<ASSIGN
KX_L2
     16909**DCL     18480>>ASSIGN
KX_L2.DFLVCPRF.TRADEL
     17049**DCL     17059--REDEF
KX_L2.DSTSNPA.ADR_STRING
     17240**DCL     17240--REDEF
KX_L2.FRMR_NSNR
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:105  
     17026**DCL     17027--REDEF
KX_L2.NTWADR.ADR_STRING
     16960**DCL     16960--REDEF
KX_L2.STATES
     16938**DCL     16938--REDEF
KX_L2S
     17276**DCL     18423--ASSIGN  18431>>ASSIGN
KX_L2S.DFLVCPRF.TRADEL
     17446**DCL     17456--REDEF
KX_L2S.DSTSNPA.ADR_STRING
     17637**DCL     17637--REDEF
KX_L2S.FRMR_NSNR
     17423**DCL     17424--REDEF
KX_L2S.NTWADR.ADR_STRING
     17357**DCL     17357--REDEF
KX_L2S.P_CCB.LNK$
     17337**DCL     17337--REDEF
KX_L2S.STATES
     17305**DCL     17305--REDEF
KX_SLCCRCVCCBS
     17655**DCL     18423>>ASSIGN  18437>>ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     18002**DCL     18008--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     18043**DCL     18050--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     18327**DCL     18333--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     18368**DCL     18375--REDEF
LINKPRF
     15169**DCL     18418<<ASSIGN
LINKPRF.CHARGE#
     15211**DCL     18519>>ASSIGN
LINKPRF.CLS#
     15176**DCL     18504>>IF      18504>>IF      18509>>IF      18509>>IF
LINKPRF.EXTSEQ#
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:106  
     15224**DCL     18520>>ASSIGN
LINKPRF.FRMSIZ#
     15187**DCL     18523>>ASSIGN
LINKPRF.FSA#
     15204**DCL     18518>>ASSIGN
LINKPRF.IDLTIM#
     15248**DCL     18489>>ASSIGN
LINKPRF.MAXWND#
     15228**DCL     18524>>ASSIGN
LINKPRF.RESRTY#
     15247**DCL     18488>>ASSIGN
LINKPRF.RESTIM#
     15246**DCL     18487>>ASSIGN
LINKPRF.RSPDLY#
     15216**DCL     18543>>ASSIGN
LINKPRF.RTR#
     15233**DCL     18522>>ASSIGN
LINKPRF.RVR#
     15200**DCL     18544>>ASSIGN
LINKPRF.TMT#
     15237**DCL     18435>>ASSIGN  18521>>ASSIGN
LINKPRF.WND#
     15242**DCL     18423>>ASSIGN  18423>>ASSIGN  18437>>ASSIGN  18545>>ASSIGN
LNK.ADR
     15603**DCL     18499>>ASSIGN
LNK.DEST
     15676**DCL     18547>>ASSIGN
LNK.HIC
     15634**DCL     18515>>ASSIGN
LNK.HOC
     15644**DCL     18517>>ASSIGN
LNK.LIC
     15629**DCL     18514>>ASSIGN
LNK.LOC
     15639**DCL     18516>>ASSIGN
LNK.MODE#
PL6.E3A0      #003=KXS$GETCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:26 Page:107  
     15649**DCL     18525>>IF
LNK.QOS#
     15690**DCL     18548>>ASSIGN
LNKPRF
     15715**DCL     18418>>ASSIGN  18419--ASSIGN
NO_GET
     18451**LABEL   18425--CALLALT
NO_L2CTX_MEM
     17673**DCL     18476<>CALL
SIZ
     15152**DCL     18423<<ASSIGN  18425<>CALL    18434>>ASSIGN  18454<<ASSIGN  18455<>CALL
T$
     15153**DCL     15396--IMP-PTR 15494--IMP-PTR 15715--IMP-PTR 18412<<ASSIGN  18418>>ASSIGN  18418>>ASSIGN
     18419>>ASSIGN  18419>>ASSIGN  18499>>ASSIGN  18514>>ASSIGN  18515>>ASSIGN  18516>>ASSIGN  18517>>ASSIGN
     18525>>IF      18547>>ASSIGN  18548>>ASSIGN
T1$
     15154**DCL     18419<<ASSIGN  18546>>ASSIGN

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:108  
      561        1        /*T***********************************************************/
      562        2        /*T*                                                         */
      563        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      564        4        /*T*                                                         */
      565        5        /*T***********************************************************/
      566        6        /*F* NAME: KXS$GETL3                 */
      567        7        /*F* PURPOSE: Allocate a KX$L3 context block  */
      568        8
      569        9        /*D* NAME: KXS$GETL3                 */
      570       10        /*D* PURPOSE: Allocate a KX$L3 context block,
      571       11                      including parsing the SUPER supplied
      572       12                      information.           */
      573       13        /*D* CALL: CALL KXS$GETL3 ( L2$, L3$, KH$ADMIN_FPT ) ALTRET ( label );  */
      574       14        /*D* INPUT: L2$ - pointer to the level 2 context for this level 3
      575       15                    KH$ADMIN_FPT - optional handler common fpt  */
      576       16        /*D* OUTPUT: L3$ - pointer to new context  */
      577       17
      578       18        KXS$GETL3: PROC ( L2$, L3$, ADMIN_FPT ) ALTRET;
      579       19
      580       20        /*****************************************************************
      581       21        *                                                                *
      582       22        *                           Includes                             *
      583       23        *                                                                *
      584       24        *****************************************************************/
      585       25
      586       26        %INCLUDE K_ID_E;
      587       76        %K#ENTID_E;
      588       95        %K#LYRID_E;
      589      102        %INCLUDE KL_MACRO_C;
      590     3454        %INCLUDE KL_AFCN_C;
      591     3555        %INCLUDE LCP_6;
      592     7834        %INCLUDE CP_6_SUBS;
      593     8374        %INCLUDE KH_MACRO_C;
      594     9117        %INCLUDE KL_SUPER_C;
      595    12019        %INCLUDE KX_EQUS_E;
      596    12458        %INCLUDE KX_PERR_C;
      597    12587        %INCLUDE KX_SCODE_C;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:109  
      598    12653        %INCLUDE KX_DATA_C;
      599    12721        %INCLUDE KX_MACROS_M;
      600    13492        %INCLUDE KV_GLBCNS_E;
      601    13833        %INCLUDE K_ADDRESS_M;
      602    14336        %INCLUDE KNH_MACRO_C;
      603    14619        %KV#CQ_HNDID_E;
      604    14624        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:110  
      605    14625        /*****************************************************************
      606    14626        *                                                                *
      607    14627        *                           External References                  *
      608    14628        *                                                                *
      609    14629        *****************************************************************/
      610    14630
      611    14631    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      612    14632    1   DCL KXX$X29 ENTRY (1);
      613    14633    1   DCL KXP$PACKET ENTRY (1) ALTRET;
      614    14634    1   DCL KHD$SCREECH ENTRY (1);
      615    14635    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      616    14636        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:111  
      617    14637        /*****************************************************************
      618    14638        *                                                                *
      619    14639        *                           Auto                                 *
      620    14640        *                                                                *
      621    14641        *****************************************************************/
      622    14642
      623    14643    1   DCL L2$ PTR;
      624    14644    1   DCL L3$ PTR;
      625    14645        %KH$ADMIN_FPT ( FPTN = ADMIN_FPT, STCLASS = );
      626    14856
      627    14857    1   DCL T$ CPTR;
      628    14858    1   DCL SIZ UBIN;
      629    14859    1   DCL PRM_DUMMY UBIN;
      630    14860        %KL_VIRCIR (NAME=VICPRF , STCLASS=AUTO) ;
      631    15069        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:112  
      632    15070        /*****************************************************************
      633    15071        *                                                                *
      634    15072        *                           Based                                *
      635    15073        *                                                                *
      636    15074        *****************************************************************/
      637    15075
      638    15076        %KL_BLKHDR ( NAME = BLKHDR, STCLASS = "BASED ( T$ )" );
      639    15171        %KL_LNKVC ( NAME = LNKVC, STCLASS = "BASED ( T$ )" );
      640    15395        %KL_VIRCIR ( NAME = VCPRF, STCLASS = "BASED ( T$ )" );
      641    15604
      642    15605        %KX$L1 ( STCLASS = "BASED ( L2$ )" );
      643    15645        %KX$L2 ( STCLASS = "BASED ( L2$ )" );
      644    16012        %KX$L3 ( STCLASS = "BASED ( L3$ )" );
      645    16415        %KX$L3 ( FPTN = KX$TL3, STCLASS = BASED );
      646    16818        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:113  
      647    16819        /*****************************************************************
      648    16820        *                                                                *
      649    16821        *                           Constant                             *
      650    16822        *                                                                *
      651    16823        *****************************************************************/
      652    16824
      653    16825        %KX$L3 ( FPTN = KX_L3, STCLASS = CONSTANT );
      654    17228    1   DCL KX_WNDMLT SBIN SYMREF;
      655    17229
      656    17230        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:114  
      657    17231        /*****************************************************************
      658    17232        *                                                                *
      659    17233        *                           Static                               *
      660    17234        *                                                                *
      661    17235        *****************************************************************/
      662    17236
      663    17237        %KX_DATA;
      664    17927        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:115  
      665    17928        /*****************************************************************
      666    17929        *                                                                *
      667    17930        *                           Procedure                            *
      668    17931        *                                                                *
      669    17932        *****************************************************************/
      670    17933
      671    17934        /*
      672    17935                                             Non-SUPER-defined VCs won't have
      673    17936                                             an ADMIN_FPT.  If there is one,
      674    17937                                             it must be for a VC.
      675    17938        */
      676    17939    1       IF ADDR( ADMIN_FPT ) ~= ADDR(NIL)
      677    17940    1          THEN
      678    17941    2             DO;
      679    17942    2                T$ = ADMIN_FPT.CTX$;
      680    17943    2             END;
      681    17944    1          ELSE
      682    17945    2             DO;
      683    17946    2                T$ = ADDR(NIL);
      684    17947    2                VICPRF = KX$L2.DFLVCPRF;
      685    17948    2                IF KX_AVL_IOMEM < KX_BUF.SIZ(KX$L2.BUF_SIZE) OR
      686    17949    2                   KX_AVL_MEM < 1200
      687    17950    2                   THEN
      688    17951    2   L_NOMEM:           ALTRETURN;
      689    17952    2             END;
      690    17953        /*
      691    17954                                             Get memory for the context, and
      692    17955                                             initialize it from the default
      693    17956                                             context block.
      694    17957        */
      695    17958    1       SIZ = SIZEW(KX$L3);
      696    17959    1       CALL KVB$GETSYS ( SIZ, L3$ ) ALTRET ( L_NOMEM );
      697    17960    1       KX$L3 = KX_L3;
      698    17961    1       KX$L3.L2$ = L2$;
      699    17962    1       KX$L3.TMRBLK.CTX$ = L3$;
      700    17963    1       KX$L3.DATTMRBLK.CTX$ = L3$;
      701    17964    1       KX$L3.INTTMRBLK.CTX$ = L3$;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:116  
      702    17965        /*
      703    17966                                             Now fill in the context with
      704    17967                                             parameters for either this link
      705    17968                                             (no ADMIN_FPT), or for this VC.
      706    17969        */
      707    17970    1       IF T$ ~= ADDR(NIL)
      708    17971    1          THEN
      709    17972    2             DO;
      710    17973    2                KX$L3.CUGLNG = LNKVC.CUG.LNG#;
      711    17974    2                KX$L3.CUG = LNKVC.CUG_REDEF.BCDS;
      712    17975    2                KX$L3.DFL_OPTS.RCVADR = LNKVC.ADR;
      713    17976    2                KX$L3.NOD = LNKVC.NODE#;
      714    17977    2                KX$L3.QOS = LNKVC.QOS#;
      715    17978    2                IF LNKVC.PERMANENT
      716    17979    2                   THEN
      717    17980    3                      DO;
      718    17981    3                         KX$L3.PVC = LNKVC.PERMANENT;
      719    17982    3                         KX$L3.LCN# = LNKVC.VIRCIR#;
      720    17983    3                      END;
      721    17984    2                T$ = PINCRC ( T$, BLKHDR.PROOFFSET + 16 );
      722    17985    2                VICPRF = VCPRF;
      723    17986    2             END;
      724    17987
      725    17988    1       KX$L3.RSPTMR = VICPRF.RSPTMR#;
      726    17989    1       KX$L3.DFL_OPTS.RCVPCKSIZ = MINIMUM(KX$L2.BUF_SIZE,VICPRF.RCVSIZ#);
      727    17990    1       KX$L3.DFL_OPTS.RCVTHR = VICPRF.RCVTHR#;
      728    17991    1       KX$L3.DFL_OPTS.RCVWND = MINIMUM(KX$L2.MAXWND,VICPRF.RCVWND#);
      729    17992    1       IF KX$L3.DFL_OPTS.RCVWND >= VICPRF.RSPDLY#
      730    17993    1          THEN
      731    17994    1             KX$L3.RSPDLY = VICPRF.RSPDLY#;
      732    17995    1          ELSE
      733    17996    1             KX$L3.RSPDLY = KX$L3.DFL_OPTS.RCVWND;
      734    17997    1       KX$L3.DFL_OPTS.SNDTHR = VICPRF.SNDTHR#;
      735    17998    1       KX$L3.DFL_OPTS.SNDWND = MINIMUM(KX$L2.MAXWND,VICPRF.SNDWND#);
      736    17999    1       KX$L3.RSPTOCMP = VICPRF.RSPTOCMP#;
      737    18000    1       KX$L3.DFL_OPTS.SNDPCKSIZ = MINIMUM(KX$L2.BUF_SIZE,VICPRF.SNDSIZ#);
      738    18001    1       IF VICPRF.RVR# = %KLX25_RVR_NO#
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:117  
      739    18002    1          THEN
      740    18003    1             KX$L3.RVS = '0'B;
      741    18004    1          ELSE
      742    18005    1             KX$L3.RVS = '1'B;
      743    18006    1       KX$L3.TRNDLY = VICPRF.TRADEL#;
      744    18007    1       KX$L3.CALDLY = VICPRF.CDLY#;
      745    18008    1       KX$L3.T21 = VICPRF.CTMT#;
      746    18009    1       KX$L3.R21 = VICPRF.CRTR#;
      747    18010    1       KX$L3.T22 = VICPRF.RESTIM#;
      748    18011    1       KX$L3.R22 = VICPRF.RESRET#;
      749    18012    1       KX$L3.T23 = VICPRF.CLRTIM#;
      750    18013    1       KX$L3.R23 = VICPRF.CLRRET#;
      751    18014    1       KX$L3.T25 = VICPRF.DATTIM#;
      752    18015    1       KX$L3.R25 = VICPRF.DATRET#;
      753    18016    1       KX$L3.T26 = VICPRF.INTTIM#;
      754    18017    1       KX$L3.EXTSEQ = VICPRF.EXTSEQ#;
      755    18018    1       KX$L3.CHRINF = VICPRF.CHARGE#;
      756    18019    1       KX$L3.IDLPRD = VICPRF.IDLTIM#;
      757    18020    1       KX$L3.IDLCLK = KX$L3.IDLPRD;
      758    18021    1       KX$L3.LCLADR = KX$L2.NTWADR;
      759    18022    1       KX$L3.CALL_OPTS = KX$L3.DFL_OPTS;
      760    18023    1       KX$L3.CM_OPTS = KX$L3.DFL_OPTS;
      761    18024        /*
      762    18025                                             Chain this context to the rest.
      763    18026        */
      764    18027    1       IF KX$L2.L3_HEAD$ = ADDR(NIL)
      765    18028    1          THEN
      766    18029    1             KX$L2.L3_HEAD$ = L3$;
      767    18030    1          ELSE
      768    18031    1             KX$L2.L3_TAIL$ -> KX$TL3.NEXT$ = L3$;
      769    18032    1       KX$L2.L3_TAIL$ = L3$;
      770    18033
      771    18034        /*
      772    18035           Update available MEM and IOMEM
      773    18036        */
      774    18037    1       KX_AVL_IOMEM = KX_AVL_IOMEM - KX_BUF.SIZ(KX$L2.BUF_SIZE);
      775    18038    1       KX_AVL_MEM = KX_AVL_MEM - 1200;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:118  
      776    18039    1       RETURN;
      777    18040
      778    18041    1   END KXS$GETL3;
      779    18042        %EOD;

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:119  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$GETL3.

   Procedure KXS$GETL3 requires 500 words for executable code.
   Procedure KXS$GETL3 requires 28 words of local(AUTO) storage.

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:120  

 Object Unit name= KXS$GETL3                                  File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:27:30.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS    145     91  KXS$GETL3
    1   Proc  even  none   500    1F4  KXS$GETL3

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  KXS$GETL3

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KXP$PACKET
 yes     yes           Std       2 KVB$GETSYS
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_BUF                                KX_AVL_MEM                            KX_AVL_IOMEM
     KX_PM$                           r    G$ROS$
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:121  


      561        1        /*T***********************************************************/
      562        2        /*T*                                                         */
      563        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      564        4        /*T*                                                         */
      565        5        /*T***********************************************************/
      566        6        /*F* NAME: KXS$GETL3                 */
      567        7        /*F* PURPOSE: Allocate a KX$L3 context block  */
      568        8
      569        9        /*D* NAME: KXS$GETL3                 */
      570       10        /*D* PURPOSE: Allocate a KX$L3 context block,
      571       11                      including parsing the SUPER supplied
      572       12                      information.           */
      573       13        /*D* CALL: CALL KXS$GETL3 ( L2$, L3$, KH$ADMIN_FPT ) ALTRET ( label );  */
      574       14        /*D* INPUT: L2$ - pointer to the level 2 context for this level 3
      575       15                    KH$ADMIN_FPT - optional handler common fpt  */
      576       16        /*D* OUTPUT: L3$ - pointer to new context  */
      577       17
      578       18        KXS$GETL3: PROC ( L2$, L3$, ADMIN_FPT ) ALTRET;

     18   1 000000  D380 0000 0000  xent KXS$GETL3       LNJ,B5   X6A_AUTO_3
          1 000003       001C 0003                       DC       28,3

      579       19
      580       20        /*****************************************************************
      581       21        *                                                                *
      582       22        *                           Includes                             *
      583       23        *                                                                *
      584       24        *****************************************************************/
      585       25
      586       26        %INCLUDE K_ID_E;
      587       76        %K#ENTID_E;
      588       95        %K#LYRID_E;
      589      102        %INCLUDE KL_MACRO_C;
      590     3454        %INCLUDE KL_AFCN_C;
      591     3555        %INCLUDE LCP_6;
      592     7834        %INCLUDE CP_6_SUBS;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:122  
      593     8374        %INCLUDE KH_MACRO_C;
      594     9117        %INCLUDE KL_SUPER_C;
      595    12019        %INCLUDE KX_EQUS_E;
      596    12458        %INCLUDE KX_PERR_C;
      597    12587        %INCLUDE KX_SCODE_C;
      598    12653        %INCLUDE KX_DATA_C;
      599    12721        %INCLUDE KX_MACROS_M;
      600    13492        %INCLUDE KV_GLBCNS_E;
      601    13833        %INCLUDE K_ADDRESS_M;
      602    14336        %INCLUDE KNH_MACRO_C;
      603    14619        %KV#CQ_HNDID_E;
      604    14624        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:123  
      605    14625        /*****************************************************************
      606    14626        *                                                                *
      607    14627        *                           External References                  *
      608    14628        *                                                                *
      609    14629        *****************************************************************/
      610    14630
      611    14631    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      612    14632    1   DCL KXX$X29 ENTRY (1);
      613    14633    1   DCL KXP$PACKET ENTRY (1) ALTRET;
      614    14634    1   DCL KHD$SCREECH ENTRY (1);
      615    14635    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      616    14636        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:124  
      617    14637        /*****************************************************************
      618    14638        *                                                                *
      619    14639        *                           Auto                                 *
      620    14640        *                                                                *
      621    14641        *****************************************************************/
      622    14642
      623    14643    1   DCL L2$ PTR;
      624    14644    1   DCL L3$ PTR;
      625    14645        %KH$ADMIN_FPT ( FPTN = ADMIN_FPT, STCLASS = );
      626    14856
      627    14857    1   DCL T$ CPTR;
      628    14858    1   DCL SIZ UBIN;
      629    14859    1   DCL PRM_DUMMY UBIN;
      630    14860        %KL_VIRCIR (NAME=VICPRF , STCLASS=AUTO) ;
      631    15069        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:125  
      632    15070        /*****************************************************************
      633    15071        *                                                                *
      634    15072        *                           Based                                *
      635    15073        *                                                                *
      636    15074        *****************************************************************/
      637    15075
      638    15076        %KL_BLKHDR ( NAME = BLKHDR, STCLASS = "BASED ( T$ )" );
      639    15171        %KL_LNKVC ( NAME = LNKVC, STCLASS = "BASED ( T$ )" );
      640    15395        %KL_VIRCIR ( NAME = VCPRF, STCLASS = "BASED ( T$ )" );
      641    15604
      642    15605        %KX$L1 ( STCLASS = "BASED ( L2$ )" );
      643    15645        %KX$L2 ( STCLASS = "BASED ( L2$ )" );
      644    16012        %KX$L3 ( STCLASS = "BASED ( L3$ )" );
      645    16415        %KX$L3 ( FPTN = KX$TL3, STCLASS = BASED );
      646    16818        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:126  
      647    16819        /*****************************************************************
      648    16820        *                                                                *
      649    16821        *                           Constant                             *
      650    16822        *                                                                *
      651    16823        *****************************************************************/
      652    16824
      653    16825        %KX$L3 ( FPTN = KX_L3, STCLASS = CONSTANT );
      654    17228    1   DCL KX_WNDMLT SBIN SYMREF;
      655    17229
      656    17230        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:127  
      657    17231        /*****************************************************************
      658    17232        *                                                                *
      659    17233        *                           Static                               *
      660    17234        *                                                                *
      661    17235        *****************************************************************/
      662    17236
      663    17237        %KX_DATA;
      664    17927        %EJECT;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:128  
      665    17928        /*****************************************************************
      666    17929        *                                                                *
      667    17930        *                           Procedure                            *
      668    17931        *                                                                *
      669    17932        *****************************************************************/
      670    17933
      671    17934        /*
      672    17935                                             Non-SUPER-defined VCs won't have
      673    17936                                             an ADMIN_FPT.  If there is one,
      674    17937                                             it must be for a VC.
      675    17938        */
      676    17939    1       IF ADDR( ADMIN_FPT ) ~= ADDR(NIL)

  17939   1 000005  ECC7 0008                            LDB,B6   @ADMIN_FPT,AUTO
          1 000007  8DD6                                 CMN      B6
          1 000008  0901 0007                            BE       s:17946,PREL

      677    17940    1          THEN
      678    17941    2             DO;

      679    17942    2                T$ = ADMIN_FPT.CTX$;

  17942   1 00000A  DCC6 0009                            LDB,B5   9,B6
          1 00000C  DFC7 000A                            STB,B5   T$,AUTO

      680    17943    2             END;

  17943   1 00000E  0F81 002B                            B        s:17958,PREL

      681    17944    1          ELSE
      682    17945    2             DO;

      683    17946    2                T$ = ADDR(NIL);

  17946   1 000010  DB80 0000 0000                       LAB,B5   0
          1 000013  DFC7 000A                            STB,B5   T$,AUTO

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:129  
      684    17947    2                VICPRF = KX$L2.DFLVCPRF;

  17947   1 000015  CCC7 0004                            LDB,B4   @L2$,AUTO
          1 000017  BC84                                 LDB,B3   ,B4
          1 000018  ABC3 0058                            LAB,B2   88,B3
          1 00001A  2C00                                 LDV,R2   0
          1 00001B  6C14                                 LDV,R6   20
          1 00001C  BB87                                 LAB,B3   ,AUTO
          1 00001D  3C1C                                 LDV,R3   28
          1 00001E  0008                                 MMM

      685    17948    2                IF KX_AVL_IOMEM < KX_BUF.SIZ(KX$L2.BUF_SIZE) OR

  17948   1 00001F  DC84                                 LDB,B5   ,B4
          1 000020  B2C5 0004                            LLH,R3   4,B5
          1 000022  F830 0000 001E  xsym                 LDR,R7   KX_BUF+30,R3
          1 000025  6C00                                 LDV,R6   0
          1 000026  8480 0000 0000  xsym                 SID      KX_AVL_IOMEM
          1 000029  6A01 000D                            BGZ,R6   s:17951,PREL
          1 00002B  6801 0003                            BLZ,R6   s:17948+16,PREL
          1 00002D  7981 0009                            BNEZ,R7  s:17951,PREL
          1 00002F  8C80 0000 0000  xsym                 LDI      KX_AVL_MEM
          1 000032  84F0 0000 04B0                       SID      1200,IMO
          1 000035  6881 0004                            BGEZ,R6  s:17958,PREL

      686    17949    2                   KX_AVL_MEM < 1200
      687    17950    2                   THEN
      688    17951    2   L_NOMEM:           ALTRETURN;

  17951   1 000037  C380 0000 0000  xent L_NOMEM         LNJ,B4   X6A_AALT

      689    17952    2             END;
      690    17953        /*
      691    17954                                             Get memory for the context, and
      692    17955                                             initialize it from the default
      693    17956                                             context block.
      694    17957        */
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:130  
      695    17958    1       SIZ = SIZEW(KX$L3);

  17958   1 00003A  E870 0091                            LDR,R6   145,IMO
          1 00003C  EF47 000C                            STR,R6   SIZ,AUTO

      696    17959    1       CALL KVB$GETSYS ( SIZ, L3$ ) ALTRET ( L_NOMEM );

  17959   1 00003E  DCC7 0006                            LDB,B5   @L3$,AUTO
          1 000040  DFC7 001A                            STB,B5   VICPRF+12,AUTO
          1 000042  CBC7 000C                            LAB,B4   SIZ,AUTO
          1 000044  CFC7 0018                            STB,B4   VICPRF+10,AUTO
          1 000046  BBC7 0018                            LAB,B3   VICPRF+10,AUTO
          1 000048  CBF0 0200                            LAB,B4   512,IMO
          1 00004A  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 00004D       FFEA                            DC       s:17951,PREL

      697    17960    1       KX$L3 = KX_L3;

  17960   1 00004E  ECC7 0006                            LDB,B6   @L3$,AUTO
          1 000050  DC86                                 LDB,B5   ,B6
          1 000051  AB80 0000 0000  00                   LAB,B2   KX_L3
          1 000054  2C00                                 LDV,R2   0
          1 000055  E870 0122                            LDR,R6   290,IMO
          1 000057  BB85                                 LAB,B3   ,B5
          1 000058  3C00                                 LDV,R3   0
          1 000059  0008                                 MMM

      698    17961    1       KX$L3.L2$ = L2$;

  17961   1 00005A  CC86                                 LDB,B4   ,B6
          1 00005B  ACC7 0004                            LDB,B2   @L2$,AUTO
          1 00005D  9C82                                 LDB,B1   ,B2
          1 00005E  9FC4 0002                            STB,B1   2,B4

      699    17962    1       KX$L3.TMRBLK.CTX$ = L3$;

  17962   1 000060  CC86                                 LDB,B4   ,B6
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:131  
          1 000061  CFC4 0051                            STB,B4   81,B4

      700    17963    1       KX$L3.DATTMRBLK.CTX$ = L3$;

  17963   1 000063  CC86                                 LDB,B4   ,B6
          1 000064  CFC4 005B                            STB,B4   91,B4

      701    17964    1       KX$L3.INTTMRBLK.CTX$ = L3$;

  17964   1 000066  CC86                                 LDB,B4   ,B6
          1 000067  CFC4 0065                            STB,B4   101,B4

      702    17965        /*
      703    17966                                             Now fill in the context with
      704    17967                                             parameters for either this link
      705    17968                                             (no ADMIN_FPT), or for this VC.
      706    17969        */
      707    17970    1       IF T$ ~= ADDR(NIL)

  17970   1 000069  8DC7 000A                            CMN      T$,AUTO
          1 00006B  0901 0058                            BE       s:17988,PREL

      708    17971    1          THEN
      709    17972    2             DO;

      710    17973    2                KX$L3.CUGLNG = LNKVC.CUG.LNG#;

  17973   1 00006D  CC86                                 LDB,B4   ,B6
          1 00006E  9CC7 000A                            LDB,B1   T$,AUTO
          1 000070  E841 0004                            LDR,R6   4,B1
          1 000072  604C                                 SOR,R6   12
          1 000073  EAC4 0029                            SRM,R6,'000C'X    41,B4
          1 000075       000C

      711    17974    2                KX$L3.CUG = LNKVC.CUG_REDEF.BCDS;

  17974   1 000076  CC86                                 LDB,B4   ,B6
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:132  
          1 000077  AB81                                 LAB,B2   ,B1
          1 000078  2C09                                 LDV,R2   9
          1 000079  6C02                                 LDV,R6   2
          1 00007A  BB84                                 LAB,B3   ,B4
          1 00007B  3C56                                 LDV,R3   86
          1 00007C  0008                                 MMM

      712    17975    2                KX$L3.DFL_OPTS.RCVADR = LNKVC.ADR;

  17975   1 00007D  DC86                                 LDB,B5   ,B6
          1 00007E  ACC7 000A                            LDB,B2   T$,AUTO
          1 000080  2C0B                                 LDV,R2   11
          1 000081  6C08                                 LDV,R6   8
          1 000082  BB85                                 LAB,B3   ,B5
          1 000083  3C4A                                 LDV,R3   74
          1 000084  0008                                 MMM

      713    17976    2                KX$L3.NOD = LNKVC.NODE#;

  17976   1 000085  AC86                                 LDB,B2   ,B6
          1 000086  ECC7 000A                            LDB,B6   T$,AUTO
          1 000088  E846 0014                            LDR,R6   20,B6
          1 00008A  E570 00FF                            AND,R6   255,IMO
          1 00008C  E7C2 0012                            STH,R6   18,B2

      714    17977    2                KX$L3.QOS = LNKVC.QOS#;

  17977   1 00008E  ACC7 0006                            LDB,B2   @L3$,AUTO
          1 000090  EC82                                 LDB,B6   ,B2
          1 000091  DCC7 000A                            LDB,B5   T$,AUTO
          1 000093  E2C5 0016                            LLH,R6   22,B5
          1 000095  EAC6 0012                            SRM,R6,'00FF'X    18,B6
          1 000097       00FF

      715    17978    2                IF LNKVC.PERMANENT

  17978   1 000098  82C5 0016                            LB,'0080'X        22,B5
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:133  
  17978   1 00009A       0080
          1 00009B  0581 000E                            BBF      s:17984,PREL

      716    17979    2                   THEN
      717    17980    3                      DO;

      718    17981    3                         KX$L3.PVC = LNKVC.PERMANENT;

  17981   1 00009D  EC82                                 LDB,B6   ,B2
          1 00009E  E845 0016                            LDR,R6   22,B5
          1 0000A0  6001                                 SOL,R6   1
          1 0000A1  EAC6 0029                            SRM,R6,'0100'X    41,B6
          1 0000A3       0100

      719    17982    3                         KX$L3.LCN# = LNKVC.VIRCIR#;

  17982   1 0000A4  EC82                                 LDB,B6   ,B2
          1 0000A5  E845 0015                            LDR,R6   21,B5
          1 0000A7  EAC6 002A                            SRM,R6,'0FFF'X    42,B6
          1 0000A9       0FFF

      720    17983    3                      END;

      721    17984    2                T$ = PINCRC ( T$, BLKHDR.PROOFFSET + 16 );

  17984   1 0000AA  B845 0002                            LDR,R3   2,B5
          1 0000AC  B570 00FF                            AND,R3   255,IMO
          1 0000AE  8CC7 000A                            LDI      T$,AUTO
          1 0000B0  7031                                 DCL,R7   1
          1 0000B1  8D47 0018                            SDI      VICPRF+10,AUTO
          1 0000B3  F853                                 LDR,R7   R3
          1 0000B4  6C00                                 LDV,R6   0
          1 0000B5  8447 0018                            AID      VICPRF+10,AUTO
          1 0000B7  7071                                 DCR,R7   1
          1 0000B8  8470 0000 0008                       AID      8,IMO
          1 0000BB  8D47 000A                            SDI      T$,AUTO

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:134  
      722    17985    2                VICPRF = VCPRF;

  17985   1 0000BD  ACC7 000A                            LDB,B2   T$,AUTO
          1 0000BF  2C00                                 LDV,R2   0
          1 0000C0  6C14                                 LDV,R6   20
          1 0000C1  BB87                                 LAB,B3   ,AUTO
          1 0000C2  3C1C                                 LDV,R3   28
          1 0000C3  0008                                 MMM

      723    17986    2             END;

      724    17987
      725    17988    1       KX$L3.RSPTMR = VICPRF.RSPTMR#;

  17988   1 0000C4  ECC7 0006                            LDB,B6   @L3$,AUTO
          1 0000C6  DC86                                 LDB,B5   ,B6
          1 0000C7  E847 0014                            LDR,R6   VICPRF+6,AUTO
          1 0000C9  E570 00FF                            AND,R6   255,IMO
          1 0000CB  EF45 0073                            STR,R6   115,B5

      726    17989    1       KX$L3.DFL_OPTS.RCVPCKSIZ = MINIMUM(KX$L2.BUF_SIZE,VICPRF.RCVSIZ#);

  17989   1 0000CD  DC86                                 LDB,B5   ,B6
          1 0000CE  CCC7 0004                            LDB,B4   @L2$,AUTO
          1 0000D0  BC84                                 LDB,B3   ,B4
          1 0000D1  D847 0015                            LDR,R5   VICPRF+7,AUTO
          1 0000D3  504C                                 SOR,R5   12
          1 0000D4  C2C3 0004                            LLH,R4   4,B3
          1 0000D6  C955                                 CMR,R4   R5
          1 0000D7  0281 0002                            BGE      s:17989+13,PREL
          1 0000D9  D854                                 LDR,R5   R4
          1 0000DA  D7C5 0022                            STH,R5   34,B5

      727    17990    1       KX$L3.DFL_OPTS.RCVTHR = VICPRF.RCVTHR#;

  17990   1 0000DC  DC86                                 LDB,B5   ,B6
          1 0000DD  D847 0015                            LDR,R5   VICPRF+7,AUTO
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:135  
          1 0000DF  D570 0F00                            AND,R5   3840,IMO
          1 0000E1  5048                                 SOR,R5   8
          1 0000E2  DAC5 0022                            SRM,R5,'00FF'X    34,B5
          1 0000E4       00FF

      728    17991    1       KX$L3.DFL_OPTS.RCVWND = MINIMUM(KX$L2.MAXWND,VICPRF.RCVWND#);

  17991   1 0000E5  DC86                                 LDB,B5   ,B6
          1 0000E6  BC84                                 LDB,B3   ,B4
          1 0000E7  D847 0015                            LDR,R5   VICPRF+7,AUTO
          1 0000E9  D570 007F                            AND,R5   127,IMO
          1 0000EB  C2C3 001A                            LLH,R4   26,B3
          1 0000ED  C955                                 CMR,R4   R5
          1 0000EE  0281 0002                            BGE      s:17991+12,PREL
          1 0000F0  D854                                 LDR,R5   R4
          1 0000F1  D7C5 0023                            STH,R5   35,B5

      729    17992    1       IF KX$L3.DFL_OPTS.RCVWND >= VICPRF.RSPDLY#

  17992   1 0000F3  DC86                                 LDB,B5   ,B6
          1 0000F4  D2C5 0023                            LLH,R5   35,B5
          1 0000F6  C847 0016                            LDR,R4   VICPRF+8,AUTO
          1 0000F8  4048                                 SOR,R4   8
          1 0000F9  C570 007F                            AND,R4   127,IMO
          1 0000FB  D954                                 CMR,R5   R4
          1 0000FC  0801 000B                            BAL      s:17996,PREL

      730    17993    1          THEN
      731    17994    1             KX$L3.RSPDLY = VICPRF.RSPDLY#;

  17994   1 0000FE  B847 0016                            LDR,R3   VICPRF+8,AUTO
          1 000100  B570 7F00                            AND,R3   32512,IMO
          1 000102  3048                                 SOR,R3   8
          1 000103  BAC5 0072                            SRM,R3,'00FF'X    114,B5
          1 000105       00FF
          1 000106  0F81 0004                            B        s:17997,PREL

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:136  
      732    17995    1          ELSE
      733    17996    1             KX$L3.RSPDLY = KX$L3.DFL_OPTS.RCVWND;

  17996   1 000108  DAC5 0072                            SRM,R5,'00FF'X    114,B5
  17996   1 00010A       00FF

      734    17997    1       KX$L3.DFL_OPTS.SNDTHR = VICPRF.SNDTHR#;

  17997   1 00010B  DC86                                 LDB,B5   ,B6
          1 00010C  D847 0016                            LDR,R5   VICPRF+8,AUTO
          1 00010E  5044                                 SOR,R5   4
          1 00010F  D570 000F                            AND,R5   15,IMO
          1 000111  D7C5 0024                            STH,R5   36,B5

      735    17998    1       KX$L3.DFL_OPTS.SNDWND = MINIMUM(KX$L2.MAXWND,VICPRF.SNDWND#);

  17998   1 000113  DC86                                 LDB,B5   ,B6
          1 000114  BC84                                 LDB,B3   ,B4
          1 000115  B847 0017                            LDR,R3   VICPRF+9,AUTO
          1 000117  3048                                 SOR,R3   8
          1 000118  B570 007F                            AND,R3   127,IMO
          1 00011A  A2C3 001A                            LLH,R2   26,B3
          1 00011C  A953                                 CMR,R2   R3
          1 00011D  0281 0002                            BGE      s:17998+13,PREL
          1 00011F  B852                                 LDR,R3   R2
          1 000120  BAC5 0024                            SRM,R3,'00FF'X    36,B5
          1 000122       00FF

      736    17999    1       KX$L3.RSPTOCMP = VICPRF.RSPTOCMP#;

  17999   1 000123  DC86                                 LDB,B5   ,B6
          1 000124  B847 0015                            LDR,R3   VICPRF+7,AUTO
          1 000126  3046                                 SOR,R3   6
          1 000127  BAC5 0029                            SRM,R3,'0002'X    41,B5
          1 000129       0002

      737    18000    1       KX$L3.DFL_OPTS.SNDPCKSIZ = MINIMUM(KX$L2.BUF_SIZE,VICPRF.SNDSIZ#);
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:137  

  18000   1 00012A  DC86                                 LDB,B5   ,B6
          1 00012B  BC84                                 LDB,B3   ,B4
          1 00012C  B847 0016                            LDR,R3   VICPRF+8,AUTO
          1 00012E  B570 000F                            AND,R3   15,IMO
          1 000130  A2C3 0004                            LLH,R2   4,B3
          1 000132  A953                                 CMR,R2   R3
          1 000133  0281 0002                            BGE      s:18000+12,PREL
          1 000135  B852                                 LDR,R3   R2
          1 000136  BAC5 0023                            SRM,R3,'00FF'X    35,B5
          1 000138       00FF

      738    18001    1       IF VICPRF.RVR# = %KLX25_RVR_NO#

  18001   1 000139  B847 0017                            LDR,R3   VICPRF+9,AUTO
          1 00013B  3046                                 SOR,R3   6
          1 00013C  B570 0003                            AND,R3   3,IMO
          1 00013E  3D02                                 CMV,R3   2
          1 00013F  0981 0007                            BNE      s:18005,PREL

      739    18002    1          THEN
      740    18003    1             KX$L3.RVS = '0'B;

  18003   1 000141  DC86                                 LDB,B5   ,B6
          1 000142  8845 0029                            LBF,'0001'X       41,B5
          1 000144       0001
          1 000145  0F81 0005                            B        s:18006,PREL

      741    18004    1          ELSE
      742    18005    1             KX$L3.RVS = '1'B;

  18005   1 000147  DC86                                 LDB,B5   ,B6
          1 000148  8945 0029                            LBT,'0001'X       41,B5
          1 00014A       0001

      743    18006    1       KX$L3.TRNDLY = VICPRF.TRADEL#;

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:138  
  18006   1 00014B  DC86                                 LDB,B5   ,B6
          1 00014C  A847 000E                            LDR,R2   VICPRF,AUTO
          1 00014E  AF45 002C                            STR,R2   44,B5

      744    18007    1       KX$L3.CALDLY = VICPRF.CDLY#;

  18007   1 000150  DC86                                 LDB,B5   ,B6
          1 000151  92C7 0013                            LLH,R1   VICPRF+5,AUTO
          1 000153  9F45 0074                            STR,R1   116,B5

      745    18008    1       KX$L3.T21 = VICPRF.CTMT#;

  18008   1 000155  DC86                                 LDB,B5   ,B6
          1 000156  E2C7 0014                            LLH,R6   VICPRF+6,AUTO
          1 000158  EF45 006B                            STR,R6   107,B5

      746    18009    1       KX$L3.R21 = VICPRF.CRTR#;

  18009   1 00015A  DC86                                 LDB,B5   ,B6
          1 00015B  E847 0013                            LDR,R6   VICPRF+5,AUTO
          1 00015D  E570 00FF                            AND,R6   255,IMO
          1 00015F  E7C5 0070                            STH,R6   112,B5

      747    18010    1       KX$L3.T22 = VICPRF.RESTIM#;

  18010   1 000161  DC86                                 LDB,B5   ,B6
          1 000162  E2C7 000F                            LLH,R6   VICPRF+1,AUTO
          1 000164  EF45 006C                            STR,R6   108,B5

      748    18011    1       KX$L3.R22 = VICPRF.RESRET#;

  18011   1 000166  DC86                                 LDB,B5   ,B6
          1 000167  E847 000F                            LDR,R6   VICPRF+1,AUTO
          1 000169  EAC5 0070                            SRM,R6,'00FF'X    112,B5
          1 00016B       00FF

      749    18012    1       KX$L3.T23 = VICPRF.CLRTIM#;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:139  

  18012   1 00016C  DC86                                 LDB,B5   ,B6
          1 00016D  E2C7 0010                            LLH,R6   VICPRF+2,AUTO
          1 00016F  EF45 006D                            STR,R6   109,B5

      750    18013    1       KX$L3.R23 = VICPRF.CLRRET#;

  18013   1 000171  DC86                                 LDB,B5   ,B6
          1 000172  E847 0010                            LDR,R6   VICPRF+2,AUTO
          1 000174  E570 00FF                            AND,R6   255,IMO
          1 000176  E7C5 0071                            STH,R6   113,B5

      751    18014    1       KX$L3.T25 = VICPRF.DATTIM#;

  18014   1 000178  DC86                                 LDB,B5   ,B6
          1 000179  E2C7 0011                            LLH,R6   VICPRF+3,AUTO
          1 00017B  EF45 006E                            STR,R6   110,B5

      752    18015    1       KX$L3.R25 = VICPRF.DATRET#;

  18015   1 00017D  DC86                                 LDB,B5   ,B6
          1 00017E  E847 0011                            LDR,R6   VICPRF+3,AUTO
          1 000180  EAC5 0071                            SRM,R6,'00FF'X    113,B5
          1 000182       00FF

      753    18016    1       KX$L3.T26 = VICPRF.INTTIM#;

  18016   1 000183  DC86                                 LDB,B5   ,B6
          1 000184  E2C7 0012                            LLH,R6   VICPRF+4,AUTO
          1 000186  EF45 006F                            STR,R6   111,B5

      754    18017    1       KX$L3.EXTSEQ = VICPRF.EXTSEQ#;

  18017   1 000188  DC86                                 LDB,B5   ,B6
          1 000189  E847 0016                            LDR,R6   VICPRF+8,AUTO
          1 00018B  604A                                 SOR,R6   10
          1 00018C  EAC5 0029                            SRM,R6,'0020'X    41,B5
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:140  
          1 00018E       0020

      755    18018    1       KX$L3.CHRINF = VICPRF.CHARGE#;

  18018   1 00018F  DC86                                 LDB,B5   ,B6
          1 000190  E847 0017                            LDR,R6   VICPRF+9,AUTO
          1 000192  604B                                 SOR,R6   11
          1 000193  EAC5 0029                            SRM,R6,'0010'X    41,B5
          1 000195       0010

      756    18019    1       KX$L3.IDLPRD = VICPRF.IDLTIM#;

  18019   1 000196  DC86                                 LDB,B5   ,B6
          1 000197  E847 0012                            LDR,R6   VICPRF+4,AUTO
          1 000199  EAC5 0075                            SRM,R6,'00FF'X    117,B5
          1 00019B       00FF

      757    18020    1       KX$L3.IDLCLK = KX$L3.IDLPRD;

  18020   1 00019C  DC86                                 LDB,B5   ,B6
          1 00019D  E845 0075                            LDR,R6   117,B5
          1 00019F  E570 00FF                            AND,R6   255,IMO
          1 0001A1  E7C5 0076                            STH,R6   118,B5

      758    18021    1       KX$L3.LCLADR = KX$L2.NTWADR;

  18021   1 0001A3  DC86                                 LDB,B5   ,B6
          1 0001A4  BC84                                 LDB,B3   ,B4
          1 0001A5  AB83                                 LAB,B2   ,B3
          1 0001A6  2C73                                 LDV,R2   115
          1 0001A7  6C08                                 LDV,R6   8
          1 0001A8  BBC5 0077                            LAB,B3   119,B5
          1 0001AA  3C00                                 LDV,R3   0
          1 0001AB  0008                                 MMM

      759    18022    1       KX$L3.CALL_OPTS = KX$L3.DFL_OPTS;

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:141  
  18022   1 0001AC  DC86                                 LDB,B5   ,B6
          1 0001AD  AB85                                 LAB,B2   ,B5
          1 0001AE  2C44                                 LDV,R2   68
          1 0001AF  6C0E                                 LDV,R6   14
          1 0001B0  BB85                                 LAB,B3   ,B5
          1 0001B1  3C28                                 LDV,R3   40
          1 0001B2  0008                                 MMM

      760    18023    1       KX$L3.CM_OPTS = KX$L3.DFL_OPTS;

  18023   1 0001B3  9C86                                 LDB,B1   ,B6
          1 0001B4  AB81                                 LAB,B2   ,B1
          1 0001B5  2C44                                 LDV,R2   68
          1 0001B6  6C0E                                 LDV,R6   14
          1 0001B7  BB81                                 LAB,B3   ,B1
          1 0001B8  3C36                                 LDV,R3   54
          1 0001B9  0008                                 MMM

      761    18024        /*
      762    18025                                             Chain this context to the rest.
      763    18026        */
      764    18027    1       IF KX$L2.L3_HEAD$ = ADDR(NIL)

  18027   1 0001BA  EC84                                 LDB,B6   ,B4
          1 0001BB  8DC6 0034                            CMN      52,B6
          1 0001BD  0981 0008                            BNE      s:18031,PREL

      765    18028    1          THEN
      766    18029    1             KX$L2.L3_HEAD$ = L3$;

  18029   1 0001BF  DCC7 0006                            LDB,B5   @L3$,AUTO
          1 0001C1  CC85                                 LDB,B4   ,B5
          1 0001C2  CFC6 0034                            STB,B4   52,B6
          1 0001C4  0F81 0007                            B        s:18032,PREL

      767    18030    1          ELSE
      768    18031    1             KX$L2.L3_TAIL$ -> KX$TL3.NEXT$ = L3$;
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:142  

  18031   1 0001C6  DCC6 0036                            LDB,B5   54,B6
          1 0001C8  ECC7 0006                            LDB,B6   @L3$,AUTO
          1 0001CA  CC86                                 LDB,B4   ,B6
          1 0001CB  CF85                                 STB,B4   ,B5

      769    18032    1       KX$L2.L3_TAIL$ = L3$;

  18032   1 0001CC  ECC7 0004                            LDB,B6   @L2$,AUTO
          1 0001CE  DC86                                 LDB,B5   ,B6
          1 0001CF  CCC7 0006                            LDB,B4   @L3$,AUTO
          1 0001D1  EC84                                 LDB,B6   ,B4
          1 0001D2  EFC5 0036                            STB,B6   54,B5

      770    18033
      771    18034        /*
      772    18035           Update available MEM and IOMEM
      773    18036        */
      774    18037    1       KX_AVL_IOMEM = KX_AVL_IOMEM - KX_BUF.SIZ(KX$L2.BUF_SIZE);

  18037   1 0001D4  ECC7 0004                            LDB,B6   @L2$,AUTO
          1 0001D6  DC86                                 LDB,B5   ,B6
          1 0001D7  B2C5 0004                            LLH,R3   4,B5
          1 0001D9  F830 0000 001E  xsym                 LDR,R7   KX_BUF+30,R3
          1 0001DC  6C00                                 LDV,R6   0
          1 0001DD  8480 0000 0000  xsym                 SID      KX_AVL_IOMEM
          1 0001E0  8656                                 CPL      R6
          1 0001E1  8657                                 CPL      R7
          1 0001E2  8470 0000 0001                       AID      1,IMO
          1 0001E5  8D00 0000 0000  xsym                 SDI      KX_AVL_IOMEM

      775    18038    1       KX_AVL_MEM = KX_AVL_MEM - 1200;

  18038   1 0001E8  8C80 0000 0000  xsym                 LDI      KX_AVL_MEM
          1 0001EB  8470 FFFF FB50                       AID      -1200,IMO
          1 0001EE  8D00 0000 0000  xsym                 SDI      KX_AVL_MEM

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:143  
      776    18039    1       RETURN;

  18039   1 0001F1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      777    18040
      778    18041    1   END KXS$GETL3;
      779    18042        %EOD;

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:144  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$GETL3.
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:145  

 **** Variables and constants ****

  ****  Section 000 RoData KXS$GETL3

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2320)  r     1 KX_L3

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/w PTR         r     1 @ADMIN_FPT                 4-0-0/w PTR         r     1 @L2$
     6-0-0/w PTR         r     1 @L3$                      *0-0-0/w STRC(288)   r     1 ADMIN_FPT
    *0-0-0/w PTR         r     1 L2$                       *0-0-0/w PTR         r     1 L3$
     C-0-0/w UBIN(16)    r     1 SIZ                        A-0-0/w PTR         r     1 T$
     E-0-0/w STRC(160)   r     1 VICPRF

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN(32)    r     1 KX_AVL_IOMEM               0-0-0/w SBIN(32)    r     1 KX_AVL_MEM
     0-0-0/w STRC(672)   r     1 KX_BUF                     0-0-0/b EPTR        r     1 KX_PM$(0:2)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(64)    r     1 BLKHDR                     0-0-0/w STRC(4992)  r     1 KX$L2
     0-0-0/w STRC(2320)  r     1 KX$L3                      0-0-0/w STRC(2320)  r     1 KX$TL3
     0-0-0/w STRC(384)   r     1 LNKVC                      0-0-0/w STRC(160)   r     1 VCPRF

PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:146  

   Procedure KXS$GETL3 requires 500 words for executable code.
   Procedure KXS$GETL3 requires 28 words of local(AUTO) storage.
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:147  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:148  
          MINI XREF LISTING

ADMIN_FPT
     14660**DCL        18--PROC    17939--IF
ADMIN_FPT.CTX$
     14716**DCL     17942>>ASSIGN
ADMIN_FPT.TERMID.TERM
     14684**DCL     14693--REDEF
BLKHDR.PROOFFSET
     15141**DCL     17984>>ASSIGN
KVB$GETSYS
     14631**DCL-ENT 17959--CALL
KX$L2.BUF_SIZE
     15682**DCL     17948>>IF      17989>>ASSIGN  18000>>ASSIGN  18037>>ASSIGN
KX$L2.DFLVCPRF
     15801**DCL     17947>>ASSIGN
KX$L2.DFLVCPRF.TRADEL
     15803**DCL     15813--REDEF
KX$L2.DSTSNPA.ADR_STRING
     15994**DCL     15994--REDEF
KX$L2.FRMR_NSNR
     15780**DCL     15781--REDEF
KX$L2.L3_HEAD$
     15712**DCL     18027>>IF      18029<<ASSIGN
KX$L2.L3_TAIL$
     15713**DCL     18031>>ASSIGN  18032<<ASSIGN
KX$L2.MAXWND
     15690**DCL     17991>>ASSIGN  17998>>ASSIGN
KX$L2.NTWADR
     15714**DCL     18021>>ASSIGN
KX$L2.NTWADR.ADR_STRING
     15714**DCL     15714--REDEF
KX$L2.STATES
     15692**DCL     15692--REDEF
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:149  
KX$L3
     16032**DCL     17958--ASSIGN  17960<<ASSIGN
KX$L3.CALDLY
     16263**DCL     18007<<ASSIGN
KX$L3.CALL_OPTS
     16067**DCL     18022<<ASSIGN
KX$L3.CALL_OPTS.RCVADR.ADR_STRING
     16072**DCL     16072--REDEF
KX$L3.CHRINF
     16147**DCL     18018<<ASSIGN
KX$L3.CM_OPTS
     16102**DCL     18023<<ASSIGN
KX$L3.CM_OPTS.RCVADR.ADR_STRING
     16107**DCL     16107--REDEF
KX$L3.CUG
     16150**DCL     16151--REDEF   17974<<ASSIGN
KX$L3.CUGLNG
     16147**DCL     17973<<ASSIGN
KX$L3.DATTMRBLK.CTX$
     16221**DCL     17963<<ASSIGN
KX$L3.DFL_OPTS
     16137**DCL     18022>>ASSIGN  18023>>ASSIGN
KX$L3.DFL_OPTS.RCVADR
     16141**DCL     17975<<ASSIGN
KX$L3.DFL_OPTS.RCVADR.ADR_STRING
     16142**DCL     16142--REDEF
KX$L3.DFL_OPTS.RCVPCKSIZ
     16139**DCL     17989<<ASSIGN
KX$L3.DFL_OPTS.RCVTHR
     16139**DCL     17990<<ASSIGN
KX$L3.DFL_OPTS.RCVWND
     16140**DCL     17991<<ASSIGN  17992>>IF      17996>>ASSIGN
KX$L3.DFL_OPTS.SNDPCKSIZ
     16140**DCL     18000<<ASSIGN
KX$L3.DFL_OPTS.SNDTHR
     16140**DCL     17997<<ASSIGN
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:150  
KX$L3.DFL_OPTS.SNDWND
     16141**DCL     17998<<ASSIGN
KX$L3.EXTSEQ
     16147**DCL     18017<<ASSIGN
KX$L3.IDLCLK
     16265**DCL     18020<<ASSIGN
KX$L3.IDLPRD
     16264**DCL     18019<<ASSIGN  18020>>ASSIGN
KX$L3.INTTMRBLK.CTX$
     16253**DCL     17964<<ASSIGN
KX$L3.L2$
     16032**DCL     17961<<ASSIGN
KX$L3.LCLADR
     16266**DCL     18021<<ASSIGN
KX$L3.LCLADR.ADR_STRING
     16267**DCL     16267--REDEF
KX$L3.LCLNSAP
     16284**DCL     16340--REDEF
KX$L3.LCLNSAP.NSAP.ADDRESS_N
     16335**DCL     16336--REDEF
KX$L3.LCN#
     16149**DCL     16150--REDEF   17982<<ASSIGN
KX$L3.NOD
     16037**DCL     17976<<ASSIGN
KX$L3.PVC
     16146**DCL     17981<<ASSIGN
KX$L3.QOS
     16038**DCL     17977<<ASSIGN
KX$L3.R21
     16260**DCL     18009<<ASSIGN
KX$L3.R22
     16261**DCL     18011<<ASSIGN
KX$L3.R23
     16261**DCL     18013<<ASSIGN
KX$L3.R25
     16262**DCL     18015<<ASSIGN
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:151  
KX$L3.RMTNSAP
     16357**DCL     16413--REDEF
KX$L3.RMTNSAP.NSAP.ADDRESS_N
     16408**DCL     16409--REDEF
KX$L3.RSPDLY
     16262**DCL     17994<<ASSIGN  17996<<ASSIGN
KX$L3.RSPTMR
     16263**DCL     17988<<ASSIGN
KX$L3.RSPTOCMP
     16148**DCL     17999<<ASSIGN
KX$L3.RVS
     16148**DCL     18003<<ASSIGN  18005<<ASSIGN
KX$L3.STATES
     16155**DCL     16155--REDEF
KX$L3.T21
     16258**DCL     18008<<ASSIGN
KX$L3.T22
     16258**DCL     18010<<ASSIGN
KX$L3.T23
     16259**DCL     18012<<ASSIGN
KX$L3.T25
     16259**DCL     18014<<ASSIGN
KX$L3.T26
     16260**DCL     18016<<ASSIGN
KX$L3.TMRBLK.CTX$
     16189**DCL     17962<<ASSIGN
KX$L3.TRNDLY
     16151**DCL     16152--REDEF   18006<<ASSIGN
KX$L3.TRNDLYIND
     16152**DCL     16153--REDEF
KX$TL3.CALL_OPTS.RCVADR.ADR_STRING
     16475**DCL     16475--REDEF
KX$TL3.CM_OPTS.RCVADR.ADR_STRING
     16510**DCL     16510--REDEF
KX$TL3.CUG
     16553**DCL     16554--REDEF
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:152  
KX$TL3.DFL_OPTS.RCVADR.ADR_STRING
     16545**DCL     16545--REDEF
KX$TL3.LCLADR.ADR_STRING
     16670**DCL     16670--REDEF
KX$TL3.LCLNSAP
     16687**DCL     16743--REDEF
KX$TL3.LCLNSAP.NSAP.ADDRESS_N
     16738**DCL     16739--REDEF
KX$TL3.LCN#
     16552**DCL     16553--REDEF
KX$TL3.NEXT$
     16435**DCL     18031<<ASSIGN
KX$TL3.RMTNSAP
     16760**DCL     16816--REDEF
KX$TL3.RMTNSAP.NSAP.ADDRESS_N
     16811**DCL     16812--REDEF
KX$TL3.STATES
     16558**DCL     16558--REDEF
KX$TL3.TRNDLY
     16554**DCL     16555--REDEF
KX$TL3.TRNDLYIND
     16555**DCL     16556--REDEF
KXP$PACKET
     14633**DCL-ENT 17003--DCLINIT 17035--DCLINIT 17067--DCLINIT
KX_AVL_IOMEM
     17922**DCL     17948>>IF      18037<<ASSIGN  18037>>ASSIGN
KX_AVL_MEM
     17922**DCL     17948>>IF      18038<<ASSIGN  18038>>ASSIGN
KX_BUF.SIZ
     17253**DCL     17948>>IF      18037>>ASSIGN
KX_L3
     16845**DCL     17960>>ASSIGN
KX_L3.CALL_OPTS.RCVADR.ADR_STRING
     16885**DCL     16885--REDEF
KX_L3.CM_OPTS.RCVADR.ADR_STRING
     16920**DCL     16920--REDEF
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:153  
KX_L3.CUG
     16963**DCL     16964--REDEF
KX_L3.DFL_OPTS.RCVADR.ADR_STRING
     16955**DCL     16955--REDEF
KX_L3.LCLADR.ADR_STRING
     17080**DCL     17080--REDEF
KX_L3.LCLNSAP
     17097**DCL     17153--REDEF
KX_L3.LCLNSAP.NSAP.ADDRESS_N
     17148**DCL     17149--REDEF
KX_L3.LCN#
     16962**DCL     16963--REDEF
KX_L3.RMTNSAP
     17170**DCL     17226--REDEF
KX_L3.RMTNSAP.NSAP.ADDRESS_N
     17221**DCL     17222--REDEF
KX_L3.STATES
     16968**DCL     16968--REDEF
KX_L3.TRNDLY
     16964**DCL     16965--REDEF
KX_L3.TRNDLYIND
     16965**DCL     16966--REDEF
KX_STATS_HDLC.REQSTATS.DSPMSK
     17524**DCL     17530--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     17565**DCL     17572--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     17849**DCL     17855--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     17890**DCL     17897--REDEF
L2$
     14643**DCL        18--PROC    15618--IMP-PTR 15663--IMP-PTR 17947>>ASSIGN  17948>>IF      17961>>ASSIGN
     17989>>ASSIGN  17991>>ASSIGN  17998>>ASSIGN  18000>>ASSIGN  18021>>ASSIGN  18027>>IF      18029>>ASSIGN
     18031>>ASSIGN  18032>>ASSIGN  18037>>ASSIGN
L3$
     14644**DCL        18--PROC    16032--IMP-PTR 17959<>CALL    17960>>ASSIGN  17961>>ASSIGN  17962>>ASSIGN
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:154  
     17962>>ASSIGN  17963>>ASSIGN  17963>>ASSIGN  17964>>ASSIGN  17964>>ASSIGN  17973>>ASSIGN  17974>>ASSIGN
     17975>>ASSIGN  17976>>ASSIGN  17977>>ASSIGN  17981>>ASSIGN  17982>>ASSIGN  17988>>ASSIGN  17989>>ASSIGN
     17990>>ASSIGN  17991>>ASSIGN  17992>>IF      17994>>ASSIGN  17996>>ASSIGN  17996>>ASSIGN  17997>>ASSIGN
     17998>>ASSIGN  17999>>ASSIGN  18000>>ASSIGN  18003>>ASSIGN  18005>>ASSIGN  18006>>ASSIGN  18007>>ASSIGN
     18008>>ASSIGN  18009>>ASSIGN  18010>>ASSIGN  18011>>ASSIGN  18012>>ASSIGN  18013>>ASSIGN  18014>>ASSIGN
     18015>>ASSIGN  18016>>ASSIGN  18017>>ASSIGN  18018>>ASSIGN  18019>>ASSIGN  18020>>ASSIGN  18020>>ASSIGN
     18021>>ASSIGN  18022>>ASSIGN  18022>>ASSIGN  18023>>ASSIGN  18023>>ASSIGN  18029>>ASSIGN  18031>>ASSIGN
     18032>>ASSIGN
LNKVC.ADR
     15332**DCL     17975>>ASSIGN
LNKVC.CUG
     15285**DCL     15329--REDEF
LNKVC.CUG.LNG#
     15300**DCL     17973>>ASSIGN
LNKVC.CUG_REDEF.BCDS
     15331**DCL     17974>>ASSIGN
LNKVC.NODE#
     15372**DCL     17976>>ASSIGN
LNKVC.PERMANENT
     15391**DCL     17978>>IF      17981>>ASSIGN
LNKVC.QOS#
     15384**DCL     17977>>ASSIGN
LNKVC.VIRCIR#
     15379**DCL     17982>>ASSIGN
L_NOMEM
     17951**LABEL   17959--CALLALT
SIZ
     14858**DCL     17958<<ASSIGN  17959<>CALL
T$
     14857**DCL     15090--IMP-PTR 15186--IMP-PTR 15409--IMP-PTR 17942<<ASSIGN  17946<<ASSIGN  17970>>IF
     17973>>ASSIGN  17974>>ASSIGN  17975>>ASSIGN  17976>>ASSIGN  17977>>ASSIGN  17978>>IF      17981>>ASSIGN
     17982>>ASSIGN  17984<<ASSIGN  17984>>ASSIGN  17984>>ASSIGN  17985>>ASSIGN
VCPRF
     15409**DCL     17985>>ASSIGN
VCPRF.TRADEL
     15413**DCL     15423--REDEF
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:155  
VICPRF
     14874**DCL     17947<<ASSIGN  17985<<ASSIGN
VICPRF.CDLY#
     14930**DCL     18007>>ASSIGN
VICPRF.CHARGE#
     15045**DCL     18018>>ASSIGN
VICPRF.CLRRET#
     14905**DCL     18013>>ASSIGN
VICPRF.CLRTIM#
     14900**DCL     18012>>ASSIGN
VICPRF.CRTR#
     14935**DCL     18009>>ASSIGN
VICPRF.CTMT#
     14940**DCL     18008>>ASSIGN
VICPRF.DATRET#
     14915**DCL     18015>>ASSIGN
VICPRF.DATTIM#
     14910**DCL     18014>>ASSIGN
VICPRF.EXTSEQ#
     14998**DCL     18017>>ASSIGN
VICPRF.IDLTIM#
     14925**DCL     18019>>ASSIGN
VICPRF.INTTIM#
     14920**DCL     18016>>ASSIGN
VICPRF.RCVSIZ#
     14953**DCL     17989>>ASSIGN
VICPRF.RCVTHR#
     14966**DCL     17990>>ASSIGN
VICPRF.RCVWND#
     14991**DCL     17991>>ASSIGN
VICPRF.RESRET#
     14895**DCL     18011>>ASSIGN
VICPRF.RESTIM#
     14890**DCL     18010>>ASSIGN
VICPRF.RSPDLY#
     15002**DCL     17992>>IF      17994>>ASSIGN
PL6.E3A0      #004=KXS$GETL3 File=KXS$SUBS.:E05TSI                               WED 07/30/97 02:27 Page:156  
VICPRF.RSPTMR#
     14945**DCL     17988>>ASSIGN
VICPRF.RSPTOCMP#
     14987**DCL     17999>>ASSIGN
VICPRF.RVR#
     15057**DCL     18001>>IF
VICPRF.SNDSIZ#
     15029**DCL     18000>>ASSIGN
VICPRF.SNDTHR#
     15010**DCL     17997>>ASSIGN
VICPRF.SNDWND#
     15050**DCL     17998>>ASSIGN
VICPRF.TRADEL
     14878**DCL     14888--REDEF
VICPRF.TRADEL#
     14888**DCL     18006>>ASSIGN

PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:157  
      780        1        /*T***********************************************************/
      781        2        /*T*                                                         */
      782        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      783        4        /*T*                                                         */
      784        5        /*T***********************************************************/
      785        6        /*F* NAME: KXS$RLSBFR                */
      786        7        /*F* PURPOSE: Release an I/O buffer  */
      787        8
      788        9        /*D* NAME: KXS$RLSBFR                */
      789       10        /*D* PURPOSE: Release an I/O buffer  */
      790       11        /*D* CALL: CALL KXS$RLSBFR ( DAT$ )  */
      791       12        /*D* INPUT: DAT$ - pointer to the buffer to be released  */
      792       13        /*D* OUTPUT: none                    */
      793       14
      794       15        KXS$RLSBFR: PROC ( DAT$ );
      795       16
      796       17        /*****************************************************************
      797       18        *                                                                *
      798       19        *                           Include files                        *
      799       20        *                                                                *
      800       21        *****************************************************************/
      801       22
      802       23        %INCLUDE K_ID_E;
      803       73        %K#ENTID_E;
      804       92        %K#LYRID_E;
      805       99        %INCLUDE LCP_6;
      806     4378        %INCLUDE KL_MACRO_C;
      807     7730        %INCLUDE KL_AFCN_C;
      808     7831        %INCLUDE KX_EQUS_E;
      809     8270        %INCLUDE KX_PERR_C;
      810     8399        %INCLUDE KX_SCODE_C;
      811     8465        %INCLUDE KX_DATA_C;
      812     8533        %INCLUDE KX_MACROS_M;
      813     9304        %INCLUDE KV_GLBCNS_E;
      814     9645        %KV#CQ_HNDID_E;
      815     9650        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:158  
      816     9651        /*****************************************************************
      817     9652        *                                                                *
      818     9653        *                           External References                  *
      819     9654        *                                                                *
      820     9655        *****************************************************************/
      821     9656
      822     9657    1   DCL KVB$RLS ENTRY (2) ALTRET;
      823     9658    1   DCL KXX$X29 ENTRY (1);
      824     9659    1   DCL KHD$SCREECH ENTRY (1);
      825     9660    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      826     9661        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:159  
      827     9662        /*****************************************************************
      828     9663        *                                                                *
      829     9664        *                           Auto                                 *
      830     9665        *                                                                *
      831     9666        *****************************************************************/
      832     9667
      833     9668    1   DCL DAT$ PTR;
      834     9669    1   DCL BFRSIZ UBIN;
      835     9670
      836     9671
      837     9672
      838     9673
      839     9674        /*****************************************************************
      840     9675        *                                                                *
      841     9676        *                           Based                                *
      842     9677        *                                                                *
      843     9678        *****************************************************************/
      844     9679
      845     9680        %KX$DATA ( STCLASS = "BASED ( DAT$ )" );
      846     9700        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
      847     9720        %KX$PACKET;
      848     9786        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:160  
      849     9787        /*****************************************************************
      850     9788        *                                                                *
      851     9789        *                           Static                               *
      852     9790        *                                                                *
      853     9791        *****************************************************************/
      854     9792
      855     9793        %KX_DATA;
      856    10483        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:161  
      857    10484        /*****************************************************************
      858    10485        *                                                                *
      859    10486        *                           Constant                             *
      860    10487        *                                                                *
      861    10488        *****************************************************************/
      862    10489
      863    10490        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_GET#);
      864    10551        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:162  
      865    10552        /*****************************************************************
      866    10553        *                                                                *
      867    10554        *                           Procedure                            *
      868    10555        *                                                                *
      869    10556        *****************************************************************/
      870    10557
      871    10558        /*
      872    10559                                             If the buffer count for this size
      873    10560                                             buffer is not greater than the
      874    10561                                             number that are supposed to be
      875    10562                                             maintained internally, add it to
      876    10563                                             the internal queue.  Otherwise,
      877    10564                                             give the buffer back to the buddy
      878    10565                                             space manager.
      879    10566        */
      880    10567    1       BFRSIZ = KX$DATA.BFRSIZ;
      881    10568    1       IF ( KX_BUF.CNT ( BFRSIZ ) < KX_IOBFRS )
      882    10569    1          THEN
      883    10570    2             DO;
      884    10571    2                KX$DATA = '0'B;
      885    10572    2                IF KX_BUF.HEAD$ ( BFRSIZ ) = ADDR(NIL)
      886    10573    2                   THEN
      887    10574    2                      KX_BUF.HEAD$ ( BFRSIZ ) = DAT$;
      888    10575    2                   ELSE
      889    10576    2                      KX_BUF.TAIL$ ( BFRSIZ ) -> KX$TDATA.NEXT$ = DAT$;
      890    10577    2                KX_BUF.TAIL$ ( BFRSIZ ) = DAT$;
      891    10578    2                KX_BUF.CNT ( BFRSIZ ) = KX_BUF.CNT ( BFRSIZ ) + 1;
      892    10579    2             END;
      893    10580    1          ELSE
      894    10581    2             DO;
      895    10582    2                BFRSIZ = ( KX_BUF.SIZ ( BFRSIZ ) + LENGTHC(KX$PACKET) + 1 ) / 2;
      896    10583    2                CALL KVB$RLS ( BFRSIZ, DAT$ )
      897    10584    2                   WHENALTRETURN
      898    10585    3                      DO;
      899    10586    3                         CALL KHD$SCREECH ( Y_NO_RLS );
      900    10587    3                      END;
      901    10588    2             END;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:163  
      902    10589
      903    10590    1       RETURN;
      904    10591
      905    10592    1   END KXS$RLSBFR;
      906    10593        %EOD;

PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:164  
--  Include file information  --

   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$RLSBFR.

   Procedure KXS$RLSBFR requires 96 words for executable code.
   Procedure KXS$RLSBFR requires 12 words of local(AUTO) storage.

PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:165  

 Object Unit name= KXS$RLSBFR                                 File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:28:29.16 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      3      3  KXS$RLSBFR
    1   Proc  even  none    96     60  KXS$RLSBFR
    2  RoData even  none     2      2  KXS$RLSBFR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KXS$RLSBFR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$RLS
         yes           Std       1 KHD$SCREECH
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_BUF                                KX_IOBFRS                             KX_PM$
r    G$ROS$
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:166  


      780        1        /*T***********************************************************/
      781        2        /*T*                                                         */
      782        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      783        4        /*T*                                                         */
      784        5        /*T***********************************************************/
      785        6        /*F* NAME: KXS$RLSBFR                */
      786        7        /*F* PURPOSE: Release an I/O buffer  */
      787        8
      788        9        /*D* NAME: KXS$RLSBFR                */
      789       10        /*D* PURPOSE: Release an I/O buffer  */
      790       11        /*D* CALL: CALL KXS$RLSBFR ( DAT$ )  */
      791       12        /*D* INPUT: DAT$ - pointer to the buffer to be released  */
      792       13        /*D* OUTPUT: none                    */
      793       14
      794       15        KXS$RLSBFR: PROC ( DAT$ );

     15   1 000000  D380 0000 0000  xent KXS$RLSBFR      LNJ,B5   X6A_AUTO_1
          1 000003       000C 0001                       DC       12,1

      795       16
      796       17        /*****************************************************************
      797       18        *                                                                *
      798       19        *                           Include files                        *
      799       20        *                                                                *
      800       21        *****************************************************************/
      801       22
      802       23        %INCLUDE K_ID_E;
      803       73        %K#ENTID_E;
      804       92        %K#LYRID_E;
      805       99        %INCLUDE LCP_6;
      806     4378        %INCLUDE KL_MACRO_C;
      807     7730        %INCLUDE KL_AFCN_C;
      808     7831        %INCLUDE KX_EQUS_E;
      809     8270        %INCLUDE KX_PERR_C;
      810     8399        %INCLUDE KX_SCODE_C;
      811     8465        %INCLUDE KX_DATA_C;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:167  
      812     8533        %INCLUDE KX_MACROS_M;
      813     9304        %INCLUDE KV_GLBCNS_E;
      814     9645        %KV#CQ_HNDID_E;
      815     9650        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:168  
      816     9651        /*****************************************************************
      817     9652        *                                                                *
      818     9653        *                           External References                  *
      819     9654        *                                                                *
      820     9655        *****************************************************************/
      821     9656
      822     9657    1   DCL KVB$RLS ENTRY (2) ALTRET;
      823     9658    1   DCL KXX$X29 ENTRY (1);
      824     9659    1   DCL KHD$SCREECH ENTRY (1);
      825     9660    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      826     9661        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:169  
      827     9662        /*****************************************************************
      828     9663        *                                                                *
      829     9664        *                           Auto                                 *
      830     9665        *                                                                *
      831     9666        *****************************************************************/
      832     9667
      833     9668    1   DCL DAT$ PTR;
      834     9669    1   DCL BFRSIZ UBIN;
      835     9670
      836     9671
      837     9672
      838     9673
      839     9674        /*****************************************************************
      840     9675        *                                                                *
      841     9676        *                           Based                                *
      842     9677        *                                                                *
      843     9678        *****************************************************************/
      844     9679
      845     9680        %KX$DATA ( STCLASS = "BASED ( DAT$ )" );
      846     9700        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
      847     9720        %KX$PACKET;
      848     9786        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:170  
      849     9787        /*****************************************************************
      850     9788        *                                                                *
      851     9789        *                           Static                               *
      852     9790        *                                                                *
      853     9791        *****************************************************************/
      854     9792
      855     9793        %KX_DATA;
      856    10483        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:171  
      857    10484        /*****************************************************************
      858    10485        *                                                                *
      859    10486        *                           Constant                             *
      860    10487        *                                                                *
      861    10488        *****************************************************************/
      862    10489
      863    10490        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_GET#);
      864    10551        %EJECT;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:172  
      865    10552        /*****************************************************************
      866    10553        *                                                                *
      867    10554        *                           Procedure                            *
      868    10555        *                                                                *
      869    10556        *****************************************************************/
      870    10557
      871    10558        /*
      872    10559                                             If the buffer count for this size
      873    10560                                             buffer is not greater than the
      874    10561                                             number that are supposed to be
      875    10562                                             maintained internally, add it to
      876    10563                                             the internal queue.  Otherwise,
      877    10564                                             give the buffer back to the buddy
      878    10565                                             space manager.
      879    10566        */
      880    10567    1       BFRSIZ = KX$DATA.BFRSIZ;

  10567   1 000005  ECC7 0004                            LDB,B6   @DAT$,AUTO
          1 000007  DC86                                 LDB,B5   ,B6
          1 000008  E845 0006                            LDR,R6   6,B5
          1 00000A  E570 1FFF                            AND,R6   8191,IMO
          1 00000C  EF47 0006                            STR,R6   BFRSIZ,AUTO

      881    10568    1       IF ( KX_BUF.CNT ( BFRSIZ ) < KX_IOBFRS )

  10568   1 00000E  B856                                 LDR,R3   R6
          1 00000F  D830 0000 0018  xsym                 LDR,R5   KX_BUF+24,R3
          1 000012  D900 0000 0000  xsym                 CMR,R5   KX_IOBFRS
          1 000015  0281 0026                            BGE      s:10582,PREL

      882    10569    1          THEN
      883    10570    2             DO;

      884    10571    2                KX$DATA = '0'B;

  10571   1 000017  DC86                                 LDB,B5   ,B6
          1 000018  5C10                                 LDV,R5   16
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:173  
          1 000019  0021                                 ALR      ;
          1 00001A       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 00001C       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

      885    10572    2                IF KX_BUF.HEAD$ ( BFRSIZ ) = ADDR(NIL)

  10572   1 00001E  437F                                 CSYNC    s:10571+6,SPREL
          1 00001F  A847 0006                            LDR,R2   BFRSIZ,AUTO
          1 000021  8DA0 0000 0000  xsym                 CMN      KX_BUF,R2
          1 000024  0981 0007                            BNE      s:10576,PREL

      886    10573    2                   THEN
      887    10574    2                      KX_BUF.HEAD$ ( BFRSIZ ) = DAT$;

  10574   1 000026  DC86                                 LDB,B5   ,B6
          1 000027  DFA0 0000 0000  xsym                 STB,B5   KX_BUF,R2
          1 00002A  0F81 0006                            B        s:10577,PREL

      888    10575    2                   ELSE
      889    10576    2                      KX_BUF.TAIL$ ( BFRSIZ ) -> KX$TDATA.NEXT$ = DAT$;

  10576   1 00002C  DCA0 0000 000C  xsym                 LDB,B5   KX_BUF+12,R2
          1 00002F  CC86                                 LDB,B4   ,B6
          1 000030  CF85                                 STB,B4   ,B5

      890    10577    2                KX_BUF.TAIL$ ( BFRSIZ ) = DAT$;

  10577   1 000031  DC86                                 LDB,B5   ,B6
          1 000032  A847 0006                            LDR,R2   BFRSIZ,AUTO
          1 000034  DFA0 0000 000C  xsym                 STB,B5   KX_BUF+12,R2

      891    10578    2                KX_BUF.CNT ( BFRSIZ ) = KX_BUF.CNT ( BFRSIZ ) + 1;

  10578   1 000037  8AA0 0000 0018  xsym                 INC      KX_BUF+24,R2

      892    10579    2             END;

PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:174  
  10579   1 00003A  0F81 0022                            B        s:10590,PREL

      893    10580    1          ELSE
      894    10581    2             DO;

      895    10582    2                BFRSIZ = ( KX_BUF.SIZ ( BFRSIZ ) + LENGTHC(KX$PACKET) + 1 ) / 2;

  10582   1 00003C  C830 0000 001E  xsym                 LDR,R4   KX_BUF+30,R3
          1 00003F  4E16                                 ADV,R4   22
          1 000040  4041                                 SOR,R4   1
          1 000041  B854                                 LDR,R3   R4
          1 000042  BF47 0006                            STR,R3   BFRSIZ,AUTO

      896    10583    2                CALL KVB$RLS ( BFRSIZ, DAT$ )

  10583   1 000044  EFC7 000A                            STB,B6   BFRSIZ+4,AUTO
          1 000046  DBC7 0006                            LAB,B5   BFRSIZ,AUTO
          1 000048  DFC7 0008                            STB,B5   BFRSIZ+2,AUTO
          1 00004A  BBC7 0008                            LAB,B3   BFRSIZ+2,AUTO
          1 00004C  CBF0 0200                            LAB,B4   512,IMO
          1 00004E  E380 0000 0000  xent                 LNJ,B6   KVB$RLS
          1 000051       0003                            DC       s:10586,PREL
          1 000052  0F81 000A                            B        s:10590,PREL

      897    10584    2                   WHENALTRETURN
      898    10585    3                      DO;

      899    10586    3                         CALL KHD$SCREECH ( Y_NO_RLS );

  10586   1 000054  BB80 0000 0000  02                   LAB,B3   0
          1 000057  CBF0 0100                            LAB,B4   256,IMO
          1 000059  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 00005C       0001                            DC       s:10590,PREL

      900    10587    3                      END;

      901    10588    2             END;
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:175  

      902    10589
      903    10590    1       RETURN;

  10590   1 00005D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      904    10591
      905    10592    1   END KXS$RLSBFR;
      906    10593        %EOD;

PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:176  
--  Include file information  --

   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$RLSBFR.
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:177  

 **** Variables and constants ****

  ****  Section 000 RoData KXS$RLSBFR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 Y_NO_RLS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DAT$                      6-0-0/w UBIN(16)    r     1 BFRSIZ
    *0-0-0/w PTR         r     1 DAT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(672)   r     1 KX_BUF                     0-0-0/w UBIN(16)    r     1 KX_IOBFRS
     0-0-0/b EPTR        r     1 KX_PM$(0:2)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(128)   r     1 KX$DATA                    0-0-0/w STRC(168)   r     1 KX$PACKET
     0-0-0/w STRC(128)   r     1 KX$TDATA


   Procedure KXS$RLSBFR requires 96 words for executable code.
   Procedure KXS$RLSBFR requires 12 words of local(AUTO) storage.
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:178  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:179  
          MINI XREF LISTING

BFRSIZ
      9669**DCL     10567<<ASSIGN  10568>>IF      10572>>IF      10574>>ASSIGN  10576>>ASSIGN  10577>>ASSIGN
     10578>>ASSIGN  10578>>ASSIGN  10582<<ASSIGN  10582>>ASSIGN  10583<>CALL
DAT$
      9668**DCL        15--PROC     9693--IMP-PTR 10567>>ASSIGN  10571>>ASSIGN  10574>>ASSIGN  10576>>ASSIGN
     10577>>ASSIGN  10583<>CALL
KHD$SCREECH
      9659**DCL-ENT 10586--CALL
KVB$RLS
      9657**DCL-ENT 10583--CALL
KX$DATA
      9693**DCL     10571<<ASSIGN
KX$DATA.BFRSIZ
      9696**DCL     10567>>ASSIGN
KX$DATA.RLS_STAT
      9695**DCL      9696--REDEF
KX$PACKET
      9733**DCL     10582--ASSIGN
KX$PACKET.CTL
      9740**DCL      9740--REDEF
KX$PACKET.LCN#
      9769**DCL      9770--REDEF
KX$PACKET.RLS_STAT
      9735**DCL      9736--REDEF
KX$PACKET.TYPE
      9770**DCL      9770--REDEF    9782--REDEF
KX$PACKET.TYPE_BITS.PS
      9774**DCL      9774--REDEF
KX$TDATA.NEXT$
      9715**DCL     10576<<ASSIGN
KX$TDATA.RLS_STAT
      9715**DCL      9716--REDEF
PL6.E3A0      #005=KXS$RLSBFR File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:28 Page:180  
KX_BUF.CNT
      9809**DCL     10568>>IF      10578<<ASSIGN  10578>>ASSIGN
KX_BUF.HEAD$
      9808**DCL     10572>>IF      10574<<ASSIGN
KX_BUF.SIZ
      9809**DCL     10582>>ASSIGN
KX_BUF.TAIL$
      9809**DCL     10576>>ASSIGN  10577<<ASSIGN
KX_IOBFRS
     10477**DCL     10568>>IF
KX_STATS_HDLC.REQSTATS.DSPMSK
     10080**DCL     10086--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     10121**DCL     10128--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     10405**DCL     10411--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     10446**DCL     10453--REDEF
Y_NO_RLS
     10517**DCL     10586<>CALL

PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:181  
      907        1        /*T***********************************************************/
      908        2        /*T*                                                         */
      909        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      910        4        /*T*                                                         */
      911        5        /*T***********************************************************/
      912        6        /*F* NAME: KXS$RLSCNTX               */
      913        7        /*F* PURPOSE: Release a level 2 context block  */
      914        8
      915        9        /*D* NAME: KXS$RLSCNTX               */
      916       10        /*D* PURPOSE: Release a level 2 context block and
      917       11                      all the I/O buffers queued to it  */
      918       12        /*D* CALL: CALL KXS$RLSCNTX ( L2$ ); */
      919       13        /*D* INPUT: L2$ - pointer to the context to be released  */
      920       14        /*D* OUTPUT: none                    */
      921       15
      922       16        KXS$RLSCNTX: PROC ( L2$ );
      923       17
      924       18        /*****************************************************************
      925       19        *                                                                *
      926       20        *                           Include files                        *
      927       21        *                                                                *
      928       22        *****************************************************************/
      929       23
      930       24        %INCLUDE K_ID_E;
      931       74        %K#ENTID_E;
      932       93        %K#LYRID_E;
      933      100        %INCLUDE KL_MACRO_C;
      934     3452        %INCLUDE KL_AFCN_C;
      935     3553        %INCLUDE LCP_6;
      936     7832        %INCLUDE CP_6_SUBS;
      937     8372        %INCLUDE KH$CHN;
      938     8494        %INCLUDE KHA_FNC_E;
      939     8594        %INCLUDE KX_SCODE_C;
      940     8660        %INCLUDE KL_SUPER_C;
      941    11562        %INCLUDE KX_EQUS_E;
      942    12001        %INCLUDE KX_PERR_C;
      943    12130        %INCLUDE KX_DATA_C;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:182  
      944    12198        %INCLUDE KX_MACROS_M;
      945    12969        %INCLUDE KV_GLBCNS_E;
      946    13310        %INCLUDE K_ADDRESS_M;
      947    13813        %INCLUDE KNH_MACRO_C;
      948    14096        %KV#CQ_HNDID_E;
      949    14101        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:183  
      950    14102        /*****************************************************************
      951    14103        *                                                                *
      952    14104        *                           External References                  *
      953    14105        *                                                                *
      954    14106        *****************************************************************/
      955    14107
      956    14108    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
      957    14109    1   DCL KVB$RLS ENTRY(2) ALTRET;
      958    14110    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
      959    14111    1   DCL KXS$RLSBFR ENTRY (1);
      960    14112    1   DCL KXX$X29 ENTRY (1);
      961    14113    1   DCL KHD$SCREECH ENTRY (1);
      962    14114    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      963    14115        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:184  
      964    14116        /*****************************************************************
      965    14117        *                                                                *
      966    14118        *                           Auto                                 *
      967    14119        *                                                                *
      968    14120        *****************************************************************/
      969    14121
      970    14122    1   DCL L2$ PTR;
      971    14123
      972    14124    1   DCL CTX$ PTR;
      973    14125    1   DCL DAT$ PTR;
      974    14126    1   DCL NXTDAT$ PTR;
      975    14127    1   DCL DVC$ PTR;
      976    14128    1   DCL BFRSIZ UBIN;
      977    14129
      978    14130
      979    14131
      980    14132
      981    14133        /*****************************************************************
      982    14134        *                                                                *
      983    14135        *                           Based                                *
      984    14136        *                                                                *
      985    14137        *****************************************************************/
      986    14138
      987    14139        %KH$CHN ( STCLASS = BASED );
      988    14263        %KX$L1 ( STCLASS = "BASED ( CTX$ )" );
      989    14303        %KX$L1 ( FPTN = KX$TL1, STCLASS = BASED );
      990    14343        %KX$L2 ( STCLASS = "BASED ( CTX$ )" );
      991    14710        %KX$L2 (FPTN = KX$L2S, STCLASS = "BASED ( CTX$ )", SLCC = YES );
      992    15107        %KX$LINKDEV ( STCLASS = "BASED(DVC$)" );
      993    15134        %KX$DATA ( STCLASS = "BASED ( DAT$ )" );
      994    15154        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
      995    15174        %KX$TMRBLK ( FPTN=KX$BTMRBLK, STCLASS=BASED );
      996    15206        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:185  
      997    15207        /*****************************************************************
      998    15208        *                                                                *
      999    15209        *                           Static                               *
     1000    15210        *                                                                *
     1001    15211        *****************************************************************/
     1002    15212
     1003    15213        %KX_DATA;
     1004    15903        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:186  
     1005    15904        /*****************************************************************
     1006    15905        *                                                                *
     1007    15906        *                           Constant                             *
     1008    15907        *                                                                *
     1009    15908        *****************************************************************/
     1010    15909
     1011    15910        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_RLS#);
     1012    15971        %VLP_SCODE (FPTN=Y_KHAALTRET,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_KHAALTRET#);
     1013    16032        %VLP_SCODE (FPTN=Y_BADL2LIST,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_BADL2LIST#);
     1014    16093        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:187  
     1015    16094        /*****************************************************************
     1016    16095        *                                                                *
     1017    16096        *                           Procedure                            *
     1018    16097        *                                                                *
     1019    16098        *****************************************************************/
     1020    16099
     1021    16100        /*
     1022    16101                                             Delink this context from the
     1023    16102                                             others.
     1024    16103        */
     1025    16104    1       CTX$ = KX_CNTX.HD$;
     1026    16105    1       IF L2$ = CTX$
     1027    16106    1          THEN
     1028    16107    2             DO;
     1029    16108    2                KX_CNTX.HD$ = KX$L1.NEXT$;
     1030    16109    2                IF KX$L1.NEXT$ = ADDR(NIL)
     1031    16110    2                   THEN
     1032    16111    2                      KX_CNTX.TL$ = KX_CNTX.HD$;
     1033    16112    2             END;
     1034    16113    1          ELSE
     1035    16114    2             DO;
     1036    16115    3                DO WHILE CTX$ ~= ADDR(NIL);
     1037    16116    3                   IF KX$L1.NEXT$ = L2$ THEN EXIT;
     1038    16117    3                   CTX$ = KX$L1.NEXT$;
     1039    16118    3                END;
     1040    16119    2                IF CTX$ = ADDR(NIL)
     1041    16120    2                   THEN
     1042    16121    3                      DO;
     1043    16122        /*S* SCREECH_CODE: KXS-S$KX_BADL2LIST#
     1044    16123             MESSAGE: The chain of L2 contexts was corrupted.
     1045    16124        */
     1046    16125    3                         CALL KHD$SCREECH ( Y_BADL2LIST );
     1047    16126    3                      END;
     1048    16127    2                KX$L1.NEXT$ = KX$L1.NEXT$->KX$TL1.NEXT$;
     1049    16128    2                IF KX$L1.NEXT$ = ADDR(NIL)
     1050    16129    2                   THEN
     1051    16130    2                      KX_CNTX.TL$ = CTX$;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:188  
     1052    16131    2                CTX$ = L2$;
     1053    16132    2             END;
     1054    16133        /*
     1055    16134                                             Clear the context pointer from
     1056    16135                                             the channel table.
     1057    16136        */
     1058    16137    1       KX$L1.CHN$ -> KH$CHN.CTX$ = ADDR(NIL);
     1059    16138        /*
     1060    16139           Clear the L2$ in link devices. If the link device has logged on, it
     1061    16140           will be released when disconnect thru VDH is done. Otherwise, it should
     1062    16141           be released here.
     1063    16142        */
     1064    16143    2       DO WHILE ( KX$L2.DVC_HEAD$ ~= ADDR(NIL) );
     1065    16144    2          DVC$ = KX$L2.DVC_HEAD$;
     1066    16145    2          KX$L2.DVC_HEAD$ = KX$LINKDEV.FLNK$;
     1067    16146    2          KX$LINKDEV.L2$ = ADDR(NIL);
     1068    16147    2          KX$LINKDEV.CHN$->KH$CHN.CTX$ = ADDR(NIL);
     1069    16148    2          IF KX$LINKDEV.VDI$ = ADDR(NIL)
     1070    16149    2             THEN
     1071    16150    3                DO;
     1072    16151    3                   CALL KVB$RLSSYS ( SIZEW(KX$LINKDEV), DVC$ );
     1073    16152    3                END;
     1074    16153    2       END;
     1075    16154        /*
     1076    16155                                             Release any CCB input buffers.
     1077    16156        */
     1078    16157    1       DAT$ = KX$L1.IN_CCB_HEAD$;
     1079    16158    2       DO WHILE ( DAT$ ~= ADDR(NIL));
     1080    16159    2          KX$L1.IN_CCB_HEAD$ = KX$DATA.NEXT$;
     1081    16160    2          CALL KXS$RLSBFR ( DAT$ );
     1082    16161    2          DAT$ = KX$L1.IN_CCB_HEAD$;
     1083    16162    2       END;
     1084    16163        /*
     1085    16164                                             Release any CCB output buffers.
     1086    16165        */
     1087    16166    1       DAT$ = KX$L1.OUT_CCB_HEAD$;
     1088    16167    2       DO WHILE ( DAT$ ~= ADDR(NIL));
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:189  
     1089    16168    2          KX$L1.OUT_CCB_HEAD$ = KX$DATA.NEXT$;
     1090    16169    2          CALL KXS$RLSBFR ( DAT$ );
     1091    16170    2          DAT$ = KX$L1.OUT_CCB_HEAD$;
     1092    16171    2       END;
     1093    16172        /*
     1094    16173                                             Release any buffers on the
     1095    16174                                             output queue.
     1096    16175        */
     1097    16176    1       DAT$ = KX$L1.OUT_Q_HEAD$;
     1098    16177    2       DO WHILE ( DAT$ ~= ADDR(NIL));
     1099    16178    2          KX$L1.OUT_Q_HEAD$ = KX$DATA.NEXT$;
     1100    16179    2          CALL KXS$RLSBFR ( DAT$ );
     1101    16180    2          DAT$ = KX$L1.OUT_Q_HEAD$;
     1102    16181    2       END;
     1103    16182        /*
     1104    16183                                             Release any buffers on the
     1105    16184                                             supervisory queue.
     1106    16185        */
     1107    16186    1       DAT$ = KX$L1.SUPV_Q_HEAD$;
     1108    16187    2       DO WHILE ( DAT$ ~= ADDR(NIL));
     1109    16188    2          KX$L1.SUPV_Q_HEAD$ = KX$DATA.NEXT$;
     1110    16189    2          CALL KXS$RLSBFR ( DAT$ );
     1111    16190    2          DAT$ = KX$L1.SUPV_Q_HEAD$;
     1112    16191    2       END;
     1113    16192        /*
     1114    16193                                             Set the CCB counts in the channel
     1115    16194                                             table to 0.
     1116    16195        */
     1117    16196    1       KX$L1.CHN$ -> KH$CHN.INPCCBCNT = 0;
     1118    16197    1       KX$L1.CHN$ -> KH$CHN.OTPCCBCNT = 0;
     1119    16198        /*
     1120    16199           Stop all timers just to be sure.
     1121    16200        */
     1122    16201            %STOP_TIMER ( FPTN = KX$L2.TMRBLK );
     1123    16210            %STOP_TIMER ( FPTN = KX$L2.T20TMR );
     1124    16219        /*
     1125    16220                                             Report DSC to handler common.
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:190  
     1126    16221        */
     1127    16222    1       CALL KHA$DVCADM ( %KHA_FNC_DISCONNECT_EVT,
     1128    16223    1          BFRSIZ,
     1129    16224    1          KX$L1.CHN$ -> KH$CHN.TERMID,
     1130    16225    1          KX$L1.CHN$ -> KH$CHN.TERMID,
     1131    16226    1          VECTOR(NIL), 1);
     1132    16227        /*
     1133    16228           Update available MEM and IOMEM according to formula
     1134    16229        */
     1135    16230    1       KX_AVL_MEM = KX_AVL_MEM + 400;
     1136    16231    1       KX_AVL_IOMEM = KX_AVL_IOMEM +
     1137    16232    1          (KX$L2.MAXCCB + KX$L2.K) * KX_BUF.SIZ(KX$L2.BUF_SIZE);
     1138    16233        /*
     1139    16234                                             Release the context block.
     1140    16235        */
     1141    16236    2       IF NOT KX$L1.CHN$ -> KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN DO;
     1142    16237    2                BFRSIZ = SIZEW(KX$L2);
     1143    16238    2                CALL KVB$RLSSYS ( BFRSIZ, CTX$ )
     1144    16239    2                   WHENALTRETURN
     1145    16240    3                      DO;
     1146    16241    3                         CALL KHD$SCREECH ( Y_NO_RLS );
     1147    16242    3                      END;
     1148    16243
     1149    16244    2             END;
     1150    16245    1          ELSE
     1151    16246    1             CALL KVB$RLS (KX$L2S.L2SIZ, KX$L2S.L2$);
     1152    16247    1       RETURN;
     1153    16248
     1154    16249    1   END KXS$RLSCNTX;
     1155    16250        %EOD;

PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:191  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$RLSCNTX.

   Procedure KXS$RLSCNTX requires 502 words for executable code.
   Procedure KXS$RLSCNTX requires 28 words of local(AUTO) storage.

PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:192  

 Object Unit name= KXS$RLSCNTX                                File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:28:53.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      9      9  KXS$RLSCNTX
    1   Proc  even  none   502    1F6  KXS$RLSCNTX
    2  RoData even  none     7      7  KXS$RLSCNTX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KXS$RLSCNTX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHD$SCREECH
 yes     yes           Std       2 KVB$RLSSYS
         yes           Std       1 KXS$RLSBFR
 yes     yes           Std       6 KHA$DVCADM
 yes     yes           Std       2 KVB$RLS
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:193  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_CNTX                               KX_BUF                                KX_TMRBLK
     KX_AVL_MEM                            KX_AVL_IOMEM                          KX_PM$
r    G$ROS$
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:194  


      907        1        /*T***********************************************************/
      908        2        /*T*                                                         */
      909        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      910        4        /*T*                                                         */
      911        5        /*T***********************************************************/
      912        6        /*F* NAME: KXS$RLSCNTX               */
      913        7        /*F* PURPOSE: Release a level 2 context block  */
      914        8
      915        9        /*D* NAME: KXS$RLSCNTX               */
      916       10        /*D* PURPOSE: Release a level 2 context block and
      917       11                      all the I/O buffers queued to it  */
      918       12        /*D* CALL: CALL KXS$RLSCNTX ( L2$ ); */
      919       13        /*D* INPUT: L2$ - pointer to the context to be released  */
      920       14        /*D* OUTPUT: none                    */
      921       15
      922       16        KXS$RLSCNTX: PROC ( L2$ );

     16   1 000000  D380 0000 0000  xent KXS$RLSCNTX     LNJ,B5   X6A_AUTO_1
          1 000003       001C 0001                       DC       28,1

      923       17
      924       18        /*****************************************************************
      925       19        *                                                                *
      926       20        *                           Include files                        *
      927       21        *                                                                *
      928       22        *****************************************************************/
      929       23
      930       24        %INCLUDE K_ID_E;
      931       74        %K#ENTID_E;
      932       93        %K#LYRID_E;
      933      100        %INCLUDE KL_MACRO_C;
      934     3452        %INCLUDE KL_AFCN_C;
      935     3553        %INCLUDE LCP_6;
      936     7832        %INCLUDE CP_6_SUBS;
      937     8372        %INCLUDE KH$CHN;
      938     8494        %INCLUDE KHA_FNC_E;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:195  
      939     8594        %INCLUDE KX_SCODE_C;
      940     8660        %INCLUDE KL_SUPER_C;
      941    11562        %INCLUDE KX_EQUS_E;
      942    12001        %INCLUDE KX_PERR_C;
      943    12130        %INCLUDE KX_DATA_C;
      944    12198        %INCLUDE KX_MACROS_M;
      945    12969        %INCLUDE KV_GLBCNS_E;
      946    13310        %INCLUDE K_ADDRESS_M;
      947    13813        %INCLUDE KNH_MACRO_C;
      948    14096        %KV#CQ_HNDID_E;
      949    14101        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:196  
      950    14102        /*****************************************************************
      951    14103        *                                                                *
      952    14104        *                           External References                  *
      953    14105        *                                                                *
      954    14106        *****************************************************************/
      955    14107
      956    14108    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
      957    14109    1   DCL KVB$RLS ENTRY(2) ALTRET;
      958    14110    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
      959    14111    1   DCL KXS$RLSBFR ENTRY (1);
      960    14112    1   DCL KXX$X29 ENTRY (1);
      961    14113    1   DCL KHD$SCREECH ENTRY (1);
      962    14114    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      963    14115        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:197  
      964    14116        /*****************************************************************
      965    14117        *                                                                *
      966    14118        *                           Auto                                 *
      967    14119        *                                                                *
      968    14120        *****************************************************************/
      969    14121
      970    14122    1   DCL L2$ PTR;
      971    14123
      972    14124    1   DCL CTX$ PTR;
      973    14125    1   DCL DAT$ PTR;
      974    14126    1   DCL NXTDAT$ PTR;
      975    14127    1   DCL DVC$ PTR;
      976    14128    1   DCL BFRSIZ UBIN;
      977    14129
      978    14130
      979    14131
      980    14132
      981    14133        /*****************************************************************
      982    14134        *                                                                *
      983    14135        *                           Based                                *
      984    14136        *                                                                *
      985    14137        *****************************************************************/
      986    14138
      987    14139        %KH$CHN ( STCLASS = BASED );
      988    14263        %KX$L1 ( STCLASS = "BASED ( CTX$ )" );
      989    14303        %KX$L1 ( FPTN = KX$TL1, STCLASS = BASED );
      990    14343        %KX$L2 ( STCLASS = "BASED ( CTX$ )" );
      991    14710        %KX$L2 (FPTN = KX$L2S, STCLASS = "BASED ( CTX$ )", SLCC = YES );
      992    15107        %KX$LINKDEV ( STCLASS = "BASED(DVC$)" );
      993    15134        %KX$DATA ( STCLASS = "BASED ( DAT$ )" );
      994    15154        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
      995    15174        %KX$TMRBLK ( FPTN=KX$BTMRBLK, STCLASS=BASED );
      996    15206        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:198  
      997    15207        /*****************************************************************
      998    15208        *                                                                *
      999    15209        *                           Static                               *
     1000    15210        *                                                                *
     1001    15211        *****************************************************************/
     1002    15212
     1003    15213        %KX_DATA;
     1004    15903        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:199  
     1005    15904        /*****************************************************************
     1006    15905        *                                                                *
     1007    15906        *                           Constant                             *
     1008    15907        *                                                                *
     1009    15908        *****************************************************************/
     1010    15909
     1011    15910        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_RLS#);
     1012    15971        %VLP_SCODE (FPTN=Y_KHAALTRET,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_KHAALTRET#);
     1013    16032        %VLP_SCODE (FPTN=Y_BADL2LIST,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_BADL2LIST#);
     1014    16093        %EJECT;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:200  
     1015    16094        /*****************************************************************
     1016    16095        *                                                                *
     1017    16096        *                           Procedure                            *
     1018    16097        *                                                                *
     1019    16098        *****************************************************************/
     1020    16099
     1021    16100        /*
     1022    16101                                             Delink this context from the
     1023    16102                                             others.
     1024    16103        */
     1025    16104    1       CTX$ = KX_CNTX.HD$;

  16104   1 000005  EC80 0000 0000  xsym                 LDB,B6   KX_CNTX
          1 000008  EFC7 0006                            STB,B6   CTX$,AUTO

     1026    16105    1       IF L2$ = CTX$

  16105   1 00000A  DCC7 0004                            LDB,B5   @L2$,AUTO
          1 00000C  CC85                                 LDB,B4   ,B5
          1 00000D  CDC7 0006                            CMB,B4   CTX$,AUTO
          1 00000F  0981 000D                            BNE      s:16115,PREL

     1027    16106    1          THEN
     1028    16107    2             DO;

     1029    16108    2                KX_CNTX.HD$ = KX$L1.NEXT$;

  16108   1 000011  BC86                                 LDB,B3   ,B6
          1 000012  BF80 0000 0000  xsym                 STB,B3   KX_CNTX

     1030    16109    2                IF KX$L1.NEXT$ = ADDR(NIL)

  16109   1 000015  8D86                                 CMN      ,B6
          1 000016  0981 0034                            BNE      s:16137,PREL

     1031    16110    2                   THEN
     1032    16111    2                      KX_CNTX.TL$ = KX_CNTX.HD$;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:201  

  16111   1 000018  BF80 0000 0002  xsym                 STB,B3   KX_CNTX+2

     1033    16112    2             END;

  16112   1 00001B  0F81 002F                            B        s:16137,PREL

     1034    16113    1          ELSE
     1035    16114    2             DO;

     1036    16115    3                DO WHILE CTX$ ~= ADDR(NIL);

  16115   1 00001D  0F81 000B                            B        s:16118,PREL

     1037    16116    3                   IF KX$L1.NEXT$ = L2$ THEN EXIT;

  16116   1 00001F  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000021  DC86                                 LDB,B5   ,B6
          1 000022  CCC7 0004                            LDB,B4   @L2$,AUTO
          1 000024  DD84                                 CMB,B5   ,B4
          1 000025  0901 0006                            BE       s:16119,PREL

     1038    16117    3                   CTX$ = KX$L1.NEXT$;

  16117   1 000027  DFC7 0006                            STB,B5   CTX$,AUTO

     1039    16118    3                END;

  16118   1 000029  8DC7 0006                            CMN      CTX$,AUTO
          1 00002B  09F4                                 BNE      s:16116,SPREL

     1040    16119    2                IF CTX$ = ADDR(NIL)

  16119   1 00002C  8DC7 0006                            CMN      CTX$,AUTO
          1 00002E  0981 000A                            BNE      s:16127,PREL

     1041    16120    2                   THEN
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:202  
     1042    16121    3                      DO;

     1043    16122        /*S* SCREECH_CODE: KXS-S$KX_BADL2LIST#
     1044    16123             MESSAGE: The chain of L2 contexts was corrupted.
     1045    16124        */
     1046    16125    3                         CALL KHD$SCREECH ( Y_BADL2LIST );

  16125   1 000030  BB80 0000 0000  02                   LAB,B3   0
          1 000033  CBF0 0100                            LAB,B4   256,IMO
          1 000035  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000038       0001                            DC       s:16127,PREL

     1047    16126    3                      END;

     1048    16127    2                KX$L1.NEXT$ = KX$L1.NEXT$->KX$TL1.NEXT$;

  16127   1 000039  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00003B  DC86                                 LDB,B5   ,B6
          1 00003C  CC85                                 LDB,B4   ,B5
          1 00003D  CF86                                 STB,B4   ,B6

     1049    16128    2                IF KX$L1.NEXT$ = ADDR(NIL)

  16128   1 00003E  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000040  8D86                                 CMN      ,B6
          1 000041  0981 0004                            BNE      s:16131,PREL

     1050    16129    2                   THEN
     1051    16130    2                      KX_CNTX.TL$ = CTX$;

  16130   1 000043  EF80 0000 0002  xsym                 STB,B6   KX_CNTX+2

     1052    16131    2                CTX$ = L2$;

  16131   1 000046  DCC7 0004                            LDB,B5   @L2$,AUTO
          1 000048  CC85                                 LDB,B4   ,B5
          1 000049  CFC7 0006                            STB,B4   CTX$,AUTO
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:203  

     1053    16132    2             END;

     1054    16133        /*
     1055    16134                                             Clear the context pointer from
     1056    16135                                             the channel table.
     1057    16136        */
     1058    16137    1       KX$L1.CHN$ -> KH$CHN.CTX$ = ADDR(NIL);

  16137   1 00004B  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00004D  CCC6 0002                            LDB,B4   2,B6
          1 00004F  BB80 0000 0000                       LAB,B3   0
          1 000052  BFC4 000C                            STB,B3   12,B4

     1059    16138        /*
     1060    16139           Clear the L2$ in link devices. If the link device has logged on, it
     1061    16140           will be released when disconnect thru VDH is done. Otherwise, it should
     1062    16141           be released here.
     1063    16142        */
     1064    16143    2       DO WHILE ( KX$L2.DVC_HEAD$ ~= ADDR(NIL) );

  16143   1 000054  0F81 002F                            B        s:16153,PREL

     1065    16144    2          DVC$ = KX$L2.DVC_HEAD$;

  16144   1 000056  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000058  DCC6 0068                            LDB,B5   104,B6
          1 00005A  DFC7 000C                            STB,B5   DVC$,AUTO

     1066    16145    2          KX$L2.DVC_HEAD$ = KX$LINKDEV.FLNK$;

  16145   1 00005C  CCC5 0006                            LDB,B4   6,B5
          1 00005E  CFC6 0068                            STB,B4   104,B6

     1067    16146    2          KX$LINKDEV.L2$ = ADDR(NIL);

  16146   1 000060  BB80 0000 0000                       LAB,B3   0
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:204  
          1 000063  BFC5 000A                            STB,B3   10,B5

     1068    16147    2          KX$LINKDEV.CHN$->KH$CHN.CTX$ = ADDR(NIL);

  16147   1 000065  DCC7 000C                            LDB,B5   DVC$,AUTO
          1 000067  CCC5 0004                            LDB,B4   4,B5
          1 000069  BB80 0000 0000                       LAB,B3   0
          1 00006C  BFC4 000C                            STB,B3   12,B4

     1069    16148    2          IF KX$LINKDEV.VDI$ = ADDR(NIL)

  16148   1 00006E  DCC7 000C                            LDB,B5   DVC$,AUTO
          1 000070  8DC5 0002                            CMN      2,B5
          1 000072  0981 0011                            BNE      s:16153,PREL

     1070    16149    2             THEN
     1071    16150    3                DO;

     1072    16151    3                   CALL KVB$RLSSYS ( SIZEW(KX$LINKDEV), DVC$ );

  16151   1 000074  CBF0 0018                            LAB,B4   24,IMO
          1 000076  BBC7 000C                            LAB,B3   DVC$,AUTO
          1 000078  BFC7 0012                            STB,B3   BFRSIZ+4,AUTO
          1 00007A  CFC7 0010                            STB,B4   BFRSIZ+2,AUTO
          1 00007C  BBC7 0010                            LAB,B3   BFRSIZ+2,AUTO
          1 00007E  CBF0 0200                            LAB,B4   512,IMO
          1 000080  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 000083       0001                            DC       s:16153,PREL

     1073    16152    3                END;

     1074    16153    2       END;

  16153   1 000084  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000086  8DC6 0068                            CMN      104,B6
          1 000088  09CE                                 BNE      s:16144,SPREL

PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:205  
     1075    16154        /*
     1076    16155                                             Release any CCB input buffers.
     1077    16156        */
     1078    16157    1       DAT$ = KX$L1.IN_CCB_HEAD$;

  16157   1 000089  DCC6 0006                            LDB,B5   6,B6
          1 00008B  DFC7 0008                            STB,B5   DAT$,AUTO

     1079    16158    2       DO WHILE ( DAT$ ~= ADDR(NIL));

  16158   1 00008D  0F81 001A                            B        s:16162,PREL

     1080    16159    2          KX$L1.IN_CCB_HEAD$ = KX$DATA.NEXT$;

  16159   1 00008F  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 000091  DC86                                 LDB,B5   ,B6
          1 000092  CCC7 0006                            LDB,B4   CTX$,AUTO
          1 000094  DFC4 0006                            STB,B5   6,B4

     1081    16160    2          CALL KXS$RLSBFR ( DAT$ );

  16160   1 000096  EBC7 0008                            LAB,B6   DAT$,AUTO
          1 000098  EFC7 0010                            STB,B6   BFRSIZ+2,AUTO
          1 00009A  BBC7 0010                            LAB,B3   BFRSIZ+2,AUTO
          1 00009C  CBF0 0100                            LAB,B4   256,IMO
          1 00009E  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          1 0000A1       0001                            DC       s:16161,PREL

     1082    16161    2          DAT$ = KX$L1.IN_CCB_HEAD$;

  16161   1 0000A2  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0000A4  DCC6 0006                            LDB,B5   6,B6
          1 0000A6  DFC7 0008                            STB,B5   DAT$,AUTO

     1083    16162    2       END;

  16162   1 0000A8  8DC7 0008                            CMN      DAT$,AUTO
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:206  
          1 0000AA  09E5                                 BNE      s:16159,SPREL

     1084    16163        /*
     1085    16164                                             Release any CCB output buffers.
     1086    16165        */
     1087    16166    1       DAT$ = KX$L1.OUT_CCB_HEAD$;

  16166   1 0000AB  CCC6 000A                            LDB,B4   10,B6
          1 0000AD  CFC7 0008                            STB,B4   DAT$,AUTO

     1088    16167    2       DO WHILE ( DAT$ ~= ADDR(NIL));

  16167   1 0000AF  0F81 001A                            B        s:16171,PREL

     1089    16168    2          KX$L1.OUT_CCB_HEAD$ = KX$DATA.NEXT$;

  16168   1 0000B1  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 0000B3  DC86                                 LDB,B5   ,B6
          1 0000B4  CCC7 0006                            LDB,B4   CTX$,AUTO
          1 0000B6  DFC4 000A                            STB,B5   10,B4

     1090    16169    2          CALL KXS$RLSBFR ( DAT$ );

  16169   1 0000B8  BBC7 0008                            LAB,B3   DAT$,AUTO
          1 0000BA  BFC7 0010                            STB,B3   BFRSIZ+2,AUTO
          1 0000BC  BBC7 0010                            LAB,B3   BFRSIZ+2,AUTO
          1 0000BE  CBF0 0100                            LAB,B4   256,IMO
          1 0000C0  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          1 0000C3       0001                            DC       s:16170,PREL

     1091    16170    2          DAT$ = KX$L1.OUT_CCB_HEAD$;

  16170   1 0000C4  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0000C6  DCC6 000A                            LDB,B5   10,B6
          1 0000C8  DFC7 0008                            STB,B5   DAT$,AUTO

     1092    16171    2       END;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:207  

  16171   1 0000CA  8DC7 0008                            CMN      DAT$,AUTO
          1 0000CC  09E5                                 BNE      s:16168,SPREL

     1093    16172        /*
     1094    16173                                             Release any buffers on the
     1095    16174                                             output queue.
     1096    16175        */
     1097    16176    1       DAT$ = KX$L1.OUT_Q_HEAD$;

  16176   1 0000CD  DCC6 000E                            LDB,B5   14,B6
          1 0000CF  DFC7 0008                            STB,B5   DAT$,AUTO

     1098    16177    2       DO WHILE ( DAT$ ~= ADDR(NIL));

  16177   1 0000D1  0F81 001A                            B        s:16181,PREL

     1099    16178    2          KX$L1.OUT_Q_HEAD$ = KX$DATA.NEXT$;

  16178   1 0000D3  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 0000D5  DC86                                 LDB,B5   ,B6
          1 0000D6  CCC7 0006                            LDB,B4   CTX$,AUTO
          1 0000D8  DFC4 000E                            STB,B5   14,B4

     1100    16179    2          CALL KXS$RLSBFR ( DAT$ );

  16179   1 0000DA  BBC7 0008                            LAB,B3   DAT$,AUTO
          1 0000DC  BFC7 0010                            STB,B3   BFRSIZ+2,AUTO
          1 0000DE  BBC7 0010                            LAB,B3   BFRSIZ+2,AUTO
          1 0000E0  CBF0 0100                            LAB,B4   256,IMO
          1 0000E2  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          1 0000E5       0001                            DC       s:16180,PREL

     1101    16180    2          DAT$ = KX$L1.OUT_Q_HEAD$;

  16180   1 0000E6  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0000E8  DCC6 000E                            LDB,B5   14,B6
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:208  
          1 0000EA  DFC7 0008                            STB,B5   DAT$,AUTO

     1102    16181    2       END;

  16181   1 0000EC  8DC7 0008                            CMN      DAT$,AUTO
          1 0000EE  09E5                                 BNE      s:16178,SPREL

     1103    16182        /*
     1104    16183                                             Release any buffers on the
     1105    16184                                             supervisory queue.
     1106    16185        */
     1107    16186    1       DAT$ = KX$L1.SUPV_Q_HEAD$;

  16186   1 0000EF  CCC6 0012                            LDB,B4   18,B6
          1 0000F1  CFC7 0008                            STB,B4   DAT$,AUTO

     1108    16187    2       DO WHILE ( DAT$ ~= ADDR(NIL));

  16187   1 0000F3  0F81 001A                            B        s:16191,PREL

     1109    16188    2          KX$L1.SUPV_Q_HEAD$ = KX$DATA.NEXT$;

  16188   1 0000F5  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 0000F7  DC86                                 LDB,B5   ,B6
          1 0000F8  CCC7 0006                            LDB,B4   CTX$,AUTO
          1 0000FA  DFC4 0012                            STB,B5   18,B4

     1110    16189    2          CALL KXS$RLSBFR ( DAT$ );

  16189   1 0000FC  BBC7 0008                            LAB,B3   DAT$,AUTO
          1 0000FE  BFC7 0010                            STB,B3   BFRSIZ+2,AUTO
          1 000100  BBC7 0010                            LAB,B3   BFRSIZ+2,AUTO
          1 000102  CBF0 0100                            LAB,B4   256,IMO
          1 000104  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          1 000107       0001                            DC       s:16190,PREL

     1111    16190    2          DAT$ = KX$L1.SUPV_Q_HEAD$;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:209  

  16190   1 000108  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00010A  DCC6 0012                            LDB,B5   18,B6
          1 00010C  DFC7 0008                            STB,B5   DAT$,AUTO

     1112    16191    2       END;

  16191   1 00010E  8DC7 0008                            CMN      DAT$,AUTO
          1 000110  09E5                                 BNE      s:16188,SPREL

     1113    16192        /*
     1114    16193                                             Set the CCB counts in the channel
     1115    16194                                             table to 0.
     1116    16195        */
     1117    16196    1       KX$L1.CHN$ -> KH$CHN.INPCCBCNT = 0;

  16196   1 000111  DCC6 0002                            LDB,B5   2,B6
          1 000113  8845 0007                            LBF,'0F00'X       7,B5
          1 000115       0F00

     1118    16197    1       KX$L1.CHN$ -> KH$CHN.OTPCCBCNT = 0;

  16197   1 000116  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000118  DCC6 0002                            LDB,B5   2,B6
          1 00011A  8845 0007                            LBF,'000F'X       7,B5
          1 00011C       000F

     1119    16198        /*
     1120    16199           Stop all timers just to be sure.
     1121    16200        */
     1122    16201            %STOP_TIMER ( FPTN = KX$L2.TMRBLK );

  16206   1 00011D  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00011F  89C6 0047                            CMZ      71,B6
          1 000121  0881 0027                            BAGE     s:16215,PREL

  16206   1 000123  8846 0047                            LBF,'8000'X       71,B6
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:210  
  16206   1 000125       8000

  16206   1 000126  8DC6 003E                            CMN      62,B6
          1 000128  0981 0008                            BNE      s:16206+20,PREL

  16206   1 00012A  DCC6 0040                            LDB,B5   64,B6
          1 00012C  DF80 0000 0002  xsym                 STB,B5   KX_TMRBLK+2
          1 00012F  0F81 0007                            B        s:16207,PREL

  16206   1 000131  DCC6 003E                            LDB,B5   62,B6
          1 000133  CCC6 0040                            LDB,B4   64,B6
          1 000135  CFC5 0002                            STB,B4   2,B5

  16207   1 000137  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000139  8DC6 0040                            CMN      64,B6
          1 00013B  0981 0008                            BNE      s:16207+13,PREL

  16207   1 00013D  DCC6 003E                            LDB,B5   62,B6
          1 00013F  DF80 0000 0000  xsym                 STB,B5   KX_TMRBLK
          1 000142  0F81 0006                            B        s:16215,PREL

  16207   1 000144  DCC6 0040                            LDB,B5   64,B6
          1 000146  CCC6 003E                            LDB,B4   62,B6
          1 000148  CF85                                 STB,B4   ,B5

     1123    16210            %STOP_TIMER ( FPTN = KX$L2.T20TMR );

  16215   1 000149  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00014B  89C6 0051                            CMZ      81,B6
          1 00014D  0881 0027                            BAGE     s:16222,PREL

  16215   1 00014F  8846 0051                            LBF,'8000'X       81,B6
  16215   1 000151       8000

  16215   1 000152  8DC6 0048                            CMN      72,B6
          1 000154  0981 0008                            BNE      s:16215+20,PREL

PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:211  
  16215   1 000156  DCC6 004A                            LDB,B5   74,B6
          1 000158  DF80 0000 0002  xsym                 STB,B5   KX_TMRBLK+2
          1 00015B  0F81 0007                            B        s:16216,PREL

  16215   1 00015D  DCC6 0048                            LDB,B5   72,B6
          1 00015F  CCC6 004A                            LDB,B4   74,B6
          1 000161  CFC5 0002                            STB,B4   2,B5

  16216   1 000163  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000165  8DC6 004A                            CMN      74,B6
          1 000167  0981 0008                            BNE      s:16216+13,PREL

  16216   1 000169  DCC6 0048                            LDB,B5   72,B6
          1 00016B  DF80 0000 0000  xsym                 STB,B5   KX_TMRBLK
          1 00016E  0F81 0006                            B        s:16222,PREL

  16216   1 000170  DCC6 004A                            LDB,B5   74,B6
          1 000172  CCC6 0048                            LDB,B4   72,B6
          1 000174  CF85                                 STB,B4   ,B5

     1124    16219        /*
     1125    16220                                             Report DSC to handler common.
     1126    16221        */
     1127    16222    1       CALL KHA$DVCADM ( %KHA_FNC_DISCONNECT_EVT,

  16222   1 000175  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000177  DCC6 0002                            LDB,B5   2,B6
          1 000179  CBF0 000C                            LAB,B4   12,IMO
          1 00017B  BBF0 0001                            LAB,B3   1,IMO
          1 00017D  BFC7 001A                            STB,B3   BFRSIZ+12,AUTO
          1 00017F  AB80 0000 0002  02                   LAB,B2   +2
          1 000182  AFC7 0018                            STB,B2   BFRSIZ+10,AUTO
          1 000184  9BC5 0012                            LAB,B1   18,B5
          1 000186  9FC7 0016                            STB,B1   BFRSIZ+8,AUTO
          1 000188  EBC5 0012                            LAB,B6   18,B5
          1 00018A  EFC7 0014                            STB,B6   BFRSIZ+6,AUTO
          1 00018C  DBC7 000E                            LAB,B5   BFRSIZ,AUTO
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:212  
          1 00018E  DFC7 0012                            STB,B5   BFRSIZ+4,AUTO
          1 000190  CFC7 0010                            STB,B4   BFRSIZ+2,AUTO
          1 000192  BBC7 0010                            LAB,B3   BFRSIZ+2,AUTO
          1 000194  CBF0 0600                            LAB,B4   1536,IMO
          1 000196  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          1 000199       0001                            DC       s:16230,PREL

     1128    16223    1          BFRSIZ,
     1129    16224    1          KX$L1.CHN$ -> KH$CHN.TERMID,
     1130    16225    1          KX$L1.CHN$ -> KH$CHN.TERMID,
     1131    16226    1          VECTOR(NIL), 1);
     1132    16227        /*
     1133    16228           Update available MEM and IOMEM according to formula
     1134    16229        */
     1135    16230    1       KX_AVL_MEM = KX_AVL_MEM + 400;

  16230   1 00019A  8C80 0000 0000  xsym                 LDI      KX_AVL_MEM
          1 00019D  8470 0000 0190                       AID      400,IMO
          1 0001A0  8D00 0000 0000  xsym                 SDI      KX_AVL_MEM

     1136    16231    1       KX_AVL_IOMEM = KX_AVL_IOMEM +

  16231   1 0001A3  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0001A5  D846 002F                            LDR,R5   47,B6
          1 0001A7  5048                                 SOR,R5   8
          1 0001A8  D570 001F                            AND,R5   31,IMO
          1 0001AA  C2C6 0016                            LLH,R4   22,B6
          1 0001AC  DA54                                 ADD,R5   R4
          1 0001AD  B2C6 0004                            LLH,R3   4,B6
          1 0001AF  F855                                 LDR,R7   R5
          1 0001B0  FB30 0000 001E  xsym                 MUL,R7   KX_BUF+30,R3
          1 0001B3  6C00                                 LDV,R6   0
          1 0001B4  8400 0000 0000  xsym                 AID      KX_AVL_IOMEM
          1 0001B7  8D00 0000 0000  xsym                 SDI      KX_AVL_IOMEM

     1137    16232    1          (KX$L2.MAXCCB + KX$L2.K) * KX_BUF.SIZ(KX$L2.BUF_SIZE);
     1138    16233        /*
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:213  
     1139    16234                                             Release the context block.
     1140    16235        */
     1141    16236    2       IF NOT KX$L1.CHN$ -> KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN DO;

  16236   1 0001BA  DCC6 0002                            LDB,B5   2,B6
          1 0001BC  D845 0005                            LDR,R5   5,B5
          1 0001BE  D570 0200                            AND,R5   512,IMO
          1 0001C0  5981 0022                            BNEZ,R5  s:16246,PREL

     1142    16237    2                BFRSIZ = SIZEW(KX$L2);

  16237   1 0001C2  D870 0138                            LDR,R5   312,IMO
          1 0001C4  DF47 000E                            STR,R5   BFRSIZ,AUTO

     1143    16238    2                CALL KVB$RLSSYS ( BFRSIZ, CTX$ )

  16238   1 0001C6  DBC7 0006                            LAB,B5   CTX$,AUTO
          1 0001C8  DFC7 0012                            STB,B5   BFRSIZ+4,AUTO
          1 0001CA  CBC7 000E                            LAB,B4   BFRSIZ,AUTO
          1 0001CC  CFC7 0010                            STB,B4   BFRSIZ+2,AUTO
          1 0001CE  BBC7 0010                            LAB,B3   BFRSIZ+2,AUTO
          1 0001D0  CBF0 0200                            LAB,B4   512,IMO
          1 0001D2  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 0001D5       0003                            DC       s:16241,PREL
          1 0001D6  0F81 000A                            B        s:16244,PREL

     1144    16239    2                   WHENALTRETURN
     1145    16240    3                      DO;

     1146    16241    3                         CALL KHD$SCREECH ( Y_NO_RLS );

  16241   1 0001D8  BB80 0000 0005  02                   LAB,B3   +5
          1 0001DB  CBF0 0100                            LAB,B4   256,IMO
          1 0001DD  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 0001E0       0001                            DC       s:16244,PREL

     1147    16242    3                      END;
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:214  

     1148    16243
     1149    16244    2             END;

  16244   1 0001E1  0F81 0011                            B        s:16247,PREL

     1150    16245    1          ELSE
     1151    16246    1             CALL KVB$RLS (KX$L2S.L2SIZ, KX$L2S.L2$);

  16246   1 0001E3  CBC6 006F                            LAB,B4   111,B6
          1 0001E5  CFC7 0012                            STB,B4   BFRSIZ+4,AUTO
          1 0001E7  DBC6 0071                            LAB,B5   113,B6
          1 0001E9  DFC7 0010                            STB,B5   BFRSIZ+2,AUTO
          1 0001EB  BBC7 0010                            LAB,B3   BFRSIZ+2,AUTO
          1 0001ED  CBF0 0200                            LAB,B4   512,IMO
          1 0001EF  E380 0000 0000  xent                 LNJ,B6   KVB$RLS
          1 0001F2       0001                            DC       s:16247,PREL

     1152    16247    1       RETURN;

  16247   1 0001F3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1153    16248
     1154    16249    1   END KXS$RLSCNTX;
     1155    16250        %EOD;

PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:215  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$RLSCNTX.
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:216  

 **** Variables and constants ****

  ****  Section 000 RoData KXS$RLSCNTX

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w STRC(48)    r     1 Y_BADL2LIST                0-0-0/w STRC(48)    r     1 Y_NO_RLS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @L2$                       E-0-0/w UBIN(16)    r     1 BFRSIZ
     6-0-0/w PTR         r     1 CTX$                       8-0-0/w PTR         r     1 DAT$
     C-0-0/w PTR         r     1 DVC$                      *0-0-0/w PTR         r     1 L2$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN(32)    r     1 KX_AVL_IOMEM               0-0-0/w SBIN(32)    r     1 KX_AVL_MEM
     0-0-0/w STRC(672)   r     1 KX_BUF                     0-0-0/w STRC(64)    r     1 KX_CNTX
     0-0-0/b EPTR        r     1 KX_PM$(0:2)                0-0-0/w STRC(64)    r     1 KX_TMRBLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(160)   r     1 KX$BTMRBLK
     0-0-0/w STRC(128)   r     1 KX$DATA                    0-0-0/w STRC(352)   r     1 KX$L1
     0-0-0/w STRC(4992)  r     1 KX$L2                      0-0-0/w STRC(2032)  r     1 KX$L2S
     0-0-0/w STRC(384)   r     1 KX$LINKDEV                 0-0-0/w STRC(352)   r     1 KX$TL1

PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:217  

   Procedure KXS$RLSCNTX requires 502 words for executable code.
   Procedure KXS$RLSCNTX requires 28 words of local(AUTO) storage.
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:218  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:219  
          MINI XREF LISTING

BFRSIZ
     14128**DCL     16222<>CALL    16237<<ASSIGN  16238<>CALL
CTX$
     14124**DCL     14276--IMP-PTR 14361--IMP-PTR 14728--IMP-PTR 16104<<ASSIGN  16105>>IF      16108>>ASSIGN
     16109>>IF      16115>>DOWHILE 16116>>IF      16117<<ASSIGN  16117>>ASSIGN  16119>>IF      16127>>ASSIGN
     16127>>ASSIGN  16128>>IF      16130>>ASSIGN  16131<<ASSIGN  16137>>ASSIGN  16143>>DOWHILE 16144>>ASSIGN
     16145>>ASSIGN  16157>>ASSIGN  16159>>ASSIGN  16161>>ASSIGN  16166>>ASSIGN  16168>>ASSIGN  16170>>ASSIGN
     16176>>ASSIGN  16178>>ASSIGN  16180>>ASSIGN  16186>>ASSIGN  16188>>ASSIGN  16190>>ASSIGN  16196>>ASSIGN
     16197>>ASSIGN  16206>>IF      16206>>ASSIGN  16206>>IF      16206>>ASSIGN  16206>>ASSIGN  16206>>ASSIGN
     16207>>IF      16207>>ASSIGN  16207>>ASSIGN  16207>>ASSIGN  16215>>IF      16215>>ASSIGN  16215>>IF
     16215>>ASSIGN  16215>>ASSIGN  16215>>ASSIGN  16216>>IF      16216>>ASSIGN  16216>>ASSIGN  16216>>ASSIGN
     16222>>CALL    16222>>CALL    16231>>ASSIGN  16231>>ASSIGN  16231>>ASSIGN  16236>>IF      16238<>CALL
     16246>>CALL    16246>>CALL
DAT$
     14125**DCL     15147--IMP-PTR 16157<<ASSIGN  16158>>DOWHILE 16159>>ASSIGN  16160<>CALL    16161<<ASSIGN
     16166<<ASSIGN  16167>>DOWHILE 16168>>ASSIGN  16169<>CALL    16170<<ASSIGN  16176<<ASSIGN  16177>>DOWHILE
     16178>>ASSIGN  16179<>CALL    16180<<ASSIGN  16186<<ASSIGN  16187>>DOWHILE 16188>>ASSIGN  16189<>CALL
     16190<<ASSIGN
DVC$
     14127**DCL     15125--IMP-PTR 16144<<ASSIGN  16145>>ASSIGN  16146>>ASSIGN  16147>>ASSIGN  16148>>IF
     16151<>CALL
KH$CHN.ATTR
     14187**DCL     16236>>IF
KH$CHN.CTX$
     14224**DCL     16137<<ASSIGN  16147<<ASSIGN
KH$CHN.INPCCBCNT
     14193**DCL     16196<<ASSIGN
KH$CHN.OTPCCBCNT
     14198**DCL     16197<<ASSIGN
KH$CHN.TERMID
     14248**DCL     16222<>CALL    16222<>CALL
KH$CHN.TERMID.TERM
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:220  
     14250**DCL     14259--REDEF
KHA$DVCADM
     14108**DCL-ENT 16222--CALL
KHD$SCREECH
     14113**DCL-ENT 16125--CALL    16241--CALL
KVB$RLS
     14109**DCL-ENT 16246--CALL
KVB$RLSSYS
     14110**DCL-ENT 16151--CALL    16238--CALL
KX$BTMRBLK.BLNK$
     15201**DCL     16206<<ASSIGN  16215<<ASSIGN
KX$BTMRBLK.FLNK$
     15201**DCL     16207<<ASSIGN  16216<<ASSIGN
KX$DATA.NEXT$
     15149**DCL     16159>>ASSIGN  16168>>ASSIGN  16178>>ASSIGN  16188>>ASSIGN
KX$DATA.RLS_STAT
     15149**DCL     15150--REDEF
KX$L1.CHN$
     14295**DCL     16137>>ASSIGN  16196>>ASSIGN  16197>>ASSIGN  16222>>CALL    16222>>CALL    16236>>IF
KX$L1.IN_CCB_HEAD$
     14297**DCL     16157>>ASSIGN  16159<<ASSIGN  16161>>ASSIGN
KX$L1.NEXT$
     14295**DCL     16108>>ASSIGN  16109>>IF      16116>>IF      16117>>ASSIGN  16127<<ASSIGN  16127>>ASSIGN
     16128>>IF
KX$L1.OUT_CCB_HEAD$
     14297**DCL     16166>>ASSIGN  16168<<ASSIGN  16170>>ASSIGN
KX$L1.OUT_Q_HEAD$
     14298**DCL     16176>>ASSIGN  16178<<ASSIGN  16180>>ASSIGN
KX$L1.SUPV_Q_HEAD$
     14299**DCL     16186>>ASSIGN  16188<<ASSIGN  16190>>ASSIGN
KX$L2
     14361**DCL     16237--ASSIGN
KX$L2.BUF_SIZE
     14380**DCL     16231>>ASSIGN
KX$L2.DFLVCPRF.TRADEL
     14501**DCL     14511--REDEF
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:221  
KX$L2.DSTSNPA.ADR_STRING
     14692**DCL     14692--REDEF
KX$L2.DVC_HEAD$
     14698**DCL     16143>>DOWHILE 16144>>ASSIGN  16145<<ASSIGN
KX$L2.FRMR_NSNR
     14478**DCL     14479--REDEF
KX$L2.K
     14387**DCL     16231>>ASSIGN
KX$L2.MAXCCB
     14409**DCL     16231>>ASSIGN
KX$L2.NTWADR.ADR_STRING
     14412**DCL     14412--REDEF
KX$L2.STATES
     14390**DCL     14390--REDEF
KX$L2.T20TMR.BLNK$
     14473**DCL     16215>>ASSIGN  16215>>ASSIGN  16216>>IF      16216>>ASSIGN
KX$L2.T20TMR.FLNK$
     14473**DCL     16215>>IF      16215>>ASSIGN  16216>>ASSIGN  16216>>ASSIGN
KX$L2.T20TMR.ON
     14475**DCL     16215>>IF      16215<<ASSIGN
KX$L2.TMRBLK.BLNK$
     14441**DCL     16206>>ASSIGN  16206>>ASSIGN  16207>>IF      16207>>ASSIGN
KX$L2.TMRBLK.FLNK$
     14441**DCL     16206>>IF      16206>>ASSIGN  16207>>ASSIGN  16207>>ASSIGN
KX$L2.TMRBLK.ON
     14443**DCL     16206>>IF      16206<<ASSIGN
KX$L2S.DFLVCPRF.TRADEL
     14898**DCL     14908--REDEF
KX$L2S.DSTSNPA.ADR_STRING
     15089**DCL     15089--REDEF
KX$L2S.FRMR_NSNR
     14875**DCL     14876--REDEF
KX$L2S.L2$
     15100**DCL     16246<>CALL
KX$L2S.L2SIZ
     15100**DCL     16246<>CALL
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:222  
KX$L2S.NTWADR.ADR_STRING
     14809**DCL     14809--REDEF
KX$L2S.P_CCB.LNK$
     14789**DCL     14789--REDEF
KX$L2S.STATES
     14757**DCL     14757--REDEF
KX$LINKDEV
     15125**DCL     16151--CALL
KX$LINKDEV.CHN$
     15125**DCL     16147>>ASSIGN
KX$LINKDEV.FLNK$
     15126**DCL     16145>>ASSIGN
KX$LINKDEV.L2$
     15127**DCL     16146<<ASSIGN
KX$LINKDEV.VDI$
     15125**DCL     16148>>IF
KX$TDATA.RLS_STAT
     15169**DCL     15170--REDEF
KX$TL1.NEXT$
     14335**DCL     16127>>ASSIGN
KXS$RLSBFR
     14111**DCL-ENT 16160--CALL    16169--CALL    16179--CALL    16189--CALL
KX_AVL_IOMEM
     15898**DCL     16231<<ASSIGN  16231>>ASSIGN
KX_AVL_MEM
     15898**DCL     16230<<ASSIGN  16230>>ASSIGN
KX_BUF.SIZ
     15229**DCL     16231>>ASSIGN
KX_CNTX.HD$
     15226**DCL     16104>>ASSIGN  16108<<ASSIGN  16111>>ASSIGN
KX_CNTX.TL$
     15226**DCL     16111<<ASSIGN  16130<<ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     15500**DCL     15506--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     15541**DCL     15548--REDEF
PL6.E3A0      #006=KXS$RLSCNTX File=KXS$SUBS.:E05TSI                             WED 07/30/97 02:28 Page:223  
KX_STATS_X25.REQSTATS.DSPMSK
     15825**DCL     15831--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     15866**DCL     15873--REDEF
KX_TMRBLK.QHD$
     15231**DCL     16207<<ASSIGN  16216<<ASSIGN
KX_TMRBLK.QTL$
     15231**DCL     16206<<ASSIGN  16215<<ASSIGN
L2$
     14122**DCL        16--PROC    16105>>IF      16116>>IF      16131>>ASSIGN
Y_BADL2LIST
     16059**DCL     16125<>CALL
Y_NO_RLS
     15937**DCL     16241<>CALL

PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:224  
     1156        1        /*T***********************************************************/
     1157        2        /*T*                                                         */
     1158        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1159        4        /*T*                                                         */
     1160        5        /*T***********************************************************/
     1161        6        /*F* NAME: KXS$RLSL3_MAYBE           */
     1162        7        /*F* PURPOSE: Conditionally release a level 3 context block  */
     1163        8
     1164        9        /*D* NAME: KXS$RLSL3_MAYBE           */
     1165       10        /*D* PURPOSE: Release a level 3 context block if there
     1166       11                      are no buffers on the queue still to be
     1167       12                      transmitted            */
     1168       13        /*D* CALL: CALL KXS$RLSL3_MAYBE ( L3$ );  */
     1169       14        /*D* INPUT: L3$ - pointer to the context to be released  */
     1170       15        /*D* OUTPUT: none                    */
     1171       16
     1172       17        KXS$RLSL3_MAYBE: PROC ( L3$ );
     1173       18
     1174       19        /*****************************************************************
     1175       20        *                                                                *
     1176       21        *                           Includes                             *
     1177       22        *                                                                *
     1178       23        *****************************************************************/
     1179       24
     1180       25        %INCLUDE K_ID_E;
     1181       75        %K#ENTID_E;
     1182       94        %K#LYRID_E;
     1183      101        %INCLUDE KL_MACRO_C;
     1184     3453        %INCLUDE KL_AFCN_C;
     1185     3554        %INCLUDE LCP_6;
     1186     7833        %INCLUDE CP_6_SUBS;
     1187     8373        %INCLUDE KH$CHN;
     1188     8495        %INCLUDE KL_SUPER_C;
     1189    11397        %INCLUDE KX_EQUS_E;
     1190    11836        %INCLUDE KX_PERR_C;
     1191    11965        %INCLUDE KX_SCODE_C;
     1192    12031        %INCLUDE KX_DATA_C;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:225  
     1193    12099        %INCLUDE KX_MACROS_M;
     1194    12870        %INCLUDE KV_GLBCNS_E;
     1195    13211        %INCLUDE K_ADDRESS_M;
     1196    13714        %INCLUDE KNH_MACRO_C;
     1197    13997        %KV#CQ_HNDID_E;
     1198    14002        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:226  
     1199    14003        /*****************************************************************
     1200    14004        *                                                                *
     1201    14005        *                           External References                  *
     1202    14006        *                                                                *
     1203    14007        *****************************************************************/
     1204    14008
     1205    14009    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
     1206    14010    1   DCL KXS$RLSBFR ENTRY (1);
     1207    14011    1   DCL KXX$X29 ENTRY (1);
     1208    14012    1   DCL KXC$CNCMNG ENTRY (1) ALTRET;
     1209    14013    1   DCL KHD$SCREECH ENTRY (1);
     1210    14014    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
     1211    14015
     1212    14016
     1213    14017        /*****************************************************************
     1214    14018        *                                                                *
     1215    14019        *                           Auto                                 *
     1216    14020        *                                                                *
     1217    14021        *****************************************************************/
     1218    14022
     1219    14023    1   DCL L3$ PTR;
     1220    14024    1   DCL DAT$ PTR;
     1221    14025    1   DCL PRVDAT$ PTR;
     1222    14026    1   DCL PTR$ PTR;
     1223    14027    1   DCL PRV_PTR$ PTR;
     1224    14028    1   DCL BFRSIZ UBIN;
     1225    14029    1   DCL L2$ PTR;
     1226    14030        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = AUTO );
     1227    14074
     1228    14075        /*****************************************************************
     1229    14076        *                                                                *
     1230    14077        *                           Based                                *
     1231    14078        *                                                                *
     1232    14079        *****************************************************************/
     1233    14080
     1234    14081        %KH$CHN ( STCLASS = BASED );
     1235    14205        %KX$L2 ( STCLASS = "BASED ( L2$ )" );
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:227  
     1236    14572        %KX$L3 ( STCLASS = "BASED ( L3$ )" );
     1237    14975        %KX$L3 ( FPTN = KX$TL3, STCLASS = BASED );
     1238    15378        %KX$DATA ( STCLASS = "BASED ( DAT$ )" );
     1239    15398        %KX$TMRBLK ( FPTN = KX$BTMRBLK, STCLASS = BASED );
     1240    15430        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:228  
     1241    15431        /*****************************************************************
     1242    15432        *                                                                *
     1243    15433        *                           Static                               *
     1244    15434        *                                                                *
     1245    15435        *****************************************************************/
     1246    15436
     1247    15437        %KX_DATA;
     1248    16127        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:229  
     1249    16128        /*****************************************************************
     1250    16129        *                                                                *
     1251    16130        *                           Constant                             *
     1252    16131        *                                                                *
     1253    16132        *****************************************************************/
     1254    16133
     1255    16134        %VLP_SCODE (FPTN=Y_BADL3LIST,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_BADL3LIST#);
     1256    16195        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:230  
     1257    16196        /*****************************************************************
     1258    16197        *                                                                *
     1259    16198        *                           Procedure                            *
     1260    16199        *                                                                *
     1261    16200        *****************************************************************/
     1262    16201
     1263    16202        /*
     1264    16203                                             If the transmit queue is not
     1265    16204                                             empty, mark this context as
     1266    16205                                             release pending and return.
     1267    16206        */
     1268    16207    1       IF KX$L3.CTL_Q_HEAD$ ~= ADDR(NIL) OR KX$L3.RTR$ ~= ADDR(NIL)
     1269    16208    1          THEN
     1270    16209    2             DO;
     1271    16210    2                KX$L3.MAYBE = '1'B;
     1272    16211    2                KX$L3.LCN# = 0;
     1273    16212    2                RETURN;
     1274    16213    2             END;
     1275    16214
     1276    16215        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:231  
     1277    16216        /*F* NAME: KXS$RLSL3                 */
     1278    16217        /*F* PURPOSE: Release a level 3 context block  */
     1279    16218
     1280    16219        /*D* NAME: KXS$RLSL3                 */
     1281    16220        /*D* PURPOSE: Release a level 3 context block  */
     1282    16221        /*D* CALL: CALL KXS$RLSL3 ( L3$ );   */
     1283    16222        /*D* INPUT: L3$ - pointer to the context to be released  */
     1284    16223        /*D* OUTPUT: none                    */
     1285    16224
     1286    16225    1   KXS$RLSL3: ENTRY ( L3$ );
     1287    16226
     1288    16227        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:232  
     1289    16228
     1290    16229        /*
     1291    16230                                             Release the channel table.
     1292    16231        */
     1293    16232    1       IF KX$L3.CHN$ ~= ADDR(NIL)
     1294    16233    1          THEN
     1295    16234    1             KX$L3.CHN$ -> KH$CHN.CTX$ = ADDR (NIL);
     1296    16235    1       IF KX$L3.RLSCHN
     1297    16236    1          THEN
     1298    16237    2             DO;
     1299    16238    2                CALL KVB$RLSSYS ( SIZEW ( KH$CHN ), KX$L3.CHN$ );
     1300    16239    2             END;
     1301    16240        /*
     1302    16241                                             Delink this context from the
     1303    16242                                             others.
     1304    16243        */
     1305    16244    1       L2$ = KX$L3.L2$;
     1306    16245    1       PTR$ = KX$L2.L3_HEAD$;
     1307    16246        /*
     1308    16247           scan from HEAD$ until we find L3$, the cntx we want to delink.
     1309    16248        */
     1310    16249    2       DO WHILE (PTR$ ~= L3$ AND PTR$ ~= ADDR(NIL));
     1311    16250    2          PRV_PTR$ = PTR$;
     1312    16251    2          PTR$ = PTR$ -> KX$TL3.NEXT$;
     1313    16252    2       END;
     1314    16253    1       IF PTR$ = ADDR(NIL)
     1315    16254    1          THEN
     1316    16255    2             DO;
     1317    16256        /*S* SCREECH_CODE: KXS-S$KX_BADL3LIST#
     1318    16257             MESSAGE: The chain of L3 contexts was corrupted.
     1319    16258        */
     1320    16259    2                CALL KHD$SCREECH ( Y_BADL3LIST );
     1321    16260    2             END;
     1322    16261    1       IF PTR$ = KX$L2.L3_HEAD$
     1323    16262        /*
     1324    16263           cntx to delink is the head of the list.
     1325    16264        */
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:233  
     1326    16265    1          THEN
     1327    16266    2             DO;
     1328    16267    2                KX$L2.L3_HEAD$ = KX$L3.NEXT$;
     1329    16268    2                IF KX$L2.L3_HEAD$ = ADDR(NIL)
     1330    16269    2                   THEN
     1331    16270    2                      KX$L2.L3_TAIL$ = ADDR(NIL);
     1332    16271    2             END;
     1333    16272    1          ELSE IF PTR$ = KX$L2.L3_TAIL$
     1334    16273        /*
     1335    16274           cntx to delink is the tail of the list.
     1336    16275        */
     1337    16276    1                THEN
     1338    16277    2                   DO;
     1339    16278    2                      PRV_PTR$ -> KX$TL3.NEXT$ = ADDR(NIL);
     1340    16279    2                      KX$L2.L3_TAIL$ = PRV_PTR$;
     1341    16280    2                   END;
     1342    16281    1                ELSE
     1343    16282        /*
     1344    16283           cntx is found somewhere in the middle of the linked list.
     1345    16284        */
     1346    16285    2                   DO;
     1347    16286    2                      PRV_PTR$ -> KX$TL3.NEXT$ = KX$L3.NEXT$;
     1348    16287    2                   END;
     1349    16288    1       DAT$ = KX$L3.CTL_Q_HEAD$;
     1350    16289    2       DO WHILE ( DAT$ ~= ADDR(NIL));
     1351    16290    2          KX$L3.CTL_Q_HEAD$ = KX$DATA.NEXT$;
     1352    16291    2          CALL KXS$RLSBFR ( DAT$ );
     1353    16292    2          DAT$ = KX$L3.CTL_Q_HEAD$;
     1354    16293    2       END;
     1355    16294        /*
     1356    16295           Stop all timers just to be sure.
     1357    16296        */
     1358    16297            %STOP_TIMER ( FPTN = KX$L3.TMRBLK );
     1359    16306            %STOP_TIMER ( FPTN = KX$L3.DATTMRBLK );
     1360    16315        /*
     1361    16316            inform CM that L3 context is being released.
     1362    16317        */
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:234  
     1363    16318    1       IF KX$L3.CM$ ~= ADDR(NIL)
     1364    16319    1          THEN
     1365    16320    2             DO;
     1366    16321    2                CALL_FPT = '0'B;
     1367    16322    2                CALL_FPT.EVN = %KX_CM_EV_RLSL3#;
     1368    16323    2                CALL_FPT.CAL$ = L3$;
     1369    16324    2                CALL_FPT.RCV$ = KX$L3.CM$;
     1370    16325    2                CALL KXC$CNCMNG ( CALL_FPT );
     1371    16326    2             END;
     1372    16327
     1373    16328        /*
     1374    16329                                             Release the context block.
     1375    16330        */
     1376    16331    1       BFRSIZ = SIZEW(KX$L3);
     1377    16332    1       CALL KVB$RLSSYS ( BFRSIZ, L3$ );
     1378    16333        /*
     1379    16334           Update available MEM and IOMEM
     1380    16335        */
     1381    16336    1       KX_AVL_IOMEM = KX_AVL_IOMEM + KX_BUF.SIZ(KX$L2.BUF_SIZE);
     1382    16337    1       KX_AVL_MEM = KX_AVL_MEM + 1200;
     1383    16338
     1384    16339    1       RETURN;
     1385    16340
     1386    16341    1   END KXS$RLSL3_MAYBE;
     1387    16342        %EOD;

PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:235  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$RLSL3_MAYBE.

   Procedure KXS$RLSL3_MAYBE requires 366 words for executable code.
   Procedure KXS$RLSL3_MAYBE requires 38 words of local(AUTO) storage.

PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:236  

 Object Unit name= KXS$RLSL3_MAYBE                            File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:29:41.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      3      3  KXS$RLSL3_MAYBE
    1   Proc  even  none   366    16E  KXS$RLSL3_MAYBE
    2  RoData even  none     2      2  KXS$RLSL3_MAYBE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KXS$RLSL3_MAYBE
     1     1C                  yes      Std        1  KXS$RLSL3

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$RLSSYS
         yes           Std       1 KXS$RLSBFR
 yes     yes           Std       1 KXC$CNCMNG
         yes           Std       1 KHD$SCREECH
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:237  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_BUF                                KX_TMRBLK                             KX_AVL_MEM
     KX_AVL_IOMEM                          KX_PM$                           r    G$ROS$
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:238  


     1156        1        /*T***********************************************************/
     1157        2        /*T*                                                         */
     1158        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1159        4        /*T*                                                         */
     1160        5        /*T***********************************************************/
     1161        6        /*F* NAME: KXS$RLSL3_MAYBE           */
     1162        7        /*F* PURPOSE: Conditionally release a level 3 context block  */
     1163        8
     1164        9        /*D* NAME: KXS$RLSL3_MAYBE           */
     1165       10        /*D* PURPOSE: Release a level 3 context block if there
     1166       11                      are no buffers on the queue still to be
     1167       12                      transmitted            */
     1168       13        /*D* CALL: CALL KXS$RLSL3_MAYBE ( L3$ );  */
     1169       14        /*D* INPUT: L3$ - pointer to the context to be released  */
     1170       15        /*D* OUTPUT: none                    */
     1171       16
     1172       17        KXS$RLSL3_MAYBE: PROC ( L3$ );

     17   1 000000  D380 0000 0000  xent KXS$RLSL3_MAYBE LNJ,B5   X6A_AUTO_1
          1 000003       0026 0001                       DC       38,1

     1173       18
     1174       19        /*****************************************************************
     1175       20        *                                                                *
     1176       21        *                           Includes                             *
     1177       22        *                                                                *
     1178       23        *****************************************************************/
     1179       24
     1180       25        %INCLUDE K_ID_E;
     1181       75        %K#ENTID_E;
     1182       94        %K#LYRID_E;
     1183      101        %INCLUDE KL_MACRO_C;
     1184     3453        %INCLUDE KL_AFCN_C;
     1185     3554        %INCLUDE LCP_6;
     1186     7833        %INCLUDE CP_6_SUBS;
     1187     8373        %INCLUDE KH$CHN;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:239  
     1188     8495        %INCLUDE KL_SUPER_C;
     1189    11397        %INCLUDE KX_EQUS_E;
     1190    11836        %INCLUDE KX_PERR_C;
     1191    11965        %INCLUDE KX_SCODE_C;
     1192    12031        %INCLUDE KX_DATA_C;
     1193    12099        %INCLUDE KX_MACROS_M;
     1194    12870        %INCLUDE KV_GLBCNS_E;
     1195    13211        %INCLUDE K_ADDRESS_M;
     1196    13714        %INCLUDE KNH_MACRO_C;
     1197    13997        %KV#CQ_HNDID_E;
     1198    14002        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:240  
     1199    14003        /*****************************************************************
     1200    14004        *                                                                *
     1201    14005        *                           External References                  *
     1202    14006        *                                                                *
     1203    14007        *****************************************************************/
     1204    14008
     1205    14009    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
     1206    14010    1   DCL KXS$RLSBFR ENTRY (1);
     1207    14011    1   DCL KXX$X29 ENTRY (1);
     1208    14012    1   DCL KXC$CNCMNG ENTRY (1) ALTRET;
     1209    14013    1   DCL KHD$SCREECH ENTRY (1);
     1210    14014    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
     1211    14015
     1212    14016
     1213    14017        /*****************************************************************
     1214    14018        *                                                                *
     1215    14019        *                           Auto                                 *
     1216    14020        *                                                                *
     1217    14021        *****************************************************************/
     1218    14022
     1219    14023    1   DCL L3$ PTR;
     1220    14024    1   DCL DAT$ PTR;
     1221    14025    1   DCL PRVDAT$ PTR;
     1222    14026    1   DCL PTR$ PTR;
     1223    14027    1   DCL PRV_PTR$ PTR;
     1224    14028    1   DCL BFRSIZ UBIN;
     1225    14029    1   DCL L2$ PTR;
     1226    14030        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = AUTO );
     1227    14074
     1228    14075        /*****************************************************************
     1229    14076        *                                                                *
     1230    14077        *                           Based                                *
     1231    14078        *                                                                *
     1232    14079        *****************************************************************/
     1233    14080
     1234    14081        %KH$CHN ( STCLASS = BASED );
     1235    14205        %KX$L2 ( STCLASS = "BASED ( L2$ )" );
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:241  
     1236    14572        %KX$L3 ( STCLASS = "BASED ( L3$ )" );
     1237    14975        %KX$L3 ( FPTN = KX$TL3, STCLASS = BASED );
     1238    15378        %KX$DATA ( STCLASS = "BASED ( DAT$ )" );
     1239    15398        %KX$TMRBLK ( FPTN = KX$BTMRBLK, STCLASS = BASED );
     1240    15430        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:242  
     1241    15431        /*****************************************************************
     1242    15432        *                                                                *
     1243    15433        *                           Static                               *
     1244    15434        *                                                                *
     1245    15435        *****************************************************************/
     1246    15436
     1247    15437        %KX_DATA;
     1248    16127        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:243  
     1249    16128        /*****************************************************************
     1250    16129        *                                                                *
     1251    16130        *                           Constant                             *
     1252    16131        *                                                                *
     1253    16132        *****************************************************************/
     1254    16133
     1255    16134        %VLP_SCODE (FPTN=Y_BADL3LIST,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_BADL3LIST#);
     1256    16195        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:244  
     1257    16196        /*****************************************************************
     1258    16197        *                                                                *
     1259    16198        *                           Procedure                            *
     1260    16199        *                                                                *
     1261    16200        *****************************************************************/
     1262    16201
     1263    16202        /*
     1264    16203                                             If the transmit queue is not
     1265    16204                                             empty, mark this context as
     1266    16205                                             release pending and return.
     1267    16206        */
     1268    16207    1       IF KX$L3.CTL_Q_HEAD$ ~= ADDR(NIL) OR KX$L3.RTR$ ~= ADDR(NIL)

  16207   1 000005  ECC7 0004                            LDB,B6   @L3$,AUTO
          1 000007  DC86                                 LDB,B5   ,B6
          1 000008  8DC5 003F                            CMN      63,B5
          1 00000A  0981 0005                            BNE      s:16210,PREL
          1 00000C  8DC5 0043                            CMN      67,B5
          1 00000E  0901 000B                            BE       s:16212+3,PREL

     1269    16208    1          THEN
     1270    16209    2             DO;

     1271    16210    2                KX$L3.MAYBE = '1'B;

  16210   1 000010  8945 0029                            LBT,'1000'X       41,B5
  16210   1 000012       1000

     1272    16211    2                KX$L3.LCN# = 0;

  16211   1 000013  DC86                                 LDB,B5   ,B6
          1 000014  8845 002A                            LBF,'0FFF'X       42,B5
          1 000016       0FFF

     1273    16212    2                RETURN;

  16212   1 000017  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:245  
          1 00001A  0F81 0006                            B        s:16232,PREL

     1274    16213    2             END;
     1275    16214
     1276    16215        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:246  
     1277    16216        /*F* NAME: KXS$RLSL3                 */
     1278    16217        /*F* PURPOSE: Release a level 3 context block  */
     1279    16218
     1280    16219        /*D* NAME: KXS$RLSL3                 */
     1281    16220        /*D* PURPOSE: Release a level 3 context block  */
     1282    16221        /*D* CALL: CALL KXS$RLSL3 ( L3$ );   */
     1283    16222        /*D* INPUT: L3$ - pointer to the context to be released  */
     1284    16223        /*D* OUTPUT: none                    */
     1285    16224
     1286    16225    1   KXS$RLSL3: ENTRY ( L3$ );

  16225   1 00001C  D380 0000 0000  xent KXS$RLSL3       LNJ,B5   X6A_AUTO_1
          1 00001F       0026 0001                       DC       38,1

     1287    16226
     1288    16227        %EJECT;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:247  
     1289    16228
     1290    16229        /*
     1291    16230                                             Release the channel table.
     1292    16231        */
     1293    16232    1       IF KX$L3.CHN$ ~= ADDR(NIL)

  16232   1 000021  ECC7 0004                            LDB,B6   @L3$,AUTO
          1 000023  DC86                                 LDB,B5   ,B6
          1 000024  8DC5 0006                            CMN      6,B5
          1 000026  0901 0008                            BE       s:16235,PREL

     1294    16233    1          THEN
     1295    16234    1             KX$L3.CHN$ -> KH$CHN.CTX$ = ADDR (NIL);

  16234   1 000028  CCC5 0006                            LDB,B4   6,B5
          1 00002A  BB80 0000 0000                       LAB,B3   0
          1 00002D  BFC4 000C                            STB,B3   12,B4

     1296    16235    1       IF KX$L3.RLSCHN

  16235   1 00002F  DC86                                 LDB,B5   ,B6
          1 000030  82C5 0029                            LB,'0400'X        41,B5
          1 000032       0400
          1 000033  0581 0011                            BBF      s:16244,PREL

     1297    16236    1          THEN
     1298    16237    2             DO;

     1299    16238    2                CALL KVB$RLSSYS ( SIZEW ( KH$CHN ), KX$L3.CHN$ );

  16238   1 000035  CBF0 0020                            LAB,B4   32,IMO
          1 000037  BBC5 0006                            LAB,B3   6,B5
          1 000039  BFC7 0024                            STB,B3   CALL_FPT+19,AUTO
          1 00003B  CFC7 0022                            STB,B4   CALL_FPT+17,AUTO
          1 00003D  BBC7 0022                            LAB,B3   CALL_FPT+17,AUTO
          1 00003F  CBF0 0200                            LAB,B4   512,IMO
          1 000041  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:248  
          1 000044       0001                            DC       s:16244,PREL

     1300    16239    2             END;

     1301    16240        /*
     1302    16241                                             Delink this context from the
     1303    16242                                             others.
     1304    16243        */
     1305    16244    1       L2$ = KX$L3.L2$;

  16244   1 000045  ECC7 0004                            LDB,B6   @L3$,AUTO
          1 000047  DC86                                 LDB,B5   ,B6
          1 000048  CCC5 0002                            LDB,B4   2,B5
          1 00004A  CFC7 000F                            STB,B4   L2$,AUTO

     1306    16245    1       PTR$ = KX$L2.L3_HEAD$;

  16245   1 00004C  BCC4 0034                            LDB,B3   52,B4
          1 00004E  BFC7 000A                            STB,B3   PTR$,AUTO

     1307    16246        /*
     1308    16247           scan from HEAD$ until we find L3$, the cntx we want to delink.
     1309    16248        */
     1310    16249    2       DO WHILE (PTR$ ~= L3$ AND PTR$ ~= ADDR(NIL));

  16249   1 000050  0F81 0008                            B        s:16252,PREL

     1311    16250    2          PRV_PTR$ = PTR$;

  16250   1 000052  ECC7 000A                            LDB,B6   PTR$,AUTO
          1 000054  EFC7 000C                            STB,B6   PRV_PTR$,AUTO

     1312    16251    2          PTR$ = PTR$ -> KX$TL3.NEXT$;

  16251   1 000056  DC86                                 LDB,B5   ,B6
          1 000057  DFC7 000A                            STB,B5   PTR$,AUTO

PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:249  
     1313    16252    2       END;

  16252   1 000059  ECC7 000A                            LDB,B6   PTR$,AUTO
          1 00005B  DCC7 0004                            LDB,B5   @L3$,AUTO
          1 00005D  ED85                                 CMB,B6   ,B5
          1 00005E  0901 0004                            BE       s:16253,PREL
          1 000060  8DC7 000A                            CMN      PTR$,AUTO
          1 000062  09F0                                 BNE      s:16250,SPREL

     1314    16253    1       IF PTR$ = ADDR(NIL)

  16253   1 000063  8DC7 000A                            CMN      PTR$,AUTO
          1 000065  0981 000A                            BNE      s:16261,PREL

     1315    16254    1          THEN
     1316    16255    2             DO;

     1317    16256        /*S* SCREECH_CODE: KXS-S$KX_BADL3LIST#
     1318    16257             MESSAGE: The chain of L3 contexts was corrupted.
     1319    16258        */
     1320    16259    2                CALL KHD$SCREECH ( Y_BADL3LIST );

  16259   1 000067  BB80 0000 0000  02                   LAB,B3   0
          1 00006A  CBF0 0100                            LAB,B4   256,IMO
          1 00006C  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 00006F       0001                            DC       s:16261,PREL

     1321    16260    2             END;

     1322    16261    1       IF PTR$ = KX$L2.L3_HEAD$

  16261   1 000070  ECC7 000A                            LDB,B6   PTR$,AUTO
          1 000072  DCC7 000F                            LDB,B5   L2$,AUTO
          1 000074  EDC5 0034                            CMB,B6   52,B5
          1 000076  0981 0012                            BNE      s:16272,PREL

     1323    16262        /*
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:250  
     1324    16263           cntx to delink is the head of the list.
     1325    16264        */
     1326    16265    1          THEN
     1327    16266    2             DO;

     1328    16267    2                KX$L2.L3_HEAD$ = KX$L3.NEXT$;

  16267   1 000078  CCC7 0004                            LDB,B4   @L3$,AUTO
          1 00007A  BC84                                 LDB,B3   ,B4
          1 00007B  AC83                                 LDB,B2   ,B3
          1 00007C  AFC5 0034                            STB,B2   52,B5

     1329    16268    2                IF KX$L2.L3_HEAD$ = ADDR(NIL)

  16268   1 00007E  8DC5 0034                            CMN      52,B5
          1 000080  0981 001D                            BNE      s:16288,PREL

     1330    16269    2                   THEN
     1331    16270    2                      KX$L2.L3_TAIL$ = ADDR(NIL);

  16270   1 000082  BB80 0000 0000                       LAB,B3   0
          1 000085  BFC5 0036                            STB,B3   54,B5

     1332    16271    2             END;

  16271   1 000087  0F81 0016                            B        s:16288,PREL

     1333    16272    1          ELSE IF PTR$ = KX$L2.L3_TAIL$

  16272   1 000089  EDC5 0036                            CMB,B6   54,B5
          1 00008B  0981 000B                            BNE      s:16286,PREL

     1334    16273        /*
     1335    16274           cntx to delink is the tail of the list.
     1336    16275        */
     1337    16276    1                THEN
     1338    16277    2                   DO;
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:251  

     1339    16278    2                      PRV_PTR$ -> KX$TL3.NEXT$ = ADDR(NIL);

  16278   1 00008D  CB80 0000 0000                       LAB,B4   0
          1 000090  BCC7 000C                            LDB,B3   PRV_PTR$,AUTO
          1 000092  CF83                                 STB,B4   ,B3

     1340    16279    2                      KX$L2.L3_TAIL$ = PRV_PTR$;

  16279   1 000093  BFC5 0036                            STB,B3   54,B5

     1341    16280    2                   END;

  16280   1 000095  0F81 0008                            B        s:16288,PREL

     1342    16281    1                ELSE
     1343    16282        /*
     1344    16283           cntx is found somewhere in the middle of the linked list.
     1345    16284        */
     1346    16285    2                   DO;

     1347    16286    2                      PRV_PTR$ -> KX$TL3.NEXT$ = KX$L3.NEXT$;

  16286   1 000097  CCC7 0004                            LDB,B4   @L3$,AUTO
          1 000099  BC84                                 LDB,B3   ,B4
          1 00009A  AC83                                 LDB,B2   ,B3
          1 00009B  9CC7 000C                            LDB,B1   PRV_PTR$,AUTO
          1 00009D  AF81                                 STB,B2   ,B1

     1348    16287    2                   END;

     1349    16288    1       DAT$ = KX$L3.CTL_Q_HEAD$;

  16288   1 00009E  CCC7 0004                            LDB,B4   @L3$,AUTO
          1 0000A0  BC84                                 LDB,B3   ,B4
          1 0000A1  ACC3 003F                            LDB,B2   63,B3
          1 0000A3  AFC7 0006                            STB,B2   DAT$,AUTO
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:252  

     1350    16289    2       DO WHILE ( DAT$ ~= ADDR(NIL));

  16289   1 0000A5  0F81 001C                            B        s:16293,PREL

     1351    16290    2          KX$L3.CTL_Q_HEAD$ = KX$DATA.NEXT$;

  16290   1 0000A7  ECC7 0004                            LDB,B6   @L3$,AUTO
          1 0000A9  DC86                                 LDB,B5   ,B6
          1 0000AA  CCC7 0006                            LDB,B4   DAT$,AUTO
          1 0000AC  BC84                                 LDB,B3   ,B4
          1 0000AD  BFC5 003F                            STB,B3   63,B5

     1352    16291    2          CALL KXS$RLSBFR ( DAT$ );

  16291   1 0000AF  DBC7 0006                            LAB,B5   DAT$,AUTO
          1 0000B1  DFC7 0022                            STB,B5   CALL_FPT+17,AUTO
          1 0000B3  BBC7 0022                            LAB,B3   CALL_FPT+17,AUTO
          1 0000B5  CBF0 0100                            LAB,B4   256,IMO
          1 0000B7  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          1 0000BA       0001                            DC       s:16292,PREL

     1353    16292    2          DAT$ = KX$L3.CTL_Q_HEAD$;

  16292   1 0000BB  ECC7 0004                            LDB,B6   @L3$,AUTO
          1 0000BD  DC86                                 LDB,B5   ,B6
          1 0000BE  CCC5 003F                            LDB,B4   63,B5
          1 0000C0  CFC7 0006                            STB,B4   DAT$,AUTO

     1354    16293    2       END;

  16293   1 0000C2  8DC7 0006                            CMN      DAT$,AUTO
          1 0000C4  09E3                                 BNE      s:16290,SPREL

     1355    16294        /*
     1356    16295           Stop all timers just to be sure.
     1357    16296        */
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:253  
     1358    16297            %STOP_TIMER ( FPTN = KX$L3.TMRBLK );

  16302   1 0000C5  ECC7 0004                            LDB,B6   @L3$,AUTO
          1 0000C7  DC86                                 LDB,B5   ,B6
          1 0000C8  89C5 0056                            CMZ      86,B5
          1 0000CA  0881 0027                            BAGE     s:16311,PREL

  16302   1 0000CC  8845 0056                            LBF,'8000'X       86,B5
  16302   1 0000CE       8000

  16302   1 0000CF  DC86                                 LDB,B5   ,B6
          1 0000D0  8DC5 004D                            CMN      77,B5
          1 0000D2  0981 0008                            BNE      s:16302+22,PREL

  16302   1 0000D4  CCC5 004F                            LDB,B4   79,B5
          1 0000D6  CF80 0000 0002  xsym                 STB,B4   KX_TMRBLK+2
          1 0000D9  0F81 0007                            B        s:16303,PREL

  16302   1 0000DB  CCC5 004D                            LDB,B4   77,B5
          1 0000DD  BCC5 004F                            LDB,B3   79,B5
          1 0000DF  BFC4 0002                            STB,B3   2,B4

  16303   1 0000E1  DC86                                 LDB,B5   ,B6
          1 0000E2  8DC5 004F                            CMN      79,B5
          1 0000E4  0981 0008                            BNE      s:16303+12,PREL

  16303   1 0000E6  CCC5 004D                            LDB,B4   77,B5
          1 0000E8  CF80 0000 0000  xsym                 STB,B4   KX_TMRBLK
          1 0000EB  0F81 0006                            B        s:16311,PREL

  16303   1 0000ED  CCC5 004F                            LDB,B4   79,B5
          1 0000EF  BCC5 004D                            LDB,B3   77,B5
          1 0000F1  BF84                                 STB,B3   ,B4

     1359    16306            %STOP_TIMER ( FPTN = KX$L3.DATTMRBLK );

  16311   1 0000F2  DC86                                 LDB,B5   ,B6
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:254  
          1 0000F3  89C5 0060                            CMZ      96,B5
          1 0000F5  0881 0027                            BAGE     s:16318,PREL

  16311   1 0000F7  8845 0060                            LBF,'8000'X       96,B5
  16311   1 0000F9       8000

  16311   1 0000FA  DC86                                 LDB,B5   ,B6
          1 0000FB  8DC5 0057                            CMN      87,B5
          1 0000FD  0981 0008                            BNE      s:16311+20,PREL

  16311   1 0000FF  CCC5 0059                            LDB,B4   89,B5
          1 000101  CF80 0000 0002  xsym                 STB,B4   KX_TMRBLK+2
          1 000104  0F81 0007                            B        s:16312,PREL

  16311   1 000106  CCC5 0057                            LDB,B4   87,B5
          1 000108  BCC5 0059                            LDB,B3   89,B5
          1 00010A  BFC4 0002                            STB,B3   2,B4

  16312   1 00010C  DC86                                 LDB,B5   ,B6
          1 00010D  8DC5 0059                            CMN      89,B5
          1 00010F  0981 0008                            BNE      s:16312+12,PREL

  16312   1 000111  CCC5 0057                            LDB,B4   87,B5
          1 000113  CF80 0000 0000  xsym                 STB,B4   KX_TMRBLK
          1 000116  0F81 0006                            B        s:16318,PREL

  16312   1 000118  CCC5 0059                            LDB,B4   89,B5
          1 00011A  BCC5 0057                            LDB,B3   87,B5
          1 00011C  BF84                                 STB,B3   ,B4

     1360    16315        /*
     1361    16316            inform CM that L3 context is being released.
     1362    16317        */
     1363    16318    1       IF KX$L3.CM$ ~= ADDR(NIL)

  16318   1 00011D  DC86                                 LDB,B5   ,B6
          1 00011E  8DC5 0004                            CMN      4,B5
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:255  
          1 000120  0901 001F                            BE       s:16331,PREL

     1364    16319    1          THEN
     1365    16320    2             DO;

     1366    16321    2                CALL_FPT = '0'B;

  16321   1 000122  5C20                                 LDV,R5   32
          1 000123  0021                                 ALR      ;
          1 000124       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000126       4007 0011                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

     1367    16322    2                CALL_FPT.EVN = %KX_CM_EV_RLSL3#;

  16322   1 000128  6C0E                                 LDV,R6   14
          1 000129  437F                                 CSYNC    s:16322,SPREL
          1 00012A  EF47 0011                            STR,R6   CALL_FPT,AUTO

     1368    16323    2                CALL_FPT.CAL$ = L3$;

  16323   1 00012C  DC86                                 LDB,B5   ,B6
          1 00012D  DFC7 0012                            STB,B5   CALL_FPT+1,AUTO

     1369    16324    2                CALL_FPT.RCV$ = KX$L3.CM$;

  16324   1 00012F  CC86                                 LDB,B4   ,B6
          1 000130  BCC4 0004                            LDB,B3   4,B4
          1 000132  BFC7 0014                            STB,B3   CALL_FPT+3,AUTO

     1370    16325    2                CALL KXC$CNCMNG ( CALL_FPT );

  16325   1 000134  CBC7 0011                            LAB,B4   CALL_FPT,AUTO
          1 000136  CFC7 0022                            STB,B4   CALL_FPT+17,AUTO
          1 000138  BBC7 0022                            LAB,B3   CALL_FPT+17,AUTO
          1 00013A  CBF0 0100                            LAB,B4   256,IMO
          1 00013C  E380 0000 0000  xent                 LNJ,B6   KXC$CNCMNG
          1 00013F       0001                            DC       s:16331,PREL
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:256  

     1371    16326    2             END;

     1372    16327
     1373    16328        /*
     1374    16329                                             Release the context block.
     1375    16330        */
     1376    16331    1       BFRSIZ = SIZEW(KX$L3);

  16331   1 000140  E870 0091                            LDR,R6   145,IMO
          1 000142  EF47 000E                            STR,R6   BFRSIZ,AUTO

     1377    16332    1       CALL KVB$RLSSYS ( BFRSIZ, L3$ );

  16332   1 000144  ECC7 0004                            LDB,B6   @L3$,AUTO
          1 000146  EFC7 0024                            STB,B6   CALL_FPT+19,AUTO
          1 000148  DBC7 000E                            LAB,B5   BFRSIZ,AUTO
          1 00014A  DFC7 0022                            STB,B5   CALL_FPT+17,AUTO
          1 00014C  BBC7 0022                            LAB,B3   CALL_FPT+17,AUTO
          1 00014E  CBF0 0200                            LAB,B4   512,IMO
          1 000150  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 000153       0001                            DC       s:16336,PREL

     1378    16333        /*
     1379    16334           Update available MEM and IOMEM
     1380    16335        */
     1381    16336    1       KX_AVL_IOMEM = KX_AVL_IOMEM + KX_BUF.SIZ(KX$L2.BUF_SIZE);

  16336   1 000154  ECC7 000F                            LDB,B6   L2$,AUTO
          1 000156  B2C6 0004                            LLH,R3   4,B6
          1 000158  F830 0000 001E  xsym                 LDR,R7   KX_BUF+30,R3
          1 00015B  6C00                                 LDV,R6   0
          1 00015C  8400 0000 0000  xsym                 AID      KX_AVL_IOMEM
          1 00015F  8D00 0000 0000  xsym                 SDI      KX_AVL_IOMEM

     1382    16337    1       KX_AVL_MEM = KX_AVL_MEM + 1200;

PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:257  
  16337   1 000162  8C80 0000 0000  xsym                 LDI      KX_AVL_MEM
          1 000165  8470 0000 04B0                       AID      1200,IMO
          1 000168  8D00 0000 0000  xsym                 SDI      KX_AVL_MEM

     1383    16338
     1384    16339    1       RETURN;

  16339   1 00016B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1385    16340
     1386    16341    1   END KXS$RLSL3_MAYBE;
     1387    16342        %EOD;

PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:258  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$RLSL3_MAYBE.
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:259  

 **** Variables and constants ****

  ****  Section 000 RoData KXS$RLSL3_MAYBE

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 Y_BADL3LIST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @L3$                       E-0-0/w UBIN(16)    r     1 BFRSIZ
    11-0-0/w STRC(256)   r     1 CALL_FPT                   6-0-0/w PTR         r     1 DAT$
     F-0-0/w PTR         r     1 L2$                       *0-0-0/w PTR         r     1 L3$
     C-0-0/w PTR         r     1 PRV_PTR$                   A-0-0/w PTR         r     1 PTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN(32)    r     1 KX_AVL_IOMEM               0-0-0/w SBIN(32)    r     1 KX_AVL_MEM
     0-0-0/w STRC(672)   r     1 KX_BUF                     0-0-0/b EPTR        r     1 KX_PM$(0:2)
     0-0-0/w STRC(64)    r     1 KX_TMRBLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(160)   r     1 KX$BTMRBLK
     0-0-0/w STRC(128)   r     1 KX$DATA                    0-0-0/w STRC(4992)  r     1 KX$L2
     0-0-0/w STRC(2320)  r     1 KX$L3                      0-0-0/w STRC(2320)  r     1 KX$TL3

PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:260  

   Procedure KXS$RLSL3_MAYBE requires 366 words for executable code.
   Procedure KXS$RLSL3_MAYBE requires 38 words of local(AUTO) storage.
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:261  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:262  
          MINI XREF LISTING

BFRSIZ
     14028**DCL     16331<<ASSIGN  16332<>CALL
CALL_FPT
     14057**DCL     16321<<ASSIGN  16325<>CALL
CALL_FPT.CAL$
     14061**DCL     16323<<ASSIGN
CALL_FPT.EVN
     14061**DCL     16322<<ASSIGN
CALL_FPT.PRM1$
     14062**DCL     14063--REDEF
CALL_FPT.PRM2$
     14064**DCL     14064--REDEF
CALL_FPT.RCV$
     14061**DCL     16324<<ASSIGN
DAT$
     14024**DCL     15391--IMP-PTR 16288<<ASSIGN  16289>>DOWHILE 16290>>ASSIGN  16291<>CALL    16292<<ASSIGN
KH$CHN
     14096**DCL     16238--CALL
KH$CHN.CTX$
     14166**DCL     16234<<ASSIGN
KH$CHN.TERMID.TERM
     14192**DCL     14201--REDEF
KHD$SCREECH
     14013**DCL-ENT 16259--CALL
KVB$RLSSYS
     14009**DCL-ENT 16238--CALL    16332--CALL
KX$BTMRBLK.BLNK$
     15425**DCL     16302<<ASSIGN  16311<<ASSIGN
KX$BTMRBLK.FLNK$
     15425**DCL     16303<<ASSIGN  16312<<ASSIGN
KX$DATA.NEXT$
     15393**DCL     16290>>ASSIGN
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:263  
KX$DATA.RLS_STAT
     15393**DCL     15394--REDEF
KX$L2.BUF_SIZE
     14242**DCL     16336>>ASSIGN
KX$L2.DFLVCPRF.TRADEL
     14363**DCL     14373--REDEF
KX$L2.DSTSNPA.ADR_STRING
     14554**DCL     14554--REDEF
KX$L2.FRMR_NSNR
     14340**DCL     14341--REDEF
KX$L2.L3_HEAD$
     14272**DCL     16245>>ASSIGN  16261>>IF      16267<<ASSIGN  16268>>IF
KX$L2.L3_TAIL$
     14273**DCL     16270<<ASSIGN  16272>>IF      16279<<ASSIGN
KX$L2.NTWADR.ADR_STRING
     14274**DCL     14274--REDEF
KX$L2.STATES
     14252**DCL     14252--REDEF
KX$L3
     14592**DCL     16331--ASSIGN
KX$L3.CALL_OPTS.RCVADR.ADR_STRING
     14632**DCL     14632--REDEF
KX$L3.CHN$
     14593**DCL     16232>>IF      16234>>ASSIGN  16238<>CALL
KX$L3.CM$
     14592**DCL     16318>>IF      16324>>ASSIGN
KX$L3.CM_OPTS.RCVADR.ADR_STRING
     14667**DCL     14667--REDEF
KX$L3.CTL_Q_HEAD$
     14718**DCL     16207>>IF      16288>>ASSIGN  16290<<ASSIGN  16292>>ASSIGN
KX$L3.CUG
     14710**DCL     14711--REDEF
KX$L3.DATTMRBLK.BLNK$
     14781**DCL     16311>>ASSIGN  16311>>ASSIGN  16312>>IF      16312>>ASSIGN
KX$L3.DATTMRBLK.FLNK$
     14781**DCL     16311>>IF      16311>>ASSIGN  16312>>ASSIGN  16312>>ASSIGN
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:264  
KX$L3.DATTMRBLK.ON
     14783**DCL     16311>>IF      16311<<ASSIGN
KX$L3.DFL_OPTS.RCVADR.ADR_STRING
     14702**DCL     14702--REDEF
KX$L3.L2$
     14592**DCL     16244>>ASSIGN
KX$L3.LCLADR.ADR_STRING
     14827**DCL     14827--REDEF
KX$L3.LCLNSAP
     14844**DCL     14900--REDEF
KX$L3.LCLNSAP.NSAP.ADDRESS_N
     14895**DCL     14896--REDEF
KX$L3.LCN#
     14709**DCL     14710--REDEF   16211<<ASSIGN
KX$L3.MAYBE
     14705**DCL     16210<<ASSIGN
KX$L3.NEXT$
     14592**DCL     16267>>ASSIGN  16286>>ASSIGN
KX$L3.RLSCHN
     14706**DCL     16235>>IF
KX$L3.RMTNSAP
     14917**DCL     14973--REDEF
KX$L3.RMTNSAP.NSAP.ADDRESS_N
     14968**DCL     14969--REDEF
KX$L3.RTR$
     14718**DCL     16207>>IF
KX$L3.STATES
     14715**DCL     14715--REDEF
KX$L3.TMRBLK.BLNK$
     14749**DCL     16302>>ASSIGN  16302>>ASSIGN  16303>>IF      16303>>ASSIGN
KX$L3.TMRBLK.FLNK$
     14749**DCL     16302>>IF      16302>>ASSIGN  16303>>ASSIGN  16303>>ASSIGN
KX$L3.TMRBLK.ON
     14751**DCL     16302>>IF      16302<<ASSIGN
KX$L3.TRNDLY
     14711**DCL     14712--REDEF
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:265  
KX$L3.TRNDLYIND
     14712**DCL     14713--REDEF
KX$TL3.CALL_OPTS.RCVADR.ADR_STRING
     15035**DCL     15035--REDEF
KX$TL3.CM_OPTS.RCVADR.ADR_STRING
     15070**DCL     15070--REDEF
KX$TL3.CUG
     15113**DCL     15114--REDEF
KX$TL3.DFL_OPTS.RCVADR.ADR_STRING
     15105**DCL     15105--REDEF
KX$TL3.LCLADR.ADR_STRING
     15230**DCL     15230--REDEF
KX$TL3.LCLNSAP
     15247**DCL     15303--REDEF
KX$TL3.LCLNSAP.NSAP.ADDRESS_N
     15298**DCL     15299--REDEF
KX$TL3.LCN#
     15112**DCL     15113--REDEF
KX$TL3.NEXT$
     14995**DCL     16251>>ASSIGN  16278<<ASSIGN  16286<<ASSIGN
KX$TL3.RMTNSAP
     15320**DCL     15376--REDEF
KX$TL3.RMTNSAP.NSAP.ADDRESS_N
     15371**DCL     15372--REDEF
KX$TL3.STATES
     15118**DCL     15118--REDEF
KX$TL3.TRNDLY
     15114**DCL     15115--REDEF
KX$TL3.TRNDLYIND
     15115**DCL     15116--REDEF
KXC$CNCMNG
     14012**DCL-ENT 16325--CALL
KXS$RLSBFR
     14010**DCL-ENT 16291--CALL
KX_AVL_IOMEM
     16122**DCL     16336<<ASSIGN  16336>>ASSIGN
PL6.E3A0      #007=KXS$RLSL3_MAYBE File=KXS$SUBS.:E05TSI                         WED 07/30/97 02:29 Page:266  
KX_AVL_MEM
     16122**DCL     16337<<ASSIGN  16337>>ASSIGN
KX_BUF.SIZ
     15453**DCL     16336>>ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     15724**DCL     15730--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     15765**DCL     15772--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     16049**DCL     16055--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     16090**DCL     16097--REDEF
KX_TMRBLK.QHD$
     15455**DCL     16303<<ASSIGN  16312<<ASSIGN
KX_TMRBLK.QTL$
     15455**DCL     16302<<ASSIGN  16311<<ASSIGN
L2$
     14029**DCL     14223--IMP-PTR 16244<<ASSIGN  16245>>ASSIGN  16261>>IF      16267>>ASSIGN  16268>>IF
     16270>>ASSIGN  16272>>IF      16279>>ASSIGN  16336>>ASSIGN
L3$
     14023**DCL        17--PROC    14592--IMP-PTR 16207>>IF      16207>>IF      16210>>ASSIGN  16211>>ASSIGN
     16225--ENTRY   16232>>IF      16234>>ASSIGN  16235>>IF      16238>>CALL    16244>>ASSIGN  16249>>DOWHILE
     16267>>ASSIGN  16286>>ASSIGN  16288>>ASSIGN  16290>>ASSIGN  16292>>ASSIGN  16302>>IF      16302>>ASSIGN
     16302>>IF      16302>>ASSIGN  16302>>ASSIGN  16302>>ASSIGN  16303>>IF      16303>>ASSIGN  16303>>ASSIGN
     16303>>ASSIGN  16311>>IF      16311>>ASSIGN  16311>>IF      16311>>ASSIGN  16311>>ASSIGN  16311>>ASSIGN
     16312>>IF      16312>>ASSIGN  16312>>ASSIGN  16312>>ASSIGN  16318>>IF      16323>>ASSIGN  16324>>ASSIGN
     16332<>CALL
PRV_PTR$
     14027**DCL     16250<<ASSIGN  16278>>ASSIGN  16279>>ASSIGN  16286>>ASSIGN
PTR$
     14026**DCL     16245<<ASSIGN  16249>>DOWHILE 16249>>DOWHILE 16250>>ASSIGN  16251<<ASSIGN  16251>>ASSIGN
     16253>>IF      16261>>IF      16272>>IF
Y_BADL3LIST
     16161**DCL     16259<>CALL

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:267  
     1388        1        /*T***********************************************************/
     1389        2        /*T*                                                         */
     1390        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1391        4        /*T*                                                         */
     1392        5        /*T***********************************************************/
     1393        6        /*F* NAME: KXS$TMR                   */
     1394        7        /*F* PURPOSE: Handle X.25 clock event scheduling  */
     1395        8
     1396        9        /*D* NAME: KXS$TMR                   */
     1397       10        /*D* PURPOSE: Handle one second clock events from
     1398       11                      clock management, turning those into
     1399       12                      X.25 events when necessary.  */
     1400       13        /*D* CALL: CALL KXS$TMR ( FPT_EXP );  */
     1401       14        /*D* INPUT: FPT_EXP - not used       */
     1402       15        /*D* OUTPUT: none                    */
     1403       16
     1404       17        KXS$TMR: PROC ( JUNK );
     1405       18
     1406       19        /*****************************************************************
     1407       20        *                           Includes                             *
     1408       21        *                                                                *
     1409       22        *****************************************************************/
     1410       23
     1411       24        %INCLUDE K_ID_E;
     1412       74        %K#ENTID_E;
     1413       93        %K#LYRID_E;
     1414      100        %INCLUDE KL_SUPER_C;
     1415     3002        %INCLUDE KL_MACRO_C;
     1416     6354        %INCLUDE KL_AFCN_C;
     1417     6455        %INCLUDE LCP_6;
     1418    10734        %INCLUDE CP_6_SUBS;
     1419    11274        %INCLUDE KH_MACRO_C;
     1420    12017        %INCLUDE KHA_FNC_E;
     1421    12117        %INCLUDE KL_CONTROL_C;
     1422    12497        %INCLUDE KX_EQUS_E;
     1423    12936        %INCLUDE KX_PERR_C;
     1424    13065        %INCLUDE KX_SCODE_C;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:268  
     1425    13131        %INCLUDE KX_DATA_C;
     1426    13199        %INCLUDE KX_MACROS_M;
     1427    13970        %INCLUDE KV_GLBCNS_E;
     1428    14311        %KV#CQ_HNDID_E;
     1429    14316        %INCLUDE KH$CHN;
     1430    14438        %INCLUDE G_JIT_M;
     1431    14703        %INCLUDE K_ADDRESS_M;
     1432    15206        %INCLUDE KNH_MACRO_C;
     1433    15489        %EJECT;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:269  
     1434    15490        /*****************************************************************
     1435    15491        *                                                                *
     1436    15492        *                          External References                   *
     1437    15493        *                                                                *
     1438    15494        *****************************************************************/
     1439    15495
     1440    15496    1   DCL KHI$DISABLE ENTRY (1);
     1441    15497    1   DCL KHI$ENABLE ENTRY;
     1442    15498    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
     1443    15499    1   DCL KVB$RLS2NSYS ENTRY (2) ALTRET;
     1444    15500    1   DCL KXX$X29 ENTRY (1);
     1445    15501    1   DCL KHD$SCREECH ENTRY (1);
     1446    15502    1   DCL KXV$VCNTW ENTRY(1) ALTRET;
     1447    15503    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
     1448    15504    1   DCL KHA$GET_CTX_PTR ENTRY (2) ALTRET;
     1449    15505    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
     1450    15506    1   DCL KXF$FRAME ENTRY (1) ALTRET;
     1451    15507    1   DCL KXS$SYSLOG ENTRY (7);
     1452    15508    1   DCL KXP$PACKET ENTRY(1) ALTRET;
     1453    15509    1   DCL KVM$SNDCQ ENTRY (1) ALTRET;
     1454    15510        %EJECT;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:270  
     1455    15511        /*****************************************************************
     1456    15512        *                                                                *
     1457    15513        *                           Auto                                 *
     1458    15514        *                                                                *
     1459    15515        *****************************************************************/
     1460    15516
     1461    15517    1   DCL JUNK UBIN;
     1462    15518
     1463    15519        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = );
     1464    15563    1   DCL BLK$ PTR;
     1465    15564    1   DCL T$ PTR;
     1466    15565    1   DCL LEVEL UBIN;
     1467    15566    1   DCL KVBSIZ UBIN;
     1468    15567    1   DCL CHN$ PTR;
     1469    15568    1   DCL KHA_ERROR UBIN(32);
     1470    15569        %KNH$MESS ( FPTN = KNH_MESS, STCLASS = );
     1471    15618    1   DCL 1 KV@SNDCQ ALIGNED,
     1472    15619    1         2 MSG_ (0:5),
     1473    15620    1           3 ADR$ PTR,
     1474    15621    1           3 BYTX UBIN WORD,
     1475    15622    1           3 BYTSIZ UBIN WORD;
     1476    15623        %FPT_CONNECT ( FPTN = FPT@CONNECT, ADRTYP = X121, STCLASS = );
     1477    15794        %FPT_TERM ( FPTN = FPT@TERM, STCLASS = );
     1478    15816    1   DCL TRY_SNDCQ BIT (1);
     1479    15817
     1480    15818
     1481    15819        /*****************************************************************
     1482    15820        *                                                                *
     1483    15821        *                           Based                                *
     1484    15822        *                                                                *
     1485    15823        *****************************************************************/
     1486    15824
     1487    15825        %KX$TMRBLK ( STCLASS = "BASED ( BLK$ )" );
     1488    15857        %KX$TMRBLK ( FPTN = KX$BTMRBLK, STCLASS = BASED );
     1489    15889    1   DCL BASED_WORD UBIN BASED;
     1490    15890        %KX$SYSLOG_Q_ENTRY ( STCLASS = "BASED ( T$ )" );
     1491    15984        %KH$CHN ( STCLASS="BASED(CHN$)" );
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:271  
     1492    16108        %KX$L2 ( STCLASS = BASED );
     1493    16475        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
     1494    16889
     1495    16890
     1496    16891        /*****************************************************************
     1497    16892        *                                                                *
     1498    16893        *                           Static                               *
     1499    16894        *                                                                *
     1500    16895        *****************************************************************/
     1501    16896
     1502    16897        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = SYMREF );
     1503    17109        %KX_DATA;
     1504    17799    1   DCL ONE_MINUTE UBIN STATIC INIT(60);
     1505    17800        %EJECT;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:272  
     1506    17801        /*****************************************************************
     1507    17802        *                                                                *
     1508    17803        *                           Constant                             *
     1509    17804        *                                                                *
     1510    17805        *****************************************************************/
     1511    17806
     1512    17807        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
     1513    17808                           FPTN = HRDERR,
     1514    17809                           ERR# = %E_KXH_HRDERR# );
     1515    17855        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='F',SEV=%G_WRSYSLOG_SEV_SOFT#,
     1516    17856                            FPTN = REJ,
     1517    17857                            ERR# = %E_KXF_REJ# );
     1518    17903        /*E*    ERROR:      KXF-E_KXF_REJ#-3
     1519    17904                MESSAGE:    VAL(0) has #REJ frames received in last minute.
     1520    17905        */
     1521    17906    1   DCL G$JIT$ PTR SYMREF;
     1522    17907        %FPT_CONNECT ( FPTN = FPT_CONNECT_C, STCLASS = SYMREF );
     1523    17976        %FPT_TERM ( FPTN = FPT_TERM_C, STCLASS = SYMREF );
     1524    17998        %EJECT;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:273  
     1525    17999        /*****************************************************************
     1526    18000        *                                                                *
     1527    18001        *                           Procedure                            *
     1528    18002        *                                                                *
     1529    18003        *****************************************************************/
     1530    18004
     1531    18005        /*
     1532    18006                                             Since the clock routine runs at
     1533    18007                                             the background level, disable.
     1534    18008        */
     1535    18009            %DISABLE;
     1536    18012
     1537    18013    1       BLK$ = KX_TMRBLK.QHD$;
     1538    18014    2       DO WHILE ( BLK$ ~= ADDR(NIL) );
     1539    18015    2          T$ = KX$TMRBLK.FLNK$;
     1540    18016    2          IF NOT KX$TMRBLK.ON
     1541    18017        /*
     1542    18018           All timer blocks in the chain should be ON. For whatever reason
     1543    18019           this block is here, ignore it and delink it.
     1544    18020        */
     1545    18021    2             THEN
     1546    18022    3                DO;
     1547    18023    3                   KX$TMRBLK.ON = '1'B;
     1548    18024                        %STOP_TIMER ( FPTN = KX$TMRBLK );
     1549    18033    3                END;
     1550    18034    2             ELSE
     1551    18035    3                DO;
     1552    18036    3                   KX$TMRBLK.CNT = KX$TMRBLK.CNT - 1;
     1553    18037    3                   IF KX$TMRBLK.CNT = 0
     1554    18038    3                      THEN
     1555    18039    4                         DO;
     1556    18040                                 %STOP_TIMER ( FPTN = KX$TMRBLK );
     1557    18049    4                            CALL_FPT = '0'B;
     1558    18050    4                            CALL_FPT.EVN = KX$TMRBLK.PRM;
     1559    18051    4                            CALL_FPT.RCV$ = KX$TMRBLK.CTX$;
     1560    18052    4                            CALL KX$TMRBLK.SBR$ ( CALL_FPT );
     1561    18053    4                         END;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:274  
     1562    18054    3                END;
     1563    18055    2          BLK$ = T$;
     1564    18056    2       END;
     1565    18057
     1566    18058        /*
     1567    18059           Every second, call KXV$VCNTW so that SL can retry messages
     1568    18060           that failed to make it in the SCQ.
     1569    18061        */
     1570    18062    1       CALL_FPT = '0'B;
     1571    18063    1       IF KX_SLLIST.HD$ ~= ADDR(NIL)
     1572    18064    1          THEN
     1573    18065    2             DO;
     1574    18066    2                CALL_FPT.EVN = %KX_CM_EV_CHKSCQ#;
     1575    18067    2                CALL_FPT.RCV$ = KX_SLLIST.HD$;
     1576    18068    2                CALL KXV$VCNTW ( CALL_FPT );
     1577    18069    2             END;
     1578    18070
     1579    18071    1       TRY_SNDCQ = '1'B;
     1580    18072    1       FPT@CONNECT = FPT_CONNECT_C;
     1581    18073    1       FPT@CONNECT.RLCID.FLAGS.VIRCIR = '0'B;
     1582    18074    1       FPT@TERM = FPT_TERM_C;
     1583    18075    1       KNH_MESS = '0'B;
     1584    18076    1       KV@SNDCQ = '0'B;
     1585    18077    1       KV@SNDCQ.MSG_.ADR$ (0) = ADDR ( KNH_MESS );
     1586    18078    1       KV@SNDCQ.MSG_.BYTSIZ (0) = ( LENGTHC (KNH_MESS) + 3 ) / 4 * 4;
     1587    18079        /*
     1588    18080           check need for link assurance.
     1589    18081            Also check the need to send any INIT or TERM.
     1590    18082        */
     1591    18083    1       ONE_MINUTE = ONE_MINUTE - 1;
     1592    18084    1       IF ONE_MINUTE = 0 THEN ONE_MINUTE = 60;
     1593    18085    1       CALL_FPT.EVN = %KX_F_EV_TO#;
     1594    18086    1       T$ = KX_CNTX.HD$;
     1595    18087    2       DO WHILE ( T$ ~= ADDR(NIL) );
     1596    18088    2          IF T$->KX$L2.IDL_PRD ~= 0 AND T$->KX$L2.STATE.CURRENT = 4
     1597    18089    2             AND NOT T$->KX$L2.CHN$->KH$CHN.ATTR&%G_ATTR_CL_SLCC
     1598    18090    2             AND NOT T$->KX$L2.TMRBLK.ON
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:275  
     1599    18091    2             THEN
     1600    18092    3                DO;
     1601    18093    3                   T$->KX$L2.IDL_CLK = T$->KX$L2.IDL_CLK - 1;
     1602    18094    3                   IF T$->KX$L2.IDL_CLK = 0
     1603    18095    3                      THEN
     1604    18096    4                         DO;
     1605    18097    4                            KX_STATS_HDLC.TIMEOUTS = KX_STATS_HDLC.TIMEOUTS - 1;
     1606    18098    4                            CALL_FPT.RCV$ = T$;
     1607    18099    4                            CALL KXF$FRAME ( CALL_FPT );
     1608    18100    4                         END;
     1609    18101    3                END;
     1610    18102        /*
     1611    18103           Check for need to log REJ frames.
     1612    18104        */
     1613    18105    2          IF ONE_MINUTE = 60 AND T$->KX$L2.REJ_CNT > 0
     1614    18106    2             THEN
     1615    18107    3                DO;
     1616    18108                        %WRSYSLOG ( ERRCOD = REJ,
     1617    18109                        TRMID = "T$->KX$L2.CHN$->KH$CHN.TERMID",
     1618    18110                        VAL0 = "T$->KX$L2.REJ_CNT" );
     1619    18128    3                   T$->KX$L2.REJ_CNT = 0;
     1620    18129    3                END;
     1621    18130    2          IF T$->KX$L2.INIT_ALTRET AND TRY_SNDCQ
     1622    18131    2             THEN
     1623    18132    3                DO;
     1624    18133    3                   FPT@CONNECT.TERMINAL_ID = T$->KX$L2.CHN$->KH$CHN.TERMID;
     1625    18134    3                   FPT@CONNECT.DSTSNPA = T$->KX$L2.DSTSNPA;
     1626    18135    3                   KNH_MESS.FUNCTION = %KN_FCN_INIT;
     1627    18136    3                   KNH_MESS.FPTSZ = 2 * SIZEW ( FPT@CONNECT );
     1628    18137    3                   KV@SNDCQ.MSG_.ADR$ (1) = ADDR ( FPT@CONNECT );
     1629    18138    3                   KV@SNDCQ.MSG_.BYTSIZ (1) = ( LENGTHC(FPT@CONNECT)+3 )/4*4;
     1630    18139    3                   CALL KVM$SNDCQ ( KV@SNDCQ ) WHENRETURN
     1631    18140    4                         DO;
     1632    18141    4                            T$->KX$L2.INIT_ALTRET = '0'B;
     1633    18142    4                         END;
     1634    18143    3                      WHENALTRETURN
     1635    18144    4                         DO;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:276  
     1636    18145    4                            TRY_SNDCQ = '0'B;
     1637    18146    4                         END;
     1638    18147    3                END;
     1639    18148    2          IF T$->KX$L2.TERM_ALTRET AND TRY_SNDCQ
     1640    18149    2             THEN
     1641    18150    3                DO;
     1642    18151    3                   FPT@TERM.RLCID.LDCTX =  T$->KX$L2.LDCTX;
     1643    18152    3                   KNH_MESS.FUNCTION = %KN_FCN_TERM;
     1644    18153    3                   KNH_MESS.FPTSZ = 2 * SIZEW ( FPT@TERM );
     1645    18154    3                   KV@SNDCQ.MSG_.ADR$ (1) = ADDR ( FPT@TERM );
     1646    18155    3                   KV@SNDCQ.MSG_.BYTSIZ (1) = ( LENGTHC(FPT@TERM)+3 )/4*4;
     1647    18156    3                   CALL KVM$SNDCQ ( KV@SNDCQ ) WHENRETURN
     1648    18157    4                         DO;
     1649    18158    4                            T$->KX$L2.TERM_ALTRET = '0'B;
     1650    18159    4                         END;
     1651    18160    3                      WHENALTRETURN
     1652    18161    4                         DO;
     1653    18162    4                            TRY_SNDCQ = '0'B;
     1654    18163    4                         END;
     1655    18164    3                END;
     1656    18165    2          T$ = T$->KX$L2.NEXT$;
     1657    18166    2       END;
     1658    18167        /*
     1659    18168           Call kxp to look for idle circuits.
     1660    18169        */
     1661    18170    1       CALL_FPT.EVN = %KX_P_EV_IDLCLK#;
     1662    18171    1       CALL_FPT.RCV$ = ADDR(NIL);
     1663    18172    1       CALL KXP$PACKET ( CALL_FPT );
     1664    18173        /*
     1665    18174                                             If any syslogs could not be
     1666    18175                                             processed off of an inhibited
     1667    18176                                             level, they are queued and
     1668    18177                                             should be sent now.
     1669    18178        */
     1670    18179    2   SYSLOG_LOOP: DO WHILE ( KX_SYSLOG.HD$ ~= ADDR(NIL) );
     1671    18180    2          T$ = KX_SYSLOG.HD$;
     1672    18181    2          KVBSIZ = SIZEW ( KX$SYSLOG_Q_ENTRY );
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:277  
     1673    18182    2          IF KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD = HRDERR
     1674    18183    2             THEN
     1675    18184    3                DO;
     1676    18185    3                   IF ( KX$SYSLOG_Q_ENTRY.NXT$ = ADDR(NIL) )
     1677    18186    3                      THEN
     1678    18187    4                         DO;
     1679    18188    4                            KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(0) =
     1680    18189    4                               KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(0) + 1;
     1681    18190    4                            IF ( KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(0) < 60 )
     1682    18191    4                               THEN
     1683    18192    4                                  EXIT SYSLOG_LOOP;
     1684    18193    4                               ELSE
     1685    18194    4                                  GOTO KILL_LINK;
     1686    18195    4                         END;
     1687    18196    3                      ELSE
     1688    18197    3   KILL_LINK:            IF ( KX_LINERRDSCLMT ~= 255 ) AND
     1689    18198    3                            ( KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(2) > KX_LINERRDSCLMT )
     1690    18199    3                            THEN
     1691    18200    4                               DO;
     1692    18201    4                                  CALL KHA$GET_CTX_PTR ( KX$SYSLOG_Q_ENTRY.FPT.V.TRMID,
             18201                                           CHN$ )
     1693    18202    5                                     WHENALTRETURN DO;
     1694    18203    5                                           KX_SYSLOG.HD$ = KX$SYSLOG_Q_ENTRY.NXT$;
     1695    18204    5                                           GOTO RLS;
     1696    18205    5                                        END;
     1697    18206    5                                  IF KH$CHN.CTX$ ~= ADDR(NIL) THEN DO;
     1698    18207    5                                           CALL KHA$DVCADM ( %KHA_FNC_KILL,
     1699    18208    5                                              KHA_ERROR,
     1700    18209    5                                              KH$CHN.TERMID,
     1701    18210    5                                              KH$CHN.TERMID, ,1 );
     1702    18211    5                                        END;
     1703    18212        /* Change the errlog to say LINERRDSC */
     1704    18213    4                                  KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD.ERR# = %
             18213                                           E_KXH_LINERRDSC#;
     1705    18214    4                               END;
     1706    18215    3                END;
     1707    18216    2          KX_SYSLOG.HD$ = KX$SYSLOG_Q_ENTRY.NXT$;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:278  
     1708    18217    2          CALL KHA$ERRLOG ( KX$SYSLOG_Q_ENTRY.FPT, 1 )
     1709    18218    2             WHENALTRETURN
     1710    18219    3                DO;
     1711    18220    3                   KX_SYSLOG.HD$ = T$;
     1712    18221    3                   EXIT SYSLOG_LOOP;
     1713    18222    3                END;
     1714    18223        /*
     1715    18224           KX$SYSLOG_Q_ENTRY has a variable size char array at the end.
     1716    18225           But SIZEW still calculates the right size for you.
     1717    18226        */
     1718    18227    2          IF KX$SYSLOG_Q_ENTRY.FPT.V.TRMID.LEV = %TERMINAL_ID_LEV_CHAN# THEN
     1719    18228    2                CALL KHA$GET_CTX_PTR ( KX$SYSLOG_Q_ENTRY.FPT.V.TRMID, CHN$ )
     1720    18229    2                   WHENRETURN
     1721    18230    3                      DO;
     1722    18231    4                         IF KH$CHN.CTX$ ~= ADDR(NIL) THEN DO;
     1723    18232    4                                  KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT =
     1724    18233    4                                     KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT - KVBSIZ;
     1725    18234    4                               END;
     1726    18235    3                      END;
     1727    18236    3                   WHENALTRETURN DO; /*N* Do we care? */ END;
     1728    18237    2   RLS:   CALL KVB$RLSSYS ( KVBSIZ, T$ );
     1729    18238    2       END;
     1730    18239    1       IF KX_SYSLOG.HD$ = ADDR(NIL)
     1731    18240    1          THEN
     1732    18241    1             KX_SYSLOG.TL$ = ADDR(NIL);
     1733    18242
     1734    18243            %ENABLE;
     1735    18246
     1736    18247    1       RETURN;
     1737    18248
     1738    18249    1   END KXS$TMR;
     1739    18250        %EOD;

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:279  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$TMR.

   Procedure KXS$TMR requires 751 words for executable code.
   Procedure KXS$TMR requires 126 words of local(AUTO) storage.

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:280  

 Object Unit name= KXS$TMR                                    File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:30:51.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     1      1  KXS$TMR
    1  RoData even  UTS      4      4  KXS$TMR
    2   Proc  even  none   751    2EF  KXS$TMR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KXS$TMR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHI$DISABLE
 yes     yes           Std       1 KXF$FRAME
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       1 KXP$PACKET
 yes     yes           Std       2 KHA$GET_CTX_PTR
 yes     yes           Std       6 KHA$DVCADM
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       2 KHA$ERRLOG
 yes     yes           Std       1 KXV$VCNTW
 yes     yes           Std       2 KVB$RLSSYS
 yes     yes           Std       1 KVM$SNDCQ
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:281  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KH_CTLTBL                             KX_CNTX                               KX_SLLIST
     KX_TMRBLK                             KX_STATS_HDLC                         KX_LINERRDSCLMT
     KX_SYSLOG                             KX_PM$                                G$JIT$
     FPT_CONNECT_C                         FPT_TERM_C                       r    G$ROS$
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:282  


     1388        1        /*T***********************************************************/
     1389        2        /*T*                                                         */
     1390        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1391        4        /*T*                                                         */
     1392        5        /*T***********************************************************/
     1393        6        /*F* NAME: KXS$TMR                   */
     1394        7        /*F* PURPOSE: Handle X.25 clock event scheduling  */
     1395        8
     1396        9        /*D* NAME: KXS$TMR                   */
     1397       10        /*D* PURPOSE: Handle one second clock events from
     1398       11                      clock management, turning those into
     1399       12                      X.25 events when necessary.  */
     1400       13        /*D* CALL: CALL KXS$TMR ( FPT_EXP );  */
     1401       14        /*D* INPUT: FPT_EXP - not used       */
     1402       15        /*D* OUTPUT: none                    */
     1403       16
     1404       17        KXS$TMR: PROC ( JUNK );

     17   2 000000  D380 0000 0000  xent KXS$TMR         LNJ,B5   X6A_AUTO_1
          2 000003       007E 0001                       DC       126,1

     1405       18
     1406       19        /*****************************************************************
     1407       20        *                           Includes                             *
     1408       21        *                                                                *
     1409       22        *****************************************************************/
     1410       23
     1411       24        %INCLUDE K_ID_E;
     1412       74        %K#ENTID_E;
     1413       93        %K#LYRID_E;
     1414      100        %INCLUDE KL_SUPER_C;
     1415     3002        %INCLUDE KL_MACRO_C;
     1416     6354        %INCLUDE KL_AFCN_C;
     1417     6455        %INCLUDE LCP_6;
     1418    10734        %INCLUDE CP_6_SUBS;
     1419    11274        %INCLUDE KH_MACRO_C;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:283  
     1420    12017        %INCLUDE KHA_FNC_E;
     1421    12117        %INCLUDE KL_CONTROL_C;
     1422    12497        %INCLUDE KX_EQUS_E;
     1423    12936        %INCLUDE KX_PERR_C;
     1424    13065        %INCLUDE KX_SCODE_C;
     1425    13131        %INCLUDE KX_DATA_C;
     1426    13199        %INCLUDE KX_MACROS_M;
     1427    13970        %INCLUDE KV_GLBCNS_E;
     1428    14311        %KV#CQ_HNDID_E;
     1429    14316        %INCLUDE KH$CHN;
     1430    14438        %INCLUDE G_JIT_M;
     1431    14703        %INCLUDE K_ADDRESS_M;
     1432    15206        %INCLUDE KNH_MACRO_C;
     1433    15489        %EJECT;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:284  
     1434    15490        /*****************************************************************
     1435    15491        *                                                                *
     1436    15492        *                          External References                   *
     1437    15493        *                                                                *
     1438    15494        *****************************************************************/
     1439    15495
     1440    15496    1   DCL KHI$DISABLE ENTRY (1);
     1441    15497    1   DCL KHI$ENABLE ENTRY;
     1442    15498    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
     1443    15499    1   DCL KVB$RLS2NSYS ENTRY (2) ALTRET;
     1444    15500    1   DCL KXX$X29 ENTRY (1);
     1445    15501    1   DCL KHD$SCREECH ENTRY (1);
     1446    15502    1   DCL KXV$VCNTW ENTRY(1) ALTRET;
     1447    15503    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
     1448    15504    1   DCL KHA$GET_CTX_PTR ENTRY (2) ALTRET;
     1449    15505    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
     1450    15506    1   DCL KXF$FRAME ENTRY (1) ALTRET;
     1451    15507    1   DCL KXS$SYSLOG ENTRY (7);
     1452    15508    1   DCL KXP$PACKET ENTRY(1) ALTRET;
     1453    15509    1   DCL KVM$SNDCQ ENTRY (1) ALTRET;
     1454    15510        %EJECT;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:285  
     1455    15511        /*****************************************************************
     1456    15512        *                                                                *
     1457    15513        *                           Auto                                 *
     1458    15514        *                                                                *
     1459    15515        *****************************************************************/
     1460    15516
     1461    15517    1   DCL JUNK UBIN;
     1462    15518
     1463    15519        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = );
     1464    15563    1   DCL BLK$ PTR;
     1465    15564    1   DCL T$ PTR;
     1466    15565    1   DCL LEVEL UBIN;
     1467    15566    1   DCL KVBSIZ UBIN;
     1468    15567    1   DCL CHN$ PTR;
     1469    15568    1   DCL KHA_ERROR UBIN(32);
     1470    15569        %KNH$MESS ( FPTN = KNH_MESS, STCLASS = );
     1471    15618    1   DCL 1 KV@SNDCQ ALIGNED,
     1472    15619    1         2 MSG_ (0:5),
     1473    15620    1           3 ADR$ PTR,
     1474    15621    1           3 BYTX UBIN WORD,
     1475    15622    1           3 BYTSIZ UBIN WORD;
     1476    15623        %FPT_CONNECT ( FPTN = FPT@CONNECT, ADRTYP = X121, STCLASS = );
     1477    15794        %FPT_TERM ( FPTN = FPT@TERM, STCLASS = );
     1478    15816    1   DCL TRY_SNDCQ BIT (1);
     1479    15817
     1480    15818
     1481    15819        /*****************************************************************
     1482    15820        *                                                                *
     1483    15821        *                           Based                                *
     1484    15822        *                                                                *
     1485    15823        *****************************************************************/
     1486    15824
     1487    15825        %KX$TMRBLK ( STCLASS = "BASED ( BLK$ )" );
     1488    15857        %KX$TMRBLK ( FPTN = KX$BTMRBLK, STCLASS = BASED );
     1489    15889    1   DCL BASED_WORD UBIN BASED;
     1490    15890        %KX$SYSLOG_Q_ENTRY ( STCLASS = "BASED ( T$ )" );
     1491    15984        %KH$CHN ( STCLASS="BASED(CHN$)" );
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:286  
     1492    16108        %KX$L2 ( STCLASS = BASED );
     1493    16475        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
     1494    16889
     1495    16890
     1496    16891        /*****************************************************************
     1497    16892        *                                                                *
     1498    16893        *                           Static                               *
     1499    16894        *                                                                *
     1500    16895        *****************************************************************/
     1501    16896
     1502    16897        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = SYMREF );
     1503    17109        %KX_DATA;
     1504    17799    1   DCL ONE_MINUTE UBIN STATIC INIT(60);
     1505    17800        %EJECT;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:287  
     1506    17801        /*****************************************************************
     1507    17802        *                                                                *
     1508    17803        *                           Constant                             *
     1509    17804        *                                                                *
     1510    17805        *****************************************************************/
     1511    17806
     1512    17807        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
     1513    17808                           FPTN = HRDERR,
     1514    17809                           ERR# = %E_KXH_HRDERR# );
     1515    17855        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='F',SEV=%G_WRSYSLOG_SEV_SOFT#,
     1516    17856                            FPTN = REJ,
     1517    17857                            ERR# = %E_KXF_REJ# );
     1518    17903        /*E*    ERROR:      KXF-E_KXF_REJ#-3
     1519    17904                MESSAGE:    VAL(0) has #REJ frames received in last minute.
     1520    17905        */
     1521    17906    1   DCL G$JIT$ PTR SYMREF;
     1522    17907        %FPT_CONNECT ( FPTN = FPT_CONNECT_C, STCLASS = SYMREF );
     1523    17976        %FPT_TERM ( FPTN = FPT_TERM_C, STCLASS = SYMREF );
     1524    17998        %EJECT;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:288  
     1525    17999        /*****************************************************************
     1526    18000        *                                                                *
     1527    18001        *                           Procedure                            *
     1528    18002        *                                                                *
     1529    18003        *****************************************************************/
     1530    18004
     1531    18005        /*
     1532    18006                                             Since the clock routine runs at
     1533    18007                                             the background level, disable.
     1534    18008        */
     1535    18009            %DISABLE;

  18010   2 000005  EC80 0000 0002  xsym                 LDB,B6   KH_CTLTBL+2
          2 000008  E806                                 LDR,R6   ,B6
          2 000009  EF47 001A                            STR,R6   LEVEL,AUTO

  18010   2 00000B  DBC7 001A                            LAB,B5   LEVEL,AUTO
          2 00000D  DFC7 0072                            STB,B5   TRY_SNDCQ+1,AUTO
          2 00000F  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 000011  CBF0 0100                            LAB,B4   256,IMO
          2 000013  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 000016       0001                            DC       s:18013,PREL

     1536    18012
     1537    18013    1       BLK$ = KX_TMRBLK.QHD$;

  18013   2 000017  EC80 0000 0000  xsym                 LDB,B6   KX_TMRBLK
          2 00001A  EFC7 0016                            STB,B6   BLK$,AUTO

     1538    18014    2       DO WHILE ( BLK$ ~= ADDR(NIL) );

  18014   2 00001C  0F81 0084                            B        s:18056,PREL

     1539    18015    2          T$ = KX$TMRBLK.FLNK$;

  18015   2 00001E  ECC7 0016                            LDB,B6   BLK$,AUTO
          2 000020  DC86                                 LDB,B5   ,B6
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:289  
          2 000021  DFC7 0018                            STB,B5   T$,AUTO

     1540    18016    2          IF NOT KX$TMRBLK.ON

  18016   2 000023  89C6 0009                            CMZ      9,B6
          2 000025  0801 002A                            BAL      s:18036,PREL

     1541    18017        /*
     1542    18018           All timer blocks in the chain should be ON. For whatever reason
     1543    18019           this block is here, ignore it and delink it.
     1544    18020        */
     1545    18021    2             THEN
     1546    18022    3                DO;

     1547    18023    3                   KX$TMRBLK.ON = '1'B;

  18023   2 000027  8946 0009                            LBT,'8000'X       9,B6
  18023   2 000029       8000

     1548    18024                        %STOP_TIMER ( FPTN = KX$TMRBLK );

  18029   2 00002A  89C6 0009                            CMZ      9,B6
          2 00002C  0881 0070                            BAGE     s:18055,PREL

  18029   2 00002E  8846 0009                            LBF,'8000'X       9,B6
  18029   2 000030       8000

  18029   2 000031  8D86                                 CMN      ,B6
          2 000032  0981 0008                            BNE      s:18029+17,PREL

  18029   2 000034  DCC6 0002                            LDB,B5   2,B6
          2 000036  DF80 0000 0002  xsym                 STB,B5   KX_TMRBLK+2
          2 000039  0F81 0006                            B        s:18030,PREL

  18029   2 00003B  DC86                                 LDB,B5   ,B6
          2 00003C  CCC6 0002                            LDB,B4   2,B6
          2 00003E  CFC5 0002                            STB,B4   2,B5
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:290  

  18030   2 000040  8DC6 0002                            CMN      2,B6
          2 000042  0981 0007                            BNE      s:18030+10,PREL

  18030   2 000044  DC86                                 LDB,B5   ,B6
          2 000045  DF80 0000 0000  xsym                 STB,B5   KX_TMRBLK
          2 000048  0F81 0054                            B        s:18055,PREL

  18030   2 00004A  DCC6 0002                            LDB,B5   2,B6
          2 00004C  CC86                                 LDB,B4   ,B6
          2 00004D  CF85                                 STB,B4   ,B5

     1549    18033    3                END;

  18033   2 00004E  0F81 004E                            B        s:18055,PREL

     1550    18034    2             ELSE
     1551    18035    3                DO;

     1552    18036    3                   KX$TMRBLK.CNT = KX$TMRBLK.CNT - 1;

  18036   2 000050  E846 0008                            LDR,R6   8,B6
          2 000052  EA70 00FF                            ADD,R6   255,IMO
          2 000054  EAC6 0008                            SRM,R6,'00FF'X    8,B6
          2 000056       00FF

     1553    18037    3                   IF KX$TMRBLK.CNT = 0

  18037   2 000057  82C6 0008                            LB,'00FF'X        8,B6
  18037   2 000059       00FF
          2 00005A  0501 0042                            BBT      s:18055,PREL

     1554    18038    3                      THEN
     1555    18039    4                         DO;

     1556    18040                                 %STOP_TIMER ( FPTN = KX$TMRBLK );

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:291  
  18045   2 00005C  89C6 0009                            CMZ      9,B6
          2 00005E  0881 0021                            BAGE     s:18049,PREL

  18045   2 000060  8846 0009                            LBF,'8000'X       9,B6
  18045   2 000062       8000

  18045   2 000063  8D86                                 CMN      ,B6
          2 000064  0981 0008                            BNE      s:18045+17,PREL

  18045   2 000066  DCC6 0002                            LDB,B5   2,B6
          2 000068  DF80 0000 0002  xsym                 STB,B5   KX_TMRBLK+2
          2 00006B  0F81 0006                            B        s:18046,PREL

  18045   2 00006D  DC86                                 LDB,B5   ,B6
          2 00006E  CCC6 0002                            LDB,B4   2,B6
          2 000070  CFC5 0002                            STB,B4   2,B5

  18046   2 000072  8DC6 0002                            CMN      2,B6
          2 000074  0981 0007                            BNE      s:18046+10,PREL

  18046   2 000076  DC86                                 LDB,B5   ,B6
          2 000077  DF80 0000 0000  xsym                 STB,B5   KX_TMRBLK
          2 00007A  0F81 0005                            B        s:18049,PREL

  18046   2 00007C  DCC6 0002                            LDB,B5   2,B6
          2 00007E  CC86                                 LDB,B4   ,B6
          2 00007F  CF85                                 STB,B4   ,B5

     1557    18049    4                            CALL_FPT = '0'B;

  18049   2 000080  5C20                                 LDV,R5   32
          2 000081  0021                                 ALR      ;
          2 000082       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 000084       4007 0006                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

     1558    18050    4                            CALL_FPT.EVN = KX$TMRBLK.PRM;

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:292  
  18050   2 000086  437F                                 CSYNC    s:18049+5,SPREL
          2 000087  ECC7 0016                            LDB,B6   BLK$,AUTO
          2 000089  E2C6 0008                            LLH,R6   8,B6
          2 00008B  EF47 0006                            STR,R6   CALL_FPT,AUTO

     1559    18051    4                            CALL_FPT.RCV$ = KX$TMRBLK.CTX$;

  18051   2 00008D  DCC6 0004                            LDB,B5   4,B6
          2 00008F  DFC7 0009                            STB,B5   CALL_FPT+3,AUTO

     1560    18052    4                            CALL KX$TMRBLK.SBR$ ( CALL_FPT );

  18052   2 000091  CBC7 0006                            LAB,B4   CALL_FPT,AUTO
          2 000093  CFC7 0072                            STB,B4   TRY_SNDCQ+1,AUTO
          2 000095  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 000097  9CC6 0006                            LDB,B1   6,B6
          2 000099  CBF0 0100                            LAB,B4   256,IMO
          2 00009B  E381                                 LNJ,B6   ,B1
          2 00009C       0001                            DC       s:18055,PREL

     1561    18053    4                         END;

     1562    18054    3                END;

     1563    18055    2          BLK$ = T$;

  18055   2 00009D  ECC7 0018                            LDB,B6   T$,AUTO
          2 00009F  EFC7 0016                            STB,B6   BLK$,AUTO

     1564    18056    2       END;

  18056   2 0000A1  8DC7 0016                            CMN      BLK$,AUTO
          2 0000A3  0981 FF7A                            BNE      s:18015,PREL

     1565    18057
     1566    18058        /*
     1567    18059           Every second, call KXV$VCNTW so that SL can retry messages
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:293  
     1568    18060           that failed to make it in the SCQ.
     1569    18061        */
     1570    18062    1       CALL_FPT = '0'B;

  18062   2 0000A5  5C20                                 LDV,R5   32
          2 0000A6  0021                                 ALR      ;
          2 0000A7       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0000A9       4007 0006                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

     1571    18063    1       IF KX_SLLIST.HD$ ~= ADDR(NIL)

  18063   2 0000AB  8D80 0000 0000  xsym                 CMN      KX_SLLIST
          2 0000AE  437F                                 CSYNC    s:18063+2,SPREL
          2 0000AF  0901 0015                            BE       s:18071,PREL

     1572    18064    1          THEN
     1573    18065    2             DO;

     1574    18066    2                CALL_FPT.EVN = %KX_CM_EV_CHKSCQ#;

  18066   2 0000B1  6C16                                 LDV,R6   22
          2 0000B2  EF47 0006                            STR,R6   CALL_FPT,AUTO

     1575    18067    2                CALL_FPT.RCV$ = KX_SLLIST.HD$;

  18067   2 0000B4  EC80 0000 0000  xsym                 LDB,B6   KX_SLLIST
          2 0000B7  EFC7 0009                            STB,B6   CALL_FPT+3,AUTO

     1576    18068    2                CALL KXV$VCNTW ( CALL_FPT );

  18068   2 0000B9  DBC7 0006                            LAB,B5   CALL_FPT,AUTO
          2 0000BB  DFC7 0072                            STB,B5   TRY_SNDCQ+1,AUTO
          2 0000BD  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 0000BF  CBF0 0100                            LAB,B4   256,IMO
          2 0000C1  E380 0000 0000  xent                 LNJ,B6   KXV$VCNTW
          2 0000C4       0001                            DC       s:18071,PREL

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:294  
     1577    18069    2             END;

     1578    18070
     1579    18071    1       TRY_SNDCQ = '1'B;

  18071   2 0000C5  8947 0071                            LBT,'8000'X       TRY_SNDCQ,AUTO
  18071   2 0000C7       8000

     1580    18072    1       FPT@CONNECT = FPT_CONNECT_C;

  18072   2 0000C8  EB80 0000 0000  xsym                 LAB,B6   FPT_CONNECT_C
          2 0000CB  4C26                                 LDV,R4   38
          2 0000CC  5C5A                                 LDV,R5   90
          2 0000CD  0021                                 ALR      ;
          2 0000CE       4006 0000                                ALPHANUM(0,B6,,R4),;
          2 0000D0       4007 0040                                ALPHANUM(FPT@CONNECT,AUTO,,R5,FILL)

     1581    18073    1       FPT@CONNECT.RLCID.FLAGS.VIRCIR = '0'B;

  18073   2 0000D2  437F                                 CSYNC    s:18072+9,SPREL
          2 0000D3  8847 004E                            LBF,'4000'X       FPT@CONNECT+14,AUTO
          2 0000D5       4000

     1582    18074    1       FPT@TERM = FPT_TERM_C;

  18074   2 0000D6  AB80 0000 0000  xsym                 LAB,B2   FPT_TERM_C
          2 0000D9  2C00                                 LDV,R2   0
          2 0000DA  6C08                                 LDV,R6   8
          2 0000DB  BBC7 006D                            LAB,B3   FPT@TERM,AUTO
          2 0000DD  3C00                                 LDV,R3   0
          2 0000DE  0008                                 MMM

     1583    18075    1       KNH_MESS = '0'B;

  18075   2 0000DF  5C10                                 LDV,R5   16
          2 0000E0  0021                                 ALR      ;
          2 0000E1       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:295  
          2 0000E3       4007 0020                                ALPHANUM(KNH_MESS,AUTO,,R5,FILL)

     1584    18076    1       KV@SNDCQ = '0'B;

  18076   2 0000E5  5C30                                 LDV,R5   48
          2 0000E6  0021                                 ALR      ;
          2 0000E7       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0000E9       4007 0028                                ALPHANUM(KV@SNDCQ,AUTO,,R5,FILL)

     1585    18077    1       KV@SNDCQ.MSG_.ADR$ (0) = ADDR ( KNH_MESS );

  18077   2 0000EB  EBC7 0020                            LAB,B6   KNH_MESS,AUTO
          2 0000ED  437F                                 CSYNC    s:18077+1,SPREL
          2 0000EE  EFC7 0028                            STB,B6   KV@SNDCQ,AUTO

     1586    18078    1       KV@SNDCQ.MSG_.BYTSIZ (0) = ( LENGTHC (KNH_MESS) + 3 ) / 4 * 4;

  18078   2 0000F0  6C10                                 LDV,R6   16
          2 0000F1  EF47 002B                            STR,R6   KV@SNDCQ+3,AUTO

     1587    18079        /*
     1588    18080           check need for link assurance.
     1589    18081            Also check the need to send any INIT or TERM.
     1590    18082        */
     1591    18083    1       ONE_MINUTE = ONE_MINUTE - 1;

  18083   2 0000F3  8880 0000 0000  00                   DEC      ONE_MINUTE

     1592    18084    1       IF ONE_MINUTE = 0 THEN ONE_MINUTE = 60;

  18084   2 0000F6  B800 0000 0000  00                   LDR,R3   ONE_MINUTE
          2 0000F9  3981 0005                            BNEZ,R3  s:18085,PREL

  18084   2 0000FB  3C3C                                 LDV,R3   60
          2 0000FC  BF00 0000 0000  00                   STR,R3   ONE_MINUTE

     1593    18085    1       CALL_FPT.EVN = %KX_F_EV_TO#;
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:296  

  18085   2 0000FF  2C03                                 LDV,R2   3
          2 000100  AF47 0006                            STR,R2   CALL_FPT,AUTO

     1594    18086    1       T$ = KX_CNTX.HD$;

  18086   2 000102  DC80 0000 0000  xsym                 LDB,B5   KX_CNTX
          2 000105  DFC7 0018                            STB,B5   T$,AUTO

     1595    18087    2       DO WHILE ( T$ ~= ADDR(NIL) );

  18087   2 000107  0F81 00DA                            B        s:18166,PREL

     1596    18088    2          IF T$->KX$L2.IDL_PRD ~= 0 AND T$->KX$L2.STATE.CURRENT = 4

  18088   2 000109  ECC7 0018                            LDB,B6   T$,AUTO
          2 00010B  82C6 0055                            LB,'00FF'X        85,B6
          2 00010D       00FF
          2 00010E  0581 0032                            BBF      s:18105,PREL
          2 000110  E2C6 001D                            LLH,R6   29,B6
          2 000112  6D04                                 CMV,R6   4
          2 000113  0981 002D                            BNE      s:18105,PREL
          2 000115  DCC6 0002                            LDB,B5   2,B6
          2 000117  D845 0005                            LDR,R5   5,B5
          2 000119  D570 0200                            AND,R5   512,IMO
          2 00011B  5981 0025                            BNEZ,R5  s:18105,PREL
          2 00011D  89C6 0047                            CMZ      71,B6
          2 00011F  0801 0021                            BAL      s:18105,PREL

     1597    18089    2             AND NOT T$->KX$L2.CHN$->KH$CHN.ATTR&%G_ATTR_CL_SLCC
     1598    18090    2             AND NOT T$->KX$L2.TMRBLK.ON
     1599    18091    2             THEN
     1600    18092    3                DO;

     1601    18093    3                   T$->KX$L2.IDL_CLK = T$->KX$L2.IDL_CLK - 1;

  18093   2 000121  D2C6 0056                            LLH,R5   86,B6
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:297  
          2 000123  5EFF                                 ADV,R5   -1
          2 000124  D7C6 0056                            STH,R5   86,B6

     1602    18094    3                   IF T$->KX$L2.IDL_CLK = 0

  18094   2 000126  D2C6 0056                            LLH,R5   86,B6
          2 000128  5981 0018                            BNEZ,R5  s:18105,PREL

     1603    18095    3                      THEN
     1604    18096    4                         DO;

     1605    18097    4                            KX_STATS_HDLC.TIMEOUTS = KX_STATS_HDLC.TIMEOUTS - 1;

  18097   2 00012A  8C80 0000 0022  xsym                 LDI      KX_STATS_HDLC+34
          2 00012D  8470 FFFF FFFF                       AID      -1,IMO
          2 000130  8D00 0000 0022  xsym                 SDI      KX_STATS_HDLC+34

     1606    18098    4                            CALL_FPT.RCV$ = T$;

  18098   2 000133  EFC7 0009                            STB,B6   CALL_FPT+3,AUTO

     1607    18099    4                            CALL KXF$FRAME ( CALL_FPT );

  18099   2 000135  DBC7 0006                            LAB,B5   CALL_FPT,AUTO
          2 000137  DFC7 0072                            STB,B5   TRY_SNDCQ+1,AUTO
          2 000139  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 00013B  CBF0 0100                            LAB,B4   256,IMO
          2 00013D  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 000140       0001                            DC       s:18105,PREL

     1608    18100    4                         END;

     1609    18101    3                END;

     1610    18102        /*
     1611    18103           Check for need to log REJ frames.
     1612    18104        */
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:298  
     1613    18105    2          IF ONE_MINUTE = 60 AND T$->KX$L2.REJ_CNT > 0

  18105   2 000141  E800 0000 0000  00                   LDR,R6   ONE_MINUTE
          2 000144  6D3C                                 CMV,R6   60
          2 000145  0981 0027                            BNE      s:18130,PREL
          2 000147  ECC7 0018                            LDB,B6   T$,AUTO
          2 000149  D846 0057                            LDR,R5   87,B6
          2 00014B  5901 0021                            BEZ,R5   s:18130,PREL

     1614    18106    2             THEN
     1615    18107    3                DO;

     1616    18108                        %WRSYSLOG ( ERRCOD = REJ,
     1617    18109                        TRMID = "T$->KX$L2.CHN$->KH$CHN.TERMID",
     1618    18110                        VAL0 = "T$->KX$L2.REJ_CNT" );

  18126   2 00014D  DCC6 0002                            LDB,B5   2,B6
          2 00014F  CBC6 0057                            LAB,B4   87,B6
          2 000151  CFC7 0078                            STB,B4   TRY_SNDCQ+7,AUTO
          2 000153  BB80 0000 0000                       LAB,B3   0
          2 000156  BFC7 0076                            STB,B3   TRY_SNDCQ+5,AUTO
          2 000158  ABC5 0012                            LAB,B2   18,B5
          2 00015A  AFC7 0074                            STB,B2   TRY_SNDCQ+3,AUTO
          2 00015C  DB80 0000 0002  01                   LAB,B5   REJ
          2 00015F  DFC7 0072                            STB,B5   TRY_SNDCQ+1,AUTO
          2 000161  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 000163  CBF0 0400                            LAB,B4   1024,IMO
          2 000165  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 000168       0001                            DC       s:18128,PREL

     1619    18128    3                   T$->KX$L2.REJ_CNT = 0;

  18128   2 000169  ECC7 0018                            LDB,B6   T$,AUTO
          2 00016B  8746 0057                            CL       87,B6

     1620    18129    3                END;

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:299  
     1621    18130    2          IF T$->KX$L2.INIT_ALTRET AND TRY_SNDCQ

  18130   2 00016D  ECC7 0018                            LDB,B6   T$,AUTO
          2 00016F  82C6 0067                            LB,'0080'X        103,B6
          2 000171       0080
          2 000172  0581 003A                            BBF      s:18148,PREL
          2 000174  89C7 0071                            CMZ      TRY_SNDCQ,AUTO
          2 000176  0881 0036                            BAGE     s:18148,PREL

     1622    18131    2             THEN
     1623    18132    3                DO;

     1624    18133    3                   FPT@CONNECT.TERMINAL_ID = T$->KX$L2.CHN$->KH$CHN.TERMID;

  18133   2 000178  DCC6 0002                            LDB,B5   2,B6
          2 00017A  AB85                                 LAB,B2   ,B5
          2 00017B  2C24                                 LDV,R2   36
          2 00017C  6C10                                 LDV,R6   16
          2 00017D  BBC7 0045                            LAB,B3   FPT@CONNECT+5,AUTO
          2 00017F  3C00                                 LDV,R3   0
          2 000180  0008                                 MMM

     1625    18134    3                   FPT@CONNECT.DSTSNPA = T$->KX$L2.DSTSNPA;

  18134   2 000181  ACC7 0018                            LDB,B2   T$,AUTO
          2 000183  ABC2 0062                            LAB,B2   98,B2
          2 000185  2C00                                 LDV,R2   0
          2 000186  6C08                                 LDV,R6   8
          2 000187  BBC7 0069                            LAB,B3   FPT@CONNECT+41,AUTO
          2 000189  3C00                                 LDV,R3   0
          2 00018A  0008                                 MMM

     1626    18135    3                   KNH_MESS.FUNCTION = %KN_FCN_INIT;

  18135   2 00018B  6C01                                 LDV,R6   1
          2 00018C  EF47 0020                            STR,R6   KNH_MESS,AUTO

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:300  
     1627    18136    3                   KNH_MESS.FPTSZ = 2 * SIZEW ( FPT@CONNECT );

  18136   2 00018E  5C5A                                 LDV,R5   90
          2 00018F  DF47 0026                            STR,R5   KNH_MESS+6,AUTO

     1628    18137    3                   KV@SNDCQ.MSG_.ADR$ (1) = ADDR ( FPT@CONNECT );

  18137   2 000191  EBC7 0040                            LAB,B6   FPT@CONNECT,AUTO
          2 000193  EFC7 002C                            STB,B6   KV@SNDCQ+4,AUTO

     1629    18138    3                   KV@SNDCQ.MSG_.BYTSIZ (1) = ( LENGTHC(FPT@CONNECT)+3 )/4*4;

  18138   2 000195  4C5C                                 LDV,R4   92
          2 000196  CF47 002F                            STR,R4   KV@SNDCQ+7,AUTO

     1630    18139    3                   CALL KVM$SNDCQ ( KV@SNDCQ ) WHENRETURN

  18139   2 000198  CBC7 0028                            LAB,B4   KV@SNDCQ,AUTO
          2 00019A  CFC7 0072                            STB,B4   TRY_SNDCQ+1,AUTO
          2 00019C  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 00019E  CBF0 0100                            LAB,B4   256,IMO
          2 0001A0  E380 0000 0000  xent                 LNJ,B6   KVM$SNDCQ
          2 0001A3       0008                            DC       s:18145,PREL

     1631    18140    4                         DO;

     1632    18141    4                            T$->KX$L2.INIT_ALTRET = '0'B;

  18141   2 0001A4  ECC7 0018                            LDB,B6   T$,AUTO
          2 0001A6  8846 0067                            LBF,'0080'X       103,B6
          2 0001A8       0080

     1633    18142    4                         END;

  18142   2 0001A9  0F81 0003                            B        s:18148,PREL

     1634    18143    3                      WHENALTRETURN
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:301  
     1635    18144    4                         DO;

     1636    18145    4                            TRY_SNDCQ = '0'B;

  18145   2 0001AB  8747 0071                            CL       TRY_SNDCQ,AUTO

     1637    18146    4                         END;

     1638    18147    3                END;

     1639    18148    2          IF T$->KX$L2.TERM_ALTRET AND TRY_SNDCQ

  18148   2 0001AD  ECC7 0018                            LDB,B6   T$,AUTO
          2 0001AF  82C6 0067                            LB,'0040'X        103,B6
          2 0001B1       0040
          2 0001B2  0581 002A                            BBF      s:18165,PREL
          2 0001B4  89C7 0071                            CMZ      TRY_SNDCQ,AUTO
          2 0001B6  0881 0026                            BAGE     s:18165,PREL

     1640    18149    2             THEN
     1641    18150    3                DO;

     1642    18151    3                   FPT@TERM.RLCID.LDCTX =  T$->KX$L2.LDCTX;

  18151   2 0001B8  E846 0066                            LDR,R6   102,B6
          2 0001BA  EF47 006E                            STR,R6   FPT@TERM+1,AUTO

     1643    18152    3                   KNH_MESS.FUNCTION = %KN_FCN_TERM;

  18152   2 0001BC  5C03                                 LDV,R5   3
          2 0001BD  DF47 0020                            STR,R5   KNH_MESS,AUTO

     1644    18153    3                   KNH_MESS.FPTSZ = 2 * SIZEW ( FPT@TERM );

  18153   2 0001BF  4C08                                 LDV,R4   8
          2 0001C0  CF47 0026                            STR,R4   KNH_MESS+6,AUTO

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:302  
     1645    18154    3                   KV@SNDCQ.MSG_.ADR$ (1) = ADDR ( FPT@TERM );

  18154   2 0001C2  DBC7 006D                            LAB,B5   FPT@TERM,AUTO
          2 0001C4  DFC7 002C                            STB,B5   KV@SNDCQ+4,AUTO

     1646    18155    3                   KV@SNDCQ.MSG_.BYTSIZ (1) = ( LENGTHC(FPT@TERM)+3 )/4*4;

  18155   2 0001C6  CF47 002F                            STR,R4   KV@SNDCQ+7,AUTO

     1647    18156    3                   CALL KVM$SNDCQ ( KV@SNDCQ ) WHENRETURN

  18156   2 0001C8  CBC7 0028                            LAB,B4   KV@SNDCQ,AUTO
          2 0001CA  CFC7 0072                            STB,B4   TRY_SNDCQ+1,AUTO
          2 0001CC  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 0001CE  CBF0 0100                            LAB,B4   256,IMO
          2 0001D0  E380 0000 0000  xent                 LNJ,B6   KVM$SNDCQ
          2 0001D3       0008                            DC       s:18162,PREL

     1648    18157    4                         DO;

     1649    18158    4                            T$->KX$L2.TERM_ALTRET = '0'B;

  18158   2 0001D4  ECC7 0018                            LDB,B6   T$,AUTO
          2 0001D6  8846 0067                            LBF,'0040'X       103,B6
          2 0001D8       0040

     1650    18159    4                         END;

  18159   2 0001D9  0F81 0003                            B        s:18165,PREL

     1651    18160    3                      WHENALTRETURN
     1652    18161    4                         DO;

     1653    18162    4                            TRY_SNDCQ = '0'B;

  18162   2 0001DB  8747 0071                            CL       TRY_SNDCQ,AUTO

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:303  
     1654    18163    4                         END;

     1655    18164    3                END;

     1656    18165    2          T$ = T$->KX$L2.NEXT$;

  18165   2 0001DD  ECC7 0018                            LDB,B6   T$,AUTO
          2 0001DF  DC86                                 LDB,B5   ,B6
          2 0001E0  DFC7 0018                            STB,B5   T$,AUTO

     1657    18166    2       END;

  18166   2 0001E2  8DC7 0018                            CMN      T$,AUTO
          2 0001E4  0981 FF24                            BNE      s:18088,PREL

     1658    18167        /*
     1659    18168           Call kxp to look for idle circuits.
     1660    18169        */
     1661    18170    1       CALL_FPT.EVN = %KX_P_EV_IDLCLK#;

  18170   2 0001E6  6C17                                 LDV,R6   23
          2 0001E7  EF47 0006                            STR,R6   CALL_FPT,AUTO

     1662    18171    1       CALL_FPT.RCV$ = ADDR(NIL);

  18171   2 0001E9  EB80 0000 0000                       LAB,B6   0
          2 0001EC  EFC7 0009                            STB,B6   CALL_FPT+3,AUTO

     1663    18172    1       CALL KXP$PACKET ( CALL_FPT );

  18172   2 0001EE  CBC7 0006                            LAB,B4   CALL_FPT,AUTO
          2 0001F0  CFC7 0072                            STB,B4   TRY_SNDCQ+1,AUTO
          2 0001F2  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 0001F4  CBF0 0100                            LAB,B4   256,IMO
          2 0001F6  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          2 0001F9       0001                            DC       s:18179,PREL

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:304  
     1664    18173        /*
     1665    18174                                             If any syslogs could not be
     1666    18175                                             processed off of an inhibited
     1667    18176                                             level, they are queued and
     1668    18177                                             should be sent now.
     1669    18178        */
     1670    18179    2   SYSLOG_LOOP: DO WHILE ( KX_SYSLOG.HD$ ~= ADDR(NIL) );

  18179   2 0001FA  0F81 00D3            SYSLOG_LOOP     B        s:18238,PREL

     1671    18180    2          T$ = KX_SYSLOG.HD$;

  18180   2 0001FC  EC80 0000 0000  xsym                 LDB,B6   KX_SYSLOG
          2 0001FF  EFC7 0018                            STB,B6   T$,AUTO

     1672    18181    2          KVBSIZ = SIZEW ( KX$SYSLOG_Q_ENTRY );

  18181   2 000201  E846 0017                            LDR,R6   23,B6
          2 000203  6003                                 SOL,R6   3
          2 000204  EA70 018F                            ADD,R6   399,IMO
          2 000206  6044                                 SOR,R6   4
          2 000207  EF47 001B                            STR,R6   KVBSIZ,AUTO

     1673    18182    2          IF KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD = HRDERR

  18182   2 000209  DB80 0000 0000  01                   LAB,B5   HRDERR
          2 00020C  5C04                                 LDV,R5   4
          2 00020D  0022                                 ACM      ;
          2 00020E       4406 0008                                ALPHANUM(8,B6,,4,FILL),;
          2 000210       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          2 000212  5301 0063                            CBNE     s:18216,PREL

     1674    18183    2             THEN
     1675    18184    3                DO;

     1676    18185    3                   IF ( KX$SYSLOG_Q_ENTRY.NXT$ = ADDR(NIL) )

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:305  
  18185   2 000214  8D86                                 CMN      ,B6
          2 000215  0981 000C                            BNE      s:18197,PREL

     1677    18186    3                      THEN
     1678    18187    4                         DO;

     1679    18188    4                            KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(0) =

  18188   2 000217  8AC6 0012                            INC      18,B6

     1680    18189    4                               KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(0) + 1;
     1681    18190    4                            IF ( KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(0) < 60 )

  18190   2 000219  DCC7 0018                            LDB,B5   T$,AUTO
          2 00021B  E845 0012                            LDR,R6   18,B5
          2 00021D  6D3C                                 CMV,R6   60
          2 00021E  0201 00B4                            BL       s:18239,PREL

     1682    18191    4                               THEN
     1683    18192    4                                  EXIT SYSLOG_LOOP;
     1684    18193    4                               ELSE
     1685    18194    4                                  GOTO KILL_LINK;

  18194   2 000220  0F81 0001                            B        s:18197,PREL

     1686    18195    4                         END;
     1687    18196    3                      ELSE
     1688    18197    3   KILL_LINK:            IF ( KX_LINERRDSCLMT ~= 255 ) AND

  18197   2 000222  E800 0000 0000  xsym KILL_LINK       LDR,R6   KX_LINERRDSCLMT
          2 000225  E970 00FF                            CMR,R6   255,IMO
          2 000227  0901 004E                            BE       s:18216,PREL
          2 000229  DCC7 0018                            LDB,B5   T$,AUTO
          2 00022B  E945 0014                            CMR,R6   20,B5
          2 00022D  0281 0048                            BGE      s:18216,PREL

     1689    18198    3                            ( KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(2) > KX_LINERRDSCLMT )
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:306  
     1690    18199    3                            THEN
     1691    18200    4                               DO;

     1692    18201    4                                 CALL KHA$GET_CTX_PTR ( KX$SYSLOG_Q_ENTRY.FPT.V.TRMID,
             18201                                           CHN$ )

  18201   2 00022F  CBC7 001C                            LAB,B4   CHN$,AUTO
          2 000231  CFC7 0074                            STB,B4   TRY_SNDCQ+3,AUTO
          2 000233  BBC5 000A                            LAB,B3   10,B5
          2 000235  BFC7 0072                            STB,B3   TRY_SNDCQ+1,AUTO
          2 000237  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 000239  CBF0 0200                            LAB,B4   512,IMO
          2 00023B  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          2 00023E       0003                            DC       s:18203,PREL
          2 00023F  0F81 0009                            B        s:18206,PREL

     1693    18202    5                                     WHENALTRETURN DO;

     1694    18203    5                                           KX_SYSLOG.HD$ = KX$SYSLOG_Q_ENTRY.NXT$;

  18203   2 000241  ECC7 0018                            LDB,B6   T$,AUTO
          2 000243  DC86                                 LDB,B5   ,B6
          2 000244  DF80 0000 0000  xsym                 STB,B5   KX_SYSLOG

     1695    18204    5                                           GOTO RLS;

  18204   2 000247  0F81 0076                            B        s:18236,PREL

     1696    18205    5                                        END;
     1697    18206    5                                  IF KH$CHN.CTX$ ~= ADDR(NIL) THEN DO;

  18206   2 000249  ECC7 001C                            LDB,B6   CHN$,AUTO
          2 00024B  8DC6 000C                            CMN      12,B6
          2 00024D  0901 0022                            BE       s:18213,PREL

     1698    18207    5                                           CALL KHA$DVCADM ( %KHA_FNC_KILL,

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:307  
  18207   2 00024F  DBF0 0003                            LAB,B5   3,IMO
          2 000251  CBF0 0001                            LAB,B4   1,IMO
          2 000253  CFC7 007C                            STB,B4   TRY_SNDCQ+11,AUTO
          2 000255  BB80 0000 0000                       LAB,B3   0
          2 000258  BFC7 007A                            STB,B3   TRY_SNDCQ+9,AUTO
          2 00025A  ABC6 0012                            LAB,B2   18,B6
          2 00025C  AFC7 0078                            STB,B2   TRY_SNDCQ+7,AUTO
          2 00025E  9BC6 0012                            LAB,B1   18,B6
          2 000260  9FC7 0076                            STB,B1   TRY_SNDCQ+5,AUTO
          2 000262  EBC7 001E                            LAB,B6   KHA_ERROR,AUTO
          2 000264  EFC7 0074                            STB,B6   TRY_SNDCQ+3,AUTO
          2 000266  DFC7 0072                            STB,B5   TRY_SNDCQ+1,AUTO
          2 000268  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 00026A  CBF0 0600                            LAB,B4   1536,IMO
          2 00026C  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          2 00026F       0001                            DC       s:18213,PREL

     1699    18208    5                                              KHA_ERROR,
     1700    18209    5                                              KH$CHN.TERMID,
     1701    18210    5                                              KH$CHN.TERMID, ,1 );
     1702    18211    5                                        END;

     1703    18212        /* Change the errlog to say LINERRDSC */
     1704    18213    4                                  KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD.ERR# = %
             18213                                           E_KXH_LINERRDSC#;

  18213   2 000270  6C40                                 LDV,R6   64
          2 000271  ECC7 0018                            LDB,B6   T$,AUTO
          2 000273  EAC6 0009                            SRM,R6,'FFF8'X    9,B6
          2 000275       FFF8

     1705    18214    4                               END;

     1706    18215    3                END;

     1707    18216    2          KX_SYSLOG.HD$ = KX$SYSLOG_Q_ENTRY.NXT$;

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:308  
  18216   2 000276  ECC7 0018                            LDB,B6   T$,AUTO
          2 000278  DC86                                 LDB,B5   ,B6
          2 000279  DF80 0000 0000  xsym                 STB,B5   KX_SYSLOG

     1708    18217    2          CALL KHA$ERRLOG ( KX$SYSLOG_Q_ENTRY.FPT, 1 )

  18217   2 00027C  CBF0 0001                            LAB,B4   1,IMO
          2 00027E  CFC7 0074                            STB,B4   TRY_SNDCQ+3,AUTO
          2 000280  BBC6 0002                            LAB,B3   2,B6
          2 000282  BFC7 0072                            STB,B3   TRY_SNDCQ+1,AUTO
          2 000284  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 000286  CBF0 0200                            LAB,B4   512,IMO
          2 000288  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 00028B       0003                            DC       s:18220,PREL
          2 00028C  0F81 0008                            B        s:18227,PREL

     1709    18218    2             WHENALTRETURN
     1710    18219    3                DO;

     1711    18220    3                   KX_SYSLOG.HD$ = T$;

  18220   2 00028E  ECC7 0018                            LDB,B6   T$,AUTO
          2 000290  EF80 0000 0000  xsym                 STB,B6   KX_SYSLOG

     1712    18221    3                   EXIT SYSLOG_LOOP;

  18221   2 000293  0F81 003F                            B        s:18239,PREL

     1713    18222    3                END;
     1714    18223        /*
     1715    18224           KX$SYSLOG_Q_ENTRY has a variable size char array at the end.
     1716    18225           But SIZEW still calculates the right size for you.
     1717    18226        */
     1718    18227    2          IF KX$SYSLOG_Q_ENTRY.FPT.V.TRMID.LEV = %TERMINAL_ID_LEV_CHAN# THEN

  18227   2 000295  ECC7 0018                            LDB,B6   T$,AUTO
          2 000297  E846 000A                            LDR,R6   10,B6
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:309  
          2 000299  E570 00FF                            AND,R6   255,IMO
          2 00029B  6D01                                 CMV,R6   1
          2 00029C  0981 0021                            BNE      s:18236,PREL

     1719    18228    2                CALL KHA$GET_CTX_PTR ( KX$SYSLOG_Q_ENTRY.FPT.V.TRMID, CHN$ )

  18228   2 00029E  DBC7 001C                            LAB,B5   CHN$,AUTO
          2 0002A0  DFC7 0074                            STB,B5   TRY_SNDCQ+3,AUTO
          2 0002A2  CBC6 000A                            LAB,B4   10,B6
          2 0002A4  CFC7 0072                            STB,B4   TRY_SNDCQ+1,AUTO
          2 0002A6  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 0002A8  CBF0 0200                            LAB,B4   512,IMO
          2 0002AA  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          2 0002AD       0011                            DC       s:18236,PREL

     1720    18229    2                   WHENRETURN
     1721    18230    3                      DO;

     1722    18231    4                         IF KH$CHN.CTX$ ~= ADDR(NIL) THEN DO;

  18231   2 0002AE  ECC7 001C                            LDB,B6   CHN$,AUTO
          2 0002B0  8DC6 000C                            CMN      12,B6
          2 0002B2  0901 0009                            BE       s:18235,PREL

     1723    18232    4                                  KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT =

  18232   2 0002B4  DCC6 000C                            LDB,B5   12,B6
          2 0002B6  E845 0052                            LDR,R6   82,B5
          2 0002B8  E247 001B                            SUB,R6   KVBSIZ,AUTO
          2 0002BA  EF45 0052                            STR,R6   82,B5

     1724    18233    4                                     KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT - KVBSIZ;
     1725    18234    4                               END;

     1726    18235    3                      END;

  18235   2 0002BC  0F81 0001                            B        s:18236,PREL
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:310  

     1727    18236    3                   WHENALTRETURN DO; /*N* Do we care? */ END;

     1728    18237    2   RLS:   CALL KVB$RLSSYS ( KVBSIZ, T$ );

  18237   2 0002BE  EBC7 0018            RLS             LAB,B6   T$,AUTO
          2 0002C0  EFC7 0074                            STB,B6   TRY_SNDCQ+3,AUTO
          2 0002C2  DBC7 001B                            LAB,B5   KVBSIZ,AUTO
          2 0002C4  DFC7 0072                            STB,B5   TRY_SNDCQ+1,AUTO
          2 0002C6  BBC7 0072                            LAB,B3   TRY_SNDCQ+1,AUTO
          2 0002C8  CBF0 0200                            LAB,B4   512,IMO
          2 0002CA  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 0002CD       0001                            DC       s:18238,PREL

     1729    18238    2       END;

  18238   2 0002CE  8D80 0000 0000  xsym                 CMN      KX_SYSLOG
          2 0002D1  0981 FF2A                            BNE      s:18180,PREL

     1730    18239    1       IF KX_SYSLOG.HD$ = ADDR(NIL)

  18239   2 0002D3  8D80 0000 0000  xsym                 CMN      KX_SYSLOG
          2 0002D6  0981 0007                            BNE      s:18244,PREL

     1731    18240    1          THEN
     1732    18241    1             KX_SYSLOG.TL$ = ADDR(NIL);

  18241   2 0002D8  EB80 0000 0000                       LAB,B6   0
          2 0002DB  EF80 0000 0002  xsym                 STB,B6   KX_SYSLOG+2

     1733    18242
     1734    18243            %ENABLE;

  18244   2 0002DE  EC80 0000 0002  xsym                 LDB,B6   KH_CTLTBL+2
          2 0002E1  E847 001A                            LDR,R6   LEVEL,AUTO
          2 0002E3  E906                                 CMR,R6   ,B6
          2 0002E4  0901 0007                            BE       s:18247,PREL
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:311  

  18244   2 0002E6  CBF0 0000                            LAB,B4   0,IMO
          2 0002E8  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0002EB       0001                            DC       s:18247,PREL

     1735    18246
     1736    18247    1       RETURN;

  18247   2 0002EC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1737    18248
     1738    18249    1   END KXS$TMR;
     1739    18250        %EOD;

PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:312  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$TMR.
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:313  

 **** Variables and constants ****

  ****  Section 000  Data  KXS$TMR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 ONE_MINUTE

  ****  Section 001 RoData KXS$TMR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 HRDERR                     2-0-0/w STRC(32)    r     1 REJ

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @JUNK                     16-0-0/w PTR         r     1 BLK$
     6-0-0/w STRC(256)   r     1 CALL_FPT                  1C-0-0/w PTR         r     1 CHN$
    40-0-0/w STRC(720)   r     1 FPT@CONNECT               6D-0-0/w STRC(64)    r     1 FPT@TERM
    *0-0-0/w UBIN(16)    r     1 JUNK                      1E-0-0/w UBIN(32)    r     1 KHA_ERROR
    20-0-0/c STRC(128)   r     1 KNH_MESS                  28-0-0/w STRC(384)   r     1 KV@SNDCQ
    1B-0-0/w UBIN(16)    r     1 KVBSIZ                    1A-0-0/w UBIN(16)    r     1 LEVEL
    18-0-0/w PTR         r     1 T$                        71-0-0/b BIT         r     1 TRY_SNDCQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(304)   r     1 FPT_CONNECT_C              0-0-0/w STRC(64)    r     1 FPT_TERM_C
     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w STRC(64)    r     1 KH_CTLTBL
     0-0-0/w STRC(64)    r     1 KX_CNTX                    0-0-0/w UBIN(16)    r     1 KX_LINERRDSCLMT
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:314  
     0-0-0/b EPTR        r     1 KX_PM$(0:2)                0-0-0/w STRC(64)    r     1 KX_SLLIST
     0-0-0/w STRC(800)   r     1 KX_STATS_HDLC              0-0-0/w STRC(64)    r     1 KX_SYSLOG
     0-0-0/w STRC(64)    r     1 KX_TMRBLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 BASED_WORD                 0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(160)   r     1 KX$BTMRBLK                 0-0-0/w STRC(4992)  r     1 KX$L2
     0-0-0/w ASTR(384)   r     1 KX$SYSLOG_Q_ENTRY          0-0-0/w STRC(160)   r     1 KX$TMRBLK


   Procedure KXS$TMR requires 751 words for executable code.
   Procedure KXS$TMR requires 126 words of local(AUTO) storage.
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:315  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:316  
          MINI XREF LISTING

BASED_WORD
     15889**DCL     18010>>ASSIGN  18244>>IF
BLK$
     15563**DCL     15848--IMP-PTR 18013<<ASSIGN  18014>>DOWHILE 18015>>ASSIGN  18016>>IF      18023>>ASSIGN
     18029>>IF      18029>>ASSIGN  18029>>IF      18029>>ASSIGN  18029>>ASSIGN  18029>>ASSIGN  18030>>IF
     18030>>ASSIGN  18030>>ASSIGN  18030>>ASSIGN  18036>>ASSIGN  18036>>ASSIGN  18037>>IF      18045>>IF
     18045>>ASSIGN  18045>>IF      18045>>ASSIGN  18045>>ASSIGN  18045>>ASSIGN  18046>>IF      18046>>ASSIGN
     18046>>ASSIGN  18046>>ASSIGN  18050>>ASSIGN  18051>>ASSIGN  18052>>CALL    18055<<ASSIGN
CALL_FPT
     15546**DCL     18049<<ASSIGN  18052<>CALL    18062<<ASSIGN  18068<>CALL    18099<>CALL    18172<>CALL
CALL_FPT.EVN
     15550**DCL     18050<<ASSIGN  18066<<ASSIGN  18085<<ASSIGN  18170<<ASSIGN
CALL_FPT.PRM1$
     15551**DCL     15552--REDEF
CALL_FPT.PRM2$
     15553**DCL     15553--REDEF
CALL_FPT.RCV$
     15550**DCL     18051<<ASSIGN  18067<<ASSIGN  18098<<ASSIGN  18171<<ASSIGN
CHN$
     15567**DCL     15999--IMP-PTR 18201<>CALL    18206>>IF      18207>>CALL    18207>>CALL    18228<>CALL
     18231>>IF      18232>>ASSIGN  18232>>ASSIGN
FPT@CONNECT
     15637**DCL     18072<<ASSIGN  18136--ASSIGN  18137--ASSIGN  18138--ASSIGN
FPT@CONNECT.DEST.ADDRESS
     15713**DCL     15714--REDEF
FPT@CONNECT.DSTSNPA
     15790**DCL     18134<<ASSIGN
FPT@CONNECT.DSTSNPA.ADR_STRING
     15790**DCL     15790--REDEF
FPT@CONNECT.LADR.ADDRESS
     15765**DCL     15766--REDEF
FPT@CONNECT.RLCID.FLAGS.VIRCIR
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:317  
     15675**DCL     18073<<ASSIGN
FPT@CONNECT.RLCID.GENERATION
     15673**DCL     15674--REDEF
FPT@CONNECT.RLCID.LDCTX
     15674**DCL     15674--REDEF
FPT@CONNECT.TERMINAL_ID
     15660**DCL     18133<<ASSIGN
FPT@CONNECT.TERMINAL_ID.TERM
     15662**DCL     15671--REDEF
FPT@TERM
     15808**DCL     18074<<ASSIGN  18153--ASSIGN  18154--ASSIGN  18155--ASSIGN
FPT@TERM.RLCID.LDCTX
     15813**DCL     18151<<ASSIGN
FPT_CONNECT_C
     17921**DCL     18072>>ASSIGN
FPT_CONNECT_C.RLCID.GENERATION
     17957**DCL     17958--REDEF
FPT_CONNECT_C.RLCID.LDCTX
     17958**DCL     17958--REDEF
FPT_CONNECT_C.TERMINAL_ID.TERM
     17946**DCL     17955--REDEF
FPT_TERM_C
     17990**DCL     18074>>ASSIGN
G$JIT.ERRLOG
     16819**DCL     16822--REDEF
G$JIT.JSUNIT
     16558**DCL     16559--REDEF
G$JIT.MCLS
     16557**DCL     16557--REDEF
G$JIT.TMRZ
     16826**DCL     16827--REDEF
G$JIT.USER_EXTIME
     16550**DCL     16551--REDEF
G$JIT.USER_MEMTIME
     16553**DCL     16553--REDEF
G$JIT.USER_SVTIME
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:318  
     16552**DCL     16552--REDEF
G$JIT$
     17906**DCL     16489--IMP-PTR
HRDERR
     17823**DCL     18182>>IF
JUNK
     15517**DCL        17--PROC
KH$CHN.ATTR
     16032**DCL     18088>>IF
KH$CHN.CTX$
     16069**DCL     18206>>IF      18231>>IF      18232>>ASSIGN  18232>>ASSIGN
KH$CHN.TERMID
     16093**DCL     18126<>CALL    18133>>ASSIGN  18207<>CALL    18207<>CALL
KH$CHN.TERMID.TERM
     16095**DCL     16104--REDEF
KHA$DVCADM
     15505**DCL-ENT 18207--CALL
KHA$ERRLOG
     15503**DCL-ENT 18217--CALL
KHA$GET_CTX_PTR
     15504**DCL-ENT 18201--CALL    18228--CALL
KHA_ERROR
     15568**DCL     18207<>CALL
KHI$DISABLE
     15496**DCL-ENT 18010--CALL
KHI$ENABLE
     15497**DCL-ENT 18244--CALL
KH_CTLTBL.PARM.PTR$
     17040**DCL     18010>>ASSIGN  18244>>IF
KILL_LINK
     18197**LABEL   18194--GOTO
KNH_MESS
     15582**DCL     18075<<ASSIGN  18077--ASSIGN  18078--ASSIGN
KNH_MESS.FPTSZ
     15615**DCL     18136<<ASSIGN  18153<<ASSIGN
KNH_MESS.FUNCTION
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:319  
     15582**DCL     15582--REDEF   18135<<ASSIGN  18152<<ASSIGN
KNH_MESS.UID
     15612**DCL     15612--REDEF   15612--REDEF
KV@SNDCQ
     15618**DCL     18076<<ASSIGN  18139<>CALL    18156<>CALL
KV@SNDCQ.MSG_.ADR$
     15620**DCL     18077<<ASSIGN  18137<<ASSIGN  18154<<ASSIGN
KV@SNDCQ.MSG_.BYTSIZ
     15622**DCL     18078<<ASSIGN  18138<<ASSIGN  18155<<ASSIGN
KVB$RLSSYS
     15498**DCL-ENT 18237--CALL
KVBSIZ
     15566**DCL     18181<<ASSIGN  18232>>ASSIGN  18237<>CALL
KVM$SNDCQ
     15509**DCL-ENT 18139--CALL    18156--CALL
KX$BTMRBLK.BLNK$
     15884**DCL     18029<<ASSIGN  18045<<ASSIGN
KX$BTMRBLK.FLNK$
     15884**DCL     18030<<ASSIGN  18046<<ASSIGN
KX$L2.CHN$
     16145**DCL     18088>>IF      18126>>CALL    18133>>ASSIGN
KX$L2.DFLVCPRF.TRADEL
     16266**DCL     16276--REDEF
KX$L2.DSTSNPA
     16457**DCL     18134>>ASSIGN
KX$L2.DSTSNPA.ADR_STRING
     16457**DCL     16457--REDEF
KX$L2.ERRLOGWRDCNT
     16243**DCL     18232<<ASSIGN  18232>>ASSIGN
KX$L2.FRMR_NSNR
     16243**DCL     16244--REDEF
KX$L2.IDL_CLK
     16246**DCL     18093<<ASSIGN  18093>>ASSIGN  18094>>IF
KX$L2.IDL_PRD
     16245**DCL     18088>>IF
KX$L2.INIT_ALTRET
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:320  
     16462**DCL     18130>>IF      18141<<ASSIGN
KX$L2.LDCTX
     16458**DCL     18151>>ASSIGN
KX$L2.NEXT$
     16145**DCL     18165>>ASSIGN
KX$L2.NTWADR.ADR_STRING
     16177**DCL     16177--REDEF
KX$L2.REJ_CNT
     16246**DCL     18105>>IF      18126<>CALL    18128<<ASSIGN
KX$L2.STATE.CURRENT
     16156**DCL     18088>>IF
KX$L2.STATES
     16155**DCL     16155--REDEF
KX$L2.TERM_ALTRET
     16462**DCL     18148>>IF      18158<<ASSIGN
KX$L2.TMRBLK.ON
     16208**DCL     18088>>IF
KX$SYSLOG_Q_ENTRY
     15905**DCL     18181--ASSIGN
KX$SYSLOG_Q_ENTRY.BUF.SIZ
     15981**DCL     15981--IMP-SIZ 18181>>ASSIGN
KX$SYSLOG_Q_ENTRY.FPT
     15905**DCL     18217<>CALL
KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD
     15922**DCL     18182>>IF
KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD.ERR#
     15949**DCL     18213<<ASSIGN
KX$SYSLOG_Q_ENTRY.FPT.V.TRMID
     15968**DCL     18201<>CALL    18228<>CALL
KX$SYSLOG_Q_ENTRY.FPT.V.TRMID.LEV
     15970**DCL     18227>>IF
KX$SYSLOG_Q_ENTRY.FPT.V.TRMID.TERM
     15970**DCL     15979--REDEF
KX$SYSLOG_Q_ENTRY.FPT.V.VALUES
     15981**DCL     18188<<ASSIGN  18188>>ASSIGN  18190>>IF      18197>>IF
KX$SYSLOG_Q_ENTRY.NXT$
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:321  
     15905**DCL     18185>>IF      18203>>ASSIGN  18216>>ASSIGN
KX$TMRBLK.BLNK$
     15852**DCL     18029>>ASSIGN  18029>>ASSIGN  18030>>IF      18030>>ASSIGN  18045>>ASSIGN  18045>>ASSIGN
     18046>>IF      18046>>ASSIGN
KX$TMRBLK.CNT
     15854**DCL     18036<<ASSIGN  18036>>ASSIGN  18037>>IF
KX$TMRBLK.CTX$
     15852**DCL     18051>>ASSIGN
KX$TMRBLK.FLNK$
     15852**DCL     18015>>ASSIGN  18029>>IF      18029>>ASSIGN  18030>>ASSIGN  18030>>ASSIGN  18045>>IF
     18045>>ASSIGN  18046>>ASSIGN  18046>>ASSIGN
KX$TMRBLK.ON
     15854**DCL     18016>>IF      18023<<ASSIGN  18029>>IF      18029<<ASSIGN  18045>>IF      18045<<ASSIGN
KX$TMRBLK.PRM
     15853**DCL     18050>>ASSIGN
KX$TMRBLK.SBR$
     15853**DCL     18052>>CALL
KXF$FRAME
     15506**DCL-ENT 18099--CALL
KXP$PACKET
     15508**DCL-ENT 18172--CALL
KXS$SYSLOG
     15507**DCL-ENT 18126--CALL
KXV$VCNTW
     15502**DCL-ENT 18068--CALL
KX_CNTX.HD$
     17122**DCL     18086>>ASSIGN
KX_LINERRDSCLMT
     17790**DCL     18197>>IF      18197>>IF
KX_SLLIST.HD$
     17122**DCL     18063>>IF      18067>>ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     17396**DCL     17402--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     17437**DCL     17444--REDEF
KX_STATS_HDLC.TIMEOUTS
PL6.E3A0      #008=KXS$TMR File=KXS$SUBS.:E05TSI                                 WED 07/30/97 02:30 Page:322  
     17450**DCL     18097<<ASSIGN  18097>>ASSIGN
KX_STATS_X25.REQSTATS.DSPMSK
     17721**DCL     17727--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     17762**DCL     17769--REDEF
KX_SYSLOG.HD$
     17795**DCL     18179>>DOWHILE 18180>>ASSIGN  18203<<ASSIGN  18216<<ASSIGN  18220<<ASSIGN  18239>>IF
KX_SYSLOG.TL$
     17795**DCL     18241<<ASSIGN
KX_TMRBLK.QHD$
     17127**DCL     18013>>ASSIGN  18030<<ASSIGN  18046<<ASSIGN
KX_TMRBLK.QTL$
     17127**DCL     18029<<ASSIGN  18045<<ASSIGN
LEVEL
     15565**DCL     18010<<ASSIGN  18010<>CALL    18244>>IF
ONE_MINUTE
     17799**DCL     18083<<ASSIGN  18083>>ASSIGN  18084>>IF      18084<<ASSIGN  18105>>IF
REJ
     17871**DCL     18126<>CALL
RLS
     18237**LABEL   18204--GOTO
SYSLOG_LOOP
     18179**LABEL   18192--EXIT    18221--EXIT
T$
     15564**DCL     15905--IMP-PTR 18015<<ASSIGN  18055>>ASSIGN  18086<<ASSIGN  18087>>DOWHILE 18088>>IF
     18088>>IF      18088>>IF      18088>>IF      18093>>ASSIGN  18093>>ASSIGN  18094>>IF      18098>>ASSIGN
     18105>>IF      18126>>CALL    18126>>CALL    18128>>ASSIGN  18130>>IF      18133>>ASSIGN  18134>>ASSIGN
     18141>>ASSIGN  18148>>IF      18151>>ASSIGN  18158>>ASSIGN  18165<<ASSIGN  18165>>ASSIGN  18180<<ASSIGN
     18181>>ASSIGN  18181>>ASSIGN  18182>>IF      18185>>IF      18188>>ASSIGN  18188>>ASSIGN  18190>>IF
     18197>>IF      18201>>CALL    18203>>ASSIGN  18213>>ASSIGN  18216>>ASSIGN  18217>>CALL    18220>>ASSIGN
     18227>>IF      18228>>CALL    18237<>CALL
TRY_SNDCQ
     15816**DCL     18071<<ASSIGN  18130>>IF      18145<<ASSIGN  18148>>IF      18162<<ASSIGN

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:323  
     1740        1        /*T***********************************************************/
     1741        2        /*T*                                                         */
     1742        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1743        4        /*T*                                                         */
     1744        5        /*T***********************************************************/
     1745        6        /*F* NAME: KXS$Q_SYSLOG              */
     1746        7        /*F* PURPOSE: Queue a wrsyslog entry for later reporting.  */
     1747        8
     1748        9        /*D* NAME: KXS$Q_SYSLOG              */
     1749       10        /*D* PURPOSE: Whenever an interrupt-level routine
     1750       11                      is unable to report a syslog, it is
     1751       12                      queued and will be reported later by
     1752       13                      the one second clock routine, KXS$TMR.  */
     1753       14        /*D* CALL: CALL KXS$Q_SYSLOG ( FPT_WRSYSLOG );  */
     1754       15        /*D* INPUT: FPT_WRSYSLOG - the obvious  */
     1755       16        /*D* OUTPUT: none                    */
     1756       17
     1757       18        KXS$Q_SYSLOG: PROC ( FPT_WRSYSLOG );
     1758       19
     1759       20
     1760       21        /*****************************************************************
     1761       22        *                                                                *
     1762       23        *                           Includes                             *
     1763       24        *                                                                *
     1764       25        *****************************************************************/
     1765       26
     1766       27        %INCLUDE K_ID_E;
     1767       77        %K#ENTID_E;
     1768       96        %K#LYRID_E;
     1769      103        %INCLUDE KL_SUPER_C;
     1770     3005        %INCLUDE KL_MACRO_C;
     1771     6357        %INCLUDE KL_AFCN_C;
     1772     6458        %INCLUDE LCP_6;
     1773    10737        %INCLUDE CP_6_SUBS;
     1774    11277        %INCLUDE KX_EQUS_E;
     1775    11716        %INCLUDE KX_PERR_C;
     1776    11845        %INCLUDE KX_SCODE_C;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:324  
     1777    11911        %INCLUDE KX_DATA_C;
     1778    11979        %INCLUDE KX_MACROS_M;
     1779    12750        %INCLUDE KV_GLBCNS_E;
     1780    13091        %KV#CQ_HNDID_E;
     1781    13096        %INCLUDE KH$CHN;
     1782    13218        %INCLUDE K_ADDRESS_M;
     1783    13721        %INCLUDE KNH_MACRO_C;
     1784    14004        %EJECT;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:325  
     1785    14005        /*****************************************************************
     1786    14006        *                                                                *
     1787    14007        *                           External References                  *
     1788    14008        *                                                                *
     1789    14009        *****************************************************************/
     1790    14010
     1791    14011    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
     1792    14012    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
     1793    14013    1   DCL KXX$X29 ENTRY (1);
     1794    14014    1   DCL KHD$SCREECH ENTRY (1);
     1795    14015    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
     1796    14016    1   DCL KHA$GET_CTX_PTR ENTRY (2) ALTRET;
     1797    14017    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
     1798    14018    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
     1799    14019
     1800    14020        /*****************************************************************
     1801    14021        *                                                                *
     1802    14022        *                           Auto                                 *
     1803    14023        *                                                                *
     1804    14024        *****************************************************************/
     1805    14025
     1806    14026        %FPT_WRSYSLOG ( STCLASS = );
     1807    14121
     1808    14122    1   DCL BFRSIZ UBIN;
     1809    14123    1   DCL DATSIZ UBIN;
     1810    14124    1   DCL ENTRY$ PTR;
     1811    14125    1   DCL CDAT$ CPTR;  /* just to get around PL6 */
     1812    14126    1   DCL DAT$ REDEF CDAT$ PTR;
     1813    14127    1   DCL CHN$ PTR;
     1814    14128        %EJECT;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:326  
     1815    14129        /*****************************************************************
     1816    14130        *                                                                *
     1817    14131        *                           Based                                *
     1818    14132        *                                                                *
     1819    14133        *****************************************************************/
     1820    14134
     1821    14135        %KX$SYSLOG_Q_ENTRY ( STCLASS = "BASED ( ENTRY$ )" );
     1822    14229        %KX$SYSLOG_Q_ENTRY ( FPTN = KX$TSYSLOG_Q_ENTRY, STCLASS = BASED );
     1823    14323    1   DCL STR CHAR(100) BASED;
     1824    14324        %KH$CHN ( STCLASS = " BASED(CHN$) " );
     1825    14448        %KX$L2 ( STCLASS = BASED );
     1826    14815
     1827    14816        /*****************************************************************
     1828    14817        *                                                                *
     1829    14818        *                           Constant                             *
     1830    14819        *                                                                *
     1831    14820        *****************************************************************/
     1832    14821
     1833    14822        %KX$SYSLOG_Q_ENTRY ( FPTN = KX_SYSLOG_Q_ENTRY, STCLASS = CONSTANT );
     1834    14916
     1835    14917        %VLP_SCODE (FPTN=Y_NO_GET,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_GET#);
     1836    14978        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
     1837    14979                           FPTN = HRDERR,
     1838    14980                           ERR# = %E_KXH_HRDERR# );
     1839    15026        %EJECT;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:327  
     1840    15027        /*****************************************************************
     1841    15028        *                                                                *
     1842    15029        *                           Static                               *
     1843    15030        *                                                                *
     1844    15031        *****************************************************************/
     1845    15032
     1846    15033        %KX_DATA;
     1847    15723        %EJECT;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:328  
     1848    15724        /*****************************************************************
     1849    15725        *                                                                *
     1850    15726        *                           Procedure                            *
     1851    15727        *                                                                *
     1852    15728        *****************************************************************/
     1853    15729
     1854    15730    1       IF FPT_WRSYSLOG.V.ERRCODE = HRDERR
     1855    15731    1          THEN
     1856    15732    2             DO;
     1857    15733    2                FPT_WRSYSLOG.V.VALUES(0) = 0;
     1858    15734    2                FPT_WRSYSLOG.V.VALUES(2) = 0;
     1859    15735    2                ENTRY$ = KX_SYSLOG.HD$;
     1860    15736    3                DO WHILE ( ENTRY$ ~= ADDR(NIL) );
     1861    15737    3                   IF ( KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD
     1862    15738    3                      = FPT_WRSYSLOG.V.ERRCODE) AND
     1863    15739    3                      ( KX$SYSLOG_Q_ENTRY.FPT.V.TRMID
     1864    15740    3                      = FPT_WRSYSLOG.V.TERMID )
     1865    15741    3                      THEN
     1866    15742    4                         DO;
     1867    15743    4                            KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(2) =
     1868    15744    4                               KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(2) + 1;
     1869    15745    4                            RETURN;
     1870    15746    4                         END;
     1871    15747    3                   ENTRY$ = KX$SYSLOG_Q_ENTRY.NXT$;
     1872    15748    3                END;
     1873    15749    2             END;
     1874    15750        /*
     1875    15751                                             Get memory for the queue entry.
     1876    15752        */
     1877    15753    1       IF VBASE ( FPT_WRSYSLOG.BUF_ ) = ADDR(NIL)
     1878    15754    1          THEN
     1879    15755    1             DATSIZ = 0;
     1880    15756    1          ELSE
     1881    15757    1             DATSIZ = VBOUND ( FPT_WRSYSLOG.BUF_ ) + 1;
     1882    15758    1       BFRSIZ = ( DATSIZ + 1 ) / 2 + SIZEW ( KX_SYSLOG_Q_ENTRY ) - 1;
     1883    15759    1       IF BFRSIZ > KX_LINERRLOGBFRLMT
     1884    15760    1          THEN
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:329  
     1885    15761    1   RET:      RETURN;
     1886    15762    1       IF FPT_WRSYSLOG.V.TERMID.LEV = %TERMINAL_ID_LEV_CHAN#
     1887    15763    1          THEN
     1888    15764    2             DO;
     1889    15765    2                CALL KHA$GET_CTX_PTR ( FPT_WRSYSLOG.V.TERMID, CHN$ )
     1890    15766    2                   ALTRET ( RET );  /* Don't know what channel it is */
     1891    15767    2                IF KH$CHN.CTX$ = ADDR(NIL) THEN RETURN;
     1892    15768    2                KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT = KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT +
             15768                         BFRSIZ;
     1893    15769    3                DO WHILE ( KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT > KX_LINERRLOGBFRLMT );
     1894    15770    3                   CALL Y$RLSOLD ALTRET ( GETBFR );
     1895    15771    3                END;
     1896    15772    2             END;
     1897    15773    1   GETBFR:
     1898    15774    1       CALL KVB$GETSYS ( BFRSIZ, ENTRY$ ) ALTRET ( RET );
     1899    15775        /*
     1900    15776                                             Fill in the FPT area.
     1901    15777        */
     1902    15778    1       KX$SYSLOG_Q_ENTRY.FPT = FPT_WRSYSLOG;
     1903    15779    1       KX$SYSLOG_Q_ENTRY.FPT.V_ = VECTOR ( KX$SYSLOG_Q_ENTRY.FPT.V );
     1904    15780        /*
     1905    15781                                             Move any data into the buffer.
     1906    15782        */
     1907    15783    1       KX$SYSLOG_Q_ENTRY.BUF.SIZ = DATSIZ;
     1908    15784    1       CDAT$ = VBASE ( FPT_WRSYSLOG.BUF_ );
     1909    15785    1       IF DAT$ ~= ADDR(NIL)
     1910    15786    1          THEN
     1911    15787    2             DO;
     1912    15788    2                SUBSTR ( KX$SYSLOG_Q_ENTRY.BUF.DAT, 0, DATSIZ ) =
     1913    15789    2                   SUBSTR ( DAT$ -> STR, 0, DATSIZ );
     1914    15790        /*
     1915    15791                                             Set up the vector to the data.
     1916    15792        */
     1917    15793    2                KX$SYSLOG_Q_ENTRY.FPT.BUF_ = VECTOR ( KX$SYSLOG_Q_ENTRY.BUF.DAT );
     1918    15794    2             END;
     1919    15795    1          ELSE
     1920    15796    2             DO;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:330  
     1921    15797    2                KX$SYSLOG_Q_ENTRY.FPT.BUF_ = VECTOR(NIL);
     1922    15798    2             END;
     1923    15799        /*
     1924    15800                                             Add this entry to the queue.
     1925    15801        */
     1926    15802    1       IF KX_SYSLOG.HD$ = ADDR(NIL)
     1927    15803    1          THEN
     1928    15804    1             KX_SYSLOG.HD$ = ENTRY$;
     1929    15805    1          ELSE
     1930    15806    1             KX_SYSLOG.TL$ -> KX$TSYSLOG_Q_ENTRY.NXT$ = ENTRY$;
     1931    15807    1       KX_SYSLOG.TL$ = ENTRY$;
     1932    15808
     1933    15809    1       KX$SYSLOG_Q_ENTRY.NXT$ = ADDR(NIL);
     1934    15810    1       RETURN;
     1935    15811
     1936    15812        /*
     1937    15813           Internal procedure to release the oldest errlog entry for the
     1938    15814           current channel. If the current entry is not link type errlog,
     1939    15815           just release the oldest entry in the queue.
     1940    15816        */
     1941    15817    1   Y$RLSOLD: PROC ALTRET;
     1942    15818
     1943    15819    2   DCL P1$ PTR;
     1944    15820    2   DCL P2$ PTR;
     1945    15821    2   DCL SAVCHN$ PTR;
     1946    15822    2   DCL RLSSIZ UBIN;
     1947    15823
     1948    15824    2       SAVCHN$ = CHN$;
     1949    15825    2       P1$ = KX_SYSLOG.HD$;
     1950    15826    2       IF P1$ = ADDR(NIL) THEN ALTRETURN;
     1951    15827    2       P2$ = ADDR(NIL);
     1952    15828    2       IF CHN$ ~= ADDR(NIL)
     1953    15829    2          THEN
     1954    15830    3             DO WHILE ( P1$ ~= ADDR(NIL) AND
     1955    15831    3          P1$ -> KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID ~= KH$CHN.TERMID );
     1956    15832    3                P2$ = P1$;
     1957    15833    3                P1$ = P1$ -> KX$TSYSLOG_Q_ENTRY.NXT$;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:331  
     1958    15834    3             END;
     1959    15835    2       IF P1$ = ADDR(NIL)
     1960    15836    2          THEN
     1961    15837    3             DO;
     1962    15838    3                IF CHN$ ~= ADDR(NIL)
     1963    15839    3                   THEN
     1964    15840    3                      KH$CHN.CTX$ -> KX$L2.ERRLOGWRDCNT = 0;
     1965    15841    3                ALTRETURN;
     1966    15842    3             END;
     1967    15843    2       IF P1$ = KX_SYSLOG.HD$
     1968    15844    2          THEN
     1969    15845    2             KX_SYSLOG.HD$ = P1$ -> KX$TSYSLOG_Q_ENTRY.NXT$;
     1970    15846    2       IF P1$ = KX_SYSLOG.TL$
     1971    15847    2          THEN
     1972    15848    2             KX_SYSLOG.TL$ = P2$;
     1973    15849    2       IF P2$ ~= ADDR(NIL)
     1974    15850    2          THEN
     1975    15851    2             P2$ -> KX$TSYSLOG_Q_ENTRY.NXT$ = P1$ -> KX$TSYSLOG_Q_ENTRY.NXT$;
     1976    15852    2       RLSSIZ = SIZEW ( P1$ -> KX$TSYSLOG_Q_ENTRY );
     1977    15853    2       IF CHN$ = ADDR(NIL) AND P1$->KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID.LEV =
     1978    15854    2          %TERMINAL_ID_LEV_CHAN#
     1979    15855    2          THEN
     1980    15856    2             CALL KHA$GET_CTX_PTR ( P1$->KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID, CHN$ )
     1981    15857    2                ALTRET ( KVBRLS );
     1982    15858    2       IF CHN$ ~= ADDR(NIL)
     1983    15859    2          THEN
     1984    15860    2             IF KH$CHN.CTX$ ~= ADDR(NIL)
     1985    15861    2                THEN
     1986    15862    2                   KH$CHN.CTX$ -> KX$L2.ERRLOGWRDCNT = KH$CHN.CTX$ -> KX$L2.
             15862                            ERRLOGWRDCNT - RLSSIZ;
     1987    15863    2   KVBRLS:
     1988    15864    2       CALL KVB$RLSSYS ( RLSSIZ, P1$ );
     1989    15865    2       CHN$ = SAVCHN$;
     1990    15866    2       RETURN;
     1991    15867
     1992    15868    2   END Y$RLSOLD;
     1993    15869    1   END KXS$Q_SYSLOG;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:332  
     1994    15870
     1995    15871        %EOD;

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:333  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$Q_SYSLOG.

   Procedure KXS$Q_SYSLOG requires 459 words for executable code.
   Procedure KXS$Q_SYSLOG requires 28 words of local(AUTO) storage.

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:334  

 Object Unit name= KXS$Q_SYSLOG                               File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:32:14.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     30     1E  KXS$Q_SYSLOG
    1   Proc  even  none   459    1CB  KXS$Q_SYSLOG
    2  RoData even  none     3      3  KXS$Q_SYSLOG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KXS$Q_SYSLOG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KHA$GET_CTX_PTR
 yes     yes           Std       2 KVB$GETSYS
 yes     yes           Std       2 KVB$RLSSYS
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_LINERRLOGBFRLMT                    KX_SYSLOG                             KX_PM$
r    G$ROS$
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:335  


     1740        1        /*T***********************************************************/
     1741        2        /*T*                                                         */
     1742        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1743        4        /*T*                                                         */
     1744        5        /*T***********************************************************/
     1745        6        /*F* NAME: KXS$Q_SYSLOG              */
     1746        7        /*F* PURPOSE: Queue a wrsyslog entry for later reporting.  */
     1747        8
     1748        9        /*D* NAME: KXS$Q_SYSLOG              */
     1749       10        /*D* PURPOSE: Whenever an interrupt-level routine
     1750       11                      is unable to report a syslog, it is
     1751       12                      queued and will be reported later by
     1752       13                      the one second clock routine, KXS$TMR.  */
     1753       14        /*D* CALL: CALL KXS$Q_SYSLOG ( FPT_WRSYSLOG );  */
     1754       15        /*D* INPUT: FPT_WRSYSLOG - the obvious  */
     1755       16        /*D* OUTPUT: none                    */
     1756       17
     1757       18        KXS$Q_SYSLOG: PROC ( FPT_WRSYSLOG );

     18   1 000000  D380 0000 0000  xent KXS$Q_SYSLOG    LNJ,B5   X6A_AUTO_1
          1 000003       001C 0001                       DC       28,1

     1758       19
     1759       20
     1760       21        /*****************************************************************
     1761       22        *                                                                *
     1762       23        *                           Includes                             *
     1763       24        *                                                                *
     1764       25        *****************************************************************/
     1765       26
     1766       27        %INCLUDE K_ID_E;
     1767       77        %K#ENTID_E;
     1768       96        %K#LYRID_E;
     1769      103        %INCLUDE KL_SUPER_C;
     1770     3005        %INCLUDE KL_MACRO_C;
     1771     6357        %INCLUDE KL_AFCN_C;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:336  
     1772     6458        %INCLUDE LCP_6;
     1773    10737        %INCLUDE CP_6_SUBS;
     1774    11277        %INCLUDE KX_EQUS_E;
     1775    11716        %INCLUDE KX_PERR_C;
     1776    11845        %INCLUDE KX_SCODE_C;
     1777    11911        %INCLUDE KX_DATA_C;
     1778    11979        %INCLUDE KX_MACROS_M;
     1779    12750        %INCLUDE KV_GLBCNS_E;
     1780    13091        %KV#CQ_HNDID_E;
     1781    13096        %INCLUDE KH$CHN;
     1782    13218        %INCLUDE K_ADDRESS_M;
     1783    13721        %INCLUDE KNH_MACRO_C;
     1784    14004        %EJECT;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:337  
     1785    14005        /*****************************************************************
     1786    14006        *                                                                *
     1787    14007        *                           External References                  *
     1788    14008        *                                                                *
     1789    14009        *****************************************************************/
     1790    14010
     1791    14011    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
     1792    14012    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
     1793    14013    1   DCL KXX$X29 ENTRY (1);
     1794    14014    1   DCL KHD$SCREECH ENTRY (1);
     1795    14015    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
     1796    14016    1   DCL KHA$GET_CTX_PTR ENTRY (2) ALTRET;
     1797    14017    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
     1798    14018    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
     1799    14019
     1800    14020        /*****************************************************************
     1801    14021        *                                                                *
     1802    14022        *                           Auto                                 *
     1803    14023        *                                                                *
     1804    14024        *****************************************************************/
     1805    14025
     1806    14026        %FPT_WRSYSLOG ( STCLASS = );
     1807    14121
     1808    14122    1   DCL BFRSIZ UBIN;
     1809    14123    1   DCL DATSIZ UBIN;
     1810    14124    1   DCL ENTRY$ PTR;
     1811    14125    1   DCL CDAT$ CPTR;  /* just to get around PL6 */
     1812    14126    1   DCL DAT$ REDEF CDAT$ PTR;
     1813    14127    1   DCL CHN$ PTR;
     1814    14128        %EJECT;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:338  
     1815    14129        /*****************************************************************
     1816    14130        *                                                                *
     1817    14131        *                           Based                                *
     1818    14132        *                                                                *
     1819    14133        *****************************************************************/
     1820    14134
     1821    14135        %KX$SYSLOG_Q_ENTRY ( STCLASS = "BASED ( ENTRY$ )" );
     1822    14229        %KX$SYSLOG_Q_ENTRY ( FPTN = KX$TSYSLOG_Q_ENTRY, STCLASS = BASED );
     1823    14323    1   DCL STR CHAR(100) BASED;
     1824    14324        %KH$CHN ( STCLASS = " BASED(CHN$) " );
     1825    14448        %KX$L2 ( STCLASS = BASED );
     1826    14815
     1827    14816        /*****************************************************************
     1828    14817        *                                                                *
     1829    14818        *                           Constant                             *
     1830    14819        *                                                                *
     1831    14820        *****************************************************************/
     1832    14821
     1833    14822        %KX$SYSLOG_Q_ENTRY ( FPTN = KX_SYSLOG_Q_ENTRY, STCLASS = CONSTANT );
     1834    14916
     1835    14917        %VLP_SCODE (FPTN=Y_NO_GET,STCLASS=CONSTANT,FCG=KX,MID=S,ERR#=%S$KX_NO_GET#);
     1836    14978        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
     1837    14979                           FPTN = HRDERR,
     1838    14980                           ERR# = %E_KXH_HRDERR# );
     1839    15026        %EJECT;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:339  
     1840    15027        /*****************************************************************
     1841    15028        *                                                                *
     1842    15029        *                           Static                               *
     1843    15030        *                                                                *
     1844    15031        *****************************************************************/
     1845    15032
     1846    15033        %KX_DATA;
     1847    15723        %EJECT;
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:340  
     1848    15724        /*****************************************************************
     1849    15725        *                                                                *
     1850    15726        *                           Procedure                            *
     1851    15727        *                                                                *
     1852    15728        *****************************************************************/
     1853    15729
     1854    15730    1       IF FPT_WRSYSLOG.V.ERRCODE = HRDERR

  15730   1 000005  ECC7 0004                            LDB,B6   @FPT_WRSYSLOG,AUTO
          1 000007  DB80 0000 0000  00                   LAB,B5   KX_SYSLOG_Q_ENTRY
          1 00000A  5C04                                 LDV,R5   4
          1 00000B  0022                                 ACM      ;
          1 00000C       4406 0006                                ALPHANUM(6,B6,,4,FILL),;
          1 00000E       4005 001C                                ALPHANUM(28,B5,,R5,FILL)
          1 000010  5301 002B                            CBNE     s:15753,PREL

     1855    15731    1          THEN
     1856    15732    2             DO;

     1857    15733    2                FPT_WRSYSLOG.V.VALUES(0) = 0;

  15733   1 000012  8746 0010                            CL       16,B6

     1858    15734    2                FPT_WRSYSLOG.V.VALUES(2) = 0;

  15734   1 000014  8746 0012                            CL       18,B6

     1859    15735    2                ENTRY$ = KX_SYSLOG.HD$;

  15735   1 000016  DC80 0000 0000  xsym                 LDB,B5   KX_SYSLOG
          1 000019  DFC7 0008                            STB,B5   ENTRY$,AUTO

     1860    15736    3                DO WHILE ( ENTRY$ ~= ADDR(NIL) );

  15736   1 00001B  0F81 001D                            B        s:15748,PREL

     1861    15737    3                   IF ( KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:341  

  15737   1 00001D  ECC7 0008                            LDB,B6   ENTRY$,AUTO
          1 00001F  DCC7 0004                            LDB,B5   @FPT_WRSYSLOG,AUTO
          1 000021  5C04                                 LDV,R5   4
          1 000022  0022                                 ACM      ;
          1 000023       4406 0008                                ALPHANUM(8,B6,,4,FILL),;
          1 000025       4005 0006                                ALPHANUM(6,B5,,R5,FILL)
          1 000027  5301 000E                            CBNE     s:15747,PREL
          1 000029  5C10                                 LDV,R5   16
          1 00002A  0022                                 ACM      ;
          1 00002B       5006 000A                                ALPHANUM(10,B6,,16,FILL),;
          1 00002D       4005 0008                                ALPHANUM(8,B5,,R5,FILL)
          1 00002F  5301 0006                            CBNE     s:15747,PREL

     1862    15738    3                      = FPT_WRSYSLOG.V.ERRCODE) AND
     1863    15739    3                      ( KX$SYSLOG_Q_ENTRY.FPT.V.TRMID
     1864    15740    3                      = FPT_WRSYSLOG.V.TERMID )
     1865    15741    3                      THEN
     1866    15742    4                         DO;

     1867    15743    4                            KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(2) =

  15743   1 000031  8AC6 0014                            INC      20,B6

     1868    15744    4                               KX$SYSLOG_Q_ENTRY.FPT.V.VALUES(2) + 1;
     1869    15745    4                            RETURN;

  15745   1 000033  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1870    15746    4                         END;
     1871    15747    3                   ENTRY$ = KX$SYSLOG_Q_ENTRY.NXT$;

  15747   1 000036  CC86                                 LDB,B4   ,B6
          1 000037  CFC7 0008                            STB,B4   ENTRY$,AUTO

     1872    15748    3                END;

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:342  
  15748   1 000039  8DC7 0008                            CMN      ENTRY$,AUTO
          1 00003B  09E2                                 BNE      s:15737,SPREL

     1873    15749    2             END;

     1874    15750        /*
     1875    15751                                             Get memory for the queue entry.
     1876    15752        */
     1877    15753    1       IF VBASE ( FPT_WRSYSLOG.BUF_ ) = ADDR(NIL)

  15753   1 00003C  ECC7 0004                            LDB,B6   @FPT_WRSYSLOG,AUTO
          1 00003E  8DC6 0004                            CMN      4,B6
          1 000040  0981 0005                            BNE      s:15757,PREL

     1878    15754    1          THEN
     1879    15755    1             DATSIZ = 0;

  15755   1 000042  8747 0007                            CL       DATSIZ,AUTO
          1 000044  0F81 0006                            B        s:15758,PREL

     1880    15756    1          ELSE
     1881    15757    1             DATSIZ = VBOUND ( FPT_WRSYSLOG.BUF_ ) + 1;

  15757   1 000046  E846 0003                            LDR,R6   3,B6
          1 000048  6E01                                 ADV,R6   1
          1 000049  EF47 0007                            STR,R6   DATSIZ,AUTO

     1882    15758    1       BFRSIZ = ( DATSIZ + 1 ) / 2 + SIZEW ( KX_SYSLOG_Q_ENTRY ) - 1;

  15758   1 00004B  E847 0007                            LDR,R6   DATSIZ,AUTO
          1 00004D  6E01                                 ADV,R6   1
          1 00004E  6041                                 SOR,R6   1
          1 00004F  6E18                                 ADV,R6   24
          1 000050  EF47 0006                            STR,R6   BFRSIZ,AUTO

     1883    15759    1       IF BFRSIZ > KX_LINERRLOGBFRLMT

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:343  
  15759   1 000052  E900 0000 0000  xsym                 CMR,R6   KX_LINERRLOGBFRLMT
          1 000055  0381 0004                            BLE      s:15762,PREL

     1884    15760    1          THEN
     1885    15761    1   RET:      RETURN;

  15761   1 000057  C380 0000 0000  xent RET             LNJ,B4   X6A_ARET

     1886    15762    1       IF FPT_WRSYSLOG.V.TERMID.LEV = %TERMINAL_ID_LEV_CHAN#

  15762   1 00005A  D846 0008                            LDR,R5   8,B6
          1 00005C  D570 00FF                            AND,R5   255,IMO
          1 00005E  5D01                                 CMV,R5   1
          1 00005F  0981 0038                            BNE      s:15772,PREL

     1887    15763    1          THEN
     1888    15764    2             DO;

     1889    15765    2                CALL KHA$GET_CTX_PTR ( FPT_WRSYSLOG.V.TERMID, CHN$ )

  15765   1 000061  DBC7 000C                            LAB,B5   CHN$,AUTO
          1 000063  DFC7 001A                            STB,B5   RLSSIZ+4,AUTO
          1 000065  CBC6 0008                            LAB,B4   8,B6
          1 000067  CFC7 0018                            STB,B4   RLSSIZ+2,AUTO
          1 000069  BBC7 0018                            LAB,B3   RLSSIZ+2,AUTO
          1 00006B  CBF0 0200                            LAB,B4   512,IMO
          1 00006D  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          1 000070       FFE7                            DC       s:15761,PREL

     1890    15766    2                   ALTRET ( RET );  /* Don't know what channel it is */
     1891    15767    2                IF KH$CHN.CTX$ = ADDR(NIL) THEN RETURN;

  15767   1 000071  ECC7 000C                            LDB,B6   CHN$,AUTO
          1 000073  8DC6 000C                            CMN      12,B6
          1 000075  0981 0004                            BNE      s:15768,PREL

  15767   1 000077  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:344  

     1892    15768    2                KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT = KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT +
             15768                         BFRSIZ;

  15768   1 00007A  DCC6 000C                            LDB,B5   12,B6
          1 00007C  E845 0052                            LDR,R6   82,B5
          1 00007E  EA47 0006                            ADD,R6   BFRSIZ,AUTO
          1 000080  EF45 0052                            STR,R6   82,B5

     1893    15769    3                DO WHILE ( KH$CHN.CTX$->KX$L2.ERRLOGWRDCNT > KX_LINERRLOGBFRLMT );

  15769   1 000082  DCC6 000C                            LDB,B5   12,B6
          1 000084  E845 0052                            LDR,R6   82,B5
          1 000086  E900 0000 0000  xsym                 CMR,R6   KX_LINERRLOGBFRLMT
          1 000089  0381 000E                            BLE      s:15772,PREL

     1894    15770    3                   CALL Y$RLSOLD ALTRET ( GETBFR );

  15770   1 00008B  E3C0 008D                            LNJ,B6   s:0,PREL
          1 00008D       000B                            DC       s:15772,PREL

     1895    15771    3                END;

  15771   1 00008E  ECC7 000C                            LDB,B6   CHN$,AUTO
          1 000090  DCC6 000C                            LDB,B5   12,B6
          1 000092  E845 0052                            LDR,R6   82,B5
          1 000094  E900 0000 0000  xsym                 CMR,R6   KX_LINERRLOGBFRLMT
          1 000097  0374                                 BG       s:15770,SPREL

     1896    15772    2             END;

     1897    15773    1   GETBFR:
     1898    15774    1       CALL KVB$GETSYS ( BFRSIZ, ENTRY$ ) ALTRET ( RET );

  15774   1 000098  EBC7 0008            GETBFR          LAB,B6   ENTRY$,AUTO
          1 00009A  EFC7 001A                            STB,B6   RLSSIZ+4,AUTO
          1 00009C  DBC7 0006                            LAB,B5   BFRSIZ,AUTO
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:345  
          1 00009E  DFC7 0018                            STB,B5   RLSSIZ+2,AUTO
          1 0000A0  BBC7 0018                            LAB,B3   RLSSIZ+2,AUTO
          1 0000A2  CBF0 0200                            LAB,B4   512,IMO
          1 0000A4  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 0000A7       FFB0                            DC       s:15761,PREL

     1899    15775        /*
     1900    15776                                             Fill in the FPT area.
     1901    15777        */
     1902    15778    1       KX$SYSLOG_Q_ENTRY.FPT = FPT_WRSYSLOG;

  15778   1 0000A8  ACC7 0004                            LDB,B2   @FPT_WRSYSLOG,AUTO
          1 0000AA  2C00                                 LDV,R2   0
          1 0000AB  6C2A                                 LDV,R6   42
          1 0000AC  BCC7 0008                            LDB,B3   ENTRY$,AUTO
          1 0000AE  3C04                                 LDV,R3   4
          1 0000AF  0008                                 MMM

     1903    15779    1       KX$SYSLOG_Q_ENTRY.FPT.V_ = VECTOR ( KX$SYSLOG_Q_ENTRY.FPT.V );

  15779   1 0000B0  ECC7 0008                            LDB,B6   ENTRY$,AUTO
          1 0000B2  DBC6 0008                            LAB,B5   8,B6
          1 0000B4  DFC7 0019                            STB,B5   RLSSIZ+3,AUTO
          1 0000B6  6C1D                                 LDV,R6   29
          1 0000B7  EF47 0018                            STR,R6   RLSSIZ+2,AUTO
          1 0000B9  ABC7 0018                            LAB,B2   RLSSIZ+2,AUTO
          1 0000BB  2C00                                 LDV,R2   0
          1 0000BC  6C06                                 LDV,R6   6
          1 0000BD  BB86                                 LAB,B3   ,B6
          1 0000BE  3C04                                 LDV,R3   4
          1 0000BF  0008                                 MMM

     1904    15780        /*
     1905    15781                                             Move any data into the buffer.
     1906    15782        */
     1907    15783    1       KX$SYSLOG_Q_ENTRY.BUF.SIZ = DATSIZ;

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:346  
  15783   1 0000C0  DCC7 0008                            LDB,B5   ENTRY$,AUTO
          1 0000C2  E847 0007                            LDR,R6   DATSIZ,AUTO
          1 0000C4  EF45 0017                            STR,R6   23,B5

     1908    15784    1       CDAT$ = VBASE ( FPT_WRSYSLOG.BUF_ );

  15784   1 0000C6  CCC7 0004                            LDB,B4   @FPT_WRSYSLOG,AUTO
          1 0000C8  8CC4 0004                            LDI      4,B4
          1 0000CA  8D47 000A                            SDI      CDAT$,AUTO

     1909    15785    1       IF DAT$ ~= ADDR(NIL)

  15785   1 0000CC  8DC7 000A                            CMN      CDAT$,AUTO
          1 0000CE  0901 0024                            BE       s:15797,PREL

     1910    15786    1          THEN
     1911    15787    2             DO;

     1912    15788    2                SUBSTR ( KX$SYSLOG_Q_ENTRY.BUF.DAT, 0, DATSIZ ) =

  15788   1 0000D0  D845 0017                            LDR,R5   23,B5
          1 0000D2  ACC7 000A                            LDB,B2   CDAT$,AUTO
          1 0000D4  2C00                                 LDV,R2   0
          1 0000D5  E847 0007                            LDR,R6   DATSIZ,AUTO
          1 0000D7  BB85                                 LAB,B3   ,B5
          1 0000D8  3C30                                 LDV,R3   48
          1 0000D9  0008                                 MMM

     1913    15789    2                   SUBSTR ( DAT$ -> STR, 0, DATSIZ );
     1914    15790        /*
     1915    15791                                             Set up the vector to the data.
     1916    15792        */
     1917    15793    2                KX$SYSLOG_Q_ENTRY.FPT.BUF_ = VECTOR ( KX$SYSLOG_Q_ENTRY.BUF.DAT );

  15793   1 0000DA  ACC7 0008                            LDB,B2   ENTRY$,AUTO
          1 0000DC  E842 0017                            LDR,R6   23,B2
          1 0000DE  9BC2 0018                            LAB,B1   24,B2
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:347  
          1 0000E0  9FC7 0019                            STB,B1   RLSSIZ+3,AUTO
          1 0000E2  6003                                 SOL,R6   3
          1 0000E3  6E0F                                 ADV,R6   15
          1 0000E4  6044                                 SOR,R6   4
          1 0000E5  6001                                 SOL,R6   1
          1 0000E6  6EFF                                 ADV,R6   -1
          1 0000E7  EF47 0018                            STR,R6   RLSSIZ+2,AUTO
          1 0000E9  ABC7 0018                            LAB,B2   RLSSIZ+2,AUTO
          1 0000EB  2C00                                 LDV,R2   0
          1 0000EC  6C06                                 LDV,R6   6
          1 0000ED  BCC7 0008                            LDB,B3   ENTRY$,AUTO
          1 0000EF  3C0A                                 LDV,R3   10
          1 0000F0  0008                                 MMM

     1918    15794    2             END;

  15794   1 0000F1  0F81 0009                            B        s:15802,PREL

     1919    15795    1          ELSE
     1920    15796    2             DO;

     1921    15797    2                KX$SYSLOG_Q_ENTRY.FPT.BUF_ = VECTOR(NIL);

  15797   1 0000F3  AB80 0000 0000  02                   LAB,B2   0
          1 0000F6  2C00                                 LDV,R2   0
          1 0000F7  6C06                                 LDV,R6   6
          1 0000F8  BB85                                 LAB,B3   ,B5
          1 0000F9  3C0A                                 LDV,R3   10
          1 0000FA  0008                                 MMM

     1922    15798    2             END;

     1923    15799        /*
     1924    15800                                             Add this entry to the queue.
     1925    15801        */
     1926    15802    1       IF KX_SYSLOG.HD$ = ADDR(NIL)

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:348  
  15802   1 0000FB  8D80 0000 0000  xsym                 CMN      KX_SYSLOG
          1 0000FE  0981 0008                            BNE      s:15806,PREL

     1927    15803    1          THEN
     1928    15804    1             KX_SYSLOG.HD$ = ENTRY$;

  15804   1 000100  BCC7 0008                            LDB,B3   ENTRY$,AUTO
          1 000102  BF80 0000 0000  xsym                 STB,B3   KX_SYSLOG
          1 000105  0F81 0007                            B        s:15807,PREL

     1929    15805    1          ELSE
     1930    15806    1             KX_SYSLOG.TL$ -> KX$TSYSLOG_Q_ENTRY.NXT$ = ENTRY$;

  15806   1 000107  BCC7 0008                            LDB,B3   ENTRY$,AUTO
          1 000109  AC80 0000 0002  xsym                 LDB,B2   KX_SYSLOG+2
          1 00010C  BF82                                 STB,B3   ,B2

     1931    15807    1       KX_SYSLOG.TL$ = ENTRY$;

  15807   1 00010D  BCC7 0008                            LDB,B3   ENTRY$,AUTO
          1 00010F  BF80 0000 0002  xsym                 STB,B3   KX_SYSLOG+2

     1932    15808
     1933    15809    1       KX$SYSLOG_Q_ENTRY.NXT$ = ADDR(NIL);

  15809   1 000112  AB80 0000 0000                       LAB,B2   0
          1 000115  AF83                                 STB,B2   ,B3

     1934    15810    1       RETURN;

  15810   1 000116  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1935    15811
     1936    15812        /*
     1937    15813           Internal procedure to release the oldest errlog entry for the
     1938    15814           current channel. If the current entry is not link type errlog,
     1939    15815           just release the oldest entry in the queue.
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:349  
     1940    15816        */
     1941    15817    1   Y$RLSOLD: PROC ALTRET;

  15817   1 000119  EFC7 000E            Y$RLSOLD        STB,B6   CHN$+2,AUTO

     1942    15818
     1943    15819    2   DCL P1$ PTR;
     1944    15820    2   DCL P2$ PTR;
     1945    15821    2   DCL SAVCHN$ PTR;
     1946    15822    2   DCL RLSSIZ UBIN;
     1947    15823
     1948    15824    2       SAVCHN$ = CHN$;

  15824   1 00011B  DCC7 000C                            LDB,B5   CHN$,AUTO
          1 00011D  DFC7 0014                            STB,B5   SAVCHN$,AUTO

     1949    15825    2       P1$ = KX_SYSLOG.HD$;

  15825   1 00011F  CC80 0000 0000  xsym                 LDB,B4   KX_SYSLOG
          1 000122  CFC7 0010                            STB,B4   P1$,AUTO

     1950    15826    2       IF P1$ = ADDR(NIL) THEN ALTRETURN;

  15826   1 000124  8DC7 0010                            CMN      P1$,AUTO
          1 000126  0981 0005                            BNE      s:15827,PREL

  15826   1 000128  ECC7 000E                            LDB,B6   CHN$+2,AUTO
          1 00012A  B806                                 LDR,R3   ,B6
          1 00012B  C3B6                                 LNJ,B4   ,B6,R3

     1951    15827    2       P2$ = ADDR(NIL);

  15827   1 00012C  BB80 0000 0000                       LAB,B3   0
          1 00012F  BFC7 0012                            STB,B3   P2$,AUTO

     1952    15828    2       IF CHN$ ~= ADDR(NIL)

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:350  
  15828   1 000131  8DC7 000C                            CMN      CHN$,AUTO
          1 000133  0901 0019                            BE       s:15835,PREL

     1953    15829    2          THEN
     1954    15830    3             DO WHILE ( P1$ ~= ADDR(NIL) AND

  15830   1 000135  0F81 0008                            B        s:15834,PREL

     1955    15831    3          P1$ -> KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID ~= KH$CHN.TERMID );
     1956    15832    3                P2$ = P1$;

  15832   1 000137  ECC7 0010                            LDB,B6   P1$,AUTO
          1 000139  EFC7 0012                            STB,B6   P2$,AUTO

     1957    15833    3                P1$ = P1$ -> KX$TSYSLOG_Q_ENTRY.NXT$;

  15833   1 00013B  DC86                                 LDB,B5   ,B6
          1 00013C  DFC7 0010                            STB,B5   P1$,AUTO

     1958    15834    3             END;

  15834   1 00013E  8DC7 0010                            CMN      P1$,AUTO
          1 000140  0901 000C                            BE       s:15835,PREL
          1 000142  ECC7 0010                            LDB,B6   P1$,AUTO
          1 000144  DCC7 000C                            LDB,B5   CHN$,AUTO
          1 000146  5C10                                 LDV,R5   16
          1 000147  0022                                 ACM      ;
          1 000148       5006 000A                                ALPHANUM(10,B6,,16,FILL),;
          1 00014A       4005 0012                                ALPHANUM(18,B5,,R5,FILL)
          1 00014C  536B                                 CBNE     s:15832,SPREL

     1959    15835    2       IF P1$ = ADDR(NIL)

  15835   1 00014D  8DC7 0010                            CMN      P1$,AUTO
          1 00014F  0981 000F                            BNE      s:15843,PREL

     1960    15836    2          THEN
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:351  
     1961    15837    3             DO;

     1962    15838    3                IF CHN$ ~= ADDR(NIL)

  15838   1 000151  8DC7 000C                            CMN      CHN$,AUTO
          1 000153  0901 0007                            BE       s:15841,PREL

     1963    15839    3                   THEN
     1964    15840    3                      KH$CHN.CTX$ -> KX$L2.ERRLOGWRDCNT = 0;

  15840   1 000155  ECC7 000C                            LDB,B6   CHN$,AUTO
          1 000157  DCC6 000C                            LDB,B5   12,B6
          1 000159  8745 0052                            CL       82,B5

     1965    15841    3                ALTRETURN;

  15841   1 00015B  ECC7 000E                            LDB,B6   CHN$+2,AUTO
          1 00015D  B806                                 LDR,R3   ,B6
          1 00015E  C3B6                                 LNJ,B4   ,B6,R3

     1966    15842    3             END;
     1967    15843    2       IF P1$ = KX_SYSLOG.HD$

  15843   1 00015F  ECC7 0010                            LDB,B6   P1$,AUTO
          1 000161  ED80 0000 0000  xsym                 CMB,B6   KX_SYSLOG
          1 000164  0981 0005                            BNE      s:15846,PREL

     1968    15844    2          THEN
     1969    15845    2             KX_SYSLOG.HD$ = P1$ -> KX$TSYSLOG_Q_ENTRY.NXT$;

  15845   1 000166  DC86                                 LDB,B5   ,B6
          1 000167  DF80 0000 0000  xsym                 STB,B5   KX_SYSLOG

     1970    15846    2       IF P1$ = KX_SYSLOG.TL$

  15846   1 00016A  ED80 0000 0002  xsym                 CMB,B6   KX_SYSLOG+2
          1 00016D  0981 0006                            BNE      s:15849,PREL
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:352  

     1971    15847    2          THEN
     1972    15848    2             KX_SYSLOG.TL$ = P2$;

  15848   1 00016F  DCC7 0012                            LDB,B5   P2$,AUTO
          1 000171  DF80 0000 0002  xsym                 STB,B5   KX_SYSLOG+2

     1973    15849    2       IF P2$ ~= ADDR(NIL)

  15849   1 000174  8DC7 0012                            CMN      P2$,AUTO
          1 000176  0901 0005                            BE       s:15852,PREL

     1974    15850    2          THEN
     1975    15851    2             P2$ -> KX$TSYSLOG_Q_ENTRY.NXT$ = P1$ -> KX$TSYSLOG_Q_ENTRY.NXT$;

  15851   1 000178  DC86                                 LDB,B5   ,B6
          1 000179  CCC7 0012                            LDB,B4   P2$,AUTO
          1 00017B  DF84                                 STB,B5   ,B4

     1976    15852    2       RLSSIZ = SIZEW ( P1$ -> KX$TSYSLOG_Q_ENTRY );

  15852   1 00017C  ECC7 0010                            LDB,B6   P1$,AUTO
          1 00017E  E846 0017                            LDR,R6   23,B6
          1 000180  6003                                 SOL,R6   3
          1 000181  EA70 018F                            ADD,R6   399,IMO
          1 000183  6044                                 SOR,R6   4
          1 000184  EF47 0016                            STR,R6   RLSSIZ,AUTO

     1977    15853    2       IF CHN$ = ADDR(NIL) AND P1$->KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID.LEV =

  15853   1 000186  8DC7 000C                            CMN      CHN$,AUTO
          1 000188  0981 0018                            BNE      s:15858,PREL
          1 00018A  D846 000A                            LDR,R5   10,B6
          1 00018C  D570 00FF                            AND,R5   255,IMO
          1 00018E  5D01                                 CMV,R5   1
          1 00018F  0981 0011                            BNE      s:15858,PREL

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:353  
     1978    15854    2          %TERMINAL_ID_LEV_CHAN#
     1979    15855    2          THEN
     1980    15856    2             CALL KHA$GET_CTX_PTR ( P1$->KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID, CHN$ )

  15856   1 000191  DBC7 000C                            LAB,B5   CHN$,AUTO
          1 000193  DFC7 001A                            STB,B5   RLSSIZ+4,AUTO
          1 000195  CBC6 000A                            LAB,B4   10,B6
          1 000197  CFC7 0018                            STB,B4   RLSSIZ+2,AUTO
          1 000199  BBC7 0018                            LAB,B3   RLSSIZ+2,AUTO
          1 00019B  CBF0 0200                            LAB,B4   512,IMO
          1 00019D  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          1 0001A0       0013                            DC       s:15864,PREL

     1981    15857    2                ALTRET ( KVBRLS );
     1982    15858    2       IF CHN$ ~= ADDR(NIL)

  15858   1 0001A1  8DC7 000C                            CMN      CHN$,AUTO
          1 0001A3  0901 000F                            BE       s:15864,PREL

     1983    15859    2          THEN
     1984    15860    2             IF KH$CHN.CTX$ ~= ADDR(NIL)

  15860   1 0001A5  ECC7 000C                            LDB,B6   CHN$,AUTO
          1 0001A7  8DC6 000C                            CMN      12,B6
          1 0001A9  0901 0009                            BE       s:15864,PREL

     1985    15861    2                THEN
     1986    15862    2                   KH$CHN.CTX$ -> KX$L2.ERRLOGWRDCNT = KH$CHN.CTX$ -> KX$L2.
             15862                            ERRLOGWRDCNT - RLSSIZ;

  15862   1 0001AB  DCC6 000C                            LDB,B5   12,B6
          1 0001AD  E845 0052                            LDR,R6   82,B5
          1 0001AF  E247 0016                            SUB,R6   RLSSIZ,AUTO
          1 0001B1  EF45 0052                            STR,R6   82,B5

     1987    15863    2   KVBRLS:
     1988    15864    2       CALL KVB$RLSSYS ( RLSSIZ, P1$ );
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:354  

  15864   1 0001B3  EBC7 0010            KVBRLS          LAB,B6   P1$,AUTO
          1 0001B5  EFC7 001A                            STB,B6   RLSSIZ+4,AUTO
          1 0001B7  DBC7 0016                            LAB,B5   RLSSIZ,AUTO
          1 0001B9  DFC7 0018                            STB,B5   RLSSIZ+2,AUTO
          1 0001BB  BBC7 0018                            LAB,B3   RLSSIZ+2,AUTO
          1 0001BD  CBF0 0200                            LAB,B4   512,IMO
          1 0001BF  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 0001C2       0001                            DC       s:15865,PREL

     1989    15865    2       CHN$ = SAVCHN$;

  15865   1 0001C3  ECC7 0014                            LDB,B6   SAVCHN$,AUTO
          1 0001C5  EFC7 000C                            STB,B6   CHN$,AUTO

     1990    15866    2       RETURN;

  15866   1 0001C7  ECC7 000E                            LDB,B6   CHN$+2,AUTO
          1 0001C9  C3C6 0001                            LNJ,B4   1,B6
     1991    15867
     1992    15868    2   END Y$RLSOLD;
     1993    15869    1   END KXS$Q_SYSLOG;
     1994    15870
     1995    15871        %EOD;

PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:355  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXS$Q_SYSLOG.
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:356  

 **** Variables and constants ****

  ****  Section 000 RoData KXS$Q_SYSLOG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    1C-0-0/w STRC(32)    r     1 HRDERR                     0-0-0/w STRC(400)   r     1 KX_SYSLOG_Q_ENTRY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FPT_WRSYSLOG              6-0-0/w UBIN(16)    r     1 BFRSIZ
     A-0-0/w PTR         r     1 CDAT$                      C-0-0/w PTR         r     1 CHN$
     A-0-0/w PTR         r     1 DAT$                       7-0-0/w UBIN(16)    r     1 DATSIZ
     8-0-0/w PTR         r     1 ENTRY$                    *0-0-0/w STRC(336)   r     1 FPT_WRSYSLOG
    10-0-0/w PTR         r     1 P1$                       12-0-0/w PTR         r     1 P2$
    16-0-0/w UBIN(16)    r     1 RLSSIZ                    14-0-0/w PTR         r     1 SAVCHN$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KX_LINERRLOGBFRLMT         0-0-0/b EPTR        r     1 KX_PM$(0:2)
     0-0-0/w STRC(64)    r     1 KX_SYSLOG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(4992)  r     1 KX$L2
     0-0-0/w ASTR(384)   r     1 KX$SYSLOG_Q_ENTRY          0-0-0/w ASTR(384)   r     1 KX$TSYSLOG_Q_ENTRY
     0-0-0/c CHAR(100)   r     1 STR
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:357  


   Procedure KXS$Q_SYSLOG requires 459 words for executable code.
   Procedure KXS$Q_SYSLOG requires 28 words of local(AUTO) storage.
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:358  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:359  
          MINI XREF LISTING

BFRSIZ
     14122**DCL     15758<<ASSIGN  15759>>IF      15768>>ASSIGN  15774<>CALL
CDAT$
     14125**DCL     14126--REDEF   15784<<ASSIGN
CHN$
     14127**DCL     14339--IMP-PTR 15765<>CALL    15767>>IF      15768>>ASSIGN  15768>>ASSIGN  15769>>DOWHILE
     15824>>ASSIGN  15828>>IF      15830>>DOWHILE 15838>>IF      15840>>ASSIGN  15853>>IF      15856<>CALL
     15858>>IF      15860>>IF      15862>>ASSIGN  15862>>ASSIGN  15865<<ASSIGN
DAT$
     14126**DCL     15785>>IF      15788>>ASSIGN
DATSIZ
     14123**DCL     15755<<ASSIGN  15757<<ASSIGN  15758>>ASSIGN  15783>>ASSIGN  15788>>ASSIGN  15788>>ASSIGN
ENTRY$
     14124**DCL     14150--IMP-PTR 15735<<ASSIGN  15736>>DOWHILE 15737>>IF      15737>>IF      15743>>ASSIGN
     15743>>ASSIGN  15747<<ASSIGN  15747>>ASSIGN  15774<>CALL    15778>>ASSIGN  15779>>ASSIGN  15779>>ASSIGN
     15783>>ASSIGN  15788>>ASSIGN  15788>>ASSIGN  15793>>ASSIGN  15793>>ASSIGN  15793>>ASSIGN  15797>>ASSIGN
     15804>>ASSIGN  15806>>ASSIGN  15807>>ASSIGN  15809>>ASSIGN
FPT_WRSYSLOG
     14039**DCL        18--PROC    15778>>ASSIGN
FPT_WRSYSLOG.BUF_
     14041**DCL     15753>>IF      15757>>ASSIGN  15784>>ASSIGN
FPT_WRSYSLOG.V.ERRCODE
     14060**DCL     15730>>IF      15737>>IF
FPT_WRSYSLOG.V.TERMID
     14106**DCL     15737>>IF      15765<>CALL
FPT_WRSYSLOG.V.TERMID.LEV
     14108**DCL     15762>>IF
FPT_WRSYSLOG.V.TERMID.TERM
     14108**DCL     14117--REDEF
FPT_WRSYSLOG.V.VALUES
     14119**DCL     15733<<ASSIGN  15734<<ASSIGN
GETBFR
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:360  
     15774**LABEL   15770--CALLALT
HRDERR
     14994**DCL     15730>>IF
KH$CHN.CTX$
     14409**DCL     15767>>IF      15768>>ASSIGN  15768>>ASSIGN  15769>>DOWHILE 15840>>ASSIGN  15860>>IF
     15862>>ASSIGN  15862>>ASSIGN
KH$CHN.TERMID
     14433**DCL     15830>>DOWHILE
KH$CHN.TERMID.TERM
     14435**DCL     14444--REDEF
KHA$GET_CTX_PTR
     14016**DCL-ENT 15765--CALL    15856--CALL
KVB$GETSYS
     14011**DCL-ENT 15774--CALL
KVB$RLSSYS
     14017**DCL-ENT 15864--CALL
KVBRLS IN PROCEDURE Y$RLSOLD
     15864**LABEL   15856--CALLALT
KX$L2.DFLVCPRF.TRADEL
     14606**DCL     14616--REDEF
KX$L2.DSTSNPA.ADR_STRING
     14797**DCL     14797--REDEF
KX$L2.ERRLOGWRDCNT
     14583**DCL     15768<<ASSIGN  15768>>ASSIGN  15769>>DOWHILE 15840<<ASSIGN  15862<<ASSIGN  15862>>ASSIGN
KX$L2.FRMR_NSNR
     14583**DCL     14584--REDEF
KX$L2.NTWADR.ADR_STRING
     14517**DCL     14517--REDEF
KX$L2.STATES
     14495**DCL     14495--REDEF
KX$SYSLOG_Q_ENTRY.BUF.DAT
     14226**DCL     15788<<ASSIGN  15793--ASSIGN
KX$SYSLOG_Q_ENTRY.BUF.SIZ
     14226**DCL     14226--IMP-SIZ 15783<<ASSIGN  15788>>ASSIGN  15793>>ASSIGN
KX$SYSLOG_Q_ENTRY.FPT
     14150**DCL     15778<<ASSIGN
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:361  
KX$SYSLOG_Q_ENTRY.FPT.BUF_
     14150**DCL     15793<<ASSIGN  15797<<ASSIGN
KX$SYSLOG_Q_ENTRY.FPT.V
     14150**DCL     15779--ASSIGN
KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD
     14167**DCL     15737>>IF
KX$SYSLOG_Q_ENTRY.FPT.V.TRMID
     14213**DCL     15737>>IF
KX$SYSLOG_Q_ENTRY.FPT.V.TRMID.TERM
     14215**DCL     14224--REDEF
KX$SYSLOG_Q_ENTRY.FPT.V.VALUES
     14226**DCL     15743<<ASSIGN  15743>>ASSIGN
KX$SYSLOG_Q_ENTRY.FPT.V_
     14150**DCL     15779<<ASSIGN
KX$SYSLOG_Q_ENTRY.NXT$
     14150**DCL     15747>>ASSIGN  15809<<ASSIGN
KX$TSYSLOG_Q_ENTRY
     14244**DCL     15852--ASSIGN
KX$TSYSLOG_Q_ENTRY.BUF.SIZ
     14320**DCL     14320--IMP-SIZ 15852>>ASSIGN
KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID
     14307**DCL     15830>>DOWHILE 15856<>CALL
KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID.LEV
     14309**DCL     15853>>IF
KX$TSYSLOG_Q_ENTRY.FPT.V.TRMID.TERM
     14309**DCL     14318--REDEF
KX$TSYSLOG_Q_ENTRY.NXT$
     14244**DCL     15806<<ASSIGN  15833>>ASSIGN  15845>>ASSIGN  15851<<ASSIGN  15851>>ASSIGN
KX_LINERRLOGBFRLMT
     15714**DCL     15759>>IF      15769>>DOWHILE
KX_STATS_HDLC.REQSTATS.DSPMSK
     15320**DCL     15326--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     15361**DCL     15368--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     15645**DCL     15651--REDEF
PL6.E3A0      #009=KXS$Q_SYSLOG File=KXS$SUBS.:E05TSI                            WED 07/30/97 02:32 Page:362  
KX_STATS_X25.REQSTATS.SLCMSK
     15686**DCL     15693--REDEF
KX_SYSLOG.HD$
     15719**DCL     15735>>ASSIGN  15802>>IF      15804<<ASSIGN  15825>>ASSIGN  15843>>IF      15845<<ASSIGN
KX_SYSLOG.TL$
     15719**DCL     15806>>ASSIGN  15807<<ASSIGN  15846>>IF      15848<<ASSIGN
KX_SYSLOG_Q_ENTRY
     14837**DCL     15758--ASSIGN
KX_SYSLOG_Q_ENTRY.FPT.V.TRMID.TERM
     14902**DCL     14911--REDEF
P1$ IN PROCEDURE Y$RLSOLD
     15819**DCL     15825<<ASSIGN  15826>>IF      15830>>DOWHILE 15830>>DOWHILE 15832>>ASSIGN  15833<<ASSIGN
     15833>>ASSIGN  15835>>IF      15843>>IF      15845>>ASSIGN  15846>>IF      15851>>ASSIGN  15852>>ASSIGN
     15852>>ASSIGN  15853>>IF      15856>>CALL    15864<>CALL
P2$ IN PROCEDURE Y$RLSOLD
     15820**DCL     15827<<ASSIGN  15832<<ASSIGN  15848>>ASSIGN  15849>>IF      15851>>ASSIGN
RET
     15761**LABEL   15765--CALLALT 15774--CALLALT
RLSSIZ IN PROCEDURE Y$RLSOLD
     15822**DCL     15852<<ASSIGN  15862>>ASSIGN  15864<>CALL
SAVCHN$ IN PROCEDURE Y$RLSOLD
     15821**DCL     15824<<ASSIGN  15865>>ASSIGN
STR
     14323**DCL     15788>>ASSIGN
Y$RLSOLD
     15817**PROC    15770--CALL

PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:363  
     1996        1        /*T***********************************************************/
     1997        2        /*T*                                                         */
     1998        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1999        4        /*T*                                                         */
     2000        5        /*T***********************************************************/
     2001        6        %EJECT;
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:364  
     2002        7        /*F* NAME: KXS$SYSLOG              */
     2003        8        /*F* PURPOSE: Do a wrsyslog.  */
     2004        9
     2005       10        /*D* NAME: KXS$SYSLOG              */
     2006       11        /*D* PURPOSE: Do a wrsyslog   */
     2007       12        /*D* CALL: CALL KXS$SYSLOG ( ERRCOD,TRMID,BFR,VAL0,VAL1,VAL2,VAL3);  */
     2008       13
     2009       14        KXS$SYSLOG: PROC (ERRCOD,TRMID,BFR,VAL0,VAL1,VAL2,VAL3);
     2010       15
     2011       16
     2012       17        /*****************************************************************
     2013       18        *                                                                *
     2014       19        *                           Includes                             *
     2015       20        *                                                                *
     2016       21        *****************************************************************/
     2017       22
     2018       23        %INCLUDE LCP_6;
     2019     4302        %INCLUDE KX_EQUS_E;
     2020     4741        %INCLUDE KX_PERR_C;
     2021     4870        %INCLUDE KV_GLBCNS_E;
     2022     5211          %KV#CQ_HNDID_E;
     2023     5216        %INCLUDE KX_MACROS_M;
     2024     5987        %INCLUDE K_ID_E;
     2025     6037          %K#ENTID_E;
     2026     6056          %K#LYRID_E;
     2027     6063        %INCLUDE KL_MACRO_C;
     2028     9415        %INCLUDE KL_AFCN_C;
     2029     9516        %INCLUDE KX_DATA_C;
     2030     9584
     2031     9585
     2032     9586        /*****************************************************************
     2033     9587        *                                                                *
     2034     9588        *                           External References                  *
     2035     9589        *                                                                *
     2036     9590        *****************************************************************/
     2037     9591
     2038     9592    1   DCL KXS$Q_SYSLOG ENTRY (1);
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:365  
     2039     9593    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
     2040     9594
     2041     9595
     2042     9596        /*****************************************************************
     2043     9597        *                                                                *
     2044     9598        *                           Auto/param                           *
     2045     9599        *                                                                *
     2046     9600        *****************************************************************/
     2047     9601
     2048     9602        %FPT_WRSYSLOG ( STCLASS = );
     2049     9697        %B$TERMINAL_ID ( FPTN = TRMID, ALGN = ALIGNED, STCLASS = );
     2050     9726        %VLP_ERRCODE ( FPTN = ERRCOD, STCLASS = );
     2051     9772    1   DCL BFR CHAR(200) ALIGNED;
     2052     9773    1   DCL VAL0 UBIN ALIGNED;
     2053     9774    1   DCL VAL1 UBIN ALIGNED;
     2054     9775    1   DCL VAL2 UBIN ALIGNED;
     2055     9776    1   DCL VAL3 UBIN ALIGNED;
     2056     9777    1   DCL T$ PTR;
     2057     9778
     2058     9779        /*****************************************************************
     2059     9780        *                                                                *
     2060     9781        *                           Constant                             *
     2061     9782        *                                                                *
     2062     9783        *****************************************************************/
     2063     9784        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
     2064     9785                           FPTN = HRDERR,
     2065     9786                           ERR# = %E_KXH_HRDERR# );
     2066     9832        /*****************************************************************
     2067     9833        *                                                                *
     2068     9834        *                           Static                               *
     2069     9835        *                                                                *
     2070     9836        *****************************************************************/
     2071     9837        %KX_DATA;
     2072    10527
     2073    10528        /*****************************************************************
     2074    10529        *                                                                *
     2075    10530        *                           Based                                *
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:366  
     2076    10531        *                                                                *
     2077    10532        *****************************************************************/
     2078    10533        %KX$SYSLOG_Q_ENTRY ( STCLASS="BASED(T$)" );
     2079    10627        %KX$DATA;
     2080    10647
     2081    10648        %EJECT;
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:367  
     2082    10649        /*****************************************************************
     2083    10650        *                                                                *
     2084    10651        *                           Procedure                            *
     2085    10652        *                                                                *
     2086    10653        *****************************************************************/
     2087    10654
     2088    10655    1       FPT_WRSYSLOG = '0'B;
     2089    10656    1       FPT_WRSYSLOG.V_ = VECTOR ( FPT_WRSYSLOG.V );
     2090    10657    1       FPT_WRSYSLOG.V.ERRCODE = ERRCOD;
     2091    10658    1       FPT_WRSYSLOG.V.TERMID = TRMID;
     2092    10659    1       IF ADDR(BFR) ~= ADDR(NIL)
     2093    10660    1          THEN
     2094    10661    1             FPT_WRSYSLOG.BUF_ = VECTOR (BFR);
     2095    10662    1       IF ADDR(VAL0) ~= ADDR(NIL)
     2096    10663    1          THEN
     2097    10664    1             FPT_WRSYSLOG.V.VALUES(0) = VAL0;
     2098    10665    1       IF ADDR(VAL1) ~= ADDR(NIL)
     2099    10666    1          THEN
     2100    10667    1             FPT_WRSYSLOG.V.VALUES(1) = VAL1;
     2101    10668    1       IF ADDR(VAL2) ~= ADDR(NIL)
     2102    10669    1          THEN
     2103    10670    1             FPT_WRSYSLOG.V.VALUES(2) = VAL2;
     2104    10671    1       IF ADDR(VAL3) ~= ADDR(NIL)
     2105    10672    1          THEN
     2106    10673    1             FPT_WRSYSLOG.V.VALUES(3) = VAL3;
     2107    10674
     2108    10675    1       IF (ERRCOD = HRDERR)
     2109    10676    1          THEN
     2110    10677    2             DO;
     2111    10678    2   Q_SYSLOG:    CALL KXS$Q_SYSLOG ( FPT_WRSYSLOG );
     2112    10679    2                RETURN;
     2113    10680    2             END;
     2114    10681    1       T$ = KX_SYSLOG.HD$;
     2115    10682    2       DO WHILE ( T$ ~= ADDR(NIL) );
     2116    10683    2          IF KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD ~= HRDERR
     2117    10684    2             THEN
     2118    10685    2                GOTO Q_SYSLOG;
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:368  
     2119    10686    2          T$ = KX$SYSLOG_Q_ENTRY.NXT$;
     2120    10687    2       END;
     2121    10688    1       CALL KHA$ERRLOG ( FPT_WRSYSLOG, 1 ) ALTRET ( Q_SYSLOG );
     2122    10689    1       RETURN;
     2123    10690    1   END KXS$SYSLOG;

PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:369  
--  Include file information  --

   KX_DATA_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXS$SYSLOG.

   Procedure KXS$SYSLOG requires 160 words for executable code.
   Procedure KXS$SYSLOG requires 46 words of local(AUTO) storage.

    No errors detected in file KXS$SUBS.:E05TSI    .

PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:370  

 Object Unit name= KXS$SYSLOG                                 File name= KXS$SUBS.:E05TOU
 UTS= JUL 30 '97 02:33:33.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      2      2  KXS$SYSLOG
    1   Proc  even  none   160     A0  KXS$SYSLOG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        7  KXS$SYSLOG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KXS$Q_SYSLOG
 yes     yes           Std       2 KHA$ERRLOG
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_SYSLOG                             KX_PM$                           r    G$ROS$
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:371  


     1996        1        /*T***********************************************************/
     1997        2        /*T*                                                         */
     1998        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1999        4        /*T*                                                         */
     2000        5        /*T***********************************************************/
     2001        6        %EJECT;
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:372  
     2002        7        /*F* NAME: KXS$SYSLOG              */
     2003        8        /*F* PURPOSE: Do a wrsyslog.  */
     2004        9
     2005       10        /*D* NAME: KXS$SYSLOG              */
     2006       11        /*D* PURPOSE: Do a wrsyslog   */
     2007       12        /*D* CALL: CALL KXS$SYSLOG ( ERRCOD,TRMID,BFR,VAL0,VAL1,VAL2,VAL3);  */
     2008       13
     2009       14        KXS$SYSLOG: PROC (ERRCOD,TRMID,BFR,VAL0,VAL1,VAL2,VAL3);

     14   1 000000  D380 0000 0000  xent KXS$SYSLOG      LNJ,B5   X6A_AUTO_N
          1 000003       002E 0007                       DC       46,7

     2010       15
     2011       16
     2012       17        /*****************************************************************
     2013       18        *                                                                *
     2014       19        *                           Includes                             *
     2015       20        *                                                                *
     2016       21        *****************************************************************/
     2017       22
     2018       23        %INCLUDE LCP_6;
     2019     4302        %INCLUDE KX_EQUS_E;
     2020     4741        %INCLUDE KX_PERR_C;
     2021     4870        %INCLUDE KV_GLBCNS_E;
     2022     5211          %KV#CQ_HNDID_E;
     2023     5216        %INCLUDE KX_MACROS_M;
     2024     5987        %INCLUDE K_ID_E;
     2025     6037          %K#ENTID_E;
     2026     6056          %K#LYRID_E;
     2027     6063        %INCLUDE KL_MACRO_C;
     2028     9415        %INCLUDE KL_AFCN_C;
     2029     9516        %INCLUDE KX_DATA_C;
     2030     9584
     2031     9585
     2032     9586        /*****************************************************************
     2033     9587        *                                                                *
     2034     9588        *                           External References                  *
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:373  
     2035     9589        *                                                                *
     2036     9590        *****************************************************************/
     2037     9591
     2038     9592    1   DCL KXS$Q_SYSLOG ENTRY (1);
     2039     9593    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
     2040     9594
     2041     9595
     2042     9596        /*****************************************************************
     2043     9597        *                                                                *
     2044     9598        *                           Auto/param                           *
     2045     9599        *                                                                *
     2046     9600        *****************************************************************/
     2047     9601
     2048     9602        %FPT_WRSYSLOG ( STCLASS = );
     2049     9697        %B$TERMINAL_ID ( FPTN = TRMID, ALGN = ALIGNED, STCLASS = );
     2050     9726        %VLP_ERRCODE ( FPTN = ERRCOD, STCLASS = );
     2051     9772    1   DCL BFR CHAR(200) ALIGNED;
     2052     9773    1   DCL VAL0 UBIN ALIGNED;
     2053     9774    1   DCL VAL1 UBIN ALIGNED;
     2054     9775    1   DCL VAL2 UBIN ALIGNED;
     2055     9776    1   DCL VAL3 UBIN ALIGNED;
     2056     9777    1   DCL T$ PTR;
     2057     9778
     2058     9779        /*****************************************************************
     2059     9780        *                                                                *
     2060     9781        *                           Constant                             *
     2061     9782        *                                                                *
     2062     9783        *****************************************************************/
     2063     9784        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
     2064     9785                           FPTN = HRDERR,
     2065     9786                           ERR# = %E_KXH_HRDERR# );
     2066     9832        /*****************************************************************
     2067     9833        *                                                                *
     2068     9834        *                           Static                               *
     2069     9835        *                                                                *
     2070     9836        *****************************************************************/
     2071     9837        %KX_DATA;
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:374  
     2072    10527
     2073    10528        /*****************************************************************
     2074    10529        *                                                                *
     2075    10530        *                           Based                                *
     2076    10531        *                                                                *
     2077    10532        *****************************************************************/
     2078    10533        %KX$SYSLOG_Q_ENTRY ( STCLASS="BASED(T$)" );
     2079    10627        %KX$DATA;
     2080    10647
     2081    10648        %EJECT;
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:375  
     2082    10649        /*****************************************************************
     2083    10650        *                                                                *
     2084    10651        *                           Procedure                            *
     2085    10652        *                                                                *
     2086    10653        *****************************************************************/
     2087    10654
     2088    10655    1       FPT_WRSYSLOG = '0'B;

  10655   1 000005  5C2A                                 LDV,R5   42
          1 000006  0021                                 ALR      ;
          1 000007       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000009       4007 0012                                ALPHANUM(FPT_WRSYSLOG,AUTO,,R5,FILL)

     2089    10656    1       FPT_WRSYSLOG.V_ = VECTOR ( FPT_WRSYSLOG.V );

  10656   1 00000B  EBC7 0018                            LAB,B6   FPT_WRSYSLOG+6,AUTO
          1 00000D  437F                                 CSYNC    s:10656+1,SPREL
          1 00000E  EFC7 002B                            STB,B6   T$+4,AUTO
          1 000010  6C1D                                 LDV,R6   29
          1 000011  EF47 002A                            STR,R6   T$+3,AUTO
          1 000013  ABC7 002A                            LAB,B2   T$+3,AUTO
          1 000015  2C00                                 LDV,R2   0
          1 000016  6C06                                 LDV,R6   6
          1 000017  BB87                                 LAB,B3   ,AUTO
          1 000018  3C24                                 LDV,R3   36
          1 000019  0008                                 MMM

     2090    10657    1       FPT_WRSYSLOG.V.ERRCODE = ERRCOD;

  10657   1 00001A  ECC7 0004                            LDB,B6   @ERRCOD,AUTO
          1 00001C  8C86                                 LDI      ,B6
          1 00001D  8D47 0018                            SDI      FPT_WRSYSLOG+6,AUTO

     2091    10658    1       FPT_WRSYSLOG.V.TERMID = TRMID;

  10658   1 00001F  ACC7 0006                            LDB,B2   @TRMID,AUTO
          1 000021  2C00                                 LDV,R2   0
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:376  
          1 000022  6C10                                 LDV,R6   16
          1 000023  BB87                                 LAB,B3   ,AUTO
          1 000024  3C34                                 LDV,R3   52
          1 000025  0008                                 MMM

     2092    10659    1       IF ADDR(BFR) ~= ADDR(NIL)

  10659   1 000026  DCC7 0008                            LDB,B5   @BFR,AUTO
          1 000028  8DD5                                 CMN      B5
          1 000029  0901 000E                            BE       s:10662,PREL

     2093    10660    1          THEN
     2094    10661    1             FPT_WRSYSLOG.BUF_ = VECTOR (BFR);

  10661   1 00002B  DFC7 002B                            STB,B5   T$+4,AUTO
          1 00002D  E870 00C7                            LDR,R6   199,IMO
          1 00002F  EF47 002A                            STR,R6   T$+3,AUTO
          1 000031  ABC7 002A                            LAB,B2   T$+3,AUTO
          1 000033  2C00                                 LDV,R2   0
          1 000034  6C06                                 LDV,R6   6
          1 000035  BB87                                 LAB,B3   ,AUTO
          1 000036  3C2A                                 LDV,R3   42
          1 000037  0008                                 MMM

     2095    10662    1       IF ADDR(VAL0) ~= ADDR(NIL)

  10662   1 000038  CCC7 000A                            LDB,B4   @VAL0,AUTO
          1 00003A  8DD4                                 CMN      B4
          1 00003B  0901 0004                            BE       s:10665,PREL

     2096    10663    1          THEN
     2097    10664    1             FPT_WRSYSLOG.V.VALUES(0) = VAL0;

  10664   1 00003D  E804                                 LDR,R6   ,B4
          1 00003E  EF47 0022                            STR,R6   FPT_WRSYSLOG+16,AUTO

     2098    10665    1       IF ADDR(VAL1) ~= ADDR(NIL)
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:377  

  10665   1 000040  ACC7 000C                            LDB,B2   @VAL1,AUTO
          1 000042  8DD2                                 CMN      B2
          1 000043  0901 0004                            BE       s:10668,PREL

     2099    10666    1          THEN
     2100    10667    1             FPT_WRSYSLOG.V.VALUES(1) = VAL1;

  10667   1 000045  E802                                 LDR,R6   ,B2
          1 000046  EF47 0023                            STR,R6   FPT_WRSYSLOG+17,AUTO

     2101    10668    1       IF ADDR(VAL2) ~= ADDR(NIL)

  10668   1 000048  9CC7 000E                            LDB,B1   @VAL2,AUTO
          1 00004A  8DD1                                 CMN      B1
          1 00004B  0901 0004                            BE       s:10671,PREL

     2102    10669    1          THEN
     2103    10670    1             FPT_WRSYSLOG.V.VALUES(2) = VAL2;

  10670   1 00004D  E801                                 LDR,R6   ,B1
          1 00004E  EF47 0024                            STR,R6   FPT_WRSYSLOG+18,AUTO

     2104    10671    1       IF ADDR(VAL3) ~= ADDR(NIL)

  10671   1 000050  ECC7 0010                            LDB,B6   @VAL3,AUTO
          1 000052  8DD6                                 CMN      B6
          1 000053  0901 0004                            BE       s:10675,PREL

     2105    10672    1          THEN
     2106    10673    1             FPT_WRSYSLOG.V.VALUES(3) = VAL3;

  10673   1 000055  E806                                 LDR,R6   ,B6
          1 000056  EF47 0025                            STR,R6   FPT_WRSYSLOG+19,AUTO

     2107    10674
     2108    10675    1       IF (ERRCOD = HRDERR)
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:378  

  10675   1 000058  ECC7 0004                            LDB,B6   @ERRCOD,AUTO
          1 00005A  DB80 0000 0000  00                   LAB,B5   HRDERR
          1 00005D  5C04                                 LDV,R5   4
          1 00005E  0022                                 ACM      ;
          1 00005F       4406 0000                                ALPHANUM(0,B6,,4,FILL),;
          1 000061       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          1 000063  5301 0010                            CBNE     s:10681,PREL

     2109    10676    1          THEN
     2110    10677    2             DO;

     2111    10678    2   Q_SYSLOG:    CALL KXS$Q_SYSLOG ( FPT_WRSYSLOG );

  10678   1 000065  EBC7 0012            Q_SYSLOG        LAB,B6   FPT_WRSYSLOG,AUTO
          1 000067  EFC7 002A                            STB,B6   T$+3,AUTO
          1 000069  BBC7 002A                            LAB,B3   T$+3,AUTO
          1 00006B  CBF0 0100                            LAB,B4   256,IMO
          1 00006D  E380 0000 0000  xent                 LNJ,B6   KXS$Q_SYSLOG
          1 000070       0001                            DC       s:10679,PREL

     2112    10679    2                RETURN;

  10679   1 000071  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2113    10680    2             END;
     2114    10681    1       T$ = KX_SYSLOG.HD$;

  10681   1 000074  DC80 0000 0000  xsym                 LDB,B5   KX_SYSLOG
          1 000077  DFC7 0027                            STB,B5   T$,AUTO

     2115    10682    2       DO WHILE ( T$ ~= ADDR(NIL) );

  10682   1 000079  0F81 0010                            B        s:10687,PREL

     2116    10683    2          IF KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD ~= HRDERR

PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:379  
  10683   1 00007B  ECC7 0027                            LDB,B6   T$,AUTO
          1 00007D  DB80 0000 0000  00                   LAB,B5   HRDERR
          1 000080  5C04                                 LDV,R5   4
          1 000081  0022                                 ACM      ;
          1 000082       4406 0008                                ALPHANUM(8,B6,,4,FILL),;
          1 000084       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          1 000086  535F                                 CBNE     s:10677,SPREL

     2117    10684    2             THEN
     2118    10685    2                GOTO Q_SYSLOG;
     2119    10686    2          T$ = KX$SYSLOG_Q_ENTRY.NXT$;

  10686   1 000087  DC86                                 LDB,B5   ,B6
          1 000088  DFC7 0027                            STB,B5   T$,AUTO

     2120    10687    2       END;

  10687   1 00008A  8DC7 0027                            CMN      T$,AUTO
          1 00008C  09EF                                 BNE      s:10683,SPREL

     2121    10688    1       CALL KHA$ERRLOG ( FPT_WRSYSLOG, 1 ) ALTRET ( Q_SYSLOG );

  10688   1 00008D  EBF0 0001                            LAB,B6   1,IMO
          1 00008F  EFC7 002C                            STB,B6   T$+5,AUTO
          1 000091  CBC7 0012                            LAB,B4   FPT_WRSYSLOG,AUTO
          1 000093  CFC7 002A                            STB,B4   T$+3,AUTO
          1 000095  BBC7 002A                            LAB,B3   T$+3,AUTO
          1 000097  CBF0 0200                            LAB,B4   512,IMO
          1 000099  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 00009C       FFC9                            DC       s:10677,PREL

     2122    10689    1       RETURN;

  10689   1 00009D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     2123    10690    1   END KXS$SYSLOG;

PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:380  
--  Include file information  --

   KX_DATA_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXS$SYSLOG.
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:381  

 **** Variables and constants ****

  ****  Section 000 RoData KXS$SYSLOG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 HRDERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/w PTR         r     1 @BFR                       4-0-0/w PTR         r     1 @ERRCOD
     6-0-0/w PTR         r     1 @TRMID                     A-0-0/w PTR         r     1 @VAL0
     C-0-0/w PTR         r     1 @VAL1                      E-0-0/w PTR         r     1 @VAL2
    10-0-0/w PTR         r     1 @VAL3                     *0-0-0/w CHAR(200)   r     1 BFR
    *0-0-0/w STRC(32)    r     1 ERRCOD                    12-0-0/w STRC(336)   r     1 FPT_WRSYSLOG
    27-0-0/w PTR         r     1 T$                        *0-0-0/w STRC(128)   r     1 TRMID
    *0-0-0/w UBIN(16)    r     1 VAL0                      *0-0-0/w UBIN(16)    r     1 VAL1
    *0-0-0/w UBIN(16)    r     1 VAL2                      *0-0-0/w UBIN(16)    r     1 VAL3

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b EPTR        r     1 KX_PM$(0:2)                0-0-0/w STRC(64)    r     1 KX_SYSLOG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(384)   r     1 KX$SYSLOG_Q_ENTRY

PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:382  

   Procedure KXS$SYSLOG requires 160 words for executable code.
   Procedure KXS$SYSLOG requires 46 words of local(AUTO) storage.

    No errors detected in file KXS$SUBS.:E05TSI    .
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:383  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:384  
          MINI XREF LISTING

BFR
      9772**DCL        14--PROC    10659--IF      10661--ASSIGN
ERRCOD
      9740**DCL        14--PROC    10657>>ASSIGN  10675>>IF
FPT_WRSYSLOG
      9615**DCL     10655<<ASSIGN  10678<>CALL    10688<>CALL
FPT_WRSYSLOG.BUF_
      9617**DCL     10661<<ASSIGN
FPT_WRSYSLOG.V
      9619**DCL     10656--ASSIGN
FPT_WRSYSLOG.V.ERRCODE
      9636**DCL     10657<<ASSIGN
FPT_WRSYSLOG.V.TERMID
      9682**DCL     10658<<ASSIGN
FPT_WRSYSLOG.V.TERMID.TERM
      9684**DCL      9693--REDEF
FPT_WRSYSLOG.V.VALUES
      9695**DCL     10664<<ASSIGN  10667<<ASSIGN  10670<<ASSIGN  10673<<ASSIGN
FPT_WRSYSLOG.V_
      9617**DCL     10656<<ASSIGN
HRDERR
      9800**DCL     10675>>IF      10683>>IF
KHA$ERRLOG
      9593**DCL-ENT 10688--CALL
KX$DATA.RLS_STAT
     10642**DCL     10643--REDEF
KX$SYSLOG_Q_ENTRY.BUF.SIZ
     10624**DCL     10624--IMP-SIZ
KX$SYSLOG_Q_ENTRY.FPT.V.ERRCOD
     10565**DCL     10683>>IF
KX$SYSLOG_Q_ENTRY.FPT.V.TRMID.TERM
     10613**DCL     10622--REDEF
PL6.E3A0      #010=KXS$SYSLOG File=KXS$SUBS.:E05TSI                              WED 07/30/97 02:33 Page:385  
KX$SYSLOG_Q_ENTRY.NXT$
     10548**DCL     10686>>ASSIGN
KXS$Q_SYSLOG
      9592**DCL-ENT 10678--CALL
KX_STATS_HDLC.REQSTATS.DSPMSK
     10124**DCL     10130--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     10165**DCL     10172--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     10449**DCL     10455--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     10490**DCL     10497--REDEF
KX_SYSLOG.HD$
     10523**DCL     10681>>ASSIGN
Q_SYSLOG
     10678**LABEL   10685--GOTO    10688--CALLALT
T$
      9777**DCL     10548--IMP-PTR 10681<<ASSIGN  10682>>DOWHILE 10683>>IF      10686<<ASSIGN  10686>>ASSIGN
TRMID
      9711**DCL        14--PROC    10658>>ASSIGN
TRMID.TERM
      9715**DCL      9724--REDEF
VAL0
      9773**DCL        14--PROC    10662--IF      10664>>ASSIGN
VAL1
      9774**DCL        14--PROC    10665--IF      10667>>ASSIGN
VAL2
      9775**DCL        14--PROC    10668--IF      10670>>ASSIGN
VAL3
      9776**DCL        14--PROC    10671--IF      10673>>ASSIGN
