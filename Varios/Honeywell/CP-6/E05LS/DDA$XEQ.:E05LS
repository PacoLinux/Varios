VERSION E05

PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:1    
        1        1        /*M* DDA$XEQ XEQ DO ROUTINE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D*  NAME:   DDA$XEQ
        9        9              CALL:   CALL DDA$XEQ    ALTRET(CANT_XEQ)
       10       10              INPUT:  S_D.DO$ POINTS TO THE DIRECT BUFFER WHICH
       11       11                      HOLDS THE INSTRUCTION TO BE EXECUTED.
       12       12              OUTPUT: THE INSTRUCTION IS MOVED TO THE SPECIAL LOCATION(S).
       13       13              DESCRIPTION:
       14       14                      THE INSTRUCTION IS MOVED TO THE SPECIAL LOCATION(S).
       15       15                      THE LENGTH AND TYPE OF THE INSTRUCTION IS OB
       16       16                      TAINED.  THE DERAILS ARE PLANTED.  IF THE INSTRUCTION
       17       17                      TO BE EXECUTED IS A CONDITIONAL TRANSFER WHICH WILL
       18       18                      TRANSFER....OR AN UNCONDITIONAL TRANSFER...THEN A
       19       19                      DERAIL IS PLANTED IN THE EFFECTIVE ADDRRESS OF THE
       20       20                      TRANSFER.  OTHERWISE, THE XEQ STOPPER DERAIL IS
       21       21                      PLANTED IN THE SPECIAL LOCATION AREA. GOIC IS SET
       22       22                      TO SL, AND DOXEQ RETURNS TO THE CALLER...WHICH WILL
       23       23                      GO TO USERGO.  ALTERNATE RETURN IF
       24       24                      INS$ IS A TRANSFER WHICH HAS:
       25       25                        ANY OF THE FOLLOWING ADDRESS MODIFICATIONS:
       26       26                        DR (AR BIT = 1)
       27       27                        TM = IR,RI OR IT
       28       28                        TM = R, AND TD = DU OR DL
       29       29                      */
       30       30        DDA$XEQ: PROC ALTRET;
       31       31    1   DCL K SBIN;
       32       32    1   DCL L SBIN;
       33       33    1   DCL P$ PTR;
       34       34    1   DCL INS$ PTR;
       35       35    1   DCL TYPE SBIN;
       36       36    1   DCL LENGTH SBIN;
       37       37    1   DCL DRL$ PTR;
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:2    
       38       38    1   DCL SAVE$ PTR;
       39       39    1   DCL YFIELD SBIN;
       40       40    1   DCL IC SBIN;
       41       41    1   DCL SEG UBIN(36);
       42       42    1   DCL DESC# UBIN(36);
       43       43    1   DCL NOT_IS BIT(1);
       44       44    1   DCL 1 ADDRESS,
       45       45    1         2 HI UBIN(18) UNAL,
       46       46    1         2 LOW,
       47       47    1           3 DR UBIN(3) UNAL,
       48       48    1           3 Y UBIN(15) UNAL,
       49       49    1         2 LOW1 REDEF LOW UBIN(18) UNAL;
       50       50    1   DCL ADDRESS1 REDEF ADDRESS SBIN;
       51       51    1   DCL ADDRESS2 REDEF ADDRESS BIT(36);
       52       52    1   DCL WIRD UBIN(36) BASED;
       53       53        %INCLUDE DD$BASED;
       54     1356        %XEQ$CMD (STCLASS=BASED);
       55     1370        %HOST_INSTR(NAME=INSTR);
       56     1392        %U$SE;
       57     1400        %TSX_INSTR;
       58     1408        %HOST_REG$VALUES (NAME=REG$VALUES,STCLASS=BASED);
       59     1421        %INCLUDE DD_SUBS_C;
       60     1692        %INCLUDE XUH_MACRO_C;
       61     1776        %INCLUDE DD_SD_M;
       62     3112        %S_D;
       63     4430        %INCLUDE DD_ERR_C;
       64     4827        %LIST;
       65     4828    1   DCL USE$ PTR       SYMREF;
       66     4829    1   DCL UIS$ PTR       SYMREF;
       67     4830    1   DCL DDB$INTERP ENTRY(3);
       68     4831    1   DCL DDB$PLANT ENTRY ALTRET;
       69     4832    1   DCL DDB$TESTTRAN ENTRY(1) ALTRET ;
       70     4833    1   DCL DDB$TEFFADD ENTRY(2) ALTRET;
       71     4834    1   DCL DDB$PLANTONE ENTRY(4) ALTRET;
       72     4835    1   DCL DDE$ERROR ENTRY;
       73     4836    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
       74     4837    1   DCL DDK$EVAL ENTRY(6) ALTRET;
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:3    
       75     4838    1   DCL DXA$SSF ENTRY ALTRET;
       76     4839    1        IF S_D.SL$ = ADDR(NIL) THEN GOTO CANT_XEQ;
       77     4840    1        IF U$SE.CUR = '0'B THEN GOTO NOT_IN_SYNC;
       78     4841    1        S_D.GO_MODE = '1'B;                /* SET GO MODE */
       79     4842                                                /* CHECK FOR SAFE STORE FULL */
       80     4843    1        CALL DXA$SSF ALTRET(CANT_XEQ);
       81     4844                                      /* GET TO THE INSTRUCTION OR DATA DESCRIPTION */
       82     4845    1        INS$ = S_D.D$;                     /* D$ POINTS TO WORD FOLLOWING IFSPEC */
       83     4846                                                /* EVALUATE YFIELD */
       84     4847    1        IF S_D.DO$->XEQ$CMD.INSTR
       85     4848    2        THEN DO;
       86     4849                       /* THE YFIELD IS EXPRESSED AS A DATA DESCRIPTION. EVALUATE IT */
       87     4850    2             S_D.DESC$ = PINCRW(INS$,1);
       88     4851    2             CALL DDK$EVAL(ADDRESS1,SEG,DESC#,NOT_IS) ALTRET(CANT_XEQ);
       89     4852    2             IF NOT_IS THEN GOTO CANT_XEQ; /* CANT XEQ IF NOT IN IS SEGMENT */
       90     4853    2             IF INS$ -> INSTR.AR OR S_D.DO$ -> XEQ$CMD.AWDX
       91     4854    2             THEN INS$ -> INSTR.YFIELD.YY = ADDRESS.LOW.Y;
       92     4855    2             ELSE INS$ -> INSTR.Y = ADDRESS.LOW1;
       93     4856    2           END;
       94     4857    2        ELSE DO;
       95     4858                       /* THE INSTRUCTION IS OCTAL OR A USER DEF.  JUST EVALUATE IT */
       96     4859    2             S_D.DESC$ = INS$;
       97     4860    2             CALL DDK$EVAL(ADDRESS1,SEG,DESC#,NOT_IS) ALTRET(CANT_XEQ);
       98     4861    2             IF NOT_IS THEN GOTO CANT_XEQ; /* CANT XEQ IF NOT IN IS SEGMENT */
       99     4862    2             INS$ -> INSTR = ADDRESS2;
      100     4863    2           END;
      101     4864                                                /* GET THE NATURE OF THE BEAST */
      102     4865    1        CALL DDB$INTERP(INS$,TYPE,LENGTH);
      103     4866                                           /* VERIFY THE LENGTH, BASED ON OP CODE */
      104     4867    1        IF LENGTH ~= S_D.DO$->XEQ$CMD.NUM THEN GOTO CANT_XEQ;
      105     4868                  /* MOVE INSTRUCTION FROM SCAN BUFFER INTO X$EQ INFO TABLE AND ALSO
      106     4869                  INTO SPECIAL LOCATIONS */
      107     4870    1        P$ = S_D.SL$;
      108     4871    1        L = LENGTH - 1;
      109     4872    2        DO K = 0 TO L;
      110     4873    2             S_D.X$EQ.INS(K) = INS$->WIRD;
      111     4874    2             CALL DDC$PUTONE(P$,S_D.X$EQ.INS(K)) ALTRET(BAD_PUT);
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:4    
      112     4875    2             P$ = PINCRW(P$,1);
      113     4876    2             INS$ = PINCRW(INS$,1);        /* POINT TO NEXT WORD OF INSTRUCTION */
      114     4877    2           END;
      115     4878    1        S_D.X$EQ.INS_LENGTH = LENGTH;
      116     4879        /* PLANT THE DERAILS */
      117     4880    1        CALL DDB$PLANT ALTRET(BAD_PUT);
      118     4881        /* ESTABLISH PONTER TO XEQ STOPPER */
      119     4882    1        DRL$ = PINCRW(S_D.SL$,LENGTH);
      120     4883    1        SAVE$ = ADDR(S_D.X$EQ.SAVED);
      121     4884    1        YFIELD = TYPE;
      122     4885        /* COMPUTE EFFECTIVE IC IF THE INSTRUCTION IS A TRANSFER */
      123     4886    1        IF TYPE = T_CONTRA
      124     4887    1        THEN CALL DDB$TESTTRAN(INS$) ALTRET(NO_TRAN);
      125     4888    1        IF (TYPE = T_UNCTRA) OR (TYPE = T_CONTRA)
      126     4889    2        THEN DO;
      127     4890    2             CALL DDB$TEFFADD(INS$,IC) ALTRET(CANT_XEQ);
      128     4891    2             DRL$ = PINCRW(UIS$,IC);
      129     4892    2           END;
      130     4893    1        IF INS$->TSX_INSTR.OP = T_TSX
      131     4894    2        THEN DO;                           /* Change TSX to TRA and stuff in SL */
      132     4895    2             S_D.UREG$->REG$VALUES.X(INS$->TSX_INSTR.XR) = S_D.SAVEIC;
      133     4896    2             INS$->INSTR.OP = T_TRA;
      134     4897    2             CALL DDC$PUTONE(S_D.SL$, INS$->WIRD) ALTRET(BAD_PUT);
      135     4898    2           END;
      136     4899    1        IF TYPE = T_SPECIAL
      137     4900    2        THEN DO;
      138     4901    2             S_D.ERROR = E@NOTIMP;    /* E@NOTIMP - XEQ of a special instruction */
      139     4902    2             CALL DDE$ERROR;
      140     4903    2             GOTO BAD_PUT;
      141     4904    2           END;
      142     4905    1   NO_TRAN: ;
      143     4906    1        CALL DDB$PLANTONE(DRL$,YFIELD,DRL_XEQ,SAVE$) ALTRET(BAD_PUT);
      144     4907    1        S_D.X$EQ.LOC = POFFW(DRL$,UIS$);
      145     4908    1        S_D.GOIC = S_D.SL;
      146     4909    1        S_D.X$EQ.ACTIVE = '1'B;            /* Set XEQ active. */
      147     4910    1        S_D.GO_MODE = '0'B; RETURN;
      148     4911    1   NOT_IN_SYNC:
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:5    
      149     4912    1        S_D.ERROR = E@USE_CONFLICT;        /* E@USE_CONFLICT */
      150     4913    1        GOTO BAD_PUT;
      151     4914    1   CANT_XEQ: ;
      152     4915    1        S_D.ERROR = E@CANTXEQ;        /* E@CANTXEQ - CANT XEQ THIS INSTRUCTION */
      153     4916    1   BAD_PUT: ;
      154     4917    1        S_D.GO_MODE = '0'B; ALTRETURN;
      155     4918    1   END DDA$XEQ;

PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:6    
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDA$XEQ.

   Procedure DDA$XEQ requires 238 words for executable code.
   Procedure DDA$XEQ requires 22 words of local(AUTO) storage.

    No errors detected in file DDA$XEQ.:E05TSI    .

PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:7    

 Object Unit name= DDA$XEQ                                    File name= DDA$XEQ.:E05TOU
 UTS= JUL 29 '97 13:42:14.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   238    356  DDA$XEQ
    1  RoData even  none     2      2  DDA$XEQ

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  DDA$XEQ

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 DXA$SSF
 yes     yes           Std       6 DDK$EVAL
         yes           Std       3 DDB$INTERP
 yes     yes           Std       2 DDC$PUTONE
 yes     yes           Std       0 DDB$PLANT
 yes     yes           Std       1 DDB$TESTTRAN
 yes     yes           Std       2 DDB$TEFFADD
         yes           Std       0 DDE$ERROR
 yes     yes           Std       4 DDB$PLANTONE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  USE$                                  UIS$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:9    


        1        1        /*M* DDA$XEQ XEQ DO ROUTINE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D*  NAME:   DDA$XEQ
        9        9              CALL:   CALL DDA$XEQ    ALTRET(CANT_XEQ)
       10       10              INPUT:  S_D.DO$ POINTS TO THE DIRECT BUFFER WHICH
       11       11                      HOLDS THE INSTRUCTION TO BE EXECUTED.
       12       12              OUTPUT: THE INSTRUCTION IS MOVED TO THE SPECIAL LOCATION(S).
       13       13              DESCRIPTION:
       14       14                      THE INSTRUCTION IS MOVED TO THE SPECIAL LOCATION(S).
       15       15                      THE LENGTH AND TYPE OF THE INSTRUCTION IS OB
       16       16                      TAINED.  THE DERAILS ARE PLANTED.  IF THE INSTRUCTION
       17       17                      TO BE EXECUTED IS A CONDITIONAL TRANSFER WHICH WILL
       18       18                      TRANSFER....OR AN UNCONDITIONAL TRANSFER...THEN A
       19       19                      DERAIL IS PLANTED IN THE EFFECTIVE ADDRRESS OF THE
       20       20                      TRANSFER.  OTHERWISE, THE XEQ STOPPER DERAIL IS
       21       21                      PLANTED IN THE SPECIAL LOCATION AREA. GOIC IS SET
       22       22                      TO SL, AND DOXEQ RETURNS TO THE CALLER...WHICH WILL
       23       23                      GO TO USERGO.  ALTERNATE RETURN IF
       24       24                      INS$ IS A TRANSFER WHICH HAS:
       25       25                        ANY OF THE FOLLOWING ADDRESS MODIFICATIONS:
       26       26                        DR (AR BIT = 1)
       27       27                        TM = IR,RI OR IT
       28       28                        TM = R, AND TD = DU OR DL
       29       29                      */
       30       30        DDA$XEQ: PROC ALTRET;

     30  0 000000   000000 700200 xent  DDA$XEQ      TSX0  ! X66_AUTO_0
         0 000001   000026 000000                    ZERO    22,0

       31       31    1   DCL K SBIN;
       32       32    1   DCL L SBIN;
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:10   
       33       33    1   DCL P$ PTR;
       34       34    1   DCL INS$ PTR;
       35       35    1   DCL TYPE SBIN;
       36       36    1   DCL LENGTH SBIN;
       37       37    1   DCL DRL$ PTR;
       38       38    1   DCL SAVE$ PTR;
       39       39    1   DCL YFIELD SBIN;
       40       40    1   DCL IC SBIN;
       41       41    1   DCL SEG UBIN(36);
       42       42    1   DCL DESC# UBIN(36);
       43       43    1   DCL NOT_IS BIT(1);
       44       44    1   DCL 1 ADDRESS,
       45       45    1         2 HI UBIN(18) UNAL,
       46       46    1         2 LOW,
       47       47    1           3 DR UBIN(3) UNAL,
       48       48    1           3 Y UBIN(15) UNAL,
       49       49    1         2 LOW1 REDEF LOW UBIN(18) UNAL;
       50       50    1   DCL ADDRESS1 REDEF ADDRESS SBIN;
       51       51    1   DCL ADDRESS2 REDEF ADDRESS BIT(36);
       52       52    1   DCL WIRD UBIN(36) BASED;
       53       53        %INCLUDE DD$BASED;
       54     1356        %XEQ$CMD (STCLASS=BASED);
       55     1370        %HOST_INSTR(NAME=INSTR);
       56     1392        %U$SE;
       57     1400        %TSX_INSTR;
       58     1408        %HOST_REG$VALUES (NAME=REG$VALUES,STCLASS=BASED);
       59     1421        %INCLUDE DD_SUBS_C;
       60     1692        %INCLUDE XUH_MACRO_C;
       61     1776        %INCLUDE DD_SD_M;
       62     3112        %S_D;
       63     4430        %INCLUDE DD_ERR_C;
       64     4827        %LIST;
       65     4828    1   DCL USE$ PTR       SYMREF;
       66     4829    1   DCL UIS$ PTR       SYMREF;
       67     4830    1   DCL DDB$INTERP ENTRY(3);
       68     4831    1   DCL DDB$PLANT ENTRY ALTRET;
       69     4832    1   DCL DDB$TESTTRAN ENTRY(1) ALTRET ;
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:11   
       70     4833    1   DCL DDB$TEFFADD ENTRY(2) ALTRET;
       71     4834    1   DCL DDB$PLANTONE ENTRY(4) ALTRET;
       72     4835    1   DCL DDE$ERROR ENTRY;
       73     4836    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
       74     4837    1   DCL DDK$EVAL ENTRY(6) ALTRET;
       75     4838    1   DCL DXA$SSF ENTRY ALTRET;
       76     4839    1        IF S_D.SL$ = ADDR(NIL) THEN GOTO CANT_XEQ;

   4839  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000006 236100                    LDQ     6,,PR0
         0 000004   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000005   000350 600000 0                  TZE     CANT_XEQ

       77     4840    1        IF U$SE.CUR = '0'B THEN GOTO NOT_IN_SYNC;

   4840  0 000006   000000 471400 xsym               LDP1    USE$
         0 000007   100000 234100                    SZN     0,,PR1
         0 000010   000345 605000 0                  TPL     NOT_IN_SYNC

       78     4841    1        S_D.GO_MODE = '1'B;                /* SET GO MODE */

   4841  0 000011   400000 236003                    LDQ     -131072,DU
         0 000012   000020 756100                    STQ     16,,PR0

       79     4842                                                /* CHECK FOR SAFE STORE FULL */
       80     4843    1        CALL DXA$SSF ALTRET(CANT_XEQ);

   4843  0 000013   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000014   000000 701000 xent               TSX1    DXA$SSF
         0 000015   000350 702000 0                  TSX2    CANT_XEQ

       81     4844                                      /* GET TO THE INSTRUCTION OR DATA DESCRIPTION */
       82     4845    1        INS$ = S_D.D$;                     /* D$ POINTS TO WORD FOLLOWING IFSPEC */

   4845  0 000016   000000 470400 xsym               LDP0    S_D$
         0 000017   000044 236100                    LDQ     36,,PR0
         0 000020   200006 756100                    STQ     INS$,,AUTO
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:12   

       83     4846                                                /* EVALUATE YFIELD */
       84     4847    1        IF S_D.DO$->XEQ$CMD.INSTR

   4847  0 000021   000031 471500                    LDP1    25,,PR0
         0 000022   100001 236100                    LDQ     1,,PR1
         0 000023   400000 316007                    CANQ    -131072,DL
         0 000024   000070 600000 0                  TZE     s:4859

       85     4848    2        THEN DO;

       86     4849                       /* THE YFIELD IS EXPRESSED AS A DATA DESCRIPTION. EVALUATE IT */
       87     4850    2             S_D.DESC$ = PINCRW(INS$,1);

   4850  0 000025   200006 236100                    LDQ     INS$,,AUTO
         0 000026   000001 036003                    ADLQ    1,DU
         0 000027   000041 756100                    STQ     33,,PR0

       88     4851    2             CALL DDK$EVAL(ADDRESS1,SEG,DESC#,NOT_IS) ALTRET(CANT_XEQ);

   4851  0 000030   200017 633500                    EPPR3   NOT_IS,,AUTO
         0 000031   200025 453500                    STP3    ADDRESS+5,,AUTO
         0 000032   200016 634500                    EPPR4   DESC#,,AUTO
         0 000033   200024 454500                    STP4    ADDRESS+4,,AUTO
         0 000034   200015 635500                    EPPR5   SEG,,AUTO
         0 000035   200023 455500                    STP5    ADDRESS+3,,AUTO
         0 000036   200020 636500                    EPPR6   ADDRESS,,AUTO
         0 000037   200022 456500                    STP6    ADDRESS+2,,AUTO
         0 000040   200022 630500                    EPPR0   ADDRESS+2,,AUTO
         0 000041   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000042   000000 701000 xent               TSX1    DDK$EVAL
         0 000043   000350 702000 0                  TSX2    CANT_XEQ

       89     4852    2             IF NOT_IS THEN GOTO CANT_XEQ; /* CANT XEQ IF NOT IN IS SEGMENT */

   4852  0 000044   200017 234100                    SZN     NOT_IS,,AUTO
         0 000045   000350 604000 0                  TMI     CANT_XEQ
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:13   

       90     4853    2             IF INS$ -> INSTR.AR OR S_D.DO$ -> XEQ$CMD.AWDX

   4853  0 000046   200006 470500                    LDP0    INS$,,AUTO
         0 000047   000000 236100                    LDQ     0,,PR0
         0 000050   000100 316007                    CANQ    64,DL
         0 000051   000057 601000 0                  TNZ     s:4854
         0 000052   000000 471400 xsym               LDP1    S_D$
         0 000053   100031 473500                    LDP3    25,,PR1
         0 000054   300001 236100                    LDQ     1,,PR3
         0 000055   100000 316007                    CANQ    32768,DL
         0 000056   000065 600000 0                  TZE     s:4855

       91     4854    2             THEN INS$ -> INSTR.YFIELD.YY = ADDRESS.LOW.Y;

   4854  0 000057   200020 236100                    LDQ     ADDRESS,,AUTO
         0 000060   000022 736000                    QLS     18
         0 000061   000000 676100                    ERQ     0,,PR0
         0 000062   077777 376003                    ANQ     32767,DU
         0 000063   000000 656100                    ERSQ    0,,PR0
         0 000064   000113 710000 0                  TRA     s:4865

       92     4855    2             ELSE INS$ -> INSTR.Y = ADDRESS.LOW1;

   4855  0 000065   200020 720100                    LXL0    ADDRESS,,AUTO
         0 000066   000000 740100                    STX0    0,,PR0

       93     4856    2           END;

   4856  0 000067   000113 710000 0                  TRA     s:4865

       94     4857    2        ELSE DO;

       95     4858                       /* THE INSTRUCTION IS OCTAL OR A USER DEF.  JUST EVALUATE IT */
       96     4859    2             S_D.DESC$ = INS$;

   4859  0 000070   200006 236100                    LDQ     INS$,,AUTO
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:14   
         0 000071   000041 756100                    STQ     33,,PR0

       97     4860    2             CALL DDK$EVAL(ADDRESS1,SEG,DESC#,NOT_IS) ALTRET(CANT_XEQ);

   4860  0 000072   200017 633500                    EPPR3   NOT_IS,,AUTO
         0 000073   200025 453500                    STP3    ADDRESS+5,,AUTO
         0 000074   200016 634500                    EPPR4   DESC#,,AUTO
         0 000075   200024 454500                    STP4    ADDRESS+4,,AUTO
         0 000076   200015 635500                    EPPR5   SEG,,AUTO
         0 000077   200023 455500                    STP5    ADDRESS+3,,AUTO
         0 000100   200020 636500                    EPPR6   ADDRESS,,AUTO
         0 000101   200022 456500                    STP6    ADDRESS+2,,AUTO
         0 000102   200022 630500                    EPPR0   ADDRESS+2,,AUTO
         0 000103   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000104   000000 701000 xent               TSX1    DDK$EVAL
         0 000105   000350 702000 0                  TSX2    CANT_XEQ

       98     4861    2             IF NOT_IS THEN GOTO CANT_XEQ; /* CANT XEQ IF NOT IN IS SEGMENT */

   4861  0 000106   200017 234100                    SZN     NOT_IS,,AUTO
         0 000107   000350 604000 0                  TMI     CANT_XEQ

       99     4862    2             INS$ -> INSTR = ADDRESS2;

   4862  0 000110   200020 236100                    LDQ     ADDRESS,,AUTO
         0 000111   200006 470500                    LDP0    INS$,,AUTO
         0 000112   000000 756100                    STQ     0,,PR0

      100     4863    2           END;

      101     4864                                                /* GET THE NATURE OF THE BEAST */
      102     4865    1        CALL DDB$INTERP(INS$,TYPE,LENGTH);

   4865  0 000113   200010 630500                    EPPR0   LENGTH,,AUTO
         0 000114   200024 450500                    STP0    ADDRESS+4,,AUTO
         0 000115   200007 631500                    EPPR1   TYPE,,AUTO
         0 000116   200023 451500                    STP1    ADDRESS+3,,AUTO
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:15   
         0 000117   200006 633500                    EPPR3   INS$,,AUTO
         0 000120   200022 453500                    STP3    ADDRESS+2,,AUTO
         0 000121   200022 630500                    EPPR0   ADDRESS+2,,AUTO
         0 000122   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000123   000000 701000 xent               TSX1    DDB$INTERP
         0 000124   000000 011000                    NOP     0

      103     4866                                           /* VERIFY THE LENGTH, BASED ON OP CODE */
      104     4867    1        IF LENGTH ~= S_D.DO$->XEQ$CMD.NUM THEN GOTO CANT_XEQ;

   4867  0 000125   000000 470400 xsym               LDP0    S_D$
         0 000126   000031 471500                    LDP1    25,,PR0
         0 000127   100001 236100                    LDQ     1,,PR1
         0 000130   000022 772000                    QRL     18
         0 000131   200010 116100                    CMPQ    LENGTH,,AUTO
         0 000132   000350 601000 0                  TNZ     CANT_XEQ

      105     4868                  /* MOVE INSTRUCTION FROM SCAN BUFFER INTO X$EQ INFO TABLE AND ALSO
      106     4869                  INTO SPECIAL LOCATIONS */
      107     4870    1        P$ = S_D.SL$;

   4870  0 000133   000006 236100                    LDQ     6,,PR0
         0 000134   200005 756100                    STQ     P$,,AUTO

      108     4871    1        L = LENGTH - 1;

   4871  0 000135   200010 235100                    LDA     LENGTH,,AUTO
         0 000136   000001 135007                    SBLA    1,DL
         0 000137   200004 755100                    STA     L,,AUTO

      109     4872    2        DO K = 0 TO L;

   4872  0 000140   200003 450100                    STZ     K,,AUTO
         0 000141   000171 710000 0                  TRA     s:4877+1

      110     4873    2             S_D.X$EQ.INS(K) = INS$->WIRD;

PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:16   
   4873  0 000142   200006 470500                    LDP0    INS$,,AUTO
         0 000143   000000 471400 xsym               LDP1    S_D$
         0 000144   200003 720100                    LXL0    K,,AUTO
         0 000145   000000 235100                    LDA     0,,PR0
         0 000146   104652 755110                    STA     2474,X0,PR1

      111     4874    2             CALL DDC$PUTONE(P$,S_D.X$EQ.INS(K)) ALTRET(BAD_PUT);

   4874  0 000147   200003 236100                    LDQ     K,,AUTO
         0 000150   000022 736000                    QLS     18
         0 000151   004652 036003                    ADLQ    2474,DU
         0 000152   000000 036000 xsym               ADLQ    S_D$
         0 000153   200023 756100                    STQ     ADDRESS+3,,AUTO
         0 000154   200005 630500                    EPPR0   P$,,AUTO
         0 000155   200022 450500                    STP0    ADDRESS+2,,AUTO
         0 000156   200022 630500                    EPPR0   ADDRESS+2,,AUTO
         0 000157   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000160   000000 701000 xent               TSX1    DDC$PUTONE
         0 000161   000353 702000 0                  TSX2    BAD_PUT

      112     4875    2             P$ = PINCRW(P$,1);

   4875  0 000162   200005 236100                    LDQ     P$,,AUTO
         0 000163   000001 036003                    ADLQ    1,DU
         0 000164   200005 756100                    STQ     P$,,AUTO

      113     4876    2             INS$ = PINCRW(INS$,1);        /* POINT TO NEXT WORD OF INSTRUCTION */

   4876  0 000165   200006 236100                    LDQ     INS$,,AUTO
         0 000166   000001 036003                    ADLQ    1,DU
         0 000167   200006 756100                    STQ     INS$,,AUTO

      114     4877    2           END;

   4877  0 000170   200003 054100                    AOS     K,,AUTO
         0 000171   200003 236100                    LDQ     K,,AUTO
         0 000172   200004 116100                    CMPQ    L,,AUTO
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:17   
         0 000173   000142 604400 0                  TMOZ    s:4873

      115     4878    1        S_D.X$EQ.INS_LENGTH = LENGTH;

   4878  0 000174   200010 235100                    LDA     LENGTH,,AUTO
         0 000175   000000 470400 xsym               LDP0    S_D$
         0 000176   004650 755100                    STA     2472,,PR0

      116     4879        /* PLANT THE DERAILS */
      117     4880    1        CALL DDB$PLANT ALTRET(BAD_PUT);

   4880  0 000177   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000200   000000 701000 xent               TSX1    DDB$PLANT
         0 000201   000353 702000 0                  TSX2    BAD_PUT

      118     4881        /* ESTABLISH PONTER TO XEQ STOPPER */
      119     4882    1        DRL$ = PINCRW(S_D.SL$,LENGTH);

   4882  0 000202   000000 470400 xsym               LDP0    S_D$
         0 000203   000006 471500                    LDP1    6,,PR0
         0 000204   200010 720100                    LXL0    LENGTH,,AUTO
         0 000205   100000 633510                    EPPR3   0,X0,PR1
         0 000206   200011 453500                    STP3    DRL$,,AUTO

      120     4883    1        SAVE$ = ADDR(S_D.X$EQ.SAVED);

   4883  0 000207   000000 236000 xsym               LDQ     S_D$
         0 000210   004651 036003                    ADLQ    2473,DU
         0 000211   200012 756100                    STQ     SAVE$,,AUTO

      121     4884    1        YFIELD = TYPE;

   4884  0 000212   200007 235100                    LDA     TYPE,,AUTO
         0 000213   200013 755100                    STA     YFIELD,,AUTO

      122     4885        /* COMPUTE EFFECTIVE IC IF THE INSTRUCTION IS A TRANSFER */
      123     4886    1        IF TYPE = T_CONTRA
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:18   

   4886  0 000214   000003 115007                    CMPA    3,DL
         0 000215   000224 601000 0                  TNZ     s:4888

      124     4887    1        THEN CALL DDB$TESTTRAN(INS$) ALTRET(NO_TRAN);

   4887  0 000216   200006 631500                    EPPR1   INS$,,AUTO
         0 000217   200022 451500                    STP1    ADDRESS+2,,AUTO
         0 000220   200022 630500                    EPPR0   ADDRESS+2,,AUTO
         0 000221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000222   000000 701000 xent               TSX1    DDB$TESTTRAN
         0 000223   000313 702000 0                  TSX2    NO_TRAN

      125     4888    1        IF (TYPE = T_UNCTRA) OR (TYPE = T_CONTRA)

   4888  0 000224   200007 235100                    LDA     TYPE,,AUTO
         0 000225   000002 115007                    CMPA    2,DL
         0 000226   000231 600000 0                  TZE     s:4890
         0 000227   000003 115007                    CMPA    3,DL
         0 000230   000245 601000 0                  TNZ     s:4893

      126     4889    2        THEN DO;

      127     4890    2             CALL DDB$TEFFADD(INS$,IC) ALTRET(CANT_XEQ);

   4890  0 000231   200014 630500                    EPPR0   IC,,AUTO
         0 000232   200023 450500                    STP0    ADDRESS+3,,AUTO
         0 000233   200006 631500                    EPPR1   INS$,,AUTO
         0 000234   200022 451500                    STP1    ADDRESS+2,,AUTO
         0 000235   200022 630500                    EPPR0   ADDRESS+2,,AUTO
         0 000236   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000237   000000 701000 xent               TSX1    DDB$TEFFADD
         0 000240   000350 702000 0                  TSX2    CANT_XEQ

      128     4891    2             DRL$ = PINCRW(UIS$,IC);

   4891  0 000241   200014 236100                    LDQ     IC,,AUTO
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:19   
         0 000242   000022 736000                    QLS     18
         0 000243   000000 036000 xsym               ADLQ    UIS$
         0 000244   200011 756100                    STQ     DRL$,,AUTO

      129     4892    2           END;

      130     4893    1        IF INS$->TSX_INSTR.OP = T_TSX

   4893  0 000245   200006 470500                    LDP0    INS$,,AUTO
         0 000246   000000 236100                    LDQ     0,,PR0
         0 000247   770000 376007                    ANQ     -4096,DL
         0 000250   700000 116007                    CMPQ    -32768,DL
         0 000251   000301 601000 0                  TNZ     s:4899

      131     4894    2        THEN DO;                           /* Change TSX to TRA and stuff in SL */

      132     4895    2             S_D.UREG$->REG$VALUES.X(INS$->TSX_INSTR.XR) = S_D.SAVEIC;

   4895  0 000252   000000 471400 xsym               LDP1    S_D$
         0 000253   100045 473500                    LDP3    37,,PR1
         0 000254   000000 236100                    LDQ     0,,PR0
         0 000255   000011 772000                    QRL     9
         0 000256   000007 376007                    ANQ     7,DL
         0 000257   000001 736000                    QLS     1
         0 000260   000106 101500                    MRL     fill='000'O
         0 000261   100002 000004                    ADSC9   2,,PR1                   cn=0,n=4
         0 000262   300000 000002                    ADSC9   0,Q,PR3                  cn=0,n=2

      133     4896    2             INS$->INSTR.OP = T_TRA;

   4896  0 000263   200006 470500                    LDP0    INS$,,AUTO
         0 000264   000000 236100                    LDQ     0,,PR0
         0 000265   000000 376000 1                  ANQ     0
         0 000266   710000 276007                    ORQ     -28672,DL
         0 000267   000000 756100                    STQ     0,,PR0

      134     4897    2             CALL DDC$PUTONE(S_D.SL$, INS$->WIRD) ALTRET(BAD_PUT);
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:20   

   4897  0 000270   200006 236100                    LDQ     INS$,,AUTO
         0 000271   200023 756100                    STQ     ADDRESS+3,,AUTO
         0 000272   000000 236000 xsym               LDQ     S_D$
         0 000273   000006 036003                    ADLQ    6,DU
         0 000274   200022 756100                    STQ     ADDRESS+2,,AUTO
         0 000275   200022 630500                    EPPR0   ADDRESS+2,,AUTO
         0 000276   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000277   000000 701000 xent               TSX1    DDC$PUTONE
         0 000300   000353 702000 0                  TSX2    BAD_PUT

      135     4898    2           END;

      136     4899    1        IF TYPE = T_SPECIAL

   4899  0 000301   200007 235100                    LDA     TYPE,,AUTO
         0 000302   000004 115007                    CMPA    4,DL
         0 000303   000313 601000 0                  TNZ     NO_TRAN

      137     4900    2        THEN DO;

      138     4901    2             S_D.ERROR = E@NOTIMP;    /* E@NOTIMP - XEQ of a special instruction */

   4901  0 000304   000767 236007                    LDQ     503,DL
         0 000305   000000 470400 xsym               LDP0    S_D$
         0 000306   000013 756100                    STQ     11,,PR0

      139     4902    2             CALL DDE$ERROR;

   4902  0 000307   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000310   000000 701000 xent               TSX1    DDE$ERROR
         0 000311   000000 011000                    NOP     0

      140     4903    2             GOTO BAD_PUT;

   4903  0 000312   000353 710000 0                  TRA     BAD_PUT

PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:21   
   4899  0 000313                       NO_TRAN      null
      141     4904    2           END;
      142     4905    1   NO_TRAN: ;
      143     4906    1        CALL DDB$PLANTONE(DRL$,YFIELD,DRL_XEQ,SAVE$) ALTRET(BAD_PUT);

   4906  0 000313   200012 630500                    EPPR0   SAVE$,,AUTO
         0 000314   200025 450500                    STP0    ADDRESS+5,,AUTO
         0 000315   000001 236000 1                  LDQ     1
         0 000316   200024 756100                    STQ     ADDRESS+4,,AUTO
         0 000317   200013 631500                    EPPR1   YFIELD,,AUTO
         0 000320   200023 451500                    STP1    ADDRESS+3,,AUTO
         0 000321   200011 633500                    EPPR3   DRL$,,AUTO
         0 000322   200022 453500                    STP3    ADDRESS+2,,AUTO
         0 000323   200022 630500                    EPPR0   ADDRESS+2,,AUTO
         0 000324   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000325   000000 701000 xent               TSX1    DDB$PLANTONE
         0 000326   000353 702000 0                  TSX2    BAD_PUT

      144     4907    1        S_D.X$EQ.LOC = POFFW(DRL$,UIS$);

   4907  0 000327   000000 235000 xsym               LDA     UIS$
         0 000330   000022 771000                    ARL     18
         0 000331   200022 755100                    STA     ADDRESS+2,,AUTO
         0 000332   200011 236100                    LDQ     DRL$,,AUTO
         0 000333   000022 772000                    QRL     18
         0 000334   200022 136100                    SBLQ    ADDRESS+2,,AUTO
         0 000335   000000 470400 xsym               LDP0    S_D$
         0 000336   004647 756100                    STQ     2471,,PR0

      145     4908    1        S_D.GOIC = S_D.SL;

   4908  0 000337   000010 235100                    LDA     8,,PR0
         0 000340   000001 755100                    STA     1,,PR0

      146     4909    1        S_D.X$EQ.ACTIVE = '1'B;            /* Set XEQ active. */

   4909  0 000341   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:22   
         0 000342   004646 756100                    STQ     2470,,PR0

      147     4910    1        S_D.GO_MODE = '0'B; RETURN;

   4910  0 000343   000020 450100                    STZ     16,,PR0

   4910  0 000344   000000 702200 xent               TSX2  ! X66_ARET

      148     4911    1   NOT_IN_SYNC:
      149     4912    1        S_D.ERROR = E@USE_CONFLICT;        /* E@USE_CONFLICT */

   4912  0 000345   000046 235007       NOT_IN_SYNC  LDA     38,DL
         0 000346   000013 755100                    STA     11,,PR0

      150     4913    1        GOTO BAD_PUT;

   4913  0 000347   000353 710000 0                  TRA     BAD_PUT

   4910  0 000350                       CANT_XEQ     null
      151     4914    1   CANT_XEQ: ;
      152     4915    1        S_D.ERROR = E@CANTXEQ;        /* E@CANTXEQ - CANT XEQ THIS INSTRUCTION */

   4915  0 000350   000770 235007                    LDA     504,DL
         0 000351   000000 470400 xsym               LDP0    S_D$
         0 000352   000013 755100                    STA     11,,PR0

   4915  0 000353                       BAD_PUT      null
      153     4916    1   BAD_PUT: ;
      154     4917    1        S_D.GO_MODE = '0'B; ALTRETURN;

   4917  0 000353   000000 470400 xsym               LDP0    S_D$
         0 000354   000020 450100                    STZ     16,,PR0

   4917  0 000355   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:23   
   1     000   777777 000377   000010 006000                                    ........
      155     4918    1   END DDA$XEQ;

PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:24   
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDA$XEQ.

   Procedure DDA$XEQ requires 238 words for executable code.
   Procedure DDA$XEQ requires 22 words of local(AUTO) storage.

    No errors detected in file DDA$XEQ.:E05TSI    .
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:26   
          MINI XREF LISTING

ADDRESS
        44**DCL        50--REDEF      51--REDEF
ADDRESS.LOW
        46**DCL        49--REDEF
ADDRESS.LOW.Y
        48**DCL      4854>>ASSIGN
ADDRESS.LOW1
        49**DCL      4855>>ASSIGN
ADDRESS1
        50**DCL      4851<>CALL     4860<>CALL
ADDRESS2
        51**DCL      4862>>ASSIGN
BAD_PUT
      4915**LABEL    4874--CALLALT  4880--CALLALT  4897--CALLALT  4903--GOTO     4906--CALLALT  4913--GOTO
CANT_XEQ
      4910**LABEL    4839--GOTO     4843--CALLALT  4851--CALLALT  4852--GOTO     4860--CALLALT  4861--GOTO
      4867--GOTO     4890--CALLALT
DDB$INTERP
      4830**DCL-ENT  4865--CALL
DDB$PLANT
      4831**DCL-ENT  4880--CALL
DDB$PLANTONE
      4834**DCL-ENT  4906--CALL
DDB$TEFFADD
      4833**DCL-ENT  4890--CALL
DDB$TESTTRAN
      4832**DCL-ENT  4887--CALL
DDC$PUTONE
      4836**DCL-ENT  4874--CALL     4897--CALL
DDE$ERROR
      4835**DCL-ENT  4902--CALL
DDK$EVAL
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:27   
      4837**DCL-ENT  4851--CALL     4860--CALL
DESC#
        42**DCL      4851<>CALL     4860<>CALL
DRL$
        37**DCL      4882<<ASSIGN   4891<<ASSIGN   4906<>CALL     4907>>ASSIGN
DXA$SSF
      4838**DCL-ENT  4843--CALL
IC
        40**DCL      4890<>CALL     4891>>ASSIGN
INS$
        34**DCL      4845<<ASSIGN   4850>>ASSIGN   4853>>IF       4854>>ASSIGN   4855>>ASSIGN   4859>>ASSIGN
      4862>>ASSIGN   4865<>CALL     4873>>ASSIGN   4876<<ASSIGN   4876>>ASSIGN   4887<>CALL     4890<>CALL
      4893>>IF       4895>>ASSIGN   4896>>ASSIGN   4897>>CALL
INSTR
      1371**DCL      4862<<ASSIGN
INSTR.AR
      1383**DCL      4853>>IF
INSTR.OP
      1381**DCL      4896<<ASSIGN
INSTR.TAG.TD
      1387**DCL      1388--REDEF
INSTR.TAGG
      1384**DCL      1385--REDEF
INSTR.Y
      1372**DCL      1373--REDEF    1376--REDEF    4855<<ASSIGN
INSTR.YFIELD.YY
      1375**DCL      4854<<ASSIGN
K
        31**DCL      4872<<DOINDEX  4873>>ASSIGN   4874>>CALL
L
        32**DCL      4871<<ASSIGN   4872>>DOINDEX
LENGTH
        36**DCL      4865<>CALL     4867>>IF       4871>>ASSIGN   4878>>ASSIGN   4882>>ASSIGN
NOT_IN_SYNC
      4912**LABEL    4840--GOTO
NOT_IS
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:28   
        43**DCL      4851<>CALL     4852>>IF       4860<>CALL     4861>>IF
NO_TRAN
      4899**LABEL    4887--CALLALT
P$
        33**DCL      4870<<ASSIGN   4874<>CALL     4875<<ASSIGN   4875>>ASSIGN
REG$VALUES.A
      1411**DCL      1412--REDEF
REG$VALUES.Q
      1415**DCL      1416--REDEF
REG$VALUES.X
      1410**DCL      4895<<ASSIGN
SAVE$
        38**DCL      4883<<ASSIGN   4906<>CALL
SEG
        41**DCL      4851<>CALL     4860<>CALL
S_D.CURRENT_CHANNEL
      4064**DCL      4066--REDEF
S_D.D$
      3202**DCL      4845>>ASSIGN
S_D.DEBUGA
      3216**DCL      3218--REDEF
S_D.DESC$
      3196**DCL      4850<<ASSIGN   4859<<ASSIGN
S_D.DO$
      3167**DCL      4847>>IF       4853>>IF       4867>>IF
S_D.EIS
      4174**DCL      4203--REDEF
S_D.ERROR
      3145**DCL      4901<<ASSIGN   4912<<ASSIGN   4915<<ASSIGN
S_D.GOIC
      3125**DCL      4908<<ASSIGN
S_D.GO_MODE
      3155**DCL      4841<<ASSIGN   4910<<ASSIGN   4917<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      4107**DCL      4108--REDEF    4122--REDEF
S_D.JDE
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:29   
      3721**DCL      3722--REDEF
S_D.L$.VALUE
      3274**DCL      3280--REDEF    3288--REDEF    3291--REDEF    3294--REDEF    3297--REDEF
S_D.L$.VALUE.L
      3275**DCL      3276--REDEF    3277--REDEF
S_D.L6_MESSAGE_BUF
      4128**DCL      4130--REDEF
S_D.OUTPUT
      4094**DCL      4096--REDEF
S_D.REMOTE_MSG.FNCC
      4113**DCL      4114--REDEF
S_D.REMOTE_MSG.STXC
      4109**DCL      4110--REDEF
S_D.REMOTE_MSG.SUBFNCC
      4117**DCL      4118--REDEF
S_D.SAVEIC
      3127**DCL      4895>>ASSIGN
S_D.SL
      3139**DCL      4908>>ASSIGN
S_D.SL$
      3135**DCL      4839>>IF       4870>>ASSIGN   4882>>ASSIGN   4897<>CALL
S_D.SV
      3173**DCL      3194--REDEF
S_D.UREG$
      3204**DCL      4895>>ASSIGN
S_D.X$EQ.ACTIVE
      3620**DCL      4909<<ASSIGN
S_D.X$EQ.INS
      3624**DCL      4873<<ASSIGN   4874<>CALL
S_D.X$EQ.INS_LENGTH
      3622**DCL      4878<<ASSIGN
S_D.X$EQ.LOC
      3621**DCL      4907<<ASSIGN
S_D.X$EQ.SAVED
      3623**DCL      4883--ASSIGN
S_D$
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:30   
      4425**DCL      3121--IMP-PTR  4839>>IF       4841>>ASSIGN   4845>>ASSIGN   4847>>IF       4850>>ASSIGN
      4853>>IF       4859>>ASSIGN   4867>>IF       4870>>ASSIGN   4873>>ASSIGN   4874>>CALL     4878>>ASSIGN
      4882>>ASSIGN   4883>>ASSIGN   4895>>ASSIGN   4895>>ASSIGN   4897>>CALL     4901>>ASSIGN   4907>>ASSIGN
      4908>>ASSIGN   4908>>ASSIGN   4909>>ASSIGN   4910>>ASSIGN   4912>>ASSIGN   4915>>ASSIGN   4917>>ASSIGN
TSX_INSTR.OP
      1403**DCL      4893>>IF
TSX_INSTR.XR
      1404**DCL      4895>>ASSIGN
TYPE
        35**DCL      4865<>CALL     4884>>ASSIGN   4886>>IF       4888>>IF       4888>>IF       4899>>IF
U$SE.CUR
      1394**DCL      4840>>IF
UIS$
      4829**DCL      4891>>ASSIGN   4907>>ASSIGN
USE$
      4828**DCL      1393--IMP-PTR  4840>>IF
WIRD
        52**DCL      4873>>ASSIGN   4897<>CALL
XEQ$CMD.AWDX
      1364**DCL      4853>>IF
XEQ$CMD.INSTR
      1362**DCL      4847>>IF
XEQ$CMD.NUM
      1361**DCL      4867>>IF
YFIELD
        39**DCL      4884<<ASSIGN   4906<>CALL
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:31   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDA$XEQ File=DDA$XEQ.:E05TSI                                  TUE 07/29/97 13:42 Page:32   
              MINI UREF LISTING

DDA$XEQ      30**PROC
