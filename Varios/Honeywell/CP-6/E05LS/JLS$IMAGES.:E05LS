VERSION E05

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:1    
        1        1        /*M* JLS$IMAGES -The image writing/restoring routines for M$LINK & SAVE/GET.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8        JLS$SAVE_IMAGE: PROC(IDN,ERR,CLEANUP$) ALTRET;
        9        9
       10       10    1   DCL IDN UBIN(36);                       /* 0 if SAVE/GET                      */
       11       11    1   DCL ERR UBIN(36);
       12       12    1   DCL CLEANUP$ EPTR;
       13       13
       14       14                                                /* INCLUDE Files                      */
       15       15        %INCLUDE B$JIT;
       16      618        %INCLUDE B$MAP;
       17      717        %INCLUDE B$P;
       18      801        %INCLUDE B$ROSEG;
       19      864        %INCLUDE B$USER;
       20     1080        %INCLUDE B_MACROS_C;
       21     1191        %INCLUDE B_MLSMAC_C;
       22     2133        %INCLUDE B_SEGIDS_C;
       23     2672        %INCLUDE B_UHJMAC_C;
       24     3001        %INCLUDE B_ULSMAC_C;
       25     4110        %INCLUDE CP_6;
       26     9669        %INCLUDE CP_6_SUBS;
       27    10209        %INCLUDE F$DCB;
       28    10258        %INCLUDE F_ERRORS_C;
       29    10498        %INCLUDE F_FPTCODE_C;
       30    10534        %INCLUDE JL_DATA_M;
       31    10703        %INCLUDE J_ERRORS_C;
       32    10790        %INCLUDE KV_PRMID_E;
       33    10964        %INCLUDE MM_DATA_R;
       34    11484        %INCLUDE NK_VFC_C;
       35    11558        %INCLUDE SS_SCHED_C;
       36    11791        %INCLUDE UD_MACRO_C;
       37    11824
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:2    
       38    11825                                                /* AUTO Storage                       */
       39    11826    1   DCL LPTR$ PTR;
       40    11827    1   DCL M$UC$ PTR;
       41    11828    1   DCL TPTR$ PTR;
       42    11829    1   DCL LM$ PTR;
       43    11830    1   DCL I SBIN;
       44    11831    1   DCL J SBIN;
       45    11832    1   DCL N SBIN;
       46    11833    1   DCL 1 NN REDEF N,
       47    11834    1         2 * BIT(9),
       48    11835    1         2 U UBIN(27) UNAL;
       49    11836    1   DCL PTYPE BIT(18);
       50    11837    1   DCL SID SBIN;
       51    11838    1   DCL DTS UBIN(36);
       52    11839    1   DCL ERR1 UBIN(36);
       53    11840    1   DCL DCB$ PTR;
       54    11841    1   DCL TEMP1 SBIN;
       55    11842    1   DCL TEMP2 SBIN;
       56    11843    1   DCL TEMP3 SBIN;
       57    11844    1   DCL RECCNT SBIN;
       58    11845    1   DCL 1 KEY,
       59    11846    1         2 CNT UBIN(9) UNAL,
       60    11847    1         2 ID UBIN(27) UNAL,
       61    11848    1         2 TYPE UBIN(9) UNAL,
       62    11849    1         2 PGNO UBIN(18) UNAL;
       63    11850    1   DCL LNKID UBIN(36);
       64    11851    1   DCL 1 ID REDEF LNKID,
       65    11852    1         2 N UBIN(18) UNAL,
       66    11853    1         2 SYSID UBIN(18) UNAL;
       67    11854    1   DCL CPFLAGS BIT(36);
       68    11855    1   DCL OLD_PCP UBIN HALF;
       69    11856    1   DCL SAVEJUNK BIT(18);
       70    11857    1   DCL PCODE UBIN(9);
       71    11858    1   DCL 1 VIRTUAL ALIGNED,
       72    11859    1         2 DCB#(0:2) UBIN(9) CALIGNED,
       73    11860    1         2 * UBIN(9) CALIGNED;
       74    11861        %FPT_WRITE (FPTN=FPT$WRITE, STCLASS=AUTO);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:3    
       75    11892        %FPT_PRECORD (FPTN=FPT$PREC, STCLASS=AUTO);
       76    11913        %FPT_READ (FPTN=FPT$READ, STCLASS=AUTO);
       77    11952
       78    11953                                                /* BASED Structures                   */
       79    11954    1   DCL B$PTR PTR BASED;
       80    11955    1   DCL B$CHAR3 CHAR(3) UNAL BASED;
       81    11956        %JL$HEAD;
       82    12041        %JL$TRAILER;
       83    12048        %JL$AMR_BUF;
       84    12068        %B_UHJIT (FPTN=B$UHJIT,STCLASS=BASED);
       85    13039        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
       86    13854        %B$ECCB;
       87    13862        %FPT_RESCTL (FPTN=FPT$RESCTL, STCLASS="BASED(TPTR$)");
       88    13879        %VLP_PSEUDO (FPTN=VLP$PS,STCLASS="BASED(LPTR$)",N=1);
       89    13895
       90    13896
       91    13897
       92    13898                                                /* Internal Data                      */
       93    13899        %FPT_WRITE (FPTN=FPT_WRITE, ONEWKEY=NO, NEWKEY=YES, STCLASS=CONSTANT);
       94    13930
       95    13931        %FPT_PRECORD (FPTN=FPT_PREC, KEYR=YES, STCLASS=CONSTANT);
       96    13952
       97    13953        %FPT_READ (FPTN=FPT_READ, KEYR=YES, STCLASS=CONSTANT);
       98    13992
       99    13993                                                /* External Data                      */
      100    13994    1   DCL M$LM DCB;
      101    13995
      102    13996    1   DCL B$JIT$ PTR SYMREF READONLY;
      103    13997    1   DCL B$M$STAR$ PTR SYMREF READONLY;
      104    13998    1   DCL B$M$LM$ PTR SYMREF READONLY;
      105    13999    1   DCL B$M$UC$ PTR SYMREF READONLY;
      106    14000    1   DCL B$USERIS$ PTR SYMREF READONLY;
      107    14001    1   DCL B$UPT$ PTR SYMREF READONLY;
      108    14002    1   DCL B$SBUF1$ PTR SYMREF READONLY;
      109    14003    1   DCL B$ASLLS$ PTR SYMREF READONLY;
      110    14004    1   DCL B$DBLS$ PTR SYMREF READONLY;
      111    14005    1   DCL B$USERLS$ PTR SYMREF READONLY;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:4    
      112    14006    1   DCL B$JITPG$ PTR SYMREF READONLY;
      113    14007    1   DCL B$USERHJIT$ PTR SYMREF READONLY;
      114    14008    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      115    14009    1   DCL B$SBUF2$ PTR SYMREF READONLY;
      116    14010    1   DCL B$LS$ PTR SYMREF READONLY;
      117    14011    1   DCL B$MISC2$ PTR SYMREF READONLY;
      118    14012    1   DCL S$CU$ PTR SYMREF;
      119    14013    1   DCL S_CUN UBIN SYMREF ;
      120    14014
      121    14015    1   DCL B$USRT$ PTR SYMREF;
      122    14016    1   DCL J_SYS$ PTR SYMREF READONLY;
      123    14017    1   DCL B$PS1$ PTR SYMREF READONLY;
      124    14018    1   DCL FR_SUNM(0:0) CHAR(8) SYMREF;
      125    14019
      126    14020        %FPT_CLOSE (FPTN=J_FPT_CL_REL, STCLASS=SYMREF);
      127    14062        %FPT_CLOSE (FPTN=J_FPT_CL_SAVE, STCLASS=SYMREF);
      128    14104        %FPT_PFIL (FPTN=J_FPT_PFIL, STCLASS=SYMREF);
      129    14119        %FPT_RESCTL (FPTN=J_FPT_RESCTL,STCLASS=SYMREF);
      130    14136        %VLR_SITEINFO(FPTN=B_SITEINFO,STCLASS=SYMREF);
      131    14155
      132    14156
      133    14157                                                /* External Procedures                */
      134    14158    1   DCL FMI$INIT ENTRY ALTRET;
      135    14159    1   DCL FMM$DFLOPN ENTRY;
      136    14160    1   DCL FMM$RELDCBI ENTRY;
      137    14161    1   DCL FMP$CLSJ ENTRY;
      138    14162    1   DCL HFF$TRAPALT ENTRY ALTRET;
      139    14163    1   DCL JLU$DELSET ENTRY(1);
      140    14164    1   DCL JLU$OPNSTARN ENTRY(1) ALTRET;
      141    14165    1   DCL JLU$RESTORE_AMR ENTRY ALTRET;
      142    14166    1   DCL JSA$ALIBDB ENTRY(1) ALTRET;
      143    14167    1   DCL JSA$DB ENTRY(1) ALTRET;
      144    14168    1   DCL JSA$FINDAUTO ENTRY(5) ALTRET;
      145    14169    1   DCL JSA$FINDSSP ENTRY(5) ALTRET;
      146    14170    1   DCL JSA$GETTCB ENTRY(1) ALTRET;
      147    14171    1   DCL JSA$RUNDSPC ENTRY(2);
      148    14172    1   DCL JSF$CLSUSRDCBS ENTRY;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:5    
      149    14173    1   DCL JSN$GETASR ENTRY(1);                /* Get current ASR                    */
      150    14174    1   DCL JSN$GETSSR ENTRY(1);                /* Get current SSR                    */
      151    14175    1   DCL JSN$SETASR ENTRY(1);                /* Load ASR                           */
      152    14176    1   DCL JSN$SETSSR ENTRY(1);                /* Load SSR                           */
      153    14177    1   DCL KIA$UCIOD ENTRY(4) ALTRET;
      154    14178    1   DCL MME$WFVP ENTRY(4) ALTRET;           /* Used to release spcl bufs          */
      155    14179    1   DCL MME$WGVP ENTRY(4) ALTRET;           /* Used to get spcl buffers           */
      156    14180    1   DCL MMH$GDS ENTRY(5) ALTRET;
      157    14181    1   DCL SSR$REG ENTRY(3) ALTRET;
      158    14182    1   DCL SSS$SYSTIME ENTRY(1);
      159    14183    1   DCL UMD$RSTRPRMPT ENTRY(1) ALTRET;
      160    14184    1   DCL UMD$SVPRMPT ENTRY(1) ALTRET;
      161    14185    1   DCL UQB$MDEQ ENTRY(1) ALTRET;
      162    14186
      163    14187    1   DCL M$MCLOSE ENTRY(1) ALTRET;
      164    14188    1   DCL M$MLIMIT ENTRY(1) ALTRET;
      165    14189    1   DCL M$MPFIL ENTRY(1) ALTRET;
      166    14190    1   DCL M$MPRECORD ENTRY(1) ALTRET;
      167    14191    1   DCL M$MREAD ENTRY(1) ALTRET;
      168    14192    1   DCL M$MWRITE ENTRY(1) ALTRET;
      169    14193
      170    14194    1   DCL SC_BADNF ENTRY CONV(2,0);
      171    14195    1   DCL SC_SYSIDNF ENTRY CONV(2,0);
      172    14196    1   DCL SC_INFONF ENTRY CONV(2,0);
      173    14197    1   DCL SC_LDLNK ENTRY CONV(2,0);
      174    14198    1   DCL SC_IOERRNF ENTRY CONV (2,0);
      175    14199
      176    14200
      177    14201        /* Macro invocations */
      178    14202        %TEXTC;
      179    14207        /* Set up an error code strucure initialized for this module */
      180    14208        %T01DESCR(NAME=B$DESCR);
      181    14216
      182    14217
      183    14218                                                /* EQUs and SUBs                      */
      184    14219        %KV_PRMID_E;
      185    14375
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:6    
      186    14376        %LIST;
      187    14377        %INIT_RO_SIZE;                          /* Get 'INITROSIZE' from B$ROSEG      */
             14378        %SUB   INITROSIZE ="(POFFW(B$ROSEG$->B$ROSEG.DCBPTR$,B$ROSEG$)+%M$1STDCB#)";
      188    14380        %JL_SUBS;
             14381        %SUB   JL_HEADTYPE = 0;
             14382        %SUB   JL_JITTYPE = 1;
             14383        %SUB   JL_HJITTYPE = 3;
             14384        %SUB   JL_ROTYPE = 4;
             14385        %SUB   JL_DATATYPE = 5;
             14386        %SUB   JL_PROCTYPE = 6;
             14387        %SUB   JL_DYNDTYPE = 7;
             14388        %SUB   JL_UDS1TYPE = 8;
             14389        %SUB   JL_ATCBTYPE = 16;
             14390        %SUB   JL_DTCBTYPE = 17;
             14391        %SUB   JL_ADS1TYPE = 18;
             14392        %SUB   JL_DDS1TYPE = 26;
             14393        %SUB   JL_LIBTYPE = 34;
             14394        %SUB   JL_PGTBLTYPE = 40;
             14395        %SUB   JL_DOLSTTYPE = 50;
             14396        %SUB   JL_AMRTYPE=510;
             14397        %SUB   JL_TRLRTYPE = 511;
             14398        %SUB   JL_HEADSIZE ="SIZEC(JL$HEAD)";
             14399        %SUB   JL_TRLRSIZE ="SIZEC(JL$TRAILER)";
             14400        %SUB   JL_FULLPAGE = 4096;
      189    14402        %PLIST;
      190    14403
      191    14404        %SUB JL$HEAD=B$SBUF1$->JL$HEAD;
      192    14405        %SUB JL$TRAILER=B$SBUF1$->JL$TRAILER;
      193    14406        %SUB JL$AMR_BUF=B$SBUF2$->JL$AMR_BUF;
      194    14407        %SUB B$JIT=B$JIT$->B$JIT;
      195    14408        %SUB B$OLDJIT=B$SBUF2$->B$JIT;
      196    14409        %SUB B$PT=B$UPT$->B$MAP;
      197    14410        %SUB B$OLDPT=B$SBUF2$->B$MAP;
      198    14411        %SUB B$HJIT=B$USERHJIT$->B$UHJIT;
      199    14412        %SUB B$OLDHJIT=B$SBUF2$->B$UHJIT;
      200    14413        %SUB B$ROSEG=B$ROSEG$->B$ROSEG;
      201    14414        %SUB B$OLDROSEG=B$SBUF2$->B$ROSEG;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:7    
      202    14415        %SUB B$CLROSEG=B$SBUF1$->B$ROSEG;
      203    14416        %SUB B$U=S$CU$->B$U;
      204    14417        %SUB M$LMDCB=LM$->F$DCB;
      205    14418        %SUB M$UC = M$UC$->F$DCB;
      206    14419        %SUB B$P=B$P$->B$P;
      207    14420        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:8    
      208    14421
      209    14422        /*************************************************************
      210    14423         *                                                           *
      211    14424         *                     JLS$SAVE_IMAGE                        *
      212    14425         *                                                           *
      213    14426         *************************************************************/
      214    14427
      215    14428        /*F*   NAME:   JLS$SAVE_IMAGE
      216    14429               PURPOSE: To write the program image file to M$* for either
      217    14430                       Load-and-Link or Save/Get.
      218    14431        */
      219    14432
      220    14433        /* Initialize key for writing M$*
      221    14434        */
      222    14435    1      KEY.CNT = 6;                         /* Length is always 6 bytes           */
      223    14436    1      KEY.ID = IDN;
      224    14437    1      LM$ = B$M$LM$;
      225    14438
      226    14439        /* Build up the header record in sbuf1. This record contains all
      227    14440           of the information necessary for JLS$GET_IMAGE to properly restore
      228    14441           the saved user program.
      229    14442        */
      230    14443    1      JL$HEAD ='0'B;
      231    14444    1      JL$HEAD.IDN = IDN;
      232    14445
      233    14446        /* Get UTS and save it in header of idn record set */
      234    14447    1      CALL SSS$SYSTIME(DTS);
      235    14448    1      JL$HEAD.DTS = DTS;
      236    14449
      237    14450        /* Count up the # of cvm-ed PAGES.
      238    14451        */
      239    14452    1      N = 0;
      240    14453    2      DO I = B$JIT.TDP TO B$JIT.EUP;
      241    14454    2           IF B$PT.SCTRL(I) & %SCCVM THEN N = N + 1;
      242    14455    2           END;
      243    14456    1      JL$HEAD.CVMPGS = N;
      244    14457
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:9    
      245    14458        /* Save current SSR and ASR values.
      246    14459        */
      247    14460    1      CALL JSN$GETSSR(JL$HEAD.SSR);
      248    14461    1      CALL JSN$GETASR(JL$HEAD.ASR);
      249    14462
      250    14463        /* Save current user flags and all associated processor numbers
      251    14464           which might need to be re-established upon return.
      252    14465        */
      253    14466    1      JL$HEAD.FLG = B$U.FLG;
      254    14467    1      JL$HEAD.ASL = B$U.ASL;
      255    14468    1      JL$HEAD.APR = B$U.APR;
      256    14469    1      JL$HEAD.APO = B$U.APO;
      257    14470    1      JL$HEAD.LIB = B$U.ASP;
      258    14471    1      JL$HEAD.ACP = B$U.ACP;
      259    14472    1      JL$HEAD.DB = B$U.DB;
      260    14473    1      JL$HEAD.ASYNCH_FLG = B$U.ASYNCH;
      261    14474    1      B$U.ASYNCH = B$U.ASYNCH & %U_RESET;
      262    14475
      263    14476        /* Save names of associated processors for M$SAVE.
      264    14477        */
      265    14478    1      JL$HEAD.APRNAME = B$P.NAME(B$U.APR);
      266    14479    1      JL$HEAD.APONAME = B$P.NAME(B$U.APO);
      267    14480    1      JL$HEAD.LIBNAME = B$P.NAME(B$U.ASP);
      268    14481    1      JL$HEAD.CPNAME = B$P.NAME(B$U.ACP);
      269    14482    1      JL$HEAD.DBNAME = B$P.NAME(B$U.DB);
      270    14483
      271    14484        /* Here we will save the UTS stamp from all associated
      272    14485           processors so we can tell if a 'GET' will work by checking the
      273    14486           time stamps against those of the currently installed procs.
      274    14487        */
      275    14488    1      JL$HEAD.APR_UTS = M$LMDCB.EXPIRE;
      276    14489    1      JL$HEAD.LIB_UTS = B$P.CRDATE(B$U.ASP);
      277    14490    1      JL$HEAD.DB_UTS = B$P.CRDATE(B$U.DB);
      278    14491
      279    14492        /* Save the first character of the current system version.
      280    14493        */
      281    14494    1      TPTR$ = ADDR(B_SITEINFO.VERSION#);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:10   
      282    14495    1      JL$HEAD.SYSVERS = TPTR$->B$CHAR3;
      283    14496
      284    14497        /* Save the virtual memory delimiters from the JIT.
      285    14498        */
      286    14499    1      JL$HEAD.DPGS = B$JIT.PCD;
      287    14500    1      JL$HEAD.PPGS = B$JIT.PCP;
      288    14501    1      JL$HEAD.DDPGS = B$JIT.PCDD;
      289    14502    1      JL$HEAD.ROPGS = B$JIT.PCROS;
      290    14503    1      JL$HEAD.LIBPGS = B$JIT.PCL;
      291    14504    1      JL$HEAD.DOLST_RECS = 0;
      292    14505
      293    14506        /* Get the # of words in each user, ASL or DB data segment.
      294    14507        */
      295    14508    1      SID = BITBIN (%DS1SID&'1777'O);
      296    14509    2      DO I = 0 TO 7;
      297    14510    2           IF (B$USERLS$->MM$DESC.FLGS(SID) & %DSSHARED)
      298    14511    2           THEN JL$HEAD.UDS(I) = 0;
      299    14512    2           ELSE JL$HEAD.UDS(I) = (B$USERLS$ -> MM$DESC.BOUND(SID) + 1)/4;
      300    14513    2           IF (B$ASLLS$->MM$DESC.FLGS(SID) & %DSSHARED)
      301    14514    2           THEN JL$HEAD.ASLDS(I) = 0;
      302    14515    2           ELSE JL$HEAD.ASLDS(I) = (B$ASLLS$ -> MM$DESC.BOUND(SID) + 1)/4;
      303    14516    2           IF (B$DBLS$->MM$DESC.FLGS(SID) & %DSSHARED)
      304    14517    2           THEN JL$HEAD.DBDS(I) = 0;
      305    14518    2           ELSE JL$HEAD.DBDS(I) = (B$DBLS$ -> MM$DESC.BOUND(SID) + 1)/4;
      306    14519    2           SID = SID+1;
      307    14520    2           END;
      308    14521
      309    14522        /* Get bounds of ASL & DELTA TCB's.
      310    14523        */
      311    14524    1      JL$HEAD.ASLTCB = B$ASLLS$->MM$DESC.BOUND(BITBIN(%TCBSID & '1777'O));
      312    14525    1      JL$HEAD.DBTCB = B$DBLS$->MM$DESC.BOUND(BITBIN(%TCBSID & '1777'O));
      313    14526
      314    14527        /* Set user's common seg size to 0 if doing M$LINK so we won't save it.
      315    14528        */
      316    14529    1      IF (B$JIT.JUNK & %JJ_MLINKIP#) THEN JL$HEAD.UDS(1) = 0;
      317    14530
      318    14531        /* Move the size of the assign/merge record to the header record.
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:11   
      319    14532        */
      320    14533    1      JL$HEAD.AMR_SIZE = JL$AMR_BUF.AMR_SIZE;
      321    14534
      322    14535        /* If this is the monitor doing the link, save the address of
      323    14536           the clean-up routine.
      324    14537        */
      325    14538    1      IF (B$JIT.JUNK & %JJ_MONLINK#)
      326    14539    1      THEN JL$HEAD.CLEANUP$ = CLEANUP$;
      327    14540    1      ELSE JL$HEAD.CLEANUP$ = ENTADDR(NIL);
      328    14541
      329    14542        /* Finally, save M$LM and assign/merge assignment information.
      330    14543        */
      331    14544    1      JL$HEAD.LMNAME = M$LMDCB.NAME;
      332    14545    1      JL$HEAD.LMACCT = M$LMDCB.ACCT;
      333    14546    1      JL$HEAD.LMPASS.C = M$LMDCB.PASS;
      334    14547    1      JL$HEAD.LMPSN = M$LMDCB.PSN;
      335    14548
      336    14549        /* Save the terminal info so we can re-establish it on 'GET' or
      337    14550           M$LINK return.
      338    14551        */
      339    14552    1      M$UC$ = B$M$UC$;
      340    14553    1      IF (B$JIT.MODE = %M_INT#) AND (M$UC.ASN = %DEVICE#)
      341    14554    1        AND M$UC.RES = 'UC'
      342    14555    1        AND (B$JIT.RNST & %RS_DROP#)='000'O
      343    14556    2      THEN DO;
      344    14557    2           M$UC.UB$ = ADDR(JL$HEAD.TERM_INFO);
      345    14558    2           M$UC.UBYTES = LENGTHC(JL$HEAD.TERM_INFO);
      346    14559    2           M$UC.WAIT = 1;
      347    14560    2           B$JIT.DCB$ = M$UC$;
      348    14561    2           PCODE = %KV_PRMID_SAVGET;
      349    14562    2           CPFLAGS = B$JIT.CPFLAGS1;
      350    14563    2           IF B$JIT.CPFLAGS1 & %CP_DRIBBLE#
      351    14564    2           THEN CALL UMD$SVPRMPT (JL$HEAD.UD$PRMPT);
      352    14565    2           B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 &~ %CP_DRIBBLE#);
      353    14566    2           CALL KIA$UCIOD(MFC_RSTAT,0,PCODE,0)
      354    14567    3           WHENRETURN DO;
      355    14568    3                JL$HEAD.INFO_SIZE = M$UC.ARS;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:12   
      356    14569    3                END;
      357    14570    3           WHENALTRETURN DO;
      358    14571    3                JL$HEAD.INFO_SIZE = 0;
      359    14572    3                END;
      360    14573    2           B$JIT.CPFLAGS1 = CPFLAGS;
      361    14574    2           END;
      362    14575    1      ELSE JL$HEAD.INFO_SIZE = 0;
      363    14576        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:13   
      364    14577        /* Initialize a copy of the write fpt in automatic storage.
      365    14578        */
      366    14579    1      RECCNT = 0;
      367    14580    1      FPT$WRITE = FPT_WRITE;
      368    14581    1      FPT$WRITE.V_   = VECTOR(FPT$WRITE.V);
      369    14582    1      FPT$WRITE.KEY_   = VECTOR(KEY);
      370    14583    1      FPT$WRITE.V.DCB# = %M$STAR#;
      371    14584
      372    14585        /* Write the header, the JIT page, and the HJIT.
      373    14586        */
      374    14587    1      FPT$WRITE.BUF_.BUF$ = B$SBUF1$;
      375    14588    1      CALL WRITE_STAR(JL_HEADSIZE,JL_HEADTYPE,0)  ALTRET(SAVE_ERR);
      376    14589
      377    14590    1      FPT$WRITE.BUF_.BUF$ = B$JITPG$;
      378    14591    1      CALL WRITE_STAR(JL_FULLPAGE,JL_JITTYPE,%JITPG)  ALTRET(SAVE_ERR);
      379    14592
      380    14593    1      FPT$WRITE.BUF_.BUF$ = B$USERHJIT$;
      381    14594    1      CALL WRITE_STAR(JL_FULLPAGE,JL_HJITTYPE,%HJITPG)  ALTRET(SAVE_ERR);
      382    14595
      383    14596        /* Write out the read-only segment.
      384    14597        */
      385    14598    1      FPT$WRITE.BUF_.BUF$ = B$ROSEG$;
      386    14599    2      DO I = %ROSEGLO TO (%ROSEGLO + B$JIT.PCROS - 1);
      387    14600    2           CALL WRITE_STAR(JL_FULLPAGE,JL_ROTYPE,I) ALTRET(SAVE_ERR);
      388    14601    2           END;
      389    14602
      390    14603        /* If in the process of doing a LINK, close and release the M$DELTA
      391    14604           DCB.  Also zap the count of the pseudo resources that job step
      392    14605           acquired for this user.  This count will be restored when the
      393    14606           when the image is restored.
      394    14607        */
      395    14608    1      IF (B$JIT.JUNK & %JJ_MLINKIP#)
      396    14609    2      THEN DO;
      397    14610    2           B$JIT.PSEUDO_COUNT = 0;
      398    14611    2           IF DCBADDR(%M$DELT#) ~= ADDR(NIL)
      399    14612    3           THEN DO;
      400    14613    3                B$JIT.DCB$ = DCBADDR(%M$DELT#);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:14   
      401    14614    3                CALL FMP$CLSJ;
      402    14615    3                B$JIT.DCBNO = %M$DELT#;
      403    14616    3                CALL FMM$RELDCBI;
      404    14617    3                END;
      405    14618    2           END;
      406    14619
      407    14620        /* Write out the program data.
      408    14621        */
      409    14622    1      FPT$WRITE.BUF_.BUF$ = B$USERIS$;
      410    14623    1      J = B$JIT.DLL + B$JIT.PCD -1;
      411    14624    2      DO I = B$JIT.DLL TO J;
      412    14625    2           CALL WRITE_STAR(JL_FULLPAGE,JL_DATATYPE,I) ALTRET(SAVE_ERR);
      413    14626    2           END;
      414    14627
      415    14628        /* Write out program procedure, if its not shared.
      416    14629        */
      417    14630    1      J = B$JIT.PLL + B$JIT.PCP -1;
      418    14631    1      IF B$U.APR = 0
      419    14632    2      THEN DO;
      420    14633    2           FPT$WRITE.BUF_.BUF$ = PINCRW(B$USERIS$,(B$JIT.PLL - %ISEGLO)*1024);
      421    14634    3           DO I = B$JIT.PLL TO J;
      422    14635    3                CALL WRITE_STAR(JL_FULLPAGE,JL_PROCTYPE,I) ALTRET(SAVE_ERR);
      423    14636    3                END;
      424    14637    2           END;
      425    14638
      426    14639        /* Write out contiguous dynamic data pages, if any.
      427    14640        */
      428    14641    1      IF B$JIT.PCDD ~= 0
      429    14642    2      THEN DO;
      430    14643    2           FPT$WRITE.BUF_.BUF$ = PINCRW(B$USERIS$,(B$JIT.DDLL - %ISEGLO)*1024);
      431    14644    3           DO I = B$JIT.DDLL TO B$JIT.TDP - 1;
      432    14645    3                CALL WRITE_STAR(JL_FULLPAGE,JL_DYNDTYPE,I) ALTRET(SAVE_ERR);
      433    14646    3                END;
      434    14647
      435    14648        /* Now write the non-contiguous pages, if any.
      436    14649        */
      437    14650    2           IF (B$JIT.TDP - B$JIT.DDLL) < B$JIT.PCDD
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:15   
      438    14651    3           THEN DO I = B$JIT.TDP TO B$JIT.EUP;
      439    14652    3                IF B$PT.SCTRL(I) & %SCUSER
      440    14653    4                THEN DO;
      441    14654    4                     FPT$WRITE.BUF_.BUF$ = PINCRW(B$USERIS$,(I - %ISEGLO)*1024);
      442    14655    4                     CALL WRITE_STAR(JL_FULLPAGE,JL_DYNDTYPE,I) ALTRET(SAVE_ERR);
      443    14656    4                     END;
      444    14657    3                END;
      445    14658    2           END;                       /*  End of do-for-dynamic-data-pages block */
      446    14659        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:16   
      447    14660        /* Now, write out all of the user's data segments, skipping common
      448    14661           if this is an M$LINK file we're writing.
      449    14662        */
      450    14663    1      CALL WRITE_SEGS(B$USERLS$,ADDR(JL$HEAD.UDS(0)),JL_UDS1TYPE) ALTRET(SAVE_ERR);
      451    14664
      452    14665        /* Write out the ASL and Debugger TCBs, if there are any.
      453    14666        */
      454    14667    1      IF JL$HEAD.ASLTCB > 0
      455    14668    1      THEN CALL WRITE_TCB(JL_ATCBTYPE) ALTRET(SAVE_ERR);
      456    14669    1      IF JL$HEAD.DBTCB > 0
      457    14670    1      THEN CALL WRITE_TCB(JL_DTCBTYPE) ALTRET(SAVE_ERR);
      458    14671
      459    14672        /* Now, do the same thing for the ASL or DB data segments, but save
      460    14673           segment # 2 as well this time.
      461    14674        */
      462    14675    1      CALL WRITE_SEGS(B$ASLLS$,ADDR(JL$HEAD.ASLDS(0)),
      463    14676    1        JL_ADS1TYPE) ALTRET(SAVE_ERR);
      464    14677    1      CALL WRITE_SEGS(B$DBLS$,ADDR(JL$HEAD.DBDS(0)),
      465    14678    1        JL_DDS1TYPE) ALTRET(SAVE_ERR);
      466    14679
      467    14680        /* Write out library procedure, if its not shared.
      468    14681        */
      469    14682    1      J = B$JIT.LLL + B$JIT.PCL -1;
      470    14683    1      IF B$JIT.PCL ~= 0
      471    14684    2      THEN DO;
      472    14685    2           FPT$WRITE.BUF_.BUF$ = PINCRW(B$USERIS$,(B$JIT.LLL - %ISEGLO)*1024);
      473    14686    3           DO I = B$JIT.LLL TO J;
      474    14687    3                CALL WRITE_STAR(JL_FULLPAGE,JL_LIBTYPE,I) ALTRET(SAVE_ERR);
      475    14688    3                END;
      476    14689    2           END;
      477    14690
      478    14691        /* Write out the user's page table.
      479    14692        */
      480    14693    1      FPT$WRITE.BUF_.BUF$ = B$UPT$;
      481    14694    1      CALL WRITE_STAR(JL_FULLPAGE,JL_PGTBLTYPE,%PGTBLLO) ALTRET(SAVE_ERR);
      482    14695
      483    14696        /* Write out the assign/merge info for #1, #2, #3 and #4.
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:17   
      484    14697        */
      485    14698        /* Write out the DOLIST entries, skipping the entries that have
      486    14699        ENTER non-NIL.  Those entries with non-NIL EPTRS are processed in
      487    14700        SSV$DORUND.
      488    14701        */
      489    14702    1      IF (B$JIT.JUNK & %JJ_MLINKIP#) AND
      490    14703    1        B$U.DL$ ~= ADDR(NIL) THEN
      491    14704    1           CALL WRITE_DOLIST ALTRET(SAVE_ERR);
      492    14705    1      IF JL$HEAD.AMR_SIZE ~= 0
      493    14706    2      THEN DO;
      494    14707    2           FPT$WRITE.BUF_.BUF$ = B$SBUF2$;
      495    14708    2           CALL WRITE_STAR(JL$HEAD.AMR_SIZE,JL_AMRTYPE,0) ALTRET(SAVE_ERR);
      496    14709    1           END;;
      497    14710
      498    14711        /* Now, write the trailer record, close M$*, bump the link count,
      499    14712           and set the JIT flag for automatic return to the saved program
      500    14713           when the called program exits.
      501    14714        */
      502    14715    1      JL$TRAILER.NRECS = RECCNT +1;
      503    14716    1      JL$TRAILER.IDN = IDN;
      504    14717
      505    14718        /* Store same UTS as in header into trailer and write the trailer.
      506    14719        */
      507    14720    1      JL$TRAILER.DTS = DTS;
      508    14721    1      FPT$WRITE.BUF_.BUF$ = B$SBUF1$;
      509    14722    1      CALL WRITE_STAR(JL_TRLRSIZE,JL_TRLRTYPE,1023)  ALTRET(SAVE_ERR);
      510    14723
      511    14724        /* Release the buffer that was used for the assign/merge records.
      512    14725        */
      513    14726    1      CALL MME$WFVP(%USERWSQ,%SBUF2PG,TEMP1,TEMP1) ALTRET(SAVE_RTN);
      514    14727    1   SAVE_RTN: ;
      515    14728    1      RETURN;
      516    14729
      517    14730
      518    14731    1   SAVE_ERR:
      519    14732    1      IF (ERR >= %E$FREC) AND (ERR <= %E$GPIO)
      520    14733    1      THEN CALL SC_IOERRNF;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:18   
      521    14734
      522    14735        /*S*   SCREECH_CODE: JLS-S$IOERRNF
      523    14736               TYPE: SNAP
      524    14737               MESSAGE: I/O error reading or writing the image file.
      525    14738        */
      526    14739
      527    14740    1      IF B$JIT.ERR.CODE ~= 0 THEN ERR = B$JIT.ERR.CODE;
      528    14741
      529    14742    1      CALL MME$WFVP(%USERWSQ,%SBUF2PG,TEMP1,TEMP1) ALTRET(SAV_ALTRTN);
      530    14743    1   SAV_ALTRTN: ;
      531    14744    1      ALTRETURN;
      532    14745
      533    14746
      534    14747        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:19   
      535    14748
      536    14749        /*************************************************************
      537    14750         *                                                           *
      538    14751         *                     JLS$GET_IMAGE                         *
      539    14752         *                                                           *
      540    14753         *************************************************************/
      541    14754
      542    14755        /*F*   NAME:   JLS$GET_IMAGE
      543    14756               PURPOSE: To restore a saved program image for either M$LINK
      544    14757                       or SAVE/GET.
      545    14758        */
      546    14759
      547    14760    1   JLS$GET_IMAGE: ENTRY(IDN,ERR,CLEANUP$) ALTRET;
      548    14761    1      ERR = %E$JQBADFILE;
      549    14762                                                /* Default error message              */
      550    14763        /*E*   ERROR:  JLS-E$JQBADFILE-E
      551    14764               MESSAGE: Saved image cannot be restored.
      552    14765               DESCRIPTION:  Internal consistency checks failed when
      553    14766                             trying to restore a SAVEd or M$LINKing
      554    14767                             run unit.
      555    14768        */
      556    14769        /* Get special buffer pages 1 and 2 for reading in the star-n
      557    14770           trailer and header records, JIT, HJIT, and initial ROS pages.
      558    14771        */
      559    14772    1      TEMP1 = BITBIN(%PGINMEM|%PGWRITE|%PGIOM);
      560    14773    1      CALL MME$WGVP(%USERWSQ,%SBUF1PG,TEMP1,ERR) ALTRET(GET_ERR);
      561    14774    1      CALL MME$WGVP(%USERWSQ,%SBUF2PG,TEMP1,ERR) ALTRET(GET_ERR);
      562    14775
      563    14776        /* Position M$* To eof.
      564    14777        */
      565    14778    1      J_FPT_PFIL.V.DCB# = %M$STAR#;
      566    14779    1      CALL M$MPFIL(J_FPT_PFIL) ALTRET(GET_ERR);
      567    14780    1      FPT$PREC = FPT_PREC;
      568    14781    1      FPT$PREC.V_   = VECTOR(FPT$PREC.V);
      569    14782    1      FPT$PREC.KEY_   = VECTOR(KEY);
      570    14783    1      FPT$PREC.V.DCB# = %M$STAR#;
      571    14784    1      FPT$PREC.V.N# = -1;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:20   
      572    14785
      573    14786        /* Position back one record and verify that it is the trailer record.
      574    14787        */
      575    14788    1      CALL M$MPRECORD(FPT$PREC) ALTRET(GET_ERR);
      576    14789    1      IF KEY.TYPE ~= JL_TRLRTYPE
      577    14790    2      THEN DO;
      578    14791    2           CALL SC_BADNF;
      579    14792    2           GOTO BUF_RTN;
      580    14793    2           END;
      581    14794    1      IF KEY.ID ~= IDN
      582    14795    2      THEN DO;
      583    14796    2           CALL SC_SYSIDNF;
      584    14797    2           GOTO BUF_RTN;
      585    14798    2           END;
      586    14799
      587    14800        /*S*    SCREECH_CODE: JLS-S$SYSIDNF
      588    14801               TYPE:   SNAP
      589    14802               MESSAGE: SYSID in image file  not same as current user's.
      590    14803        */
      591    14804
      592    14805        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:21   
      593    14806        /* Initialize the read FPT.
      594    14807        */
      595    14808    1      FPT$READ = FPT_READ;
      596    14809    1      FPT$READ.V_   = VECTOR(FPT$READ.V);
      597    14810    1      FPT$READ.KEY_   = VECTOR(KEY);
      598    14811    1      FPT$READ.V.DCB# = %M$STAR#;
      599    14812
      600    14813        /* Read the trailer record into SBUF1.
      601    14814        */
      602    14815    1      FPT$READ.BUF_.BUF$ = B$SBUF1$;
      603    14816    1      CALL READ_STAR(JL_TRLRSIZE,JL_TRLRTYPE,N)  ALTRET(GET_ERR);
      604    14817
      605    14818    1      IF JL$TRAILER.IDN ~= IDN
      606    14819    2      THEN DO;
      607    14820    2           CALL SC_SYSIDNF;
      608    14821    2           GOTO BUF_RTN;
      609    14822    2           END;
      610    14823
      611    14824    1      RECCNT = JL$TRAILER.NRECS;           /* Get # of records in this set       */
      612    14825    1      DTS = JL$TRAILER.DTS;                /* And remember date/time stamp       */
      613    14826
      614    14827        /* Now, position back to the start of this record SET.
      615    14828        */
      616    14829    1      FPT$PREC.V.N# = - RECCNT;
      617    14830    1      CALL M$MPRECORD(FPT$PREC) ALTRET(GET_ERR);
      618    14831
      619    14832        /* Read the header record into SBUF1 and verify as much as possible.
      620    14833        */
      621    14834    1      FPT$READ.BUF_.BUF$ = B$SBUF1$;
      622    14835    1      CALL READ_STAR(JL_HEADSIZE,JL_HEADTYPE,N)  ALTRET(GET_ERR);
      623    14836
      624    14837    1      IF JL$HEAD.IDN ~= IDN
      625    14838    2      THEN DO;
      626    14839    2           CALL SC_SYSIDNF;
      627    14840    2           GOTO BUF_RTN;
      628    14841    2           END;
      629    14842
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:22   
      630    14843    1      IF JL$HEAD.DTS ~= DTS
      631    14844    2      THEN DO;
      632    14845    2           CALL SC_INFONF;
      633    14846    2           GOTO BUF_RTN;
      634    14847    2           END;
      635    14848
      636    14849        /*S*    SCREECH_CODE: JLS-S$INFONF
      637    14850               TYPE:   SNAP
      638    14851               MESSAGE: Inconsistency in image file information.
      639    14852        */
      640    14853
      641    14854    1      TPTR$ = ADDR(B_SITEINFO.VERSION#);
      642    14855    1      IF JL$HEAD.SYSVERS ~= TPTR$->B$CHAR3
      643    14856    1      THEN IF (B$JIT.JUNK & %JJ_GETTING#)
      644    14857    2           THEN DO;
      645    14858    2                ERR = %E$JQOLDSAVE;
      646    14859    2                GOTO BUF_RTN;
      647    14860    2                END;
      648    14861        /*E*    ERROR: JLS-E$JQOLDSAVE-2
      649    14862          MESSAGE: That program was saved under an older, incompatible system version.
      650    14863        */
      651    14864
      652    14865    2           ELSE DO;
      653    14866    2                CALL SC_INFONF;
      654    14867    2                GOTO BUF_RTN;
      655    14868    2                END;
      656    14869
      657    14870        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:23   
      658    14871        /* Read the JIT record form the image file into Special Buffer 2.
      659    14872           If this is a GET, make sure the current user has at least as
      660    14873           much privilege as the saver.
      661    14874        */
      662    14875    1      FPT$READ.BUF_.BUF$ = B$SBUF2$;
      663    14876    1      CALL READ_STAR(JL_FULLPAGE,JL_JITTYPE,N) ALTRET(GET_ERR);
      664    14877
      665    14878    1      IF (B$JIT.JUNK & %JJ_GETTING#)
      666    14879    2      THEN DO;
      667    14880    2           IF (B$OLDJIT.PRIV.AUTH & ~B$JIT.PRIV.AUTH)
      668    14881    3           THEN DO;
      669    14882    3                ERR = %E$JQPRIV;
      670    14883    3                GOTO BUF_RTN;
      671    14884    3                END;
      672    14885        /*E*    ERROR:  JLS-E$JQPRIV-2
      673    14886          MESSAGE: That program was saved by an account with more privilege than you.
      674    14887        */
      675    14888
      676    14889        /* Also, if GET, make sure that the pseudo resources that were
      677    14890           available to the user at the time of the save are available
      678    14891           to him now.  Restore the step pseudo resource name and count
      679    14892           to the JIT if so.
      680    14893        */
      681    14894    2           IF B$OLDJIT.CURSUDO ~='0'B
      682    14895    3           THEN DO;
      683    14896    3                TPTR$ = PINCRW(B$SBUF2$,SIZEW(B$JIT));
      684    14897    3                LPTR$ = PINCRW(TPTR$,SIZEW(FPT$RESCTL));
      685    14898    3                FPT$RESCTL = J_FPT_RESCTL;
      686    14899    3                FPT$RESCTL.V_ = VECTOR(FPT$RESCTL.V);
      687    14900    3                FPT$RESCTL.PSEUDO_ = VECTOR(VLP$PS);
      688    14901    3                VLP$PS='0'B;
      689    14902    3                J = 0;
      690    14903    4                DO I = 0 TO 7;
      691    14904    4                     IF B$OLDJIT.CURSUDO(I) > B$JIT.CURSUDO(I)
      692    14905    5                     THEN DO;
      693    14906    5                          VLP$PS.NN# = VLP$PS.NN# +1;
      694    14907    5                          VLP$PS.PSLIST.NUM#(J)
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:24   
      695    14908    5                            = B$OLDJIT.CURSUDO(I) - B$JIT.CURSUDO(I);
      696    14909    5                          VLP$PS.PSLIST.PSEUDO#(J) = FR_SUNM(I);
      697    14910    5                          J = J+1;
      698    14911
      699    14912    5                          CALL M$MLIMIT(FPT$RESCTL)
      700    14913    6                          WHENALTRETURN DO;
      701    14914    6                               ERR = B$JIT.ERR.CODE;
      702    14915    6                               GOTO BUF_RTN;
      703    14916    6                               END;
      704    14917
      705    14918    5                          END/*do if old JIT > current jit*/;
      706    14919    4                     END/* I=0 to 7 */;
      707    14920
      708    14921    3                B$JIT.PSEUDO_COUNT = B$OLDJIT.PSEUDO_COUNT;
      709    14922    3                B$JIT.PSEUDO_TEXT = B$OLDJIT.PSEUDO_TEXT;
      710    14923    3                END/* do if any pseudos in old JIT*/;
      711    14924    2           END/* do if GET*/;
      712    14925
      713    14926
      714    14927        /*
      715    14928           Restore the contents of CCBUF unless this is a YC QUIT.
      716    14929        */
      717    14930    1      IF NOT(B$JIT.XCONF & %XC_QUIT#)
      718    14931    2      THEN DO;
      719    14932    2           B$JIT.CCARS = B$OLDJIT.CCARS;
      720    14933    2           B$JIT.CCBUF = B$OLDJIT.CCBUF;
      721    14934    2           B$JIT.CCDISP = B$OLDJIT.CCDISP;
      722    14935
      723    14936    2           END;
      724    14937
      725    14938        /* If restoring a program following a monitor M$LINK, return
      726    14939           the address of the cleanup routine to the JLL$RTN routine.
      727    14940        */
      728    14941    1      CLEANUP$ = JL$HEAD.CLEANUP$;
      729    14942
      730    14943        /* Restore other important pieces of the JIT for both GET and
      731    14944           LINK return.
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:25   
      732    14945        */
      733    14946    2      IF NOT(B$JIT.JUNK & %JJ_GETTING#) THEN DO;
      734    14947    2           B$JIT.PRIV.PRC = B$OLDJIT.PRIV.PRC;
      735    14948    2           B$JIT.PRIV.ACTIVE = (B$OLDJIT.PRIV.ACTIVE | B$JIT.PRIV.JOB);
      736    14949    2           END;
      737    14950    1      B$JIT.PRFLAGS = (B$JIT.PRFLAGS & %PRF_CP#) | (B$OLDJIT.PRFLAGS & %PRF_LINK#);
      738    14951    1      B$JIT.RUNFLAGS = B$OLDJIT.RUNFLAGS;
      739    14952    1      B$JIT.PROG_ENTRY = B$OLDJIT.PROG_ENTRY;
      740    14953
      741    14954    1      B$JIT.MMFLGS.FREE_PPGS = B$OLDJIT.MMFLGS.FREE_PPGS;
      742    14955    1      B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 & %CP_RESET#) |
      743    14956    1        (B$OLDJIT.CPFLAGS1 & ( %CP_PROCACCT# | %CP_BUFFULL#) );
      744    14957    1      IF (B$JIT.JUNK & %JJ_GETTING#)
      745    14958    1      THEN B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | (B$OLDJIT.CPFLAGS1 & %CP_YCPMME#);
      746    14959    1      IF (B$JIT.JUNK2 & %JJ2_ASAVE_LNK#)
      747    14960    1      THEN B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | (B$OLDJIT.CPFLAGS1 & %CP_FIRST#);
      748    14961
      749    14962    1      OLD_PCP = B$OLDJIT.PCP;              /* Page count of procedure            */
      750    14963    1      VIRTUAL = B$OLDJIT.VIRTUAL;
      751    14964    1      B$JIT.PLL = B$OLDJIT.PLL;            /* Procedure lower limit              */
      752    14965    1      B$JIT.PUL = B$OLDJIT.PUL;            /* Upper limit                        */
      753    14966    1      B$JIT.DLL = B$OLDJIT.DLL;            /* Data lower limit                   */
      754    14967    1      B$JIT.DUL = B$OLDJIT.DUL;            /* Upper limit                        */
      755    14968    1      B$JIT.DDLL = B$OLDJIT.DDLL;          /* Dynamic data lower limit           */
      756    14969    1      B$JIT.DDUL = B$OLDJIT.DDUL;          /* Upper limit                        */
      757    14970    1      B$JIT.TDP = B$OLDJIT.TDP;            /* Top of contiguous dyn. Data pgs    */
      758    14971    1      B$JIT.EUP = B$OLDJIT.EUP;            /* End user page in ISR               */
      759    14972    1      B$JIT.LLL = B$OLDJIT.LLL;            /* Library lower limit                */
      760    14973    1      B$JIT.LUL = B$OLDJIT.LUL;            /* Library upper limit                */
      761    14974    1      B$JIT.UTIMER = B$OLDJIT.UTIMER;      /* User's stimer limit                */
      762    14975    1      B$JIT.CURPNUM = B$OLDJIT.CURPNUM;    /* # of Fetches per Job Step          */
      763    14976    1      B$JIT.SVLDTF = B$OLDJIT.SVLDTF;
      764    14977    1      B$JIT.PRIOCORE = B$OLDJIT.PRIOCORE;  /* Linking program size               */
      765    14978
      766    14979        /* Keep current important JIT.JUNK flags, but 'OR' in ones from the
      767    14980           saved copy that are meaningful in the resumed program.
      768    14981           Restore CP_LINK and ASAVE_LNK to JIT.JUNK2.
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:26   
      769    14982        */
      770    14983    1      B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_RTNXIT#);
      771    14984    1      B$JIT.JUNK = B$JIT.JUNK  | (B$OLDJIT.JUNK & %JJ_LINK#);
      772    14985    1      B$JIT.JUNK2 = (B$OLDJIT.JUNK2 & %JJ2_LINK#);
      773    14986
      774    14987        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:27   
      775    14988
      776    14989        /* If this is M$LINK return, restore the associated processors by
      777    14990           number and increment their use counts.
      778    14991        */
      779    14992    1      B$U.ASYNCH = JL$HEAD.ASYNCH_FLG;
      780    14993    1      IF (B$JIT.JUNK & %JJ_LNKRETIP#)
      781    14994    2      THEN DO;
      782    14995    2           B$U.ASL = JL$HEAD.ASL;
      783    14996    2           B$U.APR = JL$HEAD.APR;
      784    14997    2           B$U.APO = JL$HEAD.APO;
      785    14998    2           B$U.ASP = JL$HEAD.LIB;
      786    14999    2           B$P.UC(B$U.ASL) = B$P.UC(B$U.ASL) +1;
      787    15000    2           B$P.UC(B$U.ASP) = B$P.UC(B$U.ASP) +1;
      788    15001
      789    15002        /*
      790    15003           If the Debugger now associated is not the same as that at the
      791    15004           time of the M$LINK, disassociate the new one and reassociate
      792    15005           the old one.  This condition may occur if the debugger has
      793    15006           aborted while assoicated with the linked to program, or if
      794    15007           the linked to program did an M$DLIB of the linker's debugger
      795    15008           and an M$ALIB of a different debugger.
      796    15009        */
      797    15010    2           IF JL$HEAD.DB ~= B$U.DB
      798    15011    3           THEN DO;
      799    15012    3                SAVEJUNK = B$JIT.JUNK;
      800    15013    3                B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_LNKRETIP#);
      801    15014    3                CALL JSA$RUNDSPC(%DBWSR,1);
      802    15015    3                B$JIT.JUNK = SAVEJUNK;
      803    15016    3                IF JL$HEAD.DB ~= 0
      804    15017    4                THEN DO;
      805    15018    4                     N=JL$HEAD.DB;
      806    15019    4                     CALL JSA$ALIBDB(N) ALTRET(PERR1);
      807    15020    4                     B$U.FLG = B$U.FLG &~ %U_DIC;
      808    15021    4                     END;
      809    15022    3                END;
      810    15023    2           END;
      811    15024
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:28   
      812    15025        /* When restoring a SAVEd image, restore the processors by name as
      813    15026           their processor numbers may well have changed.
      814    15027        */
      815    15028    2      ELSE DO;
      816    15029    2           IF JL$HEAD.APR ~= 0
      817    15030    3           THEN DO;
      818    15031    3                PTYPE=%P_SP;
      819    15032    3                CALL JSA$FINDAUTO(ADDR(JL$HEAD.APRNAME),ADDR(JL$HEAD.LMACCT),N,PTYPE,
             15032                         ERR) ALTRET(PERR1);
      820    15033    3                B$U.APR = N;
      821    15034    3                B$P.UC(N) = B$P.UC(N) +1;
      822    15035    3                END;
      823    15036    2           IF JL$HEAD.APO ~= 0
      824    15037    3           THEN DO;
      825    15038    3                PTYPE=%P_SP;
      826    15039    3                CALL JSA$FINDAUTO(ADDR(JL$HEAD.APONAME),ADDR(JL$HEAD.LMACCT),N,PTYPE,
             15039                         ERR) ALTRET(PERR1);
      827    15040    3                B$U.APO = N;
      828    15041    3                B$P.UC(N) = B$P.UC(N) +1;
      829    15042    3                END;
      830    15043    2           IF JL$HEAD.LIB ~= 0
      831    15044    3           THEN DO;
      832    15045    3                PTYPE=%P_LIB;
      833    15046    3                CALL JSA$FINDSSP(ADDR(JL$HEAD.LIBNAME),J_SYS$,N,PTYPE,ERR) ALTRET(PERR1
             15046                         );
      834    15047    3                B$U.ASP = N;
      835    15048    3                B$P.UC(N) = B$P.UC(N) +1;
      836    15049    3                END;
      837    15050    2           IF JL$HEAD.ACP ~= 0
      838    15051    3           THEN DO;
      839    15052    3                PTYPE=%P_CP;
      840    15053    3                CALL JSA$FINDSSP(ADDR(JL$HEAD.CPNAME),J_SYS$,N,PTYPE,ERR) ALTRET(PERR1)
             15053                         ;
      841    15054    3                B$U.ACP = N;
      842    15055    3                B$P.UC(N) = B$P.UC(N) +1;
      843    15056    3                END;
      844    15057    2           IF JL$HEAD.ASL ~= 0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:29   
      845    15058    3           THEN DO;
      846    15059    3                PTYPE=%P_ASL;
      847    15060    3                CALL JSA$FINDSSP(ADDR(JL$HEAD.ASLNAME),J_SYS$,N,PTYPE,ERR) ALTRET(PERR1
             15060                         );
      848    15061    3                B$U.ASL = N;
      849    15062    3                B$P.UC(N) = B$P.UC(N) +1;
      850    15063    3                END;
      851    15064    2           IF JL$HEAD.DB ~= 0
      852    15065    3           THEN DO;
      853    15066    3                PTYPE=%P_DB;
      854    15067    3                CALL JSA$FINDSSP(ADDR(JL$HEAD.DBNAME),J_SYS$,N,PTYPE,ERR) ALTRET(PERR1)
             15067                         ;
      855    15068    3                CALL JSA$DB(N) ALTRET(PERR1);
      856    15069    3                END;
      857    15070    2           END;
      858    15071        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:30   
      859    15072        /* Now read the HJIT into SBUF2 and begin to restore the pertinent
      860    15073           data into the user's current HJIT.  This includes:
      861    15074
      862    15075           The JIT descriptors (in case the user had special JIT access).
      863    15076           The ECCB descriptor (in case DELTA was associated).
      864    15077           The user's TCB descriptor.
      865    15078           The ASL and DB TCB descriptors.
      866    15079           The ASL instruction segment descriptor.
      867    15080           The ASL entry descriptor.
      868    15081           All special access descriptors.
      869    15082           All descriptors in the HJIT Special Descriptor Area.
      870    15083        */
      871    15084    1      FPT$READ.BUF_.BUF$ = B$SBUF2$;
      872    15085    1      CALL READ_STAR(JL_FULLPAGE,JL_HJITTYPE,N)  ALTRET(GET_ERR);
      873    15086
      874    15087    1      B$HJIT.ULNK.JIT = B$OLDHJIT.ULNK.JIT;
      875    15088    1      B$HJIT.DBLNK.JIT = B$OLDHJIT.DBLNK.JIT;
      876    15089
      877    15090    1      B$HJIT.ULNK.ECCB = B$OLDHJIT.ULNK.ECCB;
      878    15091    1      B$HJIT.ULNK.TCB = B$OLDHJIT.ULNK.TCB;
      879    15092    1      B$HJIT.DBLNK.TCB = B$OLDHJIT.DBLNK.TCB;
      880    15093
      881    15094    1      B$HJIT.ASLLNK.IS = B$OLDHJIT.ASLLNK.IS;
      882    15095    1      B$HJIT.ULNK.ASLENT = B$OLDHJIT.ULNK.ASLENT;
      883    15096
      884    15097    1      B$HJIT.ULNK.SPCL1 = B$OLDHJIT.ULNK.SPCL1;
      885    15098    1      B$HJIT.ULNK.SPCL2 = B$OLDHJIT.ULNK.SPCL2;
      886    15099    1      B$HJIT.ULNK.SPCL3 = B$OLDHJIT.ULNK.SPCL3;
      887    15100    1      B$HJIT.ULNK.SPCL4 = B$OLDHJIT.ULNK.SPCL4;
      888    15101    1      B$HJIT.ULNK.SPCL5 = B$OLDHJIT.ULNK.SPCL5;
      889    15102    1      B$HJIT.ULNK.SPCL6 = B$OLDHJIT.ULNK.SPCL6;
      890    15103    1      B$HJIT.ULNK.SPCL7 = B$OLDHJIT.ULNK.SPCL7;
      891    15104    1      B$HJIT.ULNK.SPCL8 = B$OLDHJIT.ULNK.SPCL8;
      892    15105
      893    15106    1      B$HJIT.SDS = B$OLDHJIT.SDS;
      894    15107
      895    15108        /* If this is a 'GET', restore the CP and DB ISR's.
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:31   
      896    15109        */
      897    15110    1      IF (B$JIT.JUNK & %JJ_GETTING#)
      898    15111    2      THEN DO;
      899    15112    2           B$HJIT.CPLNK.IS = B$OLDHJIT.CPLNK.IS;
      900    15113    2           B$HJIT.DBLNK.IS = B$OLDHJIT.DBLNK.IS;
      901    15114    2           END;
      902    15115
      903    15116        /* Restore the entire safe store stack and argument stack.
      904    15117        */
      905    15118    2      DO INHIBIT;
      906    15119    2           B$HJIT.SSS = B$OLDHJIT.SSS;
      907    15120    2           B$HJIT.AS = B$OLDHJIT.AS;
      908    15121
      909    15122        /* Reload the SSR and ASR to their former values.
      910    15123        */
      911    15124    2           CALL JSN$SETSSR(JL$HEAD.SSR);
      912    15125    2           CALL JSN$SETASR(JL$HEAD.ASR);
      913    15126    2           END;
      914    15127
      915    15128        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:32   
      916    15129
      917    15130        /* Restore the read-only segment. Begin by reading the first
      918    15131           page into SBUF2 and resetting the pertinent control information
      919    15132           in the current read-only segment.
      920    15133        */
      921    15134    1      FPT$READ.BUF_.BUF$ = B$SBUF2$;
      922    15135    1      CALL READ_STAR(JL_FULLPAGE,JL_ROTYPE,N)  ALTRET(GET_ERR);
      923    15136    1      B$ROSEG.TREE$ = B$OLDROSEG.TREE$;
      924    15137    1      B$ROSEG.NUMDCBS = B$OLDROSEG.NUMDCBS;
      925    15138    1      B$ROSEG.AVAIL$ = B$OLDROSEG.AVAIL$;
      926    15139    1      B$ROSEG.ECCB = B$OLDROSEG.ECCB;      /* Restore all eccb's at once         */
      927    15140
      928    15141        /* Restore M$LM assignment information.
      929    15142        */
      930    15143    1      LM$ = B$M$LM$;
      931    15144    1      M$LMDCB.NAME = JL$HEAD.LMNAME;
      932    15145    1      M$LMDCB.ACCT = JL$HEAD.LMACCT;
      933    15146    1      M$LMDCB.PASS = JL$HEAD.LMPASS.C;
      934    15147    1      M$LMDCB.PASSF='1'B;
      935    15148    1      M$LMDCB.PSN = JL$HEAD.LMPSN;
      936    15149    1      M$LMDCB.ASN = %FILE#;
      937    15150    1      M$LMDCB.WSR = 0;
      938    15151
      939    15152        /* Now, move the rest of the page.
      940    15153        */
      941    15154    1      I = INITROSIZE% - %M$1STDCB# + %M$DRIBBLE#; /* Get Dribble's DCB pointer    */
      942    15155    1      B$ROSEG$->B$PAGE.WRD(I) = B$SBUF2$->B$PAGE.WRD(I);
      943    15156    2      DO I = I + %M$IBEX# - %M$DRIBBLE# TO 1023; /* IBEXS'  DCB pointer too      */
      944    15157    2           B$ROSEG$->B$PAGE.WRD(I) = B$SBUF2$->B$PAGE.WRD(I);
      945    15158    2           END;
      946    15159
      947    15160        /* If there was more than on page of ROS, read in the rest.
      948    15161        */
      949    15162    1      FPT$READ.BUF_.BUF$ = PINCRW(B$ROSEG$,1024);
      950    15163    1      TEMP1 = BITBIN(%PGINMEM | %PGWRITE | %PGIOM);
      951    15164    2      DO I = 1 TO JL$HEAD.ROPGS-1;
      952    15165    2           CALL MME$WGVP(%USERWSQ,%ROSEGLO+I,TEMP1,ERR) ALTRET(GET_ERR);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:33   
      953    15166    2           CALL READ_STAR(JL_FULLPAGE,JL_ROTYPE,N) ALTRET(GET_ERR);
      954    15167    2           END;
      955    15168
      956    15169        /* Reset fcd in M$DELTA which was read back in marked 'OPEN'.  This
      957    15170           will keep file management from trying to close it twice, and all
      958    15171           assignment info will still be preserved in case DELTA tries to
      959    15172           use the DCB, implicitly opening it.
      960    15173        */
      961    15174    1      TPTR$ = DCBADDR(%M$DRIBBLE#);
      962    15175    1      IF TPTR$ ~= ADDR(NIL)
      963    15176    2      THEN DO;
      964    15177    2           TPTR$->F$DCB.FCD = '0'B;
      965    15178    2           TPTR$->F$DCB.IASN = 0;
      966    15179    2           END;
      967    15180
      968    15181    2      DO I = %M$IBEX# TO %M$DELT# ;
      969    15182    2           TPTR$ = DCBADDR(I);
      970    15183    2           IF TPTR$ ~= ADDR(NIL)
      971    15184    3           THEN DO;
      972    15185    3                TPTR$->F$DCB.FCD = '0'B;
      973    15186    3                TPTR$->F$DCB.IASN = 0;     /* This is to get file repositioned   */
      974    15187    3                END;
      975    15188    2           END;
      976    15189
      977    15190        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:34   
      978    15191
      979    15192        /* Next, we will read in the program data.
      980    15193        */
      981    15194    1      TEMP1 = JL$HEAD.DPGS;
      982    15195    1      TEMP2 = B$JIT.DLL;
      983    15196    1      CALL BRING_IN(TEMP1,TEMP2,JL_DATATYPE)  ALTRET(GET_ERR);
      984    15197
      985    15198        /* And, the program procedure.
      986    15199        */
      987    15200    1      IF B$U.APR = 0                       /* If there is any                    */
      988    15201    2      THEN DO;
      989    15202    2           TEMP1 = JL$HEAD.PPGS;
      990    15203    2           TEMP2 = B$JIT.PLL;
      991    15204    2           CALL BRING_IN(TEMP1,TEMP2,JL_PROCTYPE) ALTRET(GET_ERR);
      992    15205    2           END;
      993    15206    1      ELSE B$JIT.PCP = OLD_PCP;
      994    15207
      995    15208        /* Set 'NO WRITE' on procedure pages.
      996    15209        */
      997    15210    1      TEMP1 = B$JIT.PLL + B$JIT.PCP - 1;
      998    15211    2      DO I = B$JIT.PLL TO TEMP1;
      999    15212    2           B$UPT$->B$MAP.CTRL(I) = (%PGIOM | %PGINMEM);
     1000    15213    2           END;
     1001    15214
     1002    15215        /* Now bring in the contiguous dynamic data pages.
     1003    15216        */
     1004    15217    1      TEMP1 = B$JIT.TDP - B$JIT.DDLL;
     1005    15218    1      IF TEMP1 > 0
     1006    15219    2      THEN DO;
     1007    15220    2           TEMP2 = B$JIT.DDLL;
     1008    15221    2           CALL BRING_IN(TEMP1,TEMP2,JL_DYNDTYPE) ALTRET(GET_ERR);
     1009    15222    2           END;
     1010    15223
     1011    15224        /* Now for the non-contiguous dynamic data pages (if there are any)
     1012    15225           we need to precord first to get the key which tells us where to
     1013    15226           actually read in the saved data.
     1014    15227        */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:35   
     1015    15228    1      IF TEMP1 < JL$HEAD.DDPGS
     1016    15229    2      THEN DO;
     1017    15230    2           FPT$PREC.V.N# = 0;
     1018    15231    3           DO I = TEMP1 TO JL$HEAD.DDPGS-1;
     1019    15232    3                CALL M$PRECORD(FPT$PREC) ALTRET(GET_ERR);
     1020    15233    3                TEMP2 = KEY.PGNO;
     1021    15234    3                CALL MME$WGVP(%USERWSQ,TEMP2,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),
     1022    15235    3                  ERR) ALTRET(GET_ERR);
     1023    15236    3                FPT$READ.BUF_.BUF$ = PINCRW(B$USERIS$,(TEMP2 - %ISEGLO)*1024);
     1024    15237    3                CALL READ_STAR(JL_FULLPAGE,JL_DYNDTYPE,N) ALTRET(GET_ERR);
     1025    15238    3                END;
     1026    15239    2           END;
     1027    15240
     1028    15241        /* Restore the user's dynamic data segments.
     1029    15242        */
     1030    15243    1      CALL READ_SEGS(%USERWSQ,B$USERLS$,ADDR(JL$HEAD.UDS(0)),
     1031    15244    1        JL_UDS1TYPE) ALTRET(GET_ERR);
     1032    15245
     1033    15246        /* Restore debugger and ASL TCBs before their data segments.
     1034    15247        */
     1035    15248    1      IF JL$HEAD.ASLTCB > 0
     1036    15249    2      THEN DO;
     1037    15250    2           TEMP1 = B$U.ASL;
     1038    15251    2           CALL JSA$GETTCB (TEMP1) ALTRET (GET_ERR);
     1039    15252    2           CALL READ_TCB(JL_ATCBTYPE) ALTRET(GET_ERR);
     1040    15253    2           END;
     1041    15254    1      IF JL$HEAD.DBTCB > 0
     1042    15255    2      THEN DO;
     1043    15256    2           TEMP1 = B$U.DB;
     1044    15257    2           CALL JSA$GETTCB (TEMP1) ALTRET(GET_ERR);
     1045    15258    2           CALL READ_TCB(JL_DTCBTYPE) ALTRET(GET_ERR);
     1046    15259    2           END;
     1047    15260
     1048    15261        /* Now, get their data segments.
     1049    15262        */
     1050    15263    1      CALL READ_SEGS(%ASLWSQ,B$ASLLS$,ADDR(JL$HEAD.ASLDS(0)),
     1051    15264    1        JL_ADS1TYPE) ALTRET(GET_ERR);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:36   
     1052    15265    1      CALL READ_SEGS(%DBWSQ,B$DBLS$,ADDR(JL$HEAD.DBDS(0)),
     1053    15266    1        JL_DDS1TYPE) ALTRET(GET_ERR);
     1054    15267
     1055    15268        /* Read in the library procedure if unshared.
     1056    15269        */
     1057    15270    1      IF JL$HEAD.LIBPGS ~= 0
     1058    15271    2      THEN DO;
     1059    15272    2           TEMP1 = JL$HEAD.LIBPGS;
     1060    15273    2           TEMP2 = B$JIT.LLL;
     1061    15274    2           CALL BRING_IN(TEMP1,TEMP2,JL_LIBTYPE) ALTRET(GET_ERR);
     1062    15275    2           END;
     1063    15276
     1064    15277        /* Here all the DCBS are searched and any DCB that is open to a
     1065    15278            Virtual Segment is remapped or opened.
     1066    15279        */
     1067    15280    1      I = B$ROSEG.NUMDCBS;
     1068    15281
     1069    15282    1      B$JIT.VIRTUAL = VIRTUAL;
     1070    15283    1      IF NOT (B$JIT.JUNK&%JJ_GETTING#) THEN
     1071    15284    2      DO WHILE (I >= %M$1STDCB#);
     1072    15285    2           DCB$ = B$ROSEG.DCBPTR$->B$RODCB$(I);
     1073    15286    2           IF DCB$ ~= ADDR(NIL)
     1074    15287    2           THEN IF %DS2#<=DCB$->F$DCB.ACS AND DCB$->F$DCB.ACS<=%DS8#
     1075    15288    2                THEN IF DCB$->F$DCB.FCD
     1076    15289    3                     THEN DO;
     1077    15290    3                          B$JIT.DCB$ = DCB$;
     1078    15291    3                          CALL FMI$INIT;
     1079    15292    3                          CALL UQB$MDEQ (DCB$->F$DCB.CFU$);
     1080    15293    3                          DCB$->F$DCB.ENQF = '0'B;
     1081    15294    3                          END;
     1082    15295    2           I = I - 1;
     1083    15296    2           END;
     1084    15297        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:37   
     1085    15298        /* Read the user's page table into SBUF2 and restore any CVMed
     1086    15299           pages to this user's page table.
     1087    15300        */
     1088    15301    1      FPT$READ.BUF_.BUF$ = B$SBUF2$;
     1089    15302    1      CALL READ_STAR(JL_FULLPAGE,JL_PGTBLTYPE,N) ALTRET(GET_ERR);
     1090    15303
     1091    15304    1      IF JL$HEAD.CVMPGS > 0
     1092    15305    2      THEN DO I = B$JIT.TDP TO B$JIT.EUP;
     1093    15306    2           IF B$OLDPT.SCTRL(I) & %SCCVM THEN B$PT(I) = B$OLDPT(I);
     1094    15307    2           END;
     1095    15308
     1096    15309        /* If DELTA had access to procedure at the time the image was
     1097    15310           written, restore that access.
     1098    15311        */
     1099    15312    1      IF B$U.APR = 0
     1100    15313    2      THEN DO;
     1101    15314    2           TEMP1 = B$JIT.PLL + B$JIT.PCP - 1;
     1102    15315    3           DO I = B$JIT.PLL TO TEMP1;
     1103    15316    3                IF B$OLDPT.CTRL(I) & %PGWRITE
     1104    15317    3                THEN B$PT.CTRL(I) = B$PT.CTRL(I) | %PGWRITE;
     1105    15318    3                END;
     1106    15319
     1107    15320    2           IF B$JIT.PCL ~= 0
     1108    15321    3           THEN DO;
     1109    15322    3                TEMP1 = B$JIT.LLL + B$JIT.PCL - 1;
     1110    15323    4                DO I = B$JIT.LLL TO TEMP1;
     1111    15324    4                     IF B$OLDPT.CTRL(I) & %PGWRITE
     1112    15325    4                     THEN B$PT.CTRL(I) = B$PT.CTRL(I) | %PGWRITE;
     1113    15326    4                     END;
     1114    15327    3                END;
     1115    15328    2           END;
     1116    15329        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:38   
     1117    15330    1      IF JL$HEAD.DOLST_RECS > 0 THEN
     1118    15331    1           CALL READ_DOLIST ALTRET(GET_ERR);
     1119    15332        /* Read the assign/merge info into SBUF2.
     1120    15333        */
     1121    15334    1      IF JL$HEAD.AMR_SIZE ~= 0
     1122    15335    2      THEN DO;
     1123    15336    2           FPT$READ.BUF_.BUF$ = B$SBUF2$;
     1124    15337    2           CALL READ_STAR(JL$HEAD.AMR_SIZE,JL_AMRTYPE,N) ALTRET(GET_ERR);
     1125    15338    2           END;
     1126    15339
     1127    15340        /* Finally, precord one record forward and make sure we're at the
     1128    15341           trailer record again. If not, something is very wrong.
     1129    15342        */
     1130    15343    1      FPT$PREC.V.N# = 0;
     1131    15344    1      CALL M$MPRECORD(FPT$PREC) ALTRET(GET_ERR);
     1132    15345    1      IF KEY.TYPE ~= JL_TRLRTYPE
     1133    15346    1      THEN CALL SC_BADNF;
     1134    15347
     1135    15348        /* If its LDLNK returning, delete this record set.
     1136    15349        Close the star-n file, in any case.(with REL if LNKCNT = 1)
     1137    15350        */
     1138    15351    1      J_FPT_CL_SAVE.V.DCB# = %M$STAR#;
     1139    15352    1      J_FPT_CL_REL.V.DCB# = %M$STAR#;
     1140    15353    1      IF B$JIT.JUNK & %JJ_LNKRETIP#
     1141    15354    2      THEN DO;
     1142    15355    2           IF B$JIT.LNKCNT = 1
     1143    15356    3           THEN DO;
     1144    15357    3                CALL M$MCLOSE (J_FPT_CL_REL) ALTRET (RRET1);
     1145    15358    3                GOTO RRET1;
     1146    15359    3                END;
     1147    15360    2           ELSE
     1148    15361    2                CALL JLU$DELSET (IDN);
     1149    15362    2           END;
     1150    15363
     1151    15364    1      CALL M$MCLOSE (J_FPT_CL_SAVE) ALTRET(RRET1);
     1152    15365    1   RRET1: ;
     1153    15366
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:39   
     1154    15367        /* Re-write the assing/merge info into *A.
     1155    15368        */
     1156    15369    1      IF JL$HEAD.AMR_SIZE ~= 0
     1157    15370    2      THEN DO;
     1158    15371    2           CALL JLU$RESTORE_AMR;
     1159    15372    2           END;
     1160    15373
     1161    15374        /* If the current user has a terminal, then try to restore any
     1162    15375           saved terminal info.
     1163    15376           Restore Dribble's prompts, if dribbling.
     1164    15377        */
     1165    15378    1      IF (JL$HEAD.INFO_SIZE > 0) AND NOT(B$JIT.RNST & %RS_DROP#)
     1166    15379    1        AND NOT(B$JIT.FRS & %RS_DROP#) AND (B$JIT.MODE = %M_INT#)
     1167    15380    2      THEN DO;
     1168    15381    2           M$UC$ = B$M$UC$;
     1169    15382    2           M$UC.UB$ = ADDR(JL$HEAD.TERM_INFO);
     1170    15383    2           M$UC.UBYTES = JL$HEAD.INFO_SIZE;
     1171    15384    2           M$UC.WAIT = 1;
     1172    15385    2           B$JIT.DCB$ = M$UC$;
     1173    15386    2           PCODE = ASCBIN(%VFC_SPR);
     1174    15387
     1175    15388    2           CPFLAGS = B$JIT.CPFLAGS1;
     1176    15389    2           B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 &~ %CP_DRIBBLE#);
     1177    15390    2           CALL KIA$UCIOD(MFC_WRITE,%DVBYTE_VFC#,PCODE,0) ALTRET(SKIP_IT);
     1178    15391    2           B$JIT.CPFLAGS1 = CPFLAGS;
     1179    15392
     1180    15393    2           IF B$JIT.CPFLAGS1 & %CP_DRIBBLE#
     1181    15394    2           THEN CALL UMD$RSTRPRMPT (JL$HEAD.UD$PRMPT);
     1182    15395    2   SKIP_IT: END;
     1183    15396
     1184    15397
     1185    15398        /* Return the M$LM UTS in ERR.
     1186    15399        */
     1187    15400    1      ERR = JL$HEAD.APR_UTS;
     1188    15401
     1189    15402        /* Free the two special buffers.
     1190    15403        */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:40   
     1191    15404    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1) ALTRET(RRET2);
     1192    15405    1   RRET2: CALL MME$WFVP(%USERWSQ,%SBUF2PG,TEMP1,TEMP1) ALTRET(RRET3);
     1193    15406    1   RRET3: ;
     1194    15407
     1195    15408        /* Reg to get back the processors we may need.
     1196    15409        */
     1197    15410    1      CALL SSR$REG(%SS_AP);
     1198    15411    1      RETURN;
     1199    15412
     1200    15413        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:41   
     1201    15414
     1202    15415    1   PERR1:
     1203    15416    1      ERR = %E$JQNOPROC;
     1204    15417    1      GOTO BUF_RTN;
     1205    15418
     1206    15419        /*E*    ERROR:  JLS-E$JQNOPROC-4
     1207    15420                MESSAGE: Processor needed by SAVE file not in system.
     1208    15421        */
     1209    15422
     1210    15423    1   GET_ERR:
     1211    15424    2      IF B$JIT.ERR.CODE ~= 0 THEN DO;
     1212    15425    2           ERR = B$JIT.ERR.CODE;
     1213    15426    2           IF ERR < %E$FREC OR ERR > %E$GPIO OR B$M$STAR$->F$DCB.STARX = 5
     1214    15427    2           THEN CALL SC_IOERRNF;
     1215    15428    2           END;
     1216    15429                                                /* Take a snapshot dump               */
     1217    15430    1      IF B$JIT.ERR.CODE ~= 0 THEN ERR = B$JIT.ERR.CODE;
     1218    15431
     1219    15432        /* Free the two special buffers.
     1220    15433        */
     1221    15434    1   BUF_RTN: ;
     1222    15435    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1) ALTRET(BRET2);
     1223    15436    1   BRET2: CALL MME$WFVP(%USERWSQ,%SBUF2PG,TEMP1,TEMP1) ALTRET(BRET3);
     1224    15437    1   BRET3: ;
     1225    15438    1      ALTRETURN;
     1226    15439
     1227    15440        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:42   
     1228    15441
     1229    15442        /*************************************************************
     1230    15443         *                                                           *
     1231    15444         *                     JLS$CLEANUP                           *
     1232    15445         *                                                           *
     1233    15446         *************************************************************/
     1234    15447
     1235    15448        /*F*   NAME:   JLS$CLEANUP
     1236    15449
     1237    15450               PURPOSE:  To clean up after any M$LINKs when a non-returning
     1238    15451                         abort condition occurs.
     1239    15452
     1240    15453        */
     1241    15454    1   JLS$CLEANUP: ENTRY ALTRET;              /* Altret is never taken              */
     1242    15455
     1243    15456        /* Begin by determining if the *N file exists and is accessable.
     1244    15457        */
     1245    15458    1      CALL JLU$OPNSTARN(ERR1) ALTRET(CHK_OPN_ERR);
     1246    15459    1   CHK_OPN_ERR: ;
     1247    15460
     1248    15461        /*  If the *N file doesn't exist and LNKCNT is non-zero, we
     1249    15462            obviously have a problem.  Take a Snap, reset LNKCNT so
     1250    15463            we dont get stuck here, and return.
     1251    15464        */
     1252    15465    1      IF B$JIT.ERR.CODE=%E$NOFILE
     1253    15466    2      THEN DO;
     1254    15467    2           IF B$JIT.LNKCNT ~= 0
     1255    15468    3           THEN DO;
     1256    15469    3                CALL SC_LDLNK;
     1257    15470    3   CLEAN_UP_RTN: ;
     1258    15471    3                B$JIT.LNKCNT=0;
     1259    15472    3                END;
     1260    15473
     1261    15474        /*  If the *N file doesn't exist and LNKCNT is zero, we
     1262    15475            have no problem -- just return.
     1263    15476        */
     1264    15477    2           B$JIT.ERR='0'B;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:43   
     1265    15478    2           RETURN;
     1266    15479    2           END;
     1267    15480
     1268    15481        /*  If we get any other error trying to open *N, take a Snap, try to
     1269    15482            delete *N to avoid more run-down or delete user problems,
     1270    15483            and return.
     1271    15484        */
     1272    15485    1      IF B$JIT.ERR.CODE ~= 0
     1273    15486    2      THEN DO;
     1274    15487    2           CALL SC_LDLNK;
     1275    15488        /* OPEN DELETE ???? */
     1276    15489    2           GOTO CLEAN_UP_RTN;
     1277    15490    2           END;
     1278    15491
     1279    15492        /*  Otherwise we have successfully opened *N.
     1280    15493        */
     1281    15494    1   INIT_FPTS: ;
     1282    15495    1      J_FPT_PFIL.V.DCB# = %M$STAR#;
     1283    15496
     1284    15497    1      FPT$PREC = FPT_PREC;
     1285    15498    1      FPT$PREC.V_ = VECTOR(FPT$PREC.V);
     1286    15499    1      FPT$PREC.KEY_ = VECTOR(KEY);
     1287    15500    1      FPT$PREC.V.DCB# = %M$STAR#;
     1288    15501
     1289    15502    1      FPT$READ = FPT_READ;
     1290    15503    1      FPT$READ.V_ = VECTOR(FPT$READ.V);
     1291    15504    1      FPT$READ.KEY_ = VECTOR(KEY);
     1292    15505    1      FPT$READ.V.DCB# = %M$STAR#;
     1293    15506
     1294    15507    1      ID.SYSID = B$JIT.SYSID;
     1295    15508
     1296    15509        /* Get SBUF1 for reading the image file.
     1297    15510        */
     1298    15511    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP2,ERR1) ALTRET(NO_PROBLEM);
     1299    15512    1   NO_PROBLEM: ;
     1300    15513    1      CALL MME$WGVP(%USERWSQ,%SBUF1PG,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),ERR1)
     1301    15514    2      WHENALTRETURN DO;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:44   
     1302    15515    2           CALL SC_LDLNK;
     1303    15516    2           GOTO CLS_RLS_STARN;
     1304    15517    2           END;
     1305    15518        /*S*    SCREECH_CODE: JLS-S$LDLNK
     1306    15519               TYPE: SNAP
     1307    15520               MESSAGE: Error occurred during attempted LDLNK cleanup.
     1308    15521        */
     1309    15522
     1310    15523
     1311    15524    1   CLEANUP_LOOP: ;
     1312    15525    2      DO WHILE(B$JIT.LNKCNT > 0);
     1313    15526
     1314    15527    2           CALL M$MPFIL(J_FPT_PFIL) ALTRET(GULP);
     1315    15528    2   GULP:   ;
     1316    15529                                                /* Position to the end of file        */
     1317    15530    2           ID.N = B$JIT.LNKCNT;            /* Set up idn                         */
     1318    15531    2           FPT$PREC.V.N# = -1;             /* Backup 1 rec from eof              */
     1319    15532    2           CALL M$MPRECORD(FPT$PREC)
     1320    15533    3           WHENALTRETURN DO;
     1321    15534    3                IF B$JIT.ERR.CODE = %E$BOF
     1322    15535    4                THEN DO;
     1323    15536    4                     IF B$JIT.LNKCNT ~= 0 THEN CALL SC_LDLNK;
     1324    15537    4                     GOTO CLS_RLS_STARN;
     1325    15538    4                     END;
     1326    15539    3                END;
     1327    15540
     1328    15541        /* Security check the record sets.
     1329    15542        */
     1330    15543    2           IF (KEY.TYPE ~= JL_TRLRTYPE) OR (KEY.ID ~= LNKID)
     1331    15544    3           THEN DO;
     1332    15545    3                CALL SC_LDLNK;
     1333    15546    3                GOTO DELETE_SET;
     1334    15547    3                END;
     1335    15548
     1336    15549
     1337    15550        /* Read the trailer record.
     1338    15551        */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:45   
     1339    15552    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;
     1340    15553    2           CALL READ_STAR(JL_TRLRSIZE,JL_TRLRTYPE,N) ALTRET(SNAP_SET);
     1341    15554
     1342    15555    2           IF JL$TRAILER.IDN ~= LNKID
     1343    15556    3           THEN DO;
     1344    15557    3                CALL SC_LDLNK;
     1345    15558    3                GOTO DELETE_SET;
     1346    15559    3                END;
     1347    15560
     1348    15561    2           RECCNT = JL$TRAILER.NRECS;      /* Get # of records in this set       */
     1349    15562    2           DTS = JL$TRAILER.DTS;           /* And remember date/time stamp       */
     1350    15563
     1351    15564        /* Now, position back to the start of this record set.
     1352    15565        */
     1353    15566    2           FPT$PREC.V.N# = - RECCNT;
     1354    15567    2           CALL M$MPRECORD(FPT$PREC) ALTRET(SNAP_SET);
     1355    15568
     1356    15569        /* Read the header record and verify as much as possible.
     1357    15570        */
     1358    15571    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;
     1359    15572    2           CALL READ_STAR(JL_HEADSIZE,JL_HEADTYPE,N) ALTRET(SNAP_SET);
     1360    15573
     1361    15574    2           TPTR$ = ADDR(B_SITEINFO.VERSION#);
     1362    15575    2           IF (JL$HEAD.IDN ~= LNKID)
     1363    15576    2             OR (JL$HEAD.DTS ~= DTS)
     1364    15577    2             OR (JL$HEAD.SYSVERS ~= TPTR$->B$CHAR3)
     1365    15578    3           THEN DO;
     1366    15579    3   SNAP_SET:    ;
     1367    15580    3                CALL SC_LDLNK;
     1368    15581    3                GOTO DELETE_SET;
     1369    15582    3                END;
     1370    15583
     1371    15584
     1372    15585    2           B$U.ASL = 0;
     1373    15586    2           B$U.APR = 0;
     1374    15587    2           B$U.APO = 0;
     1375    15588    2           B$U.ASP = 0;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:46   
     1376    15589
     1377    15590
     1378    15591        /* Remember # of roseg pages this program needed.
     1379    15592        */
     1380    15593    2           TEMP1 = JL$HEAD.ROPGS - 1;      /* Always have at least 1             */
     1381    15594
     1382    15595        /* Now, restore the roseg info for this user which will be
     1383    15596           necessary to close all of his DCBs.
     1384    15597           Position the image file over JIT & HJIT to the roseg record(s).
     1385    15598        */
     1386    15599    2           FPT$PREC.V.N# = 2;
     1387    15600    2           CALL M$MPRECORD(FPT$PREC) ALTRET(SNAP_SET);
     1388    15601    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;
     1389    15602    2           CALL READ_STAR(JL_FULLPAGE,JL_ROTYPE,N) ALTRET(SNAP_SET);
     1390    15603
     1391    15604    2           B$ROSEG.NUMDCBS = B$CLROSEG.NUMDCBS;
     1392    15605    3           DO I = INITROSIZE% - 1 TO 1023;  /* Get DELTA's DCB too                */
     1393    15606    3                B$ROSEG$->B$PAGE.WRD(I) = B$SBUF1$->B$PAGE.WRD(I);
     1394    15607    3                END;
     1395    15608
     1396    15609    2           IF TEMP1 > 0
     1397    15610    3           THEN DO;                        /* Do if > 1 page of DCBs             */
     1398    15611    3                FPT$READ.BUF_.BUF$ = PINCRW(B$ROSEG$,1024);
     1399    15612    3                TEMP2 = BITBIN(%PGINMEM|%PGWRITE|%PGIOM);
     1400    15613    4                DO I = 1 TO TEMP1;
     1401    15614    4                     CALL MME$WGVP(%USERWSQ,%ROSEGLO+I,TEMP2,ERR1) ALTRET(SNAP_SET);
     1402    15615    4                     CALL READ_STAR(JL_FULLPAGE,JL_ROTYPE,N) ALTRET(SNAP_SET);
     1403    15616    4                     END;
     1404    15617    3                END;
     1405    15618
     1406    15619    3           DO I = %M$1STDCB# TO B$ROSEG.NUMDCBS;
     1407    15620    3                DCB$ = B$ROSEG.DCBPTR$->B$RODCB$(I);
     1408    15621    3                IF DCB$ ~= ADDR(NIL)
     1409    15622    3                THEN IF %DS2#<=DCB$->F$DCB.ACS AND DCB$->F$DCB.ACS<=%DS8#
     1410    15623    3                     THEN IF DCB$->F$DCB.FCD
     1411    15624    4                          THEN DO;
     1412    15625    4                               B$JIT.DCB$ = DCB$;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:47   
     1413    15626    4                               CALL FMI$INIT;
     1414    15627    4                               END;
     1415    15628    3                END;
     1416    15629
     1417    15630    2           CALL JSF$CLSUSRDCBS;            /* Close all open DCBs                */
     1418    15631
     1419    15632        /* Free the extra roseg pages acquired.
     1420    15633        */
     1421    15634    3           DO I = 1 TO TEMP1;
     1422    15635    3                CALL MME$WFVP(%USERWSQ,%ROSEGLO+I,TEMP2,ERR1) ALTRET(SNAP_SET);
     1423    15636    3                END;
     1424    15637
     1425    15638    2   DELETE_SET: ;
     1426    15639    2           CALL JLU$DELSET(LNKID);         /* Delete this record set             */
     1427    15640
     1428    15641        /* Decrement link count in JIT.
     1429    15642        */
     1430    15643    2           B$JIT.LNKCNT = B$JIT.LNKCNT - 1;
     1431    15644    2           END;                       /* End of big do while(linkcnt>0) loop     */
     1432    15645
     1433    15646        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:48   
     1434    15647        /* Finally, close image file with release and return.
     1435    15648        */
     1436    15649    1   CLS_RLS_STARN: ;
     1437    15650    1      J_FPT_CL_REL.V.DCB# = %M$STAR#;
     1438    15651    1      CALL M$MCLOSE(J_FPT_CL_REL)
     1439    15652    2      WHENALTRETURN DO;
     1440    15653    2           CALL SC_LDLNK;
     1441    15654    2           END;
     1442    15655
     1443    15656        /* Release our buffer page */
     1444    15657    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP2,ERR1) ALTRET(WHOA);
     1445    15658    1   WHOA: ;
     1446    15659    1      RETURN;
     1447    15660
     1448    15661
     1449    15662        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:49   
     1450    15663        /*************************************************************
     1451    15664         *                                                           *
     1452    15665         *                     JLS$SEARCH_IMAGE                      *
     1453    15666         *                                                           *
     1454    15667         *************************************************************/
     1455    15668
     1456    15669        /*F*   NAME:   JLS$GET_IMAGE
     1457    15670               PURPOSE: To search a saved program image for M$LINK
     1458    15671                        to do M$FINDPROC (MLINK=YES)
     1459    15672        */
     1460    15673    1   JLS$SEARCH_IMAGE: ENTRY(IDN,ERR,CLEANUP$) ALTRET;
     1461    15674        /* Get special buffer page 1 for reading in the star-n
     1462    15675           trailer and header records.
     1463    15676        */
     1464    15677    1      CALL HFF$TRAPALT ALTRET (SEA_ERR);
     1465    15678    1      TEMP1 = BITBIN(%PGINMEM|%PGWRITE|%PGIOM);
     1466    15679    1      CALL MME$WGVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1) ALTRET(SEA_ERR);
     1467    15680    1      ID.N = B$JIT.LNKCNT;
     1468    15681    1      ID.SYSID = B$JIT.SYSID;
     1469    15682
     1470    15683        /* Initialize the read FPT.
     1471    15684        */
     1472    15685    1      FPT$READ = FPT_READ;
     1473    15686    1      FPT$READ.V_   = VECTOR(FPT$READ.V);
     1474    15687    1      FPT$READ.KEY_   = VECTOR(KEY);
     1475    15688    1      FPT$READ.V.DCB# = %M$STAR#;
     1476    15689        /* Position M$* To eof.
     1477    15690        */
     1478    15691    1      J_FPT_PFIL.V.DCB# = %M$STAR#;
     1479    15692    1      CALL M$MPFIL(J_FPT_PFIL) ALTRET(SEA_ERR);
     1480    15693    1      FPT$PREC = FPT_PREC;
     1481    15694    1      FPT$PREC.V_   = VECTOR(FPT$PREC.V);
     1482    15695    1      FPT$PREC.KEY_   = VECTOR(KEY);
     1483    15696    1      FPT$PREC.V.DCB# = %M$STAR#;
     1484    15697    1      FPT$PREC.V.N# = -1;
     1485    15698        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:50   
     1486    15699        /* Position back one (or two) record and verify that it is the trailer record.
     1487    15700        */
     1488    15701    2      DO WHILE (ID.N ~= 0);
     1489    15702    2           CALL M$MPRECORD(FPT$PREC) ALTRET(SEA_ERR);
     1490    15703    2           IF KEY.TYPE ~= JL_TRLRTYPE OR KEY.ID ~= LNKID
     1491    15704    2           THEN GOTO SEA_ERR;
     1492    15705
     1493    15706        /* Read the trailer record into SBUF1.
     1494    15707        */
     1495    15708    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;
     1496    15709    2           CALL READ_STAR(JL_TRLRSIZE,JL_TRLRTYPE,N) ALTRET(SEA_ERR);
     1497    15710
     1498    15711    2           IF JL$TRAILER.IDN ~= LNKID
     1499    15712    2           THEN GOTO SEA_ERR;
     1500    15713
     1501    15714    2           RECCNT = JL$TRAILER.NRECS;      /* Get # of records in this set       */
     1502    15715    2           DTS = JL$TRAILER.DTS;           /* And remember date/time stamp       */
     1503    15716
     1504    15717        /* Now, position back to the start of this record SET.
     1505    15718        */
     1506    15719    2           FPT$PREC.V.N# = - RECCNT;
     1507    15720    2           CALL M$MPRECORD(FPT$PREC) ALTRET(SEA_ERR);
     1508    15721
     1509    15722        /* Read the header record into SBUF1 and verify as much as possible.
     1510    15723        */
     1511    15724    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;
     1512    15725    2           CALL READ_STAR(JL_HEADSIZE,JL_HEADTYPE,N) ALTRET(SEA_ERR);
     1513    15726
     1514    15727    2           IF JL$HEAD.IDN ~= LNKID OR JL$HEAD.DTS ~= DTS
     1515    15728    2           THEN GOTO SEA_ERR;
     1516    15729
     1517    15730    2           TEMP1 = JL$HEAD.APR;
     1518    15731    2           CALL CHK_PROC ALTRET(CHK_ASL);
     1519    15732    2   SEA_RET:
     1520    15733    2           CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1);
     1521    15734    2           CALL M$MCLOSE (J_FPT_CL_SAVE) ALTRET(SEA_RET1);
     1522    15735    2   SEA_RET1: RETURN;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:51   
     1523    15736    2   CHK_ASL: TEMP1 = JL$HEAD.ASL;
     1524    15737    2           CALL CHK_PROC ALTRET(CHK_ACP);
     1525    15738    2           GOTO SEA_RET;
     1526    15739    2   CHK_ACP: TEMP1 = JL$HEAD.ACP;
     1527    15740    2           CALL CHK_PROC ALTRET(CHK_DB);
     1528    15741    2           GOTO SEA_RET;
     1529    15742    2   CHK_DB: TEMP1 = JL$HEAD.DB;
     1530    15743    2           CALL CHK_PROC ALTRET(CHK_NEXT);
     1531    15744    2           GOTO SEA_RET;
     1532    15745    2   CHK_NEXT:
     1533    15746    2           FPT$PREC.V.N# = -2;
     1534    15747    2           ID.N = ID.N - 1;
     1535    15748    2           END;
     1536    15749
     1537    15750    1   SEA_ERR:
     1538    15751    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1);
     1539    15752    1      CALL M$MCLOSE (J_FPT_CL_SAVE) ALTRET(SEA_ERR1);
     1540    15753    1   SEA_ERR1: ALTRETURN;
     1541    15754
     1542    15755    1   CHK_PROC: PROC ALTRET;
     1543    15756    2   DCL 1 TXTC BASED(B$PS1$),
     1544    15757    2         2 C UBIN BYTE CALIGNED,
     1545    15758    2         2 TEXT CHAR (TXTC.C);
     1546    15759    2      IF TEMP1 = 0 THEN ALTRETURN;
     1547    15760    2      IF B$P.NAME.TEXT (TEMP1) = TXTC.TEXT
     1548    15761    2      THEN RETURN;
     1549    15762    2      ALTRETURN;
     1550    15763    2   END CHK_PROC;
     1551    15764        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:52   
     1552    15765        /*************************************************************
     1553    15766         *                                                           *
     1554    15767         *                      WRITE_SEGS                           *
     1555    15768         *                                                           *
     1556    15769         *************************************************************/
     1557    15770
     1558    15771        /* This routine writes user's and ASL's or DB's data segments into
     1559    15772           the image file. User data segment #2 (common) will never be
     1560    15773           saved for a ldlnk file, as its size field in the header is zero.
     1561    15774        */
     1562    15775
     1563    15776    1   WRITE_SEGS: PROC(LS$,SIZES$,RECTYPE) ALTRET;
     1564    15777    2   DCL LS$ PTR;
     1565    15778    2   DCL SIZES$ PTR;
     1566    15779    2   DCL RECTYPE SBIN;
     1567    15780    2   DCL B$SIZE(0:7) UBIN BASED;
     1568    15781
     1569    15782    2      TEMP1 = BITBIN(%DS1SID & '1777'O)*2; /* Word index into lseg               */
     1570    15783    2      LPTR$ = PINCRW(LS$,TEMP1);
     1571    15784    3      DO I = 0 TO 7;
     1572    15785        /* NOTE: JL$HEAD.UDS(1) will always = 0 on M$LINK'S. */
     1573    15786    3           TEMP3 = SIZES$->B$SIZE(I);
     1574    15787    3           IF TEMP3 > 0
     1575    15788    4           THEN DO;                        /* Save all existing data segments    */
     1576    15789    4                IF LPTR$ -> B$DESCR.FLGS & %DSEXEC
     1577    15790    5                THEN DO;
     1578    15791    5                     SIZES$ -> B$SIZE (I) = TEMP3 + BITBIN ('200000000000'O);
     1579    15792    5                     END;
     1580    15793                                           /* Get base & bound of dataseg descriptor  */
     1581    15794    4                TEMP2 = LPTR$ -> B$DESCR.BASE / 4096;
     1582    15795    4                N = MOD(TEMP3,1024);       /* Size of last rec for seg           */
     1583    15796    4                TEMP3 = TEMP3/1024;
     1584    15797    5                DO J = 1 TO TEMP3;         /* Write each full pg of seg          */
     1585    15798    6                     DO INHIBIT;
     1586    15799    6                          B$LS$->B$MLS.MISC2=LPTR$->B$DESCR;
     1587    15800    6                          FPT$WRITE.BUF_.BUF$=PINCRW(B$MISC2$,(J-1)*1024);
     1588    15801    6                          IF B$UPT$ -> B$MAP.CTRL(TEMP2)&%PGINMEM
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:53   
     1589    15802    6                          THEN CALL WRITE_STAR(JL_FULLPAGE,RECTYPE+I,TEMP2)
     1590    15803    6                                 ALTRET(SNARF);
     1591    15804    6                          ELSE CALL WRITE_STAR(0,RECTYPE+I,TEMP2)
     1592    15805    6                                 ALTRET(SNARF);
     1593    15806    6                          END;             /* Inhibit                            */
     1594    15807    5                     TEMP2 = TEMP2 + 1;
     1595    15808    5                     END;
     1596    15809    4                IF N > 0
     1597    15810    5                THEN DO;                   /* Do if end of seg didn't fill pg    */
     1598    15811    6                     DO INHIBIT;
     1599    15812    6                          B$LS$->B$MLS.MISC2=LPTR$->B$DESCR;
     1600    15813    6                          FPT$WRITE.BUF_.BUF$=PINCRW(B$MISC2$,TEMP3*1024);
     1601    15814    6                          IF B$UPT$ -> B$MAP.CTRL(TEMP2)&%PGINMEM
     1602    15815    6                          THEN CALL WRITE_STAR(N*4,RECTYPE+I,TEMP2)
     1603    15816    6                                 ALTRET(SNARF);
     1604    15817    6                          ELSE CALL WRITE_STAR(0,RECTYPE+I,TEMP2)
     1605    15818    6                                 ALTRET(SNARF);
     1606    15819    6                          END;             /* Inhibit                            */
     1607    15820    5                     END;
     1608    15821    4                END;
     1609    15822    3           LPTR$ = PINCRW(LPTR$,2);        /* Point to nxt dataseg descr         */
     1610    15823    3           END;                            /* End of i = 0 to 7 loop             */
     1611    15824    2      RETURN;
     1612    15825    2   SNARF: ALTRETURN;
     1613    15826    2   END WRITE_SEGS;
     1614    15827        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:54   
     1615    15828        /*************************************************************
     1616    15829         *                                                           *
     1617    15830         *                       READ_SEGS                           *
     1618    15831         *                                                           *
     1619    15832         *************************************************************/
     1620    15833
     1621    15834        /* This routine reads in the user, ASL & DB data segments from the
     1622    15835           image  file (except, of course, for user common on an M$LINK).
     1623    15836        */
     1624    15837
     1625    15838    1   READ_SEGS: PROC(WSQ,LS$,SIZES$,RECTYPE) ALTRET;
     1626    15839    2   DCL WSQ SBIN;
     1627    15840    2   DCL LS$ PTR;
     1628    15841    2   DCL SIZES$ PTR;
     1629    15842    2   DCL RECTYPE SBIN;
     1630    15843    2   DCL B$SIZE(0:7) UBIN BASED;
     1631    15844
     1632    15845    2      TEMP1 = BITBIN(%DS1SID & '1777'O)*2; /* Word index into lseg               */
     1633    15846    2      SID = BITBIN(%DS1SID);
     1634    15847    2      LPTR$ = PINCRW(LS$,TEMP1);
     1635    15848    3      DO I = 0 TO 7;
     1636    15849        /* NOTE: JL$HEAD.UDS(1) will always = 0 on an M$LINK return. */
     1637    15850    3           IF SIZES$->B$SIZE(I) > 0
     1638    15851    4           THEN DO;
     1639    15852    4                N = SIZES$->B$SIZE(I);     /* Number of words in seg             */
     1640    15853    4                CALL MMH$GDS(WSQ,SID,N,ERR) /* N may have VIRTONLY               */
     1641    15854    5                WHENRETURN DO;
     1642    15855    5                     N = NN.U;
     1643    15856    5                     TEMP3 = MOD(N,1024) * 4; /* leftover bytes                  */
     1644    15857    5                     TEMP2 = N/1024;       /* full pages                         */
     1645    15858    5                     FPT$READ.BUF_.BUF$ = B$MISC2$;
     1646    15859    6                     DO J = 1 TO TEMP2;
     1647    15860    7                          DO INHIBIT;
     1648    15861    7                               B$LS$->B$MLS.MISC2=LPTR$->B$DESCR;
     1649    15862    7                               CALL READ_STAR(JL_FULLPAGE,RECTYPE+I,N) ALTRET(SNARF);
     1650    15863    7                               END;        /* Inhibit                            */
     1651    15864    6                          END;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:55   
     1652    15865        /* If seg wasn't an even multiple of pages, read in the last bit */
     1653    15866    5                     IF TEMP3 ~= 0
     1654    15867    6                     THEN DO INHIBIT;
     1655    15868    6                          B$LS$->B$MLS.MISC2=LPTR$->B$DESCR;
     1656    15869    6                          CALL READ_STAR(TEMP3,RECTYPE+I,N) ALTRET(SNARF);
     1657    15870    6                          END;             /* Inhibit                            */
     1658    15871    5                     END/*If the pages are available*/;
     1659    15872
     1660    15873        /* If MM can't get the pages, it is probably because the M$LINKed to
     1661    15874           program expanded the size of the common data segment to the point
     1662    15875           where now the user data segment space is over allocated.
     1663    15876        */
     1664    15877    5                WHENALTRETURN DO;
     1665    15878    5                     IF (B$JIT.JUNK & %JJ_GETTING#)
     1666    15879    5                     THEN ALTRETURN;
     1667    15880
     1668    15881    5                     FPT$PREC.V.N# = (NN.U+1023)/1024; /*# of recs*/
     1669    15882    5                     CALL M$MPRECORD(FPT$PREC) ALTRET(SNARF);
     1670    15883
     1671    15884    5                     B$JIT.JUNK2 = (B$JIT.JUNK2 | %JJ2_MEM_ERR#);
     1672    15885    5                     END/*MMH$GDS Altret*/;
     1673    15886    4                END/*do if this B$SIZE > 0*/;
     1674    15887
     1675    15888    3           LPTR$ = PINCRW(LPTR$,2);        /* Point to nxt dataseg dsecr         */
     1676    15889    3           SID = SID + 1;
     1677    15890    3           END;
     1678    15891    2      RETURN;
     1679    15892    2   SNARF: ALTRETURN;
     1680    15893    2   END READ_SEGS;
     1681    15894        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:56   
     1682    15895        /*************************************************************
     1683    15896         *                                                           *
     1684    15897         *                       WRITE_TCB                           *
     1685    15898         *                                                           *
     1686    15899         *************************************************************/
     1687    15900
     1688    15901        /* This routine will write out the debugger or ASL TCBs.
     1689    15902        */
     1690    15903
     1691    15904    1   WRITE_TCB: PROC(TYPE) ALTRET;
     1692    15905    2   DCL TYPE UBIN;
     1693    15906    2   DCL TCBSIZE UBIN;
     1694    15907    2   DCL TCB$ PTR;
     1695    15908
     1696    15909    2      TEMP1 = BITBIN(%TCBSID & '1777'O)*2;
     1697    15910    2      IF TYPE = JL_ATCBTYPE
     1698    15911    3      THEN DO;
     1699    15912    3           TCBSIZE = JL$HEAD.ASLTCB + 1;
     1700    15913    3           TCB$ = PINCRW(B$ASLLS$,TEMP1);
     1701    15914    3           END;
     1702    15915    3      ELSE DO;
     1703    15916    3           TCBSIZE = JL$HEAD.DBTCB + 1;
     1704    15917    3           TCB$ = PINCRW(B$DBLS$,TEMP1);
     1705    15918    3           END;
     1706    15919    3      DO INHIBIT;
     1707    15920    3           B$LS$->B$MLS.MISC2=TCB$->B$DESCR;
     1708    15921    3           FPT$WRITE.BUF_.BUF$=B$MISC2$;
     1709    15922    3           CALL WRITE_STAR(TCBSIZE,TYPE,0) ALTRET(WTCB_ERR);
     1710    15923    3           END;                            /* Inhibit                            */
     1711    15924    2      RETURN;
     1712    15925    2   WTCB_ERR:
     1713    15926    2      ALTRETURN;
     1714    15927    2   END WRITE_TCB;
     1715    15928
     1716    15929        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:57   
     1717    15930        /*************************************************************
     1718    15931         *                                                           *
     1719    15932         *                        READ_TCB                           *
     1720    15933         *                                                           *
     1721    15934         *************************************************************/
     1722    15935
     1723    15936        /* This routine restores ASL and debugger TCBs.
     1724    15937        */
     1725    15938
     1726    15939    1   READ_TCB: PROC(TYPE) ALTRET;
     1727    15940    2   DCL TYPE UBIN;
     1728    15941    2   DCL TCBSIZE UBIN;
     1729    15942    2   DCL TCB$ PTR;
     1730    15943
     1731    15944    2      TEMP1 = BITBIN(%TCBSID & '1777'O)*2;
     1732    15945    2      IF TYPE = JL_ATCBTYPE
     1733    15946    3      THEN DO;
     1734    15947    3           TCBSIZE = JL$HEAD.ASLTCB + 1;
     1735    15948    3           TCB$ = PINCRW(B$ASLLS$,TEMP1);
     1736    15949    3           END;
     1737    15950    3      ELSE DO;
     1738    15951    3           TCBSIZE = JL$HEAD.DBTCB + 1;
     1739    15952    3           TCB$ = PINCRW(B$DBLS$,TEMP1);
     1740    15953    3           END;
     1741    15954    3      DO INHIBIT;
     1742    15955    3           B$LS$->B$MLS.MISC2=TCB$->B$DESCR;
     1743    15956    3           ADDR(B$LS$->B$MLS.MISC2)->B$DESCR.FLGS=
     1744    15957    3             ADDR(B$LS$->B$MLS.MISC2)->B$DESCR.FLGS|%DSWRITE;
     1745    15958    3           FPT$READ.BUF_.BUF$=B$MISC2$;
     1746    15959    3           CALL READ_STAR(TCBSIZE,TYPE,TCBSIZE) ALTRET(WTCB_ERR);
     1747    15960    3           END;                            /* Inhibit                            */
     1748    15961    2      RETURN;
     1749    15962    2   WTCB_ERR:
     1750    15963    2      ALTRETURN;
     1751    15964    2   END READ_TCB;
     1752    15965
     1753    15966        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:58   
     1754    15967        /*************************************************************
     1755    15968         *                                                           *
     1756    15969         *                      WRITE_DOLIST                         *
     1757    15970         *                                                           *
     1758    15971         *************************************************************/
     1759    15972    1   WRITE_DOLIST:PROC ALTRET;
     1760    15973
     1761    15974    2   DCL DO_SUB_LEN UBIN;
     1762    15975    2   DCL DO_TOT_LEN UBIN;
     1763    15976    2   DCL DO_CONT_OFF UBIN;
     1764    15977    2   DCL NEXT_DO$ PTR;
     1765    15978    2   DCL POS_DO$ PTR;
     1766    15979
     1767    15980    2   DCL DO_ENTRY CHAR(DO_SUB_LEN) BASED;
     1768    15981    2      I = 0;
     1769    15982    2      DO_CONT_OFF = SIZEC(B$DOCONT) - SIZEC(B$DOCONT.ECCINFO);
     1770    15983    2      NEXT_DO$ = B$U.DL$;
     1771    15984    3      DO WHILE (NEXT_DO$ ~= ADDR(NIL));
     1772    15985    4           IF NEXT_DO$->B$DO.ENTER ~= ENTADDR(NIL) THEN DO;
     1773    15986    4   CHECK_DO:
     1774    15987    5                IF NEXT_DO$->B$DO.CONT THEN DO;
     1775    15988    5                     NEXT_DO$ = NEXT_DO$->B$DO.LNK$;
     1776    15989    5                     GOTO CHECK_DO;
     1777    15990    5                     END;
     1778    15991    4                GOTO END_DO_WHILE;
     1779    15992    4                END;
     1780    15993    3           DO_SUB_LEN = SIZEC(B$DO);
     1781    15994    3           DO_TOT_LEN = DO_SUB_LEN;
     1782    15995    3           B$SBUF1$->DO_ENTRY = NEXT_DO$->DO_ENTRY;
     1783    15996    3   CHECK_DO_2:
     1784    15997    4           IF NEXT_DO$->B$DO.CONT THEN DO;
     1785    15998    4                NEXT_DO$ = NEXT_DO$->B$DO.LNK$;
     1786    15999    4                DO_SUB_LEN = SIZEC(B$DOCONT);
     1787    16000    4                PINCRC(B$SBUF1$,DO_TOT_LEN)->DO_ENTRY = PINCRC(NEXT_DO$,DO_CONT_OFF)->
             16000                         DO_ENTRY;
     1788    16001    4                DO_TOT_LEN = DO_TOT_LEN + DO_SUB_LEN;
     1789    16002    4                GOTO CHECK_DO_2;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:59   
     1790    16003    4                END;
     1791    16004    3           DO_TOT_LEN = B$SBUF1$->B$DO.ECCSZ * 4 + SIZEC(B$DO)-SIZEC(B$DO.ECCINFO);
     1792    16005    3           FPT$WRITE.BUF_.BUF$ = B$SBUF1$;
     1793    16006    4           CALL WRITE_STAR(DO_TOT_LEN,JL_DOLSTTYPE,I) WHENALTRETURN DO;
     1794    16007    4                ALTRETURN;
     1795    16008    4                END;
     1796    16009    3           I = I + 1;
     1797    16010    3   END_DO_WHILE:
     1798    16011    3           NEXT_DO$ = NEXT_DO$->B$DO.LNK$;
     1799    16012    3           END;
     1800    16013    2      J_FPT_PFIL.V.DCB# = %M$STAR#;
     1801    16014    3      CALL M$MPFIL(J_FPT_PFIL) WHENALTRETURN DO;
     1802    16015    3           ALTRETURN;
     1803    16016    3           END;
     1804    16017    2      FPT$PREC = FPT_PREC;
     1805    16018    2      FPT$PREC.V_ = VECTOR(FPT$PREC.V);
     1806    16019    2      FPT$PREC.KEY_ = VECTOR(KEY);
     1807    16020    2      FPT$PREC.V.DCB# = %M$STAR#;
     1808    16021    2      FPT$PREC.V.N# = -RECCNT;
     1809    16022    3      CALL M$MPRECORD(FPT$PREC) WHENALTRETURN DO;
     1810    16023    3           ALTRETURN;
     1811    16024    3           END;
     1812    16025    3      IF KEY.TYPE ~= JL_HEADTYPE THEN DO;
     1813    16026    3           CALL SC_BADNF;
     1814    16027    3           ALTRETURN;
     1815    16028    3           END;
     1816    16029    2      FPT$READ = FPT_READ;
     1817    16030    2      FPT$READ.V_ = VECTOR(FPT$READ.V);
     1818    16031    2      FPT$READ.KEY_ = VECTOR(KEY);
     1819    16032    2      FPT$READ.V.DCB# = %M$STAR#;
     1820    16033    2      FPT$READ.BUF_.BUF$ = B$SBUF1$;
     1821    16034    3      CALL READ_STAR(JL_HEADSIZE,JL_HEADTYPE,N) WHENALTRETURN DO;
     1822    16035    3           ALTRETURN;
     1823    16036    3           END;
     1824    16037    2      JL$HEAD.DOLST_RECS = I;
     1825    16038    2      FPT$WRITE.BUF_.BUF$ = B$SBUF1$;
     1826    16039    2      FPT$WRITE.V.NEWKEY# = '0'B;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:60   
     1827    16040    3      CALL WRITE_STAR(JL_HEADSIZE,JL_HEADTYPE,0) WHENALTRETURN DO;
     1828    16041    3           FPT$WRITE.V.NEWKEY# = '1'B;
     1829    16042    3           ALTRETURN;
     1830    16043    3           END;
     1831    16044    2      FPT$WRITE.V.NEWKEY# = '1'B;
     1832    16045    2      RECCNT = RECCNT -1 ;  /* DECREMENT BY ONE BECAUSE HEADER IS WRITTEN TWICE  */
     1833    16046    2   END WRITE_DOLIST;
     1834    16047        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:61   
     1835    16048        /*************************************************************
     1836    16049         *                                                           *
     1837    16050         *                      READ_DOLIST                         *
     1838    16051         *                                                           *
     1839    16052         *************************************************************/
     1840    16053    1   READ_DOLIST:PROC ALTRET;
     1841    16054
     1842    16055    2   DCL SSV$EVENT ENTRY(7);
     1843    16056    2   DCL DO_TOT_LEN UBIN WORD;
     1844    16057    2   DCL DOLST# UBIN WORD;
     1845    16058    2      DOLST# = JL$HEAD.DOLST_RECS;
     1846    16059    3      DO WHILE (DOLST# >0);
     1847    16060    3           FPT$READ.BUF_.BUF$ = B$SBUF2$;
     1848    16061    4           CALL READ_STAR(1024,JL_DOLSTTYPE,DO_TOT_LEN) WHENALTRETURN DO;
     1849    16062    4                ALTRETURN;
     1850    16063    4                END;
     1851    16064    3           TEMP1 = B$SBUF2$->B$DO.WSR;
     1852    16065    3           CALL SSV$EVENT(B$JIT.USER,TEMP1,B$SBUF2$->B$DO.ECCSC,
     1853    16066    3             B$SBUF2$->B$DO.EVID,B$SBUF2$->B$DO.ERRC,ADDR(B$SBUF2$->B$DO.ECCSZ),
     1854    16067    3             ENTADDR(NIL));
     1855    16068    3           DOLST# = DOLST# - 1;
     1856    16069    3           END;
     1857    16070    2   END READ_DOLIST;
     1858    16071        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:62   
     1859    16072        /*************************************************************
     1860    16073         *                                                           *
     1861    16074         *                       WRITE_STAR                          *
     1862    16075         *                                                           *
     1863    16076         *************************************************************/
     1864    16077
     1865    16078        /* The following procedure writes a record of a given size and key
     1866    16079           to the image file. It altreturns if an error occurrs on the write.
     1867    16080
     1868    16081            The count of the number of records is incremented if the record is
     1869    16082            successfully written.
     1870    16083
     1871    16084            Before calling this routine FPT$WRITE.BUF_.BUF$ must be set
     1872    16085            to the address of the buffer to be written.  This pointer will be
     1873    16086            bumped by 1024 by the WRITE_STAR routine.
     1874    16087        */
     1875    16088
     1876    16089    1   WRITE_STAR: PROC(BUFSIZE,KEYTYPE,PGNO) ALTRET;
     1877    16090    2   DCL BUFSIZE SBIN;                       /* # of bytes to write                */
     1878    16091    2   DCL KEYTYPE SBIN;             /* The type field of the key for this record    */
     1879    16092    2   DCL PGNO SBIN;                /* The wsq page # which this record represents  */
     1880    16093
     1881    16094    3      DO INHIBIT;
     1882    16095    3           IF BUFSIZE = 0
     1883    16096    3           THEN FPT$WRITE.BUF_ = VECTOR (NIL);
     1884    16097    3           ELSE FPT$WRITE.BUF_.BOUND = BUFSIZE - 1;
     1885    16098    3           KEY.TYPE = KEYTYPE;
     1886    16099    3           KEY.PGNO = PGNO;
     1887    16100    3           CALL M$MWRITE(FPT$WRITE) ALTRET(BAD_WRITE);
     1888    16101    3           RECCNT = RECCNT + 1;
     1889    16102    3           FPT$WRITE.BUF_.BUF$ = PINCRW(FPT$WRITE.BUF_.BUF$,1024);
     1890    16103    3           RETURN;
     1891    16104    3           END;                            /* Inhibit                            */
     1892    16105    2   BAD_WRITE:;
     1893    16106    2      ALTRETURN;
     1894    16107    2   END WRITE_STAR;
     1895    16108        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:63   
     1896    16109        /*************************************************************
     1897    16110         *                                                           *
     1898    16111         *                        READ_STAR                          *
     1899    16112         *                                                           *
     1900    16113         *************************************************************/
     1901    16114
     1902    16115        /* The following procedure reads the next record from M$*,
     1903    16116           verifies that the key type was the one expected, and returns
     1904    16117           the actual record size read.
     1905    16118        */
     1906    16119    1   READ_STAR: PROC(BUFSIZE,KEYTYPE,ARS) ALTRET;
     1907    16120    2   DCL BUFSIZE SBIN;                  /* Size in bytes of buffer to read into    */
     1908    16121    2   DCL KEYTYPE SBIN;                       /* Type of key expected to be read    */
     1909    16122    2   DCL ARS SBIN;                 /* Actual record size returned from M$WRITE     */
     1910    16123
     1911    16124    3      DO INHIBIT;
     1912    16125    3           FPT$READ.BUF_.BOUND = BUFSIZE - 1;
     1913    16126    3           CALL M$MREAD(FPT$READ) ALTRET(BAD_READ);
     1914    16127
     1915    16128    3           IF KEY.TYPE ~= KEYTYPE
     1916    16129    4           THEN DO;
     1917    16130    4                CALL SC_BADNF;
     1918    16131    4                ALTRETURN;
     1919    16132    4                END;
     1920    16133
     1921    16134        /*S*    SCREECH_CODE: JLS-S$BADNF                                  */
     1922    16135        /*S*   TYPE: SNAP                                                   */
     1923    16136        /*S*   MESSAGE: Unexpected record type encountered in image  file. */
     1924    16137
     1925    16138    3           ARS = B$M$STAR$->F$DCB.ARS;
     1926    16139    3           FPT$READ.BUF_.BUF$ = PINCRW(FPT$READ.BUF_.BUF$,1024);
     1927    16140    3           RETURN;
     1928    16141    3           END;                            /* Inhibit                            */
     1929    16142    2   BAD_READ:;
     1930    16143    2      ALTRETURN;
     1931    16144    2   END READ_STAR;
     1932    16145        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:64   
     1933    16146        /*************************************************************
     1934    16147         *                                                           *
     1935    16148         *                        BRING_IN                           *
     1936    16149         *                                                           *
     1937    16150         *************************************************************/
     1938    16151
     1939    16152        /* This routine simply continues to read some type of saved program
     1940    16153           information into the instruction segment, getting pages as nec-
     1941    16154           essary.
     1942    16155        */
     1943    16156
     1944    16157    1   BRING_IN: PROC(PGS,STARTPG,DATATYPE) ALTRET;
     1945    16158    2   DCL PGS SBIN;
     1946    16159    2   DCL STARTPG SBIN;
     1947    16160    2   DCL DATATYPE SBIN;
     1948    16161
     1949    16162    2   DCL TMP SBIN;
     1950    16163
     1951    16164    2      TMP = STARTPG-%ISEGLO;
     1952    16165    2      FPT$READ.BUF_.BUF$ = PINCRW(B$USERIS$,TMP*1024);
     1953    16166    3      DO I = 0 TO PGS-1;
     1954    16167    3           CALL MME$WGVP(%USERWSQ,STARTPG+I,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),
     1955    16168    3             ERR) ALTRET(YUK);
     1956    16169    3           CALL READ_STAR(JL_FULLPAGE,DATATYPE,N) ALTRET(YUK);
     1957    16170    3           END;
     1958    16171    2      RETURN;
     1959    16172    2   YUK: ALTRETURN;
     1960    16173    2   END BRING_IN;
     1961    16174
     1962    16175    1   END JLS$SAVE_IMAGE;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:65   
--  Include file information  --

   UD_MACRO_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   JL_DATA_M.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_UHJMAC_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JLS$SAVE_IMAGE.

   Procedure JLS$SAVE_IMAGE requires 3412 words for executable code.
   Procedure JLS$SAVE_IMAGE requires 98 words of local(AUTO) storage.
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:66   

    No errors detected in file JLS$IMAGES.:E05TSI    .

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:67   

 Object Unit name= JLS$SAVE_IMAGE                             File name= JLS$IMAGES.:E05TOU
 UTS= JUL 29 '97 23:25:13.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     47     57  JLS$SAVE_IMAGE
    2   DCB   even  none     0      0  M$LM
    3   Proc  even  none  3412   6524  JLS$SAVE_IMAGE
    4  RoData even  none    80    120  JLS$SAVE_IMAGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        3  JLS$SAVE_IMAGE
     3   1312          yes     yes      Std        3  JLS$GET_IMAGE
     3   4157          yes     yes      Std        0  JLS$CLEANUP
     3   4733          yes     yes      Std        3  JLS$SEARCH_IMAGE
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:68   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SSS$SYSTIME
         yes           Std       1 JSN$GETSSR
 yes     yes           Std       4 MME$WFVP
         yes           Std       1 JSN$GETASR
 yes     yes           Std       3 SSR$REG
 yes     yes           Std       1 UMD$SVPRMPT
 yes     yes           Std       1 M$MPRECORD
 yes     yes           Std       4 KIA$UCIOD
 yes     yes           Std       1 JSA$GETTCB
 yes     yes           Std       0 FMI$INIT
         yes           Std       0 FMP$CLSJ
 yes     yes           Std       1 JSA$ALIBDB
 yes     yes           Std       1 UQB$MDEQ
 yes     yes           Std       0 HFF$TRAPALT
         yes           Std       1 JLU$DELSET
         yes           Std       0 FMM$RELDCBI
 yes     yes           Std       5 JSA$FINDSSP
         yes           Std       0 JSF$CLSUSRDCBS
 yes     yes           Std       4 MME$WGVP
 yes     yes           Std       1 JSA$DB
         yes           Std       1 JSN$SETASR
 yes     yes           Std       1 M$MLIMIT
         yes           Std       2 JSA$RUNDSPC
         yes           Std       1 JSN$SETSSR
 yes     yes           Std       1 M$MPFIL
 yes     yes           Std       1 UMD$RSTRPRMPT
 yes     yes           Std       1 JLU$OPNSTARN
 yes     yes           Std       5 JSA$FINDAUTO
 yes     yes           Std       1 M$MCLOSE
 yes     yes           Std       0 JLU$RESTORE_AMR
 yes     yes           Std       5 MMH$GDS
         yes           Std       7 SSV$EVENT
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:69   
 yes     yes           Std       1 M$MWRITE
 yes     yes           Std       1 M$MREAD
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_IOERRNF                            SC_INFONF                             SC_LDLNK
     SC_BADNF                              SC_SYSIDNF                            B$P$
     M$UC                             r    MM_BYP$                               M$LM
r    B$JIT$                           r    B$M$STAR$                        r    B$M$LM$
r    B$M$UC$                          r    B$USERIS$                        r    B$UPT$
r    B$SBUF1$                         r    B$ASLLS$                         r    B$DBLS$
r    B$USERLS$                        r    B$JITPG$                         r    B$USERHJIT$
r    B$ROSEG$                         r    B$SBUF2$                         r    B$LS$
r    B$MISC2$                              S$CU$                            r    J_SYS$
r    B$PS1$                                FR_SUNM                               J_FPT_CL_REL
     J_FPT_CL_SAVE                         J_FPT_PFIL                            J_FPT_RESCTL
     B_SITEINFO                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
     ASLENTSID
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:70   


        1        1        /*M* JLS$IMAGES -The image writing/restoring routines for M$LINK & SAVE/GET.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8        JLS$SAVE_IMAGE: PROC(IDN,ERR,CLEANUP$) ALTRET;

      8  3 000000   000000 700200 xent  JLS$SAVE_IM* TSX0  ! X66_AUTO_3
         3 000001   000142 000003                    ZERO    98,3

        9        9
       10       10    1   DCL IDN UBIN(36);                       /* 0 if SAVE/GET                      */
       11       11    1   DCL ERR UBIN(36);
       12       12    1   DCL CLEANUP$ EPTR;
       13       13
       14       14                                                /* INCLUDE Files                      */
       15       15        %INCLUDE B$JIT;
       16      618        %INCLUDE B$MAP;
       17      717        %INCLUDE B$P;
       18      801        %INCLUDE B$ROSEG;
       19      864        %INCLUDE B$USER;
       20     1080        %INCLUDE B_MACROS_C;
       21     1191        %INCLUDE B_MLSMAC_C;
       22     2133        %INCLUDE B_SEGIDS_C;
       23     2672        %INCLUDE B_UHJMAC_C;
       24     3001        %INCLUDE B_ULSMAC_C;
       25     4110        %INCLUDE CP_6;
       26     9669        %INCLUDE CP_6_SUBS;
       27    10209        %INCLUDE F$DCB;
       28    10258        %INCLUDE F_ERRORS_C;
       29    10498        %INCLUDE F_FPTCODE_C;
       30    10534        %INCLUDE JL_DATA_M;
       31    10703        %INCLUDE J_ERRORS_C;
       32    10790        %INCLUDE KV_PRMID_E;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:71   
       33    10964        %INCLUDE MM_DATA_R;
       34    11484        %INCLUDE NK_VFC_C;
       35    11558        %INCLUDE SS_SCHED_C;
       36    11791        %INCLUDE UD_MACRO_C;
       37    11824
       38    11825                                                /* AUTO Storage                       */
       39    11826    1   DCL LPTR$ PTR;
       40    11827    1   DCL M$UC$ PTR;
       41    11828    1   DCL TPTR$ PTR;
       42    11829    1   DCL LM$ PTR;
       43    11830    1   DCL I SBIN;
       44    11831    1   DCL J SBIN;
       45    11832    1   DCL N SBIN;
       46    11833    1   DCL 1 NN REDEF N,
       47    11834    1         2 * BIT(9),
       48    11835    1         2 U UBIN(27) UNAL;
       49    11836    1   DCL PTYPE BIT(18);
       50    11837    1   DCL SID SBIN;
       51    11838    1   DCL DTS UBIN(36);
       52    11839    1   DCL ERR1 UBIN(36);
       53    11840    1   DCL DCB$ PTR;
       54    11841    1   DCL TEMP1 SBIN;
       55    11842    1   DCL TEMP2 SBIN;
       56    11843    1   DCL TEMP3 SBIN;
       57    11844    1   DCL RECCNT SBIN;
       58    11845    1   DCL 1 KEY,
       59    11846    1         2 CNT UBIN(9) UNAL,
       60    11847    1         2 ID UBIN(27) UNAL,
       61    11848    1         2 TYPE UBIN(9) UNAL,
       62    11849    1         2 PGNO UBIN(18) UNAL;
       63    11850    1   DCL LNKID UBIN(36);
       64    11851    1   DCL 1 ID REDEF LNKID,
       65    11852    1         2 N UBIN(18) UNAL,
       66    11853    1         2 SYSID UBIN(18) UNAL;
       67    11854    1   DCL CPFLAGS BIT(36);
       68    11855    1   DCL OLD_PCP UBIN HALF;
       69    11856    1   DCL SAVEJUNK BIT(18);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:72   
       70    11857    1   DCL PCODE UBIN(9);
       71    11858    1   DCL 1 VIRTUAL ALIGNED,
       72    11859    1         2 DCB#(0:2) UBIN(9) CALIGNED,
       73    11860    1         2 * UBIN(9) CALIGNED;
       74    11861        %FPT_WRITE (FPTN=FPT$WRITE, STCLASS=AUTO);
       75    11892        %FPT_PRECORD (FPTN=FPT$PREC, STCLASS=AUTO);
       76    11913        %FPT_READ (FPTN=FPT$READ, STCLASS=AUTO);
       77    11952
       78    11953                                                /* BASED Structures                   */
       79    11954    1   DCL B$PTR PTR BASED;
       80    11955    1   DCL B$CHAR3 CHAR(3) UNAL BASED;
       81    11956        %JL$HEAD;
       82    12041        %JL$TRAILER;
       83    12048        %JL$AMR_BUF;
       84    12068        %B_UHJIT (FPTN=B$UHJIT,STCLASS=BASED);
       85    13039        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
       86    13854        %B$ECCB;
       87    13862        %FPT_RESCTL (FPTN=FPT$RESCTL, STCLASS="BASED(TPTR$)");
       88    13879        %VLP_PSEUDO (FPTN=VLP$PS,STCLASS="BASED(LPTR$)",N=1);
       89    13895
       90    13896
       91    13897
       92    13898                                                /* Internal Data                      */
       93    13899        %FPT_WRITE (FPTN=FPT_WRITE, ONEWKEY=NO, NEWKEY=YES, STCLASS=CONSTANT);
       94    13930
       95    13931        %FPT_PRECORD (FPTN=FPT_PREC, KEYR=YES, STCLASS=CONSTANT);
       96    13952
       97    13953        %FPT_READ (FPTN=FPT_READ, KEYR=YES, STCLASS=CONSTANT);
       98    13992
       99    13993                                                /* External Data                      */
      100    13994    1   DCL M$LM DCB;
      101    13995
      102    13996    1   DCL B$JIT$ PTR SYMREF READONLY;
      103    13997    1   DCL B$M$STAR$ PTR SYMREF READONLY;
      104    13998    1   DCL B$M$LM$ PTR SYMREF READONLY;
      105    13999    1   DCL B$M$UC$ PTR SYMREF READONLY;
      106    14000    1   DCL B$USERIS$ PTR SYMREF READONLY;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:73   
      107    14001    1   DCL B$UPT$ PTR SYMREF READONLY;
      108    14002    1   DCL B$SBUF1$ PTR SYMREF READONLY;
      109    14003    1   DCL B$ASLLS$ PTR SYMREF READONLY;
      110    14004    1   DCL B$DBLS$ PTR SYMREF READONLY;
      111    14005    1   DCL B$USERLS$ PTR SYMREF READONLY;
      112    14006    1   DCL B$JITPG$ PTR SYMREF READONLY;
      113    14007    1   DCL B$USERHJIT$ PTR SYMREF READONLY;
      114    14008    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      115    14009    1   DCL B$SBUF2$ PTR SYMREF READONLY;
      116    14010    1   DCL B$LS$ PTR SYMREF READONLY;
      117    14011    1   DCL B$MISC2$ PTR SYMREF READONLY;
      118    14012    1   DCL S$CU$ PTR SYMREF;
      119    14013    1   DCL S_CUN UBIN SYMREF ;
      120    14014
      121    14015    1   DCL B$USRT$ PTR SYMREF;
      122    14016    1   DCL J_SYS$ PTR SYMREF READONLY;
      123    14017    1   DCL B$PS1$ PTR SYMREF READONLY;
      124    14018    1   DCL FR_SUNM(0:0) CHAR(8) SYMREF;
      125    14019
      126    14020        %FPT_CLOSE (FPTN=J_FPT_CL_REL, STCLASS=SYMREF);
      127    14062        %FPT_CLOSE (FPTN=J_FPT_CL_SAVE, STCLASS=SYMREF);
      128    14104        %FPT_PFIL (FPTN=J_FPT_PFIL, STCLASS=SYMREF);
      129    14119        %FPT_RESCTL (FPTN=J_FPT_RESCTL,STCLASS=SYMREF);
      130    14136        %VLR_SITEINFO(FPTN=B_SITEINFO,STCLASS=SYMREF);
      131    14155
      132    14156
      133    14157                                                /* External Procedures                */
      134    14158    1   DCL FMI$INIT ENTRY ALTRET;
      135    14159    1   DCL FMM$DFLOPN ENTRY;
      136    14160    1   DCL FMM$RELDCBI ENTRY;
      137    14161    1   DCL FMP$CLSJ ENTRY;
      138    14162    1   DCL HFF$TRAPALT ENTRY ALTRET;
      139    14163    1   DCL JLU$DELSET ENTRY(1);
      140    14164    1   DCL JLU$OPNSTARN ENTRY(1) ALTRET;
      141    14165    1   DCL JLU$RESTORE_AMR ENTRY ALTRET;
      142    14166    1   DCL JSA$ALIBDB ENTRY(1) ALTRET;
      143    14167    1   DCL JSA$DB ENTRY(1) ALTRET;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:74   
      144    14168    1   DCL JSA$FINDAUTO ENTRY(5) ALTRET;
      145    14169    1   DCL JSA$FINDSSP ENTRY(5) ALTRET;
      146    14170    1   DCL JSA$GETTCB ENTRY(1) ALTRET;
      147    14171    1   DCL JSA$RUNDSPC ENTRY(2);
      148    14172    1   DCL JSF$CLSUSRDCBS ENTRY;
      149    14173    1   DCL JSN$GETASR ENTRY(1);                /* Get current ASR                    */
      150    14174    1   DCL JSN$GETSSR ENTRY(1);                /* Get current SSR                    */
      151    14175    1   DCL JSN$SETASR ENTRY(1);                /* Load ASR                           */
      152    14176    1   DCL JSN$SETSSR ENTRY(1);                /* Load SSR                           */
      153    14177    1   DCL KIA$UCIOD ENTRY(4) ALTRET;
      154    14178    1   DCL MME$WFVP ENTRY(4) ALTRET;           /* Used to release spcl bufs          */
      155    14179    1   DCL MME$WGVP ENTRY(4) ALTRET;           /* Used to get spcl buffers           */
      156    14180    1   DCL MMH$GDS ENTRY(5) ALTRET;
      157    14181    1   DCL SSR$REG ENTRY(3) ALTRET;
      158    14182    1   DCL SSS$SYSTIME ENTRY(1);
      159    14183    1   DCL UMD$RSTRPRMPT ENTRY(1) ALTRET;
      160    14184    1   DCL UMD$SVPRMPT ENTRY(1) ALTRET;
      161    14185    1   DCL UQB$MDEQ ENTRY(1) ALTRET;
      162    14186
      163    14187    1   DCL M$MCLOSE ENTRY(1) ALTRET;
      164    14188    1   DCL M$MLIMIT ENTRY(1) ALTRET;
      165    14189    1   DCL M$MPFIL ENTRY(1) ALTRET;
      166    14190    1   DCL M$MPRECORD ENTRY(1) ALTRET;
      167    14191    1   DCL M$MREAD ENTRY(1) ALTRET;
      168    14192    1   DCL M$MWRITE ENTRY(1) ALTRET;
      169    14193
      170    14194    1   DCL SC_BADNF ENTRY CONV(2,0);
      171    14195    1   DCL SC_SYSIDNF ENTRY CONV(2,0);
      172    14196    1   DCL SC_INFONF ENTRY CONV(2,0);
      173    14197    1   DCL SC_LDLNK ENTRY CONV(2,0);
      174    14198    1   DCL SC_IOERRNF ENTRY CONV (2,0);
      175    14199
      176    14200
      177    14201        /* Macro invocations */
      178    14202        %TEXTC;
      179    14207        /* Set up an error code strucure initialized for this module */
      180    14208        %T01DESCR(NAME=B$DESCR);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:75   
      181    14216
      182    14217
      183    14218                                                /* EQUs and SUBs                      */
      184    14219        %KV_PRMID_E;
      185    14375
      186    14376        %LIST;
      187    14377        %INIT_RO_SIZE;                          /* Get 'INITROSIZE' from B$ROSEG      */
             14378        %SUB   INITROSIZE ="(POFFW(B$ROSEG$->B$ROSEG.DCBPTR$,B$ROSEG$)+%M$1STDCB#)";
      188    14380        %JL_SUBS;
             14381        %SUB   JL_HEADTYPE = 0;
             14382        %SUB   JL_JITTYPE = 1;
             14383        %SUB   JL_HJITTYPE = 3;
             14384        %SUB   JL_ROTYPE = 4;
             14385        %SUB   JL_DATATYPE = 5;
             14386        %SUB   JL_PROCTYPE = 6;
             14387        %SUB   JL_DYNDTYPE = 7;
             14388        %SUB   JL_UDS1TYPE = 8;
             14389        %SUB   JL_ATCBTYPE = 16;
             14390        %SUB   JL_DTCBTYPE = 17;
             14391        %SUB   JL_ADS1TYPE = 18;
             14392        %SUB   JL_DDS1TYPE = 26;
             14393        %SUB   JL_LIBTYPE = 34;
             14394        %SUB   JL_PGTBLTYPE = 40;
             14395        %SUB   JL_DOLSTTYPE = 50;
             14396        %SUB   JL_AMRTYPE=510;
             14397        %SUB   JL_TRLRTYPE = 511;
             14398        %SUB   JL_HEADSIZE ="SIZEC(JL$HEAD)";
             14399        %SUB   JL_TRLRSIZE ="SIZEC(JL$TRAILER)";
             14400        %SUB   JL_FULLPAGE = 4096;
      189    14402        %PLIST;
      190    14403
      191    14404        %SUB JL$HEAD=B$SBUF1$->JL$HEAD;
      192    14405        %SUB JL$TRAILER=B$SBUF1$->JL$TRAILER;
      193    14406        %SUB JL$AMR_BUF=B$SBUF2$->JL$AMR_BUF;
      194    14407        %SUB B$JIT=B$JIT$->B$JIT;
      195    14408        %SUB B$OLDJIT=B$SBUF2$->B$JIT;
      196    14409        %SUB B$PT=B$UPT$->B$MAP;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:76   
      197    14410        %SUB B$OLDPT=B$SBUF2$->B$MAP;
      198    14411        %SUB B$HJIT=B$USERHJIT$->B$UHJIT;
      199    14412        %SUB B$OLDHJIT=B$SBUF2$->B$UHJIT;
      200    14413        %SUB B$ROSEG=B$ROSEG$->B$ROSEG;
      201    14414        %SUB B$OLDROSEG=B$SBUF2$->B$ROSEG;
      202    14415        %SUB B$CLROSEG=B$SBUF1$->B$ROSEG;
      203    14416        %SUB B$U=S$CU$->B$U;
      204    14417        %SUB M$LMDCB=LM$->F$DCB;
      205    14418        %SUB M$UC = M$UC$->F$DCB;
      206    14419        %SUB B$P=B$P$->B$P;
      207    14420        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:77   
      208    14421
      209    14422        /*************************************************************
      210    14423         *                                                           *
      211    14424         *                     JLS$SAVE_IMAGE                        *
      212    14425         *                                                           *
      213    14426         *************************************************************/
      214    14427
      215    14428        /*F*   NAME:   JLS$SAVE_IMAGE
      216    14429               PURPOSE: To write the program image file to M$* for either
      217    14430                       Load-and-Link or Save/Get.
      218    14431        */
      219    14432
      220    14433        /* Initialize key for writing M$*
      221    14434        */
      222    14435    1      KEY.CNT = 6;                         /* Length is always 6 bytes           */

  14435  3 000002   006000 236003                    LDQ     3072,DU
         3 000003   200026 552140                    STBQ    KEY,'40'O,AUTO

      223    14436    1      KEY.ID = IDN;

  14436  3 000004   200003 470500                    LDP0    @IDN,,AUTO
         3 000005   000000 236100                    LDQ     0,,PR0
         3 000006   200026 552134                    STBQ    KEY,'34'O,AUTO

      224    14437    1      LM$ = B$M$LM$;

  14437  3 000007   000000 236000 xsym               LDQ     B$M$LM$
         3 000010   200011 756100                    STQ     LM$,,AUTO

      225    14438
      226    14439        /* Build up the header record in sbuf1. This record contains all
      227    14440           of the information necessary for JLS$GET_IMAGE to properly restore
      228    14441           the saved user program.
      229    14442        */
      230    14443    1      JL$HEAD ='0'B;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:78   
  14443  3 000011   000000 471400 xsym               LDP1    B$SBUF1$
         3 000012   000100 100400                    MLR     fill='000'O
         3 000013   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000014   100000 001775                    ADSC9   0,,PR1                   cn=0,n=1021

      231    14444    1      JL$HEAD.IDN = IDN;

  14444  3 000015   000000 236100                    LDQ     0,,PR0
         3 000016   100000 552134                    STBQ    0,'34'O,PR1

      232    14445
      233    14446        /* Get UTS and save it in header of idn record set */
      234    14447    1      CALL SSS$SYSTIME(DTS);

  14447  3 000017   200017 633500                    EPPR3   DTS,,AUTO
         3 000020   200114 453500                    STP3    @ARS+1,,AUTO
         3 000021   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 000022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000023   000000 701000 xent               TSX1    SSS$SYSTIME
         3 000024   000000 011000                    NOP     0

      235    14448    1      JL$HEAD.DTS = DTS;

  14448  3 000025   000000 470400 xsym               LDP0    B$SBUF1$
         3 000026   200017 235100                    LDA     DTS,,AUTO
         3 000027   000001 755100                    STA     1,,PR0

      236    14449
      237    14450        /* Count up the # of cvm-ed PAGES.
      238    14451        */
      239    14452    1      N = 0;

  14452  3 000030   200014 450100                    STZ     N,,AUTO

      240    14453    2      DO I = B$JIT.TDP TO B$JIT.EUP;

  14453  3 000031   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:79   
         3 000032   100204 236100                    LDQ     132,,PR1
         3 000033   000022 772000                    QRL     18
         3 000034   200012 756100                    STQ     I,,AUTO
         3 000035   000047 710000 3                  TRA     s:14455+1

      241    14454    2           IF B$PT.SCTRL(I) & %SCCVM THEN N = N + 1;

  14454  3 000036   000000 470400 xsym               LDP0    B$UPT$
         3 000037   200012 720100                    LXL0    I,,AUTO
         3 000040   000000 236110                    LDQ     0,X0,PR0
         3 000041   000022 736000                    QLS     18
         3 000042   777400 376003                    ANQ     -256,DU
         3 000043   001000 376003                    ANQ     512,DU
         3 000044   000046 600000 3                  TZE     s:14455

  14454  3 000045   200014 054100                    AOS     N,,AUTO

      242    14455    2           END;

  14455  3 000046   200012 054100                    AOS     I,,AUTO
         3 000047   000000 470400 xsym               LDP0    B$JIT$
         3 000050   000204 236100                    LDQ     132,,PR0
         3 000051   777777 376007                    ANQ     -1,DL
         3 000052   200012 116100                    CMPQ    I,,AUTO
         3 000053   000036 605000 3                  TPL     s:14454

      243    14456    1      JL$HEAD.CVMPGS = N;

  14456  3 000054   000000 471400 xsym               LDP1    B$SBUF1$
         3 000055   200014 236100                    LDQ     N,,AUTO
         3 000056   000033 736000                    QLS     27
         3 000057   100000 552140                    STBQ    0,'40'O,PR1

      244    14457
      245    14458        /* Save current SSR and ASR values.
      246    14459        */
      247    14460    1      CALL JSN$GETSSR(JL$HEAD.SSR);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:80   

  14460  3 000060   000000 236000 xsym               LDQ     B$SBUF1$
         3 000061   000002 036003                    ADLQ    2,DU
         3 000062   200114 756100                    STQ     @ARS+1,,AUTO
         3 000063   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 000064   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000065   000000 701000 xent               TSX1    JSN$GETSSR
         3 000066   000000 011000                    NOP     0

      248    14461    1      CALL JSN$GETASR(JL$HEAD.ASR);

  14461  3 000067   000000 236000 xsym               LDQ     B$SBUF1$
         3 000070   000004 036003                    ADLQ    4,DU
         3 000071   200114 756100                    STQ     @ARS+1,,AUTO
         3 000072   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 000073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000074   000000 701000 xent               TSX1    JSN$GETASR
         3 000075   000000 011000                    NOP     0

      249    14462
      250    14463        /* Save current user flags and all associated processor numbers
      251    14464           which might need to be re-established upon return.
      252    14465        */
      253    14466    1      JL$HEAD.FLG = B$U.FLG;

  14466  3 000076   000000 470400 xsym               LDP0    S$CU$
         3 000077   000000 236100                    LDQ     0,,PR0
         3 000100   000000 471400 xsym               LDP1    B$SBUF1$
         3 000101   100006 756100                    STQ     6,,PR1

      254    14467    1      JL$HEAD.ASL = B$U.ASL;

  14467  3 000102   000006 236100                    LDQ     6,,PR0
         3 000103   000036 736000                    QLS     30
         3 000104   100007 752140                    STCQ    7,'40'O,PR1

      255    14468    1      JL$HEAD.APR = B$U.APR;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:81   

  14468  3 000105   000007 236100                    LDQ     7,,PR0
         3 000106   000006 772000                    QRL     6
         3 000107   100007 752130                    STCQ    7,'30'O,PR1

      256    14469    1      JL$HEAD.APO = B$U.APO;

  14469  3 000110   000007 236100                    LDQ     7,,PR0
         3 000111   000006 772000                    QRL     6
         3 000112   100007 752106                    STCQ    7,'06'O,PR1

      257    14470    1      JL$HEAD.LIB = B$U.ASP;

  14470  3 000113   000007 236100                    LDQ     7,,PR0
         3 000114   000006 772000                    QRL     6
         3 000115   100007 752101                    STCQ    7,'01'O,PR1

      258    14471    1      JL$HEAD.ACP = B$U.ACP;

  14471  3 000116   000006 236100                    LDQ     6,,PR0
         3 000117   000011 736000                    QLS     9
         3 000120   100010 552140                    STBQ    8,'40'O,PR1

      259    14472    1      JL$HEAD.DB = B$U.DB;

  14472  3 000121   000006 236100                    LDQ     6,,PR0
         3 000122   000011 736000                    QLS     9
         3 000123   100010 552120                    STBQ    8,'20'O,PR1

      260    14473    1      JL$HEAD.ASYNCH_FLG = B$U.ASYNCH;

  14473  3 000124   000001 236100                    LDQ     1,,PR0
         3 000125   100146 756100                    STQ     102,,PR1

      261    14474    1      B$U.ASYNCH = B$U.ASYNCH & %U_RESET;

  14474  3 000126   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:82   
         3 000127   000003 376000 xsym               ANQ     B_VECTNIL+3
         3 000130   000001 756100                    STQ     1,,PR0

      262    14475
      263    14476        /* Save names of associated processors for M$SAVE.
      264    14477        */
      265    14478    1      JL$HEAD.APRNAME = B$P.NAME(B$U.APR);

  14478  3 000131   000007 236100                    LDQ     7,,PR0
         3 000132   000030 772000                    QRL     24
         3 000133   000021 402007                    MPY     17,DL
         3 000134   000003 736000                    QLS     3
         3 000135   000000 473400 xsym               LDP3    B$P$
         3 000136   000100 100506                    MLR     fill='000'O
         3 000137   300032 000040                    ADSC9   26,Q,PR3                 cn=0,n=32
         3 000140   100057 000040                    ADSC9   47,,PR1                  cn=0,n=32

      266    14479    1      JL$HEAD.APONAME = B$P.NAME(B$U.APO);

  14479  3 000141   000007 236100                    LDQ     7,,PR0
         3 000142   000014 772000                    QRL     12
         3 000143   007777 376007                    ANQ     4095,DL
         3 000144   000021 402007                    MPY     17,DL
         3 000145   000003 736000                    QLS     3
         3 000146   000100 100506                    MLR     fill='000'O
         3 000147   300032 000040                    ADSC9   26,Q,PR3                 cn=0,n=32
         3 000150   100067 000040                    ADSC9   55,,PR1                  cn=0,n=32

      267    14480    1      JL$HEAD.LIBNAME = B$P.NAME(B$U.ASP);

  14480  3 000151   000007 236100                    LDQ     7,,PR0
         3 000152   000006 772000                    QRL     6
         3 000153   000077 376007                    ANQ     63,DL
         3 000154   000021 402007                    MPY     17,DL
         3 000155   000003 736000                    QLS     3
         3 000156   000100 100506                    MLR     fill='000'O
         3 000157   300032 000040                    ADSC9   26,Q,PR3                 cn=0,n=32
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:83   
         3 000160   100077 000040                    ADSC9   63,,PR1                  cn=0,n=32

      268    14481    1      JL$HEAD.CPNAME = B$P.NAME(B$U.ACP);

  14481  3 000161   000006 236100                    LDQ     6,,PR0
         3 000162   000022 772000                    QRL     18
         3 000163   000777 376007                    ANQ     511,DL
         3 000164   000021 402007                    MPY     17,DL
         3 000165   000003 736000                    QLS     3
         3 000166   000100 100506                    MLR     fill='000'O
         3 000167   300032 000040                    ADSC9   26,Q,PR3                 cn=0,n=32
         3 000170   100107 000040                    ADSC9   71,,PR1                  cn=0,n=32

      269    14482    1      JL$HEAD.DBNAME = B$P.NAME(B$U.DB);

  14482  3 000171   000006 236100                    LDQ     6,,PR0
         3 000172   000011 772000                    QRL     9
         3 000173   000777 376007                    ANQ     511,DL
         3 000174   000021 402007                    MPY     17,DL
         3 000175   000003 736000                    QLS     3
         3 000176   000100 100506                    MLR     fill='000'O
         3 000177   300032 000040                    ADSC9   26,Q,PR3                 cn=0,n=32
         3 000200   100117 000040                    ADSC9   79,,PR1                  cn=0,n=32

      270    14483
      271    14484        /* Here we will save the UTS stamp from all associated
      272    14485           processors so we can tell if a 'GET' will work by checking the
      273    14486           time stamps against those of the currently installed procs.
      274    14487        */
      275    14488    1      JL$HEAD.APR_UTS = M$LMDCB.EXPIRE;

  14488  3 000201   200011 474500                    LDP4    LM$,,AUTO
         3 000202   400035 235100                    LDA     29,,PR4
         3 000203   100011 755100                    STA     9,,PR1

      276    14489    1      JL$HEAD.LIB_UTS = B$P.CRDATE(B$U.ASP);

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:84   
  14489  3 000204   000007 236100                    LDQ     7,,PR0
         3 000205   000006 772000                    QRL     6
         3 000206   000077 376007                    ANQ     63,DL
         3 000207   000021 402007                    MPY     17,DL
         3 000210   000001 736000                    QLS     1
         3 000211   300004 235106                    LDA     4,QL,PR3
         3 000212   100012 755100                    STA     10,,PR1

      277    14490    1      JL$HEAD.DB_UTS = B$P.CRDATE(B$U.DB);

  14490  3 000213   000006 236100                    LDQ     6,,PR0
         3 000214   000011 772000                    QRL     9
         3 000215   000777 376007                    ANQ     511,DL
         3 000216   000021 402007                    MPY     17,DL
         3 000217   000001 736000                    QLS     1
         3 000220   300004 235106                    LDA     4,QL,PR3
         3 000221   100013 755100                    STA     11,,PR1

      278    14491
      279    14492        /* Save the first character of the current system version.
      280    14493        */
      281    14494    1      TPTR$ = ADDR(B_SITEINFO.VERSION#);

  14494  3 000222   000000 236000 4                  LDQ     0
         3 000223   200010 756100                    STQ     TPTR$,,AUTO

      282    14495    1      JL$HEAD.SYSVERS = TPTR$->B$CHAR3;

  14495  3 000224   200010 475500                    LDP5    TPTR$,,AUTO
         3 000225   040100 100500                    MLR     fill='040'O
         3 000226   500000 000003                    ADSC9   0,,PR5                   cn=0,n=3
         3 000227   100014 000004                    ADSC9   12,,PR1                  cn=0,n=4

      283    14496
      284    14497        /* Save the virtual memory delimiters from the JIT.
      285    14498        */
      286    14499    1      JL$HEAD.DPGS = B$JIT.PCD;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:85   

  14499  3 000230   000000 476400 xsym               LDP6    B$JIT$
         3 000231   600201 236100                    LDQ     129,,PR6
         3 000232   000033 736000                    QLS     27
         3 000233   100015 552140                    STBQ    13,'40'O,PR1

      287    14500    1      JL$HEAD.PPGS = B$JIT.PCP;

  14500  3 000234   600201 236100                    LDQ     129,,PR6
         3 000235   100015 552120                    STBQ    13,'20'O,PR1

      288    14501    1      JL$HEAD.DDPGS = B$JIT.PCDD;

  14501  3 000236   600203 236100                    LDQ     131,,PR6
         3 000237   000011 736000                    QLS     9
         3 000240   100015 552110                    STBQ    13,'10'O,PR1

      289    14502    1      JL$HEAD.ROPGS = B$JIT.PCROS;

  14502  3 000241   600203 236100                    LDQ     131,,PR6
         3 000242   000022 772000                    QRL     18
         3 000243   100015 552104                    STBQ    13,'04'O,PR1

      290    14503    1      JL$HEAD.LIBPGS = B$JIT.PCL;

  14503  3 000244   600215 236100                    LDQ     141,,PR6
         3 000245   000011 736000                    QLS     9
         3 000246   100010 552110                    STBQ    8,'10'O,PR1

      291    14504    1      JL$HEAD.DOLST_RECS = 0;

  14504  3 000247   000000 236003                    LDQ     0,DU
         3 000250   100010 552104                    STBQ    8,'04'O,PR1

      292    14505
      293    14506        /* Get the # of words in each user, ASL or DB data segment.
      294    14507        */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:86   
      295    14508    1      SID = BITBIN (%DS1SID&'1777'O);

  14508  3 000251   000004 235007                    LDA     4,DL
         3 000252   200016 755100                    STA     SID,,AUTO

      296    14509    2      DO I = 0 TO 7;

  14509  3 000253   200012 450100                    STZ     I,,AUTO

      297    14510    2           IF (B$USERLS$->MM$DESC.FLGS(SID) & %DSSHARED)

  14510  3 000254   200016 235100                    LDA     SID,,AUTO
         3 000255   000001 735000                    ALS     1
         3 000256   000000 470400 xsym               LDP0    B$USERLS$
         3 000257   000000 236105                    LDQ     0,AL,PR0
         3 000260   000024 736000                    QLS     20
         3 000261   777000 376003                    ANQ     -512,DU
         3 000262   020000 376003                    ANQ     8192,DU
         3 000263   000270 600000 3                  TZE     s:14512

      298    14511    2           THEN JL$HEAD.UDS(I) = 0;

  14511  3 000264   000000 471400 xsym               LDP1    B$SBUF1$
         3 000265   200012 720100                    LXL0    I,,AUTO
         3 000266   100016 450110                    STZ     14,X0,PR1
         3 000267   000277 710000 3                  TRA     s:14513

      299    14512    2           ELSE JL$HEAD.UDS(I) = (B$USERLS$ -> MM$DESC.BOUND(SID) + 1)/4;

  14512  3 000270   000000 236105                    LDQ     0,AL,PR0
         3 000271   000020 772000                    QRL     16
         3 000272   000001 036007                    ADLQ    1,DL
         3 000273   000002 772000                    QRL     2
         3 000274   000000 471400 xsym               LDP1    B$SBUF1$
         3 000275   200012 720100                    LXL0    I,,AUTO
         3 000276   100016 756110                    STQ     14,X0,PR1

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:87   
      300    14513    2           IF (B$ASLLS$->MM$DESC.FLGS(SID) & %DSSHARED)

  14513  3 000277   200016 235100                    LDA     SID,,AUTO
         3 000300   000001 735000                    ALS     1
         3 000301   000000 473400 xsym               LDP3    B$ASLLS$
         3 000302   300000 236105                    LDQ     0,AL,PR3
         3 000303   000024 736000                    QLS     20
         3 000304   777000 376003                    ANQ     -512,DU
         3 000305   020000 376003                    ANQ     8192,DU
         3 000306   000312 600000 3                  TZE     s:14515

      301    14514    2           THEN JL$HEAD.ASLDS(I) = 0;

  14514  3 000307   200012 720100                    LXL0    I,,AUTO
         3 000310   100026 450110                    STZ     22,X0,PR1
         3 000311   000320 710000 3                  TRA     s:14516

      302    14515    2           ELSE JL$HEAD.ASLDS(I) = (B$ASLLS$ -> MM$DESC.BOUND(SID) + 1)/4;

  14515  3 000312   300000 236105                    LDQ     0,AL,PR3
         3 000313   000020 772000                    QRL     16
         3 000314   000001 036007                    ADLQ    1,DL
         3 000315   000002 772000                    QRL     2
         3 000316   200012 720100                    LXL0    I,,AUTO
         3 000317   100026 756110                    STQ     22,X0,PR1

      303    14516    2           IF (B$DBLS$->MM$DESC.FLGS(SID) & %DSSHARED)

  14516  3 000320   200016 235100                    LDA     SID,,AUTO
         3 000321   000001 735000                    ALS     1
         3 000322   000000 474400 xsym               LDP4    B$DBLS$
         3 000323   400000 236105                    LDQ     0,AL,PR4
         3 000324   000024 736000                    QLS     20
         3 000325   777000 376003                    ANQ     -512,DU
         3 000326   020000 376003                    ANQ     8192,DU
         3 000327   000333 600000 3                  TZE     s:14518

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:88   
      304    14517    2           THEN JL$HEAD.DBDS(I) = 0;

  14517  3 000330   200012 720100                    LXL0    I,,AUTO
         3 000331   100036 450110                    STZ     30,X0,PR1
         3 000332   000341 710000 3                  TRA     s:14519

      305    14518    2           ELSE JL$HEAD.DBDS(I) = (B$DBLS$ -> MM$DESC.BOUND(SID) + 1)/4;

  14518  3 000333   400000 236105                    LDQ     0,AL,PR4
         3 000334   000020 772000                    QRL     16
         3 000335   000001 036007                    ADLQ    1,DL
         3 000336   000002 772000                    QRL     2
         3 000337   200012 720100                    LXL0    I,,AUTO
         3 000340   100036 756110                    STQ     30,X0,PR1

      306    14519    2           SID = SID+1;

  14519  3 000341   200016 054100                    AOS     SID,,AUTO

      307    14520    2           END;

  14520  3 000342   200012 054100                    AOS     I,,AUTO
         3 000343   200012 235100                    LDA     I,,AUTO
         3 000344   000007 115007                    CMPA    7,DL
         3 000345   000254 604400 3                  TMOZ    s:14510

      308    14521
      309    14522        /* Get bounds of ASL & DELTA TCB's.
      310    14523        */
      311    14524    1      JL$HEAD.ASLTCB = B$ASLLS$->MM$DESC.BOUND(BITBIN(%TCBSID & '1777'O));

  14524  3 000346   300036 236100                    LDQ     30,,PR3
         3 000347   000020 772000                    QRL     16
         3 000350   000000 620006                    EAX0    0,QL
         3 000351   100046 740100                    STX0    38,,PR1

      312    14525    1      JL$HEAD.DBTCB = B$DBLS$->MM$DESC.BOUND(BITBIN(%TCBSID & '1777'O));
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:89   

  14525  3 000352   400036 236100                    LDQ     30,,PR4
         3 000353   000020 772000                    QRL     16
         3 000354   000000 621006                    EAX1    0,QL
         3 000355   100046 441100                    SXL1    38,,PR1

      313    14526
      314    14527        /* Set user's common seg size to 0 if doing M$LINK so we won't save it.
      315    14528        */
      316    14529    1      IF (B$JIT.JUNK & %JJ_MLINKIP#) THEN JL$HEAD.UDS(1) = 0;

  14529  3 000356   000000 475400 xsym               LDP5    B$JIT$
         3 000357   500315 222100                    LDX2    205,,PR5
         3 000360   000001 362003                    ANX2    1,DU
         3 000361   000363 600000 3                  TZE     s:14533

  14529  3 000362   100017 450100                    STZ     15,,PR1

      317    14530
      318    14531        /* Move the size of the assign/merge record to the header record.
      319    14532        */
      320    14533    1      JL$HEAD.AMR_SIZE = JL$AMR_BUF.AMR_SIZE;

  14533  3 000363   000000 476400 xsym               LDP6    B$SBUF2$
         3 000364   600000 235100                    LDA     0,,PR6
         3 000365   100145 755100                    STA     101,,PR1

      321    14534
      322    14535        /* If this is the monitor doing the link, save the address of
      323    14536           the clean-up routine.
      324    14537        */
      325    14538    1      IF (B$JIT.JUNK & %JJ_MONLINK#)

  14538  3 000366   500315 222100                    LDX2    205,,PR5
         3 000367   000020 362003                    ANX2    16,DU
         3 000370   000375 600000 3                  TZE     s:14540

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:90   
      326    14539    1      THEN JL$HEAD.CLEANUP$ = CLEANUP$;

  14539  3 000371   200005 477500                    LDP7    @CLEANUP$,,AUTO
         3 000372   700000 236100                    LDQ     0,,PR7
         3 000373   100147 756100                    STQ     103,,PR1
         3 000374   000377 710000 3                  TRA     s:14544

      327    14540    1      ELSE JL$HEAD.CLEANUP$ = ENTADDR(NIL);

  14540  3 000375   000002 236000 xsym               LDQ     B_VECTNIL+2
         3 000376   100147 756100                    STQ     103,,PR1

      328    14541
      329    14542        /* Finally, save M$LM and assign/merge assignment information.
      330    14543        */
      331    14544    1      JL$HEAD.LMNAME = M$LMDCB.NAME;

  14544  3 000377   200011 477500                    LDP7    LM$,,AUTO
         3 000400   000100 100500                    MLR     fill='000'O
         3 000401   700010 000040                    ADSC9   8,,PR7                   cn=0,n=32
         3 000402   100127 000040                    ADSC9   87,,PR1                  cn=0,n=32

      332    14545    1      JL$HEAD.LMACCT = M$LMDCB.ACCT;

  14545  3 000403   700020 237100                    LDAQ    16,,PR7
         3 000404   100137 755100                    STA     95,,PR1
         3 000405   100140 756100                    STQ     96,,PR1

      333    14546    1      JL$HEAD.LMPASS.C = M$LMDCB.PASS;

  14546  3 000406   700022 237100                    LDAQ    18,,PR7
         3 000407   100141 755100                    STA     97,,PR1
         3 000410   100142 756100                    STQ     98,,PR1

      334    14547    1      JL$HEAD.LMPSN = M$LMDCB.PSN;

  14547  3 000411   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:91   
         3 000412   700024 000006                    ADSC9   20,,PR7                  cn=0,n=6
         3 000413   100143 000006                    ADSC9   99,,PR1                  cn=0,n=6

      335    14548
      336    14549        /* Save the terminal info so we can re-establish it on 'GET' or
      337    14550           M$LINK return.
      338    14551        */
      339    14552    1      M$UC$ = B$M$UC$;

  14552  3 000414   000000 236000 xsym               LDQ     B$M$UC$
         3 000415   200007 756100                    STQ     M$UC$,,AUTO

      340    14553    1      IF (B$JIT.MODE = %M_INT#) AND (M$UC.ASN = %DEVICE#)

  14553  3 000416   500000 236100                    LDQ     0,,PR5
         3 000417   740000 376003                    ANQ     -16384,DU
         3 000420   140000 116003                    CMPQ    49152,DU
         3 000421   000521 601000 3                  TNZ     s:14575
         3 000422   200007 470500                    LDP0    M$UC$,,AUTO
         3 000423   000032 236100                    LDQ     26,,PR0
         3 000424   777000 376007                    ANQ     -512,DL
         3 000425   003000 116007                    CMPQ    1536,DL
         3 000426   000521 601000 3                  TNZ     s:14575
         3 000427   040000 106500                    CMPC    fill='040'O
         3 000430   000026 000004                    ADSC9   22,,PR0                  cn=0,n=4
         3 000431   000044 000002 1                  ADSC9   FPT_READ+14              cn=0,n=2
         3 000432   000521 601000 3                  TNZ     s:14575
         3 000433   500314 236100                    LDQ     204,,PR5
         3 000434   777000 376003                    ANQ     -512,DU
         3 000435   200000 376003                    ANQ     65536,DU
         3 000436   000521 601000 3                  TNZ     s:14575

      341    14554    1        AND M$UC.RES = 'UC'
      342    14555    1        AND (B$JIT.RNST & %RS_DROP#)='000'O
      343    14556    2      THEN DO;

      344    14557    2           M$UC.UB$ = ADDR(JL$HEAD.TERM_INFO);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:92   

  14557  3 000437   000000 236000 xsym               LDQ     B$SBUF1$
         3 000440   000001 036000 4                  ADLQ    1
         3 000441   000075 756100                    STQ     61,,PR0

      345    14558    2           M$UC.UBYTES = LENGTHC(JL$HEAD.TERM_INFO);

  14558  3 000442   000760 235007                    LDA     496,DL
         3 000443   000076 755100                    STA     62,,PR0

      346    14559    2           M$UC.WAIT = 1;

  14559  3 000444   000020 236007                    LDQ     16,DL
         3 000445   000064 256100                    ORSQ    52,,PR0

      347    14560    2           B$JIT.DCB$ = M$UC$;

  14560  3 000446   200007 236100                    LDQ     M$UC$,,AUTO
         3 000447   500232 756100                    STQ     154,,PR5

      348    14561    2           PCODE = %KV_PRMID_SAVGET;

  14561  3 000450   002000 236003                    LDQ     1024,DU
         3 000451   200034 756100                    STQ     PCODE,,AUTO

      349    14562    2           CPFLAGS = B$JIT.CPFLAGS1;

  14562  3 000452   500143 236100                    LDQ     99,,PR5
         3 000453   200031 756100                    STQ     CPFLAGS,,AUTO

      350    14563    2           IF B$JIT.CPFLAGS1 & %CP_DRIBBLE#

  14563  3 000454   000045 376000 1                  ANQ     FPT_READ+15
         3 000455   000465 600000 3                  TZE     s:14565

      351    14564    2           THEN CALL UMD$SVPRMPT (JL$HEAD.UD$PRMPT);

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:93   
  14564  3 000456   000000 236000 xsym               LDQ     B$SBUF1$
         3 000457   000150 036003                    ADLQ    104,DU
         3 000460   200114 756100                    STQ     @ARS+1,,AUTO
         3 000461   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 000462   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000463   000000 701000 xent               TSX1    UMD$SVPRMPT
         3 000464   000000 011000                    NOP     0

      352    14565    2           B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 &~ %CP_DRIBBLE#);

  14565  3 000465   000045 236000 1                  LDQ     FPT_READ+15
         3 000466   000027 676000 xsym               ERQ     B_VECTNIL+23
         3 000467   000000 470400 xsym               LDP0    B$JIT$
         3 000470   000143 376100                    ANQ     99,,PR0
         3 000471   000143 756100                    STQ     99,,PR0

      353    14566    2           CALL KIA$UCIOD(MFC_RSTAT,0,PCODE,0)

  14566  3 000472   000002 236000 4                  LDQ     2
         3 000473   200117 756100                    STQ     @ARS+4,,AUTO
         3 000474   200034 631500                    EPPR1   PCODE,,AUTO
         3 000475   200116 451500                    STP1    @ARS+3,,AUTO
         3 000476   000004 237000 4                  LDAQ    4
         3 000477   200114 757100                    STAQ    @ARS+1,,AUTO
         3 000500   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 000501   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000502   000000 701000 xent               TSX1    KIA$UCIOD
         3 000503   000512 702000 3                  TSX2    s:14571

      354    14567    3           WHENRETURN DO;

      355    14568    3                JL$HEAD.INFO_SIZE = M$UC.ARS;

  14568  3 000504   000000 470400 xsym               LDP0    B$SBUF1$
         3 000505   200007 471500                    LDP1    M$UC$,,AUTO
         3 000506   100000 236100                    LDQ     0,,PR1
         3 000507   000033 736000                    QLS     27
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:94   
         3 000510   000203 552140                    STBQ    131,'40'O,PR0

      356    14569    3                END;

  14569  3 000511   000515 710000 3                  TRA     s:14573

      357    14570    3           WHENALTRETURN DO;

      358    14571    3                JL$HEAD.INFO_SIZE = 0;

  14571  3 000512   000000 470400 xsym               LDP0    B$SBUF1$
         3 000513   000000 236003                    LDQ     0,DU
         3 000514   000203 552140                    STBQ    131,'40'O,PR0

      359    14572    3                END;

      360    14573    2           B$JIT.CPFLAGS1 = CPFLAGS;

  14573  3 000515   200031 236100                    LDQ     CPFLAGS,,AUTO
         3 000516   000000 471400 xsym               LDP1    B$JIT$
         3 000517   100143 756100                    STQ     99,,PR1

      361    14574    2           END;

  14574  3 000520   000523 710000 3                  TRA     s:14579

      362    14575    1      ELSE JL$HEAD.INFO_SIZE = 0;

  14575  3 000521   000000 236003                    LDQ     0,DU
         3 000522   100203 552140                    STBQ    131,'40'O,PR1

      363    14576        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:95   
      364    14577        /* Initialize a copy of the write fpt in automatic storage.
      365    14578        */
      366    14579    1      RECCNT = 0;

  14579  3 000523   200025 450100                    STZ     RECCNT,,AUTO

      367    14580    1      FPT$WRITE = FPT_WRITE;

  14580  3 000524   000100 100400                    MLR     fill='000'O
         3 000525   000000 000060 1                  ADSC9   FPT_WRITE                cn=0,n=48
         3 000526   200036 000060                    ADSC9   FPT$WRITE,,AUTO          cn=0,n=48

      368    14581    1      FPT$WRITE.V_   = VECTOR(FPT$WRITE.V);

  14581  3 000527   000006 235000 4                  LDA     6
         3 000530   200114 452500                    STP2    @ARS+1,,AUTO
         3 000531   200114 236100                    LDQ     @ARS+1,,AUTO
         3 000532   000046 036003                    ADLQ    38,DU
         3 000533   200036 757100                    STAQ    FPT$WRITE,,AUTO

      369    14582    1      FPT$WRITE.KEY_   = VECTOR(KEY);

  14582  3 000534   000007 235000 4                  LDA     7
         3 000535   200114 452500                    STP2    @ARS+1,,AUTO
         3 000536   200114 236100                    LDQ     @ARS+1,,AUTO
         3 000537   000026 036003                    ADLQ    22,DU
         3 000540   200040 757100                    STAQ    FPT$WRITE+2,,AUTO

      370    14583    1      FPT$WRITE.V.DCB# = %M$STAR#;

  14583  3 000541   000001 220003                    LDX0    1,DU
         3 000542   200046 740100                    STX0    FPT$WRITE+8,,AUTO

      371    14584
      372    14585        /* Write the header, the JIT page, and the HJIT.
      373    14586        */
      374    14587    1      FPT$WRITE.BUF_.BUF$ = B$SBUF1$;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:96   

  14587  3 000543   000000 236000 xsym               LDQ     B$SBUF1$
         3 000544   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      375    14588    1      CALL WRITE_STAR(JL_HEADSIZE,JL_HEADTYPE,0)  ALTRET(SAVE_ERR);

  14588  3 000545   000002 237000 4                  LDAQ    2
         3 000546   200112 757100                    STAQ    @BUFSIZE+1,,AUTO
         3 000547   000011 236000 4                  LDQ     9
         3 000550   200111 756100                    STQ     TMP+3,,AUTO
         3 000551   006344 701000 3                  TSX1    WRITE_STAR
         3 000552   001256 702000 3                  TSX2    SAVE_ERR

      376    14589
      377    14590    1      FPT$WRITE.BUF_.BUF$ = B$JITPG$;

  14590  3 000553   000000 236000 xsym               LDQ     B$JITPG$
         3 000554   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      378    14591    1      CALL WRITE_STAR(JL_FULLPAGE,JL_JITTYPE,%JITPG)  ALTRET(SAVE_ERR);

  14591  3 000555   000014 237000 4                  LDAQ    12
         3 000556   200112 757100                    STAQ    @BUFSIZE+1,,AUTO
         3 000557   000013 236000 4                  LDQ     11
         3 000560   200111 756100                    STQ     TMP+3,,AUTO
         3 000561   006344 701000 3                  TSX1    WRITE_STAR
         3 000562   001256 702000 3                  TSX2    SAVE_ERR

      379    14592
      380    14593    1      FPT$WRITE.BUF_.BUF$ = B$USERHJIT$;

  14593  3 000563   000000 236000 xsym               LDQ     B$USERHJIT$
         3 000564   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      381    14594    1      CALL WRITE_STAR(JL_FULLPAGE,JL_HJITTYPE,%HJITPG)  ALTRET(SAVE_ERR);

  14594  3 000565   000020 237000 4                  LDAQ    16
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:97   
         3 000566   200112 757100                    STAQ    @BUFSIZE+1,,AUTO
         3 000567   000013 236000 4                  LDQ     11
         3 000570   200111 756100                    STQ     TMP+3,,AUTO
         3 000571   006344 701000 3                  TSX1    WRITE_STAR
         3 000572   001256 702000 3                  TSX2    SAVE_ERR

      382    14595
      383    14596        /* Write out the read-only segment.
      384    14597        */
      385    14598    1      FPT$WRITE.BUF_.BUF$ = B$ROSEG$;

  14598  3 000573   000000 236000 xsym               LDQ     B$ROSEG$
         3 000574   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      386    14599    2      DO I = %ROSEGLO TO (%ROSEGLO + B$JIT.PCROS - 1);

  14599  3 000575   000057 235007                    LDA     47,DL
         3 000576   200012 755100                    STA     I,,AUTO
         3 000577   000611 710000 3                  TRA     s:14601+1

      387    14600    2           CALL WRITE_STAR(JL_FULLPAGE,JL_ROTYPE,I) ALTRET(SAVE_ERR);

  14600  3 000600   200012 630500                    EPPR0   I,,AUTO
         3 000601   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 000602   000017 236000 4                  LDQ     15
         3 000603   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 000604   000013 236000 4                  LDQ     11
         3 000605   200111 756100                    STQ     TMP+3,,AUTO
         3 000606   006344 701000 3                  TSX1    WRITE_STAR
         3 000607   001256 702000 3                  TSX2    SAVE_ERR

      388    14601    2           END;

  14601  3 000610   200012 054100                    AOS     I,,AUTO
         3 000611   000000 470400 xsym               LDP0    B$JIT$
         3 000612   000203 236100                    LDQ     131,,PR0
         3 000613   000022 772000                    QRL     18
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:98   
         3 000614   000056 036007                    ADLQ    46,DL
         3 000615   200012 116100                    CMPQ    I,,AUTO
         3 000616   000600 605000 3                  TPL     s:14600

      389    14602
      390    14603        /* If in the process of doing a LINK, close and release the M$DELTA
      391    14604           DCB.  Also zap the count of the pseudo resources that job step
      392    14605           acquired for this user.  This count will be restored when the
      393    14606           when the image is restored.
      394    14607        */
      395    14608    1      IF (B$JIT.JUNK & %JJ_MLINKIP#)

  14608  3 000617   000315 220100                    LDX0    205,,PR0
         3 000620   000001 360003                    ANX0    1,DU
         3 000621   000643 600000 3                  TZE     s:14622

      396    14609    2      THEN DO;

      397    14610    2           B$JIT.PSEUDO_COUNT = 0;

  14610  3 000622   000000 236003                    LDQ     0,DU
         3 000623   000321 552104                    STBQ    209,'04'O,PR0

      398    14611    2           IF DCBADDR(%M$DELT#) ~= ADDR(NIL)

  14611  3 000624   000022 471400 4                  LDP1    18
         3 000625   100000 473500                    LDP3    0,,PR1
         3 000626   300011 236100                    LDQ     9,,PR3
         3 000627   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000630   000643 600000 3                  TZE     s:14622

      399    14612    3           THEN DO;

      400    14613    3                B$JIT.DCB$ = DCBADDR(%M$DELT#);

  14613  3 000631   000232 756100                    STQ     154,,PR0

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:99   
      401    14614    3                CALL FMP$CLSJ;

  14614  3 000632   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000633   000000 701000 xent               TSX1    FMP$CLSJ
         3 000634   000000 011000                    NOP     0

      402    14615    3                B$JIT.DCBNO = %M$DELT#;

  14615  3 000635   000000 470400 xsym               LDP0    B$JIT$
         3 000636   000011 236007                    LDQ     9,DL
         3 000637   000022 552104                    STBQ    18,'04'O,PR0

      403    14616    3                CALL FMM$RELDCBI;

  14616  3 000640   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000641   000000 701000 xent               TSX1    FMM$RELDCBI
         3 000642   000000 011000                    NOP     0

      404    14617    3                END;

      405    14618    2           END;

      406    14619
      407    14620        /* Write out the program data.
      408    14621        */
      409    14622    1      FPT$WRITE.BUF_.BUF$ = B$USERIS$;

  14622  3 000643   000000 236000 xsym               LDQ     B$USERIS$
         3 000644   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      410    14623    1      J = B$JIT.DLL + B$JIT.PCD -1;

  14623  3 000645   000000 470400 xsym               LDP0    B$JIT$
         3 000646   000201 236100                    LDQ     129,,PR0
         3 000647   777777 376007                    ANQ     -1,DL
         3 000650   200114 756100                    STQ     @ARS+1,,AUTO
         3 000651   000177 236100                    LDQ     127,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:100  
         3 000652   000022 772000                    QRL     18
         3 000653   200114 036100                    ADLQ    @ARS+1,,AUTO
         3 000654   000001 136007                    SBLQ    1,DL
         3 000655   200013 756100                    STQ     J,,AUTO

      411    14624    2      DO I = B$JIT.DLL TO J;

  14624  3 000656   000177 236100                    LDQ     127,,PR0
         3 000657   000022 772000                    QRL     18
         3 000660   200012 756100                    STQ     I,,AUTO
         3 000661   000673 710000 3                  TRA     s:14626+1

      412    14625    2           CALL WRITE_STAR(JL_FULLPAGE,JL_DATATYPE,I) ALTRET(SAVE_ERR);

  14625  3 000662   200012 630500                    EPPR0   I,,AUTO
         3 000663   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 000664   000023 236000 4                  LDQ     19
         3 000665   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 000666   000013 236000 4                  LDQ     11
         3 000667   200111 756100                    STQ     TMP+3,,AUTO
         3 000670   006344 701000 3                  TSX1    WRITE_STAR
         3 000671   001256 702000 3                  TSX2    SAVE_ERR

      413    14626    2           END;

  14626  3 000672   200012 054100                    AOS     I,,AUTO
         3 000673   200012 236100                    LDQ     I,,AUTO
         3 000674   200013 116100                    CMPQ    J,,AUTO
         3 000675   000662 604400 3                  TMOZ    s:14625

      414    14627
      415    14628        /* Write out program procedure, if its not shared.
      416    14629        */
      417    14630    1      J = B$JIT.PLL + B$JIT.PCP -1;

  14630  3 000676   000000 470400 xsym               LDP0    B$JIT$
         3 000677   000201 236100                    LDQ     129,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:101  
         3 000700   000022 772000                    QRL     18
         3 000701   200114 756100                    STQ     @ARS+1,,AUTO
         3 000702   000176 236100                    LDQ     126,,PR0
         3 000703   000022 772000                    QRL     18
         3 000704   200114 036100                    ADLQ    @ARS+1,,AUTO
         3 000705   000001 136007                    SBLQ    1,DL
         3 000706   200013 756100                    STQ     J,,AUTO

      418    14631    1      IF B$U.APR = 0

  14631  3 000707   000000 471400 xsym               LDP1    S$CU$
         3 000710   100007 236100                    LDQ     7,,PR1
         3 000711   777700 316003                    CANQ    -64,DU
         3 000712   000740 601000 3                  TNZ     s:14641

      419    14632    2      THEN DO;

      420    14633    2           FPT$WRITE.BUF_.BUF$ = PINCRW(B$USERIS$,(B$JIT.PLL - %ISEGLO)*1024);

  14633  3 000713   000176 220100                    LDX0    126,,PR0
         3 000714   777700 636010                    EAQ     -64,X0
         3 000715   000012 736000                    QLS     10
         3 000716   000000 036000 xsym               ADLQ    B$USERIS$
         3 000717   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      421    14634    3           DO I = B$JIT.PLL TO J;

  14634  3 000720   000176 236100                    LDQ     126,,PR0
         3 000721   000022 772000                    QRL     18
         3 000722   200012 756100                    STQ     I,,AUTO
         3 000723   000735 710000 3                  TRA     s:14636+1

      422    14635    3                CALL WRITE_STAR(JL_FULLPAGE,JL_PROCTYPE,I) ALTRET(SAVE_ERR);

  14635  3 000724   200012 630500                    EPPR0   I,,AUTO
         3 000725   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 000726   000024 236000 4                  LDQ     20
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:102  
         3 000727   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 000730   000013 236000 4                  LDQ     11
         3 000731   200111 756100                    STQ     TMP+3,,AUTO
         3 000732   006344 701000 3                  TSX1    WRITE_STAR
         3 000733   001256 702000 3                  TSX2    SAVE_ERR

      423    14636    3                END;

  14636  3 000734   200012 054100                    AOS     I,,AUTO
         3 000735   200012 236100                    LDQ     I,,AUTO
         3 000736   200013 116100                    CMPQ    J,,AUTO
         3 000737   000724 604400 3                  TMOZ    s:14635

      424    14637    2           END;

      425    14638
      426    14639        /* Write out contiguous dynamic data pages, if any.
      427    14640        */
      428    14641    1      IF B$JIT.PCDD ~= 0

  14641  3 000740   000000 470400 xsym               LDP0    B$JIT$
         3 000741   000203 720100                    LXL0    131,,PR0
         3 000742   001045 600000 3                  TZE     s:14663

      429    14642    2      THEN DO;

      430    14643    2           FPT$WRITE.BUF_.BUF$ = PINCRW(B$USERIS$,(B$JIT.DDLL - %ISEGLO)*1024);

  14643  3 000743   000200 221100                    LDX1    128,,PR0
         3 000744   777700 636011                    EAQ     -64,X1
         3 000745   000012 736000                    QLS     10
         3 000746   000000 036000 xsym               ADLQ    B$USERIS$
         3 000747   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      431    14644    3           DO I = B$JIT.DDLL TO B$JIT.TDP - 1;

  14644  3 000750   000200 236100                    LDQ     128,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:103  
         3 000751   000022 772000                    QRL     18
         3 000752   200012 756100                    STQ     I,,AUTO
         3 000753   000765 710000 3                  TRA     s:14646+1

      432    14645    3                CALL WRITE_STAR(JL_FULLPAGE,JL_DYNDTYPE,I) ALTRET(SAVE_ERR);

  14645  3 000754   200012 630500                    EPPR0   I,,AUTO
         3 000755   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 000756   000025 236000 4                  LDQ     21
         3 000757   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 000760   000013 236000 4                  LDQ     11
         3 000761   200111 756100                    STQ     TMP+3,,AUTO
         3 000762   006344 701000 3                  TSX1    WRITE_STAR
         3 000763   001256 702000 3                  TSX2    SAVE_ERR

      433    14646    3                END;

  14646  3 000764   200012 054100                    AOS     I,,AUTO
         3 000765   000000 470400 xsym               LDP0    B$JIT$
         3 000766   000204 236100                    LDQ     132,,PR0
         3 000767   000022 772000                    QRL     18
         3 000770   200012 116100                    CMPQ    I,,AUTO
         3 000771   000754 605400 3                  TPNZ    s:14645

      434    14647
      435    14648        /* Now write the non-contiguous pages, if any.
      436    14649        */
      437    14650    2           IF (B$JIT.TDP - B$JIT.DDLL) < B$JIT.PCDD

  14650  3 000772   000200 236100                    LDQ     128,,PR0
         3 000773   000022 772000                    QRL     18
         3 000774   200114 756100                    STQ     @ARS+1,,AUTO
         3 000775   000204 236100                    LDQ     132,,PR0
         3 000776   000022 772000                    QRL     18
         3 000777   200114 136100                    SBLQ    @ARS+1,,AUTO
         3 001000   200115 756100                    STQ     @ARS+2,,AUTO
         3 001001   000203 236100                    LDQ     131,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:104  
         3 001002   777777 376007                    ANQ     -1,DL
         3 001003   200116 756100                    STQ     @ARS+3,,AUTO
         3 001004   200115 236100                    LDQ     @ARS+2,,AUTO
         3 001005   200116 116100                    CMPQ    @ARS+3,,AUTO
         3 001006   001045 605000 3                  TPL     s:14663

      438    14651    3           THEN DO I = B$JIT.TDP TO B$JIT.EUP;

  14651  3 001007   000204 236100                    LDQ     132,,PR0
         3 001010   000022 772000                    QRL     18
         3 001011   200012 756100                    STQ     I,,AUTO
         3 001012   001040 710000 3                  TRA     s:14657+1

      439    14652    3                IF B$PT.SCTRL(I) & %SCUSER

  14652  3 001013   000000 470400 xsym               LDP0    B$UPT$
         3 001014   200012 720100                    LXL0    I,,AUTO
         3 001015   000000 236110                    LDQ     0,X0,PR0
         3 001016   000022 736000                    QLS     18
         3 001017   777400 376003                    ANQ     -256,DU
         3 001020   000400 376003                    ANQ     256,DU
         3 001021   001037 600000 3                  TZE     s:14657

      440    14653    4                THEN DO;

      441    14654    4                     FPT$WRITE.BUF_.BUF$ = PINCRW(B$USERIS$,(I - %ISEGLO)*1024);

  14654  3 001022   200012 236100                    LDQ     I,,AUTO
         3 001023   000034 736000                    QLS     28
         3 001024   200000 136003                    SBLQ    65536,DU
         3 001025   000000 036000 xsym               ADLQ    B$USERIS$
         3 001026   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      442    14655    4                     CALL WRITE_STAR(JL_FULLPAGE,JL_DYNDTYPE,I) ALTRET(SAVE_ERR);

  14655  3 001027   200012 631500                    EPPR1   I,,AUTO
         3 001030   200113 451500                    STP1    @KEYTYPE+1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:105  
         3 001031   000025 236000 4                  LDQ     21
         3 001032   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 001033   000013 236000 4                  LDQ     11
         3 001034   200111 756100                    STQ     TMP+3,,AUTO
         3 001035   006344 701000 3                  TSX1    WRITE_STAR
         3 001036   001256 702000 3                  TSX2    SAVE_ERR

      443    14656    4                     END;

      444    14657    3                END;

  14657  3 001037   200012 054100                    AOS     I,,AUTO
         3 001040   000000 470400 xsym               LDP0    B$JIT$
         3 001041   000204 236100                    LDQ     132,,PR0
         3 001042   777777 376007                    ANQ     -1,DL
         3 001043   200012 116100                    CMPQ    I,,AUTO
         3 001044   001013 605000 3                  TPL     s:14652

      445    14658    2           END;                       /*  End of do-for-dynamic-data-pages block */

      446    14659        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:106  
      447    14660        /* Now, write out all of the user's data segments, skipping common
      448    14661           if this is an M$LINK file we're writing.
      449    14662        */
      450    14663    1      CALL WRITE_SEGS(B$USERLS$,ADDR(JL$HEAD.UDS(0)),JL_UDS1TYPE) ALTRET(SAVE_ERR);

  14663  3 001045   000000 236000 xsym               LDQ     B$SBUF1$
         3 001046   000016 036003                    ADLQ    14,DU
         3 001047   200124 756100                    STQ     @ARS+9,,AUTO
         3 001050   000026 236000 4                  LDQ     22
         3 001051   200105 756100                    STQ     @STARTPG+1,,AUTO
         3 001052   200124 631500                    EPPR1   @ARS+9,,AUTO
         3 001053   200104 451500                    STP1    @PGS+1,,AUTO
         3 001054   000027 236000 4                  LDQ     23
         3 001055   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 001056   005247 701000 3                  TSX1    WRITE_SEGS
         3 001057   001256 702000 3                  TSX2    SAVE_ERR

      451    14664
      452    14665        /* Write out the ASL and Debugger TCBs, if there are any.
      453    14666        */
      454    14667    1      IF JL$HEAD.ASLTCB > 0

  14667  3 001060   000000 470400 xsym               LDP0    B$SBUF1$
         3 001061   000046 220100                    LDX0    38,,PR0
         3 001062   001067 600000 3                  TZE     s:14669

      455    14668    1      THEN CALL WRITE_TCB(JL_ATCBTYPE) ALTRET(SAVE_ERR);

  14668  3 001063   000031 236000 4                  LDQ     25
         3 001064   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 001065   005644 701000 3                  TSX1    WRITE_TCB
         3 001066   001256 702000 3                  TSX2    SAVE_ERR

      456    14669    1      IF JL$HEAD.DBTCB > 0

  14669  3 001067   000000 470400 xsym               LDP0    B$SBUF1$
         3 001070   000046 720100                    LXL0    38,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:107  
         3 001071   001076 600000 3                  TZE     s:14675

      457    14670    1      THEN CALL WRITE_TCB(JL_DTCBTYPE) ALTRET(SAVE_ERR);

  14670  3 001072   000033 236000 4                  LDQ     27
         3 001073   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 001074   005644 701000 3                  TSX1    WRITE_TCB
         3 001075   001256 702000 3                  TSX2    SAVE_ERR

      458    14671
      459    14672        /* Now, do the same thing for the ASL or DB data segments, but save
      460    14673           segment # 2 as well this time.
      461    14674        */
      462    14675    1      CALL WRITE_SEGS(B$ASLLS$,ADDR(JL$HEAD.ASLDS(0)),

  14675  3 001076   000000 236000 xsym               LDQ     B$SBUF1$
         3 001077   000026 036003                    ADLQ    22,DU
         3 001100   200125 756100                    STQ     @ARS+10,,AUTO
         3 001101   000035 236000 4                  LDQ     29
         3 001102   200105 756100                    STQ     @STARTPG+1,,AUTO
         3 001103   200125 630500                    EPPR0   @ARS+10,,AUTO
         3 001104   200104 450500                    STP0    @PGS+1,,AUTO
         3 001105   000036 236000 4                  LDQ     30
         3 001106   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 001107   005247 701000 3                  TSX1    WRITE_SEGS
         3 001110   001256 702000 3                  TSX2    SAVE_ERR

      463    14676    1        JL_ADS1TYPE) ALTRET(SAVE_ERR);
      464    14677    1      CALL WRITE_SEGS(B$DBLS$,ADDR(JL$HEAD.DBDS(0)),

  14677  3 001111   000000 236000 xsym               LDQ     B$SBUF1$
         3 001112   000036 036003                    ADLQ    30,DU
         3 001113   200126 756100                    STQ     @ARS+11,,AUTO
         3 001114   000040 236000 4                  LDQ     32
         3 001115   200105 756100                    STQ     @STARTPG+1,,AUTO
         3 001116   200126 630500                    EPPR0   @ARS+11,,AUTO
         3 001117   200104 450500                    STP0    @PGS+1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:108  
         3 001120   000041 236000 4                  LDQ     33
         3 001121   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 001122   005247 701000 3                  TSX1    WRITE_SEGS
         3 001123   001256 702000 3                  TSX2    SAVE_ERR

      465    14678    1        JL_DDS1TYPE) ALTRET(SAVE_ERR);
      466    14679
      467    14680        /* Write out library procedure, if its not shared.
      468    14681        */
      469    14682    1      J = B$JIT.LLL + B$JIT.PCL -1;

  14682  3 001124   000000 470400 xsym               LDP0    B$JIT$
         3 001125   000215 236100                    LDQ     141,,PR0
         3 001126   777777 376007                    ANQ     -1,DL
         3 001127   200114 756100                    STQ     @ARS+1,,AUTO
         3 001130   000214 236100                    LDQ     140,,PR0
         3 001131   777777 376007                    ANQ     -1,DL
         3 001132   200114 036100                    ADLQ    @ARS+1,,AUTO
         3 001133   000001 136007                    SBLQ    1,DL
         3 001134   200013 756100                    STQ     J,,AUTO

      470    14683    1      IF B$JIT.PCL ~= 0

  14683  3 001135   000215 720100                    LXL0    141,,PR0
         3 001136   001164 600000 3                  TZE     s:14693

      471    14684    2      THEN DO;

      472    14685    2           FPT$WRITE.BUF_.BUF$ = PINCRW(B$USERIS$,(B$JIT.LLL - %ISEGLO)*1024);

  14685  3 001137   000214 721100                    LXL1    140,,PR0
         3 001140   777700 636011                    EAQ     -64,X1
         3 001141   000012 736000                    QLS     10
         3 001142   000000 036000 xsym               ADLQ    B$USERIS$
         3 001143   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      473    14686    3           DO I = B$JIT.LLL TO J;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:109  

  14686  3 001144   000214 236100                    LDQ     140,,PR0
         3 001145   777777 376007                    ANQ     -1,DL
         3 001146   200012 756100                    STQ     I,,AUTO
         3 001147   001161 710000 3                  TRA     s:14688+1

      474    14687    3                CALL WRITE_STAR(JL_FULLPAGE,JL_LIBTYPE,I) ALTRET(SAVE_ERR);

  14687  3 001150   200012 630500                    EPPR0   I,,AUTO
         3 001151   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 001152   000043 236000 4                  LDQ     35
         3 001153   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 001154   000013 236000 4                  LDQ     11
         3 001155   200111 756100                    STQ     TMP+3,,AUTO
         3 001156   006344 701000 3                  TSX1    WRITE_STAR
         3 001157   001256 702000 3                  TSX2    SAVE_ERR

      475    14688    3                END;

  14688  3 001160   200012 054100                    AOS     I,,AUTO
         3 001161   200012 236100                    LDQ     I,,AUTO
         3 001162   200013 116100                    CMPQ    J,,AUTO
         3 001163   001150 604400 3                  TMOZ    s:14687

      476    14689    2           END;

      477    14690
      478    14691        /* Write out the user's page table.
      479    14692        */
      480    14693    1      FPT$WRITE.BUF_.BUF$ = B$UPT$;

  14693  3 001164   000000 236000 xsym               LDQ     B$UPT$
         3 001165   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      481    14694    1      CALL WRITE_STAR(JL_FULLPAGE,JL_PGTBLTYPE,%PGTBLLO) ALTRET(SAVE_ERR);

  14694  3 001166   000046 237000 4                  LDAQ    38
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:110  
         3 001167   200112 757100                    STAQ    @BUFSIZE+1,,AUTO
         3 001170   000013 236000 4                  LDQ     11
         3 001171   200111 756100                    STQ     TMP+3,,AUTO
         3 001172   006344 701000 3                  TSX1    WRITE_STAR
         3 001173   001256 702000 3                  TSX2    SAVE_ERR

      482    14695
      483    14696        /* Write out the assign/merge info for #1, #2, #3 and #4.
      484    14697        */
      485    14698        /* Write out the DOLIST entries, skipping the entries that have
      486    14699        ENTER non-NIL.  Those entries with non-NIL EPTRS are processed in
      487    14700        SSV$DORUND.
      488    14701        */
      489    14702    1      IF (B$JIT.JUNK & %JJ_MLINKIP#) AND

  14702  3 001174   000000 470400 xsym               LDP0    B$JIT$
         3 001175   000315 220100                    LDX0    205,,PR0
         3 001176   000001 360003                    ANX0    1,DU
         3 001177   001206 600000 3                  TZE     s:14705
         3 001200   000000 471400 xsym               LDP1    S$CU$
         3 001201   100015 236100                    LDQ     13,,PR1
         3 001202   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 001203   001206 600000 3                  TZE     s:14705

      490    14703    1        B$U.DL$ ~= ADDR(NIL) THEN
      491    14704    1           CALL WRITE_DOLIST ALTRET(SAVE_ERR);

  14704  3 001204   006005 701000 3                  TSX1    WRITE_DOLIST
         3 001205   001256 702000 3                  TSX2    SAVE_ERR

      492    14705    1      IF JL$HEAD.AMR_SIZE ~= 0

  14705  3 001206   000000 470400 xsym               LDP0    B$SBUF1$
         3 001207   000145 235100                    LDA     101,,PR0
         3 001210   001222 600000 3                  TZE     s:14715

      493    14706    2      THEN DO;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:111  

      494    14707    2           FPT$WRITE.BUF_.BUF$ = B$SBUF2$;

  14707  3 001211   000000 236000 xsym               LDQ     B$SBUF2$
         3 001212   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      495    14708    2           CALL WRITE_STAR(JL$HEAD.AMR_SIZE,JL_AMRTYPE,0) ALTRET(SAVE_ERR);

  14708  3 001213   000050 237000 4                  LDAQ    40
         3 001214   200112 757100                    STAQ    @BUFSIZE+1,,AUTO
         3 001215   000000 236000 xsym               LDQ     B$SBUF1$
         3 001216   000145 036003                    ADLQ    101,DU
         3 001217   200111 756100                    STQ     TMP+3,,AUTO
         3 001220   006344 701000 3                  TSX1    WRITE_STAR
         3 001221   001256 702000 3                  TSX2    SAVE_ERR

      496    14709    1           END;;

      497    14710
      498    14711        /* Now, write the trailer record, close M$*, bump the link count,
      499    14712           and set the JIT flag for automatic return to the saved program
      500    14713           when the called program exits.
      501    14714        */
      502    14715    1      JL$TRAILER.NRECS = RECCNT +1;

  14715  3 001222   200025 720100                    LXL0    RECCNT,,AUTO
         3 001223   000001 621010                    EAX1    1,X0
         3 001224   000000 470400 xsym               LDP0    B$SBUF1$
         3 001225   000002 741100                    STX1    2,,PR0

      503    14716    1      JL$TRAILER.IDN = IDN;

  14716  3 001226   200003 471500                    LDP1    @IDN,,AUTO
         3 001227   100000 236100                    LDQ     0,,PR1
         3 001230   000000 552134                    STBQ    0,'34'O,PR0

      504    14717
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:112  
      505    14718        /* Store same UTS as in header into trailer and write the trailer.
      506    14719        */
      507    14720    1      JL$TRAILER.DTS = DTS;

  14720  3 001231   200017 235100                    LDA     DTS,,AUTO
         3 001232   000001 755100                    STA     1,,PR0

      508    14721    1      FPT$WRITE.BUF_.BUF$ = B$SBUF1$;

  14721  3 001233   000000 236000 xsym               LDQ     B$SBUF1$
         3 001234   200043 756100                    STQ     FPT$WRITE+5,,AUTO

      509    14722    1      CALL WRITE_STAR(JL_TRLRSIZE,JL_TRLRTYPE,1023)  ALTRET(SAVE_ERR);

  14722  3 001235   000056 237000 4                  LDAQ    46
         3 001236   200112 757100                    STAQ    @BUFSIZE+1,,AUTO
         3 001237   000055 236000 4                  LDQ     45
         3 001240   200111 756100                    STQ     TMP+3,,AUTO
         3 001241   006344 701000 3                  TSX1    WRITE_STAR
         3 001242   001256 702000 3                  TSX2    SAVE_ERR

      510    14723
      511    14724        /* Release the buffer that was used for the assign/merge records.
      512    14725        */
      513    14726    1      CALL MME$WFVP(%USERWSQ,%SBUF2PG,TEMP1,TEMP1) ALTRET(SAVE_RTN);

  14726  3 001243   200022 630500                    EPPR0   TEMP1,,AUTO
         3 001244   200117 450500                    STP0    @ARS+4,,AUTO
         3 001245   200022 631500                    EPPR1   TEMP1,,AUTO
         3 001246   200116 451500                    STP1    @ARS+3,,AUTO
         3 001247   000062 237000 4                  LDAQ    50
         3 001250   200114 757100                    STAQ    @ARS+1,,AUTO
         3 001251   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 001252   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001253   000000 701000 xent               TSX1    MME$WFVP
         3 001254   001255 702000 3                  TSX2    SAVE_RTN

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:113  
  14721  3 001255                       SAVE_RTN     null
      514    14727    1   SAVE_RTN: ;
      515    14728    1      RETURN;

  14728  3 001255   000000 702200 xent               TSX2  ! X66_ARET

      516    14729
      517    14730
      518    14731    1   SAVE_ERR:
      519    14732    1      IF (ERR >= %E$FREC) AND (ERR <= %E$GPIO)

  14732  3 001256   200004 470500       SAVE_ERR     LDP0    @ERR,,AUTO
         3 001257   000000 235100                    LDA     0,,PR0
         3 001260   000046 115007                    CMPA    38,DL
         3 001261   001266 602000 3                  TNC     s:14740
         3 001262   000065 115007                    CMPA    53,DL
         3 001263   001266 603000 3                  TRC     s:14740

      520    14733    1      THEN CALL SC_IOERRNF;

  14733  3 001264   000000 713400 xsym               CLIMB   SC_IOERRNF
         3 001265   000000 600000 xsid               climb   nvectors=         0

      521    14734
      522    14735        /*S*   SCREECH_CODE: JLS-S$IOERRNF
      523    14736               TYPE: SNAP
      524    14737               MESSAGE: I/O error reading or writing the image file.
      525    14738        */
      526    14739
      527    14740    1      IF B$JIT.ERR.CODE ~= 0 THEN ERR = B$JIT.ERR.CODE;

  14740  3 001266   000000 470400 xsym               LDP0    B$JIT$
         3 001267   000012 236100                    LDQ     10,,PR0
         3 001270   377770 316007                    CANQ    131064,DL
         3 001271   001277 600000 3                  TZE     s:14742

  14740  3 001272   200004 471500                    LDP1    @ERR,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:114  
         3 001273   000012 236100                    LDQ     10,,PR0
         3 001274   000003 772000                    QRL     3
         3 001275   037777 376007                    ANQ     16383,DL
         3 001276   100000 756100                    STQ     0,,PR1

      528    14741
      529    14742    1      CALL MME$WFVP(%USERWSQ,%SBUF2PG,TEMP1,TEMP1) ALTRET(SAV_ALTRTN);

  14742  3 001277   200022 631500                    EPPR1   TEMP1,,AUTO
         3 001300   200117 451500                    STP1    @ARS+4,,AUTO
         3 001301   200022 633500                    EPPR3   TEMP1,,AUTO
         3 001302   200116 453500                    STP3    @ARS+3,,AUTO
         3 001303   000062 237000 4                  LDAQ    50
         3 001304   200114 757100                    STAQ    @ARS+1,,AUTO
         3 001305   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 001306   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001307   000000 701000 xent               TSX1    MME$WFVP
         3 001310   001311 702000 3                  TSX2    SAV_ALTRTN

  14740  3 001311                       SAV_ALTRTN   null
      530    14743    1   SAV_ALTRTN: ;
      531    14744    1      ALTRETURN;

  14744  3 001311   000000 702200 xent               TSX2  ! X66_AALT

      532    14745
      533    14746
      534    14747        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:115  
      535    14748
      536    14749        /*************************************************************
      537    14750         *                                                           *
      538    14751         *                     JLS$GET_IMAGE                         *
      539    14752         *                                                           *
      540    14753         *************************************************************/
      541    14754
      542    14755        /*F*   NAME:   JLS$GET_IMAGE
      543    14756               PURPOSE: To restore a saved program image for either M$LINK
      544    14757                       or SAVE/GET.
      545    14758        */
      546    14759
      547    14760    1   JLS$GET_IMAGE: ENTRY(IDN,ERR,CLEANUP$) ALTRET;

  14760  3 001312   000000 700200 xent  JLS$GET_IMA* TSX0  ! X66_AUTO_3
         3 001313   000142 000003                    ZERO    98,3

      548    14761    1      ERR = %E$JQBADFILE;

  14761  3 001314   000523 235007                    LDA     339,DL
         3 001315   200004 470500                    LDP0    @ERR,,AUTO
         3 001316   000000 755100                    STA     0,,PR0

      549    14762                                                /* Default error message              */
      550    14763        /*E*   ERROR:  JLS-E$JQBADFILE-E
      551    14764               MESSAGE: Saved image cannot be restored.
      552    14765               DESCRIPTION:  Internal consistency checks failed when
      553    14766                             trying to restore a SAVEd or M$LINKing
      554    14767                             run unit.
      555    14768        */
      556    14769        /* Get special buffer pages 1 and 2 for reading in the star-n
      557    14770           trailer and header records, JIT, HJIT, and initial ROS pages.
      558    14771        */
      559    14772    1      TEMP1 = BITBIN(%PGINMEM|%PGWRITE|%PGIOM);

  14772  3 001317   000064 236007                    LDQ     52,DL
         3 001320   200022 756100                    STQ     TEMP1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:116  

      560    14773    1      CALL MME$WGVP(%USERWSQ,%SBUF1PG,TEMP1,ERR) ALTRET(GET_ERR);

  14773  3 001321   200004 236100                    LDQ     @ERR,,AUTO
         3 001322   200117 756100                    STQ     @ARS+4,,AUTO
         3 001323   200022 631500                    EPPR1   TEMP1,,AUTO
         3 001324   200116 451500                    STP1    @ARS+3,,AUTO
         3 001325   000064 237000 4                  LDAQ    52
         3 001326   200114 757100                    STAQ    @ARS+1,,AUTO
         3 001327   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 001330   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001331   000000 701000 xent               TSX1    MME$WGVP
         3 001332   004075 702000 3                  TSX2    GET_ERR

      561    14774    1      CALL MME$WGVP(%USERWSQ,%SBUF2PG,TEMP1,ERR) ALTRET(GET_ERR);

  14774  3 001333   200004 236100                    LDQ     @ERR,,AUTO
         3 001334   200117 756100                    STQ     @ARS+4,,AUTO
         3 001335   200022 630500                    EPPR0   TEMP1,,AUTO
         3 001336   200116 450500                    STP0    @ARS+3,,AUTO
         3 001337   000062 237000 4                  LDAQ    50
         3 001340   200114 757100                    STAQ    @ARS+1,,AUTO
         3 001341   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 001342   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001343   000000 701000 xent               TSX1    MME$WGVP
         3 001344   004075 702000 3                  TSX2    GET_ERR

      562    14775
      563    14776        /* Position M$* To eof.
      564    14777        */
      565    14778    1      J_FPT_PFIL.V.DCB# = %M$STAR#;

  14778  3 001345   000001 220003                    LDX0    1,DU
         3 001346   000002 740000 xsym               STX0    J_FPT_PFIL+2

      566    14779    1      CALL M$MPFIL(J_FPT_PFIL) ALTRET(GET_ERR);

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:117  
  14779  3 001347   000066 630400 4                  EPPR0   54
         3 001350   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001351   000000 701000 xent               TSX1    M$MPFIL
         3 001352   004075 702000 3                  TSX2    GET_ERR

      567    14780    1      FPT$PREC = FPT_PREC;

  14780  3 001353   000100 100400                    MLR     fill='000'O
         3 001354   000014 000050 1                  ADSC9   FPT_PREC                 cn=0,n=40
         3 001355   200052 000050                    ADSC9   FPT$PREC,,AUTO           cn=0,n=40

      568    14781    1      FPT$PREC.V_   = VECTOR(FPT$PREC.V);

  14781  3 001356   000006 235000 4                  LDA     6
         3 001357   200114 452500                    STP2    @ARS+1,,AUTO
         3 001360   200114 236100                    LDQ     @ARS+1,,AUTO
         3 001361   000060 036003                    ADLQ    48,DU
         3 001362   200052 757100                    STAQ    FPT$PREC,,AUTO

      569    14782    1      FPT$PREC.KEY_   = VECTOR(KEY);

  14782  3 001363   000007 235000 4                  LDA     7
         3 001364   200114 452500                    STP2    @ARS+1,,AUTO
         3 001365   200114 236100                    LDQ     @ARS+1,,AUTO
         3 001366   000026 036003                    ADLQ    22,DU
         3 001367   200054 757100                    STAQ    FPT$PREC+2,,AUTO

      570    14783    1      FPT$PREC.V.DCB# = %M$STAR#;

  14783  3 001370   000001 220003                    LDX0    1,DU
         3 001371   200060 740100                    STX0    FPT$PREC+6,,AUTO

      571    14784    1      FPT$PREC.V.N# = -1;

  14784  3 001372   000001 335007                    LCA     1,DL
         3 001373   200061 755100                    STA     FPT$PREC+7,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:118  
      572    14785
      573    14786        /* Position back one record and verify that it is the trailer record.
      574    14787        */
      575    14788    1      CALL M$MPRECORD(FPT$PREC) ALTRET(GET_ERR);

  14788  3 001374   200052 630500                    EPPR0   FPT$PREC,,AUTO
         3 001375   200114 450500                    STP0    @ARS+1,,AUTO
         3 001376   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 001377   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001400   000000 701000 xent               TSX1    M$MPRECORD
         3 001401   004075 702000 3                  TSX2    GET_ERR

      576    14789    1      IF KEY.TYPE ~= JL_TRLRTYPE

  14789  3 001402   200027 236100                    LDQ     KEY+1,,AUTO
         3 001403   777000 376003                    ANQ     -512,DU
         3 001404   777000 116003                    CMPQ    -512,DU
         3 001405   001411 600000 3                  TZE     s:14794

      577    14790    2      THEN DO;

      578    14791    2           CALL SC_BADNF;

  14791  3 001406   000000 713400 xsym               CLIMB   SC_BADNF
         3 001407   000000 600000 xsid               climb   nvectors=         0

      579    14792    2           GOTO BUF_RTN;

  14792  3 001410   004132 710000 3                  TRA     BUF_RTN

      580    14793    2           END;
      581    14794    1      IF KEY.ID ~= IDN

  14794  3 001411   200003 470500                    LDP0    @IDN,,AUTO
         3 001412   200026 236100                    LDQ     KEY,,AUTO
         3 001413   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 001414   000000 116100                    CMPQ    0,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:119  
         3 001415   001421 600000 3                  TZE     s:14808

      582    14795    2      THEN DO;

      583    14796    2           CALL SC_SYSIDNF;

  14796  3 001416   000000 713400 xsym               CLIMB   SC_SYSIDNF
         3 001417   000000 600000 xsid               climb   nvectors=         0

      584    14797    2           GOTO BUF_RTN;

  14797  3 001420   004132 710000 3                  TRA     BUF_RTN

      585    14798    2           END;
      586    14799
      587    14800        /*S*    SCREECH_CODE: JLS-S$SYSIDNF
      588    14801               TYPE:   SNAP
      589    14802               MESSAGE: SYSID in image file  not same as current user's.
      590    14803        */
      591    14804
      592    14805        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:120  
      593    14806        /* Initialize the read FPT.
      594    14807        */
      595    14808    1      FPT$READ = FPT_READ;

  14808  3 001421   000100 100400                    MLR     fill='000'O
         3 001422   000026 000070 1                  ADSC9   FPT_READ                 cn=0,n=56
         3 001423   200064 000070                    ADSC9   FPT$READ,,AUTO           cn=0,n=56

      596    14809    1      FPT$READ.V_   = VECTOR(FPT$READ.V);

  14809  3 001424   000067 235000 4                  LDA     55
         3 001425   200114 452500                    STP2    @ARS+1,,AUTO
         3 001426   200114 236100                    LDQ     @ARS+1,,AUTO
         3 001427   000074 036003                    ADLQ    60,DU
         3 001430   200064 757100                    STAQ    FPT$READ,,AUTO

      597    14810    1      FPT$READ.KEY_   = VECTOR(KEY);

  14810  3 001431   000007 235000 4                  LDA     7
         3 001432   200114 452500                    STP2    @ARS+1,,AUTO
         3 001433   200114 236100                    LDQ     @ARS+1,,AUTO
         3 001434   000026 036003                    ADLQ    22,DU
         3 001435   200066 757100                    STAQ    FPT$READ+2,,AUTO

      598    14811    1      FPT$READ.V.DCB# = %M$STAR#;

  14811  3 001436   000001 220003                    LDX0    1,DU
         3 001437   200074 740100                    STX0    FPT$READ+8,,AUTO

      599    14812
      600    14813        /* Read the trailer record into SBUF1.
      601    14814        */
      602    14815    1      FPT$READ.BUF_.BUF$ = B$SBUF1$;

  14815  3 001440   000000 236000 xsym               LDQ     B$SBUF1$
         3 001441   200071 756100                    STQ     FPT$READ+5,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:121  
      603    14816    1      CALL READ_STAR(JL_TRLRSIZE,JL_TRLRTYPE,N)  ALTRET(GET_ERR);

  14816  3 001442   200014 631500                    EPPR1   N,,AUTO
         3 001443   200113 451500                    STP1    @KEYTYPE+1,,AUTO
         3 001444   000056 236000 4                  LDQ     46
         3 001445   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 001446   000055 236000 4                  LDQ     45
         3 001447   200111 756100                    STQ     TMP+3,,AUTO
         3 001450   006407 701000 3                  TSX1    READ_STAR
         3 001451   004075 702000 3                  TSX2    GET_ERR

      604    14817
      605    14818    1      IF JL$TRAILER.IDN ~= IDN

  14818  3 001452   200003 470500                    LDP0    @IDN,,AUTO
         3 001453   000000 471400 xsym               LDP1    B$SBUF1$
         3 001454   100000 236100                    LDQ     0,,PR1
         3 001455   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 001456   000000 116100                    CMPQ    0,,PR0
         3 001457   001463 600000 3                  TZE     s:14824

      606    14819    2      THEN DO;

      607    14820    2           CALL SC_SYSIDNF;

  14820  3 001460   000000 713400 xsym               CLIMB   SC_SYSIDNF
         3 001461   000000 600000 xsid               climb   nvectors=         0

      608    14821    2           GOTO BUF_RTN;

  14821  3 001462   004132 710000 3                  TRA     BUF_RTN

      609    14822    2           END;
      610    14823
      611    14824    1      RECCNT = JL$TRAILER.NRECS;           /* Get # of records in this set       */

  14824  3 001463   100002 236100                    LDQ     2,,PR1
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:122  
         3 001464   000022 772000                    QRL     18
         3 001465   200025 756100                    STQ     RECCNT,,AUTO

      612    14825    1      DTS = JL$TRAILER.DTS;                /* And remember date/time stamp       */

  14825  3 001466   100001 235100                    LDA     1,,PR1
         3 001467   200017 755100                    STA     DTS,,AUTO

      613    14826
      614    14827        /* Now, position back to the start of this record SET.
      615    14828        */
      616    14829    1      FPT$PREC.V.N# = - RECCNT;

  14829  3 001470   200025 335100                    LCA     RECCNT,,AUTO
         3 001471   200061 755100                    STA     FPT$PREC+7,,AUTO

      617    14830    1      CALL M$MPRECORD(FPT$PREC) ALTRET(GET_ERR);

  14830  3 001472   200052 633500                    EPPR3   FPT$PREC,,AUTO
         3 001473   200114 453500                    STP3    @ARS+1,,AUTO
         3 001474   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 001475   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001476   000000 701000 xent               TSX1    M$MPRECORD
         3 001477   004075 702000 3                  TSX2    GET_ERR

      618    14831
      619    14832        /* Read the header record into SBUF1 and verify as much as possible.
      620    14833        */
      621    14834    1      FPT$READ.BUF_.BUF$ = B$SBUF1$;

  14834  3 001500   000000 236000 xsym               LDQ     B$SBUF1$
         3 001501   200071 756100                    STQ     FPT$READ+5,,AUTO

      622    14835    1      CALL READ_STAR(JL_HEADSIZE,JL_HEADTYPE,N)  ALTRET(GET_ERR);

  14835  3 001502   200014 630500                    EPPR0   N,,AUTO
         3 001503   200113 450500                    STP0    @KEYTYPE+1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:123  
         3 001504   000002 236000 4                  LDQ     2
         3 001505   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 001506   000011 236000 4                  LDQ     9
         3 001507   200111 756100                    STQ     TMP+3,,AUTO
         3 001510   006407 701000 3                  TSX1    READ_STAR
         3 001511   004075 702000 3                  TSX2    GET_ERR

      623    14836
      624    14837    1      IF JL$HEAD.IDN ~= IDN

  14837  3 001512   200003 470500                    LDP0    @IDN,,AUTO
         3 001513   000000 471400 xsym               LDP1    B$SBUF1$
         3 001514   100000 236100                    LDQ     0,,PR1
         3 001515   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 001516   000000 116100                    CMPQ    0,,PR0
         3 001517   001523 600000 3                  TZE     s:14843

      625    14838    2      THEN DO;

      626    14839    2           CALL SC_SYSIDNF;

  14839  3 001520   000000 713400 xsym               CLIMB   SC_SYSIDNF
         3 001521   000000 600000 xsid               climb   nvectors=         0

      627    14840    2           GOTO BUF_RTN;

  14840  3 001522   004132 710000 3                  TRA     BUF_RTN

      628    14841    2           END;
      629    14842
      630    14843    1      IF JL$HEAD.DTS ~= DTS

  14843  3 001523   100001 236100                    LDQ     1,,PR1
         3 001524   200017 116100                    CMPQ    DTS,,AUTO
         3 001525   001531 600000 3                  TZE     s:14854

      631    14844    2      THEN DO;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:124  

      632    14845    2           CALL SC_INFONF;

  14845  3 001526   000000 713400 xsym               CLIMB   SC_INFONF
         3 001527   000000 600000 xsid               climb   nvectors=         0

      633    14846    2           GOTO BUF_RTN;

  14846  3 001530   004132 710000 3                  TRA     BUF_RTN

      634    14847    2           END;
      635    14848
      636    14849        /*S*    SCREECH_CODE: JLS-S$INFONF
      637    14850               TYPE:   SNAP
      638    14851               MESSAGE: Inconsistency in image file information.
      639    14852        */
      640    14853
      641    14854    1      TPTR$ = ADDR(B_SITEINFO.VERSION#);

  14854  3 001531   000000 236000 4                  LDQ     0
         3 001532   200010 756100                    STQ     TPTR$,,AUTO

      642    14855    1      IF JL$HEAD.SYSVERS ~= TPTR$->B$CHAR3

  14855  3 001533   200010 473500                    LDP3    TPTR$,,AUTO
         3 001534   040100 106500                    CMPC    fill='040'O
         3 001535   100014 000004                    ADSC9   12,,PR1                  cn=0,n=4
         3 001536   300000 000003                    ADSC9   0,,PR3                   cn=0,n=3
         3 001537   001553 600000 3                  TZE     s:14875

      643    14856    1      THEN IF (B$JIT.JUNK & %JJ_GETTING#)

  14856  3 001540   000000 474400 xsym               LDP4    B$JIT$
         3 001541   400315 220100                    LDX0    205,,PR4
         3 001542   020000 360003                    ANX0    8192,DU
         3 001543   001550 600000 3                  TZE     s:14866

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:125  
      644    14857    2           THEN DO;

      645    14858    2                ERR = %E$JQOLDSAVE;

  14858  3 001544   000515 235007                    LDA     333,DL
         3 001545   200004 475500                    LDP5    @ERR,,AUTO
         3 001546   500000 755100                    STA     0,,PR5

      646    14859    2                GOTO BUF_RTN;

  14859  3 001547   004132 710000 3                  TRA     BUF_RTN

      647    14860    2                END;
      648    14861        /*E*    ERROR: JLS-E$JQOLDSAVE-2
      649    14862          MESSAGE: That program was saved under an older, incompatible system version.
      650    14863        */
      651    14864
      652    14865    2           ELSE DO;

      653    14866    2                CALL SC_INFONF;

  14866  3 001550   000000 713400 xsym               CLIMB   SC_INFONF
         3 001551   000000 600000 xsid               climb   nvectors=         0

      654    14867    2                GOTO BUF_RTN;

  14867  3 001552   004132 710000 3                  TRA     BUF_RTN

      655    14868    2                END;
      656    14869
      657    14870        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:126  
      658    14871        /* Read the JIT record form the image file into Special Buffer 2.
      659    14872           If this is a GET, make sure the current user has at least as
      660    14873           much privilege as the saver.
      661    14874        */
      662    14875    1      FPT$READ.BUF_.BUF$ = B$SBUF2$;

  14875  3 001553   000000 236000 xsym               LDQ     B$SBUF2$
         3 001554   200071 756100                    STQ     FPT$READ+5,,AUTO

      663    14876    1      CALL READ_STAR(JL_FULLPAGE,JL_JITTYPE,N) ALTRET(GET_ERR);

  14876  3 001555   200014 634500                    EPPR4   N,,AUTO
         3 001556   200113 454500                    STP4    @KEYTYPE+1,,AUTO
         3 001557   000014 236000 4                  LDQ     12
         3 001560   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 001561   000013 236000 4                  LDQ     11
         3 001562   200111 756100                    STQ     TMP+3,,AUTO
         3 001563   006407 701000 3                  TSX1    READ_STAR
         3 001564   004075 702000 3                  TSX2    GET_ERR

      664    14877
      665    14878    1      IF (B$JIT.JUNK & %JJ_GETTING#)

  14878  3 001565   000000 470400 xsym               LDP0    B$JIT$
         3 001566   000315 220100                    LDX0    205,,PR0
         3 001567   020000 360003                    ANX0    8192,DU
         3 001570   001727 600000 3                  TZE     s:14930

      666    14879    2      THEN DO;

      667    14880    2           IF (B$OLDJIT.PRIV.AUTH & ~B$JIT.PRIV.AUTH)

  14880  3 001571   000014 236100                    LDQ     12,,PR0
         3 001572   000027 676000 xsym               ERQ     B_VECTNIL+23
         3 001573   000000 471400 xsym               LDP1    B$SBUF2$
         3 001574   100014 376100                    ANQ     12,,PR1
         3 001575   001602 600000 3                  TZE     s:14894
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:127  

      668    14881    3           THEN DO;

      669    14882    3                ERR = %E$JQPRIV;

  14882  3 001576   000524 235007                    LDA     340,DL
         3 001577   200004 473500                    LDP3    @ERR,,AUTO
         3 001600   300000 755100                    STA     0,,PR3

      670    14883    3                GOTO BUF_RTN;

  14883  3 001601   004132 710000 3                  TRA     BUF_RTN

      671    14884    3                END;
      672    14885        /*E*    ERROR:  JLS-E$JQPRIV-2
      673    14886          MESSAGE: That program was saved by an account with more privilege than you.
      674    14887        */
      675    14888
      676    14889        /* Also, if GET, make sure that the pseudo resources that were
      677    14890           available to the user at the time of the save are available
      678    14891           to him now.  Restore the step pseudo resource name and count
      679    14892           to the JIT if so.
      680    14893        */
      681    14894    2           IF B$OLDJIT.CURSUDO ~='0'B

  14894  3 001602   100334 237100                    LDAQ    220,,PR1
         3 001603   000070 117000 4                  CMPAQ   56
         3 001604   001727 600000 3                  TZE     s:14930

      682    14895    3           THEN DO;

      683    14896    3                TPTR$ = PINCRW(B$SBUF2$,SIZEW(B$JIT));

  14896  3 001605   000000 236000 xsym               LDQ     B$SBUF2$
         3 001606   000366 036003                    ADLQ    246,DU
         3 001607   200010 756100                    STQ     TPTR$,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:128  
      684    14897    3                LPTR$ = PINCRW(TPTR$,SIZEW(FPT$RESCTL));

  14897  3 001610   000022 036003                    ADLQ    18,DU
         3 001611   200006 756100                    STQ     LPTR$,,AUTO

      685    14898    3                FPT$RESCTL = J_FPT_RESCTL;

  14898  3 001612   200010 473500                    LDP3    TPTR$,,AUTO
         3 001613   000100 100400                    MLR     fill='000'O
         3 001614   000000 000110 xsym               ADSC9   J_FPT_RESCTL             cn=0,n=72
         3 001615   300000 000110                    ADSC9   0,,PR3                   cn=0,n=72

      686    14899    3                FPT$RESCTL.V_ = VECTOR(FPT$RESCTL.V);

  14899  3 001616   000067 235000 4                  LDA     55
         3 001617   200010 236100                    LDQ     TPTR$,,AUTO
         3 001620   000014 036003                    ADLQ    12,DU
         3 001621   300000 757100                    STAQ    0,,PR3

      687    14900    3                FPT$RESCTL.PSEUDO_ = VECTOR(VLP$PS);

  14900  3 001622   000072 235000 4                  LDA     58
         3 001623   200006 236100                    LDQ     LPTR$,,AUTO
         3 001624   300002 757100                    STAQ    2,,PR3

      688    14901    3                VLP$PS='0'B;

  14901  3 001625   200006 474500                    LDP4    LPTR$,,AUTO
         3 001626   000100 100400                    MLR     fill='000'O
         3 001627   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 001630   400000 000050                    ADSC9   0,,PR4                   cn=0,n=40

      689    14902    3                J = 0;

  14902  3 001631   200013 450100                    STZ     J,,AUTO

      690    14903    4                DO I = 0 TO 7;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:129  

  14903  3 001632   200012 450100                    STZ     I,,AUTO

      691    14904    4                     IF B$OLDJIT.CURSUDO(I) > B$JIT.CURSUDO(I)

  14904  3 001633   000000 470400 xsym               LDP0    B$SBUF2$
         3 001634   200012 235100                    LDA     I,,AUTO
         3 001635   000100 101505                    MRL     fill='000'O
         3 001636   000334 000001                    ADSC9   220,A,PR0                cn=0,n=1
         3 001637   200114 000004                    ADSC9   @ARS+1,,AUTO             cn=0,n=4
         3 001640   000000 471400 xsym               LDP1    B$JIT$
         3 001641   000100 101505                    MRL     fill='000'O
         3 001642   100334 000001                    ADSC9   220,A,PR1                cn=0,n=1
         3 001643   200115 000004                    ADSC9   @ARS+2,,AUTO             cn=0,n=4
         3 001644   200115 236100                    LDQ     @ARS+2,,AUTO
         3 001645   200114 116100                    CMPQ    @ARS+1,,AUTO
         3 001646   001715 605000 3                  TPL     s:14919

      692    14905    5                     THEN DO;

      693    14906    5                          VLP$PS.NN# = VLP$PS.NN# +1;

  14906  3 001647   200006 473500                    LDP3    LPTR$,,AUTO
         3 001650   300000 054100                    AOS     0,,PR3

      694    14907    5                          VLP$PS.PSLIST.NUM#(J)

  14907  3 001651   200013 236100                    LDQ     J,,AUTO
         3 001652   000003 402007                    MPY     3,DL
         3 001653   200012 235100                    LDA     I,,AUTO
         3 001654   000100 101505                    MRL     fill='000'O
         3 001655   100334 000001                    ADSC9   220,A,PR1                cn=0,n=1
         3 001656   200114 000004                    ADSC9   @ARS+1,,AUTO             cn=0,n=4
         3 001657   000100 101505                    MRL     fill='000'O
         3 001660   000334 000001                    ADSC9   220,A,PR0                cn=0,n=1
         3 001661   200115 000004                    ADSC9   @ARS+2,,AUTO             cn=0,n=4
         3 001662   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:130  
         3 001663   200115 236100                    LDQ     @ARS+2,,AUTO
         3 001664   200114 136100                    SBLQ    @ARS+1,,AUTO
         3 001665   000033 736000                    QLS     27
         3 001666   300006 676110                    ERQ     6,X0,PR3
         3 001667   777000 376003                    ANQ     -512,DU
         3 001670   300006 656110                    ERSQ    6,X0,PR3

      695    14908    5                            = B$OLDJIT.CURSUDO(I) - B$JIT.CURSUDO(I);
      696    14909    5                          VLP$PS.PSLIST.PSEUDO#(J) = FR_SUNM(I);

  14909  3 001671   200012 235100                    LDA     I,,AUTO
         3 001672   000003 735000                    ALS     3
         3 001673   000000 636010                    EAQ     0,X0
         3 001674   000020 732000                    QRS     16
         3 001675   040106 100405                    MLR     fill='040'O
         3 001676   000000 000010 xsym               ADSC9   FR_SUNM,A                cn=0,n=8
         3 001677   300004 000010                    ADSC9   4,Q,PR3                  cn=0,n=8

      697    14910    5                          J = J+1;

  14910  3 001700   200013 054100                    AOS     J,,AUTO

      698    14911
      699    14912    5                          CALL M$MLIMIT(FPT$RESCTL)

  14912  3 001701   200010 630500                    EPPR0   TPTR$,,AUTO
         3 001702   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001703   000000 701000 xent               TSX1    M$MLIMIT
         3 001704   001706 702000 3                  TSX2    s:14914
         3 001705   001715 710000 3                  TRA     s:14919

      700    14913    6                          WHENALTRETURN DO;

      701    14914    6                               ERR = B$JIT.ERR.CODE;

  14914  3 001706   000000 470400 xsym               LDP0    B$JIT$
         3 001707   200004 471500                    LDP1    @ERR,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:131  
         3 001710   000012 236100                    LDQ     10,,PR0
         3 001711   000003 772000                    QRL     3
         3 001712   037777 376007                    ANQ     16383,DL
         3 001713   100000 756100                    STQ     0,,PR1

      702    14915    6                               GOTO BUF_RTN;

  14915  3 001714   004132 710000 3                  TRA     BUF_RTN

      703    14916    6                               END;
      704    14917
      705    14918    5                          END/*do if old JIT > current jit*/;

      706    14919    4                     END/* I=0 to 7 */;

  14919  3 001715   200012 054100                    AOS     I,,AUTO
         3 001716   200012 235100                    LDA     I,,AUTO
         3 001717   000007 115007                    CMPA    7,DL
         3 001720   001633 604400 3                  TMOZ    s:14904

      707    14920
      708    14921    3                B$JIT.PSEUDO_COUNT = B$OLDJIT.PSEUDO_COUNT;

  14921  3 001721   000000 470400 xsym               LDP0    B$SBUF2$
         3 001722   000000 471400 xsym               LDP1    B$JIT$
         3 001723   000321 236100                    LDQ     209,,PR0
         3 001724   100321 552104                    STBQ    209,'04'O,PR1

      709    14922    3                B$JIT.PSEUDO_TEXT = B$OLDJIT.PSEUDO_TEXT;

  14922  3 001725   000322 237100                    LDAQ    210,,PR0
         3 001726   100322 757100                    STAQ    210,,PR1

      710    14923    3                END/* do if any pseudos in old JIT*/;

      711    14924    2           END/* do if GET*/;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:132  
      712    14925
      713    14926
      714    14927        /*
      715    14928           Restore the contents of CCBUF unless this is a YC QUIT.
      716    14929        */
      717    14930    1      IF NOT(B$JIT.XCONF & %XC_QUIT#)

  14930  3 001727   000000 470400 xsym               LDP0    B$JIT$
         3 001730   000316 236100                    LDQ     206,,PR0
         3 001731   777000 376003                    ANQ     -512,DU
         3 001732   001000 376003                    ANQ     512,DU
         3 001733   001744 601000 3                  TNZ     s:14941

      718    14931    2      THEN DO;

      719    14932    2           B$JIT.CCARS = B$OLDJIT.CCARS;

  14932  3 001734   000000 471400 xsym               LDP1    B$SBUF2$
         3 001735   100032 220100                    LDX0    26,,PR1
         3 001736   000032 740100                    STX0    26,,PR0

      720    14933    2           B$JIT.CCBUF = B$OLDJIT.CCBUF;

  14933  3 001737   040100 100500                    MLR     fill='040'O
         3 001740   100033 000400                    ADSC9   27,,PR1                  cn=0,n=256
         3 001741   000033 000400                    ADSC9   27,,PR0                  cn=0,n=256

      721    14934    2           B$JIT.CCDISP = B$OLDJIT.CCDISP;

  14934  3 001742   100032 721100                    LXL1    26,,PR1
         3 001743   000032 441100                    SXL1    26,,PR0

      722    14935
      723    14936    2           END;

      724    14937
      725    14938        /* If restoring a program following a monitor M$LINK, return
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:133  
      726    14939           the address of the cleanup routine to the JLL$RTN routine.
      727    14940        */
      728    14941    1      CLEANUP$ = JL$HEAD.CLEANUP$;

  14941  3 001744   000000 471400 xsym               LDP1    B$SBUF1$
         3 001745   100147 236100                    LDQ     103,,PR1
         3 001746   200005 473500                    LDP3    @CLEANUP$,,AUTO
         3 001747   300000 756100                    STQ     0,,PR3

      729    14942
      730    14943        /* Restore other important pieces of the JIT for both GET and
      731    14944           LINK return.
      732    14945        */
      733    14946    2      IF NOT(B$JIT.JUNK & %JJ_GETTING#) THEN DO;

  14946  3 001750   000315 220100                    LDX0    205,,PR0
         3 001751   020000 360003                    ANX0    8192,DU
         3 001752   001761 601000 3                  TNZ     s:14950

      734    14947    2           B$JIT.PRIV.PRC = B$OLDJIT.PRIV.PRC;

  14947  3 001753   000000 474400 xsym               LDP4    B$SBUF2$
         3 001754   400016 236100                    LDQ     14,,PR4
         3 001755   000016 756100                    STQ     14,,PR0

      735    14948    2           B$JIT.PRIV.ACTIVE = (B$OLDJIT.PRIV.ACTIVE | B$JIT.PRIV.JOB);

  14948  3 001756   400013 236100                    LDQ     11,,PR4
         3 001757   000015 276100                    ORQ     13,,PR0
         3 001760   000013 756100                    STQ     11,,PR0

      736    14949    2           END;

      737    14950    1      B$JIT.PRFLAGS = (B$JIT.PRFLAGS & %PRF_CP#) | (B$OLDJIT.PRFLAGS & %PRF_LINK#);

  14950  3 001761   000030 236100                    LDQ     24,,PR0
         3 001762   000046 376000 1                  ANQ     FPT_READ+16
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:134  
         3 001763   000000 474400 xsym               LDP4    B$SBUF2$
         3 001764   200114 756100                    STQ     @ARS+1,,AUTO
         3 001765   400030 236100                    LDQ     24,,PR4
         3 001766   000047 376000 1                  ANQ     FPT_READ+17
         3 001767   200114 276100                    ORQ     @ARS+1,,AUTO
         3 001770   000030 756100                    STQ     24,,PR0

      738    14951    1      B$JIT.RUNFLAGS = B$OLDJIT.RUNFLAGS;

  14951  3 001771   400314 236100                    LDQ     204,,PR4
         3 001772   000314 552110                    STBQ    204,'10'O,PR0

      739    14952    1      B$JIT.PROG_ENTRY = B$OLDJIT.PROG_ENTRY;

  14952  3 001773   400170 236100                    LDQ     120,,PR4
         3 001774   000170 552140                    STBQ    120,'40'O,PR0

      740    14953
      741    14954    1      B$JIT.MMFLGS.FREE_PPGS = B$OLDJIT.MMFLGS.FREE_PPGS;

  14954  3 001775   400206 236100                    LDQ     134,,PR4
         3 001776   000206 676100                    ERQ     134,,PR0
         3 001777   400000 376003                    ANQ     -131072,DU
         3 002000   000206 656100                    ERSQ    134,,PR0

      742    14955    1      B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 & %CP_RESET#) |

  14955  3 002001   000050 236000 1                  LDQ     FPT_READ+18
         3 002002   000051 276000 1                  ORQ     FPT_READ+19
         3 002003   400143 376100                    ANQ     99,,PR4
         3 002004   200114 756100                    STQ     @ARS+1,,AUTO
         3 002005   000143 236100                    LDQ     99,,PR0
         3 002006   000052 376000 1                  ANQ     FPT_READ+20
         3 002007   200114 276100                    ORQ     @ARS+1,,AUTO
         3 002010   000143 756100                    STQ     99,,PR0

      743    14956    1        (B$OLDJIT.CPFLAGS1 & ( %CP_PROCACCT# | %CP_BUFFULL#) );
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:135  
      744    14957    1      IF (B$JIT.JUNK & %JJ_GETTING#)

  14957  3 002011   000315 220100                    LDX0    205,,PR0
         3 002012   020000 360003                    ANX0    8192,DU
         3 002013   002020 600000 3                  TZE     s:14959

      745    14958    1      THEN B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | (B$OLDJIT.CPFLAGS1 & %CP_YCPMME#);

  14958  3 002014   400143 236100                    LDQ     99,,PR4
         3 002015   000053 376000 1                  ANQ     FPT_READ+21
         3 002016   000143 276100                    ORQ     99,,PR0
         3 002017   000143 756100                    STQ     99,,PR0

      746    14959    1      IF (B$JIT.JUNK2 & %JJ2_ASAVE_LNK#)

  14959  3 002020   000321 220100                    LDX0    209,,PR0
         3 002021   000020 360003                    ANX0    16,DU
         3 002022   002027 600000 3                  TZE     s:14962

      747    14960    1      THEN B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | (B$OLDJIT.CPFLAGS1 & %CP_FIRST#);

  14960  3 002023   400143 236100                    LDQ     99,,PR4
         3 002024   000054 376000 1                  ANQ     FPT_READ+22
         3 002025   000143 276100                    ORQ     99,,PR0
         3 002026   000143 756100                    STQ     99,,PR0

      748    14961
      749    14962    1      OLD_PCP = B$OLDJIT.PCP;              /* Page count of procedure            */

  14962  3 002027   400201 220100                    LDX0    129,,PR4
         3 002030   200032 740100                    STX0    OLD_PCP,,AUTO

      750    14963    1      VIRTUAL = B$OLDJIT.VIRTUAL;

  14963  3 002031   400217 236100                    LDQ     143,,PR4
         3 002032   200035 756100                    STQ     VIRTUAL,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:136  
      751    14964    1      B$JIT.PLL = B$OLDJIT.PLL;            /* Procedure lower limit              */

  14964  3 002033   400176 221100                    LDX1    126,,PR4
         3 002034   000176 741100                    STX1    126,,PR0

      752    14965    1      B$JIT.PUL = B$OLDJIT.PUL;            /* Upper limit                        */

  14965  3 002035   400176 722100                    LXL2    126,,PR4
         3 002036   000176 442100                    SXL2    126,,PR0

      753    14966    1      B$JIT.DLL = B$OLDJIT.DLL;            /* Data lower limit                   */

  14966  3 002037   400177 223100                    LDX3    127,,PR4
         3 002040   000177 743100                    STX3    127,,PR0

      754    14967    1      B$JIT.DUL = B$OLDJIT.DUL;            /* Upper limit                        */

  14967  3 002041   400177 724100                    LXL4    127,,PR4
         3 002042   000177 444100                    SXL4    127,,PR0

      755    14968    1      B$JIT.DDLL = B$OLDJIT.DDLL;          /* Dynamic data lower limit           */

  14968  3 002043   400200 225100                    LDX5    128,,PR4
         3 002044   000200 745100                    STX5    128,,PR0

      756    14969    1      B$JIT.DDUL = B$OLDJIT.DDUL;          /* Upper limit                        */

  14969  3 002045   400200 726100                    LXL6    128,,PR4
         3 002046   000200 446100                    SXL6    128,,PR0

      757    14970    1      B$JIT.TDP = B$OLDJIT.TDP;            /* Top of contiguous dyn. Data pgs    */

  14970  3 002047   400204 227100                    LDX7    132,,PR4
         3 002050   000204 747100                    STX7    132,,PR0

      758    14971    1      B$JIT.EUP = B$OLDJIT.EUP;            /* End user page in ISR               */

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:137  
  14971  3 002051   400204 720100                    LXL0    132,,PR4
         3 002052   000204 440100                    SXL0    132,,PR0

      759    14972    1      B$JIT.LLL = B$OLDJIT.LLL;            /* Library lower limit                */

  14972  3 002053   400214 720100                    LXL0    140,,PR4
         3 002054   000214 440100                    SXL0    140,,PR0

      760    14973    1      B$JIT.LUL = B$OLDJIT.LUL;            /* Library upper limit                */

  14973  3 002055   400215 220100                    LDX0    141,,PR4
         3 002056   000215 740100                    STX0    141,,PR0

      761    14974    1      B$JIT.UTIMER = B$OLDJIT.UTIMER;      /* User's stimer limit                */

  14974  3 002057   400301 235100                    LDA     193,,PR4
         3 002060   000301 755100                    STA     193,,PR0

      762    14975    1      B$JIT.CURPNUM = B$OLDJIT.CURPNUM;    /* # of Fetches per Job Step          */

  14975  3 002061   400320 220100                    LDX0    208,,PR4
         3 002062   000320 740100                    STX0    208,,PR0

      763    14976    1      B$JIT.SVLDTF = B$OLDJIT.SVLDTF;

  14976  3 002063   400316 236100                    LDQ     206,,PR4
         3 002064   000316 552104                    STBQ    206,'04'O,PR0

      764    14977    1      B$JIT.PRIOCORE = B$OLDJIT.PRIOCORE;  /* Linking program size               */

  14977  3 002065   400207 220100                    LDX0    135,,PR4
         3 002066   000207 740100                    STX0    135,,PR0

      765    14978
      766    14979        /* Keep current important JIT.JUNK flags, but 'OR' in ones from the
      767    14980           saved copy that are meaningful in the resumed program.
      768    14981           Restore CP_LINK and ASAVE_LNK to JIT.JUNK2.
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:138  
      769    14982        */
      770    14983    1      B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_RTNXIT#);

  14983  3 002067   000315 220100                    LDX0    205,,PR0
         3 002070   777677 360003                    ANX0    -65,DU
         3 002071   000315 740100                    STX0    205,,PR0

      771    14984    1      B$JIT.JUNK = B$JIT.JUNK  | (B$OLDJIT.JUNK & %JJ_LINK#);

  14984  3 002072   400315 220100                    LDX0    205,,PR4
         3 002073   300134 360003                    ANX0    98396,DU
         3 002074   000315 260100                    ORX0    205,,PR0
         3 002075   000315 740100                    STX0    205,,PR0

      772    14985    1      B$JIT.JUNK2 = (B$OLDJIT.JUNK2 & %JJ2_LINK#);

  14985  3 002076   400321 220100                    LDX0    209,,PR4
         3 002077   000073 360003                    ANX0    59,DU
         3 002100   000321 740100                    STX0    209,,PR0

      773    14986
      774    14987        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:139  
      775    14988
      776    14989        /* If this is M$LINK return, restore the associated processors by
      777    14990           number and increment their use counts.
      778    14991        */
      779    14992    1      B$U.ASYNCH = JL$HEAD.ASYNCH_FLG;

  14992  3 002101   100146 236100                    LDQ     102,,PR1
         3 002102   000000 475400 xsym               LDP5    S$CU$
         3 002103   500001 756100                    STQ     1,,PR5

      780    14993    1      IF (B$JIT.JUNK & %JJ_LNKRETIP#)

  14993  3 002104   000315 220100                    LDX0    205,,PR0
         3 002105   000002 360003                    ANX0    2,DU
         3 002106   002232 600000 3                  TZE     s:15029

      781    14994    2      THEN DO;

      782    14995    2           B$U.ASL = JL$HEAD.ASL;

  14995  3 002107   100007 236100                    LDQ     7,,PR1
         3 002110   770000 376003                    ANQ     -4096,DU
         3 002111   000036 772000                    QRL     30
         3 002112   500006 552104                    STBQ    6,'04'O,PR5

      783    14996    2           B$U.APR = JL$HEAD.APR;

  14996  3 002113   100007 236100                    LDQ     7,,PR1
         3 002114   000006 736000                    QLS     6
         3 002115   500007 752160                    STCQ    7,'60'O,PR5

      784    14997    2           B$U.APO = JL$HEAD.APO;

  14997  3 002116   100007 236100                    LDQ     7,,PR1
         3 002117   000006 736000                    QLS     6
         3 002120   500007 752114                    STCQ    7,'14'O,PR5

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:140  
      785    14998    2           B$U.ASP = JL$HEAD.LIB;

  14998  3 002121   100007 236100                    LDQ     7,,PR1
         3 002122   000006 736000                    QLS     6
         3 002123   500007 752102                    STCQ    7,'02'O,PR5

      786    14999    2           B$P.UC(B$U.ASL) = B$P.UC(B$U.ASL) +1;

  14999  3 002124   500006 236100                    LDQ     6,,PR5
         3 002125   000777 376007                    ANQ     511,DL
         3 002126   000021 402007                    MPY     17,DL
         3 002127   000001 736000                    QLS     1
         3 002130   000000 620006                    EAX0    0,QL
         3 002131   500006 236100                    LDQ     6,,PR5
         3 002132   000777 376007                    ANQ     511,DL
         3 002133   000021 402007                    MPY     17,DL
         3 002134   000001 736000                    QLS     1
         3 002135   000000 476400 xsym               LDP6    B$P$
         3 002136   600000 235106                    LDA     0,QL,PR6
         3 002137   000001 035007                    ADLA    1,DL
         3 002140   600000 755110                    STA     0,X0,PR6

      787    15000    2           B$P.UC(B$U.ASP) = B$P.UC(B$U.ASP) +1;

  15000  3 002141   000000 475400 xsym               LDP5    S$CU$
         3 002142   500007 236100                    LDQ     7,,PR5
         3 002143   000006 772000                    QRL     6
         3 002144   000077 376007                    ANQ     63,DL
         3 002145   000021 402007                    MPY     17,DL
         3 002146   000001 736000                    QLS     1
         3 002147   000000 620006                    EAX0    0,QL
         3 002150   500007 236100                    LDQ     7,,PR5
         3 002151   000006 772000                    QRL     6
         3 002152   000077 376007                    ANQ     63,DL
         3 002153   000021 402007                    MPY     17,DL
         3 002154   000001 736000                    QLS     1
         3 002155   000000 476400 xsym               LDP6    B$P$
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:141  
         3 002156   600000 235106                    LDA     0,QL,PR6
         3 002157   000001 035007                    ADLA    1,DL
         3 002160   600000 755110                    STA     0,X0,PR6

      788    15001
      789    15002        /*
      790    15003           If the Debugger now associated is not the same as that at the
      791    15004           time of the M$LINK, disassociate the new one and reassociate
      792    15005           the old one.  This condition may occur if the debugger has
      793    15006           aborted while assoicated with the linked to program, or if
      794    15007           the linked to program did an M$DLIB of the linker's debugger
      795    15008           and an M$ALIB of a different debugger.
      796    15009        */
      797    15010    2           IF JL$HEAD.DB ~= B$U.DB

  15010  3 002161   000000 475400 xsym               LDP5    S$CU$
         3 002162   500006 236100                    LDQ     6,,PR5
         3 002163   000011 772000                    QRL     9
         3 002164   000777 376007                    ANQ     511,DL
         3 002165   200114 756100                    STQ     @ARS+1,,AUTO
         3 002166   100010 236100                    LDQ     8,,PR1
         3 002167   000022 772000                    QRL     18
         3 002170   000777 376007                    ANQ     511,DL
         3 002171   200114 116100                    CMPQ    @ARS+1,,AUTO
         3 002172   002526 600000 3                  TZE     s:15084

      798    15011    3           THEN DO;

      799    15012    3                SAVEJUNK = B$JIT.JUNK;

  15012  3 002173   000315 220100                    LDX0    205,,PR0
         3 002174   200033 740100                    STX0    SAVEJUNK,,AUTO

      800    15013    3                B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_LNKRETIP#);

  15013  3 002175   777775 360003                    ANX0    -3,DU
         3 002176   000315 740100                    STX0    205,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:142  

      801    15014    3                CALL JSA$RUNDSPC(%DBWSR,1);

  15014  3 002177   000073 630400 4                  EPPR0   59
         3 002200   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 002201   000000 701000 xent               TSX1    JSA$RUNDSPC
         3 002202   000000 011000                    NOP     0

      802    15015    3                B$JIT.JUNK = SAVEJUNK;

  15015  3 002203   200033 220100                    LDX0    SAVEJUNK,,AUTO
         3 002204   000000 470400 xsym               LDP0    B$JIT$
         3 002205   000315 740100                    STX0    205,,PR0

      803    15016    3                IF JL$HEAD.DB ~= 0

  15016  3 002206   000000 471400 xsym               LDP1    B$SBUF1$
         3 002207   100010 236100                    LDQ     8,,PR1
         3 002210   000777 316003                    CANQ    511,DU
         3 002211   002526 600000 3                  TZE     s:15084

      804    15017    4                THEN DO;

      805    15018    4                     N=JL$HEAD.DB;

  15018  3 002212   100010 236100                    LDQ     8,,PR1
         3 002213   000022 772000                    QRL     18
         3 002214   000777 376007                    ANQ     511,DL
         3 002215   200014 756100                    STQ     N,,AUTO

      806    15019    4                     CALL JSA$ALIBDB(N) ALTRET(PERR1);

  15019  3 002216   200014 633500                    EPPR3   N,,AUTO
         3 002217   200114 453500                    STP3    @ARS+1,,AUTO
         3 002220   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 002221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 002222   000000 701000 xent               TSX1    JSA$ALIBDB
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:143  
         3 002223   004071 702000 3                  TSX2    PERR1

      807    15020    4                     B$U.FLG = B$U.FLG &~ %U_DIC;

  15020  3 002224   000055 236000 1                  LDQ     FPT_READ+23
         3 002225   000027 676000 xsym               ERQ     B_VECTNIL+23
         3 002226   000000 470400 xsym               LDP0    S$CU$
         3 002227   000000 376100                    ANQ     0,,PR0
         3 002230   000000 756100                    STQ     0,,PR0

      808    15021    4                     END;

      809    15022    3                END;

      810    15023    2           END;

  15023  3 002231   002526 710000 3                  TRA     s:15084

      811    15024
      812    15025        /* When restoring a SAVEd image, restore the processors by name as
      813    15026           their processor numbers may well have changed.
      814    15027        */
      815    15028    2      ELSE DO;

      816    15029    2           IF JL$HEAD.APR ~= 0

  15029  3 002232   100007 236100                    LDQ     7,,PR1
         3 002233   007777 316003                    CANQ    4095,DU
         3 002234   002273 600000 3                  TZE     s:15036

      817    15030    3           THEN DO;

      818    15031    3                PTYPE=%P_SP;

  15031  3 002235   040000 220003                    LDX0    16384,DU
         3 002236   200015 740100                    STX0    PTYPE,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:144  
      819    15032    3                CALL JSA$FINDAUTO(ADDR(JL$HEAD.APRNAME),ADDR(JL$HEAD.LMACCT),N,PTYPE,
             15032                         ERR) ALTRET(PERR1);

  15032  3 002237   000000 236000 xsym               LDQ     B$SBUF1$
         3 002240   000057 036003                    ADLQ    47,DU
         3 002241   200114 756100                    STQ     @ARS+1,,AUTO
         3 002242   000000 236000 xsym               LDQ     B$SBUF1$
         3 002243   000137 036003                    ADLQ    95,DU
         3 002244   200115 756100                    STQ     @ARS+2,,AUTO
         3 002245   200004 236100                    LDQ     @ERR,,AUTO
         3 002246   200122 756100                    STQ     @ARS+7,,AUTO
         3 002247   200015 636500                    EPPR6   PTYPE,,AUTO
         3 002250   200121 456500                    STP6    @ARS+6,,AUTO
         3 002251   200014 637500                    EPPR7   N,,AUTO
         3 002252   200120 457500                    STP7    @ARS+5,,AUTO
         3 002253   200115 630500                    EPPR0   @ARS+2,,AUTO
         3 002254   200117 450500                    STP0    @ARS+4,,AUTO
         3 002255   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 002256   200116 450500                    STP0    @ARS+3,,AUTO
         3 002257   200116 630500                    EPPR0   @ARS+3,,AUTO
         3 002260   000023 631400 xsym               EPPR1   B_VECTNIL+19
         3 002261   000000 701000 xent               TSX1    JSA$FINDAUTO
         3 002262   004071 702000 3                  TSX2    PERR1

      820    15033    3                B$U.APR = N;

  15033  3 002263   000000 470400 xsym               LDP0    S$CU$
         3 002264   200014 236100                    LDQ     N,,AUTO
         3 002265   000030 736000                    QLS     24
         3 002266   000007 752160                    STCQ    7,'60'O,PR0

      821    15034    3                B$P.UC(N) = B$P.UC(N) +1;

  15034  3 002267   200014 236100                    LDQ     N,,AUTO
         3 002270   000042 402007                    MPY     34,DL
         3 002271   000000 471400 xsym               LDP1    B$P$
         3 002272   100000 054106                    AOS     0,QL,PR1
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:145  

      822    15035    3                END;

      823    15036    2           IF JL$HEAD.APO ~= 0

  15036  3 002273   000000 470400 xsym               LDP0    B$SBUF1$
         3 002274   000007 236100                    LDQ     7,,PR0
         3 002275   777700 316007                    CANQ    -64,DL
         3 002276   002335 600000 3                  TZE     s:15043

      824    15037    3           THEN DO;

      825    15038    3                PTYPE=%P_SP;

  15038  3 002277   040000 220003                    LDX0    16384,DU
         3 002300   200015 740100                    STX0    PTYPE,,AUTO

      826    15039    3                CALL JSA$FINDAUTO(ADDR(JL$HEAD.APONAME),ADDR(JL$HEAD.LMACCT),N,PTYPE,
             15039                         ERR) ALTRET(PERR1);

  15039  3 002301   000000 236000 xsym               LDQ     B$SBUF1$
         3 002302   000067 036003                    ADLQ    55,DU
         3 002303   200114 756100                    STQ     @ARS+1,,AUTO
         3 002304   000000 236000 xsym               LDQ     B$SBUF1$
         3 002305   000137 036003                    ADLQ    95,DU
         3 002306   200115 756100                    STQ     @ARS+2,,AUTO
         3 002307   200004 236100                    LDQ     @ERR,,AUTO
         3 002310   200122 756100                    STQ     @ARS+7,,AUTO
         3 002311   200015 631500                    EPPR1   PTYPE,,AUTO
         3 002312   200121 451500                    STP1    @ARS+6,,AUTO
         3 002313   200014 633500                    EPPR3   N,,AUTO
         3 002314   200120 453500                    STP3    @ARS+5,,AUTO
         3 002315   200115 634500                    EPPR4   @ARS+2,,AUTO
         3 002316   200117 454500                    STP4    @ARS+4,,AUTO
         3 002317   200114 635500                    EPPR5   @ARS+1,,AUTO
         3 002320   200116 455500                    STP5    @ARS+3,,AUTO
         3 002321   200116 630500                    EPPR0   @ARS+3,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:146  
         3 002322   000023 631400 xsym               EPPR1   B_VECTNIL+19
         3 002323   000000 701000 xent               TSX1    JSA$FINDAUTO
         3 002324   004071 702000 3                  TSX2    PERR1

      827    15040    3                B$U.APO = N;

  15040  3 002325   000000 470400 xsym               LDP0    S$CU$
         3 002326   200014 236100                    LDQ     N,,AUTO
         3 002327   000014 736000                    QLS     12
         3 002330   000007 752114                    STCQ    7,'14'O,PR0

      828    15041    3                B$P.UC(N) = B$P.UC(N) +1;

  15041  3 002331   200014 236100                    LDQ     N,,AUTO
         3 002332   000042 402007                    MPY     34,DL
         3 002333   000000 471400 xsym               LDP1    B$P$
         3 002334   100000 054106                    AOS     0,QL,PR1

      829    15042    3                END;

      830    15043    2           IF JL$HEAD.LIB ~= 0

  15043  3 002335   000000 470400 xsym               LDP0    B$SBUF1$
         3 002336   000007 236100                    LDQ     7,,PR0
         3 002337   000077 316007                    CANQ    63,DL
         3 002340   002374 600000 3                  TZE     s:15050

      831    15044    3           THEN DO;

      832    15045    3                PTYPE=%P_LIB;

  15045  3 002341   100000 220003                    LDX0    32768,DU
         3 002342   200015 740100                    STX0    PTYPE,,AUTO

      833    15046    3               CALL JSA$FINDSSP(ADDR(JL$HEAD.LIBNAME),J_SYS$,N,PTYPE,ERR) ALTRET(PERR1
             15046                         );

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:147  
  15046  3 002343   000000 236000 xsym               LDQ     B$SBUF1$
         3 002344   000077 036003                    ADLQ    63,DU
         3 002345   200114 756100                    STQ     @ARS+1,,AUTO
         3 002346   200004 236100                    LDQ     @ERR,,AUTO
         3 002347   200121 756100                    STQ     @ARS+6,,AUTO
         3 002350   200015 631500                    EPPR1   PTYPE,,AUTO
         3 002351   200120 451500                    STP1    @ARS+5,,AUTO
         3 002352   200014 633500                    EPPR3   N,,AUTO
         3 002353   200117 453500                    STP3    @ARS+4,,AUTO
         3 002354   000075 236000 4                  LDQ     61
         3 002355   200116 756100                    STQ     @ARS+3,,AUTO
         3 002356   200114 634500                    EPPR4   @ARS+1,,AUTO
         3 002357   200115 454500                    STP4    @ARS+2,,AUTO
         3 002360   200115 630500                    EPPR0   @ARS+2,,AUTO
         3 002361   000023 631400 xsym               EPPR1   B_VECTNIL+19
         3 002362   000000 701000 xent               TSX1    JSA$FINDSSP
         3 002363   004071 702000 3                  TSX2    PERR1

      834    15047    3                B$U.ASP = N;

  15047  3 002364   000000 470400 xsym               LDP0    S$CU$
         3 002365   200014 236100                    LDQ     N,,AUTO
         3 002366   000006 736000                    QLS     6
         3 002367   000007 752102                    STCQ    7,'02'O,PR0

      835    15048    3                B$P.UC(N) = B$P.UC(N) +1;

  15048  3 002370   200014 236100                    LDQ     N,,AUTO
         3 002371   000042 402007                    MPY     34,DL
         3 002372   000000 471400 xsym               LDP1    B$P$
         3 002373   100000 054106                    AOS     0,QL,PR1

      836    15049    3                END;

      837    15050    2           IF JL$HEAD.ACP ~= 0

  15050  3 002374   000000 470400 xsym               LDP0    B$SBUF1$
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:148  
         3 002375   000010 236100                    LDQ     8,,PR0
         3 002376   777000 316003                    CANQ    -512,DU
         3 002377   002433 600000 3                  TZE     s:15057

      838    15051    3           THEN DO;

      839    15052    3                PTYPE=%P_CP;

  15052  3 002400   400000 220003                    LDX0    -131072,DU
         3 002401   200015 740100                    STX0    PTYPE,,AUTO

      840    15053    3               CALL JSA$FINDSSP(ADDR(JL$HEAD.CPNAME),J_SYS$,N,PTYPE,ERR) ALTRET(PERR1)
             15053                         ;

  15053  3 002402   000000 236000 xsym               LDQ     B$SBUF1$
         3 002403   000107 036003                    ADLQ    71,DU
         3 002404   200114 756100                    STQ     @ARS+1,,AUTO
         3 002405   200004 236100                    LDQ     @ERR,,AUTO
         3 002406   200121 756100                    STQ     @ARS+6,,AUTO
         3 002407   200015 631500                    EPPR1   PTYPE,,AUTO
         3 002410   200120 451500                    STP1    @ARS+5,,AUTO
         3 002411   200014 633500                    EPPR3   N,,AUTO
         3 002412   200117 453500                    STP3    @ARS+4,,AUTO
         3 002413   000075 236000 4                  LDQ     61
         3 002414   200116 756100                    STQ     @ARS+3,,AUTO
         3 002415   200114 634500                    EPPR4   @ARS+1,,AUTO
         3 002416   200115 454500                    STP4    @ARS+2,,AUTO
         3 002417   200115 630500                    EPPR0   @ARS+2,,AUTO
         3 002420   000023 631400 xsym               EPPR1   B_VECTNIL+19
         3 002421   000000 701000 xent               TSX1    JSA$FINDSSP
         3 002422   004071 702000 3                  TSX2    PERR1

      841    15054    3                B$U.ACP = N;

  15054  3 002423   000000 470400 xsym               LDP0    S$CU$
         3 002424   200014 236100                    LDQ     N,,AUTO
         3 002425   000022 736000                    QLS     18
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:149  
         3 002426   000006 552120                    STBQ    6,'20'O,PR0

      842    15055    3                B$P.UC(N) = B$P.UC(N) +1;

  15055  3 002427   200014 236100                    LDQ     N,,AUTO
         3 002430   000042 402007                    MPY     34,DL
         3 002431   000000 471400 xsym               LDP1    B$P$
         3 002432   100000 054106                    AOS     0,QL,PR1

      843    15056    3                END;

      844    15057    2           IF JL$HEAD.ASL ~= 0

  15057  3 002433   000000 470400 xsym               LDP0    B$SBUF1$
         3 002434   000007 236100                    LDQ     7,,PR0
         3 002435   770000 316003                    CANQ    -4096,DU
         3 002436   002471 600000 3                  TZE     s:15064

      845    15058    3           THEN DO;

      846    15059    3                PTYPE=%P_ASL;

  15059  3 002437   200000 220003                    LDX0    65536,DU
         3 002440   200015 740100                    STX0    PTYPE,,AUTO

      847    15060    3               CALL JSA$FINDSSP(ADDR(JL$HEAD.ASLNAME),J_SYS$,N,PTYPE,ERR) ALTRET(PERR1
             15060                         );

  15060  3 002441   000000 236000 xsym               LDQ     B$SBUF1$
         3 002442   000047 036003                    ADLQ    39,DU
         3 002443   200114 756100                    STQ     @ARS+1,,AUTO
         3 002444   200004 236100                    LDQ     @ERR,,AUTO
         3 002445   200121 756100                    STQ     @ARS+6,,AUTO
         3 002446   200015 631500                    EPPR1   PTYPE,,AUTO
         3 002447   200120 451500                    STP1    @ARS+5,,AUTO
         3 002450   200014 633500                    EPPR3   N,,AUTO
         3 002451   200117 453500                    STP3    @ARS+4,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:150  
         3 002452   000075 236000 4                  LDQ     61
         3 002453   200116 756100                    STQ     @ARS+3,,AUTO
         3 002454   200114 634500                    EPPR4   @ARS+1,,AUTO
         3 002455   200115 454500                    STP4    @ARS+2,,AUTO
         3 002456   200115 630500                    EPPR0   @ARS+2,,AUTO
         3 002457   000023 631400 xsym               EPPR1   B_VECTNIL+19
         3 002460   000000 701000 xent               TSX1    JSA$FINDSSP
         3 002461   004071 702000 3                  TSX2    PERR1

      848    15061    3                B$U.ASL = N;

  15061  3 002462   000000 470400 xsym               LDP0    S$CU$
         3 002463   200014 236100                    LDQ     N,,AUTO
         3 002464   000006 552104                    STBQ    6,'04'O,PR0

      849    15062    3                B$P.UC(N) = B$P.UC(N) +1;

  15062  3 002465   200014 236100                    LDQ     N,,AUTO
         3 002466   000042 402007                    MPY     34,DL
         3 002467   000000 471400 xsym               LDP1    B$P$
         3 002470   100000 054106                    AOS     0,QL,PR1

      850    15063    3                END;

      851    15064    2           IF JL$HEAD.DB ~= 0

  15064  3 002471   000000 470400 xsym               LDP0    B$SBUF1$
         3 002472   000010 236100                    LDQ     8,,PR0
         3 002473   000777 316003                    CANQ    511,DU
         3 002474   002526 600000 3                  TZE     s:15084

      852    15065    3           THEN DO;

      853    15066    3                PTYPE=%P_DB;

  15066  3 002475   020000 220003                    LDX0    8192,DU
         3 002476   200015 740100                    STX0    PTYPE,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:151  

      854    15067    3               CALL JSA$FINDSSP(ADDR(JL$HEAD.DBNAME),J_SYS$,N,PTYPE,ERR) ALTRET(PERR1)
             15067                         ;

  15067  3 002477   000000 236000 xsym               LDQ     B$SBUF1$
         3 002500   000117 036003                    ADLQ    79,DU
         3 002501   200114 756100                    STQ     @ARS+1,,AUTO
         3 002502   200004 236100                    LDQ     @ERR,,AUTO
         3 002503   200121 756100                    STQ     @ARS+6,,AUTO
         3 002504   200015 631500                    EPPR1   PTYPE,,AUTO
         3 002505   200120 451500                    STP1    @ARS+5,,AUTO
         3 002506   200014 633500                    EPPR3   N,,AUTO
         3 002507   200117 453500                    STP3    @ARS+4,,AUTO
         3 002510   000075 236000 4                  LDQ     61
         3 002511   200116 756100                    STQ     @ARS+3,,AUTO
         3 002512   200114 634500                    EPPR4   @ARS+1,,AUTO
         3 002513   200115 454500                    STP4    @ARS+2,,AUTO
         3 002514   200115 630500                    EPPR0   @ARS+2,,AUTO
         3 002515   000023 631400 xsym               EPPR1   B_VECTNIL+19
         3 002516   000000 701000 xent               TSX1    JSA$FINDSSP
         3 002517   004071 702000 3                  TSX2    PERR1

      855    15068    3                CALL JSA$DB(N) ALTRET(PERR1);

  15068  3 002520   200014 630500                    EPPR0   N,,AUTO
         3 002521   200114 450500                    STP0    @ARS+1,,AUTO
         3 002522   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 002523   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 002524   000000 701000 xent               TSX1    JSA$DB
         3 002525   004071 702000 3                  TSX2    PERR1

      856    15069    3                END;

      857    15070    2           END;

      858    15071        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:152  
      859    15072        /* Now read the HJIT into SBUF2 and begin to restore the pertinent
      860    15073           data into the user's current HJIT.  This includes:
      861    15074
      862    15075           The JIT descriptors (in case the user had special JIT access).
      863    15076           The ECCB descriptor (in case DELTA was associated).
      864    15077           The user's TCB descriptor.
      865    15078           The ASL and DB TCB descriptors.
      866    15079           The ASL instruction segment descriptor.
      867    15080           The ASL entry descriptor.
      868    15081           All special access descriptors.
      869    15082           All descriptors in the HJIT Special Descriptor Area.
      870    15083        */
      871    15084    1      FPT$READ.BUF_.BUF$ = B$SBUF2$;

  15084  3 002526   000000 236000 xsym               LDQ     B$SBUF2$
         3 002527   200071 756100                    STQ     FPT$READ+5,,AUTO

      872    15085    1      CALL READ_STAR(JL_FULLPAGE,JL_HJITTYPE,N)  ALTRET(GET_ERR);

  15085  3 002530   200014 630500                    EPPR0   N,,AUTO
         3 002531   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 002532   000020 236000 4                  LDQ     16
         3 002533   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 002534   000013 236000 4                  LDQ     11
         3 002535   200111 756100                    STQ     TMP+3,,AUTO
         3 002536   006407 701000 3                  TSX1    READ_STAR
         3 002537   004075 702000 3                  TSX2    GET_ERR

      873    15086
      874    15087    1      B$HJIT.ULNK.JIT = B$OLDHJIT.ULNK.JIT;

  15087  3 002540   000000 470400 xsym               LDP0    B$SBUF2$
         3 002541   000002 237100                    LDAQ    2,,PR0
         3 002542   000000 471400 xsym               LDP1    B$USERHJIT$
         3 002543   100002 757100                    STAQ    2,,PR1

      875    15088    1      B$HJIT.DBLNK.JIT = B$OLDHJIT.DBLNK.JIT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:153  

  15088  3 002544   000112 237100                    LDAQ    74,,PR0
         3 002545   100112 757100                    STAQ    74,,PR1

      876    15089
      877    15090    1      B$HJIT.ULNK.ECCB = B$OLDHJIT.ULNK.ECCB;

  15090  3 002546   000034 237100                    LDAQ    28,,PR0
         3 002547   100034 757100                    STAQ    28,,PR1

      878    15091    1      B$HJIT.ULNK.TCB = B$OLDHJIT.ULNK.TCB;

  15091  3 002550   000036 237100                    LDAQ    30,,PR0
         3 002551   100036 757100                    STAQ    30,,PR1

      879    15092    1      B$HJIT.DBLNK.TCB = B$OLDHJIT.DBLNK.TCB;

  15092  3 002552   000146 237100                    LDAQ    102,,PR0
         3 002553   100146 757100                    STAQ    102,,PR1

      880    15093
      881    15094    1      B$HJIT.ASLLNK.IS = B$OLDHJIT.ASLLNK.IS;

  15094  3 002554   000220 237100                    LDAQ    144,,PR0
         3 002555   100220 757100                    STAQ    144,,PR1

      882    15095    1      B$HJIT.ULNK.ASLENT = B$OLDHJIT.ULNK.ASLENT;

  15095  3 002556   000052 237100                    LDAQ    42,,PR0
         3 002557   100052 757100                    STAQ    42,,PR1

      883    15096
      884    15097    1      B$HJIT.ULNK.SPCL1 = B$OLDHJIT.ULNK.SPCL1;

  15097  3 002560   000042 237100                    LDAQ    34,,PR0
         3 002561   100042 757100                    STAQ    34,,PR1

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:154  
      885    15098    1      B$HJIT.ULNK.SPCL2 = B$OLDHJIT.ULNK.SPCL2;

  15098  3 002562   000044 237100                    LDAQ    36,,PR0
         3 002563   100044 757100                    STAQ    36,,PR1

      886    15099    1      B$HJIT.ULNK.SPCL3 = B$OLDHJIT.ULNK.SPCL3;

  15099  3 002564   000046 237100                    LDAQ    38,,PR0
         3 002565   100046 757100                    STAQ    38,,PR1

      887    15100    1      B$HJIT.ULNK.SPCL4 = B$OLDHJIT.ULNK.SPCL4;

  15100  3 002566   000050 237100                    LDAQ    40,,PR0
         3 002567   100050 757100                    STAQ    40,,PR1

      888    15101    1      B$HJIT.ULNK.SPCL5 = B$OLDHJIT.ULNK.SPCL5;

  15101  3 002570   000054 237100                    LDAQ    44,,PR0
         3 002571   100054 757100                    STAQ    44,,PR1

      889    15102    1      B$HJIT.ULNK.SPCL6 = B$OLDHJIT.ULNK.SPCL6;

  15102  3 002572   000056 237100                    LDAQ    46,,PR0
         3 002573   100056 757100                    STAQ    46,,PR1

      890    15103    1      B$HJIT.ULNK.SPCL7 = B$OLDHJIT.ULNK.SPCL7;

  15103  3 002574   000060 237100                    LDAQ    48,,PR0
         3 002575   100060 757100                    STAQ    48,,PR1

      891    15104    1      B$HJIT.ULNK.SPCL8 = B$OLDHJIT.ULNK.SPCL8;

  15104  3 002576   000062 237100                    LDAQ    50,,PR0
         3 002577   100062 757100                    STAQ    50,,PR1

      892    15105
      893    15106    1      B$HJIT.SDS = B$OLDHJIT.SDS;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:155  

  15106  3 002600   000100 100500                    MLR     fill='000'O
         3 002601   000440 000100                    ADSC9   288,,PR0                 cn=0,n=64
         3 002602   100440 000100                    ADSC9   288,,PR1                 cn=0,n=64

      894    15107
      895    15108        /* If this is a 'GET', restore the CP and DB ISR's.
      896    15109        */
      897    15110    1      IF (B$JIT.JUNK & %JJ_GETTING#)

  15110  3 002603   000000 473400 xsym               LDP3    B$JIT$
         3 002604   300315 220100                    LDX0    205,,PR3
         3 002605   020000 360003                    ANX0    8192,DU
         3 002606   002613 600000 3                  TZE     s:15119

      898    15111    2      THEN DO;

      899    15112    2           B$HJIT.CPLNK.IS = B$OLDHJIT.CPLNK.IS;

  15112  3 002607   000330 237100                    LDAQ    216,,PR0
         3 002610   100330 757100                    STAQ    216,,PR1

      900    15113    2           B$HJIT.DBLNK.IS = B$OLDHJIT.DBLNK.IS;

  15113  3 002611   000110 237100                    LDAQ    72,,PR0
         3 002612   100110 757100                    STAQ    72,,PR1

      901    15114    2           END;

      902    15115
      903    15116        /* Restore the entire safe store stack and argument stack.
      904    15117        */
      905    15118    2      DO INHIBIT;

      906    15119    2           B$HJIT.SSS = B$OLDHJIT.SSS;

  15119  3 002613   000100 100700                    MLR   ! fill='000'O
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:156  
         3 002614   000460 004500                    ADSC9   304,,PR0                 cn=0,n=2368
         3 002615   100460 004500                    ADSC9   304,,PR1                 cn=0,n=2368

      907    15120    2           B$HJIT.AS = B$OLDHJIT.AS;

  15120  3 002616   000100 100700                    MLR   ! fill='000'O
         3 002617   001600 001000                    ADSC9   896,,PR0                 cn=0,n=512
         3 002620   101600 001000                    ADSC9   896,,PR1                 cn=0,n=512

      908    15121
      909    15122        /* Reload the SSR and ASR to their former values.
      910    15123        */
      911    15124    2           CALL JSN$SETSSR(JL$HEAD.SSR);

  15124  3 002621   000000 236200 xsym               LDQ   ! B$SBUF1$
         3 002622   000002 036203                    ADLQ  ! 2,DU
         3 002623   200114 756300                    STQ   ! @ARS+1,,AUTO
         3 002624   200114 630700                    EPPR0 ! @ARS+1,,AUTO
         3 002625   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         3 002626   000000 701200 xent               TSX1  ! JSN$SETSSR
         3 002627   000000 011200                    NOP   ! 0

      912    15125    2           CALL JSN$SETASR(JL$HEAD.ASR);

  15125  3 002630   000000 236200 xsym               LDQ   ! B$SBUF1$
         3 002631   000004 036203                    ADLQ  ! 4,DU
         3 002632   200114 756300                    STQ   ! @ARS+1,,AUTO
         3 002633   200114 630700                    EPPR0 ! @ARS+1,,AUTO
         3 002634   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         3 002635   000000 701200 xent               TSX1  ! JSN$SETASR
         3 002636   000000 011200                    NOP   ! 0

      913    15126    2           END;

      914    15127
      915    15128        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:157  
      916    15129
      917    15130        /* Restore the read-only segment. Begin by reading the first
      918    15131           page into SBUF2 and resetting the pertinent control information
      919    15132           in the current read-only segment.
      920    15133        */
      921    15134    1      FPT$READ.BUF_.BUF$ = B$SBUF2$;

  15134  3 002637   000000 236000 xsym               LDQ     B$SBUF2$
         3 002640   200071 756100                    STQ     FPT$READ+5,,AUTO

      922    15135    1      CALL READ_STAR(JL_FULLPAGE,JL_ROTYPE,N)  ALTRET(GET_ERR);

  15135  3 002641   200014 630500                    EPPR0   N,,AUTO
         3 002642   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 002643   000017 236000 4                  LDQ     15
         3 002644   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 002645   000013 236000 4                  LDQ     11
         3 002646   200111 756100                    STQ     TMP+3,,AUTO
         3 002647   006407 701000 3                  TSX1    READ_STAR
         3 002650   004075 702000 3                  TSX2    GET_ERR

      923    15136    1      B$ROSEG.TREE$ = B$OLDROSEG.TREE$;

  15136  3 002651   000000 470400 xsym               LDP0    B$SBUF2$
         3 002652   000001 236100                    LDQ     1,,PR0
         3 002653   000000 471400 xsym               LDP1    B$ROSEG$
         3 002654   100001 756100                    STQ     1,,PR1

      924    15137    1      B$ROSEG.NUMDCBS = B$OLDROSEG.NUMDCBS;

  15137  3 002655   000002 220100                    LDX0    2,,PR0
         3 002656   100002 740100                    STX0    2,,PR1

      925    15138    1      B$ROSEG.AVAIL$ = B$OLDROSEG.AVAIL$;

  15138  3 002657   000003 236100                    LDQ     3,,PR0
         3 002660   100003 756100                    STQ     3,,PR1
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:158  

      926    15139    1      B$ROSEG.ECCB = B$OLDROSEG.ECCB;      /* Restore all eccb's at once         */

  15139  3 002661   000100 100500                    MLR     fill='000'O
         3 002662   000024 000140                    ADSC9   20,,PR0                  cn=0,n=96
         3 002663   100024 000140                    ADSC9   20,,PR1                  cn=0,n=96

      927    15140
      928    15141        /* Restore M$LM assignment information.
      929    15142        */
      930    15143    1      LM$ = B$M$LM$;

  15143  3 002664   000000 236000 xsym               LDQ     B$M$LM$
         3 002665   200011 756100                    STQ     LM$,,AUTO

      931    15144    1      M$LMDCB.NAME = JL$HEAD.LMNAME;

  15144  3 002666   000000 473400 xsym               LDP3    B$SBUF1$
         3 002667   200011 474500                    LDP4    LM$,,AUTO
         3 002670   000100 100500                    MLR     fill='000'O
         3 002671   300127 000040                    ADSC9   87,,PR3                  cn=0,n=32
         3 002672   400010 000040                    ADSC9   8,,PR4                   cn=0,n=32

      932    15145    1      M$LMDCB.ACCT = JL$HEAD.LMACCT;

  15145  3 002673   040100 100500                    MLR     fill='040'O
         3 002674   300137 000010                    ADSC9   95,,PR3                  cn=0,n=8
         3 002675   400020 000010                    ADSC9   16,,PR4                  cn=0,n=8

      933    15146    1      M$LMDCB.PASS = JL$HEAD.LMPASS.C;

  15146  3 002676   040100 100500                    MLR     fill='040'O
         3 002677   300141 000010                    ADSC9   97,,PR3                  cn=0,n=8
         3 002700   400022 000010                    ADSC9   18,,PR4                  cn=0,n=8

      934    15147    1      M$LMDCB.PASSF='1'B;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:159  
  15147  3 002701   400000 236007                    LDQ     -131072,DL
         3 002702   400031 256100                    ORSQ    25,,PR4

      935    15148    1      M$LMDCB.PSN = JL$HEAD.LMPSN;

  15148  3 002703   040100 100500                    MLR     fill='040'O
         3 002704   300143 000006                    ADSC9   99,,PR3                  cn=0,n=6
         3 002705   400024 000006                    ADSC9   20,,PR4                  cn=0,n=6

      936    15149    1      M$LMDCB.ASN = %FILE#;

  15149  3 002706   001000 236007                    LDQ     512,DL
         3 002707   400032 552110                    STBQ    26,'10'O,PR4

      937    15150    1      M$LMDCB.WSR = 0;

  15150  3 002710   000000 236003                    LDQ     0,DU
         3 002711   400040 552120                    STBQ    32,'20'O,PR4

      938    15151
      939    15152        /* Now, move the rest of the page.
      940    15153        */
      941    15154    1      I = INITROSIZE% - %M$1STDCB# + %M$DRIBBLE#; /* Get Dribble's DCB pointer    */

  15154  3 002712   000000 235000 xsym               LDA     B$ROSEG$
         3 002713   000022 771000                    ARL     18
         3 002714   200114 755100                    STA     @ARS+1,,AUTO
         3 002715   100000 236100                    LDQ     0,,PR1
         3 002716   000022 772000                    QRL     18
         3 002717   200114 136100                    SBLQ    @ARS+1,,AUTO
         3 002720   000001 136007                    SBLQ    1,DL
         3 002721   200012 756100                    STQ     I,,AUTO

      942    15155    1      B$ROSEG$->B$PAGE.WRD(I) = B$SBUF2$->B$PAGE.WRD(I);

  15155  3 002722   200012 720100                    LXL0    I,,AUTO
         3 002723   000000 235106                    LDA     0,QL,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:160  
         3 002724   100000 755110                    STA     0,X0,PR1

      943    15156    2      DO I = I + %M$IBEX# - %M$DRIBBLE# TO 1023; /* IBEXS'  DCB pointer too      */

  15156  3 002725   000006 236007                    LDQ     6,DL
         3 002726   200012 056100                    ASQ     I,,AUTO
         3 002727   002736 710000 3                  TRA     s:15158+1

      944    15157    2           B$ROSEG$->B$PAGE.WRD(I) = B$SBUF2$->B$PAGE.WRD(I);

  15157  3 002730   000000 470400 xsym               LDP0    B$SBUF2$
         3 002731   200012 720100                    LXL0    I,,AUTO
         3 002732   000000 471400 xsym               LDP1    B$ROSEG$
         3 002733   000000 235110                    LDA     0,X0,PR0
         3 002734   100000 755110                    STA     0,X0,PR1

      945    15158    2           END;

  15158  3 002735   200012 054100                    AOS     I,,AUTO
         3 002736   200012 235100                    LDA     I,,AUTO
         3 002737   001777 115007                    CMPA    1023,DL
         3 002740   002730 604400 3                  TMOZ    s:15157

      946    15159
      947    15160        /* If there was more than on page of ROS, read in the rest.
      948    15161        */
      949    15162    1      FPT$READ.BUF_.BUF$ = PINCRW(B$ROSEG$,1024);

  15162  3 002741   000000 236000 xsym               LDQ     B$ROSEG$
         3 002742   002000 036003                    ADLQ    1024,DU
         3 002743   200071 756100                    STQ     FPT$READ+5,,AUTO

      950    15163    1      TEMP1 = BITBIN(%PGINMEM | %PGWRITE | %PGIOM);

  15163  3 002744   000064 235007                    LDA     52,DL
         3 002745   200022 755100                    STA     TEMP1,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:161  
      951    15164    2      DO I = 1 TO JL$HEAD.ROPGS-1;

  15164  3 002746   000001 235007                    LDA     1,DL
         3 002747   200012 755100                    STA     I,,AUTO
         3 002750   003001 710000 3                  TRA     s:15167+1

      952    15165    2           CALL MME$WGVP(%USERWSQ,%ROSEGLO+I,TEMP1,ERR) ALTRET(GET_ERR);

  15165  3 002751   200012 235100                    LDA     I,,AUTO
         3 002752   000057 035007                    ADLA    47,DL
         3 002753   200114 755100                    STA     @ARS+1,,AUTO
         3 002754   200004 236100                    LDQ     @ERR,,AUTO
         3 002755   200121 756100                    STQ     @ARS+6,,AUTO
         3 002756   200022 630500                    EPPR0   TEMP1,,AUTO
         3 002757   200120 450500                    STP0    @ARS+5,,AUTO
         3 002760   200114 631500                    EPPR1   @ARS+1,,AUTO
         3 002761   200117 451500                    STP1    @ARS+4,,AUTO
         3 002762   000026 236000 4                  LDQ     22
         3 002763   200116 756100                    STQ     @ARS+3,,AUTO
         3 002764   200116 630500                    EPPR0   @ARS+3,,AUTO
         3 002765   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002766   000000 701000 xent               TSX1    MME$WGVP
         3 002767   004075 702000 3                  TSX2    GET_ERR

      953    15166    2           CALL READ_STAR(JL_FULLPAGE,JL_ROTYPE,N) ALTRET(GET_ERR);

  15166  3 002770   200014 630500                    EPPR0   N,,AUTO
         3 002771   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 002772   000017 236000 4                  LDQ     15
         3 002773   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 002774   000013 236000 4                  LDQ     11
         3 002775   200111 756100                    STQ     TMP+3,,AUTO
         3 002776   006407 701000 3                  TSX1    READ_STAR
         3 002777   004075 702000 3                  TSX2    GET_ERR

      954    15167    2           END;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:162  
  15167  3 003000   200012 054100                    AOS     I,,AUTO
         3 003001   000000 470400 xsym               LDP0    B$SBUF1$
         3 003002   000015 236100                    LDQ     13,,PR0
         3 003003   000777 376007                    ANQ     511,DL
         3 003004   200012 116100                    CMPQ    I,,AUTO
         3 003005   002751 605400 3                  TPNZ    s:15165

      955    15168
      956    15169        /* Reset fcd in M$DELTA which was read back in marked 'OPEN'.  This
      957    15170           will keep file management from trying to close it twice, and all
      958    15171           assignment info will still be preserved in case DELTA tries to
      959    15172           use the DCB, implicitly opening it.
      960    15173        */
      961    15174    1      TPTR$ = DCBADDR(%M$DRIBBLE#);

  15174  3 003006   000022 471400 4                  LDP1    18
         3 003007   100000 473500                    LDP3    0,,PR1
         3 003010   377777 236100                    LDQ     -1,,PR3
         3 003011   200010 756100                    STQ     TPTR$,,AUTO

      962    15175    1      IF TPTR$ ~= ADDR(NIL)

  15175  3 003012   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 003013   003021 600000 3                  TZE     s:15181

      963    15176    2      THEN DO;

      964    15177    2           TPTR$->F$DCB.FCD = '0'B;

  15177  3 003014   200010 474500                    LDP4    TPTR$,,AUTO
         3 003015   000076 236000 4                  LDQ     62
         3 003016   400031 356100                    ANSQ    25,,PR4

      965    15178    2           TPTR$->F$DCB.IASN = 0;

  15178  3 003017   000000 236003                    LDQ     0,DU
         3 003020   400103 552104                    STBQ    67,'04'O,PR4
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:163  

      966    15179    2           END;

      967    15180
      968    15181    2      DO I = %M$IBEX# TO %M$DELT# ;

  15181  3 003021   000005 235007                    LDA     5,DL
         3 003022   200012 755100                    STA     I,,AUTO

      969    15182    2           TPTR$ = DCBADDR(I);

  15182  3 003023   000022 470400 4                  LDP0    18
         3 003024   000000 471500                    LDP1    0,,PR0
         3 003025   200012 720100                    LXL0    I,,AUTO
         3 003026   100000 236110                    LDQ     0,X0,PR1
         3 003027   200010 756100                    STQ     TPTR$,,AUTO

      970    15183    2           IF TPTR$ ~= ADDR(NIL)

  15183  3 003030   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 003031   003037 600000 3                  TZE     s:15188

      971    15184    3           THEN DO;

      972    15185    3                TPTR$->F$DCB.FCD = '0'B;

  15185  3 003032   200010 473500                    LDP3    TPTR$,,AUTO
         3 003033   000076 236000 4                  LDQ     62
         3 003034   300031 356100                    ANSQ    25,,PR3

      973    15186    3                TPTR$->F$DCB.IASN = 0;     /* This is to get file repositioned   */

  15186  3 003035   000000 236003                    LDQ     0,DU
         3 003036   300103 552104                    STBQ    67,'04'O,PR3

      974    15187    3                END;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:164  
      975    15188    2           END;

  15188  3 003037   200012 054100                    AOS     I,,AUTO
         3 003040   200012 235100                    LDA     I,,AUTO
         3 003041   000011 115007                    CMPA    9,DL
         3 003042   003023 604400 3                  TMOZ    s:15182

      976    15189
      977    15190        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:165  
      978    15191
      979    15192        /* Next, we will read in the program data.
      980    15193        */
      981    15194    1      TEMP1 = JL$HEAD.DPGS;

  15194  3 003043   000000 473400 xsym               LDP3    B$SBUF1$
         3 003044   300015 236100                    LDQ     13,,PR3
         3 003045   000033 772000                    QRL     27
         3 003046   200022 756100                    STQ     TEMP1,,AUTO

      982    15195    1      TEMP2 = B$JIT.DLL;

  15195  3 003047   000000 474400 xsym               LDP4    B$JIT$
         3 003050   400177 236100                    LDQ     127,,PR4
         3 003051   000022 772000                    QRL     18
         3 003052   200023 756100                    STQ     TEMP2,,AUTO

      983    15196    1      CALL BRING_IN(TEMP1,TEMP2,JL_DATATYPE)  ALTRET(GET_ERR);

  15196  3 003053   000023 236000 4                  LDQ     19
         3 003054   200105 756100                    STQ     @STARTPG+1,,AUTO
         3 003055   200023 635500                    EPPR5   TEMP2,,AUTO
         3 003056   200104 455500                    STP5    @PGS+1,,AUTO
         3 003057   200022 636500                    EPPR6   TEMP1,,AUTO
         3 003060   200103 456500                    STP6    FPT$READ+15,,AUTO
         3 003061   006451 701000 3                  TSX1    BRING_IN
         3 003062   004075 702000 3                  TSX2    GET_ERR

      984    15197
      985    15198        /* And, the program procedure.
      986    15199        */
      987    15200    1      IF B$U.APR = 0                       /* If there is any                    */

  15200  3 003063   000000 470400 xsym               LDP0    S$CU$
         3 003064   000007 236100                    LDQ     7,,PR0
         3 003065   777700 316003                    CANQ    -64,DU
         3 003066   003111 601000 3                  TNZ     s:15206
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:166  

      988    15201    2      THEN DO;

      989    15202    2           TEMP1 = JL$HEAD.PPGS;

  15202  3 003067   000000 471400 xsym               LDP1    B$SBUF1$
         3 003070   100015 236100                    LDQ     13,,PR1
         3 003071   000022 772000                    QRL     18
         3 003072   000777 376007                    ANQ     511,DL
         3 003073   200022 756100                    STQ     TEMP1,,AUTO

      990    15203    2           TEMP2 = B$JIT.PLL;

  15203  3 003074   000000 473400 xsym               LDP3    B$JIT$
         3 003075   300176 236100                    LDQ     126,,PR3
         3 003076   000022 772000                    QRL     18
         3 003077   200023 756100                    STQ     TEMP2,,AUTO

      991    15204    2           CALL BRING_IN(TEMP1,TEMP2,JL_PROCTYPE) ALTRET(GET_ERR);

  15204  3 003100   000024 236000 4                  LDQ     20
         3 003101   200105 756100                    STQ     @STARTPG+1,,AUTO
         3 003102   200023 634500                    EPPR4   TEMP2,,AUTO
         3 003103   200104 454500                    STP4    @PGS+1,,AUTO
         3 003104   200022 635500                    EPPR5   TEMP1,,AUTO
         3 003105   200103 455500                    STP5    FPT$READ+15,,AUTO
         3 003106   006451 701000 3                  TSX1    BRING_IN
         3 003107   004075 702000 3                  TSX2    GET_ERR

      992    15205    2           END;

  15205  3 003110   003114 710000 3                  TRA     s:15210

      993    15206    1      ELSE B$JIT.PCP = OLD_PCP;

  15206  3 003111   200032 220100                    LDX0    OLD_PCP,,AUTO
         3 003112   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:167  
         3 003113   100201 740100                    STX0    129,,PR1

      994    15207
      995    15208        /* Set 'NO WRITE' on procedure pages.
      996    15209        */
      997    15210    1      TEMP1 = B$JIT.PLL + B$JIT.PCP - 1;

  15210  3 003114   000000 470400 xsym               LDP0    B$JIT$
         3 003115   000201 236100                    LDQ     129,,PR0
         3 003116   000022 772000                    QRL     18
         3 003117   200114 756100                    STQ     @ARS+1,,AUTO
         3 003120   000176 236100                    LDQ     126,,PR0
         3 003121   000022 772000                    QRL     18
         3 003122   200114 036100                    ADLQ    @ARS+1,,AUTO
         3 003123   000001 136007                    SBLQ    1,DL
         3 003124   200022 756100                    STQ     TEMP1,,AUTO

      998    15211    2      DO I = B$JIT.PLL TO TEMP1;

  15211  3 003125   000176 236100                    LDQ     126,,PR0
         3 003126   000022 772000                    QRL     18
         3 003127   200012 756100                    STQ     I,,AUTO
         3 003130   003140 710000 3                  TRA     s:15213+1

      999    15212    2           B$UPT$->B$MAP.CTRL(I) = (%PGIOM | %PGINMEM);

  15212  3 003131   000000 470400 xsym               LDP0    B$UPT$
         3 003132   200012 720100                    LXL0    I,,AUTO
         3 003133   000000 236110                    LDQ     0,X0,PR0
         3 003134   000077 376000 4                  ANQ     63
         3 003135   000044 276007                    ORQ     36,DL
         3 003136   000000 756110                    STQ     0,X0,PR0

     1000    15213    2           END;

  15213  3 003137   200012 054100                    AOS     I,,AUTO
         3 003140   200012 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:168  
         3 003141   200022 116100                    CMPQ    TEMP1,,AUTO
         3 003142   003131 604400 3                  TMOZ    s:15212

     1001    15214
     1002    15215        /* Now bring in the contiguous dynamic data pages.
     1003    15216        */
     1004    15217    1      TEMP1 = B$JIT.TDP - B$JIT.DDLL;

  15217  3 003143   000000 470400 xsym               LDP0    B$JIT$
         3 003144   000200 236100                    LDQ     128,,PR0
         3 003145   000022 772000                    QRL     18
         3 003146   200114 756100                    STQ     @ARS+1,,AUTO
         3 003147   000204 236100                    LDQ     132,,PR0
         3 003150   000022 772000                    QRL     18
         3 003151   200114 136100                    SBLQ    @ARS+1,,AUTO
         3 003152   200022 756100                    STQ     TEMP1,,AUTO

     1005    15218    1      IF TEMP1 > 0

  15218  3 003153   003167 604400 3                  TMOZ    s:15228

     1006    15219    2      THEN DO;

     1007    15220    2           TEMP2 = B$JIT.DDLL;

  15220  3 003154   000200 236100                    LDQ     128,,PR0
         3 003155   000022 772000                    QRL     18
         3 003156   200023 756100                    STQ     TEMP2,,AUTO

     1008    15221    2           CALL BRING_IN(TEMP1,TEMP2,JL_DYNDTYPE) ALTRET(GET_ERR);

  15221  3 003157   000025 236000 4                  LDQ     21
         3 003160   200105 756100                    STQ     @STARTPG+1,,AUTO
         3 003161   200023 631500                    EPPR1   TEMP2,,AUTO
         3 003162   200104 451500                    STP1    @PGS+1,,AUTO
         3 003163   200022 633500                    EPPR3   TEMP1,,AUTO
         3 003164   200103 453500                    STP3    FPT$READ+15,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:169  
         3 003165   006451 701000 3                  TSX1    BRING_IN
         3 003166   004075 702000 3                  TSX2    GET_ERR

     1009    15222    2           END;

     1010    15223
     1011    15224        /* Now for the non-contiguous dynamic data pages (if there are any)
     1012    15225           we need to precord first to get the key which tells us where to
     1013    15226           actually read in the saved data.
     1014    15227        */
     1015    15228    1      IF TEMP1 < JL$HEAD.DDPGS

  15228  3 003167   000000 470400 xsym               LDP0    B$SBUF1$
         3 003170   000015 236100                    LDQ     13,,PR0
         3 003171   000011 772000                    QRL     9
         3 003172   000777 376007                    ANQ     511,DL
         3 003173   200022 116100                    CMPQ    TEMP1,,AUTO
         3 003174   003250 604400 3                  TMOZ    s:15243

     1016    15229    2      THEN DO;

     1017    15230    2           FPT$PREC.V.N# = 0;

  15230  3 003175   200061 450100                    STZ     FPT$PREC+7,,AUTO

     1018    15231    3           DO I = TEMP1 TO JL$HEAD.DDPGS-1;

  15231  3 003176   200022 235100                    LDA     TEMP1,,AUTO
         3 003177   200012 755100                    STA     I,,AUTO
         3 003200   003242 710000 3                  TRA     s:15238+1

     1019    15232    3                CALL M$PRECORD(FPT$PREC) ALTRET(GET_ERR);

  15232  3 003201   200052 630500                    EPPR0   FPT$PREC,,AUTO
         3 003202   440003 713400                    CLIMB   alt,+16387
         3 003203   401000 401760                    pmme    nvectors=3
         3 003204   004075 702000 3                  TSX2    GET_ERR
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:170  

     1020    15233    3                TEMP2 = KEY.PGNO;

  15233  3 003205   200027 236100                    LDQ     KEY+1,,AUTO
         3 003206   000011 772000                    QRL     9
         3 003207   777777 376007                    ANQ     -1,DL
         3 003210   200023 756100                    STQ     TEMP2,,AUTO

     1021    15234    3                CALL MME$WGVP(%USERWSQ,TEMP2,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),

  15234  3 003211   200004 236100                    LDQ     @ERR,,AUTO
         3 003212   000101 235000 4                  LDA     65
         3 003213   200116 757100                    STAQ    @ARS+3,,AUTO
         3 003214   200023 630500                    EPPR0   TEMP2,,AUTO
         3 003215   200115 450500                    STP0    @ARS+2,,AUTO
         3 003216   000026 236000 4                  LDQ     22
         3 003217   200114 756100                    STQ     @ARS+1,,AUTO
         3 003220   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 003221   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 003222   000000 701000 xent               TSX1    MME$WGVP
         3 003223   004075 702000 3                  TSX2    GET_ERR

     1022    15235    3                  ERR) ALTRET(GET_ERR);
     1023    15236    3                FPT$READ.BUF_.BUF$ = PINCRW(B$USERIS$,(TEMP2 - %ISEGLO)*1024);

  15236  3 003224   200023 236100                    LDQ     TEMP2,,AUTO
         3 003225   000034 736000                    QLS     28
         3 003226   200000 136003                    SBLQ    65536,DU
         3 003227   000000 036000 xsym               ADLQ    B$USERIS$
         3 003230   200071 756100                    STQ     FPT$READ+5,,AUTO

     1024    15237    3                CALL READ_STAR(JL_FULLPAGE,JL_DYNDTYPE,N) ALTRET(GET_ERR);

  15237  3 003231   200014 630500                    EPPR0   N,,AUTO
         3 003232   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 003233   000025 236000 4                  LDQ     21
         3 003234   200112 756100                    STQ     @BUFSIZE+1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:171  
         3 003235   000013 236000 4                  LDQ     11
         3 003236   200111 756100                    STQ     TMP+3,,AUTO
         3 003237   006407 701000 3                  TSX1    READ_STAR
         3 003240   004075 702000 3                  TSX2    GET_ERR

     1025    15238    3                END;

  15238  3 003241   200012 054100                    AOS     I,,AUTO
         3 003242   000000 470400 xsym               LDP0    B$SBUF1$
         3 003243   000015 236100                    LDQ     13,,PR0
         3 003244   000011 772000                    QRL     9
         3 003245   000777 376007                    ANQ     511,DL
         3 003246   200012 116100                    CMPQ    I,,AUTO
         3 003247   003201 605400 3                  TPNZ    s:15232

     1026    15239    2           END;

     1027    15240
     1028    15241        /* Restore the user's dynamic data segments.
     1029    15242        */
     1030    15243    1      CALL READ_SEGS(%USERWSQ,B$USERLS$,ADDR(JL$HEAD.UDS(0)),

  15243  3 003250   000000 236000 xsym               LDQ     B$SBUF1$
         3 003251   000016 036003                    ADLQ    14,DU
         3 003252   200127 756100                    STQ     @ARS+12,,AUTO
         3 003253   000026 236000 4                  LDQ     22
         3 003254   200106 756100                    STQ     @DATATYPE+1,,AUTO
         3 003255   200127 631500                    EPPR1   @ARS+12,,AUTO
         3 003256   200105 451500                    STP1    @STARTPG+1,,AUTO
         3 003257   000027 236000 4                  LDQ     23
         3 003260   200104 756100                    STQ     @PGS+1,,AUTO
         3 003261   000026 236000 4                  LDQ     22
         3 003262   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 003263   005460 701000 3                  TSX1    READ_SEGS
         3 003264   004075 702000 3                  TSX2    GET_ERR

     1031    15244    1        JL_UDS1TYPE) ALTRET(GET_ERR);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:172  
     1032    15245
     1033    15246        /* Restore debugger and ASL TCBs before their data segments.
     1034    15247        */
     1035    15248    1      IF JL$HEAD.ASLTCB > 0

  15248  3 003265   000000 470400 xsym               LDP0    B$SBUF1$
         3 003266   000046 220100                    LDX0    38,,PR0
         3 003267   003306 600000 3                  TZE     s:15254

     1036    15249    2      THEN DO;

     1037    15250    2           TEMP1 = B$U.ASL;

  15250  3 003270   000000 471400 xsym               LDP1    S$CU$
         3 003271   100006 236100                    LDQ     6,,PR1
         3 003272   000777 376007                    ANQ     511,DL
         3 003273   200022 756100                    STQ     TEMP1,,AUTO

     1038    15251    2           CALL JSA$GETTCB (TEMP1) ALTRET (GET_ERR);

  15251  3 003274   200022 633500                    EPPR3   TEMP1,,AUTO
         3 003275   200114 453500                    STP3    @ARS+1,,AUTO
         3 003276   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 003277   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003300   000000 701000 xent               TSX1    JSA$GETTCB
         3 003301   004075 702000 3                  TSX2    GET_ERR

     1039    15252    2           CALL READ_TCB(JL_ATCBTYPE) ALTRET(GET_ERR);

  15252  3 003302   000031 236000 4                  LDQ     25
         3 003303   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 003304   005720 701000 3                  TSX1    READ_TCB
         3 003305   004075 702000 3                  TSX2    GET_ERR

     1040    15253    2           END;

     1041    15254    1      IF JL$HEAD.DBTCB > 0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:173  

  15254  3 003306   000000 470400 xsym               LDP0    B$SBUF1$
         3 003307   000046 720100                    LXL0    38,,PR0
         3 003310   003330 600000 3                  TZE     s:15263

     1042    15255    2      THEN DO;

     1043    15256    2           TEMP1 = B$U.DB;

  15256  3 003311   000000 471400 xsym               LDP1    S$CU$
         3 003312   100006 236100                    LDQ     6,,PR1
         3 003313   000011 772000                    QRL     9
         3 003314   000777 376007                    ANQ     511,DL
         3 003315   200022 756100                    STQ     TEMP1,,AUTO

     1044    15257    2           CALL JSA$GETTCB (TEMP1) ALTRET(GET_ERR);

  15257  3 003316   200022 633500                    EPPR3   TEMP1,,AUTO
         3 003317   200114 453500                    STP3    @ARS+1,,AUTO
         3 003320   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 003321   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003322   000000 701000 xent               TSX1    JSA$GETTCB
         3 003323   004075 702000 3                  TSX2    GET_ERR

     1045    15258    2           CALL READ_TCB(JL_DTCBTYPE) ALTRET(GET_ERR);

  15258  3 003324   000033 236000 4                  LDQ     27
         3 003325   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 003326   005720 701000 3                  TSX1    READ_TCB
         3 003327   004075 702000 3                  TSX2    GET_ERR

     1046    15259    2           END;

     1047    15260
     1048    15261        /* Now, get their data segments.
     1049    15262        */
     1050    15263    1      CALL READ_SEGS(%ASLWSQ,B$ASLLS$,ADDR(JL$HEAD.ASLDS(0)),
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:174  

  15263  3 003330   000000 236000 xsym               LDQ     B$SBUF1$
         3 003331   000026 036003                    ADLQ    22,DU
         3 003332   200130 756100                    STQ     @ARS+13,,AUTO
         3 003333   000035 236000 4                  LDQ     29
         3 003334   200106 756100                    STQ     @DATATYPE+1,,AUTO
         3 003335   200130 630500                    EPPR0   @ARS+13,,AUTO
         3 003336   200105 450500                    STP0    @STARTPG+1,,AUTO
         3 003337   000036 236000 4                  LDQ     30
         3 003340   200104 756100                    STQ     @PGS+1,,AUTO
         3 003341   000024 236000 4                  LDQ     20
         3 003342   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 003343   005460 701000 3                  TSX1    READ_SEGS
         3 003344   004075 702000 3                  TSX2    GET_ERR

     1051    15264    1        JL_ADS1TYPE) ALTRET(GET_ERR);
     1052    15265    1      CALL READ_SEGS(%DBWSQ,B$DBLS$,ADDR(JL$HEAD.DBDS(0)),

  15265  3 003345   000000 236000 xsym               LDQ     B$SBUF1$
         3 003346   000036 036003                    ADLQ    30,DU
         3 003347   200131 756100                    STQ     @ARS+14,,AUTO
         3 003350   000040 236000 4                  LDQ     32
         3 003351   200106 756100                    STQ     @DATATYPE+1,,AUTO
         3 003352   200131 630500                    EPPR0   @ARS+14,,AUTO
         3 003353   200105 450500                    STP0    @STARTPG+1,,AUTO
         3 003354   000041 236000 4                  LDQ     33
         3 003355   200104 756100                    STQ     @PGS+1,,AUTO
         3 003356   000023 236000 4                  LDQ     19
         3 003357   200103 756100                    STQ     FPT$READ+15,,AUTO
         3 003360   005460 701000 3                  TSX1    READ_SEGS
         3 003361   004075 702000 3                  TSX2    GET_ERR

     1053    15266    1        JL_DDS1TYPE) ALTRET(GET_ERR);
     1054    15267
     1055    15268        /* Read in the library procedure if unshared.
     1056    15269        */
     1057    15270    1      IF JL$HEAD.LIBPGS ~= 0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:175  

  15270  3 003362   000000 470400 xsym               LDP0    B$SBUF1$
         3 003363   000010 236100                    LDQ     8,,PR0
         3 003364   777000 316007                    CANQ    -512,DL
         3 003365   003406 600000 3                  TZE     s:15280

     1058    15271    2      THEN DO;

     1059    15272    2           TEMP1 = JL$HEAD.LIBPGS;

  15272  3 003366   000010 236100                    LDQ     8,,PR0
         3 003367   000011 772000                    QRL     9
         3 003370   000777 376007                    ANQ     511,DL
         3 003371   200022 756100                    STQ     TEMP1,,AUTO

     1060    15273    2           TEMP2 = B$JIT.LLL;

  15273  3 003372   000000 471400 xsym               LDP1    B$JIT$
         3 003373   100214 236100                    LDQ     140,,PR1
         3 003374   777777 376007                    ANQ     -1,DL
         3 003375   200023 756100                    STQ     TEMP2,,AUTO

     1061    15274    2           CALL BRING_IN(TEMP1,TEMP2,JL_LIBTYPE) ALTRET(GET_ERR);

  15274  3 003376   000043 236000 4                  LDQ     35
         3 003377   200105 756100                    STQ     @STARTPG+1,,AUTO
         3 003400   200023 633500                    EPPR3   TEMP2,,AUTO
         3 003401   200104 453500                    STP3    @PGS+1,,AUTO
         3 003402   200022 634500                    EPPR4   TEMP1,,AUTO
         3 003403   200103 454500                    STP4    FPT$READ+15,,AUTO
         3 003404   006451 701000 3                  TSX1    BRING_IN
         3 003405   004075 702000 3                  TSX2    GET_ERR

     1062    15275    2           END;

     1063    15276
     1064    15277        /* Here all the DCBS are searched and any DCB that is open to a
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:176  
     1065    15278            Virtual Segment is remapped or opened.
     1066    15279        */
     1067    15280    1      I = B$ROSEG.NUMDCBS;

  15280  3 003406   000000 470400 xsym               LDP0    B$ROSEG$
         3 003407   000002 236100                    LDQ     2,,PR0
         3 003410   000022 772000                    QRL     18
         3 003411   200012 756100                    STQ     I,,AUTO

     1068    15281
     1069    15282    1      B$JIT.VIRTUAL = VIRTUAL;

  15282  3 003412   200035 236100                    LDQ     VIRTUAL,,AUTO
         3 003413   000000 471400 xsym               LDP1    B$JIT$
         3 003414   100217 756100                    STQ     143,,PR1

     1070    15283    1      IF NOT (B$JIT.JUNK&%JJ_GETTING#) THEN

  15283  3 003415   100315 220100                    LDX0    205,,PR1
         3 003416   020000 360003                    ANX0    8192,DU
         3 003417   003471 601000 3                  TNZ     s:15301

     1071    15284    2      DO WHILE (I >= %M$1STDCB#);

  15284  3 003420   200012 235100                    LDA     I,,AUTO
         3 003421   000012 115007                    CMPA    10,DL
         3 003422   003471 604000 3                  TMI     s:15301

     1072    15285    2           DCB$ = B$ROSEG.DCBPTR$->B$RODCB$(I);

  15285  3 003423   000000 470400 xsym               LDP0    B$ROSEG$
         3 003424   000000 471500                    LDP1    0,,PR0
         3 003425   200012 720100                    LXL0    I,,AUTO
         3 003426   100000 236110                    LDQ     0,X0,PR1
         3 003427   200021 756100                    STQ     DCB$,,AUTO

     1073    15286    2           IF DCB$ ~= ADDR(NIL)
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:177  

  15286  3 003430   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 003431   003464 600000 3                  TZE     s:15295

     1074    15287    2           THEN IF %DS2#<=DCB$->F$DCB.ACS AND DCB$->F$DCB.ACS<=%DS8#

  15287  3 003432   200021 473500                    LDP3    DCB$,,AUTO
         3 003433   300036 236100                    LDQ     30,,PR3
         3 003434   000777 376007                    ANQ     511,DL
         3 003435   000005 116007                    CMPQ    5,DL
         3 003436   003464 602000 3                  TNC     s:15295
         3 003437   000014 116007                    CMPQ    12,DL
         3 003440   003464 603000 3                  TRC     s:15295

     1075    15288    2                THEN IF DCB$->F$DCB.FCD

  15288  3 003441   300031 236100                    LDQ     25,,PR3
         3 003442   020000 316007                    CANQ    8192,DL
         3 003443   003464 600000 3                  TZE     s:15295

     1076    15289    3                     THEN DO;

     1077    15290    3                          B$JIT.DCB$ = DCB$;

  15290  3 003444   200021 236100                    LDQ     DCB$,,AUTO
         3 003445   000000 474400 xsym               LDP4    B$JIT$
         3 003446   400232 756100                    STQ     154,,PR4

     1078    15291    3                          CALL FMI$INIT;

  15291  3 003447   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 003450   000000 701000 xent               TSX1    FMI$INIT
         3 003451   000000 011000                    NOP     0

     1079    15292    3                          CALL UQB$MDEQ (DCB$->F$DCB.CFU$);

  15292  3 003452   200021 236100                    LDQ     DCB$,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:178  
         3 003453   000066 036003                    ADLQ    54,DU
         3 003454   200114 756100                    STQ     @ARS+1,,AUTO
         3 003455   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 003456   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003457   000000 701000 xent               TSX1    UQB$MDEQ
         3 003460   000000 011000                    NOP     0

     1080    15293    3                          DCB$->F$DCB.ENQF = '0'B;

  15293  3 003461   200021 470500                    LDP0    DCB$,,AUTO
         3 003462   000102 236000 4                  LDQ     66
         3 003463   000064 356100                    ANSQ    52,,PR0

     1081    15294    3                          END;

     1082    15295    2           I = I - 1;

  15295  3 003464   000001 336007                    LCQ     1,DL
         3 003465   200012 056100                    ASQ     I,,AUTO

     1083    15296    2           END;

  15296  3 003466   200012 235100                    LDA     I,,AUTO
         3 003467   000012 115007                    CMPA    10,DL
         3 003470   003423 605000 3                  TPL     s:15285

     1084    15297        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:179  
     1085    15298        /* Read the user's page table into SBUF2 and restore any CVMed
     1086    15299           pages to this user's page table.
     1087    15300        */
     1088    15301    1      FPT$READ.BUF_.BUF$ = B$SBUF2$;

  15301  3 003471   000000 236000 xsym               LDQ     B$SBUF2$
         3 003472   200071 756100                    STQ     FPT$READ+5,,AUTO

     1089    15302    1      CALL READ_STAR(JL_FULLPAGE,JL_PGTBLTYPE,N) ALTRET(GET_ERR);

  15302  3 003473   200014 630500                    EPPR0   N,,AUTO
         3 003474   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 003475   000046 236000 4                  LDQ     38
         3 003476   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 003477   000013 236000 4                  LDQ     11
         3 003500   200111 756100                    STQ     TMP+3,,AUTO
         3 003501   006407 701000 3                  TSX1    READ_STAR
         3 003502   004075 702000 3                  TSX2    GET_ERR

     1090    15303
     1091    15304    1      IF JL$HEAD.CVMPGS > 0

  15304  3 003503   000000 470400 xsym               LDP0    B$SBUF1$
         3 003504   000000 236100                    LDQ     0,,PR0
         3 003505   777000 316003                    CANQ    -512,DU
         3 003506   003534 600000 3                  TZE     s:15312

     1092    15305    2      THEN DO I = B$JIT.TDP TO B$JIT.EUP;

  15305  3 003507   000000 471400 xsym               LDP1    B$JIT$
         3 003510   100204 236100                    LDQ     132,,PR1
         3 003511   000022 772000                    QRL     18
         3 003512   200012 756100                    STQ     I,,AUTO
         3 003513   003527 710000 3                  TRA     s:15307+1

     1093    15306    2           IF B$OLDPT.SCTRL(I) & %SCCVM THEN B$PT(I) = B$OLDPT(I);

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:180  
  15306  3 003514   000000 470400 xsym               LDP0    B$SBUF2$
         3 003515   200012 720100                    LXL0    I,,AUTO
         3 003516   000000 236110                    LDQ     0,X0,PR0
         3 003517   000022 736000                    QLS     18
         3 003520   777400 376003                    ANQ     -256,DU
         3 003521   001000 376003                    ANQ     512,DU
         3 003522   003526 600000 3                  TZE     s:15307

  15306  3 003523   000000 236110                    LDQ     0,X0,PR0
         3 003524   000000 471400 xsym               LDP1    B$UPT$
         3 003525   100000 756110                    STQ     0,X0,PR1

     1094    15307    2           END;

  15307  3 003526   200012 054100                    AOS     I,,AUTO
         3 003527   000000 470400 xsym               LDP0    B$JIT$
         3 003530   000204 236100                    LDQ     132,,PR0
         3 003531   777777 376007                    ANQ     -1,DL
         3 003532   200012 116100                    CMPQ    I,,AUTO
         3 003533   003514 605000 3                  TPL     s:15306

     1095    15308
     1096    15309        /* If DELTA had access to procedure at the time the image was
     1097    15310           written, restore that access.
     1098    15311        */
     1099    15312    1      IF B$U.APR = 0

  15312  3 003534   000000 470400 xsym               LDP0    S$CU$
         3 003535   000007 236100                    LDQ     7,,PR0
         3 003536   777700 316003                    CANQ    -64,DU
         3 003537   003640 601000 3                  TNZ     s:15330

     1100    15313    2      THEN DO;

     1101    15314    2           TEMP1 = B$JIT.PLL + B$JIT.PCP - 1;

  15314  3 003540   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:181  
         3 003541   100201 236100                    LDQ     129,,PR1
         3 003542   000022 772000                    QRL     18
         3 003543   200114 756100                    STQ     @ARS+1,,AUTO
         3 003544   100176 236100                    LDQ     126,,PR1
         3 003545   000022 772000                    QRL     18
         3 003546   200114 036100                    ADLQ    @ARS+1,,AUTO
         3 003547   000001 136007                    SBLQ    1,DL
         3 003550   200022 756100                    STQ     TEMP1,,AUTO

     1102    15315    3           DO I = B$JIT.PLL TO TEMP1;

  15315  3 003551   100176 236100                    LDQ     126,,PR1
         3 003552   000022 772000                    QRL     18
         3 003553   200012 756100                    STQ     I,,AUTO
         3 003554   003574 710000 3                  TRA     s:15318+1

     1103    15316    3                IF B$OLDPT.CTRL(I) & %PGWRITE

  15316  3 003555   000000 470400 xsym               LDP0    B$SBUF2$
         3 003556   200012 720100                    LXL0    I,,AUTO
         3 003557   000000 236110                    LDQ     0,X0,PR0
         3 003560   000036 736000                    QLS     30
         3 003561   200000 376003                    ANQ     65536,DU
         3 003562   003573 600000 3                  TZE     s:15318

     1104    15317    3                THEN B$PT.CTRL(I) = B$PT.CTRL(I) | %PGWRITE;

  15317  3 003563   000000 471400 xsym               LDP1    B$UPT$
         3 003564   100000 236110                    LDQ     0,X0,PR1
         3 003565   000036 736000                    QLS     30
         3 003566   200000 276003                    ORQ     65536,DU
         3 003567   000036 772000                    QRL     30
         3 003570   100000 676110                    ERQ     0,X0,PR1
         3 003571   000077 376007                    ANQ     63,DL
         3 003572   100000 656110                    ERSQ    0,X0,PR1

     1105    15318    3                END;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:182  

  15318  3 003573   200012 054100                    AOS     I,,AUTO
         3 003574   200012 236100                    LDQ     I,,AUTO
         3 003575   200022 116100                    CMPQ    TEMP1,,AUTO
         3 003576   003555 604400 3                  TMOZ    s:15316

     1106    15319
     1107    15320    2           IF B$JIT.PCL ~= 0

  15320  3 003577   000000 470400 xsym               LDP0    B$JIT$
         3 003600   000215 720100                    LXL0    141,,PR0
         3 003601   003640 600000 3                  TZE     s:15330

     1108    15321    3           THEN DO;

     1109    15322    3                TEMP1 = B$JIT.LLL + B$JIT.PCL - 1;

  15322  3 003602   000215 236100                    LDQ     141,,PR0
         3 003603   777777 376007                    ANQ     -1,DL
         3 003604   200114 756100                    STQ     @ARS+1,,AUTO
         3 003605   000214 236100                    LDQ     140,,PR0
         3 003606   777777 376007                    ANQ     -1,DL
         3 003607   200114 036100                    ADLQ    @ARS+1,,AUTO
         3 003610   000001 136007                    SBLQ    1,DL
         3 003611   200022 756100                    STQ     TEMP1,,AUTO

     1110    15323    4                DO I = B$JIT.LLL TO TEMP1;

  15323  3 003612   000214 236100                    LDQ     140,,PR0
         3 003613   777777 376007                    ANQ     -1,DL
         3 003614   200012 756100                    STQ     I,,AUTO
         3 003615   003635 710000 3                  TRA     s:15326+1

     1111    15324    4                     IF B$OLDPT.CTRL(I) & %PGWRITE

  15324  3 003616   000000 470400 xsym               LDP0    B$SBUF2$
         3 003617   200012 720100                    LXL0    I,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:183  
         3 003620   000000 236110                    LDQ     0,X0,PR0
         3 003621   000036 736000                    QLS     30
         3 003622   200000 376003                    ANQ     65536,DU
         3 003623   003634 600000 3                  TZE     s:15326

     1112    15325    4                     THEN B$PT.CTRL(I) = B$PT.CTRL(I) | %PGWRITE;

  15325  3 003624   000000 471400 xsym               LDP1    B$UPT$
         3 003625   100000 236110                    LDQ     0,X0,PR1
         3 003626   000036 736000                    QLS     30
         3 003627   200000 276003                    ORQ     65536,DU
         3 003630   000036 772000                    QRL     30
         3 003631   100000 676110                    ERQ     0,X0,PR1
         3 003632   000077 376007                    ANQ     63,DL
         3 003633   100000 656110                    ERSQ    0,X0,PR1

     1113    15326    4                     END;

  15326  3 003634   200012 054100                    AOS     I,,AUTO
         3 003635   200012 236100                    LDQ     I,,AUTO
         3 003636   200022 116100                    CMPQ    TEMP1,,AUTO
         3 003637   003616 604400 3                  TMOZ    s:15324

     1114    15327    3                END;

     1115    15328    2           END;

     1116    15329        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:184  
     1117    15330    1      IF JL$HEAD.DOLST_RECS > 0 THEN

  15330  3 003640   000000 470400 xsym               LDP0    B$SBUF1$
         3 003641   000010 236100                    LDQ     8,,PR0
         3 003642   000777 316007                    CANQ    511,DL
         3 003643   003646 600000 3                  TZE     s:15334

     1118    15331    1           CALL READ_DOLIST ALTRET(GET_ERR);

  15331  3 003644   006255 701000 3                  TSX1    READ_DOLIST
         3 003645   004075 702000 3                  TSX2    GET_ERR

     1119    15332        /* Read the assign/merge info into SBUF2.
     1120    15333        */
     1121    15334    1      IF JL$HEAD.AMR_SIZE ~= 0

  15334  3 003646   000000 470400 xsym               LDP0    B$SBUF1$
         3 003647   000145 235100                    LDA     101,,PR0
         3 003650   003664 600000 3                  TZE     s:15343

     1122    15335    2      THEN DO;

     1123    15336    2           FPT$READ.BUF_.BUF$ = B$SBUF2$;

  15336  3 003651   000000 236000 xsym               LDQ     B$SBUF2$
         3 003652   200071 756100                    STQ     FPT$READ+5,,AUTO

     1124    15337    2           CALL READ_STAR(JL$HEAD.AMR_SIZE,JL_AMRTYPE,N) ALTRET(GET_ERR);

  15337  3 003653   200014 631500                    EPPR1   N,,AUTO
         3 003654   200113 451500                    STP1    @KEYTYPE+1,,AUTO
         3 003655   000050 236000 4                  LDQ     40
         3 003656   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 003657   000000 236000 xsym               LDQ     B$SBUF1$
         3 003660   000145 036003                    ADLQ    101,DU
         3 003661   200111 756100                    STQ     TMP+3,,AUTO
         3 003662   006407 701000 3                  TSX1    READ_STAR
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:185  
         3 003663   004075 702000 3                  TSX2    GET_ERR

     1125    15338    2           END;

     1126    15339
     1127    15340        /* Finally, precord one record forward and make sure we're at the
     1128    15341           trailer record again. If not, something is very wrong.
     1129    15342        */
     1130    15343    1      FPT$PREC.V.N# = 0;

  15343  3 003664   200061 450100                    STZ     FPT$PREC+7,,AUTO

     1131    15344    1      CALL M$MPRECORD(FPT$PREC) ALTRET(GET_ERR);

  15344  3 003665   200052 630500                    EPPR0   FPT$PREC,,AUTO
         3 003666   200114 450500                    STP0    @ARS+1,,AUTO
         3 003667   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 003670   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003671   000000 701000 xent               TSX1    M$MPRECORD
         3 003672   004075 702000 3                  TSX2    GET_ERR

     1132    15345    1      IF KEY.TYPE ~= JL_TRLRTYPE

  15345  3 003673   200027 236100                    LDQ     KEY+1,,AUTO
         3 003674   777000 376003                    ANQ     -512,DU
         3 003675   777000 116003                    CMPQ    -512,DU
         3 003676   003701 600000 3                  TZE     s:15351

     1133    15346    1      THEN CALL SC_BADNF;

  15346  3 003677   000000 713400 xsym               CLIMB   SC_BADNF
         3 003700   000000 600000 xsid               climb   nvectors=         0

     1134    15347
     1135    15348        /* If its LDLNK returning, delete this record set.
     1136    15349        Close the star-n file, in any case.(with REL if LNKCNT = 1)
     1137    15350        */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:186  
     1138    15351    1      J_FPT_CL_SAVE.V.DCB# = %M$STAR#;

  15351  3 003701   000001 220003                    LDX0    1,DU
         3 003702   000032 740000 xsym               STX0    J_FPT_CL_SAVE+26

     1139    15352    1      J_FPT_CL_REL.V.DCB# = %M$STAR#;

  15352  3 003703   000032 740000 xsym               STX0    J_FPT_CL_REL+26

     1140    15353    1      IF B$JIT.JUNK & %JJ_LNKRETIP#

  15353  3 003704   000000 470400 xsym               LDP0    B$JIT$
         3 003705   000315 221100                    LDX1    205,,PR0
         3 003706   000002 361003                    ANX1    2,DU
         3 003707   003725 600000 3                  TZE     s:15364

     1141    15354    2      THEN DO;

     1142    15355    2           IF B$JIT.LNKCNT = 1

  15355  3 003710   000314 236100                    LDQ     204,,PR0
         3 003711   000777 376007                    ANQ     511,DL
         3 003712   000001 116007                    CMPQ    1,DL
         3 003713   003721 601000 3                  TNZ     s:15361

     1143    15356    3           THEN DO;

     1144    15357    3                CALL M$MCLOSE (J_FPT_CL_REL) ALTRET (RRET1);

  15357  3 003714   000103 630400 4                  EPPR0   67
         3 003715   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003716   000000 701000 xent               TSX1    M$MCLOSE
         3 003717   003731 702000 3                  TSX2    RRET1

     1145    15358    3                GOTO RRET1;

  15358  3 003720   003731 710000 3                  TRA     RRET1
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:187  

     1146    15359    3                END;
     1147    15360    2           ELSE
     1148    15361    2                CALL JLU$DELSET (IDN);

  15361  3 003721   200003 630500                    EPPR0   @IDN,,AUTO
         3 003722   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003723   000000 701000 xent               TSX1    JLU$DELSET
         3 003724   000000 011000                    NOP     0

     1149    15362    2           END;

     1150    15363
     1151    15364    1      CALL M$MCLOSE (J_FPT_CL_SAVE) ALTRET(RRET1);

  15364  3 003725   000104 630400 4                  EPPR0   68
         3 003726   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003727   000000 701000 xent               TSX1    M$MCLOSE
         3 003730   003731 702000 3                  TSX2    RRET1

  15364  3 003731                       RRET1        null
     1152    15365    1   RRET1: ;
     1153    15366
     1154    15367        /* Re-write the assing/merge info into *A.
     1155    15368        */
     1156    15369    1      IF JL$HEAD.AMR_SIZE ~= 0

  15369  3 003731   000000 470400 xsym               LDP0    B$SBUF1$
         3 003732   000145 235100                    LDA     101,,PR0
         3 003733   003737 600000 3                  TZE     s:15378

     1157    15370    2      THEN DO;

     1158    15371    2           CALL JLU$RESTORE_AMR;

  15371  3 003734   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 003735   000000 701000 xent               TSX1    JLU$RESTORE_AMR
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:188  
         3 003736   000000 011000                    NOP     0

     1159    15372    2           END;

     1160    15373
     1161    15374        /* If the current user has a terminal, then try to restore any
     1162    15375           saved terminal info.
     1163    15376           Restore Dribble's prompts, if dribbling.
     1164    15377        */
     1165    15378    1      IF (JL$HEAD.INFO_SIZE > 0) AND NOT(B$JIT.RNST & %RS_DROP#)

  15378  3 003737   000000 470400 xsym               LDP0    B$SBUF1$
         3 003740   000203 236100                    LDQ     131,,PR0
         3 003741   777000 316003                    CANQ    -512,DU
         3 003742   004034 600000 3                  TZE     SKIP_IT
         3 003743   000000 471400 xsym               LDP1    B$JIT$
         3 003744   100314 236100                    LDQ     204,,PR1
         3 003745   777000 376003                    ANQ     -512,DU
         3 003746   200000 376003                    ANQ     65536,DU
         3 003747   004034 601000 3                  TNZ     SKIP_IT
         3 003750   100314 236100                    LDQ     204,,PR1
         3 003751   000011 736000                    QLS     9
         3 003752   777000 376003                    ANQ     -512,DU
         3 003753   200000 376003                    ANQ     65536,DU
         3 003754   004034 601000 3                  TNZ     SKIP_IT
         3 003755   100000 236100                    LDQ     0,,PR1
         3 003756   740000 376003                    ANQ     -16384,DU
         3 003757   140000 116003                    CMPQ    49152,DU
         3 003760   004034 601000 3                  TNZ     SKIP_IT

     1166    15379    1        AND NOT(B$JIT.FRS & %RS_DROP#) AND (B$JIT.MODE = %M_INT#)
     1167    15380    2      THEN DO;

     1168    15381    2           M$UC$ = B$M$UC$;

  15381  3 003761   000000 236000 xsym               LDQ     B$M$UC$
         3 003762   200007 756100                    STQ     M$UC$,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:189  

     1169    15382    2           M$UC.UB$ = ADDR(JL$HEAD.TERM_INFO);

  15382  3 003763   000000 236000 xsym               LDQ     B$SBUF1$
         3 003764   000001 036000 4                  ADLQ    1
         3 003765   200007 473500                    LDP3    M$UC$,,AUTO
         3 003766   300075 756100                    STQ     61,,PR3

     1170    15383    2           M$UC.UBYTES = JL$HEAD.INFO_SIZE;

  15383  3 003767   000203 236100                    LDQ     131,,PR0
         3 003770   000033 772000                    QRL     27
         3 003771   300076 756100                    STQ     62,,PR3

     1171    15384    2           M$UC.WAIT = 1;

  15384  3 003772   000020 236007                    LDQ     16,DL
         3 003773   300064 256100                    ORSQ    52,,PR3

     1172    15385    2           B$JIT.DCB$ = M$UC$;

  15385  3 003774   200007 236100                    LDQ     M$UC$,,AUTO
         3 003775   100232 756100                    STQ     154,,PR1

     1173    15386    2           PCODE = ASCBIN(%VFC_SPR);

  15386  3 003776   025000 236003                    LDQ     10752,DU
         3 003777   200034 756100                    STQ     PCODE,,AUTO

     1174    15387
     1175    15388    2           CPFLAGS = B$JIT.CPFLAGS1;

  15388  3 004000   100143 236100                    LDQ     99,,PR1
         3 004001   200031 756100                    STQ     CPFLAGS,,AUTO

     1176    15389    2           B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 &~ %CP_DRIBBLE#);

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:190  
  15389  3 004002   000045 236000 1                  LDQ     FPT_READ+15
         3 004003   000027 676000 xsym               ERQ     B_VECTNIL+23
         3 004004   100143 376100                    ANQ     99,,PR1
         3 004005   100143 756100                    STQ     99,,PR1

     1177    15390    2           CALL KIA$UCIOD(MFC_WRITE,%DVBYTE_VFC#,PCODE,0) ALTRET(SKIP_IT);

  15390  3 004006   000002 236000 4                  LDQ     2
         3 004007   200117 756100                    STQ     @ARS+4,,AUTO
         3 004010   200034 634500                    EPPR4   PCODE,,AUTO
         3 004011   200116 454500                    STP4    @ARS+3,,AUTO
         3 004012   000106 237000 4                  LDAQ    70
         3 004013   200114 757100                    STAQ    @ARS+1,,AUTO
         3 004014   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004015   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004016   000000 701000 xent               TSX1    KIA$UCIOD
         3 004017   004034 702000 3                  TSX2    SKIP_IT

     1178    15391    2           B$JIT.CPFLAGS1 = CPFLAGS;

  15391  3 004020   200031 236100                    LDQ     CPFLAGS,,AUTO
         3 004021   000000 470400 xsym               LDP0    B$JIT$
         3 004022   000143 756100                    STQ     99,,PR0

     1179    15392
     1180    15393    2           IF B$JIT.CPFLAGS1 & %CP_DRIBBLE#

  15393  3 004023   000045 376000 1                  ANQ     FPT_READ+15
         3 004024   004034 600000 3                  TZE     SKIP_IT

     1181    15394    2           THEN CALL UMD$RSTRPRMPT (JL$HEAD.UD$PRMPT);

  15394  3 004025   000000 236000 xsym               LDQ     B$SBUF1$
         3 004026   000150 036003                    ADLQ    104,DU
         3 004027   200114 756100                    STQ     @ARS+1,,AUTO
         3 004030   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004031   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:191  
         3 004032   000000 701000 xent               TSX1    UMD$RSTRPRMPT
         3 004033   000000 011000                    NOP     0

     1182    15395    2   SKIP_IT: END;

  15395  3 004034                       SKIP_IT      null
     1183    15396
     1184    15397
     1185    15398        /* Return the M$LM UTS in ERR.
     1186    15399        */
     1187    15400    1      ERR = JL$HEAD.APR_UTS;

  15400  3 004034   000000 470400 xsym               LDP0    B$SBUF1$
         3 004035   200004 471500                    LDP1    @ERR,,AUTO
         3 004036   000011 235100                    LDA     9,,PR0
         3 004037   100000 755100                    STA     0,,PR1

     1188    15401
     1189    15402        /* Free the two special buffers.
     1190    15403        */
     1191    15404    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1) ALTRET(RRET2);

  15404  3 004040   200022 633500                    EPPR3   TEMP1,,AUTO
         3 004041   200117 453500                    STP3    @ARS+4,,AUTO
         3 004042   200022 634500                    EPPR4   TEMP1,,AUTO
         3 004043   200116 454500                    STP4    @ARS+3,,AUTO
         3 004044   000064 237000 4                  LDAQ    52
         3 004045   200114 757100                    STAQ    @ARS+1,,AUTO
         3 004046   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004047   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004050   000000 701000 xent               TSX1    MME$WFVP
         3 004051   004052 702000 3                  TSX2    RRET2

     1192    15405    1   RRET2: CALL MME$WFVP(%USERWSQ,%SBUF2PG,TEMP1,TEMP1) ALTRET(RRET3);

  15405  3 004052   200022 630500       RRET2        EPPR0   TEMP1,,AUTO
         3 004053   200117 450500                    STP0    @ARS+4,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:192  
         3 004054   200022 631500                    EPPR1   TEMP1,,AUTO
         3 004055   200116 451500                    STP1    @ARS+3,,AUTO
         3 004056   000062 237000 4                  LDAQ    50
         3 004057   200114 757100                    STAQ    @ARS+1,,AUTO
         3 004060   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004061   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004062   000000 701000 xent               TSX1    MME$WFVP
         3 004063   004064 702000 3                  TSX2    RRET3

  15400  3 004064                       RRET3        null
     1193    15406    1   RRET3: ;
     1194    15407
     1195    15408        /* Reg to get back the processors we may need.
     1196    15409        */
     1197    15410    1      CALL SSR$REG(%SS_AP);

  15410  3 004064   000111 630400 4                  EPPR0   73
         3 004065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004066   000000 701000 xent               TSX1    SSR$REG
         3 004067   000000 011000                    NOP     0

     1198    15411    1      RETURN;

  15411  3 004070   000000 702200 xent               TSX2  ! X66_ARET

     1199    15412
     1200    15413        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:193  
     1201    15414
     1202    15415    1   PERR1:
     1203    15416    1      ERR = %E$JQNOPROC;

  15416  3 004071   000512 235007       PERR1        LDA     330,DL
         3 004072   200004 470500                    LDP0    @ERR,,AUTO
         3 004073   000000 755100                    STA     0,,PR0

     1204    15417    1      GOTO BUF_RTN;

  15417  3 004074   004132 710000 3                  TRA     BUF_RTN

     1205    15418
     1206    15419        /*E*    ERROR:  JLS-E$JQNOPROC-4
     1207    15420                MESSAGE: Processor needed by SAVE file not in system.
     1208    15421        */
     1209    15422
     1210    15423    1   GET_ERR:
     1211    15424    2      IF B$JIT.ERR.CODE ~= 0 THEN DO;

  15424  3 004075   000000 470400 xsym  GET_ERR      LDP0    B$JIT$
         3 004076   000012 236100                    LDQ     10,,PR0
         3 004077   377770 316007                    CANQ    131064,DL
         3 004100   004121 600000 3                  TZE     s:15430

     1212    15425    2           ERR = B$JIT.ERR.CODE;

  15425  3 004101   200004 471500                    LDP1    @ERR,,AUTO
         3 004102   000012 236100                    LDQ     10,,PR0
         3 004103   000003 772000                    QRL     3
         3 004104   037777 376007                    ANQ     16383,DL
         3 004105   100000 756100                    STQ     0,,PR1

     1213    15426    2           IF ERR < %E$FREC OR ERR > %E$GPIO OR B$M$STAR$->F$DCB.STARX = 5

  15426  3 004106   000046 116007                    CMPQ    38,DL
         3 004107   004117 602000 3                  TNC     s:15427
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:194  
         3 004110   000065 116007                    CMPQ    53,DL
         3 004111   004117 603000 3                  TRC     s:15427
         3 004112   000000 473400 xsym               LDP3    B$M$STAR$
         3 004113   300064 236100                    LDQ     52,,PR3
         3 004114   007000 376007                    ANQ     3584,DL
         3 004115   005000 116007                    CMPQ    2560,DL
         3 004116   004121 601000 3                  TNZ     s:15430

     1214    15427    2           THEN CALL SC_IOERRNF;

  15427  3 004117   000000 713400 xsym               CLIMB   SC_IOERRNF
         3 004120   000000 600000 xsid               climb   nvectors=         0

     1215    15428    2           END;

     1216    15429                                                /* Take a snapshot dump               */
     1217    15430    1      IF B$JIT.ERR.CODE ~= 0 THEN ERR = B$JIT.ERR.CODE;

  15430  3 004121   000000 470400 xsym               LDP0    B$JIT$
         3 004122   000012 236100                    LDQ     10,,PR0
         3 004123   377770 316007                    CANQ    131064,DL
         3 004124   004132 600000 3                  TZE     BUF_RTN

  15430  3 004125   200004 471500                    LDP1    @ERR,,AUTO
         3 004126   000012 236100                    LDQ     10,,PR0
         3 004127   000003 772000                    QRL     3
         3 004130   037777 376007                    ANQ     16383,DL
         3 004131   100000 756100                    STQ     0,,PR1

  15430  3 004132                       BUF_RTN      null
     1218    15431
     1219    15432        /* Free the two special buffers.
     1220    15433        */
     1221    15434    1   BUF_RTN: ;
     1222    15435    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1) ALTRET(BRET2);

  15435  3 004132   200022 630500                    EPPR0   TEMP1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:195  
         3 004133   200117 450500                    STP0    @ARS+4,,AUTO
         3 004134   200022 631500                    EPPR1   TEMP1,,AUTO
         3 004135   200116 451500                    STP1    @ARS+3,,AUTO
         3 004136   000064 237000 4                  LDAQ    52
         3 004137   200114 757100                    STAQ    @ARS+1,,AUTO
         3 004140   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004141   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004142   000000 701000 xent               TSX1    MME$WFVP
         3 004143   004144 702000 3                  TSX2    BRET2

     1223    15436    1   BRET2: CALL MME$WFVP(%USERWSQ,%SBUF2PG,TEMP1,TEMP1) ALTRET(BRET3);

  15436  3 004144   200022 630500       BRET2        EPPR0   TEMP1,,AUTO
         3 004145   200117 450500                    STP0    @ARS+4,,AUTO
         3 004146   200022 631500                    EPPR1   TEMP1,,AUTO
         3 004147   200116 451500                    STP1    @ARS+3,,AUTO
         3 004150   000062 237000 4                  LDAQ    50
         3 004151   200114 757100                    STAQ    @ARS+1,,AUTO
         3 004152   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004153   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004154   000000 701000 xent               TSX1    MME$WFVP
         3 004155   004156 702000 3                  TSX2    BRET3

  15436  3 004156                       BRET3        null
     1224    15437    1   BRET3: ;
     1225    15438    1      ALTRETURN;

  15438  3 004156   000000 702200 xent               TSX2  ! X66_AALT

     1226    15439
     1227    15440        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:196  
     1228    15441
     1229    15442        /*************************************************************
     1230    15443         *                                                           *
     1231    15444         *                     JLS$CLEANUP                           *
     1232    15445         *                                                           *
     1233    15446         *************************************************************/
     1234    15447
     1235    15448        /*F*   NAME:   JLS$CLEANUP
     1236    15449
     1237    15450               PURPOSE:  To clean up after any M$LINKs when a non-returning
     1238    15451                         abort condition occurs.
     1239    15452
     1240    15453        */
     1241    15454    1   JLS$CLEANUP: ENTRY ALTRET;              /* Altret is never taken              */

  15454  3 004157   000000 700200 xent  JLS$CLEANUP  TSX0  ! X66_AUTO_3
         3 004160   000142 000003                    ZERO    98,3

     1242    15455
     1243    15456        /* Begin by determining if the *N file exists and is accessable.
     1244    15457        */
     1245    15458    1      CALL JLU$OPNSTARN(ERR1) ALTRET(CHK_OPN_ERR);

  15458  3 004161   200020 630500                    EPPR0   ERR1,,AUTO
         3 004162   200114 450500                    STP0    @ARS+1,,AUTO
         3 004163   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004165   000000 701000 xent               TSX1    JLU$OPNSTARN
         3 004166   004167 702000 3                  TSX2    CHK_OPN_ERR

  15436  3 004167                       CHK_OPN_ERR  null
     1246    15459    1   CHK_OPN_ERR: ;
     1247    15460
     1248    15461        /*  If the *N file doesn't exist and LNKCNT is non-zero, we
     1249    15462            obviously have a problem.  Take a Snap, reset LNKCNT so
     1250    15463            we dont get stuck here, and return.
     1251    15464        */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:197  
     1252    15465    1      IF B$JIT.ERR.CODE=%E$NOFILE

  15465  3 004167   000000 470400 xsym               LDP0    B$JIT$
         3 004170   000012 236100                    LDQ     10,,PR0
         3 004171   377770 376007                    ANQ     131064,DL
         3 004172   001610 116007                    CMPQ    904,DL
         3 004173   004206 601000 3                  TNZ     s:15485

     1253    15466    2      THEN DO;

     1254    15467    2           IF B$JIT.LNKCNT ~= 0

  15467  3 004174   000314 236100                    LDQ     204,,PR0
         3 004175   000777 316007                    CANQ    511,DL
         3 004176   004204 600000 3                  TZE     s:15477

     1255    15468    3           THEN DO;

     1256    15469    3                CALL SC_LDLNK;

  15469  3 004177   000000 713400 xsym               CLIMB   SC_LDLNK
         3 004200   000000 600000 xsid               climb   nvectors=         0

  15469  3 004201                       CLEAN_UP_RTN null
     1257    15470    3   CLEAN_UP_RTN: ;
     1258    15471    3                B$JIT.LNKCNT=0;

  15471  3 004201   000000 470400 xsym               LDP0    B$JIT$
         3 004202   000000 236003                    LDQ     0,DU
         3 004203   000314 552104                    STBQ    204,'04'O,PR0

     1259    15472    3                END;

     1260    15473
     1261    15474        /*  If the *N file doesn't exist and LNKCNT is zero, we
     1262    15475            have no problem -- just return.
     1263    15476        */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:198  
     1264    15477    2           B$JIT.ERR='0'B;

  15477  3 004204   000012 450100                    STZ     10,,PR0

     1265    15478    2           RETURN;

  15478  3 004205   000000 702200 xent               TSX2  ! X66_ARET

     1266    15479    2           END;
     1267    15480
     1268    15481        /*  If we get any other error trying to open *N, take a Snap, try to
     1269    15482            delete *N to avoid more run-down or delete user problems,
     1270    15483            and return.
     1271    15484        */
     1272    15485    1      IF B$JIT.ERR.CODE ~= 0

  15485  3 004206   000012 236100                    LDQ     10,,PR0
         3 004207   377770 316007                    CANQ    131064,DL
         3 004210   004214 600000 3                  TZE     INIT_FPTS

     1273    15486    2      THEN DO;

     1274    15487    2           CALL SC_LDLNK;

  15487  3 004211   000000 713400 xsym               CLIMB   SC_LDLNK
         3 004212   000000 600000 xsid               climb   nvectors=         0

     1275    15488        /* OPEN DELETE ???? */
     1276    15489    2           GOTO CLEAN_UP_RTN;

  15489  3 004213   004201 710000 3                  TRA     CLEAN_UP_RTN

  15485  3 004214                       INIT_FPTS    null
     1277    15490    2           END;
     1278    15491
     1279    15492        /*  Otherwise we have successfully opened *N.
     1280    15493        */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:199  
     1281    15494    1   INIT_FPTS: ;
     1282    15495    1      J_FPT_PFIL.V.DCB# = %M$STAR#;

  15495  3 004214   000001 220003                    LDX0    1,DU
         3 004215   000002 740000 xsym               STX0    J_FPT_PFIL+2

     1283    15496
     1284    15497    1      FPT$PREC = FPT_PREC;

  15497  3 004216   000100 100400                    MLR     fill='000'O
         3 004217   000014 000050 1                  ADSC9   FPT_PREC                 cn=0,n=40
         3 004220   200052 000050                    ADSC9   FPT$PREC,,AUTO           cn=0,n=40

     1285    15498    1      FPT$PREC.V_ = VECTOR(FPT$PREC.V);

  15498  3 004221   000006 235000 4                  LDA     6
         3 004222   200114 452500                    STP2    @ARS+1,,AUTO
         3 004223   200114 236100                    LDQ     @ARS+1,,AUTO
         3 004224   000060 036003                    ADLQ    48,DU
         3 004225   200052 757100                    STAQ    FPT$PREC,,AUTO

     1286    15499    1      FPT$PREC.KEY_ = VECTOR(KEY);

  15499  3 004226   000007 235000 4                  LDA     7
         3 004227   200114 452500                    STP2    @ARS+1,,AUTO
         3 004230   200114 236100                    LDQ     @ARS+1,,AUTO
         3 004231   000026 036003                    ADLQ    22,DU
         3 004232   200054 757100                    STAQ    FPT$PREC+2,,AUTO

     1287    15500    1      FPT$PREC.V.DCB# = %M$STAR#;

  15500  3 004233   200060 740100                    STX0    FPT$PREC+6,,AUTO

     1288    15501
     1289    15502    1      FPT$READ = FPT_READ;

  15502  3 004234   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:200  
         3 004235   000026 000070 1                  ADSC9   FPT_READ                 cn=0,n=56
         3 004236   200064 000070                    ADSC9   FPT$READ,,AUTO           cn=0,n=56

     1290    15503    1      FPT$READ.V_ = VECTOR(FPT$READ.V);

  15503  3 004237   000067 235000 4                  LDA     55
         3 004240   200114 452500                    STP2    @ARS+1,,AUTO
         3 004241   200114 236100                    LDQ     @ARS+1,,AUTO
         3 004242   000074 036003                    ADLQ    60,DU
         3 004243   200064 757100                    STAQ    FPT$READ,,AUTO

     1291    15504    1      FPT$READ.KEY_ = VECTOR(KEY);

  15504  3 004244   000007 235000 4                  LDA     7
         3 004245   200114 452500                    STP2    @ARS+1,,AUTO
         3 004246   200114 236100                    LDQ     @ARS+1,,AUTO
         3 004247   000026 036003                    ADLQ    22,DU
         3 004250   200066 757100                    STAQ    FPT$READ+2,,AUTO

     1292    15505    1      FPT$READ.V.DCB# = %M$STAR#;

  15505  3 004251   200074 740100                    STX0    FPT$READ+8,,AUTO

     1293    15506
     1294    15507    1      ID.SYSID = B$JIT.SYSID;

  15507  3 004252   000000 721100                    LXL1    0,,PR0
         3 004253   200030 441100                    SXL1    LNKID,,AUTO

     1295    15508
     1296    15509        /* Get SBUF1 for reading the image file.
     1297    15510        */
     1298    15511    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP2,ERR1) ALTRET(NO_PROBLEM);

  15511  3 004254   200020 631500                    EPPR1   ERR1,,AUTO
         3 004255   200117 451500                    STP1    @ARS+4,,AUTO
         3 004256   200023 633500                    EPPR3   TEMP2,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:201  
         3 004257   200116 453500                    STP3    @ARS+3,,AUTO
         3 004260   000064 237000 4                  LDAQ    52
         3 004261   200114 757100                    STAQ    @ARS+1,,AUTO
         3 004262   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004263   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004264   000000 701000 xent               TSX1    MME$WFVP
         3 004265   004266 702000 3                  TSX2    NO_PROBLEM

  15507  3 004266                       NO_PROBLEM   null
     1299    15512    1   NO_PROBLEM: ;
     1300    15513    1      CALL MME$WGVP(%USERWSQ,%SBUF1PG,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),ERR1)

  15513  3 004266   200020 630500                    EPPR0   ERR1,,AUTO
         3 004267   200117 450500                    STP0    @ARS+4,,AUTO
         3 004270   000101 236000 4                  LDQ     65
         3 004271   200116 756100                    STQ     @ARS+3,,AUTO
         3 004272   000064 237000 4                  LDAQ    52
         3 004273   200114 757100                    STAQ    @ARS+1,,AUTO
         3 004274   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004275   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004276   000000 701000 xent               TSX1    MME$WGVP
         3 004277   004301 702000 3                  TSX2    s:15515
         3 004300   004304 710000 3                  TRA     CLEANUP_LOOP

     1301    15514    2      WHENALTRETURN DO;

     1302    15515    2           CALL SC_LDLNK;

  15515  3 004301   000000 713400 xsym               CLIMB   SC_LDLNK
         3 004302   000000 600000 xsid               climb   nvectors=         0

     1303    15516    2           GOTO CLS_RLS_STARN;

  15516  3 004303   004707 710000 3                  TRA     CLS_RLS_STARN

  15516  3 004304                       CLEANUP_LOOP null
     1304    15517    2           END;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:202  
     1305    15518        /*S*    SCREECH_CODE: JLS-S$LDLNK
     1306    15519               TYPE: SNAP
     1307    15520               MESSAGE: Error occurred during attempted LDLNK cleanup.
     1308    15521        */
     1309    15522
     1310    15523
     1311    15524    1   CLEANUP_LOOP: ;
     1312    15525    2      DO WHILE(B$JIT.LNKCNT > 0);

  15525  3 004304   000000 470400 xsym               LDP0    B$JIT$
         3 004305   000314 236100                    LDQ     204,,PR0
         3 004306   000777 316007                    CANQ    511,DL
         3 004307   004707 600000 3                  TZE     CLS_RLS_STARN

     1313    15526
     1314    15527    2           CALL M$MPFIL(J_FPT_PFIL) ALTRET(GULP);

  15527  3 004310   000066 630400 4                  EPPR0   54
         3 004311   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004312   000000 701000 xent               TSX1    M$MPFIL
         3 004313   004314 702000 3                  TSX2    GULP

  15527  3 004314                       GULP         null
     1315    15528    2   GULP:   ;
     1316    15529                                                /* Position to the end of file        */
     1317    15530    2           ID.N = B$JIT.LNKCNT;            /* Set up idn                         */

  15530  3 004314   000000 470400 xsym               LDP0    B$JIT$
         3 004315   000314 720100                    LXL0    204,,PR0
         3 004316   000777 360003                    ANX0    511,DU
         3 004317   200030 740100                    STX0    LNKID,,AUTO

     1318    15531    2           FPT$PREC.V.N# = -1;             /* Backup 1 rec from eof              */

  15531  3 004320   000001 335007                    LCA     1,DL
         3 004321   200061 755100                    STA     FPT$PREC+7,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:203  
     1319    15532    2           CALL M$MPRECORD(FPT$PREC)

  15532  3 004322   200052 631500                    EPPR1   FPT$PREC,,AUTO
         3 004323   200114 451500                    STP1    @ARS+1,,AUTO
         3 004324   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004325   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004326   000000 701000 xent               TSX1    M$MPRECORD
         3 004327   004331 702000 3                  TSX2    s:15534
         3 004330   004344 710000 3                  TRA     s:15543

     1320    15533    3           WHENALTRETURN DO;

     1321    15534    3                IF B$JIT.ERR.CODE = %E$BOF

  15534  3 004331   000000 470400 xsym               LDP0    B$JIT$
         3 004332   000012 236100                    LDQ     10,,PR0
         3 004333   377770 376007                    ANQ     131064,DL
         3 004334   000040 116007                    CMPQ    32,DL
         3 004335   004344 601000 3                  TNZ     s:15543

     1322    15535    4                THEN DO;

     1323    15536    4                     IF B$JIT.LNKCNT ~= 0 THEN CALL SC_LDLNK;

  15536  3 004336   000314 236100                    LDQ     204,,PR0
         3 004337   000777 316007                    CANQ    511,DL
         3 004340   004343 600000 3                  TZE     s:15537

  15536  3 004341   000000 713400 xsym               CLIMB   SC_LDLNK
         3 004342   000000 600000 xsid               climb   nvectors=         0

     1324    15537    4                     GOTO CLS_RLS_STARN;

  15537  3 004343   004707 710000 3                  TRA     CLS_RLS_STARN

     1325    15538    4                     END;
     1326    15539    3                END;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:204  
     1327    15540
     1328    15541        /* Security check the record sets.
     1329    15542        */
     1330    15543    2           IF (KEY.TYPE ~= JL_TRLRTYPE) OR (KEY.ID ~= LNKID)

  15543  3 004344   200027 236100                    LDQ     KEY+1,,AUTO
         3 004345   777000 376003                    ANQ     -512,DU
         3 004346   777000 116003                    CMPQ    -512,DU
         3 004347   004354 601000 3                  TNZ     s:15545
         3 004350   200026 236100                    LDQ     KEY,,AUTO
         3 004351   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 004352   200030 116100                    CMPQ    LNKID,,AUTO
         3 004353   004357 600000 3                  TZE     s:15552

     1331    15544    3           THEN DO;

     1332    15545    3                CALL SC_LDLNK;

  15545  3 004354   000000 713400 xsym               CLIMB   SC_LDLNK
         3 004355   000000 600000 xsid               climb   nvectors=         0

     1333    15546    3                GOTO DELETE_SET;

  15546  3 004356   004672 710000 3                  TRA     DELETE_SET

     1334    15547    3                END;
     1335    15548
     1336    15549
     1337    15550        /* Read the trailer record.
     1338    15551        */
     1339    15552    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;

  15552  3 004357   000000 236000 xsym               LDQ     B$SBUF1$
         3 004360   200071 756100                    STQ     FPT$READ+5,,AUTO

     1340    15553    2           CALL READ_STAR(JL_TRLRSIZE,JL_TRLRTYPE,N) ALTRET(SNAP_SET);

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:205  
  15553  3 004361   200014 630500                    EPPR0   N,,AUTO
         3 004362   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 004363   000056 236000 4                  LDQ     46
         3 004364   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 004365   000055 236000 4                  LDQ     45
         3 004366   200111 756100                    STQ     TMP+3,,AUTO
         3 004367   006407 701000 3                  TSX1    READ_STAR
         3 004370   004447 702000 3                  TSX2    SNAP_SET

     1341    15554
     1342    15555    2           IF JL$TRAILER.IDN ~= LNKID

  15555  3 004371   000000 470400 xsym               LDP0    B$SBUF1$
         3 004372   000000 236100                    LDQ     0,,PR0
         3 004373   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 004374   200030 116100                    CMPQ    LNKID,,AUTO
         3 004375   004401 600000 3                  TZE     s:15561

     1343    15556    3           THEN DO;

     1344    15557    3                CALL SC_LDLNK;

  15557  3 004376   000000 713400 xsym               CLIMB   SC_LDLNK
         3 004377   000000 600000 xsid               climb   nvectors=         0

     1345    15558    3                GOTO DELETE_SET;

  15558  3 004400   004672 710000 3                  TRA     DELETE_SET

     1346    15559    3                END;
     1347    15560
     1348    15561    2           RECCNT = JL$TRAILER.NRECS;      /* Get # of records in this set       */

  15561  3 004401   000002 236100                    LDQ     2,,PR0
         3 004402   000022 772000                    QRL     18
         3 004403   200025 756100                    STQ     RECCNT,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:206  
     1349    15562    2           DTS = JL$TRAILER.DTS;           /* And remember date/time stamp       */

  15562  3 004404   000001 235100                    LDA     1,,PR0
         3 004405   200017 755100                    STA     DTS,,AUTO

     1350    15563
     1351    15564        /* Now, position back to the start of this record set.
     1352    15565        */
     1353    15566    2           FPT$PREC.V.N# = - RECCNT;

  15566  3 004406   200025 335100                    LCA     RECCNT,,AUTO
         3 004407   200061 755100                    STA     FPT$PREC+7,,AUTO

     1354    15567    2           CALL M$MPRECORD(FPT$PREC) ALTRET(SNAP_SET);

  15567  3 004410   200052 631500                    EPPR1   FPT$PREC,,AUTO
         3 004411   200114 451500                    STP1    @ARS+1,,AUTO
         3 004412   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004413   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004414   000000 701000 xent               TSX1    M$MPRECORD
         3 004415   004447 702000 3                  TSX2    SNAP_SET

     1355    15568
     1356    15569        /* Read the header record and verify as much as possible.
     1357    15570        */
     1358    15571    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;

  15571  3 004416   000000 236000 xsym               LDQ     B$SBUF1$
         3 004417   200071 756100                    STQ     FPT$READ+5,,AUTO

     1359    15572    2           CALL READ_STAR(JL_HEADSIZE,JL_HEADTYPE,N) ALTRET(SNAP_SET);

  15572  3 004420   200014 630500                    EPPR0   N,,AUTO
         3 004421   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 004422   000002 236000 4                  LDQ     2
         3 004423   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 004424   000011 236000 4                  LDQ     9
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:207  
         3 004425   200111 756100                    STQ     TMP+3,,AUTO
         3 004426   006407 701000 3                  TSX1    READ_STAR
         3 004427   004447 702000 3                  TSX2    SNAP_SET

     1360    15573
     1361    15574    2           TPTR$ = ADDR(B_SITEINFO.VERSION#);

  15574  3 004430   000000 236000 4                  LDQ     0
         3 004431   200010 756100                    STQ     TPTR$,,AUTO

     1362    15575    2           IF (JL$HEAD.IDN ~= LNKID)

  15575  3 004432   000000 470400 xsym               LDP0    B$SBUF1$
         3 004433   000000 236100                    LDQ     0,,PR0
         3 004434   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 004435   200030 116100                    CMPQ    LNKID,,AUTO
         3 004436   004447 601000 3                  TNZ     SNAP_SET
         3 004437   000001 236100                    LDQ     1,,PR0
         3 004440   200017 116100                    CMPQ    DTS,,AUTO
         3 004441   004447 601000 3                  TNZ     SNAP_SET
         3 004442   200010 471500                    LDP1    TPTR$,,AUTO
         3 004443   040100 106500                    CMPC    fill='040'O
         3 004444   000014 000004                    ADSC9   12,,PR0                  cn=0,n=4
         3 004445   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3
         3 004446   004452 600000 3                  TZE     s:15585

     1363    15576    2             OR (JL$HEAD.DTS ~= DTS)
     1364    15577    2             OR (JL$HEAD.SYSVERS ~= TPTR$->B$CHAR3)
     1365    15578    3           THEN DO;

  15577  3 004447                       SNAP_SET     null
     1366    15579    3   SNAP_SET:    ;
     1367    15580    3                CALL SC_LDLNK;

  15580  3 004447   000000 713400 xsym               CLIMB   SC_LDLNK
         3 004450   000000 600000 xsid               climb   nvectors=         0

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:208  
     1368    15581    3                GOTO DELETE_SET;

  15581  3 004451   004672 710000 3                  TRA     DELETE_SET

     1369    15582    3                END;
     1370    15583
     1371    15584
     1372    15585    2           B$U.ASL = 0;

  15585  3 004452   000000 473400 xsym               LDP3    S$CU$
         3 004453   000000 236003                    LDQ     0,DU
         3 004454   300006 552104                    STBQ    6,'04'O,PR3

     1373    15586    2           B$U.APR = 0;

  15586  3 004455   300007 752160                    STCQ    7,'60'O,PR3

     1374    15587    2           B$U.APO = 0;

  15587  3 004456   300007 752114                    STCQ    7,'14'O,PR3

     1375    15588    2           B$U.ASP = 0;

  15588  3 004457   300007 752102                    STCQ    7,'02'O,PR3

     1376    15589
     1377    15590
     1378    15591        /* Remember # of roseg pages this program needed.
     1379    15592        */
     1380    15593    2           TEMP1 = JL$HEAD.ROPGS - 1;      /* Always have at least 1             */

  15593  3 004460   000015 236100                    LDQ     13,,PR0
         3 004461   000777 376007                    ANQ     511,DL
         3 004462   000001 136007                    SBLQ    1,DL
         3 004463   200022 756100                    STQ     TEMP1,,AUTO

     1381    15594
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:209  
     1382    15595        /* Now, restore the roseg info for this user which will be
     1383    15596           necessary to close all of his DCBs.
     1384    15597           Position the image file over JIT & HJIT to the roseg record(s).
     1385    15598        */
     1386    15599    2           FPT$PREC.V.N# = 2;

  15599  3 004464   000002 235007                    LDA     2,DL
         3 004465   200061 755100                    STA     FPT$PREC+7,,AUTO

     1387    15600    2           CALL M$MPRECORD(FPT$PREC) ALTRET(SNAP_SET);

  15600  3 004466   200052 634500                    EPPR4   FPT$PREC,,AUTO
         3 004467   200114 454500                    STP4    @ARS+1,,AUTO
         3 004470   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004471   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004472   000000 701000 xent               TSX1    M$MPRECORD
         3 004473   004447 702000 3                  TSX2    SNAP_SET

     1388    15601    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;

  15601  3 004474   000000 236000 xsym               LDQ     B$SBUF1$
         3 004475   200071 756100                    STQ     FPT$READ+5,,AUTO

     1389    15602    2           CALL READ_STAR(JL_FULLPAGE,JL_ROTYPE,N) ALTRET(SNAP_SET);

  15602  3 004476   200014 630500                    EPPR0   N,,AUTO
         3 004477   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 004500   000017 236000 4                  LDQ     15
         3 004501   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 004502   000013 236000 4                  LDQ     11
         3 004503   200111 756100                    STQ     TMP+3,,AUTO
         3 004504   006407 701000 3                  TSX1    READ_STAR
         3 004505   004447 702000 3                  TSX2    SNAP_SET

     1390    15603
     1391    15604    2           B$ROSEG.NUMDCBS = B$CLROSEG.NUMDCBS;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:210  
  15604  3 004506   000000 470400 xsym               LDP0    B$SBUF1$
         3 004507   000002 220100                    LDX0    2,,PR0
         3 004510   000000 471400 xsym               LDP1    B$ROSEG$
         3 004511   100002 740100                    STX0    2,,PR1

     1392    15605    3           DO I = INITROSIZE% - 1 TO 1023;  /* Get DELTA's DCB too                */

  15605  3 004512   000000 235000 xsym               LDA     B$ROSEG$
         3 004513   000022 771000                    ARL     18
         3 004514   200114 755100                    STA     @ARS+1,,AUTO
         3 004515   100000 236100                    LDQ     0,,PR1
         3 004516   000022 772000                    QRL     18
         3 004517   200114 136100                    SBLQ    @ARS+1,,AUTO
         3 004520   000011 036007                    ADLQ    9,DL
         3 004521   200012 756100                    STQ     I,,AUTO
         3 004522   004531 710000 3                  TRA     s:15607+1

     1393    15606    3                B$ROSEG$->B$PAGE.WRD(I) = B$SBUF1$->B$PAGE.WRD(I);

  15606  3 004523   000000 470400 xsym               LDP0    B$SBUF1$
         3 004524   200012 720100                    LXL0    I,,AUTO
         3 004525   000000 471400 xsym               LDP1    B$ROSEG$
         3 004526   000000 235110                    LDA     0,X0,PR0
         3 004527   100000 755110                    STA     0,X0,PR1

     1394    15607    3                END;

  15607  3 004530   200012 054100                    AOS     I,,AUTO
         3 004531   200012 235100                    LDA     I,,AUTO
         3 004532   001777 115007                    CMPA    1023,DL
         3 004533   004523 604400 3                  TMOZ    s:15606

     1395    15608
     1396    15609    2           IF TEMP1 > 0

  15609  3 004534   200022 236100                    LDQ     TEMP1,,AUTO
         3 004535   004601 604400 3                  TMOZ    s:15619
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:211  

     1397    15610    3           THEN DO;                        /* Do if > 1 page of DCBs             */

     1398    15611    3                FPT$READ.BUF_.BUF$ = PINCRW(B$ROSEG$,1024);

  15611  3 004536   000000 236000 xsym               LDQ     B$ROSEG$
         3 004537   002000 036003                    ADLQ    1024,DU
         3 004540   200071 756100                    STQ     FPT$READ+5,,AUTO

     1399    15612    3                TEMP2 = BITBIN(%PGINMEM|%PGWRITE|%PGIOM);

  15612  3 004541   000064 235007                    LDA     52,DL
         3 004542   200023 755100                    STA     TEMP2,,AUTO

     1400    15613    4                DO I = 1 TO TEMP1;

  15613  3 004543   000001 235007                    LDA     1,DL
         3 004544   200012 755100                    STA     I,,AUTO
         3 004545   004576 710000 3                  TRA     s:15616+1

     1401    15614    4                     CALL MME$WGVP(%USERWSQ,%ROSEGLO+I,TEMP2,ERR1) ALTRET(SNAP_SET);

  15614  3 004546   200012 235100                    LDA     I,,AUTO
         3 004547   000057 035007                    ADLA    47,DL
         3 004550   200114 755100                    STA     @ARS+1,,AUTO
         3 004551   200020 630500                    EPPR0   ERR1,,AUTO
         3 004552   200121 450500                    STP0    @ARS+6,,AUTO
         3 004553   200023 631500                    EPPR1   TEMP2,,AUTO
         3 004554   200120 451500                    STP1    @ARS+5,,AUTO
         3 004555   200114 633500                    EPPR3   @ARS+1,,AUTO
         3 004556   200117 453500                    STP3    @ARS+4,,AUTO
         3 004557   000026 236000 4                  LDQ     22
         3 004560   200116 756100                    STQ     @ARS+3,,AUTO
         3 004561   200116 630500                    EPPR0   @ARS+3,,AUTO
         3 004562   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004563   000000 701000 xent               TSX1    MME$WGVP
         3 004564   004447 702000 3                  TSX2    SNAP_SET
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:212  

     1402    15615    4                     CALL READ_STAR(JL_FULLPAGE,JL_ROTYPE,N) ALTRET(SNAP_SET);

  15615  3 004565   200014 630500                    EPPR0   N,,AUTO
         3 004566   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 004567   000017 236000 4                  LDQ     15
         3 004570   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 004571   000013 236000 4                  LDQ     11
         3 004572   200111 756100                    STQ     TMP+3,,AUTO
         3 004573   006407 701000 3                  TSX1    READ_STAR
         3 004574   004447 702000 3                  TSX2    SNAP_SET

     1403    15616    4                     END;

  15616  3 004575   200012 054100                    AOS     I,,AUTO
         3 004576   200012 236100                    LDQ     I,,AUTO
         3 004577   200022 116100                    CMPQ    TEMP1,,AUTO
         3 004600   004546 604400 3                  TMOZ    s:15614

     1404    15617    3                END;

     1405    15618
     1406    15619    3           DO I = %M$1STDCB# TO B$ROSEG.NUMDCBS;

  15619  3 004601   000012 235007                    LDA     10,DL
         3 004602   200012 755100                    STA     I,,AUTO
         3 004603   004634 710000 3                  TRA     s:15628+1

     1407    15620    3                DCB$ = B$ROSEG.DCBPTR$->B$RODCB$(I);

  15620  3 004604   000000 470400 xsym               LDP0    B$ROSEG$
         3 004605   000000 471500                    LDP1    0,,PR0
         3 004606   200012 720100                    LXL0    I,,AUTO
         3 004607   100000 236110                    LDQ     0,X0,PR1
         3 004610   200021 756100                    STQ     DCB$,,AUTO

     1408    15621    3                IF DCB$ ~= ADDR(NIL)
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:213  

  15621  3 004611   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 004612   004633 600000 3                  TZE     s:15628

     1409    15622    3                THEN IF %DS2#<=DCB$->F$DCB.ACS AND DCB$->F$DCB.ACS<=%DS8#

  15622  3 004613   200021 473500                    LDP3    DCB$,,AUTO
         3 004614   300036 236100                    LDQ     30,,PR3
         3 004615   000777 376007                    ANQ     511,DL
         3 004616   000005 116007                    CMPQ    5,DL
         3 004617   004633 602000 3                  TNC     s:15628
         3 004620   000014 116007                    CMPQ    12,DL
         3 004621   004633 603000 3                  TRC     s:15628

     1410    15623    3                     THEN IF DCB$->F$DCB.FCD

  15623  3 004622   300031 236100                    LDQ     25,,PR3
         3 004623   020000 316007                    CANQ    8192,DL
         3 004624   004633 600000 3                  TZE     s:15628

     1411    15624    4                          THEN DO;

     1412    15625    4                               B$JIT.DCB$ = DCB$;

  15625  3 004625   200021 236100                    LDQ     DCB$,,AUTO
         3 004626   000000 474400 xsym               LDP4    B$JIT$
         3 004627   400232 756100                    STQ     154,,PR4

     1413    15626    4                               CALL FMI$INIT;

  15626  3 004630   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 004631   000000 701000 xent               TSX1    FMI$INIT
         3 004632   000000 011000                    NOP     0

     1414    15627    4                               END;

     1415    15628    3                END;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:214  

  15628  3 004633   200012 054100                    AOS     I,,AUTO
         3 004634   000000 470400 xsym               LDP0    B$ROSEG$
         3 004635   000002 236100                    LDQ     2,,PR0
         3 004636   000022 772000                    QRL     18
         3 004637   200012 116100                    CMPQ    I,,AUTO
         3 004640   004604 605000 3                  TPL     s:15620

     1416    15629
     1417    15630    2           CALL JSF$CLSUSRDCBS;            /* Close all open DCBs                */

  15630  3 004641   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 004642   000000 701000 xent               TSX1    JSF$CLSUSRDCBS
         3 004643   000000 011000                    NOP     0

     1418    15631
     1419    15632        /* Free the extra roseg pages acquired.
     1420    15633        */
     1421    15634    3           DO I = 1 TO TEMP1;

  15634  3 004644   000001 235007                    LDA     1,DL
         3 004645   200012 755100                    STA     I,,AUTO
         3 004646   004667 710000 3                  TRA     s:15636+1

     1422    15635    3                CALL MME$WFVP(%USERWSQ,%ROSEGLO+I,TEMP2,ERR1) ALTRET(SNAP_SET);

  15635  3 004647   200012 235100                    LDA     I,,AUTO
         3 004650   000057 035007                    ADLA    47,DL
         3 004651   200114 755100                    STA     @ARS+1,,AUTO
         3 004652   200020 630500                    EPPR0   ERR1,,AUTO
         3 004653   200121 450500                    STP0    @ARS+6,,AUTO
         3 004654   200023 631500                    EPPR1   TEMP2,,AUTO
         3 004655   200120 451500                    STP1    @ARS+5,,AUTO
         3 004656   200114 633500                    EPPR3   @ARS+1,,AUTO
         3 004657   200117 453500                    STP3    @ARS+4,,AUTO
         3 004660   000026 236000 4                  LDQ     22
         3 004661   200116 756100                    STQ     @ARS+3,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:215  
         3 004662   200116 630500                    EPPR0   @ARS+3,,AUTO
         3 004663   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004664   000000 701000 xent               TSX1    MME$WFVP
         3 004665   004447 702000 3                  TSX2    SNAP_SET

     1423    15636    3                END;

  15636  3 004666   200012 054100                    AOS     I,,AUTO
         3 004667   200012 236100                    LDQ     I,,AUTO
         3 004670   200022 116100                    CMPQ    TEMP1,,AUTO
         3 004671   004647 604400 3                  TMOZ    s:15635

  15635  3 004672                       DELETE_SET   null
     1424    15637
     1425    15638    2   DELETE_SET: ;
     1426    15639    2           CALL JLU$DELSET(LNKID);         /* Delete this record set             */

  15639  3 004672   200030 630500                    EPPR0   LNKID,,AUTO
         3 004673   200114 450500                    STP0    @ARS+1,,AUTO
         3 004674   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004675   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004676   000000 701000 xent               TSX1    JLU$DELSET
         3 004677   000000 011000                    NOP     0

     1427    15640
     1428    15641        /* Decrement link count in JIT.
     1429    15642        */
     1430    15643    2           B$JIT.LNKCNT = B$JIT.LNKCNT - 1;

  15643  3 004700   000000 470400 xsym               LDP0    B$JIT$
         3 004701   000314 236100                    LDQ     204,,PR0
         3 004702   000777 036007                    ADLQ    511,DL
         3 004703   000314 552104                    STBQ    204,'04'O,PR0

     1431    15644    2           END;                       /* End of big do while(linkcnt>0) loop     */

  15644  3 004704   000314 236100                    LDQ     204,,PR0
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:216  
         3 004705   000777 316007                    CANQ    511,DL
         3 004706   004310 601000 3                  TNZ     s:15527

  15635  3 004707                       CLS_RLS_STA* null
     1432    15645
     1433    15646        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:217  
     1434    15647        /* Finally, close image file with release and return.
     1435    15648        */
     1436    15649    1   CLS_RLS_STARN: ;
     1437    15650    1      J_FPT_CL_REL.V.DCB# = %M$STAR#;

  15650  3 004707   000001 220003                    LDX0    1,DU
         3 004710   000032 740000 xsym               STX0    J_FPT_CL_REL+26

     1438    15651    1      CALL M$MCLOSE(J_FPT_CL_REL)

  15651  3 004711   000103 630400 4                  EPPR0   67
         3 004712   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004713   000000 701000 xent               TSX1    M$MCLOSE
         3 004714   004716 702000 3                  TSX2    s:15653
         3 004715   004720 710000 3                  TRA     s:15657

     1439    15652    2      WHENALTRETURN DO;

     1440    15653    2           CALL SC_LDLNK;

  15653  3 004716   000000 713400 xsym               CLIMB   SC_LDLNK
         3 004717   000000 600000 xsid               climb   nvectors=         0

     1441    15654    2           END;

     1442    15655
     1443    15656        /* Release our buffer page */
     1444    15657    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP2,ERR1) ALTRET(WHOA);

  15657  3 004720   200020 630500                    EPPR0   ERR1,,AUTO
         3 004721   200117 450500                    STP0    @ARS+4,,AUTO
         3 004722   200023 631500                    EPPR1   TEMP2,,AUTO
         3 004723   200116 451500                    STP1    @ARS+3,,AUTO
         3 004724   000064 237000 4                  LDAQ    52
         3 004725   200114 757100                    STAQ    @ARS+1,,AUTO
         3 004726   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004727   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:218  
         3 004730   000000 701000 xent               TSX1    MME$WFVP
         3 004731   004732 702000 3                  TSX2    WHOA

  15650  3 004732                       WHOA         null
     1445    15658    1   WHOA: ;
     1446    15659    1      RETURN;

  15659  3 004732   000000 702200 xent               TSX2  ! X66_ARET

     1447    15660
     1448    15661
     1449    15662        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:219  
     1450    15663        /*************************************************************
     1451    15664         *                                                           *
     1452    15665         *                     JLS$SEARCH_IMAGE                      *
     1453    15666         *                                                           *
     1454    15667         *************************************************************/
     1455    15668
     1456    15669        /*F*   NAME:   JLS$GET_IMAGE
     1457    15670               PURPOSE: To search a saved program image for M$LINK
     1458    15671                        to do M$FINDPROC (MLINK=YES)
     1459    15672        */
     1460    15673    1   JLS$SEARCH_IMAGE: ENTRY(IDN,ERR,CLEANUP$) ALTRET;

  15673  3 004733   000000 700200 xent  JLS$SEARCH_* TSX0  ! X66_AUTO_3
         3 004734   000142 000003                    ZERO    98,3

     1461    15674        /* Get special buffer page 1 for reading in the star-n
     1462    15675           trailer and header records.
     1463    15676        */
     1464    15677    1      CALL HFF$TRAPALT ALTRET (SEA_ERR);

  15677  3 004735   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 004736   000000 701000 xent               TSX1    HFF$TRAPALT
         3 004737   005206 702000 3                  TSX2    SEA_ERR

     1465    15678    1      TEMP1 = BITBIN(%PGINMEM|%PGWRITE|%PGIOM);

  15678  3 004740   000064 235007                    LDA     52,DL
         3 004741   200022 755100                    STA     TEMP1,,AUTO

     1466    15679    1      CALL MME$WGVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1) ALTRET(SEA_ERR);

  15679  3 004742   200022 630500                    EPPR0   TEMP1,,AUTO
         3 004743   200117 450500                    STP0    @ARS+4,,AUTO
         3 004744   200022 631500                    EPPR1   TEMP1,,AUTO
         3 004745   200116 451500                    STP1    @ARS+3,,AUTO
         3 004746   000064 237000 4                  LDAQ    52
         3 004747   200114 757100                    STAQ    @ARS+1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:220  
         3 004750   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 004751   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 004752   000000 701000 xent               TSX1    MME$WGVP
         3 004753   005206 702000 3                  TSX2    SEA_ERR

     1467    15680    1      ID.N = B$JIT.LNKCNT;

  15680  3 004754   000000 470400 xsym               LDP0    B$JIT$
         3 004755   000314 720100                    LXL0    204,,PR0
         3 004756   000777 360003                    ANX0    511,DU
         3 004757   200030 740100                    STX0    LNKID,,AUTO

     1468    15681    1      ID.SYSID = B$JIT.SYSID;

  15681  3 004760   000000 721100                    LXL1    0,,PR0
         3 004761   200030 441100                    SXL1    LNKID,,AUTO

     1469    15682
     1470    15683        /* Initialize the read FPT.
     1471    15684        */
     1472    15685    1      FPT$READ = FPT_READ;

  15685  3 004762   000100 100400                    MLR     fill='000'O
         3 004763   000026 000070 1                  ADSC9   FPT_READ                 cn=0,n=56
         3 004764   200064 000070                    ADSC9   FPT$READ,,AUTO           cn=0,n=56

     1473    15686    1      FPT$READ.V_   = VECTOR(FPT$READ.V);

  15686  3 004765   000067 235000 4                  LDA     55
         3 004766   200114 452500                    STP2    @ARS+1,,AUTO
         3 004767   200114 236100                    LDQ     @ARS+1,,AUTO
         3 004770   000074 036003                    ADLQ    60,DU
         3 004771   200064 757100                    STAQ    FPT$READ,,AUTO

     1474    15687    1      FPT$READ.KEY_   = VECTOR(KEY);

  15687  3 004772   000007 235000 4                  LDA     7
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:221  
         3 004773   200114 452500                    STP2    @ARS+1,,AUTO
         3 004774   200114 236100                    LDQ     @ARS+1,,AUTO
         3 004775   000026 036003                    ADLQ    22,DU
         3 004776   200066 757100                    STAQ    FPT$READ+2,,AUTO

     1475    15688    1      FPT$READ.V.DCB# = %M$STAR#;

  15688  3 004777   000001 222003                    LDX2    1,DU
         3 005000   200074 742100                    STX2    FPT$READ+8,,AUTO

     1476    15689        /* Position M$* To eof.
     1477    15690        */
     1478    15691    1      J_FPT_PFIL.V.DCB# = %M$STAR#;

  15691  3 005001   000002 742000 xsym               STX2    J_FPT_PFIL+2

     1479    15692    1      CALL M$MPFIL(J_FPT_PFIL) ALTRET(SEA_ERR);

  15692  3 005002   000066 630400 4                  EPPR0   54
         3 005003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 005004   000000 701000 xent               TSX1    M$MPFIL
         3 005005   005206 702000 3                  TSX2    SEA_ERR

     1480    15693    1      FPT$PREC = FPT_PREC;

  15693  3 005006   000100 100400                    MLR     fill='000'O
         3 005007   000014 000050 1                  ADSC9   FPT_PREC                 cn=0,n=40
         3 005010   200052 000050                    ADSC9   FPT$PREC,,AUTO           cn=0,n=40

     1481    15694    1      FPT$PREC.V_   = VECTOR(FPT$PREC.V);

  15694  3 005011   000006 235000 4                  LDA     6
         3 005012   200114 452500                    STP2    @ARS+1,,AUTO
         3 005013   200114 236100                    LDQ     @ARS+1,,AUTO
         3 005014   000060 036003                    ADLQ    48,DU
         3 005015   200052 757100                    STAQ    FPT$PREC,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:222  
     1482    15695    1      FPT$PREC.KEY_   = VECTOR(KEY);

  15695  3 005016   000007 235000 4                  LDA     7
         3 005017   200114 452500                    STP2    @ARS+1,,AUTO
         3 005020   200114 236100                    LDQ     @ARS+1,,AUTO
         3 005021   000026 036003                    ADLQ    22,DU
         3 005022   200054 757100                    STAQ    FPT$PREC+2,,AUTO

     1483    15696    1      FPT$PREC.V.DCB# = %M$STAR#;

  15696  3 005023   000001 220003                    LDX0    1,DU
         3 005024   200060 740100                    STX0    FPT$PREC+6,,AUTO

     1484    15697    1      FPT$PREC.V.N# = -1;

  15697  3 005025   000001 335007                    LCA     1,DL
         3 005026   200061 755100                    STA     FPT$PREC+7,,AUTO

     1485    15698        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:223  
     1486    15699        /* Position back one (or two) record and verify that it is the trailer record.
     1487    15700        */
     1488    15701    2      DO WHILE (ID.N ~= 0);

  15701  3 005027   200030 221100                    LDX1    LNKID,,AUTO
         3 005030   005206 600000 3                  TZE     SEA_ERR

     1489    15702    2           CALL M$MPRECORD(FPT$PREC) ALTRET(SEA_ERR);

  15702  3 005031   200052 630500                    EPPR0   FPT$PREC,,AUTO
         3 005032   200114 450500                    STP0    @ARS+1,,AUTO
         3 005033   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 005034   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 005035   000000 701000 xent               TSX1    M$MPRECORD
         3 005036   005206 702000 3                  TSX2    SEA_ERR

     1490    15703    2           IF KEY.TYPE ~= JL_TRLRTYPE OR KEY.ID ~= LNKID

  15703  3 005037   200027 236100                    LDQ     KEY+1,,AUTO
         3 005040   777000 376003                    ANQ     -512,DU
         3 005041   777000 116003                    CMPQ    -512,DU
         3 005042   005206 601000 3                  TNZ     SEA_ERR
         3 005043   200026 236100                    LDQ     KEY,,AUTO
         3 005044   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 005045   200030 116100                    CMPQ    LNKID,,AUTO
         3 005046   005206 601000 3                  TNZ     SEA_ERR

     1491    15704    2           THEN GOTO SEA_ERR;
     1492    15705
     1493    15706        /* Read the trailer record into SBUF1.
     1494    15707        */
     1495    15708    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;

  15708  3 005047   000000 236000 xsym               LDQ     B$SBUF1$
         3 005050   200071 756100                    STQ     FPT$READ+5,,AUTO

     1496    15709    2           CALL READ_STAR(JL_TRLRSIZE,JL_TRLRTYPE,N) ALTRET(SEA_ERR);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:224  

  15709  3 005051   200014 630500                    EPPR0   N,,AUTO
         3 005052   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 005053   000056 236000 4                  LDQ     46
         3 005054   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 005055   000055 236000 4                  LDQ     45
         3 005056   200111 756100                    STQ     TMP+3,,AUTO
         3 005057   006407 701000 3                  TSX1    READ_STAR
         3 005060   005206 702000 3                  TSX2    SEA_ERR

     1497    15710
     1498    15711    2           IF JL$TRAILER.IDN ~= LNKID

  15711  3 005061   000000 470400 xsym               LDP0    B$SBUF1$
         3 005062   000000 236100                    LDQ     0,,PR0
         3 005063   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 005064   200030 116100                    CMPQ    LNKID,,AUTO
         3 005065   005206 601000 3                  TNZ     SEA_ERR

     1499    15712    2           THEN GOTO SEA_ERR;
     1500    15713
     1501    15714    2           RECCNT = JL$TRAILER.NRECS;      /* Get # of records in this set       */

  15714  3 005066   000002 236100                    LDQ     2,,PR0
         3 005067   000022 772000                    QRL     18
         3 005070   200025 756100                    STQ     RECCNT,,AUTO

     1502    15715    2           DTS = JL$TRAILER.DTS;           /* And remember date/time stamp       */

  15715  3 005071   000001 235100                    LDA     1,,PR0
         3 005072   200017 755100                    STA     DTS,,AUTO

     1503    15716
     1504    15717        /* Now, position back to the start of this record SET.
     1505    15718        */
     1506    15719    2           FPT$PREC.V.N# = - RECCNT;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:225  
  15719  3 005073   200025 335100                    LCA     RECCNT,,AUTO
         3 005074   200061 755100                    STA     FPT$PREC+7,,AUTO

     1507    15720    2           CALL M$MPRECORD(FPT$PREC) ALTRET(SEA_ERR);

  15720  3 005075   200052 631500                    EPPR1   FPT$PREC,,AUTO
         3 005076   200114 451500                    STP1    @ARS+1,,AUTO
         3 005077   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 005100   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 005101   000000 701000 xent               TSX1    M$MPRECORD
         3 005102   005206 702000 3                  TSX2    SEA_ERR

     1508    15721
     1509    15722        /* Read the header record into SBUF1 and verify as much as possible.
     1510    15723        */
     1511    15724    2           FPT$READ.BUF_.BUF$ = B$SBUF1$;

  15724  3 005103   000000 236000 xsym               LDQ     B$SBUF1$
         3 005104   200071 756100                    STQ     FPT$READ+5,,AUTO

     1512    15725    2           CALL READ_STAR(JL_HEADSIZE,JL_HEADTYPE,N) ALTRET(SEA_ERR);

  15725  3 005105   200014 630500                    EPPR0   N,,AUTO
         3 005106   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 005107   000002 236000 4                  LDQ     2
         3 005110   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 005111   000011 236000 4                  LDQ     9
         3 005112   200111 756100                    STQ     TMP+3,,AUTO
         3 005113   006407 701000 3                  TSX1    READ_STAR
         3 005114   005206 702000 3                  TSX2    SEA_ERR

     1513    15726
     1514    15727    2           IF JL$HEAD.IDN ~= LNKID OR JL$HEAD.DTS ~= DTS

  15727  3 005115   000000 470400 xsym               LDP0    B$SBUF1$
         3 005116   000000 236100                    LDQ     0,,PR0
         3 005117   000032 376000 xsym               ANQ     B_VECTNIL+26
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:226  
         3 005120   200030 116100                    CMPQ    LNKID,,AUTO
         3 005121   005206 601000 3                  TNZ     SEA_ERR
         3 005122   000001 236100                    LDQ     1,,PR0
         3 005123   200017 116100                    CMPQ    DTS,,AUTO
         3 005124   005206 601000 3                  TNZ     SEA_ERR

     1515    15728    2           THEN GOTO SEA_ERR;
     1516    15729
     1517    15730    2           TEMP1 = JL$HEAD.APR;

  15730  3 005125   000007 236100                    LDQ     7,,PR0
         3 005126   000022 772000                    QRL     18
         3 005127   007777 376007                    ANQ     4095,DL
         3 005130   200022 756100                    STQ     TEMP1,,AUTO

     1518    15731    2           CALL CHK_PROC ALTRET(CHK_ASL);

  15731  3 005131   005225 701000 3                  TSX1    CHK_PROC
         3 005132   005152 702000 3                  TSX2    CHK_ASL

     1519    15732    2   SEA_RET:
     1520    15733    2           CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1);

  15733  3 005133   200022 630500       SEA_RET      EPPR0   TEMP1,,AUTO
         3 005134   200117 450500                    STP0    @ARS+4,,AUTO
         3 005135   200022 631500                    EPPR1   TEMP1,,AUTO
         3 005136   200116 451500                    STP1    @ARS+3,,AUTO
         3 005137   000064 237000 4                  LDAQ    52
         3 005140   200114 757100                    STAQ    @ARS+1,,AUTO
         3 005141   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 005142   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 005143   000000 701000 xent               TSX1    MME$WFVP
         3 005144   000000 011000                    NOP     0

     1521    15734    2           CALL M$MCLOSE (J_FPT_CL_SAVE) ALTRET(SEA_RET1);

  15734  3 005145   000104 630400 4                  EPPR0   68
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:227  
         3 005146   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 005147   000000 701000 xent               TSX1    M$MCLOSE
         3 005150   005151 702000 3                  TSX2    SEA_RET1

     1522    15735    2   SEA_RET1: RETURN;

  15735  3 005151   000000 702200 xent  SEA_RET1     TSX2  ! X66_ARET

     1523    15736    2   CHK_ASL: TEMP1 = JL$HEAD.ASL;

  15736  3 005152   000000 470400 xsym  CHK_ASL      LDP0    B$SBUF1$
         3 005153   000007 236100                    LDQ     7,,PR0
         3 005154   000036 772000                    QRL     30
         3 005155   200022 756100                    STQ     TEMP1,,AUTO

     1524    15737    2           CALL CHK_PROC ALTRET(CHK_ACP);

  15737  3 005156   005225 701000 3                  TSX1    CHK_PROC
         3 005157   005161 702000 3                  TSX2    CHK_ACP

     1525    15738    2           GOTO SEA_RET;

  15738  3 005160   005133 710000 3                  TRA     SEA_RET

     1526    15739    2   CHK_ACP: TEMP1 = JL$HEAD.ACP;

  15739  3 005161   000000 470400 xsym  CHK_ACP      LDP0    B$SBUF1$
         3 005162   000010 236100                    LDQ     8,,PR0
         3 005163   000033 772000                    QRL     27
         3 005164   200022 756100                    STQ     TEMP1,,AUTO

     1527    15740    2           CALL CHK_PROC ALTRET(CHK_DB);

  15740  3 005165   005225 701000 3                  TSX1    CHK_PROC
         3 005166   005170 702000 3                  TSX2    CHK_DB

     1528    15741    2           GOTO SEA_RET;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:228  

  15741  3 005167   005133 710000 3                  TRA     SEA_RET

     1529    15742    2   CHK_DB: TEMP1 = JL$HEAD.DB;

  15742  3 005170   000000 470400 xsym  CHK_DB       LDP0    B$SBUF1$
         3 005171   000010 236100                    LDQ     8,,PR0
         3 005172   000022 772000                    QRL     18
         3 005173   000777 376007                    ANQ     511,DL
         3 005174   200022 756100                    STQ     TEMP1,,AUTO

     1530    15743    2           CALL CHK_PROC ALTRET(CHK_NEXT);

  15743  3 005175   005225 701000 3                  TSX1    CHK_PROC
         3 005176   005200 702000 3                  TSX2    CHK_NEXT

     1531    15744    2           GOTO SEA_RET;

  15744  3 005177   005133 710000 3                  TRA     SEA_RET

     1532    15745    2   CHK_NEXT:
     1533    15746    2           FPT$PREC.V.N# = -2;

  15746  3 005200   000002 335007       CHK_NEXT     LCA     2,DL
         3 005201   200061 755100                    STA     FPT$PREC+7,,AUTO

     1534    15747    2           ID.N = ID.N - 1;

  15747  3 005202   200030 220100                    LDX0    LNKID,,AUTO
         3 005203   777777 621010                    EAX1    -1,X0
         3 005204   200030 741100                    STX1    LNKID,,AUTO

     1535    15748    2           END;

  15748  3 005205   005031 601000 3                  TNZ     s:15702

     1536    15749
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:229  
     1537    15750    1   SEA_ERR:
     1538    15751    1      CALL MME$WFVP(%USERWSQ,%SBUF1PG,TEMP1,TEMP1);

  15751  3 005206   200022 630500       SEA_ERR      EPPR0   TEMP1,,AUTO
         3 005207   200117 450500                    STP0    @ARS+4,,AUTO
         3 005210   200022 631500                    EPPR1   TEMP1,,AUTO
         3 005211   200116 451500                    STP1    @ARS+3,,AUTO
         3 005212   000064 237000 4                  LDAQ    52
         3 005213   200114 757100                    STAQ    @ARS+1,,AUTO
         3 005214   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 005215   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 005216   000000 701000 xent               TSX1    MME$WFVP
         3 005217   000000 011000                    NOP     0

     1539    15752    1      CALL M$MCLOSE (J_FPT_CL_SAVE) ALTRET(SEA_ERR1);

  15752  3 005220   000104 630400 4                  EPPR0   68
         3 005221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 005222   000000 701000 xent               TSX1    M$MCLOSE
         3 005223   005224 702000 3                  TSX2    SEA_ERR1

     1540    15753    1   SEA_ERR1: ALTRETURN;

  15753  3 005224   000000 702200 xent  SEA_ERR1     TSX2  ! X66_AALT

     1541    15754
     1542    15755    1   CHK_PROC: PROC ALTRET;

  15755  3 005225   200102 741300       CHK_PROC     STX1  ! FPT$READ+14,,AUTO

     1543    15756    2   DCL 1 TXTC BASED(B$PS1$),
     1544    15757    2         2 C UBIN BYTE CALIGNED,
     1545    15758    2         2 TEXT CHAR (TXTC.C);
     1546    15759    2      IF TEMP1 = 0 THEN ALTRETURN;

  15759  3 005226   200022 235100                    LDA     TEMP1,,AUTO
         3 005227   005231 601000 3                  TNZ     s:15760
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:230  

  15759  3 005230   000000 702211                    TSX2  ! 0,X1

     1547    15760    2      IF B$P.NAME.TEXT (TEMP1) = TXTC.TEXT

  15760  3 005231   000000 470400 xsym               LDP0    B$PS1$
         3 005232   000100 101500                    MRL     fill='000'O
         3 005233   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 005234   200114 000002                    ADSC9   @ARS+1,,AUTO             cn=0,n=2
         3 005235   200114 220100                    LDX0    @ARS+1,,AUTO
         3 005236   200022 236100                    LDQ     TEMP1,,AUTO
         3 005237   000210 402007                    MPY     136,DL
         3 005240   000000 471400 xsym               LDP1    B$P$
         3 005241   040140 106506                    CMPC    fill='040'O
         3 005242   100032 200037                    ADSC9   26,Q,PR1                 cn=1,n=31
         3 005243   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 005244   005246 601000 3                  TNZ     s:15762

     1548    15761    2      THEN RETURN;

  15761  3 005245   000001 702211                    TSX2  ! 1,X1

     1549    15762    2      ALTRETURN;

  15762  3 005246   000000 702211                    TSX2  ! 0,X1

     1550    15763    2   END CHK_PROC;
     1551    15764        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:231  
     1552    15765        /*************************************************************
     1553    15766         *                                                           *
     1554    15767         *                      WRITE_SEGS                           *
     1555    15768         *                                                           *
     1556    15769         *************************************************************/
     1557    15770
     1558    15771        /* This routine writes user's and ASL's or DB's data segments into
     1559    15772           the image file. User data segment #2 (common) will never be
     1560    15773           saved for a ldlnk file, as its size field in the header is zero.
     1561    15774        */
     1562    15775
     1563    15776    1   WRITE_SEGS: PROC(LS$,SIZES$,RECTYPE) ALTRET;

  15776  3 005247   200102 741300       WRITE_SEGS   STX1  ! FPT$READ+14,,AUTO

     1564    15777    2   DCL LS$ PTR;
     1565    15778    2   DCL SIZES$ PTR;
     1566    15779    2   DCL RECTYPE SBIN;
     1567    15780    2   DCL B$SIZE(0:7) UBIN BASED;
     1568    15781
     1569    15782    2      TEMP1 = BITBIN(%DS1SID & '1777'O)*2; /* Word index into lseg               */

  15782  3 005250   000010 235007                    LDA     8,DL
         3 005251   200022 755100                    STA     TEMP1,,AUTO

     1570    15783    2      LPTR$ = PINCRW(LS$,TEMP1);

  15783  3 005252   200103 470500                    LDP0    @LS$,,AUTO
         3 005253   000000 471500                    LDP1    0,,PR0
         3 005254   100000 633505                    EPPR3   0,AL,PR1
         3 005255   200006 453500                    STP3    LPTR$,,AUTO

     1571    15784    3      DO I = 0 TO 7;

  15784  3 005256   200012 450100                    STZ     I,,AUTO

     1572    15785        /* NOTE: JL$HEAD.UDS(1) will always = 0 on M$LINK'S. */
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:232  
     1573    15786    3           TEMP3 = SIZES$->B$SIZE(I);

  15786  3 005257   200104 470500                    LDP0    @SIZES$,,AUTO
         3 005260   000000 471500                    LDP1    0,,PR0
         3 005261   200012 720100                    LXL0    I,,AUTO
         3 005262   100000 235110                    LDA     0,X0,PR1
         3 005263   200024 755100                    STA     TEMP3,,AUTO

     1574    15787    3           IF TEMP3 > 0

  15787  3 005264   005445 604400 3                  TMOZ    s:15822

     1575    15788    4           THEN DO;                        /* Save all existing data segments    */

     1576    15789    4                IF LPTR$ -> B$DESCR.FLGS & %DSEXEC

  15789  3 005265   200006 471500                    LDP1    LPTR$,,AUTO
         3 005266   100000 236100                    LDQ     0,,PR1
         3 005267   000024 736000                    QLS     20
         3 005270   777000 376003                    ANQ     -512,DU
         3 005271   010000 376003                    ANQ     4096,DU
         3 005272   005277 600000 3                  TZE     s:15794

     1577    15790    5                THEN DO;

     1578    15791    5                     SIZES$ -> B$SIZE (I) = TEMP3 + BITBIN ('200000000000'O);

  15791  3 005273   000000 473500                    LDP3    0,,PR0
         3 005274   200024 236100                    LDQ     TEMP3,,AUTO
         3 005275   000056 036000 1                  ADLQ    FPT_READ+24
         3 005276   300000 756110                    STQ     0,X0,PR3

     1579    15792    5                     END;

     1580    15793                                           /* Get base & bound of dataseg descriptor  */
     1581    15794    4                TEMP2 = LPTR$ -> B$DESCR.BASE / 4096;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:233  
  15794  3 005277   100001 236100                    LDQ     1,,PR1
         3 005300   010000 506007                    DIV     4096,DL
         3 005301   200023 756100                    STQ     TEMP2,,AUTO

     1582    15795    4                N = MOD(TEMP3,1024);       /* Size of last rec for seg           */

  15795  3 005302   200024 236100                    LDQ     TEMP3,,AUTO
         3 005303   002000 506007                    DIV     1024,DL
         3 005304   200014 755100                    STA     N,,AUTO

     1583    15796    4                TEMP3 = TEMP3/1024;

  15796  3 005305   200024 236100                    LDQ     TEMP3,,AUTO
         3 005306   002000 506007                    DIV     1024,DL
         3 005307   200024 756100                    STQ     TEMP3,,AUTO

     1584    15797    5                DO J = 1 TO TEMP3;         /* Write each full pg of seg          */

  15797  3 005310   000001 235007                    LDA     1,DL
         3 005311   200013 755100                    STA     J,,AUTO
         3 005312   005366 710000 3                  TRA     s:15808+1

     1585    15798    6                     DO INHIBIT;

     1586    15799    6                          B$LS$->B$MLS.MISC2=LPTR$->B$DESCR;

  15799  3 005313   200006 470700                    LDP0  ! LPTR$,,AUTO
         3 005314   000000 471600 xsym               LDP1  ! B$LS$
         3 005315   000100 100700                    MLR   ! fill='000'O
         3 005316   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 005317   100260 000010                    ADSC9   176,,PR1                 cn=0,n=8

     1587    15800    6                          FPT$WRITE.BUF_.BUF$=PINCRW(B$MISC2$,(J-1)*1024);

  15800  3 005320   200013 236300                    LDQ   ! J,,AUTO
         3 005321   000034 736200                    QLS   ! 28
         3 005322   002000 136203                    SBLQ  ! 1024,DU
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:234  
         3 005323   000000 036200 xsym               ADLQ  ! B$MISC2$
         3 005324   200043 756300                    STQ   ! FPT$WRITE+5,,AUTO

     1588    15801    6                          IF B$UPT$ -> B$MAP.CTRL(TEMP2)&%PGINMEM

  15801  3 005325   000000 473600 xsym               LDP3  ! B$UPT$
         3 005326   200023 720300                    LXL0  ! TEMP2,,AUTO
         3 005327   300000 236310                    LDQ   ! 0,X0,PR3
         3 005330   000036 736200                    QLS   ! 30
         3 005331   400000 376203                    ANQ   ! -131072,DU
         3 005332   005350 600200 3                  TZE   ! s:15804

     1589    15802    6                          THEN CALL WRITE_STAR(JL_FULLPAGE,RECTYPE+I,TEMP2)

  15802  3 005333   200105 474700                    LDP4  ! @RECTYPE,,AUTO
         3 005334   400000 236300                    LDQ   ! 0,,PR4
         3 005335   200012 036300                    ADLQ  ! I,,AUTO
         3 005336   200132 756300                    STQ   ! @ARS+15,,AUTO
         3 005337   200023 635700                    EPPR5 ! TEMP2,,AUTO
         3 005340   200113 455700                    STP5  ! @KEYTYPE+1,,AUTO
         3 005341   200132 636700                    EPPR6 ! @ARS+15,,AUTO
         3 005342   200112 456700                    STP6  ! @BUFSIZE+1,,AUTO
         3 005343   000013 236200 4                  LDQ   ! 11
         3 005344   200111 756300                    STQ   ! TMP+3,,AUTO
         3 005345   006344 701200 3                  TSX1  ! WRITE_STAR
         3 005346   005456 702200 3                  TSX2  ! SNARF
         3 005347   005364 710200 3                  TRA   ! s:15807

     1590    15803    6                                 ALTRET(SNARF);
     1591    15804    6                          ELSE CALL WRITE_STAR(0,RECTYPE+I,TEMP2)

  15804  3 005350   200105 474700                    LDP4  ! @RECTYPE,,AUTO
         3 005351   400000 236300                    LDQ   ! 0,,PR4
         3 005352   200012 036300                    ADLQ  ! I,,AUTO
         3 005353   200133 756300                    STQ   ! @ARS+16,,AUTO
         3 005354   200023 635700                    EPPR5 ! TEMP2,,AUTO
         3 005355   200113 455700                    STP5  ! @KEYTYPE+1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:235  
         3 005356   200133 636700                    EPPR6 ! @ARS+16,,AUTO
         3 005357   200112 456700                    STP6  ! @BUFSIZE+1,,AUTO
         3 005360   000002 236200 4                  LDQ   ! 2
         3 005361   200111 756300                    STQ   ! TMP+3,,AUTO
         3 005362   006344 701200 3                  TSX1  ! WRITE_STAR
         3 005363   005456 702200 3                  TSX2  ! SNARF

     1592    15805    6                                 ALTRET(SNARF);
     1593    15806    6                          END;             /* Inhibit                            */

     1594    15807    5                     TEMP2 = TEMP2 + 1;

  15807  3 005364   200023 054100                    AOS     TEMP2,,AUTO

     1595    15808    5                     END;

  15808  3 005365   200013 054100                    AOS     J,,AUTO
         3 005366   200013 236100                    LDQ     J,,AUTO
         3 005367   200024 116100                    CMPQ    TEMP3,,AUTO
         3 005370   005313 604400 3                  TMOZ    s:15799

     1596    15809    4                IF N > 0

  15809  3 005371   200014 235100                    LDA     N,,AUTO
         3 005372   005445 604400 3                  TMOZ    s:15822

     1597    15810    5                THEN DO;                   /* Do if end of seg didn't fill pg    */

     1598    15811    6                     DO INHIBIT;

     1599    15812    6                          B$LS$->B$MLS.MISC2=LPTR$->B$DESCR;

  15812  3 005373   200006 470700                    LDP0  ! LPTR$,,AUTO
         3 005374   000000 471600 xsym               LDP1  ! B$LS$
         3 005375   000100 100700                    MLR   ! fill='000'O
         3 005376   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 005377   100260 000010                    ADSC9   176,,PR1                 cn=0,n=8
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:236  

     1600    15813    6                          FPT$WRITE.BUF_.BUF$=PINCRW(B$MISC2$,TEMP3*1024);

  15813  3 005400   200024 236300                    LDQ   ! TEMP3,,AUTO
         3 005401   000034 736200                    QLS   ! 28
         3 005402   000000 036200 xsym               ADLQ  ! B$MISC2$
         3 005403   200043 756300                    STQ   ! FPT$WRITE+5,,AUTO

     1601    15814    6                          IF B$UPT$ -> B$MAP.CTRL(TEMP2)&%PGINMEM

  15814  3 005404   000000 473600 xsym               LDP3  ! B$UPT$
         3 005405   200023 720300                    LXL0  ! TEMP2,,AUTO
         3 005406   300000 236310                    LDQ   ! 0,X0,PR3
         3 005407   000036 736200                    QLS   ! 30
         3 005410   400000 376203                    ANQ   ! -131072,DU
         3 005411   005431 600200 3                  TZE   ! s:15817

     1602    15815    6                          THEN CALL WRITE_STAR(N*4,RECTYPE+I,TEMP2)

  15815  3 005412   200105 474700                    LDP4  ! @RECTYPE,,AUTO
         3 005413   400000 236300                    LDQ   ! 0,,PR4
         3 005414   200012 036300                    ADLQ  ! I,,AUTO
         3 005415   000002 735200                    ALS   ! 2
         3 005416   200134 755300                    STA   ! @ARS+17,,AUTO
         3 005417   200135 756300                    STQ   ! @ARS+18,,AUTO
         3 005420   200023 635700                    EPPR5 ! TEMP2,,AUTO
         3 005421   200113 455700                    STP5  ! @KEYTYPE+1,,AUTO
         3 005422   200135 636700                    EPPR6 ! @ARS+18,,AUTO
         3 005423   200112 456700                    STP6  ! @BUFSIZE+1,,AUTO
         3 005424   200134 637700                    EPPR7 ! @ARS+17,,AUTO
         3 005425   200111 457700                    STP7  ! TMP+3,,AUTO
         3 005426   006344 701200 3                  TSX1  ! WRITE_STAR
         3 005427   005456 702200 3                  TSX2  ! SNARF
         3 005430   005445 710200 3                  TRA   ! s:15822

     1603    15816    6                                 ALTRET(SNARF);
     1604    15817    6                          ELSE CALL WRITE_STAR(0,RECTYPE+I,TEMP2)
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:237  

  15817  3 005431   200105 474700                    LDP4  ! @RECTYPE,,AUTO
         3 005432   400000 236300                    LDQ   ! 0,,PR4
         3 005433   200012 036300                    ADLQ  ! I,,AUTO
         3 005434   200136 756300                    STQ   ! @ARS+19,,AUTO
         3 005435   200023 635700                    EPPR5 ! TEMP2,,AUTO
         3 005436   200113 455700                    STP5  ! @KEYTYPE+1,,AUTO
         3 005437   200136 636700                    EPPR6 ! @ARS+19,,AUTO
         3 005440   200112 456700                    STP6  ! @BUFSIZE+1,,AUTO
         3 005441   000002 236200 4                  LDQ   ! 2
         3 005442   200111 756300                    STQ   ! TMP+3,,AUTO
         3 005443   006344 701200 3                  TSX1  ! WRITE_STAR
         3 005444   005456 702200 3                  TSX2  ! SNARF

     1605    15818    6                                 ALTRET(SNARF);
     1606    15819    6                          END;             /* Inhibit                            */

     1607    15820    5                     END;

     1608    15821    4                END;

     1609    15822    3           LPTR$ = PINCRW(LPTR$,2);        /* Point to nxt dataseg descr         */

  15822  3 005445   200006 236100                    LDQ     LPTR$,,AUTO
         3 005446   000002 036003                    ADLQ    2,DU
         3 005447   200006 756100                    STQ     LPTR$,,AUTO

     1610    15823    3           END;                            /* End of i = 0 to 7 loop             */

  15823  3 005450   200012 054100                    AOS     I,,AUTO
         3 005451   200012 235100                    LDA     I,,AUTO
         3 005452   000007 115007                    CMPA    7,DL
         3 005453   005257 604400 3                  TMOZ    s:15786

     1611    15824    2      RETURN;

  15824  3 005454   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:238  
         3 005455   000001 702211                    TSX2  ! 1,X1

     1612    15825    2   SNARF: ALTRETURN;

  15825  3 005456   200102 221300       SNARF        LDX1  ! FPT$READ+14,,AUTO
         3 005457   000000 702211                    TSX2  ! 0,X1

     1613    15826    2   END WRITE_SEGS;
     1614    15827        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:239  
     1615    15828        /*************************************************************
     1616    15829         *                                                           *
     1617    15830         *                       READ_SEGS                           *
     1618    15831         *                                                           *
     1619    15832         *************************************************************/
     1620    15833
     1621    15834        /* This routine reads in the user, ASL & DB data segments from the
     1622    15835           image  file (except, of course, for user common on an M$LINK).
     1623    15836        */
     1624    15837
     1625    15838    1   READ_SEGS: PROC(WSQ,LS$,SIZES$,RECTYPE) ALTRET;

  15838  3 005460   200102 741300       READ_SEGS    STX1  ! FPT$READ+14,,AUTO

     1626    15839    2   DCL WSQ SBIN;
     1627    15840    2   DCL LS$ PTR;
     1628    15841    2   DCL SIZES$ PTR;
     1629    15842    2   DCL RECTYPE SBIN;
     1630    15843    2   DCL B$SIZE(0:7) UBIN BASED;
     1631    15844
     1632    15845    2      TEMP1 = BITBIN(%DS1SID & '1777'O)*2; /* Word index into lseg               */

  15845  3 005461   000010 235007                    LDA     8,DL
         3 005462   200022 755100                    STA     TEMP1,,AUTO

     1633    15846    2      SID = BITBIN(%DS1SID);

  15846  3 005463   006004 236007                    LDQ     3076,DL
         3 005464   200016 756100                    STQ     SID,,AUTO

     1634    15847    2      LPTR$ = PINCRW(LS$,TEMP1);

  15847  3 005465   200104 470500                    LDP0    @LS$,,AUTO
         3 005466   000000 471500                    LDP1    0,,PR0
         3 005467   100000 633505                    EPPR3   0,AL,PR1
         3 005470   200006 453500                    STP3    LPTR$,,AUTO

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:240  
     1635    15848    3      DO I = 0 TO 7;

  15848  3 005471   200012 450100                    STZ     I,,AUTO

     1636    15849        /* NOTE: JL$HEAD.UDS(1) will always = 0 on an M$LINK return. */
     1637    15850    3           IF SIZES$->B$SIZE(I) > 0

  15850  3 005472   200105 470500                    LDP0    @SIZES$,,AUTO
         3 005473   000000 471500                    LDP1    0,,PR0
         3 005474   200012 720100                    LXL0    I,,AUTO
         3 005475   100000 235110                    LDA     0,X0,PR1
         3 005476   005630 600000 3                  TZE     s:15888

     1638    15851    4           THEN DO;

     1639    15852    4                N = SIZES$->B$SIZE(I);     /* Number of words in seg             */

  15852  3 005477   200014 755100                    STA     N,,AUTO

     1640    15853    4                CALL MMH$GDS(WSQ,SID,N,ERR) /* N may have VIRTONLY               */

  15853  3 005500   200004 236100                    LDQ     @ERR,,AUTO
         3 005501   200117 756100                    STQ     @ARS+4,,AUTO
         3 005502   200014 631500                    EPPR1   N,,AUTO
         3 005503   200116 451500                    STP1    @ARS+3,,AUTO
         3 005504   200016 633500                    EPPR3   SID,,AUTO
         3 005505   200115 453500                    STP3    @ARS+2,,AUTO
         3 005506   200103 236100                    LDQ     @WSQ,,AUTO
         3 005507   200114 756100                    STQ     @ARS+1,,AUTO
         3 005510   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 005511   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 005512   000000 701000 xent               TSX1    MMH$GDS
         3 005513   005603 702000 3                  TSX2    s:15878

     1641    15854    5                WHENRETURN DO;

     1642    15855    5                     N = NN.U;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:241  

  15855  3 005514   200014 236100                    LDQ     N,,AUTO
         3 005515   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 005516   200014 756100                    STQ     N,,AUTO

     1643    15856    5                     TEMP3 = MOD(N,1024) * 4; /* leftover bytes                  */

  15856  3 005517   002000 506007                    DIV     1024,DL
         3 005520   000002 735000                    ALS     2
         3 005521   200024 755100                    STA     TEMP3,,AUTO

     1644    15857    5                     TEMP2 = N/1024;       /* full pages                         */

  15857  3 005522   200014 236100                    LDQ     N,,AUTO
         3 005523   002000 506007                    DIV     1024,DL
         3 005524   200023 756100                    STQ     TEMP2,,AUTO

     1645    15858    5                     FPT$READ.BUF_.BUF$ = B$MISC2$;

  15858  3 005525   000000 236000 xsym               LDQ     B$MISC2$
         3 005526   200071 756100                    STQ     FPT$READ+5,,AUTO

     1646    15859    6                     DO J = 1 TO TEMP2;

  15859  3 005527   000001 235007                    LDA     1,DL
         3 005530   200013 755100                    STA     J,,AUTO
         3 005531   005554 710000 3                  TRA     s:15864+1

     1647    15860    7                          DO INHIBIT;

     1648    15861    7                               B$LS$->B$MLS.MISC2=LPTR$->B$DESCR;

  15861  3 005532   200006 470700                    LDP0  ! LPTR$,,AUTO
         3 005533   000000 471600 xsym               LDP1  ! B$LS$
         3 005534   000100 100700                    MLR   ! fill='000'O
         3 005535   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 005536   100260 000010                    ADSC9   176,,PR1                 cn=0,n=8
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:242  

     1649    15862    7                               CALL READ_STAR(JL_FULLPAGE,RECTYPE+I,N) ALTRET(SNARF);

  15862  3 005537   200106 473700                    LDP3  ! @RECTYPE,,AUTO
         3 005540   300000 236300                    LDQ   ! 0,,PR3
         3 005541   200012 036300                    ADLQ  ! I,,AUTO
         3 005542   200137 756300                    STQ   ! @ARS+20,,AUTO
         3 005543   200014 634700                    EPPR4 ! N,,AUTO
         3 005544   200113 454700                    STP4  ! @KEYTYPE+1,,AUTO
         3 005545   200137 635700                    EPPR5 ! @ARS+20,,AUTO
         3 005546   200112 455700                    STP5  ! @BUFSIZE+1,,AUTO
         3 005547   000013 236200 4                  LDQ   ! 11
         3 005550   200111 756300                    STQ   ! TMP+3,,AUTO
         3 005551   006407 701200 3                  TSX1  ! READ_STAR
         3 005552   005642 702200 3                  TSX2  ! SNARF

     1650    15863    7                               END;        /* Inhibit                            */

     1651    15864    6                          END;

  15864  3 005553   200013 054100                    AOS     J,,AUTO
         3 005554   200013 236100                    LDQ     J,,AUTO
         3 005555   200023 116100                    CMPQ    TEMP2,,AUTO
         3 005556   005532 604400 3                  TMOZ    s:15861

     1652    15865        /* If seg wasn't an even multiple of pages, read in the last bit */
     1653    15866    5                     IF TEMP3 ~= 0

  15866  3 005557   200024 235100                    LDA     TEMP3,,AUTO
         3 005560   005602 600000 3                  TZE     s:15871

     1654    15867    6                     THEN DO INHIBIT;

     1655    15868    6                          B$LS$->B$MLS.MISC2=LPTR$->B$DESCR;

  15868  3 005561   200006 470700                    LDP0  ! LPTR$,,AUTO
         3 005562   000000 471600 xsym               LDP1  ! B$LS$
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:243  
         3 005563   000100 100700                    MLR   ! fill='000'O
         3 005564   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 005565   100260 000010                    ADSC9   176,,PR1                 cn=0,n=8

     1656    15869    6                          CALL READ_STAR(TEMP3,RECTYPE+I,N) ALTRET(SNARF);

  15869  3 005566   200106 473700                    LDP3  ! @RECTYPE,,AUTO
         3 005567   300000 236300                    LDQ   ! 0,,PR3
         3 005570   200012 036300                    ADLQ  ! I,,AUTO
         3 005571   200140 756300                    STQ   ! @ARS+21,,AUTO
         3 005572   200014 634700                    EPPR4 ! N,,AUTO
         3 005573   200113 454700                    STP4  ! @KEYTYPE+1,,AUTO
         3 005574   200140 635700                    EPPR5 ! @ARS+21,,AUTO
         3 005575   200112 455700                    STP5  ! @BUFSIZE+1,,AUTO
         3 005576   200024 636700                    EPPR6 ! TEMP3,,AUTO
         3 005577   200111 456700                    STP6  ! TMP+3,,AUTO
         3 005600   006407 701200 3                  TSX1  ! READ_STAR
         3 005601   005642 702200 3                  TSX2  ! SNARF

     1657    15870    6                          END;             /* Inhibit                            */

     1658    15871    5                     END/*If the pages are available*/;

  15871  3 005602   005630 710000 3                  TRA     s:15888

     1659    15872
     1660    15873        /* If MM can't get the pages, it is probably because the M$LINKed to
     1661    15874           program expanded the size of the common data segment to the point
     1662    15875           where now the user data segment space is over allocated.
     1663    15876        */
     1664    15877    5                WHENALTRETURN DO;

     1665    15878    5                     IF (B$JIT.JUNK & %JJ_GETTING#)

  15878  3 005603   000000 470400 xsym               LDP0    B$JIT$
         3 005604   000315 220100                    LDX0    205,,PR0
         3 005605   020000 360003                    ANX0    8192,DU
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:244  
         3 005606   005611 600000 3                  TZE     s:15881

     1666    15879    5                     THEN ALTRETURN;

  15879  3 005607   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 005610   000000 702211                    TSX2  ! 0,X1

     1667    15880
     1668    15881    5                     FPT$PREC.V.N# = (NN.U+1023)/1024; /*# of recs*/

  15881  3 005611   200014 236100                    LDQ     N,,AUTO
         3 005612   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 005613   001777 036007                    ADLQ    1023,DL
         3 005614   000012 772000                    QRL     10
         3 005615   200061 756100                    STQ     FPT$PREC+7,,AUTO

     1669    15882    5                     CALL M$MPRECORD(FPT$PREC) ALTRET(SNARF);

  15882  3 005616   200052 631500                    EPPR1   FPT$PREC,,AUTO
         3 005617   200114 451500                    STP1    @ARS+1,,AUTO
         3 005620   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 005621   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 005622   000000 701000 xent               TSX1    M$MPRECORD
         3 005623   005642 702000 3                  TSX2    SNARF

     1670    15883
     1671    15884    5                     B$JIT.JUNK2 = (B$JIT.JUNK2 | %JJ2_MEM_ERR#);

  15884  3 005624   000000 470400 xsym               LDP0    B$JIT$
         3 005625   000321 220100                    LDX0    209,,PR0
         3 005626   000100 260003                    ORX0    64,DU
         3 005627   000321 740100                    STX0    209,,PR0

     1672    15885    5                     END/*MMH$GDS Altret*/;

     1673    15886    4                END/*do if this B$SIZE > 0*/;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:245  
     1674    15887
     1675    15888    3           LPTR$ = PINCRW(LPTR$,2);        /* Point to nxt dataseg dsecr         */

  15888  3 005630   200006 236100                    LDQ     LPTR$,,AUTO
         3 005631   000002 036003                    ADLQ    2,DU
         3 005632   200006 756100                    STQ     LPTR$,,AUTO

     1676    15889    3           SID = SID + 1;

  15889  3 005633   200016 054100                    AOS     SID,,AUTO

     1677    15890    3           END;

  15890  3 005634   200012 054100                    AOS     I,,AUTO
         3 005635   200012 235100                    LDA     I,,AUTO
         3 005636   000007 115007                    CMPA    7,DL
         3 005637   005472 604400 3                  TMOZ    s:15850

     1678    15891    2      RETURN;

  15891  3 005640   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 005641   000001 702211                    TSX2  ! 1,X1

     1679    15892    2   SNARF: ALTRETURN;

  15892  3 005642   200102 221300       SNARF        LDX1  ! FPT$READ+14,,AUTO
         3 005643   000000 702211                    TSX2  ! 0,X1

     1680    15893    2   END READ_SEGS;
     1681    15894        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:246  
     1682    15895        /*************************************************************
     1683    15896         *                                                           *
     1684    15897         *                       WRITE_TCB                           *
     1685    15898         *                                                           *
     1686    15899         *************************************************************/
     1687    15900
     1688    15901        /* This routine will write out the debugger or ASL TCBs.
     1689    15902        */
     1690    15903
     1691    15904    1   WRITE_TCB: PROC(TYPE) ALTRET;

  15904  3 005644   200102 741300       WRITE_TCB    STX1  ! FPT$READ+14,,AUTO

     1692    15905    2   DCL TYPE UBIN;
     1693    15906    2   DCL TCBSIZE UBIN;
     1694    15907    2   DCL TCB$ PTR;
     1695    15908
     1696    15909    2      TEMP1 = BITBIN(%TCBSID & '1777'O)*2;

  15909  3 005645   000036 235007                    LDA     30,DL
         3 005646   200022 755100                    STA     TEMP1,,AUTO

     1697    15910    2      IF TYPE = JL_ATCBTYPE

  15910  3 005647   200103 470500                    LDP0    @TYPE,,AUTO
         3 005650   000000 235100                    LDA     0,,PR0
         3 005651   000020 115007                    CMPA    16,DL
         3 005652   005665 601000 3                  TNZ     s:15916

     1698    15911    3      THEN DO;

     1699    15912    3           TCBSIZE = JL$HEAD.ASLTCB + 1;

  15912  3 005653   000000 471400 xsym               LDP1    B$SBUF1$
         3 005654   100046 236100                    LDQ     38,,PR1
         3 005655   000022 772000                    QRL     18
         3 005656   000001 036007                    ADLQ    1,DL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:247  
         3 005657   200104 756100                    STQ     TCBSIZE,,AUTO

     1700    15913    3           TCB$ = PINCRW(B$ASLLS$,TEMP1);

  15913  3 005660   200022 236100                    LDQ     TEMP1,,AUTO
         3 005661   000022 736000                    QLS     18
         3 005662   000000 036000 xsym               ADLQ    B$ASLLS$
         3 005663   200105 756100                    STQ     TCB$,,AUTO

     1701    15914    3           END;

  15914  3 005664   005676 710000 3                  TRA     s:15920

     1702    15915    3      ELSE DO;

     1703    15916    3           TCBSIZE = JL$HEAD.DBTCB + 1;

  15916  3 005665   000000 471400 xsym               LDP1    B$SBUF1$
         3 005666   100046 236100                    LDQ     38,,PR1
         3 005667   777777 376007                    ANQ     -1,DL
         3 005670   000001 036007                    ADLQ    1,DL
         3 005671   200104 756100                    STQ     TCBSIZE,,AUTO

     1704    15917    3           TCB$ = PINCRW(B$DBLS$,TEMP1);

  15917  3 005672   200022 236100                    LDQ     TEMP1,,AUTO
         3 005673   000022 736000                    QLS     18
         3 005674   000000 036000 xsym               ADLQ    B$DBLS$
         3 005675   200105 756100                    STQ     TCB$,,AUTO

     1705    15918    3           END;

     1706    15919    3      DO INHIBIT;

     1707    15920    3           B$LS$->B$MLS.MISC2=TCB$->B$DESCR;

  15920  3 005676   200105 473700                    LDP3  ! TCB$,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:248  
         3 005677   000000 474600 xsym               LDP4  ! B$LS$
         3 005700   000100 100700                    MLR   ! fill='000'O
         3 005701   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         3 005702   400260 000010                    ADSC9   176,,PR4                 cn=0,n=8

     1708    15921    3           FPT$WRITE.BUF_.BUF$=B$MISC2$;

  15921  3 005703   000000 236200 xsym               LDQ   ! B$MISC2$
         3 005704   200043 756300                    STQ   ! FPT$WRITE+5,,AUTO

     1709    15922    3           CALL WRITE_STAR(TCBSIZE,TYPE,0) ALTRET(WTCB_ERR);

  15922  3 005705   000002 236200 4                  LDQ   ! 2
         3 005706   200103 235300                    LDA   ! @TYPE,,AUTO
         3 005707   200112 757300                    STAQ  ! @BUFSIZE+1,,AUTO
         3 005710   200104 635700                    EPPR5 ! TCBSIZE,,AUTO
         3 005711   200111 455700                    STP5  ! TMP+3,,AUTO
         3 005712   006344 701200 3                  TSX1  ! WRITE_STAR
         3 005713   005716 702200 3                  TSX2  ! WTCB_ERR

     1710    15923    3           END;                            /* Inhibit                            */

     1711    15924    2      RETURN;

  15924  3 005714   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 005715   000001 702211                    TSX2  ! 1,X1

     1712    15925    2   WTCB_ERR:
     1713    15926    2      ALTRETURN;

  15926  3 005716   200102 221300       WTCB_ERR     LDX1  ! FPT$READ+14,,AUTO
         3 005717   000000 702211                    TSX2  ! 0,X1

     1714    15927    2   END WRITE_TCB;
     1715    15928
     1716    15929        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:249  
     1717    15930        /*************************************************************
     1718    15931         *                                                           *
     1719    15932         *                        READ_TCB                           *
     1720    15933         *                                                           *
     1721    15934         *************************************************************/
     1722    15935
     1723    15936        /* This routine restores ASL and debugger TCBs.
     1724    15937        */
     1725    15938
     1726    15939    1   READ_TCB: PROC(TYPE) ALTRET;

  15939  3 005720   200102 741300       READ_TCB     STX1  ! FPT$READ+14,,AUTO

     1727    15940    2   DCL TYPE UBIN;
     1728    15941    2   DCL TCBSIZE UBIN;
     1729    15942    2   DCL TCB$ PTR;
     1730    15943
     1731    15944    2      TEMP1 = BITBIN(%TCBSID & '1777'O)*2;

  15944  3 005721   000036 235007                    LDA     30,DL
         3 005722   200022 755100                    STA     TEMP1,,AUTO

     1732    15945    2      IF TYPE = JL_ATCBTYPE

  15945  3 005723   200103 470500                    LDP0    @TYPE,,AUTO
         3 005724   000000 235100                    LDA     0,,PR0
         3 005725   000020 115007                    CMPA    16,DL
         3 005726   005741 601000 3                  TNZ     s:15951

     1733    15946    3      THEN DO;

     1734    15947    3           TCBSIZE = JL$HEAD.ASLTCB + 1;

  15947  3 005727   000000 471400 xsym               LDP1    B$SBUF1$
         3 005730   100046 236100                    LDQ     38,,PR1
         3 005731   000022 772000                    QRL     18
         3 005732   000001 036007                    ADLQ    1,DL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:250  
         3 005733   200104 756100                    STQ     TCBSIZE,,AUTO

     1735    15948    3           TCB$ = PINCRW(B$ASLLS$,TEMP1);

  15948  3 005734   200022 236100                    LDQ     TEMP1,,AUTO
         3 005735   000022 736000                    QLS     18
         3 005736   000000 036000 xsym               ADLQ    B$ASLLS$
         3 005737   200105 756100                    STQ     TCB$,,AUTO

     1736    15949    3           END;

  15949  3 005740   005752 710000 3                  TRA     s:15955

     1737    15950    3      ELSE DO;

     1738    15951    3           TCBSIZE = JL$HEAD.DBTCB + 1;

  15951  3 005741   000000 471400 xsym               LDP1    B$SBUF1$
         3 005742   100046 236100                    LDQ     38,,PR1
         3 005743   777777 376007                    ANQ     -1,DL
         3 005744   000001 036007                    ADLQ    1,DL
         3 005745   200104 756100                    STQ     TCBSIZE,,AUTO

     1739    15952    3           TCB$ = PINCRW(B$DBLS$,TEMP1);

  15952  3 005746   200022 236100                    LDQ     TEMP1,,AUTO
         3 005747   000022 736000                    QLS     18
         3 005750   000000 036000 xsym               ADLQ    B$DBLS$
         3 005751   200105 756100                    STQ     TCB$,,AUTO

     1740    15953    3           END;

     1741    15954    3      DO INHIBIT;

     1742    15955    3           B$LS$->B$MLS.MISC2=TCB$->B$DESCR;

  15955  3 005752   200105 473700                    LDP3  ! TCB$,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:251  
         3 005753   000000 474600 xsym               LDP4  ! B$LS$
         3 005754   000100 100700                    MLR   ! fill='000'O
         3 005755   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         3 005756   400260 000010                    ADSC9   176,,PR4                 cn=0,n=8

     1743    15956    3           ADDR(B$LS$->B$MLS.MISC2)->B$DESCR.FLGS=

  15956  3 005757   400260 236300                    LDQ   ! 176,,PR4
         3 005760   000024 736200                    QLS   ! 20
         3 005761   777000 376203                    ANQ   ! -512,DU
         3 005762   200000 276203                    ORQ   ! 65536,DU
         3 005763   000024 772200                    QRL   ! 20
         3 005764   400260 676300                    ERQ   ! 176,,PR4
         3 005765   177600 376207                    ANQ   ! 65408,DL
         3 005766   400260 656300                    ERSQ  ! 176,,PR4

     1744    15957    3             ADDR(B$LS$->B$MLS.MISC2)->B$DESCR.FLGS|%DSWRITE;
     1745    15958    3           FPT$READ.BUF_.BUF$=B$MISC2$;

  15958  3 005767   000000 236200 xsym               LDQ   ! B$MISC2$
         3 005770   200071 756300                    STQ   ! FPT$READ+5,,AUTO

     1746    15959    3           CALL READ_STAR(TCBSIZE,TYPE,TCBSIZE) ALTRET(WTCB_ERR);

  15959  3 005771   200104 635700                    EPPR5 ! TCBSIZE,,AUTO
         3 005772   200113 455700                    STP5  ! @KEYTYPE+1,,AUTO
         3 005773   200103 236300                    LDQ   ! @TYPE,,AUTO
         3 005774   200112 756300                    STQ   ! @BUFSIZE+1,,AUTO
         3 005775   200104 636700                    EPPR6 ! TCBSIZE,,AUTO
         3 005776   200111 456700                    STP6  ! TMP+3,,AUTO
         3 005777   006407 701200 3                  TSX1  ! READ_STAR
         3 006000   006003 702200 3                  TSX2  ! WTCB_ERR

     1747    15960    3           END;                            /* Inhibit                            */

     1748    15961    2      RETURN;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:252  
  15961  3 006001   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006002   000001 702211                    TSX2  ! 1,X1

     1749    15962    2   WTCB_ERR:
     1750    15963    2      ALTRETURN;

  15963  3 006003   200102 221300       WTCB_ERR     LDX1  ! FPT$READ+14,,AUTO
         3 006004   000000 702211                    TSX2  ! 0,X1

     1751    15964    2   END READ_TCB;
     1752    15965
     1753    15966        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:253  
     1754    15967        /*************************************************************
     1755    15968         *                                                           *
     1756    15969         *                      WRITE_DOLIST                         *
     1757    15970         *                                                           *
     1758    15971         *************************************************************/
     1759    15972    1   WRITE_DOLIST:PROC ALTRET;

  15972  3 006005   200102 741300       WRITE_DOLIST STX1  ! FPT$READ+14,,AUTO

     1760    15973
     1761    15974    2   DCL DO_SUB_LEN UBIN;
     1762    15975    2   DCL DO_TOT_LEN UBIN;
     1763    15976    2   DCL DO_CONT_OFF UBIN;
     1764    15977    2   DCL NEXT_DO$ PTR;
     1765    15978    2   DCL POS_DO$ PTR;
     1766    15979
     1767    15980    2   DCL DO_ENTRY CHAR(DO_SUB_LEN) BASED;
     1768    15981    2      I = 0;

  15981  3 006006   200012 450100                    STZ     I,,AUTO

     1769    15982    2      DO_CONT_OFF = SIZEC(B$DOCONT) - SIZEC(B$DOCONT.ECCINFO);

  15982  3 006007   000014 235007                    LDA     12,DL
         3 006010   200105 755100                    STA     DO_CONT_OFF,,AUTO

     1770    15983    2      NEXT_DO$ = B$U.DL$;

  15983  3 006011   000000 470400 xsym               LDP0    S$CU$
         3 006012   000015 236100                    LDQ     13,,PR0
         3 006013   200106 756100                    STQ     NEXT_DO$,,AUTO

     1771    15984    3      DO WHILE (NEXT_DO$ ~= ADDR(NIL));

  15984  3 006014   006115 710000 3                  TRA     s:16012

     1772    15985    4           IF NEXT_DO$->B$DO.ENTER ~= ENTADDR(NIL) THEN DO;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:254  

  15985  3 006015   200106 470500                    LDP0    NEXT_DO$,,AUTO
         3 006016   000001 236100                    LDQ     1,,PR0
         3 006017   000002 116000 xsym               CMPQ    B_VECTNIL+2
         3 006020   006031 600000 3                  TZE     s:15993

     1773    15986    4   CHECK_DO:
     1774    15987    5                IF NEXT_DO$->B$DO.CONT THEN DO;

  15987  3 006021   200106 470500       CHECK_DO     LDP0    NEXT_DO$,,AUTO
         3 006022   000002 236100                    LDQ     2,,PR0
         3 006023   200000 316003                    CANQ    65536,DU
         3 006024   006030 600000 3                  TZE     s:15991

     1775    15988    5                     NEXT_DO$ = NEXT_DO$->B$DO.LNK$;

  15988  3 006025   000000 236100                    LDQ     0,,PR0
         3 006026   200106 756100                    STQ     NEXT_DO$,,AUTO

     1776    15989    5                     GOTO CHECK_DO;

  15989  3 006027   006021 710000 3                  TRA     CHECK_DO

     1777    15990    5                     END;
     1778    15991    4                GOTO END_DO_WHILE;

  15991  3 006030   006112 710000 3                  TRA     END_DO_WHILE

     1779    15992    4                END;
     1780    15993    3           DO_SUB_LEN = SIZEC(B$DO);

  15993  3 006031   000060 235007                    LDA     48,DL
         3 006032   200103 755100                    STA     DO_SUB_LEN,,AUTO

     1781    15994    3           DO_TOT_LEN = DO_SUB_LEN;

  15994  3 006033   200104 755100                    STA     DO_TOT_LEN,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:255  

     1782    15995    3           B$SBUF1$->DO_ENTRY = NEXT_DO$->DO_ENTRY;

  15995  3 006034   000000 620005                    EAX0    0,AL
         3 006035   000000 471400 xsym               LDP1    B$SBUF1$
         3 006036   200103 721100                    LXL1    DO_SUB_LEN,,AUTO
         3 006037   040140 100540                    MLR     fill='040'O
         3 006040   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         3 006041   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1

     1783    15996    3   CHECK_DO_2:
     1784    15997    4           IF NEXT_DO$->B$DO.CONT THEN DO;

  15997  3 006042   200106 470500       CHECK_DO_2   LDP0    NEXT_DO$,,AUTO
         3 006043   000002 236100                    LDQ     2,,PR0
         3 006044   200000 316003                    CANQ    65536,DU
         3 006045   006067 600000 3                  TZE     s:16004

     1785    15998    4                NEXT_DO$ = NEXT_DO$->B$DO.LNK$;

  15998  3 006046   000000 236100                    LDQ     0,,PR0
         3 006047   200106 756100                    STQ     NEXT_DO$,,AUTO

     1786    15999    4                DO_SUB_LEN = SIZEC(B$DOCONT);

  15999  3 006050   000060 235007                    LDA     48,DL
         3 006051   200103 755100                    STA     DO_SUB_LEN,,AUTO

     1787    16000    4                PINCRC(B$SBUF1$,DO_TOT_LEN)->DO_ENTRY = PINCRC(NEXT_DO$,DO_CONT_OFF)->
             16000                         DO_ENTRY;

  16000  3 006052   200106 470500                    LDP0    NEXT_DO$,,AUTO
         3 006053   000000 620005                    EAX0    0,AL
         3 006054   200105 235100                    LDA     DO_CONT_OFF,,AUTO
         3 006055   000000 471400 xsym               LDP1    B$SBUF1$
         3 006056   200103 721100                    LXL1    DO_SUB_LEN,,AUTO
         3 006057   200104 236100                    LDQ     DO_TOT_LEN,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:256  
         3 006060   040146 100545                    MLR     fill='040'O
         3 006061   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
         3 006062   100000 000011                    ADSC9   0,Q,PR1                  cn=0,n=*X1

     1788    16001    4                DO_TOT_LEN = DO_TOT_LEN + DO_SUB_LEN;

  16001  3 006063   200104 236100                    LDQ     DO_TOT_LEN,,AUTO
         3 006064   200103 036100                    ADLQ    DO_SUB_LEN,,AUTO
         3 006065   200104 756100                    STQ     DO_TOT_LEN,,AUTO

     1789    16002    4                GOTO CHECK_DO_2;

  16002  3 006066   006042 710000 3                  TRA     CHECK_DO_2

     1790    16003    4                END;
     1791    16004    3           DO_TOT_LEN = B$SBUF1$->B$DO.ECCSZ * 4 + SIZEC(B$DO)-SIZEC(B$DO.ECCINFO);

  16004  3 006067   000000 471400 xsym               LDP1    B$SBUF1$
         3 006070   100005 235100                    LDA     5,,PR1
         3 006071   000002 735000                    ALS     2
         3 006072   000034 035007                    ADLA    28,DL
         3 006073   200104 755100                    STA     DO_TOT_LEN,,AUTO

     1792    16005    3           FPT$WRITE.BUF_.BUF$ = B$SBUF1$;

  16005  3 006074   000000 236000 xsym               LDQ     B$SBUF1$
         3 006075   200043 756100                    STQ     FPT$WRITE+5,,AUTO

     1793    16006    4           CALL WRITE_STAR(DO_TOT_LEN,JL_DOLSTTYPE,I) WHENALTRETURN DO;

  16006  3 006076   200012 633500                    EPPR3   I,,AUTO
         3 006077   200113 453500                    STP3    @KEYTYPE+1,,AUTO
         3 006100   000113 236000 4                  LDQ     75
         3 006101   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 006102   200104 634500                    EPPR4   DO_TOT_LEN,,AUTO
         3 006103   200111 454500                    STP4    TMP+3,,AUTO
         3 006104   006344 701000 3                  TSX1    WRITE_STAR
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:257  
         3 006105   006107 702000 3                  TSX2    s:16007
         3 006106   006111 710000 3                  TRA     s:16009

     1794    16007    4                ALTRETURN;

  16007  3 006107   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006110   000000 702211                    TSX2  ! 0,X1

     1795    16008    4                END;
     1796    16009    3           I = I + 1;

  16009  3 006111   200012 054100                    AOS     I,,AUTO

     1797    16010    3   END_DO_WHILE:
     1798    16011    3           NEXT_DO$ = NEXT_DO$->B$DO.LNK$;

  16011  3 006112   200106 470500       END_DO_WHILE LDP0    NEXT_DO$,,AUTO
         3 006113   000000 236100                    LDQ     0,,PR0
         3 006114   200106 756100                    STQ     NEXT_DO$,,AUTO

     1799    16012    3           END;

  16012  3 006115   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 006116   006015 601000 3                  TNZ     s:15985

     1800    16013    2      J_FPT_PFIL.V.DCB# = %M$STAR#;

  16013  3 006117   000001 220003                    LDX0    1,DU
         3 006120   000002 740000 xsym               STX0    J_FPT_PFIL+2

     1801    16014    3      CALL M$MPFIL(J_FPT_PFIL) WHENALTRETURN DO;

  16014  3 006121   000066 630400 4                  EPPR0   54
         3 006122   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 006123   000000 701000 xent               TSX1    M$MPFIL
         3 006124   006126 702000 3                  TSX2    s:16015
         3 006125   006130 710000 3                  TRA     s:16017
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:258  

     1802    16015    3           ALTRETURN;

  16015  3 006126   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006127   000000 702211                    TSX2  ! 0,X1

     1803    16016    3           END;
     1804    16017    2      FPT$PREC = FPT_PREC;

  16017  3 006130   000100 100400                    MLR     fill='000'O
         3 006131   000014 000050 1                  ADSC9   FPT_PREC                 cn=0,n=40
         3 006132   200052 000050                    ADSC9   FPT$PREC,,AUTO           cn=0,n=40

     1805    16018    2      FPT$PREC.V_ = VECTOR(FPT$PREC.V);

  16018  3 006133   000006 235000 4                  LDA     6
         3 006134   200114 452500                    STP2    @ARS+1,,AUTO
         3 006135   200114 236100                    LDQ     @ARS+1,,AUTO
         3 006136   000060 036003                    ADLQ    48,DU
         3 006137   200052 757100                    STAQ    FPT$PREC,,AUTO

     1806    16019    2      FPT$PREC.KEY_ = VECTOR(KEY);

  16019  3 006140   000007 235000 4                  LDA     7
         3 006141   200114 452500                    STP2    @ARS+1,,AUTO
         3 006142   200114 236100                    LDQ     @ARS+1,,AUTO
         3 006143   000026 036003                    ADLQ    22,DU
         3 006144   200054 757100                    STAQ    FPT$PREC+2,,AUTO

     1807    16020    2      FPT$PREC.V.DCB# = %M$STAR#;

  16020  3 006145   000001 220003                    LDX0    1,DU
         3 006146   200060 740100                    STX0    FPT$PREC+6,,AUTO

     1808    16021    2      FPT$PREC.V.N# = -RECCNT;

  16021  3 006147   200025 335100                    LCA     RECCNT,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:259  
         3 006150   200061 755100                    STA     FPT$PREC+7,,AUTO

     1809    16022    3      CALL M$MPRECORD(FPT$PREC) WHENALTRETURN DO;

  16022  3 006151   200052 630500                    EPPR0   FPT$PREC,,AUTO
         3 006152   200114 450500                    STP0    @ARS+1,,AUTO
         3 006153   200114 630500                    EPPR0   @ARS+1,,AUTO
         3 006154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 006155   000000 701000 xent               TSX1    M$MPRECORD
         3 006156   006160 702000 3                  TSX2    s:16023
         3 006157   006162 710000 3                  TRA     s:16025

     1810    16023    3           ALTRETURN;

  16023  3 006160   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006161   000000 702211                    TSX2  ! 0,X1

     1811    16024    3           END;
     1812    16025    3      IF KEY.TYPE ~= JL_HEADTYPE THEN DO;

  16025  3 006162   200027 236100                    LDQ     KEY+1,,AUTO
         3 006163   777000 316003                    CANQ    -512,DU
         3 006164   006171 600000 3                  TZE     s:16029

     1813    16026    3           CALL SC_BADNF;

  16026  3 006165   000000 713400 xsym               CLIMB   SC_BADNF
         3 006166   000000 600000 xsid               climb   nvectors=         0

     1814    16027    3           ALTRETURN;

  16027  3 006167   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006170   000000 702211                    TSX2  ! 0,X1

     1815    16028    3           END;
     1816    16029    2      FPT$READ = FPT_READ;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:260  
  16029  3 006171   000100 100400                    MLR     fill='000'O
         3 006172   000026 000070 1                  ADSC9   FPT_READ                 cn=0,n=56
         3 006173   200064 000070                    ADSC9   FPT$READ,,AUTO           cn=0,n=56

     1817    16030    2      FPT$READ.V_ = VECTOR(FPT$READ.V);

  16030  3 006174   000067 235000 4                  LDA     55
         3 006175   200114 452500                    STP2    @ARS+1,,AUTO
         3 006176   200114 236100                    LDQ     @ARS+1,,AUTO
         3 006177   000074 036003                    ADLQ    60,DU
         3 006200   200064 757100                    STAQ    FPT$READ,,AUTO

     1818    16031    2      FPT$READ.KEY_ = VECTOR(KEY);

  16031  3 006201   000007 235000 4                  LDA     7
         3 006202   200114 452500                    STP2    @ARS+1,,AUTO
         3 006203   200114 236100                    LDQ     @ARS+1,,AUTO
         3 006204   000026 036003                    ADLQ    22,DU
         3 006205   200066 757100                    STAQ    FPT$READ+2,,AUTO

     1819    16032    2      FPT$READ.V.DCB# = %M$STAR#;

  16032  3 006206   000001 220003                    LDX0    1,DU
         3 006207   200074 740100                    STX0    FPT$READ+8,,AUTO

     1820    16033    2      FPT$READ.BUF_.BUF$ = B$SBUF1$;

  16033  3 006210   000000 236000 xsym               LDQ     B$SBUF1$
         3 006211   200071 756100                    STQ     FPT$READ+5,,AUTO

     1821    16034    3      CALL READ_STAR(JL_HEADSIZE,JL_HEADTYPE,N) WHENALTRETURN DO;

  16034  3 006212   200014 630500                    EPPR0   N,,AUTO
         3 006213   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 006214   000002 236000 4                  LDQ     2
         3 006215   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 006216   000011 236000 4                  LDQ     9
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:261  
         3 006217   200111 756100                    STQ     TMP+3,,AUTO
         3 006220   006407 701000 3                  TSX1    READ_STAR
         3 006221   006223 702000 3                  TSX2    s:16035
         3 006222   006225 710000 3                  TRA     s:16037

     1822    16035    3           ALTRETURN;

  16035  3 006223   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006224   000000 702211                    TSX2  ! 0,X1

     1823    16036    3           END;
     1824    16037    2      JL$HEAD.DOLST_RECS = I;

  16037  3 006225   000000 470400 xsym               LDP0    B$SBUF1$
         3 006226   200012 236100                    LDQ     I,,AUTO
         3 006227   000010 552104                    STBQ    8,'04'O,PR0

     1825    16038    2      FPT$WRITE.BUF_.BUF$ = B$SBUF1$;

  16038  3 006230   000000 236000 xsym               LDQ     B$SBUF1$
         3 006231   200043 756100                    STQ     FPT$WRITE+5,,AUTO

     1826    16039    2      FPT$WRITE.V.NEWKEY# = '0'B;

  16039  3 006232   000102 236000 4                  LDQ     66
         3 006233   200046 356100                    ANSQ    FPT$WRITE+8,,AUTO

     1827    16040    3      CALL WRITE_STAR(JL_HEADSIZE,JL_HEADTYPE,0) WHENALTRETURN DO;

  16040  3 006234   000002 237000 4                  LDAQ    2
         3 006235   200112 757100                    STAQ    @BUFSIZE+1,,AUTO
         3 006236   000011 236000 4                  LDQ     9
         3 006237   200111 756100                    STQ     TMP+3,,AUTO
         3 006240   006344 701000 3                  TSX1    WRITE_STAR
         3 006241   006243 702000 3                  TSX2    s:16041
         3 006242   006247 710000 3                  TRA     s:16044

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:262  
     1828    16041    3           FPT$WRITE.V.NEWKEY# = '1'B;

  16041  3 006243   000200 236007                    LDQ     128,DL
         3 006244   200046 256100                    ORSQ    FPT$WRITE+8,,AUTO

     1829    16042    3           ALTRETURN;

  16042  3 006245   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006246   000000 702211                    TSX2  ! 0,X1

     1830    16043    3           END;
     1831    16044    2      FPT$WRITE.V.NEWKEY# = '1'B;

  16044  3 006247   000200 236007                    LDQ     128,DL
         3 006250   200046 256100                    ORSQ    FPT$WRITE+8,,AUTO

     1832    16045    2      RECCNT = RECCNT -1 ;  /* DECREMENT BY ONE BECAUSE HEADER IS WRITTEN TWICE  */

  16045  3 006251   000001 336007                    LCQ     1,DL
         3 006252   200025 056100                    ASQ     RECCNT,,AUTO

     1833    16046    2   END WRITE_DOLIST;

  16046  3 006253   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006254   000001 702211                    TSX2  ! 1,X1

     1834    16047        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:263  
     1835    16048        /*************************************************************
     1836    16049         *                                                           *
     1837    16050         *                      READ_DOLIST                         *
     1838    16051         *                                                           *
     1839    16052         *************************************************************/
     1840    16053    1   READ_DOLIST:PROC ALTRET;

  16053  3 006255   200102 741300       READ_DOLIST  STX1  ! FPT$READ+14,,AUTO

     1841    16054
     1842    16055    2   DCL SSV$EVENT ENTRY(7);
     1843    16056    2   DCL DO_TOT_LEN UBIN WORD;
     1844    16057    2   DCL DOLST# UBIN WORD;
     1845    16058    2      DOLST# = JL$HEAD.DOLST_RECS;

  16058  3 006256   000000 470400 xsym               LDP0    B$SBUF1$
         3 006257   000010 236100                    LDQ     8,,PR0
         3 006260   000777 376007                    ANQ     511,DL
         3 006261   200104 756100                    STQ     DOLST#,,AUTO

     1846    16059    3      DO WHILE (DOLST# >0);

  16059  3 006262   006342 600000 3                  TZE     s:16070

     1847    16060    3           FPT$READ.BUF_.BUF$ = B$SBUF2$;

  16060  3 006263   000000 236000 xsym               LDQ     B$SBUF2$
         3 006264   200071 756100                    STQ     FPT$READ+5,,AUTO

     1848    16061    4           CALL READ_STAR(1024,JL_DOLSTTYPE,DO_TOT_LEN) WHENALTRETURN DO;

  16061  3 006265   200103 630500                    EPPR0   DO_TOT_LEN,,AUTO
         3 006266   200113 450500                    STP0    @KEYTYPE+1,,AUTO
         3 006267   000113 236000 4                  LDQ     75
         3 006270   200112 756100                    STQ     @BUFSIZE+1,,AUTO
         3 006271   000011 236000 4                  LDQ     9
         3 006272   200111 756100                    STQ     TMP+3,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:264  
         3 006273   006407 701000 3                  TSX1    READ_STAR
         3 006274   006276 702000 3                  TSX2    s:16062
         3 006275   006300 710000 3                  TRA     s:16064

     1849    16062    4                ALTRETURN;

  16062  3 006276   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006277   000000 702211                    TSX2  ! 0,X1

     1850    16063    4                END;
     1851    16064    3           TEMP1 = B$SBUF2$->B$DO.WSR;

  16064  3 006300   000000 470400 xsym               LDP0    B$SBUF2$
         3 006301   000002 236100                    LDQ     2,,PR0
         3 006302   000022 772000                    QRL     18
         3 006303   000777 376007                    ANQ     511,DL
         3 006304   200022 756100                    STQ     TEMP1,,AUTO

     1852    16065    3           CALL SSV$EVENT(B$JIT.USER,TEMP1,B$SBUF2$->B$DO.ECCSC,

  16065  3 006305   000000 236000 xsym               LDQ     B$SBUF2$
         3 006306   000005 036003                    ADLQ    5,DU
         3 006307   200114 756100                    STQ     @ARS+1,,AUTO
         3 006310   000002 236000 4                  LDQ     2
         3 006311   200123 756100                    STQ     @ARS+8,,AUTO
         3 006312   200114 631500                    EPPR1   @ARS+1,,AUTO
         3 006313   200122 451500                    STP1    @ARS+7,,AUTO
         3 006314   000000 236000 xsym               LDQ     B$SBUF2$
         3 006315   000004 036003                    ADLQ    4,DU
         3 006316   200121 756100                    STQ     @ARS+6,,AUTO
         3 006317   000000 236000 xsym               LDQ     B$SBUF2$
         3 006320   000003 036003                    ADLQ    3,DU
         3 006321   200120 756100                    STQ     @ARS+5,,AUTO
         3 006322   000000 236000 xsym               LDQ     B$SBUF2$
         3 006323   000114 036000 4                  ADLQ    76
         3 006324   200117 756100                    STQ     @ARS+4,,AUTO
         3 006325   200022 633500                    EPPR3   TEMP1,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:265  
         3 006326   200116 453500                    STP3    @ARS+3,,AUTO
         3 006327   000000 236000 xsym               LDQ     B$JIT$
         3 006330   200000 036007                    ADLQ    65536,DL
         3 006331   200115 756100                    STQ     @ARS+2,,AUTO
         3 006332   200115 630500                    EPPR0   @ARS+2,,AUTO
         3 006333   000025 631400 xsym               EPPR1   B_VECTNIL+21
         3 006334   000000 701000 xent               TSX1    SSV$EVENT
         3 006335   000000 011000                    NOP     0

     1853    16066    3             B$SBUF2$->B$DO.EVID,B$SBUF2$->B$DO.ERRC,ADDR(B$SBUF2$->B$DO.ECCSZ),
     1854    16067    3             ENTADDR(NIL));
     1855    16068    3           DOLST# = DOLST# - 1;

  16068  3 006336   200104 235100                    LDA     DOLST#,,AUTO
         3 006337   000001 135007                    SBLA    1,DL
         3 006340   200104 755100                    STA     DOLST#,,AUTO

     1856    16069    3           END;

  16069  3 006341   006263 601000 3                  TNZ     s:16060

     1857    16070    2   END READ_DOLIST;

  16070  3 006342   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006343   000001 702211                    TSX2  ! 1,X1

     1858    16071        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:266  
     1859    16072        /*************************************************************
     1860    16073         *                                                           *
     1861    16074         *                       WRITE_STAR                          *
     1862    16075         *                                                           *
     1863    16076         *************************************************************/
     1864    16077
     1865    16078        /* The following procedure writes a record of a given size and key
     1866    16079           to the image file. It altreturns if an error occurrs on the write.
     1867    16080
     1868    16081            The count of the number of records is incremented if the record is
     1869    16082            successfully written.
     1870    16083
     1871    16084            Before calling this routine FPT$WRITE.BUF_.BUF$ must be set
     1872    16085            to the address of the buffer to be written.  This pointer will be
     1873    16086            bumped by 1024 by the WRITE_STAR routine.
     1874    16087        */
     1875    16088
     1876    16089    1   WRITE_STAR: PROC(BUFSIZE,KEYTYPE,PGNO) ALTRET;

  16089  3 006344   200110 741300       WRITE_STAR   STX1  ! TMP+2,,AUTO

     1877    16090    2   DCL BUFSIZE SBIN;                       /* # of bytes to write                */
     1878    16091    2   DCL KEYTYPE SBIN;             /* The type field of the key for this record    */
     1879    16092    2   DCL PGNO SBIN;                /* The wsq page # which this record represents  */
     1880    16093
     1881    16094    3      DO INHIBIT;

     1882    16095    3           IF BUFSIZE = 0

  16095  3 006345   200111 470700                    LDP0  ! @BUFSIZE,,AUTO
         3 006346   000000 235300                    LDA   ! 0,,PR0
         3 006347   006353 601200 3                  TNZ   ! s:16097

     1883    16096    3           THEN FPT$WRITE.BUF_ = VECTOR (NIL);

  16096  3 006350   000116 237200 4                  LDAQ  ! 78
         3 006351   200042 757300                    STAQ  ! FPT$WRITE+4,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:267  
         3 006352   006361 710200 3                  TRA   ! s:16098

     1884    16097    3           ELSE FPT$WRITE.BUF_.BOUND = BUFSIZE - 1;

  16097  3 006353   000000 236300                    LDQ   ! 0,,PR0
         3 006354   000001 136207                    SBLQ  ! 1,DL
         3 006355   000020 736200                    QLS   ! 16
         3 006356   200042 676300                    ERQ   ! FPT$WRITE+4,,AUTO
         3 006357   000034 376200 xsym               ANQ   ! B_VECTNIL+28
         3 006360   200042 656300                    ERSQ  ! FPT$WRITE+4,,AUTO

     1885    16098    3           KEY.TYPE = KEYTYPE;

  16098  3 006361   200112 471700                    LDP1  ! @KEYTYPE,,AUTO
         3 006362   100000 236300                    LDQ   ! 0,,PR1
         3 006363   000033 736200                    QLS   ! 27
         3 006364   200027 552340                    STBQ  ! KEY+1,'40'O,AUTO

     1886    16099    3           KEY.PGNO = PGNO;

  16099  3 006365   200113 473700                    LDP3  ! @PGNO,,AUTO
         3 006366   300000 236300                    LDQ   ! 0,,PR3
         3 006367   000011 736200                    QLS   ! 9
         3 006370   200027 552330                    STBQ  ! KEY+1,'30'O,AUTO

     1887    16100    3           CALL M$MWRITE(FPT$WRITE) ALTRET(BAD_WRITE);

  16100  3 006371   200036 634700                    EPPR4 ! FPT$WRITE,,AUTO
         3 006372   200114 454700                    STP4  ! @ARS+1,,AUTO
         3 006373   200114 630700                    EPPR0 ! @ARS+1,,AUTO
         3 006374   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         3 006375   000000 701200 xent               TSX1  ! M$MWRITE
         3 006376   006405 702200 3                  TSX2  ! BAD_WRITE

     1888    16101    3           RECCNT = RECCNT + 1;

  16101  3 006377   200025 054300                    AOS   ! RECCNT,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:268  

     1889    16102    3           FPT$WRITE.BUF_.BUF$ = PINCRW(FPT$WRITE.BUF_.BUF$,1024);

  16102  3 006400   200043 236300                    LDQ   ! FPT$WRITE+5,,AUTO
         3 006401   002000 036203                    ADLQ  ! 1024,DU
         3 006402   200043 756300                    STQ   ! FPT$WRITE+5,,AUTO

     1890    16103    3           RETURN;

  16103  3 006403   200110 221300                    LDX1  ! TMP+2,,AUTO
         3 006404   000001 702211                    TSX2  ! 1,X1

     1891    16104    3           END;                            /* Inhibit                            */

  16103  3 006405                       BAD_WRITE    null
     1892    16105    2   BAD_WRITE:;
     1893    16106    2      ALTRETURN;

  16106  3 006405   200110 221300                    LDX1  ! TMP+2,,AUTO
         3 006406   000000 702211                    TSX2  ! 0,X1

     1894    16107    2   END WRITE_STAR;
     1895    16108        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:269  
     1896    16109        /*************************************************************
     1897    16110         *                                                           *
     1898    16111         *                        READ_STAR                          *
     1899    16112         *                                                           *
     1900    16113         *************************************************************/
     1901    16114
     1902    16115        /* The following procedure reads the next record from M$*,
     1903    16116           verifies that the key type was the one expected, and returns
     1904    16117           the actual record size read.
     1905    16118        */
     1906    16119    1   READ_STAR: PROC(BUFSIZE,KEYTYPE,ARS) ALTRET;

  16119  3 006407   200110 741300       READ_STAR    STX1  ! TMP+2,,AUTO

     1907    16120    2   DCL BUFSIZE SBIN;                  /* Size in bytes of buffer to read into    */
     1908    16121    2   DCL KEYTYPE SBIN;                       /* Type of key expected to be read    */
     1909    16122    2   DCL ARS SBIN;                 /* Actual record size returned from M$WRITE     */
     1910    16123
     1911    16124    3      DO INHIBIT;

     1912    16125    3           FPT$READ.BUF_.BOUND = BUFSIZE - 1;

  16125  3 006410   200111 470700                    LDP0  ! @BUFSIZE,,AUTO
         3 006411   000000 236300                    LDQ   ! 0,,PR0
         3 006412   000001 136207                    SBLQ  ! 1,DL
         3 006413   000020 736200                    QLS   ! 16
         3 006414   200070 676300                    ERQ   ! FPT$READ+4,,AUTO
         3 006415   000034 376200 xsym               ANQ   ! B_VECTNIL+28
         3 006416   200070 656300                    ERSQ  ! FPT$READ+4,,AUTO

     1913    16126    3           CALL M$MREAD(FPT$READ) ALTRET(BAD_READ);

  16126  3 006417   200064 631700                    EPPR1 ! FPT$READ,,AUTO
         3 006420   200114 451700                    STP1  ! @ARS+1,,AUTO
         3 006421   200114 630700                    EPPR0 ! @ARS+1,,AUTO
         3 006422   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         3 006423   000000 701200 xent               TSX1  ! M$MREAD
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:270  
         3 006424   006447 702200 3                  TSX2  ! BAD_READ

     1914    16127
     1915    16128    3           IF KEY.TYPE ~= KEYTYPE

  16128  3 006425   200112 470700                    LDP0  ! @KEYTYPE,,AUTO
         3 006426   200027 236300                    LDQ   ! KEY+1,,AUTO
         3 006427   000033 772200                    QRL   ! 27
         3 006430   000000 116300                    CMPQ  ! 0,,PR0
         3 006431   006436 600200 3                  TZE   ! s:16138

     1916    16129    4           THEN DO;

     1917    16130    4                CALL SC_BADNF;

  16130  3 006432   000000 713600 xsym               CLIMB ! SC_BADNF
         3 006433   000000 600000 xsid               climb   nvectors=         0

     1918    16131    4                ALTRETURN;

  16131  3 006434   200110 221300                    LDX1  ! TMP+2,,AUTO
         3 006435   000000 702211                    TSX2  ! 0,X1

     1919    16132    4                END;
     1920    16133
     1921    16134        /*S*    SCREECH_CODE: JLS-S$BADNF                                  */
     1922    16135        /*S*   TYPE: SNAP                                                   */
     1923    16136        /*S*   MESSAGE: Unexpected record type encountered in image  file. */
     1924    16137
     1925    16138    3           ARS = B$M$STAR$->F$DCB.ARS;

  16138  3 006436   000000 471600 xsym               LDP1  ! B$M$STAR$
         3 006437   200113 473700                    LDP3  ! @ARS,,AUTO
         3 006440   100000 235300                    LDA   ! 0,,PR1
         3 006441   300000 755300                    STA   ! 0,,PR3

     1926    16139    3           FPT$READ.BUF_.BUF$ = PINCRW(FPT$READ.BUF_.BUF$,1024);
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:271  

  16139  3 006442   200071 236300                    LDQ   ! FPT$READ+5,,AUTO
         3 006443   002000 036203                    ADLQ  ! 1024,DU
         3 006444   200071 756300                    STQ   ! FPT$READ+5,,AUTO

     1927    16140    3           RETURN;

  16140  3 006445   200110 221300                    LDX1  ! TMP+2,,AUTO
         3 006446   000001 702211                    TSX2  ! 1,X1

     1928    16141    3           END;                            /* Inhibit                            */

  16140  3 006447                       BAD_READ     null
     1929    16142    2   BAD_READ:;
     1930    16143    2      ALTRETURN;

  16143  3 006447   200110 221300                    LDX1  ! TMP+2,,AUTO
         3 006450   000000 702211                    TSX2  ! 0,X1

     1931    16144    2   END READ_STAR;
     1932    16145        %EJECT;
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:272  
     1933    16146        /*************************************************************
     1934    16147         *                                                           *
     1935    16148         *                        BRING_IN                           *
     1936    16149         *                                                           *
     1937    16150         *************************************************************/
     1938    16151
     1939    16152        /* This routine simply continues to read some type of saved program
     1940    16153           information into the instruction segment, getting pages as nec-
     1941    16154           essary.
     1942    16155        */
     1943    16156
     1944    16157    1   BRING_IN: PROC(PGS,STARTPG,DATATYPE) ALTRET;

  16157  3 006451   200102 741300       BRING_IN     STX1  ! FPT$READ+14,,AUTO

     1945    16158    2   DCL PGS SBIN;
     1946    16159    2   DCL STARTPG SBIN;
     1947    16160    2   DCL DATATYPE SBIN;
     1948    16161
     1949    16162    2   DCL TMP SBIN;
     1950    16163
     1951    16164    2      TMP = STARTPG-%ISEGLO;

  16164  3 006452   200104 470500                    LDP0    @STARTPG,,AUTO
         3 006453   000000 235100                    LDA     0,,PR0
         3 006454   000100 135007                    SBLA    64,DL
         3 006455   200106 755100                    STA     TMP,,AUTO

     1952    16165    2      FPT$READ.BUF_.BUF$ = PINCRW(B$USERIS$,TMP*1024);

  16165  3 006456   200106 236100                    LDQ     TMP,,AUTO
         3 006457   000034 736000                    QLS     28
         3 006460   000000 036000 xsym               ADLQ    B$USERIS$
         3 006461   200071 756100                    STQ     FPT$READ+5,,AUTO

     1953    16166    3      DO I = 0 TO PGS-1;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:273  
  16166  3 006462   200012 450100                    STZ     I,,AUTO
         3 006463   006514 710000 3                  TRA     s:16170+1

     1954    16167    3           CALL MME$WGVP(%USERWSQ,STARTPG+I,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),

  16167  3 006464   200104 470500                    LDP0    @STARTPG,,AUTO
         3 006465   000000 236100                    LDQ     0,,PR0
         3 006466   200012 036100                    ADLQ    I,,AUTO
         3 006467   200114 756100                    STQ     @ARS+1,,AUTO
         3 006470   200004 236100                    LDQ     @ERR,,AUTO
         3 006471   000101 235000 4                  LDA     65
         3 006472   200120 757100                    STAQ    @ARS+5,,AUTO
         3 006473   200114 631500                    EPPR1   @ARS+1,,AUTO
         3 006474   200117 451500                    STP1    @ARS+4,,AUTO
         3 006475   000026 236000 4                  LDQ     22
         3 006476   200116 756100                    STQ     @ARS+3,,AUTO
         3 006477   200116 630500                    EPPR0   @ARS+3,,AUTO
         3 006500   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 006501   000000 701000 xent               TSX1    MME$WGVP
         3 006502   006522 702000 3                  TSX2    YUK

     1955    16168    3             ERR) ALTRET(YUK);
     1956    16169    3           CALL READ_STAR(JL_FULLPAGE,DATATYPE,N) ALTRET(YUK);

  16169  3 006503   200014 630500                    EPPR0   N,,AUTO
         3 006504   200113 450500                    STP0    @ARS,,AUTO
         3 006505   200105 236100                    LDQ     @DATATYPE,,AUTO
         3 006506   200112 756100                    STQ     @KEYTYPE,,AUTO
         3 006507   000013 236000 4                  LDQ     11
         3 006510   200111 756100                    STQ     @BUFSIZE,,AUTO
         3 006511   006407 701000 3                  TSX1    READ_STAR
         3 006512   006522 702000 3                  TSX2    YUK

     1957    16170    3           END;

  16170  3 006513   200012 054100                    AOS     I,,AUTO
         3 006514   200103 470500                    LDP0    @PGS,,AUTO
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:274  
         3 006515   200012 236100                    LDQ     I,,AUTO
         3 006516   000000 116100                    CMPQ    0,,PR0
         3 006517   006464 604000 3                  TMI     s:16167

     1958    16171    2      RETURN;

  16171  3 006520   200102 221300                    LDX1  ! FPT$READ+14,,AUTO
         3 006521   000001 702211                    TSX2  ! 1,X1

     1959    16172    2   YUK: ALTRETURN;

  16172  3 006522   200102 221300       YUK          LDX1  ! FPT$READ+14,,AUTO
         3 006523   000000 702211                    TSX2  ! 0,X1

FPT_WRITE
 Sect OctLoc
   1     000   000003 777640   000010 006000   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     010   000000 400200   000000 000000   000000 000000   000000 000000    ................

FPT_PREC
 Sect OctLoc
   1     014   000003 777640   000022 006000   000000 177640   000000 006014    ................
   1     020   000000 177640   000000 006014   000000 200000   000000 000000    ................
   1     024   000000 000000   0***** ******                                    ........

FPT_READ
 Sect OctLoc
   1     026   000005 777640   000036 006000   000000 177640   000000 006014    ................
   1     032   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     036   000000 500000   000000 000000   000000 000000   000000 000000    ................
   1     042   000000 000000   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   1     044   125103 040040   000000 100000   034340 000000   743400 000000    UC  ..@.........
   1     050   000000 001000   000000 000040   416777 777777   020000 000000    ....... ........
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:275  
   1     054   764000 000000   100000 000000   200000 000000                    ....@.......

(unnamed)
 Sect OctLoc
   4     000   000064 006000   000203 200000   000002 006000   000002 006000    .4..............
   4     004   000013 006000   000002 006000   000003 777640   000001 577640    ................
   4     010   000000 002000   000010 006000   000000 010000   000012 006000    ................
   4     014   000003 006000   000015 006000   000000 000015   000006 006000    ................
   4     020   000005 006000   000016 006000   000000 006003   000007 006000    ................
   4     024   000010 006000   000011 006000   000012 006000   000000 006000    ................
   4     030   000000 000020   000030 006000   000000 000021   000032 006000    ................
   4     034   000000 000022   000034 006000   000000 006000   000000 000032    ................
   4     040   000037 006000   000000 006000   000000 000042   000042 006000    ..........."."..
   4     044   000000 000050   000000 000776   000044 006000   000002 006000    ...(.....$......
   4     050   000045 006000   000002 006000   000000 000014   000000 000777    .%..............
   4     054   000000 001777   000052 006000   000053 006000   000054 006000    .....*...+...,..
   4     060   000000 000500   000000 000501   000012 006000   000060 006000    .............0..
   4     064   000012 006000   000061 006000   000000 006000   000005 777640    .....1..........
   4     070   000000 000000   000000 000000   000011 777640   000007 006000    ................
   4     074   000003 006000   000000 006000   777777 757777   777777 777700    ................
   4     100   000000 000064   000100 006000   777777 777577   000000 006000    ...4.@..........
   4     104   000000 006000   100000 000000   000003 006000   000105 006000    ....@........E..
   4     110   000000 000043   000110 006000   000000 000062   000112 006000    ...#.H.....2.J..
   4     114   000002 400000   000000 000000   000000 177640   000000 006014    ................
     1960    16173    2   END BRING_IN;
     1961    16174
     1962    16175    1   END JLS$SAVE_IMAGE;

PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:276  
--  Include file information  --

   UD_MACRO_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   JL_DATA_M.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_UHJMAC_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JLS$SAVE_IMAGE.
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:277  

 **** Variables and constants ****

  ****  Section 001 RoData JLS$SAVE_IMAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/d STRC(360)   r     1 FPT_PREC                  26-0-0/d STRC(504)   r     1 FPT_READ
     0-0-0/d STRC(432)   r     1 FPT_WRITE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   113-0-0/w PTR         r     1 @ARS                     111-0-0/w PTR         r     1 @BUFSIZE
   111-0-0/w PTR         r     1 @BUFSIZE                   5-0-0/w PTR         r     1 @CLEANUP$
   105-0-0/w PTR         r     1 @DATATYPE                  4-0-0/w PTR         r     1 @ERR
     3-0-0/w PTR         r     1 @IDN                     112-0-0/w PTR         r     1 @KEYTYPE
   112-0-0/w PTR         r     1 @KEYTYPE                 103-0-0/w PTR         r     1 @LS$
   104-0-0/w PTR         r     1 @LS$                     113-0-0/w PTR         r     1 @PGNO
   103-0-0/w PTR         r     1 @PGS                     105-0-0/w PTR         r     1 @RECTYPE
   106-0-0/w PTR         r     1 @RECTYPE                 104-0-0/w PTR         r     1 @SIZES$
   105-0-0/w PTR         r     1 @SIZES$                  104-0-0/w PTR         r     1 @STARTPG
   103-0-0/w PTR         r     1 @TYPE                    103-0-0/w PTR         r     1 @TYPE
   103-0-0/w PTR         r     1 @WSQ                      *0-0-0/w SBIN        r     1 ARS
    *0-0-0/w SBIN        r     1 BUFSIZE                   *0-0-0/w SBIN        r     1 BUFSIZE
    *0-0-0/w EPTR        r     1 CLEANUP$                  31-0-0/b BIT         r     1 CPFLAGS
    *0-0-0/w SBIN        r     1 DATATYPE                  21-0-0/w PTR         r     1 DCB$
   104-0-0/w UBIN        r     1 DOLST#                   105-0-0/w UBIN        r     1 DO_CONT_OFF
   103-0-0/w UBIN        r     1 DO_SUB_LEN               104-0-0/w UBIN        r     1 DO_TOT_LEN
   103-0-0/w UBIN        r     1 DO_TOT_LEN                17-0-0/w UBIN        r     1 DTS
    *0-0-0/w UBIN        r     1 ERR                       20-0-0/w UBIN        r     1 ERR1
    52-0-0/d STRC(360)   r     1 FPT$PREC                  64-0-0/d STRC(504)   r     1 FPT$READ
    36-0-0/d STRC(432)   r     1 FPT$WRITE                 12-0-0/w SBIN        r     1 I
    30-0-0/w STRC        r     1 ID                        *0-0-0/w UBIN        r     1 IDN
    13-0-0/w SBIN        r     1 J                         26-0-0/b STRC(63)    r     1 KEY
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:278  
    *0-0-0/w SBIN        r     1 KEYTYPE                   *0-0-0/w SBIN        r     1 KEYTYPE
    11-0-0/w PTR         r     1 LM$                       30-0-0/w UBIN        r     1 LNKID
     6-0-0/w PTR         r     1 LPTR$                     *0-0-0/w PTR         r     1 LS$
    *0-0-0/w PTR         r     1 LS$                        7-0-0/w PTR         r     1 M$UC$
    14-0-0/w SBIN        r     1 N                        106-0-0/w PTR         r     1 NEXT_DO$
    14-0-0/w STRC        r     1 NN                        32-0-0/w UBIN(18)    r     1 OLD_PCP
    34-0-0/w UBIN(9)     r     1 PCODE                     *0-0-0/w SBIN        r     1 PGNO
    *0-0-0/w SBIN        r     1 PGS                       15-0-0/b BIT (18)    r     1 PTYPE
    25-0-0/w SBIN        r     1 RECCNT                    *0-0-0/w SBIN        r     1 RECTYPE
    *0-0-0/w SBIN        r     1 RECTYPE                   33-0-0/b BIT (18)    r     1 SAVEJUNK
    16-0-0/w SBIN        r     1 SID                       *0-0-0/w PTR         r     1 SIZES$
    *0-0-0/w PTR         r     1 SIZES$                    *0-0-0/w SBIN        r     1 STARTPG
   105-0-0/w PTR         r     1 TCB$                     105-0-0/w PTR         r     1 TCB$
   104-0-0/w UBIN        r     1 TCBSIZE                  104-0-0/w UBIN        r     1 TCBSIZE
    22-0-0/w SBIN        r     1 TEMP1                     23-0-0/w SBIN        r     1 TEMP2
    24-0-0/w SBIN        r     1 TEMP3                    106-0-0/w SBIN        r     1 TMP
    10-0-0/w PTR         r     1 TPTR$                     *0-0-0/w UBIN        r     1 TYPE
    *0-0-0/w UBIN        r     1 TYPE                      35-0-0/w STRC        r     1 VIRTUAL
    *0-0-0/w SBIN        r     1 WSQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$ASLLS$                   0-0-0/w PTR         r     1 B$DBLS$
     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$JITPG$
     0-0-0/w PTR         r     1 B$LS$                      0-0-0/w PTR         r     1 B$M$LM$
     0-0-0/w PTR         r     1 B$M$STAR$                  0-0-0/w PTR         r     1 B$M$UC$
     0-0-0/w PTR         r     1 B$MISC2$                   0-0-0/w PTR         r     1 B$P$
     0-0-0/w PTR         r     1 B$PS1$                     0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w PTR         r     1 B$SBUF1$                   0-0-0/w PTR         r     1 B$SBUF2$
     0-0-0/w PTR         r     1 B$UPT$                     0-0-0/w PTR         r     1 B$USERHJIT$
     0-0-0/w PTR         r     1 B$USERIS$                  0-0-0/w PTR         r     1 B$USERLS$
     0-0-0/d STRC(2232)  r     1 B_SITEINFO
     0-0-0/c CHAR(8)     r     1 FR_SUNM(0:0)
     0-0-0/d STRC(1080)  r     1 J_FPT_CL_REL               0-0-0/d STRC(1080)  r     1 J_FPT_CL_SAVE
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:279  
     0-0-0/d STRC(144)   r     1 J_FPT_PFIL                 0-0-0/d STRC(648)   r     1 J_FPT_RESCTL
     0-0-0/w PTR         r     1 J_SYS$                     0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)     r     1 B$CHAR3                    0-0-0/w STRC(72)    r     1 B$DESCR
     0-0-0/d STRC(396)   r     1 B$DO                       0-0-0/d STRC(432)   r     1 B$DOCONT
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(10368) r     1 B$MLS                      0-0-0/d STRC(1224)  r     1 B$P(0:0)
     0-0-0/w STRC(36864) r     1 B$PAGE
     0-0-0/w PTR         r     1 B$RODCB$(0:0)
     0-0-0/d STRC(3024)  r     1 B$ROSEG                    0-0-0/w UBIN        r     1 B$SIZE(0:7)
     0-0-0/w UBIN        r     1 B$SIZE(0:7)                0-0-0/d STRC(576)   r     1 B$U
     0-0-0/d STRC(36864) r     1 B$UHJIT                    0-0-0/c ACHR        r     1 DO_ENTRY
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/d STRC(648)   r     1 FPT$RESCTL
     0-0-0/d STRC(324)   r     1 JL$AMR_BUF                 0-0-0/d STRC(9189)  r     1 JL$HEAD
     0-0-0/w STRC(90)    r     1 JL$TRAILER
     0-0-0/d STRC(72)    r     1 MM$DESC(0:0)
     0-0-0/c ASTR(9)     r     1 TEXTC                      0-0-0/c ASTR(9)     r     1 TXTC
     0-0-0/d STRC(360)   r     1 VLP$PS


   Procedure JLS$SAVE_IMAGE requires 3412 words for executable code.
   Procedure JLS$SAVE_IMAGE requires 98 words of local(AUTO) storage.

    No errors detected in file JLS$IMAGES.:E05TSI    .
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:280  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:281  
          MINI XREF LISTING

ARS IN PROCEDURE READ_STAR
     16122**DCL     16119--PROC    16138<<ASSIGN
B$ASLLS$
     14003**DCL     14513>>IF      14515>>ASSIGN  14524>>ASSIGN  14675<>CALL    15263<>CALL    15913>>ASSIGN
     15948>>ASSIGN
B$CHAR3
     11955**DCL     14495>>ASSIGN  14855>>IF      15575>>IF
B$DBLS$
     14004**DCL     14516>>IF      14518>>ASSIGN  14525>>ASSIGN  14677<>CALL    15265<>CALL    15917>>ASSIGN
     15952>>ASSIGN
B$DESCR
     14209**DCL     15799>>ASSIGN  15812>>ASSIGN  15861>>ASSIGN  15868>>ASSIGN  15920>>ASSIGN  15955>>ASSIGN
B$DESCR.BASE
     14214**DCL     15794>>ASSIGN
B$DESCR.FLGS
     14211**DCL     15789>>IF      15956<<ASSIGN  15956>>ASSIGN
B$DO
       999**DCL     15993--ASSIGN  16004--ASSIGN
B$DO.CONT
      1003**DCL     15987>>IF      15997>>IF
B$DO.ECCINFO
      1015**DCL      1016--REDEF   16004--ASSIGN
B$DO.ECCSC
      1008**DCL     16065<>CALL
B$DO.ECCSZ
      1014**DCL     16004>>ASSIGN  16065--CALL
B$DO.ENTER
      1001**DCL     15985>>IF
B$DO.ERRC
      1010**DCL     16065<>CALL
B$DO.EVID
      1009**DCL     16065<>CALL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:282  
B$DO.LNK$
      1000**DCL     15988>>ASSIGN  15998>>ASSIGN  16011>>ASSIGN
B$DO.WSR
      1007**DCL     16064>>ASSIGN
B$DOCONT
      1028**DCL     15982--ASSIGN  15999--ASSIGN
B$DOCONT.ECCINFO
      1032**DCL     15982--ASSIGN
B$JIT
       337**DCL     14896--ASSIGN
B$JIT.CCARS
       430**DCL     14932<<ASSIGN  14932>>ASSIGN
B$JIT.CCBUF
       430**DCL     14933<<ASSIGN  14933>>ASSIGN
B$JIT.CCDISP
       430**DCL     14934<<ASSIGN  14934>>ASSIGN
B$JIT.CPFLAGS1
       431**DCL     14562>>ASSIGN  14563>>IF      14565<<ASSIGN  14565>>ASSIGN  14573<<ASSIGN  14955<<ASSIGN
     14955>>ASSIGN  14955>>ASSIGN  14958<<ASSIGN  14958>>ASSIGN  14958>>ASSIGN  14960<<ASSIGN  14960>>ASSIGN
     14960>>ASSIGN  15388>>ASSIGN  15389<<ASSIGN  15389>>ASSIGN  15391<<ASSIGN  15393>>IF
B$JIT.CPFLAGS1.SLEAZE
       436**DCL       436--REDEF
B$JIT.CURPNUM
       596**DCL     14975<<ASSIGN  14975>>ASSIGN
B$JIT.CURSUDO
       611**DCL     14894>>IF      14904>>IF      14904>>IF      14907>>ASSIGN  14907>>ASSIGN
B$JIT.DCB$
       510**DCL     14560<<ASSIGN  14613<<ASSIGN  15290<<ASSIGN  15385<<ASSIGN  15625<<ASSIGN
B$JIT.DCBNO
       423**DCL     14615<<ASSIGN
B$JIT.DDLL
       500**DCL     14643>>ASSIGN  14644>>DOINDEX 14650>>IF      14968<<ASSIGN  14968>>ASSIGN  15217>>ASSIGN
     15220>>ASSIGN
B$JIT.DDUL
       500**DCL     14969<<ASSIGN  14969>>ASSIGN
B$JIT.DLL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:283  
       500**DCL     14623>>ASSIGN  14624>>DOINDEX 14966<<ASSIGN  14966>>ASSIGN  15195>>ASSIGN
B$JIT.DUL
       500**DCL     14967<<ASSIGN  14967>>ASSIGN
B$JIT.ERR
       342**DCL     15477<<ASSIGN
B$JIT.ERR.CODE
       343**DCL     14740>>IF      14740>>ASSIGN  14914>>ASSIGN  15424>>IF      15425>>ASSIGN  15430>>IF
     15430>>ASSIGN  15465>>IF      15485>>IF      15534>>IF
B$JIT.ERR.MID
       343**DCL       343--REDEF
B$JIT.EUP
       502**DCL     14453>>DOINDEX 14651>>DOINDEX 14971<<ASSIGN  14971>>ASSIGN  15305>>DOINDEX
B$JIT.FRS
       538**DCL     15378>>IF
B$JIT.JRESPEAK
       504**DCL       505--REDEF
B$JIT.JUNK
       542**DCL     14529>>IF      14538>>IF      14608>>IF      14702>>IF      14856>>IF      14878>>IF
     14946>>IF      14957>>IF      14983<<ASSIGN  14983>>ASSIGN  14984<<ASSIGN  14984>>ASSIGN  14984>>ASSIGN
     14993>>IF      15012>>ASSIGN  15013<<ASSIGN  15013>>ASSIGN  15015<<ASSIGN  15110>>IF      15283>>IF
     15353>>IF      15878>>IF
B$JIT.JUNK2
       596**DCL     14959>>IF      14985<<ASSIGN  14985>>ASSIGN  15884<<ASSIGN  15884>>ASSIGN
B$JIT.LLL
       506**DCL     14682>>ASSIGN  14685>>ASSIGN  14686>>DOINDEX 14972<<ASSIGN  14972>>ASSIGN  15273>>ASSIGN
     15322>>ASSIGN  15323>>DOINDEX
B$JIT.LNKCNT
       542**DCL     15355>>IF      15467>>IF      15471<<ASSIGN  15525>>DOWHILE 15530>>ASSIGN  15536>>IF
     15643<<ASSIGN  15643>>ASSIGN  15680>>ASSIGN
B$JIT.LUL
       506**DCL     14973<<ASSIGN  14973>>ASSIGN
B$JIT.MMFLGS.FREE_PPGS
       503**DCL     14954<<ASSIGN  14954>>ASSIGN
B$JIT.MODE
       337**DCL     14553>>IF      15378>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:284  
       613**DCL       613--REDEF     614--REDEF
B$JIT.PCD
       501**DCL     14499>>ASSIGN  14623>>ASSIGN
B$JIT.PCDD
       502**DCL     14501>>ASSIGN  14641>>IF      14650>>IF
B$JIT.PCL
       506**DCL     14503>>ASSIGN  14682>>ASSIGN  14683>>IF      15320>>IF      15322>>ASSIGN
B$JIT.PCP
       501**DCL     14500>>ASSIGN  14630>>ASSIGN  14962>>ASSIGN  15206<<ASSIGN  15210>>ASSIGN  15314>>ASSIGN
B$JIT.PCROS
       501**DCL     14502>>ASSIGN  14599>>DOINDEX
B$JIT.PLL
       500**DCL     14630>>ASSIGN  14633>>ASSIGN  14634>>DOINDEX 14964<<ASSIGN  14964>>ASSIGN  15203>>ASSIGN
     15210>>ASSIGN  15211>>DOINDEX 15314>>ASSIGN  15315>>DOINDEX
B$JIT.PNR
       517**DCL       517--REDEF
B$JIT.PRFLAGS
       426**DCL     14950<<ASSIGN  14950>>ASSIGN  14950>>ASSIGN
B$JIT.PRIOCORE
       503**DCL     14977<<ASSIGN  14977>>ASSIGN
B$JIT.PRIV.ACTIVE
       343**DCL     14948<<ASSIGN  14948>>ASSIGN
B$JIT.PRIV.AUTH
       383**DCL     14880>>IF      14880>>IF
B$JIT.PRIV.JOB
       386**DCL     14948>>ASSIGN
B$JIT.PRIV.PRC
       390**DCL     14947<<ASSIGN  14947>>ASSIGN
B$JIT.PROG_ENTRY
       492**DCL     14952<<ASSIGN  14952>>ASSIGN
B$JIT.PSEUDO_COUNT
       606**DCL     14610<<ASSIGN  14921<<ASSIGN  14921>>ASSIGN
B$JIT.PSEUDO_TEXT
       606**DCL     14922<<ASSIGN  14922>>ASSIGN
B$JIT.PUL
       500**DCL     14965<<ASSIGN  14965>>ASSIGN
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:285  
B$JIT.RNST
       521**DCL     14553>>IF      15378>>IF
B$JIT.RUNFLAGS
       538**DCL     14951<<ASSIGN  14951>>ASSIGN
B$JIT.SVLDTF
       583**DCL     14976<<ASSIGN  14976>>ASSIGN
B$JIT.SYSID
       342**DCL     15507>>ASSIGN  15681>>ASSIGN
B$JIT.TDP
       502**DCL     14453>>DOINDEX 14644>>DOINDEX 14650>>IF      14651>>DOINDEX 14970<<ASSIGN  14970>>ASSIGN
     15217>>ASSIGN  15305>>DOINDEX
B$JIT.TSLINE
       611**DCL       612--REDEF
B$JIT.USER
       342**DCL     16065<>CALL
B$JIT.UTIMER
       517**DCL     14974<<ASSIGN  14974>>ASSIGN
B$JIT.VIRTUAL
       507**DCL     14963>>ASSIGN  15282<<ASSIGN
B$JIT.XCONF
       563**DCL     14930>>IF
B$JIT$
     13996**DCL       337--IMP-PTR 14453>>DOINDEX 14453>>DOINDEX 14499>>ASSIGN  14500>>ASSIGN  14501>>ASSIGN
     14502>>ASSIGN  14503>>ASSIGN  14529>>IF      14538>>IF      14553>>IF      14553>>IF      14560>>ASSIGN
     14562>>ASSIGN  14563>>IF      14565>>ASSIGN  14565>>ASSIGN  14573>>ASSIGN  14599>>DOINDEX 14608>>IF
     14610>>ASSIGN  14613>>ASSIGN  14615>>ASSIGN  14623>>ASSIGN  14623>>ASSIGN  14624>>DOINDEX 14630>>ASSIGN
     14630>>ASSIGN  14633>>ASSIGN  14634>>DOINDEX 14641>>IF      14643>>ASSIGN  14644>>DOINDEX 14644>>DOINDEX
     14650>>IF      14650>>IF      14650>>IF      14651>>DOINDEX 14651>>DOINDEX 14682>>ASSIGN  14682>>ASSIGN
     14683>>IF      14685>>ASSIGN  14686>>DOINDEX 14702>>IF      14740>>IF      14740>>ASSIGN  14856>>IF
     14878>>IF      14880>>IF      14896>>ASSIGN  14904>>IF      14907>>ASSIGN  14914>>ASSIGN  14921>>ASSIGN
     14922>>ASSIGN  14930>>IF      14932>>ASSIGN  14933>>ASSIGN  14934>>ASSIGN  14946>>IF      14947>>ASSIGN
     14948>>ASSIGN  14948>>ASSIGN  14950>>ASSIGN  14950>>ASSIGN  14951>>ASSIGN  14952>>ASSIGN  14954>>ASSIGN
     14955>>ASSIGN  14955>>ASSIGN  14957>>IF      14958>>ASSIGN  14958>>ASSIGN  14959>>IF      14960>>ASSIGN
     14960>>ASSIGN  14964>>ASSIGN  14965>>ASSIGN  14966>>ASSIGN  14967>>ASSIGN  14968>>ASSIGN  14969>>ASSIGN
     14970>>ASSIGN  14971>>ASSIGN  14972>>ASSIGN  14973>>ASSIGN  14974>>ASSIGN  14975>>ASSIGN  14976>>ASSIGN
     14977>>ASSIGN  14983>>ASSIGN  14983>>ASSIGN  14984>>ASSIGN  14984>>ASSIGN  14985>>ASSIGN  14993>>IF
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:286  
     15012>>ASSIGN  15013>>ASSIGN  15013>>ASSIGN  15015>>ASSIGN  15110>>IF      15195>>ASSIGN  15203>>ASSIGN
     15206>>ASSIGN  15210>>ASSIGN  15210>>ASSIGN  15211>>DOINDEX 15217>>ASSIGN  15217>>ASSIGN  15220>>ASSIGN
     15273>>ASSIGN  15282>>ASSIGN  15283>>IF      15290>>ASSIGN  15305>>DOINDEX 15305>>DOINDEX 15314>>ASSIGN
     15314>>ASSIGN  15315>>DOINDEX 15320>>IF      15322>>ASSIGN  15322>>ASSIGN  15323>>DOINDEX 15353>>IF
     15355>>IF      15378>>IF      15378>>IF      15378>>IF      15385>>ASSIGN  15388>>ASSIGN  15389>>ASSIGN
     15389>>ASSIGN  15391>>ASSIGN  15393>>IF      15424>>IF      15425>>ASSIGN  15430>>IF      15430>>ASSIGN
     15465>>IF      15467>>IF      15471>>ASSIGN  15477>>ASSIGN  15485>>IF      15507>>ASSIGN  15525>>DOWHILE
     15530>>ASSIGN  15534>>IF      15536>>IF      15625>>ASSIGN  15643>>ASSIGN  15643>>ASSIGN  15680>>ASSIGN
     15681>>ASSIGN  15878>>IF      15884>>ASSIGN  15884>>ASSIGN  16065>>CALL
B$JITPG$
     14006**DCL     14590>>ASSIGN
B$LS$
     14010**DCL     15799>>ASSIGN  15812>>ASSIGN  15861>>ASSIGN  15868>>ASSIGN  15920>>ASSIGN  15955>>ASSIGN
     15956>>ASSIGN  15956>>ASSIGN
B$M$LM$
     13998**DCL     14437>>ASSIGN  15143>>ASSIGN
B$M$STAR$
     13997**DCL     15426>>IF      16138>>ASSIGN
B$M$UC$
     13999**DCL     14552>>ASSIGN  15381>>ASSIGN
B$MAP
       659**DCL     15306<<ASSIGN  15306>>ASSIGN
B$MAP.CTRL
       664**DCL     15212<<ASSIGN  15316>>IF      15317<<ASSIGN  15317>>ASSIGN  15324>>IF      15325<<ASSIGN
     15325>>ASSIGN  15801>>IF      15814>>IF
B$MAP.SCTRL
       661**DCL       662--REDEF   14454>>IF      14652>>IF      15306>>IF
B$MISC2$
     14011**DCL     15800>>ASSIGN  15813>>ASSIGN  15858>>ASSIGN  15921>>ASSIGN  15958>>ASSIGN
B$MLS.MISC2
     13619**DCL     15799<<ASSIGN  15812<<ASSIGN  15861<<ASSIGN  15868<<ASSIGN  15920<<ASSIGN  15955<<ASSIGN
     15956--ASSIGN  15956--ASSIGN
B$P.CRDATE
       730**DCL     14489>>ASSIGN  14490>>ASSIGN
B$P.NAME
       749**DCL     14478>>ASSIGN  14479>>ASSIGN  14480>>ASSIGN  14481>>ASSIGN  14482>>ASSIGN
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:287  
B$P.NAME.TEXT
       751**DCL     15760>>IF
B$P.UC
       726**DCL     14999<<ASSIGN  14999>>ASSIGN  15000<<ASSIGN  15000>>ASSIGN  15034<<ASSIGN  15034>>ASSIGN
     15041<<ASSIGN  15041>>ASSIGN  15048<<ASSIGN  15048>>ASSIGN  15055<<ASSIGN  15055>>ASSIGN  15062<<ASSIGN
     15062>>ASSIGN
B$P$
       779**DCL     14478>>ASSIGN  14479>>ASSIGN  14480>>ASSIGN  14481>>ASSIGN  14482>>ASSIGN  14489>>ASSIGN
     14490>>ASSIGN  14999>>ASSIGN  14999>>ASSIGN  15000>>ASSIGN  15000>>ASSIGN  15034>>ASSIGN  15034>>ASSIGN
     15041>>ASSIGN  15041>>ASSIGN  15048>>ASSIGN  15048>>ASSIGN  15055>>ASSIGN  15055>>ASSIGN  15062>>ASSIGN
     15062>>ASSIGN  15760>>IF
B$PAGE.WRD
       711**DCL     15155<<ASSIGN  15155>>ASSIGN  15157<<ASSIGN  15157>>ASSIGN  15606<<ASSIGN  15606>>ASSIGN
B$PS1$
     14017**DCL     15756--IMP-PTR 15760>>IF      15760>>IF
B$RODCB$
       848**DCL     15285>>ASSIGN  15620>>ASSIGN
B$ROSEG.AVAIL$
       816**DCL     15138<<ASSIGN  15138>>ASSIGN
B$ROSEG.DCBPTR$
       812**DCL     15154>>ASSIGN  15285>>ASSIGN  15605>>DOINDEX 15620>>ASSIGN
B$ROSEG.ECCB
       818**DCL     15139<<ASSIGN  15139>>ASSIGN
B$ROSEG.NUMDCBS
       814**DCL     15137<<ASSIGN  15137>>ASSIGN  15280>>ASSIGN  15604<<ASSIGN  15604>>ASSIGN  15619>>DOINDEX
B$ROSEG.TREE$
       813**DCL     15136<<ASSIGN  15136>>ASSIGN
B$ROSEG$
     14008**DCL     14598>>ASSIGN  15136>>ASSIGN  15137>>ASSIGN  15138>>ASSIGN  15139>>ASSIGN  15154>>ASSIGN
     15154>>ASSIGN  15155>>ASSIGN  15157>>ASSIGN  15162>>ASSIGN  15280>>ASSIGN  15285>>ASSIGN  15604>>ASSIGN
     15605>>DOINDEX 15605>>DOINDEX 15606>>ASSIGN  15611>>ASSIGN  15619>>DOINDEX 15620>>ASSIGN
B$SBUF1$
     14002**DCL     14443>>ASSIGN  14444>>ASSIGN  14448>>ASSIGN  14456>>ASSIGN  14460>>CALL    14461>>CALL
     14466>>ASSIGN  14467>>ASSIGN  14468>>ASSIGN  14469>>ASSIGN  14470>>ASSIGN  14471>>ASSIGN  14472>>ASSIGN
     14473>>ASSIGN  14478>>ASSIGN  14479>>ASSIGN  14480>>ASSIGN  14481>>ASSIGN  14482>>ASSIGN  14488>>ASSIGN
     14489>>ASSIGN  14490>>ASSIGN  14495>>ASSIGN  14499>>ASSIGN  14500>>ASSIGN  14501>>ASSIGN  14502>>ASSIGN
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:288  
     14503>>ASSIGN  14504>>ASSIGN  14511>>ASSIGN  14512>>ASSIGN  14514>>ASSIGN  14515>>ASSIGN  14517>>ASSIGN
     14518>>ASSIGN  14524>>ASSIGN  14525>>ASSIGN  14529>>ASSIGN  14533>>ASSIGN  14539>>ASSIGN  14540>>ASSIGN
     14544>>ASSIGN  14545>>ASSIGN  14546>>ASSIGN  14547>>ASSIGN  14557>>ASSIGN  14558>>ASSIGN  14564>>CALL
     14568>>ASSIGN  14571>>ASSIGN  14575>>ASSIGN  14587>>ASSIGN  14663>>CALL    14667>>IF      14669>>IF
     14675>>CALL    14677>>CALL    14705>>IF      14708>>CALL    14715>>ASSIGN  14716>>ASSIGN  14720>>ASSIGN
     14721>>ASSIGN  14815>>ASSIGN  14818>>IF      14824>>ASSIGN  14825>>ASSIGN  14834>>ASSIGN  14837>>IF
     14843>>IF      14855>>IF      14941>>ASSIGN  14992>>ASSIGN  14995>>ASSIGN  14996>>ASSIGN  14997>>ASSIGN
     14998>>ASSIGN  15010>>IF      15016>>IF      15018>>ASSIGN  15029>>IF      15032>>CALL    15032>>CALL
     15036>>IF      15039>>CALL    15039>>CALL    15043>>IF      15046>>CALL    15050>>IF      15053>>CALL
     15057>>IF      15060>>CALL    15064>>IF      15067>>CALL    15124>>CALL    15125>>CALL    15144>>ASSIGN
     15145>>ASSIGN  15146>>ASSIGN  15148>>ASSIGN  15164>>DOINDEX 15194>>ASSIGN  15202>>ASSIGN  15228>>IF
     15231>>DOINDEX 15243>>CALL    15248>>IF      15254>>IF      15263>>CALL    15265>>CALL    15270>>IF
     15272>>ASSIGN  15304>>IF      15330>>IF      15334>>IF      15337>>CALL    15369>>IF      15378>>IF
     15382>>ASSIGN  15383>>ASSIGN  15394>>CALL    15400>>ASSIGN  15552>>ASSIGN  15555>>IF      15561>>ASSIGN
     15562>>ASSIGN  15571>>ASSIGN  15575>>IF      15575>>IF      15575>>IF      15593>>ASSIGN  15601>>ASSIGN
     15604>>ASSIGN  15606>>ASSIGN  15708>>ASSIGN  15711>>IF      15714>>ASSIGN  15715>>ASSIGN  15724>>ASSIGN
     15727>>IF      15727>>IF      15730>>ASSIGN  15736>>ASSIGN  15739>>ASSIGN  15742>>ASSIGN  15912>>ASSIGN
     15916>>ASSIGN  15947>>ASSIGN  15951>>ASSIGN  15995>>ASSIGN  16000>>ASSIGN  16004>>ASSIGN  16005>>ASSIGN
     16033>>ASSIGN  16037>>ASSIGN  16038>>ASSIGN  16058>>ASSIGN
B$SBUF2$
     14009**DCL     12049--IMP-PTR 14533>>ASSIGN  14707>>ASSIGN  14875>>ASSIGN  14880>>IF      14894>>IF
     14896>>ASSIGN  14904>>IF      14907>>ASSIGN  14921>>ASSIGN  14922>>ASSIGN  14932>>ASSIGN  14933>>ASSIGN
     14934>>ASSIGN  14947>>ASSIGN  14948>>ASSIGN  14950>>ASSIGN  14951>>ASSIGN  14952>>ASSIGN  14954>>ASSIGN
     14955>>ASSIGN  14958>>ASSIGN  14960>>ASSIGN  14962>>ASSIGN  14963>>ASSIGN  14964>>ASSIGN  14965>>ASSIGN
     14966>>ASSIGN  14967>>ASSIGN  14968>>ASSIGN  14969>>ASSIGN  14970>>ASSIGN  14971>>ASSIGN  14972>>ASSIGN
     14973>>ASSIGN  14974>>ASSIGN  14975>>ASSIGN  14976>>ASSIGN  14977>>ASSIGN  14984>>ASSIGN  14985>>ASSIGN
     15084>>ASSIGN  15087>>ASSIGN  15088>>ASSIGN  15090>>ASSIGN  15091>>ASSIGN  15092>>ASSIGN  15094>>ASSIGN
     15095>>ASSIGN  15097>>ASSIGN  15098>>ASSIGN  15099>>ASSIGN  15100>>ASSIGN  15101>>ASSIGN  15102>>ASSIGN
     15103>>ASSIGN  15104>>ASSIGN  15106>>ASSIGN  15112>>ASSIGN  15113>>ASSIGN  15119>>ASSIGN  15120>>ASSIGN
     15134>>ASSIGN  15136>>ASSIGN  15137>>ASSIGN  15138>>ASSIGN  15139>>ASSIGN  15155>>ASSIGN  15157>>ASSIGN
     15301>>ASSIGN  15306>>IF      15306>>ASSIGN  15316>>IF      15324>>IF      15336>>ASSIGN  16060>>ASSIGN
     16064>>ASSIGN  16065>>CALL    16065>>CALL    16065>>CALL    16065>>CALL
B$SIZE IN PROCEDURE READ_SEGS
     15843**DCL     15850>>IF      15852>>ASSIGN
B$SIZE IN PROCEDURE WRITE_SEGS
     15780**DCL     15786>>ASSIGN  15791<<ASSIGN
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:289  
B$U.ACP
       971**DCL     14471>>ASSIGN  14481>>ASSIGN  15054<<ASSIGN
B$U.APO
       975**DCL     14469>>ASSIGN  14479>>ASSIGN  14997<<ASSIGN  15040<<ASSIGN  15587<<ASSIGN
B$U.APR
       974**DCL     14468>>ASSIGN  14478>>ASSIGN  14631>>IF      14996<<ASSIGN  15033<<ASSIGN  15200>>IF
     15312>>IF      15586<<ASSIGN
B$U.ASL
       973**DCL     14467>>ASSIGN  14995<<ASSIGN  14999>>ASSIGN  14999>>ASSIGN  15061<<ASSIGN  15250>>ASSIGN
     15585<<ASSIGN
B$U.ASP
       976**DCL     14470>>ASSIGN  14480>>ASSIGN  14489>>ASSIGN  14998<<ASSIGN  15000>>ASSIGN  15000>>ASSIGN
     15047<<ASSIGN  15588<<ASSIGN
B$U.ASYNCH
       952**DCL     14473>>ASSIGN  14474<<ASSIGN  14474>>ASSIGN  14992<<ASSIGN
B$U.DB
       972**DCL     14472>>ASSIGN  14482>>ASSIGN  14490>>ASSIGN  15010>>IF      15256>>ASSIGN
B$U.DL$
       990**DCL     14702>>IF      15983>>ASSIGN
B$U.FLG
       881**DCL     14466>>ASSIGN  15020<<ASSIGN  15020>>ASSIGN
B$U.MISC
       994**DCL       995--REDEF
B$UHJIT.AS
     13034**DCL     15120<<ASSIGN  15120>>ASSIGN
B$UHJIT.ASLLNK.IS
     12475**DCL     15094<<ASSIGN  15094>>ASSIGN
B$UHJIT.CPLNK.IS
     12651**DCL     15112<<ASSIGN  15112>>ASSIGN
B$UHJIT.DBLNK.IS
     12299**DCL     15113<<ASSIGN  15113>>ASSIGN
B$UHJIT.DBLNK.JIT
     12305**DCL     15088<<ASSIGN  15088>>ASSIGN
B$UHJIT.DBLNK.TCB
     12389**DCL     15092<<ASSIGN  15092>>ASSIGN
B$UHJIT.SDS
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:290  
     12827**DCL     15106<<ASSIGN  15106>>ASSIGN
B$UHJIT.SSS
     12877**DCL     15119<<ASSIGN  15119>>ASSIGN
B$UHJIT.ULNK.ASLENT
     12226**DCL     15095<<ASSIGN  15095>>ASSIGN
B$UHJIT.ULNK.ECCB
     12184**DCL     15090<<ASSIGN  15090>>ASSIGN
B$UHJIT.ULNK.JIT
     12106**DCL     15087<<ASSIGN  15087>>ASSIGN
B$UHJIT.ULNK.SPCL1
     12202**DCL     15097<<ASSIGN  15097>>ASSIGN
B$UHJIT.ULNK.SPCL2
     12208**DCL     15098<<ASSIGN  15098>>ASSIGN
B$UHJIT.ULNK.SPCL3
     12214**DCL     15099<<ASSIGN  15099>>ASSIGN
B$UHJIT.ULNK.SPCL4
     12220**DCL     15100<<ASSIGN  15100>>ASSIGN
B$UHJIT.ULNK.SPCL5
     12234**DCL     15101<<ASSIGN  15101>>ASSIGN
B$UHJIT.ULNK.SPCL6
     12240**DCL     15102<<ASSIGN  15102>>ASSIGN
B$UHJIT.ULNK.SPCL7
     12246**DCL     15103<<ASSIGN  15103>>ASSIGN
B$UHJIT.ULNK.SPCL8
     12252**DCL     15104<<ASSIGN  15104>>ASSIGN
B$UHJIT.ULNK.TCB
     12190**DCL     15091<<ASSIGN  15091>>ASSIGN
B$UPT$
     14001**DCL     14454>>IF      14652>>IF      14693>>ASSIGN  15212>>ASSIGN  15306>>ASSIGN  15317>>ASSIGN
     15317>>ASSIGN  15325>>ASSIGN  15325>>ASSIGN  15801>>IF      15814>>IF
B$USER.MISC
      1070**DCL      1071--REDEF
B$USERHJIT$
     14007**DCL     14593>>ASSIGN  15087>>ASSIGN  15088>>ASSIGN  15090>>ASSIGN  15091>>ASSIGN  15092>>ASSIGN
     15094>>ASSIGN  15095>>ASSIGN  15097>>ASSIGN  15098>>ASSIGN  15099>>ASSIGN  15100>>ASSIGN  15101>>ASSIGN
     15102>>ASSIGN  15103>>ASSIGN  15104>>ASSIGN  15106>>ASSIGN  15112>>ASSIGN  15113>>ASSIGN  15119>>ASSIGN
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:291  
     15120>>ASSIGN
B$USERIS$
     14000**DCL     14622>>ASSIGN  14633>>ASSIGN  14643>>ASSIGN  14654>>ASSIGN  14685>>ASSIGN  15236>>ASSIGN
     16165>>ASSIGN
B$USERLS$
     14005**DCL     14510>>IF      14512>>ASSIGN  14663<>CALL    15243<>CALL
BAD_READ IN PROCEDURE READ_STAR
     16140**LABEL   16126--CALLALT
BAD_WRITE IN PROCEDURE WRITE_STAR
     16103**LABEL   16100--CALLALT
BRET2
     15436**LABEL   15435--CALLALT
BRET3
     15436**LABEL   15436--CALLALT
BRING_IN
     16157**PROC    15196--CALL    15204--CALL    15221--CALL    15274--CALL
BUFSIZE IN PROCEDURE READ_STAR
     16120**DCL     16119--PROC    16125>>ASSIGN
BUFSIZE IN PROCEDURE WRITE_STAR
     16090**DCL     16089--PROC    16095>>IF      16097>>ASSIGN
BUF_RTN
     15430**LABEL   14792--GOTO    14797--GOTO    14821--GOTO    14840--GOTO    14846--GOTO    14859--GOTO
     14867--GOTO    14883--GOTO    14915--GOTO    15417--GOTO
B_SITEINFO.VERSION#
     14150**DCL     14494--ASSIGN  14854--ASSIGN  15574--ASSIGN
CHECK_DO IN PROCEDURE WRITE_DOLIST
     15987**LABEL   15989--GOTO
CHECK_DO_2 IN PROCEDURE WRITE_DOLIST
     15997**LABEL   16002--GOTO
CHK_ACP
     15739**LABEL   15737--CALLALT
CHK_ASL
     15736**LABEL   15731--CALLALT
CHK_DB
     15742**LABEL   15740--CALLALT
CHK_NEXT
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:292  
     15746**LABEL   15743--CALLALT
CHK_OPN_ERR
     15436**LABEL   15458--CALLALT
CHK_PROC
     15755**PROC    15731--CALL    15737--CALL    15740--CALL    15743--CALL
CLEANUP$
        12**DCL         8--PROC    14539>>ASSIGN  14760--ENTRY   14941<<ASSIGN  15673--ENTRY
CLEAN_UP_RTN
     15469**LABEL   15489--GOTO
CLS_RLS_STARN
     15635**LABEL   15516--GOTO    15537--GOTO
CPFLAGS
     11854**DCL     14562<<ASSIGN  14573>>ASSIGN  15388<<ASSIGN  15391>>ASSIGN
DATATYPE IN PROCEDURE BRING_IN
     16160**DCL     16157--PROC    16169<>CALL
DCB$
     11840**DCL     15285<<ASSIGN  15286>>IF      15287>>IF      15287>>IF      15288>>IF      15290>>ASSIGN
     15292>>CALL    15293>>ASSIGN  15620<<ASSIGN  15621>>IF      15622>>IF      15622>>IF      15623>>IF
     15625>>ASSIGN
DELETE_SET
     15635**LABEL   15546--GOTO    15558--GOTO    15581--GOTO
DOLST# IN PROCEDURE READ_DOLIST
     16057**DCL     16058<<ASSIGN  16059>>DOWHILE 16068<<ASSIGN  16068>>ASSIGN
DO_CONT_OFF IN PROCEDURE WRITE_DOLIST
     15976**DCL     15982<<ASSIGN  16000>>ASSIGN
DO_ENTRY IN PROCEDURE WRITE_DOLIST
     15980**DCL     15995<<ASSIGN  15995>>ASSIGN  16000<<ASSIGN  16000>>ASSIGN
DO_SUB_LEN IN PROCEDURE WRITE_DOLIST
     15974**DCL     15980--IMP-SIZ 15993<<ASSIGN  15994>>ASSIGN  15995>>ASSIGN  15995>>ASSIGN  15999<<ASSIGN
     16000>>ASSIGN  16000>>ASSIGN  16001>>ASSIGN
DO_TOT_LEN IN PROCEDURE READ_DOLIST
     16056**DCL     16061<>CALL
DO_TOT_LEN IN PROCEDURE WRITE_DOLIST
     15975**DCL     15994<<ASSIGN  16000>>ASSIGN  16001<<ASSIGN  16001>>ASSIGN  16004<<ASSIGN  16006<>CALL
DTS
     11838**DCL     14447<>CALL    14448>>ASSIGN  14720>>ASSIGN  14825<<ASSIGN  14843>>IF      15562<<ASSIGN
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:293  
     15575>>IF      15715<<ASSIGN  15727>>IF
END_DO_WHILE IN PROCEDURE WRITE_DOLIST
     16011**LABEL   15991--GOTO
ERR
        11**DCL         8--PROC    14732>>IF      14732>>IF      14740<<ASSIGN  14760--ENTRY   14761<<ASSIGN
     14773<>CALL    14774<>CALL    14858<<ASSIGN  14882<<ASSIGN  14914<<ASSIGN  15032<>CALL    15039<>CALL
     15046<>CALL    15053<>CALL    15060<>CALL    15067<>CALL    15165<>CALL    15234<>CALL    15400<<ASSIGN
     15416<<ASSIGN  15425<<ASSIGN  15426>>IF      15426>>IF      15430<<ASSIGN  15673--ENTRY   15853<>CALL
     16167<>CALL
ERR1
     11839**DCL     15458<>CALL    15511<>CALL    15513<>CALL    15614<>CALL    15635<>CALL    15657<>CALL
F$DCB.ACCT
     10220**DCL     14545>>ASSIGN  15145<<ASSIGN
F$DCB.ACS
     10227**DCL     15287>>IF      15287>>IF      15622>>IF      15622>>IF
F$DCB.ACTPOS
     10235**DCL     10235--REDEF
F$DCB.ARS
     10210**DCL     10210--REDEF   14568>>ASSIGN  16138>>ASSIGN
F$DCB.ASN
     10225**DCL     14553>>IF      15149<<ASSIGN
F$DCB.ATTR
     10228**DCL     10229--REDEF
F$DCB.BORROW
     10243**DCL     10243--REDEF   10243--REDEF   10243--REDEF
F$DCB.CFU$
     10244**DCL     15292<>CALL
F$DCB.DCBNAME.L
     10257**DCL     10257--IMP-SIZ
F$DCB.ENQF
     10242**DCL     15293<<ASSIGN
F$DCB.EOMCHAR
     10214**DCL     10214--REDEF
F$DCB.EXPIRE
     10226**DCL     14488>>ASSIGN
F$DCB.FCD
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:294  
     10223**DCL     15177<<ASSIGN  15185<<ASSIGN  15288>>IF      15623>>IF
F$DCB.FLDID
     10238**DCL     10238--REDEF
F$DCB.FORM$
     10232**DCL     10232--REDEF
F$DCB.FSECT
     10248**DCL     10248--REDEF
F$DCB.FSN
     10225**DCL     10225--REDEF   10225--REDEF   10226--REDEF
F$DCB.HEADER$
     10231**DCL     10231--REDEF
F$DCB.IASN
     10251**DCL     15178<<ASSIGN  15186<<ASSIGN
F$DCB.IXTNSIZE
     10229**DCL     10229--REDEF
F$DCB.LASTSTA$
     10219**DCL     10219--REDEF
F$DCB.LVL
     10244**DCL     10244--REDEF
F$DCB.NAME
     10219**DCL     14544>>ASSIGN  15144<<ASSIGN
F$DCB.NAME.C
     10219**DCL     10219--REDEF
F$DCB.NOEOF
     10240**DCL     10240--REDEF
F$DCB.NRECS
     10230**DCL     10230--REDEF
F$DCB.NRECX
     10249**DCL     10249--REDEF
F$DCB.OHDR
     10241**DCL     10241--REDEF
F$DCB.ORG
     10224**DCL     10224--REDEF
F$DCB.PASS
     10220**DCL     14546>>ASSIGN  15146<<ASSIGN
F$DCB.PASSF
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:295  
     10222**DCL     15147<<ASSIGN
F$DCB.PRECNO
     10247**DCL     10247--REDEF
F$DCB.PSN
     10220**DCL     14547>>ASSIGN  15148<<ASSIGN
F$DCB.RCSZ
     10252**DCL     10252--REDEF
F$DCB.RES
     10220**DCL     10220--REDEF   14553>>IF
F$DCB.SETX
     10232**DCL     10232--REDEF
F$DCB.STARX
     10241**DCL     15426>>IF
F$DCB.TAB$
     10231**DCL     10232--REDEF
F$DCB.TDA
     10246**DCL     10246--REDEF
F$DCB.UB$
     10248**DCL     14557<<ASSIGN  15382<<ASSIGN
F$DCB.UBYTES
     10248**DCL     14558<<ASSIGN  15383<<ASSIGN
F$DCB.WAIT
     10242**DCL     14559<<ASSIGN  15384<<ASSIGN
F$DCB.WSN
     10221**DCL     10221--REDEF
F$DCB.WSR
     10227**DCL     15150<<ASSIGN
FMI$INIT
     14158**DCL-ENT 15291--CALL    15626--CALL
FMM$RELDCBI
     14160**DCL-ENT 14616--CALL
FMP$CLSJ
     14161**DCL-ENT 14614--CALL
FPT$PREC
     11903**DCL     14780<<ASSIGN  14788<>CALL    14830<>CALL    15232<>CALL    15344<>CALL    15497<<ASSIGN
     15532<>CALL    15567<>CALL    15600<>CALL    15693<<ASSIGN  15702<>CALL    15720<>CALL    15882<>CALL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:296  
     16017<<ASSIGN  16022<>CALL
FPT$PREC.KEY_
     11903**DCL     14782<<ASSIGN  15499<<ASSIGN  15695<<ASSIGN  16019<<ASSIGN
FPT$PREC.V
     11905**DCL     14781--ASSIGN  15498--ASSIGN  15694--ASSIGN  16018--ASSIGN
FPT$PREC.V.DCB#
     11905**DCL     14783<<ASSIGN  15500<<ASSIGN  15696<<ASSIGN  16020<<ASSIGN
FPT$PREC.V.N#
     11909**DCL     14784<<ASSIGN  14829<<ASSIGN  15230<<ASSIGN  15343<<ASSIGN  15531<<ASSIGN  15566<<ASSIGN
     15599<<ASSIGN  15697<<ASSIGN  15719<<ASSIGN  15746<<ASSIGN  15881<<ASSIGN  16021<<ASSIGN
FPT$PREC.V_
     11903**DCL     14781<<ASSIGN  15498<<ASSIGN  15694<<ASSIGN  16018<<ASSIGN
FPT$READ
     11930**DCL     14808<<ASSIGN  15502<<ASSIGN  15685<<ASSIGN  16029<<ASSIGN  16126<>CALL
FPT$READ.BUF_.BOUND
     11932**DCL     16125<<ASSIGN
FPT$READ.BUF_.BUF$
     11933**DCL     14815<<ASSIGN  14834<<ASSIGN  14875<<ASSIGN  15084<<ASSIGN  15134<<ASSIGN  15162<<ASSIGN
     15236<<ASSIGN  15301<<ASSIGN  15336<<ASSIGN  15552<<ASSIGN  15571<<ASSIGN  15601<<ASSIGN  15611<<ASSIGN
     15708<<ASSIGN  15724<<ASSIGN  15858<<ASSIGN  15958<<ASSIGN  16033<<ASSIGN  16060<<ASSIGN  16139<<ASSIGN
     16139>>ASSIGN  16165<<ASSIGN
FPT$READ.KEY_
     11930**DCL     14810<<ASSIGN  15504<<ASSIGN  15687<<ASSIGN  16031<<ASSIGN
FPT$READ.STATION_
     11933**DCL     11934--REDEF
FPT$READ.V
     11934**DCL     14809--ASSIGN  15503--ASSIGN  15686--ASSIGN  16030--ASSIGN
FPT$READ.V.DCB#
     11934**DCL     14811<<ASSIGN  15505<<ASSIGN  15688<<ASSIGN  16032<<ASSIGN
FPT$READ.V.DVBYTE.REREAD#
     11945**DCL     11945--REDEF
FPT$READ.V.INDX#
     11943**DCL     11943--REDEF
FPT$READ.V_
     11930**DCL     14809<<ASSIGN  15503<<ASSIGN  15686<<ASSIGN  16030<<ASSIGN
FPT$RESCTL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:297  
     13873**DCL     14897--ASSIGN  14898<<ASSIGN  14912<>CALL
FPT$RESCTL.PSEUDO_
     13873**DCL     14900<<ASSIGN
FPT$RESCTL.V
     13875**DCL     14899--ASSIGN
FPT$RESCTL.V_
     13873**DCL     14899<<ASSIGN
FPT$WRITE
     11878**DCL     14580<<ASSIGN  16100<>CALL
FPT$WRITE.BUF_
     11878**DCL     16096<<ASSIGN
FPT$WRITE.BUF_.BOUND
     11878**DCL     16097<<ASSIGN
FPT$WRITE.BUF_.BUF$
     11880**DCL     14587<<ASSIGN  14590<<ASSIGN  14593<<ASSIGN  14598<<ASSIGN  14622<<ASSIGN  14633<<ASSIGN
     14643<<ASSIGN  14654<<ASSIGN  14685<<ASSIGN  14693<<ASSIGN  14707<<ASSIGN  14721<<ASSIGN  15800<<ASSIGN
     15813<<ASSIGN  15921<<ASSIGN  16005<<ASSIGN  16038<<ASSIGN  16102<<ASSIGN  16102>>ASSIGN
FPT$WRITE.KEY_
     11878**DCL     14582<<ASSIGN
FPT$WRITE.STATION_
     11880**DCL     11880--REDEF
FPT$WRITE.V
     11881**DCL     14581--ASSIGN
FPT$WRITE.V.DCB#
     11881**DCL     14583<<ASSIGN
FPT$WRITE.V.DVBYTE.VFC#
     11887**DCL     11887--REDEF
FPT$WRITE.V.NEWKEY#
     11884**DCL     16039<<ASSIGN  16041<<ASSIGN  16044<<ASSIGN
FPT$WRITE.V_
     11878**DCL     14581<<ASSIGN
FPT_PREC
     13942**DCL     14780>>ASSIGN  15497>>ASSIGN  15693>>ASSIGN  16017>>ASSIGN
FPT_PREC.V
     13944**DCL     13942--DCLINIT
FPT_READ
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:298  
     13970**DCL     14808>>ASSIGN  15502>>ASSIGN  15685>>ASSIGN  16029>>ASSIGN
FPT_READ.STATION_
     13973**DCL     13974--REDEF
FPT_READ.V
     13974**DCL     13970--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
     13985**DCL     13985--REDEF
FPT_READ.V.INDX#
     13983**DCL     13983--REDEF
FPT_WRITE
     13916**DCL     14580>>ASSIGN
FPT_WRITE.STATION_
     13918**DCL     13918--REDEF
FPT_WRITE.V
     13919**DCL     13916--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
     13925**DCL     13925--REDEF
FR_SUNM
     14018**DCL     14909>>ASSIGN
GET_ERR
     15424**LABEL   14773--CALLALT 14774--CALLALT 14779--CALLALT 14788--CALLALT 14816--CALLALT 14830--CALLALT
     14835--CALLALT 14876--CALLALT 15085--CALLALT 15135--CALLALT 15165--CALLALT 15166--CALLALT 15196--CALLALT
     15204--CALLALT 15221--CALLALT 15232--CALLALT 15234--CALLALT 15237--CALLALT 15243--CALLALT 15251--CALLALT
     15252--CALLALT 15257--CALLALT 15258--CALLALT 15263--CALLALT 15265--CALLALT 15274--CALLALT 15302--CALLALT
     15331--CALLALT 15337--CALLALT 15344--CALLALT
GULP
     15527**LABEL   15527--CALLALT
HFF$TRAPALT
     14162**DCL-ENT 15677--CALL
I
     11830**DCL     14453<<DOINDEX 14454>>IF      14509<<DOINDEX 14511>>ASSIGN  14512>>ASSIGN  14514>>ASSIGN
     14515>>ASSIGN  14517>>ASSIGN  14518>>ASSIGN  14599<<DOINDEX 14600<>CALL    14624<<DOINDEX 14625<>CALL
     14634<<DOINDEX 14635<>CALL    14644<<DOINDEX 14645<>CALL    14651<<DOINDEX 14652>>IF      14654>>ASSIGN
     14655<>CALL    14686<<DOINDEX 14687<>CALL    14903<<DOINDEX 14904>>IF      14904>>IF      14907>>ASSIGN
     14907>>ASSIGN  14909>>ASSIGN  15154<<ASSIGN  15155>>ASSIGN  15155>>ASSIGN  15156<<DOINDEX 15156>>DOINDEX
     15157>>ASSIGN  15157>>ASSIGN  15164<<DOINDEX 15165>>CALL    15181<<DOINDEX 15182--ASSIGN  15211<<DOINDEX
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:299  
     15212>>ASSIGN  15231<<DOINDEX 15280<<ASSIGN  15284>>DOWHILE 15285>>ASSIGN  15295<<ASSIGN  15295>>ASSIGN
     15305<<DOINDEX 15306>>IF      15306>>ASSIGN  15306>>ASSIGN  15315<<DOINDEX 15316>>IF      15317>>ASSIGN
     15317>>ASSIGN  15323<<DOINDEX 15324>>IF      15325>>ASSIGN  15325>>ASSIGN  15605<<DOINDEX 15606>>ASSIGN
     15606>>ASSIGN  15613<<DOINDEX 15614>>CALL    15619<<DOINDEX 15620>>ASSIGN  15634<<DOINDEX 15635>>CALL
     15784<<DOINDEX 15786>>ASSIGN  15791>>ASSIGN  15802>>CALL    15804>>CALL    15815>>CALL    15817>>CALL
     15848<<DOINDEX 15850>>IF      15852>>ASSIGN  15862>>CALL    15869>>CALL    15981<<ASSIGN  16006<>CALL
     16009<<ASSIGN  16009>>ASSIGN  16037>>ASSIGN  16166<<DOINDEX 16167>>CALL
ID.N
     11852**DCL     15530<<ASSIGN  15680<<ASSIGN  15701>>DOWHILE 15747<<ASSIGN  15747>>ASSIGN
ID.SYSID
     11853**DCL     15507<<ASSIGN  15681<<ASSIGN
IDN
        10**DCL         8--PROC    14436>>ASSIGN  14444>>ASSIGN  14716>>ASSIGN  14760--ENTRY   14794>>IF
     14818>>IF      14837>>IF      15361<>CALL    15673--ENTRY
J
     11831**DCL     14623<<ASSIGN  14624>>DOINDEX 14630<<ASSIGN  14634>>DOINDEX 14682<<ASSIGN  14686>>DOINDEX
     14902<<ASSIGN  14907>>ASSIGN  14909>>ASSIGN  14910<<ASSIGN  14910>>ASSIGN  15797<<DOINDEX 15800>>ASSIGN
     15859<<DOINDEX
JL$AMR_BUF.AMR_SIZE
     12050**DCL     14533>>ASSIGN
JL$HEAD
     11957**DCL     14443<<ASSIGN  14588--CALL    14835--CALL    15572--CALL    15725--CALL    16034--CALL
     16040--CALL
JL$HEAD.ACP
     11971**DCL     14471<<ASSIGN  15050>>IF      15739>>ASSIGN
JL$HEAD.AMR_SIZE
     12013**DCL     14533<<ASSIGN  14705>>IF      14708<>CALL    15334>>IF      15337<>CALL    15369>>IF
JL$HEAD.APO
     11969**DCL     14469<<ASSIGN  14997>>ASSIGN  15036>>IF
JL$HEAD.APONAME
     11994**DCL     14479<<ASSIGN  15039--CALL
JL$HEAD.APR
     11968**DCL     14468<<ASSIGN  14996>>ASSIGN  15029>>IF      15730>>ASSIGN
JL$HEAD.APRNAME
     11991**DCL     14478<<ASSIGN  15032--CALL
JL$HEAD.APR_UTS
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:300  
     11975**DCL     14488<<ASSIGN  15400>>ASSIGN
JL$HEAD.ASL
     11967**DCL     14467<<ASSIGN  14995>>ASSIGN  15057>>IF      15736>>ASSIGN
JL$HEAD.ASLDS
     11984**DCL     14514<<ASSIGN  14515<<ASSIGN  14675--CALL    15263--CALL
JL$HEAD.ASLNAME
     11988**DCL     15060--CALL
JL$HEAD.ASLTCB
     11986**DCL     14524<<ASSIGN  14667>>IF      15248>>IF      15912>>ASSIGN  15947>>ASSIGN
JL$HEAD.ASR
     11965**DCL     14461<>CALL    15125<>CALL
JL$HEAD.ASYNCH_FLG
     12017**DCL     14473<<ASSIGN  14992>>ASSIGN
JL$HEAD.CLEANUP$
     12020**DCL     14539<<ASSIGN  14540<<ASSIGN  14941>>ASSIGN
JL$HEAD.CPNAME
     12000**DCL     14481<<ASSIGN  15053--CALL
JL$HEAD.CVMPGS
     11958**DCL     14456<<ASSIGN  15304>>IF
JL$HEAD.DB
     11972**DCL     14472<<ASSIGN  15010>>IF      15016>>IF      15018>>ASSIGN  15064>>IF      15742>>ASSIGN
JL$HEAD.DBDS
     11985**DCL     14517<<ASSIGN  14518<<ASSIGN  14677--CALL    15265--CALL
JL$HEAD.DBNAME
     12003**DCL     14482<<ASSIGN  15067--CALL
JL$HEAD.DBTCB
     11987**DCL     14525<<ASSIGN  14669>>IF      15254>>IF      15916>>ASSIGN  15951>>ASSIGN
JL$HEAD.DB_UTS
     11977**DCL     14490<<ASSIGN
JL$HEAD.DDPGS
     11981**DCL     14501<<ASSIGN  15228>>IF      15231>>DOINDEX
JL$HEAD.DOLST_RECS
     11974**DCL     14504<<ASSIGN  15330>>IF      16037<<ASSIGN  16058>>ASSIGN
JL$HEAD.DPGS
     11979**DCL     14499<<ASSIGN  15194>>ASSIGN
JL$HEAD.DTS
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:301  
     11963**DCL     14448<<ASSIGN  14843>>IF      15575>>IF      15727>>IF
JL$HEAD.FLG
     11966**DCL     14466<<ASSIGN
JL$HEAD.IDN
     11959**DCL     11960--REDEF   14444<<ASSIGN  14837>>IF      15575>>IF      15727>>IF
JL$HEAD.INFO_SIZE
     12038**DCL     14568<<ASSIGN  14571<<ASSIGN  14575<<ASSIGN  15378>>IF      15383>>ASSIGN
JL$HEAD.LIB
     11970**DCL     14470<<ASSIGN  14998>>ASSIGN  15043>>IF
JL$HEAD.LIBNAME
     11997**DCL     14480<<ASSIGN  15046--CALL
JL$HEAD.LIBPGS
     11973**DCL     14503<<ASSIGN  15270>>IF      15272>>ASSIGN
JL$HEAD.LIB_UTS
     11976**DCL     14489<<ASSIGN
JL$HEAD.LMACCT
     12009**DCL     14545<<ASSIGN  15032--CALL    15039--CALL    15145>>ASSIGN
JL$HEAD.LMNAME
     12006**DCL     14544<<ASSIGN  15144>>ASSIGN
JL$HEAD.LMPASS.C
     12011**DCL     14546<<ASSIGN  15146>>ASSIGN
JL$HEAD.LMPSN
     12012**DCL     14547<<ASSIGN  15148>>ASSIGN
JL$HEAD.PPGS
     11980**DCL     14500<<ASSIGN  15202>>ASSIGN
JL$HEAD.ROPGS
     11982**DCL     14502<<ASSIGN  15164>>DOINDEX 15593>>ASSIGN
JL$HEAD.SSR
     11964**DCL     14460<>CALL    15124<>CALL
JL$HEAD.SYSVERS
     11978**DCL     14495<<ASSIGN  14855>>IF      15575>>IF
JL$HEAD.TERM_INFO
     12039**DCL     14557--ASSIGN  14558--ASSIGN  15382--ASSIGN
JL$HEAD.UD$PRMPT
     12029**DCL     14564<>CALL    15394<>CALL
JL$HEAD.UDS
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:302  
     11983**DCL     14511<<ASSIGN  14512<<ASSIGN  14529<<ASSIGN  14663--CALL    15243--CALL
JL$TRAILER
     12042**DCL     14722--CALL    14816--CALL    15553--CALL    15709--CALL
JL$TRAILER.DTS
     12045**DCL     14720<<ASSIGN  14825>>ASSIGN  15562>>ASSIGN  15715>>ASSIGN
JL$TRAILER.IDN
     12044**DCL     14716<<ASSIGN  14818>>IF      15555>>IF      15711>>IF
JL$TRAILER.NRECS
     12046**DCL     14715<<ASSIGN  14824>>ASSIGN  15561>>ASSIGN  15714>>ASSIGN
JLU$DELSET
     14163**DCL-ENT 15361--CALL    15639--CALL
JLU$OPNSTARN
     14164**DCL-ENT 15458--CALL
JLU$RESTORE_AMR
     14165**DCL-ENT 15371--CALL
JSA$ALIBDB
     14166**DCL-ENT 15019--CALL
JSA$DB
     14167**DCL-ENT 15068--CALL
JSA$FINDAUTO
     14168**DCL-ENT 15032--CALL    15039--CALL
JSA$FINDSSP
     14169**DCL-ENT 15046--CALL    15053--CALL    15060--CALL    15067--CALL
JSA$GETTCB
     14170**DCL-ENT 15251--CALL    15257--CALL
JSA$RUNDSPC
     14171**DCL-ENT 15014--CALL
JSF$CLSUSRDCBS
     14172**DCL-ENT 15630--CALL
JSN$GETASR
     14173**DCL-ENT 14461--CALL
JSN$GETSSR
     14174**DCL-ENT 14460--CALL
JSN$SETASR
     14175**DCL-ENT 15125--CALL
JSN$SETSSR
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:303  
     14176**DCL-ENT 15124--CALL
J_FPT_CL_REL
     14043**DCL     15357<>CALL    15651<>CALL
J_FPT_CL_REL.SN_
     14043**DCL     14043--REDEF
J_FPT_CL_REL.UTL_
     14044**DCL     14044--REDEF
J_FPT_CL_REL.V.DCB#
     14049**DCL     15352<<ASSIGN  15650<<ASSIGN
J_FPT_CL_REL.V.EXPIRE#
     14058**DCL     14058--REDEF
J_FPT_CL_REL.V.TYPE#
     14056**DCL     14056--REDEF
J_FPT_CL_REL.V.XTNSIZE#
     14053**DCL     14053--REDEF   14055--REDEF
J_FPT_CL_SAVE
     14085**DCL     15364<>CALL    15734<>CALL    15752<>CALL
J_FPT_CL_SAVE.SN_
     14085**DCL     14085--REDEF
J_FPT_CL_SAVE.UTL_
     14086**DCL     14086--REDEF
J_FPT_CL_SAVE.V.DCB#
     14091**DCL     15351<<ASSIGN
J_FPT_CL_SAVE.V.EXPIRE#
     14100**DCL     14100--REDEF
J_FPT_CL_SAVE.V.TYPE#
     14098**DCL     14098--REDEF
J_FPT_CL_SAVE.V.XTNSIZE#
     14095**DCL     14095--REDEF   14097--REDEF
J_FPT_PFIL
     14115**DCL     14779<>CALL    15527<>CALL    15692<>CALL    16014<>CALL
J_FPT_PFIL.V.DCB#
     14115**DCL     14778<<ASSIGN  15495<<ASSIGN  15691<<ASSIGN  16013<<ASSIGN
J_FPT_RESCTL
     14130**DCL     14898>>ASSIGN
J_SYS$
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:304  
     14016**DCL     15046<>CALL    15053<>CALL    15060<>CALL    15067<>CALL
KEY
     11845**DCL     14582--ASSIGN  14782--ASSIGN  14810--ASSIGN  15499--ASSIGN  15504--ASSIGN  15687--ASSIGN
     15695--ASSIGN  16019--ASSIGN  16031--ASSIGN
KEY.CNT
     11846**DCL     14435<<ASSIGN
KEY.ID
     11847**DCL     14436<<ASSIGN  14794>>IF      15543>>IF      15703>>IF
KEY.PGNO
     11849**DCL     15233>>ASSIGN  16099<<ASSIGN
KEY.TYPE
     11848**DCL     14789>>IF      15345>>IF      15543>>IF      15703>>IF      16025>>IF      16098<<ASSIGN
     16128>>IF
KEYTYPE IN PROCEDURE READ_STAR
     16121**DCL     16119--PROC    16128>>IF
KEYTYPE IN PROCEDURE WRITE_STAR
     16091**DCL     16089--PROC    16098>>ASSIGN
KIA$UCIOD
     14177**DCL-ENT 14566--CALL    15390--CALL
LM$
     11829**DCL     14437<<ASSIGN  14488>>ASSIGN  14544>>ASSIGN  14545>>ASSIGN  14546>>ASSIGN  14547>>ASSIGN
     15143<<ASSIGN  15144>>ASSIGN  15145>>ASSIGN  15146>>ASSIGN  15147>>ASSIGN  15148>>ASSIGN  15149>>ASSIGN
     15150>>ASSIGN
LNKID
     11850**DCL     11851--REDEF   15543>>IF      15555>>IF      15575>>IF      15639<>CALL    15703>>IF
     15711>>IF      15727>>IF
LPTR$
     11826**DCL     13890--IMP-PTR 14897<<ASSIGN  14900>>ASSIGN  14901>>ASSIGN  14906>>ASSIGN  14906>>ASSIGN
     14907>>ASSIGN  14909>>ASSIGN  15783<<ASSIGN  15789>>IF      15794>>ASSIGN  15799>>ASSIGN  15812>>ASSIGN
     15822<<ASSIGN  15822>>ASSIGN  15847<<ASSIGN  15861>>ASSIGN  15868>>ASSIGN  15888<<ASSIGN  15888>>ASSIGN
LS$ IN PROCEDURE READ_SEGS
     15840**DCL     15838--PROC    15847>>ASSIGN
LS$ IN PROCEDURE WRITE_SEGS
     15777**DCL     15776--PROC    15783>>ASSIGN
M$MCLOSE
     14187**DCL-ENT 15357--CALL    15364--CALL    15651--CALL    15734--CALL    15752--CALL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:305  
M$MLIMIT
     14188**DCL-ENT 14912--CALL
M$MPFIL
     14189**DCL-ENT 14779--CALL    15527--CALL    15692--CALL    16014--CALL
M$MPRECORD
     14190**DCL-ENT 14788--CALL    14830--CALL    15344--CALL    15532--CALL    15567--CALL    15600--CALL
     15702--CALL    15720--CALL    15882--CALL    16022--CALL
M$MREAD
     14191**DCL-ENT 16126--CALL
M$MWRITE
     14192**DCL-ENT 16100--CALL
M$PRECORD
      9601**DCL-ENT 15232--CALL
M$UC$
     11827**DCL     14552<<ASSIGN  14553>>IF      14553>>IF      14557>>ASSIGN  14558>>ASSIGN  14559>>ASSIGN
     14560>>ASSIGN  14568>>ASSIGN  15381<<ASSIGN  15382>>ASSIGN  15383>>ASSIGN  15384>>ASSIGN  15385>>ASSIGN
MM$DESC.BOUND
     11435**DCL     11436--REDEF   14512>>ASSIGN  14515>>ASSIGN  14518>>ASSIGN  14524>>ASSIGN  14525>>ASSIGN
MM$DESC.FLGS
     11436**DCL     11436--REDEF   14510>>IF      14513>>IF      14516>>IF
MM$PPUT.USER#
     11424**DCL     11424--REDEF
MME$WFVP
     14178**DCL-ENT 14726--CALL    14742--CALL    15404--CALL    15405--CALL    15435--CALL    15436--CALL
     15511--CALL    15635--CALL    15657--CALL    15733--CALL    15751--CALL
MME$WGVP
     14179**DCL-ENT 14773--CALL    14774--CALL    15165--CALL    15234--CALL    15513--CALL    15614--CALL
     15679--CALL    16167--CALL
MMH$GDS
     14180**DCL-ENT 15853--CALL
MM_BYP$
     11355**DCL     11355--IMP-PTR
N
     11832**DCL     11833--REDEF   14452<<ASSIGN  14454<<ASSIGN  14454>>ASSIGN  14456>>ASSIGN  14816<>CALL
     14835<>CALL    14876<>CALL    15018<<ASSIGN  15019<>CALL    15032<>CALL    15033>>ASSIGN  15034>>ASSIGN
     15034>>ASSIGN  15039<>CALL    15040>>ASSIGN  15041>>ASSIGN  15041>>ASSIGN  15046<>CALL    15047>>ASSIGN
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:306  
     15048>>ASSIGN  15048>>ASSIGN  15053<>CALL    15054>>ASSIGN  15055>>ASSIGN  15055>>ASSIGN  15060<>CALL
     15061>>ASSIGN  15062>>ASSIGN  15062>>ASSIGN  15067<>CALL    15068<>CALL    15085<>CALL    15135<>CALL
     15166<>CALL    15237<>CALL    15302<>CALL    15337<>CALL    15553<>CALL    15572<>CALL    15602<>CALL
     15615<>CALL    15709<>CALL    15725<>CALL    15795<<ASSIGN  15809>>IF      15815>>CALL    15852<<ASSIGN
     15853<>CALL    15855<<ASSIGN  15856>>ASSIGN  15857>>ASSIGN  15862<>CALL    15869<>CALL    16034<>CALL
     16169<>CALL
NEXT_DO$ IN PROCEDURE WRITE_DOLIST
     15977**DCL     15983<<ASSIGN  15984>>DOWHILE 15985>>IF      15987>>IF      15988<<ASSIGN  15988>>ASSIGN
     15995>>ASSIGN  15997>>IF      15998<<ASSIGN  15998>>ASSIGN  16000>>ASSIGN  16011<<ASSIGN  16011>>ASSIGN
NN.U
     11835**DCL     15855>>ASSIGN  15881>>ASSIGN
NO_PROBLEM
     15507**LABEL   15511--CALLALT
OLD_PCP
     11855**DCL     14962<<ASSIGN  15206>>ASSIGN
PCODE
     11857**DCL     14561<<ASSIGN  14566<>CALL    15386<<ASSIGN  15390<>CALL
PERR1
     15416**LABEL   15019--CALLALT 15032--CALLALT 15039--CALLALT 15046--CALLALT 15053--CALLALT 15060--CALLALT
     15067--CALLALT 15068--CALLALT
PGNO IN PROCEDURE WRITE_STAR
     16092**DCL     16089--PROC    16099>>ASSIGN
PGS IN PROCEDURE BRING_IN
     16158**DCL     16157--PROC    16166>>DOINDEX
PTYPE
     11836**DCL     15031<<ASSIGN  15032<>CALL    15038<<ASSIGN  15039<>CALL    15045<<ASSIGN  15046<>CALL
     15052<<ASSIGN  15053<>CALL    15059<<ASSIGN  15060<>CALL    15066<<ASSIGN  15067<>CALL
READ_DOLIST
     16053**PROC    15331--CALL
READ_SEGS
     15838**PROC    15243--CALL    15263--CALL    15265--CALL
READ_STAR
     16119**PROC    14816--CALL    14835--CALL    14876--CALL    15085--CALL    15135--CALL    15166--CALL
     15237--CALL    15302--CALL    15337--CALL    15553--CALL    15572--CALL    15602--CALL    15615--CALL
     15709--CALL    15725--CALL    15862--CALL    15869--CALL    15959--CALL    16034--CALL    16061--CALL
     16169--CALL
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:307  
READ_TCB
     15939**PROC    15252--CALL    15258--CALL
RECCNT
     11844**DCL     14579<<ASSIGN  14715>>ASSIGN  14824<<ASSIGN  14829>>ASSIGN  15561<<ASSIGN  15566>>ASSIGN
     15714<<ASSIGN  15719>>ASSIGN  16021>>ASSIGN  16045<<ASSIGN  16045>>ASSIGN  16101<<ASSIGN  16101>>ASSIGN
RECTYPE IN PROCEDURE READ_SEGS
     15842**DCL     15838--PROC    15862>>CALL    15869>>CALL
RECTYPE IN PROCEDURE WRITE_SEGS
     15779**DCL     15776--PROC    15802>>CALL    15804>>CALL    15815>>CALL    15817>>CALL
RRET1
     15364**LABEL   15357--CALLALT 15358--GOTO    15364--CALLALT
RRET2
     15405**LABEL   15404--CALLALT
RRET3
     15400**LABEL   15405--CALLALT
S$CU$
     14012**DCL     14466>>ASSIGN  14467>>ASSIGN  14468>>ASSIGN  14469>>ASSIGN  14470>>ASSIGN  14471>>ASSIGN
     14472>>ASSIGN  14473>>ASSIGN  14474>>ASSIGN  14474>>ASSIGN  14478>>ASSIGN  14479>>ASSIGN  14480>>ASSIGN
     14481>>ASSIGN  14482>>ASSIGN  14489>>ASSIGN  14490>>ASSIGN  14631>>IF      14702>>IF      14992>>ASSIGN
     14995>>ASSIGN  14996>>ASSIGN  14997>>ASSIGN  14998>>ASSIGN  14999>>ASSIGN  14999>>ASSIGN  15000>>ASSIGN
     15000>>ASSIGN  15010>>IF      15020>>ASSIGN  15020>>ASSIGN  15033>>ASSIGN  15040>>ASSIGN  15047>>ASSIGN
     15054>>ASSIGN  15061>>ASSIGN  15200>>IF      15250>>ASSIGN  15256>>ASSIGN  15312>>IF      15585>>ASSIGN
     15586>>ASSIGN  15587>>ASSIGN  15588>>ASSIGN  15983>>ASSIGN
SAVEJUNK
     11856**DCL     15012<<ASSIGN  15015>>ASSIGN
SAVE_ERR
     14732**LABEL   14588--CALLALT 14591--CALLALT 14594--CALLALT 14600--CALLALT 14625--CALLALT 14635--CALLALT
     14645--CALLALT 14655--CALLALT 14663--CALLALT 14668--CALLALT 14670--CALLALT 14675--CALLALT 14677--CALLALT
     14687--CALLALT 14694--CALLALT 14704--CALLALT 14708--CALLALT 14722--CALLALT
SAVE_RTN
     14721**LABEL   14726--CALLALT
SAV_ALTRTN
     14740**LABEL   14742--CALLALT
SC_BADNF
     14194**DCL-ENT 14791--CALL    15346--CALL    16026--CALL    16130--CALL
SC_INFONF
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:308  
     14196**DCL-ENT 14845--CALL    14866--CALL
SC_IOERRNF
     14198**DCL-ENT 14733--CALL    15427--CALL
SC_LDLNK
     14197**DCL-ENT 15469--CALL    15487--CALL    15515--CALL    15536--CALL    15545--CALL    15557--CALL
     15580--CALL    15653--CALL
SC_SYSIDNF
     14195**DCL-ENT 14796--CALL    14820--CALL    14839--CALL
SEA_ERR
     15751**LABEL   15677--CALLALT 15679--CALLALT 15692--CALLALT 15702--CALLALT 15704--GOTO    15709--CALLALT
     15712--GOTO    15720--CALLALT 15725--CALLALT 15728--GOTO
SEA_ERR1
     15753**LABEL   15752--CALLALT
SEA_RET
     15733**LABEL   15738--GOTO    15741--GOTO    15744--GOTO
SEA_RET1
     15735**LABEL   15734--CALLALT
SID
     11837**DCL     14508<<ASSIGN  14510>>IF      14512>>ASSIGN  14513>>IF      14515>>ASSIGN  14516>>IF
     14518>>ASSIGN  14519<<ASSIGN  14519>>ASSIGN  15846<<ASSIGN  15853<>CALL    15889<<ASSIGN  15889>>ASSIGN
SIZES$ IN PROCEDURE READ_SEGS
     15841**DCL     15838--PROC    15850>>IF      15852>>ASSIGN
SIZES$ IN PROCEDURE WRITE_SEGS
     15778**DCL     15776--PROC    15786>>ASSIGN  15791>>ASSIGN
SKIP_IT
     15395**LABEL   15390--CALLALT
SNAP_SET
     15577**LABEL   15553--CALLALT 15567--CALLALT 15572--CALLALT 15600--CALLALT 15602--CALLALT 15614--CALLALT
     15615--CALLALT 15635--CALLALT
SNARF IN PROCEDURE READ_SEGS
     15892**LABEL   15862--CALLALT 15869--CALLALT 15882--CALLALT
SNARF IN PROCEDURE WRITE_SEGS
     15825**LABEL   15802--CALLALT 15804--CALLALT 15815--CALLALT 15817--CALLALT
SSR$REG
     14181**DCL-ENT 15410--CALL
SSS$SYSTIME
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:309  
     14182**DCL-ENT 14447--CALL
SSV$EVENT IN PROCEDURE READ_DOLIST
     16055**DCL-ENT 16065--CALL
STARTPG IN PROCEDURE BRING_IN
     16159**DCL     16157--PROC    16164>>ASSIGN  16167>>CALL
TCB$ IN PROCEDURE READ_TCB
     15942**DCL     15948<<ASSIGN  15952<<ASSIGN  15955>>ASSIGN
TCB$ IN PROCEDURE WRITE_TCB
     15907**DCL     15913<<ASSIGN  15917<<ASSIGN  15920>>ASSIGN
TCBSIZE IN PROCEDURE READ_TCB
     15941**DCL     15947<<ASSIGN  15951<<ASSIGN  15959<>CALL    15959<>CALL
TCBSIZE IN PROCEDURE WRITE_TCB
     15906**DCL     15912<<ASSIGN  15916<<ASSIGN  15922<>CALL
TEMP1
     11841**DCL     14726<>CALL    14726<>CALL    14742<>CALL    14742<>CALL    14772<<ASSIGN  14773<>CALL
     14774<>CALL    15163<<ASSIGN  15165<>CALL    15194<<ASSIGN  15196<>CALL    15202<<ASSIGN  15204<>CALL
     15210<<ASSIGN  15211>>DOINDEX 15217<<ASSIGN  15218>>IF      15221<>CALL    15228>>IF      15231>>DOINDEX
     15250<<ASSIGN  15251<>CALL    15256<<ASSIGN  15257<>CALL    15272<<ASSIGN  15274<>CALL    15314<<ASSIGN
     15315>>DOINDEX 15322<<ASSIGN  15323>>DOINDEX 15404<>CALL    15404<>CALL    15405<>CALL    15405<>CALL
     15435<>CALL    15435<>CALL    15436<>CALL    15436<>CALL    15593<<ASSIGN  15609>>IF      15613>>DOINDEX
     15634>>DOINDEX 15678<<ASSIGN  15679<>CALL    15679<>CALL    15730<<ASSIGN  15733<>CALL    15733<>CALL
     15736<<ASSIGN  15739<<ASSIGN  15742<<ASSIGN  15751<>CALL    15751<>CALL    15759>>IF      15760>>IF
     15782<<ASSIGN  15783>>ASSIGN  15845<<ASSIGN  15847>>ASSIGN  15909<<ASSIGN  15913>>ASSIGN  15917>>ASSIGN
     15944<<ASSIGN  15948>>ASSIGN  15952>>ASSIGN  16064<<ASSIGN  16065<>CALL
TEMP2
     11842**DCL     15195<<ASSIGN  15196<>CALL    15203<<ASSIGN  15204<>CALL    15220<<ASSIGN  15221<>CALL
     15233<<ASSIGN  15234<>CALL    15236>>ASSIGN  15273<<ASSIGN  15274<>CALL    15511<>CALL    15612<<ASSIGN
     15614<>CALL    15635<>CALL    15657<>CALL    15794<<ASSIGN  15801>>IF      15802<>CALL    15804<>CALL
     15807<<ASSIGN  15807>>ASSIGN  15814>>IF      15815<>CALL    15817<>CALL    15857<<ASSIGN  15859>>DOINDEX
TEMP3
     11843**DCL     15786<<ASSIGN  15787>>IF      15791>>ASSIGN  15795>>ASSIGN  15796<<ASSIGN  15796>>ASSIGN
     15797>>DOINDEX 15813>>ASSIGN  15856<<ASSIGN  15866>>IF      15869<>CALL
TEXTC.SIZ
     14204**DCL     14205--IMP-SIZ
TMP IN PROCEDURE BRING_IN
     16162**DCL     16164<<ASSIGN  16165>>ASSIGN
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:310  
TPTR$
     11828**DCL     13873--IMP-PTR 14494<<ASSIGN  14495>>ASSIGN  14854<<ASSIGN  14855>>IF      14896<<ASSIGN
     14897>>ASSIGN  14898>>ASSIGN  14899>>ASSIGN  14899>>ASSIGN  14900>>ASSIGN  14912>>CALL    15174<<ASSIGN
     15175>>IF      15177>>ASSIGN  15178>>ASSIGN  15182<<ASSIGN  15183>>IF      15185>>ASSIGN  15186>>ASSIGN
     15574<<ASSIGN  15575>>IF
TXTC.C IN PROCEDURE CHK_PROC
     15757**DCL     15758--IMP-SIZ 15760>>IF
TXTC.TEXT IN PROCEDURE CHK_PROC
     15758**DCL     15760>>IF
TYPE IN PROCEDURE READ_TCB
     15940**DCL     15939--PROC    15945>>IF      15959<>CALL
TYPE IN PROCEDURE WRITE_TCB
     15905**DCL     15904--PROC    15910>>IF      15922<>CALL
UMD$RSTRPRMPT
     14183**DCL-ENT 15394--CALL
UMD$SVPRMPT
     14184**DCL-ENT 14564--CALL
UQB$MDEQ
     14185**DCL-ENT 15292--CALL
VIRTUAL
     11858**DCL     14963<<ASSIGN  15282>>ASSIGN
VLP$PS
     13890**DCL     14900--ASSIGN  14901<<ASSIGN
VLP$PS.NN#
     13890**DCL     14906<<ASSIGN  14906>>ASSIGN
VLP$PS.PSLIST.NUM#
     13892**DCL     14907<<ASSIGN
VLP$PS.PSLIST.PSEUDO#
     13892**DCL     14909<<ASSIGN
WHOA
     15650**LABEL   15657--CALLALT
WRITE_DOLIST
     15972**PROC    14704--CALL
WRITE_SEGS
     15776**PROC    14663--CALL    14675--CALL    14677--CALL
WRITE_STAR
PL6.E3A0      #001=JLS$SAVE_IMAGE File=JLS$IMAGES.:E05TSI                        TUE 07/29/97 23:25 Page:311  
     16089**PROC    14588--CALL    14591--CALL    14594--CALL    14600--CALL    14625--CALL    14635--CALL
     14645--CALL    14655--CALL    14687--CALL    14694--CALL    14708--CALL    14722--CALL    15802--CALL
     15804--CALL    15815--CALL    15817--CALL    15922--CALL    16006--CALL    16040--CALL
WRITE_TCB
     15904**PROC    14668--CALL    14670--CALL
WSQ IN PROCEDURE READ_SEGS
     15839**DCL     15838--PROC    15853<>CALL
WTCB_ERR IN PROCEDURE READ_TCB
     15963**LABEL   15959--CALLALT
WTCB_ERR IN PROCEDURE WRITE_TCB
     15926**LABEL   15922--CALLALT
YUK IN PROCEDURE BRING_IN
     16172**LABEL   16167--CALLALT 16169--CALLALT
