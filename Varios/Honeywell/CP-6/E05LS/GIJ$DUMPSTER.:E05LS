VERSION E05

PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:1    
        1        1        /*M* GIJ$DUMPSTER - NA Routines for crash dumps */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*F*    Name: GIJ$INITDUMP
        9        9                Call: CALL GIJ$INITDUMP
       10       10                Purpose:
       11       11                   This routine initiates the transmission of a dump to the
       12       12                host.  The current form is used for sending the dump from
       13       13                disk to the host for RFEP crashes.  The next version will
       14       14                handle SNAPs.
       15       15                                                                           */
       16       16
       17       17        GIJ$INITDUMP: PROC;
       18       18
       19       19        %INCLUDE LCP_6;
       20     4298        %INCLUDE IR_DATA_M;
       21     4462        %GI_RCVR_EQU;
       22     4474        %INCLUDE KL_MACRO_C;
       23     7826
       24     7827    1   DCL GIJ$WRT_FROG ENTRY(1) ALTRET;
       25     7828    1   DCL GID$RDDUMP ENTRY(3);
       26     7829    1   DCL GID$CHKDMP ENTRY ALTRET;
       27     7830
       28     7831        %KL_DUMPMSG (FPTN=DUMPMSG,
       29     7832                     STCLASS=AUTO,
       30     7833                     DSIZE=512);
       31     7874        %RV_FEP_BUFF (FPTN=RVBUF,STCLASS=BASED,BITMAP=NO);
       32     7967
       33     7968    1   DCL RVBUFSECT UBIN;
       34     7969
       35     7970    1   DCL GJA_NODE# UBIN SYMREF;
       36     7971
       37     7972    1   DCL GIJ_DUMPING BIT(1) ALIGNED STATIC SYMDEF INIT('0'B);
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:2    
       38     7973
       39     7974        %EJECT;
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:3    
       40     7975
       41     7976    1           IF GIJ_DUMPING THEN RETURN;
       42     7977    2           CALL GID$CHKDMP WHENALTRETURN DO;
       43     7978                   /* No dump on the disk */
       44     7979    2              RETURN;
       45     7980    2              END;
       46     7981    1           GIJ_DUMPING = '1'B;
       47     7982    1           RVBUFSECT=%(GI_RVBUF_LOC+256)/128;   /* Second page of RVBUF */
       48     7983    1           CALL GID$RDDUMP(ADDR(DUMPMSG.DATA),RVBUFSECT,1);
       49     7984    1           DUMPMSG.TYPE=%GI_DUMP_RQST;
       50     7985    1           DUMPMSG.FEX=GJA_NODE#;
       51     7986    1           DUMPMSG.DATASIZE=SIZEC(RVBUF);
       52     7987    1           DUMPMSG.RPN=0;
       53     7988    1           CALL GIJ$WRT_FROG(DUMPMSG);
       54     7989    1           RETURN;
       55     7990    1   GIJ$ABORTDUMP: ENTRY;
       56     7991
       57     7992    1           GIJ_DUMPING = '0'B;
       58     7993    1           RETURN;
       59     7994
       60     7995
       61     7996    1   END GIJ$INITDUMP;
       62     7997        %EOD;

PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:4    
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GIJ$INITDUMP.

   Procedure GIJ$INITDUMP requires 94 words for executable code.
   Procedure GIJ$INITDUMP requires 276 words of local(AUTO) storage.

PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:5    

 Object Unit name= GIJ$INITDUMP                               File name= GIJ$DUMPSTER.:E05TOU
 UTS= JUL 29 '97 21:46:16.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     1      1  GIJ$INITDUMP
    1   Proc  even  none    94     5E  GIJ$INITDUMP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  GIJ$INITDUMP
     1     53                  yes      Std        0  GIJ$ABORTDUMP

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  GIJ_DUMPING

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 GID$CHKDMP
         yes           Std       3 GID$RDDUMP
 yes     yes           Std       1 GIJ$WRT_FROG
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GJA_NODE#                        r    G$ROS$
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:7    


        1        1        /*M* GIJ$DUMPSTER - NA Routines for crash dumps */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*F*    Name: GIJ$INITDUMP
        9        9                Call: CALL GIJ$INITDUMP
       10       10                Purpose:
       11       11                   This routine initiates the transmission of a dump to the
       12       12                host.  The current form is used for sending the dump from
       13       13                disk to the host for RFEP crashes.  The next version will
       14       14                handle SNAPs.
       15       15                                                                           */
       16       16
       17       17        GIJ$INITDUMP: PROC;

     17   1 000000  D380 0000 0000  xent GIJ$INITDUMP    LNJ,B5   X6A_AUTO_0
          1 000003       0114 0000                       DC       276,0

       18       18
       19       19        %INCLUDE LCP_6;
       20     4298        %INCLUDE IR_DATA_M;
       21     4462        %GI_RCVR_EQU;
       22     4474        %INCLUDE KL_MACRO_C;
       23     7826
       24     7827    1   DCL GIJ$WRT_FROG ENTRY(1) ALTRET;
       25     7828    1   DCL GID$RDDUMP ENTRY(3);
       26     7829    1   DCL GID$CHKDMP ENTRY ALTRET;
       27     7830
       28     7831        %KL_DUMPMSG (FPTN=DUMPMSG,
       29     7832                     STCLASS=AUTO,
       30     7833                     DSIZE=512);
       31     7874        %RV_FEP_BUFF (FPTN=RVBUF,STCLASS=BASED,BITMAP=NO);
       32     7967
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:8    
       33     7968    1   DCL RVBUFSECT UBIN;
       34     7969
       35     7970    1   DCL GJA_NODE# UBIN SYMREF;
       36     7971
       37     7972    1   DCL GIJ_DUMPING BIT(1) ALIGNED STATIC SYMDEF INIT('0'B);
       38     7973
       39     7974        %EJECT;
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:9    
       40     7975
       41     7976    1           IF GIJ_DUMPING THEN RETURN;

   7976   1 000005  8980 0000 0000  00                   CMZ      GIJ_DUMPING
          1 000008  0881 0004                            BAGE     s:7977,PREL

   7976   1 00000A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       42     7977    2           CALL GID$CHKDMP WHENALTRETURN DO;

   7977   1 00000D  CBF0 0000                            LAB,B4   0,IMO
          1 00000F  E380 0000 0000  xent                 LNJ,B6   GID$CHKDMP
          1 000012       0003                            DC       s:7979,PREL
          1 000013  0F81 0004                            B        s:7981,PREL

       43     7978                   /* No dump on the disk */
       44     7979    2              RETURN;

   7979   1 000015  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       45     7980    2              END;
       46     7981    1           GIJ_DUMPING = '1'B;

   7981   1 000018  8900 0000 0000  00                   LBT,'8000'X       GIJ_DUMPING
   7981   1 00001B       8000

       47     7982    1           RVBUFSECT=%(GI_RVBUF_LOC+256)/128;   /* Second page of RVBUF */

   7982   1 00001C  6C06                                 LDV,R6   6
          1 00001D  EF47 010A                            STR,R6   RVBUFSECT,AUTO

       48     7983    1           CALL GID$RDDUMP(ADDR(DUMPMSG.DATA),RVBUFSECT,1);

   7983   1 00001F  EBC7 000A                            LAB,B6   DUMPMSG+6,AUTO
          1 000021  EFC7 010C                            STB,B6   RVBUFSECT+2,AUTO
          1 000023  DBF0 0001                            LAB,B5   1,IMO
          1 000025  DFC7 0112                            STB,B5   RVBUFSECT+8,AUTO
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:10   
          1 000027  CBC7 010A                            LAB,B4   RVBUFSECT,AUTO
          1 000029  CFC7 0110                            STB,B4   RVBUFSECT+6,AUTO
          1 00002B  BBC7 010C                            LAB,B3   RVBUFSECT+2,AUTO
          1 00002D  BFC7 010E                            STB,B3   RVBUFSECT+4,AUTO
          1 00002F  BBC7 010E                            LAB,B3   RVBUFSECT+4,AUTO
          1 000031  CBF0 0300                            LAB,B4   768,IMO
          1 000033  E380 0000 0000  xent                 LNJ,B6   GID$RDDUMP
          1 000036       0001                            DC       s:7984,PREL

       49     7984    1           DUMPMSG.TYPE=%GI_DUMP_RQST;

   7984   1 000037  6C01                                 LDV,R6   1
          1 000038  E7C7 0006                            STH,R6   DUMPMSG+2,AUTO

       50     7985    1           DUMPMSG.FEX=GJA_NODE#;

   7985   1 00003A  D800 0000 0000  xsym                 LDR,R5   GJA_NODE#
          1 00003D  DF47 0007                            STR,R5   DUMPMSG+3,AUTO

       51     7986    1           DUMPMSG.DATASIZE=SIZEC(RVBUF);

   7986   1 00003F  4C18                                 LDV,R4   24
          1 000040  CF47 0008                            STR,R4   DUMPMSG+4,AUTO

       52     7987    1           DUMPMSG.RPN=0;

   7987   1 000042  8747 0009                            CL       DUMPMSG+5,AUTO

       53     7988    1           CALL GIJ$WRT_FROG(DUMPMSG);

   7988   1 000044  EBC7 0004                            LAB,B6   DUMPMSG,AUTO
          1 000046  EFC7 010C                            STB,B6   RVBUFSECT+2,AUTO
          1 000048  BBC7 010C                            LAB,B3   RVBUFSECT+2,AUTO
          1 00004A  CBF0 0100                            LAB,B4   256,IMO
          1 00004C  E380 0000 0000  xent                 LNJ,B6   GIJ$WRT_FROG
          1 00004F       0001                            DC       s:7989,PREL

PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:11   
       54     7989    1           RETURN;

   7989   1 000050  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       55     7990    1   GIJ$ABORTDUMP: ENTRY;

   7990   1 000053  D380 0000 0000  xent GIJ$ABORTDUMP   LNJ,B5   X6A_AUTO_0
          1 000056       0114 0000                       DC       276,0

       56     7991
       57     7992    1           GIJ_DUMPING = '0'B;

   7992   1 000058  8700 0000 0000  00                   CL       GIJ_DUMPING

       58     7993    1           RETURN;

   7993   1 00005B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       59     7994
       60     7995
       61     7996    1   END GIJ$INITDUMP;
       62     7997        %EOD;

PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:12   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GIJ$INITDUMP.
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:13   

 **** Variables and constants ****

  ****  Section 000  Data  GIJ$INITDUMP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 GIJ_DUMPING

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC(4192)  r     1 DUMPMSG                  10A-0-0/w UBIN(16)    r     1 RVBUFSECT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 GJA_NODE#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(192)   r     1 RVBUF


   Procedure GIJ$INITDUMP requires 94 words for executable code.
   Procedure GIJ$INITDUMP requires 276 words of local(AUTO) storage.
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GIJ$INITDUMP File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:15   
          MINI XREF LISTING

DUMPMSG
      7853**DCL      7988<>CALL
DUMPMSG.DATA
      7872**DCL      7983--CALL
DUMPMSG.DATASIZE
      7870**DCL      7986<<ASSIGN
DUMPMSG.FEX
      7869**DCL      7985<<ASSIGN
DUMPMSG.RPN
      7871**DCL      7987<<ASSIGN
DUMPMSG.TYPE
      7865**DCL      7984<<ASSIGN
GID$CHKDMP
      7829**DCL-ENT  7977--CALL
GID$RDDUMP
      7828**DCL-ENT  7983--CALL
GIJ$WRT_FROG
      7827**DCL-ENT  7988--CALL
GIJ_DUMPING
      7972**DCL      7976>>IF       7981<<ASSIGN   7992<<ASSIGN
GJA_NODE#
      7970**DCL      7985>>ASSIGN
RVBUF
      7887**DCL      7986--ASSIGN
RVBUFSECT
      7968**DCL      7982<<ASSIGN   7983<>CALL

PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:16   
       63        1        /*T***********************************************************/
       64        2        /*T*                                                         */
       65        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       66        4        /*T*                                                         */
       67        5        /*T***********************************************************/
       68        6        /*F*    Name: GIJ$DUMPMSG
       69        7                Call: CALL GIJ$DUMPMSG(dumpmsg);
       70        8                Purpose:
       71        9                   This routine is called whenever NA receives a dump message
       72       10                from FROG.  If the message type is GI_DUMP_GRANT then the
       73       11                recovery buffer is sent to FROG.  If the message type is
       74       12                GI_DUMP_ACK then the next page of the dump is sent until the
       75       13                end of the dump is reached when GI_DUMP_EOD is sent.
       76       14        */
       77       15
       78       16        GIJ$DUMPMSG: PROC(DUMPMSG);
       79       17
       80       18        %INCLUDE LCP_6;
       81     4297        %INCLUDE IR_DATA_M;
       82     4461        %GI_RCVR_EQU;
       83     4473        %INCLUDE KL_MACRO_C;
       84     7825
       85     7826
       86     7827    1   DCL GID$RDDUMP ENTRY(3);
       87     7828    1   DCL GID$ENDDUMP ENTRY ALTRET;
       88     7829    1   DCL GIJ$WRT_FROG ENTRY(1) ALTRET;
       89     7830        %KL_DUMPMSG (FPTN=DUMPMSG,
       90     7831                     STCLASS=PARAM,
       91     7832                     DSIZE=0);
       92     7873
       93     7874        %KL_DUMPMSG (FPTN=REPLY,
       94     7875                     STCLASS=AUTO,
       95     7876                     DSIZE=1024);
       96     7917
       97     7918    1   DCL DMPX UBIN;
       98     7919    1   DCL I SBIN;
       99     7920        %RV_FEP_BUFF (FPTN=RVBASE,STCLASS=BASED);
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:17   
      100     8013
      101     8014    1   DCL CURPAGE SBIN STATIC;
      102     8015    1   DCL NUMPGS SBIN STATIC INIT(1);
      103     8016    1   DCL CURSECTOR UBIN STATIC;
      104     8017    1   DCL FIRSTACK BIT(1) STATIC ALIGNED;
      105     8018        %RV_FEP_BUFF (FPTN=RVBUF,STCLASS=STATIC);
      106     8111
      107     8112    1   DCL GJA_NODE# UBIN SYMREF;
      108     8113    1   DCL GIJ_DUMPING BIT(1) ALIGNED SYMREF;
      109     8114
      110     8115
      111     8116        %EJECT;
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:18   
      112     8117
      113     8118    1           REPLY.FEX=GJA_NODE#;
      114     8119    2           DO CASE(DUMPMSG.TYPE);
      115     8120    2            CASE(%GI_DUMP_GRANT);
      116     8121    2              CURSECTOR=%GI_RVBUF_LOC/128;
      117     8122    2              CALL GID$RDDUMP(ADDR(REPLY.DATA),CURSECTOR,2);
      118     8123    2              REPLY.TYPE=%GI_DUMP_RVBUF;
      119     8124    2              REPLY.DATASIZE=SIZEC(RVBUF);
      120     8125    2              REPLY.RPN=%GI_RVBUF_LOC/256;
      121     8126    2              RVBUF=ADDR(REPLY.DATA)->RVBASE;
      122     8127    2              CALL GIJ$WRT_FROG(REPLY);
      123     8128    2              FIRSTACK='1'B;
      124     8129
      125     8130    2            CASE(%GI_DUMP_ACK);
      126     8131    3              IF FIRSTACK THEN DO;
      127     8132    3                 CURPAGE=0;
      128     8133    3                 CURSECTOR=0;
      129     8134    3                 FIRSTACK='0'B;
      130     8135    3                 NUMPGS=5;
      131     8136    3                 END;
      132     8137    3              DO I=1 TO NUMPGS;
      133     8138    3                 CALL GID$RDDUMP(ADDR(REPLY.DATA),CURSECTOR,1);
      134     8139    3                 REPLY.TYPE=%GI_DUMP_PAGE;
      135     8140    3                 REPLY.DATASIZE=512;
      136     8141    3                 REPLY.RPN=CURPAGE;
      137     8142    3                 CALL GIJ$WRT_FROG(REPLY);
      138     8143    3                 CURSECTOR=CURSECTOR+2;
      139     8144    3                 CURPAGE=CURPAGE+1;
      140     8145    4                 IF MOD(CURPAGE,%GI_PGS_PER_BIT)=0 THEN DO;
      141     8146    4                    DMPX=CURPAGE/%GI_PGS_PER_BIT;
      142     8147    5                    DO WHILE(NOT RVBUF.DUMPMAP(DMPX));
      143     8148    5                       DMPX=DMPX+1;
      144     8149    5                       END;
      145     8150    5                    IF DMPX>=%GI_BITMAP_SIZE THEN DO;
      146     8151    5                       REPLY.TYPE=%GI_DUMP_EOD;
      147     8152    5                       REPLY.DATASIZE=1;
      148     8153    5                       CALL GIJ$WRT_FROG(REPLY);
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:19   
      149     8154    5                       NUMPGS=0;
      150     8155    5                       CALL GID$ENDDUMP;
      151     8156    5                       GIJ_DUMPING = '0'B;
      152     8157    5                       RETURN;
      153     8158    5                       END;
      154     8159    4                    CURPAGE=DMPX*%GI_PGS_PER_BIT;
      155     8160    4                    END;
      156     8161    3                 END;
      157     8162    2              IF NUMPGS>1 THEN NUMPGS=1;
      158     8163    2            END;
      159     8164    1           RETURN;
      160     8165    1   END GIJ$DUMPMSG;
      161     8166        %EOD;

PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:20   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GIJ$DUMPMSG.

   Procedure GIJ$DUMPMSG requires 265 words for executable code.
   Procedure GIJ$DUMPMSG requires 534 words of local(AUTO) storage.

PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:21   

 Object Unit name= GIJ$DUMPMSG                                File name= GIJ$DUMPSTER.:E05TOU
 UTS= JUL 29 '97 21:46:36.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none   272    110  GIJ$DUMPMSG
    1   Proc  even  none   265    109  GIJ$DUMPMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GIJ$DUMPMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 GID$RDDUMP
 yes     yes           Std       1 GIJ$WRT_FROG
 yes     yes           Std       0 GID$ENDDUMP
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GJA_NODE#                             GIJ_DUMPING                      r    G$ROS$
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:22   


       63        1        /*T***********************************************************/
       64        2        /*T*                                                         */
       65        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       66        4        /*T*                                                         */
       67        5        /*T***********************************************************/
       68        6        /*F*    Name: GIJ$DUMPMSG
       69        7                Call: CALL GIJ$DUMPMSG(dumpmsg);
       70        8                Purpose:
       71        9                   This routine is called whenever NA receives a dump message
       72       10                from FROG.  If the message type is GI_DUMP_GRANT then the
       73       11                recovery buffer is sent to FROG.  If the message type is
       74       12                GI_DUMP_ACK then the next page of the dump is sent until the
       75       13                end of the dump is reached when GI_DUMP_EOD is sent.
       76       14        */
       77       15
       78       16        GIJ$DUMPMSG: PROC(DUMPMSG);

     16   1 000000  D380 0000 0000  xent GIJ$DUMPMSG     LNJ,B5   X6A_AUTO_1
          1 000003       0216 0001                       DC       534,1

       79       17
       80       18        %INCLUDE LCP_6;
       81     4297        %INCLUDE IR_DATA_M;
       82     4461        %GI_RCVR_EQU;
       83     4473        %INCLUDE KL_MACRO_C;
       84     7825
       85     7826
       86     7827    1   DCL GID$RDDUMP ENTRY(3);
       87     7828    1   DCL GID$ENDDUMP ENTRY ALTRET;
       88     7829    1   DCL GIJ$WRT_FROG ENTRY(1) ALTRET;
       89     7830        %KL_DUMPMSG (FPTN=DUMPMSG,
       90     7831                     STCLASS=PARAM,
       91     7832                     DSIZE=0);
       92     7873
       93     7874        %KL_DUMPMSG (FPTN=REPLY,
       94     7875                     STCLASS=AUTO,
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:23   
       95     7876                     DSIZE=1024);
       96     7917
       97     7918    1   DCL DMPX UBIN;
       98     7919    1   DCL I SBIN;
       99     7920        %RV_FEP_BUFF (FPTN=RVBASE,STCLASS=BASED);
      100     8013
      101     8014    1   DCL CURPAGE SBIN STATIC;
      102     8015    1   DCL NUMPGS SBIN STATIC INIT(1);
      103     8016    1   DCL CURSECTOR UBIN STATIC;
      104     8017    1   DCL FIRSTACK BIT(1) STATIC ALIGNED;
      105     8018        %RV_FEP_BUFF (FPTN=RVBUF,STCLASS=STATIC);
      106     8111
      107     8112    1   DCL GJA_NODE# UBIN SYMREF;
      108     8113    1   DCL GIJ_DUMPING BIT(1) ALIGNED SYMREF;
      109     8114
      110     8115
      111     8116        %EJECT;
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:24   
      112     8117
      113     8118    1           REPLY.FEX=GJA_NODE#;

   8118   1 000005  E800 0000 0000  xsym                 LDR,R6   GJA_NODE#
          1 000008  EF47 0009                            STR,R6   REPLY+3,AUTO

      114     8119    2           DO CASE(DUMPMSG.TYPE);

   8119   1 00000A  ECC7 0004                            LDB,B6   @DUMPMSG,AUTO
          1 00000C  B2C6 0002                            LLH,R3   2,B6
          1 00000E  3D06                                 CMV,R3   6
          1 00000F  0281 00F6                            BGE      s:8164,PREL
          1 000011  A830 0000 0017  01                   LDR,R2   s:8119+13,R3
          1 000014  83A0 0000 001D  01                   JMP      s:8121,R2
          1 000017       00E9                            DC       s:8164,PREL
          1 000018       00E9                            DC       s:8164,PREL
          1 000019       0000                            DC       s:8121,PREL
          1 00001A       00E9                            DC       s:8164,PREL
          1 00001B       00E9                            DC       s:8164,PREL
          1 00001C       0042                            DC       s:8131,PREL

      115     8120    2            CASE(%GI_DUMP_GRANT);

      116     8121    2              CURSECTOR=%GI_RVBUF_LOC/128;

   8121   1 00001D  5C04                                 LDV,R5   4
          1 00001E  DF00 0000 0002  00                   STR,R5   CURSECTOR

      117     8122    2              CALL GID$RDDUMP(ADDR(REPLY.DATA),CURSECTOR,2);

   8122   1 000021  DBC7 000C                            LAB,B5   REPLY+6,AUTO
          1 000023  DFC7 020E                            STB,B5   I+1,AUTO
          1 000025  CBF0 0002                            LAB,B4   2,IMO
          1 000027  CFC7 0214                            STB,B4   I+7,AUTO
          1 000029  BB80 0000 0002  00                   LAB,B3   CURSECTOR
          1 00002C  BFC7 0212                            STB,B3   I+5,AUTO
          1 00002E  ABC7 020E                            LAB,B2   I+1,AUTO
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:25   
          1 000030  AFC7 0210                            STB,B2   I+3,AUTO
          1 000032  BBC7 0210                            LAB,B3   I+3,AUTO
          1 000034  CBF0 0300                            LAB,B4   768,IMO
          1 000036  E380 0000 0000  xent                 LNJ,B6   GID$RDDUMP
          1 000039       0001                            DC       s:8123,PREL

      118     8123    2              REPLY.TYPE=%GI_DUMP_RVBUF;

   8123   1 00003A  6C03                                 LDV,R6   3
          1 00003B  E7C7 0008                            STH,R6   REPLY+2,AUTO

      119     8124    2              REPLY.DATASIZE=SIZEC(RVBUF);

   8124   1 00003D  D870 0218                            LDR,R5   536,IMO
          1 00003F  DF47 000A                            STR,R5   REPLY+4,AUTO

      120     8125    2              REPLY.RPN=%GI_RVBUF_LOC/256;

   8125   1 000041  4C02                                 LDV,R4   2
          1 000042  CF47 000B                            STR,R4   REPLY+5,AUTO

      121     8126    2              RVBUF=ADDR(REPLY.DATA)->RVBASE;

   8126   1 000044  AB87                                 LAB,B2   ,AUTO
          1 000045  2C18                                 LDV,R2   24
          1 000046  E870 0218                            LDR,R6   536,IMO
          1 000048  BB80 0000 0000  00                   LAB,B3   CURPAGE
          1 00004B  3C08                                 LDV,R3   8
          1 00004C  0008                                 MMM

      122     8127    2              CALL GIJ$WRT_FROG(REPLY);

   8127   1 00004D  EBC7 0006                            LAB,B6   REPLY,AUTO
          1 00004F  EFC7 020E                            STB,B6   I+1,AUTO
          1 000051  BBC7 020E                            LAB,B3   I+1,AUTO
          1 000053  CBF0 0100                            LAB,B4   256,IMO
          1 000055  E380 0000 0000  xent                 LNJ,B6   GIJ$WRT_FROG
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:26   
          1 000058       0001                            DC       s:8128,PREL

      123     8128    2              FIRSTACK='1'B;

   8128   1 000059  8900 0000 0003  00                   LBT,'8000'X       FIRSTACK
   8128   1 00005C       8000
          1 00005D  0F81 00A8                            B        s:8164,PREL

      124     8129
      125     8130    2            CASE(%GI_DUMP_ACK);

      126     8131    3              IF FIRSTACK THEN DO;

   8131   1 00005F  8980 0000 0003  00                   CMZ      FIRSTACK
          1 000062  0881 000E                            BAGE     s:8137,PREL

      127     8132    3                 CURPAGE=0;

   8132   1 000064  8700 0000 0000  00                   CL       CURPAGE

      128     8133    3                 CURSECTOR=0;

   8133   1 000067  8700 0000 0002  00                   CL       CURSECTOR

      129     8134    3                 FIRSTACK='0'B;

   8134   1 00006A  8700 0000 0003  00                   CL       FIRSTACK

      130     8135    3                 NUMPGS=5;

   8135   1 00006D  5C05                                 LDV,R5   5
          1 00006E  DF00 0000 0001  00                   STR,R5   NUMPGS

      131     8136    3                 END;

      132     8137    3              DO I=1 TO NUMPGS;

PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:27   
   8137   1 000071  5C01                                 LDV,R5   1
          1 000072  DF47 020D                            STR,R5   I,AUTO
          1 000074  0F81 0080                            B        s:8161+2,PREL

      133     8138    3                 CALL GID$RDDUMP(ADDR(REPLY.DATA),CURSECTOR,1);

   8138   1 000076  EBC7 000C                            LAB,B6   REPLY+6,AUTO
          1 000078  EFC7 020E                            STB,B6   I+1,AUTO
          1 00007A  DBF0 0001                            LAB,B5   1,IMO
          1 00007C  DFC7 0214                            STB,B5   I+7,AUTO
          1 00007E  CB80 0000 0002  00                   LAB,B4   CURSECTOR
          1 000081  CFC7 0212                            STB,B4   I+5,AUTO
          1 000083  BBC7 020E                            LAB,B3   I+1,AUTO
          1 000085  BFC7 0210                            STB,B3   I+3,AUTO
          1 000087  BBC7 0210                            LAB,B3   I+3,AUTO
          1 000089  CBF0 0300                            LAB,B4   768,IMO
          1 00008B  E380 0000 0000  xent                 LNJ,B6   GID$RDDUMP
          1 00008E       0001                            DC       s:8139,PREL

      134     8139    3                 REPLY.TYPE=%GI_DUMP_PAGE;

   8139   1 00008F  6C04                                 LDV,R6   4
          1 000090  E7C7 0008                            STH,R6   REPLY+2,AUTO

      135     8140    3                 REPLY.DATASIZE=512;

   8140   1 000092  D870 0200                            LDR,R5   512,IMO
          1 000094  DF47 000A                            STR,R5   REPLY+4,AUTO

      136     8141    3                 REPLY.RPN=CURPAGE;

   8141   1 000096  C800 0000 0000  00                   LDR,R4   CURPAGE
          1 000099  CF47 000B                            STR,R4   REPLY+5,AUTO

      137     8142    3                 CALL GIJ$WRT_FROG(REPLY);

   8142   1 00009B  EBC7 0006                            LAB,B6   REPLY,AUTO
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:28   
          1 00009D  EFC7 020E                            STB,B6   I+1,AUTO
          1 00009F  BBC7 020E                            LAB,B3   I+1,AUTO
          1 0000A1  CBF0 0100                            LAB,B4   256,IMO
          1 0000A3  E380 0000 0000  xent                 LNJ,B6   GIJ$WRT_FROG
          1 0000A6       0001                            DC       s:8143,PREL

      138     8143    3                 CURSECTOR=CURSECTOR+2;

   8143   1 0000A7  E800 0000 0002  00                   LDR,R6   CURSECTOR
          1 0000AA  6E02                                 ADV,R6   2
          1 0000AB  EF00 0000 0002  00                   STR,R6   CURSECTOR

      139     8144    3                 CURPAGE=CURPAGE+1;

   8144   1 0000AE  8A80 0000 0000  00                   INC      CURPAGE

      140     8145    4                 IF MOD(CURPAGE,%GI_PGS_PER_BIT)=0 THEN DO;

   8145   1 0000B1  E800 0000 0000  00                   LDR,R6   CURPAGE
          1 0000B4  70F0                                 DAR,R7   16
          1 0000B5  F370 0004                            DIV,R7   4,IMO
          1 0000B7  6981 003B                            BNEZ,R6  s:8161,PREL

      141     8146    4                    DMPX=CURPAGE/%GI_PGS_PER_BIT;

   8146   1 0000B9  E800 0000 0000  00                   LDR,R6   CURPAGE
          1 0000BC  E370 0004                            DIV,R6   4,IMO
          1 0000BE  EF47 020C                            STR,R6   DMPX,AUTO

      142     8147    5                    DO WHILE(NOT RVBUF.DUMPMAP(DMPX));

   8147   1 0000C0  0F81 0003                            B        s:8149,PREL

      143     8148    5                       DMPX=DMPX+1;

   8148   1 0000C2  8AC7 020C                            INC      DMPX,AUTO

PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:29   
      144     8149    5                       END;

   8149   1 0000C4  B847 020C                            LDR,R3   DMPX,AUTO
          1 0000C6  82B0 0000 0004  00                   LB       RVBUF,R3
          1 0000C9  05F9                                 BBF      s:8148,SPREL

      145     8150    5                    IF DMPX>=%GI_BITMAP_SIZE THEN DO;

   8150   1 0000CA  B970 1000                            CMR,R3   4096,IMO
          1 0000CC  0201 0022                            BL       s:8159,PREL

      146     8151    5                       REPLY.TYPE=%GI_DUMP_EOD;

   8151   1 0000CE  6C06                                 LDV,R6   6
          1 0000CF  E7C7 0008                            STH,R6   REPLY+2,AUTO

      147     8152    5                       REPLY.DATASIZE=1;

   8152   1 0000D1  5C01                                 LDV,R5   1
          1 0000D2  DF47 000A                            STR,R5   REPLY+4,AUTO

      148     8153    5                       CALL GIJ$WRT_FROG(REPLY);

   8153   1 0000D4  EBC7 0006                            LAB,B6   REPLY,AUTO
          1 0000D6  EFC7 020E                            STB,B6   I+1,AUTO
          1 0000D8  BBC7 020E                            LAB,B3   I+1,AUTO
          1 0000DA  CBF0 0100                            LAB,B4   256,IMO
          1 0000DC  E380 0000 0000  xent                 LNJ,B6   GIJ$WRT_FROG
          1 0000DF       0001                            DC       s:8154,PREL

      149     8154    5                       NUMPGS=0;

   8154   1 0000E0  8700 0000 0001  00                   CL       NUMPGS

      150     8155    5                       CALL GID$ENDDUMP;

   8155   1 0000E3  CBF0 0000                            LAB,B4   0,IMO
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:30   
          1 0000E5  E380 0000 0000  xent                 LNJ,B6   GID$ENDDUMP
          1 0000E8       0001                            DC       s:8156,PREL

      151     8156    5                       GIJ_DUMPING = '0'B;

   8156   1 0000E9  8700 0000 0000  xsym                 CL       GIJ_DUMPING

      152     8157    5                       RETURN;

   8157   1 0000EC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      153     8158    5                       END;
      154     8159    4                    CURPAGE=DMPX*%GI_PGS_PER_BIT;

   8159   1 0000EF  3002                                 SOL,R3   2
          1 0000F0  BF00 0000 0000  00                   STR,R3   CURPAGE

      155     8160    4                    END;

      156     8161    3                 END;

   8161   1 0000F3  8AC7 020D                            INC      I,AUTO
          1 0000F5  E847 020D                            LDR,R6   I,AUTO
          1 0000F7  E900 0000 0001  00                   CMR,R6   NUMPGS
          1 0000FA  0A81 FF7B                            BALE     s:8138,PREL

      157     8162    2              IF NUMPGS>1 THEN NUMPGS=1;

   8162   1 0000FC  D800 0000 0001  00                   LDR,R5   NUMPGS
          1 0000FF  5D01                                 CMV,R5   1
          1 000100  0A81 0005                            BALE     s:8164,PREL

   8162   1 000102  5C01                                 LDV,R5   1
          1 000103  DF00 0000 0001  00                   STR,R5   NUMPGS

      158     8163    2            END;

PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:31   
      159     8164    1           RETURN;

   8164   1 000106  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      160     8165    1   END GIJ$DUMPMSG;
      161     8166        %EOD;

PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:32   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GIJ$DUMPMSG.
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:33   

 **** Variables and constants ****

  ****  Section 000  Data  GIJ$DUMPMSG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN(16)    r     1 CURPAGE                    2-0-0/w UBIN(16)    r     1 CURSECTOR
     3-0-0/w BIT         r     1 FIRSTACK                   1-0-0/w SBIN(16)    r     1 NUMPGS
     4-0-0/w STRC(4288)  r     1 RVBUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DUMPMSG                 20C-0-0/w UBIN(16)    r     1 DMPX
    *0-0-0/w ASTR(96)    r     1 DUMPMSG                  20D-0-0/w SBIN(16)    r     1 I
     6-0-0/w STRC(8288)  r     1 REPLY

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 GIJ_DUMPING                0-0-0/w UBIN(16)    r     1 GJA_NODE#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4288)  r     1 RVBASE


   Procedure GIJ$DUMPMSG requires 265 words for executable code.
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:34   
   Procedure GIJ$DUMPMSG requires 534 words of local(AUTO) storage.
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:36   
          MINI XREF LISTING

CURPAGE
      8014**DCL      8132<<ASSIGN   8141>>ASSIGN   8144<<ASSIGN   8144>>ASSIGN   8145>>IF       8146>>ASSIGN
      8159<<ASSIGN
CURSECTOR
      8016**DCL      8121<<ASSIGN   8122<>CALL     8133<<ASSIGN   8138<>CALL     8143<<ASSIGN   8143>>ASSIGN
DMPX
      7918**DCL      8146<<ASSIGN   8147>>DOWHILE  8148<<ASSIGN   8148>>ASSIGN   8150>>IF       8159>>ASSIGN
DUMPMSG
      7852**DCL        16--PROC
DUMPMSG.DATASIZE
      7869**DCL      7871--IMP-SIZ
DUMPMSG.TYPE
      7864**DCL      8119>>DOCASE
FIRSTACK
      8017**DCL      8128<<ASSIGN   8131>>IF       8134<<ASSIGN
GID$ENDDUMP
      7828**DCL-ENT  8155--CALL
GID$RDDUMP
      7827**DCL-ENT  8122--CALL     8138--CALL
GIJ$WRT_FROG
      7829**DCL-ENT  8127--CALL     8142--CALL     8153--CALL
GIJ_DUMPING
      8113**DCL      8156<<ASSIGN
GJA_NODE#
      8112**DCL      8118>>ASSIGN
I
      7919**DCL      8137<<DOINDEX
NUMPGS
      8015**DCL      8135<<ASSIGN   8137>>DOINDEX  8154<<ASSIGN   8162>>IF       8162<<ASSIGN
REPLY
      7896**DCL      8127<>CALL     8142<>CALL     8153<>CALL
REPLY.DATA
PL6.E3A0      #002=GIJ$DUMPMSG File=GIJ$DUMPSTER.:E05TSI                         TUE 07/29/97 21:46 Page:37   
      7915**DCL      8122--CALL     8126--ASSIGN   8138--CALL
REPLY.DATASIZE
      7913**DCL      8124<<ASSIGN   8140<<ASSIGN   8152<<ASSIGN
REPLY.FEX
      7912**DCL      8118<<ASSIGN
REPLY.RPN
      7914**DCL      8125<<ASSIGN   8141<<ASSIGN
REPLY.TYPE
      7908**DCL      8123<<ASSIGN   8139<<ASSIGN   8151<<ASSIGN
RVBASE
      7933**DCL      8126>>ASSIGN
RVBUF
      8031**DCL      8124--ASSIGN   8126<<ASSIGN
RVBUF.DUMPMAP
      8034**DCL      8147>>DOWHILE

PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:38   
      162        1        /*T***********************************************************/
      163        2        /*T*                                                         */
      164        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      165        4        /*T*                                                         */
      166        5        /*T***********************************************************/
      167        6        /*F*    NAME: GIJ$WRT_FROG
      168        7                Purpose:  Send message from NA to FROG for dumping FEPs.
      169        8                Call:    CALL GIJ$WRT_FROG(BUF) ALTRET;
      170        9                Description:  This routine sends a message to KFD$DUMPMSG in
      171       10                FROG.  Major sights along the way are GJA$NETWORK_MANAGER,
      172       11                KLI$AMSG and KFC$CSCGMSG.  The argument to this routine is
      173       12                a buffer described by the KL_DUMPMSG macro in KL_MACRO_C.
      174       13                DATASIZE in KL_DUMPMSG must be set by the caller.  If the
      175       14                network manager is not connected the alternate return will
      176       15                be taken.                                                  */
      177       16
      178       17        GIJ$WRT_FROG: PROC(BUF) ALTRET;
      179       18
      180       19        %INCLUDE KL_MACRO_C;
      181     3371        %INCLUDE KL_AFCN_C;
      182     3472
      183     3473        %KL_DUMPMSG (FPTN=BUF,STCLASS=PARAM);
      184     3514
      185     3515    1   DCL GJA$NETWORK_MANAGER ENTRY(2) ALTRET;
      186     3516
      187     3517        %EJECT;
PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:39   
      188     3518
      189     3519    1           BUF.NAHDR.CODE=IGA_DUMPMSG;
      190     3520    1           BUF.NAHDR.ERRFLAG=0;
      191     3521    1           CALL GJA$NETWORK_MANAGER(BUF,SIZEC(BUF));
      192     3522    1           IF BUF.NAHDR.ERRFLAG=0 THEN
      193     3523    1              RETURN;
      194     3524    1           ELSE
      195     3525    1              ALTRETURN;
      196     3526
      197     3527    1   END GIJ$WRT_FROG;

PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:40   
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure GIJ$WRT_FROG.

   Procedure GIJ$WRT_FROG requires 45 words for executable code.
   Procedure GIJ$WRT_FROG requires 11 words of local(AUTO) storage.

    No errors detected in file GIJ$DUMPSTER.:E05TSI    .

PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:41   

 Object Unit name= GIJ$WRT_FROG                               File name= GIJ$DUMPSTER.:E05TOU
 UTS= JUL 29 '97 21:46:57.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    45     2D  GIJ$WRT_FROG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  GIJ$WRT_FROG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GJA$NETWORK_MANAGER
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:42   


      162        1        /*T***********************************************************/
      163        2        /*T*                                                         */
      164        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      165        4        /*T*                                                         */
      166        5        /*T***********************************************************/
      167        6        /*F*    NAME: GIJ$WRT_FROG
      168        7                Purpose:  Send message from NA to FROG for dumping FEPs.
      169        8                Call:    CALL GIJ$WRT_FROG(BUF) ALTRET;
      170        9                Description:  This routine sends a message to KFD$DUMPMSG in
      171       10                FROG.  Major sights along the way are GJA$NETWORK_MANAGER,
      172       11                KLI$AMSG and KFC$CSCGMSG.  The argument to this routine is
      173       12                a buffer described by the KL_DUMPMSG macro in KL_MACRO_C.
      174       13                DATASIZE in KL_DUMPMSG must be set by the caller.  If the
      175       14                network manager is not connected the alternate return will
      176       15                be taken.                                                  */
      177       16
      178       17        GIJ$WRT_FROG: PROC(BUF) ALTRET;

     17   0 000000  D380 0000 0000  xent GIJ$WRT_FROG    LNJ,B5   X6A_AUTO_1
          0 000003       000B 0001                       DC       11,1

      179       18
      180       19        %INCLUDE KL_MACRO_C;
      181     3371        %INCLUDE KL_AFCN_C;
      182     3472
      183     3473        %KL_DUMPMSG (FPTN=BUF,STCLASS=PARAM);
      184     3514
      185     3515    1   DCL GJA$NETWORK_MANAGER ENTRY(2) ALTRET;
      186     3516
      187     3517        %EJECT;
PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:43   
      188     3518
      189     3519    1           BUF.NAHDR.CODE=IGA_DUMPMSG;

   3519   0 000005  6C2A                                 LDV,R6   42
          0 000006  ECC7 0004                            LDB,B6   @BUF,AUTO
          0 000008  E786                                 STH,R6   ,B6

      190     3520    1           BUF.NAHDR.ERRFLAG=0;

   3520   0 000009  8806                                 LBF,'00FF'X       ,B6
   3520   0 00000A       00FF

      191     3521    1           CALL GJA$NETWORK_MANAGER(BUF,SIZEC(BUF));

   3521   0 00000B  D846 0004                            LDR,R5   4,B6
          0 00000D  5003                                 SOL,R5   3
          0 00000E  5E6F                                 ADV,R5   111
          0 00000F  5044                                 SOR,R5   4
          0 000010  5001                                 SOL,R5   1
          0 000011  DF47 0006                            STR,R5   @BUF+2,AUTO
          0 000013  DBC7 0006                            LAB,B5   @BUF+2,AUTO
          0 000015  DFC7 0009                            STB,B5   @BUF+5,AUTO
          0 000017  EFC7 0007                            STB,B6   @BUF+3,AUTO
          0 000019  BBC7 0007                            LAB,B3   @BUF+3,AUTO
          0 00001B  CBF0 0200                            LAB,B4   512,IMO
          0 00001D  E380 0000 0000  xent                 LNJ,B6   GJA$NETWORK_MANAGER
          0 000020       0001                            DC       s:3522,PREL

      192     3522    1           IF BUF.NAHDR.ERRFLAG=0 THEN

   3522   0 000021  ECC7 0004                            LDB,B6   @BUF,AUTO
          0 000023  8286                                 LB,'00FF'X        ,B6
          0 000024       00FF
          0 000025  0501 0004                            BBT      s:3525,PREL

      193     3523    1              RETURN;

PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:44   
   3523   0 000027  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      194     3524    1           ELSE
      195     3525    1              ALTRETURN;

   3525   0 00002A  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
      196     3526
      197     3527    1   END GIJ$WRT_FROG;

PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:45   
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure GIJ$WRT_FROG.
PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:46   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BUF                      *0-0-0/w ASTR(96)    r     1 BUF


   Procedure GIJ$WRT_FROG requires 45 words for executable code.
   Procedure GIJ$WRT_FROG requires 11 words of local(AUTO) storage.

    No errors detected in file GIJ$DUMPSTER.:E05TSI    .
PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:47   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=GIJ$WRT_FROG File=GIJ$DUMPSTER.:E05TSI                        TUE 07/29/97 21:46 Page:48   
          MINI XREF LISTING

BUF
      3493**DCL        17--PROC     3521<>CALL     3521--CALL
BUF.DATASIZE
      3510**DCL      3512--IMP-SIZ  3521>>CALL     3521>>CALL
BUF.NAHDR.CODE
      3501**DCL      3519<<ASSIGN
BUF.NAHDR.ERRFLAG
      3502**DCL      3520<<ASSIGN   3522>>IF
GJA$NETWORK_MANAGER
      3515**DCL-ENT  3521--CALL
