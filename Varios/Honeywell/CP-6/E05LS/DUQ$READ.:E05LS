VERSION E05

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:1    
        1        1        /*M* DUQ$READ Command oriented input / output routines for User Delta. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*F* NAME: DUQ$READ
       10       10             PURPOSE: To process read / write requests for command oriented IO.
       11       11             DESCRIPTION: These routines read from the input device, and write
       12       12                          to the output, echo, and report devices. */
       13       13        /*D* NAME: DDQ$READ
       14       14             ENTRY: DDQ$READ
       15       15             CALL: CALL DDQ$READ( BUF$, SIZE );
       16       16             INTERFACE: M$READ
       17       17                        M$WRITE
       18       18                        DDE$ERROR
       19       19                        DUA$READ
       20       20                        DUE$ERRMSG
       21       21                        SETUPE
       22       22             ENVIRONMENT: User Delta.
       23       23             INPUT: BUF$ - Pointer to input buffer.
       24       24                    SIZE - Size of input buffer.
       25       25             OUTPUT: S_D.NCHARS - Size of input just read.
       26       26                     S_D.ACT - Contains activation character that terminated read.
       27       27                     S_D.SACT - Set if activation character was a DELTA special
       28       28                                activation character.
       29       29             DESCRIPTION: These routines read from the input device, and write
       30       30                          to the output, echo, and report devices. */
       31       31                                                /**/
       32       32        DDQ$READ: PROC( BUF$, SIZE );
       33       33                                                /**/
       34       34        %INCLUDE CP_6;
       35      115        %INCLUDE CP_6_SUBS;
       36      655        %INCLUDE B$JIT;
       37      945        %INCLUDE B_MICROPS_C;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:2    
       38     1117        %INCLUDE EL$TABLES ;
       39     1440        %INCLUDE EL_SUBS_C ;
       40     1524        /* Parm */
       41     1525    1   DCL BUF$ PTR;
       42     1526    1   DCL SIZE UBIN;
       43     1527        /* Auto */
       44     1528    1   DCL PBUF$ PTR;
       45     1529    1   DCL PSIZE UBIN;
       46     1530    1   DCL M$DO$ PTR;
       47     1531    1   DCL M$DELT$ PTR;
       48     1532    1   DCL VFCBUF CHAR(1);
       49     1533    1   DCL IX UBIN;
       50     1534    1   DCL ERRCODE UBIN;
       51     1535    1   DCL CASECODE UBIN;
       52     1536    1   DCL D UBIN;
       53     1537    1   DCL LEFT UBIN;
       54     1538    1   DCL ORIG_VFC CHAR(1) ALIGNED;
       55     1539    1   DCL 1 ECHOBUF,
       56     1540    1         2 VFC CHAR(1) UNAL,
       57     1541    1         2 TEXT CHAR(296) UNAL;            /* Pos(10)+Prompt(30)+S_D.INPUT(256) */
       58     1542    1   DCL 1 KEYBUF,
       59     1543    1         2 SIZE UBIN BYTE UNAL,
       60     1544    1         2 REC UBIN(27) UNAL,
       61     1545    1         2 DIGITS CHAR(8) UNAL,
       62     1546    1         2 TOSTR CHAR(10) UNAL,
       63     1547    1         2 * CHAR(234) UNAL;               /* Padded out for KEYR max */
       64     1548    1   DCL ECHO$ PTR;
       65     1549    1   DCL POSI$ PTR;
       66     1550    1   DCL PROM$ PTR;
       67     1551    1   DCL ECHO_SIZE UBIN;
       68     1552    1   DCL POSI_SIZE UBIN;
       69     1553    1   DCL PROM_SIZE UBIN;
       70     1554        %EL$DODCB (STCLASS=AUTO)  ;
       71     1557        %FPT_DEVICE (FPTN=FPTDEVICE,
       72     1558                     STCLASS=);
       73     1576        %FPT_READ (FPTN=FPTREAD,
       74     1577                   STCLASS=);
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:3    
       75     1616        %FPT_WRITE (FPTN=FPTWRITE,
       76     1617                    STCLASS=);
       77     1648        %FPT_WRSYSLOG (FPTN=FPT_WRSYSLOG,
       78     1649                       STCLASS=CONSTANT,
       79     1650                       TYPE=EL_DODCB);
       80     1665        %FPT_WRSYSLOG (FPTN=FPTWRSYSLOG, STCLASS=AUTO);
       81     1680        /* Based */
       82     1681    1   DCL BUFF$ER CHAR( SIZE ) BASED( BUF$ );
       83     1682    1   DCL PBUFF$ER CHAR( PSIZE ) BASED( PBUF$ );
       84     1683    1   DCL PROM$PT CHAR( PROM_SIZE ) BASED( PROM$ );
       85     1684    1   DCL POSI$TION CHAR( POSI_SIZE ) BASED( POSI$ );
       86     1685    1   DCL 1 ECHO$BUF BASED( ECHO$ ),
       87     1686    1         2 VFC CHAR(1) UNAL,
       88     1687    1         2 TEXT CHAR( ECHO_SIZE ) UNAL;
       89     1688    1   DCL CHAR1 CHAR(1) BASED UNAL;
       90     1689        %B$TCB;
       91     1692        %B$ALT;
       92     1700        %F$DCB;
       93     1757        /* Symref */
       94     1758    1   DCL D_M$DO# UBIN SYMREF;
       95     1759    1   DCL D_M$DELT# UBIN SYMREF;
       96     1760    1   DCL B$TCB$ PTR SYMREF;
       97     1761    1   DCL B$JIT$ PTR SYMREF READONLY;
       98     1762        /* Constant */
       99     1763        %FPT_DEVICE (FPTN=FPT_DEVICE,
      100     1764                     STCLASS=CONSTANT,
      101     1765                     PAGE=YES);
      102     1783        %FPT_READ (FPTN=FPT_READ,
      103     1784                   STCLASS=CONSTANT,
      104     1785                   KEYR=YES);
      105     1824        %FPT_WRITE (FPTN=FPT_WRITE,
      106     1825                    STCLASS=CONSTANT,
      107     1826                    VFC=YES);
      108     1857    1   DCL ACTABL(0:10) CHAR(1) UNAL CONSTANT INIT(
      109     1858    1            /* Type 0 */ BITASC( '015'O ), /* C/R */
      110     1859    1            /* Type 0 */ BITASC( '012'O ), /* L/F */
      111     1860    1                                  /* Type 1 */   '=',
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:4    
      112     1861    1                                  /* Type 1 */   '/',
      113     1862    1                                  /* Type 2 */   %EOM_EOR#,
      114     1863    1            /* Type 2 */ BITASC( '011'O ), /* Tab */
      115     1864    1                                  /* Type 2 */   '^',
      116     1865    1                                  /* Type 2 */   ']',
      117     1866    1                                  /* Type 2 */   '}',
      118     1867    1                                  /* Type 2 */   '[',
      119     1868    1                                  /* Type 2 */   '{' );
      120     1869    1   DCL ACHARS REDEF ACTABL CHAR(11);
      121     1870    1   DCL ACTYPE(0:10) UBIN CONSTANT INIT(0,0,1,1,2,2,2,2,2,2,2);
      122     1871        /*D* ACTABL & ACTYPE are in parallel, ACTYPE specifies how the activation
      123     1872             character is to be echoed on the DO device. */
      124     1873    1   DCL NSACTABL(0:8) CHAR(1) CONSTANT UNAL INIT( %EOM_EOR#,
      125     1874    1                         BITASC( '004'O ), /* EOT */
      126     1875    1                         BITASC( '014'O ), /* FF */
      127     1876    1                         BITASC( '015'O ), /* C/R */
      128     1877    1                         BITASC( '032'O ), /* SUB */
      129     1878    1                         BITASC( '034'O ), /* FS */
      130     1879    1                         BITASC( '035'O ), /* GS */
      131     1880    1                         BITASC( '036'O ), /* RS */
      132     1881    1                       BITASC( '037'O ) ); /* US */
      133     1882    1   DCL NSACHARS REDEF NSACTABL CHAR(9);
      134     1883    1   DCL MICRO_EDIT(0:5) BIT(9) CONSTANT INIT(
      135     1884    1                       %MVZB4,             /* Move 4 digits with zero sup. */
      136     1885    1                       %SES10,             /* Reset flag */
      137     1886    1                       %MVC1,              /* Move 1's place digit */
      138     1887    1                       %INSB7,             /* Output a period */
      139     1888    1                       %MVC3,              /* Move 3 digits */
      140     1889    1                       %INSB1 );           /* Output a blank */
      141     1890    1   DCL MICRO_SEQN(0:4) BIT(9) CONSTANT INIT(
      142     1891    1                       %INSB1,             /* Output a blank */
      143     1892    1                       %MVZB7,             /* Move 7 digits with zero sup. */
      144     1893    1                       %SES10,             /* Reset flag */
      145     1894    1                       %MVC1,              /* Move last digit */
      146     1895    1                       %INSB1 );           /* Output a blank */
      147     1896        /* Delta's static data */
      148     1897        %INCLUDE XUH_MACRO_C;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:5    
      149     1981        %INCLUDE DD_SD_M;
      150     3317        %S_D;
      151     4635        /* Entrys */
      152     4636    1   DCL DDE$ERROR ENTRY(0);
      153     4637    1   DCL DUA$EXITDELTA ENTRY(0);
      154     4638    1   DCL DUA$READ ENTRY(1) ALTRET;
      155     4639    1   DCL DUE$ERRMSG ENTRY(0);
      156     4640    1   DCL DUU$TRUNC ENTRY(0) ALTRET;
      157     4641        /* Misc */
      158     4642        %INCLUDE DD_ERR_C;
      159     5039        %INCLUDE F_ERRORS_C;
      160     5279        %INCLUDE NK_VFC_C;
      161     5353        %SUB @XEQ='     $XEQ '/* @XEQ */;
      162     5354        %SUB @ALIB='    $ALIB '/* @ALIB */;
      163     5355                                                /**/
      164     5356    1        M$DELT$ = DCBADDR( D_M$DELT# );
      165     5357    1        M$DO$ = DCBADDR( D_M$DO# );
      166     5358    1        IF M$DO$ -> F$DCB.WIDTH# = 0
      167     5359    1        THEN S_D.OUT_WIDTH = 132;
      168     5360    1        ELSE S_D.OUT_WIDTH = M$DO$ -> F$DCB.WIDTH#;
      169     5361    1        FPTREAD = FPT_READ;
      170     5362    1        FPTREAD.V_ = VECTOR( FPTREAD.V );
      171     5363    1        FPTREAD.V.DCB# = D_M$DELT#;
      172     5364    1        FPTREAD.BUF_ = VECTOR( BUFF$ER );
      173     5365    1        FPTREAD.KEY_ = VECTOR( KEYBUF );
      174     5366    1   REREAD: ;
      175     5367    1        IF S_D.RESET_IN
      176     5368    2        THEN DO;
      177     5369    2             S_D.RESET_IN = '0'B;
      178     5370    2             S_D.M$DELTA_RES = 'UC';
      179     5371    2             CALL DUA$READ;                /* Does not altret */
      180     5372    2           END;
      181     5373    1        BUFF$ER = ' ';
      182     5374    1        CALL M$READ( FPTREAD ) ALTRET( ARETR0 );
      183     5375    1        S_D.NCHARS = M$DELT$ -> F$DCB.ARS#;
      184     5376    1        S_D.ACT = M$DELT$ -> F$DCB.EOMCHAR#;
      185     5377    1        GOTO NORMAL;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:6    
      186     5378
      187     5379    1   DDQ$READ_ALIB: ENTRY(BUF$, SIZE);
      188     5380
      189     5381    1        M$DELT$ = DCBADDR( D_M$DELT# );
      190     5382    1        M$DO$ = DCBADDR( D_M$DO# );
      191     5383    1        IF M$DO$ -> F$DCB.WIDTH# = 0
      192     5384    1        THEN S_D.OUT_WIDTH = 132;
      193     5385    1        ELSE S_D.OUT_WIDTH = M$DO$ -> F$DCB.WIDTH#;
      194     5386    1   NORMAL: ;
      195     5387    1        S_D.BREAK = '0'B;                  /* Ignore break after read completes */
      196     5388    1        S_D.BREAK_PRINTED = '0'B;
      197     5389    1        S_D.SACT = '0'B;                   /* Assume normal activation character */
      198     5390    1        IF S_D.EOM
      199     5391    2        THEN DO;                           /* Check for spec act char */
      200     5392    2             CALL INDEX( IX, S_D.ACT, NSACHARS ) ALTRET( ISSACT );
      201     5393    3             DO WHILE ( '0'B );
      202     5394    3   ISSACT:        ;
      203     5395    3                  S_D.SACT = '1'B;
      204     5396    3                  CALL INSERT( S_D.INPUT, S_D.NCHARS, LENGTHC( S_D.ACT ), S_D.ACT );
      205     5397    3                  S_D.NCHARS = S_D.NCHARS + 1; /* Cannot overflow buffer, since
      206     5398                                                EOM_EOR# is not special act char */
      207     5399    3                END;
      208     5400    2           END;
      209     5401    1        IF M$DELT$ -> F$DCB.DDEV.IC#
      210     5402    2        THEN DO;
      211     5403    2             IF S_D.RUM
      212     5404    3             THEN DO;
      213     5405    3                  IF NOT S_D.RCBC.WRITE_THRU
      214     5406    3                  THEN CALL DUU$TRUNC;     /* Ignore altret */
      215     5407    3                  S_D.RCBC.WRITE_THRU = '1'B;
      216     5408    3                END;
      217     5409    2             CALL INDEX( IX, S_D.ACT, ACHARS ) ALTRET( UNKACT );
      218     5410    2             IX = ACTYPE( IX );            /* Get activation char type */
      219     5411    3             DO WHILE ( '0'B );
      220     5412    3   UNKACT:        ;
      221     5413    3                  IX = 2;                  /* Unknown is type 2 */
      222     5414    3                END;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:7    
      223     5415    3             DO CASE ( IX );
      224     5416    3               CASE ( 0 );                 /* C/R, L/F */
      225     5417    3                  S_D.USVFC = '1'B;
      226     5418    3               CASE ( 1 );                 /* '=', '/' */
      227     5419    3                  S_D.LWEXTEND = '1'B;
      228     5420    3               CASE ( 2 );                 /* '^', '[', ']', EOT, etc. */
      229     5421    3                  IF NOT S_D.ALIB_SAID_QUIET
      230     5422    4                  THEN DO;
      231     5423    4                       FPTWRITE = FPT_WRITE;
      232     5424    4                       FPTWRITE.V_ = VECTOR( FPTWRITE.V );
      233     5425    4                       VFCBUF = %VFC_S1B;  /* Space 1 line before print */
      234     5426    4                       FPTWRITE.BUF_ = VECTOR( VFCBUF );
      235     5427    4                       FPTWRITE.V.DCB# = %M$UC#;
      236     5428    4                       CALL M$WRITE( FPTWRITE ) ALTRET( ARETW2 );
      237     5429    4                     END;
      238     5430    3               END;
      239     5431    2             IF (( S_D.ECHO ) AND
      240     5432    2               ( NOT M$DO$ -> F$DCB.DDEV.UCOUT# ) AND
      241     5433    2               ( B$JIT.CPFLAGS1 & %CP_ECHO# ) AND
      242     5434    2               ( NOT S_D.ALIB_SAID_QUIET)) OR
      243     5435    2               S_D.ALIB_SAID_ECHO
      244     5436    3             THEN DO;
      245     5437    3                  CALL SETUPE;
      246     5438    3                  IF S_D.PROMPT.VFC = %VFC_TRANSITION0
      247     5439    3                  THEN ECHOBUF.VFC = %VFC_TRANSITION0;
      248     5440    3                  ELSE ECHOBUF.VFC = %VFC_EXT;
      249     5441    3                  IF S_D.ALIB_SAID_ECHO
      250     5442    4                  THEN DO;
      251     5443    4                       CALL CONCAT( ECHOBUF.TEXT, POSI$TION, PROM$PT, PBUFF$ER);
      252     5444    4                       ECHO_SIZE = POSI_SIZE + PROM_SIZE + PSIZE;
      253     5445    4                     END;
      254     5446    4                  ELSE DO;
      255     5447    4                       CALL CONCAT( ECHOBUF.TEXT, PROM$PT, PBUFF$ER );
      256     5448    4                       ECHO_SIZE = PROM_SIZE + PSIZE;
      257     5449    4                     END;
      258     5450    3                  FPTWRITE.BUF_ = VECTOR( ECHO$BUF );
      259     5451    3                  CALL M$WRITE( FPTWRITE ) ALTRET( ARETW3 );
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:8    
      260     5452    3                  IF IX ~= 1
      261     5453    4                  THEN DO;                 /* Not '/' or '=' */
      262     5454    4                       VFCBUF = %VFC_S1B;
      263     5455    4                       S_D.LWEXTEND = '0'B;
      264     5456    4                       FPTWRITE.BUF_ = VECTOR( VFCBUF );
      265     5457    4                       CALL M$WRITE( FPTWRITE ) ALTRET( ARETW4 );
      266     5458    4                     END;
      267     5459    3                  ELSE S_D.LWEXTEND = '1'B;
      268     5460    3                END;
      269     5461    2           END;
      270     5462    2        ELSE DO;
      271     5463    2             S_D.RCBC.WRITE_THRU = '0'B;
      272     5464    2             IF S_D.ECHO AND
      273     5465    2               ( NOT S_D.ALIB_SAID_QUIET )
      274     5466    3             THEN DO;
      275     5467    3                  CALL SETUPE;
      276     5468    3                  ECHOBUF.VFC = %VFC_TRANSITION1;
      277     5469    3                  CALL CONCAT( ECHOBUF.TEXT, POSI$TION, PROM$PT, PBUFF$ER );
      278     5470    3                  ECHO_SIZE = POSI_SIZE + PROM_SIZE + PSIZE;
      279     5471    3                  FPTWRITE.BUF_ = VECTOR( ECHO$BUF );
      280     5472    3                  CALL M$WRITE( FPTWRITE ) ALTRET( ARETWE0 );
      281     5473    3                  IF ( S_D.COPY ) AND
      282     5474    3                    ( NOT S_D.BATCH ) AND
      283     5475    3                    ( NOT M$DO$ -> F$DCB.DDEV.UCOUT# )
      284     5476    4                  THEN DO;
      285     5477    4                       FPTWRITE.V.DCB# = %M$UC#;
      286     5478    4                       CALL M$WRITE( FPTWRITE ) ALTRET( ARETWE1 );
      287     5479    4                     END;
      288     5480    3                END;
      289     5481    2           END;
      290     5482                                                /**/
      291     5483    1        RETURN;
      292     5484                                                /**/
      293     5485    1   ARETR0: ;
      294     5486    1        S_D.BREAK = '0'B;                  /* Ignore break after read completes */
      295     5487    1        S_D.BREAK_PRINTED = '0'B;
      296     5488    1        ERRCODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:9    
      297     5489    1        IF ( ERRCODE = %E$LDSC ) OR ( ERRCODE = %E$DACTR )
      298     5490    1        THEN CALL DUA$EXITDELTA;           /* Does not return */
      299     5491    1        ELSE CALL DUE$ERRMSG;
      300     5492    1        IF ERRCODE = %E$LD
      301     5493    2        THEN DO;
      302     5494    2             S_D.NCHARS = M$DELT$ -> F$DCB.ARS# - 1;
      303     5495    2             S_D.ACT = %EOM_EOR#;
      304     5496    2             GOTO NORMAL;
      305     5497    2           END;
      306     5498    1        IF M$DELT$ -> F$DCB.DDEV.IC#
      307     5499    1        THEN CASECODE = 2;                 /* User terminal */
      308     5500    1        ELSE IF (M$DELT$ -> F$DCB.IASN = %STREAM#) AND
      309     5501    1               (S_D.M$DELTA_RES ~= 'UC')
      310     5502    1             THEN CASECODE = 1;            /* Command stream, not user terminal */
      311     5503    1             ELSE CASECODE = 3;            /* Something else, i.e. file */
      312     5504    1        IF ERRCODE = %E$EOF
      313     5505    2        THEN DO;
      314     5506    3             DO CASE (CASECODE);
      315     5507    3               CASE (1);                   /* Command stream, not user terminal */
      316     5508    3                  S_D.ERROR = 164; /* E@READ_BANG */
      317     5509    3                  CALL DDE$ERROR;
      318     5510    3                  CALL DUA$EXITDELTA;      /* Does not return */
      319     5511    3               CASE (2);                   /* User terminal */
      320     5512    3                  IF S_D.BATCH
      321     5513    4                  THEN DO;
      322     5514    4                       S_D.ERROR = 164; /* E@READ_BANG */
      323     5515    4                       CALL DDE$ERROR;
      324     5516    4                       CALL DUA$EXITDELTA; /* Does not return */
      325     5517    4                     END;
      326     5518    3                  S_D.ACT = BITASC( '015'O ); /* C/R */
      327     5519    3                  S_D.NCHARS = M$DELT$ -> F$DCB.ARS#;
      328     5520    3                  GOTO NORMAL;
      329     5521    3               CASE (3);                   /* Something else, i.e. File */
      330     5522    3                  ;
      331     5523    3               END;
      332     5524    2           END;
      333     5525    2        ELSE DO;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:10   
      334     5526    2             IF S_D.BATCH
      335     5527    2             THEN CALL DUA$EXITDELTA;
      336     5528    2           END;
      337     5529    1        CALL DUA$READ;                     /* Does not altret */
      338     5530    1        GOTO REREAD;
      339     5531                                                /**/
      340     5532        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:11   
      341     5533                                                /**/
      342     5534    1   SETUPE: PROC;
      343     5535                                                /**/
      344     5536    2        FPTWRITE = FPT_WRITE;
      345     5537    2        FPTWRITE.V_ = VECTOR( FPTWRITE.V );
      346     5538    2        FPTWRITE.V.DCB# = D_M$DO#;
      347     5539    2        ECHO$ = ADDR( ECHOBUF );
      348     5540    2        PROM$ = ADDR( S_D.PROMPT.TEXT );
      349     5541    2        PROM_SIZE = S_D.PROMPT_SIZE - LENGTHC( S_D.PROMPT.VFC );
      350     5542    2        PBUF$ = BUF$;
      351     5543    2        PSIZE = S_D.NCHARS;
      352     5544    2        POSI$ = ADDR( KEYBUF.TOSTR );
      353     5545    2        IF S_D.ALIB_SAID_ECHO
      354     5546    3        THEN DO;
      355     5547    3             KEYBUF.TOSTR = '    $ALIB '/* @ALIB */;
      356     5548    3             POSI_SIZE = LENGTHC( '    $ALIB '/* @ALIB */ );
      357     5549    3           END;
      358     5550    2        ELSE IF M$DELT$ -> F$DCB.DDEV.IC#
      359     5551    2             THEN POSI_SIZE = 0;
      360     5552    2             ELSE IF M$DELT$ -> F$DCB.DDEV.XEQ#
      361     5553    3                  THEN DO;
      362     5554    3                       KEYBUF.TOSTR = '     $XEQ '/* @XEQ */;
      363     5555    3                       POSI_SIZE = LENGTHC( '     $XEQ '/* @XEQ */ );
      364     5556    3                     END;
      365     5557    3                  ELSE DO;
      366     5558    3                       POSI_SIZE = LENGTHC( KEYBUF.TOSTR );
              5558                                /* Both 'keys' are same size */
      367     5559    3                       IF ( M$DELT$ -> F$DCB.ASN# = %FILE# ) AND
      368     5560    3                         ( M$DELT$ -> F$DCB.ORG# = %KEYED# ) AND
      369     5561    3                         ( KEYBUF.SIZE = 3 ) AND
      370     5562    3                         ( KEYBUF.REC < 100000000 )
      371     5563    4                       THEN DO;            /* Edit key */
      372     5564    4                            CALL BINCHAR( KEYBUF.DIGITS, KEYBUF.REC );
      373     5565    4                            CALL EDITCHAR( KEYBUF.TOSTR, , , MICRO_EDIT, KEYBUF.DIGITS
              5565                                     );
      374     5566    4                          END;
      375     5567    4                       ELSE DO;            /* Not an EDIT key */
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:12   
      376     5568    4                            CALL BINCHAR( KEYBUF.DIGITS, S_D.READPOS );
      377     5569    4                            CALL EDITCHAR( KEYBUF.TOSTR, , , MICRO_SEQN, KEYBUF.DIGITS
              5569                                     );
      378     5570    4                          END;
      379     5571    3                     END;
      380     5572                                                /**/
      381     5573    2        RETURN;
      382     5574                                                /**/
      383     5575    2   END SETUPE;
      384     5576                                                /**/
      385     5577        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:13   
      386     5578        /*F* NAME: DDQ$WRITE
      387     5579             PURPOSE: To write to the report devices.
      388     5580             DESCRIPTION: The contents of the specified output buffer are written
      389     5581                          to the report devices. A VFC code of "space 1 line after
      390     5582                          print" is implied. The byte preceeding the specified
      391     5583                          output buffer is reserved for VFC character. Writes are to
      392     5584                          M$DO & M$UC DCBs as specified by report control flags. */
      393     5585        /*D* NAME: DDQ$WRITE
      394     5586             ENTRY: DDQ$WRITE
      395     5587                    DDQ$WRITED
      396     5588                    DDQ$WRITENU
      397     5589             CALL: CALL DDQ$WRITE( BUF$, SIZE );
      398     5590             INTERFACE: M$WRITE
      399     5591                        DUE$ERRMSG
      400     5592                        SETUPW
      401     5593             ENVIRONMENT: User Delta.
      402     5594             INPUT: BUF$ - Pointer to output buffer.
      403     5595                    SIZE - Size of output buffer.
      404     5596             DESCRIPTION: The contents of the specified output buffer are written
      405     5597                          to the report devices. A VFC code of "space 1 line after
      406     5598                          print" is implied. The byte preceeding the specified
      407     5599                          output buffer is reserved for VFC character. Writes are to
      408     5600                          M$DO & M$UC DCBs as specified by report control flags. */
      409     5601                                                /**/
      410     5602    1   DDQ$WRITE: ENTRY( BUF$, SIZE );
      411     5603                                                /**/
      412     5604    1   DDQ$WRITENC: ENTRY( BUF$, SIZE );       /* Compatibility */
      413     5605                                                /**/
      414     5606    1        D = D_M$DO#;
      415     5607    1        GOTO WRITE;
      416     5608                                                /**/
      417     5609    1   DDQ$WRITED: ENTRY( BUF$, SIZE );
      418     5610                                                /**/
      419     5611    1        D = S_D.DUMPDCB;
      420     5612        /****GOTO WRITE;****/
      421     5613                                                /**/
      422     5614    1   WRITE: ;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:14   
      423     5615    1        CALL SETUPW;
      424     5616    1        IF S_D.USVFC OR S_D.LWEXTEND
      425     5617    2        THEN DO;
      426     5618    2             PBUF$ -> CHAR1 = %VFC_TRANSITION1;
      427     5619    2             S_D.USVFC = '0'B;
      428     5620    2             S_D.LWEXTEND = '0'B;
      429     5621    2           END;
      430     5622    1        ELSE PBUF$ -> CHAR1 = %VFC_S1A;
      431     5623    1   WRITEIT1: ;
      432     5624    1        LEFT = SIZE;
      433     5625    1        ORIG_VFC = FPTWRITE.BUF_.BUF$ -> CHAR1;
      434     5626    2        DO WHILE ( LEFT > S_D.OUT_WIDTH );
      435     5627    2             FPTWRITE.BUF_.BUF$ -> CHAR1 = %VFC_TRANSITION1;
      436     5628    2             CALL WRITE_CHUNK ALTRET( ARETW1 );
      437     5629    2             FPTWRITE.BUF_.BUF$ = PINCRC( FPTWRITE.BUF_.BUF$, S_D.OUT_WIDTH );
      438     5630    2             VFCBUF = FPTWRITE.BUF_.BUF$ -> CHAR1;
      439     5631    2             LEFT = LEFT - S_D.OUT_WIDTH;
      440     5632    2           END;
      441     5633    1        FPTWRITE.BUF_.BUF$ -> CHAR1 = ORIG_VFC;
      442     5634    1        FPTWRITE.BUF_.BOUND = LEFT;
      443     5635    1        CALL WRITE_CHUNK ALTRET( ARETW1 );
      444     5636                                                /**/
      445     5637    1        RETURN;
      446     5638                                                /**/
      447     5639    1   ARETW1: ;
      448     5640    1   ARETW2: ;
      449     5641    1   ARETW3: ;
      450     5642    1   ARETW4: ;
      451     5643    1   ARETWE0: ;
      452     5644    1   ARETWE1: ;
      453     5645    1   ARETDEV0: ;
      454     5646    1   ARETDEV1: ;
      455     5647                                                /**/
      456     5648    1        IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$LDSC
      457     5649    1        THEN CALL DUA$EXITDELTA;
      458     5650    1        IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$CGLWRV
      459     5651    2        THEN DO ;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:15   
      460     5652    2             EL$DODCB.PROCESSOR = 'DELTA' ;
      461     5653    2             EL$DODCB.TXT = 'M$DO not available.' ;
      462     5654    2             FPTWRSYSLOG = FPT_WRSYSLOG ;
      463     5655    2             FPTWRSYSLOG.V_ = VECTOR(FPTWRSYSLOG.V) ;
      464     5656    2             FPTWRSYSLOG.ENTRY_ = VECTOR(EL$DODCB) ;
      465     5657    2             FPTWRSYSLOG.V.SIZE# = SIZEW(EL$DODCB) ;
      466     5658    2             CALL M$WRSYSLOG (FPTWRSYSLOG) ALTRET(NXTLN) ;
      467     5659    2             CALL DUA$EXITDELTA ;
      468     5660    2           END;
      469     5661    1   NXTLN: ;
      470     5662    1        CALL DUE$ERRMSG;
      471     5663    1        CALL M$XXX;
      472     5664                                                /**/
      473     5665        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:16   
      474     5666                                                /**/
      475     5667    1   WRITE_CHUNK: PROC ALTRET;
      476     5668                                                /**/
      477     5669    2        IF NOT S_D.ALIB_SAID_QUIET
      478     5670    3        THEN DO;
      479     5671    4             IF NOT FPTWRITE.V.DVBYTE.VFC# THEN DO;
      480     5672    4                  FPTWRITE.BUF_.BUF$ = PINCRC(FPTWRITE.BUF_.BUF$,1);
      481     5673    4                  FPTWRITE.BUF_.BOUND = FPTWRITE.BUF_.BOUND - 1;
      482     5674    4                END;
      483     5675    3             CALL M$WRITE( FPTWRITE ) ALTRET( ARET );
      484     5676    3             IF S_D.COPY AND
      485     5677    3               NOT S_D.BATCH AND
      486     5678    3               NOT M$DO$ -> F$DCB.DDEV.UCOUT# AND
      487     5679    3               D = D_M$DO#
      488     5680    4             THEN DO;
      489     5681    4                  FPTWRITE.V.DCB# = %M$UC#;
      490     5682    4                  CALL M$WRITE( FPTWRITE ) ALTRET( ARET );
      491     5683    4                  FPTWRITE.V.DCB# = D_M$DO#;
      492     5684    4                END;
      493     5685    4             IF NOT FPTWRITE.V.DVBYTE.VFC# THEN DO;
      494     5686    4                  FPTWRITE.BUF_.BUF$ = PINCRC(FPTWRITE.BUF_.BUF$,-1);
      495     5687    4                  FPTWRITE.BUF_.BOUND = FPTWRITE.BUF_.BOUND + 1;
      496     5688    4                END;
      497     5689    3           END;
      498     5690                                                /**/
      499     5691    2        RETURN;
      500     5692                                                /**/
      501     5693    2   ARET: ALTRETURN;
      502     5694                                                /**/
      503     5695    2   END WRITE_CHUNK;
      504     5696                                                /**/
      505     5697        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:17   
      506     5698        /*F* NAME: DDQ$WRITENU
      507     5699             PURPOSE: To write to the report devices with no upspace after print.
      508     5700             DESCRIPTION: The contents of the specified output buffer are written
      509     5701                          to the report devices. A VFC code of "space 0 lines after
      510     5702                          print" is implied. The byte preceeding the specified
      511     5703                          output buffer is reserved for VFC character. */
      512     5704        /*D* NAME: DDQ$WRITENU
      513     5705             ENTRY: DDQ$WRITENU
      514     5706             CALL: CALL DDQ$WRITENU( BUF$, SIZE );
      515     5707             INTERFACE: M$WRITE
      516     5708                        DUE$ERRMSG
      517     5709                        SETUPW
      518     5710             ENVIRONMENT: User Delta.
      519     5711             INPUT: BUF$ - Pointer to output buffer.
      520     5712                    SIZE - Size of output buffer.
      521     5713             DESCRIPTION: The contents of the specified output buffer are written
      522     5714                          to the report devices. A VFC code of "space 0 lines after
      523     5715                          print" is implied. The byte preceeding the specified
      524     5716                          output buffer is reserved for VFC character. */
      525     5717                                                /**/
      526     5718    1   DDQ$WRITENU: ENTRY( BUF$, SIZE );
      527     5719                                                /**/
      528     5720    1        D = D_M$DO#;
      529     5721    1        CALL SETUPW;
      530     5722    1        IF S_D.USVFC
      531     5723    2        THEN DO;
      532     5724    2             PBUF$ -> CHAR1 = %VFC_TRANSITION0;
      533     5725    2             S_D.USVFC = '0'B;
      534     5726    2           END;
      535     5727    1        ELSE PBUF$ -> CHAR1 = %VFC_EXT;
      536     5728    1        S_D.LWEXTEND = '1'B;
      537     5729    1        GOTO WRITEIT1;
      538     5730                                                /**/
      539     5731        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:18   
      540     5732                                                /**/
      541     5733    1   SETUPW: PROC;
      542     5734                                                /**/
      543     5735    2        M$DO$ = DCBADDR( D );
      544     5736    2        FPTWRITE = FPT_WRITE;
      545     5737    2        FPTWRITE.V_ = VECTOR( FPTWRITE.V );
      546     5738    2        FPTWRITE.V.DCB# = D;
      547     5739    2        IF M$DO$->F$DCB.ORG#=%CONSEC# THEN FPTWRITE.V.DVBYTE.VFC# = '0'B;
      548     5740    2        PBUF$ = PINCRC( BUF$, -1 );
      549     5741    2        PSIZE = S_D.OUT_WIDTH + 1;
      550     5742    2        FPTWRITE.BUF_ = VECTOR( PBUFF$ER );
      551     5743                                                /**/
      552     5744    2        RETURN;
      553     5745                                                /**/
      554     5746    2   END SETUPW;
      555     5747                                                /**/
      556     5748        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:19   
      557     5749        /*F* NAME: DDQ$WRTOF
      558     5750             PURPOSE: To perform a page eject to the report devices.
      559     5751             DESCRIPTION: Does an M$DEVICE to get to top of page. */
      560     5752        /*D* NAME: DDQ$WRTOF
      561     5753             ENTRY: DDQ$WRTOF
      562     5754                    DDQ$WRTOFD
      563     5755             CALL: CALL DDQ$WRTOF;
      564     5756             INTERFACE: M$DEVICE
      565     5757                        DUE$ERRMSG
      566     5758             ENVIRONMENT: User Delta.
      567     5759             INPUT: None.
      568     5760             DESCRIPTION: Does an M$DEVICE to get to top of page. */
      569     5761                                                /**/
      570     5762    1   DDQ$WRTOF: ENTRY;
      571     5763                                                /**/
      572     5764    1        D = D_M$DO#;
      573     5765    1        GOTO WRTOF;
      574     5766                                                /**/
      575     5767    1   DDQ$WRTOFD: ENTRY;
      576     5768                                                /**/
      577     5769    1        D = S_D.DUMPDCB;
      578     5770        /****GOTO WRTOF;****/
      579     5771                                                /**/
      580     5772    1   WRTOF: ;
      581     5773    1        M$DO$ = DCBADDR( D );
      582     5774    1        FPTDEVICE = FPT_DEVICE;
      583     5775    1        FPTDEVICE.V_ = VECTOR( FPTDEVICE.V );
      584     5776    1        FPTDEVICE.V.DCB# = D;
      585     5777    1        CALL M$DEVICE( FPTDEVICE ) ALTRET( ARETDEV0 );
      586     5778    1        IF ( S_D.COPY ) AND
      587     5779    1          ( NOT S_D.BATCH ) AND
      588     5780    1          ( NOT M$DO$ -> F$DCB.DDEV.UCOUT# ) AND
      589     5781    1          ( D = D_M$DO# )
      590     5782    2        THEN DO;
      591     5783    2             FPTDEVICE.V.DCB# = %M$UC#;
      592     5784    2             CALL M$DEVICE( FPTDEVICE ) ALTRET( ARETDEV1 );
      593     5785    2           END;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:20   
      594     5786                                                /**/
      595     5787    1        RETURN;
      596     5788                                                /**/
      597     5789    1   END DDQ$READ;
      598     5790        %EOD;

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:21   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDQ$READ.

   Procedure DDQ$READ requires 832 words for executable code.
   Procedure DDQ$READ requires 218 words of local(AUTO) storage.

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:22   

 Object Unit name= DDQ$READ                                   File name= DUQ$READ.:E05TOU
 UTS= JUL 29 '97 14:56:56.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     79    117  DDQ$READ
    2   Proc  even  none   832   1500  DDQ$READ
    3  RoData even  none    13     15  DDQ$READ

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  DDQ$READ
     2    115                  yes      Std        2  DDQ$READ_ALIB
     2   1043                  yes      Std        2  DDQ$WRITE
     2   1046                  yes      Std        2  DDQ$WRITENC
     2   1053                  yes      Std        2  DDQ$WRITED
     2   1331                  yes      Std        2  DDQ$WRITENU
     2   1421                  yes      Std        0  DDQ$WRTOF
     2   1426                  yes      Std        0  DDQ$WRTOFD
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:23   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 DUA$READ
         yes           Std       0 DUA$EXITDELTA
         yes           Std       0 DUE$ERRMSG
 yes     yes           Std       0 DUU$TRUNC
         yes           Std       0 DDE$ERROR
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  D_M$DO#                               D_M$DELT#
     B$TCB$                           r    B$JIT$                           r    S_D$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:24   


        1        1        /*M* DUQ$READ Command oriented input / output routines for User Delta. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*F* NAME: DUQ$READ
       10       10             PURPOSE: To process read / write requests for command oriented IO.
       11       11             DESCRIPTION: These routines read from the input device, and write
       12       12                          to the output, echo, and report devices. */
       13       13        /*D* NAME: DDQ$READ
       14       14             ENTRY: DDQ$READ
       15       15             CALL: CALL DDQ$READ( BUF$, SIZE );
       16       16             INTERFACE: M$READ
       17       17                        M$WRITE
       18       18                        DDE$ERROR
       19       19                        DUA$READ
       20       20                        DUE$ERRMSG
       21       21                        SETUPE
       22       22             ENVIRONMENT: User Delta.
       23       23             INPUT: BUF$ - Pointer to input buffer.
       24       24                    SIZE - Size of input buffer.
       25       25             OUTPUT: S_D.NCHARS - Size of input just read.
       26       26                     S_D.ACT - Contains activation character that terminated read.
       27       27                     S_D.SACT - Set if activation character was a DELTA special
       28       28                                activation character.
       29       29             DESCRIPTION: These routines read from the input device, and write
       30       30                          to the output, echo, and report devices. */
       31       31                                                /**/
       32       32        DDQ$READ: PROC( BUF$, SIZE );

     32  2 000000   000000 700200 xent  DDQ$READ     TSX0  ! X66_AUTO_2
         2 000001   000332 000002                    ZERO    218,2

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:25   
       33       33                                                /**/
       34       34        %INCLUDE CP_6;
       35      115        %INCLUDE CP_6_SUBS;
       36      655        %INCLUDE B$JIT;
       37      945        %INCLUDE B_MICROPS_C;
       38     1117        %INCLUDE EL$TABLES ;
       39     1440        %INCLUDE EL_SUBS_C ;
       40     1524        /* Parm */
       41     1525    1   DCL BUF$ PTR;
       42     1526    1   DCL SIZE UBIN;
       43     1527        /* Auto */
       44     1528    1   DCL PBUF$ PTR;
       45     1529    1   DCL PSIZE UBIN;
       46     1530    1   DCL M$DO$ PTR;
       47     1531    1   DCL M$DELT$ PTR;
       48     1532    1   DCL VFCBUF CHAR(1);
       49     1533    1   DCL IX UBIN;
       50     1534    1   DCL ERRCODE UBIN;
       51     1535    1   DCL CASECODE UBIN;
       52     1536    1   DCL D UBIN;
       53     1537    1   DCL LEFT UBIN;
       54     1538    1   DCL ORIG_VFC CHAR(1) ALIGNED;
       55     1539    1   DCL 1 ECHOBUF,
       56     1540    1         2 VFC CHAR(1) UNAL,
       57     1541    1         2 TEXT CHAR(296) UNAL;            /* Pos(10)+Prompt(30)+S_D.INPUT(256) */
       58     1542    1   DCL 1 KEYBUF,
       59     1543    1         2 SIZE UBIN BYTE UNAL,
       60     1544    1         2 REC UBIN(27) UNAL,
       61     1545    1         2 DIGITS CHAR(8) UNAL,
       62     1546    1         2 TOSTR CHAR(10) UNAL,
       63     1547    1         2 * CHAR(234) UNAL;               /* Padded out for KEYR max */
       64     1548    1   DCL ECHO$ PTR;
       65     1549    1   DCL POSI$ PTR;
       66     1550    1   DCL PROM$ PTR;
       67     1551    1   DCL ECHO_SIZE UBIN;
       68     1552    1   DCL POSI_SIZE UBIN;
       69     1553    1   DCL PROM_SIZE UBIN;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:26   
       70     1554        %EL$DODCB (STCLASS=AUTO)  ;
       71     1557        %FPT_DEVICE (FPTN=FPTDEVICE,
       72     1558                     STCLASS=);
       73     1576        %FPT_READ (FPTN=FPTREAD,
       74     1577                   STCLASS=);
       75     1616        %FPT_WRITE (FPTN=FPTWRITE,
       76     1617                    STCLASS=);
       77     1648        %FPT_WRSYSLOG (FPTN=FPT_WRSYSLOG,
       78     1649                       STCLASS=CONSTANT,
       79     1650                       TYPE=EL_DODCB);
       80     1665        %FPT_WRSYSLOG (FPTN=FPTWRSYSLOG, STCLASS=AUTO);
       81     1680        /* Based */
       82     1681    1   DCL BUFF$ER CHAR( SIZE ) BASED( BUF$ );
       83     1682    1   DCL PBUFF$ER CHAR( PSIZE ) BASED( PBUF$ );
       84     1683    1   DCL PROM$PT CHAR( PROM_SIZE ) BASED( PROM$ );
       85     1684    1   DCL POSI$TION CHAR( POSI_SIZE ) BASED( POSI$ );
       86     1685    1   DCL 1 ECHO$BUF BASED( ECHO$ ),
       87     1686    1         2 VFC CHAR(1) UNAL,
       88     1687    1         2 TEXT CHAR( ECHO_SIZE ) UNAL;
       89     1688    1   DCL CHAR1 CHAR(1) BASED UNAL;
       90     1689        %B$TCB;
       91     1692        %B$ALT;
       92     1700        %F$DCB;
       93     1757        /* Symref */
       94     1758    1   DCL D_M$DO# UBIN SYMREF;
       95     1759    1   DCL D_M$DELT# UBIN SYMREF;
       96     1760    1   DCL B$TCB$ PTR SYMREF;
       97     1761    1   DCL B$JIT$ PTR SYMREF READONLY;
       98     1762        /* Constant */
       99     1763        %FPT_DEVICE (FPTN=FPT_DEVICE,
      100     1764                     STCLASS=CONSTANT,
      101     1765                     PAGE=YES);
      102     1783        %FPT_READ (FPTN=FPT_READ,
      103     1784                   STCLASS=CONSTANT,
      104     1785                   KEYR=YES);
      105     1824        %FPT_WRITE (FPTN=FPT_WRITE,
      106     1825                    STCLASS=CONSTANT,
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:27   
      107     1826                    VFC=YES);
      108     1857    1   DCL ACTABL(0:10) CHAR(1) UNAL CONSTANT INIT(
      109     1858    1            /* Type 0 */ BITASC( '015'O ), /* C/R */
      110     1859    1            /* Type 0 */ BITASC( '012'O ), /* L/F */
      111     1860    1                                  /* Type 1 */   '=',
      112     1861    1                                  /* Type 1 */   '/',
      113     1862    1                                  /* Type 2 */   %EOM_EOR#,
      114     1863    1            /* Type 2 */ BITASC( '011'O ), /* Tab */
      115     1864    1                                  /* Type 2 */   '^',
      116     1865    1                                  /* Type 2 */   ']',
      117     1866    1                                  /* Type 2 */   '}',
      118     1867    1                                  /* Type 2 */   '[',
      119     1868    1                                  /* Type 2 */   '{' );
      120     1869    1   DCL ACHARS REDEF ACTABL CHAR(11);
      121     1870    1   DCL ACTYPE(0:10) UBIN CONSTANT INIT(0,0,1,1,2,2,2,2,2,2,2);
      122     1871        /*D* ACTABL & ACTYPE are in parallel, ACTYPE specifies how the activation
      123     1872             character is to be echoed on the DO device. */
      124     1873    1   DCL NSACTABL(0:8) CHAR(1) CONSTANT UNAL INIT( %EOM_EOR#,
      125     1874    1                         BITASC( '004'O ), /* EOT */
      126     1875    1                         BITASC( '014'O ), /* FF */
      127     1876    1                         BITASC( '015'O ), /* C/R */
      128     1877    1                         BITASC( '032'O ), /* SUB */
      129     1878    1                         BITASC( '034'O ), /* FS */
      130     1879    1                         BITASC( '035'O ), /* GS */
      131     1880    1                         BITASC( '036'O ), /* RS */
      132     1881    1                       BITASC( '037'O ) ); /* US */
      133     1882    1   DCL NSACHARS REDEF NSACTABL CHAR(9);
      134     1883    1   DCL MICRO_EDIT(0:5) BIT(9) CONSTANT INIT(
      135     1884    1                       %MVZB4,             /* Move 4 digits with zero sup. */
      136     1885    1                       %SES10,             /* Reset flag */
      137     1886    1                       %MVC1,              /* Move 1's place digit */
      138     1887    1                       %INSB7,             /* Output a period */
      139     1888    1                       %MVC3,              /* Move 3 digits */
      140     1889    1                       %INSB1 );           /* Output a blank */
      141     1890    1   DCL MICRO_SEQN(0:4) BIT(9) CONSTANT INIT(
      142     1891    1                       %INSB1,             /* Output a blank */
      143     1892    1                       %MVZB7,             /* Move 7 digits with zero sup. */
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:28   
      144     1893    1                       %SES10,             /* Reset flag */
      145     1894    1                       %MVC1,              /* Move last digit */
      146     1895    1                       %INSB1 );           /* Output a blank */
      147     1896        /* Delta's static data */
      148     1897        %INCLUDE XUH_MACRO_C;
      149     1981        %INCLUDE DD_SD_M;
      150     3317        %S_D;
      151     4635        /* Entrys */
      152     4636    1   DCL DDE$ERROR ENTRY(0);
      153     4637    1   DCL DUA$EXITDELTA ENTRY(0);
      154     4638    1   DCL DUA$READ ENTRY(1) ALTRET;
      155     4639    1   DCL DUE$ERRMSG ENTRY(0);
      156     4640    1   DCL DUU$TRUNC ENTRY(0) ALTRET;
      157     4641        /* Misc */
      158     4642        %INCLUDE DD_ERR_C;
      159     5039        %INCLUDE F_ERRORS_C;
      160     5279        %INCLUDE NK_VFC_C;
      161     5353        %SUB @XEQ='     $XEQ '/* @XEQ */;
      162     5354        %SUB @ALIB='    $ALIB '/* @ALIB */;
      163     5355                                                /**/
      164     5356    1        M$DELT$ = DCBADDR( D_M$DELT# );

   5356  2 000002   000000 470400 3                  LDP0    0
         2 000003   000000 471500                    LDP1    0,,PR0
         2 000004   000000 720000 xsym               LXL0    D_M$DELT#
         2 000005   100000 236110                    LDQ     0,X0,PR1
         2 000006   200010 756100                    STQ     M$DELT$,,AUTO

      165     5357    1        M$DO$ = DCBADDR( D_M$DO# );

   5357  2 000007   000000 721000 xsym               LXL1    D_M$DO#
         2 000010   100000 236111                    LDQ     0,X1,PR1
         2 000011   200007 756100                    STQ     M$DO$,,AUTO

      166     5358    1        IF M$DO$ -> F$DCB.WIDTH# = 0

   5358  2 000012   200007 473500                    LDP3    M$DO$,,AUTO
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:29   
         2 000013   300004 236100                    LDQ     4,,PR3
         2 000014   000777 316007                    CANQ    511,DL
         2 000015   000022 601000 2                  TNZ     s:5360

      167     5359    1        THEN S_D.OUT_WIDTH = 132;

   5359  2 000016   000204 235007                    LDA     132,DL
         2 000017   000000 474400 xsym               LDP4    S_D$
         2 000020   400014 755100                    STA     12,,PR4
         2 000021   000026 710000 2                  TRA     s:5361

      168     5360    1        ELSE S_D.OUT_WIDTH = M$DO$ -> F$DCB.WIDTH#;

   5360  2 000022   300004 236100                    LDQ     4,,PR3
         2 000023   000777 376007                    ANQ     511,DL
         2 000024   000000 474400 xsym               LDP4    S_D$
         2 000025   400014 756100                    STQ     12,,PR4

      169     5361    1        FPTREAD = FPT_READ;

   5361  2 000026   000100 100400                    MLR     fill='000'O
         2 000027   000022 000070 1                  ADSC9   FPT_READ                 cn=0,n=56
         2 000030   200264 000070                    ADSC9   FPTREAD,,AUTO            cn=0,n=56

      170     5362    1        FPTREAD.V_ = VECTOR( FPTREAD.V );

   5362  2 000031   000001 235000 3                  LDA     1
         2 000032   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 000033   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 000034   000274 036003                    ADLQ    188,DU
         2 000035   200264 757100                    STAQ    FPTREAD,,AUTO

      171     5363    1        FPTREAD.V.DCB# = D_M$DELT#;

   5363  2 000036   200274 740100                    STX0    FPTREAD+8,,AUTO

      172     5364    1        FPTREAD.BUF_ = VECTOR( BUFF$ER );
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:30   

   5364  2 000037   200003 475500                    LDP5    @BUF$,,AUTO
         2 000040   500000 476500                    LDP6    0,,PR5
         2 000041   200004 477500                    LDP7    @SIZE,,AUTO
         2 000042   700000 722100                    LXL2    0,,PR7
         2 000043   000000 635012                    EAA     0,X2
         2 000044   000002 771000                    ARL     2
         2 000045   000140 135007                    SBLA    96,DL
         2 000046   200330 456500                    STP6    FPTWRSYSLOG+10,,AUTO
         2 000047   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 000050   200270 757100                    STAQ    FPTREAD+4,,AUTO

      173     5365    1        FPTREAD.KEY_ = VECTOR( KEYBUF );

   5365  2 000051   000002 235000 3                  LDA     2
         2 000052   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 000053   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 000054   000133 036003                    ADLQ    91,DU
         2 000055   200266 757100                    STAQ    FPTREAD+2,,AUTO

   5365  2 000056                       REREAD       null
      174     5366    1   REREAD: ;
      175     5367    1        IF S_D.RESET_IN

   5367  2 000056   000000 470400 xsym               LDP0    S_D$
         2 000057   004716 234100                    SZN     2510,,PR0
         2 000060   000071 605000 2                  TPL     s:5373

      176     5368    2        THEN DO;

      177     5369    2             S_D.RESET_IN = '0'B;

   5369  2 000061   004716 450100                    STZ     2510,,PR0

      178     5370    2             S_D.M$DELTA_RES = 'UC';

   5370  2 000062   000101 236000 1                  LDQ     MICRO_SEQN+2
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:31   
         2 000063   777777 376003                    ANQ     -1,DU
         2 000064   040040 276007                    ORQ     16416,DL
         2 000065   000606 756100                    STQ     390,,PR0

      179     5371    2             CALL DUA$READ;                /* Does not altret */

   5371  2 000066   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000067   000000 701000 xent               TSX1    DUA$READ
         2 000070   000000 011000                    NOP     0

      180     5372    2           END;

      181     5373    1        BUFF$ER = ' ';

   5373  2 000071   200003 470500                    LDP0    @BUF$,,AUTO
         2 000072   000000 471500                    LDP1    0,,PR0
         2 000073   200004 473500                    LDP3    @SIZE,,AUTO
         2 000074   300000 720100                    LXL0    0,,PR3
         2 000075   040140 100400                    MLR     fill='040'O
         2 000076   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000077   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      182     5374    1        CALL M$READ( FPTREAD ) ALTRET( ARETR0 );

   5374  2 000100   200264 630500                    EPPR0   FPTREAD,,AUTO
         2 000101   440000 713400                    CLIMB   alt,read
         2 000102   401400 401760                    pmme    nvectors=4
         2 000103   000547 702000 2                  TSX2    ARETR0

      183     5375    1        S_D.NCHARS = M$DELT$ -> F$DCB.ARS#;

   5375  2 000104   200010 470500                    LDP0    M$DELT$,,AUTO
         2 000105   000000 471400 xsym               LDP1    S_D$
         2 000106   000000 235100                    LDA     0,,PR0
         2 000107   100065 755100                    STA     53,,PR1

      184     5376    1        S_D.ACT = M$DELT$ -> F$DCB.EOMCHAR#;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:32   

   5376  2 000110   000003 236100                    LDQ     3,,PR0
         2 000111   000033 736000                    QLS     27
         2 000112   000003 276000 3                  ORQ     3
         2 000113   100503 756100                    STQ     323,,PR1

      185     5377    1        GOTO NORMAL;

   5377  2 000114   000143 710000 2                  TRA     NORMAL

      186     5378
      187     5379    1   DDQ$READ_ALIB: ENTRY(BUF$, SIZE);

   5379  2 000115   000000 700200 xent  DDQ$READ_AL* TSX0  ! X66_AUTO_2
         2 000116   000332 000002                    ZERO    218,2

      188     5380
      189     5381    1        M$DELT$ = DCBADDR( D_M$DELT# );

   5381  2 000117   000000 470400 3                  LDP0    0
         2 000120   000000 471500                    LDP1    0,,PR0
         2 000121   000000 720000 xsym               LXL0    D_M$DELT#
         2 000122   100000 236110                    LDQ     0,X0,PR1
         2 000123   200010 756100                    STQ     M$DELT$,,AUTO

      190     5382    1        M$DO$ = DCBADDR( D_M$DO# );

   5382  2 000124   000000 721000 xsym               LXL1    D_M$DO#
         2 000125   100000 236111                    LDQ     0,X1,PR1
         2 000126   200007 756100                    STQ     M$DO$,,AUTO

      191     5383    1        IF M$DO$ -> F$DCB.WIDTH# = 0

   5383  2 000127   200007 473500                    LDP3    M$DO$,,AUTO
         2 000130   300004 236100                    LDQ     4,,PR3
         2 000131   000777 316007                    CANQ    511,DL
         2 000132   000137 601000 2                  TNZ     s:5385
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:33   

      192     5384    1        THEN S_D.OUT_WIDTH = 132;

   5384  2 000133   000204 235007                    LDA     132,DL
         2 000134   000000 474400 xsym               LDP4    S_D$
         2 000135   400014 755100                    STA     12,,PR4
         2 000136   000143 710000 2                  TRA     NORMAL

      193     5385    1        ELSE S_D.OUT_WIDTH = M$DO$ -> F$DCB.WIDTH#;

   5385  2 000137   300004 236100                    LDQ     4,,PR3
         2 000140   000777 376007                    ANQ     511,DL
         2 000141   000000 474400 xsym               LDP4    S_D$
         2 000142   400014 756100                    STQ     12,,PR4

   5383  2 000143                       NORMAL       null
      194     5386    1   NORMAL: ;
      195     5387    1        S_D.BREAK = '0'B;                  /* Ignore break after read completes */

   5387  2 000143   000000 470400 xsym               LDP0    S_D$
         2 000144   000026 450100                    STZ     22,,PR0

      196     5388    1        S_D.BREAK_PRINTED = '0'B;

   5388  2 000145   005213 450100                    STZ     2699,,PR0

      197     5389    1        S_D.SACT = '0'B;                   /* Assume normal activation character */

   5389  2 000146   000501 450100                    STZ     321,,PR0

      198     5390    1        IF S_D.EOM

   5390  2 000147   004752 234100                    SZN     2538,,PR0
         2 000150   000167 605000 2                  TPL     s:5401

      199     5391    2        THEN DO;                           /* Check for spec act char */

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:34   
      200     5392    2             CALL INDEX( IX, S_D.ACT, NSACHARS ) ALTRET( ISSACT );

   5392  2 000151   000100 124400                    SCM     mask='000'O
         2 000152   000072 000011 1                  ADSC9   NSACTABL                 cn=0,n=9
         2 000153   000503 000001                    ADSC9   323,,PR0                 cn=0,n=1
         2 000154   200012 000100                    ARG     IX,,AUTO
         2 000155   000157 606400 2                  TTN     ISSACT

      201     5393    3             DO WHILE ( '0'B );

   5393  2 000156   000167 710000 2                  TRA     s:5401

   5392  2 000157                       ISSACT       null
      202     5394    3   ISSACT:        ;
      203     5395    3                  S_D.SACT = '1'B;

   5395  2 000157   400000 236003                    LDQ     -131072,DU
         2 000160   000000 470400 xsym               LDP0    S_D$
         2 000161   000501 756100                    STQ     321,,PR0

      204     5396    3                  CALL INSERT( S_D.INPUT, S_D.NCHARS, LENGTHC( S_D.ACT ), S_D.ACT );

   5396  2 000162   000065 235100                    LDA     53,,PR0
         2 000163   040105 100500                    MLR     fill='040'O
         2 000164   000503 000001                    ADSC9   323,,PR0                 cn=0,n=1
         2 000165   000610 000001                    ADSC9   392,A,PR0                cn=0,n=1

      205     5397    3                  S_D.NCHARS = S_D.NCHARS + 1; /* Cannot overflow buffer, since

   5397  2 000166   000065 054100                    AOS     53,,PR0

      206     5398                                                EOM_EOR# is not special act char */
      207     5399    3                END;

      208     5400    2           END;

      209     5401    1        IF M$DELT$ -> F$DCB.DDEV.IC#
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:35   

   5401  2 000167   200010 471500                    LDP1    M$DELT$,,AUTO
         2 000170   100004 236100                    LDQ     4,,PR1
         2 000171   100000 316007                    CANQ    32768,DL
         2 000172   000444 600000 2                  TZE     s:5463

      210     5402    2        THEN DO;

      211     5403    2             IF S_D.RUM

   5403  2 000173   004755 234100                    SZN     2541,,PR0
         2 000174   000205 605000 2                  TPL     s:5409

      212     5404    3             THEN DO;

      213     5405    3                  IF NOT S_D.RCBC.WRITE_THRU

   5405  2 000175   000516 234100                    SZN     334,,PR0
         2 000176   000202 604000 2                  TMI     s:5407

      214     5406    3                  THEN CALL DUU$TRUNC;     /* Ignore altret */

   5406  2 000177   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000200   000000 701000 xent               TSX1    DUU$TRUNC
         2 000201   000000 011000                    NOP     0

      215     5407    3                  S_D.RCBC.WRITE_THRU = '1'B;

   5407  2 000202   400000 236003                    LDQ     -131072,DU
         2 000203   000000 470400 xsym               LDP0    S_D$
         2 000204   000516 756100                    STQ     334,,PR0

      216     5408    3                END;

      217     5409    2             CALL INDEX( IX, S_D.ACT, ACHARS ) ALTRET( UNKACT );

   5409  2 000205   000100 124400                    SCM     mask='000'O
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:36   
         2 000206   000054 000013 1                  ADSC9   ACTABL                   cn=0,n=11
         2 000207   000503 000001                    ADSC9   323,,PR0                 cn=0,n=1
         2 000210   200012 000100                    ARG     IX,,AUTO
         2 000211   000216 606400 2                  TTN     UNKACT

      218     5410    2             IX = ACTYPE( IX );            /* Get activation char type */

   5410  2 000212   200012 720100                    LXL0    IX,,AUTO
         2 000213   000057 235010 1                  LDA     ACTYPE,X0
         2 000214   200012 755100                    STA     IX,,AUTO

      219     5411    3             DO WHILE ( '0'B );

   5411  2 000215   000220 710000 2                  TRA     s:5415

   5410  2 000216                       UNKACT       null
      220     5412    3   UNKACT:        ;
      221     5413    3                  IX = 2;                  /* Unknown is type 2 */

   5413  2 000216   000002 235007                    LDA     2,DL
         2 000217   200012 755100                    STA     IX,,AUTO

      222     5414    3                END;

      223     5415    3             DO CASE ( IX );

   5415  2 000220   000003 115007                    CMPA    3,DL
         2 000221   000223 602005 2                  TNC     s:5415+3,AL
         2 000222   000266 710000 2                  TRA     s:5431
         2 000223   000226 710000 2                  TRA     s:5417
         2 000224   000232 710000 2                  TRA     s:5419
         2 000225   000236 710000 2                  TRA     s:5421

      224     5416    3               CASE ( 0 );                 /* C/R, L/F */

      225     5417    3                  S_D.USVFC = '1'B;

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:37   
   5417  2 000226   400000 236003                    LDQ     -131072,DU
         2 000227   000000 470400 xsym               LDP0    S_D$
         2 000230   005144 756100                    STQ     2660,,PR0
         2 000231   000266 710000 2                  TRA     s:5431

      226     5418    3               CASE ( 1 );                 /* '=', '/' */

      227     5419    3                  S_D.LWEXTEND = '1'B;

   5419  2 000232   400000 236003                    LDQ     -131072,DU
         2 000233   000000 470400 xsym               LDP0    S_D$
         2 000234   005202 756100                    STQ     2690,,PR0
         2 000235   000266 710000 2                  TRA     s:5431

      228     5420    3               CASE ( 2 );                 /* '^', '[', ']', EOT, etc. */

      229     5421    3                  IF NOT S_D.ALIB_SAID_QUIET

   5421  2 000236   000000 470400 xsym               LDP0    S_D$
         2 000237   000070 234100                    SZN     56,,PR0
         2 000240   000266 604000 2                  TMI     s:5431

      230     5422    4                  THEN DO;

      231     5423    4                       FPTWRITE = FPT_WRITE;

   5423  2 000241   000100 100400                    MLR     fill='000'O
         2 000242   000040 000060 1                  ADSC9   FPT_WRITE                cn=0,n=48
         2 000243   200302 000060                    ADSC9   FPTWRITE,,AUTO           cn=0,n=48

      232     5424    4                       FPTWRITE.V_ = VECTOR( FPTWRITE.V );

   5424  2 000244   000004 235000 3                  LDA     4
         2 000245   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 000246   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 000247   000312 036003                    ADLQ    202,DU
         2 000250   200302 757100                    STAQ    FPTWRITE,,AUTO
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:38   

      233     5425    4                       VFCBUF = %VFC_S1B;  /* Space 1 line before print */

   5425  2 000251   141000 236003                    LDQ     49664,DU
         2 000252   200011 756100                    STQ     VFCBUF,,AUTO

      234     5426    4                       FPTWRITE.BUF_ = VECTOR( VFCBUF );

   5426  2 000253   177640 235007                    LDA     65440,DL
         2 000254   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 000255   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 000256   000011 036003                    ADLQ    9,DU
         2 000257   200306 757100                    STAQ    FPTWRITE+4,,AUTO

      235     5427    4                       FPTWRITE.V.DCB# = %M$UC#;

   5427  2 000260   000003 220003                    LDX0    3,DU
         2 000261   200312 740100                    STX0    FPTWRITE+8,,AUTO

      236     5428    4                       CALL M$WRITE( FPTWRITE ) ALTRET( ARETW2 );

   5428  2 000262   200302 630500                    EPPR0   FPTWRITE,,AUTO
         2 000263   440001 713400                    CLIMB   alt,write
         2 000264   401400 401760                    pmme    nvectors=4
         2 000265   001155 702000 2                  TSX2    ARETW1

      237     5429    4                     END;

      238     5430    3               END;

      239     5431    2             IF (( S_D.ECHO ) AND

   5431  2 000266   000000 470400 xsym               LDP0    S_D$
         2 000267   004743 234100                    SZN     2531,,PR0
         2 000270   000303 605000 2                  TPL     s:5431+13
         2 000271   200007 471500                    LDP1    M$DO$,,AUTO
         2 000272   100004 236100                    LDQ     4,,PR1
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:39   
         2 000273   020000 316007                    CANQ    8192,DL
         2 000274   000303 601000 2                  TNZ     s:5431+13
         2 000275   000000 473400 xsym               LDP3    B$JIT$
         2 000276   300143 236100                    LDQ     99,,PR3
         2 000277   000012 376000 xsym               ANQ     B_VECTNIL+10
         2 000300   000303 600000 2                  TZE     s:5431+13
         2 000301   000070 234100                    SZN     56,,PR0
         2 000302   000305 605000 2                  TPL     s:5437
         2 000303   000067 234100                    SZN     55,,PR0
         2 000304   000546 605000 2                  TPL     s:5483

      240     5432    2               ( NOT M$DO$ -> F$DCB.DDEV.UCOUT# ) AND
      241     5433    2               ( B$JIT.CPFLAGS1 & %CP_ECHO# ) AND
      242     5434    2               ( NOT S_D.ALIB_SAID_QUIET)) OR
      243     5435    2               S_D.ALIB_SAID_ECHO
      244     5436    3             THEN DO;

      245     5437    3                  CALL SETUPE;

   5437  2 000305   000713 701000 2                  TSX1    SETUPE
         2 000306   000000 011000                    NOP     0

      246     5438    3                  IF S_D.PROMPT.VFC = %VFC_TRANSITION0

   5438  2 000307   000000 470400 xsym               LDP0    S_D$
         2 000310   005150 236100                    LDQ     2664,,PR0
         2 000311   777000 376003                    ANQ     -512,DU
         2 000312   036000 116003                    CMPQ    15360,DU
         2 000313   000317 601000 2                  TNZ     s:5440

      247     5439    3                  THEN ECHOBUF.VFC = %VFC_TRANSITION0;

   5439  2 000314   036000 236003                    LDQ     15360,DU
         2 000315   200020 552140                    STBQ    ECHOBUF,'40'O,AUTO
         2 000316   000321 710000 2                  TRA     s:5441

      248     5440    3                  ELSE ECHOBUF.VFC = %VFC_EXT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:40   

   5440  2 000317   100000 236003                    LDQ     32768,DU
         2 000320   200020 552140                    STBQ    ECHOBUF,'40'O,AUTO

      249     5441    3                  IF S_D.ALIB_SAID_ECHO

   5441  2 000321   000067 234100                    SZN     55,,PR0
         2 000322   000365 605000 2                  TPL     s:5447

      250     5442    4                  THEN DO;

      251     5443    4                       CALL CONCAT( ECHOBUF.TEXT, POSI$TION, PROM$PT, PBUFF$ER);

   5443  2 000323   200234 471500                    LDP1    POSI$,,AUTO
         2 000324   200237 720100                    LXL0    POSI_SIZE,,AUTO
         2 000325   040100 100540                    MLR     fill='040'O
         2 000326   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 000327   200020 200450                    ADSC9   ECHOBUF,,AUTO            cn=1,n=296
         2 000330   200237 236100                    LDQ     POSI_SIZE,,AUTO
         2 000331   000450 116007                    CMPQ    296,DL
         2 000332   000360 603000 2                  TRC     s:5444
         2 000333   777327 621006                    EAX1    -297,QL
         2 000334   777777 661003                    ERX1    -1,DU
         2 000335   200235 473500                    LDP3    PROM$,,AUTO
         2 000336   200240 722100                    LXL2    PROM_SIZE,,AUTO
         2 000337   040146 100540                    MLR     fill='040'O
         2 000340   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         2 000341   200020 200011                    ADSC9   ECHOBUF,Q,AUTO           cn=1,n=*X1
         2 000342   200240 036100                    ADLQ    PROM_SIZE,,AUTO
         2 000343   000450 116007                    CMPQ    296,DL
         2 000344   000360 603000 2                  TRC     s:5444
         2 000345   200330 756100                    STQ     FPTWRSYSLOG+10,,AUTO
         2 000346   200237 236100                    LDQ     POSI_SIZE,,AUTO
         2 000347   200240 036100                    ADLQ    PROM_SIZE,,AUTO
         2 000350   200330 723100                    LXL3    FPTWRSYSLOG+10,,AUTO
         2 000351   777327 623013                    EAX3    -297,X3
         2 000352   777777 663003                    ERX3    -1,DU
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:41   
         2 000353   200005 474500                    LDP4    PBUF$,,AUTO
         2 000354   200006 724100                    LXL4    PSIZE,,AUTO
         2 000355   040146 100540                    MLR     fill='040'O
         2 000356   400000 000014                    ADSC9   0,,PR4                   cn=0,n=*X4
         2 000357   200020 200013                    ADSC9   ECHOBUF,Q,AUTO           cn=1,n=*X3

      252     5444    4                       ECHO_SIZE = POSI_SIZE + PROM_SIZE + PSIZE;

   5444  2 000360   200237 236100                    LDQ     POSI_SIZE,,AUTO
         2 000361   200240 036100                    ADLQ    PROM_SIZE,,AUTO
         2 000362   200006 036100                    ADLQ    PSIZE,,AUTO
         2 000363   200236 756100                    STQ     ECHO_SIZE,,AUTO

      253     5445    4                     END;

   5445  2 000364   000406 710000 2                  TRA     s:5450

      254     5446    4                  ELSE DO;

      255     5447    4                       CALL CONCAT( ECHOBUF.TEXT, PROM$PT, PBUFF$ER );

   5447  2 000365   200235 471500                    LDP1    PROM$,,AUTO
         2 000366   200240 720100                    LXL0    PROM_SIZE,,AUTO
         2 000367   040100 100540                    MLR     fill='040'O
         2 000370   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 000371   200020 200450                    ADSC9   ECHOBUF,,AUTO            cn=1,n=296
         2 000372   200240 236100                    LDQ     PROM_SIZE,,AUTO
         2 000373   000450 116007                    CMPQ    296,DL
         2 000374   000404 603000 2                  TRC     s:5448
         2 000375   777327 621006                    EAX1    -297,QL
         2 000376   777777 661003                    ERX1    -1,DU
         2 000377   200005 473500                    LDP3    PBUF$,,AUTO
         2 000400   200006 722100                    LXL2    PSIZE,,AUTO
         2 000401   040146 100540                    MLR     fill='040'O
         2 000402   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         2 000403   200020 200011                    ADSC9   ECHOBUF,Q,AUTO           cn=1,n=*X1

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:42   
      256     5448    4                       ECHO_SIZE = PROM_SIZE + PSIZE;

   5448  2 000404   200006 036100                    ADLQ    PSIZE,,AUTO
         2 000405   200236 756100                    STQ     ECHO_SIZE,,AUTO

      257     5449    4                     END;

      258     5450    3                  FPTWRITE.BUF_ = VECTOR( ECHO$BUF );

   5450  2 000406   200236 235100                    LDA     ECHO_SIZE,,AUTO
         2 000407   000020 735000                    ALS     16
         2 000410   177640 035007                    ADLA    65440,DL
         2 000411   200233 236100                    LDQ     ECHO$,,AUTO
         2 000412   200306 757100                    STAQ    FPTWRITE+4,,AUTO

      259     5451    3                  CALL M$WRITE( FPTWRITE ) ALTRET( ARETW3 );

   5451  2 000413   200302 630500                    EPPR0   FPTWRITE,,AUTO
         2 000414   440001 713400                    CLIMB   alt,write
         2 000415   401400 401760                    pmme    nvectors=4
         2 000416   001155 702000 2                  TSX2    ARETW1

      260     5452    3                  IF IX ~= 1

   5452  2 000417   200012 235100                    LDA     IX,,AUTO
         2 000420   000001 115007                    CMPA    1,DL
         2 000421   000440 600000 2                  TZE     s:5459

      261     5453    4                  THEN DO;                 /* Not '/' or '=' */

      262     5454    4                       VFCBUF = %VFC_S1B;

   5454  2 000422   141000 236003                    LDQ     49664,DU
         2 000423   200011 756100                    STQ     VFCBUF,,AUTO

      263     5455    4                       S_D.LWEXTEND = '0'B;

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:43   
   5455  2 000424   000000 470400 xsym               LDP0    S_D$
         2 000425   005202 450100                    STZ     2690,,PR0

      264     5456    4                       FPTWRITE.BUF_ = VECTOR( VFCBUF );

   5456  2 000426   177640 235007                    LDA     65440,DL
         2 000427   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 000430   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 000431   000011 036003                    ADLQ    9,DU
         2 000432   200306 757100                    STAQ    FPTWRITE+4,,AUTO

      265     5457    4                       CALL M$WRITE( FPTWRITE ) ALTRET( ARETW4 );

   5457  2 000433   200302 630500                    EPPR0   FPTWRITE,,AUTO
         2 000434   440001 713400                    CLIMB   alt,write
         2 000435   401400 401760                    pmme    nvectors=4
         2 000436   001155 702000 2                  TSX2    ARETW1

      266     5458    4                     END;

   5458  2 000437   000546 710000 2                  TRA     s:5483

      267     5459    3                  ELSE S_D.LWEXTEND = '1'B;

   5459  2 000440   400000 236003                    LDQ     -131072,DU
         2 000441   000000 470400 xsym               LDP0    S_D$
         2 000442   005202 756100                    STQ     2690,,PR0

      268     5460    3                END;

      269     5461    2           END;

   5461  2 000443   000546 710000 2                  TRA     s:5483

      270     5462    2        ELSE DO;

      271     5463    2             S_D.RCBC.WRITE_THRU = '0'B;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:44   

   5463  2 000444   000516 450100                    STZ     334,,PR0

      272     5464    2             IF S_D.ECHO AND

   5464  2 000445   004743 234100                    SZN     2531,,PR0
         2 000446   000546 605000 2                  TPL     s:5483
         2 000447   000070 234100                    SZN     56,,PR0
         2 000450   000546 604000 2                  TMI     s:5483

      273     5465    2               ( NOT S_D.ALIB_SAID_QUIET )
      274     5466    3             THEN DO;

      275     5467    3                  CALL SETUPE;

   5467  2 000451   000713 701000 2                  TSX1    SETUPE
         2 000452   000000 011000                    NOP     0

      276     5468    3                  ECHOBUF.VFC = %VFC_TRANSITION1;

   5468  2 000453   037000 236003                    LDQ     15872,DU
         2 000454   200020 552140                    STBQ    ECHOBUF,'40'O,AUTO

      277     5469    3                  CALL CONCAT( ECHOBUF.TEXT, POSI$TION, PROM$PT, PBUFF$ER );

   5469  2 000455   200234 470500                    LDP0    POSI$,,AUTO
         2 000456   200237 720100                    LXL0    POSI_SIZE,,AUTO
         2 000457   040100 100540                    MLR     fill='040'O
         2 000460   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000461   200020 200450                    ADSC9   ECHOBUF,,AUTO            cn=1,n=296
         2 000462   200237 236100                    LDQ     POSI_SIZE,,AUTO
         2 000463   000450 116007                    CMPQ    296,DL
         2 000464   000512 603000 2                  TRC     s:5470
         2 000465   777327 621006                    EAX1    -297,QL
         2 000466   777777 661003                    ERX1    -1,DU
         2 000467   200235 471500                    LDP1    PROM$,,AUTO
         2 000470   200240 722100                    LXL2    PROM_SIZE,,AUTO
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:45   
         2 000471   040146 100540                    MLR     fill='040'O
         2 000472   100000 000012                    ADSC9   0,,PR1                   cn=0,n=*X2
         2 000473   200020 200011                    ADSC9   ECHOBUF,Q,AUTO           cn=1,n=*X1
         2 000474   200240 036100                    ADLQ    PROM_SIZE,,AUTO
         2 000475   000450 116007                    CMPQ    296,DL
         2 000476   000512 603000 2                  TRC     s:5470
         2 000477   200330 756100                    STQ     FPTWRSYSLOG+10,,AUTO
         2 000500   200237 236100                    LDQ     POSI_SIZE,,AUTO
         2 000501   200240 036100                    ADLQ    PROM_SIZE,,AUTO
         2 000502   200330 723100                    LXL3    FPTWRSYSLOG+10,,AUTO
         2 000503   777327 623013                    EAX3    -297,X3
         2 000504   777777 663003                    ERX3    -1,DU
         2 000505   200005 473500                    LDP3    PBUF$,,AUTO
         2 000506   200006 724100                    LXL4    PSIZE,,AUTO
         2 000507   040146 100540                    MLR     fill='040'O
         2 000510   300000 000014                    ADSC9   0,,PR3                   cn=0,n=*X4
         2 000511   200020 200013                    ADSC9   ECHOBUF,Q,AUTO           cn=1,n=*X3

      278     5470    3                  ECHO_SIZE = POSI_SIZE + PROM_SIZE + PSIZE;

   5470  2 000512   200237 236100                    LDQ     POSI_SIZE,,AUTO
         2 000513   200240 036100                    ADLQ    PROM_SIZE,,AUTO
         2 000514   200006 036100                    ADLQ    PSIZE,,AUTO
         2 000515   200236 756100                    STQ     ECHO_SIZE,,AUTO

      279     5471    3                  FPTWRITE.BUF_ = VECTOR( ECHO$BUF );

   5471  2 000516   200236 235100                    LDA     ECHO_SIZE,,AUTO
         2 000517   000020 735000                    ALS     16
         2 000520   177640 035007                    ADLA    65440,DL
         2 000521   200233 236100                    LDQ     ECHO$,,AUTO
         2 000522   200306 757100                    STAQ    FPTWRITE+4,,AUTO

      280     5472    3                  CALL M$WRITE( FPTWRITE ) ALTRET( ARETWE0 );

   5472  2 000523   200302 630500                    EPPR0   FPTWRITE,,AUTO
         2 000524   440001 713400                    CLIMB   alt,write
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:46   
         2 000525   401400 401760                    pmme    nvectors=4
         2 000526   001155 702000 2                  TSX2    ARETW1

      281     5473    3                  IF ( S_D.COPY ) AND

   5473  2 000527   000000 470400 xsym               LDP0    S_D$
         2 000530   004742 234100                    SZN     2530,,PR0
         2 000531   000546 605000 2                  TPL     s:5483
         2 000532   004625 234100                    SZN     2453,,PR0
         2 000533   000546 604000 2                  TMI     s:5483
         2 000534   200007 471500                    LDP1    M$DO$,,AUTO
         2 000535   100004 236100                    LDQ     4,,PR1
         2 000536   020000 316007                    CANQ    8192,DL
         2 000537   000546 601000 2                  TNZ     s:5483

      282     5474    3                    ( NOT S_D.BATCH ) AND
      283     5475    3                    ( NOT M$DO$ -> F$DCB.DDEV.UCOUT# )
      284     5476    4                  THEN DO;

      285     5477    4                       FPTWRITE.V.DCB# = %M$UC#;

   5477  2 000540   000003 220003                    LDX0    3,DU
         2 000541   200312 740100                    STX0    FPTWRITE+8,,AUTO

      286     5478    4                       CALL M$WRITE( FPTWRITE ) ALTRET( ARETWE1 );

   5478  2 000542   200302 630500                    EPPR0   FPTWRITE,,AUTO
         2 000543   440001 713400                    CLIMB   alt,write
         2 000544   401400 401760                    pmme    nvectors=4
         2 000545   001155 702000 2                  TSX2    ARETW1

      287     5479    4                     END;

      288     5480    3                END;

      289     5481    2           END;

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:47   
      290     5482                                                /**/
      291     5483    1        RETURN;

   5483  2 000546   000000 702200 xent               TSX2  ! X66_ARET

   5477  2 000547                       ARETR0       null
      292     5484                                                /**/
      293     5485    1   ARETR0: ;
      294     5486    1        S_D.BREAK = '0'B;                  /* Ignore break after read completes */

   5486  2 000547   000000 470400 xsym               LDP0    S_D$
         2 000550   000026 450100                    STZ     22,,PR0

      295     5487    1        S_D.BREAK_PRINTED = '0'B;

   5487  2 000551   005213 450100                    STZ     2699,,PR0

      296     5488    1        ERRCODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE;

   5488  2 000552   000000 471400 xsym               LDP1    B$TCB$
         2 000553   100000 473500                    LDP3    0,,PR1
         2 000554   300102 236100                    LDQ     66,,PR3
         2 000555   000003 772000                    QRL     3
         2 000556   037777 376007                    ANQ     16383,DL
         2 000557   200013 756100                    STQ     ERRCODE,,AUTO

      297     5489    1        IF ( ERRCODE = %E$LDSC ) OR ( ERRCODE = %E$DACTR )

   5489  2 000560   000014 116007                    CMPQ    12,DL
         2 000561   000564 600000 2                  TZE     s:5490
         2 000562   000015 116007                    CMPQ    13,DL
         2 000563   000570 601000 2                  TNZ     s:5491

      298     5490    1        THEN CALL DUA$EXITDELTA;           /* Does not return */

   5490  2 000564   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000565   000000 701000 xent               TSX1    DUA$EXITDELTA
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:48   
         2 000566   000000 011000                    NOP     0
         2 000567   000573 710000 2                  TRA     s:5492

      299     5491    1        ELSE CALL DUE$ERRMSG;

   5491  2 000570   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000571   000000 701000 xent               TSX1    DUE$ERRMSG
         2 000572   000000 011000                    NOP     0

      300     5492    1        IF ERRCODE = %E$LD

   5492  2 000573   200013 235100                    LDA     ERRCODE,,AUTO
         2 000574   000007 115007                    CMPA    7,DL
         2 000575   000606 601000 2                  TNZ     s:5498

      301     5493    2        THEN DO;

      302     5494    2             S_D.NCHARS = M$DELT$ -> F$DCB.ARS# - 1;

   5494  2 000576   200010 470500                    LDP0    M$DELT$,,AUTO
         2 000577   000000 471400 xsym               LDP1    S_D$
         2 000600   000000 235100                    LDA     0,,PR0
         2 000601   000001 135007                    SBLA    1,DL
         2 000602   100065 755100                    STA     53,,PR1

      303     5495    2             S_D.ACT = %EOM_EOR#;

   5495  2 000603   501000 236003                    LDQ     -97792,DU
         2 000604   100503 756100                    STQ     323,,PR1

      304     5496    2             GOTO NORMAL;

   5496  2 000605   000143 710000 2                  TRA     NORMAL

      305     5497    2           END;
      306     5498    1        IF M$DELT$ -> F$DCB.DDEV.IC#

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:49   
   5498  2 000606   200010 470500                    LDP0    M$DELT$,,AUTO
         2 000607   000004 236100                    LDQ     4,,PR0
         2 000610   100000 316007                    CANQ    32768,DL
         2 000611   000615 600000 2                  TZE     s:5500

      307     5499    1        THEN CASECODE = 2;                 /* User terminal */

   5499  2 000612   000002 235007                    LDA     2,DL
         2 000613   200014 755100                    STA     CASECODE,,AUTO
         2 000614   000633 710000 2                  TRA     s:5504

      308     5500    1        ELSE IF (M$DELT$ -> F$DCB.IASN = %STREAM#) AND

   5500  2 000615   000103 236100                    LDQ     67,,PR0
         2 000616   000777 376007                    ANQ     511,DL
         2 000617   000005 116007                    CMPQ    5,DL
         2 000620   000631 601000 2                  TNZ     s:5503
         2 000621   000000 471400 xsym               LDP1    S_D$
         2 000622   040000 106500                    CMPC    fill='040'O
         2 000623   100606 000004                    ADSC9   390,,PR1                 cn=0,n=4
         2 000624   000101 000002 1                  ADSC9   MICRO_SEQN+2             cn=0,n=2
         2 000625   000631 600000 2                  TZE     s:5503

      309     5501    1               (S_D.M$DELTA_RES ~= 'UC')
      310     5502    1             THEN CASECODE = 1;            /* Command stream, not user terminal */

   5502  2 000626   000001 235007                    LDA     1,DL
         2 000627   200014 755100                    STA     CASECODE,,AUTO
         2 000630   000633 710000 2                  TRA     s:5504

      311     5503    1             ELSE CASECODE = 3;            /* Something else, i.e. file */

   5503  2 000631   000003 235007                    LDA     3,DL
         2 000632   200014 755100                    STA     CASECODE,,AUTO

      312     5504    1        IF ERRCODE = %E$EOF

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:50   
   5504  2 000633   200013 236100                    LDQ     ERRCODE,,AUTO
         2 000634   000006 116007                    CMPQ    6,DL
         2 000635   000701 601000 2                  TNZ     s:5526

      313     5505    2        THEN DO;

      314     5506    3             DO CASE (CASECODE);

   5506  2 000636   000003 115007                    CMPA    3,DL
         2 000637   000641 602005 2                  TNC     s:5506+3,AL
         2 000640   000707 710000 2                  TRA     s:5529
         2 000641   000700 710000 2                  TRA     s:5524
         2 000642   000644 710000 2                  TRA     s:5508
         2 000643   000656 710000 2                  TRA     s:5512

      315     5507    3               CASE (1);                   /* Command stream, not user terminal */

      316     5508    3                  S_D.ERROR = 164; /* E@READ_BANG */

   5508  2 000644   000244 235007                    LDA     164,DL
         2 000645   000000 471400 xsym               LDP1    S_D$
         2 000646   100013 755100                    STA     11,,PR1

      317     5509    3                  CALL DDE$ERROR;

   5509  2 000647   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000650   000000 701000 xent               TSX1    DDE$ERROR
         2 000651   000000 011000                    NOP     0

      318     5510    3                  CALL DUA$EXITDELTA;      /* Does not return */

   5510  2 000652   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000653   000000 701000 xent               TSX1    DUA$EXITDELTA
         2 000654   000000 011000                    NOP     0
         2 000655   000707 710000 2                  TRA     s:5529

      319     5511    3               CASE (2);                   /* User terminal */
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:51   

      320     5512    3                  IF S_D.BATCH

   5512  2 000656   000000 471400 xsym               LDP1    S_D$
         2 000657   104625 234100                    SZN     2453,,PR1
         2 000660   000671 605000 2                  TPL     s:5518

      321     5513    4                  THEN DO;

      322     5514    4                       S_D.ERROR = 164; /* E@READ_BANG */

   5514  2 000661   000244 235007                    LDA     164,DL
         2 000662   100013 755100                    STA     11,,PR1

      323     5515    4                       CALL DDE$ERROR;

   5515  2 000663   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000664   000000 701000 xent               TSX1    DDE$ERROR
         2 000665   000000 011000                    NOP     0

      324     5516    4                       CALL DUA$EXITDELTA; /* Does not return */

   5516  2 000666   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000667   000000 701000 xent               TSX1    DUA$EXITDELTA
         2 000670   000000 011000                    NOP     0

      325     5517    4                     END;

      326     5518    3                  S_D.ACT = BITASC( '015'O ); /* C/R */

   5518  2 000671   015000 236003                    LDQ     6656,DU
         2 000672   000000 470400 xsym               LDP0    S_D$
         2 000673   000503 756100                    STQ     323,,PR0

      327     5519    3                  S_D.NCHARS = M$DELT$ -> F$DCB.ARS#;

   5519  2 000674   200010 471500                    LDP1    M$DELT$,,AUTO
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:52   
         2 000675   100000 235100                    LDA     0,,PR1
         2 000676   000065 755100                    STA     53,,PR0

      328     5520    3                  GOTO NORMAL;

   5520  2 000677   000143 710000 2                  TRA     NORMAL

      329     5521    3               CASE (3);                   /* Something else, i.e. File */

      330     5522    3                  ;
      331     5523    3               END;

      332     5524    2           END;

   5524  2 000700   000707 710000 2                  TRA     s:5529

      333     5525    2        ELSE DO;

      334     5526    2             IF S_D.BATCH

   5526  2 000701   000000 471400 xsym               LDP1    S_D$
         2 000702   104625 234100                    SZN     2453,,PR1
         2 000703   000707 605000 2                  TPL     s:5529

      335     5527    2             THEN CALL DUA$EXITDELTA;

   5527  2 000704   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000705   000000 701000 xent               TSX1    DUA$EXITDELTA
         2 000706   000000 011000                    NOP     0

      336     5528    2           END;

      337     5529    1        CALL DUA$READ;                     /* Does not altret */

   5529  2 000707   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000710   000000 701000 xent               TSX1    DUA$READ
         2 000711   000000 011000                    NOP     0
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:53   

      338     5530    1        GOTO REREAD;

   5530  2 000712   000056 710000 2                  TRA     REREAD

      339     5531                                                /**/
      340     5532        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:54   
      341     5533                                                /**/
      342     5534    1   SETUPE: PROC;

   5534  2 000713   200326 741300       SETUPE       STX1  ! FPTWRSYSLOG+8,,AUTO

      343     5535                                                /**/
      344     5536    2        FPTWRITE = FPT_WRITE;

   5536  2 000714   000100 100400                    MLR     fill='000'O
         2 000715   000040 000060 1                  ADSC9   FPT_WRITE                cn=0,n=48
         2 000716   200302 000060                    ADSC9   FPTWRITE,,AUTO           cn=0,n=48

      345     5537    2        FPTWRITE.V_ = VECTOR( FPTWRITE.V );

   5537  2 000717   000004 235000 3                  LDA     4
         2 000720   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 000721   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 000722   000312 036003                    ADLQ    202,DU
         2 000723   200302 757100                    STAQ    FPTWRITE,,AUTO

      346     5538    2        FPTWRITE.V.DCB# = D_M$DO#;

   5538  2 000724   000000 720000 xsym               LXL0    D_M$DO#
         2 000725   200312 740100                    STX0    FPTWRITE+8,,AUTO

      347     5539    2        ECHO$ = ADDR( ECHOBUF );

   5539  2 000726   200020 630500                    EPPR0   ECHOBUF,,AUTO
         2 000727   200233 450500                    STP0    ECHO$,,AUTO

      348     5540    2        PROM$ = ADDR( S_D.PROMPT.TEXT );

   5540  2 000730   000000 236000 xsym               LDQ     S_D$
         2 000731   000005 036000 3                  ADLQ    5
         2 000732   200235 756100                    STQ     PROM$,,AUTO

      349     5541    2        PROM_SIZE = S_D.PROMPT_SIZE - LENGTHC( S_D.PROMPT.VFC );
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:55   

   5541  2 000733   000000 471400 xsym               LDP1    S_D$
         2 000734   105147 235100                    LDA     2663,,PR1
         2 000735   000001 135007                    SBLA    1,DL
         2 000736   200240 755100                    STA     PROM_SIZE,,AUTO

      350     5542    2        PBUF$ = BUF$;

   5542  2 000737   200003 473500                    LDP3    @BUF$,,AUTO
         2 000740   300000 236100                    LDQ     0,,PR3
         2 000741   200005 756100                    STQ     PBUF$,,AUTO

      351     5543    2        PSIZE = S_D.NCHARS;

   5543  2 000742   100065 235100                    LDA     53,,PR1
         2 000743   200006 755100                    STA     PSIZE,,AUTO

      352     5544    2        POSI$ = ADDR( KEYBUF.TOSTR );

   5544  2 000744   200136 634500                    EPPR4   KEYBUF+3,,AUTO
         2 000745   200234 454500                    STP4    POSI$,,AUTO

      353     5545    2        IF S_D.ALIB_SAID_ECHO

   5545  2 000746   100067 234100                    SZN     55,,PR1
         2 000747   000756 605000 2                  TPL     s:5550

      354     5546    3        THEN DO;

      355     5547    3             KEYBUF.TOSTR = '    $ALIB '/* @ALIB */;

   5547  2 000750   040100 100400                    MLR     fill='040'O
         2 000751   000102 000012 1                  ADSC9   MICRO_SEQN+3             cn=0,n=10
         2 000752   200136 000012                    ADSC9   KEYBUF+3,,AUTO           cn=0,n=10

      356     5548    3             POSI_SIZE = LENGTHC( '    $ALIB '/* @ALIB */ );

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:56   
   5548  2 000753   000012 235007                    LDA     10,DL
         2 000754   200237 755100                    STA     POSI_SIZE,,AUTO

      357     5549    3           END;

   5549  2 000755   001042 710000 2                  TRA     s:5573

      358     5550    2        ELSE IF M$DELT$ -> F$DCB.DDEV.IC#

   5550  2 000756   200010 475500                    LDP5    M$DELT$,,AUTO
         2 000757   500004 236100                    LDQ     4,,PR5
         2 000760   100000 316007                    CANQ    32768,DL
         2 000761   000764 600000 2                  TZE     s:5552

      359     5551    2             THEN POSI_SIZE = 0;

   5551  2 000762   200237 450100                    STZ     POSI_SIZE,,AUTO
         2 000763   001042 710000 2                  TRA     s:5573

      360     5552    2             ELSE IF M$DELT$ -> F$DCB.DDEV.XEQ#

   5552  2 000764   040000 316007                    CANQ    16384,DL
         2 000765   000774 600000 2                  TZE     s:5558

      361     5553    3                  THEN DO;

      362     5554    3                       KEYBUF.TOSTR = '     $XEQ '/* @XEQ */;

   5554  2 000766   040100 100400                    MLR     fill='040'O
         2 000767   000105 000012 1                  ADSC9   MICRO_SEQN+6             cn=0,n=10
         2 000770   200136 000012                    ADSC9   KEYBUF+3,,AUTO           cn=0,n=10

      363     5555    3                       POSI_SIZE = LENGTHC( '     $XEQ '/* @XEQ */ );

   5555  2 000771   000012 236007                    LDQ     10,DL
         2 000772   200237 756100                    STQ     POSI_SIZE,,AUTO

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:57   
      364     5556    3                     END;

   5556  2 000773   001042 710000 2                  TRA     s:5573

      365     5557    3                  ELSE DO;

      366     5558    3                       POSI_SIZE = LENGTHC( KEYBUF.TOSTR );
              5558                                /* Both 'keys' are same size */

   5558  2 000774   000012 235007                    LDA     10,DL
         2 000775   200237 755100                    STA     POSI_SIZE,,AUTO

      367     5559    3                       IF ( M$DELT$ -> F$DCB.ASN# = %FILE# ) AND

   5559  2 000776   500032 236100                    LDQ     26,,PR5
         2 000777   777000 376007                    ANQ     -512,DL
         2 001000   001000 116007                    CMPQ    512,DL
         2 001001   001030 601000 2                  TNZ     s:5568
         2 001002   500032 236100                    LDQ     26,,PR5
         2 001003   777000 376003                    ANQ     -512,DU
         2 001004   002000 116003                    CMPQ    1024,DU
         2 001005   001030 601000 2                  TNZ     s:5568
         2 001006   200133 236100                    LDQ     KEYBUF,,AUTO
         2 001007   777000 376003                    ANQ     -512,DU
         2 001010   003000 116003                    CMPQ    1536,DU
         2 001011   001030 601000 2                  TNZ     s:5568
         2 001012   200133 236100                    LDQ     KEYBUF,,AUTO
         2 001013   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 001014   000006 116000 3                  CMPQ    6
         2 001015   001030 603000 2                  TRC     s:5568

      368     5560    3                         ( M$DELT$ -> F$DCB.ORG# = %KEYED# ) AND
      369     5561    3                         ( KEYBUF.SIZE = 3 ) AND
      370     5562    3                         ( KEYBUF.REC < 100000000 )
      371     5563    4                       THEN DO;            /* Edit key */

      372     5564    4                            CALL BINCHAR( KEYBUF.DIGITS, KEYBUF.REC );
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:58   

   5564  2 001016   000000 235003                    LDA     0,DU
         2 001017   200330 757100                    STAQ    FPTWRSYSLOG+10,,AUTO
         2 001020   000100 301500                    BTD
         2 001021   200330 000010                    NDSC9   FPTWRSYSLOG+10,,AUTO     cn=0,s=lsgnf,sf=0,n=8
         2 001022   200134 030010                    NDSC9   KEYBUF+1,,AUTO           cn=0,s=nosgn,sf=0,n=8

      373     5565    4                            CALL EDITCHAR( KEYBUF.TOSTR, , , MICRO_EDIT, KEYBUF.DIGITS
              5565                                     );

   5565  2 001023   100000 024500                    MVNE
         2 001024   200134 030010                    NDSC9   KEYBUF+1,,AUTO           cn=0,s=nosgn,sf=0,n=8
         2 001025   000075 000006 1                  ADSC9   MICRO_EDIT               cn=0,n=6
         2 001026   200136 000012                    ADSC9   KEYBUF+3,,AUTO           cn=0,n=10

      374     5566    4                          END;

   5566  2 001027   001042 710000 2                  TRA     s:5573

      375     5567    4                       ELSE DO;            /* Not an EDIT key */

      376     5568    4                            CALL BINCHAR( KEYBUF.DIGITS, S_D.READPOS );

   5568  2 001030   105142 235100                    LDA     2658,,PR1
         2 001031   000044 773000                    LRL     36
         2 001032   200330 757100                    STAQ    FPTWRSYSLOG+10,,AUTO
         2 001033   000100 301500                    BTD
         2 001034   200330 000010                    NDSC9   FPTWRSYSLOG+10,,AUTO     cn=0,s=lsgnf,sf=0,n=8
         2 001035   200134 030010                    NDSC9   KEYBUF+1,,AUTO           cn=0,s=nosgn,sf=0,n=8

      377     5569    4                            CALL EDITCHAR( KEYBUF.TOSTR, , , MICRO_SEQN, KEYBUF.DIGITS
              5569                                     );

   5569  2 001036   100000 024500                    MVNE
         2 001037   200134 030010                    NDSC9   KEYBUF+1,,AUTO           cn=0,s=nosgn,sf=0,n=8
         2 001040   000077 000005 1                  ADSC9   MICRO_SEQN               cn=0,n=5
         2 001041   200136 000012                    ADSC9   KEYBUF+3,,AUTO           cn=0,n=10
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:59   

      378     5570    4                          END;

      379     5571    3                     END;

      380     5572                                                /**/
      381     5573    2        RETURN;

   5573  2 001042   000001 702211                    TSX2  ! 1,X1

      382     5574                                                /**/
      383     5575    2   END SETUPE;
      384     5576                                                /**/
      385     5577        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:60   
      386     5578        /*F* NAME: DDQ$WRITE
      387     5579             PURPOSE: To write to the report devices.
      388     5580             DESCRIPTION: The contents of the specified output buffer are written
      389     5581                          to the report devices. A VFC code of "space 1 line after
      390     5582                          print" is implied. The byte preceeding the specified
      391     5583                          output buffer is reserved for VFC character. Writes are to
      392     5584                          M$DO & M$UC DCBs as specified by report control flags. */
      393     5585        /*D* NAME: DDQ$WRITE
      394     5586             ENTRY: DDQ$WRITE
      395     5587                    DDQ$WRITED
      396     5588                    DDQ$WRITENU
      397     5589             CALL: CALL DDQ$WRITE( BUF$, SIZE );
      398     5590             INTERFACE: M$WRITE
      399     5591                        DUE$ERRMSG
      400     5592                        SETUPW
      401     5593             ENVIRONMENT: User Delta.
      402     5594             INPUT: BUF$ - Pointer to output buffer.
      403     5595                    SIZE - Size of output buffer.
      404     5596             DESCRIPTION: The contents of the specified output buffer are written
      405     5597                          to the report devices. A VFC code of "space 1 line after
      406     5598                          print" is implied. The byte preceeding the specified
      407     5599                          output buffer is reserved for VFC character. Writes are to
      408     5600                          M$DO & M$UC DCBs as specified by report control flags. */
      409     5601                                                /**/
      410     5602    1   DDQ$WRITE: ENTRY( BUF$, SIZE );

   5602  2 001043   000000 700200 xent  DDQ$WRITE    TSX0  ! X66_AUTO_2
         2 001044   000332 000002                    ZERO    218,2
         2 001045   001050 710000 2                  TRA     s:5606

      411     5603                                                /**/
      412     5604    1   DDQ$WRITENC: ENTRY( BUF$, SIZE );       /* Compatibility */

   5604  2 001046   000000 700200 xent  DDQ$WRITENC  TSX0  ! X66_AUTO_2
         2 001047   000332 000002                    ZERO    218,2

      413     5605                                                /**/
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:61   
      414     5606    1        D = D_M$DO#;

   5606  2 001050   000000 235000 xsym               LDA     D_M$DO#
         2 001051   200015 755100                    STA     D,,AUTO

      415     5607    1        GOTO WRITE;

   5607  2 001052   001060 710000 2                  TRA     WRITE

      416     5608                                                /**/
      417     5609    1   DDQ$WRITED: ENTRY( BUF$, SIZE );

   5609  2 001053   000000 700200 xent  DDQ$WRITED   TSX0  ! X66_AUTO_2
         2 001054   000332 000002                    ZERO    218,2

      418     5610                                                /**/
      419     5611    1        D = S_D.DUMPDCB;

   5611  2 001055   000000 470400 xsym               LDP0    S_D$
         2 001056   005135 235100                    LDA     2653,,PR0
         2 001057   200015 755100                    STA     D,,AUTO

   5611  2 001060                       WRITE        null
      420     5612        /****GOTO WRITE;****/
      421     5613                                                /**/
      422     5614    1   WRITE: ;
      423     5615    1        CALL SETUPW;

   5615  2 001060   001357 701000 2                  TSX1    SETUPW
         2 001061   000000 011000                    NOP     0

      424     5616    1        IF S_D.USVFC OR S_D.LWEXTEND

   5616  2 001062   000000 470400 xsym               LDP0    S_D$
         2 001063   005144 234100                    SZN     2660,,PR0
         2 001064   001067 604000 2                  TMI     s:5618
         2 001065   005202 234100                    SZN     2690,,PR0
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:62   
         2 001066   001076 605000 2                  TPL     s:5622

      425     5617    2        THEN DO;

      426     5618    2             PBUF$ -> CHAR1 = %VFC_TRANSITION1;

   5618  2 001067   200005 471500                    LDP1    PBUF$,,AUTO
         2 001070   040100 100400                    MLR     fill='040'O
         2 001071   000007 000001 3                  ADSC9   7                        cn=0,n=1
         2 001072   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      427     5619    2             S_D.USVFC = '0'B;

   5619  2 001073   005144 450100                    STZ     2660,,PR0

      428     5620    2             S_D.LWEXTEND = '0'B;

   5620  2 001074   005202 450100                    STZ     2690,,PR0

      429     5621    2           END;

   5621  2 001075   001102 710000 2                  TRA     WRITEIT1

      430     5622    1        ELSE PBUF$ -> CHAR1 = %VFC_S1A;

   5622  2 001076   200005 471500                    LDP1    PBUF$,,AUTO
         2 001077   040100 100400                    MLR     fill='040'O
         2 001100   000010 000001 3                  ADSC9   8                        cn=0,n=1
         2 001101   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

   5616  2 001102                       WRITEIT1     null
      431     5623    1   WRITEIT1: ;
      432     5624    1        LEFT = SIZE;

   5624  2 001102   200004 470500                    LDP0    @SIZE,,AUTO
         2 001103   000000 235100                    LDA     0,,PR0
         2 001104   200016 755100                    STA     LEFT,,AUTO
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:63   

      433     5625    1        ORIG_VFC = FPTWRITE.BUF_.BUF$ -> CHAR1;

   5625  2 001105   200307 471500                    LDP1    FPTWRITE+5,,AUTO
         2 001106   040100 100500                    MLR     fill='040'O
         2 001107   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 001110   200017 000001                    ADSC9   ORIG_VFC,,AUTO           cn=0,n=1

      434     5626    2        DO WHILE ( LEFT > S_D.OUT_WIDTH );

   5626  2 001111   000000 473400 xsym               LDP3    S_D$
         2 001112   200016 236100                    LDQ     LEFT,,AUTO
         2 001113   001116 604000 2                  TMI     s:5627
         2 001114   300014 116100                    CMPQ    12,,PR3
         2 001115   001143 604400 2                  TMOZ    s:5633

      435     5627    2             FPTWRITE.BUF_.BUF$ -> CHAR1 = %VFC_TRANSITION1;

   5627  2 001116   200307 470500                    LDP0    FPTWRITE+5,,AUTO
         2 001117   040100 100400                    MLR     fill='040'O
         2 001120   000007 000001 3                  ADSC9   7                        cn=0,n=1
         2 001121   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      436     5628    2             CALL WRITE_CHUNK ALTRET( ARETW1 );

   5628  2 001122   001236 701000 2                  TSX1    WRITE_CHUNK
         2 001123   001155 702000 2                  TSX2    ARETW1

      437     5629    2             FPTWRITE.BUF_.BUF$ = PINCRC( FPTWRITE.BUF_.BUF$, S_D.OUT_WIDTH );

   5629  2 001124   000000 470400 xsym               LDP0    S_D$
         2 001125   000014 236100                    LDQ     12,,PR0
         2 001126   000020 736000                    QLS     16
         2 001127   200307 036100                    ADLQ    FPTWRITE+5,,AUTO
         2 001130   200307 756100                    STQ     FPTWRITE+5,,AUTO

      438     5630    2             VFCBUF = FPTWRITE.BUF_.BUF$ -> CHAR1;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:64   

   5630  2 001131   200307 471500                    LDP1    FPTWRITE+5,,AUTO
         2 001132   040100 100500                    MLR     fill='040'O
         2 001133   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 001134   200011 000001                    ADSC9   VFCBUF,,AUTO             cn=0,n=1

      439     5631    2             LEFT = LEFT - S_D.OUT_WIDTH;

   5631  2 001135   200016 236100                    LDQ     LEFT,,AUTO
         2 001136   000014 136100                    SBLQ    12,,PR0
         2 001137   200016 756100                    STQ     LEFT,,AUTO

      440     5632    2           END;

   5632  2 001140   001116 604000 2                  TMI     s:5627
         2 001141   000014 116100                    CMPQ    12,,PR0
         2 001142   001116 605400 2                  TPNZ    s:5627

      441     5633    1        FPTWRITE.BUF_.BUF$ -> CHAR1 = ORIG_VFC;

   5633  2 001143   040100 100500                    MLR     fill='040'O
         2 001144   200017 000001                    ADSC9   ORIG_VFC,,AUTO           cn=0,n=1
         2 001145   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      442     5634    1        FPTWRITE.BUF_.BOUND = LEFT;

   5634  2 001146   000020 736000                    QLS     16
         2 001147   200306 676100                    ERQ     FPTWRITE+4,,AUTO
         2 001150   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 001151   200306 656100                    ERSQ    FPTWRITE+4,,AUTO

      443     5635    1        CALL WRITE_CHUNK ALTRET( ARETW1 );

   5635  2 001152   001236 701000 2                  TSX1    WRITE_CHUNK
         2 001153   001155 702000 2                  TSX2    ARETW1

      444     5636                                                /**/
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:65   
      445     5637    1        RETURN;

   5637  2 001154   000000 702200 xent               TSX2  ! X66_ARET

   5634  2 001155                       ARETW1       null
   5634  2 001155                       ARETW2       null
   5634  2 001155                       ARETW3       null
   5634  2 001155                       ARETW4       null
   5634  2 001155                       ARETWE0      null
   5634  2 001155                       ARETWE1      null
   5634  2 001155                       ARETDEV0     null
   5634  2 001155                       ARETDEV1     null
      446     5638                                                /**/
      447     5639    1   ARETW1: ;
      448     5640    1   ARETW2: ;
      449     5641    1   ARETW3: ;
      450     5642    1   ARETW4: ;
      451     5643    1   ARETWE0: ;
      452     5644    1   ARETWE1: ;
      453     5645    1   ARETDEV0: ;
      454     5646    1   ARETDEV1: ;
      455     5647                                                /**/
      456     5648    1        IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$LDSC

   5648  2 001155   000000 470400 xsym               LDP0    B$TCB$
         2 001156   000000 471500                    LDP1    0,,PR0
         2 001157   100102 236100                    LDQ     66,,PR1
         2 001160   377770 376007                    ANQ     131064,DL
         2 001161   000140 116007                    CMPQ    96,DL
         2 001162   001166 601000 2                  TNZ     s:5650

      457     5649    1        THEN CALL DUA$EXITDELTA;

   5649  2 001163   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001164   000000 701000 xent               TSX1    DUA$EXITDELTA
         2 001165   000000 011000                    NOP     0

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:66   
      458     5650    1        IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$CGLWRV

   5650  2 001166   000000 470400 xsym               LDP0    B$TCB$
         2 001167   000000 471500                    LDP1    0,,PR0
         2 001170   100102 236100                    LDQ     66,,PR1
         2 001171   377770 376007                    ANQ     131064,DL
         2 001172   000250 116007                    CMPQ    168,DL
         2 001173   001230 601000 2                  TNZ     NXTLN

      459     5651    2        THEN DO ;

      460     5652    2             EL$DODCB.PROCESSOR = 'DELTA' ;

   5652  2 001174   040100 100400                    MLR     fill='040'O
         2 001175   000110 000005 1                  ADSC9   MICRO_SEQN+9             cn=0,n=5
         2 001176   200241 000012                    ADSC9   EL$DODCB,,AUTO           cn=0,n=10

      461     5653    2             EL$DODCB.TXT = 'M$DO not available.' ;

   5653  2 001177   040100 100400                    MLR     fill='040'O
         2 001200   000112 000023 1                  ADSC9   MICRO_SEQN+11            cn=0,n=19
         2 001201   200243 400024                    ADSC9   EL$DODCB+2,,AUTO         cn=2,n=20

      462     5654    2             FPTWRSYSLOG = FPT_WRSYSLOG ;

   5654  2 001202   000100 100400                    MLR     fill='000'O
         2 001203   000000 000040 1                  ADSC9   FPT_WRSYSLOG             cn=0,n=32
         2 001204   200316 000040                    ADSC9   FPTWRSYSLOG,,AUTO        cn=0,n=32

      463     5655    2             FPTWRSYSLOG.V_ = VECTOR(FPTWRSYSLOG.V) ;

   5655  2 001205   000004 235000 3                  LDA     4
         2 001206   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 001207   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 001210   000322 036003                    ADLQ    210,DU
         2 001211   200316 757100                    STAQ    FPTWRSYSLOG,,AUTO

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:67   
      464     5656    2             FPTWRSYSLOG.ENTRY_ = VECTOR(EL$DODCB) ;

   5656  2 001212   000011 235000 3                  LDA     9
         2 001213   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 001214   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 001215   000241 036003                    ADLQ    161,DU
         2 001216   200320 757100                    STAQ    FPTWRSYSLOG+2,,AUTO

      465     5657    2             FPTWRSYSLOG.V.SIZE# = SIZEW(EL$DODCB) ;

   5657  2 001217   000010 235007                    LDA     8,DL
         2 001220   200324 755100                    STA     FPTWRSYSLOG+6,,AUTO

      466     5658    2             CALL M$WRSYSLOG (FPTWRSYSLOG) ALTRET(NXTLN) ;

   5658  2 001221   200316 630500                    EPPR0   FPTWRSYSLOG,,AUTO
         2 001222   470001 713400                    CLIMB   alt,+28673
         2 001223   400400 401760                    pmme    nvectors=2
         2 001224   001230 702000 2                  TSX2    NXTLN

      467     5659    2             CALL DUA$EXITDELTA ;

   5659  2 001225   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001226   000000 701000 xent               TSX1    DUA$EXITDELTA
         2 001227   000000 011000                    NOP     0

      468     5660    2           END;

   5656  2 001230                       NXTLN        null
      469     5661    1   NXTLN: ;
      470     5662    1        CALL DUE$ERRMSG;

   5662  2 001230   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001231   000000 701000 xent               TSX1    DUE$ERRMSG
         2 001232   000000 011000                    NOP     0

      471     5663    1        CALL M$XXX;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:68   

   5663  2 001233   000003 713400                    CLIMB   3
         2 001234   000000 401760                    pmme    nvectors=0
         2 001235   001330 710000 2                  TRA     ARET+2

      472     5664                                                /**/
      473     5665        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:69   
      474     5666                                                /**/
      475     5667    1   WRITE_CHUNK: PROC ALTRET;

   5667  2 001236   200326 741300       WRITE_CHUNK  STX1  ! FPTWRSYSLOG+8,,AUTO

      476     5668                                                /**/
      477     5669    2        IF NOT S_D.ALIB_SAID_QUIET

   5669  2 001237   000000 470400 xsym               LDP0    S_D$
         2 001240   000070 234100                    SZN     56,,PR0
         2 001241   001324 604000 2                  TMI     s:5691

      478     5670    3        THEN DO;

      479     5671    4             IF NOT FPTWRITE.V.DVBYTE.VFC# THEN DO;

   5671  2 001242   200315 236100                    LDQ     FPTWRITE+11,,AUTO
         2 001243   100000 316003                    CANQ    32768,DU
         2 001244   001257 601000 2                  TNZ     s:5675

      480     5672    4                  FPTWRITE.BUF_.BUF$ = PINCRC(FPTWRITE.BUF_.BUF$,1);

   5672  2 001245   200307 236100                    LDQ     FPTWRITE+5,,AUTO
         2 001246   200000 036007                    ADLQ    65536,DL
         2 001247   200307 756100                    STQ     FPTWRITE+5,,AUTO

      481     5673    4                  FPTWRITE.BUF_.BOUND = FPTWRITE.BUF_.BOUND - 1;

   5673  2 001250   200306 236100                    LDQ     FPTWRITE+4,,AUTO
         2 001251   000020 772000                    QRL     16
         2 001252   000001 136007                    SBLQ    1,DL
         2 001253   000020 736000                    QLS     16
         2 001254   200306 676100                    ERQ     FPTWRITE+4,,AUTO
         2 001255   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 001256   200306 656100                    ERSQ    FPTWRITE+4,,AUTO

      482     5674    4                END;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:70   

      483     5675    3             CALL M$WRITE( FPTWRITE ) ALTRET( ARET );

   5675  2 001257   200302 630500                    EPPR0   FPTWRITE,,AUTO
         2 001260   440001 713400                    CLIMB   alt,write
         2 001261   401400 401760                    pmme    nvectors=4
         2 001262   001326 702000 2                  TSX2    ARET

      484     5676    3             IF S_D.COPY AND

   5676  2 001263   000000 470400 xsym               LDP0    S_D$
         2 001264   004742 234100                    SZN     2530,,PR0
         2 001265   001307 605000 2                  TPL     s:5685
         2 001266   004625 234100                    SZN     2453,,PR0
         2 001267   001307 604000 2                  TMI     s:5685
         2 001270   200007 471500                    LDP1    M$DO$,,AUTO
         2 001271   100004 236100                    LDQ     4,,PR1
         2 001272   020000 316007                    CANQ    8192,DL
         2 001273   001307 601000 2                  TNZ     s:5685
         2 001274   200015 236100                    LDQ     D,,AUTO
         2 001275   000000 116000 xsym               CMPQ    D_M$DO#
         2 001276   001307 601000 2                  TNZ     s:5685

      485     5677    3               NOT S_D.BATCH AND
      486     5678    3               NOT M$DO$ -> F$DCB.DDEV.UCOUT# AND
      487     5679    3               D = D_M$DO#
      488     5680    4             THEN DO;

      489     5681    4                  FPTWRITE.V.DCB# = %M$UC#;

   5681  2 001277   000003 220003                    LDX0    3,DU
         2 001300   200312 740100                    STX0    FPTWRITE+8,,AUTO

      490     5682    4                  CALL M$WRITE( FPTWRITE ) ALTRET( ARET );

   5682  2 001301   200302 630500                    EPPR0   FPTWRITE,,AUTO
         2 001302   440001 713400                    CLIMB   alt,write
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:71   
         2 001303   401400 401760                    pmme    nvectors=4
         2 001304   001326 702000 2                  TSX2    ARET

      491     5683    4                  FPTWRITE.V.DCB# = D_M$DO#;

   5683  2 001305   000000 720000 xsym               LXL0    D_M$DO#
         2 001306   200312 740100                    STX0    FPTWRITE+8,,AUTO

      492     5684    4                END;

      493     5685    4             IF NOT FPTWRITE.V.DVBYTE.VFC# THEN DO;

   5685  2 001307   200315 236100                    LDQ     FPTWRITE+11,,AUTO
         2 001310   100000 316003                    CANQ    32768,DU
         2 001311   001324 601000 2                  TNZ     s:5691

      494     5686    4                  FPTWRITE.BUF_.BUF$ = PINCRC(FPTWRITE.BUF_.BUF$,-1);

   5686  2 001312   200307 236100                    LDQ     FPTWRITE+5,,AUTO
         2 001313   000034 036000 xsym               ADLQ    B_VECTNIL+28
         2 001314   200307 756100                    STQ     FPTWRITE+5,,AUTO

      495     5687    4                  FPTWRITE.BUF_.BOUND = FPTWRITE.BUF_.BOUND + 1;

   5687  2 001315   200306 236100                    LDQ     FPTWRITE+4,,AUTO
         2 001316   000020 772000                    QRL     16
         2 001317   000001 036007                    ADLQ    1,DL
         2 001320   000020 736000                    QLS     16
         2 001321   200306 676100                    ERQ     FPTWRITE+4,,AUTO
         2 001322   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 001323   200306 656100                    ERSQ    FPTWRITE+4,,AUTO

      496     5688    4                END;

      497     5689    3           END;

      498     5690                                                /**/
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:72   
      499     5691    2        RETURN;

   5691  2 001324   200326 221300                    LDX1  ! FPTWRSYSLOG+8,,AUTO
         2 001325   000001 702211                    TSX2  ! 1,X1

      500     5692                                                /**/
      501     5693    2   ARET: ALTRETURN;

   5693  2 001326   200326 221300       ARET         LDX1  ! FPTWRSYSLOG+8,,AUTO
         2 001327   000000 702211                    TSX2  ! 0,X1
         2 001330   001333 710000 2                  TRA     s:5720

      502     5694                                                /**/
      503     5695    2   END WRITE_CHUNK;
      504     5696                                                /**/
      505     5697        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:73   
      506     5698        /*F* NAME: DDQ$WRITENU
      507     5699             PURPOSE: To write to the report devices with no upspace after print.
      508     5700             DESCRIPTION: The contents of the specified output buffer are written
      509     5701                          to the report devices. A VFC code of "space 0 lines after
      510     5702                          print" is implied. The byte preceeding the specified
      511     5703                          output buffer is reserved for VFC character. */
      512     5704        /*D* NAME: DDQ$WRITENU
      513     5705             ENTRY: DDQ$WRITENU
      514     5706             CALL: CALL DDQ$WRITENU( BUF$, SIZE );
      515     5707             INTERFACE: M$WRITE
      516     5708                        DUE$ERRMSG
      517     5709                        SETUPW
      518     5710             ENVIRONMENT: User Delta.
      519     5711             INPUT: BUF$ - Pointer to output buffer.
      520     5712                    SIZE - Size of output buffer.
      521     5713             DESCRIPTION: The contents of the specified output buffer are written
      522     5714                          to the report devices. A VFC code of "space 0 lines after
      523     5715                          print" is implied. The byte preceeding the specified
      524     5716                          output buffer is reserved for VFC character. */
      525     5717                                                /**/
      526     5718    1   DDQ$WRITENU: ENTRY( BUF$, SIZE );

   5718  2 001331   000000 700200 xent  DDQ$WRITENU  TSX0  ! X66_AUTO_2
         2 001332   000332 000002                    ZERO    218,2

      527     5719                                                /**/
      528     5720    1        D = D_M$DO#;

   5720  2 001333   000000 235000 xsym               LDA     D_M$DO#
         2 001334   200015 755100                    STA     D,,AUTO

      529     5721    1        CALL SETUPW;

   5721  2 001335   001357 701000 2                  TSX1    SETUPW
         2 001336   000000 011000                    NOP     0

      530     5722    1        IF S_D.USVFC
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:74   

   5722  2 001337   000000 470400 xsym               LDP0    S_D$
         2 001340   005144 234100                    SZN     2660,,PR0
         2 001341   001350 605000 2                  TPL     s:5727

      531     5723    2        THEN DO;

      532     5724    2             PBUF$ -> CHAR1 = %VFC_TRANSITION0;

   5724  2 001342   200005 471500                    LDP1    PBUF$,,AUTO
         2 001343   040100 100400                    MLR     fill='040'O
         2 001344   000012 000001 3                  ADSC9   10                       cn=0,n=1
         2 001345   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      533     5725    2             S_D.USVFC = '0'B;

   5725  2 001346   005144 450100                    STZ     2660,,PR0

      534     5726    2           END;

   5726  2 001347   001354 710000 2                  TRA     s:5728

      535     5727    1        ELSE PBUF$ -> CHAR1 = %VFC_EXT;

   5727  2 001350   200005 471500                    LDP1    PBUF$,,AUTO
         2 001351   040100 100400                    MLR     fill='040'O
         2 001352   000013 000001 3                  ADSC9   11                       cn=0,n=1
         2 001353   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      536     5728    1        S_D.LWEXTEND = '1'B;

   5728  2 001354   400000 236003                    LDQ     -131072,DU
         2 001355   005202 756100                    STQ     2690,,PR0

      537     5729    1        GOTO WRITEIT1;

   5729  2 001356   001102 710000 2                  TRA     WRITEIT1
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:75   

      538     5730                                                /**/
      539     5731        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:76   
      540     5732                                                /**/
      541     5733    1   SETUPW: PROC;

   5733  2 001357   200326 741300       SETUPW       STX1  ! FPTWRSYSLOG+8,,AUTO

      542     5734                                                /**/
      543     5735    2        M$DO$ = DCBADDR( D );

   5735  2 001360   000000 470400 3                  LDP0    0
         2 001361   000000 471500                    LDP1    0,,PR0
         2 001362   200015 720100                    LXL0    D,,AUTO
         2 001363   100000 236110                    LDQ     0,X0,PR1
         2 001364   200007 756100                    STQ     M$DO$,,AUTO

      544     5736    2        FPTWRITE = FPT_WRITE;

   5736  2 001365   000100 100400                    MLR     fill='000'O
         2 001366   000040 000060 1                  ADSC9   FPT_WRITE                cn=0,n=48
         2 001367   200302 000060                    ADSC9   FPTWRITE,,AUTO           cn=0,n=48

      545     5737    2        FPTWRITE.V_ = VECTOR( FPTWRITE.V );

   5737  2 001370   000004 235000 3                  LDA     4
         2 001371   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 001372   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 001373   000312 036003                    ADLQ    202,DU
         2 001374   200302 757100                    STAQ    FPTWRITE,,AUTO

      546     5738    2        FPTWRITE.V.DCB# = D;

   5738  2 001375   200312 740100                    STX0    FPTWRITE+8,,AUTO

      547     5739    2        IF M$DO$->F$DCB.ORG#=%CONSEC# THEN FPTWRITE.V.DVBYTE.VFC# = '0'B;

   5739  2 001376   200007 473500                    LDP3    M$DO$,,AUTO
         2 001377   300032 236100                    LDQ     26,,PR3
         2 001400   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:77   
         2 001401   001000 116003                    CMPQ    512,DU
         2 001402   001405 601000 2                  TNZ     s:5740

   5739  2 001403   000014 236000 3                  LDQ     12
         2 001404   200315 356100                    ANSQ    FPTWRITE+11,,AUTO

      548     5740    2        PBUF$ = PINCRC( BUF$, -1 );

   5740  2 001405   200003 474500                    LDP4    @BUF$,,AUTO
         2 001406   400000 236100                    LDQ     0,,PR4
         2 001407   000034 036000 xsym               ADLQ    B_VECTNIL+28
         2 001410   200005 756100                    STQ     PBUF$,,AUTO

      549     5741    2        PSIZE = S_D.OUT_WIDTH + 1;

   5741  2 001411   000000 475400 xsym               LDP5    S_D$
         2 001412   500014 235100                    LDA     12,,PR5
         2 001413   000001 035007                    ADLA    1,DL
         2 001414   200006 755100                    STA     PSIZE,,AUTO

      550     5742    2        FPTWRITE.BUF_ = VECTOR( PBUFF$ER );

   5742  2 001415   000020 735000                    ALS     16
         2 001416   000140 135007                    SBLA    96,DL
         2 001417   200306 757100                    STAQ    FPTWRITE+4,,AUTO

      551     5743                                                /**/
      552     5744    2        RETURN;

   5744  2 001420   000001 702211                    TSX2  ! 1,X1

      553     5745                                                /**/
      554     5746    2   END SETUPW;
      555     5747                                                /**/
      556     5748        %EJECT;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:78   
      557     5749        /*F* NAME: DDQ$WRTOF
      558     5750             PURPOSE: To perform a page eject to the report devices.
      559     5751             DESCRIPTION: Does an M$DEVICE to get to top of page. */
      560     5752        /*D* NAME: DDQ$WRTOF
      561     5753             ENTRY: DDQ$WRTOF
      562     5754                    DDQ$WRTOFD
      563     5755             CALL: CALL DDQ$WRTOF;
      564     5756             INTERFACE: M$DEVICE
      565     5757                        DUE$ERRMSG
      566     5758             ENVIRONMENT: User Delta.
      567     5759             INPUT: None.
      568     5760             DESCRIPTION: Does an M$DEVICE to get to top of page. */
      569     5761                                                /**/
      570     5762    1   DDQ$WRTOF: ENTRY;

   5762  2 001421   000000 700200 xent  DDQ$WRTOF    TSX0  ! X66_AUTO_2
         2 001422   000332 000002                    ZERO    218,2

      571     5763                                                /**/
      572     5764    1        D = D_M$DO#;

   5764  2 001423   000000 235000 xsym               LDA     D_M$DO#
         2 001424   200015 755100                    STA     D,,AUTO

      573     5765    1        GOTO WRTOF;

   5765  2 001425   001433 710000 2                  TRA     WRTOF

      574     5766                                                /**/
      575     5767    1   DDQ$WRTOFD: ENTRY;

   5767  2 001426   000000 700200 xent  DDQ$WRTOFD   TSX0  ! X66_AUTO_2
         2 001427   000332 000002                    ZERO    218,2

      576     5768                                                /**/
      577     5769    1        D = S_D.DUMPDCB;

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:79   
   5769  2 001430   000000 470400 xsym               LDP0    S_D$
         2 001431   005135 235100                    LDA     2653,,PR0
         2 001432   200015 755100                    STA     D,,AUTO

   5769  2 001433                       WRTOF        null
      578     5770        /****GOTO WRTOF;****/
      579     5771                                                /**/
      580     5772    1   WRTOF: ;
      581     5773    1        M$DO$ = DCBADDR( D );

   5773  2 001433   000000 470400 3                  LDP0    0
         2 001434   000000 471500                    LDP1    0,,PR0
         2 001435   100000 236105                    LDQ     0,AL,PR1
         2 001436   200007 756100                    STQ     M$DO$,,AUTO

      582     5774    1        FPTDEVICE = FPT_DEVICE;

   5774  2 001437   000100 100400                    MLR     fill='000'O
         2 001440   000010 000050 1                  ADSC9   FPT_DEVICE               cn=0,n=40
         2 001441   200252 000050                    ADSC9   FPTDEVICE,,AUTO          cn=0,n=40

      583     5775    1        FPTDEVICE.V_ = VECTOR( FPTDEVICE.V );

   5775  2 001442   000004 235000 3                  LDA     4
         2 001443   200330 452500                    STP2    FPTWRSYSLOG+10,,AUTO
         2 001444   200330 236100                    LDQ     FPTWRSYSLOG+10,,AUTO
         2 001445   000260 036003                    ADLQ    176,DU
         2 001446   200252 757100                    STAQ    FPTDEVICE,,AUTO

      584     5776    1        FPTDEVICE.V.DCB# = D;

   5776  2 001447   200015 720100                    LXL0    D,,AUTO
         2 001450   200260 740100                    STX0    FPTDEVICE+6,,AUTO

      585     5777    1        CALL M$DEVICE( FPTDEVICE ) ALTRET( ARETDEV0 );

   5777  2 001451   200252 630500                    EPPR0   FPTDEVICE,,AUTO
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:80   
         2 001452   450006 713400                    CLIMB   alt,+20486
         2 001453   401000 401760                    pmme    nvectors=3
         2 001454   001155 702000 2                  TSX2    ARETW1

      586     5778    1        IF ( S_D.COPY ) AND

   5778  2 001455   000000 470400 xsym               LDP0    S_D$
         2 001456   004742 234100                    SZN     2530,,PR0
         2 001457   001477 605000 2                  TPL     s:5787
         2 001460   004625 234100                    SZN     2453,,PR0
         2 001461   001477 604000 2                  TMI     s:5787
         2 001462   200007 471500                    LDP1    M$DO$,,AUTO
         2 001463   100004 236100                    LDQ     4,,PR1
         2 001464   020000 316007                    CANQ    8192,DL
         2 001465   001477 601000 2                  TNZ     s:5787
         2 001466   200015 236100                    LDQ     D,,AUTO
         2 001467   000000 116000 xsym               CMPQ    D_M$DO#
         2 001470   001477 601000 2                  TNZ     s:5787

      587     5779    1          ( NOT S_D.BATCH ) AND
      588     5780    1          ( NOT M$DO$ -> F$DCB.DDEV.UCOUT# ) AND
      589     5781    1          ( D = D_M$DO# )
      590     5782    2        THEN DO;

      591     5783    2             FPTDEVICE.V.DCB# = %M$UC#;

   5783  2 001471   000003 220003                    LDX0    3,DU
         2 001472   200260 740100                    STX0    FPTDEVICE+6,,AUTO

      592     5784    2             CALL M$DEVICE( FPTDEVICE ) ALTRET( ARETDEV1 );

   5784  2 001473   200252 630500                    EPPR0   FPTDEVICE,,AUTO
         2 001474   450006 713400                    CLIMB   alt,+20486
         2 001475   401000 401760                    pmme    nvectors=3
         2 001476   001155 702000 2                  TSX2    ARETW1

      593     5785    2           END;
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:81   

      594     5786                                                /**/
      595     5787    1        RETURN;

   5787  2 001477   000000 702200 xent               TSX2  ! X66_ARET

FPT_WRSYSLOG
 Sect OctLoc
   1     000   000003 777640   000004 006000   000000 177640   000000 006014    ................
   1     004   000000 0000**   000000 000466   000000 000000   000000 000001    ................

FPT_DEVICE
 Sect OctLoc
   1     010   000003 777640   000016 006000   000000 177640   000000 006014    ................
   1     014   000000 177640   000000 006014   000000 300111   040040 040040    ...........I
   1     020   000000 000000   000000 000000                                    ........

FPT_READ
 Sect OctLoc
   1     022   000005 777640   000032 006000   000000 177640   000000 006014    ................
   1     026   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     032   000000 500000   000000 000000   000000 000000   000000 000000    ................
   1     036   000000 000000   000000 000000                                    ........

FPT_WRITE
 Sect OctLoc
   1     040   000003 777640   000050 006000   000000 177640   000000 006014    .....(..........
   1     044   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     050   000000 400400   000000 000000   000000 000000   100000 000000    ............@...

ACTABL
 Sect OctLoc
   1     054   015012 075057   501011 136135   175133 173***                    ..=/..^]}[{.

ACTYPE
 Sect OctLoc
   1     057   000000 000000   000000 000000   000000 000001   000000 000001    ................
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:82   
   1     063   000000 000002   000000 000002   000000 000002   000000 000002    ................
   1     067   000000 000002   000000 000002   000000 000002                    ............

NSACTABL
 Sect OctLoc
   1     072   501004 014015   032034 035036   037*** ******                    ............

MICRO_EDIT
 Sect OctLoc
   1     075   104070 321207   323201 ******                                    D8......

MICRO_SEQN
 Sect OctLoc
   1     077   201107 070321   201*** ******                                    .G8.....

(unnamed)
 Sect OctLoc
   1     101   125103 040040   040040 040040   044101 114111   102040 040040    UC      $ALIB
   1     105   040040 040040   040044 130105   121040 040040   104105 114124         $XEQ   DELT
   1     111   101040 040040   115044 104117   040156 157164   040141 166141    A   M$DO not ava
   1     115   151154 141142   154145 056040                                    ilable.

(unnamed)
 Sect OctLoc
   3     000   000000 006003   000005 777640   000077 777640   000040 040040    .........?...
   3     004   000003 777640   005150 200000   000575 360400   037040 040040    .....h.......
   3     010   101040 040040   000007 777640   036040 040040   100040 040040    A   .....   @
   3     014   677777 777777                                                    ....
      596     5788                                                /**/
      597     5789    1   END DDQ$READ;
      598     5790        %EOD;

PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:83   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDQ$READ.

   Procedure DDQ$READ requires 832 words for executable code.
   Procedure DDQ$READ requires 218 words of local(AUTO) storage.
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:84   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:85   
          MINI XREF LISTING

ACHARS
      1869**DCL      5409>>CALLBLT
ACTABL
      1857**DCL      1869--REDEF
ACTYPE
      1870**DCL      5410>>ASSIGN
ARET IN PROCEDURE WRITE_CHUNK
      5693**LABEL    5675--CALLALT  5682--CALLALT
ARETDEV0
      5634**LABEL    5777--CALLALT
ARETDEV1
      5634**LABEL    5784--CALLALT
ARETR0
      5477**LABEL    5374--CALLALT
ARETW1
      5634**LABEL    5628--CALLALT  5635--CALLALT
ARETW2
      5634**LABEL    5428--CALLALT
ARETW3
      5634**LABEL    5451--CALLALT
ARETW4
      5634**LABEL    5457--CALLALT
ARETWE0
      5634**LABEL    5472--CALLALT
ARETWE1
      5634**LABEL    5478--CALLALT
B$ALT.CODE
      1694**DCL      1694--REDEF    1695--REDEF    1695--REDEF
B$ALT.ERR.CODE
      1696**DCL      5488>>ASSIGN   5648>>IF       5650>>IF
B$ALT.ERR.ERR#
      1696**DCL      1696--REDEF
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:86   
B$ALT.EVID
      1695**DCL      1695--REDEF    1695--REDEF
B$JIT.CPFLAGS1
       758**DCL      5431>>IF
B$JIT.CPFLAGS1.SLEAZE
       763**DCL       763--REDEF
B$JIT.ERR.MID
       670**DCL       670--REDEF
B$JIT.JRESPEAK
       831**DCL       832--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       940**DCL       940--REDEF     941--REDEF
B$JIT.PNR
       844**DCL       844--REDEF
B$JIT.TSLINE
       938**DCL       939--REDEF
B$JIT$
      1761**DCL       664--IMP-PTR  5431>>IF
B$TCB.ALT$
      1690**DCL      5488>>ASSIGN   5648>>IF       5650>>IF
B$TCB$
      1760**DCL      5488>>ASSIGN   5648>>IF       5650>>IF
BUF$
      1525**DCL        32--PROC     1681--IMP-PTR  5364>>ASSIGN   5373>>ASSIGN   5379--ENTRY    5542>>ASSIGN
      5602--ENTRY    5604--ENTRY    5609--ENTRY    5718--ENTRY    5740>>ASSIGN
BUFF$ER
      1681**DCL      5364--ASSIGN   5373<<ASSIGN
CASECODE
      1535**DCL      5499<<ASSIGN   5502<<ASSIGN   5503<<ASSIGN   5506>>DOCASE
CHAR1
      1688**DCL      5618<<ASSIGN   5622<<ASSIGN   5625>>ASSIGN   5627<<ASSIGN   5630>>ASSIGN   5633<<ASSIGN
      5724<<ASSIGN   5727<<ASSIGN
D
      1536**DCL      5606<<ASSIGN   5611<<ASSIGN   5676>>IF       5720<<ASSIGN   5735--ASSIGN   5738>>ASSIGN
      5764<<ASSIGN   5769<<ASSIGN   5773--ASSIGN   5776>>ASSIGN   5778>>IF
DDE$ERROR
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:87   
      4636**DCL-ENT  5509--CALL     5515--CALL
DUA$EXITDELTA
      4637**DCL-ENT  5490--CALL     5510--CALL     5516--CALL     5527--CALL     5649--CALL     5659--CALL
DUA$READ
      4638**DCL-ENT  5371--CALL     5529--CALL
DUE$ERRMSG
      4639**DCL-ENT  5491--CALL     5662--CALL
DUU$TRUNC
      4640**DCL-ENT  5406--CALL
D_M$DELT#
      1759**DCL      5356--ASSIGN   5363>>ASSIGN   5381--ASSIGN
D_M$DO#
      1758**DCL      5357--ASSIGN   5382--ASSIGN   5538>>ASSIGN   5606>>ASSIGN   5676>>IF       5683>>ASSIGN
      5720>>ASSIGN   5764>>ASSIGN   5778>>IF
ECHO$
      1548**DCL      1685--IMP-PTR  5450>>ASSIGN   5471>>ASSIGN   5539<<ASSIGN
ECHO$BUF
      1685**DCL      5450--ASSIGN   5471--ASSIGN
ECHOBUF
      1539**DCL      5539--ASSIGN
ECHOBUF.TEXT
      1541**DCL      5443<<CALLBLT  5447<<CALLBLT  5469<<CALLBLT
ECHOBUF.VFC
      1540**DCL      5439<<ASSIGN   5440<<ASSIGN   5468<<ASSIGN
ECHO_SIZE
      1551**DCL      1687--IMP-SIZ  5444<<ASSIGN   5448<<ASSIGN   5450>>ASSIGN   5470<<ASSIGN   5471>>ASSIGN
EL$DODCB
      1555**DCL      5656--ASSIGN   5657--ASSIGN
EL$DODCB.PROCESSOR
      1555**DCL      5652<<ASSIGN
EL$DODCB.TXT
      1555**DCL      5653<<ASSIGN
ERRCODE
      1534**DCL      5488<<ASSIGN   5489>>IF       5489>>IF       5492>>IF       5504>>IF
F$DCB.ACTPOS
      1733**DCL      1733--REDEF
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:88   
F$DCB.ARS#
      1707**DCL      1707--REDEF    5375>>ASSIGN   5494>>ASSIGN   5519>>ASSIGN
F$DCB.ASN#
      1722**DCL      5559>>IF
F$DCB.ATTR
      1726**DCL      1727--REDEF
F$DCB.BORROW
      1741**DCL      1741--REDEF    1741--REDEF    1741--REDEF
F$DCB.DCBNAME.L
      1755**DCL      1755--IMP-SIZ
F$DCB.DDEV.IC#
      1713**DCL      5401>>IF       5498>>IF       5550>>IF
F$DCB.DDEV.UCOUT#
      1714**DCL      5431>>IF       5473>>IF       5676>>IF       5778>>IF
F$DCB.DDEV.XEQ#
      1714**DCL      5552>>IF
F$DCB.EOMCHAR#
      1711**DCL      1711--REDEF    5376>>ASSIGN
F$DCB.FLDID
      1736**DCL      1736--REDEF
F$DCB.FORM$
      1730**DCL      1730--REDEF
F$DCB.FSECT
      1746**DCL      1746--REDEF
F$DCB.FSN#
      1723**DCL      1723--REDEF    1723--REDEF    1724--REDEF
F$DCB.HEADER$
      1729**DCL      1729--REDEF
F$DCB.IASN
      1750**DCL      5500>>IF
F$DCB.IXTNSIZE#
      1727**DCL      1727--REDEF
F$DCB.LASTSTA$
      1716**DCL      1716--REDEF
F$DCB.LVL
      1742**DCL      1742--REDEF
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:89   
F$DCB.NAME#.C
      1717**DCL      1717--REDEF
F$DCB.NOEOF
      1739**DCL      1739--REDEF
F$DCB.NRECS#
      1728**DCL      1728--REDEF
F$DCB.NRECX
      1747**DCL      1747--REDEF
F$DCB.OHDR
      1739**DCL      1739--REDEF
F$DCB.ORG#
      1722**DCL      1722--REDEF    5559>>IF       5739>>IF
F$DCB.PRECNO
      1745**DCL      1745--REDEF
F$DCB.RCSZ
      1751**DCL      1751--REDEF
F$DCB.RES#
      1718**DCL      1718--REDEF
F$DCB.SETX
      1730**DCL      1730--REDEF
F$DCB.TAB$
      1730**DCL      1730--REDEF
F$DCB.TDA
      1744**DCL      1745--REDEF
F$DCB.WIDTH#
      1714**DCL      5358>>IF       5360>>ASSIGN   5383>>IF       5385>>ASSIGN
F$DCB.WSN#
      1718**DCL      1718--REDEF
FPTDEVICE
      1569**DCL      5774<<ASSIGN   5777<>CALL     5784<>CALL
FPTDEVICE.V
      1570**DCL      5775--ASSIGN
FPTDEVICE.V.DCB#
      1570**DCL      5776<<ASSIGN   5783<<ASSIGN
FPTDEVICE.V_
      1569**DCL      5775<<ASSIGN
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:90   
FPTREAD
      1594**DCL      5361<<ASSIGN   5374<>CALL
FPTREAD.BUF_
      1596**DCL      5364<<ASSIGN
FPTREAD.KEY_
      1594**DCL      5365<<ASSIGN
FPTREAD.STATION_
      1597**DCL      1598--REDEF
FPTREAD.V
      1598**DCL      5362--ASSIGN
FPTREAD.V.DCB#
      1598**DCL      5363<<ASSIGN
FPTREAD.V.DVBYTE.REREAD#
      1609**DCL      1609--REDEF
FPTREAD.V.INDX#
      1607**DCL      1607--REDEF
FPTREAD.V_
      1594**DCL      5362<<ASSIGN
FPTWRITE
      1634**DCL      5423<<ASSIGN   5428<>CALL     5451<>CALL     5457<>CALL     5472<>CALL     5478<>CALL
      5536<<ASSIGN   5675<>CALL     5682<>CALL     5736<<ASSIGN
FPTWRITE.BUF_
      1634**DCL      5426<<ASSIGN   5450<<ASSIGN   5456<<ASSIGN   5471<<ASSIGN   5742<<ASSIGN
FPTWRITE.BUF_.BOUND
      1634**DCL      5634<<ASSIGN   5673<<ASSIGN   5673>>ASSIGN   5687<<ASSIGN   5687>>ASSIGN
FPTWRITE.BUF_.BUF$
      1636**DCL      5625>>ASSIGN   5627>>ASSIGN   5629<<ASSIGN   5629>>ASSIGN   5630>>ASSIGN   5633>>ASSIGN
      5672<<ASSIGN   5672>>ASSIGN   5686<<ASSIGN   5686>>ASSIGN
FPTWRITE.STATION_
      1636**DCL      1636--REDEF
FPTWRITE.V
      1637**DCL      5424--ASSIGN   5537--ASSIGN   5737--ASSIGN
FPTWRITE.V.DCB#
      1637**DCL      5427<<ASSIGN   5477<<ASSIGN   5538<<ASSIGN   5681<<ASSIGN   5683<<ASSIGN   5738<<ASSIGN
FPTWRITE.V.DVBYTE.VFC#
      1643**DCL      1643--REDEF    5671>>IF       5685>>IF       5739<<ASSIGN
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:91   
FPTWRITE.V_
      1634**DCL      5424<<ASSIGN   5537<<ASSIGN   5737<<ASSIGN
FPTWRSYSLOG
      1676**DCL      5654<<ASSIGN   5658<>CALL
FPTWRSYSLOG.ENTRY_
      1676**DCL      5656<<ASSIGN
FPTWRSYSLOG.V
      1676**DCL      5655--ASSIGN
FPTWRSYSLOG.V.SIZE#
      1678**DCL      5657<<ASSIGN
FPTWRSYSLOG.V_
      1676**DCL      5655<<ASSIGN
FPT_DEVICE
      1776**DCL      5774>>ASSIGN
FPT_DEVICE.V
      1777**DCL      1776--DCLINIT
FPT_READ
      1802**DCL      5361>>ASSIGN
FPT_READ.STATION_
      1805**DCL      1806--REDEF
FPT_READ.V
      1806**DCL      1802--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
      1817**DCL      1817--REDEF
FPT_READ.V.INDX#
      1815**DCL      1815--REDEF
FPT_WRITE
      1843**DCL      5423>>ASSIGN   5536>>ASSIGN   5736>>ASSIGN
FPT_WRITE.STATION_
      1845**DCL      1845--REDEF
FPT_WRITE.V
      1846**DCL      1843--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
      1852**DCL      1852--REDEF
FPT_WRSYSLOG
      1661**DCL      5654>>ASSIGN
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:92   
FPT_WRSYSLOG.V
      1661**DCL      1661--DCLINIT
ISSACT
      5392**LABEL    5392--CALLALT
IX
      1533**DCL      5392<<CALLBLT  5409<<CALLBLT  5410<<ASSIGN   5410>>ASSIGN   5413<<ASSIGN   5415>>DOCASE
      5452>>IF
KEYBUF
      1542**DCL      5365--ASSIGN
KEYBUF.DIGITS
      1545**DCL      5564<<CALLBLT  5565>>CALLBLT  5568<<CALLBLT  5569>>CALLBLT
KEYBUF.REC
      1544**DCL      5559>>IF       5564>>CALLBLT
KEYBUF.SIZE
      1543**DCL      5559>>IF
KEYBUF.TOSTR
      1546**DCL      5544--ASSIGN   5547<<ASSIGN   5554<<ASSIGN   5558--ASSIGN   5565<<CALLBLT  5569<<CALLBLT
LEFT
      1537**DCL      5624<<ASSIGN   5626>>DOWHILE  5631<<ASSIGN   5631>>ASSIGN   5634>>ASSIGN
M$DELT$
      1531**DCL      5356<<ASSIGN   5375>>ASSIGN   5376>>ASSIGN   5381<<ASSIGN   5401>>IF       5494>>ASSIGN
      5498>>IF       5500>>IF       5519>>ASSIGN   5550>>IF       5552>>IF       5559>>IF       5559>>IF
M$DEVICE
        47**DCL-ENT  5777--CALL     5784--CALL
M$DO$
      1530**DCL      5357<<ASSIGN   5358>>IF       5360>>ASSIGN   5382<<ASSIGN   5383>>IF       5385>>ASSIGN
      5431>>IF       5473>>IF       5676>>IF       5735<<ASSIGN   5739>>IF       5773<<ASSIGN   5778>>IF
M$READ
        44**DCL-ENT  5374--CALL
M$WRITE
        44**DCL-ENT  5428--CALL     5451--CALL     5457--CALL     5472--CALL     5478--CALL     5675--CALL
      5682--CALL
M$WRSYSLOG
        92**DCL-ENT  5658--CALL
M$XXX
        55**DCL-ENT  5663--CALL
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:93   
MICRO_EDIT
      1883**DCL      5565>>CALLBLT
MICRO_SEQN
      1890**DCL      5569>>CALLBLT
NORMAL
      5383**LABEL    5377--GOTO     5496--GOTO     5520--GOTO
NSACHARS
      1882**DCL      5392>>CALLBLT
NSACTABL
      1873**DCL      1882--REDEF
NXTLN
      5656**LABEL    5658--CALLALT
ORIG_VFC
      1538**DCL      5625<<ASSIGN   5633>>ASSIGN
PBUF$
      1528**DCL      1682--IMP-PTR  5443>>CALLBLT  5447>>CALLBLT  5469>>CALLBLT  5542<<ASSIGN   5618>>ASSIGN
      5622>>ASSIGN   5724>>ASSIGN   5727>>ASSIGN   5740<<ASSIGN   5742>>ASSIGN
PBUFF$ER
      1682**DCL      5443>>CALLBLT  5447>>CALLBLT  5469>>CALLBLT  5742--ASSIGN
POSI$
      1549**DCL      1684--IMP-PTR  5443>>CALLBLT  5469>>CALLBLT  5544<<ASSIGN
POSI$TION
      1684**DCL      5443>>CALLBLT  5469>>CALLBLT
POSI_SIZE
      1552**DCL      1684--IMP-SIZ  5443>>CALLBLT  5444>>ASSIGN   5469>>CALLBLT  5470>>ASSIGN   5548<<ASSIGN
      5551<<ASSIGN   5555<<ASSIGN   5558<<ASSIGN
PROM$
      1550**DCL      1683--IMP-PTR  5443>>CALLBLT  5447>>CALLBLT  5469>>CALLBLT  5540<<ASSIGN
PROM$PT
      1683**DCL      5443>>CALLBLT  5447>>CALLBLT  5469>>CALLBLT
PROM_SIZE
      1553**DCL      1683--IMP-SIZ  5443>>CALLBLT  5444>>ASSIGN   5447>>CALLBLT  5448>>ASSIGN   5469>>CALLBLT
      5470>>ASSIGN   5541<<ASSIGN
PSIZE
      1529**DCL      1682--IMP-SIZ  5443>>CALLBLT  5444>>ASSIGN   5447>>CALLBLT  5448>>ASSIGN   5469>>CALLBLT
      5470>>ASSIGN   5543<<ASSIGN   5741<<ASSIGN   5742>>ASSIGN
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:94   
REREAD
      5365**LABEL    5530--GOTO
SETUPE
      5534**PROC     5437--CALL     5467--CALL
SETUPW
      5733**PROC     5615--CALL     5721--CALL
SIZE
      1526**DCL        32--PROC     1681--IMP-SIZ  5364>>ASSIGN   5373>>ASSIGN   5379--ENTRY    5602--ENTRY
      5604--ENTRY    5609--ENTRY    5624>>ASSIGN   5718--ENTRY
S_D.ACT
      3530**DCL      5376<<ASSIGN   5392>>CALLBLT  5396--CALLBLT  5396>>CALLBLT  5409>>CALLBLT  5495<<ASSIGN
      5518<<ASSIGN
S_D.ALIB_SAID_ECHO
      3447**DCL      5431>>IF       5441>>IF       5545>>IF
S_D.ALIB_SAID_QUIET
      3449**DCL      5421>>IF       5431>>IF       5464>>IF       5669>>IF
S_D.BATCH
      3796**DCL      5473>>IF       5512>>IF       5526>>IF       5676>>IF       5778>>IF
S_D.BREAK
      3366**DCL      5387<<ASSIGN   5486<<ASSIGN
S_D.BREAK_PRINTED
      4134**DCL      5388<<ASSIGN   5487<<ASSIGN
S_D.COPY
      3945**DCL      5473>>IF       5676>>IF       5778>>IF
S_D.CURRENT_CHANNEL
      4269**DCL      4271--REDEF
S_D.DEBUGA
      3421**DCL      3423--REDEF
S_D.DUMPDCB
      4075**DCL      5611>>ASSIGN   5769>>ASSIGN
S_D.ECHO
      3947**DCL      5431>>IF       5464>>IF
S_D.EIS
      4379**DCL      4408--REDEF
S_D.EOM
      3961**DCL      5390>>IF
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:95   
S_D.ERROR
      3350**DCL      5508<<ASSIGN   5514<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      4312**DCL      4313--REDEF    4327--REDEF
S_D.INPUT
      3584**DCL      5396<<CALLBLT
S_D.JDE
      3926**DCL      3927--REDEF
S_D.L$.VALUE
      3479**DCL      3485--REDEF    3493--REDEF    3496--REDEF    3499--REDEF    3502--REDEF
S_D.L$.VALUE.L
      3480**DCL      3481--REDEF    3482--REDEF
S_D.L6_MESSAGE_BUF
      4333**DCL      4335--REDEF
S_D.LWEXTEND
      4119**DCL      5419<<ASSIGN   5455<<ASSIGN   5459<<ASSIGN   5616>>IF       5620<<ASSIGN   5728<<ASSIGN
S_D.M$DELTA_RES
      3578**DCL      5370<<ASSIGN   5500>>IF
S_D.NCHARS
      3443**DCL      5375<<ASSIGN   5396>>CALLBLT  5397<<ASSIGN   5397>>ASSIGN   5494<<ASSIGN   5519<<ASSIGN
      5543>>ASSIGN
S_D.OUTPUT
      4299**DCL      4301--REDEF
S_D.OUT_WIDTH
      3352**DCL      5359<<ASSIGN   5360<<ASSIGN   5384<<ASSIGN   5385<<ASSIGN   5626>>DOWHILE  5629>>ASSIGN
      5631>>ASSIGN   5741>>ASSIGN
S_D.PROMPT.TEXT
      4101**DCL      5540--ASSIGN
S_D.PROMPT.VFC
      4099**DCL      5438>>IF       5541--ASSIGN
S_D.PROMPT_SIZE
      4095**DCL      5541>>ASSIGN
S_D.RCBC.WRITE_THRU
      3554**DCL      5405>>IF       5407<<ASSIGN   5463<<ASSIGN
S_D.READPOS
      4085**DCL      5568>>CALLBLT
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:96   
S_D.REMOTE_MSG.FNCC
      4318**DCL      4319--REDEF
S_D.REMOTE_MSG.STXC
      4314**DCL      4315--REDEF
S_D.REMOTE_MSG.SUBFNCC
      4322**DCL      4323--REDEF
S_D.RESET_IN
      3898**DCL      5367>>IF       5369<<ASSIGN
S_D.RUM
      3967**DCL      5403>>IF
S_D.SACT
      3526**DCL      5389<<ASSIGN   5395<<ASSIGN
S_D.SV
      3378**DCL      3399--REDEF
S_D.USVFC
      4089**DCL      5417<<ASSIGN   5616>>IF       5619<<ASSIGN   5722>>IF       5725<<ASSIGN
S_D$
      4630**DCL      3326--IMP-PTR  5359>>ASSIGN   5360>>ASSIGN   5367>>IF       5369>>ASSIGN   5370>>ASSIGN
      5375>>ASSIGN   5376>>ASSIGN   5384>>ASSIGN   5385>>ASSIGN   5387>>ASSIGN   5388>>ASSIGN   5389>>ASSIGN
      5390>>IF       5392>>CALLBLT  5395>>ASSIGN   5396>>CALLBLT  5396>>CALLBLT  5396>>CALLBLT  5397>>ASSIGN
      5397>>ASSIGN   5403>>IF       5405>>IF       5407>>ASSIGN   5409>>CALLBLT  5417>>ASSIGN   5419>>ASSIGN
      5421>>IF       5431>>IF       5431>>IF       5431>>IF       5438>>IF       5441>>IF       5455>>ASSIGN
      5459>>ASSIGN   5463>>ASSIGN   5464>>IF       5464>>IF       5473>>IF       5473>>IF       5486>>ASSIGN
      5487>>ASSIGN   5494>>ASSIGN   5495>>ASSIGN   5500>>IF       5508>>ASSIGN   5512>>IF       5514>>ASSIGN
      5518>>ASSIGN   5519>>ASSIGN   5526>>IF       5540>>ASSIGN   5541>>ASSIGN   5543>>ASSIGN   5545>>IF
      5568>>CALLBLT  5611>>ASSIGN   5616>>IF       5616>>IF       5619>>ASSIGN   5620>>ASSIGN   5626>>DOWHILE
      5629>>ASSIGN   5631>>ASSIGN   5669>>IF       5676>>IF       5676>>IF       5722>>IF       5725>>ASSIGN
      5728>>ASSIGN   5741>>ASSIGN   5769>>ASSIGN   5778>>IF       5778>>IF
UNKACT
      5410**LABEL    5409--CALLALT
VFCBUF
      1532**DCL      5425<<ASSIGN   5426--ASSIGN   5454<<ASSIGN   5456--ASSIGN   5630<<ASSIGN
WRITE
      5611**LABEL    5607--GOTO
WRITEIT1
      5616**LABEL    5729--GOTO
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:97   
WRITE_CHUNK
      5667**PROC     5628--CALL     5635--CALL
WRTOF
      5769**LABEL    5765--GOTO
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:98   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:99   
              MINI UREF LISTING

DDQ$READ      32**PROC
DDQ$READ_ALIB    5379**ENTRY
DDQ$WRITE    5602**ENTRY
DDQ$WRITED    5609**ENTRY
DDQ$WRITENC    5604**ENTRY
DDQ$WRITENU    5718**ENTRY
DDQ$WRTOF    5762**ENTRY
DDQ$WRTOFD    5767**ENTRY
M$ACCT      60**DCL-ENT
M$ACTIVATE      63**DCL-ENT
M$ALIB      56**DCL-ENT
M$ASUSER      58**DCL-ENT
M$ATTACH      65**DCL-ENT
M$BADPP      83**DCL-ENT
M$CGCTL      64**DCL-ENT
M$CGINFO      64**DCL-ENT
M$CHECK      45**DCL-ENT
M$CHGUNIT     103**DCL-ENT
M$CLOSE      43**DCL-ENT
M$CLRSTK     101**DCL-ENT
M$CMDVAR     112**DCL-ENT
M$CONFIG      73**DCL-ENT
M$CORRES      48**DCL-ENT
M$CPEXIT      57**DCL-ENT
M$CVM      81**DCL-ENT
M$CVOL      46**DCL-ENT
M$DCLFLD      73**DCL-ENT
M$DEACTIVATE      63**DCL-ENT
M$DELREC      45**DCL-ENT
M$DEQ     110**DCL-ENT
M$DETACH      65**DCL-ENT
M$DISPLAY     110**DCL-ENT
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:100  
M$DISPRES      50**DCL-ENT
M$DLIB      56**DCL-ENT
M$DRIBBLE      73**DCL-ENT
M$DRTN     101**DCL-ENT
M$DSUSER      58**DCL-ENT
M$ENQ     109**DCL-ENT
M$EOM      68**DCL-ENT
M$ERASE      74**DCL-ENT
M$ERR      55**DCL-ENT
M$ERRMSG     106**DCL-ENT
M$EVENT      98**DCL-ENT
M$EXHUME     107**DCL-ENT
M$EXIT      55**DCL-ENT
M$EXTEND      47**DCL-ENT
M$FDP      79**DCL-ENT
M$FDS      78**DCL-ENT
M$FEBOOT      71**DCL-ENT
M$FECTL      72**DCL-ENT
M$FEDUMP      71**DCL-ENT
M$FID     106**DCL-ENT
M$FINDPROC      60**DCL-ENT
M$FSUSER      58**DCL-ENT
M$FVP      80**DCL-ENT
M$FWCG      64**DCL-ENT
M$GBPL      84**DCL-ENT
M$GDDL      80**DCL-ENT
M$GDP      79**DCL-ENT
M$GDS      78**DCL-ENT
M$GETDCB      49**DCL-ENT
M$GETMOUSE      89**DCL-ENT
M$GETPM      90**DCL-ENT
M$GJOB     108**DCL-ENT
M$GLINEATTR      68**DCL-ENT
M$GOODPP      83**DCL-ENT
M$GPLATEN      76**DCL-ENT
M$GPROMPT      75**DCL-ENT
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:101  
M$GTRMATTR      69**DCL-ENT
M$GTRMCTL      67**DCL-ENT
M$GTRMTAB      70**DCL-ENT
M$GVP      79**DCL-ENT
M$HELP     106**DCL-ENT
M$INT      98**DCL-ENT
M$INTRTN      59**DCL-ENT
M$IOQ      94**DCL-ENT
M$JOBSTATS     108**DCL-ENT
M$KEYIN      48**DCL-ENT
M$LDEV      43**DCL-ENT
M$LDTRC      56**DCL-ENT
M$LIMIT      49**DCL-ENT
M$LINES      48**DCL-ENT
M$LINK      55**DCL-ENT
M$MADMUCK      51**DCL-ENT
M$MAKUSER      82**DCL-ENT
M$MBS      50**DCL-ENT
M$MDFFLD      74**DCL-ENT
M$MERC      99**DCL-ENT
M$MERCS     100**DCL-ENT
M$MIRROR      94**DCL-ENT
M$MONINFO     111**DCL-ENT
M$MPL      84**DCL-ENT
M$NODEINFO      75**DCL-ENT
M$NXTUSR     109**DCL-ENT
M$OCMSG     107**DCL-ENT
M$OLAY      55**DCL-ENT
M$OPEN      43**DCL-ENT
M$PAS      84**DCL-ENT
M$PATHCON     107**DCL-ENT
M$PDS      78**DCL-ENT
M$PFIL      45**DCL-ENT
M$PLATEN      69**DCL-ENT
M$PRECORD      47**DCL-ENT
M$PROCNAME      60**DCL-ENT
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:102  
M$PROFILE      71**DCL-ENT
M$PROMPT      67**DCL-ENT
M$RACST      51**DCL-ENT
M$RDSYSLOG      92**DCL-ENT
M$RELDCB      49**DCL-ENT
M$RELRES      50**DCL-ENT
M$RELSTARF      52**DCL-ENT
M$REM      52**DCL-ENT
M$RENV      99**DCL-ENT
M$REQUIRE      51**DCL-ENT
M$RETRY     100**DCL-ENT
M$RETRYS     100**DCL-ENT
M$REW      46**DCL-ENT
M$RLSFLD      74**DCL-ENT
M$RPRIV     102**DCL-ENT
M$RSPP      81**DCL-ENT
M$RSWITCH     103**DCL-ENT
M$RUE     109**DCL-ENT
M$SAD      82**DCL-ENT
M$SAVE      58**DCL-ENT
M$SCON      59**DCL-ENT
M$SCREECH      57**DCL-ENT
M$SENV      99**DCL-ENT
M$SETFMA      43**DCL-ENT
M$SETFP      72**DCL-ENT
M$SINPUT      70**DCL-ENT
M$SLCFLD      75**DCL-ENT
M$SMOUSE      89**DCL-ENT
M$SMPRT      81**DCL-ENT
M$SPRIV     102**DCL-ENT
M$SSC      82**DCL-ENT
M$SSWITCH     102**DCL-ENT
M$STATE     111**DCL-ENT
M$STD      83**DCL-ENT
M$STIMER      97**DCL-ENT
M$STLPP      80**DCL-ENT
PL6.E3A0      #001=DDQ$READ File=DUQ$READ.:E05TSI                                TUE 07/29/97 14:56 Page:103  
M$STRAP      97**DCL-ENT
M$STRMATTR      69**DCL-ENT
M$STRMCTL      67**DCL-ENT
M$STRMTAB      70**DCL-ENT
M$SYMBIO     108**DCL-ENT
M$SYSCON      94**DCL-ENT
M$SYSID     112**DCL-ENT
M$TDCLOSE      93**DCL-ENT
M$TDIO      93**DCL-ENT
M$TDOPEN      92**DCL-ENT
M$TDREQCPU      93**DCL-ENT
M$TEMPWROC      87**DCL-ENT
M$TIME     110**DCL-ENT
M$TRAP      97**DCL-ENT
M$TRMISC      72**DCL-ENT
M$TRMPRG      68**DCL-ENT
M$TRTN     101**DCL-ENT
M$TRUNC      44**DCL-ENT
M$TTIMER      97**DCL-ENT
M$UC      67**DCL
M$UMPL      84**DCL-ENT
M$UNFID     106**DCL-ENT
M$UNLATCH      63**DCL-ENT
M$UNSHARE      60**DCL-ENT
M$USRFIELD     103**DCL-ENT
M$VIRTUAL      78**DCL-ENT
M$WAIT     101**DCL-ENT
M$WEOF      46**DCL-ENT
M$XCON      98**DCL-ENT
M$XCONRTN      59**DCL-ENT
M$XEQTIME     111**DCL-ENT
M$XFLUSH      52**DCL-ENT
M$XMOUSE      89**DCL-ENT
M$YC      57**DCL-ENT

PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:104  
      599        1        /*T***********************************************************/
      600        2        /*T*                                                         */
      601        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      602        4        /*T*                                                         */
      603        5        /*T***********************************************************/
      604        6        /*P* NAME: DUQ$OCMSG
      605        7             PURPOSE: OUTPUT A MESSAGE ON THE OPERATORS CONSOLE (ADMIN)
      606        8        */
      607        9        DUQ$OCMSG: PROC(MSGNUM);
      608       10                                                /**/
      609       11    1   DCL MSGNUM UBIN;
      610       12    1   DCL CHAR24 CHAR(24) BASED;
      611       13                                                /**/
      612       14        %INCLUDE CP_6;
      613       95        %INCLUDE EL$TABLES;
      614      418        %EL$ANLZ (STCLASS=AUTO);
      615      422        %EL$DODCB (STCLASS=AUTO);
      616      425        %INCLUDE EL_SUBS_C;
      617      509        %FPT_OCMSG (FPTN=FPTOCMSG,
      618      510                  STCLASS=);
      619      526        %FPT_OCMSG (FPTN=FPT_OCMSG,
      620      527                  STCLASS=CONSTANT,
      621      528                  OCTYPE=ADMIN);
      622      544        %FPT_WRSYSLOG (FPTN=FPT_WRSYSLOG,
      623      545                       STCLASS=CONSTANT,
      624      546                       TYPE=EL_ANLZ);
      625      561        %FPT_WRSYSLOG (FPTN=FPT_WRSYSLOG_DO,
      626      562                       STCLASS=CONSTANT,
      627      563                       TYPE=EL_DODCB);
      628      578        %FPT_WRSYSLOG (FPTN=FPTWRSYSLOG, STCLASS=AUTO);
      629      593        %INCLUDE XUH_MACRO_C;
      630      677        %INCLUDE DD_SD_M;
      631     2013        %S_D;
      632     3331    1   DCL B$JIT$ PTR SYMREF;
      633     3332    1   DCL DUE$ERRMSG ENTRY;
      634     3333                                                /**/
      635     3334    1        FPTOCMSG = FPT_OCMSG;
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:105  
      636     3335    1        FPTOCMSG.V_ = VECTOR( FPTOCMSG.V );
      637     3336    1        FPTOCMSG.V.MSG# = MSGNUM;
      638     3337    1        CALL M$OCMSG ( FPTOCMSG ) ALTRET( ARETKEY );
      639     3338    1        RETURN;
      640     3339    1   ARETKEY:
      641     3340    1        CALL DUE$ERRMSG;
      642     3341    1        RETURN;
      643     3342    1   DUQ$WRERRLOG: ENTRY(MSGNUM);
      644     3343        /*P* NAME: DUQ$WRERRMSG
      645     3344             PURPOSE: WRITES THE ANLZ-MODIFIED ERROR LOG ENTRY
      646     3345        */
      647     3346                                                /**/
      648     3347    1        EL$ANLZ.JIT = B$JIT$->CHAR24;
      649     3348    1        EL$ANLZ.TXT = S_D.OUTPUT;
      650     3349    1        FPTWRSYSLOG = FPT_WRSYSLOG;
      651     3350    1        FPTWRSYSLOG.V_ = VECTOR(FPTWRSYSLOG.V);
      652     3351    1        FPTWRSYSLOG.ENTRY_ = VECTOR(EL$ANLZ);
      653     3352    1        FPTWRSYSLOG.V.SIZE# = SIZEW(EL$ANLZ);
      654     3353    1        CALL M$WRSYSLOG (FPTWRSYSLOG) ALTRET(ARETKEY);
      655     3354    1        RETURN;
      656     3355    1   DUQ$WRERRLOGDO: ENTRY(MSGNUM);
      657     3356        /*P* NAME: DUQ$WRERRMSGDO
      658     3357             PURPOSE: WRITES M$DO ERROR LOG ENTRY
      659     3358        */
      660     3359                                                /**/
      661     3360    1        EL$DODCB.PROCESSOR = 'DELTA';
      662     3361    1        EL$DODCB.TXT = 'Error Opening M$DO';
      663     3362    1        FPTWRSYSLOG = FPT_WRSYSLOG_DO;
      664     3363    1        FPTWRSYSLOG.V_ = VECTOR(FPTWRSYSLOG.V);
      665     3364    1        FPTWRSYSLOG.ENTRY_ = VECTOR(EL$DODCB);
      666     3365    1        FPTWRSYSLOG.V.SIZE# = SIZEW(EL$DODCB);
      667     3366    1        CALL M$WRSYSLOG (FPTWRSYSLOG) ALTRET(ARETKEY);
      668     3367    1        RETURN;
      669     3368    1   END DUQ$OCMSG;

PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:106  
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUQ$OCMSG.

   Procedure DUQ$OCMSG requires 80 words for executable code.
   Procedure DUQ$OCMSG requires 70 words of local(AUTO) storage.

    No errors detected in file DUQ$READ.:E05TSI    .

PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:107  

 Object Unit name= DUQ$OCMSG                                  File name= DUQ$READ.:E05TOU
 UTS= JUL 29 '97 14:57:24.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     33     41  DUQ$OCMSG
    2   Proc  even  none    80    120  DUQ$OCMSG
    3  RoData even  none     3      3  DUQ$OCMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  DUQ$OCMSG
     2     26                  yes      Std        1  DUQ$WRERRLOG
     2     64                  yes      Std        1  DUQ$WRERRLOGDO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DUE$ERRMSG
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:108  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    S_D$                                  B$JIT$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:109  


      599        1        /*T***********************************************************/
      600        2        /*T*                                                         */
      601        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      602        4        /*T*                                                         */
      603        5        /*T***********************************************************/
      604        6        /*P* NAME: DUQ$OCMSG
      605        7             PURPOSE: OUTPUT A MESSAGE ON THE OPERATORS CONSOLE (ADMIN)
      606        8        */
      607        9        DUQ$OCMSG: PROC(MSGNUM);

      9  2 000000   000000 700200 xent  DUQ$OCMSG    TSX0  ! X66_AUTO_1
         2 000001   000106 000001                    ZERO    70,1

      608       10                                                /**/
      609       11    1   DCL MSGNUM UBIN;
      610       12    1   DCL CHAR24 CHAR(24) BASED;
      611       13                                                /**/
      612       14        %INCLUDE CP_6;
      613       95        %INCLUDE EL$TABLES;
      614      418        %EL$ANLZ (STCLASS=AUTO);
      615      422        %EL$DODCB (STCLASS=AUTO);
      616      425        %INCLUDE EL_SUBS_C;
      617      509        %FPT_OCMSG (FPTN=FPTOCMSG,
      618      510                  STCLASS=);
      619      526        %FPT_OCMSG (FPTN=FPT_OCMSG,
      620      527                  STCLASS=CONSTANT,
      621      528                  OCTYPE=ADMIN);
      622      544        %FPT_WRSYSLOG (FPTN=FPT_WRSYSLOG,
      623      545                       STCLASS=CONSTANT,
      624      546                       TYPE=EL_ANLZ);
      625      561        %FPT_WRSYSLOG (FPTN=FPT_WRSYSLOG_DO,
      626      562                       STCLASS=CONSTANT,
      627      563                       TYPE=EL_DODCB);
      628      578        %FPT_WRSYSLOG (FPTN=FPTWRSYSLOG, STCLASS=AUTO);
      629      593        %INCLUDE XUH_MACRO_C;
      630      677        %INCLUDE DD_SD_M;
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:110  
      631     2013        %S_D;
      632     3331    1   DCL B$JIT$ PTR SYMREF;
      633     3332    1   DCL DUE$ERRMSG ENTRY;
      634     3333                                                /**/
      635     3334    1        FPTOCMSG = FPT_OCMSG;

   3334  2 000002   000100 100400                    MLR     fill='000'O
         2 000003   000000 000050 1                  ADSC9   FPT_OCMSG                cn=0,n=40
         2 000004   200062 000050                    ADSC9   FPTOCMSG,,AUTO           cn=0,n=40

      636     3335    1        FPTOCMSG.V_ = VECTOR( FPTOCMSG.V );

   3335  2 000005   000000 235000 3                  LDA     0
         2 000006   200104 452500                    STP2    FPTWRSYSLOG+8,,AUTO
         2 000007   200104 236100                    LDQ     FPTWRSYSLOG+8,,AUTO
         2 000010   000070 036003                    ADLQ    56,DU
         2 000011   200062 757100                    STAQ    FPTOCMSG,,AUTO

      637     3336    1        FPTOCMSG.V.MSG# = MSGNUM;

   3336  2 000012   200003 470500                    LDP0    @MSGNUM,,AUTO
         2 000013   000000 235100                    LDA     0,,PR0
         2 000014   200070 755100                    STA     FPTOCMSG+6,,AUTO

      638     3337    1        CALL M$OCMSG ( FPTOCMSG ) ALTRET( ARETKEY );

   3337  2 000015   200062 630500                    EPPR0   FPTOCMSG,,AUTO
         2 000016   520001 713400                    CLIMB   alt,+40961
         2 000017   401000 401760                    pmme    nvectors=3
         2 000020   000022 702000 2                  TSX2    ARETKEY

      639     3338    1        RETURN;

   3338  2 000021   000000 702200 xent               TSX2  ! X66_ARET

      640     3339    1   ARETKEY:
      641     3340    1        CALL DUE$ERRMSG;
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:111  

   3340  2 000022   000002 631400 xsym  ARETKEY      EPPR1   B_VECTNIL+2
         2 000023   000000 701000 xent               TSX1    DUE$ERRMSG
         2 000024   000000 011000                    NOP     0

      642     3341    1        RETURN;

   3341  2 000025   000000 702200 xent               TSX2  ! X66_ARET

      643     3342    1   DUQ$WRERRLOG: ENTRY(MSGNUM);

   3342  2 000026   000000 700200 xent  DUQ$WRERRLOG TSX0  ! X66_AUTO_1
         2 000027   000106 000001                    ZERO    70,1

      644     3343        /*P* NAME: DUQ$WRERRMSG
      645     3344             PURPOSE: WRITES THE ANLZ-MODIFIED ERROR LOG ENTRY
      646     3345        */
      647     3346                                                /**/
      648     3347    1        EL$ANLZ.JIT = B$JIT$->CHAR24;

   3347  2 000030   000000 470400 xsym               LDP0    B$JIT$
         2 000031   040100 100500                    MLR     fill='040'O
         2 000032   000000 000030                    ADSC9   0,,PR0                   cn=0,n=24
         2 000033   200004 000030                    ADSC9   EL$ANLZ,,AUTO            cn=0,n=24

      649     3348    1        EL$ANLZ.TXT = S_D.OUTPUT;

   3348  2 000034   000000 471400 xsym               LDP1    S_D$
         2 000035   040100 100500                    MLR     fill='040'O
         2 000036   105335 000170                    ADSC9   2781,,PR1                cn=0,n=120
         2 000037   200013 000170                    ADSC9   EL$ANLZ+7,,AUTO          cn=0,n=120

      650     3349    1        FPTWRSYSLOG = FPT_WRSYSLOG;

   3349  2 000040   000100 100400                    MLR     fill='000'O
         2 000041   000012 000040 1                  ADSC9   FPT_WRSYSLOG             cn=0,n=32
         2 000042   200074 000040                    ADSC9   FPTWRSYSLOG,,AUTO        cn=0,n=32
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:112  

      651     3350    1        FPTWRSYSLOG.V_ = VECTOR(FPTWRSYSLOG.V);

   3350  2 000043   000000 235000 3                  LDA     0
         2 000044   200104 452500                    STP2    FPTWRSYSLOG+8,,AUTO
         2 000045   200104 236100                    LDQ     FPTWRSYSLOG+8,,AUTO
         2 000046   000100 036003                    ADLQ    64,DU
         2 000047   200074 757100                    STAQ    FPTWRSYSLOG,,AUTO

      652     3351    1        FPTWRSYSLOG.ENTRY_ = VECTOR(EL$ANLZ);

   3351  2 000050   000001 235000 3                  LDA     1
         2 000051   200104 452500                    STP2    FPTWRSYSLOG+8,,AUTO
         2 000052   200104 236100                    LDQ     FPTWRSYSLOG+8,,AUTO
         2 000053   000004 036003                    ADLQ    4,DU
         2 000054   200076 757100                    STAQ    FPTWRSYSLOG+2,,AUTO

      653     3352    1        FPTWRSYSLOG.V.SIZE# = SIZEW(EL$ANLZ);

   3352  2 000055   000045 235007                    LDA     37,DL
         2 000056   200102 755100                    STA     FPTWRSYSLOG+6,,AUTO

      654     3353    1        CALL M$WRSYSLOG (FPTWRSYSLOG) ALTRET(ARETKEY);

   3353  2 000057   200074 630500                    EPPR0   FPTWRSYSLOG,,AUTO
         2 000060   470001 713400                    CLIMB   alt,+28673
         2 000061   400400 401760                    pmme    nvectors=2
         2 000062   000022 702000 2                  TSX2    ARETKEY

      655     3354    1        RETURN;

   3354  2 000063   000000 702200 xent               TSX2  ! X66_ARET

      656     3355    1   DUQ$WRERRLOGDO: ENTRY(MSGNUM);

   3355  2 000064   000000 700200 xent  DUQ$WRERRLO* TSX0  ! X66_AUTO_1
         2 000065   000106 000001                    ZERO    70,1
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:113  

      657     3356        /*P* NAME: DUQ$WRERRMSGDO
      658     3357             PURPOSE: WRITES M$DO ERROR LOG ENTRY
      659     3358        */
      660     3359                                                /**/
      661     3360    1        EL$DODCB.PROCESSOR = 'DELTA';

   3360  2 000066   040100 100400                    MLR     fill='040'O
         2 000067   000032 000005 1                  ADSC9   FPT_WRSYSLOG_DO+8        cn=0,n=5
         2 000070   200051 000012                    ADSC9   EL$DODCB,,AUTO           cn=0,n=10

      662     3361    1        EL$DODCB.TXT = 'Error Opening M$DO';

   3361  2 000071   040100 100400                    MLR     fill='040'O
         2 000072   000034 000022 1                  ADSC9   FPT_WRSYSLOG_DO+10       cn=0,n=18
         2 000073   200053 400024                    ADSC9   EL$DODCB+2,,AUTO         cn=2,n=20

      663     3362    1        FPTWRSYSLOG = FPT_WRSYSLOG_DO;

   3362  2 000074   000100 100400                    MLR     fill='000'O
         2 000075   000022 000040 1                  ADSC9   FPT_WRSYSLOG_DO          cn=0,n=32
         2 000076   200074 000040                    ADSC9   FPTWRSYSLOG,,AUTO        cn=0,n=32

      664     3363    1        FPTWRSYSLOG.V_ = VECTOR(FPTWRSYSLOG.V);

   3363  2 000077   000000 235000 3                  LDA     0
         2 000100   200104 452500                    STP2    FPTWRSYSLOG+8,,AUTO
         2 000101   200104 236100                    LDQ     FPTWRSYSLOG+8,,AUTO
         2 000102   000100 036003                    ADLQ    64,DU
         2 000103   200074 757100                    STAQ    FPTWRSYSLOG,,AUTO

      665     3364    1        FPTWRSYSLOG.ENTRY_ = VECTOR(EL$DODCB);

   3364  2 000104   000002 235000 3                  LDA     2
         2 000105   200104 452500                    STP2    FPTWRSYSLOG+8,,AUTO
         2 000106   200104 236100                    LDQ     FPTWRSYSLOG+8,,AUTO
         2 000107   000051 036003                    ADLQ    41,DU
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:114  
         2 000110   200076 757100                    STAQ    FPTWRSYSLOG+2,,AUTO

      666     3365    1        FPTWRSYSLOG.V.SIZE# = SIZEW(EL$DODCB);

   3365  2 000111   000010 235007                    LDA     8,DL
         2 000112   200102 755100                    STA     FPTWRSYSLOG+6,,AUTO

      667     3366    1        CALL M$WRSYSLOG (FPTWRSYSLOG) ALTRET(ARETKEY);

   3366  2 000113   200074 630500                    EPPR0   FPTWRSYSLOG,,AUTO
         2 000114   470001 713400                    CLIMB   alt,+28673
         2 000115   400400 401760                    pmme    nvectors=2
         2 000116   000022 702000 2                  TSX2    ARETKEY

      668     3367    1        RETURN;

   3367  2 000117   000000 702200 xent               TSX2  ! X66_ARET

FPT_OCMSG
 Sect OctLoc
   1     000   000003 777640   000006 006000   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014   000000 023417   000000 000000    ................
   1     010   000000 000000   000000 000000                                    ........

FPT_WRSYSLOG
 Sect OctLoc
   1     012   000003 777640   000016 006000   000000 177640   000000 006014    ................
   1     016   000000 0000**   000000 000162   000000 000000   000000 000001    .......r........

FPT_WRSYSLOG_DO
 Sect OctLoc
   1     022   000003 777640   000026 006000   000000 177640   000000 006014    ................
   1     026   000000 0000**   000000 000466   000000 000000   000000 000001    ................

(unnamed)
 Sect OctLoc
   1     032   104105 114124   101040 040040   105162 162157   162040 117160    DELTA   Error Op
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:115  
   1     036   145156 151156   147040 115044   104117 040040                    ening M$DO

(unnamed)
 Sect OctLoc
   3     000   000003 777640   000044 777640   000007 777640                    .....$......
      669     3368    1   END DUQ$OCMSG;

PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:116  
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUQ$OCMSG.

   Procedure DUQ$OCMSG requires 80 words for executable code.
   Procedure DUQ$OCMSG requires 70 words of local(AUTO) storage.

    No errors detected in file DUQ$READ.:E05TSI    .
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:117  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:118  
          MINI XREF LISTING

ARETKEY
      3340**LABEL    3337--CALLALT  3353--CALLALT  3366--CALLALT
B$JIT$
      3331**DCL      3347>>ASSIGN
CHAR24
        12**DCL      3347>>ASSIGN
DUE$ERRMSG
      3332**DCL-ENT  3340--CALL
EL$ANLZ
       419**DCL      3351--ASSIGN   3352--ASSIGN
EL$ANLZ.JIT
       419**DCL      3347<<ASSIGN
EL$ANLZ.TXT
       419**DCL      3348<<ASSIGN
EL$DODCB
       423**DCL      3364--ASSIGN   3365--ASSIGN
EL$DODCB.PROCESSOR
       423**DCL      3360<<ASSIGN
EL$DODCB.TXT
       423**DCL      3361<<ASSIGN
FPTOCMSG
       521**DCL      3334<<ASSIGN   3337<>CALL
FPTOCMSG.V
       522**DCL      3335--ASSIGN
FPTOCMSG.V.MSG#
       522**DCL      3336<<ASSIGN
FPTOCMSG.V_
       521**DCL      3335<<ASSIGN
FPTWRSYSLOG
       589**DCL      3349<<ASSIGN   3353<>CALL     3362<<ASSIGN   3366<>CALL
FPTWRSYSLOG.ENTRY_
       589**DCL      3351<<ASSIGN   3364<<ASSIGN
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:119  
FPTWRSYSLOG.V
       589**DCL      3350--ASSIGN   3363--ASSIGN
FPTWRSYSLOG.V.SIZE#
       591**DCL      3352<<ASSIGN   3365<<ASSIGN
FPTWRSYSLOG.V_
       589**DCL      3350<<ASSIGN   3363<<ASSIGN
FPT_OCMSG
       539**DCL      3334>>ASSIGN
FPT_OCMSG.V
       540**DCL       539--DCLINIT
FPT_WRSYSLOG
       557**DCL      3349>>ASSIGN
FPT_WRSYSLOG.V
       557**DCL       557--DCLINIT
FPT_WRSYSLOG_DO
       574**DCL      3362>>ASSIGN
FPT_WRSYSLOG_DO.V
       574**DCL       574--DCLINIT
M$OCMSG
        87**DCL-ENT  3337--CALL
M$WRSYSLOG
        72**DCL-ENT  3353--CALL     3366--CALL
MSGNUM
        11**DCL         9--PROC     3336>>ASSIGN   3342--ENTRY    3355--ENTRY
S_D.CURRENT_CHANNEL
      2965**DCL      2967--REDEF
S_D.DEBUGA
      2117**DCL      2119--REDEF
S_D.EIS
      3075**DCL      3104--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      3008**DCL      3009--REDEF    3023--REDEF
S_D.JDE
      2622**DCL      2623--REDEF
S_D.L$.VALUE
      2175**DCL      2181--REDEF    2189--REDEF    2192--REDEF    2195--REDEF    2198--REDEF
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:120  
S_D.L$.VALUE.L
      2176**DCL      2177--REDEF    2178--REDEF
S_D.L6_MESSAGE_BUF
      3029**DCL      3031--REDEF
S_D.OUTPUT
      2995**DCL      2997--REDEF    3348>>ASSIGN
S_D.REMOTE_MSG.FNCC
      3014**DCL      3015--REDEF
S_D.REMOTE_MSG.STXC
      3010**DCL      3011--REDEF
S_D.REMOTE_MSG.SUBFNCC
      3018**DCL      3019--REDEF
S_D.SV
      2074**DCL      2095--REDEF
S_D$
      3326**DCL      2022--IMP-PTR  3348>>ASSIGN
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:121  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:122  
              MINI UREF LISTING

DUQ$OCMSG       9**PROC
DUQ$WRERRLOG    3342**ENTRY
DUQ$WRERRLOGDO    3355**ENTRY
M$ACCT      40**DCL-ENT
M$ACTIVATE      43**DCL-ENT
M$ALIB      36**DCL-ENT
M$ASUSER      38**DCL-ENT
M$ATTACH      45**DCL-ENT
M$BADPP      63**DCL-ENT
M$CGCTL      44**DCL-ENT
M$CGINFO      44**DCL-ENT
M$CHECK      25**DCL-ENT
M$CHGUNIT      83**DCL-ENT
M$CLOSE      23**DCL-ENT
M$CLRSTK      81**DCL-ENT
M$CMDVAR      92**DCL-ENT
M$CONFIG      53**DCL-ENT
M$CORRES      28**DCL-ENT
M$CPEXIT      37**DCL-ENT
M$CVM      61**DCL-ENT
M$CVOL      26**DCL-ENT
M$DCLFLD      53**DCL-ENT
M$DEACTIVATE      43**DCL-ENT
M$DELREC      25**DCL-ENT
M$DEQ      90**DCL-ENT
M$DETACH      45**DCL-ENT
M$DEVICE      27**DCL-ENT
M$DISPLAY      90**DCL-ENT
M$DISPRES      30**DCL-ENT
M$DLIB      36**DCL-ENT
M$DRIBBLE      53**DCL-ENT
M$DRTN      81**DCL-ENT
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:123  
M$DSUSER      38**DCL-ENT
M$ENQ      89**DCL-ENT
M$EOM      48**DCL-ENT
M$ERASE      54**DCL-ENT
M$ERR      35**DCL-ENT
M$ERRMSG      86**DCL-ENT
M$EVENT      78**DCL-ENT
M$EXHUME      87**DCL-ENT
M$EXIT      35**DCL-ENT
M$EXTEND      27**DCL-ENT
M$FDP      59**DCL-ENT
M$FDS      58**DCL-ENT
M$FEBOOT      51**DCL-ENT
M$FECTL      52**DCL-ENT
M$FEDUMP      51**DCL-ENT
M$FID      86**DCL-ENT
M$FINDPROC      40**DCL-ENT
M$FSUSER      38**DCL-ENT
M$FVP      60**DCL-ENT
M$FWCG      44**DCL-ENT
M$GBPL      64**DCL-ENT
M$GDDL      60**DCL-ENT
M$GDP      59**DCL-ENT
M$GDS      58**DCL-ENT
M$GETDCB      29**DCL-ENT
M$GETMOUSE      69**DCL-ENT
M$GETPM      70**DCL-ENT
M$GJOB      88**DCL-ENT
M$GLINEATTR      48**DCL-ENT
M$GOODPP      63**DCL-ENT
M$GPLATEN      56**DCL-ENT
M$GPROMPT      55**DCL-ENT
M$GTRMATTR      49**DCL-ENT
M$GTRMCTL      47**DCL-ENT
M$GTRMTAB      50**DCL-ENT
M$GVP      59**DCL-ENT
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:124  
M$HELP      86**DCL-ENT
M$INT      78**DCL-ENT
M$INTRTN      39**DCL-ENT
M$IOQ      74**DCL-ENT
M$JOBSTATS      88**DCL-ENT
M$KEYIN      28**DCL-ENT
M$LDEV      23**DCL-ENT
M$LDTRC      36**DCL-ENT
M$LIMIT      29**DCL-ENT
M$LINES      28**DCL-ENT
M$LINK      35**DCL-ENT
M$MADMUCK      31**DCL-ENT
M$MAKUSER      62**DCL-ENT
M$MBS      30**DCL-ENT
M$MDFFLD      54**DCL-ENT
M$MERC      79**DCL-ENT
M$MERCS      80**DCL-ENT
M$MIRROR      74**DCL-ENT
M$MONINFO      91**DCL-ENT
M$MPL      64**DCL-ENT
M$NODEINFO      55**DCL-ENT
M$NXTUSR      89**DCL-ENT
M$OLAY      35**DCL-ENT
M$OPEN      23**DCL-ENT
M$PAS      64**DCL-ENT
M$PATHCON      87**DCL-ENT
M$PDS      58**DCL-ENT
M$PFIL      25**DCL-ENT
M$PLATEN      49**DCL-ENT
M$PRECORD      27**DCL-ENT
M$PROCNAME      40**DCL-ENT
M$PROFILE      51**DCL-ENT
M$PROMPT      47**DCL-ENT
M$RACST      31**DCL-ENT
M$RDSYSLOG      72**DCL-ENT
M$READ      24**DCL-ENT
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:125  
M$RELDCB      29**DCL-ENT
M$RELRES      30**DCL-ENT
M$RELSTARF      32**DCL-ENT
M$REM      32**DCL-ENT
M$RENV      79**DCL-ENT
M$REQUIRE      31**DCL-ENT
M$RETRY      80**DCL-ENT
M$RETRYS      80**DCL-ENT
M$REW      26**DCL-ENT
M$RLSFLD      54**DCL-ENT
M$RPRIV      82**DCL-ENT
M$RSPP      61**DCL-ENT
M$RSWITCH      83**DCL-ENT
M$RUE      89**DCL-ENT
M$SAD      62**DCL-ENT
M$SAVE      38**DCL-ENT
M$SCON      39**DCL-ENT
M$SCREECH      37**DCL-ENT
M$SENV      79**DCL-ENT
M$SETFMA      23**DCL-ENT
M$SETFP      52**DCL-ENT
M$SINPUT      50**DCL-ENT
M$SLCFLD      55**DCL-ENT
M$SMOUSE      69**DCL-ENT
M$SMPRT      61**DCL-ENT
M$SPRIV      82**DCL-ENT
M$SSC      62**DCL-ENT
M$SSWITCH      82**DCL-ENT
M$STATE      91**DCL-ENT
M$STD      63**DCL-ENT
M$STIMER      77**DCL-ENT
M$STLPP      60**DCL-ENT
M$STRAP      77**DCL-ENT
M$STRMATTR      49**DCL-ENT
M$STRMCTL      47**DCL-ENT
M$STRMTAB      50**DCL-ENT
PL6.E3A0      #002=DUQ$OCMSG File=DUQ$READ.:E05TSI                               TUE 07/29/97 14:57 Page:126  
M$SYMBIO      88**DCL-ENT
M$SYSCON      74**DCL-ENT
M$SYSID      92**DCL-ENT
M$TDCLOSE      73**DCL-ENT
M$TDIO      73**DCL-ENT
M$TDOPEN      72**DCL-ENT
M$TDREQCPU      73**DCL-ENT
M$TEMPWROC      67**DCL-ENT
M$TIME      90**DCL-ENT
M$TRAP      77**DCL-ENT
M$TRMISC      52**DCL-ENT
M$TRMPRG      48**DCL-ENT
M$TRTN      81**DCL-ENT
M$TRUNC      24**DCL-ENT
M$TTIMER      77**DCL-ENT
M$UC      47**DCL
M$UMPL      64**DCL-ENT
M$UNFID      86**DCL-ENT
M$UNLATCH      43**DCL-ENT
M$UNSHARE      40**DCL-ENT
M$USRFIELD      83**DCL-ENT
M$VIRTUAL      58**DCL-ENT
M$WAIT      81**DCL-ENT
M$WEOF      26**DCL-ENT
M$WRITE      24**DCL-ENT
M$XCON      78**DCL-ENT
M$XCONRTN      39**DCL-ENT
M$XEQTIME      91**DCL-ENT
M$XFLUSH      32**DCL-ENT
M$XMOUSE      69**DCL-ENT
M$XXX      35**DCL-ENT
M$YC      37**DCL-ENT
