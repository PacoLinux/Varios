VERSION E05

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:1    
        1        1        /*M*     UMC$CMDVAR - COMMAND VARIABLE MANIPLUATION SERVICE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        /*P*     NAME:     UMC$CMDVAR
        9        9        *
       10       10                 PURPOSE:  UMC$CMDVAR is a monitor service called to manipulate
       11       11                      command variables.  This enhances communication between
       12       12                      processors, user programmes, and the command programme */
       13       13        /**/
       14       14        /*F*     NAME:     UMC$CMDVAR
       15       15        *
       16       16                 FUNCTION: UMC$CMDVAR is a service called by the user to manipulate
       17       17                      command variables.  The variables are stored in character
       18       18                      format in the user-inaccessible file '*S'.  This service
       19       19                      stores, fetches, and deletes command variables from the
       20       20                      *S file.                                           */
       21       21        /**/
       22       22        /*D*     NAME:     UMC$CMDVAR
       23       23        *
       24       24                 CALL:     UMC$CMDVAR is called via a PMME with an FPT containing
       25       25                      three parameters. These parameters are:
       26       26        *
       27       27                      V - Value field of FPT contains:
       28       28                           FUN - requested function code.  May indicate STORE,
       29       29                                 FETCH, DELETE, or LIST.
       30       30        *
       31       31                      NAME - A 31 character TEXTC field containing the name of the
       32       32                           command variable in question.
       33       33        *
       34       34                      VALUE - A TEXTC field of up to 511 characters (plus the
       35       35                           count byte) in length.  This field is filled on a
       36       36                           FETCH operation, and used in a STORE operation.
       37       37        *
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:2    
       38       38            INTERFACE: UMC$CMDVAR calls:
       39       39                      FMM$DFLOPN - To open M$* to *S.
       40       40                      Also UMC$CMDVAR uses the B$PSn$ pointers to look at the
       41       41                        parameters passed to it.
       42       42        *
       43       43            DESCRIPTION:   When UMC$CMDVAR is entered it initializes some
       44       44                 local storage and the FPTs in the AUTO stack. The following
       45       45                 existance checks are made:
       46       46                 FUNCTION     NAME      VALUE
       47       47                 --------     ----      -----
       48       48                 STORE        required  required
       49       49                 FETCH        required  required
       50       50                 DELETE       required  optional
       51       51                 LIST         required  required
       52       52
       53       53        *
       54       54        */
       55       55        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:3    
       56       56        UMC$CMDVAR: PROC ;
       57       57        /**/
       58       58        /*************************************************************/
       59       59        /*   %SUBS   %SUBS   %SUBS   %SUBS   %SUBS   %SUBS   %SUBS   */
       60       60        /*************************************************************/
       61       61        /**/
       62       62        %SUB TRUE# = '1'B;
       63       63        %SUB FALSE# = '0'B;
       64       64
       65       65        %SUB V_PS# = 0;
       66       66        %SUB NAME_PS# = 1;
       67       67        %SUB VALUE_PS# = 2;
       68       68        %SUB PNAME_PS# = 3;
       69       69        %SUB PACCT_PS# = 4;
       70       70        %SUB PPSN_PS# = 5;
       71       71
       72       72        %SUB V$# = B$PS0$;
       73       73        %SUB NAME$# = B$PS1$;
       74       74        %SUB VALUE$# = B$PS2$;
       75       75        %SUB PNAME$# = B$PS3$;
       76       76        %SUB PACCT$# = B$PS4$;
       77       77        %SUB PPSN$# = B$PS5$;
       78       78        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:4    
       79       79        /***********************************************************************/
       80       80        /*    ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   */
       81       81        /**********************************************************************/
       82       82    1   DCL FMM$DFLOPN ENTRY;                   /* TO OPEN M$* TO CMDVAR FILE         */
       83       83    1   DCL FMM$SCRUB ENTRY(1);
       84       84    1   DCL FMP$CLSJ ENTRY;
       85       85    1   DCL HFF$DSIZ ENTRY(2) ALTRET;           /* GET PSn SIZE                       */
       86       86    1   DCL HFF$TRAPALT ENTRY ALTRET;           /* TO PROVIDE TRAP ENTRY ADDRESS      */
       87       87    1   DCL M$MREAD ENTRY(1) ALTRET;            /* INTERNAL READ                      */
       88       88    1   DCL M$MWRITE ENTRY(1) ALTRET;           /* INTERNAL WRITE                     */
       89       89    1   DCL M$MDELREC ENTRY(1) ALTRET;          /* INTERNAL DELREC                    */
       90       90    1   DCL FMD$GBUF ENTRY(1);                  /* TO ALLOCATE A POOL BUFFER          */
       91       91    1   DCL FMD$RBUF ENTRY(1);                  /* TO RELEASE A POOL BUFFER           */
       92       92    1   DCL HFF$NILERASE ENTRY(1) ALTRET;       /* TEST FOR PASSED PARAMETER          */
       93       93        /**/
       94       94        /*********************************************************************/
       95       95        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       96       96        /*********************************************************************/
       97       97        %INCLUDE F$DCB;
       98      146        %INCLUDE CP_6_SUBS;
       99      686        %INCLUDE CP_6;
      100     6245        %INCLUDE B$JIT;
      101     6848        %INCLUDE B$ROSEG;
      102     6911        %INCLUDE UM$CP6V_C;
      103     7098        %INCLUDE UM_ERRORS_C;
      104     7132        %INCLUDE F_ERRORS_C;                    /* FILE error SUBs                    */
      105     7372        %INCLUDE B$TABLES_C;
      106     7480        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:5    
      107     7481        /********************************************************************/
      108     7482        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
      109     7483        /********************************************************************/
      110     7484        /**/
      111     7485        %FPT_READ     (FPTN=UMC_RFPT,
      112     7486                       STCLASS = AUTO);
      113     7525        %FPT_WRITE    (FPTN=UMC_WFPT,
      114     7526                       STCLASS = AUTO);
      115     7557        %FPT_DELREC  (FPTN=UMC_DELRECFPT,
      116     7558                       STCLASS = AUTO);
      117     7577        %FPT_PRECORD  (FPTN = UMC_PRECORDFPT,
      118     7578                       STCLASS = AUTO);
      119     7599        /**/
      120     7600        %FPT_READ     (FPTN = INIT_RFPT,
      121     7601                       KEYS = YES,
      122     7602                       STCLASS = CONSTANT);
      123     7641        %FPT_WRITE    (FPTN = INIT_WFPT,
      124     7642                       STCLASS = CONSTANT);
      125     7673        %FPT_DELREC  (FPTN = INIT_DELRECFPT,
      126     7674                       STCLASS = CONSTANT);
      127     7693        %FPT_PRECORD  (FPTN = INIT_PRECORDFPT,
      128     7694                       KEYS = YES,              /* POSITION TO KEY                    */
      129     7695                       N = 0,                   /* Without offset                     */
      130     7696                       KEYR = YES,              /* RETURN KEY                         */
      131     7697                       STCLASS = CONSTANT);
      132     7718        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:6    
      133     7719        /*****************************************************************************/
      134     7720        /*   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   */
      135     7721        /*****************************************************************************/
      136     7722        /**/
      137     7723    1   DCL M$STAR_NUM UBIN(36) CONSTANT INIT(1); /* M$* IS DCB ONE                   */
      138     7724        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:7    
      139     7725        /*****************************************************************/
      140     7726        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
      141     7727        /*****************************************************************/
      142     7728        /**/
      143     7729    1   DCL B$JIT$ PTR SYMREF;
      144     7730    1   DCL B$PS0$ PTR SYMREF;
      145     7731    1   DCL B$PS1$ PTR SYMREF;
      146     7732    1   DCL B$PS2$ PTR SYMREF;
      147     7733    1   DCL B$PS3$ PTR SYMREF;
      148     7734    1   DCL B$PS4$ PTR SYMREF;
      149     7735    1   DCL B$PS5$ PTR SYMREF;
      150     7736        /**/
      151     7737        %B$SR_NON_ALPHA;
      152     7741        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:8    
      153     7742        /**********************************************************************/
      154     7743        /*   ALLOCATED DATA   ALLOCATED DATA   ALLOCATED DATA   ALLOCATED DAT */
      155     7744        /**********************************************************************/
      156     7745        /**/
      157     7746        /*  The following data resides in a one-page pool buffer that we request on   */
      158     7747        /*  entry and must release on exit.  Implied pointers are used so that this   */
      159     7748        /*  area 'looks like' AUTO                                                    */
      160     7749        /**/
      161     7750    1   DCL 1 CMD_KEY ALIGNED BASED(POOLBUF$),
      162     7751    1         2 LEN UBIN(9) UNAL,
      163     7752    1         2 START CHAR(4) UNAL,
      164     7753    1         2 TEXT CHAR(31) UNAL,
      165     7754    1         2 * CHAR(143) UNAL,
      166     7755    1         2 * CHAR(77) UNAL;
      167     7756    1   DCL 1 PRIVATE_KEY REDEF CMD_KEY ALIGNED,
      168     7757    1         2 LEN UBIN(9) UNAL,
      169     7758    1         2 START CHAR(4) UNAL,
      170     7759    1         2 FID,
      171     7760    1           3 NAME CHAR(31) UNAL,
      172     7761    1           3 ACCT CHAR(8) UNAL,
      173     7762    1           3 PSN CHAR(8) UNAL,
      174     7763    1         2 TEXT CHAR(127) UNAL,
      175     7764    1         2 * CHAR(77) UNAL;                /* Prevent trap on too long return key*/
      176     7765    1   DCL 1 PRIVATE_FID BASED(PFID$),
      177     7766    1         2 NAME CHAR(31) UNAL,
      178     7767    1         2 ACCT CHAR(8) UNAL,
      179     7768    1         2 PSN CHAR(8) UNAL;
      180     7769        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:9    
      181     7770        /***************************************************************/
      182     7771        /* AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
      183     7772        /***************************************************************/
      184     7773        /**/
      185     7774    1   DCL ERROR UBIN WORD;
      186     7775    1   DCL IDX UBIN WORD;                      /* Used for SEARCH                    */
      187     7776    1   DCL TABLEVAL UBIN WORD;                 /* Used for SEARCH                    */
      188     7777    1   DCL START UBIN WORD;                    /* Used for SEARCH                    */
      189     7778    1   DCL M$STAR$ PTR ALIGNED;                /* POINTER TO M$*                     */
      190     7779    1   DCL POOLBUF$ PTR ALIGNED;               /* LOCATES ALLOCATED POOL BUFFER      */
      191     7780    1   DCL PFID$ PTR ALIGNED;                  /* LOCATES ALLOCATED ITEM             */
      192     7781        /* The following must be UBIN BYTE to prevent non-DALIGNED bit-string MRLs    */
      193     7782        /* that have hardware problems.                                               */
      194     7783    1   DCL NAME_SIZE SBIN WORD AUTO;
      195     7784    1   DCL 1 NAME_SIZE_ REDEF NAME_SIZE ALIGNED,
      196     7785    1         2 * BIT(27) UNAL,
      197     7786    1         2 SIZE UBIN(9) UNAL;
      198     7787    1   DCL VALUE_SIZE SBIN WORD AUTO;
      199     7788    1   DCL 1 VALUE_SIZE_ REDEF VALUE_SIZE ALIGNED,
      200     7789    1         2 * BIT(27) UNAL,
      201     7790    1         2 SIZE UBIN(9) UNAL;
      202     7791    1   DCL NAME_PS_SIZE SBIN WORD AUTO;
      203     7792    1   DCL 1 NAME_PS_SIZE_ REDEF NAME_PS_SIZE ALIGNED,
      204     7793    1         2 * BIT(27) UNAL,
      205     7794    1         2 SIZE UBIN(9) UNAL;
      206     7795    1   DCL VALUE_PS_SIZE SBIN WORD AUTO;
      207     7796    1   DCL 1 VALUE_PS_SIZE_ REDEF VALUE_PS_SIZE ALIGNED,
      208     7797    1         2 * BIT(27) UNAL,
      209     7798    1         2 SIZE UBIN(9) UNAL;
      210     7799        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:10   
      211     7800        /**********************************************************************/
      212     7801        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
      213     7802        /**********************************************************************/
      214     7803        /**/
      215     7804        %FPT$CMDVAR_V  (FPTN = FPT$CMDVAR);
      216     7807    1   DCL 1 VAR$NAME BASED CALIGNED,
      217     7808    1         2 LEN UBIN(9) UNAL,
      218     7809    1         2 TEXT CHAR(VAR$NAME.LEN) UNAL;
      219     7810    1   DCL 1 VAR$VALUE BASED CALIGNED,
      220     7811    1         2 LEN UBIN(9) UNAL,
      221     7812    1         2 TEXT CHAR(VAR$VALUE.LEN) UNAL;
      222     7813        %VLP_SN(FPTN = VLP$SN,STCLASS = BASED);
      223     7826        %VLP_ACCT(FPTN = VLP$ACCT,STCLASS = BASED);
      224     7839        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:11   
      225     7840        /**/
      226     7841        /*****************************************************************************/
      227     7842        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      228     7843        /*****************************************************************************/
      229     7844        /**/
      230     7845    1           ERROR = 0;                      /* No errors yet                      */
      231     7846    1           CALL FMD$GBUF (POOLBUF$);       /* GET A ONE-PAGE POOL BUFFER         */
      232     7847    1           PFID$ = PINCRC(POOLBUF$,SIZEC(CMD_KEY)); /* Locate allocated item     */
      233     7848    1           M$STAR$ = DCBADDR(M$STAR_NUM);  /* M$STAR IS DCB 1                    */
      234     7849        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:12   
      235     7850        /**/
      236     7851        /*  PROCESS NAME FIELD  */
      237     7852        /**/
      238     7853    1           CALL HFF$TRAPALT ALTRET(BAD_NAME); /* Any TRAP after this is bad name */
      239     7854        /**/
      240     7855    1           CALL HFF$DSIZ(NAME_PS#,NAME_PS_SIZE) ALTRET(BAD_NAME); /* Is NAME?   */
      241     7856    1           NAME_SIZE = 0;
      242     7857    1           NAME_SIZE_.SIZE = NAME$# -> VAR$NAME.LEN;
      243     7858    1           IF (NAME_SIZE < 1               /* IF NAME too small                  */
      244     7859    1               AND V$# -> FPT$CMDVAR.FUN ~= %CMD_LIST#) /* AND we care           */
      245     7860    1            OR NAME_SIZE +1 > NAME_PS_SIZE /* Bad framing vector                 */
      246     7861    1            THEN                           /* Bad name size                      */
      247     7862    1              GOTO BAD_NAME;
      248     7863        /**/                                    /* Check NAME for bad characters      */
      249     7864    1           IF V$# -> FPT$CMDVAR.FUN = %CMD_LIST#
      250     7865    1            OR V$# -> FPT$CMDVAR.PRIVATE
      251     7866    1            THEN
      252     7867    1             GOTO NAME_OK;                 /* Any characters are OK              */
      253     7868    1           START = 0;                      /* Start check at beginning           */
      254     7869    1   CHECK:  CALL SEARCH(IDX,TABLEVAL,B$SR_NON_ALPHA,
      255     7870    1            NAME$# -> VAR$NAME.TEXT,START) ALTRET(NAME_OK);
      256     7871    1           IF BINBIT(TABLEVAL,9) & %B$SR#SYM
      257     7872    1            AND IDX ~= 0
      258     7873    1            THEN                           /* '$' is ok if not at beginning      */
      259     7874    2             DO;
      260     7875    2               START = IDX +1;
      261     7876    2               GOTO CHECK;                 /* Keep looking                       */
      262     7877    2               END;
      263     7878    1   BAD_NAME:                               /* Invalid name detected              */
      264     7879    1           ERROR = %E$BADCMDNAME;
      265     7880    1           GOTO CMDVAR_ALTRTN;
      266     7881        /**/
      267     7882    1   NAME_OK: ;
      268     7883        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:13   
      269     7884                                                /* Munge name into KEY                */
      270     7885    1            IF V$# -> FPT$CMDVAR.PRIVATE
      271     7886    1             THEN                          /* PRIVATE CMDVAR                     */
      272     7887    2              DO;
      273     7888    2                IF NAME_SIZE > 127
      274     7889    2                 THEN                      /* Too big                            */
      275     7890    2                   GOTO BAD_NAME;
      276     7891    2                PRIVATE_KEY.LEN = NAME_SIZE +51;
      277     7892    2                PRIVATE_KEY.START = 'VAR$'; /* PRIVATE CMDVARs prefixed by 'VAR$'*/
      278     7893    2                PRIVATE_KEY.TEXT = NAME$# -> VAR$NAME.TEXT;
      279     7894    2                CALL HFF$NILERASE(PNAME_PS#) ALTRET(NO_PNAME);
      280     7895    2                PRIVATE_KEY.FID.NAME = PNAME$# -> VAR$NAME.TEXT;
      281     7896    3                DO WHILE (FALSE#);
      282     7897    3   NO_PNAME:       PRIVATE_KEY.FID.NAME = ' ';
      283     7898    3                   END;
      284     7899    2                CALL HFF$NILERASE(PACCT_PS#) ALTRET(NO_PACCT);
      285     7900    2                PRIVATE_KEY.FID.ACCT = PACCT$# -> VLP$ACCT.ACCT#;
      286     7901    3                DO WHILE (FALSE#);
      287     7902    3   NO_PACCT:       PRIVATE_KEY.FID.ACCT = ' ';
      288     7903    3                   END;
      289     7904    2                CALL HFF$NILERASE(PPSN_PS#) ALTRET(NO_PPSN);
      290     7905    2                PRIVATE_KEY.FID.PSN = PPSN$# -> VLP$SN.SN#(0);
      291     7906    3                DO WHILE (FALSE#);
      292     7907    3   NO_PPSN:        PRIVATE_KEY.FID.PSN = ' ';
      293     7908    3                   END;
      294     7909    2                PRIVATE_FID = PRIVATE_KEY.FID;
      295     7910    2                END;
      296     7911    1             ELSE                          /* IBEX CMDVAR                        */
      297     7912    2              DO;
      298     7913    2                IF NAME_SIZE > 31
      299     7914    2                 THEN                      /* Too big                            */
      300     7915    2                   GOTO BAD_NAME;
      301     7916    2                CMD_KEY.LEN = NAME_SIZE +4;
      302     7917    2                CMD_KEY.START = 'VAR_';    /* IBEX CMDVARs prefixed by 'VAR_'    */
      303     7918    2                CMD_KEY.TEXT = NAME$# -> VAR$NAME.TEXT;
      304     7919    2                END;
      305     7920        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:14   
      306     7921        /**/
      307     7922        /*  PROCESS VALUE FIELD  */
      308     7923        /**/
      309     7924    1            CALL HFF$TRAPALT ALTRET(BAD_VALUE); /* Any TRAP after this is bad val*/
      310     7925        /**/
      311     7926    1            IF V$# -> FPT$CMDVAR.FUN = %CMD_DELETE#
      312     7927    1             THEN                          /* No VALUE field needed              */
      313     7928    1               GOTO VALUE_OK;
      314     7929    1            CALL HFF$DSIZ(VALUE_PS#,VALUE_PS_SIZE) ALTRET(BAD_VALUE);
      315     7930    1            VALUE_SIZE = 0;
      316     7931    1            VALUE_SIZE_.SIZE = VALUE$# -> VAR$VALUE.LEN;
      317     7932    1            IF V$# -> FPT$CMDVAR.FUN = %CMD_STORE#
      318     7933    1             THEN                          /* VALUE field is to be USED          */
      319     7934    1               IF VALUE_SIZE +1 > VALUE_PS_SIZE
      320     7935    1                THEN                       /* Bad count in TEXTC                 */
      321     7936    1                  GOTO BAD_VALUE;
      322     7937    1                ELSE                       /* OK                                 */
      323     7938    1                  ;
      324     7939    1             ELSE                          /* VALUE field is to be filled        */
      325     7940    1               IF VALUE_PS_SIZE < 2
      326     7941    1                   THEN
      327     7942    2                     DO;
      328     7943    2   BAD_VALUE:        ERROR = %E$BADCMDCALL;
      329     7944    2                     GOTO CMDVAR_ALTRTN;
      330     7945    2                     END;
      331     7946    1   VALUE_OK:;
      332     7947        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:15   
      333     7948        /**/
      334     7949        /*  PREPARE AND OPEN THE STAR DCB TO *S FILE  */
      335     7950        /**/
      336     7951    1           CALL HFF$TRAPALT ALTRET(FATAL_ALT); /* Any TRAP after this is fatal   */
      337     7952        /**/
      338     7953    1           IF (M$STAR$ -> F$DCB.FCD = TRUE#)
      339     7954    1            THEN                           /* STAR is OPEN, CLOSE it             */
      340     7955    2             DO;
      341     7956    2              B$JIT$ -> B$JIT.DCB$ = M$STAR$;
      342     7957    2              CALL FMP$CLSJ;
      343     7958    2              END;
      344     7959    1           CALL FMM$SCRUB(M$STAR$);
      345     7960        /**/
      346     7961    1           M$STAR$ -> F$DCB.NAME.L = 2;
      347     7962    1           M$STAR$ -> F$DCB.NAME.C = '*S';
      348     7963    1           M$STAR$ -> F$DCB.PASS = ' ';
      349     7964        /**/
      350     7965    1           M$STAR$ -> F$DCB.FUN = %UPDATE#;
      351     7966    1           M$STAR$ -> F$DCB.ASN = %FILE#;
      352     7967    1           M$STAR$ -> F$DCB.ACS = %DIRECT#;
      353     7968    1           M$STAR$ -> F$DCB.RES= ' ';
      354     7969    1           M$STAR$ -> F$DCB.AMFLG = FALSE#;
      355     7970    1           M$STAR$ -> F$DCB.WSR = 1;
      356     7971        /**/
      357     7972    1           B$JIT$ -> B$JIT.DCB$ = M$STAR$;
      358     7973                                                /* SET UP DCB NOW CALL DEFAULT OPEN   */
      359     7974    1           CALL FMM$DFLOPN;
      360     7975    1           CALL HFF$TRAPALT ALTRET(FATAL_ALT); /* Any TRAP after this is fatal   */
      361     7976    1           IF (M$STAR$ -> F$DCB.FCD = FALSE#)
      362     7977    1            THEN                           /* Not OPEN                           */
      363     7978    1              GOTO CMDVAR_EXIT;
      364     7979        /**/
      365     7980        /*  NOW PERFORM THE REQUESTED FUNCTION  */
      366     7981        /**/
      367     7982    2           DO CASE(V$# -> FPT$CMDVAR.FUN);
      368     7983        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:16   
      369     7984    2             CASE(%CMD_STORE#);             /* STORE the passed value             */
      370     7985    2               UMC_WFPT = INIT_WFPT;       /* Initialize WRITE FPT               */
      371     7986    2               UMC_WFPT.V_ = VECTOR(UMC_WFPT.V);
      372     7987    2               UMC_WFPT.V.DCB# = M$STAR_NUM;
      373     7988    2               IF VALUE_SIZE = 0
      374     7989    2                THEN                       /* Have to write zero-length record   */
      375     7990    2                  UMC_WFPT.BUF_ = VECTOR(NIL);
      376     7991    2                ELSE                       /* VALUE is non-zero in length        */
      377     7992    3                  DO;
      378     7993    3                    UMC_WFPT.BUF_.BOUND = VALUE_SIZE -1;
      379     7994    3                    UMC_WFPT.BUF_.BUF$ = PINCRC(VALUE$#,1);
      380     7995    3                    END;
      381     7996    2               UMC_WFPT.KEY_ = VECTOR(CMD_KEY);
      382     7997        /**/
      383     7998    2               CALL M$MWRITE (UMC_WFPT) ALTRET(FATAL_ALT);
      384     7999        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:17   
      385     8000    2             CASE(%CMD_FETCH#);             /* FETCH into VALUE                   */
      386     8001    2               UMC_RFPT = INIT_RFPT;       /* Initialize READ FPT                */
      387     8002    2               UMC_RFPT.V_ = VECTOR(UMC_RFPT.V);
      388     8003    2               UMC_RFPT.V.DCB# = M$STAR_NUM;
      389     8004    2               UMC_RFPT.BUF_.BUF$ = PINCRC(VALUE$#,1);
      390     8005    2               UMC_RFPT.BUF_.BOUND = VALUE_PS_SIZE -2; /* BOUND=LEN-1-count byte */
      391     8006    2               UMC_RFPT.KEY_ = VECTOR(CMD_KEY);
      392     8007        /**/
      393     8008    2               VALUE_SIZE = VALUE_PS_SIZE -1; /* Maximum TEXT size               */
      394     8009    2               VALUE$# -> VAR$VALUE.LEN = VALUE_SIZE_.SIZE;
      395     8010    2               VALUE$# -> VAR$VALUE.TEXT = ' '; /* Blank buffer before READ      */
      396     8011        /**/
      397     8012    2               CALL M$MREAD (UMC_RFPT) ALTRET(FUNCTION_ALT);
      398     8013    2               VALUE_SIZE = M$STAR$ -> F$DCB.ARS; /* Get READ size               */
      399     8014    2               VALUE$# -> VAR$VALUE.LEN = VALUE_SIZE_.SIZE;
      400     8015        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:18   
      401     8016    2             CASE(%CMD_DELETE#);            /* DELETE the NAMEd variable          */
      402     8017    2               UMC_DELRECFPT = INIT_DELRECFPT; /* Initialize DELREC FPT          */
      403     8018    2               UMC_DELRECFPT.V_ = VECTOR(UMC_DELRECFPT.V);
      404     8019    2               UMC_DELRECFPT.V.DCB# = M$STAR_NUM;
      405     8020    2               UMC_DELRECFPT.KEY_ = VECTOR(CMD_KEY);
      406     8021        /**/
      407     8022    2               CALL M$MDELREC (UMC_DELRECFPT) ALTRET(FUNCTION_ALT);
      408     8023        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:19   
      409     8024    2             CASE(%CMD_LIST#);              /* LIST variable after NAMEd one      */
      410     8025    2               UMC_PRECORDFPT = INIT_PRECORDFPT; /* Initialize PRECORD FPT       */
      411     8026    2               UMC_PRECORDFPT.V_ = VECTOR(UMC_PRECORDFPT.V);
      412     8027    2               UMC_PRECORDFPT.V.DCB# = M$STAR_NUM;
      413     8028    2               UMC_PRECORDFPT.KEY_ = VECTOR(CMD_KEY);
      414     8029        /**/                                    /* Try to find PASSED NAME            */
      415     8030    2               CALL M$PRECORD (UMC_PRECORDFPT) ALTRET(GOT_NEXT);
      416     8031        /**/                                    /* Got PASSED, find the next one!     */
      417     8032    2               UMC_PRECORDFPT.V.KEYS# = %NO#;
      418     8033    2               UMC_PRECORDFPT.V.N# = 1;
      419     8034    2               CALL M$PRECORD (UMC_PRECORDFPT) ALTRET(NONESUCH);
      420     8035    2   GOT_NEXT:   ;                           /* Got record PAST passed NAME        */
      421     8036        /**/
      422     8037    2               IF CMD_KEY.LEN = 0
      423     8038    2                THEN                       /* EOF is next                        */
      424     8039    2                  GOTO NONESUCH;           /* There is no next COMMAND VARIABLE  */
      425     8040    3               DO SELECT(CMD_KEY.START);
      426     8041    3                  SELECT('VAR_');          /* We got back an IBEX command var'bl */
      427     8042    3                    IF CMD_KEY.LEN < 5
      428     8043    3                     THEN                  /* Not enough key to be IBEX CMDVAR   */
      429     8044    3                       GOTO NONESUCH;
      430     8045    3                    VALUE_SIZE = CMD_KEY.LEN -4; /* Ignore 'VAR_'                */
      431     8046    3                    VALUE$# -> VAR$VALUE.LEN = VALUE_SIZE_.SIZE;
      432     8047    3                    IF VALUE_SIZE +1 > VALUE_PS_SIZE
      433     8048    3                     THEN                  /* VALUE area not big enough          */
      434     8049    3                       GOTO BAD_VALUE;
      435     8050    3                    VALUE$# -> VAR$VALUE.TEXT = CMD_KEY.TEXT;
      436     8051    3                  SELECT('VAR$');          /* We got back a PRIVATE command var  */
      437     8052    3                    IF PRIVATE_KEY.LEN < 52
      438     8053    3                     THEN                  /* Not enough key to be PRIVATE CMDVR */
      439     8054    3                       GOTO NONESUCH;
      440     8055    3                    IF PRIVATE_KEY.FID ~= PRIVATE_FID
      441     8056    3                     THEN                  /* This PRIVATE is for wrong proces'r */
      442     8057    3                       GOTO NONESUCH;
      443     8058    3                    VALUE_SIZE = PRIVATE_KEY.LEN -51; /* Ignore prefix           */
      444     8059    3                    VALUE$# -> VAR$VALUE.LEN = VALUE_SIZE_.SIZE;
      445     8060    3                    IF VALUE_SIZE +1 > VALUE_PS_SIZE
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:20   
      446     8061    3                     THEN                  /* VALUE area not big enough          */
      447     8062    3                       GOTO BAD_VALUE;
      448     8063    3                    VALUE$# -> VAR$VALUE.TEXT = PRIVATE_KEY.TEXT;
      449     8064    3                  SELECT(ELSE);            /* We got something other than CMDVAR */
      450     8065    3                    GOTO NONESUCH;
      451     8066    3                  END;                     /* END SELECT                         */
      452     8067        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:21   
      453     8068    2             CASE(ELSE);                   /* Bad FUN passed                     */
      454     8069    2               ERROR = %E$BADCMDCALL;      /* Bad call                           */
      455     8070    2               END;                        /* END DO CASE                        */
      456     8071        /**/
      457     8072    1           GOTO CMDVAR_EXIT;
      458     8073        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:22   
      459     8074    1   FUNCTION_ALT:
      460     8075    1           IF B$JIT$ ->B$JIT.ERR.CODE = %E$NOKEY
      461     8076    1            THEN                           /* There is no such command variable  */
      462     8077    1   NONESUCH:  ERROR = %E$NOTCMDNAME;
      463     8078    1            ELSE           /* Some other (fatal) error           */
      464     8079    1   FATAL_ALT: ERROR = %E$BADCMDCALL;
      465     8080        /**/
      466     8081    1   CMDVAR_ALTRTN:
      467     8082    1          ;
      468     8083        /**/
      469     8084        /*E*    ERROR:    UMC-E$BADCMDNAME-3
      470     8085                MESSAGE: Bad command variable name.
      471     8086        */
      472     8087        /**/
      473     8088        /*E*    ERROR:    UMC-E$NOTCMDNAME-3
      474     8089                MESSAGE: There is no such command variable.
      475     8090        */
      476     8091        /**/
      477     8092        /*E*    ERROR:    UMC-E$BADCMDCALL-3
      478     8093                MESSAGE: Bad call to M$CMDVAR
      479     8094        */
      480     8095        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:23   
      481     8096    1   CMDVAR_EXIT:                            /* RETURN TO PMME HANDLER             */
      482     8097        /**/
      483     8098    1           CALL HFF$TRAPALT;               /* CLEAR TRAP HANDLER                 */
      484     8099    1           CALL FMD$RBUF (POOLBUF$);       /* RELEASE OUR POOL BUFFER            */
      485     8100        /**/
      486     8101    1           B$JIT$ -> B$JIT.DCB$ = M$STAR$; /* CLOSE M$STAR                       */
      487     8102    1           CALL FMP$CLSJ;
      488     8103        /**/
      489     8104    1           IF ERROR = 0
      490     8105    1            THEN                           /* Normal return                      */
      491     8106    1              B$JIT.ERR = '0'B;
      492     8107    1            ELSE                           /* ALTRETURN!                         */
      493     8108    2              DO;
      494     8109    2                B$JIT.ERR.FCG = '2515'O;   /* UM                                 */
      495     8110    2                B$JIT.ERR.MID = '03'O;     /* C                                  */
      496     8111    2                B$JIT.ERR.MON = '1'B;
      497     8112    2                B$JIT.ERR.CODE = ERROR;
      498     8113    2                B$JIT.ERR.SEV = 3;
      499     8114    2                END;
      500     8115        /**/
      501     8116    1           RETURN;                         /* RETURN TO USER                     */
      502     8117        /**/
      503     8118    1   END UMC$CMDVAR;

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:24   
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   UM_ERRORS_C.:E05TOU  is referenced.
   UM$CP6V_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure UMC$CMDVAR.

   Procedure UMC$CMDVAR requires 545 words for executable code.
   Procedure UMC$CMDVAR requires 64 words of local(AUTO) storage.

    No errors detected in file UMC$CMDVAR.:E05TSI    .

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:25   

 Object Unit name= UMC$CMDVAR                                 File name= UMC$CMDVAR.:E05TOU
 UTS= JUL 30 '97 06:57:23.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     50     62  UMC$CMDVAR
    2   Proc  even  none   545   1041  UMC$CMDVAR
    3  RoData even  none    15     17  UMC$CMDVAR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  UMC$CMDVAR
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:26   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
 yes     yes           Std       1 M$MWRITE
         yes           Std       1 FMD$GBUF
 yes     yes           Std       0 HFF$TRAPALT
 yes     yes           Std       2 HFF$DSIZ
 yes     yes           Std       1 HFF$NILERASE
 yes     yes           Std       1 M$MDELREC
         yes           Std       0 FMP$CLSJ
         yes           Std       1 FMM$SCRUB
 yes     yes           Std       1 M$MREAD
         yes           Std       1 FMD$RBUF
         yes           Std       0 FMM$DFLOPN
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                                B$PS0$
     B$PS1$                                B$PS2$                                B$PS3$
     B$PS4$                                B$PS5$                           r    B$SR_NON_ALPHA$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:27   


        1        1        /*M*     UMC$CMDVAR - COMMAND VARIABLE MANIPLUATION SERVICE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        /*P*     NAME:     UMC$CMDVAR
        9        9        *
       10       10                 PURPOSE:  UMC$CMDVAR is a monitor service called to manipulate
       11       11                      command variables.  This enhances communication between
       12       12                      processors, user programmes, and the command programme */
       13       13        /**/
       14       14        /*F*     NAME:     UMC$CMDVAR
       15       15        *
       16       16                 FUNCTION: UMC$CMDVAR is a service called by the user to manipulate
       17       17                      command variables.  The variables are stored in character
       18       18                      format in the user-inaccessible file '*S'.  This service
       19       19                      stores, fetches, and deletes command variables from the
       20       20                      *S file.                                           */
       21       21        /**/
       22       22        /*D*     NAME:     UMC$CMDVAR
       23       23        *
       24       24                 CALL:     UMC$CMDVAR is called via a PMME with an FPT containing
       25       25                      three parameters. These parameters are:
       26       26        *
       27       27                      V - Value field of FPT contains:
       28       28                           FUN - requested function code.  May indicate STORE,
       29       29                                 FETCH, DELETE, or LIST.
       30       30        *
       31       31                      NAME - A 31 character TEXTC field containing the name of the
       32       32                           command variable in question.
       33       33        *
       34       34                      VALUE - A TEXTC field of up to 511 characters (plus the
       35       35                           count byte) in length.  This field is filled on a
       36       36                           FETCH operation, and used in a STORE operation.
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:28   
       37       37        *
       38       38            INTERFACE: UMC$CMDVAR calls:
       39       39                      FMM$DFLOPN - To open M$* to *S.
       40       40                      Also UMC$CMDVAR uses the B$PSn$ pointers to look at the
       41       41                        parameters passed to it.
       42       42        *
       43       43            DESCRIPTION:   When UMC$CMDVAR is entered it initializes some
       44       44                 local storage and the FPTs in the AUTO stack. The following
       45       45                 existance checks are made:
       46       46                 FUNCTION     NAME      VALUE
       47       47                 --------     ----      -----
       48       48                 STORE        required  required
       49       49                 FETCH        required  required
       50       50                 DELETE       required  optional
       51       51                 LIST         required  required
       52       52
       53       53        *
       54       54        */
       55       55        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:29   
       56       56        UMC$CMDVAR: PROC ;

     56  2 000000   000000 700200 xent  UMC$CMDVAR   TSX0  ! X66_AUTO_0
         2 000001   000100 000000                    ZERO    64,0

       57       57        /**/
       58       58        /*************************************************************/
       59       59        /*   %SUBS   %SUBS   %SUBS   %SUBS   %SUBS   %SUBS   %SUBS   */
       60       60        /*************************************************************/
       61       61        /**/
       62       62        %SUB TRUE# = '1'B;
       63       63        %SUB FALSE# = '0'B;
       64       64
       65       65        %SUB V_PS# = 0;
       66       66        %SUB NAME_PS# = 1;
       67       67        %SUB VALUE_PS# = 2;
       68       68        %SUB PNAME_PS# = 3;
       69       69        %SUB PACCT_PS# = 4;
       70       70        %SUB PPSN_PS# = 5;
       71       71
       72       72        %SUB V$# = B$PS0$;
       73       73        %SUB NAME$# = B$PS1$;
       74       74        %SUB VALUE$# = B$PS2$;
       75       75        %SUB PNAME$# = B$PS3$;
       76       76        %SUB PACCT$# = B$PS4$;
       77       77        %SUB PPSN$# = B$PS5$;
       78       78        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:30   
       79       79        /***********************************************************************/
       80       80        /*    ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   */
       81       81        /**********************************************************************/
       82       82    1   DCL FMM$DFLOPN ENTRY;                   /* TO OPEN M$* TO CMDVAR FILE         */
       83       83    1   DCL FMM$SCRUB ENTRY(1);
       84       84    1   DCL FMP$CLSJ ENTRY;
       85       85    1   DCL HFF$DSIZ ENTRY(2) ALTRET;           /* GET PSn SIZE                       */
       86       86    1   DCL HFF$TRAPALT ENTRY ALTRET;           /* TO PROVIDE TRAP ENTRY ADDRESS      */
       87       87    1   DCL M$MREAD ENTRY(1) ALTRET;            /* INTERNAL READ                      */
       88       88    1   DCL M$MWRITE ENTRY(1) ALTRET;           /* INTERNAL WRITE                     */
       89       89    1   DCL M$MDELREC ENTRY(1) ALTRET;          /* INTERNAL DELREC                    */
       90       90    1   DCL FMD$GBUF ENTRY(1);                  /* TO ALLOCATE A POOL BUFFER          */
       91       91    1   DCL FMD$RBUF ENTRY(1);                  /* TO RELEASE A POOL BUFFER           */
       92       92    1   DCL HFF$NILERASE ENTRY(1) ALTRET;       /* TEST FOR PASSED PARAMETER          */
       93       93        /**/
       94       94        /*********************************************************************/
       95       95        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       96       96        /*********************************************************************/
       97       97        %INCLUDE F$DCB;
       98      146        %INCLUDE CP_6_SUBS;
       99      686        %INCLUDE CP_6;
      100     6245        %INCLUDE B$JIT;
      101     6848        %INCLUDE B$ROSEG;
      102     6911        %INCLUDE UM$CP6V_C;
      103     7098        %INCLUDE UM_ERRORS_C;
      104     7132        %INCLUDE F_ERRORS_C;                    /* FILE error SUBs                    */
      105     7372        %INCLUDE B$TABLES_C;
      106     7480        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:31   
      107     7481        /********************************************************************/
      108     7482        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
      109     7483        /********************************************************************/
      110     7484        /**/
      111     7485        %FPT_READ     (FPTN=UMC_RFPT,
      112     7486                       STCLASS = AUTO);
      113     7525        %FPT_WRITE    (FPTN=UMC_WFPT,
      114     7526                       STCLASS = AUTO);
      115     7557        %FPT_DELREC  (FPTN=UMC_DELRECFPT,
      116     7558                       STCLASS = AUTO);
      117     7577        %FPT_PRECORD  (FPTN = UMC_PRECORDFPT,
      118     7578                       STCLASS = AUTO);
      119     7599        /**/
      120     7600        %FPT_READ     (FPTN = INIT_RFPT,
      121     7601                       KEYS = YES,
      122     7602                       STCLASS = CONSTANT);
      123     7641        %FPT_WRITE    (FPTN = INIT_WFPT,
      124     7642                       STCLASS = CONSTANT);
      125     7673        %FPT_DELREC  (FPTN = INIT_DELRECFPT,
      126     7674                       STCLASS = CONSTANT);
      127     7693        %FPT_PRECORD  (FPTN = INIT_PRECORDFPT,
      128     7694                       KEYS = YES,              /* POSITION TO KEY                    */
      129     7695                       N = 0,                   /* Without offset                     */
      130     7696                       KEYR = YES,              /* RETURN KEY                         */
      131     7697                       STCLASS = CONSTANT);
      132     7718        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:32   
      133     7719        /*****************************************************************************/
      134     7720        /*   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   */
      135     7721        /*****************************************************************************/
      136     7722        /**/
      137     7723    1   DCL M$STAR_NUM UBIN(36) CONSTANT INIT(1); /* M$* IS DCB ONE                   */
      138     7724        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:33   
      139     7725        /*****************************************************************/
      140     7726        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
      141     7727        /*****************************************************************/
      142     7728        /**/
      143     7729    1   DCL B$JIT$ PTR SYMREF;
      144     7730    1   DCL B$PS0$ PTR SYMREF;
      145     7731    1   DCL B$PS1$ PTR SYMREF;
      146     7732    1   DCL B$PS2$ PTR SYMREF;
      147     7733    1   DCL B$PS3$ PTR SYMREF;
      148     7734    1   DCL B$PS4$ PTR SYMREF;
      149     7735    1   DCL B$PS5$ PTR SYMREF;
      150     7736        /**/
      151     7737        %B$SR_NON_ALPHA;
      152     7741        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:34   
      153     7742        /**********************************************************************/
      154     7743        /*   ALLOCATED DATA   ALLOCATED DATA   ALLOCATED DATA   ALLOCATED DAT */
      155     7744        /**********************************************************************/
      156     7745        /**/
      157     7746        /*  The following data resides in a one-page pool buffer that we request on   */
      158     7747        /*  entry and must release on exit.  Implied pointers are used so that this   */
      159     7748        /*  area 'looks like' AUTO                                                    */
      160     7749        /**/
      161     7750    1   DCL 1 CMD_KEY ALIGNED BASED(POOLBUF$),
      162     7751    1         2 LEN UBIN(9) UNAL,
      163     7752    1         2 START CHAR(4) UNAL,
      164     7753    1         2 TEXT CHAR(31) UNAL,
      165     7754    1         2 * CHAR(143) UNAL,
      166     7755    1         2 * CHAR(77) UNAL;
      167     7756    1   DCL 1 PRIVATE_KEY REDEF CMD_KEY ALIGNED,
      168     7757    1         2 LEN UBIN(9) UNAL,
      169     7758    1         2 START CHAR(4) UNAL,
      170     7759    1         2 FID,
      171     7760    1           3 NAME CHAR(31) UNAL,
      172     7761    1           3 ACCT CHAR(8) UNAL,
      173     7762    1           3 PSN CHAR(8) UNAL,
      174     7763    1         2 TEXT CHAR(127) UNAL,
      175     7764    1         2 * CHAR(77) UNAL;                /* Prevent trap on too long return key*/
      176     7765    1   DCL 1 PRIVATE_FID BASED(PFID$),
      177     7766    1         2 NAME CHAR(31) UNAL,
      178     7767    1         2 ACCT CHAR(8) UNAL,
      179     7768    1         2 PSN CHAR(8) UNAL;
      180     7769        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:35   
      181     7770        /***************************************************************/
      182     7771        /* AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
      183     7772        /***************************************************************/
      184     7773        /**/
      185     7774    1   DCL ERROR UBIN WORD;
      186     7775    1   DCL IDX UBIN WORD;                      /* Used for SEARCH                    */
      187     7776    1   DCL TABLEVAL UBIN WORD;                 /* Used for SEARCH                    */
      188     7777    1   DCL START UBIN WORD;                    /* Used for SEARCH                    */
      189     7778    1   DCL M$STAR$ PTR ALIGNED;                /* POINTER TO M$*                     */
      190     7779    1   DCL POOLBUF$ PTR ALIGNED;               /* LOCATES ALLOCATED POOL BUFFER      */
      191     7780    1   DCL PFID$ PTR ALIGNED;                  /* LOCATES ALLOCATED ITEM             */
      192     7781        /* The following must be UBIN BYTE to prevent non-DALIGNED bit-string MRLs    */
      193     7782        /* that have hardware problems.                                               */
      194     7783    1   DCL NAME_SIZE SBIN WORD AUTO;
      195     7784    1   DCL 1 NAME_SIZE_ REDEF NAME_SIZE ALIGNED,
      196     7785    1         2 * BIT(27) UNAL,
      197     7786    1         2 SIZE UBIN(9) UNAL;
      198     7787    1   DCL VALUE_SIZE SBIN WORD AUTO;
      199     7788    1   DCL 1 VALUE_SIZE_ REDEF VALUE_SIZE ALIGNED,
      200     7789    1         2 * BIT(27) UNAL,
      201     7790    1         2 SIZE UBIN(9) UNAL;
      202     7791    1   DCL NAME_PS_SIZE SBIN WORD AUTO;
      203     7792    1   DCL 1 NAME_PS_SIZE_ REDEF NAME_PS_SIZE ALIGNED,
      204     7793    1         2 * BIT(27) UNAL,
      205     7794    1         2 SIZE UBIN(9) UNAL;
      206     7795    1   DCL VALUE_PS_SIZE SBIN WORD AUTO;
      207     7796    1   DCL 1 VALUE_PS_SIZE_ REDEF VALUE_PS_SIZE ALIGNED,
      208     7797    1         2 * BIT(27) UNAL,
      209     7798    1         2 SIZE UBIN(9) UNAL;
      210     7799        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:36   
      211     7800        /**********************************************************************/
      212     7801        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
      213     7802        /**********************************************************************/
      214     7803        /**/
      215     7804        %FPT$CMDVAR_V  (FPTN = FPT$CMDVAR);
      216     7807    1   DCL 1 VAR$NAME BASED CALIGNED,
      217     7808    1         2 LEN UBIN(9) UNAL,
      218     7809    1         2 TEXT CHAR(VAR$NAME.LEN) UNAL;
      219     7810    1   DCL 1 VAR$VALUE BASED CALIGNED,
      220     7811    1         2 LEN UBIN(9) UNAL,
      221     7812    1         2 TEXT CHAR(VAR$VALUE.LEN) UNAL;
      222     7813        %VLP_SN(FPTN = VLP$SN,STCLASS = BASED);
      223     7826        %VLP_ACCT(FPTN = VLP$ACCT,STCLASS = BASED);
      224     7839        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:37   
      225     7840        /**/
      226     7841        /*****************************************************************************/
      227     7842        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      228     7843        /*****************************************************************************/
      229     7844        /**/
      230     7845    1           ERROR = 0;                      /* No errors yet                      */

   7845  2 000002   200062 450100                    STZ     ERROR,,AUTO

      231     7846    1           CALL FMD$GBUF (POOLBUF$);       /* GET A ONE-PAGE POOL BUFFER         */

   7846  2 000003   200067 630500                    EPPR0   POOLBUF$,,AUTO
         2 000004   200076 450500                    STP0    VALUE_PS_SIZE+2,,AUTO
         2 000005   200076 630500                    EPPR0   VALUE_PS_SIZE+2,,AUTO
         2 000006   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000007   000000 701000 xent               TSX1    FMD$GBUF
         2 000010   000000 011000                    NOP     0

      232     7847    1           PFID$ = PINCRC(POOLBUF$,SIZEC(CMD_KEY)); /* Locate allocated item     */

   7847  2 000011   200067 236100                    LDQ     POOLBUF$,,AUTO
         2 000012   000100 036003                    ADLQ    64,DU
         2 000013   200070 756100                    STQ     PFID$,,AUTO

      233     7848    1           M$STAR$ = DCBADDR(M$STAR_NUM);  /* M$STAR IS DCB 1                    */

   7848  2 000014   000000 470400 3                  LDP0    0
         2 000015   000000 471500                    LDP1    0,,PR0
         2 000016   000056 720000 1                  LXL0    M$STAR_NUM
         2 000017   100000 236110                    LDQ     0,X0,PR1
         2 000020   200066 756100                    STQ     M$STAR$,,AUTO

      234     7849        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:38   
      235     7850        /**/
      236     7851        /*  PROCESS NAME FIELD  */
      237     7852        /**/
      238     7853    1           CALL HFF$TRAPALT ALTRET(BAD_NAME); /* Any TRAP after this is bad name */

   7853  2 000021   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000022   000000 701000 xent               TSX1    HFF$TRAPALT
         2 000023   000125 702000 2                  TSX2    BAD_NAME

      239     7854        /**/
      240     7855    1           CALL HFF$DSIZ(NAME_PS#,NAME_PS_SIZE) ALTRET(BAD_NAME); /* Is NAME?   */

   7855  2 000024   200073 630500                    EPPR0   NAME_PS_SIZE,,AUTO
         2 000025   200077 450500                    STP0    VALUE_PS_SIZE+3,,AUTO
         2 000026   000001 236000 3                  LDQ     1
         2 000027   200076 756100                    STQ     VALUE_PS_SIZE+2,,AUTO
         2 000030   200076 630500                    EPPR0   VALUE_PS_SIZE+2,,AUTO
         2 000031   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000032   000000 701000 xent               TSX1    HFF$DSIZ
         2 000033   000125 702000 2                  TSX2    BAD_NAME

      241     7856    1           NAME_SIZE = 0;

   7856  2 000034   200071 450100                    STZ     NAME_SIZE,,AUTO

      242     7857    1           NAME_SIZE_.SIZE = NAME$# -> VAR$NAME.LEN;

   7857  2 000035   000000 470400 xsym               LDP0    B$PS1$
         2 000036   000100 100500                    MLR     fill='000'O
         2 000037   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000040   200071 600001                    ADSC9   NAME_SIZE,,AUTO          cn=3,n=1

      243     7858    1           IF (NAME_SIZE < 1               /* IF NAME too small                  */

   7858  2 000041   200071 235100                    LDA     NAME_SIZE,,AUTO
         2 000042   000050 605400 2                  TPNZ    s:7858+7
         2 000043   000000 471400 xsym               LDP1    B$PS0$
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:39   
         2 000044   100000 236100                    LDQ     0,,PR1
         2 000045   777000 376003                    ANQ     -512,DU
         2 000046   004000 116003                    CMPQ    2048,DU
         2 000047   000125 601000 2                  TNZ     BAD_NAME
         2 000050   200071 236100                    LDQ     NAME_SIZE,,AUTO
         2 000051   200073 116100                    CMPQ    NAME_PS_SIZE,,AUTO
         2 000052   000125 605000 2                  TPL     BAD_NAME

      244     7859    1               AND V$# -> FPT$CMDVAR.FUN ~= %CMD_LIST#) /* AND we care           */
      245     7860    1            OR NAME_SIZE +1 > NAME_PS_SIZE /* Bad framing vector                 */
      246     7861    1            THEN                           /* Bad name size                      */
      247     7862    1              GOTO BAD_NAME;
      248     7863        /**/                                    /* Check NAME for bad characters      */
      249     7864    1           IF V$# -> FPT$CMDVAR.FUN = %CMD_LIST#

   7864  2 000053   000000 471400 xsym               LDP1    B$PS0$
         2 000054   100000 236100                    LDQ     0,,PR1
         2 000055   777000 376003                    ANQ     -512,DU
         2 000056   004000 116003                    CMPQ    2048,DU
         2 000057   000130 600000 2                  TZE     NAME_OK
         2 000060   100000 236100                    LDQ     0,,PR1
         2 000061   000400 316003                    CANQ    256,DU
         2 000062   000130 601000 2                  TNZ     NAME_OK

      250     7865    1            OR V$# -> FPT$CMDVAR.PRIVATE
      251     7866    1            THEN
      252     7867    1             GOTO NAME_OK;                 /* Any characters are OK              */
      253     7868    1           START = 0;                      /* Start check at beginning           */

   7868  2 000063   200065 450100                    STZ     START,,AUTO

      254     7869    1   CHECK:  CALL SEARCH(IDX,TABLEVAL,B$SR_NON_ALPHA,

   7869  2 000064   000000 470400 xsym  CHECK        LDP0    B$PS1$
         2 000065   000100 101500                    MRL     fill='000'O
         2 000066   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000067   200076 000002                    ADSC9   VALUE_PS_SIZE+2,,AUTO    cn=0,n=2
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:40   
         2 000070   200076 220100                    LDX0    VALUE_PS_SIZE+2,,AUTO
         2 000071   000000 636010                    EAQ     0,X0
         2 000072   000022 772000                    QRL     18
         2 000073   200065 136100                    SBLQ    START,,AUTO
         2 000074   200077 756100                    STQ     VALUE_PS_SIZE+3,,AUTO
         2 000075   200065 236100                    LDQ     START,,AUTO
         2 000076   000000 471400 xsym               LDP1    B$SR_NON_ALPHA$
         2 000077   200077 721100                    LXL1    VALUE_PS_SIZE+3,,AUTO
         2 000100   000000 164546                    TCT
         2 000101   000000 200011                    ADSC9   0,Q,PR0                  cn=1,n=*X1
         2 000102   100000 000100                    ARG     0,,PR1
         2 000103   200063 000100                    ARG     IDX,,AUTO
         2 000104   200063 235100                    LDA     IDX,,AUTO
         2 000105   000033 771000                    ARL     27
         2 000106   200064 755100                    STA     TABLEVAL,,AUTO
         2 000107   200063 551140                    STBA    IDX,'40'O,AUTO
         2 000110   200063 056100                    ASQ     IDX,,AUTO
         2 000111   000130 606400 2                  TTN     NAME_OK

      255     7870    1            NAME$# -> VAR$NAME.TEXT,START) ALTRET(NAME_OK);
      256     7871    1           IF BINBIT(TABLEVAL,9) & %B$SR#SYM

   7871  2 000112   200064 236100                    LDQ     TABLEVAL,,AUTO
         2 000113   000033 736000                    QLS     27
         2 000114   000022 772000                    QRL     18
         2 000115   000000 620006                    EAX0    0,QL
         2 000116   002000 360003                    ANX0    1024,DU
         2 000117   000125 600000 2                  TZE     BAD_NAME
         2 000120   200063 236100                    LDQ     IDX,,AUTO
         2 000121   000125 600000 2                  TZE     BAD_NAME

      257     7872    1            AND IDX ~= 0
      258     7873    1            THEN                           /* '$' is ok if not at beginning      */
      259     7874    2             DO;

      260     7875    2               START = IDX +1;

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:41   
   7875  2 000122   000001 036007                    ADLQ    1,DL
         2 000123   200065 756100                    STQ     START,,AUTO

      261     7876    2               GOTO CHECK;                 /* Keep looking                       */

   7876  2 000124   000064 710000 2                  TRA     CHECK

      262     7877    2               END;
      263     7878    1   BAD_NAME:                               /* Invalid name detected              */
      264     7879    1           ERROR = %E$BADCMDNAME;

   7879  2 000125   001506 235007       BAD_NAME     LDA     838,DL
         2 000126   200062 755100                    STA     ERROR,,AUTO

      265     7880    1           GOTO CMDVAR_ALTRTN;

   7880  2 000127   000774 710000 2                  TRA     CMDVAR_ALTRTN

   7871  2 000130                       NAME_OK      null
      266     7881        /**/
      267     7882    1   NAME_OK: ;
      268     7883        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:42   
      269     7884                                                /* Munge name into KEY                */
      270     7885    1            IF V$# -> FPT$CMDVAR.PRIVATE

   7885  2 000130   000000 470400 xsym               LDP0    B$PS0$
         2 000131   000000 236100                    LDQ     0,,PR0
         2 000132   000400 316003                    CANQ    256,DU
         2 000133   000247 600000 2                  TZE     s:7913

      271     7886    1             THEN                          /* PRIVATE CMDVAR                     */
      272     7887    2              DO;

      273     7888    2                IF NAME_SIZE > 127

   7888  2 000134   200071 235100                    LDA     NAME_SIZE,,AUTO
         2 000135   000177 115007                    CMPA    127,DL
         2 000136   000125 605400 2                  TPNZ    BAD_NAME

      274     7889    2                 THEN                      /* Too big                            */
      275     7890    2                   GOTO BAD_NAME;
      276     7891    2                PRIVATE_KEY.LEN = NAME_SIZE +51;

   7891  2 000137   200067 471500                    LDP1    POOLBUF$,,AUTO
         2 000140   200071 236100                    LDQ     NAME_SIZE,,AUTO
         2 000141   000063 036007                    ADLQ    51,DL
         2 000142   000033 736000                    QLS     27
         2 000143   100000 552140                    STBQ    0,'40'O,PR1

      277     7892    2                PRIVATE_KEY.START = 'VAR$'; /* PRIVATE CMDVARs prefixed by 'VAR$'*/

   7892  2 000144   200067 470500                    LDP0    POOLBUF$,,AUTO
         2 000145   040100 100400                    MLR     fill='040'O
         2 000146   000057 000004 1                  ADSC9   M$STAR_NUM+1             cn=0,n=4
         2 000147   000000 200004                    ADSC9   0,,PR0                   cn=1,n=4

      278     7893    2                PRIVATE_KEY.TEXT = NAME$# -> VAR$NAME.TEXT;

   7893  2 000150   000000 470400 xsym               LDP0    B$PS1$
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:43   
         2 000151   000100 101500                    MRL     fill='000'O
         2 000152   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000153   200076 000002                    ADSC9   VALUE_PS_SIZE+2,,AUTO    cn=0,n=2
         2 000154   200076 220100                    LDX0    VALUE_PS_SIZE+2,,AUTO
         2 000155   200067 471500                    LDP1    POOLBUF$,,AUTO
         2 000156   040100 100540                    MLR     fill='040'O
         2 000157   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         2 000160   100015 000177                    ADSC9   13,,PR1                  cn=0,n=127

      279     7894    2                CALL HFF$NILERASE(PNAME_PS#) ALTRET(NO_PNAME);

   7894  2 000161   000002 630400 3                  EPPR0   2
         2 000162   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000163   000000 701000 xent               TSX1    HFF$NILERASE
         2 000164   000177 702000 2                  TSX2    NO_PNAME

      280     7895    2                PRIVATE_KEY.FID.NAME = PNAME$# -> VAR$NAME.TEXT;

   7895  2 000165   000000 470400 xsym               LDP0    B$PS3$
         2 000166   000100 101500                    MRL     fill='000'O
         2 000167   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000170   200076 000002                    ADSC9   VALUE_PS_SIZE+2,,AUTO    cn=0,n=2
         2 000171   200076 220100                    LDX0    VALUE_PS_SIZE+2,,AUTO
         2 000172   200067 471500                    LDP1    POOLBUF$,,AUTO
         2 000173   040100 100540                    MLR     fill='040'O
         2 000174   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         2 000175   100001 200037                    ADSC9   1,,PR1                   cn=1,n=31

      281     7896    3                DO WHILE (FALSE#);

   7896  2 000176   000203 710000 2                  TRA     s:7899

      282     7897    3   NO_PNAME:       PRIVATE_KEY.FID.NAME = ' ';

   7897  2 000177   200067 470500       NO_PNAME     LDP0    POOLBUF$,,AUTO
         2 000200   040100 100400                    MLR     fill='040'O
         2 000201   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:44   
         2 000202   000001 200037                    ADSC9   1,,PR0                   cn=1,n=31

      283     7898    3                   END;

      284     7899    2                CALL HFF$NILERASE(PACCT_PS#) ALTRET(NO_PACCT);

   7899  2 000203   000003 630400 3                  EPPR0   3
         2 000204   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000205   000000 701000 xent               TSX1    HFF$NILERASE
         2 000206   000215 702000 2                  TSX2    NO_PACCT

      285     7900    2                PRIVATE_KEY.FID.ACCT = PACCT$# -> VLP$ACCT.ACCT#;

   7900  2 000207   000000 470400 xsym               LDP0    B$PS4$
         2 000210   200067 471500                    LDP1    POOLBUF$,,AUTO
         2 000211   040100 100500                    MLR     fill='040'O
         2 000212   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         2 000213   100011 000010                    ADSC9   9,,PR1                   cn=0,n=8

      286     7901    3                DO WHILE (FALSE#);

   7901  2 000214   000222 710000 2                  TRA     s:7904

      287     7902    3   NO_PACCT:       PRIVATE_KEY.FID.ACCT = ' ';

   7902  2 000215   200067 470500       NO_PACCT     LDP0    POOLBUF$,,AUTO
         2 000216   000035 235000 xsym               LDA     B_VECTNIL+29
         2 000217   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000220   000011 755100                    STA     9,,PR0
         2 000221   000012 756100                    STQ     10,,PR0

      288     7903    3                   END;

      289     7904    2                CALL HFF$NILERASE(PPSN_PS#) ALTRET(NO_PPSN);

   7904  2 000222   000004 630400 3                  EPPR0   4
         2 000223   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:45   
         2 000224   000000 701000 xent               TSX1    HFF$NILERASE
         2 000225   000234 702000 2                  TSX2    NO_PPSN

      290     7905    2                PRIVATE_KEY.FID.PSN = PPSN$# -> VLP$SN.SN#(0);

   7905  2 000226   000000 470400 xsym               LDP0    B$PS5$
         2 000227   200067 471500                    LDP1    POOLBUF$,,AUTO
         2 000230   040100 100500                    MLR     fill='040'O
         2 000231   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
         2 000232   100013 000010                    ADSC9   11,,PR1                  cn=0,n=8

      291     7906    3                DO WHILE (FALSE#);

   7906  2 000233   000241 710000 2                  TRA     s:7909

      292     7907    3   NO_PPSN:        PRIVATE_KEY.FID.PSN = ' ';

   7907  2 000234   200067 470500       NO_PPSN      LDP0    POOLBUF$,,AUTO
         2 000235   000035 235000 xsym               LDA     B_VECTNIL+29
         2 000236   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000237   000013 755100                    STA     11,,PR0
         2 000240   000014 756100                    STQ     12,,PR0

      293     7908    3                   END;

      294     7909    2                PRIVATE_FID = PRIVATE_KEY.FID;

   7909  2 000241   200067 470500                    LDP0    POOLBUF$,,AUTO
         2 000242   200070 471500                    LDP1    PFID$,,AUTO
         2 000243   000100 100500                    MLR     fill='000'O
         2 000244   000001 200057                    ADSC9   1,,PR0                   cn=1,n=47
         2 000245   100000 000057                    ADSC9   0,,PR1                   cn=0,n=47

      295     7910    2                END;

   7910  2 000246   000274 710000 2                  TRA     s:7924

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:46   
      296     7911    1             ELSE                          /* IBEX CMDVAR                        */
      297     7912    2              DO;

      298     7913    2                IF NAME_SIZE > 31

   7913  2 000247   200071 235100                    LDA     NAME_SIZE,,AUTO
         2 000250   000037 115007                    CMPA    31,DL
         2 000251   000125 605400 2                  TPNZ    BAD_NAME

      299     7914    2                 THEN                      /* Too big                            */
      300     7915    2                   GOTO BAD_NAME;
      301     7916    2                CMD_KEY.LEN = NAME_SIZE +4;

   7916  2 000252   200067 471500                    LDP1    POOLBUF$,,AUTO
         2 000253   200071 236100                    LDQ     NAME_SIZE,,AUTO
         2 000254   000004 036007                    ADLQ    4,DL
         2 000255   000033 736000                    QLS     27
         2 000256   100000 552140                    STBQ    0,'40'O,PR1

      302     7917    2                CMD_KEY.START = 'VAR_';    /* IBEX CMDVARs prefixed by 'VAR_'    */

   7917  2 000257   200067 470500                    LDP0    POOLBUF$,,AUTO
         2 000260   040100 100400                    MLR     fill='040'O
         2 000261   000060 000004 1                  ADSC9   M$STAR_NUM+2             cn=0,n=4
         2 000262   000000 200004                    ADSC9   0,,PR0                   cn=1,n=4

      303     7918    2                CMD_KEY.TEXT = NAME$# -> VAR$NAME.TEXT;

   7918  2 000263   000000 470400 xsym               LDP0    B$PS1$
         2 000264   000100 101500                    MRL     fill='000'O
         2 000265   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000266   200076 000002                    ADSC9   VALUE_PS_SIZE+2,,AUTO    cn=0,n=2
         2 000267   200076 220100                    LDX0    VALUE_PS_SIZE+2,,AUTO
         2 000270   200067 471500                    LDP1    POOLBUF$,,AUTO
         2 000271   040100 100540                    MLR     fill='040'O
         2 000272   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         2 000273   100001 200037                    ADSC9   1,,PR1                   cn=1,n=31
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:47   

      304     7919    2                END;

      305     7920        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:48   
      306     7921        /**/
      307     7922        /*  PROCESS VALUE FIELD  */
      308     7923        /**/
      309     7924    1            CALL HFF$TRAPALT ALTRET(BAD_VALUE); /* Any TRAP after this is bad val*/

   7924  2 000274   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000275   000000 701000 xent               TSX1    HFF$TRAPALT
         2 000276   000335 702000 2                  TSX2    BAD_VALUE

      310     7925        /**/
      311     7926    1            IF V$# -> FPT$CMDVAR.FUN = %CMD_DELETE#

   7926  2 000277   000000 470400 xsym               LDP0    B$PS0$
         2 000300   000000 236100                    LDQ     0,,PR0
         2 000301   777000 376003                    ANQ     -512,DU
         2 000302   003000 116003                    CMPQ    1536,DU
         2 000303   000340 600000 2                  TZE     VALUE_OK

      312     7927    1             THEN                          /* No VALUE field needed              */
      313     7928    1               GOTO VALUE_OK;
      314     7929    1            CALL HFF$DSIZ(VALUE_PS#,VALUE_PS_SIZE) ALTRET(BAD_VALUE);

   7929  2 000304   200074 631500                    EPPR1   VALUE_PS_SIZE,,AUTO
         2 000305   200077 451500                    STP1    VALUE_PS_SIZE+3,,AUTO
         2 000306   000005 236000 3                  LDQ     5
         2 000307   200076 756100                    STQ     VALUE_PS_SIZE+2,,AUTO
         2 000310   200076 630500                    EPPR0   VALUE_PS_SIZE+2,,AUTO
         2 000311   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000312   000000 701000 xent               TSX1    HFF$DSIZ
         2 000313   000335 702000 2                  TSX2    BAD_VALUE

      315     7930    1            VALUE_SIZE = 0;

   7930  2 000314   200072 450100                    STZ     VALUE_SIZE,,AUTO

      316     7931    1            VALUE_SIZE_.SIZE = VALUE$# -> VAR$VALUE.LEN;

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:49   
   7931  2 000315   000000 470400 xsym               LDP0    B$PS2$
         2 000316   000100 100500                    MLR     fill='000'O
         2 000317   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000320   200072 600001                    ADSC9   VALUE_SIZE,,AUTO         cn=3,n=1

      317     7932    1            IF V$# -> FPT$CMDVAR.FUN = %CMD_STORE#

   7932  2 000321   000000 471400 xsym               LDP1    B$PS0$
         2 000322   100000 236100                    LDQ     0,,PR1
         2 000323   777000 376003                    ANQ     -512,DU
         2 000324   001000 116003                    CMPQ    512,DU
         2 000325   000332 601000 2                  TNZ     s:7940

      318     7933    1             THEN                          /* VALUE field is to be USED          */
      319     7934    1               IF VALUE_SIZE +1 > VALUE_PS_SIZE

   7934  2 000326   200072 236100                    LDQ     VALUE_SIZE,,AUTO
         2 000327   200074 116100                    CMPQ    VALUE_PS_SIZE,,AUTO
         2 000330   000335 605000 2                  TPL     BAD_VALUE
         2 000331   000340 710000 2                  TRA     VALUE_OK

      320     7935    1                THEN                       /* Bad count in TEXTC                 */
      321     7936    1                  GOTO BAD_VALUE;
      322     7937    1                ELSE                       /* OK                                 */
      323     7938    1                  ;
      324     7939    1             ELSE                          /* VALUE field is to be filled        */
      325     7940    1               IF VALUE_PS_SIZE < 2

   7940  2 000332   200074 235100                    LDA     VALUE_PS_SIZE,,AUTO
         2 000333   000002 115007                    CMPA    2,DL
         2 000334   000340 605000 2                  TPL     VALUE_OK

      326     7941    1                   THEN
      327     7942    2                     DO;

      328     7943    2   BAD_VALUE:        ERROR = %E$BADCMDCALL;

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:50   
   7943  2 000335   001507 235007       BAD_VALUE    LDA     839,DL
         2 000336   200062 755100                    STA     ERROR,,AUTO

      329     7944    2                     GOTO CMDVAR_ALTRTN;

   7944  2 000337   000774 710000 2                  TRA     CMDVAR_ALTRTN

   7932  2 000340                       VALUE_OK     null
      330     7945    2                     END;
      331     7946    1   VALUE_OK:;
      332     7947        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:51   
      333     7948        /**/
      334     7949        /*  PREPARE AND OPEN THE STAR DCB TO *S FILE  */
      335     7950        /**/
      336     7951    1           CALL HFF$TRAPALT ALTRET(FATAL_ALT); /* Any TRAP after this is fatal   */

   7951  2 000340   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000341   000000 701000 xent               TSX1    HFF$TRAPALT
         2 000342   000772 702000 2                  TSX2    FATAL_ALT

      337     7952        /**/
      338     7953    1           IF (M$STAR$ -> F$DCB.FCD = TRUE#)

   7953  2 000343   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000344   000031 236100                    LDQ     25,,PR0
         2 000345   020000 316007                    CANQ    8192,DL
         2 000346   000355 600000 2                  TZE     s:7959

      339     7954    1            THEN                           /* STAR is OPEN, CLOSE it             */
      340     7955    2             DO;

      341     7956    2              B$JIT$ -> B$JIT.DCB$ = M$STAR$;

   7956  2 000347   200066 236100                    LDQ     M$STAR$,,AUTO
         2 000350   000000 471400 xsym               LDP1    B$JIT$
         2 000351   100232 756100                    STQ     154,,PR1

      342     7957    2              CALL FMP$CLSJ;

   7957  2 000352   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000353   000000 701000 xent               TSX1    FMP$CLSJ
         2 000354   000000 011000                    NOP     0

      343     7958    2              END;

      344     7959    1           CALL FMM$SCRUB(M$STAR$);

   7959  2 000355   200066 630500                    EPPR0   M$STAR$,,AUTO
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:52   
         2 000356   200076 450500                    STP0    VALUE_PS_SIZE+2,,AUTO
         2 000357   200076 630500                    EPPR0   VALUE_PS_SIZE+2,,AUTO
         2 000360   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000361   000000 701000 xent               TSX1    FMM$SCRUB
         2 000362   000000 011000                    NOP     0

      345     7960        /**/
      346     7961    1           M$STAR$ -> F$DCB.NAME.L = 2;

   7961  2 000363   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000364   002000 236003                    LDQ     1024,DU
         2 000365   000010 552140                    STBQ    8,'40'O,PR0

      347     7962    1           M$STAR$ -> F$DCB.NAME.C = '*S';

   7962  2 000366   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000367   040100 100400                    MLR     fill='040'O
         2 000370   000061 000002 1                  ADSC9   M$STAR_NUM+3             cn=0,n=2
         2 000371   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31

      348     7963    1           M$STAR$ -> F$DCB.PASS = ' ';

   7963  2 000372   000035 235000 xsym               LDA     B_VECTNIL+29
         2 000373   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000374   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000375   000022 757100                    STAQ    18,,PR0

      349     7964        /**/
      350     7965    1           M$STAR$ -> F$DCB.FUN = %UPDATE#;

   7965  2 000376   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000377   000001 236003                    LDQ     1,DU
         2 000400   000032 552120                    STBQ    26,'20'O,PR0

      351     7966    1           M$STAR$ -> F$DCB.ASN = %FILE#;

   7966  2 000401   200066 470500                    LDP0    M$STAR$,,AUTO
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:53   
         2 000402   001000 236007                    LDQ     512,DL
         2 000403   000032 552110                    STBQ    26,'10'O,PR0

      352     7967    1           M$STAR$ -> F$DCB.ACS = %DIRECT#;

   7967  2 000404   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000405   000002 236007                    LDQ     2,DL
         2 000406   000036 552104                    STBQ    30,'04'O,PR0

      353     7968    1           M$STAR$ -> F$DCB.RES= ' ';

   7968  2 000407   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000410   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000411   000026 756100                    STQ     22,,PR0

      354     7969    1           M$STAR$ -> F$DCB.AMFLG = FALSE#;

   7969  2 000412   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000413   000006 236000 3                  LDQ     6
         2 000414   000064 356100                    ANSQ    52,,PR0

      355     7970    1           M$STAR$ -> F$DCB.WSR = 1;

   7970  2 000415   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000416   000001 236003                    LDQ     1,DU
         2 000417   000040 552120                    STBQ    32,'20'O,PR0

      356     7971        /**/
      357     7972    1           B$JIT$ -> B$JIT.DCB$ = M$STAR$;

   7972  2 000420   200066 236100                    LDQ     M$STAR$,,AUTO
         2 000421   000000 470400 xsym               LDP0    B$JIT$
         2 000422   000232 756100                    STQ     154,,PR0

      358     7973                                                /* SET UP DCB NOW CALL DEFAULT OPEN   */
      359     7974    1           CALL FMM$DFLOPN;

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:54   
   7974  2 000423   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000424   000000 701000 xent               TSX1    FMM$DFLOPN
         2 000425   000000 011000                    NOP     0

      360     7975    1           CALL HFF$TRAPALT ALTRET(FATAL_ALT); /* Any TRAP after this is fatal   */

   7975  2 000426   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000427   000000 701000 xent               TSX1    HFF$TRAPALT
         2 000430   000772 702000 2                  TSX2    FATAL_ALT

      361     7976    1           IF (M$STAR$ -> F$DCB.FCD = FALSE#)

   7976  2 000431   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000432   000031 236100                    LDQ     25,,PR0
         2 000433   020000 316007                    CANQ    8192,DL
         2 000434   000774 600000 2                  TZE     CMDVAR_ALTRTN

      362     7977    1            THEN                           /* Not OPEN                           */
      363     7978    1              GOTO CMDVAR_EXIT;
      364     7979        /**/
      365     7980        /*  NOW PERFORM THE REQUESTED FUNCTION  */
      366     7981        /**/
      367     7982    2           DO CASE(V$# -> FPT$CMDVAR.FUN);

   7982  2 000435   000000 471400 xsym               LDP1    B$PS0$
         2 000436   100000 236100                    LDQ     0,,PR1
         2 000437   000033 772000                    QRL     27
         2 000440   000005 116007                    CMPQ    5,DL
         2 000441   000443 602006 2                  TNC     s:7982+6,QL
         2 000442   000757 710000 2                  TRA     s:8069
         2 000443   000757 710000 2                  TRA     s:8069
         2 000444   000450 710000 2                  TRA     s:7985
         2 000445   000512 710000 2                  TRA     s:8001
         2 000446   000575 710000 2                  TRA     s:8017
         2 000447   000621 710000 2                  TRA     s:8025

      368     7983        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:55   
      369     7984    2             CASE(%CMD_STORE#);             /* STORE the passed value             */

      370     7985    2               UMC_WFPT = INIT_WFPT;       /* Initialize WRITE FPT               */

   7985  2 000450   000100 100400                    MLR     fill='000'O
         2 000451   000016 000060 1                  ADSC9   INIT_WFPT                cn=0,n=48
         2 000452   200022 000060                    ADSC9   UMC_WFPT,,AUTO           cn=0,n=48

      371     7986    2               UMC_WFPT.V_ = VECTOR(UMC_WFPT.V);

   7986  2 000453   000007 235000 3                  LDA     7
         2 000454   200076 452500                    STP2    VALUE_PS_SIZE+2,,AUTO
         2 000455   200076 236100                    LDQ     VALUE_PS_SIZE+2,,AUTO
         2 000456   000032 036003                    ADLQ    26,DU
         2 000457   200022 757100                    STAQ    UMC_WFPT,,AUTO

      372     7987    2               UMC_WFPT.V.DCB# = M$STAR_NUM;

   7987  2 000460   000056 720000 1                  LXL0    M$STAR_NUM
         2 000461   200032 740100                    STX0    UMC_WFPT+8,,AUTO

      373     7988    2               IF VALUE_SIZE = 0

   7988  2 000462   200072 235100                    LDA     VALUE_SIZE,,AUTO
         2 000463   000467 601000 2                  TNZ     s:7993

      374     7989    2                THEN                       /* Have to write zero-length record   */
      375     7990    2                  UMC_WFPT.BUF_ = VECTOR(NIL);

   7990  2 000464   000010 237000 3                  LDAQ    8
         2 000465   200026 757100                    STAQ    UMC_WFPT+4,,AUTO
         2 000466   000500 710000 2                  TRA     s:7996

      376     7991    2                ELSE                       /* VALUE is non-zero in length        */
      377     7992    3                  DO;

      378     7993    3                    UMC_WFPT.BUF_.BOUND = VALUE_SIZE -1;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:56   

   7993  2 000467   200072 236100                    LDQ     VALUE_SIZE,,AUTO
         2 000470   000001 136007                    SBLQ    1,DL
         2 000471   000020 736000                    QLS     16
         2 000472   200026 676100                    ERQ     UMC_WFPT+4,,AUTO
         2 000473   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000474   200026 656100                    ERSQ    UMC_WFPT+4,,AUTO

      379     7994    3                    UMC_WFPT.BUF_.BUF$ = PINCRC(VALUE$#,1);

   7994  2 000475   000000 236000 xsym               LDQ     B$PS2$
         2 000476   200000 036007                    ADLQ    65536,DL
         2 000477   200027 756100                    STQ     UMC_WFPT+5,,AUTO

      380     7995    3                    END;

      381     7996    2               UMC_WFPT.KEY_ = VECTOR(CMD_KEY);

   7996  2 000500   000012 235000 3                  LDA     10
         2 000501   200067 236100                    LDQ     POOLBUF$,,AUTO
         2 000502   200024 757100                    STAQ    UMC_WFPT+2,,AUTO

      382     7997        /**/
      383     7998    2               CALL M$MWRITE (UMC_WFPT) ALTRET(FATAL_ALT);

   7998  2 000503   200022 633500                    EPPR3   UMC_WFPT,,AUTO
         2 000504   200076 453500                    STP3    VALUE_PS_SIZE+2,,AUTO
         2 000505   200076 630500                    EPPR0   VALUE_PS_SIZE+2,,AUTO
         2 000506   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000507   000000 701000 xent               TSX1    M$MWRITE
         2 000510   000772 702000 2                  TSX2    FATAL_ALT
         2 000511   000761 710000 2                  TRA     s:8072

      384     7999        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:57   
      385     8000    2             CASE(%CMD_FETCH#);             /* FETCH into VALUE                   */

      386     8001    2               UMC_RFPT = INIT_RFPT;       /* Initialize READ FPT                */

   8001  2 000512   000100 100400                    MLR     fill='000'O
         2 000513   000000 000070 1                  ADSC9   INIT_RFPT                cn=0,n=56
         2 000514   200004 000070                    ADSC9   UMC_RFPT,,AUTO           cn=0,n=56

      387     8002    2               UMC_RFPT.V_ = VECTOR(UMC_RFPT.V);

   8002  2 000515   000013 235000 3                  LDA     11
         2 000516   200076 452500                    STP2    VALUE_PS_SIZE+2,,AUTO
         2 000517   200076 236100                    LDQ     VALUE_PS_SIZE+2,,AUTO
         2 000520   000014 036003                    ADLQ    12,DU
         2 000521   200004 757100                    STAQ    UMC_RFPT,,AUTO

      388     8003    2               UMC_RFPT.V.DCB# = M$STAR_NUM;

   8003  2 000522   000056 720000 1                  LXL0    M$STAR_NUM
         2 000523   200014 740100                    STX0    UMC_RFPT+8,,AUTO

      389     8004    2               UMC_RFPT.BUF_.BUF$ = PINCRC(VALUE$#,1);

   8004  2 000524   000000 236000 xsym               LDQ     B$PS2$
         2 000525   200000 036007                    ADLQ    65536,DL
         2 000526   200011 756100                    STQ     UMC_RFPT+5,,AUTO

      390     8005    2               UMC_RFPT.BUF_.BOUND = VALUE_PS_SIZE -2; /* BOUND=LEN-1-count byte */

   8005  2 000527   200074 236100                    LDQ     VALUE_PS_SIZE,,AUTO
         2 000530   000002 136007                    SBLQ    2,DL
         2 000531   000020 736000                    QLS     16
         2 000532   200010 676100                    ERQ     UMC_RFPT+4,,AUTO
         2 000533   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000534   200010 656100                    ERSQ    UMC_RFPT+4,,AUTO

      391     8006    2               UMC_RFPT.KEY_ = VECTOR(CMD_KEY);
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:58   

   8006  2 000535   000012 235000 3                  LDA     10
         2 000536   200067 236100                    LDQ     POOLBUF$,,AUTO
         2 000537   200006 757100                    STAQ    UMC_RFPT+2,,AUTO

      392     8007        /**/
      393     8008    2               VALUE_SIZE = VALUE_PS_SIZE -1; /* Maximum TEXT size               */

   8008  2 000540   200074 235100                    LDA     VALUE_PS_SIZE,,AUTO
         2 000541   000001 135007                    SBLA    1,DL
         2 000542   200072 755100                    STA     VALUE_SIZE,,AUTO

      394     8009    2               VALUE$# -> VAR$VALUE.LEN = VALUE_SIZE_.SIZE;

   8009  2 000543   000000 473400 xsym               LDP3    B$PS2$
         2 000544   000100 100500                    MLR     fill='000'O
         2 000545   200072 600001                    ADSC9   VALUE_SIZE,,AUTO         cn=3,n=1
         2 000546   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      395     8010    2               VALUE$# -> VAR$VALUE.TEXT = ' '; /* Blank buffer before READ      */

   8010  2 000547   000000 470400 xsym               LDP0    B$PS2$
         2 000550   000100 101500                    MRL     fill='000'O
         2 000551   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000552   200076 000002                    ADSC9   VALUE_PS_SIZE+2,,AUTO    cn=0,n=2
         2 000553   200076 221100                    LDX1    VALUE_PS_SIZE+2,,AUTO
         2 000554   040140 100400                    MLR     fill='040'O
         2 000555   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000556   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1

      396     8011        /**/
      397     8012    2               CALL M$MREAD (UMC_RFPT) ALTRET(FUNCTION_ALT);

   8012  2 000557   200004 630500                    EPPR0   UMC_RFPT,,AUTO
         2 000560   200076 450500                    STP0    VALUE_PS_SIZE+2,,AUTO
         2 000561   200076 630500                    EPPR0   VALUE_PS_SIZE+2,,AUTO
         2 000562   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:59   
         2 000563   000000 701000 xent               TSX1    M$MREAD
         2 000564   000762 702000 2                  TSX2    FUNCTION_ALT

      398     8013    2               VALUE_SIZE = M$STAR$ -> F$DCB.ARS; /* Get READ size               */

   8013  2 000565   200066 470500                    LDP0    M$STAR$,,AUTO
         2 000566   000000 235100                    LDA     0,,PR0
         2 000567   200072 755100                    STA     VALUE_SIZE,,AUTO

      399     8014    2               VALUE$# -> VAR$VALUE.LEN = VALUE_SIZE_.SIZE;

   8014  2 000570   000000 471400 xsym               LDP1    B$PS2$
         2 000571   000100 100500                    MLR     fill='000'O
         2 000572   200072 600001                    ADSC9   VALUE_SIZE,,AUTO         cn=3,n=1
         2 000573   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000574   000761 710000 2                  TRA     s:8072

      400     8015        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:60   
      401     8016    2             CASE(%CMD_DELETE#);            /* DELETE the NAMEd variable          */

      402     8017    2               UMC_DELRECFPT = INIT_DELRECFPT; /* Initialize DELREC FPT          */

   8017  2 000575   000100 100400                    MLR     fill='000'O
         2 000576   000032 000050 1                  ADSC9   INIT_DELRECFPT           cn=0,n=40
         2 000577   200036 000050                    ADSC9   UMC_DELRECFPT,,AUTO      cn=0,n=40

      403     8018    2               UMC_DELRECFPT.V_ = VECTOR(UMC_DELRECFPT.V);

   8018  2 000600   000014 235000 3                  LDA     12
         2 000601   200076 452500                    STP2    VALUE_PS_SIZE+2,,AUTO
         2 000602   200076 236100                    LDQ     VALUE_PS_SIZE+2,,AUTO
         2 000603   000046 036003                    ADLQ    38,DU
         2 000604   200036 757100                    STAQ    UMC_DELRECFPT,,AUTO

      404     8019    2               UMC_DELRECFPT.V.DCB# = M$STAR_NUM;

   8019  2 000605   000056 720000 1                  LXL0    M$STAR_NUM
         2 000606   200046 740100                    STX0    UMC_DELRECFPT+8,,AUTO

      405     8020    2               UMC_DELRECFPT.KEY_ = VECTOR(CMD_KEY);

   8020  2 000607   000012 235000 3                  LDA     10
         2 000610   200067 236100                    LDQ     POOLBUF$,,AUTO
         2 000611   200040 757100                    STAQ    UMC_DELRECFPT+2,,AUTO

      406     8021        /**/
      407     8022    2               CALL M$MDELREC (UMC_DELRECFPT) ALTRET(FUNCTION_ALT);

   8022  2 000612   200036 633500                    EPPR3   UMC_DELRECFPT,,AUTO
         2 000613   200076 453500                    STP3    VALUE_PS_SIZE+2,,AUTO
         2 000614   200076 630500                    EPPR0   VALUE_PS_SIZE+2,,AUTO
         2 000615   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000616   000000 701000 xent               TSX1    M$MDELREC
         2 000617   000762 702000 2                  TSX2    FUNCTION_ALT
         2 000620   000761 710000 2                  TRA     s:8072
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:61   

      408     8023        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:62   
      409     8024    2             CASE(%CMD_LIST#);              /* LIST variable after NAMEd one      */

      410     8025    2               UMC_PRECORDFPT = INIT_PRECORDFPT; /* Initialize PRECORD FPT       */

   8025  2 000621   000100 100400                    MLR     fill='000'O
         2 000622   000044 000050 1                  ADSC9   INIT_PRECORDFPT          cn=0,n=40
         2 000623   200050 000050                    ADSC9   UMC_PRECORDFPT,,AUTO     cn=0,n=40

      411     8026    2               UMC_PRECORDFPT.V_ = VECTOR(UMC_PRECORDFPT.V);

   8026  2 000624   000007 235000 3                  LDA     7
         2 000625   200076 452500                    STP2    VALUE_PS_SIZE+2,,AUTO
         2 000626   200076 236100                    LDQ     VALUE_PS_SIZE+2,,AUTO
         2 000627   000056 036003                    ADLQ    46,DU
         2 000630   200050 757100                    STAQ    UMC_PRECORDFPT,,AUTO

      412     8027    2               UMC_PRECORDFPT.V.DCB# = M$STAR_NUM;

   8027  2 000631   000056 720000 1                  LXL0    M$STAR_NUM
         2 000632   200056 740100                    STX0    UMC_PRECORDFPT+6,,AUTO

      413     8028    2               UMC_PRECORDFPT.KEY_ = VECTOR(CMD_KEY);

   8028  2 000633   000012 235000 3                  LDA     10
         2 000634   200067 236100                    LDQ     POOLBUF$,,AUTO
         2 000635   200052 757100                    STAQ    UMC_PRECORDFPT+2,,AUTO

      414     8029        /**/                                    /* Try to find PASSED NAME            */
      415     8030    2               CALL M$PRECORD (UMC_PRECORDFPT) ALTRET(GOT_NEXT);

   8030  2 000636   200050 630500                    EPPR0   UMC_PRECORDFPT,,AUTO
         2 000637   440003 713400                    CLIMB   alt,+16387
         2 000640   401000 401760                    pmme    nvectors=3
         2 000641   000652 702000 2                  TSX2    GOT_NEXT

      416     8031        /**/                                    /* Got PASSED, find the next one!     */
      417     8032    2               UMC_PRECORDFPT.V.KEYS# = %NO#;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:63   

   8032  2 000642   000015 236000 3                  LDQ     13
         2 000643   200056 356100                    ANSQ    UMC_PRECORDFPT+6,,AUTO

      418     8033    2               UMC_PRECORDFPT.V.N# = 1;

   8033  2 000644   000001 235007                    LDA     1,DL
         2 000645   200057 755100                    STA     UMC_PRECORDFPT+7,,AUTO

      419     8034    2               CALL M$PRECORD (UMC_PRECORDFPT) ALTRET(NONESUCH);

   8034  2 000646   200050 630500                    EPPR0   UMC_PRECORDFPT,,AUTO
         2 000647   440003 713400                    CLIMB   alt,+16387
         2 000650   401000 401760                    pmme    nvectors=3
         2 000651   000767 702000 2                  TSX2    NONESUCH

   8033  2 000652                       GOT_NEXT     null
      420     8035    2   GOT_NEXT:   ;                           /* Got record PAST passed NAME        */
      421     8036        /**/
      422     8037    2               IF CMD_KEY.LEN = 0

   8037  2 000652   200067 470500                    LDP0    POOLBUF$,,AUTO
         2 000653   000000 236100                    LDQ     0,,PR0
         2 000654   777000 316003                    CANQ    -512,DU
         2 000655   000767 600000 2                  TZE     NONESUCH

      423     8038    2                THEN                       /* EOF is next                        */
      424     8039    2                  GOTO NONESUCH;           /* There is no next COMMAND VARIABLE  */
      425     8040    3               DO SELECT(CMD_KEY.START);

   8040  2 000656   040000 106500                    CMPC    fill='040'O
         2 000657   000000 200004                    ADSC9   0,,PR0                   cn=1,n=4
         2 000660   000060 000004 1                  ADSC9   M$STAR_NUM+2             cn=0,n=4
         2 000661   000664 602000 2                  TNC     s:8040+6
         2 000662   000671 600000 2                  TZE     s:8042
         2 000663   000756 710000 2                  TRA     s:8065
         2 000664   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:64   
         2 000665   000000 200004                    ADSC9   0,,PR0                   cn=1,n=4
         2 000666   000057 000004 1                  ADSC9   M$STAR_NUM+1             cn=0,n=4
         2 000667   000756 601000 2                  TNZ     s:8065
         2 000670   000721 710000 2                  TRA     s:8052

      426     8041    3                  SELECT('VAR_');          /* We got back an IBEX command var'bl */

      427     8042    3                    IF CMD_KEY.LEN < 5

   8042  2 000671   000000 236100                    LDQ     0,,PR0
         2 000672   777000 376003                    ANQ     -512,DU
         2 000673   005000 116003                    CMPQ    2560,DU
         2 000674   000767 602000 2                  TNC     NONESUCH

      428     8043    3                     THEN                  /* Not enough key to be IBEX CMDVAR   */
      429     8044    3                       GOTO NONESUCH;
      430     8045    3                    VALUE_SIZE = CMD_KEY.LEN -4; /* Ignore 'VAR_'                */

   8045  2 000675   000000 236100                    LDQ     0,,PR0
         2 000676   000033 772000                    QRL     27
         2 000677   000004 136007                    SBLQ    4,DL
         2 000700   200072 756100                    STQ     VALUE_SIZE,,AUTO

      431     8046    3                    VALUE$# -> VAR$VALUE.LEN = VALUE_SIZE_.SIZE;

   8046  2 000701   000000 471400 xsym               LDP1    B$PS2$
         2 000702   000100 100500                    MLR     fill='000'O
         2 000703   200072 600001                    ADSC9   VALUE_SIZE,,AUTO         cn=3,n=1
         2 000704   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      432     8047    3                    IF VALUE_SIZE +1 > VALUE_PS_SIZE

   8047  2 000705   200074 116100                    CMPQ    VALUE_PS_SIZE,,AUTO
         2 000706   000335 605000 2                  TPL     BAD_VALUE

      433     8048    3                     THEN                  /* VALUE area not big enough          */
      434     8049    3                       GOTO BAD_VALUE;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:65   
      435     8050    3                    VALUE$# -> VAR$VALUE.TEXT = CMD_KEY.TEXT;

   8050  2 000707   000000 470400 xsym               LDP0    B$PS2$
         2 000710   000100 101500                    MRL     fill='000'O
         2 000711   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000712   200076 000002                    ADSC9   VALUE_PS_SIZE+2,,AUTO    cn=0,n=2
         2 000713   200076 220100                    LDX0    VALUE_PS_SIZE+2,,AUTO
         2 000714   200067 471500                    LDP1    POOLBUF$,,AUTO
         2 000715   040140 100500                    MLR     fill='040'O
         2 000716   100001 200037                    ADSC9   1,,PR1                   cn=1,n=31
         2 000717   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         2 000720   000761 710000 2                  TRA     s:8072

      436     8051    3                  SELECT('VAR$');          /* We got back a PRIVATE command var  */

      437     8052    3                    IF PRIVATE_KEY.LEN < 52

   8052  2 000721   000000 236100                    LDQ     0,,PR0
         2 000722   777000 376003                    ANQ     -512,DU
         2 000723   064000 116003                    CMPQ    26624,DU
         2 000724   000767 602000 2                  TNC     NONESUCH

      438     8053    3                     THEN                  /* Not enough key to be PRIVATE CMDVR */
      439     8054    3                       GOTO NONESUCH;
      440     8055    3                    IF PRIVATE_KEY.FID ~= PRIVATE_FID

   8055  2 000725   200070 471500                    LDP1    PFID$,,AUTO
         2 000726   000100 106500                    CMPC    fill='000'O
         2 000727   000001 200057                    ADSC9   1,,PR0                   cn=1,n=47
         2 000730   100000 000057                    ADSC9   0,,PR1                   cn=0,n=47
         2 000731   000767 601000 2                  TNZ     NONESUCH

      441     8056    3                     THEN                  /* This PRIVATE is for wrong proces'r */
      442     8057    3                       GOTO NONESUCH;
      443     8058    3                    VALUE_SIZE = PRIVATE_KEY.LEN -51; /* Ignore prefix           */

   8058  2 000732   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:66   
         2 000733   000033 772000                    QRL     27
         2 000734   000063 136007                    SBLQ    51,DL
         2 000735   200072 756100                    STQ     VALUE_SIZE,,AUTO

      444     8059    3                    VALUE$# -> VAR$VALUE.LEN = VALUE_SIZE_.SIZE;

   8059  2 000736   000000 473400 xsym               LDP3    B$PS2$
         2 000737   000100 100500                    MLR     fill='000'O
         2 000740   200072 600001                    ADSC9   VALUE_SIZE,,AUTO         cn=3,n=1
         2 000741   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      445     8060    3                    IF VALUE_SIZE +1 > VALUE_PS_SIZE

   8060  2 000742   200074 116100                    CMPQ    VALUE_PS_SIZE,,AUTO
         2 000743   000335 605000 2                  TPL     BAD_VALUE

      446     8061    3                     THEN                  /* VALUE area not big enough          */
      447     8062    3                       GOTO BAD_VALUE;
      448     8063    3                    VALUE$# -> VAR$VALUE.TEXT = PRIVATE_KEY.TEXT;

   8063  2 000744   000000 470400 xsym               LDP0    B$PS2$
         2 000745   000100 101500                    MRL     fill='000'O
         2 000746   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000747   200076 000002                    ADSC9   VALUE_PS_SIZE+2,,AUTO    cn=0,n=2
         2 000750   200076 220100                    LDX0    VALUE_PS_SIZE+2,,AUTO
         2 000751   200067 473500                    LDP3    POOLBUF$,,AUTO
         2 000752   040140 100500                    MLR     fill='040'O
         2 000753   300015 000177                    ADSC9   13,,PR3                  cn=0,n=127
         2 000754   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         2 000755   000761 710000 2                  TRA     s:8072

      449     8064    3                  SELECT(ELSE);            /* We got something other than CMDVAR */

      450     8065    3                    GOTO NONESUCH;

   8065  2 000756   000767 710000 2                  TRA     NONESUCH

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:67   
      451     8066    3                  END;                     /* END SELECT                         */

      452     8067        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:68   
      453     8068    2             CASE(ELSE);                   /* Bad FUN passed                     */

      454     8069    2               ERROR = %E$BADCMDCALL;      /* Bad call                           */

   8069  2 000757   001507 235007                    LDA     839,DL
         2 000760   200062 755100                    STA     ERROR,,AUTO

      455     8070    2               END;                        /* END DO CASE                        */

      456     8071        /**/
      457     8072    1           GOTO CMDVAR_EXIT;

   8072  2 000761   000774 710000 2                  TRA     CMDVAR_ALTRTN

      458     8073        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:69   
      459     8074    1   FUNCTION_ALT:
      460     8075    1           IF B$JIT$ ->B$JIT.ERR.CODE = %E$NOKEY

   8075  2 000762   000000 470400 xsym  FUNCTION_ALT LDP0    B$JIT$
         2 000763   000012 236100                    LDQ     10,,PR0
         2 000764   377770 376007                    ANQ     131064,DL
         2 000765   001020 116007                    CMPQ    528,DL
         2 000766   000772 601000 2                  TNZ     FATAL_ALT

      461     8076    1            THEN                           /* There is no such command variable  */
      462     8077    1   NONESUCH:  ERROR = %E$NOTCMDNAME;

   8077  2 000767   001505 235007       NONESUCH     LDA     837,DL
         2 000770   200062 755100                    STA     ERROR,,AUTO
         2 000771   000774 710000 2                  TRA     CMDVAR_ALTRTN

      463     8078    1            ELSE           /* Some other (fatal) error           */
      464     8079    1   FATAL_ALT: ERROR = %E$BADCMDCALL;

   8079  2 000772   001507 235007       FATAL_ALT    LDA     839,DL
         2 000773   200062 755100                    STA     ERROR,,AUTO

   8075  2 000774                       CMDVAR_ALTR* null
      465     8080        /**/
      466     8081    1   CMDVAR_ALTRTN:
      467     8082    1          ;
      468     8083        /**/
      469     8084        /*E*    ERROR:    UMC-E$BADCMDNAME-3
      470     8085                MESSAGE: Bad command variable name.
      471     8086        */
      472     8087        /**/
      473     8088        /*E*    ERROR:    UMC-E$NOTCMDNAME-3
      474     8089                MESSAGE: There is no such command variable.
      475     8090        */
      476     8091        /**/
      477     8092        /*E*    ERROR:    UMC-E$BADCMDCALL-3
      478     8093                MESSAGE: Bad call to M$CMDVAR
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:70   
      479     8094        */
      480     8095        %EJECT;
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:71   
      481     8096    1   CMDVAR_EXIT:                            /* RETURN TO PMME HANDLER             */
      482     8097        /**/
      483     8098    1           CALL HFF$TRAPALT;               /* CLEAR TRAP HANDLER                 */

   8098  2 000774   000002 631400 xsym  CMDVAR_EXIT  EPPR1   B_VECTNIL+2
         2 000775   000000 701000 xent               TSX1    HFF$TRAPALT
         2 000776   000000 011000                    NOP     0

      484     8099    1           CALL FMD$RBUF (POOLBUF$);       /* RELEASE OUR POOL BUFFER            */

   8099  2 000777   200067 630500                    EPPR0   POOLBUF$,,AUTO
         2 001000   200076 450500                    STP0    VALUE_PS_SIZE+2,,AUTO
         2 001001   200076 630500                    EPPR0   VALUE_PS_SIZE+2,,AUTO
         2 001002   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001003   000000 701000 xent               TSX1    FMD$RBUF
         2 001004   000000 011000                    NOP     0

      485     8100        /**/
      486     8101    1           B$JIT$ -> B$JIT.DCB$ = M$STAR$; /* CLOSE M$STAR                       */

   8101  2 001005   200066 236100                    LDQ     M$STAR$,,AUTO
         2 001006   000000 470400 xsym               LDP0    B$JIT$
         2 001007   000232 756100                    STQ     154,,PR0

      487     8102    1           CALL FMP$CLSJ;

   8102  2 001010   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001011   000000 701000 xent               TSX1    FMP$CLSJ
         2 001012   000000 011000                    NOP     0

      488     8103        /**/
      489     8104    1           IF ERROR = 0

   8104  2 001013   200062 235100                    LDA     ERROR,,AUTO
         2 001014   001020 601000 2                  TNZ     s:8109

      490     8105    1            THEN                           /* Normal return                      */
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:72   
      491     8106    1              B$JIT.ERR = '0'B;

   8106  2 001015   000000 470400 xsym               LDP0    B$JIT$
         2 001016   000012 450100                    STZ     10,,PR0
         2 001017   001040 710000 2                  TRA     s:8116

      492     8107    1            ELSE                           /* ALTRETURN!                         */
      493     8108    2              DO;

      494     8109    2                B$JIT.ERR.FCG = '2515'O;   /* UM                                 */

   8109  2 001020   000000 470400 xsym               LDP0    B$JIT$
         2 001021   251500 236003                    LDQ     86848,DU
         2 001022   000012 752160                    STCQ    10,'60'O,PR0

      495     8110    2                B$JIT.ERR.MID = '03'O;     /* C                                  */

   8110  2 001023   000003 236003                    LDQ     3,DU
         2 001024   000012 752110                    STCQ    10,'10'O,PR0

      496     8111    2                B$JIT.ERR.MON = '1'B;

   8111  2 001025   400000 236007                    LDQ     -131072,DL
         2 001026   000012 256100                    ORSQ    10,,PR0

      497     8112    2                B$JIT.ERR.CODE = ERROR;

   8112  2 001027   200062 236100                    LDQ     ERROR,,AUTO
         2 001030   000003 736000                    QLS     3
         2 001031   000012 676100                    ERQ     10,,PR0
         2 001032   377770 376007                    ANQ     131064,DL
         2 001033   000012 656100                    ERSQ    10,,PR0

      498     8113    2                B$JIT.ERR.SEV = 3;

   8113  2 001034   000012 236100                    LDQ     10,,PR0
         2 001035   000016 376000 3                  ANQ     14
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:73   
         2 001036   000003 276007                    ORQ     3,DL
         2 001037   000012 756100                    STQ     10,,PR0

      499     8114    2                END;

      500     8115        /**/
      501     8116    1           RETURN;                         /* RETURN TO USER                     */

   8116  2 001040   000000 702200 xent               TSX2  ! X66_ARET

INIT_RFPT
 Sect OctLoc
   1     000   000005 777640   000010 006000   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     010   000000 600000   000000 000000   000000 000000   000000 000000    ................
   1     014   000000 000000   000000 000000                                    ........

INIT_WFPT
 Sect OctLoc
   1     016   000003 777640   000026 006000   000000 177640   000000 006014    ................
   1     022   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     026   000000 400400   000000 000000   000000 000000   000000 000000    ................

INIT_DELRECFPT
 Sect OctLoc
   1     032   000001 777640   000042 006000   000000 177640   000000 006014    ....."..........
   1     036   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     042   000000 000000   000000 000000                                    ........

INIT_PRECORDFPT
 Sect OctLoc
   1     044   000003 777640   000052 006000   000000 177640   000000 006014    .....*..........
   1     050   000000 177640   000000 006014   000000 600000   000000 000000    ................
   1     054   000000 000000   0***** ******                                    ........

M$STAR_NUM
 Sect OctLoc
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:74   
   1     056   000000 000001                                                    ....

(unnamed)
 Sect OctLoc
   1     057   126101 122044   126101 122137   052123 040040                    VAR$VAR_*S

(unnamed)
 Sect OctLoc
   3     000   000000 006003   000003 006000   000005 006000   000006 006000    ................
   3     004   000007 006000   000004 006000   777007 777777   000003 777640    ................
   3     010   000000 177640   000000 006014   000077 777640   000005 777640    .........?......
   3     014   000001 777640   777777 377777   777777 777770                    ............
      502     8117        /**/
      503     8118    1   END UMC$CMDVAR;

PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:75   
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   UM_ERRORS_C.:E05TOU  is referenced.
   UM$CP6V_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure UMC$CMDVAR.
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:76   

 **** Variables and constants ****

  ****  Section 001 RoData UMC$CMDVAR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    32-0-0/d STRC(360)   r     1 INIT_DELRECFPT            44-0-0/d STRC(360)   r     1 INIT_PRECORDFPT
     0-0-0/d STRC(504)   r     1 INIT_RFPT                 16-0-0/d STRC(432)   r     1 INIT_WFPT
    56-0-0/w UBIN        r     1 M$STAR_NUM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    62-0-0/w UBIN        r     1 ERROR                     63-0-0/w UBIN        r     1 IDX
    66-0-0/w PTR         r     1 M$STAR$                   73-0-0/w SBIN        r     1 NAME_PS_SIZE
    71-0-0/w SBIN        r     1 NAME_SIZE                 71-0-0/w STRC        r     1 NAME_SIZE_
    70-0-0/w PTR         r     1 PFID$                     67-0-0/w PTR         r     1 POOLBUF$
    65-0-0/w UBIN        r     1 START                     64-0-0/w UBIN        r     1 TABLEVAL
    36-0-0/d STRC(360)   r     1 UMC_DELRECFPT             50-0-0/d STRC(360)   r     1 UMC_PRECORDFPT
     4-0-0/d STRC(504)   r     1 UMC_RFPT                  22-0-0/d STRC(432)   r     1 UMC_WFPT
    74-0-0/w SBIN        r     1 VALUE_PS_SIZE             72-0-0/w SBIN        r     1 VALUE_SIZE
    72-0-0/w STRC        r     1 VALUE_SIZE_

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$PS1$                     0-0-0/w PTR         r     1 B$PS2$
     0-0-0/w PTR         r     1 B$PS3$                     0-0-0/w PTR         r     1 B$PS4$
     0-0-0/w PTR         r     1 B$PS5$                     0-0-0/w PTR         r     1 B$SR_NON_ALPHA$

  ****  BASED and DCB variables  ****
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:77   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(4608)  r     1 B$SR_NON_ALPHA
     0-0-0/w STRC(2304)  r     1 CMD_KEY                    0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/d STRC(72)    r     1 FPT$CMDVAR                 0-0-0/c STRC(423)   r     1 PRIVATE_FID
     0-0-0/w STRC(2304)  r     1 PRIVATE_KEY                0-0-0/c ASTR(9)     r     1 VAR$NAME
     0-0-0/c ASTR(9)     r     1 VAR$VALUE                  0-0-0/c STRC(72)    r     1 VLP$ACCT
     0-0-0/d STRC(90)    r     1 VLP$SN


   Procedure UMC$CMDVAR requires 545 words for executable code.
   Procedure UMC$CMDVAR requires 64 words of local(AUTO) storage.

    No errors detected in file UMC$CMDVAR.:E05TSI    .
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:78   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:79   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      6666**DCL      6666--REDEF
B$JIT.DCB$
      6740**DCL      7956<<ASSIGN   7972<<ASSIGN   8101<<ASSIGN
B$JIT.ERR
      6572**DCL      8106<<ASSIGN
B$JIT.ERR.CODE
      6573**DCL      8075>>IF       8112<<ASSIGN
B$JIT.ERR.FCG
      6572**DCL      8109<<ASSIGN
B$JIT.ERR.MID
      6573**DCL      6573--REDEF    8110<<ASSIGN
B$JIT.ERR.MON
      6573**DCL      8111<<ASSIGN
B$JIT.ERR.SEV
      6573**DCL      8113<<ASSIGN
B$JIT.JRESPEAK
      6734**DCL      6735--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      6843**DCL      6843--REDEF    6844--REDEF
B$JIT.PNR
      6747**DCL      6747--REDEF
B$JIT.TSLINE
      6841**DCL      6842--REDEF
B$JIT$
      7729**DCL      6567--IMP-PTR  7956>>ASSIGN   7972>>ASSIGN   8075>>IF       8101>>ASSIGN   8106>>ASSIGN
      8109>>ASSIGN   8110>>ASSIGN   8111>>ASSIGN   8112>>ASSIGN   8113>>ASSIGN
B$PS0$
      7730**DCL      7858>>IF       7864>>IF       7864>>IF       7885>>IF       7926>>IF       7932>>IF
      7982>>DOCASE
B$PS1$
      7731**DCL      7857>>ASSIGN   7869>>CALLBLT  7869>>CALLBLT  7893>>ASSIGN   7893>>ASSIGN   7918>>ASSIGN
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:80   
      7918>>ASSIGN
B$PS2$
      7732**DCL      7931>>ASSIGN   7994>>ASSIGN   8004>>ASSIGN   8009>>ASSIGN   8010>>ASSIGN   8010>>ASSIGN
      8014>>ASSIGN   8046>>ASSIGN   8050>>ASSIGN   8050>>ASSIGN   8059>>ASSIGN   8063>>ASSIGN   8063>>ASSIGN
B$PS3$
      7733**DCL      7895>>ASSIGN   7895>>ASSIGN
B$PS4$
      7734**DCL      7900>>ASSIGN
B$PS5$
      7735**DCL      7905>>ASSIGN
B$SR_NON_ALPHA
      7739**DCL      7869>>CALLBLT
B$SR_NON_ALPHA$
      7738**DCL      7739--IMP-PTR  7869>>CALLBLT
BAD_NAME
      7879**LABEL    7853--CALLALT  7855--CALLALT  7862--GOTO     7890--GOTO     7915--GOTO
BAD_VALUE
      7943**LABEL    7924--CALLALT  7929--CALLALT  7936--GOTO     8049--GOTO     8062--GOTO
CHECK
      7869**LABEL    7876--GOTO
CMDVAR_ALTRTN
      8075**LABEL    7880--GOTO     7944--GOTO
CMDVAR_EXIT
      8098**LABEL    7978--GOTO     8072--GOTO
CMD_KEY
      7750**DCL      7756--REDEF    7847--ASSIGN   7996--ASSIGN   8006--ASSIGN   8020--ASSIGN   8028--ASSIGN
CMD_KEY.LEN
      7751**DCL      7916<<ASSIGN   8037>>IF       8042>>IF       8045>>ASSIGN
CMD_KEY.START
      7752**DCL      7917<<ASSIGN   8040>>DOSELCT
CMD_KEY.TEXT
      7753**DCL      7918<<ASSIGN   8050>>ASSIGN
ERROR
      7774**DCL      7845<<ASSIGN   7879<<ASSIGN   7943<<ASSIGN   8069<<ASSIGN   8077<<ASSIGN   8079<<ASSIGN
      8104>>IF       8112>>ASSIGN
F$DCB.ACS
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:81   
       115**DCL      7967<<ASSIGN
F$DCB.ACTPOS
       123**DCL       123--REDEF
F$DCB.AMFLG
       127**DCL      7969<<ASSIGN
F$DCB.ARS
        98**DCL        98--REDEF    8013>>ASSIGN
F$DCB.ASN
       113**DCL      7966<<ASSIGN
F$DCB.ATTR
       116**DCL       117--REDEF
F$DCB.BORROW
       131**DCL       131--REDEF     131--REDEF     131--REDEF
F$DCB.DCBNAME.L
       145**DCL       145--IMP-SIZ
F$DCB.EOMCHAR
       102**DCL       102--REDEF
F$DCB.FCD
       111**DCL      7953>>IF       7976>>IF
F$DCB.FLDID
       126**DCL       126--REDEF
F$DCB.FORM$
       120**DCL       120--REDEF
F$DCB.FSECT
       136**DCL       136--REDEF
F$DCB.FSN
       113**DCL       113--REDEF     113--REDEF     114--REDEF
F$DCB.FUN
       112**DCL      7965<<ASSIGN
F$DCB.HEADER$
       119**DCL       119--REDEF
F$DCB.IXTNSIZE
       117**DCL       117--REDEF
F$DCB.LASTSTA$
       107**DCL       107--REDEF
F$DCB.LVL
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:82   
       132**DCL       132--REDEF
F$DCB.NAME.C
       107**DCL       107--REDEF    7962<<ASSIGN
F$DCB.NAME.L
       107**DCL      7961<<ASSIGN
F$DCB.NOEOF
       128**DCL       128--REDEF
F$DCB.NRECS
       118**DCL       118--REDEF
F$DCB.NRECX
       137**DCL       137--REDEF
F$DCB.OHDR
       129**DCL       129--REDEF
F$DCB.ORG
       112**DCL       112--REDEF
F$DCB.PASS
       108**DCL      7963<<ASSIGN
F$DCB.PRECNO
       135**DCL       135--REDEF
F$DCB.RCSZ
       140**DCL       140--REDEF
F$DCB.RES
       108**DCL       108--REDEF    7968<<ASSIGN
F$DCB.SETX
       120**DCL       120--REDEF
F$DCB.TAB$
       119**DCL       120--REDEF
F$DCB.TDA
       134**DCL       134--REDEF
F$DCB.WSN
       109**DCL       109--REDEF
F$DCB.WSR
       115**DCL      7970<<ASSIGN
FATAL_ALT
      8079**LABEL    7951--CALLALT  7975--CALLALT  7998--CALLALT
FMD$GBUF
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:83   
        90**DCL-ENT  7846--CALL
FMD$RBUF
        91**DCL-ENT  8099--CALL
FMM$DFLOPN
        82**DCL-ENT  7974--CALL
FMM$SCRUB
        83**DCL-ENT  7959--CALL
FMP$CLSJ
        84**DCL-ENT  7957--CALL     8102--CALL
FPT$CMDVAR.FUN
      7805**DCL      7858>>IF       7864>>IF       7926>>IF       7932>>IF       7982>>DOCASE
FPT$CMDVAR.PRIVATE
      7805**DCL      7864>>IF       7885>>IF
FUNCTION_ALT
      8075**LABEL    8012--CALLALT  8022--CALLALT
GOT_NEXT
      8033**LABEL    8030--CALLALT
HFF$DSIZ
        85**DCL-ENT  7855--CALL     7929--CALL
HFF$NILERASE
        92**DCL-ENT  7894--CALL     7899--CALL     7904--CALL
HFF$TRAPALT
        86**DCL-ENT  7853--CALL     7924--CALL     7951--CALL     7975--CALL     8098--CALL
IDX
      7775**DCL      7869<<CALLBLT  7871>>IF       7875>>ASSIGN
INIT_DELRECFPT
      7685**DCL      8017>>ASSIGN
INIT_DELRECFPT.V
      7688**DCL      7685--DCLINIT
INIT_PRECORDFPT
      7708**DCL      8025>>ASSIGN
INIT_PRECORDFPT.V
      7710**DCL      7708--DCLINIT
INIT_RFPT
      7619**DCL      8001>>ASSIGN
INIT_RFPT.STATION_
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:84   
      7622**DCL      7623--REDEF
INIT_RFPT.V
      7623**DCL      7619--DCLINIT
INIT_RFPT.V.DVBYTE.REREAD#
      7634**DCL      7634--REDEF
INIT_RFPT.V.INDX#
      7632**DCL      7632--REDEF
INIT_WFPT
      7659**DCL      7985>>ASSIGN
INIT_WFPT.STATION_
      7661**DCL      7661--REDEF
INIT_WFPT.V
      7662**DCL      7659--DCLINIT
INIT_WFPT.V.DVBYTE.VFC#
      7668**DCL      7668--REDEF
M$MDELREC
        89**DCL-ENT  8022--CALL
M$MREAD
        87**DCL-ENT  8012--CALL
M$MWRITE
        88**DCL-ENT  7998--CALL
M$PRECORD
      6177**DCL-ENT  8030--CALL     8034--CALL
M$STAR$
      7778**DCL      7848<<ASSIGN   7953>>IF       7956>>ASSIGN   7959<>CALL     7961>>ASSIGN   7962>>ASSIGN
      7963>>ASSIGN   7965>>ASSIGN   7966>>ASSIGN   7967>>ASSIGN   7968>>ASSIGN   7969>>ASSIGN   7970>>ASSIGN
      7972>>ASSIGN   7976>>IF       8013>>ASSIGN   8101>>ASSIGN
M$STAR_NUM
      7723**DCL      7848--ASSIGN   7987>>ASSIGN   8003>>ASSIGN   8019>>ASSIGN   8027>>ASSIGN
NAME_OK
      7871**LABEL    7867--GOTO     7869--CALLALT
NAME_PS_SIZE
      7791**DCL      7792--REDEF    7855<>CALL     7858>>IF
NAME_SIZE
      7783**DCL      7784--REDEF    7856<<ASSIGN   7858>>IF       7858>>IF       7888>>IF       7891>>ASSIGN
      7913>>IF       7916>>ASSIGN
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:85   
NAME_SIZE_.SIZE
      7786**DCL      7857<<ASSIGN
NONESUCH
      8077**LABEL    8034--CALLALT  8039--GOTO     8044--GOTO     8054--GOTO     8057--GOTO     8065--GOTO
NO_PACCT
      7902**LABEL    7899--CALLALT
NO_PNAME
      7897**LABEL    7894--CALLALT
NO_PPSN
      7907**LABEL    7904--CALLALT
PFID$
      7780**DCL      7765--IMP-PTR  7847<<ASSIGN   7909>>ASSIGN   8055>>IF
POOLBUF$
      7779**DCL      7750--IMP-PTR  7756--IMP-PTR  7846<>CALL     7847>>ASSIGN   7891>>ASSIGN   7892>>ASSIGN
      7893>>ASSIGN   7895>>ASSIGN   7897>>ASSIGN   7900>>ASSIGN   7902>>ASSIGN   7905>>ASSIGN   7907>>ASSIGN
      7909>>ASSIGN   7916>>ASSIGN   7917>>ASSIGN   7918>>ASSIGN   7996>>ASSIGN   8006>>ASSIGN   8020>>ASSIGN
      8028>>ASSIGN   8037>>IF       8040>>DOSELCT  8042>>IF       8045>>ASSIGN   8050>>ASSIGN   8052>>IF
      8055>>IF       8058>>ASSIGN   8063>>ASSIGN   8099<>CALL
PRIVATE_FID
      7765**DCL      7909<<ASSIGN   8055>>IF
PRIVATE_KEY.FID
      7759**DCL      7909>>ASSIGN   8055>>IF
PRIVATE_KEY.FID.ACCT
      7761**DCL      7900<<ASSIGN   7902<<ASSIGN
PRIVATE_KEY.FID.NAME
      7760**DCL      7895<<ASSIGN   7897<<ASSIGN
PRIVATE_KEY.FID.PSN
      7762**DCL      7905<<ASSIGN   7907<<ASSIGN
PRIVATE_KEY.LEN
      7757**DCL      7891<<ASSIGN   8052>>IF       8058>>ASSIGN
PRIVATE_KEY.START
      7758**DCL      7892<<ASSIGN
PRIVATE_KEY.TEXT
      7763**DCL      7893<<ASSIGN   8063>>ASSIGN
START
      7777**DCL      7868<<ASSIGN   7869>>CALLBLT  7875<<ASSIGN
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:86   
TABLEVAL
      7776**DCL      7869<<CALLBLT  7871>>IF
UMC_DELRECFPT
      7569**DCL      8017<<ASSIGN   8022<>CALL
UMC_DELRECFPT.KEY_
      7569**DCL      8020<<ASSIGN
UMC_DELRECFPT.V
      7572**DCL      8018--ASSIGN
UMC_DELRECFPT.V.DCB#
      7573**DCL      8019<<ASSIGN
UMC_DELRECFPT.V_
      7569**DCL      8018<<ASSIGN
UMC_PRECORDFPT
      7589**DCL      8025<<ASSIGN   8030<>CALL     8034<>CALL
UMC_PRECORDFPT.KEY_
      7589**DCL      8028<<ASSIGN
UMC_PRECORDFPT.V
      7591**DCL      8026--ASSIGN
UMC_PRECORDFPT.V.DCB#
      7591**DCL      8027<<ASSIGN
UMC_PRECORDFPT.V.KEYS#
      7592**DCL      8032<<ASSIGN
UMC_PRECORDFPT.V.N#
      7595**DCL      8033<<ASSIGN
UMC_PRECORDFPT.V_
      7589**DCL      8026<<ASSIGN
UMC_RFPT
      7503**DCL      8001<<ASSIGN   8012<>CALL
UMC_RFPT.BUF_.BOUND
      7505**DCL      8005<<ASSIGN
UMC_RFPT.BUF_.BUF$
      7506**DCL      8004<<ASSIGN
UMC_RFPT.KEY_
      7503**DCL      8006<<ASSIGN
UMC_RFPT.STATION_
      7506**DCL      7507--REDEF
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:87   
UMC_RFPT.V
      7507**DCL      8002--ASSIGN
UMC_RFPT.V.DCB#
      7507**DCL      8003<<ASSIGN
UMC_RFPT.V.DVBYTE.REREAD#
      7518**DCL      7518--REDEF
UMC_RFPT.V.INDX#
      7516**DCL      7516--REDEF
UMC_RFPT.V_
      7503**DCL      8002<<ASSIGN
UMC_WFPT
      7543**DCL      7985<<ASSIGN   7998<>CALL
UMC_WFPT.BUF_
      7543**DCL      7990<<ASSIGN
UMC_WFPT.BUF_.BOUND
      7543**DCL      7993<<ASSIGN
UMC_WFPT.BUF_.BUF$
      7545**DCL      7994<<ASSIGN
UMC_WFPT.KEY_
      7543**DCL      7996<<ASSIGN
UMC_WFPT.STATION_
      7545**DCL      7545--REDEF
UMC_WFPT.V
      7546**DCL      7986--ASSIGN
UMC_WFPT.V.DCB#
      7546**DCL      7987<<ASSIGN
UMC_WFPT.V.DVBYTE.VFC#
      7552**DCL      7552--REDEF
UMC_WFPT.V_
      7543**DCL      7986<<ASSIGN
VALUE_OK
      7932**LABEL    7928--GOTO
VALUE_PS_SIZE
      7795**DCL      7796--REDEF    7929<>CALL     7934>>IF       7940>>IF       8005>>ASSIGN   8008>>ASSIGN
      8047>>IF       8060>>IF
VALUE_SIZE
PL6.E3A0      #001=UMC$CMDVAR File=UMC$CMDVAR.:E05TSI                            WED 07/30/97 06:57 Page:88   
      7787**DCL      7788--REDEF    7930<<ASSIGN   7934>>IF       7988>>IF       7993>>ASSIGN   8008<<ASSIGN
      8013<<ASSIGN   8045<<ASSIGN   8047>>IF       8058<<ASSIGN   8060>>IF
VALUE_SIZE_.SIZE
      7790**DCL      7931<<ASSIGN   8009>>ASSIGN   8014>>ASSIGN   8046>>ASSIGN   8059>>ASSIGN
VAR$NAME.LEN
      7808**DCL      7809--IMP-SIZ  7857>>ASSIGN   7869>>CALLBLT  7893>>ASSIGN   7895>>ASSIGN   7918>>ASSIGN
VAR$NAME.TEXT
      7809**DCL      7869>>CALLBLT  7893>>ASSIGN   7895>>ASSIGN   7918>>ASSIGN
VAR$VALUE.LEN
      7811**DCL      7812--IMP-SIZ  7931>>ASSIGN   8009<<ASSIGN   8010>>ASSIGN   8014<<ASSIGN   8046<<ASSIGN
      8050>>ASSIGN   8059<<ASSIGN   8063>>ASSIGN
VAR$VALUE.TEXT
      7812**DCL      8010<<ASSIGN   8050<<ASSIGN   8063<<ASSIGN
VLP$ACCT.ACCT#
      7837**DCL      7900>>ASSIGN
VLP$SN.SN#
      7824**DCL      7905>>ASSIGN
