VERSION E05

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:1    
        1        1        /*M* XUP$DMPNXT - separate module containing the alternative display code */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        XUP$DMPNXT:
        8        8           PROC (G$D);
        9        9
       10       10        /*X* DMC, PLM=3, CTI=1, CSI=2, ECI=2, MCI=YES, SDI=6, THI=2 */
       11       11        %INCLUDE CP_6;
       12     5570        %INCLUDE CP_6_SUBS;
       13     6110        %INCLUDE XU_MACRO_C;
       14     9216        %INCLUDE XU_PERR_C;
       15     9407        %INCLUDE XU_SUBS_C;
       16     9499        %G$D;
       17     9595        %P$PCB (NAME=PCB, STCLASS="BASED(PCB$)");
       18     9796        %P$KEYWORDS (STCLASS="BASED(KEYWORDS$)");
       19     9814        %P$NODE (STCLASS="BASED(NODE$)");
       20     9908        %P$LIT  (STCLASS="BASED(NODE$)", LEN="P$LIT.COUNT");
       21     9961        %P$SYM  (STCLASS="BASED(NODE$)", LEN="P$SYM.COUNT");
       22    10040        %P$DSTR (STCLASS="BASED(NODE$)");
       23    10084        %FPT_OPEN (FPTN=CONSTANT_OPEN, FUN=CREATE, DISP=NAMED, STCLASS=CONSTANT);
       24    10193        %FPT_OPEN (FPTN=AUTO_OPEN, STCLASS=AUTO);
       25    10302        %FPT_WRITE(STCLASS=CONSTANT,FPTN=CONST_WRITE);
       26    10333        %FPT_WRITE(STCLASS=,FPTN=AUTO_WRITE);
       27    10364        %FPT_ERRMSG   (FPTN=CONSTANT_ERRMSG, STCLASS=CONSTANT, INCLCODE=NO);
       28    10391        %FPT_ERRMSG   (FPTN=AUTO_ERRMSG, STCLASS=AUTO);
       29    10418        %VLP_ERRCODE  (FPTN=CONSTANT_CODE, STCLASS=CONSTANT, FCG=XU,MID=P,SEV=0);
       30    10463        %VLP_ERRCODE  (FPTN=AUTO_CODE, STCLASS=AUTO);
       31    10508        %VLR_ERRMSG (FPTN=AUTO_RESULTS, STCLASS=AUTO);
       32    10530        %VLP_NAME  (FPTN=FIELD1, STCLASS=AUTO, LEN=31);
       33    10557        %VLP_NAME  (FPTN=FIELD2, STCLASS=AUTO, LEN=31);
       34    10584        %VLP_NAME  (FPTN=XUERRMSG, STCLASS=CONSTANT, NAME=':XUERRMSG');
       35    10611        %F$DCB;
       36    10668        %EQU DEBUG='1'B;
       37    10669    1   DCL ERRMSG_BUF CHAR (120) AUTO;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:2    
       38    10670    1   DCL KEYWORDS$ PTR;
       39    10671    1   DCL NODE$ PTR;
       40    10672    1   DCL OUTDCB UBIN WORD;
       41    10673    1   DCL OVER_FLOW BIT (36) SYMREF READONLY;
       42    10674    1   DCL P$ PTR;
       43    10675    1   DCL PCB$ PTR AUTO;
       44    10676        %XUP$POSS (NAME=POSS, STCLASS="BASED(P$)");
       45    10681    1   DCL PRINT CHAR (140);
       46    10682    1   DCL 1 STATS,
       47    10683    1             2 LEXEME_COUNT SBIN,
       48    10684    1             2 LITERAL_COUNT SBIN,
       49    10685    1             2 LONGEST_LITERAL SBIN,
       50    10686    1             2 LONGEST_ABREV SBIN;
       51    10687    1   DCL WIDTH SBIN;
       52    10688    1   DCL XUP$EXPAND_WORKAREA ENTRY (1) ALTRET;
       53    10689        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:3    
       54    10690    1      PCB$ = G$D.PCB$;
       55    10691
       56    10692    1      P$ = PINCRW (PCB.WORK$, PCB.WK_USED);
       57    10693
       58    10694    1      PCB.BLANKONLY = %NO#;
       59    10695
       60    10696    1      CALL SORT_NODES;
       61    10697    1      CALL GATHER_STATISTICS;
       62    10698
       63    10699    1      IF PCB.KEYWORDS
       64    10700    2        THEN DO;
       65    10701
       66    10702    2         CALL ALLOCATE_KEYWORD_AREA;
       67    10703    2         CALL MOVE_KEYWORD_POINTERS;
       68    10704
       69    10705    2         END;
       70    10706
       71    10707    2        ELSE DO;
       72    10708
       73    10709    2         IF POSS.COUNT = 0
       74    10710    2           THEN
       75    10711    2            RETURN;
       76    10712
       77    10713    2         CALL SETUP_FOR_PRINT;
       78    10714    2         CALL PRINT_LEXEMES;
       79    10715    2         CALL PRINT_LITERALS;
       80    10716
       81    10717    2         END;
       82    10718
       83    10719    1      RETURN;
       84    10720        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:4    
       85    10721    1   XUP$DMPCORRECTED: ENTRY (G$D);
       86    10722
       87    10723        /*D*  ENTRY:      XUP$DMPCORRECTED
       88    10724              CALL:       CALL XUP$DMPCORRECTED (pcb);
       89    10725              INPUT:      "pcb", a parse control block whose OUT$ pointer must
       90    10726                          contain the address of a valid P$KEYWORDS block.
       91    10727              OUTPUT:     Those keywords whose corresponding bits in the array
       92    10728                          pointed to by pcb.OUT$ -> P$KEYWORDS.LEGAL$ will be
       93    10729                          displayed on pcb.OUTDCB#, or passed in the usual way
       94    10730                          to PCB.OUTENT$$.
       95    10731              DESCRIPTION: This entry point may be used in conjunction with the
       96    10732                          spelling corrector, to display a set of keywords which might
       97    10733                          correspond to a mis-spelled keyword in a user's command.
       98    10734        */
       99    10735
      100    10736    1      PCB$ = ADDR(G$D);
      101    10737    1      P$ = PINCRW (PCB.WORK$, PCB.WK_USED);
      102    10738
      103    10739        /*N*  WARNING -- KLUGE -- WARNING
      104    10740              This entry point formally defines its parameter as G$D (parse global
      105    10741              information block), but the code actually expects to receive PCB
      106    10742              (user parse control block).  This is done for the sake of expediency,
      107    10743              and is truely horrible.  DO NOT modify the code anywhere in this
      108    10744              compile unit in such a way that a call to XUP$DMPCORRECTED would lead to
      109    10745              any attempt to reference G$D - this will cause *horrible* things to
      110    10746              happen!!!!!
      111    10747        */
      112    10748
      113    10749    1      CALL REGENERATE_NODES;
      114    10750    1      CALL SORT_NODES;
      115    10751    1      CALL GATHER_STATISTICS;
      116    10752    1      CALL SETUP_FOR_PRINT;
      117    10753    1      CALL PRINT_LITERALS;
      118    10754
      119    10755    1      RETURN;
      120    10756        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:5    
      121    10757    1   REGENERATE_NODES: PROC;
      122    10758
      123    10759        /*I*  NAME:    REGENERATE_NODES
      124    10760              PURPOSE: Regenerates a POSS structure, given a P$KEYWORDS structure.
      125    10761              DESCRIPTION: This procedure will scan through the P$KEYWORDS structure
      126    10762                       addressed by PCB.OUT$, and will build a POSS structure
      127    10763                       containing pointers to the nodes containing legal keywords.
      128    10764                       NOTE that the PCB must not have been altered between
      129    10765                       the call to XUP$DMPNXT (via X$PARSE) and the call to
      130    10766                       XUP$DMPCORRECTED!!!
      131    10767        */
      132    10768
      133    10769    2   DCL I SBIN WORD;
      134    10770    2   DCL LEGAL_ARRAY (0:0) BIT (1) UNAL BASED;
      135    10771
      136    10772    2      KEYWORDS$ = PCB.OUT$;
      137    10773    2      POSS.COUNT = 0;
      138    10774
      139    10775    3      DO I = 0 TO P$KEYWORDS.KEYWORD_COUNT - 1;
      140    10776
      141    10777    3         IF P$KEYWORDS.LEGAL$ -> LEGAL_ARRAY(I)
      142    10778    4           THEN DO;
      143    10779
      144    10780        /*N* Following PINCRW calculation is ugly but effective.  If P$LIT ever
      145    10781             changes, this code may need changes also. */
      146    10782
      147    10783    4            POSS.NODES$(POSS.COUNT) = PINCRW (P$KEYWORDS.KEYWORDS$(I), -1);
      148    10784    4            POSS.COUNT = POSS.COUNT + 1;
      149    10785
      150    10786    4            END;
      151    10787
      152    10788    3         END;
      153    10789
      154    10790    2   END REGENERATE_NODES;
      155    10791        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:6    
      156    10792    1   SORT_NODES: PROC;
      157    10793
      158    10794        /*I*  NAME:    SORT_NODES
      159    10795              PURPOSE: Sorts nodes into "correct" order
      160    10796              DESCRIPTION: This routine sorts "possible alternative" node pointers
      161    10797                       into the order in which they will be printed.  The ordering used
      162    10798                       is as follows:
      163    10799
      164    10800                       1- Lexeme nodes are sorted "before" literal nodes.
      165    10801                       2- Lexeme nodes are sorted in ascending "lexical type" order;
      166    10802                       3- Literal nodes are sorted in ascending alphabetical order.
      167    10803        */
      168    10804
      169    10805    2   DCL I SBIN;
      170    10806    2   DCL I$ PTR;
      171    10807    2   DCL J SBIN;
      172    10808    2   DCL J$ PTR;
      173    10809    2   DCL LOW UBIN;
      174    10810    2   DCL LOW$ PTR;
      175    10811
      176    10812    3   ITERATE_I: DO I = 0 TO POSS.COUNT - 2;
      177    10813
      178    10814    3         I$ = POSS.NODES$(I);
      179    10815    3         LOW = I;
      180    10816
      181    10817    4   ITERATE_J: DO J = I+1 TO POSS.COUNT - 1;
      182    10818    4            LOW$ = POSS.NODES$(LOW);
      183    10819    4            J$ = POSS.NODES$(J);
      184    10820    4            IF LOW$ -> P$NODE.TYPE < J$ -> P$NODE.TYPE
      185    10821    4              THEN
      186    10822    4               LOW = J;
      187    10823    4              ELSE
      188    10824    4               IF LOW$ -> P$NODE.TYPE = J$ -> P$NODE.TYPE
      189    10825    4                 THEN
      190    10826    5   COMPARE_IN_TYPE: DO CASE (LOW$ -> P$NODE.TYPE);
      191    10827
      192    10828    5                 CASE (%TYPE_LITERAL#);
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:7    
      193    10829
      194    10830    5                  IF LOW$ -> P$LIT.TEXT > J$ -> P$LIT.TEXT
      195    10831    5                    THEN
      196    10832    5                     LOW = J;
      197    10833
      198    10834    5                 CASE (%TYPE_LEXEME#);
      199    10835
      200    10836    5                  IF LOW$ -> P$SYM.LEXTYPE > J$ -> P$SYM.LEXTYPE
      201    10837    5                    THEN
      202    10838    5                     LOW = J;
      203    10839    5                    ELSE
      204    10840    5                     IF LOW$ -> P$SYM.LEXTYPE = J$ -> P$SYM.LEXTYPE
      205    10841    5                       THEN
      206    10842    6   COMPARE_IN_LEXTYPE: DO CASE (LOW$ -> P$SYM.LEXTYPE);
      207    10843
      208    10844    6                       CASE (%LEX_BLANK#, %LEX_END#);
      209    10845
      210    10846    6                       CASE (%LEX_DSTRING#);
      211    10847
      212    10848    6                        IF LOW$ -> P$DSTR.DLIM > J$ -> P$DSTR.DLIM OR
      213    10849    6                         (LOW$ -> P$DSTR.DLIM = J$ -> P$DSTR.DLIM AND
      214    10850    6                         LOW$ -> P$DSTR.MAXL > J$ -> P$DSTR.MAXL)
      215    10851    6                          THEN
      216    10852    6                           LOW = J;
      217    10853
      218    10854    6                       CASE (ELSE);
      219    10855
      220    10856    6                        IF LOW$ -> P$SYM.XTRA > J$ -> P$SYM.XTRA OR
      221    10857    6                         (LOW$ -> P$SYM.XTRA AND J$ -> P$SYM.XTRA AND
      222    10858    6                         (LOW$ -> P$SYM.MAXL > J$ -> P$SYM.MAXL OR
      223    10859    6                         LOW$ -> P$SYM.TEXT > J$ -> P$SYM.TEXT))
      224    10860    6                          THEN
      225    10861    6                           LOW = J;
      226    10862
      227    10863    6                       END COMPARE_IN_LEXTYPE;
      228    10864
      229    10865    5                 END COMPARE_IN_TYPE;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:8    
      230    10866
      231    10867    4            END ITERATE_J;
      232    10868
      233    10869    3         IF LOW ~= I
      234    10870    3           THEN
      235    10871    4   SWAP_NODES: DO;
      236    10872
      237    10873    4            POSS.NODES$(I) = POSS.NODES$(LOW);
      238    10874    4            POSS.NODES$(LOW) = I$;
      239    10875    4            I$ = POSS.NODES$(I);
      240    10876
      241    10877    4            END SWAP_NODES;
      242    10878
      243    10879    3         END ITERATE_I;
      244    10880
      245    10881    2      RETURN;
      246    10882
      247    10883    2   END SORT_NODES;
      248    10884
      249    10885        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:9    
      250    10886    1   GATHER_STATISTICS: PROC;
      251    10887
      252    10888        /*I*  NAME:    GATHER_STATISTICS
      253    10889              PURPOSE: Collects counts, lengths, etc. for possible syntax
      254    10890                       alternatives.
      255    10891        */
      256    10892
      257    10893    2   DCL I SBIN;
      258    10894    2   DCL I$ PTR;
      259    10895
      260    10896    2      STATS = '0'B;
      261    10897
      262    10898    3      DO I = 0 TO POSS.COUNT - 1;
      263    10899
      264    10900    3         I$ = POSS.NODES$(I);
      265    10901
      266    10902    4         DO CASE (I$ -> P$NODE.TYPE);
      267    10903
      268    10904    4           CASE (%TYPE_LITERAL#);
      269    10905
      270    10906    4            STATS.LITERAL_COUNT = STATS.LITERAL_COUNT + 1;
      271    10907    4            STATS.LONGEST_ABREV = MAXIMUM(STATS.LONGEST_ABREV, I$ -> P$LIT.ABREV);
      272    10908
      273    10909    4            IF I$ -> P$LIT.ABREV > 0
      274    10910    4              THEN
      275    10911    4               STATS.LONGEST_LITERAL = MAXIMUM(STATS.LONGEST_LITERAL,
      276    10912    4                I$ -> P$LIT.COUNT + 1);
      277    10913    4              ELSE
      278    10914    4               STATS.LONGEST_LITERAL = MAXIMUM(STATS.LONGEST_LITERAL,
      279    10915    4                I$ -> P$LIT.COUNT);
      280    10916
      281    10917    4           CASE (%TYPE_LEXEME#);
      282    10918
      283    10919    4            STATS.LEXEME_COUNT = STATS.LEXEME_COUNT + 1;
      284    10920
      285    10921    4           END;
      286    10922
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:10   
      287    10923    3         END;
      288    10924
      289    10925    2      IF POSS.COUNT = 1
      290    10926    2       AND POSS.NODES$(0) -> P$NODE.TYPE = %TYPE_LEXEME#
      291    10927    2       AND POSS.NODES$(0) -> P$SYM.LEXTYPE = %LEX_BLANK#
      292    10928    2        THEN
      293    10929    2         PCB.BLANKONLY = %YES#;
      294    10930
      295    10931    2      RETURN;
      296    10932
      297    10933    2   END GATHER_STATISTICS;
      298    10934
      299    10935        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:11   
      300    10936    1   ALLOCATE_KEYWORD_AREA: PROC;
      301    10937
      302    10938        /*I*  NAME:    ALLOCATE_KEYWORD_AREA
      303    10939              PURPOSE: Allocate a block of memory somewhere in the parse work area,
      304    10940                       which is large enough to hold a P$KEYWORDS data structure
      305    10941                       that will be filled in by MOVE_KEYWORD_POINTERS.
      306    10942        */
      307    10943
      308    10944    2   DCL KEYWORD_OFFSET SBIN WORD;
      309    10945    2   DCL WORDS_NEEDED UBIN WORD;
      310    10946
      311    10947    2      KEYWORD_OFFSET = -1;
      312    10948
      313    10949    2      WORDS_NEEDED = SIZEW (P$KEYWORDS) +
      314    10950    2       SIZEW(P$KEYWORDS.KEYWORDS$) * (STATS.LITERAL_COUNT - 1) +
      315    10951    2       (STATS.LITERAL_COUNT + 35) / 36;
      316    10952
      317    10953    2      IF WORDS_NEEDED <= PCB.WK_USED
      318    10954    2        THEN
      319    10955    2         KEYWORD_OFFSET = 0;
      320    10956
      321    10957    3        ELSE DO UNTIL KEYWORD_OFFSET >= 0;
      322    10958
      323    10959    3         IF WORDS_NEEDED > PCB.WKSZ - (PCB.WK_USED + POSS.COUNT + SIZEW(POSS))
      324    10960    3           THEN
      325    10961    3            CALL XUP$EXPAND_WORKAREA (G$D) ALTRET (INSUFFICIENT_SPACE);
      326    10962    3           ELSE
      327    10963    3            KEYWORD_OFFSET = PCB.WK_USED + POSS.COUNT + SIZEW(POSS);
      328    10964
      329    10965    3         END;
      330    10966
      331    10967    2      KEYWORDS$ = PINCRW(PCB.WORK$, KEYWORD_OFFSET);
      332    10968    2      PCB.OUT$ = KEYWORDS$;
      333    10969
      334    10970    2      P$KEYWORDS.KEYWORD_COUNT = STATS.LITERAL_COUNT;
      335    10971    2      P$KEYWORDS.LEGAL$ = ADDR(P$KEYWORDS.KEYWORDS$(P$KEYWORDS.KEYWORD_COUNT));
      336    10972
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:12   
      337    10973    2      RETURN;
      338    10974
      339    10975    2   INSUFFICIENT_SPACE:
      340    10976
      341    10977    2      PCB.ERROR = OVER_FLOW;
      342    10978    2      PCB.OUT$ = ADDR(NIL);
      343    10979    2      UNWIND TO G$D.ERROR;
      344    10980
      345    10981    2   END ALLOCATE_KEYWORD_AREA;
      346    10982        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:13   
      347    10983    1   MOVE_KEYWORD_POINTERS: PROC;
      348    10984
      349    10985        /*I*  NAME:    MOVE_KEYWORD_POINTERS
      350    10986              PURPOSE: Fill in the P$KEYWORDS.KEYWORDS$ pointers to the TEXTC
      351    10987                       representations of the keywords which would be legal at the
      352    10988                       point of error.
      353    10989        */
      354    10990
      355    10991    2   DCL KEYWORD SBIN WORD;
      356    10992
      357    10993    3      DO KEYWORD = 0 TO STATS.LITERAL_COUNT - 1;
      358    10994
      359    10995    3         P$KEYWORDS.KEYWORDS$(KEYWORD) =
      360    10996    3          ADDR(POSS.NODES$(KEYWORD+STATS.LEXEME_COUNT) -> P$LIT.COUNT);
      361    10997
      362    10998    3         END;
      363    10999
      364    11000    2      RETURN;
      365    11001
      366    11002    2   END MOVE_KEYWORD_POINTERS;
      367    11003        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:14   
      368    11004    1   SETUP_FOR_PRINT: PROC;
      369    11005
      370    11006    2      AUTO_ERRMSG = CONSTANT_ERRMSG;
      371    11007    2      AUTO_ERRMSG.V_ = VECTOR(AUTO_ERRMSG.V);
      372    11008    2      AUTO_ERRMSG.BUF_ = VECTOR(ERRMSG_BUF);
      373    11009    2      AUTO_ERRMSG.CODE_ = VECTOR(AUTO_CODE);
      374    11010    2      AUTO_ERRMSG.RESULTS_ = VECTOR(AUTO_RESULTS);
      375    11011
      376    11012        %IF DEBUG;
      377    11013
      378    11014    2      AUTO_ERRMSG.FILEACCT_ = VECTOR(DCBADDR(%M$LM#) -> F$DCB.ACCT#);
      379    11015    2      AUTO_ERRMSG.FILENAME_ = VECTOR (XUERRMSG);
      380    11016
      381    11017        %ENDIF;
      382    11018
      383    11019    2      AUTO_CODE = CONSTANT_CODE;
      384    11020
      385    11021    2      IF PCB.OUTENT$ ~= ENTADDR(NIL)
      386    11022    3        THEN DO;
      387    11023
      388    11024    3         OUTDCB = DCBNUM(NIL);
      389    11025    3         WIDTH = 80;
      390    11026
      391    11027    3         END;
      392    11028
      393    11029    3        ELSE DO;
      394    11030
      395    11031    3         IF PCB.OUTDCB# = DCBNUM(NIL)
      396    11032    3           THEN
      397    11033    3            OUTDCB = %M$DO#;
      398    11034    3           ELSE
      399    11035    3            OUTDCB = PCB.OUTDCB#;
      400    11036
      401    11037    3         IF NOT DCBADDR(OUTDCB) -> F$DCB.FCD#
      402    11038    4           THEN DO;
      403    11039
      404    11040    4            AUTO_OPEN = CONSTANT_OPEN;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:15   
      405    11041    4            AUTO_OPEN.V_ = VECTOR (AUTO_OPEN.V);
      406    11042    4            AUTO_OPEN.V.DCB# = OUTDCB;
      407    11043
      408    11044    5            CALL M$OPEN (AUTO_OPEN) WHENALTRETURN DO; END;
      409    11045
      410    11046    4            END;
      411    11047
      412    11048    3         WIDTH = MINIMUM(MAXIMUM(DCBADDR(OUTDCB) -> F$DCB.WIDTH#, 32),
      413    11049    3          LENGTHC(PRINT));
      414    11050
      415    11051    3         AUTO_WRITE = CONST_WRITE;
      416    11052    3         AUTO_WRITE.V_ = VECTOR (AUTO_WRITE.V);
      417    11053    3         AUTO_WRITE.V.DCB# = OUTDCB;
      418    11054
      419    11055    3         END;
      420    11056
      421    11057    2      AUTO_WRITE.BUF_ = VECTOR(SUBSTR(PRINT, 0, WIDTH));
      422    11058
      423    11059    2      RETURN;
      424    11060
      425    11061    2   END SETUP_FOR_PRINT;
      426    11062
      427    11063        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:16   
      428    11064    1   PRINT_LEXEMES: PROC;
      429    11065
      430    11066        /*I*  NAME:       PRINT_LEXEMES
      431    11067              PURPOSE:    Prints lexemes
      432    11068        */
      433    11069
      434    11070    2   DCL I SBIN;
      435    11071    2   DCL I$ PTR;
      436    11072
      437    11073    3      DO I = 0 TO STATS.LEXEME_COUNT - 1;
      438    11074
      439    11075    3         I$ = POSS.NODES$(I);
      440    11076
      441    11077    4         DO CASE (I$ -> P$SYM.LEXTYPE);
      442    11078
      443    11079    4           CASE (%LEX_DECIMAL#,
      444    11080    4          %LEX_OCTAL#,
      445    11081    4          %LEX_HEX#,
      446    11082    4          %LEX_ALPHA#,
      447    11083    4          %LEX_ANUMERIC#,
      448    11084    4          %LEX_SYMBOL#,
      449    11085    4          %LEX_PL6SYM#,
      450    11086    4          %LEX_FID#,
      451    11087    4          %LEX_JOBNAME#,
      452    11088    4          %LEX_ACCOUNT#,
      453    11089    4          %LEX_ASYM#,
      454    11090    4          %LEX_NULL#);
      455    11091
      456    11092    4            AUTO_CODE.ERR# = %E$POSSIBLE_DECIMAL + I$ -> P$SYM.LEXTYPE - 1;
      457    11093
      458    11094        /*E*  ERROR:   XUP-E$POSSIBLE_DECIMAL
      459    11095              MESSAGE: a decimal integer% (plus '%U1')%% of length %U2 or less%
      460    11096        */
      461    11097        /*E*  ERROR:   XUP-E$POSSIBLE_OCTAL
      462    11098              MESSAGE: an octal integer% (plus '%U1')%% of length %U2 or less%
      463    11099        */
      464    11100        /*E*  ERROR:   XUP-E$POSSIBLE_HEX
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:17   
      465    11101              MESSAGE: a hexadecimal integer% (plus '%U1')%% of length %U2 or less%
      466    11102        */
      467    11103        /*E*  ERROR:   XUP-E$POSSIBLE_ALPHA
      468    11104              MESSAGE: an alphabetic name% (plus '%U1')%% of length %U2 or less%
      469    11105        */
      470    11106        /*E*  ERROR:   XUP-E$POSSIBLE_ANUMERIC
      471    11107              MESSAGE: an alphanumeric name% (plus '%U1')%% of length %U2 or less%
      472    11108        */
      473    11109        /*E*  ERROR:   XUP-E$POSSIBLE_SYMBOL
      474    11110              MESSAGE: a symbol name% (plus '%U1')%% of length %U2 or less%
      475    11111        */
      476    11112        /*E*  ERROR:   XUP-E$POSSIBLE_PL6SYM
      477    11113              MESSAGE: a PL-6 symbol name% (plus '%U1')%% of length %U2 or less%
      478    11114        */
      479    11115        /*E*  ERROR:   XUP-E$POSSIBLE_FID
      480    11116              MESSAGE: a FID (File IDentifier)% (plus '%U1')%% of length %U2 or less%
      481    11117        */
      482    11118        /*E*  ERROR:   XUP-E$POSSIBLE_JOBNAME
      483    11119              MESSAGE: a job name% (plus '%U1')%% of length %U2 or less%
      484    11120        */
      485    11121        /*E*  ERROR:   XUP-E$POSSIBLE_ACCOUNT
      486    11122              MESSAGE: an account name/number% (plus '%U1')%% of length %U2 or less%
      487    11123        */
      488    11124        /*E*  ERROR:   XUP-E$POSSIBLE_ASYM
      489    11125              MESSAGE: anything up to any '%U1' (or end-of-line)% of length %U2 or less%
      490    11126        */
      491    11127        /*E*  ERROR:   XUP-E$POSSIBLE_NULL
      492    11128              MESSAGE: any combination of '%U1'% of length %U2 or less%
      493    11129        */
      494    11130
      495    11131    4            IF I$ -> P$SYM.XTRA
      496    11132    5              THEN DO;
      497    11133
      498    11134    5               CALL CRAM_FIELD2 (BINBIT(I$ -> P$SYM.MAXL, 36));
      499    11135
      500    11136    5               IF I$ -> P$SYM.COUNT = 0
      501    11137    5                 THEN
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:18   
      502    11138    5                  AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);
      503    11139    6                 ELSE DO;
      504    11140
      505    11141    6                  FIELD1.L# = I$ -> P$SYM.COUNT;
      506    11142    6                  FIELD1.NAME# = I$ -> P$SYM.TEXT;
      507    11143    6                  AUTO_ERRMSG.FIELD1_ = VECTOR(FIELD1);
      508    11144
      509    11145    6                  END;
      510    11146
      511    11147    5               END;
      512    11148
      513    11149    5              ELSE DO;
      514    11150
      515    11151    5               AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);
      516    11152    5               AUTO_ERRMSG.FIELD2_ = VECTOR(NIL);
      517    11153
      518    11154    5               END;
      519    11155
      520    11156    4           CASE (%LEX_BLANK#);
      521    11157
      522    11158    4            IF PCB.COMMENT.LEAD = ' ' OR PCB.COMMENT.TRAIL = ' '
      523    11159    5              THEN DO;
      524    11160
      525    11161    5               AUTO_CODE.ERR# = %E$POSSIBLE_BLANK;
      526    11162
      527    11163        /*E*  ERROR:   XUP-E$POSSIBLE_BLANK
      528    11164              MESSAGE: one or more blanks.
      529    11165        */
      530    11166
      531    11167    5               AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);
      532    11168    5               AUTO_ERRMSG.FIELD2_ = VECTOR(NIL);
      533    11169
      534    11170    5               END;
      535    11171
      536    11172    5              ELSE DO;
      537    11173
      538    11174    5               AUTO_CODE.ERR# = %E$POSSIBLE_BLANK_OR_COMMENT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:19   
      539    11175
      540    11176        /*E*  ERROR:   XUP-E$POSSIBLE_BLANK_OR_COMMENT
      541    11177              MESSAGE: one or more blanks (and/or a %%U1%comment%%U2%).
      542    11178        */
      543    11179
      544    11180    5               CALL SETUP_COMMENT_FIELDS;
      545    11181
      546    11182    5               END;
      547    11183
      548    11184    4           CASE (%LEX_END#);
      549    11185
      550    11186    4            IF PCB.COMMENT.LEAD = ' '
      551    11187    5              THEN DO;
      552    11188
      553    11189    5               AUTO_CODE.ERR# = %E$POSSIBLE_END;
      554    11190
      555    11191        /*E*  ERROR:   XUP-E$POSSIBLE_END
      556    11192              MESSAGE: nothing at all (the end of the command).
      557    11193        */
      558    11194
      559    11195    5               AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);
      560    11196    5               AUTO_ERRMSG.FIELD2_ = VECTOR(NIL);
      561    11197
      562    11198    5               END;
      563    11199
      564    11200    5              ELSE DO;
      565    11201
      566    11202    5               AUTO_CODE.ERR# = %E$POSSIBLE_END_OR_COMMENT;
      567    11203
      568    11204        /*E*  ERROR:   XUP-E$POSSIBLE_END_OR_COMMENT
      569    11205              MESSAGE: the end of the command (possibly with a %%U1%comment%%U2%).
      570    11206        */
      571    11207
      572    11208    5               CALL SETUP_COMMENT_FIELDS;
      573    11209
      574    11210    5               END;
      575    11211
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:20   
      576    11212    4           CASE (%LEX_DSTRING#);
      577    11213
      578    11214    4            AUTO_CODE.ERR# = %E$POSSIBLE_DSTRING;
      579    11215
      580    11216        /*E*  ERROR:   XUP-E$POSSIBLE_DSTRING
      581    11217              MESSAGE: a %%U1%string%%U1%% of length %U2 or less%.
      582    11218        */
      583    11219
      584    11220    4            IF I$ -> P$DSTR.DLIM = BINASC(0)
      585    11221    4              THEN
      586    11222    4               AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);
      587    11223
      588    11224    5              ELSE DO;
      589    11225
      590    11226    5               FIELD1.L# = 1;
      591    11227    5               FIELD1.NAME# = I$ -> P$DSTR.DLIM;
      592    11228    5               AUTO_ERRMSG.FIELD1_ = VECTOR(FIELD1);
      593    11229
      594    11230    5               END;
      595    11231
      596    11232    4            CALL CRAM_FIELD2 (BINBIT(I$ -> P$DSTR.MAXL, 36));
      597    11233
      598    11234    4           END;
      599    11235
      600    11236    3         CALL M$ERRMSG (AUTO_ERRMSG) ALTRET (IGNORE_ALTRET);
      601    11237
      602    11238    3   IGNORE_ALTRET:
      603    11239
      604    11240    3         CALL WRITE_OUTPUT (ERRMSG_BUF, LENGTHC(ERRMSG_BUF));
      605    11241
      606    11242    3         END;
      607    11243
      608    11244    2      RETURN;
      609    11245
      610    11246    2   END PRINT_LEXEMES;
      611    11247
      612    11248        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:21   
      613    11249    1   SETUP_COMMENT_FIELDS: PROC;
      614    11250
      615    11251    2      CALL SETUP_FIELD (FIELD1, AUTO_ERRMSG.FIELD1_, PCB.COMMENT.LEAD);
      616    11252    2      CALL SETUP_FIELD (FIELD2, AUTO_ERRMSG.FIELD2_, PCB.COMMENT.TRAIL);
      617    11253
      618    11254    2      RETURN;
      619    11255
      620    11256    2   SETUP_FIELD: PROC (FIELD, FIELD_, CHARS);
      621    11257
      622    11258           %VLP_NAME (FPTN=FIELD, STCLASS=" ", LEN=31);
      623    11285
      624    11286    3   DCL FIELD_ VECTOR;
      625    11287    3   DCL CHARS CHAR (2);
      626    11288
      627    11289    3      IF CHARS = '  '
      628    11290    3        THEN
      629    11291    3         FIELD_ = VECTOR (NIL);
      630    11292
      631    11293    4        ELSE DO;
      632    11294
      633    11295    4         FIELD_ = VECTOR (FIELD);
      634    11296
      635    11297    4         IF SUBSTR (CHARS, 0, 1) = ' '
      636    11298    5           THEN DO;
      637    11299
      638    11300    5            FIELD.L# = 1;
      639    11301    5            FIELD.NAME# = SUBSTR (CHARS, 1);
      640    11302
      641    11303    5            END;
      642    11304
      643    11305    5           ELSE DO;
      644    11306
      645    11307    5            FIELD.L# = 2;
      646    11308    5            FIELD.NAME# = CHARS;
      647    11309
      648    11310    5            END;
      649    11311
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:22   
      650    11312    4         END;
      651    11313
      652    11314    3      RETURN;
      653    11315
      654    11316    3   END SETUP_FIELD;
      655    11317
      656    11318    2   END SETUP_COMMENT_FIELDS;
      657    11319        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:23   
      658    11320    1   CRAM_FIELD2: PROC (F2);
      659    11321
      660    11322    2   DCL F2 UBIN;
      661    11323    2   DCL IF2 UBIN;
      662    11324
      663    11325    2      IF F2 = 0
      664    11326    2        THEN
      665    11327    2         AUTO_ERRMSG.FIELD2_ = VECTOR(NIL);
      666    11328
      667    11329    3        ELSE DO;
      668    11330
      669    11331    3         AUTO_ERRMSG.FIELD2_ = VECTOR(FIELD2);
      670    11332
      671    11333    3         IF2 = F2;
      672    11334    3         FIELD2.L# = 1;
      673    11335
      674    11336    4         DO WHILE (IF2 >= 10);
      675    11337
      676    11338    4            FIELD2.L# = FIELD2.L# + 1;
      677    11339    4            IF2 = IF2 / 10;
      678    11340
      679    11341    4            END;
      680    11342
      681    11343    3         CALL BINCHAR (SUBSTR(FIELD2.NAME#, 0, FIELD2.L#), F2);
      682    11344
      683    11345    3         END;
      684    11346
      685    11347    2      RETURN;
      686    11348
      687    11349    2   END CRAM_FIELD2;
      688    11350
      689    11351        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:24   
      690    11352    1   PRINT_LITERALS: PROC;
      691    11353
      692    11354    2   DCL COLUMNS_PER_LITERAL SBIN;
      693    11355    2   DCL COLS_USED SBIN;
      694    11356    2   DCL I SBIN;
      695    11357    2   DCL I$ PTR;
      696    11358    2   DCL LITBUF CHAR (140);
      697    11359    2   DCL LITERALS_PER_LINE SBIN;
      698    11360    2   DCL LIT_POS SBIN;
      699    11361
      700    11362    2      IF STATS.LITERAL_COUNT = 0
      701    11363    2        THEN
      702    11364    2         RETURN;
      703    11365
      704    11366    2      I = MINIMUM (STATS.LONGEST_LITERAL + 1, 12);
      705    11367
      706    11368    2      LITERALS_PER_LINE = MAXIMUM (1, (WIDTH - 4) / I);
      707    11369
      708    11370    2      COLUMNS_PER_LITERAL = MAXIMUM(6, (WIDTH - 4) / LITERALS_PER_LINE);
      709    11371
      710    11372    2      LIT_POS = 2;
      711    11373    2      LITBUF = ' ';
      712    11374
      713    11375    3      DO I = STATS.LEXEME_COUNT TO POSS.COUNT - 1;
      714    11376
      715    11377    3         I$ = POSS.NODES$(I);
      716    11378
      717    11379    3         IF I$ -> P$LIT.ABREV = 0
      718    11380    3           THEN
      719    11381    3            COLS_USED = I$ -> P$LIT.COUNT;
      720    11382    3           ELSE
      721    11383    3            COLS_USED = I$ -> P$LIT.COUNT + 1;
      722    11384
      723    11385    3         IF LIT_POS > 2 AND LIT_POS + COLS_USED > WIDTH
      724    11386    4           THEN DO;
      725    11387
      726    11388    4            CALL WRITE_OUTPUT (LITBUF, WIDTH);
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:25   
      727    11389
      728    11390    4            LIT_POS = 2;
      729    11391    4            LITBUF = ' ';
      730    11392
      731    11393    4            END;
      732    11394
      733    11395    3         IF I$ -> P$LIT.ABREV = 0
      734    11396    3           THEN
      735    11397    3            SUBSTR (LITBUF, LIT_POS, COLS_USED) = I$ -> P$LIT.TEXT;
      736    11398    3           ELSE
      737    11399    3            CALL INSERT (LITBUF, LIT_POS, COLS_USED,
      738    11400    3             SUBSTR (I$ -> P$LIT.TEXT, 0, I$ -> P$LIT.ABREV), '/',
      739    11401    3             SUBSTR (I$ -> P$LIT.TEXT, I$ -> P$LIT.ABREV));
      740    11402
      741    11403    3         LIT_POS = LIT_POS + (1 + (COLS_USED+1)/COLUMNS_PER_LITERAL) *
      742    11404    3          COLUMNS_PER_LITERAL;
      743    11405
      744    11406    3         END;
      745    11407
      746    11408    2      IF LIT_POS ~= 2
      747    11409    2        THEN
      748    11410    2         CALL WRITE_OUTPUT (LITBUF, WIDTH);
      749    11411
      750    11412    2      RETURN;
      751    11413
      752    11414    2   END PRINT_LITERALS;
      753    11415
      754    11416        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:26   
      755    11417    1   WRITE_OUTPUT: PROC (STR, STR_LEN);
      756    11418
      757    11419    2   DCL STR CHAR (STR_LEN);
      758    11420    2   DCL STR_LEN SBIN;
      759    11421
      760    11422    2   DCL FRAGLEN UBIN;
      761    11423    2   DCL FRAGPOS UBIN;
      762    11424
      763    11425    2      FRAGPOS = 0;
      764    11426    2      PRINT = ' ';
      765    11427
      766    11428    3   PRINTIT: DO UNTIL (FRAGPOS >= STR_LEN);
      767    11429
      768    11430    3         IF FRAGPOS = 0
      769    11431    4           THEN DO;
      770    11432
      771    11433    4            SUBSTR (PRINT, 0, WIDTH) = STR;
      772    11434    4            FRAGLEN = MINIMUM (WIDTH, STR_LEN);
      773    11435
      774    11436    4            END;
      775    11437
      776    11438    4           ELSE DO;
      777    11439
      778    11440    4            FRAGLEN = MINIMUM (STR_LEN - FRAGPOS, WIDTH) - 4;
      779    11441    4            CALL CONCAT (PRINT, '    ', SUBSTR (STR, FRAGPOS, FRAGLEN));
      780    11442
      781    11443    4            END;
      782    11444
      783    11445    3         IF OUTDCB ~= DCBNUM(NIL)
      784    11446    3           THEN
      785    11447    3            CALL M$WRITE (AUTO_WRITE) ALTRET (SPLIT);
      786    11448    3           ELSE
      787    11449    3            CALL PCB.OUTENT$(PRINT);
      788    11450
      789    11451    3         IF FRAGPOS + FRAGLEN < STR_LEN
      790    11452    3           THEN
      791    11453    3            IF SUBSTR(STR, FRAGPOS + FRAGLEN) = ' '
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:27   
      792    11454    3              THEN
      793    11455    3               EXIT PRINTIT;
      794    11456
      795    11457    3         FRAGPOS = FRAGPOS + FRAGLEN;
      796    11458
      797    11459    3         END PRINTIT;
      798    11460
      799    11461    2   SPLIT:
      800    11462
      801    11463    2      RETURN;
      802    11464
      803    11465    2   END WRITE_OUTPUT;
      804    11466
      805    11467    1   END XUP$DMPNXT;

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:28   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XUP$DMPNXT.

   Procedure XUP$DMPNXT requires 1003 words for executable code.
   Procedure XUP$DMPNXT requires 256 words of local(AUTO) storage.

    No errors detected in file XUP$DMPNXT.:E05TSI    .

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:29   

 Object Unit name= XUP$DMPNXT                                 File name= XUP$DMPNXT.:E05TOU
 UTS= JUL 30 '97 09:36:06.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    101    145  XUP$DMPNXT
    2   Proc  even  none  1003   1753  XUP$DMPNXT
    3  RoData even  none    18     22  XUP$DMPNXT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  XUP$DMPNXT
     2     44                  yes      Std        1  XUP$DMPCORRECTED

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 XUP$EXPAND_WORKAREA
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUNWIND
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:30   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    OVER_FLOW                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:31   


        1        1        /*M* XUP$DMPNXT - separate module containing the alternative display code */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        XUP$DMPNXT:
        8        8           PROC (G$D);

      8  2 000000   000000 700200 xent  XUP$DMPNXT   TSX0  ! X66_AUTO_1
         2 000001   000400 000001                    ZERO    256,1

        9        9
       10       10        /*X* DMC, PLM=3, CTI=1, CSI=2, ECI=2, MCI=YES, SDI=6, THI=2 */
       11       11        %INCLUDE CP_6;
       12     5570        %INCLUDE CP_6_SUBS;
       13     6110        %INCLUDE XU_MACRO_C;
       14     9216        %INCLUDE XU_PERR_C;
       15     9407        %INCLUDE XU_SUBS_C;
       16     9499        %G$D;
       17     9595        %P$PCB (NAME=PCB, STCLASS="BASED(PCB$)");
       18     9796        %P$KEYWORDS (STCLASS="BASED(KEYWORDS$)");
       19     9814        %P$NODE (STCLASS="BASED(NODE$)");
       20     9908        %P$LIT  (STCLASS="BASED(NODE$)", LEN="P$LIT.COUNT");
       21     9961        %P$SYM  (STCLASS="BASED(NODE$)", LEN="P$SYM.COUNT");
       22    10040        %P$DSTR (STCLASS="BASED(NODE$)");
       23    10084        %FPT_OPEN (FPTN=CONSTANT_OPEN, FUN=CREATE, DISP=NAMED, STCLASS=CONSTANT);
       24    10193        %FPT_OPEN (FPTN=AUTO_OPEN, STCLASS=AUTO);
       25    10302        %FPT_WRITE(STCLASS=CONSTANT,FPTN=CONST_WRITE);
       26    10333        %FPT_WRITE(STCLASS=,FPTN=AUTO_WRITE);
       27    10364        %FPT_ERRMSG   (FPTN=CONSTANT_ERRMSG, STCLASS=CONSTANT, INCLCODE=NO);
       28    10391        %FPT_ERRMSG   (FPTN=AUTO_ERRMSG, STCLASS=AUTO);
       29    10418        %VLP_ERRCODE  (FPTN=CONSTANT_CODE, STCLASS=CONSTANT, FCG=XU,MID=P,SEV=0);
       30    10463        %VLP_ERRCODE  (FPTN=AUTO_CODE, STCLASS=AUTO);
       31    10508        %VLR_ERRMSG (FPTN=AUTO_RESULTS, STCLASS=AUTO);
       32    10530        %VLP_NAME  (FPTN=FIELD1, STCLASS=AUTO, LEN=31);
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:32   
       33    10557        %VLP_NAME  (FPTN=FIELD2, STCLASS=AUTO, LEN=31);
       34    10584        %VLP_NAME  (FPTN=XUERRMSG, STCLASS=CONSTANT, NAME=':XUERRMSG');
       35    10611        %F$DCB;
       36    10668        %EQU DEBUG='1'B;
       37    10669    1   DCL ERRMSG_BUF CHAR (120) AUTO;
       38    10670    1   DCL KEYWORDS$ PTR;
       39    10671    1   DCL NODE$ PTR;
       40    10672    1   DCL OUTDCB UBIN WORD;
       41    10673    1   DCL OVER_FLOW BIT (36) SYMREF READONLY;
       42    10674    1   DCL P$ PTR;
       43    10675    1   DCL PCB$ PTR AUTO;
       44    10676        %XUP$POSS (NAME=POSS, STCLASS="BASED(P$)");
       45    10681    1   DCL PRINT CHAR (140);
       46    10682    1   DCL 1 STATS,
       47    10683    1             2 LEXEME_COUNT SBIN,
       48    10684    1             2 LITERAL_COUNT SBIN,
       49    10685    1             2 LONGEST_LITERAL SBIN,
       50    10686    1             2 LONGEST_ABREV SBIN;
       51    10687    1   DCL WIDTH SBIN;
       52    10688    1   DCL XUP$EXPAND_WORKAREA ENTRY (1) ALTRET;
       53    10689        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:33   
       54    10690    1      PCB$ = G$D.PCB$;

  10690  2 000002   200003 470500                    LDP0    @G$D,,AUTO
         2 000003   000000 236100                    LDQ     0,,PR0
         2 000004   200234 756100                    STQ     PCB$,,AUTO

       55    10691
       56    10692    1      P$ = PINCRW (PCB.WORK$, PCB.WK_USED);

  10692  2 000005   200234 471500                    LDP1    PCB$,,AUTO
         2 000006   100010 220100                    LDX0    8,,PR1
         2 000007   100002 473500                    LDP3    2,,PR1
         2 000010   300000 634510                    EPPR4   0,X0,PR3
         2 000011   200233 454500                    STP4    P$,,AUTO

       57    10693
       58    10694    1      PCB.BLANKONLY = %NO#;

  10694  2 000012   000000 236000 3                  LDQ     0
         2 000013   100005 356100                    ANSQ    5,,PR1

       59    10695
       60    10696    1      CALL SORT_NODES;

  10696  2 000014   000127 701000 2                  TSX1    SORT_NODES
         2 000015   000000 011000                    NOP     0

       61    10697    1      CALL GATHER_STATISTICS;

  10697  2 000016   000367 701000 2                  TSX1    GATHER_STATISTICS
         2 000017   000000 011000                    NOP     0

       62    10698
       63    10699    1      IF PCB.KEYWORDS

  10699  2 000020   200234 470500                    LDP0    PCB$,,AUTO
         2 000021   000005 236100                    LDQ     5,,PR0
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:34   
         2 000022   010000 316007                    CANQ    4096,DL
         2 000023   000031 600000 2                  TZE     s:10709

       64    10700    2        THEN DO;

       65    10701
       66    10702    2         CALL ALLOCATE_KEYWORD_AREA;

  10702  2 000024   000476 701000 2                  TSX1    ALLOCATE_KEYWORD_AREA
         2 000025   000000 011000                    NOP     0

       67    10703    2         CALL MOVE_KEYWORD_POINTERS;

  10703  2 000026   000600 701000 2                  TSX1    MOVE_KEYWORD_POINTERS
         2 000027   000000 011000                    NOP     0

       68    10704
       69    10705    2         END;

  10705  2 000030   000043 710000 2                  TRA     s:10719

       70    10706
       71    10707    2        ELSE DO;

       72    10708
       73    10709    2         IF POSS.COUNT = 0

  10709  2 000031   200233 471500                    LDP1    P$,,AUTO
         2 000032   100000 235100                    LDA     0,,PR1
         2 000033   000035 601000 2                  TNZ     s:10713

       74    10710    2           THEN
       75    10711    2            RETURN;

  10711  2 000034   000000 702200 xent               TSX2  ! X66_ARET

       76    10712
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:35   
       77    10713    2         CALL SETUP_FOR_PRINT;

  10713  2 000035   000621 701000 2                  TSX1    SETUP_FOR_PRINT
         2 000036   000000 011000                    NOP     0

       78    10714    2         CALL PRINT_LEXEMES;

  10714  2 000037   000771 701000 2                  TSX1    PRINT_LEXEMES
         2 000040   000000 011000                    NOP     0

       79    10715    2         CALL PRINT_LITERALS;

  10715  2 000041   001405 701000 2                  TSX1    PRINT_LITERALS
         2 000042   000000 011000                    NOP     0

       80    10716
       81    10717    2         END;

       82    10718
       83    10719    1      RETURN;

  10719  2 000043   000000 702200 xent               TSX2  ! X66_ARET

       84    10720        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:36   
       85    10721    1   XUP$DMPCORRECTED: ENTRY (G$D);

  10721  2 000044   000000 700200 xent  XUP$DMPCORR* TSX0  ! X66_AUTO_1
         2 000045   000400 000001                    ZERO    256,1

       86    10722
       87    10723        /*D*  ENTRY:      XUP$DMPCORRECTED
       88    10724              CALL:       CALL XUP$DMPCORRECTED (pcb);
       89    10725              INPUT:      "pcb", a parse control block whose OUT$ pointer must
       90    10726                          contain the address of a valid P$KEYWORDS block.
       91    10727              OUTPUT:     Those keywords whose corresponding bits in the array
       92    10728                          pointed to by pcb.OUT$ -> P$KEYWORDS.LEGAL$ will be
       93    10729                          displayed on pcb.OUTDCB#, or passed in the usual way
       94    10730                          to PCB.OUTENT$$.
       95    10731              DESCRIPTION: This entry point may be used in conjunction with the
       96    10732                          spelling corrector, to display a set of keywords which might
       97    10733                          correspond to a mis-spelled keyword in a user's command.
       98    10734        */
       99    10735
      100    10736    1      PCB$ = ADDR(G$D);

  10736  2 000046   200003 236100                    LDQ     @G$D,,AUTO
         2 000047   200234 756100                    STQ     PCB$,,AUTO

      101    10737    1      P$ = PINCRW (PCB.WORK$, PCB.WK_USED);

  10737  2 000050   200234 470500                    LDP0    PCB$,,AUTO
         2 000051   000010 220100                    LDX0    8,,PR0
         2 000052   000002 471500                    LDP1    2,,PR0
         2 000053   100000 633510                    EPPR3   0,X0,PR1
         2 000054   200233 453500                    STP3    P$,,AUTO

      102    10738
      103    10739        /*N*  WARNING -- KLUGE -- WARNING
      104    10740              This entry point formally defines its parameter as G$D (parse global
      105    10741              information block), but the code actually expects to receive PCB
      106    10742              (user parse control block).  This is done for the sake of expediency,
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:37   
      107    10743              and is truely horrible.  DO NOT modify the code anywhere in this
      108    10744              compile unit in such a way that a call to XUP$DMPCORRECTED would lead to
      109    10745              any attempt to reference G$D - this will cause *horrible* things to
      110    10746              happen!!!!!
      111    10747        */
      112    10748
      113    10749    1      CALL REGENERATE_NODES;

  10749  2 000055   000070 701000 2                  TSX1    REGENERATE_NODES
         2 000056   000000 011000                    NOP     0

      114    10750    1      CALL SORT_NODES;

  10750  2 000057   000127 701000 2                  TSX1    SORT_NODES
         2 000060   000000 011000                    NOP     0

      115    10751    1      CALL GATHER_STATISTICS;

  10751  2 000061   000367 701000 2                  TSX1    GATHER_STATISTICS
         2 000062   000000 011000                    NOP     0

      116    10752    1      CALL SETUP_FOR_PRINT;

  10752  2 000063   000621 701000 2                  TSX1    SETUP_FOR_PRINT
         2 000064   000000 011000                    NOP     0

      117    10753    1      CALL PRINT_LITERALS;

  10753  2 000065   001405 701000 2                  TSX1    PRINT_LITERALS
         2 000066   000000 011000                    NOP     0

      118    10754
      119    10755    1      RETURN;

  10755  2 000067   000000 702200 xent               TSX2  ! X66_ARET

      120    10756        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:38   
      121    10757    1   REGENERATE_NODES: PROC;

  10757  2 000070   200306 741300       REGENERATE_* STX1  ! WIDTH+2,,AUTO

      122    10758
      123    10759        /*I*  NAME:    REGENERATE_NODES
      124    10760              PURPOSE: Regenerates a POSS structure, given a P$KEYWORDS structure.
      125    10761              DESCRIPTION: This procedure will scan through the P$KEYWORDS structure
      126    10762                       addressed by PCB.OUT$, and will build a POSS structure
      127    10763                       containing pointers to the nodes containing legal keywords.
      128    10764                       NOTE that the PCB must not have been altered between
      129    10765                       the call to XUP$DMPNXT (via X$PARSE) and the call to
      130    10766                       XUP$DMPCORRECTED!!!
      131    10767        */
      132    10768
      133    10769    2   DCL I SBIN WORD;
      134    10770    2   DCL LEGAL_ARRAY (0:0) BIT (1) UNAL BASED;
      135    10771
      136    10772    2      KEYWORDS$ = PCB.OUT$;

  10772  2 000071   200234 470500                    LDP0    PCB$,,AUTO
         2 000072   000003 236100                    LDQ     3,,PR0
         2 000073   200230 756100                    STQ     KEYWORDS$,,AUTO

      137    10773    2      POSS.COUNT = 0;

  10773  2 000074   200233 471500                    LDP1    P$,,AUTO
         2 000075   100000 450100                    STZ     0,,PR1

      138    10774
      139    10775    3      DO I = 0 TO P$KEYWORDS.KEYWORD_COUNT - 1;

  10775  2 000076   200307 450100                    STZ     I,,AUTO
         2 000077   000121 710000 2                  TRA     s:10788+1

      140    10776
      141    10777    3         IF P$KEYWORDS.LEGAL$ -> LEGAL_ARRAY(I)
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:39   

  10777  2 000100   200230 470500                    LDP0    KEYWORDS$,,AUTO
         2 000101   000001 471500                    LDP1    1,,PR0
         2 000102   200307 235100                    LDA     I,,AUTO
         2 000103   000105 605000 2                  TPL     s:10777+5
         2 000104   000044 035003                    ADLA    36,DU
         2 000105   000000 066505                    CMPB    filb='0'B
         2 000106   100000 000001                    BDSC    0,A,PR1                  by=0,bit=0,n=1
         2 000107   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 000110   000120 600000 2                  TZE     s:10788

      142    10778    4           THEN DO;

      143    10779
      144    10780        /*N* Following PINCRW calculation is ugly but effective.  If P$LIT ever
      145    10781             changes, this code may need changes also. */
      146    10782
      147    10783    4            POSS.NODES$(POSS.COUNT) = PINCRW (P$KEYWORDS.KEYWORDS$(I), -1);

  10783  2 000111   200233 473500                    LDP3    P$,,AUTO
         2 000112   300000 235100                    LDA     0,,PR3
         2 000113   200307 720100                    LXL0    I,,AUTO
         2 000114   000002 236110                    LDQ     2,X0,PR0
         2 000115   777777 036003                    ADLQ    -1,DU
         2 000116   300001 756105                    STQ     1,AL,PR3

      148    10784    4            POSS.COUNT = POSS.COUNT + 1;

  10784  2 000117   300000 054100                    AOS     0,,PR3

      149    10785
      150    10786    4            END;

      151    10787
      152    10788    3         END;

  10788  2 000120   200307 054100                    AOS     I,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:40   
         2 000121   200230 470500                    LDP0    KEYWORDS$,,AUTO
         2 000122   200307 236100                    LDQ     I,,AUTO
         2 000123   000000 116100                    CMPQ    0,,PR0
         2 000124   000100 604000 2                  TMI     s:10777

      153    10789
      154    10790    2   END REGENERATE_NODES;

  10790  2 000125   200306 221300                    LDX1  ! WIDTH+2,,AUTO
         2 000126   000001 702211                    TSX2  ! 1,X1

      155    10791        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:41   
      156    10792    1   SORT_NODES: PROC;

  10792  2 000127   200306 741300       SORT_NODES   STX1  ! WIDTH+2,,AUTO

      157    10793
      158    10794        /*I*  NAME:    SORT_NODES
      159    10795              PURPOSE: Sorts nodes into "correct" order
      160    10796              DESCRIPTION: This routine sorts "possible alternative" node pointers
      161    10797                       into the order in which they will be printed.  The ordering used
      162    10798                       is as follows:
      163    10799
      164    10800                       1- Lexeme nodes are sorted "before" literal nodes.
      165    10801                       2- Lexeme nodes are sorted in ascending "lexical type" order;
      166    10802                       3- Literal nodes are sorted in ascending alphabetical order.
      167    10803        */
      168    10804
      169    10805    2   DCL I SBIN;
      170    10806    2   DCL I$ PTR;
      171    10807    2   DCL J SBIN;
      172    10808    2   DCL J$ PTR;
      173    10809    2   DCL LOW UBIN;
      174    10810    2   DCL LOW$ PTR;
      175    10811
      176    10812    3   ITERATE_I: DO I = 0 TO POSS.COUNT - 2;

  10812  2 000130   200307 450100       ITERATE_I    STZ     I,,AUTO
         2 000131   000360 710000 2                  TRA     s:10879+1

      177    10813
      178    10814    3         I$ = POSS.NODES$(I);

  10814  2 000132   200233 470500                    LDP0    P$,,AUTO
         2 000133   200307 720100                    LXL0    I,,AUTO
         2 000134   000001 236110                    LDQ     1,X0,PR0
         2 000135   200310 756100                    STQ     I$,,AUTO

      179    10815    3         LOW = I;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:42   

  10815  2 000136   200307 235100                    LDA     I,,AUTO
         2 000137   200313 755100                    STA     LOW,,AUTO

      180    10816
      181    10817    4   ITERATE_J: DO J = I+1 TO POSS.COUNT - 1;

  10817  2 000140   000001 035007       ITERATE_J    ADLA    1,DL
         2 000141   200311 755100                    STA     J,,AUTO
         2 000142   000340 710000 2                  TRA     s:10867+1

      182    10818    4            LOW$ = POSS.NODES$(LOW);

  10818  2 000143   200233 470500                    LDP0    P$,,AUTO
         2 000144   200313 720100                    LXL0    LOW,,AUTO
         2 000145   000001 236110                    LDQ     1,X0,PR0
         2 000146   200314 756100                    STQ     LOW$,,AUTO

      183    10819    4            J$ = POSS.NODES$(J);

  10819  2 000147   200311 721100                    LXL1    J,,AUTO
         2 000150   000001 236111                    LDQ     1,X1,PR0
         2 000151   200312 756100                    STQ     J$,,AUTO

      184    10820    4            IF LOW$ -> P$NODE.TYPE < J$ -> P$NODE.TYPE

  10820  2 000152   200312 471500                    LDP1    J$,,AUTO
         2 000153   100000 236100                    LDQ     0,,PR1
         2 000154   000041 772000                    QRL     33
         2 000155   200366 756100                    STQ     FRAGPOS+2,,AUTO
         2 000156   200314 473500                    LDP3    LOW$,,AUTO
         2 000157   300000 236100                    LDQ     0,,PR3
         2 000160   000041 772000                    QRL     33
         2 000161   200366 116100                    CMPQ    FRAGPOS+2,,AUTO
         2 000162   000166 605000 2                  TPL     s:10824

      185    10821    4              THEN
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:43   
      186    10822    4               LOW = J;

  10822  2 000163   200311 235100                    LDA     J,,AUTO
         2 000164   200313 755100                    STA     LOW,,AUTO
         2 000165   000337 710000 2                  TRA     s:10867

      187    10823    4              ELSE
      188    10824    4               IF LOW$ -> P$NODE.TYPE = J$ -> P$NODE.TYPE

  10824  2 000166   300000 236100                    LDQ     0,,PR3
         2 000167   100000 676100                    ERQ     0,,PR1
         2 000170   700000 376003                    ANQ     -32768,DU
         2 000171   000337 601000 2                  TNZ     s:10867

      189    10825    4                 THEN
      190    10826    5   COMPARE_IN_TYPE: DO CASE (LOW$ -> P$NODE.TYPE);

  10826  2 000172   300000 236100       COMPARE_IN_* LDQ     0,,PR3
         2 000173   000041 772000                    QRL     33
         2 000174   000005 136007                    SBLQ    5,DL
         2 000175   000002 116007                    CMPQ    2,DL
         2 000176   000200 602006 2                  TNC     COMPARE_IN_TYPE+6,QL
         2 000177   000337 710000 2                  TRA     s:10867
         2 000200   000202 710000 2                  TRA     s:10830
         2 000201   000217 710000 2                  TRA     s:10836

      191    10827
      192    10828    5                 CASE (%TYPE_LITERAL#);

      193    10829
      194    10830    5                  IF LOW$ -> P$LIT.TEXT > J$ -> P$LIT.TEXT

  10830  2 000202   300001 236100                    LDQ     1,,PR3
         2 000203   000033 772000                    QRL     27
         2 000204   000000 622006                    EAX2    0,QL
         2 000205   100001 236100                    LDQ     1,,PR1
         2 000206   000033 772000                    QRL     27
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:44   
         2 000207   000000 623006                    EAX3    0,QL
         2 000210   040140 106540                    CMPC    fill='040'O
         2 000211   100001 200013                    ADSC9   1,,PR1                   cn=1,n=*X3
         2 000212   300001 200012                    ADSC9   1,,PR3                   cn=1,n=*X2
         2 000213   000337 603000 2                  TRC     s:10867

      195    10831    5                    THEN
      196    10832    5                     LOW = J;

  10832  2 000214   200311 235100                    LDA     J,,AUTO
         2 000215   200313 755100                    STA     LOW,,AUTO
         2 000216   000337 710000 2                  TRA     s:10867

      197    10833
      198    10834    5                 CASE (%TYPE_LEXEME#);

      199    10835
      200    10836    5                  IF LOW$ -> P$SYM.LEXTYPE > J$ -> P$SYM.LEXTYPE

  10836  2 000217   300000 236100                    LDQ     0,,PR3
         2 000220   000020 772000                    QRL     16
         2 000221   000037 376007                    ANQ     31,DL
         2 000222   200366 756100                    STQ     FRAGPOS+2,,AUTO
         2 000223   100000 236100                    LDQ     0,,PR1
         2 000224   000020 772000                    QRL     16
         2 000225   000037 376007                    ANQ     31,DL
         2 000226   200366 116100                    CMPQ    FRAGPOS+2,,AUTO
         2 000227   000233 605000 2                  TPL     s:10840

      201    10837    5                    THEN
      202    10838    5                     LOW = J;

  10838  2 000230   200311 235100                    LDA     J,,AUTO
         2 000231   200313 755100                    STA     LOW,,AUTO
         2 000232   000337 710000 2                  TRA     s:10867

      203    10839    5                    ELSE
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:45   
      204    10840    5                     IF LOW$ -> P$SYM.LEXTYPE = J$ -> P$SYM.LEXTYPE

  10840  2 000233   300000 236100                    LDQ     0,,PR3
         2 000234   100000 676100                    ERQ     0,,PR1
         2 000235   000001 376000 3                  ANQ     1
         2 000236   000337 601000 2                  TNZ     s:10867

      205    10841    5                       THEN
      206    10842    6   COMPARE_IN_LEXTYPE: DO CASE (LOW$ -> P$SYM.LEXTYPE);

  10842  2 000237   300000 236100       COMPARE_IN_* LDQ     0,,PR3
         2 000240   000020 772000                    QRL     16
         2 000241   000037 376007                    ANQ     31,DL
         2 000242   000024 136007                    SBLQ    20,DL
         2 000243   000014 116007                    CMPQ    12,DL
         2 000244   000246 602006 2                  TNC     COMPARE_IN_LEXTYPE+7,QL
         2 000245   000304 710000 2                  TRA     s:10856
         2 000246   000337 710000 2                  TRA     s:10867
         2 000247   000337 710000 2                  TRA     s:10867
         2 000250   000304 710000 2                  TRA     s:10856
         2 000251   000304 710000 2                  TRA     s:10856
         2 000252   000304 710000 2                  TRA     s:10856
         2 000253   000304 710000 2                  TRA     s:10856
         2 000254   000304 710000 2                  TRA     s:10856
         2 000255   000304 710000 2                  TRA     s:10856
         2 000256   000304 710000 2                  TRA     s:10856
         2 000257   000304 710000 2                  TRA     s:10856
         2 000260   000304 710000 2                  TRA     s:10856
         2 000261   000262 710000 2                  TRA     s:10848

      207    10843
      208    10844    6                       CASE (%LEX_BLANK#, %LEX_END#);

      209    10845
      210    10846    6                       CASE (%LEX_DSTRING#);

      211    10847
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:46   
      212    10848    6                        IF LOW$ -> P$DSTR.DLIM > J$ -> P$DSTR.DLIM OR

  10848  2 000262   040100 106500                    CMPC    fill='040'O
         2 000263   100001 200001                    ADSC9   1,,PR1                   cn=1,n=1
         2 000264   300001 200001                    ADSC9   1,,PR3                   cn=1,n=1
         2 000265   000301 602000 2                  TNC     s:10852
         2 000266   300001 236100                    LDQ     1,,PR3
         2 000267   100001 676100                    ERQ     1,,PR1
         2 000270   000777 376003                    ANQ     511,DU
         2 000271   000337 601000 2                  TNZ     s:10867
         2 000272   300001 236100                    LDQ     1,,PR3
         2 000273   000033 772000                    QRL     27
         2 000274   200366 756100                    STQ     FRAGPOS+2,,AUTO
         2 000275   100001 236100                    LDQ     1,,PR1
         2 000276   000033 772000                    QRL     27
         2 000277   200366 116100                    CMPQ    FRAGPOS+2,,AUTO
         2 000300   000337 605000 2                  TPL     s:10867

      213    10849    6                         (LOW$ -> P$DSTR.DLIM = J$ -> P$DSTR.DLIM AND
      214    10850    6                         LOW$ -> P$DSTR.MAXL > J$ -> P$DSTR.MAXL)
      215    10851    6                          THEN
      216    10852    6                           LOW = J;

  10852  2 000301   200311 235100                    LDA     J,,AUTO
         2 000302   200313 755100                    STA     LOW,,AUTO
         2 000303   000337 710000 2                  TRA     s:10867

      217    10853
      218    10854    6                       CASE (ELSE);

      219    10855
      220    10856    6                        IF LOW$ -> P$SYM.XTRA > J$ -> P$SYM.XTRA OR

  10856  2 000304   000100 066500                    CMPB    filb='0'B
         2 000305   100000 230001                    BDSC    0,,PR1                   by=1,bit=3,n=1
         2 000306   300000 230001                    BDSC    0,,PR3                   by=1,bit=3,n=1
         2 000307   000335 602000 2                  TNC     s:10861
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:47   
         2 000310   300000 236100                    LDQ     0,,PR3
         2 000311   000040 316003                    CANQ    32,DU
         2 000312   000337 600000 2                  TZE     s:10867
         2 000313   100000 236100                    LDQ     0,,PR1
         2 000314   000040 316003                    CANQ    32,DU
         2 000315   000337 600000 2                  TZE     s:10867
         2 000316   300001 236100                    LDQ     1,,PR3
         2 000317   000033 772000                    QRL     27
         2 000320   200366 756100                    STQ     FRAGPOS+2,,AUTO
         2 000321   100001 236100                    LDQ     1,,PR1
         2 000322   000033 772000                    QRL     27
         2 000323   200366 116100                    CMPQ    FRAGPOS+2,,AUTO
         2 000324   000335 604000 2                  TMI     s:10861
         2 000325   300001 222100                    LDX2    1,,PR3
         2 000326   000777 362003                    ANX2    511,DU
         2 000327   100001 223100                    LDX3    1,,PR1
         2 000330   000777 363003                    ANX3    511,DU
         2 000331   040140 106540                    CMPC    fill='040'O
         2 000332   100001 400013                    ADSC9   1,,PR1                   cn=2,n=*X3
         2 000333   300001 400012                    ADSC9   1,,PR3                   cn=2,n=*X2
         2 000334   000337 603000 2                  TRC     s:10867

      221    10857    6                         (LOW$ -> P$SYM.XTRA AND J$ -> P$SYM.XTRA AND
      222    10858    6                         (LOW$ -> P$SYM.MAXL > J$ -> P$SYM.MAXL OR
      223    10859    6                         LOW$ -> P$SYM.TEXT > J$ -> P$SYM.TEXT))
      224    10860    6                          THEN
      225    10861    6                           LOW = J;

  10861  2 000335   200311 235100                    LDA     J,,AUTO
         2 000336   200313 755100                    STA     LOW,,AUTO

      226    10862
      227    10863    6                       END COMPARE_IN_LEXTYPE;

      228    10864
      229    10865    5                 END COMPARE_IN_TYPE;

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:48   
      230    10866
      231    10867    4            END ITERATE_J;

  10867  2 000337   200311 054100                    AOS     J,,AUTO
         2 000340   200311 236100                    LDQ     J,,AUTO
         2 000341   000000 116100                    CMPQ    0,,PR0
         2 000342   000143 604000 2                  TMI     s:10818

      232    10868
      233    10869    3         IF LOW ~= I

  10869  2 000343   200313 236100                    LDQ     LOW,,AUTO
         2 000344   000347 604000 2                  TMI     SWAP_NODES
         2 000345   200307 116100                    CMPQ    I,,AUTO
         2 000346   000357 600000 2                  TZE     s:10879

      234    10870    3           THEN
      235    10871    4   SWAP_NODES: DO;

  10871  2 000347                       SWAP_NODES   null
      236    10872
      237    10873    4            POSS.NODES$(I) = POSS.NODES$(LOW);

  10873  2 000347   000001 236106                    LDQ     1,QL,PR0
         2 000350   200307 720100                    LXL0    I,,AUTO
         2 000351   000001 756110                    STQ     1,X0,PR0

      238    10874    4            POSS.NODES$(LOW) = I$;

  10874  2 000352   200310 236100                    LDQ     I$,,AUTO
         2 000353   200313 721100                    LXL1    LOW,,AUTO
         2 000354   000001 756111                    STQ     1,X1,PR0

      239    10875    4            I$ = POSS.NODES$(I);

  10875  2 000355   000001 236110                    LDQ     1,X0,PR0
         2 000356   200310 756100                    STQ     I$,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:49   

      240    10876
      241    10877    4            END SWAP_NODES;

      242    10878
      243    10879    3         END ITERATE_I;

  10879  2 000357   200307 054100                    AOS     I,,AUTO
         2 000360   200233 470500                    LDP0    P$,,AUTO
         2 000361   000000 236100                    LDQ     0,,PR0
         2 000362   000002 136007                    SBLQ    2,DL
         2 000363   200307 116100                    CMPQ    I,,AUTO
         2 000364   000132 605000 2                  TPL     s:10814

      244    10880
      245    10881    2      RETURN;

  10881  2 000365   200306 221300                    LDX1  ! WIDTH+2,,AUTO
         2 000366   000001 702211                    TSX2  ! 1,X1

      246    10882
      247    10883    2   END SORT_NODES;
      248    10884
      249    10885        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:50   
      250    10886    1   GATHER_STATISTICS: PROC;

  10886  2 000367   200306 741300       GATHER_STAT* STX1  ! WIDTH+2,,AUTO

      251    10887
      252    10888        /*I*  NAME:    GATHER_STATISTICS
      253    10889              PURPOSE: Collects counts, lengths, etc. for possible syntax
      254    10890                       alternatives.
      255    10891        */
      256    10892
      257    10893    2   DCL I SBIN;
      258    10894    2   DCL I$ PTR;
      259    10895
      260    10896    2      STATS = '0'B;

  10896  2 000370   000100 100400                    MLR     fill='000'O
         2 000371   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000372   200300 000020                    ADSC9   STATS,,AUTO              cn=0,n=16

      261    10897
      262    10898    3      DO I = 0 TO POSS.COUNT - 1;

  10898  2 000373   200307 450100                    STZ     I,,AUTO
         2 000374   000451 710000 2                  TRA     s:10923+1

      263    10899
      264    10900    3         I$ = POSS.NODES$(I);

  10900  2 000375   200233 470500                    LDP0    P$,,AUTO
         2 000376   200307 720100                    LXL0    I,,AUTO
         2 000377   000001 236110                    LDQ     1,X0,PR0
         2 000400   200310 756100                    STQ     I$,,AUTO

      265    10901
      266    10902    4         DO CASE (I$ -> P$NODE.TYPE);

  10902  2 000401   200310 471500                    LDP1    I$,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:51   
         2 000402   100000 236100                    LDQ     0,,PR1
         2 000403   000041 772000                    QRL     33
         2 000404   000005 136007                    SBLQ    5,DL
         2 000405   000002 116007                    CMPQ    2,DL
         2 000406   000410 602006 2                  TNC     s:10902+7,QL
         2 000407   000450 710000 2                  TRA     s:10923
         2 000410   000412 710000 2                  TRA     s:10906
         2 000411   000447 710000 2                  TRA     s:10919

      267    10903
      268    10904    4           CASE (%TYPE_LITERAL#);

      269    10905
      270    10906    4            STATS.LITERAL_COUNT = STATS.LITERAL_COUNT + 1;

  10906  2 000412   200301 054100                    AOS     STATS+1,,AUTO

      271    10907    4            STATS.LONGEST_ABREV = MAXIMUM(STATS.LONGEST_ABREV, I$ -> P$LIT.ABREV);

  10907  2 000413   100000 236100                    LDQ     0,,PR1
         2 000414   000020 772000                    QRL     16
         2 000415   000377 376007                    ANQ     255,DL
         2 000416   000422 604000 2                  TMI     s:10907+7
         2 000417   200303 116100                    CMPQ    STATS+3,,AUTO
         2 000420   000422 605000 2                  TPL     s:10907+7
         2 000421   200303 236100                    LDQ     STATS+3,,AUTO
         2 000422   200303 756100                    STQ     STATS+3,,AUTO

      272    10908
      273    10909    4            IF I$ -> P$LIT.ABREV > 0

  10909  2 000423   100000 236100                    LDQ     0,,PR1
         2 000424   000002 316000 3                  CANQ    2
         2 000425   000437 600000 2                  TZE     s:10914

      274    10910    4              THEN
      275    10911    4               STATS.LONGEST_LITERAL = MAXIMUM(STATS.LONGEST_LITERAL,
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:52   

  10911  2 000426   100001 236100                    LDQ     1,,PR1
         2 000427   000033 772000                    QRL     27
         2 000430   000001 036007                    ADLQ    1,DL
         2 000431   000435 604000 2                  TMI     s:10911+7
         2 000432   200302 116100                    CMPQ    STATS+2,,AUTO
         2 000433   000435 605000 2                  TPL     s:10911+7
         2 000434   200302 236100                    LDQ     STATS+2,,AUTO
         2 000435   200302 756100                    STQ     STATS+2,,AUTO
         2 000436   000450 710000 2                  TRA     s:10923

      276    10912    4                I$ -> P$LIT.COUNT + 1);
      277    10913    4              ELSE
      278    10914    4               STATS.LONGEST_LITERAL = MAXIMUM(STATS.LONGEST_LITERAL,

  10914  2 000437   100001 236100                    LDQ     1,,PR1
         2 000440   000033 772000                    QRL     27
         2 000441   000445 604000 2                  TMI     s:10914+6
         2 000442   200302 116100                    CMPQ    STATS+2,,AUTO
         2 000443   000445 605000 2                  TPL     s:10914+6
         2 000444   200302 236100                    LDQ     STATS+2,,AUTO
         2 000445   200302 756100                    STQ     STATS+2,,AUTO
         2 000446   000450 710000 2                  TRA     s:10923

      279    10915    4                I$ -> P$LIT.COUNT);
      280    10916
      281    10917    4           CASE (%TYPE_LEXEME#);

      282    10918
      283    10919    4            STATS.LEXEME_COUNT = STATS.LEXEME_COUNT + 1;

  10919  2 000447   200300 054100                    AOS     STATS,,AUTO

      284    10920
      285    10921    4           END;

      286    10922
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:53   
      287    10923    3         END;

  10923  2 000450   200307 054100                    AOS     I,,AUTO
         2 000451   200233 470500                    LDP0    P$,,AUTO
         2 000452   200307 236100                    LDQ     I,,AUTO
         2 000453   000000 116100                    CMPQ    0,,PR0
         2 000454   000375 604000 2                  TMI     s:10900

      288    10924
      289    10925    2      IF POSS.COUNT = 1

  10925  2 000455   000000 235100                    LDA     0,,PR0
         2 000456   000001 115007                    CMPA    1,DL
         2 000457   000474 601000 2                  TNZ     s:10931
         2 000460   000001 471500                    LDP1    1,,PR0
         2 000461   100000 236100                    LDQ     0,,PR1
         2 000462   700000 376003                    ANQ     -32768,DU
         2 000463   600000 116003                    CMPQ    -65536,DU
         2 000464   000474 601000 2                  TNZ     s:10931
         2 000465   100000 236100                    LDQ     0,,PR1
         2 000466   000001 376000 3                  ANQ     1
         2 000467   000005 116003                    CMPQ    5,DU
         2 000470   000474 601000 2                  TNZ     s:10931

      290    10926    2       AND POSS.NODES$(0) -> P$NODE.TYPE = %TYPE_LEXEME#
      291    10927    2       AND POSS.NODES$(0) -> P$SYM.LEXTYPE = %LEX_BLANK#
      292    10928    2        THEN
      293    10929    2         PCB.BLANKONLY = %YES#;

  10929  2 000471   200234 473500                    LDP3    PCB$,,AUTO
         2 000472   004000 236007                    LDQ     2048,DL
         2 000473   300005 256100                    ORSQ    5,,PR3

      294    10930
      295    10931    2      RETURN;

  10931  2 000474   200306 221300                    LDX1  ! WIDTH+2,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:54   
         2 000475   000001 702211                    TSX2  ! 1,X1

      296    10932
      297    10933    2   END GATHER_STATISTICS;
      298    10934
      299    10935        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:55   
      300    10936    1   ALLOCATE_KEYWORD_AREA: PROC;

  10936  2 000476   200306 741300       ALLOCATE_KE* STX1  ! WIDTH+2,,AUTO

      301    10937
      302    10938        /*I*  NAME:    ALLOCATE_KEYWORD_AREA
      303    10939              PURPOSE: Allocate a block of memory somewhere in the parse work area,
      304    10940                       which is large enough to hold a P$KEYWORDS data structure
      305    10941                       that will be filled in by MOVE_KEYWORD_POINTERS.
      306    10942        */
      307    10943
      308    10944    2   DCL KEYWORD_OFFSET SBIN WORD;
      309    10945    2   DCL WORDS_NEEDED UBIN WORD;
      310    10946
      311    10947    2      KEYWORD_OFFSET = -1;

  10947  2 000477   000001 335007                    LCA     1,DL
         2 000500   200307 755100                    STA     KEYWORD_OFFSET,,AUTO

      312    10948
      313    10949    2      WORDS_NEEDED = SIZEW (P$KEYWORDS) +

  10949  2 000501   200301 236100                    LDQ     STATS+1,,AUTO
         2 000502   000043 036007                    ADLQ    35,DL
         2 000503   000044 506007                    DIV     36,DL
         2 000504   200301 036100                    ADLQ    STATS+1,,AUTO
         2 000505   000002 036007                    ADLQ    2,DL
         2 000506   200310 756100                    STQ     WORDS_NEEDED,,AUTO

      314    10950    2       SIZEW(P$KEYWORDS.KEYWORDS$) * (STATS.LITERAL_COUNT - 1) +
      315    10951    2       (STATS.LITERAL_COUNT + 35) / 36;
      316    10952
      317    10953    2      IF WORDS_NEEDED <= PCB.WK_USED

  10953  2 000507   200234 470500                    LDP0    PCB$,,AUTO
         2 000510   000010 236100                    LDQ     8,,PR0
         2 000511   000022 772000                    QRL     18
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:56   
         2 000512   200310 116100                    CMPQ    WORDS_NEEDED,,AUTO
         2 000513   000516 602000 2                  TNC     s:10959

      318    10954    2        THEN
      319    10955    2         KEYWORD_OFFSET = 0;

  10955  2 000514   200307 450100                    STZ     KEYWORD_OFFSET,,AUTO
         2 000515   000547 710000 2                  TRA     s:10967

      320    10956
      321    10957    3        ELSE DO UNTIL KEYWORD_OFFSET >= 0;

      322    10958
      323    10959    3         IF WORDS_NEEDED > PCB.WKSZ - (PCB.WK_USED + POSS.COUNT + SIZEW(POSS))

  10959  2 000516   200233 470500                    LDP0    P$,,AUTO
         2 000517   200234 471500                    LDP1    PCB$,,AUTO
         2 000520   100010 236100                    LDQ     8,,PR1
         2 000521   000022 772000                    QRL     18
         2 000522   000000 036100                    ADLQ    0,,PR0
         2 000523   200366 756100                    STQ     FRAGPOS+2,,AUTO
         2 000524   100005 236100                    LDQ     5,,PR1
         2 000525   000022 772000                    QRL     18
         2 000526   200366 136100                    SBLQ    FRAGPOS+2,,AUTO
         2 000527   000002 136007                    SBLQ    2,DL
         2 000530   000533 604000 2                  TMI     s:10961
         2 000531   200310 116100                    CMPQ    WORDS_NEEDED,,AUTO
         2 000532   000540 603000 2                  TRC     s:10963

      324    10960    3           THEN
      325    10961    3            CALL XUP$EXPAND_WORKAREA (G$D) ALTRET (INSUFFICIENT_SPACE);

  10961  2 000533   200003 630500                    EPPR0   @G$D,,AUTO
         2 000534   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000535   000000 701000 xent               TSX1    XUP$EXPAND_WORKAREA
         2 000536   000567 702000 2                  TSX2    INSUFFICIENT_SPACE
         2 000537   000545 710000 2                  TRA     s:10965
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:57   

      326    10962    3           ELSE
      327    10963    3            KEYWORD_OFFSET = PCB.WK_USED + POSS.COUNT + SIZEW(POSS);

  10963  2 000540   100010 236100                    LDQ     8,,PR1
         2 000541   000022 772000                    QRL     18
         2 000542   000000 036100                    ADLQ    0,,PR0
         2 000543   000002 036007                    ADLQ    2,DL
         2 000544   200307 756100                    STQ     KEYWORD_OFFSET,,AUTO

      328    10964
      329    10965    3         END;

  10965  2 000545   200307 235100                    LDA     KEYWORD_OFFSET,,AUTO
         2 000546   000516 604000 2                  TMI     s:10959

      330    10966
      331    10967    2      KEYWORDS$ = PINCRW(PCB.WORK$, KEYWORD_OFFSET);

  10967  2 000547   200234 470500                    LDP0    PCB$,,AUTO
         2 000550   000002 471500                    LDP1    2,,PR0
         2 000551   200307 720100                    LXL0    KEYWORD_OFFSET,,AUTO
         2 000552   100000 633510                    EPPR3   0,X0,PR1
         2 000553   200230 453500                    STP3    KEYWORDS$,,AUTO

      332    10968    2      PCB.OUT$ = KEYWORDS$;

  10968  2 000554   200230 236100                    LDQ     KEYWORDS$,,AUTO
         2 000555   000003 756100                    STQ     3,,PR0

      333    10969
      334    10970    2      P$KEYWORDS.KEYWORD_COUNT = STATS.LITERAL_COUNT;

  10970  2 000556   200301 235100                    LDA     STATS+1,,AUTO
         2 000557   300000 755100                    STA     0,,PR3

      335    10971    2      P$KEYWORDS.LEGAL$ = ADDR(P$KEYWORDS.KEYWORDS$(P$KEYWORDS.KEYWORD_COUNT));
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:58   

  10971  2 000560   000044 733000                    LRS     36
         2 000561   000022 736000                    QLS     18
         2 000562   000002 036003                    ADLQ    2,DU
         2 000563   200230 036100                    ADLQ    KEYWORDS$,,AUTO
         2 000564   300001 756100                    STQ     1,,PR3

      336    10972
      337    10973    2      RETURN;

  10973  2 000565   200306 221300                    LDX1  ! WIDTH+2,,AUTO
         2 000566   000001 702211                    TSX2  ! 1,X1

      338    10974
      339    10975    2   INSUFFICIENT_SPACE:
      340    10976
      341    10977    2      PCB.ERROR = OVER_FLOW;

  10977  2 000567   000000 236000 xsym  INSUFFICIEN* LDQ     OVER_FLOW
         2 000570   200234 470500                    LDP0    PCB$,,AUTO
         2 000571   000006 756100                    STQ     6,,PR0

      342    10978    2      PCB.OUT$ = ADDR(NIL);

  10978  2 000572   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000573   000003 756100                    STQ     3,,PR0

      343    10979    2      UNWIND TO G$D.ERROR;

  10979  2 000574   200003 471700                    LDP1  ! @G$D,,AUTO
         2 000575   100002 237300                    LDAQ  ! 2,,PR1
         2 000576   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000577   000000 000200                    ZERO    0,128

      344    10980
      345    10981    2   END ALLOCATE_KEYWORD_AREA;
      346    10982        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:59   
      347    10983    1   MOVE_KEYWORD_POINTERS: PROC;

  10983  2 000600   200306 741300       MOVE_KEYWOR* STX1  ! WIDTH+2,,AUTO

      348    10984
      349    10985        /*I*  NAME:    MOVE_KEYWORD_POINTERS
      350    10986              PURPOSE: Fill in the P$KEYWORDS.KEYWORDS$ pointers to the TEXTC
      351    10987                       representations of the keywords which would be legal at the
      352    10988                       point of error.
      353    10989        */
      354    10990
      355    10991    2   DCL KEYWORD SBIN WORD;
      356    10992
      357    10993    3      DO KEYWORD = 0 TO STATS.LITERAL_COUNT - 1;

  10993  2 000601   200307 450100                    STZ     KEYWORD,,AUTO
         2 000602   000614 710000 2                  TRA     s:10998+1

      358    10994
      359    10995    3         P$KEYWORDS.KEYWORDS$(KEYWORD) =

  10995  2 000603   200307 236100                    LDQ     KEYWORD,,AUTO
         2 000604   200300 036100                    ADLQ    STATS,,AUTO
         2 000605   200233 470500                    LDP0    P$,,AUTO
         2 000606   000001 471506                    LDP1    1,QL,PR0
         2 000607   100001 633500                    EPPR3   1,,PR1
         2 000610   200230 471500                    LDP1    KEYWORDS$,,AUTO
         2 000611   200307 720100                    LXL0    KEYWORD,,AUTO
         2 000612   100002 453510                    STP3    2,X0,PR1

      360    10996    3          ADDR(POSS.NODES$(KEYWORD+STATS.LEXEME_COUNT) -> P$LIT.COUNT);
      361    10997
      362    10998    3         END;

  10998  2 000613   200307 054100                    AOS     KEYWORD,,AUTO
         2 000614   200307 236100                    LDQ     KEYWORD,,AUTO
         2 000615   200301 116100                    CMPQ    STATS+1,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:60   
         2 000616   000603 604000 2                  TMI     s:10995

      363    10999
      364    11000    2      RETURN;

  11000  2 000617   200306 221300                    LDX1  ! WIDTH+2,,AUTO
         2 000620   000001 702211                    TSX2  ! 1,X1

      365    11001
      366    11002    2   END MOVE_KEYWORD_POINTERS;
      367    11003        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:61   
      368    11004    1   SETUP_FOR_PRINT: PROC;

  11004  2 000621   200306 741300       SETUP_FOR_P* STX1  ! WIDTH+2,,AUTO

      369    11005
      370    11006    2      AUTO_ERRMSG = CONSTANT_ERRMSG;

  11006  2 000622   000100 100400                    MLR     fill='000'O
         2 000623   000106 000150 1                  ADSC9   CONSTANT_ERRMSG          cn=0,n=104
         2 000624   200112 000150                    ADSC9   AUTO_ERRMSG,,AUTO        cn=0,n=104

      371    11007    2      AUTO_ERRMSG.V_ = VECTOR(AUTO_ERRMSG.V);

  11007  2 000625   000003 235000 3                  LDA     3
         2 000626   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 000627   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 000630   000140 036003                    ADLQ    96,DU
         2 000631   200112 757100                    STAQ    AUTO_ERRMSG,,AUTO

      372    11008    2      AUTO_ERRMSG.BUF_ = VECTOR(ERRMSG_BUF);

  11008  2 000632   000004 235000 3                  LDA     4
         2 000633   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 000634   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 000635   000172 036003                    ADLQ    122,DU
         2 000636   200116 757100                    STAQ    AUTO_ERRMSG+4,,AUTO

      373    11009    2      AUTO_ERRMSG.CODE_ = VECTOR(AUTO_CODE);

  11009  2 000637   777640 235007                    LDA     -96,DL
         2 000640   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 000641   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 000642   000144 036003                    ADLQ    100,DU
         2 000643   200114 757100                    STAQ    AUTO_ERRMSG+2,,AUTO

      374    11010    2      AUTO_ERRMSG.RESULTS_ = VECTOR(AUTO_RESULTS);

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:62   
  11010  2 000644   000003 235000 3                  LDA     3
         2 000645   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 000646   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 000647   000146 036003                    ADLQ    102,DU
         2 000650   200134 757100                    STAQ    AUTO_ERRMSG+18,,AUTO

      375    11011
      376    11012        %IF DEBUG;
      377    11013
      378    11014    2      AUTO_ERRMSG.FILEACCT_ = VECTOR(DCBADDR(%M$LM#) -> F$DCB.ACCT#);

  11014  2 000651   000005 470400 3                  LDP0    5
         2 000652   000000 471500                    LDP1    0,,PR0
         2 000653   100002 473500                    LDP3    2,,PR1
         2 000654   000006 235000 3                  LDA     6
         2 000655   200366 453500                    STP3    FRAGPOS+2,,AUTO
         2 000656   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 000657   000020 036003                    ADLQ    16,DU
         2 000660   200122 757100                    STAQ    AUTO_ERRMSG+8,,AUTO

      379    11015    2      AUTO_ERRMSG.FILENAME_ = VECTOR (XUERRMSG);

  11015  2 000661   000010 237000 3                  LDAQ    8
         2 000662   200120 757100                    STAQ    AUTO_ERRMSG+6,,AUTO

      380    11016
      381    11017        %ENDIF;
      382    11018
      383    11019    2      AUTO_CODE = CONSTANT_CODE;

  11019  2 000663   000140 236000 1                  LDQ     CONSTANT_CODE
         2 000664   200144 756100                    STQ     AUTO_CODE,,AUTO

      384    11020
      385    11021    2      IF PCB.OUTENT$ ~= ENTADDR(NIL)

  11021  2 000665   200234 474500                    LDP4    PCB$,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:63   
         2 000666   400015 236100                    LDQ     13,,PR4
         2 000667   000002 116000 xsym               CMPQ    B_VECTNIL+2
         2 000670   000675 600000 2                  TZE     s:11031

      386    11022    3        THEN DO;

      387    11023
      388    11024    3         OUTDCB = DCBNUM(NIL);

  11024  2 000671   200232 450100                    STZ     OUTDCB,,AUTO

      389    11025    3         WIDTH = 80;

  11025  2 000672   000120 235007                    LDA     80,DL
         2 000673   200304 755100                    STA     WIDTH,,AUTO

      390    11026
      391    11027    3         END;

  11027  2 000674   000760 710000 2                  TRA     s:11057

      392    11028
      393    11029    3        ELSE DO;

      394    11030
      395    11031    3         IF PCB.OUTDCB# = DCBNUM(NIL)

  11031  2 000675   400010 236100                    LDQ     8,,PR4
         2 000676   037777 316007                    CANQ    16383,DL
         2 000677   000703 601000 2                  TNZ     s:11035

      396    11032    3           THEN
      397    11033    3            OUTDCB = %M$DO#;

  11033  2 000700   000004 235007                    LDA     4,DL
         2 000701   200232 755100                    STA     OUTDCB,,AUTO
         2 000702   000706 710000 2                  TRA     s:11037
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:64   

      398    11034    3           ELSE
      399    11035    3            OUTDCB = PCB.OUTDCB#;

  11035  2 000703   400010 236100                    LDQ     8,,PR4
         2 000704   037777 376007                    ANQ     16383,DL
         2 000705   200232 756100                    STQ     OUTDCB,,AUTO

      400    11036
      401    11037    3         IF NOT DCBADDR(OUTDCB) -> F$DCB.FCD#

  11037  2 000706   200232 720100                    LXL0    OUTDCB,,AUTO
         2 000707   100000 475510                    LDP5    0,X0,PR1
         2 000710   500031 236100                    LDQ     25,,PR5
         2 000711   020000 316007                    CANQ    8192,DL
         2 000712   000731 601000 2                  TNZ     s:11048

      402    11038    4           THEN DO;

      403    11039
      404    11040    4            AUTO_OPEN = CONSTANT_OPEN;

  11040  2 000713   000100 100400                    MLR     fill='000'O
         2 000714   000000 000350 1                  ADSC9   CONSTANT_OPEN            cn=0,n=232
         2 000715   200004 000350                    ADSC9   AUTO_OPEN,,AUTO          cn=0,n=232

      405    11041    4            AUTO_OPEN.V_ = VECTOR (AUTO_OPEN.V);

  11041  2 000716   000007 235000 3                  LDA     7
         2 000717   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 000720   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 000721   000050 036003                    ADLQ    40,DU
         2 000722   200004 757100                    STAQ    AUTO_OPEN,,AUTO

      406    11042    4            AUTO_OPEN.V.DCB# = OUTDCB;

  11042  2 000723   200050 740100                    STX0    AUTO_OPEN+36,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:65   

      407    11043
      408    11044    5            CALL M$OPEN (AUTO_OPEN) WHENALTRETURN DO; END;

  11044  2 000724   200004 630500                    EPPR0   AUTO_OPEN,,AUTO
         2 000725   450000 713400                    CLIMB   alt,open
         2 000726   410400 401760                    pmme    nvectors=18
         2 000727   000731 702000 2                  TSX2    s:11048
         2 000730   000731 710000 2                  TRA     s:11048

      409    11045
      410    11046    4            END;

      411    11047
      412    11048    3         WIDTH = MINIMUM(MAXIMUM(DCBADDR(OUTDCB) -> F$DCB.WIDTH#, 32),

  11048  2 000731   000005 470400 3                  LDP0    5
         2 000732   000000 471500                    LDP1    0,,PR0
         2 000733   200232 720100                    LXL0    OUTDCB,,AUTO
         2 000734   100000 473510                    LDP3    0,X0,PR1
         2 000735   300004 236100                    LDQ     4,,PR3
         2 000736   000777 376007                    ANQ     511,DL
         2 000737   000040 116007                    CMPQ    32,DL
         2 000740   000742 603000 2                  TRC     s:11048+9
         2 000741   000040 236007                    LDQ     32,DL
         2 000742   000214 116007                    CMPQ    140,DL
         2 000743   000746 602000 2                  TNC     s:11048+13
         2 000744   000746 600000 2                  TZE     s:11048+13
         2 000745   000214 236007                    LDQ     140,DL
         2 000746   200304 756100                    STQ     WIDTH,,AUTO

      413    11049    3          LENGTHC(PRINT));
      414    11050
      415    11051    3         AUTO_WRITE = CONST_WRITE;

  11051  2 000747   000100 100400                    MLR     fill='000'O
         2 000750   000072 000060 1                  ADSC9   CONST_WRITE              cn=0,n=48
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:66   
         2 000751   200076 000060                    ADSC9   AUTO_WRITE,,AUTO         cn=0,n=48

      416    11052    3         AUTO_WRITE.V_ = VECTOR (AUTO_WRITE.V);

  11052  2 000752   000003 235000 3                  LDA     3
         2 000753   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 000754   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 000755   000106 036003                    ADLQ    70,DU
         2 000756   200076 757100                    STAQ    AUTO_WRITE,,AUTO

      417    11053    3         AUTO_WRITE.V.DCB# = OUTDCB;

  11053  2 000757   200106 740100                    STX0    AUTO_WRITE+8,,AUTO

      418    11054
      419    11055    3         END;

      420    11056
      421    11057    2      AUTO_WRITE.BUF_ = VECTOR(SUBSTR(PRINT, 0, WIDTH));

  11057  2 000760   200304 235100                    LDA     WIDTH,,AUTO
         2 000761   000020 735000                    ALS     16
         2 000762   000140 135007                    SBLA    96,DL
         2 000763   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 000764   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 000765   000235 036003                    ADLQ    157,DU
         2 000766   200102 757100                    STAQ    AUTO_WRITE+4,,AUTO

      422    11058
      423    11059    2      RETURN;

  11059  2 000767   200306 221300                    LDX1  ! WIDTH+2,,AUTO
         2 000770   000001 702211                    TSX2  ! 1,X1

      424    11060
      425    11061    2   END SETUP_FOR_PRINT;
      426    11062
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:67   
      427    11063        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:68   
      428    11064    1   PRINT_LEXEMES: PROC;

  11064  2 000771   200306 741300       PRINT_LEXEM* STX1  ! WIDTH+2,,AUTO

      429    11065
      430    11066        /*I*  NAME:       PRINT_LEXEMES
      431    11067              PURPOSE:    Prints lexemes
      432    11068        */
      433    11069
      434    11070    2   DCL I SBIN;
      435    11071    2   DCL I$ PTR;
      436    11072
      437    11073    3      DO I = 0 TO STATS.LEXEME_COUNT - 1;

  11073  2 000772   200307 450100                    STZ     I,,AUTO
         2 000773   001241 710000 2                  TRA     s:11242+1

      438    11074
      439    11075    3         I$ = POSS.NODES$(I);

  11075  2 000774   200233 470500                    LDP0    P$,,AUTO
         2 000775   200307 720100                    LXL0    I,,AUTO
         2 000776   000001 236110                    LDQ     1,X0,PR0
         2 000777   200310 756100                    STQ     I$,,AUTO

      440    11076
      441    11077    4         DO CASE (I$ -> P$SYM.LEXTYPE);

  11077  2 001000   200310 471500                    LDP1    I$,,AUTO
         2 001001   100000 236100                    LDQ     0,,PR1
         2 001002   000020 772000                    QRL     16
         2 001003   000037 376007                    ANQ     31,DL
         2 001004   000040 116007                    CMPQ    32,DL
         2 001005   001007 602006 2                  TNC     s:11077+7,QL
         2 001006   001226 710000 2                  TRA     s:11236
         2 001007   001226 710000 2                  TRA     s:11236
         2 001010   001047 710000 2                  TRA     s:11092
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:69   
         2 001011   001047 710000 2                  TRA     s:11092
         2 001012   001047 710000 2                  TRA     s:11092
         2 001013   001047 710000 2                  TRA     s:11092
         2 001014   001047 710000 2                  TRA     s:11092
         2 001015   001047 710000 2                  TRA     s:11092
         2 001016   001047 710000 2                  TRA     s:11092
         2 001017   001047 710000 2                  TRA     s:11092
         2 001020   001047 710000 2                  TRA     s:11092
         2 001021   001047 710000 2                  TRA     s:11092
         2 001022   001047 710000 2                  TRA     s:11092
         2 001023   001047 710000 2                  TRA     s:11092
         2 001024   001226 710000 2                  TRA     s:11236
         2 001025   001226 710000 2                  TRA     s:11236
         2 001026   001226 710000 2                  TRA     s:11236
         2 001027   001226 710000 2                  TRA     s:11236
         2 001030   001226 710000 2                  TRA     s:11236
         2 001031   001226 710000 2                  TRA     s:11236
         2 001032   001226 710000 2                  TRA     s:11236
         2 001033   001117 710000 2                  TRA     s:11158
         2 001034   001146 710000 2                  TRA     s:11186
         2 001035   001226 710000 2                  TRA     s:11236
         2 001036   001226 710000 2                  TRA     s:11236
         2 001037   001226 710000 2                  TRA     s:11236
         2 001040   001226 710000 2                  TRA     s:11236
         2 001041   001226 710000 2                  TRA     s:11236
         2 001042   001226 710000 2                  TRA     s:11236
         2 001043   001226 710000 2                  TRA     s:11236
         2 001044   001226 710000 2                  TRA     s:11236
         2 001045   001226 710000 2                  TRA     s:11236
         2 001046   001172 710000 2                  TRA     s:11214

      442    11078
      443    11079    4           CASE (%LEX_DECIMAL#,

      444    11080    4          %LEX_OCTAL#,
      445    11081    4          %LEX_HEX#,
      446    11082    4          %LEX_ALPHA#,
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:70   
      447    11083    4          %LEX_ANUMERIC#,
      448    11084    4          %LEX_SYMBOL#,
      449    11085    4          %LEX_PL6SYM#,
      450    11086    4          %LEX_FID#,
      451    11087    4          %LEX_JOBNAME#,
      452    11088    4          %LEX_ACCOUNT#,
      453    11089    4          %LEX_ASYM#,
      454    11090    4          %LEX_NULL#);
      455    11091
      456    11092    4            AUTO_CODE.ERR# = %E$POSSIBLE_DECIMAL + I$ -> P$SYM.LEXTYPE - 1;

  11092  2 001047   000061 036007                    ADLQ    49,DL
         2 001050   000003 736000                    QLS     3
         2 001051   200144 676100                    ERQ     AUTO_CODE,,AUTO
         2 001052   377770 376007                    ANQ     131064,DL
         2 001053   200144 656100                    ERSQ    AUTO_CODE,,AUTO

      457    11093
      458    11094        /*E*  ERROR:   XUP-E$POSSIBLE_DECIMAL
      459    11095              MESSAGE: a decimal integer% (plus '%U1')%% of length %U2 or less%
      460    11096        */
      461    11097        /*E*  ERROR:   XUP-E$POSSIBLE_OCTAL
      462    11098              MESSAGE: an octal integer% (plus '%U1')%% of length %U2 or less%
      463    11099        */
      464    11100        /*E*  ERROR:   XUP-E$POSSIBLE_HEX
      465    11101              MESSAGE: a hexadecimal integer% (plus '%U1')%% of length %U2 or less%
      466    11102        */
      467    11103        /*E*  ERROR:   XUP-E$POSSIBLE_ALPHA
      468    11104              MESSAGE: an alphabetic name% (plus '%U1')%% of length %U2 or less%
      469    11105        */
      470    11106        /*E*  ERROR:   XUP-E$POSSIBLE_ANUMERIC
      471    11107              MESSAGE: an alphanumeric name% (plus '%U1')%% of length %U2 or less%
      472    11108        */
      473    11109        /*E*  ERROR:   XUP-E$POSSIBLE_SYMBOL
      474    11110              MESSAGE: a symbol name% (plus '%U1')%% of length %U2 or less%
      475    11111        */
      476    11112        /*E*  ERROR:   XUP-E$POSSIBLE_PL6SYM
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:71   
      477    11113              MESSAGE: a PL-6 symbol name% (plus '%U1')%% of length %U2 or less%
      478    11114        */
      479    11115        /*E*  ERROR:   XUP-E$POSSIBLE_FID
      480    11116              MESSAGE: a FID (File IDentifier)% (plus '%U1')%% of length %U2 or less%
      481    11117        */
      482    11118        /*E*  ERROR:   XUP-E$POSSIBLE_JOBNAME
      483    11119              MESSAGE: a job name% (plus '%U1')%% of length %U2 or less%
      484    11120        */
      485    11121        /*E*  ERROR:   XUP-E$POSSIBLE_ACCOUNT
      486    11122              MESSAGE: an account name/number% (plus '%U1')%% of length %U2 or less%
      487    11123        */
      488    11124        /*E*  ERROR:   XUP-E$POSSIBLE_ASYM
      489    11125              MESSAGE: anything up to any '%U1' (or end-of-line)% of length %U2 or less%
      490    11126        */
      491    11127        /*E*  ERROR:   XUP-E$POSSIBLE_NULL
      492    11128              MESSAGE: any combination of '%U1'% of length %U2 or less%
      493    11129        */
      494    11130
      495    11131    4            IF I$ -> P$SYM.XTRA

  11131  2 001054   100000 236100                    LDQ     0,,PR1
         2 001055   000040 316003                    CANQ    32,DU
         2 001056   001112 600000 2                  TZE     s:11151

      496    11132    5              THEN DO;

      497    11133
      498    11134    5               CALL CRAM_FIELD2 (BINBIT(I$ -> P$SYM.MAXL, 36));

  11134  2 001057   100001 236100                    LDQ     1,,PR1
         2 001060   000033 772000                    QRL     27
         2 001061   200374 756100                    STQ     FRAGPOS+8,,AUTO
         2 001062   200374 633500                    EPPR3   FRAGPOS+8,,AUTO
         2 001063   200313 453500                    STP3    LOW,,AUTO
         2 001064   001336 701000 2                  TSX1    CRAM_FIELD2
         2 001065   000000 011000                    NOP     0

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:72   
      499    11135
      500    11136    5               IF I$ -> P$SYM.COUNT = 0

  11136  2 001066   200310 470500                    LDP0    I$,,AUTO
         2 001067   000001 236100                    LDQ     1,,PR0
         2 001070   000777 316003                    CANQ    511,DU
         2 001071   001075 601000 2                  TNZ     s:11141

      501    11137    5                 THEN
      502    11138    5                  AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);

  11138  2 001072   000012 237000 3                  LDAQ    10
         2 001073   200126 757100                    STAQ    AUTO_ERRMSG+12,,AUTO
         2 001074   001226 710000 2                  TRA     s:11236

      503    11139    6                 ELSE DO;

      504    11140
      505    11141    6                  FIELD1.L# = I$ -> P$SYM.COUNT;

  11141  2 001075   000011 736000                    QLS     9
         2 001076   200152 552140                    STBQ    FIELD1,'40'O,AUTO

      506    11142    6                  FIELD1.NAME# = I$ -> P$SYM.TEXT;

  11142  2 001077   000001 220100                    LDX0    1,,PR0
         2 001100   000777 360003                    ANX0    511,DU
         2 001101   040100 100540                    MLR     fill='040'O
         2 001102   000001 400010                    ADSC9   1,,PR0                   cn=2,n=*X0
         2 001103   200152 200037                    ADSC9   FIELD1,,AUTO             cn=1,n=31

      507    11143    6                  AUTO_ERRMSG.FIELD1_ = VECTOR(FIELD1);

  11143  2 001104   000014 235000 3                  LDA     12
         2 001105   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 001106   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 001107   000152 036003                    ADLQ    106,DU
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:73   
         2 001110   200126 757100                    STAQ    AUTO_ERRMSG+12,,AUTO

      508    11144
      509    11145    6                  END;

      510    11146
      511    11147    5               END;

  11147  2 001111   001226 710000 2                  TRA     s:11236

      512    11148
      513    11149    5              ELSE DO;

      514    11150
      515    11151    5               AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);

  11151  2 001112   000012 237000 3                  LDAQ    10
         2 001113   200126 757100                    STAQ    AUTO_ERRMSG+12,,AUTO

      516    11152    5               AUTO_ERRMSG.FIELD2_ = VECTOR(NIL);

  11152  2 001114   000012 237000 3                  LDAQ    10
         2 001115   200130 757100                    STAQ    AUTO_ERRMSG+14,,AUTO

      517    11153
      518    11154    5               END;

  11154  2 001116   001226 710000 2                  TRA     s:11236

      519    11155
      520    11156    4           CASE (%LEX_BLANK#);

      521    11157
      522    11158    4            IF PCB.COMMENT.LEAD = ' ' OR PCB.COMMENT.TRAIL = ' '

  11158  2 001117   200234 473500                    LDP3    PCB$,,AUTO
         2 001120   300007 221100                    LDX1    7,,PR3
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:74   
         2 001121   040040 101003                    CMPX1   16416,DU
         2 001122   001126 600000 2                  TZE     s:11161
         2 001123   300007 722100                    LXL2    7,,PR3
         2 001124   040040 102003                    CMPX2   16416,DU
         2 001125   001137 601000 2                  TNZ     s:11174

      523    11159    5              THEN DO;

      524    11160
      525    11161    5               AUTO_CODE.ERR# = %E$POSSIBLE_BLANK;

  11161  2 001126   200144 236100                    LDQ     AUTO_CODE,,AUTO
         2 001127   000015 376000 3                  ANQ     13
         2 001130   000760 276007                    ORQ     496,DL
         2 001131   200144 756100                    STQ     AUTO_CODE,,AUTO

      526    11162
      527    11163        /*E*  ERROR:   XUP-E$POSSIBLE_BLANK
      528    11164              MESSAGE: one or more blanks.
      529    11165        */
      530    11166
      531    11167    5               AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);

  11167  2 001132   000012 237000 3                  LDAQ    10
         2 001133   200126 757100                    STAQ    AUTO_ERRMSG+12,,AUTO

      532    11168    5               AUTO_ERRMSG.FIELD2_ = VECTOR(NIL);

  11168  2 001134   000012 237000 3                  LDAQ    10
         2 001135   200130 757100                    STAQ    AUTO_ERRMSG+14,,AUTO

      533    11169
      534    11170    5               END;

  11170  2 001136   001226 710000 2                  TRA     s:11236

      535    11171
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:75   
      536    11172    5              ELSE DO;

      537    11173
      538    11174    5               AUTO_CODE.ERR# = %E$POSSIBLE_BLANK_OR_COMMENT;

  11174  2 001137   200144 236100                    LDQ     AUTO_CODE,,AUTO
         2 001140   000015 376000 3                  ANQ     13
         2 001141   000770 276007                    ORQ     504,DL
         2 001142   200144 756100                    STQ     AUTO_CODE,,AUTO

      539    11175
      540    11176        /*E*  ERROR:   XUP-E$POSSIBLE_BLANK_OR_COMMENT
      541    11177              MESSAGE: one or more blanks (and/or a %%U1%comment%%U2%).
      542    11178        */
      543    11179
      544    11180    5               CALL SETUP_COMMENT_FIELDS;

  11180  2 001143   001246 701000 2                  TSX1    SETUP_COMMENT_FIELDS
         2 001144   000000 011000                    NOP     0

      545    11181
      546    11182    5               END;

  11182  2 001145   001226 710000 2                  TRA     s:11236

      547    11183
      548    11184    4           CASE (%LEX_END#);

      549    11185
      550    11186    4            IF PCB.COMMENT.LEAD = ' '

  11186  2 001146   200234 473500                    LDP3    PCB$,,AUTO
         2 001147   300007 221100                    LDX1    7,,PR3
         2 001150   040040 101003                    CMPX1   16416,DU
         2 001151   001163 601000 2                  TNZ     s:11202

      551    11187    5              THEN DO;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:76   

      552    11188
      553    11189    5               AUTO_CODE.ERR# = %E$POSSIBLE_END;

  11189  2 001152   200144 236100                    LDQ     AUTO_CODE,,AUTO
         2 001153   000015 376000 3                  ANQ     13
         2 001154   001000 276007                    ORQ     512,DL
         2 001155   200144 756100                    STQ     AUTO_CODE,,AUTO

      554    11190
      555    11191        /*E*  ERROR:   XUP-E$POSSIBLE_END
      556    11192              MESSAGE: nothing at all (the end of the command).
      557    11193        */
      558    11194
      559    11195    5               AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);

  11195  2 001156   000012 237000 3                  LDAQ    10
         2 001157   200126 757100                    STAQ    AUTO_ERRMSG+12,,AUTO

      560    11196    5               AUTO_ERRMSG.FIELD2_ = VECTOR(NIL);

  11196  2 001160   000012 237000 3                  LDAQ    10
         2 001161   200130 757100                    STAQ    AUTO_ERRMSG+14,,AUTO

      561    11197
      562    11198    5               END;

  11198  2 001162   001226 710000 2                  TRA     s:11236

      563    11199
      564    11200    5              ELSE DO;

      565    11201
      566    11202    5               AUTO_CODE.ERR# = %E$POSSIBLE_END_OR_COMMENT;

  11202  2 001163   200144 236100                    LDQ     AUTO_CODE,,AUTO
         2 001164   000015 376000 3                  ANQ     13
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:77   
         2 001165   001010 276007                    ORQ     520,DL
         2 001166   200144 756100                    STQ     AUTO_CODE,,AUTO

      567    11203
      568    11204        /*E*  ERROR:   XUP-E$POSSIBLE_END_OR_COMMENT
      569    11205              MESSAGE: the end of the command (possibly with a %%U1%comment%%U2%).
      570    11206        */
      571    11207
      572    11208    5               CALL SETUP_COMMENT_FIELDS;

  11208  2 001167   001246 701000 2                  TSX1    SETUP_COMMENT_FIELDS
         2 001170   000000 011000                    NOP     0

      573    11209
      574    11210    5               END;

  11210  2 001171   001226 710000 2                  TRA     s:11236

      575    11211
      576    11212    4           CASE (%LEX_DSTRING#);

      577    11213
      578    11214    4            AUTO_CODE.ERR# = %E$POSSIBLE_DSTRING;

  11214  2 001172   200144 236100                    LDQ     AUTO_CODE,,AUTO
         2 001173   000015 376000 3                  ANQ     13
         2 001174   001020 276007                    ORQ     528,DL
         2 001175   200144 756100                    STQ     AUTO_CODE,,AUTO

      579    11215
      580    11216        /*E*  ERROR:   XUP-E$POSSIBLE_DSTRING
      581    11217              MESSAGE: a %%U1%string%%U1%% of length %U2 or less%.
      582    11218        */
      583    11219
      584    11220    4            IF I$ -> P$DSTR.DLIM = BINASC(0)

  11220  2 001176   100001 236100                    LDQ     1,,PR1
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:78   
         2 001177   000777 376003                    ANQ     511,DU
         2 001200   000000 116003                    CMPQ    0,DU
         2 001201   001205 601000 2                  TNZ     s:11226

      585    11221    4              THEN
      586    11222    4               AUTO_ERRMSG.FIELD1_ = VECTOR(NIL);

  11222  2 001202   000012 237000 3                  LDAQ    10
         2 001203   200126 757100                    STAQ    AUTO_ERRMSG+12,,AUTO
         2 001204   001217 710000 2                  TRA     s:11232

      587    11223
      588    11224    5              ELSE DO;

      589    11225
      590    11226    5               FIELD1.L# = 1;

  11226  2 001205   001000 236003                    LDQ     512,DU
         2 001206   200152 552140                    STBQ    FIELD1,'40'O,AUTO

      591    11227    5               FIELD1.NAME# = I$ -> P$DSTR.DLIM;

  11227  2 001207   040100 100500                    MLR     fill='040'O
         2 001210   100001 200001                    ADSC9   1,,PR1                   cn=1,n=1
         2 001211   200152 200037                    ADSC9   FIELD1,,AUTO             cn=1,n=31

      592    11228    5               AUTO_ERRMSG.FIELD1_ = VECTOR(FIELD1);

  11228  2 001212   000014 235000 3                  LDA     12
         2 001213   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 001214   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 001215   000152 036003                    ADLQ    106,DU
         2 001216   200126 757100                    STAQ    AUTO_ERRMSG+12,,AUTO

      593    11229
      594    11230    5               END;

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:79   
      595    11231
      596    11232    4            CALL CRAM_FIELD2 (BINBIT(I$ -> P$DSTR.MAXL, 36));

  11232  2 001217   100001 236100                    LDQ     1,,PR1
         2 001220   000033 772000                    QRL     27
         2 001221   200376 756100                    STQ     FRAGPOS+10,,AUTO
         2 001222   200376 633500                    EPPR3   FRAGPOS+10,,AUTO
         2 001223   200313 453500                    STP3    LOW,,AUTO
         2 001224   001336 701000 2                  TSX1    CRAM_FIELD2
         2 001225   000000 011000                    NOP     0

      597    11233
      598    11234    4           END;

      599    11235
      600    11236    3         CALL M$ERRMSG (AUTO_ERRMSG) ALTRET (IGNORE_ALTRET);

  11236  2 001226   200112 630500                    EPPR0   AUTO_ERRMSG,,AUTO
         2 001227   420000 713400                    CLIMB   alt,+8192
         2 001230   405000 401760                    pmme    nvectors=11
         2 001231   001232 702000 2                  TSX2    IGNORE_ALTRET

      601    11237
      602    11238    3   IGNORE_ALTRET:
      603    11239
      604    11240    3         CALL WRITE_OUTPUT (ERRMSG_BUF, LENGTHC(ERRMSG_BUF));

  11240  2 001232   000017 236000 3     IGNORE_ALTR* LDQ     15
         2 001233   200362 756100                    STQ     @STR+1,,AUTO
         2 001234   200172 630500                    EPPR0   ERRMSG_BUF,,AUTO
         2 001235   200361 450500                    STP0    LIT_POS+2,,AUTO
         2 001236   001633 701000 2                  TSX1    WRITE_OUTPUT
         2 001237   000000 011000                    NOP     0

      605    11241
      606    11242    3         END;

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:80   
  11242  2 001240   200307 054100                    AOS     I,,AUTO
         2 001241   200307 236100                    LDQ     I,,AUTO
         2 001242   200300 116100                    CMPQ    STATS,,AUTO
         2 001243   000774 604000 2                  TMI     s:11075

      607    11243
      608    11244    2      RETURN;

  11244  2 001244   200306 221300                    LDX1  ! WIDTH+2,,AUTO
         2 001245   000001 702211                    TSX2  ! 1,X1

      609    11245
      610    11246    2   END PRINT_LEXEMES;
      611    11247
      612    11248        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:81   
      613    11249    1   SETUP_COMMENT_FIELDS: PROC;

  11249  2 001246   200312 741300       SETUP_COMME* STX1  ! J$,,AUTO

      614    11250
      615    11251    2      CALL SETUP_FIELD (FIELD1, AUTO_ERRMSG.FIELD1_, PCB.COMMENT.LEAD);

  11251  2 001247   200234 236100                    LDQ     PCB$,,AUTO
         2 001250   000007 036003                    ADLQ    7,DU
         2 001251   200317 756100                    STQ     @FIELD_+1,,AUTO
         2 001252   200126 630500                    EPPR0   AUTO_ERRMSG+12,,AUTO
         2 001253   200316 450500                    STP0    @FIELD+1,,AUTO
         2 001254   200152 631500                    EPPR1   FIELD1,,AUTO
         2 001255   200315 451500                    STP1    IF2+1,,AUTO
         2 001256   001273 701000 2                  TSX1    SETUP_FIELD
         2 001257   000000 011000                    NOP     0

      616    11252    2      CALL SETUP_FIELD (FIELD2, AUTO_ERRMSG.FIELD2_, PCB.COMMENT.TRAIL);

  11252  2 001260   200234 236100                    LDQ     PCB$,,AUTO
         2 001261   000020 036000 3                  ADLQ    16
         2 001262   200317 756100                    STQ     @FIELD_+1,,AUTO
         2 001263   200130 630500                    EPPR0   AUTO_ERRMSG+14,,AUTO
         2 001264   200316 450500                    STP0    @FIELD+1,,AUTO
         2 001265   200162 631500                    EPPR1   FIELD2,,AUTO
         2 001266   200315 451500                    STP1    IF2+1,,AUTO
         2 001267   001273 701000 2                  TSX1    SETUP_FIELD
         2 001270   000000 011000                    NOP     0

      617    11253
      618    11254    2      RETURN;

  11254  2 001271   200312 221300                    LDX1  ! J$,,AUTO
         2 001272   000001 702211                    TSX2  ! 1,X1

      619    11255
      620    11256    2   SETUP_FIELD: PROC (FIELD, FIELD_, CHARS);
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:82   

  11256  2 001273   200314 741300       SETUP_FIELD  STX1  ! LOW$,,AUTO

      621    11257
      622    11258           %VLP_NAME (FPTN=FIELD, STCLASS=" ", LEN=31);
      623    11285
      624    11286    3   DCL FIELD_ VECTOR;
      625    11287    3   DCL CHARS CHAR (2);
      626    11288
      627    11289    3      IF CHARS = '  '

  11289  2 001274   200317 470500                    LDP0    @CHARS,,AUTO
         2 001275   040000 106500                    CMPC    fill='040'O
         2 001276   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 001277   000144 000002 1                  ADSC9   XUERRMSG+3               cn=0,n=2
         2 001300   001305 601000 2                  TNZ     s:11295

      628    11290    3        THEN
      629    11291    3         FIELD_ = VECTOR (NIL);

  11291  2 001301   000012 237000 3                  LDAQ    10
         2 001302   200316 471500                    LDP1    @FIELD_,,AUTO
         2 001303   100000 757100                    STAQ    0,,PR1
         2 001304   001334 710000 2                  TRA     s:11314

      630    11292
      631    11293    4        ELSE DO;

      632    11294
      633    11295    4         FIELD_ = VECTOR (FIELD);

  11295  2 001305   000014 235000 3                  LDA     12
         2 001306   200315 236100                    LDQ     @FIELD,,AUTO
         2 001307   200316 471500                    LDP1    @FIELD_,,AUTO
         2 001310   100000 757100                    STAQ    0,,PR1

      634    11296
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:83   
      635    11297    4         IF SUBSTR (CHARS, 0, 1) = ' '

  11297  2 001311   040000 106500                    CMPC    fill='040'O
         2 001312   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 001313   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001314   001325 601000 2                  TNZ     s:11307

      636    11298    5           THEN DO;

      637    11299
      638    11300    5            FIELD.L# = 1;

  11300  2 001315   200315 473500                    LDP3    @FIELD,,AUTO
         2 001316   000100 101400                    MRL     fill='000'O
         2 001317   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         2 001320   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      639    11301    5            FIELD.NAME# = SUBSTR (CHARS, 1);

  11301  2 001321   040100 100500                    MLR     fill='040'O
         2 001322   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         2 001323   300000 200037                    ADSC9   0,,PR3                   cn=1,n=31

      640    11302
      641    11303    5            END;

  11303  2 001324   001334 710000 2                  TRA     s:11314

      642    11304
      643    11305    5           ELSE DO;

      644    11306
      645    11307    5            FIELD.L# = 2;

  11307  2 001325   200315 473500                    LDP3    @FIELD,,AUTO
         2 001326   000100 101400                    MRL     fill='000'O
         2 001327   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:84   
         2 001330   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      646    11308    5            FIELD.NAME# = CHARS;

  11308  2 001331   040100 100500                    MLR     fill='040'O
         2 001332   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 001333   300000 200037                    ADSC9   0,,PR3                   cn=1,n=31

      647    11309
      648    11310    5            END;

      649    11311
      650    11312    4         END;

      651    11313
      652    11314    3      RETURN;

  11314  2 001334   200314 221300                    LDX1  ! LOW$,,AUTO
         2 001335   000001 702211                    TSX2  ! 1,X1

      653    11315
      654    11316    3   END SETUP_FIELD;
      655    11317
      656    11318    2   END SETUP_COMMENT_FIELDS;
      657    11319        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:85   
      658    11320    1   CRAM_FIELD2: PROC (F2);

  11320  2 001336   200312 741300       CRAM_FIELD2  STX1  ! J$,,AUTO

      659    11321
      660    11322    2   DCL F2 UBIN;
      661    11323    2   DCL IF2 UBIN;
      662    11324
      663    11325    2      IF F2 = 0

  11325  2 001337   200313 470500                    LDP0    @F2,,AUTO
         2 001340   000000 235100                    LDA     0,,PR0
         2 001341   001345 601000 2                  TNZ     s:11331

      664    11326    2        THEN
      665    11327    2         AUTO_ERRMSG.FIELD2_ = VECTOR(NIL);

  11327  2 001342   000012 237000 3                  LDAQ    10
         2 001343   200130 757100                    STAQ    AUTO_ERRMSG+14,,AUTO
         2 001344   001403 710000 2                  TRA     s:11347

      666    11328
      667    11329    3        ELSE DO;

      668    11330
      669    11331    3         AUTO_ERRMSG.FIELD2_ = VECTOR(FIELD2);

  11331  2 001345   000014 235000 3                  LDA     12
         2 001346   200366 452500                    STP2    FRAGPOS+2,,AUTO
         2 001347   200366 236100                    LDQ     FRAGPOS+2,,AUTO
         2 001350   000162 036003                    ADLQ    114,DU
         2 001351   200130 757100                    STAQ    AUTO_ERRMSG+14,,AUTO

      670    11332
      671    11333    3         IF2 = F2;

  11333  2 001352   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:86   
         2 001353   200314 755100                    STA     IF2,,AUTO

      672    11334    3         FIELD2.L# = 1;

  11334  2 001354   001000 236003                    LDQ     512,DU
         2 001355   200162 552140                    STBQ    FIELD2,'40'O,AUTO

      673    11335
      674    11336    4         DO WHILE (IF2 >= 10);

  11336  2 001356   000012 115007                    CMPA    10,DL
         2 001357   001371 602000 2                  TNC     s:11343

      675    11337
      676    11338    4            FIELD2.L# = FIELD2.L# + 1;

  11338  2 001360   200162 236100                    LDQ     FIELD2,,AUTO
         2 001361   001000 036003                    ADLQ    512,DU
         2 001362   200162 552140                    STBQ    FIELD2,'40'O,AUTO

      677    11339    4            IF2 = IF2 / 10;

  11339  2 001363   200314 236100                    LDQ     IF2,,AUTO
         2 001364   000001 772000                    QRL     1
         2 001365   000005 506007                    DIV     5,DL
         2 001366   200314 756100                    STQ     IF2,,AUTO

      678    11340
      679    11341    4            END;

  11341  2 001367   000012 116007                    CMPQ    10,DL
         2 001370   001360 603000 2                  TRC     s:11338

      680    11342
      681    11343    3         CALL BINCHAR (SUBSTR(FIELD2.NAME#, 0, FIELD2.L#), F2);

  11343  2 001371   200162 236100                    LDQ     FIELD2,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:87   
         2 001372   000033 772000                    QRL     27
         2 001373   200313 470500                    LDP0    @F2,,AUTO
         2 001374   000000 235100                    LDA     0,,PR0
         2 001375   000000 620006                    EAX0    0,QL
         2 001376   000044 773000                    LRL     36
         2 001377   200366 757100                    STAQ    FRAGPOS+2,,AUTO
         2 001400   000140 301500                    BTD
         2 001401   200366 000010                    NDSC9   FRAGPOS+2,,AUTO          cn=0,s=lsgnf,sf=0,n=8
         2 001402   200162 230010                    NDSC9   FIELD2,,AUTO             cn=1,s=nosgn,sf=0,n=*X0

      682    11344
      683    11345    3         END;

      684    11346
      685    11347    2      RETURN;

  11347  2 001403   200312 221300                    LDX1  ! J$,,AUTO
         2 001404   000001 702211                    TSX2  ! 1,X1

      686    11348
      687    11349    2   END CRAM_FIELD2;
      688    11350
      689    11351        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:88   
      690    11352    1   PRINT_LITERALS: PROC;

  11352  2 001405   200306 741300       PRINT_LITER* STX1  ! WIDTH+2,,AUTO

      691    11353
      692    11354    2   DCL COLUMNS_PER_LITERAL SBIN;
      693    11355    2   DCL COLS_USED SBIN;
      694    11356    2   DCL I SBIN;
      695    11357    2   DCL I$ PTR;
      696    11358    2   DCL LITBUF CHAR (140);
      697    11359    2   DCL LITERALS_PER_LINE SBIN;
      698    11360    2   DCL LIT_POS SBIN;
      699    11361
      700    11362    2      IF STATS.LITERAL_COUNT = 0

  11362  2 001406   200301 235100                    LDA     STATS+1,,AUTO
         2 001407   001411 601000 2                  TNZ     s:11366

      701    11363    2        THEN
      702    11364    2         RETURN;

  11364  2 001410   000001 702211                    TSX2  ! 1,X1

      703    11365
      704    11366    2      I = MINIMUM (STATS.LONGEST_LITERAL + 1, 12);

  11366  2 001411   200302 236100                    LDQ     STATS+2,,AUTO
         2 001412   000001 036007                    ADLQ    1,DL
         2 001413   000014 116007                    CMPQ    12,DL
         2 001414   001416 604400 2                  TMOZ    s:11366+5
         2 001415   000014 236007                    LDQ     12,DL
         2 001416   200311 756100                    STQ     I,,AUTO

      705    11367
      706    11368    2      LITERALS_PER_LINE = MAXIMUM (1, (WIDTH - 4) / I);

  11368  2 001417   200304 236100                    LDQ     WIDTH,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:89   
         2 001420   000004 136007                    SBLQ    4,DL
         2 001421   200311 506100                    DIV     I,,AUTO
         2 001422   000001 116007                    CMPQ    1,DL
         2 001423   001425 605000 2                  TPL     s:11368+6
         2 001424   000001 236007                    LDQ     1,DL
         2 001425   200356 756100                    STQ     LITERALS_PER_LINE,,AUTO

      707    11369
      708    11370    2      COLUMNS_PER_LITERAL = MAXIMUM(6, (WIDTH - 4) / LITERALS_PER_LINE);

  11370  2 001426   200304 236100                    LDQ     WIDTH,,AUTO
         2 001427   000004 136007                    SBLQ    4,DL
         2 001430   200356 506100                    DIV     LITERALS_PER_LINE,,AUTO
         2 001431   000006 116007                    CMPQ    6,DL
         2 001432   001434 605000 2                  TPL     s:11370+6
         2 001433   000006 236007                    LDQ     6,DL
         2 001434   200307 756100                    STQ     COLUMNS_PER_LITERAL,,AUTO

      709    11371
      710    11372    2      LIT_POS = 2;

  11372  2 001435   000002 235007                    LDA     2,DL
         2 001436   200357 755100                    STA     LIT_POS,,AUTO

      711    11373    2      LITBUF = ' ';

  11373  2 001437   040100 100400                    MLR     fill='040'O
         2 001440   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001441   200313 000214                    ADSC9   LITBUF,,AUTO             cn=0,n=140

      712    11374
      713    11375    3      DO I = STATS.LEXEME_COUNT TO POSS.COUNT - 1;

  11375  2 001442   200300 235100                    LDA     STATS,,AUTO
         2 001443   200311 755100                    STA     I,,AUTO
         2 001444   001614 710000 2                  TRA     s:11406+1

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:90   
      714    11376
      715    11377    3         I$ = POSS.NODES$(I);

  11377  2 001445   200233 470500                    LDP0    P$,,AUTO
         2 001446   200311 720100                    LXL0    I,,AUTO
         2 001447   000001 236110                    LDQ     1,X0,PR0
         2 001450   200312 756100                    STQ     I$,,AUTO

      716    11378
      717    11379    3         IF I$ -> P$LIT.ABREV = 0

  11379  2 001451   200312 471500                    LDP1    I$,,AUTO
         2 001452   100000 236100                    LDQ     0,,PR1
         2 001453   000002 316000 3                  CANQ    2
         2 001454   001461 601000 2                  TNZ     s:11383

      718    11380    3           THEN
      719    11381    3            COLS_USED = I$ -> P$LIT.COUNT;

  11381  2 001455   100001 236100                    LDQ     1,,PR1
         2 001456   000033 772000                    QRL     27
         2 001457   200310 756100                    STQ     COLS_USED,,AUTO
         2 001460   001465 710000 2                  TRA     s:11385

      720    11382    3           ELSE
      721    11383    3            COLS_USED = I$ -> P$LIT.COUNT + 1;

  11383  2 001461   100001 236100                    LDQ     1,,PR1
         2 001462   000033 772000                    QRL     27
         2 001463   000001 036007                    ADLQ    1,DL
         2 001464   200310 756100                    STQ     COLS_USED,,AUTO

      722    11384
      723    11385    3         IF LIT_POS > 2 AND LIT_POS + COLS_USED > WIDTH

  11385  2 001465   200357 235100                    LDA     LIT_POS,,AUTO
         2 001466   000002 115007                    CMPA    2,DL
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:91   
         2 001467   001506 604400 2                  TMOZ    s:11395
         2 001470   200357 036100                    ADLQ    LIT_POS,,AUTO
         2 001471   200304 116100                    CMPQ    WIDTH,,AUTO
         2 001472   001506 604400 2                  TMOZ    s:11395

      724    11386    4           THEN DO;

      725    11387
      726    11388    4            CALL WRITE_OUTPUT (LITBUF, WIDTH);

  11388  2 001473   200304 633500                    EPPR3   WIDTH,,AUTO
         2 001474   200362 453500                    STP3    @STR+1,,AUTO
         2 001475   200313 634500                    EPPR4   LITBUF,,AUTO
         2 001476   200361 454500                    STP4    LIT_POS+2,,AUTO
         2 001477   001633 701000 2                  TSX1    WRITE_OUTPUT
         2 001500   000000 011000                    NOP     0

      727    11389
      728    11390    4            LIT_POS = 2;

  11390  2 001501   000002 235007                    LDA     2,DL
         2 001502   200357 755100                    STA     LIT_POS,,AUTO

      729    11391    4            LITBUF = ' ';

  11391  2 001503   040100 100400                    MLR     fill='040'O
         2 001504   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001505   200313 000214                    ADSC9   LITBUF,,AUTO             cn=0,n=140

      730    11392
      731    11393    4            END;

      732    11394
      733    11395    3         IF I$ -> P$LIT.ABREV = 0

  11395  2 001506   200312 470500                    LDP0    I$,,AUTO
         2 001507   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:92   
         2 001510   000002 316000 3                  CANQ    2
         2 001511   001522 601000 2                  TNZ     s:11399

      734    11396    3           THEN
      735    11397    3            SUBSTR (LITBUF, LIT_POS, COLS_USED) = I$ -> P$LIT.TEXT;

  11397  2 001512   000001 236100                    LDQ     1,,PR0
         2 001513   000033 772000                    QRL     27
         2 001514   000000 620006                    EAX0    0,QL
         2 001515   200310 721100                    LXL1    COLS_USED,,AUTO
         2 001516   040145 100540                    MLR     fill='040'O
         2 001517   000001 200010                    ADSC9   1,,PR0                   cn=1,n=*X0
         2 001520   200313 000011                    ADSC9   LITBUF,A,AUTO            cn=0,n=*X1
         2 001521   001604 710000 2                  TRA     s:11403

      736    11398    3           ELSE
      737    11399    3            CALL INSERT (LITBUF, LIT_POS, COLS_USED,

  11399  2 001522   000001 236100                    LDQ     1,,PR0
         2 001523   000033 772000                    QRL     27
         2 001524   000000 236100                    LDQ     0,,PR0
         2 001525   000020 772000                    QRL     16
         2 001526   000377 376007                    ANQ     255,DL
         2 001527   000000 620006                    EAX0    0,QL
         2 001530   000001 236100                    LDQ     1,,PR0
         2 001531   000033 772000                    QRL     27
         2 001532   000000 621006                    EAX1    0,QL
         2 001533   000000 236100                    LDQ     0,,PR0
         2 001534   000020 772000                    QRL     16
         2 001535   000377 376007                    ANQ     255,DL
         2 001536   200366 756100                    STQ     FRAGPOS+2,,AUTO
         2 001537   000000 636011                    EAQ     0,X1
         2 001540   000022 772000                    QRL     18
         2 001541   200366 136100                    SBLQ    FRAGPOS+2,,AUTO
         2 001542   200367 756100                    STQ     FRAGPOS+3,,AUTO
         2 001543   000000 236100                    LDQ     0,,PR0
         2 001544   000020 772000                    QRL     16
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:93   
         2 001545   000377 376007                    ANQ     255,DL
         2 001546   200310 721100                    LXL1    COLS_USED,,AUTO
         2 001547   040145 100540                    MLR     fill='040'O
         2 001550   000001 200010                    ADSC9   1,,PR0                   cn=1,n=*X0
         2 001551   200313 000011                    ADSC9   LITBUF,A,AUTO            cn=0,n=*X1
         2 001552   000000 635010                    EAA     0,X0
         2 001553   000022 771000                    ARL     18
         2 001554   200370 755100                    STA     FRAGPOS+4,,AUTO
         2 001555   200371 756100                    STQ     FRAGPOS+5,,AUTO
         2 001556   200310 236100                    LDQ     COLS_USED,,AUTO
         2 001557   200370 136100                    SBLQ    FRAGPOS+4,,AUTO
         2 001560   001604 604400 2                  TMOZ    s:11403
         2 001561   200372 756100                    STQ     FRAGPOS+6,,AUTO
         2 001562   000000 636010                    EAQ     0,X0
         2 001563   000022 772000                    QRL     18
         2 001564   200357 036100                    ADLQ    LIT_POS,,AUTO
         2 001565   200372 720100                    LXL0    FRAGPOS+6,,AUTO
         2 001566   040146 100400                    MLR     fill='040'O
         2 001567   000021 000001 3                  ADSC9   17                       cn=0,n=1
         2 001570   200313 000010                    ADSC9   LITBUF,Q,AUTO            cn=0,n=*X0
         2 001571   200373 756100                    STQ     FRAGPOS+7,,AUTO
         2 001572   200372 236100                    LDQ     FRAGPOS+6,,AUTO
         2 001573   000001 116007                    CMPQ    1,DL
         2 001574   001604 604400 2                  TMOZ    s:11403
         2 001575   777777 622006                    EAX2    -1,QL
         2 001576   200367 723100                    LXL3    FRAGPOS+3,,AUTO
         2 001577   200371 235100                    LDA     FRAGPOS+5,,AUTO
         2 001600   200373 236100                    LDQ     FRAGPOS+7,,AUTO
         2 001601   040146 100545                    MLR     fill='040'O
         2 001602   000001 200013                    ADSC9   1,A,PR0                  cn=1,n=*X3
         2 001603   200313 200012                    ADSC9   LITBUF,Q,AUTO            cn=1,n=*X2

      738    11400    3             SUBSTR (I$ -> P$LIT.TEXT, 0, I$ -> P$LIT.ABREV), '/',
      739    11401    3             SUBSTR (I$ -> P$LIT.TEXT, I$ -> P$LIT.ABREV));
      740    11402
      741    11403    3         LIT_POS = LIT_POS + (1 + (COLS_USED+1)/COLUMNS_PER_LITERAL) *

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:94   
  11403  2 001604   200310 236100                    LDQ     COLS_USED,,AUTO
         2 001605   000001 036007                    ADLQ    1,DL
         2 001606   200307 506100                    DIV     COLUMNS_PER_LITERAL,,AUTO
         2 001607   000001 036007                    ADLQ    1,DL
         2 001610   200307 402100                    MPY     COLUMNS_PER_LITERAL,,AUTO
         2 001611   200357 036100                    ADLQ    LIT_POS,,AUTO
         2 001612   200357 756100                    STQ     LIT_POS,,AUTO

      742    11404    3          COLUMNS_PER_LITERAL;
      743    11405
      744    11406    3         END;

  11406  2 001613   200311 054100                    AOS     I,,AUTO
         2 001614   200233 470500                    LDP0    P$,,AUTO
         2 001615   200311 236100                    LDQ     I,,AUTO
         2 001616   000000 116100                    CMPQ    0,,PR0
         2 001617   001445 604000 2                  TMI     s:11377

      745    11407
      746    11408    2      IF LIT_POS ~= 2

  11408  2 001620   200357 235100                    LDA     LIT_POS,,AUTO
         2 001621   000002 115007                    CMPA    2,DL
         2 001622   001631 600000 2                  TZE     s:11412

      747    11409    2        THEN
      748    11410    2         CALL WRITE_OUTPUT (LITBUF, WIDTH);

  11410  2 001623   200304 631500                    EPPR1   WIDTH,,AUTO
         2 001624   200362 451500                    STP1    @STR+1,,AUTO
         2 001625   200313 633500                    EPPR3   LITBUF,,AUTO
         2 001626   200361 453500                    STP3    LIT_POS+2,,AUTO
         2 001627   001633 701000 2                  TSX1    WRITE_OUTPUT
         2 001630   000000 011000                    NOP     0

      749    11411
      750    11412    2      RETURN;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:95   

  11412  2 001631   200306 221300                    LDX1  ! WIDTH+2,,AUTO
         2 001632   000001 702211                    TSX2  ! 1,X1

      751    11413
      752    11414    2   END PRINT_LITERALS;
      753    11415
      754    11416        %EJECT;
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:96   
      755    11417    1   WRITE_OUTPUT: PROC (STR, STR_LEN);

  11417  2 001633   200360 741300       WRITE_OUTPUT STX1  ! LIT_POS+1,,AUTO

      756    11418
      757    11419    2   DCL STR CHAR (STR_LEN);
      758    11420    2   DCL STR_LEN SBIN;
      759    11421
      760    11422    2   DCL FRAGLEN UBIN;
      761    11423    2   DCL FRAGPOS UBIN;
      762    11424
      763    11425    2      FRAGPOS = 0;

  11425  2 001634   200364 450100                    STZ     FRAGPOS,,AUTO

      764    11426    2      PRINT = ' ';

  11426  2 001635   040100 100400                    MLR     fill='040'O
         2 001636   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001637   200235 000214                    ADSC9   PRINT,,AUTO              cn=0,n=140

      765    11427
      766    11428    3   PRINTIT: DO UNTIL (FRAGPOS >= STR_LEN);

  11428  2 001640                       PRINTIT      null
      767    11429
      768    11430    3         IF FRAGPOS = 0

  11430  2 001640   200364 235100                    LDA     FRAGPOS,,AUTO
         2 001641   001657 601000 2                  TNZ     s:11440

      769    11431    4           THEN DO;

      770    11432
      771    11433    4            SUBSTR (PRINT, 0, WIDTH) = STR;

  11433  2 001642   200362 470500                    LDP0    @STR_LEN,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:97   
         2 001643   000000 720100                    LXL0    0,,PR0
         2 001644   200361 471500                    LDP1    @STR,,AUTO
         2 001645   200304 721100                    LXL1    WIDTH,,AUTO
         2 001646   040140 100540                    MLR     fill='040'O
         2 001647   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 001650   200235 000011                    ADSC9   PRINT,,AUTO              cn=0,n=*X1

      772    11434    4            FRAGLEN = MINIMUM (WIDTH, STR_LEN);

  11434  2 001651   000000 236100                    LDQ     0,,PR0
         2 001652   200304 116100                    CMPQ    WIDTH,,AUTO
         2 001653   001655 604400 2                  TMOZ    s:11434+4
         2 001654   200304 236100                    LDQ     WIDTH,,AUTO
         2 001655   200363 756100                    STQ     FRAGLEN,,AUTO

      773    11435
      774    11436    4            END;

  11436  2 001656   001677 710000 2                  TRA     s:11445

      775    11437
      776    11438    4           ELSE DO;

      777    11439
      778    11440    4            FRAGLEN = MINIMUM (STR_LEN - FRAGPOS, WIDTH) - 4;

  11440  2 001657   200362 470500                    LDP0    @STR_LEN,,AUTO
         2 001660   000000 236100                    LDQ     0,,PR0
         2 001661   200364 136100                    SBLQ    FRAGPOS,,AUTO
         2 001662   200304 116100                    CMPQ    WIDTH,,AUTO
         2 001663   001665 604400 2                  TMOZ    s:11440+6
         2 001664   200304 236100                    LDQ     WIDTH,,AUTO
         2 001665   000004 136007                    SBLQ    4,DL
         2 001666   200363 756100                    STQ     FRAGLEN,,AUTO

      779    11441    4            CALL CONCAT (PRINT, '    ', SUBSTR (STR, FRAGPOS, FRAGLEN));

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:98   
  11441  2 001667   000000 720100                    LXL0    0,,PR0
         2 001670   000144 236000 1                  LDQ     XUERRMSG+3
         2 001671   200235 756100                    STQ     PRINT,,AUTO
         2 001672   200361 471500                    LDP1    @STR,,AUTO
         2 001673   200363 720100                    LXL0    FRAGLEN,,AUTO
         2 001674   040100 100545                    MLR     fill='040'O
         2 001675   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         2 001676   200236 000210                    ADSC9   PRINT+1,,AUTO            cn=0,n=136

      780    11442
      781    11443    4            END;

      782    11444
      783    11445    3         IF OUTDCB ~= DCBNUM(NIL)

  11445  2 001677   200232 235100                    LDA     OUTDCB,,AUTO
         2 001700   001706 600000 2                  TZE     s:11449

      784    11446    3           THEN
      785    11447    3            CALL M$WRITE (AUTO_WRITE) ALTRET (SPLIT);

  11447  2 001701   200076 630500                    EPPR0   AUTO_WRITE,,AUTO
         2 001702   440001 713400                    CLIMB   alt,write
         2 001703   401400 401760                    pmme    nvectors=4
         2 001704   001751 702000 2                  TSX2    SPLIT
         2 001705   001716 710000 2                  TRA     s:11451

      786    11448    3           ELSE
      787    11449    3            CALL PCB.OUTENT$(PRINT);

  11449  2 001706   200235 630500                    EPPR0   PRINT,,AUTO
         2 001707   200366 450500                    STP0    FRAGPOS+2,,AUTO
         2 001710   200366 630500                    EPPR0   FRAGPOS+2,,AUTO
         2 001711   200234 471500                    LDP1    PCB$,,AUTO
         2 001712   100015 220100                    LDX0    13,,PR1
         2 001713   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001714   000000 701010                    TSX1    0,X0
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:99   
         2 001715   000000 011000                    NOP     0

      788    11450
      789    11451    3         IF FRAGPOS + FRAGLEN < STR_LEN

  11451  2 001716   200364 236100                    LDQ     FRAGPOS,,AUTO
         2 001717   200363 036100                    ADLQ    FRAGLEN,,AUTO
         2 001720   200362 470500                    LDP0    @STR_LEN,,AUTO
         2 001721   001743 604000 2                  TMI     s:11457
         2 001722   000000 116100                    CMPQ    0,,PR0
         2 001723   001743 605000 2                  TPL     s:11457

      790    11452    3           THEN
      791    11453    3            IF SUBSTR(STR, FRAGPOS + FRAGLEN) = ' '

  11453  2 001724   000000 720100                    LXL0    0,,PR0
         2 001725   200364 236100                    LDQ     FRAGPOS,,AUTO
         2 001726   200363 036100                    ADLQ    FRAGLEN,,AUTO
         2 001727   200366 756100                    STQ     FRAGPOS+2,,AUTO
         2 001730   200367 756100                    STQ     FRAGPOS+3,,AUTO
         2 001731   000000 636010                    EAQ     0,X0
         2 001732   000022 732000                    QRS     18
         2 001733   200366 136100                    SBLQ    FRAGPOS+2,,AUTO
         2 001734   200361 471500                    LDP1    @STR,,AUTO
         2 001735   000000 620006                    EAX0    0,QL
         2 001736   200367 235100                    LDA     FRAGPOS+3,,AUTO
         2 001737   040000 106545                    CMPC    fill='040'O
         2 001740   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         2 001741   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001742   001751 600000 2                  TZE     SPLIT

      792    11454    3              THEN
      793    11455    3               EXIT PRINTIT;
      794    11456
      795    11457    3         FRAGPOS = FRAGPOS + FRAGLEN;

  11457  2 001743   200364 236100                    LDQ     FRAGPOS,,AUTO
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:100  
         2 001744   200363 036100                    ADLQ    FRAGLEN,,AUTO
         2 001745   200364 756100                    STQ     FRAGPOS,,AUTO

      796    11458
      797    11459    3         END PRINTIT;

  11459  2 001746   001751 604000 2                  TMI     SPLIT
         2 001747   000000 116100                    CMPQ    0,,PR0
         2 001750   001640 604000 2                  TMI     PRINTIT

      798    11460
      799    11461    2   SPLIT:
      800    11462
      801    11463    2      RETURN;

  11463  2 001751   200360 221300       SPLIT        LDX1  ! LIT_POS+1,,AUTO
         2 001752   000001 702211                    TSX2  ! 1,X1
      802    11464
      803    11465    2   END WRITE_OUTPUT;
      804    11466
      805    11467    1   END XUP$DMPNXT;

PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:101  
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XUP$DMPNXT.
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:102  

 **** Variables and constants ****

  ****  Section 001 RoData XUP$DMPNXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   140-0-0/w STRC        r     1 CONSTANT_CODE            106-0-0/d STRC(936)   r     1 CONSTANT_ERRMSG
     0-0-0/d STRC(2088)  r     1 CONSTANT_OPEN             72-0-0/d STRC(432)   r     1 CONST_WRITE
   141-0-0/c STRC(90)    r     1 XUERRMSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   317-0-0/w PTR         r     1 @CHARS                   313-0-0/w PTR         r     1 @F2
   315-0-0/w PTR         r     1 @FIELD                   316-0-0/w PTR         r     1 @FIELD_
     3-0-0/w PTR         r     1 @G$D                     361-0-0/w PTR         r     1 @STR
   362-0-0/w PTR         r     1 @STR_LEN                 144-0-0/w STRC        r     1 AUTO_CODE
   112-0-0/d STRC(936)   r     1 AUTO_ERRMSG                4-0-0/d STRC(2088)  r     1 AUTO_OPEN
   146-0-0/d STRC(144)   r     1 AUTO_RESULTS              76-0-0/d STRC(432)   r     1 AUTO_WRITE
    *0-0-0/c CHAR(2)     r     1 CHARS                    310-0-0/w SBIN        r     1 COLS_USED
   307-0-0/w SBIN        r     1 COLUMNS_PER_LITERAL      172-0-0/c CHAR(120)   r     1 ERRMSG_BUF
    *0-0-0/w UBIN        r     1 F2                        *0-0-0/c STRC(288)   r     1 FIELD
   152-0-0/c STRC(288)   r     1 FIELD1                   162-0-0/c STRC(288)   r     1 FIELD2
    *0-0-0/d VECT        r     1 FIELD_                   363-0-0/w UBIN        r     1 FRAGLEN
   364-0-0/w UBIN        r     1 FRAGPOS                   *0-0-0/d STRC(5175)  r     1 G$D
   307-0-0/w SBIN        r     1 I                        307-0-0/w SBIN        r     1 I
   307-0-0/w SBIN        r     1 I                        307-0-0/w SBIN        r     1 I
   311-0-0/w SBIN        r     1 I                        310-0-0/w PTR         r     1 I$
   310-0-0/w PTR         r     1 I$                       310-0-0/w PTR         r     1 I$
   312-0-0/w PTR         r     1 I$                       314-0-0/w UBIN        r     1 IF2
   311-0-0/w SBIN        r     1 J                        312-0-0/w PTR         r     1 J$
   307-0-0/w SBIN        r     1 KEYWORD                  230-0-0/w PTR         r     1 KEYWORDS$
   307-0-0/w SBIN        r     1 KEYWORD_OFFSET           313-0-0/c CHAR(140)   r     1 LITBUF
   356-0-0/w SBIN        r     1 LITERALS_PER_LINE        357-0-0/w SBIN        r     1 LIT_POS
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:103  
   313-0-0/w UBIN        r     1 LOW                      314-0-0/w PTR         r     1 LOW$
   231-0-0/w PTR         r     1 NODE$                    232-0-0/w UBIN        r     1 OUTDCB
   233-0-0/w PTR         r     1 P$                       234-0-0/w PTR         r     1 PCB$
   235-0-0/c CHAR(140)   r     1 PRINT                    300-0-0/w STRC(144)   r     1 STATS
    *0-0-0/c ACHR        r     1 STR                       *0-0-0/w SBIN        r     1 STR_LEN
   304-0-0/w SBIN        r     1 WIDTH                    310-0-0/w UBIN        r     1 WORDS_NEEDED

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 OVER_FLOW

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/b BIT         r     1 LEGAL_ARRAY(0:0)
     0-0-0/w STRC(54)    r     1 P$DSTR                     0-0-0/w STRC(108)   r     1 P$KEYWORDS
     0-0-0/w ASTR(45)    r     1 P$LIT                      0-0-0/w STRC(72)    r     1 P$NODE
     0-0-0/w ASTR(54)    r     1 P$SYM                      0-0-0/w STRC(504)   r     1 PCB
     0-0-0/w STRC(72)    r     1 POSS


   Procedure XUP$DMPNXT requires 1003 words for executable code.
   Procedure XUP$DMPNXT requires 256 words of local(AUTO) storage.

    No errors detected in file XUP$DMPNXT.:E05TSI    .
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:104  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:105  
          MINI XREF LISTING

ALLOCATE_KEYWORD_AREA
     10936**PROC    10702--CALL
AUTO_CODE
     10475**DCL     11009--ASSIGN  11019<<ASSIGN
AUTO_CODE.ERR#
     10505**DCL     11092<<ASSIGN  11161<<ASSIGN  11174<<ASSIGN  11189<<ASSIGN  11202<<ASSIGN  11214<<ASSIGN
AUTO_ERRMSG
     10402**DCL     11006<<ASSIGN  11236<>CALL
AUTO_ERRMSG.BUF_
     10402**DCL     11008<<ASSIGN
AUTO_ERRMSG.CODE_
     10402**DCL     11009<<ASSIGN
AUTO_ERRMSG.FIELD1_
     10404**DCL     11138<<ASSIGN  11143<<ASSIGN  11151<<ASSIGN  11167<<ASSIGN  11195<<ASSIGN  11222<<ASSIGN
     11228<<ASSIGN  11251<>CALL
AUTO_ERRMSG.FIELD2_
     10405**DCL     11152<<ASSIGN  11168<<ASSIGN  11196<<ASSIGN  11252<>CALL    11327<<ASSIGN  11331<<ASSIGN
AUTO_ERRMSG.FILEACCT_
     10403**DCL     11014<<ASSIGN
AUTO_ERRMSG.FILENAME_
     10403**DCL     11015<<ASSIGN
AUTO_ERRMSG.RESULTS_
     10405**DCL     11010<<ASSIGN
AUTO_ERRMSG.V
     10406**DCL     11007--ASSIGN
AUTO_ERRMSG.V_
     10402**DCL     11007<<ASSIGN
AUTO_OPEN
     10258**DCL     11040<<ASSIGN  11044<>CALL
AUTO_OPEN.ACSVEH_
     10260**DCL     10261--REDEF
AUTO_OPEN.ALTKEYS_
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:106  
     10266**DCL     10267--REDEF   10267--REDEF
AUTO_OPEN.HDR_
     10265**DCL     10266--REDEF
AUTO_OPEN.TAB_
     10264**DCL     10265--REDEF
AUTO_OPEN.UHL_
     10258**DCL     10259--REDEF   10259--REDEF
AUTO_OPEN.V
     10267**DCL     11041--ASSIGN
AUTO_OPEN.V.DCB#
     10267**DCL     11042<<ASSIGN
AUTO_OPEN.V.FSN#
     10298**DCL     10298--REDEF   10298--REDEF
AUTO_OPEN.V_
     10258**DCL     11041<<ASSIGN
AUTO_OPEN.WSN_
     10264**DCL     10264--REDEF
AUTO_RESULTS
     10519**DCL     11010--ASSIGN
AUTO_WRITE
     10350**DCL     11051<<ASSIGN  11447<>CALL
AUTO_WRITE.BUF_
     10350**DCL     11057<<ASSIGN
AUTO_WRITE.STATION_
     10352**DCL     10352--REDEF
AUTO_WRITE.V
     10353**DCL     11052--ASSIGN
AUTO_WRITE.V.DCB#
     10353**DCL     11053<<ASSIGN
AUTO_WRITE.V.DVBYTE.VFC#
     10359**DCL     10359--REDEF
AUTO_WRITE.V_
     10350**DCL     11052<<ASSIGN
CHARS IN PROCEDURE SETUP_FIELD
     11287**DCL     11256--PROC    11289>>IF      11297>>IF      11301>>ASSIGN  11308>>ASSIGN
COLS_USED IN PROCEDURE PRINT_LITERALS
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:107  
     11355**DCL     11381<<ASSIGN  11383<<ASSIGN  11385>>IF      11397>>ASSIGN  11399>>CALLBLT 11403>>ASSIGN
COLUMNS_PER_LITERAL IN PROCEDURE PRINT_LITERALS
     11354**DCL     11370<<ASSIGN  11403>>ASSIGN  11403>>ASSIGN
CONSTANT_CODE
     10430**DCL     11019>>ASSIGN
CONSTANT_ERRMSG
     10375**DCL     11006>>ASSIGN
CONSTANT_ERRMSG.V
     10379**DCL     10375--DCLINIT
CONSTANT_OPEN
     10149**DCL     11040>>ASSIGN
CONSTANT_OPEN.ACSVEH_
     10151**DCL     10152--REDEF
CONSTANT_OPEN.ALTKEYS_
     10157**DCL     10158--REDEF   10158--REDEF
CONSTANT_OPEN.HDR_
     10156**DCL     10157--REDEF
CONSTANT_OPEN.TAB_
     10155**DCL     10156--REDEF
CONSTANT_OPEN.UHL_
     10149**DCL     10150--REDEF   10150--REDEF
CONSTANT_OPEN.V
     10158**DCL     10149--DCLINIT
CONSTANT_OPEN.V.FSN#
     10189**DCL     10189--REDEF   10189--REDEF
CONSTANT_OPEN.WSN_
     10155**DCL     10155--REDEF
CONST_WRITE
     10319**DCL     11051>>ASSIGN
CONST_WRITE.STATION_
     10321**DCL     10321--REDEF
CONST_WRITE.V
     10322**DCL     10319--DCLINIT
CONST_WRITE.V.DVBYTE.VFC#
     10328**DCL     10328--REDEF
CRAM_FIELD2
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:108  
     11320**PROC    11134--CALL    11232--CALL
ERRMSG_BUF
     10669**DCL     11008--ASSIGN  11240<>CALL    11240--CALL
F$DCB.ACCT#
     10628**DCL     11014--ASSIGN
F$DCB.ACTPOS
     10644**DCL     10644--REDEF
F$DCB.ARS#
     10618**DCL     10618--REDEF
F$DCB.ATTR
     10637**DCL     10638--REDEF
F$DCB.BORROW
     10652**DCL     10652--REDEF   10652--REDEF   10652--REDEF
F$DCB.DCBNAME.L
     10666**DCL     10666--IMP-SIZ
F$DCB.EOMCHAR#
     10622**DCL     10622--REDEF
F$DCB.FCD#
     10631**DCL     11037>>IF
F$DCB.FLDID
     10647**DCL     10647--REDEF
F$DCB.FORM$
     10641**DCL     10641--REDEF
F$DCB.FSECT
     10657**DCL     10657--REDEF
F$DCB.FSN#
     10634**DCL     10634--REDEF   10634--REDEF   10635--REDEF
F$DCB.HEADER$
     10640**DCL     10640--REDEF
F$DCB.IXTNSIZE#
     10638**DCL     10638--REDEF
F$DCB.LASTSTA$
     10627**DCL     10627--REDEF
F$DCB.LVL
     10653**DCL     10653--REDEF
F$DCB.NAME#.C
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:109  
     10628**DCL     10628--REDEF
F$DCB.NOEOF
     10650**DCL     10650--REDEF
F$DCB.NRECS#
     10639**DCL     10639--REDEF
F$DCB.NRECX
     10658**DCL     10658--REDEF
F$DCB.OHDR
     10650**DCL     10650--REDEF
F$DCB.ORG#
     10633**DCL     10633--REDEF
F$DCB.PRECNO
     10656**DCL     10656--REDEF
F$DCB.RCSZ
     10662**DCL     10662--REDEF
F$DCB.RES#
     10629**DCL     10629--REDEF
F$DCB.SETX
     10641**DCL     10641--REDEF
F$DCB.TAB$
     10641**DCL     10641--REDEF
F$DCB.TDA
     10655**DCL     10656--REDEF
F$DCB.WIDTH#
     10625**DCL     11048>>ASSIGN
F$DCB.WSN#
     10629**DCL     10629--REDEF
F2 IN PROCEDURE CRAM_FIELD2
     11322**DCL     11320--PROC    11325>>IF      11333>>ASSIGN  11343>>CALLBLT
FIELD IN PROCEDURE SETUP_FIELD
     11283**DCL     11256--PROC    11295--ASSIGN
FIELD.L# IN PROCEDURE SETUP_FIELD
     11283**DCL     11300<<ASSIGN  11307<<ASSIGN
FIELD.NAME# IN PROCEDURE SETUP_FIELD
     11283**DCL     11301<<ASSIGN  11308<<ASSIGN
FIELD1
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:110  
     10555**DCL     11143--ASSIGN  11228--ASSIGN  11251<>CALL
FIELD1.L#
     10555**DCL     11141<<ASSIGN  11226<<ASSIGN
FIELD1.NAME#
     10555**DCL     11142<<ASSIGN  11227<<ASSIGN
FIELD2
     10582**DCL     11252<>CALL    11331--ASSIGN
FIELD2.L#
     10582**DCL     11334<<ASSIGN  11338<<ASSIGN  11338>>ASSIGN  11343>>CALLBLT
FIELD2.NAME#
     10582**DCL     11343<<CALLBLT
FIELD_ IN PROCEDURE SETUP_FIELD
     11286**DCL     11256--PROC    11291<<ASSIGN  11295<<ASSIGN
FRAGLEN IN PROCEDURE WRITE_OUTPUT
     11422**DCL     11434<<ASSIGN  11440<<ASSIGN  11441>>CALLBLT 11451>>IF      11453>>IF      11457>>ASSIGN
FRAGPOS IN PROCEDURE WRITE_OUTPUT
     11423**DCL     11425<<ASSIGN  11428>>DOUNTIL 11430>>IF      11440>>ASSIGN  11441>>CALLBLT 11451>>IF
     11453>>IF      11457<<ASSIGN  11457>>ASSIGN
G$D
      9508**DCL         7--PROC    10721--ENTRY   10736--ASSIGN  10961<>CALL
G$D.ERROR
      9512**DCL     10979>>UNWIND
G$D.LDCMNT.TX
      9578**DCL      9579--REDEF
G$D.PCB$
      9509**DCL     10690>>ASSIGN
G$D.SCRATCH
      9545**DCL      9548--REDEF
G$D.TRCMNT.TX
      9586**DCL      9587--REDEF
GATHER_STATISTICS
     10886**PROC    10697--CALL    10751--CALL
I IN PROCEDURE GATHER_STATISTICS
     10893**DCL     10898<<DOINDEX 10900>>ASSIGN
I IN PROCEDURE PRINT_LEXEMES
     11070**DCL     11073<<DOINDEX 11075>>ASSIGN
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:111  
I IN PROCEDURE PRINT_LITERALS
     11356**DCL     11366<<ASSIGN  11368>>ASSIGN  11375<<DOINDEX 11377>>ASSIGN
I IN PROCEDURE REGENERATE_NODES
     10769**DCL     10775<<DOINDEX 10777>>IF      10783>>ASSIGN
I IN PROCEDURE SORT_NODES
     10805**DCL     10812<<DOINDEX 10814>>ASSIGN  10815>>ASSIGN  10817>>DOINDEX 10869>>IF      10873>>ASSIGN
     10875>>ASSIGN
I$ IN PROCEDURE GATHER_STATISTICS
     10894**DCL     10900<<ASSIGN  10902>>DOCASE  10907>>ASSIGN  10909>>IF      10911>>ASSIGN  10914>>ASSIGN
I$ IN PROCEDURE PRINT_LEXEMES
     11071**DCL     11075<<ASSIGN  11077>>DOCASE  11092>>ASSIGN  11131>>IF      11134>>CALL    11136>>IF
     11141>>ASSIGN  11142>>ASSIGN  11142>>ASSIGN  11220>>IF      11227>>ASSIGN  11232>>CALL
I$ IN PROCEDURE PRINT_LITERALS
     11357**DCL     11377<<ASSIGN  11379>>IF      11381>>ASSIGN  11383>>ASSIGN  11395>>IF      11397>>ASSIGN
     11397>>ASSIGN  11399>>CALLBLT 11399>>CALLBLT 11399>>CALLBLT 11399>>CALLBLT 11399>>CALLBLT 11399>>CALLBLT
I$ IN PROCEDURE SORT_NODES
     10806**DCL     10814<<ASSIGN  10874>>ASSIGN  10875<<ASSIGN
IF2 IN PROCEDURE CRAM_FIELD2
     11323**DCL     11333<<ASSIGN  11336>>DOWHILE 11339<<ASSIGN  11339>>ASSIGN
IGNORE_ALTRET IN PROCEDURE PRINT_LEXEMES
     11240**LABEL   11236--CALLALT
INSUFFICIENT_SPACE IN PROCEDURE ALLOCATE_KEYWORD_AREA
     10977**LABEL   10961--CALLALT
J IN PROCEDURE SORT_NODES
     10807**DCL     10817<<DOINDEX 10819>>ASSIGN  10822>>ASSIGN  10832>>ASSIGN  10838>>ASSIGN  10852>>ASSIGN
     10861>>ASSIGN
J$ IN PROCEDURE SORT_NODES
     10808**DCL     10819<<ASSIGN  10820>>IF      10824>>IF      10830>>IF      10830>>IF      10836>>IF
     10840>>IF      10848>>IF      10848>>IF      10848>>IF      10856>>IF      10856>>IF      10856>>IF
     10856>>IF      10856>>IF
KEYWORD IN PROCEDURE MOVE_KEYWORD_POINTERS
     10991**DCL     10993<<DOINDEX 10995>>ASSIGN  10995>>ASSIGN
KEYWORDS$
     10670**DCL      9797--IMP-PTR 10772<<ASSIGN  10775>>DOINDEX 10777>>IF      10783>>ASSIGN  10967<<ASSIGN
     10968>>ASSIGN  10970>>ASSIGN  10971>>ASSIGN  10971>>ASSIGN  10971>>ASSIGN  10995>>ASSIGN
KEYWORD_OFFSET IN PROCEDURE ALLOCATE_KEYWORD_AREA
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:112  
     10944**DCL     10947<<ASSIGN  10955<<ASSIGN  10957>>DOUNTIL 10963<<ASSIGN  10967>>ASSIGN
LEGAL_ARRAY IN PROCEDURE REGENERATE_NODES
     10770**DCL     10777>>IF
LITBUF IN PROCEDURE PRINT_LITERALS
     11358**DCL     11373<<ASSIGN  11388<>CALL    11391<<ASSIGN  11397<<ASSIGN  11399<<CALLBLT 11410<>CALL
LITERALS_PER_LINE IN PROCEDURE PRINT_LITERALS
     11359**DCL     11368<<ASSIGN  11370>>ASSIGN
LIT_POS IN PROCEDURE PRINT_LITERALS
     11360**DCL     11372<<ASSIGN  11385>>IF      11385>>IF      11390<<ASSIGN  11397>>ASSIGN  11399>>CALLBLT
     11403<<ASSIGN  11403>>ASSIGN  11408>>IF
LOW IN PROCEDURE SORT_NODES
     10809**DCL     10815<<ASSIGN  10818>>ASSIGN  10822<<ASSIGN  10832<<ASSIGN  10838<<ASSIGN  10852<<ASSIGN
     10861<<ASSIGN  10869>>IF      10873>>ASSIGN  10874>>ASSIGN
LOW$ IN PROCEDURE SORT_NODES
     10810**DCL     10818<<ASSIGN  10820>>IF      10824>>IF      10826>>DOCASE  10830>>IF      10830>>IF
     10836>>IF      10840>>IF      10842>>DOCASE  10848>>IF      10848>>IF      10848>>IF      10856>>IF
     10856>>IF      10856>>IF      10856>>IF      10856>>IF
M$ERRMSG
      5561**DCL-ENT 11236--CALL
M$OPEN
      5498**DCL-ENT 11044--CALL
M$WRITE
      5499**DCL-ENT 11447--CALL
MOVE_KEYWORD_POINTERS
     10983**PROC    10703--CALL
NODE$
     10671**DCL      9832--IMP-PTR  9918--IMP-PTR  9971--IMP-PTR 10047--IMP-PTR
OUTDCB
     10672**DCL     11024<<ASSIGN  11033<<ASSIGN  11035<<ASSIGN  11037--IF      11042>>ASSIGN  11048--ASSIGN
     11053>>ASSIGN  11445>>IF
OVER_FLOW
     10673**DCL     10977>>ASSIGN
P$
     10674**DCL     10677--IMP-PTR 10692<<ASSIGN  10709>>IF      10737<<ASSIGN  10773>>ASSIGN  10783>>ASSIGN
     10783>>ASSIGN  10784>>ASSIGN  10784>>ASSIGN  10812>>DOINDEX 10814>>ASSIGN  10817>>DOINDEX 10818>>ASSIGN
     10819>>ASSIGN  10873>>ASSIGN  10873>>ASSIGN  10874>>ASSIGN  10875>>ASSIGN  10898>>DOINDEX 10900>>ASSIGN
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:113  
     10925>>IF      10925>>IF      10925>>IF      10959>>IF      10963>>ASSIGN  10995>>ASSIGN  11075>>ASSIGN
     11375>>DOINDEX 11377>>ASSIGN
P$DSTR.DLIM
     10071**DCL     10848>>IF      10848>>IF      10848>>IF      10848>>IF      11220>>IF      11227>>ASSIGN
P$DSTR.MAXL
     10070**DCL     10848>>IF      10848>>IF      11232>>CALL
P$KEYWORDS
      9797**DCL     10949--ASSIGN
P$KEYWORDS.KEYWORDS$
      9808**DCL     10783>>ASSIGN  10949--ASSIGN  10971--ASSIGN  10995<<ASSIGN
P$KEYWORDS.KEYWORD_COUNT
      9802**DCL     10775>>DOINDEX 10970<<ASSIGN  10971>>ASSIGN
P$KEYWORDS.LEGAL$
      9805**DCL     10777>>IF      10971<<ASSIGN
P$LIT.ABREV
      9942**DCL     10907>>ASSIGN  10909>>IF      11379>>IF      11395>>IF      11399>>CALLBLT 11399>>CALLBLT
P$LIT.COUNT
      9949**DCL      9952--IMP-SIZ 10830>>IF      10830>>IF      10911>>ASSIGN  10914>>ASSIGN  10995--ASSIGN
     11381>>ASSIGN  11383>>ASSIGN  11397>>ASSIGN  11399>>CALLBLT 11399>>CALLBLT
P$LIT.TEXT
      9952**DCL     10830>>IF      10830>>IF      11397>>ASSIGN  11399>>CALLBLT 11399>>CALLBLT
P$NODE.TYPE
      9836**DCL     10820>>IF      10820>>IF      10824>>IF      10824>>IF      10826>>DOCASE  10902>>DOCASE
     10925>>IF
P$SYM.COUNT
     10021**DCL     10025--IMP-SIZ 10856>>IF      10856>>IF      11136>>IF      11141>>ASSIGN  11142>>ASSIGN
P$SYM.LEXTYPE
     10002**DCL     10836>>IF      10836>>IF      10840>>IF      10840>>IF      10842>>DOCASE  10925>>IF
     11077>>DOCASE  11092>>ASSIGN
P$SYM.MAXL
     10015**DCL     10856>>IF      10856>>IF      11134>>CALL
P$SYM.TEXT
     10025**DCL     10856>>IF      10856>>IF      11142>>ASSIGN
P$SYM.XTRA
      9993**DCL     10856>>IF      10856>>IF      10856>>IF      10856>>IF      11131>>IF
PCB.BLANKONLY
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:114  
      9701**DCL     10694<<ASSIGN  10929<<ASSIGN
PCB.COMMENT.LEAD
      9732**DCL     11158>>IF      11186>>IF      11251<>CALL
PCB.COMMENT.TRAIL
      9740**DCL     11158>>IF      11252<>CALL
PCB.ERROR
      9718**DCL     10977<<ASSIGN
PCB.KEYWORDS
      9686**DCL     10699>>IF
PCB.OUT$
      9627**DCL     10772>>ASSIGN  10968<<ASSIGN  10978<<ASSIGN
PCB.OUTDCB#
      9756**DCL     11031>>IF      11035>>ASSIGN
PCB.OUTENT$
      9787**DCL     11021>>IF      11449>>CALL
PCB.WKSZ
      9644**DCL     10959>>IF
PCB.WK_USED
      9747**DCL     10692>>ASSIGN  10737>>ASSIGN  10953>>IF      10959>>IF      10963>>ASSIGN
PCB.WORK$
      9623**DCL     10692>>ASSIGN  10737>>ASSIGN  10967>>ASSIGN
PCB$
     10675**DCL      9614--IMP-PTR 10690<<ASSIGN  10692>>ASSIGN  10692>>ASSIGN  10694>>ASSIGN  10699>>IF
     10736<<ASSIGN  10737>>ASSIGN  10737>>ASSIGN  10772>>ASSIGN  10929>>ASSIGN  10953>>IF      10959>>IF
     10959>>IF      10963>>ASSIGN  10967>>ASSIGN  10968>>ASSIGN  10977>>ASSIGN  10978>>ASSIGN  11021>>IF
     11031>>IF      11035>>ASSIGN  11158>>IF      11158>>IF      11186>>IF      11251>>CALL    11252>>CALL
     11449>>CALL
POSS
     10677**DCL     10959--IF      10963--ASSIGN
POSS.COUNT
     10678**DCL     10709>>IF      10773<<ASSIGN  10783>>ASSIGN  10784<<ASSIGN  10784>>ASSIGN  10812>>DOINDEX
     10817>>DOINDEX 10898>>DOINDEX 10925>>IF      10959>>IF      10963>>ASSIGN  11375>>DOINDEX
POSS.NODES$
     10679**DCL     10783<<ASSIGN  10814>>ASSIGN  10818>>ASSIGN  10819>>ASSIGN  10873<<ASSIGN  10873>>ASSIGN
     10874<<ASSIGN  10875>>ASSIGN  10900>>ASSIGN  10925>>IF      10925>>IF      10995>>ASSIGN  11075>>ASSIGN
     11377>>ASSIGN
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:115  
PRINT
     10681**DCL     11048--ASSIGN  11057--ASSIGN  11426<<ASSIGN  11433<<ASSIGN  11441<<CALLBLT 11449<>CALL
PRINTIT IN PROCEDURE WRITE_OUTPUT
     11428**LABEL   11455--EXIT
PRINT_LEXEMES
     11064**PROC    10714--CALL
PRINT_LITERALS
     11352**PROC    10715--CALL    10753--CALL
REGENERATE_NODES
     10757**PROC    10749--CALL
SETUP_COMMENT_FIELDS
     11249**PROC    11180--CALL    11208--CALL
SETUP_FIELD IN PROCEDURE SETUP_COMMENT_FIELDS
     11256**PROC    11251--CALL    11252--CALL
SETUP_FOR_PRINT
     11004**PROC    10713--CALL    10752--CALL
SORT_NODES
     10792**PROC    10696--CALL    10750--CALL
SPLIT IN PROCEDURE WRITE_OUTPUT
     11463**LABEL   11447--CALLALT
STATS
     10682**DCL     10896<<ASSIGN
STATS.LEXEME_COUNT
     10683**DCL     10919<<ASSIGN  10919>>ASSIGN  10995>>ASSIGN  11073>>DOINDEX 11375>>DOINDEX
STATS.LITERAL_COUNT
     10684**DCL     10906<<ASSIGN  10906>>ASSIGN  10949>>ASSIGN  10949>>ASSIGN  10970>>ASSIGN  10993>>DOINDEX
     11362>>IF
STATS.LONGEST_ABREV
     10686**DCL     10907<<ASSIGN  10907>>ASSIGN
STATS.LONGEST_LITERAL
     10685**DCL     10911<<ASSIGN  10911>>ASSIGN  10914<<ASSIGN  10914>>ASSIGN  11366>>ASSIGN
STR IN PROCEDURE WRITE_OUTPUT
     11419**DCL     11417--PROC    11433>>ASSIGN  11441>>CALLBLT 11453>>IF
STR_LEN IN PROCEDURE WRITE_OUTPUT
     11420**DCL     11417--PROC    11419--IMP-SIZ 11428>>DOUNTIL 11433>>ASSIGN  11434>>ASSIGN  11440>>ASSIGN
     11441>>CALLBLT 11451>>IF      11453>>IF
PL6.E3A0      #001=XUP$DMPNXT File=XUP$DMPNXT.:E05TSI                            WED 07/30/97 09:36 Page:116  
WIDTH
     10687**DCL     11025<<ASSIGN  11048<<ASSIGN  11057>>ASSIGN  11368>>ASSIGN  11370>>ASSIGN  11385>>IF
     11388<>CALL    11410<>CALL    11433>>ASSIGN  11434>>ASSIGN  11440>>ASSIGN
WORDS_NEEDED IN PROCEDURE ALLOCATE_KEYWORD_AREA
     10945**DCL     10949<<ASSIGN  10953>>IF      10959>>IF
WRITE_OUTPUT
     11417**PROC    11240--CALL    11388--CALL    11410--CALL
XUERRMSG
     10609**DCL     11015--ASSIGN
XUP$EXPAND_WORKAREA
     10688**DCL-ENT 10961--CALL
