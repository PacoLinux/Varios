VERSION E05

PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:1    
        1        1        /*M* TOL$CLEAR_DATA     TOLTS LOADER CLEAR DATA program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             PRB=Y,CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        TOL$CLEAR_DATA:
       12       12           PROC
       13       13                   (DATA$,
       14       14                   LENGTH,
       15       15                   DCW,
       16       16                   STATUS,
       17       17                   START_LOAD$,
       18       18                   DATA_SIZE,
       19       19                   CALL_SEQUENCE) ALTRET;
       20       20        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:2    
       21       21        /*
       22       22        .
       23       23        .PARAMETERS
       24       24        .
       25       25        .
       26       26        */
       27       27    1      DCL 1 CALL_SEQUENCE ALIGNED,
       28       28    1            2 FDCWP UBIN (18) UNAL,
       29       29    1            2 STATUSP UBIN (18) UNAL,
       30       30    1            2 DECK# UBIN (18) UNAL,
       31       31    1            2 NEXT_ENTRY UBIN (18) UNAL,
       32       32    1            2 CATALOG_CKSUM ALIGNED,
       33       33    1              3 UPPER UBIN (18) UNAL,
       34       34    1              3 LOWER UBIN (18) UNAL,
       35       35    1            2 CATALOG_CHECKSUM REDEF CATALOG_CKSUM UBIN (36) ALIGNED,
       36       36    1            2 DECK_OFFSET REDEF CATALOG_CKSUM UBIN (36) ALIGNED,
       37       37    1            2 * UBIN (18) UNAL,
       38       38    1            2 ENTRY_COUNT UBIN (18) UNAL,
       39       39    1            2 CARD_COUNT REDEF ENTRY_COUNT UBIN (18) UNAL,
       40       40    1            2 CHECKSUM UBIN (36) ALIGNED,
       41       41    1            2 RELOCATION UBIN (36) ALIGNED,
       42       42    1            2 NO_MORE SBIN (36) ALIGNED;
       43       43    1      DCL DATA$ PTR ALIGNED;
       44       44    1      DCL 1 DATAP REDEF DATA$ ALIGNED,
       45       45    1            2 ADDRESS UBIN (18) UNAL,
       46       46    1            2 * BIT (18) UNAL;
       47       47    1      DCL DATA_SIZE UBIN (36) ALIGNED;
       48       48    1      DCL 1 DCW ALIGNED,
       49       49    1            2 ADDRESS UBIN (18) UNAL,
       50       50    1            2 TYPE UBIN (6) UNAL,
       51       51    1            2 SIZE UBIN (12) UNAL;
       52       52    1      DCL LENGTH UBIN (36) ALIGNED;
       53       53    1      DCL START_LOAD$ PTR ALIGNED;
       54       54    1      DCL 1 STATUS ALIGNED,
       55       55    1            2 HARDWARE_STATUS BIT (36) ALIGNED,
       56       56    1            2 LAST_DCW_POINTER UBIN (18) UNAL,
       57       57    1            2 RESIDUE UBIN (18) UNAL;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:3    
       58       58        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:4    
       59       59        /*
       60       60        .
       61       61        .EXTERNAL VARIABLES
       62       62        .
       63       63        .
       64       64        */
       65       65    1      DCL TOL$BUFFER$ SYMREF PTR ALIGNED;
       66       66    1      DCL BUFFER$ REDEF TOL$BUFFER$ PTR ALIGNED;
       67       67
       68       68        /*
       69       69        .
       70       70        .LOCAL VARIABLES
       71       71        .
       72       72        .
       73       73        */
       74       74    1      DCL DATA (0:8191) BASED (DATA$) UBIN (36) ALIGNED;
       75       75    1      DCL ENTRY_ (0:8191) BASED (ENTRY$) UBIN (36) ALIGNED;
       76       76    1      DCL FULL_SIZE UBIN (36) ALIGNED;
       77       77    1      DCL I UBIN (36) ALIGNED;
       78       78    1      DCL LOAD$ PTR ALIGNED;
       79       79    1      DCL MAX_CLEAR STATIC UBIN (36) ALIGNED INIT (26624);
       80       80    1      DCL MOVE UBIN (36) ALIGNED;
       81       81    1      DCL SEGMENT UBIN (36) ALIGNED;
       82       82        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:5    
       83       83        /*
       84       84        .
       85       85        .LOCAL STRUCTURES
       86       86        .
       87       87        .
       88       88        */
       89       89    1      DCL 1 BUFFER (0:1023) BASED (BUFFER$) ALIGNED,
       90       90    1            2 * CHAR (52) UNAL,
       91       91    1            2 * CHAR (52) UNAL;
       92       92    1      DCL 1 DATA_SPLIT (0:8191) BASED (DATA$) ALIGNED,
       93       93    1            2 UPPER UBIN (18) UNAL,
       94       94    1            2 LOWER UBIN (18) UNAL;
       95       95    1      DCL 1 ENTRY_SPLIT (0:8191) BASED (ENTRY$) ALIGNED,
       96       96    1            2 UPPER UBIN (18) UNAL,
       97       97    1            2 LOWER UBIN (18) UNAL;
       98       98    1      DCL ENTRY$ PTR ALIGNED;
       99       99    1      DCL 1 ENTRYP REDEF ENTRY$ ALIGNED,
      100      100    1            2 ADDRESS UBIN (18) UNAL,
      101      101    1            2 * BIT (18) UNAL;
      102      102    1      DCL 1 LOAD BASED (LOAD$) ALIGNED,
      103      103    1            2 TYPE UBIN (3) UNAL,
      104      104    1            2 * UBIN (9) UNAL,
      105      105    1            2 SIZE UBIN (6) UNAL,
      106      106    1            2 ADDRESS UBIN (18) UNAL,
      107      107    1            2 DATA (0:27) UBIN (36) ALIGNED;
      108      108        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:6    
      109      109        /*
      110      110        .
      111      111        .EXTERNAL ENTRIES
      112      112        .
      113      113        .
      114      114        */
      115      115    1      DCL TOL$BAD_CARD ENTRY (1);
      116      116    1      DCL TOL$FREE_BUFFER ENTRY;
      117      117    1      DCL TOL$GET_BUFFER ENTRY;
      118      118    1      DCL TOL$GET_NEXT_DCW ENTRY (3);
      119      119
      120      120        /*
      121      121        .
      122      122        .ERROR MESSAGES FOR TOX$ERROR OR TOX$ALTRET
      123      123        .
      124      124        .
      125      125        */
      126      126    1      DCL 1 ER#60 STATIC UNAL,
      127      127    1            2 * CHAR (2) UNAL INIT ('*'),
      128      128    1            2 * CHAR (8) UNAL INIT ('ILLEGAL'),
      129      129    1            2 * CHAR (32) UNAL INIT ('LOADER WORD TYPE/SIZE %LTT/%LTZ'),
      130      130    1            2 * CHAR (26) UNAL INIT ('FOR CALL TO TOL$SAVE_DATA');
      131      131        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:7    
      132      132        /*
      133      133        .
      134      134        .TOL$CLEAR_DATA CODING
      135      135        .
      136      136        .
      137      137        */
      138      138    1      CALL TOL$GET_BUFFER;
      139      139    1      BUFFER = '0'B;
      140      140    1      FULL_SIZE = LENGTH;
      141      141    2      DO WHILE (FULL_SIZE > 1024*26);
      142      142    2         CALL TOL$SAVE_DATA
      143      143    2                 (ADDR (BUFFER),
      144      144    2                 MAX_CLEAR,
      145      145    2                 DCW,
      146      146    2                 STATUS,
      147      147    2                 START_LOAD$,
      148      148    2                 DATA_SIZE,
      149      149    2                 CALL_SEQUENCE) ALTRET (BAD_CLEAR);
      150      150    2         FULL_SIZE = FULL_SIZE - 1024 * 26;
      151      151    2      END;
      152      152    1      IF (FULL_SIZE ~= 0)
      153      153    1      THEN CALL TOL$SAVE_DATA
      154      154    1                 (ADDR (BUFFER),
      155      155    1                 FULL_SIZE,
      156      156    1                 DCW,
      157      157    1                 STATUS,
      158      158    1                 START_LOAD$,
      159      159    1                 DATA_SIZE,
      160      160    1                 CALL_SEQUENCE) ALTRET (BAD_CLEAR);
      161      161    1      CALL TOL$FREE_BUFFER;
      162      162    1      RETURN;
      163      163    1   BAD_CLEAR:
      164      164    1      CALL TOL$FREE_BUFFER;
      165      165    1      ALTRETURN;
      166      166        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:8    
      167      167    1   TOL$SAVE_DATA: ENTRY (DATA$,
      168      168    1              LENGTH,
      169      169    1              DCW,
      170      170    1              STATUS,
      171      171    1              START_LOAD$,
      172      172    1              DATA_SIZE,
      173      173    1              CALL_SEQUENCE) ALTRET;
      174      174    1      MOVE = LENGTH;
      175      175    1      LOAD$ = START_LOAD$;
      176      176    2      DO WHILE (MOVE ~= 0 AND DATA_SIZE ~= 0);
      177      177    2         IF (STATUS.RESIDUE = 0 AND DCW.TYPE ~= 0)
      178      178    2         THEN CALL TOL$GET_NEXT_DCW
      179      179    2                    (DCW,
      180      180    2                    CALL_SEQUENCE,
      181      181    2                    STATUS);
      182      182    2         IF (STATUS.RESIDUE = 0)
      183      183    2         THEN DATA_SIZE = 0;
      184      184    3         ELSE DO;
      185      185    3                 IF (STATUS.RESIDUE < MOVE)
      186      186    3                 THEN SEGMENT = STATUS.RESIDUE;
      187      187    3                 ELSE SEGMENT = MOVE;
      188      188    3                 IF (DATA_SIZE < SEGMENT)
      189      189    3                 THEN SEGMENT = DATA_SIZE;
      190      190    3                 ENTRY$ = ADDR (CALL_SEQUENCE);
      191      191    3                 ENTRYP.ADDRESS = DCW.ADDRESS;
      192      192    3                 IF (LOAD.TYPE ~= 3)
      193      193    3                 THEN CALL TOL$SAVE_SPLIT;
      194      194    4                 ELSE DO I = 0 TO SEGMENT - 1;
      195      195    4                         IF (DCW.TYPE ~= 2)
      196      196    4                         THEN ENTRY_ (I) = DATA (I);
      197      197    4                      END;
      198      198    3                 DATA_SIZE = DATA_SIZE - SEGMENT;
      199      199    3                 MOVE = MOVE - SEGMENT;
      200      200    3                 STATUS.RESIDUE = STATUS.RESIDUE - SEGMENT;
      201      201    3                 DCW.ADDRESS = DCW.ADDRESS + SEGMENT;
      202      202    3                 DATAP.ADDRESS = DATAP.ADDRESS + SEGMENT;
      203      203    3              END;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:9    
      204      204    2      END;
      205      205    1      IF (MOVE = 0)
      206      206    1      THEN RETURN;
      207      207    1      ELSE ALTRETURN;
      208      208        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:10   
      209      209    1   TOL$SAVE_SPLIT: PROC;
      210      210    2      IF (LOAD.SIZE ~= 1 OR LOAD.TYPE > 2 OR LOAD.TYPE = 0)
      211      211    2      THEN CALL TOL$BAD_CARD (VECTOR (ER#60));
      212      212    2      IF (LOAD.TYPE = 1)
      213      213    2      THEN ENTRY_SPLIT.LOWER (0) = DATA_SPLIT.LOWER (0);
      214      214    2      ELSE ENTRY_SPLIT.UPPER (0) = DATA_SPLIT.UPPER (0);
      215      215    2      RETURN;
      216      216    2   END TOL$SAVE_SPLIT;
      217      217    1   END TOL$CLEAR_DATA;

PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:11   
      No diagnostics issued in procedure TOL$CLEAR_DATA.

   Procedure TOL$CLEAR_DATA requires 205 words for executable code.
   Procedure TOL$CLEAR_DATA requires 26 words of local(AUTO) storage.

    No errors detected in file TOL$CLEAR_DATA.:E05TSI    .

PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:12   

 Object Unit name= TOL$CLEAR_DATA                             File name= TOL$CLEAR_DATA.:E05TOU
 UTS= JUL 30 '97 06:24:53.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    18     22  TOL$CLEAR_DATA
    1   Proc  even  none   205    315  TOL$CLEAR_DATA
    2  RoData even  none     5      5  TOL$CLEAR_DATA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        7  TOL$CLEAR_DATA
     1     74          yes     yes      Std        7  TOL$SAVE_DATA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 TOL$GET_BUFFER
         yes           Std       3 TOL$GET_NEXT_DCW
         yes           Std       0 TOL$FREE_BUFFER
         yes           Std       1 TOL$BAD_CARD
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:13   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     TOL$BUFFER$                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:14   


        1        1        /*M* TOL$CLEAR_DATA     TOLTS LOADER CLEAR DATA program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             PRB=Y,CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        TOL$CLEAR_DATA:
       12       12           PROC

     12  1 000000   000000 700200 xent  TOL$CLEAR_D* TSX0  ! X66_AUTO_N
         1 000001   000032 000007                    ZERO    26,7

       13       13                   (DATA$,
       14       14                   LENGTH,
       15       15                   DCW,
       16       16                   STATUS,
       17       17                   START_LOAD$,
       18       18                   DATA_SIZE,
       19       19                   CALL_SEQUENCE) ALTRET;
       20       20        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:15   
       21       21        /*
       22       22        .
       23       23        .PARAMETERS
       24       24        .
       25       25        .
       26       26        */
       27       27    1      DCL 1 CALL_SEQUENCE ALIGNED,
       28       28    1            2 FDCWP UBIN (18) UNAL,
       29       29    1            2 STATUSP UBIN (18) UNAL,
       30       30    1            2 DECK# UBIN (18) UNAL,
       31       31    1            2 NEXT_ENTRY UBIN (18) UNAL,
       32       32    1            2 CATALOG_CKSUM ALIGNED,
       33       33    1              3 UPPER UBIN (18) UNAL,
       34       34    1              3 LOWER UBIN (18) UNAL,
       35       35    1            2 CATALOG_CHECKSUM REDEF CATALOG_CKSUM UBIN (36) ALIGNED,
       36       36    1            2 DECK_OFFSET REDEF CATALOG_CKSUM UBIN (36) ALIGNED,
       37       37    1            2 * UBIN (18) UNAL,
       38       38    1            2 ENTRY_COUNT UBIN (18) UNAL,
       39       39    1            2 CARD_COUNT REDEF ENTRY_COUNT UBIN (18) UNAL,
       40       40    1            2 CHECKSUM UBIN (36) ALIGNED,
       41       41    1            2 RELOCATION UBIN (36) ALIGNED,
       42       42    1            2 NO_MORE SBIN (36) ALIGNED;
       43       43    1      DCL DATA$ PTR ALIGNED;
       44       44    1      DCL 1 DATAP REDEF DATA$ ALIGNED,
       45       45    1            2 ADDRESS UBIN (18) UNAL,
       46       46    1            2 * BIT (18) UNAL;
       47       47    1      DCL DATA_SIZE UBIN (36) ALIGNED;
       48       48    1      DCL 1 DCW ALIGNED,
       49       49    1            2 ADDRESS UBIN (18) UNAL,
       50       50    1            2 TYPE UBIN (6) UNAL,
       51       51    1            2 SIZE UBIN (12) UNAL;
       52       52    1      DCL LENGTH UBIN (36) ALIGNED;
       53       53    1      DCL START_LOAD$ PTR ALIGNED;
       54       54    1      DCL 1 STATUS ALIGNED,
       55       55    1            2 HARDWARE_STATUS BIT (36) ALIGNED,
       56       56    1            2 LAST_DCW_POINTER UBIN (18) UNAL,
       57       57    1            2 RESIDUE UBIN (18) UNAL;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:16   
       58       58        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:17   
       59       59        /*
       60       60        .
       61       61        .EXTERNAL VARIABLES
       62       62        .
       63       63        .
       64       64        */
       65       65    1      DCL TOL$BUFFER$ SYMREF PTR ALIGNED;
       66       66    1      DCL BUFFER$ REDEF TOL$BUFFER$ PTR ALIGNED;
       67       67
       68       68        /*
       69       69        .
       70       70        .LOCAL VARIABLES
       71       71        .
       72       72        .
       73       73        */
       74       74    1      DCL DATA (0:8191) BASED (DATA$) UBIN (36) ALIGNED;
       75       75    1      DCL ENTRY_ (0:8191) BASED (ENTRY$) UBIN (36) ALIGNED;
       76       76    1      DCL FULL_SIZE UBIN (36) ALIGNED;
       77       77    1      DCL I UBIN (36) ALIGNED;
       78       78    1      DCL LOAD$ PTR ALIGNED;
       79       79    1      DCL MAX_CLEAR STATIC UBIN (36) ALIGNED INIT (26624);
       80       80    1      DCL MOVE UBIN (36) ALIGNED;
       81       81    1      DCL SEGMENT UBIN (36) ALIGNED;
       82       82        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:18   
       83       83        /*
       84       84        .
       85       85        .LOCAL STRUCTURES
       86       86        .
       87       87        .
       88       88        */
       89       89    1      DCL 1 BUFFER (0:1023) BASED (BUFFER$) ALIGNED,
       90       90    1            2 * CHAR (52) UNAL,
       91       91    1            2 * CHAR (52) UNAL;
       92       92    1      DCL 1 DATA_SPLIT (0:8191) BASED (DATA$) ALIGNED,
       93       93    1            2 UPPER UBIN (18) UNAL,
       94       94    1            2 LOWER UBIN (18) UNAL;
       95       95    1      DCL 1 ENTRY_SPLIT (0:8191) BASED (ENTRY$) ALIGNED,
       96       96    1            2 UPPER UBIN (18) UNAL,
       97       97    1            2 LOWER UBIN (18) UNAL;
       98       98    1      DCL ENTRY$ PTR ALIGNED;
       99       99    1      DCL 1 ENTRYP REDEF ENTRY$ ALIGNED,
      100      100    1            2 ADDRESS UBIN (18) UNAL,
      101      101    1            2 * BIT (18) UNAL;
      102      102    1      DCL 1 LOAD BASED (LOAD$) ALIGNED,
      103      103    1            2 TYPE UBIN (3) UNAL,
      104      104    1            2 * UBIN (9) UNAL,
      105      105    1            2 SIZE UBIN (6) UNAL,
      106      106    1            2 ADDRESS UBIN (18) UNAL,
      107      107    1            2 DATA (0:27) UBIN (36) ALIGNED;
      108      108        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:19   
      109      109        /*
      110      110        .
      111      111        .EXTERNAL ENTRIES
      112      112        .
      113      113        .
      114      114        */
      115      115    1      DCL TOL$BAD_CARD ENTRY (1);
      116      116    1      DCL TOL$FREE_BUFFER ENTRY;
      117      117    1      DCL TOL$GET_BUFFER ENTRY;
      118      118    1      DCL TOL$GET_NEXT_DCW ENTRY (3);
      119      119
      120      120        /*
      121      121        .
      122      122        .ERROR MESSAGES FOR TOX$ERROR OR TOX$ALTRET
      123      123        .
      124      124        .
      125      125        */
      126      126    1      DCL 1 ER#60 STATIC UNAL,
      127      127    1            2 * CHAR (2) UNAL INIT ('*'),
      128      128    1            2 * CHAR (8) UNAL INIT ('ILLEGAL'),
      129      129    1            2 * CHAR (32) UNAL INIT ('LOADER WORD TYPE/SIZE %LTT/%LTZ'),
      130      130    1            2 * CHAR (26) UNAL INIT ('FOR CALL TO TOL$SAVE_DATA');
      131      131        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:20   
      132      132        /*
      133      133        .
      134      134        .TOL$CLEAR_DATA CODING
      135      135        .
      136      136        .
      137      137        */
      138      138    1      CALL TOL$GET_BUFFER;

    138  1 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000003   000000 701000 xent               TSX1    TOL$GET_BUFFER
         1 000004   000000 011000                    NOP     0

      139      139    1      BUFFER = '0'B;

    139  1 000005   000000 470400 xsym               LDP0    TOL$BUFFER$
         1 000006   320000 220003                    LDX0    106496,DU
         1 000007   000140 100400                    MLR     fill='000'O
         1 000010   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000011   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      140      140    1      FULL_SIZE = LENGTH;

    140  1 000012   200004 470500                    LDP0    @LENGTH,,AUTO
         1 000013   000000 235100                    LDA     0,,PR0
         1 000014   200012 755100                    STA     FULL_SIZE,,AUTO

      141      141    2      DO WHILE (FULL_SIZE > 1024*26);

    141  1 000015   000040 710000 1                  TRA     s:151

      142      142    2         CALL TOL$SAVE_DATA

    142  1 000016   000000 236000 xsym               LDQ     TOL$BUFFER$
         1 000017   200022 756100                    STQ     ENTRY$+3,,AUTO
         1 000020   200010 237100                    LDAQ    @DATA_SIZE,,AUTO
         1 000021   200030 757100                    STAQ    ENTRY$+9,,AUTO
         1 000022   200006 237100                    LDAQ    @STATUS,,AUTO
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:21   
         1 000023   200026 757100                    STAQ    ENTRY$+7,,AUTO
         1 000024   200005 236100                    LDQ     @DCW,,AUTO
         1 000025   000000 235000 2                  LDA     0
         1 000026   200024 757100                    STAQ    ENTRY$+5,,AUTO
         1 000027   200022 630500                    EPPR0   ENTRY$+3,,AUTO
         1 000030   200023 450500                    STP0    ENTRY$+4,,AUTO
         1 000031   200023 630500                    EPPR0   ENTRY$+4,,AUTO
         1 000032   000025 631400 xsym               EPPR1   B_VECTNIL+21
         1 000033   000074 701000 1                  TSX1    s:167
         1 000034   000070 702000 1                  TSX2    BAD_CLEAR

      143      143    2                 (ADDR (BUFFER),
      144      144    2                 MAX_CLEAR,
      145      145    2                 DCW,
      146      146    2                 STATUS,
      147      147    2                 START_LOAD$,
      148      148    2                 DATA_SIZE,
      149      149    2                 CALL_SEQUENCE) ALTRET (BAD_CLEAR);
      150      150    2         FULL_SIZE = FULL_SIZE - 1024 * 26;

    150  1 000035   200012 235100                    LDA     FULL_SIZE,,AUTO
         1 000036   064000 135007                    SBLA    26624,DL
         1 000037   200012 755100                    STA     FULL_SIZE,,AUTO

      151      151    2      END;

    151  1 000040   064001 115007                    CMPA    26625,DL
         1 000041   000016 603000 1                  TRC     s:142

      152      152    1      IF (FULL_SIZE ~= 0)

    152  1 000042   000000 115003                    CMPA    0,DU
         1 000043   000064 600000 1                  TZE     s:161

      153      153    1      THEN CALL TOL$SAVE_DATA

    153  1 000044   000000 236000 xsym               LDQ     TOL$BUFFER$
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:22   
         1 000045   200022 756100                    STQ     ENTRY$+3,,AUTO
         1 000046   200010 237100                    LDAQ    @DATA_SIZE,,AUTO
         1 000047   200030 757100                    STAQ    ENTRY$+9,,AUTO
         1 000050   200006 237100                    LDAQ    @STATUS,,AUTO
         1 000051   200026 757100                    STAQ    ENTRY$+7,,AUTO
         1 000052   200005 236100                    LDQ     @DCW,,AUTO
         1 000053   200025 756100                    STQ     ENTRY$+6,,AUTO
         1 000054   200012 630500                    EPPR0   FULL_SIZE,,AUTO
         1 000055   200024 450500                    STP0    ENTRY$+5,,AUTO
         1 000056   200022 631500                    EPPR1   ENTRY$+3,,AUTO
         1 000057   200023 451500                    STP1    ENTRY$+4,,AUTO
         1 000060   200023 630500                    EPPR0   ENTRY$+4,,AUTO
         1 000061   000025 631400 xsym               EPPR1   B_VECTNIL+21
         1 000062   000074 701000 1                  TSX1    s:167
         1 000063   000070 702000 1                  TSX2    BAD_CLEAR

      154      154    1                 (ADDR (BUFFER),
      155      155    1                 FULL_SIZE,
      156      156    1                 DCW,
      157      157    1                 STATUS,
      158      158    1                 START_LOAD$,
      159      159    1                 DATA_SIZE,
      160      160    1                 CALL_SEQUENCE) ALTRET (BAD_CLEAR);
      161      161    1      CALL TOL$FREE_BUFFER;

    161  1 000064   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000065   000000 701000 xent               TSX1    TOL$FREE_BUFFER
         1 000066   000000 011000                    NOP     0

      162      162    1      RETURN;

    162  1 000067   000000 702200 xent               TSX2  ! X66_ARET

      163      163    1   BAD_CLEAR:
      164      164    1      CALL TOL$FREE_BUFFER;

    164  1 000070   000002 631400 xsym  BAD_CLEAR    EPPR1   B_VECTNIL+2
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:23   
         1 000071   000000 701000 xent               TSX1    TOL$FREE_BUFFER
         1 000072   000000 011000                    NOP     0

      165      165    1      ALTRETURN;

    165  1 000073   000000 702200 xent               TSX2  ! X66_AALT

      166      166        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:24   
      167      167    1   TOL$SAVE_DATA: ENTRY (DATA$,

    167  1 000074   000000 700200 xent  TOL$SAVE_DA* TSX0  ! X66_AUTO_N
         1 000075   000032 000007                    ZERO    26,7

      168      168    1              LENGTH,
      169      169    1              DCW,
      170      170    1              STATUS,
      171      171    1              START_LOAD$,
      172      172    1              DATA_SIZE,
      173      173    1              CALL_SEQUENCE) ALTRET;
      174      174    1      MOVE = LENGTH;

    174  1 000076   200004 470500                    LDP0    @LENGTH,,AUTO
         1 000077   000000 235100                    LDA     0,,PR0
         1 000100   200015 755100                    STA     MOVE,,AUTO

      175      175    1      LOAD$ = START_LOAD$;

    175  1 000101   200007 471500                    LDP1    @START_LOAD$,,AUTO
         1 000102   100000 236100                    LDQ     0,,PR1
         1 000103   200014 756100                    STQ     LOAD$,,AUTO

      176      176    2      DO WHILE (MOVE ~= 0 AND DATA_SIZE ~= 0);

    176  1 000104   000241 710000 1                  TRA     s:204

      177      177    2         IF (STATUS.RESIDUE = 0 AND DCW.TYPE ~= 0)

    177  1 000105   200006 470500                    LDP0    @STATUS,,AUTO
         1 000106   000001 720100                    LXL0    1,,PR0
         1 000107   000125 601000 1                  TNZ     s:182
         1 000110   200005 471500                    LDP1    @DCW,,AUTO
         1 000111   100000 236100                    LDQ     0,,PR1
         1 000112   770000 316007                    CANQ    -4096,DL
         1 000113   000125 600000 1                  TZE     s:182

PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:25   
      178      178    2         THEN CALL TOL$GET_NEXT_DCW

    178  1 000114   200006 236100                    LDQ     @STATUS,,AUTO
         1 000115   200024 756100                    STQ     ENTRY$+5,,AUTO
         1 000116   200011 236100                    LDQ     @CALL_SEQUENCE,,AUTO
         1 000117   200005 235100                    LDA     @DCW,,AUTO
         1 000120   200022 757100                    STAQ    ENTRY$+3,,AUTO
         1 000121   200022 630500                    EPPR0   ENTRY$+3,,AUTO
         1 000122   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000123   000000 701000 xent               TSX1    TOL$GET_NEXT_DCW
         1 000124   000000 011000                    NOP     0

      179      179    2                    (DCW,
      180      180    2                    CALL_SEQUENCE,
      181      181    2                    STATUS);
      182      182    2         IF (STATUS.RESIDUE = 0)

    182  1 000125   200006 470500                    LDP0    @STATUS,,AUTO
         1 000126   000001 720100                    LXL0    1,,PR0
         1 000127   000133 601000 1                  TNZ     s:185

      183      183    2         THEN DATA_SIZE = 0;

    183  1 000130   200010 471500                    LDP1    @DATA_SIZE,,AUTO
         1 000131   100000 450100                    STZ     0,,PR1
         1 000132   000241 710000 1                  TRA     s:204

      184      184    3         ELSE DO;

      185      185    3                 IF (STATUS.RESIDUE < MOVE)

    185  1 000133   000001 236100                    LDQ     1,,PR0
         1 000134   777777 376007                    ANQ     -1,DL
         1 000135   200015 116100                    CMPQ    MOVE,,AUTO
         1 000136   000141 603000 1                  TRC     s:187

      186      186    3                 THEN SEGMENT = STATUS.RESIDUE;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:26   

    186  1 000137   200016 756100                    STQ     SEGMENT,,AUTO
         1 000140   000143 710000 1                  TRA     s:188

      187      187    3                 ELSE SEGMENT = MOVE;

    187  1 000141   200015 235100                    LDA     MOVE,,AUTO
         1 000142   200016 755100                    STA     SEGMENT,,AUTO

      188      188    3                 IF (DATA_SIZE < SEGMENT)

    188  1 000143   200010 471500                    LDP1    @DATA_SIZE,,AUTO
         1 000144   100000 236100                    LDQ     0,,PR1
         1 000145   200016 116100                    CMPQ    SEGMENT,,AUTO
         1 000146   000150 603000 1                  TRC     s:190

      189      189    3                 THEN SEGMENT = DATA_SIZE;

    189  1 000147   200016 756100                    STQ     SEGMENT,,AUTO

      190      190    3                 ENTRY$ = ADDR (CALL_SEQUENCE);

    190  1 000150   200011 236100                    LDQ     @CALL_SEQUENCE,,AUTO
         1 000151   200017 756100                    STQ     ENTRY$,,AUTO

      191      191    3                 ENTRYP.ADDRESS = DCW.ADDRESS;

    191  1 000152   200005 473500                    LDP3    @DCW,,AUTO
         1 000153   300000 221100                    LDX1    0,,PR3
         1 000154   200017 741100                    STX1    ENTRY$,,AUTO

      192      192    3                 IF (LOAD.TYPE ~= 3)

    192  1 000155   200014 474500                    LDP4    LOAD$,,AUTO
         1 000156   400000 236100                    LDQ     0,,PR4
         1 000157   700000 376003                    ANQ     -32768,DU
         1 000160   300000 116003                    CMPQ    98304,DU
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:27   
         1 000161   000165 600000 1                  TZE     s:194

      193      193    3                 THEN CALL TOL$SAVE_SPLIT;

    193  1 000162   000252 701000 1                  TSX1    TOL$SAVE_SPLIT
         1 000163   000000 011000                    NOP     0
         1 000164   000210 710000 1                  TRA     s:198

      194      194    4                 ELSE DO I = 0 TO SEGMENT - 1;

    194  1 000165   200013 450100                    STZ     I,,AUTO
         1 000166   000205 710000 1                  TRA     s:197+3

      195      195    4                         IF (DCW.TYPE ~= 2)

    195  1 000167   200005 470500                    LDP0    @DCW,,AUTO
         1 000170   000000 236100                    LDQ     0,,PR0
         1 000171   770000 376007                    ANQ     -4096,DL
         1 000172   020000 116007                    CMPQ    8192,DL
         1 000173   000202 600000 1                  TZE     s:197

      196      196    4                         THEN ENTRY_ (I) = DATA (I);

    196  1 000174   200003 471500                    LDP1    @DATA$,,AUTO
         1 000175   100000 473500                    LDP3    0,,PR1
         1 000176   200013 720100                    LXL0    I,,AUTO
         1 000177   200017 474500                    LDP4    ENTRY$,,AUTO
         1 000200   300000 235110                    LDA     0,X0,PR3
         1 000201   400000 755110                    STA     0,X0,PR4

      197      197    4                      END;

    197  1 000202   200013 235100                    LDA     I,,AUTO
         1 000203   000001 035007                    ADLA    1,DL
         1 000204   200013 755100                    STA     I,,AUTO
         1 000205   200013 236100                    LDQ     I,,AUTO
         1 000206   200016 116100                    CMPQ    SEGMENT,,AUTO
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:28   
         1 000207   000167 602000 1                  TNC     s:195

      198      198    3                 DATA_SIZE = DATA_SIZE - SEGMENT;

    198  1 000210   200010 470500                    LDP0    @DATA_SIZE,,AUTO
         1 000211   000000 236100                    LDQ     0,,PR0
         1 000212   200016 136100                    SBLQ    SEGMENT,,AUTO
         1 000213   000000 756100                    STQ     0,,PR0

      199      199    3                 MOVE = MOVE - SEGMENT;

    199  1 000214   200015 236100                    LDQ     MOVE,,AUTO
         1 000215   200016 136100                    SBLQ    SEGMENT,,AUTO
         1 000216   200015 756100                    STQ     MOVE,,AUTO

      200      200    3                 STATUS.RESIDUE = STATUS.RESIDUE - SEGMENT;

    200  1 000217   200006 471500                    LDP1    @STATUS,,AUTO
         1 000220   100001 236100                    LDQ     1,,PR1
         1 000221   777777 376007                    ANQ     -1,DL
         1 000222   200016 136100                    SBLQ    SEGMENT,,AUTO
         1 000223   000000 620006                    EAX0    0,QL
         1 000224   100001 440100                    SXL0    1,,PR1

      201      201    3                 DCW.ADDRESS = DCW.ADDRESS + SEGMENT;

    201  1 000225   200005 473500                    LDP3    @DCW,,AUTO
         1 000226   300000 236100                    LDQ     0,,PR3
         1 000227   000022 772000                    QRL     18
         1 000230   200016 036100                    ADLQ    SEGMENT,,AUTO
         1 000231   000000 621006                    EAX1    0,QL
         1 000232   300000 741100                    STX1    0,,PR3

      202      202    3                 DATAP.ADDRESS = DATAP.ADDRESS + SEGMENT;

    202  1 000233   200003 474500                    LDP4    @DATA$,,AUTO
         1 000234   400000 236100                    LDQ     0,,PR4
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:29   
         1 000235   000022 772000                    QRL     18
         1 000236   200016 036100                    ADLQ    SEGMENT,,AUTO
         1 000237   000000 620006                    EAX0    0,QL
         1 000240   400000 740100                    STX0    0,,PR4

      203      203    3              END;

      204      204    2      END;

    204  1 000241   200015 235100                    LDA     MOVE,,AUTO
         1 000242   000246 600000 1                  TZE     s:205
         1 000243   200010 470500                    LDP0    @DATA_SIZE,,AUTO
         1 000244   000000 235100                    LDA     0,,PR0
         1 000245   000105 601000 1                  TNZ     s:177

      205      205    1      IF (MOVE = 0)

    205  1 000246   200015 235100                    LDA     MOVE,,AUTO
         1 000247   000251 601000 1                  TNZ     s:207

      206      206    1      THEN RETURN;

    206  1 000250   000000 702200 xent               TSX2  ! X66_ARET

      207      207    1      ELSE ALTRETURN;

    207  1 000251   000000 702200 xent               TSX2  ! X66_AALT

      208      208        %EJECT;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:30   
      209      209    1   TOL$SAVE_SPLIT: PROC;

    209  1 000252   200020 741300       TOL$SAVE_SP* STX1  ! ENTRY$+1,,AUTO

      210      210    2      IF (LOAD.SIZE ~= 1 OR LOAD.TYPE > 2 OR LOAD.TYPE = 0)

    210  1 000253   200014 470500                    LDP0    LOAD$,,AUTO
         1 000254   000000 236100                    LDQ     0,,PR0
         1 000255   000077 376003                    ANQ     63,DU
         1 000256   000001 116003                    CMPQ    1,DU
         1 000257   000267 601000 1                  TNZ     s:211
         1 000260   000000 236100                    LDQ     0,,PR0
         1 000261   700000 376003                    ANQ     -32768,DU
         1 000262   300000 116003                    CMPQ    98304,DU
         1 000263   000267 603000 1                  TRC     s:211
         1 000264   000000 236100                    LDQ     0,,PR0
         1 000265   700000 316003                    CANQ    -32768,DU
         1 000266   000273 601000 1                  TNZ     s:212

      211      211    2      THEN CALL TOL$BAD_CARD (VECTOR (ER#60));

    211  1 000267   000004 630400 2                  EPPR0   4
         1 000270   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000271   000000 701000 xent               TSX1    TOL$BAD_CARD
         1 000272   000000 011000                    NOP     0

      212      212    2      IF (LOAD.TYPE = 1)

    212  1 000273   200014 470500                    LDP0    LOAD$,,AUTO
         1 000274   000000 236100                    LDQ     0,,PR0
         1 000275   700000 376003                    ANQ     -32768,DU
         1 000276   100000 116003                    CMPQ    32768,DU
         1 000277   000306 601000 1                  TNZ     s:214

      213      213    2      THEN ENTRY_SPLIT.LOWER (0) = DATA_SPLIT.LOWER (0);

    213  1 000300   200003 471500                    LDP1    @DATA$,,AUTO
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:31   
         1 000301   100000 473500                    LDP3    0,,PR1
         1 000302   300000 720100                    LXL0    0,,PR3
         1 000303   200017 474500                    LDP4    ENTRY$,,AUTO
         1 000304   400000 440100                    SXL0    0,,PR4
         1 000305   000313 710000 1                  TRA     s:215

      214      214    2      ELSE ENTRY_SPLIT.UPPER (0) = DATA_SPLIT.UPPER (0);

    214  1 000306   200003 471500                    LDP1    @DATA$,,AUTO
         1 000307   100000 473500                    LDP3    0,,PR1
         1 000310   300000 220100                    LDX0    0,,PR3
         1 000311   200017 474500                    LDP4    ENTRY$,,AUTO
         1 000312   400000 740100                    STX0    0,,PR4

      215      215    2      RETURN;

    215  1 000313   200020 221300                    LDX1  ! ENTRY$+1,,AUTO
         1 000314   000001 702211                    TSX2  ! 1,X1

MAX_CLEAR
 Sect OctLoc
   0     000   000000 064000                                                    ..4.

ER#60
 Sect OctLoc
   0     001   052040 111114   114105 107101   114040 114117   101104 105122    * ILLEGAL LOADER
   0     005   040127 117122   104040 124131   120105 057123   111132 105040     WORD TYPE/SIZE
   0     011   045114 124124   057045 114124   132040 106117   122040 103101    %LTT/%LTZ FOR CA
   0     015   114114 040124   117040 124117   114044 123101   126105 137104    LL TO TOL$SAVE_D
   0     021   101124 101040                                                    ATA

(unnamed)
 Sect OctLoc
   2     000   000000 006000   000000 000000   000020 777640   000001 006000    ................
   2     004   000002 006000                                                    ....
      216      216    2   END TOL$SAVE_SPLIT;
      217      217    1   END TOL$CLEAR_DATA;
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:32   

PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:33   
      No diagnostics issued in procedure TOL$CLEAR_DATA.
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:34   

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    12-   217     53    43     1      0  y y y    7   1 TOL$CLEAR_DATA
                                  1     74    y y    7     TOL$SAVE_DATA
  1   209-   216      7     0     1    252  y   y    0     2 TOL$SAVE_SPLIT
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:35   

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              12   1      0 Proc    0                               138   1      2 Call    0
         $   139   1      5 Assign  0                               140   1     12 Assign  0
             141   1     15 DoWhil  0                        $$$$   142   1     16 Call    0
             150   1     35 Assign  0                               151   1     40 EndWhi  0
             152   1     42 If      0                       $$$$$   153   1     44 Call    0
             161   1     64 Call    0                               162   1     67 Return  0
             164   1     70 Call    0 BAD_CLEAR                     165   1     73 Altret  0
             167   1     74 Entry   0                               174   1     76 Assign  0
             175   1    101 Assign  0                               176   1    104 DoWhil  0
        $$   177   1    105 If      0                          $$   178   1    114 Call    0
             182   1    125 If      0                           $   183   1    130 Assign  0
             184   1    133 Do      0                               185   1    133 If      0
             186   1    137 Assign  0                               187   1    141 Assign  0
         $   188   1    143 If      0                               189   1    147 Assign  0
             190   1    150 Assign  0                               191   1    152 Assign  0
         $   192   1    155 If      0                               193   1    162 Call    0
             194   1    165 DoIndx  0                           $   195   1    167 If      0
       $$$   196   1    174 Assign  0                               197   1    202 EndInd  0
         $   198   1    210 Assign  0                               199   1    214 Assign  0
         $   200   1    217 Assign  0                           $   201   1    225 Assign  0
         $   202   1    233 Assign  0                               203   1    241 EndDo   0
         $   204   1    241 EndWhi  0                               205   1    246 If      0
             206   1    250 Return  0                               207   1    251 Altret  0
             209   1    252 Proc    1                         $$$   210   1    253 If      1
             211   1    267 Call    1                           $   212   1    273 If      1
       $$$   213   1    300 Assign  1                         $$$   214   1    306 Assign  1
             215   1    313 Return  1

  **** Statement type totals  ****

    19 Assign     8 Call      10 If         3 Return     2 Altret     1 DoIndx
     2 DoWhil     1 Do         1 EndInd     2 EndWhi     1 EndDo      2 Proc
     1 Entry      1 Labels
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:36   

 # major stmts=   45 Code/major= 4.55 # stmts=   53 Code/stmt= 3.86  Point total=100.6
 Cost/major stmt=  4.2 Cost/stmt=  3.6 Total cost=    192.3

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$$$$$$$$$$$$$$$
   6-8  $$$
  8-10  $$$$$$$
 10-12  $
 12-14  $
 14-16
 16-18
 18-20
 20-22
 22-??
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:37   

 **** Variables and constants ****

  ****  Section 000  Data  TOL$CLEAR_DATA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c STRC(612)   r     1 ER#60                      0-0-0/w UBIN        r     1 MAX_CLEAR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/w PTR         r     1 @CALL_SEQUENCE             3-0-0/w PTR         r     1 @DATA$
    10-0-0/w PTR         r     1 @DATA_SIZE                 5-0-0/w PTR         r     1 @DCW
     4-0-0/w PTR         r     1 @LENGTH                    7-0-0/w PTR         r     1 @START_LOAD$
     6-0-0/w PTR         r     1 @STATUS                   *0-0-0/w STRC(252)   r     1 CALL_SEQUENCE
    *0-0-0/w PTR         r     1 DATA$                     *0-0-0/w UBIN        r     1 DATA_SIZE
    17-0-0/w PTR         r     1 ENTRY$                    12-0-0/w UBIN        r     1 FULL_SIZE
    13-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 LENGTH
    14-0-0/w PTR         r     1 LOAD$                     15-0-0/w UBIN        r     1 MOVE
    16-0-0/w UBIN        r     1 SEGMENT                   *0-0-0/w PTR         r     1 START_LOAD$

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

    *0-0-0/w STRC        r     1 DATAP
     0-0-0/b UBIN(18)    r         2 ADDRESS

    *0-0-0/w STRC        r     1 DCW
     0-0-0/b UBIN(18)    r         2 ADDRESS
     0-2-0/b UBIN(6)     r         2 TYPE

    17-0-0/w STRC        r     1 ENTRYP
    17-0-0/b UBIN(18)    r         2 ADDRESS

PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:38   
    *0-0-0/w STRC(72)    r     1 STATUS
     1-2-0/b UBIN(18)    r         2 RESIDUE


  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 BUFFER$                    0-0-0/w PTR         r     1 TOL$BUFFER$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(936)   r     1 BUFFER(0:1023)             0-0-0/w UBIN        r     1 DATA(0:8191)
     0-0-0/w UBIN        r     1 ENTRY_(0:8191)

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 DATA_SPLIT(0:8191)
     0-0-0/b UBIN(18)    r         2 UPPER
     0-2-0/b UBIN(18)    r         2 LOWER

     0-0-0/w STRC        r     1 ENTRY_SPLIT(0:8191)
     0-0-0/b UBIN(18)    r         2 UPPER
     0-2-0/b UBIN(18)    r         2 LOWER

     0-0-0/w STRC(1044)  r     1 LOAD
     0-0-0/b UBIN(3)     r         2 TYPE
     0-1-3/b UBIN(6)     r         2 SIZE


PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:39   

   Procedure TOL$CLEAR_DATA requires 205 words for executable code.
   Procedure TOL$CLEAR_DATA requires 26 words of local(AUTO) storage.

    No errors detected in file TOL$CLEAR_DATA.:E05TSI    .
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:40   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:41   
          MINI XREF LISTING

BAD_CLEAR
       164**LABEL     142--CALLALT   153--CALLALT
BUFFER
        89**DCL       139<<ASSIGN    142--CALL      153--CALL
BUFFER$
        66**DCL        89--IMP-PTR   139>>ASSIGN    142>>CALL      153>>CALL
CALL_SEQUENCE
        27**DCL        11--PROC      142<>CALL      153<>CALL      167--ENTRY     178<>CALL      190--ASSIGN
CALL_SEQUENCE.CATALOG_CKSUM
        32**DCL        35--REDEF      36--REDEF
CALL_SEQUENCE.ENTRY_COUNT
        38**DCL        39--REDEF
DATA
        74**DCL       196>>ASSIGN
DATA$
        43**DCL        11--PROC       44--REDEF      74--IMP-PTR    92--IMP-PTR   167--ENTRY     196>>ASSIGN
       213>>ASSIGN    214>>ASSIGN
DATAP.ADDRESS
        45**DCL       202<<ASSIGN    202>>ASSIGN
DATA_SIZE
        47**DCL        11--PROC      142<>CALL      153<>CALL      167--ENTRY     176>>DOWHILE   183<<ASSIGN
       188>>IF        189>>ASSIGN    198<<ASSIGN    198>>ASSIGN
DATA_SPLIT.LOWER
        94**DCL       213>>ASSIGN
DATA_SPLIT.UPPER
        93**DCL       214>>ASSIGN
DCW
        48**DCL        11--PROC      142<>CALL      153<>CALL      167--ENTRY     178<>CALL
DCW.ADDRESS
        49**DCL       191>>ASSIGN    201<<ASSIGN    201>>ASSIGN
DCW.TYPE
        50**DCL       177>>IF        195>>IF
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:42   
ENTRY$
        98**DCL        75--IMP-PTR    95--IMP-PTR    99--REDEF     190<<ASSIGN    196>>ASSIGN    213>>ASSIGN
       214>>ASSIGN
ENTRYP.ADDRESS
       100**DCL       191<<ASSIGN
ENTRY_
        75**DCL       196<<ASSIGN
ENTRY_SPLIT.LOWER
        97**DCL       213<<ASSIGN
ENTRY_SPLIT.UPPER
        96**DCL       214<<ASSIGN
ER#60
       126**DCL       211--CALL
FULL_SIZE
        76**DCL       140<<ASSIGN    141>>DOWHILE   150<<ASSIGN    150>>ASSIGN    152>>IF        153<>CALL
I
        77**DCL       194<<DOINDEX   196>>ASSIGN    196>>ASSIGN
LENGTH
        52**DCL        11--PROC      140>>ASSIGN    167--ENTRY     174>>ASSIGN
LOAD.SIZE
       105**DCL       210>>IF
LOAD.TYPE
       103**DCL       192>>IF        210>>IF        210>>IF        212>>IF
LOAD$
        78**DCL       102--IMP-PTR   175<<ASSIGN    192>>IF        210>>IF        210>>IF        210>>IF
       212>>IF
MAX_CLEAR
        79**DCL       142<>CALL
MOVE
        80**DCL       174<<ASSIGN    176>>DOWHILE   185>>IF        187>>ASSIGN    199<<ASSIGN    199>>ASSIGN
       205>>IF
SEGMENT
        81**DCL       186<<ASSIGN    187<<ASSIGN    188>>IF        189<<ASSIGN    194>>DOINDEX   198>>ASSIGN
       199>>ASSIGN    200>>ASSIGN    201>>ASSIGN    202>>ASSIGN
START_LOAD$
        53**DCL        11--PROC      142<>CALL      153<>CALL      167--ENTRY     175>>ASSIGN
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:43   
STATUS
        54**DCL        11--PROC      142<>CALL      153<>CALL      167--ENTRY     178<>CALL
STATUS.RESIDUE
        57**DCL       177>>IF        182>>IF        185>>IF        186>>ASSIGN    200<<ASSIGN    200>>ASSIGN
TOL$BAD_CARD
       115**DCL-ENT   211--CALL
TOL$BUFFER$
        65**DCL        66--REDEF
TOL$FREE_BUFFER
       116**DCL-ENT   161--CALL      164--CALL
TOL$GET_BUFFER
       117**DCL-ENT   138--CALL
TOL$GET_NEXT_DCW
       118**DCL-ENT   178--CALL
TOL$SAVE_DATA
       167**ENTRY     142--CALL      153--CALL
TOL$SAVE_SPLIT
       209**PROC      193--CALL
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:44   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:45   
              FULL UREF LISTING

CALL_SEQUENCE.CARD_COUNT
        39**DCL
CALL_SEQUENCE.CATALOG_CHECKSUM
        35**DCL
CALL_SEQUENCE.CATALOG_CKSUM.LOWER
        34**DCL
CALL_SEQUENCE.CATALOG_CKSUM.UPPER
        33**DCL
CALL_SEQUENCE.CHECKSUM
        40**DCL
CALL_SEQUENCE.DECK#
        30**DCL
CALL_SEQUENCE.DECK_OFFSET
        36**DCL
CALL_SEQUENCE.FDCWP
        28**DCL
CALL_SEQUENCE.NEXT_ENTRY
        31**DCL
CALL_SEQUENCE.NO_MORE
        42**DCL
CALL_SEQUENCE.RELOCATION
        41**DCL
CALL_SEQUENCE.STATUSP
        29**DCL
DATAP
        44**DCL
DATA_SPLIT
        92**DCL
DCW.SIZE
        51**DCL
ENTRYP
        99**DCL
PL6.E3A0      #001=TOL$CLEAR_DATA File=TOL$CLEAR_DATA.:E05TSI                    WED 07/30/97 06:24 Page:46   
ENTRY_SPLIT
        95**DCL
LOAD
       102**DCL
LOAD.ADDRESS
       106**DCL
LOAD.DATA
       107**DCL
STATUS.HARDWARE_STATUS
        55**DCL
STATUS.LAST_DCW_POINTER
        56**DCL
TOL$CLEAR_DATA
        11**PROC
