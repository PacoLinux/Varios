

15:19 JUL 28 '97 UQ$NODES.:E05SI                                           1    
    1      /*M*  DEFINITIONS OF ENQ/DEQ NODE TYPES                            */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7                                              /**************************************/
    8                                              /* Descriptions of Enq/Deq node types */
    9                                              /**************************************/
   10      /**/
   11      DCL 1 NODE BASED ALIGNED,
   12            2 TYPE UBIN(9) UNAL,              /* TYPE = 0,8,16,24,32,33,34, OR 40   */
   13      %SUB AVAIL_TYPE=0 /* Avail_type */;
   14      %SUB QID_TYPE=24 /* Qid_type */;
   15      %SUB RNAME1_TYPE=32 /* Rname1_type */;
   16      %SUB RNAME2_TYPE=33 /* Rname2_type */;
   17      %SUB RNAME3_TYPE=34 /* Rname3_type */;
   18      %SUB QENTRY_TYPE=40 /* Qentry_type */;
   19            2 * BIT(27) UNAL,
   20            2 * UBIN(36),
   21            2 * UBIN(36),
   22            2 NCHAIN UBIN;
   23      /**/
   24      /**/
   25      /**/
   26      DCL 1 NNODE BASED ALIGNED,
   27            2 TYPE UBIN(9) UNAL,              /* TYPE = 33 OR 34                    */
   28            2 TEXT CHAR(13) UNAL,
   29            2 NCHAIN@ UBIN(18) UNAL;
   30      /**/
   31      /**/
   32      /*  The six basic node types follow:                               */
   33      /**/
   34      /**/
   35      DCL 1 AVAIL BASED ALIGNED,              /* Available node                     */
   36            2 TYPE BIT(36),
   37            2 * BIT(72),
15:19 JUL 28 '97 UQ$NODES.:E05SI                                           2    
   38            2 * BIT(18),
   39            2 NEXT_BLOCK@ UBIN HALF UNAL;      /* Next available node in free list*/
   40      /**/
   41      /**/
   42      /**/
   43      DCL 1 QID BASED ALIGNED,                /* QID node (Resource Group or CFU)   */
   44            2 TYPE UBIN(9) UNAL,              /* TYPE = 24                          */
   45            2 * BIT(9),
   46            2 XCHAIN@ UBIN(18) UNAL,          /* Link to first RNAME1     */
   47            2 HCHAIN@ UBIN(18) UNAL,          /* Link to next QID node in list      */
   48            2 * BIT(18),
   49            2 * UBIN(36),
   50            2 NAME BIT(36);                   /* CFU ptr for this resource group    */
   51      /**/
   52      /**/
   53      /**/
   54      DCL 1 RNAME1 BASED ALIGNED,             /* Main node of res. name node group  */
   55            2 TYPE UBIN(9) UNAL,              /* TYPE = 32                          */
   56            2 FLAGS,
   57              3 * BIT(3) UNAL,
   58            2 RHASH UBIN(6) UNAL,             /* HASH VALUE FOR THIS RNAME          */
   59            2 XCHAIN@ UBIN(18)UNAL, /* LINK TO FIRST RNAME1 FOR NEXT HASH VALUE     */
   60            2 QCHAIN@ UBIN(18) UNAL, /* Link to QENTRY node list for this resource  */
   61            2 RCHAIN@ UBIN(18) UNAL,          /* Link to next RNAME node group      */
   62            2 COMM UBIN(36),                  /* Message to be passed on DEQ        */
   63            2 RHEAD@ UBIN(18) UNAL,           /* Link to QID node owning this RNAME */
   64            2 NCHAIN@ UBIN(18) UNAL;     /* Link to RNAME2 node holding text name   */
   65      /**/
   66      /**/
   67      /**/
   68      DCL 1 RNAME2 BASED ALIGNED,             /* Main text node for resource names  */
   69            2 TYPE UBIN(9) UNAL,              /* TYPE = 33                          */
   70            2 COUNT UBIN(9) UNAL,             /* # of characters in resource name   */
   71            2 TEXT CHAR(12) UNAL,             /* 1st 12 characters of resource name  */
   72            2 NCHAIN@ UBIN(18) UNAL;     /* Link to RNAME3 node(s) for rest of text */
   73      /**/
   74      /**/
15:19 JUL 28 '97 UQ$NODES.:E05SI                                           3    
   75      /**/
   76      DCL 1 RNAME3 BASED ALIGNED,        /* Additional text node for resource names */
   77            2 TYPE UBIN(9) UNAL,              /* TYPE = 34                          */
   78            2 TEXT CHAR(13) UNAL,        /* 13 more characters of resource name     */
   79            2 NCHAIN@ UBIN(18) UNAL;          /* Link to next RNAME3 node           */
   80      /**/
   81      /**/
   82      /**/
   83      DCL 1 QENTRY BASED ALIGNED,   /* Attribute node joining RNAME to USER/DOMAIN  */
   84            2 TYPE UBIN(9) UNAL,              /* TYPE = 40                          */
   85            2 STATE UBIN(3) UNAL,             /* Allocation status                  */
   86      %SUB QUEUED=0  /* Queued */;
   87      %SUB ALLOC_PENDING=1 /* Alloc_pending */;
   88      %SUB ALLOCATED=2 /* Allocated */;
   89            2 REQUEST,                        /* Requested share mode-compatibility */
   90              3 SMODE UBIN(2)UNAL,            /* Share mode for resource/user       */
   91              3 LCFLG UBIN(1)UNAL,            /* Limited_com flag for resource/user */
   92            2 REQ_ REDEF REQUEST UBIN(3)UNAL,
   93            2 UPGRADE,                        /* Upgrade share mode-compatibility   */
   94              3 SMODE UBIN(2)UNAL,            /* Share mode for resource/user       */
   95              3 LCFLG UBIN(1)UNAL,            /* Limited_com flag for resource/user */
   96            2 UPG_ REDEF UPGRADE UBIN(3)UNAL,
   97            2 WAIT BIT(1) UNAL,               /* Set if user is blocked for RNAME   */
   98      %SUB BLKSZE=4 /* Blksze */;
   99      %SUB PAGESZE=1024 /* Pagesze */;
  100      %SUB MONWSQ=1 /* Monwsq */;
  101              2 * BIT(5) UNAL,
  102            2 DOM_USER,
  103              3 DOMAIN# UBIN(3)UNAL,
  104              3 USER UBIN(9)UNAL,
  105            2 D_U REDEF DOM_USER UBIN(12)UNAL,
  106            2 QCHAIN@ UBIN(18) UNAL,     /* Link to next QENTRY for given RNAME     */
  107            2 RNAME1@ UBIN(18) UNAL,     /* Link to RNAME1 node for this QENTRY     */
  108            2 DLKFLNK@ UBIN(18) UNAL,         /* TEMP CHAIN FOR DEADLOCK CHECK           */
  109            2 DLKBLNK@ UBIN(18) UNAL,         /* BACK LINK  FOR DEADLOCK CHECK           */
  110            2 EVENT_ID UBIN;                  /* USER LABEL FOR EVENT OR DEQ SELECT      */
  111      /**/
15:19 JUL 28 '97 UQ$NODES.:E05SI                                           4    
  112      /**/
  113      /**/
  114      DCL 1 UQ_ BASED(U_BASE$)ALIGNED,        /* Data segment pointers, etc.        */
  115       2 QBUCKET@(0:31)UBIN(18) ALIGNED,      /* Heads of QID hash chains           */
  116       2 GDS_LOCK UBIN,                     /* Long term ENQ/DEQ lock flag        */
  117       2 NEXT_PAGE@ UBIN,                      /* Pointer to first nonexistent word  */
  118       2 TOT_BLOCKS REDEF NEXT_PAGE@,         /* Total blocks present               */
  119        3 N UBIN(34)UNAL,
  120        3 * BIT(2),
  121       2 FREE_BLOCKS SBIN,                    /* Blocks presently not in use        */
  122       2 * BIT(18),
  123       2 NEXT_BLOCK@ UBIN HALF UNAL;           /* Head of AVAIL chain                */
  124      %MACRO ERRCODE (NAME=,SEV#=2,COD#=0,FCG#=FCG#,MID#=MID#);
  125      DCL 1 NAME CONSTANT,
  126            2 * BIT(12) UNAL INIT(FCG#),
  127            2 * BIT(6) UNAL INIT(MID#),
  128            2 * UBIN(15) UNAL INIT(COD#),
  129            2 * UBIN(3) UNAL INIT(SEV#);
  130      %MEND;

