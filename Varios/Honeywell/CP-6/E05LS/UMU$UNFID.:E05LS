VERSION E05

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:1    
        1        1        /*M* UMU$UNFID - Monitor service to convert a FID to text format. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=1,THI=1    */
        8        8        /*P* NAME: M$UNFID
        9        9             PURPOSE: To build a text FID from FID component parts.
       10       10             DESCRIPTION: A text FID is built from either a DCB if a DCB# is given
       11       11             or from the FPT if no DCB# is given.
       12       12             The text FID is stored into the area framed by TEXTFID_ in the FPT
       13       13             REFERENCE: Specification File doc. #347 Sect. 12.0                       */
       14       14        /*D* NAME: M$UNFID
       15       15             CALL: CALL M$UNFID(FPT_UNFID) ALTRET(loc);
       16       16             ENVIRONMENT: Master mode
       17       17             INPUT: NAME_     Filename in textc format.
       18       18                    ACCT_     Account text
       19       19                    PASS_     Password text
       20       20                    RES_      Resource text
       21       21                    SN_       Serial number list
       22       22                    WSN_      Work station text
       23       23                    ASN_      Assignment type of FID to build
       24       24                    DCB#      Number of a DCB to obtain this information from
       25       25             OUTPUT: TEXTFID_  The built FID
       26       26                     LEN_  Length of the built FID
       27       27                     B$JIT.ERR if altreturn
       28       28             DESCRIPTION: M$UNFID builds a textual representation of a FID from
       29       29             the input fields described above.
       30       30             If LEN_ is specified, the returned fid's length is returned here
       31       31             Delimiters are supplied as needed.
       32       32        */
       33       33        /*E* ERROR: UMU-E$FIDOFLOW-4
       34       34            MESSAGE: Some field is too big to be part of a legal FID
       35       35            MESSAGE1: Some FID field was too small to hold its requested contents
       36       36        */
       37       37        /*E*   ERROR: UMU-E$NOFIELD-4
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:2    
       38       38             MESSAGE: Required FID field missing
       39       39            MESSAGE1: A FID element was found for which no destination field was provided.
       40       40        */
       41       41        /*E* ERROR: UMU-E$BADFID-4
       42       42             MESSAGE: Illegal FID
       43       43             MESSAGE1: The string passed does not represent a valid FID.
       44       44             MESSAGE2: TEXTFID contained an illegal combination of
       45       45             delimiters(#,/,.,@) describing an illegal FID
       46       46        */
       47       47        /*E* ERROR: UMU-E$BADDCB-4
       48       48             MESSAGE: DCB in your FPT is bad.
       49       49        */
       50       50        UMU$UNFID: PROC;
       51       51        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:3    
       52       52        /***********************************
       53       53         *** INCLUDES
       54       54         ***********************************/
       55       55        %INCLUDE CP_6;
       56     5614        %INCLUDE B_ERRORS_C;
       57     6741        %INCLUDE CP_6_SUBS;
       58     7281        %INCLUDE B$JIT_C;
       59     7595        %INCLUDE B$ROSEG;
       60     7658        %INCLUDE F$DCB;
       61     7707        %INCLUDE FM$CFU;
       62     7752        %INCLUDE UM$CP6V_C;
       63     7939        /***********************************
       64     7940         *** SUBS
       65     7941         ***********************************/
       66     7942        %SUB FPT_V$   = PS0$;
       67     7943        %SUB TEXT$    = PS1$;
       68     7944        %SUB NAME$    = PS2$;
       69     7945        %SUB ACCT$    = PS3$;
       70     7946        %SUB PASS$    = PS4$;
       71     7947        %SUB SERIAL$  = PS5$;
       72     7948        %SUB WSN$     = PS6$;
       73     7949        %SUB ASN$     = PS7$;
       74     7950        %SUB RES$     = PS8$;
       75     7951        %SUB LEN$     = PS9$;
       76     7952        %SUB TEXT#    = 1;
       77     7953        %SUB NAME#    = 2;
       78     7954        %SUB ACCT#    = 3;
       79     7955        %SUB PASS#    = 4;
       80     7956        %SUB SERIAL#  = 5;
       81     7957        %SUB WSN#     = 6;
       82     7958        %SUB ASN#     = 7;
       83     7959        %SUB RES#     = 8;
       84     7960        %SUB LEN#     = 9;
       85     7961        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:4    
       86     7962        /***********************************
       87     7963         *** AUTO DATA
       88     7964         ***********************************/
       89     7965    1   DCL ERR_RETURN REMEMBER;
       90     7966    1   DCL DCB_USED BIT(1) ALIGNED;
       91     7967    1   DCL SN_USED BIT(1) ALIGNED;
       92     7968    1   DCL RES_USED BIT(1) ALIGNED;
       93     7969    1   DCL ACCT_USED BIT(1) ALIGNED;
       94     7970    1   DCL LEN_SPEC BIT(1) ALIGNED;
       95     7971    1   DCL FORCE BIT(1) ALIGNED;               /* Set if FORCE option specified      */
       96     7972    1   DCL STAR_FILE BIT(1) ALIGNED;           /* Set if this is a star file         */
       97     7973    1   DCL USED_LEN SBIN;
       98     7974    1   DCL DCB$ PTR;
       99     7975    1   DCL ASN SBIN;
      100     7976    1   DCL TEXTLEN SBIN;
      101     7977    1   DCL LEN SBIN;
      102     7978    1   DCL 1 PRT,
      103     7979    1         2 P1,
      104     7980    1           3 DELIM CHAR(1),
      105     7981    1           3 STR CHAR(31),
      106     7982    1         2 P1_STR REDEF P1 CHAR(32),
      107     7983    1         2 P1_ARY(0:31) REDEF P1 CHAR(1);
      108     7984        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:5    
      109     7985        /***********************************
      110     7986         *** BASED DATA
      111     7987         ***********************************/
      112     7988        %FPT$UNFID_V;
      113     7991        %VLP_SN(FPTN = VLP$SN,STCLASS = BASED);
      114     8004    1   DCL CHR$STR CHAR(LEN) BASED;
      115     8005    1   DCL 1 TEXT$C BASED,
      116     8006    1         2 LEN UBIN BYTE UNAL,
      117     8007    1         2 STRING CHAR(TEXT$C.LEN);
      118     8008    1   DCL TE$XT CHAR(TEXTLEN) BASED;
      119     8009        %B$JIT0;
      120     8098    1         2 * BIT(1);                       /* END OF NEEDED JIT                  */
      121     8099        %FT$CFUSN;
      122     8102        %FM$CFUJ;
      123     8107    1   DCL ASN$FIELD CHAR(1) UNAL BASED;
      124     8108    1   DCL RET$LEN UBIN BASED;
      125     8109        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:6    
      126     8110        /***********************************
      127     8111         *** SYMREFS
      128     8112         ***********************************/
      129     8113    1   DCL F$CFU$ PTR SYMREF;                  /* PTR TO CFU AREA                    */
      130     8114    1   DCL B$JIT$ PTR SYMREF;
      131     8115    1   DCL B$ROSEG$ PTR SYMREF;
      132     8116    1   DCL PS0$X UBIN CONSTANT INIT(0);        /* Replaces old $PS0 function         */
      133     8117    1   DCL PS0$ REDEF PS0$X PTR;
      134     8118    1   DCL PS1$X UBIN CONSTANT INIT(1);        /* Replaces old $PS1 function         */
      135     8119    1   DCL PS1$ REDEF PS1$X PTR;
      136     8120    1   DCL PS2$X UBIN CONSTANT INIT(2);        /* Replaces old $PS2 function         */
      137     8121    1   DCL PS2$ REDEF PS2$X PTR;
      138     8122    1   DCL PS3$X UBIN CONSTANT INIT(3);        /* Replaces old $PS3 function         */
      139     8123    1   DCL PS3$ REDEF PS3$X PTR;
      140     8124    1   DCL PS4$X UBIN CONSTANT INIT(4);        /* Replaces old $PS4 function         */
      141     8125    1   DCL PS4$ REDEF PS4$X PTR;
      142     8126    1   DCL PS5$X UBIN CONSTANT INIT(5);        /* Replaces old $PS5 function         */
      143     8127    1   DCL PS5$ REDEF PS5$X PTR;
      144     8128    1   DCL PS6$X UBIN CONSTANT INIT(6);        /* Replaces old $PS6 function         */
      145     8129    1   DCL PS6$ REDEF PS6$X PTR;
      146     8130    1   DCL PS7$X UBIN CONSTANT INIT(7);        /* Replaces old $PS7 function         */
      147     8131    1   DCL PS7$ REDEF PS7$X PTR;
      148     8132    1   DCL PS8$X UBIN CONSTANT INIT(8);        /* Replaces old $PS8 function         */
      149     8133    1   DCL PS8$ REDEF PS8$X PTR;
      150     8134    1   DCL PS9$X UBIN CONSTANT INIT(9);        /* Replaces old $PS9 function         */
      151     8135    1   DCL PS9$ REDEF PS9$X PTR;
      152     8136        /***********************************
      153     8137         *** ENTRY DEFS
      154     8138         ***********************************/
      155     8139    1   DCL HFF$DSIZ ENTRY(2);
      156     8140    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
      157     8141        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:7    
      158     8142        /***********************************
      159     8143         *** CODE STARTS HERE
      160     8144         ***********************************/
      161     8145    1           REMEMBER ERR_EXIT IN ERR_RETURN;
      162     8146    1           CALL INITIALIZE;
      163     8147    1           CALL RES;
      164     8148    1           CALL SN;
      165     8149    1           IF ASN=%DEVICE# OR ASN=%FPAP#
      166     8150    1            THEN
      167     8151    1              CALL WSN;
      168     8152    1            ELSE
      169     8153    2            DO;
      170     8154    2               CALL NAME;
      171     8155    2               CALL ACCT;
      172     8156    2               CALL PASS;
      173     8157    2               IF USED_LEN = 0
      174     8158    2                THEN                       /* No output FID yet created          */
      175     8159    2                  CALL ADD_DELIM ('.');    /* Make minimal FID                   */
      176     8160    2               END;
      177     8161    1           IF LEN_SPEC
      178     8162    1            THEN
      179     8163    1              LEN$->RET$LEN = USED_LEN;
      180     8164    1   ERR_EXIT: ;
      181     8165    1           RETURN;                         /* RETURN TO USER                     */
      182     8166        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:8    
      183     8167    1   ERR:    PROC(CODE);
      184     8168        /*I* NAME: ERR
      185     8169             PURPOSE: To set an error into the JIT and exit
      186     8170             CALL: CALL ERR(CODE);   where CODE is the error code for the JIT
      187     8171             DESCRIPTION: B$JIT.ERR is set with UMU-CODE-4 and UMU$UNFID is
      188     8172             exited.
      189     8173        */
      190     8174    2   DCL CODE SBIN;
      191     8175    2           B$JIT$->B$JIT.ERR = '251525400004'O; /* UMU with severity 4           */
      192     8176    2           B$JIT$->B$JIT.ERR.CODE = CODE;
      193     8177    2           UNWIND TO ERR_RETURN;
      194     8178    2   END ERR;
      195     8179        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:9    
      196     8180    1   INITIALIZE: PROC;
      197     8181    2           IF FPT_V$->FPT$UNFID_V.DCB#=0
      198     8182    2            THEN
      199     8183    3            DO;
      200     8184    3               CALL HFF$NILERASE(ASN#) ALTRET(NOFIELD);
      201     8185    3               ASN = ASCBIN(ASN$->ASN$FIELD);
      202     8186    3               DCB_USED = %NO#;
      203     8187    3               END;
      204     8188    3            ELSE DO;
      205     8189    3               IF FPT_V$->FPT$UNFID_V.DCB# > B$ROSEG$->B$ROSEG.NUMDCBS
      206     8190    3                THEN
      207     8191    3                  CALL ERR(%E$BADDCB#);
      208     8192    3               DCB$ = DCBADDR(FPT_V$->FPT$UNFID_V.DCB#);
      209     8193    3               IF DCB$ = ADDR(NIL)
      210     8194    3                THEN
      211     8195    3                  CALL ERR(%E$BADDCB#);
      212     8196    3               DCB_USED = %YES#;
      213     8197    3               ASN = DCB$->F$DCB.ASN;
      214     8198    3               END;
      215     8199    2           CALL HFF$NILERASE(TEXT#) ALTRET(NOFIELD);
      216     8200    3           DO WHILE('0'B);
      217     8201    3   NOFIELD:   CALL ERR(%E$NOFIELD);
      218     8202    3              END;
      219     8203    2           CALL HFF$DSIZ(TEXT#,TEXTLEN);
      220     8204    2           IF TEXTLEN=0
      221     8205    2            THEN
      222     8206    2              CALL ERR(%E$FIDOFLOW);
      223     8207    2           LEN_SPEC = '0'B;
      224     8208    2           CALL HFF$NILERASE(LEN#) ALTRET(NOLEN);
      225     8209    2           LEN_SPEC = '1'B;
      226     8210    2   NOLEN:
      227     8211    2           TEXT$->TE$XT = ' ';
      228     8212    2           SN_USED = %NO#;
      229     8213    2           RES_USED = %NO#;
      230     8214    2           USED_LEN = 0;
      231     8215    2           IF FPT_V$ -> FPT$UNFID_V.FORCE  /* IF FORCE requested                 */
      232     8216    2             AND ASN = %FILE#              /* AND it's a disk file               */
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:10   
      233     8217    2            THEN                           /* THEN it's OK to FORCE              */
      234     8218    2              FORCE = %YES#;
      235     8219    2            ELSE                           /* No default display                 */
      236     8220    2              FORCE = %NO#;
      237     8221    2           IF ASN ~= %FILE#
      238     8222    2            THEN                           /* Not a disk file                    */
      239     8223    2              STAR_FILE = %NO#;            /* Couldn't be a STAR file            */
      240     8224    2            ELSE                           /* Check for STAR file                */
      241     8225    2              IF DCB_USED
      242     8226    2               THEN
      243     8227    2                 IF SUBSTR(DCB$ -> F$DCB.NAME.C,0,1) = '*'
      244     8228    2                   AND DCB$ -> F$DCB.NAME.L > 0
      245     8229    2                  THEN                     /* A star-file                        */
      246     8230    3                  DO;
      247     8231    3                     STAR_FILE = %YES#;
      248     8232    3                     FORCE = %NO#;         /* Don't FORCE display for star-files */
      249     8233    3                     END;
      250     8234    2                  ELSE
      251     8235    2                    STAR_FILE = %NO#;
      252     8236    2               ELSE                        /* NAME is passed                     */
      253     8237    3               DO;
      254     8238    3                  CALL HFF$NILERASE(NAME#) ALTRET(INIT_DONE);
      255     8239    3                  IF SUBSTR(NAME$ -> TEXT$C.STRING,0,1) = '*'
      256     8240    3                    AND NAME$ -> TEXT$C.LEN > 0
      257     8241    3                   THEN                    /* A star-file                        */
      258     8242    4                   DO;
      259     8243    4                      STAR_FILE = %YES#;
      260     8244    4                      FORCE = %NO#;        /* Don't FORCE display of star-files  */
      261     8245    4                      END;
      262     8246    3                   ELSE
      263     8247    3                     STAR_FILE = %NO#;
      264     8248    3                  END;
      265     8249
      266     8250    2   INIT_DONE: RETURN;
      267     8251    2   END INITIALIZE;
      268     8252        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:11   
      269     8253    1   SHRINK_STUFF: PROC(LENGTH);
      270     8254        /*I* NAME: SHRINK_STUFF
      271     8255             CALL: CALL SHRINK_STUFF(LENGTH);
      272     8256                   where LENGTH is the length of the information in PRT.
      273     8257             PURPOSE: To remove trailing blanks and nulls from PRT and add
      274     8258             it to the end of the growing FID. TEXTFID_ overflow is checked.          */
      275     8259    2   DCL LENGTH SBIN;
      276     8260    2   DCL LEN1 SBIN;
      277     8261    2           LEN1 = LENGTH;
      278     8262    3           DO WHILE(LEN1>0 AND PRT.P1_ARY(LEN1-1)=' ');
      279     8263    3              LEN1 = LEN1 - 1;
      280     8264    3              END;
      281     8265    2           CALL INSERT(TEXT$->TE$XT,USED_LEN,,
      282     8266    2             PRT.P1_STR);
      283     8267    2           USED_LEN = USED_LEN + LEN1;
      284     8268    2           IF USED_LEN>TEXTLEN
      285     8269    3            THEN DO;
      286     8270    3               IF LEN_SPEC
      287     8271    3                THEN
      288     8272    3                  LEN$->RET$LEN = TEXTLEN;
      289     8273    3               CALL ERR(%E$FIDOFLOW);
      290     8274    3               END;
      291     8275    2           RETURN;
      292     8276    2   END SHRINK_STUFF;
      293     8277        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:12   
      294     8278    1   ADD_DELIM: PROC(DELIMITER);
      295     8279        /*I* NAME: ADD_DELIM
      296     8280             CALL: CALL ADD_DELIM(DELIMITER);
      297     8281                   where DELIMITER is the one-character delimiter to be
      298     8282                   appended to the right of the growing string.
      299     8283             PURPOSE: To tack a delimiter on the end of the growing string
      300     8284             without disturbing anything else. TEXTFID_ overflow is checked.          */
      301     8285    2   DCL DELIMITER CHAR(1);
      302     8286    2           CALL INSERT(TEXT$->TE$XT,USED_LEN,,DELIMITER);
      303     8287    2           USED_LEN = USED_LEN + 1;
      304     8288    2           IF USED_LEN>TEXTLEN
      305     8289    3            THEN DO;
      306     8290    3               IF LEN_SPEC
      307     8291    3                THEN
      308     8292    3                  LEN$->RET$LEN = TEXTLEN;
      309     8293    3               CALL ERR(%E$FIDOFLOW);
      310     8294    3               END;
      311     8295    2           RETURN;
      312     8296    2   END ADD_DELIM;
      313     8297        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:13   
      314     8298    1   RES:    PROC;
      315     8299        /*I* NAME: RES
      316     8300             CALL: CALL RES;
      317     8301             PURPOSE: To fill in the RESOURCE portion of the FID
      318     8302        */
      319     8303    2   DCL CHR$4 CHAR(4) BASED;
      320     8304    2   DCL ONE UBIN CONSTANT INIT(1);
      321     8305    2   DCL CHAR_ONE REDEF ONE CHAR(4);
      322     8306    2   DCL RES_TYPE CHAR(2);
      323     8307    2           PRT.P1_STR = ' ';
      324     8308    2           IF DCB_USED
      325     8309    2            THEN
      326     8310    2              PRT.P1_STR = DCB$->F$DCB.RES;
      327     8311    2            ELSE
      328     8312    3            DO;
      329     8313    3               CALL HFF$NILERASE(RES#) ALTRET(NO_RES);
      330     8314    3               CALL HFF$DSIZ(RES#,LEN);    /* Adjust CHR$STR size                */
      331     8315    3               PRT.P1_STR = RES$->CHR$STR;
      332     8316    3   NO_RES:
      333     8317    3               END;
      334     8318        /***
      335     8319         *** Take care of invalid RES fields
      336     8320         ***/
      337     8321    2           RES_TYPE = SUBSTR(PRT.P1_STR,0,2);
      338     8322    3           DO CASE(ASN);
      339     8323    3            CASE(%FILE#);
      340     8324    3              IF RES_TYPE~='DP'
      341     8325    3               THEN
      342     8326    3                 PRT.P1_STR = ' ';
      343     8327    3               ELSE GOTO NO_SN;
      344     8328    3              IF DCB_USED
      345     8329    3               THEN
      346     8330    3                 IF DCB$->F$DCB.PSN~=' '
      347     8331    3                  THEN
      348     8332    3                    PRT.P1_STR = 'DP';     /* SN to follow                       */
      349     8333    3                  ELSE                     /* No SN to follow                    */
      350     8334    3                    GOTO NO_SN;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:14   
      351     8335    4               ELSE DO;
      352     8336    4                  CALL HFF$NILERASE(SERIAL#) ALTRET(NO_SN);
      353     8337    4                  IF NOT (SERIAL$->CHR$4=CHAR_ONE AND SERIAL$->VLP$SN.SN#(0)=' ')
      354     8338    4                   THEN
      355     8339    4                     PRT.P1_STR = 'DP';
      356     8340    4                   ELSE                    /* NO SN PASSED                       */
      357     8341    4   NO_SN:            IF FORCE              /* IF FORCE is allowed                */
      358     8342    4                      THEN                 /* FORCE of PSN is likely             */
      359     8343    4                        PRT.P1_STR = 'DP'; /* FORCE RES, too (we may stomp later)*/
      360     8344    4                      ELSE                 /* FORCE of PSN is impossible         */
      361     8345    4                        ;
      362     8346    4                  END;
      363     8347    3            CASE(%TAPE#);
      364     8348    3              IF RES_TYPE~='LT' AND RES_TYPE~='MT'
      365     8349    3               THEN
      366     8350    3                 PRT.P1_STR = 'LT';
      367     8351    3            CASE(%COMGROUP#);
      368     8352    3              IF RES_TYPE~='CG'
      369     8353    3               THEN
      370     8354    3                 PRT.P1_STR = 'CG';
      371     8355    3            CASE(%FPAP#);
      372     8356    3              IF RES_TYPE~='AP'
      373     8357    3               THEN
      374     8358    3                 PRT.P1_STR = 'AP';
      375     8359    3            CASE(%DEVICE#);
      376     8360    3              IF PRT.P1_STR = ' '
      377     8361    3               THEN
      378     8362    3                 CALL ERR(%E$NOFIELD);
      379     8363    3            END;                           /* END CASE (ASN)                     */
      380     8364    2           IF PRT.P1_STR~=' ' AND PRT.P1_STR~=BINASC(0)
      381     8365    3            THEN DO;
      382     8366    3               RES_USED = %YES#;
      383     8367    3               CALL SHRINK_STUFF(4);
      384     8368    3               END;
      385     8369    2           RETURN;
      386     8370    2   END RES;
      387     8371        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:15   
      388     8372    1   SN:     PROC;
      389     8373        /*I* NAME: SN
      390     8374             CALL: CALL SN;
      391     8375             PURPOSE: SN fills in the SN portion of the FID
      392     8376             ASNs.                                                                    */
      393     8377    2   DCL CFU$ PTR;
      394     8378    2   DCL IDX SBIN;
      395     8379    2   DCL SNS SBIN;
      396     8380    2   DCL SNS_CHR REDEF SNS CHAR(4);
      397     8381    2   DCL CHR$4 CHAR(4) BASED;
      398     8382    2   DCL CHR$8 CHAR(8) BASED;
      399     8383    2           PRT.P1_STR = '#';
      400     8384    2           IF DCB_USED
      401     8385    2            THEN
      402     8386    2              IF ASN=%FILE#
      403     8387    2                OR ASN=%COMGROUP#
      404     8388    2                OR DCB$ -> F$DCB.FCD = %NO# /* File is closed                    */
      405     8389    2                OR DCB$->F$DCB.CFU$=ADDR(NIL)
      406     8390    2                OR NOT (ASN=%TAPE#
      407     8391    2                OR (ASN=%DEVICE#
      408     8392    2                AND (SUBSTR(DCB$->F$DCB.RES,0,2)='MT'
      409     8393    2                OR SUBSTR(DCB$->F$DCB.RES,0,2)='FT')))
      410     8394    3               THEN DO;
      411     8395    3                  IF ASN = %DEVICE#
      412     8396    3                   THEN GOTO NO_SN;
      413     8397    3                  IF DCB$->F$DCB.PSN~=' '
      414     8398    3                   THEN
      415     8399    4                   DO;
      416     8400    4                      PRT.P1.STR = DCB$->F$DCB.PSN;
      417     8401    4                      CALL SHRINK_STUFF(7);
      418     8402    4                      SN_USED = %YES#;
      419     8403    4                      END;
      420     8404    3                   ELSE
      421     8405    3   F_PSN_TRY:        IF FORCE AND ASN = %FILE#
      422     8406    3                      THEN                 /* No PSN, force default to DP#jit    */
      423     8407    4                      DO;
      424     8408    4                         CALL HFF$NILERASE(ACCT#) ALTRET(F_PSN_OK);
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:16   
      425     8409    4                         IF ACCT$ -> CHR$8 ~= ' ' /* MAD will give PSN from ACCT */
      426     8410    4                           OR B$JIT$ -> B$JIT.FPSN = ' ' /* OR no default PSN    */
      427     8411    4                          THEN             /* We can't FORCE the PSN display     */
      428     8412    5                          DO;
      429     8413    5                             USED_LEN = USED_LEN -2; /* Stomp on 'DP' we added   */
      430     8414    5                             CALL INSERT(TEXT$->TE$XT,USED_LEN,,'  ');
      431     8415    5                             RES_USED = %NO#;
      432     8416    5                             GOTO NO_SN;
      433     8417    5                             END;
      434     8418    4   F_PSN_OK:                               /* No ACCT provided, FORCE is OK      */
      435     8419    4                         PRT.P1.STR = B$JIT$ -> B$JIT.FPSN;
      436     8420    4                         CALL SHRINK_STUFF(7);
      437     8421    4                         SN_USED = %YES#;
      438     8422    4                         END;
      439     8423    3                  END;
      440     8424    2               ELSE
      441     8425    3               DO;                         /* OPEN LT OR FT FID WITH >1 SERIALS  */
      442     8426                                                /* Find beginning of SN CFU chain     */
      443     8427    3                  IF DCB$->F$DCB.ACS = %JRNL#
      444     8428    3                   THEN                    /* Journal tape                       */
      445     8429    3                     IF DCB$->F$DCB.CFU$ -> FM$CFUJ.SNLINKX = 0
      446     8430    3                      THEN
      447     8431    3                        CFU$ = ADDR(NIL);
      448     8432    3                      ELSE
      449     8433    3                        CFU$ = PINCRW(F$CFU$,DCB$ -> F$DCB.CFU$ -> FM$CFUJ.SNLINKX);
      450     8434    3                   ELSE                    /* Vanilla tape                       */
      451     8435    3                     CFU$ = DCB$->F$DCB.CFU$;
      452     8436    4                  DO WHILE(CFU$~=ADDR(NIL));
      453     8437                                                /* Print each SN in this table        */
      454     8438    4                     IDX = 0;
      455     8439    5                     DO WHILE(IDX<CFU$->FT$CFUSN.NUM);
      456     8440    5                        PRT.P1.STR = CFU$->FT$CFUSN.SN(IDX);
      457     8441    5                        CALL SHRINK_STUFF(7);
      458     8442    5                        IDX = IDX+1;
      459     8443    5                        END;
      460     8444                                                /* Check for a table linked to this'n */
      461     8445    4                     IF CFU$->FT$CFUSN.LINKX=0
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:17   
      462     8446    4                      THEN
      463     8447    4                        CFU$ = ADDR(NIL);
      464     8448    4                      ELSE
      465     8449    4                        CFU$ = PINCRW(F$CFU$,CFU$->FT$CFUSN.LINKX);
      466     8450    4                     END;
      467     8451    3                  SN_USED = %YES#;
      468     8452    3                  END;
      469     8453    2            ELSE
      470     8454    3            DO;                            /* Not DCB                            */
      471     8455    3               CALL HFF$NILERASE(SERIAL#) ALTRET(F_PSN_TRY);
      472     8456    3               SNS_CHR = SERIAL$->CHR$4;
      473     8457    3               IF NOT (SNS=1 AND SERIAL$->VLP$SN.SN#(0)=' ')
      474     8458    3                THEN
      475     8459    4                DO IDX=0 TO SNS-1;
      476     8460    4                   PRT.P1.STR = SERIAL$->VLP$SN.SN#(IDX);
      477     8461    4                   CALL SHRINK_STUFF(7);
      478     8462    4                   SN_USED = %YES#;
      479     8463    4                   END;
      480     8464    3                ELSE                       /* SN list is worthless               */
      481     8465    3                  GOTO F_PSN_TRY;          /* Try FORCE to print PSN             */
      482     8466    3               END;
      483     8467    2   NO_SN:
      484     8468    2           RETURN;
      485     8469    2   END SN;
      486     8470        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:18   
      487     8471    1   NAME:   PROC;
      488     8472        /*I* NAME: NAME
      489     8473             CALL: CALL NAME;
      490     8474             PURPOSE: To insert the NAME portion of the FID for non-DEVICE FIDs       */
      491     8475    2   DCL NAME_LEN SBIN;
      492     8476    2   DCL 1 NA$ME BASED,
      493     8477    2         2 LEN CHAR(1),
      494     8478    2         2 STRING CHAR(NAME_LEN);
      495     8479    2           PRT.P1_STR = '/';
      496     8480    2           IF DCB_USED
      497     8481    2            THEN
      498     8482    2              PRT.P1.STR = ADDR(DCB$->F$DCB.NAME)->TEXT$C.STRING;
      499     8483    2            ELSE
      500     8484    3            DO;
      501     8485    3               CALL HFF$NILERASE(NAME#) ALTRET(NO_NAME);
      502     8486    3               NAME_LEN = ASCBIN(NAME$->NA$ME.LEN);
      503     8487    3               IF NAME_LEN>31
      504     8488    3                THEN
      505     8489    3                  CALL ERR(%E$BADFID);
      506     8490    3               PRT.P1.STR = NAME$->NA$ME.STRING;
      507     8491    3               END;
      508     8492    2   NO_NAME:
      509     8493    2           IF PRT.P1.STR~=' ' OR (RES_USED AND NOT SN_USED)
      510     8494    2            THEN
      511     8495    3            DO;
      512     8496    3               IF ~RES_USED
      513     8497    3                THEN
      514     8498    3                  PRT.P1_STR = PRT.P1.STR; /* No leading '/' without RES         */
      515     8499    3               CALL SHRINK_STUFF(32);
      516     8500    3               END;
      517     8501    2           RETURN;
      518     8502    2   END NAME;
      519     8503        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:19   
      520     8504    1   ACCT:   PROC;
      521     8505        /*I* NAME: ACCT
      522     8506             CALL: CALL ACCT;
      523     8507             PURPOSE: To insert the ACCT portion of FID for non-DEVICE FIDs           */
      524     8508    2           IF STAR_FILE
      525     8509    2            THEN                           /* ACCOUNT is useless                 */
      526     8510    2              PRT.P1.STR = ' ';            /* Don't print it                     */
      527     8511    2            ELSE                           /* ACCOUNT is significant             */
      528     8512    3            DO;
      529     8513    3               IF DCB_USED
      530     8514    3                THEN
      531     8515    3                  PRT.P1.STR = DCB$->F$DCB.ACCT;
      532     8516    3                ELSE
      533     8517    4                DO;
      534     8518    4                   CALL HFF$NILERASE(ACCT#) ALTRET(NO_ACCT);
      535     8519    4                   CALL HFF$DSIZ(ACCT#,LEN); /* Adjust CHR$STR size              */
      536     8520    4                   PRT.P1.STR = ACCT$->CHR$STR;
      537     8521    4                   END;
      538     8522    3               IF PRT.P1.STR = ' '
      539     8523    3                THEN                       /* No account found                   */
      540     8524    3   NO_ACCT:       IF FORCE
      541     8525    3                   THEN                    /* FORCED to get default from JIT     */
      542     8526    3                     PRT.P1.STR = B$JIT$ -> B$JIT.FACCN;
      543     8527    3               END;
      544     8528    2           IF PRT.P1.STR = ' '
      545     8529    2            THEN                           /* ACCOUNT isn't to be printed        */
      546     8530    2              ACCT_USED = %NO#;
      547     8531    2            ELSE                           /* ACCOUNT needs to be printed        */
      548     8532    3            DO;
      549     8533    3               PRT.P1.DELIM = '.';
      550     8534    3               CALL SHRINK_STUFF(9);
      551     8535    3               ACCT_USED = %YES#;
      552     8536    3               END;
      553     8537    2           RETURN;
      554     8538    2   END ACCT;
      555     8539        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:20   
      556     8540    1   PASS:   PROC;
      557     8541        /*I* NAME: PASS
      558     8542             CALL: CALL PASS;
      559     8543             PURPOSE: To insert the PASSWORD portion of the FID for non-DEVICE FIDs   */
      560     8544    2           IF DCB_USED=%NO#
      561     8545    2            THEN
      562     8546    3            DO;
      563     8547    3               CALL HFF$NILERASE(PASS#) ALTRET(NO_PASS);
      564     8548    3               CALL HFF$DSIZ(PASS#,LEN);   /* Adjust CHR$STR size                */
      565     8549    3               PRT.P1.STR = PASS$->CHR$STR;
      566     8550    3               PRT.P1.DELIM = '.';
      567     8551    3               IF PRT.P1.STR~=' '
      568     8552    3                THEN
      569     8553    4                DO;
      570     8554    4                   IF NOT ACCT_USED
      571     8555    4                    THEN                   /* We need a dot for null acount      */
      572     8556    4                      CALL ADD_DELIM ('.');
      573     8557    4                   CALL SHRINK_STUFF(9);   /* Add actual PASSWORD                */
      574     8558    4                   END;
      575     8559    3               END;
      576     8560    2   NO_PASS:
      577     8561    2           RETURN;
      578     8562    2   END PASS;
      579     8563        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:21   
      580     8564    1   WSN:    PROC;
      581     8565        /*I* NAME: WSN
      582     8566             CALL: CALL WSN;
      583     8567             PURPOSE: To insert the WSN portion of the FID for DEVICE FIDs            */
      584     8568    2           IF DCB_USED
      585     8569    2            THEN
      586     8570    2              PRT.P1.STR = DCB$->F$DCB.WSN;
      587     8571    2            ELSE
      588     8572    3            DO;
      589     8573    3               CALL HFF$NILERASE(WSN#) ALTRET(NO_WSN);
      590     8574    3               CALL HFF$DSIZ(WSN#,LEN);    /* Adjust CHR$STR size                */
      591     8575    3               PRT.P1.STR = WSN$->CHR$STR;
      592     8576    3               END;
      593     8577    2           IF PRT.P1.STR=' '
      594     8578    2            THEN
      595     8579    2   NO_WSN:    IF ASN=%DEVICE# AND NOT SN_USED
      596     8580    2               THEN
      597     8581    3               DO;
      598     8582    3                  PRT.P1.DELIM = '#';
      599     8583    3                  CALL SHRINK_STUFF(1);
      600     8584    3                  END;
      601     8585    2               ELSE
      602     8586    2                 ;
      603     8587    2            ELSE
      604     8588    3            DO;
      605     8589    3               IF PRT.P1.STR='@'
      606     8590    3                THEN
      607     8591    3                  PRT.P1.STR = B$JIT$->B$JIT.WOO;
      608     8592    3               PRT.P1.DELIM = '@';
      609     8593    3               CALL SHRINK_STUFF(9);
      610     8594    3               END;
      611     8595    2           RETURN;
      612     8596    2   END WSN;
      613     8597    1   END UMU$UNFID;

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:22   
--  Include file information  --

   UM$CP6V_C.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure UMU$UNFID.

   Procedure UMU$UNFID requires 772 words for executable code.
   Procedure UMU$UNFID requires 38 words of local(AUTO) storage.

    No errors detected in file UMU$UNFID.:E05TSI    .

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:23   

 Object Unit name= UMU$UNFID                                  File name= UMU$UNFID.:E05TOU
 UTS= JUL 30 '97 07:01:22.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     19     23  UMU$UNFID
    2   Proc  even  none   772   1404  UMU$UNFID
    3  RoData even  none    27     33  UMU$UNFID

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  UMU$UNFID

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 HFF$NILERASE
         yes           Std       2 HFF$DSIZ
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AUNWIND
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:24   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  F$CFU$                                B$JIT$
     B$ROSEG$                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:25   


        1        1        /*M* UMU$UNFID - Monitor service to convert a FID to text format. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=1,THI=1    */
        8        8        /*P* NAME: M$UNFID
        9        9             PURPOSE: To build a text FID from FID component parts.
       10       10             DESCRIPTION: A text FID is built from either a DCB if a DCB# is given
       11       11             or from the FPT if no DCB# is given.
       12       12             The text FID is stored into the area framed by TEXTFID_ in the FPT
       13       13             REFERENCE: Specification File doc. #347 Sect. 12.0                       */
       14       14        /*D* NAME: M$UNFID
       15       15             CALL: CALL M$UNFID(FPT_UNFID) ALTRET(loc);
       16       16             ENVIRONMENT: Master mode
       17       17             INPUT: NAME_     Filename in textc format.
       18       18                    ACCT_     Account text
       19       19                    PASS_     Password text
       20       20                    RES_      Resource text
       21       21                    SN_       Serial number list
       22       22                    WSN_      Work station text
       23       23                    ASN_      Assignment type of FID to build
       24       24                    DCB#      Number of a DCB to obtain this information from
       25       25             OUTPUT: TEXTFID_  The built FID
       26       26                     LEN_  Length of the built FID
       27       27                     B$JIT.ERR if altreturn
       28       28             DESCRIPTION: M$UNFID builds a textual representation of a FID from
       29       29             the input fields described above.
       30       30             If LEN_ is specified, the returned fid's length is returned here
       31       31             Delimiters are supplied as needed.
       32       32        */
       33       33        /*E* ERROR: UMU-E$FIDOFLOW-4
       34       34            MESSAGE: Some field is too big to be part of a legal FID
       35       35            MESSAGE1: Some FID field was too small to hold its requested contents
       36       36        */
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:26   
       37       37        /*E*   ERROR: UMU-E$NOFIELD-4
       38       38             MESSAGE: Required FID field missing
       39       39            MESSAGE1: A FID element was found for which no destination field was provided.
       40       40        */
       41       41        /*E* ERROR: UMU-E$BADFID-4
       42       42             MESSAGE: Illegal FID
       43       43             MESSAGE1: The string passed does not represent a valid FID.
       44       44             MESSAGE2: TEXTFID contained an illegal combination of
       45       45             delimiters(#,/,.,@) describing an illegal FID
       46       46        */
       47       47        /*E* ERROR: UMU-E$BADDCB-4
       48       48             MESSAGE: DCB in your FPT is bad.
       49       49        */
       50       50        UMU$UNFID: PROC;

     50  2 000000   000000 700200 xent  UMU$UNFID    TSX0  ! X66_AUTO_0
         2 000001   000046 000000                    ZERO    38,0

       51       51        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:27   
       52       52        /***********************************
       53       53         *** INCLUDES
       54       54         ***********************************/
       55       55        %INCLUDE CP_6;
       56     5614        %INCLUDE B_ERRORS_C;
       57     6741        %INCLUDE CP_6_SUBS;
       58     7281        %INCLUDE B$JIT_C;
       59     7595        %INCLUDE B$ROSEG;
       60     7658        %INCLUDE F$DCB;
       61     7707        %INCLUDE FM$CFU;
       62     7752        %INCLUDE UM$CP6V_C;
       63     7939        /***********************************
       64     7940         *** SUBS
       65     7941         ***********************************/
       66     7942        %SUB FPT_V$   = PS0$;
       67     7943        %SUB TEXT$    = PS1$;
       68     7944        %SUB NAME$    = PS2$;
       69     7945        %SUB ACCT$    = PS3$;
       70     7946        %SUB PASS$    = PS4$;
       71     7947        %SUB SERIAL$  = PS5$;
       72     7948        %SUB WSN$     = PS6$;
       73     7949        %SUB ASN$     = PS7$;
       74     7950        %SUB RES$     = PS8$;
       75     7951        %SUB LEN$     = PS9$;
       76     7952        %SUB TEXT#    = 1;
       77     7953        %SUB NAME#    = 2;
       78     7954        %SUB ACCT#    = 3;
       79     7955        %SUB PASS#    = 4;
       80     7956        %SUB SERIAL#  = 5;
       81     7957        %SUB WSN#     = 6;
       82     7958        %SUB ASN#     = 7;
       83     7959        %SUB RES#     = 8;
       84     7960        %SUB LEN#     = 9;
       85     7961        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:28   
       86     7962        /***********************************
       87     7963         *** AUTO DATA
       88     7964         ***********************************/
       89     7965    1   DCL ERR_RETURN REMEMBER;
       90     7966    1   DCL DCB_USED BIT(1) ALIGNED;
       91     7967    1   DCL SN_USED BIT(1) ALIGNED;
       92     7968    1   DCL RES_USED BIT(1) ALIGNED;
       93     7969    1   DCL ACCT_USED BIT(1) ALIGNED;
       94     7970    1   DCL LEN_SPEC BIT(1) ALIGNED;
       95     7971    1   DCL FORCE BIT(1) ALIGNED;               /* Set if FORCE option specified      */
       96     7972    1   DCL STAR_FILE BIT(1) ALIGNED;           /* Set if this is a star file         */
       97     7973    1   DCL USED_LEN SBIN;
       98     7974    1   DCL DCB$ PTR;
       99     7975    1   DCL ASN SBIN;
      100     7976    1   DCL TEXTLEN SBIN;
      101     7977    1   DCL LEN SBIN;
      102     7978    1   DCL 1 PRT,
      103     7979    1         2 P1,
      104     7980    1           3 DELIM CHAR(1),
      105     7981    1           3 STR CHAR(31),
      106     7982    1         2 P1_STR REDEF P1 CHAR(32),
      107     7983    1         2 P1_ARY(0:31) REDEF P1 CHAR(1);
      108     7984        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:29   
      109     7985        /***********************************
      110     7986         *** BASED DATA
      111     7987         ***********************************/
      112     7988        %FPT$UNFID_V;
      113     7991        %VLP_SN(FPTN = VLP$SN,STCLASS = BASED);
      114     8004    1   DCL CHR$STR CHAR(LEN) BASED;
      115     8005    1   DCL 1 TEXT$C BASED,
      116     8006    1         2 LEN UBIN BYTE UNAL,
      117     8007    1         2 STRING CHAR(TEXT$C.LEN);
      118     8008    1   DCL TE$XT CHAR(TEXTLEN) BASED;
      119     8009        %B$JIT0;
      120     8098    1         2 * BIT(1);                       /* END OF NEEDED JIT                  */
      121     8099        %FT$CFUSN;
      122     8102        %FM$CFUJ;
      123     8107    1   DCL ASN$FIELD CHAR(1) UNAL BASED;
      124     8108    1   DCL RET$LEN UBIN BASED;
      125     8109        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:30   
      126     8110        /***********************************
      127     8111         *** SYMREFS
      128     8112         ***********************************/
      129     8113    1   DCL F$CFU$ PTR SYMREF;                  /* PTR TO CFU AREA                    */
      130     8114    1   DCL B$JIT$ PTR SYMREF;
      131     8115    1   DCL B$ROSEG$ PTR SYMREF;
      132     8116    1   DCL PS0$X UBIN CONSTANT INIT(0);        /* Replaces old $PS0 function         */
      133     8117    1   DCL PS0$ REDEF PS0$X PTR;
      134     8118    1   DCL PS1$X UBIN CONSTANT INIT(1);        /* Replaces old $PS1 function         */
      135     8119    1   DCL PS1$ REDEF PS1$X PTR;
      136     8120    1   DCL PS2$X UBIN CONSTANT INIT(2);        /* Replaces old $PS2 function         */
      137     8121    1   DCL PS2$ REDEF PS2$X PTR;
      138     8122    1   DCL PS3$X UBIN CONSTANT INIT(3);        /* Replaces old $PS3 function         */
      139     8123    1   DCL PS3$ REDEF PS3$X PTR;
      140     8124    1   DCL PS4$X UBIN CONSTANT INIT(4);        /* Replaces old $PS4 function         */
      141     8125    1   DCL PS4$ REDEF PS4$X PTR;
      142     8126    1   DCL PS5$X UBIN CONSTANT INIT(5);        /* Replaces old $PS5 function         */
      143     8127    1   DCL PS5$ REDEF PS5$X PTR;
      144     8128    1   DCL PS6$X UBIN CONSTANT INIT(6);        /* Replaces old $PS6 function         */
      145     8129    1   DCL PS6$ REDEF PS6$X PTR;
      146     8130    1   DCL PS7$X UBIN CONSTANT INIT(7);        /* Replaces old $PS7 function         */
      147     8131    1   DCL PS7$ REDEF PS7$X PTR;
      148     8132    1   DCL PS8$X UBIN CONSTANT INIT(8);        /* Replaces old $PS8 function         */
      149     8133    1   DCL PS8$ REDEF PS8$X PTR;
      150     8134    1   DCL PS9$X UBIN CONSTANT INIT(9);        /* Replaces old $PS9 function         */
      151     8135    1   DCL PS9$ REDEF PS9$X PTR;
      152     8136        /***********************************
      153     8137         *** ENTRY DEFS
      154     8138         ***********************************/
      155     8139    1   DCL HFF$DSIZ ENTRY(2);
      156     8140    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
      157     8141        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:31   
      158     8142        /***********************************
      159     8143         *** CODE STARTS HERE
      160     8144         ***********************************/
      161     8145    1           REMEMBER ERR_EXIT IN ERR_RETURN;

   8145  2 000002   000044 635000 2                  EAA     ERR_EXIT
         2 000003   200004 452500                    STP2    ERR_RETURN,,AUTO
         2 000004   200005 755100                    STA     ERR_RETURN+1,,AUTO

      162     8146    1           CALL INITIALIZE;

   8146  2 000005   000062 701000 2                  TSX1    INITIALIZE
         2 000006   000000 011000                    NOP     0

      163     8147    1           CALL RES;

   8147  2 000007   000372 701000 2                  TSX1    RES
         2 000010   000000 011000                    NOP     0

      164     8148    1           CALL SN;

   8148  2 000011   000572 701000 2                  TSX1    SN
         2 000012   000000 011000                    NOP     0

      165     8149    1           IF ASN=%DEVICE# OR ASN=%FPAP#

   8149  2 000013   200017 235100                    LDA     ASN,,AUTO
         2 000014   000003 115007                    CMPA    3,DL
         2 000015   000020 600000 2                  TZE     s:8151
         2 000016   000011 115007                    CMPA    9,DL
         2 000017   000023 601000 2                  TNZ     s:8154

      166     8150    1            THEN
      167     8151    1              CALL WSN;

   8151  2 000020   001313 701000 2                  TSX1    WSN
         2 000021   000000 011000                    NOP     0
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:32   
         2 000022   000037 710000 2                  TRA     s:8161

      168     8152    1            ELSE
      169     8153    2            DO;

      170     8154    2               CALL NAME;

   8154  2 000023   001064 701000 2                  TSX1    NAME
         2 000024   000000 011000                    NOP     0

      171     8155    2               CALL ACCT;

   8155  2 000025   001154 701000 2                  TSX1    ACCT
         2 000026   000000 011000                    NOP     0

      172     8156    2               CALL PASS;

   8156  2 000027   001245 701000 2                  TSX1    PASS
         2 000030   000000 011000                    NOP     0

      173     8157    2               IF USED_LEN = 0

   8157  2 000031   200015 235100                    LDA     USED_LEN,,AUTO
         2 000032   000037 601000 2                  TNZ     s:8161

      174     8158    2                THEN                       /* No output FID yet created          */
      175     8159    2                  CALL ADD_DELIM ('.');    /* Make minimal FID                   */

   8159  2 000033   000001 236000 3                  LDQ     1
         2 000034   200035 756100                    STQ     IDX+1,,AUTO
         2 000035   000341 701000 2                  TSX1    ADD_DELIM
         2 000036   000000 011000                    NOP     0

      176     8160    2               END;

      177     8161    1           IF LEN_SPEC

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:33   
   8161  2 000037   200012 234100                    SZN     LEN_SPEC,,AUTO
         2 000040   000044 605000 2                  TPL     ERR_EXIT

      178     8162    1            THEN
      179     8163    1              LEN$->RET$LEN = USED_LEN;

   8163  2 000041   200015 235100                    LDA     USED_LEN,,AUTO
         2 000042   000011 470400 1                  LDP0    PS9$X
         2 000043   000000 755100                    STA     0,,PR0

   8161  2 000044                       ERR_EXIT     null
      180     8164    1   ERR_EXIT: ;
      181     8165    1           RETURN;                         /* RETURN TO USER                     */

   8165  2 000044   000000 702200 xent               TSX2  ! X66_ARET

      182     8166        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:34   
      183     8167    1   ERR:    PROC(CODE);

   8167  2 000045   200042 741300       ERR          STX1  ! LEN1+2,,AUTO

      184     8168        /*I* NAME: ERR
      185     8169             PURPOSE: To set an error into the JIT and exit
      186     8170             CALL: CALL ERR(CODE);   where CODE is the error code for the JIT
      187     8171             DESCRIPTION: B$JIT.ERR is set with UMU-CODE-4 and UMU$UNFID is
      188     8172             exited.
      189     8173        */
      190     8174    2   DCL CODE SBIN;
      191     8175    2           B$JIT$->B$JIT.ERR = '251525400004'O; /* UMU with severity 4           */

   8175  2 000046   000013 236000 1                  LDQ     ONE+1
         2 000047   000000 470400 xsym               LDP0    B$JIT$
         2 000050   000012 756100                    STQ     10,,PR0

      192     8176    2           B$JIT$->B$JIT.ERR.CODE = CODE;

   8176  2 000051   200043 471500                    LDP1    @CODE,,AUTO
         2 000052   100000 236100                    LDQ     0,,PR1
         2 000053   000003 736000                    QLS     3
         2 000054   000012 676100                    ERQ     10,,PR0
         2 000055   377770 376007                    ANQ     131064,DL
         2 000056   000012 656100                    ERSQ    10,,PR0

      193     8177    2           UNWIND TO ERR_RETURN;

   8177  2 000057   200004 237300                    LDAQ  ! ERR_RETURN,,AUTO
         2 000060   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000061   000000 000200                    ZERO    0,128

      194     8178    2   END ERR;
      195     8179        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:35   
      196     8180    1   INITIALIZE: PROC;

   8180  2 000062   200032 741300       INITIALIZE   STX1  ! PRT+8,,AUTO

      197     8181    2           IF FPT_V$->FPT$UNFID_V.DCB#=0

   8181  2 000063   000000 470400 1                  LDP0    PS0$X
         2 000064   000000 220100                    LDX0    0,,PR0
         2 000065   000102 601000 2                  TNZ     s:8189

      198     8182    2            THEN
      199     8183    3            DO;

      200     8184    3               CALL HFF$NILERASE(ASN#) ALTRET(NOFIELD);

   8184  2 000066   000002 630400 3                  EPPR0   2
         2 000067   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000070   000000 701000 xent               TSX1    HFF$NILERASE
         2 000071   000142 702000 2                  TSX2    NOFIELD

      201     8185    3               ASN = ASCBIN(ASN$->ASN$FIELD);

   8185  2 000072   000007 470400 1                  LDP0    PS7$X
         2 000073   000100 101500                    MRL     fill='000'O
         2 000074   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000075   200044 000004                    ADSC9   @CODE+1,,AUTO            cn=0,n=4
         2 000076   200044 236100                    LDQ     @CODE+1,,AUTO
         2 000077   200017 756100                    STQ     ASN,,AUTO

      202     8186    3               DCB_USED = %NO#;

   8186  2 000100   200006 450100                    STZ     DCB_USED,,AUTO

      203     8187    3               END;

   8187  2 000101   000135 710000 2                  TRA     s:8199

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:36   
      204     8188    3            ELSE DO;

      205     8189    3               IF FPT_V$->FPT$UNFID_V.DCB# > B$ROSEG$->B$ROSEG.NUMDCBS

   8189  2 000102   000000 471400 xsym               LDP1    B$ROSEG$
         2 000103   100002 222100                    LDX2    2,,PR1
         2 000104   000000 102100                    CMPX2   0,,PR0
         2 000105   000112 603000 2                  TRC     s:8192

      206     8190    3                THEN
      207     8191    3                  CALL ERR(%E$BADDCB#);

   8191  2 000106   000004 236000 3                  LDQ     4
         2 000107   200043 756100                    STQ     @CODE,,AUTO
         2 000110   000045 701000 2                  TSX1    ERR
         2 000111   000000 011000                    NOP     0

      208     8192    3               DCB$ = DCBADDR(FPT_V$->FPT$UNFID_V.DCB#);

   8192  2 000112   000005 470400 3                  LDP0    5
         2 000113   000000 471500                    LDP1    0,,PR0
         2 000114   000000 473400 1                  LDP3    PS0$X
         2 000115   300000 220100                    LDX0    0,,PR3
         2 000116   100000 236110                    LDQ     0,X0,PR1
         2 000117   200016 756100                    STQ     DCB$,,AUTO

      209     8193    3               IF DCB$ = ADDR(NIL)

   8193  2 000120   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000121   000126 601000 2                  TNZ     s:8196

      210     8194    3                THEN
      211     8195    3                  CALL ERR(%E$BADDCB#);

   8195  2 000122   000004 236000 3                  LDQ     4
         2 000123   200043 756100                    STQ     @CODE,,AUTO
         2 000124   000045 701000 2                  TSX1    ERR
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:37   
         2 000125   000000 011000                    NOP     0

      212     8196    3               DCB_USED = %YES#;

   8196  2 000126   400000 236003                    LDQ     -131072,DU
         2 000127   200006 756100                    STQ     DCB_USED,,AUTO

      213     8197    3               ASN = DCB$->F$DCB.ASN;

   8197  2 000130   200016 470500                    LDP0    DCB$,,AUTO
         2 000131   000032 236100                    LDQ     26,,PR0
         2 000132   000011 772000                    QRL     9
         2 000133   000777 376007                    ANQ     511,DL
         2 000134   200017 756100                    STQ     ASN,,AUTO

      214     8198    3               END;

      215     8199    2           CALL HFF$NILERASE(TEXT#) ALTRET(NOFIELD);

   8199  2 000135   000006 630400 3                  EPPR0   6
         2 000136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000137   000000 701000 xent               TSX1    HFF$NILERASE
         2 000140   000142 702000 2                  TSX2    NOFIELD

      216     8200    3           DO WHILE('0'B);

   8200  2 000141   000146 710000 2                  TRA     s:8203

      217     8201    3   NOFIELD:   CALL ERR(%E$NOFIELD);

   8201  2 000142   000010 236000 3     NOFIELD      LDQ     8
         2 000143   200043 756100                    STQ     @CODE,,AUTO
         2 000144   000045 701000 2                  TSX1    ERR
         2 000145   000000 011000                    NOP     0

      218     8202    3              END;

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:38   
      219     8203    2           CALL HFF$DSIZ(TEXT#,TEXTLEN);

   8203  2 000146   200020 630500                    EPPR0   TEXTLEN,,AUTO
         2 000147   200045 450500                    STP0    @CODE+2,,AUTO
         2 000150   000006 236000 3                  LDQ     6
         2 000151   200044 756100                    STQ     @CODE+1,,AUTO
         2 000152   200044 630500                    EPPR0   @CODE+1,,AUTO
         2 000153   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000154   000000 701000 xent               TSX1    HFF$DSIZ
         2 000155   000000 011000                    NOP     0

      220     8204    2           IF TEXTLEN=0

   8204  2 000156   200020 235100                    LDA     TEXTLEN,,AUTO
         2 000157   000164 601000 2                  TNZ     s:8207

      221     8205    2            THEN
      222     8206    2              CALL ERR(%E$FIDOFLOW);

   8206  2 000160   000012 236000 3                  LDQ     10
         2 000161   200043 756100                    STQ     @CODE,,AUTO
         2 000162   000045 701000 2                  TSX1    ERR
         2 000163   000000 011000                    NOP     0

      223     8207    2           LEN_SPEC = '0'B;

   8207  2 000164   200012 450100                    STZ     LEN_SPEC,,AUTO

      224     8208    2           CALL HFF$NILERASE(LEN#) ALTRET(NOLEN);

   8208  2 000165   000013 630400 3                  EPPR0   11
         2 000166   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000167   000000 701000 xent               TSX1    HFF$NILERASE
         2 000170   000173 702000 2                  TSX2    NOLEN

      225     8209    2           LEN_SPEC = '1'B;

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:39   
   8209  2 000171   400000 236003                    LDQ     -131072,DU
         2 000172   200012 756100                    STQ     LEN_SPEC,,AUTO

      226     8210    2   NOLEN:
      227     8211    2           TEXT$->TE$XT = ' ';

   8211  2 000173   000001 470400 1     NOLEN        LDP0    PS1$X
         2 000174   200020 720100                    LXL0    TEXTLEN,,AUTO
         2 000175   040140 100400                    MLR     fill='040'O
         2 000176   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000177   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      228     8212    2           SN_USED = %NO#;

   8212  2 000200   200007 450100                    STZ     SN_USED,,AUTO

      229     8213    2           RES_USED = %NO#;

   8213  2 000201   200010 450100                    STZ     RES_USED,,AUTO

      230     8214    2           USED_LEN = 0;

   8214  2 000202   200015 450100                    STZ     USED_LEN,,AUTO

      231     8215    2           IF FPT_V$ -> FPT$UNFID_V.FORCE  /* IF FORCE requested                 */

   8215  2 000203   000000 471400 1                  LDP1    PS0$X
         2 000204   100000 236100                    LDQ     0,,PR1
         2 000205   400000 316007                    CANQ    -131072,DL
         2 000206   000215 600000 2                  TZE     s:8220
         2 000207   200017 235100                    LDA     ASN,,AUTO
         2 000210   000001 115007                    CMPA    1,DL
         2 000211   000215 601000 2                  TNZ     s:8220

      232     8216    2             AND ASN = %FILE#              /* AND it's a disk file               */
      233     8217    2            THEN                           /* THEN it's OK to FORCE              */
      234     8218    2              FORCE = %YES#;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:40   

   8218  2 000212   400000 236003                    LDQ     -131072,DU
         2 000213   200013 756100                    STQ     FORCE,,AUTO
         2 000214   000216 710000 2                  TRA     s:8221

      235     8219    2            ELSE                           /* No default display                 */
      236     8220    2              FORCE = %NO#;

   8220  2 000215   200013 450100                    STZ     FORCE,,AUTO

      237     8221    2           IF ASN ~= %FILE#

   8221  2 000216   200017 235100                    LDA     ASN,,AUTO
         2 000217   000001 115007                    CMPA    1,DL
         2 000220   000223 600000 2                  TZE     s:8225

      238     8222    2            THEN                           /* Not a disk file                    */
      239     8223    2              STAR_FILE = %NO#;            /* Couldn't be a STAR file            */

   8223  2 000221   200014 450100                    STZ     STAR_FILE,,AUTO
         2 000222   000273 710000 2                  TRA     INIT_DONE

      240     8224    2            ELSE                           /* Check for STAR file                */
      241     8225    2              IF DCB_USED

   8225  2 000223   200006 234100                    SZN     DCB_USED,,AUTO
         2 000224   000243 605000 2                  TPL     s:8238

      242     8226    2               THEN
      243     8227    2                 IF SUBSTR(DCB$ -> F$DCB.NAME.C,0,1) = '*'

   8227  2 000225   200016 473500                    LDP3    DCB$,,AUTO
         2 000226   300010 236100                    LDQ     8,,PR3
         2 000227   000777 376003                    ANQ     511,DU
         2 000230   000052 116003                    CMPQ    42,DU
         2 000231   000241 601000 2                  TNZ     s:8235
         2 000232   300010 236100                    LDQ     8,,PR3
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:41   
         2 000233   777000 316003                    CANQ    -512,DU
         2 000234   000241 600000 2                  TZE     s:8235

      244     8228    2                   AND DCB$ -> F$DCB.NAME.L > 0
      245     8229    2                  THEN                     /* A star-file                        */
      246     8230    3                  DO;

      247     8231    3                     STAR_FILE = %YES#;

   8231  2 000235   400000 236003                    LDQ     -131072,DU
         2 000236   200014 756100                    STQ     STAR_FILE,,AUTO

      248     8232    3                     FORCE = %NO#;         /* Don't FORCE display for star-files */

   8232  2 000237   200013 450100                    STZ     FORCE,,AUTO

      249     8233    3                     END;

   8233  2 000240   000273 710000 2                  TRA     INIT_DONE

      250     8234    2                  ELSE
      251     8235    2                    STAR_FILE = %NO#;

   8235  2 000241   200014 450100                    STZ     STAR_FILE,,AUTO
         2 000242   000273 710000 2                  TRA     INIT_DONE

      252     8236    2               ELSE                        /* NAME is passed                     */
      253     8237    3               DO;

      254     8238    3                  CALL HFF$NILERASE(NAME#) ALTRET(INIT_DONE);

   8238  2 000243   000014 630400 3                  EPPR0   12
         2 000244   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000245   000000 701000 xent               TSX1    HFF$NILERASE
         2 000246   000273 702000 2                  TSX2    INIT_DONE

      255     8239    3                  IF SUBSTR(NAME$ -> TEXT$C.STRING,0,1) = '*'
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:42   

   8239  2 000247   000002 470400 1                  LDP0    PS2$X
         2 000250   000100 101500                    MRL     fill='000'O
         2 000251   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000252   200044 000002                    ADSC9   @CODE+1,,AUTO            cn=0,n=2
         2 000253   200044 220100                    LDX0    @CODE+1,,AUTO
         2 000254   040000 106500                    CMPC    fill='040'O
         2 000255   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         2 000256   000015 000001 3                  ADSC9   13                       cn=0,n=1
         2 000257   000272 601000 2                  TNZ     s:8247
         2 000260   000100 101500                    MRL     fill='000'O
         2 000261   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000262   200045 000004                    ADSC9   @CODE+2,,AUTO            cn=0,n=4
         2 000263   200045 236100                    LDQ     @CODE+2,,AUTO
         2 000264   000000 116003                    CMPQ    0,DU
         2 000265   000272 600000 2                  TZE     s:8247

      256     8240    3                    AND NAME$ -> TEXT$C.LEN > 0
      257     8241    3                   THEN                    /* A star-file                        */
      258     8242    4                   DO;

      259     8243    4                      STAR_FILE = %YES#;

   8243  2 000266   400000 236003                    LDQ     -131072,DU
         2 000267   200014 756100                    STQ     STAR_FILE,,AUTO

      260     8244    4                      FORCE = %NO#;        /* Don't FORCE display of star-files  */

   8244  2 000270   200013 450100                    STZ     FORCE,,AUTO

      261     8245    4                      END;

   8245  2 000271   000273 710000 2                  TRA     INIT_DONE

      262     8246    3                   ELSE
      263     8247    3                     STAR_FILE = %NO#;

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:43   
   8247  2 000272   200014 450100                    STZ     STAR_FILE,,AUTO

      264     8248    3                  END;

      265     8249
      266     8250    2   INIT_DONE: RETURN;

   8250  2 000273   200032 221300       INIT_DONE    LDX1  ! PRT+8,,AUTO
         2 000274   000001 702211                    TSX2  ! 1,X1

      267     8251    2   END INITIALIZE;
      268     8252        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:44   
      269     8253    1   SHRINK_STUFF: PROC(LENGTH);

   8253  2 000275   200036 741300       SHRINK_STUFF STX1  ! SNS+1,,AUTO

      270     8254        /*I* NAME: SHRINK_STUFF
      271     8255             CALL: CALL SHRINK_STUFF(LENGTH);
      272     8256                   where LENGTH is the length of the information in PRT.
      273     8257             PURPOSE: To remove trailing blanks and nulls from PRT and add
      274     8258             it to the end of the growing FID. TEXTFID_ overflow is checked.          */
      275     8259    2   DCL LENGTH SBIN;
      276     8260    2   DCL LEN1 SBIN;
      277     8261    2           LEN1 = LENGTH;

   8261  2 000276   200037 470500                    LDP0    @LENGTH,,AUTO
         2 000277   000000 235100                    LDA     0,,PR0
         2 000300   200040 755100                    STA     LEN1,,AUTO

      278     8262    3           DO WHILE(LEN1>0 AND PRT.P1_ARY(LEN1-1)=' ');

   8262  2 000301   000304 710000 2                  TRA     s:8264

      279     8263    3              LEN1 = LEN1 - 1;

   8263  2 000302   000001 336007                    LCQ     1,DL
         2 000303   200040 056100                    ASQ     LEN1,,AUTO

      280     8264    3              END;

   8264  2 000304   200040 235100                    LDA     LEN1,,AUTO
         2 000305   000312 604400 2                  TMOZ    s:8265
         2 000306   040000 106505                    CMPC    fill='040'O
         2 000307   200021 600001                    ADSC9   LEN,A,AUTO               cn=3,n=1
         2 000310   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000311   000302 600000 2                  TZE     s:8263

      281     8265    2           CALL INSERT(TEXT$->TE$XT,USED_LEN,,

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:45   
   8265  2 000312   200020 236100                    LDQ     TEXTLEN,,AUTO
         2 000313   200015 136100                    SBLQ    USED_LEN,,AUTO
         2 000314   000001 470400 1                  LDP0    PS1$X
         2 000315   000000 620006                    EAX0    0,QL
         2 000316   200015 236100                    LDQ     USED_LEN,,AUTO
         2 000317   040146 100500                    MLR     fill='040'O
         2 000320   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000321   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=*X0

      282     8266    2             PRT.P1_STR);
      283     8267    2           USED_LEN = USED_LEN + LEN1;

   8267  2 000322   200040 036100                    ADLQ    LEN1,,AUTO
         2 000323   200015 756100                    STQ     USED_LEN,,AUTO

      284     8268    2           IF USED_LEN>TEXTLEN

   8268  2 000324   200020 116100                    CMPQ    TEXTLEN,,AUTO
         2 000325   000337 604400 2                  TMOZ    s:8275

      285     8269    3            THEN DO;

      286     8270    3               IF LEN_SPEC

   8270  2 000326   200012 234100                    SZN     LEN_SPEC,,AUTO
         2 000327   000333 605000 2                  TPL     s:8273

      287     8271    3                THEN
      288     8272    3                  LEN$->RET$LEN = TEXTLEN;

   8272  2 000330   200020 235100                    LDA     TEXTLEN,,AUTO
         2 000331   000011 471400 1                  LDP1    PS9$X
         2 000332   100000 755100                    STA     0,,PR1

      289     8273    3               CALL ERR(%E$FIDOFLOW);

   8273  2 000333   000012 236000 3                  LDQ     10
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:46   
         2 000334   200043 756100                    STQ     @CODE,,AUTO
         2 000335   000045 701000 2                  TSX1    ERR
         2 000336   000000 011000                    NOP     0

      290     8274    3               END;

      291     8275    2           RETURN;

   8275  2 000337   200036 221300                    LDX1  ! SNS+1,,AUTO
         2 000340   000001 702211                    TSX2  ! 1,X1

      292     8276    2   END SHRINK_STUFF;
      293     8277        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:47   
      294     8278    1   ADD_DELIM: PROC(DELIMITER);

   8278  2 000341   200034 741300       ADD_DELIM    STX1  ! NAME_LEN+1,,AUTO

      295     8279        /*I* NAME: ADD_DELIM
      296     8280             CALL: CALL ADD_DELIM(DELIMITER);
      297     8281                   where DELIMITER is the one-character delimiter to be
      298     8282                   appended to the right of the growing string.
      299     8283             PURPOSE: To tack a delimiter on the end of the growing string
      300     8284             without disturbing anything else. TEXTFID_ overflow is checked.          */
      301     8285    2   DCL DELIMITER CHAR(1);
      302     8286    2           CALL INSERT(TEXT$->TE$XT,USED_LEN,,DELIMITER);

   8286  2 000342   200020 236100                    LDQ     TEXTLEN,,AUTO
         2 000343   200015 136100                    SBLQ    USED_LEN,,AUTO
         2 000344   200035 470500                    LDP0    @DELIMITER,,AUTO
         2 000345   000001 471400 1                  LDP1    PS1$X
         2 000346   000000 620006                    EAX0    0,QL
         2 000347   200015 235100                    LDA     USED_LEN,,AUTO
         2 000350   040145 100500                    MLR     fill='040'O
         2 000351   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000352   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0

      303     8287    2           USED_LEN = USED_LEN + 1;

   8287  2 000353   200015 054100                    AOS     USED_LEN,,AUTO

      304     8288    2           IF USED_LEN>TEXTLEN

   8288  2 000354   200015 236100                    LDQ     USED_LEN,,AUTO
         2 000355   200020 116100                    CMPQ    TEXTLEN,,AUTO
         2 000356   000370 604400 2                  TMOZ    s:8295

      305     8289    3            THEN DO;

      306     8290    3               IF LEN_SPEC

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:48   
   8290  2 000357   200012 234100                    SZN     LEN_SPEC,,AUTO
         2 000360   000364 605000 2                  TPL     s:8293

      307     8291    3                THEN
      308     8292    3                  LEN$->RET$LEN = TEXTLEN;

   8292  2 000361   200020 235100                    LDA     TEXTLEN,,AUTO
         2 000362   000011 473400 1                  LDP3    PS9$X
         2 000363   300000 755100                    STA     0,,PR3

      309     8293    3               CALL ERR(%E$FIDOFLOW);

   8293  2 000364   000012 236000 3                  LDQ     10
         2 000365   200043 756100                    STQ     @CODE,,AUTO
         2 000366   000045 701000 2                  TSX1    ERR
         2 000367   000000 011000                    NOP     0

      310     8294    3               END;

      311     8295    2           RETURN;

   8295  2 000370   200034 221300                    LDX1  ! NAME_LEN+1,,AUTO
         2 000371   000001 702211                    TSX2  ! 1,X1

      312     8296    2   END ADD_DELIM;
      313     8297        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:49   
      314     8298    1   RES:    PROC;

   8298  2 000372   200032 741300       RES          STX1  ! PRT+8,,AUTO

      315     8299        /*I* NAME: RES
      316     8300             CALL: CALL RES;
      317     8301             PURPOSE: To fill in the RESOURCE portion of the FID
      318     8302        */
      319     8303    2   DCL CHR$4 CHAR(4) BASED;
      320     8304    2   DCL ONE UBIN CONSTANT INIT(1);
      321     8305    2   DCL CHAR_ONE REDEF ONE CHAR(4);
      322     8306    2   DCL RES_TYPE CHAR(2);
      323     8307    2           PRT.P1_STR = ' ';

   8307  2 000373   040100 100400                    MLR     fill='040'O
         2 000374   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000375   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32

      324     8308    2           IF DCB_USED

   8308  2 000376   200006 234100                    SZN     DCB_USED,,AUTO
         2 000377   000405 605000 2                  TPL     s:8313

      325     8309    2            THEN
      326     8310    2              PRT.P1_STR = DCB$->F$DCB.RES;

   8310  2 000400   200016 470500                    LDP0    DCB$,,AUTO
         2 000401   040100 100500                    MLR     fill='040'O
         2 000402   000026 000004                    ADSC9   22,,PR0                  cn=0,n=4
         2 000403   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000404   000426 710000 2                  TRA     NO_RES

      327     8311    2            ELSE
      328     8312    3            DO;

      329     8313    3               CALL HFF$NILERASE(RES#) ALTRET(NO_RES);

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:50   
   8313  2 000405   000016 630400 3                  EPPR0   14
         2 000406   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000407   000000 701000 xent               TSX1    HFF$NILERASE
         2 000410   000426 702000 2                  TSX2    NO_RES

      330     8314    3               CALL HFF$DSIZ(RES#,LEN);    /* Adjust CHR$STR size                */

   8314  2 000411   200021 630500                    EPPR0   LEN,,AUTO
         2 000412   200045 450500                    STP0    @CODE+2,,AUTO
         2 000413   000016 236000 3                  LDQ     14
         2 000414   200044 756100                    STQ     @CODE+1,,AUTO
         2 000415   200044 630500                    EPPR0   @CODE+1,,AUTO
         2 000416   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000417   000000 701000 xent               TSX1    HFF$DSIZ
         2 000420   000000 011000                    NOP     0

      331     8315    3               PRT.P1_STR = RES$->CHR$STR;

   8315  2 000421   000010 470400 1                  LDP0    PS8$X
         2 000422   200021 720100                    LXL0    LEN,,AUTO
         2 000423   040100 100540                    MLR     fill='040'O
         2 000424   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000425   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32

      332     8316    3   NO_RES:
      333     8317    3               END;

   8317  2 000426                       NO_RES       null
      334     8318        /***
      335     8319         *** Take care of invalid RES fields
      336     8320         ***/
      337     8321    2           RES_TYPE = SUBSTR(PRT.P1_STR,0,2);

   8321  2 000426   200022 220100                    LDX0    PRT,,AUTO
         2 000427   200033 740100                    STX0    RES_TYPE,,AUTO

      338     8322    3           DO CASE(ASN);
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:51   

   8322  2 000430   200017 235100                    LDA     ASN,,AUTO
         2 000431   000012 115007                    CMPA    10,DL
         2 000432   000434 602005 2                  TNC     s:8322+4,AL
         2 000433   000552 710000 2                  TRA     s:8364
         2 000434   000552 710000 2                  TRA     s:8364
         2 000435   000446 710000 2                  TRA     s:8324
         2 000436   000516 710000 2                  TRA     s:8348
         2 000437   000542 710000 2                  TRA     s:8360
         2 000440   000526 710000 2                  TRA     s:8352
         2 000441   000552 710000 2                  TRA     s:8364
         2 000442   000552 710000 2                  TRA     s:8364
         2 000443   000552 710000 2                  TRA     s:8364
         2 000444   000552 710000 2                  TRA     s:8364
         2 000445   000534 710000 2                  TRA     s:8356

      339     8323    3            CASE(%FILE#);

      340     8324    3              IF RES_TYPE~='DP'

   8324  2 000446   000014 100000 1                  CMPX0   ONE+2
         2 000447   000510 600000 2                  TZE     NO_SN

      341     8325    3               THEN
      342     8326    3                 PRT.P1_STR = ' ';

   8326  2 000450   040100 100400                    MLR     fill='040'O
         2 000451   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000452   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000453   000454 710000 2                  TRA     s:8328

      343     8327    3               ELSE GOTO NO_SN;
      344     8328    3              IF DCB_USED

   8328  2 000454   200006 234100                    SZN     DCB_USED,,AUTO
         2 000455   000467 605000 2                  TPL     s:8336

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:52   
      345     8329    3               THEN
      346     8330    3                 IF DCB$->F$DCB.PSN~=' '

   8330  2 000456   200016 470500                    LDP0    DCB$,,AUTO
         2 000457   040000 106500                    CMPC    fill='040'O
         2 000460   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 000461   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000462   000510 600000 2                  TZE     NO_SN

      347     8331    3                  THEN
      348     8332    3                    PRT.P1_STR = 'DP';     /* SN to follow                       */

   8332  2 000463   040100 100400                    MLR     fill='040'O
         2 000464   000014 000002 1                  ADSC9   ONE+2                    cn=0,n=2
         2 000465   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000466   000552 710000 2                  TRA     s:8364

      349     8333    3                  ELSE                     /* No SN to follow                    */
      350     8334    3                    GOTO NO_SN;
      351     8335    4               ELSE DO;

      352     8336    4                  CALL HFF$NILERASE(SERIAL#) ALTRET(NO_SN);

   8336  2 000467   000017 630400 3                  EPPR0   15
         2 000470   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000471   000000 701000 xent               TSX1    HFF$NILERASE
         2 000472   000510 702000 2                  TSX2    NO_SN

      353     8337    4                  IF NOT (SERIAL$->CHR$4=CHAR_ONE AND SERIAL$->VLP$SN.SN#(0)=' ')

   8337  2 000473   000005 470400 1                  LDP0    PS5$X
         2 000474   040000 106500                    CMPC    fill='040'O
         2 000475   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         2 000476   000012 000004 1                  ADSC9   ONE                      cn=0,n=4
         2 000477   000504 601000 2                  TNZ     s:8339
         2 000500   040000 106500                    CMPC    fill='040'O
         2 000501   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:53   
         2 000502   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000503   000510 600000 2                  TZE     NO_SN

      354     8338    4                   THEN
      355     8339    4                     PRT.P1_STR = 'DP';

   8339  2 000504   040100 100400                    MLR     fill='040'O
         2 000505   000014 000002 1                  ADSC9   ONE+2                    cn=0,n=2
         2 000506   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000507   000552 710000 2                  TRA     s:8364

      356     8340    4                   ELSE                    /* NO SN PASSED                       */
      357     8341    4   NO_SN:            IF FORCE              /* IF FORCE is allowed                */

   8341  2 000510   200013 234100       NO_SN        SZN     FORCE,,AUTO
         2 000511   000552 605000 2                  TPL     s:8364

      358     8342    4                      THEN                 /* FORCE of PSN is likely             */
      359     8343    4                        PRT.P1_STR = 'DP'; /* FORCE RES, too (we may stomp later)*/

   8343  2 000512   040100 100400                    MLR     fill='040'O
         2 000513   000014 000002 1                  ADSC9   ONE+2                    cn=0,n=2
         2 000514   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32

      360     8344    4                      ELSE                 /* FORCE of PSN is impossible         */
      361     8345    4                        ;
      362     8346    4                  END;

   8346  2 000515   000552 710000 2                  TRA     s:8364

      363     8347    3            CASE(%TAPE#);

      364     8348    3              IF RES_TYPE~='LT' AND RES_TYPE~='MT'

   8348  2 000516   000015 100000 1                  CMPX0   ONE+3
         2 000517   000552 600000 2                  TZE     s:8364
         2 000520   000016 100000 1                  CMPX0   ONE+4
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:54   
         2 000521   000552 600000 2                  TZE     s:8364

      365     8349    3               THEN
      366     8350    3                 PRT.P1_STR = 'LT';

   8350  2 000522   040100 100400                    MLR     fill='040'O
         2 000523   000015 000002 1                  ADSC9   ONE+3                    cn=0,n=2
         2 000524   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000525   000552 710000 2                  TRA     s:8364

      367     8351    3            CASE(%COMGROUP#);

      368     8352    3              IF RES_TYPE~='CG'

   8352  2 000526   000017 100000 1                  CMPX0   ONE+5
         2 000527   000552 600000 2                  TZE     s:8364

      369     8353    3               THEN
      370     8354    3                 PRT.P1_STR = 'CG';

   8354  2 000530   040100 100400                    MLR     fill='040'O
         2 000531   000017 000002 1                  ADSC9   ONE+5                    cn=0,n=2
         2 000532   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000533   000552 710000 2                  TRA     s:8364

      371     8355    3            CASE(%FPAP#);

      372     8356    3              IF RES_TYPE~='AP'

   8356  2 000534   000020 100000 1                  CMPX0   ONE+6
         2 000535   000552 600000 2                  TZE     s:8364

      373     8357    3               THEN
      374     8358    3                 PRT.P1_STR = 'AP';

   8358  2 000536   040100 100400                    MLR     fill='040'O
         2 000537   000020 000002 1                  ADSC9   ONE+6                    cn=0,n=2
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:55   
         2 000540   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000541   000552 710000 2                  TRA     s:8364

      375     8359    3            CASE(%DEVICE#);

      376     8360    3              IF PRT.P1_STR = ' '

   8360  2 000542   040000 106500                    CMPC    fill='040'O
         2 000543   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000544   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000545   000552 601000 2                  TNZ     s:8364

      377     8361    3               THEN
      378     8362    3                 CALL ERR(%E$NOFIELD);

   8362  2 000546   000010 236000 3                  LDQ     8
         2 000547   200043 756100                    STQ     @CODE,,AUTO
         2 000550   000045 701000 2                  TSX1    ERR
         2 000551   000000 011000                    NOP     0

      379     8363    3            END;                           /* END CASE (ASN)                     */

      380     8364    2           IF PRT.P1_STR~=' ' AND PRT.P1_STR~=BINASC(0)

   8364  2 000552   040000 106500                    CMPC    fill='040'O
         2 000553   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000554   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000555   000570 600000 2                  TZE     s:8369
         2 000556   040000 106500                    CMPC    fill='040'O
         2 000557   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32
         2 000560   000020 000001 3                  ADSC9   16                       cn=0,n=1
         2 000561   000570 600000 2                  TZE     s:8369

      381     8365    3            THEN DO;

      382     8366    3               RES_USED = %YES#;

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:56   
   8366  2 000562   400000 236003                    LDQ     -131072,DU
         2 000563   200010 756100                    STQ     RES_USED,,AUTO

      383     8367    3               CALL SHRINK_STUFF(4);

   8367  2 000564   000021 236000 3                  LDQ     17
         2 000565   200037 756100                    STQ     @LENGTH,,AUTO
         2 000566   000275 701000 2                  TSX1    SHRINK_STUFF
         2 000567   000000 011000                    NOP     0

      384     8368    3               END;

      385     8369    2           RETURN;

   8369  2 000570   200032 221300                    LDX1  ! PRT+8,,AUTO
         2 000571   000001 702211                    TSX2  ! 1,X1

      386     8370    2   END RES;
      387     8371        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:57   
      388     8372    1   SN:     PROC;

   8372  2 000572   200032 741300       SN           STX1  ! PRT+8,,AUTO

      389     8373        /*I* NAME: SN
      390     8374             CALL: CALL SN;
      391     8375             PURPOSE: SN fills in the SN portion of the FID
      392     8376             ASNs.                                                                    */
      393     8377    2   DCL CFU$ PTR;
      394     8378    2   DCL IDX SBIN;
      395     8379    2   DCL SNS SBIN;
      396     8380    2   DCL SNS_CHR REDEF SNS CHAR(4);
      397     8381    2   DCL CHR$4 CHAR(4) BASED;
      398     8382    2   DCL CHR$8 CHAR(8) BASED;
      399     8383    2           PRT.P1_STR = '#';

   8383  2 000573   040100 100400                    MLR     fill='040'O
         2 000574   000022 000001 3                  ADSC9   18                       cn=0,n=1
         2 000575   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32

      400     8384    2           IF DCB_USED

   8384  2 000576   200006 234100                    SZN     DCB_USED,,AUTO
         2 000577   001020 605000 2                  TPL     s:8455

      401     8385    2            THEN
      402     8386    2              IF ASN=%FILE#

   8386  2 000600   200017 235100                    LDA     ASN,,AUTO
         2 000601   000001 115007                    CMPA    1,DL
         2 000602   000625 600000 2                  TZE     s:8395
         2 000603   000004 115007                    CMPA    4,DL
         2 000604   000625 600000 2                  TZE     s:8395
         2 000605   200016 470500                    LDP0    DCB$,,AUTO
         2 000606   000031 236100                    LDQ     25,,PR0
         2 000607   020000 316007                    CANQ    8192,DL
         2 000610   000625 600000 2                  TZE     s:8395
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:58   
         2 000611   000066 236100                    LDQ     54,,PR0
         2 000612   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000613   000625 600000 2                  TZE     s:8395
         2 000614   000002 115007                    CMPA    2,DL
         2 000615   000720 600000 2                  TZE     s:8427
         2 000616   000003 115007                    CMPA    3,DL
         2 000617   000625 601000 2                  TNZ     s:8395
         2 000620   000026 220100                    LDX0    22,,PR0
         2 000621   000016 100000 1                  CMPX0   ONE+4
         2 000622   000720 600000 2                  TZE     s:8427
         2 000623   000021 100000 1                  CMPX0   ONE+7
         2 000624   000720 600000 2                  TZE     s:8427

      403     8387    2                OR ASN=%COMGROUP#
      404     8388    2                OR DCB$ -> F$DCB.FCD = %NO# /* File is closed                    */
      405     8389    2                OR DCB$->F$DCB.CFU$=ADDR(NIL)
      406     8390    2                OR NOT (ASN=%TAPE#
      407     8391    2                OR (ASN=%DEVICE#
      408     8392    2                AND (SUBSTR(DCB$->F$DCB.RES,0,2)='MT'
      409     8393    2                OR SUBSTR(DCB$->F$DCB.RES,0,2)='FT')))
      410     8394    3               THEN DO;

      411     8395    3                  IF ASN = %DEVICE#

   8395  2 000625   000003 115007                    CMPA    3,DL
         2 000626   001062 600000 2                  TZE     NO_SN

      412     8396    3                   THEN GOTO NO_SN;
      413     8397    3                  IF DCB$->F$DCB.PSN~=' '

   8397  2 000627   200016 470500                    LDP0    DCB$,,AUTO
         2 000630   040000 106500                    CMPC    fill='040'O
         2 000631   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 000632   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000633   000646 600000 2                  TZE     F_PSN_TRY

      414     8398    3                   THEN
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:59   
      415     8399    4                   DO;

      416     8400    4                      PRT.P1.STR = DCB$->F$DCB.PSN;

   8400  2 000634   040100 100500                    MLR     fill='040'O
         2 000635   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 000636   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      417     8401    4                      CALL SHRINK_STUFF(7);

   8401  2 000637   000002 236000 3                  LDQ     2
         2 000640   200037 756100                    STQ     @LENGTH,,AUTO
         2 000641   000275 701000 2                  TSX1    SHRINK_STUFF
         2 000642   000000 011000                    NOP     0

      418     8402    4                      SN_USED = %YES#;

   8402  2 000643   400000 236003                    LDQ     -131072,DU
         2 000644   200007 756100                    STQ     SN_USED,,AUTO

      419     8403    4                      END;

   8403  2 000645   001062 710000 2                  TRA     NO_SN

      420     8404    3                   ELSE
      421     8405    3   F_PSN_TRY:        IF FORCE AND ASN = %FILE#

   8405  2 000646   200013 234100       F_PSN_TRY    SZN     FORCE,,AUTO
         2 000647   001062 605000 2                  TPL     NO_SN
         2 000650   200017 235100                    LDA     ASN,,AUTO
         2 000651   000001 115007                    CMPA    1,DL
         2 000652   001062 601000 2                  TNZ     NO_SN

      422     8406    3                      THEN                 /* No PSN, force default to DP#jit    */
      423     8407    4                      DO;

      424     8408    4                         CALL HFF$NILERASE(ACCT#) ALTRET(F_PSN_OK);
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:60   

   8408  2 000653   000023 630400 3                  EPPR0   19
         2 000654   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000655   000000 701000 xent               TSX1    HFF$NILERASE
         2 000656   000705 702000 2                  TSX2    F_PSN_OK

      425     8409    4                         IF ACCT$ -> CHR$8 ~= ' ' /* MAD will give PSN from ACCT */

   8409  2 000657   000003 470400 1                  LDP0    PS3$X
         2 000660   040000 106500                    CMPC    fill='040'O
         2 000661   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         2 000662   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000663   000671 601000 2                  TNZ     s:8413
         2 000664   000000 471400 xsym               LDP1    B$JIT$
         2 000665   040000 106500                    CMPC    fill='040'O
         2 000666   100021 000006                    ADSC9   17,,PR1                  cn=0,n=6
         2 000667   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000670   000705 601000 2                  TNZ     F_PSN_OK

      426     8410    4                           OR B$JIT$ -> B$JIT.FPSN = ' ' /* OR no default PSN    */
      427     8411    4                          THEN             /* We can't FORCE the PSN display     */
      428     8412    5                          DO;

      429     8413    5                             USED_LEN = USED_LEN -2; /* Stomp on 'DP' we added   */

   8413  2 000671   000002 336007                    LCQ     2,DL
         2 000672   200015 056100                    ASQ     USED_LEN,,AUTO

      430     8414    5                             CALL INSERT(TEXT$->TE$XT,USED_LEN,,'  ');

   8414  2 000673   200020 236100                    LDQ     TEXTLEN,,AUTO
         2 000674   200015 136100                    SBLQ    USED_LEN,,AUTO
         2 000675   000001 471400 1                  LDP1    PS1$X
         2 000676   000000 620006                    EAX0    0,QL
         2 000677   200015 235100                    LDA     USED_LEN,,AUTO
         2 000700   040145 100400                    MLR     fill='040'O
         2 000701   000022 000002 1                  ADSC9   ONE+8                    cn=0,n=2
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:61   
         2 000702   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0

      431     8415    5                             RES_USED = %NO#;

   8415  2 000703   200010 450100                    STZ     RES_USED,,AUTO

      432     8416    5                             GOTO NO_SN;

   8416  2 000704   001062 710000 2                  TRA     NO_SN

      433     8417    5                             END;
      434     8418    4   F_PSN_OK:                               /* No ACCT provided, FORCE is OK      */
      435     8419    4                         PRT.P1.STR = B$JIT$ -> B$JIT.FPSN;

   8419  2 000705   000000 470400 xsym  F_PSN_OK     LDP0    B$JIT$
         2 000706   040100 100500                    MLR     fill='040'O
         2 000707   000021 000006                    ADSC9   17,,PR0                  cn=0,n=6
         2 000710   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      436     8420    4                         CALL SHRINK_STUFF(7);

   8420  2 000711   000002 236000 3                  LDQ     2
         2 000712   200037 756100                    STQ     @LENGTH,,AUTO
         2 000713   000275 701000 2                  TSX1    SHRINK_STUFF
         2 000714   000000 011000                    NOP     0

      437     8421    4                         SN_USED = %YES#;

   8421  2 000715   400000 236003                    LDQ     -131072,DU
         2 000716   200007 756100                    STQ     SN_USED,,AUTO

      438     8422    4                         END;

      439     8423    3                  END;

   8423  2 000717   001062 710000 2                  TRA     NO_SN

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:62   
      440     8424    2               ELSE
      441     8425    3               DO;                         /* OPEN LT OR FT FID WITH >1 SERIALS  */

      442     8426                                                /* Find beginning of SN CFU chain     */
      443     8427    3                  IF DCB$->F$DCB.ACS = %JRNL#

   8427  2 000720   000036 236100                    LDQ     30,,PR0
         2 000721   000777 376007                    ANQ     511,DL
         2 000722   000004 116007                    CMPQ    4,DL
         2 000723   000736 601000 2                  TNZ     s:8435

      444     8428    3                   THEN                    /* Journal tape                       */
      445     8429    3                     IF DCB$->F$DCB.CFU$ -> FM$CFUJ.SNLINKX = 0

   8429  2 000724   000066 471500                    LDP1    54,,PR0
         2 000725   100006 720100                    LXL0    6,,PR1
         2 000726   000732 601000 2                  TNZ     s:8433

      446     8430    3                      THEN
      447     8431    3                        CFU$ = ADDR(NIL);

   8431  2 000727   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000730   200033 756100                    STQ     CFU$,,AUTO
         2 000731   000740 710000 2                  TRA     s:8436

      448     8432    3                      ELSE
      449     8433    3                        CFU$ = PINCRW(F$CFU$,DCB$ -> F$DCB.CFU$ -> FM$CFUJ.SNLINKX);

   8433  2 000732   000000 636010                    EAQ     0,X0
         2 000733   000000 036000 xsym               ADLQ    F$CFU$
         2 000734   200033 756100                    STQ     CFU$,,AUTO
         2 000735   000740 710000 2                  TRA     s:8436

      450     8434    3                   ELSE                    /* Vanilla tape                       */
      451     8435    3                     CFU$ = DCB$->F$DCB.CFU$;

   8435  2 000736   000066 236100                    LDQ     54,,PR0
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:63   
         2 000737   200033 756100                    STQ     CFU$,,AUTO

      452     8436    4                  DO WHILE(CFU$~=ADDR(NIL));

   8436  2 000740   001013 710000 2                  TRA     s:8450

      453     8437                                                /* Print each SN in this table        */
      454     8438    4                     IDX = 0;

   8438  2 000741   200034 450100                    STZ     IDX,,AUTO

      455     8439    5                     DO WHILE(IDX<CFU$->FT$CFUSN.NUM);

   8439  2 000742   200033 470500                    LDP0    CFU$,,AUTO
         2 000743   000100 101500                    MRL     fill='000'O
         2 000744   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000745   200044 000004                    ADSC9   @CODE+1,,AUTO            cn=0,n=4
         2 000746   200044 236100                    LDQ     @CODE+1,,AUTO
         2 000747   200034 116100                    CMPQ    IDX,,AUTO
         2 000750   000773 604400 2                  TMOZ    s:8445

      456     8440    5                        PRT.P1.STR = CFU$->FT$CFUSN.SN(IDX);

   8440  2 000751   200034 236100                    LDQ     IDX,,AUTO
         2 000752   000006 402007                    MPY     6,DL
         2 000753   200033 470500                    LDP0    CFU$,,AUTO
         2 000754   040100 100506                    MLR     fill='040'O
         2 000755   000001 000006                    ADSC9   1,Q,PR0                  cn=0,n=6
         2 000756   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      457     8441    5                        CALL SHRINK_STUFF(7);

   8441  2 000757   000002 236000 3                  LDQ     2
         2 000760   200037 756100                    STQ     @LENGTH,,AUTO
         2 000761   000275 701000 2                  TSX1    SHRINK_STUFF
         2 000762   000000 011000                    NOP     0

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:64   
      458     8442    5                        IDX = IDX+1;

   8442  2 000763   200034 054100                    AOS     IDX,,AUTO

      459     8443    5                        END;

   8443  2 000764   200033 470500                    LDP0    CFU$,,AUTO
         2 000765   000100 101500                    MRL     fill='000'O
         2 000766   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000767   200044 000004                    ADSC9   @CODE+1,,AUTO            cn=0,n=4
         2 000770   200044 236100                    LDQ     @CODE+1,,AUTO
         2 000771   200034 116100                    CMPQ    IDX,,AUTO
         2 000772   000751 605400 2                  TPNZ    s:8440

      460     8444                                                /* Check for a table linked to this'n */
      461     8445    4                     IF CFU$->FT$CFUSN.LINKX=0

   8445  2 000773   000100 101500                    MRL     fill='000'O
         2 000774   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 000775   200044 000004                    ADSC9   @CODE+1,,AUTO            cn=0,n=4
         2 000776   200044 236100                    LDQ     @CODE+1,,AUTO
         2 000777   000000 116003                    CMPQ    0,DU
         2 001000   001004 601000 2                  TNZ     s:8449

      462     8446    4                      THEN
      463     8447    4                        CFU$ = ADDR(NIL);

   8447  2 001001   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001002   200033 756100                    STQ     CFU$,,AUTO
         2 001003   001013 710000 2                  TRA     s:8450

      464     8448    4                      ELSE
      465     8449    4                        CFU$ = PINCRW(F$CFU$,CFU$->FT$CFUSN.LINKX);

   8449  2 001004   000100 100500                    MLR     fill='000'O
         2 001005   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 001006   200044 000004                    ADSC9   @CODE+1,,AUTO            cn=0,n=4
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:65   
         2 001007   200044 220100                    LDX0    @CODE+1,,AUTO
         2 001010   000000 636010                    EAQ     0,X0
         2 001011   000000 036000 xsym               ADLQ    F$CFU$
         2 001012   200033 756100                    STQ     CFU$,,AUTO

      466     8450    4                     END;

   8450  2 001013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001014   000741 601000 2                  TNZ     s:8438

      467     8451    3                  SN_USED = %YES#;

   8451  2 001015   400000 236003                    LDQ     -131072,DU
         2 001016   200007 756100                    STQ     SN_USED,,AUTO

      468     8452    3                  END;

   8452  2 001017   001062 710000 2                  TRA     NO_SN

      469     8453    2            ELSE
      470     8454    3            DO;                            /* Not DCB                            */

      471     8455    3               CALL HFF$NILERASE(SERIAL#) ALTRET(F_PSN_TRY);

   8455  2 001020   000017 630400 3                  EPPR0   15
         2 001021   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001022   000000 701000 xent               TSX1    HFF$NILERASE
         2 001023   000646 702000 2                  TSX2    F_PSN_TRY

      472     8456    3               SNS_CHR = SERIAL$->CHR$4;

   8456  2 001024   000005 470400 1                  LDP0    PS5$X
         2 001025   040100 100500                    MLR     fill='040'O
         2 001026   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         2 001027   200035 000004                    ADSC9   SNS,,AUTO                cn=0,n=4

      473     8457    3               IF NOT (SNS=1 AND SERIAL$->VLP$SN.SN#(0)=' ')
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:66   

   8457  2 001030   200035 235100                    LDA     SNS,,AUTO
         2 001031   000001 115007                    CMPA    1,DL
         2 001032   001037 601000 2                  TNZ     s:8459
         2 001033   040000 106500                    CMPC    fill='040'O
         2 001034   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
         2 001035   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001036   000646 600000 2                  TZE     F_PSN_TRY

      474     8458    3                THEN
      475     8459    4                DO IDX=0 TO SNS-1;

   8459  2 001037   200034 450100                    STZ     IDX,,AUTO
         2 001040   001056 710000 2                  TRA     s:8463+1

      476     8460    4                   PRT.P1.STR = SERIAL$->VLP$SN.SN#(IDX);

   8460  2 001041   200034 236100                    LDQ     IDX,,AUTO
         2 001042   000006 402007                    MPY     6,DL
         2 001043   000005 470400 1                  LDP0    PS5$X
         2 001044   040100 100506                    MLR     fill='040'O
         2 001045   000001 000006                    ADSC9   1,Q,PR0                  cn=0,n=6
         2 001046   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      477     8461    4                   CALL SHRINK_STUFF(7);

   8461  2 001047   000002 236000 3                  LDQ     2
         2 001050   200037 756100                    STQ     @LENGTH,,AUTO
         2 001051   000275 701000 2                  TSX1    SHRINK_STUFF
         2 001052   000000 011000                    NOP     0

      478     8462    4                   SN_USED = %YES#;

   8462  2 001053   400000 236003                    LDQ     -131072,DU
         2 001054   200007 756100                    STQ     SN_USED,,AUTO

      479     8463    4                   END;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:67   

   8463  2 001055   200034 054100                    AOS     IDX,,AUTO
         2 001056   200034 236100                    LDQ     IDX,,AUTO
         2 001057   200035 116100                    CMPQ    SNS,,AUTO
         2 001060   001041 604000 2                  TMI     s:8460
         2 001061   001062 710000 2                  TRA     NO_SN

      480     8464    3                ELSE                       /* SN list is worthless               */
      481     8465    3                  GOTO F_PSN_TRY;          /* Try FORCE to print PSN             */
      482     8466    3               END;
      483     8467    2   NO_SN:
      484     8468    2           RETURN;

   8468  2 001062   200032 221300       NO_SN        LDX1  ! PRT+8,,AUTO
         2 001063   000001 702211                    TSX2  ! 1,X1

      485     8469    2   END SN;
      486     8470        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:68   
      487     8471    1   NAME:   PROC;

   8471  2 001064   200032 741300       NAME         STX1  ! PRT+8,,AUTO

      488     8472        /*I* NAME: NAME
      489     8473             CALL: CALL NAME;
      490     8474             PURPOSE: To insert the NAME portion of the FID for non-DEVICE FIDs       */
      491     8475    2   DCL NAME_LEN SBIN;
      492     8476    2   DCL 1 NA$ME BASED,
      493     8477    2         2 LEN CHAR(1),
      494     8478    2         2 STRING CHAR(NAME_LEN);
      495     8479    2           PRT.P1_STR = '/';

   8479  2 001065   040100 100400                    MLR     fill='040'O
         2 001066   000024 000001 3                  ADSC9   20                       cn=0,n=1
         2 001067   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32

      496     8480    2           IF DCB_USED

   8480  2 001070   200006 234100                    SZN     DCB_USED,,AUTO
         2 001071   001102 605000 2                  TPL     s:8485

      497     8481    2            THEN
      498     8482    2              PRT.P1.STR = ADDR(DCB$->F$DCB.NAME)->TEXT$C.STRING;

   8482  2 001072   200016 470500                    LDP0    DCB$,,AUTO
         2 001073   000010 236100                    LDQ     8,,PR0
         2 001074   000033 772000                    QRL     27
         2 001075   000000 620006                    EAX0    0,QL
         2 001076   040100 100540                    MLR     fill='040'O
         2 001077   000010 200010                    ADSC9   8,,PR0                   cn=1,n=*X0
         2 001100   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001101   001127 710000 2                  TRA     NO_NAME

      499     8483    2            ELSE
      500     8484    3            DO;

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:69   
      501     8485    3               CALL HFF$NILERASE(NAME#) ALTRET(NO_NAME);

   8485  2 001102   000014 630400 3                  EPPR0   12
         2 001103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001104   000000 701000 xent               TSX1    HFF$NILERASE
         2 001105   001127 702000 2                  TSX2    NO_NAME

      502     8486    3               NAME_LEN = ASCBIN(NAME$->NA$ME.LEN);

   8486  2 001106   000002 470400 1                  LDP0    PS2$X
         2 001107   000100 101500                    MRL     fill='000'O
         2 001110   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 001111   200044 000004                    ADSC9   @CODE+1,,AUTO            cn=0,n=4
         2 001112   200044 236100                    LDQ     @CODE+1,,AUTO
         2 001113   200033 756100                    STQ     NAME_LEN,,AUTO

      503     8487    3               IF NAME_LEN>31

   8487  2 001114   000037 116007                    CMPQ    31,DL
         2 001115   001122 604400 2                  TMOZ    s:8490

      504     8488    3                THEN
      505     8489    3                  CALL ERR(%E$BADFID);

   8489  2 001116   000026 236000 3                  LDQ     22
         2 001117   200043 756100                    STQ     @CODE,,AUTO
         2 001120   000045 701000 2                  TSX1    ERR
         2 001121   000000 011000                    NOP     0

      506     8490    3               PRT.P1.STR = NAME$->NA$ME.STRING;

   8490  2 001122   000002 470400 1                  LDP0    PS2$X
         2 001123   200033 720100                    LXL0    NAME_LEN,,AUTO
         2 001124   040100 100540                    MLR     fill='040'O
         2 001125   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         2 001126   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:70   
      507     8491    3               END;

      508     8492    2   NO_NAME:
      509     8493    2           IF PRT.P1.STR~=' ' OR (RES_USED AND NOT SN_USED)

   8493  2 001127   040000 106500       NO_NAME      CMPC    fill='040'O
         2 001130   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001131   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001132   001137 601000 2                  TNZ     s:8496
         2 001133   200010 234100                    SZN     RES_USED,,AUTO
         2 001134   001152 605000 2                  TPL     s:8501
         2 001135   200007 234100                    SZN     SN_USED,,AUTO
         2 001136   001152 604000 2                  TMI     s:8501

      510     8494    2            THEN
      511     8495    3            DO;

      512     8496    3               IF ~RES_USED

   8496  2 001137   200010 236100                    LDQ     RES_USED,,AUTO
         2 001140   400000 376003                    ANQ     -131072,DU
         2 001141   400000 676003                    ERQ     -131072,DU
         2 001142   001146 600000 2                  TZE     s:8499

      513     8497    3                THEN
      514     8498    3                  PRT.P1_STR = PRT.P1.STR; /* No leading '/' without RES         */

   8498  2 001143   040100 100500                    MLR     fill='040'O
         2 001144   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001145   200022 000040                    ADSC9   PRT,,AUTO                cn=0,n=32

      515     8499    3               CALL SHRINK_STUFF(32);

   8499  2 001146   000030 236000 3                  LDQ     24
         2 001147   200037 756100                    STQ     @LENGTH,,AUTO
         2 001150   000275 701000 2                  TSX1    SHRINK_STUFF
         2 001151   000000 011000                    NOP     0
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:71   

      516     8500    3               END;

      517     8501    2           RETURN;

   8501  2 001152   200032 221300                    LDX1  ! PRT+8,,AUTO
         2 001153   000001 702211                    TSX2  ! 1,X1

      518     8502    2   END NAME;
      519     8503        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:72   
      520     8504    1   ACCT:   PROC;

   8504  2 001154   200032 741300       ACCT         STX1  ! PRT+8,,AUTO

      521     8505        /*I* NAME: ACCT
      522     8506             CALL: CALL ACCT;
      523     8507             PURPOSE: To insert the ACCT portion of FID for non-DEVICE FIDs           */
      524     8508    2           IF STAR_FILE

   8508  2 001155   200014 234100                    SZN     STAR_FILE,,AUTO
         2 001156   001163 605000 2                  TPL     s:8513

      525     8509    2            THEN                           /* ACCOUNT is useless                 */
      526     8510    2              PRT.P1.STR = ' ';            /* Don't print it                     */

   8510  2 001157   040100 100400                    MLR     fill='040'O
         2 001160   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001161   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001162   001225 710000 2                  TRA     s:8528

      527     8511    2            ELSE                           /* ACCOUNT is significant             */
      528     8512    3            DO;

      529     8513    3               IF DCB_USED

   8513  2 001163   200006 234100                    SZN     DCB_USED,,AUTO
         2 001164   001172 605000 2                  TPL     s:8518

      530     8514    3                THEN
      531     8515    3                  PRT.P1.STR = DCB$->F$DCB.ACCT;

   8515  2 001165   200016 470500                    LDP0    DCB$,,AUTO
         2 001166   040100 100500                    MLR     fill='040'O
         2 001167   000020 000010                    ADSC9   16,,PR0                  cn=0,n=8
         2 001170   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001171   001213 710000 2                  TRA     s:8522

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:73   
      532     8516    3                ELSE
      533     8517    4                DO;

      534     8518    4                   CALL HFF$NILERASE(ACCT#) ALTRET(NO_ACCT);

   8518  2 001172   000023 630400 3                  EPPR0   19
         2 001173   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001174   000000 701000 xent               TSX1    HFF$NILERASE
         2 001175   001217 702000 2                  TSX2    NO_ACCT

      535     8519    4                   CALL HFF$DSIZ(ACCT#,LEN); /* Adjust CHR$STR size              */

   8519  2 001176   200021 630500                    EPPR0   LEN,,AUTO
         2 001177   200045 450500                    STP0    @CODE+2,,AUTO
         2 001200   000023 236000 3                  LDQ     19
         2 001201   200044 756100                    STQ     @CODE+1,,AUTO
         2 001202   200044 630500                    EPPR0   @CODE+1,,AUTO
         2 001203   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001204   000000 701000 xent               TSX1    HFF$DSIZ
         2 001205   000000 011000                    NOP     0

      536     8520    4                   PRT.P1.STR = ACCT$->CHR$STR;

   8520  2 001206   000003 470400 1                  LDP0    PS3$X
         2 001207   200021 720100                    LXL0    LEN,,AUTO
         2 001210   040100 100540                    MLR     fill='040'O
         2 001211   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 001212   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      537     8521    4                   END;

      538     8522    3               IF PRT.P1.STR = ' '

   8522  2 001213   040000 106500                    CMPC    fill='040'O
         2 001214   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001215   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001216   001225 601000 2                  TNZ     s:8528
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:74   

      539     8523    3                THEN                       /* No account found                   */
      540     8524    3   NO_ACCT:       IF FORCE

   8524  2 001217   200013 234100       NO_ACCT      SZN     FORCE,,AUTO
         2 001220   001225 605000 2                  TPL     s:8528

      541     8525    3                   THEN                    /* FORCED to get default from JIT     */
      542     8526    3                     PRT.P1.STR = B$JIT$ -> B$JIT.FACCN;

   8526  2 001221   000000 470400 xsym               LDP0    B$JIT$
         2 001222   040100 100500                    MLR     fill='040'O
         2 001223   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
         2 001224   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      543     8527    3               END;

      544     8528    2           IF PRT.P1.STR = ' '

   8528  2 001225   040000 106500                    CMPC    fill='040'O
         2 001226   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001227   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001230   001233 601000 2                  TNZ     s:8533

      545     8529    2            THEN                           /* ACCOUNT isn't to be printed        */
      546     8530    2              ACCT_USED = %NO#;

   8530  2 001231   200011 450100                    STZ     ACCT_USED,,AUTO
         2 001232   001243 710000 2                  TRA     s:8537

      547     8531    2            ELSE                           /* ACCOUNT needs to be printed        */
      548     8532    3            DO;

      549     8533    3               PRT.P1.DELIM = '.';

   8533  2 001233   056000 236003                    LDQ     23552,DU
         2 001234   200022 552140                    STBQ    PRT,'40'O,AUTO
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:75   

      550     8534    3               CALL SHRINK_STUFF(9);

   8534  2 001235   000013 236000 3                  LDQ     11
         2 001236   200037 756100                    STQ     @LENGTH,,AUTO
         2 001237   000275 701000 2                  TSX1    SHRINK_STUFF
         2 001240   000000 011000                    NOP     0

      551     8535    3               ACCT_USED = %YES#;

   8535  2 001241   400000 236003                    LDQ     -131072,DU
         2 001242   200011 756100                    STQ     ACCT_USED,,AUTO

      552     8536    3               END;

      553     8537    2           RETURN;

   8537  2 001243   200032 221300                    LDX1  ! PRT+8,,AUTO
         2 001244   000001 702211                    TSX2  ! 1,X1

      554     8538    2   END ACCT;
      555     8539        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:76   
      556     8540    1   PASS:   PROC;

   8540  2 001245   200032 741300       PASS         STX1  ! PRT+8,,AUTO

      557     8541        /*I* NAME: PASS
      558     8542             CALL: CALL PASS;
      559     8543             PURPOSE: To insert the PASSWORD portion of the FID for non-DEVICE FIDs   */
      560     8544    2           IF DCB_USED=%NO#

   8544  2 001246   200006 234100                    SZN     DCB_USED,,AUTO
         2 001247   001311 604000 2                  TMI     NO_PASS

      561     8545    2            THEN
      562     8546    3            DO;

      563     8547    3               CALL HFF$NILERASE(PASS#) ALTRET(NO_PASS);

   8547  2 001250   000021 630400 3                  EPPR0   17
         2 001251   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001252   000000 701000 xent               TSX1    HFF$NILERASE
         2 001253   001311 702000 2                  TSX2    NO_PASS

      564     8548    3               CALL HFF$DSIZ(PASS#,LEN);   /* Adjust CHR$STR size                */

   8548  2 001254   200021 630500                    EPPR0   LEN,,AUTO
         2 001255   200045 450500                    STP0    @CODE+2,,AUTO
         2 001256   000021 236000 3                  LDQ     17
         2 001257   200044 756100                    STQ     @CODE+1,,AUTO
         2 001260   200044 630500                    EPPR0   @CODE+1,,AUTO
         2 001261   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001262   000000 701000 xent               TSX1    HFF$DSIZ
         2 001263   000000 011000                    NOP     0

      565     8549    3               PRT.P1.STR = PASS$->CHR$STR;

   8549  2 001264   000004 470400 1                  LDP0    PS4$X
         2 001265   200021 720100                    LXL0    LEN,,AUTO
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:77   
         2 001266   040100 100540                    MLR     fill='040'O
         2 001267   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 001270   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      566     8550    3               PRT.P1.DELIM = '.';

   8550  2 001271   056000 236003                    LDQ     23552,DU
         2 001272   200022 552140                    STBQ    PRT,'40'O,AUTO

      567     8551    3               IF PRT.P1.STR~=' '

   8551  2 001273   040000 106500                    CMPC    fill='040'O
         2 001274   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001275   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001276   001311 600000 2                  TZE     NO_PASS

      568     8552    3                THEN
      569     8553    4                DO;

      570     8554    4                   IF NOT ACCT_USED

   8554  2 001277   200011 234100                    SZN     ACCT_USED,,AUTO
         2 001300   001305 604000 2                  TMI     s:8557

      571     8555    4                    THEN                   /* We need a dot for null acount      */
      572     8556    4                      CALL ADD_DELIM ('.');

   8556  2 001301   000001 236000 3                  LDQ     1
         2 001302   200035 756100                    STQ     SNS,,AUTO
         2 001303   000341 701000 2                  TSX1    ADD_DELIM
         2 001304   000000 011000                    NOP     0

      573     8557    4                   CALL SHRINK_STUFF(9);   /* Add actual PASSWORD                */

   8557  2 001305   000013 236000 3                  LDQ     11
         2 001306   200037 756100                    STQ     @LENGTH,,AUTO
         2 001307   000275 701000 2                  TSX1    SHRINK_STUFF
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:78   
         2 001310   000000 011000                    NOP     0

      574     8558    4                   END;

      575     8559    3               END;

      576     8560    2   NO_PASS:
      577     8561    2           RETURN;

   8561  2 001311   200032 221300       NO_PASS      LDX1  ! PRT+8,,AUTO
         2 001312   000001 702211                    TSX2  ! 1,X1

      578     8562    2   END PASS;
      579     8563        %EJECT;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:79   
      580     8564    1   WSN:    PROC;

   8564  2 001313   200032 741300       WSN          STX1  ! PRT+8,,AUTO

      581     8565        /*I* NAME: WSN
      582     8566             CALL: CALL WSN;
      583     8567             PURPOSE: To insert the WSN portion of the FID for DEVICE FIDs            */
      584     8568    2           IF DCB_USED

   8568  2 001314   200006 234100                    SZN     DCB_USED,,AUTO
         2 001315   001323 605000 2                  TPL     s:8573

      585     8569    2            THEN
      586     8570    2              PRT.P1.STR = DCB$->F$DCB.WSN;

   8570  2 001316   200016 470500                    LDP0    DCB$,,AUTO
         2 001317   040100 100500                    MLR     fill='040'O
         2 001320   000027 000010                    ADSC9   23,,PR0                  cn=0,n=8
         2 001321   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001322   001344 710000 2                  TRA     s:8577

      587     8571    2            ELSE
      588     8572    3            DO;

      589     8573    3               CALL HFF$NILERASE(WSN#) ALTRET(NO_WSN);

   8573  2 001323   000031 630400 3                  EPPR0   25
         2 001324   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001325   000000 701000 xent               TSX1    HFF$NILERASE
         2 001326   001350 702000 2                  TSX2    NO_WSN

      590     8574    3               CALL HFF$DSIZ(WSN#,LEN);    /* Adjust CHR$STR size                */

   8574  2 001327   200021 630500                    EPPR0   LEN,,AUTO
         2 001330   200045 450500                    STP0    @CODE+2,,AUTO
         2 001331   000031 236000 3                  LDQ     25
         2 001332   200044 756100                    STQ     @CODE+1,,AUTO
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:80   
         2 001333   200044 630500                    EPPR0   @CODE+1,,AUTO
         2 001334   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001335   000000 701000 xent               TSX1    HFF$DSIZ
         2 001336   000000 011000                    NOP     0

      591     8575    3               PRT.P1.STR = WSN$->CHR$STR;

   8575  2 001337   000006 470400 1                  LDP0    PS6$X
         2 001340   200021 720100                    LXL0    LEN,,AUTO
         2 001341   040100 100540                    MLR     fill='040'O
         2 001342   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 001343   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      592     8576    3               END;

      593     8577    2           IF PRT.P1.STR=' '

   8577  2 001344   040000 106500                    CMPC    fill='040'O
         2 001345   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001346   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001347   001364 601000 2                  TNZ     s:8589

      594     8578    2            THEN
      595     8579    2   NO_WSN:    IF ASN=%DEVICE# AND NOT SN_USED

   8579  2 001350   200017 235100       NO_WSN       LDA     ASN,,AUTO
         2 001351   000003 115007                    CMPA    3,DL
         2 001352   001402 601000 2                  TNZ     s:8595
         2 001353   200007 234100                    SZN     SN_USED,,AUTO
         2 001354   001402 604000 2                  TMI     s:8595

      596     8580    2               THEN
      597     8581    3               DO;

      598     8582    3                  PRT.P1.DELIM = '#';

   8582  2 001355   043000 236003                    LDQ     17920,DU
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:81   
         2 001356   200022 552140                    STBQ    PRT,'40'O,AUTO

      599     8583    3                  CALL SHRINK_STUFF(1);

   8583  2 001357   000006 236000 3                  LDQ     6
         2 001360   200037 756100                    STQ     @LENGTH,,AUTO
         2 001361   000275 701000 2                  TSX1    SHRINK_STUFF
         2 001362   000000 011000                    NOP     0

      600     8584    3                  END;

   8584  2 001363   001402 710000 2                  TRA     s:8595

      601     8585    2               ELSE
      602     8586    2                 ;
      603     8587    2            ELSE
      604     8588    3            DO;

      605     8589    3               IF PRT.P1.STR='@'

   8589  2 001364   040000 106500                    CMPC    fill='040'O
         2 001365   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31
         2 001366   000032 000001 3                  ADSC9   26                       cn=0,n=1
         2 001367   001374 601000 2                  TNZ     s:8592

      606     8590    3                THEN
      607     8591    3                  PRT.P1.STR = B$JIT$->B$JIT.WOO;

   8591  2 001370   000000 470400 xsym               LDP0    B$JIT$
         2 001371   040100 100500                    MLR     fill='040'O
         2 001372   000010 000010                    ADSC9   8,,PR0                   cn=0,n=8
         2 001373   200022 200037                    ADSC9   PRT,,AUTO                cn=1,n=31

      608     8592    3               PRT.P1.DELIM = '@';

   8592  2 001374   100000 236003                    LDQ     32768,DU
         2 001375   200022 552140                    STBQ    PRT,'40'O,AUTO
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:82   

      609     8593    3               CALL SHRINK_STUFF(9);

   8593  2 001376   000013 236000 3                  LDQ     11
         2 001377   200037 756100                    STQ     @LENGTH,,AUTO
         2 001400   000275 701000 2                  TSX1    SHRINK_STUFF
         2 001401   000000 011000                    NOP     0

      610     8594    3               END;

      611     8595    2           RETURN;

   8595  2 001402   200032 221300                    LDX1  ! PRT+8,,AUTO
         2 001403   000001 702211                    TSX2  ! 1,X1

PS0$X
 Sect OctLoc
   1     000   000000 000000                                                    ....

PS1$X
 Sect OctLoc
   1     001   000000 000001                                                    ....

PS2$X
 Sect OctLoc
   1     002   000000 000002                                                    ....

PS3$X
 Sect OctLoc
   1     003   000000 000003                                                    ....

PS4$X
 Sect OctLoc
   1     004   000000 000004                                                    ....

PS5$X
 Sect OctLoc
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:83   
   1     005   000000 000005                                                    ....

PS6$X
 Sect OctLoc
   1     006   000000 000006                                                    ....

PS7$X
 Sect OctLoc
   1     007   000000 000007                                                    ....

PS8$X
 Sect OctLoc
   1     010   000000 000010                                                    ....

PS9$X
 Sect OctLoc
   1     011   000000 000011                                                    ....

ONE
 Sect OctLoc
   1     012   000000 000001                                                    ....

(unnamed)
 Sect OctLoc
   1     013   251525 400004   104120 040040   114124 040040   115124 040040    ....DP  LT  MT
   1     017   103107 040040   101120 040040   106124 040040   040040 040040    CG  AP  FT

(unnamed)
 Sect OctLoc
   3     000   056040 040040   000000 006000   000011 006000   000000 000624    .   ............
   3     004   000003 006000   000000 006003   000003 006000   000000 001524    ................
   3     010   000007 006000   000000 001530   000011 006000   000013 006000    ................
   3     014   000004 006000   052040 040040   000012 006000   000007 006000    ....*   ........
   3     020   000040 040040   000006 006000   043040 040040   000005 006000    .   ....#   ....
   3     024   057040 040040   000000 001523   000025 006000   000000 000040    /   ...........
   3     030   000027 006000   000010 006000   100040 040040                    ........@
      612     8596    2   END WSN;
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:84   
      613     8597    1   END UMU$UNFID;

PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:85   
--  Include file information  --

   UM$CP6V_C.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure UMU$UNFID.
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:86   

 **** Variables and constants ****

  ****  Section 001 RoData UMU$UNFID

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/w CHAR(4)     r     1 CHAR_ONE                  12-0-0/w UBIN        r     1 ONE
     0-0-0/w PTR         r     1 PS0$                       0-0-0/w UBIN        r     1 PS0$X
     1-0-0/w PTR         r     1 PS1$                       1-0-0/w UBIN        r     1 PS1$X
     2-0-0/w PTR         r     1 PS2$                       2-0-0/w UBIN        r     1 PS2$X
     3-0-0/w PTR         r     1 PS3$                       3-0-0/w UBIN        r     1 PS3$X
     4-0-0/w PTR         r     1 PS4$                       4-0-0/w UBIN        r     1 PS4$X
     5-0-0/w PTR         r     1 PS5$                       5-0-0/w UBIN        r     1 PS5$X
     6-0-0/w PTR         r     1 PS6$                       6-0-0/w UBIN        r     1 PS6$X
     7-0-0/w PTR         r     1 PS7$                       7-0-0/w UBIN        r     1 PS7$X
    10-0-0/w PTR         r     1 PS8$                      10-0-0/w UBIN        r     1 PS8$X
    11-0-0/w PTR         r     1 PS9$                      11-0-0/w UBIN        r     1 PS9$X

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    43-0-0/w PTR         r     1 @CODE                     35-0-0/w PTR         r     1 @DELIMITER
    37-0-0/w PTR         r     1 @LENGTH                   11-0-0/w BIT         r     1 ACCT_USED
    17-0-0/w SBIN        r     1 ASN                       33-0-0/w PTR         r     1 CFU$
    *0-0-0/w SBIN        r     1 CODE                      16-0-0/w PTR         r     1 DCB$
     6-0-0/w BIT         r     1 DCB_USED                  *0-0-0/c CHAR        r     1 DELIMITER
     4-0-0/d REMB        r     1 ERR_RETURN                13-0-0/w BIT         r     1 FORCE
    34-0-0/w SBIN        r     1 IDX                       21-0-0/w SBIN        r     1 LEN
    40-0-0/w SBIN        r     1 LEN1                      *0-0-0/w SBIN        r     1 LENGTH
    12-0-0/w BIT         r     1 LEN_SPEC                  33-0-0/w SBIN        r     1 NAME_LEN
    22-0-0/c STRC(288)   r     1 PRT                       33-0-0/c CHAR(2)     r     1 RES_TYPE
    10-0-0/w BIT         r     1 RES_USED                  35-0-0/w SBIN        r     1 SNS
    35-0-0/w CHAR(4)     r     1 SNS_CHR                    7-0-0/w BIT         r     1 SN_USED
    14-0-0/w BIT         r     1 STAR_FILE                 20-0-0/w SBIN        r     1 TEXTLEN
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:87   
    15-0-0/w SBIN        r     1 USED_LEN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w PTR         r     1 F$CFU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 ASN$FIELD                  0-0-0/d STRC(865)   r     1 B$JIT
     0-0-0/d STRC(3024)  r     1 B$ROSEG                    0-0-0/c CHAR(4)     r     1 CHR$4
     0-0-0/c CHAR(4)     r     1 CHR$4                      0-0-0/c CHAR(8)     r     1 CHR$8
     0-0-0/c ACHR        r     1 CHR$STR                    0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFUJ                    0-0-0/d STRC        r     1 FPT$UNFID_V
     0-0-0/c STRC(288)   r     1 FT$CFUSN                   0-0-0/c ASTR(9)     r     1 NA$ME
     0-0-0/w UBIN        r     1 RET$LEN                    0-0-0/c ACHR        r     1 TE$XT
     0-0-0/c ASTR(9)     r     1 TEXT$C                     0-0-0/d STRC(90)    r     1 VLP$SN


   Procedure UMU$UNFID requires 772 words for executable code.
   Procedure UMU$UNFID requires 38 words of local(AUTO) storage.

    No errors detected in file UMU$UNFID.:E05TSI    .
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:88   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:89   
          MINI XREF LISTING

ACCT
      8504**PROC     8155--CALL
ACCT_USED
      7969**DCL      8530<<ASSIGN   8535<<ASSIGN   8554>>IF
ADD_DELIM
      8278**PROC     8159--CALL     8556--CALL
ASN
      7975**DCL      8149>>IF       8149>>IF       8185<<ASSIGN   8197<<ASSIGN   8215>>IF       8221>>IF
      8322>>DOCASE   8386>>IF       8386>>IF       8386>>IF       8386>>IF       8395>>IF       8405>>IF
      8579>>IF
ASN$FIELD
      8107**DCL      8185>>ASSIGN
B$JIT.ERR
      8015**DCL      8175<<ASSIGN
B$JIT.ERR.CODE
      8016**DCL      8176<<ASSIGN
B$JIT.ERR.MID
      8016**DCL      8016--REDEF
B$JIT.FACCN
      8015**DCL      8526>>ASSIGN
B$JIT.FPSN
      8096**DCL      8409>>IF       8419>>ASSIGN
B$JIT.WOO
      8015**DCL      8591>>ASSIGN
B$JIT$
      8114**DCL      8010--IMP-PTR  8175>>ASSIGN   8176>>ASSIGN   8409>>IF       8419>>ASSIGN   8526>>ASSIGN
      8591>>ASSIGN
B$ROSEG.NUMDCBS
      7608**DCL      8189>>IF
B$ROSEG$
      8115**DCL      8189>>IF
CFU$ IN PROCEDURE SN
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:90   
      8377**DCL      8431<<ASSIGN   8433<<ASSIGN   8435<<ASSIGN   8436>>DOWHILE  8439>>DOWHILE  8440>>ASSIGN
      8445>>IF       8447<<ASSIGN   8449<<ASSIGN   8449>>ASSIGN
CHAR_ONE IN PROCEDURE RES
      8305**DCL      8337>>IF
CHR$4 IN PROCEDURE RES
      8303**DCL      8337>>IF
CHR$4 IN PROCEDURE SN
      8381**DCL      8456>>ASSIGN
CHR$8 IN PROCEDURE SN
      8382**DCL      8409>>IF
CHR$STR
      8004**DCL      8315>>ASSIGN   8520>>ASSIGN   8549>>ASSIGN   8575>>ASSIGN
CODE IN PROCEDURE ERR
      8174**DCL      8167--PROC     8176>>ASSIGN
DCB$
      7974**DCL      8192<<ASSIGN   8193>>IF       8197>>ASSIGN   8227>>IF       8227>>IF       8310>>ASSIGN
      8330>>IF       8386>>IF       8386>>IF       8386>>IF       8386>>IF       8397>>IF       8400>>ASSIGN
      8427>>IF       8429>>IF       8433>>ASSIGN   8435>>ASSIGN   8482>>ASSIGN   8482>>ASSIGN   8515>>ASSIGN
      8570>>ASSIGN
DCB_USED
      7966**DCL      8186<<ASSIGN   8196<<ASSIGN   8225>>IF       8308>>IF       8328>>IF       8384>>IF
      8480>>IF       8513>>IF       8544>>IF       8568>>IF
DELIMITER IN PROCEDURE ADD_DELIM
      8285**DCL      8278--PROC     8286>>CALLBLT
ERR
      8167**PROC     8191--CALL     8195--CALL     8201--CALL     8206--CALL     8273--CALL     8293--CALL
      8362--CALL     8489--CALL
ERR_EXIT
      8161**LABEL    8145--REMEMBR
ERR_RETURN
      7965**DCL      8145<<REMEMBR  8177>>UNWIND
F$CFU$
      8113**DCL      8433>>ASSIGN   8449>>ASSIGN
F$DCB.ACCT
      7669**DCL      8515>>ASSIGN
F$DCB.ACS
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:91   
      7676**DCL      8427>>IF
F$DCB.ACTPOS
      7684**DCL      7684--REDEF
F$DCB.ARS
      7659**DCL      7659--REDEF
F$DCB.ASN
      7674**DCL      8197>>ASSIGN
F$DCB.ATTR
      7677**DCL      7678--REDEF
F$DCB.BORROW
      7692**DCL      7692--REDEF    7692--REDEF    7692--REDEF
F$DCB.CFU$
      7693**DCL      8386>>IF       8429>>IF       8433>>ASSIGN   8435>>ASSIGN
F$DCB.DCBNAME.L
      7706**DCL      7706--IMP-SIZ
F$DCB.EOMCHAR
      7663**DCL      7663--REDEF
F$DCB.FCD
      7672**DCL      8386>>IF
F$DCB.FLDID
      7687**DCL      7687--REDEF
F$DCB.FORM$
      7681**DCL      7681--REDEF
F$DCB.FSECT
      7697**DCL      7697--REDEF
F$DCB.FSN
      7674**DCL      7674--REDEF    7674--REDEF    7675--REDEF
F$DCB.HEADER$
      7680**DCL      7680--REDEF
F$DCB.IXTNSIZE
      7678**DCL      7678--REDEF
F$DCB.LASTSTA$
      7668**DCL      7668--REDEF
F$DCB.LVL
      7693**DCL      7693--REDEF
F$DCB.NAME
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:92   
      7668**DCL      8482--ASSIGN   8482--ASSIGN
F$DCB.NAME.C
      7668**DCL      7668--REDEF    8227>>IF
F$DCB.NAME.L
      7668**DCL      8227>>IF
F$DCB.NOEOF
      7689**DCL      7689--REDEF
F$DCB.NRECS
      7679**DCL      7679--REDEF
F$DCB.NRECX
      7698**DCL      7698--REDEF
F$DCB.OHDR
      7690**DCL      7690--REDEF
F$DCB.ORG
      7673**DCL      7673--REDEF
F$DCB.PRECNO
      7696**DCL      7696--REDEF
F$DCB.PSN
      7669**DCL      8330>>IF       8397>>IF       8400>>ASSIGN
F$DCB.RCSZ
      7701**DCL      7701--REDEF
F$DCB.RES
      7669**DCL      7669--REDEF    8310>>ASSIGN   8386>>IF       8386>>IF
F$DCB.SETX
      7681**DCL      7681--REDEF
F$DCB.TAB$
      7680**DCL      7681--REDEF
F$DCB.TDA
      7695**DCL      7695--REDEF
F$DCB.WSN
      7670**DCL      7670--REDEF    8570>>ASSIGN
FM$CFUJ.SNLINKX
      8104**DCL      8429>>IF       8433>>ASSIGN
FORCE
      7971**DCL      8218<<ASSIGN   8220<<ASSIGN   8232<<ASSIGN   8244<<ASSIGN   8341>>IF       8405>>IF
      8524>>IF
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:93   
FPT$UNFID_V.DCB#
      7989**DCL      8181>>IF       8189>>IF       8192--ASSIGN
FPT$UNFID_V.FORCE
      7989**DCL      8215>>IF
FT$CFUSN.LINKX
      8100**DCL      8445>>IF       8449>>ASSIGN
FT$CFUSN.NUM
      8100**DCL      8439>>DOWHILE
FT$CFUSN.SN
      8100**DCL      8440>>ASSIGN
F_PSN_OK IN PROCEDURE SN
      8419**LABEL    8408--CALLALT
F_PSN_TRY IN PROCEDURE SN
      8405**LABEL    8455--CALLALT  8465--GOTO
HFF$DSIZ
      8139**DCL-ENT  8203--CALL     8314--CALL     8519--CALL     8548--CALL     8574--CALL
HFF$NILERASE
      8140**DCL-ENT  8184--CALL     8199--CALL     8208--CALL     8238--CALL     8313--CALL     8336--CALL
      8408--CALL     8455--CALL     8485--CALL     8518--CALL     8547--CALL     8573--CALL
IDX IN PROCEDURE SN
      8378**DCL      8438<<ASSIGN   8439>>DOWHILE  8440>>ASSIGN   8442<<ASSIGN   8442>>ASSIGN   8459<<DOINDEX
      8460>>ASSIGN
INITIALIZE
      8180**PROC     8146--CALL
INIT_DONE IN PROCEDURE INITIALIZE
      8250**LABEL    8238--CALLALT
LEN
      7977**DCL      8004--IMP-SIZ  8314<>CALL     8315>>ASSIGN   8519<>CALL     8520>>ASSIGN   8548<>CALL
      8549>>ASSIGN   8574<>CALL     8575>>ASSIGN
LEN1 IN PROCEDURE SHRINK_STUFF
      8260**DCL      8261<<ASSIGN   8262>>DOWHILE  8262>>DOWHILE  8263<<ASSIGN   8263>>ASSIGN   8267>>ASSIGN
LENGTH IN PROCEDURE SHRINK_STUFF
      8259**DCL      8253--PROC     8261>>ASSIGN
LEN_SPEC
      7970**DCL      8161>>IF       8207<<ASSIGN   8209<<ASSIGN   8270>>IF       8290>>IF
NA$ME.LEN IN PROCEDURE NAME
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:94   
      8477**DCL      8486>>ASSIGN
NA$ME.STRING IN PROCEDURE NAME
      8478**DCL      8490>>ASSIGN
NAME
      8471**PROC     8154--CALL
NAME_LEN IN PROCEDURE NAME
      8475**DCL      8478--IMP-SIZ  8486<<ASSIGN   8487>>IF       8490>>ASSIGN
NOFIELD IN PROCEDURE INITIALIZE
      8201**LABEL    8184--CALLALT  8199--CALLALT
NOLEN IN PROCEDURE INITIALIZE
      8211**LABEL    8208--CALLALT
NO_ACCT IN PROCEDURE ACCT
      8524**LABEL    8518--CALLALT
NO_NAME IN PROCEDURE NAME
      8493**LABEL    8485--CALLALT
NO_PASS IN PROCEDURE PASS
      8561**LABEL    8547--CALLALT
NO_RES IN PROCEDURE RES
      8317**LABEL    8313--CALLALT
NO_SN IN PROCEDURE RES
      8341**LABEL    8327--GOTO     8334--GOTO     8336--CALLALT
NO_SN IN PROCEDURE SN
      8468**LABEL    8396--GOTO     8416--GOTO
NO_WSN IN PROCEDURE WSN
      8579**LABEL    8573--CALLALT
ONE IN PROCEDURE RES
      8304**DCL      8305--REDEF
PASS
      8540**PROC     8156--CALL
PRT.P1
      7979**DCL      7982--REDEF    7983--REDEF
PRT.P1.DELIM
      7980**DCL      8533<<ASSIGN   8550<<ASSIGN   8582<<ASSIGN   8592<<ASSIGN
PRT.P1.STR
      7981**DCL      8400<<ASSIGN   8419<<ASSIGN   8440<<ASSIGN   8460<<ASSIGN   8482<<ASSIGN   8490<<ASSIGN
      8493>>IF       8498>>ASSIGN   8510<<ASSIGN   8515<<ASSIGN   8520<<ASSIGN   8522>>IF       8526<<ASSIGN
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:95   
      8528>>IF       8549<<ASSIGN   8551>>IF       8570<<ASSIGN   8575<<ASSIGN   8577>>IF       8589>>IF
      8591<<ASSIGN
PRT.P1_ARY
      7983**DCL      8262>>DOWHILE
PRT.P1_STR
      7982**DCL      8265>>CALLBLT  8307<<ASSIGN   8310<<ASSIGN   8315<<ASSIGN   8321>>ASSIGN   8326<<ASSIGN
      8332<<ASSIGN   8339<<ASSIGN   8343<<ASSIGN   8350<<ASSIGN   8354<<ASSIGN   8358<<ASSIGN   8360>>IF
      8364>>IF       8364>>IF       8383<<ASSIGN   8479<<ASSIGN   8498<<ASSIGN
PS0$
      8117**DCL      8181>>IF       8189>>IF       8192>>ASSIGN   8215>>IF
PS0$X
      8116**DCL      8117--REDEF
PS1$
      8119**DCL      8211>>ASSIGN   8265>>CALLBLT  8286>>CALLBLT  8414>>CALLBLT
PS1$X
      8118**DCL      8119--REDEF
PS2$
      8121**DCL      8239>>IF       8239>>IF       8239>>IF       8486>>ASSIGN   8490>>ASSIGN
PS2$X
      8120**DCL      8121--REDEF
PS3$
      8123**DCL      8409>>IF       8520>>ASSIGN
PS3$X
      8122**DCL      8123--REDEF
PS4$
      8125**DCL      8549>>ASSIGN
PS4$X
      8124**DCL      8125--REDEF
PS5$
      8127**DCL      8337>>IF       8337>>IF       8456>>ASSIGN   8457>>IF       8460>>ASSIGN
PS5$X
      8126**DCL      8127--REDEF
PS6$
      8129**DCL      8575>>ASSIGN
PS6$X
      8128**DCL      8129--REDEF
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:96   
PS7$
      8131**DCL      8185>>ASSIGN
PS7$X
      8130**DCL      8131--REDEF
PS8$
      8133**DCL      8315>>ASSIGN
PS8$X
      8132**DCL      8133--REDEF
PS9$
      8135**DCL      8163>>ASSIGN   8272>>ASSIGN   8292>>ASSIGN
PS9$X
      8134**DCL      8135--REDEF
RES
      8298**PROC     8147--CALL
RES_TYPE IN PROCEDURE RES
      8306**DCL      8321<<ASSIGN   8324>>IF       8348>>IF       8348>>IF       8352>>IF       8356>>IF
RES_USED
      7968**DCL      8213<<ASSIGN   8366<<ASSIGN   8415<<ASSIGN   8493>>IF       8496>>IF
RET$LEN
      8108**DCL      8163<<ASSIGN   8272<<ASSIGN   8292<<ASSIGN
SHRINK_STUFF
      8253**PROC     8367--CALL     8401--CALL     8420--CALL     8441--CALL     8461--CALL     8499--CALL
      8534--CALL     8557--CALL     8583--CALL     8593--CALL
SN
      8372**PROC     8148--CALL
SNS IN PROCEDURE SN
      8379**DCL      8380--REDEF    8457>>IF       8459>>DOINDEX
SNS_CHR IN PROCEDURE SN
      8380**DCL      8456<<ASSIGN
SN_USED
      7967**DCL      8212<<ASSIGN   8402<<ASSIGN   8421<<ASSIGN   8451<<ASSIGN   8462<<ASSIGN   8493>>IF
      8579>>IF
STAR_FILE
      7972**DCL      8223<<ASSIGN   8231<<ASSIGN   8235<<ASSIGN   8243<<ASSIGN   8247<<ASSIGN   8508>>IF
TE$XT
      8008**DCL      8211<<ASSIGN   8265<<CALLBLT  8286<<CALLBLT  8414<<CALLBLT
PL6.E3A0      #001=UMU$UNFID File=UMU$UNFID.:E05TSI                              WED 07/30/97 07:01 Page:97   
TEXT$C.LEN
      8006**DCL      8007--IMP-SIZ  8239>>IF       8239>>IF       8482>>ASSIGN
TEXT$C.STRING
      8007**DCL      8239>>IF       8482>>ASSIGN
TEXTLEN
      7976**DCL      8008--IMP-SIZ  8203<>CALL     8204>>IF       8211>>ASSIGN   8265>>CALLBLT  8268>>IF
      8272>>ASSIGN   8286>>CALLBLT  8288>>IF       8292>>ASSIGN   8414>>CALLBLT
USED_LEN
      7973**DCL      8157>>IF       8163>>ASSIGN   8214<<ASSIGN   8265>>CALLBLT  8267<<ASSIGN   8267>>ASSIGN
      8268>>IF       8286>>CALLBLT  8287<<ASSIGN   8287>>ASSIGN   8288>>IF       8413<<ASSIGN   8413>>ASSIGN
      8414>>CALLBLT
VLP$SN.SN#
      8002**DCL      8337>>IF       8457>>IF       8460>>ASSIGN
WSN
      8564**PROC     8151--CALL
